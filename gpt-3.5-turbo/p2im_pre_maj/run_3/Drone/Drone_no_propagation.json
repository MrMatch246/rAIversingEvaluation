{
    "functions": {
        "FUN_08000110": {
            "entrypoint": "0x08000110",
            "current_name": "set_flag_if_not_set_08000110",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800011c) */\n\nundefined4 setFlagIfNotSet_08000110(undefined4 value)\n\n{\n  if ((char)DAT_20000228 == '\\0') {\n    DAT_20000228._0_1_ = '\\x01';\n  }\n  return value;\n}\n\n",
            "renaming": {
                "FUN_08000110": "set_flag_if_not_set_08000110",
                "param_1": "value"
            },
            "calling": [],
            "called": [
                "FUN_080072d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000134": {
            "entrypoint": "0x08000134",
            "current_name": "concatenate_integers_08000134",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800013a) */\n\nundefined8 concatenate_integers_08000134(undefined4 first_integer,undefined4 second_integer)\n\n{\n  return CONCAT44(second_integer,first_integer);\n}\n\n",
            "renaming": {
                "FUN_08000134": "concatenate_integers_08000134",
                "param_1": "first_integer",
                "param_2": "second_integer"
            },
            "calling": [
                "FUN_08004fb4"
            ],
            "called": [
                "FUN_080072d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000150": {
            "entrypoint": "0x08000150",
            "current_name": "find_end_of_string_08000150",
            "code": "\nchar * find_end_of_string_08000150(char *string)\n\n{\n  char current_char;\n  char *next_char;\n  char *current_pos;\n  \n  current_pos = string;\n  do {\n    next_char = current_pos + 1;\n    current_char = *current_pos;\n    current_pos = next_char;\n  } while (current_char != '\\0');\n  return next_char + (-1 - (int)string);\n}\n\n",
            "renaming": {
                "FUN_08000150": "find_end_of_string_08000150",
                "param_1": "string",
                "cVar1": "current_char",
                "pcVar2": "next_char",
                "pcVar3": "current_pos"
            },
            "calling": [
                "FUN_08004c8c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000168": {
            "entrypoint": "0x08000168",
            "current_name": "calculate_08000168",
            "code": "\nulonglong calculate_08000168(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int shift1;\n  byte carry;\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint output1;\n  uint output2;\n  int shift2;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  uint temp7;\n  bool condition1;\n  bool condition2;\n  bool condition3;\n  \n  output1 = input4 ^ 0x80000000;\n  temp4 = input2 << 1;\n  input4 = input4 << 1;\n  condition1 = ((input2 ^ output1) & 0x7fffffff) == 0;\n  condition2 = condition1 && input1 == input3;\n  if (!condition1 || input1 != input3) {\n    condition2 = (temp4 | input1) == 0;\n  }\n  if (!condition2) {\n    condition2 = (input4 | input3) == 0;\n  }\n  shift2 = (int)temp4 >> 0x15;\n  if (!condition2) {\n    condition2 = shift2 == -1;\n  }\n  shift1 = (int)input4 >> 0x15;\n  if (!condition2) {\n    condition2 = shift1 == -1;\n  }\n  if (condition2) {\n    if (shift2 == -1 || shift1 == -1) {\n      temp4 = output1;\n      temp6 = input3;\n      if (shift2 == -1) {\n        temp4 = input2;\n        temp6 = input1;\n      }\n      if (shift2 != -1 || shift1 != -1) {\n        input3 = temp6;\n        output1 = temp4;\n      }\n      condition2 = (temp6 | temp4 << 0xc) == 0;\n      if (condition2) {\n        condition2 = (input3 | output1 << 0xc) == 0;\n      }\n      if (condition2) {\n        condition2 = temp4 == output1;\n      }\n      if (!condition2) {\n        temp4 = temp4 | 0x80000;\n      }\n      return CONCAT44(temp4,temp6);\n    }\n    if (((input2 ^ output1) & 0x7fffffff) != 0 || input1 != input3) {\n      if ((temp4 | input1) == 0) {\n        input1 = input3;\n        input2 = output1;\n      }\n      return CONCAT44(input2,input1);\n    }\n    if (input2 != output1) {\n      return 0;\n    }\n    if (temp4 >> 0x15 == 0) {\n      condition2 = (input1 & 0x80000000) != 0;\n      output1 = input2 * 2 + (uint)condition2;\n      if (CARRY4(input2,input2) || CARRY4(input2 * 2,(uint)condition2)) {\n        output1 = output1 | 0x80000000;\n      }\n      return CONCAT44(output1,input1 << 1);\n    }\n    if (temp4 < 0xffc00000) {\n      return CONCAT44(input2 + 0x100000,input1);\n    }\n    input2 = input2 & 0x80000000;\nLAB_080003ac:\n    return (ulonglong)(input2 | 0x7ff00000) << 0x20;\n  }\n  temp4 = temp4 >> 0x15;\n  input4 = input4 >> 0x15;\n  temp6 = input4 - temp4;\n  condition2 = temp6 != 0;\n  if (input4 < temp4) {\n    temp6 = -temp6;\n  }\n  temp5 = input1;\n  output2 = input2;\n  if (condition2 && temp4 <= input4) {\n    temp4 = temp4 + temp6;\n    temp5 = input3;\n    output2 = output1;\n    input3 = input1;\n    output1 = input2;\n  }\n  if (0x36 < temp6) {\n    return CONCAT44(output2,temp5);\n  }\n  temp2 = output2 & 0xfffff | 0x100000;\n  if ((output2 & 0x80000000) != 0) {\n    condition2 = temp5 != 0;\n    temp5 = -temp5;\n    temp2 = -temp2 - (uint)condition2;\n  }\n  output2 = output1 & 0xfffff | 0x100000;\n  if ((output1 & 0x80000000) != 0) {\n    condition2 = input3 != 0;\n    input3 = -input3;\n    output2 = -output2 - (uint)condition2;\n  }\n  if (temp4 == temp6) {\n    output2 = output2 ^ 0x100000;\n    if (temp4 == 0) {\n      temp2 = temp2 ^ 0x100000;\n      temp4 = 1;\n    }\n    else {\n      temp6 = temp6 - 1;\n    }\n  }\n  output1 = -temp6 + 0x20;\n  if ((int)temp6 < 0x21) {\n    temp7 = input3 << (output1 & 0xff);\n    input3 = input3 >> (temp6 & 0xff);\n    temp1 = temp5 + input3;\n    temp3 = output2 << (output1 & 0xff);\n    output1 = temp1 + temp3;\n    temp2 = temp2 + CARRY4(temp5,input3) + ((int)output2 >> (temp6 & 0xff)) +\n            (uint)CARRY4(temp1,temp3);\n  }\n  else {\n    temp7 = output2 << (-temp6 + 0x40 & 0xff);\n    if (input3 != 0) {\n      temp7 = temp7 | 2;\n    }\n    output2 = (int)output2 >> (temp6 - 0x20 & 0xff);\n    output1 = temp5 + output2;\n    temp2 = temp2 + ((int)output2 >> 0x1f) + (uint)CARRY4(temp5,output2);\n  }\n  input2 = temp2 & 0x80000000;\n  temp6 = temp2;\n  if ((int)temp2 < 0) {\n    condition2 = temp7 == 0;\n    temp7 = -temp7;\n    temp6 = -output1;\n    output1 = -(uint)!condition2 - output1;\n    temp6 = -(uint)(condition2 <= temp6) - temp2;\n  }\n  if (0xfffff < temp6) {\n    temp5 = temp4 - 1;\n    if (0x1fffff < temp6) {\n      temp5 = temp6 & 1;\n      temp6 = temp6 >> 1;\n      carry = (byte)output1;\n      output1 = (uint)(temp5 != 0) << 0x1f | output1 >> 1;\n      temp7 = (uint)(carry & 1) << 0x1f | temp7 >> 1;\n      temp5 = temp4;\n      if (0xffbfffff < temp4 * 0x200000) goto LAB_080003ac;\n    }\nLAB_08000278:\n    condition2 = 0x7fffffff < temp7;\n    if (temp7 == 0x80000000) {\n      condition2 = (output1 & 1) != 0;\n    }\n    return CONCAT44(temp6 + temp5 * 0x100000 + (uint)CARRY4(output1,(uint)condition2) | input2,\n                    output1 + condition2);\n  }\n  condition1 = (temp7 & 0x80000000) != 0;\n  temp7 = temp7 << 1;\n  temp5 = output1 * 2;\n  condition2 = CARRY4(output1,output1);\n  output1 = output1 * 2 + (uint)condition1;\n  temp6 = temp6 * 2 + (uint)(condition2 || CARRY4(temp5,(uint)condition1));\n  temp5 = temp4 - 2;\n  if ((temp6 & 0x100000) != 0) goto LAB_08000278;\n  output2 = output1;\n  temp4 = temp6;\n  if (temp6 == 0) {\n    output2 = 0;\n    temp4 = output1;\n  }\n  shift2 = LZCOUNT(temp4);\n  if (temp6 == 0) {\n    shift2 = shift2 + 0x20;\n  }\n  temp6 = shift2 - 0xb;\n  condition3 = SBORROW4(temp6,0x20);\n  output1 = shift2 - 0x2b;\n  condition2 = (int)output1 < 0;\n  condition1 = output1 == 0;\n  if ((int)temp6 < 0x20) {\n    condition3 = SCARRY4(output1,0xc);\n    shift2 = shift2 + -0x1f;\n    condition2 = shift2 < 0;\n    condition1 = shift2 == 0;\n    output1 = temp6;\n    if (!condition1 && condition2 == condition3) {\n      output2 = temp4 << (temp6 & 0xff);\n      temp4 = temp4 >> (0xcU - shift2 & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (condition1 || condition2 != condition3) {\n    temp7 = 0x20 - output1;\n  }\n  temp4 = temp4 << (output1 & 0xff);\n  if (condition1 || condition2 != condition3) {\n    temp4 = temp4 | output2 >> (temp7 & 0xff);\n  }\n  if (condition1 || condition2 != condition3) {\n    output2 = output2 << (output1 & 0xff);\n  }\nLAB_080002f0:\n  if ((int)temp6 <= (int)temp5) {\n    return CONCAT44(temp4 + (temp5 - temp6) * 0x100000 | input2,output2);\n  }\n  output1 = ~(temp5 - temp6);\n  if ((int)output1 < 0x1f) {\n    shift2 = output1 - 0x13;\n    if (shift2 != 0 && shift2 < 0 == SCARRY4(output1 - 0x1f,0xc)) {\n      return CONCAT44(temp2,output2 >> (0x20 - (0xcU - shift2) & 0xff) | temp4 << (0xcU - shift2 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    output1 = output1 + 1;\n    return CONCAT44(input2 | temp4 >> (output1 & 0xff),\n                    output2 >> (output1 & 0xff) | temp4 << (0x20 - output1 & 0xff));\n  }\n  return CONCAT44(temp2,temp4 >> (output1 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_08000168": "calculate_08000168",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "shift1",
                "bVar2": "carry",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "uVar5": "temp3",
                "uVar6": "output1",
                "uVar7": "output2",
                "iVar8": "shift2",
                "uVar9": "temp4",
                "uVar10": "temp5",
                "uVar11": "temp6",
                "uVar12": "temp7",
                "bVar13": "condition1",
                "bVar14": "condition2",
                "bVar15": "condition3"
            },
            "calling": [
                "FUN_08006d68",
                "FUN_08005c70",
                "FUN_080070b0",
                "FUN_08006c0c",
                "FUN_0800411c",
                "FUN_08006228",
                "FUN_08006070"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800016c": {
            "entrypoint": "0x0800016c",
            "current_name": "calculate_product_0800016c",
            "code": "\nulonglong calculateProduct_0800016c(uint operand1,uint operand2,uint operand3,uint operand4)\n\n{\n  int shiftedOperand1;\n  byte carry;\n  uint temp2;\n  uint temp1;\n  uint resultLower;\n  int shiftedOperand2;\n  uint newCarry;\n  uint resultUpper;\n  uint operand1WithCarry;\n  uint operand4WithCarry;\n  uint temp3;\n  uint temp4;\n  bool isEqAndBothZero;\n  bool isEqOrBothZero;\n  bool isShiftNegative;\n  \n  newCarry = operand2 << 1;\n  operand1WithCarry = operand4 << 1;\n  isEqAndBothZero = ((operand2 ^ operand4) & 0x7fffffff) == 0;\n  isEqOrBothZero = isEqAndBothZero && operand1 == operand3;\n  if (!isEqAndBothZero || operand1 != operand3) {\n    isEqOrBothZero = (newCarry | operand1) == 0;\n  }\n  if (!isEqOrBothZero) {\n    isEqOrBothZero = (operand1WithCarry | operand3) == 0;\n  }\n  shiftedOperand2 = (int)newCarry >> 0x15;\n  if (!isEqOrBothZero) {\n    isEqOrBothZero = shiftedOperand2 == -1;\n  }\n  shiftedOperand1 = (int)operand1WithCarry >> 0x15;\n  if (!isEqOrBothZero) {\n    isEqOrBothZero = shiftedOperand1 == -1;\n  }\n  if (isEqOrBothZero) {\n    if (shiftedOperand2 == -1 || shiftedOperand1 == -1) {\n      operand1WithCarry = operand4;\n      newCarry = operand3;\n      if (shiftedOperand2 == -1) {\n        operand1WithCarry = operand2;\n        newCarry = operand1;\n      }\n      if (shiftedOperand2 != -1 || shiftedOperand1 != -1) {\n        operand3 = newCarry;\n        operand4 = operand1WithCarry;\n      }\n      isEqOrBothZero = (newCarry | operand1WithCarry << 0xc) == 0;\n      if (isEqOrBothZero) {\n        isEqOrBothZero = (operand3 | operand4 << 0xc) == 0;\n      }\n      if (isEqOrBothZero) {\n        isEqOrBothZero = operand1WithCarry == operand4;\n      }\n      if (!isEqOrBothZero) {\n        operand1WithCarry = operand1WithCarry | 0x80000;\n      }\n      return CONCAT44(operand1WithCarry,newCarry);\n    }\n    if (((operand2 ^ operand4) & 0x7fffffff) != 0 || operand1 != operand3) {\n      if ((newCarry | operand1) == 0) {\n        operand1 = operand3;\n        operand2 = operand4;\n      }\n      return CONCAT44(operand2,operand1);\n    }\n    if (operand2 != operand4) {\n      return 0;\n    }\n    if (newCarry >> 0x15 == 0) {\n      isEqOrBothZero = (operand1 & 0x80000000) != 0;\n      operand1WithCarry = operand2 * 2 + (uint)isEqOrBothZero;\n      if (CARRY4(operand2,operand2) || CARRY4(operand2 * 2,(uint)isEqOrBothZero)) {\n        operand1WithCarry = operand1WithCarry | 0x80000000;\n      }\n      return CONCAT44(operand1WithCarry,operand1 << 1);\n    }\n    if (newCarry < 0xffc00000) {\n      return CONCAT44(operand2 + 0x100000,operand1);\n    }\n    operand2 = operand2 & 0x80000000;\nLAB_080003ac:\n    return (ulonglong)(operand2 | 0x7ff00000) << 0x20;\n  }\n  newCarry = newCarry >> 0x15;\n  operand1WithCarry = operand1WithCarry >> 0x15;\n  operand4WithCarry = operand1WithCarry - newCarry;\n  isEqOrBothZero = operand4WithCarry != 0;\n  if (operand1WithCarry < newCarry) {\n    operand4WithCarry = -operand4WithCarry;\n  }\n  resultUpper = operand1;\n  resultLower = operand2;\n  if (isEqOrBothZero && newCarry <= operand1WithCarry) {\n    newCarry = newCarry + operand4WithCarry;\n    resultUpper = operand3;\n    resultLower = operand4;\n    operand3 = operand1;\n    operand4 = operand2;\n  }\n  if (0x36 < operand4WithCarry) {\n    return CONCAT44(resultLower,resultUpper);\n  }\n  operand1WithCarry = resultLower & 0xfffff | 0x100000;\n  if ((resultLower & 0x80000000) != 0) {\n    isEqOrBothZero = resultUpper != 0;\n    resultUpper = -resultUpper;\n    operand1WithCarry = -operand1WithCarry - (uint)isEqOrBothZero;\n  }\n  resultLower = operand4 & 0xfffff | 0x100000;\n  if ((operand4 & 0x80000000) != 0) {\n    isEqOrBothZero = operand3 != 0;\n    operand3 = -operand3;\n    resultLower = -resultLower - (uint)isEqOrBothZero;\n  }\n  if (newCarry == operand4WithCarry) {\n    resultLower = resultLower ^ 0x100000;\n    if (newCarry == 0) {\n      operand1WithCarry = operand1WithCarry ^ 0x100000;\n      newCarry = 1;\n    }\n    else {\n      operand4WithCarry = operand4WithCarry - 1;\n    }\n  }\n  temp4 = -operand4WithCarry + 0x20;\n  if ((int)operand4WithCarry < 0x21) {\n    temp3 = operand3 << (temp4 & 0xff);\n    operand3 = operand3 >> (operand4WithCarry & 0xff);\n    temp2 = resultUpper + operand3;\n    temp1 = resultLower << (temp4 & 0xff);\n    temp4 = temp2 + temp1;\n    operand1WithCarry = operand1WithCarry + CARRY4(resultUpper,operand3) + ((int)resultLower >> (operand4WithCarry & 0xff)) +\n            (uint)CARRY4(temp2,temp1);\n  }\n  else {\n    temp3 = resultLower << (-operand4WithCarry + 0x40 & 0xff);\n    if (operand3 != 0) {\n      temp3 = temp3 | 2;\n    }\n    resultLower = (int)resultLower >> (operand4WithCarry - 0x20 & 0xff);\n    temp4 = resultUpper + resultLower;\n    operand1WithCarry = operand1WithCarry + ((int)resultLower >> 0x1f) + (uint)CARRY4(resultUpper,resultLower);\n  }\n  operand2 = operand1WithCarry & 0x80000000;\n  operand4WithCarry = operand1WithCarry;\n  if ((int)operand1WithCarry < 0) {\n    isEqOrBothZero = temp3 == 0;\n    temp3 = -temp3;\n    operand4WithCarry = -temp4;\n    temp4 = -(uint)!isEqOrBothZero - temp4;\n    operand4WithCarry = -(uint)(isEqOrBothZero <= operand4WithCarry) - operand1WithCarry;\n  }\n  if (0xfffff < operand4WithCarry) {\n    resultUpper = newCarry - 1;\n    if (0x1fffff < operand4WithCarry) {\n      operand1WithCarry = operand4WithCarry & 1;\n      operand4WithCarry = operand4WithCarry >> 1;\n      carry = (byte)temp4;\n      temp4 = (uint)(operand1WithCarry != 0) << 0x1f | temp4 >> 1;\n      temp3 = (uint)(carry & 1) << 0x1f | temp3 >> 1;\n      resultUpper = newCarry;\n      if (0xffbfffff < newCarry * 0x200000) goto LAB_080003ac;\n    }\nLAB_08000278:\n    isEqOrBothZero = 0x7fffffff < temp3;\n    if (temp3 == 0x80000000) {\n      isEqOrBothZero = (temp4 & 1) != 0;\n    }\n    return CONCAT44(operand4WithCarry + resultUpper * 0x100000 + (uint)CARRY4(temp4,(uint)isEqOrBothZero) | operand2,\n                    temp4 + isEqOrBothZero);\n  }\n  isEqAndBothZero = (temp3 & 0x80000000) != 0;\n  temp3 = temp3 << 1;\n  resultUpper = temp4 * 2;\n  isEqOrBothZero = CARRY4(temp4,temp4);\n  temp4 = temp4 * 2 + (uint)isEqAndBothZero;\n  operand4WithCarry = operand4WithCarry * 2 + (uint)(isEqOrBothZero || CARRY4(resultUpper,(uint)isEqAndBothZero));\n  resultUpper = newCarry - 2;\n  if ((operand4WithCarry & 0x100000) != 0) goto LAB_08000278;\n  resultLower = temp4;\n  newCarry = operand4WithCarry;\n  if (operand4WithCarry == 0) {\n    resultLower = 0;\n    newCarry = temp4;\n  }\n  shiftedOperand2 = LZCOUNT(newCarry);\n  if (operand4WithCarry == 0) {\n    shiftedOperand2 = shiftedOperand2 + 0x20;\n  }\n  temp4 = shiftedOperand2 - 0xb;\n  isShiftNegative = SBORROW4(temp4,0x20);\n  operand4WithCarry = shiftedOperand2 - 0x2b;\n  isEqOrBothZero = (int)operand4WithCarry < 0;\n  isEqAndBothZero = operand4WithCarry == 0;\n  if ((int)temp4 < 0x20) {\n    isShiftNegative = SCARRY4(operand4WithCarry,0xc);\n    shiftedOperand2 = shiftedOperand2 + -0x1f;\n    isEqOrBothZero = shiftedOperand2 < 0;\n    isEqAndBothZero = shiftedOperand2 == 0;\n    operand4WithCarry = temp4;\n    if (!isEqAndBothZero && isEqOrBothZero == isShiftNegative) {\n      resultLower = newCarry << (temp4 & 0xff);\n      newCarry = newCarry >> (0xcU - shiftedOperand2 & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (isEqAndBothZero || isEqOrBothZero != isShiftNegative) {\n    temp3 = 0x20 - operand4WithCarry;\n  }\n  newCarry = newCarry << (operand4WithCarry & 0xff);\n  if (isEqAndBothZero || isEqOrBothZero != isShiftNegative) {\n    newCarry = newCarry | resultLower >> (temp3 & 0xff);\n  }\n  if (isEqAndBothZero || isEqOrBothZero != isShiftNegative) {\n    resultLower = resultLower << (operand4WithCarry & 0xff);\n  }\nLAB_080002f0:\n  if ((int)temp4 <= (int)resultUpper) {\n    return CONCAT44(newCarry + (resultUpper - temp4) * 0x100000 | operand2,resultLower);\n  }\n  operand4WithCarry = ~(resultUpper - temp4);\n  if ((int)operand4WithCarry < 0x1f) {\n    shiftedOperand2 = operand4WithCarry - 0x13;\n    if (shiftedOperand2 != 0 && shiftedOperand2 < 0 == SCARRY4(operand4WithCarry - 0x1f,0xc)) {\n      return CONCAT44(operand1WithCarry,resultLower >> (0x20 - (0xcU - shiftedOperand2) & 0xff) | newCarry << (0xcU - shiftedOperand2 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    operand4WithCarry = operand4WithCarry + 1;\n    return CONCAT44(operand2 | newCarry >> (operand4WithCarry & 0xff),\n                    resultLower >> (operand4WithCarry & 0xff) | newCarry << (0x20 - operand4WithCarry & 0xff));\n  }\n  return CONCAT44(operand1WithCarry,newCarry >> (operand4WithCarry - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800016c": "calculate_product_0800016c",
                "param_1": "operand1",
                "param_2": "operand2",
                "param_3": "operand3",
                "param_4": "operand4",
                "iVar1": "shiftedOperand1",
                "bVar2": "carry",
                "uVar3": "temp2",
                "uVar4": "temp1",
                "uVar5": "resultLower",
                "iVar6": "shiftedOperand2",
                "uVar7": "newCarry",
                "uVar8": "resultUpper",
                "uVar9": "operand1WithCarry",
                "uVar10": "operand4WithCarry",
                "uVar11": "temp3",
                "uVar12": "temp4",
                "bVar13": "isEqAndBothZero",
                "bVar14": "isEqOrBothZero",
                "bVar15": "isShiftNegative"
            },
            "calling": [
                "FUN_080071c0",
                "FUN_08006d68",
                "FUN_08005c70",
                "FUN_080070b0",
                "FUN_08006c0c",
                "FUN_08006228",
                "FUN_08006070"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000404": {
            "entrypoint": "0x08000404",
            "current_name": "reverse_and_shift_bits_08000404",
            "code": "\nulonglong reverseAndShiftBits_08000404(uint input)\n\n{\n  uint countLeadingZeros;\n  uint absInput;\n  uint shiftAmount;\n  int leadingZeros;\n  uint finalShiftAmount;\n  uint signBit;\n  uint remainingBits;\n  bool isNegative;\n  bool isZero;\n  bool isCarry;\n  \n  if (input == 0) {\n    return 0;\n  }\n  signBit = input & 0x80000000;\n  absInput = input;\n  if ((int)signBit < 0) {\n    absInput = -input;\n  }\n  countLeadingZeros = 0;\n  leadingZeros = LZCOUNT(absInput);\n  finalShiftAmount = leadingZeros + 0x15;\n  isCarry = isSubtractionOverflow(finalShiftAmount,0x20);\n  shiftAmount = leadingZeros - 0xb;\n  isNegative = (int)shiftAmount < 0;\n  isZero = shiftAmount == 0;\n  if (finalShiftAmount < 0x20) {\n    isCarry = isSubtractionCarry(shiftAmount,0xc);\n    isNegative = false;\n    isZero = leadingZeros + 1 == 0;\n    shiftAmount = finalShiftAmount;\n    if (!isZero && isCarry == false) {\n      countLeadingZeros = absInput << finalShiftAmount;\n      absInput = absInput >> (0xcU - (leadingZeros + 1) & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (isZero || isNegative != isCarry) {\n    remainingBits = 0x20 - shiftAmount;\n  }\n  absInput = absInput << (shiftAmount & 0xff);\n  if (isZero || isNegative != isCarry) {\n    absInput = absInput | 0U >> (remainingBits & 0xff);\n  }\n  if (isZero || isNegative != isCarry) {\n    countLeadingZeros = 0 << (shiftAmount & 0xff);\n  }\nLAB_080002f0:\n  if (finalShiftAmount < 0x433) {\n    return CONCAT44(absInput + (0x432 - finalShiftAmount) * 0x100000 | signBit,countLeadingZeros);\n  }\n  shiftAmount = ~(0x432 - finalShiftAmount);\n  if (0x1e < (int)shiftAmount) {\n    return CONCAT44(input,absInput >> (shiftAmount - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  leadingZeros = shiftAmount - 0x13;\n  if (leadingZeros == 0 || leadingZeros < 0 != isSubtractionCarry(shiftAmount - 0x1f,0xc)) {\n    shiftAmount = shiftAmount + 1;\n    return CONCAT44(signBit | absInput >> (shiftAmount & 0xff),\n                    countLeadingZeros >> (shiftAmount & 0xff) | absInput << (0x20 - shiftAmount & 0xff));\n  }\n  return CONCAT44(input,countLeadingZeros >> (0x20 - (0xcU - leadingZeros) & 0xff) | absInput << (0xcU - leadingZeros & 0xff))\n         & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_08000404": "reverse_and_shift_bits_08000404",
                "param_1": "input",
                "uVar1": "countLeadingZeros",
                "uVar2": "absInput",
                "uVar3": "shiftAmount",
                "iVar4": "leadingZeros",
                "uVar5": "finalShiftAmount",
                "uVar6": "signBit",
                "in_r12": "remainingBits",
                "bVar7": "isNegative",
                "bVar8": "isZero",
                "bVar9": "isCarry",
                "SCARRY4": "isSubtractionCarry",
                "SBORROW4": "isSubtractionOverflow"
            },
            "calling": [
                "FUN_08006228"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000428": {
            "entrypoint": "0x08000428",
            "current_name": "reverse_bits_08000428",
            "code": "\nulonglong reverseBits_08000428(uint input,undefined4 unused_1,undefined4 unused_2,uint unused_3)\n\n{\n  uint shifted;\n  uint result;\n  uint mask;\n  uint shifted_2;\n  uint temp;\n  int count;\n  uint shift_amount;\n  uint remainder;\n  bool bit_1;\n  bool bit_2;\n  bool overflow;\n  \n  temp = input << 1;\n  bit_2 = temp == 0;\n  shifted = (uint)((input & 0x80000000) != 0) << 0x1f;\n  shifted_2 = (uint)((int)temp >> 3) >> 1;\n  mask = shifted | shifted_2;\n  input = input << 0x1d;\n  if (!bit_2) {\n    unused_3 = temp & 0xff000000;\n    bit_2 = unused_3 == 0;\n  }\n  if (!bit_2) {\n    bit_2 = unused_3 == 0xff000000;\n  }\n  if (!bit_2) {\n    return CONCAT44(mask,input) ^ 0x3800000000000000;\n  }\n  if (temp == 0 || unused_3 == 0xff000000) {\n    return CONCAT44(mask,input);\n  }\n  result = input;\n  temp = shifted_2;\n  if (shifted_2 == 0) {\n    result = 0;\n    temp = input;\n  }\n  count = LZCOUNT(temp);\n  if (shifted_2 == 0) {\n    count = count + 0x20;\n  }\n  shift_amount = count - 0xb;\n  overflow = SBORROW4(shift_amount,0x20);\n  shifted_2 = count - 0x2b;\n  bit_2 = (int)shifted_2 < 0;\n  bit_1 = shifted_2 == 0;\n  if ((int)shift_amount < 0x20) {\n    overflow = SCARRY4(shifted_2,0xc);\n    count = count + -0x1f;\n    bit_2 = count < 0;\n    bit_1 = count == 0;\n    shifted_2 = shift_amount;\n    if (!bit_1 && bit_2 == overflow) {\n      result = temp << (shift_amount & 0xff);\n      temp = temp >> (0xcU - count & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (bit_1 || bit_2 != overflow) {\n    remainder = 0x20 - shifted_2;\n  }\n  temp = temp << (shifted_2 & 0xff);\n  if (bit_1 || bit_2 != overflow) {\n    temp = temp | result >> (remainder & 0xff);\n  }\n  if (bit_1 || bit_2 != overflow) {\n    result = result << (shifted_2 & 0xff);\n  }\nLAB_080002f0:\n  if ((int)shift_amount < 0x381) {\n    return CONCAT44(temp + (0x380 - shift_amount) * 0x100000 | shifted,result);\n  }\n  shifted_2 = ~(0x380 - shift_amount);\n  if ((int)shifted_2 < 0x1f) {\n    count = shifted_2 - 0x13;\n    if (count != 0 && count < 0 == SCARRY4(shifted_2 - 0x1f,0xc)) {\n      return CONCAT44(mask,result >> (0x20 - (0xcU - count) & 0xff) | temp << (0xcU - count & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    shifted_2 = shifted_2 + 1;\n    return CONCAT44(shifted | temp >> (shifted_2 & 0xff),\n                    result >> (shifted_2 & 0xff) | temp << (0x20 - shifted_2 & 0xff));\n  }\n  return CONCAT44(mask,temp >> (shifted_2 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_08000428": "reverse_bits_08000428",
                "param_1": "input",
                "param_2": "unused_1",
                "param_3": "unused_2",
                "param_4": "unused_3",
                "uVar1": "shifted",
                "uVar2": "result",
                "uVar3": "mask",
                "uVar4": "shifted_2",
                "uVar5": "temp",
                "iVar6": "count",
                "uVar7": "shift_amount",
                "in_r12": "remainder",
                "bVar8": "bit_1",
                "bVar9": "bit_2",
                "bVar10": "overflow"
            },
            "calling": [
                "FUN_0800411c",
                "FUN_08003330"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080004d0": {
            "entrypoint": "0x080004d0",
            "current_name": "calculate_product_080004d0",
            "code": "\nulonglong calculateProduct_080004d0(undefined4 value1,uint value2,uint value3,uint value4)\n\n{\n  ulonglong result1;\n  longlong result2;\n  uint temp1;\n  uint temp2;\n  int temp3;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  uint temp7;\n  bool flag1;\n  bool flag2;\n  bool flag3;\n  ulonglong combinedValues;\n  \n  combinedValues = CONCAT44(value2,value1);\n  temp6 = 0x7ff;\n  temp2 = value2 >> 0x14 & 0x7ff;\n  flag1 = temp2 == 0;\n  if (!flag1) {\n    temp5 = value4 >> 0x14 & 0x7ff;\n    flag1 = temp5 == 0;\n  }\n  if (!flag1) {\n    flag1 = temp2 == 0x7ff;\n  }\n  if (!flag1) {\n    flag1 = temp5 == 0x7ff;\n  }\n  if (flag1) {\n    combinedValues = FUN_080006ac();\n  }\n  temp1 = (uint)(combinedValues >> 0x20);\n  temp3 = temp2 + temp5;\n  temp2 = temp1 ^ value4;\n  temp1 = temp1 & ~(temp6 << 0x15);\n  value4 = value4 & ~(temp6 << 0x15);\n  flag1 = ((uint)combinedValues | temp1 << 0xc) == 0;\n  if (!flag1) {\n    flag1 = (value3 | value4 << 0xc) == 0;\n  }\n  temp1 = temp1 | 0x100000;\n  value4 = value4 | 0x100000;\n  if (flag1) {\n    value3 = (uint)combinedValues | value3;\n    value4 = (temp2 & 0x80000000 | temp1) ^ value4;\n    temp2 = temp6 >> 1;\n    flag3 = SBORROW4(temp3,temp2);\n    temp4 = temp3 - temp2;\n    flag1 = temp4 == 0;\n    temp1 = temp4;\n    if (!flag1 && (int)temp2 <= temp3) {\n      flag3 = SBORROW4(temp6,temp4);\n      temp1 = temp6 - temp4;\n      flag1 = temp6 == temp4;\n    }\n    if (!flag1 && (int)temp1 < 0 == flag3) {\n      value4 = value4 | temp4 * 0x100000;\n    }\n    if (!flag1 && (int)temp1 < 0 == flag3) {\n      return CONCAT44(value4,value3);\n    }\n    value4 = value4 | 0x100000;\n    temp6 = 0;\n    flag3 = SBORROW4(temp4,1);\n    temp4 = temp4 - 1;\n    flag1 = temp4 == 0;\n    temp2 = temp4;\n  }\n  else {\n    result1 = (combinedValues & 0xffffffff) * (ulonglong)value3;\n    combinedValues = (combinedValues & 0xffffffff) * (ulonglong)value4 +\n             (ulonglong)temp1 * (ulonglong)value3 + (result1 >> 0x20);\n    temp7 = (uint)combinedValues;\n    result2 = (ulonglong)temp1 * (ulonglong)value4 + (combinedValues >> 0x20);\n    temp6 = (uint)result2;\n    temp1 = (uint)((ulonglong)result2 >> 0x20);\n    if ((int)result1 != 0) {\n      temp7 = temp7 | 1;\n    }\n    temp4 = (temp3 + -0x3ff) - (uint)(temp1 < 0x200);\n    if (temp1 < 0x200) {\n      flag1 = (temp7 & 0x80000000) != 0;\n      temp7 = temp7 << 1;\n      result2 = CONCAT44(temp1 * 2 + (uint)(CARRY4(temp6,temp6) || CARRY4(temp6 * 2,(uint)flag1)),\n                       temp6 * 2 + (uint)flag1);\n    }\n    value4 = temp2 & 0x80000000 | (int)((ulonglong)result2 >> 0x20) << 0xb | (uint)result2 >> 0x15;\n    value3 = (uint)result2 << 0xb | temp7 >> 0x15;\n    temp6 = temp7 * 0x800;\n    flag2 = 0xfc < temp4;\n    flag3 = SBORROW4(temp4,0xfd);\n    temp1 = temp4 - 0xfd;\n    flag1 = temp1 == 0;\n    temp2 = temp1;\n    if (flag2 && !flag1) {\n      flag2 = 0x6ff < temp1;\n      flag3 = SBORROW4(temp1,0x700);\n      temp2 = temp4 - 0x7fd;\n      flag1 = temp1 == 0x700;\n    }\n    if (!flag2 || flag1) {\n      flag1 = 0x7fffffff < temp6;\n      if (temp6 == 0x80000000) {\n        flag1 = (temp7 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(value4 + temp4 * 0x100000 + (uint)CARRY4(value3,(uint)flag1),value3 + flag1\n                     );\n    }\n  }\n  if (!flag1 && (int)temp2 < 0 == flag3) {\n    return (ulonglong)(value4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  flag2 = SCARRY4(temp4,0x36);\n  flag1 = (int)(temp4 + 0x36) < 0;\n  flag3 = temp4 == 0xffffffca;\n  if (flag3 || flag1 != flag2) {\n    value3 = 0;\n  }\n  if (flag3 || flag1 != flag2) {\n    value4 = value4 & 0x80000000;\n  }\n  if (flag3 || flag1 != flag2) {\n    return CONCAT44(value4,value3);\n  }\n  temp2 = -temp4;\n  temp1 = temp2 - 0x20;\n  if (0x1f < (int)temp2) {\n    temp4 = value3 >> (temp1 & 0xff) | value4 << (0x20 - temp1 & 0xff);\n    temp2 = (value4 >> (temp1 & 0xff) & ~((value4 & 0x80000000) >> (temp1 & 0xff))) -\n            ((int)temp4 >> 0x1f);\n    if ((temp6 | value3 << (0x20 - temp1 & 0xff) | temp4 << 1) == 0) {\n      temp2 = temp2 & ~(temp4 >> 0x1f);\n    }\n    return CONCAT44(value4,temp2) & 0x80000000ffffffff;\n  }\n  temp3 = temp2 - 0x14;\n  if (temp3 == 0 || temp3 < 0 != SCARRY4(temp1,0xc)) {\n    temp7 = value3 << (temp4 + 0x20 & 0xff);\n    temp1 = value3 >> (temp2 & 0xff) | value4 << (temp4 + 0x20 & 0xff);\n    temp4 = temp1 + -((int)temp7 >> 0x1f);\n    if ((temp6 | temp7 << 1) == 0) {\n      temp4 = temp4 & ~(temp7 >> 0x1f);\n    }\n    return CONCAT44((value4 & 0x80000000) +\n                    ((value4 & 0x7fffffff) >> (temp2 & 0xff)) +\n                    (uint)CARRY4(temp1,-((int)temp7 >> 0x1f)),temp4);\n  }\n  temp2 = 0xc - temp3;\n  temp4 = value3 << (temp2 & 0xff);\n  temp2 = value3 >> (0x20 - temp2 & 0xff) | value4 << (temp2 & 0xff);\n  temp1 = temp2 + -((int)temp4 >> 0x1f);\n  if ((temp6 | temp4 << 1) == 0) {\n    temp1 = temp1 & ~(temp4 >> 0x1f);\n  }\n  return CONCAT44((value4 & 0x80000000) + (uint)CARRY4(temp2,-((int)temp4 >> 0x1f)),temp1);\n}\n\n",
            "renaming": {
                "FUN_080004d0": "calculate_product_080004d0",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4",
                "uVar1": "result1",
                "lVar2": "result2",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "iVar5": "temp3",
                "uVar6": "temp4",
                "unaff_r5": "temp5",
                "uVar7": "temp6",
                "uVar8": "temp7",
                "bVar9": "flag1",
                "bVar10": "flag2",
                "bVar11": "flag3",
                "uVar12": "combinedValues"
            },
            "calling": [
                "FUN_080071c0",
                "FUN_08006d68",
                "FUN_08005c70",
                "FUN_08005900",
                "FUN_08006c0c",
                "FUN_0800411c",
                "FUN_08006228",
                "FUN_08003330"
            ],
            "called": [
                "FUN_080006ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080006ac": {
            "entrypoint": "0x080006ac",
            "current_name": "calculate_bitwise_operation_080006ac",
            "code": "\nulonglong calculate_bitwise_operation_080006ac(uint input1,uint input2,uint input3,uint input4)\n\n{\n  uint bit1;\n  uint bit2;\n  uint bit3;\n  uint bit4;\n  uint bit5;\n  bool is_zero;\n  \n  bit3 = bit5 & input4 >> 0x14;\n  if (bit2 != bit5 && bit3 != bit5) {\n    is_zero = (input1 | input2 << 1) == 0;\n    if (!is_zero) {\n      is_zero = (input3 | input4 << 1) == 0;\n    }\n    if (is_zero) {\n      return (ulonglong)((input2 ^ input4) & 0x80000000) << 0x20;\n    }\n    if (bit2 == 0) {\n      bit4 = input2 & 0x80000000;\n      do {\n        bit1 = input1 & 0x80000000;\n        input1 = input1 << 1;\n        input2 = input2 * 2 + (uint)(bit1 != 0);\n      } while ((input2 & 0x100000) == 0);\n      input2 = input2 | bit4;\n      if (bit3 != 0) {\n        return CONCAT44(input2,input1);\n      }\n    }\n    do {\n      bit3 = input3 & 0x80000000;\n      input3 = input3 << 1;\n      input4 = input4 * 2 + (uint)(bit3 != 0);\n    } while ((input4 & 0x100000) == 0);\n    return CONCAT44(input2,input1);\n  }\n  is_zero = (input1 | input2 << 1) == 0;\n  if (is_zero) {\n    input2 = input4;\n    input1 = input3;\n  }\n  if (!is_zero) {\n    is_zero = (input3 | input4 << 1) == 0;\n  }\n  bit4 = input2;\n  if (((!is_zero) && ((bit2 != bit5 || ((input1 | input2 << 0xc) == 0)))) &&\n     ((bit3 != bit5 || (input1 = input3, bit4 = input4, (input3 | input4 << 0xc) == 0)))) {\n    return (ulonglong)((input2 ^ input4) & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  return CONCAT44(bit4,input1) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_080006ac": "calculate_bitwise_operation_080006ac",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "bit1",
                "unaff_r4": "bit2",
                "uVar2": "bit3",
                "uVar3": "bit4",
                "in_r12": "bit5",
                "bVar4": "is_zero"
            },
            "calling": [
                "FUN_080004d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000724": {
            "entrypoint": "0x08000724",
            "current_name": "calculate_floating_point_08000724",
            "code": "\nulonglong calculateFloatingPoint_08000724(undefined4 sign,uint exponent,uint mantissa,uint data)\n\n{\n  uint signBits;\n  uint exponentBits;\n  uint temp;\n  uint temp2;\n  uint shiftAmount;\n  uint roundingBits;\n  uint resultSign;\n  int difference;\n  uint temp3;\n  uint dataBits;\n  uint dataExponent;\n  uint resultMantissa;\n  uint temp4;\n  uint MAX_EXPONENT;\n  bool isZeroExp;\n  bool isZeroExp2;\n  bool isNegExp;\n  undefined8 signBits7;\n  \n  signBits7 = CONCAT44(exponent,sign);\n  MAX_EXPONENT = 0x7ff;\n  resultSign = exponent >> 0x14 & 0x7ff;\n  isZeroExp = resultSign == 0;\n  if (!isZeroExp) {\n    dataBits = data >> 0x14 & 0x7ff;\n    isZeroExp = dataBits == 0;\n  }\n  if (!isZeroExp) {\n    isZeroExp = resultSign == 0x7ff;\n  }\n  if (!isZeroExp) {\n    isZeroExp = dataBits == 0x7ff;\n  }\n  if (isZeroExp) {\n    signBits7 = FUN_08000892();\n  }\n  temp3 = (uint)((ulonglong)signBits7 >> 0x20);\n  resultMantissa = (uint)signBits7;\n  difference = resultSign - dataBits;\n  if ((mantissa | data << 0xc) == 0) {\n    resultSign = (temp3 ^ data) & 0x80000000 | temp3 & 0xfffff;\n    isNegExp = SCARRY4(difference,MAX_EXPONENT >> 1);\n    temp3 = difference + (MAX_EXPONENT >> 1);\n    isZeroExp = (int)temp3 < 0;\n    isZeroExp2 = temp3 == 0;\n    if (!isZeroExp2 && isZeroExp == isNegExp) {\n      isNegExp = SBORROW4(MAX_EXPONENT,temp3);\n      isZeroExp = (int)(MAX_EXPONENT - temp3) < 0;\n      isZeroExp2 = MAX_EXPONENT == temp3;\n    }\n    if (!isZeroExp2 && isZeroExp == isNegExp) {\n      resultSign = resultSign | temp3 * 0x100000;\n    }\n    if (!isZeroExp2 && isZeroExp == isNegExp) {\n      return CONCAT44(resultSign,resultMantissa);\n    }\n    resultSign = resultSign | 0x100000;\n    MAX_EXPONENT = 0;\n    isZeroExp2 = SBORROW4(temp3,1);\n    temp3 = temp3 - 1;\n    isZeroExp = temp3 == 0;\n    temp = temp3;\n  }\n  else {\n    temp = (data << 0xc) >> 4 | 0x10000000 | mantissa >> 0x18;\n    MAX_EXPONENT = mantissa << 8;\n    dataExponent = (temp3 << 0xc) >> 4 | 0x10000000 | resultMantissa >> 0x18;\n    resultMantissa = resultMantissa * 0x100;\n    resultSign = (temp3 ^ data) & 0x80000000;\n    isZeroExp = temp <= dataExponent;\n    if (dataExponent == temp) {\n      isZeroExp = MAX_EXPONENT <= resultMantissa;\n    }\n    difference = difference + (uint)isZeroExp;\n    temp3 = difference + 0x3fd;\n    if (isZeroExp == false) {\n      temp = temp >> 1;\n      MAX_EXPONENT = (uint)((mantissa >> 0x18 & 1) != 0) << 0x1f | MAX_EXPONENT >> 1;\n    }\n    temp4 = resultMantissa - MAX_EXPONENT;\n    dataExponent = (dataExponent - temp) - (uint)(resultMantissa < MAX_EXPONENT);\n    temp2 = temp >> 1;\n    signBits = (uint)((temp & 1) != 0) << 0x1f | MAX_EXPONENT >> 1;\n    resultMantissa = 0x100000;\n    temp = 0x80000;\n    while( true ) {\n      isZeroExp = signBits <= temp4;\n      if (temp2 < dataExponent || dataExponent - temp2 < (uint)isZeroExp) {\n        temp4 = temp4 - signBits;\n        resultMantissa = resultMantissa | temp;\n        dataExponent = (dataExponent - temp2) - (uint)!isZeroExp;\n      }\n      shiftAmount = temp2 >> 1;\n      signBits = (uint)((temp2 & 1) != 0) << 0x1f | signBits >> 1;\n      isZeroExp2 = signBits <= temp4;\n      isZeroExp = dataExponent - shiftAmount < (uint)isZeroExp2;\n      MAX_EXPONENT = dataExponent;\n      if (shiftAmount < dataExponent || isZeroExp) {\n        temp4 = temp4 - signBits;\n        MAX_EXPONENT = (dataExponent - shiftAmount) - (uint)!isZeroExp2;\n      }\n      if (shiftAmount < dataExponent || isZeroExp) {\n        resultMantissa = resultMantissa | temp >> 1;\n      }\n      dataExponent = temp2 >> 2;\n      exponentBits = (uint)((shiftAmount & 1) != 0) << 0x1f | signBits >> 1;\n      isZeroExp2 = exponentBits <= temp4;\n      isZeroExp = MAX_EXPONENT - dataExponent < (uint)isZeroExp2;\n      shiftAmount = MAX_EXPONENT;\n      if (dataExponent < MAX_EXPONENT || isZeroExp) {\n        temp4 = temp4 - exponentBits;\n        shiftAmount = (MAX_EXPONENT - dataExponent) - (uint)!isZeroExp2;\n      }\n      if (dataExponent < MAX_EXPONENT || isZeroExp) {\n        resultMantissa = resultMantissa | temp >> 2;\n      }\n      roundingBits = temp2 >> 3;\n      signBits = (uint)((dataExponent & 1) != 0) << 0x1f | exponentBits >> 1;\n      isZeroExp2 = signBits <= temp4;\n      isZeroExp = shiftAmount - roundingBits < (uint)isZeroExp2;\n      dataExponent = shiftAmount;\n      if (roundingBits < shiftAmount || isZeroExp) {\n        temp4 = temp4 - signBits;\n        dataExponent = (shiftAmount - roundingBits) - (uint)!isZeroExp2;\n      }\n      if (roundingBits < shiftAmount || isZeroExp) {\n        resultMantissa = resultMantissa | temp >> 3;\n      }\n      MAX_EXPONENT = dataExponent | temp4;\n      if (MAX_EXPONENT == 0) break;\n      dataExponent = dataExponent << 4 | temp4 >> 0x1c;\n      temp4 = temp4 << 4;\n      temp2 = temp2 & 0xfffffff8 | signBits >> 0x1d;\n      signBits = (exponentBits >> 1) << 3;\n      temp = temp >> 4;\n      if (temp == 0) {\n        roundingBits = temp2;\n        if ((resultSign & 0x100000) != 0) goto LAB_08000842;\n        resultSign = resultSign | resultMantissa;\n        resultMantissa = 0;\n        temp = 0x80000000;\n      }\n    }\n    if ((resultSign & 0x100000) == 0) {\n      resultSign = resultSign | resultMantissa;\n      resultMantissa = 0;\n    }\nLAB_08000842:\n    isNegExp = 0xfc < temp3;\n    isZeroExp2 = SBORROW4(temp3,0xfd);\n    temp2 = difference + 0x300;\n    isZeroExp = temp2 == 0;\n    temp = temp2;\n    if (isNegExp && !isZeroExp) {\n      isNegExp = 0x6ff < temp2;\n      isZeroExp2 = SBORROW4(temp2,0x700);\n      temp = difference - 0x400;\n      isZeroExp = temp2 == 0x700;\n    }\n    if (!isNegExp || isZeroExp) {\n      isZeroExp = roundingBits <= dataExponent;\n      if (dataExponent == roundingBits) {\n        isZeroExp = signBits <= temp4;\n      }\n      if (dataExponent == roundingBits && temp4 == signBits) {\n        isZeroExp = (resultMantissa & 1) != 0;\n      }\n      return CONCAT44(resultSign + temp3 * 0x100000 + (uint)CARRY4(resultMantissa,(uint)isZeroExp),resultMantissa + isZeroExp);\n    }\n  }\n  if (!isZeroExp && (int)temp < 0 == isZeroExp2) {\n    return (ulonglong)(resultSign & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  isNegExp = SCARRY4(temp3,0x36);\n  isZeroExp = (int)(temp3 + 0x36) < 0;\n  isZeroExp2 = temp3 == 0xffffffca;\n  if (isZeroExp2 || isZeroExp != isNegExp) {\n    resultMantissa = 0;\n  }\n  if (isZeroExp2 || isZeroExp != isNegExp) {\n    resultSign = resultSign & 0x80000000;\n  }\n  if (isZeroExp2 || isZeroExp != isNegExp) {\n    return CONCAT44(resultSign,resultMantissa);\n  }\n  temp = -temp3;\n  dataExponent = temp - 0x20;\n  if (0x1f < (int)temp) {\n    temp = resultMantissa >> (dataExponent & 0xff) | resultSign << (0x20 - dataExponent & 0xff);\n    temp3 = (resultSign >> (dataExponent & 0xff) & ~((resultSign & 0x80000000) >> (dataExponent & 0xff))) -\n            ((int)temp >> 0x1f);\n    if ((MAX_EXPONENT | resultMantissa << (0x20 - dataExponent & 0xff) | temp << 1) == 0) {\n      temp3 = temp3 & ~(temp >> 0x1f);\n    }\n    return CONCAT44(resultSign,temp3) & 0x80000000ffffffff;\n  }\n  difference = temp - 0x14;\n  if (difference != 0 && difference < 0 == SCARRY4(dataExponent,0xc)) {\n    temp3 = 0xc - difference;\n    temp = resultMantissa << (temp3 & 0xff);\n    resultMantissa = resultMantissa >> (0x20 - temp3 & 0xff) | resultSign << (temp3 & 0xff);\n    temp3 = resultMantissa + -((int)temp >> 0x1f);\n    if ((MAX_EXPONENT | temp << 1) == 0) {\n      temp3 = temp3 & ~(temp >> 0x1f);\n    }\n    return CONCAT44((resultSign & 0x80000000) + (uint)CARRY4(resultMantissa,-((int)temp >> 0x1f)),temp3);\n  }\n  dataExponent = resultMantissa << (temp3 + 0x20 & 0xff);\n  resultMantissa = resultMantissa >> (temp & 0xff) | resultSign << (temp3 + 0x20 & 0xff);\n  temp3 = resultMantissa + -((int)dataExponent >> 0x1f);\n  if ((MAX_EXPONENT | dataExponent << 1) == 0) {\n    temp3 = temp3 & ~(dataExponent >> 0x1f);\n  }\n  return CONCAT44((resultSign & 0x80000000) +\n                  ((resultSign & 0x7fffffff) >> (temp & 0xff)) +\n                  (uint)CARRY4(resultMantissa,-((int)dataExponent >> 0x1f)),temp3);\n}\n\n",
            "renaming": {
                "FUN_08000724": "calculate_floating_point_08000724",
                "param_1": "sign",
                "param_2": "exponent",
                "param_3": "mantissa",
                "param_4": "data",
                "uVar1": "signBits",
                "uVar2": "exponentBits",
                "uVar3": "temp",
                "uVar4": "temp2",
                "uVar5": "shiftAmount",
                "uVar6": "roundingBits",
                "uVar7": "resultSign",
                "iVar8": "difference",
                "uVar9": "temp3",
                "unaff_r5": "dataBits",
                "uVar10": "dataExponent",
                "uVar11": "resultMantissa",
                "uVar12": "temp4",
                "uVar13": "MAX_EXPONENT",
                "bVar14": "isZeroExp",
                "bVar15": "isZeroExp2",
                "bVar16": "isNegExp"
            },
            "calling": [
                "FUN_08006d68",
                "FUN_08005c70",
                "FUN_08005900",
                "FUN_08006c0c",
                "FUN_08005bc8",
                "FUN_08006228",
                "FUN_08003330",
                "FUN_08006070"
            ],
            "called": [
                "FUN_08000892"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000892": {
            "entrypoint": "0x08000892",
            "current_name": "calculate_double_precision_08000892",
            "code": "\nulonglong calculate_double_precision_08000892(uint input_1,uint input_2,uint input_3,uint input_4)\n\n{\n  uint bit1;\n  uint temporary_1;\n  uint temporary_2;\n  uint temporary_3;\n  uint constant_1;\n  bool is_zero;\n  \n  temporary_2 = constant_1 & input_4 >> 0x14;\n  temporary_3 = input_2;\n  if (temporary_1 != constant_1 || temporary_2 != constant_1) {\n    if (temporary_1 == constant_1) {\n      if (((input_1 | input_2 << 0xc) == 0) && (input_1 = input_3, temporary_3 = input_4, temporary_2 != constant_1)\n         ) {\nreturn_case_1:\n        return (ulonglong)((input_2 ^ input_4) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n    }\n    else if (temporary_2 == constant_1) {\n      input_1 = input_3;\n      temporary_3 = input_4;\n      if ((input_3 | input_4 << 0xc) == 0) {\nreturn_case_2:\n        return (ulonglong)((input_2 ^ input_4) & 0x80000000) << 0x20;\n      }\n    }\n    else {\n      is_zero = (input_1 | input_2 << 1) == 0;\n      if (!is_zero) {\n        is_zero = (input_3 | input_4 << 1) == 0;\n      }\n      if (!is_zero) {\n        if (temporary_1 == 0) {\n          temporary_3 = input_2 & 0x80000000;\n          do {\n            bit1 = input_1 & 0x80000000;\n            input_1 = input_1 << 1;\n            input_2 = input_2 * 2 + (uint)(bit1 != 0);\n          } while ((input_2 & 0x100000) == 0);\n          input_2 = input_2 | temporary_3;\n          if (temporary_2 != 0) {\n            return CONCAT44(input_2,input_1);\n          }\n        }\n        do {\n          temporary_3 = input_3 & 0x80000000;\n          input_3 = input_3 << 1;\n          input_4 = input_4 * 2 + (uint)(temporary_3 != 0);\n        } while ((input_4 & 0x100000) == 0);\n        return CONCAT44(input_2,input_1);\n      }\n      if ((input_1 | input_2 << 1) != 0) goto return_case_1;\n      if ((input_3 | input_4 << 1) != 0) goto return_case_2;\n    }\n  }\n  return CONCAT44(temporary_3,input_1) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_08000892": "calculate_double_precision_08000892",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "bit1",
                "unaff_r4": "temporary_1",
                "uVar2": "temporary_2",
                "uVar3": "temporary_3",
                "in_r12": "constant_1",
                "bVar4": "is_zero",
                "LAB_08000704": "return_case_1",
                "LAB_080006c8": "return_case_2"
            },
            "calling": [
                "FUN_08000724"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000904": {
            "entrypoint": "0x08000904",
            "current_name": "check_equality_and_comparison_08000904",
            "code": "\nuint checkEqualityAndComparison_08000904(uint num1,uint num2,uint num3,uint num4)\n\n{\n  uint xorResult;\n  bool isZero;\n  bool isNegative;\n  \n  if (((int)(num2 << 1) >> 0x15 == -1 || (int)(num4 << 1) >> 0x15 == -1) &&\n     ((((int)(num2 << 1) >> 0x15 == -1 && ((num1 | num2 << 0xc) != 0)) ||\n      (((int)(num4 << 1) >> 0x15 == -1 && ((num3 | num4 << 0xc) != 0)))))) {\n    return 1;\n  }\n  isZero = (num1 | num2 << 1) == 0;\n  if (isZero) {\n    isZero = (num3 | num4 << 1) == 0;\n  }\n  if (!isZero) {\n    isZero = num2 == num4;\n  }\n  if (isZero) {\n    isZero = num1 == num3;\n  }\n  if (!isZero) {\n    xorResult = num2 ^ num4;\n    isZero = xorResult == 0;\n    if (-1 < (int)xorResult) {\n      isZero = num2 == num4;\n    }\n    isNegative = -1 < (int)xorResult && num4 <= num2;\n    if (isZero) {\n      isNegative = num3 <= num1;\n    }\n    num4 = (int)num4 >> 0x1f;\n    if (!isNegative) {\n      num4 = ~num4;\n    }\n    return num4 | 1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08000904": "check_equality_and_comparison_08000904",
                "param_1": "num1",
                "param_2": "num2",
                "param_3": "num3",
                "param_4": "num4",
                "uVar1": "xorResult",
                "bVar2": "isZero",
                "bVar3": "isNegative"
            },
            "calling": [
                "FUN_08000990"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000980": {
            "entrypoint": "0x08000980",
            "current_name": "call_another_function_08000980",
            "code": "\nvoid callAnotherFunction_08000980(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  FUN_08000990(input3,input4,input1,input2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000980": "call_another_function_08000980",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4"
            },
            "calling": [
                "FUN_080009f0"
            ],
            "called": [
                "FUN_08000990"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000990": {
            "entrypoint": "0x08000990",
            "current_name": "initialize_application_08000990",
            "code": "\nundefined4 initialize_application_08000990(undefined4 input_parameter)\n\n{\n  FUN_08000904();\n  return input_parameter;\n}\n\n",
            "renaming": {
                "FUN_08000990": "initialize_application_08000990",
                "param_1": "input_parameter"
            },
            "calling": [
                "FUN_08000980",
                "FUN_080009c8",
                "FUN_080009a0",
                "FUN_080009b4"
            ],
            "called": [
                "FUN_08000904"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009a0": {
            "entrypoint": "0x080009a0",
            "current_name": "check_zero_flag_080009a0",
            "code": "\nbool checkZeroFlag_080009a0(void)\n\n{\n  char isZero;\n  \n  FUN_08000990();\n  return isZero != '\\0';\n}\n\n",
            "renaming": {
                "FUN_080009a0": "check_zero_flag_080009a0",
                "in_ZR": "isZero"
            },
            "calling": [
                "FUN_08005900"
            ],
            "called": [
                "FUN_08000990"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009b4": {
            "entrypoint": "0x080009b4",
            "current_name": "is_null_terminated_080009b4",
            "code": "\nbool is_null_terminated_080009b4(void)\n\n{\n  char input_character;\n  \n  FUN_08000990();\n  return input_character == '\\0';\n}\n\n",
            "renaming": {
                "FUN_080009b4": "is_null_terminated_080009b4",
                "in_CY": "input_character"
            },
            "calling": [
                "FUN_08005900",
                "FUN_08005bc8"
            ],
            "called": [
                "FUN_08000990"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009c8": {
            "entrypoint": "0x080009c8",
            "current_name": "check_cy_zr_080009c8",
            "code": "\nbool check_CY_ZR_080009c8(void)\n\n{\n  undefined zero_flag;\n  undefined carry_flag;\n  \n  FUN_08000990();\n  return !(bool)carry_flag || (bool)zero_flag;\n}\n\n",
            "renaming": {
                "FUN_080009c8": "check_cy_zr_080009c8",
                "in_ZR": "zero_flag",
                "in_CY": "carry_flag"
            },
            "calling": [
                "FUN_08006228"
            ],
            "called": [
                "FUN_08000990"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009f0": {
            "entrypoint": "0x080009f0",
            "current_name": "check_if_null_terminated_080009f0",
            "code": "\nbool check_if_null_terminated_080009f0(void)\n\n{\n  char input_char;\n  \n  FUN_08000980();\n  return input_char == '\\0';\n}\n\n",
            "renaming": {
                "FUN_080009f0": "check_if_null_terminated_080009f0",
                "in_CY": "input_char"
            },
            "calling": [
                "FUN_08006d68",
                "FUN_08005c70",
                "FUN_08005854",
                "FUN_08006228"
            ],
            "called": [
                "FUN_08000980"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a04": {
            "entrypoint": "0x08000a04",
            "current_name": "check_parameters_08000a04",
            "code": "\nundefined4 check_parameters_08000a04(uint input1,int input2,uint input3,int input4)\n\n{\n  if ((((input2 << 1) >> 0x15 != -1) || ((input1 | input2 << 0xc) == 0)) &&\n     (((input4 << 1) >> 0x15 != -1 || ((input3 | input4 << 0xc) == 0)))) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08000a04": "check_parameters_08000a04",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4"
            },
            "calling": [
                "FUN_08005900",
                "FUN_08005854",
                "FUN_08005bc8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a30": {
            "entrypoint": "0x08000a30",
            "current_name": "calculate_float_value_08000a30",
            "code": "\nuint calculateFloatValue_08000a30(uint inputValue,uint multiplier)\n\n{\n  uint result;\n  uint doubleMultiplier;\n  uint adjustedMultiplier;\n  uint tempVar;\n  bool isZero;\n  bool isLessThan70000000;\n  \n  doubleMultiplier = multiplier * 2;\n  isLessThan70000000 = doubleMultiplier < 0x70000000;\n  adjustedMultiplier = doubleMultiplier + 0x90000000;\n  result = adjustedMultiplier;\n  if (!isLessThan70000000) {\n    tempVar = doubleMultiplier + 0x8fe00000;\n    result = tempVar;\n  }\n  isZero = result == 0;\n  if (!isLessThan70000000 && adjustedMultiplier >= 0x200000) {\n    isZero = tempVar == 0x1fc00000;\n  }\n  if (((isLessThan70000000 || adjustedMultiplier < 0x200000) || 0x1fc00000 < tempVar) || isZero) {\n    if ((multiplier & 0x40000000) != 0) {\n      if (((int)doubleMultiplier >> 0x15 == -1) && ((inputValue | multiplier << 0xc) != 0)) {\n        return 0x7fc00000;\n      }\n      return multiplier & 0x80000000 | 0x7f800000;\n    }\n    if ((int)(doubleMultiplier + 0x92e00000) < 0 != SCARRY4(adjustedMultiplier,0x2e00000)) {\n      return multiplier & 0x80000000;\n    }\n    doubleMultiplier = 0x18 - (doubleMultiplier + 0x92e00000 >> 0x15);\n    result = inputValue >> (doubleMultiplier & 0xff);\n    if (inputValue << (0x20 - doubleMultiplier & 0xff) != 0) {\n      result = result | 1;\n    }\n    adjustedMultiplier = multiplier & 0x1fffff | 0x100000;\n    inputValue = result | adjustedMultiplier << (0x20 - doubleMultiplier & 0xff);\n    adjustedMultiplier = (adjustedMultiplier >> (doubleMultiplier & 0xff)) << 1;\n  }\n  result = (multiplier & 0x80000000 | inputValue >> 0x1d) + adjustedMultiplier * 4 + (uint)(0x7fffffff < inputValue * 8);\n  if (inputValue * 8 == 0x80000000) {\n    result = result & 0xfffffffe;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08000a30": "calculate_float_value_08000a30",
                "param_1": "inputValue",
                "param_2": "multiplier",
                "uVar1": "result",
                "uVar2": "doubleMultiplier",
                "uVar3": "adjustedMultiplier",
                "in_r12": "tempVar",
                "bVar4": "isZero",
                "bVar5": "isLessThan70000000"
            },
            "calling": [
                "FUN_0800411c",
                "FUN_08003330"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000ad8": {
            "entrypoint": "0x08000ad8",
            "current_name": "calculate_float_08000ad8",
            "code": "\nuint calculateFloat_08000ad8(uint inputA,uint inputB,undefined4 inputC,uint inputD)\n\n{\n  int shiftedInputA;\n  int shiftedInputB;\n  uint bitwiseXor;\n  uint shiftedBitwiseXor;\n  uint shiftedInputA;\n  uint shiftedResult;\n  uint difference;\n  bool isEqual;\n  \n  bitwiseXor = inputB ^ 0x80000000;\n  shiftedInputA = inputA << 1;\n  isEqual = shiftedInputA == 0;\n  if (!isEqual) {\n    inputD = inputB << 1;\n    isEqual = inputD == 0;\n  }\n  if (!isEqual) {\n    isEqual = shiftedInputA == inputD;\n  }\n  shiftedInputA = (int)shiftedInputA >> 0x18;\n  if (!isEqual) {\n    isEqual = shiftedInputA == -1;\n  }\n  if (!isEqual) {\n    isEqual = (int)inputD >> 0x18 == -1;\n  }\n  if (isEqual) {\n    shiftedInputB = (int)(inputB << 1) >> 0x18;\n    if (shiftedInputA == -1 || shiftedInputB == -1) {\n      shiftedInputA = bitwiseXor;\n      if (shiftedInputA == -1) {\n        shiftedInputA = inputA;\n      }\n      if (shiftedInputA != -1 || shiftedInputB != -1) {\n        bitwiseXor = shiftedInputA;\n      }\n      isEqual = (shiftedInputA & 0x7fffff) == 0;\n      if (isEqual) {\n        isEqual = (bitwiseXor & 0x7fffff) == 0;\n      }\n      if (isEqual) {\n        isEqual = shiftedInputA == bitwiseXor;\n      }\n      if (!isEqual) {\n        shiftedInputA = shiftedInputA | 0x400000;\n      }\n      return shiftedInputA;\n    }\n    if (((inputA ^ bitwiseXor) & 0x7fffffff) != 0) {\n      if (shiftedInputA == 0) {\n        inputA = bitwiseXor;\n      }\n      return inputA;\n    }\n    if (inputA != bitwiseXor) {\n      return 0;\n    }\n    if ((shiftedInputA & 0xff000000) == 0) {\n      bitwiseXor = inputA << 1;\n      if ((inputA & 0x80000000) != 0) {\n        bitwiseXor = bitwiseXor | 0x80000000;\n      }\n      return bitwiseXor;\n    }\n    if (shiftedInputA < 0xfe000000) {\n      return inputA + 0x800000;\n    }\n    inputA = inputA & 0x80000000;\nLAB_08000c12:\n    return inputA | 0x7f800000;\n  }\n  shiftedInputA = shiftedInputA >> 0x18;\n  inputD = inputD >> 0x18;\n  difference = inputD - shiftedInputA;\n  isEqual = difference != 0;\n  shiftedResult = shiftedInputA;\n  if (isEqual && shiftedInputA <= inputD) {\n    shiftedResult = shiftedInputA + difference;\n  }\n  if (isEqual && shiftedInputA <= inputD) {\n    bitwiseXor = bitwiseXor ^ inputA;\n  }\n  if (isEqual && shiftedInputA <= inputD) {\n    inputA = inputA ^ bitwiseXor;\n  }\n  if (isEqual && shiftedInputA <= inputD) {\n    bitwiseXor = bitwiseXor ^ inputA;\n  }\n  if (inputD < shiftedInputA) {\n    difference = -difference;\n  }\n  if (0x19 < difference) {\n    return inputA;\n  }\n  shiftedInputA = inputA & 0xffffff | 0x800000;\n  if ((inputA & 0x80000000) != 0) {\n    shiftedInputA = -shiftedInputA;\n  }\n  shiftedBitwiseXor = bitwiseXor & 0xffffff | 0x800000;\n  if ((bitwiseXor & 0x80000000) != 0) {\n    shiftedBitwiseXor = -shiftedBitwiseXor;\n  }\n  if (shiftedResult == difference) {\n    shiftedBitwiseXor = shiftedBitwiseXor ^ 0x800000;\n    if (shiftedResult == 0) {\n      shiftedInputA = shiftedInputA ^ 0x800000;\n      shiftedResult = 1;\n    }\n    else {\n      difference = difference - 1;\n    }\n  }\n  shiftedInputA = shiftedInputA + ((int)shiftedBitwiseXor >> (difference & 0xff));\n  shiftedBitwiseXor = shiftedBitwiseXor << (0x20 - difference & 0xff);\n  inputA = shiftedInputA & 0x80000000;\n  if ((int)shiftedInputA < 0) {\n    isEqual = shiftedBitwiseXor != 0;\n    shiftedBitwiseXor = -shiftedBitwiseXor;\n    shiftedInputA = -shiftedInputA - (uint)isEqual;\n  }\n  if (shiftedInputA < 0x800000) {\n    bitwiseXor = shiftedBitwiseXor & 0x80000000;\n    shiftedBitwiseXor = shiftedBitwiseXor << 1;\n    shiftedInputA = shiftedInputA * 2 + (uint)(bitwiseXor != 0);\n    bitwiseXor = shiftedResult - 2;\n    if ((shiftedInputA & 0x800000) == 0) {\n      difference = LZCOUNT(shiftedInputA) - 8;\n      shiftedInputA = shiftedInputA << (difference & 0xff);\n      if ((int)bitwiseXor < (int)difference) {\n        shiftedInputA = shiftedInputA >> (-(bitwiseXor - difference) & 0xff);\n      }\n      else {\n        shiftedInputA = shiftedInputA + (bitwiseXor - difference) * 0x800000;\n      }\n      return shiftedInputA | inputA;\n    }\n  }\n  else {\n    bitwiseXor = shiftedResult - 1;\n    if (0xffffff < shiftedInputA) {\n      bitwiseXor = shiftedInputA & 1;\n      shiftedInputA = shiftedInputA >> 1;\n      shiftedBitwiseXor = (uint)(bitwiseXor != 0) << 0x1f | shiftedBitwiseXor >> 1;\n      bitwiseXor = shiftedResult;\n      if (0xfd < shiftedResult) goto LAB_08000c12;\n    }\n  }\n  shiftedInputA = shiftedInputA + bitwiseXor * 0x800000 + (uint)(0x7fffffff < shiftedBitwiseXor);\n  if (shiftedBitwiseXor == 0x80000000) {\n    shiftedInputA = shiftedInputA & 0xfffffffe;\n  }\n  return shiftedInputA | inputA;\n}\n\n",
            "renaming": {
                "FUN_08000ad8": "calculate_float_08000ad8",
                "param_1": "inputA",
                "param_2": "inputB",
                "param_3": "inputC",
                "param_4": "inputD",
                "iVar1": "shiftedInputA",
                "iVar2": "shiftedInputB",
                "uVar3": "bitwiseXor",
                "uVar4": "shiftedBitwiseXor",
                "uVar5": "shiftedInputA",
                "uVar6": "shiftedResult",
                "uVar7": "difference",
                "bVar8": "isEqual"
            },
            "calling": [
                "FUN_0800426c",
                "FUN_08002ee8",
                "FUN_08002d88",
                "FUN_08003330",
                "FUN_0800483c",
                "FUN_08002bf0",
                "FUN_08002ec0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000adc": {
            "entrypoint": "0x08000adc",
            "current_name": "convert_float_to_binary_08000adc",
            "code": "\nuint convertFloatToBinary_08000adc(uint firstFloat,uint secondFloat,undefined4 param3,uint param4)\n\n{\n  int exponent1;\n  int exponent2;\n  uint mantissa1;\n  uint mantissa2;\n  uint difference;\n  uint absDifference;\n  bool isEqual;\n  \n  mantissa2 = firstFloat << 1;\n  isEqual = mantissa2 == 0;\n  if (!isEqual) {\n    param4 = secondFloat << 1;\n    isEqual = param4 == 0;\n  }\n  if (!isEqual) {\n    isEqual = mantissa2 == param4;\n  }\n  exponent1 = (int)mantissa2 >> 0x18;\n  if (!isEqual) {\n    isEqual = exponent1 == -1;\n  }\n  if (!isEqual) {\n    isEqual = (int)param4 >> 0x18 == -1;\n  }\n  if (isEqual) {\n    exponent2 = (int)(secondFloat << 1) >> 0x18;\n    if (exponent1 == -1 || exponent2 == -1) {\n      mantissa2 = secondFloat;\n      if (exponent1 == -1) {\n        mantissa2 = firstFloat;\n      }\n      if (exponent1 != -1 || exponent2 != -1) {\n        secondFloat = mantissa2;\n      }\n      isEqual = (mantissa2 & 0x7fffff) == 0;\n      if (isEqual) {\n        isEqual = (secondFloat & 0x7fffff) == 0;\n      }\n      if (isEqual) {\n        isEqual = mantissa2 == secondFloat;\n      }\n      if (!isEqual) {\n        mantissa2 = mantissa2 | 0x400000;\n      }\n      return mantissa2;\n    }\n    if (((firstFloat ^ secondFloat) & 0x7fffffff) != 0) {\n      if (mantissa2 == 0) {\n        firstFloat = secondFloat;\n      }\n      return firstFloat;\n    }\n    if (firstFloat != secondFloat) {\n      return 0;\n    }\n    if ((mantissa2 & 0xff000000) == 0) {\n      mantissa2 = firstFloat << 1;\n      if ((firstFloat & 0x80000000) != 0) {\n        mantissa2 = mantissa2 | 0x80000000;\n      }\n      return mantissa2;\n    }\n    if (mantissa2 < 0xfe000000) {\n      return firstFloat + 0x800000;\n    }\n    firstFloat = firstFloat & 0x80000000;\nLAB_08000c12:\n    return firstFloat | 0x7f800000;\n  }\n  mantissa2 = mantissa2 >> 0x18;\n  param4 = param4 >> 0x18;\n  absDifference = param4 - mantissa2;\n  isEqual = absDifference != 0;\n  difference = mantissa2;\n  if (isEqual && mantissa2 <= param4) {\n    difference = mantissa2 + absDifference;\n  }\n  if (isEqual && mantissa2 <= param4) {\n    secondFloat = secondFloat ^ firstFloat;\n  }\n  if (isEqual && mantissa2 <= param4) {\n    firstFloat = firstFloat ^ secondFloat;\n  }\n  if (isEqual && mantissa2 <= param4) {\n    secondFloat = secondFloat ^ firstFloat;\n  }\n  if (param4 < mantissa2) {\n    absDifference = -absDifference;\n  }\n  if (0x19 < absDifference) {\n    return firstFloat;\n  }\n  mantissa2 = firstFloat & 0xffffff | 0x800000;\n  if ((firstFloat & 0x80000000) != 0) {\n    mantissa2 = -mantissa2;\n  }\n  mantissa1 = secondFloat & 0xffffff | 0x800000;\n  if ((secondFloat & 0x80000000) != 0) {\n    mantissa1 = -mantissa1;\n  }\n  if (difference == absDifference) {\n    mantissa1 = mantissa1 ^ 0x800000;\n    if (difference == 0) {\n      mantissa2 = mantissa2 ^ 0x800000;\n      difference = 1;\n    }\n    else {\n      absDifference = absDifference - 1;\n    }\n  }\n  mantissa2 = mantissa2 + ((int)mantissa1 >> (absDifference & 0xff));\n  mantissa1 = mantissa1 << (0x20 - absDifference & 0xff);\n  firstFloat = mantissa2 & 0x80000000;\n  if ((int)mantissa2 < 0) {\n    isEqual = mantissa1 != 0;\n    mantissa1 = -mantissa1;\n    mantissa2 = -mantissa2 - (uint)isEqual;\n  }\n  if (mantissa2 < 0x800000) {\n    absDifference = mantissa1 & 0x80000000;\n    mantissa1 = mantissa1 << 1;\n    mantissa2 = mantissa2 * 2 + (uint)(absDifference != 0);\n    absDifference = difference - 2;\n    if ((mantissa2 & 0x800000) == 0) {\n      difference = LZCOUNT(mantissa2) - 8;\n      mantissa2 = mantissa2 << (difference & 0xff);\n      if ((int)absDifference < (int)difference) {\n        mantissa2 = mantissa2 >> (-(absDifference - difference) & 0xff);\n      }\n      else {\n        mantissa2 = mantissa2 + (absDifference - difference) * 0x800000;\n      }\n      return mantissa2 | firstFloat;\n    }\n  }\n  else {\n    absDifference = difference - 1;\n    if (0xffffff < mantissa2) {\n      absDifference = mantissa2 & 1;\n      mantissa2 = mantissa2 >> 1;\n      mantissa1 = (uint)(absDifference != 0) << 0x1f | mantissa1 >> 1;\n      absDifference = difference;\n      if (0xfd < difference) goto LAB_08000c12;\n    }\n  }\n  mantissa2 = mantissa2 + absDifference * 0x800000 + (uint)(0x7fffffff < mantissa1);\n  if (mantissa1 == 0x80000000) {\n    mantissa2 = mantissa2 & 0xfffffffe;\n  }\n  return mantissa2 | firstFloat;\n}\n\n",
            "renaming": {
                "FUN_08000adc": "convert_float_to_binary_08000adc",
                "param_1": "firstFloat",
                "param_2": "secondFloat",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "exponent1",
                "iVar2": "exponent2",
                "uVar3": "mantissa1",
                "uVar4": "mantissa2",
                "uVar5": "difference",
                "uVar6": "absDifference",
                "bVar7": "isEqual"
            },
            "calling": [
                "FUN_0800426c",
                "FUN_08004a84",
                "FUN_08002ee8",
                "FUN_0800411c",
                "FUN_08002cb0",
                "FUN_08003330",
                "FUN_0800483c",
                "FUN_08002ec0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000c3c": {
            "entrypoint": "0x08000c3c",
            "current_name": "calculate_modified_value_08000c3c",
            "code": "\nuint calculateModifiedValue_08000c3c(uint inputValue)\n\n{\n  uint leadingZerosCount;\n  uint shiftAmount;\n  int constantValue;\n  uint computationResult;\n  \n  if (inputValue == 0) {\n    return 0;\n  }\n  leadingZerosCount = LZCOUNT(inputValue);\n  shiftAmount = leadingZerosCount - 8;\n  constantValue = shiftAmount * -0x800000 + 0x4a800000;\n  if (7 < leadingZerosCount) {\n    computationResult = 0 << (shiftAmount & 0xff);\n    leadingZerosCount = constantValue + (inputValue << (shiftAmount & 0xff)) +\n            (0U >> (0x20 - shiftAmount & 0xff)) + (uint)(0x7fffffff < computationResult);\n    if (computationResult == 0x80000000) {\n      leadingZerosCount = leadingZerosCount & 0xfffffffe;\n    }\n    return leadingZerosCount;\n  }\n  shiftAmount = inputValue << leadingZerosCount + 0x18;\n  leadingZerosCount = constantValue + ((inputValue >> (0x20 - (leadingZerosCount + 0x18) & 0xff)) - ((int)shiftAmount >> 0x1f));\n  if ((shiftAmount & 0x7fffffff) == 0) {\n    leadingZerosCount = leadingZerosCount & ~(shiftAmount >> 0x1f);\n  }\n  return leadingZerosCount;\n}\n\n",
            "renaming": {
                "FUN_08000c3c": "calculate_modified_value_08000c3c",
                "param_1": "inputValue",
                "uVar1": "leadingZerosCount",
                "uVar2": "shiftAmount",
                "iVar3": "constantValue",
                "uVar4": "computationResult"
            },
            "calling": [
                "FUN_08002f28"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000c44": {
            "entrypoint": "0x08000c44",
            "current_name": "calculate_unsigned_value_08000c44",
            "code": "\nuint calculateUnsignedValue_08000c44(uint value)\n\n{\n  uint leadingZeros;\n  uint shift;\n  uint mask;\n  int result;\n  \n  mask = value & 0x80000000;\n  if ((int)mask < 0) {\n    value = -value;\n  }\n  if (value == 0) {\n    return 0;\n  }\n  leadingZeros = countLeadingZeros(value);\n  shift = leadingZeros - 8;\n  result = ((mask | 0x4b000000) - 0x800000) + shift * -0x800000;\n  if (7 < leadingZeros) {\n    leadingZeros = 0 << (shift & 0xff);\n    mask = result + (value << (shift & 0xff)) +\n            (0U >> (0x20 - shift & 0xff)) + (uint)(0x7fffffff < leadingZeros);\n    if (leadingZeros == 0x80000000) {\n      mask = mask & 0xfffffffe;\n    }\n    return mask;\n  }\n  shift = value << leadingZeros + 0x18;\n  mask = result + ((value >> (0x20 - (leadingZeros + 0x18) & 0xff)) - ((int)shift >> 0x1f));\n  if ((shift & 0x7fffffff) == 0) {\n    mask = mask & ~(shift >> 0x1f);\n  }\n  return mask;\n}\n\n",
            "renaming": {
                "FUN_08000c44": "calculate_unsigned_value_08000c44",
                "param_1": "value",
                "uVar1": "leadingZeros",
                "uVar2": "shift",
                "uVar3": "mask",
                "iVar4": "result",
                "LZCOUNT": "countLeadingZeros"
            },
            "calling": [
                "FUN_08002b48",
                "FUN_0800411c",
                "FUN_08002d88",
                "FUN_08002cb0",
                "FUN_0800483c",
                "FUN_08002bf0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000cec": {
            "entrypoint": "0x08000cec",
            "current_name": "calculate_floating_point_08000cec",
            "code": "\nuint calculateFloatingPoint_08000cec(uint number1,uint number2,undefined4 someValue,uint anotherValue)\n\n{\n  longlong result;\n  uint floatingPoint;\n  uint exponent1;\n  int exponentSum;\n  int exponentDifference;\n  uint product;\n  int loopCounter1;\n  uint result;\n  bool flag1;\n  bool flag2;\n  \n  exponent1 = number1 >> 0x17 & 0xff;\n  flag1 = exponent1 == 0;\n  if (!flag1) {\n    anotherValue = number2 >> 0x17 & 0xff;\n    flag1 = anotherValue == 0;\n  }\n  if (!flag1) {\n    flag1 = exponent1 == 0xff;\n  }\n  if (!flag1) {\n    flag1 = anotherValue == 0xff;\n  }\n  if (flag1) {\n    anotherValue = number2 >> 0x17 & 0xff;\n    if (exponent1 == 0xff || anotherValue == 0xff) {\n      flag1 = number1 == 0 || number1 == 0x80000000;\n      floatingPoint = number2;\n      if (number1 != 0 && number1 != 0x80000000) {\n        flag1 = number2 == 0;\n        floatingPoint = number1;\n      }\n      if (!flag1) {\n        flag1 = number2 == 0x80000000;\n      }\n      result = floatingPoint;\n      if (((flag1) || ((exponent1 == 0xff && ((floatingPoint & 0x7fffff) != 0)))) ||\n         ((anotherValue == 0xff && (result = number2, (number2 & 0x7fffff) != 0)))) {\n        return result | 0x7fc00000;\n      }\n      floatingPoint = floatingPoint ^ number2;\n      goto LAB_08000e3c;\n    }\n    flag1 = (number1 & 0x7fffffff) == 0;\n    if (!flag1) {\n      flag1 = (number2 & 0x7fffffff) == 0;\n    }\n    if (flag1) {\n      return (number1 ^ number2) & 0x80000000;\n    }\n    flag1 = exponent1 == 0;\n    floatingPoint = number1 & 0x80000000;\n    while( true ) {\n      if (flag1) {\n        number1 = number1 << 1;\n        flag1 = (number1 & 0x800000) == 0;\n      }\n      if (!flag1) break;\n      exponent1 = exponent1 - 1;\n    }\n    number1 = number1 | floatingPoint;\n    flag1 = anotherValue == 0;\n    floatingPoint = number2 & 0x80000000;\n    while( true ) {\n      if (flag1) {\n        number2 = number2 << 1;\n        flag1 = (number2 & 0x800000) == 0;\n      }\n      if (!flag1) break;\n      anotherValue = anotherValue - 1;\n    }\n    number2 = number2 | floatingPoint;\n  }\n  exponentSum = exponent1 + anotherValue;\n  result = number1 ^ number2;\n  exponent1 = number1 << 9;\n  flag1 = exponent1 == 0;\n  if (!flag1) {\n    number2 = number2 << 9;\n    flag1 = number2 == 0;\n  }\n  if (flag1) {\n    if (exponent1 == 0) {\n      number2 = number2 << 9;\n    }\n    floatingPoint = result & 0x80000000 | number1 & 0x7fffff | number2 >> 9;\n    flag2 = SBORROW4(exponentSum,0x7f);\n    exponentDifference = exponentSum + -0x7f;\n    flag1 = exponentDifference == 0;\n    loopCounter1 = exponentDifference;\n    if (!flag1 && 0x7e < exponentSum) {\n      flag2 = SBORROW4(0xff,exponentDifference);\n      loopCounter1 = 0xff - exponentDifference;\n      flag1 = exponentDifference == 0xff;\n    }\n    if (!flag1 && loopCounter1 < 0 == flag2) {\n      floatingPoint = floatingPoint | exponentDifference * 0x800000;\n    }\n    if (!flag1 && loopCounter1 < 0 == flag2) {\n      return floatingPoint;\n    }\n    floatingPoint = floatingPoint | 0x800000;\n    product = 0;\n    flag2 = SBORROW4(exponentDifference,1);\n    result = exponentSum - 0x80;\n    flag1 = result == 0;\n    exponent1 = result;\n  }\n  else {\n    result = (ulonglong)(exponent1 >> 5 | 0x8000000) * (ulonglong)(number2 >> 5 | 0x8000000);\n    product = (uint)result;\n    floatingPoint = (uint)((ulonglong)result >> 0x20);\n    flag1 = floatingPoint < 0x800000;\n    if (flag1) {\n      floatingPoint = floatingPoint << 1;\n    }\n    if (flag1) {\n      floatingPoint = floatingPoint | product >> 0x1f;\n      product = product << 1;\n    }\n    floatingPoint = result & 0x80000000 | floatingPoint;\n    result = (exponentSum + -0x7f) - (uint)flag1;\n    flag2 = SBORROW4(result,0xfd);\n    flag1 = result == 0xfd;\n    exponent1 = result - 0xfd;\n    if (result < 0xfe) {\n      floatingPoint = floatingPoint + result * 0x800000 + (uint)(0x7fffffff < product);\n      if (product == 0x80000000) {\n        floatingPoint = floatingPoint & 0xfffffffe;\n      }\n      return floatingPoint;\n    }\n  }\n  if (flag1 || (int)exponent1 < 0 != flag2) {\n    flag1 = (int)(result + 0x19) < 0;\n    if (result == 0xffffffe7 || flag1 != SCARRY4(result,0x19)) {\n      floatingPoint = floatingPoint & 0x80000000;\n    }\n    if (result != 0xffffffe7 && flag1 == SCARRY4(result,0x19)) {\n      exponent1 = (floatingPoint << 1) >> (-result & 0xff);\n      result = floatingPoint << (result + 0x20 & 0xff);\n      exponent1 = ((uint)((floatingPoint & 0x80000000) != 0) << 0x1f | exponent1 >> 1) + (uint)((byte)exponent1 & 1);\n      if ((product | result << 1) == 0) {\n        exponent1 = exponent1 & ~(result >> 0x1f);\n      }\n      return exponent1;\n    }\n    return floatingPoint;\n  }\nLAB_08000e3c:\n  return floatingPoint & 0x80000000 | 0x7f800000;\n}\n\n",
            "renaming": {
                "FUN_08000cec": "calculate_floating_point_08000cec",
                "param_1": "number1",
                "param_2": "number2",
                "param_3": "someValue",
                "param_4": "anotherValue",
                "lVar1": "result",
                "uVar2": "floatingPoint",
                "uVar3": "exponent1",
                "iVar4": "exponentSum",
                "iVar5": "exponentDifference",
                "uVar6": "product",
                "iVar7": "loopCounter1",
                "uVar8": "result",
                "bVar9": "flag1",
                "bVar10": "flag2"
            },
            "calling": [
                "FUN_08004a30",
                "FUN_08002b48",
                "FUN_08004a84",
                "FUN_08002d88",
                "FUN_08002cb0",
                "FUN_08003330",
                "FUN_0800483c",
                "FUN_08002f28",
                "FUN_08002bf0",
                "FUN_08002ec0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000e54": {
            "entrypoint": "0x08000e54",
            "current_name": "calculate_float_08000e54",
            "code": "\nuint calculateFloat_08000e54(uint input1,uint input2,undefined4 undefined,uint input3)\n\n{\n  uint var1;\n  uint var2;\n  int var3;\n  uint var4;\n  int var5;\n  uint var6;\n  bool isZero;\n  bool isCarry;\n  bool isBorrow;\n  \n  var2 = input1 >> 0x17 & 0xff;\n  isZero = var2 == 0;\n  if (!isZero) {\n    input3 = input2 >> 0x17 & 0xff;\n    isZero = input3 == 0;\n  }\n  if (!isZero) {\n    isZero = var2 == 0xff;\n  }\n  if (!isZero) {\n    isZero = input3 == 0xff;\n  }\n  if (isZero) {\n    input3 = input2 >> 0x17 & 0xff;\n    var6 = input1;\n    if (var2 == 0xff) {\n      if (((input1 & 0x7fffff) != 0) || (var6 = input2, input3 == 0xff)) {\nLAB_08000e4a:\n        return var6 | 0x7fc00000;\n      }\n    }\n    else {\n      if (input3 == 0xff) {\n        var6 = input2;\n        if ((input2 & 0x7fffff) == 0) {\nLAB_08000e00:\n          return (input1 ^ input2) & 0x80000000;\n        }\n        goto LAB_08000e4a;\n      }\n      isZero = (input1 & 0x7fffffff) == 0;\n      if (!isZero) {\n        isZero = (input2 & 0x7fffffff) == 0;\n      }\n      if (!isZero) {\n        isZero = var2 == 0;\n        var6 = input1 & 0x80000000;\n        while( true ) {\n          if (isZero) {\n            input1 = input1 << 1;\n            isZero = (input1 & 0x800000) == 0;\n          }\n          if (!isZero) break;\n          var2 = var2 - 1;\n        }\n        input1 = input1 | var6;\n        isZero = input3 == 0;\n        var6 = input2 & 0x80000000;\n        while( true ) {\n          if (isZero) {\n            input2 = input2 << 1;\n            isZero = (input2 & 0x800000) == 0;\n          }\n          if (!isZero) break;\n          input3 = input3 - 1;\n        }\n        input2 = input2 | var6;\n        goto LAB_08000e6c;\n      }\n      if ((input1 & 0x7fffffff) == 0) {\n        if ((input2 & 0x7fffffff) != 0) goto LAB_08000e00;\n        goto LAB_08000e4a;\n      }\n    }\n    input1 = input1 ^ input2;\n  }\n  else {\nLAB_08000e6c:\n    var3 = var2 - input3;\n    if (input2 << 9 == 0) {\n      input1 = (input1 ^ input2) & 0x80000000 | input1 & 0x7fffff;\n      isBorrow = SCARRY4(var3,0x7f);\n      var5 = var3 + 0x7f;\n      isZero = var5 < 0;\n      isCarry = var5 == 0;\n      if (!isCarry && isZero == isBorrow) {\n        isBorrow = SBORROW4(0xff,var5);\n        isZero = 0xff - var5 < 0;\n        isCarry = var5 == 0xff;\n      }\n      if (!isCarry && isZero == isBorrow) {\n        input1 = input1 | var5 * 0x800000;\n      }\n      if (!isCarry && isZero == isBorrow) {\n        return input1;\n      }\n      input1 = input1 | 0x800000;\n      var2 = 0;\n      isCarry = SBORROW4(var5,1);\n      var4 = var3 + 0x7e;\n      isZero = var4 == 0;\n      var6 = var4;\n    }\n    else {\n      var1 = (input2 << 9) >> 4 | 0x10000000;\n      var2 = (input1 << 9) >> 4 | 0x10000000;\n      input1 = (input1 ^ input2) & 0x80000000;\n      isZero = var1 <= var2;\n      if (!isZero) {\n        var2 = var2 << 1;\n      }\n      var4 = var3 + 0x7d + (uint)isZero;\n      var6 = 0x800000;\n      do {\n        if (var1 <= var2) {\n          var2 = var2 - var1;\n          input1 = input1 | var6;\n        }\n        isZero = var1 >> 1 <= var2;\n        if (isZero) {\n          var2 = var2 - (var1 >> 1);\n        }\n        if (isZero) {\n          input1 = input1 | var6 >> 1;\n        }\n        isZero = var1 >> 2 <= var2;\n        if (isZero) {\n          var2 = var2 - (var1 >> 2);\n        }\n        if (isZero) {\n          input1 = input1 | var6 >> 2;\n        }\n        isZero = var1 >> 3 <= var2;\n        if (isZero) {\n          var2 = var2 - (var1 >> 3);\n        }\n        if (isZero) {\n          input1 = input1 | var6 >> 3;\n        }\n        var2 = var2 * 0x10;\n        isZero = var2 == 0;\n        if (!isZero) {\n          var6 = var6 >> 4;\n          isZero = var6 == 0;\n        }\n      } while (!isZero);\n      isCarry = SBORROW4(var4,0xfd);\n      isZero = var4 == 0xfd;\n      var6 = var4 - 0xfd;\n      if (var4 < 0xfe) {\n        input1 = input1 + var4 * 0x800000 + (uint)(var1 <= var2);\n        if (var2 - var1 == 0) {\n          input1 = input1 & 0xfffffffe;\n        }\n        return input1;\n      }\n    }\n    if (isZero || (int)var6 < 0 != isCarry) {\n      isZero = (int)(var4 + 0x19) < 0;\n      if (var4 == 0xffffffe7 || isZero != SCARRY4(var4,0x19)) {\n        input1 = input1 & 0x80000000;\n      }\n      if (var4 == 0xffffffe7 || isZero != SCARRY4(var4,0x19)) {\n        return input1;\n      }\n      var6 = (input1 << 1) >> (-var4 & 0xff);\n      var4 = input1 << (var4 + 0x20 & 0xff);\n      var6 = ((uint)((input1 & 0x80000000) != 0) << 0x1f | var6 >> 1) + (uint)((byte)var6 & 1);\n      if ((var2 | var4 << 1) == 0) {\n        var6 = var6 & ~(var4 >> 0x1f);\n      }\n      return var6;\n    }\n  }\n  return input1 & 0x80000000 | 0x7f800000;\n}\n\n",
            "renaming": {
                "FUN_08000e54": "calculate_float_08000e54",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "undefined",
                "param_4": "input3",
                "uVar1": "var1",
                "uVar2": "var2",
                "iVar3": "var3",
                "uVar4": "var4",
                "iVar5": "var5",
                "uVar6": "var6",
                "bVar7": "isZero",
                "bVar8": "isCarry",
                "bVar9": "isBorrow"
            },
            "calling": [
                "FUN_0800411c",
                "FUN_08003330",
                "FUN_0800483c",
                "FUN_08002f28"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000f9c": {
            "entrypoint": "0x08000f9c",
            "current_name": "calculate_result_08000f9c",
            "code": "\nuint calculate_result_08000f9c(uint input_1,uint input_2)\n\n{\n  bool is_negative;\n  uint input_1_doubled;\n  uint input_2_doubled;\n  uint combined_inputs;\n  bool is_zero;\n  \n  input_1_doubled = input_1 * 2;\n  input_2_doubled = input_2 * 2;\n  if (((int)input_1_doubled >> 0x18 == -1 || (int)input_2_doubled >> 0x18 == -1) &&\n     ((((int)input_1_doubled >> 0x18 == -1 && ((input_1 & 0x7fffff) != 0)) ||\n      (((int)input_2_doubled >> 0x18 == -1 && ((input_2 & 0x7fffff) != 0)))))) {\n    return 1;\n  }\n  combined_inputs = input_1_doubled | input_2 & 0x7fffffff;\n  is_zero = combined_inputs == 0;\n  if (!is_zero) {\n    combined_inputs = input_1 ^ input_2;\n    is_zero = combined_inputs == 0;\n  }\n  is_negative = -1 < (int)combined_inputs;\n  if (is_negative) {\n    input_1 = input_1_doubled + input_2 * -2;\n    is_zero = input_1 == 0;\n  }\n  if ((is_negative && input_2_doubled <= input_1_doubled) && !is_zero) {\n    input_1 = (int)input_2 >> 0x1f;\n  }\n  if (!is_negative || input_2_doubled > input_1_doubled) {\n    input_1 = ~((int)input_2 >> 0x1f);\n  }\n  if (!is_zero) {\n    input_1 = input_1 | 1;\n  }\n  return input_1;\n}\n\n",
            "renaming": {
                "FUN_08000f9c": "calculate_result_08000f9c",
                "param_1": "input_1",
                "param_2": "input_2",
                "uVar2": "input_1_doubled",
                "uVar3": "input_2_doubled",
                "uVar4": "combined_inputs",
                "bVar1": "is_negative",
                "bVar5": "is_zero"
            },
            "calling": [
                "FUN_08001004"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000ffc": {
            "entrypoint": "0x08000ffc",
            "current_name": "process_data_08000ffc",
            "code": "\nvoid processData_08000ffc(undefined4 inputValue,undefined4 outputValue)\n\n{\n  FUN_08001004(outputValue,inputValue);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000ffc": "process_data_08000ffc",
                "param_1": "inputValue",
                "param_2": "outputValue"
            },
            "calling": [
                "FUN_08001050",
                "FUN_08001064"
            ],
            "called": [
                "FUN_08001004"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001004": {
            "entrypoint": "0x08001004",
            "current_name": "concatenate_parameters_08001004",
            "code": "\nundefined8 concatenate_parameters_08001004(undefined4 first_parameter,undefined4 second_parameter)\n\n{\n  FUN_08000f9c();\n  return CONCAT44(second_parameter,first_parameter);\n}\n\n",
            "renaming": {
                "FUN_08001004": "concatenate_parameters_08001004",
                "param_1": "first_parameter",
                "param_2": "second_parameter"
            },
            "calling": [
                "FUN_08001014",
                "FUN_08001028",
                "FUN_08000ffc"
            ],
            "called": [
                "FUN_08000f9c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001014": {
            "entrypoint": "0x08001014",
            "current_name": "check_if_null_character_exists_08001014",
            "code": "\nbool checkIfNullCharacterExists_08001014(void)\n\n{\n  char inputCharacter;\n  \n  FUN_08001004();\n  return inputCharacter != '\\0';\n}\n\n",
            "renaming": {
                "FUN_08001014": "check_if_null_character_exists_08001014",
                "in_ZR": "inputCharacter"
            },
            "calling": [
                "FUN_08003330"
            ],
            "called": [
                "FUN_08001004"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001028": {
            "entrypoint": "0x08001028",
            "current_name": "is_string_empty_08001028",
            "code": "\nbool is_string_empty_08001028(void)\n\n{\n  char input_character;\n  \n  FUN_08001004();\n  return input_character == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08001028": "is_string_empty_08001028",
                "in_CY": "input_character"
            },
            "calling": [
                "FUN_08004a84",
                "FUN_08002ee8",
                "FUN_0800483c"
            ],
            "called": [
                "FUN_08001004"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001050": {
            "entrypoint": "0x08001050",
            "current_name": "check_zero_or_carry_flag_08001050",
            "code": "\nbool checkZeroOrCarryFlag_08001050(void)\n\n{\n  undefined zeroFlag;\n  undefined carryFlag;\n  \n  FUN_08000ffc();\n  return !(bool)carryFlag || (bool)zeroFlag;\n}\n\n",
            "renaming": {
                "FUN_08001050": "check_zero_or_carry_flag_08001050",
                "in_ZR": "zeroFlag",
                "in_CY": "carryFlag"
            },
            "calling": [
                "FUN_08002ee8"
            ],
            "called": [
                "FUN_08000ffc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001064": {
            "entrypoint": "0x08001064",
            "current_name": "check_null_termination_08001064",
            "code": "\nbool check_null_termination_08001064(void)\n\n{\n  char input_character;\n  \n  FUN_08000ffc();\n  return input_character == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08001064": "check_null_termination_08001064",
                "in_CY": "input_character"
            },
            "calling": [
                "FUN_08004a84",
                "FUN_0800483c"
            ],
            "called": [
                "FUN_08000ffc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001078": {
            "entrypoint": "0x08001078",
            "current_name": "extract_integer_08001078",
            "code": "\nuint extract_integer_08001078(uint input_value)\n\n{\n  uint shifted_value;\n  uint difference;\n  \n  if (input_value << 1 < 0x7f000000) {\n    return 0;\n  }\n  shifted_value = (input_value << 1) >> 0x18;\n  difference = 0x9e - shifted_value;\n  if (shifted_value < 0x9f && difference != 0) {\n    shifted_value = (input_value << 8 | 0x80000000) >> (difference & 0xff);\n    if ((input_value & 0x80000000) != 0) {\n      shifted_value = -shifted_value;\n    }\n    return shifted_value;\n  }\n  if ((difference == 0xffffff9f) && ((input_value & 0x7fffff) != 0)) {\n    return 0;\n  }\n  input_value = input_value & 0x80000000;\n  if (input_value == 0) {\n    input_value = 0x7fffffff;\n  }\n  return input_value;\n}\n\n",
            "renaming": {
                "FUN_08001078": "extract_integer_08001078",
                "param_1": "input_value",
                "uVar1": "shifted_value",
                "uVar2": "difference"
            },
            "calling": [
                "FUN_0800426c",
                "FUN_0800411c",
                "FUN_08002f28"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080010c4": {
            "entrypoint": "0x080010c4",
            "current_name": "calculate_shifted_result_080010c4",
            "code": "\nuint calculateShiftedResult_080010c4(uint inputValue)\n\n{\n  uint shiftAmount;\n  \n  if (((inputValue & 0x80000000) != 0) || (inputValue << 1 < 0x7f000000)) {\n    return 0;\n  }\n  shiftAmount = 0x9e - ((inputValue << 1) >> 0x18);\n  if (-1 < (int)shiftAmount) {\n    return (inputValue << 8 | 0x80000000) >> (shiftAmount & 0xff);\n  }\n  if ((shiftAmount == 0xffffff9f) && ((inputValue & 0x7fffff) != 0)) {\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080010c4": "calculate_shifted_result_080010c4",
                "param_1": "inputValue",
                "uVar1": "shiftAmount"
            },
            "calling": [
                "FUN_08004a84"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001104": {
            "entrypoint": "0x08001104",
            "current_name": "initialize_system_08001104",
            "code": "\nundefined4 initializeSystem_08001104(undefined4 inputParameter)\n\n{\n  uint timeInSeconds;\n  \n  timeInSeconds = FUN_08002214();\n  FUN_08001214(timeInSeconds / 1000);\n  FUN_08001194(0xffffffff,inputParameter,0);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001104": "initialize_system_08001104",
                "param_1": "inputParameter",
                "uVar1": "timeInSeconds"
            },
            "calling": [
                "FUN_0800209c",
                "FUN_08001128"
            ],
            "called": [
                "FUN_08002214",
                "FUN_08001194",
                "FUN_08001214"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001128": {
            "entrypoint": "0x08001128",
            "current_name": "initialize_device_08001128",
            "code": "\n\n\nundefined4 initialize_device_08001128(void)\n\n{\n  _DAT_40022000 = _DAT_40022000 | 0x10;\n  FUN_08001170(3);\n  FUN_08001104(0);\n  FUN_08004ccc();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001128": "initialize_device_08001128"
            },
            "calling": [
                "FUN_0800458c"
            ],
            "called": [
                "FUN_08001170",
                "FUN_08001104",
                "FUN_08004ccc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800114c": {
            "entrypoint": "0x0800114c",
            "current_name": "increment_counter_0800114c",
            "code": "\nvoid incrementCounter_0800114c(void)\n\n{\n  DAT_20000244 = DAT_20000244 + 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800114c": "increment_counter_0800114c"
            },
            "calling": [
                "FUN_080041ae"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800115c": {
            "entrypoint": "0x0800115c",
            "current_name": "get_data_0800115c",
            "code": "\nundefined4 get_data_0800115c(void)\n\n{\n  return DAT_20000244;\n}\n\n",
            "renaming": {
                "FUN_0800115c": "get_data_0800115c"
            },
            "calling": [
                "FUN_08001530",
                "thunk_FUN_0800115c",
                "FUN_08001b58",
                "FUN_08004c18",
                "FUN_0800209c",
                "FUN_08001828",
                "FUN_08001938",
                "FUN_080014e2",
                "thunk_FUN_0800115c",
                "FUN_080015e8",
                "FUN_080016f4",
                "FUN_08001460"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001168": {
            "entrypoint": "0x08001168",
            "current_name": "FUNC_08001168",
            "code": "\nvoid FUNC_08001168(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001168": "FUNC_08001168"
            },
            "calling": [
                "FUN_08001b58",
                "thunk_FUN_08001168"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08001170": {
            "entrypoint": "0x08001170",
            "current_name": "configure_interrupt_pin_08001170",
            "code": "\n\n\nvoid configureInterruptPin_08001170(uint pinNumber)\n\n{\n  _DAT_e000ed0c = _DAT_e000ed0c & 0xf8ff | 0x5fa0000 | (pinNumber & 7) << 8;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001170": "configure_interrupt_pin_08001170",
                "param_1": "pinNumber"
            },
            "calling": [
                "FUN_08001128",
                "FUN_08004ccc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001194": {
            "entrypoint": "0x08001194",
            "current_name": "update_data_08001194",
            "code": "\n\n\nvoid updateData_08001194(uint input1,uint input2,uint input3)\n\n{\n  undefined result;\n  uint shiftAmount;\n  uint temporaryValue;\n  uint tempVar;\n  \n  temporaryValue = (uint)(_DAT_e000ed0c << 0x15) >> 0x1d;\n  shiftAmount = 7 - temporaryValue;\n  tempVar = temporaryValue + 4;\n  if (3 < shiftAmount) {\n    shiftAmount = 4;\n  }\n  if (tempVar < 7) {\n    temporaryValue = 0;\n  }\n  shiftAmount = (1 << (shiftAmount & 0xff)) - 1;\n  if (6 < tempVar) {\n    temporaryValue = temporaryValue - 3;\n  }\n  result = (undefined)\n          ((input3 & (1 << (temporaryValue & 0xff)) - 1U | (input2 & shiftAmount) << (temporaryValue & 0xff)) << 4);\n  if (-1 < (int)input1) {\n    temporaryValue = input1 + 0xe000e100;\n  }\n  else {\n    shiftAmount = 0xe000ed14;\n    temporaryValue = input1 & 0xf;\n  }\n  if (-1 < (int)input1) {\n    *(undefined *)(temporaryValue + 0x300) = result;\n  }\n  else {\n    *(undefined *)(shiftAmount + temporaryValue) = result;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001194": "update_data_08001194",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "uVar1": "result",
                "uVar2": "shiftAmount",
                "uVar3": "temporaryValue",
                "uVar4": "tempVar"
            },
            "calling": [
                "FUN_08004e7c",
                "FUN_08001104",
                "FUN_08004514",
                "FUN_08004ccc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080011fc": {
            "entrypoint": "0x080011fc",
            "current_name": "set_bit_in_array_080011fc",
            "code": "\nvoid setBitInArray_080011fc(uint bitIndex)\n\n{\n  *(int *)((bitIndex >> 5) * 4 + -0x1fff1f00) = 1 << (bitIndex & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080011fc": "set_bit_in_array_080011fc",
                "param_1": "bitIndex"
            },
            "calling": [
                "FUN_08004e7c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001214": {
            "entrypoint": "0x08001214",
            "current_name": "initialize_parameter_08001214",
            "code": "\n\n\nundefined4 initializeParameter_08001214(int value)\n\n{\n  if (value - 1U < 0x1000000) {\n    _DAT_e000e014 = value - 1U;\n    DAT_e000ed23 = 0xf0;\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08001214": "initialize_parameter_08001214",
                "param_1": "value"
            },
            "calling": [
                "FUN_08001104",
                "FUN_08004514"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001240": {
            "entrypoint": "0x08001240",
            "current_name": "set_configuration_flag_08001240",
            "code": "\n\n\nvoid setConfigurationFlag_08001240(int flagValue)\n\n{\n  if (flagValue == 4) {\n    _DAT_e000e010 = _DAT_e000e010 | 4;\n  }\n  else {\n    _DAT_e000e010 = _DAT_e000e010 & 0xfffffffb;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001240": "set_configuration_flag_08001240",
                "param_1": "flagValue"
            },
            "calling": [
                "FUN_08004514"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001258": {
            "entrypoint": "0x08001258",
            "current_name": "FUNC_08001258",
            "code": "\nvoid FUNC_08001258(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001258": "FUNC_08001258"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08001264": {
            "entrypoint": "0x08001264",
            "current_name": "update_flags_08001264",
            "code": "\n\n\nvoid updateFlags_08001264(uint *outputFlags,uint *inputFlags)\n\n{\n  uint value;\n  uint bitValue;\n  uint controlValue;\n  int index;\n  uint bitIndex;\n  uint mask;\n  uint defaultControlValue;\n  uint *ptr;\n  int bitOffset;\n  \n  value = 0;\n  bitIndex = 0;\n  do {\n    mask = 1 << (bitIndex & 0xff);\n    bitValue = mask & *inputFlags;\n    if (mask == bitValue) {\n      controlValue = inputFlags[1];\n      if (controlValue == 0x12) {\n        value = inputFlags[3] + 0xc;\n      }\n      else if (controlValue < 0x13) {\n        if (controlValue == 2) {\n          value = inputFlags[3] + 8;\n        }\n        else if (controlValue < 3) {\n          if (controlValue == 0) goto LAB_080013be;\n          if (controlValue == 1) {\n            value = inputFlags[3];\n          }\n        }\n        else if (controlValue == 3) {\n          value = 0;\n        }\n        else if (controlValue == 0x11) {\n          value = inputFlags[3] + 4;\n        }\n      }\n      else {\n        if (controlValue != 0x10210000) {\n          if (controlValue < 0x10210001) {\n            if (controlValue != 0x10110000) {\n              defaultControlValue = 0x10120000;\nLAB_080013b8:\n              if (controlValue != defaultControlValue) goto LAB_080012a8;\n            }\n          }\n          else if ((controlValue != 0x10310000) && (controlValue != 0x10320000)) {\n            defaultControlValue = 0x10220000;\n            goto LAB_080013b8;\n          }\n        }\nLAB_080013be:\n        value = inputFlags[2];\n        if (value == 0) {\n          value = 4;\n        }\n        else {\n          if (value == 1) {\n            outputFlags[4] = mask;\n          }\n          if (value != 1) {\n            outputFlags[5] = mask;\n          }\n          value = 8;\n        }\n      }\nLAB_080012a8:\n      if (bitValue < 0x100) {\n        mask = *outputFlags;\n        controlValue = bitIndex << 2;\n        ptr = outputFlags;\n      }\n      else {\n        mask = outputFlags[1];\n        controlValue = (bitIndex + 0x3ffffff8) * 4;\n      }\n      if (0xff < bitValue) {\n        ptr = outputFlags + 1;\n      }\n      *ptr = mask & ~(0xf << (controlValue & 0xff)) | value << (controlValue & 0xff);\n      ptr = (uint *)inputFlags[1];\n      if (((uint)ptr & 0x10000000) != 0) {\n        _DAT_40021018 = _DAT_40021018 | 1;\n        bitOffset = (bitIndex & 3) << 2;\n        if (outputFlags == (uint *)0x40010800) {\n          index = 0;\n        }\n        else if (outputFlags == (uint *)0x40010c00) {\n          index = 1;\n        }\n        else if (outputFlags == (uint *)0x40011000) {\n          index = 2;\n        }\n        else if (outputFlags == (uint *)0x40011400) {\n          index = 3;\n        }\n        else {\n          index = 4;\n        }\n        *(uint *)((bitIndex & 0xfffffffc) + 0x40010008) =\n             index << bitOffset | *(uint *)((bitIndex & 0xfffffffc) + 0x40010008) & ~(0xf << bitOffset);\n        if (((uint)ptr & 0x10000) == 0) {\n          _DAT_40010400 = _DAT_40010400 & ~bitValue;\n        }\n        else {\n          _DAT_40010400 = _DAT_40010400 | bitValue;\n        }\n        if (((uint)ptr & 0x20000) == 0) {\n          _DAT_40010404 = _DAT_40010404 & ~bitValue;\n        }\n        else {\n          _DAT_40010404 = _DAT_40010404 | bitValue;\n        }\n        if (((uint)ptr & 0x100000) == 0) {\n          _DAT_40010408 = _DAT_40010408 & ~bitValue;\n        }\n        else {\n          _DAT_40010408 = _DAT_40010408 | bitValue;\n        }\n        if (((uint)ptr & 0x200000) == 0) {\n          _DAT_4001040c = _DAT_4001040c & ~bitValue;\n        }\n        else {\n          _DAT_4001040c = bitValue | _DAT_4001040c;\n        }\n      }\n    }\n    bitIndex = bitIndex + 1;\n    if (bitIndex == 0x10) {\n      return;\n    }\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08001264": "update_flags_08001264",
                "param_1": "outputFlags",
                "param_2": "inputFlags",
                "uVar1": "value",
                "uVar2": "bitValue",
                "uVar3": "controlValue",
                "iVar4": "index",
                "uVar5": "bitIndex",
                "uVar6": "mask",
                "uVar7": "defaultControlValue",
                "unaff_r10": "ptr",
                "iVar8": "bitOffset"
            },
            "calling": [
                "FUN_08004e14",
                "FUN_08004e7c",
                "FUN_08004d48",
                "FUN_0800458c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001424": {
            "entrypoint": "0x08001424",
            "current_name": "update_param_value_08001424",
            "code": "\nvoid update_param_value_08001424(int base_address,int new_value,int condition)\n\n{\n  if (condition == 0) {\n    new_value = new_value << 0x10;\n  }\n  *(int *)(base_address + 0x10) = new_value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001424": "update_param_value_08001424",
                "param_1": "base_address",
                "param_2": "new_value",
                "param_3": "condition"
            },
            "calling": [
                "FUN_08004490",
                "FUN_08003f3c",
                "FUN_0800458c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800142e": {
            "entrypoint": "0x0800142e",
            "current_name": "xor_uint_and_store_0800142e",
            "code": "\nvoid xor_uint_and_store_0800142e(int input_address,uint xor_value)\n\n{\n  *(uint *)(input_address + 0xc) = xor_value ^ *(uint *)(input_address + 0xc);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800142e": "xor_uint_and_store_0800142e",
                "param_1": "input_address",
                "param_2": "xor_value"
            },
            "calling": [
                "FUN_08004490"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001436": {
            "entrypoint": "0x08001436",
            "current_name": "check_flag_status_08001436",
            "code": "\nundefined4 checkFlagStatus_08001436(int *flagPtr)\n\n{\n  int flagValue;\n  \n  flagValue = *flagPtr;\n  if ((*(uint *)(flagValue + 0x14) & 0x400) != 0) {\n    *(uint *)(flagValue + 0x14) = *(uint *)(flagValue + 0x14) & 0xfffffbff;\n    errorCode = 4;\n    *(undefined *)((int)flagPtr + 0x35) = 0x20;\n    *(undefined *)(flagPtr + 0xd) = 0;\n    return 1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001436": "check_flag_status_08001436",
                "param_1": "flagPtr",
                "iVar1": "flagValue",
                "param_1[0xe]": "errorCode"
            },
            "calling": [
                "FUN_080014e2"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001460": {
            "entrypoint": "0x08001460",
            "current_name": "check_permissions_08001460",
            "code": "\nundefined4 check_permissions_08001460(uint **pointer_array,uint flag,uint timeout)\n\n{\n  int initial_time;\n  int current_time;\n  uint value;\n  uint *current_pointer;\n  \n  initial_time = FUN_0800115c();\n  do {\n    current_pointer = *pointer_array;\n    if ((flag << 8) >> 0x18 == 1) {\n      value = current_pointer[5];\n    }\n    else {\n      value = current_pointer[6];\n    }\n    if ((flag & 0xffff & ~value) == 0) {\n      return 0;\n    }\n    if ((int)(current_pointer[5] << 0x15) < 0) {\n      *current_pointer = *current_pointer | 0x200;\n      current_pointer[5] = current_pointer[5] & 0xfffffbff;\n      pointer_array[0xe] = (uint *)0x4;\n      *(undefined *)((int)pointer_array + 0x35) = 0x20;\n      *(undefined *)(pointer_array + 0xd) = 0;\n      return 1;\n    }\n  } while ((timeout == 0xffffffff) ||\n          ((timeout != 0 && (current_time = FUN_0800115c(), (uint)(current_time - initial_time) <= timeout))));\n  *(undefined *)((int)pointer_array + 0x35) = 0x20;\n  *(undefined *)(pointer_array + 0xd) = 0;\n  return 3;\n}\n\n",
            "renaming": {
                "FUN_08001460": "check_permissions_08001460",
                "param_1": "pointer_array",
                "param_2": "flag",
                "param_3": "timeout",
                "iVar1": "initial_time",
                "iVar2": "current_time",
                "uVar3": "value",
                "puVar4": "current_pointer"
            },
            "calling": [
                "FUN_08001530",
                "FUN_080015e8"
            ],
            "called": [
                "FUN_0800115c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080014e2": {
            "entrypoint": "0x080014e2",
            "current_name": "check_and_modify_status_080014e2",
            "code": "\nundefined4 check_and_modify_status_080014e2(int *input_array,uint input_value)\n\n{\n  int result_1;\n  int result_2;\n  \n  result_1 = FUN_0800115c();\n  while( true ) {\n    if (*(int *)(*input_array + 0x14) << 0x18 < 0) {\n      return 0;\n    }\n    result_2 = FUN_08001436(input_array);\n    if (result_2 != 0) break;\n    if ((input_value != 0xffffffff) &&\n       ((input_value == 0 || (result_2 = FUN_0800115c(), input_value < (uint)(result_2 - result_1))))) {\n      input_array[0xe] = input_array[0xe] | 0x20;\n      *(undefined *)((int)input_array + 0x35) = 0x20;\n      *(undefined *)(input_array + 0xd) = 0;\n      return 3;\n    }\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080014e2": "check_and_modify_status_080014e2",
                "param_1": "input_array",
                "param_2": "input_value",
                "iVar1": "result_1",
                "iVar2": "result_2"
            },
            "calling": [
                "FUN_08001530",
                "FUN_08001828",
                "FUN_080015e8"
            ],
            "called": [
                "FUN_0800115c",
                "FUN_08001436"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001530": {
            "entrypoint": "0x08001530",
            "current_name": "set_flag_and_update_08001530",
            "code": "\nundefined4 setFlagAndUpdate_08001530(uint **input,uint flag1,uint flag2,int condition,uint param)\n\n{\n  int result1;\n  int result2;\n  uint *current;\n  uint **ptr;\n  uint uFlag1;\n  uint uFlag2;\n  \n  **input = **input | 0x100;\n  ptr = input;\n  uFlag1 = flag1;\n  uFlag2 = flag2;\n  result1 = FUN_0800115c();\n  do {\n    current = *input;\n    do {\n      if ((int)(current[5] << 0x1f) < 0) {\n        current[4] = flag1 & 0xfe;\n        result1 = FUN_08001460(input,0x10002,param,current,ptr,uFlag1,uFlag2);\n        if (result1 == 0) {\n          result1 = FUN_080014e2(input,param,(*input)[5],(*input)[6]);\n          if (result1 == 0) {\n            current = *input;\n            if (condition == 1) {\nLAB_080015ca:\n              current[4] = flag2 & 0xff;\n              return 0;\n            }\n            current[4] = flag2 >> 8;\n            result1 = FUN_080014e2(input,param);\n            if (result1 == 0) {\n              current = *input;\n              goto LAB_080015ca;\n            }\n          }\n          if (input[0xe] != (uint *)0x4) {\n            return 3;\n          }\n          **input = **input | 0x200;\n        }\n        else if (input[0xe] != (uint *)0x4) {\n          return 3;\n        }\n        return 1;\n      }\n    } while (param == 0xffffffff);\n    if ((param == 0) || (result2 = FUN_0800115c(), param < (uint)(result2 - result1))) {\n      *(undefined *)((int)input + 0x35) = 0x20;\n      *(undefined *)(input + 0xd) = 0;\n      return 3;\n    }\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08001530": "set_flag_and_update_08001530",
                "param_1": "input",
                "param_2": "flag1",
                "param_3": "flag2",
                "param_4": "condition",
                "param_5": "param",
                "iVar1": "result1",
                "iVar2": "result2",
                "puVar3": "current",
                "ppuVar4": "ptr",
                "uVar5": "uFlag1",
                "uVar6": "uFlag2"
            },
            "calling": [
                "FUN_08001828"
            ],
            "called": [
                "FUN_080014e2",
                "FUN_0800115c",
                "FUN_08001460"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080015e8": {
            "entrypoint": "0x080015e8",
            "current_name": "initialize_flag_080015e8",
            "code": "\nundefined4 initializeFlag_080015e8(uint **dataPointer,uint value1,uint value2,int flag,uint limit)\n\n{\n  int result;\n  int temp;\n  uint *ptr1;\n  uint **ptr2;\n  uint var1;\n  uint var2;\n  \n  ptr1 = *dataPointer;\n  *ptr1 = *ptr1 | 0x400;\n  *ptr1 = *ptr1 | 0x100;\n  ptr2 = dataPointer;\n  var1 = value1;\n  var2 = value2;\n  result = FUN_0800115c();\nLAB_0800160e:\n  ptr1 = *dataPointer;\n  while (-1 < (int)(ptr1[5] << 0x1f)) {\n    if (limit != 0xffffffff) goto code_r0x08001658;\n  }\n  ptr1[4] = value1 & 0xfe;\n  result = FUN_08001460(dataPointer,0x10002,limit,ptr1,ptr2,var1,var2);\n  if (result != 0) goto LAB_080016ba;\n  result = FUN_080014e2(dataPointer,limit,(*dataPointer)[5],(*dataPointer)[6]);\n  if (result == 0) {\n    ptr1 = *dataPointer;\n    if (flag != 1) {\n      ptr1[4] = value2 >> 8;\n      result = FUN_080014e2(dataPointer,limit);\n      if (result != 0) goto LAB_08001642;\n      ptr1 = *dataPointer;\n    }\n    ptr1[4] = value2 & 0xff;\n    result = FUN_080014e2(dataPointer,limit);\n    if (result == 0) {\n      **dataPointer = **dataPointer | 0x100;\n      result = FUN_0800115c();\n      do {\n        do {\n          if ((int)((*dataPointer)[5] << 0x1f) < 0) {\n            (*dataPointer)[4] = value1 & 0xff | 1;\n            result = FUN_08001460(dataPointer,0x10002,limit);\n            if (result == 0) {\n              return 0;\n            }\nLAB_080016ba:\n            if (dataPointer[0xe] != (uint *)0x4) {\n              return 3;\n            }\n            return 1;\n          }\n        } while (limit == 0xffffffff);\n      } while ((limit != 0) && (temp = FUN_0800115c(), (uint)(temp - result) <= limit));\nLAB_0800165a:\n      *(undefined *)((int)dataPointer + 0x35) = 0x20;\n      *(undefined *)(dataPointer + 0xd) = 0;\n      return 3;\n    }\n  }\nLAB_08001642:\n  if (dataPointer[0xe] == (uint *)0x4) {\n    **dataPointer = **dataPointer | 0x200;\n    return 1;\n  }\n  return 3;\ncode_r0x08001658:\n  if ((limit == 0) || (temp = FUN_0800115c(), limit < (uint)(temp - result)))\n  goto LAB_0800165a;\n  goto LAB_0800160e;\n}\n\n",
            "renaming": {
                "FUN_080015e8": "initialize_flag_080015e8",
                "param_1": "dataPointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "flag",
                "param_5": "limit",
                "iVar1": "result",
                "iVar2": "temp",
                "puVar3": "ptr1",
                "ppuVar4": "ptr2",
                "uVar5": "var1",
                "uVar6": "var2"
            },
            "calling": [
                "FUN_08001938"
            ],
            "called": [
                "FUN_0800115c",
                "FUN_080014e2",
                "FUN_08001460"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080016f4": {
            "entrypoint": "0x080016f4",
            "current_name": "validate_memory_080016f4",
            "code": "\nundefined4 validate_memory_080016f4(int *memory_chunk,uint max_length)\n\n{\n  int initial_time;\n  int current_chunk;\n  \n  initial_time = FUN_0800115c();\n  while( true ) {\n    current_chunk = *memory_chunk;\n    if ((*(uint *)(current_chunk + 0x14) & 0x40) != 0) {\n      return 0;\n    }\n    if (*(int *)(current_chunk + 0x14) << 0x1b < 0) break;\n    if ((max_length == 0) || (current_chunk = FUN_0800115c(), max_length < (uint)(current_chunk - initial_time))) {\n      memory_chunk[0xe] = memory_chunk[0xe] | 0x20;\n      *(undefined *)((int)memory_chunk + 0x35) = 0x20;\n      *(undefined *)(memory_chunk + 0xd) = 0;\n      return 3;\n    }\n  }\n  *(uint *)(current_chunk + 0x14) = *(uint *)(current_chunk + 0x14) & 0xffffffef;\n  memory_chunk[0xe] = 0;\n  *(undefined *)(memory_chunk + 0xd) = 0;\n  *(undefined *)((int)memory_chunk + 0x35) = 0x20;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080016f4": "validate_memory_080016f4",
                "param_1": "memory_chunk",
                "param_2": "max_length",
                "iVar1": "initial_time",
                "iVar2": "current_chunk"
            },
            "calling": [
                "FUN_08001938"
            ],
            "called": [
                "FUN_0800115c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001754": {
            "entrypoint": "0x08001754",
            "current_name": "initialize_parameters_08001754",
            "code": "\nundefined4 initializeParameters_08001754(uint **parameters)\n\n{\n  uint result1;\n  uint result2;\n  uint *ptr1;\n  uint *ptr2;\n  uint *ptr3;\n  uint temp1;\n  undefined8 temp2;\n  \n  if (parameters != (uint **)0x0) {\n    if (*(char *)((int)parameters + 0x35) == '\\0') {\n      *(undefined *)(parameters + 0xd) = 0;\n      FUN_08004d48();\n    }\n    *(undefined *)((int)parameters + 0x35) = 0x24;\n    **parameters = **parameters & 0xfffffffe;\n    temp2 = FUN_08002220();\n    result2 = (uint)((ulonglong)temp2 >> 0x20);\n    result1 = (uint)temp2;\n    ptr2 = parameters[1];\n    temp1 = result1 / 1000000;\n    if ((uint *)0x186a0 < ptr2) {\n      result2 = 300;\n    }\n    ptr1 = *parameters;\n    if ((uint *)0x186a0 < ptr2) {\n      result2 = temp1 * result2;\n    }\n    ptr1[1] = temp1;\n    if ((uint *)0x186a0 < ptr2) {\n      temp1 = result2 / 1000;\n    }\n    ptr1[8] = temp1 + 1;\n    if (ptr2 < (uint *)0x186a1) {\n      result1 = result1 / (uint)((int)ptr2 << 1);\n      if ((result1 & 0xfff) < 4) {\n        result1 = 4;\n      }\n    }\n    else {\n      if (parameters[2] == (uint *)0x0) {\n        result1 = result1 / (uint)((int)ptr2 * 3) | 0x8000;\n      }\n      else {\n        result1 = result1 / (uint)((int)ptr2 * 0x19) | 0xc000;\n      }\n      if ((result1 & 0xfff) == 0) {\n        result1 = 1;\n      }\n    }\n    ptr2 = parameters[8];\n    ptr3 = parameters[7];\n    ptr1[7] = result1;\n    *ptr1 = (uint)ptr3 | (uint)ptr2;\n    ptr1[2] = (uint)parameters[4] | (uint)parameters[3];\n    ptr1[3] = (uint)parameters[5] | (uint)parameters[6];\n    *ptr1 = *ptr1 | 1;\n    parameters[0xe] = (uint *)0x0;\n    *(undefined *)((int)parameters + 0x35) = 0x20;\n    *(undefined *)((int)parameters + 0x36) = 0;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08001754": "initialize_parameters_08001754",
                "param_1": "parameters",
                "uVar1": "result1",
                "uVar2": "result2",
                "puVar3": "ptr1",
                "puVar4": "ptr2",
                "puVar5": "ptr3",
                "uVar6": "temp1",
                "uVar7": "temp2"
            },
            "calling": [
                "FUN_0800458c"
            ],
            "called": [
                "FUN_08002220",
                "FUN_08004d48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001828": {
            "entrypoint": "0x08001828",
            "current_name": "process_data_08001828",
            "code": "\nundefined4\nprocessData_08001828(uint **param,undefined4 param2,undefined4 param3,undefined4 param4,byte *data,\n            short dataSize,undefined4 param7)\n\n{\n  int index1;\n  int index2;\n  uint *ptr;\n  uint value;\n  \n  if (*(char *)((int)param + 0x35) == ' ') {\n    if (data == (byte *)0x0) {\n      return 1;\n    }\n    if (dataSize == 0) {\n      return 1;\n    }\n    index1 = FUN_0800115c();\n    do {\n      ptr = *param;\n      if ((~ptr[6] & 2) != 0) {\n        if (*(char *)(param + 0xd) == '\\x01') {\n          return 2;\n        }\n        value = *ptr;\n        *(undefined *)(param + 0xd) = 1;\n        *ptr = value & 0xfffff7ff;\n        *(undefined *)((int)param + 0x35) = 0x21;\n        *(undefined *)((int)param + 0x36) = 0x40;\n        param[0xe] = (uint *)0x0;\n        index1 = FUN_08001530(param,param2,param3,param4,param7);\n        if (index1 != 0) {\n          *(undefined *)(param + 0xd) = 0;\n          if (param[0xe] == (uint *)0x4) {\n            return 1;\n          }\n          return 3;\n        }\n        goto label1;\n      }\n      index2 = FUN_0800115c();\n    } while ((uint)(index2 - index1) < 0x2711);\n    *(undefined *)(param + 0xd) = 0;\n    *(undefined *)((int)param + 0x35) = 0x20;\n  }\n  return 2;\n  while (dataSize != 0) {\nlabel1:\n    index1 = FUN_080014e2(param,param7);\n    if (index1 != 0) goto label2;\n    ptr = *param;\n    ptr[4] = (uint)*data;\n    if ((int)(ptr[5] << 0x1d) < 0) {\n      if ((short)(dataSize + -1) == 0) break;\n      dataSize = dataSize + -2;\n      ptr[4] = (uint)data[1];\n      data = data + 2;\n    }\n    else {\n      data = data + 1;\n      dataSize = dataSize + -1;\n    }\n  }\n  index1 = FUN_080014e2(param,param7);\n  if (index1 == 0) {\n    **param = **param | 0x200;\n    *(undefined *)(param + 0xd) = 0;\n    *(undefined *)((int)param + 0x35) = 0x20;\n    *(undefined *)((int)param + 0x36) = 0;\n    return 0;\n  }\nlabel2:\n  if (param[0xe] == (uint *)0x4) {\n    **param = **param | 0x200;\n    return 1;\n  }\n  return 3;\n}\n\n",
            "renaming": {
                "FUN_08001828": "process_data_08001828",
                "param_1": "param",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "data",
                "param_6": "dataSize",
                "param_7": "param7",
                "iVar1": "index1",
                "iVar2": "index2",
                "puVar3": "ptr",
                "uVar4": "value",
                "LAB_080018e2": "label1",
                "LAB_080018ee": "label2"
            },
            "calling": [
                "FUN_0800403c"
            ],
            "called": [
                "FUN_08001530",
                "FUN_0800115c",
                "FUN_080014e2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001938": {
            "entrypoint": "0x08001938",
            "current_name": "process_data_08001938",
            "code": "\nundefined4\nprocessData_08001938(uint **data,undefined4 param1,undefined4 param2,undefined4 param3,\n            undefined *output,ushort length,uint timeout)\n\n{\n  undefined *ptr1;\n  int index1;\n  int index2;\n  uint *ptr2;\n  uint value;\n  undefined *ptr3;\n  bool flag;\n  \n  if (*(char *)((int)data + 0x35) != ' ') {\n    return 2;\n  }\n  if (output == (undefined *)0x0) {\n    return 1;\n  }\n  if (length == 0) {\n    return 1;\n  }\n  index1 = FUN_0800115c();\n  while (ptr2 = *data, (~ptr2[6] & 2) == 0) {\n    index2 = FUN_0800115c();\n    if (10000 < (uint)(index2 - index1)) {\n      *(undefined *)(data + 0xd) = 0;\n      *(undefined *)((int)data + 0x35) = 0x20;\n      return 2;\n    }\n  }\n  if (*(char *)(data + 0xd) == '\\x01') {\n    return 2;\n  }\n  value = *ptr2;\n  *(undefined *)(data + 0xd) = 1;\n  *ptr2 = value & 0xfffff7ff;\n  *(undefined *)((int)data + 0x35) = 0x22;\n  *(undefined *)((int)data + 0x36) = 0x40;\n  data[0xe] = (uint *)0x0;\n  index1 = FUN_080015e8(data,param1,param2,param3,timeout);\n  if (index1 != 0) {\n    *(undefined *)(data + 0xd) = 0;\n    if (data[0xe] == (uint *)0x4) {\n      return 1;\n    }\n    return 3;\n  }\n  ptr2 = *data;\n  value = *ptr2;\n  if (length == 1) {\n    *ptr2 = value & 0xfffffbff;\n    disableInterrupts();\n    **data = **data | 0x200;\n    enableInterrupts();\n    index1 = FUN_080016f4(data,timeout);\n    if (index1 == 0) {\n      *output = (char)(*data)[4];\nLAB_08001ab8:\n      *(undefined *)((int)data + 0x35) = 0x20;\n      *(undefined *)((int)data + 0x36) = 0;\n      *(undefined *)(data + 0xd) = 0;\n      return 0;\n    }\nLAB_08001a18:\n    if (data[0xe] != (uint *)0x20) {\n      return 1;\n    }\n    return 3;\n  }\n  if (length == 2) {\n    *ptr2 = value | 0x800;\n    disableInterrupts();\n    **data = **data & 0xfffffbff;\n    enableInterrupts();\n  }\n  else {\n    *ptr2 = value | 0x400;\n    while (3 < length) {\n      index1 = FUN_080016f4(data,timeout);\n      if (index1 != 0) goto LAB_08001a18;\n      *output = (char)(*data)[4];\n      ptr2 = *data;\n      flag = (int)(ptr2[5] << 0x1d) < 0;\n      if (flag) {\n        ptr2 = (uint *)ptr2[4];\n        ptr3 = output + 2;\n        length = length - 2;\n      }\n      else {\n        ptr3 = output + 1;\n        length = length - 1;\n      }\n      ptr1 = output + 1;\n      output = ptr3;\n      if (flag) {\n        *ptr1 = (char)ptr2;\n      }\n    }\n    if (length != 2) {\n      index1 = FUN_0800115c();\n      do {\n        ptr2 = *data;\n        do {\n          if ((int)(ptr2[5] << 0x1d) < 0) {\n            *ptr2 = *ptr2 & 0xfffffbff;\n            disableInterrupts();\n            *output = (char)(*data)[4];\n            index1 = FUN_0800115c();\n            goto LAB_08001b3a;\n          }\n        } while (timeout == 0xffffffff);\n      } while ((timeout != 0) && (index2 = FUN_0800115c(), (uint)(index2 - index1) <= timeout));\n      goto LAB_08001afa;\n    }\n  }\n  index1 = FUN_0800115c();\n  do {\n    do {\n      if ((int)((*data)[5] << 0x1d) < 0) {\n        disableInterrupts();\n        ptr2 = *data;\n        *ptr2 = *ptr2 | 0x200;\n        *output = (char)ptr2[4];\n        enableInterrupts();\n        output[1] = (char)(*data)[4];\n        goto LAB_08001ab8;\n      }\n    } while (timeout == 0xffffffff);\n  } while ((timeout != 0) && (index2 = FUN_0800115c(), (uint)(index2 - index1) <= timeout));\nLAB_08001afa:\n  *(undefined *)((int)data + 0x35) = 0x20;\n  *(undefined *)(data + 0xd) = 0;\n  return 3;\nLAB_08001b3a:\n  do {\n    ptr2 = *data;\n    do {\n      if ((int)(ptr2[5] << 0x1d) < 0) {\n        *ptr2 = *ptr2 | 0x200;\n        output[1] = (char)ptr2[4];\n        enableInterrupts();\n        output[2] = (char)(*data)[4];\n        goto LAB_08001ab8;\n      }\n    } while (timeout == 0xffffffff);\n  } while ((timeout != 0) && (index2 = FUN_0800115c(), (uint)(index2 - index1) <= timeout));\n  goto LAB_08001afa;\n}\n\n",
            "renaming": {
                "FUN_08001938": "process_data_08001938",
                "param_1": "data",
                "param_2": "param1",
                "param_3": "param2",
                "param_4": "param3",
                "param_5": "output",
                "param_6": "length",
                "param_7": "timeout",
                "puVar1": "ptr1",
                "iVar2": "index1",
                "iVar3": "index2",
                "puVar4": "ptr2",
                "uVar5": "value",
                "puVar6": "ptr3",
                "bVar7": "flag",
                "disableIRQinterrupts": "disableInterrupts",
                "enableIRQinterrupts": "enableInterrupts"
            },
            "calling": [
                "FUN_0800407c",
                "FUN_080040b8"
            ],
            "called": [
                "FUN_0800115c",
                "FUN_080016f4",
                "FUN_080015e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001b58": {
            "entrypoint": "0x08001b58",
            "current_name": "check_configurations_08001b58",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08001eec) */\n/* WARNING: Removing unreachable block (ram,0x08001ee8) */\n\n\nundefined4 check_configurations_08001b58(int *config_values)\n\n{\n  int value_one;\n  int value_two;\n  \n  if (*config_values << 0x1f < 0) {\n    if (((_DAT_40021004 & 0xc) == 4) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((int)(_DAT_40021004 << 0xf) < 0)))) {\n      if (((int)((_DAT_40021000 >> 0x11) << 0x1f) < 0) && (config_values[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      value_one = config_values[1];\n      if (value_one == 0x10000) {\nLAB_08001c1e:\n        _DAT_40021000 = _DAT_40021000 | 0x10000;\n      }\n      else {\n        if (value_one == 0) {\n          _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n          value_one = FUN_0800115c();\n          while ((int)((_DAT_40021000 >> 0x11) << 0x1f) < 0) {\n            value_two = FUN_0800115c();\n            if (100 < (uint)(value_two - value_one)) {\n              return 3;\n            }\n          }\n          goto LAB_08001b64;\n        }\n        if (value_one == 0x50000) {\n          _DAT_40021000 = _DAT_40021000 | 0x40000;\n          goto LAB_08001c1e;\n        }\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      value_one = FUN_0800115c();\n      while (-1 < (int)((_DAT_40021000 >> 0x11) << 0x1f)) {\n        value_two = FUN_0800115c();\n        if (100 < (uint)(value_two - value_one)) {\n          return 3;\n        }\n      }\n    }\n  }\nLAB_08001b64:\n  if (*config_values << 0x1e < 0) {\n    if (((_DAT_40021004 & 0xc) == 0) ||\n       (((_DAT_40021004 & 0xc) == 8 && (-1 < (int)(_DAT_40021004 << 0xf))))) {\n      if (((int)((_DAT_40021000 >> 1) << 0x1f) < 0) && (config_values[4] != 1)) {\n        return 1;\n      }\n    }\n    else {\n      iRam42420000 = config_values[4];\n      if (iRam42420000 == 0) {\n        value_one = FUN_0800115c();\n        while ((int)((_DAT_40021000 >> 1) << 0x1f) < 0) {\n          value_two = FUN_0800115c();\n          if (2 < (uint)(value_two - value_one)) {\n            return 3;\n          }\n        }\n        goto LAB_08001b6c;\n      }\n      iRam42420000 = 1;\n      value_one = FUN_0800115c();\n      while (-1 < (int)((_DAT_40021000 >> 1) << 0x1f)) {\n        value_two = FUN_0800115c();\n        if (2 < (uint)(value_two - value_one)) {\n          return 3;\n        }\n      }\n    }\n    _DAT_40021000 = config_values[5] << 3 | _DAT_40021000 & 0xffffff07;\n  }\nLAB_08001b6c:\n  if (*config_values << 0x1c < 0) {\n    iRam42420480 = config_values[6];\n    if (iRam42420480 == 0) {\n      value_one = FUN_0800115c();\n      while ((int)((_DAT_40021024 >> 1) << 0x1f) < 0) {\n        value_two = FUN_0800115c();\n        if (2 < (uint)(value_two - value_one)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      iRam42420480 = 1;\n      value_one = FUN_0800115c();\n      while (-1 < (int)((_DAT_40021024 >> 1) << 0x1f)) {\n        value_two = FUN_0800115c();\n        if (2 < (uint)(value_two - value_one)) {\n          return 3;\n        }\n      }\n      FUNC_08001168(1);\n    }\n  }\n  if (-1 < *config_values << 0x1d) goto LAB_08001bc2;\n  _DAT_4002101c = _DAT_4002101c | 0x10000000;\n  _DAT_40007000 = _DAT_40007000 | 0x100;\n  value_one = FUN_0800115c();\n  while (-1 < (int)(_DAT_40007000 << 0x17)) {\n    value_two = FUN_0800115c();\n    if (100 < (uint)(value_two - value_one)) {\n      return 3;\n    }\n  }\n  value_one = config_values[3];\n  if (value_one == 1) {\nLAB_08001e1a:\n    _DAT_40021020 = _DAT_40021020 | 1;\n  }\n  else {\n    if (value_one == 0) {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n      value_one = FUN_0800115c();\n      while ((int)((_DAT_40021020 >> 1) << 0x1f) < 0) {\n        value_two = FUN_0800115c();\n        if (5000 < (uint)(value_two - value_one)) {\n          return 3;\n        }\n      }\n      goto LAB_08001bc2;\n    }\n    if (value_one == 5) {\n      _DAT_40021020 = _DAT_40021020 | 4;\n      goto LAB_08001e1a;\n    }\n    _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n  }\n  value_one = FUN_0800115c();\n  while (-1 < (int)((_DAT_40021020 >> 1) << 0x1f)) {\n    value_two = FUN_0800115c();\n    if (5000 < (uint)(value_two - value_one)) {\n      return 3;\n    }\n  }\nLAB_08001bc2:\n  if (config_values[7] == 0) {\n    return 0;\n  }\n  if ((_DAT_40021004 & 0xc) != 8) {\n    if (config_values[7] != 2) {\n      uRam42420060 = 0;\n      value_one = FUN_0800115c();\n      do {\n        if (-1 < (int)((_DAT_40021000 >> 0x19) << 0x1f)) {\n          return 0;\n        }\n        value_two = FUN_0800115c();\n      } while ((uint)(value_two - value_one) < 3);\n      return 3;\n    }\n    uRam42420060 = 0;\n    value_one = FUN_0800115c();\n    do {\n      if (-1 < (int)((_DAT_40021000 >> 0x19) << 0x1f)) {\n        if (config_values[8] == 0x10000) {\n          _DAT_40021004 = _DAT_40021004 & 0xfffdffff | config_values[2];\n        }\n        _DAT_40021004 = config_values[8] | config_values[9] | _DAT_40021004 & 0xffc2ffff;\n        uRam42420060 = 1;\n        value_one = FUN_0800115c();\n        do {\n          if ((int)((_DAT_40021000 >> 0x19) << 0x1f) < 0) {\n            return 0;\n          }\n          value_two = FUN_0800115c();\n        } while ((uint)(value_two - value_one) < 3);\n        return 3;\n      }\n      value_two = FUN_0800115c();\n    } while ((uint)(value_two - value_one) < 3);\n    return 3;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08001b58": "check_configurations_08001b58",
                "param_1": "config_values",
                "iVar1": "value_one",
                "iVar2": "value_two"
            },
            "calling": [
                "FUN_08004514"
            ],
            "called": [
                "FUN_0800115c",
                "FUN_08001168"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002008": {
            "entrypoint": "0x08002008",
            "current_name": "calculate_clock_frequency_08002008",
            "code": "\n\n\nint calculateClockFrequency_08002008(void)\n\n{\n  undefined4 firstVal;\n  int clockFrequency;\n  undefined4 secondVal;\n  undefined4 *dataPtr;\n  uint clockDivisor;\n  undefined4 *outputPtr;\n  byte byteArray [4];\n  undefined4 outputArray [5];\n  \n  dataPtr = &DAT_080072f0;\n  outputPtr = outputArray;\n  do {\n    firstVal = *dataPtr;\n    secondVal = dataPtr[1];\n    dataPtr = dataPtr + 2;\n    *outputPtr = firstVal;\n    outputPtr[1] = secondVal;\n    outputPtr = outputPtr + 2;\n  } while (dataPtr != (undefined4 *)\"../Src/MPU9250.c\");\n  byteArray[0] = 1;\n  byteArray[1] = 2;\n  if ((_DAT_40021004 & 0xc) == 8) {\n    if ((int)(_DAT_40021004 << 0xf) < 0) {\n      clockDivisor = 8000000 / byteArray[(_DAT_40021004 & 0x20000) >> 0x11];\n    }\n    else {\n      clockDivisor = 4000000;\n    }\n    clockFrequency = clockDivisor * *(byte *)((int)outputArray + ((_DAT_40021004 & 0x3c0000) >> 0x12));\n  }\n  else {\n    clockFrequency = 8000000;\n  }\n  return clockFrequency;\n}\n\n",
            "renaming": {
                "FUN_08002008": "calculate_clock_frequency_08002008",
                "uVar1": "firstVal",
                "iVar2": "clockFrequency",
                "uVar3": "secondVal",
                "puVar4": "dataPtr",
                "uVar5": "clockDivisor",
                "puVar6": "outputPtr",
                "local_24": "byteArray",
                "local_20": "outputArray"
            },
            "calling": [
                "FUN_0800209c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800209c": {
            "entrypoint": "0x0800209c",
            "current_name": "check_data_validity_0800209c",
            "code": "\n\n\nundefined4 check_data_validity_0800209c(uint *data,uint size)\n\n{\n  char flag1;\n  char flag2;\n  int shifted_data;\n  uint value;\n  int comparison;\n  uint shifted_value;\n  \n  if ((size <= (_DAT_40022000 & 7)) ||\n     (_DAT_40022000 = _DAT_40022000 & 0xfffffff8 | size, size == (size & 7))) {\n    if ((int)(*data << 0x1e) < 0) {\n      _DAT_40021004 = _DAT_40021004 & 0xffffff0f | data[2];\n    }\n    shifted_data = *data << 0x1f;\n    if (-1 < shifted_data) {\nLAB_080020ba:\n      if ((size < (_DAT_40022000 & 7)) &&\n         (_DAT_40022000 = _DAT_40022000 & 0xfffffff8 | size, size != (size & 7))) {\n        return 1;\n      }\n      if ((*data & 4) != 0) {\n        _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | data[3];\n      }\n      if ((int)(*data << 0x1c) < 0) {\n        _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | data[4] << 3;\n      }\n      value = FUN_08002008();\n      DAT_200001bc = value >> (&DAT_08007361)[(_DAT_40021004 & 0xf0) >> 4];\n      FUN_08001104(0);\n      return 0;\n    }\n    value = data[1];\n    if (value == 1) {\n      flag2 = '\\x01';\n      flag1 = '\\0';\n    }\n    else {\n      shifted_value = _DAT_40021000;\n      if (value == 2) goto LAB_08002176;\n      flag2 = '\\0';\n      flag1 = '\\x01';\n    }\n    shifted_value = (_DAT_40021000 >>\n            (LZCOUNT((uint)(byte)(flag1 << 6) << 0x18 | (uint)(byte)(flag2 << 6) << 8) & 0x1fU)) <<\n            0x1f;\n    if ((int)shifted_value < 0) {\nLAB_08002176:\n      _DAT_40021004 = _DAT_40021004 & 0xfffffffc | value;\n      shifted_data = FUN_0800115c(shifted_data,shifted_value);\n      if (data[1] == 1) {\n        do {\n          if ((_DAT_40021004 & 0xc) == 4) goto LAB_080020ba;\n          comparison = FUN_0800115c();\n        } while ((uint)(comparison - shifted_data) < 0x1389);\n      }\n      else if (data[1] == 2) {\n        do {\n          if ((_DAT_40021004 & 0xc) == 8) goto LAB_080020ba;\n          comparison = FUN_0800115c();\n        } while ((uint)(comparison - shifted_data) < 0x1389);\n      }\n      else {\n        do {\n          if ((_DAT_40021004 & 0xc) == 0) goto LAB_080020ba;\n          comparison = FUN_0800115c();\n        } while ((uint)(comparison - shifted_data) < 0x1389);\n      }\n      return 3;\n    }\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800209c": "check_data_validity_0800209c",
                "param_1": "data",
                "param_2": "size",
                "cVar1": "flag1",
                "cVar2": "flag2",
                "iVar3": "shifted_data",
                "uVar4": "value",
                "iVar5": "comparison",
                "uVar6": "shifted_value"
            },
            "calling": [
                "FUN_08004514"
            ],
            "called": [
                "FUN_08001104",
                "FUN_0800115c",
                "FUN_08002008"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002214": {
            "entrypoint": "0x08002214",
            "current_name": "get_global_value_08002214",
            "code": "\nundefined4 get_global_value_08002214(void)\n\n{\n  return DAT_200001bc;\n}\n\n",
            "renaming": {
                "FUN_08002214": "get_global_value_08002214"
            },
            "calling": [
                "FUN_08001104",
                "FUN_08004514"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002220": {
            "entrypoint": "0x08002220",
            "current_name": "get_shifted_value_08002220",
            "code": "\n\n\nuint get_shifted_value_08002220(void)\n\n{\n  return DAT_200001bc >> (&DAT_08007371)[(_DAT_40021004 & 0x700) >> 8];\n}\n\n",
            "renaming": {
                "FUN_08002220": "get_shifted_value_08002220"
            },
            "calling": [
                "FUN_08001754",
                "FUN_080025e8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002250": {
            "entrypoint": "0x08002250",
            "current_name": "extracted_value_from_binary_08002250",
            "code": "\n\n\nuint extractedValueFromBinary_08002250(void)\n\n{\n  return DAT_200001bc >> (&DAT_08007371)[(_DAT_40021004 & 0x3800) >> 0xb];\n}\n\n",
            "renaming": {
                "FUN_08002250": "extracted_value_from_binary_08002250"
            },
            "calling": [
                "FUN_080025e8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002280": {
            "entrypoint": "0x08002280",
            "current_name": "update_registers_08002280",
            "code": "\nvoid updateRegisters_08002280(int registerAddress,uint *registerValues)\n\n{\n  uint updatedRegisterValue1;\n  uint updatedRegisterValue2;\n  uint updatedRegisterValue3;\n  \n  *(uint *)(registerAddress + 0x20) = *(uint *)(registerAddress + 0x20) & 0xfffffffe;\n  updatedRegisterValue2 = *(uint *)(registerAddress + 4);\n  updatedRegisterValue3 = *registerValues;\n  updatedRegisterValue1 = *(uint *)(registerAddress + 0x20) & 0xfffffffd | registerValues[2];\n  if (registerAddress == 0x40012c00) {\n    updatedRegisterValue1 = (updatedRegisterValue1 & 0xfffffff7 | registerValues[3]) & 0xfffffffb;\n    updatedRegisterValue2 = updatedRegisterValue2 & 0xfffffcff | registerValues[5] | registerValues[6];\n  }\n  *(uint *)(registerAddress + 4) = updatedRegisterValue2;\n  *(uint *)(registerAddress + 0x18) = *(uint *)(registerAddress + 0x18) & 0xffffff8c | updatedRegisterValue3;\n  *(uint *)(registerAddress + 0x34) = registerValues[1];\n  *(uint *)(registerAddress + 0x20) = updatedRegisterValue1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002280": "update_registers_08002280",
                "param_1": "registerAddress",
                "param_2": "registerValues",
                "uVar1": "updatedRegisterValue1",
                "uVar2": "updatedRegisterValue2",
                "uVar3": "updatedRegisterValue3"
            },
            "calling": [
                "FUN_0800245c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080022d0": {
            "entrypoint": "0x080022d0",
            "current_name": "update_config_080022d0",
            "code": "\nvoid updateConfig_080022d0(int configAddress,uint *data)\n\n{\n  uint newConfigValue;\n  uint oldConfigValue1;\n  uint oldConfigValue2;\n  \n  *(uint *)(configAddress + 0x20) = *(uint *)(configAddress + 0x20) & 0xfffffeff;\n  oldConfigValue1 = *(uint *)(configAddress + 4);\n  oldConfigValue2 = *data;\n  newConfigValue = *(uint *)(configAddress + 0x20) & 0xfffffdff | data[2] << 8;\n  if (configAddress == 0x40012c00) {\n    newConfigValue = (newConfigValue & 0xfffff7ff | data[3] << 8) & 0xfffffbff;\n    oldConfigValue1 = oldConfigValue1 & 0xffffcfff | (data[5] | data[6]) << 4;\n  }\n  *(uint *)(configAddress + 4) = oldConfigValue1;\n  *(uint *)(configAddress + 0x1c) = *(uint *)(configAddress + 0x1c) & 0xffffff8c | oldConfigValue2;\n  *(uint *)(configAddress + 0x3c) = data[1];\n  *(uint *)(configAddress + 0x20) = newConfigValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080022d0": "update_config_080022d0",
                "param_1": "configAddress",
                "param_2": "data",
                "uVar1": "newConfigValue",
                "uVar2": "oldConfigValue1",
                "uVar3": "oldConfigValue2"
            },
            "calling": [
                "FUN_0800245c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002324": {
            "entrypoint": "0x08002324",
            "current_name": "update_configuration_08002324",
            "code": "\nvoid updateConfiguration_08002324(int configAddress,int *configData)\n\n{\n  uint tempValue;\n  int value1;\n  int value2;\n  int defaultValue;\n  \n  *(uint *)(configAddress + 0x20) = *(uint *)(configAddress + 0x20) & 0xffffefff;\n  tempValue = *(uint *)(configAddress + 4);\n  value1 = *configData;\n  value2 = configData[2];\n  defaultValue = 0x40012c00;\n  if (configAddress == 0x40012c00) {\n    defaultValue = configData[5];\n    tempValue = tempValue & 0xffffbfff;\n  }\n  if (configAddress == 0x40012c00) {\n    tempValue = tempValue | defaultValue << 6;\n  }\n  *(uint *)(configAddress + 4) = tempValue;\n  *(uint *)(configAddress + 0x1c) = *(uint *)(configAddress + 0x1c) & 0xffff8cff | value1 << 8;\n  *(int *)(configAddress + 0x40) = configData[1];\n  *(uint *)(configAddress + 0x20) = *(uint *)(configAddress + 0x20) & 0xffffdfff | value2 << 0xc;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002324": "update_configuration_08002324",
                "param_1": "configAddress",
                "param_2": "configData",
                "uVar1": "tempValue",
                "iVar2": "value1",
                "iVar3": "value2",
                "iVar4": "defaultValue"
            },
            "calling": [
                "FUN_0800245c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002368": {
            "entrypoint": "0x08002368",
            "current_name": "update_memory_08002368",
            "code": "\nvoid updateMemory_08002368(uint *destination,uint *source)\n\n{\n  uint originalValue;\n  \n  originalValue = *destination;\n  if (((((destination == (uint *)0x40012c00) || (destination == (uint *)0x40000000)) ||\n       (destination == (uint *)0x40000400)) || (destination == (uint *)0x40000800)) &&\n     (((originalValue = originalValue & 0xffffff8f | source[1], destination == (uint *)0x40012c00 ||\n       (destination == (uint *)0x40000000)) ||\n      ((destination == (uint *)0x40000400 || (destination == (uint *)0x40000800)))))) {\n    originalValue = originalValue & 0xfffffcff | source[3];\n  }\n  *destination = originalValue;\n  destination[0xb] = source[2];\n  destination[10] = *source;\n  originalValue = 0x40012c00;\n  if (destination == (uint *)0x40012c00) {\n    originalValue = source[4];\n  }\n  if (destination == (uint *)0x40012c00) {\n    destination[0xc] = originalValue;\n  }\n  destination[5] = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002368": "update_memory_08002368",
                "param_1": "destination",
                "param_2": "source",
                "uVar1": "originalValue"
            },
            "calling": [
                "FUN_080023d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080023d0": {
            "entrypoint": "0x080023d0",
            "current_name": "validate_input_080023d0",
            "code": "\nundefined4 validate_input_080023d0(undefined4 *input_param)\n\n{\n  if (input_param != (undefined4 *)0x0) {\n    if (*(char *)((int)input_param + 0x39) == '\\0') {\n      *(undefined *)(input_param + 0xe) = 0;\n      FUN_08004d8c();\n    }\n    *(undefined *)((int)input_param + 0x39) = 2;\n    FUN_08002368(*input_param,input_param + 1);\n    *(undefined *)((int)input_param + 0x39) = 1;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080023d0": "validate_input_080023d0",
                "param_1": "input_param"
            },
            "calling": [
                "FUN_0800458c"
            ],
            "called": [
                "FUN_08002368",
                "FUN_08004d8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002404": {
            "entrypoint": "0x08002404",
            "current_name": "update_params_08002404",
            "code": "\nvoid updateParams_08002404(int paramAddress,int *paramList)\n\n{\n  uint updatedParam1;\n  uint updatedParam2;\n  int updatedVariable;\n  \n  *(uint *)(paramAddress + 0x20) = *(uint *)(paramAddress + 0x20) & 0xffffffef;\n  updatedParam2 = *(uint *)(paramAddress + 4);\n  updatedVariable = *paramList;\n  updatedParam1 = *(uint *)(paramAddress + 0x20) & 0xffffffdf | paramList[2] << 4;\n  if (paramAddress == 0x40012c00) {\n    updatedParam1 = (updatedParam1 & 0xffffff7f | paramList[3] << 4) & 0xffffffbf;\n    updatedParam2 = updatedParam2 & 0xfffff3ff | (paramList[5] | paramList[6]) << 2;\n  }\n  *(uint *)(paramAddress + 4) = updatedParam2;\n  *(uint *)(paramAddress + 0x18) = *(uint *)(paramAddress + 0x18) & 0xffff8cff | updatedVariable << 8;\n  *(int *)(paramAddress + 0x38) = paramList[1];\n  *(uint *)(paramAddress + 0x20) = updatedParam1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002404": "update_params_08002404",
                "param_1": "paramAddress",
                "param_2": "paramList",
                "uVar1": "updatedParam1",
                "uVar2": "updatedParam2",
                "iVar3": "updatedVariable"
            },
            "calling": [
                "FUN_0800245c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800245c": {
            "entrypoint": "0x0800245c",
            "current_name": "process_data_0800245c",
            "code": "\nvoid processData_0800245c(int *data,undefined4 param2,undefined4 param3)\n\n{\n  int temp1;\n  int temp2;\n  int temp3;\n  int temp4;\n  int var1;\n  uint result;\n  int var3;\n  \n  if (*(char *)(data + 0xe) == '\\x01') {\n    return;\n  }\n  *(undefined *)((int)data + 0x39) = 2;\n  *(undefined *)(data + 0xe) = 1;\n  switch(param3) {\n  case 0:\n    FUN_08002280(*data);\n    var3 = *data;\n    result = *(uint *)(temp1 + 0x10);\n    *(uint *)(var3 + 0x18) = *(uint *)(var3 + 0x18) | 8;\n    *(uint *)(var3 + 0x18) = *(uint *)(var3 + 0x18) & 0xfffffffb;\n    result = *(uint *)(var3 + 0x18) | result;\n    break;\n  default:\n    goto switchD_0800247a_caseD_1;\n  case 4:\n    FUN_08002404(*data);\n    var3 = *data;\n    var1 = *(int *)(temp2 + 0x10);\n    *(uint *)(var3 + 0x18) = *(uint *)(var3 + 0x18) | 0x800;\n    *(uint *)(var3 + 0x18) = *(uint *)(var3 + 0x18) & 0xfffffbff;\n    result = *(uint *)(var3 + 0x18) | var1 << 8;\n    break;\n  case 8:\n    FUN_080022d0(*data);\n    var3 = *data;\n    result = *(uint *)(temp3 + 0x10);\n    *(uint *)(var3 + 0x1c) = *(uint *)(var3 + 0x1c) | 8;\n    *(uint *)(var3 + 0x1c) = *(uint *)(var3 + 0x1c) & 0xfffffffb;\n    result = *(uint *)(var3 + 0x1c) | result;\n    goto LAB_080024fa;\n  case 0xc:\n    FUN_08002324(*data);\n    var3 = *data;\n    var1 = *(int *)(temp4 + 0x10);\n    *(uint *)(var3 + 0x1c) = *(uint *)(var3 + 0x1c) | 0x800;\n    *(uint *)(var3 + 0x1c) = *(uint *)(var3 + 0x1c) & 0xfffffbff;\n    result = *(uint *)(var3 + 0x1c) | var1 << 8;\nLAB_080024fa:\n    *(uint *)(var3 + 0x1c) = result;\n    goto switchD_0800247a_caseD_1;\n  }\n  *(uint *)(var3 + 0x18) = result;\nswitchD_0800247a_caseD_1:\n  *(undefined *)((int)data + 0x39) = 1;\n  *(undefined *)(data + 0xe) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800245c": "process_data_0800245c",
                "param_1": "data",
                "param_2": "param2",
                "param_3": "param3",
                "extraout_r1": "temp1",
                "extraout_r1_00": "temp2",
                "extraout_r1_01": "temp3",
                "extraout_r1_02": "temp4",
                "uVar2": "result",
                "iVar1": "var1",
                "iVar3": "var3"
            },
            "calling": [
                "FUN_0800458c"
            ],
            "called": [
                "FUN_080022d0",
                "FUN_08002324",
                "FUN_08002404",
                "FUN_08002280"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002520": {
            "entrypoint": "0x08002520",
            "current_name": "update_bitwise_mask_08002520",
            "code": "\nvoid updateBitwiseMask_08002520(int ptr_param1,uint param2,int param3)\n\n{\n  *(uint *)(ptr_param1 + 0x20) = *(uint *)(ptr_param1 + 0x20) & ~(1 << (param2 & 0xff));\n  *(uint *)(ptr_param1 + 0x20) = param3 << (param2 & 0xff) | *(uint *)(ptr_param1 + 0x20);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002520": "update_bitwise_mask_08002520",
                "param_1": "ptr_param1",
                "param_2": "param2",
                "param_3": "param3"
            },
            "calling": [
                "FUN_08002538"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002538": {
            "entrypoint": "0x08002538",
            "current_name": "initialize_memory_08002538",
            "code": "\nundefined4 initializeMemory_08002538(uint **memoryPointer,undefined4 value)\n\n{\n  uint newValue;\n  uint *memoryAddress;\n  \n  FUN_08002520(*memoryPointer,value,1);\n  memoryAddress = *memoryPointer;\n  newValue = 0x40012c00;\n  if (memoryAddress == (uint *)0x40012c00) {\n    newValue = uRam40012c44 | 0x8000;\n  }\n  if (memoryAddress == (uint *)0x40012c00) {\n    memoryAddress[0x11] = newValue;\n  }\n  *memoryAddress = *memoryAddress | 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002538": "initialize_memory_08002538",
                "param_1": "memoryPointer",
                "param_2": "value",
                "uVar1": "newValue",
                "puVar2": "memoryAddress"
            },
            "calling": [
                "FUN_08003ff4"
            ],
            "called": [
                "FUN_08002520"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002564": {
            "entrypoint": "0x08002564",
            "current_name": "check_and_set_flag_08002564",
            "code": "\nundefined4 checkAndSetFlag_08002564(int *flags,uint *values)\n\n{\n  undefined4 result;\n  \n  result = 2;\n  if (*(char *)(flags + 0xe) != '\\x01') {\n    *(undefined *)((int)flags + 0x39) = 2;\n    *(uint *)(*flags + 0x44) =\n         *values | values[1] | values[2] | values[3] | values[4] | values[5] | values[6];\n    *(undefined *)((int)flags + 0x39) = 1;\n    result = 0;\n    *(undefined *)(flags + 0xe) = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002564": "check_and_set_flag_08002564",
                "param_1": "flags",
                "param_2": "values",
                "uVar1": "result"
            },
            "calling": [
                "FUN_0800458c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080025a4": {
            "entrypoint": "0x080025a4",
            "current_name": "set_permissions_080025a4",
            "code": "\nundefined4 setPermissions_080025a4(int *paramArray,uint *flagArray)\n\n{\n  uint flag1;\n  undefined4 result;\n  int ptr1;\n  uint flag2;\n  \n  result = 2;\n  if (*(char *)(paramArray + 0xe) != '\\x01') {\n    *(undefined *)((int)paramArray + 0x39) = 2;\n    ptr1 = *paramArray;\n    flag2 = *flagArray;\n    flag1 = flagArray[1];\n    *(uint *)(ptr1 + 4) = *(uint *)(ptr1 + 4) & 0xffffff8f;\n    *(uint *)(ptr1 + 4) = *(uint *)(ptr1 + 4) | flag2;\n    *(uint *)(ptr1 + 8) = *(uint *)(ptr1 + 8) & 0xffffff7f;\n    *(uint *)(ptr1 + 8) = *(uint *)(ptr1 + 8) | flag1;\n    *(undefined *)((int)paramArray + 0x39) = 1;\n    result = 0;\n    *(undefined *)(paramArray + 0xe) = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080025a4": "set_permissions_080025a4",
                "param_1": "paramArray",
                "param_2": "flagArray",
                "uVar1": "flag1",
                "uVar2": "result",
                "iVar3": "ptr1",
                "uVar4": "flag2"
            },
            "calling": [
                "FUN_0800458c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080025e8": {
            "entrypoint": "0x080025e8",
            "current_name": "calculate_values_080025e8",
            "code": "\nvoid calculateValues_080025e8(int *inputArray)\n\n{\n  int tempVar1;\n  int tempVar2;\n  uint tempVar3;\n  int tempVar4;\n  int tempVar5;\n  int baseAddress;\n  \n  baseAddress = *inputArray;\n  tempVar3 = inputArray[4];\n  *(uint *)(baseAddress + 0x10) = *(uint *)(baseAddress + 0x10) & 0xffffcfff | inputArray[3];\n  *(uint *)(baseAddress + 0xc) = inputArray[2] | tempVar3 | inputArray[5] | *(uint *)(baseAddress + 0xc) & 0xffffe9f3;\n  *(uint *)(baseAddress + 0x14) = *(uint *)(baseAddress + 0x14) & 0xfffffcff | inputArray[6];\n  if (baseAddress == 0x40013800) {\n    tempVar1 = FUN_08002250();\n    tempVar4 = (int)(((ulonglong)(uint)(tempVar1 * 0x19) / (ulonglong)(uint)(inputArray[1] << 2)) / 100);\n    tempVar1 = FUN_08002250();\n    tempVar5 = inputArray[1];\n    tempVar2 = FUN_08002250();\n    tempVar2 = (uint)(tempVar1 * 0x19) / (uint)(tempVar5 << 2) +\n            (int)(((ulonglong)(uint)(tempVar2 * 0x19) / (ulonglong)(uint)(inputArray[1] << 2)) / 100) *\n            -100;\n    tempVar1 = FUN_08002250();\n    tempVar3 = (uint)(tempVar1 * 0x19) / (uint)(inputArray[1] << 2);\n    tempVar1 = FUN_08002250();\n  }\n  else {\n    tempVar1 = FUN_08002220();\n    tempVar4 = (int)(((ulonglong)(uint)(tempVar1 * 0x19) / (ulonglong)(uint)(inputArray[1] << 2)) / 100);\n    tempVar1 = FUN_08002220();\n    tempVar5 = inputArray[1];\n    tempVar2 = FUN_08002220();\n    tempVar2 = (uint)(tempVar1 * 0x19) / (uint)(tempVar5 << 2) +\n            (int)(((ulonglong)(uint)(tempVar2 * 0x19) / (ulonglong)(uint)(inputArray[1] << 2)) / 100) *\n            -100;\n    tempVar1 = FUN_08002220();\n    tempVar3 = (uint)(tempVar1 * 0x19) / (uint)(inputArray[1] << 2);\n    tempVar1 = FUN_08002220();\n  }\n  *(uint *)(baseAddress + 8) =\n       (((tempVar3 + (int)(((ulonglong)(uint)(tempVar1 * 0x19) / (ulonglong)(uint)(inputArray[1] << 2)) / 100\n                       ) * -100) * 0x10 + 0x32) / 100 & 0xf | (tempVar2 * 0x10 + 0x32U) / 100 & 0xf0) +\n       tempVar4 * 0x10;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080025e8": "calculate_values_080025e8",
                "param_1": "inputArray",
                "iVar1": "tempVar1",
                "iVar2": "tempVar2",
                "uVar3": "tempVar3",
                "iVar4": "tempVar4",
                "iVar5": "tempVar5",
                "iVar6": "baseAddress"
            },
            "calling": [
                "FUN_08002724"
            ],
            "called": [
                "FUN_08002220",
                "FUN_08002250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002724": {
            "entrypoint": "0x08002724",
            "current_name": "initialize_param_08002724",
            "code": "\nundefined4 initializeParam_08002724(int *param)\n\n{\n  int tempVar;\n  \n  if (param != (int *)0x0) {\n    if (*(char *)((int)param + 0x39) == '\\0') {\n      *(undefined *)(param + 0xe) = 0;\n      FUN_08004e7c();\n    }\n    *(undefined *)((int)param + 0x39) = 2;\n    *(uint *)(*param + 0xc) = *(uint *)(*param + 0xc) & 0xffffdfff;\n    FUN_080025e8(param);\n    tempVar = *param;\n    *(uint *)(tempVar + 0x10) = *(uint *)(tempVar + 0x10) & 0xffffb7ff;\n    *(uint *)(tempVar + 0x14) = *(uint *)(tempVar + 0x14) & 0xffffffd5;\n    *(uint *)(tempVar + 0xc) = *(uint *)(tempVar + 0xc) | 0x2000;\n    field = 0;\n    *(undefined *)((int)param + 0x39) = 1;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08002724": "initialize_param_08002724",
                "param_1": "param",
                "iVar1": "tempVar",
                "param_1[0xf]": "field"
            },
            "calling": [
                "FUN_0800458c"
            ],
            "called": [
                "FUN_08004e7c",
                "FUN_080025e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800290a": {
            "entrypoint": "0x0800290a",
            "current_name": "FUNC_0800290a",
            "code": "\nvoid FUNC_0800290a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800290a": "FUNC_0800290a"
            },
            "calling": [
                "FUN_0800299a"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800290c": {
            "entrypoint": "0x0800290c",
            "current_name": "process_data_0800290c",
            "code": "\nundefined4 processData_0800290c(int *inputData)\n\n{\n  byte tempByte;\n  int functionPointer;\n  uint tempUint;\n  undefined4 tempUint2;\n  short tempShort;\n  ushort *ushortPointer1;\n  ushort *ushortPointer2;\n  bool isConditionTrue;\n  \n  if ((*(byte *)((int)inputData + 0x39) & 0xef) != 0x22) {\n    return 2;\n  }\n  functionPointer = *inputData;\n  ushortPointer1 = (ushort *)inputData[10];\n  if (inputData[2] == 0x1000) {\n    if (inputData[4] == 0) {\n      ushortPointer2 = ushortPointer1 + 1;\n      *ushortPointer1 = (ushort)((uint)(*(int *)(functionPointer + 4) << 0x17) >> 0x17);\n    }\n    else {\n      ushortPointer2 = (ushort *)((int)ushortPointer1 + 1);\n      *ushortPointer1 = (ushort)*(int *)(functionPointer + 4) & 0xff;\n    }\n    inputData[10] = (int)ushortPointer2;\n  }\n  else {\n    if (inputData[4] == 0) {\n      tempByte = (byte)*(undefined4 *)(functionPointer + 4);\n      inputData[10] = (int)ushortPointer1 + 1;\n    }\n    else {\n      tempUint2 = *(undefined4 *)(functionPointer + 4);\n      inputData[10] = (int)ushortPointer1 + 1;\n      tempByte = (byte)tempUint2 & 0x7f;\n    }\n    *(byte *)ushortPointer1 = tempByte;\n  }\n  tempShort = *(short *)((int)inputData + 0x2e) + -1;\n  *(short *)((int)inputData + 0x2e) = tempShort;\n  if (tempShort == 0) {\n    functionPointer = *inputData;\n    *(uint *)(functionPointer + 0xc) = *(uint *)(functionPointer + 0xc) & 0xffffffdf;\n    isConditionTrue = *(char *)((int)inputData + 0x39) != '2';\n    if (isConditionTrue) {\n      tempUint = *(uint *)(functionPointer + 0xc) & 0xfffffeff;\n    }\n    else {\n      functionPointer = 0x12;\n      tempUint = 0x32;\n    }\n    if (isConditionTrue) {\n      *(uint *)(functionPointer + 0xc) = tempUint;\n      tempUint = *(uint *)(functionPointer + 0x14) & 0xfffffffe;\n    }\n    if (isConditionTrue) {\n      *(uint *)(functionPointer + 0x14) = tempUint;\n      functionPointer = 1;\n    }\n    *(char *)((int)inputData + 0x39) = (char)functionPointer;\n    FUN_08004c30();\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800290c": "process_data_0800290c",
                "param_1": "inputData",
                "bVar1": "tempByte",
                "iVar2": "functionPointer",
                "uVar3": "tempUint",
                "uVar4": "tempUint2",
                "sVar5": "tempShort",
                "puVar6": "ushortPointer1",
                "puVar7": "ushortPointer2",
                "bVar8": "isConditionTrue"
            },
            "calling": [
                "FUN_0800299a"
            ],
            "called": [
                "FUN_08004c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002998": {
            "entrypoint": "0x08002998",
            "current_name": "FUNC_08002998",
            "code": "\nvoid FUNC_08002998(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002998": "FUNC_08002998"
            },
            "calling": [
                "FUN_0800299a"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800299a": {
            "entrypoint": "0x0800299a",
            "current_name": "check_and_process_data_0800299a",
            "code": "\nvoid checkAndProcessData_0800299a(uint **data)\n\n{\n  uint var1;\n  short var2;\n  uint var3;\n  uint *var4;\n  undefined var5;\n  uint *var6;\n  uint var7;\n  bool var8;\n  \n  var6 = *data;\n  var3 = *var6;\n  var1 = var6[3];\n  if ((var3 & 0xf) == 0) {\n    if (((int)(var3 << 0x1a) < 0) && ((int)(var1 << 0x1a) < 0)) {\n      FUN_0800290c();\n      return;\n    }\n  }\n  else {\n    var7 = var6[5] & 1;\n    if ((var7 != 0) || ((var1 & 0x120) != 0)) {\n      var6 = (uint *)(var3 << 0x1f);\n      if ((int)var6 < 0) {\n        var8 = (int)(var1 << 0x17) < 0;\n        if (var8) {\n          var6 = (uint *)((uint)data[0xf] | 1);\n        }\n        if (var8) {\n          data[0xf] = var6;\n        }\n      }\n      if (((int)(var3 << 0x1d) < 0) && (var7 != 0)) {\n        data[0xf] = (uint *)((uint)data[0xf] | 2);\n      }\n      if (((int)(var3 << 0x1e) < 0) && (var7 != 0)) {\n        data[0xf] = (uint *)((uint)data[0xf] | 4);\n      }\n      if (((int)(var3 << 0x1c) < 0) && (var7 != 0)) {\n        data[0xf] = (uint *)((uint)data[0xf] | 8);\n      }\n      if (data[0xf] == (uint *)0x0) {\n        return;\n      }\n      if (((int)(var3 << 0x1a) < 0) && ((int)(var1 << 0x1a) < 0)) {\n        FUN_0800290c(data);\n      }\n      var6 = *data;\n      if ((-1 < (int)data[0xf] << 0x1c) && ((var6[5] & 0x40) == 0)) {\n        FUNC_08002998(data);\n        data[0xf] = (uint *)0x0;\n        return;\n      }\n      var6[3] = var6[3] & 0xfffffedf;\n      var6[5] = var6[5] & 0xfffffffe;\n      *(undefined *)((int)data + 0x39) = 1;\n      FUNC_08002998(data);\n      return;\n    }\n  }\n  if (((int)(var3 << 0x18) < 0) && ((int)(var1 << 0x18) < 0)) {\n    if ((*(byte *)((int)data + 0x39) & 0xdf) == 0x12) {\n      var4 = data[8];\n      if (data[2] == (uint *)0x1000) {\n        var6[1] = *(ushort *)var4 & 0x1ff;\n        if (data[4] == (uint *)0x0) {\n          var4 = (uint *)((int)var4 + 2);\n        }\n        else {\n          var4 = (uint *)((int)var4 + 1);\n        }\n        data[8] = var4;\n      }\n      else {\n        data[8] = (uint *)((int)var4 + 1);\n        var6[1] = (uint)*(byte *)var4;\n      }\n      var2 = *(short *)((int)data + 0x26) + -1;\n      *(short *)((int)data + 0x26) = var2;\n      if (var2 == 0) {\n        var6[3] = var6[3] & 0xffffff7f;\n        var6[3] = var6[3] | 0x40;\n        return;\n      }\n    }\n  }\n  else if (((int)(var3 << 0x19) < 0) && ((int)(var1 << 0x19) < 0)) {\n    var6[3] = var6[3] & 0xffffffbf;\n    if (*(char *)((int)data + 0x39) == '2') {\n      var5 = 0x22;\n    }\n    else {\n      var5 = 1;\n    }\n    *(undefined *)((int)data + 0x39) = var5;\n    FUNC_0800290a(data);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800299a": "check_and_process_data_0800299a",
                "param_1": "data",
                "uVar1": "var1",
                "sVar2": "var2",
                "uVar3": "var3",
                "puVar4": "var4",
                "uVar5": "var5",
                "puVar6": "var6",
                "uVar7": "var7",
                "bVar8": "var8"
            },
            "calling": [],
            "called": [
                "FUN_08002998",
                "FUN_0800290a",
                "FUN_0800290c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ad0": {
            "entrypoint": "0x08002ad0",
            "current_name": "initialize_mpu9250_08002ad0",
            "code": "\nvoid initializeMPU9250_08002ad0(void)\n\n{\n  FUN_0800407c(0xd0,0x75,\"../Src/MPU9250.c\",0x3b);\n  FUN_0800403c(0xd0,0x6b,0x80,1);\n  FUN_0800403c(0xd0,0x6b,1);\n  FUN_0800403c(0xd0,0x6c,0,1);\n  FUN_0800403c(0xd0,0x19,0,1);\n  FUN_0800403c(0xd0,0x1d,3,1);\n  FUN_0800403c(0xd0,0x1a,3,1);\n  FUN_0800403c(0xd0,0x1b,0x10,1);\n  FUN_0800403c(0xd0,0x1c,8,1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ad0": "initialize_mpu9250_08002ad0"
            },
            "calling": [
                "FUN_08002ea0"
            ],
            "called": [
                "FUN_0800407c",
                "FUN_0800403c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002b48": {
            "entrypoint": "0x08002b48",
            "current_name": "initialize_mpu9250_08002b48",
            "code": "\nvoid initializeMPU9250_08002b48(void)\n\n{\n  undefined4 result;\n  uint input_r3;\n  int tempVar2;\n  int tempVar3;\n  undefined4 data1;\n  undefined4 data2;\n  \n  data1 = 0;\n  data2 = input_r3 & 0xffff0000;\n  FUN_080040e8(0xd0,0x3b,&data1,6,\"../Src/MPU9250.c\",0x58);\n  DAT_200002f6 = CONCAT11(data1._2_1_,data1._3_1_);\n  DAT_200002f4 = CONCAT11((undefined)data1,data1._1_1_);\n  DAT_200002f8 = CONCAT11((undefined)data2,data2._1_1_);\n  tempVar3 = (int)DAT_200002f6;\n  tempVar2 = (int)DAT_200002f8;\n  result = FUN_08000c44();\n  result = FUN_08000cec(result,0x40800000);\n  DAT_200002d0 = FUN_08000cec(result,0x38000000);\n  result = FUN_08000c44(tempVar3);\n  result = FUN_08000cec(result,0x40800000);\n  DAT_200002d4 = FUN_08000cec(result,0x38000000);\n  result = FUN_08000c44(tempVar2);\n  result = FUN_08000cec(result,0x40800000);\n  DAT_200002d8 = FUN_08000cec(result,0x38000000);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002b48": "initialize_mpu9250_08002b48",
                "in_r3": "input_r3",
                "iVar2": "tempVar2",
                "iVar3": "tempVar3",
                "local_18": "data1",
                "local_14": "data2",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08002f28"
            ],
            "called": [
                "FUN_08000c44",
                "FUN_08000cec",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002bf0": {
            "entrypoint": "0x08002bf0",
            "current_name": "initialize_mpu9250_08002bf0",
            "code": "\nvoid initializeMPU9250_08002bf0(void)\n\n{\n  undefined4 result;\n  int intDeviceID_2;\n  int intDeviceID;\n  undefined4 errorCode;\n  undefined2 temp;\n  \n  errorCode = 0;\n  temp = 0;\n  FUN_080040e8(0xd0,0x43,&errorCode,6,\"../Src/MPU9250.c\",0x7b);\n  DAT_200002c0 = CONCAT11(errorCode._2_1_,errorCode._3_1_);\n  DAT_200002be = CONCAT11((undefined)errorCode,errorCode._1_1_);\n  DAT_200002c2 = CONCAT11((undefined)temp,temp._1_1_);\n  intDeviceID = (int)DAT_200002c0;\n  intDeviceID_2 = (int)DAT_200002c2;\n  result = FUN_08000c44();\n  result = FUN_08000cec(result,0x447a0000);\n  result = FUN_08000cec(result,0x38000000);\n  DAT_200002c4 = FUN_08000ad8(result,DAT_20000000);\n  result = FUN_08000c44(intDeviceID);\n  result = FUN_08000cec(result,0x447a0000);\n  result = FUN_08000cec(result,0x38000000);\n  DAT_200002c8 = FUN_08000ad8(result,DAT_20000004);\n  result = FUN_08000c44(intDeviceID_2);\n  result = FUN_08000cec(result,0x447a0000);\n  result = FUN_08000cec(result,0x38000000);\n  DAT_200002cc = FUN_08000ad8(result,DAT_20000008);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002bf0": "initialize_mpu9250_08002bf0",
                "local_20": "errorCode",
                "local_1c": "temp",
                "iVar3": "intDeviceID",
                "iVar2": "intDeviceID_2",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08002f28"
            ],
            "called": [
                "FUN_08000ad8",
                "FUN_08000c44",
                "FUN_08000cec",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002cb0": {
            "entrypoint": "0x08002cb0",
            "current_name": "initialize_mpu9250_08002cb0",
            "code": "\nvoid initializeMPU9250_08002cb0(undefined4 param1,undefined4 param2,undefined4 param3,uint param4)\n\n{\n  undefined4 uVar1;\n  uint localParam;\n  \n  localParam = param4;\n  FUN_0800403c(0xd0,0x37,0x22,1,param1,param2,param3);\n  FUN_0800403c(0xd0,0x6a,1);\n  FUN_0800407c(0x18,0,\"../Src/MPU9250.c\",0xad);\n  FUN_0800403c(0x18,0xb,1);\n  FUN_0800403c(0x18,10,0,1);\n  FUN_0800403c(0x18,10,0xf,1);\n  FUN_080040e8(0x18,0x10,&localParam,3,\"../Src/MPU9250.c\",0xb6);\n  uVar1 = FUN_08000c44((localParam & 0xff) - 0x80);\n  uVar1 = FUN_08000cec(uVar1,0x3b800000);\n  DAT_200002e8 = FUN_08000adc(uVar1,0x3f800000);\n  uVar1 = FUN_08000c44((localParam >> 8 & 0xff) - 0x80);\n  uVar1 = FUN_08000cec(uVar1,0x3b800000);\n  DAT_200002ec = FUN_08000adc(uVar1,0x3f800000);\n  uVar1 = FUN_08000c44((localParam >> 0x10 & 0xff) - 0x80);\n  uVar1 = FUN_08000cec(uVar1,0x3b800000);\n  DAT_200002f0 = FUN_08000adc(uVar1,0x3f800000);\n  FUN_0800403c(0x18,10,0,1);\n  FUN_0800403c(0x18,10,0x16,1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002cb0": "initialize_mpu9250_08002cb0",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "local_c": "localParam"
            },
            "calling": [
                "FUN_08002ea0"
            ],
            "called": [
                "FUN_0800407c",
                "FUN_0800403c",
                "FUN_08000c44",
                "FUN_08000cec",
                "FUN_080040e8",
                "FUN_08000adc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002d88": {
            "entrypoint": "0x08002d88",
            "current_name": "initialize_mpu9250_08002d88",
            "code": "\nvoid initializeMPU9250_08002d88(undefined4 param1,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int status;\n  undefined4 result;\n  undefined4 data;\n  int value;\n  undefined2 flag;\n  undefined temp1;\n  undefined temp2;\n  undefined temp3;\n  undefined temp4;\n  byte temp5;\n  undefined temp6;\n  \n  temp6 = (undefined)((uint)param4 >> 0x18);\n  flag = 0;\n  temp1 = 0;\n  temp2 = 0;\n  temp3 = 0;\n  temp4 = 0;\n  temp5 = 0;\n  status = FUN_0800407c(0x18,2,\"../Src/MPU9250.c\",0xd7,param1,param2);\n  if (status << 0x1f < 0) {\n    FUN_080040e8(0x18,3,&flag,7,\"../Src/MPU9250.c\",0xda);\n    data = DAT_2000001c;\n    if ((int)((uint)temp5 << 0x1c) < 0) {\n      DAT_200013b9._2_2_ = DAT_200013b9._2_2_ + 1;\n    }\n    else {\n      DAT_200002ba = CONCAT11(temp2,temp1);\n      DAT_200002bc = CONCAT11(temp4,temp3);\n      value = (int)DAT_200002ba;\n      status = (int)DAT_200002bc;\n      DAT_200002b8 = flag;\n      result = FUN_08000c44();\n      result = FUN_08000cec(result,data);\n      result = FUN_08000cec(result,DAT_200002e8);\n      result = FUN_08000ad8(result,DAT_20000020);\n      DAT_200002dc = FUN_08000cec(result,DAT_2000002c);\n      result = FUN_08000c44(value);\n      result = FUN_08000cec(result,data);\n      result = FUN_08000cec(result,DAT_200002ec);\n      result = FUN_08000ad8(result,DAT_20000024);\n      DAT_200002e0 = FUN_08000cec(result,DAT_20000030);\n      result = FUN_08000c44(status);\n      data = FUN_08000cec(result,data);\n      data = FUN_08000cec(data,DAT_200002f0);\n      data = FUN_08000ad8(data,DAT_20000028);\n      DAT_200002e4 = FUN_08000cec(data,DAT_20000034);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002d88": "initialize_mpu9250_08002d88",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "status",
                "uVar2": "result",
                "uVar3": "data",
                "iVar4": "value",
                "local_28": "flag",
                "uStack_26": "temp1",
                "uStack_25": "temp2",
                "local_24": "temp3",
                "local_23": "temp4",
                "local_22": "temp5",
                "uStack_21": "temp6"
            },
            "calling": [
                "FUN_08002f28"
            ],
            "called": [
                "FUN_0800407c",
                "FUN_08000ad8",
                "FUN_08000c44",
                "FUN_08000cec",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ea0": {
            "entrypoint": "0x08002ea0",
            "current_name": "initialize_08002ea0",
            "code": "\nvoid initialize_08002ea0(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  undefined4 extra_out1;\n  \n  FUN_08002ad0();\n  FUN_08002cb0();\n  FUN_08003314(0x3f19999a);\n  FUN_08003320(0,extra_out1,arg3,arg4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ea0": "initialize_08002ea0",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "extraout_r1": "extra_out1"
            },
            "calling": [
                "FUN_08004194"
            ],
            "called": [
                "FUN_08002ad0",
                "FUN_08002cb0",
                "FUN_08003320",
                "FUN_08003314"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ec0": {
            "entrypoint": "0x08002ec0",
            "current_name": "calculate_data_08002ec0",
            "code": "\nvoid calculateData_08002ec0(void)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  \n  uVar2 = DAT_2000024c;\n  uVar3 = DAT_20000010;\n  uVar1 = FUN_08000ad8(0x3f800000,DAT_20000010);\n  uVar2 = FUN_08000cec(uVar1,uVar2);\n  uVar3 = FUN_08000cec(uVar3,DAT_2000000c);\n  DAT_2000000c = FUN_08000adc(uVar3,uVar2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ec0": "calculate_data_08002ec0"
            },
            "calling": [
                "FUN_08004a84",
                "FUN_08002f28"
            ],
            "called": [
                "FUN_08000ad8",
                "FUN_08000cec",
                "FUN_08000adc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ed4": {
            "entrypoint": "0x08002ed4",
            "current_name": "calculate_and_update_result_08002ed4",
            "code": "\nvoid calculateAndUpdateResult_08002ed4(void)\n\n{\n  undefined4 result1;\n  undefined4 temp1;\n  undefined4 temp2;\n  \n  temp1 = DAT_20000248;\n  temp2 = input2;\n  result1 = FUN_08000ad8(0x3f800000,input2);\n  temp1 = FUN_08000cec(result1,temp1);\n  temp2 = FUN_08000cec(temp2,result);\n  result = FUN_08000adc(temp2,temp1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ed4": "calculate_and_update_result_08002ed4",
                "uRam20000018": "input2",
                "uVar1": "result1",
                "uVar2": "temp1",
                "uVar3": "temp2",
                "uRam20000014": "result"
            },
            "calling": [
                "FUN_08004a84",
                "FUN_08002f28"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ee8": {
            "entrypoint": "0x08002ee8",
            "current_name": "initialize_device_08002ee8",
            "code": "\nvoid initializeDevice_08002ee8(void)\n\n{\n  undefined4 configData;\n  int result;\n  \n  configData = DAT_20000250;\n  result = FUN_08001050(DAT_20000250,0xc3340000);\n  if ((result != 0) && (result = FUN_08001028(configData,0x42b40000), result != 0)) {\n    FUN_08000adc(configData,0x42b40000);\n    return;\n  }\n  FUN_08000ad8(configData,0x43870000);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ee8": "initialize_device_08002ee8",
                "uVar1": "configData",
                "iVar2": "result"
            },
            "calling": [
                "FUN_08004a84",
                "FUN_08002f28"
            ],
            "called": [
                "FUN_08000ad8",
                "FUN_08001050",
                "FUN_08001028",
                "FUN_08000adc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f28": {
            "entrypoint": "0x08002f28",
            "current_name": "initialize_system_08002f28",
            "code": "\n\n\nvoid initializeSystem_08002f28(void)\n\n{\n  undefined4 result;\n  \n  FUN_08002b48();\n  FUN_08002bf0();\n  FUN_08002d88();\n  DAT_20000258 = thunk_FUN_0800115c();\n  result = FUN_08000c3c(DAT_20000258 - DAT_20000254);\n  FUN_08000e54(result,0x447a0000);\n  FUN_08003320();\n  DAT_20000254 = DAT_20000258;\n  FUNC_08003330(DAT_200002d4 + -0x80000000,DAT_200002d0 + -0x80000000,DAT_200002d8,DAT_200002c8,\n               DAT_200002c4,DAT_200002cc + -0x80000000,DAT_200002dc,DAT_200002e0,DAT_200002e4,\n               &DAT_20000248);\n  _DAT_2000142a = (undefined2)((uint)(int)DAT_200002f4 / 100);\n  _DAT_2000142e = (undefined2)((uint)(int)DAT_200002f8 / 100);\n  DAT_2000142c = (undefined2)((uint)(int)DAT_200002f6 / 100);\n  DAT_20001430 = DAT_200002be;\n  _DAT_20001432 = DAT_200002c0;\n  DAT_20001434 = DAT_200002c2;\n  _DAT_20001436 = DAT_200002b8;\n  DAT_20001438 = DAT_200002ba;\n  DAT_2000143a = DAT_200002bc;\n  result = FUN_08002ed4();\n  FUN_08000cec(result,0x41200000);\n  DAT_20001395._0_2_ = FUN_08001078();\n  result = FUN_08002ec0();\n  FUN_08000cec(result,0x41200000);\n  DAT_20001395._2_2_ = FUN_08001078();\n  FUN_08002ee8();\n  DAT_20001399 = FUN_08001078();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f28": "initialize_system_08002f28",
                "uVar1": "result"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_08000e54",
                "FUN_08000c3c",
                "FUN_08002ee8",
                "FUN_08000cec",
                "FUN_08003320",
                "FUN_08002bf0",
                "FUN_08002ed4",
                "FUN_08002b48",
                "thunk_FUN_0800115c",
                "FUN_08002d88",
                "FUN_08003330",
                "FUN_08001078",
                "FUN_08002ec0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003034": {
            "entrypoint": "0x08003034",
            "current_name": "convert_values_08003034",
            "code": "\nuint convertValues_08003034(undefined4 value1,undefined4 value2,undefined4 value3,undefined4 value4)\n\n{\n  undefined4 convertedValue;\n  \n  convertedValue = value4;\n  FUN_080040b8(0xee,0,&convertedValue,3,\"../Src/MS5611.c\",0x8c,value3);\n  return (uint)CONCAT12((undefined)convertedValue,CONCAT11(convertedValue._1_1_,convertedValue._2_1_));\n}\n\n",
            "renaming": {
                "FUN_08003034": "convert_values_08003034",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4",
                "local_c": "convertedValue"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_080040b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003068": {
            "entrypoint": "0x08003068",
            "current_name": "get_data_08003068",
            "code": "\nundefined4 get_data_08003068(void)\n\n{\n  return DAT_200002fc;\n}\n\n",
            "renaming": {
                "FUN_08003068": "get_data_08003068"
            },
            "calling": [
                "FUN_08004a30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003298": {
            "entrypoint": "0x08003298",
            "current_name": "initialize_sensor_08003298",
            "code": "\nvoid initializeSensor_08003298(void)\n\n{\n  int counter;\n  undefined byte1;\n  undefined byte2;\n  \n  counter = 0;\n  FUN_0800403c(0xee,0x1e,1);\n  thunk_FUNC_08001168(10);\n  DAT_20000038 = 8;\n  do {\n    byte1 = 0;\n    byte2 = 0;\n    FUN_080040e8(0xee,counter + 0xa0U & 0xffff,&byte1,2,\"../Src/MS5611.c\",0x7c);\n    *(ushort *)((int)&DAT_2000025c + counter) = CONCAT11(byte1,byte2);\n    counter = counter + 2;\n  } while (counter != 0x10);\n  counter = 0;\n  do {\n    (&DAT_20000300)[counter] = 0;\n    counter = counter + 1;\n  } while (counter != 0x14);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003298": "initialize_sensor_08003298",
                "iVar1": "counter",
                "local_1c": "byte1",
                "local_1b": "byte2"
            },
            "calling": [
                "FUN_08004194"
            ],
            "called": [
                "FUN_0800403c",
                "thunk_FUN_08001168",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003314": {
            "entrypoint": "0x08003314",
            "current_name": "set_param_value_08003314",
            "code": "\nvoid setParamValue_08003314(undefined4 newValue)\n\n{\n  DAT_2000035c = newValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003314": "set_param_value_08003314",
                "param_1": "newValue"
            },
            "calling": [
                "FUN_08002ea0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003320": {
            "entrypoint": "0x08003320",
            "current_name": "set_global_parameter_08003320",
            "code": "\nvoid setGlobalParameter_08003320(undefined4 newValue)\n\n{\n  DAT_20000360 = newValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003320": "set_global_parameter_08003320",
                "param_1": "newValue"
            },
            "calling": [
                "FUN_08002ea0",
                "FUN_08002f28"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003330": {
            "entrypoint": "0x08003330",
            "current_name": "FUNC_08003330",
            "code": "\nvoid FUNC_08003330(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                 undefined4 param_5,undefined4 param_6,undefined4 param_7,undefined4 param_8,\n                 undefined4 param_9,undefined4 *param_10)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  int iVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  int iVar8;\n  undefined4 uVar9;\n  undefined4 uVar10;\n  undefined4 uVar11;\n  undefined4 uVar12;\n  undefined4 uVar13;\n  undefined4 uVar14;\n  undefined4 uVar15;\n  undefined4 uVar16;\n  undefined4 uVar17;\n  undefined4 uVar18;\n  int iVar19;\n  undefined4 uVar20;\n  undefined4 uVar21;\n  undefined4 uVar22;\n  undefined4 uVar23;\n  undefined4 uVar24;\n  undefined4 uVar25;\n  int iVar26;\n  undefined4 uVar27;\n  undefined4 uVar28;\n  undefined4 uVar29;\n  int iVar30;\n  undefined8 uVar31;\n  undefined8 uVar32;\n  \n  uVar29 = DAT_20000048;\n  uVar28 = DAT_20000044;\n  iVar30 = DAT_20000040;\n  uVar27 = DAT_2000003c;\n  uVar1 = FUN_08000cec(param_1,param_1);\n  uVar2 = FUN_08000cec(param_2);\n  uVar1 = FUN_08000adc(uVar1,uVar2);\n  uVar2 = FUN_08000cec(param_3);\n  FUN_08000adc(uVar1,uVar2);\n  FUN_08000428();\n  FUN_08005bc8();\n  uVar1 = FUN_08000a30();\n  iVar3 = FUN_08001014(uVar1,0);\n  if (iVar3 == 0) {\n    uVar2 = FUN_08000cec(param_7);\n    uVar4 = FUN_08000cec(param_8);\n    uVar2 = FUN_08000adc(uVar2,uVar4);\n    uVar4 = FUN_08000cec(param_9);\n    FUN_08000adc(uVar2,uVar4);\n    FUN_08000428();\n    FUN_08005bc8();\n    uVar2 = FUN_08000a30();\n    iVar3 = FUN_08001014(uVar2,0);\n    if (iVar3 == 0) {\n      uVar31 = FUN_08000428(param_4);\n      FUN_080004d0((int)uVar31,(int)((ulonglong)uVar31 >> 0x20),0xa2529d39,0x3f91df46);\n      uVar4 = FUN_08000a30();\n      uVar31 = FUN_08000428(param_5);\n      FUN_080004d0((int)uVar31,(int)((ulonglong)uVar31 >> 0x20),0xa2529d39,0x3f91df46);\n      uVar5 = FUN_08000a30();\n      uVar31 = FUN_08000428(param_6);\n      FUN_080004d0((int)uVar31,(int)((ulonglong)uVar31 >> 0x20),0xa2529d39,0x3f91df46);\n      uVar6 = FUN_08000a30();\n      iVar3 = FUN_08000adc(uVar27);\n      uVar7 = FUN_08000adc(iVar30);\n      iVar8 = FUN_08000adc(uVar28,uVar28);\n      uVar9 = FUN_08000adc(uVar29,uVar29);\n      uVar10 = FUN_08000cec(uVar27);\n      uVar11 = FUN_08000cec(uVar27,iVar30);\n      uVar12 = FUN_08000cec(uVar27,uVar28);\n      uVar13 = FUN_08000cec(iVar30);\n      uVar14 = FUN_08000cec(iVar30,uVar29);\n      uVar15 = FUN_08000cec(uVar28,uVar28);\n      uVar16 = FUN_08000cec(uVar29,uVar29);\n      uVar1 = FUN_08000e54(0x3f800000,uVar1);\n      uVar2 = FUN_08000e54(0x3f800000,uVar2);\n      uVar17 = FUN_08000cec(param_7,uVar2);\n      uVar18 = FUN_08000cec(param_8,uVar2);\n      uVar2 = FUN_08000cec(param_9,uVar2);\n      iVar19 = FUN_08000cec(iVar3,uVar17);\n      uVar20 = FUN_08000cec(iVar3,uVar18);\n      uVar21 = FUN_08000cec(iVar3,uVar2);\n      uVar22 = FUN_08000cec(uVar7,uVar17);\n      uVar23 = FUN_08000cec(uVar10,uVar17);\n      uVar24 = FUN_08000cec(uVar29,uVar20);\n      uVar23 = FUN_08000ad8(uVar23,uVar24);\n      uVar24 = FUN_08000cec(uVar28,uVar21);\n      uVar23 = FUN_08000adc(uVar23,uVar24);\n      uVar24 = FUN_08000cec(uVar13,uVar17);\n      uVar23 = FUN_08000adc(uVar23,uVar24);\n      uVar24 = FUN_08000cec(uVar7,uVar18);\n      uVar24 = FUN_08000cec(uVar24,uVar28);\n      uVar23 = FUN_08000adc(uVar23,uVar24);\n      uVar24 = FUN_08000cec(uVar7,uVar2);\n      uVar24 = FUN_08000cec(uVar24,uVar29);\n      uVar23 = FUN_08000adc(uVar23,uVar24);\n      uVar24 = FUN_08000cec(uVar15,uVar17);\n      uVar23 = FUN_08000ad8(uVar23,uVar24);\n      uVar24 = FUN_08000cec(uVar16,uVar17);\n      uVar23 = FUN_08000ad8(uVar23,uVar24);\n      uVar24 = FUN_08000cec(uVar29,iVar19);\n      uVar25 = FUN_08000cec(uVar10,uVar18);\n      uVar24 = FUN_08000adc(uVar24,uVar25);\n      uVar21 = FUN_08000cec(iVar30,uVar21);\n      uVar21 = FUN_08000ad8(uVar24,uVar21);\n      uVar24 = FUN_08000cec(uVar28,uVar22);\n      uVar21 = FUN_08000adc(uVar21,uVar24);\n      uVar24 = FUN_08000cec(uVar13,uVar18);\n      uVar21 = FUN_08000ad8(uVar21,uVar24);\n      uVar24 = FUN_08000cec(uVar15,uVar18);\n      uVar21 = FUN_08000adc(uVar21,uVar24);\n      uVar24 = FUN_08000cec(iVar8,uVar2);\n      uVar24 = FUN_08000cec(uVar24,uVar29);\n      uVar21 = FUN_08000adc(uVar21,uVar24);\n      uVar24 = FUN_08000cec(uVar16,uVar18);\n      uVar21 = FUN_08000ad8(uVar21,uVar24);\n      uVar23 = FUN_08000cec(uVar23,uVar23);\n      uVar21 = FUN_08000cec(uVar21,uVar21);\n      FUN_08000adc(uVar23,uVar21);\n      FUN_08000428();\n      FUN_08005bc8();\n      iVar26 = FUN_08000a30();\n      uVar21 = FUN_08000cec(iVar19 + -0x80000000,uVar28);\n      uVar20 = FUN_08000cec(iVar30,uVar20);\n      uVar20 = FUN_08000adc(uVar21,uVar20);\n      uVar10 = FUN_08000cec(uVar10,uVar2);\n      uVar10 = FUN_08000adc(uVar20,uVar10);\n      uVar20 = FUN_08000cec(uVar29,uVar22);\n      uVar10 = FUN_08000adc(uVar10,uVar20);\n      uVar20 = FUN_08000cec(uVar13,uVar2);\n      uVar10 = FUN_08000ad8(uVar10,uVar20);\n      uVar20 = FUN_08000cec(iVar8,uVar18);\n      uVar20 = FUN_08000cec(uVar20,uVar29);\n      uVar10 = FUN_08000adc(uVar10,uVar20);\n      uVar20 = FUN_08000cec(uVar15,uVar2);\n      uVar10 = FUN_08000ad8(uVar10,uVar20);\n      uVar20 = FUN_08000cec(uVar16,uVar2);\n      uVar10 = FUN_08000adc(uVar10,uVar20);\n      uVar20 = FUN_08000adc(uVar10,uVar10);\n      uVar21 = FUN_08000adc(uVar14);\n      uVar22 = FUN_08000cec(uVar28,iVar3);\n      uVar21 = FUN_08000ad8(uVar21,uVar22);\n      uVar22 = FUN_08000cec(param_1,uVar1);\n      uVar21 = FUN_08000ad8(uVar21,uVar22);\n      uVar22 = FUN_08000cec(uVar29,iVar8);\n      uVar23 = FUN_08000adc(uVar11);\n      uVar22 = FUN_08000adc(uVar22,uVar23);\n      uVar23 = FUN_08000cec(param_2,uVar1);\n      uVar22 = FUN_08000ad8(uVar22,uVar23);\n      uVar23 = FUN_08000cec(uVar28,uVar10);\n      uVar24 = FUN_08000ad8(0x3f000000,uVar15);\n      uVar16 = FUN_08000ad8(uVar24,uVar16);\n      uVar16 = FUN_08000cec(uVar16,iVar26);\n      uVar24 = FUN_08000ad8(uVar14,uVar12);\n      uVar24 = FUN_08000cec(uVar24,uVar10);\n      uVar16 = FUN_08000adc(uVar16,uVar24);\n      uVar16 = FUN_08000ad8(uVar16,uVar17);\n      uVar17 = FUN_08000cec(iVar30,uVar10);\n      uVar24 = FUN_08000cec(iVar30,uVar28);\n      uVar25 = FUN_08000cec(uVar27,uVar29);\n      uVar24 = FUN_08000ad8(uVar24,uVar25);\n      uVar24 = FUN_08000cec(uVar24,iVar26);\n      uVar25 = FUN_08000cec(uVar28,uVar29);\n      uVar11 = FUN_08000adc(uVar25,uVar11);\n      uVar11 = FUN_08000cec(uVar11,uVar10);\n      uVar11 = FUN_08000adc(uVar24,uVar11);\n      uVar11 = FUN_08000ad8(uVar11,uVar18);\n      uVar18 = FUN_08000cec(uVar28,iVar26);\n      uVar24 = FUN_08000ad8(0x3f000000,uVar13);\n      uVar24 = FUN_08000ad8(uVar24,uVar15);\n      uVar24 = FUN_08000cec(uVar24,uVar10);\n      uVar12 = FUN_08000adc(uVar12,uVar14);\n      uVar12 = FUN_08000cec(uVar12,iVar26);\n      uVar12 = FUN_08000adc(uVar24,uVar12);\n      uVar2 = FUN_08000ad8(uVar12,uVar2);\n      uVar12 = FUN_08000cec(iVar8 + -0x80000000,uVar21);\n      uVar14 = FUN_08000cec(uVar7,uVar22);\n      uVar12 = FUN_08000adc(uVar12,uVar14);\n      uVar14 = FUN_08000cec(uVar23,uVar16);\n      uVar12 = FUN_08000ad8(uVar12,uVar14);\n      uVar14 = FUN_08000cec(uVar29,iVar26 + -0x80000000);\n      uVar14 = FUN_08000adc(uVar14,uVar17);\n      uVar14 = FUN_08000cec(uVar14,uVar11);\n      uVar12 = FUN_08000adc(uVar12,uVar14);\n      uVar14 = FUN_08000cec(uVar18,uVar2);\n      uVar12 = FUN_08000adc(uVar12,uVar14);\n      uVar13 = FUN_08000adc(uVar13);\n      uVar13 = FUN_08000ad8(0x3f800000,uVar13);\n      uVar14 = FUN_08000adc(uVar15);\n      uVar13 = FUN_08000ad8(uVar13,uVar14);\n      uVar1 = FUN_08000cec(param_3,uVar1);\n      uVar1 = FUN_08000ad8(uVar13,uVar1);\n      uVar13 = FUN_08000cec(uVar29,uVar10);\n      uVar10 = FUN_08000cec(uVar27,uVar10);\n      uVar14 = FUN_08000cec(uVar9,uVar21);\n      uVar15 = FUN_08000cec(iVar3,uVar22);\n      uVar14 = FUN_08000adc(uVar14,uVar15);\n      uVar15 = FUN_08000cec(iVar30,0x40800000);\n      uVar15 = FUN_08000cec(uVar15,uVar1);\n      uVar14 = FUN_08000ad8(uVar14,uVar15);\n      uVar15 = FUN_08000cec(uVar16,uVar13);\n      uVar14 = FUN_08000adc(uVar14,uVar15);\n      uVar15 = FUN_08000adc(uVar18,uVar10);\n      uVar15 = FUN_08000cec(uVar15,uVar11);\n      uVar14 = FUN_08000adc(uVar14,uVar15);\n      uVar15 = FUN_08000cec(uVar29,iVar26);\n      uVar18 = FUN_08000cec(iVar30,uVar20);\n      uVar15 = FUN_08000ad8(uVar15,uVar18);\n      uVar15 = FUN_08000cec(uVar15,uVar2);\n      uVar14 = FUN_08000adc(uVar14,uVar15);\n      iVar19 = FUN_08000adc(iVar26,iVar26);\n      uVar15 = FUN_08000cec(iVar30,iVar26);\n      uVar18 = FUN_08000cec(iVar3 + -0x80000000,uVar21);\n      uVar9 = FUN_08000cec(uVar9,uVar22);\n      uVar9 = FUN_08000adc(uVar18,uVar9);\n      uVar18 = FUN_08000cec(uVar28,0x40800000);\n      uVar1 = FUN_08000cec(uVar18,uVar1);\n      uVar1 = FUN_08000ad8(uVar9,uVar1);\n      uVar9 = FUN_08000cec(uVar28,iVar19 + -0x80000000);\n      uVar9 = FUN_08000ad8(uVar9,uVar10);\n      uVar9 = FUN_08000cec(uVar9,uVar16);\n      uVar1 = FUN_08000adc(uVar1,uVar9);\n      uVar9 = FUN_08000adc(uVar13,uVar15);\n      uVar9 = FUN_08000cec(uVar9,uVar11);\n      uVar1 = FUN_08000adc(uVar1,uVar9);\n      uVar9 = FUN_08000cec(uVar27,iVar26);\n      uVar10 = FUN_08000cec(uVar28,uVar20);\n      uVar9 = FUN_08000ad8(uVar9,uVar10);\n      uVar9 = FUN_08000cec(uVar9,uVar2);\n      uVar9 = FUN_08000adc(uVar1,uVar9);\n      uVar1 = FUN_08000cec(uVar7,uVar21);\n      uVar7 = FUN_08000cec(iVar8,uVar22);\n      uVar1 = FUN_08000adc(uVar1,uVar7);\n      uVar7 = FUN_08000cec(uVar29,iVar19 + -0x80000000);\n      uVar7 = FUN_08000adc(uVar7,uVar17);\n      uVar7 = FUN_08000cec(uVar7,uVar16);\n      uVar1 = FUN_08000adc(uVar1,uVar7);\n      uVar7 = FUN_08000cec(uVar27,iVar26 + -0x80000000);\n      uVar7 = FUN_08000adc(uVar7,uVar23);\n      uVar7 = FUN_08000cec(uVar7,uVar11);\n      uVar1 = FUN_08000adc(uVar1,uVar7);\n      uVar2 = FUN_08000cec(uVar2,uVar15);\n      uVar7 = FUN_08000adc(uVar1,uVar2);\n      uVar1 = FUN_08000cec(uVar12);\n      uVar2 = FUN_08000cec(uVar14);\n      uVar1 = FUN_08000adc(uVar1,uVar2);\n      uVar2 = FUN_08000cec(uVar9,uVar9);\n      uVar1 = FUN_08000adc(uVar1,uVar2);\n      uVar2 = FUN_08000cec(uVar7,uVar7);\n      FUN_08000adc(uVar1,uVar2);\n      FUN_08000428();\n      FUN_08005bc8();\n      uVar1 = FUN_08000a30();\n      uVar10 = FUN_08000e54(0x3f800000,uVar1);\n      uVar1 = DAT_2000035c;\n      uVar2 = FUN_08000cec(iVar30 + -0x80000000,uVar4);\n      uVar11 = FUN_08000cec(uVar28,uVar5);\n      uVar2 = FUN_08000ad8(uVar2,uVar11);\n      uVar11 = FUN_08000cec(uVar29,uVar6);\n      uVar2 = FUN_08000ad8(uVar2,uVar11);\n      uVar11 = FUN_08000cec(uVar2,0x3f000000);\n      uVar12 = FUN_08000cec(uVar12,uVar10);\n      uVar2 = DAT_20000360;\n      uVar12 = FUN_08000cec(uVar12,uVar1);\n      uVar11 = FUN_08000ad8(uVar11,uVar12);\n      uVar2 = FUN_08000cec(uVar11,uVar2);\n      uVar11 = FUN_08000adc(uVar2,uVar27);\n      uVar12 = FUN_08000cec(uVar27,uVar4);\n      uVar13 = FUN_08000cec(uVar28,uVar6);\n      uVar2 = DAT_20000360;\n      uVar12 = FUN_08000adc(uVar12,uVar13);\n      uVar13 = FUN_08000cec(uVar29,uVar5);\n      uVar12 = FUN_08000ad8(uVar12,uVar13);\n      uVar12 = FUN_08000cec(uVar12,0x3f000000);\n      uVar13 = FUN_08000cec(uVar14,uVar10);\n      uVar13 = FUN_08000cec(uVar13,uVar1);\n      uVar12 = FUN_08000ad8(uVar12,uVar13);\n      uVar2 = FUN_08000cec(uVar12,uVar2);\n      uVar12 = FUN_08000adc(uVar2,iVar30);\n      uVar2 = DAT_20000360;\n      uVar13 = FUN_08000cec(uVar27,uVar5);\n      uVar14 = FUN_08000cec(iVar30,uVar6);\n      uVar13 = FUN_08000ad8(uVar13,uVar14);\n      uVar14 = FUN_08000cec(uVar29,uVar4);\n      uVar13 = FUN_08000adc(uVar13,uVar14);\n      uVar13 = FUN_08000cec(uVar13,0x3f000000);\n      uVar9 = FUN_08000cec(uVar9,uVar10);\n      uVar9 = FUN_08000cec(uVar9,uVar1);\n      uVar9 = FUN_08000ad8(uVar13,uVar9);\n      uVar2 = FUN_08000cec(uVar9,uVar2);\n      uVar2 = FUN_08000adc(uVar2,uVar28);\n      uVar27 = FUN_08000cec(uVar27,uVar6);\n      uVar5 = FUN_08000cec(iVar30,uVar5);\n      uVar27 = FUN_08000adc(uVar27,uVar5);\n      uVar28 = FUN_08000cec(uVar28,uVar4);\n      uVar27 = FUN_08000ad8(uVar27,uVar28);\n      uVar28 = FUN_08000cec(uVar27,0x3f000000);\n      uVar27 = FUN_08000cec(uVar7,uVar10);\n      uVar1 = FUN_08000cec(uVar27,uVar1);\n      uVar27 = DAT_20000360;\n      uVar28 = FUN_08000ad8(uVar28,uVar1);\n      uVar27 = FUN_08000cec(uVar28,uVar27);\n      uVar27 = FUN_08000adc(uVar27,uVar29);\n      uVar28 = FUN_08000cec(uVar11,uVar11);\n      uVar29 = FUN_08000cec(uVar12,uVar12);\n      uVar28 = FUN_08000adc(uVar28,uVar29);\n      uVar29 = FUN_08000cec(uVar2,uVar2);\n      uVar28 = FUN_08000adc(uVar28,uVar29);\n      uVar29 = FUN_08000cec(uVar27,uVar27);\n      FUN_08000adc(uVar28,uVar29);\n      FUN_08000428();\n      FUN_08005bc8();\n      uVar28 = FUN_08000a30();\n      uVar28 = FUN_08000e54(0x3f800000,uVar28);\n      uVar29 = FUN_08000cec(uVar11,uVar28);\n      DAT_2000003c = uVar29;\n      iVar30 = FUN_08000cec(uVar12,uVar28);\n      DAT_20000040 = iVar30;\n      uVar1 = FUN_08000cec(uVar2,uVar28);\n      DAT_20000044 = uVar1;\n      DAT_20000048 = FUN_08000cec(uVar27,uVar28);\n      uVar27 = FUN_08000cec(iVar30,DAT_20000048);\n      uVar28 = FUN_08000cec(uVar29,uVar1);\n      uVar27 = FUN_08000ad8(uVar27,uVar28);\n      FUN_08000adc(uVar27,uVar27);\n      FUN_08000428();\n      uVar31 = FUN_08005854();\n      uVar31 = FUN_080004d0((int)uVar31,(int)((ulonglong)uVar31 >> 0x20),0,0x40668000);\n      FUN_08000724((int)uVar31,(int)((ulonglong)uVar31 >> 0x20),0x54442d18,0x400921fb);\n      uVar27 = FUN_08000a30();\n      *param_10 = uVar27;\n      iVar30 = DAT_20000040;\n      uVar27 = DAT_2000003c;\n      uVar28 = FUN_08000cec(DAT_2000003c,DAT_2000003c);\n      uVar29 = FUN_08000cec(iVar30,iVar30);\n      uVar29 = FUN_08000ad8(uVar28,uVar29);\n      uVar28 = DAT_20000044;\n      uVar1 = FUN_08000cec(DAT_20000044,DAT_20000044);\n      uVar1 = FUN_08000ad8(uVar29,uVar1);\n      uVar29 = DAT_20000048;\n      uVar2 = FUN_08000cec(DAT_20000048,DAT_20000048);\n      FUN_08000adc(uVar1,uVar2);\n      uVar31 = FUN_08000428();\n      uVar27 = FUN_08000cec(uVar27,iVar30);\n      uVar28 = FUN_08000cec(uVar28,uVar29);\n      uVar27 = FUN_08000adc(uVar27,uVar28);\n      FUN_08000adc(uVar27,uVar27);\n      uVar32 = FUN_08000428();\n      uVar31 = thunk_FUN_08006070((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),(int)uVar31,\n                                  (int)((ulonglong)uVar31 >> 0x20));\n      uVar31 = FUN_080004d0((int)uVar31,(int)((ulonglong)uVar31 >> 0x20),0,0x40668000);\n      FUN_08000724((int)uVar31,(int)((ulonglong)uVar31 >> 0x20),0x54442d18,0x400921fb);\n      uVar27 = FUN_08000a30();\n      param_10[1] = uVar27;\n      iVar30 = DAT_20000040;\n      uVar27 = DAT_2000003c;\n      uVar28 = FUN_08000cec(DAT_2000003c,DAT_2000003c);\n      uVar29 = FUN_08000cec(iVar30,iVar30);\n      uVar29 = FUN_08000adc(uVar28,uVar29);\n      uVar28 = DAT_20000044;\n      uVar1 = FUN_08000cec(DAT_20000044,DAT_20000044);\n      uVar1 = FUN_08000ad8(uVar29,uVar1);\n      uVar29 = DAT_20000048;\n      uVar2 = FUN_08000cec(DAT_20000048,DAT_20000048);\n      FUN_08000ad8(uVar1,uVar2);\n      uVar31 = FUN_08000428();\n      uVar28 = FUN_08000cec(iVar30,uVar28);\n      uVar27 = FUN_08000cec(uVar27,uVar29);\n      uVar27 = FUN_08000adc(uVar28,uVar27);\n      FUN_08000adc(uVar27,uVar27);\n      uVar32 = FUN_08000428();\n      uVar31 = thunk_FUN_08006070((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),(int)uVar31,\n                                  (int)((ulonglong)uVar31 >> 0x20));\n      uVar31 = FUN_080004d0((int)uVar31,(int)((ulonglong)uVar31 >> 0x20),0,0x40668000);\n      FUN_08000724((int)uVar31,(int)((ulonglong)uVar31 >> 0x20),0x54442d18,0x400921fb);\n      uVar27 = FUN_08000a30();\n      param_10[2] = uVar27;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003330": "FUNC_08003330"
            },
            "calling": [
                "FUN_08002f28"
            ],
            "called": [
                "FUN_08000ad8",
                "FUN_080004d0",
                "FUN_08001014",
                "FUN_08000e54",
                "thunk_FUN_08006070",
                "FUN_08000a30",
                "FUN_08005854",
                "FUN_08005bc8",
                "FUN_08000cec",
                "FUN_08000428",
                "FUN_08000724",
                "FUN_08000adc"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08003eb0": {
            "entrypoint": "0x08003eb0",
            "current_name": "left_shift_or_interruption_08003eb0",
            "code": "\nlonglong left_shift_or_interruption_08003eb0(uint input_value)\n\n{\n  if (DAT_20000280 == 0) {\n    software_interrupt(0x3f);\n    return CONCAT44(input_value,1);\n  }\n  return (ulonglong)input_value << 0x20;\n}\n\n",
            "renaming": {
                "FUN_08003eb0": "left_shift_or_interruption_08003eb0",
                "param_1": "input_value"
            },
            "calling": [
                "FUN_080041ae"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ec8": {
            "entrypoint": "0x08003ec8",
            "current_name": "increment_and_update_array_08003ec8",
            "code": "\nundefined4 incrementAndUpdateArray_08003ec8(int arrayAddress,undefined value)\n\n{\n  *(short *)(arrayAddress + 0x804) = *(short *)(arrayAddress + 0x804) + 1;\n  *(undefined *)(arrayAddress + (uint)*(ushort *)(arrayAddress + 0x802)) = value;\n  *(ushort *)(arrayAddress + 0x802) = *(short *)(arrayAddress + 0x802) + 1U & 0x7ff;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08003ec8": "increment_and_update_array_08003ec8",
                "param_1": "arrayAddress",
                "param_2": "value"
            },
            "calling": [
                "FUN_08004c30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f3c": {
            "entrypoint": "0x08003f3c",
            "current_name": "initialize_flags_08003f3c",
            "code": "\nvoid initializeFlags_08003f3c(int flagParam1,int flagParam2,int flagParam3)\n\n{\n  FUN_08001424(0x40011000,0x8000,flagParam1 == 0);\n  FUN_08001424(0x40011000,0x4000,flagParam2 == 0);\n  FUN_08001424(0x40011000,0x2000,flagParam3 == 0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f3c": "initialize_flags_08003f3c",
                "param_1": "flagParam1",
                "param_2": "flagParam2",
                "param_3": "flagParam3"
            },
            "calling": [
                "FUN_08004a84",
                "FUN_08004028"
            ],
            "called": [
                "FUN_08001424"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003fc4": {
            "entrypoint": "0x08003fc4",
            "current_name": "set_param_at_offset_08003fc4",
            "code": "\nvoid setParamAtOffset_08003fc4(undefined4 newValue)\n\n{\n  *(undefined4 *)(DAT_200014c8 + 0x40) = newValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003fc4": "set_param_at_offset_08003fc4",
                "param_1": "newValue"
            },
            "calling": [
                "FUN_0800426c",
                "FUN_080041c4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003fd0": {
            "entrypoint": "0x08003fd0",
            "current_name": "set_pointer_value_08003fd0",
            "code": "\nvoid setPointerValue_08003fd0(undefined4 newValue)\n\n{\n  *(undefined4 *)(DAT_200014c8 + 0x3c) = newValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003fd0": "set_pointer_value_08003fd0",
                "param_1": "newValue"
            },
            "calling": [
                "FUN_0800426c",
                "FUN_080041c4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003fdc": {
            "entrypoint": "0x08003fdc",
            "current_name": "store_parameter_in_memory_08003fdc",
            "code": "\nvoid storeParameterInMemory_08003fdc(undefined4 valueToStore)\n\n{\n  *(undefined4 *)(DAT_200015f8 + 0x38) = valueToStore;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003fdc": "store_parameter_in_memory_08003fdc",
                "param_1": "valueToStore"
            },
            "calling": [
                "FUN_0800426c",
                "FUN_080041c4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003fe8": {
            "entrypoint": "0x08003fe8",
            "current_name": "set_param_value_08003fe8",
            "code": "\nvoid setParamValue_08003fe8(undefined4 value)\n\n{\n  *(undefined4 *)(DAT_20001540 + 0x3c) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003fe8": "set_param_value_08003fe8",
                "param_1": "value"
            },
            "calling": [
                "FUN_0800426c",
                "FUN_080041c4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ff4": {
            "entrypoint": "0x08003ff4",
            "current_name": "initialize_data_08003ff4",
            "code": "\nvoid initialize_data_08003ff4(void)\n\n{\n  FUN_08002538(&DAT_200015f8,4);\n  FUN_08002538(&DAT_20001540,8);\n  FUN_08002538(&DAT_200014c8,8);\n  FUN_08002538(&DAT_200014c8,0xc);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003ff4": "initialize_data_08003ff4"
            },
            "calling": [
                "FUN_08004028"
            ],
            "called": [
                "FUN_08002538"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004028": {
            "entrypoint": "0x08004028",
            "current_name": "execute_reverse_logic_08004028",
            "code": "\nvoid executeReverseLogic_08004028(void)\n\n{\n  int iterationCount;\n  \n  FUN_0800458c();\n  FUN_08003ff4();\n  iterationCount = 3;\n  do {\n    FUN_08003f3c(1,0);\n    thunk_FUNC_08001168(100);\n    FUN_08003f3c(0,1);\n    thunk_FUNC_08001168(100);\n    FUN_08003f3c(0,0,1);\n    thunk_FUNC_08001168(100);\n    iterationCount = iterationCount + -1;\n  } while (iterationCount != 0);\n  FUN_08003f3c(1,1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004028": "execute_reverse_logic_08004028",
                "iVar1": "iterationCount"
            },
            "calling": [
                "FUN_08004194"
            ],
            "called": [
                "FUN_08003ff4",
                "thunk_FUN_08001168",
                "FUN_08003f3c",
                "FUN_0800458c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800403c": {
            "entrypoint": "0x0800403c",
            "current_name": "initialize_i2_c_0800403c",
            "code": "\nvoid initializeI2C_0800403c(undefined4 param1,undefined4 param2,undefined param3,int param4)\n\n{\n  int result;\n  undefined buffer [8];\n  \n  buffer[0] = param3;\n  result = FUN_08001828(&DAT_20001504,param1,param2,1,buffer,1,200);\n  if (result != 0) {\n    FUN_08004490(\"../Src/i2c.c\",0x1b);\n  }\n  if (param4 != 0) {\n    thunk_FUNC_08001168(0x32);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800403c": "initialize_i2_c_0800403c",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "result",
                "local_14": "buffer"
            },
            "calling": [
                "FUN_08002ad0",
                "FUN_0800411c",
                "FUN_08002cb0",
                "FUN_08003298"
            ],
            "called": [
                "FUN_08004490",
                "FUN_08001828",
                "thunk_FUN_08001168"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800407c": {
            "entrypoint": "0x0800407c",
            "current_name": "check_and_execute_0800407c",
            "code": "\nundefined checkAndExecute_0800407c(undefined4 input1,undefined4 input2,undefined4 output1,undefined4 output2)\n\n{\n  int iVar1;\n  undefined result [8];\n  \n  result[0] = 0;\n  iVar1 = FUN_08001938(&DAT_20001504,input1,input2,1,result,1,200);\n  if (iVar1 != 0) {\n    FUN_08004490(output1,output2);\n  }\n  return result[0];\n}\n\n",
            "renaming": {
                "FUN_0800407c": "check_and_execute_0800407c",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "output1",
                "param_4": "output2",
                "local_14": "result"
            },
            "calling": [
                "FUN_08002ad0",
                "FUN_08002d88",
                "FUN_08002cb0",
                "FUN_080040e8"
            ],
            "called": [
                "FUN_08004490",
                "FUN_08001938"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040b8": {
            "entrypoint": "0x080040b8",
            "current_name": "check_and_perform_action_080040b8",
            "code": "\nvoid checkAndPerformAction_080040b8(undefined4 inputParam1,undefined4 inputParam2,undefined4 inputParam3,undefined4 inputParam4,\n                 undefined4 outputParam1,undefined4 outputParam2)\n\n{\n  int result;\n  \n  result = FUN_08001938(&DAT_20001504,inputParam1,inputParam2,1,inputParam3,inputParam4,200,inputParam4);\n  if (result != 0) {\n    FUN_08004490(outputParam1,outputParam2);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080040b8": "check_and_perform_action_080040b8",
                "param_1": "inputParam1",
                "param_2": "inputParam2",
                "param_3": "inputParam3",
                "param_4": "inputParam4",
                "param_5": "outputParam1",
                "param_6": "outputParam2",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08003034"
            ],
            "called": [
                "FUN_08004490",
                "FUN_08001938"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040e8": {
            "entrypoint": "0x080040e8",
            "current_name": "copy_data_to_buffer_080040e8",
            "code": "\nvoid copyDataToBuffer_080040e8(undefined4 sourceData,int startIndex,int destinationBuffer,int length)\n\n{\n  undefined copiedData;\n  int index;\n  undefined *bufferPtr;\n  int fileIndex;\n  \n  bufferPtr = (undefined *)(destinationBuffer + -1);\n  fileIndex = length;\n  for (index = 0; index < length; index = index + 1) {\n    copiedData = FUN_0800407c(sourceData,startIndex + index & 0xffff,\"../Src/i2c.c\",0x4c,fileIndex);\n    bufferPtr = bufferPtr + 1;\n    *bufferPtr = copiedData;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080040e8": "copy_data_to_buffer_080040e8",
                "param_1": "sourceData",
                "param_2": "startIndex",
                "param_3": "destinationBuffer",
                "param_4": "length",
                "uVar1": "copiedData",
                "iVar2": "index",
                "puVar3": "bufferPtr",
                "iVar4": "fileIndex"
            },
            "calling": [
                "FUN_08002b48",
                "FUN_08002d88",
                "FUN_08002cb0",
                "FUN_08003298",
                "FUN_08002bf0"
            ],
            "called": [
                "FUN_0800407c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800411c": {
            "entrypoint": "0x0800411c",
            "current_name": "calculate_and_store_data_0800411c",
            "code": "\nvoid calculateAndStoreData_0800411c(void)\n\n{\n  undefined4 *pointer1;\n  longlong result;\n  uint var3;\n  uint var4;\n  uint var5;\n  undefined4 var6;\n  undefined4 var7;\n  int count1;\n  uint var9;\n  uint var10;\n  uint var11;\n  uint var12;\n  undefined4 *pointer2;\n  undefined4 register4;\n  int count2;\n  int count3;\n  bool isNegative;\n  undefined8 result2;\n  \n  count1 = thunk_FUN_0800115c();\n  if (1 < (uint)(count1 - DAT_2000028c)) {\n    DAT_2000028c = thunk_FUN_0800115c();\n    FUN_08002f28();\n  }\n  count1 = thunk_FUN_0800115c();\n  if (2 < (uint)(count1 - DAT_20000294)) {\n    DAT_20000294 = thunk_FUN_0800115c();\n    FUN_08004a84();\n  }\n  count1 = thunk_FUN_0800115c();\n  if (3 < (uint)(count1 - DAT_20000290)) {\n    DAT_20000290 = thunk_FUN_0800115c();\n    FUN_08004348();\n    FUN_08004384();\n    FUN_080043f0();\n    FUN_08004410();\n    FUN_08004434();\n    FUN_080043bc();\n    FUN_08004458();\n  }\n  if ((DAT_20000275 != '\\0') && (DAT_20000274 != '\\0')) {\n    count3 = DAT_20000270 + (uint)DAT_20000266 * -0x100;\n    var9 = (uint)((longlong)(int)(uint)DAT_20000268 * (longlong)count3) >> 0x17 |\n            (int)((ulonglong)((longlong)(int)(uint)DAT_20000268 * (longlong)count3) >> 0x20) << 9;\n    var10 = (uint)((longlong)(int)(uint)DAT_20000264 * (longlong)count3 >> 7);\n    var11 = var10 + (uint)DAT_20000260 * 0x10000;\n    var4 = (uint)((ulonglong)((longlong)(int)(uint)DAT_20000262 * (longlong)count3) >> 8);\n    count1 = var9 + 2000;\n    var5 = var4 + (uint)DAT_2000025e * 0x8000;\n    isNegative = (int)var9 < 0;\n    if (1999 < count1) {\n      var9 = 0;\n    }\n    var3 = var9;\n    if (isNegative != SBORROW4(count1,2000)) {\n      count2 = var9 * var9 * 5;\n      var9 = count2 >> 2;\n      var3 = count2 >> 1;\n    }\n    var12 = var11 - var3;\n    result = (ulonglong)(var5 - var9) * (ulonglong)DAT_2000026c;\n    count2 = DAT_2000026c *\n             ((((int)((longlong)(int)(uint)DAT_20000262 * (longlong)count3 >> 0x28) +\n               (uint)CARRY4(var4,(uint)DAT_2000025e * 0x8000)) - ((int)var9 >> 0x1f)) -\n             (uint)(var5 < var9)) + (int)((ulonglong)result >> 0x20);\n    var4 = (uint)result >> 0x15 | count2 * 0x800;\n    var6 = FUN_08000c44(var4 - var12 >> 0xf |\n                         (((count2 >> 0x15) -\n                          ((((int)((longlong)(int)(uint)DAT_20000264 * (longlong)count3 >> 0x27) +\n                            (uint)CARRY4(var10,(uint)DAT_20000260 * 0x10000)) -\n                           ((int)var3 >> 0x1f)) - (uint)(var11 < var3))) - (uint)(var4 < var12)\n                         ) * 0x20000);\n    var6 = FUN_08000e54(var6,0x42c80000);\n    DAT_20000354 = var6;\n    var7 = FUN_08000c44(count1);\n    DAT_20000358 = FUN_08000e54(var7,0x42c80000);\n    FUN_08000e54(var6,0x447d5000);\n    result2 = FUN_08000428();\n    result2 = FUNC_08005900((int)result2,(int)((ulonglong)result2 >> 0x20),0x60000000,0x3fc85b95);\n    result2 = FUN_08000168(0,0x3ff00000,(int)result2,(int)((ulonglong)result2 >> 0x20));\n    FUN_080004d0((int)result2,(int)((ulonglong)result2 >> 0x20),0,0x40e5a540);\n    var6 = FUN_08000a30();\n    var7 = 0;\n    pointer2 = &DAT_20000300;\n    DAT_20000350 = var6;\n    do {\n      pointer1 = pointer2 + 1;\n      *pointer2 = *pointer1;\n      var7 = FUN_08000adc(var7);\n      pointer2 = pointer1;\n    } while (pointer1 != &DAT_2000034c);\n    DAT_2000034c = var6;\n    var6 = FUN_08000adc(var7,var6);\n    DAT_200002fc = FUN_08000e54(var6,0x41a00000);\n    count1 = FUN_08001078();\n    DAT_200014ab = count1 * 100;\n    DAT_20000275 = '\\0';\n    DAT_20000274 = '\\0';\n    FUN_0800403c(0xee,DAT_20000038 + 0x50,1);\n    DAT_2000027c = thunk_FUN_0800115c();\n  }\n  count1 = thunk_FUN_0800115c();\n  if (((10 < (uint)(count1 - DAT_2000027c)) && (DAT_20000275 == '\\0')) && (DAT_20000274 == '\\0')) {\n    DAT_20000270 = FUN_08003034();\n    DAT_20000275 = '\\x01';\n    FUN_0800403c(0xee,DAT_20000038 + 0x40,1,0,register4);\n    DAT_20000278 = thunk_FUN_0800115c();\n  }\n  count1 = thunk_FUN_0800115c();\n  if (((10 < (uint)(count1 - DAT_20000278)) && (DAT_20000275 != '\\0')) && (DAT_20000274 == '\\0')) {\n    DAT_2000026c = FUN_08003034();\n    DAT_20000274 = '\\x01';\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800411c": "calculate_and_store_data_0800411c",
                "puVar1": "pointer1",
                "lVar2": "result",
                "uVar3": "var3",
                "uVar4": "var4",
                "uVar5": "var5",
                "uVar6": "var6",
                "uVar7": "var7",
                "iVar8": "count1",
                "uVar9": "var9",
                "uVar10": "var10",
                "uVar11": "var11",
                "uVar12": "var12",
                "puVar13": "pointer2",
                "unaff_r4": "register4",
                "iVar14": "count2",
                "iVar15": "count3",
                "bVar16": "isNegative",
                "uVar17": "result2"
            },
            "calling": [
                "FUN_080041ae"
            ],
            "called": [
                "thunk_FUN_0800115c",
                "FUN_080004d0",
                "FUN_08000e54",
                "FUN_08003034",
                "FUN_08000a30",
                "FUN_08000c44",
                "FUN_08004410",
                "FUN_08005900",
                "FUN_08004348",
                "FUN_08000168",
                "FUN_08000428",
                "FUN_08002f28",
                "FUN_08004458",
                "FUN_080043bc",
                "FUN_08004384",
                "FUN_0800403c",
                "FUN_08004a84",
                "FUN_080043f0",
                "FUN_08004434",
                "FUN_08001078",
                "FUN_08000adc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004194": {
            "entrypoint": "0x08004194",
            "current_name": "initialize_system_08004194",
            "code": "\nvoid initializeSystem_08004194(void)\n\n{\n  FUN_08004028();\n  FUN_08004c70();\n  FUN_08002ea0();\n  FUN_08003298();\n  DAT_200000f4 = 1;\n  DAT_20000150 = 1;\n  DAT_200001ac = 0xffffffff;\n  DAT_20000098 = 1;\n  DAT_200000c8 = 0x44bb8000;\n  DAT_20000124 = 0x44b54000;\n  DAT_20000180 = 0x44fa0000;\n  DAT_2000006c = 0;\n  DAT_200000ac = 0x408ccccd;\n  DAT_200000b0 = 0x3ca3d70a;\n  DAT_200000b4 = 0x438c0000;\n  DAT_200000b8 = 0x40900000;\n  DAT_200000bc = 0x3ca3d70a;\n  DAT_200000c0 = 0x43b40000;\n  DAT_20000108 = 0x40733333;\n  DAT_2000010c = 0x3ca3d70a;\n  DAT_20000110 = 0x43820000;\n  DAT_20000114 = 0x40733333;\n  DAT_20000118 = 0x3ca3d70a;\n  DAT_2000011c = 0x43a00000;\n  DAT_20000164 = 0x40400000;\n  DAT_20000168 = 0x3c23d70a;\n  DAT_2000016c = 0x438c0000;\n  DAT_20000170 = 0;\n  DAT_20000174 = 0;\n  DAT_20000178 = 0;\n  DAT_20000050 = 0x41200000;\n  DAT_20000054 = 0;\n  DAT_20000058 = 0;\n  DAT_2000005c = 0;\n  DAT_20000060 = 0;\n  DAT_20000064 = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004194": "initialize_system_08004194"
            },
            "calling": [
                "FUN_080041ae"
            ],
            "called": [
                "FUN_08002ea0",
                "FUN_08004c70",
                "FUN_08004028",
                "FUN_08003298"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080041ae": {
            "entrypoint": "0x080041ae",
            "current_name": "execute_infinite_loop_080041ae",
            "code": "\nvoid execute_infinite_loop_080041ae(void)\n\n{\n  FUN_08003eb0(0);\n  FUN_08004194();\n  do {\n    FUN_0800114c();\n    FUN_0800411c();\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080041ae": "execute_infinite_loop_080041ae"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_08003eb0",
                "FUN_08004194",
                "FUN_0800411c",
                "FUN_0800114c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080041c4": {
            "entrypoint": "0x080041c4",
            "current_name": "initialize_and_configure_080041c4",
            "code": "\nvoid initialize_and_configure_080041c4(undefined4 config_param_1,undefined4 config_param_2,undefined4 config_param_3,undefined4 config_param_4)\n\n{\n  undefined4 temp_var;\n  \n  FUN_08003fc4(0);\n  FUN_08003fd0(0);\n  FUN_08003fdc(0);\n  FUN_08003fe8(0,temp_var,config_param_3,config_param_4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080041c4": "initialize_and_configure_080041c4",
                "param_1": "config_param_1",
                "param_2": "config_param_2",
                "param_3": "config_param_3",
                "param_4": "config_param_4",
                "extraout_r1": "temp_var"
            },
            "calling": [
                "FUN_08004a84"
            ],
            "called": [
                "FUN_08003fe8",
                "FUN_08003fc4",
                "FUN_08003fdc",
                "FUN_08003fd0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800426c": {
            "entrypoint": "0x0800426c",
            "current_name": "calculate_metrics_0800426c",
            "code": "\n\n\nvoid calculateMetrics_0800426c(undefined4 inputParam1,undefined4 inputParam2,undefined4 inputParam3,undefined4 inputParam4)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  undefined4 result3;\n  uint metric1;\n  uint metric2;\n  uint metric3;\n  uint metric4;\n  \n  result1 = FUN_08000ad8();\n  result2 = FUN_08000adc(inputParam1,inputParam2);\n  result3 = FUN_08000ad8(result1,inputParam3);\n  result3 = FUN_08000adc(result3,inputParam4);\n  FUN_08000ad8(result3,0x447a0000);\n  metric1 = FUN_08001078();\n  result3 = FUN_08000ad8(result2,inputParam3);\n  result3 = FUN_08000ad8(result3,inputParam4);\n  FUN_08000ad8(result3,0x447a0000);\n  metric2 = FUN_08001078();\n  result1 = FUN_08000adc(result1,inputParam3);\n  result1 = FUN_08000ad8(result1,inputParam4);\n  FUN_08000ad8(result1,0x447a0000);\n  metric3 = FUN_08001078();\n  result1 = FUN_08000adc(inputParam3,result2);\n  result1 = FUN_08000adc(result1,inputParam4);\n  FUN_08000ad8(result1,0x447a0000);\n  metric4 = FUN_08001078();\n  if (999 < (int)metric4) {\n    metric4 = 1000;\n  }\n  if (999 < (int)metric3) {\n    metric3 = 1000;\n  }\n  if (999 < (int)metric2) {\n    metric2 = 1000;\n  }\n  if (999 < (int)metric1) {\n    metric1 = 1000;\n  }\n  DAT_200002a0 = metric2 & ~((int)metric2 >> 0x1f);\n  DAT_200002a4 = metric1 & ~((int)metric1 >> 0x1f);\n  DAT_2000029c = metric3 & ~((int)metric3 >> 0x1f);\n  DAT_20000298 = metric4 & ~((int)metric4 >> 0x1f);\n  FUN_08003fc4();\n  FUN_08003fd0(DAT_2000029c);\n  FUN_08003fdc(DAT_200002a0);\n  FUN_08003fe8(DAT_200002a4);\n  _DAT_200013dd = (short)DAT_20000298 + 1000;\n  DAT_200013df = (short)DAT_2000029c + 1000;\n  _DAT_200013e1 = (short)DAT_200002a0 + 1000;\n  DAT_200013e3 = (short)DAT_200002a4 + 1000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800426c": "calculate_metrics_0800426c",
                "param_1": "inputParam1",
                "param_2": "inputParam2",
                "param_3": "inputParam3",
                "param_4": "inputParam4",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "result3",
                "uVar4": "metric1",
                "uVar5": "metric2",
                "uVar6": "metric3",
                "uVar7": "metric4"
            },
            "calling": [
                "FUN_08004a84"
            ],
            "called": [
                "FUN_08000ad8",
                "FUN_08003fe8",
                "FUN_08003fc4",
                "FUN_08003fdc",
                "FUN_08001078",
                "FUN_08000adc",
                "FUN_08003fd0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004300": {
            "entrypoint": "0x08004300",
            "current_name": "calculate_checksum_08004300",
            "code": "\nvoid calculateChecksum_08004300(uint seed,byte *data,uint length)\n\n{\n  uint checksum;\n  byte *currentByte;\n  \n  FUN_08004c8c(&DAT_0800732e);\n  FUN_08004c18(length & 0xff);\n  checksum = length & 0xff ^ seed;\n  FUN_08004c18(seed);\n  for (currentByte = data; (int)currentByte - (int)data < (int)length; currentByte = currentByte + 1) {\n    FUN_08004c18(*currentByte);\n    checksum = checksum ^ *currentByte;\n  }\n  FUN_08004c18(checksum);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004300": "calculate_checksum_08004300",
                "param_1": "seed",
                "param_2": "data",
                "param_3": "length",
                "uVar1": "checksum",
                "pbVar2": "currentByte"
            },
            "calling": [
                "FUN_08004458",
                "FUN_08004384",
                "FUN_080043bc",
                "FUN_08004410",
                "FUN_08004348",
                "FUN_080043f0",
                "FUN_08004434"
            ],
            "called": [
                "FUN_08004c18",
                "FUN_08004c8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004348": {
            "entrypoint": "0x08004348",
            "current_name": "initialize_data_08004348",
            "code": "\n\n\nvoid initializeData_08004348(undefined4 param1,uint flag,undefined4 param3)\n\n{\n  undefined4 dataAddress;\n  uint mask;\n  undefined4 paramStack;\n  \n  _DAT_20001423 = 0x40003e9;\n  _DAT_20001427 = 0;\n  DAT_20001429 = 0;\n  dataAddress = 0x40003e9;\n  mask = flag & 0xff000000;\n  paramStack = param3;\n  FUN_08004300(100,&dataAddress,7);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004348": "initialize_data_08004348",
                "param_1": "param1",
                "param_2": "flag",
                "param_3": "param3",
                "local_10": "dataAddress",
                "local_c": "mask",
                "uStack_8": "paramStack"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_08004300"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004384": {
            "entrypoint": "0x08004384",
            "current_name": "initialize_function_08004384",
            "code": "\n\n\nvoid initializeFunction_08004384(undefined4 inputParam1,undefined4 inputParam2,undefined4 inputParam3,uint inputParam4)\n\n{\n  undefined4 localVariable1;\n  undefined4 localVariable2;\n  uint localVariable3;\n  \n  _DAT_200013bd = 0x2a0007;\n  localVariable1 = DAT_200013b9;\n  localVariable2 = 0x2a0007;\n  _DAT_200013c1 = 0;\n  DAT_200013c3 = 0;\n  localVariable3 = inputParam4 & 0xff000000;\n  FUN_08004300(0x65,&localVariable1,0xb,0,inputParam1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004384": "initialize_function_08004384",
                "param_1": "inputParam1",
                "param_2": "inputParam2",
                "param_3": "inputParam3",
                "param_4": "inputParam4",
                "local_14": "localVariable1",
                "uStack_10": "localVariable2",
                "local_c": "localVariable3"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_08004300"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080043bc": {
            "entrypoint": "0x080043bc",
            "current_name": "copy_data_and_call_function_080043bc",
            "code": "\nvoid copyDataAndCallFunction_080043bc(void)\n\n{\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 *destinationArray;\n  undefined4 *sourceArray;\n  undefined4 tempArray [2];\n  undefined2 anotherTempArray [6];\n  \n  sourceArray = (undefined4 *)&DAT_2000142a;\n  destinationArray = tempArray;\n  do {\n    value1 = *sourceArray;\n    value2 = sourceArray[1];\n    sourceArray = sourceArray + 2;\n    *destinationArray = value1;\n    destinationArray[1] = value2;\n    destinationArray = destinationArray + 2;\n  } while (sourceArray != (undefined4 *)&DAT_2000143a);\n  *(undefined2 *)destinationArray = DAT_2000143a;\n  FUN_08004300(0x66,tempArray,0x12);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080043bc": "copy_data_and_call_function_080043bc",
                "uVar1": "value1",
                "uVar2": "value2",
                "puVar3": "destinationArray",
                "puVar4": "sourceArray",
                "local_24": "tempArray",
                "local_1c": "anotherTempArray"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_08004300"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080043f0": {
            "entrypoint": "0x080043f0",
            "current_name": "process_data_080043f0",
            "code": "\n\n\nvoid processData_080043f0(undefined4 input_1,undefined4 input_2,undefined4 input_3)\n\n{\n  undefined4 data_1;\n  undefined4 data_2;\n  undefined4 data_array [2];\n  \n  data_1 = _DAT_200013dd;\n  data_2 = _DAT_200013e1;\n  data_array[0] = input_3;\n  FUN_08004300(0x68,&data_1,8,data_array);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080043f0": "process_data_080043f0",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "local_10": "data_1",
                "uStack_c": "data_2",
                "auStack_8": "data_array"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_08004300"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004410": {
            "entrypoint": "0x08004410",
            "current_name": "initialize_data_08004410",
            "code": "\nvoid initializeData_08004410(undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  undefined4 dataPtr;\n  undefined4 combinedValue;\n  undefined4 stackVar;\n  \n  dataPtr = DAT_20001395;\n  combinedValue = CONCAT22((short)((uint)arg2 >> 0x10),DAT_20001399);\n  stackVar = arg3;\n  FUN_08004300(0x6c,&dataPtr,6);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004410": "initialize_data_08004410",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "local_10": "dataPtr",
                "local_c": "combinedValue",
                "uStack_8": "stackVar"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_08004300"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004434": {
            "entrypoint": "0x08004434",
            "current_name": "initialize_data_08004434",
            "code": "\nvoid initializeData_08004434(undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  undefined4 dataPointer;\n  undefined4 concatenatedValue;\n  undefined4 argValue;\n  \n  dataPointer = DAT_200014ab;\n  concatenatedValue = CONCAT22((short)((uint)arg2 >> 0x10),DAT_200014af);\n  argValue = arg3;\n  FUN_08004300(0x6d,&dataPointer,6);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004434": "initialize_data_08004434",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "local_10": "dataPointer",
                "local_c": "concatenatedValue",
                "uStack_8": "argValue"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_08004300"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004458": {
            "entrypoint": "0x08004458",
            "current_name": "copy_and_process_data_08004458",
            "code": "\nvoid copyAndProcessData_08004458(void)\n\n{\n  undefined4 *destPtr;\n  undefined4 *srcPtr;\n  undefined4 temp;\n  undefined4 *destPtrTemp;\n  undefined4 *srcPtrTemp;\n  undefined4 dataArray [3];\n  undefined2 indexArray [10];\n  \n  destPtr = dataArray;\n  srcPtr = &DAT_2000139b;\n  do {\n    srcPtrTemp = srcPtr;\n    destPtrTemp = destPtr;\n    temp = srcPtrTemp[1];\n    *destPtrTemp = *srcPtrTemp;\n    destPtrTemp[1] = temp;\n    destPtr = destPtrTemp + 2;\n    srcPtr = srcPtrTemp + 2;\n  } while (srcPtrTemp + 2 != (undefined4 *)0x200013b3);\n  destPtrTemp[2] = uRam200013b3;\n  *(undefined2 *)(destPtrTemp + 3) = *(undefined2 *)(srcPtrTemp + 3);\n  FUN_08004300(0x70,dataArray,0x1e);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004458": "copy_and_process_data_08004458",
                "puVar1": "destPtr",
                "puVar2": "srcPtr",
                "uVar3": "temp",
                "puVar4": "destPtrTemp",
                "puVar5": "srcPtrTemp",
                "local_30": "dataArray",
                "local_24": "indexArray"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_08004300"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004490": {
            "entrypoint": "0x08004490",
            "current_name": "continuous_error_handling_08004490",
            "code": "\nvoid continuousErrorHandling_08004490(undefined4 errorDescription,undefined4 lineNumber)\n\n{\n  FUN_08001424(0x40011000,0x4000,1);\n  FUN_08001424(0x40011000,0x8000,0);\n  FUN_08001424(0x40011000,0x2000,0);\n  do {\n    FUN_0800142e(0x40011000,0x4000);\n    FUN_0800142e(0x40011000,0x8000);\n    FUN_0800142e(0x40011000,0x2000);\n    FUN_08004c8c(\"Error with \");\n    FUN_08004c8c(errorDescription);\n    FUN_08004c8c(\" at line: \");\n    FUN_08004cac(lineNumber);\n    FUN_08004c18(10);\n    thunk_FUNC_08001168(500);\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08004490": "continuous_error_handling_08004490",
                "param_1": "errorDescription",
                "param_2": "lineNumber"
            },
            "calling": [
                "FUN_0800407c",
                "FUN_0800403c",
                "FUN_08004514",
                "FUN_080040b8",
                "FUN_0800458c"
            ],
            "called": [
                "FUN_08004cac",
                "FUN_08004c18",
                "FUN_0800142e",
                "thunk_FUN_08001168",
                "FUN_08001424",
                "FUN_08004c8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004514": {
            "entrypoint": "0x08004514",
            "current_name": "initialize_peripheral_08004514",
            "code": "\nvoid initializePeripheral_08004514(void)\n\n{\n  int status;\n  uint time;\n  undefined4 index;\n  int counter;\n  undefined4 flag;\n  int parameter1;\n  int parameter2;\n  undefined4 parameter3;\n  int parameter4;\n  undefined4 array [4];\n  undefined4 constant1;\n  undefined4 constant2;\n  undefined4 constant3;\n  undefined4 constant4;\n  undefined4 constant5;\n  \n  constant1 = 1;\n  constant2 = 0x10;\n  counter = 2;\n  constant4 = 0;\n  array[0] = 2;\n  constant3 = 2;\n  constant5 = 0x380000;\n  status = FUN_08001b58(array);\n  if (status == 0) goto LAB_08004540;\n  index = 0x3c;\n  while( true ) {\n    status = FUN_08004490(\"../Src/peripherals.c\",index);\nLAB_08004540:\n    flag = 0xf;\n    parameter3 = 0x400;\n    parameter1 = counter;\n    parameter2 = status;\n    parameter4 = status;\n    counter = FUN_0800209c(&flag,counter);\n    if (counter == 0) break;\n    index = 0x49;\n  }\n  time = FUN_08002214();\n  FUN_08001214(time / 1000);\n  FUN_08001240(4);\n  FUN_08001194(0xffffffff,0,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004514": "initialize_peripheral_08004514",
                "iVar1": "status",
                "uVar2": "time",
                "uVar3": "index",
                "iVar4": "counter",
                "local_44": "flag",
                "local_40": "parameter1",
                "local_3c": "parameter2",
                "local_38": "parameter3",
                "local_34": "parameter4",
                "local_30": "array",
                "local_20": "constant1",
                "local_1c": "constant2",
                "local_14": "constant3",
                "local_10": "constant4",
                "local_c": "constant5"
            },
            "calling": [
                "FUN_0800458c"
            ],
            "called": [
                "FUN_08002214",
                "FUN_08001b58",
                "FUN_08004490",
                "FUN_0800209c",
                "FUN_08001194",
                "FUN_08001214",
                "FUN_08001240"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800458c": {
            "entrypoint": "0x0800458c",
            "current_name": "initialize_system_0800458c",
            "code": "\n\n\nvoid initializeSystem_0800458c(void)\n\n{\n  int status;\n  undefined4 counter;\n  int value;\n  int var1;\n  int var2;\n  int var3;\n  int var4;\n  int var5;\n  int var6;\n  int var7;\n  int var8;\n  int var9;\n  int var10;\n  int var11;\n  int var12;\n  int var13;\n  undefined4 var14;\n  int var15;\n  \n  FUN_08001128();\n  FUN_08004514();\n  value = 2;\n  _DAT_40021018 = _DAT_40021018 | 0x1c;\n  FUN_08001424(0x40011000,0xe000,0,_DAT_40021018 & 8);\n  FUN_08001424(0x40010800,0x20,0);\n  var9 = 0xe000;\n  var10 = 1;\n  var12 = 2;\n  FUN_08001264(0x40011000,&var9);\n  var9 = 0x20;\n  var10 = 1;\n  var12 = 2;\n  FUN_08001264(0x40010800,&var9);\n  DAT_20001504 = 0x40005400;\n  DAT_20001508 = 400000;\n  DAT_20001514 = 0x4000;\n  DAT_2000150c = 0;\n  DAT_20001510 = 0;\n  DAT_20001518 = 0;\n  DAT_2000151c = 0;\n  DAT_20001520 = 0;\n  DAT_20001524 = 0;\n  status = FUN_08001754();\n  if (status == 0) goto LAB_0800463a;\n  counter = 0x6b;\n  while( true ) {\n    while( true ) {\n      while( true ) {\n        while( true ) {\n          while( true ) {\n            while( true ) {\n              while( true ) {\n                while( true ) {\n                  while( true ) {\n                    while( true ) {\n                      while( true ) {\n                        while( true ) {\n                          while( true ) {\n                            while( true ) {\n                              while( true ) {\n                                while( true ) {\n                                  status = FUN_08004490(\"../Src/peripherals.c\",counter);\nLAB_0800463a:\n                                  DAT_2000157c = 0x40013800;\n                                  DAT_20001580 = 0x1c200;\n                                  DAT_20001590 = 0xc;\n                                  DAT_20001584 = status;\n                                  DAT_20001588 = status;\n                                  DAT_2000158c = status;\n                                  DAT_20001594 = status;\n                                  DAT_20001598 = status;\n                                  status = FUN_08002724(&DAT_2000157c);\n                                  if (status == 0) break;\n                                  counter = 0x151;\n                                }\n                                DAT_200015bc = 0x40012c00;\n                                DAT_200015c8 = 1000;\n                                DAT_200015c0 = value;\n                                DAT_200015c4 = status;\n                                DAT_200015cc = status;\n                                DAT_200015d0 = status;\n                                status = FUN_080023d0(&DAT_200015bc);\n                                if (status == 0) break;\n                                counter = 0x88;\n                              }\n                              var1 = status;\n                              var2 = status;\n                              status = FUN_080025a4(&DAT_200015bc,&var1);\n                              if (status == 0) break;\n                              counter = 0x8f;\n                            }\n                            var3 = 0x60;\n                            var4 = status;\n                            var5 = status;\n                            var6 = status;\n                            var7 = status;\n                            var8 = status;\n                            status = FUN_0800245c(&DAT_200015bc,&var3,0xc);\n                            if (status == 0) break;\n                            counter = 0x9a;\n                          }\n                          var14 = 0x2000;\n                          var9 = status;\n                          var10 = status;\n                          var11 = status;\n                          var12 = status;\n                          var13 = status;\n                          var15 = status;\n                          status = FUN_08002564(&DAT_200015bc,&var9);\n                          if (status == 0) break;\n                          counter = 0xa6;\n                        }\n                        FUN_08004e14(&DAT_200015bc);\n                        DAT_200015f8 = 0x40000000;\n                        DAT_20001604 = 1000;\n                        DAT_200015fc = value;\n                        DAT_20001600 = status;\n                        DAT_20001608 = status;\n                        status = FUN_080023d0(&DAT_200015f8);\n                        if (status == 0) break;\n                        counter = 0xc3;\n                      }\n                      var3 = status;\n                      var4 = status;\n                      status = FUN_080025a4(&DAT_200015f8,&var3);\n                      if (status == 0) break;\n                      counter = 0xca;\n                    }\n                    var9 = 0x60;\n                    var10 = status;\n                    var11 = status;\n                    var13 = status;\n                    status = FUN_0800245c(&DAT_200015f8,&var9,4);\n                    if (status == 0) break;\n                    counter = 0xd3;\n                  }\n                  FUN_08004e14(&DAT_200015f8);\n                  DAT_2000154c = 1000;\n                  DAT_20001540 = 0x40000400;\n                  DAT_20001544 = value;\n                  DAT_20001548 = status;\n                  DAT_20001550 = status;\n                  status = FUN_080023d0();\n                  if (status == 0) break;\n                  counter = 0xf0;\n                }\n                var3 = 0;\n                var4 = 0;\n                status = FUN_080025a4(&DAT_20001540,&var3);\n                if (status == 0) break;\n                counter = 0xf7;\n              }\n              var9 = 0x60;\n              var10 = status;\n              var11 = status;\n              var13 = status;\n              status = FUN_0800245c(&DAT_20001540,&var9,8);\n              if (status == 0) break;\n              counter = 0x100;\n            }\n            value = FUN_0800245c(&DAT_20001540,&var9,0xc);\n            if (value == 0) break;\n            counter = 0x105;\n          }\n          FUN_08004e14(&DAT_20001540);\n          DAT_200014c8 = 0x40000800;\n          DAT_200014cc = 2;\n          DAT_200014d4 = 1000;\n          DAT_200014d0 = value;\n          DAT_200014d8 = value;\n          status = FUN_080023d0(&DAT_200014c8);\n          if (status == 0) break;\n          counter = 0x122;\n        }\n        var3 = status;\n        var4 = status;\n        status = FUN_080025a4(&DAT_200014c8,&var3);\n        if (status == 0) break;\n        counter = 0x129;\n      }\n      var9 = 0x60;\n      var10 = status;\n      var11 = status;\n      var13 = status;\n      status = FUN_0800245c(&DAT_200014c8,&var9,8);\n      if (status == 0) break;\n      counter = 0x132;\n    }\n    status = FUN_0800245c(&DAT_200014c8,&var9,0xc);\n    if (status == 0) break;\n    counter = 0x137;\n  }\n  FUN_08004e14(&DAT_200014c8);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800458c": "initialize_system_0800458c",
                "iVar1": "status",
                "uVar2": "counter",
                "iVar3": "value",
                "local_58": "var1",
                "local_54": "var2",
                "local_50": "var3",
                "local_4c": "var4",
                "local_48": "var5",
                "local_40": "var6",
                "local_3c": "var7",
                "local_38": "var8",
                "local_34": "var9",
                "local_30": "var10",
                "local_2c": "var11",
                "local_28": "var12",
                "local_24": "var13",
                "local_20": "var14",
                "local_1c": "var15"
            },
            "calling": [
                "FUN_08004028"
            ],
            "called": [
                "FUN_08002564",
                "FUN_08001264",
                "FUN_08004e14",
                "FUN_08001754",
                "FUN_08004490",
                "FUN_0800245c",
                "FUN_08004514",
                "FUN_080023d0",
                "FUN_08001128",
                "FUN_08001424",
                "FUN_080025a4",
                "FUN_08002724"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800483c": {
            "entrypoint": "0x0800483c",
            "current_name": "process_data_0800483c",
            "code": "\nvoid processData_0800483c(int *data)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  int value1;\n  int value2;\n  int value3;\n  \n  value2 = data[0xc];\n  result1 = FUN_08000adc(data[7],data[9]);\n  value2 = FUN_08000ad8(result1,value2);\n  data[10] = value2;\n  if (*data == 3) {\n    value2 = FUN_08001064(data[10],0);\n    if (value2 == 0) {\n      value2 = FUN_08001028(data[10],0xc3340000);\n    }\n    else {\n      value2 = FUN_08001064(data[10],0x43340000);\n    }\n    if (value2 != 0) {\n      value3 = data[10];\n      result1 = FUN_08000cec(data[10],0x43b40000);\n      value2 = FUN_08001064(data[10],0);\n      value1 = data[10];\n      if (value2 == 0) {\n        value1 = value1 + -0x80000000;\n      }\n      result1 = FUN_08000e54(result1,value1);\n      value2 = FUN_08000ad8(value3,result1);\n      data[10] = value2;\n    }\n  }\n  value3 = data[2];\n  value1 = data[3];\n  value2 = FUN_08000cec(data[1],data[10]);\n  data[0xe] = value2;\n  value2 = FUN_08000adc(data[10],data[0xf]);\n  data[0xf] = value2;\n  value2 = FUN_08001028(data[0xf],0xc3fa0000);\n  if (value2 == 0) {\n    value2 = FUN_08001064(data[0xf],0x43fa0000);\n    if (value2 == 0) {\n      value2 = data[0xf];\n    }\n    else {\n      value2 = 0x43fa0000;\n    }\n  }\n  else {\n    value2 = -0x3c060000;\n  }\n  data[0xf] = value2;\n  value2 = FUN_08000ad8(data[0xc],data[0xd]);\n  data[0x10] = value2;\n  value2 = data[0xe];\n  result1 = FUN_08000cec(value3,data[0xf]);\n  result1 = FUN_08000adc(result1,value2);\n  result2 = FUN_08000cec(value1,data[0x10]);\n  value2 = FUN_08000ad8(result1,result2);\n  data[0x12] = value2;\n  result1 = FUN_08000c44(data[0x13]);\n  value2 = FUN_08001028(data[0x12],0xc3fa0000);\n  if (value2 == 0) {\n    value2 = FUN_08001064(data[0x12],0x43fa0000);\n    if (value2 == 0) {\n      value2 = data[0x12];\n    }\n    else {\n      value2 = 0x43fa0000;\n    }\n  }\n  else {\n    value2 = -0x3c060000;\n  }\n  value2 = FUN_08000cec(value2,result1);\n  data[0x12] = value2;\n  data[0xd] = data[0xc];\n  data[0xb] = data[10];\n  data[0x15] = data[0x14];\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800483c": "process_data_0800483c",
                "param_1": "data",
                "uVar1": "result1",
                "uVar2": "result2",
                "iVar3": "value1",
                "iVar4": "value2",
                "iVar5": "value3"
            },
            "calling": [
                "FUN_08004a84"
            ],
            "called": [
                "FUN_08000ad8",
                "FUN_08000e54",
                "FUN_08001028",
                "FUN_08000c44",
                "FUN_08001064",
                "FUN_08000cec",
                "FUN_08000adc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a30": {
            "entrypoint": "0x08004a30",
            "current_name": "initialize_data_08004a30",
            "code": "\nvoid initializeData_08004a30(void)\n\n{\n  undefined4 result;\n  \n  if (DAT_20000285 != '\\0') {\n    if (DAT_200002a8 == '\\0') {\n      result = FUN_08003068();\n      DAT_20000068 = FUN_08000cec(result,0x42c80000);\n      DAT_200002a8 = '\\x01';\n    }\n    else {\n      result = FUN_08003068();\n      DAT_2000007c = FUN_08000cec(result,0x42c80000);\n    }\n  }\n  if (DAT_20000285 == '\\0') {\n    if (DAT_200002a8 != '\\0') {\n      DAT_200002a8 = DAT_20000285;\n    }\n    DAT_20000094 = DAT_20000288;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a30": "initialize_data_08004a30",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08004a84"
            ],
            "called": [
                "FUN_08003068",
                "FUN_08000cec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a84": {
            "entrypoint": "0x08004a84",
            "current_name": "initialize_system_08004a84",
            "code": "\nvoid initializeSystem_08004a84(void)\n\n{\n  int iVar1;\n  \n  DAT_200000d8 = FUN_08002ec0();\n  DAT_20000134 = FUN_08002ed4();\n  DAT_20000190 = FUN_08002ee8();\n  FUN_08004a30();\n  iVar1 = FUN_08001064(DAT_200000d8,0);\n  if (iVar1 == 0) {\n    iVar1 = FUN_08001028(DAT_200000d8,0xc2a00000);\n  }\n  else {\n    iVar1 = FUN_08001064(DAT_200000d8,0x42a00000);\n  }\n  if (iVar1 == 0) {\n    iVar1 = FUN_08001064(DAT_20000134,0);\n    if (iVar1 == 0) {\n      iVar1 = FUN_08001028(DAT_20000134,0xc2a00000);\n    }\n    else {\n      iVar1 = FUN_08001064(DAT_20000134,0x42a00000);\n    }\n    if (iVar1 == 0) {\n      FUN_08003f3c(1,1);\n      FUN_0800483c(&DAT_200000a8);\n      FUN_0800483c(&DAT_20000104);\n      FUN_0800483c(&DAT_20000160);\n      if (DAT_20000285 != '\\0') {\n        FUN_0800483c(&DAT_2000004c);\n        FUN_08000adc(DAT_20000094,0x44bb8000);\n      }\n      DAT_20000094 = DAT_20000288;\n      if (DAT_20000284 == '\\0') {\n        FUN_080041c4();\n      }\n      else {\n        FUN_0800426c(DAT_20000288,DAT_200000f0,DAT_2000014c,DAT_200001a8);\n      }\n      FUN_08000cec(DAT_200000ac,0x437f0000);\n      DAT_2000139b._3_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_200000b0,0x437f0000);\n      DAT_2000139f._0_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_20000108,0x437f0000);\n      DAT_2000139b._0_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_2000010c,0x437f0000);\n      DAT_2000139b._1_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_20000110,0x437f0000);\n      DAT_2000139b._2_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_20000164,0x437f0000);\n      DAT_2000139f._2_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_20000168,0x437f0000);\n      DAT_2000139f._3_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_2000016c,0x437f0000);\n      DAT_200013a3._0_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_20000050,0x437f0000);\n      DAT_200013a3._1_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_20000054,0x437f0000);\n      DAT_200013a3._2_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_20000058,0x437f0000);\n      DAT_200013a3._3_1_ = FUN_080010c4();\n      return;\n    }\n  }\n  FUN_080041c4();\n  FUN_08003f3c(0,1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a84": "initialize_system_08004a84"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_08001028",
                "FUN_08002ee8",
                "FUN_080041c4",
                "FUN_0800483c",
                "FUN_08000cec",
                "FUN_08002ed4",
                "FUN_08004a30",
                "FUN_0800426c",
                "FUN_08001064",
                "FUN_080010c4",
                "FUN_08003f3c",
                "FUN_08000adc",
                "FUN_08002ec0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c18": {
            "entrypoint": "0x08004c18",
            "current_name": "parse_data_08004c18",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800289e) */\n\nundefined4 parseData_08004c18(undefined input_data)\n\n{\n  int *pointer1;\n  int var1;\n  int var2;\n  ushort *pointer2;\n  \n  DAT_20001636._0_1_ = input_data;\n  pointer2 = &DAT_20001636;\n  if (((DAT_200015b5 != '\\x01') && (DAT_200015b5 != '\\\"')) || (DAT_200015b4 == '\\x01')) {\n    return 2;\n  }\n  DAT_200015b4 = 1;\n  DAT_200015b8 = 0;\n  DAT_200015a0 = 1;\n  if (DAT_200015b5 == '\\\"') {\n    DAT_200015b5 = '2';\n  }\n  else {\n    DAT_200015b5 = '\\x12';\n  }\n  DAT_200015a2 = 1;\nLAB_080027c4:\n  do {\n    if (DAT_200015a2 == 0) {\n      var1 = FUN_0800115c();\n      do {\n        if (*DAT_2000157c << 0x19 < 0) {\n          if (DAT_200015b5 == '2') {\n            DAT_200015b5 = 0x22;\n          }\n          else {\n            DAT_200015b5 = 1;\n          }\n          DAT_200015b4 = 0;\n          return 0;\n        }\n        var2 = FUN_0800115c();\n      } while ((uint)(var2 - var1) < 6);\nLAB_0800281c:\n      pointer1 = DAT_2000157c;\n      DAT_2000157c[3] = DAT_2000157c[3] & 0xffffff7f;\n      pointer1[3] = pointer1[3] & 0xffffffdf;\n      pointer1[3] = pointer1[3] & 0xfffffeff;\n      pointer1[5] = pointer1[5] & 0xfffffffe;\n      DAT_200015b5 = 1;\n      DAT_200015b4 = 0;\n      return 3;\n    }\n    DAT_200015a2 = DAT_200015a2 + -1;\n    if (DAT_20001584 == 0x1000) {\n      var1 = FUN_0800115c();\n      while (-1 < *DAT_2000157c << 0x18) {\n        var2 = FUN_0800115c();\n        if (5 < (uint)(var2 - var1)) goto LAB_0800281c;\n      }\n      DAT_2000157c[1] = *pointer2 & 0x1ff;\n      if (DAT_2000158c == 0) {\n        pointer2 = pointer2 + 1;\n        goto LAB_080027c4;\n      }\n    }\n    else {\n      var1 = FUN_0800115c();\n      while (-1 < *DAT_2000157c << 0x18) {\n        var2 = FUN_0800115c();\n        if (5 < (uint)(var2 - var1)) goto LAB_0800281c;\n      }\n      DAT_2000157c[1] = (uint)*(byte *)pointer2;\n    }\n    pointer2 = (ushort *)((int)pointer2 + 1);\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08004c18": "parse_data_08004c18",
                "param_1": "input_data",
                "piVar1": "pointer1",
                "iVar2": "var1",
                "iVar3": "var2",
                "puVar4": "pointer2"
            },
            "calling": [
                "FUN_08004490",
                "FUN_08004300",
                "FUN_08004c8c"
            ],
            "called": [
                "FUN_0800115c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c30": {
            "entrypoint": "0x08004c30",
            "current_name": "validate_param_08004c30",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08002902) */\n\nint * validate_param_08004c30(int *param)\n\n{\n  int result;\n  \n  if (*param != 0x40013800) {\n    return param;\n  }\n  FUN_08003ec8(&DAT_20000364,DAT_20001634);\n  result = DAT_2000157c;\n  if (((DAT_200015b5 == '\\x01') || (DAT_200015b5 == '\\x12')) && (DAT_200015b4 != '\\x01')) {\n    DAT_200015b8 = 0;\n    DAT_200015a8 = 1;\n    DAT_200015aa = 1;\n    DAT_200015b4 = 0;\n    if (DAT_200015b5 == '\\x12') {\n      DAT_200015b5 = 0x32;\n    }\n    else {\n      DAT_200015b5 = 0x22;\n    }\n    DAT_200015a4 = &DAT_20001634;\n    *(uint *)(DAT_2000157c + 0xc) = *(uint *)(DAT_2000157c + 0xc) | 0x100;\n    *(uint *)(result + 0x14) = *(uint *)(result + 0x14) | 1;\n    *(uint *)(result + 0xc) = *(uint *)(result + 0xc) | 0x20;\n    return (int *)0x0;\n  }\n  return (int *)0x2;\n}\n\n",
            "renaming": {
                "FUN_08004c30": "validate_param_08004c30",
                "param_1": "param",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800290c"
            ],
            "called": [
                "FUN_08003ec8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c64": {
            "entrypoint": "0x08004c64",
            "current_name": "initialize_data_08004c64",
            "code": "\nvoid initializeData_08004c64(void)\n\n{\n  int index;\n  \n  index = 0;\n  DAT_20000b64 = 0;\n  DAT_20000b66 = 0;\n  DAT_20000b68 = 0;\n  do {\n    (&DAT_20000364)[index] = 0;\n    index = index + 1;\n  } while (index != 0x800);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c64": "initialize_data_08004c64",
                "iVar1": "index"
            },
            "calling": [
                "FUN_08004c70"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c70": {
            "entrypoint": "0x08004c70",
            "current_name": "initialize_data_08004c70",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08002902) */\n\nundefined4 initializeData_08004c70(void)\n\n{\n  int dataSize;\n  \n  FUN_08004c64();\n  dataSize = DAT_2000157c;\n  if (((DAT_200015b5 == '\\x01') || (DAT_200015b5 == '\\x12')) && (DAT_200015b4 != '\\x01')) {\n    DAT_200015b8 = 0;\n    DAT_200015a8 = 1;\n    DAT_200015aa = 1;\n    DAT_200015b4 = 0;\n    if (DAT_200015b5 == '\\x12') {\n      DAT_200015b5 = 0x32;\n    }\n    else {\n      DAT_200015b5 = 0x22;\n    }\n    DAT_200015a4 = &DAT_20001634;\n    *(uint *)(DAT_2000157c + 0xc) = *(uint *)(DAT_2000157c + 0xc) | 0x100;\n    *(uint *)(dataSize + 0x14) = *(uint *)(dataSize + 0x14) | 1;\n    *(uint *)(dataSize + 0xc) = *(uint *)(dataSize + 0xc) | 0x20;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08004c70": "initialize_data_08004c70",
                "iVar1": "dataSize"
            },
            "calling": [
                "FUN_08004194"
            ],
            "called": [
                "FUN_08004c64"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c8c": {
            "entrypoint": "0x08004c8c",
            "current_name": "process_data_08004c8c",
            "code": "\nvoid process_data_08004c8c(undefined *data)\n\n{\n  uint result;\n  undefined *current_data;\n  \n  current_data = data;\n  while( true ) {\n    result = FUN_08000150(data);\n    if (result <= (uint)((int)current_data - (int)data)) break;\n    FUN_08004c18(*current_data);\n    current_data = current_data + 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c8c": "process_data_08004c8c",
                "param_1": "data",
                "uVar1": "result",
                "puVar2": "current_data"
            },
            "calling": [
                "FUN_08004cac",
                "FUN_08004490",
                "FUN_08004300"
            ],
            "called": [
                "FUN_08000150",
                "FUN_08004c18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004cac": {
            "entrypoint": "0x08004cac",
            "current_name": "initialize_data_08004cac",
            "code": "\nvoid initializeData_08004cac(undefined4 param)\n\n{\n  FUN_08004ffc(&DAT_20001636,&DAT_0800735e,param);\n  FUN_08004c8c(&DAT_20001636);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004cac": "initialize_data_08004cac",
                "param_1": "param"
            },
            "calling": [
                "FUN_08004490"
            ],
            "called": [
                "FUN_08004ffc",
                "FUN_08004c8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ccc": {
            "entrypoint": "0x08004ccc",
            "current_name": "set_flags_and_call_functions_08004ccc",
            "code": "\n\n\nvoid setFlagsAndCallFunctions_08004ccc(undefined4 param1,undefined4 param2,undefined4 param3)\n\n{\n  _DAT_40021018 = _DAT_40021018 | 1;\n  FUN_08001170(3,param2,_DAT_40021018,1,param1,1,param3);\n  FUN_08001194(0xfffffff4,0);\n  FUN_08001194(0xfffffff5,0);\n  FUN_08001194(0xfffffff6,0);\n  FUN_08001194(0xfffffffb,0);\n  FUN_08001194(0xfffffffc,0);\n  FUN_08001194(0xfffffffe,0);\n  FUN_08001194(0xffffffff,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004ccc": "set_flags_and_call_functions_08004ccc",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3"
            },
            "calling": [
                "FUN_08001128"
            ],
            "called": [
                "FUN_08001170",
                "FUN_08001194"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d48": {
            "entrypoint": "0x08004d48",
            "current_name": "check_and_set_flag_08004d48",
            "code": "\n\n\nvoid checkAndSetFlag_08004d48(int *input,undefined4 value)\n\n{\n  undefined4 value1;\n  undefined4 value2;\n  \n  if (*input == 0x40005400) {\n    value1 = 0xc0;\n    value2 = 0x12;\n    FUN_08001264(0x40010c00,&value1,0x40005400,3,input,value);\n    _DAT_4002101c = _DAT_4002101c | 0x200000;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d48": "check_and_set_flag_08004d48",
                "param_1": "input",
                "param_2": "value",
                "local_18": "value1",
                "local_14": "value2"
            },
            "calling": [
                "FUN_08001754"
            ],
            "called": [
                "FUN_08001264"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d8c": {
            "entrypoint": "0x08004d8c",
            "current_name": "update_flags_08004d8c",
            "code": "\n\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nvoid updateFlags_08004d8c(int *ptr_value)\n\n{\n  int value;\n  \n  value = *ptr_value;\n  if (value == 0x40012c00) {\n    _DAT_40021018 = _DAT_40021018 | 0x800;\n  }\n  else if (value == 0x40000000) {\n    _DAT_4002101c = _DAT_4002101c | 1;\n  }\n  else if (value == 0x40000400) {\n    _DAT_4002101c = _DAT_4002101c | 2;\n  }\n  else if (value == 0x40000800) {\n    _DAT_4002101c = _DAT_4002101c | 4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d8c": "update_flags_08004d8c",
                "param_1": "ptr_value",
                "iVar1": "value"
            },
            "calling": [
                "FUN_080023d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e14": {
            "entrypoint": "0x08004e14",
            "current_name": "initialize_settings_08004e14",
            "code": "\nvoid initializeSettings_08004e14(int *settingPtr,undefined4 param1,undefined4 param2)\n\n{\n  undefined4 configValue;\n  int settingValue;\n  undefined4 config1;\n  undefined4 config2;\n  undefined4 config3;\n  undefined4 config4;\n  \n  settingValue = *settingPtr;\n  if (settingValue == 0x40012c00) {\n    config1 = 0x800;\n  }\n  else {\n    if (settingValue != 0x40000000) {\n      if (settingValue == 0x40000400) {\n        config1 = 3;\n      }\n      else {\n        if (settingValue != 0x40000800) {\n          return;\n        }\n        config1 = 0x300;\n      }\n      configValue = 0x40010c00;\n      goto LAB_08004e2e;\n    }\n    config1 = 2;\n  }\n  configValue = 0x40010800;\nLAB_08004e2e:\n  config4 = 2;\n  config2 = 2;\n  config3 = param2;\n  FUN_08001264(configValue,&config1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004e14": "initialize_settings_08004e14",
                "param_1": "settingPtr",
                "param_2": "param1",
                "param_3": "param2",
                "uVar1": "configValue",
                "iVar2": "settingValue",
                "local_18": "config1",
                "local_14": "config2",
                "uStack_10": "config3",
                "local_c": "config4"
            },
            "calling": [
                "FUN_0800458c"
            ],
            "called": [
                "FUN_08001264"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e7c": {
            "entrypoint": "0x08004e7c",
            "current_name": "initialize_memory_08004e7c",
            "code": "\n\n\nvoid initializeMemory_08004e7c(int *memoryPointer)\n\n{\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  undefined4 value4;\n  \n  if (*memoryPointer == 0x40013800) {\n    _DAT_40021018 = _DAT_40021018 | 0x4000;\n    value1 = 0x200;\n    value2 = 2;\n    value4 = 3;\n    FUN_08001264(0x40010800,&value1);\n    value1 = 0x400;\n    value2 = 0;\n    value3 = 0;\n    FUN_08001264(0x40010800,&value1);\n    FUN_08001194(0x25,0,0);\n    FUN_080011fc(0x25);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004e7c": "initialize_memory_08004e7c",
                "param_1": "memoryPointer",
                "local_18": "value1",
                "local_14": "value2",
                "local_10": "value3",
                "local_c": "value4"
            },
            "calling": [
                "FUN_08002724"
            ],
            "called": [
                "FUN_08001264",
                "FUN_08001194",
                "FUN_080011fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004f10": {
            "entrypoint": "0x08004f10",
            "current_name": "initialize_hardware_08004f10",
            "code": "\n\n\nvoid initializeHardware_08004f10(void)\n\n{\n  _DAT_40021000 = _DAT_40021000 & 0xfef2ffff | 1;\n  _DAT_40021004 = _DAT_40021004 & 0xf8800000;\n  _DAT_40021008 = 0x9f0000;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004f10": "initialize_hardware_08004f10"
            },
            "calling": [
                "entry"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_0800115c": {
            "entrypoint": "0x08004f60",
            "current_name": "get_data_thunk_0800115c",
            "code": "\nundefined4 get_data_thunk_0800115c(void)\n\n{\n  return DAT_20000244;\n}\n\n",
            "renaming": {
                "thunk_FUN_0800115c": "get_data_thunk_0800115c"
            },
            "calling": [
                "FUN_08002f28"
            ],
            "called": [
                "FUN_0800115c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_08001168": {
            "entrypoint": "0x08004f64",
            "current_name": "thunk_FUNC_08001168",
            "code": "\nvoid thunk_FUNC_08001168(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "thunk_FUN_08001168": "thunk_FUNC_08001168"
            },
            "calling": [
                "FUN_0800403c",
                "FUN_08004490",
                "FUN_08004028",
                "FUN_08003298"
            ],
            "called": [
                "FUN_08001168"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "entry": {
            "entrypoint": "0x08004f68",
            "current_name": "entry",
            "code": "\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined4 *)(iVar1 + 0x20000000) < &DAT_20000228; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x8007448);\n  }\n  for (puVar2 = &DAT_20000228; puVar2 < &DAT_200016a0; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  FUN_08004f10();\n  FUN_08004fb4();\n  UNRECOVERED_JUMPTABLE = (code *)0x8004f9a;\n  FUN_080041ae();\n                    /* WARNING: Could not recover jumptable at 0x08004f9a. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "renaming": {},
            "calling": [],
            "called": [
                "FUN_08004f10",
                "FUN_08004fb4",
                "FUN_080041ae"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004fb4": {
            "entrypoint": "0x08004fb4",
            "current_name": "execute_functions_08004fb4",
            "code": "\nvoid executeFunctions_08004fb4(void)\n\n{\n  int index;\n  \n  for (index = 0; index != 0; index = index + 1) {\n    (*(code *)(&DAT_08007440)[index])();\n  }\n  FUNC_080072d4();\n  for (index = 0; index != 1; index = index + 1) {\n    (*(code *)(&DAT_08007440)[index])();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004fb4": "execute_functions_08004fb4",
                "iVar1": "index"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_08000134",
                "FUN_080072d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ffc": {
            "entrypoint": "0x08004ffc",
            "current_name": "initialize_local_variables_08004ffc",
            "code": "\nvoid initializeLocalVariables_08004ffc(undefined *ptr,undefined4 var1,undefined4 var2,undefined4 var3)\n\n{\n  undefined *localPointers [2];\n  undefined4 maxValue1;\n  undefined2 defaultValue1;\n  undefined2 defaultValue2;\n  undefined *currentPointer;\n  undefined4 maxValue2;\n  undefined4 tempVar1;\n  undefined4 tempVar2;\n  undefined4 tempVar3;\n  \n  defaultValue1 = 0x208;\n  maxValue1 = 0x7fffffff;\n  maxValue2 = 0x7fffffff;\n  defaultValue2 = 0xffff;\n  localPointers[0] = ptr;\n  currentPointer = ptr;\n  tempVar1 = var1;\n  tempVar2 = var2;\n  tempVar3 = var3;\n  FUN_080050fc(DAT_200001c0,localPointers,var1);\n  *localPointers[0] = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004ffc": "initialize_local_variables_08004ffc",
                "param_1": "ptr",
                "param_2": "var1",
                "param_3": "var2",
                "param_4": "var3",
                "local_78": "localPointers",
                "local_70": "maxValue1",
                "local_6c": "defaultValue1",
                "local_6a": "defaultValue2",
                "local_68": "currentPointer",
                "local_64": "maxValue2",
                "uStack_c": "tempVar1",
                "uStack_8": "tempVar2",
                "uStack_4": "tempVar3"
            },
            "calling": [
                "FUN_08004cac"
            ],
            "called": [
                "FUN_080050fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005044": {
            "entrypoint": "0x08005044",
            "current_name": "process_input_08005044",
            "code": "\nundefined4 processInput_08005044(undefined4 *output,int *buffer,undefined4 value,uint limit)\n\n{\n  int result;\n  uint newLimit;\n  uint bufferLimit;\n  int offset;\n  \n  bufferLimit = buffer[2];\n  if ((bufferLimit <= limit) && ((*(ushort *)(buffer + 3) & 0x480) != 0)) {\n    offset = *buffer - buffer[4];\n    bufferLimit = (uint)(buffer[5] * 3) / 2;\n    newLimit = limit + 1 + offset;\n    if (bufferLimit < newLimit) {\n      bufferLimit = newLimit;\n    }\n    if ((int)((uint)*(ushort *)(buffer + 3) << 0x15) < 0) {\n      result = FUN_08005714(output,bufferLimit);\n      if (result == 0) {\nLAB_0800508a:\n        *output = 0xc;\n        *(ushort *)(buffer + 3) = *(ushort *)(buffer + 3) | 0x40;\n        return 0xffffffff;\n      }\n      FUN_08005630(result,buffer[4],offset);\n      *(ushort *)(buffer + 3) = *(ushort *)(buffer + 3) & 0xfb7f | 0x80;\n    }\n    else {\n      result = FUN_080057d0(output,buffer[4],bufferLimit);\n      if (result == 0) {\n        FUN_0800567c(output,buffer[4]);\n        goto LAB_0800508a;\n      }\n    }\n    buffer[4] = result;\n    *buffer = result + offset;\n    buffer[5] = bufferLimit;\n    buffer[2] = bufferLimit - offset;\n    bufferLimit = limit;\n  }\n  if (limit <= bufferLimit) {\n    bufferLimit = limit;\n  }\n  FUN_08005646(*buffer,value,bufferLimit);\n  buffer[2] = buffer[2] - bufferLimit;\n  *buffer = bufferLimit + *buffer;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005044": "process_input_08005044",
                "param_1": "output",
                "param_2": "buffer",
                "param_3": "value",
                "param_4": "limit",
                "iVar1": "result",
                "uVar2": "newLimit",
                "uVar3": "bufferLimit",
                "iVar4": "offset"
            },
            "calling": [
                "FUN_080050fc"
            ],
            "called": [
                "FUN_0800567c",
                "FUN_08005714",
                "FUN_080057d0",
                "FUN_08005646",
                "FUN_08005630"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080050fc": {
            "entrypoint": "0x080050fc",
            "current_name": "parse_data_080050fc",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08005294) */\n\nint parseData_080050fc(undefined4 *output_ptr,int *input_arr,byte *input_str,int *buffer_arr)\n\n{\n  int result;\n  int parse_result;\n  int *ptr;\n  bool found_digit;\n  byte *str_ptr;\n  byte *ptr_temp;\n  int unaff_r9;\n  int *buffer_ptr;\n  uint flag;\n  int num1;\n  undefined4 output_num;\n  int num2;\n  int total_length;\n  byte current_char;\n  undefined local_var1;\n  undefined local_var2;\n  undefined local_var3;\n  undefined4 local_var4;\n  \n  buffer_ptr = buffer_arr;\n  if (((int)((uint)*(ushort *)(input_arr + 3) << 0x18) < 0) && (input_arr[4] == 0)) {\n    result = FUN_08005714(output_ptr,0x40);\n    *input_arr = result;\n    input_arr[4] = result;\n    if (result == 0) {\n      *output_ptr = 0xc;\n      return -1;\n    }\n    input_arr[5] = 0x40;\n  }\n  total_length = 0;\n  local_var1 = 0x20;\n  local_var2 = 0x30;\n  str_ptr = input_str;\nLAB_08005146:\n  ptr_temp = str_ptr;\n  if (*ptr_temp != 0) goto LAB_080051ca;\n  goto LAB_08005150;\nLAB_080051ca:\n  str_ptr = ptr_temp + 1;\n  if (*ptr_temp != 0x25) goto LAB_08005146;\nLAB_08005150:\n  result = (int)ptr_temp - (int)input_str;\n  if (result != 0) {\n    parse_result = FUN_08005044(output_ptr,input_arr,input_str,result);\n    if (parse_result == -1) {\nLAB_080052ac:\n      if ((int)((uint)*(ushort *)(input_arr + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return total_length;\n    }\n    total_length = total_length + result;\n  }\n  if (*ptr_temp == 0) goto LAB_080052ac;\n  flag = 0;\n  num2 = 0;\n  num1 = -1;\n  output_num = 0;\n  local_var3 = 0;\n  local_var4 = 0;\n  str_ptr = ptr_temp + 1;\n  while( true ) {\n    result = FUN_08005614(&DAT_08007379,*str_ptr);\n    input_str = str_ptr + 1;\n    if (result == 0) break;\n    flag = 1 << (result + 0xf7ff8c87U & 0xff) | flag;\n    str_ptr = input_str;\n  }\n  if ((int)(flag << 0x1b) < 0) {\n    local_var3 = 0x20;\n  }\n  if ((int)(flag << 0x1c) < 0) {\n    local_var3 = 0x2b;\n  }\n  if (*str_ptr == 0x2a) {\n    ptr = buffer_ptr + 1;\n    result = *buffer_ptr;\n    buffer_ptr = ptr;\n    if (result < 0) {\n      num2 = -result;\n      flag = flag | 2;\n      goto LAB_080051fc;\n    }\n  }\n  else {\n    found_digit = false;\n    result = num2;\n    input_str = str_ptr;\n    while( true ) {\n      if (9 < *input_str - 0x30) break;\n      result = result * 10 + (*input_str - 0x30);\n      found_digit = true;\n      input_str = input_str + 1;\n    }\n    if (!found_digit) goto LAB_080051fc;\n  }\n  num2 = result;\nLAB_080051fc:\n  if (*input_str == 0x2e) {\n    if (input_str[1] == 0x2a) {\n      input_str = input_str + 2;\n      ptr = buffer_ptr + 1;\n      num1 = *buffer_ptr;\n      buffer_ptr = ptr;\n      if (num1 < 0) {\n        num1 = -1;\n      }\n    }\n    else {\n      found_digit = false;\n      result = 0;\n      num1 = 0;\n      while( true ) {\n        input_str = input_str + 1;\n        if (9 < *input_str - 0x30) break;\n        result = result * 10 + (*input_str - 0x30);\n        found_digit = true;\n      }\n      if (found_digit) {\n        num1 = result;\n      }\n    }\n  }\n  result = FUN_08005614(&DAT_0800737f,*input_str,3);\n  if (result != 0) {\n    input_str = input_str + 1;\n    flag = flag | 0x40 << (result + 0xf7ff8c81U & 0xff);\n  }\n  current_char = *input_str;\n  input_str = input_str + 1;\n  result = FUN_08005614(\"efgEFG\",current_char,6);\n  if (result == 0) {\n    unaff_r9 = FUN_080053d4(output_ptr,&flag,input_arr,0x8005045,&buffer_ptr);\n    if (unaff_r9 == -1) goto LAB_080052ac;\n  }\n  else {\n    buffer_ptr = (int *)(((int)buffer_ptr + 7U & 0xfffffff8) + 8);\n  }\n  total_length = total_length + unaff_r9;\n  str_ptr = input_str;\n  goto LAB_08005146;\n}\n\n",
            "renaming": {
                "FUN_080050fc": "parse_data_080050fc",
                "param_1": "output_ptr",
                "param_2": "input_arr",
                "param_3": "input_str",
                "param_4": "buffer_arr",
                "iVar1": "result",
                "iVar2": "parse_result",
                "piVar3": "ptr",
                "bVar4": "found_digit",
                "pbVar5": "str_ptr",
                "pbVar6": "ptr_temp",
                "local_8c": "buffer_ptr",
                "local_88": "flag",
                "local_84": "num1",
                "local_80": "output_num",
                "local_7c": "num2",
                "local_74": "total_length",
                "local_70": "current_char",
                "local_6f": "local_var1",
                "local_6e": "local_var2",
                "local_45": "local_var3",
                "local_30": "local_var4"
            },
            "calling": [
                "FUN_08004ffc"
            ],
            "called": [
                "FUN_08005044",
                "FUN_080053d4",
                "FUN_08005714",
                "FUN_08005614"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080052e4": {
            "entrypoint": "0x080052e4",
            "current_name": "process_data_080052e4",
            "code": "\nundefined4\nprocessData_080052e4(undefined4 input_data,uint *data_array,uint *output_size,undefined4 param_a,code *callback_func)\n\n{\n  int index;\n  int result;\n  uint data_value1;\n  uint data_value2;\n  bool condition_met;\n  \n  data_value1 = data_array[4];\n  if ((int)data_array[4] < (int)data_array[2]) {\n    data_value1 = data_array[2];\n  }\n  *output_size = data_value1;\n  if (*(char *)((int)data_array + 0x43) != '\\0') {\n    *output_size = data_value1 + 1;\n  }\n  if ((int)(*data_array << 0x1a) < 0) {\n    *output_size = *output_size + 2;\n  }\n  if ((*data_array & 6) == 0) {\n    for (index = 0; index < (int)(data_array[3] - *output_size); index = index + 1) {\n      result = (*callback_func)(input_data,param_a,(int)data_array + 0x19,1);\n      if (result == -1) {\n        return 0xffffffff;\n      }\n    }\n  }\n  data_value1 = (uint)*(byte *)((int)data_array + 0x43);\n  if (data_value1 != 0) {\n    data_value1 = 1;\n  }\n  data_value2 = data_value1;\n  if ((int)(*data_array << 0x1a) < 0) {\n    *(undefined *)((int)data_array + data_value1 + 0x43) = 0x30;\n    data_value2 = data_value1 + 2;\n    *(undefined *)((int)data_array + data_value1 + 0x44) = *(undefined *)((int)data_array + 0x45);\n  }\n  index = (*callback_func)(input_data,param_a,(int)data_array + 0x43,data_value2);\n  if (index != -1) {\n    data_value1 = data_array[3];\n    condition_met = (*data_array & 6) != 4;\n    if (condition_met) {\n      data_value1 = 0;\n    }\n    data_value2 = 0;\n    if (!condition_met) {\n      data_value1 = data_value1 - *output_size;\n    }\n    if (!condition_met) {\n      data_value1 = data_value1 & ~((int)data_value1 >> 0x1f);\n    }\n    if ((int)data_array[4] < (int)data_array[2]) {\n      data_value1 = data_value1 + (data_array[2] - data_array[4]);\n    }\n    while( true ) {\n      if (data_value1 == data_value2) {\n        return 0;\n      }\n      index = (*callback_func)(input_data,param_a,(int)data_array + 0x1a,1);\n      if (index == -1) break;\n      data_value2 = data_value2 + 1;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080052e4": "process_data_080052e4",
                "param_1": "input_data",
                "param_2": "data_array",
                "param_3": "output_size",
                "param_4": "param_a",
                "param_5": "callback_func",
                "iVar1": "index",
                "iVar2": "result",
                "uVar3": "data_value1",
                "uVar4": "data_value2",
                "bVar5": "condition_met"
            },
            "calling": [
                "FUN_080053d4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080053d4": {
            "entrypoint": "0x080053d4",
            "current_name": "convert_number_080053d4",
            "code": "\nuint convertNumber_080053d4(undefined4 input_value,uint *number_ptr,undefined4 param_3,code *conversion_function,uint **result_ptr)\n\n{\n  byte byte_value;\n  int loop_variable;\n  uint *pointer_var;\n  int inner_loop_variable;\n  char *hex_chars;\n  uint base;\n  uint **ppuVar7;\n  char **ppcVar8;\n  uint input_base;\n  uint input_length;\n  char *formatted_number;\n  char *temp_string;\n  uint local_variables [2];\n  \n  byte_value = *(byte *)(number_ptr + 6);\n  temp_string = (char *)((int)number_ptr + 0x43);\n  if (byte_value != 0x6e) {\n    if (byte_value < 0x6f) {\n      if (byte_value != 99) {\n        if (byte_value < 100) {\n          if (byte_value == 0) goto LAB_0800558e;\n          if (byte_value != 0x58) goto LAB_08005404;\n          *(undefined *)((int)number_ptr + 0x45) = 0x58;\n          hex_chars = \"0123456789ABCDEF\";\nLAB_0800551e:\n          base = *number_ptr;\n          pointer_var = *result_ptr;\n          *result_ptr = pointer_var + 1;\n          if (((base & 0x80) == 0) && ((int)(base << 0x19) < 0)) {\n            input_base = (uint)*(ushort *)pointer_var;\n          }\n          else {\n            input_base = *pointer_var;\n          }\n          if ((int)(base << 0x1f) < 0) {\n            *number_ptr = base | 0x20;\n          }\n          if (input_base == 0) {\n            *number_ptr = *number_ptr & 0xffffffdf;\n          }\n          base = 0x10;\nLAB_080054b4:\n          *(undefined *)((int)number_ptr + 0x43) = 0;\n        }\n        else {\n          if ((byte_value != 100) && (byte_value != 0x69)) goto LAB_08005404;\n          input_base = *number_ptr;\n          pointer_var = *result_ptr;\n          if ((input_base & 0x80) == 0) {\n            *result_ptr = pointer_var + 1;\n            if ((input_base & 0x40) == 0) goto LAB_08005424;\n            input_base = (uint)(short)*(ushort *)pointer_var;\n          }\n          else {\n            *result_ptr = pointer_var + 1;\nLAB_08005424:\n            input_base = *pointer_var;\n          }\n          if ((int)input_base < 0) {\n            input_base = -input_base;\n            *(undefined *)((int)number_ptr + 0x43) = 0x2d;\n          }\n          hex_chars = \"0123456789ABCDEF\";\n          base = 10;\n        }\n        input_length = number_ptr[1];\n        number_ptr[2] = input_length;\n        formatted_number = temp_string;\n        if ((int)input_length < 0) {\n          if (input_base != 0) goto LAB_08005552;\nLAB_08005600:\n          *(char *)((int)number_ptr + 0x42) = *hex_chars;\n          formatted_number = (char *)((int)number_ptr + 0x42);\n        }\n        else {\n          *number_ptr = *number_ptr & 0xfffffffb;\n          if (input_base == 0) {\n            if (input_length != 0) goto LAB_08005600;\n          }\n          else {\nLAB_08005552:\n            do {\n              input_length = input_base / base;\n              formatted_number = formatted_number + -1;\n              *formatted_number = hex_chars[input_base - base * input_length];\n              input_base = input_length;\n            } while (input_length != 0);\n          }\n        }\n        if (((base == 8) && ((int)(*number_ptr << 0x1f) < 0)) && ((int)number_ptr[1] <= (int)number_ptr[4]))\n        {\n          formatted_number[-1] = '0';\n          formatted_number = formatted_number + -1;\n        }\n        number_ptr[4] = (int)temp_string - (int)formatted_number;\n        temp_string = formatted_number;\n        goto LAB_080054fa;\n      }\n      pointer_var = *result_ptr;\n      *result_ptr = pointer_var + 1;\n      *(char *)((int)number_ptr + 0x42) = (char)*pointer_var;\nLAB_08005464:\n      temp_string = (char *)((int)number_ptr + 0x42);\n      input_base = 1;\n    }\n    else {\n      if (byte_value != 0x73) {\n        if (byte_value < 0x74) {\n          if (byte_value == 0x6f) {\nLAB_0800548a:\n            input_base = *number_ptr;\n            pointer_var = *result_ptr;\n            if ((input_base & 0x80) == 0) {\n              *result_ptr = pointer_var + 1;\n              if ((input_base & 0x40) == 0) goto LAB_08005498;\n              input_base = (uint)*(ushort *)pointer_var;\n            }\n            else {\n              *result_ptr = pointer_var + 1;\nLAB_08005498:\n              input_base = *pointer_var;\n            }\n            if (byte_value == 0x6f) {\n              base = 8;\n            }\n            else {\n              base = 10;\n            }\n            hex_chars = \"0123456789ABCDEF\";\n            goto LAB_080054b4;\n          }\n          if (byte_value == 0x70) {\n            *number_ptr = *number_ptr | 0x20;\nLAB_0800544a:\n            hex_chars = \"0123456789abcdef\";\n            *(undefined *)((int)number_ptr + 0x45) = 0x78;\n            goto LAB_0800551e;\n          }\n        }\n        else {\n          if (byte_value == 0x75) goto LAB_0800548a;\n          if (byte_value == 0x78) goto LAB_0800544a;\n        }\nLAB_08005404:\n        *(byte *)((int)number_ptr + 0x42) = byte_value;\n        goto LAB_08005464;\n      }\n      ppcVar8 = (char **)*result_ptr;\n      *result_ptr = (uint *)(ppcVar8 + 1);\n      temp_string = *ppcVar8;\n      loop_variable = FUN_08005614(temp_string,0,number_ptr[1]);\n      if (loop_variable != 0) {\n        number_ptr[1] = loop_variable - (int)temp_string;\n      }\n      input_base = number_ptr[1];\n    }\n    number_ptr[4] = input_base;\n    *(undefined *)((int)number_ptr + 0x43) = 0;\n    goto LAB_080054fa;\n  }\n  input_base = *number_ptr;\n  ppuVar7 = (uint **)*result_ptr;\n  base = number_ptr[5];\n  if ((input_base & 0x80) == 0) {\n    *result_ptr = (uint *)(ppuVar7 + 1);\n    pointer_var = *ppuVar7;\n    if ((input_base & 0x40) == 0) goto LAB_0800557a;\n    *(short *)pointer_var = (short)base;\n  }\n  else {\n    *result_ptr = (uint *)(ppuVar7 + 1);\n    pointer_var = *ppuVar7;\nLAB_0800557a:\n    *pointer_var = base;\n  }\nLAB_0800558e:\n  number_ptr[4] = 0;\nLAB_080054fa:\n  loop_variable = FUN_080052e4(input_value,number_ptr,local_variables,param_3,conversion_function);\n  if ((loop_variable == -1) || (loop_variable = (*conversion_function)(input_value,param_3,temp_string,number_ptr[4]), loop_variable == -1)) {\nLAB_0800550e:\n    input_base = 0xffffffff;\n  }\n  else {\n    if ((int)(*number_ptr << 0x1e) < 0) {\n      for (loop_variable = 0; loop_variable < (int)(number_ptr[3] - local_variables[0]); loop_variable = loop_variable + 1) {\n        inner_loop_variable = (*conversion_function)(input_value,param_3,(int)number_ptr + 0x19,1);\n        if (inner_loop_variable == -1) goto LAB_0800550e;\n      }\n    }\n    input_base = number_ptr[3];\n    if ((int)number_ptr[3] < (int)local_variables[0]) {\n      input_base = local_variables[0];\n    }\n  }\n  return input_base;\n}\n\n",
            "renaming": {
                "FUN_080053d4": "convert_number_080053d4",
                "param_1": "input_value",
                "param_2": "number_ptr",
                "param_4": "conversion_function",
                "param_5": "result_ptr",
                "bVar1": "byte_value",
                "iVar2": "loop_variable",
                "puVar3": "pointer_var",
                "iVar4": "inner_loop_variable",
                "pcVar5": "hex_chars",
                "uVar6": "base",
                "uVar9": "input_base",
                "uVar10": "input_length",
                "pcVar11": "formatted_number",
                "pcVar12": "temp_string",
                "local_24": "local_variables"
            },
            "calling": [
                "FUN_080050fc"
            ],
            "called": [
                "FUN_080052e4",
                "FUN_08005614"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005614": {
            "entrypoint": "0x08005614",
            "current_name": "find_character_index_08005614",
            "code": "\nchar * find_character_index_08005614(char *string,char target_character,int string_length)\n\n{\n  char *current_character;\n  char *next_character;\n  \n  current_character = string;\n  do {\n    next_character = current_character;\n    if (next_character == string + string_length) {\n      return (char *)0x0;\n    }\n    current_character = next_character + 1;\n  } while (*next_character != target_character);\n  return next_character;\n}\n\n",
            "renaming": {
                "FUN_08005614": "find_character_index_08005614",
                "param_1": "string",
                "param_2": "target_character",
                "param_3": "string_length",
                "pcVar1": "current_character",
                "pcVar2": "next_character"
            },
            "calling": [
                "FUN_080053d4",
                "FUN_080050fc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005630": {
            "entrypoint": "0x08005630",
            "current_name": "copy_data_to_buffer_08005630",
            "code": "\nvoid copyDataToBuffer_08005630(int bufferOffset,byte *source,int dataLength)\n\n{\n  byte *bufferEnd;\n  byte *buffer;\n  \n  buffer = (byte *)(bufferOffset + -1);\n  bufferEnd = source + dataLength;\n  for (; source != bufferEnd; source = source + 1) {\n    buffer = buffer + 1;\n    *buffer = *source;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005630": "copy_data_to_buffer_08005630",
                "param_1": "bufferOffset",
                "param_2": "source",
                "param_3": "dataLength",
                "puVar1": "bufferEnd",
                "puVar2": "buffer",
                "undefined": "byte"
            },
            "calling": [
                "FUN_08005044",
                "FUN_080057d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005646": {
            "entrypoint": "0x08005646",
            "current_name": "copy_memory_08005646",
            "code": "\nvoid copyMemory_08005646(undefined *dest,undefined *src,int length)\n\n{\n  undefined *srcEnd;\n  \n  srcEnd = src + length;\n  if ((src < dest) && (dest < srcEnd)) {\n    dest = dest + length;\n    length = length - (int)srcEnd;\n    while (srcEnd + length != (undefined *)0x0) {\n      srcEnd = srcEnd + -1;\n      dest = dest + -1;\n      *dest = *srcEnd;\n    }\n    return;\n  }\n  dest = dest + -1;\n  for (; src != srcEnd; src = src + 1) {\n    dest = dest + 1;\n    *dest = *src;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005646": "copy_memory_08005646",
                "param_1": "dest",
                "param_2": "src",
                "param_3": "length",
                "puVar1": "srcEnd"
            },
            "calling": [
                "FUN_08005044"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800567c": {
            "entrypoint": "0x0800567c",
            "current_name": "move_integers_0800567c",
            "code": "\nvoid moveIntegers_0800567c(undefined4 *outputArray,int arraySize,undefined4 param1,undefined4 param2)\n\n{\n  int **temp1;\n  int **temp2;\n  int **temp3;\n  int *temp4;\n  int **temp5;\n  int **temp6;\n  \n  if (arraySize == 0) {\n    return;\n  }\n  temp6 = (int **)(arraySize + -4);\n  if (*(int *)(arraySize + -4) < 0) {\n    temp6 = (int **)((int)temp6 + *(int *)(arraySize + -4));\n  }\n  FUNC_0800583c();\n  temp3 = (int **)&DAT_200002ac;\n  if (DAT_200002ac == (int **)0x0) {\n    temp6[1] = (int *)0x0;\n    temp2 = temp1;\n    DAT_200002ac = temp6;\n  }\n  else {\n    temp3 = DAT_200002ac;\n    if (temp6 < DAT_200002ac) {\n      temp2 = (int **)*temp6;\n      temp3 = (int **)((int)temp6 + (int)temp2);\n      if (DAT_200002ac == temp3) {\n        temp4 = *DAT_200002ac;\n        DAT_200002ac = (int **)DAT_200002ac[1];\n        temp3 = (int **)((int)temp4 + (int)temp2);\n        *temp6 = (int *)temp3;\n      }\n      temp6[1] = (int *)DAT_200002ac;\n      DAT_200002ac = temp6;\n    }\n    else {\n      do {\n        temp5 = temp3;\n        temp3 = (int **)temp5[1];\n        if (temp3 == (int **)0x0) break;\n      } while (temp3 <= temp6);\n      temp2 = (int **)*temp5;\n      if ((int **)((int)temp5 + (int)temp2) == temp6) {\n        temp2 = (int **)((int)temp2 + (int)*temp6);\n        *temp5 = (int *)temp2;\n        if (temp3 == (int **)((int)temp5 + (int)temp2)) {\n          temp4 = *temp3;\n          temp3 = (int **)temp3[1];\n          temp2 = (int **)((int)temp2 + (int)temp4);\n          *temp5 = (int *)temp2;\n          temp5[1] = (int *)temp3;\n        }\n      }\n      else if (temp6 < (int **)((int)temp5 + (int)temp2)) {\n        *outputArray = 0xc;\n      }\n      else {\n        temp2 = (int **)((int)temp6 + (int)*temp6);\n        if (temp3 == temp2) {\n          temp4 = *temp3;\n          temp3 = (int **)temp3[1];\n          temp2 = (int **)((int)temp4 + (int)*temp6);\n          *temp6 = (int *)temp2;\n        }\n        temp6[1] = (int *)temp3;\n        temp5[1] = (int *)temp6;\n      }\n    }\n  }\n  FUNC_0800583e(outputArray,temp2,temp3,param2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800567c": "move_integers_0800567c",
                "param_1": "outputArray",
                "param_2": "arraySize",
                "param_3": "param1",
                "param_4": "param2",
                "extraout_r1": "temp1",
                "ppiVar1": "temp2",
                "ppiVar2": "temp3",
                "piVar3": "temp4",
                "ppiVar4": "temp5",
                "ppiVar5": "temp6"
            },
            "calling": [
                "FUN_08005044",
                "FUN_080057d0"
            ],
            "called": [
                "FUN_0800583c",
                "FUN_0800583e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005714": {
            "entrypoint": "0x08005714",
            "current_name": "allocate_memory_08005714",
            "code": "\nuint allocateMemory_08005714(undefined4 *resultPtr,uint size)\n\n{\n  uint *currentBlock;\n  int difference;\n  uint *nextBlock;\n  uint blockSize;\n  uint *previousBlock;\n  uint newBlockSize;\n  \n  newBlockSize = (size + 3 & 0xfffffffc) + 8;\n  if (newBlockSize < 0xc) {\n    newBlockSize = 0xc;\n  }\n  if (((int)newBlockSize < 0) || (newBlockSize < size)) {\n    *resultPtr = 0xc;\n  }\n  else {\n    FUNC_0800583c();\n    currentBlock = DAT_200002ac;\n    previousBlock = DAT_200002ac;\n    while (nextBlock = currentBlock, nextBlock != (uint *)0x0) {\n      blockSize = *nextBlock - newBlockSize;\n      if (-1 < (int)blockSize) {\n        if (blockSize < 0xc) {\n          if (previousBlock == nextBlock) {\n            currentBlock = (uint *)previousBlock[1];\n            DAT_200002ac = currentBlock;\n          }\n          else {\n            currentBlock = (uint *)nextBlock[1];\n          }\n          if (previousBlock != nextBlock) {\n            previousBlock[1] = (uint)currentBlock;\n            previousBlock = nextBlock;\n          }\n        }\n        else {\n          *nextBlock = blockSize;\n          *(uint *)((int)nextBlock + blockSize) = newBlockSize;\n          previousBlock = (uint *)((int)nextBlock + blockSize);\n        }\n        goto LAB_08005778;\n      }\n      previousBlock = nextBlock;\n      currentBlock = (uint *)nextBlock[1];\n    }\n    if (DAT_200002b0 == 0) {\n      DAT_200002b0 = FUN_0800581c(resultPtr);\n    }\n    currentBlock = (uint *)FUN_0800581c(resultPtr,newBlockSize);\n    if ((currentBlock != (uint *)0xffffffff) &&\n       ((previousBlock = (uint *)((int)currentBlock + 3U & 0xfffffffc), currentBlock == previousBlock ||\n        (difference = FUN_0800581c(resultPtr,(int)previousBlock - (int)currentBlock), difference != -1)))) {\n      *previousBlock = newBlockSize;\nLAB_08005778:\n      FUNC_0800583e(resultPtr);\n      newBlockSize = (int)previousBlock + 0xbU & 0xfffffff8;\n      difference = newBlockSize - (int)(previousBlock + 1);\n      if (difference != 0) {\n        *(int *)((int)previousBlock + difference) = -difference;\n        return newBlockSize;\n      }\n      return newBlockSize;\n    }\n    *resultPtr = 0xc;\n    FUNC_0800583e(resultPtr);\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005714": "allocate_memory_08005714",
                "param_1": "resultPtr",
                "param_2": "size",
                "puVar1": "currentBlock",
                "iVar2": "difference",
                "puVar3": "nextBlock",
                "uVar4": "blockSize",
                "puVar5": "previousBlock",
                "uVar6": "newBlockSize"
            },
            "calling": [
                "FUN_08005044",
                "FUN_080050fc",
                "FUN_080057d0"
            ],
            "called": [
                "FUN_0800583c",
                "FUN_0800581c",
                "FUN_0800583e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080057d0": {
            "entrypoint": "0x080057d0",
            "current_name": "process_data_080057d0",
            "code": "\nint processData_080057d0(undefined4 input1,int input2,uint input3,undefined4 input4)\n\n{\n  int result;\n  uint count;\n  \n  if (input2 != 0) {\n    if (input3 == 0) {\n      FUN_0800567c();\n      result = 0;\n    }\n    else {\n      count = FUN_08005840();\n      result = input2;\n      if ((count < input3) && (result = FUN_08005714(input1,input3), result != 0)) {\n        FUN_08005630(result,input2,input3);\n        FUN_0800567c(input1,input2);\n      }\n    }\n    return result;\n  }\n  result = FUN_08005714(input1,input3,input3,input4);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080057d0": "process_data_080057d0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "result",
                "uVar2": "count"
            },
            "calling": [
                "FUN_08005044"
            ],
            "called": [
                "FUN_0800567c",
                "FUN_08005714",
                "FUN_08005840",
                "FUN_08005630"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800581c": {
            "entrypoint": "0x0800581c",
            "current_name": "check_error_and_assign_0800581c",
            "code": "\nvoid checkErrorAndAssign_0800581c(int *output,undefined4 input)\n\n{\n  int result;\n  \n  DAT_2000169c = 0;\n  result = FUN_080072b8(input);\n  if ((result == -1) && (DAT_2000169c != 0)) {\n    *output = DAT_2000169c;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800581c": "check_error_and_assign_0800581c",
                "param_1": "output",
                "param_2": "input",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08005714"
            ],
            "called": [
                "FUN_080072b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800583c": {
            "entrypoint": "0x0800583c",
            "current_name": "FUNC_0800583c",
            "code": "\nvoid FUNC_0800583c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800583c": "FUNC_0800583c"
            },
            "calling": [
                "FUN_0800567c",
                "FUN_08005714"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800583e": {
            "entrypoint": "0x0800583e",
            "current_name": "FUNC_0800583e",
            "code": "\nvoid FUNC_0800583e(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800583e": "FUNC_0800583e"
            },
            "calling": [
                "FUN_0800567c",
                "FUN_08005714"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005840": {
            "entrypoint": "0x08005840",
            "current_name": "calculate_value_08005840",
            "code": "\nint calculateValue_08005840(undefined4 param1,int param2)\n\n{\n  int offset;\n  \n  offset = *(int *)(param2 + -4) + -4;\n  if (*(int *)(param2 + -4) < 0) {\n    offset = offset + *(int *)(param2 + offset);\n  }\n  return offset;\n}\n\n",
            "renaming": {
                "FUN_08005840": "calculate_value_08005840",
                "param_1": "param1",
                "param_2": "param2",
                "iVar1": "offset"
            },
            "calling": [
                "FUN_080057d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005854": {
            "entrypoint": "0x08005854",
            "current_name": "initialize_application_08005854",
            "code": "\nundefined8 initializeApplication_08005854(undefined4 arg1,undefined4 arg2)\n\n{\n  int result;\n  undefined4 *pointerVar;\n  int *intPointerVar;\n  undefined8 returnValue1;\n  undefined8 returnValue2;\n  undefined4 flag;\n  undefined *dataPointer;\n  undefined4 arg1Copy;\n  undefined4 arg2Copy;\n  undefined4 arg1Copy2;\n  undefined4 arg2Copy2;\n  undefined8 returnValue3;\n  int errorCode;\n  \n  returnValue1 = FUN_08005c70();\n  if (DAT_20000224 == -1) {\n    return returnValue1;\n  }\n  errorCode = FUN_08000a04(arg1,arg2,arg1,arg2);\n  if (errorCode != 0) {\n    return returnValue1;\n  }\n  returnValue2 = FUNC_0800708c(arg1,arg2);\n  result = FUN_080009f0((int)returnValue2,(int)((ulonglong)returnValue2 >> 0x20),0,0x3ff00000);\n  if (result == 0) {\n    return returnValue1;\n  }\n  flag = 1;\n  dataPointer = &DAT_080073ac;\n  arg1Copy = arg1;\n  arg2Copy = arg2;\n  arg1Copy2 = arg1;\n  arg2Copy2 = arg2;\n  returnValue3 = FUN_080070a4(&DAT_0800737e);\n  if (DAT_20000224 != '\\x02') {\n    result = FUN_0800709e(&flag);\n    if (result != 0) goto LAB_080058d0;\n  }\n  pointerVar = (undefined4 *)FUN_080072ac();\n  *pointerVar = 0x21;\nLAB_080058d0:\n  if (errorCode != 0) {\n    intPointerVar = (int *)FUN_080072ac();\n    *intPointerVar = errorCode;\n  }\n  return returnValue3;\n}\n\n",
            "renaming": {
                "FUN_08005854": "initialize_application_08005854",
                "param_1": "arg1",
                "param_2": "arg2",
                "iVar1": "result",
                "puVar2": "pointerVar",
                "piVar3": "intPointerVar",
                "uVar4": "returnValue1",
                "uVar5": "returnValue2",
                "local_48": "flag",
                "local_44": "dataPointer",
                "local_40": "arg1Copy",
                "uStack_3c": "arg2Copy",
                "local_38": "arg1Copy2",
                "uStack_34": "arg2Copy2",
                "local_30": "returnValue3",
                "local_28": "errorCode"
            },
            "calling": [
                "FUN_08003330"
            ],
            "called": [
                "FUN_0800708c",
                "FUN_080072ac",
                "FUN_080070a4",
                "FUN_08005c70",
                "FUN_080009f0",
                "FUN_0800709e",
                "FUN_08000a04"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_08006070": {
            "entrypoint": "0x080058fc",
            "current_name": "calculate_value_thunk_08006070",
            "code": "\nundefined8 calculateValue_thunk_08006070(uint inputA,uint inputB,uint inputC,uint inputD)\n\n{\n  undefined4 result1;\n  uint flag1;\n  uint result2;\n  int tempVar;\n  uint unsignedInputD;\n  undefined8 returnValue;\n  undefined8 tempValue;\n  \n  unsignedInputD = inputD & 0x7fffffff;\n  if ((0x7ff00000 < (unsignedInputD | (-inputC | inputC) >> 0x1f)) ||\n     (result2 = inputB & 0x7fffffff, 0x7ff00000 < (result2 | (-inputA | inputA) >> 0x1f))) {\n    returnValue = FUN_0800016c(inputA,inputB,inputC,inputD,inputD);\n    return returnValue;\n  }\n  if ((inputD + 0xc0100000 | inputC) == 0) {\n    returnValue = FUN_08006d68();\n    return returnValue;\n  }\n  flag1 = (int)inputD >> 0x1e & 2U | inputB >> 0x1f;\n  if ((inputA | result2) == 0) {\n    if (flag1 == 2) {\n      return 0x400921fb54442d18;\n    }\n    if (flag1 != 3) {\n      return CONCAT44(inputB,inputA);\n    }\nLAB_0800613e:\n    returnValue = 0xc00921fb54442d18;\n  }\n  else {\n    if ((inputC | unsignedInputD) != 0) {\n      if (unsignedInputD == 0x7ff00000) {\n        if (result2 == 0x7ff00000) {\n          if (flag1 == 2) {\n            return 0x4002d97c7f3321d2;\n          }\n          if (flag1 == 3) {\n            return 0xc002d97c7f3321d2;\n          }\n          if (flag1 != 1) {\n            return 0x3fe921fb54442d18;\n          }\n          return 0xbfe921fb54442d18;\n        }\n        if (flag1 == 2) {\n          return 0x400921fb54442d18;\n        }\n        if (flag1 != 3) {\n          if (flag1 != 1) {\n            return 0;\n          }\n          return 0x8000000000000000;\n        }\n        goto LAB_0800613e;\n      }\n      if (result2 != 0x7ff00000) {\n        tempVar = (int)(result2 - unsignedInputD) >> 0x14;\n        if (tempVar < 0x3d) {\n          if (((int)inputD < 0) && (tempVar + 0x3c < 0 != SCARRY4(tempVar,0x3c))) {\n            returnValue = 0;\n          }\n          else {\n            FUN_08000724(inputA,inputB);\n            FUNC_0800708c();\n            returnValue = FUN_08006d68();\n          }\n        }\n        else {\n          returnValue = 0x3ff921fb54442d18;\n        }\n        tempVar = (int)((ulonglong)returnValue >> 0x20);\n        result1 = (undefined4)returnValue;\n        if (flag1 == 1) {\n          return CONCAT44(tempVar + -0x80000000,result1);\n        }\n        if (flag1 == 2) {\n          tempValue = FUN_08000168(result1,tempVar,0x33145c07,0x3ca1a626);\n          returnValue = 0x400921fb54442d18;\n        }\n        else {\n          if (flag1 == 0) {\n            return returnValue;\n          }\n          returnValue = FUN_08000168(result1,tempVar,0x33145c07,0x3ca1a626);\n          tempValue = 0x400921fb54442d18;\n        }\n        returnValue = FUN_08000168((int)returnValue,(int)((ulonglong)returnValue >> 0x20),(int)tempValue,\n                             (int)((ulonglong)tempValue >> 0x20));\n        return returnValue;\n      }\n    }\n    if ((int)inputB < 0) {\n      returnValue = 0xbff921fb54442d18;\n    }\n    else {\n      returnValue = 0x3ff921fb54442d18;\n    }\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "thunk_FUN_08006070": "calculate_value_thunk_08006070",
                "param_1": "inputA",
                "param_2": "inputB",
                "param_3": "inputC",
                "param_4": "inputD",
                "uVar1": "result1",
                "uVar2": "flag1",
                "uVar3": "result2",
                "iVar4": "tempVar",
                "uVar5": "unsignedInputD",
                "uVar6": "returnValue",
                "uVar7": "tempValue"
            },
            "calling": [
                "FUN_08003330"
            ],
            "called": [
                "FUN_08006070"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005900": {
            "entrypoint": "0x08005900",
            "current_name": "FUNC_08005900",
            "code": "\nundefined8 FUNC_08005900(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  char cVar1;\n  int iVar2;\n  int *piVar3;\n  undefined4 *puVar4;\n  int iVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  undefined8 uVar8;\n  undefined8 uVar9;\n  undefined4 local_50;\n  undefined *local_4c;\n  undefined4 local_48;\n  undefined4 uStack_44;\n  undefined4 local_40;\n  undefined4 uStack_3c;\n  undefined8 local_38;\n  int local_30;\n  \n  uVar8 = FUN_08006228();\n  cVar1 = DAT_20000224;\n  uVar6 = (undefined4)((ulonglong)uVar8 >> 0x20);\n  uVar7 = (undefined4)uVar8;\n  if (DAT_20000224 == -1) {\n    return uVar8;\n  }\n  iVar2 = FUN_08000a04(param_3,param_4,param_3,param_4);\n  if (iVar2 != 0) {\n    return uVar8;\n  }\n  iVar2 = FUN_08000a04(param_1,param_2,param_1,param_2);\n  local_48 = param_1;\n  uStack_44 = param_2;\n  local_40 = param_3;\n  uStack_3c = param_4;\n  if (iVar2 == 0) {\n    iVar2 = FUN_080009a0(param_1,param_2,0,0);\n    if (iVar2 != 0) {\n      iVar2 = FUN_080009a0(param_3,param_4,0,0);\n      if (iVar2 != 0) {\n        local_50 = 1;\n        local_4c = &DAT_080073b1;\n        local_38 = 0;\n        local_30 = 0;\n        if (cVar1 != '\\0') {\n          local_38 = 0x3ff0000000000000;\n          goto LAB_080059d0;\n        }\n        goto LAB_08005978;\n      }\n      iVar2 = FUN_08007092(param_3,param_4);\n      if (iVar2 == 0) {\n        return uVar8;\n      }\n      iVar2 = FUN_080009b4(param_3,param_4,0,0);\n      if (iVar2 == 0) {\n        return uVar8;\n      }\n      local_50 = 1;\n      local_4c = &DAT_080073b1;\n      local_30 = 0;\n      if (DAT_20000224 == '\\0') goto LAB_08005a22;\n      local_38 = 0xfff0000000000000;\n      local_30 = 0;\n      cVar1 = DAT_20000224;\nLAB_08005a32:\n      if (cVar1 != '\\x02') goto LAB_08005978;\n      goto LAB_08005a34;\n    }\n    iVar2 = FUN_08007092(uVar7,uVar6);\n    if (((iVar2 != 0) || (iVar5 = FUN_08007092(param_1,param_2), iVar5 == 0)) ||\n       (iVar5 = FUN_08007092(param_3,param_4), iVar5 == 0)) {\n      iVar2 = FUN_080009a0(uVar7,uVar6,0,0);\n      if (iVar2 == 0) {\n        return uVar8;\n      }\n      iVar2 = FUN_08007092(param_1,param_2);\n      if (iVar2 == 0) {\n        return uVar8;\n      }\n      iVar2 = FUN_08007092(param_3,param_4);\n      if (iVar2 == 0) {\n        return uVar8;\n      }\n      local_50 = 4;\n      local_4c = &DAT_080073b1;\n      local_30 = 0;\n      local_38._0_4_ = 0;\n      local_38._4_4_ = 0;\n      goto LAB_08005afa;\n    }\n    local_30 = FUN_08000a04(uVar7,uVar6);\n    cVar1 = DAT_20000224;\n    if (local_30 != 0) {\n      local_4c = &DAT_080073b1;\n      local_50 = 1;\n      local_30 = iVar2;\n      if (DAT_20000224 != '\\0') {\n        local_38 = FUN_08000724(0,0,0,0);\n        goto LAB_08005a32;\n      }\nLAB_08005a22:\n      local_4c = &DAT_080073b1;\n      local_50 = 1;\n      local_38 = 0;\n      goto LAB_08005978;\n    }\n    local_4c = &DAT_080073b1;\n    local_50 = 3;\n    if (DAT_20000224 == '\\0') {\n      local_38._0_4_ = 0xe0000000;\n      local_38._4_4_ = 0x47efffff;\n      iVar2 = FUN_080009b4(param_1,param_2,0,0);\n      if (iVar2 != 0) {\n        uVar8 = FUN_080004d0(param_3,param_4,0,0x3fe00000);\n        uVar9 = FUN_080070b0();\n        iVar2 = FUN_080009a0((int)uVar8,(int)((ulonglong)uVar8 >> 0x20),(int)uVar9,\n                             (int)((ulonglong)uVar9 >> 0x20));\n        if (iVar2 == 0) {\n          local_38._0_4_ = 0xe0000000;\n          local_38._4_4_ = 0xc7efffff;\n        }\n        goto LAB_08005afa;\n      }\nLAB_08005b98:\n      iVar2 = FUN_0800709e(&local_50);\n      if (iVar2 != 0) goto LAB_080059d0;\n    }\n    else {\n      local_38._0_4_ = 0;\n      local_38._4_4_ = 0x7ff00000;\n      iVar2 = FUN_080009b4(param_1,param_2,0,0);\n      if (iVar2 != 0) {\n        uVar8 = FUN_080004d0(param_3,param_4,0,0x3fe00000);\n        uVar9 = FUN_080070b0();\n        iVar2 = FUN_080009a0((int)uVar8,(int)((ulonglong)uVar8 >> 0x20),(int)uVar9,\n                             (int)((ulonglong)uVar9 >> 0x20));\n        if (iVar2 == 0) {\n          local_38._0_4_ = 0;\n          local_38._4_4_ = 0xfff00000;\n        }\n      }\nLAB_08005afa:\n      if (DAT_20000224 != '\\x02') goto LAB_08005b98;\n    }\n    puVar4 = (undefined4 *)FUN_080072ac();\n    uVar7 = 0x22;\n  }\n  else {\n    iVar2 = FUN_080009a0(param_3,param_4,0,0);\n    if (iVar2 == 0) {\n      return uVar8;\n    }\n    local_50 = 1;\n    local_4c = &DAT_080073b1;\n    local_38 = 0x3ff0000000000000;\n    local_30 = 0;\n    if (cVar1 == '\\x02') {\n      return 0x3ff0000000000000;\n    }\nLAB_08005978:\n    iVar2 = FUN_0800709e(&local_50);\n    if (iVar2 != 0) goto LAB_080059d0;\nLAB_08005a34:\n    puVar4 = (undefined4 *)FUN_080072ac();\n    uVar7 = 0x21;\n  }\n  *puVar4 = uVar7;\nLAB_080059d0:\n  if (local_30 != 0) {\n    piVar3 = (int *)FUN_080072ac();\n    *piVar3 = local_30;\n  }\n  return local_38;\n}\n\n",
            "renaming": {
                "FUN_08005900": "FUNC_08005900"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_080004d0",
                "FUN_08007092",
                "FUN_080072ac",
                "FUN_080070b0",
                "FUN_08006228",
                "FUN_080009a0",
                "FUN_08000724",
                "FUN_080009b4",
                "FUN_0800709e",
                "FUN_08000a04"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005bc8": {
            "entrypoint": "0x08005bc8",
            "current_name": "decode_and_process_data_08005bc8",
            "code": "\nundefined8 decode_and_process_data_08005bc8(undefined4 input_param_1,undefined4 input_param_2)\n\n{\n  char data_indicator;\n  int iVar2;\n  int *piVar3;\n  undefined4 *puVar4;\n  undefined8 result;\n  undefined4 flag;\n  undefined *data_ptr;\n  undefined4 param1_copy;\n  undefined4 param2_copy;\n  undefined4 param1_copy_2;\n  undefined4 param2_copy_2;\n  undefined8 decoded_result;\n  int error_code;\n  \n  result = FUN_08006c0c();\n  data_indicator = DAT_20000224;\n  if (DAT_20000224 == -1) {\n    return result;\n  }\n  error_code = FUN_08000a04(input_param_1,input_param_2,input_param_1,input_param_2);\n  if (error_code != 0) {\n    return result;\n  }\n  iVar2 = FUN_080009b4(input_param_1,input_param_2,0,0);\n  if (iVar2 == 0) {\n    return result;\n  }\n  flag = 1;\n  data_ptr = &DAT_080073b5;\n  param1_copy = input_param_1;\n  param2_copy = input_param_2;\n  param1_copy_2 = input_param_1;\n  param2_copy_2 = input_param_2;\n  if (data_indicator == '\\0') {\n    decoded_result = 0;\nLAB_08005c26:\n    iVar2 = FUN_0800709e(&flag);\n    if (iVar2 != 0) goto LAB_08005c2e;\n  }\n  else {\n    decoded_result = FUN_08000724(0,0,0,0);\n    if (data_indicator != '\\x02') goto LAB_08005c26;\n  }\n  puVar4 = (undefined4 *)FUN_080072ac();\n  *puVar4 = 0x21;\nLAB_08005c2e:\n  if (error_code != 0) {\n    piVar3 = (int *)FUN_080072ac();\n    *piVar3 = error_code;\n  }\n  return decoded_result;\n}\n\n",
            "renaming": {
                "FUN_08005bc8": "decode_and_process_data_08005bc8",
                "param_1": "input_param_1",
                "param_2": "input_param_2",
                "uVar5": "result",
                "local_50": "flag",
                "local_4c": "data_ptr",
                "local_48": "param1_copy",
                "uStack_44": "param2_copy",
                "local_40": "param1_copy_2",
                "uStack_3c": "param2_copy_2",
                "local_38": "decoded_result",
                "local_30": "error_code",
                "cVar1": "data_indicator"
            },
            "calling": [
                "FUN_08003330"
            ],
            "called": [
                "FUN_080072ac",
                "FUN_08006c0c",
                "FUN_08000724",
                "FUN_080009b4",
                "FUN_0800709e",
                "FUN_08000a04"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c70": {
            "entrypoint": "0x08005c70",
            "current_name": "calculate_expression_08005c70",
            "code": "\nundefined8 calculateExpression_08005c70(uint input1,uint input2)\n\n{\n  int result1;\n  undefined4 calcVar1;\n  undefined4 calcVar2;\n  undefined4 calcVar3;\n  undefined4 calcVar4;\n  undefined4 calcVar5;\n  undefined4 calcVar6;\n  uint mask;\n  undefined8 temp1;\n  undefined8 temp2;\n  undefined8 temp3;\n  \n  temp1 = CONCAT44(input2,input1);\n  mask = input2 & 0x7fffffff;\n  if (mask < 0x3ff00000) {\n    if (mask < 0x3fe00000) {\n      if (0x3e3fffff < mask) {\n        temp2 = FUN_080004d0(input1,input2,input1,input2);\n        calcVar6 = (undefined4)((ulonglong)temp2 >> 0x20);\n        calcVar5 = (undefined4)temp2;\n        temp2 = FUN_080004d0(calcVar5,calcVar6,0xdfdf709,0x3f023de1);\n        temp2 = FUN_0800016c((int)temp2,(int)((ulonglong)temp2 >> 0x20),0x7501b288,0x3f49efe0);\n        temp2 = FUN_080004d0((int)temp2,(int)((ulonglong)temp2 >> 0x20),calcVar5,calcVar6);\n        temp2 = FUN_08000168((int)temp2,(int)((ulonglong)temp2 >> 0x20),0xb5688f3b,0x3fa48228);\n        temp2 = FUN_080004d0((int)temp2,(int)((ulonglong)temp2 >> 0x20),calcVar5,calcVar6);\n        temp2 = FUN_0800016c((int)temp2,(int)((ulonglong)temp2 >> 0x20),0xe884455,0x3fc9c155);\n        temp2 = FUN_080004d0((int)temp2,(int)((ulonglong)temp2 >> 0x20),calcVar5,calcVar6);\n        temp2 = FUN_08000168((int)temp2,(int)((ulonglong)temp2 >> 0x20),0x3eb6f7d,0x3fd4d612);\n        temp2 = FUN_080004d0((int)temp2,(int)((ulonglong)temp2 >> 0x20),calcVar5,calcVar6);\n        temp2 = FUN_0800016c((int)temp2,(int)((ulonglong)temp2 >> 0x20),0x55555555,0x3fc55555);\n        temp2 = FUN_080004d0((int)temp2,(int)((ulonglong)temp2 >> 0x20),calcVar5,calcVar6);\n        temp3 = FUN_080004d0(calcVar5,calcVar6,0xb12e9282,0x3fb3b8c5);\n        temp3 = FUN_08000168((int)temp3,(int)((ulonglong)temp3 >> 0x20),0x1b8d0159,0x3fe6066c);\n        temp3 = FUN_080004d0((int)temp3,(int)((ulonglong)temp3 >> 0x20),calcVar5,calcVar6);\n        temp3 = FUN_0800016c((int)temp3,(int)((ulonglong)temp3 >> 0x20),0x9c598ac8,0x40002ae5);\n        temp3 = FUN_080004d0((int)temp3,(int)((ulonglong)temp3 >> 0x20),calcVar5,calcVar6);\n        temp3 = FUN_08000168((int)temp3,(int)((ulonglong)temp3 >> 0x20),0x1c8a2d4b,0x40033a27);\n        temp3 = FUN_080004d0((int)temp3,(int)((ulonglong)temp3 >> 0x20),calcVar5,calcVar6);\n        temp3 = FUN_0800016c((int)temp3,(int)((ulonglong)temp3 >> 0x20),0,0x3ff00000);\n        temp2 = FUN_08000724((int)temp2,(int)((ulonglong)temp2 >> 0x20),(int)temp3,\n                              (int)((ulonglong)temp3 >> 0x20));\n        temp2 = FUN_080004d0((int)temp2,(int)((ulonglong)temp2 >> 0x20),input1,input2);\n        goto LAB_08005cba;\n      }\n      temp2 = FUN_0800016c(input1,input2,0x8800759c,0x7e37e43c);\n      result1 = FUN_080009f0((int)temp2,(int)((ulonglong)temp2 >> 0x20),0,0x3ff00000);\n      if (result1 != 0) {\n        return temp1;\n      }\n    }\n    temp1 = FUNC_0800708c(input1,input2);\n    temp1 = FUN_08000168(0,0x3ff00000,(int)temp1,(int)((ulonglong)temp1 >> 0x20));\n    temp1 = FUN_080004d0((int)temp1,(int)((ulonglong)temp1 >> 0x20),0,0x3fe00000);\n    calcVar1 = (undefined4)((ulonglong)temp1 >> 0x20);\n    calcVar5 = (undefined4)temp1;\n    temp1 = FUN_080004d0(calcVar5,calcVar1,0xdfdf709,0x3f023de1);\n    temp1 = FUN_0800016c((int)temp1,(int)((ulonglong)temp1 >> 0x20),0x7501b288,0x3f49efe0);\n    temp1 = FUN_080004d0((int)temp1,(int)((ulonglong)temp1 >> 0x20),calcVar5,calcVar1);\n    temp1 = FUN_08000168((int)temp1,(int)((ulonglong)temp1 >> 0x20),0xb5688f3b,0x3fa48228);\n    temp1 = FUN_080004d0((int)temp1,(int)((ulonglong)temp1 >> 0x20),calcVar5,calcVar1);\n    temp1 = FUN_0800016c((int)temp1,(int)((ulonglong)temp1 >> 0x20),0xe884455,0x3fc9c155);\n    temp1 = FUN_080004d0((int)temp1,(int)((ulonglong)temp1 >> 0x20),calcVar5,calcVar1);\n    temp1 = FUN_08000168((int)temp1,(int)((ulonglong)temp1 >> 0x20),0x3eb6f7d,0x3fd4d612);\n    temp1 = FUN_080004d0((int)temp1,(int)((ulonglong)temp1 >> 0x20),calcVar5,calcVar1);\n    temp1 = FUN_0800016c((int)temp1,(int)((ulonglong)temp1 >> 0x20),0x55555555,0x3fc55555);\n    temp1 = FUN_080004d0((int)temp1,(int)((ulonglong)temp1 >> 0x20),calcVar5,calcVar1);\n    calcVar2 = (undefined4)((ulonglong)temp1 >> 0x20);\n    temp2 = FUN_080004d0(calcVar5,calcVar1,0xb12e9282,0x3fb3b8c5);\n    temp2 = FUN_08000168((int)temp2,(int)((ulonglong)temp2 >> 0x20),0x1b8d0159,0x3fe6066c);\n    temp2 = FUN_080004d0((int)temp2,(int)((ulonglong)temp2 >> 0x20),calcVar5,calcVar1);\n    temp2 = FUN_0800016c((int)temp2,(int)((ulonglong)temp2 >> 0x20),0x9c598ac8,0x40002ae5);\n    temp2 = FUN_080004d0((int)temp2,(int)((ulonglong)temp2 >> 0x20),calcVar5,calcVar1);\n    temp2 = FUN_08000168((int)temp2,(int)((ulonglong)temp2 >> 0x20),0x1c8a2d4b,0x40033a27);\n    temp2 = FUN_080004d0((int)temp2,(int)((ulonglong)temp2 >> 0x20),calcVar5,calcVar1);\n    temp2 = FUN_0800016c((int)temp2,(int)((ulonglong)temp2 >> 0x20),0,0x3ff00000);\n    calcVar3 = (undefined4)((ulonglong)temp2 >> 0x20);\n    temp3 = FUN_08006c0c(calcVar5,calcVar1);\n    calcVar4 = (undefined4)((ulonglong)temp3 >> 0x20);\n    calcVar6 = (undefined4)temp3;\n    if (mask < 0x3fef3333) {\n      temp1 = FUN_08000724((int)temp1,calcVar2,(int)temp2,calcVar3);\n      temp2 = FUN_0800016c(calcVar6,calcVar4,calcVar6,calcVar4);\n      temp1 = FUN_080004d0((int)temp1,(int)((ulonglong)temp1 >> 0x20),(int)temp2,\n                           (int)((ulonglong)temp2 >> 0x20));\n      temp2 = FUN_080004d0(0,calcVar4,0,calcVar4);\n      temp2 = FUN_08000168(calcVar5,calcVar1,(int)temp2,(int)((ulonglong)temp2 >> 0x20));\n      temp3 = FUN_0800016c(calcVar6,calcVar4,0,calcVar4);\n      temp2 = FUN_08000724((int)temp2,(int)((ulonglong)temp2 >> 0x20),(int)temp3,\n                            (int)((ulonglong)temp3 >> 0x20));\n      calcVar5 = (undefined4)((ulonglong)temp2 >> 0x20);\n      temp2 = FUN_0800016c((int)temp2,calcVar5,(int)temp2,calcVar5);\n      temp2 = FUN_08000168(0x33145c07,0x3c91a626,(int)temp2,(int)((ulonglong)temp2 >> 0x20));\n      temp1 = FUN_08000168((int)temp1,(int)((ulonglong)temp1 >> 0x20),(int)temp2,\n                           (int)((ulonglong)temp2 >> 0x20));\n      temp2 = FUN_0800016c(0,calcVar4,0,calcVar4);\n      temp2 = FUN_08000168(0x54442d18,0x3fe921fb,(int)temp2,(int)((ulonglong)temp2 >> 0x20));\n      temp1 = FUN_08000168((int)temp1,(int)((ulonglong)temp1 >> 0x20),(int)temp2,\n                           (int)((ulonglong)temp2 >> 0x20));\n      calcVar5 = 0x3fe921fb;\n    }\n    else {\n      temp1 = FUN_08000724((int)temp1,calcVar2,(int)temp2,calcVar3);\n      temp1 = FUN_080004d0((int)temp1,(int)((ulonglong)temp1 >> 0x20),calcVar6,calcVar4);\n      temp1 = FUN_0800016c((int)temp1,(int)((ulonglong)temp1 >> 0x20),calcVar6,calcVar4);\n      calcVar5 = (undefined4)((ulonglong)temp1 >> 0x20);\n      temp1 = FUN_0800016c((int)temp1,calcVar5,(int)temp1,calcVar5);\n      temp1 = FUN_08000168((int)temp1,(int)((ulonglong)temp1 >> 0x20),0x33145c07,0x3c91a626);\n      calcVar5 = 0x3ff921fb;\n    }\n    temp1 = FUN_08000168(0x54442d18,calcVar5,(int)temp1,(int)((ulonglong)temp1 >> 0x20));\n    if ((int)input2 < 1) {\n      temp1 = CONCAT44((int)((ulonglong)temp1 >> 0x20) + -0x80000000,(int)temp1);\n    }\n  }\n  else {\n    if ((mask + 0xc0100000 | input1) != 0) {\n      temp1 = FUN_08000168(input1,input2,input1,input2);\n      calcVar5 = (undefined4)((ulonglong)temp1 >> 0x20);\n      temp1 = FUN_08000724((int)temp1,calcVar5,(int)temp1,calcVar5);\n      return temp1;\n    }\n    temp1 = FUN_080004d0(input1,input2,0x54442d18,0x3ff921fb);\n    temp2 = FUN_080004d0(input1,input2,0x33145c07,0x3c91a626);\nLAB_08005cba:\n    temp1 = FUN_0800016c((int)temp1,(int)((ulonglong)temp1 >> 0x20),(int)temp2,\n                         (int)((ulonglong)temp2 >> 0x20));\n  }\n  return temp1;\n}\n\n",
            "renaming": {
                "FUN_08005c70": "calculate_expression_08005c70",
                "param_1": "input1",
                "param_2": "input2",
                "iVar1": "result1",
                "uVar2": "calcVar1",
                "uVar3": "calcVar2",
                "uVar4": "calcVar3",
                "uVar5": "calcVar4",
                "uVar6": "calcVar5",
                "uVar7": "calcVar6",
                "uVar8": "mask",
                "uVar9": "temp1",
                "uVar10": "temp2",
                "uVar11": "temp3"
            },
            "calling": [
                "FUN_08005854"
            ],
            "called": [
                "FUN_080004d0",
                "FUN_0800708c",
                "FUN_08006c0c",
                "FUN_08000168",
                "FUN_080009f0",
                "FUN_08000724",
                "FUN_0800016c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006070": {
            "entrypoint": "0x08006070",
            "current_name": "calculate_result_08006070",
            "code": "\nundefined8 calculateResult_08006070(uint x,uint y,uint z,uint w)\n\n{\n  undefined4 result1;\n  uint result2;\n  uint result3;\n  int result4;\n  uint result5;\n  undefined8 finalResult1;\n  undefined8 finalResult2;\n  \n  result5 = w & 0x7fffffff;\n  if ((0x7ff00000 < (result5 | (-z | z) >> 0x1f)) ||\n     (result3 = y & 0x7fffffff, 0x7ff00000 < (result3 | (-x | x) >> 0x1f))) {\n    finalResult1 = FUN_0800016c(x,y,z,w,w);\n    return finalResult1;\n  }\n  if ((w + 0xc0100000 | z) == 0) {\n    finalResult1 = FUN_08006d68();\n    return finalResult1;\n  }\n  result2 = (int)w >> 0x1e & 2U | y >> 0x1f;\n  if ((x | result3) == 0) {\n    if (result2 == 2) {\n      return 0x400921fb54442d18;\n    }\n    if (result2 != 3) {\n      return CONCAT44(y,x);\n    }\nLAB_0800613e:\n    finalResult1 = 0xc00921fb54442d18;\n  }\n  else {\n    if ((z | result5) != 0) {\n      if (result5 == 0x7ff00000) {\n        if (result3 == 0x7ff00000) {\n          if (result2 == 2) {\n            return 0x4002d97c7f3321d2;\n          }\n          if (result2 == 3) {\n            return 0xc002d97c7f3321d2;\n          }\n          if (result2 != 1) {\n            return 0x3fe921fb54442d18;\n          }\n          return 0xbfe921fb54442d18;\n        }\n        if (result2 == 2) {\n          return 0x400921fb54442d18;\n        }\n        if (result2 != 3) {\n          if (result2 != 1) {\n            return 0;\n          }\n          return 0x8000000000000000;\n        }\n        goto LAB_0800613e;\n      }\n      if (result3 != 0x7ff00000) {\n        result4 = (int)(result3 - result5) >> 0x14;\n        if (result4 < 0x3d) {\n          if (((int)w < 0) && (result4 + 0x3c < 0 != SCARRY4(result4,0x3c))) {\n            finalResult1 = 0;\n          }\n          else {\n            FUN_08000724(x,y);\n            FUNC_0800708c();\n            finalResult1 = FUN_08006d68();\n          }\n        }\n        else {\n          finalResult1 = 0x3ff921fb54442d18;\n        }\n        result4 = (int)((ulonglong)finalResult1 >> 0x20);\n        result1 = (undefined4)finalResult1;\n        if (result2 == 1) {\n          return CONCAT44(result4 + -0x80000000,result1);\n        }\n        if (result2 == 2) {\n          finalResult2 = FUN_08000168(result1,result4,0x33145c07,0x3ca1a626);\n          finalResult1 = 0x400921fb54442d18;\n        }\n        else {\n          if (result2 == 0) {\n            return finalResult1;\n          }\n          finalResult1 = FUN_08000168(result1,result4,0x33145c07,0x3ca1a626);\n          finalResult2 = 0x400921fb54442d18;\n        }\n        finalResult1 = FUN_08000168((int)finalResult1,(int)((ulonglong)finalResult1 >> 0x20),(int)finalResult2,\n                             (int)((ulonglong)finalResult2 >> 0x20));\n        return finalResult1;\n      }\n    }\n    if ((int)y < 0) {\n      finalResult1 = 0xbff921fb54442d18;\n    }\n    else {\n      finalResult1 = 0x3ff921fb54442d18;\n    }\n  }\n  return finalResult1;\n}\n\n",
            "renaming": {
                "FUN_08006070": "calculate_result_08006070",
                "param_1": "x",
                "param_2": "y",
                "param_3": "z",
                "param_4": "w",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "result3",
                "iVar4": "result4",
                "uVar5": "result5",
                "uVar6": "finalResult1",
                "uVar7": "finalResult2"
            },
            "calling": [
                "thunk_FUN_08006070"
            ],
            "called": [
                "FUN_0800708c",
                "FUN_08006d68",
                "FUN_08000168",
                "FUN_08000724",
                "FUN_0800016c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006228": {
            "entrypoint": "0x08006228",
            "current_name": "calculate_float_08006228",
            "code": "\nuint calculate_float_08006228(uint number1,uint number2,uint number3,uint number4)\n\n{\n  undefined4 result1;\n  uint result2;\n  uint extra_result1;\n  undefined4 result3;\n  undefined4 result4;\n  undefined4 extra_result2;\n  undefined4 extra_result3;\n  uint extra_result4;\n  undefined4 extra_result5;\n  int integer1;\n  int integer2;\n  undefined4 result5;\n  uint unsigned1;\n  undefined4 result6;\n  int integer3;\n  uint unsigned2;\n  undefined4 result7;\n  undefined4 result8;\n  undefined8 result9;\n  undefined8 result10;\n  undefined8 result11;\n  undefined8 result12;\n  longlong long_result;\n  ulonglong unsigned_long;\n  undefined8 result13;\n  uint flag1;\n  undefined4 flag2;\n  undefined4 flag3;\n  int flag4;\n  \n  result10 = CONCAT44(number2,number1);\n  unsigned2 = number4 & 0x7fffffff;\n  if ((unsigned2 | number3) == 0) {\n    return 0;\n  }\n  unsigned1 = number2 & 0x7fffffff;\n  if (unsigned1 < 0x7ff00001) {\n    if (unsigned1 == 0x7ff00000) {\n      if (number1 == 0) {\n        if (0x7ff00000 < unsigned2) goto LAB_08006278;\nLAB_08006262:\n        if ((unsigned2 != 0x7ff00000) || (number3 == 0)) {\n          if (-1 < (int)number2) goto LAB_0800632a;\n          if (unsigned2 < 0x43400000) {\n            if (unsigned2 < 0x3ff00000) {\nLAB_0800632a:\n              flag1 = 0;\n              goto LAB_080062ba;\n            }\n            integer1 = ((int)unsigned2 >> 0x14) + -0x3ff;\n            if (0x14 < integer1) {\n              result2 = number3 >> (0x34U - integer1 & 0xff);\n              if (number3 == result2 << (0x34U - integer1 & 0xff)) {\n                flag1 = 2 - (result2 & 1);\n                goto LAB_080062ba;\n              }\n              goto LAB_0800632a;\n            }\n            if (number3 == 0) {\n              result2 = (int)unsigned2 >> (0x14U - integer1 & 0xff);\n              if (unsigned2 == result2 << (0x14U - integer1 & 0xff)) {\n                flag1 = 2 - (result2 & 1);\n              }\n              else {\n                flag1 = 0;\n              }\n              goto LAB_0800630c;\n            }\n            flag1 = 0;\n          }\n          else {\n            flag1 = 2;\nLAB_080062ba:\n            if (number3 == 0) {\n              if (unsigned2 == 0x7ff00000) {\n                if ((unsigned1 + 0xc0100000 | number1) == 0) {\n                  return 0;\n                }\n                if (0x3fefffff < unsigned1) {\n                  if ((int)number4 < 0) {\n                    return 0;\n                  }\n                  return 0;\n                }\n                if (-1 < (int)number4) {\n                  return 0;\n                }\n                return 0;\n              }\nLAB_0800630c:\n              if (unsigned2 == 0x3ff00000) {\n                if (-1 < (int)number4) {\n                  return number1;\n                }\n                result9 = 0x3ff0000000000000;\n                goto LAB_08006320;\n              }\n              if (number4 == 0x40000000) goto LAB_0800634a;\n              if ((number4 == 0x3fe00000) && (-1 < (int)number2)) {\n                unsigned2 = FUN_08006c0c(number1,number2);\n                return unsigned2;\n              }\n            }\n          }\n          result9 = FUNC_0800708c(number1,number2);\n          result7 = (undefined4)((ulonglong)result9 >> 0x20);\n          result1 = (undefined4)result9;\n          unsigned_long = CONCAT44(number2,result1) & 0x7fffffffffffffff;\n          if ((number1 == 0) && ((unsigned1 == 0 || ((number2 & 0x3fffffff) == 0x3ff00000)))) {\n            if ((int)number4 < 0) {\n              result9 = FUN_08000724(0,0x3ff00000,result1,result7);\n            }\n            if (-1 < (int)number2) {\n              return (uint)result9;\n            }\n            if ((flag1 | unsigned1 + 0xc0100000) != 0) {\n              return (uint)result9;\n            }\n          }\n          else {\n            result2 = 0xffffffff - ((int)number2 >> 0x1f);\n            result9 = result10;\n            if ((flag1 | result2) != 0) {\n              if (unsigned2 < 0x41e00001) {\n                flag4 = 0;\n                if (unsigned1 < 0x100000) {\n                  unsigned_long = FUN_080004d0();\n                  flag4 = -0x35;\n                }\n                unsigned2 = (uint)(unsigned_long >> 0x20);\n                result1 = (undefined4)unsigned_long;\n                flag4 = ((int)unsigned2 >> 0x14) + -0x3ff + flag4;\n                unsigned2 = unsigned2 & 0xfffff;\n                unsigned1 = unsigned2 | 0x3ff00000;\n                if (unsigned2 < 0x3988f) {\nLAB_08006628:\n                  integer1 = 0;\n                }\n                else {\n                  if (0xbb679 < unsigned2) {\n                    unsigned1 = unsigned1 - 0x100000;\n                    flag4 = flag4 + 1;\n                    goto LAB_08006628;\n                  }\n                  integer1 = 1;\n                }\n                integer2 = integer1 * 8;\n                result5 = (&DAT_080073c0)[integer1 * 2];\n                result6 = (&DAT_080073c4)[integer1 * 2];\n                result10 = FUN_08000168(result1,unsigned1,result5,result6);\n                result8 = (undefined4)((ulonglong)result10 >> 0x20);\n                result9 = FUN_0800016c(result1,unsigned1,result5,result6);\n                result9 = FUN_08000724(0,0x3ff00000,(int)result9,(int)((ulonglong)result9 >> 0x20));\n                result3 = (undefined4)((ulonglong)result9 >> 0x20);\n                result11 = FUN_080004d0((int)result10,result8,(int)result9,result3);\n                result4 = (undefined4)((ulonglong)result11 >> 0x20);\n                result7 = (undefined4)result11;\n                result11 = FUN_080004d0(0,result4);\n                result10 = FUN_08000168((int)result10,result8,(int)result11,\n                                      (int)((ulonglong)result11 >> 0x20));\n                result11 = FUN_08000168(0,((int)unsigned1 >> 1 | 0x20000000U) + 0x80000 + integer1 * 0x40000,\n                                      result5,result6);\n                result11 = FUN_08000168(result1,unsigned1,(int)result11,(int)((ulonglong)result11 >> 0x20));\n                result11 = FUN_080004d0((int)result11,(int)((ulonglong)result11 >> 0x20),0,result4);\n                result10 = FUN_08000168((int)result10,(int)((ulonglong)result10 >> 0x20),(int)result11,\n                                      (int)((ulonglong)result11 >> 0x20));\n                result10 = FUN_080004d0((int)result10,(int)((ulonglong)result10 >> 0x20),(int)result9,result3\n                                     );\n                result8 = (undefined4)((ulonglong)result10 >> 0x20);\n                result9 = FUN_080004d0(result7,result4);\n                result3 = (undefined4)((ulonglong)result9 >> 0x20);\n                result1 = (undefined4)result9;\n                result9 = FUN_080004d0(result1,result3,0x4a454eef,0x3fca7e28);\n                result9 = FUN_0800016c((int)result9,(int)((ulonglong)result9 >> 0x20),0x93c9db65,\n                                      0x3fcd864a);\n                result9 = FUN_080004d0((int)result9,(int)((ulonglong)result9 >> 0x20),result1,result3);\n                result9 = FUN_0800016c((int)result9,(int)((ulonglong)result9 >> 0x20),0xa91d4101,\n                                      0x3fd17460);\n                result9 = FUN_080004d0((int)result9,(int)((ulonglong)result9 >> 0x20),result1,result3);\n                result9 = FUN_0800016c((int)result9,(int)((ulonglong)result9 >> 0x20),0x518f264d,\n                                      0x3fd55555);\n                result9 = FUN_080004d0((int)result9,(int)((ulonglong)result9 >> 0x20),result1,result3);\n                result9 = FUN_0800016c((int)result9,(int)((ulonglong)result9 >> 0x20),0xdb6fabff,\n                                      0x3fdb6db6);\n                result9 = FUN_080004d0((int)result9,(int)((ulonglong)result9 >> 0x20),result1,result3);\n                result9 = FUN_0800016c((int)result9,(int)((ulonglong)result9 >> 0x20),0x33333303,\n                                      0x3fe33333);\n                result11 = FUN_080004d0(result1,result3,result1,result3);\n                result9 = FUN_080004d0((int)result9,(int)((ulonglong)result9 >> 0x20),(int)result11,\n                                      (int)((ulonglong)result11 >> 0x20));\n                result11 = FUN_0800016c(result7,result4,0,result4);\n                result11 = FUN_080004d0((int)result11,(int)((ulonglong)result11 >> 0x20),(int)result10,\n                                      result8);\n                result9 = FUN_0800016c((int)result11,(int)((ulonglong)result11 >> 0x20),(int)result9,\n                                      (int)((ulonglong)result9 >> 0x20));\n                result1 = (undefined4)((ulonglong)result9 >> 0x20);\n                result11 = FUN_080004d0(0,result4,0,result4);\n                result3 = (undefined4)((ulonglong)result11 >> 0x20);\n                result12 = FUN_0800016c((int)result11,result3,0,0x40080000);\n                FUN_0800016c((int)result12,(int)((ulonglong)result12 >> 0x20),(int)result9,result1);\n                result12 = FUN_080004d0(0,result4,0,extra_result2);\n                result5 = (undefined4)((ulonglong)result12 >> 0x20);\n                result13 = FUN_08000168(0,extra_result2,0,0x40080000);\n                result11 = FUN_08000168((int)result13,(int)((ulonglong)result13 >> 0x20),(int)result11,result3\n                                     );\n                result9 = FUN_08000168((int)result9,result1,(int)result11,(int)((ulonglong)result11 >> 0x20)\n                                     );\n                result9 = FUN_080004d0((int)result9,(int)((ulonglong)result9 >> 0x20),result7,result4);\n                result10 = FUN_080004d0((int)result10,result8,0,extra_result2);\n                result9 = FUN_0800016c((int)result9,(int)((ulonglong)result9 >> 0x20),(int)result10,\n                                      (int)((ulonglong)result10 >> 0x20));\n                result1 = (undefined4)((ulonglong)result9 >> 0x20);\n                FUN_0800016c((int)result12,result5,(int)result9,result1);\n                result10 = FUN_080004d0(0,extra_result3,0xe0000000,0x3feec709);\n                result11 = FUN_08000168(0,extra_result3,(int)result12,result5);\n                result9 = FUN_08000168((int)result9,result1,(int)result11,(int)((ulonglong)result11 >> 0x20)\n                                     );\n                result9 = FUN_080004d0((int)result9,(int)((ulonglong)result9 >> 0x20),0xdc3a03fd,\n                                      0x3feec709);\n                result11 = FUN_080004d0(0,extra_result3,0x145b01f5,0xbe3e2fe0);\n                result9 = FUN_0800016c((int)result9,(int)((ulonglong)result9 >> 0x20),(int)result11,\n                                      (int)((ulonglong)result11 >> 0x20));\n                result9 = FUN_0800016c((int)result9,(int)((ulonglong)result9 >> 0x20),\n                                      *(undefined4 *)(&DAT_080073e0 + integer2),\n                                      *(undefined4 *)(&DAT_080073e4 + integer2));\n                result11 = FUN_08000404(flag4);\n                result1 = (undefined4)((ulonglong)result11 >> 0x20);\n                result7 = *(undefined4 *)(&DAT_080073d0 + integer2);\n                result8 = *(undefined4 *)(&DAT_080073d4 + integer2);\n                result12 = FUN_0800016c((int)result10,(int)((ulonglong)result10 >> 0x20),(int)result9,\n                                      (int)((ulonglong)result9 >> 0x20));\n                result12 = FUN_0800016c((int)result12,(int)((ulonglong)result12 >> 0x20),result7,result8);\n                FUN_0800016c((int)result12,(int)((ulonglong)result12 >> 0x20),(int)result11,result1);\n                result11 = FUN_08000168(0,extra_result4,(int)result11,result1);\n                long_result = FUN_08000168((int)result11,(int)((ulonglong)result11 >> 0x20),result7,result8);\n                unsigned2 = extra_result4;\n              }\n              else {\n                if (0x43f00000 < unsigned2) {\n                  if (unsigned1 < 0x3ff00000) goto LAB_080063fa;\nLAB_08006418:\n                  if ((int)number4 < 1) {\n                    return 0;\n                  }\nLAB_08006400:\n                  number1 = 0x8800759c;\n                  number2 = 0x7e37e43c;\n                  result10 = 0x7e37e43c8800759c;\n                  goto LAB_0800634a;\n                }\n                if (unsigned1 < 0x3fefffff) {\nLAB_080063fa:\n                  if (-1 < (int)number4) {\n                    return 0;\n                  }\n                  goto LAB_08006400;\n                }\n                if (0x3ff00000 < unsigned1) goto LAB_08006418;\n                result10 = FUN_08000168(result1,result7,0,0x3ff00000);\n                result7 = (undefined4)((ulonglong)result10 >> 0x20);\n                result1 = (undefined4)result10;\n                result10 = FUN_080004d0(result1,result7,0x60000000,0x3ff71547);\n                result9 = FUN_080004d0(result1,result7,0xf85ddf44,0x3e54ae0b);\n                result11 = FUN_080004d0(result1,result7,0,0x3fd00000);\n                result11 = FUN_08000168(0x55555555,0x3fd55555,(int)result11,\n                                      (int)((ulonglong)result11 >> 0x20));\n                result11 = FUN_080004d0((int)result11,(int)((ulonglong)result11 >> 0x20),result1,result7);\n                result11 = FUN_08000168(0,0x3fe00000,(int)result11,(int)((ulonglong)result11 >> 0x20));\n                result12 = FUN_080004d0(result1,result7,result1,result7);\n                result11 = FUN_080004d0((int)result11,(int)((ulonglong)result11 >> 0x20),(int)result12,\n                                      (int)((ulonglong)result12 >> 0x20));\n                result11 = FUN_080004d0((int)result11,(int)((ulonglong)result11 >> 0x20),0x652b82fe,\n                                      0x3ff71547);\n                result9 = FUN_08000168((int)result9,(int)((ulonglong)result9 >> 0x20),(int)result11,\n                                      (int)((ulonglong)result11 >> 0x20));\n                FUN_0800016c((int)result10,(int)((ulonglong)result10 >> 0x20),(int)result9,\n                             (int)((ulonglong)result9 >> 0x20));\n                long_result = (ulonglong)extra_result1 << 0x20;\n                unsigned2 = extra_result1;\n              }\n              result10 = FUN_08000168((int)long_result,(int)((ulonglong)long_result >> 0x20),(int)result10,\n                                    (int)((ulonglong)result10 >> 0x20));\n              result10 = FUN_08000168((int)result9,(int)((ulonglong)result9 >> 0x20),(int)result10,\n                                    (int)((ulonglong)result10 >> 0x20));\n              if ((flag1 - 1 | result2) == 0) {\n                number2 = 0xbff00000;\n              }\n              else {\n                number2 = 0x3ff00000;\n              }\n              flag1 = 0;\n              result9 = FUN_08000168(number3,number4,0,number4);\n              result9 = FUN_080004d0((int)result9,(int)((ulonglong)result9 >> 0x20),0,unsigned2);\n              result10 = FUN_080004d0((int)result10,(int)((ulonglong)result10 >> 0x20),number3,number4);\n              result10 = FUN_0800016c((int)result9,(int)((ulonglong)result9 >> 0x20),(int)result10,\n                                    (int)((ulonglong)result10 >> 0x20));\n              result8 = (undefined4)((ulonglong)result10 >> 0x20);\n              result1 = (undefined4)result10;\n              result10 = FUN_080004d0(0,unsigned2,0,number4);\n              result3 = (undefined4)((ulonglong)result10 >> 0x20);\n              result7 = (undefined4)result10;\n              long_result = FUN_0800016c(result1,result8,result7,result3);\n              unsigned1 = (uint)((ulonglong)long_result >> 0x20);\n              unsigned2 = (uint)long_result;\n              if (0x408fffffffffffff < long_result) {\n                if ((unsigned1 + 0xbf700000 | unsigned2) == 0) {\n                  result9 = FUN_0800016c(result1,result8,0x652b82fe,0x3c971547);\n                  result11 = FUN_08000168(unsigned2,unsigned1,result7,result3);\n                  integer1 = FUN_080009f0((int)result9,(int)((ulonglong)result9 >> 0x20),(int)result11,\n                                       (int)((ulonglong)result11 >> 0x20));\n                  if (integer1 == 0) goto LAB_08006968;\n                }\n                result10 = FUN_080004d0(0,number2,0x8800759c,0x7e37e43c);\n                number1 = 0x8800759c;\n                number2 = 0x7e37e43c;\n                goto LAB_0800634a;\n              }\n              if ((unsigned1 & 0x7fffffff) < 0x4090cc00) {\nLAB_08006968:\n                if ((unsigned1 & 0x7fffffff) < 0x3fe00001) {\n                  integer1 = 0;\n                }\n                else {\n                  unsigned1 = (0x100000 >> (((int)(unsigned1 & 0x7fffffff) >> 0x14) - 0x3feU & 0xff)) +\n                          unsigned1;\n                  unsigned2 = (unsigned1 * 2 >> 0x15) - 0x3ff;\n                  integer1 = (int)(unsigned1 & 0xfffff | 0x100000) >> (0x14 - unsigned2 & 0xff);\n                  if (long_result < 0) {\n                    integer1 = -integer1;\n                  }\n                  result10 = FUN_08000168(result7,result3,0,unsigned1 & ~(0xfffff >> (unsigned2 & 0xff)));\n                }\n                flag3 = (undefined4)((ulonglong)result10 >> 0x20);\n                flag2 = (undefined4)result10;\n                FUN_0800016c(flag2,flag3,result1,result8);\n                result10 = FUN_080004d0(0,extra_result5,0,0x3fe62e43);\n                result7 = (undefined4)((ulonglong)result10 >> 0x20);\n                result9 = FUN_08000168(0,extra_result5,flag2,flag3);\n                result9 = FUN_08000168(result1,result8,(int)result9,(int)((ulonglong)result9 >> 0x20));\n                result9 = FUN_080004d0((int)result9,(int)((ulonglong)result9 >> 0x20),0xfefa39ef,\n                                      0x3fe62e42);\n                result11 = FUN_080004d0(0,extra_result5,0xca86c39,0xbe205c61);\n                result9 = FUN_0800016c((int)result9,(int)((ulonglong)result9 >> 0x20),(int)result11,\n                                      (int)((ulonglong)result11 >> 0x20));\n                result8 = (undefined4)((ulonglong)result9 >> 0x20);\n                result11 = FUN_0800016c((int)result10,result7,(int)result9,result8);\n                result3 = (undefined4)((ulonglong)result11 >> 0x20);\n                result1 = (undefined4)result11;\n                result10 = FUN_08000168(result1,result3,(int)result10,result7);\n                result10 = FUN_08000168((int)result9,result8,(int)result10,\n                                      (int)((ulonglong)result10 >> 0x20));\n                result8 = (undefined4)((ulonglong)result10 >> 0x20);\n                result9 = FUN_080004d0(result1,result3,result1,result3);\n                result4 = (undefined4)((ulonglong)result9 >> 0x20);\n                result7 = (undefined4)result9;\n                result9 = FUN_080004d0(result7,result4,0x72bea4d0,0x3e663769);\n                result9 = FUN_08000168((int)result9,(int)((ulonglong)result9 >> 0x20),0xc5d26bf1,\n                                      0x3ebbbd41);\n                result9 = FUN_080004d0((int)result9,(int)((ulonglong)result9 >> 0x20),result7,result4);\n                result9 = FUN_0800016c((int)result9,(int)((ulonglong)result9 >> 0x20),0xaf25de2c,\n                                      0x3f11566a);\n                result9 = FUN_080004d0((int)result9,(int)((ulonglong)result9 >> 0x20),result7,result4);\n                result9 = FUN_08000168((int)result9,(int)((ulonglong)result9 >> 0x20),0x16bebd93,\n                                      0x3f66c16c);\n                result9 = FUN_080004d0((int)result9,(int)((ulonglong)result9 >> 0x20),result7,result4);\n                result9 = FUN_0800016c((int)result9,(int)((ulonglong)result9 >> 0x20),0x5555553e,\n                                      0x3fc55555);\n                result9 = FUN_080004d0((int)result9,(int)((ulonglong)result9 >> 0x20),result7,result4);\n                result9 = FUN_08000168(result1,result3,(int)result9,(int)((ulonglong)result9 >> 0x20));\n                result7 = (undefined4)((ulonglong)result9 >> 0x20);\n                result11 = FUN_080004d0(result1,result3,(int)result9,result7);\n                result9 = FUN_08000168((int)result9,result7,0,0x40000000);\n                result9 = FUN_08000724((int)result11,(int)((ulonglong)result11 >> 0x20),(int)result9,\n                                      (int)((ulonglong)result9 >> 0x20));\n                result11 = FUN_080004d0(result1,result3,(int)result10,result8);\n                result10 = FUN_0800016c((int)result11,(int)((ulonglong)result11 >> 0x20),(int)result10,\n                                      result8);\n                result10 = FUN_08000168((int)result9,(int)((ulonglong)result9 >> 0x20),(int)result10,\n                                      (int)((ulonglong)result10 >> 0x20));\n                result10 = FUN_08000168((int)result10,(int)((ulonglong)result10 >> 0x20),result1,result3);\n                result9 = FUN_08000168(0,0x3ff00000,(int)result10,(int)((ulonglong)result10 >> 0x20));\n                integer2 = (int)((ulonglong)result9 >> 0x20);\n                integer3 = integer2 + integer1 * 0x100000;\n                result10 = CONCAT44(integer3,(int)result9);\n                number1 = flag1;\n                if (integer3 < 0x100000) {\n                  result10 = FUN_080071c0((int)result9,integer2,integer1);\n                }\n              }\n              else {\n                if ((unsigned1 + 0x3f6f3400 | unsigned2) == 0) {\n                  result9 = FUN_08000168(unsigned2,unsigned1,result7,result3);\n                  integer1 = FUN_080009c8(result1,result8,(int)result9,(int)((ulonglong)result9 >> 0x20));\n                  if (integer1 == 0) goto LAB_08006968;\n                }\n                result10 = FUN_080004d0(0,number2,0xc2f8f359,0x1a56e1f);\n                number1 = 0xc2f8f359;\n                number2 = 0x1a56e1f;\n              }\nLAB_0800634a:\n              unsigned2 = FUN_080004d0((int)result10,(int)((ulonglong)result10 >> 0x20),number1,number2);\n              return unsigned2;\n            }\n          }\n          result1 = (undefined4)((ulonglong)result9 >> 0x20);\n          result9 = FUN_08000168((int)result9,result1,(int)result9,result1);\n          result10 = result9;\nLAB_08006320:\n          unsigned2 = FUN_08000724((int)result9,(int)((ulonglong)result9 >> 0x20),(int)result10,\n                                (int)((ulonglong)result10 >> 0x20));\n          return unsigned2;\n        }\n      }\n    }\n    else if (unsigned2 < 0x7ff00001) goto LAB_08006262;\n  }\n  if ((unsigned1 + 0xc0100000 | number1) == 0) {\n    return 0;\n  }\nLAB_08006278:\n  unsigned2 = FUN_080070a4(&DAT_0800737e);\n  return unsigned2;\n}\n\n",
            "renaming": {
                "FUN_08006228": "calculate_float_08006228",
                "param_1": "number1",
                "param_2": "number2",
                "param_3": "number3",
                "param_4": "number4",
                "uVar1": "result1",
                "uVar2": "result2",
                "extraout_r1": "extra_result1",
                "uVar3": "result3",
                "uVar4": "result4",
                "extraout_r1_00": "extra_result2",
                "extraout_r1_01": "extra_result3",
                "extraout_r1_02": "extra_result4",
                "extraout_r1_03": "extra_result5",
                "iVar5": "integer1",
                "iVar6": "integer2",
                "uVar7": "result5",
                "uVar8": "unsigned1",
                "uVar9": "result6",
                "iVar10": "integer3",
                "uVar11": "unsigned2",
                "uVar12": "result7",
                "uVar13": "result8",
                "uVar14": "result9",
                "uVar15": "result10",
                "uVar16": "result11",
                "uVar17": "result12",
                "lVar18": "long_result",
                "uVar19": "unsigned_long",
                "uVar20": "result13",
                "local_70": "flag1",
                "local_68": "flag2",
                "local_64": "flag3",
                "local_54": "flag4"
            },
            "calling": [
                "FUN_08005900"
            ],
            "called": [
                "FUN_080071c0",
                "FUN_080004d0",
                "FUN_0800708c",
                "FUN_080070a4",
                "FUN_080009c8",
                "FUN_08006c0c",
                "FUN_08000168",
                "FUN_080009f0",
                "FUN_08000724",
                "FUN_0800016c",
                "FUN_08000404"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c0c": {
            "entrypoint": "0x08006c0c",
            "current_name": "calculate_float_from_uint_08006c0c",
            "code": "\nundefined8 calculate_float_from_uint_08006c0c(uint exponent,uint mantissa)\n\n{\n  undefined4 result;\n  uint binary_exponent_shifted;\n  int exponent_shifted;\n  int count;\n  uint temp_shift;\n  uint extra_binary_shift;\n  int fraction;\n  uint integer;\n  uint binary_unit;\n  int bit_index;\n  uint extra_fraction;\n  undefined8 final_result;\n  \n  if ((~mantissa & 0x7ff00000) == 0) {\n    final_result = FUN_080004d0(exponent,mantissa,exponent,mantissa);\n    final_result = FUN_0800016c(exponent,mantissa,(int)final_result,(int)((ulonglong)final_result >> 0x20));\n    return final_result;\n  }\n  if ((int)mantissa < 1) {\n    if ((mantissa & 0x7fffffff | exponent) == 0) {\n      return CONCAT44(mantissa,exponent);\n    }\n    if (mantissa != 0) {\n      final_result = FUN_08000168(exponent,mantissa,exponent,mantissa);\n      result = (undefined4)((ulonglong)final_result >> 0x20);\n      final_result = FUN_08000724((int)final_result,result,(int)final_result,result);\n      return final_result;\n    }\n  }\n  exponent_shifted = (int)mantissa >> 0x14;\n  if (exponent_shifted == 0) {\n    while (mantissa == 0) {\n      exponent_shifted = exponent_shifted + -0x15;\n      mantissa = exponent >> 0xb;\n      exponent = exponent << 0x15;\n    }\n    binary_exponent_shifted = 0;\n    for (; -1 < (int)(mantissa << 0xb); mantissa = mantissa << 1) {\n      binary_exponent_shifted = binary_exponent_shifted + 1;\n    }\n    exponent_shifted = exponent_shifted - (binary_exponent_shifted - 1);\n    mantissa = mantissa | exponent >> (0x20 - binary_exponent_shifted & 0xff);\n    exponent = exponent << (binary_exponent_shifted & 0xff);\n  }\n  fraction = 0;\n  binary_exponent_shifted = mantissa & 0xfffff | 0x100000;\n  if ((exponent_shifted + -0x3ff) * -0x80000000 < 0) {\n    binary_exponent_shifted = binary_exponent_shifted * 2 - ((int)exponent >> 0x1f);\n    exponent = exponent << 1;\n  }\n  binary_exponent_shifted = binary_exponent_shifted * 2 - ((int)exponent >> 0x1f);\n  count = 0x16;\n  temp_shift = 0;\n  integer = 0x200000;\n  exponent = exponent << 1;\n  do {\n    bit_index = temp_shift + integer;\n    if (bit_index <= (int)binary_exponent_shifted) {\n      binary_exponent_shifted = binary_exponent_shifted - bit_index;\n      temp_shift = bit_index + integer;\n      fraction = fraction + integer;\n    }\n    count = count + -1;\n    binary_exponent_shifted = binary_exponent_shifted * 2 - ((int)exponent >> 0x1f);\n    integer = integer >> 1;\n    exponent = exponent << 1;\n  } while (count != 0);\n  bit_index = 0x20;\n  binary_unit = 0x80000000;\n  integer = 0;\n  count = 0;\n  do {\n    extra_fraction = binary_unit + count;\n    extra_binary_shift = temp_shift;\n    if (((int)temp_shift < (int)binary_exponent_shifted) || ((binary_exponent_shifted == temp_shift && (extra_fraction <= exponent)))) {\n      count = extra_fraction + binary_unit;\n      if (((int)extra_fraction < 0) && (-1 < count)) {\n        extra_binary_shift = temp_shift + 1;\n      }\n      binary_exponent_shifted = binary_exponent_shifted - temp_shift;\n      if (exponent < extra_fraction) {\n        binary_exponent_shifted = binary_exponent_shifted - 1;\n      }\n      exponent = exponent - extra_fraction;\n      integer = integer + binary_unit;\n    }\n    binary_exponent_shifted = binary_exponent_shifted * 2 - ((int)exponent >> 0x1f);\n    bit_index = bit_index + -1;\n    exponent = exponent << 1;\n    binary_unit = binary_unit >> 1;\n    temp_shift = extra_binary_shift;\n  } while (bit_index != 0);\n  if ((exponent | binary_exponent_shifted) != 0) {\n    if (integer == 0xffffffff) {\n      fraction = fraction + 1;\n      integer = 0;\n    }\n    else {\n      integer = integer + 1 & 0xfffffffe;\n    }\n  }\n  integer = integer >> 1;\n  if (fraction << 0x1f < 0) {\n    integer = integer | 0x80000000;\n  }\n  return CONCAT44((fraction >> 1) + 0x3fe00000 + (exponent_shifted + -0x3ff >> 1) * 0x100000,integer);\n}\n\n",
            "renaming": {
                "FUN_08006c0c": "calculate_float_from_uint_08006c0c",
                "param_1": "exponent",
                "param_2": "mantissa",
                "uVar1": "result",
                "uVar2": "binary_exponent_shifted",
                "iVar3": "exponent_shifted",
                "iVar4": "count",
                "uVar5": "temp_shift",
                "uVar6": "extra_binary_shift",
                "iVar7": "fraction",
                "uVar8": "integer",
                "uVar9": "binary_unit",
                "iVar10": "bit_index",
                "uVar11": "extra_fraction",
                "uVar12": "final_result"
            },
            "calling": [
                "FUN_08005c70",
                "FUN_08005bc8",
                "FUN_08006228"
            ],
            "called": [
                "FUN_080004d0",
                "FUN_08000168",
                "FUN_08000724",
                "FUN_0800016c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d68": {
            "entrypoint": "0x08006d68",
            "current_name": "calculate_result_08006d68",
            "code": "\nundefined8 calculateResult_08006d68(int input1,uint input2,undefined4 constant1,undefined4 constant2)\n\n{\n  int result;\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  undefined4 temp4;\n  undefined4 temp5;\n  undefined4 temp6;\n  uint positiveInput2;\n  undefined8 tempResult1;\n  undefined8 tempResult2;\n  \n  tempResult1 = CONCAT44(input2,input1);\n  positiveInput2 = input2 & 0x7fffffff;\n  if (positiveInput2 < 0x44100000) {\n    if (positiveInput2 < 0x3fdc0000) {\n      if (positiveInput2 < 0x3e200000) {\n        tempResult2 = FUN_0800016c(input1,input2,0x8800759c,0x7e37e43c,constant2);\n        result = FUN_080009f0((int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20),0,0x3ff00000);\n        if (result != 0) {\n          return tempResult1;\n        }\n      }\n      result = -1;\n    }\n    else {\n      tempResult1 = FUNC_0800708c();\n      temp2 = (undefined4)((ulonglong)tempResult1 >> 0x20);\n      temp1 = (undefined4)tempResult1;\n      if (positiveInput2 < 0x3ff30000) {\n        if (positiveInput2 < 0x3fe60000) {\n          tempResult1 = FUN_0800016c(temp1,temp2,temp1,temp2);\n          tempResult1 = FUN_08000168((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),0,0x3ff00000);\n          tempResult2 = FUN_0800016c(temp1,temp2,0,0x40000000);\n          tempResult1 = FUN_08000724((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),(int)tempResult2,\n                               (int)((ulonglong)tempResult2 >> 0x20));\n          result = 0;\n        }\n        else {\n          tempResult1 = FUN_08000168(temp1,temp2,0,0x3ff00000);\n          tempResult2 = FUN_0800016c(temp1,temp2,0,0x3ff00000);\n          tempResult1 = FUN_08000724((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),(int)tempResult2,\n                               (int)((ulonglong)tempResult2 >> 0x20));\n          result = 1;\n        }\n      }\n      else if (positiveInput2 < 0x40038000) {\n        tempResult1 = FUN_08000168(temp1,temp2,0,0x3ff80000);\n        tempResult2 = FUN_080004d0(temp1,temp2,0,0x3ff80000);\n        tempResult2 = FUN_0800016c((int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20),0,0x3ff00000);\n        tempResult1 = FUN_08000724((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),(int)tempResult2,\n                             (int)((ulonglong)tempResult2 >> 0x20));\n        result = 2;\n      }\n      else {\n        tempResult1 = FUN_08000724(0,0xbff00000,temp1,temp2);\n        result = 3;\n      }\n    }\n    temp6 = (undefined4)((ulonglong)tempResult1 >> 0x20);\n    temp5 = (undefined4)tempResult1;\n    tempResult1 = FUN_080004d0(temp5,temp6,temp5,temp6);\n    temp3 = (undefined4)((ulonglong)tempResult1 >> 0x20);\n    temp1 = (undefined4)tempResult1;\n    tempResult1 = FUN_080004d0(temp1,temp3,temp1,temp3);\n    temp4 = (undefined4)((ulonglong)tempResult1 >> 0x20);\n    temp2 = (undefined4)tempResult1;\n    tempResult1 = FUN_080004d0(temp2,temp4,0xe322da11,0x3f90ad3a);\n    tempResult1 = FUN_0800016c((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),0x24760deb,0x3fa97b4b);\n    tempResult1 = FUN_080004d0((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),temp2,temp4);\n    tempResult1 = FUN_0800016c((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),0xa0d03d51,0x3fb10d66);\n    tempResult1 = FUN_080004d0((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),temp2,temp4);\n    tempResult1 = FUN_0800016c((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),0xc54c206e,0x3fb745cd);\n    tempResult1 = FUN_080004d0((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),temp2,temp4);\n    tempResult1 = FUN_0800016c((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),0x920083ff,0x3fc24924);\n    tempResult1 = FUN_080004d0((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),temp2,temp4);\n    tempResult1 = FUN_0800016c((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),0x5555550d,0x3fd55555);\n    tempResult1 = FUN_080004d0((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),temp1,temp3);\n    temp1 = (undefined4)((ulonglong)tempResult1 >> 0x20);\n    tempResult2 = FUN_080004d0(temp2,temp4,0x2c6a6c2f,0xbfa2b444);\n    tempResult2 = FUN_08000168((int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20),0x52defd9a,0x3fadde2d);\n    tempResult2 = FUN_080004d0((int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20),temp2,temp4);\n    tempResult2 = FUN_08000168((int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20),0xaf749a6d,0x3fb3b0f2);\n    tempResult2 = FUN_080004d0((int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20),temp2,temp4);\n    tempResult2 = FUN_08000168((int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20),0xfe231671,0x3fbc71c6);\n    tempResult2 = FUN_080004d0((int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20),temp2,temp4);\n    tempResult2 = FUN_08000168((int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20),0x9998ebc4,0x3fc99999);\n    tempResult2 = FUN_080004d0((int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20),temp2,temp4);\n    temp2 = (undefined4)((ulonglong)tempResult2 >> 0x20);\n    if (result == -1) {\n      tempResult1 = FUN_0800016c((int)tempResult1,temp1,(int)tempResult2,temp2);\n      tempResult1 = FUN_080004d0((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),temp5,temp6);\n      tempResult1 = FUN_08000168(temp5,temp6,(int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20));\n    }\n    else {\n      tempResult1 = FUN_0800016c((int)tempResult1,temp1,(int)tempResult2,temp2);\n      tempResult1 = FUN_080004d0((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),temp5,temp6);\n      result = result * 8;\n      tempResult1 = FUN_08000168((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),\n                           *(undefined4 *)(&UNK_08007410 + result),\n                           *(undefined4 *)(&UNK_08007414 + result));\n      tempResult1 = FUN_08000168((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),temp5,temp6);\n      tempResult1 = FUN_08000168(*(undefined4 *)(&UNK_080073f0 + result),\n                           *(undefined4 *)(&UNK_080073f4 + result),(int)tempResult1,\n                           (int)((ulonglong)tempResult1 >> 0x20));\n      if ((int)input2 < 0) {\n        tempResult1 = CONCAT44((int)((ulonglong)tempResult1 >> 0x20) + -0x80000000,(int)tempResult1);\n      }\n    }\n  }\n  else if ((positiveInput2 < 0x7ff00001) && ((positiveInput2 != 0x7ff00000 || (input1 == 0)))) {\n    if ((int)input2 < 1) {\n      tempResult1 = 0xbff921fb54442d18;\n    }\n    else {\n      tempResult1 = 0x3ff921fb54442d18;\n    }\n  }\n  else {\n    tempResult1 = FUN_0800016c(input1,input2,input1,input2,constant2);\n  }\n  return tempResult1;\n}\n\n",
            "renaming": {
                "FUN_08006d68": "calculate_result_08006d68",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "constant1",
                "param_4": "constant2",
                "iVar1": "result",
                "uVar2": "temp1",
                "uVar3": "temp2",
                "uVar4": "temp3",
                "uVar5": "temp4",
                "uVar6": "temp5",
                "uVar7": "temp6",
                "uVar8": "positiveInput2",
                "uVar9": "tempResult1",
                "uVar10": "tempResult2"
            },
            "calling": [
                "FUN_08006070"
            ],
            "called": [
                "FUN_080004d0",
                "FUN_0800708c",
                "FUN_08000168",
                "FUN_080009f0",
                "FUN_08000724",
                "FUN_0800016c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800708c": {
            "entrypoint": "0x0800708c",
            "current_name": "FUNC_0800708c",
            "code": "\nvoid FUNC_0800708c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800708c": "FUNC_0800708c"
            },
            "calling": [
                "FUN_08006d68",
                "FUN_08005c70",
                "FUN_08005854",
                "FUN_08006228",
                "FUN_08006070"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08007092": {
            "entrypoint": "0x08007092",
            "current_name": "calculate_shift_amount_08007092",
            "code": "\nuint calculateShiftAmount_08007092(undefined4 input,uint value)\n\n{\n  return (value | 0x80000000) + 0x100000 >> 0x1f;\n}\n\n",
            "renaming": {
                "FUN_08007092": "calculate_shift_amount_08007092",
                "param_1": "input",
                "param_2": "value"
            },
            "calling": [
                "FUN_08005900"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800709e": {
            "entrypoint": "0x0800709e",
            "current_name": "initialize_0800709e",
            "code": "\nundefined4 initialize_0800709e(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800709e": "initialize_0800709e"
            },
            "calling": [
                "FUN_08005900",
                "FUN_08005854",
                "FUN_08005bc8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080070a4": {
            "entrypoint": "0x080070a4",
            "current_name": "get_infinity_value_080070a4",
            "code": "\ndouble getInfinityValue_080070a4(void)\n\n{\n  return 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_080070a4": "get_infinity_value_080070a4",
                "undefined8": "double"
            },
            "calling": [
                "FUN_08005854",
                "FUN_08006228"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080070b0": {
            "entrypoint": "0x080070b0",
            "current_name": "convert_float_to_dec_080070b0",
            "code": "\nundefined8 convert_floatToDec_080070b0(uint input1,uint input2,undefined4 input3)\n\n{\n  int index;\n  undefined4 value1;\n  uint temp1;\n  undefined4 value2;\n  uint temp2;\n  uint shift1;\n  uint shift2;\n  undefined8 result;\n  \n  shift2 = (input2 << 1) >> 0x15;\n  shift1 = shift2 - 0x3ff;\n  temp1 = input2;\n  if ((int)shift1 < 0x14) {\n    if ((int)shift1 < 0) {\n      if ((input2 & 0x7fffffff | input1) == 0) {\n        return CONCAT44(input2,input1);\n      }\n      temp1 = input2 & 0xfffff | input1;\n      index = ((int)input2 >> 0x1f) * -8;\n      value1 = *(undefined4 *)(&DAT_08007430 + index);\n      value2 = *(undefined4 *)(&DAT_08007434 + index);\n      result = FUN_0800016c(input1,(-temp1 | temp1) >> 0xc & 0x80000 | input2 & 0xfffe0000,value1,\n                           value2,input1,input2,input3);\n      result = FUN_08000168((int)result,(int)((ulonglong)result >> 0x20),value1,value2);\n      return CONCAT44((uint)((ulonglong)result >> 0x20) & 0x7fffffff | input2 & 0x80000000,\n                      (int)result);\n    }\n    shift2 = 0xfffff >> (shift1 & 0xff);\n    if ((input2 & shift2 | input1) == 0) {\n      return CONCAT44(input2,input1);\n    }\n    shift2 = shift2 >> 1;\n    temp2 = input2 & shift2 | input1;\n    if (temp2 != 0) {\n      if (shift1 == 0x13) {\n        temp2 = 0x80000000;\n      }\n      else {\n        temp2 = 0;\n      }\n      temp1 = 0x40000 >> (shift1 & 0xff) | input2 & ~shift2;\n    }\n  }\n  else {\n    if (0x33 < (int)shift1) {\n      if (shift1 != 0x400) {\n        return CONCAT44(input2,input1);\n      }\n      result = FUN_0800016c();\n      return result;\n    }\n    shift2 = shift2 - 0x413;\n    shift1 = 0xffffffff >> (shift2 & 0xff);\n    if ((input1 & shift1) == 0) {\n      return CONCAT44(input2,input1);\n    }\n    shift1 = shift1 >> 1;\n    temp2 = input1;\n    if ((input1 & shift1) != 0) {\n      temp2 = 0x40000000 >> (shift2 & 0xff) | input1 & ~shift1;\n    }\n  }\n  index = ((int)input2 >> 0x1f) * -8;\n  value1 = *(undefined4 *)(&DAT_08007430 + index);\n  value2 = *(undefined4 *)(&DAT_08007434 + index);\n  result = FUN_0800016c(temp2,temp1,value1,value2,input1,input2,input3);\n  result = FUN_08000168((int)result,(int)((ulonglong)result >> 0x20),value1,value2);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080070b0": "convert_float_to_dec_080070b0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "iVar1": "index",
                "uVar2": "value1",
                "uVar3": "temp1",
                "uVar4": "value2",
                "uVar5": "temp2",
                "uVar6": "shift1",
                "uVar7": "shift2",
                "uVar8": "result"
            },
            "calling": [
                "FUN_08005900"
            ],
            "called": [
                "FUN_08000168",
                "FUN_0800016c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080071c0": {
            "entrypoint": "0x080071c0",
            "current_name": "calculate_floating_point_080071c0",
            "code": "\nundefined8 calculateFloatingPoint_080071c0(uint input1,uint input2,int modifier,undefined4 param4)\n\n{\n  uint shiftedInput2;\n  undefined4 result1;\n  int temp;\n  undefined4 result2;\n  uint input1High;\n  undefined8 combinedValue;\n  \n  combinedValue = CONCAT44(input2,input1);\n  shiftedInput2 = (input2 << 1) >> 0x15;\n  if (shiftedInput2 == 0) {\n    if ((input2 & 0x7fffffff | input1) == 0) {\n      return combinedValue;\n    }\n    combinedValue = FUN_080004d0(input1,input2,0,0x43500000);\n    if (-0xc351 < modifier) {\n      shiftedInput2 = ((uint)((int)((ulonglong)combinedValue >> 0x20) << 1) >> 0x15) - 0x36;\n      goto LAB_08007210;\n    }\nLAB_080071ec:\n    result1 = 0xc2f8f359;\n    result2 = 0x1a56e1f;\n  }\n  else {\n    if (shiftedInput2 == 0x7ff) {\n      combinedValue = FUN_0800016c(input1,input2,input1,input2,param4);\n      return combinedValue;\n    }\nLAB_08007210:\n    input1High = (uint)((ulonglong)combinedValue >> 0x20);\n    result1 = (undefined4)combinedValue;\n    temp = shiftedInput2 + modifier;\n    if (temp < 0x7ff) {\n      if (0 < temp) {\n        return CONCAT44(input1High & 0x800fffff | temp * 0x100000,result1);\n      }\n      if (temp + 0x35 < 0 == SCARRY4(temp,0x35)) {\n        combinedValue = CONCAT44(input1High & 0x800fffff | (temp + 0x36) * 0x100000,result1);\n        result1 = 0;\n        result2 = 0x3c900000;\n        goto LAB_0800722e;\n      }\n      if (modifier < 0xc351) {\n        combinedValue = FUNC_0800729c(0xc2f8f359,0x1a56e1f,result1,input1High);\n        goto LAB_080071ec;\n      }\n    }\n    combinedValue = FUNC_0800729c(0x8800759c,0x7e37e43c,result1,input1High);\n    result1 = 0x8800759c;\n    result2 = 0x7e37e43c;\n  }\nLAB_0800722e:\n  combinedValue = FUN_080004d0((int)combinedValue,(int)((ulonglong)combinedValue >> 0x20),result1,result2);\n  return combinedValue;\n}\n\n",
            "renaming": {
                "FUN_080071c0": "calculate_floating_point_080071c0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "modifier",
                "param_4": "param4",
                "uVar1": "shiftedInput2",
                "uVar2": "result1",
                "iVar3": "temp",
                "uVar4": "result2",
                "uVar5": "input1High",
                "uVar6": "combinedValue"
            },
            "calling": [
                "FUN_08006228"
            ],
            "called": [
                "FUN_080004d0",
                "FUN_0800016c",
                "FUN_0800729c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800729c": {
            "entrypoint": "0x0800729c",
            "current_name": "FUNC_0800729c",
            "code": "\nvoid FUNC_0800729c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800729c": "FUNC_0800729c"
            },
            "calling": [
                "FUN_080071c0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080072ac": {
            "entrypoint": "0x080072ac",
            "current_name": "get_data_080072ac",
            "code": "\nundefined4 get_data_080072ac(void)\n\n{\n  return DAT_200001c0;\n}\n\n",
            "renaming": {
                "FUN_080072ac": "get_data_080072ac"
            },
            "calling": [
                "FUN_08005900",
                "FUN_08005854",
                "FUN_08005bc8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080072b8": {
            "entrypoint": "0x080072b8",
            "current_name": "update_data_pointer_080072b8",
            "code": "\nvoid updateDataPointer_080072b8(int increment)\n\n{\n  if (DAT_200002b4 == (undefined *)0x0) {\n    DAT_200002b4 = &DAT_200016a0;\n  }\n  DAT_200002b4 = DAT_200002b4 + increment;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080072b8": "update_data_pointer_080072b8",
                "param_1": "increment"
            },
            "calling": [
                "FUN_0800581c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080072d4": {
            "entrypoint": "0x080072d4",
            "current_name": "FUNC_080072d4",
            "code": "\nvoid FUNC_080072d4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080072d4": "FUNC_080072d4"
            },
            "calling": [
                "FUN_08000134",
                "FUN_08004fb4",
                "FUN_08000110"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080072e0": {
            "entrypoint": "0x080072e0",
            "current_name": "FUNC_080072e0",
            "code": "\nvoid FUNC_080072e0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080072e0": "FUNC_080072e0"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        }
    },
    "used_tokens": 153326,
    "layers": [
        [
            "FUN_08000110",
            "FUN_08000134",
            "FUN_08000150",
            "FUN_08000168",
            "FUN_0800016c",
            "FUN_08000404",
            "FUN_08000428",
            "FUN_080004d0",
            "FUN_080006ac",
            "FUN_08000724",
            "FUN_08000892",
            "FUN_08000904",
            "FUN_08000980",
            "FUN_08000990",
            "FUN_080009a0",
            "FUN_080009b4",
            "FUN_080009c8",
            "FUN_080009f0",
            "FUN_08000a04",
            "FUN_08000a30",
            "FUN_08000ad8",
            "FUN_08000adc",
            "FUN_08000c3c",
            "FUN_08000c44",
            "FUN_08000cec",
            "FUN_08000e54",
            "FUN_08000f9c",
            "FUN_08000ffc",
            "FUN_08001004",
            "FUN_08001014",
            "FUN_08001028",
            "FUN_08001050",
            "FUN_08001064",
            "FUN_08001078",
            "FUN_080010c4",
            "FUN_08001104",
            "FUN_08001128",
            "FUN_0800114c",
            "FUN_0800115c",
            "FUN_08001170",
            "FUN_08001194",
            "FUN_080011fc",
            "FUN_08001214",
            "FUN_08001240",
            "FUN_08001264",
            "FUN_08001424",
            "FUN_0800142e",
            "FUN_08001436",
            "FUN_08001460",
            "FUN_080014e2",
            "FUN_08001530",
            "FUN_080015e8",
            "FUN_080016f4",
            "FUN_08001754",
            "FUN_08001828",
            "FUN_08001938",
            "FUN_08001b58",
            "FUN_08002008",
            "FUN_0800209c",
            "FUN_08002214",
            "FUN_08002220",
            "FUN_08002250",
            "FUN_08002280",
            "FUN_080022d0",
            "FUN_08002324",
            "FUN_08002368",
            "FUN_080023d0",
            "FUN_08002404",
            "FUN_0800245c",
            "FUN_08002520",
            "FUN_08002538",
            "FUN_08002564",
            "FUN_080025a4",
            "FUN_080025e8",
            "FUN_08002724",
            "FUN_0800290c",
            "FUN_0800299a",
            "FUN_08002ad0",
            "FUN_08002b48",
            "FUN_08002bf0",
            "FUN_08002cb0",
            "FUN_08002d88",
            "FUN_08002ea0",
            "FUN_08002ec0",
            "FUN_08002ed4",
            "FUN_08002ee8",
            "FUN_08002f28",
            "FUN_08003034",
            "FUN_08003068",
            "FUN_08003298",
            "FUN_08003314",
            "FUN_08003320",
            "FUN_08003330",
            "FUN_08003eb0",
            "FUN_08003ec8",
            "FUN_08003f3c",
            "FUN_08003fc4",
            "FUN_08003fd0",
            "FUN_08003fdc",
            "FUN_08003fe8",
            "FUN_08003ff4",
            "FUN_08004028",
            "FUN_0800403c",
            "FUN_0800407c",
            "FUN_080040b8",
            "FUN_080040e8",
            "FUN_0800411c",
            "FUN_08004194",
            "FUN_080041ae",
            "FUN_080041c4",
            "FUN_0800426c",
            "FUN_08004300",
            "FUN_08004348",
            "FUN_08004384",
            "FUN_080043bc",
            "FUN_080043f0",
            "FUN_08004410",
            "FUN_08004434",
            "FUN_08004458",
            "FUN_08004490",
            "FUN_08004514",
            "FUN_0800458c",
            "FUN_0800483c",
            "FUN_08004a30",
            "FUN_08004a84",
            "FUN_08004c18",
            "FUN_08004c30",
            "FUN_08004c64",
            "FUN_08004c70",
            "FUN_08004c8c",
            "FUN_08004cac",
            "FUN_08004ccc",
            "FUN_08004d48",
            "FUN_08004d8c",
            "FUN_08004e14",
            "FUN_08004e7c",
            "FUN_08004f10",
            "thunk_FUN_0800115c",
            "FUN_08004fb4",
            "FUN_08004ffc",
            "FUN_08005044",
            "FUN_080050fc",
            "FUN_080052e4",
            "FUN_080053d4",
            "FUN_08005614",
            "FUN_08005630",
            "FUN_08005646",
            "FUN_0800567c",
            "FUN_08005714",
            "FUN_080057d0",
            "FUN_0800581c",
            "FUN_08005840",
            "FUN_08005854",
            "thunk_FUN_08006070",
            "FUN_08005900",
            "FUN_08005bc8",
            "FUN_08005c70",
            "FUN_08006070",
            "FUN_08006228",
            "FUN_08006c0c",
            "FUN_08006d68",
            "FUN_08007092",
            "FUN_0800709e",
            "FUN_080070a4",
            "FUN_080070b0",
            "FUN_080071c0",
            "FUN_080072ac",
            "FUN_080072b8"
        ]
    ],
    "locked_functions": []
}