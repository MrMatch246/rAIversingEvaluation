{
    "functions": {
        "FUN_080001ac": {
            "entrypoint": "0x080001ac",
            "current_name": "set_flag_if_unset_080001ac",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x080001b8) */\n\nundefined4 setFlagIfUnset_080001ac(undefined4 input)\n\n{\n  if ((char)DAT_20000104 == '\\0') {\n    DAT_20000104._0_1_ = '\\x01';\n  }\n  return input;\n}\n\n",
            "renaming": {
                "FUN_080001ac": "set_flag_if_unset_080001ac",
                "param_1": "input"
            },
            "calling": [],
            "called": [
                "FUN_080059f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000230": {
            "entrypoint": "0x08000230",
            "current_name": "find_byte_in_buffer_08000230",
            "code": "\nbyte * find_byte_in_buffer_08000230(uint *buffer,uint search_byte,uint buffer_length)\n\n{\n  byte current_byte;\n  char mask_1;\n  char mask_2;\n  char mask_3;\n  char mask_4;\n  byte *next_byte;\n  uint *current_ptr;\n  byte *result_ptr;\n  uint ptr_modulo_8;\n  uint buffer_length_aligned;\n  uint current_xor_1;\n  uint current_xor_2;\n  bool current_xor_2_masked_1;\n  bool current_xor_2_masked_2;\n  bool current_xor_2_masked_3;\n  bool current_xor_2_masked_4;\n  \n  search_byte = search_byte & 0xff;\n  if ((int)buffer_length < 0x10) {\njoined_r0x08000290:\n    do {\n      if (buffer_length == 0) {\n        return (byte *)0x0;\n      }\n      current_ptr = (uint *)((int)buffer + 1);\n      current_byte = *(byte *)buffer;\n      buffer_length = buffer_length - 1;\n      buffer = current_ptr;\n    } while (current_byte != search_byte);\n  }\n  else {\n    ptr_modulo_8 = (uint)buffer & 7;\n    while( true ) {\n      if (ptr_modulo_8 == 0) {\n        ptr_modulo_8 = search_byte | search_byte << 8;\n        ptr_modulo_8 = ptr_modulo_8 | ptr_modulo_8 << 0x10;\n        buffer_length_aligned = buffer_length & 0xfffffff8;\n        do {\n          current_ptr = buffer + 2;\n          buffer_length_aligned = buffer_length_aligned - 8;\n          current_xor_1 = *buffer ^ ptr_modulo_8;\n          current_xor_2 = buffer[1] ^ ptr_modulo_8;\n          mask_1 = -((char)current_xor_1 == '\\0');\n          mask_2 = -((char)(current_xor_1 >> 8) == '\\0');\n          mask_3 = -((char)(current_xor_1 >> 0x10) == '\\0');\n          mask_4 = -((char)(current_xor_1 >> 0x18) == '\\0');\n          current_xor_1 = CONCAT13(mask_4,CONCAT12(mask_3,CONCAT11(mask_2,mask_1)));\n          current_xor_2_masked_1 = (char)current_xor_2 != '\\0';\n          current_xor_2_masked_2 = (char)(current_xor_2 >> 8) != '\\0';\n          current_xor_2_masked_3 = (char)(current_xor_2 >> 0x10) != '\\0';\n          current_xor_2_masked_4 = (char)(current_xor_2 >> 0x18) != '\\0';\n          current_xor_2 = CONCAT13(current_xor_2_masked_4 * mask_4 - !current_xor_2_masked_4,\n                            CONCAT12(current_xor_2_masked_3 * mask_3 - !current_xor_2_masked_3,\n                                     CONCAT11(current_xor_2_masked_2 * mask_2 - !current_xor_2_masked_2,current_xor_2_masked_1 * mask_1 - !current_xor_2_masked_1)));\n          if (current_xor_2 != 0) {\n            if (current_xor_1 == 0) {\n              result_ptr = (byte *)((int)buffer + 5);\n              current_xor_1 = current_xor_2;\n            }\n            else {\n              result_ptr = (byte *)((int)buffer + 1);\n            }\n            if ((current_xor_1 & 1) == 0) {\n              current_xor_2_masked_1 = (current_xor_1 & 0x100) == 0;\n              next_byte = result_ptr + 1;\n              if (current_xor_2_masked_1) {\n                current_xor_2_masked_1 = (current_xor_1 & 0x18000) == 0;\n                next_byte = result_ptr + 2;\n              }\n              result_ptr = next_byte;\n              if (current_xor_2_masked_1) {\n                result_ptr = result_ptr + 1;\n              }\n            }\n            return result_ptr + -1;\n          }\n          buffer = current_ptr;\n        } while (buffer_length_aligned != 0);\n        buffer_length = buffer_length & 7;\n        goto joined_r0x08000290;\n      }\n      current_ptr = (uint *)((int)buffer + 1);\n      buffer_length = buffer_length - 1;\n      if (*(byte *)buffer == search_byte) break;\n      ptr_modulo_8 = (uint)current_ptr & 7;\n      buffer = current_ptr;\n      if (buffer_length == 0) {\n        return (byte *)0x0;\n      }\n    }\n  }\n  return (byte *)((int)current_ptr + -1);\n}\n\n",
            "renaming": {
                "FUN_08000230": "find_byte_in_buffer_08000230",
                "param_1": "buffer",
                "param_2": "search_byte",
                "param_3": "buffer_length",
                "bVar1": "current_byte",
                "cVar2": "mask_1",
                "cVar3": "mask_2",
                "cVar4": "mask_3",
                "cVar5": "mask_4",
                "pbVar6": "next_byte",
                "puVar7": "current_ptr",
                "pbVar8": "result_ptr",
                "uVar9": "ptr_modulo_8",
                "uVar10": "buffer_length_aligned",
                "uVar11": "current_xor_1",
                "uVar12": "current_xor_2",
                "bVar13": "current_xor_2_masked_1",
                "bVar14": "current_xor_2_masked_2",
                "bVar15": "current_xor_2_masked_3",
                "bVar16": "current_xor_2_masked_4"
            },
            "calling": [
                "FUN_08004a84",
                "FUN_08004d9c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080002d0": {
            "entrypoint": "0x080002d0",
            "current_name": "divide_or_default_080002d0",
            "code": "\nundefined8 divide_or_default_080002d0(int dividend,int divisor,int remainder,int default_value)\n\n{\n  undefined8 result;\n  \n  if ((default_value == 0) && (remainder == 0)) {\n    if (divisor != 0 || dividend != 0) {\n      divisor = -1;\n      dividend = -1;\n    }\n    return CONCAT44(divisor,dividend);\n  }\n  result = divide_with_remainder_08000300();\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080002d0": "divide_or_default_080002d0",
                "param_1": "dividend",
                "param_2": "divisor",
                "param_3": "remainder",
                "param_4": "default_value",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080023b4"
            ],
            "called": [
                "FUN_08000300"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000300": {
            "entrypoint": "0x08000300",
            "current_name": "divide_with_remainder_08000300",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x080005aa) */\n\nulonglong divideWithRemainder_08000300(uint dividend,uint divisor,uint quotient,uint remainder,uint *result)\n\n{\n  ulonglong quotientAndRemainder;\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  uint temp7;\n  uint temp8;\n  int shift;\n  bool carry;\n  \n  if (remainder == 0) {\n    if (divisor < quotient) {\n      shift = LZCOUNT(quotient);\n      if (shift != 0) {\n        quotient = quotient << shift;\n        divisor = dividend >> (0x20U - shift & 0xff) | divisor << shift;\n        dividend = dividend << shift;\n      }\n      temp7 = quotient >> 0x10;\n      temp5 = divisor / temp7;\n      temp4 = dividend >> 0x10 | (divisor - temp7 * temp5) * 0x10000;\n      temp3 = temp5 * (quotient & 0xffff);\n      temp2 = temp5;\n      if (temp4 <= temp3 && temp3 - temp4 != 0) {\n        carry = CARRY4(temp4,quotient);\n        temp4 = temp4 + quotient;\n        temp2 = temp5 - 1;\n        if ((carry == false) && (temp4 <= temp3 && temp3 - temp4 != 0)) {\n          temp2 = temp5 - 2;\n          temp4 = temp4 + quotient;\n        }\n      }\n      temp5 = (temp4 - temp3) / temp7;\n      temp4 = dividend & 0xffff | ((temp4 - temp3) - temp7 * temp5) * 0x10000;\n      temp7 = temp5 * (quotient & 0xffff);\n      temp3 = temp5;\n      if (temp4 <= temp7 && temp7 - temp4 != 0) {\n        carry = CARRY4(temp4,quotient);\n        temp4 = temp4 + quotient;\n        temp3 = temp5 - 1;\n        if ((carry == false) && (temp4 <= temp7 && temp7 - temp4 != 0)) {\n          temp3 = temp5 - 2;\n          temp4 = temp4 + quotient;\n        }\n      }\n      temp4 = temp4 - temp7;\n      temp3 = temp3 | temp2 << 0x10;\n      temp2 = 0;\n    }\n    else {\n      if (quotient == 0) {\n        quotient = 1 / 0;\n      }\n      shift = LZCOUNT(quotient);\n      if (shift == 0) {\n        divisor = divisor - quotient;\n        temp4 = quotient >> 0x10;\n        temp8 = quotient & 0xffff;\n        temp2 = 1;\n      }\n      else {\n        quotient = quotient << shift;\n        temp4 = quotient >> 0x10;\n        temp3 = divisor >> (0x20U - shift & 0xff);\n        temp6 = dividend >> (0x20U - shift & 0xff) | divisor << shift;\n        temp2 = temp3 / temp4;\n        temp8 = quotient & 0xffff;\n        temp7 = temp6 >> 0x10 | (temp3 - temp4 * temp2) * 0x10000;\n        temp5 = temp2 * temp8;\n        dividend = dividend << shift;\n        temp3 = temp2;\n        if (temp7 <= temp5 && temp5 - temp7 != 0) {\n          carry = CARRY4(temp7,quotient);\n          temp7 = temp7 + quotient;\n          temp3 = temp2 - 1;\n          if ((carry == false) && (temp7 <= temp5 && temp5 - temp7 != 0)) {\n            temp3 = temp2 - 2;\n            temp7 = temp7 + quotient;\n          }\n        }\n        temp1 = (temp7 - temp5) / temp4;\n        divisor = temp6 & 0xffff | ((temp7 - temp5) - temp4 * temp1) * 0x10000;\n        temp5 = temp1 * temp8;\n        temp2 = temp1;\n        if (divisor <= temp5 && temp5 - divisor != 0) {\n          carry = CARRY4(divisor,quotient);\n          divisor = divisor + quotient;\n          temp2 = temp1 - 1;\n          if ((carry == false) && (divisor <= temp5 && temp5 - divisor != 0)) {\n            temp2 = temp1 - 2;\n            divisor = divisor + quotient;\n          }\n        }\n        divisor = divisor - temp5;\n        temp2 = temp2 | temp3 << 0x10;\n      }\n      temp6 = divisor / temp4;\n      temp7 = dividend >> 0x10 | (divisor - temp4 * temp6) * 0x10000;\n      temp3 = temp8 * temp6;\n      temp5 = temp6;\n      if (temp7 <= temp3 && temp3 - temp7 != 0) {\n        carry = CARRY4(temp7,quotient);\n        temp7 = temp7 + quotient;\n        temp5 = temp6 - 1;\n        if ((carry == false) && (temp7 <= temp3 && temp3 - temp7 != 0)) {\n          temp5 = temp6 - 2;\n          temp7 = temp7 + quotient;\n        }\n      }\n      temp6 = (temp7 - temp3) / temp4;\n      temp4 = dividend & 0xffff | ((temp7 - temp3) - temp4 * temp6) * 0x10000;\n      temp8 = temp8 * temp6;\n      temp3 = temp6;\n      if (temp4 <= temp8 && temp8 - temp4 != 0) {\n        carry = CARRY4(temp4,quotient);\n        temp4 = temp4 + quotient;\n        temp3 = temp6 - 1;\n        if ((carry == false) && (temp4 <= temp8 && temp8 - temp4 != 0)) {\n          temp3 = temp6 - 2;\n          temp4 = temp4 + quotient;\n        }\n      }\n      temp4 = temp4 - temp8;\n      temp3 = temp3 | temp5 << 0x10;\n    }\n    if (result != (uint *)0x0) {\n      *result = temp4 >> shift;\n      result[1] = 0;\n      return CONCAT44(temp2,temp3);\n    }\n  }\n  else if (divisor < remainder) {\n    if (result != (uint *)0x0) {\n      *result = dividend;\n      result[1] = divisor;\n      return 0;\n    }\n    temp3 = 0;\n    temp2 = 0;\n  }\n  else {\n    shift = LZCOUNT(remainder);\n    if (shift != 0) {\n      temp7 = 0x20 - shift;\n      temp2 = quotient >> (temp7 & 0xff) | remainder << shift;\n      temp8 = temp2 >> 0x10;\n      temp3 = divisor >> (temp7 & 0xff);\n      temp1 = dividend >> (temp7 & 0xff) | divisor << shift;\n      temp6 = temp3 / temp8;\n      temp5 = temp1 >> 0x10 | (temp3 - temp8 * temp6) * 0x10000;\n      temp4 = temp6 * (temp2 & 0xffff);\n      dividend = dividend << shift;\n      temp3 = temp6;\n      if (temp5 <= temp4 && temp4 - temp5 != 0) {\n        carry = CARRY4(temp5,temp2);\n        temp5 = temp5 + temp2;\n        temp3 = temp6 - 1;\n        if ((carry == false) && (temp5 <= temp4 && temp4 - temp5 != 0)) {\n          temp3 = temp6 - 2;\n          temp5 = temp5 + temp2;\n        }\n      }\n      temp6 = (temp5 - temp4) / temp8;\n      temp5 = temp1 & 0xffff | ((temp5 - temp4) - temp8 * temp6) * 0x10000;\n      temp8 = temp6 * (temp2 & 0xffff);\n      temp4 = temp6;\n      if (temp5 <= temp8 && temp8 - temp5 != 0) {\n        carry = CARRY4(temp5,temp2);\n        temp5 = temp5 + temp2;\n        temp4 = temp6 - 1;\n        if ((carry == false) && (temp5 <= temp8 && temp8 - temp5 != 0)) {\n          temp4 = temp6 - 2;\n          temp5 = temp5 + temp2;\n        }\n      }\n      temp4 = temp4 | temp3 << 0x10;\n      quotientAndRemainder = (ulonglong)temp4 * (ulonglong)(quotient << shift);\n      if (CONCAT44(temp5 - temp8,dividend) < quotientAndRemainder) {\n        quotientAndRemainder = quotientAndRemainder - CONCAT44(temp2,quotient << shift);\n        temp4 = temp4 - 1;\n      }\n      if (result != (uint *)0x0) {\n        temp3 = ((temp5 - temp8) - (int)(quotientAndRemainder >> 0x20)) - (uint)(dividend < (uint)quotientAndRemainder);\n        *result = temp3 << (temp7 & 0xff) | dividend - (uint)quotientAndRemainder >> shift;\n        result[1] = temp3 >> shift;\n      }\n      return (ulonglong)temp4;\n    }\n    if ((remainder < divisor) || (quotient <= dividend)) {\n      carry = dividend < quotient;\n      dividend = dividend - quotient;\n      divisor = (divisor - remainder) - (uint)carry;\n      temp3 = 1;\n    }\n    else {\n      temp3 = 0;\n    }\n    temp2 = 0;\n    if (result != (uint *)0x0) {\n      *result = dividend;\n      result[1] = divisor;\n      return (ulonglong)temp3;\n    }\n  }\n  return CONCAT44(temp2,temp3);\n}\n\n",
            "renaming": {
                "FUN_08000300": "divide_with_remainder_08000300",
                "param_1": "dividend",
                "param_2": "divisor",
                "param_3": "quotient",
                "param_4": "remainder",
                "param_5": "result",
                "uVar1": "quotientAndRemainder",
                "uVar2": "temp1",
                "uVar3": "temp2",
                "uVar4": "temp3",
                "uVar5": "temp4",
                "uVar6": "temp5",
                "uVar7": "temp6",
                "uVar8": "temp7",
                "uVar9": "temp8",
                "iVar10": "shift",
                "bVar11": "carry"
            },
            "calling": [
                "FUN_080002d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080005e0": {
            "entrypoint": "0x080005e0",
            "current_name": "execute_software_interrupt_080005e0",
            "code": "\nvoid executeSoftwareInterrupt_080005e0(void)\n\n{\n  software_interrupt(0x3f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080005e0": "execute_software_interrupt_080005e0"
            },
            "calling": [
                "FUN_080005e4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080005e4": {
            "entrypoint": "0x080005e4",
            "current_name": "execute_interrupt_handler_080005e4",
            "code": "\nundefined4 execute_interrupt_handler_080005e4(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  undefined4 result;\n  \n  if (DAT_20000120 != 0) {\n    return 0;\n  }\n  result = execute_software_interrupt_080005e0(1,arg1,0,0,arg4);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080005e4": "execute_interrupt_handler_080005e4",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08000c4c"
            ],
            "called": [
                "FUN_080005e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000600": {
            "entrypoint": "0x08000600",
            "current_name": "initialize_and_process_data_08000600",
            "code": "\nvoid initialize_and_process_data_08000600(int **data,undefined4 param)\n\n{\n  char char_value;\n  int result;\n  \n  char_value = *(char *)((int)data + 5);\n  if (char_value == '\\x02') {\n    *data = &DAT_20000338;\n  }\n  else if (char_value == '\\x03') {\n    *data = &DAT_20000338;\n  }\n  else if (char_value == '\\x01') {\n    *data = &DAT_20000338;\n  }\n  else {\n    *data = &DAT_20000338;\n  }\n  initialize_hardware_serial_08004388(*data,param,6);\n  if (1 < *(byte *)((int)data + 6)) {\n    process_parameter_08004110(*(byte *)((int)data + 6),1);\n    process_data_080041bc(*(undefined *)((int)data + 6),0);\n  }\n  do {\n    result = (**(code **)(**data + 0xc))();\n  } while (-1 < result);\n  *(undefined *)((int)data + 0x49) = 0;\n  *(undefined *)((int)data + 0x4a) = 0;\n  *(undefined2 *)(data + 0x15) = 0;\n  *(undefined2 *)((int)data + 0x52) = 0;\n  *(undefined2 *)(data + 0x14) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000600": "initialize_and_process_data_08000600",
                "param_1": "data",
                "param_2": "param",
                "cVar1": "char_value",
                "iVar2": "result"
            },
            "calling": [
                "FUN_08000c4c"
            ],
            "called": [
                "FUN_080041bc",
                "FUN_08004110",
                "FUN_08004388"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800066c": {
            "entrypoint": "0x0800066c",
            "current_name": "initialize_data_0800066c",
            "code": "\nvoid initializeData_0800066c(int dataPointer,undefined value,int count,undefined data)\n\n{\n  *(undefined *)(dataPointer + 4) = value;\n  if (3 < count) {\n    count = 0;\n  }\n  *(char *)(dataPointer + 5) = (char)count;\n  *(undefined *)(dataPointer + 6) = data;\n  *(undefined2 *)(dataPointer + 0x56) = 1000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800066c": "initialize_data_0800066c",
                "param_1": "dataPointer",
                "param_2": "value",
                "param_3": "count",
                "param_4": "data"
            },
            "calling": [
                "FUN_08000682"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000682": {
            "entrypoint": "0x08000682",
            "current_name": "initialize_and_return_08000682",
            "code": "\nundefined4 initialize_and_return_08000682(undefined4 input_param)\n\n{\n  initialize_data();\n  return input_param;\n}\n\n",
            "renaming": {
                "FUN_08000682": "initialize_and_return_08000682",
                "param_1": "input_param",
                "initialize_data_0800066c": "initialize_data"
            },
            "calling": [
                "FUN_08000690"
            ],
            "called": [
                "FUN_0800066c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000690": {
            "entrypoint": "0x08000690",
            "current_name": "check_parameters_08000690",
            "code": "\nvoid check_parameters_08000690(int condition,int value,undefined4 param3,undefined4 param4)\n\n{\n  if (condition != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    initialize_and_return_08000682(&DAT_20000124,1,0,0,param4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000690": "check_parameters_08000690",
                "param_1": "condition",
                "param_2": "value",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [],
            "called": [
                "FUN_08000682"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080006b4": {
            "entrypoint": "0x080006b4",
            "current_name": "process_data_080006b4",
            "code": "\nint processData_080006b4(int **data)\n\n{\n  bool isOverflow;\n  undefined returnValue;\n  int result;\n  byte counter;\n  \n  if (1 < *(byte *)((int)data + 6)) {\n    processData_080006b4_2(*(byte *)((int)data + 6),0);\n  }\n  *(undefined *)((int)data + 0x49) = 0;\n  if (*(byte *)((int)data + 5) < 4) {\n    isOverflow = false;\n    while (result = (**(code **)(**data + 8))(), result != 0) {\n      counter = *(byte *)((int)data + 0x49);\n      returnValue = (**(code **)(**data + 0xc))();\n      *(undefined *)((int)data + counter + 9) = returnValue;\n      counter = *(char *)((int)data + 0x49) + 1;\n      *(byte *)((int)data + 0x49) = counter;\n      if (0x3f < counter) {\n        isOverflow = true;\n      }\n    }\n  }\n  else {\n    isOverflow = false;\n  }\n  *(short *)(data + 0x14) = *(short *)(data + 0x14) + 1;\n  if (isOverflow) {\n    *(short *)(data + 0x15) = *(short *)(data + 0x15) + 1;\n    return -3;\n  }\n  return (int)*(char *)((int)data + 0x49);\n}\n\n",
            "renaming": {
                "FUN_080006b4": "process_data_080006b4",
                "param_1": "data",
                "bVar1": "isOverflow",
                "uVar2": "returnValue",
                "iVar3": "result",
                "bVar4": "counter",
                "process_data_080041bc": "processData_2"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_080041bc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000728": {
            "entrypoint": "0x08000728",
            "current_name": "calculate_checksum_08000728",
            "code": "\nuint calculateChecksum_08000728(int dataPointer,int dataSize)\n\n{\n  byte bitIndex;\n  uint checksum;\n  uint leastSignificantBit;\n  uint index;\n  \n  checksum = 0xffff;\n  for (index = 0; (int)index < dataSize; index = index + 1 & 0xff) {\n    checksum = checksum ^ *(byte *)(dataPointer + index + 9);\n    for (bitIndex = 1; bitIndex < 9; bitIndex = bitIndex + 1) {\n      leastSignificantBit = checksum & 1;\n      checksum = checksum >> 1;\n      if (leastSignificantBit != 0) {\n        checksum = checksum ^ 0xa001;\n      }\n    }\n  }\n  return (checksum & 0xff) << 8 | checksum >> 8;\n}\n\n",
            "renaming": {
                "FUN_08000728": "calculate_checksum_08000728",
                "param_1": "dataPointer",
                "param_2": "dataSize",
                "bVar1": "bitIndex",
                "uVar2": "checksum",
                "uVar3": "leastSignificantBit",
                "uVar4": "index"
            },
            "calling": [
                "FUN_0800076c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800076c": {
            "entrypoint": "0x0800076c",
            "current_name": "update_checksum_and_process_data_0800076c",
            "code": "\nvoid updateChecksumAndProcessData_0800076c(int **data,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined2 checksum;\n  int result;\n  uint index;\n  \n  index = (uint)*(byte *)((int)data + 0x49);\n  checksum = calculateChecksum(data,index,param3,param4,param4);\n  *(char *)((int)data + index + 9) = (char)((ushort)checksum >> 8);\n  index = index + 1 & 0xff;\n  *(char *)((int)data + index + 9) = (char)checksum;\n  *(char *)((int)data + 0x49) = (char)index + '\\x01';\n  if (1 < *(byte *)((int)data + 6)) {\n    processData(*(byte *)((int)data + 6),1);\n  }\n  if (*(byte *)((int)data + 5) < 4) {\n    (**(code **)(**data + 4))(*data,(int)data + 9,*(undefined *)((int)data + 0x49));\n  }\n  if (1 < *(byte *)((int)data + 6)) {\n    processData(*(byte *)((int)data + 6),0);\n  }\n  if (*(byte *)((int)data + 5) < 4) {\n    do {\n      result = (**(code **)(**data + 0xc))();\n    } while (-1 < result);\n  }\n  *(undefined *)((int)data + 0x49) = 0;\n  result = initializeData();\n  data[0x17] = (int *)(result + (uint)*(ushort *)((int)data + 0x56));\n  *(short *)((int)data + 0x52) = *(short *)((int)data + 0x52) + 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800076c": "update_checksum_and_process_data_0800076c",
                "param_1": "data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "checksum",
                "iVar2": "result",
                "uVar3": "index",
                "calculate_checksum_08000728": "calculateChecksum",
                "process_data_080041bc": "processData",
                "initialize_data_08004204": "initializeData"
            },
            "calling": [
                "FUN_08000a7a",
                "FUN_08000998",
                "FUN_08000b04",
                "FUN_08000a4e",
                "FUN_08000b54",
                "FUN_080008e2",
                "FUN_08000a00"
            ],
            "called": [
                "FUN_080041bc",
                "FUN_08000728",
                "FUN_08004204"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080007f0": {
            "entrypoint": "0x080007f0",
            "current_name": "check_condition_080007f0",
            "code": "\nundefined4 check_condition_080007f0(int input_param,undefined4 flag,uint size,undefined4 param)\n\n{\n  bool is_valid;\n  byte combined_value;\n  char combined_value1;\n  char combined_value2;\n  int combined_value3;\n  uint counter;\n  int counter_value;\n  \n  counter = 0;\n  do {\n    if (7 < counter) {\n      is_valid = false;\nLAB_0800080a:\n      if (!is_valid) {\n        *(short *)(input_param + 0x54) = *(short *)(input_param + 0x54) + 1;\n        return 1;\n      }\n      counter_value = *(byte *)(input_param + 10) - 1;\n      switch(*(byte *)(input_param + 10)) {\n      case 1:\n      case 2:\n      case 0xf:\n        goto switchD_08000816_caseD_1;\n      case 3:\n      case 4:\n      case 0x10:\n        combined_value1 = combine_values_08004640(*(undefined *)(input_param + 0xb),*(undefined *)(input_param + 0xc),size,\n                             counter_value,param);\n        combined_value2 = combine_values_08004640(*(undefined *)(input_param + 0xd),*(undefined *)(input_param + 0xe));\n        if (*(byte *)(input_param + 0x60) < (byte)(combined_value2 + combined_value1)) {\n          return 2;\n        }\n        return 0;\n      case 5:\n        counter_value = combine_values_08004640(*(undefined *)(input_param + 0xb),*(undefined *)(input_param + 0xc),size,\n                             counter_value,param);\n        if ((uint)*(byte *)(input_param + 0x60) < (uint)(counter_value << 0x14) >> 0x18) {\n          return 2;\n        }\n        return 0;\n      case 6:\n        combined_value = combine_values_08004640(*(undefined *)(input_param + 0xb),*(undefined *)(input_param + 0xc),size,\n                             counter_value,param);\n        if (*(byte *)(input_param + 0x60) < combined_value) {\n          return 2;\n        }\n        return 0;\n      default:\n        return 0;\n      }\n    }\n    size = (uint)*(byte *)(input_param + 10);\n    if ((byte)(&DAT_08005a10)[counter] == size) {\n      is_valid = true;\n      goto LAB_0800080a;\n    }\n    counter = counter + 1 & 0xff;\n  } while( true );\nswitchD_08000816_caseD_1:\n  counter_value = combine_values_08004640(*(undefined *)(input_param + 0xb),*(undefined *)(input_param + 0xc),size,counter_value,\n                       param);\n  combined_value3 = combine_values_08004640(*(undefined *)(input_param + 0xd),*(undefined *)(input_param + 0xe));\n  if ((uint)*(byte *)(input_param + 0x60) <\n      (((uint)(counter_value << 0xc) >> 0x10) + ((uint)(combined_value3 << 0xc) >> 0x10) & 0xff)) {\n    return 2;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080007f0": "check_condition_080007f0",
                "param_1": "input_param",
                "param_2": "flag",
                "param_3": "size",
                "param_4": "param",
                "bVar1": "is_valid",
                "bVar2": "combined_value",
                "cVar3": "combined_value1",
                "cVar4": "combined_value2",
                "iVar5": "combined_value3",
                "uVar6": "counter",
                "iVar7": "counter_value"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080008cc": {
            "entrypoint": "0x080008cc",
            "current_name": "copy_and_modify_data_080008cc",
            "code": "\nvoid copyAndModifyData_080008cc(int dataPointer,undefined newValue)\n\n{\n  *(undefined *)(dataPointer + 9) = *(undefined *)(dataPointer + 4);\n  *(byte *)(dataPointer + 10) = *(byte *)(dataPointer + 10) ^ 0x80;\n  *(undefined *)(dataPointer + 0xb) = newValue;\n  *(undefined *)(dataPointer + 0x49) = 3;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080008cc": "copy_and_modify_data_080008cc",
                "param_1": "dataPointer",
                "param_2": "newValue"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080008e2": {
            "entrypoint": "0x080008e2",
            "current_name": "process_data_080008e2",
            "code": "\nint process_data_080008e2(int data_buffer,int lookup_table,undefined4 param_3,undefined4 param_4)\n\n{\n  int combined_value;\n  uint value_count;\n  uint loop_counter;\n  uint bit_counter;\n  char temp_char;\n  int update_offset;\n  \n  combined_value = combine_values_08004640(*(undefined *)(data_buffer + 0xb),*(undefined *)(data_buffer + 0xc),param_3,param_4,\n                       param_4);\n  value_count = combine_values_08004640(*(undefined *)(data_buffer + 0xd),*(undefined *)(data_buffer + 0xe));\n  temp_char = (char)((value_count << 0x15) >> 0x18);\n  if ((value_count & 7) != 0) {\n    temp_char = temp_char + '\\x01';\n  }\n  *(char *)(data_buffer + 0xb) = temp_char;\n  *(undefined *)(data_buffer + 0x49) = 3;\n  bit_counter = 0;\n  for (loop_counter = 0; (int)loop_counter < (int)value_count; loop_counter = loop_counter + 1 & 0xffff) {\n    if (((int)(uint)*(ushort *)(lookup_table + ((loop_counter + combined_value) * 0x100000 >> 0x18) * 2) >>\n         (loop_counter + combined_value & 0xf) & 1U) == 0) {\n      update_offset = (uint)*(byte *)(data_buffer + 0x49) + data_buffer;\n      *(byte *)(update_offset + 9) = *(byte *)(update_offset + 9) & ~(byte)(1 << bit_counter);\n    }\n    else {\n      update_offset = (uint)*(byte *)(data_buffer + 0x49) + data_buffer;\n      *(byte *)(update_offset + 9) = *(byte *)(update_offset + 9) | (byte)(1 << bit_counter);\n    }\n    bit_counter = bit_counter + 1 & 0xff;\n    if (7 < bit_counter) {\n      *(char *)(data_buffer + 0x49) = *(char *)(data_buffer + 0x49) + '\\x01';\n      bit_counter = 0;\n    }\n  }\n  if ((value_count & 7) != 0) {\n    *(char *)(data_buffer + 0x49) = *(char *)(data_buffer + 0x49) + '\\x01';\n  }\n  temp_char = *(char *)(data_buffer + 0x49);\n  update_checksum_and_process_data_080008e2_0800076c(data_buffer);\n  return (int)(char)(temp_char + '\\x02');\n}\n\n",
            "renaming": {
                "FUN_080008e2": "process_data_080008e2",
                "param_1": "data_buffer",
                "param_2": "lookup_table",
                "iVar1": "combined_value",
                "uVar2": "value_count",
                "uVar3": "loop_counter",
                "uVar4": "bit_counter",
                "cVar5": "temp_char",
                "iVar6": "update_offset"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800076c",
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000998": {
            "entrypoint": "0x08000998",
            "current_name": "combine_and_process_data_08000998",
            "code": "\nint combineAndProcessData_08000998(int inputBuffer,int dataBuffer,undefined4 param3,undefined4 param4)\n\n{\n  byte currentByte;\n  char currentChar;\n  byte combinedValue;\n  byte secondCombinedValue;\n  uint index;\n  uint nextIndex;\n  \n  combinedValue = combine_values_08004640(*(undefined *)(inputBuffer + 0xb),*(undefined *)(inputBuffer + 0xc),param3,param4,\n                       param4);\n  secondCombinedValue = combine_values_08004640(*(undefined *)(inputBuffer + 0xd),*(undefined *)(inputBuffer + 0xe));\n  *(byte *)(inputBuffer + 0xb) = secondCombinedValue << 1;\n  *(undefined *)(inputBuffer + 0x49) = 3;\n  for (index = (uint)combinedValue; index < (uint)combinedValue + (uint)secondCombinedValue; index = index + 1 & 0xff) {\n    currentByte = *(byte *)(inputBuffer + 0x49);\n    *(char *)(inputBuffer + (uint)currentByte + 9) = (char)((ushort)*(undefined2 *)(dataBuffer + index * 2) >> 8)\n    ;\n    nextIndex = currentByte + 1 & 0xff;\n    currentChar = (char)nextIndex;\n    *(char *)(inputBuffer + 0x49) = currentChar;\n    *(undefined *)(inputBuffer + nextIndex + 9) = *(undefined *)(dataBuffer + index * 2);\n    *(char *)(inputBuffer + 0x49) = currentChar + '\\x01';\n  }\n  currentChar = *(char *)(inputBuffer + 0x49);\n  update_checksum_and_process_data_0800076c(inputBuffer);\n  return (int)(char)(currentChar + '\\x02');\n}\n\n",
            "renaming": {
                "FUN_08000998": "combine_and_process_data_08000998",
                "param_1": "inputBuffer",
                "param_2": "dataBuffer",
                "param_3": "param3",
                "param_4": "param4",
                "bVar1": "currentByte",
                "cVar2": "currentChar",
                "bVar3": "combinedValue",
                "bVar4": "secondCombinedValue",
                "uVar5": "index",
                "uVar6": "nextIndex"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800076c",
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a00": {
            "entrypoint": "0x08000a00",
            "current_name": "update_value_in_buffer_08000a00",
            "code": "\nundefined4 updateValueInBuffer_08000a00(int bufferPtr,int targetBufferPtr,undefined4 firstValue,undefined4 secondValue)\n\n{\n  uint combinedValue;\n  uint shiftedValue;\n  \n  combinedValue = combine_values_08004640(*(undefined *)(bufferPtr + 0xb),*(undefined *)(bufferPtr + 0xc),firstValue,secondValue,\n                       secondValue);\n  shiftedValue = (combinedValue << 0x14) >> 0x18;\n  if (*(char *)(bufferPtr + 0xd) == -1) {\n    *(ushort *)(targetBufferPtr + shiftedValue * 2) =\n         (ushort)(1 << (combinedValue & 0xf)) | *(ushort *)(targetBufferPtr + shiftedValue * 2);\n  }\n  else {\n    *(ushort *)(targetBufferPtr + shiftedValue * 2) =\n         *(ushort *)(targetBufferPtr + shiftedValue * 2) & ~(ushort)(1 << (combinedValue & 0xf));\n  }\n  *(undefined *)(bufferPtr + 0x49) = 6;\n  processData(bufferPtr);\n  return 8;\n}\n\n",
            "renaming": {
                "FUN_08000a00": "update_value_in_buffer_08000a00",
                "param_1": "bufferPtr",
                "param_2": "targetBufferPtr",
                "param_3": "firstValue",
                "param_4": "secondValue",
                "uVar1": "combinedValue",
                "uVar2": "shiftedValue",
                "update_checksum_and_process_data_0800076c": "processData"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800076c",
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a4e": {
            "entrypoint": "0x08000a4e",
            "current_name": "update_and_process_data_08000a4e",
            "code": "\nundefined4 update_and_process_data_08000a4e(int input_data,int output_data)\n\n{\n  byte combined_value_1;\n  undefined2 combined_value_2;\n  \n  combined_value_1 = combine_values_08004640(*(undefined *)(input_data + 0xb),*(undefined *)(input_data + 0xc));\n  combined_value_2 = combine_values_08004640(*(undefined *)(input_data + 0xd),*(undefined *)(input_data + 0xe));\n  *(undefined2 *)(output_data + (uint)combined_value_1 * 2) = combined_value_2;\n  *(undefined *)(input_data + 0x49) = 6;\n  update_checksum_and_process_data_0800076c(input_data);\n  return 8;\n}\n\n",
            "renaming": {
                "FUN_08000a4e": "update_and_process_data_08000a4e",
                "param_1": "input_data",
                "param_2": "output_data",
                "bVar1": "combined_value_1",
                "uVar2": "combined_value_2"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800076c",
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a7a": {
            "entrypoint": "0x08000a7a",
            "current_name": "process_data_08000a7a",
            "code": "\nundefined4 process_data_08000a7a(int data_ptr,int output_ptr,undefined4 param_3,undefined4 param_4)\n\n{\n  int combined_value_1;\n  int combined_value_2;\n  uint loop_index;\n  uint bit_index;\n  uint bit_position;\n  uint byte_index;\n  uint offset;\n  \n  combined_value_1 = combine_values_08004640(*(undefined *)(data_ptr + 0xb),*(undefined *)(data_ptr + 0xc),param_3,param_4,\n                       param_4);\n  combined_value_2 = combine_values_08004640(*(undefined *)(data_ptr + 0xd),*(undefined *)(data_ptr + 0xe));\n  bit_index = 0;\n  offset = 7;\n  for (loop_index = 0; (int)loop_index < combined_value_2; loop_index = loop_index + 1 & 0xffff) {\n    byte_index = (loop_index + combined_value_1) * 0x100000 >> 0x18;\n    bit_position = loop_index + combined_value_1 & 0xf;\n    if (((int)(uint)*(byte *)(data_ptr + offset + 9) >> bit_index & 1U) == 0) {\n      *(ushort *)(output_ptr + byte_index * 2) = *(ushort *)(output_ptr + byte_index * 2) & ~(ushort)(1 << bit_position);\n    }\n    else {\n      *(ushort *)(output_ptr + byte_index * 2) = (ushort)(1 << bit_position) | *(ushort *)(output_ptr + byte_index * 2);\n    }\n    bit_index = bit_index + 1 & 0xff;\n    if (7 < bit_index) {\n      offset = offset + 1 & 0xff;\n      bit_index = 0;\n    }\n  }\n  *(undefined *)(data_ptr + 0x49) = 6;\n  update_checksum_and_process_data_08000a7a(data_ptr);\n  return 8;\n}\n\n",
            "renaming": {
                "FUN_08000a7a": "process_data_08000a7a",
                "param_1": "data_ptr",
                "param_2": "output_ptr",
                "iVar1": "combined_value_1",
                "iVar2": "combined_value_2",
                "uVar3": "loop_index",
                "uVar4": "bit_index",
                "uVar5": "bit_position",
                "uVar6": "byte_index",
                "uVar7": "offset",
                "update_checksum_and_process_data_0800076c": "update_checksum_and_process_data"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800076c",
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000b04": {
            "entrypoint": "0x08000b04",
            "current_name": "process_data_08000b04",
            "code": "\nint process_data_08000b04(int data_ptr,int result_ptr)\n\n{\n  byte byte1;\n  byte byte2;\n  char char1;\n  undefined2 combined_value;\n  uint counter;\n  \n  byte1 = *(byte *)(data_ptr + 0xc);\n  byte2 = *(byte *)(data_ptr + 0xe);\n  *(undefined *)(data_ptr + 0xd) = 0;\n  *(byte *)(data_ptr + 0xe) = byte2;\n  *(undefined *)(data_ptr + 0x49) = 6;\n  for (counter = 0; counter < byte2; counter = counter + 1 & 0xff) {\n    combined_value = combine_values_08004640(*(undefined *)(counter * 2 + data_ptr + 0x10),\n                         *(undefined *)(data_ptr + (counter + 4) * 2 + 9));\n    *(undefined2 *)(result_ptr + (byte1 + counter) * 2) = combined_value;\n  }\n  char1 = *(char *)(data_ptr + 0x49);\n  update_checksum_and_process_data_08000b04_0800076c(data_ptr);\n  return (int)(char)(char1 + '\\x02');\n}\n\n",
            "renaming": {
                "FUN_08000b04": "process_data_08000b04",
                "param_1": "data_ptr",
                "param_2": "result_ptr",
                "bVar1": "byte1",
                "bVar2": "byte2",
                "cVar3": "char1",
                "uVar4": "combined_value",
                "uVar5": "counter"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800076c",
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000b54": {
            "entrypoint": "0x08000b54",
            "current_name": "process_data_08000b54",
            "code": "\nint processData_08000b54(int **inputParams,int *data,undefined4 value)\n\n{\n  byte result;\n  int conditionalResult;\n  uint length;\n  int returnValue;\n  \n  inputParams[0x13] = data;\n  *(char *)(inputParams + 0x18) = (char)value;\n  if (*(byte *)((int)inputParams + 5) < 4) {\n    result = (**(code **)(**inputParams + 8))();\n    length = (uint)result;\n  }\n  if (length == 0) {\n    returnValue = 0;\n  }\n  else if ((int)length < 8) {\n    returnValue = 0;\n  }\n  else {\n    returnValue = process_data_080006b4(inputParams);\n    *(char *)(inputParams + 2) = (char)returnValue;\n    if (*(char *)((int)inputParams + 9) == *(char *)(inputParams + 1)) {\n      conditionalResult = check_condition_080007f0(inputParams);\n      if (conditionalResult < 1) {\n        conditionalResult = initialize_data_08004204();\n        inputParams[0x17] = (int *)((uint)*(ushort *)((int)inputParams + 0x56) + conditionalResult);\n        *(undefined *)(inputParams + 2) = 0;\n        switch(*(undefined *)((int)inputParams + 10)) {\n        case 1:\n        case 2:\n          returnValue = process_data_080008e2(inputParams,data,value);\n          break;\n        case 3:\n        case 4:\n          returnValue = combine_and_process_data_08000998(inputParams,data,value);\n          break;\n        case 5:\n          returnValue = update_value_in_buffer_08000a00(inputParams,data,value);\n          break;\n        case 6:\n          returnValue = update_and_process_data_08000a4e(inputParams,data,value);\n          break;\n        case 0xf:\n          returnValue = process_data_08000a7a(inputParams,data,value);\n          break;\n        case 0x10:\n          returnValue = process_data_08000b04(inputParams,data,value);\n        }\n      }\n      else {\n        if (conditionalResult != 0xff) {\n          copy_and_modify_data_080008cc(inputParams,conditionalResult);\n          update_checksum_and_process_data_0800076c(inputParams);\n        }\n        *(char *)(inputParams + 2) = (char)conditionalResult;\n        returnValue = (int)(char)conditionalResult;\n      }\n    }\n    else {\n      returnValue = 0;\n    }\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08000b54": "process_data_08000b54",
                "param_1": "inputParams",
                "param_2": "data",
                "param_3": "value",
                "bVar1": "result",
                "iVar2": "conditionalResult",
                "unaff_r5": "length",
                "iVar3": "returnValue"
            },
            "calling": [
                "FUN_08000c64"
            ],
            "called": [
                "FUN_08000a7a",
                "FUN_0800076c",
                "FUN_080008cc",
                "FUN_08000998",
                "FUN_08000b04",
                "FUN_08000a4e",
                "FUN_080007f0",
                "FUN_080006b4",
                "FUN_080008e2",
                "FUN_08000a00",
                "FUN_08004204"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000c4c": {
            "entrypoint": "0x08000c4c",
            "current_name": "initialize_and_execute_08000c4c",
            "code": "\nvoid initialize_and_execute_08000c4c(void)\n\n{\n  execute_interrupt_handler(0);\n  initialize_and_process_data(&DAT_20000124,0x4b00);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000c4c": "initialize_and_execute_08000c4c",
                "execute_interrupt_handler_080005e4": "execute_interrupt_handler",
                "initialize_and_process_data_08000600": "initialize_and_process_data"
            },
            "calling": [
                "FUN_08004658"
            ],
            "called": [
                "FUN_080005e4",
                "FUN_08000600"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000c64": {
            "entrypoint": "0x08000c64",
            "current_name": "process_data_08000c64",
            "code": "\nvoid processData_08000c64(void)\n\n{\n  undefined4 input;\n  \n  process_data_08000b54(&DAT_20000124,&DAT_20000004,0x10,input,input);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000c64": "process_data_08000c64",
                "in_r3": "input"
            },
            "calling": [
                "FUN_08004658"
            ],
            "called": [
                "FUN_08000b54"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000c8c": {
            "entrypoint": "0x08000c8c",
            "current_name": "initialize_and_configure_device_08000c8c",
            "code": "\n\n\nvoid initialize_and_configure_device_08000c8c(void)\n\n{\n  uint uVar1;\n  undefined4 flag;\n  undefined4 address;\n  undefined4 counter;\n  undefined4 memory;\n  undefined4 size;\n  undefined4 value;\n  undefined4 index;\n  undefined4 iteration;\n  undefined4 flag_value;\n  undefined4 flag_bit;\n  undefined4 start;\n  undefined4 data_size;\n  undefined4 block_size;\n  \n  _DAT_40023840 = _DAT_40023840 | 0x10000000;\n  _DAT_40007000 = _DAT_40007000 | 0xc000;\n  flag = 1;\n  address = 0x50000;\n  counter = 2;\n  memory = 0x400000;\n  size = 8;\n  value = 0x150;\n  index = 2;\n  iteration = 7;\n  initialize_device_0800201c(&flag);\n  check_data_conditions_08001f9c();\n  flag_value = 0xf;\n  flag_bit = 2;\n  start = 0;\n  data_size = 0x1400;\n  block_size = 0x1000;\n  configure_device_08002488(&flag_value,5);\n  uVar1 = get_global_variable_080025e0();\n  initialize_data_08000ee0(uVar1 / 1000);\n  update_flag_value_08000f2c(4);\n  update_character_08000e60(0xffffffff,0,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000c8c": "initialize_and_configure_device_08000c8c",
                "local_54": "flag",
                "local_50": "address",
                "local_3c": "counter",
                "local_38": "memory",
                "local_34": "size",
                "local_30": "value",
                "local_2c": "index",
                "local_28": "iteration",
                "local_24": "flag_value",
                "local_20": "flag_bit",
                "local_1c": "start",
                "local_18": "data_size",
                "local_14": "block_size"
            },
            "calling": [
                "FUN_080034ce"
            ],
            "called": [
                "FUN_080025e0",
                "FUN_08002488",
                "FUN_08000f2c",
                "FUN_08000ee0",
                "FUN_0800201c",
                "FUN_08001f9c",
                "FUN_08000e60"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "entry": {
            "entrypoint": "0x08000d3c",
            "current_name": "entry",
            "code": "\n/* WARNING: This function may have set the stack pointer */\n\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined4 *)(iVar1 + 0x20000000) < &DAT_20000104; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x8006034);\n  }\n  for (puVar2 = &DAT_20000104; puVar2 < &DAT_20000678; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  initialize_memory_080035bc();\n  execute_functions_08004884();\n  UNRECOVERED_JUMPTABLE = (code *)0x8000d72;\n  execute_data_processing_loop_08004658();\n                    /* WARNING: Could not recover jumptable at 0x08000d72. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "renaming": {},
            "calling": [],
            "called": [
                "FUN_08004658",
                "FUN_08004884",
                "FUN_080035bc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000d8e": {
            "entrypoint": "0x08000d8e",
            "current_name": "initialize_device_08000d8e",
            "code": "\nvoid initialize_device_08000d8e(void)\n\n{\n  initialize_device_08000d8e();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000d8e": "initialize_device_08000d8e",
                "initialize_device_080034ce": "initialize_device"
            },
            "calling": [
                "FUN_08004648"
            ],
            "called": [
                "FUN_080034ce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000d96": {
            "entrypoint": "0x08000d96",
            "current_name": "FUNC_08000d96",
            "code": "\nvoid FUNC_08000d96(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000d96": "FUNC_08000d96"
            },
            "calling": [
                "FUN_08000de4"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08000d98": {
            "entrypoint": "0x08000d98",
            "current_name": "initialize_and_update_character_08000d98",
            "code": "\nundefined4 initializeAndUpdateCharacter_08000d98(uint characterLevel)\n\n{\n  int initializeResult;\n  \n  initializeResult = initialize_data_08000ee0(DAT_2000002c / (1000 / DAT_20000024));\n  if (initializeResult != 0) {\n    return 1;\n  }\n  if (0xf < characterLevel) {\n    return 1;\n  }\n  update_character_08000e60(0xffffffff,characterLevel,0);\n  DAT_20000028 = characterLevel;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08000d98": "initialize_and_update_character_08000d98",
                "param_1": "characterLevel",
                "iVar1": "initializeResult"
            },
            "calling": [
                "FUN_08002488",
                "FUN_08000de4"
            ],
            "called": [
                "FUN_08000ee0",
                "FUN_08000e60"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000de4": {
            "entrypoint": "0x08000de4",
            "current_name": "initialize_and_update_08000de4",
            "code": "\n\n\nundefined4 initialize_and_update_08000de4(void)\n\n{\n  _DAT_40023c00 = _DAT_40023c00 | 0x700;\n  update_value(3);\n  initialize_and_update_08000de4_character(0xf);\n  FUNC_08000d96();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08000de4": "initialize_and_update_08000de4",
                "update_value_08000e3c": "update_value",
                "initialize_and_update_character_08000d98": "initialize_and_update_character"
            },
            "calling": [
                "FUN_080034ce"
            ],
            "called": [
                "FUN_08000d98",
                "FUN_08000d96",
                "FUN_08000e3c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000e18": {
            "entrypoint": "0x08000e18",
            "current_name": "update_dat_value_08000e18",
            "code": "\nvoid updateDatValue_08000e18(void)\n\n{\n  DAT_20000670 = (uint)DAT_20000024 + DAT_20000670;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000e18": "update_dat_value_08000e18"
            },
            "calling": [
                "FUN_08003476"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000e30": {
            "entrypoint": "0x08000e30",
            "current_name": "get_data_08000e30",
            "code": "\nundefined4 get_data_08000e30(void)\n\n{\n  return DAT_20000670;\n}\n\n",
            "renaming": {
                "FUN_08000e30": "get_data_08000e30"
            },
            "calling": [
                "FUN_08002d0c",
                "FUN_08002488",
                "FUN_0800346c",
                "FUN_0800201c",
                "FUN_08003d18",
                "FUN_08002dd0",
                "FUN_08001f9c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000e3c": {
            "entrypoint": "0x08000e3c",
            "current_name": "update_value_08000e3c",
            "code": "\n\n\nvoid updateValue_08000e3c(uint newValue)\n\n{\n  _DAT_e000ed0c = (newValue & 7) << 8 | _DAT_e000ed0c & 0xf8ff | 0x5fa0000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000e3c": "update_value_08000e3c",
                "param_1": "newValue"
            },
            "calling": [
                "FUN_08004648",
                "FUN_08000de4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000e60": {
            "entrypoint": "0x08000e60",
            "current_name": "update_character_08000e60",
            "code": "\n\n\nvoid updateCharacter_08000e60(uint characterPosition,uint bitmask,uint value)\n\n{\n  uint shiftAmount;\n  uint remainingBits;\n  \n  shiftAmount = (uint)(_DAT_e000ed0c << 0x15) >> 0x1d;\n  remainingBits = 7 - shiftAmount;\n  if (3 < remainingBits) {\n    remainingBits = 4;\n  }\n  if (shiftAmount + 4 < 7) {\n    shiftAmount = 0;\n  }\n  else {\n    shiftAmount = shiftAmount - 3;\n  }\n  shiftAmount = (bitmask & (1 << (remainingBits & 0xff)) - 1U) << (shiftAmount & 0xff) |\n          (1 << (shiftAmount & 0xff)) - 1U & value;\n  if ((int)characterPosition < 0) {\n    *(char *)((characterPosition & 0xf) + 0xe000ed14) = (char)(shiftAmount << 4);\n  }\n  else {\n    *(char *)(characterPosition + 0xe000e400) = (char)(shiftAmount << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000e60": "update_character_08000e60",
                "param_1": "characterPosition",
                "param_2": "bitmask",
                "param_3": "value",
                "uVar1": "shiftAmount",
                "uVar2": "remainingBits"
            },
            "calling": [
                "FUN_08000c8c",
                "FUN_08000d98",
                "FUN_08003eac",
                "FUN_08003e54"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000ec4": {
            "entrypoint": "0x08000ec4",
            "current_name": "set_bit_08000ec4",
            "code": "\nvoid setBit_08000ec4(uint index)\n\n{\n  if (-1 < (int)index) {\n    *(int *)((index >> 5) * 4 + -0x1fff1f00) = 1 << (index & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000ec4": "set_bit_08000ec4",
                "param_1": "index"
            },
            "calling": [
                "FUN_08003eac",
                "FUN_08003e54"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000ee0": {
            "entrypoint": "0x08000ee0",
            "current_name": "initialize_data_08000ee0",
            "code": "\n\n\nundefined4 initializeData_08000ee0(int inputValue)\n\n{\n  if (inputValue - 1U < 0x1000000) {\n    _DAT_e000e014 = inputValue - 1U;\n    DAT_e000ed23 = 0xf0;\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08000ee0": "initialize_data_08000ee0",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08000c8c",
                "FUN_08000d98"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000f0c": {
            "entrypoint": "0x08000f0c",
            "current_name": "set_bit_at_index_08000f0c",
            "code": "\nvoid setBitAtIndex_08000f0c(uint index)\n\n{\n  if (-1 < (int)index) {\n    *(int *)(((index >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (index & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000f0c": "set_bit_at_index_08000f0c",
                "param_1": "index"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000f2c": {
            "entrypoint": "0x08000f2c",
            "current_name": "update_flag_value_08000f2c",
            "code": "\n\n\nvoid updateFlagValue_08000f2c(int flagValue)\n\n{\n  if (flagValue != 4) {\n    _DAT_e000e010 = _DAT_e000e010 & 0xfffffffb;\n    return;\n  }\n  _DAT_e000e010 = _DAT_e000e010 | 4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000f2c": "update_flag_value_08000f2c",
                "param_1": "flagValue"
            },
            "calling": [
                "FUN_08000c8c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000f4c": {
            "entrypoint": "0x08000f4c",
            "current_name": "FUNC_08000f4c",
            "code": "\nvoid FUNC_08000f4c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000f4c": "FUNC_08000f4c"
            },
            "calling": [
                "FUN_08000f4e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08000f4e": {
            "entrypoint": "0x08000f4e",
            "current_name": "initialize_application_08000f4e",
            "code": "\nvoid initializeApplication_08000f4e(void)\n\n{\n  FUNC_08000f4c();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000f4e": "initialize_application_08000f4e"
            },
            "calling": [
                "FUN_08003476"
            ],
            "called": [
                "FUN_08000f4c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000f56": {
            "entrypoint": "0x08000f56",
            "current_name": "initialize_data_08000f56",
            "code": "\nundefined4 initializeData_08000f56(int data_ptr)\n\n{\n  if (data_ptr != 0) {\n    *(undefined *)(data_ptr + 4) = 2;\n    clearDataFlags();\n    *(undefined4 *)(data_ptr + 0x10) = 0;\n    *(undefined *)(data_ptr + 4) = 0;\n    *(undefined *)(data_ptr + 5) = 0;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08000f56": "initialize_data_08000f56",
                "param_1": "data_ptr",
                "clear_data_flags_080033c8": "clearDataFlags"
            },
            "calling": [
                "FUN_080033d8"
            ],
            "called": [
                "FUN_080033c8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000f72": {
            "entrypoint": "0x08000f72",
            "current_name": "clear_bit_and_set_flag_08000f72",
            "code": "\nundefined4 clearBitAndSetFlag_08000f72(uint **data,uint bitPosition)\n\n{\n  **data = **data & ~(1 << (bitPosition & 0xff));\n  *(undefined *)(data + 1) = 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08000f72": "clear_bit_and_set_flag_08000f72",
                "param_1": "data",
                "param_2": "bitPosition"
            },
            "calling": [
                "FUN_080033d8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000f8c": {
            "entrypoint": "0x08000f8c",
            "current_name": "check_and_modify_param_08000f8c",
            "code": "\nundefined4 checkAndModifyParam_08000f8c(uint **paramArray)\n\n{\n  if (*(char *)((int)paramArray + 0x35) != '\\x02') {\n    paramArray[0x15] = (uint *)0x80;\n    return 1;\n  }\n  *(undefined *)((int)paramArray + 0x35) = 5;\n  **paramArray = **paramArray & 0xfffffffe;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08000f8c": "check_and_modify_param_08000f8c",
                "param_1": "paramArray"
            },
            "calling": [
                "FUN_08002ffc",
                "FUN_08001ab0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000fb4": {
            "entrypoint": "0x08000fb4",
            "current_name": "update_registers_08000fb4",
            "code": "\n\n\nvoid updateRegisters_08000fb4(uint *registerIn,uint *registerOut)\n\n{\n  uint mask;\n  uint bitMask;\n  uint bitIndex;\n  uint bit;\n  uint val;\n  int byteIndex;\n  uint shift;\n  int offset;\n  \n  for (bitIndex = 0; bitIndex < 0x10; bitIndex = bitIndex + 1) {\n    bitMask = 1 << (bitIndex & 0xff);\n    bit = bitMask & *registerOut;\n    mask = _DAT_40013c0c;\n    if (bitMask == bit) {\n      if ((registerOut[1] == 2) || (registerOut[1] == 0x12)) {\n        byteIndex = (bitIndex >> 3) + 8;\n        offset = (bitIndex & 7) << 2;\n        registerIn[byteIndex] = registerIn[byteIndex] & ~(0xf << offset) | registerOut[4] << offset;\n      }\n      shift = bitIndex << 1;\n      mask = ~(3 << (shift & 0xff));\n      *registerIn = *registerIn & mask | (registerOut[1] & 3) << (shift & 0xff);\n      val = registerOut[1];\n      if (((val - 1 < 2) || (val == 0x11)) || (val == 0x12)) {\n        registerIn[2] = registerIn[2] & mask | registerOut[3] << (shift & 0xff);\n        registerIn[1] = registerIn[1] & ~bitMask | ((registerOut[1] << 0x1b) >> 0x1f) << (bitIndex & 0xff);\n      }\n      registerIn[3] = mask & registerIn[3] | registerOut[2] << (shift & 0xff);\n      mask = _DAT_40013c0c;\n      if ((registerOut[1] & 0x10000000) != 0) {\n        _DAT_40023844 = _DAT_40023844 | 0x4000;\n        offset = (bitIndex & 3) << 2;\n        if (registerIn == (uint *)0x40020000) {\n          byteIndex = 0;\n        }\n        else if (registerIn == (uint *)0x40020400) {\n          byteIndex = 1;\n        }\n        else if (registerIn == (uint *)0x40020800) {\n          byteIndex = 2;\n        }\n        else if (registerIn == (uint *)0x40020c00) {\n          byteIndex = 3;\n        }\n        else if (registerIn == (uint *)0x40021000) {\n          byteIndex = 4;\n        }\n        else if (registerIn == (uint *)0x40021400) {\n          byteIndex = 5;\n        }\n        else if (registerIn == (uint *)0x40021800) {\n          byteIndex = 6;\n        }\n        else if (registerIn == (uint *)0x40021c00) {\n          byteIndex = 7;\n        }\n        else if (registerIn == (uint *)0x40022000) {\n          byteIndex = 8;\n        }\n        else if (registerIn == (uint *)0x40022400) {\n          byteIndex = 9;\n        }\n        else {\n          byteIndex = 10;\n        }\n        *(uint *)(((bitIndex >> 2) + 2) * 4 + 0x40013800) =\n             *(uint *)(((bitIndex >> 2) + 2) * 4 + 0x40013800) & ~(0xf << offset) | byteIndex << offset;\n        mask = ~bit;\n        bitMask = _DAT_40013c00 & mask;\n        if ((registerOut[1] & 0x10000) != 0) {\n          bitMask = bit | _DAT_40013c00;\n        }\n        val = mask & _DAT_40013c04;\n        if ((registerOut[1] & 0x20000) != 0) {\n          val = bit | _DAT_40013c04;\n        }\n        shift = mask & _DAT_40013c08;\n        if ((registerOut[1] & 0x100000) != 0) {\n          shift = bit | _DAT_40013c08;\n        }\n        _DAT_40013c00 = bitMask;\n        _DAT_40013c04 = val;\n        _DAT_40013c08 = shift;\n        mask = mask & _DAT_40013c0c;\n        if ((registerOut[1] & 0x200000) != 0) {\n          mask = bit | _DAT_40013c0c;\n        }\n      }\n    }\n    _DAT_40013c0c = mask;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000fb4": "update_registers_08000fb4",
                "param_1": "registerIn",
                "param_2": "registerOut",
                "uVar1": "mask",
                "uVar2": "bitMask",
                "uVar3": "bitIndex",
                "uVar4": "bit",
                "uVar5": "val",
                "iVar6": "byteIndex",
                "uVar7": "shift",
                "iVar8": "offset"
            },
            "calling": [
                "FUN_08003978",
                "FUN_08003486"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001198": {
            "entrypoint": "0x08001198",
            "current_name": "update_value_in_memory_08001198",
            "code": "\nvoid updateValueInMemory_08001198(int memoryAddress,int newValue,int shiftValue)\n\n{\n  if (shiftValue == 0) {\n    *(int *)(memoryAddress + 0x18) = newValue << 0x10;\n    return;\n  }\n  *(int *)(memoryAddress + 0x18) = newValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001198": "update_value_in_memory_08001198",
                "param_1": "memoryAddress",
                "param_2": "newValue",
                "param_3": "shiftValue"
            },
            "calling": [
                "FUN_080034b6"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080011a4": {
            "entrypoint": "0x080011a4",
            "current_name": "update_and_process_data_080011a4",
            "code": "\n\n\nvoid update_and_process_data_080011a4(uint bitmask)\n\n{\n  if ((_DAT_40013c14 & bitmask) != 0) {\n    _DAT_40013c14 = bitmask;\n    process_bitwise_data();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080011a4": "update_and_process_data_080011a4",
                "param_1": "bitmask",
                "process_bitwise_data_080047d0": "process_bitwise_data"
            },
            "calling": [],
            "called": [
                "FUN_080047d0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080011c0": {
            "entrypoint": "0x080011c0",
            "current_name": "update_flag_value_080011c0",
            "code": "\nundefined4 updateFlagValue_080011c0(int *pointer)\n\n{\n  if (*(char *)((int)pointer + 0x3e) == '@') {\n    if (value1 == 0) {\n      *(uint *)(*pointer + 0x10) = value2 & 0xfe;\n    }\n    else {\n      *(uint *)(*pointer + 0x10) = value2 & 0xffU | 1;\n    }\n  }\n  else if (value3 == 0x4000) {\n    if (*(char *)((int)pointer + 0x3d) == '!') {\n      *(uint *)(*pointer + 0x10) = value2 & 0xfe;\n    }\n    else {\n      *(uint *)(*pointer + 0x10) = value2 & 0xffU | 1;\n    }\n  }\n  else if (value1 == 0) {\n    *(uint *)(*pointer + 0x10) = (uint)(value2 << 0x10) >> 0x17 & 6 | 0xf0;\n  }\n  else if (value1 == 1) {\n    *(uint *)(*pointer + 0x10) = (uint)(value2 << 0x10) >> 0x17 & 6 | 0xf1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080011c0": "update_flag_value_080011c0",
                "param_1": "pointer",
                "param_1[0x14]": "value1",
                "param_1[0x11]": "value2",
                "param_1[4]": "value3"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800124a": {
            "entrypoint": "0x0800124a",
            "current_name": "assign_byte_to_pointer_0800124a",
            "code": "\nundefined4 assignByteToPointer_0800124a(int *arrayPtr)\n\n{\n  *(uint *)(*arrayPtr + 0x10) = arrayPtr[0x11] & 0xff;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800124a": "assign_byte_to_pointer_0800124a",
                "param_1": "arrayPtr"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001256": {
            "entrypoint": "0x08001256",
            "current_name": "apply_flags_08001256",
            "code": "\nundefined4 applyFlags_08001256(uint **flags)\n\n{\n  uint *ptr;\n  \n  ptr = ptr[11];\n  if ((*(char *)((int)flags + 0x3d) == '\\\"') &&\n     ((ptr[20] != (uint *)0x0 || (*(char *)((int)flags + 0x3e) != '@')))) {\n    if ((ptr[20] == (uint *)0x0) && (ptr[4] == (uint *)0xc000)) {\n      **flags = **flags | 0x100;\n      ptr[20] = (uint *)((int)ptr[20] + 1);\n    }\n    else {\n      if (*(short *)((int)flags + 0x2a) == 0) {\n        **flags = **flags | 0x200;\n      }\n      else if (*(short *)((int)flags + 0x2a) == 1) {\n        if (ptr == (uint *)0xffff0000) {\n          **flags = **flags & 0xfffffbff;\n          ptr = *flags;\n          if ((ptr[1] & 0x800) == 0) {\n            *ptr = *ptr | 0x200;\n          }\n          else {\n            *ptr = *ptr & 0xfffffbff;\n          }\n        }\n        else if (((ptr == (uint *)0x4) || (ptr == (uint *)0x8)) ||\n                (ptr[12] == (uint *)0x12)) {\n          **flags = **flags & 0xfffffbff;\n          **flags = **flags | 0x200;\n        }\n        else if (ptr[11] == (uint *)0x2) {\n          **flags = **flags | 0x400;\n        }\n        else {\n          **flags = **flags & 0xfffffbff;\n        }\n      }\n      else if (*(short *)((int)flags + 0x2a) == 2) {\n        if (ptr[11] == (uint *)0x2) {\n          **flags = **flags | 0x400;\n        }\n        else {\n          **flags = **flags & 0xfffffbff;\n          **flags = **flags | 0x800;\n        }\n        ptr = *flags;\n        if ((ptr[1] & 0x800) != 0) {\n          ptr[1] = ptr[1] | 0x1000;\n        }\n      }\n      else {\n        **flags = **flags | 0x400;\n        ptr = *flags;\n        if ((ptr[1] & 0x800) != 0) {\n          ptr[1] = ptr[1] | 0x1000;\n        }\n      }\n      ptr[20] = (uint *)0x0;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001256": "apply_flags_08001256",
                "param_1": "flags",
                "puVar1": "ptr",
                "param_1[0xb]": "ptr[11]",
                "param_1[0x14]": "ptr[20]",
                "param_1[4]": "ptr[4]",
                "param_1[0xc]": "ptr[12]",
                "puVar1[1]": "ptr[1]"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001420": {
            "entrypoint": "0x08001420",
            "current_name": "update_value_08001420",
            "code": "\nundefined4 updateValue_08001420(int *param)\n\n{\n  byte *bytePointer;\n  \n  if (*(short *)((int)param + 0x2a) != 0) {\n    bytePointer = (byte *)arrayElement;\n    arrayElement = (int)(bytePointer + 1);\n    *(uint *)(*param + 0x10) = (uint)*bytePointer;\n    *(short *)((int)param + 0x2a) = *(short *)((int)param + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001420": "update_value_08001420",
                "param_1": "param",
                "pbVar1": "bytePointer",
                "param_1[9]": "arrayElement"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001440": {
            "entrypoint": "0x08001440",
            "current_name": "update_data_08001440",
            "code": "\nundefined4 updateData_08001440(int *dataPointer)\n\n{\n  undefined *targetAddress;\n  \n  if (*(short *)((int)dataPointer + 0x2a) != 0) {\n    targetAddress = (undefined *)dataPointer[9];\n    dataPointer[9] = (int)(targetAddress + 1);\n    *targetAddress = (char)*(undefined4 *)(*dataPointer + 0x10);\n    *(short *)((int)dataPointer + 0x2a) = *(short *)((int)dataPointer + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001440": "update_data_08001440",
                "param_1": "dataPointer",
                "puVar1": "targetAddress"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001460": {
            "entrypoint": "0x08001460",
            "current_name": "FUNC_08001460",
            "code": "\nundefined4 FUNC_08001460(uint **param_1,uint *param_2,int param_3,uint *param_4)\n\n{\n  undefined4 uVar1;\n  uint *puVar2;\n  \n  if (*(char *)((int)param_1 + 0x3d) == '(') {\n    if (param_2 == (uint *)0x0) {\n      uVar1 = 1;\n    }\n    else if (param_3 == 0) {\n      uVar1 = 1;\n    }\n    else if (*(char *)(param_1 + 0xf) == '\\x01') {\n      uVar1 = 2;\n    }\n    else {\n      *(undefined *)(param_1 + 0xf) = 1;\n      puVar2 = *param_1;\n      if ((*puVar2 & 1) == 0) {\n        *puVar2 = *puVar2 | 1;\n      }\n      **param_1 = **param_1 & 0xfffff7ff;\n      *(undefined *)((int)param_1 + 0x3d) = 0x29;\n      *(undefined *)((int)param_1 + 0x3e) = 0x20;\n      uVar1 = 0;\n      param_1[0x10] = (uint *)0x0;\n      param_1[9] = param_2;\n      *(short *)((int)param_1 + 0x2a) = (short)param_3;\n      param_1[0xb] = param_4;\n      *(undefined2 *)(param_1 + 10) = *(undefined2 *)((int)param_1 + 0x2a);\n      *(undefined *)(param_1 + 0xf) = 0;\n      (*param_1)[1] = (*param_1)[1] | 0x700;\n    }\n  }\n  else {\n    uVar1 = 2;\n  }\n  return uVar1;\n}\n\n",
            "renaming": {
                "FUN_08001460": "FUNC_08001460"
            },
            "calling": [
                "FUN_08003880"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080014ec": {
            "entrypoint": "0x080014ec",
            "current_name": "validate_inputs_080014ec",
            "code": "\nundefined4 validate_inputs_080014ec(uint **input_data,uint *ptr_to_value,int length,uint *ptr_to_info)\n\n{\n  undefined4 result;\n  uint *ptr_to_flag;\n  \n  if (*(char *)((int)input_data + 0x3d) == '(') {\n    if (ptr_to_value == (uint *)0x0) {\n      result = 1;\n    }\n    else if (length == 0) {\n      result = 1;\n    }\n    else if (*(char *)(input_data + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(input_data + 0xf) = 1;\n      ptr_to_flag = *input_data;\n      if ((*ptr_to_flag & 1) == 0) {\n        *ptr_to_flag = *ptr_to_flag | 1;\n      }\n      **input_data = **input_data & 0xfffff7ff;\n      *(undefined *)((int)input_data + 0x3d) = 0x2a;\n      *(undefined *)((int)input_data + 0x3e) = 0x20;\n      result = 0;\n      input_data[0x10] = (uint *)0x0;\n      input_data[9] = ptr_to_value;\n      *(short *)((int)input_data + 0x2a) = (short)length;\n      input_data[0xb] = ptr_to_info;\n      *(undefined2 *)(input_data + 10) = *(undefined2 *)((int)input_data + 0x2a);\n      *(undefined *)(input_data + 0xf) = 0;\n      (*input_data)[1] = (*input_data)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080014ec": "validate_inputs_080014ec",
                "param_1": "input_data",
                "param_2": "ptr_to_value",
                "param_3": "length",
                "param_4": "ptr_to_info",
                "uVar1": "result",
                "puVar2": "ptr_to_flag"
            },
            "calling": [
                "FUN_08003880"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001578": {
            "entrypoint": "0x08001578",
            "current_name": "initialize_ptr_flags_08001578",
            "code": "\nundefined4 initializePtrFlags_08001578(uint **ptr)\n\n{\n  uint *tempPtr;\n  \n  if (*(char *)((int)ptr + 0x3d) != ' ') {\n    return 2;\n  }\n  *(undefined *)((int)ptr + 0x3d) = 0x28;\n  tempPtr = *ptr;\n  if ((*tempPtr & 1) == 0) {\n    *tempPtr = *tempPtr | 1;\n  }\n  **ptr = **ptr | 0x400;\n  (*ptr)[1] = (*ptr)[1] | 0x300;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001578": "initialize_ptr_flags_08001578",
                "param_1": "ptr",
                "puVar1": "tempPtr"
            },
            "calling": [
                "FUN_080038d0",
                "FUN_08003900"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080015b6": {
            "entrypoint": "0x080015b6",
            "current_name": "FUNC_080015b6",
            "code": "\nvoid FUNC_080015b6(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080015b6": "FUNC_080015b6"
            },
            "calling": [
                "FUN_0800171a",
                "FUN_08001864"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080015b8": {
            "entrypoint": "0x080015b8",
            "current_name": "FUNC_080015b8",
            "code": "\nvoid FUNC_080015b8(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080015b8": "FUNC_080015b8"
            },
            "calling": [
                "FUN_08001904",
                "FUN_080019a0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080015ba": {
            "entrypoint": "0x080015ba",
            "current_name": "FUNC_080015ba",
            "code": "\nvoid FUNC_080015ba(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080015ba": "FUNC_080015ba"
            },
            "calling": [
                "FUN_080015bc",
                "FUN_08001684"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080015bc": {
            "entrypoint": "0x080015bc",
            "current_name": "update_data_080015bc",
            "code": "\nundefined4 updateData_080015bc(int *data)\n\n{\n  char charValue;\n  byte *bytePointer;\n  \n  charValue = *(char *)((int)data + 0x3d);\n  if (*(short *)((int)data + 0x2a) != 0) {\n    bytePointer = (byte *)data[9];\n    data[9] = (int)(bytePointer + 1);\n    *(uint *)(*data + 0x10) = (uint)*bytePointer;\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    if ((*(short *)((int)data + 0x2a) == 0) && (charValue == ')')) {\n      *(uint *)(*data + 4) = *(uint *)(*data + 4) & 0xfffffbff;\n      data[0xc] = 0x21;\n      *(undefined *)((int)data + 0x3d) = 0x28;\n      FUNC_080015ba();\n    }\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080015bc": "update_data_080015bc",
                "param_1": "data",
                "cVar1": "charValue",
                "pbVar2": "bytePointer"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_080015ba"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800160c": {
            "entrypoint": "0x0800160c",
            "current_name": "FUNC_0800160c",
            "code": "\nvoid FUNC_0800160c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800160c": "FUNC_0800160c"
            },
            "calling": [
                "FUN_0800160e",
                "FUN_08001bfc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800160e": {
            "entrypoint": "0x0800160e",
            "current_name": "process_character_0800160e",
            "code": "\nundefined4 processCharacter_0800160e(int *inputArray)\n\n{\n  char character;\n  undefined *ptrToData;\n  \n  character = *(char *)((int)inputArray + 0x3d);\n  if (*(short *)((int)inputArray + 0x2a) != 0) {\n    ptrToData = (undefined *)inputArray[9];\n    inputArray[9] = (int)(ptrToData + 1);\n    *ptrToData = (char)*(undefined4 *)(*inputArray + 0x10);\n    *(short *)((int)inputArray + 0x2a) = *(short *)((int)inputArray + 0x2a) + -1;\n    if ((*(short *)((int)inputArray + 0x2a) == 0) && (character == '*')) {\n      *(uint *)(*inputArray + 4) = *(uint *)(*inputArray + 4) & 0xfffffbff;\n      inputArray[0xc] = 0x22;\n      *(undefined *)((int)inputArray + 0x3d) = 0x28;\n      FUNC_0800160c();\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800160e": "process_character_0800160e",
                "param_1": "inputArray",
                "cVar1": "character",
                "puVar2": "ptrToData"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_0800160c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800165a": {
            "entrypoint": "0x0800165a",
            "current_name": "process_and_return_result_0800165a",
            "code": "\nundefined4 processAndReturnResult_0800165a(int *inputData,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined2 selectedValue;\n  uint flaggedValue;\n  \n  flaggedValue = *(uint *)(*inputData + 0x18);\n  if ((flaggedValue & 0x80) == 0) {\n    selectedValue = *(undefined2 *)(inputData + 3);\n  }\n  else {\n    selectedValue = *(undefined2 *)(inputData + 6);\n  }\n  process_input_08003880(inputData,(*(uint *)(*inputData + 0x18) & 4) == 0,selectedValue,flaggedValue,param4);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800165a": "process_and_return_result_0800165a",
                "param_1": "inputData",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "selectedValue",
                "uVar2": "flaggedValue"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_08003880"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001684": {
            "entrypoint": "0x08001684",
            "current_name": "initialize_param_08001684",
            "code": "\nundefined4 initialize_param_08001684(uint **param_array)\n\n{\n  if (((param_array[11] == (uint *)0x4) || (param_array[11] == (uint *)0x8)) &&\n     (*(char *)((int)param_array + 0x3d) == '(')) {\n    param_array[11] = (uint *)0xffff0000;\n    (*param_array)[1] = (*param_array)[1] & 0xfffff8ff;\n    (*param_array)[5] = 0xfffffbff;\n    **param_array = **param_array & 0xfffffbff;\n    param_array[12] = (uint *)0x0;\n    *(undefined *)((int)param_array + 0x3d) = 0x20;\n    *(undefined *)((int)param_array + 0x3e) = 0;\n    initialize_and_call_function();\n  }\n  else if (*(char *)((int)param_array + 0x3d) == '!') {\n    param_array[11] = (uint *)0xffff0000;\n    param_array[12] = (uint *)0x21;\n    *(undefined *)((int)param_array + 0x3d) = 0x20;\n    *(undefined *)((int)param_array + 0x3e) = 0;\n    (*param_array)[1] = (*param_array)[1] & 0xfffff8ff;\n    (*param_array)[5] = 0xfffffbff;\n    **param_array = **param_array & 0xfffffbff;\n    FUNC_080015ba();\n  }\n  else {\n    (*param_array)[5] = 0xfffffbff;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001684": "initialize_param_08001684",
                "param_1": "param_array",
                "param_1[0xb]": "param_array[11]",
                "param_1[0xc]": "param_array[12]",
                "initialize_and_call_function_080038d0()": "initialize_and_call_function()"
            },
            "calling": [
                "FUN_08001e68"
            ],
            "called": [
                "FUN_080015ba",
                "FUN_080038d0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001718": {
            "entrypoint": "0x08001718",
            "current_name": "FUNC_08001718",
            "code": "\nvoid FUNC_08001718(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001718": "FUNC_08001718"
            },
            "calling": [
                "FUN_0800171a",
                "FUN_08001864"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800171a": {
            "entrypoint": "0x0800171a",
            "current_name": "perform_action_0800171a",
            "code": "\nundefined4 performAction_0800171a(uint **parameters)\n\n{\n  char character;\n  uint *pointer;\n  \n  character = *(char *)((int)parameters + 0x3d);\n  pointer = parameters[0xb];\n  if ((*(short *)(parameters + 10) == 0) && (character == '!')) {\n    if ((pointer == (uint *)0x4) || ((pointer == (uint *)0x8 || (pointer == (uint *)0xffff0000)))) {\n      (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n      **parameters = **parameters | 0x200;\n      parameters[0xc] = (uint *)0x0;\n      *(undefined *)((int)parameters + 0x3d) = 0x20;\n      if (*(char *)((int)parameters + 0x3e) == '@') {\n        *(undefined *)((int)parameters + 0x3e) = 0;\n        FUNC_08001718();\n      }\n      else {\n        *(undefined *)((int)parameters + 0x3e) = 0;\n        FUNC_080015b6();\n      }\n    }\n    else {\n      (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n      parameters[0xc] = (uint *)0x11;\n      *(undefined *)((int)parameters + 0x3e) = 0;\n      *(undefined *)((int)parameters + 0x3d) = 0x20;\n      FUNC_080015b6();\n    }\n  }\n  else if ((character == '!') || ((*(char *)((int)parameters + 0x3e) == '@' && (character == '\\\"')))) {\n    if (*(short *)((int)parameters + 0x2a) == 0) {\n      (*parameters)[1] = (*parameters)[1] & 0xfffffbff;\n    }\n    else if (*(char *)((int)parameters + 0x3e) == '@') {\n      if (parameters[0x14] == (uint *)0x0) {\n        if (parameters[0x13] == (uint *)0x1) {\n          (*parameters)[4] = (uint)parameters[0x12] & 0xff;\n          parameters[0x14] = (uint *)((int)parameters[0x14] + 2);\n        }\n        else {\n          (*parameters)[4] = (uint)((int)parameters[0x12] << 0x10) >> 0x18;\n          parameters[0x14] = (uint *)((int)parameters[0x14] + 1);\n        }\n      }\n      else if (parameters[0x14] == (uint *)0x1) {\n        (*parameters)[4] = (uint)parameters[0x12] & 0xff;\n        parameters[0x14] = (uint *)((int)parameters[0x14] + 1);\n      }\n      else if (parameters[0x14] == (uint *)0x2) {\n        if (*(char *)((int)parameters + 0x3d) == '\\\"') {\n          **parameters = **parameters | 0x100;\n        }\n        else if (*(char *)((int)parameters + 0x3d) == '!') {\n          pointer = parameters[9];\n          parameters[9] = (uint *)((int)pointer + 1);\n          (*parameters)[4] = (uint)*(byte *)pointer;\n          *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n        }\n      }\n    }\n    else {\n      pointer = parameters[9];\n      parameters[9] = (uint *)((int)pointer + 1);\n      (*parameters)[4] = (uint)*(byte *)pointer;\n      *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800171a": "perform_action_0800171a",
                "param_1": "parameters",
                "cVar1": "character",
                "puVar2": "pointer"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_080015b6",
                "FUN_08001718"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001864": {
            "entrypoint": "0x08001864",
            "current_name": "process_param_08001864",
            "code": "\nundefined4 processParam_08001864(uint **paramArray)\n\n{\n  uint *ptrValue2;\n  \n  ptrValue2 = paramArray[0xb];\n  if (*(char *)((int)paramArray + 0x3d) == '!') {\n    if (*(short *)((int)paramArray + 0x2a) == 0) {\n      if (((ptrValue2 == (uint *)0x4) || (ptrValue2 == (uint *)0x8)) || (ptrValue2 == (uint *)0xffff0000)) {\n        (*paramArray)[1] = (*paramArray)[1] & 0xfffff8ff;\n        **paramArray = **paramArray | 0x200;\n        paramPtr = (uint *)0x0;\n        *(undefined *)((int)paramArray + 0x3d) = 0x20;\n        if (*(char *)((int)paramArray + 0x3e) == '@') {\n          *(undefined *)((int)paramArray + 0x3e) = 0;\n          FUNC_08001718();\n        }\n        else {\n          *(undefined *)((int)paramArray + 0x3e) = 0;\n          FUNC_080015b6();\n        }\n      }\n      else {\n        (*paramArray)[1] = (*paramArray)[1] & 0xfffff8ff;\n        paramPtr = (uint *)0x11;\n        *(undefined *)((int)paramArray + 0x3e) = 0;\n        *(undefined *)((int)paramArray + 0x3d) = 0x20;\n        FUNC_080015b6();\n      }\n    }\n    else {\n      ptrValue2 = paramArray[9];\n      paramArray[9] = (uint *)((int)ptrValue2 + 1);\n      (*paramArray)[4] = (uint)*(byte *)ptrValue2;\n      *(short *)((int)paramArray + 0x2a) = *(short *)((int)paramArray + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001864": "process_param_08001864",
                "param_1": "paramArray",
                "puVar1": "ptrValue2",
                "param_1[0xc]": "paramPtr"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_080015b6",
                "FUN_08001718"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001902": {
            "entrypoint": "0x08001902",
            "current_name": "FUNC_08001902",
            "code": "\nvoid FUNC_08001902(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001902": "FUNC_08001902"
            },
            "calling": [
                "FUN_08001904",
                "FUN_080019a0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08001904": {
            "entrypoint": "0x08001904",
            "current_name": "process_parameter_08001904",
            "code": "\nundefined4 processParameter_08001904(uint **parameter)\n\n{\n  uint *temp;\n  \n  if (*(char *)((int)parameter + 0x3d) == '\\\"') {\n    if (*(ushort *)((int)parameter + 0x2a) < 4) {\n      if (*(ushort *)((int)parameter + 0x2a) < 2) {\n        **parameter = **parameter & 0xfffffbff;\n        (*parameter)[1] = (*parameter)[1] & 0xfffff8ff;\n        temp = array;\n        array = (uint *)((int)temp + 1);\n        *(char *)temp = (char)(*parameter)[4];\n        *(short *)((int)parameter + 0x2a) = *(short *)((int)parameter + 0x2a) + -1;\n        *(undefined *)((int)parameter + 0x3d) = 0x20;\n        parameter[0xc] = (uint *)0x0;\n        if (*(char *)((int)parameter + 0x3e) == '@') {\n          *(undefined *)((int)parameter + 0x3e) = 0;\n          FUNC_08001902();\n        }\n        else {\n          *(undefined *)((int)parameter + 0x3e) = 0;\n          FUNC_080015b8();\n        }\n      }\n    }\n    else {\n      temp = array;\n      array = (uint *)((int)temp + 1);\n      *(char *)temp = (char)(*parameter)[4];\n      *(short *)((int)parameter + 0x2a) = *(short *)((int)parameter + 0x2a) + -1;\n      if (*(short *)((int)parameter + 0x2a) == 3) {\n        (*parameter)[1] = (*parameter)[1] & 0xfffffbff;\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001904": "process_parameter_08001904",
                "param_1": "parameter",
                "puVar1": "temp",
                "param_1[9]": "array"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_080015b8",
                "FUN_08001902"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080019a0": {
            "entrypoint": "0x080019a0",
            "current_name": "process_data_080019a0",
            "code": "\nundefined4 processData_080019a0(uint **data)\n\n{\n  uint *tempPtr;\n  \n  if (*(short *)((int)data + 0x2a) == 4) {\n    (*data)[1] = (*data)[1] & 0xfffffbff;\n    tempPtr = data[9];\n    data[9] = (uint *)((int)tempPtr + 1);\n    *(char *)tempPtr = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  else if (*(short *)((int)data + 0x2a) == 3) {\n    (*data)[1] = (*data)[1] & 0xfffffbff;\n    **data = **data & 0xfffffbff;\n    tempPtr = data[9];\n    data[9] = (uint *)((int)tempPtr + 1);\n    *(char *)tempPtr = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  else if (*(short *)((int)data + 0x2a) == 2) {\n    if ((int)data[0xb] - 1U < 2) {\n      **data = **data & 0xfffffbff;\n      **data = **data | 0x100;\n    }\n    else {\n      **data = **data | 0x200;\n    }\n    tempPtr = data[9];\n    data[9] = (uint *)((int)tempPtr + 1);\n    *(char *)tempPtr = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    tempPtr = data[9];\n    data[9] = (uint *)((int)tempPtr + 1);\n    *(char *)tempPtr = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    (*data)[1] = (*data)[1] & 0xfffffcff;\n    *(undefined *)((int)data + 0x3d) = 0x20;\n    data[0xc] = (uint *)0x0;\n    if (*(char *)((int)data + 0x3e) == '@') {\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUNC_08001902();\n    }\n    else {\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUNC_080015b8();\n    }\n  }\n  else {\n    tempPtr = data[9];\n    data[9] = (uint *)((int)tempPtr + 1);\n    *(char *)tempPtr = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080019a0": "process_data_080019a0",
                "param_1": "data",
                "puVar1": "tempPtr"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_080015b8",
                "FUN_08001902"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001aac": {
            "entrypoint": "0x08001aac",
            "current_name": "FUNC_08001aac",
            "code": "\nvoid FUNC_08001aac(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001aac": "FUNC_08001aac"
            },
            "calling": [
                "FUN_08001ab0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08001ab0": {
            "entrypoint": "0x08001ab0",
            "current_name": "process_parameter_08001ab0",
            "code": "\nvoid processParameter_08001ab0(uint **parameter)\n\n{\n  int returnValue;\n  uint *pointerVar2;\n  uint *pointerVar3;\n  \n  if (*(byte *)((int)parameter + 0x3d) - 0x29 < 2) {\n    parameter[0xc] = (uint *)0x0;\n    *(undefined *)((int)parameter + 0x3d) = 0x28;\n  }\n  else {\n    if ((*(char *)((int)parameter + 0x3d) != '`') && (((*parameter)[1] & 0x800) == 0)) {\n      *(undefined *)((int)parameter + 0x3d) = 0x20;\n    }\n    parameter[0xc] = (uint *)0x0;\n    *(undefined *)((int)parameter + 0x3e) = 0;\n  }\n  **parameter = **parameter & 0xfffff7ff;\n  pointerVar3 = *parameter;\n  if ((pointerVar3[1] & 0x800) == 0) {\n    if (*(char *)((int)parameter + 0x3d) == '`') {\n      *(undefined *)((int)parameter + 0x3d) = 0x20;\n      parameter[0x10] = (uint *)0x0;\n      if ((pointerVar3[5] & 0x40) != 0) {\n        pointerVar2 = parameter[9];\n        parameter[9] = (uint *)((int)pointerVar2 + 1);\n        *(char *)pointerVar2 = (char)pointerVar3[4];\n      }\n      **parameter = **parameter & 0xfffffffe;\n      FUNC_08001aac(parameter);\n    }\n    else {\n      if ((pointerVar3[5] & 0x40) != 0) {\n        pointerVar2 = parameter[9];\n        parameter[9] = (uint *)((int)pointerVar2 + 1);\n        *(char *)pointerVar2 = (char)pointerVar3[4];\n      }\n      initialize_if_flag_is_unset_08003900(parameter);\n    }\n  }\n  else {\n    pointerVar3[1] = pointerVar3[1] & 0xfffff7ff;\n    if (*(char *)((int)parameter[0xd] + 0x35) == '\\x01') {\n      parameter[0xe][0x14] = (uint)&LAB_08001f3c_1;\n      returnValue = check_and_modify_param_08000f8c(parameter[0xe]);\n      if (returnValue != 0) {\n        if (((*parameter)[5] & 0x40) != 0) {\n          pointerVar3 = parameter[9];\n          parameter[9] = (uint *)((int)pointerVar3 + 1);\n          *(char *)pointerVar3 = (char)(*parameter)[4];\n        }\n        **parameter = **parameter & 0xfffffffe;\n        *(undefined *)((int)parameter + 0x3d) = 0x20;\n        (*(code *)parameter[0xe][0x14])();\n      }\n    }\n    else {\n      parameter[0xd][0x14] = (uint)&LAB_08001f3c_1;\n      returnValue = check_and_modify_param_08000f8c(parameter[0xd]);\n      if (returnValue != 0) {\n        **parameter = **parameter & 0xfffffffe;\n        *(undefined *)((int)parameter + 0x3d) = 0x20;\n        (*(code *)parameter[0xd][0x14])();\n      }\n    }\n  }\n  if ((*(char *)((int)parameter + 0x3d) == '(') && (((uint)parameter[0x10] & 4) != 0)) {\n    parameter[0xb] = (uint *)0xffff0000;\n    parameter[0xc] = (uint *)0x0;\n    *(undefined *)((int)parameter + 0x3d) = 0x20;\n    *(undefined *)((int)parameter + 0x3e) = 0;\n    initialize_and_call_function_080038d0(parameter);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001ab0": "process_parameter_08001ab0",
                "param_1": "parameter",
                "iVar1": "returnValue",
                "puVar2": "pointerVar2",
                "puVar3": "pointerVar3"
            },
            "calling": [
                "FUN_08001e68",
                "FUN_08001bfc"
            ],
            "called": [
                "FUN_08000f8c",
                "FUN_080038d0",
                "FUN_08001aac",
                "FUN_08003900"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001bfc": {
            "entrypoint": "0x08001bfc",
            "current_name": "process_input_08001bfc",
            "code": "\nundefined4 processInput_08001bfc(uint **input)\n\n{\n  char character;\n  uint *ptr1;\n  uint *ptr2;\n  \n  character = *(char *)((int)input + 0x3d);\n  (*input)[1] = (*input)[1] & 0xfffff8ff;\n  **input = **input | 1;\n  **input = **input & 0xfffffbff;\n  ptr1 = *input;\n  if ((ptr1[1] & 0x800) != 0) {\n    if ((*(char *)((int)input + 0x3d) == '\\\"') || (*(char *)((int)input + 0x3d) == '*')) {\n      *(short *)((int)input + 0x2a) = (short)*(undefined4 *)(*input[0xe] + 4);\n    }\n    else {\n      *(short *)((int)input + 0x2a) = (short)*(undefined4 *)(*input[0xd] + 4);\n    }\n  }\n  if (*(short *)((int)input + 0x2a) != 0) {\n    if ((ptr1[5] & 4) != 0) {\n      ptr2 = input[9];\n      input[9] = (uint *)((int)ptr2 + 1);\n      *(char *)ptr2 = (char)ptr1[4];\n      *(short *)((int)input + 0x2a) = *(short *)((int)input + 0x2a) + -1;\n    }\n    if (((*input)[5] & 0x40) != 0) {\n      ptr1 = input[9];\n      input[9] = (uint *)((int)ptr1 + 1);\n      *(char *)ptr1 = (char)(*input)[4];\n      *(short *)((int)input + 0x2a) = *(short *)((int)input + 0x2a) + -1;\n    }\n    input[0x10] = (uint *)((uint)input[0x10] | 4);\n  }\n  if (input[0x10] == (uint *)0x0) {\n    if (((character == '(') || (character == '*')) || (character == ')')) {\n      input[0xb] = (uint *)0xffff0000;\n      input[0xc] = (uint *)0x0;\n      *(undefined *)((int)input + 0x3d) = 0x20;\n      *(undefined *)((int)input + 0x3e) = 0;\n      initialize_and_call_function_080038d0();\n    }\n    else if ((input[0xc] == (uint *)0x22) || (character == '\\\"')) {\n      input[0xc] = (uint *)0x0;\n      *(undefined *)((int)input + 0x3d) = 0x20;\n      *(undefined *)((int)input + 0x3e) = 0;\n      FUNC_0800160c();\n    }\n  }\n  else {\n    process_parameter_08001ab0();\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001bfc": "process_input_08001bfc",
                "param_1": "input",
                "cVar1": "character",
                "puVar2": "ptr1",
                "puVar3": "ptr2"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_08001ab0",
                "FUN_0800160c",
                "FUN_080038d0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001d00": {
            "entrypoint": "0x08001d00",
            "current_name": "process_flags_08001d00",
            "code": "\nvoid process_flags_08001d00(int *flags)\n\n{\n  int ptr_flags;\n  uint flag_value;\n  uint flag_mask;\n  uint param_value;\n  \n  ptr_flags = *flags;\n  param_value = *(uint *)(ptr_flags + 0x18);\n  flag_value = *(uint *)(ptr_flags + 0x14);\n  flag_mask = *(uint *)(ptr_flags + 4);\n  if ((*(char *)((int)flags + 0x3e) == '\\x10') || (*(char *)((int)flags + 0x3e) == '@')) {\n    if (((flag_value & 0x10001) == 0) || ((flag_mask & 0x200) == 0)) {\n      if (((flag_value & 0x10008) == 0) || ((flag_mask & 0x200) == 0)) {\n        if (((flag_value & 0x10002) != 0) && ((flag_mask & 0x200) != 0)) {\n          applyFlags(flags);\n        }\n      }\n      else {\n        assignByteToPointer(flags);\n      }\n    }\n    else {\n      updateFlagValue(flags);\n    }\n    if ((param_value & 0x100004) == 0) {\n      if ((((flag_value & 0x10040) != 0) && ((flag_mask & 0x400) != 0)) && ((flag_value & 0x10004) == 0)) {\n        processParameter(flags);\n        return;\n      }\n      if (((flag_value & 0x10004) != 0) && ((flag_mask & 0x200) != 0)) {\n        processData(flags);\n        return;\n      }\n    }\n    else {\n      if ((((flag_value & 0x10080) != 0) && ((flag_mask & 0x400) != 0)) && ((flag_value & 0x10004) == 0)) {\n        performAction(flags);\n        return;\n      }\n      if (((flag_value & 0x10004) != 0) && ((flag_mask & 0x200) != 0)) {\n        processParam(flags);\n        return;\n      }\n    }\n  }\n  else {\n    if (((flag_value & 0x10002) != 0) && ((flag_mask & 0x200) != 0)) {\n      processAndReturnResult();\n      return;\n    }\n    if (((flag_value & 0x10010) != 0) && ((flag_mask & 0x200) != 0)) {\n      processInput(flags);\n      return;\n    }\n    if ((param_value & 0x100004) == 0) {\n      if ((((flag_value & 0x10040) != 0) && ((flag_mask & 0x400) != 0)) && ((flag_value & 0x10004) == 0)) {\n        processCharacter(flags);\n        return;\n      }\n      if (((flag_value & 0x10004) != 0) && ((flag_mask & 0x200) != 0)) {\n        updateData(flags);\n      }\n    }\n    else {\n      if ((((flag_value & 0x10080) != 0) && ((flag_mask & 0x400) != 0)) && ((flag_value & 0x10004) == 0)) {\n        updateData2(flags);\n        return;\n      }\n      if (((flag_value & 0x10004) != 0) && ((flag_mask & 0x200) != 0)) {\n        updateValue(flags);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001d00": "process_flags_08001d00",
                "param_1": "flags",
                "iVar1": "ptr_flags",
                "uVar2": "flag_value",
                "uVar3": "flag_mask",
                "uVar4": "param_value",
                "apply_flags_08001256": "applyFlags",
                "assign_byte_to_pointer_0800124a": "assignByteToPointer",
                "update_flag_value_080011c0": "updateFlagValue",
                "process_parameter_08001904": "processParameter",
                "process_data_080019a0": "processData",
                "perform_action_0800171a": "performAction",
                "process_param_08001864": "processParam",
                "process_and_return_result_0800165a": "processAndReturnResult",
                "process_input_08001bfc": "processInput",
                "process_character_0800160e": "processCharacter",
                "update_data_08001440": "updateData",
                "update_data_080015bc": "updateData2",
                "update_value_08001420": "updateValue"
            },
            "calling": [],
            "called": [
                "FUN_08001440",
                "FUN_080019a0",
                "FUN_080015bc",
                "FUN_0800165a",
                "FUN_0800160e",
                "FUN_0800171a",
                "FUN_08001256",
                "FUN_08001420",
                "FUN_08001904",
                "FUN_0800124a",
                "FUN_080011c0",
                "FUN_08001bfc",
                "FUN_08001864"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001e68": {
            "entrypoint": "0x08001e68",
            "current_name": "update_flag_if_conditions_met_08001e68",
            "code": "\nvoid updateFlagIfConditionsMet_08001e68(uint **input)\n\n{\n  char charVar;\n  uint *ptrToInput;\n  uint flag1;\n  uint flag2;\n  \n  ptrToInput = *input;\n  flag1 = ptrToInput[5];\n  flag2 = ptrToInput[1];\n  if (((flag1 & 0x10100) != 0) && ((flag2 & 0x100) != 0)) {\n    input[0x10] = (uint *)((uint)input[0x10] | 1);\n    ptrToInput[5] = 0xfffffeff;\n  }\n  if (((flag1 & 0x10200) != 0) && ((flag2 & 0x100) != 0)) {\n    input[0x10] = (uint *)((uint)input[0x10] | 2);\n    (*input)[5] = 0xfffffdff;\n  }\n  if (((flag1 & 0x10400) != 0) && ((flag2 & 0x100) != 0)) {\n    charVar = *(char *)((int)input + 0x3d);\n    if (((*(char *)((int)input + 0x3e) == ' ') && (*(short *)((int)input + 0x2a) == 0)) &&\n       (((charVar == '!' || (charVar == ')')) || ((charVar == '(' && (input[0xc] == (uint *)0x21)))))) {\n      initializeParameters(input);\n    }\n    else {\n      input[0x10] = (uint *)((uint)input[0x10] | 4);\n      if (*(char *)((int)input + 0x3e) == '\\x10') {\n        **input = **input | 0x200;\n      }\n      (*input)[5] = 0xfffffbff;\n    }\n  }\n  if (((flag1 & 0x10800) != 0) && ((flag2 & 0x100) != 0)) {\n    input[0x10] = (uint *)((uint)input[0x10] | 8);\n    (*input)[5] = 0xfffff7ff;\n  }\n  if (input[0x10] != (uint *)0x0) {\n    processParameters(input);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001e68": "update_flag_if_conditions_met_08001e68",
                "param_1": "input",
                "cVar1": "charVar",
                "puVar2": "ptrToInput",
                "uVar3": "flag1",
                "uVar4": "flag2",
                "initialize_param_08001684": "initializeParameters",
                "process_parameter_08001ab0": "processParameters"
            },
            "calling": [],
            "called": [
                "FUN_08001ab0",
                "FUN_08001684"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001f9c": {
            "entrypoint": "0x08001f9c",
            "current_name": "check_data_conditions_08001f9c",
            "code": "\n\n\nundefined4 check_data_conditions_08001f9c(void)\n\n{\n  int initialData;\n  int currentData;\n  \n  _DAT_40023840 = _DAT_40023840 | 0x10000000;\n  _DAT_420e0040 = 1;\n  initialData = get_data_08000e30();\n  do {\n    if ((_DAT_40007004 & 0x10000) != 0) {\n      _DAT_420e0044 = 1;\n      initialData = get_data_08000e30();\n      do {\n        if ((_DAT_40007004 & 0x20000) != 0) {\n          return 0;\n        }\n        currentData = get_data_08000e30();\n      } while ((uint)(currentData - initialData) < 0x3e9);\n      return 3;\n    }\n    currentData = get_data_08000e30();\n  } while ((uint)(currentData - initialData) < 0x3e9);\n  return 3;\n}\n\n",
            "renaming": {
                "FUN_08001f9c": "check_data_conditions_08001f9c",
                "iVar1": "initialData",
                "iVar2": "currentData"
            },
            "calling": [
                "FUN_08000c8c"
            ],
            "called": [
                "FUN_08000e30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800201c": {
            "entrypoint": "0x0800201c",
            "current_name": "initialize_device_0800201c",
            "code": "\n\n\nundefined4 initializeDevice_0800201c(uint *deviceParameters)\n\n{\n  int initialValue;\n  int currentValue;\n  undefined4 returnValue;\n  bool isFlagSet;\n  \n  if (deviceParameters == (uint *)0x0) {\n    return 1;\n  }\n  if ((*deviceParameters & 1) != 0) {\n    if (((_DAT_40023808 & 0xc) == 4) ||\n       (((_DAT_40023808 & 0xc) == 8 && ((_DAT_40023804 & 0x400000) != 0)))) {\n      if (((_DAT_40023800 & 0x20000) != 0) && (deviceParameters[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      if (deviceParameters[1] == 0x10000) {\n        _DAT_40023800 = _DAT_40023800 | 0x10000;\n      }\n      else if (deviceParameters[1] == 0x50000) {\n        _DAT_40023800 = _DAT_40023800 | 0x50000;\n      }\n      else {\n        _DAT_40023800 = _DAT_40023800 & 0xfffaffff;\n      }\n      if (deviceParameters[1] == 0) {\n        initialValue = get_data_08000e30();\n        while ((_DAT_40023800 & 0x20000) != 0) {\n          currentValue = get_data_08000e30();\n          if (100 < (uint)(currentValue - initialValue)) {\n            return 3;\n          }\n        }\n      }\n      else {\n        initialValue = get_data_08000e30();\n        while ((_DAT_40023800 & 0x20000) == 0) {\n          currentValue = get_data_08000e30();\n          if (100 < (uint)(currentValue - initialValue)) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*deviceParameters & 2) != 0) {\n    if (((_DAT_40023808 & 0xc) == 0) ||\n       (((_DAT_40023808 & 0xc) == 8 && ((_DAT_40023804 & 0x400000) == 0)))) {\n      if (((_DAT_40023800 & 2) != 0) && (deviceParameters[3] != 1)) {\n        return 1;\n      }\n      _DAT_40023800 = _DAT_40023800 & 0xffffff07 | deviceParameters[4] << 3;\n    }\n    else if (deviceParameters[3] == 0) {\n      _DAT_42470000 = 0;\n      initialValue = get_data_08000e30();\n      while ((_DAT_40023800 & 2) != 0) {\n        currentValue = get_data_08000e30();\n        if (2 < (uint)(currentValue - initialValue)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470000 = 1;\n      initialValue = get_data_08000e30();\n      while ((_DAT_40023800 & 2) == 0) {\n        currentValue = get_data_08000e30();\n        if (2 < (uint)(currentValue - initialValue)) {\n          return 3;\n        }\n      }\n      _DAT_40023800 = _DAT_40023800 & 0xffffff07 | deviceParameters[4] << 3;\n    }\n  }\n  if ((*deviceParameters & 8) != 0) {\n    if (deviceParameters[5] == 0) {\n      _DAT_42470e80 = 0;\n      initialValue = get_data_08000e30();\n      while ((_DAT_40023874 & 2) != 0) {\n        currentValue = get_data_08000e30();\n        if (2 < (uint)(currentValue - initialValue)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470e80 = 1;\n      initialValue = get_data_08000e30();\n      while ((_DAT_40023874 & 2) == 0) {\n        currentValue = get_data_08000e30();\n        if (2 < (uint)(currentValue - initialValue)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if ((*deviceParameters & 4) != 0) {\n    isFlagSet = (_DAT_40023840 & 0x10000000) == 0;\n    if (isFlagSet) {\n      _DAT_40023840 = _DAT_40023840 | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      initialValue = get_data_08000e30();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        currentValue = get_data_08000e30();\n        if (2 < (uint)(currentValue - initialValue)) {\n          return 3;\n        }\n      }\n    }\n    if (deviceParameters[2] == 1) {\n      _DAT_40023870 = _DAT_40023870 | 1;\n    }\n    else if (deviceParameters[2] == 5) {\n      _DAT_40023870 = _DAT_40023870 | 5;\n    }\n    else {\n      _DAT_40023870 = _DAT_40023870 & 0xfffffffa;\n    }\n    if (deviceParameters[2] == 0) {\n      initialValue = get_data_08000e30();\n      while ((_DAT_40023870 & 2) != 0) {\n        currentValue = get_data_08000e30();\n        if (5000 < (uint)(currentValue - initialValue)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      initialValue = get_data_08000e30();\n      while ((_DAT_40023870 & 2) == 0) {\n        currentValue = get_data_08000e30();\n        if (5000 < (uint)(currentValue - initialValue)) {\n          return 3;\n        }\n      }\n    }\n    if (isFlagSet) {\n      _DAT_40023840 = _DAT_40023840 & 0xefffffff;\n    }\n  }\n  if (deviceParameters[6] == 0) {\n    returnValue = 0;\n  }\n  else if ((_DAT_40023808 & 0xc) == 8) {\n    returnValue = 1;\n  }\n  else if (deviceParameters[6] == 2) {\n    _DAT_42470060 = 0;\n    initialValue = get_data_08000e30();\n    do {\n      if ((_DAT_40023800 & 0x2000000) == 0) {\n        _DAT_40023804 =\n             deviceParameters[7] | deviceParameters[8] | deviceParameters[9] << 6 | ((deviceParameters[10] >> 1) - 1) * 0x10000 |\n             deviceParameters[0xb] << 0x18;\n        _DAT_42470060 = 1;\n        initialValue = get_data_08000e30();\n        do {\n          if ((_DAT_40023800 & 0x2000000) != 0) {\n            return 0;\n          }\n          currentValue = get_data_08000e30();\n        } while ((uint)(currentValue - initialValue) < 3);\n        return 3;\n      }\n      currentValue = get_data_08000e30();\n    } while ((uint)(currentValue - initialValue) < 3);\n    returnValue = 3;\n  }\n  else {\n    _DAT_42470060 = 0;\n    initialValue = get_data_08000e30();\n    do {\n      if ((_DAT_40023800 & 0x2000000) == 0) {\n        return 0;\n      }\n      currentValue = get_data_08000e30();\n    } while ((uint)(currentValue - initialValue) < 3);\n    returnValue = 3;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_0800201c": "initialize_device_0800201c",
                "param_1": "deviceParameters",
                "iVar1": "initialValue",
                "iVar2": "currentValue",
                "uVar3": "returnValue",
                "bVar4": "isFlagSet"
            },
            "calling": [
                "FUN_08000c8c"
            ],
            "called": [
                "FUN_08000e30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080023b4": {
            "entrypoint": "0x080023b4",
            "current_name": "calculate_frequency_080023b4",
            "code": "\n\n\nuint calculate_frequency_080023b4(void)\n\n{\n  undefined4 input_value;\n  uint result;\n  \n  if ((_DAT_40023808 & 0xc) == 4) {\n    return 8000000;\n  }\n  if ((_DAT_40023808 & 0xc) != 8) {\n    return 16000000;\n  }\n  if ((_DAT_40023804 & 0x400000) == 0) {\n    result = (_DAT_40023804 << 0x11) >> 0x17;\n    result = divide_with_default(result * 16000000,\n                         (((uint)(result * 0x20 < result) * -0x3f -\n                          (uint)(result * 0x7c0 < result * 0x1f)) * 8 +\n                         (uint)check_carry(result * 0x3d08,result)) * 0x400 | result * 0x3d09 >> 0x16,\n                         _DAT_40023804 & 0x3f,0,input_value);\n  }\n  else {\n    result = (_DAT_40023804 << 0x11) >> 0x17;\n    result = divide_with_default(result * 8000000,\n                         (((uint)(result * 0x20 < result) * -0x3f -\n                          (uint)(result * 0x7c0 < result * 0x1f)) * 8 +\n                         (uint)check_carry(result * 0x3d08,result)) * 0x200,_DAT_40023804 & 0x3f,0,input_value);\n  }\n  return result / ((((_DAT_40023804 << 0xe) >> 0x1e) + 1) * 2);\n}\n\n",
            "renaming": {
                "FUN_080023b4": "calculate_frequency_080023b4",
                "in_r3": "input_value",
                "uVar1": "result",
                "divide_or_default_080002d0": "divide_with_default",
                "CARRY4": "check_carry"
            },
            "calling": [
                "FUN_08002488"
            ],
            "called": [
                "FUN_080002d0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002488": {
            "entrypoint": "0x08002488",
            "current_name": "configure_device_08002488",
            "code": "\n\n\nundefined4 configure_device_08002488(uint *config_data,uint config_size)\n\n{\n  int start_time;\n  int current_time;\n  uint frequency;\n  \n  if (config_data == (uint *)0x0) {\n    return 1;\n  }\n  if ((_DAT_40023c00 & 0xf) < config_size) {\n    _DAT_40023c00 = CONCAT31(DAT_40023c00_1,(char)config_size);\n    if (config_size != (config_size & 0xf)) {\n      return 1;\n    }\n  }\n  if ((*config_data & 2) != 0) {\n    if ((*config_data & 4) != 0) {\n      _DAT_40023808 = _DAT_40023808 | 0x1c00;\n    }\n    if ((*config_data & 8) != 0) {\n      _DAT_40023808 = _DAT_40023808 | 0xe000;\n    }\n    _DAT_40023808 = _DAT_40023808 & 0xffffff0f | config_data[2];\n  }\n  if ((*config_data & 1) != 0) {\n    frequency = config_data[1];\n    if (frequency == 1) {\n      if ((_DAT_40023800 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if (frequency - 2 < 2) {\n      if ((_DAT_40023800 & 0x2000000) == 0) {\n        return 1;\n      }\n    }\n    else if ((_DAT_40023800 & 2) == 0) {\n      return 1;\n    }\n    _DAT_40023808 = frequency | _DAT_40023808 & 0xfffffffc;\n    start_time = get_time_elapsed;\n    while( true ) {\n      if ((_DAT_40023808 & 0xc) == config_data[1] * 4) break;\n      current_time = get_time_elapsed;\n      if (5000 < (uint)(current_time - start_time)) {\n        return 3;\n      }\n    }\n  }\n  if (config_size < (_DAT_40023c00 & 0xf)) {\n    _DAT_40023c00 = CONCAT31(DAT_40023c00_1,(char)config_size);\n    if (config_size != (config_size & 0xf)) {\n      return 1;\n    }\n  }\n  if ((*config_data & 4) != 0) {\n    _DAT_40023808 = _DAT_40023808 & 0xffffe3ff | config_data[3];\n  }\n  if ((*config_data & 8) != 0) {\n    _DAT_40023808 = _DAT_40023808 & 0xffff1fff | config_data[4] << 3;\n  }\n  frequency = calculate_frequency;\n  DAT_2000002c = frequency >> (&DAT_08005dfc)[(_DAT_40023808 << 0x18) >> 0x1c];\n  initialize_and_update_character_08000d98(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002488": "configure_device_08002488",
                "param_1": "config_data",
                "param_2": "config_size",
                "iVar1": "start_time",
                "iVar2": "current_time",
                "uVar3": "frequency",
                "get_data_08000e30()": "get_time_elapsed",
                "calculate_frequency_080023b4()": "calculate_frequency"
            },
            "calling": [
                "FUN_08000c8c"
            ],
            "called": [
                "FUN_08000e30",
                "FUN_08000d98",
                "FUN_080023b4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080025e0": {
            "entrypoint": "0x080025e0",
            "current_name": "get_global_variable_080025e0",
            "code": "\nundefined4 get_global_variable_080025e0(void)\n\n{\n  return DAT_2000002c;\n}\n\n",
            "renaming": {
                "FUN_080025e0": "get_global_variable_080025e0"
            },
            "calling": [
                "FUN_0800260c",
                "FUN_080025ec",
                "FUN_08000c8c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080025ec": {
            "entrypoint": "0x080025ec",
            "current_name": "get_shifted_global_variable_080025ec",
            "code": "\n\n\nuint get_shifted_global_variable_080025ec(void)\n\n{\n  uint global_variable;\n  \n  global_variable = get_global_variable_080025e0();\n  return global_variable >> (&DAT_08005e0c)[(uint)(_DAT_40023808 << 0x13) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_080025ec": "get_shifted_global_variable_080025ec",
                "uVar1": "global_variable"
            },
            "calling": [
                "FUN_080029c8"
            ],
            "called": [
                "FUN_080025e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800260c": {
            "entrypoint": "0x0800260c",
            "current_name": "shifted_global_variable_0800260c",
            "code": "\n\n\nuint shiftedGlobalVariable_0800260c(void)\n\n{\n  uint globalVar;\n  \n  globalVar = getGlobalVar();\n  return globalVar >> (&DAT_08005e0c)[(uint)(_DAT_40023808 << 0x10) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_0800260c": "shifted_global_variable_0800260c",
                "uVar1": "globalVar",
                "get_global_variable_080025e0": "getGlobalVar"
            },
            "calling": [
                "FUN_080029c8"
            ],
            "called": [
                "FUN_080025e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800262c": {
            "entrypoint": "0x0800262c",
            "current_name": "enable_interrupts_0800262c",
            "code": "\n\n\nvoid enableInterrupts_0800262c(int *data)\n\n{\n  if (((*(uint *)(*data + 0xc) & 0x100) != 0) && ((*(uint *)(*data + 8) & 0x1000) != 0)) {\n    executeCallback1();\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xff | 0xfffffe7f;\n  }\n  if (((*(uint *)(*data + 0xc) & 0x200) != 0) && ((*(uint *)(*data + 8) & 0x2000) != 0)) {\n    FUNC_0800268c(data);\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xff | 0xfffffd7f;\n  }\n  _DAT_40013c14 = 0x20000;\n  *(undefined *)((int)data + 0x1d) = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800262c": "enable_interrupts_0800262c",
                "param_1": "data",
                "call_registered_function_08003594": "executeCallback1"
            },
            "calling": [],
            "called": [
                "FUN_08003594",
                "FUN_0800268c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800268c": {
            "entrypoint": "0x0800268c",
            "current_name": "FUNC_0800268c",
            "code": "\nvoid FUNC_0800268c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800268c": "FUNC_0800268c"
            },
            "calling": [
                "FUN_0800262c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800268e": {
            "entrypoint": "0x0800268e",
            "current_name": "initialize_permissions_0800268e",
            "code": "\nvoid initialize_permissions_0800268e(uint **pparam)\n\n{\n  uint *pVar1;\n  \n  *(undefined *)((int)pparam + 0x39) = 2;\n  pVar1 = *pparam;\n  if ((pVar1[8] & 0x1111) == 0) {\n    if ((pVar1[8] & 0x444) == 0) {\n      *pVar1 = *pVar1 & 0xfffffffe;\n    }\n  }\n  initialize_permissions_0800268e_0800340c(pparam);\n  *(undefined *)((int)pparam + 0x39) = 0;\n  *(undefined *)(pparam + 0xe) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800268e": "initialize_permissions_0800268e",
                "param_1": "pparam",
                "puVar1": "pVar1"
            },
            "calling": [
                "FUN_08003414"
            ],
            "called": [
                "FUN_0800340c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080026c8": {
            "entrypoint": "0x080026c8",
            "current_name": "FUNC_080026c8",
            "code": "\nvoid FUNC_080026c8(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080026c8": "FUNC_080026c8"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080026ca": {
            "entrypoint": "0x080026ca",
            "current_name": "FUNC_080026ca",
            "code": "\nvoid FUNC_080026ca(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080026ca": "FUNC_080026ca"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080026cc": {
            "entrypoint": "0x080026cc",
            "current_name": "FUNC_080026cc",
            "code": "\nvoid FUNC_080026cc(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080026cc": "FUNC_080026cc"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080026ce": {
            "entrypoint": "0x080026ce",
            "current_name": "process_flags_080026ce",
            "code": "\nvoid processFlags_080026ce(int *flags)\n\n{\n  int value;\n  \n  value = *flags;\n  if (((*(uint *)(value + 0x10) & 2) != 0) && ((*(uint *)(value + 0xc) & 2) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffd;\n    *(undefined *)(flags + 6) = 1;\n    if ((*(uint *)(*flags + 0x18) & 3) == 0) {\n      executeCondition();\n      FUNC_080026ca(flags);\n    }\n    else {\n      FUNC_080026c8();\n    }\n    *(undefined *)(flags + 6) = 0;\n  }\n  value = *flags;\n  if (((*(uint *)(value + 0x10) & 4) != 0) && ((*(uint *)(value + 0xc) & 4) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffb;\n    *(undefined *)(flags + 6) = 2;\n    if ((*(uint *)(*flags + 0x18) & 0x300) == 0) {\n      executeCondition(flags);\n      FUNC_080026ca(flags);\n    }\n    else {\n      FUNC_080026c8(flags);\n    }\n    *(undefined *)(flags + 6) = 0;\n  }\n  value = *flags;\n  if (((*(uint *)(value + 0x10) & 8) != 0) && ((*(uint *)(value + 0xc) & 8) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffff7;\n    *(undefined *)(flags + 6) = 4;\n    if ((*(uint *)(*flags + 0x1c) & 3) == 0) {\n      executeCondition(flags);\n      FUNC_080026ca(flags);\n    }\n    else {\n      FUNC_080026c8(flags);\n    }\n    *(undefined *)(flags + 6) = 0;\n  }\n  value = *flags;\n  if (((*(uint *)(value + 0x10) & 0x10) != 0) && ((*(uint *)(value + 0xc) & 0x10) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffef;\n    *(undefined *)(flags + 6) = 8;\n    if ((*(uint *)(*flags + 0x1c) & 0x300) == 0) {\n      executeCondition(flags);\n      FUNC_080026ca(flags);\n    }\n    else {\n      FUNC_080026c8(flags);\n    }\n    *(undefined *)(flags + 6) = 0;\n  }\n  value = *flags;\n  if (((*(uint *)(value + 0x10) & 1) != 0) && ((*(uint *)(value + 0xc) & 1) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffe;\n    executeFunction(flags);\n  }\n  value = *flags;\n  if (((*(uint *)(value + 0x10) & 0x80) != 0) && ((*(uint *)(value + 0xc) & 0x80) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffff7f;\n    FUNC_0800293e(flags);\n  }\n  value = *flags;\n  if (((*(uint *)(value + 0x10) & 0x40) != 0) && ((*(uint *)(value + 0xc) & 0x40) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffbf;\n    FUNC_080026cc(flags);\n  }\n  value = *flags;\n  if (((*(uint *)(value + 0x10) & 0x20) != 0) && ((*(uint *)(value + 0xc) & 0x20) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffdf;\n    FUNC_0800293c(flags);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080026ce": "process_flags_080026ce",
                "param_1": "flags",
                "iVar1": "value",
                "execute_if_condition_met_08003754": "executeCondition",
                "execute_if_condition_met_08003754(param_1)": "executeCondition(flags)",
                "execute_function_0800376e(param_1)": "executeFunction(flags)"
            },
            "calling": [
                "FUN_0800377c"
            ],
            "called": [
                "FUN_0800376e",
                "FUN_0800293c",
                "FUN_080026cc",
                "FUN_08003754",
                "FUN_080026c8",
                "FUN_080026ca",
                "FUN_0800293e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002848": {
            "entrypoint": "0x08002848",
            "current_name": "update_bitwise_operation_08002848",
            "code": "\nvoid updateBitwiseOperation_08002848(int dataPtr,uint bitIndex,int bitValue)\n\n{\n  *(uint *)(dataPtr + 0x20) = *(uint *)(dataPtr + 0x20) & ~(1 << (bitIndex & 0xff));\n  *(uint *)(dataPtr + 0x20) = *(uint *)(dataPtr + 0x20) | bitValue << (bitIndex & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002848": "update_bitwise_operation_08002848",
                "param_1": "dataPtr",
                "param_2": "bitIndex",
                "param_3": "bitValue"
            },
            "calling": [
                "FUN_08002864"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002864": {
            "entrypoint": "0x08002864",
            "current_name": "update_bitwise_operation_08002864",
            "code": "\nundefined4 updateBitwiseOperation_08002864(uint **inputParameters,undefined4 param)\n\n{\n  bool isSpecialAddress;\n  uint *dataPointer;\n  \n  update_bitwise_operation_08002848(*inputParameters,param,0);\n  dataPointer = *inputParameters;\n  if (dataPointer == (uint *)0x40010000) {\n    isSpecialAddress = true;\n  }\n  else if (dataPointer == (uint *)0x40010400) {\n    isSpecialAddress = true;\n  }\n  else {\n    isSpecialAddress = false;\n  }\n  if (((isSpecialAddress) && ((dataPointer[8] & 0x1111) == 0)) && ((dataPointer[8] & 0x444) == 0)) {\n    dataPointer[0x11] = dataPointer[0x11] & 0xffff7fff;\n  }\n  dataPointer = *inputParameters;\n  if (((dataPointer[8] & 0x1111) == 0) && ((dataPointer[8] & 0x444) == 0)) {\n    *dataPointer = *dataPointer & 0xfffffffe;\n  }\n  *(undefined *)((int)inputParameters + 0x39) = 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002864": "update_bitwise_operation_08002864",
                "param_1": "inputParameters",
                "param_2": "param",
                "bVar1": "isSpecialAddress",
                "puVar2": "dataPointer"
            },
            "calling": [
                "FUN_08003414"
            ],
            "called": [
                "FUN_08002848"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080028d4": {
            "entrypoint": "0x080028d4",
            "current_name": "update_value_at_offset_080028d4",
            "code": "\nvoid updateValueAtOffset_080028d4(int baseAddress,uint bitOffset,int value)\n\n{\n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) & ~(4 << (bitOffset & 0xff));\n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) | value << (bitOffset & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080028d4": "update_value_at_offset_080028d4",
                "param_1": "baseAddress",
                "param_2": "bitOffset",
                "param_3": "value"
            },
            "calling": [
                "FUN_080028f0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080028f0": {
            "entrypoint": "0x080028f0",
            "current_name": "update_value_and_check_condition_080028f0",
            "code": "\nundefined4 updateValueAndCheckCondition_080028f0(uint **sourcePointer,undefined4 paramValue)\n\n{\n  uint *source;\n  \n  updateValueAtOffset(*sourcePointer,paramValue,0);\n  source = *sourcePointer;\n  if (((source[8] & 0x1111) == 0) && ((source[8] & 0x444) == 0)) {\n    source[0x11] = source[0x11] & 0xffff7fff;\n  }\n  source = *sourcePointer;\n  if (((source[8] & 0x1111) == 0) && ((source[8] & 0x444) == 0)) {\n    *source = *source & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080028f0": "update_value_and_check_condition_080028f0",
                "param_1": "sourcePointer",
                "param_2": "paramValue",
                "puVar1": "source",
                "update_value_at_offset_080028d4": "updateValueAtOffset"
            },
            "calling": [
                "FUN_08003414"
            ],
            "called": [
                "FUN_080028d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800293c": {
            "entrypoint": "0x0800293c",
            "current_name": "FUNC_0800293c",
            "code": "\nvoid FUNC_0800293c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800293c": "FUNC_0800293c"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800293e": {
            "entrypoint": "0x0800293e",
            "current_name": "FUNC_0800293e",
            "code": "\nvoid FUNC_0800293e(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800293e": "FUNC_0800293e"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002940": {
            "entrypoint": "0x08002940",
            "current_name": "set_flags_and_value_08002940",
            "code": "\nvoid setFlagsAndValue_08002940(int *pointer)\n\n{\n  *(uint *)(*pointer + 0xc) = *(uint *)(*pointer + 0xc) & 0xfffffedf;\n  *(uint *)(*pointer + 0x14) = *(uint *)(*pointer + 0x14) & 0xfffffffe;\n  *(undefined *)((int)pointer + 0x3a) = 0x20;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002940": "set_flags_and_value_08002940",
                "param_1": "pointer"
            },
            "calling": [
                "FUN_08002ffc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800295c": {
            "entrypoint": "0x0800295c",
            "current_name": "process_binary_data_0800295c",
            "code": "\nundefined4 processBinaryData_0800295c(int *data)\n\n{\n  short count;\n  byte *bytePointer;\n  \n  if (*(char *)((int)data + 0x39) != '!') {\n    return 2;\n  }\n  if (data[2] == 0x1000) {\n    *(uint *)(*data + 4) = *(ushort *)data[8] & 0x1ff;\n    if (data[4] == 0) {\n      data[8] = data[8] + 2;\n    }\n    else {\n      data[8] = data[8] + 1;\n    }\n  }\n  else {\n    bytePointer = (byte *)data[8];\n    data[8] = (int)(bytePointer + 1);\n    *(uint *)(*data + 4) = (uint)*bytePointer;\n  }\n  count = *(short *)((int)data + 0x26) + -1;\n  *(short *)((int)data + 0x26) = count;\n  if (count == 0) {\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xffffff7f;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) | 0x40;\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800295c": "process_binary_data_0800295c",
                "param_1": "data",
                "sVar1": "count",
                "pbVar2": "bytePointer"
            },
            "calling": [
                "FUN_08002ffc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080029c8": {
            "entrypoint": "0x080029c8",
            "current_name": "calculate_and_update_values_080029c8",
            "code": "\nvoid calculateAndUpdateValues_080029c8(int *inputData)\n\n{\n  int shiftedVar1;\n  int shiftedVar2;\n  int shiftedVar3;\n  int shiftedVar4;\n  int shiftedVar5;\n  int inputVar1;\n  int inputVar2;\n  int inputVar3;\n  int inputVar4;\n  int baseAddr;\n  \n  *(uint *)(*inputData + 0x10) = *(uint *)(*inputData + 0x10) & 0xffffcfff | inputData[3];\n  *(uint *)(*inputData + 0xc) =\n       *(uint *)(*inputData + 0xc) & 0xffff69f3 | inputData[2] | inputData[4] | inputData[5] | inputData[7];\n  *(uint *)(*inputData + 0x14) = *(uint *)(*inputData + 0x14) & 0xfffffcff | inputData[6];\n  if (inputData[7] == 0x8000) {\n    baseAddr = *inputData;\n    if ((baseAddr != 0x40011000) && (baseAddr != 0x40011400)) {\n      shiftedVar1 = get_shifted_global_variable_080025ec();\n      inputVar1 = inputData[1];\n      shiftedVar2 = get_shifted_global_variable_080025ec();\n      inputVar2 = inputData[1];\n      shiftedVar3 = get_shifted_global_variable_080025ec();\n      inputVar3 = inputData[1];\n      shiftedVar4 = get_shifted_global_variable_080025ec();\n      inputVar4 = inputData[1];\n      shiftedVar5 = get_shifted_global_variable_080025ec();\n      *(uint *)(baseAddr + 8) =\n           ((uint)((int)((ulonglong)\n                         (((uint)(shiftedVar4 * 0x19) / (uint)(inputVar4 << 1) +\n                          (int)(((ulonglong)(uint)(shiftedVar5 * 0x19) /\n                                (ulonglong)(uint)(inputData[1] << 1)) / 100) * -100) * 8 + 0x32) *\n                         0x51eb851f >> 0x20) << 0x18) >> 0x1d) +\n           ((((uint)(shiftedVar2 * 0x19) / (uint)(inputVar2 << 1) +\n             (int)(((ulonglong)(uint)(shiftedVar3 * 0x19) / (ulonglong)(uint)(inputVar3 << 1)) / 100) * -100)\n             * 8 + 0x32) / 100 & 0xf8) * 2 +\n           (int)(((ulonglong)(uint)(shiftedVar1 * 0x19) / (ulonglong)(uint)(inputVar1 << 1)) / 100) * 0x10;\n      return;\n    }\n    shiftedVar1 = shifted_global_variable_0800260c();\n    inputVar1 = inputData[1];\n    shiftedVar2 = shifted_global_variable_0800260c();\n    inputVar2 = inputData[1];\n    shiftedVar3 = shifted_global_variable_0800260c();\n    inputVar3 = inputData[1];\n    shiftedVar4 = shifted_global_variable_0800260c();\n    inputVar4 = inputData[1];\n    shiftedVar5 = shifted_global_variable_0800260c();\n    *(uint *)(baseAddr + 8) =\n         ((uint)((int)((ulonglong)\n                       (((uint)(shiftedVar4 * 0x19) / (uint)(inputVar4 << 1) +\n                        (int)(((ulonglong)(uint)(shiftedVar5 * 0x19) / (ulonglong)(uint)(inputData[1] << 1))\n                             / 100) * -100) * 8 + 0x32) * 0x51eb851f >> 0x20) << 0x18) >> 0x1d) +\n         ((((uint)(shiftedVar2 * 0x19) / (uint)(inputVar2 << 1) +\n           (int)(((ulonglong)(uint)(shiftedVar3 * 0x19) / (ulonglong)(uint)(inputVar3 << 1)) / 100) * -100) *\n           8 + 0x32) / 100 & 0xf8) * 2 +\n         (int)(((ulonglong)(uint)(shiftedVar1 * 0x19) / (ulonglong)(uint)(inputVar1 << 1)) / 100) * 0x10;\n    return;\n  }\n  baseAddr = *inputData;\n  if ((baseAddr != 0x40011000) && (baseAddr != 0x40011400)) {\n    shiftedVar1 = get_shifted_global_variable_080025ec();\n    inputVar1 = inputData[1];\n    shiftedVar2 = get_shifted_global_variable_080025ec();\n    inputVar2 = inputData[1];\n    shiftedVar3 = get_shifted_global_variable_080025ec();\n    inputVar3 = inputData[1];\n    shiftedVar4 = get_shifted_global_variable_080025ec();\n    inputVar4 = inputData[1];\n    shiftedVar5 = get_shifted_global_variable_080025ec();\n    *(uint *)(baseAddr + 8) =\n         ((uint)((int)((ulonglong)\n                       (((uint)(shiftedVar4 * 0x19) / (uint)(inputVar4 << 2) +\n                        (int)(((ulonglong)(uint)(shiftedVar5 * 0x19) / (ulonglong)(uint)(inputData[1] << 2))\n                             / 100) * -100) * 0x10 + 0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n         ((((uint)(shiftedVar2 * 0x19) / (uint)(inputVar2 << 2) +\n           (int)(((ulonglong)(uint)(shiftedVar3 * 0x19) / (ulonglong)(uint)(inputVar3 << 2)) / 100) * -100) *\n           0x10 + 0x32) / 100 & 0xf0) +\n         (int)(((ulonglong)(uint)(shiftedVar1 * 0x19) / (ulonglong)(uint)(inputVar1 << 2)) / 100) * 0x10;\n    return;\n  }\n  shiftedVar1 = shifted_global_variable_0800260c();\n  inputVar1 = inputData[1];\n  shiftedVar2 = shifted_global_variable_0800260c();\n  inputVar2 = inputData[1];\n  shiftedVar3 = shifted_global_variable_0800260c();\n  inputVar3 = inputData[1];\n  shiftedVar4 = shifted_global_variable_0800260c();\n  inputVar4 = inputData[1];\n  shiftedVar5 = shifted_global_variable_0800260c();\n  *(uint *)(baseAddr + 8) =\n       ((uint)((int)((ulonglong)\n                     (((uint)(shiftedVar4 * 0x19) / (uint)(inputVar4 << 2) +\n                      (int)(((ulonglong)(uint)(shiftedVar5 * 0x19) / (ulonglong)(uint)(inputData[1] << 2)) /\n                           100) * -100) * 0x10 + 0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n       ((((uint)(shiftedVar2 * 0x19) / (uint)(inputVar2 << 2) +\n         (int)(((ulonglong)(uint)(shiftedVar3 * 0x19) / (ulonglong)(uint)(inputVar3 << 2)) / 100) * -100) *\n         0x10 + 0x32) / 100 & 0xf0) +\n       (int)(((ulonglong)(uint)(shiftedVar1 * 0x19) / (ulonglong)(uint)(inputVar1 << 2)) / 100) * 0x10;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080029c8": "calculate_and_update_values_080029c8",
                "param_1": "inputData",
                "iVar1": "shiftedVar1",
                "iVar2": "shiftedVar2",
                "iVar3": "shiftedVar3",
                "iVar4": "shiftedVar4",
                "iVar5": "shiftedVar5",
                "iVar6": "inputVar1",
                "iVar7": "inputVar2",
                "iVar8": "inputVar3",
                "iVar9": "inputVar4",
                "iVar10": "baseAddr"
            },
            "calling": [
                "FUN_08002d72"
            ],
            "called": [
                "FUN_0800260c",
                "FUN_080025ec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002d0c": {
            "entrypoint": "0x08002d0c",
            "current_name": "check_permissions_08002d0c",
            "code": "\nundefined4 checkPermissions_08002d0c(uint **permissionSet,uint requestedPermissions,uint allow,int currentPermissions,uint maxDiff)\n\n{\n  int dataDifference;\n  \n  do {\n    if (((requestedPermissions & ~**permissionSet) == 0) != allow) {\n      return 0;\n    }\n  } while ((maxDiff == 0xffffffff) ||\n          ((maxDiff != 0 && (dataDifference = get_data_08000e30(), (uint)(dataDifference - currentPermissions) <= maxDiff))));\n  (*permissionSet)[3] = (*permissionSet)[3] & 0xfffffe5f;\n  (*permissionSet)[5] = (*permissionSet)[5] & 0xfffffffe;\n  *(undefined *)((int)permissionSet + 0x39) = 0x20;\n  *(undefined *)((int)permissionSet + 0x3a) = 0x20;\n  *(undefined *)(permissionSet + 0xe) = 0;\n  return 3;\n}\n\n",
            "renaming": {
                "FUN_08002d0c": "check_permissions_08002d0c",
                "param_1": "permissionSet",
                "param_2": "requestedPermissions",
                "param_3": "allow",
                "param_4": "currentPermissions",
                "param_5": "maxDiff",
                "iVar1": "dataDifference"
            },
            "calling": [
                "FUN_08002dd0"
            ],
            "called": [
                "FUN_08000e30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002d70": {
            "entrypoint": "0x08002d70",
            "current_name": "FUNC_08002d70",
            "code": "\nvoid FUNC_08002d70(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002d70": "FUNC_08002d70"
            },
            "calling": [
                "FUN_08002d72"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002d72": {
            "entrypoint": "0x08002d72",
            "current_name": "initialize_data_structure_08002d72",
            "code": "\nundefined4 initialize_data_structure_08002d72(int *data_structure)\n\n{\n  if (data_structure != (int *)0x0) {\n    if (*(char *)((int)data_structure + 0x39) == '\\0') {\n      *(undefined *)(data_structure + 0xe) = 0;\n      FUNC_08002d70();\n    }\n    *(undefined *)((int)data_structure + 0x39) = 0x24;\n    *(uint *)(*data_structure + 0xc) = *(uint *)(*data_structure + 0xc) & 0xffffdfff;\n    calculate_and_update_values(data_structure);\n    *(uint *)(*data_structure + 0x10) = *(uint *)(*data_structure + 0x10) & 0xffffb7ff;\n    *(uint *)(*data_structure + 0x14) = *(uint *)(*data_structure + 0x14) & 0xffffffd5;\n    *(uint *)(*data_structure + 0xc) = *(uint *)(*data_structure + 0xc) | 0x2000;\n    value_4 = 0;\n    *(undefined *)((int)data_structure + 0x39) = 0x20;\n    *(undefined *)((int)data_structure + 0x3a) = 0x20;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08002d72": "initialize_data_structure_08002d72",
                "param_1": "data_structure",
                "calculate_and_update_values_080029c8": "calculate_and_update_values",
                "param_1[0xf]": "value_4"
            },
            "calling": [
                "FUN_08003978"
            ],
            "called": [
                "FUN_080029c8",
                "FUN_08002d70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002dd0": {
            "entrypoint": "0x08002dd0",
            "current_name": "process_data_08002dd0",
            "code": "\nundefined4 processData_08002dd0(int *dataBuffer,ushort *data,int dataSize,undefined4 paramValue)\n\n{\n  int result;\n  undefined4 returnValue;\n  \n  if (*(char *)((int)dataBuffer + 0x39) == ' ') {\n    if (data == (ushort *)0x0) {\n      returnValue = 1;\n    }\n    else if (dataSize == 0) {\n      returnValue = 1;\n    }\n    else if (*(char *)(dataBuffer + 0xe) == '\\x01') {\n      returnValue = 2;\n    }\n    else {\n      *(undefined *)(dataBuffer + 0xe) = 1;\n      dataBuffer[0xf] = 0;\n      *(undefined *)((int)dataBuffer + 0x39) = 0x21;\n      returnValue = get_data_08000e30();\n      *(short *)(dataBuffer + 9) = (short)dataSize;\n      *(short *)((int)dataBuffer + 0x26) = (short)dataSize;\n      while (*(short *)((int)dataBuffer + 0x26) != 0) {\n        *(short *)((int)dataBuffer + 0x26) = *(short *)((int)dataBuffer + 0x26) + -1;\n        if (dataBuffer[2] == 0x1000) {\n          result = check_permissions_08002d0c(dataBuffer,0x80,0,returnValue,paramValue);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*dataBuffer + 4) = *data & 0x1ff;\n          if (dataBuffer[4] == 0) {\n            data = data + 1;\n          }\n          else {\n            data = (ushort *)((int)data + 1);\n          }\n        }\n        else {\n          result = check_permissions_08002d0c(dataBuffer,0x80,0,returnValue,paramValue);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*dataBuffer + 4) = (uint)*(byte *)data;\n          data = (ushort *)((int)data + 1);\n        }\n      }\n      result = check_permissions_08002d0c(dataBuffer,0x40,0,returnValue,paramValue);\n      if (result == 0) {\n        *(undefined *)((int)dataBuffer + 0x39) = 0x20;\n        *(undefined *)(dataBuffer + 0xe) = 0;\n        returnValue = 0;\n      }\n      else {\n        returnValue = 3;\n      }\n    }\n  }\n  else {\n    returnValue = 2;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08002dd0": "process_data_08002dd0",
                "param_1": "dataBuffer",
                "param_2": "data",
                "param_3": "dataSize",
                "param_4": "paramValue",
                "iVar1": "result",
                "uVar2": "returnValue"
            },
            "calling": [
                "FUN_08003d18"
            ],
            "called": [
                "FUN_08002d0c",
                "FUN_08000e30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002eb2": {
            "entrypoint": "0x08002eb2",
            "current_name": "check_and_update_values_08002eb2",
            "code": "\nundefined4 check_and_update_values_08002eb2(int *input_array,int value1,int value2)\n\n{\n  if (*(char *)((int)input_array + 0x39) != ' ') {\n    return 2;\n  }\n  if (value1 == 0) {\n    return 1;\n  }\n  if (value2 == 0) {\n    return 1;\n  }\n  if (*(char *)(input_array + 0xe) != '\\x01') {\n    input_array_element_8 = value1;\n    *(short *)(input_array + 9) = (short)value2;\n    *(short *)((int)input_array + 0x26) = (short)value2;\n    input_array_element_f = 0;\n    *(undefined *)((int)input_array + 0x39) = 0x21;\n    *(undefined *)(input_array + 0xe) = 0;\n    *(uint *)(*input_array + 0xc) = *(uint *)(*input_array + 0xc) | 0x80;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08002eb2": "check_and_update_values_08002eb2",
                "param_1": "input_array",
                "param_2": "value1",
                "param_3": "value2",
                "param_1[8]": "input_array_element_8",
                "param_1[0xf]": "input_array_element_f"
            },
            "calling": [
                "FUN_08003f48",
                "FUN_08003eac"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002efa": {
            "entrypoint": "0x08002efa",
            "current_name": "update_data_08002efa",
            "code": "\nundefined4 updateData_08002efa(int *data,int value1,int value2)\n\n{\n  if (*(char *)((int)data + 0x3a) != ' ') {\n    return 2;\n  }\n  if (value1 == 0) {\n    return 1;\n  }\n  if (value2 == 0) {\n    return 1;\n  }\n  if (*(char *)(data + 0xe) != '\\x01') {\n    data[10] = value1;\n    *(short *)(data + 0xb) = (short)value2;\n    *(short *)((int)data + 0x2e) = (short)value2;\n    data[0xf] = 0;\n    *(undefined *)((int)data + 0x3a) = 0x22;\n    *(undefined *)(data + 0xe) = 0;\n    *(uint *)(*data + 0x14) = *(uint *)(*data + 0x14) | 1;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) | 0x120;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08002efa": "update_data_08002efa",
                "param_1": "data",
                "param_2": "value1",
                "param_3": "value2"
            },
            "calling": [
                "FUN_08003e18",
                "FUN_08003e54"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f4c": {
            "entrypoint": "0x08002f4c",
            "current_name": "clear_bit_and_set_flag_08002f4c",
            "code": "\nundefined4 clearBitAndSetFlag_08002f4c(int *inputData)\n\n{\n  *(uint *)(*inputData + 0xc) = *(uint *)(*inputData + 0xc) & 0xffffffbf;\n  *(undefined *)((int)inputData + 0x39) = 0x20;\n  executeOperation();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002f4c": "clear_bit_and_set_flag_08002f4c",
                "param_1": "inputData",
                "execute_operation_08003f48": "executeOperation"
            },
            "calling": [
                "FUN_08002ffc"
            ],
            "called": [
                "FUN_08003f48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f66": {
            "entrypoint": "0x08002f66",
            "current_name": "process_string_08002f66",
            "code": "\nundefined4 processString_08002f66(int *input)\n\n{\n  byte *outputByte;\n  short remainingCount;\n  undefined *outputPointer;\n  \n  if (*(char *)((int)input + 0x3a) != '\\\"') {\n    return 2;\n  }\n  if (input[2] == 0x1000) {\n    if (input[4] == 0) {\n      *(ushort *)input[10] = (ushort)((uint)(*(int *)(*input + 4) << 0x17) >> 0x17);\n      input[10] = input[10] + 2;\n    }\n    else {\n      *(ushort *)input[10] = (ushort)*(undefined4 *)(*input + 4) & 0xff;\n      input[10] = input[10] + 1;\n    }\n  }\n  else if (input[4] == 0) {\n    outputPointer = (undefined *)input[10];\n    input[10] = (int)(outputPointer + 1);\n    *outputPointer = (char)*(undefined4 *)(*input + 4);\n  }\n  else {\n    outputByte = (byte *)input[10];\n    input[10] = (int)(outputByte + 1);\n    *outputByte = (byte)*(undefined4 *)(*input + 4) & 0x7f;\n  }\n  remainingCount = *(short *)((int)input + 0x2e) + -1;\n  *(short *)((int)input + 0x2e) = remainingCount;\n  if (remainingCount != 0) {\n    return 0;\n  }\n  *(uint *)(*input + 0xc) = *(uint *)(*input + 0xc) & 0xfffffedf;\n  *(uint *)(*input + 0x14) = *(uint *)(*input + 0x14) & 0xfffffffe;\n  *(undefined *)((int)input + 0x3a) = 0x20;\n  execute_function_based_on_index_08003f24();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002f66": "process_string_08002f66",
                "param_1": "input",
                "pbVar1": "outputByte",
                "sVar2": "remainingCount",
                "puVar3": "outputPointer"
            },
            "calling": [
                "FUN_08002ffc"
            ],
            "called": [
                "FUN_08003f24"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ffc": {
            "entrypoint": "0x08002ffc",
            "current_name": "process_data_08002ffc",
            "code": "\nvoid process_data_08002ffc(uint **data_ptr)\n\n{\n  int conditional_value;\n  uint data_value;\n  uint *ptr;\n  uint flag_value;\n  uint flag;\n  \n  ptr = *data_ptr;\n  flag = *ptr;\n  data_value = ptr[3];\n  if ((((flag & 0xf) == 0) && ((flag & 0x20) != 0)) && ((data_value & 0x20) != 0)) {\n    process_string(data_ptr);\n    return;\n  }\n  if (((flag & 0xf) == 0) || ((flag_value = ptr[5] & 1, flag_value == 0 && ((data_value & 0x120) == 0)))) {\n    if (((flag & 0x80) != 0) && ((data_value & 0x80) != 0)) {\n      process_binary_data(data_ptr);\n      return;\n    }\n    if (((flag & 0x40) != 0) && ((data_value & 0x40) != 0)) {\n      clear_bit_and_set_flag(data_ptr);\n    }\n  }\n  else {\n    if (((flag & 1) != 0) && ((data_value & 0x100) != 0)) {\n      conditional_ptr = (uint *)((uint)conditional_ptr | 1);\n    }\n    if (((flag & 4) != 0) && (flag_value != 0)) {\n      conditional_ptr = (uint *)((uint)conditional_ptr | 2);\n    }\n    if (((flag & 2) != 0) && (flag_value != 0)) {\n      conditional_ptr = (uint *)((uint)conditional_ptr | 4);\n    }\n    if (((flag & 8) != 0) && (flag_value != 0)) {\n      conditional_ptr = (uint *)((uint)conditional_ptr | 8);\n    }\n    if (conditional_ptr != (uint *)0x0) {\n      if (((flag & 0x20) != 0) && ((data_value & 0x20) != 0)) {\n        process_string(data_ptr);\n      }\n      if ((((uint)conditional_ptr & 8) == 0) && (((*data_ptr)[5] & 0x40) == 0)) {\n        FUNC_08003f94(data_ptr);\n        conditional_ptr = (uint *)0x0;\n        return;\n      }\n      set_flags_and_value(data_ptr);\n      ptr = *data_ptr;\n      if ((ptr[5] & 0x40) == 0) {\n        FUNC_08003f94(data_ptr);\n        return;\n      }\n      ptr[5] = ptr[5] & 0xffffffbf;\n      if (input_ptr == (uint *)0x0) {\n        FUNC_08003f94(data_ptr);\n        return;\n      }\n      input_ptr_offset_0x14 = (uint)&label_0800311c_1;\n      conditional_value = check_and_modify_param(input_ptr);\n      if (conditional_value != 0) {\n        (*(execute_code *)input_ptr_offset_0x14)();\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ffc": "process_data_08002ffc",
                "param_1": "data_ptr",
                "iVar1": "conditional_value",
                "uVar2": "data_value",
                "puVar3": "ptr",
                "uVar4": "flag_value",
                "uVar5": "flag",
                "process_string_08002f66": "process_string",
                "process_binary_data_0800295c": "process_binary_data",
                "clear_bit_and_set_flag_08002f4c": "clear_bit_and_set_flag",
                "set_flags_and_value_08002940": "set_flags_and_value",
                "check_and_modify_param_08000f8c": "check_and_modify_param",
                "LAB_0800311c_1": "label_0800311c_1",
                "param_1[0xf]": "conditional_ptr",
                "param_1[0xd]": "input_ptr",
                "&LAB_0800311c_1": "&label_0800311c_1",
                "param_1[0xd][0x14]": "input_ptr_offset_0x14",
                "code": "execute_code"
            },
            "calling": [],
            "called": [
                "FUN_08002940",
                "FUN_08000f8c",
                "FUN_08002f4c",
                "FUN_08003f94",
                "FUN_0800295c",
                "FUN_08002f66"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800312c": {
            "entrypoint": "0x0800312c",
            "current_name": "combine_bytes_0800312c",
            "code": "\nbyte combineBytes_0800312c(int input)\n\n{\n  return *(byte *)(input + 0x3a) | *(byte *)(input + 0x39);\n}\n\n",
            "renaming": {
                "FUN_0800312c": "combine_bytes_0800312c",
                "param_1": "input"
            },
            "calling": [
                "FUN_08003dd0",
                "FUN_08003df4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003138": {
            "entrypoint": "0x08003138",
            "current_name": "bitwise_extract_08003138",
            "code": "\nuint bitwiseExtract_08003138(uint data,int basePointer)\n\n{\n  return *(uint *)(basePointer + ((data << 0x18) >> 0x1c) * 4) >> (data & 0xf) & 1;\n}\n\n",
            "renaming": {
                "FUN_08003138": "bitwise_extract_08003138",
                "param_1": "data",
                "param_2": "basePointer"
            },
            "calling": [
                "FUN_080041bc",
                "FUN_08004110"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800314e": {
            "entrypoint": "0x0800314e",
            "current_name": "set_bit_value_0800314e",
            "code": "\nvoid setBitValue_0800314e(unsignedInteger value,int array)\n\n{\n  unsignedInteger index;\n  \n  index = (value << 0x18) >> 0x1c;\n  *(unsignedInteger *)(array + index * 4) = *(unsignedInteger *)(array + index * 4) | 1 << (value & 0xf);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800314e": "set_bit_value_0800314e",
                "param_1": "value",
                "param_2": "array",
                "uVar1": "index",
                "uint": "unsignedInteger"
            },
            "calling": [
                "FUN_08004110"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800316c": {
            "entrypoint": "0x0800316c",
            "current_name": "update_bit_0800316c",
            "code": "\nvoid updateBit_0800316c(uint value,int array)\n\n{\n  uint index;\n  \n  index = (value << 0x18) >> 0x1c;\n  *(uint *)(array + index * 4) = *(uint *)(array + index * 4) & ~(1 << (value & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800316c": "update_bit_0800316c",
                "param_1": "value",
                "param_2": "array",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08004110"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800318c": {
            "entrypoint": "0x0800318c",
            "current_name": "map_param_to_address_0800318c",
            "code": "\nundefined4 mapParamToAddress_0800318c(undefined4 input)\n\n{\n  switch(input) {\n  case 0:\n    return 0x40020000;\n  case 1:\n    return 0x40020400;\n  case 2:\n    return 0x40020800;\n  case 3:\n    return 0x40020c00;\n  case 4:\n    return 0x40021000;\n  case 5:\n    return 0x40021400;\n  case 6:\n    return 0x40021800;\n  case 7:\n    return 0x40021c00;\n  case 8:\n    return 0x40022000;\n  case 9:\n    return 0x40022400;\n  case 10:\n    return 0x40022800;\n  default:\n    return 0;\n  }\n}\n\n",
            "renaming": {
                "FUN_0800318c": "map_param_to_address_0800318c",
                "param_1": "input"
            },
            "calling": [
                "FUN_080041bc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080031fc": {
            "entrypoint": "0x080031fc",
            "current_name": "set_flag_bits_080031fc",
            "code": "\n\n\nundefined4 setFlagBits_080031fc(undefined4 flagIndex)\n\n{\n  undefined4 returnValue;\n  \n  switch(flagIndex) {\n  case 0:\n    _DAT_40023830 = _DAT_40023830 | 1;\n    returnValue = 0x40020000;\n    break;\n  case 1:\n    _DAT_40023830 = _DAT_40023830 | 2;\n    returnValue = 0x40020400;\n    break;\n  case 2:\n    _DAT_40023830 = _DAT_40023830 | 4;\n    returnValue = 0x40020800;\n    break;\n  case 3:\n    _DAT_40023830 = _DAT_40023830 | 8;\n    returnValue = 0x40020c00;\n    break;\n  case 4:\n    _DAT_40023830 = _DAT_40023830 | 0x10;\n    returnValue = 0x40021000;\n    break;\n  case 5:\n    _DAT_40023830 = _DAT_40023830 | 0x20;\n    returnValue = 0x40021400;\n    break;\n  case 6:\n    _DAT_40023830 = _DAT_40023830 | 0x40;\n    returnValue = 0x40021800;\n    break;\n  case 7:\n    _DAT_40023830 = _DAT_40023830 | 0x80;\n    returnValue = 0x40021c00;\n    break;\n  case 8:\n    _DAT_40023830 = _DAT_40023830 | 0x100;\n    returnValue = 0x40022000;\n    break;\n  case 9:\n    _DAT_40023830 = _DAT_40023830 | 0x200;\n    returnValue = 0x40022400;\n    break;\n  case 10:\n    _DAT_40023830 = _DAT_40023830 | 0x400;\n    returnValue = 0x40022800;\n    break;\n  default:\n    returnValue = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_080031fc": "set_flag_bits_080031fc",
                "param_1": "flagIndex",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08003978",
                "FUN_08003486"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003380": {
            "entrypoint": "0x08003380",
            "current_name": "check_value_08003380",
            "code": "\nundefined4 check_value_08003380(undefined4 value,undefined4 data,undefined4 index,undefined4 size)\n\n{\n  int indexValue;\n  \n  indexValue = get_value_index_0800354a(value,&DAT_08005a18,index,size,size);\n  if ((uint)(indexValue << 0xc) >> 0x1b != 2) {\n    return 0;\n  }\n  return 0x10;\n}\n\n",
            "renaming": {
                "FUN_08003380": "check_value_08003380",
                "param_1": "value",
                "param_2": "data",
                "param_3": "index",
                "param_4": "size",
                "iVar1": "indexValue"
            },
            "calling": [
                "FUN_080033d8"
            ],
            "called": [
                "FUN_0800354a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800339c": {
            "entrypoint": "0x0800339c",
            "current_name": "get_value_index_0800339c",
            "code": "\nundefined4 get_value_index_0800339c(undefined4 value,undefined4 ptr,undefined4 param,undefined4 param_5)\n\n{\n  int index;\n  uint shiftedValue;\n  \n  index = get_value_index_0800339c_0800354a(value,&DAT_08005a3c,param,param_5,param_5);\n  shiftedValue = (uint)(index << 0xc) >> 0x1b;\n  if (shiftedValue == 3) {\n    return 8;\n  }\n  if (shiftedValue != 4) {\n    if (shiftedValue != 2) {\n      return 0;\n    }\n    return 4;\n  }\n  return 0xc;\n}\n\n",
            "renaming": {
                "FUN_0800339c": "get_value_index_0800339c",
                "param_1": "value",
                "param_2": "ptr",
                "param_3": "param",
                "param_4": "param_5",
                "iVar1": "index",
                "uVar2": "shiftedValue"
            },
            "calling": [
                "FUN_08003414"
            ],
            "called": [
                "FUN_0800354a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080033c8": {
            "entrypoint": "0x080033c8",
            "current_name": "clear_data_flags_080033c8",
            "code": "\n\n\nvoid clearDataFlags_080033c8(void)\n\n{\n  _DAT_40023840 = _DAT_40023840 & 0xdfffffff;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080033c8": "clear_data_flags_080033c8"
            },
            "calling": [
                "FUN_08000f56"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080033d8": {
            "entrypoint": "0x080033d8",
            "current_name": "process_parameter_080033d8",
            "code": "\nvoid processParameter_080033d8(undefined4 parameter)\n\n{\n  int result;\n  int parameterArray [5];\n  \n  parameterArray[0] = check_parameter_080034f4(parameter,&DAT_08005a18);\n  if ((parameterArray[0] != 0) && ((result = check_value_08003380(parameter), result == 0 || (result == 0x10)))) {\n    clear_bit_and_set_flag_08000f72(parameterArray,result);\n    initialize_data_08000f56(parameterArray);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080033d8": "process_parameter_080033d8",
                "param_1": "parameter",
                "iVar1": "result",
                "local_1c": "parameterArray"
            },
            "calling": [
                "FUN_08004110"
            ],
            "called": [
                "FUN_08000f72",
                "FUN_08003380",
                "FUN_08000f56",
                "FUN_080034f4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800340c": {
            "entrypoint": "0x0800340c",
            "current_name": "initialize_permissions_0800340c",
            "code": "\nvoid initialize_permissions_0800340c(void)\n\n{\n  clear_permissions();\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800340c": "initialize_permissions_0800340c",
                "clear_permissions_080035fc": "clear_permissions"
            },
            "calling": [
                "FUN_0800268e"
            ],
            "called": [
                "FUN_080035fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003414": {
            "entrypoint": "0x08003414",
            "current_name": "process_parameter_08003414",
            "code": "\nvoid processParameter_08003414(undefined4 parameter)\n\n{\n  int valueIndex;\n  uint valueIndex2;\n  int permissions [16];\n  \n  permissions[0] = check_parameter_080034f4(parameter,&DAT_08005a3c);\n  if ((permissions[0] != 0) &&\n     ((((valueIndex = get_value_index_0800339c(parameter), valueIndex == 0 || (valueIndex == 4)) || (valueIndex == 8)) ||\n      ((valueIndex == 0xc || (valueIndex == 0x18)))))) {\n    valueIndex2 = get_value_index_0800354a(parameter,&DAT_08005a3c);\n    if ((valueIndex2 & 0x100000) == 0) {\n      update_bitwise_operation_08002864(permissions,valueIndex);\n    }\n    else {\n      update_value_and_check_condition_080028f0(permissions,valueIndex);\n    }\n    initialize_permissions_0800268e(permissions);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003414": "process_parameter_08003414",
                "param_1": "parameter",
                "iVar1": "valueIndex",
                "uVar2": "valueIndex2",
                "local_4c": "permissions"
            },
            "calling": [
                "FUN_08004110"
            ],
            "called": [
                "FUN_0800339c",
                "FUN_0800268e",
                "FUN_08002864",
                "FUN_080028f0",
                "FUN_080034f4",
                "FUN_0800354a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800346c": {
            "entrypoint": "0x0800346c",
            "current_name": "initialize_data_0800346c",
            "code": "\nvoid initialize_data_0800346c(void)\n\n{\n  fetch_data();\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800346c": "initialize_data_0800346c",
                "get_data_08000e30": "fetch_data"
            },
            "calling": [
                "FUN_08004204"
            ],
            "called": [
                "FUN_08000e30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003474": {
            "entrypoint": "0x08003474",
            "current_name": "FUNC_08003474",
            "code": "\nvoid FUNC_08003474(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003474": "FUNC_08003474"
            },
            "calling": [
                "FUN_08003476"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08003476": {
            "entrypoint": "0x08003476",
            "current_name": "initialize_application_08003476",
            "code": "\nvoid initialize_application_08003476(void)\n\n{\n  update_dat_value();\n  initialize_application_08003476();\n  FUNC_08003474();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003476": "initialize_application_08003476",
                "update_dat_value_08000e18": "update_dat_value",
                "initialize_application_08000f4e": "initialize_application"
            },
            "calling": [],
            "called": [
                "FUN_08000f4e",
                "FUN_08003474",
                "FUN_08000e18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003486": {
            "entrypoint": "0x08003486",
            "current_name": "update_flag_bits_08003486",
            "code": "\nvoid update_flag_bits_08003486(uint flag_mask,undefined4 param_2,undefined4 param_3)\n\n{\n  undefined4 flag_value;\n  uint bit_mask;\n  undefined4 local_param_2;\n  undefined4 local_param_3;\n  undefined4 local_param_4;\n  \n  flag_value = set_flag_bits_080031fc((flag_mask << 0x18) >> 0x1c);\n  bit_mask = 1 << (flag_mask & 0xf) & 0xffff;\n  local_param_4 = 2;\n  local_param_2 = param_2;\n  local_param_3 = param_3;\n  update_registers_08000fb4(flag_value,&bit_mask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003486": "update_flag_bits_08003486",
                "param_1": "flag_mask",
                "uVar1": "flag_value",
                "local_24": "bit_mask",
                "local_20": "local_param_2",
                "local_1c": "local_param_3",
                "local_18": "local_param_4"
            },
            "calling": [
                "FUN_08004110"
            ],
            "called": [
                "FUN_08000fb4",
                "FUN_080031fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080034b6": {
            "entrypoint": "0x080034b6",
            "current_name": "update_value_based_on_condition_080034b6",
            "code": "\nvoid update_value_based_on_condition_080034b6(undefined4 value_ptr,undefined2 value_data,int condition,undefined4 value_to_update)\n\n{\n  if (condition == 0) {\n    update_value_in_memory(value_ptr,value_data,0,value_to_update,value_to_update);\n    return;\n  }\n  update_value_in_memory(value_ptr,value_data,1,value_to_update,value_to_update);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080034b6": "update_value_based_on_condition_080034b6",
                "param_1": "value_ptr",
                "param_2": "value_data",
                "param_3": "condition",
                "param_4": "value_to_update",
                "update_value_in_memory_08001198": "update_value_in_memory"
            },
            "calling": [
                "FUN_080041bc"
            ],
            "called": [
                "FUN_08001198"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080034ce": {
            "entrypoint": "0x080034ce",
            "current_name": "initialize_device_080034ce",
            "code": "\nvoid initialize_device_080034ce(void)\n\n{\n  initialize_and_update_device_data();\n  configure_device();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080034ce": "initialize_device_080034ce",
                "initialize_and_update_08000de4": "initialize_and_update_device_data",
                "initialize_and_configure_device_08000c8c": "configure_device"
            },
            "calling": [
                "FUN_08000d8e"
            ],
            "called": [
                "FUN_08000c8c",
                "FUN_08000de4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080034da": {
            "entrypoint": "0x080034da",
            "current_name": "find_parameter_value_080034da",
            "code": "\nundefined4 find_parameter_value_080034da(int target_value,short *data_array)\n\n{\n  while( true ) {\n    if (*data_array == -1) {\n      return 0;\n    }\n    if (*data_array == target_value) break;\n    data_array = data_array + 6;\n  }\n  return *(undefined4 *)(data_array + 2);\n}\n\n",
            "renaming": {
                "FUN_080034da": "find_parameter_value_080034da",
                "param_1": "target_value",
                "param_2": "data_array"
            },
            "calling": [
                "FUN_080034da",
                "FUN_080034f4"
            ],
            "called": [
                "FUN_080034da"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080034f4": {
            "entrypoint": "0x080034f4",
            "current_name": "check_parameter_080034f4",
            "code": "\nundefined4 checkParameter_080034f4(int inputValue)\n\n{\n  undefined4 parameterValue;\n  \n  if (inputValue != -1) {\n    parameterValue = find_parameter_value_080034da();\n    return parameterValue;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080034f4": "check_parameter_080034f4",
                "param_1": "inputValue",
                "uVar1": "parameterValue"
            },
            "calling": [
                "FUN_08003cc8",
                "FUN_08003414",
                "FUN_080033d8",
                "FUN_08003978",
                "FUN_08003d18"
            ],
            "called": [
                "FUN_080034da"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003506": {
            "entrypoint": "0x08003506",
            "current_name": "find_matching_value_08003506",
            "code": "\nint find_matching_value_08003506(int value,short *array)\n\n{\n  while( true ) {\n    if (*(int *)(array + 2) == 0) {\n      return -1;\n    }\n    if (*(int *)(array + 2) == value) break;\n    array = array + 6;\n  }\n  return (int)*array;\n}\n\n",
            "renaming": {
                "FUN_08003506": "find_matching_value_08003506",
                "param_1": "value",
                "param_2": "array"
            },
            "calling": [
                "FUN_08003506",
                "FUN_0800351e"
            ],
            "called": [
                "FUN_08003506"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800351e": {
            "entrypoint": "0x0800351e",
            "current_name": "get_matching_value_0800351e",
            "code": "\nundefined4 getMatchingValue_0800351e(int inputValue)\n\n{\n  undefined4 matchingValue;\n  \n  if (inputValue != 0) {\n    matchingValue = find_matching_value_08003506();\n    return matchingValue;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800351e": "get_matching_value_0800351e",
                "param_1": "inputValue",
                "uVar1": "matchingValue"
            },
            "calling": [
                "FUN_08003cc8",
                "FUN_0800447c"
            ],
            "called": [
                "FUN_08003506"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800352e": {
            "entrypoint": "0x0800352e",
            "current_name": "find_value_index_0800352e",
            "code": "\nundefined4 find_value_index_0800352e(int value_to_find,short *array)\n\n{\n  while( true ) {\n    if (*array == -1) {\n      return 0xffffffff;\n    }\n    if (*array == value_to_find) break;\n    array = array + 6;\n  }\n  return *(undefined4 *)(array + 4);\n}\n\n",
            "renaming": {
                "FUN_0800352e": "find_value_index_0800352e",
                "param_1": "value_to_find",
                "param_2": "array"
            },
            "calling": [
                "FUN_0800352e",
                "FUN_0800354a"
            ],
            "called": [
                "FUN_0800352e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800354a": {
            "entrypoint": "0x0800354a",
            "current_name": "get_value_index_0800354a",
            "code": "\nundefined4 get_value_index_0800354a(int input_value)\n\n{\n  undefined4 value_index;\n  \n  if (input_value == -1) {\n    return 0xffffffff;\n  }\n  value_index = find_value_index_0800352e();\n  return value_index;\n}\n\n",
            "renaming": {
                "FUN_0800354a": "get_value_index_0800354a",
                "param_1": "input_value",
                "uVar1": "value_index"
            },
            "calling": [
                "FUN_08003414",
                "FUN_0800339c",
                "FUN_08003978",
                "FUN_08003380"
            ],
            "called": [
                "FUN_0800352e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800355e": {
            "entrypoint": "0x0800355e",
            "current_name": "check_param_in_array_0800355e",
            "code": "\nundefined4 check_param_in_array_0800355e(int value_to_check,short *array_iterator)\n\n{\n  if (value_to_check == -1) {\n    return 0;\n  }\n  while( true ) {\n    if (*array_iterator == -1) {\n      return 0;\n    }\n    if (value_to_check == *array_iterator) break;\n    array_iterator = array_iterator + 6;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800355e": "check_param_in_array_0800355e",
                "param_1": "value_to_check",
                "param_2": "array_iterator"
            },
            "calling": [
                "FUN_08004110"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003582": {
            "entrypoint": "0x08003582",
            "current_name": "compare_and_return_smaller_08003582",
            "code": "\nint compare_and_return_smaller_08003582(int value1,int value2)\n\n{\n  if (value1 != value2) {\n    if (value1 == 0) {\n      return value2;\n    }\n    if (value2 == 0) {\n      return value1;\n    }\n    value1 = 0;\n  }\n  return value1;\n}\n\n",
            "renaming": {
                "FUN_08003582": "compare_and_return_smaller_08003582",
                "param_1": "value1",
                "param_2": "value2"
            },
            "calling": [
                "FUN_08003978"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003594": {
            "entrypoint": "0x08003594",
            "current_name": "call_registered_function_08003594",
            "code": "\nvoid callRegisteredFunction_08003594(void)\n\n{\n  if (DAT_20000188 != (functionPointer *)0x0) {\n    (*DAT_20000188)(DAT_200001ac);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003594": "call_registered_function_08003594",
                "code": "functionPointer"
            },
            "calling": [
                "FUN_0800262c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080035bc": {
            "entrypoint": "0x080035bc",
            "current_name": "initialize_memory_080035bc",
            "code": "\n\n\nvoid initializeMemory_080035bc(void)\n\n{\n  _DAT_40023808 = 0;\n  _DAT_40023804 = 0x24003010;\n  _DAT_40023800 = _DAT_40023800 & 0xfef2ffff | 1;\n  _DAT_4002380c = 0;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080035bc": "initialize_memory_080035bc"
            },
            "calling": [
                "entry"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080035fc": {
            "entrypoint": "0x080035fc",
            "current_name": "clear_permissions_080035fc",
            "code": "\n\n\nvoid clearPermissions_080035fc(int *permissions)\n\n{\n  if (*permissions == 0x40010000) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffffffe;\n  }\n  if (*permissions == 0x40000000) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffffe;\n  }\n  if (*permissions == 0x40000400) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffffd;\n  }\n  if (*permissions == 0x40000800) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffffb;\n  }\n  if (*permissions == 0x40000c00) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffff7;\n  }\n  if (*permissions == 0x40001000) {\n    _DAT_40023840 = _DAT_40023840 & 0xffffffef;\n  }\n  if (*permissions == 0x40001400) {\n    _DAT_40023840 = _DAT_40023840 & 0xffffffdf;\n  }\n  if (*permissions == 0x40010400) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffffffd;\n  }\n  if (*permissions == 0x40014000) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffeffff;\n  }\n  if (*permissions == 0x40014400) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffdffff;\n  }\n  if (*permissions == 0x40014800) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffbffff;\n  }\n  if (*permissions == 0x40001800) {\n    _DAT_40023840 = _DAT_40023840 & 0xffffffbf;\n  }\n  if (*permissions == 0x40001c00) {\n    _DAT_40023840 = _DAT_40023840 & 0xffffff7f;\n  }\n  if (*permissions == 0x40002000) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffeff;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080035fc": "clear_permissions_080035fc",
                "param_1": "permissions"
            },
            "calling": [
                "FUN_0800340c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003750": {
            "entrypoint": "0x08003750",
            "current_name": "decrement_param_by_four_08003750",
            "code": "\nint decrement_param_by_four_08003750(int input_value)\n\n{\n  return input_value + -4;\n}\n\n",
            "renaming": {
                "FUN_08003750": "decrement_param_by_four_08003750",
                "param_1": "input_value"
            },
            "calling": [
                "FUN_0800376e",
                "FUN_08003754"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003754": {
            "entrypoint": "0x08003754",
            "current_name": "execute_if_condition_met_08003754",
            "code": "\nvoid executeIfConditionMet_08003754(int inputParameter)\n\n{\n  int decrementedValue;\n  \n  decrementedValue = decrement_param_by_four_08003750();\n  if ((*(code **)(decrementedValue + 0x48) != (code *)0x0) && (*(char *)(inputParameter + 0x18) == '\\x01')) {\n    (**(code **)(decrementedValue + 0x48))(decrementedValue,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003754": "execute_if_condition_met_08003754",
                "param_1": "inputParameter",
                "iVar1": "decrementedValue"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [
                "FUN_08003750"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800376e": {
            "entrypoint": "0x0800376e",
            "current_name": "execute_function_0800376e",
            "code": "\nvoid executeFunction_0800376e(void)\n\n{\n  int paramOffset;\n  \n  paramOffset = getOffsetDecrement();\n  if (*(functionPointer **)(paramOffset + 0x44) != (functionPointer *)0x0) {\n    (**(functionPointer **)(paramOffset + 0x44))();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800376e": "execute_function_0800376e",
                "iVar1": "paramOffset",
                "decrement_param_by_four_08003750": "getOffsetDecrement",
                "code": "functionPointer"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [
                "FUN_08003750"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800377c": {
            "entrypoint": "0x0800377c",
            "current_name": "check_and_process_flags_0800377c",
            "code": "\nvoid check_and_process_flags_0800377c(void)\n\n{\n  if (DAT_200001b0 != 0) {\n    process_flags_080026ce();\n  }\n  if (DAT_200001d4 != 0) {\n    process_flags_080026ce();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800377c": "check_and_process_flags_0800377c"
            },
            "calling": [],
            "called": [
                "FUN_080026ce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800387c": {
            "entrypoint": "0x0800387c",
            "current_name": "subtract_four_0800387c",
            "code": "\nint subtractFour_0800387c(int num)\n\n{\n  return num + -4;\n}\n\n",
            "renaming": {
                "FUN_0800387c": "subtract_four_0800387c",
                "param_1": "num"
            },
            "calling": [
                "FUN_080038d0",
                "FUN_08003880",
                "FUN_08003900"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003880": {
            "entrypoint": "0x08003880",
            "current_name": "process_input_08003880",
            "code": "\nvoid processInput_08003880(int inputData,int flag,int checkValue,undefined4 paramValue)\n\n{\n  int result;\n  \n  result = subtractFour();\n  if (checkValue == *(int *)(inputData + 0xc)) {\n    if (flag == 0) {\n      *(undefined *)(result + 0x88) = 0;\n      *(undefined *)(result + 0x5e) = 0;\n      if (*(code **)(result + 100) != (code *)0x0) {\n        (**(code **)(result + 100))();\n      }\n      FUNC_08001460(inputData,result + 0x68,*(undefined *)(result + 0x88),8);\n      return;\n    }\n    *(undefined *)(result + 0x5e) = 1;\n    validateInputs(inputData,result + 0x68,inputSize,paramValue);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003880": "process_input_08003880",
                "param_1": "inputData",
                "param_2": "flag",
                "param_3": "checkValue",
                "param_4": "paramValue",
                "iVar1": "result",
                "subtract_four_0800387c": "subtractFour",
                "validate_inputs_080014ec": "validateInputs",
                "0x20,8": "inputSize"
            },
            "calling": [
                "FUN_0800165a"
            ],
            "called": [
                "FUN_0800387c",
                "FUN_08001460",
                "FUN_080014ec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080038d0": {
            "entrypoint": "0x080038d0",
            "current_name": "initialize_and_call_function_080038d0",
            "code": "\nvoid initialize_and_call_function_080038d0(undefined4 input_param)\n\n{\n  int result;\n  \n  result = get_function_address();\n  if (((*(code **)(result + 0x60) != (code *)0x0) && (*(char *)(result + 0x5e) == '\\x01')) &&\n     (*(char *)(result + 0x2c) != ' ')) {\n    (**(code **)(result + 0x60))(result + 0x68);\n  }\n  initialize_pointer_flags(input_param);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080038d0": "initialize_and_call_function_080038d0",
                "param_1": "input_param",
                "iVar1": "result",
                "subtract_four_0800387c": "get_function_address",
                "initialize_ptr_flags_08001578": "initialize_pointer_flags"
            },
            "calling": [
                "FUN_08001ab0",
                "FUN_08001684",
                "FUN_08001bfc"
            ],
            "called": [
                "FUN_08001578",
                "FUN_0800387c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003900": {
            "entrypoint": "0x08003900",
            "current_name": "initialize_if_flag_is_unset_08003900",
            "code": "\nvoid initialize_if_flag_is_unset_08003900(undefined4 param)\n\n{\n  int result;\n  \n  result = subtract_four();\n  if (*(char *)(result + 0x5f) == '\\0') {\n    initialize_ptr_flags(param);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003900": "initialize_if_flag_is_unset_08003900",
                "param_1": "param",
                "iVar1": "result",
                "subtract_four_0800387c": "subtract_four",
                "initialize_ptr_flags_08001578": "initialize_ptr_flags"
            },
            "calling": [
                "FUN_08001ab0"
            ],
            "called": [
                "FUN_08001578",
                "FUN_0800387c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003978": {
            "entrypoint": "0x08003978",
            "current_name": "initialize_uart_pins_08003978",
            "code": "\n\n\nvoid initializeUARTPins_08003978(int *pinArray)\n\n{\n  int uart1Pin;\n  int uart2Pin;\n  undefined4 uart1Flag;\n  uint uart2ValueIndex;\n  uint uart1BitMask;\n  uint uart2BitMode;\n  uint uart2BitRate;\n  undefined4 uart1Register;\n  uint uart2DataBits;\n  \n  if (pinArray != (int *)0x0) {\n    uart1Pin = check_parameter_080034f4((int)*(short *)(pinArray + 0x16),&DAT_08005ca0);\n    uart2Pin = check_parameter_080034f4((int)*(short *)((int)pinArray + 0x5a),&DAT_08005c10);\n    if ((uart2Pin == 0) || (uart1Pin == 0)) {\n      printErrorMessage(\"ERROR: at least one UART pin has no peripheral\\n\",uart2Pin);\n    }\n    else {\n      uart1Pin = comparePins(uart1Pin);\n      *pinArray = uart1Pin;\n      if (uart1Pin == 0) {\n        printErrorMessage(\"ERROR: U(S)ART pins mismatch\\n\");\n      }\n      else {\n        if (uart1Pin == 0x40011000) {\n          _DAT_40023824 = _DAT_40023824 & 0xffffffef;\n          _DAT_40023844 = _DAT_40023844 | 0x10;\n          *(undefined *)(pinArray + 0x11) = 0;\n          *(undefined *)(pinArray + 0x17) = 0x25;\n        }\n        else if (uart1Pin == 0x40004400) {\n          _DAT_40023820 = _DAT_40023820 & 0xfffdffff;\n          _DAT_40023840 = _DAT_40023840 | 0x20000;\n          *(undefined *)(pinArray + 0x11) = 1;\n          *(undefined *)(pinArray + 0x17) = 0x26;\n        }\n        else if (uart1Pin == 0x40004800) {\n          _DAT_40023820 = _DAT_40023820 & 0xfffbffff;\n          _DAT_40023840 = _DAT_40023840 | 0x40000;\n          *(undefined *)(pinArray + 0x11) = 2;\n          *(undefined *)(pinArray + 0x17) = 0x27;\n        }\n        else if (uart1Pin == 0x40004c00) {\n          _DAT_40023820 = _DAT_40023820 & 0xfff7ffff;\n          _DAT_40023840 = _DAT_40023840 | 0x80000;\n          *(undefined *)(pinArray + 0x11) = 3;\n          *(undefined *)(pinArray + 0x17) = 0x34;\n        }\n        else if (uart1Pin == 0x40005000) {\n          _DAT_40023820 = _DAT_40023820 & 0xffefffff;\n          _DAT_40023840 = _DAT_40023840 | 0x100000;\n          *(undefined *)(pinArray + 0x11) = 4;\n          *(undefined *)(pinArray + 0x17) = 0x35;\n        }\n        else if (uart1Pin == 0x40011400) {\n          _DAT_40023824 = _DAT_40023824 & 0xffffffdf;\n          _DAT_40023844 = _DAT_40023844 | 0x20;\n          *(undefined *)(pinArray + 0x11) = 5;\n          *(undefined *)(pinArray + 0x17) = 0x47;\n        }\n        else if (uart1Pin == 0x40007800) {\n          _DAT_40023820 = _DAT_40023820 & 0xbfffffff;\n          _DAT_40023840 = _DAT_40023840 | 0x40000000;\n          *(undefined *)(pinArray + 0x11) = 6;\n          *(undefined *)(pinArray + 0x17) = 0x52;\n        }\n        else if (uart1Pin == 0x40007c00) {\n          _DAT_40023820 = _DAT_40023820 & 0x7fffffff;\n          _DAT_40023840 = _DAT_40023840 | 0x80000000;\n          *(undefined *)(pinArray + 0x11) = 7;\n          *(undefined *)(pinArray + 0x17) = 0x53;\n        }\n        uart1Flag = setFlagBits((uint)((int)*(short *)((int)pinArray + 0x5a) << 0x18) >> 0x1c);\n        uart2ValueIndex = getValueIndex((int)*(short *)((int)pinArray + 0x5a),&DAT_08005c10);\n        uart1BitMask = 1 << (*(ushort *)((int)pinArray + 0x5a) & 0xf) & 0xffff;\n        uart2BitMode = (uart2ValueIndex >> 3 & 1) << 4 | uart2ValueIndex & 7;\n        uart2BitRate = (uart2ValueIndex << 0x1a) >> 0x1e;\n        uart2DataBits = (uart2ValueIndex << 0x11) >> 0x19;\n        uart1Register = 3;\n        updateRegisters(uart1Flag,&uart1BitMask);\n        uart1Flag = setFlagBits((uint)((int)*(short *)(pinArray + 0x16) << 0x18) >> 0x1c);\n        uart2ValueIndex = getValueIndex((int)*(short *)(pinArray + 0x16),&DAT_08005ca0);\n        uart1BitMask = 1 << (*(ushort *)(pinArray + 0x16) & 0xf) & 0xffff;\n        uart2BitMode = (uart2ValueIndex >> 3 & 1) << 4 | uart2ValueIndex & 7;\n        uart2BitRate = (uart2ValueIndex << 0x1a) >> 0x1e;\n        updateRegisters(uart1Flag,&uart1BitMask);\n        (&DAT_200002b4)[*(byte *)(pinArray + 0x11)] = pinArray + 1;\n        pinArray[1] = *pinArray;\n        pinArray[2] = pinArray[0x12];\n        pinArray[3] = pinArray[0x13];\n        pinArray[4] = pinArray[0x14];\n        pinArray[5] = pinArray[0x15];\n        pinArray[6] = 0xc;\n        pinArray[7] = 0;\n        pinArray[8] = 0;\n        initializeDataStructure(pinArray + 1);\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003978": "initialize_uart_pins_08003978",
                "param_1": "pinArray",
                "iVar1": "uart1Pin",
                "iVar2": "uart2Pin",
                "uVar3": "uart1Flag",
                "uVar4": "uart2ValueIndex",
                "local_2c": "uart1BitMask",
                "local_28": "uart2BitMode",
                "local_24": "uart2BitRate",
                "local_20": "uart1Register",
                "local_1c": "uart2DataBits",
                "initialize_or_parse_data_08004fdc": "printErrorMessage",
                "compare_and_return_smaller_08003582": "comparePins",
                "set_flag_bits_080031fc": "setFlagBits",
                "get_value_index_0800354a": "getValueIndex",
                "update_registers_08000fb4": "updateRegisters",
                "initialize_data_structure_08002d72": "initializeDataStructure"
            },
            "calling": [
                "FUN_08003cc8",
                "FUN_08004388"
            ],
            "called": [
                "FUN_08003582",
                "FUN_08004fdc",
                "FUN_080031fc",
                "FUN_08000fb4",
                "FUN_080034f4",
                "FUN_0800354a",
                "FUN_08002d72"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003cc8": {
            "entrypoint": "0x08003cc8",
            "current_name": "initialize_uart_08003cc8",
            "code": "\nvoid initialize_uart_08003cc8(void)\n\n{\n  int result;\n  undefined4 matching_value;\n  \n  result = check_parameter_080034f4(0x38,&DAT_08005ca0);\n  if (result != 0) {\n    matching_value = check_parameter_080034f4(0x38,&DAT_08005ca0);\n    DAT_2000008a = get_matching_value_0800351e(matching_value,&DAT_08005c10);\n    DAT_20000088 = 0x38;\n    DAT_20000078 = 0x2580;\n    DAT_20000084 = 0;\n    DAT_2000007c = 0;\n    DAT_20000080 = 0;\n    initialize_uart_08003cc8_pins(&DAT_20000030);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003cc8": "initialize_uart_08003cc8",
                "iVar1": "result",
                "uVar2": "matching_value",
                "initialize_uart_pins_08003978": "initialize_uart_pins"
            },
            "calling": [
                "FUN_08003d18"
            ],
            "called": [
                "FUN_08003978",
                "FUN_0800351e",
                "FUN_080034f4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003d18": {
            "entrypoint": "0x08003d18",
            "current_name": "process_data_08003d18",
            "code": "\nuint process_data_08003d18(undefined4 input_param,uint flags)\n\n{\n  int initial_data;\n  int parameter_check;\n  uint counter;\n  \n  initial_data = get_data_08000e30();\n  parameter_check = check_parameter_080034f4(0x38,&DAT_08005ca0);\n  if (parameter_check == 0) {\n    return 0;\n  }\n  for (counter = 0;\n      (counter < 10 &&\n      (((&DAT_200002b4)[counter] == 0 ||\n       (parameter_check = check_parameter_080034f4(0x38,&DAT_08005ca0), *(int *)(&DAT_200002b4)[counter] != parameter_check))));\n      counter = counter + 1 & 0xff) {\n  }\n  if (9 < counter) {\n    if ((9 < DAT_20000074) && (initialize_uart_08003cc8(), 9 < DAT_20000074)) {\n      return 0;\n    }\n    counter = (uint)DAT_20000074;\n  }\n  do {\n    parameter_check = process_data_08003d18_08002dd0((&DAT_200002b4)[counter],input_param,flags & 0xffff,1000);\n    if (parameter_check == 0) {\n      return flags;\n    }\n    parameter_check = get_data_08000e30();\n  } while ((uint)(parameter_check - initial_data) < 1000);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003d18": "process_data_08003d18",
                "param_1": "input_param",
                "param_2": "flags",
                "iVar1": "initial_data",
                "iVar2": "parameter_check",
                "uVar3": "counter"
            },
            "calling": [
                "FUN_080040ec"
            ],
            "called": [
                "FUN_08003cc8",
                "FUN_08000e30",
                "FUN_08002dd0",
                "FUN_080034f4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003dd0": {
            "entrypoint": "0x08003dd0",
            "current_name": "check_combination_08003dd0",
            "code": "\nbool check_combination_08003dd0(int input_value)\n\n{\n  uint combined_bytes;\n  \n  combined_bytes = combine_bytes_0800312c((&DAT_200002b4)[*(byte *)(input_value + 0x44)]);\n  return (combined_bytes & 0x22) == 0x22;\n}\n\n",
            "renaming": {
                "FUN_08003dd0": "check_combination_08003dd0",
                "param_1": "input_value",
                "uVar1": "combined_bytes"
            },
            "calling": [
                "FUN_08003e18",
                "FUN_08003e54"
            ],
            "called": [
                "FUN_0800312c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003df4": {
            "entrypoint": "0x08003df4",
            "current_name": "is_desirable_value_08003df4",
            "code": "\nbool isDesirableValue_08003df4(int input)\n\n{\n  uint combinedBytes;\n  \n  combinedBytes = combine_BYTEs_0800312c((&DAT_200002b4)[*(BYTE *)(input + 0x44)]);\n  return (combinedBytes & 0x21) == 0x21;\n}\n\n",
            "renaming": {
                "FUN_08003df4": "is_desirable_value_08003df4",
                "param_1": "input",
                "uVar1": "combinedBytes",
                "byte": "BYTE"
            },
            "calling": [
                "FUN_080042e8"
            ],
            "called": [
                "FUN_0800312c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003e18": {
            "entrypoint": "0x08003e18",
            "current_name": "extract_and_update_data_08003e18",
            "code": "\nundefined4 extractAndUpdateData_08003e18(int inputValue,undefined *outputValue,undefined4 sizeOfData,undefined4 additionalParam)\n\n{\n  int combinationCheckResult;\n  \n  if (inputValue == 0) {\n    return 0xffffffff;\n  }\n  combinationCheckResult = check_combination_08003dd0();\n  if (combinationCheckResult == 0) {\n    *outputValue = *(undefined *)(inputValue + 0x45);\n    update_data_08002efa((&DAT_200002b4)[*(byte *)(inputValue + 0x44)],inputValue + 0x45,1,&DAT_200002b4,additionalParam);\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08003e18": "extract_and_update_data_08003e18",
                "param_1": "inputValue",
                "param_2": "outputValue",
                "param_3": "sizeOfData",
                "param_4": "additionalParam",
                "iVar1": "combinationCheckResult"
            },
            "calling": [
                "FUN_080042ac"
            ],
            "called": [
                "FUN_08002efa",
                "FUN_08003dd0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003e54": {
            "entrypoint": "0x08003e54",
            "current_name": "update_combination_08003e54",
            "code": "\nvoid update_combination_08003e54(int input_data,undefined4 new_value,undefined4 unused_param,undefined4 other_param)\n\n{\n  int combination_check_result;\n  uint data_index;\n  \n  if (input_data != 0) {\n    combination_check_result = check_combination_08003dd0();\n    if (combination_check_result == 0) {\n      data_index = (uint)*(byte *)(input_data + 0x44);\n      *(undefined4 *)(&DAT_20000214 + data_index * 4) = new_value;\n      *(int *)(&DAT_2000023c + data_index * 4) = input_data;\n      update_character((int)*(char *)(input_data + 0x5c),0,1,data_index,other_param);\n      set_character_bit((int)*(char *)(input_data + 0x5c));\n      update_data((&DAT_200002b4)[*(byte *)(input_data + 0x44)],input_data + 0x45,1);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003e54": "update_combination_08003e54",
                "param_1": "input_data",
                "param_2": "new_value",
                "param_3": "unused_param",
                "param_4": "other_param",
                "iVar1": "combination_check_result",
                "uVar2": "data_index",
                "update_character_08000e60": "update_character",
                "set_bit_08000ec4": "set_character_bit",
                "update_data_08002efa": "update_data"
            },
            "calling": [
                "FUN_08004388"
            ],
            "called": [
                "FUN_08002efa",
                "FUN_08003dd0",
                "FUN_08000e60",
                "FUN_08000ec4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003eac": {
            "entrypoint": "0x08003eac",
            "current_name": "update_and_set_character_data_08003eac",
            "code": "\nvoid updateAndSetCharacterData_08003eac(int characterDataPtr,undefined4 newValue)\n\n{\n  byte characterIndex;\n  \n  if (characterDataPtr != 0) {\n    characterIndex = *(byte *)(characterDataPtr + 0x44);\n    *(undefined4 *)(&DAT_20000264 + (uint)characterIndex * 4) = newValue;\n    *(int *)(&DAT_2000028c + (uint)characterIndex * 4) = characterDataPtr;\n    updateCharacterData((int)*(char *)(characterDataPtr + 0x5c),0,2);\n    setCharacterBit((int)*(char *)(characterDataPtr + 0x5c));\n    checkAndUpdateValues((&DAT_200002b4)[*(byte *)(characterDataPtr + 0x44)],\n                 *(int *)(characterDataPtr + 0x68) + (uint)*(ushort *)(characterDataPtr + 0x6e),1);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003eac": "update_and_set_character_data_08003eac",
                "param_1": "characterDataPtr",
                "param_2": "newValue",
                "bVar1": "characterIndex",
                "update_character_08000e60": "updateCharacterData",
                "set_bit_08000ec4": "setCharacterBit",
                "check_and_update_values_08002eb2": "checkAndUpdateValues"
            },
            "calling": [
                "FUN_080042e8"
            ],
            "called": [
                "FUN_08002eb2",
                "FUN_08000e60",
                "FUN_08000ec4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f00": {
            "entrypoint": "0x08003f00",
            "current_name": "find_index_08003f00",
            "code": "\nuint find_index_08003f00(int input_number)\n\n{\n  uint index;\n  \n  if (input_number == 0) {\n    index = 10;\n  }\n  else {\n    index = 0;\n    while( true ) {\n      if (9 < index) {\n        return index;\n      }\n      if (input_number == (&DAT_200002b4)[index]) break;\n      index = index + 1 & 0xff;\n    }\n  }\n  return index;\n}\n\n",
            "renaming": {
                "FUN_08003f00": "find_index_08003f00",
                "param_1": "input_number",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08003f24",
                "FUN_08003f48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f24": {
            "entrypoint": "0x08003f24",
            "current_name": "execute_function_based_on_index_08003f24",
            "code": "\nvoid executeFunctionBasedOnIndex_08003f24(void)\n\n{\n  uint index;\n  \n  index = findIndex();\n  if (index < 10) {\n    (**(code **)(&DAT_20000214 + index * 4))(*(undefined4 *)(&DAT_2000023c + index * 4));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f24": "execute_function_based_on_index_08003f24",
                "uVar1": "index",
                "find_index_08003f00": "findIndex"
            },
            "calling": [
                "FUN_08002f66"
            ],
            "called": [
                "FUN_08003f00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f48": {
            "entrypoint": "0x08003f48",
            "current_name": "execute_operation_08003f48",
            "code": "\nvoid executeOperation_08003f48(void)\n\n{\n  uint index;\n  int result;\n  int data;\n  \n  index = findIndex();\n  data = *(int *)(&DAT_2000028c + index * 4);\n  if ((index < 10) && (result = (**(functionPointer **)(&DAT_20000264 + index * 4))(data), result != -1)) {\n    checkAndUpdateValues((&DAT_200002b4)[*(byte *)(data + 0x44)],\n                 *(int *)(data + 0x68) + (uint)*(ushort *)(data + 0x6e),1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f48": "execute_operation_08003f48",
                "uVar1": "index",
                "iVar2": "result",
                "iVar3": "data",
                "find_index_08003f00": "findIndex",
                "code": "functionPointer",
                "check_and_update_values_08002eb2": "checkAndUpdateValues"
            },
            "calling": [
                "FUN_08002f4c"
            ],
            "called": [
                "FUN_08003f00",
                "FUN_08002eb2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f94": {
            "entrypoint": "0x08003f94",
            "current_name": "FUNC_08003f94",
            "code": "\nvoid FUNC_08003f94(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f94": "FUNC_08003f94"
            },
            "calling": [
                "FUN_08002ffc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004094": {
            "entrypoint": "0x08004094",
            "current_name": "allocate_memory_08004094",
            "code": "\nundefined * allocateMemory_08004094(int size)\n\n{\n  undefined *allocatedMemory;\n  \n  if (DAT_200002dc == (undefined *)0x0) {\n    DAT_200002dc = &DAT_20000678;\n  }\n  allocatedMemory = DAT_200002dc;\n  if (DAT_200002dc + size <= &stackBaseAddress) {\n    DAT_200002dc = DAT_200002dc + size;\n    return allocatedMemory;\n  }\n  DAT_20000674 = 0xc;\n  return (undefined *)0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08004094": "allocate_memory_08004094",
                "param_1": "size",
                "puVar1": "allocatedMemory",
                "stack0x00000000": "stackBaseAddress"
            },
            "calling": [
                "FUN_0800500c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040d0": {
            "entrypoint": "0x080040d0",
            "current_name": "initialize_return_value_080040d0",
            "code": "\nreturnType initializeReturnValue_080040d0(void)\n\n{\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080040d0": "initialize_return_value_080040d0",
                "undefined4": "returnType"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040d6": {
            "entrypoint": "0x080040d6",
            "current_name": "initialize_memory_080040d6",
            "code": "\nundefined4 initializeMemory_080040d6(undefined4 param_1,int baseAddress)\n\n{\n  *(undefined4 *)(baseAddress + 4) = 0x2000;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080040d6": "initialize_memory_080040d6",
                "param_2": "baseAddress"
            },
            "calling": [
                "FUN_080056d4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040e0": {
            "entrypoint": "0x080040e0",
            "current_name": "initialize_application_080040e0",
            "code": "\nstatus initializeApplication_080040e0(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080040e0": "initialize_application_080040e0",
                "undefined4": "status"
            },
            "calling": [
                "FUN_080056f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040e4": {
            "entrypoint": "0x080040e4",
            "current_name": "initialize_zero_080040e4",
            "code": "\nvoid initializeZero_080040e4(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080040e4": "initialize_zero_080040e4",
                "undefined4": "void"
            },
            "calling": [
                "FUN_08005718"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040e8": {
            "entrypoint": "0x080040e8",
            "current_name": "initialize_application_080040e8",
            "code": "\nvoid initialize_application_080040e8(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080040e8": "initialize_application_080040e8",
                "undefined4": "void"
            },
            "calling": [
                "FUN_0800573c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040ec": {
            "entrypoint": "0x080040ec",
            "current_name": "process_and_return_data_080040ec",
            "code": "\nvoid process_and_return_data_080040ec(undefined4 input_param_1,undefined4 data_param_1,undefined4 data_param_2,undefined4 data_param_3)\n\n{\n  process_data_08003d18(data_param_1,data_param_2,data_param_2,data_param_3,data_param_3);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080040ec": "process_and_return_data_080040ec",
                "param_1": "input_param_1",
                "param_2": "data_param_1",
                "param_3": "data_param_2",
                "param_4": "data_param_3"
            },
            "calling": [
                "FUN_0800562a"
            ],
            "called": [
                "FUN_08003d18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040f8": {
            "entrypoint": "0x080040f8",
            "current_name": "idle_loop_080040f8",
            "code": "\nvoid idle_loop_080040f8(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080040f8": "idle_loop_080040f8"
            },
            "calling": [
                "FUN_080051ac",
                "FUN_080040f8"
            ],
            "called": [
                "FUN_080040f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040fc": {
            "entrypoint": "0x080040fc",
            "current_name": "initialize_value_080040fc",
            "code": "\nundefined4 initialize_value_080040fc(void)\n\n{\n  DAT_20000674 = 0x16;\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080040fc": "initialize_value_080040fc"
            },
            "calling": [
                "FUN_080055d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800410c": {
            "entrypoint": "0x0800410c",
            "current_name": "initialize_program_0800410c",
            "code": "\nundefined4 initializeProgram_0800410c(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800410c": "initialize_program_0800410c"
            },
            "calling": [
                "thunk_FUN_0800410c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004110": {
            "entrypoint": "0x08004110",
            "current_name": "process_parameter_08004110",
            "code": "\nvoid processParameter_08004110(uint input,undefined4 flagType,undefined4 arraySize,undefined *dataArray)\n\n{\n  int bitwiseResult;\n  undefined *dataPtr;\n  int index;\n  \n  if (input < 0x60) {\n    index = (int)*(short *)(&DAT_08005d3c + input * 2);\n    dataPtr = &DAT_08005d3c;\n  }\n  else {\n    index = -1;\n    dataPtr = dataArray;\n  }\n  if (index != -1) {\n    bitwiseResult = bitwise_extract_08003138(index,&DAT_200002e0,arraySize,dataPtr,dataArray);\n    if (bitwiseResult != 0) {\n      bitwiseResult = isInArray(index,&DAT_08005a18);\n      if (bitwiseResult == 0) {\n        bitwiseResult = isInArray(index,&DAT_08005a3c);\n        if (bitwiseResult != 0) {\n          processTrueParameter(index);\n        }\n      }\n      else {\n        processFalseParameter(index);\n      }\n      updateBit(index,&DAT_200002e0);\n    }\n    switch(flagType) {\n    case 0:\n      updateFlagBits(index,0);\n      break;\n    case 1:\n      updateFlagBits(index,1,0);\n      break;\n    case 2:\n      updateFlagBits(index,0,1);\n      break;\n    case 3:\n      updateFlagBits(index,0,2);\n    }\n    setBitValue(index,&DAT_2000030c);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004110": "process_parameter_08004110",
                "param_1": "input",
                "param_2": "flagType",
                "param_3": "arraySize",
                "param_4": "dataArray",
                "iVar1": "bitwiseResult",
                "puVar2": "dataPtr",
                "iVar3": "index",
                "check_param_in_array_0800355e": "isInArray",
                "process_parameter_08003414": "processTrueParameter",
                "process_parameter_080033d8": "processFalseParameter",
                "update_bit_0800316c": "updateBit",
                "update_flag_bits_08003486": "updateFlagBits",
                "set_bit_value_0800314e": "setBitValue"
            },
            "calling": [
                "FUN_08000600"
            ],
            "called": [
                "FUN_08003138",
                "FUN_0800316c",
                "FUN_0800314e",
                "FUN_08003414",
                "FUN_08003486",
                "FUN_080033d8",
                "FUN_0800355e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080041bc": {
            "entrypoint": "0x080041bc",
            "current_name": "process_data_080041bc",
            "code": "\nvoid processData_080041bc(uint index,undefined4 paramValue1,undefined4 paramValue2,undefined *paramPtr)\n\n{\n  int result;\n  undefined4 address;\n  undefined *dataPtr;\n  uint value;\n  \n  if (index < 0x60) {\n    value = (uint)*(short *)(&DAT_08005d3c + index * 2);\n    dataPtr = &DAT_08005d3c;\n  }\n  else {\n    value = 0xffffffff;\n    dataPtr = paramPtr;\n  }\n  if ((value != 0xffffffff) &&\n     (result = bitwise_extract_08003138(value,&DAT_2000030c,paramValue2,dataPtr,paramPtr), result != 0)) {\n    address = map_param_to_address_0800318c((value << 0x18) >> 0x1c);\n    update_value_based_on_condition_080034b6(address,1 << (value & 0xf) & 0xffff,paramValue1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080041bc": "process_data_080041bc",
                "param_1": "index",
                "param_2": "paramValue1",
                "param_3": "paramValue2",
                "param_4": "paramPtr",
                "iVar1": "result",
                "uVar2": "address",
                "puVar3": "dataPtr",
                "uVar4": "value"
            },
            "calling": [
                "FUN_0800076c",
                "FUN_08000600",
                "FUN_080006b4"
            ],
            "called": [
                "FUN_08003138",
                "FUN_080034b6",
                "FUN_0800318c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004204": {
            "entrypoint": "0x08004204",
            "current_name": "initialize_data_08004204",
            "code": "\nvoid initialize_data_08004204(void)\n\n{\n  initialize_data_08004204_0800346c();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004204": "initialize_data_08004204"
            },
            "calling": [
                "FUN_0800076c",
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800346c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004240": {
            "entrypoint": "0x08004240",
            "current_name": "calculate_result_08004240",
            "code": "\nunsignedShort calculateResult_08004240(int baseAddress)\n\n{\n  return (*(short *)(baseAddress + 0x138) + 0x40) - *(short *)(baseAddress + 0x13a) & 0x3f;\n}\n\n",
            "renaming": {
                "FUN_08004240": "calculate_result_08004240",
                "param_1": "baseAddress",
                "ushort": "unsignedShort"
            },
            "calling": [
                "FUN_08004338"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080042ac": {
            "entrypoint": "0x080042ac",
            "current_name": "update_data_and_check_080042ac",
            "code": "\nvoid updateDataAndCheck_080042ac(int data)\n\n{\n  int result;\n  ushort updatedValue;\n  undefined extractedData;\n  \n  result = extract_and_update_data_08003e18(data,&extractedData);\n  if ((result == 0) &&\n     (updatedValue = *(short *)(data + 100) + 1U & 0x3f, updatedValue != *(ushort *)(data + 0x66))) {\n    *(undefined *)(*(int *)(data + 0x60) + (uint)*(ushort *)(data + 100)) = extractedData;\n    *(ushort *)(data + 100) = updatedValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080042ac": "update_data_and_check_080042ac",
                "param_1": "data",
                "iVar1": "result",
                "uVar2": "updatedValue",
                "local_9": "extractedData"
            },
            "calling": [],
            "called": [
                "FUN_08003e18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080042e8": {
            "entrypoint": "0x080042e8",
            "current_name": "set_character_data_080042e8",
            "code": "\nundefined4 setCharacterData_080042e8(int characterDataPtr,undefined data)\n\n{\n  byte bytePlusOne;\n  byte bitwiseAndByte;\n  int valuePlusOne;\n  \n  *(undefined *)(characterDataPtr + 0x10) = 1;\n  valuePlusOne = *(ushort *)(characterDataPtr + 0x140) + 1;\n  bytePlusOne = (byte)valuePlusOne;\n  bitwiseAndByte = bytePlusOne & 0x7f;\n  if (valuePlusOne == 0) {\n    bitwiseAndByte = -(-bytePlusOne & 0x7f);\n  }\n  do {\n  } while (*(ushort *)(characterDataPtr + 0x142) == (ushort)bitwiseAndByte);\n  *(undefined *)(*(int *)(characterDataPtr + 0x13c) + (uint)*(ushort *)(characterDataPtr + 0x140)) = data;\n  *(ushort *)(characterDataPtr + 0x140) = (ushort)bitwiseAndByte;\n  valuePlusOne = is_desirable_value_08003df4(characterDataPtr + 0xd4);\n  if (valuePlusOne == 0) {\n    update_and_set_character_data_08003eac(characterDataPtr + 0xd4,&LAB_0800420c_1);\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080042e8": "set_character_data_080042e8",
                "param_1": "characterDataPtr",
                "param_2": "data",
                "bVar1": "bytePlusOne",
                "bVar2": "bitwiseAndByte",
                "iVar3": "valuePlusOne"
            },
            "calling": [],
            "called": [
                "FUN_08003eac",
                "FUN_08003df4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004338": {
            "entrypoint": "0x08004338",
            "current_name": "FUNC_08004338",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800433e) */\n/* WARNING: Removing unreachable block (ram,0x08004350) */\n/* WARNING: Removing unreachable block (ram,0x08004346) */\n/* WARNING: Removing unreachable block (ram,0x08004358) */\n\nvoid FUNC_08004338(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004338": "FUNC_08004338"
            },
            "calling": [
                "FUN_08004658"
            ],
            "called": [
                "FUN_08004240"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004364": {
            "entrypoint": "0x08004364",
            "current_name": "initialize_data_08004364",
            "code": "\nvoid initializeData_08004364(int dataAddress)\n\n{\n  *(int *)(dataAddress + 0x134) = dataAddress + 0x11;\n  *(undefined2 *)(dataAddress + 0x138) = 0;\n  *(undefined2 *)(dataAddress + 0x13a) = 0;\n  *(int *)(dataAddress + 0x13c) = dataAddress + 0x51;\n  *(undefined2 *)(dataAddress + 0x140) = 0;\n  *(undefined2 *)(dataAddress + 0x142) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004364": "initialize_data_08004364",
                "param_1": "dataAddress"
            },
            "calling": [
                "FUN_0800447c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004388": {
            "entrypoint": "0x08004388",
            "current_name": "initialize_hardware_serial_08004388",
            "code": "\nvoid initializeHardwareSerial_08004388(int deviceAddress,undefined4 baudRate,byte configuration)\n\n{\n  uint result;\n  byte configurationFlag;\n  int uartMode;\n  code *jumpTable;\n  \n  *(undefined4 *)(deviceAddress + 0x11c) = baudRate;\n  *(byte *)(deviceAddress + 0x144) = configuration;\n  configurationFlag = configuration & 7;\n  if (configurationFlag == 4) {\n    uartMode = 7;\n  }\n  else if (configurationFlag == 6) {\n    uartMode = 8;\n  }\n  else if (configurationFlag == 2) {\n    uartMode = 6;\n  }\n  else {\n    uartMode = 0;\n  }\n  if ((configuration & 0x30) == 0x30) {\n    *(undefined4 *)(deviceAddress + 0x128) = 0x600;\n    uartMode = uartMode + 1;\n  }\n  else if ((configuration & 0x20) == 0) {\n    *(undefined4 *)(deviceAddress + 0x128) = 0;\n  }\n  else {\n    *(undefined4 *)(deviceAddress + 0x128) = 0x400;\n    uartMode = uartMode + 1;\n  }\n  if ((configuration & 8) == 0) {\n    *(undefined4 *)(deviceAddress + 0x124) = 0;\n  }\n  else {\n    *(undefined4 *)(deviceAddress + 0x124) = 0x2000;\n  }\n  if (uartMode == 8) {\n    *(undefined4 *)(deviceAddress + 0x120) = 0;\n  }\n  else if (uartMode == 9) {\n    *(undefined4 *)(deviceAddress + 0x120) = 0x1000;\n  }\n  else {\n    uartMode = 0;\n  }\n  if (uartMode != 0) {\n    initialize_uart_pins_08003978(deviceAddress + 0xd4);\n    update_combination_08003e54(deviceAddress + 0xd4,0x80042ad);\n    return;\n  }\n  jumpTable = (code *)0x8004432;\n  validate_and_execute_08004808(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/cores/arduino/HardwareSerial.cpp\"\n               ,299,\"void HardwareSerial::begin(long unsigned int, byte)\");\n  if (result < 0x60) {\n    uRam0000012e = *(undefined2 *)(&DAT_08005d3c + result * 2);\n  }\n  else {\n    uRam0000012e = 0xffff;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08004452. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004388": "initialize_hardware_serial_08004388",
                "param_1": "deviceAddress",
                "param_2": "baudRate",
                "param_3": "configuration",
                "extraout_r1": "result",
                "bVar1": "configurationFlag",
                "iVar2": "uartMode",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_08000600"
            ],
            "called": [
                "FUN_08004808",
                "FUN_08003978",
                "FUN_08003e54"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004444": {
            "entrypoint": "0x08004444",
            "current_name": "set_return_value_08004444",
            "code": "\nvoid setReturnValue_08004444(int outputAddress,uint inputValue)\n\n{\n  undefined2 returnValue;\n  code *jumpTable;\n  \n  if (inputValue < 0x60) {\n    returnValue = *(undefined2 *)(&DAT_08005d3c + inputValue * 2);\n  }\n  else {\n    returnValue = 0xffff;\n  }\n  *(undefined2 *)(outputAddress + 0x12e) = returnValue;\n                    /* WARNING: Could not recover jumptable at 0x08004452. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004444": "set_return_value_08004444",
                "param_1": "outputAddress",
                "param_2": "inputValue",
                "uVar1": "returnValue",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_0800447c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004460": {
            "entrypoint": "0x08004460",
            "current_name": "set_default_value_08004460",
            "code": "\nvoid setDefaultValue_08004460(int outputPointer,uint index)\n\n{\n  undefined2 defaultValue;\n  \n  if (index < 0x60) {\n    defaultValue = *(undefined2 *)(&DAT_08005d3c + index * 2);\n  }\n  else {\n    defaultValue = 0xffff;\n  }\n  *(undefined2 *)(outputPointer + 300) = defaultValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004460": "set_default_value_08004460",
                "param_1": "outputPointer",
                "param_2": "index",
                "uVar1": "defaultValue"
            },
            "calling": [
                "FUN_0800447c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800447c": {
            "entrypoint": "0x0800447c",
            "current_name": "initialize_param_and_return_0800447c",
            "code": "\nundefined4 *\ninitialize_param_and_return_0800447c(undefined4 *result_array,undefined4 input_value,undefined4 param_3,undefined4 param_4)\n\n{\n  undefined2 matching_value;\n  \n  result_array[1] = 0;\n  result_array[2] = 1000;\n  *result_array = &PTR_FUN_080042e8_1_08005ed4;\n  if (result_array == &DAT_20000338) {\n    set_return_value_08004444(&DAT_20000338,0x4c,param_3,&DAT_20000338,param_4);\n    set_default_value_08004460(&DAT_20000338,0x4d);\n  }\n  else {\n    matching_value = get_matching_value_0800351e(input_value,&DAT_08005c10);\n    *(undefined2 *)((int)result_array + 0x12e) = matching_value;\n    matching_value = get_matching_value_0800351e(input_value,&DAT_08005ca0);\n    *(undefined2 *)(result_array + 0x4b) = matching_value;\n  }\n  initialize_data(result_array);\n  return result_array;\n}\n\n",
            "renaming": {
                "FUN_0800447c": "initialize_param_and_return_0800447c",
                "param_1": "result_array",
                "param_2": "input_value",
                "uVar1": "matching_value",
                "initialize_data_08004364": "initialize_data"
            },
            "calling": [
                "FUN_080044d8"
            ],
            "called": [
                "FUN_08004460",
                "FUN_08004444",
                "FUN_0800351e",
                "FUN_08004364"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080044d8": {
            "entrypoint": "0x080044d8",
            "current_name": "check_and_initialize_080044d8",
            "code": "\nvoid checkAndInitialize_080044d8(int input1,int input2,undefined4 param3,undefined4 param4)\n\n{\n  if (input1 != 1) {\n    return;\n  }\n  if (input2 == 0xffff) {\n    initialize_param_and_return_0800447c(&DAT_20000338,0x40004800,param3,0xffff,param4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080044d8": "check_and_initialize_080044d8",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [],
            "called": [
                "FUN_0800447c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004544": {
            "entrypoint": "0x08004544",
            "current_name": "update_parameters_08004544",
            "code": "\nvoid updateParameters_08004544(undefined4 *output,undefined value1,undefined value2,undefined value3,\n                 undefined value4)\n\n{\n  *output = &DAT_08005f28;\n  *(undefined *)(output + 1) = value1;\n  *(undefined *)((int)output + 5) = value2;\n  *(undefined *)((int)output + 6) = value3;\n  *(undefined *)((int)output + 7) = value4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004544": "update_parameters_08004544",
                "param_1": "output",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "value4"
            },
            "calling": [
                "FUN_08004560"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004560": {
            "entrypoint": "0x08004560",
            "current_name": "initialize_parameters_08004560",
            "code": "\nvoid initialize_parameters_08004560(int flag,int value)\n\n{\n  if ((flag == 1) && (value == 0xffff)) {\n    update_parameters(&DAT_20000480,0,0,0,0);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004560": "initialize_parameters_08004560",
                "param_1": "flag",
                "param_2": "value",
                "update_parameters_08004544": "update_parameters"
            },
            "calling": [],
            "called": [
                "FUN_08004544"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004640": {
            "entrypoint": "0x08004640",
            "current_name": "combine_values_08004640",
            "code": "\nuint combineValues_08004640(int value1,uint value2)\n\n{\n  return value2 | value1 << 8;\n}\n\n",
            "renaming": {
                "FUN_08004640": "combine_values_08004640",
                "param_1": "value1",
                "param_2": "value2"
            },
            "calling": [
                "FUN_08000a7a",
                "FUN_08000998",
                "FUN_08000b04",
                "FUN_080007f0",
                "FUN_08000a4e",
                "FUN_080008e2",
                "FUN_08000a00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004646": {
            "entrypoint": "0x08004646",
            "current_name": "FUNC_08004646",
            "code": "\nvoid FUNC_08004646(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004646": "FUNC_08004646"
            },
            "calling": [
                "FUN_08004658"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004648": {
            "entrypoint": "0x08004648",
            "current_name": "initialize_device_08004648",
            "code": "\nvoid initialize_device_08004648(void)\n\n{\n  update_value(3);\n  initialize_device_08004648();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004648": "initialize_device_08004648",
                "update_value_08000e3c": "update_value",
                "initialize_device_08000d8e": "initialize_device"
            },
            "calling": [
                "FUN_08004884"
            ],
            "called": [
                "FUN_08000d8e",
                "FUN_08000e3c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004658": {
            "entrypoint": "0x08004658",
            "current_name": "execute_data_processing_loop_08004658",
            "code": "\nvoid execute_data_processing_loop_08004658(void)\n\n{\n  FUNC_08004646();\n  initialize_and_execute();\n  do {\n    process_data();\n    FUNC_08004338();\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08004658": "execute_data_processing_loop_08004658",
                "initialize_and_execute_08000c4c": "initialize_and_execute",
                "process_data_08000c64": "process_data"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_08000c4c",
                "FUN_08004646",
                "FUN_08004338",
                "FUN_08000c64"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004678": {
            "entrypoint": "0x08004678",
            "current_name": "count_set_bits_08004678",
            "code": "\nchar count_set_bits_08004678(uint number)\n\n{\n  char bit_counter;\n  \n  bit_counter = '\\0';\n  for (; number != 1; number = number >> 1) {\n    bit_counter = bit_counter + '\\x01';\n  }\n  return bit_counter;\n}\n\n",
            "renaming": {
                "FUN_08004678": "count_set_bits_08004678",
                "param_1": "number",
                "cVar1": "bit_counter"
            },
            "calling": [
                "FUN_080047d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080046b4": {
            "entrypoint": "0x080046b4",
            "current_name": "initialize_values_080046b4",
            "code": "\nvoid initializeValues_080046b4(int flag,int constant,undefined4 unused,undefined4 shift_count)\n\n{\n  if (flag != 1) {\n    return;\n  }\n  if (constant == 0xffff) {\n    DAT_20000488 = 6;\n    DAT_20000494 = 0;\n    DAT_2000049c = 7;\n    DAT_200004a8 = 0;\n    DAT_200004b0 = 8;\n    DAT_200004bc = 0;\n    DAT_200004c4 = 9;\n    DAT_200004d0 = 0;\n    DAT_200004d8 = 10;\n    DAT_200004e4 = 0;\n    DAT_200004ec = 0x17;\n    DAT_200004f8 = 0;\n    DAT_20000500 = 0x17;\n    DAT_2000050c = 0;\n    DAT_20000514 = 0x17;\n    DAT_20000520 = 0;\n    DAT_20000528 = 0x17;\n    DAT_20000534 = 0;\n    DAT_2000053c = 0x17;\n    DAT_20000548 = 0;\n    DAT_20000550 = 0x28;\n    DAT_2000055c = 0;\n    DAT_20000564 = 0x28;\n    DAT_20000570 = 0;\n    DAT_20000578 = 0x28;\n    DAT_20000584 = 0;\n    DAT_2000058c = 0x28;\n    DAT_20000598 = 0;\n    DAT_200005a0 = 0x28;\n    DAT_200005ac = 0;\n    DAT_200005b4 = 0x28;\n    DAT_200005c0 = 0;\n    shift_left_by32_080047fe(0,&LAB_0800468c_1,&DAT_20000000,&DAT_20000488,shift_count);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080046b4": "initialize_values_080046b4",
                "param_1": "flag",
                "param_2": "constant",
                "param_3": "unused",
                "param_4": "shift_count"
            },
            "calling": [],
            "called": [
                "FUN_080047fe"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047c0": {
            "entrypoint": "0x080047c0",
            "current_name": "process_data_080047c0",
            "code": "\nvoid processData_080047c0(int data)\n\n{\n  int bitCount;\n  \n  if (*(int *)(data + 8) != 0) {\n    (**(code **)(data + 0xc))();\n    return;\n  }\n  processData_080047c0_08005760();\n  bitCount = countSetBits_08004678();\n  if ((&DAT_20000494)[bitCount * 5] != 0) {\n    processData_080047c0();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080047c0": "process_data_080047c0",
                "param_1": "data",
                "iVar1": "bitCount",
                "process_data_08005760": "processData_08005760",
                "count_set_bits_08004678": "countSetBits_08004678"
            },
            "calling": [
                "FUN_080047d0"
            ],
            "called": [
                "FUN_08005760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047d0": {
            "entrypoint": "0x080047d0",
            "current_name": "process_bitwise_data_080047d0",
            "code": "\nvoid process_bitwise_data_080047d0(void)\n\n{\n  int bitCount;\n  \n  bitCount = countBits();\n  if ((&DAT_20000494)[bitCount * 5] != 0) {\n    processData();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080047d0": "process_bitwise_data_080047d0",
                "iVar1": "bitCount",
                "count_set_bits_08004678": "countBits",
                "process_data_080047c0": "processData"
            },
            "calling": [
                "FUN_080011a4"
            ],
            "called": [
                "FUN_080047c0",
                "FUN_08004678"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047fe": {
            "entrypoint": "0x080047fe",
            "current_name": "shift_left_by32_080047fe",
            "code": "\nvoid shift_left_by32_080047fe(undefined4 input_1,undefined4 input_2)\n\n{\n  shift_left_by32_080047fe_08004844(input_2,input_1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080047fe": "shift_left_by32_080047fe",
                "param_1": "input_1",
                "param_2": "input_2"
            },
            "calling": [
                "FUN_080046b4"
            ],
            "called": [
                "FUN_08004844"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004808": {
            "entrypoint": "0x08004808",
            "current_name": "validate_and_execute_08004808",
            "code": "\nvoid validateAndExecute_08004808(undefined4 errorMessage,undefined4 fileName,char *assertion,undefined4 lineNumber)\n\n{\n  undefined4 filePtr;\n  char *info;\n  undefined8 executionResult;\n  undefined4 suffix;\n  \n  filePtr = *(undefined4 *)(DAT_200000a0 + 0xc);\n  suffix = lineNumber;\n  if (assertion == (char *)0x0) goto LAB_0800482c;\n  info = \", function: \";\n  do {\n    parse_and_validate_data_08004860(filePtr,\"assertion \\\"%s\\\" failed: file \\\"%s\\\", line %d%s%s\\n\",lineNumber,errorMessage,fileName\n                 ,info,assertion,suffix);\n    executionResult = execute_and_process_data_080051ac();\n    fileName = (undefined4)((ulonglong)executionResult >> 0x20);\n    filePtr = (undefined4)executionResult;\nLAB_0800482c:\n    assertion = \"\";\n    info = assertion;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08004808": "validate_and_execute_08004808",
                "param_1": "errorMessage",
                "param_2": "fileName",
                "param_3": "assertion",
                "param_4": "lineNumber",
                "uVar1": "filePtr",
                "uVar4": "suffix",
                "pcVar2": "info",
                "uVar3": "executionResult"
            },
            "calling": [
                "FUN_08004388"
            ],
            "called": [
                "FUN_080051ac",
                "FUN_08004860"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004844": {
            "entrypoint": "0x08004844",
            "current_name": "shift_left_by32_08004844",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800484c) */\n\nlonglong shiftLeftBy32_08004844(undefined4 arg1,uint value)\n\n{\n  return (ulonglong)value << 0x20;\n}\n\n",
            "renaming": {
                "FUN_08004844": "shift_left_by32_08004844",
                "param_1": "arg1",
                "param_2": "value"
            },
            "calling": [
                "FUN_080047fe"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004860": {
            "entrypoint": "0x08004860",
            "current_name": "parse_and_validate_data_08004860",
            "code": "\nvoid parse_and_validate_data_08004860(undefined4 input_param_1,undefined4 input_param_2,undefined4 data_param_1,undefined4 data_param_2)\n\n{\n  undefined4 parsed_data_1;\n  undefined4 parsed_data_2;\n  \n  parsed_data_1 = data_param_1;\n  parsed_data_2 = data_param_2;\n  parse_data_08004a84(DAT_200000a0,input_param_1,input_param_2,&parsed_data_1,input_param_1,&parsed_data_1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004860": "parse_and_validate_data_08004860",
                "param_1": "input_param_1",
                "param_2": "input_param_2",
                "param_3": "data_param_1",
                "param_4": "data_param_2",
                "uStack_8": "parsed_data_1",
                "uStack_4": "parsed_data_2"
            },
            "calling": [
                "FUN_08004808"
            ],
            "called": [
                "FUN_08004a84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004884": {
            "entrypoint": "0x08004884",
            "current_name": "execute_functions_08004884",
            "code": "\nvoid executeFunctions_08004884(void)\n\n{\n  int index;\n  \n  for (index = 0; index != 0; index = index + 1) {\n    (*(code *)(&DAT_08006008)[index])();\n  }\n  FUNC_080059f8();\n  for (index = 0; index != 10; index = index + 1) {\n    (*(code *)(&DAT_08006008)[index])();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004884": "execute_functions_08004884",
                "iVar1": "index"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_08004648",
                "FUN_080059f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080048cc": {
            "entrypoint": "0x080048cc",
            "current_name": "memset_bytes_080048cc",
            "code": "\nvoid memset_bytes_080048cc(undefined *destination,undefined value,int num_bytes)\n\n{\n  undefined *end_address;\n  \n  end_address = destination + num_bytes;\n  for (; destination != end_address; destination = destination + 1) {\n    *destination = value;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080048cc": "memset_bytes_080048cc",
                "param_1": "destination",
                "param_2": "value",
                "param_3": "num_bytes",
                "puVar1": "end_address"
            },
            "calling": [
                "FUN_0800532c",
                "FUN_08005374",
                "FUN_08005400"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080048dc": {
            "entrypoint": "0x080048dc",
            "current_name": "update_data_list_080048dc",
            "code": "\nvoid updateDataList_080048dc(undefined4 *outputList,int listSize,undefined4 param3,undefined4 param4)\n\n{\n  int *tempVar1;\n  int **resultPointer;\n  int **currentEntry;\n  int **nextEntry;\n  int **previousEntry;\n  int **newEntry;\n  bool isMatch;\n  \n  if (listSize == 0) {\n    return;\n  }\n  newEntry = (int **)(listSize + -4);\n  if (*(int *)(listSize + -4) < 0) {\n    newEntry = (int **)((int)newEntry + *(int *)(listSize + -4));\n  }\n  FUNC_0800557c();\n  nextEntry = (int **)&DAT_200005c8;\n  if (DAT_200005c8 == (int **)0x0) {\n    newEntry[1] = (int *)0x0;\n    currentEntry = resultPointer;\n    DAT_200005c8 = newEntry;\n  }\n  else {\n    nextEntry = DAT_200005c8;\n    if (newEntry < DAT_200005c8) {\n      currentEntry = (int **)*newEntry;\n      nextEntry = (int **)((int)newEntry + (int)currentEntry);\n      isMatch = DAT_200005c8 == nextEntry;\n      if (isMatch) {\n        nextEntry = (int **)*DAT_200005c8;\n        DAT_200005c8 = (int **)DAT_200005c8[1];\n      }\n      newEntry[1] = (int *)DAT_200005c8;\n      DAT_200005c8 = newEntry;\n      if (isMatch) {\n        nextEntry = (int **)((int)nextEntry + (int)currentEntry);\n        *newEntry = (int *)nextEntry;\n      }\n    }\n    else {\n      do {\n        previousEntry = nextEntry;\n        nextEntry = (int **)previousEntry[1];\n        if (nextEntry == (int **)0x0) break;\n      } while (nextEntry <= newEntry);\n      currentEntry = (int **)*previousEntry;\n      if ((int **)((int)previousEntry + (int)currentEntry) == newEntry) {\n        currentEntry = (int **)((int)currentEntry + (int)*newEntry);\n        *previousEntry = (int *)currentEntry;\n        if (nextEntry == (int **)((int)previousEntry + (int)currentEntry)) {\n          tempVar1 = *nextEntry;\n          nextEntry = (int **)nextEntry[1];\n          previousEntry[1] = (int *)nextEntry;\n          currentEntry = (int **)((int)currentEntry + (int)tempVar1);\n          *previousEntry = (int *)currentEntry;\n        }\n      }\n      else if (newEntry < (int **)((int)previousEntry + (int)currentEntry)) {\n        *outputList = 0xc;\n      }\n      else {\n        currentEntry = (int **)((int)newEntry + (int)*newEntry);\n        isMatch = nextEntry == currentEntry;\n        if (isMatch) {\n          currentEntry = (int **)*nextEntry;\n          nextEntry = (int **)nextEntry[1];\n        }\n        newEntry[1] = (int *)nextEntry;\n        if (isMatch) {\n          currentEntry = (int **)((int)currentEntry + (int)*newEntry);\n          *newEntry = (int *)currentEntry;\n        }\n        previousEntry[1] = (int *)newEntry;\n      }\n    }\n  }\n  FUNC_0800557e(outputList,currentEntry,nextEntry,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080048dc": "update_data_list_080048dc",
                "param_1": "outputList",
                "param_2": "listSize",
                "param_3": "param3",
                "param_4": "param4",
                "piVar1": "tempVar1",
                "extraout_r1": "resultPointer",
                "ppiVar2": "currentEntry",
                "ppiVar3": "nextEntry",
                "ppiVar4": "previousEntry",
                "ppiVar5": "newEntry",
                "bVar6": "isMatch"
            },
            "calling": [
                "FUN_080050d0",
                "FUN_080051ac"
            ],
            "called": [
                "FUN_0800557e",
                "FUN_0800557c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004978": {
            "entrypoint": "0x08004978",
            "current_name": "allocate_and_initialize_memory_08004978",
            "code": "\nuint allocate_and_initialize_memory_08004978(undefined4 *output_ptr,uint input_size)\n\n{\n  uint *current_chunk;\n  int remaining_space;\n  uint *next_chunk;\n  uint size_difference;\n  uint *previous_chunk;\n  uint total_size;\n  \n  total_size = (input_size + 3 & 0xfffffffc) + 8;\n  if (total_size < 0xc) {\n    total_size = 0xc;\n  }\n  if (((int)total_size < 0) || (total_size < input_size)) {\n    *output_ptr = 0xc;\n  }\n  else {\n    FUNC_0800557c();\n    current_chunk = DAT_200005c8;\n    previous_chunk = DAT_200005c8;\n    while (next_chunk = current_chunk, next_chunk != (uint *)0x0) {\n      size_difference = *next_chunk - total_size;\n      if (-1 < (int)size_difference) {\n        if (size_difference < 0xc) {\n          if (previous_chunk == next_chunk) {\n            current_chunk = (uint *)previous_chunk[1];\n          }\n          else {\n            current_chunk = (uint *)next_chunk[1];\n          }\n          if (previous_chunk != next_chunk) {\n            previous_chunk[1] = (uint)current_chunk;\n            previous_chunk = next_chunk;\n            current_chunk = DAT_200005c8;\n          }\n        }\n        else {\n          *next_chunk = size_difference;\n          *(uint *)((int)next_chunk + size_difference) = total_size;\n          previous_chunk = (uint *)((int)next_chunk + size_difference);\n          current_chunk = DAT_200005c8;\n        }\n        goto LAB_080049dc;\n      }\n      previous_chunk = next_chunk;\n      current_chunk = (uint *)next_chunk[1];\n    }\n    if (DAT_200005cc == 0) {\n      DAT_200005cc = initialize_memory_0800500c(output_ptr);\n    }\n    current_chunk = (uint *)initialize_memory_0800500c(output_ptr,total_size);\n    if ((current_chunk != (uint *)0xffffffff) &&\n       ((previous_chunk = (uint *)((int)current_chunk + 3U & 0xfffffffc), current_chunk == previous_chunk ||\n        (remaining_space = initialize_memory_0800500c(output_ptr,(int)previous_chunk - (int)current_chunk), remaining_space != -1)))) {\n      *previous_chunk = total_size;\n      current_chunk = DAT_200005c8;\nLAB_080049dc:\n      DAT_200005c8 = current_chunk;\n      FUNC_0800557e(output_ptr);\n      total_size = (int)previous_chunk + 0xbU & 0xfffffff8;\n      remaining_space = total_size - (int)(previous_chunk + 1);\n      if (remaining_space != 0) {\n        *(int *)((int)previous_chunk + remaining_space) = -remaining_space;\n        return total_size;\n      }\n      return total_size;\n    }\n    *output_ptr = 0xc;\n    FUNC_0800557e(output_ptr);\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004978": "allocate_and_initialize_memory_08004978",
                "param_1": "output_ptr",
                "param_2": "input_size",
                "puVar1": "current_chunk",
                "iVar2": "remaining_space",
                "puVar3": "next_chunk",
                "uVar4": "size_difference",
                "puVar5": "previous_chunk",
                "uVar6": "total_size"
            },
            "calling": [
                "FUN_08005374",
                "FUN_080054fc"
            ],
            "called": [
                "FUN_0800500c",
                "FUN_0800557e",
                "FUN_0800557c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a34": {
            "entrypoint": "0x08004a34",
            "current_name": "process_and_update_data_08004a34",
            "code": "\nuint process_and_update_data_08004a34(int resource_handle,byte data_byte,byte **data_buffer)\n\n{\n  int temp_value;\n  byte *data_ptr;\n  byte *current_data;\n  uint result;\n  \n  data_ptr = data_buffer[2] + -1;\n  data_buffer[2] = data_ptr;\n  if ((-1 < (int)data_ptr) ||\n     (((int)data_buffer[6] <= (int)data_ptr && (data_ptr = (byte *)(uint)data_byte, data_ptr != (byte *)0xa))))\n  {\n    data_ptr = *data_buffer;\n    *data_buffer = data_ptr + 1;\n    *data_ptr = data_byte;\n    return (uint)data_byte;\n  }\n  if ((resource_handle != 0) && (*(int *)(resource_handle + 0x18) == 0)) {\n    initialize_resources_080053a0();\n  }\n  if (data_buffer == (byte **)&DAT_08005fc0) {\n    data_buffer = *(byte ***)(resource_handle + 4);\n  }\n  else if (data_buffer == (byte **)&DAT_08005fe0) {\n    data_buffer = *(byte ***)(resource_handle + 8);\n  }\n  else if (data_buffer == (byte **)&DAT_08005fa0) {\n    data_buffer = *(byte ***)(resource_handle + 0xc);\n  }\n  data_buffer[2] = data_buffer[6];\n  current_data = (byte *)(uint)*(ushort *)(data_buffer + 3);\n  temp_value = (int)current_data << 0x1c;\n  if (((temp_value < 0) && (current_data = data_buffer[4], current_data != (byte *)0x0)) ||\n     (temp_value = process_data_080050d0(resource_handle,data_buffer,temp_value,current_data,data_ptr), temp_value == 0)) {\n    temp_value = (int)*data_buffer - (int)data_buffer[4];\n    result = (uint)data_byte;\n    if ((temp_value < (int)data_buffer[5]) || (temp_value = process_data_080052cc(resource_handle,data_buffer), temp_value == 0)) {\n      data_buffer[2] = data_buffer[2] + -1;\n      data_ptr = *data_buffer;\n      *data_buffer = data_ptr + 1;\n      *data_ptr = data_byte;\n      if ((byte *)(temp_value + 1) != data_buffer[5]) {\n        if (-1 < (int)((uint)*(ushort *)(data_buffer + 3) << 0x1f)) {\n          return result;\n        }\n        if (result != 10) {\n          return result;\n        }\n      }\n      temp_value = process_data_080052cc(resource_handle,data_buffer);\n      if (temp_value == 0) {\n        return result;\n      }\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08004a34": "process_and_update_data_08004a34",
                "param_1": "resource_handle",
                "param_2": "data_byte",
                "param_3": "data_buffer",
                "iVar1": "temp_value",
                "pbVar2": "data_ptr",
                "pbVar3": "current_data",
                "uVar4": "result"
            },
            "calling": [
                "FUN_08004a60"
            ],
            "called": [
                "FUN_080050d0",
                "FUN_080053a0",
                "FUN_080052cc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a60": {
            "entrypoint": "0x08004a60",
            "current_name": "process_data_08004a60",
            "code": "\nint processData_08004a60(undefined4 input1,undefined4 input2,undefined *data,int size)\n\n{\n  int result;\n  undefined *endPtr;\n  int remainingSize;\n  \n  endPtr = data + size;\n  remainingSize = size;\n  do {\n    if (data == endPtr) {\n      return 0;\n    }\n    result = process_and_update_data_08004a34(input1,*data,input2,size,remainingSize);\n    size = result + 1;\n    data = data + 1;\n  } while (size != 0);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08004a60": "process_data_08004a60",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "data",
                "param_4": "size",
                "iVar1": "result",
                "puVar2": "endPtr",
                "iVar3": "remainingSize"
            },
            "calling": [
                "FUN_08004a84"
            ],
            "called": [
                "FUN_08004a34"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a84": {
            "entrypoint": "0x08004a84",
            "current_name": "parse_data_08004a84",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08004c58) */\n\nint parseData_08004a84(int inputBuffer,undefined4 *paramPointer,byte *formatString,int *lengthPointer)\n\n{\n  int result;\n  int *paramIterator;\n  bool foundNumericChar;\n  byte *charIterator;\n  byte *nextCharIterator;\n  int extractedData;\n  int iterationCounter;\n  int *lengthArray;\n  uint flags;\n  int precision;\n  undefined4 unused;\n  int length;\n  int totalLength;\n  byte conversionSpecifier;\n  undefined spaceFlag;\n  undefined plusFlag;\n  undefined alignmentFlag;\n  undefined4 unused2;\n  \n  lengthArray = lengthPointer;\n  if ((inputBuffer != 0) && (*(int *)(inputBuffer + 0x18) == 0)) {\n    initialize_resources_080053a0();\n  }\n  if (paramPointer == &DAT_08005fc0) {\n    paramPointer = *(undefined4 **)(inputBuffer + 4);\n  }\n  else if (paramPointer == (undefined4 *)&DAT_08005fe0) {\n    paramPointer = *(undefined4 **)(inputBuffer + 8);\n  }\n  else if (paramPointer == (undefined4 *)&DAT_08005fa0) {\n    paramPointer = *(undefined4 **)(inputBuffer + 0xc);\n  }\n  if (((-1 < (int)((uint)*(ushort *)(paramPointer + 3) << 0x1c)) || (paramPointer[4] == 0)) &&\n     (iterationCounter = process_data_080050d0(inputBuffer,paramPointer), iterationCounter != 0)) {\n    return -1;\n  }\n  totalLength = 0;\n  spaceFlag = 0x20;\n  plusFlag = 0x30;\n  charIterator = formatString;\nLAB_08004ac6:\n  nextCharIterator = charIterator;\n  if (*nextCharIterator != 0) goto LAB_08004b7c;\n  goto LAB_08004ad0;\nLAB_08004b7c:\n  charIterator = nextCharIterator + 1;\n  if (*nextCharIterator != 0x25) goto LAB_08004ac6;\nLAB_08004ad0:\n  iterationCounter = (int)nextCharIterator - (int)formatString;\n  if (iterationCounter != 0) {\n    result = process_data_08004a60(inputBuffer,paramPointer,formatString,iterationCounter);\n    if (result == -1) {\nLAB_08004c70:\n      if ((int)((uint)*(ushort *)(paramPointer + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return totalLength;\n    }\n    totalLength = totalLength + iterationCounter;\n  }\n  if (*nextCharIterator == 0) goto LAB_08004c70;\n  flags = 0;\n  length = 0;\n  precision = -1;\n  unused = 0;\n  alignmentFlag = 0;\n  unused2 = 0;\n  charIterator = nextCharIterator + 1;\n  while( true ) {\n    iterationCounter = find_byte_in_buffer_08000230(\"#-0+ \",*charIterator);\n    formatString = charIterator + 1;\n    if (iterationCounter == 0) break;\n    flags = 1 << (iterationCounter + 0xf7ffa094U & 0xff) | flags;\n    charIterator = formatString;\n  }\n  if ((int)(flags << 0x1b) < 0) {\n    alignmentFlag = 0x20;\n  }\n  if ((int)(flags << 0x1c) < 0) {\n    alignmentFlag = 0x2b;\n  }\n  if (*charIterator == 0x2a) {\n    paramIterator = lengthArray + 1;\n    iterationCounter = *lengthArray;\n    lengthArray = paramIterator;\n    if (iterationCounter < 0) {\n      length = -iterationCounter;\n      flags = flags | 2;\n      goto LAB_08004bae;\n    }\n  }\n  else {\n    foundNumericChar = false;\n    iterationCounter = length;\n    formatString = charIterator;\n    while( true ) {\n      if (9 < *formatString - 0x30) break;\n      iterationCounter = iterationCounter * 10 + (*formatString - 0x30);\n      foundNumericChar = true;\n      formatString = formatString + 1;\n    }\n    if (!foundNumericChar) goto LAB_08004bae;\n  }\n  length = iterationCounter;\nLAB_08004bae:\n  if (*formatString == 0x2e) {\n    if (formatString[1] == 0x2a) {\n      precision = *lengthArray;\n      if (precision < 0) {\n        precision = -1;\n      }\n      formatString = formatString + 2;\n      lengthArray = lengthArray + 1;\n    }\n    else {\n      foundNumericChar = false;\n      precision = 0;\n      iterationCounter = 0;\n      while( true ) {\n        formatString = formatString + 1;\n        if (9 < *formatString - 0x30) break;\n        iterationCounter = iterationCounter * 10 + (*formatString - 0x30);\n        foundNumericChar = true;\n      }\n      if (foundNumericChar) {\n        precision = iterationCounter;\n      }\n    }\n  }\n  iterationCounter = find_byte_in_buffer_08000230(&DAT_08005f72,*formatString,3);\n  if (iterationCounter != 0) {\n    flags = flags | 0x40 << (iterationCounter + 0xf7ffa08eU & 0xff);\n    formatString = formatString + 1;\n  }\n  conversionSpecifier = *formatString;\n  formatString = formatString + 1;\n  iterationCounter = find_byte_in_buffer_08000230(\"efgEFG\",conversionSpecifier,6);\n  if (iterationCounter == 0) {\n    extractedData = process_and_convert_data_08004d9c(inputBuffer,&flags,paramPointer,0x8004a61,&lengthArray);\n    if (extractedData == -1) goto LAB_08004c70;\n  }\n  else {\n    lengthArray = (int *)(((int)lengthArray + 7U & 0xfffffff8) + 8);\n  }\n  totalLength = totalLength + extractedData;\n  charIterator = formatString;\n  goto LAB_08004ac6;\n}\n\n",
            "renaming": {
                "FUN_08004a84": "parse_data_08004a84",
                "param_1": "inputBuffer",
                "param_2": "paramPointer",
                "param_3": "formatString",
                "param_4": "lengthPointer",
                "iVar1": "result",
                "piVar2": "paramIterator",
                "bVar3": "foundNumericChar",
                "pbVar4": "charIterator",
                "pbVar5": "nextCharIterator",
                "unaff_r9": "extractedData",
                "iVar6": "iterationCounter",
                "local_8c": "lengthArray",
                "local_88": "flags",
                "local_84": "precision",
                "local_80": "unused",
                "local_7c": "length",
                "local_74": "totalLength",
                "local_70": "conversionSpecifier",
                "local_6f": "spaceFlag",
                "local_6e": "plusFlag",
                "local_45": "alignmentFlag",
                "local_30": "unused2"
            },
            "calling": [
                "FUN_08004860",
                "FUN_08004fdc"
            ],
            "called": [
                "FUN_080050d0",
                "FUN_080053a0",
                "FUN_08000230",
                "FUN_08004a60",
                "FUN_08004d9c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004cb0": {
            "entrypoint": "0x08004cb0",
            "current_name": "process_data_08004cb0",
            "code": "\nundefined4\nprocessData_08004cb0(undefined4 dataPointer,uint *array,uint *result,undefined4 param4,code *callback)\n\n{\n  int index1;\n  int index2;\n  uint tempVar3;\n  uint tempVar4;\n  bool flag;\n  \n  tempVar3 = array[4];\n  if ((int)array[4] < (int)array[2]) {\n    tempVar3 = array[2];\n  }\n  *result = tempVar3;\n  if (*(char *)((int)array + 0x43) != '\\0') {\n    *result = tempVar3 + 1;\n  }\n  if ((int)(*array << 0x1a) < 0) {\n    *result = *result + 2;\n  }\n  if ((*array & 6) == 0) {\n    for (index1 = 0; index1 < (int)(array[3] - *result); index1 = index1 + 1) {\n      index2 = (*callback)(dataPointer,param4,(int)array + 0x19,1);\n      if (index2 == -1) {\n        return 0xffffffff;\n      }\n    }\n  }\n  tempVar3 = (uint)*(byte *)((int)array + 0x43);\n  if (tempVar3 != 0) {\n    tempVar3 = 1;\n  }\n  if ((int)(*array << 0x1a) < 0) {\n    *(undefined *)((int)array + tempVar3 + 0x43) = 0x30;\n    *(undefined *)((int)array + tempVar3 + 0x44) = *(undefined *)((int)array + 0x45);\n    tempVar3 = tempVar3 + 2;\n  }\n  index1 = (*callback)(dataPointer,param4,(int)array + 0x43,tempVar3);\n  if (index1 != -1) {\n    tempVar3 = array[3];\n    flag = (*array & 6) == 4;\n    if (flag) {\n      tempVar3 = tempVar3 - *result;\n    }\n    if (flag) {\n      tempVar3 = tempVar3 & ~((int)tempVar3 >> 0x1f);\n    }\n    else {\n      tempVar3 = 0;\n    }\n    if ((int)array[4] < (int)array[2]) {\n      tempVar3 = tempVar3 + (array[2] - array[4]);\n    }\n    tempVar4 = 0;\n    while( true ) {\n      if (tempVar3 == tempVar4) {\n        return 0;\n      }\n      index1 = (*callback)(dataPointer,param4,(int)array + 0x1a,1);\n      if (index1 == -1) break;\n      tempVar4 = tempVar4 + 1;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08004cb0": "process_data_08004cb0",
                "param_1": "dataPointer",
                "param_2": "array",
                "param_3": "result",
                "param_4": "param4",
                "param_5": "callback",
                "iVar1": "index1",
                "iVar2": "index2",
                "uVar3": "tempVar3",
                "uVar4": "tempVar4",
                "bVar5": "flag"
            },
            "calling": [
                "FUN_08004d9c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d9c": {
            "entrypoint": "0x08004d9c",
            "current_name": "process_and_convert_data_08004d9c",
            "code": "\nuint processAndConvertData_08004d9c(undefined4 inputParam,uint *dataPointer,undefined4 paramPointer,code *callbackFunction,uint **pointerArray)\n\n{\n  byte byteValue;\n  int indexVar;\n  uint *ptrVar;\n  int anotherIndexVar;\n  char *charPointer;\n  uint value1;\n  uint **pointerPointer;\n  char **charPointerPointer;\n  uint value2;\n  uint value3;\n  char *charPointer2;\n  char *resultPointer;\n  uint local_24 [2];\n  \n  byteValue = *(byte *)(dataPointer + 6);\n  resultPointer = (char *)((int)dataPointer + 0x43);\n  if (byteValue != 0x6e) {\n    if (byteValue < 0x6f) {\n      if (byteValue != 99) {\n        if (byteValue < 100) {\n          if (byteValue == 0) goto LAB_08004f56;\n          if (byteValue != 0x58) goto LAB_08004dcc;\n          *(undefined *)((int)dataPointer + 0x45) = 0x58;\n          charPointer = \"0123456789ABCDEF\";\nLAB_08004ee6:\n          value1 = *dataPointer;\n          ptrVar = *pointerArray;\n          *pointerArray = ptrVar + 1;\n          if (((value1 & 0x80) == 0) && ((int)(value1 << 0x19) < 0)) {\n            value2 = (uint)*(ushort *)ptrVar;\n          }\n          else {\n            value2 = *ptrVar;\n          }\n          if ((int)(value1 << 0x1f) < 0) {\n            *dataPointer = value1 | 0x20;\n          }\n          if (value2 == 0) {\n            *dataPointer = *dataPointer & 0xffffffdf;\n          }\n          value1 = 0x10;\nLAB_08004e7c:\n          *(undefined *)((int)dataPointer + 0x43) = 0;\n        }\n        else {\n          if ((byteValue != 100) && (byteValue != 0x69)) goto LAB_08004dcc;\n          value2 = *dataPointer;\n          ptrVar = *pointerArray;\n          if ((value2 & 0x80) == 0) {\n            *pointerArray = ptrVar + 1;\n            if ((value2 & 0x40) == 0) goto LAB_08004dec;\n            value2 = (uint)(short)*(ushort *)ptrVar;\n          }\n          else {\n            *pointerArray = ptrVar + 1;\nLAB_08004dec:\n            value2 = *ptrVar;\n          }\n          if ((int)value2 < 0) {\n            value2 = -value2;\n            *(undefined *)((int)dataPointer + 0x43) = 0x2d;\n          }\n          charPointer = \"0123456789ABCDEF\";\n          value1 = 10;\n        }\n        value3 = dataPointer[1];\n        dataPointer[2] = value3;\n        charPointer2 = resultPointer;\n        if ((int)value3 < 0) {\n          if (value2 != 0) goto LAB_08004f1a;\nLAB_08004fc8:\n          *(char *)((int)dataPointer + 0x42) = *charPointer;\n          charPointer2 = (char *)((int)dataPointer + 0x42);\n        }\n        else {\n          *dataPointer = *dataPointer & 0xfffffffb;\n          if (value2 == 0) {\n            if (value3 != 0) goto LAB_08004fc8;\n          }\n          else {\nLAB_08004f1a:\n            do {\n              value3 = value2 / value1;\n              charPointer2 = charPointer2 + -1;\n              *charPointer2 = charPointer[value2 - value1 * value3];\n              value2 = value3;\n            } while (value3 != 0);\n          }\n        }\n        if (((value1 == 8) && ((int)(*dataPointer << 0x1f) < 0)) && ((int)dataPointer[1] <= (int)dataPointer[4]))\n        {\n          charPointer2[-1] = '0';\n          charPointer2 = charPointer2 + -1;\n        }\n        dataPointer[4] = (int)resultPointer - (int)charPointer2;\n        resultPointer = charPointer2;\n        goto LAB_08004ec2;\n      }\n      ptrVar = *pointerArray;\n      *pointerArray = ptrVar + 1;\n      *(char *)((int)dataPointer + 0x42) = (char)*ptrVar;\nLAB_08004e2c:\n      resultPointer = (char *)((int)dataPointer + 0x42);\n      value2 = 1;\n    }\n    else {\n      if (byteValue != 0x73) {\n        if (byteValue < 0x74) {\n          if (byteValue == 0x6f) {\nLAB_08004e52:\n            value2 = *dataPointer;\n            ptrVar = *pointerArray;\n            if ((value2 & 0x80) == 0) {\n              *pointerArray = ptrVar + 1;\n              if ((value2 & 0x40) == 0) goto LAB_08004e60;\n              value2 = (uint)*(ushort *)ptrVar;\n            }\n            else {\n              *pointerArray = ptrVar + 1;\nLAB_08004e60:\n              value2 = *ptrVar;\n            }\n            charPointer = \"0123456789ABCDEF\";\n            if (byteValue == 0x6f) {\n              value1 = 8;\n            }\n            else {\n              value1 = 10;\n            }\n            goto LAB_08004e7c;\n          }\n          if (byteValue == 0x70) {\n            *dataPointer = *dataPointer | 0x20;\nLAB_08004e12:\n            *(undefined *)((int)dataPointer + 0x45) = 0x78;\n            charPointer = \"0123456789abcdef\";\n            goto LAB_08004ee6;\n          }\n        }\n        else {\n          if (byteValue == 0x75) goto LAB_08004e52;\n          if (byteValue == 0x78) goto LAB_08004e12;\n        }\nLAB_08004dcc:\n        *(byte *)((int)dataPointer + 0x42) = byteValue;\n        goto LAB_08004e2c;\n      }\n      charPointerPointer = (char **)*pointerArray;\n      *pointerArray = (uint *)(charPointerPointer + 1);\n      resultPointer = *charPointerPointer;\n      indexVar = find_byte_in_buffer_08000230(resultPointer,0,dataPointer[1]);\n      if (indexVar != 0) {\n        dataPointer[1] = indexVar - (int)resultPointer;\n      }\n      value2 = dataPointer[1];\n    }\n    dataPointer[4] = value2;\n    *(undefined *)((int)dataPointer + 0x43) = 0;\n    goto LAB_08004ec2;\n  }\n  value2 = *dataPointer;\n  pointerPointer = (uint **)*pointerArray;\n  value1 = dataPointer[5];\n  if ((value2 & 0x80) == 0) {\n    *pointerArray = (uint *)(pointerPointer + 1);\n    ptrVar = *pointerPointer;\n    if ((value2 & 0x40) == 0) goto LAB_08004f42;\n    *(short *)ptrVar = (short)value1;\n  }\n  else {\n    *pointerArray = (uint *)(pointerPointer + 1);\n    ptrVar = *pointerPointer;\nLAB_08004f42:\n    *ptrVar = value1;\n  }\nLAB_08004f56:\n  dataPointer[4] = 0;\nLAB_08004ec2:\n  indexVar = process_data_08004cb0(inputParam,dataPointer,local_24,paramPointer,callbackFunction);\n  if ((indexVar == -1) || (indexVar = (*callbackFunction)(inputParam,paramPointer,resultPointer,dataPointer[4]), indexVar == -1)) {\nLAB_08004ed6:\n    value2 = 0xffffffff;\n  }\n  else {\n    if ((int)(*dataPointer << 0x1e) < 0) {\n      for (indexVar = 0; indexVar < (int)(dataPointer[3] - local_24[0]); indexVar = indexVar + 1) {\n        anotherIndexVar = (*callbackFunction)(inputParam,paramPointer,(int)dataPointer + 0x19,1);\n        if (anotherIndexVar == -1) goto LAB_08004ed6;\n      }\n    }\n    value2 = dataPointer[3];\n    if ((int)dataPointer[3] < (int)local_24[0]) {\n      value2 = local_24[0];\n    }\n  }\n  return value2;\n}\n\n",
            "renaming": {
                "FUN_08004d9c": "process_and_convert_data_08004d9c",
                "param_1": "inputParam",
                "param_2": "dataPointer",
                "param_3": "paramPointer",
                "param_4": "callbackFunction",
                "param_5": "pointerArray",
                "bVar1": "byteValue",
                "iVar2": "indexVar",
                "puVar3": "ptrVar",
                "iVar4": "anotherIndexVar",
                "pcVar5": "charPointer",
                "uVar6": "value1",
                "uVar9": "value2",
                "uVar10": "value3",
                "pcVar11": "charPointer2",
                "pcVar12": "resultPointer",
                "ppuVar7": "pointerPointer",
                "ppcVar8": "charPointerPointer"
            },
            "calling": [
                "FUN_08004a84"
            ],
            "called": [
                "FUN_08000230",
                "FUN_08004cb0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004fdc": {
            "entrypoint": "0x08004fdc",
            "current_name": "initialize_or_parse_data_08004fdc",
            "code": "\nvoid initialize_or_parse_data_08004fdc(undefined4 resource_param,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int data_var;\n  undefined4 resource_var;\n  undefined4 stack_var_c;\n  undefined4 stack_var_8;\n  undefined4 stack_var_4;\n  \n  data_var = DAT_200000a0;\n  resource_var = resource_param;\n  stack_var_c = param2;\n  stack_var_8 = param3;\n  stack_var_4 = param4;\n  if ((DAT_200000a0 != 0) && (*(int *)(DAT_200000a0 + 0x18) == 0)) {\n    initialize_resources_080053a0(DAT_200000a0);\n  }\n  parse_data_08004a84(data_var,*(undefined4 *)(data_var + 8),resource_param,&stack_var_c,resource_var,&stack_var_c);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004fdc": "initialize_or_parse_data_08004fdc",
                "param_1": "resource_param",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar2": "resource_var",
                "uStack_c": "stack_var_c",
                "uStack_8": "stack_var_8",
                "uStack_4": "stack_var_4",
                "iVar1": "data_var"
            },
            "calling": [
                "FUN_08003978"
            ],
            "called": [
                "FUN_080053a0",
                "FUN_08004a84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800500c": {
            "entrypoint": "0x0800500c",
            "current_name": "initialize_memory_0800500c",
            "code": "\nvoid initializeMemory_0800500c(int *resultPointer,undefined4 size)\n\n{\n  int allocationResult;\n  \n  DAT_20000674 = 0;\n  allocationResult = allocate_memory_08004094(size);\n  if ((allocationResult == -1) && (DAT_20000674 != 0)) {\n    *resultPointer = DAT_20000674;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800500c": "initialize_memory_0800500c",
                "param_1": "resultPointer",
                "param_2": "size",
                "iVar1": "allocationResult"
            },
            "calling": [
                "FUN_08004978"
            ],
            "called": [
                "FUN_08004094"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080050d0": {
            "entrypoint": "0x080050d0",
            "current_name": "process_data_080050d0",
            "code": "\nuint processData_080050d0(undefined4 *output,undefined4 *input)\n\n{\n  int dataPtr;\n  uint result;\n  ushort value;\n  \n  dataPtr = DAT_200000a0;\n  if ((DAT_200000a0 != 0) && (*(int *)(DAT_200000a0 + 0x18) == 0)) {\n    initialize_resources_080053a0(DAT_200000a0);\n  }\n  if (input == &DAT_08005fc0) {\n    input = *(undefined4 **)(dataPtr + 4);\n  }\n  else if (input == (undefined4 *)&DAT_08005fe0) {\n    input = *(undefined4 **)(dataPtr + 8);\n  }\n  else if (input == (undefined4 *)&DAT_08005fa0) {\n    input = *(undefined4 **)(dataPtr + 0xc);\n  }\n  value = *(ushort *)(input + 3);\n  result = (uint)value;\n  if (-1 < (int)(result << 0x1c)) {\n    if (-1 < (int)(result << 0x1b)) {\n      *output = 9;\n      goto LAB_08005100;\n    }\n    if ((int)(result << 0x1d) < 0) {\n      if ((undefined4 *)input[0xd] != (undefined4 *)0x0) {\n        if ((undefined4 *)input[0xd] != input + 0x11) {\n          updateDataList(output);\n        }\n        input[0xd] = 0;\n      }\n      *(ushort *)(input + 3) = *(ushort *)(input + 3) & 0xffdb;\n      input[1] = 0;\n      *input = input[4];\n    }\n    *(ushort *)(input + 3) = *(ushort *)(input + 3) | 8;\n  }\n  if ((input[4] == 0) && ((*(ushort *)(input + 3) & 0x280) != 0x200)) {\n    initializeApplication(output,input);\n  }\n  value = *(ushort *)(input + 3);\n  result = value & 1;\n  if ((value & 1) == 0) {\n    if (-1 < (int)((uint)value << 0x1e)) {\n      result = input[5];\n    }\n    input[2] = result;\n  }\n  else {\n    input[2] = 0;\n    input[6] = -input[5];\n  }\n  if (input[4] == 0) {\n    value = *(ushort *)(input + 3);\n    result = (int)(short)value & 0x80;\n    if (result != 0) {\nLAB_08005100:\n      *(ushort *)(input + 3) = value | 0x40;\n      return 0xffffffff;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080050d0": "process_data_080050d0",
                "param_1": "output",
                "param_2": "input",
                "iVar1": "dataPtr",
                "uVar2": "result",
                "uVar3": "value",
                "update_data_list_080048dc": "updateDataList",
                "initialize_application_080054fc": "initializeApplication"
            },
            "calling": [
                "FUN_08004a84",
                "FUN_08004a34"
            ],
            "called": [
                "FUN_080048dc",
                "FUN_080053a0",
                "FUN_080054fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": [],
            "code_backup": "\nuint FUN_080050d0(undefined4 *param_1,undefined4 *param_2)\n\n{\n  int iVar1;\n  uint uVar2;\n  ushort uVar3;\n  \n  iVar1 = DAT_200000a0;\n  if ((DAT_200000a0 != 0) && (*(int *)(DAT_200000a0 + 0x18) == 0)) {\n    FUNC_080053a0(DAT_200000a0);\n  }\n  if (param_2 == &DAT_08005fc0) {\n    param_2 = *(undefined4 **)(iVar1 + 4);\n  }\n  else if (param_2 == (undefined4 *)&DAT_08005fe0) {\n    param_2 = *(undefined4 **)(iVar1 + 8);\n  }\n  else if (param_2 == (undefined4 *)&DAT_08005fa0) {\n    param_2 = *(undefined4 **)(iVar1 + 0xc);\n  }\n  uVar3 = *(ushort *)(param_2 + 3);\n  uVar2 = (uint)uVar3;\n  if (-1 < (int)(uVar2 << 0x1c)) {\n    if (-1 < (int)(uVar2 << 0x1b)) {\n      *param_1 = 9;\n      goto LAB_08005100;\n    }\n    if ((int)(uVar2 << 0x1d) < 0) {\n      if ((undefined4 *)param_2[0xd] != (undefined4 *)0x0) {\n        if ((undefined4 *)param_2[0xd] != param_2 + 0x11) {\n          update_data_list_080048dc(param_1);\n        }\n        param_2[0xd] = 0;\n      }\n      *(ushort *)(param_2 + 3) = *(ushort *)(param_2 + 3) & 0xffdb;\n      param_2[1] = 0;\n      *param_2 = param_2[4];\n    }\n    *(ushort *)(param_2 + 3) = *(ushort *)(param_2 + 3) | 8;\n  }\n  if ((param_2[4] == 0) && ((*(ushort *)(param_2 + 3) & 0x280) != 0x200)) {\n    initialize_application_080054fc(param_1,param_2);\n  }\n  uVar3 = *(ushort *)(param_2 + 3);\n  uVar2 = uVar3 & 1;\n  if ((uVar3 & 1) == 0) {\n    if (-1 < (int)((uint)uVar3 << 0x1e)) {\n      uVar2 = param_2[5];\n    }\n    param_2[2] = uVar2;\n  }\n  else {\n    param_2[2] = 0;\n    param_2[6] = -param_2[5];\n  }\n  if (param_2[4] == 0) {\n    uVar3 = *(ushort *)(param_2 + 3);\n    uVar2 = (int)(short)uVar3 & 0x80;\n    if (uVar2 != 0) {\nLAB_08005100:\n      *(ushort *)(param_2 + 3) = uVar3 | 0x40;\n      return 0xffffffff;\n    }\n  }\n  else {\n    uVar2 = 0;\n  }\n  return uVar2;\n}\n\n"
        },
        "FUN_080051ac": {
            "entrypoint": "0x080051ac",
            "current_name": "execute_and_process_data_080051ac",
            "code": "\nvoid executeAndProcessData_080051ac(void)\n\n{\n  uint *dataPointer;\n  int count;\n  int *functionParams;\n  int *listPointer;\n  uint dataSize;\n  ushort flags;\n  int offset;\n  code *functionPointer;\n  int totalSize;\n  uint tempData;\n  code *jumpTable;\n  bool isZero;\n  undefined8 result;\n  \n  execute_function_080055d0(6);\n  jumpTable = (code *)0x80051bb;\n  result = idle_loop_080040f8(1);\n  functionParams = (int *)((ulonglong)result >> 0x20);\n  dataPointer = (uint *)result;\n  flags = *(ushort *)(functionParams + 3);\n  dataSize = (uint)flags;\n  if ((int)(dataSize << 0x1c) < 0) {\n    count = functionParams[4];\n    if (count != 0) {\n      offset = dataSize << 0x1e;\n      isZero = offset == 0;\n      totalSize = *functionParams;\n      if (isZero) {\n        offset = functionParams[5];\n      }\n      *functionParams = count;\n      if (!isZero) {\n        offset = 0;\n      }\n      functionParams[2] = offset;\n      for (totalSize = totalSize - count; 0 < totalSize; totalSize = totalSize - offset) {\n        offset = (*(code *)functionParams[10])(dataPointer,functionParams[8],count,totalSize);\n        if (offset < 1) {\n          flags = *(ushort *)(functionParams + 3);\n          goto LAB_080052b2;\n        }\n        count = count + offset;\n      }\n    }\n  }\n  else if (((0 < functionParams[1]) || (0 < functionParams[0x10])) &&\n          (functionPointer = (code *)functionParams[0xb], functionPointer != (code *)0x0)) {\n    tempData = *dataPointer;\n    *dataPointer = 0;\n    if ((flags & 0x1000) == 0) {\n      count = (*functionPointer)(dataPointer,functionParams[8],dataSize & 0x1000,1);\n      if ((count == -1) && (dataSize = *dataPointer, dataSize != 0)) {\n        if ((dataSize != 0x1d) && (dataSize != 0x16)) {\n          *(ushort *)(functionParams + 3) = *(ushort *)(functionParams + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x0800527c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          (*jumpTable)();\n          return;\n        }\n        *dataPointer = tempData;\n        goto LAB_080051d6;\n      }\n    }\n    else {\n      count = functionParams[0x15];\n    }\n    if (((int)((uint)*(ushort *)(functionParams + 3) << 0x1d) < 0) &&\n       (count = count - functionParams[1], functionParams[0xd] != 0)) {\n      count = count - functionParams[0x10];\n    }\n    count = (*(code *)functionParams[0xb])(dataPointer,functionParams[8],count,0);\n    flags = *(ushort *)(functionParams + 3);\n    if ((count == -1) &&\n       ((0x1d < *dataPointer || (-1 < (int)((0x20400001U >> (*dataPointer & 0xff)) << 0x1f))))) {\nLAB_080052b2:\n      *(ushort *)(functionParams + 3) = flags | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x080052bc. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jumpTable)(0xffffffff);\n      return;\n    }\n    functionParams[1] = 0;\n    *functionParams = functionParams[4];\n    if (((int)((uint)flags << 0x13) < 0) && ((count != -1 || (*dataPointer == 0)))) {\n      functionParams[0x15] = count;\n    }\n    listPointer = (int *)functionParams[0xd];\n    *dataPointer = tempData;\n    if (listPointer != (int *)0x0) {\n      if (listPointer != functionParams + 0x11) {\n        update_data_list_080048dc(dataPointer);\n      }\n      functionParams[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08005252. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jumpTable)();\n      return;\n    }\n  }\nLAB_080051d6:\n                    /* WARNING: Could not recover jumptable at 0x080051d8. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080051ac": "execute_and_process_data_080051ac",
                "puVar1": "dataPointer",
                "iVar2": "count",
                "piVar3": "functionParams",
                "piVar4": "listPointer",
                "uVar5": "dataSize",
                "uVar6": "flags",
                "iVar7": "offset",
                "pcVar8": "functionPointer",
                "iVar9": "totalSize",
                "uVar10": "tempData",
                "bVar11": "isZero",
                "uVar12": "result",
                "UNRECOVERED_JUMPTABLE_00": "jumpTable"
            },
            "calling": [
                "FUN_08005760",
                "FUN_08004808"
            ],
            "called": [
                "FUN_080048dc",
                "FUN_080055d0",
                "FUN_080040f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080052cc": {
            "entrypoint": "0x080052cc",
            "current_name": "process_data_080052cc",
            "code": "\nundefined4 processData_080052cc(uint *data,int *config)\n\n{\n  undefined4 result;\n  int size;\n  int *ptr;\n  uint value;\n  ushort flag;\n  int increment;\n  undefined4 var1;\n  undefined4 var2;\n  code *callback;\n  int difference;\n  uint temp;\n  code *jmpTable;\n  bool boolVal;\n  \n  if (config[4] != 0) {\n    if ((data != (uint *)0x0) && (data[6] == 0)) {\n      initialize_resources_080053a0();\n    }\n    if (config == &DAT_08005fc0) {\n      config = (int *)data[1];\n    }\n    else if (config == (int *)&DAT_08005fe0) {\n      config = (int *)data[2];\n    }\n    else if (config == (int *)&DAT_08005fa0) {\n      config = (int *)data[3];\n    }\n    if (*(short *)(config + 3) != 0) {\n      flag = *(ushort *)(config + 3);\n      value = (uint)flag;\n      if ((int)(value << 0x1c) < 0) {\n        size = config[4];\n        if (size != 0) {\n          increment = value << 0x1e;\n          boolVal = increment == 0;\n          difference = *config;\n          if (boolVal) {\n            increment = config[5];\n          }\n          *config = size;\n          if (!boolVal) {\n            increment = 0;\n          }\n          config[2] = increment;\n          for (difference = difference - size; 0 < difference; difference = difference - increment) {\n            increment = (*(code *)config[10])(data,config[8],size,difference,var1,var2);\n            if (increment < 1) {\n              flag = *(ushort *)(config + 3);\n              goto LAB_080052b2;\n            }\n            size = size + increment;\n          }\n        }\n      }\n      else if (((0 < config[1]) || (0 < config[0x10])) &&\n              (callback = (code *)config[0xb], callback != (code *)0x0)) {\n        temp = *data;\n        *data = 0;\n        if ((flag & 0x1000) == 0) {\n          size = (*callback)(data,config[8],value & 0x1000,1);\n          if ((size == -1) && (value = *data, value != 0)) {\n            if ((value != 0x1d) && (value != 0x16)) {\n              *(ushort *)(config + 3) = *(ushort *)(config + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x0800527c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n              result = (*jmpTable)();\n              return result;\n            }\n            *data = temp;\n            goto LAB_080051d6;\n          }\n        }\n        else {\n          size = config[0x15];\n        }\n        if (((int)((uint)*(ushort *)(config + 3) << 0x1d) < 0) &&\n           (size = size - config[1], config[0xd] != 0)) {\n          size = size - config[0x10];\n        }\n        size = (*(code *)config[0xb])(data,config[8],size,0);\n        flag = *(ushort *)(config + 3);\n        if ((size == -1) &&\n           ((0x1d < *data || (-1 < (int)((0x20400001U >> (*data & 0xff)) << 0x1f))))) {\nLAB_080052b2:\n          *(ushort *)(config + 3) = flag | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x080052bc. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          result = (*jmpTable)(0xffffffff);\n          return result;\n        }\n        config[1] = 0;\n        *config = config[4];\n        if (((int)((uint)flag << 0x13) < 0) && ((size != -1 || (*data == 0)))) {\n          config[0x15] = size;\n        }\n        ptr = (int *)config[0xd];\n        *data = temp;\n        if (ptr != (int *)0x0) {\n          if (ptr != config + 0x11) {\n            update_data_list_080048dc(data);\n          }\n          config[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08005252. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          result = (*jmpTable)();\n          return result;\n        }\n      }\nLAB_080051d6:\n                    /* WARNING: Could not recover jumptable at 0x080051d8. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      result = (*jmpTable)(0);\n      return result;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080052cc": "process_data_080052cc",
                "param_1": "data",
                "param_2": "config",
                "uVar1": "result",
                "iVar2": "size",
                "piVar3": "ptr",
                "uVar4": "value",
                "uVar5": "flag",
                "iVar6": "increment",
                "unaff_r4": "var1",
                "unaff_r5": "var2",
                "pcVar7": "callback",
                "iVar8": "difference",
                "uVar9": "temp",
                "UNRECOVERED_JUMPTABLE_00": "jmpTable",
                "bVar10": "boolVal"
            },
            "calling": [
                "FUN_08004a34"
            ],
            "called": [
                "FUN_080053a0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": [],
            "code_backup": "\nundefined4 FUN_080052cc(uint *param_1,int *param_2)\n\n{\n  undefined4 uVar1;\n  int iVar2;\n  int *piVar3;\n  uint uVar4;\n  ushort uVar5;\n  int iVar6;\n  undefined4 unaff_r4;\n  undefined4 unaff_r5;\n  code *pcVar7;\n  int iVar8;\n  uint uVar9;\n  code *UNRECOVERED_JUMPTABLE_00;\n  bool bVar10;\n  \n  if (param_2[4] != 0) {\n    if ((param_1 != (uint *)0x0) && (param_1[6] == 0)) {\n      FUNC_080053a0();\n    }\n    if (param_2 == &DAT_08005fc0) {\n      param_2 = (int *)param_1[1];\n    }\n    else if (param_2 == (int *)&DAT_08005fe0) {\n      param_2 = (int *)param_1[2];\n    }\n    else if (param_2 == (int *)&DAT_08005fa0) {\n      param_2 = (int *)param_1[3];\n    }\n    if (*(short *)(param_2 + 3) != 0) {\n      uVar5 = *(ushort *)(param_2 + 3);\n      uVar4 = (uint)uVar5;\n      if ((int)(uVar4 << 0x1c) < 0) {\n        iVar2 = param_2[4];\n        if (iVar2 != 0) {\n          iVar6 = uVar4 << 0x1e;\n          bVar10 = iVar6 == 0;\n          iVar8 = *param_2;\n          if (bVar10) {\n            iVar6 = param_2[5];\n          }\n          *param_2 = iVar2;\n          if (!bVar10) {\n            iVar6 = 0;\n          }\n          param_2[2] = iVar6;\n          for (iVar8 = iVar8 - iVar2; 0 < iVar8; iVar8 = iVar8 - iVar6) {\n            iVar6 = (*(code *)param_2[10])(param_1,param_2[8],iVar2,iVar8,unaff_r4,unaff_r5);\n            if (iVar6 < 1) {\n              uVar5 = *(ushort *)(param_2 + 3);\n              goto LAB_080052b2;\n            }\n            iVar2 = iVar2 + iVar6;\n          }\n        }\n      }\n      else if (((0 < param_2[1]) || (0 < param_2[0x10])) &&\n              (pcVar7 = (code *)param_2[0xb], pcVar7 != (code *)0x0)) {\n        uVar9 = *param_1;\n        *param_1 = 0;\n        if ((uVar5 & 0x1000) == 0) {\n          iVar2 = (*pcVar7)(param_1,param_2[8],uVar4 & 0x1000,1);\n          if ((iVar2 == -1) && (uVar4 = *param_1, uVar4 != 0)) {\n            if ((uVar4 != 0x1d) && (uVar4 != 0x16)) {\n              *(ushort *)(param_2 + 3) = *(ushort *)(param_2 + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x0800527c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n              uVar1 = (*UNRECOVERED_JUMPTABLE_00)();\n              return uVar1;\n            }\n            *param_1 = uVar9;\n            goto LAB_080051d6;\n          }\n        }\n        else {\n          iVar2 = param_2[0x15];\n        }\n        if (((int)((uint)*(ushort *)(param_2 + 3) << 0x1d) < 0) &&\n           (iVar2 = iVar2 - param_2[1], param_2[0xd] != 0)) {\n          iVar2 = iVar2 - param_2[0x10];\n        }\n        iVar2 = (*(code *)param_2[0xb])(param_1,param_2[8],iVar2,0);\n        uVar5 = *(ushort *)(param_2 + 3);\n        if ((iVar2 == -1) &&\n           ((0x1d < *param_1 || (-1 < (int)((0x20400001U >> (*param_1 & 0xff)) << 0x1f))))) {\nLAB_080052b2:\n          *(ushort *)(param_2 + 3) = uVar5 | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x080052bc. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          uVar1 = (*UNRECOVERED_JUMPTABLE_00)(0xffffffff);\n          return uVar1;\n        }\n        param_2[1] = 0;\n        *param_2 = param_2[4];\n        if (((int)((uint)uVar5 << 0x13) < 0) && ((iVar2 != -1 || (*param_1 == 0)))) {\n          param_2[0x15] = iVar2;\n        }\n        piVar3 = (int *)param_2[0xd];\n        *param_1 = uVar9;\n        if (piVar3 != (int *)0x0) {\n          if (piVar3 != param_2 + 0x11) {\n            update_data_list_080048dc(param_1);\n          }\n          param_2[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08005252. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          uVar1 = (*UNRECOVERED_JUMPTABLE_00)();\n          return uVar1;\n        }\n      }\nLAB_080051d6:\n                    /* WARNING: Could not recover jumptable at 0x080051d8. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      uVar1 = (*UNRECOVERED_JUMPTABLE_00)(0);\n      return uVar1;\n    }\n  }\n  return 0;\n}\n\n"
        },
        "FUN_0800532c": {
            "entrypoint": "0x0800532c",
            "current_name": "initialize_data_0800532c",
            "code": "\nvoid initializeData_0800532c(undefined4 *data,undefined2 value1,undefined2 value2)\n\n{\n  *data = 0;\n  data[1] = 0;\n  data[2] = 0;\n  *(undefined2 *)(data + 3) = value1;\n  data[0x19] = 0;\n  *(undefined2 *)((int)data + 0xe) = value2;\n  data[4] = 0;\n  data[5] = 0;\n  data[6] = 0;\n  memset_bytes_080048cc(data + 0x17,0,8);\n  data[9] = 0x8005609;\n  data[10] = 0x800562b;\n  data[0xb] = 0x8005663;\n  data[8] = data;\n  data[0xc] = &LAB_08005686_1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800532c": "initialize_data_0800532c",
                "param_1": "data",
                "param_2": "value1",
                "param_3": "value2"
            },
            "calling": [
                "FUN_080053a0"
            ],
            "called": [
                "FUN_080048cc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005374": {
            "entrypoint": "0x08005374",
            "current_name": "allocate_and_initialize_memory_08005374",
            "code": "\nundefined4 * allocateAndInitializeMemory_08005374(undefined4 ptrToData,int size)\n\n{\n  undefined4 *allocatedMemory;\n  int byteRange;\n  \n  byteRange = (size + -1) * 0x68;\n  allocatedMemory = (undefined4 *)allocate_and_initialize_memory_08004978(ptrToData,byteRange + 0x74);\n  if (allocatedMemory != (undefined4 *)0x0) {\n    *allocatedMemory = 0;\n    allocatedMemory[1] = size;\n    allocatedMemory[2] = allocatedMemory + 3;\n    memset_bytes_080048cc(allocatedMemory + 3,0,byteRange + 0x68);\n  }\n  return allocatedMemory;\n}\n\n",
            "renaming": {
                "FUN_08005374": "allocate_and_initialize_memory_08005374",
                "param_1": "ptrToData",
                "param_2": "size",
                "puVar1": "allocatedMemory",
                "iVar2": "byteRange"
            },
            "calling": [
                "FUN_08005400"
            ],
            "called": [
                "FUN_080048cc",
                "FUN_08004978"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080053a0": {
            "entrypoint": "0x080053a0",
            "current_name": "initialize_resources_080053a0",
            "code": "\nvoid initializeResources_080053a0(undefined4 *resourceArray)\n\n{\n  undefined4 tempVar;\n  undefined4 *pointerVar;\n  \n  if (resourceArray[6] == 0) {\n    resourceArray[0x12] = 0;\n    resourceArray[0x13] = 0;\n    resourceArray[0x14] = 0;\n    pointerVar = &DAT_200000a4;\n    resourceArray[10] = &LAB_08005320_1;\n    if (resourceArray == &DAT_200000a4) {\n      pointerVar = (undefined4 *)0x1;\n    }\n    if (resourceArray == &DAT_200000a4) {\n      resourceArray[6] = pointerVar;\n    }\n    tempVar = initializeResource();\n    resourceArray[1] = tempVar;\n    tempVar = initializeResource(resourceArray);\n    resourceArray[2] = tempVar;\n    tempVar = initializeResource(resourceArray);\n    resourceArray[3] = tempVar;\n    initializeData(resourceArray[1],4,0);\n    initializeData(resourceArray[2],9,1);\n    initializeData(resourceArray[3],0x12,2);\n    resourceArray[6] = 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080053a0": "initialize_resources_080053a0",
                "param_1": "resourceArray",
                "uVar1": "tempVar",
                "puVar2": "pointerVar",
                "initialize_resource_08005400": "initializeResource",
                "initialize_data_0800532c": "initializeData"
            },
            "calling": [
                "FUN_080050d0",
                "FUN_08004fdc",
                "FUN_08004a84",
                "FUN_080052cc",
                "FUN_08005400",
                "FUN_08004a34"
            ],
            "called": [
                "FUN_0800532c",
                "FUN_08005400"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005400": {
            "entrypoint": "0x08005400",
            "current_name": "initialize_resource_08005400",
            "code": "\nint * initialize_resource_08005400(undefined4 *error_code,undefined4 parameter_2,undefined4 parameter_3,undefined4 parameter_4)\n\n{\n  int *resource_ptr;\n  int *current_resource;\n  int **resource_list_ptr;\n  \n  if (DAT_200000bc == 0) {\n    initialize_resources_080053a0(&DAT_200000a4);\n  }\n  resource_list_ptr = (int **)&DAT_200000ec;\n  do {\n    current_resource = resource_list_ptr[2];\n    resource_ptr = resource_list_ptr[1];\n    while (resource_ptr = (int *)((int)resource_ptr + -1), -1 < (int)resource_ptr) {\n      if (*(short *)(current_resource + 3) == 0) {\n        *(undefined2 *)((int)current_resource + 0xe) = 0xffff;\n        *(undefined2 *)(current_resource + 3) = 1;\n        current_resource[0x19] = 0;\n        *current_resource = 0;\n        current_resource[2] = 0;\n        current_resource[1] = 0;\n        current_resource[4] = 0;\n        current_resource[5] = 0;\n        current_resource[6] = 0;\n        memset_bytes_080048cc(current_resource + 0x17,0,8,1,parameter_4);\n        current_resource[0xd] = 0;\n        current_resource[0xe] = 0;\n        current_resource[0x12] = 0;\n        current_resource[0x13] = 0;\n        return current_resource;\n      }\n      current_resource = current_resource + 0x1a;\n    }\n    if (*resource_list_ptr == (int *)0x0) {\n      resource_ptr = (int *)allocate_and_initialize_memory_08005374(error_code,4);\n      *resource_list_ptr = resource_ptr;\n      if (resource_ptr == (int *)0x0) {\n        *error_code = 0xc;\n        return (int *)0x0;\n      }\n    }\n    resource_list_ptr = (int **)*resource_list_ptr;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08005400": "initialize_resource_08005400",
                "param_1": "error_code",
                "param_2": "parameter_2",
                "param_3": "parameter_3",
                "param_4": "parameter_4",
                "piVar1": "resource_ptr",
                "piVar2": "current_resource",
                "ppiVar3": "resource_list_ptr"
            },
            "calling": [
                "FUN_080053a0"
            ],
            "called": [
                "FUN_080053a0",
                "FUN_080048cc",
                "FUN_08005374"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": [],
            "code_backup": "\nint * FUN_08005400(undefined4 *param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int *piVar1;\n  int *piVar2;\n  int **ppiVar3;\n  \n  if (DAT_200000bc == 0) {\n    FUNC_080053a0(&DAT_200000a4);\n  }\n  ppiVar3 = (int **)&DAT_200000ec;\n  do {\n    piVar2 = ppiVar3[2];\n    piVar1 = ppiVar3[1];\n    while (piVar1 = (int *)((int)piVar1 + -1), -1 < (int)piVar1) {\n      if (*(short *)(piVar2 + 3) == 0) {\n        *(undefined2 *)((int)piVar2 + 0xe) = 0xffff;\n        *(undefined2 *)(piVar2 + 3) = 1;\n        piVar2[0x19] = 0;\n        *piVar2 = 0;\n        piVar2[2] = 0;\n        piVar2[1] = 0;\n        piVar2[4] = 0;\n        piVar2[5] = 0;\n        piVar2[6] = 0;\n        memset_bytes_080048cc(piVar2 + 0x17,0,8,1,param_4);\n        piVar2[0xd] = 0;\n        piVar2[0xe] = 0;\n        piVar2[0x12] = 0;\n        piVar2[0x13] = 0;\n        return piVar2;\n      }\n      piVar2 = piVar2 + 0x1a;\n    }\n    if (*ppiVar3 == (int *)0x0) {\n      piVar1 = (int *)allocate_and_initialize_memory_08005374(param_1,4);\n      *ppiVar3 = piVar1;\n      if (piVar1 == (int *)0x0) {\n        *param_1 = 0xc;\n        return (int *)0x0;\n      }\n    }\n    ppiVar3 = (int **)*ppiVar3;\n  } while( true );\n}\n\n"
        },
        "FUN_080054b4": {
            "entrypoint": "0x080054b4",
            "current_name": "initialize_memory_and_set_flag_080054b4",
            "code": "\nundefined4 initializeMemoryAndSetFlag_080054b4(undefined4 param1,int param2,undefined4 *result,uint *flag)\n\n{\n  int returnValue;\n  undefined4 flagValue;\n  undefined stackBuffer [4];\n  uint localVariable;\n  \n  if ((*(short *)(param2 + 0xe) < 0) ||\n     (returnValue = initialize_and_check_memory_080056d4(param1,(int)*(short *)(param2 + 0xe),stackBuffer), returnValue < 0)) {\n    *flag = 0;\n    if ((int)((uint)*(ushort *)(param2 + 0xc) << 0x18) < 0) {\n      flagValue = 0x40;\n      goto LAB_080054f4;\n    }\n  }\n  else {\n    *flag = (uint)((localVariable & 0xf000) == 0x2000);\n  }\n  flagValue = 0x400;\nLAB_080054f4:\n  *result = flagValue;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080054b4": "initialize_memory_and_set_flag_080054b4",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "result",
                "param_4": "flag",
                "iVar1": "returnValue",
                "uVar2": "flagValue",
                "auStack_4c": "stackBuffer",
                "local_48": "localVariable"
            },
            "calling": [
                "FUN_080054fc"
            ],
            "called": [
                "FUN_080056d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080054fc": {
            "entrypoint": "0x080054fc",
            "current_name": "initialize_application_080054fc",
            "code": "\nvoid initializeApplication_080054fc(int applicationPtr,int *infoPtr)\n\n{\n  ushort flag;\n  int memoryPtr;\n  int localValue1;\n  int *localValue2;\n  \n  if (-1 < (int)((uint)*(ushort *)(infoPtr + 3) << 0x1e)) {\n    localValue1 = applicationPtr;\n    localValue2 = infoPtr;\n    flag = initialize_memory_and_set_flag_080054b4(applicationPtr,infoPtr,&localValue1,&localValue2);\n    memoryPtr = allocate_and_initialize_memory_08004978(applicationPtr,localValue1);\n    if (memoryPtr != 0) {\n      *(undefined **)(applicationPtr + 0x28) = &LAB_08005320_1;\n      *infoPtr = memoryPtr;\n      *(ushort *)(infoPtr + 3) = *(ushort *)(infoPtr + 3) | 0x80;\n      infoPtr[5] = localValue1;\n      infoPtr[4] = memoryPtr;\n      if ((localValue2 != (int *)0x0) &&\n         (memoryPtr = initialize_and_check_application_080056f8(applicationPtr,(int)*(short *)((int)infoPtr + 0xe)), memoryPtr != 0)) {\n        *(ushort *)(infoPtr + 3) = *(ushort *)(infoPtr + 3) & 0xfffc | 1;\n      }\n      *(ushort *)(infoPtr + 3) = flag | *(ushort *)(infoPtr + 3);\n      return;\n    }\n    if ((int)(short)*(ushort *)(infoPtr + 3) << 0x16 < 0) {\n      return;\n    }\n    *(ushort *)(infoPtr + 3) = *(ushort *)(infoPtr + 3) & 0xfffc | 2;\n  }\n  *infoPtr = (int)infoPtr + 0x47;\n  infoPtr[4] = (int)infoPtr + 0x47;\n  infoPtr[5] = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080054fc": "initialize_application_080054fc",
                "param_1": "applicationPtr",
                "param_2": "infoPtr",
                "uVar1": "flag",
                "iVar2": "memoryPtr",
                "local_18": "localValue1",
                "local_14": "localValue2"
            },
            "calling": [
                "FUN_080050d0"
            ],
            "called": [
                "FUN_080056f8",
                "FUN_080054b4",
                "FUN_08004978"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800557c": {
            "entrypoint": "0x0800557c",
            "current_name": "FUNC_0800557c",
            "code": "\nvoid FUNC_0800557c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800557c": "FUNC_0800557c"
            },
            "calling": [
                "FUN_080048dc",
                "FUN_08004978"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800557e": {
            "entrypoint": "0x0800557e",
            "current_name": "FUNC_0800557e",
            "code": "\nvoid FUNC_0800557e(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800557e": "FUNC_0800557e"
            },
            "calling": [
                "FUN_080048dc",
                "FUN_08004978"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080055d0": {
            "entrypoint": "0x080055d0",
            "current_name": "execute_function_080055d0",
            "code": "\nint execute_function_080055d0(uint input)\n\n{\n  int *func_array;\n  undefined4 result;\n  int function_index;\n  code *function_ptr;\n  undefined4 var1;\n  undefined4 var2;\n  undefined4 return_addr;\n  undefined4 *func_array_ptr;\n  \n  func_array = DAT_200000a0;\n  func_array_ptr = &DAT_200000a0;\n  if (0x1f < input) {\n    *DAT_200000a0 = 0x16;\n    return -1;\n  }\n  function_index = DAT_200000a0[0x11];\n  if ((function_index != 0) && (function_ptr = *(code **)(function_index + input * 4), function_ptr != (code *)0x0)) {\n    if (function_ptr != (code *)0x1) {\n      if (function_ptr == (code *)0xffffffff) {\n        *DAT_200000a0 = 0x16;\n        return 1;\n      }\n      *(undefined4 *)(function_index + input * 4) = 0;\n      (*function_ptr)(input);\n    }\n    return 0;\n  }\n  result = thunk_initialize_program_0800410c(DAT_200000a0);\n  DAT_20000674 = 0;\n  function_index = initialize_value_080040fc(result,input,input,0,func_array_ptr,var1,var2,return_addr);\n  if ((function_index == -1) && (DAT_20000674 != 0)) {\n    *func_array = DAT_20000674;\n  }\n  return function_index;\n}\n\n",
            "renaming": {
                "FUN_080055d0": "execute_function_080055d0",
                "param_1": "input",
                "piVar1": "func_array",
                "uVar2": "result",
                "iVar3": "function_index",
                "pcVar4": "function_ptr",
                "unaff_r4": "var1",
                "unaff_r5": "var2",
                "in_lr": "return_addr",
                "puVar5": "func_array_ptr"
            },
            "calling": [
                "FUN_080051ac"
            ],
            "called": [
                "thunk_FUN_0800410c",
                "FUN_080040fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_0800410c": {
            "entrypoint": "0x08005604",
            "current_name": "get_boolean_value_thunk_0800410c",
            "code": "\nundefined4 get_boolean_value_thunk_0800410c(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "thunk_FUN_0800410c": "get_boolean_value_thunk_0800410c"
            },
            "calling": [
                "FUN_080055d0"
            ],
            "called": [
                "FUN_0800410c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005608": {
            "entrypoint": "0x08005608",
            "current_name": "update_application_data_08005608",
            "code": "\nvoid updateApplicationData_08005608(undefined4 applicationData,int binaryData)\n\n{\n  int result;\n  uint updatedValue;\n  bool isValid;\n  \n  result = initialize_and_check_application_0800573c(applicationData,(int)*(short *)(binaryData + 0xe));\n  isValid = -1 < result;\n  if (isValid) {\n    updatedValue = *(int *)(binaryData + 0x54) + result;\n  }\n  else {\n    updatedValue = *(ushort *)(binaryData + 0xc) & 0xffffefff;\n  }\n  if (isValid) {\n    *(uint *)(binaryData + 0x54) = updatedValue;\n  }\n  if (!isValid) {\n    *(short *)(binaryData + 0xc) = (short)updatedValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005608": "update_application_data_08005608",
                "param_1": "applicationData",
                "param_2": "binaryData",
                "iVar1": "result",
                "uVar2": "updatedValue",
                "bVar3": "isValid"
            },
            "calling": [],
            "called": [
                "FUN_0800573c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800562a": {
            "entrypoint": "0x0800562a",
            "current_name": "process_data_0800562a",
            "code": "\nvoid processData_0800562a(int *output,int input,undefined4 paramA,undefined4 paramB)\n\n{\n  int result;\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 in_lr;\n  \n  if ((int)((uint)*(ushort *)(input + 0xc) << 0x17) < 0) {\n    initialize_and_check_08005718(output,(int)*(short *)(input + 0xe),0,2);\n  }\n  *(ushort *)(input + 0xc) = *(ushort *)(input + 0xc) & 0xefff;\n  DAT_20000674 = 0;\n  result = process_and_return_data_080040ec((int)*(short *)(input + 0xe),paramA,paramB,paramB,paramB,temp1,\n                       temp2,in_lr);\n  if ((result == -1) && (DAT_20000674 != 0)) {\n    *output = DAT_20000674;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800562a": "process_data_0800562a",
                "param_1": "output",
                "param_2": "input",
                "param_3": "paramA",
                "param_4": "paramB",
                "iVar1": "result",
                "unaff_r4": "temp1",
                "unaff_r5": "temp2"
            },
            "calling": [],
            "called": [
                "FUN_080040ec",
                "FUN_08005718"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005662": {
            "entrypoint": "0x08005662",
            "current_name": "initialize_and_update_status_08005662",
            "code": "\nvoid initialize_and_update_status_08005662(undefined4 input_param,int data_ptr)\n\n{\n  int result;\n  ushort updated_status;\n  bool is_error;\n  \n  result = initialize_and_check_08005718(input_param,(int)*(short *)(data_ptr + 0xe));\n  is_error = result == -1;\n  if (is_error) {\n    updated_status = *(ushort *)(data_ptr + 0xc) & 0xefff;\n  }\n  else {\n    *(int *)(data_ptr + 0x54) = result;\n    updated_status = *(ushort *)(data_ptr + 0xc) | 0x1000;\n  }\n  if (is_error) {\n    *(ushort *)(data_ptr + 0xc) = updated_status;\n  }\n  if (!is_error) {\n    *(ushort *)(data_ptr + 0xc) = updated_status;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005662": "initialize_and_update_status_08005662",
                "param_1": "input_param",
                "param_2": "data_ptr",
                "iVar1": "result",
                "uVar2": "updated_status",
                "bVar3": "is_error"
            },
            "calling": [],
            "called": [
                "FUN_08005718"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080056d4": {
            "entrypoint": "0x080056d4",
            "current_name": "initialize_and_check_memory_080056d4",
            "code": "\nvoid initializeAndCheckMemory_080056d4(int *resultPtr,undefined4 param1,undefined4 param2,undefined4 param3)\n\n{\n  int initResult;\n  \n  DAT_20000674 = 0;\n  initResult = initialize_memory_080040d6(param1,param2,param2,0,param3);\n  if ((initResult == -1) && (DAT_20000674 != 0)) {\n    *resultPtr = DAT_20000674;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080056d4": "initialize_and_check_memory_080056d4",
                "param_1": "resultPtr",
                "param_2": "param1",
                "param_3": "param2",
                "param_4": "param3",
                "iVar1": "initResult"
            },
            "calling": [
                "FUN_080054b4"
            ],
            "called": [
                "FUN_080040d6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080056f8": {
            "entrypoint": "0x080056f8",
            "current_name": "initialize_and_check_application_080056f8",
            "code": "\nvoid initialize_and_check_application_080056f8(int *output_result,undefined4 input_value)\n\n{\n  int initialization_result;\n  \n  DAT_20000674 = 0;\n  initialization_result = initialize_application_080040e0(input_value);\n  if ((initialization_result == -1) && (DAT_20000674 != 0)) {\n    *output_result = DAT_20000674;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080056f8": "initialize_and_check_application_080056f8",
                "param_1": "output_result",
                "param_2": "input_value",
                "iVar1": "initialization_result"
            },
            "calling": [
                "FUN_080054fc"
            ],
            "called": [
                "FUN_080040e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005718": {
            "entrypoint": "0x08005718",
            "current_name": "initialize_and_check_08005718",
            "code": "\nvoid initialize_and_check_08005718(int *output_value,undefined4 input_param_1,undefined4 input_param_2,undefined4 input_param_3)\n\n{\n  int result;\n  \n  DAT_20000674 = 0;\n  result = initialize_zero_080040e4(input_param_1,input_param_2,input_param_3,input_param_3,input_param_3);\n  if ((result == -1) && (DAT_20000674 != 0)) {\n    *output_value = DAT_20000674;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005718": "initialize_and_check_08005718",
                "param_1": "output_value",
                "param_2": "input_param_1",
                "param_3": "input_param_2",
                "param_4": "input_param_3",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800562a",
                "FUN_08005662"
            ],
            "called": [
                "FUN_080040e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800573c": {
            "entrypoint": "0x0800573c",
            "current_name": "initialize_and_check_application_0800573c",
            "code": "\nvoid initializeAndCheckApplication_0800573c(int *output,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int returnValue;\n  \n  DAT_20000674 = 0;\n  returnValue = initialize_application_080040e8(param2,param3,param4,param4,param4);\n  if ((returnValue == -1) && (DAT_20000674 != 0)) {\n    *output = DAT_20000674;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800573c": "initialize_and_check_application_0800573c",
                "param_1": "output",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08005608"
            ],
            "called": [
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005760": {
            "entrypoint": "0x08005760",
            "current_name": "process_data_08005760",
            "code": "\nvoid process_data_08005760(void)\n\n{\n  code *jump_table;\n  \n  jump_table = process_data_08005760;\n  execute_and_process_data_08005760_080051ac();\n  if (-1 < DAT_200005fc << 0x1f) {\n    DAT_200005fc = 1;\n  }\n  if (-1 < DAT_200005f8 << 0x1f) {\n    DAT_200005f8 = 1;\n  }\n  if (-1 < DAT_200005f4 << 0x1f) {\n    DAT_200005f4 = 1;\n  }\n  if (-1 < DAT_200005f0 << 0x1f) {\n    DAT_200005f0 = 1;\n  }\n  if (-1 < DAT_200005ec << 0x1f) {\n    DAT_200005ec = 1;\n  }\n  if (-1 < DAT_200005e8 << 0x1f) {\n    DAT_200005e8 = 1;\n  }\n  if (-1 < DAT_200005e4 << 0x1f) {\n    DAT_200005e4 = 1;\n  }\n  if (-1 < DAT_200005e0 << 0x1f) {\n    DAT_200005e0 = 1;\n  }\n  if (-1 < DAT_200005dc << 0x1f) {\n    DAT_200005dc = 1;\n  }\n  if (-1 < DAT_200005d8 << 0x1f) {\n    DAT_200005d8 = 1;\n  }\n  if (-1 < DAT_200005d4 << 0x1f) {\n    DAT_200005d4 = 1;\n  }\n  if (-1 < DAT_200005d0 << 0x1f) {\n    DAT_200005d0 = 1;\n  }\n                    /* WARNING: Could not recover jumptable at 0x080057f8. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_table)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005760": "process_data_08005760",
                "UNRECOVERED_JUMPTABLE": "jump_table"
            },
            "calling": [
                "FUN_080047c0"
            ],
            "called": [
                "FUN_080051ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080059f8": {
            "entrypoint": "0x080059f8",
            "current_name": "FUNC_080059f8",
            "code": "\nvoid FUNC_080059f8(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080059f8": "FUNC_080059f8"
            },
            "calling": [
                "FUN_080001ac",
                "FUN_08004884"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005a04": {
            "entrypoint": "0x08005a04",
            "current_name": "FUNC_08005a04",
            "code": "\nvoid FUNC_08005a04(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a04": "FUNC_08005a04"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        }
    },
    "used_tokens": 119073,
    "layers": [
        [
            "FUN_080001ac",
            "FUN_08000230",
            "FUN_08000300",
            "FUN_080005e0",
            "FUN_0800066c",
            "FUN_08000728",
            "FUN_080008cc",
            "FUN_08000e18",
            "FUN_08000e30",
            "FUN_08000e3c",
            "FUN_08000e60",
            "FUN_08000ec4",
            "FUN_08000ee0",
            "FUN_08000f0c",
            "FUN_08000f2c",
            "FUN_08000f4e",
            "FUN_08000f72",
            "FUN_08000f8c",
            "FUN_08000fb4",
            "FUN_08001198",
            "FUN_080011c0",
            "FUN_0800124a",
            "FUN_08001256",
            "FUN_08001420",
            "FUN_08001440",
            "FUN_08001460",
            "FUN_080014ec",
            "FUN_08001578",
            "FUN_080015bc",
            "FUN_0800160e",
            "FUN_0800171a",
            "FUN_08001864",
            "FUN_08001904",
            "FUN_080019a0",
            "FUN_080025e0",
            "FUN_08002848",
            "FUN_080028d4",
            "FUN_08002940",
            "FUN_0800295c",
            "FUN_08002eb2",
            "FUN_08002efa",
            "FUN_0800312c",
            "FUN_08003138",
            "FUN_0800314e",
            "FUN_0800316c",
            "FUN_0800318c",
            "FUN_080031fc",
            "FUN_080033c8",
            "FUN_080034da",
            "FUN_08003506",
            "FUN_0800352e",
            "FUN_0800355e",
            "FUN_08003582",
            "FUN_08003594",
            "FUN_080035bc",
            "FUN_080035fc",
            "FUN_08003750",
            "FUN_0800387c",
            "FUN_08003f00",
            "FUN_08004094",
            "FUN_080040d0",
            "FUN_080040d6",
            "FUN_080040e0",
            "FUN_080040e4",
            "FUN_080040e8",
            "FUN_080040f8",
            "FUN_080040fc",
            "FUN_0800410c",
            "FUN_08004240",
            "FUN_08004364",
            "FUN_08004444",
            "FUN_08004460",
            "FUN_08004544",
            "FUN_08004640",
            "FUN_08004678",
            "FUN_08004844",
            "FUN_08004884",
            "FUN_080048cc",
            "FUN_080048dc",
            "FUN_08004cb0",
            "thunk_FUN_0800410c"
        ],
        [
            "FUN_080002d0",
            "FUN_080005e4",
            "FUN_08000682",
            "FUN_080007f0",
            "FUN_08000d98",
            "FUN_08000f56",
            "FUN_08001f9c",
            "FUN_0800201c",
            "FUN_080025ec",
            "FUN_0800260c",
            "FUN_0800262c",
            "FUN_08002864",
            "FUN_080028f0",
            "FUN_08002d0c",
            "FUN_0800340c",
            "FUN_0800346c",
            "FUN_08003476",
            "FUN_08003486",
            "FUN_080034b6",
            "FUN_080034f4",
            "FUN_0800351e",
            "FUN_0800354a",
            "FUN_08003754",
            "FUN_0800376e",
            "FUN_08003880",
            "FUN_080038d0",
            "FUN_08003900",
            "FUN_08003dd0",
            "FUN_08003df4",
            "FUN_08003eac",
            "FUN_08003f24",
            "FUN_08003f48",
            "FUN_08004560",
            "FUN_080047fe",
            "FUN_08004d9c",
            "FUN_0800500c",
            "FUN_0800532c",
            "FUN_080055d0",
            "FUN_080056d4",
            "FUN_080056f8",
            "FUN_08005718",
            "FUN_0800573c"
        ],
        [
            "FUN_08000690",
            "FUN_08000de4",
            "FUN_0800165a",
            "FUN_08001684",
            "FUN_08001ab0",
            "FUN_080023b4",
            "FUN_0800268e",
            "FUN_080026ce",
            "FUN_080029c8",
            "FUN_08002dd0",
            "FUN_08002f4c",
            "FUN_08002f66",
            "FUN_08003380",
            "FUN_0800339c",
            "FUN_08003e18",
            "FUN_08003e54",
            "FUN_080041bc",
            "FUN_08004204",
            "FUN_080042e8",
            "FUN_0800447c",
            "FUN_080046b4",
            "FUN_08004978",
            "FUN_080051ac",
            "FUN_080054b4",
            "FUN_08005608",
            "FUN_08005662"
        ],
        [
            "FUN_080006b4",
            "FUN_0800076c",
            "FUN_08001bfc",
            "FUN_08001e68",
            "FUN_08002488",
            "FUN_08002d72",
            "FUN_08002ffc",
            "FUN_080033d8",
            "FUN_08003414",
            "FUN_0800377c",
            "FUN_080042ac",
            "FUN_080044d8",
            "FUN_08005374",
            "FUN_080054fc"
        ],
        [
            "FUN_080008e2",
            "FUN_08000998",
            "FUN_08000a00",
            "FUN_08000a4e",
            "FUN_08000a7a",
            "FUN_08000b04",
            "FUN_08000c8c",
            "FUN_08001d00",
            "FUN_08004110"
        ],
        [
            "FUN_08000b54",
            "FUN_080034ce"
        ],
        [
            "FUN_08000c64",
            "FUN_08000d8e"
        ],
        [
            "FUN_08004648"
        ],
        [
            "FUN_08005760"
        ],
        [
            "FUN_080047c0"
        ],
        [
            "FUN_080047d0"
        ],
        [
            "FUN_080011a4"
        ],
        [
            "FUN_080050d0",
            "FUN_080052cc",
            "FUN_08005400"
        ],
        [
            "FUN_080053a0"
        ],
        [
            "FUN_08004a34"
        ],
        [
            "FUN_08004a60"
        ],
        [
            "FUN_08004a84"
        ],
        [
            "FUN_08004860",
            "FUN_08004fdc"
        ],
        [
            "FUN_08003978",
            "FUN_08004808"
        ],
        [
            "FUN_08003cc8",
            "FUN_08004388"
        ],
        [
            "FUN_08000600",
            "FUN_08003d18"
        ],
        [
            "FUN_08000c4c",
            "FUN_080040ec"
        ],
        [
            "FUN_08004658",
            "FUN_0800562a"
        ]
    ],
    "locked_functions": []
}