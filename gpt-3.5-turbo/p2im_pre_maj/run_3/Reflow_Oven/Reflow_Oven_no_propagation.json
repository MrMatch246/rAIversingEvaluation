{
    "functions": {
        "FUN_0800010c": {
            "entrypoint": "0x0800010c",
            "current_name": "set_flag_if_not_set_0800010c",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08000118) */\n\nundefined4 setFlagIfNotSet_0800010c(undefined4 input)\n\n{\n  if ((char)DAT_20000160 == '\\0') {\n    DAT_20000160._0_1_ = '\\x01';\n  }\n  return input;\n}\n\n",
            "renaming": {
                "FUN_0800010c": "set_flag_if_not_set_0800010c",
                "param_1": "input"
            },
            "calling": [],
            "called": [
                "FUN_08007328"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000178": {
            "entrypoint": "0x08000178",
            "current_name": "get_last_character_position_08000178",
            "code": "\nchar * getLastCharacterPosition_08000178(char *string)\n\n{\n  char character;\n  char *nextCharacter;\n  char *currentCharacter;\n  \n  currentCharacter = string;\n  do {\n    nextCharacter = currentCharacter + 1;\n    character = *currentCharacter;\n    currentCharacter = nextCharacter;\n  } while (character != '\\0');\n  return nextCharacter + (-1 - (int)string);\n}\n\n",
            "renaming": {
                "FUN_08000178": "get_last_character_position_08000178",
                "param_1": "string",
                "pcVar2": "nextCharacter",
                "pcVar3": "currentCharacter",
                "cVar1": "character"
            },
            "calling": [
                "FUN_08005ce8",
                "FUN_08005c96"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000190": {
            "entrypoint": "0x08000190",
            "current_name": "calculate_bitwise_operation_08000190",
            "code": "\nulonglong calculate_bitwise_operation_08000190(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int bit_shift1;\n  byte carry_bit;\n  uint result1;\n  uint result2;\n  uint result3;\n  uint temp1;\n  uint temp2;\n  int bit_shift2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  bool is_true1;\n  bool is_true2;\n  bool is_true3;\n  \n  temp1 = input4 ^ 0x80000000;\n  temp3 = input2 << 1;\n  input4 = input4 << 1;\n  is_true1 = ((input2 ^ temp1) & 0x7fffffff) == 0;\n  is_true2 = is_true1 && input1 == input3;\n  if (!is_true1 || input1 != input3) {\n    is_true2 = (temp3 | input1) == 0;\n  }\n  if (!is_true2) {\n    is_true2 = (input4 | input3) == 0;\n  }\n  bit_shift2 = (int)temp3 >> 0x15;\n  if (!is_true2) {\n    is_true2 = bit_shift2 == -1;\n  }\n  bit_shift1 = (int)input4 >> 0x15;\n  if (!is_true2) {\n    is_true2 = bit_shift1 == -1;\n  }\n  if (is_true2) {\n    if (bit_shift2 == -1 || bit_shift1 == -1) {\n      temp3 = temp1;\n      temp5 = input3;\n      if (bit_shift2 == -1) {\n        temp3 = input2;\n        temp5 = input1;\n      }\n      if (bit_shift2 != -1 || bit_shift1 != -1) {\n        input3 = temp5;\n        temp1 = temp3;\n      }\n      is_true2 = (temp5 | temp3 << 0xc) == 0;\n      if (is_true2) {\n        is_true2 = (input3 | temp1 << 0xc) == 0;\n      }\n      if (is_true2) {\n        is_true2 = temp3 == temp1;\n      }\n      if (!is_true2) {\n        temp3 = temp3 | 0x80000;\n      }\n      return CONCAT44(temp3,temp5);\n    }\n    if (((input2 ^ temp1) & 0x7fffffff) != 0 || input1 != input3) {\n      if ((temp3 | input1) == 0) {\n        input1 = input3;\n        input2 = temp1;\n      }\n      return CONCAT44(input2,input1);\n    }\n    if (input2 != temp1) {\n      return 0;\n    }\n    if (temp3 >> 0x15 == 0) {\n      is_true2 = (input1 & 0x80000000) != 0;\n      temp1 = input2 * 2 + (uint)is_true2;\n      if (CARRY4(input2,input2) || CARRY4(input2 * 2,(uint)is_true2)) {\n        temp1 = temp1 | 0x80000000;\n      }\n      return CONCAT44(temp1,input1 << 1);\n    }\n    if (temp3 < 0xffc00000) {\n      return CONCAT44(input2 + 0x100000,input1);\n    }\n    input2 = input2 & 0x80000000;\nLAB_080003d4:\n    return (ulonglong)(input2 | 0x7ff00000) << 0x20;\n  }\n  temp3 = temp3 >> 0x15;\n  input4 = input4 >> 0x15;\n  temp5 = input4 - temp3;\n  is_true2 = temp5 != 0;\n  if (input4 < temp3) {\n    temp5 = -temp5;\n  }\n  temp4 = input1;\n  temp2 = input2;\n  if (is_true2 && temp3 <= input4) {\n    temp3 = temp3 + temp5;\n    temp4 = input3;\n    temp2 = temp1;\n    input3 = input1;\n    temp1 = input2;\n  }\n  if (0x36 < temp5) {\n    return CONCAT44(temp2,temp4);\n  }\n  result2 = temp2 & 0xfffff | 0x100000;\n  if ((temp2 & 0x80000000) != 0) {\n    is_true2 = temp4 != 0;\n    temp4 = -temp4;\n    result2 = -result2 - (uint)is_true2;\n  }\n  temp2 = temp1 & 0xfffff | 0x100000;\n  if ((temp1 & 0x80000000) != 0) {\n    is_true2 = input3 != 0;\n    input3 = -input3;\n    temp2 = -temp2 - (uint)is_true2;\n  }\n  if (temp3 == temp5) {\n    temp2 = temp2 ^ 0x100000;\n    if (temp3 == 0) {\n      result2 = result2 ^ 0x100000;\n      temp3 = 1;\n    }\n    else {\n      temp5 = temp5 - 1;\n    }\n  }\n  temp1 = -temp5 + 0x20;\n  if ((int)temp5 < 0x21) {\n    temp6 = input3 << (temp1 & 0xff);\n    input3 = input3 >> (temp5 & 0xff);\n    result1 = temp4 + input3;\n    result3 = temp2 << (temp1 & 0xff);\n    temp1 = result1 + result3;\n    result2 = result2 + CARRY4(temp4,input3) + ((int)temp2 >> (temp5 & 0xff)) +\n            (uint)CARRY4(result1,result3);\n  }\n  else {\n    temp6 = temp2 << (-temp5 + 0x40 & 0xff);\n    if (input3 != 0) {\n      temp6 = temp6 | 2;\n    }\n    temp2 = (int)temp2 >> (temp5 - 0x20 & 0xff);\n    temp1 = temp4 + temp2;\n    result2 = result2 + ((int)temp2 >> 0x1f) + (uint)CARRY4(temp4,temp2);\n  }\n  input2 = result2 & 0x80000000;\n  temp5 = result2;\n  if ((int)result2 < 0) {\n    is_true2 = temp6 == 0;\n    temp6 = -temp6;\n    temp5 = -temp1;\n    temp1 = -(uint)!is_true2 - temp1;\n    temp5 = -(uint)(is_true2 <= temp5) - result2;\n  }\n  if (0xfffff < temp5) {\n    temp4 = temp3 - 1;\n    if (0x1fffff < temp5) {\n      temp4 = temp5 & 1;\n      temp5 = temp5 >> 1;\n      carry_bit = (byte)temp1;\n      temp1 = (uint)(temp4 != 0) << 0x1f | temp1 >> 1;\n      temp6 = (uint)(carry_bit & 1) << 0x1f | temp6 >> 1;\n      temp4 = temp3;\n      if (0xffbfffff < temp3 * 0x200000) goto LAB_080003d4;\n    }\nLAB_080002a0:\n    is_true2 = 0x7fffffff < temp6;\n    if (temp6 == 0x80000000) {\n      is_true2 = (temp1 & 1) != 0;\n    }\n    return CONCAT44(temp5 + temp4 * 0x100000 + (uint)CARRY4(temp1,(uint)is_true2) | input2,\n                    temp1 + is_true2);\n  }\n  is_true1 = (temp6 & 0x80000000) != 0;\n  temp6 = temp6 << 1;\n  temp4 = temp1 * 2;\n  is_true2 = CARRY4(temp1,temp1);\n  temp1 = temp1 * 2 + (uint)is_true1;\n  temp5 = temp5 * 2 + (uint)(is_true2 || CARRY4(temp4,(uint)is_true1));\n  temp4 = temp3 - 2;\n  if ((temp5 & 0x100000) != 0) goto LAB_080002a0;\n  temp2 = temp1;\n  temp3 = temp5;\n  if (temp5 == 0) {\n    temp2 = 0;\n    temp3 = temp1;\n  }\n  bit_shift2 = LZCOUNT(temp3);\n  if (temp5 == 0) {\n    bit_shift2 = bit_shift2 + 0x20;\n  }\n  temp5 = bit_shift2 - 0xb;\n  is_true3 = SBORROW4(temp5,0x20);\n  temp1 = bit_shift2 - 0x2b;\n  is_true2 = (int)temp1 < 0;\n  is_true1 = temp1 == 0;\n  if ((int)temp5 < 0x20) {\n    is_true3 = SCARRY4(temp1,0xc);\n    bit_shift2 = bit_shift2 + -0x1f;\n    is_true2 = bit_shift2 < 0;\n    is_true1 = bit_shift2 == 0;\n    temp1 = temp5;\n    if (!is_true1 && is_true2 == is_true3) {\n      temp2 = temp3 << (temp5 & 0xff);\n      temp3 = temp3 >> (0xcU - bit_shift2 & 0xff);\n      goto LAB_08000318;\n    }\n  }\n  if (is_true1 || is_true2 != is_true3) {\n    temp6 = 0x20 - temp1;\n  }\n  temp3 = temp3 << (temp1 & 0xff);\n  if (is_true1 || is_true2 != is_true3) {\n    temp3 = temp3 | temp2 >> (temp6 & 0xff);\n  }\n  if (is_true1 || is_true2 != is_true3) {\n    temp2 = temp2 << (temp1 & 0xff);\n  }\nLAB_08000318:\n  if ((int)temp5 <= (int)temp4) {\n    return CONCAT44(temp3 + (temp4 - temp5) * 0x100000 | input2,temp2);\n  }\n  temp1 = ~(temp4 - temp5);\n  if ((int)temp1 < 0x1f) {\n    bit_shift2 = temp1 - 0x13;\n    if (bit_shift2 != 0 && bit_shift2 < 0 == SCARRY4(temp1 - 0x1f,0xc)) {\n      return CONCAT44(result2,temp2 >> (0x20 - (0xcU - bit_shift2) & 0xff) | temp3 << (0xcU - bit_shift2 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    temp1 = temp1 + 1;\n    return CONCAT44(input2 | temp3 >> (temp1 & 0xff),\n                    temp2 >> (temp1 & 0xff) | temp3 << (0x20 - temp1 & 0xff));\n  }\n  return CONCAT44(result2,temp3 >> (temp1 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_08000190": "calculate_bitwise_operation_08000190",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "bit_shift1",
                "bVar2": "carry_bit",
                "uVar3": "result1",
                "uVar4": "result2",
                "uVar5": "result3",
                "uVar6": "temp1",
                "uVar7": "temp2",
                "iVar8": "bit_shift2",
                "uVar9": "temp3",
                "uVar10": "temp4",
                "uVar11": "temp5",
                "uVar12": "temp6",
                "bVar13": "is_true1",
                "bVar14": "is_true2",
                "bVar15": "is_true3"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08001814",
                "FUN_080016b4",
                "FUN_08001a66"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000194": {
            "entrypoint": "0x08000194",
            "current_name": "calculate_double_addition_08000194",
            "code": "\nulonglong calculate_double_addition_08000194(uint value_1,uint value_2,uint value_3,uint value_4)\n\n{\n  int var_1;\n  byte var_2;\n  uint var_3;\n  uint var_4;\n  uint var_5;\n  int var_6;\n  uint var_7;\n  uint var_8;\n  uint var_9;\n  uint var_10;\n  uint var_11;\n  uint var_12;\n  bool var_13;\n  bool var_14;\n  bool var_15;\n  \n  var_7 = value_2 << 1;\n  var_9 = value_4 << 1;\n  var_13 = ((value_2 ^ value_4) & 0x7fffffff) == 0;\n  var_14 = var_13 && value_1 == value_3;\n  if (!var_13 || value_1 != value_3) {\n    var_14 = (var_7 | value_1) == 0;\n  }\n  if (!var_14) {\n    var_14 = (var_9 | value_3) == 0;\n  }\n  var_6 = (int)var_7 >> 0x15;\n  if (!var_14) {\n    var_14 = var_6 == -1;\n  }\n  var_1 = (int)var_9 >> 0x15;\n  if (!var_14) {\n    var_14 = var_1 == -1;\n  }\n  if (var_14) {\n    if (var_6 == -1 || var_1 == -1) {\n      var_9 = value_4;\n      var_7 = value_3;\n      if (var_6 == -1) {\n        var_9 = value_2;\n        var_7 = value_1;\n      }\n      if (var_6 != -1 || var_1 != -1) {\n        value_3 = var_7;\n        value_4 = var_9;\n      }\n      var_14 = (var_7 | var_9 << 0xc) == 0;\n      if (var_14) {\n        var_14 = (value_3 | value_4 << 0xc) == 0;\n      }\n      if (var_14) {\n        var_14 = var_9 == value_4;\n      }\n      if (!var_14) {\n        var_9 = var_9 | 0x80000;\n      }\n      return CONCAT44(var_9,var_7);\n    }\n    if (((value_2 ^ value_4) & 0x7fffffff) != 0 || value_1 != value_3) {\n      if ((var_7 | value_1) == 0) {\n        value_1 = value_3;\n        value_2 = value_4;\n      }\n      return CONCAT44(value_2,value_1);\n    }\n    if (value_2 != value_4) {\n      return 0;\n    }\n    if (var_7 >> 0x15 == 0) {\n      var_14 = (value_1 & 0x80000000) != 0;\n      var_9 = value_2 * 2 + (uint)var_14;\n      if (CARRY4(value_2,value_2) || CARRY4(value_2 * 2,(uint)var_14)) {\n        var_9 = var_9 | 0x80000000;\n      }\n      return CONCAT44(var_9,value_1 << 1);\n    }\n    if (var_7 < 0xffc00000) {\n      return CONCAT44(value_2 + 0x100000,value_1);\n    }\n    value_2 = value_2 & 0x80000000;\nLAB_080003d4:\n    return (ulonglong)(value_2 | 0x7ff00000) << 0x20;\n  }\n  var_7 = var_7 >> 0x15;\n  var_9 = var_9 >> 0x15;\n  var_10 = var_9 - var_7;\n  var_14 = var_10 != 0;\n  if (var_9 < var_7) {\n    var_10 = -var_10;\n  }\n  var_8 = value_1;\n  var_5 = value_2;\n  if (var_14 && var_7 <= var_9) {\n    var_7 = var_7 + var_10;\n    var_8 = value_3;\n    var_5 = value_4;\n    value_3 = value_1;\n    value_4 = value_2;\n  }\n  if (0x36 < var_10) {\n    return CONCAT44(var_5,var_8);\n  }\n  var_9 = var_5 & 0xfffff | 0x100000;\n  if ((var_5 & 0x80000000) != 0) {\n    var_14 = var_8 != 0;\n    var_8 = -var_8;\n    var_9 = -var_9 - (uint)var_14;\n  }\n  var_5 = value_4 & 0xfffff | 0x100000;\n  if ((value_4 & 0x80000000) != 0) {\n    var_14 = value_3 != 0;\n    value_3 = -value_3;\n    var_5 = -var_5 - (uint)var_14;\n  }\n  if (var_7 == var_10) {\n    var_5 = var_5 ^ 0x100000;\n    if (var_7 == 0) {\n      var_9 = var_9 ^ 0x100000;\n      var_7 = 1;\n    }\n    else {\n      var_10 = var_10 - 1;\n    }\n  }\n  var_12 = -var_10 + 0x20;\n  if ((int)var_10 < 0x21) {\n    var_11 = value_3 << (var_12 & 0xff);\n    value_3 = value_3 >> (var_10 & 0xff);\n    var_3 = var_8 + value_3;\n    var_4 = var_5 << (var_12 & 0xff);\n    var_12 = var_3 + var_4;\n    var_9 = var_9 + CARRY4(var_8,value_3) + ((int)var_5 >> (var_10 & 0xff)) +\n            (uint)CARRY4(var_3,var_4);\n  }\n  else {\n    var_11 = var_5 << (-var_10 + 0x40 & 0xff);\n    if (value_3 != 0) {\n      var_11 = var_11 | 2;\n    }\n    var_5 = (int)var_5 >> (var_10 - 0x20 & 0xff);\n    var_12 = var_8 + var_5;\n    var_9 = var_9 + ((int)var_5 >> 0x1f) + (uint)CARRY4(var_8,var_5);\n  }\n  value_2 = var_9 & 0x80000000;\n  var_10 = var_9;\n  if ((int)var_9 < 0) {\n    var_14 = var_11 == 0;\n    var_11 = -var_11;\n    var_10 = -var_12;\n    var_12 = -(uint)!var_14 - var_12;\n    var_10 = -(uint)(var_14 <= var_10) - var_9;\n  }\n  if (0xfffff < var_10) {\n    var_8 = var_7 - 1;\n    if (0x1fffff < var_10) {\n      var_9 = var_10 & 1;\n      var_10 = var_10 >> 1;\n      var_2 = (byte)var_12;\n      var_12 = (uint)(var_9 != 0) << 0x1f | var_12 >> 1;\n      var_11 = (uint)(var_2 & 1) << 0x1f | var_11 >> 1;\n      var_8 = var_7;\n      if (0xffbfffff < var_7 * 0x200000) goto LAB_080003d4;\n    }\nLAB_080002a0:\n    var_14 = 0x7fffffff < var_11;\n    if (var_11 == 0x80000000) {\n      var_14 = (var_12 & 1) != 0;\n    }\n    return CONCAT44(var_10 + var_8 * 0x100000 + (uint)CARRY4(var_12,(uint)var_14) | value_2,\n                    var_12 + var_14);\n  }\n  var_13 = (var_11 & 0x80000000) != 0;\n  var_11 = var_11 << 1;\n  var_8 = var_12 * 2;\n  var_14 = CARRY4(var_12,var_12);\n  var_12 = var_12 * 2 + (uint)var_13;\n  var_10 = var_10 * 2 + (uint)(var_14 || CARRY4(var_8,(uint)var_13));\n  var_8 = var_7 - 2;\n  if ((var_10 & 0x100000) != 0) goto LAB_080002a0;\n  var_5 = var_12;\n  var_7 = var_10;\n  if (var_10 == 0) {\n    var_5 = 0;\n    var_7 = var_12;\n  }\n  var_6 = LZCOUNT(var_7);\n  if (var_10 == 0) {\n    var_6 = var_6 + 0x20;\n  }\n  var_12 = var_6 - 0xb;\n  var_15 = SBORROW4(var_12,0x20);\n  var_10 = var_6 - 0x2b;\n  var_14 = (int)var_10 < 0;\n  var_13 = var_10 == 0;\n  if ((int)var_12 < 0x20) {\n    var_15 = SCARRY4(var_10,0xc);\n    var_6 = var_6 + -0x1f;\n    var_14 = var_6 < 0;\n    var_13 = var_6 == 0;\n    var_10 = var_12;\n    if (!var_13 && var_14 == var_15) {\n      var_5 = var_7 << (var_12 & 0xff);\n      var_7 = var_7 >> (0xcU - var_6 & 0xff);\n      goto LAB_08000318;\n    }\n  }\n  if (var_13 || var_14 != var_15) {\n    var_11 = 0x20 - var_10;\n  }\n  var_7 = var_7 << (var_10 & 0xff);\n  if (var_13 || var_14 != var_15) {\n    var_7 = var_7 | var_5 >> (var_11 & 0xff);\n  }\n  if (var_13 || var_14 != var_15) {\n    var_5 = var_5 << (var_10 & 0xff);\n  }\nLAB_08000318:\n  if ((int)var_12 <= (int)var_8) {\n    return CONCAT44(var_7 + (var_8 - var_12) * 0x100000 | value_2,var_5);\n  }\n  var_10 = ~(var_8 - var_12);\n  if ((int)var_10 < 0x1f) {\n    var_6 = var_10 - 0x13;\n    if (var_6 != 0 && var_6 < 0 == SCARRY4(var_10 - 0x1f,0xc)) {\n      return CONCAT44(var_9,var_5 >> (0x20 - (0xcU - var_6) & 0xff) | var_7 << (0xcU - var_6 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    var_10 = var_10 + 1;\n    return CONCAT44(value_2 | var_7 >> (var_10 & 0xff),\n                    var_5 >> (var_10 & 0xff) | var_7 << (0x20 - var_10 & 0xff));\n  }\n  return CONCAT44(var_9,var_7 >> (var_10 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_08000194": "calculate_double_addition_08000194",
                "param_1": "value_1",
                "param_2": "value_2",
                "param_3": "value_3",
                "param_4": "value_4",
                "iVar1": "var_1",
                "bVar2": "var_2",
                "uVar3": "var_3",
                "uVar4": "var_4",
                "uVar5": "var_5",
                "iVar6": "var_6",
                "uVar7": "var_7",
                "uVar8": "var_8",
                "uVar9": "var_9",
                "uVar10": "var_10",
                "uVar11": "var_11",
                "uVar12": "var_12",
                "bVar13": "var_13",
                "bVar14": "var_14",
                "bVar15": "var_15"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_080015f8",
                "FUN_08000cd0",
                "FUN_080016b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800040c": {
            "entrypoint": "0x0800040c",
            "current_name": "reverse_and_shift_bits_0800040c",
            "code": "\nulonglong reverseAndShiftBits_0800040c(uint input)\n\n{\n  uint shiftedBits;\n  uint shiftAmount;\n  int leadingZeroes;\n  uint shiftConstant;\n  uint remainingBits;\n  bool isNegative;\n  bool isZero;\n  bool overflowFlag;\n  \n  if (input == 0) {\n    return 0;\n  }\n  shiftedBits = 0;\n  leadingZeroes = LZCOUNT(input);\n  shiftConstant = leadingZeroes + 0x15;\n  overflowFlag = SBORROW4(shiftConstant,0x20);\n  shiftAmount = leadingZeroes - 0xb;\n  isNegative = (int)shiftAmount < 0;\n  isZero = shiftAmount == 0;\n  if (shiftConstant < 0x20) {\n    overflowFlag = SCARRY4(shiftAmount,0xc);\n    isNegative = false;\n    isZero = leadingZeroes + 1 == 0;\n    shiftAmount = shiftConstant;\n    if (!isZero && overflowFlag == false) {\n      shiftedBits = input << shiftConstant;\n      input = input >> (0xcU - (leadingZeroes + 1) & 0xff);\n      goto LAB_08000318;\n    }\n  }\n  if (isZero || isNegative != overflowFlag) {\n    remainingBits = 0x20 - shiftAmount;\n  }\n  input = input << (shiftAmount & 0xff);\n  if (isZero || isNegative != overflowFlag) {\n    input = input | 0U >> (remainingBits & 0xff);\n  }\n  if (isZero || isNegative != overflowFlag) {\n    shiftedBits = 0 << (shiftAmount & 0xff);\n  }\nLAB_08000318:\n  if (shiftConstant < 0x433) {\n    return CONCAT44(input + (0x432 - shiftConstant) * 0x100000,shiftedBits);\n  }\n  shiftAmount = ~(0x432 - shiftConstant);\n  if (0x1e < (int)shiftAmount) {\n    return (ulonglong)(input >> (shiftAmount - 0x1f & 0xff));\n  }\n  leadingZeroes = shiftAmount - 0x13;\n  if (leadingZeroes == 0 || leadingZeroes < 0 != SCARRY4(shiftAmount - 0x1f,0xc)) {\n    shiftAmount = shiftAmount + 1;\n    return CONCAT44(input >> (shiftAmount & 0xff),\n                    shiftedBits >> (shiftAmount & 0xff) | input << (0x20 - shiftAmount & 0xff));\n  }\n  return (ulonglong)(shiftedBits >> (0x20 - (0xcU - leadingZeroes) & 0xff) | input << (0xcU - leadingZeroes & 0xff));\n}\n\n",
            "renaming": {
                "FUN_0800040c": "reverse_and_shift_bits_0800040c",
                "param_1": "input",
                "uVar1": "shiftedBits",
                "uVar2": "shiftAmount",
                "iVar3": "leadingZeroes",
                "uVar4": "shiftConstant",
                "in_r12": "remainingBits",
                "bVar5": "isNegative",
                "bVar6": "isZero",
                "bVar7": "overflowFlag"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_080015f8",
                "FUN_08000cd0",
                "FUN_08001814",
                "FUN_08001918"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800042c": {
            "entrypoint": "0x0800042c",
            "current_name": "bitwise_shift_operation_0800042c",
            "code": "\nulonglong bitwise_shift_operation_0800042c(uint input_value)\n\n{\n  uint shift_count;\n  uint abs_input_value;\n  uint adjusted_shift_count;\n  int leading_zeros;\n  uint final_shift_count;\n  uint negative_sign;\n  uint remaining_bits;\n  bool leading_zeros_negative;\n  bool leading_zeros_zero;\n  bool leading_zeros_overflow;\n  \n  if (input_value == 0) {\n    return 0;\n  }\n  negative_sign = input_value & 0x80000000;\n  abs_input_value = input_value;\n  if ((int)negative_sign < 0) {\n    abs_input_value = -input_value;\n  }\n  shift_count = 0;\n  leading_zeros = LZCOUNT(abs_input_value);\n  final_shift_count = leading_zeros + 0x15;\n  leading_zeros_overflow = SBORROW4(final_shift_count,0x20);\n  adjusted_shift_count = leading_zeros - 0xb;\n  leading_zeros_negative = (int)adjusted_shift_count < 0;\n  leading_zeros_zero = adjusted_shift_count == 0;\n  if (final_shift_count < 0x20) {\n    leading_zeros_overflow = SCARRY4(adjusted_shift_count,0xc);\n    leading_zeros_negative = false;\n    leading_zeros_zero = leading_zeros + 1 == 0;\n    adjusted_shift_count = final_shift_count;\n    if (!leading_zeros_zero && leading_zeros_overflow == false) {\n      shift_count = abs_input_value << final_shift_count;\n      abs_input_value = abs_input_value >> (0xcU - (leading_zeros + 1) & 0xff);\n      goto LAB_08000318;\n    }\n  }\n  if (leading_zeros_zero || leading_zeros_negative != leading_zeros_overflow) {\n    remaining_bits = 0x20 - adjusted_shift_count;\n  }\n  abs_input_value = abs_input_value << (adjusted_shift_count & 0xff);\n  if (leading_zeros_zero || leading_zeros_negative != leading_zeros_overflow) {\n    abs_input_value = abs_input_value | 0U >> (remaining_bits & 0xff);\n  }\n  if (leading_zeros_zero || leading_zeros_negative != leading_zeros_overflow) {\n    shift_count = 0 << (adjusted_shift_count & 0xff);\n  }\nLAB_08000318:\n  if (final_shift_count < 0x433) {\n    return CONCAT44(abs_input_value + (0x432 - final_shift_count) * 0x100000 | negative_sign,shift_count);\n  }\n  adjusted_shift_count = ~(0x432 - final_shift_count);\n  if (0x1e < (int)adjusted_shift_count) {\n    return CONCAT44(input_value,abs_input_value >> (adjusted_shift_count - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  leading_zeros = adjusted_shift_count - 0x13;\n  if (leading_zeros == 0 || leading_zeros < 0 != SCARRY4(adjusted_shift_count - 0x1f,0xc)) {\n    adjusted_shift_count = adjusted_shift_count + 1;\n    return CONCAT44(negative_sign | abs_input_value >> (adjusted_shift_count & 0xff),\n                    shift_count >> (adjusted_shift_count & 0xff) | abs_input_value << (0x20 - adjusted_shift_count & 0xff));\n  }\n  return CONCAT44(input_value,shift_count >> (0x20 - (0xcU - leading_zeros) & 0xff) | abs_input_value << (0xcU - leading_zeros & 0xff))\n         & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800042c": "bitwise_shift_operation_0800042c",
                "param_1": "input_value",
                "uVar1": "shift_count",
                "uVar2": "abs_input_value",
                "uVar3": "adjusted_shift_count",
                "iVar4": "leading_zeros",
                "uVar5": "final_shift_count",
                "uVar6": "negative_sign",
                "in_r12": "remaining_bits",
                "bVar7": "leading_zeros_negative",
                "bVar8": "leading_zeros_zero",
                "bVar9": "leading_zeros_overflow"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0",
                "FUN_08001918"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080004f8": {
            "entrypoint": "0x080004f8",
            "current_name": "calculate_product_080004f8",
            "code": "\nulonglong calculateProduct_080004f8(undefined4 input1,uint input2,uint input3,uint input4)\n\n{\n  ulonglong result;\n  longlong temp;\n  uint var1;\n  uint var2;\n  int var3;\n  uint var4;\n  uint unaff_r5;\n  uint var5;\n  uint var6;\n  bool var7;\n  bool var8;\n  bool var9;\n  ulonglong combinedInput;\n  \n  combinedInput = CONCAT44(input2,input1);\n  var5 = 0x7ff;\n  var2 = input2 >> 0x14 & 0x7ff;\n  var7 = var2 == 0;\n  if (!var7) {\n    unaff_r5 = input4 >> 0x14 & 0x7ff;\n    var7 = unaff_r5 == 0;\n  }\n  if (!var7) {\n    var7 = var2 == 0x7ff;\n  }\n  if (!var7) {\n    var7 = unaff_r5 == 0x7ff;\n  }\n  if (var7) {\n    combinedInput = FUN_080006d4();\n  }\n  var1 = (uint)(combinedInput >> 0x20);\n  var3 = var2 + unaff_r5;\n  var2 = var1 ^ input4;\n  var1 = var1 & ~(var5 << 0x15);\n  input4 = input4 & ~(var5 << 0x15);\n  var7 = ((uint)combinedInput | var1 << 0xc) == 0;\n  if (!var7) {\n    var7 = (input3 | input4 << 0xc) == 0;\n  }\n  var1 = var1 | 0x100000;\n  input4 = input4 | 0x100000;\n  if (var7) {\n    input3 = (uint)combinedInput | input3;\n    input4 = (var2 & 0x80000000 | var1) ^ input4;\n    var2 = var5 >> 1;\n    var9 = SBORROW4(var3,var2);\n    var4 = var3 - var2;\n    var7 = var4 == 0;\n    var1 = var4;\n    if (!var7 && (int)var2 <= var3) {\n      var9 = SBORROW4(var5,var4);\n      var1 = var5 - var4;\n      var7 = var5 == var4;\n    }\n    if (!var7 && (int)var1 < 0 == var9) {\n      input4 = input4 | var4 * 0x100000;\n    }\n    if (!var7 && (int)var1 < 0 == var9) {\n      return CONCAT44(input4,input3);\n    }\n    input4 = input4 | 0x100000;\n    var5 = 0;\n    var9 = SBORROW4(var4,1);\n    var4 = var4 - 1;\n    var7 = var4 == 0;\n    var2 = var4;\n  }\n  else {\n    result = (combinedInput & 0xffffffff) * (ulonglong)input3;\n    combinedInput = (combinedInput & 0xffffffff) * (ulonglong)input4 +\n             (ulonglong)var1 * (ulonglong)input3 + (result >> 0x20);\n    var6 = (uint)combinedInput;\n    temp = (ulonglong)var1 * (ulonglong)input4 + (combinedInput >> 0x20);\n    var5 = (uint)temp;\n    var1 = (uint)((ulonglong)temp >> 0x20);\n    if ((int)result != 0) {\n      var6 = var6 | 1;\n    }\n    var4 = (var3 + -0x3ff) - (uint)(var1 < 0x200);\n    if (var1 < 0x200) {\n      var7 = (var6 & 0x80000000) != 0;\n      var6 = var6 << 1;\n      temp = CONCAT44(var1 * 2 + (uint)(CARRY4(var5,var5) || CARRY4(var5 * 2,(uint)var7)),\n                       var5 * 2 + (uint)var7);\n    }\n    input4 = var2 & 0x80000000 | (int)((ulonglong)temp >> 0x20) << 0xb | (uint)temp >> 0x15;\n    input3 = (uint)temp << 0xb | var6 >> 0x15;\n    var5 = var6 * 0x800;\n    var8 = 0xfc < var4;\n    var9 = SBORROW4(var4,0xfd);\n    var1 = var4 - 0xfd;\n    var7 = var1 == 0;\n    var2 = var1;\n    if (var8 && !var7) {\n      var8 = 0x6ff < var1;\n      var9 = SBORROW4(var1,0x700);\n      var2 = var4 - 0x7fd;\n      var7 = var1 == 0x700;\n    }\n    if (!var8 || var7) {\n      var7 = 0x7fffffff < var5;\n      if (var5 == 0x80000000) {\n        var7 = (var6 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(input4 + var4 * 0x100000 + (uint)CARRY4(input3,(uint)var7),input3 + var7\n                     );\n    }\n  }\n  if (!var7 && (int)var2 < 0 == var9) {\n    return (ulonglong)(input4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  var8 = SCARRY4(var4,0x36);\n  var7 = (int)(var4 + 0x36) < 0;\n  var9 = var4 == 0xffffffca;\n  if (var9 || var7 != var8) {\n    input3 = 0;\n  }\n  if (var9 || var7 != var8) {\n    input4 = input4 & 0x80000000;\n  }\n  if (var9 || var7 != var8) {\n    return CONCAT44(input4,input3);\n  }\n  var2 = -var4;\n  var1 = var2 - 0x20;\n  if (0x1f < (int)var2) {\n    var4 = input3 >> (var1 & 0xff) | input4 << (0x20 - var1 & 0xff);\n    var2 = (input4 >> (var1 & 0xff) & ~((input4 & 0x80000000) >> (var1 & 0xff))) -\n            ((int)var4 >> 0x1f);\n    if ((var5 | input3 << (0x20 - var1 & 0xff) | var4 << 1) == 0) {\n      var2 = var2 & ~(var4 >> 0x1f);\n    }\n    return CONCAT44(input4,var2) & 0x80000000ffffffff;\n  }\n  var3 = var2 - 0x14;\n  if (var3 == 0 || var3 < 0 != SCARRY4(var1,0xc)) {\n    var6 = input3 << (var4 + 0x20 & 0xff);\n    var1 = input3 >> (var2 & 0xff) | input4 << (var4 + 0x20 & 0xff);\n    var4 = var1 + -((int)var6 >> 0x1f);\n    if ((var5 | var6 << 1) == 0) {\n      var4 = var4 & ~(var6 >> 0x1f);\n    }\n    return CONCAT44((input4 & 0x80000000) +\n                    ((input4 & 0x7fffffff) >> (var2 & 0xff)) +\n                    (uint)CARRY4(var1,-((int)var6 >> 0x1f)),var4);\n  }\n  var2 = 0xc - var3;\n  var4 = input3 << (var2 & 0xff);\n  var2 = input3 >> (0x20 - var2 & 0xff) | input4 << (var2 & 0xff);\n  var1 = var2 + -((int)var4 >> 0x1f);\n  if ((var5 | var4 << 1) == 0) {\n    var1 = var1 & ~(var4 >> 0x1f);\n  }\n  return CONCAT44((input4 & 0x80000000) + (uint)CARRY4(var2,-((int)var4 >> 0x1f)),var1);\n}\n\n",
            "renaming": {
                "FUN_080004f8": "calculate_product_080004f8",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result",
                "lVar2": "temp",
                "uVar3": "var1",
                "uVar4": "var2",
                "iVar5": "var3",
                "uVar6": "var4",
                "uVar7": "var5",
                "uVar8": "var6",
                "bVar9": "var7",
                "bVar10": "var8",
                "bVar11": "var9",
                "uVar12": "combinedInput"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_080015f8",
                "FUN_08001814",
                "FUN_08001918",
                "FUN_080016b4"
            ],
            "called": [
                "FUN_080006d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080006d4": {
            "entrypoint": "0x080006d4",
            "current_name": "extracted_function_080006d4",
            "code": "\nulonglong extractedFunction_080006d4(uint input1,uint input2,uint input3,uint input4)\n\n{\n  uint bit1;\n  uint unaffected_r4;\n  uint bit2;\n  uint bit3;\n  uint bit4;\n  bool isZero;\n  \n  bit2 = bit4 & input4 >> 0x14;\n  if (unaffected_r4 != bit4 && bit2 != bit4) {\n    isZero = (input1 | input2 << 1) == 0;\n    if (!isZero) {\n      isZero = (input3 | input4 << 1) == 0;\n    }\n    if (isZero) {\n      return (ulonglong)((input2 ^ input4) & 0x80000000) << 0x20;\n    }\n    if (unaffected_r4 == 0) {\n      bit3 = input2 & 0x80000000;\n      do {\n        bit1 = input1 & 0x80000000;\n        input1 = input1 << 1;\n        input2 = input2 * 2 + (uint)(bit1 != 0);\n      } while ((input2 & 0x100000) == 0);\n      input2 = input2 | bit3;\n      if (bit2 != 0) {\n        return CONCAT44(input2,input1);\n      }\n    }\n    do {\n      bit2 = input3 & 0x80000000;\n      input3 = input3 << 1;\n      input4 = input4 * 2 + (uint)(bit2 != 0);\n    } while ((input4 & 0x100000) == 0);\n    return CONCAT44(input2,input1);\n  }\n  isZero = (input1 | input2 << 1) == 0;\n  if (isZero) {\n    input2 = input4;\n    input1 = input3;\n  }\n  if (!isZero) {\n    isZero = (input3 | input4 << 1) == 0;\n  }\n  bit3 = input2;\n  if (((!isZero) && ((unaffected_r4 != bit4 || ((input1 | input2 << 0xc) == 0)))) &&\n     ((bit2 != bit4 || (input1 = input3, bit3 = input4, (input3 | input4 << 0xc) == 0)))) {\n    return (ulonglong)((input2 ^ input4) & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  return CONCAT44(bit3,input1) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_080006d4": "extracted_function_080006d4",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "bit1",
                "unaff_r4": "unaffected_r4",
                "uVar2": "bit2",
                "uVar3": "bit3",
                "in_r12": "bit4",
                "bVar4": "isZero"
            },
            "calling": [
                "FUN_080004f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800074c": {
            "entrypoint": "0x0800074c",
            "current_name": "extracted_function_0800074c",
            "code": "\nulonglong extractedFunction_0800074c(undefined4 input_param_1,uint input_param_2,uint input_param_3,uint input_param_4)\n\n{\n  uint var1;\n  uint var2;\n  uint var3;\n  uint var4;\n  uint var5;\n  uint var6;\n  uint var7;\n  int var8;\n  uint var9;\n  uint var_unaff_r5;\n  uint var10;\n  uint var11;\n  uint var12;\n  uint var13;\n  bool bool1;\n  bool bool2;\n  bool bool3;\n  undefined8 concatenated_vars;\n  \n  concatenated_vars = CONCAT44(input_param_2,input_param_1);\n  var13 = 0x7ff;\n  var7 = input_param_2 >> 0x14 & 0x7ff;\n  bool1 = var7 == 0;\n  if (!bool1) {\n    var_unaff_r5 = input_param_4 >> 0x14 & 0x7ff;\n    bool1 = var_unaff_r5 == 0;\n  }\n  if (!bool1) {\n    bool1 = var7 == 0x7ff;\n  }\n  if (!bool1) {\n    bool1 = var_unaff_r5 == 0x7ff;\n  }\n  if (bool1) {\n    concatenated_vars = FUN_080008ba();\n  }\n  var9 = (uint)((ulonglong)concatenated_vars >> 0x20);\n  var11 = (uint)concatenated_vars;\n  var8 = var7 - var_unaff_r5;\n  if ((input_param_3 | input_param_4 << 0xc) == 0) {\n    var7 = (var9 ^ input_param_4) & 0x80000000 | var9 & 0xfffff;\n    bool3 = SCARRY4(var8,var13 >> 1);\n    var9 = var8 + (var13 >> 1);\n    bool1 = (int)var9 < 0;\n    bool2 = var9 == 0;\n    if (!bool2 && bool1 == bool3) {\n      bool3 = SBORROW4(var13,var9);\n      bool1 = (int)(var13 - var9) < 0;\n      bool2 = var13 == var9;\n    }\n    if (!bool2 && bool1 == bool3) {\n      var7 = var7 | var9 * 0x100000;\n    }\n    if (!bool2 && bool1 == bool3) {\n      return CONCAT44(var7,var11);\n    }\n    var7 = var7 | 0x100000;\n    var13 = 0;\n    bool2 = SBORROW4(var9,1);\n    var9 = var9 - 1;\n    bool1 = var9 == 0;\n    var3 = var9;\n  }\n  else {\n    var3 = (input_param_4 << 0xc) >> 4 | 0x10000000 | input_param_3 >> 0x18;\n    var13 = input_param_3 << 8;\n    var10 = (var9 << 0xc) >> 4 | 0x10000000 | var11 >> 0x18;\n    var11 = var11 * 0x100;\n    var7 = (var9 ^ input_param_4) & 0x80000000;\n    bool1 = var3 <= var10;\n    if (var10 == var3) {\n      bool1 = var13 <= var11;\n    }\n    var8 = var8 + (uint)bool1;\n    var9 = var8 + 0x3fd;\n    if (bool1 == false) {\n      var3 = var3 >> 1;\n      var13 = (uint)((input_param_3 >> 0x18 & 1) != 0) << 0x1f | var13 >> 1;\n    }\n    var12 = var11 - var13;\n    var10 = (var10 - var3) - (uint)(var11 < var13);\n    var4 = var3 >> 1;\n    var1 = (uint)((var3 & 1) != 0) << 0x1f | var13 >> 1;\n    var11 = 0x100000;\n    var3 = 0x80000;\n    while( true ) {\n      bool1 = var1 <= var12;\n      if (var4 < var10 || var10 - var4 < (uint)bool1) {\n        var12 = var12 - var1;\n        var11 = var11 | var3;\n        var10 = (var10 - var4) - (uint)!bool1;\n      }\n      var5 = var4 >> 1;\n      var1 = (uint)((var4 & 1) != 0) << 0x1f | var1 >> 1;\n      bool2 = var1 <= var12;\n      bool1 = var10 - var5 < (uint)bool2;\n      var13 = var10;\n      if (var5 < var10 || bool1) {\n        var12 = var12 - var1;\n        var13 = (var10 - var5) - (uint)!bool2;\n      }\n      if (var5 < var10 || bool1) {\n        var11 = var11 | var3 >> 1;\n      }\n      var10 = var4 >> 2;\n      var2 = (uint)((var5 & 1) != 0) << 0x1f | var1 >> 1;\n      bool2 = var2 <= var12;\n      bool1 = var13 - var10 < (uint)bool2;\n      var5 = var13;\n      if (var10 < var13 || bool1) {\n        var12 = var12 - var2;\n        var5 = (var13 - var10) - (uint)!bool2;\n      }\n      if (var10 < var13 || bool1) {\n        var11 = var11 | var3 >> 2;\n      }\n      var6 = var4 >> 3;\n      var1 = (uint)((var10 & 1) != 0) << 0x1f | var2 >> 1;\n      bool2 = var1 <= var12;\n      bool1 = var5 - var6 < (uint)bool2;\n      var10 = var5;\n      if (var6 < var5 || bool1) {\n        var12 = var12 - var1;\n        var10 = (var5 - var6) - (uint)!bool2;\n      }\n      if (var6 < var5 || bool1) {\n        var11 = var11 | var3 >> 3;\n      }\n      var13 = var10 | var12;\n      if (var13 == 0) break;\n      var10 = var10 << 4 | var12 >> 0x1c;\n      var12 = var12 << 4;\n      var4 = var4 & 0xfffffff8 | var1 >> 0x1d;\n      var1 = (var2 >> 1) << 3;\n      var3 = var3 >> 4;\n      if (var3 == 0) {\n        var6 = var4;\n        if ((var7 & 0x100000) != 0) goto LAB_0800086a;\n        var7 = var7 | var11;\n        var11 = 0;\n        var3 = 0x80000000;\n      }\n    }\n    if ((var7 & 0x100000) == 0) {\n      var7 = var7 | var11;\n      var11 = 0;\n    }\nLAB_0800086a:\n    bool3 = 0xfc < var9;\n    bool2 = SBORROW4(var9,0xfd);\n    var4 = var8 + 0x300;\n    bool1 = var4 == 0;\n    var3 = var4;\n    if (bool3 && !bool1) {\n      bool3 = 0x6ff < var4;\n      bool2 = SBORROW4(var4,0x700);\n      var3 = var8 - 0x400;\n      bool1 = var4 == 0x700;\n    }\n    if (!bool3 || bool1) {\n      bool1 = var6 <= var10;\n      if (var10 == var6) {\n        bool1 = var1 <= var12;\n      }\n      if (var10 == var6 && var12 == var1) {\n        bool1 = (var11 & 1) != 0;\n      }\n      return CONCAT44(var7 + var9 * 0x100000 + (uint)CARRY4(var11,(uint)bool1),var11 + bool1);\n    }\n  }\n  if (!bool1 && (int)var3 < 0 == bool2) {\n    return (ulonglong)(var7 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  bool3 = SCARRY4(var9,0x36);\n  bool1 = (int)(var9 + 0x36) < 0;\n  bool2 = var9 == 0xffffffca;\n  if (bool2 || bool1 != bool3) {\n    var11 = 0;\n  }\n  if (bool2 || bool1 != bool3) {\n    var7 = var7 & 0x80000000;\n  }\n  if (bool2 || bool1 != bool3) {\n    return CONCAT44(var7,var11);\n  }\n  var3 = -var9;\n  var10 = var3 - 0x20;\n  if (0x1f < (int)var3) {\n    var3 = var11 >> (var10 & 0xff) | var7 << (0x20 - var10 & 0xff);\n    var9 = (var7 >> (var10 & 0xff) & ~((var7 & 0x80000000) >> (var10 & 0xff))) -\n            ((int)var3 >> 0x1f);\n    if ((var13 | var11 << (0x20 - var10 & 0xff) | var3 << 1) == 0) {\n      var9 = var9 & ~(var3 >> 0x1f);\n    }\n    return CONCAT44(var7,var9) & 0x80000000ffffffff;\n  }\n  var8 = var3 - 0x14;\n  if (var8 != 0 && var8 < 0 == SCARRY4(var10,0xc)) {\n    var9 = 0xc - var8;\n    var3 = var11 << (var9 & 0xff);\n    var11 = var11 >> (0x20 - var9 & 0xff) | var7 << (var9 & 0xff);\n    var9 = var11 + -((int)var3 >> 0x1f);\n    if ((var13 | var3 << 1) == 0) {\n      var9 = var9 & ~(var3 >> 0x1f);\n    }\n    return CONCAT44((var7 & 0x80000000) + (uint)CARRY4(var11,-((int)var3 >> 0x1f)),var9);\n  }\n  var10 = var11 << (var9 + 0x20 & 0xff);\n  var11 = var11 >> (var3 & 0xff) | var7 << (var9 + 0x20 & 0xff);\n  var9 = var11 + -((int)var10 >> 0x1f);\n  if ((var13 | var10 << 1) == 0) {\n    var9 = var9 & ~(var10 >> 0x1f);\n  }\n  return CONCAT44((var7 & 0x80000000) +\n                  ((var7 & 0x7fffffff) >> (var3 & 0xff)) +\n                  (uint)CARRY4(var11,-((int)var10 >> 0x1f)),var9);\n}\n\n",
            "renaming": {
                "FUN_0800074c": "extracted_function_0800074c",
                "param_1": "input_param_1",
                "param_2": "input_param_2",
                "param_3": "input_param_3",
                "param_4": "input_param_4",
                "uVar1": "var1",
                "uVar2": "var2",
                "uVar3": "var3",
                "uVar4": "var4",
                "uVar5": "var5",
                "uVar6": "var6",
                "uVar7": "var7",
                "iVar8": "var8",
                "uVar9": "var9",
                "unaff_r5": "var_unaff_r5",
                "uVar10": "var10",
                "uVar11": "var11",
                "uVar12": "var12",
                "uVar13": "var13",
                "bVar14": "bool1",
                "bVar15": "bool2",
                "bVar16": "bool3",
                "uVar17": "concatenated_vars"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_080015f8",
                "FUN_08001814",
                "FUN_08001918"
            ],
            "called": [
                "FUN_080008ba"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080008ba": {
            "entrypoint": "0x080008ba",
            "current_name": "convert_to_double_080008ba",
            "code": "\nulonglong convertToDouble_080008ba(uint input1,uint input2,uint input3,uint input4)\n\n{\n  uint bit1;\n  uint constant;\n  uint shiftedAndMasked;\n  uint result;\n  uint constant2;\n  bool isZero;\n  \n  shiftedAndMasked = constant2 & input4 >> 0x14;\n  result = input2;\n  if (constant != constant2 || shiftedAndMasked != constant2) {\n    if (constant == constant2) {\n      if (((input1 | input2 << 0xc) == 0) && (input1 = input3, result = input4, shiftedAndMasked != constant2)\n         ) {\nLAB_0800072c:\n        return (ulonglong)((input2 ^ input4) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n    }\n    else if (shiftedAndMasked == constant2) {\n      input1 = input3;\n      result = input4;\n      if ((input3 | input4 << 0xc) == 0) {\nLAB_080006f0:\n        return (ulonglong)((input2 ^ input4) & 0x80000000) << 0x20;\n      }\n    }\n    else {\n      isZero = (input1 | input2 << 1) == 0;\n      if (!isZero) {\n        isZero = (input3 | input4 << 1) == 0;\n      }\n      if (!isZero) {\n        if (constant == 0) {\n          result = input2 & 0x80000000;\n          do {\n            bit1 = input1 & 0x80000000;\n            input1 = input1 << 1;\n            input2 = input2 * 2 + (uint)(bit1 != 0);\n          } while ((input2 & 0x100000) == 0);\n          input2 = input2 | result;\n          if (shiftedAndMasked != 0) {\n            return CONCAT44(input2,input1);\n          }\n        }\n        do {\n          result = input3 & 0x80000000;\n          input3 = input3 << 1;\n          input4 = input4 * 2 + (uint)(result != 0);\n        } while ((input4 & 0x100000) == 0);\n        return CONCAT44(input2,input1);\n      }\n      if ((input1 | input2 << 1) != 0) goto LAB_0800072c;\n      if ((input3 | input4 << 1) != 0) goto LAB_080006f0;\n    }\n  }\n  return CONCAT44(result,input1) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_080008ba": "convert_to_double_080008ba",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "bit1",
                "uVar2": "shiftedAndMasked",
                "uVar3": "result",
                "unaff_r4": "constant",
                "in_r12": "constant2",
                "bVar4": "isZero"
            },
            "calling": [
                "FUN_0800074c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800092c": {
            "entrypoint": "0x0800092c",
            "current_name": "check_params_equality_0800092c",
            "code": "\nuint check_params_equality_0800092c(uint value1,uint value2,uint value3,uint value4)\n\n{\n  uint xor_result;\n  bool is_zero;\n  bool is_negative;\n  \n  if (((int)(value2 << 1) >> 0x15 == -1 || (int)(value4 << 1) >> 0x15 == -1) &&\n     ((((int)(value2 << 1) >> 0x15 == -1 && ((value1 | value2 << 0xc) != 0)) ||\n      (((int)(value4 << 1) >> 0x15 == -1 && ((value3 | value4 << 0xc) != 0)))))) {\n    return 1;\n  }\n  is_zero = (value1 | value2 << 1) == 0;\n  if (is_zero) {\n    is_zero = (value3 | value4 << 1) == 0;\n  }\n  if (!is_zero) {\n    is_zero = value2 == value4;\n  }\n  if (is_zero) {\n    is_zero = value1 == value3;\n  }\n  if (!is_zero) {\n    xor_result = value2 ^ value4;\n    is_zero = xor_result == 0;\n    if (-1 < (int)xor_result) {\n      is_zero = value2 == value4;\n    }\n    is_negative = -1 < (int)xor_result && value4 <= value2;\n    if (is_zero) {\n      is_negative = value3 <= value1;\n    }\n    value4 = (int)value4 >> 0x1f;\n    if (!is_negative) {\n      value4 = ~value4;\n    }\n    return value4 | 1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800092c": "check_params_equality_0800092c",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4",
                "uVar1": "xor_result",
                "bVar2": "is_zero",
                "bVar3": "is_negative"
            },
            "calling": [
                "FUN_080009b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009a8": {
            "entrypoint": "0x080009a8",
            "current_name": "execute_function_080009a8",
            "code": "\nvoid executeFunction_080009a8(undefined4 input1,undefined4 input2,undefined4 param3,undefined4 param4)\n\n{\n  FUN_080009b8(param3,param4,input1,input2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080009a8": "execute_function_080009a8",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [
                "FUN_08000a18",
                "FUN_08000a04"
            ],
            "called": [
                "FUN_080009b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009b8": {
            "entrypoint": "0x080009b8",
            "current_name": "initialize_program_080009b8",
            "code": "\nundefined4 initializeProgram_080009b8(undefined4 inputParameter)\n\n{\n  FUN_0800092c();\n  return inputParameter;\n}\n\n",
            "renaming": {
                "FUN_080009b8": "initialize_program_080009b8",
                "param_1": "inputParameter"
            },
            "calling": [
                "FUN_080009c8",
                "FUN_080009f0",
                "FUN_080009dc",
                "FUN_080009a8"
            ],
            "called": [
                "FUN_0800092c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009c8": {
            "entrypoint": "0x080009c8",
            "current_name": "check_if_pointer_is_not_null_080009c8",
            "code": "\nbool checkIfPointerIsNotNull_080009c8(void)\n\n{\n  char isNull;\n  \n  FUN_080009b8();\n  return isNull != '\\0';\n}\n\n",
            "renaming": {
                "FUN_080009c8": "check_if_pointer_is_not_null_080009c8",
                "in_ZR": "isNull"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080009b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009dc": {
            "entrypoint": "0x080009dc",
            "current_name": "is_cy_null_080009dc",
            "code": "\nbool is_CY_null_080009dc(void)\n\n{\n  char CY;\n  \n  FUN_080009b8();\n  return CY == '\\0';\n}\n\n",
            "renaming": {
                "FUN_080009dc": "is_cy_null_080009dc",
                "in_CY": "CY"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0",
                "FUN_080019f6",
                "FUN_08001814",
                "FUN_080016b4",
                "FUN_08001960"
            ],
            "called": [
                "FUN_080009b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009f0": {
            "entrypoint": "0x080009f0",
            "current_name": "check_cy_and_zr_080009f0",
            "code": "\nbool check_CY_and_ZR_080009f0(void)\n\n{\n  undefined zero_flag;\n  undefined carry_flag;\n  \n  FUN_080009b8();\n  return !(bool)carry_flag || (bool)zero_flag;\n}\n\n",
            "renaming": {
                "FUN_080009f0": "check_cy_and_zr_080009f0",
                "in_CY": "carry_flag",
                "in_ZR": "zero_flag"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080009b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a04": {
            "entrypoint": "0x08000a04",
            "current_name": "check_cy_and_zr_08000a04",
            "code": "\nbool check_CY_and_ZR_08000a04(void)\n\n{\n  undefined is_zero_result;\n  undefined carry_flag;\n  \n  FUN_080009a8();\n  return !(bool)carry_flag || (bool)is_zero_result;\n}\n\n",
            "renaming": {
                "FUN_08000a04": "check_cy_and_zr_08000a04",
                "in_ZR": "is_zero_result",
                "in_CY": "carry_flag"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08001960"
            ],
            "called": [
                "FUN_080009a8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a18": {
            "entrypoint": "0x08000a18",
            "current_name": "check_null_termination_08000a18",
            "code": "\nbool checkNullTermination_08000a18(void)\n\n{\n  char inputCharacter;\n  \n  FUN_080009a8();\n  return inputCharacter == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08000a18": "check_null_termination_08000a18",
                "in_CY": "inputCharacter"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_080019f6",
                "FUN_08000cd0",
                "FUN_080016b4",
                "FUN_08001960"
            ],
            "called": [
                "FUN_080009a8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a2c": {
            "entrypoint": "0x08000a2c",
            "current_name": "check_params_08000a2c",
            "code": "\nundefined4 check_params_08000a2c(uint input1,int input2,uint input3,int input4)\n\n{\n  if ((((input2 << 1) >> 0x15 != -1) || ((input1 | input2 << 0xc) == 0)) &&\n     (((input4 << 1) >> 0x15 != -1 || ((input3 | input4 << 0xc) == 0)))) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08000a2c": "check_params_08000a2c",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4"
            },
            "calling": [
                "FUN_08005da8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a58": {
            "entrypoint": "0x08000a58",
            "current_name": "convert_to_signed_fraction_08000a58",
            "code": "\nuint convertToSignedFraction_08000a58(uint unsignedInteger,uint shiftAmount)\n\n{\n  uint shiftedValue;\n  int scaledValue;\n  uint shiftDifference;\n  \n  scaledValue = shiftAmount * 2 + 0x200000;\n  if (shiftAmount * 2 < 0xffe00000) {\n    if (-1 < scaledValue) {\n      return 0;\n    }\n    shiftedValue = scaledValue >> 0x15;\n    shiftDifference = -shiftedValue - 0x3e1;\n    if (shiftedValue < 0xfffffc20 && shiftDifference != 0) {\n      shiftedValue = (shiftAmount << 0xb | 0x80000000 | unsignedInteger >> 0x15) >> (shiftDifference & 0xff);\n      if ((shiftAmount & 0x80000000) != 0) {\n        shiftedValue = -shiftedValue;\n      }\n      return shiftedValue;\n    }\n  }\n  else if ((unsignedInteger | shiftAmount << 0xc) != 0) {\n    return 0;\n  }\n  shiftAmount = shiftAmount & 0x80000000;\n  if (shiftAmount == 0) {\n    shiftAmount = 0x7fffffff;\n  }\n  return shiftAmount;\n}\n\n",
            "renaming": {
                "FUN_08000a58": "convert_to_signed_fraction_08000a58",
                "param_1": "unsignedInteger",
                "param_2": "shiftAmount",
                "uVar1": "shiftedValue",
                "iVar2": "scaledValue",
                "uVar3": "shiftDifference"
            },
            "calling": [
                "FUN_08005da8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000aa8": {
            "entrypoint": "0x08000aa8",
            "current_name": "calculate_shift_amount_08000aa8",
            "code": "\nuint calculate_shift_amount_08000aa8(uint input_shift,uint factor)\n\n{\n  int adjusted_factor;\n  uint shift_amount;\n  \n  if ((factor & 0x80000000) != 0) {\n    return 0;\n  }\n  adjusted_factor = factor * 2 + 0x200000;\n  if (factor * 2 < 0xffe00000) {\n    if (-1 < adjusted_factor) {\n      return 0;\n    }\n    shift_amount = -(adjusted_factor >> 0x15) - 0x3e1;\n    if (-1 < (int)shift_amount) {\n      return (factor << 0xb | 0x80000000 | input_shift >> 0x15) >> (shift_amount & 0xff);\n    }\n  }\n  else if ((input_shift | factor << 0xc) != 0) {\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08000aa8": "calculate_shift_amount_08000aa8",
                "param_1": "input_shift",
                "param_2": "factor",
                "iVar1": "adjusted_factor",
                "uVar2": "shift_amount"
            },
            "calling": [
                "FUN_08005da8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000ae8": {
            "entrypoint": "0x08000ae8",
            "current_name": "trigger_software_interrupt_08000ae8",
            "code": "\nvoid triggerSoftwareInterrupt_08000ae8(void)\n\n{\n  executeInterrupt(0x3f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000ae8": "trigger_software_interrupt_08000ae8",
                "software_interrupt": "executeInterrupt"
            },
            "calling": [
                "FUN_08000aec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000aec": {
            "entrypoint": "0x08000aec",
            "current_name": "execute_function_08000aec",
            "code": "\nundefined4 executeFunction_08000aec(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  undefined4 result;\n  \n  if (DAT_2000017c != 0) {\n    return 0;\n  }\n  result = FUN_08000ae8(1,input1,0,0,input4);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08000aec": "execute_function_08000aec",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08000ae8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000b08": {
            "entrypoint": "0x08000b08",
            "current_name": "execute_conditional_actions_08000b08",
            "code": "\nvoid executeConditionalActions_08000b08(int flag,int value)\n\n{\n  if ((flag == 1) && (value == 0xffff)) {\n    FUN_08001b18(&DAT_200001c0,&DAT_20000188,&DAT_200001b8,&DAT_20000240,DAT_20000020,DAT_20000024,\n                 DAT_20000018,DAT_2000001c,DAT_20000010,DAT_20000014,0);\n    FUN_08001510(&DAT_20000194,DAT_2000005c,DAT_20000038,DAT_20000028,DAT_2000002c,DAT_20000030,\n                 DAT_20000034);\n    FUN_0800157c(&DAT_2000024c,DAT_20000074,DAT_20000070,DAT_2000006c);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000b08": "execute_conditional_actions_08000b08",
                "param_1": "flag",
                "param_2": "value"
            },
            "calling": [],
            "called": [
                "FUN_08001510",
                "FUN_0800157c",
                "FUN_08001b18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000bcc": {
            "entrypoint": "0x08000bcc",
            "current_name": "initialize_oven_08000bcc",
            "code": "\nvoid initializeOven_08000bcc(void)\n\n{\n  FUN_08005848(DAT_20000064,0);\n  FUN_080057b4(DAT_20000064,1);\n  FUN_08005848(DAT_20000004,0);\n  FUN_080057b4(DAT_20000004,1);\n  FUN_08005848(DAT_20000060,0);\n  FUN_080057b4(DAT_20000060,1);\n  FUN_08005848(DAT_20000004,1);\n  FUN_080013a4(&DAT_20000194,8,2,0);\n  FUN_08001550(&DAT_20000194,0,&DAT_20000008);\n  FUN_0800135a(&DAT_20000194);\n  FUN_08005c96(&DAT_20000194,\"Reflow\");\n  FUN_08001366(&DAT_20000194,0,1);\n  FUN_08005c96(&DAT_20000194,\"Oven 1.2\");\n  FUN_08005848(DAT_20000004,0);\n  FUNC_080058e8(0x9c4);\n  FUN_0800135a(&DAT_20000194);\n  FUN_08005a68(&DAT_2000036c,0xe100,6);\n  FUN_08005848(DAT_20000060,1);\n  DAT_20000258 = 2000;\n  DAT_200001b0 = FUN_080058e0();\n  DAT_200001b4 = FUN_080058e0();\n  FUN_08000aec(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000bcc": "initialize_oven_08000bcc"
            },
            "calling": [
                "FUN_08005f6c"
            ],
            "called": [
                "FUN_080058e8",
                "FUN_08005a68",
                "FUN_08001550",
                "FUN_0800135a",
                "FUN_08000aec",
                "FUN_08005848",
                "FUN_08005c96",
                "FUN_080013a4",
                "FUN_080057b4",
                "FUN_08001366",
                "FUN_080058e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000cd0": {
            "entrypoint": "0x08000cd0",
            "current_name": "FUNC_08000cd0",
            "code": "\nvoid FUNC_08000cd0(void)\n\n{\n  uint uVar1;\n  undefined4 uVar2;\n  int iVar3;\n  undefined4 uVar4;\n  undefined4 extraout_r1;\n  undefined4 extraout_r1_00;\n  undefined4 extraout_r1_01;\n  undefined8 uVar5;\n  \n  uVar1 = FUN_080058e0();\n  if (DAT_200001b4 < uVar1) {\n    DAT_200001b4 = DAT_200001b4 + 1000;\n    uVar5 = FUN_080015f8(&DAT_2000024c,0);\n    uVar4 = (undefined4)((ulonglong)uVar5 >> 0x20);\n    uVar2 = (undefined4)uVar5;\n    DAT_20000188 = uVar2;\n    DAT_2000018c = uVar4;\n    iVar3 = FUN_080009c8(uVar2,uVar4,0,0x40c38800);\n    if (((iVar3 != 0) || (iVar3 = FUN_080009c8(uVar2,uVar4,0,0x40c38880), iVar3 != 0)) ||\n       (iVar3 = FUN_080009c8(uVar2,uVar4,0,0x40c38900), iVar3 != 0)) {\n      DAT_20000238 = 7;\n      DAT_20000239 = '\\0';\n    }\n  }\n  uVar1 = FUN_080058e0();\n  uVar2 = DAT_20000060;\n  if (DAT_200001b0 < uVar1) {\n    DAT_200001b0 = DAT_200001b0 + 1000;\n    if (DAT_20000239 == '\\x01') {\n      iVar3 = FUN_08005890(DAT_20000060);\n      FUN_08005848(uVar2,iVar3 == 0);\n      DAT_20000250 = DAT_20000250 + 1;\n      FUN_08005d82(&DAT_2000036c,DAT_20000250,10);\n      FUN_08005c96(&DAT_2000036c,&DAT_08007368);\n      FUN_08005f2c(&DAT_2000036c,extraout_r1,DAT_20000240,DAT_20000244,2);\n      FUN_08005c96(&DAT_2000036c,&DAT_08007368);\n      FUN_08005f2c(&DAT_2000036c,extraout_r1_00,DAT_20000188,DAT_2000018c,2);\n      FUN_08005c96(&DAT_2000036c,&DAT_08007368);\n      FUN_08005f40(&DAT_2000036c,extraout_r1_01,DAT_200001b8,DAT_200001bc,2);\n    }\n    else {\n      FUN_08005848(DAT_20000060,1);\n    }\n    FUN_0800135a(&DAT_20000194);\n    FUN_08005c96(&DAT_20000194,(&PTR_s_Ready_2000003c)[DAT_20000238]);\n    FUN_08001366(&DAT_20000194,0,1);\n    if (DAT_20000238 == 7) {\n      FUN_08005c96(&DAT_20000194,\"TC Error!\");\n    }\n    else {\n      FUN_08005f2c(&DAT_20000194,2,DAT_20000188,DAT_2000018c,2);\n      FUN_0800134e(&DAT_20000194,0);\n      FUN_08005c96(&DAT_20000194,&DAT_08007378);\n    }\n  }\n  uVar4 = DAT_2000018c;\n  uVar2 = DAT_20000188;\n  switch(DAT_20000238) {\n  case 0:\n    iVar3 = FUN_08000a04(DAT_20000188,DAT_2000018c,0,0x40490000);\n    if (iVar3 == 0) {\n      if (DAT_20000248 == '\\x01') {\n        FUN_08005cd4(&DAT_2000036c,\"Time Setpoint Input Output\");\n        DAT_20000250 = 0;\n        DAT_2000025c = FUN_080058e0();\n        DAT_20000240 = 0;\n        DAT_20000244 = 0x4062c000;\n        uVar5 = FUN_0800042c(DAT_20000258);\n        FUN_08001960(&DAT_200001c0,(int)((ulonglong)uVar5 >> 0x20),0,0,uVar5);\n        FUN_08001918(&DAT_200001c0,1000);\n        FUN_08001a44(&DAT_200001c0,1);\n        DAT_20000238 = 1;\n      }\n    }\n    else {\n      DAT_20000238 = 6;\n    }\n    break;\n  case 1:\n    DAT_20000239 = '\\x01';\n    iVar3 = FUN_08000a04(DAT_20000188,DAT_2000018c,0,0x4062c000);\n    if (iVar3 != 0) {\n      uVar5 = FUN_080058e0();\n      DAT_20000254 = (int)uVar5 + 9000;\n      FUN_080018f8(&DAT_200001c0,(int)((ulonglong)uVar5 >> 0x20),0,0x4072c000,0x9999999a,0x3fa99999,\n                   0,0x406f4000);\n      DAT_20000240 = 0;\n      DAT_20000244 = 0x40636000;\n      DAT_20000238 = 2;\n    }\n    break;\n  case 2:\n    uVar1 = FUN_080058e0();\n    if (DAT_20000254 < uVar1) {\n      iVar3 = FUN_080058e0();\n      DAT_20000254 = iVar3 + 9000;\n      uVar5 = FUN_08000194(DAT_20000240,DAT_20000244,0,0x40140000);\n      DAT_20000244 = (undefined4)((ulonglong)uVar5 >> 0x20);\n      DAT_20000240 = (undefined4)uVar5;\n      uVar5 = FUN_08000a18(DAT_20000240,DAT_20000244,0,0x40690000);\n      if ((int)uVar5 != 0) {\n        FUN_080018f8(&DAT_200001c0,(int)((ulonglong)uVar5 >> 0x20),0,0x4072c000,0x9999999a,\n                     0x3fa99999,0,0x4075e000);\n        DAT_20000240 = 0;\n        DAT_20000244 = 0x406f4000;\n        DAT_20000238 = 3;\n      }\n    }\n    break;\n  case 3:\n    uVar5 = FUN_08000a04(DAT_20000188,DAT_2000018c,0,0x406ea000);\n    if ((int)uVar5 != 0) {\n      FUN_080018f8(&DAT_200001c0,(int)((ulonglong)uVar5 >> 0x20),0,0x4072c000,0x9999999a,0x3fa99999,\n                   0,0x4075e000);\n      DAT_20000240 = 0;\n      DAT_20000244 = 0x40590000;\n      DAT_20000238 = 4;\n    }\n    break;\n  case 4:\n    iVar3 = FUN_080009f0(DAT_20000188,DAT_2000018c,0,0x40590000);\n    if (iVar3 != 0) {\n      iVar3 = FUN_080058e0();\n      DAT_20000180 = iVar3 + 1000;\n      FUN_08005848(DAT_20000004,1);\n      DAT_20000239 = '\\0';\n      DAT_20000238 = 5;\n    }\n    break;\n  case 5:\n    uVar1 = FUN_080058e0();\n    if (DAT_20000180 < uVar1) {\n      FUN_08005848(DAT_20000004,0);\n      DAT_20000238 = 0;\n    }\n    break;\n  case 6:\n    iVar3 = FUN_080009dc(DAT_20000188,DAT_2000018c,0,0x40490000);\n    if (iVar3 != 0) {\n      DAT_20000238 = 0;\n    }\n    break;\n  case 7:\n    iVar3 = FUN_080009c8(DAT_20000188,DAT_2000018c,0,0x40c38800);\n    if (((iVar3 == 0) && (iVar3 = FUN_080009c8(uVar2,uVar4,0,0x40c38880), iVar3 == 0)) &&\n       (iVar3 = FUN_080009c8(uVar2,uVar4,0,0x40c38900), iVar3 == 0)) {\n      DAT_20000238 = 0;\n    }\n    else {\n      DAT_20000238 = 7;\n    }\n  }\n  if ((DAT_20000248 == '\\x01') && (DAT_20000239 == '\\x01')) {\n    DAT_20000239 = '\\0';\n    DAT_20000238 = 0;\n  }\n  if (DAT_20000184 == '\\x01') {\n    iVar3 = FUN_08005754(DAT_20000068);\n    if (iVar3 == 0) {\n      iVar3 = FUN_080058e0();\n      if (0x32 < (uint)(iVar3 - DAT_20000190)) {\n        DAT_20000184 = '\\x02';\n      }\n    }\n    else {\n      DAT_20000184 = '\\0';\n    }\n  }\n  else if (DAT_20000184 == '\\0') {\n    DAT_20000248 = '\\0';\n    iVar3 = FUN_08005754(DAT_20000068);\n    if (iVar3 == 0) {\n      DAT_20000190 = FUN_080058e0();\n      DAT_20000184 = '\\x01';\n    }\n  }\n  else if ((DAT_20000184 == '\\x02') && (iVar3 = FUN_08005754(DAT_20000068), iVar3 != 0)) {\n    DAT_20000248 = '\\x01';\n    DAT_20000184 = '\\0';\n  }\n  if (DAT_20000239 == '\\x01') {\n    iVar3 = FUN_080058e0();\n    FUN_080016b4(&DAT_200001c0);\n    if (DAT_20000258 < (uint)(iVar3 - DAT_2000025c)) {\n      DAT_2000025c = DAT_2000025c + DAT_20000258;\n    }\n    uVar5 = FUN_0800040c(iVar3 - DAT_2000025c);\n    iVar3 = FUN_080009dc((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),DAT_200001b8,DAT_200001bc);\n    if (iVar3 == 0) {\n      FUN_08005848(DAT_20000064,0);\n    }\n    else {\n      FUN_08005848(DAT_20000064,1);\n    }\n  }\n  else {\n    FUN_08005848(DAT_20000064,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000cd0": "FUNC_08000cd0"
            },
            "calling": [
                "FUN_08005f6c"
            ],
            "called": [
                "FUN_08005f2c",
                "FUN_080009c8",
                "FUN_080015f8",
                "FUN_080018f8",
                "FUN_08005c96",
                "FUN_0800042c",
                "FUN_080016b4",
                "FUN_08005890",
                "FUN_080058e0",
                "FUN_08000194",
                "FUN_08005cd4",
                "FUN_08005848",
                "FUN_08005d82",
                "FUN_08001918",
                "FUN_08001366",
                "FUN_08000a18",
                "FUN_0800040c",
                "FUN_08005754",
                "FUN_08001a44",
                "FUN_08000a04",
                "FUN_080009f0",
                "FUN_080009dc",
                "FUN_0800134e",
                "FUN_0800135a",
                "FUN_08005f40",
                "FUN_08001960"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08001294": {
            "entrypoint": "0x08001294",
            "current_name": "set_parameters_08001294",
            "code": "\nvoid setParameters_08001294(int functionPointer,undefined paramA,undefined paramB,undefined paramC,\n                 undefined paramD)\n\n{\n  *(undefined *)(functionPointer + 0x18) = paramA;\n  *(undefined *)(functionPointer + 0x19) = paramB;\n  *(undefined *)(functionPointer + 0x1a) = paramC;\n  *(undefined *)(functionPointer + 0x1b) = paramD;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001294": "set_parameters_08001294",
                "param_1": "functionPointer",
                "param_2": "paramA",
                "param_3": "paramB",
                "param_4": "paramC",
                "param_5": "paramD"
            },
            "calling": [
                "FUN_080013a4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080012a2": {
            "entrypoint": "0x080012a2",
            "current_name": "execute_functions_080012a2",
            "code": "\nvoid executeFunctions_080012a2(int baseAddress)\n\n{\n  FUN_08005848(*(undefined *)(baseAddress + 10),0);\n  FUN_08005848(*(undefined *)(baseAddress + 10),1);\n  FUN_08005848(*(undefined *)(baseAddress + 10),0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080012a2": "execute_functions_080012a2",
                "param_1": "baseAddress"
            },
            "calling": [
                "FUN_080012c0",
                "FUN_080012e8"
            ],
            "called": [
                "FUN_08005848"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080012c0": {
            "entrypoint": "0x080012c0",
            "current_name": "apply_bitwise_operation_080012c0",
            "code": "\nvoid applyBitwiseOperation_080012c0(int dataAddress,int bitMask)\n\n{\n  uint counter;\n  \n  for (counter = 0; (int)counter < 4; counter = counter + 1) {\n    FUN_08005848(*(undefined *)(dataAddress + counter + 0xb),bitMask >> (counter & 0xff) & 1);\n  }\n  FUN_080012a2(dataAddress);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080012c0": "apply_bitwise_operation_080012c0",
                "param_1": "dataAddress",
                "param_2": "bitMask",
                "uVar1": "counter"
            },
            "calling": [
                "FUN_08001310",
                "FUN_080013a4"
            ],
            "called": [
                "FUN_080012a2",
                "FUN_08005848"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080012e8": {
            "entrypoint": "0x080012e8",
            "current_name": "process_data_080012e8",
            "code": "\nvoid process_data_080012e8(int data_address,int data_value)\n\n{\n  uint index;\n  \n  for (index = 0; (int)index < 8; index = index + 1) {\n    FUN_08005848(*(undefined *)(data_address + index + 0xb),data_value >> (index & 0xff) & 1);\n  }\n  FUN_080012a2(data_address);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080012e8": "process_data_080012e8",
                "param_1": "data_address",
                "param_2": "data_value",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08001310"
            ],
            "called": [
                "FUN_080012a2",
                "FUN_08005848"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001310": {
            "entrypoint": "0x08001310",
            "current_name": "process_binary_data_08001310",
            "code": "\nvoid processBinaryData_08001310(int binaryDataAddress,uint binaryDataSize,undefined4 param3,undefined4 param4)\n\n{\n  FUN_08005848(*(undefined *)(binaryDataAddress + 8),param3,param3,param4,param4);\n  if (*(char *)(binaryDataAddress + 9) != -1) {\n    FUN_08005848(*(char *)(binaryDataAddress + 9),0);\n  }\n  if ((*(byte *)(binaryDataAddress + 0x13) & 0x10) == 0) {\n    FUN_080012c0(binaryDataAddress,binaryDataSize >> 4);\n    FUN_080012c0(binaryDataAddress,binaryDataSize);\n    return;\n  }\n  FUN_080012e8(binaryDataAddress,binaryDataSize);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001310": "process_binary_data_08001310",
                "param_1": "binaryDataAddress",
                "param_2": "binaryDataSize",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [
                "FUN_0800138e",
                "FUN_0800134e",
                "FUN_08001550",
                "FUN_0800135a",
                "FUN_080013a4",
                "FUN_08001366"
            ],
            "called": [
                "FUN_08005848",
                "FUN_080012c0",
                "FUN_080012e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800134e": {
            "entrypoint": "0x0800134e",
            "current_name": "process_data_0800134e",
            "code": "\nundefined4 processData_0800134e(undefined4 data1,undefined4 data2,undefined4 data3,undefined4 data4)\n\n{\n  FUN_08001310(data1,data2,1,data4,data4);\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800134e": "process_data_0800134e",
                "param_1": "data1",
                "param_2": "data2",
                "param_3": "data3",
                "param_4": "data4"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800135a": {
            "entrypoint": "0x0800135a",
            "current_name": "initialize_function_0800135a",
            "code": "\nvoid initializeFunction_0800135a(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  FUN_08001310(arg1,1,0,arg4,arg4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800135a": "initialize_function_0800135a",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08000bcc",
                "FUN_080013a4"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001366": {
            "entrypoint": "0x08001366",
            "current_name": "update_character_08001366",
            "code": "\nvoid updateCharacter_08001366(int characterObject,char flag,uint limit,undefined4 parameterObject)\n\n{\n  char charValue;\n  \n  if (3 < limit) {\n    limit = 3;\n  }\n  if ((int)(uint)*(byte *)(characterObject + 0x17) <= (int)limit) {\n    limit = *(byte *)(characterObject + 0x17) - 1 & 0xff;\n  }\n  charValue = *(char *)(limit + characterObject + 0x18);\n  FUN_08001310(characterObject,flag + charValue | 0x80,0,charValue,parameterObject);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001366": "update_character_08001366",
                "param_1": "characterObject",
                "param_2": "flag",
                "param_3": "limit",
                "param_4": "parameterObject",
                "cVar1": "charValue"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800138e": {
            "entrypoint": "0x0800138e",
            "current_name": "set_flag_and_call_function_0800138e",
            "code": "\nvoid setFlagAndCallFunction_0800138e(int dataPtr,undefined4 temp1,undefined4 temp2,undefined4 temp3)\n\n{\n  byte originalFlagValue;\n  \n  originalFlagValue = *(byte *)(dataPtr + 0x14);\n  *(byte *)(dataPtr + 0x14) = originalFlagValue | 4;\n  FUN_08001310(dataPtr,originalFlagValue | 0xc,0,temp3,temp3);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800138e": "set_flag_and_call_function_0800138e",
                "param_1": "dataPtr",
                "param_2": "temp1",
                "param_3": "temp2",
                "param_4": "temp3",
                "bVar1": "originalFlagValue"
            },
            "calling": [
                "FUN_080013a4"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080013a4": {
            "entrypoint": "0x080013a4",
            "current_name": "initialize_params_080013a4",
            "code": "\nvoid initializeParams_080013a4(int ptr,int data,int size,int flag)\n\n{\n  int loopIndex1;\n  int loopIndex2;\n  \n  if (1 < size) {\n    *(byte *)(ptr + 0x13) = *(byte *)(ptr + 0x13) | 8;\n  }\n  *(char *)(ptr + 0x17) = (char)size;\n  FUN_08001294(ptr,0,0x40,data,data + 0x40);\n  if ((flag != 0) && (size == 1)) {\n    *(byte *)(ptr + 0x13) = *(byte *)(ptr + 0x13) | 4;\n  }\n  FUN_080057b4(*(undefined *)(ptr + 8),1);\n  if (*(char *)(ptr + 9) != -1) {\n    FUN_080057b4(*(char *)(ptr + 9),1);\n  }\n  FUN_080057b4(*(undefined *)(ptr + 10),1);\n  loopIndex2 = 0;\n  while( true ) {\n    if ((*(byte *)(ptr + 0x13) & 0x10) == 0) {\n      loopIndex1 = 4;\n    }\n    else {\n      loopIndex1 = 8;\n    }\n    if (loopIndex1 <= loopIndex2) break;\n    FUN_080057b4(*(undefined *)(ptr + loopIndex2 + 0xb),1);\n    loopIndex2 = loopIndex2 + 1;\n  }\n  FUN_08005848(*(undefined *)(ptr + 8),0);\n  FUN_08005848(*(undefined *)(ptr + 10),0);\n  if (*(char *)(ptr + 9) != -1) {\n    FUN_08005848(*(char *)(ptr + 9),0);\n  }\n  if ((*(byte *)(ptr + 0x13) & 0x10) == 0) {\n    FUN_080012c0(ptr,3);\n    FUN_080012c0(ptr,3);\n    FUN_080012c0(ptr,3);\n    FUN_080012c0(ptr,2);\n  }\n  else {\n    FUN_08001310(ptr,*(byte *)(ptr + 0x13) | 0x20,0);\n    FUN_08001310(ptr,*(byte *)(ptr + 0x13) | 0x20,0);\n    FUN_08001310(ptr,*(byte *)(ptr + 0x13) | 0x20,0);\n  }\n  FUN_08001310(ptr,*(byte *)(ptr + 0x13) | 0x20,0);\n  *(undefined *)(ptr + 0x14) = 4;\n  FUN_0800138e(ptr);\n  FUN_0800135a(ptr);\n  *(undefined *)(ptr + 0x15) = 2;\n  FUN_08001310(ptr,6,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080013a4": "initialize_params_080013a4",
                "param_1": "ptr",
                "param_2": "data",
                "param_3": "size",
                "param_4": "flag",
                "iVar1": "loopIndex1",
                "iVar2": "loopIndex2"
            },
            "calling": [
                "FUN_080014ba",
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_0800138e",
                "FUN_08001310",
                "FUN_0800135a",
                "FUN_08005848",
                "FUN_080012c0",
                "FUN_080057b4",
                "FUN_08001294"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080014ba": {
            "entrypoint": "0x080014ba",
            "current_name": "initialize_parameters_080014ba",
            "code": "\nvoid initializeParameters_080014ba(int data_structure,int flag,undefined value_1,undefined4 value_2,undefined value_3,\n                 undefined value_4,undefined value_5,undefined value_6,undefined value_7,\n                 undefined value_8,undefined value_9,undefined value_10,undefined value_11)\n\n{\n  *(undefined *)(data_structure + 8) = value_1;\n  *(char *)(data_structure + 9) = (char)value_2;\n  *(undefined *)(data_structure + 10) = value_3;\n  *(undefined *)(data_structure + 0xb) = value_4;\n  *(undefined *)(data_structure + 0xc) = value_5;\n  *(undefined *)(data_structure + 0xd) = value_6;\n  *(undefined *)(data_structure + 0xe) = value_7;\n  *(undefined *)(data_structure + 0xf) = value_8;\n  *(undefined *)(data_structure + 0x10) = value_9;\n  *(undefined *)(data_structure + 0x11) = value_10;\n  *(undefined *)(data_structure + 0x12) = value_11;\n  if (flag == 0) {\n    *(undefined *)(data_structure + 0x13) = 0x10;\n  }\n  else {\n    *(undefined *)(data_structure + 0x13) = 0;\n  }\n  FUN_080013a4(data_structure,0x10,1,0,value_2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080014ba": "initialize_parameters_080014ba",
                "param_1": "data_structure",
                "param_2": "flag",
                "param_3": "value_1",
                "param_4": "value_2",
                "param_5": "value_3",
                "param_6": "value_4",
                "param_7": "value_5",
                "param_8": "value_6",
                "param_9": "value_7",
                "param_10": "value_8",
                "param_11": "value_9",
                "param_12": "value_10",
                "param_13": "value_11"
            },
            "calling": [
                "FUN_08001510"
            ],
            "called": [
                "FUN_080013a4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001510": {
            "entrypoint": "0x08001510",
            "current_name": "initialize_function_08001510",
            "code": "\nundefined4 *\ninitializeFunction_08001510(undefined4 *result,undefined4 input1,undefined4 input2,undefined4 input3,\n            undefined flag1,undefined flag2,undefined flag3)\n\n{\n  result[1] = 0;\n  *result = &PTR_FUN_0800134e_1_080073f8;\n  FUN_080014ba(result,1,input1,0xff,input2,input3,flag1,flag2,flag3,0,0,0,0);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08001510": "initialize_function_08001510",
                "param_1": "result",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "input3",
                "param_5": "flag1",
                "param_6": "flag2",
                "param_7": "flag3"
            },
            "calling": [
                "FUN_08000b08"
            ],
            "called": [
                "FUN_080014ba"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001550": {
            "entrypoint": "0x08001550",
            "current_name": "process_data_08001550",
            "code": "\nvoid processData_08001550(undefined4 *dataPtr,uint dataSize,int sourceOffset)\n\n{\n  int i;\n  \n  FUN_08001310(dataPtr,(dataSize & 7) << 3 | 0x40,0);\n  for (i = 0; i < 8; i = i + 1) {\n    (**(code **)*dataPtr)(dataPtr,*(undefined *)(sourceOffset + i));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001550": "process_data_08001550",
                "param_1": "dataPtr",
                "param_2": "dataSize",
                "param_3": "sourceOffset",
                "iVar1": "i"
            },
            "calling": [
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800157c": {
            "entrypoint": "0x0800157c",
            "current_name": "initialize_data_0800157c",
            "code": "\nundefined * initializeData_0800157c(undefined *data,undefined4 value1,undefined value2,undefined value3)\n\n{\n  *data = (char)value1;\n  data[1] = value2;\n  data[2] = value3;\n  FUN_080057b4(value1,0);\n  FUN_080057b4(data[1],1);\n  FUN_080057b4(data[2],1);\n  FUN_08005848(data[1],1);\n  FUN_08005848(data[2],0);\n  return data;\n}\n\n",
            "renaming": {
                "FUN_0800157c": "initialize_data_0800157c",
                "param_1": "data",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3"
            },
            "calling": [
                "FUN_08000b08"
            ],
            "called": [
                "FUN_08005848",
                "FUN_080057b4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080015b2": {
            "entrypoint": "0x080015b2",
            "current_name": "calculate_binary_value_080015b2",
            "code": "\nuint calculateBinaryValue_080015b2(undefined *inputArray)\n\n{\n  int result;\n  uint bitIndex;\n  uint binaryValue;\n  \n  FUN_08005848(inputArray[1],0);\n  binaryValue = 0;\n  for (bitIndex = 0x1f; -1 < (int)bitIndex; bitIndex = bitIndex - 1) {\n    FUN_08005848(inputArray[2],1);\n    result = FUN_08005890(*inputArray);\n    if (result != 0) {\n      binaryValue = binaryValue | 1 << (bitIndex & 0xff);\n    }\n    FUN_08005848(inputArray[2],0);\n  }\n  FUN_08005848(inputArray[1],1);\n  return binaryValue;\n}\n\n",
            "renaming": {
                "FUN_080015b2": "calculate_binary_value_080015b2",
                "param_1": "inputArray",
                "iVar1": "result",
                "uVar2": "bitIndex",
                "uVar3": "binaryValue"
            },
            "calling": [
                "FUN_080015f8"
            ],
            "called": [
                "FUN_08005848",
                "FUN_08005890"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080015f8": {
            "entrypoint": "0x080015f8",
            "current_name": "calculate_result_080015f8",
            "code": "\nundefined8 calculateResult_080015f8(undefined4 input_1,int input_2,undefined4 input_3,undefined4 input_4)\n\n{\n  uint result_1;\n  undefined8 result_2;\n  \n  result_1 = FUN_080015b2();\n  if ((result_1 & 0x10000) == 0) {\n    result_1 = result_1 >> 0x12;\n    result_2 = FUN_0800040c(result_1 & 0x1fff);\n    if ((result_1 & 0x2000) != 0) {\n      result_2 = FUN_0800040c(~result_1 & 0x1fff);\n      result_2 = FUN_08000194((int)result_2,(int)((ulonglong)result_2 >> 0x20),0,0x3ff00000,input_4);\n      result_2 = CONCAT44((int)((ulonglong)result_2 >> 0x20) + -0x80000000,(int)result_2);\n    }\n    result_2 = FUN_080004f8((int)result_2,(int)((ulonglong)result_2 >> 0x20),0,0x3fd00000);\n    if (input_2 == 1) {\n      result_2 = FUN_080004f8((int)result_2,(int)((ulonglong)result_2 >> 0x20),0,0x40220000);\n      result_2 = FUN_0800074c((int)result_2,(int)((ulonglong)result_2 >> 0x20),0,0x40140000);\n      result_2 = FUN_08000194((int)result_2,(int)((ulonglong)result_2 >> 0x20),0,0x40400000);\n      return result_2;\n    }\n  }\n  else {\n    result_1 = result_1 & 7;\n    if (result_1 == 2) {\n      return 0x40c3888000000000;\n    }\n    if (result_1 == 4) {\n      return 0x40c3890000000000;\n    }\n    if (result_1 != 1) {\n      return 0;\n    }\n    result_2 = 0x40c3880000000000;\n  }\n  return result_2;\n}\n\n",
            "renaming": {
                "FUN_080015f8": "calculate_result_080015f8",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "result_1",
                "uVar2": "result_2"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080004f8",
                "FUN_08000194",
                "FUN_0800040c",
                "FUN_080015b2",
                "FUN_0800074c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080016b4": {
            "entrypoint": "0x080016b4",
            "current_name": "process_data_080016b4",
            "code": "\nchar processData_080016b4(int data)\n\n{\n  char result;\n  int value1;\n  int value2;\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  undefined4 temp4;\n  undefined4 temp5;\n  undefined4 temp6;\n  undefined4 temp7;\n  char flag;\n  undefined4 temp8;\n  undefined4 temp9;\n  undefined4 temp10;\n  undefined8 temp11;\n  undefined8 temp12;\n  undefined8 temp13;\n  undefined8 temp14;\n  undefined4 temp15;\n  undefined4 temp16;\n  \n  flag = *(char *)(data + 0x70);\n  if (flag != '\\0') {\n    value1 = FUN_080058e0();\n    if ((uint)(value1 - *(int *)(data + 0x44)) < *(uint *)(data + 0x58)) {\n      flag = '\\0';\n    }\n    else {\n      temp2 = **(undefined4 **)(data + 0x38);\n      temp5 = (*(undefined4 **)(data + 0x38))[1];\n      temp11 = FUN_08000190(**(undefined4 **)(data + 0x40),(*(undefined4 **)(data + 0x40))[1])\n      ;\n      temp10 = (undefined4)((ulonglong)temp11 >> 0x20);\n      temp12 = FUN_08000190(temp2,temp5,*(undefined4 *)(data + 0x50),\n                            *(undefined4 *)(data + 0x54));\n      temp1 = (undefined4)((ulonglong)temp12 >> 0x20);\n      temp13 = FUN_080004f8((int)temp11,temp10,*(undefined4 *)(data + 0x20),\n                            *(undefined4 *)(data + 0x24));\n      temp13 = FUN_08000194((int)temp13,(int)((ulonglong)temp13 >> 0x20),\n                            *(undefined4 *)(data + 0x48),*(undefined4 *)(data + 0x4c));\n      *(undefined8 *)(data + 0x48) = temp13;\n      result = *(char *)(data + 0x71);\n      if (result == '\\0') {\n        temp14 = FUN_080004f8((int)temp12,temp1,*(undefined4 *)(data + 0x18),\n                              *(undefined4 *)(data + 0x1c));\n        temp13 = FUN_08000190((int)temp13,(int)((ulonglong)temp13 >> 0x20),(int)temp14,\n                              (int)((ulonglong)temp14 >> 0x20));\n        *(undefined8 *)(data + 0x48) = temp13;\n      }\n      temp3 = *(undefined4 *)(data + 0x48);\n      temp6 = *(undefined4 *)(data + 0x4c);\n      temp8 = *(undefined4 *)(undefined8 *)(data + 0x68);\n      temp9 = *(undefined4 *)(data + 0x6c);\n      temp13 = *(undefined8 *)(data + 0x68);\n      value2 = FUN_08000a18(temp3,temp6,temp8,temp9);\n      if (value2 == 0) {\n        temp4 = *(undefined4 *)(data + 0x60);\n        temp7 = *(undefined4 *)(data + 100);\n        value2 = FUN_080009dc(temp3,temp6);\n        if (value2 != 0) {\n          *(undefined4 *)(data + 0x48) = temp4;\n          *(undefined4 *)(data + 0x4c) = temp7;\n        }\n      }\n      else {\n        *(undefined4 *)(data + 0x48) = temp8;\n        *(undefined4 *)(data + 0x4c) = temp9;\n      }\n      if (result == '\\0') {\n        temp11 = 0;\n      }\n      else {\n        temp11 = FUN_080004f8((int)temp11,temp10,*(undefined4 *)(data + 0x18),\n                              *(undefined4 *)(data + 0x1c));\n      }\n      temp16 = (undefined4)((ulonglong)temp11 >> 0x20);\n      temp15 = (undefined4)temp11;\n      temp10 = *(undefined4 *)(data + 0x48);\n      temp3 = *(undefined4 *)(data + 0x4c);\n      temp11 = FUN_080004f8((int)temp12,temp1,*(undefined4 *)(data + 0x28),\n                            *(undefined4 *)(data + 0x2c));\n      temp11 = FUN_08000190(temp10,temp3,(int)temp11,(int)((ulonglong)temp11 >> 0x20));\n      temp11 = FUN_08000194(temp15,temp16,(int)temp11,(int)((ulonglong)temp11 >> 0x20));\n      temp10 = (undefined4)((ulonglong)temp11 >> 0x20);\n      value2 = FUN_080009dc(temp8,temp9,(int)temp11,temp10);\n      if (value2 == 0) {\n        temp13 = *(undefined8 *)(data + 0x60);\n        value2 = FUN_080009dc((int)temp11,temp10,*(undefined4 *)(undefined8 *)(data + 0x60),\n                             *(undefined4 *)(data + 100));\n        if (value2 == 0) {\n          temp13 = temp11;\n        }\n      }\n      **(undefined8 **)(data + 0x3c) = temp13;\n      *(undefined4 *)(data + 0x50) = temp2;\n      *(undefined4 *)(data + 0x54) = temp5;\n      *(int *)(data + 0x44) = value1;\n    }\n  }\n  return flag;\n}\n\n",
            "renaming": {
                "FUN_080016b4": "process_data_080016b4",
                "param_1": "data",
                "cVar1": "result",
                "iVar2": "value1",
                "iVar3": "value2",
                "uVar4": "temp1",
                "uVar5": "temp2",
                "uVar6": "temp3",
                "uVar7": "temp4",
                "uVar8": "temp5",
                "uVar9": "temp6",
                "uVar10": "temp7",
                "cVar11": "flag",
                "uVar12": "temp8",
                "uVar13": "temp9",
                "uVar14": "temp10",
                "uVar15": "temp11",
                "uVar16": "temp12",
                "uVar17": "temp13",
                "uVar18": "temp14",
                "local_38": "temp15",
                "uStack_34": "temp16"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08000a18",
                "FUN_08000194",
                "FUN_08000190",
                "FUN_080004f8",
                "FUN_080009dc",
                "FUN_080058e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001814": {
            "entrypoint": "0x08001814",
            "current_name": "initialize_data_08001814",
            "code": "\nvoid initializeData_08001814(undefined4 *output,undefined4 unused_param,undefined4 input1,undefined4 input2,\n                 undefined4 input3,undefined4 input4,undefined4 input5,undefined4 input6,\n                 int flag)\n\n{\n  int result;\n  undefined4 temp;\n  undefined flag_val;\n  bool is_flag_true;\n  undefined8 temp2;\n  undefined8 temp3;\n  undefined8 temp4;\n  \n  result = FUN_080009dc(input1,input2,0,0);\n  if (((result == 0) && (result = FUN_080009dc(input3,input4,0,0), result == 0)) &&\n     (result = FUN_080009dc(input5,input6,0,0), result == 0)) {\n    output[0xd] = flag;\n    is_flag_true = flag != 1;\n    if (is_flag_true) {\n      flag = 0;\n    }\n    flag_val = (undefined)flag;\n    if (!is_flag_true) {\n      flag_val = 1;\n    }\n    *(undefined *)((int)output + 0x71) = flag_val;\n    *output = input1;\n    output[1] = input2;\n    output[2] = input3;\n    output[3] = input4;\n    output[4] = input5;\n    output[5] = input6;\n    temp2 = FUN_0800040c(output[0x16]);\n    temp2 = FUN_0800074c((int)temp2,(int)((ulonglong)temp2 >> 0x20),0,0x408f4000);\n    temp = (undefined4)((ulonglong)temp2 >> 0x20);\n    output[6] = input1;\n    output[7] = input2;\n    temp3 = FUN_080004f8(input3,input4,(int)temp2,temp);\n    *(undefined8 *)(output + 8) = temp3;\n    temp2 = FUN_0800074c(input5,input6,(int)temp2,temp);\n    *(undefined8 *)(output + 10) = temp2;\n    if (output[0xc] == 1) {\n      temp4 = FUN_08000190(0,0,input1,input2);\n      *(undefined8 *)(output + 6) = temp4;\n      temp3 = FUN_08000190(0,0,(int)temp3,(int)((ulonglong)temp3 >> 0x20));\n      *(undefined8 *)(output + 8) = temp3;\n      temp2 = FUN_08000190(0,0,(int)temp2,(int)((ulonglong)temp2 >> 0x20));\n      *(undefined8 *)(output + 10) = temp2;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001814": "initialize_data_08001814",
                "param_1": "output",
                "param_2": "unused_param",
                "param_3": "input1",
                "param_4": "input2",
                "param_5": "input3",
                "param_6": "input4",
                "param_7": "input5",
                "param_8": "input6",
                "param_9": "flag",
                "iVar1": "result",
                "uVar2": "temp",
                "uVar3": "flag_val",
                "bVar4": "is_flag_true",
                "uVar5": "temp2",
                "uVar6": "temp3",
                "uVar7": "temp4"
            },
            "calling": [
                "FUN_080018f8",
                "FUN_08001ab0"
            ],
            "called": [
                "FUN_08000190",
                "FUN_080004f8",
                "FUN_080009dc",
                "FUN_0800040c",
                "FUN_0800074c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080018f8": {
            "entrypoint": "0x080018f8",
            "current_name": "initialize_application_080018f8",
            "code": "\nvoid initializeApplication_080018f8(void)\n\n{\n  FUN_08001814();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080018f8": "initialize_application_080018f8"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08001814"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001918": {
            "entrypoint": "0x08001918",
            "current_name": "update_data_08001918",
            "code": "\nvoid updateData_08001918(int data,int size,undefined4 var_3,undefined4 var_4)\n\n{\n  undefined4 var_1;\n  undefined8 ptr_2;\n  undefined8 ptr_3;\n  \n  if (0 < size) {\n    ptr_2 = FUN_0800042c(size);\n    ptr_3 = FUN_0800040c(*(undefined4 *)(data + 0x58));\n    ptr_2 = FUN_0800074c((int)ptr_2,(int)((ulonglong)ptr_2 >> 0x20),(int)ptr_3,\n                         (int)((ulonglong)ptr_3 >> 0x20),var_4);\n    var_1 = (undefined4)((ulonglong)ptr_2 >> 0x20);\n    ptr_3 = FUN_080004f8((int)ptr_2,var_1,*(undefined4 *)(data + 0x20),\n                         *(undefined4 *)(data + 0x24));\n    *(undefined8 *)(data + 0x20) = ptr_3;\n    ptr_2 = FUN_0800074c(*(undefined4 *)(data + 0x28),*(undefined4 *)(data + 0x2c),(int)ptr_2,\n                         var_1);\n    *(undefined8 *)(data + 0x28) = ptr_2;\n    *(int *)(data + 0x58) = size;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001918": "update_data_08001918",
                "param_1": "data",
                "param_2": "size",
                "param_3": "var_3",
                "param_4": "var_4",
                "uVar1": "var_1",
                "uVar2": "ptr_2",
                "uVar3": "ptr_3"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080004f8",
                "FUN_0800040c",
                "FUN_0800042c",
                "FUN_0800074c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001960": {
            "entrypoint": "0x08001960",
            "current_name": "update_params_08001960",
            "code": "\nvoid updateParams_08001960(int objectAddress,undefined4 param2,undefined4 newParam1,undefined4 newParam2,\n                 undefined4 newParam3,undefined4 newParam4)\n\n{\n  int result;\n  undefined4 *ptr;\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  undefined4 value4;\n  \n  result = FUN_08000a04(newParam1,newParam2,newParam3,newParam4,newParam2);\n  if (result == 0) {\n    *(undefined4 *)(objectAddress + 0x60) = newParam1;\n    *(undefined4 *)(objectAddress + 100) = newParam2;\n    *(undefined4 *)(objectAddress + 0x68) = newParam3;\n    *(undefined4 *)(objectAddress + 0x6c) = newParam4;\n    if (*(char *)(objectAddress + 0x70) != '\\0') {\n      ptr = *(undefined4 **)(objectAddress + 0x3c);\n      value1 = *ptr;\n      value3 = ptr[1];\n      result = FUN_080009dc(newParam3,newParam4,value1,value3);\n      if (result == 0) {\n        result = FUN_08000a18(newParam1,newParam2,value1,value3);\n        if (result != 0) {\n          *ptr = newParam1;\n          ptr[1] = newParam2;\n        }\n      }\n      else {\n        *ptr = newParam3;\n        ptr[1] = newParam4;\n      }\n      value1 = *(undefined4 *)(objectAddress + 0x48);\n      value3 = *(undefined4 *)(objectAddress + 0x4c);\n      value2 = *(undefined4 *)(objectAddress + 0x68);\n      value4 = *(undefined4 *)(objectAddress + 0x6c);\n      result = FUN_08000a18(value1,value3,value2,value4);\n      if (result != 0) {\n        *(undefined4 *)(objectAddress + 0x48) = value2;\n        *(undefined4 *)(objectAddress + 0x4c) = value4;\n        return;\n      }\n      value2 = *(undefined4 *)(objectAddress + 0x60);\n      value4 = *(undefined4 *)(objectAddress + 100);\n      result = FUN_080009dc(value1,value3,value2,value4);\n      if (result != 0) {\n        *(undefined4 *)(objectAddress + 0x48) = value2;\n        *(undefined4 *)(objectAddress + 0x4c) = value4;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001960": "update_params_08001960",
                "param_1": "objectAddress",
                "param_2": "param2",
                "param_3": "newParam1",
                "param_4": "newParam2",
                "param_5": "newParam3",
                "param_6": "newParam4",
                "iVar1": "result",
                "puVar2": "ptr",
                "uVar3": "value1",
                "uVar4": "value2",
                "uVar5": "value3",
                "uVar6": "value4"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08001ab0"
            ],
            "called": [
                "FUN_08000a18",
                "FUN_08000a04",
                "FUN_080009dc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080019f6": {
            "entrypoint": "0x080019f6",
            "current_name": "extract_data_080019f6",
            "code": "\nvoid extractData_080019f6(int dataAddress)\n\n{\n  int returnValue;\n  undefined4 ptr1;\n  undefined4 ptr2;\n  undefined4 ptr3;\n  undefined4 ptr4;\n  \n  ptr2 = **(undefined4 **)(dataAddress + 0x3c);\n  ptr3 = (*(undefined4 **)(dataAddress + 0x3c))[1];\n  *(undefined4 *)(dataAddress + 0x48) = ptr2;\n  *(undefined4 *)(dataAddress + 0x4c) = ptr3;\n  ptr1 = (*(undefined4 **)(dataAddress + 0x38))[1];\n  *(undefined4 *)(dataAddress + 0x50) = **(undefined4 **)(dataAddress + 0x38);\n  *(undefined4 *)(dataAddress + 0x54) = ptr1;\n  ptr1 = *(undefined4 *)(dataAddress + 0x68);\n  ptr4 = *(undefined4 *)(dataAddress + 0x6c);\n  returnValue = FUN_08000a18(ptr2,ptr3,ptr1,ptr4);\n  if (returnValue == 0) {\n    ptr1 = *(undefined4 *)(dataAddress + 0x60);\n    ptr4 = *(undefined4 *)(dataAddress + 100);\n    returnValue = FUN_080009dc(ptr2,ptr3,ptr1,ptr4);\n    if (returnValue != 0) {\n      *(undefined4 *)(dataAddress + 0x48) = ptr1;\n      *(undefined4 *)(dataAddress + 0x4c) = ptr4;\n    }\n    return;\n  }\n  *(undefined4 *)(dataAddress + 0x48) = ptr1;\n  *(undefined4 *)(dataAddress + 0x4c) = ptr4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080019f6": "extract_data_080019f6",
                "param_1": "dataAddress",
                "iVar1": "returnValue",
                "uVar2": "ptr1",
                "uVar3": "ptr2",
                "uVar4": "ptr3",
                "uVar5": "ptr4"
            },
            "calling": [
                "FUN_08001a44"
            ],
            "called": [
                "FUN_08000a18",
                "FUN_080009dc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001a44": {
            "entrypoint": "0x08001a44",
            "current_name": "update_param_value_08001a44",
            "code": "\nvoid updateParamValue_08001a44(int paramAddr,int flag)\n\n{\n  undefined newValue;\n  \n  if (flag == 1) {\n    newValue = 1;\n    if (*(char *)(paramAddr + 0x70) == '\\0') {\n      FUN_080019f6();\n    }\n  }\n  else {\n    newValue = 0;\n  }\n  *(undefined *)(paramAddr + 0x70) = newValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001a44": "update_param_value_08001a44",
                "param_1": "paramAddr",
                "param_2": "flag",
                "uVar1": "newValue"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080019f6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001a66": {
            "entrypoint": "0x08001a66",
            "current_name": "update_parameters_08001a66",
            "code": "\nvoid updateParameters_08001a66(int ptr,int newValue,undefined4 param_3,undefined4 param_4)\n\n{\n  undefined8 result;\n  \n  if ((*(char *)(ptr + 0x70) != '\\0') && (*(int *)(ptr + 0x30) != newValue)) {\n    result = FUN_08000190(0,0,*(undefined4 *)(ptr + 0x18),*(undefined4 *)(ptr + 0x1c),param_4\n                        );\n    *(undefined8 *)(ptr + 0x18) = result;\n    result = FUN_08000190(0,0,*(undefined4 *)(ptr + 0x20),*(undefined4 *)(ptr + 0x24));\n    *(undefined8 *)(ptr + 0x20) = result;\n    result = FUN_08000190(0,0,*(undefined4 *)(ptr + 0x28),*(undefined4 *)(ptr + 0x2c));\n    *(undefined8 *)(ptr + 0x28) = result;\n  }\n  *(int *)(ptr + 0x30) = newValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001a66": "update_parameters_08001a66",
                "param_1": "ptr",
                "param_2": "newValue",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08001ab0"
            ],
            "called": [
                "FUN_08000190"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001ab0": {
            "entrypoint": "0x08001ab0",
            "current_name": "initialize_memory_08001ab0",
            "code": "\nint initializeMemory_08001ab0(int memoryAddress,undefined4 value1,undefined4 value2,undefined4 value3,\n                undefined4 value4,undefined4 value5,undefined4 value6,undefined4 value7,\n                undefined4 value8,undefined4 value9,undefined4 value10,undefined4 value11)\n\n{\n  int result;\n  undefined4 extraVariable;\n  \n  *(undefined4 *)(memoryAddress + 0x3c) = value2;\n  *(undefined4 *)(memoryAddress + 0x38) = value1;\n  *(undefined4 *)(memoryAddress + 0x40) = value3;\n  *(undefined *)(memoryAddress + 0x70) = 0;\n  FUN_08001960(memoryAddress,value1,0,0,0,0x406fe000);\n  *(undefined4 *)(memoryAddress + 0x58) = 100;\n  FUN_08001a66(memoryAddress,value11);\n  FUN_08001814(memoryAddress,extraVariable,value4,value5,value6,value7,value8,value9,value10);\n  result = FUN_080058e0();\n  *(int *)(memoryAddress + 0x44) = result - *(int *)(memoryAddress + 0x58);\n  return memoryAddress;\n}\n\n",
            "renaming": {
                "FUN_08001ab0": "initialize_memory_08001ab0",
                "param_1": "memoryAddress",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "value4",
                "param_6": "value5",
                "param_7": "value6",
                "param_8": "value7",
                "param_9": "value8",
                "param_10": "value9",
                "param_11": "value10",
                "param_12": "value11",
                "iVar1": "result",
                "extraout_r1": "extraVariable"
            },
            "calling": [
                "FUN_08001b18"
            ],
            "called": [
                "FUN_08001814",
                "FUN_08001960",
                "FUN_080058e0",
                "FUN_08001a66"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001b18": {
            "entrypoint": "0x08001b18",
            "current_name": "initialize_08001b18",
            "code": "\nundefined4 initialize_08001b18(undefined4 input)\n\n{\n  FUN_08001ab0();\n  return input;\n}\n\n",
            "renaming": {
                "FUN_08001b18": "initialize_08001b18",
                "param_1": "input"
            },
            "calling": [
                "FUN_08000b08"
            ],
            "called": [
                "FUN_08001ab0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001b48": {
            "entrypoint": "0x08001b48",
            "current_name": "initialize_board_08001b48",
            "code": "\nvoid initializeBoard_08001b48(void)\n\n{\n  int result;\n  uint timeInMilliseconds;\n  undefined4 buffer1 [2];\n  undefined4 buffer2;\n  undefined4 buffer3;\n  undefined4 buffer4;\n  undefined4 buffer5;\n  undefined4 buffer6;\n  undefined4 buffer7;\n  undefined4 buffer8 [4];\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  undefined4 value4;\n  undefined4 value5;\n  \n  buffer8[0] = 2;\n  value1 = 1;\n  value2 = 0x10;\n  value3 = 2;\n  value4 = 0;\n  value5 = 0x380000;\n  result = FUN_08003688(buffer8);\n  if (result != 0) {\n    FUN_08004d40(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x88);\n  }\n  buffer3 = 0xf;\n  buffer4 = 2;\n  buffer5 = 0;\n  buffer6 = 0x400;\n  buffer7 = 0;\n  result = FUN_08003ad4(&buffer3);\n  if (result != 0) {\n    FUN_08004d40(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x95);\n  }\n  buffer1[0] = 2;\n  buffer2 = 0x8000;\n  result = FUN_08003c90(buffer1);\n  if (result != 0) {\n    FUN_08004d40(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x9c);\n  }\n  timeInMilliseconds = FUN_08003c44();\n  FUN_08002514(timeInMilliseconds / 1000);\n  FUN_08002560(4);\n  FUN_08002494(0xffffffff,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001b48": "initialize_board_08001b48",
                "iVar1": "result",
                "uVar2": "timeInMilliseconds",
                "local_54": "buffer1",
                "local_4c": "buffer2",
                "local_44": "buffer3",
                "local_40": "buffer4",
                "local_3c": "buffer5",
                "local_38": "buffer6",
                "local_34": "buffer7",
                "local_30": "buffer8",
                "local_20": "value1",
                "local_1c": "value2",
                "local_14": "value3",
                "local_10": "value4",
                "local_c": "value5"
            },
            "calling": [
                "FUN_08004c52"
            ],
            "called": [
                "FUN_08002494",
                "FUN_08003c90",
                "FUN_08002560",
                "FUN_08002514",
                "FUN_08004d40",
                "FUN_08003c44",
                "FUN_08003ad4",
                "FUN_08003688"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "entry": {
            "entrypoint": "0x08001be8",
            "current_name": "entry",
            "code": "\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined *)(iVar1 + 0x20000000) < &DAT_2000015c; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x8007970);\n  }\n  for (puVar2 = &DAT_20000160; puVar2 < &DAT_200006a8; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  FUN_08004d44();\n  FUN_08006198();\n  UNRECOVERED_JUMPTABLE = (code *)0x8001c1a;\n  FUN_08005f6c();\n                    /* WARNING: Could not recover jumptable at 0x08001c1a. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "renaming": {},
            "calling": [],
            "called": [
                "FUN_08006198",
                "FUN_08004d44",
                "FUN_08005f6c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c32": {
            "entrypoint": "0x08001c32",
            "current_name": "execute_initialization_08001c32",
            "code": "\nvoid execute_initialization_08001c32(void)\n\n{\n  FUN_08004c52();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001c32": "execute_initialization_08001c32"
            },
            "calling": [
                "FUN_08005f5e"
            ],
            "called": [
                "FUN_08004c52"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c3a": {
            "entrypoint": "0x08001c3a",
            "current_name": "FUNC_08001c3a",
            "code": "\nvoid FUNC_08001c3a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001c3a": "FUNC_08001c3a"
            },
            "calling": [
                "FUN_08001c88"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08001c3c": {
            "entrypoint": "0x08001c3c",
            "current_name": "initialize_parameter_08001c3c",
            "code": "\nundefined4 initializeParameter_08001c3c(uint inputValue)\n\n{\n  int result;\n  \n  result = FUN_08002514(DAT_20000084 / (1000 / DAT_20000078));\n  if (result != 0) {\n    return 1;\n  }\n  if (0xf < inputValue) {\n    return 1;\n  }\n  FUN_08002494(0xffffffff,inputValue,0);\n  DAT_2000007c = inputValue;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001c3c": "initialize_parameter_08001c3c",
                "param_1": "inputValue",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08003afa",
                "FUN_08001c88"
            ],
            "called": [
                "FUN_08002494",
                "FUN_08002514"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c88": {
            "entrypoint": "0x08001c88",
            "current_name": "initialize_data_08001c88",
            "code": "\n\n\nundefined4 initializeData_08001c88(void)\n\n{\n  _DAT_40022000 = _DAT_40022000 | 0x10;\n  FUN_08002470(3);\n  FUN_08001c3c(0xf);\n  FUNC_08001c3a();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001c88": "initialize_data_08001c88"
            },
            "calling": [
                "FUN_08004c52"
            ],
            "called": [
                "FUN_08001c3c",
                "FUN_08001c3a",
                "FUN_08002470"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001cac": {
            "entrypoint": "0x08001cac",
            "current_name": "increase_value_08001cac",
            "code": "\nvoid increaseValue_08001cac(void)\n\n{\n  DAT_200006a0 = (uint)DAT_20000078 + DAT_200006a0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001cac": "increase_value_08001cac"
            },
            "calling": [
                "FUN_08004b9e"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001cc4": {
            "entrypoint": "0x08001cc4",
            "current_name": "get_data_constant_08001cc4",
            "code": "\nundefined4 get_data_constant_08001cc4(void)\n\n{\n  return DAT_200006a0;\n}\n\n",
            "renaming": {
                "FUN_08001cc4": "get_data_constant_08001cc4"
            },
            "calling": [
                "FUN_08004478",
                "FUN_08002384",
                "FUN_080053d4",
                "FUN_08003afa",
                "FUN_08003c90",
                "FUN_08001cd0",
                "FUN_08001f84",
                "FUN_080043b4",
                "FUN_080020f0",
                "FUN_08004b94",
                "FUN_08003688"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001cd0": {
            "entrypoint": "0x08001cd0",
            "current_name": "calculate_result_08001cd0",
            "code": "\nundefined4 calculateResult_08001cd0(uint **inputParameters,uint limit)\n\n{\n  int initialValue;\n  uint factor;\n  int tempValue;\n  undefined4 result;\n  uint *inputPointer;\n  uint calculationResult;\n  uint counter;\n  \n  counter = 0;\n  initialValue = FUN_08001cc4();\n  calculationResult = DAT_20000084;\n  inputPointer = *inputParameters;\n  if ((inputPointer[2] & 0x100) == 0) {\n    if (((inputPointer[1] & 0x100) == 0) && ((inputPointer[0xb] & 0xf00000) == 0)) {\n      do {\n        if ((**inputParameters & 2) != 0) goto LAB_08001de2;\n      } while ((limit == 0xffffffff) ||\n              ((limit != 0 && (tempValue = FUN_08001cc4(), (uint)(tempValue - initialValue) <= limit))));\n      inputParameters[10] = (uint *)((uint)inputParameters[10] | 4);\n      *(undefined *)(inputParameters + 9) = 0;\n      result = 3;\n    }\n    else {\n      factor = FUN_08003da4(2);\n      inputPointer = *inputParameters;\n      if (((inputPointer[4] & 0x24924924) == 0) && ((inputPointer[3] & 0x924924) == 0)) {\n        if ((inputPointer[4] & 0x12492492) == 0) {\n          if ((inputPointer[3] & 0x492492) == 0) {\n            tempValue = 0x14;\n          }\n          else {\n            tempValue = 0x29;\n          }\n        }\n        else {\n          tempValue = 0x29;\n        }\n      }\n      else if (((inputPointer[4] & 0x12492492) == 0) && ((inputPointer[3] & 0x492492) == 0)) {\n        tempValue = 0x54;\n      }\n      else if ((inputPointer[4] & 0x249249) == 0) {\n        if ((inputPointer[3] & 0x249249) == 0) {\n          tempValue = 0x54;\n        }\n        else {\n          tempValue = 0xfc;\n        }\n      }\n      else {\n        tempValue = 0xfc;\n      }\n      calculationResult = (calculationResult / factor) * tempValue;\n      for (; counter <= calculationResult && calculationResult - counter != 0; counter = counter + 1) {\n        if ((limit != 0xffffffff) &&\n           ((limit == 0 || (tempValue = FUN_08001cc4(), limit < (uint)(tempValue - initialValue))))) {\n          inputParameters[10] = (uint *)((uint)inputParameters[10] | 4);\n          *(undefined *)(inputParameters + 9) = 0;\n          return 3;\n        }\n      }\nLAB_08001de2:\n      **inputParameters = 0xffffffed;\n      inputParameters[10] = (uint *)((uint)inputParameters[10] | 0x200);\n      if (((*inputParameters)[2] & 0xe0000) == 0xe0000) {\n        if (inputParameters[3] == (uint *)0x0) {\n          inputParameters[10] = (uint *)((uint)inputParameters[10] & 0xfffffeff);\n          if (((uint)inputParameters[10] & 0x1000) == 0) {\n            inputParameters[10] = (uint *)((uint)inputParameters[10] | 1);\n            result = 0;\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        result = 0;\n      }\n    }\n  }\n  else {\n    inputParameters[10] = (uint *)((uint)inputParameters[10] | 0x20);\n    *(undefined *)(inputParameters + 9) = 0;\n    result = 1;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08001cd0": "calculate_result_08001cd0",
                "param_1": "inputParameters",
                "param_2": "limit",
                "iVar1": "initialValue",
                "uVar2": "factor",
                "iVar3": "tempValue",
                "uVar4": "result",
                "puVar5": "inputPointer",
                "uVar6": "calculationResult",
                "local_1c": "counter"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08003da4",
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001e40": {
            "entrypoint": "0x08001e40",
            "current_name": "get_offset_value_08001e40",
            "code": "\nundefined4 getOffsetValue_08001e40(int *offsetPtr)\n\n{\n  return *(undefined4 *)(*offsetPtr + 0x4c);\n}\n\n",
            "renaming": {
                "FUN_08001e40": "get_offset_value_08001e40",
                "param_1": "offsetPtr"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001e48": {
            "entrypoint": "0x08001e48",
            "current_name": "update_register_08001e48",
            "code": "\nundefined4 updateRegister_08001e48(int *registerData,uint *registerValues)\n\n{\n  undefined4 returnValue;\n  uint tempValue;\n  int loopCounter;\n  \n  if (*(char *)(registerData + 9) == '\\x01') {\n    returnValue = 2;\n  }\n  else {\n    *(undefined *)(registerData + 9) = 1;\n    tempValue = registerValues[1];\n    if (tempValue < 7) {\n      tempValue = tempValue * 5 - 5;\n      *(uint *)(*registerData + 0x34) =\n           *registerValues << (tempValue & 0xff) | *(uint *)(*registerData + 0x34) & ~(0x1f << (tempValue & 0xff));\n    }\n    else if (tempValue < 0xd) {\n      tempValue = tempValue * 5 - 0x23;\n      *(uint *)(*registerData + 0x30) =\n           *registerValues << (tempValue & 0xff) | *(uint *)(*registerData + 0x30) & ~(0x1f << (tempValue & 0xff));\n    }\n    else {\n      tempValue = tempValue * 5 - 0x41;\n      *(uint *)(*registerData + 0x2c) =\n           *registerValues << (tempValue & 0xff) | *(uint *)(*registerData + 0x2c) & ~(0x1f << (tempValue & 0xff));\n    }\n    tempValue = *registerValues;\n    if (tempValue < 10) {\n      *(uint *)(*registerData + 0x10) =\n           registerValues[2] << (tempValue * 3 & 0xff) |\n           *(uint *)(*registerData + 0x10) & ~(7 << (tempValue * 3 & 0xff));\n    }\n    else {\n      tempValue = tempValue * 3 - 0x1e;\n      *(uint *)(*registerData + 0xc) =\n           registerValues[2] << (tempValue & 0xff) | *(uint *)(*registerData + 0xc) & ~(7 << (tempValue & 0xff));\n    }\n    if (*registerValues - 0x10 < 2) {\n      if (*registerData == 0x40012400) {\n        if ((uRam40012408 & 0x800000) == 0) {\n          uRam40012408 = uRam40012408 | 0x800000;\n          if (*registerValues == 0x10) {\n            for (loopCounter = (DAT_20000084 / 1000000) * 10; loopCounter != 0; loopCounter = loopCounter + -1) {\n            }\n            returnValue = 0;\n          }\n          else {\n            returnValue = 0;\n          }\n        }\n        else {\n          returnValue = 0;\n        }\n      }\n      else {\n        registerData[10] = registerData[10] | 0x20;\n        returnValue = 1;\n      }\n    }\n    else {\n      returnValue = 0;\n    }\n    *(undefined *)(registerData + 9) = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08001e48": "update_register_08001e48",
                "param_1": "registerData",
                "param_2": "registerValues",
                "uVar1": "returnValue",
                "uVar2": "tempValue",
                "local_c": "loopCounter"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001f80": {
            "entrypoint": "0x08001f80",
            "current_name": "get_pointer_value_08001f80",
            "code": "\nundefined4 get_pointer_value_08001f80(int ptr_offset)\n\n{\n  return *(undefined4 *)(ptr_offset + 0x28);\n}\n\n",
            "renaming": {
                "FUN_08001f80": "get_pointer_value_08001f80",
                "param_1": "ptr_offset"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001f84": {
            "entrypoint": "0x08001f84",
            "current_name": "toggle_flag_08001f84",
            "code": "\nundefined4 toggleFlag_08001f84(int *pointerToValue,undefined4 value)\n\n{\n  int result;\n  undefined4 returnValue;\n  int valuePointer;\n  uint loopCounter;\n  \n  valuePointer = *pointerToValue;\n  if ((*(uint *)(valuePointer + 8) & 1) == 0) {\n    *(uint *)(valuePointer + 8) = *(uint *)(valuePointer + 8) | 1;\n    for (loopCounter = DAT_20000084 / 1000000; loopCounter != 0; loopCounter = loopCounter - 1) {\n    }\n    valuePointer = FUN_08001cc4(pointerToValue,value,DAT_20000084 * 0x431bde83);\n    do {\n      if ((*(uint *)(*pointerToValue + 8) & 1) != 0) {\n        return 0;\n      }\n      result = FUN_08001cc4();\n    } while ((uint)(result - valuePointer) < 3);\n    pointerToValue[10] = pointerToValue[10] | 0x10;\n    pointerToValue[0xb] = pointerToValue[0xb] | 1;\n    *(undefined *)(pointerToValue + 9) = 0;\n    returnValue = 1;\n  }\n  else {\n    returnValue = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08001f84": "toggle_flag_08001f84",
                "param_1": "pointerToValue",
                "param_2": "value",
                "iVar1": "result",
                "iVar3": "valuePointer",
                "uVar2": "returnValue",
                "local_14": "loopCounter"
            },
            "calling": [
                "FUN_08002384",
                "FUN_08002004"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002004": {
            "entrypoint": "0x08002004",
            "current_name": "initialize_flags_08002004",
            "code": "\n\n\nint initializeFlags_08002004(int *flagsArray)\n\n{\n  int result;\n  undefined4 *ptr;\n  int value;\n  \n  if (*(char *)(flagsArray + 9) != '\\x01') {\n    *(undefined *)(flagsArray + 9) = 1;\n    result = FUN_08001f84();\n    if (result == 0) {\n      flagsArray[10] = flagsArray[10] & 0xfffffcfeU | 0x100;\n      ptr = (undefined4 *)*flagsArray;\n      if ((ptr == (undefined4 *)0x40012800) && ((_DAT_40012404 & 0xf0000) != 0)) {\n        flagsArray[10] = flagsArray[10] | 0x100000;\n        if ((_DAT_40012404 & 0x400) != 0) {\n          flagsArray[10] = flagsArray[10] & 0xffffcfffU | 0x1000;\n        }\n      }\n      else {\n        flagsArray[10] = flagsArray[10] & 0xffefffff;\n        if ((ptr[1] & 0x400) != 0) {\n          flagsArray[10] = flagsArray[10] & 0xffffcfffU | 0x1000;\n        }\n      }\n      if ((flagsArray[10] & 0x1000U) == 0) {\n        flagsArray[0xb] = 0;\n      }\n      else {\n        flagsArray[0xb] = flagsArray[0xb] & 0xfffffff9;\n      }\n      *(undefined *)(flagsArray + 9) = 0;\n      *ptr = 0xfffffffd;\n      value = *flagsArray;\n      if (((*(uint *)(value + 8) & 0xe0000) == 0xe0000) &&\n         ((value != 0x40012800 || ((_DAT_40012404 & 0xf0000) == 0)))) {\n        *(uint *)(value + 8) = *(uint *)(value + 8) | 0x500000;\n      }\n      else {\n        *(uint *)(value + 8) = *(uint *)(value + 8) | 0x100000;\n      }\n    }\n    else {\n      *(undefined *)(flagsArray + 9) = 0;\n    }\n    return result;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08002004": "initialize_flags_08002004",
                "param_1": "flagsArray",
                "iVar1": "result",
                "puVar2": "ptr",
                "iVar3": "value"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08001f84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080020f0": {
            "entrypoint": "0x080020f0",
            "current_name": "update_data_080020f0",
            "code": "\nundefined4 updateData_080020f0(int *dataPtr)\n\n{\n  int result1;\n  int result2;\n  \n  result2 = *dataPtr;\n  if ((*(uint *)(result2 + 8) & 1) == 0) {\n    return 0;\n  }\n  *(uint *)(result2 + 8) = *(uint *)(result2 + 8) & 0xfffffffe;\n  result2 = FUN_08001cc4();\n  do {\n    if ((*(uint *)(*dataPtr + 8) & 1) == 0) {\n      return 0;\n    }\n    result1 = FUN_08001cc4();\n  } while ((uint)(result1 - result2) < 3);\n  dataPtr[10] = dataPtr[10] | 0x10;\n  dataPtr[0xb] = dataPtr[0xb] | 1;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080020f0": "update_data_080020f0",
                "param_1": "dataPtr",
                "iVar1": "result1",
                "iVar2": "result2"
            },
            "calling": [
                "FUN_0800213c",
                "FUN_08002384",
                "FUN_08002348",
                "FUN_0800224c"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800213c": {
            "entrypoint": "0x0800213c",
            "current_name": "initialize_value_0800213c",
            "code": "\nundefined4 initializeValue_0800213c(int *param)\n\n{\n  int result;\n  uint value1;\n  uint value2;\n  \n  if (param == (int *)0x0) {\n    return 1;\n  }\n  if (param[10] == 0) {\n    param[0xb] = 0;\n    *(undefined *)(param + 9) = 0;\n    FUN_08004974();\n  }\n  result = FUN_080020f0(param);\n  if (((param[10] & 0x10U) == 0) && (result == 0)) {\n    param[10] = param[10] & 0xffffeefdU | 2;\n    value1 = param[1] | param[7] | param[3] << 1;\n    if (param[2] == 0x100) {\n      value2 = 0x100;\n    }\n    else {\n      value2 = 0;\n      if (param[2] == 1) {\n        value2 = 0x100;\n      }\n    }\n    if (param[5] == 1) {\n      if (param[3] == 0) {\n        value2 = value2 | (param[6] + -1) * 0x2000 | 0x800;\n      }\n      else {\n        param[10] = param[10] | 0x20;\n        param[0xb] = param[0xb] | 1;\n      }\n    }\n    *(uint *)(*param + 4) = value2 | *(uint *)(*param + 4) & 0xffff16ff;\n    *(uint *)(*param + 8) = *(uint *)(*param + 8) & 0xffe1f7fd | value1;\n    if ((param[2] == 0x100) || (param[2] == 1)) {\n      value2 = (param[4] + -1) * 0x100000;\n    }\n    else {\n      value2 = 0;\n    }\n    *(uint *)(*param + 0x2c) = value2 | *(uint *)(*param + 0x2c) & 0xff0fffff;\n    if (value1 != (*(uint *)(*param + 8) & 0xff1f0efe)) {\n      param[10] = param[10] & 0xffffffedU | 0x10;\n      param[0xb] = param[0xb] | 1;\n      return 1;\n    }\n    param[0xb] = 0;\n    param[10] = param[10] & 0xfffffffcU | 1;\n    return 0;\n  }\n  param[10] = param[10] | 0x10;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800213c": "initialize_value_0800213c",
                "param_1": "param",
                "iVar1": "result",
                "uVar2": "value1",
                "uVar3": "value2"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08004974",
                "FUN_080020f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800224c": {
            "entrypoint": "0x0800224c",
            "current_name": "clear_flags_0800224c",
            "code": "\nint clearFlags_0800224c(int *flags)\n\n{\n  int result;\n  \n  if (flags == (int *)0x0) {\n    result = 1;\n  }\n  else {\n    flags[10] = flags[10] | 2;\n    result = FUN_080020f0();\n    if (result == 0) {\n      *(undefined4 *)*flags = 0xffffffe0;\n      *(uint *)(*flags + 4) = *(uint *)(*flags + 4) & 0xff3f0000;\n      *(uint *)(*flags + 8) = *(uint *)(*flags + 8) & 0xff0106f0;\n      *(uint *)(*flags + 0xc) = *(uint *)(*flags + 0xc) & 0xff000000;\n      *(uint *)(*flags + 0x10) = *(uint *)(*flags + 0x10) & 0xc0000000;\n      *(uint *)(*flags + 0x14) = *(uint *)(*flags + 0x14) & 0xfffff000;\n      *(uint *)(*flags + 0x18) = *(uint *)(*flags + 0x18) & 0xfffff000;\n      *(uint *)(*flags + 0x1c) = *(uint *)(*flags + 0x1c) & 0xfffff000;\n      *(uint *)(*flags + 0x20) = *(uint *)(*flags + 0x20) & 0xfffff000;\n      *(uint *)(*flags + 0x24) = *(uint *)(*flags + 0x24) & 0xfffff000;\n      *(uint *)(*flags + 0x28) = *(uint *)(*flags + 0x28) & 0xfffff000;\n      *(uint *)(*flags + 0x2c) = *(uint *)(*flags + 0x2c) & 0xff000000;\n      *(uint *)(*flags + 0x2c) = *(uint *)(*flags + 0x2c) & 0xff000000;\n      *(uint *)(*flags + 0x30) = *(uint *)(*flags + 0x30) & 0xc0000000;\n      *(uint *)(*flags + 0x34) = *(uint *)(*flags + 0x34) & 0xc0000000;\n      *(uint *)(*flags + 0x38) = *(uint *)(*flags + 0x38) & 0xffc00000;\n      *(uint *)(*flags + 0x38) = *(uint *)(*flags + 0x38) & 0xffc00000;\n      FUN_080049f0(flags);\n      flags[0xb] = 0;\n      flags[10] = 0;\n    }\n    *(undefined *)(flags + 9) = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_0800224c": "clear_flags_0800224c",
                "param_1": "flags",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_080020f0",
                "FUN_080049f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002348": {
            "entrypoint": "0x08002348",
            "current_name": "check_and_modify_data_08002348",
            "code": "\nint checkAndModifyData_08002348(int dataAddress)\n\n{\n  int result;\n  \n  if (*(char *)(dataAddress + 0x24) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(dataAddress + 0x24) = 1;\n  result = FUN_080020f0();\n  if (result == 0) {\n    *(uint *)(dataAddress + 0x28) = *(uint *)(dataAddress + 0x28) & 0xffffeefe | 1;\n  }\n  *(undefined *)(dataAddress + 0x24) = 0;\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002348": "check_and_modify_data_08002348",
                "param_1": "dataAddress",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_080020f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002384": {
            "entrypoint": "0x08002384",
            "current_name": "process_data_08002384",
            "code": "\nint processData_08002384(int *inputData)\n\n{\n  uint dataSize;\n  int result;\n  uint divisor;\n  int start;\n  int current;\n  int iterations;\n  \n  if (*(char *)(inputData + 9) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(inputData + 9) = 1;\n  result = FUN_080020f0();\n  if (result == 0) {\n    inputData[10] = inputData[10] & 0xffffeefdU | 2;\n    dataSize = DAT_20000084;\n    divisor = FUN_08003da4(2);\n    for (iterations = dataSize / divisor << 1; iterations != 0; iterations = iterations + -1) {\n    }\n    FUN_08001f84(inputData);\n    *(uint *)(*inputData + 8) = *(uint *)(*inputData + 8) | 8;\n    start = FUN_08001cc4();\n    while (current = *inputData, (*(uint *)(current + 8) & 8) != 0) {\n      current = FUN_08001cc4();\n      if (10 < (uint)(current - start)) {\n        inputData[10] = inputData[10] & 0xffffffedU | 0x10;\n        *(undefined *)(inputData + 9) = 0;\n        return 1;\n      }\n    }\n    *(uint *)(current + 8) = *(uint *)(current + 8) | 4;\n    start = FUN_08001cc4();\n    while ((*(uint *)(*inputData + 8) & 4) != 0) {\n      current = FUN_08001cc4();\n      if (10 < (uint)(current - start)) {\n        inputData[10] = inputData[10] & 0xffffffedU | 0x10;\n        *(undefined *)(inputData + 9) = 0;\n        return 1;\n      }\n    }\n    inputData[10] = inputData[10] & 0xfffffffcU | 1;\n  }\n  *(undefined *)(inputData + 9) = 0;\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002384": "process_data_08002384",
                "param_1": "inputData",
                "uVar1": "dataSize",
                "iVar2": "result",
                "uVar3": "divisor",
                "iVar4": "start",
                "iVar5": "current",
                "local_14": "iterations"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08003da4",
                "FUN_08001cc4",
                "FUN_08001f84",
                "FUN_080020f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002470": {
            "entrypoint": "0x08002470",
            "current_name": "update_flag_value_08002470",
            "code": "\n\n\nvoid updateFlagValue_08002470(uint inputValue)\n\n{\n  _DAT_e000ed0c = (inputValue & 7) << 8 | _DAT_e000ed0c & 0xf8ff | 0x5fa0000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002470": "update_flag_value_08002470",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08005f5e",
                "FUN_08001c88"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002494": {
            "entrypoint": "0x08002494",
            "current_name": "apply_bitmask_08002494",
            "code": "\n\n\nvoid applyBitmask_08002494(uint inputValue,uint bitmask1,uint bitmask2)\n\n{\n  uint shiftAmount;\n  uint remainingBits;\n  \n  shiftAmount = (uint)(_DAT_e000ed0c << 0x15) >> 0x1d;\n  remainingBits = 7 - shiftAmount;\n  if (3 < remainingBits) {\n    remainingBits = 4;\n  }\n  if (shiftAmount + 4 < 7) {\n    shiftAmount = 0;\n  }\n  else {\n    shiftAmount = shiftAmount - 3;\n  }\n  shiftAmount = (bitmask1 & (1 << (remainingBits & 0xff)) - 1U) << (shiftAmount & 0xff) |\n          (1 << (shiftAmount & 0xff)) - 1U & bitmask2;\n  if ((int)inputValue < 0) {\n    *(char *)((inputValue & 0xf) + 0xe000ed14) = (char)(shiftAmount << 4);\n  }\n  else {\n    *(char *)(inputValue + 0xe000e400) = (char)(shiftAmount << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002494": "apply_bitmask_08002494",
                "param_1": "inputValue",
                "param_2": "bitmask1",
                "param_3": "bitmask2",
                "uVar1": "shiftAmount",
                "uVar2": "remainingBits"
            },
            "calling": [
                "FUN_08005510",
                "FUN_08001b48",
                "FUN_08001c3c",
                "FUN_08005568"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080024f8": {
            "entrypoint": "0x080024f8",
            "current_name": "set_bit_080024f8",
            "code": "\nvoid setBit_080024f8(uint input)\n\n{\n  if (-1 < (int)input) {\n    *(int *)((input >> 5) * 4 + -0x1fff1f00) = 1 << (input & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080024f8": "set_bit_080024f8",
                "param_1": "input"
            },
            "calling": [
                "FUN_08005510",
                "FUN_08005568"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002514": {
            "entrypoint": "0x08002514",
            "current_name": "initialize_data_08002514",
            "code": "\n\n\nundefined4 initializeData_08002514(int dataSize)\n\n{\n  if (dataSize - 1U < 0x1000000) {\n    _DAT_e000e014 = dataSize - 1U;\n    DAT_e000ed23 = 0xf0;\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08002514": "initialize_data_08002514",
                "param_1": "dataSize"
            },
            "calling": [
                "FUN_08001b48",
                "FUN_08001c3c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002540": {
            "entrypoint": "0x08002540",
            "current_name": "set_bit_in_array_08002540",
            "code": "\nvoid setBitInArray_08002540(uint index)\n\n{\n  if (-1 < intIndex) {\n    *(int *)(((index >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (index & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002540": "set_bit_in_array_08002540",
                "param_1": "index",
                "(int)param_1": "intIndex"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002560": {
            "entrypoint": "0x08002560",
            "current_name": "update_flag_08002560",
            "code": "\n\n\nvoid updateFlag_08002560(int flagValue)\n\n{\n  if (flagValue != 4) {\n    _DAT_e000e010 = _DAT_e000e010 & 0xfffffffb;\n    return;\n  }\n  _DAT_e000e010 = _DAT_e000e010 | 4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002560": "update_flag_08002560",
                "param_1": "flagValue"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002580": {
            "entrypoint": "0x08002580",
            "current_name": "FUNC_08002580",
            "code": "\nvoid FUNC_08002580(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002580": "FUNC_08002580"
            },
            "calling": [
                "FUN_08002582"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002582": {
            "entrypoint": "0x08002582",
            "current_name": "initialize_and_execute_task_08002582",
            "code": "\nvoid initialize_and_execute_task_08002582(void)\n\n{\n  FUNC_08002580();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002582": "initialize_and_execute_task_08002582"
            },
            "calling": [
                "FUN_08004b9e"
            ],
            "called": [
                "FUN_08002580"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800258c": {
            "entrypoint": "0x0800258c",
            "current_name": "initialize_settings_0800258c",
            "code": "\n\n\nundefined4 initializeSettings_0800258c(uint **settings)\n\n{\n  uint *currentSetting;\n  \n  if (*(char *)((int)settings + 0x21) != '\\x02') {\n    settings[0xe] = (uint *)0x4;\n    return 1;\n  }\n  **settings = **settings & 0xfffffff1;\n  **settings = **settings & 0xfffffffe;\n  currentSetting = *settings;\n  if (currentSetting == (uint *)0x40020008) {\n    _DAT_40020004 = 1;\n  }\n  else if (currentSetting == (uint *)0x4002001c) {\n    _DAT_40020004 = 0x10;\n  }\n  else if (currentSetting == (uint *)0x40020030) {\n    _DAT_40020004 = 0x100;\n  }\n  else if (currentSetting == (uint *)0x40020044) {\n    _DAT_40020004 = 0x1000;\n  }\n  else if (currentSetting == (uint *)0x40020058) {\n    _DAT_40020004 = 0x10000;\n  }\n  else if (currentSetting == (uint *)0x4002006c) {\n    _DAT_40020004 = 0x100000;\n  }\n  else {\n    _DAT_40020004 = 0x1000000;\n  }\n  *(undefined *)((int)settings + 0x21) = 1;\n  *(undefined *)(settings + 8) = 0;\n  if (settings[0xd] != (uint *)0x0) {\n    (*(code *)settings[0xd])();\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800258c": "initialize_settings_0800258c",
                "param_1": "settings",
                "puVar1": "currentSetting"
            },
            "calling": [
                "FUN_0800316c",
                "FUN_080046b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002624": {
            "entrypoint": "0x08002624",
            "current_name": "set_registers_08002624",
            "code": "\n\n\nvoid set_registers_08002624(uint *target_registers,uint *source_registers)\n\n{\n  uint *target_ptr;\n  uint bit_mask;\n  uint bit_mask_result;\n  uint bit_index;\n  uint condition;\n  uint register_value;\n  int index;\n  int register_index;\n  \n  register_value = 0;\n  bit_index = 0;\n  do {\n    if (0xf < bit_index) {\n      return;\n    }\n    bit_mask = 1 << (bit_index & 0xff);\n    bit_mask_result = *source_registers & bit_mask;\n    if (bit_mask == bit_mask_result) {\n      condition = source_registers[1];\n      if (condition == 0x12) {\n        register_value = source_registers[3] + 0xc;\n      }\n      else if (condition < 0x13) {\n        if (condition == 2) {\n          register_value = source_registers[3] + 8;\n        }\n        else if (condition < 3) {\n          if (condition == 0) goto LAB_08002776;\n          if (condition == 1) {\n            register_value = source_registers[3];\n          }\n        }\n        else if (condition == 3) {\n          register_value = 0;\n        }\n        else if (condition == 0x11) {\n          register_value = source_registers[3] + 4;\n        }\n      }\n      else if (condition == 0x10210000) {\nLAB_08002776:\n        if (source_registers[2] == 0) {\n          register_value = 4;\n        }\n        else if (source_registers[2] == 1) {\n          target_registers[4] = bit_mask;\n          register_value = 8;\n        }\n        else {\n          target_registers[5] = bit_mask;\n          register_value = 8;\n        }\n      }\n      else if (condition < 0x10210001) {\n        if ((condition == 0x10110000) || (condition == 0x10120000)) goto LAB_08002776;\n      }\n      else if ((condition == 0x10310000) || ((condition == 0x10320000 || (condition == 0x10220000))))\n      goto LAB_08002776;\n      bit_mask = bit_index;\n      target_ptr = target_registers;\n      if (0xff < bit_mask_result) {\n        bit_mask = bit_index - 8;\n        target_ptr = target_registers + 1;\n      }\n      *target_ptr = *target_ptr & ~(0xf << (bit_mask << 2 & 0xff)) | register_value << (bit_mask << 2 & 0xff);\n      if ((source_registers[1] & 0x10000000) != 0) {\n        _DAT_40021018 = _DAT_40021018 | 1;\n        index = (bit_index & 3) << 2;\n        if (target_registers == (uint *)0x40010800) {\n          register_index = 0;\n        }\n        else if (target_registers == (uint *)0x40010c00) {\n          register_index = 1;\n        }\n        else if (target_registers == (uint *)0x40011000) {\n          register_index = 2;\n        }\n        else if (target_registers == (uint *)0x40011400) {\n          register_index = 3;\n        }\n        else {\n          register_index = 4;\n        }\n        *(uint *)(((bit_index >> 2) + 2) * 4 + 0x40010000) =\n             *(uint *)(((bit_index >> 2) + 2) * 4 + 0x40010000) & ~(0xf << index) | register_index << index;\n        if ((source_registers[1] & 0x10000) == 0) {\n          _DAT_40010400 = _DAT_40010400 & ~bit_mask_result;\n        }\n        else {\n          _DAT_40010400 = _DAT_40010400 | bit_mask_result;\n        }\n        if ((source_registers[1] & 0x20000) == 0) {\n          _DAT_40010404 = _DAT_40010404 & ~bit_mask_result;\n        }\n        else {\n          _DAT_40010404 = _DAT_40010404 | bit_mask_result;\n        }\n        if ((source_registers[1] & 0x100000) == 0) {\n          _DAT_40010408 = _DAT_40010408 & ~bit_mask_result;\n        }\n        else {\n          _DAT_40010408 = _DAT_40010408 | bit_mask_result;\n        }\n        if ((source_registers[1] & 0x200000) == 0) {\n          _DAT_4001040c = _DAT_4001040c & ~bit_mask_result;\n        }\n        else {\n          _DAT_4001040c = bit_mask_result | _DAT_4001040c;\n        }\n      }\n    }\n    bit_index = bit_index + 1;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08002624": "set_registers_08002624",
                "param_1": "target_registers",
                "param_2": "source_registers",
                "puVar1": "target_ptr",
                "uVar2": "bit_mask",
                "uVar3": "bit_mask_result",
                "uVar4": "bit_index",
                "uVar5": "condition",
                "uVar6": "register_value",
                "iVar7": "index",
                "iVar8": "register_index"
            },
            "calling": [
                "FUN_08004bb0",
                "FUN_08004974",
                "FUN_08004f4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002810": {
            "entrypoint": "0x08002810",
            "current_name": "check_bit_08002810",
            "code": "\nundefined4 check_bit_08002810(int num,uint bit_mask)\n\n{\n  if ((bit_mask & *(uint *)(num + 8)) == 0) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08002810": "check_bit_08002810",
                "param_1": "num",
                "param_2": "bit_mask"
            },
            "calling": [
                "FUN_08004c48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800281e": {
            "entrypoint": "0x0800281e",
            "current_name": "update_parameter_value_0800281e",
            "code": "\nvoid updateParameterValue_0800281e(int dataAddress,int newValue,int useShift)\n\n{\n  if (useShift == 0) {\n    *(int *)(dataAddress + 0x10) = newValue << 0x10;\n    return;\n  }\n  *(int *)(dataAddress + 0x10) = newValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800281e": "update_parameter_value_0800281e",
                "param_1": "dataAddress",
                "param_2": "newValue",
                "param_3": "useShift"
            },
            "calling": [
                "FUN_08004c30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800282c": {
            "entrypoint": "0x0800282c",
            "current_name": "update_data_if_flag_set_0800282c",
            "code": "\n\n\nvoid updateDataIfFlagSet_0800282c(uint dataToUpdate)\n\n{\n  if ((_DAT_40010414 & dataToUpdate) != 0) {\n    _DAT_40010414 = dataToUpdate;\n    FUN_080060e4();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800282c": "update_data_if_flag_set_0800282c",
                "param_1": "dataToUpdate"
            },
            "calling": [],
            "called": [
                "FUN_080060e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002848": {
            "entrypoint": "0x08002848",
            "current_name": "process_parameters_08002848",
            "code": "\nundefined4 processParameters_08002848(int *parameters)\n\n{\n  if (*(char *)((int)parameters + 0x3e) == '@') {\n    if (parameters[0x14] == 0) {\n      *(uint *)(*parameters + 0x10) = parameters[0x11] & 0xfe;\n    }\n    else {\n      *(uint *)(*parameters + 0x10) = parameters[0x11] & 0xffU | 1;\n    }\n  }\n  else if (parameters[4] == 0x4000) {\n    if (*(char *)((int)parameters + 0x3d) == '!') {\n      *(uint *)(*parameters + 0x10) = parameters[0x11] & 0xfe;\n    }\n    else {\n      *(uint *)(*parameters + 0x10) = parameters[0x11] & 0xffU | 1;\n    }\n  }\n  else if (parameters[0x14] == 0) {\n    *(uint *)(*parameters + 0x10) = (uint)(parameters[0x11] << 0x10) >> 0x17 & 6 | 0xf0;\n  }\n  else if (parameters[0x14] == 1) {\n    *(uint *)(*parameters + 0x10) = (uint)(parameters[0x11] << 0x10) >> 0x17 & 6 | 0xf1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002848": "process_parameters_08002848",
                "param_1": "parameters"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080028d2": {
            "entrypoint": "0x080028d2",
            "current_name": "store_byte_from_param_080028d2",
            "code": "\nundefined4 storeByteFromParam_080028d2(int *param)\n\n{\n  *(uint *)(*param + 0x10) = param[0x11] & 0xff;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080028d2": "store_byte_from_param_080028d2",
                "param_1": "param"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080028de": {
            "entrypoint": "0x080028de",
            "current_name": "apply_flags_080028de",
            "code": "\nundefined4 applyFlags_080028de(uint **parameters)\n\n{\n  uint *tempVar1;\n  \n  tempVar1 = parameters[0xb];\n  if ((*(char *)((int)parameters + 0x3d) == '\\\"') &&\n     ((parameters[0x14] != (uint *)0x0 || (*(char *)((int)parameters + 0x3e) != '@')))) {\n    if ((parameters[0x14] == (uint *)0x0) && (parameters[4] == (uint *)0xc000)) {\n      **parameters = **parameters | 0x100;\n      parameters[0x14] = (uint *)((int)parameters[0x14] + 1);\n    }\n    else {\n      if (*(short *)((int)parameters + 0x2a) == 0) {\n        **parameters = **parameters | 0x200;\n      }\n      else if (*(short *)((int)parameters + 0x2a) == 1) {\n        if (tempVar1 == (uint *)0xffff0000) {\n          **parameters = **parameters & 0xfffffbff;\n          tempVar1 = *parameters;\n          if ((tempVar1[1] & 0x800) == 0) {\n            *tempVar1 = *tempVar1 | 0x200;\n          }\n          else {\n            *tempVar1 = *tempVar1 & 0xfffffbff;\n          }\n        }\n        else if (((tempVar1 == (uint *)0x4) || (tempVar1 == (uint *)0x8)) ||\n                (parameters[0xc] == (uint *)0x12)) {\n          **parameters = **parameters & 0xfffffbff;\n          **parameters = **parameters | 0x200;\n        }\n        else if (parameters[0xb] == (uint *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters & 0xfffffbff;\n        }\n      }\n      else if (*(short *)((int)parameters + 0x2a) == 2) {\n        if (parameters[0xb] == (uint *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters | 0x800;\n          **parameters = **parameters & 0xfffffbff;\n        }\n        tempVar1 = *parameters;\n        if ((tempVar1[1] & 0x800) != 0) {\n          tempVar1[1] = tempVar1[1] | 0x1000;\n        }\n      }\n      else {\n        **parameters = **parameters | 0x400;\n        tempVar1 = *parameters;\n        if ((tempVar1[1] & 0x800) != 0) {\n          tempVar1[1] = tempVar1[1] | 0x1000;\n        }\n      }\n      parameters[0x14] = (uint *)0x0;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080028de": "apply_flags_080028de",
                "param_1": "parameters",
                "puVar1": "tempVar1"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ab8": {
            "entrypoint": "0x08002ab8",
            "current_name": "update_pointer_08002ab8",
            "code": "\nundefined4 updatePointer_08002ab8(int *pointer)\n\n{\n  byte *bytePointer;\n  \n  if (*(short *)((int)pointer + 0x2a) != 0) {\n    bytePointer = (byte *)pointer[9];\n    pointer[9] = (int)(bytePointer + 1);\n    *(uint *)(*pointer + 0x10) = (uint)*bytePointer;\n    *(short *)((int)pointer + 0x2a) = *(short *)((int)pointer + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002ab8": "update_pointer_08002ab8",
                "param_1": "pointer",
                "pbVar1": "bytePointer"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ad8": {
            "entrypoint": "0x08002ad8",
            "current_name": "update_data_08002ad8",
            "code": "\nundefined4 updateData_08002ad8(int *data)\n\n{\n  undefined *oldPtr;\n  \n  if (*(short *)((int)data + 0x2a) != 0) {\n    oldPtr = (undefined *)ptrToUpdate;\n    ptrToUpdate = (int)(oldPtr + 1);\n    *oldPtr = (char)*(undefined4 *)(*data + 0x10);\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002ad8": "update_data_08002ad8",
                "param_1": "data",
                "puVar1": "oldPtr",
                "param_1[9]": "ptrToUpdate"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002af8": {
            "entrypoint": "0x08002af8",
            "current_name": "initialize_params_08002af8",
            "code": "\nundefined4 initializeParams_08002af8(uint **paramList,uint *input1,int input2,uint *input3)\n\n{\n  undefined4 returnValue;\n  uint *ptr;\n  \n  if (*(char *)((int)paramList + 0x3d) == '(') {\n    if (input1 == (uint *)0x0) {\n      returnValue = 1;\n    }\n    else if (input2 == 0) {\n      returnValue = 1;\n    }\n    else if (*(char *)(paramList + 0xf) == '\\x01') {\n      returnValue = 2;\n    }\n    else {\n      *(undefined *)(paramList + 0xf) = 1;\n      ptr = *paramList;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **paramList = **paramList & 0xfffff7ff;\n      *(undefined *)((int)paramList + 0x3d) = 0x29;\n      *(undefined *)((int)paramList + 0x3e) = 0x20;\n      returnValue = 0;\n      paramList[0x10] = (uint *)0x0;\n      paramList[9] = input1;\n      *(short *)((int)paramList + 0x2a) = input2Short;\n      paramList[0xb] = input3;\n      *(undefined2 *)(paramList + 10) = *(undefined2 *)((int)paramList + 0x2a);\n      *(undefined *)(paramList + 0xf) = 0;\n      (*paramList)[1] = (*paramList)[1] | 0x700;\n    }\n  }\n  else {\n    returnValue = 2;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08002af8": "initialize_params_08002af8",
                "param_1": "paramList",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "input3",
                "uVar1": "returnValue",
                "puVar2": "ptr",
                "(short)param_3": "input2Short"
            },
            "calling": [
                "FUN_08004e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002b84": {
            "entrypoint": "0x08002b84",
            "current_name": "process_function_08002b84",
            "code": "\nundefined4 processFunction_08002b84(uint **paramList,uint *dataPtr,int size,uint *outputPtr)\n\n{\n  undefined4 result;\n  uint *ptr;\n  \n  if (*(char *)((int)paramList + 0x3d) == '(') {\n    if (dataPtr == (uint *)0x0) {\n      result = 1;\n    }\n    else if (size == 0) {\n      result = 1;\n    }\n    else if (*(char *)(paramList + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(paramList + 0xf) = 1;\n      ptr = *paramList;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **paramList = **paramList & 0xfffff7ff;\n      *(undefined *)((int)paramList + 0x3d) = 0x2a;\n      *(undefined *)((int)paramList + 0x3e) = 0x20;\n      result = 0;\n      dataPtr2 = (uint *)0x0;\n      newDataPtr = dataPtr;\n      *(short *)((int)paramList + 0x2a) = (short)size;\n      newOutputPtr = outputPtr;\n      *(undefined2 *)(paramList + 10) = *(undefined2 *)((int)paramList + 0x2a);\n      *(undefined *)(paramList + 0xf) = 0;\n      (*paramList)[1] = (*paramList)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002b84": "process_function_08002b84",
                "param_1": "paramList",
                "param_2": "dataPtr",
                "param_3": "size",
                "param_4": "outputPtr",
                "uVar1": "result",
                "puVar2": "ptr",
                "param_1[0x10]": "dataPtr2",
                "param_1[9]": "newDataPtr",
                "param_1[0xb]": "newOutputPtr"
            },
            "calling": [
                "FUN_08004e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c10": {
            "entrypoint": "0x08002c10",
            "current_name": "validate_and_set_flags_08002c10",
            "code": "\nundefined4 validate_and_set_flags_08002c10(uint **pointer)\n\n{\n  uint *value_ptr;\n  \n  if (*(char *)((int)pointer + 0x3d) != ' ') {\n    return 2;\n  }\n  *(undefined *)((int)pointer + 0x3d) = 0x28;\n  value_ptr = *pointer;\n  if ((*value_ptr & 1) == 0) {\n    *value_ptr = *value_ptr | 1;\n  }\n  **pointer = **pointer | 0x400;\n  (*pointer)[1] = (*pointer)[1] | 0x300;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002c10": "validate_and_set_flags_08002c10",
                "param_1": "pointer",
                "puVar1": "value_ptr"
            },
            "calling": [
                "FUN_08004ec4",
                "FUN_08004ef4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c4e": {
            "entrypoint": "0x08002c4e",
            "current_name": "FUNC_08002c4e",
            "code": "\nvoid FUNC_08002c4e(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c4e": "FUNC_08002c4e"
            },
            "calling": [
                "FUN_08002db2",
                "FUN_08002efc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002c50": {
            "entrypoint": "0x08002c50",
            "current_name": "FUNC_08002c50",
            "code": "\nvoid FUNC_08002c50(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c50": "FUNC_08002c50"
            },
            "calling": [
                "FUN_0800306c",
                "FUN_08002f9c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002c52": {
            "entrypoint": "0x08002c52",
            "current_name": "FUNC_08002c52",
            "code": "\nvoid FUNC_08002c52(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c52": "FUNC_08002c52"
            },
            "calling": [
                "FUN_08002c54",
                "FUN_08002d1c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002c54": {
            "entrypoint": "0x08002c54",
            "current_name": "process_data_08002c54",
            "code": "\nundefined4 processData_08002c54(int *data)\n\n{\n  char charValue;\n  byte *bytePointer;\n  \n  charValue = *(char *)((int)data + 0x3d);\n  if (*(short *)((int)data + 0x2a) != 0) {\n    bytePointer = (byte *)data[9];\n    data[9] = (int)(bytePointer + 1);\n    *(uint *)(*data + 0x10) = (uint)*bytePointer;\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    if ((*(short *)((int)data + 0x2a) == 0) && (charValue == ')')) {\n      *(uint *)(*data + 4) = *(uint *)(*data + 4) & 0xfffffbff;\n      data[0xc] = 0x21;\n      *(undefined *)((int)data + 0x3d) = 0x28;\n      FUNC_08002c52();\n    }\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002c54": "process_data_08002c54",
                "param_1": "data",
                "cVar1": "charValue",
                "pbVar2": "bytePointer"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002c52"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ca4": {
            "entrypoint": "0x08002ca4",
            "current_name": "FUNC_08002ca4",
            "code": "\nvoid FUNC_08002ca4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ca4": "FUNC_08002ca4"
            },
            "calling": [
                "FUN_08002ca6",
                "FUN_080032b4"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002ca6": {
            "entrypoint": "0x08002ca6",
            "current_name": "process_param_08002ca6",
            "code": "\nundefined4 process_param_08002ca6(int *param_array)\n\n{\n  char flag;\n  undefined *ptr;\n  \n  flag = *(char *)((int)param_array + 0x3d);\n  if (*(short *)((int)param_array + 0x2a) != 0) {\n    ptr = (undefined *)param_array[9];\n    param_array[9] = (int)(ptr + 1);\n    *ptr = (char)*(undefined4 *)(*param_array + 0x10);\n    *(short *)((int)param_array + 0x2a) = *(short *)((int)param_array + 0x2a) + -1;\n    if ((*(short *)((int)param_array + 0x2a) == 0) && (flag == '*')) {\n      *(uint *)(*param_array + 4) = *(uint *)(*param_array + 4) & 0xfffffbff;\n      special_value = 0x22;\n      *(undefined *)((int)param_array + 0x3d) = 0x28;\n      FUNC_08002ca4();\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002ca6": "process_param_08002ca6",
                "param_1": "param_array",
                "cVar1": "flag",
                "puVar2": "ptr",
                "param_1[0xc]": "special_value"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002ca4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002cf2": {
            "entrypoint": "0x08002cf2",
            "current_name": "process_data_08002cf2",
            "code": "\nundefined4 processData_08002cf2(int *data,undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  undefined2 result;\n  uint flag;\n  \n  flag = *(uint *)(*data + 0x18);\n  if ((flag & 0x80) == 0) {\n    result = *(undefined2 *)(data + 3);\n  }\n  else {\n    result = *(undefined2 *)(data + 6);\n  }\n  FUN_08004e74(data,(*(uint *)(*data + 0x18) & 4) == 0,result,flag,arg3);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002cf2": "process_data_08002cf2",
                "param_1": "data",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3",
                "uVar1": "result",
                "uVar2": "flag"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08004e74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002d1c": {
            "entrypoint": "0x08002d1c",
            "current_name": "update_param_08002d1c",
            "code": "\nundefined4 updateParam_08002d1c(uint **param)\n\n{\n  if (((param[0xb] == (uint *)0x4) || (param[0xb] == (uint *)0x8)) &&\n     (*(char *)((int)param + 0x3d) == '(')) {\n    param[0xb] = (uint *)0xffff0000;\n    (*param)[1] = (*param)[1] & 0xfffff8ff;\n    (*param)[5] = 0xfffffbff;\n    **param = **param & 0xfffffbff;\n    param[0xc] = (uint *)0x0;\n    *(undefined *)((int)param + 0x3d) = 0x20;\n    *(undefined *)((int)param + 0x3e) = 0;\n    FUN_08004ec4();\n  }\n  else if (*(char *)((int)param + 0x3d) == '!') {\n    param[0xb] = (uint *)0xffff0000;\n    param[0xc] = (uint *)0x21;\n    *(undefined *)((int)param + 0x3d) = 0x20;\n    *(undefined *)((int)param + 0x3e) = 0;\n    (*param)[1] = (*param)[1] & 0xfffff8ff;\n    (*param)[5] = 0xfffffbff;\n    **param = **param & 0xfffffbff;\n    FUNC_08002c52();\n  }\n  else {\n    (*param)[5] = 0xfffffbff;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002d1c": "update_param_08002d1c",
                "param_1": "param"
            },
            "calling": [
                "FUN_08003520"
            ],
            "called": [
                "FUN_08004ec4",
                "FUN_08002c52"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002db0": {
            "entrypoint": "0x08002db0",
            "current_name": "FUNC_08002db0",
            "code": "\nvoid FUNC_08002db0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002db0": "FUNC_08002db0"
            },
            "calling": [
                "FUN_08002db2",
                "FUN_08002efc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002db2": {
            "entrypoint": "0x08002db2",
            "current_name": "process_data_08002db2",
            "code": "\nundefined4 processData_08002db2(uint **data)\n\n{\n  char firstChar;\n  uint *ptr;\n  \n  firstChar = *(char *)((int)data + 0x3d);\n  ptr = ptr1;\n  if ((*(short *)(data + 10) == 0) && (firstChar == '!')) {\n    if ((ptr == (uint *)0x4) || ((ptr == (uint *)0x8 || (ptr == (uint *)0xffff0000)))) {\n      (*data)[1] = (*data)[1] & 0xfffff8ff;\n      **data = **data | 0x200;\n      ptr2 = (uint *)0x0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      if (*(char *)((int)data + 0x3e) == '@') {\n        *(undefined *)((int)data + 0x3e) = 0;\n        FUNC_08002db0();\n      }\n      else {\n        *(undefined *)((int)data + 0x3e) = 0;\n        FUNC_08002c4e();\n      }\n    }\n    else {\n      (*data)[1] = (*data)[1] & 0xfffff8ff;\n      ptr2 = (uint *)0x11;\n      *(undefined *)((int)data + 0x3e) = 0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      FUNC_08002c4e();\n    }\n  }\n  else if ((firstChar == '!') || ((*(char *)((int)data + 0x3e) == '@' && (firstChar == '\\\"')))) {\n    if (*(short *)((int)data + 0x2a) == 0) {\n      (*data)[1] = (*data)[1] & 0xfffffbff;\n    }\n    else if (*(char *)((int)data + 0x3e) == '@') {\n      if (ptr3 == (uint *)0x0) {\n        if (data[0x13] == (uint *)0x1) {\n          (*data)[4] = (uint)data[0x12] & 0xff;\n          ptr3 = (uint *)((int)ptr3 + 2);\n        }\n        else {\n          (*data)[4] = (uint)(intValue << 0x10) >> 0x18;\n          ptr3 = (uint *)((int)ptr3 + 1);\n        }\n      }\n      else if (ptr3 == (uint *)0x1) {\n        (*data)[4] = (uint)data[0x12] & 0xff;\n        ptr3 = (uint *)((int)ptr3 + 1);\n      }\n      else if (ptr3 == (uint *)0x2) {\n        if (*(char *)((int)data + 0x3d) == '\\\"') {\n          **data = **data | 0x100;\n        }\n        else if (*(char *)((int)data + 0x3d) == '!') {\n          ptr = ptr4;\n          ptr4 = (uint *)((int)ptr + 1);\n          (*data)[4] = (uint)*(byte *)ptr;\n          *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n        }\n      }\n    }\n    else {\n      ptr = ptr4;\n      ptr4 = (uint *)((int)ptr + 1);\n      (*data)[4] = (uint)*(byte *)ptr;\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002db2": "process_data_08002db2",
                "param_1": "data",
                "cVar1": "firstChar",
                "puVar2": "ptr",
                "param_1[0xb]": "ptr1",
                "param_1[0xc]": "ptr2",
                "(int)param_1[0x12]": "intValue",
                "param_1[0x14]": "ptr3",
                "param_1[9]": "ptr4"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002db0",
                "FUN_08002c4e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002efc": {
            "entrypoint": "0x08002efc",
            "current_name": "update_and_process_data_08002efc",
            "code": "\nundefined4 updateAndProcessData_08002efc(uint **data)\n\n{\n  uint *ptr1;\n  \n  ptr1 = data[0xb];\n  if (*(char *)((int)data + 0x3d) == '!') {\n    if (*(short *)((int)data + 0x2a) == 0) {\n      if (((ptr1 == (uint *)0x4) || (ptr1 == (uint *)0x8)) || (ptr1 == (uint *)0xffff0000)) {\n        (*data)[1] = (*data)[1] & 0xfffff8ff;\n        **data = **data | 0x200;\n        data[0xc] = (uint *)0x0;\n        *(undefined *)((int)data + 0x3d) = 0x20;\n        if (*(char *)((int)data + 0x3e) == '@') {\n          *(undefined *)((int)data + 0x3e) = 0;\n          FUNC_08002db0();\n        }\n        else {\n          *(undefined *)((int)data + 0x3e) = 0;\n          FUNC_08002c4e();\n        }\n      }\n      else {\n        (*data)[1] = (*data)[1] & 0xfffff8ff;\n        data[0xc] = (uint *)0x11;\n        *(undefined *)((int)data + 0x3e) = 0;\n        *(undefined *)((int)data + 0x3d) = 0x20;\n        FUNC_08002c4e();\n      }\n    }\n    else {\n      ptr1 = data[9];\n      data[9] = (uint *)((int)ptr1 + 1);\n      (*data)[4] = (uint)*(byte *)ptr1;\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002efc": "update_and_process_data_08002efc",
                "param_1": "data",
                "puVar1": "ptr1"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002db0",
                "FUN_08002c4e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f9a": {
            "entrypoint": "0x08002f9a",
            "current_name": "FUNC_08002f9a",
            "code": "\nvoid FUNC_08002f9a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f9a": "FUNC_08002f9a"
            },
            "calling": [
                "FUN_0800306c",
                "FUN_08002f9c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002f9c": {
            "entrypoint": "0x08002f9c",
            "current_name": "process_data_08002f9c",
            "code": "\nundefined4 processData_08002f9c(uint **dataPtr)\n\n{\n  uint *charPointer;\n  \n  if (*(char *)((int)dataPtr + 0x3d) == '\\\"') {\n    if (*(ushort *)((int)dataPtr + 0x2a) < 4) {\n      if (*(ushort *)((int)dataPtr + 0x2a) - 2 < 2) {\n        if (paramIndex11 == (uint *)0x2) {\n          **dataPtr = **dataPtr | 0x400;\n        }\n        else {\n          **dataPtr = **dataPtr & 0xfffffbff;\n          **dataPtr = **dataPtr | 0x800;\n        }\n        (*dataPtr)[1] = (*dataPtr)[1] & 0xfffffbff;\n      }\n      else {\n        if (paramIndex11 == (uint *)0x2) {\n          **dataPtr = **dataPtr | 0x400;\n        }\n        else {\n          **dataPtr = **dataPtr & 0xfffffbff;\n        }\n        (*dataPtr)[1] = (*dataPtr)[1] & 0xfffff8ff;\n        charPointer = paramIndex8;\n        paramIndex8 = (uint *)((int)charPointer + 1);\n        *(char *)charPointer = (char)(*dataPtr)[4];\n        *(short *)((int)dataPtr + 0x2a) = *(short *)((int)dataPtr + 0x2a) + -1;\n        *(undefined *)((int)dataPtr + 0x3d) = 0x20;\n        dataPtr[0xc] = (uint *)0x0;\n        if (*(char *)((int)dataPtr + 0x3e) == '@') {\n          *(undefined *)((int)dataPtr + 0x3e) = 0;\n          FUNC_08002f9a();\n        }\n        else {\n          *(undefined *)((int)dataPtr + 0x3e) = 0;\n          FUNC_08002c50();\n        }\n      }\n    }\n    else {\n      charPointer = paramIndex8;\n      paramIndex8 = (uint *)((int)charPointer + 1);\n      *(char *)charPointer = (char)(*dataPtr)[4];\n      *(short *)((int)dataPtr + 0x2a) = *(short *)((int)dataPtr + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002f9c": "process_data_08002f9c",
                "param_1": "dataPtr",
                "puVar1": "charPointer",
                "param_1[0xb]": "paramIndex11",
                "param_1[9]": "paramIndex8"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002f9a",
                "FUN_08002c50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800306c": {
            "entrypoint": "0x0800306c",
            "current_name": "process_input_0800306c",
            "code": "\nundefined4 processInput_0800306c(uint **inputData)\n\n{\n  uint *tempPtr1;\n  \n  tempPtr1 = inputData[0xb];\n  if (*(short *)((int)inputData + 0x2a) == 3) {\n    if (((tempPtr1 == (uint *)0x4) || (tempPtr1 == (uint *)0x8)) || (tempPtr1 == (uint *)0xffff0000)) {\n      **inputData = **inputData & 0xfffffbff;\n    }\n    tempPtr1 = inputData[9];\n    inputData[9] = (uint *)((int)tempPtr1 + 1);\n    *(char *)tempPtr1 = (char)(*inputData)[4];\n    *(short *)((int)inputData + 0x2a) = *(short *)((int)inputData + 0x2a) + -1;\n  }\n  else if (*(short *)((int)inputData + 0x2a) == 2) {\n    if (((tempPtr1 == (uint *)0x4) || (tempPtr1 == (uint *)0x8)) || (tempPtr1 == (uint *)0xffff0000)) {\n      (*inputData)[1] = (*inputData)[1] & 0xfffffcff;\n      **inputData = **inputData | 0x200;\n    }\n    else {\n      if (tempPtr1 == (uint *)0x2) {\n        **inputData = **inputData | 0x400;\n      }\n      else {\n        **inputData = **inputData & 0xfffffbff;\n      }\n      (*inputData)[1] = (*inputData)[1] & 0xfffffcff;\n    }\n    tempPtr1 = inputData[9];\n    inputData[9] = (uint *)((int)tempPtr1 + 1);\n    *(char *)tempPtr1 = (char)(*inputData)[4];\n    *(short *)((int)inputData + 0x2a) = *(short *)((int)inputData + 0x2a) + -1;\n    tempPtr1 = inputData[9];\n    inputData[9] = (uint *)((int)tempPtr1 + 1);\n    *(char *)tempPtr1 = (char)(*inputData)[4];\n    *(short *)((int)inputData + 0x2a) = *(short *)((int)inputData + 0x2a) + -1;\n    *(undefined *)((int)inputData + 0x3d) = 0x20;\n    inputData[0xc] = (uint *)0x0;\n    if (*(char *)((int)inputData + 0x3e) == '@') {\n      *(undefined *)((int)inputData + 0x3e) = 0;\n      FUNC_08002f9a();\n    }\n    else {\n      *(undefined *)((int)inputData + 0x3e) = 0;\n      FUNC_08002c50();\n    }\n  }\n  else {\n    tempPtr1 = inputData[9];\n    inputData[9] = (uint *)((int)tempPtr1 + 1);\n    *(char *)tempPtr1 = (char)(*inputData)[4];\n    *(short *)((int)inputData + 0x2a) = *(short *)((int)inputData + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800306c": "process_input_0800306c",
                "param_1": "inputData",
                "puVar1": "tempPtr1"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002f9a",
                "FUN_08002c50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800316a": {
            "entrypoint": "0x0800316a",
            "current_name": "FUNC_0800316a",
            "code": "\nvoid FUNC_0800316a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800316a": "FUNC_0800316a"
            },
            "calling": [
                "FUN_0800316c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800316c": {
            "entrypoint": "0x0800316c",
            "current_name": "process_function_0800316c",
            "code": "\nvoid processFunction_0800316c(uint **inputParams)\n\n{\n  int returnValue;\n  uint *ptrVar2;\n  uint *ptrVar3;\n  \n  if (*(byte *)((int)inputParams + 0x3d) - 0x29 < 2) {\n    inputParams[0xc] = (uint *)0x0;\n    *(undefined *)((int)inputParams + 0x3d) = 0x28;\n  }\n  else {\n    if ((*(char *)((int)inputParams + 0x3d) != '`') && (((*inputParams)[1] & 0x800) == 0)) {\n      *(undefined *)((int)inputParams + 0x3d) = 0x20;\n    }\n    inputParams[0xc] = (uint *)0x0;\n    *(undefined *)((int)inputParams + 0x3e) = 0;\n  }\n  **inputParams = **inputParams & 0xfffff7ff;\n  ptrVar3 = *inputParams;\n  if ((ptrVar3[1] & 0x800) == 0) {\n    if (*(char *)((int)inputParams + 0x3d) == '`') {\n      *(undefined *)((int)inputParams + 0x3d) = 0x20;\n      inputParams[0x10] = (uint *)0x0;\n      if ((ptrVar3[5] & 0x40) != 0) {\n        ptrVar2 = inputParams[9];\n        inputParams[9] = (uint *)((int)ptrVar2 + 1);\n        *(char *)ptrVar2 = (char)ptrVar3[4];\n      }\n      **inputParams = **inputParams & 0xfffffffe;\n      FUNC_0800316a(inputParams);\n    }\n    else {\n      if ((ptrVar3[5] & 0x40) != 0) {\n        ptrVar2 = inputParams[9];\n        inputParams[9] = (uint *)((int)ptrVar2 + 1);\n        *(char *)ptrVar2 = (char)ptrVar3[4];\n      }\n      FUN_08004ef4(inputParams);\n    }\n  }\n  else {\n    ptrVar3[1] = ptrVar3[1] & 0xfffff7ff;\n    if (*(char *)((int)inputParams[0xd] + 0x21) == '\\x01') {\n      inputParams[0xe][0xd] = (uint)&LAB_080035fc_1;\n      returnValue = FUN_0800258c(inputParams[0xe]);\n      if (returnValue != 0) {\n        if (((*inputParams)[5] & 0x40) != 0) {\n          ptrVar3 = inputParams[9];\n          inputParams[9] = (uint *)((int)ptrVar3 + 1);\n          *(char *)ptrVar3 = (char)(*inputParams)[4];\n        }\n        **inputParams = **inputParams & 0xfffffffe;\n        *(undefined *)((int)inputParams + 0x3d) = 0x20;\n        (*(code *)inputParams[0xe][0xd])();\n      }\n    }\n    else {\n      inputParams[0xd][0xd] = (uint)&LAB_080035fc_1;\n      returnValue = FUN_0800258c(inputParams[0xd]);\n      if (returnValue != 0) {\n        **inputParams = **inputParams & 0xfffffffe;\n        *(undefined *)((int)inputParams + 0x3d) = 0x20;\n        (*(code *)inputParams[0xd][0xd])();\n      }\n    }\n  }\n  if ((*(char *)((int)inputParams + 0x3d) == '(') && (((uint)inputParams[0x10] & 4) != 0)) {\n    inputParams[0xb] = (uint *)0xffff0000;\n    inputParams[0xc] = (uint *)0x0;\n    *(undefined *)((int)inputParams + 0x3d) = 0x20;\n    *(undefined *)((int)inputParams + 0x3e) = 0;\n    FUN_08004ec4(inputParams);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800316c": "process_function_0800316c",
                "param_1": "inputParams",
                "iVar1": "returnValue",
                "puVar2": "ptrVar2",
                "puVar3": "ptrVar3"
            },
            "calling": [
                "FUN_08003520",
                "FUN_080032b4"
            ],
            "called": [
                "FUN_08004ec4",
                "FUN_0800258c",
                "FUN_0800316a",
                "FUN_08004ef4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080032b4": {
            "entrypoint": "0x080032b4",
            "current_name": "process_data_080032b4",
            "code": "\nundefined4 processData_080032b4(uint **data)\n\n{\n  char charValue;\n  uint *ptr1;\n  uint *ptr2;\n  \n  charValue = *(char *)((int)data + 0x3d);\n  (*data)[1] = (*data)[1] & 0xfffff8ff;\n  **data = **data | 1;\n  **data = **data & 0xfffffbff;\n  ptr1 = *data;\n  if ((ptr1[1] & 0x800) != 0) {\n    if ((*(char *)((int)data + 0x3d) == '\\\"') || (*(char *)((int)data + 0x3d) == '*')) {\n      *(short *)((int)data + 0x2a) = (short)*(undefined4 *)(*data[0xe] + 4);\n    }\n    else {\n      *(short *)((int)data + 0x2a) = (short)*(undefined4 *)(*data[0xd] + 4);\n    }\n  }\n  if (*(short *)((int)data + 0x2a) != 0) {\n    if ((ptr1[5] & 4) != 0) {\n      ptr2 = data[9];\n      data[9] = (uint *)((int)ptr2 + 1);\n      *(char *)ptr2 = (char)ptr1[4];\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n    if (((*data)[5] & 0x40) != 0) {\n      ptr1 = data[9];\n      data[9] = (uint *)((int)ptr1 + 1);\n      *(char *)ptr1 = (char)(*data)[4];\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n    data[0x10] = (uint *)((uint)data[0x10] | 4);\n  }\n  if (data[0x10] == (uint *)0x0) {\n    if (((charValue == '(') || (charValue == '*')) || (charValue == ')')) {\n      data[0xb] = (uint *)0xffff0000;\n      data[0xc] = (uint *)0x0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUN_08004ec4();\n    }\n    else if ((data[0xc] == (uint *)0x22) || (charValue == '\\\"')) {\n      data[0xc] = (uint *)0x0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUNC_08002ca4();\n    }\n  }\n  else {\n    FUN_0800316c();\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080032b4": "process_data_080032b4",
                "param_1": "data",
                "cVar1": "charValue",
                "puVar2": "ptr1",
                "puVar3": "ptr2"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_0800316c",
                "FUN_08004ec4",
                "FUN_08002ca4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080033b8": {
            "entrypoint": "0x080033b8",
            "current_name": "process_data_080033b8",
            "code": "\nvoid processData_080033b8(int *data)\n\n{\n  int value;\n  uint flags1;\n  uint flags2;\n  uint flags3;\n  \n  value = *data;\n  flags3 = *(uint *)(value + 0x18);\n  flags1 = *(uint *)(value + 0x14);\n  flags2 = *(uint *)(value + 4);\n  if ((*(char *)((int)data + 0x3e) == '\\x10') || (*(char *)((int)data + 0x3e) == '@')) {\n    if (((flags1 & 0x10001) == 0) || ((flags2 & 0x200) == 0)) {\n      if (((flags1 & 0x10008) == 0) || ((flags2 & 0x200) == 0)) {\n        if (((flags1 & 0x10002) != 0) && ((flags2 & 0x200) != 0)) {\n          FUN_080028de(data);\n        }\n      }\n      else {\n        FUN_080028d2(data);\n      }\n    }\n    else {\n      FUN_08002848(data);\n    }\n    if ((flags3 & 0x100004) == 0) {\n      if ((((flags1 & 0x10040) != 0) && ((flags2 & 0x400) != 0)) && ((flags1 & 0x10004) == 0)) {\n        FUN_08002f9c(data);\n        return;\n      }\n      if (((flags1 & 0x10004) != 0) && ((flags2 & 0x200) != 0)) {\n        FUN_0800306c(data);\n        return;\n      }\n    }\n    else {\n      if ((((flags1 & 0x10080) != 0) && ((flags2 & 0x400) != 0)) && ((flags1 & 0x10004) == 0)) {\n        FUN_08002db2(data);\n        return;\n      }\n      if (((flags1 & 0x10004) != 0) && ((flags2 & 0x200) != 0)) {\n        FUN_08002efc(data);\n        return;\n      }\n    }\n  }\n  else {\n    if (((flags1 & 0x10002) != 0) && ((flags2 & 0x200) != 0)) {\n      FUN_08002cf2();\n      return;\n    }\n    if (((flags1 & 0x10010) != 0) && ((flags2 & 0x200) != 0)) {\n      FUN_080032b4(data);\n      return;\n    }\n    if ((flags3 & 0x100004) == 0) {\n      if ((((flags1 & 0x10040) != 0) && ((flags2 & 0x400) != 0)) && ((flags1 & 0x10004) == 0)) {\n        FUN_08002ca6(data);\n        return;\n      }\n      if (((flags1 & 0x10004) != 0) && ((flags2 & 0x200) != 0)) {\n        FUN_08002ad8(data);\n      }\n    }\n    else {\n      if ((((flags1 & 0x10080) != 0) && ((flags2 & 0x400) != 0)) && ((flags1 & 0x10004) == 0)) {\n        FUN_08002c54(data);\n        return;\n      }\n      if (((flags1 & 0x10004) != 0) && ((flags2 & 0x200) != 0)) {\n        FUN_08002ab8(data);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080033b8": "process_data_080033b8",
                "param_1": "data",
                "iVar1": "value",
                "uVar2": "flags1",
                "uVar3": "flags2",
                "uVar4": "flags3"
            },
            "calling": [],
            "called": [
                "FUN_0800306c",
                "FUN_08002848",
                "FUN_08002ca6",
                "FUN_080028d2",
                "FUN_08002c54",
                "FUN_08002db2",
                "FUN_08002f9c",
                "FUN_080028de",
                "FUN_08002ab8",
                "FUN_08002ad8",
                "FUN_08002efc",
                "FUN_080032b4",
                "FUN_08002cf2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003520": {
            "entrypoint": "0x08003520",
            "current_name": "update_flags_and_values_08003520",
            "code": "\nvoid updateFlagsAndValues_08003520(uint **pointerToData)\n\n{\n  char character1;\n  uint *pointerToValues;\n  uint value1;\n  uint value2;\n  \n  pointerToValues = *pointerToData;\n  value1 = pointerToValues[5];\n  value2 = pointerToValues[1];\n  if (((value1 & 0x10100) != 0) && ((value2 & 0x100) != 0)) {\n    pointerToData[0x10] = (uint *)((uint)pointerToData[0x10] | 1);\n    pointerToValues[5] = 0xfffffeff;\n    **pointerToData = **pointerToData | 0x8000;\n  }\n  if (((value1 & 0x10200) != 0) && ((value2 & 0x100) != 0)) {\n    pointerToData[0x10] = (uint *)((uint)pointerToData[0x10] | 2);\n    (*pointerToData)[5] = 0xfffffdff;\n  }\n  if (((value1 & 0x10400) != 0) && ((value2 & 0x100) != 0)) {\n    character1 = *(char *)((int)pointerToData + 0x3d);\n    if (((*(char *)((int)pointerToData + 0x3e) == ' ') && (*(short *)((int)pointerToData + 0x2a) == 0)) &&\n       (((character1 == '!' || (character1 == ')')) || ((character1 == '(' && (pointerToData[0xc] == (uint *)0x21)))))) {\n      FUN_08002d1c(pointerToData);\n    }\n    else {\n      pointerToData[0x10] = (uint *)((uint)pointerToData[0x10] | 4);\n      if (*(char *)((int)pointerToData + 0x3e) == '\\x10') {\n        **pointerToData = **pointerToData | 0x200;\n      }\n      (*pointerToData)[5] = 0xfffffbff;\n    }\n  }\n  if (((value1 & 0x10800) != 0) && ((value2 & 0x100) != 0)) {\n    pointerToData[0x10] = (uint *)((uint)pointerToData[0x10] | 8);\n    (*pointerToData)[5] = 0xfffff7ff;\n  }\n  if (pointerToData[0x10] != (uint *)0x0) {\n    FUN_0800316c(pointerToData);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003520": "update_flags_and_values_08003520",
                "param_1": "pointerToData",
                "cVar1": "character1",
                "puVar2": "pointerToValues",
                "uVar3": "value1",
                "uVar4": "value2"
            },
            "calling": [],
            "called": [
                "FUN_0800316c",
                "FUN_08002d1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800365c": {
            "entrypoint": "0x0800365c",
            "current_name": "calculate_iterations_0800365c",
            "code": "\nvoid calculateIterations_0800365c(int inputValue)\n\n{\n  bool isAdjustedValueNonZero;\n  int adjustedValue;\n  \n  adjustedValue = inputValue * (DAT_20000084 / 8000);\n  do {\n    isAdjustedValueNonZero = adjustedValue != 0;\n    adjustedValue = adjustedValue + -1;\n  } while (isAdjustedValueNonZero);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800365c": "calculate_iterations_0800365c",
                "param_1": "inputValue",
                "local_4": "adjustedValue",
                "bVar1": "isAdjustedValueNonZero"
            },
            "calling": [
                "FUN_08003688"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003688": {
            "entrypoint": "0x08003688",
            "current_name": "process_flags_08003688",
            "code": "\n\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nundefined4 processFlags_08003688(uint *param_1)\n\n{\n  int startTime;\n  int currentTime;\n  undefined4 uVar3;\n  uint uVar4;\n  bool bVar5;\n  \n  if ((*param_1 & 1) != 0) {\n    if (((_DAT_40021004 & 0xc) == 4) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) != 0)))) {\n      if (((_DAT_40021000 & 0x20000) != 0) && (value1 == 0)) {\n        return 1;\n      }\n    }\n    else {\n      uVar4 = value1;\n      if (uVar4 == 0x10000) {\n        _DAT_40021000 = _DAT_40021000 | 0x10000;\n      }\n      else if (uVar4 == 0) {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      else if (uVar4 == 0x50000) {\n        _DAT_40021000 = _DAT_40021000 | 0x50000;\n      }\n      else {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      if (value1 == 0) {\n        startTime = FUN_08001cc4();\n        while ((_DAT_40021000 & 0x20000) != 0) {\n          currentTime = FUN_08001cc4();\n          if (100 < (uint)(currentTime - startTime)) {\n            return 3;\n          }\n        }\n      }\n      else {\n        startTime = FUN_08001cc4();\n        while ((_DAT_40021000 & 0x20000) == 0) {\n          currentTime = FUN_08001cc4();\n          if (100 < (uint)(currentTime - startTime)) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*param_1 & 2) != 0) {\n    if (((_DAT_40021004 & 0xc) == 0) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) == 0)))) {\n      if (((_DAT_40021000 & 2) != 0) && (value2 != 1)) {\n        return 1;\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | param_1[5] << 3;\n    }\n    else if (value2 == 0) {\n      _DAT_42420000 = 0;\n      startTime = FUN_08001cc4();\n      while ((_DAT_40021000 & 2) != 0) {\n        currentTime = FUN_08001cc4();\n        if (2 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420000 = 1;\n      startTime = FUN_08001cc4();\n      while ((_DAT_40021000 & 2) == 0) {\n        currentTime = FUN_08001cc4();\n        if (2 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | param_1[5] << 3;\n    }\n  }\n  if ((*param_1 & 8) != 0) {\n    if (value3 == 0) {\n      _DAT_42420480 = 0;\n      startTime = FUN_08001cc4();\n      while ((_DAT_40021024 & 2) != 0) {\n        currentTime = FUN_08001cc4();\n        if (2 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420480 = 1;\n      startTime = FUN_08001cc4();\n      while ((_DAT_40021024 & 2) == 0) {\n        currentTime = FUN_08001cc4();\n        if (2 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n      FUN_0800365c(1);\n    }\n  }\n  if ((*param_1 & 4) != 0) {\n    bVar5 = (_DAT_4002101c & 0x10000000) == 0;\n    if (bVar5) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      startTime = FUN_08001cc4();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        currentTime = FUN_08001cc4();\n        if (100 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    uVar4 = value4;\n    if (uVar4 == 1) {\n      _DAT_40021020 = _DAT_40021020 | 1;\n    }\n    else if (uVar4 == 0) {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    else if (uVar4 == 5) {\n      _DAT_40021020 = _DAT_40021020 | 5;\n    }\n    else {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    if (value4 == 0) {\n      startTime = FUN_08001cc4();\n      while ((_DAT_40021020 & 2) != 0) {\n        currentTime = FUN_08001cc4();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      startTime = FUN_08001cc4();\n      while ((_DAT_40021020 & 2) == 0) {\n        currentTime = FUN_08001cc4();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    if (bVar5) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if (param_1[7] == 0) {\n    uVar3 = 0;\n  }\n  else if ((_DAT_40021004 & 0xc) == 8) {\n    uVar3 = 1;\n  }\n  else if (param_1[7] == 2) {\n    _DAT_42420060 = 0;\n    startTime = FUN_08001cc4();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        if (param_1[8] == 0x10000) {\n          _DAT_40021004 = _DAT_40021004 & 0xfffdffff | param_1[2];\n        }\n        _DAT_40021004 = _DAT_40021004 & 0xffc2ffff | param_1[8] | param_1[9];\n        _DAT_42420060 = 1;\n        startTime = FUN_08001cc4();\n        do {\n          if ((_DAT_40021000 & 0x2000000) != 0) {\n            return 0;\n          }\n          currentTime = FUN_08001cc4();\n        } while ((uint)(currentTime - startTime) < 3);\n        return 3;\n      }\n      currentTime = FUN_08001cc4();\n    } while ((uint)(currentTime - startTime) < 3);\n    uVar3 = 3;\n  }\n  else {\n    _DAT_42420060 = 0;\n    startTime = FUN_08001cc4();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        return 0;\n      }\n      currentTime = FUN_08001cc4();\n    } while ((uint)(currentTime - startTime) < 3);\n    uVar3 = 3;\n  }\n  return uVar3;\n}\n\n",
            "renaming": {
                "FUN_08003688": "process_flags_08003688",
                "param_1[1]": "value1",
                "iVar1": "startTime",
                "iVar2": "currentTime",
                "param_1[4]": "value2",
                "param_1[6]": "value3",
                "param_1[3]": "value4"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08001cc4",
                "FUN_0800365c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a68": {
            "entrypoint": "0x08003a68",
            "current_name": "calculate_delay_08003a68",
            "code": "\n\n\nuint calculateDelay_08003a68(void)\n\n{\n  uint uVar1;\n  undefined2 value;\n  undefined4 mask;\n  undefined4 multiplier;\n  undefined4 divisor;\n  undefined4 constant;\n  \n  constant = 0x10100f0e;\n  divisor = 0xd0c0b0a;\n  multiplier = 0x9080706;\n  mask = 0x5040302;\n  value = 0x201;\n  if ((_DAT_40021004 & 0xc) == 8) {\n    uVar1 = (uint)*(byte *)((int)&mask + ((_DAT_40021004 << 10) >> 0x1c));\n    if ((_DAT_40021004 & 0x10000) == 0) {\n      uVar1 = uVar1 * 4000000;\n    }\n    else {\n      uVar1 = (uVar1 * 8000000) /\n              (uint)*(byte *)((int)&value - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n    }\n  }\n  else {\n    uVar1 = 8000000;\n  }\n  return uVar1;\n}\n\n",
            "renaming": {
                "FUN_08003a68": "calculate_delay_08003a68",
                "local_1c": "value",
                "uStack_18": "mask",
                "uStack_14": "multiplier",
                "uStack_10": "divisor",
                "uStack_c": "constant"
            },
            "calling": [
                "FUN_08003afa"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ad4": {
            "entrypoint": "0x08003ad4",
            "current_name": "initialize_memory_08003ad4",
            "code": "\n\n\nundefined4 initializeMemory_08003ad4(uint *memorySettings,uint desiredSize)\n\n{\n  int initialTime;\n  int currentTime;\n  uint temp;\n  \n  if ((_DAT_40022000 & 7) < desiredSize) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | desiredSize;\n    if (desiredSize != (desiredSize & 7)) {\n      return 1;\n    }\n  }\n  if ((*memorySettings & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | memorySettings[2];\n  }\n  if ((*memorySettings & 1) != 0) {\n    temp = memorySettings[1];\n    if (temp == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((temp != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = temp | _DAT_40021004 & 0xfffffffc;\n    initialTime = FUN_08001cc4();\n    if (memorySettings[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        currentTime = FUN_08001cc4();\n        if (5000 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n    }\n    else if (memorySettings[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        currentTime = FUN_08001cc4();\n        if (5000 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        currentTime = FUN_08001cc4();\n        if (5000 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (desiredSize < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | desiredSize;\n    if (desiredSize != (desiredSize & 7)) {\n      return 1;\n    }\n  }\n  if ((*memorySettings & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | memorySettings[3];\n  }\n  if ((*memorySettings & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | memorySettings[4] << 3;\n  }\n  temp = FUN_08003a68();\n  DAT_20000084 = temp >> (&DAT_0800772c)[(_DAT_40021004 << 0x18) >> 0x1c];\n  FUN_08001c3c(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003ad4": "initialize_memory_08003ad4",
                "param_1": "memorySettings",
                "param_2": "desiredSize",
                "iVar1": "initialTime",
                "iVar2": "currentTime",
                "uVar3": "temp"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08003afa"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003afa": {
            "entrypoint": "0x08003afa",
            "current_name": "process_input_08003afa",
            "code": "\n\n\nundefined4 processInput_08003afa(uint *flags,uint value)\n\n{\n  int initialValue;\n  int currentValue;\n  uint tempVar;\n  \n  if ((*flags & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | flags[2];\n  }\n  if ((*flags & 1) != 0) {\n    tempVar = flags[1];\n    if (tempVar == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((tempVar != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = tempVar | _DAT_40021004 & 0xfffffffc;\n    initialValue = FUN_08001cc4();\n    if (flags[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        currentValue = FUN_08001cc4();\n        if (5000 < (uint)(currentValue - initialValue)) {\n          return 3;\n        }\n      }\n    }\n    else if (flags[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        currentValue = FUN_08001cc4();\n        if (5000 < (uint)(currentValue - initialValue)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        currentValue = FUN_08001cc4();\n        if (5000 < (uint)(currentValue - initialValue)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (value < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | value;\n    if (value != (value & 7)) {\n      return 1;\n    }\n  }\n  if ((*flags & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | flags[3];\n  }\n  if ((*flags & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | flags[4] << 3;\n  }\n  tempVar = FUN_08003a68();\n  DAT_20000084 = tempVar >> (&DAT_0800772c)[(_DAT_40021004 << 0x18) >> 0x1c];\n  FUN_08001c3c(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003afa": "process_input_08003afa",
                "param_1": "flags",
                "param_2": "value",
                "iVar1": "initialValue",
                "iVar2": "currentValue",
                "uVar3": "tempVar"
            },
            "calling": [
                "FUN_08003ad4"
            ],
            "called": [
                "FUN_08003a68",
                "FUN_08001c3c",
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003c44": {
            "entrypoint": "0x08003c44",
            "current_name": "get_global_variable_08003c44",
            "code": "\nundefined4 getGlobalVariable_08003c44(void)\n\n{\n  return DAT_20000084;\n}\n\n",
            "renaming": {
                "FUN_08003c44": "get_global_variable_08003c44"
            },
            "calling": [
                "FUN_08001b48",
                "FUN_08003c50",
                "FUN_08003c70"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003c50": {
            "entrypoint": "0x08003c50",
            "current_name": "shifted_value_by_pointer_08003c50",
            "code": "\n\n\nuint shiftedValueByPointer_08003c50(void)\n\n{\n  uint result;\n  \n  result = FUN_08003c44();\n  return result >> (&DAT_0800773c)[(uint)(_DAT_40021004 << 0x15) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_08003c50": "shifted_value_by_pointer_08003c50",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08004204"
            ],
            "called": [
                "FUN_08003c44"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003c70": {
            "entrypoint": "0x08003c70",
            "current_name": "calculate_shifted_value_08003c70",
            "code": "\n\n\nuint calculate_shifted_value_08003c70(void)\n\n{\n  uint result;\n  \n  result = FUN_08003c44();\n  return result >> (&DAT_0800773c)[(uint)(_DAT_40021004 << 0x12) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_08003c70": "calculate_shifted_value_08003c70",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08003da4",
                "FUN_08004204"
            ],
            "called": [
                "FUN_08003c44"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003c90": {
            "entrypoint": "0x08003c90",
            "current_name": "update_configuration_08003c90",
            "code": "\n\n\nundefined4 updateConfiguration_08003c90(uint *config)\n\n{\n  uint flag1;\n  uint flag2;\n  int initialTime;\n  int currentTime;\n  bool isFirstTime;\n  \n  if ((*config & 1) != 0) {\n    isFirstTime = (_DAT_4002101c & 0x10000000) == 0;\n    if (isFirstTime) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      initialTime = FUN_08001cc4();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        currentTime = FUN_08001cc4();\n        if (100 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n    }\n    if (((_DAT_40021020 & 0x300) != 0) && ((_DAT_40021020 & 0x300) != (config[1] & 0x300))) {\n      flag2 = _DAT_40021020 & 0xfffffcff;\n      _DAT_42420440 = 0;\n      flag1 = _DAT_40021020 & 1;\n      _DAT_40021020 = flag2;\n      if (flag1 != 0) {\n        initialTime = FUN_08001cc4();\n        while ((_DAT_40021020 & 2) == 0) {\n          currentTime = FUN_08001cc4();\n          if (5000 < (uint)(currentTime - initialTime)) {\n            return 3;\n          }\n        }\n      }\n    }\n    _DAT_40021020 = _DAT_40021020 & 0xfffffcff | config[1];\n    if (isFirstTime) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if ((*config & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffff3fff | config[2];\n  }\n  if ((*config & 0x10) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffbfffff | config[3];\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003c90": "update_configuration_08003c90",
                "param_1": "config",
                "uVar1": "flag1",
                "uVar2": "flag2",
                "iVar3": "initialTime",
                "iVar4": "currentTime",
                "bVar5": "isFirstTime"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003da4": {
            "entrypoint": "0x08003da4",
            "current_name": "calculate_resource_08003da4",
            "code": "\n\n\nuint calculateResource_08003da4(int resourceType)\n\n{\n  uint result;\n  undefined2 randomValue;\n  undefined4 constantValue1;\n  undefined4 constantValue2;\n  undefined4 constantValue3;\n  undefined4 constantValue4;\n  \n  constantValue4 = 0x10100f0e;\n  constantValue3 = 0xd0c0b0a;\n  constantValue2 = 0x9080706;\n  constantValue1 = 0x5040302;\n  randomValue = 0x201;\n  if (resourceType == 2) {\n    result = FUN_08003c70();\n    result = result / ((((_DAT_40021004 << 0x10) >> 0x1e) + 1) * 2);\n  }\n  else if (resourceType == 0x10) {\n    if ((_DAT_40021000 & 0x1000000) == 0) {\n      result = 0;\n    }\n    else {\n      if ((_DAT_40021004 & 0x10000) == 0) {\n        result = 4000000;\n      }\n      else {\n        result = 8000000 / *(byte *)((int)&randomValue - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n      }\n      result = result * *(byte *)((int)&constantValue1 + ((_DAT_40021004 << 10) >> 0x1c));\n      if ((_DAT_40021004 & 0x400000) == 0) {\n        result = (result * 2) / 3;\n      }\n    }\n  }\n  else if (resourceType == 1) {\n    if ((_DAT_40021020 & 0x302) == 0x102) {\n      result = 0x8000;\n    }\n    else if (((_DAT_40021020 & 0x300) == 0x200) && ((_DAT_40021024 & 2) != 0)) {\n      result = 32000;\n    }\n    else if ((_DAT_40021020 & 0x300) == 0x300) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        result = 0;\n      }\n      else {\n        result = 0xf424;\n      }\n    }\n    else {\n      result = 0;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08003da4": "calculate_resource_08003da4",
                "param_1": "resourceType",
                "uVar1": "result",
                "local_24": "randomValue",
                "uStack_20": "constantValue1",
                "uStack_1c": "constantValue2",
                "uStack_18": "constantValue3",
                "uStack_14": "constantValue4"
            },
            "calling": [
                "FUN_08002384",
                "FUN_08001cd0"
            ],
            "called": [
                "FUN_08003c70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ea0": {
            "entrypoint": "0x08003ea0",
            "current_name": "check_and_initialize_data_08003ea0",
            "code": "\n\n\nvoid check_and_initialize_data_08003ea0(uint **data_ptr)\n\n{\n  if (((**data_ptr & 2) != 0) && (((*data_ptr)[1] & 2) != 0)) {\n    FUN_08004d18();\n    (*data_ptr)[1] = 0xfffffffd;\n  }\n  _DAT_40010414 = 0x20000;\n  *(undefined *)((int)data_ptr + 0x11) = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003ea0": "check_and_initialize_data_08003ea0",
                "param_1": "data_ptr"
            },
            "calling": [],
            "called": [
                "FUN_08004d18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ed8": {
            "entrypoint": "0x08003ed8",
            "current_name": "update_data_08003ed8",
            "code": "\nvoid updateData_08003ed8(uint **data)\n\n{\n  uint *pointer1;\n  \n  *(undefined *)((int)data + 0x3d) = 2;\n  pointer1 = *data;\n  if ((pointer1[8] & 0x1111) == 0) {\n    if ((pointer1[8] & 0x444) == 0) {\n      *pointer1 = *pointer1 & 0xfffffffe;\n    }\n  }\n  FUN_08004b34(data);\n  *(undefined *)((int)data + 0x3d) = 0;\n  *(undefined *)(data + 0xf) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003ed8": "update_data_08003ed8",
                "param_1": "data",
                "puVar1": "pointer1"
            },
            "calling": [
                "FUN_08004b3c"
            ],
            "called": [
                "FUN_08004b34"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f12": {
            "entrypoint": "0x08003f12",
            "current_name": "FUNC_08003f12",
            "code": "\nvoid FUNC_08003f12(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f12": "FUNC_08003f12"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08003f14": {
            "entrypoint": "0x08003f14",
            "current_name": "FUNC_08003f14",
            "code": "\nvoid FUNC_08003f14(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f14": "FUNC_08003f14"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08003f16": {
            "entrypoint": "0x08003f16",
            "current_name": "FUNC_08003f16",
            "code": "\nvoid FUNC_08003f16(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f16": "FUNC_08003f16"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08003f18": {
            "entrypoint": "0x08003f18",
            "current_name": "process_data_08003f18",
            "code": "\nvoid processData_08003f18(int *data)\n\n{\n  int value;\n  \n  value = *data;\n  if (((*(uint *)(value + 0x10) & 2) != 0) && ((*(uint *)(value + 0xc) & 2) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffd;\n    *(undefined *)(data + 7) = 1;\n    if ((*(uint *)(*data + 0x18) & 3) == 0) {\n      FUN_08004df8();\n      FUNC_08003f14(data);\n    }\n    else {\n      FUNC_08003f12();\n    }\n    *(undefined *)(data + 7) = 0;\n  }\n  value = *data;\n  if (((*(uint *)(value + 0x10) & 4) != 0) && ((*(uint *)(value + 0xc) & 4) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffb;\n    *(undefined *)(data + 7) = 2;\n    if ((*(uint *)(*data + 0x18) & 0x300) == 0) {\n      FUN_08004df8(data);\n      FUNC_08003f14(data);\n    }\n    else {\n      FUNC_08003f12(data);\n    }\n    *(undefined *)(data + 7) = 0;\n  }\n  value = *data;\n  if (((*(uint *)(value + 0x10) & 8) != 0) && ((*(uint *)(value + 0xc) & 8) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffff7;\n    *(undefined *)(data + 7) = 4;\n    if ((*(uint *)(*data + 0x1c) & 3) == 0) {\n      FUN_08004df8(data);\n      FUNC_08003f14(data);\n    }\n    else {\n      FUNC_08003f12(data);\n    }\n    *(undefined *)(data + 7) = 0;\n  }\n  value = *data;\n  if (((*(uint *)(value + 0x10) & 0x10) != 0) && ((*(uint *)(value + 0xc) & 0x10) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffef;\n    *(undefined *)(data + 7) = 8;\n    if ((*(uint *)(*data + 0x1c) & 0x300) == 0) {\n      FUN_08004df8(data);\n      FUNC_08003f14(data);\n    }\n    else {\n      FUNC_08003f12(data);\n    }\n    *(undefined *)(data + 7) = 0;\n  }\n  value = *data;\n  if (((*(uint *)(value + 0x10) & 1) != 0) && ((*(uint *)(value + 0xc) & 1) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffe;\n    FUN_08004e12(data);\n  }\n  value = *data;\n  if (((*(uint *)(value + 0x10) & 0x80) != 0) && ((*(uint *)(value + 0xc) & 0x80) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffff7f;\n    FUNC_0800417a(data);\n  }\n  value = *data;\n  if (((*(uint *)(value + 0x10) & 0x40) != 0) && ((*(uint *)(value + 0xc) & 0x40) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffbf;\n    FUNC_08003f16(data);\n  }\n  value = *data;\n  if (((*(uint *)(value + 0x10) & 0x20) != 0) && ((*(uint *)(value + 0xc) & 0x20) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffdf;\n    FUNC_08004178(data);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f18": "process_data_08003f18",
                "param_1": "data",
                "iVar1": "value"
            },
            "calling": [
                "FUN_08004e20"
            ],
            "called": [
                "FUN_08003f14",
                "FUN_08004178",
                "FUN_08004e12",
                "FUN_0800417a",
                "FUN_08003f12",
                "FUN_08004df8",
                "FUN_08003f16"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004092": {
            "entrypoint": "0x08004092",
            "current_name": "update_bit_in_value_08004092",
            "code": "\nvoid updateBitInValue_08004092(int baseAddress,uint bitPosition,int newValue)\n\n{\n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) & ~(1 << (bitPosition & 0xff));\n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) | newValue << (bitPosition & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004092": "update_bit_in_value_08004092",
                "param_1": "baseAddress",
                "param_2": "bitPosition",
                "param_3": "newValue"
            },
            "calling": [
                "FUN_080040b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040b0": {
            "entrypoint": "0x080040b0",
            "current_name": "update_flags_and_set_bit_080040b0",
            "code": "\nundefined4 updateFlagsAndSetBit_080040b0(uint **paramArray,undefined4 value)\n\n{\n  uint *ptr;\n  \n  FUN_08004092(*paramArray,value,0);\n  if (((*paramArray == (uint *)0x40012c00) && ((dataValue1 & 0x1111) == 0)) &&\n     ((dataValue1 & 0x444) == 0)) {\n    dataValue2 = dataValue2 & 0xffff7fff;\n  }\n  ptr = *paramArray;\n  if (((ptr[8] & 0x1111) == 0) && ((ptr[8] & 0x444) == 0)) {\n    *ptr = *ptr & 0xfffffffe;\n  }\n  *(undefined *)((int)paramArray + 0x3d) = 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080040b0": "update_flags_and_set_bit_080040b0",
                "param_1": "paramArray",
                "param_2": "value",
                "puVar1": "ptr",
                "uRam40012c20": "dataValue1",
                "uRam40012c44": "dataValue2"
            },
            "calling": [
                "FUN_08004b3c"
            ],
            "called": [
                "FUN_08004092"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004110": {
            "entrypoint": "0x08004110",
            "current_name": "update_bitwise_value_08004110",
            "code": "\nvoid updateBitwiseValue_08004110(int dataAddress,uint bitPosition,int bitValue)\n\n{\n  *(uint *)(dataAddress + 0x20) = *(uint *)(dataAddress + 0x20) & ~(4 << (bitPosition & 0xff));\n  *(uint *)(dataAddress + 0x20) = *(uint *)(dataAddress + 0x20) | bitValue << (bitPosition & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004110": "update_bitwise_value_08004110",
                "param_1": "dataAddress",
                "param_2": "bitPosition",
                "param_3": "bitValue"
            },
            "calling": [
                "FUN_0800412c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800412c": {
            "entrypoint": "0x0800412c",
            "current_name": "update_flags_and_values_0800412c",
            "code": "\nundefined4 updateFlagsAndValues_0800412c(uint **inputArray,undefined4 paramValue)\n\n{\n  uint *currentArrayElement;\n  \n  FUN_08004110(*inputArray,paramValue,0);\n  currentArrayElement = *inputArray;\n  if (((currentArrayElement[8] & 0x1111) == 0) && ((currentArrayElement[8] & 0x444) == 0)) {\n    currentArrayElement[0x11] = currentArrayElement[0x11] & 0xffff7fff;\n  }\n  currentArrayElement = *inputArray;\n  if (((currentArrayElement[8] & 0x1111) == 0) && ((currentArrayElement[8] & 0x444) == 0)) {\n    *currentArrayElement = *currentArrayElement & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800412c": "update_flags_and_values_0800412c",
                "param_1": "inputArray",
                "param_2": "paramValue",
                "puVar1": "currentArrayElement"
            },
            "calling": [
                "FUN_08004b3c"
            ],
            "called": [
                "FUN_08004110"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004178": {
            "entrypoint": "0x08004178",
            "current_name": "FUNC_08004178",
            "code": "\nvoid FUNC_08004178(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004178": "FUNC_08004178"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800417a": {
            "entrypoint": "0x0800417a",
            "current_name": "FUNC_0800417a",
            "code": "\nvoid FUNC_0800417a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800417a": "FUNC_0800417a"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800417c": {
            "entrypoint": "0x0800417c",
            "current_name": "clear_flags_and_set_space_0800417c",
            "code": "\nvoid clearFlagsAndSetSpace_0800417c(int *data)\n\n{\n  *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xfffffedf;\n  *(uint *)(*data + 0x14) = *(uint *)(*data + 0x14) & 0xfffffffe;\n  *(undefined *)((int)data + 0x3a) = 0x20;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800417c": "clear_flags_and_set_space_0800417c",
                "param_1": "data"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004198": {
            "entrypoint": "0x08004198",
            "current_name": "process_data_08004198",
            "code": "\nundefined4 processData_08004198(int *data)\n\n{\n  short counter;\n  byte *bytePtr;\n  \n  if (*(char *)((int)data + 0x39) != '!') {\n    return 2;\n  }\n  if (data[2] == 0x1000) {\n    *(uint *)(*data + 4) = *(ushort *)data[8] & 0x1ff;\n    if (data[4] == 0) {\n      data[8] = data[8] + 2;\n    }\n    else {\n      data[8] = data[8] + 1;\n    }\n  }\n  else {\n    bytePtr = (byte *)data[8];\n    data[8] = (int)(bytePtr + 1);\n    *(uint *)(*data + 4) = (uint)*bytePtr;\n  }\n  counter = *(short *)((int)data + 0x26) + -1;\n  *(short *)((int)data + 0x26) = counter;\n  if (counter == 0) {\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xffffff7f;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) | 0x40;\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004198": "process_data_08004198",
                "param_1": "data",
                "sVar1": "counter",
                "pbVar2": "bytePtr"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004204": {
            "entrypoint": "0x08004204",
            "current_name": "calculate_values_08004204",
            "code": "\nvoid calculateValues_08004204(int *inputArray)\n\n{\n  int result1;\n  int result2;\n  int result3;\n  int result4;\n  int result5;\n  int result6;\n  int result7;\n  int result8;\n  int result9;\n  int result10;\n  \n  *(uint *)(*inputArray + 0x10) = *(uint *)(*inputArray + 0x10) & 0xffffcfff | inputArray[3];\n  *(uint *)(*inputArray + 0xc) =\n       inputArray[2] | inputArray[4] | inputArray[5] | *(uint *)(*inputArray + 0xc) & 0xffffe9f3;\n  *(uint *)(*inputArray + 0x14) = *(uint *)(*inputArray + 0x14) & 0xfffffcff | inputArray[6];\n  result10 = *inputArray;\n  if (result10 != 0x40013800) {\n    result1 = FUN_08003c50();\n    result6 = inputArray[1];\n    result2 = FUN_08003c50();\n    result7 = inputArray[1];\n    result3 = FUN_08003c50();\n    result8 = inputArray[1];\n    result4 = FUN_08003c50();\n    result9 = inputArray[1];\n    result5 = FUN_08003c50();\n    *(uint *)(result10 + 8) =\n         ((uint)((int)((ulonglong)\n                       (((uint)(result4 * 0x19) / (uint)(result9 << 2) +\n                        (int)(((ulonglong)(uint)(result5 * 0x19) / (ulonglong)(uint)(inputArray[1] << 2))\n                             / 100) * -100) * 0x10 + 0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n         ((((uint)(result2 * 0x19) / (uint)(result7 << 2) +\n           (int)(((ulonglong)(uint)(result3 * 0x19) / (ulonglong)(uint)(result8 << 2)) / 100) * -100) *\n           0x10 + 0x32) / 100 & 0xf0) +\n         (int)(((ulonglong)(uint)(result1 * 0x19) / (ulonglong)(uint)(result6 << 2)) / 100) * 0x10;\n    return;\n  }\n  result10 = FUN_08003c70();\n  result5 = inputArray[1];\n  result1 = FUN_08003c70();\n  result6 = inputArray[1];\n  result2 = FUN_08003c70();\n  result7 = inputArray[1];\n  result3 = FUN_08003c70();\n  result8 = inputArray[1];\n  result4 = FUN_08003c70();\n  iRam40013808 = ((uint)((int)((ulonglong)\n                               (((uint)(result3 * 0x19) / (uint)(result8 << 2) +\n                                (int)(((ulonglong)(uint)(result4 * 0x19) /\n                                      (ulonglong)(uint)(inputArray[1] << 2)) / 100) * -100) * 0x10 +\n                               0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n                 ((((uint)(result1 * 0x19) / (uint)(result6 << 2) +\n                   (int)(((ulonglong)(uint)(result2 * 0x19) / (ulonglong)(uint)(result7 << 2)) / 100) *\n                   -100) * 0x10 + 0x32) / 100 & 0xf0) +\n                 (int)(((ulonglong)(uint)(result10 * 0x19) / (ulonglong)(uint)(result5 << 2)) / 100) *\n                 0x10;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004204": "calculate_values_08004204",
                "param_1": "inputArray",
                "iVar1": "result1",
                "iVar2": "result2",
                "iVar3": "result3",
                "iVar4": "result4",
                "iVar5": "result5",
                "iVar6": "result6",
                "iVar7": "result7",
                "iVar8": "result8",
                "iVar9": "result9",
                "iVar10": "result10"
            },
            "calling": [
                "FUN_0800441a"
            ],
            "called": [
                "FUN_08003c50",
                "FUN_08003c70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080043b4": {
            "entrypoint": "0x080043b4",
            "current_name": "check_params_080043b4",
            "code": "\nundefined4 checkParams_080043b4(uint **paramArray,uint flag,uint condition,int value,uint limit)\n\n{\n  int result;\n  \n  do {\n    if (((flag & ~**paramArray) == 0) != condition) {\n      return 0;\n    }\n  } while ((limit == 0xffffffff) ||\n          ((limit != 0 && (result = FUN_08001cc4(), (uint)(result - value) <= limit))));\n  (*paramArray)[3] = (*paramArray)[3] & 0xfffffe5f;\n  (*paramArray)[5] = (*paramArray)[5] & 0xfffffffe;\n  *(undefined *)((int)paramArray + 0x39) = 0x20;\n  *(undefined *)((int)paramArray + 0x3a) = 0x20;\n  *(undefined *)(paramArray + 0xe) = 0;\n  return 3;\n}\n\n",
            "renaming": {
                "FUN_080043b4": "check_params_080043b4",
                "param_1": "paramArray",
                "param_2": "flag",
                "param_3": "condition",
                "param_4": "value",
                "param_5": "limit",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08004478"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004418": {
            "entrypoint": "0x08004418",
            "current_name": "FUNC_08004418",
            "code": "\nvoid FUNC_08004418(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004418": "FUNC_08004418"
            },
            "calling": [
                "FUN_0800441a"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800441a": {
            "entrypoint": "0x0800441a",
            "current_name": "initialize_data_structure_0800441a",
            "code": "\nundefined4 initializeDataStructure_0800441a(int *dataStructure)\n\n{\n  if (dataStructure != (int *)0x0) {\n    if (*(char *)((int)dataStructure + 0x39) == '\\0') {\n      *(undefined *)(dataStructure + 0xe) = 0;\n      FUNC_08004418();\n    }\n    *(undefined *)((int)dataStructure + 0x39) = 0x24;\n    *(uint *)(*dataStructure + 0xc) = *(uint *)(*dataStructure + 0xc) & 0xffffdfff;\n    FUN_08004204(dataStructure);\n    *(uint *)(*dataStructure + 0x10) = *(uint *)(*dataStructure + 0x10) & 0xffffb7ff;\n    *(uint *)(*dataStructure + 0x14) = *(uint *)(*dataStructure + 0x14) & 0xffffffd5;\n    *(uint *)(*dataStructure + 0xc) = *(uint *)(*dataStructure + 0xc) | 0x2000;\n    variable2 = 0;\n    *(undefined *)((int)dataStructure + 0x39) = 0x20;\n    *(undefined *)((int)dataStructure + 0x3a) = 0x20;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800441a": "initialize_data_structure_0800441a",
                "param_1": "dataStructure",
                "param_1[0xf]": "variable2"
            },
            "calling": [
                "FUN_08004f4c"
            ],
            "called": [
                "FUN_08004204",
                "FUN_08004418"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004478": {
            "entrypoint": "0x08004478",
            "current_name": "process_data_08004478",
            "code": "\nundefined4 processData_08004478(int *dataPtr,ushort *bufferPtr,int bufferSize,undefined4 param4)\n\n{\n  int result;\n  undefined4 status;\n  \n  if (*(char *)((int)dataPtr + 0x39) == ' ') {\n    if (bufferPtr == (ushort *)0x0) {\n      status = 1;\n    }\n    else if (bufferSize == 0) {\n      status = 1;\n    }\n    else if (*(char *)(dataPtr + 0xe) == '\\x01') {\n      status = 2;\n    }\n    else {\n      *(undefined *)(dataPtr + 0xe) = 1;\n      dataPtr[0xf] = 0;\n      *(undefined *)((int)dataPtr + 0x39) = 0x21;\n      status = FUN_08001cc4();\n      *(short *)(dataPtr + 9) = (short)bufferSize;\n      *(short *)((int)dataPtr + 0x26) = (short)bufferSize;\n      while (*(short *)((int)dataPtr + 0x26) != 0) {\n        *(short *)((int)dataPtr + 0x26) = *(short *)((int)dataPtr + 0x26) + -1;\n        if (dataPtr[2] == 0x1000) {\n          result = FUN_080043b4(dataPtr,0x80,0,status,param4);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*dataPtr + 4) = *bufferPtr & 0x1ff;\n          if (dataPtr[4] == 0) {\n            bufferPtr = bufferPtr + 1;\n          }\n          else {\n            bufferPtr = (ushort *)((int)bufferPtr + 1);\n          }\n        }\n        else {\n          result = FUN_080043b4(dataPtr,0x80,0,status,param4);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*dataPtr + 4) = (uint)*(byte *)bufferPtr;\n          bufferPtr = (ushort *)((int)bufferPtr + 1);\n        }\n      }\n      result = FUN_080043b4(dataPtr,0x40,0,status,param4);\n      if (result == 0) {\n        *(undefined *)((int)dataPtr + 0x39) = 0x20;\n        *(undefined *)(dataPtr + 0xe) = 0;\n        status = 0;\n      }\n      else {\n        status = 3;\n      }\n    }\n  }\n  else {\n    status = 2;\n  }\n  return status;\n}\n\n",
            "renaming": {
                "FUN_08004478": "process_data_08004478",
                "param_1": "dataPtr",
                "param_2": "bufferPtr",
                "param_3": "bufferSize",
                "param_4": "param4",
                "iVar1": "result",
                "uVar2": "status"
            },
            "calling": [
                "FUN_080053d4"
            ],
            "called": [
                "FUN_08001cc4",
                "FUN_080043b4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800455a": {
            "entrypoint": "0x0800455a",
            "current_name": "validate_and_set_params_0800455a",
            "code": "\nundefined4 validateAndSetParams_0800455a(int *inputArray,int value1,int value2)\n\n{\n  if (*(char *)((int)inputArray + 0x39) != ' ') {\n    return 2;\n  }\n  if (value1 == 0) {\n    return 1;\n  }\n  if (value2 == 0) {\n    return 1;\n  }\n  if (*(char *)(inputArray + 0xe) != '\\x01') {\n    inputArray[8] = value1;\n    *(short *)(inputArray + 9) = (short)value2;\n    *(short *)((int)inputArray + 0x26) = (short)value2;\n    inputArray[0xf] = 0;\n    *(undefined *)((int)inputArray + 0x39) = 0x21;\n    *(undefined *)(inputArray + 0xe) = 0;\n    *(uint *)(*inputArray + 0xc) = *(uint *)(*inputArray + 0xc) | 0x80;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_0800455a": "validate_and_set_params_0800455a",
                "param_1": "inputArray",
                "param_2": "value1",
                "param_3": "value2"
            },
            "calling": [
                "FUN_08005604",
                "FUN_08005568"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080045a2": {
            "entrypoint": "0x080045a2",
            "current_name": "process_data_080045a2",
            "code": "\nundefined4 processData_080045a2(int *data,int value1,int value2)\n\n{\n  if (*(char *)((int)data + 0x3a) != ' ') {\n    return 2;\n  }\n  if (value1 == 0) {\n    return 1;\n  }\n  if (value2 == 0) {\n    return 1;\n  }\n  if (*(char *)(data + 0xe) != '\\x01') {\n    dataElement1 = value1;\n    *(short *)(data + 0xb) = (short)value2;\n    *(short *)((int)data + 0x2e) = (short)value2;\n    dataElement4 = 0;\n    *(undefined *)((int)data + 0x3a) = 0x22;\n    *(undefined *)(data + 0xe) = 0;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) | 0x100;\n    *(uint *)(*data + 0x14) = *(uint *)(*data + 0x14) | 1;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) | 0x20;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_080045a2": "process_data_080045a2",
                "param_1": "data",
                "param_2": "value1",
                "param_3": "value2",
                "param_1[10]": "dataElement1",
                "param_1[0xf]": "dataElement4"
            },
            "calling": [
                "FUN_08005510",
                "FUN_080054d4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080045fe": {
            "entrypoint": "0x080045fe",
            "current_name": "set_flag_and_call_function_080045fe",
            "code": "\nundefined4 setFlagAndCallFunction_080045fe(int *arg_pointer)\n\n{\n  *(uint *)(*arg_pointer + 0xc) = *(uint *)(*arg_pointer + 0xc) & 0xffffffbf;\n  *(undefined *)((int)arg_pointer + 0x39) = 0x20;\n  FUN_08005604();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080045fe": "set_flag_and_call_function_080045fe",
                "param_1": "arg_pointer"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [
                "FUN_08005604"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004618": {
            "entrypoint": "0x08004618",
            "current_name": "process_parameter_08004618",
            "code": "\nundefined4 processParameter_08004618(int *param)\n\n{\n  byte *bytePtr;\n  short shortVar;\n  undefined *undefinedPtr;\n  \n  if (*(char *)((int)param + 0x3a) != '\\\"') {\n    return 2;\n  }\n  if (param[2] == 0x1000) {\n    if (param[4] == 0) {\n      *(ushort *)param[10] = (ushort)((uint)(*(int *)(*param + 4) << 0x17) >> 0x17);\n      param[10] = param[10] + 2;\n    }\n    else {\n      *(ushort *)param[10] = (ushort)*(undefined4 *)(*param + 4) & 0xff;\n      param[10] = param[10] + 1;\n    }\n  }\n  else if (param[4] == 0) {\n    undefinedPtr = (undefined *)param[10];\n    param[10] = (int)(undefinedPtr + 1);\n    *undefinedPtr = (char)*(undefined4 *)(*param + 4);\n  }\n  else {\n    bytePtr = (byte *)param[10];\n    param[10] = (int)(bytePtr + 1);\n    *bytePtr = (byte)*(undefined4 *)(*param + 4) & 0x7f;\n  }\n  shortVar = *(short *)((int)param + 0x2e) + -1;\n  *(short *)((int)param + 0x2e) = shortVar;\n  if (shortVar != 0) {\n    return 0;\n  }\n  *(uint *)(*param + 0xc) = *(uint *)(*param + 0xc) & 0xffffffdf;\n  *(uint *)(*param + 0xc) = *(uint *)(*param + 0xc) & 0xfffffeff;\n  *(uint *)(*param + 0x14) = *(uint *)(*param + 0x14) & 0xfffffffe;\n  *(undefined *)((int)param + 0x3a) = 0x20;\n  FUN_080055e0();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004618": "process_parameter_08004618",
                "param_1": "param",
                "pbVar1": "bytePtr",
                "sVar2": "shortVar",
                "puVar3": "undefinedPtr"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [
                "FUN_080055e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080046b8": {
            "entrypoint": "0x080046b8",
            "current_name": "check_and_update_flags_080046b8",
            "code": "\nvoid check_and_update_flags_080046b8(uint **param_1)\n\n{\n  int result;\n  uint flags2;\n  uint *ptr_param;\n  uint is_flag2_set;\n  uint flags1;\n  \n  ptr_param = *param_1;\n  flags1 = *ptr_param;\n  flags2 = ptr_param[3];\n  if ((((flags1 & 0xf) == 0) && ((flags1 & 0x20) != 0)) && ((flags2 & 0x20) != 0)) {\n    FUN_08004618(param_1);\n    return;\n  }\n  if (((flags1 & 0xf) == 0) || ((is_flag2_set = ptr_param[5] & 1, is_flag2_set == 0 && ((flags2 & 0x120) == 0)))) {\n    if (((flags1 & 0x80) != 0) && ((flags2 & 0x80) != 0)) {\n      FUN_08004198(param_1);\n      return;\n    }\n    if (((flags1 & 0x40) != 0) && ((flags2 & 0x40) != 0)) {\n      FUN_080045fe(param_1);\n    }\n  }\n  else {\n    if (((flags1 & 1) != 0) && ((flags2 & 0x100) != 0)) {\n      param_1[0xf] = (uint *)((uint)param_1[0xf] | 1);\n    }\n    if (((flags1 & 4) != 0) && (is_flag2_set != 0)) {\n      param_1[0xf] = (uint *)((uint)param_1[0xf] | 2);\n    }\n    if (((flags1 & 2) != 0) && (is_flag2_set != 0)) {\n      param_1[0xf] = (uint *)((uint)param_1[0xf] | 4);\n    }\n    if (((flags1 & 8) != 0) && (is_flag2_set != 0)) {\n      param_1[0xf] = (uint *)((uint)param_1[0xf] | 8);\n    }\n    if (param_1[0xf] != (uint *)0x0) {\n      if (((flags1 & 0x20) != 0) && ((flags2 & 0x20) != 0)) {\n        FUN_08004618(param_1);\n      }\n      if ((((uint)param_1[0xf] & 8) == 0) && (((*param_1)[5] & 0x40) == 0)) {\n        FUNC_08005650(param_1);\n        param_1[0xf] = (uint *)0x0;\n        return;\n      }\n      FUN_0800417c(param_1);\n      ptr_param = *param_1;\n      if ((ptr_param[5] & 0x40) == 0) {\n        FUNC_08005650(param_1);\n        return;\n      }\n      ptr_param[5] = ptr_param[5] & 0xffffffbf;\n      if (param_1[0xd] == (uint *)0x0) {\n        FUNC_08005650(param_1);\n        return;\n      }\n      param_1[0xd][0xd] = (uint)&LAB_080047d8_1;\n      result = FUN_0800258c(param_1[0xd]);\n      if (result != 0) {\n        (*(code *)param_1[0xd][0xd])();\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080046b8": "check_and_update_flags_080046b8",
                "iVar1": "result",
                "uVar2": "flags2",
                "puVar3": "ptr_param",
                "uVar4": "is_flag2_set",
                "uVar5": "flags1"
            },
            "calling": [],
            "called": [
                "FUN_08004198",
                "FUN_080045fe",
                "FUN_08004618",
                "FUN_0800258c",
                "FUN_08005650",
                "FUN_0800417c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047e8": {
            "entrypoint": "0x080047e8",
            "current_name": "combine_bytes_080047e8",
            "code": "\nbyte combineBytes_080047e8(int input)\n\n{\n  return *(byte *)(input + 0x3a) | *(byte *)(input + 0x39);\n}\n\n",
            "renaming": {
                "FUN_080047e8": "combine_bytes_080047e8",
                "param_1": "input"
            },
            "calling": [
                "FUN_080054b0",
                "FUN_0800548c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047f4": {
            "entrypoint": "0x080047f4",
            "current_name": "retrieve_bit_value_080047f4",
            "code": "\nuint retrieveBitValue_080047f4(uint data,int baseAddress)\n\n{\n  return *(uint *)(baseAddress + ((data << 0x18) >> 0x1c) * 4) >> (data & 0xf) & 1;\n}\n\n",
            "renaming": {
                "FUN_080047f4": "retrieve_bit_value_080047f4",
                "param_1": "data",
                "param_2": "baseAddress"
            },
            "calling": [
                "FUN_08005848",
                "FUN_080057b4",
                "FUN_08005890"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800480a": {
            "entrypoint": "0x0800480a",
            "current_name": "set_bit_in_array_0800480a",
            "code": "\nvoid setBitInArray_0800480a(uint bitPosition,int array)\n\n{\n  uint index;\n  \n  index = (bitPosition << 0x18) >> 0x1c;\n  *(uint *)(array + index * 4) = *(uint *)(array + index * 4) | 1 << (bitPosition & 0xf);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800480a": "set_bit_in_array_0800480a",
                "param_1": "bitPosition",
                "param_2": "array",
                "uVar1": "index"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004828": {
            "entrypoint": "0x08004828",
            "current_name": "update_bit_in_array_08004828",
            "code": "\nvoid updateBitInArray_08004828(uint data,int array)\n\n{\n  uint shiftedIndex;\n  \n  shiftedIndex = (data << 0x18) >> 0x1c;\n  *(uint *)(array + shiftedIndex * 4) = *(uint *)(array + shiftedIndex * 4) & ~(1 << (data & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004828": "update_bit_in_array_08004828",
                "param_1": "data",
                "param_2": "array",
                "uVar1": "shiftedIndex"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004848": {
            "entrypoint": "0x08004848",
            "current_name": "get_memory_offset_08004848",
            "code": "\nundefined4 getMemoryOffset_08004848(undefined4 index)\n\n{\n  switch(index) {\n  case 0:\n    return 0x40010800;\n  case 1:\n    return 0x40010c00;\n  case 2:\n    return 0x40011000;\n  case 3:\n    return 0x40011400;\n  case 4:\n    return 0x40011800;\n  default:\n    return 0;\n  }\n}\n\n",
            "renaming": {
                "FUN_08004848": "get_memory_offset_08004848",
                "param_1": "index"
            },
            "calling": [
                "FUN_08005848",
                "FUN_08005890"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004884": {
            "entrypoint": "0x08004884",
            "current_name": "set_flag_and_return_address_08004884",
            "code": "\n\n\nundefined4 set_flag_and_return_address_08004884(undefined4 flag)\n\n{\n  undefined4 return_address;\n  \n  switch(flag) {\n  case 0:\n    _DAT_40021018 = _DAT_40021018 | 4;\n    return_address = 0x40010800;\n    break;\n  case 1:\n    _DAT_40021018 = _DAT_40021018 | 8;\n    return_address = 0x40010c00;\n    break;\n  case 2:\n    _DAT_40021018 = _DAT_40021018 | 0x10;\n    return_address = 0x40011000;\n    break;\n  case 3:\n    _DAT_40021018 = _DAT_40021018 | 0x20;\n    return_address = 0x40011400;\n    break;\n  case 4:\n    _DAT_40021018 = _DAT_40021018 | 0x40;\n    return_address = 0x40011800;\n    break;\n  default:\n    return_address = 0;\n  }\n  return return_address;\n}\n\n",
            "renaming": {
                "FUN_08004884": "set_flag_and_return_address_08004884",
                "param_1": "flag",
                "uVar1": "return_address"
            },
            "calling": [
                "FUN_08004bb0",
                "FUN_08004974",
                "FUN_08004f4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800492c": {
            "entrypoint": "0x0800492c",
            "current_name": "calculate_value_0800492c",
            "code": "\nuint calculateValue_0800492c(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  int result;\n  uint shiftedResult;\n  \n  result = FUN_08004cce(input1,&DAT_08007400,input3,input4,input4);\n  shiftedResult = (uint)(result << 0xc) >> 0x1b;\n  if (0x10 < shiftedResult - 1) {\n    shiftedResult = 0;\n  }\n  return shiftedResult;\n}\n\n",
            "renaming": {
                "FUN_0800492c": "calculate_value_0800492c",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "result",
                "uVar2": "shiftedResult"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08004cce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004948": {
            "entrypoint": "0x08004948",
            "current_name": "determine_output_value_08004948",
            "code": "\nundefined4 determineOutputValue_08004948(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  int result1;\n  uint result2;\n  \n  result1 = FUN_08004cce(input1,&DAT_080074b4,input3,input4,input4);\n  result2 = (uint)(result1 << 0xc) >> 0x1b;\n  if (result2 == 3) {\n    return 8;\n  }\n  if (result2 != 4) {\n    if (result2 != 2) {\n      return 0;\n    }\n    return 4;\n  }\n  return 0xc;\n}\n\n",
            "renaming": {
                "FUN_08004948": "determine_output_value_08004948",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "result1",
                "uVar2": "result2"
            },
            "calling": [
                "FUN_08004b3c"
            ],
            "called": [
                "FUN_08004cce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004974": {
            "entrypoint": "0x08004974",
            "current_name": "update_data_flags_08004974",
            "code": "\n\n\nvoid updateDataFlags_08004974(int *dataPtr,undefined4 param2)\n\n{\n  undefined4 result;\n  uint newFlags;\n  int dataValue;\n  uint bitmask;\n  undefined4 constant1;\n  undefined4 constant2;\n  \n  dataValue = *dataPtr;\n  if (dataValue == 0x40012400) {\n    newFlags = _DAT_40021018 | 0x200;\n    dataValue = 0x200;\n    _DAT_40021018 = newFlags;\n  }\n  else {\n    newFlags = 0x40012800;\n    if (dataValue == 0x40012800) {\n      newFlags = _DAT_40021018 | 0x400;\n      dataValue = 0x400;\n      _DAT_40021018 = newFlags;\n    }\n  }\n  result = FUN_08004884((uint)((int)(char)DAT_20000080 << 0x18) >> 0x1c,param2,newFlags,dataValue);\n  bitmask = 1 << (DAT_20000080 & 0xf) & 0xffff;\n  constant1 = 3;\n  constant2 = 0;\n  FUN_08002624(result,&bitmask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004974": "update_data_flags_08004974",
                "param_1": "dataPtr",
                "param_2": "param2",
                "uVar1": "result",
                "uVar2": "newFlags",
                "iVar3": "dataValue",
                "local_18": "bitmask",
                "local_14": "constant1",
                "local_10": "constant2"
            },
            "calling": [
                "FUN_0800213c"
            ],
            "called": [
                "FUN_08002624",
                "FUN_08004884"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080049f0": {
            "entrypoint": "0x080049f0",
            "current_name": "update_memory_protection_080049f0",
            "code": "\n\n\nvoid updateMemoryProtection_080049f0(int *memoryAddress)\n\n{\n  if (*memoryAddress != 0x40012400) {\n    if (*memoryAddress == 0x40012800) {\n      _DAT_4002100c = _DAT_4002100c & 0xfffffbff;\n      _DAT_40021018 = _DAT_40021018 & 0xfffffbff;\n    }\n    return;\n  }\n  _DAT_4002100c = _DAT_4002100c & 0xfffffdff;\n  _DAT_40021018 = _DAT_40021018 & 0xfffffdff;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080049f0": "update_memory_protection_080049f0",
                "param_1": "memoryAddress"
            },
            "calling": [
                "FUN_0800224c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a4c": {
            "entrypoint": "0x08004a4c",
            "current_name": "check_and_process_data_08004a4c",
            "code": "\nundefined2 check_and_process_data_08004a4c(undefined4 data)\n\n{\n  int result;\n  uint flags;\n  undefined2 success;\n  uint data_size;\n  undefined4 flag_1;\n  undefined4 flag_2;\n  int buffer;\n  undefined4 var1;\n  undefined4 var2;\n  undefined4 var3;\n  undefined4 var4;\n  undefined4 var5;\n  undefined4 var6;\n  undefined4 var7;\n  undefined4 var8;\n  \n  FUN_080061e0(&buffer,0,0x30);\n  data_size = 0;\n  flag_1 = 0;\n  flag_2 = 0;\n  success = 0;\n  buffer = FUN_08004c78(data,&DAT_08007400);\n  if (buffer == 0) {\n    success = 0;\n  }\n  else {\n    var1 = 0;\n    var2 = 0;\n    var3 = 0;\n    var5 = 0;\n    var7 = 0xe0000;\n    var8 = 0;\n    var4 = 1;\n    var6 = 0;\n    DAT_20000080 = (undefined)data;\n    result = FUN_0800213c(&buffer);\n    if (result == 0) {\n      data_size = FUN_0800492c(data);\n      if (data_size < 0x12) {\n        flag_1 = 1;\n        flag_2 = 2;\n        result = FUN_08001e48(&buffer,&data_size);\n        if (result == 0) {\n          result = FUN_08002384(&buffer);\n          if (result == 0) {\n            result = FUN_08002004(&buffer);\n            if (result == 0) {\n              result = FUN_08001cd0(&buffer,10);\n              if (result == 0) {\n                flags = FUN_08001f80(&buffer);\n                if ((flags & 0x200) != 0) {\n                  success = FUN_08001e40(&buffer);\n                }\n                result = FUN_08002348(&buffer);\n                if (result == 0) {\n                  result = FUN_0800224c(&buffer);\n                  if (result != 0) {\n                    success = 0;\n                  }\n                }\n                else {\n                  success = 0;\n                }\n              }\n              else {\n                success = 0;\n              }\n            }\n            else {\n              success = 0;\n            }\n          }\n          else {\n            success = 0;\n          }\n        }\n        else {\n          success = 0;\n        }\n      }\n      else {\n        success = 0;\n      }\n    }\n    else {\n      success = 0;\n    }\n  }\n  return success;\n}\n\n",
            "renaming": {
                "FUN_08004a4c": "check_and_process_data_08004a4c",
                "param_1": "data",
                "iVar1": "result",
                "uVar2": "flags",
                "local_46": "success",
                "local_44": "data_size",
                "local_40": "flag_1",
                "local_3c": "flag_2",
                "local_38": "buffer",
                "local_34": "var1",
                "local_30": "var2",
                "local_2c": "var3",
                "local_28": "var4",
                "local_24": "var5",
                "local_20": "var6",
                "local_1c": "var7",
                "local_10": "var8"
            },
            "calling": [
                "FUN_08005754"
            ],
            "called": [
                "FUN_0800213c",
                "FUN_08001f80",
                "FUN_08004c78",
                "FUN_08002384",
                "FUN_08002348",
                "FUN_08002004",
                "FUN_08001e40",
                "FUN_08001e48",
                "FUN_0800224c",
                "FUN_08001cd0",
                "FUN_080061e0",
                "FUN_0800492c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b34": {
            "entrypoint": "0x08004b34",
            "current_name": "initialize_system_08004b34",
            "code": "\nvoid initializeSystem_08004b34(void)\n\n{\n  FUN_08004d90();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b34": "initialize_system_08004b34"
            },
            "calling": [
                "FUN_08003ed8"
            ],
            "called": [
                "FUN_08004d90"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b3c": {
            "entrypoint": "0x08004b3c",
            "current_name": "process_data_08004b3c",
            "code": "\nvoid processData_08004b3c(undefined4 input_data)\n\n{\n  int result;\n  uint flags;\n  int data_array [17];\n  \n  data_array[0] = FUN_08004c78(input_data,&DAT_080074b4);\n  if ((data_array[0] != 0) &&\n     ((((result = FUN_08004948(input_data), result == 0 || (result == 4)) || (result == 8)) ||\n      ((result == 0xc || (result == 0x18)))))) {\n    flags = FUN_08004cce(input_data,&DAT_080074b4);\n    if ((flags & 0x100000) == 0) {\n      FUN_080040b0(data_array,result);\n    }\n    else {\n      FUN_0800412c(data_array,result);\n    }\n    FUN_08003ed8(data_array);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b3c": "process_data_08004b3c",
                "param_1": "input_data",
                "iVar1": "result",
                "uVar2": "flags",
                "local_50": "data_array"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [
                "FUN_0800412c",
                "FUN_08004c78",
                "FUN_080040b0",
                "FUN_08004948",
                "FUN_08003ed8",
                "FUN_08004cce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b94": {
            "entrypoint": "0x08004b94",
            "current_name": "initialize_08004b94",
            "code": "\nvoid initialize_08004b94(void)\n\n{\n  FUN_08001cc4();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b94": "initialize_08004b94"
            },
            "calling": [
                "FUN_080058e0"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b9c": {
            "entrypoint": "0x08004b9c",
            "current_name": "FUNC_08004b9c",
            "code": "\nvoid FUNC_08004b9c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b9c": "FUNC_08004b9c"
            },
            "calling": [
                "FUN_08004b9e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004b9e": {
            "entrypoint": "0x08004b9e",
            "current_name": "initialize_program_08004b9e",
            "code": "\nvoid initialize_program_08004b9e(void)\n\n{\n  FUN_08001cac();\n  FUN_08002582();\n  FUNC_08004b9c();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b9e": "initialize_program_08004b9e"
            },
            "calling": [],
            "called": [
                "FUN_08001cac",
                "FUN_08002582",
                "FUN_08004b9c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004bb0": {
            "entrypoint": "0x08004bb0",
            "current_name": "configure_peripheral_08004bb0",
            "code": "\n\n\nvoid configurePeripheral_08004bb0(uint peripheralId,undefined4 configValue1,undefined4 configValue2)\n\n{\n  undefined4 shiftedPeripheralId;\n  uint bitMask;\n  undefined4 configValue1Copy;\n  undefined4 configValue2Copy;\n  undefined4 constantValue;\n  \n  shiftedPeripheralId = FUN_08004884((peripheralId << 0x18) >> 0x1c);\n  bitMask = 1 << (peripheralId & 0xf) & 0xffff;\n  constantValue = 3;\n  _DAT_40021018 = _DAT_40021018 | 1;\n  if ((peripheralId - 0xd & 0xff) < 2) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n  }\n  if (((peripheralId == 0xf) || (peripheralId == 0x13)) || (peripheralId == 0x14)) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n  }\n  configValue1Copy = configValue1;\n  configValue2Copy = configValue2;\n  FUN_08002624(shiftedPeripheralId,&bitMask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004bb0": "configure_peripheral_08004bb0",
                "param_1": "peripheralId",
                "param_2": "configValue1",
                "param_3": "configValue2",
                "uVar1": "shiftedPeripheralId",
                "local_20": "bitMask",
                "local_1c": "configValue1Copy",
                "local_18": "configValue2Copy",
                "local_14": "constantValue"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [
                "FUN_08002624",
                "FUN_08004884"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c30": {
            "entrypoint": "0x08004c30",
            "current_name": "perform_action_based_on_param_08004c30",
            "code": "\nvoid performActionBasedOnParam_08004c30(undefined4 actionParam1,undefined2 actionParam2,int actionParam3,undefined4 actionParam4)\n\n{\n  if (actionParam3 == 0) {\n    FUN_0800281e(actionParam1,actionParam2,0,actionParam4,actionParam4);\n    return;\n  }\n  FUN_0800281e(actionParam1,actionParam2,1,actionParam4,actionParam4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c30": "perform_action_based_on_param_08004c30",
                "param_1": "actionParam1",
                "param_2": "actionParam2",
                "param_3": "actionParam3",
                "param_4": "actionParam4"
            },
            "calling": [
                "FUN_08005848"
            ],
            "called": [
                "FUN_0800281e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c48": {
            "entrypoint": "0x08004c48",
            "current_name": "execute_function_08004c48",
            "code": "\nvoid executeFunction_08004c48(undefined4 input_1,undefined2 input_2,undefined4 input_3,undefined4 input_4)\n\n{\n  FUN_08002810(input_1,input_2,input_3,input_4,input_4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c48": "execute_function_08004c48",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4"
            },
            "calling": [
                "FUN_08005890"
            ],
            "called": [
                "FUN_08002810"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c52": {
            "entrypoint": "0x08004c52",
            "current_name": "execute_initialization_process_08004c52",
            "code": "\nvoid executeInitializationProcess_08004c52(void)\n\n{\n  FUN_08001c88();\n  FUN_08001b48();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c52": "execute_initialization_process_08004c52"
            },
            "calling": [
                "FUN_08001c32"
            ],
            "called": [
                "FUN_08001b48",
                "FUN_08001c88"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c5e": {
            "entrypoint": "0x08004c5e",
            "current_name": "find_value_in_array_08004c5e",
            "code": "\nundefined4 find_value_in_array_08004c5e(int value_to_find,char *array_ptr)\n\n{\n  while( true ) {\n    if (*array_ptr == -1) {\n      return 0;\n    }\n    if (*array_ptr == value_to_find) found_value;\n    array_ptr = array_ptr + 0xc;\n  }\n  return *(undefined4 *)(array_ptr + 4);\n}\n\n",
            "renaming": {
                "FUN_08004c5e": "find_value_in_array_08004c5e",
                "param_1": "value_to_find",
                "param_2": "array_ptr",
                "break": "found_value"
            },
            "calling": [
                "FUN_08004c78",
                "FUN_08004c5e"
            ],
            "called": [
                "FUN_08004c5e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c78": {
            "entrypoint": "0x08004c78",
            "current_name": "check_for_invalid_parameter_08004c78",
            "code": "\nundefined4 checkForInvalidParameter_08004c78(int inputParam)\n\n{\n  undefined4 returnValue;\n  \n  if (inputParam != -1) {\n    returnValue = FUN_08004c5e();\n    return returnValue;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004c78": "check_for_invalid_parameter_08004c78",
                "param_1": "inputParam",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_080053d4",
                "FUN_08004f4c",
                "FUN_08004a4c",
                "FUN_08004b3c",
                "FUN_08005384"
            ],
            "called": [
                "FUN_08004c5e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c8a": {
            "entrypoint": "0x08004c8a",
            "current_name": "find_value_in_array_08004c8a",
            "code": "\nint find_value_in_array_08004c8a(int value,char *array)\n\n{\n  while( true ) {\n    if (*(int *)(array + 4) == 0) {\n      return -1;\n    }\n    if (*(int *)(array + 4) == value) break;\n    array = array + 0xc;\n  }\n  return (int)*array;\n}\n\n",
            "renaming": {
                "FUN_08004c8a": "find_value_in_array_08004c8a",
                "param_1": "value",
                "param_2": "array"
            },
            "calling": [
                "FUN_08004ca2",
                "FUN_08004c8a"
            ],
            "called": [
                "FUN_08004c8a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ca2": {
            "entrypoint": "0x08004ca2",
            "current_name": "check_parameter_08004ca2",
            "code": "\nundefined4 checkParameter_08004ca2(int input)\n\n{\n  undefined4 result;\n  \n  if (input != 0) {\n    result = FUN_08004c8a();\n    return result;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08004ca2": "check_parameter_08004ca2",
                "param_1": "input",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08005b54",
                "FUN_08005384"
            ],
            "called": [
                "FUN_08004c8a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004cb2": {
            "entrypoint": "0x08004cb2",
            "current_name": "find_value_08004cb2",
            "code": "\nundefined4 find_value_08004cb2(int value_to_find,char *array)\n\n{\n  while( true ) {\n    if (*array == -1) {\n      return 0xffffffff;\n    }\n    if (*array == value_to_find) break;\n    array = array + 0xc;\n  }\n  return *(undefined4 *)(array + 8);\n}\n\n",
            "renaming": {
                "FUN_08004cb2": "find_value_08004cb2",
                "param_1": "value_to_find",
                "param_2": "array"
            },
            "calling": [
                "FUN_08004cb2",
                "FUN_08004cce"
            ],
            "called": [
                "FUN_08004cb2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004cce": {
            "entrypoint": "0x08004cce",
            "current_name": "check_return_value_08004cce",
            "code": "\nundefined4 checkReturnValue_08004cce(int inputValue)\n\n{\n  undefined4 returnValue;\n  \n  if (inputValue == -1) {\n    return 0xffffffff;\n  }\n  returnValue = FUN_08004cb2();\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08004cce": "check_return_value_08004cce",
                "param_1": "inputValue",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08004948",
                "FUN_08004f4c",
                "FUN_08004b3c",
                "FUN_0800492c"
            ],
            "called": [
                "FUN_08004cb2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ce2": {
            "entrypoint": "0x08004ce2",
            "current_name": "find_value_in_array_08004ce2",
            "code": "\nundefined4 find_value_in_array_08004ce2(int value,char *array)\n\n{\n  if (value == -1) {\n    return 0;\n  }\n  while( true ) {\n    if (*array == -1) {\n      return 0;\n    }\n    if (value == *array) break;\n    array = array + 0xc;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08004ce2": "find_value_in_array_08004ce2",
                "param_1": "value",
                "param_2": "array"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d06": {
            "entrypoint": "0x08004d06",
            "current_name": "compare_and_return_non_zero_08004d06",
            "code": "\nint compareAndReturnNonZero_08004d06(int input1,int input2)\n\n{\n  if (input1 != input2) {\n    if (input1 == 0) {\n      return input2;\n    }\n    if (input2 == 0) {\n      return input1;\n    }\n    input1 = 0;\n  }\n  return input1;\n}\n\n",
            "renaming": {
                "FUN_08004d06": "compare_and_return_non_zero_08004d06",
                "param_1": "input1",
                "param_2": "input2"
            },
            "calling": [
                "FUN_08004f4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d18": {
            "entrypoint": "0x08004d18",
            "current_name": "execute_callback_08004d18",
            "code": "\nvoid executeCallback_08004d18(void)\n\n{\n  if (DAT_20000260 != (code *)0x0) {\n    (*DAT_20000260)(DAT_20000278);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d18": "execute_callback_08004d18"
            },
            "calling": [
                "FUN_08003ea0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d40": {
            "entrypoint": "0x08004d40",
            "current_name": "infinite_loop_08004d40",
            "code": "\nvoid infiniteLoop_08004d40(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08004d40": "infinite_loop_08004d40"
            },
            "calling": [
                "FUN_08001b48",
                "FUN_08004d40"
            ],
            "called": [
                "FUN_08004d40"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d44": {
            "entrypoint": "0x08004d44",
            "current_name": "initialize_hardware_08004d44",
            "code": "\n\n\nvoid initializeHardware_08004d44(void)\n\n{\n  _DAT_40021000 = _DAT_40021000 & 0xfef2ffff | 1;\n  _DAT_40021004 = _DAT_40021004 & 0xf8800000;\n  _DAT_40021008 = 0x9f0000;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d44": "initialize_hardware_08004d44"
            },
            "calling": [
                "entry"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d90": {
            "entrypoint": "0x08004d90",
            "current_name": "update_flags_08004d90",
            "code": "\n\n\nvoid updateFlags_08004d90(int *inputPointer)\n\n{\n  if (*inputPointer == 0x40012c00) {\n    _DAT_40021018 = _DAT_40021018 & 0xfffff7ff;\n  }\n  if (*inputPointer == 0x40000000) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffe;\n  }\n  if (*inputPointer == 0x40000400) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffd;\n  }\n  if (*inputPointer == 0x40000800) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffb;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d90": "update_flags_08004d90",
                "param_1": "inputPointer"
            },
            "calling": [
                "FUN_08004b34"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004df4": {
            "entrypoint": "0x08004df4",
            "current_name": "subtract_four_08004df4",
            "code": "\nint subtractFour_08004df4(int inputValue)\n\n{\n  return inputValue + -4;\n}\n\n",
            "renaming": {
                "FUN_08004df4": "subtract_four_08004df4",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08004e12",
                "FUN_08004df8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004df8": {
            "entrypoint": "0x08004df8",
            "current_name": "execute_callback_if_enabled_08004df8",
            "code": "\nvoid executeCallbackIfEnabled_08004df8(int callbackParameter)\n\n{\n  int callbackHandler;\n  \n  callbackHandler = FUN_08004df4();\n  if ((*(code **)(callbackHandler + 0x4c) != (code *)0x0) && (*(char *)(callbackParameter + 0x1c) == '\\x01')) {\n    (**(code **)(callbackHandler + 0x4c))(callbackHandler,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004df8": "execute_callback_if_enabled_08004df8",
                "param_1": "callbackParameter",
                "iVar1": "callbackHandler"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [
                "FUN_08004df4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e12": {
            "entrypoint": "0x08004e12",
            "current_name": "execute_function_08004e12",
            "code": "\nvoid executeFunction_08004e12(void)\n\n{\n  int result;\n  \n  result = FUN_08004df4();\n  if (*(code **)(result + 0x48) != (code *)0x0) {\n    (**(code **)(result + 0x48))();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004e12": "execute_function_08004e12",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [
                "FUN_08004df4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e20": {
            "entrypoint": "0x08004e20",
            "current_name": "check_and_execute_function_08004e20",
            "code": "\nvoid checkAndExecuteFunction_08004e20(void)\n\n{\n  if (DAT_2000027c != 0) {\n    FUN_08003f18();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004e20": "check_and_execute_function_08004e20"
            },
            "calling": [],
            "called": [
                "FUN_08003f18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e70": {
            "entrypoint": "0x08004e70",
            "current_name": "subtract_four_08004e70",
            "code": "\nint subtract_four_08004e70(int input_number)\n\n{\n  return input_number + -4;\n}\n\n",
            "renaming": {
                "FUN_08004e70": "subtract_four_08004e70",
                "param_1": "input_number"
            },
            "calling": [
                "FUN_08004e74",
                "FUN_08004ec4",
                "FUN_08004ef4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e74": {
            "entrypoint": "0x08004e74",
            "current_name": "update_params_08004e74",
            "code": "\nvoid updateParams_08004e74(int baseAddress,int flag,int valueToCompare,undefined4 paramValue)\n\n{\n  int returnValue;\n  \n  returnValue = FUN_08004e70();\n  if (valueToCompare == *(int *)(baseAddress + 0xc)) {\n    if (flag == 0) {\n      *(undefined *)(returnValue + 0x88) = 0;\n      *(undefined *)(returnValue + 0x5c) = 0;\n      if (*(code **)(returnValue + 100) != (code *)0x0) {\n        (**(code **)(returnValue + 100))();\n      }\n      FUN_08002af8(baseAddress,returnValue + 0x68,*(undefined *)(returnValue + 0x88),8);\n      return;\n    }\n    *(undefined *)(returnValue + 0x5c) = 1;\n    FUN_08002b84(baseAddress,returnValue + 0x68,0x20,8,paramValue);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004e74": "update_params_08004e74",
                "param_1": "baseAddress",
                "param_2": "flag",
                "param_3": "valueToCompare",
                "param_4": "paramValue",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08002cf2"
            ],
            "called": [
                "FUN_08002af8",
                "FUN_08004e70",
                "FUN_08002b84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ec4": {
            "entrypoint": "0x08004ec4",
            "current_name": "execute_function_if_valid_08004ec4",
            "code": "\nvoid executeFunctionIfValid_08004ec4(undefined4 inputParam)\n\n{\n  int functionPointer;\n  \n  functionPointer = FUN_08004e70();\n  if (((*(functionType **)(functionPointer + 0x60) != (functionType *)0x0) && (*(char *)(functionPointer + 0x5c) == '\\x01')) &&\n     (*(char *)(functionPointer + 0x2c) != ' ')) {\n    (**(functionType **)(functionPointer + 0x60))(functionPointer + 0x68);\n  }\n  FUN_08002c10(inputParam);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004ec4": "execute_function_if_valid_08004ec4",
                "param_1": "inputParam",
                "iVar1": "functionPointer",
                "code": "functionType"
            },
            "calling": [
                "FUN_0800316c",
                "FUN_080032b4",
                "FUN_08002d1c"
            ],
            "called": [
                "FUN_08004e70",
                "FUN_08002c10"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ef4": {
            "entrypoint": "0x08004ef4",
            "current_name": "check_and_execute_function_08004ef4",
            "code": "\nvoid checkAndExecuteFunction_08004ef4(undefined4 inputParam)\n\n{\n  int resultValue;\n  \n  resultValue = FUN_08004e70();\n  if (*(char *)(resultValue + 0x5d) == '\\0') {\n    FUN_08002c10(inputParam);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004ef4": "check_and_execute_function_08004ef4",
                "param_1": "inputParam",
                "iVar1": "resultValue"
            },
            "calling": [
                "FUN_0800316c"
            ],
            "called": [
                "FUN_08004e70",
                "FUN_08002c10"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004f4c": {
            "entrypoint": "0x08004f4c",
            "current_name": "configure_uart_pins_08004f4c",
            "code": "\n\n\nvoid configureUARTPins_08004f4c(int *pinConfig)\n\n{\n  int uartPinConfig;\n  int peripheralPinConfig;\n  undefined4 uartMode;\n  uint pinConfigValue;\n  uint uartPinMask;\n  uint pinConfigOption;\n  uint pinConfigMode;\n  undefined4 uartConfig;\n  \n  if (pinConfig != (int *)0x0) {\n    uartPinConfig = FUN_08004c78((int)*(char *)(pinConfig + 0x16),&DAT_0800764c);\n    peripheralPinConfig = FUN_08004c78((int)*(char *)((int)pinConfig + 0x59),&DAT_08007604);\n    if ((peripheralPinConfig == 0) || (uartPinConfig == 0)) {\n      FUN_080068f0(\"ERROR: at least one UART pin has no peripheral\\n\",peripheralPinConfig);\n    }\n    else {\n      uartPinConfig = FUN_08004d06(uartPinConfig);\n      *pinConfig = uartPinConfig;\n      if (uartPinConfig == 0) {\n        FUN_080068f0(\"ERROR: U(S)ART pins mismatch\\n\");\n      }\n      else {\n        if (uartPinConfig == 0x40013800) {\n          _DAT_4002100c = _DAT_4002100c & 0xffffbfff;\n          _DAT_40021018 = _DAT_40021018 | 0x4000;\n          *(undefined *)(pinConfig + 0x11) = 0;\n          *(undefined *)((int)pinConfig + 0x5a) = 0x25;\n        }\n        else if (uartPinConfig == 0x40004400) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffdffff;\n          _DAT_4002101c = _DAT_4002101c | 0x20000;\n          *(undefined *)(pinConfig + 0x11) = 1;\n          *(undefined *)((int)pinConfig + 0x5a) = 0x26;\n        }\n        else if (uartPinConfig == 0x40004800) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffbffff;\n          _DAT_4002101c = _DAT_4002101c | 0x40000;\n          *(undefined *)(pinConfig + 0x11) = 2;\n          *(undefined *)((int)pinConfig + 0x5a) = 0x27;\n        }\n        uartMode = FUN_08004884((uint)((int)*(char *)((int)pinConfig + 0x59) << 0x18) >> 0x1c);\n        pinConfigValue = FUN_08004cce((int)*(char *)((int)pinConfig + 0x59),&DAT_08007604);\n        uartPinMask = 1 << (*(byte *)((int)pinConfig + 0x59) & 0xf) & 0xffff;\n        pinConfigOption = (pinConfigValue >> 3 & 1) << 4 | pinConfigValue & 7;\n        pinConfigMode = (pinConfigValue << 0x1a) >> 0x1e;\n        _DAT_40021018 = _DAT_40021018 | 1;\n        switch((pinConfigValue << 0x11) >> 0x19) {\n        case 1:\n          _DAT_40010004 = _DAT_40010004 | 0x7000001;\n          break;\n        case 2:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          break;\n        case 3:\n          _DAT_40010004 = _DAT_40010004 | 0x7000002;\n          break;\n        case 4:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          break;\n        case 5:\n          _DAT_40010004 = _DAT_40010004 | 0x7000004;\n          break;\n        case 6:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          break;\n        case 7:\n          _DAT_40010004 = _DAT_40010004 | 0x7000008;\n          break;\n        case 8:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          break;\n        case 9:\n          _DAT_40010004 = _DAT_40010004 | 0x7000030;\n          break;\n        case 10:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          break;\n        case 0xb:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          break;\n        case 0xc:\n          _DAT_40010004 = _DAT_40010004 | 0x70000c0;\n          break;\n        case 0xd:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          break;\n        case 0xe:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          break;\n        case 0xf:\n          _DAT_40010004 = _DAT_40010004 | 0x7000300;\n          break;\n        case 0x10:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          break;\n        case 0x11:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          break;\n        case 0x12:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          break;\n        case 0x13:\n          _DAT_40010004 = _DAT_40010004 | 0x7000c00;\n          break;\n        case 0x14:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          break;\n        case 0x15:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          break;\n        case 0x16:\n          _DAT_40010004 = _DAT_40010004 | 0x7001000;\n          break;\n        case 0x17:\n          _DAT_40010004 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          break;\n        case 0x1b:\n          _DAT_40010004 = _DAT_40010004 | 0x7008000;\n          break;\n        case 0x1c:\n          _DAT_40010004 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          break;\n        case 0x21:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff;\n          break;\n        case 0x22:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          break;\n        case 0x23:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          break;\n        case 0x24:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n        }\n        uartConfig = 3;\n        FUN_08002624(uartMode,&uartPinMask);\n        uartMode = FUN_08004884((uint)((int)*(char *)(pinConfig + 0x16) << 0x18) >> 0x1c);\n        pinConfigValue = FUN_08004cce((int)*(char *)(pinConfig + 0x16),&DAT_0800764c);\n        uartPinMask = 1 << (*(byte *)(pinConfig + 0x16) & 0xf) & 0xffff;\n        pinConfigOption = (pinConfigValue >> 3 & 1) << 4 | pinConfigValue & 7;\n        pinConfigMode = (pinConfigValue << 0x1a) >> 0x1e;\n        FUN_08002624(uartMode,&uartPinMask);\n        (&DAT_2000032c)[*(byte *)(pinConfig + 0x11)] = pinConfig + 1;\n        pinConfig[1] = *pinConfig;\n        pinConfig[2] = pinConfig[0x12];\n        pinConfig[3] = pinConfig[0x13];\n        pinConfig[4] = pinConfig[0x14];\n        pinConfig[5] = pinConfig[0x15];\n        pinConfig[6] = 0xc;\n        pinConfig[7] = 0;\n        pinConfig[8] = 0;\n        FUN_0800441a(pinConfig + 1);\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004f4c": "configure_uart_pins_08004f4c",
                "param_1": "pinConfig",
                "iVar1": "uartPinConfig",
                "iVar2": "peripheralPinConfig",
                "uVar3": "uartMode",
                "uVar4": "pinConfigValue",
                "local_20": "uartPinMask",
                "local_1c": "pinConfigOption",
                "local_18": "pinConfigMode",
                "local_14": "uartConfig"
            },
            "calling": [
                "FUN_08005a68",
                "FUN_08005384"
            ],
            "called": [
                "FUN_08002624",
                "FUN_08004c78",
                "FUN_08004d06",
                "FUN_08004884",
                "FUN_080068f0",
                "FUN_08004cce",
                "FUN_0800441a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005384": {
            "entrypoint": "0x08005384",
            "current_name": "initialize_data_08005384",
            "code": "\nvoid initializeData_08005384(void)\n\n{\n  int result;\n  undefined4 secondResult;\n  \n  result = FUN_08004c78(2,&DAT_0800764c);\n  if (result != 0) {\n    secondResult = FUN_08004c78(2,&DAT_0800764c);\n    DAT_200000e1 = FUN_08004ca2(secondResult,&DAT_08007604);\n    DAT_200000e0 = 2;\n    DAT_200000d0 = 0x2580;\n    DAT_200000dc = 0;\n    DAT_200000d4 = 0;\n    DAT_200000d8 = 0;\n    FUN_08004f4c(&DAT_20000088);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005384": "initialize_data_08005384",
                "iVar1": "result",
                "uVar2": "secondResult"
            },
            "calling": [
                "FUN_080053d4"
            ],
            "called": [
                "FUN_08004c78",
                "FUN_08004ca2",
                "FUN_08004f4c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080053d4": {
            "entrypoint": "0x080053d4",
            "current_name": "execute_function_080053d4",
            "code": "\nuint execute_function_080053d4(undefined4 param_a,uint param_b)\n\n{\n  int result_1;\n  int result_2;\n  uint counter;\n  \n  result_1 = FUN_08001cc4();\n  result_2 = FUN_08004c78(2,&DAT_0800764c);\n  if (result_2 == 0) {\n    return 0;\n  }\n  for (counter = 0;\n      (counter < 5 &&\n      (((&DAT_2000032c)[counter] == 0 ||\n       (result_2 = FUN_08004c78(2,&DAT_0800764c), *(int *)(&DAT_2000032c)[counter] != result_2))));\n      counter = counter + 1 & 0xff) {\n  }\n  if (4 < counter) {\n    if ((4 < DAT_200000cc) && (FUN_08005384(), 4 < DAT_200000cc)) {\n      return 0;\n    }\n    counter = (uint)DAT_200000cc;\n  }\n  do {\n    result_2 = FUN_08004478((&DAT_2000032c)[counter],param_a,param_b & 0xffff,1000);\n    if (result_2 == 0) {\n      return param_b;\n    }\n    result_2 = FUN_08001cc4();\n  } while ((uint)(result_2 - result_1) < 1000);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080053d4": "execute_function_080053d4",
                "param_1": "param_a",
                "param_2": "param_b",
                "iVar1": "result_1",
                "iVar2": "result_2",
                "uVar3": "counter"
            },
            "calling": [
                "FUN_08005730"
            ],
            "called": [
                "FUN_08004c78",
                "FUN_08004478",
                "FUN_08001cc4",
                "FUN_08005384"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800548c": {
            "entrypoint": "0x0800548c",
            "current_name": "is_flag_set_0800548c",
            "code": "\nbool isFlagSet_0800548c(int flagValue)\n\n{\n  uint result;\n  \n  result = FUN_080047e8((&DAT_2000032c)[*(byte *)(flagValue + 0x44)]);\n  return (result & 0x22) == 0x22;\n}\n\n",
            "renaming": {
                "FUN_0800548c": "is_flag_set_0800548c",
                "param_1": "flagValue",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08005510",
                "FUN_080054d4"
            ],
            "called": [
                "FUN_080047e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080054b0": {
            "entrypoint": "0x080054b0",
            "current_name": "is_interesting_value_080054b0",
            "code": "\nbool isInterestingValue_080054b0(int value)\n\n{\n  uint result;\n  \n  result = FUN_080047e8((&DAT_2000032c)[*(byteValue *)(value + 0x44)]);\n  return (result & 0x21) == 0x21;\n}\n\n",
            "renaming": {
                "FUN_080054b0": "is_interesting_value_080054b0",
                "param_1": "value",
                "uVar1": "result",
                "byte": "byteValue"
            },
            "calling": [],
            "called": [
                "FUN_080047e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080054d4": {
            "entrypoint": "0x080054d4",
            "current_name": "process_data_080054d4",
            "code": "\nundefined4 processData_080054d4(int dataSize,undefined *outputBuffer,undefined4 inputParameter1,undefined4 inputParameter2)\n\n{\n  int result;\n  \n  if (dataSize == 0) {\n    return 0xffffffff;\n  }\n  result = FUN_0800548c();\n  if (result == 0) {\n    *outputBuffer = *(undefined *)(dataSize + 0x45);\n    FUN_080045a2((&DAT_2000032c)[*(byte *)(dataSize + 0x44)],dataSize + 0x45,1,&DAT_2000032c,inputParameter2);\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080054d4": "process_data_080054d4",
                "param_1": "dataSize",
                "param_2": "outputBuffer",
                "param_3": "inputParameter1",
                "param_4": "inputParameter2",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800598a"
            ],
            "called": [
                "FUN_080045a2",
                "FUN_0800548c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005510": {
            "entrypoint": "0x08005510",
            "current_name": "update_data_08005510",
            "code": "\nvoid updateData_08005510(int dataPointer,undefined4 newValue,undefined4 unused,undefined4 unused)\n\n{\n  int result;\n  uint index;\n  \n  if (dataPointer != 0) {\n    result = FUN_0800548c();\n    if (result == 0) {\n      index = (uint)*(byte *)(dataPointer + 0x44);\n      *(undefined4 *)(&DAT_200002dc + index * 4) = newValue;\n      *(int *)(&DAT_200002f0 + index * 4) = dataPointer;\n      FUN_08002494((int)*(char *)(dataPointer + 0x5a),0,1,index,unused);\n      FUN_080024f8((int)*(char *)(dataPointer + 0x5a));\n      FUN_080045a2((&DAT_2000032c)[*(byte *)(dataPointer + 0x44)],dataPointer + 0x45,1);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005510": "update_data_08005510",
                "param_1": "dataPointer",
                "param_2": "newValue",
                "param_3": "unused",
                "param_4": "unused",
                "iVar1": "result",
                "uVar2": "index"
            },
            "calling": [
                "FUN_08005a68"
            ],
            "called": [
                "FUN_080045a2",
                "FUN_08002494",
                "FUN_0800548c",
                "FUN_080024f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005568": {
            "entrypoint": "0x08005568",
            "current_name": "update_data_08005568",
            "code": "\nvoid updateData_08005568(int dataPtr,undefined4 newValue)\n\n{\n  byte byteValue;\n  \n  if (dataPtr != 0) {\n    byteValue = *(byte *)(dataPtr + 0x44);\n    *(undefined4 *)(&DAT_20000304 + (uint)byteValue * 4) = newValue;\n    *(int *)(&DAT_20000318 + (uint)byteValue * 4) = dataPtr;\n    FUN_08002494((int)*(char *)(dataPtr + 0x5a),0,2);\n    FUN_080024f8((int)*(char *)(dataPtr + 0x5a));\n    FUN_0800455a((&DAT_2000032c)[*(byte *)(dataPtr + 0x44)],\n                 *(int *)(dataPtr + 100) + (uint)*(ushort *)(dataPtr + 0x6a),1);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005568": "update_data_08005568",
                "param_1": "dataPtr",
                "param_2": "newValue",
                "bVar1": "byteValue"
            },
            "calling": [],
            "called": [
                "FUN_08002494",
                "FUN_080024f8",
                "FUN_0800455a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080055bc": {
            "entrypoint": "0x080055bc",
            "current_name": "find_index_080055bc",
            "code": "\nuint find_index_080055bc(int value)\n\n{\n  uint index;\n  \n  if (value == 0) {\n    index = 5;\n  }\n  else {\n    index = 0;\n    while( true ) {\n      if (4 < index) {\n        return index;\n      }\n      if (value == (&DAT_2000032c)[index]) break;\n      index = index + 1 & 0xff;\n    }\n  }\n  return index;\n}\n\n",
            "renaming": {
                "FUN_080055bc": "find_index_080055bc",
                "param_1": "value",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08005604",
                "FUN_080055e0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080055e0": {
            "entrypoint": "0x080055e0",
            "current_name": "execute_next_operation_080055e0",
            "code": "\nvoid executeNextOperation_080055e0(void)\n\n{\n  uint operationIndex;\n  \n  operationIndex = FUN_080055bc();\n  if (operationIndex < 5) {\n    (**(code **)(&DAT_200002dc + operationIndex * 4))(*(undefined4 *)(&DAT_200002f0 + operationIndex * 4));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080055e0": "execute_next_operation_080055e0",
                "uVar1": "operationIndex"
            },
            "calling": [
                "FUN_08004618"
            ],
            "called": [
                "FUN_080055bc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005604": {
            "entrypoint": "0x08005604",
            "current_name": "execute_function_08005604",
            "code": "\nvoid executeFunction_08005604(void)\n\n{\n  uint result;\n  int returnValue;\n  int dataPointer;\n  \n  result = FUN_080055bc();\n  dataPointer = *(int *)(&DAT_20000318 + result * 4);\n  if ((result < 5) && (returnValue = (**(code **)(&DAT_20000304 + result * 4))(dataPointer), returnValue != -1)) {\n    FUN_0800455a((&DAT_2000032c)[*(byte *)(dataPointer + 0x44)],\n                 *(int *)(dataPointer + 100) + (uint)*(ushort *)(dataPointer + 0x6a),1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005604": "execute_function_08005604",
                "uVar1": "result",
                "iVar2": "returnValue",
                "iVar3": "dataPointer"
            },
            "calling": [
                "FUN_080045fe"
            ],
            "called": [
                "FUN_080055bc",
                "FUN_0800455a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005650": {
            "entrypoint": "0x08005650",
            "current_name": "FUNC_08005650",
            "code": "\nvoid FUNC_08005650(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005650": "FUNC_08005650"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080056d8": {
            "entrypoint": "0x080056d8",
            "current_name": "allocate_memory_080056d8",
            "code": "\nundefined * allocateMemory_080056d8(int size)\n\n{\n  undefined *allocatedMemory;\n  \n  if (DAT_20000340 == (undefined *)0x0) {\n    DAT_20000340 = &DAT_200006a8;\n  }\n  allocatedMemory = DAT_20000340;\n  if (DAT_20000340 + size <= &stackPtr) {\n    DAT_20000340 = DAT_20000340 + size;\n    return allocatedMemory;\n  }\n  DAT_200006a4 = 0xc;\n  return (undefined *)0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080056d8": "allocate_memory_080056d8",
                "param_1": "size",
                "puVar1": "allocatedMemory",
                "stack0x00000000": "stackPtr"
            },
            "calling": [
                "FUN_08006920"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005714": {
            "entrypoint": "0x08005714",
            "current_name": "get_negative_one_08005714",
            "code": "\nuint32 getNegativeOne_08005714(void)\n\n{\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08005714": "get_negative_one_08005714",
                "undefined4": "uint32"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800571a": {
            "entrypoint": "0x0800571a",
            "current_name": "set_page_size_0800571a",
            "code": "\nundefined4 setPageSize_0800571a(undefined4 param,int address)\n\n{\n  *(undefined4 *)(address + 4) = 0x2000;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800571a": "set_page_size_0800571a",
                "param_1": "param",
                "param_2": "address"
            },
            "calling": [
                "FUN_08007004"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005724": {
            "entrypoint": "0x08005724",
            "current_name": "check_if_binary_08005724",
            "code": "\nundefined4 check_if_binary_08005724(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08005724": "check_if_binary_08005724"
            },
            "calling": [
                "FUN_08007028"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005728": {
            "entrypoint": "0x08005728",
            "current_name": "initialize_program_08005728",
            "code": "\nundefined4 initializeProgram_08005728(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005728": "initialize_program_08005728"
            },
            "calling": [
                "FUN_08007048"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800572c": {
            "entrypoint": "0x0800572c",
            "current_name": "get_return_value_0800572c",
            "code": "\nuint32_t getReturnValue_0800572c(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800572c": "get_return_value_0800572c",
                "undefined4": "uint32_t"
            },
            "calling": [
                "FUN_0800706c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005730": {
            "entrypoint": "0x08005730",
            "current_name": "initialize_08005730",
            "code": "\nvoid initialize_08005730(undefined4 argument1,undefined4 argument2,undefined4 argument3,undefined4 argument4)\n\n{\n  FUN_080053d4(argument2,argument3,argument3,argument4,argument4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005730": "initialize_08005730",
                "param_1": "argument1",
                "param_2": "argument2",
                "param_3": "argument3",
                "param_4": "argument4"
            },
            "calling": [
                "FUN_08006f5a"
            ],
            "called": [
                "FUN_080053d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800573c": {
            "entrypoint": "0x0800573c",
            "current_name": "infinite_loop_0800573c",
            "code": "\nvoid infiniteLoop_0800573c(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_0800573c": "infinite_loop_0800573c"
            },
            "calling": [
                "FUN_0800573c",
                "FUN_08006ac0"
            ],
            "called": [
                "FUN_0800573c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005740": {
            "entrypoint": "0x08005740",
            "current_name": "set_initial_value_08005740",
            "code": "\nundefined4 setInitialValue_08005740(void)\n\n{\n  DAT_200006a4 = 0x16;\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08005740": "set_initial_value_08005740"
            },
            "calling": [
                "FUN_08006f00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005750": {
            "entrypoint": "0x08005750",
            "current_name": "initialize_08005750",
            "code": "\nundefined4 initialize_08005750(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08005750": "initialize_08005750"
            },
            "calling": [
                "thunk_FUN_08005750"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005754": {
            "entrypoint": "0x08005754",
            "current_name": "decode_value_08005754",
            "code": "\nuint decode_value_08005754(uint value)\n\n{\n  bool is_less_than_3c;\n  char decoded_char;\n  uint result;\n  \n  if (value < 0xe) {\n    if (value + 0x2e < 0x3c) {\n      is_less_than_3c = true;\n    }\n    else {\n      is_less_than_3c = false;\n    }\n  }\n  else {\n    is_less_than_3c = value < 0x3c;\n  }\n  if (is_less_than_3c) {\n    if (value < 0xe) {\n      value = value + 0x2e;\n    }\n    decoded_char = (&DAT_080076f0)[value];\n  }\n  else {\n    decoded_char = -1;\n  }\n  if (decoded_char == -1) {\n    result = 0;\n  }\n  else {\n    result = FUN_08004a4c();\n    if (DAT_200000f4 != 0xc) {\n      if (DAT_200000f4 < 0xc) {\n        return result >> (0xc - DAT_200000f4 & 0xff);\n      }\n      return result << (DAT_200000f4 - 0xc & 0xff);\n    }\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005754": "decode_value_08005754",
                "param_1": "value",
                "bVar1": "is_less_than_3c",
                "cVar2": "decoded_char",
                "uVar3": "result"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08004a4c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080057b4": {
            "entrypoint": "0x080057b4",
            "current_name": "execute_function_080057b4",
            "code": "\nvoid executeFunction_080057b4(uint arg1,undefined4 arg2,undefined4 arg3,undefined *arg4)\n\n{\n  int result;\n  undefined *dataArray;\n  int index;\n  \n  if (arg1 < 0x3c) {\n    index = (int)(char)(&DAT_080076f0)[arg1];\n    dataArray = &DAT_080076f0;\n  }\n  else {\n    index = -1;\n    dataArray = arg4;\n  }\n  if (index != -1) {\n    result = FUN_080047f4(index,&DAT_20000344,arg3,dataArray,arg4);\n    if (result != 0) {\n      result = FUN_08004ce2(index,&DAT_080074b4);\n      if (result != 0) {\n        FUN_08004b3c(index);\n      }\n      FUN_08004828(index,&DAT_20000344);\n    }\n    switch(arg2) {\n    case 0:\n      FUN_08004bb0(index,0);\n      break;\n    case 1:\n      FUN_08004bb0(index,1,0);\n      break;\n    case 2:\n      FUN_08004bb0(index,0,1);\n      break;\n    case 3:\n      FUN_08004bb0(index,0,2);\n    }\n    FUN_0800480a(index,&DAT_20000358);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080057b4": "execute_function_080057b4",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "iVar1": "result",
                "iVar3": "index",
                "puVar2": "dataArray"
            },
            "calling": [
                "FUN_08000bcc",
                "FUN_0800157c",
                "FUN_080013a4"
            ],
            "called": [
                "FUN_08004bb0",
                "FUN_080047f4",
                "FUN_0800480a",
                "FUN_08004b3c",
                "FUN_08004828",
                "FUN_08004ce2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005848": {
            "entrypoint": "0x08005848",
            "current_name": "process_data_08005848",
            "code": "\nvoid processData_08005848(uint index,undefined4 param2,undefined4 param3,undefined *data)\n\n{\n  int result;\n  undefined4 shiftedValue;\n  undefined *ptr;\n  uint value;\n  \n  if (index < 0x3c) {\n    value = (uint)(char)(&DAT_080076f0)[index];\n    ptr = &DAT_080076f0;\n  }\n  else {\n    value = 0xffffffff;\n    ptr = data;\n  }\n  if ((value != 0xffffffff) &&\n     (result = FUN_080047f4(value,&DAT_20000358,param3,ptr,data), result != 0)) {\n    shiftedValue = FUN_08004848((value << 0x18) >> 0x1c);\n    FUN_08004c30(shiftedValue,1 << (value & 0xf) & 0xffff,param2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005848": "process_data_08005848",
                "param_1": "index",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "data",
                "iVar1": "result",
                "uVar2": "shiftedValue",
                "puVar3": "ptr",
                "uVar4": "value"
            },
            "calling": [
                "FUN_08001310",
                "FUN_08000cd0",
                "FUN_080012a2",
                "FUN_08000bcc",
                "FUN_080015b2",
                "FUN_080012c0",
                "FUN_0800157c",
                "FUN_080013a4",
                "FUN_080012e8"
            ],
            "called": [
                "FUN_08004848",
                "FUN_08004c30",
                "FUN_080047f4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005890": {
            "entrypoint": "0x08005890",
            "current_name": "check_and_return_flag_08005890",
            "code": "\nchar checkAndReturnFlag_08005890(uint inputValue)\n\n{\n  char outputFlag;\n  int result;\n  undefined4 modifiedValue;\n  uint lookupIndex;\n  \n  if (inputValue < 0x3c) {\n    lookupIndex = (uint)(char)(&DAT_080076f0)[inputValue];\n  }\n  else {\n    lookupIndex = 0xffffffff;\n  }\n  if (lookupIndex == 0xffffffff) {\n    outputFlag = '\\0';\n  }\n  else {\n    result = FUN_080047f4(lookupIndex,&DAT_20000358);\n    if (result == 0) {\n      outputFlag = '\\0';\n    }\n    else {\n      modifiedValue = FUN_08004848((lookupIndex << 0x18) >> 0x1c);\n      outputFlag = FUN_08004c48(modifiedValue,1 << (lookupIndex & 0xf) & 0xffff);\n    }\n  }\n  if (outputFlag != '\\0') {\n    outputFlag = '\\x01';\n  }\n  return outputFlag;\n}\n\n",
            "renaming": {
                "FUN_08005890": "check_and_return_flag_08005890",
                "param_1": "inputValue",
                "cVar1": "outputFlag",
                "iVar2": "result",
                "uVar3": "modifiedValue",
                "uVar4": "lookupIndex"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_080015b2"
            ],
            "called": [
                "FUN_08004848",
                "FUN_080047f4",
                "FUN_08004c48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058e0": {
            "entrypoint": "0x080058e0",
            "current_name": "initialize_application_080058e0",
            "code": "\nvoid initialize_application_080058e0(void)\n\n{\n  FUN_08004b94();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080058e0": "initialize_application_080058e0"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08000bcc",
                "FUN_08001ab0",
                "FUN_080016b4"
            ],
            "called": [
                "FUN_08004b94"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058e8": {
            "entrypoint": "0x080058e8",
            "current_name": "FUNC_080058e8",
            "code": "\nvoid FUNC_080058e8(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080058e8": "FUNC_080058e8"
            },
            "calling": [
                "FUN_08000bcc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800591e": {
            "entrypoint": "0x0800591e",
            "current_name": "calculate_shift_value_0800591e",
            "code": "\nushort calculate_shift_value_0800591e(int input_value)\n\n{\n  return (*(short *)(input_value + 0x134) + 0x40) - *(short *)(input_value + 0x136) & 0x3f;\n}\n\n",
            "renaming": {
                "FUN_0800591e": "calculate_shift_value_0800591e",
                "param_1": "input_value"
            },
            "calling": [
                "FUN_08005a18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800598a": {
            "entrypoint": "0x0800598a",
            "current_name": "update_data_0800598a",
            "code": "\nvoid updateData_0800598a(int data)\n\n{\n  int result;\n  ushort newIndex;\n  undefined newValue;\n  \n  result = FUN_080054d4(data,&newValue);\n  if ((result == 0) &&\n     (newIndex = *(short *)(data + 0x60) + 1U & 0x3f, newIndex != *(ushort *)(data + 0x62))) {\n    *(undefined *)(*(int *)(data + 0x5c) + (uint)*(ushort *)(data + 0x60)) = newValue;\n    *(ushort *)(data + 0x60) = newIndex;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800598a": "update_data_0800598a",
                "param_1": "data",
                "iVar1": "result",
                "uVar2": "newIndex",
                "local_9": "newValue"
            },
            "calling": [],
            "called": [
                "FUN_080054d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a18": {
            "entrypoint": "0x08005a18",
            "current_name": "FUNC_08005a18",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08005a1e) */\n/* WARNING: Removing unreachable block (ram,0x08005a30) */\n/* WARNING: Removing unreachable block (ram,0x08005a26) */\n/* WARNING: Removing unreachable block (ram,0x08005a38) */\n\nvoid FUNC_08005a18(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a18": "FUNC_08005a18"
            },
            "calling": [
                "FUN_08005f6c"
            ],
            "called": [
                "FUN_0800591e"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005a44": {
            "entrypoint": "0x08005a44",
            "current_name": "initialize_data_08005a44",
            "code": "\nvoid initializeData_08005a44(int baseAddress)\n\n{\n  *(int *)(baseAddress + 0x130) = baseAddress + 0x11;\n  *(undefined2 *)(baseAddress + 0x134) = 0;\n  *(undefined2 *)(baseAddress + 0x136) = 0;\n  *(int *)(baseAddress + 0x138) = baseAddress + 0x51;\n  *(undefined2 *)(baseAddress + 0x13c) = 0;\n  *(undefined2 *)(baseAddress + 0x13e) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a44": "initialize_data_08005a44",
                "param_1": "baseAddress"
            },
            "calling": [
                "FUN_08005b54"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a68": {
            "entrypoint": "0x08005a68",
            "current_name": "initialize_serial_communication_08005a68",
            "code": "\nvoid initializeSerialCommunication_08005a68(int serialObject,undefined4 baudRate,byte options)\n\n{\n  uint extraResult;\n  char *errorMessage;\n  byte bitOptions;\n  int configValue;\n  byte *bytePointer;\n  char tempChar;\n  int offset;\n  code *jumpTable;\n  \n  *(undefined4 *)(serialObject + 0x11c) = baudRate;\n  *(byte *)(serialObject + 0x140) = options;\n  bitOptions = options & 7;\n  if (bitOptions == 4) {\n    configValue = 7;\n  }\n  else if (bitOptions == 6) {\n    configValue = 8;\n  }\n  else if (bitOptions == 2) {\n    configValue = 6;\n  }\n  else {\n    configValue = 0;\n  }\n  if ((options & 0x30) == 0x30) {\n    *(undefined4 *)(serialObject + 0x128) = 0x600;\n    configValue = configValue + 1;\n  }\n  else if ((options & 0x20) == 0) {\n    *(undefined4 *)(serialObject + 0x128) = 0;\n  }\n  else {\n    *(undefined4 *)(serialObject + 0x128) = 0x400;\n    configValue = configValue + 1;\n  }\n  if ((options & 8) == 0) {\n    *(undefined4 *)(serialObject + 0x124) = 0;\n  }\n  else {\n    *(undefined4 *)(serialObject + 0x124) = 0x2000;\n  }\n  if (configValue == 8) {\n    *(undefined4 *)(serialObject + 0x120) = 0;\n  }\n  else if (configValue == 9) {\n    *(undefined4 *)(serialObject + 0x120) = 0x1000;\n  }\n  else {\n    configValue = 0;\n  }\n  if (configValue != 0) {\n    FUN_08004f4c(serialObject + 0xd4);\n    FUN_08005510(serialObject + 0xd4,0x800598b);\n    return;\n  }\n  errorMessage = \"void HardwareSerial::begin(long unsigned int, byte)\";\n  jumpTable = (code *)0x8005b12;\n  FUN_0800611c(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/cores/arduino/HardwareSerial.cpp\"\n               ,299,\"void HardwareSerial::begin(long unsigned int, byte)\",\"databits!=0\");\n  bytePointer = *(byte **)(extraResult + offset);\n  errorMessage[0x1e] = tempChar;\n  *(undefined *)(*bytePointer + 0x1e) = 0;\n  if (extraResult < 0x3c) {\n    uRam0000012d = (&DAT_080076f0)[extraResult];\n  }\n  else {\n    uRam0000012d = 0xff;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08005b30. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a68": "initialize_serial_communication_08005a68",
                "param_1": "serialObject",
                "param_2": "baudRate",
                "param_3": "options",
                "extraout_r1": "extraResult",
                "pcVar1": "errorMessage",
                "bVar2": "bitOptions",
                "iVar3": "configValue",
                "pbVar4": "bytePointer",
                "unaff_r4": "tempChar",
                "unaff_r6": "offset",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08005510",
                "FUN_08004f4c",
                "FUN_0800611c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005b24": {
            "entrypoint": "0x08005b24",
            "current_name": "update_data_and_jump_08005b24",
            "code": "\nvoid updateDataAndJump_08005b24(int baseAddress,uint value)\n\n{\n  undefined updatedValue;\n  code *jumpTable;\n  \n  if (value < 0x3c) {\n    updatedValue = (&DAT_080076f0)[value];\n  }\n  else {\n    updatedValue = 0xff;\n  }\n  *(undefined *)(baseAddress + 0x12d) = updatedValue;\n                    /* WARNING: Could not recover jumptable at 0x08005b30. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005b24": "update_data_and_jump_08005b24",
                "param_1": "baseAddress",
                "param_2": "value",
                "uVar1": "updatedValue",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_08005b54"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005b3c": {
            "entrypoint": "0x08005b3c",
            "current_name": "set_byte_value_08005b3c",
            "code": "\nvoid setByteValue_08005b3c(int address,uint index)\n\n{\n  undefined byteValue;\n  \n  if (index < 0x3c) {\n    byteValue = (&DAT_080076f0)[index];\n  }\n  else {\n    byteValue = 0xff;\n  }\n  *(undefined *)(address + 300) = byteValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005b3c": "set_byte_value_08005b3c",
                "param_1": "address",
                "param_2": "index",
                "uVar1": "byteValue"
            },
            "calling": [
                "FUN_08005b54"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005b54": {
            "entrypoint": "0x08005b54",
            "current_name": "initialize_data_08005b54",
            "code": "\nundefined4 *\ninitializeData_08005b54(undefined4 *dataArray,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined tempVar;\n  \n  dataArray[1] = 0;\n  dataArray[2] = 1000;\n  *dataArray = &PTR_LAB_080059c8_1_08007804;\n  if (dataArray == (undefined4 *)&DAT_2000036c) {\n    FUN_08005b24(&DAT_2000036c,0,param3,&DAT_2000036c,param4);\n    FUN_08005b3c(&DAT_2000036c,1);\n  }\n  else {\n    tempVar = FUN_08004ca2(param2,&DAT_08007604);\n    *(undefined *)((int)dataArray + 0x12d) = tempVar;\n    tempVar = FUN_08004ca2(param2,&DAT_0800764c);\n    *(undefined *)(dataArray + 0x4b) = tempVar;\n  }\n  FUN_08005a44(dataArray);\n  return dataArray;\n}\n\n",
            "renaming": {
                "FUN_08005b54": "initialize_data_08005b54",
                "param_1": "dataArray",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "tempVar"
            },
            "calling": [
                "FUN_08005bb0"
            ],
            "called": [
                "FUN_08004ca2",
                "FUN_08005a44",
                "FUN_08005b3c",
                "FUN_08005b24"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005bb0": {
            "entrypoint": "0x08005bb0",
            "current_name": "check_param_and_call_function_08005bb0",
            "code": "\nvoid check_param_and_call_function_08005bb0(int condition_1,int condition_2,undefined4 data_1,undefined4 data_2)\n\n{\n  if (condition_1 != 1) {\n    return;\n  }\n  if (condition_2 == 0xffff) {\n    FUN_08005b54(&DAT_2000036c,0x40004400,data_1,0xffff,data_2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005bb0": "check_param_and_call_function_08005bb0",
                "param_1": "condition_1",
                "param_2": "condition_2",
                "param_3": "data_1",
                "param_4": "data_2"
            },
            "calling": [],
            "called": [
                "FUN_08005b54"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c1c": {
            "entrypoint": "0x08005c1c",
            "current_name": "initialize_data_08005c1c",
            "code": "\nvoid initializeData_08005c1c(undefined4 *dataPointer,undefined value1,undefined value2,undefined value3,\n                 undefined value4)\n\n{\n  *dataPointer = &DAT_08007858;\n  *(undefined *)(dataPointer + 1) = value1;\n  *(undefined *)((int)dataPointer + 5) = value2;\n  *(undefined *)((int)dataPointer + 6) = value3;\n  *(undefined *)((int)dataPointer + 7) = value4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005c1c": "initialize_data_08005c1c",
                "param_1": "dataPointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "value4"
            },
            "calling": [
                "FUN_08005c38"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c38": {
            "entrypoint": "0x08005c38",
            "current_name": "check_params_08005c38",
            "code": "\nvoid checkParams_08005c38(int flag1,int flag2)\n\n{\n  if ((flag1 == 1) && (flag2 == 0xffff)) {\n    FUN_08005c1c(&DAT_200004b0,0,0,0,0);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005c38": "check_params_08005c38",
                "param_1": "flag1",
                "param_2": "flag2"
            },
            "calling": [],
            "called": [
                "FUN_08005c1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c96": {
            "entrypoint": "0x08005c96",
            "current_name": "execute_function_08005c96",
            "code": "\nundefined4 executeFunction_08005c96(int *functionPointer,int inputValue,undefined4 arg1,undefined4 arg2)\n\n{\n  undefined4 result;\n  \n  if (inputValue != 0) {\n    result = FUN_08000178(inputValue);\n    result = (**(code **)(*functionPointer + 4))(functionPointer,inputValue,result,*(code **)(*functionPointer + 4),arg2);\n    return result;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005c96": "execute_function_08005c96",
                "param_1": "functionPointer",
                "param_2": "inputValue",
                "param_3": "arg1",
                "param_4": "arg2",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0",
                "FUN_08005cd4",
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08000178"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cb6": {
            "entrypoint": "0x08005cb6",
            "current_name": "execute_code_08005cb6",
            "code": "\nvoid execute_code_08005cb6(undefined4 *function_ptr)\n\n{\n  (**(code **)*function_ptr)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005cb6": "execute_code_08005cb6",
                "param_1": "function_ptr"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08005d42"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cc0": {
            "entrypoint": "0x08005cc0",
            "current_name": "execute_function_08005cc0",
            "code": "\nvoid executeFunction_08005cc0(int *functionPointer,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  (**(code **)(*functionPointer + 4))(functionPointer,&DAT_0800786c,2,*(code **)(*functionPointer + 4),param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005cc0": "execute_function_08005cc0",
                "param_1": "functionPointer",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [
                "FUN_08005cd4",
                "FUN_08005f40"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cd4": {
            "entrypoint": "0x08005cd4",
            "current_name": "calculate_sum_08005cd4",
            "code": "\nint calculateSum_08005cd4(undefined4 input)\n\n{\n  int result1;\n  int result2;\n  \n  result1 = FUN_08005c96();\n  result2 = FUN_08005cc0(input);\n  return result2 + result1;\n}\n\n",
            "renaming": {
                "FUN_08005cd4": "calculate_sum_08005cd4",
                "param_1": "input",
                "iVar1": "result1",
                "iVar2": "result2"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08005cc0",
                "FUN_08005c96"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005ce8": {
            "entrypoint": "0x08005ce8",
            "current_name": "convert_decimal_to_base_08005ce8",
            "code": "\nundefined4 convert_decimal_to_base_08005ce8(int *input_buffer,uint decimal_number,uint base)\n\n{\n  char converted_digit;\n  undefined4 result;\n  uint temp;\n  uint quotient;\n  char *output_buffer;\n  char stack_buffer [9];\n  \n  stack_buffer[1] = 0;\n  if ((int)base < 2) {\n    base = 10;\n  }\n  output_buffer = stack_buffer + 1;\n  do {\n    quotient = decimal_number / base;\n    temp = (decimal_number & 0xff) - (quotient * base & 0xff) & 0xff;\n    output_buffer = output_buffer + -1;\n    converted_digit = (char)temp;\n    if (temp < 10) {\n      converted_digit = converted_digit + '0';\n    }\n    else {\n      converted_digit = converted_digit + '7';\n    }\n    *output_buffer = converted_digit;\n    decimal_number = quotient;\n  } while (quotient != 0);\n  if (output_buffer == (char *)0x0) {\n    result = 0;\n  }\n  else {\n    result = FUN_08000178(output_buffer);\n    result = (**(code **)(*input_buffer + 4))(input_buffer,output_buffer,result);\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005ce8": "convert_decimal_to_base_08005ce8",
                "param_1": "input_buffer",
                "param_2": "decimal_number",
                "param_3": "base",
                "cVar1": "converted_digit",
                "uVar2": "result",
                "uVar3": "temp",
                "uVar4": "quotient",
                "pcVar5": "output_buffer",
                "local_15": "stack_buffer"
            },
            "calling": [
                "FUN_08005d8a",
                "FUN_08005d42"
            ],
            "called": [
                "FUN_08000178"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005d42": {
            "entrypoint": "0x08005d42",
            "current_name": "execute_operation_08005d42",
            "code": "\nint executeOperation_08005d42(undefined4 *operations,uint value,uint operation)\n\n{\n  int result;\n  int negative_result;\n  \n  if (operation == 0) {\n    result = (**(code **)*operations)(operations,value & 0xff);\n    return result;\n  }\n  if (operation != 10) {\n    result = FUN_08005ce8(operations,value,operation & 0xff);\n    return result;\n  }\n  if (-1 < (int)value) {\n    result = FUN_08005ce8(operations,value,10);\n    return result;\n  }\n  result = FUN_08005cb6(operations,0x2d);\n  negative_result = FUN_08005ce8(operations,-value,10);\n  return negative_result + result;\n}\n\n",
            "renaming": {
                "FUN_08005d42": "execute_operation_08005d42",
                "param_1": "operations",
                "param_2": "value",
                "param_3": "operation",
                "iVar1": "result",
                "iVar2": "negative_result"
            },
            "calling": [
                "FUN_08005d82"
            ],
            "called": [
                "FUN_08005cb6",
                "FUN_08005ce8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005d82": {
            "entrypoint": "0x08005d82",
            "current_name": "execute_function_08005d82",
            "code": "\nvoid execute_function_08005d82(void)\n\n{\n  FUN_08005d42();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005d82": "execute_function_08005d82"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08005d42"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005d8a": {
            "entrypoint": "0x08005d8a",
            "current_name": "execute_operation_08005d8a",
            "code": "\nvoid executeOperation_08005d8a(undefined4 *functionPtr,uint inputValue,uint paramMask,undefined4 extraParam)\n\n{\n  if (paramMask != 0) {\n    FUN_08005ce8(functionPtr,inputValue,paramMask & 0xff);\n    return;\n  }\n  (**(code **)*functionPtr)(functionPtr,inputValue & 0xff,0,*(code **)*functionPtr,extraParam);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005d8a": "execute_operation_08005d8a",
                "param_1": "functionPtr",
                "param_2": "inputValue",
                "param_3": "paramMask",
                "param_4": "extraParam"
            },
            "calling": [
                "FUN_08005da8"
            ],
            "called": [
                "FUN_08005ce8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005da8": {
            "entrypoint": "0x08005da8",
            "current_name": "process_data_08005da8",
            "code": "\nint processData_08005da8(undefined4 param1,undefined4 param2,undefined4 param3,uint param4,byte param5)\n\n{\n  int result;\n  undefined4 temp1;\n  int temp2;\n  byte counter;\n  undefined8 temp3;\n  undefined8 temp4;\n  \n  result = FUN_08000a2c(param3,param4,param3,param4);\n  if (result == 0) {\n    result = FUN_08000a2c(param3,param4 & 0x7fffffff,0xffffffff,0x7fefffff);\n    if ((result == 0) &&\n       (result = FUN_080009f0(param3,param4 & 0x7fffffff,0xffffffff,0x7fefffff), result == 0)) {\n      result = FUN_08005c96(param1,&DAT_08007860);\n    }\n    else {\n      result = FUN_08000a18(param3,param4,0xe0000000,0x41efffff);\n      if (result == 0) {\n        result = FUN_080009dc(param3,param4,0xe0000000,0xc1efffff);\n        if (result == 0) {\n          result = FUN_080009dc(param3,param4,0,0);\n          if (result == 0) {\n            result = 0;\n          }\n          else {\n            result = FUN_08005cb6(param1,0x2d);\n            param4 = param4 + 0x80000000;\n          }\n          temp3 = 0x3fe0000000000000;\n          for (counter = 0; temp1 = (undefined4)((ulonglong)temp3 >> 0x20), counter < param5;\n              counter = counter + 1) {\n            temp3 = FUN_0800074c((int)temp3,temp1,0,0x40240000);\n          }\n          temp3 = FUN_08000194(param3,param4,(int)temp3,temp1);\n          temp1 = FUN_08000aa8();\n          temp4 = FUN_0800040c();\n          temp3 = FUN_08000190((int)temp3,(int)((ulonglong)temp3 >> 0x20),(int)temp4,\n                               (int)((ulonglong)temp4 >> 0x20));\n          temp2 = FUN_08005d8a(param1,temp1,10);\n          result = result + temp2;\n          if (param5 != 0) {\n            temp2 = FUN_08005c96(param1,&DAT_08007868);\n            result = result + temp2;\n          }\n          while (param5 != 0) {\n            temp3 = FUN_080004f8((int)temp3,(int)((ulonglong)temp3 >> 0x20),0,0x40240000);\n            temp1 = FUN_08000a58();\n            temp2 = FUN_08005d82(param1,temp1,10);\n            result = result + temp2;\n            temp4 = FUN_0800042c(temp1);\n            temp3 = FUN_08000190((int)temp3,(int)((ulonglong)temp3 >> 0x20),(int)temp4,\n                                 (int)((ulonglong)temp4 >> 0x20));\n            param5 = param5 - 1;\n          }\n        }\n        else {\n          result = FUN_08005c96(param1,&DAT_08007864);\n        }\n      }\n      else {\n        result = FUN_08005c96(param1,&DAT_08007864);\n      }\n    }\n  }\n  else {\n    result = FUN_08005c96(param1,&DAT_0800785c);\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005da8": "process_data_08005da8",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "iVar1": "result",
                "uVar2": "temp1",
                "iVar3": "temp2",
                "bVar4": "counter",
                "uVar5": "temp3",
                "uVar6": "temp4"
            },
            "calling": [
                "FUN_08005f2c"
            ],
            "called": [
                "FUN_08000a18",
                "FUN_08000aa8",
                "FUN_0800040c",
                "FUN_08005c96",
                "FUN_0800042c",
                "FUN_0800074c",
                "FUN_08000190",
                "FUN_08000194",
                "FUN_080004f8",
                "FUN_080009f0",
                "FUN_080009dc",
                "FUN_08005cb6",
                "FUN_08000a58",
                "FUN_08005d82",
                "FUN_08000a2c",
                "FUN_08005d8a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f2c": {
            "entrypoint": "0x08005f2c",
            "current_name": "initialize_application_08005f2c",
            "code": "\nvoid initializeApplication_08005f2c(void)\n\n{\n  FUN_08005da8();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005f2c": "initialize_application_08005f2c"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08005f40"
            ],
            "called": [
                "FUN_08005da8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f40": {
            "entrypoint": "0x08005f40",
            "current_name": "calculate_sum_08005f40",
            "code": "\nint calculateSum_08005f40(undefined4 input)\n\n{\n  int result1;\n  int result2;\n  \n  result1 = FUN_08005f2c();\n  result2 = FUN_08005cc0(input);\n  return result2 + result1;\n}\n\n",
            "renaming": {
                "FUN_08005f40": "calculate_sum_08005f40",
                "param_1": "input",
                "iVar1": "result1",
                "iVar2": "result2"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08005f2c",
                "FUN_08005cc0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f5c": {
            "entrypoint": "0x08005f5c",
            "current_name": "FUNC_08005f5c",
            "code": "\nvoid FUNC_08005f5c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005f5c": "FUNC_08005f5c"
            },
            "calling": [
                "FUN_08005f6c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005f5e": {
            "entrypoint": "0x08005f5e",
            "current_name": "initialize_application_08005f5e",
            "code": "\nvoid initializeApplication_08005f5e(void)\n\n{\n  FUN_08002470(3);\n  FUN_08001c32();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005f5e": "initialize_application_08005f5e"
            },
            "calling": [
                "FUN_08006198"
            ],
            "called": [
                "FUN_08001c32",
                "FUN_08002470"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f6c": {
            "entrypoint": "0x08005f6c",
            "current_name": "run_infinite_loop_08005f6c",
            "code": "\nvoid run_infinite_loop_08005f6c(void)\n\n{\n  FUNC_08005f5c();\n  FUN_08000bcc();\n  do {\n    FUN_08000cd0();\n    FUNC_08005a18();\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08005f6c": "run_infinite_loop_08005f6c"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_08000cd0",
                "FUN_08000bcc",
                "FUN_08005f5c",
                "FUN_08005a18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f8c": {
            "entrypoint": "0x08005f8c",
            "current_name": "count_set_bits_08005f8c",
            "code": "\nchar countSetBits_08005f8c(uint num)\n\n{\n  char count;\n  \n  count = '\\0';\n  for (; num != 1; num = num >> 1) {\n    count = count + '\\x01';\n  }\n  return count;\n}\n\n",
            "renaming": {
                "FUN_08005f8c": "count_set_bits_08005f8c",
                "param_1": "num",
                "cVar1": "count"
            },
            "calling": [
                "FUN_080060e4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005fc8": {
            "entrypoint": "0x08005fc8",
            "current_name": "initialize_parameters_08005fc8",
            "code": "\nvoid initializeParameters_08005fc8(int condition,int value,undefined4 param_3,undefined4 param_4)\n\n{\n  if (condition != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    DAT_200004b8 = 6;\n    DAT_200004c4 = 0;\n    DAT_200004cc = 7;\n    DAT_200004d8 = 0;\n    DAT_200004e0 = 8;\n    DAT_200004ec = 0;\n    DAT_200004f4 = 9;\n    DAT_20000500 = 0;\n    DAT_20000508 = 10;\n    DAT_20000514 = 0;\n    DAT_2000051c = 0x17;\n    DAT_20000528 = 0;\n    DAT_20000530 = 0x17;\n    DAT_2000053c = 0;\n    DAT_20000544 = 0x17;\n    DAT_20000550 = 0;\n    DAT_20000558 = 0x17;\n    DAT_20000564 = 0;\n    DAT_2000056c = 0x17;\n    DAT_20000578 = 0;\n    DAT_20000580 = 0x28;\n    DAT_2000058c = 0;\n    DAT_20000594 = 0x28;\n    DAT_200005a0 = 0;\n    DAT_200005a8 = 0x28;\n    DAT_200005b4 = 0;\n    DAT_200005bc = 0x28;\n    DAT_200005c8 = 0;\n    DAT_200005d0 = 0x28;\n    DAT_200005dc = 0;\n    DAT_200005e4 = 0x28;\n    DAT_200005f0 = 0;\n    FUN_08006112(0,&label,&DAT_20000000,&DAT_200004b8,param_4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005fc8": "initialize_parameters_08005fc8",
                "param_1": "condition",
                "param_2": "value",
                "LAB_08005fa0_1": "label"
            },
            "calling": [],
            "called": [
                "FUN_08006112"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080060d4": {
            "entrypoint": "0x080060d4",
            "current_name": "execute_logic_080060d4",
            "code": "\nvoid executeLogic_080060d4(int input)\n\n{\n  int index;\n  \n  if (*(int *)(input + 8) != 0) {\n    (**(code **)(input + 0xc))();\n    return;\n  }\n  FUN_08007090();\n  index = FUN_08005f8c();\n  if ((&DAT_200004c4)[index * 5] != 0) {\n    executeLogic_080060d4();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080060d4": "execute_logic_080060d4",
                "param_1": "input",
                "iVar1": "index"
            },
            "calling": [
                "FUN_080060e4"
            ],
            "called": [
                "FUN_08007090"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080060e4": {
            "entrypoint": "0x080060e4",
            "current_name": "check_and_update_data_080060e4",
            "code": "\nvoid checkAndUpdateData_080060e4(void)\n\n{\n  int returnValue;\n  \n  returnValue = FUN_08005f8c();\n  if ((&DAT_200004c4)[returnValue * 5] != 0) {\n    FUN_080060d4();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080060e4": "check_and_update_data_080060e4",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_0800282c"
            ],
            "called": [
                "FUN_08005f8c",
                "FUN_080060d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006112": {
            "entrypoint": "0x08006112",
            "current_name": "initialize_variables_08006112",
            "code": "\nvoid initializeVariables_08006112(undefined4 source,undefined4 destination)\n\n{\n  FUN_08006158(destination,source);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006112": "initialize_variables_08006112",
                "param_1": "source",
                "param_2": "destination"
            },
            "calling": [
                "FUN_08005fc8"
            ],
            "called": [
                "FUN_08006158"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800611c": {
            "entrypoint": "0x0800611c",
            "current_name": "assertion_failed_0800611c",
            "code": "\nvoid assertionFailed_0800611c(undefined4 expression,undefined4 file,char *line,undefined4 functionMsg)\n\n{\n  undefined4 msgPtr;\n  char *appendStr;\n  undefined8 result;\n  undefined4 funcMsgPtr;\n  \n  msgPtr = *(undefined4 *)(DAT_200000f8 + 0xc);\n  funcMsgPtr = functionMsg;\n  if (line == (char *)0x0) goto LAB_08006140;\n  appendStr = \", function: \";\n  do {\n    FUN_08006174(msgPtr,\"assertion \\\"%s\\\" failed: file \\\"%s\\\", line %d%s%s\\n\",functionMsg,expression,file\n                 ,appendStr,line,funcMsgPtr);\n    result = FUN_08006ac0();\n    file = (undefined4)((ulonglong)result >> 0x20);\n    msgPtr = (undefined4)result;\nLAB_08006140:\n    line = \"\";\n    appendStr = line;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_0800611c": "assertion_failed_0800611c",
                "param_1": "expression",
                "param_2": "file",
                "param_3": "line",
                "param_4": "functionMsg",
                "uVar1": "msgPtr",
                "pcVar2": "appendStr",
                "uVar3": "result",
                "uVar4": "funcMsgPtr"
            },
            "calling": [
                "FUN_08005a68"
            ],
            "called": [
                "FUN_08006174",
                "FUN_08006ac0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006158": {
            "entrypoint": "0x08006158",
            "current_name": "left_shift_uint64_08006158",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08006160) */\n\nlonglong left_shift_uint64_08006158(undefined4 param_a,uint param_b)\n\n{\n  return (ulonglong)param_b << 0x20;\n}\n\n",
            "renaming": {
                "FUN_08006158": "left_shift_uint64_08006158",
                "param_1": "param_a",
                "param_2": "param_b"
            },
            "calling": [
                "FUN_08006112"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006174": {
            "entrypoint": "0x08006174",
            "current_name": "process_data_08006174",
            "code": "\nvoid processData_08006174(undefined4 input1,undefined4 input2,undefined4 dataLength,undefined4 dataOffset)\n\n{\n  undefined4 processedDataLength;\n  undefined4 processedDataOffset;\n  \n  processedDataLength = dataLength;\n  processedDataOffset = dataOffset;\n  FUN_08006394(DAT_200000f8,input1,input2,&processedDataLength,input1,&processedDataLength);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006174": "process_data_08006174",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "dataLength",
                "param_4": "dataOffset",
                "uStack_8": "processedDataLength",
                "uStack_4": "processedDataOffset"
            },
            "calling": [
                "FUN_0800611c"
            ],
            "called": [
                "FUN_08006394"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006198": {
            "entrypoint": "0x08006198",
            "current_name": "execute_functions_08006198",
            "code": "\nvoid executeFunctions_08006198(void)\n\n{\n  int index;\n  \n  for (index = 0; index != 0; index = index + 1) {\n    (*(code *)(&DAT_08007944)[index])();\n  }\n  FUNC_08007328();\n  for (index = 0; index != 10; index = index + 1) {\n    (*(code *)(&DAT_08007944)[index])();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006198": "execute_functions_08006198",
                "iVar1": "index"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_08005f5e",
                "FUN_08007328"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080061e0": {
            "entrypoint": "0x080061e0",
            "current_name": "fill_memory_080061e0",
            "code": "\nvoid fillMemory_080061e0(undefined *memory,undefined value,int length)\n\n{\n  undefined *endAddress;\n  \n  endAddress = memory + length;\n  for (; memory != endAddress; memory = memory + 1) {\n    *memory = value;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080061e0": "fill_memory_080061e0",
                "param_1": "memory",
                "param_2": "value",
                "param_3": "length",
                "puVar1": "endAddress"
            },
            "calling": [
                "FUN_08006c40",
                "FUN_08006c88",
                "FUN_08004a4c",
                "FUN_08006d14"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080061f0": {
            "entrypoint": "0x080061f0",
            "current_name": "rearrange_data_080061f0",
            "code": "\nvoid rearrangeData_080061f0(undefined4 *outputArray,int inputArraySize,undefined4 param_3,undefined4 param_4)\n\n{\n  int **extraOutputPtr;\n  int **tempPtr1;\n  int **tempPtr2;\n  int *tempVar;\n  int **tempPtr3;\n  int **tempPtr4;\n  \n  if (inputArraySize == 0) {\n    return;\n  }\n  tempPtr4 = (int **)(inputArraySize + -4);\n  if (*(int *)(inputArraySize + -4) < 0) {\n    tempPtr4 = (int **)((int)tempPtr4 + *(int *)(inputArraySize + -4));\n  }\n  FUNC_08006eac();\n  tempPtr2 = (int **)&DAT_200005f8;\n  if (DAT_200005f8 == (int **)0x0) {\n    tempPtr4[1] = (int *)0x0;\n    tempPtr1 = extraOutputPtr;\n    DAT_200005f8 = tempPtr4;\n  }\n  else {\n    tempPtr2 = DAT_200005f8;\n    if (tempPtr4 < DAT_200005f8) {\n      tempPtr1 = (int **)*tempPtr4;\n      tempPtr2 = (int **)((int)tempPtr4 + (int)tempPtr1);\n      if (DAT_200005f8 == tempPtr2) {\n        tempVar = *DAT_200005f8;\n        DAT_200005f8 = (int **)DAT_200005f8[1];\n        tempPtr2 = (int **)((int)tempVar + (int)tempPtr1);\n        *tempPtr4 = (int *)tempPtr2;\n      }\n      tempPtr4[1] = (int *)DAT_200005f8;\n      DAT_200005f8 = tempPtr4;\n    }\n    else {\n      do {\n        tempPtr3 = tempPtr2;\n        tempPtr2 = (int **)tempPtr3[1];\n        if (tempPtr2 == (int **)0x0) break;\n      } while (tempPtr2 <= tempPtr4);\n      tempPtr1 = (int **)*tempPtr3;\n      if ((int **)((int)tempPtr3 + (int)tempPtr1) == tempPtr4) {\n        tempPtr1 = (int **)((int)tempPtr1 + (int)*tempPtr4);\n        *tempPtr3 = (int *)tempPtr1;\n        if (tempPtr2 == (int **)((int)tempPtr3 + (int)tempPtr1)) {\n          tempVar = *tempPtr2;\n          tempPtr2 = (int **)tempPtr2[1];\n          tempPtr1 = (int **)((int)tempPtr1 + (int)tempVar);\n          *tempPtr3 = (int *)tempPtr1;\n          tempPtr3[1] = (int *)tempPtr2;\n        }\n      }\n      else if (tempPtr4 < (int **)((int)tempPtr3 + (int)tempPtr1)) {\n        *outputArray = 0xc;\n      }\n      else {\n        tempPtr1 = (int **)((int)tempPtr4 + (int)*tempPtr4);\n        if (tempPtr2 == tempPtr1) {\n          tempVar = *tempPtr2;\n          tempPtr2 = (int **)tempPtr2[1];\n          tempPtr1 = (int **)((int)tempVar + (int)*tempPtr4);\n          *tempPtr4 = (int *)tempPtr1;\n        }\n        tempPtr4[1] = (int *)tempPtr2;\n        tempPtr3[1] = (int *)tempPtr4;\n      }\n    }\n  }\n  FUNC_08006eae(outputArray,tempPtr1,tempPtr2,param_4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080061f0": "rearrange_data_080061f0",
                "param_1": "outputArray",
                "param_2": "inputArraySize",
                "extraout_r1": "extraOutputPtr",
                "ppiVar1": "tempPtr1",
                "ppiVar2": "tempPtr2",
                "piVar3": "tempVar",
                "ppiVar4": "tempPtr3",
                "ppiVar5": "tempPtr4"
            },
            "calling": [
                "FUN_080069e4",
                "FUN_08006ac0"
            ],
            "called": [
                "FUN_08006eac",
                "FUN_08006eae"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006288": {
            "entrypoint": "0x08006288",
            "current_name": "allocate_and_initialize_memory_08006288",
            "code": "\nuint allocate_and_initialize_memory_08006288(undefined4 *dest_ptr,uint size)\n\n{\n  uint *current_ptr;\n  int offset;\n  uint *next_ptr;\n  uint diff;\n  uint *prev_ptr;\n  uint allocated_size;\n  \n  allocated_size = (size + 3 & 0xfffffffc) + 8;\n  if (allocated_size < 0xc) {\n    allocated_size = 0xc;\n  }\n  if (((int)allocated_size < 0) || (allocated_size < size)) {\n    *dest_ptr = 0xc;\n  }\n  else {\n    FUNC_08006eac();\n    current_ptr = DAT_200005f8;\n    prev_ptr = DAT_200005f8;\n    while (next_ptr = current_ptr, next_ptr != (uint *)0x0) {\n      diff = *next_ptr - allocated_size;\n      if (-1 < (int)diff) {\n        if (diff < 0xc) {\n          if (prev_ptr == next_ptr) {\n            current_ptr = (uint *)prev_ptr[1];\n            DAT_200005f8 = current_ptr;\n          }\n          else {\n            current_ptr = (uint *)next_ptr[1];\n          }\n          if (prev_ptr != next_ptr) {\n            prev_ptr[1] = (uint)current_ptr;\n            prev_ptr = next_ptr;\n          }\n        }\n        else {\n          *next_ptr = diff;\n          *(uint *)((int)next_ptr + diff) = allocated_size;\n          prev_ptr = (uint *)((int)next_ptr + diff);\n        }\n        goto LAB_080062ec;\n      }\n      prev_ptr = next_ptr;\n      current_ptr = (uint *)next_ptr[1];\n    }\n    if (DAT_200005fc == 0) {\n      DAT_200005fc = FUN_08006920(dest_ptr);\n    }\n    current_ptr = (uint *)FUN_08006920(dest_ptr,allocated_size);\n    if ((current_ptr != (uint *)0xffffffff) &&\n       ((prev_ptr = (uint *)((int)current_ptr + 3U & 0xfffffffc), current_ptr == prev_ptr ||\n        (offset = FUN_08006920(dest_ptr,(int)prev_ptr - (int)current_ptr), offset != -1)))) {\n      *prev_ptr = allocated_size;\nLAB_080062ec:\n      FUNC_08006eae(dest_ptr);\n      allocated_size = (int)prev_ptr + 0xbU & 0xfffffff8;\n      offset = allocated_size - (int)(prev_ptr + 1);\n      if (offset != 0) {\n        *(int *)((int)prev_ptr + offset) = -offset;\n        return allocated_size;\n      }\n      return allocated_size;\n    }\n    *dest_ptr = 0xc;\n    FUNC_08006eae(dest_ptr);\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006288": "allocate_and_initialize_memory_08006288",
                "param_1": "dest_ptr",
                "param_2": "size",
                "puVar1": "current_ptr",
                "iVar2": "offset",
                "puVar3": "next_ptr",
                "uVar4": "diff",
                "puVar5": "prev_ptr",
                "uVar6": "allocated_size"
            },
            "calling": [
                "FUN_08006e10",
                "FUN_08006c88"
            ],
            "called": [
                "FUN_08006920",
                "FUN_08006eac",
                "FUN_08006eae"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006344": {
            "entrypoint": "0x08006344",
            "current_name": "process_input_08006344",
            "code": "\nuint process_input_08006344(int input_data,byte input_byte,byte **input_ptr)\n\n{\n  int index;\n  byte *curr_byte;\n  byte *pbVar3;\n  uint return_value;\n  \n  curr_byte = input_ptr[2] + -1;\n  input_ptr[2] = curr_byte;\n  if ((-1 < (int)curr_byte) ||\n     (((int)input_ptr[6] <= (int)curr_byte && (curr_byte = (byte *)(uint)input_byte, curr_byte != (byte *)0xa))))\n  {\n    curr_byte = *input_ptr;\n    *input_ptr = curr_byte + 1;\n    *curr_byte = input_byte;\n    return (uint)input_byte;\n  }\n  if ((input_data != 0) && (*(int *)(input_data + 0x18) == 0)) {\n    FUN_08006cb4();\n  }\n  if (input_ptr == (byte **)&DAT_08007904) {\n    input_ptr = *(byte ***)(input_data + 4);\n  }\n  else if (input_ptr == (byte **)&DAT_08007924) {\n    input_ptr = *(byte ***)(input_data + 8);\n  }\n  else if (input_ptr == (byte **)&DAT_080078e4) {\n    input_ptr = *(byte ***)(input_data + 0xc);\n  }\n  input_ptr[2] = input_ptr[6];\n  pbVar3 = (byte *)(uint)*(ushort *)(input_ptr + 3);\n  index = (int)pbVar3 << 0x1c;\n  if (((index < 0) && (pbVar3 = input_ptr[4], pbVar3 != (byte *)0x0)) ||\n     (index = FUN_080069e4(input_data,input_ptr,index,pbVar3,curr_byte), index == 0)) {\n    return_value = (uint)input_byte;\n    index = (int)*input_ptr - (int)input_ptr[4];\n    if ((index < (int)input_ptr[5]) || (index = FUN_08006be0(input_data,input_ptr), index == 0)) {\n      input_ptr[2] = input_ptr[2] + -1;\n      curr_byte = *input_ptr;\n      *input_ptr = curr_byte + 1;\n      *curr_byte = input_byte;\n      if ((byte *)(index + 1) != input_ptr[5]) {\n        if (-1 < (int)((uint)*(ushort *)(input_ptr + 3) << 0x1f)) {\n          return return_value;\n        }\n        if (return_value != 10) {\n          return return_value;\n        }\n      }\n      index = FUN_08006be0(input_data,input_ptr);\n      if (index == 0) {\n        return return_value;\n      }\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08006344": "process_input_08006344",
                "param_1": "input_data",
                "param_2": "input_byte",
                "param_3": "input_ptr",
                "iVar1": "index",
                "pbVar2": "curr_byte",
                "uVar4": "return_value"
            },
            "calling": [
                "FUN_08006370"
            ],
            "called": [
                "FUN_08006be0",
                "FUN_08006cb4",
                "FUN_080069e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006370": {
            "entrypoint": "0x08006370",
            "current_name": "reverse_and_count_08006370",
            "code": "\nint reverse_and_count_08006370(undefined4 array_size,undefined4 target_value,undefined *array,int array_length)\n\n{\n  int result;\n  undefined *end_of_array;\n  int current_index;\n  \n  end_of_array = array + array_length;\n  current_index = array_length;\n  do {\n    if (array == end_of_array) {\n      return 0;\n    }\n    result = FUN_08006344(array_size,*array,target_value,array_length,current_index);\n    array_length = result + 1;\n    array = array + 1;\n  } while (array_length != 0);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08006370": "reverse_and_count_08006370",
                "param_1": "array_size",
                "param_2": "target_value",
                "param_3": "array",
                "param_4": "array_length",
                "iVar1": "result",
                "puVar2": "end_of_array",
                "iVar3": "current_index"
            },
            "calling": [
                "FUN_08006394"
            ],
            "called": [
                "FUN_08006344"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006394": {
            "entrypoint": "0x08006394",
            "current_name": "parse_format_string_08006394",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08006568) */\n\nint parseFormatString_08006394(int formatStringInfo,undefined4 *specifierType,byte *formatString,int *bytesProcessed)\n\n{\n  int result;\n  int *bytesArg;\n  bool isDigit;\n  byte *currentChar;\n  byte *nextChar;\n  int parseResult;\n  int parseStatus;\n  int *bytesArgArray;\n  uint flags;\n  int width;\n  undefined4 lengthModifier;\n  int precision;\n  int totalBytesProcessed;\n  byte conversionSpecifier;\n  undefined digitFlag;\n  undefined plusFlag;\n  undefined spaceFlag;\n  undefined4 signFlag;\n  \n  bytesArgArray = bytesProcessed;\n  if ((formatStringInfo != 0) && (*(int *)(formatStringInfo + 0x18) == 0)) {\n    FUN_08006cb4();\n  }\n  if (specifierType == &DAT_08007904) {\n    specifierType = *(undefined4 **)(formatStringInfo + 4);\n  }\n  else if (specifierType == (undefined4 *)&DAT_08007924) {\n    specifierType = *(undefined4 **)(formatStringInfo + 8);\n  }\n  else if (specifierType == (undefined4 *)&DAT_080078e4) {\n    specifierType = *(undefined4 **)(formatStringInfo + 0xc);\n  }\n  if (((-1 < (int)((uint)*(ushort *)(specifierType + 3) << 0x1c)) || (specifierType[4] == 0)) &&\n     (parseStatus = FUN_080069e4(formatStringInfo,specifierType), parseStatus != 0)) {\n    return -1;\n  }\n  totalBytesProcessed = 0;\n  digitFlag = 0x20;\n  plusFlag = 0x30;\n  currentChar = formatString;\nLAB_080063d6:\n  nextChar = currentChar;\n  if (*nextChar != 0) goto LAB_0800648c;\n  goto LAB_080063e0;\nLAB_0800648c:\n  currentChar = nextChar + 1;\n  if (*nextChar != 0x25) goto LAB_080063d6;\nLAB_080063e0:\n  parseStatus = (int)nextChar - (int)formatString;\n  if (parseStatus != 0) {\n    result = FUN_08006370(formatStringInfo,specifierType,formatString,parseStatus);\n    if (result == -1) {\nLAB_08006580:\n      if ((int)((uint)*(ushort *)(specifierType + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return totalBytesProcessed;\n    }\n    totalBytesProcessed = totalBytesProcessed + parseStatus;\n  }\n  if (*nextChar == 0) goto LAB_08006580;\n  flags = 0;\n  precision = 0;\n  width = -1;\n  lengthModifier = 0;\n  spaceFlag = 0;\n  signFlag = 0;\n  currentChar = nextChar + 1;\n  while( true ) {\n    parseStatus = FUN_08006e90(\"#-0+ \",*currentChar);\n    formatString = currentChar + 1;\n    if (parseStatus == 0) break;\n    flags = 1 << (parseStatus + 0xf7ff8750U & 0xff) | flags;\n    currentChar = formatString;\n  }\n  if ((int)(flags << 0x1b) < 0) {\n    spaceFlag = 0x20;\n  }\n  if ((int)(flags << 0x1c) < 0) {\n    spaceFlag = 0x2b;\n  }\n  if (*currentChar == 0x2a) {\n    bytesArg = bytesArgArray + 1;\n    parseStatus = *bytesArgArray;\n    bytesArgArray = bytesArg;\n    if (parseStatus < 0) {\n      precision = -parseStatus;\n      flags = flags | 2;\n      goto LAB_080064be;\n    }\n  }\n  else {\n    isDigit = false;\n    parseStatus = precision;\n    formatString = currentChar;\n    while( true ) {\n      if (9 < *formatString - 0x30) break;\n      parseStatus = parseStatus * 10 + (*formatString - 0x30);\n      isDigit = true;\n      formatString = formatString + 1;\n    }\n    if (!isDigit) goto LAB_080064be;\n  }\n  precision = parseStatus;\nLAB_080064be:\n  if (*formatString == 0x2e) {\n    if (formatString[1] == 0x2a) {\n      formatString = formatString + 2;\n      bytesArg = bytesArgArray + 1;\n      width = *bytesArgArray;\n      bytesArgArray = bytesArg;\n      if (width < 0) {\n        width = -1;\n      }\n    }\n    else {\n      isDigit = false;\n      parseStatus = 0;\n      width = 0;\n      while( true ) {\n        formatString = formatString + 1;\n        if (9 < *formatString - 0x30) break;\n        parseStatus = parseStatus * 10 + (*formatString - 0x30);\n        isDigit = true;\n      }\n      if (isDigit) {\n        width = parseStatus;\n      }\n    }\n  }\n  parseStatus = FUN_08006e90(&DAT_080078b6,*formatString,3);\n  if (parseStatus != 0) {\n    formatString = formatString + 1;\n    flags = flags | 0x40 << (parseStatus + 0xf7ff874aU & 0xff);\n  }\n  conversionSpecifier = *formatString;\n  formatString = formatString + 1;\n  parseStatus = FUN_08006e90(\"efgEFG\",conversionSpecifier,6);\n  if (parseStatus == 0) {\n    parseResult = FUN_080066b0(formatStringInfo,&flags,specifierType,0x8006371,&bytesArgArray);\n    if (parseResult == -1) goto LAB_08006580;\n  }\n  else {\n    bytesArgArray = (int *)(((int)bytesArgArray + 7U & 0xfffffff8) + 8);\n  }\n  totalBytesProcessed = totalBytesProcessed + parseResult;\n  currentChar = formatString;\n  goto LAB_080063d6;\n}\n\n",
            "renaming": {
                "FUN_08006394": "parse_format_string_08006394",
                "param_1": "formatStringInfo",
                "param_2": "specifierType",
                "param_3": "formatString",
                "param_4": "bytesProcessed",
                "iVar1": "result",
                "piVar2": "bytesArg",
                "bVar3": "isDigit",
                "pbVar4": "currentChar",
                "pbVar5": "nextChar",
                "unaff_r9": "parseResult",
                "iVar6": "parseStatus",
                "local_8c": "bytesArgArray",
                "local_88": "flags",
                "local_84": "width",
                "local_80": "lengthModifier",
                "local_7c": "precision",
                "local_74": "totalBytesProcessed",
                "local_70": "conversionSpecifier",
                "local_6f": "digitFlag",
                "local_6e": "plusFlag",
                "local_45": "spaceFlag",
                "local_30": "signFlag"
            },
            "calling": [
                "FUN_08006174",
                "FUN_080068f0"
            ],
            "called": [
                "FUN_080066b0",
                "FUN_08006cb4",
                "FUN_08006e90",
                "FUN_080069e4",
                "FUN_08006370"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080065c0": {
            "entrypoint": "0x080065c0",
            "current_name": "process_data_080065c0",
            "code": "\nundefined4\nprocessData_080065c0(undefined4 data,uint *input_array,uint *output_size,undefined4 extra_param,code *callback_function)\n\n{\n  int index;\n  int result;\n  uint max_size;\n  uint offset;\n  bool is_special;\n  \n  max_size = input_array[4];\n  if ((int)input_array[4] < (int)input_array[2]) {\n    max_size = input_array[2];\n  }\n  *output_size = max_size;\n  if (*(char *)((int)input_array + 0x43) != '\\0') {\n    *output_size = max_size + 1;\n  }\n  if ((int)(*input_array << 0x1a) < 0) {\n    *output_size = *output_size + 2;\n  }\n  if ((*input_array & 6) == 0) {\n    for (index = 0; index < (int)(input_array[3] - *output_size); index = index + 1) {\n      result = (*callback_function)(data,extra_param,(int)input_array + 0x19,1);\n      if (result == -1) {\n        return 0xffffffff;\n      }\n    }\n  }\n  max_size = (uint)*(byte *)((int)input_array + 0x43);\n  if (max_size != 0) {\n    max_size = 1;\n  }\n  offset = max_size;\n  if ((int)(*input_array << 0x1a) < 0) {\n    *(undefined *)((int)input_array + max_size + 0x43) = 0x30;\n    offset = max_size + 2;\n    *(undefined *)((int)input_array + max_size + 0x44) = *(undefined *)((int)input_array + 0x45);\n  }\n  index = (*callback_function)(data,extra_param,(int)input_array + 0x43,offset);\n  if (index != -1) {\n    max_size = input_array[3];\n    is_special = (*input_array & 6) != 4;\n    if (is_special) {\n      max_size = 0;\n    }\n    offset = 0;\n    if (!is_special) {\n      max_size = max_size - *output_size;\n    }\n    if (!is_special) {\n      max_size = max_size & ~((int)max_size >> 0x1f);\n    }\n    if ((int)input_array[4] < (int)input_array[2]) {\n      max_size = max_size + (input_array[2] - input_array[4]);\n    }\n    while( true ) {\n      if (max_size == offset) {\n        return 0;\n      }\n      index = (*callback_function)(data,extra_param,(int)input_array + 0x1a,1);\n      if (index == -1) break;\n      offset = offset + 1;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080065c0": "process_data_080065c0",
                "param_1": "data",
                "param_2": "input_array",
                "param_3": "output_size",
                "param_4": "extra_param",
                "param_5": "callback_function",
                "iVar1": "index",
                "iVar2": "result",
                "uVar3": "max_size",
                "uVar4": "offset",
                "bVar5": "is_special"
            },
            "calling": [
                "FUN_080066b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080066b0": {
            "entrypoint": "0x080066b0",
            "current_name": "reverse_and_format_080066b0",
            "code": "\nuint reverseAndFormat_080066b0(undefined4 input,uint *data,undefined4 value,code *function_ptr,uint **ptr_to_ptr_array)\n\n{\n  byte byte_val;\n  int int_val;\n  uint *ptr;\n  int int_val_2;\n  char *char_ptr;\n  uint uint_val;\n  uint **ppuVar7;\n  char **ppcVar8;\n  uint uint_val_2;\n  uint uint_val_3;\n  char *char_ptr_2;\n  char *char_ptr_3;\n  uint local_array [2];\n  \n  byte_val = *(byte *)(data + 6);\n  char_ptr_3 = (char *)((int)data + 0x43);\n  if (byte_val != 0x6e) {\n    if (byte_val < 0x6f) {\n      if (byte_val != 99) {\n        if (byte_val < 100) {\n          if (byte_val == 0) goto LAB_0800686a;\n          if (byte_val != 0x58) goto LAB_080066e0;\n          *(undefined *)((int)data + 0x45) = 0x58;\n          char_ptr = \"0123456789ABCDEF\";\nLAB_080067fa:\n          uint_val = *data;\n          ptr = *ptr_to_ptr_array;\n          *ptr_to_ptr_array = ptr + 1;\n          if (((uint_val & 0x80) == 0) && ((int)(uint_val << 0x19) < 0)) {\n            uint_val_2 = (uint)*(ushort *)ptr;\n          }\n          else {\n            uint_val_2 = *ptr;\n          }\n          if ((int)(uint_val << 0x1f) < 0) {\n            *data = uint_val | 0x20;\n          }\n          if (uint_val_2 == 0) {\n            *data = *data & 0xffffffdf;\n          }\n          uint_val = 0x10;\nLAB_08006790:\n          *(undefined *)((int)data + 0x43) = 0;\n        }\n        else {\n          if ((byte_val != 100) && (byte_val != 0x69)) goto LAB_080066e0;\n          uint_val_2 = *data;\n          ptr = *ptr_to_ptr_array;\n          if ((uint_val_2 & 0x80) == 0) {\n            *ptr_to_ptr_array = ptr + 1;\n            if ((uint_val_2 & 0x40) == 0) goto LAB_08006700;\n            uint_val_2 = (uint)(short)*(ushort *)ptr;\n          }\n          else {\n            *ptr_to_ptr_array = ptr + 1;\nLAB_08006700:\n            uint_val_2 = *ptr;\n          }\n          if ((int)uint_val_2 < 0) {\n            uint_val_2 = -uint_val_2;\n            *(undefined *)((int)data + 0x43) = 0x2d;\n          }\n          char_ptr = \"0123456789ABCDEF\";\n          uint_val = 10;\n        }\n        uint_val_3 = data[1];\n        data[2] = uint_val_3;\n        char_ptr_2 = char_ptr_3;\n        if ((int)uint_val_3 < 0) {\n          if (uint_val_2 != 0) goto LAB_0800682e;\nLAB_080068dc:\n          *(char *)((int)data + 0x42) = *char_ptr;\n          char_ptr_2 = (char *)((int)data + 0x42);\n        }\n        else {\n          *data = *data & 0xfffffffb;\n          if (uint_val_2 == 0) {\n            if (uint_val_3 != 0) goto LAB_080068dc;\n          }\n          else {\nLAB_0800682e:\n            do {\n              uint_val_3 = uint_val_2 / uint_val;\n              char_ptr_2 = char_ptr_2 + -1;\n              *char_ptr_2 = char_ptr[uint_val_2 - uint_val * uint_val_3];\n              uint_val_2 = uint_val_3;\n            } while (uint_val_3 != 0);\n          }\n        }\n        if (((uint_val == 8) && ((int)(*data << 0x1f) < 0)) && ((int)data[1] <= (int)data[4]))\n        {\n          char_ptr_2[-1] = '0';\n          char_ptr_2 = char_ptr_2 + -1;\n        }\n        data[4] = (int)char_ptr_3 - (int)char_ptr_2;\n        char_ptr_3 = char_ptr_2;\n        goto LAB_080067d6;\n      }\n      ptr = *ptr_to_ptr_array;\n      *ptr_to_ptr_array = ptr + 1;\n      *(char *)((int)data + 0x42) = (char)*ptr;\nLAB_08006740:\n      char_ptr_3 = (char *)((int)data + 0x42);\n      uint_val_2 = 1;\n    }\n    else {\n      if (byte_val != 0x73) {\n        if (byte_val < 0x74) {\n          if (byte_val == 0x6f) {\nLAB_08006766:\n            uint_val_2 = *data;\n            ptr = *ptr_to_ptr_array;\n            if ((uint_val_2 & 0x80) == 0) {\n              *ptr_to_ptr_array = ptr + 1;\n              if ((uint_val_2 & 0x40) == 0) goto LAB_08006774;\n              uint_val_2 = (uint)*(ushort *)ptr;\n            }\n            else {\n              *ptr_to_ptr_array = ptr + 1;\nLAB_08006774:\n              uint_val_2 = *ptr;\n            }\n            if (byte_val == 0x6f) {\n              uint_val = 8;\n            }\n            else {\n              uint_val = 10;\n            }\n            char_ptr = \"0123456789ABCDEF\";\n            goto LAB_08006790;\n          }\n          if (byte_val == 0x70) {\n            *data = *data | 0x20;\nLAB_08006726:\n            char_ptr = \"0123456789abcdef\";\n            *(undefined *)((int)data + 0x45) = 0x78;\n            goto LAB_080067fa;\n          }\n        }\n        else {\n          if (byte_val == 0x75) goto LAB_08006766;\n          if (byte_val == 0x78) goto LAB_08006726;\n        }\nLAB_080066e0:\n        *(byte *)((int)data + 0x42) = byte_val;\n        goto LAB_08006740;\n      }\n      ppcVar8 = (char **)*ptr_to_ptr_array;\n      *ptr_to_ptr_array = (uint *)(ppcVar8 + 1);\n      char_ptr_3 = *ppcVar8;\n      int_val = FUN_08006e90(char_ptr_3,0,data[1]);\n      if (int_val != 0) {\n        data[1] = int_val - (int)char_ptr_3;\n      }\n      uint_val_2 = data[1];\n    }\n    data[4] = uint_val_2;\n    *(undefined *)((int)data + 0x43) = 0;\n    goto LAB_080067d6;\n  }\n  uint_val_2 = *data;\n  ppuVar7 = (uint **)*ptr_to_ptr_array;\n  uint_val = data[5];\n  if ((uint_val_2 & 0x80) == 0) {\n    *ptr_to_ptr_array = (uint *)(ppuVar7 + 1);\n    ptr = *ppuVar7;\n    if ((uint_val_2 & 0x40) == 0) goto LAB_08006856;\n    *(short *)ptr = (short)uint_val;\n  }\n  else {\n    *ptr_to_ptr_array = (uint *)(ppuVar7 + 1);\n    ptr = *ppuVar7;\nLAB_08006856:\n    *ptr = uint_val;\n  }\nLAB_0800686a:\n  data[4] = 0;\nLAB_080067d6:\n  int_val = FUN_080065c0(input,data,local_array,value,function_ptr);\n  if ((int_val == -1) || (int_val = (*function_ptr)(input,value,char_ptr_3,data[4]), int_val == -1)) {\nLAB_080067ea:\n    uint_val_2 = 0xffffffff;\n  }\n  else {\n    if ((int)(*data << 0x1e) < 0) {\n      for (int_val = 0; int_val < (int)(data[3] - local_array[0]); int_val = int_val + 1) {\n        int_val_2 = (*function_ptr)(input,value,(int)data + 0x19,1);\n        if (int_val_2 == -1) goto LAB_080067ea;\n      }\n    }\n    uint_val_2 = data[3];\n    if ((int)data[3] < (int)local_array[0]) {\n      uint_val_2 = local_array[0];\n    }\n  }\n  return uint_val_2;\n}\n\n",
            "renaming": {
                "FUN_080066b0": "reverse_and_format_080066b0",
                "param_1": "input",
                "param_2": "data",
                "param_3": "value",
                "param_4": "function_ptr",
                "param_5": "ptr_to_ptr_array",
                "bVar1": "byte_val",
                "iVar2": "int_val",
                "puVar3": "ptr",
                "iVar4": "int_val_2",
                "pcVar5": "char_ptr",
                "uVar6": "uint_val",
                "uVar9": "uint_val_2",
                "uVar10": "uint_val_3",
                "pcVar11": "char_ptr_2",
                "pcVar12": "char_ptr_3",
                "local_24": "local_array"
            },
            "calling": [
                "FUN_08006394"
            ],
            "called": [
                "FUN_080065c0",
                "FUN_08006e90"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080068f0": {
            "entrypoint": "0x080068f0",
            "current_name": "initialize_function_080068f0",
            "code": "\nvoid initializeFunction_080068f0(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  int dataPtr;\n  undefined4 tempVar;\n  undefined4 stackVar1;\n  undefined4 stackVar2;\n  undefined4 stackVar3;\n  \n  dataPtr = DAT_200000f8;\n  tempVar = arg1;\n  stackVar1 = arg2;\n  stackVar2 = arg3;\n  stackVar3 = arg4;\n  if ((DAT_200000f8 != 0) && (*(int *)(DAT_200000f8 + 0x18) == 0)) {\n    FUN_08006cb4(DAT_200000f8);\n  }\n  FUN_08006394(dataPtr,*(undefined4 *)(dataPtr + 8),arg1,&stackVar1,tempVar,&stackVar1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080068f0": "initialize_function_080068f0",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "iVar1": "dataPtr",
                "uVar2": "tempVar",
                "uStack_c": "stackVar1",
                "uStack_8": "stackVar2",
                "uStack_4": "stackVar3"
            },
            "calling": [
                "FUN_08004f4c"
            ],
            "called": [
                "FUN_08006cb4",
                "FUN_08006394"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006920": {
            "entrypoint": "0x08006920",
            "current_name": "update_parameter_if_negative_08006920",
            "code": "\nvoid updateParameterIfNegative_08006920(int *outputValue,undefined4 inputValue)\n\n{\n  int result;\n  \n  DAT_200006a4 = 0;\n  result = FUN_080056d8(inputValue);\n  if ((result == -1) && (DAT_200006a4 != 0)) {\n    *outputValue = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006920": "update_parameter_if_negative_08006920",
                "param_1": "outputValue",
                "param_2": "inputValue",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08006288"
            ],
            "called": [
                "FUN_080056d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080069e4": {
            "entrypoint": "0x080069e4",
            "current_name": "process_data_080069e4",
            "code": "\nuint processData_080069e4(undefined4 *output,undefined4 *input)\n\n{\n  int dataAddress;\n  uint result;\n  ushort value;\n  \n  dataAddress = DAT_200000f8;\n  if ((DAT_200000f8 != 0) && (*(int *)(DAT_200000f8 + 0x18) == 0)) {\n    FUN_08006cb4(DAT_200000f8);\n  }\n  if (input == &DAT_08007904) {\n    input = *(undefined4 **)(dataAddress + 4);\n  }\n  else if (input == (undefined4 *)&DAT_08007924) {\n    input = *(undefined4 **)(dataAddress + 8);\n  }\n  else if (input == (undefined4 *)&DAT_080078e4) {\n    input = *(undefined4 **)(dataAddress + 0xc);\n  }\n  value = *(ushort *)(input + 3);\n  result = (uint)value;\n  if (-1 < (int)(result << 0x1c)) {\n    if (-1 < (int)(result << 0x1b)) {\n      *output = 9;\n      goto LAB_08006a14;\n    }\n    if ((int)(result << 0x1d) < 0) {\n      if ((undefined4 *)input[0xd] != (undefined4 *)0x0) {\n        if ((undefined4 *)input[0xd] != input + 0x11) {\n          FUN_080061f0(output);\n        }\n        input[0xd] = 0;\n      }\n      *(ushort *)(input + 3) = *(ushort *)(input + 3) & 0xffdb;\n      input[1] = 0;\n      *input = input[4];\n    }\n    *(ushort *)(input + 3) = *(ushort *)(input + 3) | 8;\n  }\n  if ((input[4] == 0) && ((*(ushort *)(input + 3) & 0x280) != 0x200)) {\n    FUN_08006e10(output,input);\n  }\n  value = *(ushort *)(input + 3);\n  result = value & 1;\n  if ((value & 1) == 0) {\n    if (-1 < (int)((uint)value << 0x1e)) {\n      result = input[5];\n    }\n    input[2] = result;\n  }\n  else {\n    input[2] = 0;\n    input[6] = -input[5];\n  }\n  if (input[4] == 0) {\n    value = *(ushort *)(input + 3);\n    result = (int)(short)value & 0x80;\n    if (result != 0) {\nLAB_08006a14:\n      *(ushort *)(input + 3) = value | 0x40;\n      return 0xffffffff;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080069e4": "process_data_080069e4",
                "param_1": "output",
                "param_2": "input",
                "iVar1": "dataAddress",
                "uVar2": "result",
                "uVar3": "value"
            },
            "calling": [
                "FUN_08006344",
                "FUN_08006394"
            ],
            "called": [
                "FUN_08006e10",
                "FUN_08006cb4",
                "FUN_080061f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ac0": {
            "entrypoint": "0x08006ac0",
            "current_name": "process_data_08006ac0",
            "code": "\nvoid processData_08006ac0(void)\n\n{\n  uint *paramPtr;\n  int temp;\n  int *dataPtr;\n  int *tempPtr;\n  uint paramValue;\n  ushort flags;\n  int counter;\n  code *callbackFunc;\n  int totalSize;\n  uint backupValue;\n  code *jumpTable;\n  bool condition;\n  undefined8 result;\n  \n  FUN_08006f00(6);\n  jumpTable = (code *)0x8006acf;\n  result = FUN_0800573c(1);\n  dataPtr = (int *)((ulonglong)result >> 0x20);\n  paramPtr = (uint *)result;\n  flags = *(ushort *)(dataPtr + 3);\n  paramValue = (uint)flags;\n  if ((int)(paramValue << 0x1c) < 0) {\n    temp = dataPtr[4];\n    if (temp != 0) {\n      counter = paramValue << 0x1e;\n      condition = counter != 0;\n      if (condition) {\n        counter = 0;\n      }\n      totalSize = *dataPtr;\n      if (!condition) {\n        counter = dataPtr[5];\n      }\n      *dataPtr = temp;\n      dataPtr[2] = counter;\n      for (totalSize = totalSize - temp; 0 < totalSize; totalSize = totalSize - counter) {\n        counter = (*(code *)dataPtr[10])(paramPtr,dataPtr[8],temp,totalSize);\n        if (counter < 1) {\n          flags = *(ushort *)(dataPtr + 3);\n          goto LAB_08006bc6;\n        }\n        temp = temp + counter;\n      }\n    }\n  }\n  else if (((0 < dataPtr[1]) || (0 < dataPtr[0x10])) &&\n          (callbackFunc = (code *)dataPtr[0xb], callbackFunc != (code *)0x0)) {\n    backupValue = *paramPtr;\n    *paramPtr = 0;\n    if ((flags & 0x1000) == 0) {\n      temp = (*callbackFunc)(paramPtr,dataPtr[8],paramValue & 0x1000,1);\n      if ((temp == -1) && (paramValue = *paramPtr, paramValue != 0)) {\n        if ((paramValue != 0x1d) && (paramValue != 0x16)) {\n          *(ushort *)(dataPtr + 3) = *(ushort *)(dataPtr + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006b90. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          (*jumpTable)();\n          return;\n        }\n        *paramPtr = backupValue;\n        goto LAB_08006aea;\n      }\n    }\n    else {\n      temp = dataPtr[0x15];\n    }\n    if (((int)((uint)*(ushort *)(dataPtr + 3) << 0x1d) < 0) &&\n       (temp = temp - dataPtr[1], dataPtr[0xd] != 0)) {\n      temp = temp - dataPtr[0x10];\n    }\n    temp = (*(code *)dataPtr[0xb])(paramPtr,dataPtr[8],temp,0);\n    flags = *(ushort *)(dataPtr + 3);\n    if ((temp == -1) &&\n       ((0x1d < *paramPtr || (-1 < (int)((0x20400001U >> (*paramPtr & 0xff)) << 0x1f))))) {\nLAB_08006bc6:\n      *(ushort *)(dataPtr + 3) = flags | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006bd0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jumpTable)(0xffffffff);\n      return;\n    }\n    dataPtr[1] = 0;\n    *dataPtr = dataPtr[4];\n    if (((int)((uint)flags << 0x13) < 0) && ((temp != -1 || (*paramPtr == 0)))) {\n      dataPtr[0x15] = temp;\n    }\n    tempPtr = (int *)dataPtr[0xd];\n    *paramPtr = backupValue;\n    if (tempPtr != (int *)0x0) {\n      if (tempPtr != dataPtr + 0x11) {\n        FUN_080061f0(paramPtr);\n      }\n      dataPtr[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08006b66. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jumpTable)();\n      return;\n    }\n  }\nLAB_08006aea:\n                    /* WARNING: Could not recover jumptable at 0x08006aec. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006ac0": "process_data_08006ac0",
                "piVar3": "dataPtr",
                "piVar4": "tempPtr",
                "iVar2": "temp",
                "iVar7": "counter",
                "iVar9": "totalSize",
                "puVar1": "paramPtr",
                "uVar5": "paramValue",
                "uVar6": "flags",
                "uVar10": "backupValue",
                "UNRECOVERED_JUMPTABLE_00": "jumpTable",
                "bVar11": "condition",
                "pcVar8": "callbackFunc",
                "uVar12": "result"
            },
            "calling": [
                "FUN_08007090",
                "FUN_0800611c"
            ],
            "called": [
                "FUN_0800573c",
                "FUN_080061f0",
                "FUN_08006f00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006be0": {
            "entrypoint": "0x08006be0",
            "current_name": "handle_data_08006be0",
            "code": "\nundefined4 handleData_08006be0(uint *dataPtr,int *paramPtr)\n\n{\n  undefined4 returnValue;\n  int count;\n  int *tmpPtr;\n  uint tempVar1;\n  ushort tempVar2;\n  int tempVar3;\n  undefined4 registerVar4;\n  undefined4 registerVar5;\n  code *functionPtr;\n  int tempVar4;\n  uint tempVar5;\n  code *jumpTable;\n  bool bVar10;\n  \n  if (paramPtr[4] != 0) {\n    if ((dataPtr != (uint *)0x0) && (dataPtr[6] == 0)) {\n      FUN_08006cb4();\n    }\n    if (paramPtr == &DAT_08007904) {\n      paramPtr = (int *)dataPtr[1];\n    }\n    else if (paramPtr == (int *)&DAT_08007924) {\n      paramPtr = (int *)dataPtr[2];\n    }\n    else if (paramPtr == (int *)&DAT_080078e4) {\n      paramPtr = (int *)dataPtr[3];\n    }\n    if (*(short *)(paramPtr + 3) != 0) {\n      tempVar2 = *(ushort *)(paramPtr + 3);\n      tempVar1 = (uint)tempVar2;\n      if ((int)(tempVar1 << 0x1c) < 0) {\n        count = paramPtr[4];\n        if (count != 0) {\n          tempVar3 = tempVar1 << 0x1e;\n          bVar10 = tempVar3 != 0;\n          if (bVar10) {\n            tempVar3 = 0;\n          }\n          tempVar4 = *paramPtr;\n          if (!bVar10) {\n            tempVar3 = paramPtr[5];\n          }\n          *paramPtr = count;\n          paramPtr[2] = tempVar3;\n          for (tempVar4 = tempVar4 - count; 0 < tempVar4; tempVar4 = tempVar4 - tempVar3) {\n            tempVar3 = (*(code *)paramPtr[10])(dataPtr,paramPtr[8],count,tempVar4,registerVar4,registerVar5);\n            if (tempVar3 < 1) {\n              tempVar2 = *(ushort *)(paramPtr + 3);\n              goto LAB_08006bc6;\n            }\n            count = count + tempVar3;\n          }\n        }\n      }\n      else if (((0 < paramPtr[1]) || (0 < paramPtr[0x10])) &&\n              (functionPtr = (code *)paramPtr[0xb], functionPtr != (code *)0x0)) {\n        tempVar5 = *dataPtr;\n        *dataPtr = 0;\n        if ((tempVar2 & 0x1000) == 0) {\n          count = (*functionPtr)(dataPtr,paramPtr[8],tempVar1 & 0x1000,1);\n          if ((count == -1) && (tempVar1 = *dataPtr, tempVar1 != 0)) {\n            if ((tempVar1 != 0x1d) && (tempVar1 != 0x16)) {\n              *(ushort *)(paramPtr + 3) = *(ushort *)(paramPtr + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006b90. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n              returnValue = (*jumpTable)();\n              return returnValue;\n            }\n            *dataPtr = tempVar5;\n            goto LAB_08006aea;\n          }\n        }\n        else {\n          count = paramPtr[0x15];\n        }\n        if (((int)((uint)*(ushort *)(paramPtr + 3) << 0x1d) < 0) &&\n           (count = count - paramPtr[1], paramPtr[0xd] != 0)) {\n          count = count - paramPtr[0x10];\n        }\n        count = (*(code *)paramPtr[0xb])(dataPtr,paramPtr[8],count,0);\n        tempVar2 = *(ushort *)(paramPtr + 3);\n        if ((count == -1) &&\n           ((0x1d < *dataPtr || (-1 < (int)((0x20400001U >> (*dataPtr & 0xff)) << 0x1f))))) {\nLAB_08006bc6:\n          *(ushort *)(paramPtr + 3) = tempVar2 | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006bd0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          returnValue = (*jumpTable)(0xffffffff);\n          return returnValue;\n        }\n        paramPtr[1] = 0;\n        *paramPtr = paramPtr[4];\n        if (((int)((uint)tempVar2 << 0x13) < 0) && ((count != -1 || (*dataPtr == 0)))) {\n          paramPtr[0x15] = count;\n        }\n        tmpPtr = (int *)paramPtr[0xd];\n        *dataPtr = tempVar5;\n        if (tmpPtr != (int *)0x0) {\n          if (tmpPtr != paramPtr + 0x11) {\n            FUN_080061f0(dataPtr);\n          }\n          paramPtr[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08006b66. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          returnValue = (*jumpTable)();\n          return returnValue;\n        }\n      }\nLAB_08006aea:\n                    /* WARNING: Could not recover jumptable at 0x08006aec. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      returnValue = (*jumpTable)(0);\n      return returnValue;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006be0": "handle_data_08006be0",
                "param_1": "dataPtr",
                "param_2": "paramPtr",
                "uVar1": "returnValue",
                "iVar2": "count",
                "piVar3": "tmpPtr",
                "uVar4": "tempVar1",
                "uVar5": "tempVar2",
                "iVar6": "tempVar3",
                "unaff_r4": "registerVar4",
                "unaff_r5": "registerVar5",
                "pcVar7": "functionPtr",
                "iVar8": "tempVar4",
                "uVar9": "tempVar5",
                "UNRECOVERED_JUMPTABLE_00": "jumpTable"
            },
            "calling": [
                "FUN_08006344"
            ],
            "called": [
                "FUN_08006cb4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c40": {
            "entrypoint": "0x08006c40",
            "current_name": "initialize_data_08006c40",
            "code": "\nvoid initializeData_08006c40(undefined4 *data,undefined2 value1,undefined2 value2)\n\n{\n  *data = 0;\n  data[1] = 0;\n  data[2] = 0;\n  *(undefined2 *)(data + 3) = value1;\n  data[0x19] = 0;\n  *(undefined2 *)((int)data + 0xe) = value2;\n  data[4] = 0;\n  data[5] = 0;\n  data[6] = 0;\n  FUN_080061e0(data + 0x17,0,8);\n  data[8] = data;\n  data[9] = 0x8006f39;\n  data[10] = 0x8006f5b;\n  data[0xb] = 0x8006f93;\n  data[0xc] = &LAB_08006fb6_1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006c40": "initialize_data_08006c40",
                "param_1": "data",
                "param_2": "value1",
                "param_3": "value2"
            },
            "calling": [
                "FUN_08006cb4"
            ],
            "called": [
                "FUN_080061e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c88": {
            "entrypoint": "0x08006c88",
            "current_name": "initialize_data_structure_08006c88",
            "code": "\nundefined4 * initializeDataStructure_08006c88(undefined4 inputData,int numElements)\n\n{\n  undefined4 *newStructure;\n  int offset;\n  \n  offset = (numElements + -1) * 0x68;\n  newStructure = (undefined4 *)FUN_08006288(inputData,offset + 0x74);\n  if (newStructure != (undefined4 *)0x0) {\n    *newStructure = 0;\n    newStructure[1] = numElements;\n    newStructure[2] = newStructure + 3;\n    FUN_080061e0(newStructure + 3,0,offset + 0x68);\n  }\n  return newStructure;\n}\n\n",
            "renaming": {
                "FUN_08006c88": "initialize_data_structure_08006c88",
                "param_1": "inputData",
                "param_2": "numElements",
                "puVar1": "newStructure",
                "iVar2": "offset"
            },
            "calling": [
                "FUN_08006d14"
            ],
            "called": [
                "FUN_08006288",
                "FUN_080061e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006cb4": {
            "entrypoint": "0x08006cb4",
            "current_name": "initialize_data_08006cb4",
            "code": "\nvoid initializeData_08006cb4(undefined4 *dataPointer)\n\n{\n  undefined4 returnValue;\n  undefined4 *alternativePointer;\n  \n  if (dataPointer[6] == 0) {\n    dataPointer[0x12] = 0;\n    dataPointer[0x13] = 0;\n    dataPointer[0x14] = 0;\n    alternativePointer = &DAT_200000fc;\n    dataPointer[10] = &LAB_08006c34_1;\n    if (dataPointer == &DAT_200000fc) {\n      alternativePointer = (undefined4 *)0x1;\n    }\n    if (dataPointer == &DAT_200000fc) {\n      dataPointer[6] = alternativePointer;\n    }\n    returnValue = FUN_08006d14();\n    dataPointer[1] = returnValue;\n    returnValue = FUN_08006d14(dataPointer);\n    dataPointer[2] = returnValue;\n    returnValue = FUN_08006d14(dataPointer);\n    dataPointer[3] = returnValue;\n    FUN_08006c40(dataPointer[1],4,0);\n    FUN_08006c40(dataPointer[2],9,1);\n    FUN_08006c40(dataPointer[3],0x12,2);\n    dataPointer[6] = 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006cb4": "initialize_data_08006cb4",
                "param_1": "dataPointer",
                "uVar1": "returnValue",
                "puVar2": "alternativePointer"
            },
            "calling": [
                "FUN_08006be0",
                "FUN_080069e4",
                "FUN_08006344",
                "FUN_080068f0",
                "FUN_08006394",
                "FUN_08006d14"
            ],
            "called": [
                "FUN_08006c40",
                "FUN_08006d14"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d14": {
            "entrypoint": "0x08006d14",
            "current_name": "initialize_data_08006d14",
            "code": "\nint * initializeData_08006d14(undefined4 *errorCode,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int *currentPointer;\n  int *innerPointer;\n  int **doublePointer;\n  \n  if (DAT_20000114 == 0) {\n    FUN_08006cb4(&DAT_200000fc);\n  }\n  doublePointer = (int **)&DAT_20000144;\n  do {\n    innerPointer = doublePointer[2];\n    currentPointer = doublePointer[1];\n    while (currentPointer = (int *)((int)currentPointer + -1), -1 < (int)currentPointer) {\n      if (*(short *)(innerPointer + 3) == 0) {\n        *(undefined2 *)((int)innerPointer + 0xe) = 0xffff;\n        innerPointer[0x19] = 0;\n        *(undefined2 *)(innerPointer + 3) = 1;\n        *innerPointer = 0;\n        innerPointer[2] = 0;\n        innerPointer[1] = 0;\n        innerPointer[4] = 0;\n        innerPointer[5] = 0;\n        innerPointer[6] = 0;\n        FUN_080061e0(innerPointer + 0x17,0,8,1,param4);\n        innerPointer[0xd] = 0;\n        innerPointer[0xe] = 0;\n        innerPointer[0x12] = 0;\n        innerPointer[0x13] = 0;\n        return innerPointer;\n      }\n      innerPointer = innerPointer + 0x1a;\n    }\n    if (*doublePointer == (int *)0x0) {\n      currentPointer = (int *)FUN_08006c88(errorCode,4);\n      *doublePointer = currentPointer;\n      if (currentPointer == (int *)0x0) {\n        *errorCode = 0xc;\n        return (int *)0x0;\n      }\n    }\n    doublePointer = (int **)*doublePointer;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08006d14": "initialize_data_08006d14",
                "param_1": "errorCode",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "piVar1": "currentPointer",
                "piVar2": "innerPointer",
                "ppiVar3": "doublePointer"
            },
            "calling": [
                "FUN_08006cb4"
            ],
            "called": [
                "FUN_08006cb4",
                "FUN_08006c88",
                "FUN_080061e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006dc8": {
            "entrypoint": "0x08006dc8",
            "current_name": "check_permissions_08006dc8",
            "code": "\nundefined4 checkPermissions_08006dc8(undefined4 context,int inputData,undefined4 *outputData,uint *result)\n\n{\n  int returnValue;\n  undefined4 permission;\n  undefined tempBuffer [4];\n  uint flags;\n  \n  if ((*(short *)(inputData + 0xe) < 0) ||\n     (returnValue = FUN_08007004(context,(int)*(short *)(inputData + 0xe),tempBuffer), returnValue < 0)) {\n    *result = 0;\n    if ((int)((uint)*(ushort *)(inputData + 0xc) << 0x18) < 0) {\n      permission = 0x40;\n      goto LAB_08006e08;\n    }\n  }\n  else {\n    *result = (uint)((flags & 0xf000) == 0x2000);\n  }\n  permission = 0x400;\nLAB_08006e08:\n  *outputData = permission;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006dc8": "check_permissions_08006dc8",
                "param_1": "context",
                "param_2": "inputData",
                "param_3": "outputData",
                "param_4": "result",
                "iVar1": "returnValue",
                "auStack_4c": "tempBuffer",
                "local_48": "flags",
                "uVar2": "permission"
            },
            "calling": [
                "FUN_08006e10"
            ],
            "called": [
                "FUN_08007004"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e10": {
            "entrypoint": "0x08006e10",
            "current_name": "process_function_08006e10",
            "code": "\nvoid processFunction_08006e10(int input_param,int *output_param)\n\n{\n  ushort result;\n  int result2;\n  int temp_var1;\n  int *temp_var2;\n  \n  if (-1 < (int)((uint)*(ushort *)(output_param + 3) << 0x1e)) {\n    temp_var1 = input_param;\n    temp_var2 = output_param;\n    result = FUN_08006dc8(input_param,output_param,&temp_var1,&temp_var2);\n    result2 = FUN_08006288(input_param,temp_var1);\n    if (result2 != 0) {\n      *(undefined **)(input_param + 0x28) = &LAB_08006c34_1;\n      *output_param = result2;\n      *(ushort *)(output_param + 3) = *(ushort *)(output_param + 3) | 0x80;\n      output_param[4] = result2;\n      output_param[5] = temp_var1;\n      if ((temp_var2 != (int *)0x0) &&\n         (result2 = FUN_08007028(input_param,(int)*(short *)((int)output_param + 0xe)), result2 != 0)) {\n        *(ushort *)(output_param + 3) = *(ushort *)(output_param + 3) & 0xfffc | 1;\n      }\n      *(ushort *)(output_param + 3) = result | *(ushort *)(output_param + 3);\n      return;\n    }\n    if ((int)(short)*(ushort *)(output_param + 3) << 0x16 < 0) {\n      return;\n    }\n    *(ushort *)(output_param + 3) = *(ushort *)(output_param + 3) & 0xfffc | 2;\n  }\n  *output_param = (int)output_param + 0x47;\n  output_param[4] = (int)output_param + 0x47;\n  output_param[5] = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006e10": "process_function_08006e10",
                "param_1": "input_param",
                "param_2": "output_param",
                "uVar1": "result",
                "iVar2": "result2",
                "local_18": "temp_var1",
                "local_14": "temp_var2"
            },
            "calling": [
                "FUN_080069e4"
            ],
            "called": [
                "FUN_08007028",
                "FUN_08006288",
                "FUN_08006dc8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e90": {
            "entrypoint": "0x08006e90",
            "current_name": "find_character_08006e90",
            "code": "\nchar * find_character_08006e90(char *string,char character,int length)\n\n{\n  char *current_ptr;\n  char *previous_ptr;\n  \n  current_ptr = string;\n  do {\n    previous_ptr = current_ptr;\n    if (previous_ptr == string + length) {\n      return (char *)0x0;\n    }\n    current_ptr = previous_ptr + 1;\n  } while (*previous_ptr != character);\n  return previous_ptr;\n}\n\n",
            "renaming": {
                "FUN_08006e90": "find_character_08006e90",
                "param_1": "string",
                "param_2": "character",
                "param_3": "length",
                "pcVar1": "current_ptr",
                "pcVar2": "previous_ptr"
            },
            "calling": [
                "FUN_080066b0",
                "FUN_08006394"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006eac": {
            "entrypoint": "0x08006eac",
            "current_name": "FUNC_08006eac",
            "code": "\nvoid FUNC_08006eac(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006eac": "FUNC_08006eac"
            },
            "calling": [
                "FUN_080061f0",
                "FUN_08006288"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08006eae": {
            "entrypoint": "0x08006eae",
            "current_name": "FUNC_08006eae",
            "code": "\nvoid FUNC_08006eae(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006eae": "FUNC_08006eae"
            },
            "calling": [
                "FUN_08006288",
                "FUN_080061f0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08006f00": {
            "entrypoint": "0x08006f00",
            "current_name": "process_function_08006f00",
            "code": "\nint processFunction_08006f00(uint input)\n\n{\n  int *dataPointer;\n  undefined4 result;\n  int previousValue;\n  code *functionPointer;\n  undefined4 unaff_r4;\n  undefined4 unaff_r5;\n  undefined4 in_lr;\n  undefined4 *dataPointerPointer;\n  \n  dataPointer = DAT_200000f8;\n  dataPointerPointer = &DAT_200000f8;\n  if (0x1f < input) {\n    *DAT_200000f8 = 0x16;\n    return -1;\n  }\n  previousValue = DAT_200000f8[0x11];\n  if ((previousValue != 0) && (functionPointer = *(code **)(previousValue + input * 4), functionPointer != (code *)0x0)) {\n    if (functionPointer != (code *)0x1) {\n      if (functionPointer == (code *)0xffffffff) {\n        *DAT_200000f8 = 0x16;\n        return 1;\n      }\n      *(undefined4 *)(previousValue + input * 4) = 0;\n      (*functionPointer)(input);\n    }\n    return 0;\n  }\n  result = thunk_FUN_08005750(DAT_200000f8);\n  DAT_200006a4 = 0;\n  previousValue = FUN_08005740(result,input,input,0,dataPointerPointer,unaff_r4,unaff_r5,in_lr);\n  if ((previousValue == -1) && (DAT_200006a4 != 0)) {\n    *dataPointer = DAT_200006a4;\n  }\n  return previousValue;\n}\n\n",
            "renaming": {
                "FUN_08006f00": "process_function_08006f00",
                "param_1": "input",
                "piVar1": "dataPointer",
                "uVar2": "result",
                "iVar3": "previousValue",
                "pcVar4": "functionPointer",
                "puVar5": "dataPointerPointer"
            },
            "calling": [
                "FUN_08006ac0"
            ],
            "called": [
                "FUN_08005740",
                "thunk_FUN_08005750"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_08005750": {
            "entrypoint": "0x08006f34",
            "current_name": "get_return_value_thunk_08005750",
            "code": "\nundefined4 getReturnValue_thunk_08005750(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "thunk_FUN_08005750": "get_return_value_thunk_08005750"
            },
            "calling": [
                "FUN_08006f00"
            ],
            "called": [
                "FUN_08005750"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006f38": {
            "entrypoint": "0x08006f38",
            "current_name": "update_values_08006f38",
            "code": "\nvoid updateValues_08006f38(undefined4 param1,int param2)\n\n{\n  int result;\n  uint updatedValue;\n  bool isPositive;\n  \n  result = FUN_0800706c(param1,(int)*(short *)(param2 + 0xe));\n  isPositive = -1 < result;\n  if (isPositive) {\n    updatedValue = *(int *)(param2 + 0x54) + result;\n  }\n  else {\n    updatedValue = *(ushort *)(param2 + 0xc) & 0xffffefff;\n  }\n  if (isPositive) {\n    *(uint *)(param2 + 0x54) = updatedValue;\n  }\n  if (!isPositive) {\n    *(short *)(param2 + 0xc) = (short)updatedValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006f38": "update_values_08006f38",
                "param_1": "param1",
                "param_2": "param2",
                "iVar1": "result",
                "uVar2": "updatedValue",
                "bVar3": "isPositive"
            },
            "calling": [],
            "called": [
                "FUN_0800706c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006f5a": {
            "entrypoint": "0x08006f5a",
            "current_name": "process_data_08006f5a",
            "code": "\nvoid processData_08006f5a(int *output,int input,undefined4 arg1,undefined4 arg2)\n\n{\n  int result;\n  undefined4 var1;\n  undefined4 var2;\n  undefined4 var3;\n  \n  if ((int)((uint)*(ushort *)(input + 0xc) << 0x17) < 0) {\n    FUN_08007048(output,(int)*(short *)(input + 0xe),0,2);\n  }\n  *(ushort *)(input + 0xc) = *(ushort *)(input + 0xc) & 0xefff;\n  DAT_200006a4 = 0;\n  result = FUN_08005730((int)*(short *)(input + 0xe),arg1,arg2,arg2,arg2,var1,\n                       var2,var3);\n  if ((result == -1) && (DAT_200006a4 != 0)) {\n    *output = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006f5a": "process_data_08006f5a",
                "param_1": "output",
                "param_2": "input",
                "param_3": "arg1",
                "param_4": "arg2",
                "unaff_r4": "var1",
                "unaff_r5": "var2",
                "in_lr": "var3",
                "iVar1": "result"
            },
            "calling": [],
            "called": [
                "FUN_08007048",
                "FUN_08005730"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006f92": {
            "entrypoint": "0x08006f92",
            "current_name": "update_function_08006f92",
            "code": "\nvoid updateFunction_08006f92(undefined4 inputData,int dataPointer)\n\n{\n  int result;\n  ushort updatedValue;\n  bool isError;\n  \n  result = FUN_08007048(inputData,(int)*(short *)(dataPointer + 0xe));\n  isError = result == -1;\n  if (isError) {\n    updatedValue = *(ushort *)(dataPointer + 0xc) & 0xefff;\n  }\n  else {\n    *(int *)(dataPointer + 0x54) = result;\n    updatedValue = *(ushort *)(dataPointer + 0xc) | 0x1000;\n  }\n  if (isError) {\n    *(ushort *)(dataPointer + 0xc) = updatedValue;\n  }\n  if (!isError) {\n    *(ushort *)(dataPointer + 0xc) = updatedValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006f92": "update_function_08006f92",
                "param_1": "inputData",
                "param_2": "dataPointer",
                "iVar1": "result",
                "uVar2": "updatedValue",
                "bVar3": "isError"
            },
            "calling": [],
            "called": [
                "FUN_08007048"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007004": {
            "entrypoint": "0x08007004",
            "current_name": "process_binary_08007004",
            "code": "\nvoid processBinary_08007004(int *output,undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  int result;\n  \n  DAT_200006a4 = 0;\n  result = FUN_0800571a(input1,input2,input2,0,input3);\n  if ((result == -1) && (DAT_200006a4 != 0)) {\n    *output = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007004": "process_binary_08007004",
                "param_1": "output",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "input3",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08006dc8"
            ],
            "called": [
                "FUN_0800571a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007028": {
            "entrypoint": "0x08007028",
            "current_name": "check_and_update_value_08007028",
            "code": "\nvoid checkAndUpdateValue_08007028(int *outputPointer,undefined4 inputValue)\n\n{\n  int result;\n  \n  DAT_200006a4 = 0;\n  result = FUN_08005724(inputValue);\n  if ((result == -1) && (DAT_200006a4 != 0)) {\n    *outputPointer = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007028": "check_and_update_value_08007028",
                "param_1": "outputPointer",
                "param_2": "inputValue",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08006e10"
            ],
            "called": [
                "FUN_08005724"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007048": {
            "entrypoint": "0x08007048",
            "current_name": "update_param_if_error_occurred_08007048",
            "code": "\nvoid updateParamIfErrorOccurred_08007048(int *result,undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  int returnValue;\n  \n  DAT_200006a4 = 0;\n  returnValue = FUN_08005728(arg1,arg2,arg3,arg3,arg3);\n  if ((returnValue == -1) && (DAT_200006a4 != 0)) {\n    *result = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007048": "update_param_if_error_occurred_08007048",
                "param_1": "result",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08006f5a",
                "FUN_08006f92"
            ],
            "called": [
                "FUN_08005728"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800706c": {
            "entrypoint": "0x0800706c",
            "current_name": "update_parameter_if_error_0800706c",
            "code": "\nvoid updateParameterIfError_0800706c(int *result,undefined4 input_1,undefined4 input_2,undefined4 input_3)\n\n{\n  int returnValue;\n  \n  DAT_200006a4 = 0;\n  returnValue = FUN_0800572c(input_1,input_2,input_3,input_3,input_3);\n  if ((returnValue == -1) && (DAT_200006a4 != 0)) {\n    *result = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800706c": "update_parameter_if_error_0800706c",
                "param_1": "result",
                "param_2": "input_1",
                "param_3": "input_2",
                "param_4": "input_3",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08006f38"
            ],
            "called": [
                "FUN_0800572c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007090": {
            "entrypoint": "0x08007090",
            "current_name": "initialize_data_08007090",
            "code": "\nvoid initializeData_08007090(void)\n\n{\n  code *jumpTable;\n  \n  jumpTable = initializeData_08007090;\n  FUN_08006ac0();\n  if (-1 < DAT_2000062c << 0x1f) {\n    DAT_2000062c = 1;\n  }\n  if (-1 < DAT_20000628 << 0x1f) {\n    DAT_20000628 = 1;\n  }\n  if (-1 < DAT_20000624 << 0x1f) {\n    DAT_20000624 = 1;\n  }\n  if (-1 < DAT_20000620 << 0x1f) {\n    DAT_20000620 = 1;\n  }\n  if (-1 < DAT_2000061c << 0x1f) {\n    DAT_2000061c = 1;\n  }\n  if (-1 < DAT_20000618 << 0x1f) {\n    DAT_20000618 = 1;\n  }\n  if (-1 < DAT_20000614 << 0x1f) {\n    DAT_20000614 = 1;\n  }\n  if (-1 < DAT_20000610 << 0x1f) {\n    DAT_20000610 = 1;\n  }\n  if (-1 < DAT_2000060c << 0x1f) {\n    DAT_2000060c = 1;\n  }\n  if (-1 < DAT_20000608 << 0x1f) {\n    DAT_20000608 = 1;\n  }\n  if (-1 < DAT_20000604 << 0x1f) {\n    DAT_20000604 = 1;\n  }\n  if (-1 < DAT_20000600 << 0x1f) {\n    DAT_20000600 = 1;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08007128. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007090": "initialize_data_08007090",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_080060d4"
            ],
            "called": [
                "FUN_08006ac0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007328": {
            "entrypoint": "0x08007328",
            "current_name": "FUNC_08007328",
            "code": "\nvoid FUNC_08007328(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007328": "FUNC_08007328"
            },
            "calling": [
                "FUN_08006198",
                "FUN_0800010c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08007334": {
            "entrypoint": "0x08007334",
            "current_name": "FUNC_08007334",
            "code": "\nvoid FUNC_08007334(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007334": "FUNC_08007334"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        }
    },
    "used_tokens": 173286,
    "layers": [
        [
            "FUN_0800010c",
            "FUN_08000178",
            "FUN_08000190",
            "FUN_08000194",
            "FUN_0800040c",
            "FUN_0800042c",
            "FUN_080004f8",
            "FUN_080006d4",
            "FUN_0800074c",
            "FUN_080008ba",
            "FUN_0800092c",
            "FUN_080009a8",
            "FUN_080009b8",
            "FUN_080009c8",
            "FUN_080009dc",
            "FUN_080009f0",
            "FUN_08000a04",
            "FUN_08000a18",
            "FUN_08000a2c",
            "FUN_08000a58",
            "FUN_08000aa8",
            "FUN_08000ae8",
            "FUN_08000aec",
            "FUN_08000b08",
            "FUN_08000bcc",
            "FUN_08000cd0",
            "FUN_08001294",
            "FUN_080012a2",
            "FUN_080012c0",
            "FUN_080012e8",
            "FUN_08001310",
            "FUN_0800134e",
            "FUN_0800135a",
            "FUN_08001366",
            "FUN_0800138e",
            "FUN_080013a4",
            "FUN_080014ba",
            "FUN_08001510",
            "FUN_08001550",
            "FUN_0800157c",
            "FUN_080015b2",
            "FUN_080015f8",
            "FUN_080016b4",
            "FUN_08001814",
            "FUN_080018f8",
            "FUN_08001918",
            "FUN_08001960",
            "FUN_080019f6",
            "FUN_08001a44",
            "FUN_08001a66",
            "FUN_08001ab0",
            "FUN_08001b18",
            "FUN_08001b48",
            "FUN_08001c32",
            "FUN_08001c3c",
            "FUN_08001c88",
            "FUN_08001cac",
            "FUN_08001cc4",
            "FUN_08001cd0",
            "FUN_08001e40",
            "FUN_08001e48",
            "FUN_08001f80",
            "FUN_08001f84",
            "FUN_08002004",
            "FUN_080020f0",
            "FUN_0800213c",
            "FUN_0800224c",
            "FUN_08002348",
            "FUN_08002384",
            "FUN_08002470",
            "FUN_08002494",
            "FUN_080024f8",
            "FUN_08002514",
            "FUN_08002540",
            "FUN_08002560",
            "FUN_08002582",
            "FUN_0800258c",
            "FUN_08002624",
            "FUN_08002810",
            "FUN_0800281e",
            "FUN_0800282c",
            "FUN_08002848",
            "FUN_080028d2",
            "FUN_080028de",
            "FUN_08002ab8",
            "FUN_08002ad8",
            "FUN_08002af8",
            "FUN_08002b84",
            "FUN_08002c10",
            "FUN_08002c54",
            "FUN_08002ca6",
            "FUN_08002cf2",
            "FUN_08002d1c",
            "FUN_08002db2",
            "FUN_08002efc",
            "FUN_08002f9c",
            "FUN_0800306c",
            "FUN_0800316c",
            "FUN_080032b4",
            "FUN_080033b8",
            "FUN_08003520",
            "FUN_0800365c",
            "FUN_08003688",
            "FUN_08003a68",
            "FUN_08003ad4",
            "FUN_08003afa",
            "FUN_08003c44",
            "FUN_08003c50",
            "FUN_08003c70",
            "FUN_08003c90",
            "FUN_08003da4",
            "FUN_08003ea0",
            "FUN_08003ed8",
            "FUN_08003f18",
            "FUN_08004092",
            "FUN_080040b0",
            "FUN_08004110",
            "FUN_0800412c",
            "FUN_0800417c",
            "FUN_08004198",
            "FUN_08004204",
            "FUN_080043b4",
            "FUN_0800441a",
            "FUN_08004478",
            "FUN_0800455a",
            "FUN_080045a2",
            "FUN_080045fe",
            "FUN_08004618",
            "FUN_080046b8",
            "FUN_080047e8",
            "FUN_080047f4",
            "FUN_0800480a",
            "FUN_08004828",
            "FUN_08004848",
            "FUN_08004884",
            "FUN_0800492c",
            "FUN_08004948",
            "FUN_08004974",
            "FUN_080049f0",
            "FUN_08004a4c",
            "FUN_08004b34",
            "FUN_08004b3c",
            "FUN_08004b94",
            "FUN_08004b9e",
            "FUN_08004bb0",
            "FUN_08004c30",
            "FUN_08004c48",
            "FUN_08004c52",
            "FUN_08004c5e",
            "FUN_08004c78",
            "FUN_08004c8a",
            "FUN_08004ca2",
            "FUN_08004cb2",
            "FUN_08004cce",
            "FUN_08004ce2",
            "FUN_08004d06",
            "FUN_08004d18",
            "FUN_08004d40",
            "FUN_08004d44",
            "FUN_08004d90",
            "FUN_08004df4",
            "FUN_08004df8",
            "FUN_08004e12",
            "FUN_08004e20",
            "FUN_08004e70",
            "FUN_08004e74",
            "FUN_08004ec4",
            "FUN_08004ef4",
            "FUN_08004f4c",
            "FUN_08005384",
            "FUN_080053d4",
            "FUN_0800548c",
            "FUN_080054b0",
            "FUN_080054d4",
            "FUN_08005510",
            "FUN_08005568",
            "FUN_080055bc",
            "FUN_080055e0",
            "FUN_08005604",
            "FUN_080056d8",
            "FUN_08005714",
            "FUN_0800571a",
            "FUN_08005724",
            "FUN_08005728",
            "FUN_0800572c",
            "FUN_08005730",
            "FUN_0800573c",
            "FUN_08005740",
            "FUN_08005750",
            "FUN_08005754",
            "FUN_080057b4",
            "FUN_08005848",
            "FUN_08005890",
            "FUN_080058e0",
            "FUN_0800591e",
            "FUN_0800598a",
            "FUN_08005a44",
            "FUN_08005a68",
            "FUN_08005b24",
            "FUN_08005b3c",
            "FUN_08005b54",
            "FUN_08005bb0",
            "FUN_08005c1c",
            "FUN_08005c38",
            "FUN_08005c96",
            "FUN_08005cb6",
            "FUN_08005cc0",
            "FUN_08005cd4",
            "FUN_08005ce8",
            "FUN_08005d42",
            "FUN_08005d82",
            "FUN_08005d8a",
            "FUN_08005da8",
            "FUN_08005f2c",
            "FUN_08005f40",
            "FUN_08005f5e",
            "FUN_08005f6c",
            "FUN_08005f8c",
            "FUN_08005fc8",
            "FUN_080060d4",
            "FUN_080060e4",
            "FUN_08006112",
            "FUN_0800611c",
            "FUN_08006158",
            "FUN_08006174",
            "FUN_08006198",
            "FUN_080061e0",
            "FUN_080061f0",
            "FUN_08006288",
            "FUN_08006344",
            "FUN_08006370",
            "FUN_08006394",
            "FUN_080065c0",
            "FUN_080066b0",
            "FUN_080068f0",
            "FUN_08006920",
            "FUN_080069e4",
            "FUN_08006ac0",
            "FUN_08006be0",
            "FUN_08006c40",
            "FUN_08006c88",
            "FUN_08006cb4",
            "FUN_08006d14",
            "FUN_08006dc8",
            "FUN_08006e10",
            "FUN_08006e90",
            "FUN_08006f00",
            "thunk_FUN_08005750",
            "FUN_08006f38",
            "FUN_08006f5a",
            "FUN_08006f92",
            "FUN_08007004",
            "FUN_08007028",
            "FUN_08007048",
            "FUN_0800706c",
            "FUN_08007090"
        ]
    ],
    "locked_functions": []
}