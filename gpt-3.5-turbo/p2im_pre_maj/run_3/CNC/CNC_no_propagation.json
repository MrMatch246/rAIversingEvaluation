{
    "functions": {
        "FUN_08000188": {
            "entrypoint": "0x08000188",
            "current_name": "initialize_flag_and_return_08000188",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08000194) */\n\nundefined4 initializeFlagAndReturn_08000188(undefined4 input)\n\n{\n  if ((char)DAT_2000044c == '\\0') {\n    DAT_2000044c._0_1_ = '\\x01';\n  }\n  return input;\n}\n\n",
            "renaming": {
                "FUN_08000188": "initialize_flag_and_return_08000188",
                "param_1": "input"
            },
            "calling": [],
            "called": [
                "FUN_0800b5b0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080001ac": {
            "entrypoint": "0x080001ac",
            "current_name": "concatenate_param_values_080001ac",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x080001b2) */\n\nundefined8 concatenate_param_values_080001ac(undefined4 first_param,undefined4 second_param)\n\n{\n  return CONCAT44(second_param,first_param);\n}\n\n",
            "renaming": {
                "FUN_080001ac": "concatenate_param_values_080001ac",
                "param_1": "first_param",
                "param_2": "second_param"
            },
            "calling": [
                "FUN_0800b3e8"
            ],
            "called": [
                "FUN_0800b5b0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080001c8": {
            "entrypoint": "0x080001c8",
            "current_name": "FUNC_080001c8",
            "code": "\nvoid FUNC_080001c8(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001c8": "FUNC_080001c8"
            },
            "calling": [
                "FUN_08000220"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080001d4": {
            "entrypoint": "0x080001d4",
            "current_name": "FUNC_080001d4",
            "code": "\nvoid FUNC_080001d4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001d4": "FUNC_080001d4"
            },
            "calling": [
                "FUN_08000210"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080001e0": {
            "entrypoint": "0x080001e0",
            "current_name": "FUNC_080001e0",
            "code": "\nvoid FUNC_080001e0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001e0": "FUNC_080001e0"
            },
            "calling": [
                "FUN_08000220"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080001ec": {
            "entrypoint": "0x080001ec",
            "current_name": "FUNC_080001ec",
            "code": "\nvoid FUNC_080001ec(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001ec": "FUNC_080001ec"
            },
            "calling": [
                "FUN_08000210"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080001f8": {
            "entrypoint": "0x080001f8",
            "current_name": "initialize_data_080001f8",
            "code": "\nvoid initializeData_080001f8(void)\n\n{\n  DAT_20000468 = 0;\n  FUN_08000210();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001f8": "initialize_data_080001f8"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08000210"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000210": {
            "entrypoint": "0x08000210",
            "current_name": "execute_startup_tasks_08000210",
            "code": "\nvoid execute_startup_tasks_08000210(void)\n\n{\n  FUNC_080001ec();\n  FUNC_080001d4();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000210": "execute_startup_tasks_08000210"
            },
            "calling": [
                "FUN_08000220",
                "FUN_080025e8",
                "FUN_080001f8"
            ],
            "called": [
                "FUN_080001d4",
                "FUN_080001ec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000220": {
            "entrypoint": "0x08000220",
            "current_name": "update_param_08000220",
            "code": "\nvoid updateParam_08000220(char newParam)\n\n{\n  if (newParam != DAT_20000468) {\n    FUN_08002fd4();\n    if (newParam == '\\x01') {\n      FUNC_080001c8();\n      DAT_20000468 = newParam;\n    }\n    else if (newParam == '\\x02') {\n      FUNC_080001e0();\n      DAT_20000468 = newParam;\n    }\n    else {\n      FUN_08000210();\n      DAT_20000468 = newParam;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000220": "update_param_08000220",
                "param_1": "newParam"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_080001e0",
                "FUN_08000210",
                "FUN_080001c8",
                "FUN_08002fd4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000268": {
            "entrypoint": "0x08000268",
            "current_name": "calculate_adjusted_value_08000268",
            "code": "\n\n\nint calculateAdjustedValue_08000268(void)\n\n{\n  int result;\n  \n  result = FUN_08005a84();\n  return (result + 1) * 1000 - _DAT_e000e018 / 0xa8;\n}\n\n",
            "renaming": {
                "FUN_08000268": "calculate_adjusted_value_08000268",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080002b6"
            ],
            "called": [
                "FUN_08005a84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080002a0": {
            "entrypoint": "0x080002a0",
            "current_name": "execute_initial_process_080002a0",
            "code": "\nvoid executeInitialProcess_080002a0(undefined4 inputParameter)\n\n{\n  FUN_08005a98(inputParameter);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080002a0": "execute_initial_process_080002a0",
                "param_1": "inputParameter"
            },
            "calling": [
                "FUN_08002408"
            ],
            "called": [
                "FUN_08005a98"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080002b6": {
            "entrypoint": "0x080002b6",
            "current_name": "check_if_param_matches_result_080002b6",
            "code": "\nvoid checkIfParamMatchesResult_080002b6(uint inputParam)\n\n{\n  uint shiftedResult1;\n  uint shiftedResult2;\n  bool comparisonResult;\n  longlong result;\n  undefined8 newResult;\n  \n  result = FUN_08000268();\n  shiftedResult2 = (uint)(result + (ulonglong)inputParam >> 0x20);\n  do {\n    newResult = FUN_08000268();\n    shiftedResult1 = (uint)((ulonglong)newResult >> 0x20);\n    comparisonResult = shiftedResult2 <= shiftedResult1;\n    if (shiftedResult1 == shiftedResult2) {\n      comparisonResult = (uint)(result + (ulonglong)inputParam) <= (uint)newResult;\n    }\n  } while (!comparisonResult);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080002b6": "check_if_param_matches_result_080002b6",
                "param_1": "inputParam",
                "uVar1": "shiftedResult1",
                "uVar2": "shiftedResult2",
                "bVar3": "comparisonResult",
                "lVar4": "result",
                "uVar5": "newResult"
            },
            "calling": [],
            "called": [
                "FUN_08000268"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080002f0": {
            "entrypoint": "0x080002f0",
            "current_name": "initialize_data_080002f0",
            "code": "\nvoid initializeData_080002f0(void)\n\n{\n  FUN_0800b430(&DAT_20000470,0xff,4);\n  DAT_2000046c = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080002f0": "initialize_data_080002f0"
            },
            "calling": [
                "FUN_08000374",
                "FUN_08000340",
                "FUN_080003ec",
                "FUN_08000310"
            ],
            "called": [
                "FUN_0800b430"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000310": {
            "entrypoint": "0x08000310",
            "current_name": "get_entry_from_data_08000310",
            "code": "\nundefined getEntryFromData_08000310(uint entryIndex)\n\n{\n  if (DAT_2000046c == 0) {\n    FUN_080002f0();\n  }\n  return (&DAT_20000470)[entryIndex & 0x3ff];\n}\n\n",
            "renaming": {
                "FUN_08000310": "get_entry_from_data_08000310",
                "param_1": "entryIndex"
            },
            "calling": [
                "FUN_08004dd2",
                "FUN_080003ec"
            ],
            "called": [
                "FUN_080002f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000340": {
            "entrypoint": "0x08000340",
            "current_name": "set_memory_value_08000340",
            "code": "\nvoid setMemoryValue_08000340(uint index,undefined value)\n\n{\n  if (DAT_2000046c == 0) {\n    FUN_080002f0();\n  }\n  (&DAT_20000470)[index & 0x3ff] = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000340": "set_memory_value_08000340",
                "param_1": "index",
                "param_2": "value"
            },
            "calling": [
                "FUN_08000374",
                "FUN_08004c2a"
            ],
            "called": [
                "FUN_080002f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000374": {
            "entrypoint": "0x08000374",
            "current_name": "process_data_08000374",
            "code": "\nvoid processData_08000374(int startIndex,char *inputString,int stringLength)\n\n{\n  int length;\n  char *currentChar;\n  int currentIndex;\n  char sum;\n  \n  sum = '\\0';\n  length = stringLength;\n  currentChar = inputString;\n  currentIndex = startIndex;\n  if (DAT_2000046c == 0) {\n    FUN_080002f0();\n    currentChar = inputString;\n    currentIndex = startIndex;\n  }\n  for (; length != 0; length = length + -1) {\n    sum = (sum != '\\0') + *currentChar;\n    FUN_08000340(currentIndex,*currentChar);\n    currentChar = currentChar + 1;\n    currentIndex = currentIndex + 1;\n  }\n  FUN_08000340(currentIndex,sum);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000374": "process_data_08000374",
                "param_1": "startIndex",
                "param_2": "inputString",
                "param_3": "stringLength",
                "local_1c": "length",
                "local_18": "currentChar",
                "local_14": "currentIndex",
                "local_9": "sum"
            },
            "calling": [
                "FUN_08004bc0",
                "FUN_08004c2a",
                "FUN_08004bf4"
            ],
            "called": [
                "FUN_08000340",
                "FUN_080002f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080003ec": {
            "entrypoint": "0x080003ec",
            "current_name": "check_equality_080003ec",
            "code": "\nbool checkEquality_080003ec(char *inputString,int startIndex,int length)\n\n{\n  char currentChar;\n  uint nextChar;\n  int remainingLength;\n  int currentIndex;\n  char *currentPointer;\n  byte count;\n  \n  count = 0;\n  remainingLength = length;\n  currentIndex = startIndex;\n  currentPointer = inputString;\n  if (DAT_2000046c == 0) {\n    FUN_080002f0();\n    currentIndex = startIndex;\n    currentPointer = inputString;\n  }\n  for (; remainingLength != 0; remainingLength = remainingLength + -1) {\n    currentChar = FUN_08000310(currentIndex);\n    count = currentChar + (count != 0);\n    *currentPointer = currentChar;\n    currentIndex = currentIndex + 1;\n    currentPointer = currentPointer + 1;\n  }\n  nextChar = FUN_08000310(currentIndex);\n  return count == nextChar;\n}\n\n",
            "renaming": {
                "FUN_080003ec": "check_equality_080003ec",
                "param_1": "inputString",
                "param_2": "startIndex",
                "param_3": "length",
                "cVar1": "currentChar",
                "uVar2": "nextChar",
                "local_1c": "remainingLength",
                "local_18": "currentIndex",
                "local_14": "currentPointer",
                "local_9": "count"
            },
            "calling": [
                "FUN_08004d7c",
                "FUN_08004dd2",
                "FUN_08004d2c"
            ],
            "called": [
                "FUN_08000310",
                "FUN_080002f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000478": {
            "entrypoint": "0x08000478",
            "current_name": "initialize_params_08000478",
            "code": "\nvoid initialize_params_08000478(undefined input_param1,undefined input_param2,undefined input_param3)\n\n{\n  DAT_20000e89 = input_param1;\n  DAT_20000e8a = input_param2;\n  DAT_20000e8b = input_param3;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000478": "initialize_params_08000478",
                "param_1": "input_param1",
                "param_2": "input_param2",
                "param_3": "input_param3"
            },
            "calling": [
                "FUN_080004ac",
                "FUN_080005b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080004ac": {
            "entrypoint": "0x080004ac",
            "current_name": "initialize_data_080004ac",
            "code": "\nvoid initializeData_080004ac(void)\n\n{\n  int result;\n  \n  FUN_0800b430(&DAT_20000e70,0,0x38);\n  DAT_20000e78 = DAT_20000ecc;\n  FUN_08000478(0,1,2);\n  DAT_20000e74 = 1;\n  result = FUN_08004d7c(DAT_20000e8c,&DAT_20000e90);\n  if (result == 0) {\n    FUN_08004030(10);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080004ac": "initialize_data_080004ac",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_0800b430",
                "FUN_08000478",
                "FUN_08004d7c",
                "FUN_08004030"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080004fc": {
            "entrypoint": "0x080004fc",
            "current_name": "initialize_data_080004fc",
            "code": "\nvoid initializeData_080004fc(undefined4 input_1,undefined4 input_2,undefined4 input_3)\n\n{\n  undefined4 result_1;\n  \n  result_1 = FUNC_08008e44(input_1);\n  DAT_20000e7c = FUN_08009054(result_1,DAT_20000ebc);\n  result_1 = FUNC_08008e44(input_2);\n  DAT_20000e80 = FUN_08009054(result_1,DAT_20000ec0);\n  result_1 = FUNC_08008e44(input_3);\n  DAT_20000e84 = FUN_08009054(result_1,DAT_20000ec4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080004fc": "initialize_data_080004fc",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "uVar1": "result_1"
            },
            "calling": [
                "FUN_0800283a"
            ],
            "called": [
                "FUN_08009054",
                "FUN_08008e44"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800056c": {
            "entrypoint": "0x0800056c",
            "current_name": "process_data_0800056c",
            "code": "\nundefined4 processData_0800056c(undefined4 inputData)\n\n{\n  undefined8 result;\n  \n  if (DAT_20000e73 != '\\0') {\n    result = FUN_08008590(inputData);\n    result = FUN_08008640((int)result,(int)((ulonglong)result >> 0x20),0x66666666,0x40396666);\n    inputData = FUN_08008c30((int)result,(int)((ulonglong)result >> 0x20));\n  }\n  return inputData;\n}\n\n",
            "renaming": {
                "FUN_0800056c": "process_data_0800056c",
                "param_1": "inputData",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08008640",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080005b4": {
            "entrypoint": "0x080005b4",
            "current_name": "parse_input_080005b4",
            "code": "\nchar parseInput_080005b4(undefined4 input)\n\n{\n  int result;\n  undefined4 tempVar;\n  char returnValue;\n  uint index;\n  undefined4 tempVar2;\n  undefined8 tempVar3;\n  undefined8 tempVar4;\n  undefined8 tempVar5;\n  undefined4 varArray [4];\n  undefined4 tempVar6;\n  undefined4 tempVar7;\n  undefined4 tempVar8;\n  undefined4 stackVar1;\n  undefined4 stackVar2;\n  undefined4 tempArray [6];\n  undefined4 tempVar9;\n  byte byteVar1;\n  undefined flag;\n  undefined4 tempVar10;\n  undefined4 tempVar11;\n  undefined boolVar1;\n  uint offset;\n  byte byteVar2;\n  byte byteVar3;\n  byte byteVar4;\n  byte byteVar5;\n  char charVar1;\n  uint param;\n  undefined4 tempVar12;\n  sbyte byteVar6;\n  char charVar2;\n  char charVar3;\n  undefined4 tempVar13;\n  byte byteVar7;\n  ushort tempVar14;\n  uint tempVar15;\n  \n  if (DAT_20000ea9 == '\\x06') {\n    returnValue = '\\f';\n  }\n  else {\n    flag = 0;\n    tempVar14 = 0;\n    byteVar7 = 0;\n    tempVar13 = 0xbf800000;\n    charVar3 = '\\0';\n    charVar2 = '\\0';\n    FUN_0800b430(tempArray + 3,0,0xc);\n    FUN_0800b430(tempArray,0,0xc);\n    DAT_20000e70 = '\\0';\n    byteVar6 = 0;\n    while (result = FUN_0800184c(&byteVar1,tempArray + 6,input,&flag), result != 0) {\n      tempVar3 = FUN_08008590(tempVar9);\n      tempVar3 = FUN_08009798((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n      tempVar15 = FUN_08008ba0((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n      if (byteVar1 == 0x47) {\n        switch(tempVar15) {\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n        case 0x50:\n          byteVar6 = 2;\n          break;\n        case 4:\n        case 10:\n        case 0x1c:\n        case 0x1e:\n        case 0x35:\n        case 0x5c:\n          byteVar6 = 1;\n          break;\n        case 0x11:\n        case 0x12:\n        case 0x13:\n          byteVar6 = 3;\n          break;\n        case 0x14:\n        case 0x15:\n          byteVar6 = 7;\n          break;\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n          byteVar6 = 9;\n          break;\n        case 0x5a:\n        case 0x5b:\n          byteVar6 = 4;\n          break;\n        case 0x5d:\n        case 0x5e:\n          byteVar6 = 6;\n        }\n        switch(tempVar15) {\n        case 0:\n          DAT_20000e71 = '\\0';\n          break;\n        case 1:\n          DAT_20000e71 = '\\x01';\n          break;\n        case 2:\n          DAT_20000e71 = '\\x02';\n          break;\n        case 3:\n          DAT_20000e71 = '\\x03';\n          break;\n        case 4:\n          charVar2 = '\\x01';\n          break;\n        default:\n          DAT_20000e70 = '\\x03';\n          break;\n        case 10:\n          charVar2 = '\\x02';\n          break;\n        case 0x11:\n          FUN_08000478(0,1,2);\n          break;\n        case 0x12:\n          FUN_08000478(2,0,1);\n          break;\n        case 0x13:\n          FUN_08000478(1,2,0);\n          break;\n        case 0x14:\n          DAT_20000e73 = 1;\n          break;\n        case 0x15:\n          DAT_20000e73 = 0;\n          break;\n        case 0x1c:\n        case 0x1e:\n          tempVar = FUN_08008eec(tempVar9,0x41200000);\n          tempVar3 = FUN_08008590(tempVar);\n          tempVar3 = FUN_08009798((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n          tempVar15 = FUN_08008ba0((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n          switch(tempVar15) {\n          case 0x118:\n            charVar2 = '\\x03';\n            break;\n          case 0x119:\n            charVar2 = '\\x04';\n            break;\n          default:\n            DAT_20000e70 = '\\x03';\n            break;\n          case 300:\n            charVar2 = '\\x05';\n            break;\n          case 0x12d:\n            charVar2 = '\\x06';\n          }\n          break;\n        case 0x35:\n          charVar3 = '\\x01';\n          break;\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n          DAT_20000e8c = (char)tempVar15 - 0x36;\n          break;\n        case 0x50:\n          DAT_20000e71 = '\\x04';\n          break;\n        case 0x5a:\n          DAT_20000e74 = '\\x01';\n          break;\n        case 0x5b:\n          DAT_20000e74 = '\\0';\n          break;\n        case 0x5c:\n          tempVar = FUN_08008eec(tempVar9,0x41200000);\n          tempVar3 = FUN_08008590(tempVar);\n          tempVar3 = FUN_08009798((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n          tempVar15 = FUN_08008ba0((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n          if (tempVar15 == 0x398) {\n            charVar2 = '\\a';\n          }\n          else if (tempVar15 == 0x399) {\n            charVar2 = '\\b';\n          }\n          else {\n            DAT_20000e70 = '\\x03';\n          }\n          break;\n        case 0x5d:\n          DAT_20000e72 = '\\x01';\n          break;\n        case 0x5e:\n          DAT_20000e72 = '\\0';\n        }\n      }\n      else if (byteVar1 == 0x4d) {\n        if (tempVar15 == 0x1e) {\nLAB_08000b96:\n          byteVar6 = 5;\n        }\n        else if ((int)tempVar15 < 0x1f) {\n          if ((int)tempVar15 < 3) {\n            if (-1 < (int)tempVar15) goto LAB_08000b96;\n          }\n          else if (tempVar15 - 3 < 3) {\n            byteVar6 = 8;\n          }\n        }\n        switch(tempVar15) {\n        case 0:\n          DAT_20000e75 = '\\x01';\n          break;\n        case 1:\n          break;\n        case 2:\n        case 0x1e:\n          DAT_20000e75 = '\\x02';\n          break;\n        case 3:\n          DAT_20000e76 = '\\x01';\n          break;\n        case 4:\n          DAT_20000e76 = -1;\n          break;\n        case 5:\n          DAT_20000e76 = '\\0';\n          break;\n        default:\n          DAT_20000e70 = '\\x03';\n          break;\n        case 7:\n          DAT_20000e77 = 2;\n          break;\n        case 8:\n          DAT_20000e77 = 1;\n          break;\n        case 9:\n          DAT_20000e77 = 0;\n        }\n      }\n      if (byteVar6 != 0) {\n        if (((int)(uint)tempVar14 >> byteVar6 & 1U) == 0) {\n          tempVar14 = tempVar14 | (ushort)(1 << byteVar6);\n        }\n        else {\n          DAT_20000e70 = '\\x05';\n        }\n        byteVar6 = 0;\n      }\n    }\n    returnValue = DAT_20000e70;\n    if (DAT_20000e70 == '\\0') {\n      tempVar12 = 0;\n      param = 0;\n      charVar1 = '\\0';\n      flag = 0;\nswitchD_08000d18_caseD_47:\n      result = FUN_0800184c(&byteVar1,tempArray + 6,input,&flag);\n      if (result != 0) {\n        switch(byteVar1) {\n        case 0x46:\n          result = FUN_0800923c(tempVar9,0);\n          if (result != 0) {\n            DAT_20000e70 = '\\x06';\n          }\n          if (DAT_20000e72 == '\\0') {\n            DAT_20000e78 = FUN_0800056c(tempVar9);\n          }\n          else {\n            tempVar13 = FUN_0800056c(tempVar9);\n          }\n          break;\n        case 0x47:\n        case 0x4d:\n        case 0x4e:\n          break;\n        default:\n          DAT_20000e70 = '\\x03';\n          break;\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n          index = (uint)byteVar1;\n          tempVar = FUN_0800056c(tempVar9);\n          tempArray[index - 0x49] = tempVar;\n          break;\n        case 0x4c:\n          tempVar3 = FUN_08008590(tempVar9);\n          tempVar3 = FUN_08009798((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n          charVar1 = FUN_08008bf0((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n          break;\n        case 0x50:\n          tempVar12 = tempVar9;\n          break;\n        case 0x52:\n          param = FUN_0800056c(tempVar9);\n          break;\n        case 0x53:\n          result = FUN_08009228(tempVar9,0);\n          if (result != 0) {\n            DAT_20000e70 = '\\x06';\n          }\n          break;\n        case 0x54:\n          result = FUN_08009228(tempVar9,0);\n          if (result != 0) {\n            DAT_20000e70 = '\\x06';\n          }\n          tempVar3 = FUN_08008590(tempVar9);\n          tempVar3 = FUN_08009798((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n          DAT_20000e88 = FUN_08008bf0((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n          break;\n        case 0x58:\n          tempArray[3] = FUN_0800056c(tempVar9);\n          byteVar7 = byteVar7 | 1;\n          break;\n        case 0x59:\n          tempArray[4] = FUN_0800056c(tempVar9);\n          byteVar7 = byteVar7 | 2;\n          break;\n        case 0x5a:\n          tempArray[5] = FUN_0800056c(tempVar9);\n          byteVar7 = byteVar7 | 4;\n        }\n        goto switchD_08000d18_caseD_47;\n      }\n      returnValue = DAT_20000e70;\n      if (DAT_20000e70 == '\\0') {\n        if (DAT_20000ea9 != '\\a') {\n          FUN_0800525c((int)DAT_20000e76);\n          FUN_08000220(DAT_20000e77);\n        }\n        if ((tempVar14 & 0x200) != 0) {\n          result = FUN_08004d7c(DAT_20000e8c,&tempVar8);\n          if (result == 0) {\n            return '\\n';\n          }\n          DAT_20000e90 = tempVar8;\n          DAT_20000e94 = stackVar1;\n          DAT_20000e98 = stackVar2;\n        }\n        switch(charVar2) {\n        case '\\x01':\n          result = FUN_08009228(tempVar12,0);\n          if (result == 0) {\n            if (DAT_20000ea9 != '\\a') {\n              FUN_08002408(tempVar12);\n            }\n          }\n          else {\n            DAT_20000e70 = '\\x06';\n          }\n          break;\n        case '\\x02':\n          tempVar3 = FUN_08008590(tempVar12);\n          tempVar3 = FUN_08009798((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n          tempVar15 = FUN_08008ba0((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n          if ((((charVar1 == '\\x02') || (charVar1 == '\\x14')) && (-1 < (int)tempVar15)) &&\n             ((int)tempVar15 < 7)) {\n            if ((byteVar7 == 0) && (charVar1 == '\\x02')) {\n              DAT_20000e70 = '\\x06';\n            }\n            else {\n              if ((int)tempVar15 < 1) {\n                tempVar15 = (uint)DAT_20000e8c;\n              }\n              else {\n                tempVar15 = tempVar15 - 1;\n              }\n              result = FUN_08004d7c(tempVar15 & 0xff,varArray);\n              if (result == 0) {\n                return '\\n';\n              }\n              for (byteVar5 = 0; byteVar5 < 3; byteVar5 = byteVar5 + 1) {\n                if (((int)(uint)byteVar7 >> byteVar5 & 1U) != 0) {\n                  if (charVar1 == '\\x14') {\n                    index = (uint)byteVar5;\n                    tempVar = FUN_08008cd8(*(undefined4 *)(&DAT_20000e74 + (byteVar5 + 2) * 4),\n                                         tempArray[byteVar5 + 3]);\n                    varArray[index] = tempVar;\n                  }\n                  else {\n                    varArray[byteVar5] = tempArray[byteVar5 + 3];\n                  }\n                }\n              }\n              FUN_08004bf4(tempVar15 & 0xff,varArray);\n              if (tempVar15 == DAT_20000e8c) {\n                DAT_20000e90 = varArray[0];\n                DAT_20000e94 = varArray[1];\n                DAT_20000e98 = varArray[2];\n              }\n            }\n          }\n          else {\n            DAT_20000e70 = '\\x03';\n          }\n          byteVar7 = 0;\n          break;\n        case '\\x03':\n        case '\\x05':\n          if (byteVar7 != 0) {\n            for (byteVar4 = 0; byteVar4 < 3; byteVar4 = byteVar4 + 1) {\n              if (((int)(uint)byteVar7 >> byteVar4 & 1U) == 0) {\n                tempArray[byteVar4 + 3] = *(undefined4 *)(&DAT_20000e74 + (byteVar4 + 2) * 4);\n              }\n              else if (DAT_20000e74 == '\\0') {\n                index = (uint)byteVar4;\n                tempVar = FUN_08008cdc(tempArray[byteVar4 + 3],\n                                     *(undefined4 *)(&DAT_20000e74 + (byteVar4 + 2) * 4));\n                tempArray[index + 3] = tempVar;\n              }\n              else {\n                tempVar2 = tempArray[byteVar4 + 3];\n                tempVar = FUN_08008cdc(*(undefined4 *)(&DAT_20000e70 + (byteVar4 + 8) * 4),\n                                     *(undefined4 *)(&DAT_20000e74 + (byteVar4 + 10) * 4));\n                index = (uint)byteVar4;\n                tempVar = FUN_08008cdc(tempVar2,tempVar);\n                tempArray[index + 3] = tempVar;\n              }\n            }\n            FUN_08001e98(tempArray[3],tempArray[4],tempArray[5],DAT_20000ed0,0);\n          }\n          if (charVar2 == '\\x05') {\n            result = FUN_08004d7c(7,varArray + 3);\n            if (result == 0) {\n              return '\\n';\n            }\n          }\n          else {\n            result = FUN_08004d7c(6,varArray + 3);\n            if (result == 0) {\n              return '\\n';\n            }\n          }\n          FUN_08001e98(varArray[3],tempVar6,tempVar7,DAT_20000ed0,0);\n          DAT_20000e7c = varArray[3];\n          DAT_20000e80 = tempVar6;\n          DAT_20000e84 = tempVar7;\n          byteVar7 = 0;\n          break;\n        case '\\x04':\n        case '\\x06':\n          if (charVar2 == '\\x06') {\n            FUN_08004bf4(7,&DAT_20000e7c);\n          }\n          else {\n            FUN_08004bf4(6,&DAT_20000e7c);\n          }\n          break;\n        case '\\a':\n          if (byteVar7 == 0) {\n            DAT_20000e70 = '\\x06';\n          }\n          else {\n            for (byteVar3 = 0; byteVar3 < 3; byteVar3 = byteVar3 + 1) {\n              if (((int)(uint)byteVar7 >> byteVar3 & 1U) != 0) {\n                tempVar = FUN_08008cd8(*(undefined4 *)(&DAT_20000e74 + (byteVar3 + 2) * 4),\n                                     *(undefined4 *)(&DAT_20000e70 + (byteVar3 + 8) * 4));\n                index = (uint)byteVar3;\n                tempVar = FUN_08008cd8(tempVar,tempArray[byteVar3 + 3]);\n                *(undefined4 *)(&DAT_20000e74 + (index + 10) * 4) = tempVar;\n              }\n            }\n          }\n          byteVar7 = 0;\n          break;\n        case '\\b':\n          FUN_0800b430(&DAT_20000e9c,0,0xc);\n        }\n        if (((tempVar14 & 4) != 0) || (byteVar7 != 0)) {\n          if ((DAT_20000e72 != '\\0') &&\n             ((result = FUN_08009228(tempVar13,0), result != 0 && (DAT_20000e71 != '\\x04')))) {\n            DAT_20000e70 = '\\x06';\n          }\n          if (((charVar3 != '\\0') && (DAT_20000e71 != '\\0')) && (DAT_20000e71 != '\\x01')) {\n            DAT_20000e70 = '\\x06';\n          }\n          if (DAT_20000e70 != '\\0') {\n            return DAT_20000e70;\n          }\n          for (byteVar2 = 0; byteVar2 < 3; byteVar2 = byteVar2 + 1) {\n            if (((int)(uint)byteVar7 >> byteVar2 & 1U) == 0) {\n              tempArray[byteVar2 + 3] = *(undefined4 *)(&DAT_20000e74 + (byteVar2 + 2) * 4);\n            }\n            else if (charVar3 == '\\0') {\n              if (DAT_20000e74 == '\\0') {\n                index = (uint)byteVar2;\n                tempVar = FUN_08008cdc(tempArray[byteVar2 + 3],\n                                     *(undefined4 *)(&DAT_20000e74 + (byteVar2 + 2) * 4));\n                tempArray[index + 3] = tempVar;\n              }\n              else {\n                tempVar2 = tempArray[byteVar2 + 3];\n                tempVar = FUN_08008cdc(*(undefined4 *)(&DAT_20000e70 + (byteVar2 + 8) * 4),\n                                     *(undefined4 *)(&DAT_20000e74 + (byteVar2 + 10) * 4));\n                index = (uint)byteVar2;\n                tempVar = FUN_08008cdc(tempVar2,tempVar);\n                tempArray[index + 3] = tempVar;\n              }\n            }\n          }\n          switch(DAT_20000e71) {\n          case '\\0':\n            if (byteVar7 == 0) {\n              DAT_20000e70 = '\\x06';\n            }\n            else {\n              FUN_08001e98(tempArray[3],tempArray[4],tempArray[5],DAT_20000ed0,0);\n            }\n            break;\n          case '\\x01':\n            if (byteVar7 == 0) {\n              DAT_20000e70 = '\\x06';\n            }\n            else {\n              tempVar = tempVar13;\n              if (DAT_20000e72 == '\\0') {\n                tempVar = DAT_20000e78;\n              }\n              FUN_08001e98(tempArray[3],tempArray[4],tempArray[5],tempVar,DAT_20000e72);\n            }\n            break;\n          case '\\x02':\n          case '\\x03':\n            byteVar7 = byteVar7 & ~(byte)(1 << DAT_20000e8b);\n            if ((byteVar7 == 0) ||\n               (((result = FUN_08009214(param,0), result != 0 &&\n                 (result = FUN_08009214(tempArray[DAT_20000e89],0), result != 0)) &&\n                (result = FUN_08009214(tempArray[DAT_20000e8a],0), result != 0)))) {\n              DAT_20000e70 = '\\x06';\n            }\n            else {\n              result = FUN_08009214(param,0);\n              if (result == 0) {\n                tempVar11 = FUN_08008cd8(tempArray[DAT_20000e89 + 3],\n                                        *(undefined4 *)(&DAT_20000e74 + (DAT_20000e89 + 2) * 4));\n                tempVar10 = FUN_08008cd8(tempArray[DAT_20000e8a + 3],\n                                        *(undefined4 *)(&DAT_20000e74 + (DAT_20000e8a + 2) * 4));\n                FUN_0800b430(tempArray,0,0xc);\n                tempVar = FUN_08008eec(param,0x40800000);\n                tempVar = FUN_08008eec(tempVar,param);\n                tempVar2 = FUN_08008eec(tempVar11,tempVar11);\n                tempVar = FUN_08008cd8(tempVar,tempVar2);\n                tempVar2 = FUN_08008eec(tempVar10,tempVar10);\n                offset = FUN_08008cd8(tempVar,tempVar2);\n                result = FUN_08009228(offset,0);\n                if (result != 0) {\n                  DAT_20000e70 = 4;\n                  return '\\x04';\n                }\n                tempVar3 = FUN_08008590(offset);\n                tempVar3 = FUN_080098d0((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n                tempVar4 = FUN_08008590(tempVar11);\n                tempVar5 = FUN_08008590(tempVar10);\n                tempVar4 = FUN_0800981c((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20),(int)tempVar5,\n                                     (int)((ulonglong)tempVar5 >> 0x20));\n                tempVar3 = FUN_08008894((int)tempVar3,(uint)((ulonglong)tempVar3 >> 0x20) ^ 0x80000000,\n                                     (int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20));\n                offset = FUN_08008c30((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n                if (DAT_20000e71 == '\\x03') {\n                  offset = offset ^ 0x80000000;\n                }\n                result = FUN_08009228(param,0);\n                if (result != 0) {\n                  offset = offset ^ 0x80000000;\n                  param = param ^ 0x80000000;\n                }\n                tempVar = FUN_08008eec(tempVar10,offset);\n                tempVar = FUN_08008cd8(tempVar11,tempVar);\n                index = (uint)DAT_20000e89;\n                tempVar = FUN_08008eec(tempVar,0x3f000000);\n                tempArray[index] = tempVar;\n                tempVar = FUN_08008eec(tempVar11,offset);\n                tempVar = FUN_08008cdc(tempVar,tempVar10);\n                index = (uint)DAT_20000e8a;\n                tempVar = FUN_08008eec(tempVar,0x3f000000);\n                tempArray[index] = tempVar;\n              }\n              else {\n                tempVar3 = FUN_08008590(tempArray[DAT_20000e89]);\n                tempVar4 = FUN_08008590(tempArray[DAT_20000e8a]);\n                tempVar3 = FUN_0800981c((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20),(int)tempVar4,\n                                     (int)((ulonglong)tempVar4 >> 0x20));\n                param = FUN_08008c30((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n              }\n              boolVar1 = DAT_20000e71 == '\\x02';\n              tempVar = tempVar13;\n              if (DAT_20000e72 == '\\0') {\n                tempVar = DAT_20000e78;\n              }\n              FUN_08001f00(&DAT_20000e7c,tempArray + 3,tempArray,DAT_20000e89,DAT_20000e8a,\n                           DAT_20000e8b,tempVar,DAT_20000e72,param,boolVar1);\n            }\n            break;\n          case '\\x04':\n            if (byteVar7 != 0) {\n              DAT_20000e70 = '\\x06';\n            }\n          }\n          if (DAT_20000e70 != '\\0') {\n            return DAT_20000e70;\n          }\n          DAT_20000e7c = tempArray[3];\n          DAT_20000e80 = tempArray[4];\n          DAT_20000e84 = tempArray[5];\n        }\n        returnValue = DAT_20000e70;\n        if (DAT_20000e75 != '\\0') {\n          FUN_08002fd4();\n          DAT_20000eb8 = 0;\n          if (DAT_20000e75 == '\\x02') {\n            FUN_080025e8();\n            returnValue = DAT_20000e70;\n          }\n          else {\n            DAT_20000e75 = '\\0';\n            returnValue = DAT_20000e70;\n          }\n        }\n      }\n    }\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_080005b4": "parse_input_080005b4",
                "param_1": "input",
                "iVar1": "result",
                "uVar2": "tempVar",
                "cVar3": "returnValue",
                "uVar4": "index",
                "uVar5": "tempVar2",
                "uVar6": "tempVar3",
                "uVar7": "tempVar4",
                "uVar8": "tempVar5",
                "local_94": "varArray",
                "local_84": "tempVar6",
                "local_80": "tempVar7",
                "local_7c": "tempVar8",
                "uStack_78": "stackVar1",
                "uStack_74": "stackVar2",
                "auStack_70": "tempArray",
                "local_58": "tempVar9",
                "local_52": "byteVar1",
                "local_51": "flag",
                "local_50": "tempVar10",
                "local_4c": "tempVar11",
                "local_45": "boolVar1",
                "local_44": "offset",
                "local_3d": "byteVar2",
                "local_3c": "byteVar3",
                "local_3b": "byteVar4",
                "local_3a": "byteVar5",
                "local_39": "charVar1",
                "local_38": "param",
                "local_34": "tempVar12",
                "local_2f": "byteVar6",
                "local_2e": "charVar2",
                "local_2d": "charVar3",
                "local_2c": "tempVar13",
                "local_27": "byteVar7",
                "local_26": "tempVar14",
                "local_24": "tempVar15"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080039bc"
            ],
            "called": [
                "FUN_08000478",
                "FUN_08009214",
                "FUN_0800923c",
                "FUN_08001f00",
                "FUN_08008bf0",
                "FUN_08004bf4",
                "FUN_08008590",
                "FUN_08009228",
                "FUN_0800184c",
                "FUN_08000220",
                "FUN_08008cdc",
                "FUN_08008cd8",
                "FUN_0800525c",
                "FUN_08009798",
                "FUN_080025e8",
                "FUN_08008ba0",
                "FUN_08002408",
                "FUN_08008894",
                "FUN_08002fd4",
                "FUN_0800b430",
                "FUN_08001e98",
                "FUN_080098d0",
                "FUN_08004d7c",
                "FUN_0800056c",
                "FUN_0800981c",
                "FUN_08008eec",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800184c": {
            "entrypoint": "0x0800184c",
            "current_name": "validate_character_0800184c",
            "code": "\nundefined4 validateCharacter_0800184c(byte *output,undefined4 param2,int param3,byte *input)\n\n{\n  int result;\n  undefined4 isValid;\n  \n  if (*(char *)(param3 + (uint)*input) == '\\0') {\n    isValid = 0;\n  }\n  else {\n    *output = *(byte *)(param3 + (uint)*input);\n    if ((*output < 0x41) || (0x5a < *output)) {\n      DAT_20000e70 = 2;\n      isValid = 0;\n    }\n    else {\n      *input = *input + 1;\n      result = FUN_08002638(param3,input,param2);\n      if (result == 0) {\n        DAT_20000e70 = 1;\n        isValid = 0;\n      }\n      else {\n        isValid = 1;\n      }\n    }\n  }\n  return isValid;\n}\n\n",
            "renaming": {
                "FUN_0800184c": "validate_character_0800184c",
                "param_1": "output",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "input",
                "iVar1": "result",
                "uVar2": "isValid"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08002638"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080018cc": {
            "entrypoint": "0x080018cc",
            "current_name": "update_data_080018cc",
            "code": "\n\n\nvoid updateData_080018cc(uint newValue)\n\n{\n  _DAT_40021014 = newValue | _DAT_40021014 & 0xfffffaaf;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080018cc": "update_data_080018cc",
                "param_1": "newValue"
            },
            "calling": [
                "FUN_08001994"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080018fc": {
            "entrypoint": "0x080018fc",
            "current_name": "update_config_flags_080018fc",
            "code": "\n\n\nvoid updateConfigFlags_080018fc(uint newConfigFlags)\n\n{\n  _DAT_40021014 = newConfigFlags | _DAT_40021014 & 0xfffff55f;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080018fc": "update_config_flags_080018fc",
                "param_1": "newConfigFlags"
            },
            "calling": [
                "FUN_08001994"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800192c": {
            "entrypoint": "0x0800192c",
            "current_name": "decode_flag_from_binary_0800192c",
            "code": "\nvoid decodeFlagFromBinary_0800192c(void)\n\n{\n  DAT_20000e4c = (uint)((DAT_20000ee4 & 8) != 0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800192c": "decode_flag_from_binary_0800192c"
            },
            "calling": [
                "FUN_08004e30",
                "FUN_08001ddc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800195c": {
            "entrypoint": "0x0800195c",
            "current_name": "update_data_if_needed_0800195c",
            "code": "\nvoid updateDataIfNeeded_0800195c(void)\n\n{\n  if ((DAT_20000ea9 != '\\x06') && ((DAT_20000eaa & 0x20) == 0)) {\n    FUN_080025e8();\n    DAT_20000eaa = DAT_20000eaa | 0x40;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800195c": "update_data_if_needed_0800195c"
            },
            "calling": [
                "FUN_080074c8"
            ],
            "called": [
                "FUN_080025e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001994": {
            "entrypoint": "0x08001994",
            "current_name": "process_data_08001994",
            "code": "\nvoid processData_08001994(byte flags,char enableOption1,char enableOption2,undefined4 data)\n\n{\n  undefined4 result;\n  uint maxValue;\n  undefined8 temp1;\n  undefined8 temp2;\n  byte tempFlag;\n  uint value1;\n  uint value2;\n  uint value3;\n  ushort constant1;\n  uint maxValue2;\n  int tempValue;\n  undefined4 result2;\n  uint currentValue;\n  uint randomValue;\n  ushort constant2;\n  uint counter;\n  uint total;\n  int difference;\n  int tempValue1;\n  int tempValue2;\n  int tempValue3;\n  ushort constant3;\n  uint minValue;\n  char count;\n  \n  count = '\\0';\n  FUN_0800b430(&value1,0,0xc);\n  if ((flags & 1) != 0) {\n    count = count + '\\x01';\n    temp1 = FUN_08008590(DAT_20000ebc);\n    value1 = FUN_080095b8((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  }\n  if ((flags & 2) != 0) {\n    count = count + '\\x01';\n    temp1 = FUN_08008590(DAT_20000ec0);\n    value2 = FUN_080095b8((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  }\n  if ((flags & 4) != 0) {\n    count = count + '\\x01';\n    temp1 = FUN_08008590(DAT_20000ec4);\n    value3 = FUN_080095b8((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  }\n  maxValue = value3;\n  if (value3 < value2) {\n    maxValue = value2;\n  }\n  currentValue = value1;\n  if (value1 < maxValue) {\n    currentValue = maxValue;\n  }\n  temp1 = FUN_0800854c(currentValue);\n  temp2 = FUN_0800854c(count);\n  temp2 = FUN_080098d0((int)temp2,(int)((ulonglong)temp2 >> 0x20));\n  temp1 = FUN_08008894((int)temp1,(int)((ulonglong)temp1 >> 0x20),(int)temp2,\n                       (int)((ulonglong)temp2 >> 0x20));\n  result2 = FUN_08008c30((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  result = FUN_08008eec(DAT_20000edc,result2);\n  result = FUN_08009054(result,0x453b8000);\n  temp1 = FUN_08008590(result);\n  temp1 = FUN_08009318((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  tempValue = FUN_08008bf0((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  temp1 = FUN_0800854c(count);\n  temp1 = FUN_080098d0((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  temp2 = FUN_08008590(data);\n  temp1 = FUN_08008640((int)temp1,(int)((ulonglong)temp1 >> 0x20),(int)temp2,\n                       (int)((ulonglong)temp2 >> 0x20));\n  result = FUN_08008c30((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  result = FUN_08008eec(result2,result);\n  result = FUN_08009054(0x4c64e1c0,result);\n  temp1 = FUN_08008590(result);\n  maxValue2 = FUN_080095b8((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  minValue = 75000;\n  if (maxValue2 < 75000) {\n    minValue = maxValue2;\n  }\n  constant1 = DAT_20000ed4;\n  constant3 = DAT_20000ed6 ^ DAT_20000ee6 & 0xaa0;\n  if (enableOption1 == '\\0') {\n    constant3 = constant3 ^ 0xaa0;\n  }\n  FUN_080018fc(constant3);\n  FUN_080018cc(constant1);\n  tempValue1 = -(currentValue >> 1);\n  difference = minValue - DAT_20000ec9;\n  total = 0;\n  counter = 10000;\n  tempFlag = flags;\n  tempValue2 = tempValue1;\n  tempValue3 = tempValue1;\n  while( true ) {\n    constant2 = constant1;\n    randomValue = FUN_080078f4();\n    if (enableOption2 == '\\0') {\n      randomValue = randomValue ^ 0x1e;\n    }\n    if (((tempFlag & 1) != 0) && (tempValue3 = tempValue3 + value1, 0 < tempValue3)) {\n      if ((randomValue & 0x10) == 0) {\n        tempFlag = tempFlag & 0xfe;\n      }\n      else {\n        constant2 = constant2 ^ 0x10;\n      }\n      tempValue3 = tempValue3 - currentValue;\n    }\n    if (((tempFlag & 2) != 0) && (tempValue2 = tempValue2 + value2, 0 < tempValue2)) {\n      if ((randomValue & 8) == 0) {\n        tempFlag = tempFlag & 0xfd;\n      }\n      else {\n        constant2 = constant2 ^ 0x440;\n      }\n      tempValue2 = tempValue2 - currentValue;\n    }\n    if (((tempFlag & 4) != 0) && (tempValue1 = tempValue1 + value3, 0 < tempValue1)) {\n      if ((randomValue & 4) == 0) {\n        tempFlag = tempFlag & 0xfb;\n      }\n      else {\n        constant2 = constant2 ^ 0x100;\n      }\n      tempValue1 = tempValue1 - currentValue;\n    }\n    if ((tempFlag == 0) || ((DAT_20000eaa & 0x10) != 0)) break;\n    FUN_080018cc(constant2);\n    FUNC_08002828(DAT_20000ec9);\n    FUN_080018cc(constant1);\n    FUNC_08002828(difference);\n    if ((maxValue2 < minValue) && (counter = minValue + counter, 20000 < counter)) {\n      counter = counter - 20000;\n      total = tempValue + total;\n      minValue = 60000000 / total;\n      if (minValue < maxValue2) {\n        minValue = maxValue2;\n      }\n      difference = minValue - DAT_20000ec9;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001994": "process_data_08001994",
                "param_1": "flags",
                "param_2": "enableOption1",
                "param_3": "enableOption2",
                "param_4": "data",
                "uVar1": "result",
                "uVar2": "maxValue",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "local_61": "tempFlag",
                "local_5c": "value1",
                "local_58": "value2",
                "local_54": "value3",
                "local_4e": "constant1",
                "local_4c": "maxValue2",
                "local_48": "tempValue",
                "local_44": "result2",
                "local_40": "currentValue",
                "local_3c": "randomValue",
                "local_36": "constant2",
                "local_34": "counter",
                "local_30": "total",
                "local_2c": "difference",
                "local_28": "tempValue1",
                "local_24": "tempValue2",
                "local_20": "tempValue3",
                "local_1a": "constant3",
                "local_18": "minValue",
                "local_11": "count"
            },
            "calling": [
                "FUN_08001d4c"
            ],
            "called": [
                "FUN_080095b8",
                "FUN_08009054",
                "FUN_08009318",
                "FUN_0800854c",
                "FUN_080078f4",
                "FUN_08008894",
                "FUN_08008640",
                "FUN_08008bf0",
                "FUN_080018cc",
                "FUN_0800b430",
                "FUN_08008590",
                "FUN_080098d0",
                "FUN_080018fc",
                "FUN_08008eec",
                "FUN_08008c30",
                "FUN_08002828"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001d4c": {
            "entrypoint": "0x08001d4c",
            "current_name": "initialize_08001d4c",
            "code": "\nvoid initialize_08001d4c(void)\n\n{\n  char temp;\n  char counter;\n  \n  FUN_08005790();\n  FUN_08001994(4,1,0,DAT_20000eec);\n  FUN_08001994(3,1,0,DAT_20000eec);\n  FUNC_08002814(DAT_20000ef0);\n  counter = '\\x02';\n  while( true ) {\n    temp = counter + -1;\n    if (counter == '\\0') break;\n    FUN_08001994(7,0,1,DAT_20000ee8);\n    FUNC_08002814(DAT_20000ef0);\n    counter = temp;\n    if ('\\0' < temp) {\n      FUN_08001994(7,1,0,DAT_20000ee8);\n      FUNC_08002814(DAT_20000ef0);\n    }\n  }\n  FUN_080057e4();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001d4c": "initialize_08001d4c",
                "local_9": "counter",
                "cVar1": "temp"
            },
            "calling": [
                "FUN_080024c4"
            ],
            "called": [
                "FUN_08002814",
                "FUN_08005790",
                "FUN_080057e4",
                "FUN_08001994"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001ddc": {
            "entrypoint": "0x08001ddc",
            "current_name": "initialize_08001ddc",
            "code": "\nvoid initialize_08001ddc(void)\n\n{\n  FUNC_08008244();\n  FUN_080051b4();\n  FUN_0800583c();\n  FUN_0800b430(&DAT_20000ea8,0,0x14);\n  DAT_20000ea8 = '\\x01';\n  DAT_20000ea9 = '\\x01';\n  do {\n    if (DAT_20000ea8 != '\\0') {\n      FUNC_080082ba();\n      FUN_08002f24();\n      FUN_080004ac();\n      FUN_080039a0();\n      FUN_08005238();\n      FUN_080001f8();\n      FUN_0800192c();\n      FUN_08005814();\n      FUN_0800283a();\n      DAT_20000ea8 = '\\0';\n      DAT_20000eaa = 0;\n      if ((DAT_20000ee4 & 2) != 0) {\n        DAT_20000eb8 = 1;\n      }\n      if ((DAT_20000ea9 == '\\x01') && ((DAT_20000ee4 & 0x10) != 0)) {\n        DAT_20000ea9 = '\\x06';\n      }\n      if (DAT_20000ea9 == '\\x06') {\n        FUN_080041a0(2);\n      }\n      else {\n        DAT_20000ea9 = '\\0';\n        FUN_080039bc();\n      }\n    }\n    FUN_08003a74();\n    FUN_08003f34();\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08001ddc": "initialize_08001ddc"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_08005814",
                "FUN_0800583c",
                "FUN_08005238",
                "FUN_08008244",
                "FUN_08003f34",
                "FUN_080039bc",
                "FUN_0800283a",
                "FUN_080082ba",
                "FUN_080051b4",
                "FUN_0800192c",
                "FUN_0800b430",
                "FUN_080039a0",
                "FUN_08003a74",
                "FUN_080004ac",
                "FUN_08002f24",
                "FUN_080001f8",
                "FUN_080041a0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001e98": {
            "entrypoint": "0x08001e98",
            "current_name": "process_data_08001e98",
            "code": "\nvoid processData_08001e98(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4,\n                 undefined flag)\n\n{\n  int result;\n  \n  if (DAT_20000ea9 != '\\a') {\n    do {\n      FUN_08003a74();\n      if (DAT_20000ea8 != '\\0') {\n        return;\n      }\n      result = FUN_08002fac();\n    } while (result != 0);\n    FUN_08003004(input1,input2,input3,input4,flag);\n    if (DAT_20000ea9 == '\\0') {\n      DAT_20000ea9 = '\\x02';\n    }\n    if (DAT_20000eb8 != '\\0') {\n      FUN_0800585c();\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001e98": "process_data_08001e98",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "param_5": "flag",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080005b4",
                "FUN_08001f00",
                "FUN_080024c4"
            ],
            "called": [
                "FUN_0800585c",
                "FUN_08003004",
                "FUN_08002fac",
                "FUN_08003a74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001f00": {
            "entrypoint": "0x08001f00",
            "current_name": "calculate_checksum_08001f00",
            "code": "\nvoid calculateChecksum_08001f00(int array1,undefined4 *array2,int array3,byte index1,byte index2,byte index3\n                 ,undefined4 value1,char value2,undefined4 value3,char isTrue)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  int tmp;\n  uint tmp2;\n  undefined8 tmp3;\n  undefined8 tmp4;\n  uint localArray [4];\n  undefined4 localVar1;\n  undefined4 localVar2;\n  undefined4 localVar3;\n  undefined4 localVar4;\n  undefined4 localVar5;\n  undefined4 localVar6;\n  ushort localVar7;\n  undefined4 localVar8;\n  undefined4 localVar9;\n  undefined4 localVar10;\n  uint localVar11;\n  undefined4 localVar12;\n  undefined4 localVar13;\n  char localVar14;\n  ushort localVar15;\n  undefined4 localVar16;\n  uint localVar17;\n  uint localVar18;\n  \n  localVar13 = FUN_08008cdc(*(undefined4 *)((uint)index1 * 4 + array1),\n                          *(undefined4 *)((uint)index1 * 4 + array3));\n  localVar12 = FUN_08008cdc(*(undefined4 *)((uint)index2 * 4 + array1),\n                          *(undefined4 *)((uint)index2 * 4 + array3));\n  localVar11 = FUN_08008cd8(array2[index3],*(undefined4 *)((uint)index3 * 4 + array1));\n  localVar18 = *(uint *)((uint)index1 * 4 + array3) ^ 0x80000000;\n  localVar17 = *(uint *)((uint)index2 * 4 + array3) ^ 0x80000000;\n  localVar10 = FUN_08008cd8(array2[index1],localVar13);\n  localVar9 = FUN_08008cd8(array2[index2],localVar12);\n  result1 = FUN_08008eec(localVar18,localVar9);\n  result2 = FUN_08008eec(localVar17,localVar10);\n  result1 = FUN_08008cd8(result1,result2);\n  tmp3 = FUN_08008590(result1);\n  result1 = FUN_08008eec(localVar18,localVar10);\n  result2 = FUN_08008eec(localVar17,localVar9);\n  result1 = FUN_08008cdc(result1,result2);\n  tmp4 = FUN_08008590(result1);\n  tmp3 = thunk_FUN_08009990((int)tmp3,(int)((ulonglong)tmp3 >> 0x20),(int)tmp4,\n                             (int)((ulonglong)tmp4 >> 0x20));\n  localVar16 = FUN_08008c30((int)tmp3,(int)((ulonglong)tmp3 >> 0x20));\n  if (isTrue == '\\0') {\n    tmp = FUN_0800923c(localVar16,0);\n    if (tmp != 0) {\n      tmp3 = FUN_08008590(localVar16);\n      tmp3 = FUN_080082d4((int)tmp3,(int)((ulonglong)tmp3 >> 0x20),0x54442d18,0x401921fb);\n      localVar16 = FUN_08008c30((int)tmp3,(int)((ulonglong)tmp3 >> 0x20));\n    }\n  }\n  else {\n    tmp = FUN_08009250(localVar16,0);\n    if (tmp != 0) {\n      tmp3 = FUN_08008590(localVar16);\n      tmp3 = FUN_080082d0((int)tmp3,(int)((ulonglong)tmp3 >> 0x20),0x54442d18,0x401921fb);\n      localVar16 = FUN_08008c30((int)tmp3,(int)((ulonglong)tmp3 >> 0x20));\n    }\n  }\n  result1 = FUN_08008eec(localVar16,value3);\n  tmp3 = FUN_08008590(result1);\n  tmp4 = FUN_08008590(localVar11 & 0x7fffffff);\n  tmp3 = FUN_0800981c((int)tmp3,(int)((ulonglong)tmp3 >> 0x20),(int)tmp4,\n                       (int)((ulonglong)tmp4 >> 0x20));\n  localVar8 = FUN_08008c30((int)tmp3,(int)((ulonglong)tmp3 >> 0x20));\n  tmp = FUN_08009214(localVar8,0);\n  if (tmp == 0) {\n    result1 = FUN_08009054(localVar8,DAT_20000ed8);\n    tmp3 = FUN_08008590(result1);\n    tmp3 = FUN_080094c0((int)tmp3,(int)((ulonglong)tmp3 >> 0x20));\n    localVar7 = FUN_08008bf0((int)tmp3,(int)((ulonglong)tmp3 >> 0x20));\n    if (value2 != '\\0') {\n      result1 = FUNC_08008e44(localVar7);\n      value1 = FUN_08008eec(value1,result1);\n    }\n    result1 = FUNC_08008e44(localVar7);\n    localVar6 = FUN_08009054(localVar16,result1);\n    result1 = FUNC_08008e44(localVar7);\n    localVar5 = FUN_08009054(localVar11,result1);\n    tmp3 = FUN_08008590(localVar6);\n    tmp3 = FUN_08008640((int)tmp3,(int)((ulonglong)tmp3 >> 0x20),0,0x3fe00000);\n    tmp4 = FUN_08008590(localVar6);\n    tmp3 = FUN_08008640((int)tmp3,(int)((ulonglong)tmp3 >> 0x20),(int)tmp4,\n                         (int)((ulonglong)tmp4 >> 0x20));\n    tmp3 = FUN_080082d0(0,0x3ff00000,(int)tmp3,(int)((ulonglong)tmp3 >> 0x20));\n    localVar4 = FUN_08008c30((int)tmp3,(int)((ulonglong)tmp3 >> 0x20));\n    localVar3 = localVar6;\n    localVar14 = '\\0';\n    localArray[index3] = *(uint *)(array1 + (uint)index3 * 4);\n    for (localVar15 = 1; localVar15 < localVar7; localVar15 = localVar15 + 1) {\n      if ((int)localVar14 < (int)(uint)DAT_20000efa) {\n        result1 = FUN_08008eec(localVar18,localVar3);\n        result2 = FUN_08008eec(localVar17,localVar4);\n        localArray[3] = FUN_08008cdc(result1,result2);\n        result1 = FUN_08008eec(localVar18,localVar4);\n        result2 = FUN_08008eec(localVar17,localVar3);\n        localVar18 = FUN_08008cd8(result1,result2);\n        localVar17 = localArray[3];\n        localVar14 = localVar14 + '\\x01';\n      }\n      else {\n        result1 = FUNC_08008e44(localVar15);\n        result1 = FUN_08008eec(result1,localVar6);\n        tmp3 = FUN_08008590(result1);\n        tmp3 = FUN_08009410((int)tmp3,(int)((ulonglong)tmp3 >> 0x20));\n        localVar2 = FUN_08008c30((int)tmp3,(int)((ulonglong)tmp3 >> 0x20));\n        result1 = FUNC_08008e44(localVar15);\n        result1 = FUN_08008eec(result1,localVar6);\n        tmp3 = FUN_08008590(result1);\n        tmp3 = FUN_080096e8((int)tmp3,(int)((ulonglong)tmp3 >> 0x20));\n        localVar1 = FUN_08008c30((int)tmp3,(int)((ulonglong)tmp3 >> 0x20));\n        result1 = FUN_08008eec(*(uint *)((uint)index1 * 4 + array3) ^ 0x80000000,localVar2);\n        result2 = FUN_08008eec(*(undefined4 *)((uint)index2 * 4 + array3),localVar1);\n        localVar18 = FUN_08008cdc(result1,result2);\n        result1 = FUN_08008eec(*(uint *)((uint)index1 * 4 + array3) ^ 0x80000000,localVar1);\n        result2 = FUN_08008eec(*(undefined4 *)((uint)index2 * 4 + array3),localVar2);\n        localVar17 = FUN_08008cd8(result1,result2);\n        localVar14 = '\\0';\n      }\n      tmp2 = FUN_08008cdc(localVar13,localVar18);\n      localArray[index1] = tmp2;\n      tmp2 = FUN_08008cdc(localVar12,localVar17);\n      localArray[index2] = tmp2;\n      tmp2 = FUN_08008cdc(localArray[index3],localVar5);\n      localArray[index3] = tmp2;\n      FUN_08001e98(localArray[0],localArray[1],localArray[2],value1,value2);\n      if (DAT_20000ea8 != '\\0') {\n        return;\n      }\n    }\n    FUN_08001e98(*array2,array2[1],array2[2],value1,value2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001f00": "calculate_checksum_08001f00",
                "param_1": "array1",
                "param_2": "array2",
                "param_3": "array3",
                "param_4": "index1",
                "param_5": "index2",
                "param_6": "index3",
                "param_7": "value1",
                "param_8": "value2",
                "param_9": "value3",
                "param_10": "isTrue",
                "uVar1": "result1",
                "uVar2": "result2",
                "iVar3": "tmp",
                "uVar4": "tmp2",
                "uVar5": "tmp3",
                "uVar6": "tmp4",
                "local_6c": "localArray",
                "local_5c": "localVar1",
                "local_58": "localVar2",
                "local_54": "localVar3",
                "local_50": "localVar4",
                "local_4c": "localVar5",
                "local_48": "localVar6",
                "local_42": "localVar7",
                "local_40": "localVar8",
                "local_3c": "localVar9",
                "local_38": "localVar10",
                "local_34": "localVar11",
                "local_30": "localVar12",
                "local_2c": "localVar13",
                "local_27": "localVar14",
                "local_26": "localVar15",
                "local_24": "localVar16",
                "local_20": "localVar17",
                "local_1c": "localVar18"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08008cd8",
                "FUN_08008e44",
                "FUN_080096e8",
                "FUN_08009054",
                "FUN_08009214",
                "FUN_0800923c",
                "FUN_08008640",
                "FUN_08008bf0",
                "FUN_08008590",
                "FUN_080082d0",
                "FUN_080094c0",
                "FUN_08001e98",
                "FUN_08009410",
                "FUN_0800981c",
                "FUN_08008eec",
                "thunk_FUN_08009990",
                "FUN_08009250",
                "FUN_08008cdc",
                "FUN_08008c30",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002408": {
            "entrypoint": "0x08002408",
            "current_name": "process_data_08002408",
            "code": "\nvoid processData_08002408(undefined4 inputData)\n\n{\n  undefined2 result;\n  undefined4 tempVar1;\n  undefined4 tempVar2;\n  undefined8 tempVar3;\n  ushort loopCounter;\n  \n  tempVar1 = FUN_08008eec(inputData,0x41a00000);\n  tempVar3 = FUN_08008590(tempVar1);\n  tempVar3 = FUN_080094c0((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n  loopCounter = FUN_08008bf0((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n  FUN_08002fd4();\n  tempVar1 = FUN_08008eec(inputData,0x447a0000);\n  tempVar2 = FUNC_08008e44((uint)loopCounter * 0x32);\n  tempVar1 = FUN_08008cd8(tempVar1,tempVar2);\n  tempVar3 = FUN_08008590(tempVar1);\n  tempVar3 = FUN_080094c0((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n  result = FUN_08008bf0((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n  FUNC_08002814(result);\n  while ((loopCounter != 0 && (FUN_08003a74(), DAT_20000ea8 == '\\0'))) {\n    FUN_080002a0(0x32);\n    loopCounter = loopCounter - 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002408": "process_data_08002408",
                "param_1": "inputData",
                "uVar1": "result",
                "uVar2": "tempVar1",
                "uVar3": "tempVar2",
                "uVar4": "tempVar3",
                "local_12": "loopCounter"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08008e44",
                "FUN_080094c0",
                "FUN_08008cd8",
                "FUN_080002a0",
                "FUN_08003a74",
                "FUN_08002814",
                "FUN_08008eec",
                "FUN_08008bf0",
                "FUN_08002fd4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080024c4": {
            "entrypoint": "0x080024c4",
            "current_name": "initialize_system_080024c4",
            "code": "\nvoid initializeSystem_080024c4(void)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  char isFlagSet1;\n  char isFlagSet2;\n  char isFlagSet3;\n  \n  DAT_20000ea9 = 5;\n  DAT_20000e4c = 0;\n  FUN_08001d4c();\n  FUN_08003a74();\n  if (DAT_20000ea8 == '\\0') {\n    FUN_0800b430(&DAT_20000eac,0,0xc);\n    FUN_0800283a();\n    DAT_20000ea9 = 0;\n    if ((DAT_20000ee6 & 0x20) == 0) {\n      isFlagSet3 = -1;\n    }\n    else {\n      isFlagSet3 = '\\x01';\n    }\n    if ((DAT_20000ee6 & 0x80) == 0) {\n      isFlagSet2 = -1;\n    }\n    else {\n      isFlagSet2 = '\\x01';\n    }\n    if ((DAT_20000ee6 & 0x200) == 0) {\n      isFlagSet1 = -1;\n    }\n    else {\n      isFlagSet1 = '\\x01';\n    }\n    uVar1 = FUNC_08008e44((int)isFlagSet3);\n    uVar1 = FUN_08008eec(uVar1,DAT_20000ef4);\n    uVar2 = FUNC_08008e44((int)isFlagSet2);\n    uVar2 = FUN_08008eec(uVar2,DAT_20000ef4);\n    uVar3 = FUNC_08008e44((int)isFlagSet1);\n    uVar3 = FUN_08008eec(uVar3,DAT_20000ef4);\n    FUN_08001e98(uVar1,uVar2,uVar3,DAT_20000eec,0);\n    FUN_0800585c();\n    FUN_08002fd4();\n    FUN_0800283a();\n    if ((DAT_20000ee4 & 8) != 0) {\n      DAT_20000e4c = 1;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080024c4": "initialize_system_080024c4",
                "local_13": "isFlagSet1",
                "local_12": "isFlagSet2",
                "local_11": "isFlagSet3"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_0800b430",
                "FUN_0800585c",
                "FUN_08008e44",
                "FUN_08001e98",
                "FUN_08003a74",
                "FUN_08008eec",
                "FUN_08001d4c",
                "FUN_0800283a",
                "FUN_08002fd4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080025e8": {
            "entrypoint": "0x080025e8",
            "current_name": "update_status_080025e8",
            "code": "\nvoid updateStatus_080025e8(void)\n\n{\n  if ((DAT_20000eaa & 0x10) == 0) {\n    DAT_20000eaa = DAT_20000eaa | 0x10;\n    FUN_08005250();\n    FUN_08000210();\n    if (DAT_20000ea9 - 3 < 3) {\n      DAT_20000eaa = DAT_20000eaa | 0x20;\n      FUN_080057e4();\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080025e8": "update_status_080025e8"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080005b4",
                "FUN_0800195c",
                "FUN_08005900",
                "FUN_08003a18"
            ],
            "called": [
                "FUN_08005250",
                "FUN_08000210",
                "FUN_080057e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002638": {
            "entrypoint": "0x08002638",
            "current_name": "convert_string_to_int_08002638",
            "code": "\nundefined4 convertStringToInt_08002638(int inputBaseAddress,byte *inputString,uint *outputValue)\n\n{\n  byte digit;\n  bool isNegative;\n  bool isFractional;\n  int conversionResult;\n  char *currentChar;\n  char *nextChar;\n  undefined4 returnValue;\n  undefined8 tempValue;\n  uint fractionalPart;\n  byte digitCount;\n  char fractionalDigitCount;\n  int intValue;\n  char currentDigit;\n  char *remainingString;\n  \n  nextChar = (char *)(inputBaseAddress + (uint)*inputString);\n  currentChar = nextChar + 1;\n  currentDigit = *nextChar;\n  isNegative = false;\n  if (currentDigit == '-') {\n    isNegative = true;\n    currentDigit = *currentChar;\n    remainingString = nextChar + 2;\n  }\n  else {\n    remainingString = currentChar;\n    if (currentDigit == '+') {\n      remainingString = nextChar + 2;\n      currentDigit = *currentChar;\n    }\n  }\n  intValue = 0;\n  fractionalDigitCount = '\\0';\n  digitCount = 0;\n  isFractional = false;\n  do {\n    digit = currentDigit - 0x30;\n    if (digit < 10) {\n      digitCount = digitCount + 1;\n      if (digitCount < 9) {\n        if (isFractional) {\n          fractionalDigitCount = fractionalDigitCount + -1;\n        }\n        intValue = (uint)digit + intValue * 10;\n      }\n      else if (!isFractional) {\n        fractionalDigitCount = fractionalDigitCount + '\\x01';\n      }\n    }\n    else {\n      if ((digit != 0xfe) || (isFractional)) {\n        if (digitCount == 0) {\n          returnValue = 0;\n        }\n        else {\n          fractionalPart = FUN_08008e3c(intValue);\n          conversionResult = FUN_08009214(fractionalPart,0);\n          if (conversionResult == 0) {\n            for (; fractionalDigitCount < -1; fractionalDigitCount = fractionalDigitCount + '\\x02') {\n              tempValue = FUN_08008590(fractionalPart);\n              tempValue = FUN_08008640((int)tempValue,(int)((ulonglong)tempValue >> 0x20),0x47ae147b,0x3f847ae1)\n              ;\n              fractionalPart = FUN_08008c30((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n            }\n            if (fractionalDigitCount < '\\0') {\n              tempValue = FUN_08008590(fractionalPart);\n              tempValue = FUN_08008640((int)tempValue,(int)((ulonglong)tempValue >> 0x20),0x9999999a,0x3fb99999)\n              ;\n              fractionalPart = FUN_08008c30((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n            }\n            else {\n              for (; '\\0' < fractionalDigitCount; fractionalDigitCount = fractionalDigitCount + -1) {\n                fractionalPart = FUN_08008eec(fractionalPart,0x41200000);\n              }\n            }\n          }\n          if (isNegative) {\n            *outputValue = fractionalPart ^ 0x80000000;\n          }\n          else {\n            *outputValue = fractionalPart;\n          }\n          *inputString = ((char)remainingString - (char)inputBaseAddress) - 1;\n          returnValue = 1;\n        }\n        return returnValue;\n      }\n      isFractional = true;\n    }\n    currentDigit = *remainingString;\n    remainingString = remainingString + 1;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08002638": "convert_string_to_int_08002638",
                "param_1": "inputBaseAddress",
                "param_2": "inputString",
                "param_3": "outputValue",
                "bVar1": "digit",
                "bVar2": "isNegative",
                "bVar3": "isFractional",
                "iVar4": "conversionResult",
                "pcVar5": "currentChar",
                "pcVar6": "nextChar",
                "uVar7": "returnValue",
                "uVar8": "tempValue",
                "local_1c": "fractionalPart",
                "local_16": "digitCount",
                "local_15": "fractionalDigitCount",
                "local_14": "intValue",
                "local_d": "currentDigit",
                "local_c": "remainingString"
            },
            "calling": [
                "FUN_0800184c",
                "FUN_08003b98"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08009214",
                "FUN_08008e3c",
                "FUN_08008eec",
                "FUN_08008640",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002814": {
            "entrypoint": "0x08002814",
            "current_name": "FUNC_08002814",
            "code": "\nvoid FUNC_08002814(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002814": "FUNC_08002814"
            },
            "calling": [
                "FUN_08001d4c",
                "FUN_08002408",
                "FUN_08004148"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002828": {
            "entrypoint": "0x08002828",
            "current_name": "FUNC_08002828",
            "code": "\nvoid FUNC_08002828(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002828": "FUNC_08002828"
            },
            "calling": [
                "FUN_08001994"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800283a": {
            "entrypoint": "0x0800283a",
            "current_name": "initialize_data_0800283a",
            "code": "\nvoid initialize_data_0800283a(void)\n\n{\n  FUN_080035ec(DAT_20000eac,DAT_20000eb0,DAT_20000eb4);\n  FUN_080004fc(DAT_20000eac,DAT_20000eb0,DAT_20000eb4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800283a": "initialize_data_0800283a"
            },
            "calling": [
                "FUN_08001ddc",
                "FUN_080024c4"
            ],
            "called": [
                "FUN_080035ec",
                "FUN_080004fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002870": {
            "entrypoint": "0x08002870",
            "current_name": "increment_and_limit_08002870",
            "code": "\nchar incrementAndLimit_08002870(char input)\n\n{\n  char result;\n  \n  result = input + '\\x01';\n  if (result == '\\x12') {\n    result = '\\0';\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002870": "increment_and_limit_08002870",
                "param_1": "input",
                "local_9": "result"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08002ef0",
                "FUN_08002e08",
                "FUN_08002ba8",
                "FUN_08002f40"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002896": {
            "entrypoint": "0x08002896",
            "current_name": "update_char_08002896",
            "code": "\nchar updateChar_08002896(char oldChar)\n\n{\n  char newChar;\n  \n  newChar = oldChar;\n  if (oldChar == '\\0') {\n    newChar = '\\x12';\n  }\n  return newChar + -1;\n}\n\n",
            "renaming": {
                "FUN_08002896": "update_char_08002896",
                "param_1": "oldChar",
                "local_9": "newChar"
            },
            "calling": [
                "FUN_08002a94"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080028bc": {
            "entrypoint": "0x080028bc",
            "current_name": "process_data_080028bc",
            "code": "\nundefined4 processData_080028bc(undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  \n  result1 = FUN_08008eec(input2,input2);\n  result2 = FUN_08008eec(input1,input1);\n  result1 = FUN_08008cd8(result1,result2);\n  result2 = FUN_08008cdc(input3,input3);\n  result1 = FUN_08009054(result1,result2);\n  return result1;\n}\n\n",
            "renaming": {
                "FUN_080028bc": "process_data_080028bc",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "uVar1": "result1",
                "uVar2": "result2"
            },
            "calling": [
                "FUN_08002c18"
            ],
            "called": [
                "FUN_08009054",
                "FUN_08008cd8",
                "FUN_08008eec",
                "FUN_08008cdc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002908": {
            "entrypoint": "0x08002908",
            "current_name": "calculate_result_08002908",
            "code": "\nundefined4 calculate_result_08002908(undefined4 value1,undefined4 value2,undefined4 value3,undefined4 value4)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  \n  result1 = FUN_08008cdc(value3,value3);\n  result1 = FUN_08008eec(result1,value4);\n  result2 = FUN_08008eec(value1,value1);\n  result1 = FUN_08008cd8(result1,result2);\n  result2 = FUN_08008eec(value2,value2);\n  result1 = FUN_08008cdc(result1,result2);\n  result2 = FUN_08008eec(value3,0x40800000);\n  result1 = FUN_08009054(result1,result2);\n  return result1;\n}\n\n",
            "renaming": {
                "FUN_08002908": "calculate_result_08002908",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4",
                "uVar1": "result1",
                "uVar2": "result2"
            },
            "calling": [
                "FUN_08002c18"
            ],
            "called": [
                "FUN_08008cd8",
                "FUN_08009054",
                "FUN_08008eec",
                "FUN_08008cdc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002978": {
            "entrypoint": "0x08002978",
            "current_name": "process_data_08002978",
            "code": "\nundefined4 processData_08002978(undefined4 inputParam,undefined4 secondParam,undefined4 thirdParam)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  undefined8 finalResult;\n  \n  result1 = FUN_08008eec(secondParam,secondParam);\n  result2 = FUN_08008cdc(inputParam,inputParam);\n  result2 = FUN_08008eec(result2,thirdParam);\n  result1 = FUN_08008cd8(result1,result2);\n  finalResult = FUN_08008590(result1);\n  finalResult = FUN_080098d0((int)finalResult,(int)((ulonglong)finalResult >> 0x20));\n  result1 = FUN_08008c30((int)finalResult,(int)((ulonglong)finalResult >> 0x20));\n  return result1;\n}\n\n",
            "renaming": {
                "FUN_08002978": "process_data_08002978",
                "param_1": "inputParam",
                "param_2": "secondParam",
                "param_3": "thirdParam",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "finalResult"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08002afc",
                "FUN_080029d8"
            ],
            "called": [
                "FUN_08008590",
                "FUN_080098d0",
                "FUN_08008cd8",
                "FUN_08008eec",
                "FUN_08008cdc",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080029d8": {
            "entrypoint": "0x080029d8",
            "current_name": "initialize_data_080029d8",
            "code": "\nvoid initializeData_080029d8(undefined4 param,int dataPointer,int auxillaryPointer)\n\n{\n  int result;\n  undefined4 updatedValue1;\n  undefined4 updatedValue2;\n  \n  if (((dataPointer != 0) && (auxillaryPointer != 0)) &&\n     (result = FUN_08009214(*(undefined4 *)(dataPointer + 0x18),*(undefined4 *)(dataPointer + 0x1c)),\n     result == 0)) {\n    if ((*(char *)(dataPointer + 0x25) == '\\0') &&\n       (result = FUN_08009264(*(undefined4 *)(dataPointer + 0x1c),*(undefined4 *)(auxillaryPointer + 0x18)),\n       result != 0)) {\n      updatedValue2 = *(undefined4 *)(dataPointer + 0x1c);\n      updatedValue1 = FUN_08002978(DAT_20000edc ^ 0x80000000,*(undefined4 *)(auxillaryPointer + 0x18),\n                           *(undefined4 *)(dataPointer + 0x20));\n      result = FUN_08009228(updatedValue2,updatedValue1);\n      if (result == 0) {\n        updatedValue1 = FUN_08002978(DAT_20000edc ^ 0x80000000,*(undefined4 *)(auxillaryPointer + 0x18),\n                             *(undefined4 *)(dataPointer + 0x20));\n      }\n      else {\n        updatedValue1 = *(undefined4 *)(dataPointer + 0x1c);\n      }\n      *(undefined4 *)(dataPointer + 0x18) = updatedValue1;\n    }\n    else {\n      *(undefined4 *)(dataPointer + 0x18) = *(undefined4 *)(dataPointer + 0x1c);\n    }\n    *(undefined *)(dataPointer + 0x24) = 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080029d8": "initialize_data_080029d8",
                "param_1": "param",
                "param_2": "dataPointer",
                "param_3": "auxillaryPointer",
                "iVar1": "result",
                "uVar2": "updatedValue1",
                "uVar3": "updatedValue2"
            },
            "calling": [
                "FUN_08002a94"
            ],
            "called": [
                "FUN_08009228",
                "FUN_08009214",
                "FUN_08009264",
                "FUN_08002978"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a94": {
            "entrypoint": "0x08002a94",
            "current_name": "process_data_08002a94",
            "code": "\nvoid process_data_08002a94(void)\n\n{\n  undefined *temp_ptr;\n  undefined *current_data;\n  undefined *previous_data;\n  byte input_byte;\n  \n  input_byte = DAT_20000cf0;\n  current_data = (undefined *)0x0;\n  previous_data = (undefined *)0x0;\n  while (temp_ptr = previous_data, input_byte != DAT_20000cf1) {\n    input_byte = FUN_08002896(input_byte);\n    previous_data = current_data;\n    FUN_080029d8(&DAT_20000870 + (uint)input_byte * 0x40,current_data,temp_ptr);\n    current_data = &DAT_20000870 + (uint)input_byte * 0x40;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002a94": "process_data_08002a94",
                "local_9": "input_byte",
                "local_18": "current_data",
                "local_14": "previous_data",
                "puVar1": "temp_ptr"
            },
            "calling": [
                "FUN_08002edc"
            ],
            "called": [
                "FUN_08002896",
                "FUN_080029d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002afc": {
            "entrypoint": "0x08002afc",
            "current_name": "check_and_update_params_08002afc",
            "code": "\nvoid checkAndUpdateParams_08002afc(int paramA,int paramB)\n\n{\n  int result;\n  undefined4 updatedVarA;\n  undefined4 updatedVarB;\n  \n  if (((paramA != 0) && (*(char *)(paramA + 0x25) == '\\0')) &&\n     (result = FUN_08009228(*(undefined4 *)(paramA + 0x18),*(undefined4 *)(paramB + 0x18)),\n     result != 0)) {\n    updatedVarB = *(undefined4 *)(paramB + 0x18);\n    updatedVarA = FUN_08002978(DAT_20000edc ^ 0x80000000,*(undefined4 *)(paramA + 0x18),\n                         *(undefined4 *)(paramA + 0x20));\n    result = FUN_08009228(updatedVarB,updatedVarA);\n    if (result == 0) {\n      updatedVarA = FUN_08002978(DAT_20000edc ^ 0x80000000,*(undefined4 *)(paramA + 0x18),\n                           *(undefined4 *)(paramA + 0x20));\n    }\n    else {\n      updatedVarA = *(undefined4 *)(paramB + 0x18);\n    }\n    result = FUN_08009214(updatedVarA,*(undefined4 *)(paramB + 0x18));\n    if (result == 0) {\n      *(undefined4 *)(paramB + 0x18) = updatedVarA;\n      *(undefined *)(paramB + 0x24) = 1;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002afc": "check_and_update_params_08002afc",
                "param_1": "paramA",
                "param_2": "paramB",
                "iVar1": "result",
                "uVar2": "updatedVarA",
                "uVar3": "updatedVarB"
            },
            "calling": [
                "FUN_08002ba8"
            ],
            "called": [
                "FUN_08009228",
                "FUN_08009214",
                "FUN_08002978"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ba8": {
            "entrypoint": "0x08002ba8",
            "current_name": "process_data_08002ba8",
            "code": "\nvoid processData_08002ba8(void)\n\n{\n  uint currentByteAsUInt;\n  undefined *previousPointerTemp;\n  undefined *previousPointerFinal;\n  undefined *previousPointer;\n  undefined *currentPointer;\n  byte currentByte;\n  \n  previousPointer = (undefined *)0x0;\n  currentPointer = (undefined *)0x0;\n  currentByte = DAT_20000cf1;\n  previousPointerFinal = (undefined *)0x0;\n  while (previousPointerTemp = previousPointer, currentByte != DAT_20000cf0) {\n    previousPointer = currentPointer;\n    currentByteAsUInt = (uint)currentByte;\n    FUN_08002afc(previousPointerTemp,currentPointer,&DAT_20000870 + currentByteAsUInt * 0x40);\n    currentByte = FUN_08002870(currentByte);\n    previousPointerFinal = previousPointerTemp;\n    currentPointer = &DAT_20000870 + currentByteAsUInt * 0x40;\n  }\n  FUN_08002afc(previousPointer,currentPointer,0,previousPointer,previousPointerFinal);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ba8": "process_data_08002ba8",
                "local_14": "previousPointer",
                "local_10": "currentPointer",
                "local_9": "currentByte",
                "puVar2": "previousPointerTemp",
                "puVar3": "previousPointerFinal",
                "uVar1": "currentByteAsUInt"
            },
            "calling": [
                "FUN_08002edc"
            ],
            "called": [
                "FUN_08002afc",
                "FUN_08002870"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c18": {
            "entrypoint": "0x08002c18",
            "current_name": "calculate_data_offset_08002c18",
            "code": "\nvoid calculate_data_offset_08002c18(int data_struct,undefined4 param_2,undefined4 param_3)\n\n{\n  undefined4 section_offset;\n  int temp_var;\n  undefined4 section_param_2;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  uint uVar6;\n  undefined8 result;\n  int result_2;\n  uint section_size;\n  \n  section_offset = FUN_08008e3c(*(undefined4 *)(data_struct + 0x3c));\n  section_offset = FUN_08008eec(section_offset,param_2);\n  result = FUN_08008590(section_offset);\n  result = FUN_08009318((int)result,(int)((ulonglong)result >> 0x20));\n  section_offset = FUN_08008bf0((int)result,(int)((ulonglong)result >> 0x20));\n  *(undefined4 *)(data_struct + 0x28) = section_offset;\n  section_offset = FUN_08008e3c(*(undefined4 *)(data_struct + 0x3c));\n  section_offset = FUN_08008eec(section_offset,param_3);\n  result = FUN_08008590(section_offset);\n  result = FUN_08009318((int)result,(int)((ulonglong)result >> 0x20));\n  section_offset = FUN_08008bf0((int)result,(int)((ulonglong)result >> 0x20));\n  *(undefined4 *)(data_struct + 0x2c) = section_offset;\n  result = FUN_0800856c(*(int *)(data_struct + 0x30) * 0x32);\n  result = FUN_08008640((int)result,(int)((ulonglong)result >> 0x20),0,0x404e0000);\n  temp_var = FUN_08008ba0((int)result,(int)((ulonglong)result >> 0x20));\n  section_offset = FUN_08008e3c(*(undefined4 *)(data_struct + 0x28));\n  section_param_2 = FUN_08008e3c(*(undefined4 *)(data_struct + 0x3c));\n  uVar4 = FUNC_08008e44(temp_var);\n  section_offset = FUN_080028bc(section_offset,section_param_2,uVar4);\n  result = FUN_08008590(section_offset);\n  result = FUN_08009318((int)result,(int)((ulonglong)result >> 0x20));\n  section_size = FUN_08008ba0((int)result,(int)((ulonglong)result >> 0x20));\n  section_offset = FUN_08008e3c(*(undefined4 *)(data_struct + 0x3c));\n  section_param_2 = FUN_08008e3c(*(undefined4 *)(data_struct + 0x2c));\n  uVar4 = FUNC_08008e44(-temp_var);\n  section_offset = FUN_080028bc(section_offset,section_param_2,uVar4);\n  result = FUN_08008590(section_offset);\n  result = FUN_080094c0((int)result,(int)((ulonglong)result >> 0x20));\n  result_2 = FUN_08008ba0((int)result,(int)((ulonglong)result >> 0x20));\n  result_2 = (*(int *)(data_struct + 0x10) - section_size) - result_2;\n  if (result_2 < 0) {\n    section_offset = FUN_08008e3c(*(undefined4 *)(data_struct + 0x28));\n    section_param_2 = FUN_08008e3c(*(undefined4 *)(data_struct + 0x2c));\n    uVar4 = FUNC_08008e44(temp_var);\n    uVar5 = FUNC_08008e44(*(undefined4 *)(data_struct + 0x10));\n    section_offset = FUN_08002908(section_offset,section_param_2,uVar4,uVar5);\n    result = FUN_08008590(section_offset);\n    result = FUN_08009318((int)result,(int)((ulonglong)result >> 0x20));\n    uVar6 = FUN_08008ba0((int)result,(int)((ulonglong)result >> 0x20));\n    uVar6 = uVar6 & ~((int)uVar6 >> 0x1f);\n    section_size = *(uint *)(data_struct + 0x10);\n    if ((int)uVar6 <= (int)*(uint *)(data_struct + 0x10)) {\n      section_size = uVar6;\n    }\n    result_2 = 0;\n  }\n  *(uint *)(data_struct + 0x34) = section_size;\n  *(uint *)(data_struct + 0x38) = result_2 + section_size;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c18": "calculate_data_offset_08002c18",
                "param_1": "data_struct",
                "uVar1": "section_offset",
                "iVar2": "temp_var",
                "uVar3": "section_param_2",
                "uVar7": "result",
                "local_20": "result_2",
                "local_1c": "section_size"
            },
            "calling": [
                "FUN_08002e08"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08002908",
                "FUN_08008e44",
                "FUN_0800856c",
                "FUN_080094c0",
                "FUN_08008ba0",
                "FUN_08009318",
                "FUN_08008e3c",
                "FUN_08008eec",
                "FUN_080028bc",
                "FUN_08008640",
                "FUN_08008bf0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002e08": {
            "entrypoint": "0x08002e08",
            "current_name": "process_data_08002e08",
            "code": "\nvoid processData_08002e08(void)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  int index;\n  undefined *dataPtr;\n  byte currentByte;\n  \n  dataPtr = (undefined *)0x0;\n  currentByte = DAT_20000cf1;\n  while (currentByte != DAT_20000cf0) {\n    index = (uint)currentByte * 0x40;\n    if ((dataPtr != (undefined *)0x0) &&\n       ((dataPtr[0x24] != '\\0' || ((&DAT_20000894)[index] != '\\0')))) {\n      result1 = FUN_08009054(*(undefined4 *)(dataPtr + 0x18),*(undefined4 *)(dataPtr + 0x14));\n      result2 = FUN_08009054(*(undefined4 *)(&DAT_20000888 + index),*(undefined4 *)(dataPtr + 0x14));\n      FUN_08002c18(dataPtr,result1,result2);\n      dataPtr[0x24] = 0;\n    }\n    currentByte = FUN_08002870(currentByte);\n    dataPtr = &DAT_20000870 + index;\n  }\n  result1 = FUN_08009054(*(undefined4 *)(dataPtr + 0x18),*(undefined4 *)(dataPtr + 0x14));\n  result2 = FUN_08009054(0,*(undefined4 *)(dataPtr + 0x14));\n  FUN_08002c18(dataPtr,result1,result2);\n  dataPtr[0x24] = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002e08": "process_data_08002e08",
                "local_18": "dataPtr",
                "local_11": "currentByte",
                "iVar3": "index",
                "uVar1": "result1",
                "uVar2": "result2"
            },
            "calling": [
                "FUN_08002edc"
            ],
            "called": [
                "FUN_08009054",
                "FUN_08002870",
                "FUN_08002c18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002edc": {
            "entrypoint": "0x08002edc",
            "current_name": "initialize_components_08002edc",
            "code": "\nvoid initialize_components_08002edc(void)\n\n{\n  FUN_08002a94();\n  FUN_08002ba8();\n  FUN_08002e08();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002edc": "initialize_components_08002edc"
            },
            "calling": [
                "FUN_08003618",
                "FUN_08003004"
            ],
            "called": [
                "FUN_08002e08",
                "FUN_08002a94",
                "FUN_08002ba8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ef0": {
            "entrypoint": "0x08002ef0",
            "current_name": "initialize_data_08002ef0",
            "code": "\nvoid initializeData_08002ef0(void)\n\n{\n  DAT_20000cf1 = DAT_20000cf0;\n  DAT_20000cf2 = FUN_08002870(DAT_20000cf0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ef0": "initialize_data_08002ef0"
            },
            "calling": [
                "FUN_08002f24"
            ],
            "called": [
                "FUN_08002870"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f24": {
            "entrypoint": "0x08002f24",
            "current_name": "initialize_data_08002f24",
            "code": "\nvoid initializeData_08002f24(void)\n\n{\n  FUN_08002ef0();\n  FUN_0800b430(&DAT_20000cf4,0,0x1c);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f24": "initialize_data_08002f24"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_0800b430",
                "FUN_08002ef0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f40": {
            "entrypoint": "0x08002f40",
            "current_name": "update_data_if_needed_08002f40",
            "code": "\nvoid updateDataIfNeeded_08002f40(void)\n\n{\n  if (DAT_20000cf0 != DAT_20000cf1) {\n    DAT_20000cf1 = FUN_08002870(DAT_20000cf1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f40": "update_data_if_needed_08002f40"
            },
            "calling": [
                "FUN_080053a0"
            ],
            "called": [
                "FUN_08002870"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f74": {
            "entrypoint": "0x08002f74",
            "current_name": "get_current_data_ptr_08002f74",
            "code": "\nundefined * get_current_data_ptr_08002f74(void)\n\n{\n  undefined *puVar1;\n  \n  if (DAT_20000cf0 == DAT_20000cf1) {\n    puVar1 = (undefined *)0x0;\n  }\n  else {\n    puVar1 = &DAT_20000870 + (uint)DAT_20000cf1 * 0x40;\n  }\n  return puVar1;\n}\n\n",
            "renaming": {
                "FUN_08002f74": "get_current_data_ptr_08002f74"
            },
            "calling": [
                "FUN_080053a0",
                "FUN_08002fd4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fac": {
            "entrypoint": "0x08002fac",
            "current_name": "are_equal_08002fac",
            "code": "\nbool areEqual_08002fac(void)\n\n{\n  return DAT_20000cf1 == DAT_20000cf2;\n}\n\n",
            "renaming": {
                "FUN_08002fac": "are_equal_08002fac"
            },
            "calling": [
                "FUN_08001e98"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fd4": {
            "entrypoint": "0x08002fd4",
            "current_name": "process_data_08002fd4",
            "code": "\nvoid processData_08002fd4(void)\n\n{\n  int result;\n  \n  while ((result = FUN_08002f74(), result != 0 || (DAT_20000ea9 == '\\x03'))) {\n    FUN_08003a74();\n    if (DAT_20000ea8 != '\\0') {\n      return;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002fd4": "process_data_08002fd4",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800525c",
                "FUN_08000220",
                "FUN_080005b4",
                "FUN_08002408",
                "FUN_080024c4"
            ],
            "called": [
                "FUN_08003a74",
                "FUN_08002f74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003004": {
            "entrypoint": "0x08003004",
            "current_name": "calculate_improvement_08003004",
            "code": "\nvoid calculateImprovement_08003004(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4,\n                 char flag)\n\n{\n  undefined4 result1;\n  int value1;\n  int value2;\n  int value3;\n  undefined4 result2;\n  undefined4 result3;\n  undefined4 result4;\n  undefined4 result5;\n  uint maxValue;\n  int index;\n  ushort *resultArray;\n  int absoluteDiff;\n  uint maxDiff;\n  undefined8 temp1;\n  undefined8 temp2;\n  undefined8 temp3;\n  undefined4 tempResult;\n  undefined4 tempFlag;\n  \n  index = (uint)DAT_20000cf0 * 0x40;\n  resultArray = (ushort *)(&DAT_20000870 + index);\n  result1 = FUN_08008eec(DAT_20000ebc,input1);\n  temp1 = FUN_08008590(result1);\n  value1 = FUN_080095b8((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  result1 = FUN_08008eec(DAT_20000ec0,input2);\n  temp1 = FUN_08008590(result1);\n  value2 = FUN_080095b8((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  result1 = FUN_08008eec(DAT_20000ec4,input3);\n  temp1 = FUN_08008590(result1);\n  value3 = FUN_080095b8((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  *resultArray = 0;\n  if (value1 < DAT_20000cf4) {\n    *resultArray = *resultArray | 0x20;\n  }\n  if (value2 < DAT_20000cf8) {\n    *resultArray = *resultArray | 0x880;\n  }\n  if (value3 < DAT_20000cfc) {\n    *resultArray = *resultArray | 0x200;\n  }\n  absoluteDiff = value1 - DAT_20000cf4;\n  if (absoluteDiff < 0) {\n    absoluteDiff = -absoluteDiff;\n  }\n  *(int *)(&DAT_20000874 + index) = absoluteDiff;\n  absoluteDiff = value2 - DAT_20000cf8;\n  if (absoluteDiff < 0) {\n    absoluteDiff = -absoluteDiff;\n  }\n  *(int *)(&DAT_20000878 + index) = absoluteDiff;\n  absoluteDiff = value3 - DAT_20000cfc;\n  if (absoluteDiff < 0) {\n    absoluteDiff = -absoluteDiff;\n  }\n  *(int *)(&DAT_2000087c + index) = absoluteDiff;\n  maxValue = *(uint *)(&DAT_2000087c + index);\n  if (*(uint *)(&DAT_2000087c + index) < *(uint *)(&DAT_20000878 + index)) {\n    maxValue = *(uint *)(&DAT_20000878 + index);\n  }\n  maxDiff = *(uint *)(&DAT_20000874 + index);\n  if (*(uint *)(&DAT_20000874 + index) < maxValue) {\n    maxDiff = maxValue;\n  }\n  *(uint *)(&DAT_20000880 + index) = maxDiff;\n  if (*(int *)(&DAT_20000880 + index) != 0) {\n    result1 = FUNC_08008e44(value1 - DAT_20000cf4);\n    result1 = FUN_08009054(result1,DAT_20000ebc);\n    result2 = FUNC_08008e44(value2 - DAT_20000cf8);\n    result2 = FUN_08009054(result2,DAT_20000ec0);\n    result3 = FUNC_08008e44(value3 - DAT_20000cfc);\n    result3 = FUN_08009054(result3,DAT_20000ec4);\n    result4 = FUN_08008eec(result1,result1);\n    result5 = FUN_08008eec(result2,result2);\n    result4 = FUN_08008cdc(result4,result5);\n    result5 = FUN_08008eec(result3,result3);\n    result4 = FUN_08008cdc(result4,result5);\n    temp1 = FUN_08008590(result4);\n    temp1 = FUN_080098d0((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n    result4 = FUN_08008c30((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n    *(undefined4 *)(&DAT_20000890 + index) = result4;\n    result4 = FUN_08009054(0x3f800000,*(undefined4 *)(&DAT_20000890 + index));\n    if (flag == '\\0') {\n      tempFlag = FUN_08008eec(input4,result4);\n    }\n    else {\n      tempFlag = FUN_08009054(0x3f800000,input4);\n    }\n    result5 = FUN_08008eec(*(undefined4 *)(&DAT_20000890 + index),tempFlag);\n    *(undefined4 *)(&DAT_20000884 + index) = result5;\n    result5 = FUNC_08008e44(*(undefined4 *)(&DAT_20000880 + index));\n    result5 = FUN_08008eec(result5,tempFlag);\n    temp1 = FUN_08008590(result5);\n    temp1 = FUN_08009318((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n    result5 = FUN_08008bf0((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n    *(undefined4 *)(&DAT_200008ac + index) = result5;\n    result5 = FUNC_08008e44(*(undefined4 *)(&DAT_20000880 + index));\n    result5 = FUN_08008eec(result5,result4);\n    result5 = FUN_08008eec(result5,DAT_20000edc);\n    result5 = FUN_08009054(result5,0x453b8000);\n    temp1 = FUN_08008590(result5);\n    temp1 = FUN_08009318((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n    result5 = FUN_08008ba0((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n    *(undefined4 *)(&DAT_200008a0 + index) = result5;\n    maxValue = FUN_08008eec(result1,result4);\n    result1 = FUN_08008eec(result2,result4);\n    result2 = FUN_08008eec(result3,result4);\n    tempResult = 0;\n    if ((DAT_20000cf0 != DAT_20000cf1) && (absoluteDiff = FUN_08009264(DAT_20000d0c,0), absoluteDiff != 0)) {\n      result3 = FUN_08008eec(DAT_20000d00 ^ 0x80000000,maxValue);\n      result4 = FUN_08008eec(DAT_20000d04,result1);\n      result3 = FUN_08008cd8(result3,result4);\n      result4 = FUN_08008eec(DAT_20000d08,result2);\n      result3 = FUN_08008cd8(result3,result4);\n      temp1 = FUN_08008590(result3);\n      absoluteDiff = FUN_08008b24((int)temp1,(int)((ulonglong)temp1 >> 0x20),0x66666666,0x3fee6666);\n      if (absoluteDiff != 0) {\n        absoluteDiff = FUN_08009228(DAT_20000d0c,*(undefined4 *)(&DAT_20000884 + index));\n        tempResult = DAT_20000d0c;\n        if (absoluteDiff == 0) {\n          tempResult = *(undefined4 *)(&DAT_20000884 + index);\n        }\n        temp1 = FUN_08008590(result3);\n        absoluteDiff = FUN_08008b60((int)temp1,(int)((ulonglong)temp1 >> 0x20),0x66666666,0xbfee6666);\n        if (absoluteDiff != 0) {\n          temp1 = FUN_08008590(result3);\n          temp1 = FUN_080082d0(0,0x3ff00000,(int)temp1,(int)((ulonglong)temp1 >> 0x20));\n          temp1 = FUN_08008640((int)temp1,(int)((ulonglong)temp1 >> 0x20),0,0x3fe00000);\n          temp1 = FUN_080098d0((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n          result3 = FUN_08008c30((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n          temp1 = FUN_08008590(tempResult);\n          result4 = FUN_08008eec(DAT_20000edc,DAT_20000ee0);\n          result4 = FUN_08008eec(result4,result3);\n          temp2 = FUN_08008590(result4);\n          temp3 = FUN_08008590(result3);\n          temp3 = FUN_080082d0(0,0x3ff00000,(int)temp3,(int)((ulonglong)temp3 >> 0x20));\n          temp2 = FUN_08008894((int)temp2,(int)((ulonglong)temp2 >> 0x20),(int)temp3,\n                                (int)((ulonglong)temp3 >> 0x20));\n          temp2 = FUN_080098d0((int)temp2,(int)((ulonglong)temp2 >> 0x20));\n          absoluteDiff = FUN_08008b24((int)temp1,(int)((ulonglong)temp1 >> 0x20),(int)temp2,\n                                (int)((ulonglong)temp2 >> 0x20));\n          if (absoluteDiff == 0) {\n            result4 = FUN_08008eec(DAT_20000edc,DAT_20000ee0);\n            result4 = FUN_08008eec(result4,result3);\n            temp1 = FUN_08008590(result4);\n            temp2 = FUN_08008590(result3);\n            temp2 = FUN_080082d0(0,0x3ff00000,(int)temp2,(int)((ulonglong)temp2 >> 0x20));\n            temp1 = FUN_08008894((int)temp1,(int)((ulonglong)temp1 >> 0x20),(int)temp2,\n                                  (int)((ulonglong)temp2 >> 0x20));\n            temp1 = FUN_080098d0((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n            tempResult = FUN_08008c30((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n          }\n        }\n      }\n    }\n    *(undefined4 *)(&DAT_2000088c + index) = tempResult;\n    result4 = FUN_08002978(DAT_20000edc ^ 0x80000000,0,*(undefined4 *)(&DAT_20000890 + index));\n    absoluteDiff = FUN_08009228(tempResult,result4);\n    result3 = result4;\n    if (absoluteDiff != 0) {\n      result3 = tempResult;\n    }\n    *(undefined4 *)(&DAT_20000888 + index) = result3;\n    absoluteDiff = FUN_08009250(result4,*(undefined4 *)(&DAT_20000884 + index));\n    if (absoluteDiff == 0) {\n      (&DAT_20000895)[index] = 0;\n    }\n    else {\n      (&DAT_20000895)[index] = 1;\n    }\n    (&DAT_20000894)[index] = 1;\n    DAT_20000d0c = *(undefined4 *)(&DAT_20000884 + index);\n    DAT_20000cf0 = DAT_20000cf2;\n    DAT_20000d00 = maxValue;\n    DAT_20000d04 = result1;\n    DAT_20000d08 = result2;\n    DAT_20000cf2 = FUN_08002870(DAT_20000cf2);\n    DAT_20000cf4 = value1;\n    DAT_20000cf8 = value2;\n    DAT_20000cfc = value3;\n    FUN_08002edc();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003004": "calculate_improvement_08003004",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "param_5": "flag",
                "uVar1": "result1",
                "iVar2": "value1",
                "iVar3": "value2",
                "iVar4": "value3",
                "uVar5": "result2",
                "uVar6": "result3",
                "uVar7": "result4",
                "uVar8": "result5",
                "uVar9": "maxValue",
                "iVar12": "absoluteDiff",
                "uVar13": "maxDiff",
                "puVar11": "resultArray",
                "iVar10": "index",
                "local_20": "tempResult",
                "local_1c": "tempFlag",
                "uVar14": "temp1",
                "uVar15": "temp2",
                "uVar16": "temp3"
            },
            "calling": [
                "FUN_08001e98"
            ],
            "called": [
                "FUN_080095b8",
                "FUN_08009054",
                "FUN_08008e44",
                "FUN_08008cd8",
                "FUN_08009318",
                "FUN_08008ba0",
                "FUN_08002870",
                "FUN_08008b60",
                "FUN_08009264",
                "FUN_08008894",
                "FUN_08008640",
                "FUN_08008bf0",
                "FUN_08008b24",
                "FUN_08008590",
                "FUN_080082d0",
                "FUN_08009228",
                "FUN_080098d0",
                "FUN_08008eec",
                "FUN_08009250",
                "FUN_08002978",
                "FUN_08008cdc",
                "FUN_08008c30",
                "FUN_08002edc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080035ec": {
            "entrypoint": "0x080035ec",
            "current_name": "initialize_parameters_080035ec",
            "code": "\nvoid initializeParameters_080035ec(undefined4 parameter1,undefined4 parameter2,undefined4 parameter3)\n\n{\n  DAT_20000cf4 = parameter1;\n  DAT_20000cf8 = parameter2;\n  DAT_20000cfc = parameter3;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080035ec": "initialize_parameters_080035ec",
                "param_1": "parameter1",
                "param_2": "parameter2",
                "param_3": "parameter3"
            },
            "calling": [
                "FUN_0800283a"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003618": {
            "entrypoint": "0x08003618",
            "current_name": "initialize_data_08003618",
            "code": "\nvoid initializeData_08003618(undefined4 inputData)\n\n{\n  undefined4 result1;\n  int index;\n  undefined4 data;\n  \n  index = (uint)DAT_20000cf1 * 0x40;\n  data = *(undefined4 *)(&DAT_20000890 + index);\n  result1 = FUNC_08008e44(inputData);\n  result1 = FUN_08008eec(data,result1);\n  data = FUNC_08008e44(*(undefined4 *)(&DAT_20000880 + index));\n  result1 = FUN_08009054(result1,data);\n  *(undefined4 *)(&DAT_20000890 + index) = result1;\n  *(undefined4 *)(&DAT_20000880 + index) = inputData;\n  *(undefined4 *)(&DAT_20000888 + index) = 0;\n  *(undefined4 *)(&DAT_2000088c + index) = 0;\n  (&DAT_20000895)[index] = 0;\n  (&DAT_20000894)[index] = 1;\n  FUN_08002edc();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003618": "initialize_data_08003618",
                "param_1": "inputData",
                "uVar1": "result1",
                "iVar2": "index",
                "uVar3": "data"
            },
            "calling": [
                "FUN_080058a0"
            ],
            "called": [
                "FUN_08009054",
                "FUN_08008e44",
                "FUN_08008eec",
                "FUN_08002edc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800369c": {
            "entrypoint": "0x0800369c",
            "current_name": "process_string_0800369c",
            "code": "\nvoid process_string_0800369c(char *input_string)\n\n{\n  char *current_character;\n  \n  current_character = input_string;\n  while (*current_character != '\\0') {\n    FUN_08008250(*current_character);\n    current_character = current_character + 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800369c": "process_string_0800369c",
                "param_1": "input_string",
                "local_c": "current_character"
            },
            "calling": [
                "FUN_08004900",
                "FUN_080039bc"
            ],
            "called": [
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036c6": {
            "entrypoint": "0x080036c6",
            "current_name": "process_string_080036c6",
            "code": "\nvoid processString_080036c6(char *inputString)\n\n{\n  char *currentChar;\n  \n  currentChar = inputString;\n  while (*currentChar != '\\0') {\n    FUN_08008250(*currentChar);\n    currentChar = currentChar + 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080036c6": "process_string_080036c6",
                "param_1": "inputString",
                "local_c": "currentChar"
            },
            "calling": [
                "FUN_0800423c",
                "FUN_08004250",
                "FUN_08004940",
                "FUN_08004900",
                "FUN_080044e8",
                "FUN_08004228",
                "FUN_080046d0",
                "FUN_08004030",
                "FUN_080041a0",
                "FUN_08004148"
            ],
            "called": [
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036f0": {
            "entrypoint": "0x080036f0",
            "current_name": "print_binary_digits_080036f0",
            "code": "\nvoid printBinaryDigits_080036f0(uint numberToPrint,int numDigits)\n\n{\n  undefined4 uVar1;\n  int digitIndex;\n  uint mask;\n  \n  mask = 1 << (numDigits - 1U & 0xff);\n  for (digitIndex = 0; digitIndex < numDigits; digitIndex = digitIndex + 1) {\n    if ((mask & numberToPrint) == 0) {\n      uVar1 = 0x30;\n    }\n    else {\n      uVar1 = 0x31;\n    }\n    FUN_08008250(uVar1);\n    mask = mask >> 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080036f0": "print_binary_digits_080036f0",
                "param_1": "numberToPrint",
                "param_2": "numDigits",
                "local_10": "digitIndex",
                "local_c": "mask"
            },
            "calling": [
                "FUN_08003740",
                "FUN_0800375c"
            ],
            "called": [
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003740": {
            "entrypoint": "0x08003740",
            "current_name": "initialize_memory_08003740",
            "code": "\nvoid initialize_memory_08003740(undefined memory_address)\n\n{\n  FUN_080036f0(memory_address,8);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003740": "initialize_memory_08003740",
                "param_1": "memory_address"
            },
            "calling": [],
            "called": [
                "FUN_080036f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800375c": {
            "entrypoint": "0x0800375c",
            "current_name": "initialize_data_0800375c",
            "code": "\nvoid initialize_data_0800375c(undefined2 data)\n\n{\n  FUN_080036f0(data,0x10);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800375c": "initialize_data_0800375c",
                "param_1": "data"
            },
            "calling": [
                "FUN_08004250"
            ],
            "called": [
                "FUN_080036f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003778": {
            "entrypoint": "0x08003778",
            "current_name": "convert_number_to_ascii_08003778",
            "code": "\nvoid convertNumberToASCII_08003778(uint number)\n\n{\n  uint tempVar1;\n  uint remainder;\n  char asciiDigits [12];\n  byte numDigits;\n  \n  numDigits = 0;\n  remainder = number;\n  if (number == 0) {\n    FUN_08008250(0x30);\n  }\n  else {\n    for (; remainder != 0; remainder = remainder / 10) {\n      tempVar1 = (uint)numDigits;\n      numDigits = numDigits + 1;\n      asciiDigits[tempVar1 + 1] = (char)(remainder % 10) + '0';\n    }\n    for (; numDigits != 0; numDigits = numDigits - 1) {\n      FUN_08008250(asciiDigits[numDigits]);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003778": "convert_number_to_ascii_08003778",
                "param_1": "number",
                "uVar1": "tempVar1",
                "local_1c": "remainder",
                "acStack_15": "asciiDigits",
                "local_9": "numDigits"
            },
            "calling": [
                "FUN_080037fc"
            ],
            "called": [
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080037fc": {
            "entrypoint": "0x080037fc",
            "current_name": "print_absolute_value_080037fc",
            "code": "\nvoid printAbsoluteValue_080037fc(int value)\n\n{\n  int absoluteValue;\n  \n  absoluteValue = value;\n  if (value < 0) {\n    FUN_08008250(0x2d);\n    absoluteValue = -value;\n  }\n  FUN_08003778(absoluteValue);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080037fc": "print_absolute_value_080037fc",
                "param_1": "value",
                "local_c": "absoluteValue"
            },
            "calling": [
                "FUN_08004250",
                "FUN_08004900",
                "FUN_080046d0"
            ],
            "called": [
                "FUN_08003778",
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003826": {
            "entrypoint": "0x08003826",
            "current_name": "convert_to_decimal_08003826",
            "code": "\nvoid convertToDecimal_08003826(uint input)\n\n{\n  int result;\n  undefined4 decimalValue;\n  byte digit;\n  uint index;\n  uint tempValue;\n  char decimalString [13];\n  uint dividend;\n  byte i;\n  byte iteration;\n  \n  result = FUN_08009228(input,0);\n  tempValue = input;\n  if (result != 0) {\n    FUN_08008250(0x2d);\n    tempValue = input ^ 0x80000000;\n  }\n  for (iteration = DAT_20000ef9; 1 < iteration; iteration = iteration - 2) {\n    tempValue = FUN_08008eec(tempValue,0x42c80000);\n  }\n  if (iteration != 0) {\n    tempValue = FUN_08008eec(tempValue,0x41200000);\n  }\n  decimalValue = FUN_08008cdc(tempValue,0x3f000000);\n  i = 0;\n  dividend = FUN_08009278(decimalValue);\n  decimalString[DAT_20000ef9 + 1] = '.';\n  for (; dividend != 0; dividend = dividend / 10) {\n    if (i == DAT_20000ef9) {\n      i = i + 1;\n    }\n    index = (uint)i;\n    i = i + 1;\n    decimalString[index + 1] = (char)(dividend % 10) + '0';\n  }\n  while (i < DAT_20000ef9) {\n    index = (uint)i;\n    i = i + 1;\n    decimalString[index + 1] = '0';\n  }\n  if (i == DAT_20000ef9) {\n    digit = i + 1;\n    i = i + 2;\n    decimalString[digit + 1] = '0';\n  }\n  for (; i != 0; i = i - 1) {\n    FUN_08008250(decimalString[i]);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003826": "convert_to_decimal_08003826",
                "param_1": "input",
                "iVar1": "result",
                "uVar2": "decimalValue",
                "bVar3": "digit",
                "uVar4": "index",
                "local_24": "tempValue",
                "acStack_1d": "decimalString",
                "local_10": "dividend",
                "local_a": "i",
                "local_9": "iteration"
            },
            "calling": [
                "FUN_08004250",
                "FUN_08004940",
                "FUN_080044e8",
                "FUN_080046d0"
            ],
            "called": [
                "FUN_08009228",
                "FUN_08009278",
                "FUN_08008eec",
                "FUN_08008cdc",
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003980": {
            "entrypoint": "0x08003980",
            "current_name": "initialize_data_08003980",
            "code": "\nvoid initializeData_08003980(void)\n\n{\n  DAT_20000e10 = 0;\n  DAT_20000e11 = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003980": "initialize_data_08003980"
            },
            "calling": [
                "FUN_080039a0",
                "FUN_08003f34"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080039a0": {
            "entrypoint": "0x080039a0",
            "current_name": "initialize_program_080039a0",
            "code": "\nvoid initializeProgram_080039a0(void)\n\n{\n  FUN_08003980();\n  FUN_08004228();\n  DAT_20000e50 = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080039a0": "initialize_program_080039a0"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08004228",
                "FUN_08003980"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080039bc": {
            "entrypoint": "0x080039bc",
            "current_name": "check_and_process_data_080039bc",
            "code": "\nvoid checkAndProcessData_080039bc(void)\n\n{\n  int result;\n  undefined4 value;\n  byte count;\n  \n  for (count = 0; count < 2; count = count + 1) {\n    result = FUN_08004d2c(count,&DAT_20000d10);\n    if (result == 0) {\n      FUN_08004030(10);\n    }\n    else if (DAT_20000d10 != '\\0') {\n      FUN_0800369c(&DAT_20000d10);\n      value = FUN_080005b4(&DAT_20000d10);\n      FUN_08004030(value);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080039bc": "check_and_process_data_080039bc",
                "iVar1": "result",
                "uVar2": "value",
                "local_9": "count"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_0800369c",
                "FUN_080005b4",
                "FUN_08004030",
                "FUN_08004d2c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a18": {
            "entrypoint": "0x08003a18",
            "current_name": "update_status_flag_08003a18",
            "code": "\nvoid updateStatusFlag_08003a18(uint inputFlag)\n\n{\n  if ((inputFlag & 0x80) == 0) {\n    if ((inputFlag & 0x40) == 0) {\n      if ((inputFlag & 0x20) != 0) {\n        DAT_20000eaa = DAT_20000eaa | 2;\n      }\n    }\n    else {\n      DAT_20000eaa = DAT_20000eaa | 8;\n    }\n  }\n  else {\n    FUN_080025e8();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003a18": "update_status_flag_08003a18",
                "param_1": "inputFlag"
            },
            "calling": [
                "FUN_080074c8"
            ],
            "called": [
                "FUN_080025e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a74": {
            "entrypoint": "0x08003a74",
            "current_name": "process_data_08003a74",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08003ad2) */\n\nvoid processData_08003a74(void)\n\n{\n  byte byteValue;\n  \n  byteValue = DAT_20000eaa;\n  if (DAT_20000eaa != 0) {\n    if ((DAT_20000eaa & 0x60) != 0) {\n      DAT_20000ea9 = 6;\n      if ((DAT_20000eaa & 0x40) != 0) {\n        FUN_08004148(0xffffffff);\n        FUN_080041a0(1);\n        do {\n        } while( true );\n      }\n      FUN_08004148(0xfffffffe);\n      DAT_20000eaa = DAT_20000eaa & 0x9f;\n    }\n    if ((byteValue & 0x10) == 0) {\n      if ((byteValue & 1) != 0) {\n        FUN_08004940();\n        DAT_20000eaa = DAT_20000eaa & 0xfe;\n      }\n      if ((byteValue & 8) != 0) {\n        FUN_0800587c();\n        DAT_20000eaa = DAT_20000eaa & 0xf7;\n      }\n      if ((byteValue & 4) != 0) {\n        FUN_080058a0();\n        DAT_20000eaa = DAT_20000eaa & 0xfb;\n      }\n      if ((byteValue & 2) != 0) {\n        FUN_0800585c();\n        if ((DAT_20000ee4 & 2) != 0) {\n          DAT_20000eb8 = 1;\n        }\n        DAT_20000eaa = DAT_20000eaa & 0xfd;\n      }\n    }\n    else {\n      DAT_20000ea8 = 1;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003a74": "process_data_08003a74",
                "bVar1": "byteValue"
            },
            "calling": [
                "FUN_08001e98",
                "FUN_08002408",
                "FUN_08003f34",
                "FUN_08001ddc",
                "FUN_08002fd4",
                "FUN_080024c4"
            ],
            "called": [
                "FUN_080058a0",
                "FUN_0800585c",
                "FUN_08004940",
                "FUN_0800587c",
                "FUN_080041a0",
                "FUN_08004148"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003b98": {
            "entrypoint": "0x08003b98",
            "current_name": "parse_command_08003b98",
            "code": "\nuint parseCommand_08003b98(char *command)\n\n{\n  byte firstChar;\n  int returnValue;\n  undefined4 local_3;\n  uint local_4;\n  undefined8 local_5;\n  undefined4 arg1;\n  undefined4 arg2;\n  byte index;\n  byte flag;\n  \n  if (*command != '$') {\n    local_4 = FUN_080005b4(command);\n    return local_4;\n  }\n  index = 1;\n  flag = '\\0';\n  firstChar = command[1];\n  if (firstChar == 0) {\n    FUN_0800423c();\n    return 0;\n  }\n  if ((0x58 < firstChar) || (firstChar < 0x23)) goto switchD_08003bdc_caseD_25;\n  switch(firstChar) {\n  case 0x23:\n    index = 2;\n    if (command[2] != '\\0') {\n      return 3;\n    }\n    FUN_080044e8();\n    break;\n  case 0x24:\n    index = 2;\n    if (command[2] != '\\0') {\n      return 3;\n    }\n    FUN_08004250();\n    break;\n  case 0x43:\n    index = 2;\n    if (command[2] != '\\0') {\n      return 3;\n    }\n    if (DAT_20000ea9 == '\\a') {\n      FUN_080025e8();\n      FUN_080041a0(5);\n    }\n    else {\n      if (DAT_20000ea9 != '\\0') {\n        return 0xb;\n      }\n      DAT_20000ea9 = '\\a';\n      FUN_080041a0(4);\n    }\n    break;\n  case 0x47:\n    index = 2;\n    if (command[2] != '\\0') {\n      return 3;\n    }\n    FUN_080046d0();\n    break;\n  case 0x48:\n    if ((DAT_20000ee4 & 0x10) == 0) {\n      return 7;\n    }\n    if ((DAT_20000ea9 != '\\0') && (DAT_20000ea9 != '\\x06')) {\n      return 0xb;\n    }\n    FUN_080024c4();\n    if (DAT_20000ea8 == '\\0') {\n      FUN_080039bc();\n    }\n    break;\n  case 0x4e:\n    index = 2;\n    if (command[2] == '\\0') {\n      for (flag = 0; flag < 2; flag = flag + 1) {\n        returnValue = FUN_08004d2c(flag,command);\n        if (returnValue == 0) {\n          FUN_08004030(10);\n        }\n        else {\n          FUN_08004900(flag,command);\n        }\n      }\n      return 0;\n    }\n    flag = '\\x01';\n  default:\nswitchD_08003bdc_caseD_25:\n    returnValue = FUN_08002638(command,&index,&arg2);\n    if (returnValue == 0) {\n      return 1;\n    }\n    firstChar = index + 1;\n    if (command[index] != '=') {\n      return 3;\n    }\n    index = firstChar;\n    if (flag == '\\0') {\n      returnValue = FUN_08002638(command,&index,&arg1);\n      if (returnValue == 0) {\n        return 1;\n      }\n      if (command[index] == '\\0') {\n        local_3 = FUN_08009278(arg2);\n        local_4 = FUN_08004e30(local_3,arg1);\n        return local_4;\n      }\n      return 3;\n    }\n    do {\n      command[(uint)index - (uint)firstChar] = command[index];\n      local_4 = (uint)index;\n      index = index + 1;\n    } while (command[local_4] != '\\0');\n    flag = firstChar;\n    flag = FUN_080005b4(command);\n    if (flag != 0) {\n      return (uint)flag;\n    }\n    local_5 = FUN_08008590(arg2);\n    local_5 = FUN_08009798((int)local_5,(int)((ulonglong)local_5 >> 0x20));\n    flag = FUN_08008bf0((int)local_5,(int)((ulonglong)local_5 >> 0x20));\n    FUN_08004bc0(flag,command);\n    break;\n  case 0x58:\n    index = 2;\n    if (command[2] != '\\0') {\n      return 3;\n    }\n    if (DAT_20000ea9 == '\\x06') {\n      FUN_080041a0(3);\n      DAT_20000ea9 = '\\0';\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003b98": "parse_command_08003b98",
                "param_1": "command",
                "bVar1": "firstChar",
                "iVar2": "returnValue",
                "uVar3": "local_3",
                "uVar4": "local_4",
                "uVar5": "local_5",
                "local_14": "arg1",
                "local_10": "arg2",
                "local_a": "index",
                "local_9": "flag"
            },
            "calling": [
                "FUN_08003f34"
            ],
            "called": [
                "FUN_0800423c",
                "FUN_08004bc0",
                "FUN_08002638",
                "FUN_08009798",
                "FUN_08004900",
                "FUN_080025e8",
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_080046d0",
                "FUN_080039bc",
                "FUN_08008bf0",
                "FUN_08004d2c",
                "FUN_08008590",
                "FUN_08004250",
                "FUN_08009278",
                "FUN_080044e8",
                "FUN_08004030",
                "FUN_080041a0",
                "FUN_080024c4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f34": {
            "entrypoint": "0x08003f34",
            "current_name": "process_input_08003f34",
            "code": "\nvoid processInput_08003f34(void)\n\n{\n  byte inputByte;\n  undefined4 returnValue;\n  uint index;\n  \n  while( true ) {\n    while( true ) {\n      inputByte = FUN_08008286();\n      if (inputByte == 0xff) {\n        return;\n      }\n      if ((inputByte == 10) || (inputByte == 0xd)) break;\n      if (DAT_20000e11 == '\\0') {\n        if ((0x20 < inputByte) && (inputByte != 0x2f)) {\n          if (inputByte == 0x28) {\n            DAT_20000e11 = '\\x01';\n          }\n          else if (DAT_20000e10 == 0xff) {\n            FUN_08004030(0xd);\n            FUN_08003980();\n          }\n          else if ((inputByte < 0x61) || (0x7a < inputByte)) {\n            index = (uint)DAT_20000e10;\n            DAT_20000e10 = DAT_20000e10 + 1;\n            (&DAT_20000d10)[index] = inputByte;\n          }\n          else {\n            index = (uint)DAT_20000e10;\n            DAT_20000e10 = DAT_20000e10 + 1;\n            (&DAT_20000d10)[index] = inputByte - 0x20;\n          }\n        }\n      }\n      else if (inputByte == 0x29) {\n        DAT_20000e11 = '\\0';\n      }\n    }\n    FUN_08003a74();\n    if (DAT_20000ea8 != '\\0') break;\n    if (DAT_20000e10 == 0) {\n      FUN_08004030(0);\n    }\n    else {\n      (&DAT_20000d10)[DAT_20000e10] = 0;\n      returnValue = FUN_08003b98(&DAT_20000d10);\n      FUN_08004030(returnValue);\n    }\n    FUN_08003980();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f34": "process_input_08003f34",
                "bVar1": "inputByte",
                "uVar2": "returnValue",
                "uVar3": "index"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08003b98",
                "FUN_08003a74",
                "FUN_08008286",
                "FUN_08004030",
                "FUN_08003980"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004030": {
            "entrypoint": "0x08004030",
            "current_name": "print_error_message_08004030",
            "code": "\nvoid printErrorMessage_08004030(char errorCode)\n\n{\n  if (errorCode == '\\0') {\n    FUN_080036c6(&DAT_0800b5c8);\n  }\n  else {\n    FUN_080036c6(\"error: \");\n    switch(errorCode) {\n    case '\\x01':\n      FUN_080036c6(\"Bad number format\");\n      break;\n    case '\\x02':\n      FUN_080036c6(\"Expected command letter\");\n      break;\n    case '\\x03':\n      FUN_080036c6(\"Unsupported statement\");\n      break;\n    case '\\x04':\n      FUN_080036c6(\"Invalid radius\");\n      break;\n    case '\\x05':\n      FUN_080036c6(\"Modal group violation\");\n      break;\n    case '\\x06':\n      FUN_080036c6(\"Invalid statement\");\n      break;\n    case '\\a':\n      FUN_080036c6(\"Setting disabled\");\n      break;\n    case '\\b':\n      FUN_080036c6(\"Value < 0.0\");\n      break;\n    case '\\t':\n      FUN_080036c6(\"Value < 3 usec\");\n      break;\n    case '\\n':\n      FUN_080036c6(\"EEPROM read fail. Using defaults\");\n      break;\n    case '\\v':\n      FUN_080036c6(\"Busy or queued\");\n      break;\n    case '\\f':\n      FUN_080036c6(\"Alarm lock\");\n      break;\n    case '\\r':\n      FUN_080036c6(\"Line overflow\");\n    }\n    FUN_080036c6(&DAT_0800b6d8);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004030": "print_error_message_08004030",
                "param_1": "errorCode"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080004ac",
                "FUN_080044e8",
                "FUN_08003f34",
                "FUN_080039bc",
                "FUN_080051b4"
            ],
            "called": [
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004148": {
            "entrypoint": "0x08004148",
            "current_name": "display_alarm_message_08004148",
            "code": "\nvoid displayAlarmMessage_08004148(char errorCode)\n\n{\n  FUN_080036c6(\"ALARM: \");\n  if (errorCode == -2) {\n    FUN_080036c6(\"Abort during cycle\");\n  }\n  else if (errorCode == -1) {\n    FUN_080036c6(\"Hard limit\");\n  }\n  FUN_080036c6(\". MPos?\\r\\n\");\n  FUNC_08002814(500);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004148": "display_alarm_message_08004148",
                "param_1": "errorCode"
            },
            "calling": [
                "FUN_08003a74"
            ],
            "called": [
                "FUN_08002814",
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080041a0": {
            "entrypoint": "0x080041a0",
            "current_name": "display_status_message_080041a0",
            "code": "\nvoid displayStatusMessage_080041a0(undefined status)\n\n{\n  FUN_080036c6(&DAT_0800b710);\n  switch(status) {\n  case 1:\n    FUN_080036c6(\"Reset to continue\");\n    break;\n  case 2:\n    FUN_080036c6(\"\\'$H\\'|\\'$X\\' to unlock\");\n    break;\n  case 3:\n    FUN_080036c6(\"Caution: Unlocked\");\n    break;\n  case 4:\n    FUN_080036c6(\"Enabled\");\n    break;\n  case 5:\n    FUN_080036c6(\"Disabled\");\n  }\n  FUN_080036c6(&DAT_0800b764);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080041a0": "display_status_message_080041a0",
                "param_1": "status"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_08003a74",
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004228": {
            "entrypoint": "0x08004228",
            "current_name": "print_grbl_version_08004228",
            "code": "\nvoid printGrblVersion_08004228(void)\n\n{\n  FUN_080036c6(\"\\r\\nGrbl 0.8c [\\'$\\' for help]\\r\\n\");\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004228": "print_grbl_version_08004228"
            },
            "calling": [
                "FUN_080039a0"
            ],
            "called": [
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800423c": {
            "entrypoint": "0x0800423c",
            "current_name": "display_grbl_commands_0800423c",
            "code": "\nvoid displayGrblCommands_0800423c(void)\n\n{\n  FUN_080036c6(\n              \"$$ (view Grbl settings)\\r\\n$# (view # parameters)\\r\\n$G (view parser state)\\r\\n$N (view startup blocks)\\r\\n$x=value (save Grbl setting)\\r\\n$Nx=line (save startup block)\\r\\n$C (check gcode mode)\\r\\n$X (kill alarm lock)\\r\\n$H (run homing cycle)\\r\\n~ (cycle start)\\r\\n! (feed hold)\\r\\n? (current status)\\r\\nctrl-x (reset Grbl)\\r\\n\"\n              );\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800423c": "display_grbl_commands_0800423c"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004250": {
            "entrypoint": "0x08004250",
            "current_name": "print_configuration_08004250",
            "code": "\nvoid printConfiguration_08004250(void)\n\n{\n  undefined4 acceleration;\n  \n  FUN_080036c6(&DAT_0800b8b8);\n  FUN_08003826(DAT_20000ebc);\n  FUN_080036c6(\" (x, step/mm)\\r\\n$1=\");\n  FUN_08003826(DAT_20000ec0);\n  FUN_080036c6(\" (y, step/mm)\\r\\n$2=\");\n  FUN_08003826(DAT_20000ec4);\n  FUN_080036c6(\" (z, step/mm)\\r\\n$3=\");\n  FUN_080037fc(DAT_20000ec9);\n  FUN_080036c6(\" (step pulse, usec)\\r\\n$4=\");\n  FUN_08003826(DAT_20000ecc);\n  FUN_080036c6(\" (default feed, mm/min)\\r\\n$5=\");\n  FUN_08003826(DAT_20000ed0);\n  FUN_080036c6(\" (default seek, mm/min)\\r\\n$6=\");\n  FUN_080037fc(DAT_20000ed4);\n  FUN_080036c6(\" (step port invert mask, int:\");\n  FUN_0800375c(DAT_20000ed4);\n  FUN_080036c6(\")\\r\\n$7=\");\n  FUN_080037fc(DAT_20000ef8);\n  FUN_080036c6(\" (step idle delay, msec)\\r\\n$8=\");\n  acceleration = FUN_08009054(DAT_20000edc,0x45610000);\n  FUN_08003826(acceleration);\n  FUN_080036c6(\" (acceleration, mm/sec^2)\\r\\n$9=\");\n  FUN_08003826(DAT_20000ee0);\n  FUN_080036c6(\" (junction deviation, mm)\\r\\n$10=\");\n  FUN_08003826(DAT_20000ed8);\n  FUN_080036c6(\" (arc, mm/segment)\\r\\n$11=\");\n  FUN_080037fc(DAT_20000efa);\n  FUN_080036c6(\" (n-arc correction, int)\\r\\n$12=\");\n  FUN_080037fc(DAT_20000ef9);\n  FUN_080036c6(\" (n-decimals, int)\\r\\n$13=\");\n  FUN_080037fc((DAT_20000ee4 & 1) != 0);\n  FUN_080036c6(\" (report inches, bool)\\r\\n$14=\");\n  FUN_080037fc((DAT_20000ee4 & 2) != 0);\n  FUN_080036c6(\" (auto start, bool)\\r\\n$15=\");\n  FUN_080037fc((DAT_20000ee4 & 4) != 0);\n  FUN_080036c6(\" (invert step enable, bool)\\r\\n$16=\");\n  FUN_080037fc((DAT_20000ee4 & 8) != 0);\n  FUN_080036c6(\" (hard limits, bool)\\r\\n$17=\");\n  FUN_080037fc((DAT_20000ee4 & 0x10) != 0);\n  FUN_080036c6(\" (homing cycle, bool)\\r\\n$18=\");\n  FUN_080037fc(DAT_20000ee6);\n  FUN_080036c6(\" (homing dir invert mask, int:\");\n  FUN_0800375c(DAT_20000ee6);\n  FUN_080036c6(\")\\r\\n$19=\");\n  FUN_08003826(DAT_20000ee8);\n  FUN_080036c6(\" (homing feed, mm/min)\\r\\n$20=\");\n  FUN_08003826(DAT_20000eec);\n  FUN_080036c6(\" (homing seek, mm/min)\\r\\n$21=\");\n  FUN_080037fc(DAT_20000ef0);\n  FUN_080036c6(\" (homing debounce, msec)\\r\\n$22=\");\n  FUN_08003826(DAT_20000ef4);\n  FUN_080036c6(\" (homing pull-off, mm)\\r\\n$23=\");\n  FUN_080037fc(DAT_20000ed6);\n  FUN_080036c6(\" (dir port invert mask, int:\");\n  FUN_0800375c(DAT_20000ed6);\n  FUN_080036c6(&DAT_0800bb94);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004250": "print_configuration_08004250",
                "uVar1": "acceleration"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080051b4"
            ],
            "called": [
                "FUN_08003826",
                "FUN_08009054",
                "FUN_080037fc",
                "FUN_080036c6",
                "FUN_0800375c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080044e8": {
            "entrypoint": "0x080044e8",
            "current_name": "process_data_080044e8",
            "code": "\nvoid processData_080044e8(void)\n\n{\n  int result;\n  undefined4 convertedValue;\n  undefined8 processedValue;\n  undefined4 inputValues [3];\n  byte index;\n  byte count;\n  \n  count = 0;\n  while( true ) {\n    if (7 < count) {\n      FUN_080036c6(\"[G92:\");\n      for (index = 0; index < 3; index = index + 1) {\n        if ((DAT_20000ee4 & 1) == 0) {\n          FUN_08003826(*(undefined4 *)(&DAT_20000e74 + (index + 10) * 4));\n        }\n        else {\n          processedValue = FUN_08008590(*(undefined4 *)(&DAT_20000e74 + (index + 10) * 4));\n          processedValue = FUN_08008640((int)processedValue,(int)((ulonglong)processedValue >> 0x20),0x57e16865,0x3fa42851);\n          convertedValue = FUN_08008c30((int)processedValue,(int)((ulonglong)processedValue >> 0x20));\n          FUN_08003826(convertedValue);\n        }\n        if (index < 2) {\n          FUN_080036c6(&DAT_0800bbbc);\n        }\n        else {\n          FUN_080036c6(&DAT_0800b764);\n        }\n      }\n      return;\n    }\n    result = FUN_08004d7c(count,inputValues);\n    if (result == 0) break;\n    FUN_080036c6(&DAT_0800bb98);\n    switch(count) {\n    case 0:\n      FUN_080036c6(&DAT_0800bb9c);\n      break;\n    case 1:\n      FUN_080036c6(&DAT_0800bba0);\n      break;\n    case 2:\n      FUN_080036c6(&DAT_0800bba4);\n      break;\n    case 3:\n      FUN_080036c6(&DAT_0800bba8);\n      break;\n    case 4:\n      FUN_080036c6(&DAT_0800bbac);\n      break;\n    case 5:\n      FUN_080036c6(&DAT_0800bbb0);\n      break;\n    case 6:\n      FUN_080036c6(&DAT_0800bbb4);\n      break;\n    case 7:\n      FUN_080036c6(&DAT_0800bbb8);\n    }\n    for (index = 0; index < 3; index = index + 1) {\n      if ((DAT_20000ee4 & 1) == 0) {\n        FUN_08003826(inputValues[index]);\n      }\n      else {\n        processedValue = FUN_08008590(inputValues[index]);\n        processedValue = FUN_08008640((int)processedValue,(int)((ulonglong)processedValue >> 0x20),0x57e16865,0x3fa42851);\n        convertedValue = FUN_08008c30((int)processedValue,(int)((ulonglong)processedValue >> 0x20));\n        FUN_08003826(convertedValue);\n      }\n      if (index < 2) {\n        FUN_080036c6(&DAT_0800bbbc);\n      }\n      else {\n        FUN_080036c6(&DAT_0800b764);\n      }\n    }\n    count = count + 1;\n  }\n  FUN_08004030(10);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080044e8": "process_data_080044e8",
                "iVar1": "result",
                "uVar2": "convertedValue",
                "uVar3": "processedValue",
                "auStack_18": "inputValues",
                "local_a": "index",
                "local_9": "count"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08003826",
                "FUN_08004d7c",
                "FUN_08008640",
                "FUN_08004030",
                "FUN_080036c6",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080046d0": {
            "entrypoint": "0x080046d0",
            "current_name": "initialize_configuration_080046d0",
            "code": "\nvoid initializeConfiguration_080046d0(void)\n\n{\n  undefined4 tempResult;\n  undefined8 hashResult;\n  \n  switch(DAT_20000e71) {\n  case 0:\n    FUN_080036c6(&DAT_0800bbc8);\n    break;\n  case 1:\n    FUN_080036c6(&DAT_0800bbcc);\n    break;\n  case 2:\n    FUN_080036c6(&DAT_0800bbd0);\n    break;\n  case 3:\n    FUN_080036c6(&DAT_0800bbd4);\n    break;\n  case 4:\n    FUN_080036c6(&DAT_0800bbd8);\n  }\n  FUN_080036c6(&DAT_0800bbe0);\n  FUN_080037fc(DAT_20000e8c + 0x36);\n  if (DAT_20000e89 == '\\0') {\n    if (DAT_20000e8a == '\\x01') {\n      FUN_080036c6(&DAT_0800bbe4);\n    }\n    else {\n      FUN_080036c6(&DAT_0800bbec);\n    }\n  }\n  else {\n    FUN_080036c6(&DAT_0800bbf4);\n  }\n  if (DAT_20000e73 == '\\0') {\n    FUN_080036c6(&DAT_0800bc04);\n  }\n  else {\n    FUN_080036c6(&DAT_0800bbfc);\n  }\n  if (DAT_20000e74 == '\\0') {\n    FUN_080036c6(&DAT_0800bc14);\n  }\n  else {\n    FUN_080036c6(&DAT_0800bc0c);\n  }\n  if (DAT_20000e72 == '\\0') {\n    FUN_080036c6(&DAT_0800bc24);\n  }\n  else {\n    FUN_080036c6(&DAT_0800bc1c);\n  }\n  if (DAT_20000e75 == 2) {\n    FUN_080036c6(&DAT_0800bc34);\n  }\n  else if (DAT_20000e75 < 3) {\n    if (DAT_20000e75 == 0) {\n      FUN_080036c6(&DAT_0800bc2c);\n    }\n    else if (DAT_20000e75 == 1) {\n      FUN_080036c6(&DAT_0800bc30);\n    }\n  }\n  if (DAT_20000e76 == '\\x01') {\n    FUN_080036c6(&DAT_0800bc38);\n  }\n  else if (DAT_20000e76 < '\\x02') {\n    if (DAT_20000e76 == -1) {\n      FUN_080036c6(&DAT_0800bc3c);\n    }\n    else if (DAT_20000e76 == '\\0') {\n      FUN_080036c6(&DAT_0800bc40);\n    }\n  }\n  if (DAT_20000e77 == 2) {\n    FUN_080036c6(&DAT_0800bc4c);\n  }\n  else if (DAT_20000e77 < 3) {\n    if (DAT_20000e77 == 0) {\n      FUN_080036c6(&DAT_0800bc44);\n    }\n    else if (DAT_20000e77 == 1) {\n      FUN_080036c6(&DAT_0800bc48);\n    }\n  }\n  FUN_080036c6(&DAT_0800bc50);\n  FUN_080037fc(DAT_20000e88);\n  FUN_080036c6(&DAT_0800bc54);\n  if (DAT_20000e73 == '\\0') {\n    FUN_08003826(DAT_20000e78);\n  }\n  else {\n    hashResult = FUN_08008590(DAT_20000e78);\n    hashResult = FUN_08008640((int)hashResult,(int)((ulonglong)hashResult >> 0x20),0x57e16865,0x3fa42851);\n    tempResult = FUN_08008c30((int)hashResult,(int)((ulonglong)hashResult >> 0x20));\n    FUN_08003826(tempResult);\n  }\n  FUN_080036c6(&DAT_0800b764);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080046d0": "initialize_configuration_080046d0",
                "uVar1": "tempResult",
                "uVar2": "hashResult"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08003826",
                "FUN_080037fc",
                "FUN_08008640",
                "FUN_080036c6",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004900": {
            "entrypoint": "0x08004900",
            "current_name": "initialize_binary_08004900",
            "code": "\nvoid initializeBinary_08004900(undefined param1,undefined4 param2)\n\n{\n  FUN_080036c6(&DAT_0800bc58);\n  FUN_080037fc(param1);\n  FUN_080036c6(&DAT_0800bc5c);\n  FUN_0800369c(param2);\n  FUN_080036c6(&DAT_0800b6d8);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004900": "initialize_binary_08004900",
                "param_1": "param1",
                "param_2": "param2"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_0800369c",
                "FUN_080037fc",
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004940": {
            "entrypoint": "0x08004940",
            "current_name": "print_status_08004940",
            "code": "\nvoid printStatus_08004940(void)\n\n{\n  undefined4 result;\n  uint temp;\n  undefined4 temp2;\n  undefined8 temp3;\n  undefined8 temp4;\n  undefined4 statusValues [6];\n  byte index;\n  \n  statusValues[3] = DAT_20000eac;\n  statusValues[4] = DAT_20000eb0;\n  statusValues[5] = DAT_20000eb4;\n  switch(DAT_20000ea9) {\n  case 0:\n    FUN_080036c6(\"<Idle\");\n    break;\n  case 2:\n    FUN_080036c6(\"<Queue\");\n    break;\n  case 3:\n    FUN_080036c6(&DAT_0800bc70);\n    break;\n  case 4:\n    FUN_080036c6(\"<Hold\");\n    break;\n  case 5:\n    FUN_080036c6(\"<Home\");\n    break;\n  case 6:\n    FUN_080036c6(\"<Alarm\");\n    break;\n  case 7:\n    FUN_080036c6(\"<Check\");\n  }\n  FUN_080036c6(\",MPos:\");\n  for (index = 0; index < 3; index = index + 1) {\n    result = FUNC_08008e44(statusValues[index + 3]);\n    temp = (uint)index;\n    result = FUN_08009054(result,(&DAT_20000ebc)[index]);\n    statusValues[temp] = result;\n    if ((DAT_20000ee4 & 1) != 0) {\n      temp3 = FUN_08008590(statusValues[index]);\n      temp3 = FUN_08008640((int)temp3,(int)((ulonglong)temp3 >> 0x20),0x57e16865,0x3fa42851);\n      temp = (uint)index;\n      result = FUN_08008c30((int)temp3,(int)((ulonglong)temp3 >> 0x20));\n      statusValues[temp] = result;\n    }\n    FUN_08003826(statusValues[index]);\n    FUN_080036c6(&DAT_0800bbbc);\n  }\n  FUN_080036c6(\"WPos:\");\n  for (index = 0; index < 3; index = index + 1) {\n    if ((DAT_20000ee4 & 1) == 0) {\n      temp2 = statusValues[index];\n      result = FUN_08008cdc(*(undefined4 *)(&DAT_20000e70 + (index + 8) * 4),\n                           *(undefined4 *)(&DAT_20000e74 + (index + 10) * 4));\n      temp = (uint)index;\n      result = FUN_08008cd8(temp2,result);\n      statusValues[temp] = result;\n    }\n    else {\n      temp3 = FUN_08008590(statusValues[index]);\n      result = FUN_08008cdc(*(undefined4 *)(&DAT_20000e70 + (index + 8) * 4),\n                           *(undefined4 *)(&DAT_20000e74 + (index + 10) * 4));\n      temp4 = FUN_08008590(result);\n      temp4 = FUN_08008640((int)temp4,(int)((ulonglong)temp4 >> 0x20),0x57e16865,0x3fa42851);\n      temp3 = FUN_080082d0((int)temp3,(int)((ulonglong)temp3 >> 0x20),(int)temp4,\n                           (int)((ulonglong)temp4 >> 0x20));\n      temp = (uint)index;\n      result = FUN_08008c30((int)temp3,(int)((ulonglong)temp3 >> 0x20));\n      statusValues[temp] = result;\n    }\n    FUN_08003826(statusValues[index]);\n    if (index < 2) {\n      FUN_080036c6(&DAT_0800bbbc);\n    }\n  }\n  FUN_080036c6(&DAT_0800bca8);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004940": "print_status_08004940",
                "auStack_2c": "statusValues",
                "local_11": "index",
                "uVar1": "result",
                "uVar2": "temp",
                "uVar3": "temp2",
                "uVar4": "temp3",
                "uVar5": "temp4"
            },
            "calling": [
                "FUN_08003a74"
            ],
            "called": [
                "FUN_08008590",
                "FUN_080082d0",
                "FUN_08008cd8",
                "FUN_08003826",
                "FUN_08008e44",
                "FUN_08009054",
                "FUN_08008cdc",
                "FUN_08008640",
                "FUN_08008c30",
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004bc0": {
            "entrypoint": "0x08004bc0",
            "current_name": "initialize_memory_08004bc0",
            "code": "\nvoid initializeMemory_08004bc0(byte inputByte,undefined4 inputValue)\n\n{\n  FUN_08000374((ushort)inputByte * 0x101 + 0x300,inputValue,0x100);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004bc0": "initialize_memory_08004bc0",
                "param_1": "inputByte",
                "param_2": "inputValue"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_08004d2c"
            ],
            "called": [
                "FUN_08000374"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004bf4": {
            "entrypoint": "0x08004bf4",
            "current_name": "calculate_data_08004bf4",
            "code": "\nvoid calculateData_08004bf4(byte inputByte,undefined4 inputValue)\n\n{\n  FUN_08000374((ushort)inputByte * 0xd + 0x200,inputValue,0xc);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004bf4": "calculate_data_08004bf4",
                "param_1": "inputByte",
                "param_2": "inputValue"
            },
            "calling": [
                "FUN_08004d7c",
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08000374"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c2a": {
            "entrypoint": "0x08004c2a",
            "current_name": "initialize_resources_08004c2a",
            "code": "\nvoid initializeResources_08004c2a(void)\n\n{\n  FUN_08000340(0,5);\n  FUN_08000374(1,&DAT_20000ebc,0x40);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c2a": "initialize_resources_08004c2a"
            },
            "calling": [
                "FUN_08004e30",
                "FUN_08004c48"
            ],
            "called": [
                "FUN_08000374",
                "FUN_08000340"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c48": {
            "entrypoint": "0x08004c48",
            "current_name": "initialize_data_08004c48",
            "code": "\nvoid initializeData_08004c48(char inputParam)\n\n{\n  if (inputParam != '\\0') {\n    DAT_20000ebc = 0x431d7af6;\n    DAT_20000ec0 = 0x431d7af6;\n    DAT_20000ec4 = 0x431d7af6;\n    DAT_20000ec9 = 10;\n    DAT_20000ecc = 0x437a0000;\n    DAT_20000ed0 = 0x43fa0000;\n    DAT_20000edc = 0x470ca000;\n    DAT_20000ed8 = 0x3dcccccd;\n    DAT_20000ed4 = 0;\n    DAT_20000ed6 = 0xa80;\n    DAT_20000ee0 = 0x3d4ccccd;\n  }\n  DAT_20000ee4 = 0x12;\n  DAT_20000ee6 = 0;\n  DAT_20000ee8 = 0x41c80000;\n  DAT_20000eec = 0x437a0000;\n  DAT_20000ef0 = 100;\n  DAT_20000ef4 = 0x3f800000;\n  DAT_20000ef8 = 0x19;\n  DAT_20000ef9 = 3;\n  DAT_20000efa = 0x19;\n  FUN_08004c2a();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c48": "initialize_data_08004c48",
                "param_1": "inputParam"
            },
            "calling": [
                "FUN_08004dd2",
                "FUN_080051b4"
            ],
            "called": [
                "FUN_08004c2a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d2c": {
            "entrypoint": "0x08004d2c",
            "current_name": "check_and_process_data_08004d2c",
            "code": "\nbool checkAndProcessData_08004d2c(byte inputByte,undefined *outputData)\n\n{\n  int result;\n  \n  result = FUN_080003ec(outputData,(ushort)inputByte * 0x101 + 0x300,0x100);\n  if (result == 0) {\n    *outputData = 0;\n    FUN_08004bc0(inputByte,outputData);\n  }\n  return result != 0;\n}\n\n",
            "renaming": {
                "FUN_08004d2c": "check_and_process_data_08004d2c",
                "param_1": "inputByte",
                "param_2": "outputData",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080039bc"
            ],
            "called": [
                "FUN_08004bc0",
                "FUN_080003ec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d7c": {
            "entrypoint": "0x08004d7c",
            "current_name": "check_and_process_data_08004d7c",
            "code": "\nbool checkAndProcessData_08004d7c(byte inputByte,undefined4 dataPointer)\n\n{\n  int result;\n  \n  result = FUN_080003ec(dataPointer,(ushort)inputByte * 0xd + 0x200,0xc);\n  if (result == 0) {\n    FUN_0800b430(dataPointer,0,0xc);\n    FUN_08004bf4(inputByte,dataPointer);\n  }\n  return result != 0;\n}\n\n",
            "renaming": {
                "FUN_08004d7c": "check_and_process_data_08004d7c",
                "param_1": "inputByte",
                "param_2": "dataPointer",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080004ac",
                "FUN_080005b4",
                "FUN_080044e8",
                "FUN_080051b4"
            ],
            "called": [
                "FUN_0800b430",
                "FUN_080003ec",
                "FUN_08004bf4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004dd2": {
            "entrypoint": "0x08004dd2",
            "current_name": "initialize_data_08004dd2",
            "code": "\nundefined4 initialize_data_08004dd2(void)\n\n{\n  byte result;\n  int status;\n  \n  result = FUN_08000310(0);\n  if (result == 5) {\n    status = FUN_080003ec(&DAT_20000ebc,1,0x40);\n    if (status == 0) {\n      return 0;\n    }\n  }\n  else {\n    if (4 < result) {\n      return 0;\n    }\n    status = FUN_080003ec(&DAT_20000ebc,1,0x28);\n    if (status == 0) {\n      return 0;\n    }\n    FUN_08004c48(0);\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08004dd2": "initialize_data_08004dd2",
                "bVar1": "result",
                "iVar2": "status"
            },
            "calling": [
                "FUN_080051b4"
            ],
            "called": [
                "FUN_080003ec",
                "FUN_08000310",
                "FUN_08004c48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e30": {
            "entrypoint": "0x08004e30",
            "current_name": "update_data_08004e30",
            "code": "\nundefined4 updateData_08004e30(int action,uint value)\n\n{\n  undefined4 returnValue;\n  int result;\n  undefined8 combinedValue;\n  \n  switch(action) {\n  case 0:\n  case 1:\n  case 2:\n    result = FUN_0800923c(value,0);\n    if (result != 0) {\n      return 8;\n    }\n    (&DAT_20000ebc)[action] = value;\n    break;\n  case 3:\n    result = FUN_08009228(value,0x40400000);\n    if (result != 0) {\n      return 9;\n    }\n    combinedValue = FUN_08008590(value);\n    combinedValue = FUN_08009654((int)combinedValue,(int)((ulonglong)combinedValue >> 0x20));\n    DAT_20000ec9 = FUN_08008bf0((int)combinedValue,(int)((ulonglong)combinedValue >> 0x20));\n    break;\n  case 4:\n    DAT_20000ecc = value;\n    break;\n  case 5:\n    DAT_20000ed0 = value;\n    break;\n  case 6:\n    combinedValue = FUN_08008590(value);\n    combinedValue = FUN_08009798((int)combinedValue,(int)((ulonglong)combinedValue >> 0x20));\n    DAT_20000ed4 = FUN_08008bf0((int)combinedValue,(int)((ulonglong)combinedValue >> 0x20));\n    break;\n  case 7:\n    combinedValue = FUN_08008590(value);\n    combinedValue = FUN_08009654((int)combinedValue,(int)((ulonglong)combinedValue >> 0x20));\n    DAT_20000ef8 = FUN_08008bf0((int)combinedValue,(int)((ulonglong)combinedValue >> 0x20));\n    break;\n  case 8:\n    returnValue = FUN_08008eec(value,0x42700000);\n    DAT_20000edc = FUN_08008eec(returnValue,0x42700000);\n    break;\n  case 9:\n    DAT_20000ee0 = value & 0x7fffffff;\n    break;\n  case 10:\n    DAT_20000ed8 = value;\n    break;\n  case 0xb:\n    combinedValue = FUN_08008590(value);\n    combinedValue = FUN_08009654((int)combinedValue,(int)((ulonglong)combinedValue >> 0x20));\n    DAT_20000efa = FUN_08008bf0((int)combinedValue,(int)((ulonglong)combinedValue >> 0x20));\n    break;\n  case 0xc:\n    combinedValue = FUN_08008590(value);\n    combinedValue = FUN_08009654((int)combinedValue,(int)((ulonglong)combinedValue >> 0x20));\n    DAT_20000ef9 = FUN_08008bf0((int)combinedValue,(int)((ulonglong)combinedValue >> 0x20));\n    break;\n  case 0xd:\n    result = FUN_08009214(value,0);\n    if (result == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 1;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xfe;\n    }\n    break;\n  case 0xe:\n    result = FUN_08009214(value,0);\n    if (result == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 2;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xfd;\n    }\n    break;\n  case 0xf:\n    result = FUN_08009214(value,0);\n    if (result == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 4;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xfb;\n    }\n    break;\n  case 0x10:\n    result = FUN_08009214(value,0);\n    if (result == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 8;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xf7;\n    }\n    FUN_0800192c();\n    break;\n  case 0x11:\n    result = FUN_08009214(value,0);\n    if (result == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 0x10;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xef;\n    }\n    break;\n  case 0x12:\n    combinedValue = FUN_08008590(value);\n    combinedValue = FUN_08009798((int)combinedValue,(int)((ulonglong)combinedValue >> 0x20));\n    DAT_20000ee6 = FUN_08008bf0((int)combinedValue,(int)((ulonglong)combinedValue >> 0x20));\n    break;\n  case 0x13:\n    DAT_20000ee8 = value;\n    break;\n  case 0x14:\n    DAT_20000eec = value;\n    break;\n  case 0x15:\n    combinedValue = FUN_08008590(value);\n    combinedValue = FUN_08009654((int)combinedValue,(int)((ulonglong)combinedValue >> 0x20));\n    DAT_20000ef0 = FUN_08008bf0((int)combinedValue,(int)((ulonglong)combinedValue >> 0x20));\n    break;\n  case 0x16:\n    DAT_20000ef4 = value;\n    break;\n  case 0x17:\n    combinedValue = FUN_08008590(value);\n    combinedValue = FUN_08009798((int)combinedValue,(int)((ulonglong)combinedValue >> 0x20));\n    DAT_20000ed6 = FUN_08008bf0((int)combinedValue,(int)((ulonglong)combinedValue >> 0x20));\n    break;\n  default:\n    return 6;\n  }\n  FUN_08004c2a();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004e30": "update_data_08004e30",
                "param_1": "action",
                "param_2": "value",
                "uVar1": "returnValue",
                "iVar2": "result",
                "uVar3": "combinedValue"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08009228",
                "FUN_08009798",
                "FUN_08009214",
                "FUN_08004c2a",
                "FUN_08008eec",
                "FUN_08009654",
                "FUN_0800923c",
                "FUN_08008bf0",
                "FUN_0800192c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080051b4": {
            "entrypoint": "0x080051b4",
            "current_name": "handle_binary_function_080051b4",
            "code": "\nvoid handleBinaryFunction_080051b4(void)\n\n{\n  int result;\n  undefined stackBuffer [15];\n  byte iterationIndex;\n  \n  result = FUN_08004dd2();\n  if (result == 0) {\n    FUN_08004030(10);\n    FUN_08004c48(1);\n    FUN_08004250();\n  }\n  for (iterationIndex = 0; iterationIndex < 8; iterationIndex = iterationIndex + 1) {\n    result = FUN_08004d7c(iterationIndex,stackBuffer);\n    if (result == 0) {\n      FUN_08004030(10);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080051b4": "handle_binary_function_080051b4",
                "auStack_18": "stackBuffer",
                "local_9": "iterationIndex",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08004250",
                "FUN_08004d7c",
                "FUN_08004dd2",
                "FUN_08004030",
                "FUN_08004c48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005208": {
            "entrypoint": "0x08005208",
            "current_name": "FUNC_08005208",
            "code": "\nvoid FUNC_08005208(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005208": "FUNC_08005208"
            },
            "calling": [
                "FUN_0800525c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005214": {
            "entrypoint": "0x08005214",
            "current_name": "FUNC_08005214",
            "code": "\nvoid FUNC_08005214(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005214": "FUNC_08005214"
            },
            "calling": [
                "FUN_08005250"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005220": {
            "entrypoint": "0x08005220",
            "current_name": "FUNC_08005220",
            "code": "\nvoid FUNC_08005220(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005220": "FUNC_08005220"
            },
            "calling": [
                "FUN_0800525c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800522c": {
            "entrypoint": "0x0800522c",
            "current_name": "FUNC_0800522c",
            "code": "\nvoid FUNC_0800522c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800522c": "FUNC_0800522c"
            },
            "calling": [
                "FUN_0800525c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005238": {
            "entrypoint": "0x08005238",
            "current_name": "initialize_data_08005238",
            "code": "\nvoid initializeData_08005238(void)\n\n{\n  DAT_20000e12 = 0;\n  FUN_08005250();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005238": "initialize_data_08005238"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08005250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005250": {
            "entrypoint": "0x08005250",
            "current_name": "execute_initialization_08005250",
            "code": "\nvoid execute_initialization_08005250(void)\n\n{\n  FUNC_08005214();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005250": "execute_initialization_08005250"
            },
            "calling": [
                "FUN_0800525c",
                "FUN_080025e8",
                "FUN_08005238"
            ],
            "called": [
                "FUN_08005214"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800525c": {
            "entrypoint": "0x0800525c",
            "current_name": "check_and_update_param_0800525c",
            "code": "\nvoid checkAndUpdateParam_0800525c(byte input)\n\n{\n  if ((int)(char)input != (uint)DAT_20000e12) {\n    FUN_08002fd4();\n    if (input == 0) {\n      FUN_08005250();\n      DAT_20000e12 = input;\n    }\n    else {\n      if ((char)input < '\\x01') {\n        FUNC_0800522c();\n      }\n      else {\n        FUNC_08005220();\n      }\n      FUNC_08005208();\n      DAT_20000e12 = input;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800525c": "check_and_update_param_0800525c",
                "param_1": "input"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08005208",
                "FUN_0800522c",
                "FUN_08005250",
                "FUN_08005220",
                "FUN_08002fd4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080052ac": {
            "entrypoint": "0x080052ac",
            "current_name": "update_data_080052ac",
            "code": "\n\n\nvoid updateData_080052ac(uint newData)\n\n{\n  _DAT_40021014 = newData | _DAT_40021014 & 0xfffffaaf;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080052ac": "update_data_080052ac",
                "param_1": "newData"
            },
            "calling": [
                "FUN_0800583c",
                "FUN_08005778",
                "FUN_08005760"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080052dc": {
            "entrypoint": "0x080052dc",
            "current_name": "update_register_value_080052dc",
            "code": "\n\n\nvoid updateRegisterValue_080052dc(uint newData)\n\n{\n  _DAT_40021014 = newData | _DAT_40021014 & 0xfffff55f;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080052dc": "update_register_value_080052dc",
                "param_1": "newData"
            },
            "calling": [
                "FUN_080053a0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800530c": {
            "entrypoint": "0x0800530c",
            "current_name": "FUNC_0800530c",
            "code": "\nvoid FUNC_0800530c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800530c": "FUNC_0800530c"
            },
            "calling": [
                "FUN_080057e4"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005318": {
            "entrypoint": "0x08005318",
            "current_name": "FUNC_08005318",
            "code": "\nvoid FUNC_08005318(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005318": "FUNC_08005318"
            },
            "calling": [
                "FUN_08005790"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005324": {
            "entrypoint": "0x08005324",
            "current_name": "calculate_inverse_08005324",
            "code": "\nvoid calculateInverse_08005324(uint inputNumber)\n\n{\n  uint adjustedNumber;\n  \n  adjustedNumber = inputNumber;\n  if (inputNumber < 800) {\n    adjustedNumber = 800;\n  }\n  DAT_20000e28 = 1260000000 / adjustedNumber;\n  FUN_08007bf0(DAT_20000e28);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005324": "calculate_inverse_08005324",
                "param_1": "inputNumber",
                "local_14": "adjustedNumber"
            },
            "calling": [
                "FUN_08005814",
                "FUN_080058a0",
                "FUN_080053a0"
            ],
            "called": [
                "FUN_08007bf0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005360": {
            "entrypoint": "0x08005360",
            "current_name": "update_counter_08005360",
            "code": "\nbool updateCounter_08005360(void)\n\n{\n  bool isExceeded;\n  \n  DAT_20000e2c = DAT_20000e28 + DAT_20000e2c;\n  isExceeded = 420000 < DAT_20000e2c;\n  if (isExceeded) {\n    DAT_20000e2c = DAT_20000e2c - 420000;\n  }\n  return isExceeded;\n}\n\n",
            "renaming": {
                "FUN_08005360": "update_counter_08005360",
                "bVar1": "isExceeded"
            },
            "calling": [
                "FUN_080053a0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080053a0": {
            "entrypoint": "0x080053a0",
            "current_name": "update_data_080053a0",
            "code": "\nvoid updateData_080053a0(void)\n\n{\n  int returnValue;\n  \n  FUN_080052dc(DAT_20000e3e);\n  DAT_20000e40 = DAT_20000e3c;\n  if (DAT_20000e38 == (ushort *)0x0) {\n    DAT_20000e38 = (ushort *)FUN_08002f74();\n    if (DAT_20000e38 == (ushort *)0x0) {\n      FUN_080057e4();\n      DAT_20000eaa = DAT_20000eaa | 4;\n    }\n    else {\n      if (DAT_20000ea9 == '\\x03') {\n        DAT_20000e30 = *(uint *)(DAT_20000e38 + 0x14);\n        FUN_08005324(DAT_20000e30);\n        DAT_20000e2c = 210000;\n      }\n      DAT_20000e34 = (*(int *)(DAT_20000e38 + 0x18) >> 1) + *(int *)(DAT_20000e38 + 0x18);\n      DAT_20000e14 = -(*(int *)(DAT_20000e38 + 8) >> 1);\n      DAT_20000e20 = *(int *)(DAT_20000e38 + 8);\n      DAT_20000e24 = 0;\n      DAT_20000e18 = DAT_20000e14;\n      DAT_20000e1c = DAT_20000e14;\n    }\n  }\n  if (DAT_20000e38 != (ushort *)0x0) {\n    DAT_20000e3e = *DAT_20000e38;\n    DAT_20000e3c = 0;\n    DAT_20000e14 = *(int *)(DAT_20000e38 + 2) + DAT_20000e14;\n    if (0 < DAT_20000e14) {\n      DAT_20000e3c = 0x10;\n      DAT_20000e14 = DAT_20000e14 - DAT_20000e20;\n      if ((DAT_20000e3e & 0x20) == 0) {\n        DAT_20000eac = DAT_20000eac + 1;\n      }\n      else {\n        DAT_20000eac = DAT_20000eac + -1;\n      }\n    }\n    DAT_20000e18 = *(int *)(DAT_20000e38 + 4) + DAT_20000e18;\n    if (0 < DAT_20000e18) {\n      DAT_20000e3c = DAT_20000e3c | 0x440;\n      DAT_20000e18 = DAT_20000e18 - DAT_20000e20;\n      if ((DAT_20000e3e & 0x80) == 0) {\n        DAT_20000eb0 = DAT_20000eb0 + 1;\n      }\n      else {\n        DAT_20000eb0 = DAT_20000eb0 + -1;\n      }\n    }\n    DAT_20000e1c = *(int *)(DAT_20000e38 + 6) + DAT_20000e1c;\n    if (0 < DAT_20000e1c) {\n      DAT_20000e3c = DAT_20000e3c | 0x100;\n      DAT_20000e1c = DAT_20000e1c - DAT_20000e20;\n      if ((DAT_20000e3e & 0x200) == 0) {\n        DAT_20000eb4 = DAT_20000eb4 + 1;\n      }\n      else {\n        DAT_20000eb4 = DAT_20000eb4 + -1;\n      }\n    }\n    DAT_20000e24 = DAT_20000e24 + 1;\n    if (DAT_20000e24 < *(uint *)(DAT_20000e38 + 8)) {\n      if (DAT_20000ea9 == '\\x04') {\n        returnValue = FUN_08005360();\n        if (returnValue != 0) {\n          if (*(uint *)(DAT_20000e38 + 0x18) < DAT_20000e30) {\n            DAT_20000e30 = DAT_20000e30 - *(int *)(DAT_20000e38 + 0x18);\n            FUN_08005324(DAT_20000e30);\n          }\n          else {\n            FUN_080057e4();\n            DAT_20000eaa = DAT_20000eaa | 4;\n          }\n        }\n      }\n      else if (DAT_20000e24 < *(uint *)(DAT_20000e38 + 0x1a)) {\n        returnValue = FUN_08005360();\n        if (returnValue != 0) {\n          DAT_20000e30 = DAT_20000e30 + *(int *)(DAT_20000e38 + 0x18);\n          if (*(uint *)(DAT_20000e38 + 0x1e) <= DAT_20000e30) {\n            DAT_20000e30 = *(uint *)(DAT_20000e38 + 0x1e);\n          }\n          FUN_08005324(DAT_20000e30);\n        }\n      }\n      else if (DAT_20000e24 < *(uint *)(DAT_20000e38 + 0x1c)) {\n        if (DAT_20000e30 != *(uint *)(DAT_20000e38 + 0x1e)) {\n          DAT_20000e30 = *(uint *)(DAT_20000e38 + 0x1e);\n          FUN_08005324(DAT_20000e30);\n        }\n      }\n      else if (DAT_20000e24 == *(uint *)(DAT_20000e38 + 0x1c)) {\n        if (DAT_20000e30 == *(uint *)(DAT_20000e38 + 0x1e)) {\n          DAT_20000e2c = 210000;\n        }\n        else {\n          DAT_20000e2c = 420000 - DAT_20000e2c;\n        }\n      }\n      else {\n        returnValue = FUN_08005360();\n        if (returnValue != 0) {\n          if (DAT_20000e34 < DAT_20000e30) {\n            DAT_20000e30 = DAT_20000e30 - *(int *)(DAT_20000e38 + 0x18);\n          }\n          else {\n            DAT_20000e30 = DAT_20000e30 >> 1;\n          }\n          if (DAT_20000e30 < *(uint *)(DAT_20000e38 + 0x16)) {\n            DAT_20000e30 = *(uint *)(DAT_20000e38 + 0x16);\n          }\n          FUN_08005324(DAT_20000e30);\n        }\n      }\n    }\n    else {\n      DAT_20000e3c = 0;\n      DAT_20000e38 = (ushort *)0x0;\n      FUN_08002f40();\n    }\n  }\n  DAT_20000e3c = DAT_20000e3c ^ DAT_20000ed4;\n  DAT_20000e3e = DAT_20000e3e ^ DAT_20000ed6;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080053a0": "update_data_080053a0",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08007c7c"
            ],
            "called": [
                "FUN_080052dc",
                "FUN_080057e4",
                "FUN_08005324",
                "FUN_08002f40",
                "FUN_08005360",
                "FUN_08002f74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005760": {
            "entrypoint": "0x08005760",
            "current_name": "initialize_data_08005760",
            "code": "\nvoid initializeData_08005760(void)\n\n{\n  FUN_080052ac(DAT_20000ed4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005760": "initialize_data_08005760"
            },
            "calling": [
                "FUN_08007c7c"
            ],
            "called": [
                "FUN_080052ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005778": {
            "entrypoint": "0x08005778",
            "current_name": "initialize_data_08005778",
            "code": "\nvoid initializeData_08005778(void)\n\n{\n  FUN_080052ac(DAT_20000e40);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005778": "initialize_data_08005778"
            },
            "calling": [
                "FUN_08007c7c"
            ],
            "called": [
                "FUN_080052ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005790": {
            "entrypoint": "0x08005790",
            "current_name": "initialize_data_08005790",
            "code": "\nvoid initializeData_08005790(void)\n\n{\n  FUNC_08005318();\n  if (DAT_20000ea9 == '\\x03') {\n    DAT_20000e3c = DAT_20000ed4;\n    DAT_20000e3e = DAT_20000ed6;\n    FUN_08007c40(0x69);\n    FUN_08007c5e((DAT_20000ec9 + 5) * 0x15);\n    FUN_08007b70();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005790": "initialize_data_08005790"
            },
            "calling": [
                "FUN_0800585c",
                "FUN_0800583c",
                "FUN_08001d4c"
            ],
            "called": [
                "FUN_08007c5e",
                "FUN_08007c40",
                "FUN_08005318",
                "FUN_08007b70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080057e4": {
            "entrypoint": "0x080057e4",
            "current_name": "check_and_execute_080057e4",
            "code": "\nvoid checkAndExecute_080057e4(void)\n\n{\n  FUN_08007bc2();\n  if ((DAT_20000ef8 != -1) || ((DAT_20000eaa & 0x20) != 0)) {\n    FUNC_0800530c();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080057e4": "check_and_execute_080057e4"
            },
            "calling": [
                "FUN_080053a0",
                "FUN_0800583c",
                "FUN_080025e8",
                "FUN_08001d4c"
            ],
            "called": [
                "FUN_0800530c",
                "FUN_08007bc2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005814": {
            "entrypoint": "0x08005814",
            "current_name": "initialize_data_08005814",
            "code": "\nvoid initializeData_08005814(void)\n\n{\n  FUN_0800b430(&DAT_20000e14,0,0x24);\n  FUN_08005324(800);\n  DAT_20000e38 = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005814": "initialize_data_08005814"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_0800b430",
                "FUN_08005324"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800583c": {
            "entrypoint": "0x0800583c",
            "current_name": "initialize_program_0800583c",
            "code": "\nvoid initializeProgram_0800583c(void)\n\n{\n  FUN_080052ac(DAT_20000ed4);\n  FUN_08005790();\n  FUN_080057e4();\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800583c": "initialize_program_0800583c"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08005790",
                "FUN_080057e4",
                "FUN_080052ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800585c": {
            "entrypoint": "0x0800585c",
            "current_name": "update_status_and_call_function_0800585c",
            "code": "\nvoid update_status_and_call_function_0800585c(void)\n\n{\n  if (DAT_20000ea9 == '\\x02') {\n    DAT_20000ea9 = '\\x03';\n    FUN_08005790();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800585c": "update_status_and_call_function_0800585c"
            },
            "calling": [
                "FUN_08001e98",
                "FUN_08003a74",
                "FUN_080024c4"
            ],
            "called": [
                "FUN_08005790"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800587c": {
            "entrypoint": "0x0800587c",
            "current_name": "update_status_0800587c",
            "code": "\nvoid updateStatus_0800587c(void)\n\n{\n  if (DAT_20000ea9 == '\\x03') {\n    DAT_20000ea9 = '\\x04';\n    DAT_20000eb8 = 0;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800587c": "update_status_0800587c"
            },
            "calling": [
                "FUN_08003a74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058a0": {
            "entrypoint": "0x080058a0",
            "current_name": "initialize_data_080058a0",
            "code": "\nvoid initializeData_080058a0(void)\n\n{\n  if (DAT_20000e38 == 0) {\n    DAT_20000ea9 = 0;\n  }\n  else {\n    FUN_08003618(*(int *)(DAT_20000e38 + 0x10) - DAT_20000e24);\n    DAT_20000e30 = 0;\n    FUN_08005324(0);\n    DAT_20000e2c = 210000;\n    DAT_20000e24 = 0;\n    DAT_20000ea9 = 2;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080058a0": "initialize_data_080058a0"
            },
            "calling": [
                "FUN_08003a74"
            ],
            "called": [
                "FUN_08003618",
                "FUN_08005324"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005900": {
            "entrypoint": "0x08005900",
            "current_name": "process_byte_08005900",
            "code": "\nundefined4 processByte_08005900(byte byteValue)\n\n{\n  if (byteValue == 0x7e) {\n    DAT_20000eaa = DAT_20000eaa | 2;\n    return 1;\n  }\n  if (byteValue < 0x7f) {\n    if (byteValue == 0x3f) {\n      DAT_20000eaa = DAT_20000eaa | 1;\n      return 1;\n    }\n    if (byteValue < 0x40) {\n      if (byteValue == 0x18) {\n        FUN_080025e8();\n        return 1;\n      }\n      if (byteValue == 0x21) {\n        DAT_20000eaa = DAT_20000eaa | 8;\n        return 1;\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005900": "process_byte_08005900",
                "param_1": "byteValue"
            },
            "calling": [
                "FUN_08008286"
            ],
            "called": [
                "FUN_080025e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800597c": {
            "entrypoint": "0x0800597c",
            "current_name": "invoke_software_interrupt_0800597c",
            "code": "\nvoid invokeSoftwareInterrupt_0800597c(void)\n\n{\n  software_interrupt(0x3f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800597c": "invoke_software_interrupt_0800597c"
            },
            "calling": [
                "FUN_08005984"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005984": {
            "entrypoint": "0x08005984",
            "current_name": "initialize_value_08005984",
            "code": "\nundefined4 initializeValue_08005984(undefined4 inputValue)\n\n{\n  undefined4 result;\n  \n  if (DAT_20000e44 == 0) {\n    result = FUN_0800597c(1,inputValue,0);\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005984": "initialize_value_08005984",
                "param_1": "inputValue",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_0800597c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080059b4": {
            "entrypoint": "0x080059b4",
            "current_name": "initialize_hardware_080059b4",
            "code": "\n\n\nundefined4 initializeHardware_080059b4(void)\n\n{\n  _DAT_40023c00 = _DAT_40023c00 | 0x700;\n  FUN_08006d72(16000);\n  FUN_08006ce0(3);\n  FUNC_08005a50();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080059b4": "initialize_hardware_080059b4"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_08005a50",
                "FUN_08006d72",
                "FUN_08006ce0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080059f8": {
            "entrypoint": "0x080059f8",
            "current_name": "initialize_data_080059f8",
            "code": "\n\n\nundefined4 initializeData_080059f8(void)\n\n{\n  _DAT_40023820 = 0;\n  _DAT_40023824 = 0;\n  _DAT_40023810 = 0;\n  _DAT_40023814 = 0;\n  _DAT_40023818 = 0;\n  FUNC_08005a5c();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080059f8": "initialize_data_080059f8"
            },
            "calling": [],
            "called": [
                "FUN_08005a5c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a50": {
            "entrypoint": "0x08005a50",
            "current_name": "FUNC_08005a50",
            "code": "\nvoid FUNC_08005a50(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a50": "FUNC_08005a50"
            },
            "calling": [
                "FUN_080059b4"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005a5c": {
            "entrypoint": "0x08005a5c",
            "current_name": "FUNC_08005a5c",
            "code": "\nvoid FUNC_08005a5c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a5c": "FUNC_08005a5c"
            },
            "calling": [
                "FUN_080059f8"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005a68": {
            "entrypoint": "0x08005a68",
            "current_name": "increment_counter_08005a68",
            "code": "\nvoid incrementCounter_08005a68(void)\n\n{\n  DAT_20000e48 = DAT_20000e48 + 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a68": "increment_counter_08005a68"
            },
            "calling": [
                "FUN_08007756"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a84": {
            "entrypoint": "0x08005a84",
            "current_name": "get_data_value_08005a84",
            "code": "\nundefined4 get_data_value_08005a84(void)\n\n{\n  return DAT_20000e48;\n}\n\n",
            "renaming": {
                "FUN_08005a84": "get_data_value_08005a84"
            },
            "calling": [
                "FUN_08007756",
                "FUN_08000268",
                "FUN_0800618c",
                "FUN_08005a98",
                "FUN_08005cec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a98": {
            "entrypoint": "0x08005a98",
            "current_name": "check_value_and_increment_08005a98",
            "code": "\nvoid checkValueAndIncrement_08005a98(int value)\n\n{\n  int initialValue;\n  uint randomValue;\n  \n  initialValue = FUN_08005a84();\n  do {\n    randomValue = FUN_08005a84();\n  } while (randomValue < (uint)(value + initialValue));\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a98": "check_value_and_increment_08005a98",
                "param_1": "value",
                "iVar1": "initialValue",
                "uVar2": "randomValue"
            },
            "calling": [
                "FUN_080002a0"
            ],
            "called": [
                "FUN_08005a84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005bdc": {
            "entrypoint": "0x08005bdc",
            "current_name": "store_byte_value_08005bdc",
            "code": "\nvoid storeByteValue_08005bdc(byte inputByte,uint inputValue)\n\n{\n  if ((byte)inputByte < '\\0') {\n    *(byte *)((inputByte & 0xf) + 0xe000ed14) = (byte)((inputValue & 0xff) << 4);\n  }\n  else {\n    *(byte *)((byte)inputByte + -0x1fff1c00) = (byte)((inputValue & 0xff) << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005bdc": "store_byte_value_08005bdc",
                "param_1": "inputByte",
                "param_2": "inputValue",
                "char": "byte"
            },
            "calling": [
                "FUN_08005c30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c30": {
            "entrypoint": "0x08005c30",
            "current_name": "check_and_set_param_08005c30",
            "code": "\n\n\nbool checkAndSetParam_08005c30(int inputParam)\n\n{\n  bool isParamValid;\n  \n  isParamValid = inputParam - 1U < 0x1000000;\n  if (isParamValid) {\n    _DAT_e000e014 = inputParam + -1;\n    FUN_08005bdc(0xffffffff,0xf);\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n  }\n  return !isParamValid;\n}\n\n",
            "renaming": {
                "FUN_08005c30": "check_and_set_param_08005c30",
                "param_1": "inputParam",
                "bVar1": "isParamValid"
            },
            "calling": [
                "FUN_0800618c"
            ],
            "called": [
                "FUN_08005bdc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cec": {
            "entrypoint": "0x08005cec",
            "current_name": "validate_permissions_08005cec",
            "code": "\n\n\nundefined4 validatePermissions_08005cec(uint *permissions)\n\n{\n  int result;\n  uint randomValue;\n  \n  if ((*permissions & 1) != 0) {\n    if (((_DAT_40023808 & 0xc) == 4) ||\n       (((_DAT_40023808 & 0xc) == 8 && ((_DAT_40023804 & 0x400000) == 0x400000)))) {\n      if (((_DAT_40023800 & 0x20000) != 0) && (permissions[1] != 1)) {\n        return 1;\n      }\n    }\n    else {\n      _DAT_40023800 = (uint3)_DAT_40023800;\n      result = FUN_08005a84();\n      while ((_DAT_40023800 & 0x20000) != 0) {\n        randomValue = FUN_08005a84();\n        if (result + 5000U <= randomValue) {\n          return 3;\n        }\n      }\n      _DAT_40023800 = CONCAT13(DAT_40023800_3,CONCAT12((char)permissions[1],_DAT_40023800));\n      if (permissions[1] == 1) {\n        result = FUN_08005a84();\n        while ((_DAT_40023800 & 0x20000) == 0) {\n          randomValue = FUN_08005a84();\n          if (result + 5000U <= randomValue) {\n            return 3;\n          }\n        }\n      }\n      else {\n        result = FUN_08005a84();\n        while ((_DAT_40023800 & 0x20000) != 0) {\n          randomValue = FUN_08005a84();\n          if (result + 5000U <= randomValue) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*permissions & 2) != 0) {\n    if (((_DAT_40023808 & 0xc) == 0) ||\n       (((_DAT_40023808 & 0xc) == 8 && ((_DAT_40023804 & 0x400000) == 0)))) {\n      if (((_DAT_40023800 & 2) != 0) && (permissions[3] != 1)) {\n        return 1;\n      }\n    }\n    else if (permissions[3] == 0) {\n      _DAT_42470000 = 0;\n      result = FUN_08005a84();\n      while ((_DAT_40023800 & 2) != 0) {\n        randomValue = FUN_08005a84();\n        if (result + 100U <= randomValue) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470000 = 1;\n      result = FUN_08005a84();\n      while ((_DAT_40023800 & 2) == 0) {\n        randomValue = FUN_08005a84();\n        if (result + 100U <= randomValue) {\n          return 3;\n        }\n      }\n      _DAT_40023800 = permissions[4] << 3 | _DAT_40023800 & 0xffffff07;\n    }\n  }\n  if ((*permissions & 8) != 0) {\n    if (permissions[5] == 0) {\n      _DAT_42470e80 = 0;\n      result = FUN_08005a84();\n      while ((_DAT_40023874 & 2) != 0) {\n        randomValue = FUN_08005a84();\n        if (result + 100U <= randomValue) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470e80 = 1;\n      result = FUN_08005a84();\n      while ((_DAT_40023874 & 2) == 0) {\n        randomValue = FUN_08005a84();\n        if (result + 100U <= randomValue) {\n          return 3;\n        }\n      }\n    }\n  }\n  if ((*permissions & 4) != 0) {\n    _DAT_40023840 = _DAT_40023840 | 0x10000000;\n    _DAT_40007000 = _DAT_40007000 | 0x100;\n    result = FUN_08005a84();\n    while ((_DAT_40007000 & 0x100) == 0) {\n      randomValue = FUN_08005a84();\n      if (result + 100U <= randomValue) {\n        return 3;\n      }\n    }\n    _DAT_40023870 = _DAT_40023870 & 0xffffff00;\n    result = FUN_08005a84();\n    while ((_DAT_40023870 & 2) != 0) {\n      randomValue = FUN_08005a84();\n      if (result + 5000U <= randomValue) {\n        return 3;\n      }\n    }\n    _DAT_40023870 = CONCAT31(DAT_40023870_1,(char)permissions[2]);\n    if (permissions[2] == 1) {\n      result = FUN_08005a84();\n      while ((_DAT_40023870 & 2) == 0) {\n        randomValue = FUN_08005a84();\n        if (result + 5000U <= randomValue) {\n          return 3;\n        }\n      }\n    }\n    else {\n      result = FUN_08005a84();\n      while ((_DAT_40023870 & 2) != 0) {\n        randomValue = FUN_08005a84();\n        if (result + 5000U <= randomValue) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (permissions[6] != 0) {\n    if ((_DAT_40023808 & 0xc) == 8) {\n      return 1;\n    }\n    if (permissions[6] == 2) {\n      _DAT_42470060 = 0;\n      result = FUN_08005a84();\n      while ((_DAT_40023800 & 0x2000000) != 0) {\n        randomValue = FUN_08005a84();\n        if (result + 100U <= randomValue) {\n          return 3;\n        }\n      }\n      _DAT_40023804 =\n           permissions[0xb] << 0x18 |\n           permissions[8] | permissions[9] << 6 | ((permissions[10] >> 1) - 1) * 0x10000 | permissions[7] |\n           0x20000000;\n      _DAT_42470060 = 1;\n      result = FUN_08005a84();\n      while ((_DAT_40023800 & 0x2000000) == 0) {\n        randomValue = FUN_08005a84();\n        if (result + 100U <= randomValue) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470060 = 0;\n      result = FUN_08005a84();\n      while ((_DAT_40023800 & 0x2000000) != 0) {\n        randomValue = FUN_08005a84();\n        if (result + 100U <= randomValue) {\n          return 3;\n        }\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005cec": "validate_permissions_08005cec",
                "param_1": "permissions",
                "iVar1": "result",
                "uVar2": "randomValue"
            },
            "calling": [
                "FUN_08007436"
            ],
            "called": [
                "FUN_08005a84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800618c": {
            "entrypoint": "0x0800618c",
            "current_name": "validate_and_execute_function_0800618c",
            "code": "\n\n\nundefined4 validateAndExecuteFunction_0800618c(uint *config,uint size)\n\n{\n  int result;\n  uint currentTime;\n  uint timeout;\n  undefined8 timestamp;\n  \n  if ((_DAT_40023c00 & 0xf) < size) {\n    _DAT_40023c00 = CONCAT31(DAT_40023c00_1,(char)size);\n    if (size != (size & 0xf)) {\n      return 1;\n    }\n    if ((*config & 1) != 0) {\n      if (config[1] == 1) {\n        if ((_DAT_40023800 & 0x20000) == 0) {\n          return 1;\n        }\n      }\n      else if ((config[1] != 2) && ((_DAT_40023800 & 2) == 0)) {\n        return 1;\n      }\n      _DAT_40023808 = config[1] | _DAT_40023808 & 0xfffffffc;\n      result = FUN_08005a84();\n      timeout = result + 5000;\n      if (config[1] == 1) {\n        while ((_DAT_40023808 & 0xc) != 4) {\n          currentTime = FUN_08005a84();\n          if (timeout <= currentTime) {\n            return 3;\n          }\n        }\n      }\n      else if (config[1] == 2) {\n        while ((_DAT_40023808 & 0xc) != 8) {\n          currentTime = FUN_08005a84();\n          if (timeout <= currentTime) {\n            return 3;\n          }\n        }\n      }\n      else {\n        while ((_DAT_40023808 & 0xc) != 0) {\n          currentTime = FUN_08005a84();\n          if (timeout <= currentTime) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  else {\n    if ((*config & 1) != 0) {\n      if (config[1] == 1) {\n        if ((_DAT_40023800 & 0x20000) == 0) {\n          return 1;\n        }\n      }\n      else if (config[1] == 2) {\n        if ((_DAT_40023800 & 0x2000000) == 0) {\n          return 1;\n        }\n      }\n      else if ((_DAT_40023800 & 2) == 0) {\n        return 1;\n      }\n      _DAT_40023808 = config[1] | _DAT_40023808 & 0xfffffffc;\n      result = FUN_08005a84();\n      timeout = result + 5000;\n      if (config[1] == 1) {\n        while ((_DAT_40023808 & 0xc) != 4) {\n          currentTime = FUN_08005a84();\n          if (timeout <= currentTime) {\n            return 3;\n          }\n        }\n      }\n      else if (config[1] == 2) {\n        while ((_DAT_40023808 & 0xc) != 8) {\n          currentTime = FUN_08005a84();\n          if (timeout <= currentTime) {\n            return 3;\n          }\n        }\n      }\n      else {\n        while ((_DAT_40023808 & 0xc) != 0) {\n          currentTime = FUN_08005a84();\n          if (timeout <= currentTime) {\n            return 3;\n          }\n        }\n      }\n    }\n    _DAT_40023c00 = CONCAT31(DAT_40023c00_1,(char)size);\n    if (size != (size & 0xf)) {\n      return 1;\n    }\n  }\n  if ((*config & 2) != 0) {\n    _DAT_40023808 = config[2] | _DAT_40023808 & 0xffffff0f;\n  }\n  if ((*config & 4) != 0) {\n    _DAT_40023808 = config[3] | _DAT_40023808 & 0xffffe3ff;\n  }\n  if ((*config & 8) != 0) {\n    _DAT_40023808 = config[4] << 3 | _DAT_40023808 & 0xffff1fff;\n  }\n  timestamp = FUN_08006628();\n  FUN_08005c30((uint)timestamp / 1000,(int)((ulonglong)timestamp >> 0x20),(uint)timestamp * 0x10624dd3);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800618c": "validate_and_execute_function_0800618c",
                "param_1": "config",
                "param_2": "size",
                "iVar1": "result",
                "uVar2": "currentTime",
                "uVar3": "timeout",
                "uVar4": "timestamp"
            },
            "calling": [
                "FUN_08007436"
            ],
            "called": [
                "FUN_08005a84",
                "FUN_08006628",
                "FUN_08005c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800640c": {
            "entrypoint": "0x0800640c",
            "current_name": "initialize_system_0800640c",
            "code": "\n\n\nvoid initializeSystem_0800640c(int mode,uint value1,uint value2)\n\n{\n  undefined4 flag;\n  undefined4 constant1;\n  undefined4 constant2;\n  undefined4 constant3;\n  undefined4 constant4;\n  \n  if (mode == 0) {\n    _DAT_40023830 = _DAT_40023830 | 1;\n    flag = 0x100;\n    constant1 = 2;\n    constant3 = 3;\n    constant2 = 0;\n    constant4 = 0;\n    FUN_08006e88(0x40020000,&flag);\n    _DAT_40023808 = value2 | value1 | _DAT_40023808 & 0xf89fffff;\n  }\n  else {\n    _DAT_40023830 = _DAT_40023830 | 4;\n    flag = 0x200;\n    constant1 = 2;\n    constant3 = 3;\n    constant2 = 0;\n    constant4 = 0;\n    FUN_08006e88(0x40020800,&flag);\n    _DAT_40023808 = value1 | value2 << 3 | _DAT_40023808 & 0x7ffffff;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800640c": "initialize_system_0800640c",
                "param_1": "mode",
                "param_2": "value1",
                "param_3": "value2",
                "local_1c": "flag",
                "local_18": "constant1",
                "local_14": "constant2",
                "local_10": "constant3",
                "local_c": "constant4"
            },
            "calling": [],
            "called": [
                "FUN_08006e88"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080064ec": {
            "entrypoint": "0x080064ec",
            "current_name": "calculate_clock_frequency_080064ec",
            "code": "\n\n\nuint calculateClockFrequency_080064ec(void)\n\n{\n  uint clockSource;\n  uint calculatedFrequency;\n  \n  clockSource = _DAT_40023808 & 0xc;\n  if (clockSource == 8) {\n    if ((_DAT_40023804 & 0x400000) == 0) {\n      calculatedFrequency = ((_DAT_40023804 & 0x7fc0) >> 6) * (16000000 / (_DAT_40023804 & 0x3f));\n    }\n    else {\n      calculatedFrequency = ((_DAT_40023804 & 0x7fc0) >> 6) * (8000000 / (_DAT_40023804 & 0x3f));\n    }\n    return calculatedFrequency / ((((_DAT_40023804 & 0x30000) >> 0x10) + 1) * 2);\n  }\n  if (clockSource < 9) {\n    if (clockSource == 0) {\n      return 16000000;\n    }\n    if (clockSource == 4) {\n      return 8000000;\n    }\n  }\n  return 16000000;\n}\n\n",
            "renaming": {
                "FUN_080064ec": "calculate_clock_frequency_080064ec",
                "uVar1": "clockSource",
                "local_c": "calculatedFrequency"
            },
            "calling": [
                "FUN_08006628"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006628": {
            "entrypoint": "0x08006628",
            "current_name": "calculate_shifted_value_08006628",
            "code": "\n\n\nuint calculateShiftedValue_08006628(void)\n\n{\n  uint result;\n  \n  result = FUN_080064ec();\n  DAT_20000000 = result >> (&DAT_0800bcac)[(_DAT_40023808 & 0xf0) >> 4];\n  return result >> (&DAT_0800bcac)[(_DAT_40023808 & 0xf0) >> 4];\n}\n\n",
            "renaming": {
                "FUN_08006628": "calculate_shifted_value_08006628",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08006680",
                "FUN_080066cc",
                "FUN_0800618c"
            ],
            "called": [
                "FUN_080064ec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006680": {
            "entrypoint": "0x08006680",
            "current_name": "shifted_value_by_index_08006680",
            "code": "\n\n\nuint shiftedValueByIndex_08006680(void)\n\n{\n  uint result;\n  \n  result = FUN_08006628();\n  return result >> (&DAT_0800bcac)[(_DAT_40023808 & 0x1c00) >> 10];\n}\n\n",
            "renaming": {
                "FUN_08006680": "shifted_value_by_index_08006680",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08007f54"
            ],
            "called": [
                "FUN_08006628"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080066cc": {
            "entrypoint": "0x080066cc",
            "current_name": "shift_right_by_data_080066cc",
            "code": "\n\n\nuint shiftRightByData_080066cc(void)\n\n{\n  uint result;\n  \n  result = FUN_08006628();\n  return result >> (&DAT_0800bcac)[(_DAT_40023808 & 0xe000) >> 0xd];\n}\n\n",
            "renaming": {
                "FUN_080066cc": "shift_right_by_data_080066cc",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08007f54"
            ],
            "called": [
                "FUN_08006628"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006950": {
            "entrypoint": "0x08006950",
            "current_name": "update_register_value_08006950",
            "code": "\n\n\nvoid updateRegisterValue_08006950(uint input)\n\n{\n  _DAT_e000ed0c = _DAT_e000ed0c & 0xf8ff | (input & 7) << 8 | 0x5fa0000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006950": "update_register_value_08006950",
                "param_1": "input"
            },
            "calling": [
                "FUN_08006ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006998": {
            "entrypoint": "0x08006998",
            "current_name": "get_number_of_bits_08006998",
            "code": "\n\n\nuint getNumberOfBits_08006998(void)\n\n{\n  return _DAT_e000ed0c >> 8 & 7;\n}\n\n",
            "renaming": {
                "FUN_08006998": "get_number_of_bits_08006998"
            },
            "calling": [
                "FUN_08006d8a",
                "FUN_08006cf6"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080069b4": {
            "entrypoint": "0x080069b4",
            "current_name": "set_bit_in_memory_080069b4",
            "code": "\nvoid setBitInMemory_080069b4(byte byteValue)\n\n{\n  *(int *)(((uint)(int)(char)byteValue >> 5) * 4 + -0x1fff1f00) = 1 << (byteValue & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080069b4": "set_bit_in_memory_080069b4",
                "param_1": "byteValue"
            },
            "calling": [
                "FUN_08006d2e"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080069e4": {
            "entrypoint": "0x080069e4",
            "current_name": "set_bit_value_080069e4",
            "code": "\nvoid setBitValue_080069e4(byte byteValue)\n\n{\n  *(int *)((((uint)(int)(char)byteValue >> 5) + 0x20) * 4 + -0x1fff1f00) = 1 << (byteValue & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080069e4": "set_bit_value_080069e4",
                "param_1": "byteValue"
            },
            "calling": [
                "FUN_08006d4a"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006a18": {
            "entrypoint": "0x08006a18",
            "current_name": "check_byte_bit_08006a18",
            "code": "\nbool checkByteBit_08006a18(byte byteToCheck)\n\n{\n  return (*(uint *)((((uint)(int)(char)byteToCheck >> 5) + 0x40) * 4 + -0x1fff1f00) &\n         1 << (byteToCheck & 0x1f)) != 0;\n}\n\n",
            "renaming": {
                "FUN_08006a18": "check_byte_bit_08006a18",
                "param_1": "byteToCheck"
            },
            "calling": [
                "FUN_08006de0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006a58": {
            "entrypoint": "0x08006a58",
            "current_name": "set_bit_in_memory_08006a58",
            "code": "\nvoid setBitInMemory_08006a58(byte inputByte)\n\n{\n  *(int *)((((uint)(int)(char)inputByte >> 5) + 0x40) * 4 + -0x1fff1f00) = 1 << (inputByte & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006a58": "set_bit_in_memory_08006a58",
                "param_1": "inputByte"
            },
            "calling": [
                "FUN_08006dc4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006a8c": {
            "entrypoint": "0x08006a8c",
            "current_name": "set_bit_08006a8c",
            "code": "\nvoid setBit_08006a8c(byte inputByte)\n\n{\n  *(int *)((((uint)(int)(char)inputByte >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (inputByte & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006a8c": "set_bit_08006a8c",
                "param_1": "inputByte"
            },
            "calling": [
                "FUN_08006dfe"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ac0": {
            "entrypoint": "0x08006ac0",
            "current_name": "is_bit_set_08006ac0",
            "code": "\nbool is_bit_set_08006ac0(byte byte_value)\n\n{\n  return (*(uint *)((((uint)(int)(char)byte_value >> 5) + 0x80) * 4 + -0x1fff1f00) &\n         1 << (byte_value & 0x1f)) != 0;\n}\n\n",
            "renaming": {
                "FUN_08006ac0": "is_bit_set_08006ac0",
                "param_1": "byte_value"
            },
            "calling": [
                "FUN_08006e1a"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b00": {
            "entrypoint": "0x08006b00",
            "current_name": "write_to_memory_08006b00",
            "code": "\nvoid writeToMemory_08006b00(byte address,uint data)\n\n{\n  if ((char)address < '\\0') {\n    *(char *)((address & 0xf) + 0xe000ed14) = (char)((data & 0xff) << 4);\n  }\n  else {\n    *(char *)((char)address + -0x1fff1c00) = (char)((data & 0xff) << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006b00": "write_to_memory_08006b00",
                "param_1": "address",
                "param_2": "data"
            },
            "calling": [
                "FUN_08006c9c",
                "FUN_08006cf6"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b54": {
            "entrypoint": "0x08006b54",
            "current_name": "extracted_byte_08006b54",
            "code": "\nbyte extractedByte_08006b54(byte inputByte)\n\n{\n  byte result;\n  \n  if ((char)inputByte < '\\0') {\n    result = *(byte *)((inputByte & 0xf) + 0xe000ed14);\n  }\n  else {\n    result = *(byte *)((char)inputByte + -0x1fff1c00);\n  }\n  return result >> 4;\n}\n\n",
            "renaming": {
                "FUN_08006b54": "extracted_byte_08006b54",
                "param_1": "inputByte",
                "bVar1": "result"
            },
            "calling": [
                "FUN_08006d98"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ba0": {
            "entrypoint": "0x08006ba0",
            "current_name": "mask_bits_08006ba0",
            "code": "\nuint maskBits_08006ba0(uint inputBits,uint inputMask,uint data)\n\n{\n  uint bitsToKeep;\n  \n  inputBits = inputBits & 7;\n  bitsToKeep = 7 - inputBits;\n  if (3 < bitsToKeep) {\n    bitsToKeep = 4;\n  }\n  if (inputBits + 4 < 7) {\n    inputBits = 0;\n  }\n  else {\n    inputBits = inputBits - 3;\n  }\n  return data & (1 << (inputBits & 0xff)) - 1U |\n         ((1 << (bitsToKeep & 0xff)) - 1U & inputMask) << (inputBits & 0xff);\n}\n\n",
            "renaming": {
                "FUN_08006ba0": "mask_bits_08006ba0",
                "param_1": "inputBits",
                "param_2": "inputMask",
                "param_3": "data",
                "uVar1": "bitsToKeep"
            },
            "calling": [
                "FUN_08006cf6"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c04": {
            "entrypoint": "0x08006c04",
            "current_name": "extract_bits_08006c04",
            "code": "\nvoid extract_bits_08006c04(uint input,uint num_bits,uint *output1,uint *output2)\n\n{\n  uint remaining_bits;\n  \n  num_bits = num_bits & 7;\n  remaining_bits = 7 - num_bits;\n  if (3 < remaining_bits) {\n    remaining_bits = 4;\n  }\n  if (num_bits + 4 < 7) {\n    num_bits = 0;\n  }\n  else {\n    num_bits = num_bits - 3;\n  }\n  *output1 = (1 << (remaining_bits & 0xff)) - 1U & input >> (num_bits & 0xff);\n  *output2 = (1 << (num_bits & 0xff)) - 1U & input;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006c04": "extract_bits_08006c04",
                "param_1": "input",
                "param_2": "num_bits",
                "param_3": "output1",
                "param_4": "output2",
                "uVar1": "remaining_bits"
            },
            "calling": [
                "FUN_08006d98"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c70": {
            "entrypoint": "0x08006c70",
            "current_name": "run_infinite_loop_08006c70",
            "code": "\nvoid runInfiniteLoop_08006c70(void)\n\n{\n  syncBarrier(0xf);\n  syncBarrier(0xf);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08006c70": "run_infinite_loop_08006c70",
                "DataSynchronizationBarrier": "syncBarrier"
            },
            "calling": [
                "FUN_08006d66"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c9c": {
            "entrypoint": "0x08006c9c",
            "current_name": "check_and_update_param_08006c9c",
            "code": "\n\n\nbool checkAndUpdateParam_08006c9c(int inputParam)\n\n{\n  bool isInRange;\n  \n  isInRange = inputParam - 1U < 0x1000000;\n  if (isInRange) {\n    _DAT_e000e014 = inputParam + -1;\n    FUN_08006b00(0xffffffff,0xf);\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n  }\n  return !isInRange;\n}\n\n",
            "renaming": {
                "FUN_08006c9c": "check_and_update_param_08006c9c",
                "param_1": "inputParam",
                "bVar1": "isInRange"
            },
            "calling": [
                "FUN_08006d72"
            ],
            "called": [
                "FUN_08006b00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ce0": {
            "entrypoint": "0x08006ce0",
            "current_name": "execute_initialization_08006ce0",
            "code": "\nvoid execute_initialization_08006ce0(undefined4 input_param)\n\n{\n  FUN_08006950(input_param);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006ce0": "execute_initialization_08006ce0",
                "param_1": "input_param"
            },
            "calling": [
                "FUN_080059b4"
            ],
            "called": [
                "FUN_08006950"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006cf6": {
            "entrypoint": "0x08006cf6",
            "current_name": "execute_function_08006cf6",
            "code": "\nvoid executeFunction_08006cf6(char character,undefined4 parameter1,undefined4 parameter2)\n\n{\n  undefined4 functionResult;\n  \n  functionResult = FUN_08006998();\n  functionResult = FUN_08006ba0(functionResult,parameter1,parameter2);\n  FUN_08006b00((int)character,functionResult);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006cf6": "execute_function_08006cf6",
                "param_1": "character",
                "param_2": "parameter1",
                "param_3": "parameter2",
                "uVar1": "functionResult"
            },
            "calling": [
                "FUN_08007a70"
            ],
            "called": [
                "FUN_08006998",
                "FUN_08006b00",
                "FUN_08006ba0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d2e": {
            "entrypoint": "0x08006d2e",
            "current_name": "execute_function_08006d2e",
            "code": "\nvoid executeFunction_08006d2e(char inputParameter)\n\n{\n  FUN_080069b4((int)inputParameter);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d2e": "execute_function_08006d2e",
                "param_1": "inputParameter"
            },
            "calling": [],
            "called": [
                "FUN_080069b4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d4a": {
            "entrypoint": "0x08006d4a",
            "current_name": "initialize_function_08006d4a",
            "code": "\nvoid initializeFunction_08006d4a(char character)\n\n{\n  FUN_080069e4((int)character);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d4a": "initialize_function_08006d4a",
                "param_1": "character"
            },
            "calling": [],
            "called": [
                "FUN_080069e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d66": {
            "entrypoint": "0x08006d66",
            "current_name": "initialize_program_08006d66",
            "code": "\nvoid initialize_program_08006d66(void)\n\n{\n  FUN_08006c70();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d66": "initialize_program_08006d66"
            },
            "calling": [],
            "called": [
                "FUN_08006c70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d72": {
            "entrypoint": "0x08006d72",
            "current_name": "process_data_08006d72",
            "code": "\nundefined4 processData_08006d72(undefined4 inputData)\n\n{\n  undefined4 result;\n  \n  result = FUN_08006c9c(inputData);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08006d72": "process_data_08006d72",
                "param_1": "inputData",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080059b4"
            ],
            "called": [
                "FUN_08006c9c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d8a": {
            "entrypoint": "0x08006d8a",
            "current_name": "get_result_08006d8a",
            "code": "\nundefined4 getResult_08006d8a(void)\n\n{\n  undefined4 result;\n  \n  result = FUN_08006998();\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08006d8a": "get_result_08006d8a",
                "uVar1": "result"
            },
            "calling": [],
            "called": [
                "FUN_08006998"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d98": {
            "entrypoint": "0x08006d98",
            "current_name": "process_char_08006d98",
            "code": "\nvoid processChar_08006d98(char inputChar,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined4 convertedChar;\n  \n  convertedChar = FUN_08006b54((int)inputChar);\n  FUN_08006c04(convertedChar,param2,param3,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d98": "process_char_08006d98",
                "param_1": "inputChar",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "convertedChar"
            },
            "calling": [],
            "called": [
                "FUN_08006b54",
                "FUN_08006c04"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006dc4": {
            "entrypoint": "0x08006dc4",
            "current_name": "execute_function_08006dc4",
            "code": "\nvoid executeFunction_08006dc4(char character)\n\n{\n  FUN_08006a58((int)character);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006dc4": "execute_function_08006dc4",
                "param_1": "character"
            },
            "calling": [],
            "called": [
                "FUN_08006a58"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006de0": {
            "entrypoint": "0x08006de0",
            "current_name": "reverse_string_08006de0",
            "code": "\nundefined4 reverseString_08006de0(char inputString)\n\n{\n  undefined4 reversedString;\n  \n  reversedString = FUN_08006a18((int)inputString);\n  return reversedString;\n}\n\n",
            "renaming": {
                "FUN_08006de0": "reverse_string_08006de0",
                "param_1": "inputString",
                "uVar1": "reversedString"
            },
            "calling": [],
            "called": [
                "FUN_08006a18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006dfe": {
            "entrypoint": "0x08006dfe",
            "current_name": "initialize_function_08006dfe",
            "code": "\nvoid initializeFunction_08006dfe(char inputParam)\n\n{\n  FUN_08006a8c((int)inputParam);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006dfe": "initialize_function_08006dfe",
                "param_1": "inputParam"
            },
            "calling": [],
            "called": [
                "FUN_08006a8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e1a": {
            "entrypoint": "0x08006e1a",
            "current_name": "convert_char_to_undefined4_08006e1a",
            "code": "\nundefined4 convertCharToUndefined4_08006e1a(char inputChar)\n\n{\n  undefined4 result;\n  \n  result = FUN_08006ac0((int)inputChar);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08006e1a": "convert_char_to_undefined4_08006e1a",
                "param_1": "inputChar",
                "uVar1": "result"
            },
            "calling": [],
            "called": [
                "FUN_08006ac0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e88": {
            "entrypoint": "0x08006e88",
            "current_name": "update_flags_and_values_08006e88",
            "code": "\n\n\nvoid updateFlagsAndValues_08006e88(uint *flagsArray,uint *inputValuesArray)\n\n{\n  uint mask;\n  uint bitValue;\n  int index;\n  uint counter;\n  \n  for (counter = 0; counter < 0x10; counter = counter + 1) {\n    mask = 1 << (counter & 0xff);\n    bitValue = *inputValuesArray & mask;\n    if (bitValue == mask) {\n      if ((inputValuesArray[1] == 2) || (inputValuesArray[1] == 0x12)) {\n        mask = inputValuesArray[4];\n        flagsArray[(counter >> 3) + 8] = flagsArray[(counter >> 3) + 8] & ~(0xf << ((counter & 7) << 2));\n        flagsArray[(counter >> 3) + 8] = flagsArray[(counter >> 3) + 8] | mask << ((counter & 7) << 2);\n      }\n      *flagsArray = *flagsArray & ~(3 << ((counter & 0x7f) << 1));\n      *flagsArray = *flagsArray | (inputValuesArray[1] & 3) << ((counter & 0x7f) << 1);\n      if ((((inputValuesArray[1] == 1) || (inputValuesArray[1] == 2)) || (inputValuesArray[1] == 0x11)) || (inputValuesArray[1] == 0x12)\n         ) {\n        flagsArray[2] = flagsArray[2] & ~(3 << ((counter & 0x7f) << 1));\n        flagsArray[2] = flagsArray[2] | inputValuesArray[3] << ((counter & 0x7f) << 1);\n        flagsArray[1] = flagsArray[1] & ~(1 << (counter & 0xff));\n        flagsArray[1] = flagsArray[1] | (inputValuesArray[1] >> 4 & 1) << (counter & 0xff);\n      }\n      flagsArray[3] = flagsArray[3] & ~(3 << ((counter & 0x7f) << 1));\n      flagsArray[3] = flagsArray[3] | inputValuesArray[2] << ((counter & 0x7f) << 1);\n      if ((inputValuesArray[1] & 0x10000000) != 0) {\n        _DAT_40023844 = _DAT_40023844 | 0x4000;\n        *(uint *)(((counter >> 2) + 2) * 4 + 0x40013800) =\n             ~(0xf << ((counter & 3) << 2)) & *(uint *)(((counter >> 2) + 2) * 4 + 0x40013800);\n        if (flagsArray == (uint *)0x40020000) {\n          index = 0;\n        }\n        else if (flagsArray == (uint *)0x40020400) {\n          index = 1;\n        }\n        else if (flagsArray == (uint *)0x40020800) {\n          index = 2;\n        }\n        else if (flagsArray == (uint *)0x40020c00) {\n          index = 3;\n        }\n        else if (flagsArray == (uint *)0x40021000) {\n          index = 4;\n        }\n        else if (flagsArray == (uint *)0x40021400) {\n          index = 5;\n        }\n        else if (flagsArray == (uint *)0x40021800) {\n          index = 6;\n        }\n        else if (flagsArray == (uint *)0x40021c00) {\n          index = 7;\n        }\n        else if (flagsArray == (uint *)0x40022000) {\n          index = 8;\n        }\n        else if (flagsArray == (uint *)0x40022400) {\n          index = 9;\n        }\n        else {\n          index = 10;\n        }\n        *(uint *)(((counter >> 2) + 2) * 4 + 0x40013800) =\n             index << ((counter & 3) << 2) | *(uint *)(((counter >> 2) + 2) * 4 + 0x40013800);\n        _DAT_40013c00 = ~bitValue & _DAT_40013c00;\n        _DAT_40013c04 = ~bitValue & _DAT_40013c04;\n        if ((inputValuesArray[1] & 0x10000) != 0) {\n          _DAT_40013c00 = bitValue | _DAT_40013c00;\n        }\n        if ((inputValuesArray[1] & 0x20000) != 0) {\n          _DAT_40013c04 = bitValue | _DAT_40013c04;\n        }\n        _DAT_40013c08 = ~bitValue & _DAT_40013c08;\n        _DAT_40013c0c = ~bitValue & _DAT_40013c0c;\n        if ((inputValuesArray[1] & 0x100000) != 0) {\n          _DAT_40013c08 = bitValue | _DAT_40013c08;\n        }\n        if ((inputValuesArray[1] & 0x200000) != 0) {\n          _DAT_40013c0c = bitValue | _DAT_40013c0c;\n        }\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006e88": "update_flags_and_values_08006e88",
                "param_1": "flagsArray",
                "param_2": "inputValuesArray",
                "uVar1": "mask",
                "uVar2": "bitValue",
                "iVar3": "index",
                "local_c": "counter"
            },
            "calling": [
                "FUN_0800640c",
                "FUN_0800778c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800733e": {
            "entrypoint": "0x0800733e",
            "current_name": "update_param_0800733e",
            "code": "\nvoid updateParam_0800733e(int baseAddress,undefined2 value,char isNotNull)\n\n{\n  if (isNotNull == '\\0') {\n    *(undefined2 *)(baseAddress + 0x1a) = value;\n  }\n  else {\n    *(undefined2 *)(baseAddress + 0x18) = value;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800733e": "update_param_0800733e",
                "param_1": "baseAddress",
                "param_2": "value",
                "param_3": "isNotNull"
            },
            "calling": [
                "FUN_0800778c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800738e": {
            "entrypoint": "0x0800738e",
            "current_name": "update_param_and_call_function_0800738e",
            "code": "\n\n\nvoid updateParamAndCallFunction_0800738e(ushort value)\n\n{\n  if ((value & _DAT_40013c14) != 0) {\n    _DAT_40013c14 = (uint)value;\n    FUNC_080073c0(value);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800738e": "update_param_and_call_function_0800738e",
                "param_1": "value"
            },
            "calling": [],
            "called": [
                "FUN_080073c0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073c0": {
            "entrypoint": "0x080073c0",
            "current_name": "FUNC_080073c0",
            "code": "\nvoid FUNC_080073c0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080073c0": "FUNC_080073c0"
            },
            "calling": [
                "FUN_0800738e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080073d4": {
            "entrypoint": "0x080073d4",
            "current_name": "set_bit_in_memory_080073d4",
            "code": "\nvoid setBitInMemory_080073d4(uint input)\n\n{\n  *(short *)(((int)input >> 4) * 0x400 + 0x4002001a) = (short)(1 << (input & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_080073d4": "set_bit_in_memory_080073d4",
                "param_1": "input"
            },
            "calling": [
                "FUN_08007520"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007402": {
            "entrypoint": "0x08007402",
            "current_name": "set_bit_08007402",
            "code": "\nvoid setBit_08007402(uint input)\n\n{\n  *(short *)(((int)input >> 4) * 0x400 + 0x40020018) = (short)(1 << (input & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007402": "set_bit_08007402",
                "param_1": "input"
            },
            "calling": [
                "FUN_080074c8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007430": {
            "entrypoint": "0x08007430",
            "current_name": "run_infinite_loop_08007430",
            "code": "\nvoid runInfiniteLoop_08007430(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08007430": "run_infinite_loop_08007430"
            },
            "calling": [
                "FUN_08007436"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007436": {
            "entrypoint": "0x08007436",
            "current_name": "initialize_system_08007436",
            "code": "\n\n\nvoid initializeSystem_08007436(void)\n\n{\n  int iVar1;\n  undefined4 flag1;\n  undefined4 flag2;\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  undefined4 value4;\n  undefined4 value5;\n  undefined4 value6;\n  undefined4 option1;\n  undefined4 option2;\n  undefined4 option3;\n  undefined4 option4;\n  undefined4 option5;\n  \n  _DAT_40023840 = _DAT_40023840 | 0x10000000;\n  _DAT_40007000 = _DAT_40007000 | 0xc000;\n  flag1 = 1;\n  flag2 = 1;\n  value1 = 2;\n  value2 = 0x400000;\n  value3 = 8;\n  value4 = 0x150;\n  value5 = 2;\n  value6 = 7;\n  iVar1 = FUN_08005cec(&flag1);\n  if (iVar1 != 0) {\n    FUN_08007430();\n  }\n  option1 = 0xf;\n  option2 = 2;\n  option3 = 0;\n  option4 = 0x1400;\n  option5 = 0x1000;\n  iVar1 = FUN_0800618c(&option1,5);\n  if (iVar1 != 0) {\n    FUN_08007430();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007436": "initialize_system_08007436",
                "local_4c": "flag1",
                "local_48": "flag2",
                "local_34": "value1",
                "local_30": "value2",
                "local_2c": "value3",
                "local_28": "value4",
                "local_24": "value5",
                "local_20": "value6",
                "local_1c": "option1",
                "local_18": "option2",
                "local_14": "option3",
                "local_10": "option4",
                "local_c": "option5"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_0800618c",
                "FUN_08007430",
                "FUN_08005cec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080074c8": {
            "entrypoint": "0x080074c8",
            "current_name": "process_flags_080074c8",
            "code": "\nvoid process_flags_080074c8(uint flags)\n\n{\n  if ((flags & 1) != 0) {\n    FUN_08007402(0x3e);\n  }\n  if ((DAT_20000e4c != 0) && ((flags & 0x1e) != 0)) {\n    FUN_0800195c();\n  }\n  if ((DAT_20000e50 != 0) && ((flags & 0x80) != 0)) {\n    FUN_08003a18(flags);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080074c8": "process_flags_080074c8",
                "param_1": "flags"
            },
            "calling": [
                "FUN_08007930"
            ],
            "called": [
                "FUN_0800195c",
                "FUN_08007402",
                "FUN_08003a18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007520": {
            "entrypoint": "0x08007520",
            "current_name": "check_and_call_function_08007520",
            "code": "\nvoid checkAndCallFunction_08007520(uint input)\n\n{\n  if ((input & 1) != 0) {\n    FUN_080073d4(0x3e);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007520": "check_and_call_function_08007520",
                "param_1": "input"
            },
            "calling": [
                "FUN_08007930"
            ],
            "called": [
                "FUN_080073d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007540": {
            "entrypoint": "0x08007540",
            "current_name": "initialize_application_08007540",
            "code": "\nundefined4 initialize_application_08007540(void)\n\n{\n  FUN_080059b4();\n  FUN_08007436();\n  FUN_0800778c();\n  FUN_08007e08();\n  FUN_080079c0();\n  FUN_08008190();\n  FUN_08005984(0);\n  FUN_08001ddc();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007540": "initialize_application_08007540"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_080059b4",
                "FUN_08007e08",
                "FUN_0800778c",
                "FUN_08005984",
                "FUN_08007436",
                "FUN_08008190",
                "FUN_080079c0",
                "FUN_08001ddc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800756c": {
            "entrypoint": "0x0800756c",
            "current_name": "initialize_system_0800756c",
            "code": "\n\n\nvoid initializeSystem_0800756c(void)\n\n{\n  _DAT_40023808 = 0;\n  _DAT_40023804 = 0x24003010;\n  _DAT_40023800 = _DAT_40023800 & 0xfef2ffff | 1;\n  _DAT_4002380c = 0;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800756c": "initialize_system_0800756c"
            },
            "calling": [
                "entry"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080076c8": {
            "entrypoint": "0x080076c8",
            "current_name": "toggle_bit_080076c8",
            "code": "\nvoid toggleBit_080076c8(uint input)\n\n{\n  *(uint *)(((int)input >> 4) * 0x400 + 0x40020014) =\n       *(uint *)(((int)input >> 4) * 0x400 + 0x40020014) ^ 1 << (input & 0xf);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080076c8": "toggle_bit_080076c8",
                "param_1": "input"
            },
            "calling": [
                "FUN_08007756"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007756": {
            "entrypoint": "0x08007756",
            "current_name": "check_and_execute_operations_08007756",
            "code": "\nvoid checkAndExecuteOperations_08007756(void)\n\n{\n  uint result;\n  \n  result = FUN_08005a84();\n  if ((result & 0x1ff) == 0) {\n    FUN_080076c8(0x3c);\n  }\n  if ((result & 0xf) == 0) {\n    FUN_08007930();\n  }\n  FUN_08005a68();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007756": "check_and_execute_operations_08007756",
                "uVar1": "result"
            },
            "calling": [],
            "called": [
                "FUN_08005a68",
                "FUN_08007930",
                "FUN_08005a84",
                "FUN_080076c8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800778c": {
            "entrypoint": "0x0800778c",
            "current_name": "initialize_device_0800778c",
            "code": "\n\n\nvoid initializeDevice_0800778c(void)\n\n{\n  int index;\n  int bitmask;\n  undefined4 value_1;\n  undefined4 value_2;\n  undefined4 value_3;\n  undefined4 value_4;\n  uint *array;\n  uint count;\n  \n  for (count = 0; count < 0x11; count = count + 1) {\n    index = count * 0x18;\n    array = (uint *)(&DAT_0800bcbc + index);\n    _DAT_40023830 = _DAT_40023830 | 1 << (*array >> 4 & 0xff);\n    bitmask = 1 << (*array & 0xf);\n    value_1 = *(undefined4 *)(&DAT_0800bcc0 + index);\n    value_2 = *(undefined4 *)(&DAT_0800bcc4 + index);\n    value_3 = *(undefined4 *)(&DAT_0800bcc8 + index);\n    value_4 = *(undefined4 *)(&DAT_0800bccc + index);\n    FUN_08006e88(((*array >> 4) + 0x100080) * 0x400,&bitmask);\n    if (-1 < (int)array[5]) {\n      FUN_0800733e(((*array >> 4) + 0x100080) * 0x400,1 << (*array & 0xf) & 0xffff,\n                   array[5] & 0xff);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800778c": "initialize_device_0800778c",
                "iVar1": "index",
                "local_24": "bitmask",
                "local_20": "value_1",
                "local_1c": "value_2",
                "local_18": "value_3",
                "local_14": "value_4",
                "local_10": "array",
                "local_c": "count"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_08006e88",
                "FUN_0800733e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007854": {
            "entrypoint": "0x08007854",
            "current_name": "check_bit_value_08007854",
            "code": "\nuint check_bit_value_08007854(uint input_value)\n\n{\n  return *(uint *)(((int)input_value >> 4) * 0x400 + 0x40020010) >> (input_value & 0xf) & 1;\n}\n\n",
            "renaming": {
                "FUN_08007854": "check_bit_value_08007854",
                "param_1": "input_value"
            },
            "calling": [
                "FUN_08007884"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007884": {
            "entrypoint": "0x08007884",
            "current_name": "combine_flags_08007884",
            "code": "\nuint combineFlags_08007884(void)\n\n{\n  int flag1;\n  int flag2;\n  int flag3;\n  int flag4;\n  int flag5;\n  uint flag0;\n  \n  flag1 = FUN_08007854(0x36);\n  flag2 = FUN_08007854(0x37);\n  flag3 = FUN_08007854(0x38);\n  flag4 = FUN_08007854(0x39);\n  flag5 = FUN_08007854(0xf);\n  flag0 = FUN_08007854(0);\n  return flag0 | flag1 << 4 | flag2 << 3 | flag3 << 2 | flag4 << 1 | flag5 << 7;\n}\n\n",
            "renaming": {
                "FUN_08007884": "combine_flags_08007884",
                "iVar1": "flag1",
                "iVar2": "flag2",
                "iVar3": "flag3",
                "iVar4": "flag4",
                "iVar5": "flag5",
                "uVar6": "flag0"
            },
            "calling": [
                "FUN_08007930"
            ],
            "called": [
                "FUN_08007854"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080078f4": {
            "entrypoint": "0x080078f4",
            "current_name": "combine_values_080078f4",
            "code": "\nuint combineValues_080078f4(void)\n\n{\n  int index;\n  uint combinedValue;\n  \n  combinedValue = 0;\n  for (index = 0; index < 4; index = index + 1) {\n    combinedValue = *(uint *)(&DAT_20000e54 + index * 4) | combinedValue;\n  }\n  return combinedValue;\n}\n\n",
            "renaming": {
                "FUN_080078f4": "combine_values_080078f4",
                "local_10": "index",
                "local_c": "combinedValue"
            },
            "calling": [
                "FUN_08007930",
                "FUN_08001994"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007930": {
            "entrypoint": "0x08007930",
            "current_name": "update_data_08007930",
            "code": "\nvoid updateData_08007930(void)\n\n{\n  int index;\n  uint previousValue;\n  undefined4 newValue;\n  uint currentValue;\n  uint changedBits;\n  \n  index = DAT_20000e68;\n  previousValue = DAT_20000e64;\n  if (DAT_20000e6c != 0) {\n    newValue = FUN_08007884();\n    *(undefined4 *)(&DAT_20000e54 + index * 4) = newValue;\n    if (DAT_20000e68 == 3) {\n      DAT_20000e68 = 0;\n    }\n    else {\n      DAT_20000e68 = DAT_20000e68 + 1;\n    }\n    currentValue = FUN_080078f4();\n    previousValue = DAT_20000e64;\n    if (currentValue != DAT_20000e64) {\n      changedBits = ~currentValue & DAT_20000e64;\n      if ((~DAT_20000e64 & currentValue) != 0) {\n        FUN_080074c8(~DAT_20000e64 & currentValue);\n      }\n      previousValue = currentValue;\n      if (changedBits != 0) {\n        FUN_08007520(changedBits);\n      }\n    }\n  }\n  DAT_20000e64 = previousValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007930": "update_data_08007930",
                "iVar1": "index",
                "uVar2": "previousValue",
                "uVar3": "newValue",
                "uVar4": "currentValue",
                "uVar5": "changedBits"
            },
            "calling": [
                "FUN_08007756"
            ],
            "called": [
                "FUN_080074c8",
                "FUN_080078f4",
                "FUN_08007884",
                "FUN_08007520"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080079c0": {
            "entrypoint": "0x080079c0",
            "current_name": "initialize_data_080079c0",
            "code": "\nvoid initializeData_080079c0(void)\n\n{\n  FUN_0800b430(&DAT_20000e54,0,0x18);\n  DAT_20000e6c = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080079c0": "initialize_data_080079c0"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_0800b430"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080079e0": {
            "entrypoint": "0x080079e0",
            "current_name": "set_bit_080079e0",
            "code": "\nvoid setBit_080079e0(byte inputByte)\n\n{\n  *(int *)(((uint)(int)(char)inputByte >> 5) * 4 + -0x1fff1f00) = 1 << (inputByte & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080079e0": "set_bit_080079e0",
                "param_1": "inputByte"
            },
            "calling": [
                "FUN_08007a70"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007a10": {
            "entrypoint": "0x08007a10",
            "current_name": "update_flag_08007a10",
            "code": "\n\n\nvoid updateFlag_08007a10(undefined *input)\n\n{\n  if (input == (undefined *)0x40000000) {\n    _DAT_40023840 = _DAT_40023840 | 1;\n  }\n  else if (input == (undefined *)0x40000400) {\n    _DAT_40023840 = _DAT_40023840 | 2;\n  }\n  else if (input == &DAT_40000800) {\n    _DAT_40023840 = _DAT_40023840 | 4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007a10": "update_flag_08007a10",
                "param_1": "input"
            },
            "calling": [
                "FUN_08007d08",
                "FUN_08007ad0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007a70": {
            "entrypoint": "0x08007a70",
            "current_name": "process_memory_location_08007a70",
            "code": "\nvoid processMemoryLocation_08007a70(undefined *memoryLocation,undefined4 param2Value,undefined4 param3Value)\n\n{\n  undefined mappedValue;\n  \n  if (memoryLocation == (undefined *)0x40000000) {\n    mappedValue = 0x1c;\n  }\n  else if (memoryLocation == (undefined *)0x40000400) {\n    mappedValue = 0x1d;\n  }\n  else {\n    if (memoryLocation != &DAT_40000800) {\n      return;\n    }\n    mappedValue = 0x1e;\n  }\n  FUN_08006cf6(mappedValue,param2Value,param3Value);\n  FUN_080079e0(mappedValue);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007a70": "process_memory_location_08007a70",
                "param_1": "memoryLocation",
                "param_2": "param2Value",
                "param_3": "param3Value",
                "local_c": "mappedValue"
            },
            "calling": [
                "FUN_08007ad0"
            ],
            "called": [
                "FUN_080079e0",
                "FUN_08006cf6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007ad0": {
            "entrypoint": "0x08007ad0",
            "current_name": "initialize_memory_08007ad0",
            "code": "\n\n\nvoid initializeMemory_08007ad0(void)\n\n{\n  FUN_08007a10(0x40000000);\n  _DAT_40000000 = 0;\n  _DAT_40000004 = 0;\n  _DAT_40000008 = 0;\n  _DAT_4000000c = 0;\n  _DAT_40000010 = 0;\n  _DAT_40000018 = 0;\n  _DAT_4000001c = 0;\n  _DAT_40000020 = 0;\n  _DAT_40000024 = 0;\n  _DAT_40000028 = DAT_20000000 / 42000000 - 1;\n  _DAT_4000002c = 0;\n  _DAT_40000034 = 0;\n  _DAT_40000038 = 0;\n  _DAT_4000003c = 0;\n  _DAT_40000040 = 0;\n  _DAT_40000048 = 0;\n  _DAT_4000004c = 0;\n  FUN_08007a70(0x40000000,0,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007ad0": "initialize_memory_08007ad0"
            },
            "calling": [
                "FUN_08007e08"
            ],
            "called": [
                "FUN_08007a10",
                "FUN_08007a70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007b70": {
            "entrypoint": "0x08007b70",
            "current_name": "configure_flags_08007b70",
            "code": "\n\n\nvoid configureFlags_08007b70(void)\n\n{\n  uint flags;\n  \n  flags = 1;\n  if (_DAT_40000034 != 0) {\n    flags = 3;\n  }\n  if (_DAT_40000038 != 0) {\n    flags = flags | 4;\n  }\n  _DAT_4000000c = _DAT_4000000c | flags;\n  _DAT_40000000 = _DAT_40000000 | 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007b70": "configure_flags_08007b70",
                "local_c": "flags"
            },
            "calling": [
                "FUN_08005790"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007bc2": {
            "entrypoint": "0x08007bc2",
            "current_name": "clear_flags_08007bc2",
            "code": "\n\n\nvoid clearFlags_08007bc2(void)\n\n{\n  _DAT_40000000 = _DAT_40000000 & 0xfffffffe;\n  _DAT_4000000c = _DAT_4000000c & 0xfffffff8;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007bc2": "clear_flags_08007bc2"
            },
            "calling": [
                "FUN_080057e4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007bf0": {
            "entrypoint": "0x08007bf0",
            "current_name": "update_min_value_08007bf0",
            "code": "\n\n\nvoid update_min_value_08007bf0(uint new_value)\n\n{\n  _DAT_4000002c = new_value;\n  if (new_value <= _DAT_40000024) {\n    _DAT_40000024 = new_value;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007bf0": "update_min_value_08007bf0",
                "param_1": "new_value"
            },
            "calling": [
                "FUN_08005324"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007c40": {
            "entrypoint": "0x08007c40",
            "current_name": "set_global_data_08007c40",
            "code": "\n\n\nvoid setGlobalData_08007c40(undefined4 data)\n\n{\n  _DAT_40000034 = data;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007c40": "set_global_data_08007c40",
                "param_1": "data"
            },
            "calling": [
                "FUN_08005790"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007c5e": {
            "entrypoint": "0x08007c5e",
            "current_name": "initialize_data_08007c5e",
            "code": "\n\n\nvoid initializeData_08007c5e(undefined4 newValue)\n\n{\n  _DAT_40000038 = newValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007c5e": "initialize_data_08007c5e",
                "param_1": "newValue"
            },
            "calling": [
                "FUN_08005790"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007c7c": {
            "entrypoint": "0x08007c7c",
            "current_name": "update_settings_08007c7c",
            "code": "\n\n\nvoid update_settings_08007c7c(void)\n\n{\n  if (((_DAT_40000010 & 2) != 0) && ((_DAT_4000000c & 2) != 0)) {\n    _DAT_40000010 = _DAT_40000010 & 0xfffffffd;\n    FUN_08005778();\n  }\n  if (((_DAT_40000010 & 4) != 0) && ((_DAT_4000000c & 4) != 0)) {\n    _DAT_40000010 = _DAT_40000010 & 0xfffffffb;\n    FUN_08005760();\n  }\n  if (((_DAT_40000010 & 1) != 0) && ((_DAT_4000000c & 1) != 0)) {\n    _DAT_40000010 = _DAT_40000010 & 0xfffffffe;\n    FUN_080053a0();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007c7c": "update_settings_08007c7c"
            },
            "calling": [],
            "called": [
                "FUN_080053a0",
                "FUN_08005778",
                "FUN_08005760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007d08": {
            "entrypoint": "0x08007d08",
            "current_name": "initialize_registers_08007d08",
            "code": "\n\n\nvoid initializeRegisters_08007d08(void)\n\n{\n  FUN_08007a10(&DAT_40000800);\n  _DAT_40000800 = 0x80;\n  _DAT_40000804 = 0;\n  _DAT_40000808 = 0;\n  _DAT_4000080c = 0;\n  _DAT_40000810 = 0;\n  _DAT_40000818 = 0x6800;\n  _DAT_4000081c = 0;\n  _DAT_40000820 = 0;\n  _DAT_40000824 = 0;\n  _DAT_40000828 = DAT_20000000 / 4800000 - 1;\n  _DAT_4000082c = 199;\n  _DAT_40000834 = 0;\n  _DAT_40000838 = 100;\n  _DAT_4000083c = 0;\n  _DAT_40000840 = 0;\n  _DAT_40000848 = 0;\n  _DAT_4000084c = 0;\n  _DAT_40000814 = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007d08": "initialize_registers_08007d08"
            },
            "calling": [
                "FUN_08007e08"
            ],
            "called": [
                "FUN_08007a10"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007da8": {
            "entrypoint": "0x08007da8",
            "current_name": "set_flags_and_bits_08007da8",
            "code": "\n\n\nvoid setFlagsAndBits_08007da8(void)\n\n{\n  _DAT_40000820 = _DAT_40000820 | 0x10;\n  _DAT_40000800 = _DAT_40000800 | 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007da8": "set_flags_and_bits_08007da8"
            },
            "calling": [
                "FUN_08007e08"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e08": {
            "entrypoint": "0x08007e08",
            "current_name": "initialize_system_08007e08",
            "code": "\nvoid initialize_system_08007e08(void)\n\n{\n  FUN_08007ad0();\n  FUN_08007d08();\n  FUN_08007da8();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007e08": "initialize_system_08007e08"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_08007d08",
                "FUN_08007da8",
                "FUN_08007ad0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e1c": {
            "entrypoint": "0x08007e1c",
            "current_name": "write_byte_to_memory_08007e1c",
            "code": "\n\n\nvoid writeByteToMemory_08007e1c(byte byteToWrite)\n\n{\n  do {\n  } while ((_DAT_40004400 & 0x80) == 0);\n  _DAT_40004404 = (uint)byteToWrite;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007e1c": "write_byte_to_memory_08007e1c",
                "param_1": "byteToWrite"
            },
            "calling": [
                "FUN_0800826a",
                "FUN_08008250"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e58": {
            "entrypoint": "0x08007e58",
            "current_name": "check_bit_set_08007e58",
            "code": "\n\n\nbool checkBitSet_08007e58(void)\n\n{\n  return (_DAT_40004400 & 0x20) != 0;\n}\n\n",
            "renaming": {
                "FUN_08007e58": "check_bit_set_08007e58"
            },
            "calling": [
                "FUN_08008286"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e84": {
            "entrypoint": "0x08007e84",
            "current_name": "get_lowest_byte_08007e84",
            "code": "\n\n\nuint get_lowest_byte_08007e84(void)\n\n{\n  return _DAT_40004404 & 0xff;\n}\n\n",
            "renaming": {
                "FUN_08007e84": "get_lowest_byte_08007e84"
            },
            "calling": [
                "FUN_08008286"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007ea4": {
            "entrypoint": "0x08007ea4",
            "current_name": "update_data_flags_08007ea4",
            "code": "\n\n\nvoid updateDataFlags_08007ea4(undefined *dataPtr)\n\n{\n  if (dataPtr == (undefined *)0x40011000) {\n    _DAT_40023844 = _DAT_40023844 | 0x10;\n  }\n  else if (dataPtr == &DAT_40004400) {\n    _DAT_40023840 = _DAT_40023840 | 0x20000;\n  }\n  else if (dataPtr == (undefined *)0x40004800) {\n    _DAT_40023840 = _DAT_40023840 | 0x40000;\n  }\n  else if (dataPtr == (undefined *)0x40004c00) {\n    _DAT_40023840 = _DAT_40023840 | 0x80000;\n  }\n  else if (dataPtr == (undefined *)0x40005000) {\n    _DAT_40023840 = _DAT_40023840 | 0x100000;\n  }\n  else if (dataPtr == (undefined *)0x40011400) {\n    _DAT_40023844 = _DAT_40023844 | 0x20;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007ea4": "update_data_flags_08007ea4",
                "param_1": "dataPtr"
            },
            "calling": [
                "FUN_08008190"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f54": {
            "entrypoint": "0x08007f54",
            "current_name": "calculate_checksum_08007f54",
            "code": "\nvoid calculateChecksum_08007f54(int address,int size)\n\n{\n  ulonglong checksum;\n  int tempVar1;\n  int tempVar2;\n  undefined8 randomNum;\n  \n  if ((*(uint *)(address + 0xc) & 0x8000) == 0) {\n    if ((address != 0x40011000) && (address != 0x40011400)) {\n      randomNum = FUN_08006680();\n      checksum = (ulonglong)(uint)((int)randomNum * 0x19) / (ulonglong)(uint)(size << 2);\n      tempVar1 = FUN_08006680((int)randomNum,(int)((ulonglong)randomNum >> 0x20),(int)(checksum * 0x51eb851f));\n      tempVar2 = FUN_08006680();\n      *(uint *)(address + 8) =\n           (int)(checksum / 100) << 4 |\n           (((uint)(tempVar1 * 0x19) / (uint)(size << 2) +\n            (int)(((ulonglong)(uint)(tempVar2 * 0x19) / (ulonglong)(uint)(size << 2)) / 100) * -100)\n            * 0x10 + 0x32) / 100 & 0xf;\n      return;\n    }\n    randomNum = FUN_080066cc();\n    checksum = (ulonglong)(uint)((int)randomNum * 0x19) / (ulonglong)(uint)(size << 2);\n    tempVar1 = FUN_080066cc((int)randomNum,(int)((ulonglong)randomNum >> 0x20),(int)(checksum * 0x51eb851f));\n    tempVar2 = FUN_080066cc();\n    *(uint *)(address + 8) =\n         (int)(checksum / 100) << 4 |\n         (((uint)(tempVar1 * 0x19) / (uint)(size << 2) +\n          (int)(((ulonglong)(uint)(tempVar2 * 0x19) / (ulonglong)(uint)(size << 2)) / 100) * -100) *\n          0x10 + 0x32) / 100 & 0xf;\n  }\n  else {\n    if ((address != 0x40011000) && (address != 0x40011400)) {\n      randomNum = FUN_08006680();\n      checksum = (ulonglong)(uint)((int)randomNum * 0x19) / (ulonglong)(uint)(size << 1);\n      tempVar1 = FUN_08006680((int)randomNum,(int)((ulonglong)randomNum >> 0x20),(int)(checksum * 0x51eb851f));\n      tempVar2 = FUN_08006680();\n      *(uint *)(address + 8) =\n           (int)(checksum / 100) << 4 |\n           (((uint)(tempVar1 * 0x19) / (uint)(size << 1) +\n            (int)(((ulonglong)(uint)(tempVar2 * 0x19) / (ulonglong)(uint)(size << 1)) / 100) * -100)\n            * 0x10 + 0x32) / 100 & 0xf;\n      return;\n    }\n    randomNum = FUN_080066cc();\n    checksum = (ulonglong)(uint)((int)randomNum * 0x19) / (ulonglong)(uint)(size << 1);\n    tempVar1 = FUN_080066cc((int)randomNum,(int)((ulonglong)randomNum >> 0x20),(int)(checksum * 0x51eb851f));\n    tempVar2 = FUN_080066cc();\n    *(uint *)(address + 8) =\n         (int)(checksum / 100) << 4 |\n         (((uint)(tempVar1 * 0x19) / (uint)(size << 1) +\n          (int)(((ulonglong)(uint)(tempVar2 * 0x19) / (ulonglong)(uint)(size << 1)) / 100) * -100) *\n          0x10 + 0x32) / 100 & 0xf;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007f54": "calculate_checksum_08007f54",
                "param_1": "address",
                "param_2": "size",
                "uVar1": "checksum",
                "iVar2": "tempVar1",
                "iVar3": "tempVar2",
                "uVar4": "randomNum"
            },
            "calling": [
                "FUN_08008190"
            ],
            "called": [
                "FUN_08006680",
                "FUN_080066cc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008190": {
            "entrypoint": "0x08008190",
            "current_name": "initialize_memory_08008190",
            "code": "\n\n\nvoid initializeMemory_08008190(void)\n\n{\n  FUN_08007ea4(&DAT_40004400);\n  _DAT_4000440c = _DAT_4000440c & 0xffff400c | 0xc;\n  _DAT_40004410 = _DAT_40004410 & 0xffff8090;\n  _DAT_40004414 = _DAT_40004414 & 0xfffff000;\n  _DAT_40004400 = _DAT_40004400 & 0xfffffc00;\n  FUN_08007f54(&DAT_40004400,0x1c200);\n  _DAT_4000440c = _DAT_4000440c | 0x2000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008190": "initialize_memory_08008190"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_08007ea4",
                "FUN_08007f54"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008244": {
            "entrypoint": "0x08008244",
            "current_name": "FUNC_08008244",
            "code": "\nvoid FUNC_08008244(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008244": "FUNC_08008244"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008250": {
            "entrypoint": "0x08008250",
            "current_name": "initialize_08008250",
            "code": "\nvoid initialize_08008250(undefined input)\n\n{\n  FUN_08007e1c(input);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008250": "initialize_08008250",
                "param_1": "input"
            },
            "calling": [
                "FUN_0800369c",
                "FUN_08003826",
                "FUN_080037fc",
                "FUN_080036f0",
                "FUN_08003778",
                "FUN_080036c6"
            ],
            "called": [
                "FUN_08007e1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800826a": {
            "entrypoint": "0x0800826a",
            "current_name": "execute_preprocess_function_0800826a",
            "code": "\nundefined4 execute_preprocess_function_0800826a(undefined input_data)\n\n{\n  FUN_08007e1c(input_data);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800826a": "execute_preprocess_function_0800826a",
                "param_1": "input_data"
            },
            "calling": [],
            "called": [
                "FUN_08007e1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008286": {
            "entrypoint": "0x08008286",
            "current_name": "check_validity_08008286",
            "code": "\nundefined check_validity_08008286(void)\n\n{\n  undefined value;\n  int result;\n  \n  result = FUN_08007e58();\n  if (result != 0) {\n    value = FUN_08007e84();\n    result = FUN_08005900(value);\n    if (result == 0) {\n      return value;\n    }\n  }\n  return 0xff;\n}\n\n",
            "renaming": {
                "FUN_08008286": "check_validity_08008286",
                "iVar2": "result",
                "uVar1": "value"
            },
            "calling": [
                "FUN_08003f34"
            ],
            "called": [
                "FUN_08007e84",
                "FUN_08005900",
                "FUN_08007e58"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080082ba": {
            "entrypoint": "0x080082ba",
            "current_name": "FUNC_080082ba",
            "code": "\nvoid FUNC_080082ba(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080082ba": "FUNC_080082ba"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080082d0": {
            "entrypoint": "0x080082d0",
            "current_name": "calculate_sum_080082d0",
            "code": "\nulonglong calculateSum_080082d0(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int temp1;\n  byte temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  uint temp7;\n  int temp8;\n  uint temp9;\n  uint temp10;\n  uint temp11;\n  uint temp12;\n  bool flag1;\n  bool flag2;\n  bool flag3;\n  \n  temp6 = input4 ^ 0x80000000;\n  temp9 = input2 << 1;\n  input4 = input4 << 1;\n  flag1 = ((input2 ^ temp6) & 0x7fffffff) == 0;\n  flag2 = flag1 && input1 == input3;\n  if (!flag1 || input1 != input3) {\n    flag2 = (temp9 | input1) == 0;\n  }\n  if (!flag2) {\n    flag2 = (input4 | input3) == 0;\n  }\n  temp8 = (int)temp9 >> 0x15;\n  if (!flag2) {\n    flag2 = temp8 == -1;\n  }\n  temp1 = (int)input4 >> 0x15;\n  if (!flag2) {\n    flag2 = temp1 == -1;\n  }\n  if (flag2) {\n    if (temp8 == -1 || temp1 == -1) {\n      temp9 = temp6;\n      temp11 = input3;\n      if (temp8 == -1) {\n        temp9 = input2;\n        temp11 = input1;\n      }\n      if (temp8 != -1 || temp1 != -1) {\n        input3 = temp11;\n        temp6 = temp9;\n      }\n      flag2 = (temp11 | temp9 << 0xc) == 0;\n      if (flag2) {\n        flag2 = (input3 | temp6 << 0xc) == 0;\n      }\n      if (flag2) {\n        flag2 = temp9 == temp6;\n      }\n      if (!flag2) {\n        temp9 = temp9 | 0x80000;\n      }\n      return CONCAT44(temp9,temp11);\n    }\n    if (((input2 ^ temp6) & 0x7fffffff) != 0 || input1 != input3) {\n      if ((temp9 | input1) == 0) {\n        input1 = input3;\n        input2 = temp6;\n      }\n      return CONCAT44(input2,input1);\n    }\n    if (input2 != temp6) {\n      return 0;\n    }\n    if (temp9 >> 0x15 == 0) {\n      flag2 = (input1 & 0x80000000) != 0;\n      temp6 = input2 * 2 + (uint)flag2;\n      if (CARRY4(input2,input2) || CARRY4(input2 * 2,(uint)flag2)) {\n        temp6 = temp6 | 0x80000000;\n      }\n      return CONCAT44(temp6,input1 << 1);\n    }\n    if (temp9 < 0xffc00000) {\n      return CONCAT44(input2 + 0x100000,input1);\n    }\n    input2 = input2 & 0x80000000;\nLAB_08008514:\n    return (ulonglong)(input2 | 0x7ff00000) << 0x20;\n  }\n  temp9 = temp9 >> 0x15;\n  input4 = input4 >> 0x15;\n  temp11 = input4 - temp9;\n  flag2 = temp11 != 0;\n  if (input4 < temp9) {\n    temp11 = -temp11;\n  }\n  temp10 = input1;\n  temp7 = input2;\n  if (flag2 && temp9 <= input4) {\n    temp9 = temp9 + temp11;\n    temp10 = input3;\n    temp7 = temp6;\n    input3 = input1;\n    temp6 = input2;\n  }\n  if (0x36 < temp11) {\n    return CONCAT44(temp7,temp10);\n  }\n  temp4 = temp7 & 0xfffff | 0x100000;\n  if ((temp7 & 0x80000000) != 0) {\n    flag2 = temp10 != 0;\n    temp10 = -temp10;\n    temp4 = -temp4 - (uint)flag2;\n  }\n  temp7 = temp6 & 0xfffff | 0x100000;\n  if ((temp6 & 0x80000000) != 0) {\n    flag2 = input3 != 0;\n    input3 = -input3;\n    temp7 = -temp7 - (uint)flag2;\n  }\n  if (temp9 == temp11) {\n    temp7 = temp7 ^ 0x100000;\n    if (temp9 == 0) {\n      temp4 = temp4 ^ 0x100000;\n      temp9 = 1;\n    }\n    else {\n      temp11 = temp11 - 1;\n    }\n  }\n  temp6 = -temp11 + 0x20;\n  if ((int)temp11 < 0x21) {\n    temp12 = input3 << (temp6 & 0xff);\n    input3 = input3 >> (temp11 & 0xff);\n    temp3 = temp10 + input3;\n    temp5 = temp7 << (temp6 & 0xff);\n    temp6 = temp3 + temp5;\n    temp4 = temp4 + CARRY4(temp10,input3) + ((int)temp7 >> (temp11 & 0xff)) +\n            (uint)CARRY4(temp3,temp5);\n  }\n  else {\n    temp12 = temp7 << (-temp11 + 0x40 & 0xff);\n    if (input3 != 0) {\n      temp12 = temp12 | 2;\n    }\n    temp7 = (int)temp7 >> (temp11 - 0x20 & 0xff);\n    temp6 = temp10 + temp7;\n    temp4 = temp4 + ((int)temp7 >> 0x1f) + (uint)CARRY4(temp10,temp7);\n  }\n  input2 = temp4 & 0x80000000;\n  temp11 = temp4;\n  if ((int)temp4 < 0) {\n    flag2 = temp12 == 0;\n    temp12 = -temp12;\n    temp11 = -temp6;\n    temp6 = -(uint)!flag2 - temp6;\n    temp11 = -(uint)(flag2 <= temp11) - temp4;\n  }\n  if (0xfffff < temp11) {\n    temp10 = temp9 - 1;\n    if (0x1fffff < temp11) {\n      temp10 = temp11 & 1;\n      temp11 = temp11 >> 1;\n      temp2 = (byte)temp6;\n      temp6 = (uint)(temp10 != 0) << 0x1f | temp6 >> 1;\n      temp12 = (uint)(temp2 & 1) << 0x1f | temp12 >> 1;\n      temp10 = temp9;\n      if (0xffbfffff < temp9 * 0x200000) goto LAB_08008514;\n    }\nLAB_080083e0:\n    flag2 = 0x7fffffff < temp12;\n    if (temp12 == 0x80000000) {\n      flag2 = (temp6 & 1) != 0;\n    }\n    return CONCAT44(temp11 + temp10 * 0x100000 + (uint)CARRY4(temp6,(uint)flag2) | input2,\n                    temp6 + flag2);\n  }\n  flag1 = (temp12 & 0x80000000) != 0;\n  temp12 = temp12 << 1;\n  temp10 = temp6 * 2;\n  flag2 = CARRY4(temp6,temp6);\n  temp6 = temp6 * 2 + (uint)flag1;\n  temp11 = temp11 * 2 + (uint)(flag2 || CARRY4(temp10,(uint)flag1));\n  temp10 = temp9 - 2;\n  if (temp9 - 1 != 0 && 0xfffff < temp11) goto LAB_080083e0;\n  temp7 = temp6;\n  temp9 = temp11;\n  if (temp11 == 0) {\n    temp7 = 0;\n    temp9 = temp6;\n  }\n  temp8 = LZCOUNT(temp9);\n  if (temp11 == 0) {\n    temp8 = temp8 + 0x20;\n  }\n  temp11 = temp8 - 0xb;\n  flag3 = SBORROW4(temp11,0x20);\n  temp6 = temp8 - 0x2b;\n  flag2 = (int)temp6 < 0;\n  flag1 = temp6 == 0;\n  if ((int)temp11 < 0x20) {\n    flag3 = SCARRY4(temp6,0xc);\n    temp8 = temp8 + -0x1f;\n    flag2 = temp8 < 0;\n    flag1 = temp8 == 0;\n    temp6 = temp11;\n    if (!flag1 && flag2 == flag3) {\n      temp7 = temp9 << (temp11 & 0xff);\n      temp9 = temp9 >> (0xcU - temp8 & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (flag1 || flag2 != flag3) {\n    temp12 = 0x20 - temp6;\n  }\n  temp9 = temp9 << (temp6 & 0xff);\n  if (flag1 || flag2 != flag3) {\n    temp9 = temp9 | temp7 >> (temp12 & 0xff);\n  }\n  if (flag1 || flag2 != flag3) {\n    temp7 = temp7 << (temp6 & 0xff);\n  }\nLAB_08008458:\n  if ((int)temp11 <= (int)temp10) {\n    return CONCAT44(temp9 + (temp10 - temp11) * 0x100000 | input2,temp7);\n  }\n  temp6 = ~(temp10 - temp11);\n  if ((int)temp6 < 0x1f) {\n    temp8 = temp6 - 0x13;\n    if (temp8 != 0 && temp8 < 0 == SCARRY4(temp6 - 0x1f,0xc)) {\n      return CONCAT44(temp4,temp7 >> (0x20 - (0xcU - temp8) & 0xff) | temp9 << (0xcU - temp8 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    temp6 = temp6 + 1;\n    return CONCAT44(input2 | temp9 >> (temp6 & 0xff),\n                    temp7 >> (temp6 & 0xff) | temp9 << (0x20 - temp6 & 0xff));\n  }\n  return CONCAT44(temp4,temp9 >> (temp6 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_080082d0": "calculate_sum_080082d0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "temp1",
                "bVar2": "temp2",
                "uVar3": "temp3",
                "uVar4": "temp4",
                "uVar5": "temp5",
                "uVar6": "temp6",
                "uVar7": "temp7",
                "iVar8": "temp8",
                "uVar9": "temp9",
                "uVar10": "temp10",
                "uVar11": "temp11",
                "uVar12": "temp12",
                "bVar13": "flag1",
                "bVar14": "flag2",
                "bVar15": "flag3"
            },
            "calling": [
                "FUN_08003004",
                "FUN_080096e8",
                "FUN_08009d78",
                "FUN_0800a5a0",
                "FUN_08001f00",
                "FUN_0800af78",
                "FUN_08004940",
                "FUN_0800a1bc",
                "FUN_08009410",
                "FUN_0800a348",
                "FUN_08009b24",
                "FUN_0800adf0",
                "FUN_08009990"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080082d4": {
            "entrypoint": "0x080082d4",
            "current_name": "calculate_double_precision_080082d4",
            "code": "\nulonglong calculate_double_precision_080082d4(uint num1,uint num2,uint num3,uint num4)\n\n{\n  int shift1;\n  byte carry;\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  int shift2;\n  uint temp4;\n  uint temp5;\n  uint num1_shifted;\n  uint num2_shifted;\n  uint temp6;\n  uint temp7;\n  bool cond1;\n  bool cond2;\n  bool cond3;\n  \n  temp4 = num2 << 1;\n  num1_shifted = num4 << 1;\n  cond1 = ((num2 ^ num4) & 0x7fffffff) == 0;\n  cond2 = cond1 && num1 == num3;\n  if (!cond1 || num1 != num3) {\n    cond2 = (temp4 | num1) == 0;\n  }\n  if (!cond2) {\n    cond2 = (num1_shifted | num3) == 0;\n  }\n  shift2 = (int)temp4 >> 0x15;\n  if (!cond2) {\n    cond2 = shift2 == -1;\n  }\n  shift1 = (int)num1_shifted >> 0x15;\n  if (!cond2) {\n    cond2 = shift1 == -1;\n  }\n  if (cond2) {\n    if (shift2 == -1 || shift1 == -1) {\n      num1_shifted = num4;\n      temp4 = num3;\n      if (shift2 == -1) {\n        num1_shifted = num2;\n        temp4 = num1;\n      }\n      if (shift2 != -1 || shift1 != -1) {\n        num3 = temp4;\n        num4 = num1_shifted;\n      }\n      cond2 = (temp4 | num1_shifted << 0xc) == 0;\n      if (cond2) {\n        cond2 = (num3 | num4 << 0xc) == 0;\n      }\n      if (cond2) {\n        cond2 = num1_shifted == num4;\n      }\n      if (!cond2) {\n        num1_shifted = num1_shifted | 0x80000;\n      }\n      return CONCAT44(num1_shifted,temp4);\n    }\n    if (((num2 ^ num4) & 0x7fffffff) != 0 || num1 != num3) {\n      if ((temp4 | num1) == 0) {\n        num1 = num3;\n        num2 = num4;\n      }\n      return CONCAT44(num2,num1);\n    }\n    if (num2 != num4) {\n      return 0;\n    }\n    if (temp4 >> 0x15 == 0) {\n      cond2 = (num1 & 0x80000000) != 0;\n      num1_shifted = num2 * 2 + (uint)cond2;\n      if (CARRY4(num2,num2) || CARRY4(num2 * 2,(uint)cond2)) {\n        num1_shifted = num1_shifted | 0x80000000;\n      }\n      return CONCAT44(num1_shifted,num1 << 1);\n    }\n    if (temp4 < 0xffc00000) {\n      return CONCAT44(num2 + 0x100000,num1);\n    }\n    num2 = num2 & 0x80000000;\nLAB_08008514:\n    return (ulonglong)(num2 | 0x7ff00000) << 0x20;\n  }\n  temp4 = temp4 >> 0x15;\n  num1_shifted = num1_shifted >> 0x15;\n  num2_shifted = num1_shifted - temp4;\n  cond2 = num2_shifted != 0;\n  if (num1_shifted < temp4) {\n    num2_shifted = -num2_shifted;\n  }\n  temp5 = num1;\n  temp3 = num2;\n  if (cond2 && temp4 <= num1_shifted) {\n    temp4 = temp4 + num2_shifted;\n    temp5 = num3;\n    temp3 = num4;\n    num3 = num1;\n    num4 = num2;\n  }\n  if (0x36 < num2_shifted) {\n    return CONCAT44(temp3,temp5);\n  }\n  num1_shifted = temp3 & 0xfffff | 0x100000;\n  if ((temp3 & 0x80000000) != 0) {\n    cond2 = temp5 != 0;\n    temp5 = -temp5;\n    num1_shifted = -num1_shifted - (uint)cond2;\n  }\n  temp3 = num4 & 0xfffff | 0x100000;\n  if ((num4 & 0x80000000) != 0) {\n    cond2 = num3 != 0;\n    num3 = -num3;\n    temp3 = -temp3 - (uint)cond2;\n  }\n  if (temp4 == num2_shifted) {\n    temp3 = temp3 ^ 0x100000;\n    if (temp4 == 0) {\n      num1_shifted = num1_shifted ^ 0x100000;\n      temp4 = 1;\n    }\n    else {\n      num2_shifted = num2_shifted - 1;\n    }\n  }\n  temp7 = -num2_shifted + 0x20;\n  if ((int)num2_shifted < 0x21) {\n    temp6 = num3 << (temp7 & 0xff);\n    num3 = num3 >> (num2_shifted & 0xff);\n    temp1 = temp5 + num3;\n    temp2 = temp3 << (temp7 & 0xff);\n    temp7 = temp1 + temp2;\n    num1_shifted = num1_shifted + CARRY4(temp5,num3) + ((int)temp3 >> (num2_shifted & 0xff)) +\n            (uint)CARRY4(temp1,temp2);\n  }\n  else {\n    temp6 = temp3 << (-num2_shifted + 0x40 & 0xff);\n    if (num3 != 0) {\n      temp6 = temp6 | 2;\n    }\n    temp3 = (int)temp3 >> (num2_shifted - 0x20 & 0xff);\n    temp7 = temp5 + temp3;\n    num1_shifted = num1_shifted + ((int)temp3 >> 0x1f) + (uint)CARRY4(temp5,temp3);\n  }\n  num2 = num1_shifted & 0x80000000;\n  num2_shifted = num1_shifted;\n  if ((int)num1_shifted < 0) {\n    cond2 = temp6 == 0;\n    temp6 = -temp6;\n    num2_shifted = -temp7;\n    temp7 = -(uint)!cond2 - temp7;\n    num2_shifted = -(uint)(cond2 <= num2_shifted) - num1_shifted;\n  }\n  if (0xfffff < num2_shifted) {\n    temp5 = temp4 - 1;\n    if (0x1fffff < num2_shifted) {\n      num1_shifted = num2_shifted & 1;\n      num2_shifted = num2_shifted >> 1;\n      carry = (byte)temp7;\n      temp7 = (uint)(num1_shifted != 0) << 0x1f | temp7 >> 1;\n      temp6 = (uint)(carry & 1) << 0x1f | temp6 >> 1;\n      temp5 = temp4;\n      if (0xffbfffff < temp4 * 0x200000) goto LAB_08008514;\n    }\nLAB_080083e0:\n    cond2 = 0x7fffffff < temp6;\n    if (temp6 == 0x80000000) {\n      cond2 = (temp7 & 1) != 0;\n    }\n    return CONCAT44(num2_shifted + temp5 * 0x100000 + (uint)CARRY4(temp7,(uint)cond2) | num2,\n                    temp7 + cond2);\n  }\n  cond1 = (temp6 & 0x80000000) != 0;\n  temp6 = temp6 << 1;\n  temp5 = temp7 * 2;\n  cond2 = CARRY4(temp7,temp7);\n  temp7 = temp7 * 2 + (uint)cond1;\n  num2_shifted = num2_shifted * 2 + (uint)(cond2 || CARRY4(temp5,(uint)cond1));\n  temp5 = temp4 - 2;\n  if (temp4 - 1 != 0 && 0xfffff < num2_shifted) goto LAB_080083e0;\n  temp3 = temp7;\n  temp4 = num2_shifted;\n  if (num2_shifted == 0) {\n    temp3 = 0;\n    temp4 = temp7;\n  }\n  shift2 = LZCOUNT(temp4);\n  if (num2_shifted == 0) {\n    shift2 = shift2 + 0x20;\n  }\n  temp7 = shift2 - 0xb;\n  cond3 = SBORROW4(temp7,0x20);\n  num2_shifted = shift2 - 0x2b;\n  cond2 = (int)num2_shifted < 0;\n  cond1 = num2_shifted == 0;\n  if ((int)temp7 < 0x20) {\n    cond3 = SCARRY4(num2_shifted,0xc);\n    shift2 = shift2 + -0x1f;\n    cond2 = shift2 < 0;\n    cond1 = shift2 == 0;\n    num2_shifted = temp7;\n    if (!cond1 && cond2 == cond3) {\n      temp3 = temp4 << (temp7 & 0xff);\n      temp4 = temp4 >> (0xcU - shift2 & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (cond1 || cond2 != cond3) {\n    temp6 = 0x20 - num2_shifted;\n  }\n  temp4 = temp4 << (num2_shifted & 0xff);\n  if (cond1 || cond2 != cond3) {\n    temp4 = temp4 | temp3 >> (temp6 & 0xff);\n  }\n  if (cond1 || cond2 != cond3) {\n    temp3 = temp3 << (num2_shifted & 0xff);\n  }\nLAB_08008458:\n  if ((int)temp7 <= (int)temp5) {\n    return CONCAT44(temp4 + (temp5 - temp7) * 0x100000 | num2,temp3);\n  }\n  num2_shifted = ~(temp5 - temp7);\n  if ((int)num2_shifted < 0x1f) {\n    shift2 = num2_shifted - 0x13;\n    if (shift2 != 0 && shift2 < 0 == SCARRY4(num2_shifted - 0x1f,0xc)) {\n      return CONCAT44(num1_shifted,temp3 >> (0x20 - (0xcU - shift2) & 0xff) | temp4 << (0xcU - shift2 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    num2_shifted = num2_shifted + 1;\n    return CONCAT44(num2 | temp4 >> (num2_shifted & 0xff),\n                    temp3 >> (num2_shifted & 0xff) | temp4 << (0x20 - num2_shifted & 0xff));\n  }\n  return CONCAT44(num1_shifted,temp4 >> (num2_shifted - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_080082d4": "calculate_double_precision_080082d4",
                "param_1": "num1",
                "param_2": "num2",
                "param_3": "num3",
                "param_4": "num4",
                "iVar1": "shift1",
                "bVar2": "carry",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "uVar5": "temp3",
                "iVar6": "shift2",
                "uVar7": "temp4",
                "uVar8": "temp5",
                "uVar9": "num1_shifted",
                "uVar10": "num2_shifted",
                "uVar11": "temp6",
                "uVar12": "temp7",
                "bVar13": "cond1",
                "bVar14": "cond2",
                "bVar15": "cond3"
            },
            "calling": [
                "FUN_08009798",
                "FUN_08009d78",
                "FUN_0800a5a0",
                "FUN_08009318",
                "FUN_08009654",
                "FUN_08001f00",
                "FUN_0800af78",
                "FUN_0800b2e8",
                "FUN_080094c0",
                "FUN_0800a1bc",
                "FUN_0800a348",
                "FUN_08009b24",
                "FUN_0800adf0",
                "FUN_08009990"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800854c": {
            "entrypoint": "0x0800854c",
            "current_name": "extract_bits_0800854c",
            "code": "\nulonglong extract_bits_0800854c(uint input)\n\n{\n  uint output_upper;\n  uint shift_amount;\n  int lzcount_result;\n  uint offset;\n  uint difference;\n  bool is_negative_shift;\n  bool is_zero_shift;\n  bool is_carry_set;\n  \n  if (input == 0) {\n    return 0;\n  }\n  output_upper = 0;\n  lzcount_result = LZCOUNT(input);\n  offset = lzcount_result + 0x15;\n  is_carry_set = SBORROW4(offset,0x20);\n  shift_amount = lzcount_result - 0xb;\n  is_negative_shift = (int)shift_amount < 0;\n  is_zero_shift = shift_amount == 0;\n  if (offset < 0x20) {\n    is_carry_set = SCARRY4(shift_amount,0xc);\n    is_negative_shift = false;\n    is_zero_shift = lzcount_result + 1 == 0;\n    shift_amount = offset;\n    if (!is_zero_shift && is_carry_set == false) {\n      output_upper = input << offset;\n      input = input >> (0xcU - (lzcount_result + 1) & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (is_zero_shift || is_negative_shift != is_carry_set) {\n    difference = 0x20 - shift_amount;\n  }\n  input = input << (shift_amount & 0xff);\n  if (is_zero_shift || is_negative_shift != is_carry_set) {\n    input = input | 0U >> (difference & 0xff);\n  }\n  if (is_zero_shift || is_negative_shift != is_carry_set) {\n    output_upper = 0 << (shift_amount & 0xff);\n  }\nLAB_08008458:\n  if (offset < 0x433) {\n    return CONCAT44(input + (0x432 - offset) * 0x100000,output_upper);\n  }\n  shift_amount = ~(0x432 - offset);\n  if (0x1e < (int)shift_amount) {\n    return (ulonglong)(input >> (shift_amount - 0x1f & 0xff));\n  }\n  lzcount_result = shift_amount - 0x13;\n  if (lzcount_result == 0 || lzcount_result < 0 != SCARRY4(shift_amount - 0x1f,0xc)) {\n    shift_amount = shift_amount + 1;\n    return CONCAT44(input >> (shift_amount & 0xff),\n                    output_upper >> (shift_amount & 0xff) | input << (0x20 - shift_amount & 0xff));\n  }\n  return (ulonglong)(output_upper >> (0x20 - (0xcU - lzcount_result) & 0xff) | input << (0xcU - lzcount_result & 0xff));\n}\n\n",
            "renaming": {
                "FUN_0800854c": "extract_bits_0800854c",
                "param_1": "input",
                "uVar1": "output_upper",
                "uVar2": "shift_amount",
                "iVar3": "lzcount_result",
                "uVar4": "offset",
                "in_r12": "difference",
                "bVar5": "is_negative_shift",
                "bVar6": "is_zero_shift",
                "bVar7": "is_carry_set"
            },
            "calling": [
                "FUN_08001994"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800856c": {
            "entrypoint": "0x0800856c",
            "current_name": "calculate_shifted_value_0800856c",
            "code": "\nulonglong calculate_shifted_value_0800856c(uint input_value)\n\n{\n  uint shifted_value;\n  uint abs_input;\n  uint shift_amount;\n  int leading_zeros;\n  uint adjusted_shift;\n  uint sign_bit;\n  uint remaining_bits;\n  bool is_negative;\n  bool is_zero;\n  bool overflow;\n  \n  if (input_value == 0) {\n    return 0;\n  }\n  sign_bit = input_value & 0x80000000;\n  abs_input = input_value;\n  if ((int)sign_bit < 0) {\n    abs_input = -input_value;\n  }\n  shifted_value = 0;\n  leading_zeros = LZCOUNT(abs_input);\n  adjusted_shift = leading_zeros + 0x15;\n  overflow = SBORROW4(adjusted_shift,0x20);\n  shift_amount = leading_zeros - 0xb;\n  is_negative = (int)shift_amount < 0;\n  is_zero = shift_amount == 0;\n  if (adjusted_shift < 0x20) {\n    overflow = SCARRY4(shift_amount,0xc);\n    is_negative = false;\n    is_zero = leading_zeros + 1 == 0;\n    shift_amount = adjusted_shift;\n    if (!is_zero && overflow == false) {\n      shifted_value = abs_input << adjusted_shift;\n      abs_input = abs_input >> (0xcU - (leading_zeros + 1) & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (is_zero || is_negative != overflow) {\n    remaining_bits = 0x20 - shift_amount;\n  }\n  abs_input = abs_input << (shift_amount & 0xff);\n  if (is_zero || is_negative != overflow) {\n    abs_input = abs_input | 0U >> (remaining_bits & 0xff);\n  }\n  if (is_zero || is_negative != overflow) {\n    shifted_value = 0 << (shift_amount & 0xff);\n  }\nLAB_08008458:\n  if (adjusted_shift < 0x433) {\n    return CONCAT44(abs_input + (0x432 - adjusted_shift) * 0x100000 | sign_bit,shifted_value);\n  }\n  shift_amount = ~(0x432 - adjusted_shift);\n  if (0x1e < (int)shift_amount) {\n    return CONCAT44(input_value,abs_input >> (shift_amount - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  leading_zeros = shift_amount - 0x13;\n  if (leading_zeros == 0 || leading_zeros < 0 != SCARRY4(shift_amount - 0x1f,0xc)) {\n    shift_amount = shift_amount + 1;\n    return CONCAT44(sign_bit | abs_input >> (shift_amount & 0xff),\n                    shifted_value >> (shift_amount & 0xff) | abs_input << (0x20 - shift_amount & 0xff));\n  }\n  return CONCAT44(input_value,shifted_value >> (0x20 - (0xcU - leading_zeros) & 0xff) | abs_input << (0xcU - leading_zeros & 0xff))\n         & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800856c": "calculate_shifted_value_0800856c",
                "param_1": "input_value",
                "uVar1": "shifted_value",
                "uVar2": "abs_input",
                "uVar3": "shift_amount",
                "iVar4": "leading_zeros",
                "uVar5": "adjusted_shift",
                "uVar6": "sign_bit",
                "in_r12": "remaining_bits",
                "bVar7": "is_negative",
                "bVar8": "is_zero",
                "bVar9": "overflow"
            },
            "calling": [
                "FUN_08009d78",
                "FUN_0800a5a0",
                "FUN_08002c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008590": {
            "entrypoint": "0x08008590",
            "current_name": "reverse_endianess_08008590",
            "code": "\nulonglong reverseEndianess_08008590(uint inputValue,undefined4 param2,undefined4 param3,uint param4)\n\n{\n  uint bit31Shifted;\n  uint uVar2;\n  uint outputHigh;\n  uint uVar4;\n  uint shiftedValue;\n  int leadingZerosCount;\n  uint iVar7;\n  uint in_r12;\n  bool bVar8;\n  bool bVar9;\n  bool bVar10;\n  \n  shiftedValue = inputValue << 1;\n  bVar9 = shiftedValue == 0;\n  bit31Shifted = (uint)((inputValue & 0x80000000) != 0) << 0x1f;\n  uVar4 = (uint)((int)shiftedValue >> 3) >> 1;\n  outputHigh = bit31Shifted | uVar4;\n  inputValue = inputValue << 0x1d;\n  if (!bVar9) {\n    param4 = shiftedValue & 0xff000000;\n    bVar9 = param4 == 0;\n  }\n  if (!bVar9) {\n    bVar9 = param4 == 0xff000000;\n  }\n  if (!bVar9) {\n    return CONCAT44(outputHigh,inputValue) ^ 0x3800000000000000;\n  }\n  if ((shiftedValue & 0xffffff) == 0) {\n    return CONCAT44(outputHigh,inputValue);\n  }\n  if (param4 == 0xff000000) {\n    return CONCAT44(outputHigh,inputValue) | 0x8000000000000;\n  }\n  uVar2 = inputValue;\n  shiftedValue = uVar4;\n  if (uVar4 == 0) {\n    uVar2 = 0;\n    shiftedValue = inputValue;\n  }\n  leadingZerosCount = LZCOUNT(shiftedValue);\n  if (uVar4 == 0) {\n    leadingZerosCount = leadingZerosCount + 0x20;\n  }\n  iVar7 = leadingZerosCount - 0xb;\n  bVar10 = SBORROW4(iVar7,0x20);\n  uVar4 = leadingZerosCount - 0x2b;\n  bVar9 = (int)uVar4 < 0;\n  bVar8 = uVar4 == 0;\n  if ((int)iVar7 < 0x20) {\n    bVar10 = SCARRY4(uVar4,0xc);\n    leadingZerosCount = leadingZerosCount + -0x1f;\n    bVar9 = leadingZerosCount < 0;\n    bVar8 = leadingZerosCount == 0;\n    uVar4 = iVar7;\n    if (!bVar8 && bVar9 == bVar10) {\n      uVar2 = shiftedValue << (iVar7 & 0xff);\n      shiftedValue = shiftedValue >> (0xcU - leadingZerosCount & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (bVar8 || bVar9 != bVar10) {\n    in_r12 = 0x20 - uVar4;\n  }\n  shiftedValue = shiftedValue << (uVar4 & 0xff);\n  if (bVar8 || bVar9 != bVar10) {\n    shiftedValue = shiftedValue | uVar2 >> (in_r12 & 0xff);\n  }\n  if (bVar8 || bVar9 != bVar10) {\n    uVar2 = uVar2 << (uVar4 & 0xff);\n  }\nLAB_08008458:\n  if ((int)iVar7 < 0x381) {\n    return CONCAT44(shiftedValue + (0x380 - iVar7) * 0x100000 | bit31Shifted,uVar2);\n  }\n  uVar4 = ~(0x380 - iVar7);\n  if (0x1e < (int)uVar4) {\n    return CONCAT44(outputHigh,shiftedValue >> (uVar4 - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  leadingZerosCount = uVar4 - 0x13;\n  if (leadingZerosCount == 0 || leadingZerosCount < 0 != SCARRY4(uVar4 - 0x1f,0xc)) {\n    uVar4 = uVar4 + 1;\n    return CONCAT44(bit31Shifted | shiftedValue >> (uVar4 & 0xff),\n                    uVar2 >> (uVar4 & 0xff) | shiftedValue << (0x20 - uVar4 & 0xff));\n  }\n  return CONCAT44(outputHigh,uVar2 >> (0x20 - (0xcU - leadingZerosCount) & 0xff) | shiftedValue << (0xcU - leadingZerosCount & 0xff)) &\n         0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008590": "reverse_endianess_08008590",
                "param_1": "inputValue",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "bit31Shifted",
                "uVar3": "outputHigh",
                "uVar5": "shiftedValue",
                "iVar6": "leadingZerosCount",
                "uVar7": "iVar7"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08002638",
                "FUN_080005b4",
                "FUN_08002408",
                "FUN_08004e30",
                "FUN_080046d0",
                "FUN_08001f00",
                "FUN_08003b98",
                "FUN_08004940",
                "FUN_0800056c",
                "FUN_080044e8",
                "FUN_08002978",
                "FUN_08001994",
                "FUN_08002c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008640": {
            "entrypoint": "0x08008640",
            "current_name": "calculate_product_08008640",
            "code": "\nulonglong calculateProduct_08008640(undefined4 input_1,uint input_2,uint input_3,uint input_4)\n\n{\n  ulonglong result_high;\n  longlong temp_var;\n  uint result_high_bits;\n  uint input_2_bits;\n  int sum;\n  uint temp_var_2;\n  uint input_4_bits;\n  uint result_low_bits;\n  uint result_low;\n  bool isZero;\n  bool isNegative;\n  bool carryOccurred;\n  ulonglong concatenated_inputs;\n  \n  concatenated_inputs = CONCAT44(input_2,input_1);\n  result_low_bits = 0x7ff;\n  input_2_bits = input_2 >> 0x14 & 0x7ff;\n  isZero = input_2_bits == 0;\n  if (!isZero) {\n    input_4_bits = input_4 >> 0x14 & 0x7ff;\n    isZero = input_4_bits == 0;\n  }\n  if (!isZero) {\n    isZero = input_2_bits == 0x7ff;\n  }\n  if (!isZero) {\n    isZero = input_4_bits == 0x7ff;\n  }\n  if (isZero) {\n    concatenated_inputs = FUN_0800881c();\n  }\n  result_high_bits = (uint)(concatenated_inputs >> 0x20);\n  sum = input_2_bits + input_4_bits;\n  input_2_bits = result_high_bits ^ input_4;\n  result_high_bits = result_high_bits & ~(result_low_bits << 0x15);\n  input_4 = input_4 & ~(result_low_bits << 0x15);\n  isZero = ((uint)concatenated_inputs | result_high_bits << 0xc) == 0;\n  if (!isZero) {\n    isZero = (input_3 | input_4 << 0xc) == 0;\n  }\n  result_high_bits = result_high_bits | 0x100000;\n  input_4 = input_4 | 0x100000;\n  if (isZero) {\n    input_3 = (uint)concatenated_inputs | input_3;\n    input_4 = (input_2_bits & 0x80000000 | result_high_bits) ^ input_4;\n    input_2_bits = result_low_bits >> 1;\n    carryOccurred = SBORROW4(sum,input_2_bits);\n    temp_var_2 = sum - input_2_bits;\n    isZero = temp_var_2 == 0;\n    result_high_bits = temp_var_2;\n    if (!isZero && (int)input_2_bits <= sum) {\n      carryOccurred = SBORROW4(result_low_bits,temp_var_2);\n      result_high_bits = result_low_bits - temp_var_2;\n      isZero = result_low_bits == temp_var_2;\n    }\n    if (!isZero && (int)result_high_bits < 0 == carryOccurred) {\n      input_4 = input_4 | temp_var_2 * 0x100000;\n    }\n    if (!isZero && (int)result_high_bits < 0 == carryOccurred) {\n      return CONCAT44(input_4,input_3);\n    }\n    input_4 = input_4 | 0x100000;\n    result_low_bits = 0;\n    carryOccurred = SBORROW4(temp_var_2,1);\n    temp_var_2 = temp_var_2 - 1;\n    isZero = temp_var_2 == 0;\n    input_2_bits = temp_var_2;\n  }\n  else {\n    result_high = (concatenated_inputs & 0xffffffff) * (ulonglong)input_3;\n    concatenated_inputs = (concatenated_inputs & 0xffffffff) * (ulonglong)input_4 +\n             (ulonglong)result_high_bits * (ulonglong)input_3 + (result_high >> 0x20);\n    result_low = (uint)concatenated_inputs;\n    temp_var = (ulonglong)result_high_bits * (ulonglong)input_4 + (concatenated_inputs >> 0x20);\n    result_low_bits = (uint)temp_var;\n    result_high_bits = (uint)((ulonglong)temp_var >> 0x20);\n    if ((int)result_high != 0) {\n      result_low = result_low | 1;\n    }\n    temp_var_2 = (sum + -0x3ff) - (uint)(result_high_bits < 0x200);\n    if (result_high_bits < 0x200) {\n      isZero = (result_low & 0x80000000) != 0;\n      result_low = result_low << 1;\n      temp_var = CONCAT44(result_high_bits * 2 + (uint)(CARRY4(result_low_bits,result_low_bits) || CARRY4(result_low_bits * 2,(uint)isZero)),\n                       result_low_bits * 2 + (uint)isZero);\n    }\n    input_4 = input_2_bits & 0x80000000 | (int)((ulonglong)temp_var >> 0x20) << 0xb | (uint)temp_var >> 0x15;\n    input_3 = (uint)temp_var << 0xb | result_low >> 0x15;\n    result_low_bits = result_low * 0x800;\n    isNegative = 0xfc < temp_var_2;\n    carryOccurred = SBORROW4(temp_var_2,0xfd);\n    result_high_bits = temp_var_2 - 0xfd;\n    isZero = result_high_bits == 0;\n    input_2_bits = result_high_bits;\n    if (isNegative && !isZero) {\n      isNegative = 0x6ff < result_high_bits;\n      carryOccurred = SBORROW4(result_high_bits,0x700);\n      input_2_bits = temp_var_2 - 0x7fd;\n      isZero = result_high_bits == 0x700;\n    }\n    if (!isNegative || isZero) {\n      isZero = 0x7fffffff < result_low_bits;\n      if (result_low_bits == 0x80000000) {\n        isZero = (result_low >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(input_4 + temp_var_2 * 0x100000 + (uint)CARRY4(input_3,(uint)isZero),input_3 + isZero\n                     );\n    }\n  }\n  if (!isZero && (int)input_2_bits < 0 == carryOccurred) {\n    return (ulonglong)(input_4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  isNegative = SCARRY4(temp_var_2,0x36);\n  isZero = (int)(temp_var_2 + 0x36) < 0;\n  carryOccurred = temp_var_2 == 0xffffffca;\n  if (carryOccurred || isZero != isNegative) {\n    input_3 = 0;\n  }\n  if (carryOccurred || isZero != isNegative) {\n    input_4 = input_4 & 0x80000000;\n  }\n  if (carryOccurred || isZero != isNegative) {\n    return CONCAT44(input_4,input_3);\n  }\n  input_2_bits = -temp_var_2;\n  result_high_bits = input_2_bits - 0x20;\n  if (0x1f < (int)input_2_bits) {\n    temp_var_2 = input_3 >> (result_high_bits & 0xff) | input_4 << (0x20 - result_high_bits & 0xff);\n    input_2_bits = (input_4 >> (result_high_bits & 0xff) & ~((input_4 & 0x80000000) >> (result_high_bits & 0xff))) -\n            ((int)temp_var_2 >> 0x1f);\n    if ((result_low_bits | input_3 << (0x20 - result_high_bits & 0xff) | temp_var_2 << 1) == 0) {\n      input_2_bits = input_2_bits & ~(temp_var_2 >> 0x1f);\n    }\n    return CONCAT44(input_4,input_2_bits) & 0x80000000ffffffff;\n  }\n  sum = input_2_bits - 0x14;\n  if (sum == 0 || sum < 0 != SCARRY4(result_high_bits,0xc)) {\n    result_low = input_3 << (temp_var_2 + 0x20 & 0xff);\n    result_high_bits = input_3 >> (input_2_bits & 0xff) | input_4 << (temp_var_2 + 0x20 & 0xff);\n    temp_var_2 = result_high_bits + -((int)result_low >> 0x1f);\n    if ((result_low_bits | result_low << 1) == 0) {\n      temp_var_2 = temp_var_2 & ~(result_low >> 0x1f);\n    }\n    return CONCAT44((input_4 & 0x80000000) +\n                    ((input_4 & 0x7fffffff) >> (input_2_bits & 0xff)) +\n                    (uint)CARRY4(result_high_bits,-((int)result_low >> 0x1f)),temp_var_2);\n  }\n  input_2_bits = 0xc - sum;\n  temp_var_2 = input_3 << (input_2_bits & 0xff);\n  input_2_bits = input_3 >> (0x20 - input_2_bits & 0xff) | input_4 << (input_2_bits & 0xff);\n  result_high_bits = input_2_bits + -((int)temp_var_2 >> 0x1f);\n  if ((result_low_bits | temp_var_2 << 1) == 0) {\n    result_high_bits = result_high_bits & ~(temp_var_2 >> 0x1f);\n  }\n  return CONCAT44((input_4 & 0x80000000) + (uint)CARRY4(input_2_bits,-((int)temp_var_2 >> 0x1f)),result_high_bits);\n}\n\n",
            "renaming": {
                "FUN_08008640": "calculate_product_08008640",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "result_high",
                "lVar2": "temp_var",
                "uVar3": "result_high_bits",
                "uVar4": "input_2_bits",
                "iVar5": "sum",
                "uVar6": "temp_var_2",
                "unaff_r5": "input_4_bits",
                "uVar7": "result_low_bits",
                "uVar8": "result_low",
                "bVar9": "isZero",
                "bVar10": "isNegative",
                "bVar11": "carryOccurred",
                "uVar12": "concatenated_inputs"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08002638",
                "FUN_08009d78",
                "FUN_0800a5a0",
                "FUN_080046d0",
                "FUN_08001f00",
                "FUN_0800af78",
                "FUN_0800b2e8",
                "FUN_08004940",
                "FUN_0800a1bc",
                "FUN_0800a348",
                "FUN_0800056c",
                "FUN_080044e8",
                "FUN_08009b24",
                "FUN_08001994",
                "FUN_0800adf0",
                "FUN_08002c18"
            ],
            "called": [
                "FUN_0800881c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800881c": {
            "entrypoint": "0x0800881c",
            "current_name": "calculate_bitwise_result_0800881c",
            "code": "\nulonglong calculate_bitwise_result_0800881c(uint input_1,uint input_2,uint input_3,uint input_4)\n\n{\n  uint bit_1;\n  uint bit_2;\n  uint bit_3;\n  uint bit_4;\n  uint bit_5;\n  bool is_zero;\n  \n  bit_3 = bit_5 & input_4 >> 0x14;\n  if (bit_2 != bit_5 && bit_3 != bit_5) {\n    is_zero = (input_1 | input_2 << 1) == 0;\n    if (!is_zero) {\n      is_zero = (input_3 | input_4 << 1) == 0;\n    }\n    if (is_zero) {\n      return (ulonglong)((input_2 ^ input_4) & 0x80000000) << 0x20;\n    }\n    if (bit_2 == 0) {\n      bit_4 = input_2 & 0x80000000;\n      do {\n        bit_1 = input_1 & 0x80000000;\n        input_1 = input_1 << 1;\n        input_2 = input_2 * 2 + (uint)(bit_1 != 0);\n      } while ((input_2 & 0x100000) == 0);\n      input_2 = input_2 | bit_4;\n      if (bit_3 != 0) {\n        return CONCAT44(input_2,input_1);\n      }\n    }\n    do {\n      bit_3 = input_3 & 0x80000000;\n      input_3 = input_3 << 1;\n      input_4 = input_4 * 2 + (uint)(bit_3 != 0);\n    } while ((input_4 & 0x100000) == 0);\n    return CONCAT44(input_2,input_1);\n  }\n  is_zero = (input_1 | input_2 << 1) == 0;\n  if (is_zero) {\n    input_2 = input_4;\n    input_1 = input_3;\n  }\n  if (!is_zero) {\n    is_zero = (input_3 | input_4 << 1) == 0;\n  }\n  bit_4 = input_2;\n  if (((!is_zero) && ((bit_2 != bit_5 || ((input_1 | input_2 << 0xc) == 0)))) &&\n     ((bit_3 != bit_5 || (input_1 = input_3, bit_4 = input_4, (input_3 | input_4 << 0xc) == 0)))) {\n    return (ulonglong)((input_2 ^ input_4) & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  return CONCAT44(bit_4,input_1) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_0800881c": "calculate_bitwise_result_0800881c",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "bit_1",
                "unaff_r4": "bit_2",
                "uVar2": "bit_3",
                "uVar3": "bit_4",
                "in_r12": "bit_5",
                "bVar4": "is_zero"
            },
            "calling": [
                "FUN_08008640"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008894": {
            "entrypoint": "0x08008894",
            "current_name": "calculate_floating_point_08008894",
            "code": "\nulonglong calculateFloatingPoint_08008894(undefined4 flags,uint h1,uint h2,uint l2)\n\n{\n  uint higherBits1;\n  uint higherBits2;\n  uint newHigherBits;\n  uint lowerBits1;\n  uint lowerBits2;\n  uint newLowerBits;\n  uint resultHigherBits;\n  int diffBits;\n  uint newDiffBits;\n  uint resultLowerBits;\n  uint resultBits;\n  uint carryBit;\n  uint remainingBits;\n  uint allBits;\n  bool isZero;\n  bool isNegative;\n  bool carryFlag;\n  undefined8 combinedResult;\n  \n  combinedResult = CONCAT44(h1,flags);\n  allBits = 0x7ff;\n  resultHigherBits = h1 >> 0x14 & 0x7ff;\n  isZero = resultHigherBits == 0;\n  if (!isZero) {\n    resultLowerBits = l2 >> 0x14 & 0x7ff;\n    isZero = resultLowerBits == 0;\n  }\n  if (!isZero) {\n    isZero = resultHigherBits == 0x7ff;\n  }\n  if (!isZero) {\n    isZero = resultLowerBits == 0x7ff;\n  }\n  if (isZero) {\n    combinedResult = FUN_08008a02();\n  }\n  newDiffBits = (uint)((ulonglong)combinedResult >> 0x20);\n  carryBit = (uint)combinedResult;\n  diffBits = resultHigherBits - resultLowerBits;\n  if ((h2 | l2 << 0xc) == 0) {\n    resultHigherBits = (newDiffBits ^ l2) & 0x80000000 | newDiffBits & 0xfffff;\n    carryFlag = SCARRY4(diffBits,allBits >> 1);\n    newDiffBits = diffBits + (allBits >> 1);\n    isZero = (int)newDiffBits < 0;\n    isNegative = newDiffBits == 0;\n    if (!isNegative && isZero == carryFlag) {\n      carryFlag = SBORROW4(allBits,newDiffBits);\n      isZero = (int)(allBits - newDiffBits) < 0;\n      isNegative = allBits == newDiffBits;\n    }\n    if (!isNegative && isZero == carryFlag) {\n      resultHigherBits = resultHigherBits | newDiffBits * 0x100000;\n    }\n    if (!isNegative && isZero == carryFlag) {\n      return CONCAT44(resultHigherBits,carryBit);\n    }\n    resultHigherBits = resultHigherBits | 0x100000;\n    allBits = 0;\n    isNegative = SBORROW4(newDiffBits,1);\n    newDiffBits = newDiffBits - 1;\n    isZero = newDiffBits == 0;\n    newHigherBits = newDiffBits;\n  }\n  else {\n    newHigherBits = (l2 << 0xc) >> 4 | 0x10000000 | h2 >> 0x18;\n    allBits = h2 << 8;\n    resultBits = (newDiffBits << 0xc) >> 4 | 0x10000000 | carryBit >> 0x18;\n    carryBit = carryBit * 0x100;\n    resultHigherBits = (newDiffBits ^ l2) & 0x80000000;\n    isZero = newHigherBits <= resultBits;\n    if (resultBits == newHigherBits) {\n      isZero = allBits <= carryBit;\n    }\n    diffBits = diffBits + (uint)isZero;\n    newDiffBits = diffBits + 0x3fd;\n    if (isZero == false) {\n      newHigherBits = newHigherBits >> 1;\n      allBits = (uint)((h2 >> 0x18 & 1) != 0) << 0x1f | allBits >> 1;\n    }\n    remainingBits = carryBit - allBits;\n    resultBits = (resultBits - newHigherBits) - (uint)(carryBit < allBits);\n    lowerBits1 = newHigherBits >> 1;\n    higherBits1 = (uint)((newHigherBits & 1) != 0) << 0x1f | allBits >> 1;\n    carryBit = 0x100000;\n    newHigherBits = 0x80000;\n    while( true ) {\n      isZero = higherBits1 <= remainingBits;\n      if (lowerBits1 < resultBits || resultBits - lowerBits1 < (uint)isZero) {\n        remainingBits = remainingBits - higherBits1;\n        carryBit = carryBit | newHigherBits;\n        resultBits = (resultBits - lowerBits1) - (uint)!isZero;\n      }\n      lowerBits2 = lowerBits1 >> 1;\n      higherBits1 = (uint)((lowerBits1 & 1) != 0) << 0x1f | higherBits1 >> 1;\n      isNegative = higherBits1 <= remainingBits;\n      isZero = resultBits - lowerBits2 < (uint)isNegative;\n      allBits = resultBits;\n      if (lowerBits2 < resultBits || isZero) {\n        remainingBits = remainingBits - higherBits1;\n        allBits = (resultBits - lowerBits2) - (uint)!isNegative;\n      }\n      if (lowerBits2 < resultBits || isZero) {\n        carryBit = carryBit | newHigherBits >> 1;\n      }\n      resultBits = lowerBits1 >> 2;\n      higherBits2 = (uint)((lowerBits2 & 1) != 0) << 0x1f | higherBits1 >> 1;\n      isNegative = higherBits2 <= remainingBits;\n      isZero = allBits - resultBits < (uint)isNegative;\n      lowerBits2 = allBits;\n      if (resultBits < allBits || isZero) {\n        remainingBits = remainingBits - higherBits2;\n        lowerBits2 = (allBits - resultBits) - (uint)!isNegative;\n      }\n      if (resultBits < allBits || isZero) {\n        carryBit = carryBit | newHigherBits >> 2;\n      }\n      newLowerBits = lowerBits1 >> 3;\n      higherBits1 = (uint)((resultBits & 1) != 0) << 0x1f | higherBits2 >> 1;\n      isNegative = higherBits1 <= remainingBits;\n      isZero = lowerBits2 - newLowerBits < (uint)isNegative;\n      resultBits = lowerBits2;\n      if (newLowerBits < lowerBits2 || isZero) {\n        remainingBits = remainingBits - higherBits1;\n        resultBits = (lowerBits2 - newLowerBits) - (uint)!isNegative;\n      }\n      if (newLowerBits < lowerBits2 || isZero) {\n        carryBit = carryBit | newHigherBits >> 3;\n      }\n      allBits = resultBits | remainingBits;\n      if (allBits == 0) break;\n      resultBits = resultBits << 4 | remainingBits >> 0x1c;\n      remainingBits = remainingBits << 4;\n      lowerBits1 = lowerBits1 & 0xfffffff8 | higherBits1 >> 0x1d;\n      higherBits1 = (higherBits2 >> 1) << 3;\n      newHigherBits = newHigherBits >> 4;\n      if (newHigherBits == 0) {\n        newLowerBits = lowerBits1;\n        if ((resultHigherBits & 0x100000) != 0) goto LAB_080089b2;\n        resultHigherBits = resultHigherBits | carryBit;\n        carryBit = 0;\n        newHigherBits = 0x80000000;\n      }\n    }\n    if ((resultHigherBits & 0x100000) == 0) {\n      resultHigherBits = resultHigherBits | carryBit;\n      carryBit = 0;\n    }\nLAB_080089b2:\n    carryFlag = 0xfc < newDiffBits;\n    isNegative = SBORROW4(newDiffBits,0xfd);\n    lowerBits1 = diffBits + 0x300;\n    isZero = lowerBits1 == 0;\n    newHigherBits = lowerBits1;\n    if (carryFlag && !isZero) {\n      carryFlag = 0x6ff < lowerBits1;\n      isNegative = SBORROW4(lowerBits1,0x700);\n      newHigherBits = diffBits - 0x400;\n      isZero = lowerBits1 == 0x700;\n    }\n    if (!carryFlag || isZero) {\n      isZero = newLowerBits <= resultBits;\n      if (resultBits == newLowerBits) {\n        isZero = higherBits1 <= remainingBits;\n      }\n      if (resultBits == newLowerBits && remainingBits == higherBits1) {\n        isZero = (carryBit & 1) != 0;\n      }\n      return CONCAT44(resultHigherBits + newDiffBits * 0x100000 + (uint)CARRY4(carryBit,(uint)isZero),carryBit + isZero);\n    }\n  }\n  if (!isZero && (int)newHigherBits < 0 == isNegative) {\n    return (ulonglong)(resultHigherBits & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  carryFlag = SCARRY4(newDiffBits,0x36);\n  isZero = (int)(newDiffBits + 0x36) < 0;\n  isNegative = newDiffBits == 0xffffffca;\n  if (isNegative || isZero != carryFlag) {\n    carryBit = 0;\n  }\n  if (isNegative || isZero != carryFlag) {\n    resultHigherBits = resultHigherBits & 0x80000000;\n  }\n  if (isNegative || isZero != carryFlag) {\n    return CONCAT44(resultHigherBits,carryBit);\n  }\n  newHigherBits = -newDiffBits;\n  resultBits = newHigherBits - 0x20;\n  if (0x1f < (int)newHigherBits) {\n    newHigherBits = carryBit >> (resultBits & 0xff) | resultHigherBits << (0x20 - resultBits & 0xff);\n    newDiffBits = (resultHigherBits >> (resultBits & 0xff) & ~((resultHigherBits & 0x80000000) >> (resultBits & 0xff))) -\n            ((int)newHigherBits >> 0x1f);\n    if ((allBits | carryBit << (0x20 - resultBits & 0xff) | newHigherBits << 1) == 0) {\n      newDiffBits = newDiffBits & ~(newHigherBits >> 0x1f);\n    }\n    return CONCAT44(resultHigherBits,newDiffBits) & 0x80000000ffffffff;\n  }\n  diffBits = newHigherBits - 0x14;\n  if (diffBits != 0 && diffBits < 0 == SCARRY4(resultBits,0xc)) {\n    newDiffBits = 0xc - diffBits;\n    newHigherBits = carryBit << (newDiffBits & 0xff);\n    carryBit = carryBit >> (0x20 - newDiffBits & 0xff) | resultHigherBits << (newDiffBits & 0xff);\n    newDiffBits = carryBit + -((int)newHigherBits >> 0x1f);\n    if ((allBits | newHigherBits << 1) == 0) {\n      newDiffBits = newDiffBits & ~(newHigherBits >> 0x1f);\n    }\n    return CONCAT44((resultHigherBits & 0x80000000) + (uint)CARRY4(carryBit,-((int)newHigherBits >> 0x1f)),newDiffBits);\n  }\n  resultBits = carryBit << (newDiffBits + 0x20 & 0xff);\n  carryBit = carryBit >> (newHigherBits & 0xff) | resultHigherBits << (newDiffBits + 0x20 & 0xff);\n  newDiffBits = carryBit + -((int)resultBits >> 0x1f);\n  if ((allBits | resultBits << 1) == 0) {\n    newDiffBits = newDiffBits & ~(resultBits >> 0x1f);\n  }\n  return CONCAT44((resultHigherBits & 0x80000000) +\n                  ((resultHigherBits & 0x7fffffff) >> (newHigherBits & 0xff)) +\n                  (uint)CARRY4(carryBit,-((int)resultBits >> 0x1f)),newDiffBits);\n}\n\n",
            "renaming": {
                "FUN_08008894": "calculate_floating_point_08008894",
                "param_1": "flags",
                "param_2": "h1",
                "param_3": "h2",
                "param_4": "l2",
                "uVar1": "higherBits1",
                "uVar2": "higherBits2",
                "uVar3": "newHigherBits",
                "uVar4": "lowerBits1",
                "uVar5": "lowerBits2",
                "uVar6": "newLowerBits",
                "uVar7": "resultHigherBits",
                "iVar8": "diffBits",
                "uVar9": "newDiffBits",
                "unaff_r5": "resultLowerBits",
                "uVar10": "resultBits",
                "uVar11": "carryBit",
                "uVar12": "remainingBits",
                "uVar13": "allBits",
                "bVar14": "isZero",
                "bVar15": "isNegative",
                "bVar16": "carryFlag",
                "uVar17": "combinedResult"
            },
            "calling": [
                "FUN_080098d0",
                "FUN_08003004",
                "FUN_0800a1bc",
                "FUN_080005b4",
                "FUN_08001994",
                "FUN_0800af78",
                "FUN_08009990"
            ],
            "called": [
                "FUN_08008a02"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008a02": {
            "entrypoint": "0x08008a02",
            "current_name": "decode_and_convert_08008a02",
            "code": "\nulonglong decode_and_convert_08008a02(uint input_1,uint input_2,uint input_3,uint input_4)\n\n{\n  uint bit_1;\n  uint condition_1;\n  uint bit_2;\n  uint temp_2;\n  uint constant_1;\n  bool condition_2;\n  \n  bit_2 = constant_1 & input_4 >> 0x14;\n  temp_2 = input_2;\n  if (condition_1 != constant_1 || bit_2 != constant_1) {\n    if (condition_1 == constant_1) {\n      if (((input_1 | input_2 << 0xc) == 0) && (input_1 = input_3, temp_2 = input_4, bit_2 != constant_1)\n         ) {\nLAB_08008874:\n        return (ulonglong)((input_2 ^ input_4) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n    }\n    else if (bit_2 == constant_1) {\n      input_1 = input_3;\n      temp_2 = input_4;\n      if ((input_3 | input_4 << 0xc) == 0) {\nLAB_08008838:\n        return (ulonglong)((input_2 ^ input_4) & 0x80000000) << 0x20;\n      }\n    }\n    else {\n      condition_2 = (input_1 | input_2 << 1) == 0;\n      if (!condition_2) {\n        condition_2 = (input_3 | input_4 << 1) == 0;\n      }\n      if (!condition_2) {\n        if (condition_1 == 0) {\n          temp_2 = input_2 & 0x80000000;\n          do {\n            bit_1 = input_1 & 0x80000000;\n            input_1 = input_1 << 1;\n            input_2 = input_2 * 2 + (uint)(bit_1 != 0);\n          } while ((input_2 & 0x100000) == 0);\n          input_2 = input_2 | temp_2;\n          if (bit_2 != 0) {\n            return CONCAT44(input_2,input_1);\n          }\n        }\n        do {\n          temp_2 = input_3 & 0x80000000;\n          input_3 = input_3 << 1;\n          input_4 = input_4 * 2 + (uint)(temp_2 != 0);\n        } while ((input_4 & 0x100000) == 0);\n        return CONCAT44(input_2,input_1);\n      }\n      if ((input_1 | input_2 << 1) != 0) goto LAB_08008874;\n      if ((input_3 | input_4 << 1) != 0) goto LAB_08008838;\n    }\n  }\n  return CONCAT44(temp_2,input_1) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_08008a02": "decode_and_convert_08008a02",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "bit_1",
                "unaff_r4": "condition_1",
                "uVar2": "bit_2",
                "uVar3": "temp_2",
                "in_r12": "constant_1",
                "bVar4": "condition_2"
            },
            "calling": [
                "FUN_08008894"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008a74": {
            "entrypoint": "0x08008a74",
            "current_name": "check_parameters_08008a74",
            "code": "\nuint check_parameters_08008a74(uint input_1,uint input_2,uint input_3,uint input_4)\n\n{\n  uint result;\n  bool is_zero;\n  bool is_negative;\n  \n  if (((int)(input_2 << 1) >> 0x15 == -1 || (int)(input_4 << 1) >> 0x15 == -1) &&\n     ((((int)(input_2 << 1) >> 0x15 == -1 && ((input_1 | input_2 << 0xc) != 0)) ||\n      (((int)(input_4 << 1) >> 0x15 == -1 && ((input_3 | input_4 << 0xc) != 0)))))) {\n    return 1;\n  }\n  is_zero = (input_1 | input_2 << 1) == 0;\n  if (is_zero) {\n    is_zero = (input_3 | input_4 << 1) == 0;\n  }\n  if (!is_zero) {\n    is_zero = input_2 == input_4;\n  }\n  if (is_zero) {\n    is_zero = input_1 == input_3;\n  }\n  if (!is_zero) {\n    result = input_2 ^ input_4;\n    is_zero = result == 0;\n    if (-1 < (int)result) {\n      is_zero = input_2 == input_4;\n    }\n    is_negative = -1 < (int)result && input_4 <= input_2;\n    if (is_zero) {\n      is_negative = input_3 <= input_1;\n    }\n    input_4 = (int)input_4 >> 0x1f;\n    if (!is_negative) {\n      input_4 = ~input_4;\n    }\n    return input_4 | 1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008a74": "check_parameters_08008a74",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "result",
                "bVar2": "is_zero",
                "bVar3": "is_negative"
            },
            "calling": [
                "FUN_08008b00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008af0": {
            "entrypoint": "0x08008af0",
            "current_name": "execute_function_08008af0",
            "code": "\nvoid executeFunction_08008af0(undefined4 input1,undefined4 input2,undefined4 data1,undefined4 data2)\n\n{\n  FUN_08008b00(data1,data2,input1,input2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008af0": "execute_function_08008af0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "data1",
                "param_4": "data2"
            },
            "calling": [
                "FUN_08008b4c",
                "FUN_08008b60"
            ],
            "called": [
                "FUN_08008b00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b00": {
            "entrypoint": "0x08008b00",
            "current_name": "initialize_application_08008b00",
            "code": "\nundefined4 initializeApplication_08008b00(undefined4 input)\n\n{\n  FUN_08008a74();\n  return input;\n}\n\n",
            "renaming": {
                "FUN_08008b00": "initialize_application_08008b00",
                "param_1": "input"
            },
            "calling": [
                "FUN_08008b24",
                "FUN_08008b10",
                "FUN_08008af0"
            ],
            "called": [
                "FUN_08008a74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b10": {
            "entrypoint": "0x08008b10",
            "current_name": "check_if_non_zero_08008b10",
            "code": "\nbool checkIfNonZero_08008b10(void)\n\n{\n  char inputChar;\n  \n  FUN_08008b00();\n  return inputChar != '\\0';\n}\n\n",
            "renaming": {
                "FUN_08008b10": "check_if_non_zero_08008b10",
                "in_ZR": "inputChar"
            },
            "calling": [
                "FUN_08009d78",
                "FUN_0800a5a0"
            ],
            "called": [
                "FUN_08008b00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b24": {
            "entrypoint": "0x08008b24",
            "current_name": "is_null_terminated_08008b24",
            "code": "\nbool is_null_terminated_08008b24(void)\n\n{\n  char input_char;\n  \n  FUN_08008b00();\n  return input_char == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08008b24": "is_null_terminated_08008b24",
                "in_CY": "input_char"
            },
            "calling": [
                "FUN_080098d0",
                "FUN_08003004",
                "FUN_08009b24"
            ],
            "called": [
                "FUN_08008b00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b4c": {
            "entrypoint": "0x08008b4c",
            "current_name": "check_carry_and_zero_08008b4c",
            "code": "\nbool check_carry_and_zero_08008b4c(void)\n\n{\n  undefined is_zero_set;\n  undefined is_carry_set;\n  \n  FUN_08008af0();\n  return !(bool)is_carry_set || (bool)is_zero_set;\n}\n\n",
            "renaming": {
                "FUN_08008b4c": "check_carry_and_zero_08008b4c",
                "in_ZR": "is_zero_set",
                "in_CY": "is_carry_set"
            },
            "calling": [
                "FUN_0800a5a0"
            ],
            "called": [
                "FUN_08008af0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b60": {
            "entrypoint": "0x08008b60",
            "current_name": "check_input_08008b60",
            "code": "\nbool check_input_08008b60(void)\n\n{\n  char input_char;\n  \n  FUN_08008af0();\n  return input_char == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08008b60": "check_input_08008b60",
                "in_CY": "input_char"
            },
            "calling": [
                "FUN_080094c0",
                "FUN_08003004",
                "FUN_08009318",
                "FUN_0800af78"
            ],
            "called": [
                "FUN_08008af0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b74": {
            "entrypoint": "0x08008b74",
            "current_name": "check_params_08008b74",
            "code": "\nundefined4 check_params_08008b74(uint input_value_1,int input_value_2,uint input_value_3,int input_value_4)\n\n{\n  if ((((input_value_2 << 1) >> 0x15 != -1) || ((input_value_1 | input_value_2 << 0xc) == 0)) &&\n     (((input_value_4 << 1) >> 0x15 != -1 || ((input_value_3 | input_value_4 << 0xc) == 0)))) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08008b74": "check_params_08008b74",
                "param_1": "input_value_1",
                "param_2": "input_value_2",
                "param_3": "input_value_3",
                "param_4": "input_value_4"
            },
            "calling": [
                "FUN_080098d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008ba0": {
            "entrypoint": "0x08008ba0",
            "current_name": "calculate_unsigned_integer_08008ba0",
            "code": "\nuint calculateUnsignedInteger_08008ba0(uint input1,uint input2)\n\n{\n  uint result;\n  int tempVar;\n  uint adjustedShift;\n  \n  tempVar = input2 * 2 + 0x200000;\n  if (input2 * 2 < 0xffe00000) {\n    if (-1 < tempVar) {\n      return 0;\n    }\n    result = tempVar >> 0x15;\n    adjustedShift = -result - 0x3e1;\n    if (result < 0xfffffc20 && adjustedShift != 0) {\n      result = (input2 << 0xb | 0x80000000 | input1 >> 0x15) >> (adjustedShift & 0xff);\n      if ((input2 & 0x80000000) != 0) {\n        result = -result;\n      }\n      return result;\n    }\n  }\n  else if ((input1 | input2 << 0xc) != 0) {\n    return 0;\n  }\n  input2 = input2 & 0x80000000;\n  if (input2 == 0) {\n    input2 = 0x7fffffff;\n  }\n  return input2;\n}\n\n",
            "renaming": {
                "FUN_08008ba0": "calculate_unsigned_integer_08008ba0",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "result",
                "iVar2": "tempVar",
                "uVar3": "adjustedShift"
            },
            "calling": [
                "FUN_080095b8",
                "FUN_08003004",
                "FUN_08009d78",
                "FUN_0800a348",
                "FUN_0800a5a0",
                "FUN_080005b4",
                "FUN_0800adf0",
                "FUN_08002c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008bf0": {
            "entrypoint": "0x08008bf0",
            "current_name": "calculate_shifted_value_08008bf0",
            "code": "\nuint calculateShiftedValue_08008bf0(uint input1,uint input2)\n\n{\n  int shiftedValue;\n  uint shiftCount;\n  \n  if ((input2 & 0x80000000) != 0) {\n    return 0;\n  }\n  shiftedValue = input2 * 2 + 0x200000;\n  if (input2 * 2 < 0xffe00000) {\n    if (-1 < shiftedValue) {\n      return 0;\n    }\n    shiftCount = -(shiftedValue >> 0x15) - 0x3e1;\n    if (-1 < (int)shiftCount) {\n      return (input2 << 0xb | 0x80000000 | input1 >> 0x15) >> (shiftCount & 0xff);\n    }\n  }\n  else if ((input1 | input2 << 0xc) != 0) {\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008bf0": "calculate_shifted_value_08008bf0",
                "param_1": "input1",
                "param_2": "input2",
                "iVar1": "shiftedValue",
                "uVar2": "shiftCount"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_08003004",
                "FUN_08002408",
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_08001994",
                "FUN_08001f00",
                "FUN_08002c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008c30": {
            "entrypoint": "0x08008c30",
            "current_name": "calculate_modified_value_08008c30",
            "code": "\nuint calculateModifiedValue_08008c30(uint inputValue,uint multiplier)\n\n{\n  uint result;\n  uint multiplierTimes2;\n  uint modifiedMultiplier;\n  uint modifiedMultiplier2;\n  bool isZero;\n  bool isLessThan70000000;\n  \n  multiplierTimes2 = multiplier * 2;\n  isLessThan70000000 = multiplierTimes2 < 0x70000000;\n  modifiedMultiplier = multiplierTimes2 + 0x90000000;\n  result = modifiedMultiplier;\n  if (!isLessThan70000000) {\n    modifiedMultiplier2 = multiplierTimes2 + 0x8fe00000;\n    result = modifiedMultiplier2;\n  }\n  isZero = result == 0;\n  if (!isLessThan70000000 && modifiedMultiplier >= 0x200000) {\n    isZero = modifiedMultiplier2 == 0x1fc00000;\n  }\n  if (((isLessThan70000000 || modifiedMultiplier < 0x200000) || 0x1fc00000 < modifiedMultiplier2) || isZero) {\n    if ((multiplier & 0x40000000) != 0) {\n      if (((int)multiplierTimes2 >> 0x15 == -1) && ((inputValue | multiplier << 0xc) != 0)) {\n        return 0x7fc00000;\n      }\n      return multiplier & 0x80000000 | 0x7f800000;\n    }\n    if ((int)(multiplierTimes2 + 0x92e00000) < 0 != SCARRY4(modifiedMultiplier,0x2e00000)) {\n      return multiplier & 0x80000000;\n    }\n    multiplierTimes2 = 0x18 - (multiplierTimes2 + 0x92e00000 >> 0x15);\n    result = inputValue >> (multiplierTimes2 & 0xff);\n    if (inputValue << (0x20 - multiplierTimes2 & 0xff) != 0) {\n      result = result | 1;\n    }\n    modifiedMultiplier = multiplier & 0x1fffff | 0x100000;\n    inputValue = result | modifiedMultiplier << (0x20 - multiplierTimes2 & 0xff);\n    modifiedMultiplier = (modifiedMultiplier >> (multiplierTimes2 & 0xff)) << 1;\n  }\n  result = (multiplier & 0x80000000 | inputValue >> 0x1d) + modifiedMultiplier * 4 + (uint)(0x7fffffff < inputValue * 8);\n  if (inputValue * 8 == 0x80000000) {\n    result = result & 0xfffffffe;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08008c30": "calculate_modified_value_08008c30",
                "param_1": "inputValue",
                "param_2": "multiplier",
                "uVar1": "result",
                "uVar2": "multiplierTimes2",
                "uVar3": "modifiedMultiplier",
                "in_r12": "modifiedMultiplier2",
                "bVar4": "isZero",
                "bVar5": "isLessThan70000000"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08002638",
                "FUN_08004940",
                "FUN_0800056c",
                "FUN_080005b4",
                "FUN_080044e8",
                "FUN_080046d0",
                "FUN_08002978",
                "FUN_08001994",
                "FUN_08001f00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008cd8": {
            "entrypoint": "0x08008cd8",
            "current_name": "calculate_float_08008cd8",
            "code": "\nuint calculate_float_08008cd8(uint input_1,uint input_2,undefined4 input_3,uint input_4)\n\n{\n  int shifted_bits;\n  int shifted_bits2;\n  uint temp_1;\n  uint temp_2;\n  uint result_1;\n  uint result_2;\n  uint difference;\n  bool is_equal;\n  \n  temp_1 = input_2 ^ 0x80000000;\n  result_1 = input_1 << 1;\n  is_equal = result_1 == 0;\n  if (!is_equal) {\n    input_4 = input_2 << 1;\n    is_equal = input_4 == 0;\n  }\n  if (!is_equal) {\n    is_equal = result_1 == input_4;\n  }\n  shifted_bits = (int)result_1 >> 0x18;\n  if (!is_equal) {\n    is_equal = shifted_bits == -1;\n  }\n  if (!is_equal) {\n    is_equal = (int)input_4 >> 0x18 == -1;\n  }\n  if (is_equal) {\n    shifted_bits2 = (int)(input_2 << 1) >> 0x18;\n    if (shifted_bits == -1 || shifted_bits2 == -1) {\n      result_1 = temp_1;\n      if (shifted_bits == -1) {\n        result_1 = input_1;\n      }\n      if (shifted_bits != -1 || shifted_bits2 != -1) {\n        temp_1 = result_1;\n      }\n      is_equal = (result_1 & 0x7fffff) == 0;\n      if (is_equal) {\n        is_equal = (temp_1 & 0x7fffff) == 0;\n      }\n      if (is_equal) {\n        is_equal = result_1 == temp_1;\n      }\n      if (!is_equal) {\n        result_1 = result_1 | 0x400000;\n      }\n      return result_1;\n    }\n    if (((input_1 ^ temp_1) & 0x7fffffff) != 0) {\n      if (result_1 == 0) {\n        input_1 = temp_1;\n      }\n      return input_1;\n    }\n    if (input_1 != temp_1) {\n      return 0;\n    }\n    if ((result_1 & 0xff000000) == 0) {\n      temp_1 = input_1 << 1;\n      if ((input_1 & 0x80000000) != 0) {\n        temp_1 = temp_1 | 0x80000000;\n      }\n      return temp_1;\n    }\n    if (result_1 < 0xfe000000) {\n      return input_1 + 0x800000;\n    }\n    input_1 = input_1 & 0x80000000;\nLAB_08008e12:\n    return input_1 | 0x7f800000;\n  }\n  result_1 = result_1 >> 0x18;\n  input_4 = input_4 >> 0x18;\n  difference = input_4 - result_1;\n  is_equal = difference != 0;\n  result_2 = result_1;\n  if (is_equal && result_1 <= input_4) {\n    result_2 = result_1 + difference;\n  }\n  if (is_equal && result_1 <= input_4) {\n    temp_1 = temp_1 ^ input_1;\n  }\n  if (is_equal && result_1 <= input_4) {\n    input_1 = input_1 ^ temp_1;\n  }\n  if (is_equal && result_1 <= input_4) {\n    temp_1 = temp_1 ^ input_1;\n  }\n  if (input_4 < result_1) {\n    difference = -difference;\n  }\n  if (0x19 < difference) {\n    return input_1;\n  }\n  result_1 = input_1 & 0xffffff | 0x800000;\n  if ((input_1 & 0x80000000) != 0) {\n    result_1 = -result_1;\n  }\n  temp_2 = temp_1 & 0xffffff | 0x800000;\n  if ((temp_1 & 0x80000000) != 0) {\n    temp_2 = -temp_2;\n  }\n  if (result_2 == difference) {\n    temp_2 = temp_2 ^ 0x800000;\n    if (result_2 == 0) {\n      result_1 = result_1 ^ 0x800000;\n      result_2 = 1;\n    }\n    else {\n      difference = difference - 1;\n    }\n  }\n  result_1 = result_1 + ((int)temp_2 >> (difference & 0xff));\n  temp_2 = temp_2 << (0x20 - difference & 0xff);\n  input_1 = result_1 & 0x80000000;\n  if ((int)result_1 < 0) {\n    is_equal = temp_2 != 0;\n    temp_2 = -temp_2;\n    result_1 = -result_1 - (uint)is_equal;\n  }\n  if (result_1 < 0x800000) {\n    temp_1 = temp_2 & 0x80000000;\n    temp_2 = temp_2 << 1;\n    result_1 = result_1 * 2 + (uint)(temp_1 != 0);\n    temp_1 = result_2 - 2;\n    if (result_2 - 1 == 0 || result_1 < 0x800000) {\n      difference = LZCOUNT(result_1) - 8;\n      result_1 = result_1 << (difference & 0xff);\n      if ((int)temp_1 < (int)difference) {\n        result_1 = result_1 >> (-(temp_1 - difference) & 0xff);\n      }\n      else {\n        result_1 = result_1 + (temp_1 - difference) * 0x800000;\n      }\n      return result_1 | input_1;\n    }\n  }\n  else {\n    temp_1 = result_2 - 1;\n    if (0xffffff < result_1) {\n      temp_1 = result_1 & 1;\n      result_1 = result_1 >> 1;\n      temp_2 = (uint)(temp_1 != 0) << 0x1f | temp_2 >> 1;\n      temp_1 = result_2;\n      if (0xfd < result_2) goto LAB_08008e12;\n    }\n  }\n  result_1 = result_1 + temp_1 * 0x800000 + (uint)(0x7fffffff < temp_2);\n  if (temp_2 == 0x80000000) {\n    result_1 = result_1 & 0xfffffffe;\n  }\n  return result_1 | input_1;\n}\n\n",
            "renaming": {
                "FUN_08008cd8": "calculate_float_08008cd8",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "iVar1": "shifted_bits",
                "iVar2": "shifted_bits2",
                "uVar3": "temp_1",
                "uVar4": "temp_2",
                "uVar5": "result_1",
                "uVar6": "result_2",
                "uVar7": "difference",
                "bVar8": "is_equal"
            },
            "calling": [
                "FUN_08002908",
                "FUN_08003004",
                "FUN_08004940",
                "FUN_08002408",
                "FUN_080005b4",
                "FUN_08002978",
                "FUN_080028bc",
                "FUN_08001f00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008cdc": {
            "entrypoint": "0x08008cdc",
            "current_name": "calculate_float_08008cdc",
            "code": "\nuint calculateFloat_08008cdc(uint inputValue1,uint inputValue2,undefined4 param3,uint param4)\n\n{\n  int shiftedValue1;\n  int shiftedValue2;\n  uint tempValue1;\n  uint tempValue2;\n  uint tempValue3;\n  uint tempValue4;\n  bool isEqual;\n  \n  tempValue2 = inputValue1 << 1;\n  isEqual = tempValue2 == 0;\n  if (!isEqual) {\n    param4 = inputValue2 << 1;\n    isEqual = param4 == 0;\n  }\n  if (!isEqual) {\n    isEqual = tempValue2 == param4;\n  }\n  shiftedValue1 = (int)tempValue2 >> 0x18;\n  if (!isEqual) {\n    isEqual = shiftedValue1 == -1;\n  }\n  if (!isEqual) {\n    isEqual = (int)param4 >> 0x18 == -1;\n  }\n  if (isEqual) {\n    shiftedValue2 = (int)(inputValue2 << 1) >> 0x18;\n    if (shiftedValue1 == -1 || shiftedValue2 == -1) {\n      tempValue2 = inputValue2;\n      if (shiftedValue1 == -1) {\n        tempValue2 = inputValue1;\n      }\n      if (shiftedValue1 != -1 || shiftedValue2 != -1) {\n        inputValue2 = tempValue2;\n      }\n      isEqual = (tempValue2 & 0x7fffff) == 0;\n      if (isEqual) {\n        isEqual = (inputValue2 & 0x7fffff) == 0;\n      }\n      if (isEqual) {\n        isEqual = tempValue2 == inputValue2;\n      }\n      if (!isEqual) {\n        tempValue2 = tempValue2 | 0x400000;\n      }\n      return tempValue2;\n    }\n    if (((inputValue1 ^ inputValue2) & 0x7fffffff) != 0) {\n      if (tempValue2 == 0) {\n        inputValue1 = inputValue2;\n      }\n      return inputValue1;\n    }\n    if (inputValue1 != inputValue2) {\n      return 0;\n    }\n    if ((tempValue2 & 0xff000000) == 0) {\n      tempValue2 = inputValue1 << 1;\n      if ((inputValue1 & 0x80000000) != 0) {\n        tempValue2 = tempValue2 | 0x80000000;\n      }\n      return tempValue2;\n    }\n    if (tempValue2 < 0xfe000000) {\n      return inputValue1 + 0x800000;\n    }\n    inputValue1 = inputValue1 & 0x80000000;\nLAB_08008e12:\n    return inputValue1 | 0x7f800000;\n  }\n  tempValue2 = tempValue2 >> 0x18;\n  param4 = param4 >> 0x18;\n  tempValue4 = param4 - tempValue2;\n  isEqual = tempValue4 != 0;\n  tempValue3 = tempValue2;\n  if (isEqual && tempValue2 <= param4) {\n    tempValue3 = tempValue2 + tempValue4;\n  }\n  if (isEqual && tempValue2 <= param4) {\n    inputValue2 = inputValue2 ^ inputValue1;\n  }\n  if (isEqual && tempValue2 <= param4) {\n    inputValue1 = inputValue1 ^ inputValue2;\n  }\n  if (isEqual && tempValue2 <= param4) {\n    inputValue2 = inputValue2 ^ inputValue1;\n  }\n  if (param4 < tempValue2) {\n    tempValue4 = -tempValue4;\n  }\n  if (0x19 < tempValue4) {\n    return inputValue1;\n  }\n  tempValue2 = inputValue1 & 0xffffff | 0x800000;\n  if ((inputValue1 & 0x80000000) != 0) {\n    tempValue2 = -tempValue2;\n  }\n  tempValue1 = inputValue2 & 0xffffff | 0x800000;\n  if ((inputValue2 & 0x80000000) != 0) {\n    tempValue1 = -tempValue1;\n  }\n  if (tempValue3 == tempValue4) {\n    tempValue1 = tempValue1 ^ 0x800000;\n    if (tempValue3 == 0) {\n      tempValue2 = tempValue2 ^ 0x800000;\n      tempValue3 = 1;\n    }\n    else {\n      tempValue4 = tempValue4 - 1;\n    }\n  }\n  tempValue2 = tempValue2 + ((int)tempValue1 >> (tempValue4 & 0xff));\n  tempValue1 = tempValue1 << (0x20 - tempValue4 & 0xff);\n  inputValue1 = tempValue2 & 0x80000000;\n  if ((int)tempValue2 < 0) {\n    isEqual = tempValue1 != 0;\n    tempValue1 = -tempValue1;\n    tempValue2 = -tempValue2 - (uint)isEqual;\n  }\n  if (tempValue2 < 0x800000) {\n    tempValue4 = tempValue1 & 0x80000000;\n    tempValue1 = tempValue1 << 1;\n    tempValue2 = tempValue2 * 2 + (uint)(tempValue4 != 0);\n    tempValue4 = tempValue3 - 2;\n    if (tempValue3 - 1 == 0 || tempValue2 < 0x800000) {\n      tempValue3 = LZCOUNT(tempValue2) - 8;\n      tempValue2 = tempValue2 << (tempValue3 & 0xff);\n      if ((int)tempValue4 < (int)tempValue3) {\n        tempValue2 = tempValue2 >> (-(tempValue4 - tempValue3) & 0xff);\n      }\n      else {\n        tempValue2 = tempValue2 + (tempValue4 - tempValue3) * 0x800000;\n      }\n      return tempValue2 | inputValue1;\n    }\n  }\n  else {\n    tempValue4 = tempValue3 - 1;\n    if (0xffffff < tempValue2) {\n      tempValue4 = tempValue2 & 1;\n      tempValue2 = tempValue2 >> 1;\n      tempValue1 = (uint)(tempValue4 != 0) << 0x1f | tempValue1 >> 1;\n      tempValue4 = tempValue3;\n      if (0xfd < tempValue3) goto LAB_08008e12;\n    }\n  }\n  tempValue2 = tempValue2 + tempValue4 * 0x800000 + (uint)(0x7fffffff < tempValue1);\n  if (tempValue1 == 0x80000000) {\n    tempValue2 = tempValue2 & 0xfffffffe;\n  }\n  return tempValue2 | inputValue1;\n}\n\n",
            "renaming": {
                "FUN_08008cdc": "calculate_float_08008cdc",
                "param_1": "inputValue1",
                "param_2": "inputValue2",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "shiftedValue1",
                "iVar2": "shiftedValue2",
                "uVar3": "tempValue1",
                "uVar4": "tempValue2",
                "uVar5": "tempValue3",
                "uVar6": "tempValue4",
                "bVar7": "isEqual"
            },
            "calling": [
                "FUN_08002908",
                "FUN_08003826",
                "FUN_08003004",
                "FUN_08004940",
                "FUN_080005b4",
                "FUN_08002978",
                "FUN_080028bc",
                "FUN_08001f00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008e3c": {
            "entrypoint": "0x08008e3c",
            "current_name": "calculate_value_08008e3c",
            "code": "\nuint calculateValue_08008e3c(uint inputValue)\n\n{\n  uint leadingZeros;\n  uint shiftAmount;\n  int offset;\n  uint msbValue;\n  \n  if (inputValue == 0) {\n    return 0;\n  }\n  leadingZeros = LZCOUNT(inputValue);\n  shiftAmount = leadingZeros - 8;\n  offset = shiftAmount * -0x800000 + 0x4a800000;\n  if (7 < leadingZeros) {\n    msbValue = 0 << (shiftAmount & 0xff);\n    leadingZeros = offset + (inputValue << (shiftAmount & 0xff)) +\n            (0U >> (0x20 - shiftAmount & 0xff)) + (uint)(0x7fffffff < msbValue);\n    if (msbValue == 0x80000000) {\n      leadingZeros = leadingZeros & 0xfffffffe;\n    }\n    return leadingZeros;\n  }\n  shiftAmount = inputValue << leadingZeros + 0x18;\n  leadingZeros = offset + ((inputValue >> (0x20 - (leadingZeros + 0x18) & 0xff)) - ((int)shiftAmount >> 0x1f));\n  if ((shiftAmount & 0x7fffffff) == 0) {\n    leadingZeros = leadingZeros & ~(shiftAmount >> 0x1f);\n  }\n  return leadingZeros;\n}\n\n",
            "renaming": {
                "FUN_08008e3c": "calculate_value_08008e3c",
                "param_1": "inputValue",
                "uVar1": "leadingZeros",
                "uVar2": "shiftAmount",
                "iVar3": "offset",
                "uVar4": "msbValue"
            },
            "calling": [
                "FUN_08002638",
                "FUN_08002c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008e44": {
            "entrypoint": "0x08008e44",
            "current_name": "FUNC_08008e44",
            "code": "\nuint FUNC_08008e44(uint param_1)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  int iVar4;\n  \n  uVar3 = param_1 & 0x80000000;\n  if ((int)uVar3 < 0) {\n    param_1 = -param_1;\n  }\n  if (param_1 == 0) {\n    return 0;\n  }\n  uVar1 = LZCOUNT(param_1);\n  uVar2 = uVar1 - 8;\n  iVar4 = ((uVar3 | 0x4b000000) - 0x800000) + uVar2 * -0x800000;\n  if (7 < uVar1) {\n    uVar1 = 0 << (uVar2 & 0xff);\n    uVar3 = iVar4 + (param_1 << (uVar2 & 0xff)) +\n            (0U >> (0x20 - uVar2 & 0xff)) + (uint)(0x7fffffff < uVar1);\n    if (uVar1 == 0x80000000) {\n      uVar3 = uVar3 & 0xfffffffe;\n    }\n    return uVar3;\n  }\n  uVar2 = param_1 << uVar1 + 0x18;\n  uVar3 = iVar4 + ((param_1 >> (0x20 - (uVar1 + 0x18) & 0xff)) - ((int)uVar2 >> 0x1f));\n  if ((uVar2 & 0x7fffffff) == 0) {\n    uVar3 = uVar3 & ~(uVar2 >> 0x1f);\n  }\n  return uVar3;\n}\n\n",
            "renaming": {
                "FUN_08008e44": "FUNC_08008e44"
            },
            "calling": [
                "FUN_08003618",
                "FUN_08003004",
                "FUN_08004940",
                "FUN_08002408",
                "FUN_08001f00",
                "FUN_080004fc",
                "FUN_08002c18",
                "FUN_080024c4"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008eec": {
            "entrypoint": "0x08008eec",
            "current_name": "calculate_float_value_08008eec",
            "code": "\nuint calculateFloatValue_08008eec(uint inputValue1,uint inputValue2,undefined4 unusedParam,uint shiftValue)\n\n{\n  longlong product;\n  uint result;\n  uint shiftedValue1;\n  int sumShiftedValues;\n  int offset;\n  uint shiftedValue2;\n  int adjustedOffset;\n  uint finalResult;\n  bool isZero;\n  bool negativeOffset;\n  \n  shiftedValue1 = inputValue1 >> 0x17 & 0xff;\n  isZero = shiftedValue1 == 0;\n  if (!isZero) {\n    shiftValue = inputValue2 >> 0x17 & 0xff;\n    isZero = shiftValue == 0;\n  }\n  if (!isZero) {\n    isZero = shiftedValue1 == 0xff;\n  }\n  if (!isZero) {\n    isZero = shiftValue == 0xff;\n  }\n  if (isZero) {\n    shiftValue = inputValue2 >> 0x17 & 0xff;\n    if (shiftedValue1 == 0xff || shiftValue == 0xff) {\n      isZero = inputValue1 == 0 || inputValue1 == 0x80000000;\n      result = inputValue2;\n      if (inputValue1 != 0 && inputValue1 != 0x80000000) {\n        isZero = inputValue2 == 0;\n        result = inputValue1;\n      }\n      if (!isZero) {\n        isZero = inputValue2 == 0x80000000;\n      }\n      finalResult = result;\n      if (((isZero) || ((shiftedValue1 == 0xff && ((result & 0x7fffff) != 0)))) ||\n         ((shiftValue == 0xff && (finalResult = inputValue2, (inputValue2 & 0x7fffff) != 0)))) {\n        return finalResult | 0x7fc00000;\n      }\n      result = result ^ inputValue2;\n      goto LAB_0800903c;\n    }\n    isZero = (inputValue1 & 0x7fffffff) == 0;\n    if (!isZero) {\n      isZero = (inputValue2 & 0x7fffffff) == 0;\n    }\n    if (isZero) {\n      return (inputValue1 ^ inputValue2) & 0x80000000;\n    }\n    isZero = shiftedValue1 == 0;\n    result = inputValue1 & 0x80000000;\n    while( true ) {\n      if (isZero) {\n        inputValue1 = inputValue1 << 1;\n        isZero = (inputValue1 & 0x800000) == 0;\n      }\n      if (!isZero) break;\n      shiftedValue1 = shiftedValue1 - 1;\n    }\n    inputValue1 = inputValue1 | result;\n    isZero = shiftValue == 0;\n    result = inputValue2 & 0x80000000;\n    while( true ) {\n      if (isZero) {\n        inputValue2 = inputValue2 << 1;\n        isZero = (inputValue2 & 0x800000) == 0;\n      }\n      if (!isZero) break;\n      shiftValue = shiftValue - 1;\n    }\n    inputValue2 = inputValue2 | result;\n  }\n  sumShiftedValues = shiftedValue1 + shiftValue;\n  finalResult = inputValue1 ^ inputValue2;\n  shiftedValue1 = inputValue1 << 9;\n  isZero = shiftedValue1 == 0;\n  if (!isZero) {\n    inputValue2 = inputValue2 << 9;\n    isZero = inputValue2 == 0;\n  }\n  if (isZero) {\n    if (shiftedValue1 == 0) {\n      inputValue2 = inputValue2 << 9;\n    }\n    result = finalResult & 0x80000000 | inputValue1 & 0x7fffff | inputValue2 >> 9;\n    negativeOffset = SBORROW4(sumShiftedValues,0x7f);\n    offset = sumShiftedValues + -0x7f;\n    isZero = offset == 0;\n    adjustedOffset = offset;\n    if (!isZero && 0x7e < sumShiftedValues) {\n      negativeOffset = SBORROW4(0xff,offset);\n      adjustedOffset = 0xff - offset;\n      isZero = offset == 0xff;\n    }\n    if (!isZero && adjustedOffset < 0 == negativeOffset) {\n      result = result | offset * 0x800000;\n    }\n    if (!isZero && adjustedOffset < 0 == negativeOffset) {\n      return result;\n    }\n    result = result | 0x800000;\n    shiftedValue2 = 0;\n    negativeOffset = SBORROW4(offset,1);\n    finalResult = sumShiftedValues - 0x80;\n    isZero = finalResult == 0;\n    shiftedValue1 = finalResult;\n  }\n  else {\n    product = (ulonglong)(shiftedValue1 >> 5 | 0x8000000) * (ulonglong)(inputValue2 >> 5 | 0x8000000);\n    shiftedValue2 = (uint)product;\n    result = (uint)((ulonglong)product >> 0x20);\n    isZero = result < 0x800000;\n    if (isZero) {\n      result = result << 1;\n    }\n    if (isZero) {\n      result = result | shiftedValue2 >> 0x1f;\n      shiftedValue2 = shiftedValue2 << 1;\n    }\n    result = finalResult & 0x80000000 | result;\n    finalResult = (sumShiftedValues + -0x7f) - (uint)isZero;\n    negativeOffset = SBORROW4(finalResult,0xfd);\n    isZero = finalResult == 0xfd;\n    shiftedValue1 = finalResult - 0xfd;\n    if (finalResult < 0xfe) {\n      result = result + finalResult * 0x800000 + (uint)(0x7fffffff < shiftedValue2);\n      if (shiftedValue2 == 0x80000000) {\n        result = result & 0xfffffffe;\n      }\n      return result;\n    }\n  }\n  if (isZero || (int)shiftedValue1 < 0 != negativeOffset) {\n    isZero = (int)(finalResult + 0x19) < 0;\n    if (finalResult == 0xffffffe7 || isZero != SCARRY4(finalResult,0x19)) {\n      result = result & 0x80000000;\n    }\n    if (finalResult != 0xffffffe7 && isZero == SCARRY4(finalResult,0x19)) {\n      shiftedValue1 = (result << 1) >> (-finalResult & 0xff);\n      finalResult = result << (finalResult + 0x20 & 0xff);\n      shiftedValue1 = ((uint)((result & 0x80000000) != 0) << 0x1f | shiftedValue1 >> 1) + (uint)((byte)shiftedValue1 & 1);\n      if ((shiftedValue2 | finalResult << 1) == 0) {\n        shiftedValue1 = shiftedValue1 & ~(finalResult >> 0x1f);\n      }\n      return shiftedValue1;\n    }\n    return result;\n  }\nLAB_0800903c:\n  return result & 0x80000000 | 0x7f800000;\n}\n\n",
            "renaming": {
                "FUN_08008eec": "calculate_float_value_08008eec",
                "param_1": "inputValue1",
                "param_2": "inputValue2",
                "param_3": "unusedParam",
                "param_4": "shiftValue",
                "lVar1": "product",
                "uVar2": "result",
                "uVar3": "shiftedValue1",
                "iVar4": "sumShiftedValues",
                "iVar5": "offset",
                "uVar6": "shiftedValue2",
                "iVar7": "adjustedOffset",
                "uVar8": "finalResult",
                "bVar9": "isZero",
                "bVar10": "negativeOffset"
            },
            "calling": [
                "FUN_08003618",
                "FUN_08003826",
                "FUN_08003004",
                "FUN_08002638",
                "FUN_08002408",
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_080028bc",
                "FUN_08001f00",
                "FUN_08002908",
                "FUN_08002978",
                "FUN_08001994",
                "FUN_08002c18",
                "FUN_080024c4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009054": {
            "entrypoint": "0x08009054",
            "current_name": "floating_point_addition_08009054",
            "code": "\nuint floatingPointAddition_08009054(uint operand1,uint operand2,undefined4 undefined,uint carry)\n\n{\n  uint operand1Shifted;\n  uint operand2Shifted;\n  int difference;\n  uint temp;\n  int tempDifference;\n  uint result;\n  bool isZero;\n  bool isCarrySet;\n  bool isOverflowSet;\n  \n  operand2Shifted = operand1 >> 0x17 & 0xff;\n  isZero = operand2Shifted == 0;\n  if (!isZero) {\n    carry = operand2 >> 0x17 & 0xff;\n    isZero = carry == 0;\n  }\n  if (!isZero) {\n    isZero = operand2Shifted == 0xff;\n  }\n  if (!isZero) {\n    isZero = carry == 0xff;\n  }\n  if (isZero) {\n    carry = operand2 >> 0x17 & 0xff;\n    result = operand1;\n    if (operand2Shifted == 0xff) {\n      if (((operand1 & 0x7fffff) != 0) || (result = operand2, carry == 0xff)) {\nLAB_0800904a:\n        return result | 0x7fc00000;\n      }\n    }\n    else {\n      if (carry == 0xff) {\n        result = operand2;\n        if ((operand2 & 0x7fffff) == 0) {\nLAB_08009000:\n          return (operand1 ^ operand2) & 0x80000000;\n        }\n        goto LAB_0800904a;\n      }\n      isZero = (operand1 & 0x7fffffff) == 0;\n      if (!isZero) {\n        isZero = (operand2 & 0x7fffffff) == 0;\n      }\n      if (!isZero) {\n        isZero = operand2Shifted == 0;\n        result = operand1 & 0x80000000;\n        while( true ) {\n          if (isZero) {\n            operand1 = operand1 << 1;\n            isZero = (operand1 & 0x800000) == 0;\n          }\n          if (!isZero) break;\n          operand2Shifted = operand2Shifted - 1;\n        }\n        operand1 = operand1 | result;\n        isZero = carry == 0;\n        result = operand2 & 0x80000000;\n        while( true ) {\n          if (isZero) {\n            operand2 = operand2 << 1;\n            isZero = (operand2 & 0x800000) == 0;\n          }\n          if (!isZero) break;\n          carry = carry - 1;\n        }\n        operand2 = operand2 | result;\n        goto LAB_0800906c;\n      }\n      if ((operand1 & 0x7fffffff) == 0) {\n        if ((operand2 & 0x7fffffff) != 0) goto LAB_08009000;\n        goto LAB_0800904a;\n      }\n    }\n    operand1 = operand1 ^ operand2;\n  }\n  else {\nLAB_0800906c:\n    difference = operand2Shifted - carry;\n    if (operand2 << 9 == 0) {\n      operand1 = (operand1 ^ operand2) & 0x80000000 | operand1 & 0x7fffff;\n      isOverflowSet = SCARRY4(difference,0x7f);\n      tempDifference = difference + 0x7f;\n      isZero = tempDifference < 0;\n      isCarrySet = tempDifference == 0;\n      if (!isCarrySet && isZero == isOverflowSet) {\n        isOverflowSet = SBORROW4(0xff,tempDifference);\n        isZero = 0xff - tempDifference < 0;\n        isCarrySet = tempDifference == 0xff;\n      }\n      if (!isCarrySet && isZero == isOverflowSet) {\n        operand1 = operand1 | tempDifference * 0x800000;\n      }\n      if (!isCarrySet && isZero == isOverflowSet) {\n        return operand1;\n      }\n      operand1 = operand1 | 0x800000;\n      operand2Shifted = 0;\n      isCarrySet = SBORROW4(tempDifference,1);\n      temp = difference + 0x7e;\n      isZero = temp == 0;\n      result = temp;\n    }\n    else {\n      operand1Shifted = (operand2 << 9) >> 4 | 0x10000000;\n      operand2Shifted = (operand1 << 9) >> 4 | 0x10000000;\n      operand1 = (operand1 ^ operand2) & 0x80000000;\n      isZero = operand1Shifted <= operand2Shifted;\n      if (!isZero) {\n        operand2Shifted = operand2Shifted << 1;\n      }\n      temp = difference + 0x7d + (uint)isZero;\n      result = 0x800000;\n      do {\n        if (operand1Shifted <= operand2Shifted) {\n          operand2Shifted = operand2Shifted - operand1Shifted;\n          operand1 = operand1 | result;\n        }\n        isZero = operand1Shifted >> 1 <= operand2Shifted;\n        if (isZero) {\n          operand2Shifted = operand2Shifted - (operand1Shifted >> 1);\n        }\n        if (isZero) {\n          operand1 = operand1 | result >> 1;\n        }\n        isZero = operand1Shifted >> 2 <= operand2Shifted;\n        if (isZero) {\n          operand2Shifted = operand2Shifted - (operand1Shifted >> 2);\n        }\n        if (isZero) {\n          operand1 = operand1 | result >> 2;\n        }\n        isZero = operand1Shifted >> 3 <= operand2Shifted;\n        if (isZero) {\n          operand2Shifted = operand2Shifted - (operand1Shifted >> 3);\n        }\n        if (isZero) {\n          operand1 = operand1 | result >> 3;\n        }\n        operand2Shifted = operand2Shifted * 0x10;\n        isZero = operand2Shifted == 0;\n        if (!isZero) {\n          result = result >> 4;\n          isZero = result == 0;\n        }\n      } while (!isZero);\n      isCarrySet = SBORROW4(temp,0xfd);\n      isZero = temp == 0xfd;\n      result = temp - 0xfd;\n      if (temp < 0xfe) {\n        operand1 = operand1 + temp * 0x800000 + (uint)(operand1Shifted <= operand2Shifted);\n        if (operand2Shifted - operand1Shifted == 0) {\n          operand1 = operand1 & 0xfffffffe;\n        }\n        return operand1;\n      }\n    }\n    if (isZero || (int)result < 0 != isCarrySet) {\n      isZero = (int)(temp + 0x19) < 0;\n      if (temp == 0xffffffe7 || isZero != SCARRY4(temp,0x19)) {\n        operand1 = operand1 & 0x80000000;\n      }\n      if (temp == 0xffffffe7 || isZero != SCARRY4(temp,0x19)) {\n        return operand1;\n      }\n      result = (operand1 << 1) >> (-temp & 0xff);\n      temp = operand1 << (temp + 0x20 & 0xff);\n      result = ((uint)((operand1 & 0x80000000) != 0) << 0x1f | result >> 1) + (uint)((byte)result & 1);\n      if ((operand2Shifted | temp << 1) == 0) {\n        result = result & ~(temp >> 0x1f);\n      }\n      return result;\n    }\n  }\n  return operand1 & 0x80000000 | 0x7f800000;\n}\n\n",
            "renaming": {
                "FUN_08009054": "floating_point_addition_08009054",
                "param_1": "operand1",
                "param_2": "operand2",
                "param_3": "undefined",
                "param_4": "carry",
                "uVar1": "operand1Shifted",
                "uVar2": "operand2Shifted",
                "iVar3": "difference",
                "uVar4": "temp",
                "iVar5": "tempDifference",
                "uVar6": "result",
                "bVar7": "isZero",
                "bVar8": "isCarrySet",
                "bVar9": "isOverflowSet"
            },
            "calling": [
                "FUN_08004250",
                "FUN_08003618",
                "FUN_08002908",
                "FUN_08003004",
                "FUN_08004940",
                "FUN_08002e08",
                "FUN_080028bc",
                "FUN_08001994",
                "FUN_08001f00",
                "FUN_080004fc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800919c": {
            "entrypoint": "0x0800919c",
            "current_name": "check_overflow_0800919c",
            "code": "\nuint checkOverflow_0800919c(uint input1,uint input2)\n\n{\n  bool isNegative;\n  uint doubledInput1;\n  uint doubledInput2;\n  uint combinedInput;\n  bool isZero;\n  \n  doubledInput1 = input1 * 2;\n  doubledInput2 = input2 * 2;\n  if (((int)doubledInput1 >> 0x18 == -1 || (int)doubledInput2 >> 0x18 == -1) &&\n     ((((int)doubledInput1 >> 0x18 == -1 && ((input1 & 0x7fffff) != 0)) ||\n      (((int)doubledInput2 >> 0x18 == -1 && ((input2 & 0x7fffff) != 0)))))) {\n    return 1;\n  }\n  combinedInput = doubledInput1 | input2 & 0x7fffffff;\n  isZero = combinedInput == 0;\n  if (!isZero) {\n    combinedInput = input1 ^ input2;\n    isZero = combinedInput == 0;\n  }\n  isNegative = -1 < (int)combinedInput;\n  if (isNegative) {\n    input1 = doubledInput1 + input2 * -2;\n    isZero = input1 == 0;\n  }\n  if ((isNegative && doubledInput2 <= doubledInput1) && !isZero) {\n    input1 = (int)input2 >> 0x1f;\n  }\n  if (!isNegative || doubledInput2 > doubledInput1) {\n    input1 = ~((int)input2 >> 0x1f);\n  }\n  if (!isZero) {\n    input1 = input1 | 1;\n  }\n  return input1;\n}\n\n",
            "renaming": {
                "FUN_0800919c": "check_overflow_0800919c",
                "param_1": "input1",
                "param_2": "input2",
                "uVar2": "doubledInput1",
                "uVar3": "doubledInput2",
                "uVar4": "combinedInput",
                "bVar1": "isNegative",
                "bVar5": "isZero"
            },
            "calling": [
                "FUN_08009204"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091fc": {
            "entrypoint": "0x080091fc",
            "current_name": "copy_parameters_080091fc",
            "code": "\nvoid copyParameters_080091fc(undefined4 dst,undefined4 src)\n\n{\n  FUN_08009204(src,dst);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091fc": "copy_parameters_080091fc",
                "param_1": "dst",
                "param_2": "src"
            },
            "calling": [
                "FUN_08009250",
                "FUN_08009264"
            ],
            "called": [
                "FUN_08009204"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009204": {
            "entrypoint": "0x08009204",
            "current_name": "concatenate_parameters_08009204",
            "code": "\nundefined8 concatenate_parameters_08009204(undefined4 first_param,undefined4 second_param)\n\n{\n  FUN_0800919c();\n  return CONCAT44(second_param,first_param);\n}\n\n",
            "renaming": {
                "FUN_08009204": "concatenate_parameters_08009204",
                "param_1": "first_param",
                "param_2": "second_param"
            },
            "calling": [
                "FUN_08009228",
                "FUN_080091fc",
                "FUN_08009214",
                "FUN_0800923c"
            ],
            "called": [
                "FUN_0800919c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009214": {
            "entrypoint": "0x08009214",
            "current_name": "check_if_context_initialized_08009214",
            "code": "\nbool check_if_context_initialized_08009214(void)\n\n{\n  char is_initialized;\n  \n  FUN_08009204();\n  return is_initialized != '\\0';\n}\n\n",
            "renaming": {
                "FUN_08009214": "check_if_context_initialized_08009214",
                "in_ZR": "is_initialized"
            },
            "calling": [
                "FUN_08002638",
                "FUN_08002afc",
                "FUN_080029d8",
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_08001f00"
            ],
            "called": [
                "FUN_08009204"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009228": {
            "entrypoint": "0x08009228",
            "current_name": "is_null_terminated_08009228",
            "code": "\nbool is_null_terminated_08009228(void)\n\n{\n  char input_character;\n  \n  FUN_08009204();\n  return input_character == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08009228": "is_null_terminated_08009228",
                "in_CY": "input_character"
            },
            "calling": [
                "FUN_08003826",
                "FUN_08003004",
                "FUN_08002afc",
                "FUN_080029d8",
                "FUN_080005b4",
                "FUN_08004e30"
            ],
            "called": [
                "FUN_08009204"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800923c": {
            "entrypoint": "0x0800923c",
            "current_name": "check_cy_zr_0800923c",
            "code": "\nbool check_CY_ZR_0800923c(void)\n\n{\n  undefined zero_flag;\n  undefined carry_flag;\n  \n  FUN_08009204();\n  return !(bool)carry_flag || (bool)zero_flag;\n}\n\n",
            "renaming": {
                "FUN_0800923c": "check_cy_zr_0800923c",
                "in_CY": "carry_flag",
                "in_ZR": "zero_flag"
            },
            "calling": [
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_08001f00"
            ],
            "called": [
                "FUN_08009204"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009250": {
            "entrypoint": "0x08009250",
            "current_name": "check_flags_08009250",
            "code": "\nbool check_flags_08009250(void)\n\n{\n  undefined zero_flag;\n  undefined carry_flag;\n  \n  FUN_080091fc();\n  return !(bool)carry_flag || (bool)zero_flag;\n}\n\n",
            "renaming": {
                "FUN_08009250": "check_flags_08009250",
                "in_ZR": "zero_flag",
                "in_CY": "carry_flag"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08001f00"
            ],
            "called": [
                "FUN_080091fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009264": {
            "entrypoint": "0x08009264",
            "current_name": "is_null_terminated_08009264",
            "code": "\nbool is_null_terminated_08009264(void)\n\n{\n  char input_character;\n  \n  FUN_080091fc();\n  return input_character == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08009264": "is_null_terminated_08009264",
                "in_CY": "input_character"
            },
            "calling": [
                "FUN_08003004",
                "FUN_080029d8"
            ],
            "called": [
                "FUN_080091fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009278": {
            "entrypoint": "0x08009278",
            "current_name": "decode_integer_08009278",
            "code": "\nuint decode_integer_08009278(uint input)\n\n{\n  uint shifted_bits;\n  uint shifted_bits_difference;\n  \n  if (input << 1 < 0x7f000000) {\n    return 0;\n  }\n  shifted_bits = (input << 1) >> 0x18;\n  shifted_bits_difference = 0x9e - shifted_bits;\n  if (shifted_bits < 0x9f && shifted_bits_difference != 0) {\n    shifted_bits = (input << 8 | 0x80000000) >> (shifted_bits_difference & 0xff);\n    if ((input & 0x80000000) != 0) {\n      shifted_bits = -shifted_bits;\n    }\n    return shifted_bits;\n  }\n  if ((shifted_bits_difference == 0xffffff9f) && ((input & 0x7fffff) != 0)) {\n    return 0;\n  }\n  input = input & 0x80000000;\n  if (input == 0) {\n    input = 0x7fffffff;\n  }\n  return input;\n}\n\n",
            "renaming": {
                "FUN_08009278": "decode_integer_08009278",
                "param_1": "input",
                "uVar1": "shifted_bits",
                "uVar2": "shifted_bits_difference"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_08003826"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "entry": {
            "entrypoint": "0x080092c4",
            "current_name": "entry",
            "code": "\n/* WARNING: This function may have set the stack pointer */\n\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined4 *)(iVar1 + 0x20000000) < &DAT_2000044c; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x800c0c0);\n  }\n  for (puVar2 = &DAT_2000044c; puVar2 < &DAT_20000f20; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  FUN_0800756c();\n  FUN_0800b3e8();\n  UNRECOVERED_JUMPTABLE = (code *)0x80092fa;\n  FUN_08007540();\n                    /* WARNING: Could not recover jumptable at 0x080092fa. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "renaming": {},
            "calling": [],
            "called": [
                "FUN_0800756c",
                "FUN_08007540",
                "FUN_0800b3e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009318": {
            "entrypoint": "0x08009318",
            "current_name": "convert_float_to_long_08009318",
            "code": "\nlonglong convertFloatToLong_08009318(uint intPart,uint fracPart,undefined4 param3,undefined4 param4)\n\n{\n  int result;\n  uint diff;\n  uint shift;\n  bool carry;\n  undefined8 convertedFloat;\n  longlong finalResult;\n  \n  shift = (fracPart << 1) >> 0x15;\n  diff = shift - 0x3ff;\n  if ((int)diff < 0x14) {\n    if ((int)diff < 0) {\n      convertedFloat = FUN_080082d4(intPart,fracPart,0x8800759c,0x7e37e43c,param4);\n      result = FUN_08008b60((int)convertedFloat,(int)((ulonglong)convertedFloat >> 0x20),0,0);\n      finalResult = CONCAT44(fracPart,intPart);\n      if (result != 0) {\n        if ((int)fracPart < 0) {\n          finalResult = -0x8000000000000000;\n        }\n        else if ((intPart | fracPart) == 0) {\n          finalResult = 0;\n        }\n        else {\n          finalResult = 0x3ff0000000000000;\n        }\n      }\n    }\n    else {\n      shift = 0xfffff >> (diff & 0xff);\n      finalResult = CONCAT44(fracPart,intPart);\n      if ((fracPart & shift | intPart) != 0) {\n        convertedFloat = FUN_080082d4(intPart,fracPart,0x8800759c,0x7e37e43c,param4);\n        result = FUN_08008b60((int)convertedFloat,(int)((ulonglong)convertedFloat >> 0x20),0,0);\n        finalResult = CONCAT44(fracPart,intPart);\n        if (result != 0) {\n          if (0 < (int)fracPart) {\n            fracPart = fracPart + (0x100000 >> (diff & 0xff));\n          }\n          finalResult = (ulonglong)(fracPart & ~shift) << 0x20;\n        }\n      }\n    }\n  }\n  else if ((int)diff < 0x34) {\n    shift = 0xffffffff >> (shift - 0x413 & 0xff);\n    finalResult = CONCAT44(fracPart,intPart);\n    if ((shift & intPart) != 0) {\n      convertedFloat = FUN_080082d4(intPart,fracPart,0x8800759c,0x7e37e43c,param4);\n      result = FUN_08008b60((int)convertedFloat,(int)((ulonglong)convertedFloat >> 0x20),0,0);\n      finalResult = CONCAT44(fracPart,intPart);\n      if (result != 0) {\n        if (0 < (int)fracPart) {\n          if (diff == 0x14) {\n            fracPart = fracPart + 1;\n          }\n          else {\n            diff = 1 << (0x34 - diff & 0xff);\n            carry = CARRY4(diff,intPart);\n            intPart = diff + intPart;\n            if (carry != false) {\n              fracPart = fracPart + 1;\n            }\n          }\n        }\n        finalResult = CONCAT44(fracPart,intPart & ~shift);\n      }\n    }\n  }\n  else {\n    finalResult = CONCAT44(fracPart,intPart);\n    if (diff == 0x400) {\n      finalResult = FUN_080082d4();\n    }\n  }\n  return finalResult;\n}\n\n",
            "renaming": {
                "FUN_08009318": "convert_float_to_long_08009318",
                "param_1": "intPart",
                "param_2": "fracPart",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "result",
                "uVar2": "diff",
                "uVar3": "shift",
                "bVar4": "carry",
                "uVar5": "convertedFloat",
                "lVar6": "finalResult"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08001994",
                "FUN_08002c18"
            ],
            "called": [
                "FUN_08008b60",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009410": {
            "entrypoint": "0x08009410",
            "current_name": "calculate_result_08009410",
            "code": "\nundefined4 calculateResult_08009410(undefined4 input1,uint input2)\n\n{\n  undefined4 result;\n  uint maskedInput2;\n  undefined4 var1;\n  undefined4 var2;\n  undefined4 var3;\n  undefined4 var4;\n  \n  if (0x3fe921fb < (input2 & 0x7fffffff)) {\n    if ((input2 & 0x7fffffff) < 0x7ff00000) {\n      maskedInput2 = FUN_08009d78(input1,input2,&var1);\n      maskedInput2 = maskedInput2 & 3;\n      if (maskedInput2 == 1) {\n        result = FUN_0800adf0(var1,var2,var3,var4,1);\n      }\n      else if (maskedInput2 == 2) {\n        result = FUN_0800a348(var1,var2,var3,var4);\n      }\n      else if (maskedInput2 == 0) {\n        result = FUN_0800a348(var1,var2,var3,var4);\n      }\n      else {\n        result = FUN_0800adf0(var1,var2,var3,var4,1);\n      }\n    }\n    else {\n      result = FUN_080082d0(input1,input2,input1,input2);\n    }\n    return result;\n  }\n  result = FUN_0800a348(input1,input2,0,0);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009410": "calculate_result_08009410",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "result",
                "uVar2": "maskedInput2",
                "local_28": "var1",
                "uStack_24": "var2",
                "local_20": "var3",
                "uStack_1c": "var4"
            },
            "calling": [
                "FUN_08001f00"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_0800a348",
                "FUN_08009d78",
                "FUN_0800adf0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080094c0": {
            "entrypoint": "0x080094c0",
            "current_name": "calculate_result_080094c0",
            "code": "\nlonglong calculateResult_080094c0(uint input1,uint input2,undefined4 param3,undefined4 param4)\n\n{\n  int result;\n  uint shiftCount;\n  uint bitMask;\n  bool carry;\n  undefined8 tempResult;\n  longlong finalResult;\n  \n  bitMask = (input2 << 1) >> 0x15;\n  shiftCount = bitMask - 0x3ff;\n  if ((int)shiftCount < 0x14) {\n    if ((int)shiftCount < 0) {\n      tempResult = FUN_080082d4(input1,input2,0x8800759c,0x7e37e43c,param4);\n      result = FUN_08008b60((int)tempResult,(int)((ulonglong)tempResult >> 0x20),0,0);\n      finalResult = CONCAT44(input2,input1);\n      if (result != 0) {\n        if ((int)input2 < 0) {\n          if ((input1 | input2 & 0x7fffffff) != 0) {\n            input2 = 0xbff00000;\n          }\n          finalResult = (ulonglong)input2 << 0x20;\n        }\n        else {\n          finalResult = 0;\n        }\n      }\n    }\n    else {\n      bitMask = 0xfffff >> (shiftCount & 0xff);\n      finalResult = CONCAT44(input2,input1);\n      if ((input2 & bitMask | input1) != 0) {\n        tempResult = FUN_080082d4(input1,input2,0x8800759c,0x7e37e43c,param4);\n        result = FUN_08008b60((int)tempResult,(int)((ulonglong)tempResult >> 0x20),0,0);\n        finalResult = CONCAT44(input2,input1);\n        if (result != 0) {\n          if ((int)input2 < 0) {\n            input2 = input2 + (0x100000 >> (shiftCount & 0xff));\n          }\n          finalResult = (ulonglong)(input2 & ~bitMask) << 0x20;\n        }\n      }\n    }\n  }\n  else if ((int)shiftCount < 0x34) {\n    bitMask = 0xffffffff >> (bitMask - 0x413 & 0xff);\n    finalResult = CONCAT44(input2,input1);\n    if ((bitMask & input1) != 0) {\n      tempResult = FUN_080082d4(input1,input2,0x8800759c,0x7e37e43c,param4);\n      result = FUN_08008b60((int)tempResult,(int)((ulonglong)tempResult >> 0x20),0,0);\n      finalResult = CONCAT44(input2,input1);\n      if (result != 0) {\n        if ((int)input2 < 0) {\n          if (shiftCount == 0x14) {\n            input2 = input2 + 1;\n          }\n          else {\n            shiftCount = 1 << (0x34 - shiftCount & 0xff);\n            carry = CARRY4(shiftCount,input1);\n            input1 = shiftCount + input1;\n            if (carry != false) {\n              input2 = input2 + 1;\n            }\n          }\n        }\n        finalResult = CONCAT44(input2,input1 & ~bitMask);\n      }\n    }\n  }\n  else {\n    finalResult = CONCAT44(input2,input1);\n    if (shiftCount == 0x400) {\n      finalResult = FUN_080082d4();\n    }\n  }\n  return finalResult;\n}\n\n",
            "renaming": {
                "FUN_080094c0": "calculate_result_080094c0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "result",
                "uVar2": "shiftCount",
                "uVar3": "bitMask",
                "bVar4": "carry",
                "uVar5": "tempResult",
                "lVar6": "finalResult"
            },
            "calling": [
                "FUN_0800a5a0",
                "FUN_08002408",
                "FUN_08001f00",
                "FUN_08002c18"
            ],
            "called": [
                "FUN_08008b60",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080095b8": {
            "entrypoint": "0x080095b8",
            "current_name": "calculate_signed_multiplier_080095b8",
            "code": "\nint calculateSignedMultiplier_080095b8(uint input1,uint input2)\n\n{\n  uint carryBit;\n  uint shiftedInput2;\n  uint result;\n  int multiplier;\n  uint shiftAmount;\n  \n  shiftedInput2 = (input2 << 1) >> 0x15;\n  shiftAmount = shiftedInput2 - 0x3ff;\n  if ((int)input2 < 0) {\n    multiplier = -1;\n  }\n  else {\n    multiplier = 1;\n  }\n  result = input2 & 0xfffff | 0x100000;\n  if ((int)shiftAmount < 0x14) {\n    if ((int)shiftAmount < 0) {\n      if (shiftAmount != 0xffffffff) {\n        multiplier = 0;\n      }\n      return multiplier;\n    }\n    result = result + (0x80000 >> (shiftAmount & 0xff)) >> (0x14 - shiftAmount & 0xff);\n  }\n  else {\n    if (0x1e < shiftAmount) {\n      multiplier = FUN_08008ba0();\n      return multiplier;\n    }\n    if ((int)shiftAmount < 0x34) {\n      carryBit = 0x80000000 >> (shiftedInput2 - 0x413 & 0xff);\n      if (CARRY4(carryBit,input1) != false) {\n        result = result + 1;\n      }\n      result = result << (shiftedInput2 - 0x413 & 0xff);\n      if (shiftAmount != 0x14) {\n        result = result | carryBit + input1 >> (0x34 - shiftAmount & 0xff);\n      }\n    }\n    else {\n      result = result << (shiftedInput2 - 0x413 & 0xff) | input1 << (shiftedInput2 - 0x433 & 0xff);\n    }\n  }\n  return result * multiplier;\n}\n\n",
            "renaming": {
                "FUN_080095b8": "calculate_signed_multiplier_080095b8",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "carryBit",
                "uVar2": "shiftedInput2",
                "uVar3": "result",
                "iVar4": "multiplier",
                "uVar5": "shiftAmount"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08001994"
            ],
            "called": [
                "FUN_08008ba0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009654": {
            "entrypoint": "0x08009654",
            "current_name": "convert_to_double_08009654",
            "code": "\nlonglong convertToDouble_08009654(uint integerPart,uint fractionPart)\n\n{\n  uint exponentOffset;\n  uint shiftedExp;\n  longlong result;\n  \n  result = CONCAT44(fractionPart,integerPart);\n  shiftedExp = (fractionPart << 1) >> 0x15;\n  exponentOffset = shiftedExp - 0x3ff;\n  if ((int)exponentOffset < 0x14) {\n    if ((int)exponentOffset < 0) {\n      fractionPart = fractionPart & 0x80000000;\n      if (exponentOffset == 0xffffffff) {\n        fractionPart = fractionPart | 0x3ff00000;\n      }\n      result = (ulonglong)fractionPart << 0x20;\n    }\n    else {\n      shiftedExp = 0xfffff >> (exponentOffset & 0xff);\n      result = CONCAT44(fractionPart,integerPart);\n      if ((fractionPart & shiftedExp | integerPart) != 0) {\n        result = (ulonglong)(fractionPart + (0x80000 >> (exponentOffset & 0xff)) & ~shiftedExp) << 0x20;\n      }\n    }\n  }\n  else if ((int)exponentOffset < 0x34) {\n    shiftedExp = 0xffffffff >> (shiftedExp - 0x413 & 0xff);\n    if ((integerPart & shiftedExp) != 0) {\n      exponentOffset = 1 << (0x33 - exponentOffset & 0xff);\n      if (CARRY4(integerPart,exponentOffset) != false) {\n        fractionPart = fractionPart + 1;\n      }\n      result = CONCAT44(fractionPart,integerPart + exponentOffset & ~shiftedExp);\n    }\n  }\n  else {\n    result = CONCAT44(fractionPart,integerPart);\n    if (exponentOffset == 0x400) {\n      result = FUN_080082d4();\n    }\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009654": "convert_to_double_08009654",
                "param_1": "integerPart",
                "param_2": "fractionPart",
                "uVar1": "exponentOffset",
                "uVar2": "shiftedExp",
                "lVar3": "result"
            },
            "calling": [
                "FUN_08004e30"
            ],
            "called": [
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080096e8": {
            "entrypoint": "0x080096e8",
            "current_name": "process_floating_point_number_080096e8",
            "code": "\nundefined4 processFloatingPointNumber_080096e8(undefined4 inputValue,uint flags)\n\n{\n  undefined4 returnValue;\n  uint modifiedFlags;\n  undefined4 tempVariable1;\n  undefined4 tempVariable2;\n  undefined4 tempVariable3;\n  undefined4 tempVariable4;\n  \n  if (0x3fe921fb < (flags & 0x7fffffff)) {\n    if ((flags & 0x7fffffff) < 0x7ff00000) {\n      modifiedFlags = FUN_08009d78(inputValue,flags,&tempVariable1);\n      modifiedFlags = modifiedFlags & 3;\n      if (modifiedFlags == 1) {\n        returnValue = FUN_0800a348(tempVariable1,tempVariable2,tempVariable3,tempVariable4);\n      }\n      else if (modifiedFlags == 2) {\n        returnValue = FUN_0800adf0(tempVariable1,tempVariable2,tempVariable3,tempVariable4,1);\n      }\n      else if (modifiedFlags == 0) {\n        returnValue = FUN_0800adf0(tempVariable1,tempVariable2,tempVariable3,tempVariable4,1);\n      }\n      else {\n        returnValue = FUN_0800a348(tempVariable1,tempVariable2,tempVariable3,tempVariable4);\n      }\n    }\n    else {\n      returnValue = FUN_080082d0(inputValue,flags,inputValue,flags);\n    }\n    return returnValue;\n  }\n  returnValue = FUN_0800adf0(inputValue,flags,0,0,0);\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_080096e8": "process_floating_point_number_080096e8",
                "param_1": "inputValue",
                "param_2": "flags",
                "uVar1": "returnValue",
                "uVar2": "modifiedFlags",
                "local_28": "tempVariable1",
                "uStack_24": "tempVariable2",
                "local_20": "tempVariable3",
                "uStack_1c": "tempVariable4"
            },
            "calling": [
                "FUN_08001f00"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_0800a348",
                "FUN_08009d78",
                "FUN_0800adf0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009798": {
            "entrypoint": "0x08009798",
            "current_name": "extract_bit_range_08009798",
            "code": "\nlonglong extract_bit_range_08009798(uint input_1,uint input_2,undefined4 dummy_param_1,undefined4 dummy_param_2)\n\n{\n  uint diff_shift;\n  uint shifted_input_2;\n  longlong result;\n  \n  shifted_input_2 = (input_2 << 1) >> 0x15;\n  diff_shift = shifted_input_2 - 0x3ff;\n  if ((int)diff_shift < 0x14) {\n    if ((int)diff_shift < 0) {\n      return ((unsigned_long_long)input_2 & 0x80000000) << 0x20;\n    }\n    result = (unsigned_long_long)(input_2 & ~(0xfffff >> (diff_shift & 0xff))) << 0x20;\n  }\n  else {\n    if ((int)diff_shift < 0x34) {\n      return concat_44(input_2,input_1 & ~(0xffffffffU >> (shifted_input_2 - 0x413 & 0xff)));\n    }\n    if (diff_shift != 0x400) {\n      return concat_44(input_2,input_1);\n    }\n    result = FUN_080082d4(input_1,input_2,input_1,input_2,dummy_param_2);\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009798": "extract_bit_range_08009798",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "dummy_param_1",
                "param_4": "dummy_param_2",
                "uVar1": "diff_shift",
                "uVar2": "shifted_input_2",
                "lVar3": "result",
                "ulonglong": "unsigned_long_long",
                "CONCAT44": "concat_44"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080005b4",
                "FUN_08004e30"
            ],
            "called": [
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_08009990": {
            "entrypoint": "0x08009818",
            "current_name": "calculate_result_thunk_08009990",
            "code": "\nuint calculate_result_thunk_08009990(uint input_1,uint input_2,uint input_3,uint input_4)\n\n{\n  int temp_var_1;\n  undefined4 temp_var_2;\n  uint temp_var_3;\n  uint temp_var_4;\n  uint temp_var_5;\n  undefined8 temp_var_6;\n  \n  temp_var_4 = input_4 & 0x7fffffff;\n  if (((temp_var_4 | (-input_3 | input_3) >> 0x1f) < 0x7ff00001) &&\n     (temp_var_5 = input_2 & 0x7fffffff, (temp_var_5 | (-input_1 | input_1) >> 0x1f) < 0x7ff00001)) {\n    if ((input_4 + 0xc0100000 | input_3) == 0) {\n      temp_var_4 = FUN_0800af78();\n      return temp_var_4;\n    }\n    temp_var_3 = (int)input_4 >> 0x1e & 2U | input_2 >> 0x1f;\n    if ((temp_var_5 | input_1) == 0) {\n      if (temp_var_3 == 2) {\n        input_1 = 0x54442d18;\n      }\n      else if (temp_var_3 == 3) {\n        input_1 = 0x54442d18;\n      }\n    }\n    else {\n      if ((temp_var_4 | input_3) != 0) {\n        if (temp_var_4 == 0x7ff00000) {\n          temp_var_3 = temp_var_3 - 1;\n          if (temp_var_5 == 0x7ff00000) {\n            if (temp_var_3 < 3) {\n              return *(uint *)(&DAT_0800be68 + temp_var_3 * 8);\n            }\n            return 0x54442d18;\n          }\n          if (temp_var_3 < 3) {\n            return *(uint *)(&DAT_0800be80 + temp_var_3 * 8);\n          }\n          return 0;\n        }\n        if (temp_var_5 != 0x7ff00000) {\n          temp_var_1 = (int)(temp_var_5 - temp_var_4) >> 0x14;\n          if ((int)(temp_var_5 - temp_var_4) < 0x3d00000) {\n            if (((int)input_4 < 0) && (temp_var_1 + 0x3c < 0 != SCARRY4(temp_var_1,0x3c))) {\n              temp_var_6 = 0;\n            }\n            else {\n              FUN_08008894(input_1,input_2,input_3,input_4,input_4);\n              FUNC_0800b2cc();\n              temp_var_6 = FUN_0800af78();\n            }\n          }\n          else {\n            temp_var_6 = 0x3ff921fb54442d18;\n          }\n          temp_var_2 = (undefined4)((ulonglong)temp_var_6 >> 0x20);\n          temp_var_4 = (uint)temp_var_6;\n          if (temp_var_3 == 1) {\n            return temp_var_4;\n          }\n          if (temp_var_3 == 2) {\n            temp_var_6 = FUN_080082d0(temp_var_4,temp_var_2,0x33145c07,0x3ca1a626);\n            temp_var_4 = FUN_080082d0(0x54442d18,0x400921fb,(int)temp_var_6,(int)((ulonglong)temp_var_6 >> 0x20));\n            return temp_var_4;\n          }\n          if (temp_var_3 == 0) {\n            return temp_var_4;\n          }\n          temp_var_6 = FUN_080082d0(temp_var_4,temp_var_2,0x33145c07,0x3ca1a626);\n          temp_var_4 = FUN_080082d0((int)temp_var_6,(int)((ulonglong)temp_var_6 >> 0x20),0x54442d18,0x400921fb);\n          return temp_var_4;\n        }\n      }\n      if ((int)input_2 < 0) {\n        input_1 = 0x54442d18;\n      }\n      else {\n        input_1 = 0x54442d18;\n      }\n    }\n  }\n  else {\n    input_1 = FUN_080082d4(input_3,input_4,input_1,input_2);\n  }\n  return input_1;\n}\n\n",
            "renaming": {
                "thunk_FUN_08009990": "calculate_result_thunk_08009990",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "iVar1": "temp_var_1",
                "uVar2": "temp_var_2",
                "uVar3": "temp_var_3",
                "uVar4": "temp_var_4",
                "uVar5": "temp_var_5",
                "uVar6": "temp_var_6"
            },
            "calling": [
                "FUN_08001f00"
            ],
            "called": [
                "FUN_08009990"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800981c": {
            "entrypoint": "0x0800981c",
            "current_name": "calculate_hypotenuse_0800981c",
            "code": "\nundefined8 calculate_hypotenuse_0800981c(undefined4 side1,undefined4 side2,undefined4 side3,undefined4 side4)\n\n{\n  int result;\n  undefined4 *ptr;\n  int *ptr2;\n  undefined8 returnValue;\n  undefined4 length;\n  char *functionName;\n  undefined4 param1;\n  undefined4 param2;\n  undefined4 param3;\n  undefined4 param4;\n  undefined4 minValue;\n  undefined4 maxValue;\n  int errorCode;\n  \n  returnValue = FUN_08009b24();\n  if (DAT_20000014 == -1) {\n    return returnValue;\n  }\n  errorCode = FUN_0800b2d4();\n  if (errorCode != 0) {\n    return returnValue;\n  }\n  result = FUN_0800b2d4(side1,side2);\n  if (result == 0) {\n    return returnValue;\n  }\n  result = FUN_0800b2d4(side3,side4);\n  if (result == 0) {\n    return returnValue;\n  }\n  length = 3;\n  functionName = \"hypot\";\n  param1 = side1;\n  param2 = side2;\n  param3 = side3;\n  param4 = side4;\n  if (DAT_20000014 == '\\0') {\n    minValue = 0xe0000000;\n    maxValue = 0x47efffff;\nLAB_080098aa:\n    result = FUN_0800b2e0(&length);\n    if (result != 0) goto LAB_08009896;\n  }\n  else {\n    minValue = 0;\n    maxValue = 0x7ff00000;\n    if (DAT_20000014 != '\\x02') goto LAB_080098aa;\n  }\n  ptr = (undefined4 *)FUN_0800b3dc();\n  *ptr = 0x22;\nLAB_08009896:\n  returnValue = CONCAT44(maxValue,minValue);\n  if (errorCode != 0) {\n    ptr2 = (int *)FUN_0800b3dc();\n    returnValue = CONCAT44(maxValue,minValue);\n    *ptr2 = errorCode;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_0800981c": "calculate_hypotenuse_0800981c",
                "param_1": "side1",
                "param_2": "side2",
                "param_3": "side3",
                "param_4": "side4",
                "iVar1": "result",
                "puVar2": "ptr",
                "piVar3": "ptr2",
                "uVar4": "returnValue",
                "local_50": "length",
                "pcStack_4c": "functionName",
                "local_48": "param1",
                "uStack_44": "param2",
                "local_40": "param3",
                "uStack_3c": "param4",
                "local_38": "minValue",
                "uStack_34": "maxValue",
                "local_30": "errorCode"
            },
            "calling": [
                "FUN_080005b4",
                "FUN_08001f00"
            ],
            "called": [
                "FUN_0800b2d4",
                "FUN_0800b3dc",
                "FUN_0800b2e0",
                "FUN_08009b24"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080098d0": {
            "entrypoint": "0x080098d0",
            "current_name": "validate_and_process_data_080098d0",
            "code": "\nundefined4 validate_and_process_data_080098d0(undefined4 input_param_1,undefined4 input_param_2)\n\n{\n  char flag;\n  undefined4 result;\n  int check_val;\n  undefined4 *ptr_data;\n  int *ptr_result;\n  undefined4 initialized_flag;\n  undefined *data_ptr;\n  undefined4 input_param_1_copy;\n  undefined4 input_param_2_copy;\n  undefined4 temp_param_1;\n  undefined4 temp_param_2;\n  undefined8 output_variable;\n  int data_value;\n  \n  result = FUN_0800a1bc();\n  flag = DAT_20000014;\n  if (((DAT_20000014 == -1) ||\n      (data_value = FUN_08008b74(input_param_1,input_param_2,input_param_1,input_param_2), data_value != 0)) ||\n     (check_val = FUN_08008b24(input_param_1,input_param_2,0,0), check_val == 0)) {\n    return result;\n  }\n  initialized_flag = 1;\n  data_ptr = &DAT_0800be5c;\n  input_param_1_copy = input_param_1;\n  input_param_2_copy = input_param_2;\n  temp_param_1 = input_param_1;\n  temp_param_2 = input_param_2;\n  if (flag == '\\0') {\n    output_variable = 0;\nLAB_0800996c:\n    check_val = FUN_0800b2e0(&initialized_flag);\n    if (check_val != 0) goto joined_r0x0800997a;\n  }\n  else {\n    output_variable = FUN_08008894(0,0,0,0);\n    if (flag != '\\x02') goto LAB_0800996c;\n  }\n  ptr_data = (undefined4 *)FUN_0800b3dc();\n  *ptr_data = 0x21;\njoined_r0x0800997a:\n  if (data_value != 0) {\n    ptr_result = (int *)FUN_0800b3dc();\n    *ptr_result = data_value;\n  }\n  return (undefined4)output_variable;\n}\n\n",
            "renaming": {
                "FUN_080098d0": "validate_and_process_data_080098d0",
                "param_1": "input_param_1",
                "param_2": "input_param_2",
                "cVar1": "flag",
                "uVar2": "result",
                "iVar3": "check_val",
                "puVar4": "ptr_data",
                "piVar5": "ptr_result",
                "local_50": "initialized_flag",
                "local_4c": "data_ptr",
                "local_48": "input_param_1_copy",
                "uStack_44": "input_param_2_copy",
                "local_40": "temp_param_1",
                "uStack_3c": "temp_param_2",
                "local_38": "output_variable",
                "local_30": "data_value"
            },
            "calling": [
                "FUN_08003004",
                "FUN_080005b4",
                "FUN_08002978",
                "FUN_08001994"
            ],
            "called": [
                "FUN_08008b24",
                "FUN_0800b3dc",
                "FUN_0800a1bc",
                "FUN_0800b2e0",
                "FUN_08008894",
                "FUN_08008b74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009990": {
            "entrypoint": "0x08009990",
            "current_name": "calculate_float_08009990",
            "code": "\nuint calculateFloat_08009990(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int tempVar1;\n  undefined4 tempVar2;\n  uint tempVar3;\n  uint tempVar4;\n  uint tempVar5;\n  undefined8 tempVar6;\n  \n  tempVar4 = input4 & 0x7fffffff;\n  if (((tempVar4 | (-input3 | input3) >> 0x1f) < 0x7ff00001) &&\n     (tempVar5 = input2 & 0x7fffffff, (tempVar5 | (-input1 | input1) >> 0x1f) < 0x7ff00001)) {\n    if ((input4 + 0xc0100000 | input3) == 0) {\n      tempVar4 = FUN_0800af78();\n      return tempVar4;\n    }\n    tempVar3 = (int)input4 >> 0x1e & 2U | input2 >> 0x1f;\n    if ((tempVar5 | input1) == 0) {\n      if (tempVar3 == 2) {\n        input1 = 0x54442d18;\n      }\n      else if (tempVar3 == 3) {\n        input1 = 0x54442d18;\n      }\n    }\n    else {\n      if ((tempVar4 | input3) != 0) {\n        if (tempVar4 == 0x7ff00000) {\n          tempVar3 = tempVar3 - 1;\n          if (tempVar5 == 0x7ff00000) {\n            if (tempVar3 < 3) {\n              return *(uint *)(&DAT_0800be68 + tempVar3 * 8);\n            }\n            return 0x54442d18;\n          }\n          if (tempVar3 < 3) {\n            return *(uint *)(&DAT_0800be80 + tempVar3 * 8);\n          }\n          return 0;\n        }\n        if (tempVar5 != 0x7ff00000) {\n          tempVar1 = (int)(tempVar5 - tempVar4) >> 0x14;\n          if ((int)(tempVar5 - tempVar4) < 0x3d00000) {\n            if (((int)input4 < 0) && (tempVar1 + 0x3c < 0 != SCARRY4(tempVar1,0x3c))) {\n              tempVar6 = 0;\n            }\n            else {\n              FUN_08008894(input1,input2,input3,input4,input4);\n              FUNC_0800b2cc();\n              tempVar6 = FUN_0800af78();\n            }\n          }\n          else {\n            tempVar6 = 0x3ff921fb54442d18;\n          }\n          tempVar2 = (undefined4)((ulonglong)tempVar6 >> 0x20);\n          tempVar4 = (uint)tempVar6;\n          if (tempVar3 == 1) {\n            return tempVar4;\n          }\n          if (tempVar3 == 2) {\n            tempVar6 = FUN_080082d0(tempVar4,tempVar2,0x33145c07,0x3ca1a626);\n            tempVar4 = FUN_080082d0(0x54442d18,0x400921fb,(int)tempVar6,(int)((ulonglong)tempVar6 >> 0x20));\n            return tempVar4;\n          }\n          if (tempVar3 == 0) {\n            return tempVar4;\n          }\n          tempVar6 = FUN_080082d0(tempVar4,tempVar2,0x33145c07,0x3ca1a626);\n          tempVar4 = FUN_080082d0((int)tempVar6,(int)((ulonglong)tempVar6 >> 0x20),0x54442d18,0x400921fb);\n          return tempVar4;\n        }\n      }\n      if ((int)input2 < 0) {\n        input1 = 0x54442d18;\n      }\n      else {\n        input1 = 0x54442d18;\n      }\n    }\n  }\n  else {\n    input1 = FUN_080082d4(input3,input4,input1,input2);\n  }\n  return input1;\n}\n\n",
            "renaming": {
                "FUN_08009990": "calculate_float_08009990",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "tempVar1",
                "uVar2": "tempVar2",
                "uVar3": "tempVar3",
                "uVar4": "tempVar4",
                "uVar5": "tempVar5",
                "uVar6": "tempVar6"
            },
            "calling": [
                "thunk_FUN_08009990"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_0800b2cc",
                "FUN_08008894",
                "FUN_0800af78",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009b24": {
            "entrypoint": "0x08009b24",
            "current_name": "calculate_final_value_08009b24",
            "code": "\nuint calculate_final_value_08009b24(uint value_1,uint value_2,uint value_3,uint value_4)\n\n{\n  undefined4 result;\n  int comparison_result;\n  uint final_value;\n  int signed_result;\n  undefined4 temp1;\n  int tempvar1;\n  uint temp2;\n  undefined4 concatenated_result1;\n  undefined4 concatenated_result2;\n  undefined8 final_result1;\n  undefined8 final_result2;\n  undefined8 temp_result1;\n  undefined8 temp_result2;\n  int modifier;\n  \n  value_2 = value_2 & 0x7fffffff;\n  value_4 = value_4 & 0x7fffffff;\n  final_value = value_1;\n  temp2 = value_2;\n  if (value_2 < value_4) {\n    final_value = value_3;\n    value_3 = value_1;\n    temp2 = value_4;\n    value_4 = value_2;\n  }\n  if (0x3c00000 < (int)(temp2 - value_4)) {\n    final_value = FUN_080082d4(final_value,temp2,value_3,value_4);\n    return final_value;\n  }\n  if (temp2 < 0x5f300001) {\n    modifier = 0;\n  }\n  else {\n    if (0x7fefffff < temp2) {\n      if ((temp2 & 0xfffff | final_value) != 0) {\n        final_value = FUN_080082d4(final_value,temp2,value_3,value_4);\n      }\n      if ((value_4 ^ 0x7ff00000 | value_3) != 0) {\n        return final_value;\n      }\n      return value_3;\n    }\n    temp2 = temp2 + 0xda800000;\n    value_4 = value_4 + 0xda800000;\n    modifier = 600;\n  }\n  final_result2 = CONCAT44(temp2,final_value);\n  final_result1 = CONCAT44(value_4,value_3);\n  if ((int)value_4 < 0x20b00000) {\n    if ((int)value_4 < 0x100000) {\n      if ((value_4 | value_3) == 0) {\n        return final_value;\n      }\n      final_result1 = FUN_08008640(value_3,value_4,0,0x7fd00000);\n      final_result2 = FUN_08008640(final_value,temp2,0,0x7fd00000);\n      modifier = modifier + -0x3fe;\n    }\n    else {\n      temp2 = temp2 + 0x25800000;\n      final_result2 = CONCAT44(temp2,final_value);\n      value_4 = value_4 + 0x25800000;\n      final_result1 = CONCAT44(value_4,value_3);\n      modifier = modifier + -600;\n    }\n  }\n  concatenated_result2 = (undefined4)((ulonglong)final_result2 >> 0x20);\n  concatenated_result1 = (undefined4)final_result2;\n  tempvar1 = (int)((ulonglong)final_result1 >> 0x20);\n  temp1 = (undefined4)final_result1;\n  final_result1 = FUN_080082d0(concatenated_result1,concatenated_result2,temp1,tempvar1);\n  signed_result = (int)((ulonglong)final_result1 >> 0x20);\n  result = (undefined4)final_result1;\n  comparison_result = FUN_08008b24(temp1,tempvar1,result,signed_result);\n  if (comparison_result == 0) {\n    final_result1 = FUN_08008640(0,value_4,0);\n    final_result2 = FUN_08008640(result,signed_result + -0x80000000,result,signed_result);\n    temp_result1 = FUN_080082d4(concatenated_result1,concatenated_result2,concatenated_result1,concatenated_result2);\n    temp_result1 = FUN_080082d0((int)temp_result1,(int)((ulonglong)temp_result1 >> 0x20),0,temp2 + 0x100000);\n    temp_result1 = FUN_08008640((int)temp_result1,(int)((ulonglong)temp_result1 >> 0x20),temp1,tempvar1);\n    temp_result2 = FUN_080082d0(temp1,tempvar1,0,value_4);\n    temp_result2 = FUN_08008640((int)temp_result2,(int)((ulonglong)temp_result2 >> 0x20),0,temp2 + 0x100000);\n    temp_result1 = FUN_080082d4((int)temp_result1,(int)((ulonglong)temp_result1 >> 0x20),(int)temp_result2,\n                          (int)((ulonglong)temp_result2 >> 0x20));\n    final_result2 = FUN_080082d0((int)final_result2,(int)((ulonglong)final_result2 >> 0x20),(int)temp_result1,\n                          (int)((ulonglong)temp_result1 >> 0x20));\n    FUN_080082d0((int)final_result1,(int)((ulonglong)final_result1 >> 0x20),(int)final_result2,\n                 (int)((ulonglong)final_result2 >> 0x20));\n    final_result1 = FUN_0800a1bc();\n  }\n  else {\n    final_result1 = FUN_08008640(0,temp2,0,temp2);\n    final_result2 = FUN_08008640(temp1,tempvar1 + -0x80000000,temp1,tempvar1);\n    temp_result1 = FUN_080082d4(concatenated_result1,concatenated_result2,0,temp2);\n    temp_result2 = FUN_080082d0(concatenated_result1,concatenated_result2,0,temp2);\n    temp_result1 = FUN_08008640((int)temp_result1,(int)((ulonglong)temp_result1 >> 0x20),(int)temp_result2,\n                          (int)((ulonglong)temp_result2 >> 0x20));\n    final_result2 = FUN_080082d0((int)final_result2,(int)((ulonglong)final_result2 >> 0x20),(int)temp_result1,\n                          (int)((ulonglong)temp_result1 >> 0x20));\n    FUN_080082d0((int)final_result1,(int)((ulonglong)final_result1 >> 0x20),(int)final_result2,\n                 (int)((ulonglong)final_result2 >> 0x20));\n    final_result1 = FUN_0800a1bc();\n  }\n  final_value = (uint)final_result1;\n  if (modifier != 0) {\n    final_value = FUN_08008640(final_value,(int)((ulonglong)final_result1 >> 0x20),0,modifier * 0x100000 + 0x3ff00000);\n  }\n  return final_value;\n}\n\n",
            "renaming": {
                "FUN_08009b24": "calculate_final_value_08009b24",
                "param_1": "value_1",
                "param_2": "value_2",
                "param_3": "value_3",
                "param_4": "value_4",
                "uVar1": "result",
                "iVar2": "comparison_result",
                "uVar3": "final_value",
                "iVar4": "signed_result",
                "uVar5": "temp1",
                "iVar6": "tempvar1",
                "uVar7": "temp2",
                "uVar8": "concatenated_result1",
                "uVar9": "concatenated_result2",
                "uVar10": "final_result1",
                "uVar11": "final_result2",
                "uVar12": "temp_result1",
                "uVar13": "temp_result2",
                "local_3c": "modifier"
            },
            "calling": [
                "FUN_0800981c"
            ],
            "called": [
                "FUN_08008b24",
                "FUN_080082d0",
                "FUN_0800a1bc",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009d78": {
            "entrypoint": "0x08009d78",
            "current_name": "calculate_results_08009d78",
            "code": "\nint calculate_results_08009d78(undefined4 input_value,uint flag,undefined8 *output_values)\n\n{\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  undefined4 temp4;\n  undefined4 temp5;\n  undefined4 temp6;\n  undefined4 temp7;\n  uint masked_flag;\n  int result;\n  undefined8 temp8;\n  undefined8 temp9;\n  undefined8 temp10;\n  undefined4 local_temp1;\n  undefined4 local_temp2;\n  undefined8 local_value1;\n  undefined8 local_value2;\n  undefined8 local_value3;\n  \n  masked_flag = flag & 0x7fffffff;\n  if (masked_flag < 0x3fe921fc) {\n    *(undefined4 *)output_values = input_value;\n    *(uint *)((int)output_values + 4) = flag;\n    *(undefined4 *)(output_values + 1) = 0;\n    *(undefined4 *)((int)output_values + 0xc) = 0;\n    return 0;\n  }\n  if (masked_flag < 0x4002d97c) {\n    if ((int)flag < 1) {\n      temp8 = FUN_080082d4(input_value,flag,0x54400000,0x3ff921fb);\n      temp3 = (undefined4)((ulonglong)temp8 >> 0x20);\n      temp1 = (undefined4)temp8;\n      if (masked_flag != 0x3ff921fb) {\n        temp8 = FUN_080082d4(temp1,temp3,0x1a626331,0x3dd0b461);\n        *output_values = temp8;\n        temp8 = FUN_080082d0(temp1,temp3);\n        temp8 = FUN_080082d4((int)temp8,(int)((ulonglong)temp8 >> 0x20),0x1a626331,0x3dd0b461);\n        output_values[1] = temp8;\n        return -1;\n      }\n      temp8 = FUN_080082d4(temp1,temp3,0x1a600000,0x3dd0b461);\n      temp1 = (undefined4)((ulonglong)temp8 >> 0x20);\n      temp9 = FUN_080082d4((int)temp8,temp1,0x2e037073,0x3ba3198a);\n      *output_values = temp9;\n      temp8 = FUN_080082d0((int)temp8,temp1);\n      temp8 = FUN_080082d4((int)temp8,(int)((ulonglong)temp8 >> 0x20),0x2e037073,0x3ba3198a);\n      output_values[1] = temp8;\n      return -1;\n    }\n    temp8 = FUN_080082d0();\n    temp3 = (undefined4)((ulonglong)temp8 >> 0x20);\n    temp1 = (undefined4)temp8;\n    if (masked_flag != 0x3ff921fb) {\n      temp8 = FUN_080082d0(temp1,temp3,0x1a626331,0x3dd0b461);\n      *output_values = temp8;\n      temp8 = FUN_080082d0(temp1,temp3);\n      temp8 = FUN_080082d0((int)temp8,(int)((ulonglong)temp8 >> 0x20),0x1a626331,0x3dd0b461);\n      output_values[1] = temp8;\n      return 1;\n    }\n    temp8 = FUN_080082d0(temp1,temp3,0x1a600000,0x3dd0b461);\n    temp1 = (undefined4)((ulonglong)temp8 >> 0x20);\n    temp9 = FUN_080082d0((int)temp8,temp1,0x2e037073,0x3ba3198a);\n    *output_values = temp9;\n    temp8 = FUN_080082d0((int)temp8,temp1);\n    temp8 = FUN_080082d0((int)temp8,(int)((ulonglong)temp8 >> 0x20),0x2e037073,0x3ba3198a);\n    output_values[1] = temp8;\n    return 1;\n  }\n  if (0x413921fb < masked_flag) {\n    if (0x7fefffff < masked_flag) {\n      temp8 = FUN_080082d0(input_value,flag,input_value,flag);\n      output_values[1] = temp8;\n      *output_values = temp8;\n      return 0;\n    }\n    result = ((int)masked_flag >> 0x14) + -0x416;\n    FUN_08008ba0();\n    local_value1 = FUN_0800856c();\n    temp8 = FUN_080082d0(input_value,masked_flag + result * -0x100000,(int)local_value1,\n                          (int)((ulonglong)local_value1 >> 0x20));\n    temp8 = FUN_08008640((int)temp8,(int)((ulonglong)temp8 >> 0x20),0,0x41700000);\n    FUN_08008ba0();\n    local_value2 = FUN_0800856c();\n    temp8 = FUN_080082d0((int)temp8,(int)((ulonglong)temp8 >> 0x20));\n    local_value3 = FUN_08008640((int)temp8,(int)((ulonglong)temp8 >> 0x20),0,0x41700000);\n    FUN_08008b10((int)local_value3,(int)((ulonglong)local_value3 >> 0x20),0,0);\n    result = FUN_0800a5a0(&local_value1,output_values,result);\n    if (-1 < (int)flag) {\n      return result;\n    }\n    *(int *)((int)output_values + 4) = *(int *)((int)output_values + 4) + -0x80000000;\n    *(int *)((int)output_values + 0xc) = *(int *)((int)output_values + 0xc) + -0x80000000;\n    return -result;\n  }\n  temp8 = FUNC_0800b2cc();\n  temp3 = (undefined4)((ulonglong)temp8 >> 0x20);\n  temp9 = FUN_08008640((int)temp8,temp3,0x6dc9c883,0x3fe45f30);\n  FUN_080082d4((int)temp9,(int)((ulonglong)temp9 >> 0x20),0,0x3fe00000);\n  result = FUN_08008ba0();\n  temp9 = FUN_0800856c();\n  temp4 = (undefined4)((ulonglong)temp9 >> 0x20);\n  temp1 = (undefined4)temp9;\n  temp9 = FUN_08008640(temp1,temp4,0x54400000,0x3ff921fb);\n  temp8 = FUN_080082d0((int)temp8,temp3,(int)temp9,(int)((ulonglong)temp9 >> 0x20));\n  temp5 = (undefined4)((ulonglong)temp8 >> 0x20);\n  temp3 = (undefined4)temp8;\n  temp9 = FUN_08008640(temp1,temp4,0x1a626331,0x3dd0b461);\n  if ((0x1f < result) || (*(uint *)(&DAT_0800be98 + (result + -1) * 4) == masked_flag)) {\n    temp10 = FUN_080082d0(temp3,temp5,(int)temp9,(int)((ulonglong)temp9 >> 0x20));\n    if ((int)((masked_flag >> 0x14) - ((uint)((int)((ulonglong)temp10 >> 0x20) << 1) >> 0x15)) < 0x11)\n    goto LAB_0800a0ce;\n    temp9 = FUN_08008640(temp1,temp4,0x1a600000,0x3dd0b461);\n    temp6 = (undefined4)((ulonglong)temp9 >> 0x20);\n    temp8 = FUN_080082d0(temp3,temp5,(int)temp9,temp6);\n    temp7 = (undefined4)((ulonglong)temp8 >> 0x20);\n    temp2 = (undefined4)temp8;\n    temp10 = FUN_080082d0(temp3,temp5,temp2,temp7);\n    temp9 = FUN_080082d0((int)temp10,(int)((ulonglong)temp10 >> 0x20),(int)temp9,temp6);\n    temp10 = FUN_08008640(temp1,temp4,0x2e037073,0x3ba3198a);\n    temp9 = FUN_080082d0((int)temp10,(int)((ulonglong)temp10 >> 0x20),(int)temp9,\n                          (int)((ulonglong)temp9 >> 0x20));\n    temp10 = FUN_080082d0(temp2,temp7,(int)temp9,(int)((ulonglong)temp9 >> 0x20));\n    if ((int)(((int)masked_flag >> 0x14) - ((uint)((int)((ulonglong)temp10 >> 0x20) << 1) >> 0x15)) < 0x32\n       ) goto LAB_0800a0ce;\n    temp9 = FUN_08008640(temp1,temp4,0x2e000000,0x3ba3198a);\n    temp3 = (undefined4)((ulonglong)temp9 >> 0x20);\n    temp8 = FUN_080082d0(temp2,temp7,(int)temp9,temp3);\n    temp10 = FUN_080082d0(temp2,temp7);\n    temp9 = FUN_080082d0((int)temp10,(int)((ulonglong)temp10 >> 0x20),(int)temp9,temp3);\n    temp10 = FUN_08008640(temp1,temp4,0x252049c1,0x397b839a);\n    temp9 = FUN_080082d0((int)temp10,(int)((ulonglong)temp10 >> 0x20),(int)temp9,\n                          (int)((ulonglong)temp9 >> 0x20));\n  }\n  temp10 = FUN_080082d0((int)temp8,(int)((ulonglong)temp8 >> 0x20),(int)temp9,\n                        (int)((ulonglong)temp9 >> 0x20));\nLAB_0800a0ce:\n  local_temp2 = (undefined4)((ulonglong)temp8 >> 0x20);\n  local_temp1 = (undefined4)temp8;\n  *output_values = temp10;\n  temp8 = FUN_080082d0(local_temp1,local_temp2);\n  temp8 = FUN_080082d0((int)temp8,(int)((ulonglong)temp8 >> 0x20),(int)temp9,\n                        (int)((ulonglong)temp9 >> 0x20));\n  output_values[1] = temp8;\n  if ((int)flag < 0) {\n    *(int *)output_values = (int)temp10;\n    *(int *)((int)output_values + 4) = (int)((ulonglong)temp10 >> 0x20) + -0x80000000;\n    *(int *)(output_values + 1) = (int)temp8;\n    *(int *)((int)output_values + 0xc) = (int)((ulonglong)temp8 >> 0x20) + -0x80000000;\n    result = -result;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009d78": "calculate_results_08009d78",
                "param_1": "input_value",
                "param_2": "flag",
                "param_3": "output_values",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "uVar3": "temp3",
                "uVar4": "temp4",
                "uVar5": "temp5",
                "uVar6": "temp6",
                "uVar7": "temp7",
                "uVar8": "masked_flag",
                "iVar9": "result",
                "uVar10": "temp8",
                "uVar11": "temp9",
                "uVar12": "temp10",
                "local_50": "local_temp1",
                "uStack_4c": "local_temp2",
                "local_40": "local_value1",
                "local_38": "local_value2",
                "local_30": "local_value3"
            },
            "calling": [
                "FUN_080096e8",
                "FUN_08009410"
            ],
            "called": [
                "FUN_08008b10",
                "FUN_080082d0",
                "FUN_0800b2cc",
                "FUN_0800856c",
                "FUN_0800a5a0",
                "FUN_08008ba0",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a1bc": {
            "entrypoint": "0x0800a1bc",
            "current_name": "calculate_modified_value_0800a1bc",
            "code": "\nuint calculateModifiedValue_0800a1bc(uint inputValue,uint maskValue)\n\n{\n  uint shiftedValue;\n  int iterationCount;\n  uint tempValue;\n  undefined4 highBits;\n  uint shift;\n  uint shiftMask;\n  uint result;\n  uint remainingBits;\n  uint tempMask;\n  int innerLoopCount;\n  uint checkValue;\n  uint count;\n  undefined8 returnValue;\n  \n  if ((~maskValue & 0x7ff00000) == 0) {\n    returnValue = FUN_08008640(inputValue,maskValue,inputValue,maskValue);\n    result = FUN_080082d4((int)returnValue,(int)((ulonglong)returnValue >> 0x20),inputValue,maskValue);\n    return result;\n  }\n  if ((int)maskValue < 1) {\n    if ((maskValue & 0x7fffffff | inputValue) == 0) {\n      return inputValue;\n    }\n    if (maskValue != 0) {\n      returnValue = FUN_080082d0(inputValue,maskValue,inputValue);\n      highBits = (undefined4)((ulonglong)returnValue >> 0x20);\n      result = FUN_08008894((int)returnValue,highBits,(int)returnValue,highBits);\n      return result;\n    }\n    do {\n      tempMask = inputValue;\n      result = tempMask >> 0xb;\n      maskValue = maskValue - 0x15;\n      inputValue = tempMask << 0x15;\n    } while (result == 0);\n    shiftedValue = maskValue;\n    if (-1 < (int)tempMask) goto LAB_0800a290;\n    count = 0x20;\n    shift = 0xffffffff;\n    tempMask = inputValue;\n  }\n  else {\n    shiftedValue = (int)maskValue >> 0x14;\n    result = maskValue;\n    tempMask = inputValue;\n    if (shiftedValue != 0) goto LAB_0800a1da;\nLAB_0800a290:\n    tempMask = 0;\n    count = result;\n    do {\n      shift = tempMask;\n      result = count << 1;\n      innerLoopCount = count << 0xc;\n      tempMask = shift + 1;\n      count = result;\n    } while (-1 < innerLoopCount);\n    count = 0x20 - tempMask;\n    maskValue = shiftedValue;\n    tempMask = inputValue << (tempMask & 0xff);\n  }\n  result = inputValue >> (count & 0xff) | result;\n  shiftedValue = maskValue - shift;\nLAB_0800a1da:\n  result = result & 0xfffff | 0x100000;\n  if (-1 < (int)(shiftedValue << 0x1f)) {\n    result = result * 2 - ((int)tempMask >> 0x1f);\n    tempMask = tempMask << 1;\n  }\n  count = 0;\n  result = result * 2 - ((int)tempMask >> 0x1f);\n  tempMask = tempMask << 1;\n  shiftedValue = 0;\n  innerLoopCount = 0x16;\n  shift = 0x200000;\n  do {\n    iterationCount = shiftedValue + shift;\n    if (iterationCount <= (int)result) {\n      result = result - iterationCount;\n      shiftedValue = iterationCount + shift;\n      count = count + shift;\n    }\n    innerLoopCount = innerLoopCount + -1;\n    result = result * 2 - ((int)tempMask >> 0x1f);\n    shift = shift >> 1;\n    tempMask = tempMask << 1;\n  } while (innerLoopCount != 0);\n  iterationCount = 0x20;\n  shiftMask = 0x80000000;\n  innerLoopCount = 0;\n  shift = 0;\n  do {\n    tempValue = shiftMask + innerLoopCount;\n    checkValue = shiftedValue;\n    if ((int)shiftedValue < (int)result) {\n      if ((int)tempValue < 0) {\nLAB_0800a26a:\n        if (-1 < (int)(tempValue + shiftMask)) {\n          checkValue = shiftedValue + 1;\n        }\n      }\n      remainingBits = result - shiftedValue;\n      shiftedValue = checkValue;\n      if (tempMask < tempValue) {\n        remainingBits = remainingBits - 1;\n      }\nLAB_0800a262:\n      innerLoopCount = tempValue + shiftMask;\n      tempMask = tempMask - tempValue;\n      shift = shift + shiftMask;\n      result = remainingBits;\n    }\n    else if ((result == shiftedValue) && (tempValue <= tempMask)) {\n      if ((int)tempValue < 0) goto LAB_0800a26a;\n      remainingBits = 0;\n      shiftedValue = result;\n      goto LAB_0800a262;\n    }\n    iterationCount = iterationCount + -1;\n    shiftMask = shiftMask >> 1;\n    result = result * 2 - ((int)tempMask >> 0x1f);\n    tempMask = tempMask << 1;\n    if (iterationCount == 0) {\n      if ((result | tempMask) == 0) {\n        shift = shift >> 1;\n      }\n      else if (shift == 0xffffffff) {\n        count = count + 1;\n        shift = 0;\n      }\n      else {\n        shift = shift + 1 >> 1;\n      }\n      if ((count & 1) != 0) {\n        shift = shift | 0x80000000;\n      }\n      return shift;\n    }\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_0800a1bc": "calculate_modified_value_0800a1bc",
                "param_1": "inputValue",
                "param_2": "maskValue",
                "uVar1": "shiftedValue",
                "iVar2": "iterationCount",
                "uVar3": "tempValue",
                "uVar4": "highBits",
                "uVar5": "shift",
                "uVar6": "shiftMask",
                "uVar7": "result",
                "uVar8": "remainingBits",
                "uVar9": "tempMask",
                "iVar10": "innerLoopCount",
                "uVar11": "checkValue",
                "uVar12": "count",
                "uVar13": "returnValue"
            },
            "calling": [
                "FUN_080098d0",
                "FUN_08009b24"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_08008894",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a348": {
            "entrypoint": "0x0800a348",
            "current_name": "calculate_result_0800a348",
            "code": "\nundefined4 calculate_result_0800a348(undefined4 input_1,uint input_2,undefined4 input_3,undefined4 input_4)\n\n{\n  int result;\n  undefined4 var1;\n  undefined4 var2;\n  uint var3;\n  undefined8 var4;\n  undefined8 var5;\n  undefined8 var6;\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  undefined4 temp4;\n  \n  var3 = input_2 & 0x7fffffff;\n  if (var3 < 0x3e400000) {\n    result = FUN_08008ba0();\n    if (result == 0) {\n      return 0;\n    }\n    var4 = FUN_08008640(input_1,input_2,input_1,input_2);\n    var2 = (undefined4)((ulonglong)var4 >> 0x20);\n    var1 = (undefined4)var4;\n    var5 = FUN_08008640(var1,var2,0xbe8838d4,0xbda8fae9);\n    var5 = FUN_080082d4((int)var5,(int)((ulonglong)var5 >> 0x20),0xbdb4b1c4,0x3e21ee9e);\n    var5 = FUN_08008640((int)var5,(int)((ulonglong)var5 >> 0x20),var1,var2);\n    var5 = FUN_080082d0((int)var5,(int)((ulonglong)var5 >> 0x20),0x809c52ad,0x3e927e4f);\n    var5 = FUN_08008640((int)var5,(int)((ulonglong)var5 >> 0x20),var1,var2);\n    var5 = FUN_080082d4((int)var5,(int)((ulonglong)var5 >> 0x20),0x19cb1590,0x3efa01a0);\n    var5 = FUN_08008640((int)var5,(int)((ulonglong)var5 >> 0x20),var1,var2);\n    var5 = FUN_080082d0((int)var5,(int)((ulonglong)var5 >> 0x20),0x16c15177,0x3f56c16c);\n    var5 = FUN_08008640((int)var5,(int)((ulonglong)var5 >> 0x20),var1,var2);\n    var5 = FUN_080082d4((int)var5,(int)((ulonglong)var5 >> 0x20),0x5555554c,0x3fa55555);\n    var5 = FUN_08008640((int)var5,(int)((ulonglong)var5 >> 0x20),var1,var2);\n  }\n  else {\n    var4 = FUN_08008640(input_1,input_2,input_1,input_2);\n    var2 = (undefined4)((ulonglong)var4 >> 0x20);\n    var1 = (undefined4)var4;\n    var5 = FUN_08008640(var1,var2,0xbe8838d4,0xbda8fae9);\n    var5 = FUN_080082d4((int)var5,(int)((ulonglong)var5 >> 0x20),0xbdb4b1c4,0x3e21ee9e);\n    var5 = FUN_08008640((int)var5,(int)((ulonglong)var5 >> 0x20),var1,var2);\n    var5 = FUN_080082d0((int)var5,(int)((ulonglong)var5 >> 0x20),0x809c52ad,0x3e927e4f);\n    var5 = FUN_08008640((int)var5,(int)((ulonglong)var5 >> 0x20),var1,var2);\n    var5 = FUN_080082d4((int)var5,(int)((ulonglong)var5 >> 0x20),0x19cb1590,0x3efa01a0);\n    var5 = FUN_08008640((int)var5,(int)((ulonglong)var5 >> 0x20),var1,var2);\n    var5 = FUN_080082d0((int)var5,(int)((ulonglong)var5 >> 0x20),0x16c15177,0x3f56c16c);\n    var5 = FUN_08008640((int)var5,(int)((ulonglong)var5 >> 0x20),var1,var2);\n    var5 = FUN_080082d4((int)var5,(int)((ulonglong)var5 >> 0x20),0x5555554c,0x3fa55555);\n    var5 = FUN_08008640((int)var5,(int)((ulonglong)var5 >> 0x20),var1,var2);\n    if (0x3fd33332 < var3) {\n      if (var3 < 0x3fe90001) {\n        result = var3 - 0x200000;\n        var4 = FUN_080082d0(0,0x3ff00000,0,result);\n      }\n      else {\n        result = 0x3fd20000;\n        var4 = 0x3fe7000000000000;\n      }\n      temp4 = (undefined4)((ulonglong)var4 >> 0x20);\n      temp3 = (undefined4)var4;\n      var4 = FUN_08008640(var1,var2,0,0x3fe00000);\n      var4 = FUN_080082d0((int)var4,(int)((ulonglong)var4 >> 0x20),0,result);\n      var5 = FUN_08008640(var1,var2,(int)var5,(int)((ulonglong)var5 >> 0x20));\n      var6 = FUN_08008640(input_1,input_2,input_3,input_4);\n      var5 = FUN_080082d0((int)var5,(int)((ulonglong)var5 >> 0x20),(int)var6,\n                           (int)((ulonglong)var6 >> 0x20));\n      var4 = FUN_080082d0((int)var4,(int)((ulonglong)var4 >> 0x20),(int)var5,\n                           (int)((ulonglong)var5 >> 0x20));\n      var1 = FUN_080082d0(temp3,temp4,(int)var4,(int)((ulonglong)var4 >> 0x20));\n      return var1;\n    }\n  }\n  temp2 = (undefined4)((ulonglong)var5 >> 0x20);\n  temp1 = (undefined4)var5;\n  var1 = (undefined4)((ulonglong)var4 >> 0x20);\n  var5 = FUN_08008640((int)var4,var1,0,0x3fe00000);\n  var4 = FUN_08008640((int)var4,var1,temp1,temp2);\n  var6 = FUN_08008640(input_1,input_2,input_3,input_4);\n  var4 = FUN_080082d0((int)var4,(int)((ulonglong)var4 >> 0x20),(int)var6,\n                       (int)((ulonglong)var6 >> 0x20));\n  var4 = FUN_080082d0((int)var5,(int)((ulonglong)var5 >> 0x20),(int)var4,\n                       (int)((ulonglong)var4 >> 0x20));\n  var1 = FUN_080082d0(0,0x3ff00000,(int)var4,(int)((ulonglong)var4 >> 0x20));\n  return var1;\n}\n\n",
            "renaming": {
                "FUN_0800a348": "calculate_result_0800a348",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "iVar1": "result",
                "uVar2": "var1",
                "uVar3": "var2",
                "uVar4": "var3",
                "uVar5": "var4",
                "uVar6": "var5",
                "uVar7": "var6",
                "local_30": "temp1",
                "uStack_2c": "temp2",
                "local_28": "temp3",
                "uStack_24": "temp4"
            },
            "calling": [
                "FUN_080096e8",
                "FUN_08009410"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_08008ba0",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a5a0": {
            "entrypoint": "0x0800a5a0",
            "current_name": "calculate_result_0800a5a0",
            "code": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nuint calculateResult_0800a5a0(int inputSize,undefined8 *inputArray,int num1,int num2,int num3,int num4)\n\n{\n  undefined4 *ptr1;\n  uint result;\n  uint temp1;\n  int counter1;\n  uint *ptr2;\n  undefined4 temp2;\n  uint **ptrArray;\n  undefined4 temp3;\n  int counter2;\n  undefined4 *ptr3;\n  undefined4 temp4;\n  uint value1;\n  uint *ptr4;\n  int counter3;\n  int value2;\n  undefined8 *ptr5;\n  int counter4;\n  undefined4 *ptr18;\n  undefined8 *ptr19;\n  undefined4 result0;\n  int value3;\n  undefined8 *ptr6;\n  undefined4 *ptr7;\n  bool boolean;\n  undefined8 temp5;\n  undefined8 temp6;\n  undefined8 temp7;\n  undefined8 *tempArray;\n  int tempCounter;\n  int tempSize;\n  int tempVar1;\n  uint *newArray [2];\n  uint resultArray [20];\n  undefined8 tempVar2;\n  undefined8 tempVar3;\n  int tempArray2 [38];\n  undefined8 tempVar4;\n  \n  value2 = *(int *)(&DAT_0800c060 + num3 * 4);\n  counter2 = num2 + -1;\n  newArray[1] = (uint *)inputArray;\n  if (num1 + 0x14 < 0 == SCARRY4(num1,0x14)) {\n    tempVar1 = (num1 + -3) / 0x18;\n    tempSize = (tempVar1 + 1) * -0x18;\n  }\n  else {\n    tempSize = -0x18;\n    tempVar1 = 0;\n  }\n  tempSize = num1 + tempSize;\n  counter4 = tempVar1 - counter2;\n  if (-1 < value2 + counter2) {\n    value3 = value2 + counter2 + 1 + counter4;\n    ptr5 = &tempVar2;\n    do {\n      while (counter4 < 0) {\n        counter4 = counter4 + 1;\n        *(undefined4 *)ptr5 = 0;\n        *(undefined4 *)((int)ptr5 + 4) = 0;\n        ptr5 = ptr5 + 1;\n        if (counter4 == value3) goto LAB_0800a626;\n      }\n      temp6 = FUN_0800856c(*(undefined4 *)(num4 + counter4 * 4));\n      counter4 = counter4 + 1;\n      *ptr5 = temp6;\n      ptr5 = ptr5 + 1;\n    } while (counter4 != value3);\n  }\nLAB_0800a626:\n  ptr3 = (undefined4 *)(inputSize + -8);\n  if (-1 < value2) {\n    ptr6 = &tempVar2 + num2;\n    counter4 = counter2;\n    ptr5 = &tempVar4;\n    do {\n      if (counter2 < 0) {\n        temp6 = 0;\n      }\n      else {\n        temp6 = 0;\n        ptr7 = ptr3;\n        ptr19 = ptr6;\n        do {\n          ptr18 = ptr7 + 2;\n          temp5 = FUN_08008640(*ptr18,ptr7[3],*(undefined4 *)(ptr19 + -1),\n                                *(undefined4 *)((int)ptr19 + -4));\n          temp6 = FUN_080082d4((int)temp6,(int)((ulonglong)temp6 >> 0x20),(int)temp5,\n                                (int)((ulonglong)temp5 >> 0x20));\n          ptr7 = ptr18;\n          ptr19 = ptr19 + -1;\n        } while (ptr18 != ptr3 + num2 * 2);\n      }\n      counter4 = counter4 + 1;\n      *ptr5 = temp6;\n      ptr6 = ptr6 + 1;\n      ptr5 = ptr5 + 1;\n    } while (counter4 != value2 + num2);\n  }\n  newArray[0] = resultArray + value2 + -1;\n  counter4 = value2;\n  do {\n    temp6 = CONCAT44(*(undefined4 *)((int)&tempVar4 + counter4 * 8 + 4),\n                      *(undefined4 *)(&tempVar4 + counter4));\n    if (0 < counter4) {\n      ptr5 = &tempVar4 + counter4;\n      ptr2 = resultArray;\n      do {\n        temp2 = (undefined4)((ulonglong)temp6 >> 0x20);\n        FUN_08008640((int)temp6,temp2,0,0x3e700000);\n        FUN_08008ba0();\n        temp5 = FUN_0800856c();\n        temp3 = (undefined4)((ulonglong)temp5 >> 0x20);\n        temp7 = FUN_08008640((int)temp5,temp3,0,0x41700000);\n        FUN_080082d0((int)temp6,temp2,(int)temp7,(int)((ulonglong)temp7 >> 0x20));\n        result = FUN_08008ba0();\n        ptr6 = ptr5 + -1;\n        temp2 = *(undefined4 *)ptr6;\n        temp4 = *(undefined4 *)((int)ptr5 + -4);\n        *ptr2 = result;\n        temp6 = FUN_080082d4((int)temp5,temp3,temp2,temp4);\n        ptr5 = ptr6;\n        ptr2 = ptr2 + 1;\n      } while (ptr6 != &tempVar4);\n    }\n    temp6 = FUN_0800b2e8((int)temp6,(int)((ulonglong)temp6 >> 0x20),tempSize);\n    temp3 = (undefined4)((ulonglong)temp6 >> 0x20);\n    FUN_08008640((int)temp6,temp3,0,0x3fc00000);\n    temp5 = FUN_080094c0();\n    temp5 = FUN_08008640((int)temp5,(int)((ulonglong)temp5 >> 0x20),0,0x40200000);\n    temp6 = FUN_080082d0((int)temp6,temp3,(int)temp5,(int)((ulonglong)temp5 >> 0x20));\n    result = FUN_08008ba0();\n    temp5 = FUN_0800856c();\n    temp6 = FUN_080082d0((int)temp6,(int)((ulonglong)temp6 >> 0x20),(int)temp5,\n                          (int)((ulonglong)temp5 >> 0x20));\n    temp2 = (undefined4)((ulonglong)temp6 >> 0x20);\n    temp3 = (undefined4)temp6;\n    if (tempSize < 1) {\n      if (tempSize == 0) {\n        value3 = (int)resultArray[counter4 + -1] >> 0x17;\n        goto joined_r0x0800a8b8;\n      }\n      value3 = FUN_08008b4c(temp3,temp2,0,0x3fe00000);\n      if (value3 != 0) {\n        result = result + 1;\n        if (counter4 < 1) {\n          temp6 = FUN_080082d0(0,0x3ff00000,temp3,temp2);\n          value3 = 2;\n          goto LAB_0800a7a4;\n        }\n        value3 = 2;\n        goto LAB_0800a8c8;\n      }\n    }\n    else {\n      counter1 = (int)resultArray[counter4 + -1] >> (0x18U - tempSize & 0xff);\n      value1 = resultArray[counter4 + -1] - (counter1 << (0x18U - tempSize & 0xff));\n      value3 = (int)value1 >> (0x17U - tempSize & 0xff);\n      resultArray[counter4 + -1] = value1;\n      result = result + counter1;\njoined_r0x0800a8b8:\n      if (0 < value3) {\n        result = result + 1;\n        if (counter4 < 1) {\n          boolean = false;\n        }\n        else {\nLAB_0800a8c8:\n          if (resultArray[0] == 0) {\n            boolean = false;\n            if (counter4 != 1) {\n              ptr2 = resultArray;\n              counter1 = 1;\n              do {\n                ptr2 = ptr2 + 1;\n                if (*ptr2 != 0) {\n                  counter3 = counter1 + 1;\n                  value1 = *ptr2;\n                  goto LAB_0800a8e2;\n                }\n                counter1 = counter1 + 1;\n              } while (counter1 != counter4);\n              boolean = false;\n            }\n          }\n          else {\n            counter3 = 1;\n            counter1 = 0;\n            value1 = resultArray[0];\nLAB_0800a8e2:\n            resultArray[counter1] = 0x1000000 - value1;\n            if (counter3 < counter4) {\n              value1 = resultArray[counter3];\n              ptr2 = resultArray + counter3;\n              while( true ) {\n                ptr4 = ptr2 + 1;\n                *ptr2 = 0xffffff - value1;\n                if (ptr4 == resultArray + counter4) break;\n                value1 = *ptr4;\n                ptr2 = ptr4;\n              }\n            }\n            boolean = true;\n          }\n        }\n        if (0 < tempSize) {\n          if (tempSize == 1) {\n            resultArray[counter4 + -1] = resultArray[counter4 + -1] & 0x7fffff;\n          }\n          else if (tempSize == 2) {\n            resultArray[counter4 + -1] = resultArray[counter4 + -1] & 0x3fffff;\n          }\n        }\n        if (value3 == 2) {\n          temp6 = FUN_080082d0(0,0x3ff00000,temp3,temp2);\n          if (boolean) {\n            temp5 = FUN_0800b2e8(0,0x3ff00000,tempSize);\n            temp6 = FUN_080082d0((int)temp6,(int)((ulonglong)temp6 >> 0x20),(int)temp5,\n                                  (int)((ulonglong)temp5 >> 0x20));\n          }\n        }\n      }\n    }\nLAB_0800a7a4:\n    temp3 = (undefined4)((ulonglong)temp6 >> 0x20);\n    counter1 = FUN_08008b10((int)temp6,temp3,0,0);\n    if (counter1 == 0) {\n      temp6 = FUN_0800b2e8((int)temp6,temp3,-tempSize);\n      temp2 = (undefined4)((ulonglong)temp6 >> 0x20);\n      temp3 = (undefined4)temp6;\n      counter2 = FUN_08008b4c(temp3,temp2,0,0x41700000);\n      if (counter2 == 0) {\n        value1 = FUN_08008ba0(temp3,temp2);\n        resultArray[counter4] = value1;\n        counter1 = counter4;\n      }\n      else {\n        FUN_08008640(temp3,temp2,0,0x3e700000);\n        value1 = FUN_08008ba0();\n        temp6 = FUN_0800856c();\n        temp6 = FUN_08008640((int)temp6,(int)((ulonglong)temp6 >> 0x20),0,0x41700000);\n        FUN_080082d0(temp3,temp2,(int)temp6,(int)((ulonglong)temp6 >> 0x20));\n        temp1 = FUN_08008ba0();\n        tempSize = tempSize + 0x18;\n        resultArray[counter4] = temp1;\n        resultArray[counter4 + 1] = value1;\n        counter1 = counter4 + 1;\n      }\n      goto LAB_0800a9f6;\n    }\n    counter1 = counter4 + -1;\n    if (value2 <= counter1) {\n      value1 = 0;\n      ptr2 = resultArray + counter4 + 0x3fffffff;\n      do {\n        ptr4 = ptr2 + -1;\n        value1 = value1 | *ptr2;\n        ptr2 = ptr4;\n      } while (ptr4 != newArray[0]);\n      if (value1 != 0) break;\n    }\n    if (resultArray[value2 + -1] == 0) {\n      tempCounter = 1;\n      ptrArray = newArray + value2;\n      do {\n        ptr2 = *ptrArray;\n        tempCounter = tempCounter + 1;\n        ptrArray = ptrArray + -1;\n      } while (ptr2 == (uint *)0x0);\n      tempCounter = counter4 + tempCounter;\n    }\n    else {\n      tempCounter = counter4 + 1;\n    }\n    value3 = counter4 + 1;\n    ptr7 = (undefined4 *)(num4 + (value3 + tempVar1 + 0x3fffffff) * 4);\n    ptr5 = &tempVar2 + counter4 + num2;\n    tempArray = &tempVar4 + value3;\n    do {\n      ptr7 = ptr7 + 1;\n      temp6 = FUN_0800856c(*ptr7);\n      *ptr5 = temp6;\n      ptr6 = ptr5 + 1;\n      if (counter2 < 0) {\n        temp5 = 0;\n      }\n      else {\n        temp5 = 0;\n        ptr18 = ptr3;\n        while( true ) {\n          ptr5 = ptr5 + -1;\n          ptr1 = ptr18 + 2;\n          temp6 = FUN_08008640((int)temp6,(int)((ulonglong)temp6 >> 0x20),*ptr1,ptr18[3]);\n          temp5 = FUN_080082d4((int)temp5,(int)((ulonglong)temp5 >> 0x20),(int)temp6,\n                                (int)((ulonglong)temp6 >> 0x20));\n          if (ptr1 == ptr3 + num2 * 2) break;\n          temp6 = *ptr5;\n          ptr18 = ptr1;\n        }\n      }\n      *tempArray = temp5;\n      value3 = value3 + 1;\n      counter4 = tempCounter;\n      ptr5 = ptr6;\n      tempArray = tempArray + 1;\n    } while (value3 <= tempCounter);\n  } while( true );\n  tempSize = tempSize + -0x18;\n  if (resultArray[counter1] == 0) {\n    ptr2 = resultArray + counter4 + 0x3ffffffe;\n    do {\n      value1 = *ptr2;\n      counter1 = counter1 + -1;\n      tempSize = tempSize + -0x18;\n      ptr2 = ptr2 + -1;\n    } while (value1 == 0);\n  }\nLAB_0800a9f6:\n  temp6 = FUN_0800b2e8(0,0x3ff00000,tempSize);\n  if (counter1 < 0) {\n    if (2 < num3) {\n      if (num3 == 3) {\n        temp6 = 0;\nLAB_0800abe4:\n        if (value3 == 0) {\n          *newArray[1] = (undefined4)tempVar3;\n          *(int *)((int)newArray[1] + 4) = tempVar3._4_4_;\n          *(undefined8 *)((int)newArray[1] + 0x10) = temp6;\n          *(int *)((int)newArray[1] + 8) = tempArray2[0];\n          *(int *)((int)newArray[1] + 0xc) = tempArray2[1];\n          return result & 7;\n        }\n        *(int *)((int)newArray[1] + 0x10) = (int)temp6;\n        *(int *)((int)newArray[1] + 8) = tempArray2[0];\n        *(int *)((int)newArray[1] + 0x14) = (int)((ulonglong)temp6 >> 0x20) + -0x80000000;\n        *(int *)((int)newArray[1] + 4) = tempVar3._4_4_ + -0x80000000;\n        *(int *)((int)newArray[1] + 0xc) = tempArray2[1] + -0x80000000;\n        *newArray[1] = (undefined4)tempVar3;\n        return result & 7;\n      }\n      goto LAB_0800ab0e;\n    }\n    if (num3 < 1) {\n      if (num3 != 0) goto LAB_0800ab0e;\n      temp6 = 0;\nLAB_0800aafc:\n      counter2 = (int)((ulonglong)temp6 >> 0x20);\n      if (value3 != 0) {\n        counter2 = counter2 + -0x80000000;\n      }\n      *newArray[1] = (int)temp6;\n      *(int *)((int)newArray[1] + 4) = counter2;\nLAB_0800ab0e:\n      return result & 7;\n    }\n    temp6 = 0;\n  }\n  else {\n    ptr6 = &tempVar4 + counter1;\n    ptr2 = resultArray + counter1 + 1;\n    ptr5 = &tempVar4 + counter1 + 1;\n    do {\n      temp3 = (undefined4)((ulonglong)temp6 >> 0x20);\n      ptr2 = ptr2 + -1;\n      temp5 = FUN_0800856c(*ptr2);\n      temp5 = FUN_08008640((int)temp5,(int)((ulonglong)temp5 >> 0x20),(int)temp6,temp3);\n      ptr5 = ptr5 + -1;\n      *ptr5 = temp5;\n      temp6 = FUN_08008640((int)temp6,temp3,0,0x3e700000);\n    } while (ptr2 != resultArray);\n    counter2 = 0;\n    do {\n      if (value2 < 0) {\n        temp6 = 0;\n      }\n      else {\n        temp3 = 0x40000000;\n        temp2 = 0x3ff921fb;\n        temp6 = 0;\n        counter4 = 0;\n        ptr5 = ptr6;\n        ptr3 = &DAT_0800c028;\n        while( true ) {\n          temp5 = FUN_08008640(*(undefined4 *)ptr5,*(undefined4 *)((int)ptr5 + 4),temp3,temp2\n                               );\n          temp6 = FUN_080082d4((int)temp6,(int)((ulonglong)temp6 >> 0x20),(int)temp5,\n                                (int)((ulonglong)temp5 >> 0x20));\n          counter4 = counter4 + 1;\n          if ((value2 < counter4) || (counter2 < counter4)) break;\n          temp3 = *ptr3;\n          temp2 = ptr3[1];\n          ptr5 = ptr5 + 1;\n          ptr3 = ptr3 + 2;\n        }\n      }\n      boolean = counter2 != counter1;\n      *(int *)(&tempVar3 + counter2) = (int)temp6;\n      *(int *)((int)&tempVar3 + (counter2 * 2 + 1) * 4) = (int)((ulonglong)temp6 >> 0x20);\n      ptr6 = ptr6 + -1;\n      counter2 = counter2 + 1;\n    } while (boolean);\n    if (2 < num3) {\n      if (num3 == 3) {\n        if (counter1 != 0) {\n          ptr5 = &tempVar3 + counter1;\n          temp6 = CONCAT44(*(undefined4 *)((int)&tempVar3 + (counter1 * 2 + 1) * 4),\n                            *(undefined4 *)ptr5);\n          do {\n            temp2 = (undefined4)((ulonglong)temp6 >> 0x20);\n            temp3 = (undefined4)temp6;\n            temp4 = *(undefined4 *)(ptr5 + -1);\n            result0 = *(undefined4 *)((int)ptr5 + -4);\n            temp6 = FUN_080082d4(temp3,temp2,temp4,result0);\n            temp5 = FUN_080082d0(temp4,result0,(int)temp6,(int)((ulonglong)temp6 >> 0x20));\n            temp5 = FUN_080082d4((int)temp5,(int)((ulonglong)temp5 >> 0x20),temp3,temp2);\n            *ptr5 = temp5;\n            ptr5 = ptr5 + -1;\n            *ptr5 = temp6;\n          } while (&tempVar3 != ptr5);\n          if (1 < counter1) {\n            ptr5 = &tempVar3 + counter1;\n            temp6 = CONCAT44(*(undefined4 *)((int)&tempVar3 + (counter1 * 2 + 1) * 4),\n                              *(undefined4 *)ptr5);\n            do {\n              temp2 = (undefined4)((ulonglong)temp6 >> 0x20);\n              temp3 = (undefined4)temp6;\n              temp4 = *(undefined4 *)(ptr5 + -1);\n              result0 = *(undefined4 *)((int)ptr5 + -4);\n              temp6 = FUN_080082d4(temp3,temp2,temp4,result0);\n              temp5 = FUN_080082d0(temp4,result0,(int)temp6,(int)((ulonglong)temp6 >> 0x20));\n              temp5 = FUN_080082d4((int)temp5,(int)((ulonglong)temp5 >> 0x20),temp3,temp2);\n              *ptr5 = temp5;\n              ptr5 = ptr5 + -1;\n              *ptr5 = temp6;\n            } while (&tempVar3 + 1 != ptr5);\n            temp6 = 0;\n            ptr5 = &tempVar3 + counter1 + 1;\n            do {\n              ptr6 = ptr5 + -1;\n              temp6 = FUN_080082d4((int)temp6,(int)((ulonglong)temp6 >> 0x20),\n                                    *(undefined4 *)ptr6,*(undefined4 *)((int)ptr5 + -4));\n              ptr5 = ptr6;\n            } while (&tempVar3 + 2 != ptr6);\n            goto LAB_0800abe4;\n          }\n        }\n        temp6 = 0;\n        goto LAB_0800abe4;\n      }\n      goto LAB_0800ab0e;\n    }\n    if (num3 < 1) {\n      if (num3 != 0) goto LAB_0800ab0e;\n      temp6 = 0;\n      ptr5 = &tempVar3 + counter1 + 1;\n      do {\n        ptr6 = ptr5 + -1;\n        temp6 = FUN_080082d4((int)temp6,(int)((ulonglong)temp6 >> 0x20),*(undefined4 *)ptr6,\n                              *(undefined4 *)((int)ptr5 + -4));\n        ptr5 = ptr6;\n      } while (&tempVar3 != ptr6);\n      goto LAB_0800aafc;\n    }\n    temp6 = 0;\n    ptr5 = &tempVar3 + counter1 + 1;\n    do {\n      ptr6 = ptr5 + -1;\n      temp6 = FUN_080082d4((int)temp6,(int)((ulonglong)temp6 >> 0x20),*(undefined4 *)ptr6,\n                            *(undefined4 *)((int)ptr5 + -4));\n      ptr5 = ptr6;\n    } while (&tempVar3 != ptr6);\n  }\n  counter2 = (int)((ulonglong)temp6 >> 0x20);\n  temp3 = (undefined4)temp6;\n  if (value3 == 0) {\n    *(undefined8 *)newArray[1] = temp6;\n    temp6 = FUN_080082d0((undefined4)tempVar3,tempVar3._4_4_,temp3,counter2);\n    if (counter1 < 1) goto LAB_0800ad26;\nLAB_0800ad04:\n    counter2 = 1;\n    ptr5 = &tempVar3;\n    do {\n      temp6 = FUN_080082d4((int)temp6,(int)((ulonglong)temp6 >> 0x20),\n                            *(undefined4 *)(ptr5 + 1),*(undefined4 *)((int)ptr5 + 0xc));\n      counter2 = counter2 + 1;\n      ptr5 = ptr5 + 1;\n    } while (counter2 <= counter1);\n    if (value3 == 0) goto LAB_0800ad26;\n  }\n  else {\n    *newArray[1] = temp3;\n    *(int *)((int)newArray[1] + 4) = counter2 + -0x80000000;\n    temp6 = FUN_080082d0((undefined4)tempVar3,tempVar3._4_4_,temp3,counter2);\n    if (0 < counter1) goto LAB_0800ad04;\n  }\n  temp6 = CONCAT44((int)((ulonglong)temp6 >> 0x20) + -0x80000000,(int)temp6);\nLAB_0800ad26:\n  *(undefined8 *)((int)newArray[1] + 8) = temp6;\n  return result & 7;\n}\n\n",
            "renaming": {
                "FUN_0800a5a0": "calculate_result_0800a5a0",
                "param_1": "inputSize",
                "param_2": "inputArray",
                "param_3": "num1",
                "param_4": "num2",
                "param_5": "num3",
                "param_6": "num4",
                "puVar1": "ptr1",
                "uVar2": "result",
                "uVar3": "temp1",
                "iVar4": "counter1",
                "puVar5": "ptr2",
                "uVar6": "temp2",
                "ppuVar7": "ptrArray",
                "uVar8": "temp3",
                "iVar9": "counter2",
                "puVar10": "ptr3",
                "uVar11": "temp4",
                "uVar12": "value1",
                "puVar13": "ptr4",
                "iVar14": "counter3",
                "iVar15": "value2",
                "iVar17": "counter4",
                "puVar16": "ptr5",
                "iVar21": "value3",
                "puVar22": "ptr6",
                "puVar23": "ptr7",
                "bVar24": "boolean",
                "uVar25": "temp5",
                "uVar26": "temp6",
                "uVar27": "temp7",
                "local_284": "tempArray",
                "local_280": "tempCounter",
                "local_270": "tempSize",
                "local_26c": "tempVar1",
                "local_260": "newArray",
                "local_258": "resultArray",
                "uStack_208": "tempVar2",
                "local_168": "tempVar3",
                "local_160": "tempArray2",
                "uStack_c8": "tempVar4"
            },
            "calling": [
                "FUN_08009d78"
            ],
            "called": [
                "FUN_0800b2e8",
                "FUN_08008b10",
                "FUN_080082d0",
                "FUN_0800856c",
                "FUN_080094c0",
                "FUN_08008b4c",
                "FUN_08008ba0",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800adf0": {
            "entrypoint": "0x0800adf0",
            "current_name": "calculate_result_0800adf0",
            "code": "\nundefined4\ncalculate_result_0800adf0(undefined4 input_1,uint input_2,undefined4 input_3,undefined4 input_4,int is_reverse)\n\n{\n  int result;\n  undefined4 calculation_result_1;\n  undefined4 calculation_result_2;\n  undefined4 calculation_result_3;\n  undefined4 calculation_result_4;\n  undefined4 calculation_result_5;\n  undefined8 temp_result_1;\n  undefined8 temp_result_2;\n  \n  if (((input_2 & 0x7fffffff) < 0x3e400000) && (result = FUN_08008ba0(), result == 0)) {\n    return input_1;\n  }\n  temp_result_1 = FUN_08008640(input_1,input_2,input_1);\n  calculation_result_3 = (undefined4)((ulonglong)temp_result_1 >> 0x20);\n  calculation_result_2 = (undefined4)temp_result_1;\n  temp_result_1 = FUN_08008640(input_1,input_2,calculation_result_2,calculation_result_3);\n  calculation_result_4 = (undefined4)((ulonglong)temp_result_1 >> 0x20);\n  calculation_result_1 = (undefined4)temp_result_1;\n  temp_result_1 = FUN_08008640(calculation_result_2,calculation_result_3,0x5acfd57c,0x3de5d93a);\n  temp_result_1 = FUN_080082d0((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),0x8a2b9ceb,0x3e5ae5e6);\n  temp_result_1 = FUN_08008640((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),calculation_result_2,calculation_result_3);\n  temp_result_1 = FUN_080082d4((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),0x57b1fe7d,0x3ec71de3);\n  temp_result_1 = FUN_08008640((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),calculation_result_2,calculation_result_3);\n  temp_result_1 = FUN_080082d0((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),0x19c161d5,0x3f2a01a0);\n  temp_result_1 = FUN_08008640((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),calculation_result_2,calculation_result_3);\n  temp_result_1 = FUN_080082d4((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),0x1110f8a6,0x3f811111);\n  calculation_result_5 = (undefined4)((ulonglong)temp_result_1 >> 0x20);\n  if (is_reverse != 0) {\n    temp_result_2 = FUN_08008640(input_3,input_4,0,0x3fe00000);\n    temp_result_1 = FUN_08008640(calculation_result_1,calculation_result_4,(int)temp_result_1,calculation_result_5);\n    temp_result_1 = FUN_080082d0((int)temp_result_2,(int)((ulonglong)temp_result_2 >> 0x20),(int)temp_result_1,\n                         (int)((ulonglong)temp_result_1 >> 0x20));\n    temp_result_1 = FUN_08008640((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),calculation_result_2,calculation_result_3);\n    temp_result_1 = FUN_080082d0((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),input_3,input_4);\n    temp_result_2 = FUN_08008640(calculation_result_1,calculation_result_4,0x55555549,0x3fc55555);\n    temp_result_1 = FUN_080082d4((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),(int)temp_result_2,\n                         (int)((ulonglong)temp_result_2 >> 0x20));\n    calculation_result_2 = FUN_080082d0(input_1,input_2,(int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20));\n    return calculation_result_2;\n  }\n  temp_result_1 = FUN_08008640(calculation_result_2,calculation_result_3,(int)temp_result_1,calculation_result_5);\n  temp_result_1 = FUN_080082d0((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),0x55555549,0x3fc55555);\n  temp_result_1 = FUN_08008640((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),calculation_result_1,calculation_result_4);\n  calculation_result_2 = FUN_080082d4((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),input_1,input_2);\n  return calculation_result_2;\n}\n\n",
            "renaming": {
                "FUN_0800adf0": "calculate_result_0800adf0",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "param_5": "is_reverse",
                "iVar1": "result",
                "uVar2": "calculation_result_1",
                "uVar3": "calculation_result_2",
                "uVar4": "calculation_result_3",
                "uVar5": "calculation_result_4",
                "uVar6": "calculation_result_5",
                "uVar7": "temp_result_1",
                "uVar8": "temp_result_2"
            },
            "calling": [
                "FUN_080096e8",
                "FUN_08009410"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_08008ba0",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800af78": {
            "entrypoint": "0x0800af78",
            "current_name": "calculate_result_0800af78",
            "code": "\nint calculateResult_0800af78(int input1,uint input2)\n\n{\n  undefined4 var1;\n  undefined4 var2;\n  undefined4 var3;\n  undefined4 var4;\n  int result;\n  undefined4 var6;\n  uint var7;\n  undefined8 result1;\n  undefined8 result2;\n  undefined4 var5;\n  \n  result1 = CONCAT44(input2,input1);\n  var7 = input2 & 0x7fffffff;\n  if (var7 < 0x44100000) {\n    if (var7 < 0x3fdc0000) {\n      if (var7 < 0x3e200000) {\n        result2 = FUN_080082d4(input1,input2,0x8800759c,0x7e37e43c);\n        result = FUN_08008b60((int)result2,(int)((ulonglong)result2 >> 0x20),0,0x3ff00000);\n        if (result != 0) {\n          return input1;\n        }\n      }\n      result = -1;\n    }\n    else {\n      result1 = FUNC_0800b2cc();\n      var4 = (undefined4)((ulonglong)result1 >> 0x20);\n      var1 = (undefined4)result1;\n      if (var7 < 0x3ff30000) {\n        if (var7 < 0x3fe60000) {\n          result1 = FUN_080082d4(var1,var4,var1,var4);\n          result1 = FUN_080082d0((int)result1,(int)((ulonglong)result1 >> 0x20),0,0x3ff00000);\n          result2 = FUN_080082d4(var1,var4,0,0x40000000);\n          result1 = FUN_08008894((int)result1,(int)((ulonglong)result1 >> 0x20),(int)result2,\n                               (int)((ulonglong)result2 >> 0x20));\n          result = 0;\n        }\n        else {\n          result1 = FUN_080082d0(var1,var4,0,0x3ff00000);\n          result2 = FUN_080082d4(var1,var4,0,0x3ff00000);\n          result1 = FUN_08008894((int)result1,(int)((ulonglong)result1 >> 0x20),(int)result2,\n                               (int)((ulonglong)result2 >> 0x20));\n          result = 1;\n        }\n      }\n      else if (var7 < 0x40038000) {\n        result1 = FUN_080082d0(var1,var4,0,0x3ff80000);\n        result2 = FUN_08008640(var1,var4,0,0x3ff80000);\n        result2 = FUN_080082d4((int)result2,(int)((ulonglong)result2 >> 0x20),0,0x3ff00000);\n        result1 = FUN_08008894((int)result1,(int)((ulonglong)result1 >> 0x20),(int)result2,\n                             (int)((ulonglong)result2 >> 0x20));\n        result = 2;\n      }\n      else {\n        result1 = FUN_08008894(0,0xbff00000,var1,var4);\n        result = 3;\n      }\n    }\n    var5 = (undefined4)((ulonglong)result1 >> 0x20);\n    var6 = (undefined4)result1;\n    result1 = FUN_08008640(var6,var5,var6);\n    var2 = (undefined4)((ulonglong)result1 >> 0x20);\n    var1 = (undefined4)result1;\n    result1 = FUN_08008640(var1,var2,var1,var2);\n    var3 = (undefined4)((ulonglong)result1 >> 0x20);\n    var4 = (undefined4)result1;\n    result1 = FUN_08008640(var4,var3,0xe322da11,0x3f90ad3a);\n    result1 = FUN_080082d4((int)result1,(int)((ulonglong)result1 >> 0x20),0x24760deb,0x3fa97b4b);\n    result1 = FUN_08008640((int)result1,(int)((ulonglong)result1 >> 0x20),var4,var3);\n    result1 = FUN_080082d4((int)result1,(int)((ulonglong)result1 >> 0x20),0xa0d03d51,0x3fb10d66);\n    result1 = FUN_08008640((int)result1,(int)((ulonglong)result1 >> 0x20),var4,var3);\n    result1 = FUN_080082d4((int)result1,(int)((ulonglong)result1 >> 0x20),0xc54c206e,0x3fb745cd);\n    result1 = FUN_08008640((int)result1,(int)((ulonglong)result1 >> 0x20),var4,var3);\n    result1 = FUN_080082d4((int)result1,(int)((ulonglong)result1 >> 0x20),0x920083ff,0x3fc24924);\n    result1 = FUN_08008640((int)result1,(int)((ulonglong)result1 >> 0x20),var4,var3);\n    result1 = FUN_080082d4((int)result1,(int)((ulonglong)result1 >> 0x20),0x5555550d,0x3fd55555);\n    result1 = FUN_08008640((int)result1,(int)((ulonglong)result1 >> 0x20),var1,var2);\n    var1 = (undefined4)((ulonglong)result1 >> 0x20);\n    result2 = FUN_08008640(var4,var3,0x2c6a6c2f,0xbfa2b444);\n    result2 = FUN_080082d0((int)result2,(int)((ulonglong)result2 >> 0x20),0x52defd9a,0x3fadde2d);\n    result2 = FUN_08008640((int)result2,(int)((ulonglong)result2 >> 0x20),var4,var3);\n    result2 = FUN_080082d0((int)result2,(int)((ulonglong)result2 >> 0x20),0xaf749a6d,0x3fb3b0f2);\n    result2 = FUN_08008640((int)result2,(int)((ulonglong)result2 >> 0x20),var4,var3);\n    result2 = FUN_080082d0((int)result2,(int)((ulonglong)result2 >> 0x20),0xfe231671,0x3fbc71c6);\n    result2 = FUN_08008640((int)result2,(int)((ulonglong)result2 >> 0x20),var4,var3);\n    result2 = FUN_080082d0((int)result2,(int)((ulonglong)result2 >> 0x20),0x9998ebc4,0x3fc99999);\n    result2 = FUN_08008640((int)result2,(int)((ulonglong)result2 >> 0x20),var4,var3);\n    var4 = (undefined4)((ulonglong)result2 >> 0x20);\n    if (result == -1) {\n      result1 = FUN_080082d4((int)result1,var1,(int)result2,var4);\n      result1 = FUN_08008640((int)result1,(int)((ulonglong)result1 >> 0x20),var6,var5);\n      result = FUN_080082d0(var6,var5,(int)result1,(int)((ulonglong)result1 >> 0x20));\n      return result;\n    }\n    result1 = FUN_080082d4((int)result1,var1,(int)result2,var4);\n    result1 = FUN_08008640((int)result1,(int)((ulonglong)result1 >> 0x20),var6,var5);\n    result1 = FUN_080082d0((int)result1,(int)((ulonglong)result1 >> 0x20),\n                         *(undefined4 *)(&UNK_0800c090 + result * 8),\n                         *(undefined4 *)(&UNK_0800c094 + result * 8));\n    result1 = FUN_080082d0((int)result1,(int)((ulonglong)result1 >> 0x20),var6,var5);\n    result = FUN_080082d0(*(undefined4 *)(&UNK_0800c070 + result * 8),\n                         *(undefined4 *)(&UNK_0800c074 + result * 8),(int)result1,\n                         (int)((ulonglong)result1 >> 0x20));\n    if ((int)input2 < 0) {\n      return result;\n    }\n  }\n  else {\n    if ((0x7ff00000 < var7) || ((var7 == 0x7ff00000 && (input1 != 0)))) {\n      result = FUN_080082d4(input1,input2,input1);\n      return result;\n    }\n    result = 0x54442d18;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_0800af78": "calculate_result_0800af78",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "var1",
                "uVar2": "var2",
                "uVar3": "var3",
                "uVar4": "var4",
                "iVar5": "result",
                "uVar6": "var6",
                "uVar7": "var7",
                "uVar8": "result1",
                "uVar9": "result2",
                "local_2c": "var5"
            },
            "calling": [
                "FUN_08009990"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_0800b2cc",
                "FUN_08008b60",
                "FUN_08008894",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b2cc": {
            "entrypoint": "0x0800b2cc",
            "current_name": "FUNC_0800b2cc",
            "code": "\nvoid FUNC_0800b2cc(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b2cc": "FUNC_0800b2cc"
            },
            "calling": [
                "FUN_08009d78",
                "FUN_0800af78",
                "FUN_08009990"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b2d4": {
            "entrypoint": "0x0800b2d4",
            "current_name": "get_sign_extension_0800b2d4",
            "code": "\nuint getSignExtension_0800b2d4(undefined4 flags,uint value)\n\n{\n  return (value | 0x80000000) + 0x100000 >> 0x1f;\n}\n\n",
            "renaming": {
                "FUN_0800b2d4": "get_sign_extension_0800b2d4",
                "param_1": "flags",
                "param_2": "value"
            },
            "calling": [
                "FUN_0800981c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b2e0": {
            "entrypoint": "0x0800b2e0",
            "current_name": "initialize_0800b2e0",
            "code": "\nvoid initialize_0800b2e0(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800b2e0": "initialize_0800b2e0",
                "undefined4": "void"
            },
            "calling": [
                "FUN_080098d0",
                "FUN_0800981c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b2e8": {
            "entrypoint": "0x0800b2e8",
            "current_name": "calculate_result_0800b2e8",
            "code": "\nuint calculateResult_0800b2e8(uint number1,uint number2,int offset,undefined4 constant)\n\n{\n  uint shiftAmount;\n  int offsetSum;\n  uint upperPart;\n  undefined8 concatenatedValue;\n  \n  concatenatedValue = CONCAT44(number2,number1);\n  shiftAmount = (number2 << 1) >> 0x15;\n  if (shiftAmount == 0) {\n    if ((number1 | number2 & 0x7fffffff) == 0) {\n      return number1;\n    }\n    concatenatedValue = FUN_08008640(number1,number2,0,0x43500000);\n    if (offset < -50000) goto LAB_0800b34a;\n    shiftAmount = ((uint)((int)((ulonglong)concatenatedValue >> 0x20) << 1) >> 0x15) - 0x36;\n  }\n  else if (shiftAmount == 0x7ff) {\n    shiftAmount = FUN_080082d4(number1,number2,number1,number2,constant);\n    return shiftAmount;\n  }\n  upperPart = (uint)((ulonglong)concatenatedValue >> 0x20);\n  offsetSum = shiftAmount + offset;\n  if (offsetSum < 0x7ff) {\n    if (0 < offsetSum) {\n      return (uint)concatenatedValue;\n    }\n    if (offsetSum + 0x35 < 0 == SCARRY4(offsetSum,0x35)) {\n      shiftAmount = FUN_08008640((uint)concatenatedValue,upperPart & 0x800fffff | (offsetSum + 0x36) * 0x100000,0,0x3c900000);\n      return shiftAmount;\n    }\n    if (offset < 0xc351) {\n      concatenatedValue = CONCAT44(upperPart & 0x80000000 | 0x1a56e1f,0xc2f8f359);\nLAB_0800b34a:\n      shiftAmount = FUN_08008640((int)concatenatedValue,(int)((ulonglong)concatenatedValue >> 0x20),0xc2f8f359,0x1a56e1f);\n      return shiftAmount;\n    }\n  }\n  shiftAmount = FUN_08008640(0x8800759c,upperPart & 0x80000000 | 0x7e37e43c,0x8800759c,0x7e37e43c);\n  return shiftAmount;\n}\n\n",
            "renaming": {
                "FUN_0800b2e8": "calculate_result_0800b2e8",
                "param_1": "number1",
                "param_2": "number2",
                "param_3": "offset",
                "param_4": "constant",
                "uVar1": "shiftAmount",
                "iVar2": "offsetSum",
                "uVar3": "upperPart",
                "uVar4": "concatenatedValue"
            },
            "calling": [
                "FUN_0800a5a0"
            ],
            "called": [
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b3dc": {
            "entrypoint": "0x0800b3dc",
            "current_name": "get_data_value_0800b3dc",
            "code": "\nundefined4 get_data_value_0800b3dc(void)\n\n{\n  return DAT_20000018;\n}\n\n",
            "renaming": {
                "FUN_0800b3dc": "get_data_value_0800b3dc"
            },
            "calling": [
                "FUN_080098d0",
                "FUN_0800981c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b3e8": {
            "entrypoint": "0x0800b3e8",
            "current_name": "execute_function_set_twice_0800b3e8",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800b3f4) */\n/* WARNING: Removing unreachable block (ram,0x0800b3f6) */\n\nvoid executeFunctionSetTwice_0800b3e8(void)\n\n{\n  int iterationCount;\n  code **functionSetPointer;\n  \n  FUNC_0800b5b0();\n  iterationCount = 0;\n  functionSetPointer = (code **)&DAT_0800c0b4;\n  do {\n    iterationCount = iterationCount + 1;\n    (**functionSetPointer)();\n    functionSetPointer = functionSetPointer + 1;\n  } while (iterationCount != 2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b3e8": "execute_function_set_twice_0800b3e8",
                "iVar1": "iterationCount",
                "ppcVar2": "functionSetPointer"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_0800b5b0",
                "FUN_0800b4d0",
                "FUN_080001ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b430": {
            "entrypoint": "0x0800b430",
            "current_name": "memset_function_0800b430",
            "code": "\nvoid memset_function_0800b430(undefined4 *destination,undefined value,uint size)\n\n{\n  undefined4 *dest_ptr;\n  undefined4 *next_dest_ptr;\n  uint remaining_size;\n  undefined4 value_concat;\n  bool is_zero_size;\n  \n  if (((uint)destination & 3) != 0) {\n    remaining_size = size - 1;\n    dest_ptr = destination;\n    if (size == 0) {\n      return;\n    }\n    while( true ) {\n      destination = (undefined4 *)((int)dest_ptr + 1);\n      *(undefined *)dest_ptr = value;\n      size = remaining_size;\n      if (((uint)destination & 3) == 0) break;\n      is_zero_size = remaining_size == 0;\n      remaining_size = remaining_size - 1;\n      dest_ptr = destination;\n      if (is_zero_size) {\n        return;\n      }\n    }\n  }\n  if (3 < size) {\n    value_concat = CONCAT22(CONCAT11(value,value),CONCAT11(value,value));\n    if (0xf < size) {\n      dest_ptr = destination + 4;\n      do {\n        dest_ptr[-4] = value_concat;\n        dest_ptr[-3] = value_concat;\n        dest_ptr[-2] = value_concat;\n        dest_ptr[-1] = value_concat;\n        dest_ptr = dest_ptr + 4;\n      } while (dest_ptr != (undefined4 *)((int)destination + (size - 0x10 & 0xfffffff0) + 0x20));\n      remaining_size = size & 0xc;\n      destination = destination + ((size - 0x10 >> 4) + 1) * 4;\n      size = size & 0xf;\n      if (remaining_size == 0) goto joined_r0x0800b4a8;\n    }\n    dest_ptr = (undefined4 *)((size - 4 & 0xfffffffc) + 4 + (int)destination);\n    do {\n      next_dest_ptr = destination + 1;\n      *destination = value_concat;\n      destination = next_dest_ptr;\n    } while (dest_ptr != next_dest_ptr);\n    size = size & 3;\n    destination = dest_ptr;\n  }\njoined_r0x0800b4a8:\n  if (size != 0) {\n    dest_ptr = destination;\n    do {\n      next_dest_ptr = (undefined4 *)((int)dest_ptr + 1);\n      *(undefined *)dest_ptr = value;\n      dest_ptr = next_dest_ptr;\n    } while ((undefined4 *)(size + (int)destination) != next_dest_ptr);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b430": "memset_function_0800b430",
                "param_1": "destination",
                "param_2": "value",
                "param_3": "size",
                "puVar1": "dest_ptr",
                "puVar2": "next_dest_ptr",
                "uVar3": "remaining_size",
                "uVar4": "value_concat",
                "bVar5": "is_zero_size"
            },
            "calling": [
                "FUN_08005814",
                "FUN_08004d7c",
                "FUN_080004ac",
                "FUN_080005b4",
                "FUN_08002f24",
                "FUN_08001994",
                "FUN_080002f0",
                "FUN_08001ddc",
                "FUN_080079c0",
                "FUN_080024c4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b4d0": {
            "entrypoint": "0x0800b4d0",
            "current_name": "FUNC_0800b4d0",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800b4d4) */\n\nvoid FUNC_0800b4d0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b4d0": "FUNC_0800b4d0"
            },
            "calling": [
                "FUN_0800b3e8"
            ],
            "called": [
                "FUN_0800b524"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b51c": {
            "entrypoint": "0x0800b51c",
            "current_name": "FUNC_0800b51c",
            "code": "\nvoid FUNC_0800b51c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b51c": "FUNC_0800b51c"
            },
            "calling": [
                "FUN_0800b524"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b520": {
            "entrypoint": "0x0800b520",
            "current_name": "FUNC_0800b520",
            "code": "\nvoid FUNC_0800b520(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b520": "FUNC_0800b520"
            },
            "calling": [
                "FUN_0800b524"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b524": {
            "entrypoint": "0x0800b524",
            "current_name": "update_data_0800b524",
            "code": "\nundefined4 updateData_0800b524(int inputType,undefined4 newValue1,undefined4 newValue2,undefined4 newValue3)\n\n{\n  undefined *dataPointer;\n  undefined4 returnValue;\n  uint bitFlag;\n  uint index;\n  \n  FUNC_0800b51c(DAT_20000448);\n  if (DAT_20000168 == (undefined *)0x0) {\n    DAT_20000168 = &DAT_2000016c;\n  }\n  dataPointer = DAT_20000168;\n  index = *(uint *)(DAT_20000168 + 4);\n  if ((int)index < 0x20) {\n    if (inputType != 0) {\n      *(undefined4 *)(DAT_20000168 + index * 4 + 0x88) = newValue2;\n      bitFlag = 1 << (index & 0xff);\n      *(uint *)(dataPointer + 0x188) = *(uint *)(dataPointer + 0x188) | bitFlag;\n      *(undefined4 *)(dataPointer + index * 4 + 0x108) = newValue3;\n      if (inputType == 2) {\n        *(uint *)(dataPointer + 0x18c) = bitFlag | *(uint *)(dataPointer + 0x18c);\n      }\n    }\n    returnValue = DAT_20000448;\n    *(uint *)(dataPointer + 4) = index + 1;\n    *(undefined4 *)(dataPointer + (index + 2) * 4) = newValue1;\n    FUNC_0800b520(returnValue);\n    returnValue = 0;\n  }\n  else {\n    FUNC_0800b520(DAT_20000448);\n    returnValue = 0xffffffff;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_0800b524": "update_data_0800b524",
                "param_1": "inputType",
                "param_2": "newValue1",
                "param_3": "newValue2",
                "param_4": "newValue3",
                "puVar1": "dataPointer",
                "uVar2": "returnValue",
                "uVar3": "bitFlag",
                "uVar4": "index"
            },
            "calling": [
                "FUN_0800b4d0"
            ],
            "called": [
                "FUN_0800b51c",
                "FUN_0800b520"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b5b0": {
            "entrypoint": "0x0800b5b0",
            "current_name": "FUNC_0800b5b0",
            "code": "\nvoid FUNC_0800b5b0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b5b0": "FUNC_0800b5b0"
            },
            "calling": [
                "FUN_08000188",
                "FUN_080001ac",
                "FUN_0800b3e8"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b5bc": {
            "entrypoint": "0x0800b5bc",
            "current_name": "FUNC_0800b5bc",
            "code": "\nvoid FUNC_0800b5bc(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b5bc": "FUNC_0800b5bc"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        }
    },
    "used_tokens": 186406,
    "layers": [
        [
            "FUN_08000188",
            "FUN_080001ac",
            "FUN_080001f8",
            "FUN_08000210",
            "FUN_08000220",
            "FUN_08000268",
            "FUN_080002a0",
            "FUN_080002b6",
            "FUN_080002f0",
            "FUN_08000310",
            "FUN_08000340",
            "FUN_08000374",
            "FUN_080003ec",
            "FUN_08000478",
            "FUN_080004ac",
            "FUN_080004fc",
            "FUN_0800056c",
            "FUN_080005b4",
            "FUN_0800184c",
            "FUN_080018cc",
            "FUN_080018fc",
            "FUN_0800192c",
            "FUN_0800195c",
            "FUN_08001994",
            "FUN_08001d4c",
            "FUN_08001ddc",
            "FUN_08001e98",
            "FUN_08001f00",
            "FUN_08002408",
            "FUN_080024c4",
            "FUN_080025e8",
            "FUN_08002638",
            "FUN_0800283a",
            "FUN_08002870",
            "FUN_08002896",
            "FUN_080028bc",
            "FUN_08002908",
            "FUN_08002978",
            "FUN_080029d8",
            "FUN_08002a94",
            "FUN_08002afc",
            "FUN_08002ba8",
            "FUN_08002c18",
            "FUN_08002e08",
            "FUN_08002edc",
            "FUN_08002ef0",
            "FUN_08002f24",
            "FUN_08002f40",
            "FUN_08002f74",
            "FUN_08002fac",
            "FUN_08002fd4",
            "FUN_08003004",
            "FUN_080035ec",
            "FUN_08003618",
            "FUN_0800369c",
            "FUN_080036c6",
            "FUN_080036f0",
            "FUN_08003740",
            "FUN_0800375c",
            "FUN_08003778",
            "FUN_080037fc",
            "FUN_08003826",
            "FUN_08003980",
            "FUN_080039a0",
            "FUN_080039bc",
            "FUN_08003a18",
            "FUN_08003a74",
            "FUN_08003b98",
            "FUN_08003f34",
            "FUN_08004030",
            "FUN_08004148",
            "FUN_080041a0",
            "FUN_08004228",
            "FUN_0800423c",
            "FUN_08004250",
            "FUN_080044e8",
            "FUN_080046d0",
            "FUN_08004900",
            "FUN_08004940",
            "FUN_08004bc0",
            "FUN_08004bf4",
            "FUN_08004c2a",
            "FUN_08004c48",
            "FUN_08004d2c",
            "FUN_08004d7c",
            "FUN_08004dd2",
            "FUN_08004e30",
            "FUN_080051b4",
            "FUN_08005238",
            "FUN_08005250",
            "FUN_0800525c",
            "FUN_080052ac",
            "FUN_080052dc",
            "FUN_08005324",
            "FUN_08005360",
            "FUN_080053a0",
            "FUN_08005760",
            "FUN_08005778",
            "FUN_08005790",
            "FUN_080057e4",
            "FUN_08005814",
            "FUN_0800583c",
            "FUN_0800585c",
            "FUN_0800587c",
            "FUN_080058a0",
            "FUN_08005900",
            "FUN_0800597c",
            "FUN_08005984",
            "FUN_080059b4",
            "FUN_080059f8",
            "FUN_08005a68",
            "FUN_08005a84",
            "FUN_08005a98",
            "FUN_08005bdc",
            "FUN_08005c30",
            "FUN_08005cec",
            "FUN_0800618c",
            "FUN_0800640c",
            "FUN_080064ec",
            "FUN_08006628",
            "FUN_08006680",
            "FUN_080066cc",
            "FUN_08006950",
            "FUN_08006998",
            "FUN_080069b4",
            "FUN_080069e4",
            "FUN_08006a18",
            "FUN_08006a58",
            "FUN_08006a8c",
            "FUN_08006ac0",
            "FUN_08006b00",
            "FUN_08006b54",
            "FUN_08006ba0",
            "FUN_08006c04",
            "FUN_08006c70",
            "FUN_08006c9c",
            "FUN_08006ce0",
            "FUN_08006cf6",
            "FUN_08006d2e",
            "FUN_08006d4a",
            "FUN_08006d66",
            "FUN_08006d72",
            "FUN_08006d8a",
            "FUN_08006d98",
            "FUN_08006dc4",
            "FUN_08006de0",
            "FUN_08006dfe",
            "FUN_08006e1a",
            "FUN_08006e88",
            "FUN_0800733e",
            "FUN_0800738e",
            "FUN_080073d4",
            "FUN_08007402",
            "FUN_08007430",
            "FUN_08007436",
            "FUN_080074c8",
            "FUN_08007520",
            "FUN_08007540",
            "FUN_0800756c",
            "FUN_080076c8",
            "FUN_08007756",
            "FUN_0800778c",
            "FUN_08007854",
            "FUN_08007884",
            "FUN_080078f4",
            "FUN_08007930",
            "FUN_080079c0",
            "FUN_080079e0",
            "FUN_08007a10",
            "FUN_08007a70",
            "FUN_08007ad0",
            "FUN_08007b70",
            "FUN_08007bc2",
            "FUN_08007bf0",
            "FUN_08007c40",
            "FUN_08007c5e",
            "FUN_08007c7c",
            "FUN_08007d08",
            "FUN_08007da8",
            "FUN_08007e08",
            "FUN_08007e1c",
            "FUN_08007e58",
            "FUN_08007e84",
            "FUN_08007ea4",
            "FUN_08007f54",
            "FUN_08008190",
            "FUN_08008250",
            "FUN_0800826a",
            "FUN_08008286",
            "FUN_080082d0",
            "FUN_080082d4",
            "FUN_0800854c",
            "FUN_0800856c",
            "FUN_08008590",
            "FUN_08008640",
            "FUN_0800881c",
            "FUN_08008894",
            "FUN_08008a02",
            "FUN_08008a74",
            "FUN_08008af0",
            "FUN_08008b00",
            "FUN_08008b10",
            "FUN_08008b24",
            "FUN_08008b4c",
            "FUN_08008b60",
            "FUN_08008b74",
            "FUN_08008ba0",
            "FUN_08008bf0",
            "FUN_08008c30",
            "FUN_08008cd8",
            "FUN_08008cdc",
            "FUN_08008e3c",
            "FUN_08008e44",
            "FUN_08008eec",
            "FUN_08009054",
            "FUN_0800919c",
            "FUN_080091fc",
            "FUN_08009204",
            "FUN_08009214",
            "FUN_08009228",
            "FUN_0800923c",
            "FUN_08009250",
            "FUN_08009264",
            "FUN_08009278",
            "FUN_08009318",
            "FUN_08009410",
            "FUN_080094c0",
            "FUN_080095b8",
            "FUN_08009654",
            "FUN_080096e8",
            "FUN_08009798",
            "thunk_FUN_08009990",
            "FUN_0800981c",
            "FUN_080098d0",
            "FUN_08009990",
            "FUN_08009b24",
            "FUN_08009d78",
            "FUN_0800a1bc",
            "FUN_0800a348",
            "FUN_0800a5a0",
            "FUN_0800adf0",
            "FUN_0800af78",
            "FUN_0800b2d4",
            "FUN_0800b2e0",
            "FUN_0800b2e8",
            "FUN_0800b3dc",
            "FUN_0800b3e8",
            "FUN_0800b430",
            "FUN_0800b524"
        ]
    ],
    "locked_functions": []
}