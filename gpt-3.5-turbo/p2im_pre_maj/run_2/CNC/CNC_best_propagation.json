{
    "functions": {
        "FUN_08000188": {
            "entrypoint": "0x08000188",
            "current_name": "initialize_flag_08000188",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08000194) */\n\nundefined4 initializeFlag_08000188(undefined4 input)\n\n{\n  if ((char)DAT_2000044c == '\\0') {\n    DAT_2000044c._0_1_ = '\\x01';\n  }\n  return input;\n}\n\n",
            "renaming": {
                "FUN_08000188": "initialize_flag_08000188",
                "param_1": "input"
            },
            "calling": [],
            "called": [
                "_init"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080001ac": {
            "entrypoint": "0x080001ac",
            "current_name": "concatenate_uint64_080001ac",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x080001b2) */\n\nundefined8 concatenate_uint64_080001ac(undefined4 first_param,undefined4 second_param)\n\n{\n  return CONCAT44(second_param,first_param);\n}\n\n",
            "renaming": {
                "FUN_080001ac": "concatenate_uint64_080001ac",
                "param_1": "first_param",
                "param_2": "second_param"
            },
            "calling": [
                "__libc_init_array"
            ],
            "called": [
                "_init"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080001c8": {
            "entrypoint": "0x080001c8",
            "current_name": "FUNC_080001c8",
            "code": "\nvoid FUNC_080001c8(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001c8": "FUNC_080001c8"
            },
            "calling": [
                "coolant_run"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080001d4": {
            "entrypoint": "0x080001d4",
            "current_name": "FUNC_080001d4",
            "code": "\nvoid FUNC_080001d4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001d4": "FUNC_080001d4"
            },
            "calling": [
                "coolant_stop"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080001e0": {
            "entrypoint": "0x080001e0",
            "current_name": "FUNC_080001e0",
            "code": "\nvoid FUNC_080001e0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001e0": "FUNC_080001e0"
            },
            "calling": [
                "coolant_run"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080001ec": {
            "entrypoint": "0x080001ec",
            "current_name": "FUNC_080001ec",
            "code": "\nvoid FUNC_080001ec(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001ec": "FUNC_080001ec"
            },
            "calling": [
                "coolant_stop"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080001f8": {
            "entrypoint": "0x080001f8",
            "current_name": "stop_coolant_system_080001f8",
            "code": "\nvoid stop_coolant_system_080001f8(void)\n\n{\n  DAT_20000468 = 0;\n  coolant_stop();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001f8": "stop_coolant_system_080001f8"
            },
            "calling": [
                "grbl_main"
            ],
            "called": [
                "coolant_stop"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000210": {
            "entrypoint": "0x08000210",
            "current_name": "turn_off_cooling_system_08000210",
            "code": "\nvoid turnOffCoolingSystem_08000210(void)\n\n{\n  turnOffCoolantMist();\n  turnOffCoolantFlood();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000210": "turn_off_cooling_system_08000210",
                "coolant_mist_off": "turnOffCoolantMist",
                "coolant_flood_off": "turnOffCoolantFlood"
            },
            "calling": [
                "mc_reset",
                "coolant_run",
                "coolant_init"
            ],
            "called": [
                "coolant_flood_off",
                "coolant_mist_off"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000220": {
            "entrypoint": "0x08000220",
            "current_name": "update_coolant_status_08000220",
            "code": "\nvoid updateCoolantStatus_08000220(char status)\n\n{\n  if (status != DAT_20000468) {\n    plan_synchronize();\n    if (status == '\\x01') {\n      coolant_flood_on();\n      DAT_20000468 = status;\n    }\n    else if (status == '\\x02') {\n      coolant_mist_on();\n      DAT_20000468 = status;\n    }\n    else {\n      coolant_stop();\n      DAT_20000468 = status;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000220": "update_coolant_status_08000220",
                "param_1": "status"
            },
            "calling": [
                "gc_execute_line"
            ],
            "called": [
                "coolant_stop",
                "coolant_flood_on",
                "coolant_mist_on",
                "plan_synchronize"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000268": {
            "entrypoint": "0x08000268",
            "current_name": "calculate_elapsed_time_08000268",
            "code": "\n\n\nint calculateElapsedTime_08000268(void)\n\n{\n  int timeStart;\n  \n  timeStart = getCurrentTick();\n  return (timeStart + 1) * 1000 - _DAT_e000e018 / 0xa8;\n}\n\n",
            "renaming": {
                "FUN_08000268": "calculate_elapsed_time_08000268",
                "iVar1": "timeStart",
                "HAL_GetTick": "getCurrentTick"
            },
            "calling": [
                "_delay_us"
            ],
            "called": [
                "HAL_GetTick"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080002a0": {
            "entrypoint": "0x080002a0",
            "current_name": "delay_function_080002a0",
            "code": "\nvoid delayFunction_080002a0(undefined4 delayTime)\n\n{\n  delay(delayTime);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080002a0": "delay_function_080002a0",
                "param_1": "delayTime",
                "HAL_Delay": "delay"
            },
            "calling": [
                "mc_dwell"
            ],
            "called": [
                "HAL_Delay"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080002b6": {
            "entrypoint": "0x080002b6",
            "current_name": "wait_until_time_080002b6",
            "code": "\nvoid waitUntilTime_080002b6(uint timeToWait)\n\n{\n  uint currentSeconds;\n  uint targetSeconds;\n  bool reachedTarget;\n  longlong currentMicroseconds;\n  undefined8 currentTime;\n  \n  currentMicroseconds = get_current_usecs();\n  targetSeconds = (uint)(currentMicroseconds + (ulonglong)timeToWait >> 0x20);\n  do {\n    currentTime = get_current_usecs();\n    currentSeconds = (uint)((ulonglong)currentTime >> 0x20);\n    reachedTarget = targetSeconds <= currentSeconds;\n    if (currentSeconds == targetSeconds) {\n      reachedTarget = (uint)(currentMicroseconds + (ulonglong)timeToWait) <= (uint)currentTime;\n    }\n  } while (!reachedTarget);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080002b6": "wait_until_time_080002b6",
                "param_1": "timeToWait",
                "uVar1": "currentSeconds",
                "uVar2": "targetSeconds",
                "bVar3": "reachedTarget",
                "lVar4": "currentMicroseconds",
                "uVar5": "currentTime"
            },
            "calling": [],
            "called": [
                "get_current_usecs"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080002f0": {
            "entrypoint": "0x080002f0",
            "current_name": "initialize_data_080002f0",
            "code": "\nvoid initializeData_080002f0(void)\n\n{\n  memset(&DAT_20000470,0xff,4);\n  DAT_2000046c = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080002f0": "initialize_data_080002f0"
            },
            "calling": [
                "eeprom_get_char",
                "eeprom_put_char",
                "memcpy_to_eeprom_with_checksum",
                "memcpy_from_eeprom_with_checksum"
            ],
            "called": [
                "memset"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000310": {
            "entrypoint": "0x08000310",
            "current_name": "get_eeprom_value_08000310",
            "code": "\nundefined getEEPROMValue_08000310(uint inputIndex)\n\n{\n  if (DAT_2000046c == 0) {\n    initializeEEPROM();\n  }\n  return (&DAT_20000470)[inputIndex & 0x3ff];\n}\n\n",
            "renaming": {
                "FUN_08000310": "get_eeprom_value_08000310",
                "param_1": "inputIndex",
                "eeprom_init": "initializeEEPROM"
            },
            "calling": [
                "memcpy_from_eeprom_with_checksum",
                "read_global_settings"
            ],
            "called": [
                "eeprom_init"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000340": {
            "entrypoint": "0x08000340",
            "current_name": "store_parameter_value_08000340",
            "code": "\nvoid storeParameterValue_08000340(uint index,undefined value)\n\n{\n  if (DAT_2000046c == 0) {\n    initializeEeprom();\n  }\n  (&DAT_20000470)[index & 0x3ff] = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000340": "store_parameter_value_08000340",
                "param_1": "index",
                "param_2": "value",
                "eeprom_init": "initializeEeprom"
            },
            "calling": [
                "write_global_settings",
                "memcpy_to_eeprom_with_checksum"
            ],
            "called": [
                "eeprom_init"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000374": {
            "entrypoint": "0x08000374",
            "current_name": "update_eeprom_with_checksum_08000374",
            "code": "\nvoid update_eeprom_with_checksum_08000374(int eeprom_start_address,char *data,int data_length)\n\n{\n  int remaining_data_length;\n  char *current_data;\n  int current_address;\n  char checksum;\n  \n  checksum = '\\0';\n  remaining_data_length = data_length;\n  current_data = data;\n  current_address = eeprom_start_address;\n  if (DAT_2000046c == 0) {\n    eeprom_init();\n    current_data = data;\n    current_address = eeprom_start_address;\n  }\n  for (; remaining_data_length != 0; remaining_data_length = remaining_data_length + -1) {\n    checksum = (checksum != '\\0') + *current_data;\n    eeprom_put_char(current_address,*current_data);\n    current_data = current_data + 1;\n    current_address = current_address + 1;\n  }\n  eeprom_put_char(current_address,checksum);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000374": "update_eeprom_with_checksum_08000374",
                "param_1": "eeprom_start_address",
                "param_2": "data",
                "param_3": "data_length",
                "local_1c": "remaining_data_length",
                "local_18": "current_data",
                "local_14": "current_address",
                "local_9": "checksum"
            },
            "calling": [
                "settings_store_startup_line",
                "write_global_settings",
                "settings_write_coord_data"
            ],
            "called": [
                "eeprom_init",
                "eeprom_put_char"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080003ec": {
            "entrypoint": "0x080003ec",
            "current_name": "verify_eeprom_data_080003ec",
            "code": "\nbool verify_eeprom_data_080003ec(char *data_buffer,int start_index,int length)\n\n{\n  char cVar1;\n  uint uVar2;\n  int remaining_length;\n  int current_index;\n  char *current_address;\n  byte checksum;\n  \n  checksum = 0;\n  remaining_length = length;\n  current_index = start_index;\n  current_address = data_buffer;\n  if (DAT_2000046c == 0) {\n    eeprom_init();\n    current_index = start_index;\n    current_address = data_buffer;\n  }\n  for (; remaining_length != 0; remaining_length = remaining_length + -1) {\n    cVar1 = eeprom_get_char(current_index);\n    checksum = cVar1 + (checksum != 0);\n    *current_address = cVar1;\n    current_index = current_index + 1;\n    current_address = current_address + 1;\n  }\n  uVar2 = eeprom_get_char(current_index);\n  return checksum == uVar2;\n}\n\n",
            "renaming": {
                "FUN_080003ec": "verify_eeprom_data_080003ec",
                "param_1": "data_buffer",
                "param_2": "start_index",
                "param_3": "length",
                "local_1c": "remaining_length",
                "local_18": "current_index",
                "local_14": "current_address",
                "local_9": "checksum"
            },
            "calling": [
                "settings_read_coord_data",
                "settings_read_startup_line",
                "read_global_settings"
            ],
            "called": [
                "eeprom_init",
                "eeprom_get_char"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000478": {
            "entrypoint": "0x08000478",
            "current_name": "initialize_params_08000478",
            "code": "\nvoid initializeParams_08000478(undefined inputParam1,undefined inputParam2,undefined inputParam3)\n\n{\n  DAT_20000e89 = inputParam1;\n  DAT_20000e8a = inputParam2;\n  DAT_20000e8b = inputParam3;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000478": "initialize_params_08000478",
                "param_1": "inputParam1",
                "param_2": "inputParam2",
                "param_3": "inputParam3"
            },
            "calling": [
                "gc_execute_line",
                "gc_init"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080004ac": {
            "entrypoint": "0x080004ac",
            "current_name": "initialize_data_080004ac",
            "code": "\nvoid initializeData_080004ac(void)\n\n{\n  int errorCode;\n  \n  memset(&DAT_20000e70,0,0x38);\n  DAT_20000e78 = DAT_20000ecc;\n  select_plane(0,1,2);\n  DAT_20000e74 = 1;\n  errorCode = settings_read_coord_data(DAT_20000e8c,&DAT_20000e90);\n  if (errorCode == 0) {\n    report_status_message(10);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080004ac": "initialize_data_080004ac",
                "iVar1": "errorCode"
            },
            "calling": [
                "grbl_main"
            ],
            "called": [
                "select_plane",
                "settings_read_coord_data",
                "report_status_message",
                "memset"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080004fc": {
            "entrypoint": "0x080004fc",
            "current_name": "calculate_divisions_080004fc",
            "code": "\nvoid calculateDivisions_080004fc(undefined4 value1,undefined4 value2,undefined4 value3)\n\n{\n  undefined4 convertedValue;\n  \n  convertedValue = __floatsisf(value1);\n  DAT_20000e7c = __aeabi_fdiv(convertedValue,DAT_20000ebc);\n  convertedValue = __floatsisf(value2);\n  DAT_20000e80 = __aeabi_fdiv(convertedValue,DAT_20000ec0);\n  convertedValue = __floatsisf(value3);\n  DAT_20000e84 = __aeabi_fdiv(convertedValue,DAT_20000ec4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080004fc": "calculate_divisions_080004fc",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "uVar1": "convertedValue"
            },
            "calling": [
                "sys_sync_current_position"
            ],
            "called": [
                "__floatsisf",
                "__aeabi_fdiv"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800056c": {
            "entrypoint": "0x0800056c",
            "current_name": "convert_and_truncate_0800056c",
            "code": "\nundefined4 convertAndTruncate_0800056c(undefined4 input)\n\n{\n  undefined8 convertedValue;\n  \n  if (DAT_20000e73 != '\\0') {\n    convertedValue = __aeabi_f2d(input);\n    convertedValue = __muldf3((int)convertedValue,(int)((ulonglong)convertedValue >> 0x20),0x66666666,0x40396666);\n    input = __truncdfsf2((int)convertedValue,(int)((ulonglong)convertedValue >> 0x20));\n  }\n  return input;\n}\n\n",
            "renaming": {
                "FUN_0800056c": "convert_and_truncate_0800056c",
                "param_1": "input",
                "uVar1": "convertedValue"
            },
            "calling": [
                "gc_execute_line"
            ],
            "called": [
                "__aeabi_f2d",
                "__truncdfsf2",
                "__muldf3"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080005b4": {
            "entrypoint": "0x080005b4",
            "current_name": "process_command_080005b4",
            "code": "\nchar processCommand_080005b4(undefined4 commandType)\n\n{\n  int result;\n  undefined4 temp;\n  char error;\n  uint tempIndex;\n  undefined4 temp2;\n  undefined8 tempDouble;\n  undefined8 hypotenuse;\n  undefined8 tempDouble2;\n  undefined4 coordData [4];\n  undefined4 xCoord;\n  undefined4 yCoord;\n  undefined4 zCoord;\n  undefined4 tempStack1;\n  undefined4 tempStack2;\n  undefined4 coordStack [6];\n  undefined4 coordinateValue;\n  byte character;\n  undefined flag;\n  undefined4 arcRadius;\n  undefined4 arcCenterX;\n  undefined isClockwise;\n  uint distance;\n  byte loopIndex1;\n  byte loopIndex2;\n  byte loopIndex3;\n  byte flag2;\n  char operationType;\n  uint arcEndZ;\n  undefined4 arcStartX;\n  sbyte flag3;\n  char arcType;\n  char plane;\n  undefined4 feedrate;\n  byte coordFlag;\n  ushort coordFlags;\n  uint parameterIndex;\n  \n  if (DAT_20000ea9 == '\\x06') {\n    error = '\\f';\n  }\n  else {\n    flag = 0;\n    coordFlags = 0;\n    coordFlag = 0;\n    feedrate = 0xbf800000;\n    plane = '\\0';\n    arcType = '\\0';\n    memset(coordStack + 3,0,0xc);\n    memset(coordStack,0,0xc);\n    DAT_20000e70 = '\\0';\n    flag3 = 0;\n    while (result = next_statement(&character,coordStack + 6,commandType,&flag), result != 0) {\n      tempDouble = __aeabi_f2d(coordinateValue);\n      tempDouble = trunc((int)tempDouble,(int)((ulonglong)tempDouble >> 0x20));\n      parameterIndex = __aeabi_d2iz((int)tempDouble,(int)((ulonglong)tempDouble >> 0x20));\n      if (character == 0x47) {\n        switch(parameterIndex) {\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n        case 0x50:\n          flag3 = 2;\n          break;\n        case 4:\n        case 10:\n        case 0x1c:\n        case 0x1e:\n        case 0x35:\n        case 0x5c:\n          flag3 = 1;\n          break;\n        case 0x11:\n        case 0x12:\n        case 0x13:\n          flag3 = 3;\n          break;\n        case 0x14:\n        case 0x15:\n          flag3 = 7;\n          break;\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n          flag3 = 9;\n          break;\n        case 0x5a:\n        case 0x5b:\n          flag3 = 4;\n          break;\n        case 0x5d:\n        case 0x5e:\n          flag3 = 6;\n        }\n        switch(parameterIndex) {\n        case 0:\n          DAT_20000e71 = '\\0';\n          break;\n        case 1:\n          DAT_20000e71 = '\\x01';\n          break;\n        case 2:\n          DAT_20000e71 = '\\x02';\n          break;\n        case 3:\n          DAT_20000e71 = '\\x03';\n          break;\n        case 4:\n          arcType = '\\x01';\n          break;\n        default:\n          DAT_20000e70 = '\\x03';\n          break;\n        case 10:\n          arcType = '\\x02';\n          break;\n        case 0x11:\n          select_plane(0,1,2);\n          break;\n        case 0x12:\n          select_plane(2,0,1);\n          break;\n        case 0x13:\n          select_plane(1,2,0);\n          break;\n        case 0x14:\n          DAT_20000e73 = 1;\n          break;\n        case 0x15:\n          DAT_20000e73 = 0;\n          break;\n        case 0x1c:\n        case 0x1e:\n          temp = __aeabi_fmul(coordinateValue,0x41200000);\n          tempDouble = __aeabi_f2d(temp);\n          tempDouble = trunc((int)tempDouble,(int)((ulonglong)tempDouble >> 0x20));\n          parameterIndex = __aeabi_d2iz((int)tempDouble,(int)((ulonglong)tempDouble >> 0x20));\n          switch(parameterIndex) {\n          case 0x118:\n            arcType = '\\x03';\n            break;\n          case 0x119:\n            arcType = '\\x04';\n            break;\n          default:\n            DAT_20000e70 = '\\x03';\n            break;\n          case 300:\n            arcType = '\\x05';\n            break;\n          case 0x12d:\n            arcType = '\\x06';\n          }\n          break;\n        case 0x35:\n          plane = '\\x01';\n          break;\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n          DAT_20000e8c = (char)parameterIndex - 0x36;\n          break;\n        case 0x50:\n          DAT_20000e71 = '\\x04';\n          break;\n        case 0x5a:\n          DAT_20000e74 = '\\x01';\n          break;\n        case 0x5b:\n          DAT_20000e74 = '\\0';\n          break;\n        case 0x5c:\n          temp = __aeabi_fmul(coordinateValue,0x41200000);\n          tempDouble = __aeabi_f2d(temp);\n          tempDouble = trunc((int)tempDouble,(int)((ulonglong)tempDouble >> 0x20));\n          parameterIndex = __aeabi_d2iz((int)tempDouble,(int)((ulonglong)tempDouble >> 0x20));\n          if (parameterIndex == 0x398) {\n            arcType = '\\a';\n          }\n          else if (parameterIndex == 0x399) {\n            arcType = '\\b';\n          }\n          else {\n            DAT_20000e70 = '\\x03';\n          }\n          break;\n        case 0x5d:\n          DAT_20000e72 = '\\x01';\n          break;\n        case 0x5e:\n          DAT_20000e72 = '\\0';\n        }\n      }\n      else if (character == 0x4d) {\n        if (parameterIndex == 0x1e) {\nLAB_08000b96:\n          flag3 = 5;\n        }\n        else if ((int)parameterIndex < 0x1f) {\n          if ((int)parameterIndex < 3) {\n            if (-1 < (int)parameterIndex) goto LAB_08000b96;\n          }\n          else if (parameterIndex - 3 < 3) {\n            flag3 = 8;\n          }\n        }\n        switch(parameterIndex) {\n        case 0:\n          DAT_20000e75 = '\\x01';\n          break;\n        case 1:\n          break;\n        case 2:\n        case 0x1e:\n          DAT_20000e75 = '\\x02';\n          break;\n        case 3:\n          DAT_20000e76 = '\\x01';\n          break;\n        case 4:\n          DAT_20000e76 = -1;\n          break;\n        case 5:\n          DAT_20000e76 = '\\0';\n          break;\n        default:\n          DAT_20000e70 = '\\x03';\n          break;\n        case 7:\n          DAT_20000e77 = 2;\n          break;\n        case 8:\n          DAT_20000e77 = 1;\n          break;\n        case 9:\n          DAT_20000e77 = 0;\n        }\n      }\n      if (flag3 != 0) {\n        if (((int)(uint)coordFlags >> flag3 & 1U) == 0) {\n          coordFlags = coordFlags | (ushort)(1 << flag3);\n        }\n        else {\n          DAT_20000e70 = '\\x05';\n        }\n        flag3 = 0;\n      }\n    }\n    error = DAT_20000e70;\n    if (DAT_20000e70 == '\\0') {\n      arcStartX = 0;\n      arcEndZ = 0;\n      operationType = '\\0';\n      flag = 0;\nswitchD_08000d18_caseD_47:\n      result = next_statement(&character,coordStack + 6,commandType,&flag);\n      if (result != 0) {\n        switch(character) {\n        case 0x46:\n          result = __aeabi_fcmple(coordinateValue,0);\n          if (result != 0) {\n            DAT_20000e70 = '\\x06';\n          }\n          if (DAT_20000e72 == '\\0') {\n            DAT_20000e78 = to_millimeters(coordinateValue);\n          }\n          else {\n            feedrate = to_millimeters(coordinateValue);\n          }\n          break;\n        case 0x47:\n        case 0x4d:\n        case 0x4e:\n          break;\n        default:\n          DAT_20000e70 = '\\x03';\n          break;\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n          tempIndex = (uint)character;\n          temp = to_millimeters(coordinateValue);\n          coordStack[tempIndex - 0x49] = temp;\n          break;\n        case 0x4c:\n          tempDouble = __aeabi_f2d(coordinateValue);\n          tempDouble = trunc((int)tempDouble,(int)((ulonglong)tempDouble >> 0x20));\n          operationType = __aeabi_d2uiz((int)tempDouble,(int)((ulonglong)tempDouble >> 0x20));\n          break;\n        case 0x50:\n          arcStartX = coordinateValue;\n          break;\n        case 0x52:\n          arcEndZ = to_millimeters(coordinateValue);\n          break;\n        case 0x53:\n          result = __aeabi_fcmplt(coordinateValue,0);\n          if (result != 0) {\n            DAT_20000e70 = '\\x06';\n          }\n          break;\n        case 0x54:\n          result = __aeabi_fcmplt(coordinateValue,0);\n          if (result != 0) {\n            DAT_20000e70 = '\\x06';\n          }\n          tempDouble = __aeabi_f2d(coordinateValue);\n          tempDouble = trunc((int)tempDouble,(int)((ulonglong)tempDouble >> 0x20));\n          DAT_20000e88 = __aeabi_d2uiz((int)tempDouble,(int)((ulonglong)tempDouble >> 0x20));\n          break;\n        case 0x58:\n          coordStack[3] = to_millimeters(coordinateValue);\n          coordFlag = coordFlag | 1;\n          break;\n        case 0x59:\n          coordStack[4] = to_millimeters(coordinateValue);\n          coordFlag = coordFlag | 2;\n          break;\n        case 0x5a:\n          coordStack[5] = to_millimeters(coordinateValue);\n          coordFlag = coordFlag | 4;\n        }\n        goto switchD_08000d18_caseD_47;\n      }\n      error = DAT_20000e70;\n      if (DAT_20000e70 == '\\0') {\n        if (DAT_20000ea9 != '\\a') {\n          spindle_run((int)DAT_20000e76);\n          coolant_run(DAT_20000e77);\n        }\n        if ((coordFlags & 0x200) != 0) {\n          result = settings_read_coord_data(DAT_20000e8c,&zCoord);\n          if (result == 0) {\n            return '\\n';\n          }\n          DAT_20000e90 = zCoord;\n          DAT_20000e94 = tempStack1;\n          DAT_20000e98 = tempStack2;\n        }\n        switch(arcType) {\n        case '\\x01':\n          result = __aeabi_fcmplt(arcStartX,0);\n          if (result == 0) {\n            if (DAT_20000ea9 != '\\a') {\n              mc_dwell(arcStartX);\n            }\n          }\n          else {\n            DAT_20000e70 = '\\x06';\n          }\n          break;\n        case '\\x02':\n          tempDouble = __aeabi_f2d(arcStartX);\n          tempDouble = trunc((int)tempDouble,(int)((ulonglong)tempDouble >> 0x20));\n          parameterIndex = __aeabi_d2iz((int)tempDouble,(int)((ulonglong)tempDouble >> 0x20));\n          if ((((operationType == '\\x02') || (operationType == '\\x14')) && (-1 < (int)parameterIndex)) &&\n             ((int)parameterIndex < 7)) {\n            if ((coordFlag == 0) && (operationType == '\\x02')) {\n              DAT_20000e70 = '\\x06';\n            }\n            else {\n              if ((int)parameterIndex < 1) {\n                parameterIndex = (uint)DAT_20000e8c;\n              }\n              else {\n                parameterIndex = parameterIndex - 1;\n              }\n              result = settings_read_coord_data(parameterIndex & 0xff,coordData);\n              if (result == 0) {\n                return '\\n';\n              }\n              for (flag2 = 0; flag2 < 3; flag2 = flag2 + 1) {\n                if (((int)(uint)coordFlag >> flag2 & 1U) != 0) {\n                  if (operationType == '\\x14') {\n                    tempIndex = (uint)flag2;\n                    temp = __aeabi_fsub(*(undefined4 *)(&DAT_20000e74 + (flag2 + 2) * 4),\n                                         coordStack[flag2 + 3]);\n                    coordData[tempIndex] = temp;\n                  }\n                  else {\n                    coordData[flag2] = coordStack[flag2 + 3];\n                  }\n                }\n              }\n              settings_write_coord_data(parameterIndex & 0xff,coordData);\n              if (parameterIndex == DAT_20000e8c) {\n                DAT_20000e90 = coordData[0];\n                DAT_20000e94 = coordData[1];\n                DAT_20000e98 = coordData[2];\n              }\n            }\n          }\n          else {\n            DAT_20000e70 = '\\x03';\n          }\n          coordFlag = 0;\n          break;\n        case '\\x03':\n        case '\\x05':\n          if (coordFlag != 0) {\n            for (loopIndex3 = 0; loopIndex3 < 3; loopIndex3 = loopIndex3 + 1) {\n              if (((int)(uint)coordFlag >> loopIndex3 & 1U) == 0) {\n                coordStack[loopIndex3 + 3] = *(undefined4 *)(&DAT_20000e74 + (loopIndex3 + 2) * 4);\n              }\n              else if (DAT_20000e74 == '\\0') {\n                tempIndex = (uint)loopIndex3;\n                temp = __addsf3(coordStack[loopIndex3 + 3],\n                                 *(undefined4 *)(&DAT_20000e74 + (loopIndex3 + 2) * 4));\n                coordStack[tempIndex + 3] = temp;\n              }\n              else {\n                temp2 = coordStack[loopIndex3 + 3];\n                temp = __addsf3(*(undefined4 *)(&DAT_20000e70 + (loopIndex3 + 8) * 4),\n                                 *(undefined4 *)(&DAT_20000e74 + (loopIndex3 + 10) * 4));\n                tempIndex = (uint)loopIndex3;\n                temp = __addsf3(temp2,temp);\n                coordStack[tempIndex + 3] = temp;\n              }\n            }\n            mc_line(coordStack[3],coordStack[4],coordStack[5],DAT_20000ed0,0);\n          }\n          if (arcType == '\\x05') {\n            result = settings_read_coord_data(7,coordData + 3);\n            if (result == 0) {\n              return '\\n';\n            }\n          }\n          else {\n            result = settings_read_coord_data(6,coordData + 3);\n            if (result == 0) {\n              return '\\n';\n            }\n          }\n          mc_line(coordData[3],xCoord,yCoord,DAT_20000ed0,0);\n          DAT_20000e7c = coordData[3];\n          DAT_20000e80 = xCoord;\n          DAT_20000e84 = yCoord;\n          coordFlag = 0;\n          break;\n        case '\\x04':\n        case '\\x06':\n          if (arcType == '\\x06') {\n            settings_write_coord_data(7,&DAT_20000e7c);\n          }\n          else {\n            settings_write_coord_data(6,&DAT_20000e7c);\n          }\n          break;\n        case '\\a':\n          if (coordFlag == 0) {\n            DAT_20000e70 = '\\x06';\n          }\n          else {\n            for (loopIndex2 = 0; loopIndex2 < 3; loopIndex2 = loopIndex2 + 1) {\n              if (((int)(uint)coordFlag >> loopIndex2 & 1U) != 0) {\n                temp = __aeabi_fsub(*(undefined4 *)(&DAT_20000e74 + (loopIndex2 + 2) * 4),\n                                     *(undefined4 *)(&DAT_20000e70 + (loopIndex2 + 8) * 4));\n                tempIndex = (uint)loopIndex2;\n                temp = __aeabi_fsub(temp,coordStack[loopIndex2 + 3]);\n                *(undefined4 *)(&DAT_20000e74 + (tempIndex + 10) * 4) = temp;\n              }\n            }\n          }\n          coordFlag = 0;\n          break;\n        case '\\b':\n          memset(&DAT_20000e9c,0,0xc);\n        }\n        if (((coordFlags & 4) != 0) || (coordFlag != 0)) {\n          if ((DAT_20000e72 != '\\0') &&\n             ((result = __aeabi_fcmplt(feedrate,0), result != 0 && (DAT_20000e71 != '\\x04')))) {\n            DAT_20000e70 = '\\x06';\n          }\n          if (((plane != '\\0') && (DAT_20000e71 != '\\0')) && (DAT_20000e71 != '\\x01')) {\n            DAT_20000e70 = '\\x06';\n          }\n          if (DAT_20000e70 != '\\0') {\n            return DAT_20000e70;\n          }\n          for (loopIndex1 = 0; loopIndex1 < 3; loopIndex1 = loopIndex1 + 1) {\n            if (((int)(uint)coordFlag >> loopIndex1 & 1U) == 0) {\n              coordStack[loopIndex1 + 3] = *(undefined4 *)(&DAT_20000e74 + (loopIndex1 + 2) * 4);\n            }\n            else if (plane == '\\0') {\n              if (DAT_20000e74 == '\\0') {\n                tempIndex = (uint)loopIndex1;\n                temp = __addsf3(coordStack[loopIndex1 + 3],\n                                 *(undefined4 *)(&DAT_20000e74 + (loopIndex1 + 2) * 4));\n                coordStack[tempIndex + 3] = temp;\n              }\n              else {\n                temp2 = coordStack[loopIndex1 + 3];\n                temp = __addsf3(*(undefined4 *)(&DAT_20000e70 + (loopIndex1 + 8) * 4),\n                                 *(undefined4 *)(&DAT_20000e74 + (loopIndex1 + 10) * 4));\n                tempIndex = (uint)loopIndex1;\n                temp = __addsf3(temp2,temp);\n                coordStack[tempIndex + 3] = temp;\n              }\n            }\n          }\n          switch(DAT_20000e71) {\n          case '\\0':\n            if (coordFlag == 0) {\n              DAT_20000e70 = '\\x06';\n            }\n            else {\n              mc_line(coordStack[3],coordStack[4],coordStack[5],DAT_20000ed0,0);\n            }\n            break;\n          case '\\x01':\n            if (coordFlag == 0) {\n              DAT_20000e70 = '\\x06';\n            }\n            else {\n              temp = feedrate;\n              if (DAT_20000e72 == '\\0') {\n                temp = DAT_20000e78;\n              }\n              mc_line(coordStack[3],coordStack[4],coordStack[5],temp,DAT_20000e72);\n            }\n            break;\n          case '\\x02':\n          case '\\x03':\n            coordFlag = coordFlag & ~(byte)(1 << DAT_20000e8b);\n            if ((coordFlag == 0) ||\n               (((result = __aeabi_fcmpeq(arcEndZ,0), result != 0 &&\n                 (result = __aeabi_fcmpeq(coordStack[DAT_20000e89],0), result != 0)) &&\n                (result = __aeabi_fcmpeq(coordStack[DAT_20000e8a],0), result != 0)))) {\n              DAT_20000e70 = '\\x06';\n            }\n            else {\n              result = __aeabi_fcmpeq(arcEndZ,0);\n              if (result == 0) {\n                arcCenterX = __aeabi_fsub(coordStack[DAT_20000e89 + 3],\n                                        *(undefined4 *)(&DAT_20000e74 + (DAT_20000e89 + 2) * 4));\n                arcRadius = __aeabi_fsub(coordStack[DAT_20000e8a + 3],\n                                        *(undefined4 *)(&DAT_20000e74 + (DAT_20000e8a + 2) * 4));\n                memset(coordStack,0,0xc);\n                temp = __aeabi_fmul(arcEndZ,0x40800000);\n                temp = __aeabi_fmul(temp,arcEndZ);\n                temp2 = __aeabi_fmul(arcCenterX,arcCenterX);\n                temp = __aeabi_fsub(temp,temp2);\n                temp2 = __aeabi_fmul(arcRadius,arcRadius);\n                distance = __aeabi_fsub(temp,temp2);\n                result = __aeabi_fcmplt(distance,0);\n                if (result != 0) {\n                  DAT_20000e70 = 4;\n                  return '\\x04';\n                }\n                tempDouble = __aeabi_f2d(distance);\n                tempDouble = sqrt((int)tempDouble,(int)((ulonglong)tempDouble >> 0x20));\n                hypotenuse = __aeabi_f2d(arcCenterX);\n                tempDouble2 = __aeabi_f2d(arcRadius);\n                hypotenuse = hypot((int)hypotenuse,(int)((ulonglong)hypotenuse >> 0x20),(int)tempDouble2,\n                              (int)((ulonglong)tempDouble2 >> 0x20));\n                tempDouble = __divdf3((int)tempDouble,(uint)((ulonglong)tempDouble >> 0x20) ^ 0x80000000,(int)hypotenuse\n                                 ,(int)((ulonglong)hypotenuse >> 0x20));\n                distance = __truncdfsf2((int)tempDouble,(int)((ulonglong)tempDouble >> 0x20));\n                if (DAT_20000e71 == '\\x03') {\n                  distance = distance ^ 0x80000000;\n                }\n                result = __aeabi_fcmplt(arcEndZ,0);\n                if (result != 0) {\n                  distance = distance ^ 0x80000000;\n                  arcEndZ = arcEndZ ^ 0x80000000;\n                }\n                temp = __aeabi_fmul(arcRadius,distance);\n                temp = __aeabi_fsub(arcCenterX,temp);\n                tempIndex = (uint)DAT_20000e89;\n                temp = __aeabi_fmul(temp,0x3f000000);\n                coordStack[tempIndex] = temp;\n                temp = __aeabi_fmul(arcCenterX,distance);\n                temp = __addsf3(temp,arcRadius);\n                tempIndex = (uint)DAT_20000e8a;\n                temp = __aeabi_fmul(temp,0x3f000000);\n                coordStack[tempIndex] = temp;\n              }\n              else {\n                tempDouble = __aeabi_f2d(coordStack[DAT_20000e89]);\n                hypotenuse = __aeabi_f2d(coordStack[DAT_20000e8a]);\n                tempDouble = hypot((int)tempDouble,(int)((ulonglong)tempDouble >> 0x20),(int)hypotenuse,\n                              (int)((ulonglong)hypotenuse >> 0x20));\n                arcEndZ = __truncdfsf2((int)tempDouble,(int)((ulonglong)tempDouble >> 0x20));\n              }\n              isClockwise = DAT_20000e71 == '\\x02';\n              temp = feedrate;\n              if (DAT_20000e72 == '\\0') {\n                temp = DAT_20000e78;\n              }\n              mc_arc(&DAT_20000e7c,coordStack + 3,coordStack,DAT_20000e89,DAT_20000e8a,DAT_20000e8b,\n                     temp,DAT_20000e72,arcEndZ,isClockwise);\n            }\n            break;\n          case '\\x04':\n            if (coordFlag != 0) {\n              DAT_20000e70 = '\\x06';\n            }\n          }\n          if (DAT_20000e70 != '\\0') {\n            return DAT_20000e70;\n          }\n          DAT_20000e7c = coordStack[3];\n          DAT_20000e80 = coordStack[4];\n          DAT_20000e84 = coordStack[5];\n        }\n        error = DAT_20000e70;\n        if (DAT_20000e75 != '\\0') {\n          plan_synchronize();\n          DAT_20000eb8 = 0;\n          if (DAT_20000e75 == '\\x02') {\n            mc_reset();\n            error = DAT_20000e70;\n          }\n          else {\n            DAT_20000e75 = '\\0';\n            error = DAT_20000e70;\n          }\n        }\n      }\n    }\n  }\n  return error;\n}\n\n",
            "renaming": {
                "FUN_080005b4": "process_command_080005b4",
                "param_1": "commandType",
                "iVar1": "result",
                "uVar2": "temp",
                "cVar3": "error",
                "uVar4": "tempIndex",
                "uVar5": "temp2",
                "uVar6": "tempDouble",
                "uVar7": "hypotenuse",
                "uVar8": "tempDouble2",
                "local_94": "coordData",
                "local_84": "xCoord",
                "local_80": "yCoord",
                "local_7c": "zCoord",
                "uStack_78": "tempStack1",
                "uStack_74": "tempStack2",
                "auStack_70": "coordStack",
                "local_58": "coordinateValue",
                "local_52": "character",
                "local_51": "flag",
                "local_50": "arcRadius",
                "local_4c": "arcCenterX",
                "local_45": "isClockwise",
                "local_44": "distance",
                "local_3d": "loopIndex1",
                "local_3c": "loopIndex2",
                "local_3b": "loopIndex3",
                "local_3a": "flag2",
                "local_39": "operationType",
                "local_38": "arcEndZ",
                "local_34": "arcStartX",
                "local_2f": "flag3",
                "local_2e": "arcType",
                "local_2d": "plane",
                "local_2c": "feedrate",
                "local_27": "coordFlag",
                "local_26": "coordFlags",
                "local_24": "parameterIndex"
            },
            "calling": [
                "protocol_execute_line",
                "protocol_execute_startup"
            ],
            "called": [
                "mc_line",
                "mc_arc",
                "__aeabi_fsub",
                "__aeabi_d2iz",
                "__addsf3",
                "next_statement",
                "__aeabi_d2uiz",
                "__aeabi_fcmplt",
                "__divdf3",
                "memset",
                "sqrt",
                "trunc",
                "__aeabi_fmul",
                "__aeabi_fcmple",
                "mc_dwell",
                "plan_synchronize",
                "__aeabi_f2d",
                "select_plane",
                "settings_read_coord_data",
                "mc_reset",
                "spindle_run",
                "to_millimeters",
                "hypot",
                "__truncdfsf2",
                "coolant_run",
                "settings_write_coord_data",
                "__aeabi_fcmpeq"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800184c": {
            "entrypoint": "0x0800184c",
            "current_name": "check_and_update_value_0800184c",
            "code": "\nundefined4 checkAndUpdateValue_0800184c(byte *result,undefined4 limit,int base,byte *index)\n\n{\n  int status;\n  undefined4 returnValue;\n  \n  if (*(char *)(base + (uint)*index) == '\\0') {\n    returnValue = 0;\n  }\n  else {\n    *result = *(byte *)(base + (uint)*index);\n    if ((*result < 0x41) || (0x5a < *result)) {\n      DAT_20000e70 = 2;\n      returnValue = 0;\n    }\n    else {\n      *index = *index + 1;\n      status = read_float(base,index,limit);\n      if (status == 0) {\n        DAT_20000e70 = 1;\n        returnValue = 0;\n      }\n      else {\n        returnValue = 1;\n      }\n    }\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_0800184c": "check_and_update_value_0800184c",
                "param_1": "result",
                "param_2": "limit",
                "param_3": "base",
                "param_4": "index",
                "iVar1": "status",
                "uVar2": "returnValue"
            },
            "calling": [
                "gc_execute_line"
            ],
            "called": [
                "read_float"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080018cc": {
            "entrypoint": "0x080018cc",
            "current_name": "update_data_080018cc",
            "code": "\n\n\nvoid updateData_080018cc(uint newValue)\n\n{\n  _DAT_40021014 = newValue | _DAT_40021014 & 0xfffffaaf;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080018cc": "update_data_080018cc",
                "param_1": "newValue"
            },
            "calling": [
                "homing_cycle"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080018fc": {
            "entrypoint": "0x080018fc",
            "current_name": "merge_bits_080018fc",
            "code": "\n\n\nvoid mergeBits_080018fc(uint inputValue)\n\n{\n  _DAT_40021014 = inputValue | _DAT_40021014 & 0xfffff55f;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080018fc": "merge_bits_080018fc",
                "param_1": "inputValue"
            },
            "calling": [
                "homing_cycle"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800192c": {
            "entrypoint": "0x0800192c",
            "current_name": "extract_flag_from_binary_0800192c",
            "code": "\nvoid extractFlagFromBinary_0800192c(void)\n\n{\n  DAT_20000e4c = (uint)((DAT_20000ee4 & 8) != 0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800192c": "extract_flag_from_binary_0800192c"
            },
            "calling": [
                "settings_store_global_setting",
                "grbl_main"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800195c": {
            "entrypoint": "0x0800195c",
            "current_name": "reset_and_toggle_flag_0800195c",
            "code": "\nvoid reset_and_toggle_flag_0800195c(void)\n\n{\n  if ((DAT_20000ea9 != '\\x06') && ((DAT_20000eaa & 0x20) == 0)) {\n    mc_reset();\n    DAT_20000eaa = DAT_20000eaa | 0x40;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800195c": "reset_and_toggle_flag_0800195c"
            },
            "calling": [
                "FUN_080074c8"
            ],
            "called": [
                "mc_reset"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001994": {
            "entrypoint": "0x08001994",
            "current_name": "calculate_value_08001994",
            "code": "\nvoid calculateValue_08001994(byte flag1,char flag2,char flag3,undefined4 param_4)\n\n{\n  undefined4 result1;\n  uint maxValue;\n  undefined8 temp1;\n  undefined8 temp2;\n  byte localFlag;\n  uint value1;\n  uint value2;\n  uint value3;\n  ushort variable1;\n  uint variable2;\n  int variable3;\n  undefined4 variable4;\n  uint variable5;\n  uint variable6;\n  ushort variable7;\n  uint variable8;\n  uint variable9;\n  int variable10;\n  int variable11;\n  int variable12;\n  int variable13;\n  ushort variable14;\n  uint variable15;\n  char localFlag2;\n  \n  localFlag2 = '\\0';\n  memset(&value1,0,0xc);\n  if ((flag1 & 1) != 0) {\n    localFlag2 = localFlag2 + '\\x01';\n    temp1 = __aeabi_f2d(DAT_20000ebc);\n    value1 = lround((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  }\n  if ((flag1 & 2) != 0) {\n    localFlag2 = localFlag2 + '\\x01';\n    temp1 = __aeabi_f2d(DAT_20000ec0);\n    value2 = lround((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  }\n  if ((flag1 & 4) != 0) {\n    localFlag2 = localFlag2 + '\\x01';\n    temp1 = __aeabi_f2d(DAT_20000ec4);\n    value3 = lround((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  }\n  maxValue = value3;\n  if (value3 < value2) {\n    maxValue = value2;\n  }\n  variable5 = value1;\n  if (value1 < maxValue) {\n    variable5 = maxValue;\n  }\n  temp1 = __floatunsidf(variable5);\n  temp2 = __floatunsidf(localFlag2);\n  temp2 = sqrt((int)temp2,(int)((ulonglong)temp2 >> 0x20));\n  temp1 = __divdf3((int)temp1,(int)((ulonglong)temp1 >> 0x20),(int)temp2,\n                   (int)((ulonglong)temp2 >> 0x20));\n  variable4 = __truncdfsf2((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  result1 = __aeabi_fmul(DAT_20000edc,variable4);\n  result1 = __aeabi_fdiv(result1,0x453b8000);\n  temp1 = __aeabi_f2d(result1);\n  temp1 = ceil((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  variable3 = __aeabi_d2uiz((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  temp1 = __floatunsidf(localFlag2);\n  temp1 = sqrt((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  temp2 = __aeabi_f2d(param_4);\n  temp1 = __muldf3((int)temp1,(int)((ulonglong)temp1 >> 0x20),(int)temp2,\n                   (int)((ulonglong)temp2 >> 0x20));\n  result1 = __truncdfsf2((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  result1 = __aeabi_fmul(variable4,result1);\n  result1 = __aeabi_fdiv(0x4c64e1c0,result1);\n  temp1 = __aeabi_f2d(result1);\n  variable2 = lround((int)temp1,(int)((ulonglong)temp1 >> 0x20));\n  variable15 = 75000;\n  if (variable2 < 75000) {\n    variable15 = variable2;\n  }\n  variable1 = DAT_20000ed4;\n  variable14 = DAT_20000ed6 ^ DAT_20000ee6 & 0xaa0;\n  if (flag2 == '\\0') {\n    variable14 = variable14 ^ 0xaa0;\n  }\n  merge_bits_080018fc(variable14);\n  update_data_080018cc(variable1);\n  variable11 = -(variable5 >> 1);\n  variable10 = variable15 - DAT_20000ec9;\n  variable9 = 0;\n  variable8 = 10000;\n  localFlag = flag1;\n  variable12 = variable11;\n  variable13 = variable11;\n  while( true ) {\n    variable7 = variable1;\n    variable6 = debounce_rd();\n    if (flag3 == '\\0') {\n      variable6 = variable6 ^ 0x1e;\n    }\n    if (((localFlag & 1) != 0) && (variable13 = variable13 + value1, 0 < variable13)) {\n      if ((variable6 & 0x10) == 0) {\n        localFlag = localFlag & 0xfe;\n      }\n      else {\n        variable7 = variable7 ^ 0x10;\n      }\n      variable13 = variable13 - variable5;\n    }\n    if (((localFlag & 2) != 0) && (variable12 = variable12 + value2, 0 < variable12)) {\n      if ((variable6 & 8) == 0) {\n        localFlag = localFlag & 0xfd;\n      }\n      else {\n        variable7 = variable7 ^ 0x440;\n      }\n      variable12 = variable12 - variable5;\n    }\n    if (((localFlag & 4) != 0) && (variable11 = variable11 + value3, 0 < variable11)) {\n      if ((variable6 & 4) == 0) {\n        localFlag = localFlag & 0xfb;\n      }\n      else {\n        variable7 = variable7 ^ 0x100;\n      }\n      variable11 = variable11 - variable5;\n    }\n    if ((localFlag == 0) || ((DAT_20000eaa & 0x10) != 0)) break;\n    update_data_080018cc(variable7);\n    delay_us(DAT_20000ec9);\n    update_data_080018cc(variable1);\n    delay_us(variable10);\n    if ((variable2 < variable15) && (variable8 = variable15 + variable8, 20000 < variable8)) {\n      variable8 = variable8 - 20000;\n      variable9 = variable3 + variable9;\n      variable15 = 60000000 / variable9;\n      if (variable15 < variable2) {\n        variable15 = variable2;\n      }\n      variable10 = variable15 - DAT_20000ec9;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001994": "calculate_value_08001994",
                "param_1": "flag1",
                "param_2": "flag2",
                "param_3": "flag3",
                "uVar1": "result1",
                "uVar2": "maxValue",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "local_61": "localFlag",
                "local_5c": "value1",
                "local_58": "value2",
                "local_54": "value3",
                "local_4e": "variable1",
                "local_4c": "variable2",
                "local_48": "variable3",
                "local_44": "variable4",
                "local_40": "variable5",
                "local_3c": "variable6",
                "local_36": "variable7",
                "local_34": "variable8",
                "local_30": "variable9",
                "local_2c": "variable10",
                "local_28": "variable11",
                "local_24": "variable12",
                "local_20": "variable13",
                "local_1a": "variable14",
                "local_18": "variable15",
                "local_11": "localFlag2"
            },
            "calling": [
                "limits_go_home"
            ],
            "called": [
                "sqrt",
                "FUN_080018cc",
                "__aeabi_fmul",
                "__aeabi_fdiv",
                "lround",
                "__floatunsidf",
                "__aeabi_f2d",
                "ceil",
                "__aeabi_d2uiz",
                "__truncdfsf2",
                "debounce_rd",
                "__divdf3",
                "FUN_080018fc",
                "memset",
                "delay_us",
                "__muldf3"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001d4c": {
            "entrypoint": "0x08001d4c",
            "current_name": "perform_homing_cycle_08001d4c",
            "code": "\nvoid performHomingCycle_08001d4c(void)\n\n{\n  char counter;\n  char loopIndex;\n  \n  st_wake_up();\n  homing_cycle(4,1,0,DAT_20000eec);\n  homing_cycle(3,1,0,DAT_20000eec);\n  delay_ms(DAT_20000ef0);\n  loopIndex = '\\x02';\n  while( true ) {\n    counter = loopIndex + -1;\n    if (loopIndex == '\\0') break;\n    homing_cycle(7,0,1,DAT_20000ee8);\n    delay_ms(DAT_20000ef0);\n    loopIndex = counter;\n    if ('\\0' < counter) {\n      homing_cycle(7,1,0,DAT_20000ee8);\n      delay_ms(DAT_20000ef0);\n    }\n  }\n  st_go_idle();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001d4c": "perform_homing_cycle_08001d4c",
                "cVar1": "counter",
                "local_9": "loopIndex"
            },
            "calling": [
                "mc_go_home"
            ],
            "called": [
                "st_go_idle",
                "delay_ms",
                "st_wake_up",
                "homing_cycle"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001ddc": {
            "entrypoint": "0x08001ddc",
            "current_name": "initialize_controller_08001ddc",
            "code": "\nvoid initialize_controller_08001ddc(void)\n\n{\n  initialize_serial();\n  initialize_settings();\n  initialize_st();\n  clear_memory(&DAT_20000ea8,0,0x14);\n  DAT_20000ea8 = '\\x01';\n  DAT_20000ea9 = '\\x01';\n  do {\n    if (DAT_20000ea8 != '\\0') {\n      reset_serial_read_buffer();\n      initialize_plan();\n      initialize_gc();\n      initialize_protocol();\n      initialize_spindle();\n      initialize_coolant();\n      initialize_limits();\n      reset_st();\n      synchronize_current_position();\n      DAT_20000ea8 = '\\0';\n      DAT_20000eaa = 0;\n      if ((DAT_20000ee4 & 2) != 0) {\n        DAT_20000eb8 = 1;\n      }\n      if ((DAT_20000ea9 == '\\x01') && ((DAT_20000ee4 & 0x10) != 0)) {\n        DAT_20000ea9 = '\\x06';\n      }\n      if (DAT_20000ea9 == '\\x06') {\n        send_feedback_message(2);\n      }\n      else {\n        DAT_20000ea9 = '\\0';\n        execute_startup_protocol();\n      }\n    }\n    execute_runtime_protocol();\n    process_protocol();\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08001ddc": "initialize_controller_08001ddc",
                "serial_init": "initialize_serial",
                "settings_init": "initialize_settings",
                "st_init": "initialize_st",
                "memset": "clear_memory",
                "serial_reset_read_buffer": "reset_serial_read_buffer",
                "plan_init": "initialize_plan",
                "gc_init": "initialize_gc",
                "protocol_init": "initialize_protocol",
                "spindle_init": "initialize_spindle",
                "coolant_init": "initialize_coolant",
                "limits_init": "initialize_limits",
                "st_reset": "reset_st",
                "sys_sync_current_position": "synchronize_current_position",
                "report_feedback_message": "send_feedback_message",
                "protocol_execute_startup": "execute_startup_protocol",
                "protocol_execute_runtime": "execute_runtime_protocol",
                "protocol_process": "process_protocol"
            },
            "calling": [
                "main"
            ],
            "called": [
                "protocol_process",
                "st_reset",
                "report_feedback_message",
                "serial_reset_read_buffer",
                "gc_init",
                "st_init",
                "settings_init",
                "protocol_init",
                "serial_init",
                "coolant_init",
                "protocol_execute_startup",
                "plan_init",
                "sys_sync_current_position",
                "protocol_execute_runtime",
                "spindle_init",
                "memset",
                "limits_init"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001e98": {
            "entrypoint": "0x08001e98",
            "current_name": "execute_protocol_08001e98",
            "code": "\nvoid executeProtocol_08001e98(undefined4 buffer1,undefined4 buffer2,undefined4 buffer3,undefined4 buffer4,\n                 undefined buffer5)\n\n{\n  int bufferCheckResult;\n  \n  if (DAT_20000ea9 != '\\a') {\n    do {\n      protocol_execute_runtime();\n      if (DAT_20000ea8 != '\\0') {\n        return;\n      }\n      bufferCheckResult = plan_check_full_buffer();\n    } while (bufferCheckResult != 0);\n    plan_buffer_line(buffer1,buffer2,buffer3,buffer4,buffer5);\n    if (DAT_20000ea9 == '\\0') {\n      DAT_20000ea9 = '\\x02';\n    }\n    if (DAT_20000eb8 != '\\0') {\n      st_cycle_start();\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001e98": "execute_protocol_08001e98",
                "param_1": "buffer1",
                "param_2": "buffer2",
                "param_3": "buffer3",
                "param_4": "buffer4",
                "param_5": "buffer5",
                "iVar1": "bufferCheckResult"
            },
            "calling": [
                "mc_arc",
                "gc_execute_line",
                "mc_go_home"
            ],
            "called": [
                "plan_check_full_buffer",
                "protocol_execute_runtime",
                "st_cycle_start",
                "plan_buffer_line"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001f00": {
            "entrypoint": "0x08001f00",
            "current_name": "calculate_angles_08001f00",
            "code": "\nvoid calculateAngles_08001f00(int inputArray1,undefined4 *inputArray2,int inputArray3,byte index1,byte index2,byte index3\n                 ,undefined4 angle,char flag1,undefined4 constant1,char flag2)\n\n{\n  undefined4 temp1;\n  undefined4 temp2;\n  int comparisonResult;\n  uint temp3;\n  undefined8 temp4;\n  undefined8 temp5;\n  uint tempArray [4];\n  undefined4 tempVariable1;\n  undefined4 tempVariable2;\n  undefined4 tempVariable3;\n  undefined4 tempVariable4;\n  undefined4 tempVariable5;\n  undefined4 tempVariable6;\n  ushort loopCounter;\n  undefined4 hypoValue;\n  undefined4 tempVariable7;\n  undefined4 tempVariable8;\n  uint tempVariable9;\n  undefined4 tempVariable10;\n  undefined4 tempVariable11;\n  char flag3;\n  ushort counter;\n  undefined4 angleValue;\n  uint negatedValue1;\n  uint negatedValue2;\n  \n  tempVariable11 = __addsf3(*(undefined4 *)((uint)index1 * 4 + inputArray1),\n                      *(undefined4 *)((uint)index1 * 4 + inputArray3));\n  tempVariable10 = __addsf3(*(undefined4 *)((uint)index2 * 4 + inputArray1),\n                      *(undefined4 *)((uint)index2 * 4 + inputArray3));\n  tempVariable9 = __aeabi_fsub(inputArray2[index3],*(undefined4 *)((uint)index3 * 4 + inputArray1));\n  negatedValue2 = *(uint *)((uint)index1 * 4 + inputArray3) ^ 0x80000000;\n  negatedValue1 = *(uint *)((uint)index2 * 4 + inputArray3) ^ 0x80000000;\n  tempVariable8 = __aeabi_fsub(inputArray2[index1],tempVariable11);\n  tempVariable7 = __aeabi_fsub(inputArray2[index2],tempVariable10);\n  temp1 = __aeabi_fmul(negatedValue2,tempVariable7);\n  temp2 = __aeabi_fmul(negatedValue1,tempVariable8);\n  temp1 = __aeabi_fsub(temp1,temp2);\n  temp4 = __aeabi_f2d(temp1);\n  temp1 = __aeabi_fmul(negatedValue2,tempVariable8);\n  temp2 = __aeabi_fmul(negatedValue1,tempVariable7);\n  temp1 = __addsf3(temp1,temp2);\n  temp5 = __aeabi_f2d(temp1);\n  temp4 = atan2((int)temp4,(int)((ulonglong)temp4 >> 0x20),(int)temp5,\n                (int)((ulonglong)temp5 >> 0x20));\n  angleValue = __truncdfsf2((int)temp4,(int)((ulonglong)temp4 >> 0x20));\n  if (flag2 == '\\0') {\n    comparisonResult = __aeabi_fcmple(angleValue,0);\n    if (comparisonResult != 0) {\n      temp4 = __aeabi_f2d(angleValue);\n      temp4 = __aeabi_dadd((int)temp4,(int)((ulonglong)temp4 >> 0x20),0x54442d18,0x401921fb);\n      angleValue = __truncdfsf2((int)temp4,(int)((ulonglong)temp4 >> 0x20));\n    }\n  }\n  else {\n    comparisonResult = __aeabi_fcmpge(angleValue,0);\n    if (comparisonResult != 0) {\n      temp4 = __aeabi_f2d(angleValue);\n      temp4 = __subdf3((int)temp4,(int)((ulonglong)temp4 >> 0x20),0x54442d18,0x401921fb);\n      angleValue = __truncdfsf2((int)temp4,(int)((ulonglong)temp4 >> 0x20));\n    }\n  }\n  temp1 = __aeabi_fmul(angleValue,constant1);\n  temp4 = __aeabi_f2d(temp1);\n  temp5 = __aeabi_f2d(tempVariable9 & 0x7fffffff);\n  temp4 = hypot((int)temp4,(int)((ulonglong)temp4 >> 0x20),(int)temp5,\n                (int)((ulonglong)temp5 >> 0x20));\n  hypoValue = __truncdfsf2((int)temp4,(int)((ulonglong)temp4 >> 0x20));\n  comparisonResult = __aeabi_fcmpeq(hypoValue,0);\n  if (comparisonResult == 0) {\n    temp1 = __aeabi_fdiv(hypoValue,DAT_20000ed8);\n    temp4 = __aeabi_f2d(temp1);\n    temp4 = floor((int)temp4,(int)((ulonglong)temp4 >> 0x20));\n    loopCounter = __aeabi_d2uiz((int)temp4,(int)((ulonglong)temp4 >> 0x20));\n    if (flag1 != '\\0') {\n      temp1 = __floatsisf(loopCounter);\n      angle = __aeabi_fmul(angle,temp1);\n    }\n    temp1 = __floatsisf(loopCounter);\n    tempVariable6 = __aeabi_fdiv(angleValue,temp1);\n    temp1 = __floatsisf(loopCounter);\n    tempVariable5 = __aeabi_fdiv(tempVariable9,temp1);\n    temp4 = __aeabi_f2d(tempVariable6);\n    temp4 = __muldf3((int)temp4,(int)((ulonglong)temp4 >> 0x20),0,0x3fe00000);\n    temp5 = __aeabi_f2d(tempVariable6);\n    temp4 = __muldf3((int)temp4,(int)((ulonglong)temp4 >> 0x20),(int)temp5,\n                     (int)((ulonglong)temp5 >> 0x20));\n    temp4 = __subdf3(0,0x3ff00000,(int)temp4,(int)((ulonglong)temp4 >> 0x20));\n    tempVariable4 = __truncdfsf2((int)temp4,(int)((ulonglong)temp4 >> 0x20));\n    tempVariable3 = tempVariable6;\n    flag3 = '\\0';\n    tempArray[index3] = *(uint *)(inputArray1 + (uint)index3 * 4);\n    for (counter = 1; counter < loopCounter; counter = counter + 1) {\n      if ((int)flag3 < (int)(uint)DAT_20000efa) {\n        temp1 = __aeabi_fmul(negatedValue2,tempVariable3);\n        temp2 = __aeabi_fmul(negatedValue1,tempVariable4);\n        tempArray[3] = __addsf3(temp1,temp2);\n        temp1 = __aeabi_fmul(negatedValue2,tempVariable4);\n        temp2 = __aeabi_fmul(negatedValue1,tempVariable3);\n        negatedValue2 = __aeabi_fsub(temp1,temp2);\n        negatedValue1 = tempArray[3];\n        flag3 = flag3 + '\\x01';\n      }\n      else {\n        temp1 = __floatsisf(counter);\n        temp1 = __aeabi_fmul(temp1,tempVariable6);\n        temp4 = __aeabi_f2d(temp1);\n        temp4 = cos((int)temp4,(int)((ulonglong)temp4 >> 0x20));\n        tempVariable2 = __truncdfsf2((int)temp4,(int)((ulonglong)temp4 >> 0x20));\n        temp1 = __floatsisf(counter);\n        temp1 = __aeabi_fmul(temp1,tempVariable6);\n        temp4 = __aeabi_f2d(temp1);\n        temp4 = sin((int)temp4,(int)((ulonglong)temp4 >> 0x20));\n        tempVariable1 = __truncdfsf2((int)temp4,(int)((ulonglong)temp4 >> 0x20));\n        temp1 = __aeabi_fmul(*(uint *)((uint)index1 * 4 + inputArray3) ^ 0x80000000,tempVariable2);\n        temp2 = __aeabi_fmul(*(undefined4 *)((uint)index2 * 4 + inputArray3),tempVariable1);\n        negatedValue2 = __addsf3(temp1,temp2);\n        temp1 = __aeabi_fmul(*(uint *)((uint)index1 * 4 + inputArray3) ^ 0x80000000,tempVariable1);\n        temp2 = __aeabi_fmul(*(undefined4 *)((uint)index2 * 4 + inputArray3),tempVariable2);\n        negatedValue1 = __aeabi_fsub(temp1,temp2);\n        flag3 = '\\0';\n      }\n      temp3 = __addsf3(tempVariable11,negatedValue2);\n      tempArray[index1] = temp3;\n      temp3 = __addsf3(tempVariable10,negatedValue1);\n      tempArray[index2] = temp3;\n      temp3 = __addsf3(tempArray[index3],tempVariable5);\n      tempArray[index3] = temp3;\n      mc_line(tempArray[0],tempArray[1],tempArray[2],angle,flag1);\n      if (DAT_20000ea8 != '\\0') {\n        return;\n      }\n    }\n    mc_line(*inputArray2,inputArray2[1],inputArray2[2],angle,flag1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001f00": "calculate_angles_08001f00",
                "param_1": "inputArray1",
                "param_2": "inputArray2",
                "param_3": "inputArray3",
                "param_4": "index1",
                "param_5": "index2",
                "param_6": "index3",
                "param_7": "angle",
                "param_8": "flag1",
                "param_9": "constant1",
                "param_10": "flag2",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "iVar3": "comparisonResult",
                "uVar4": "temp3",
                "uVar5": "temp4",
                "uVar6": "temp5",
                "local_6c": "tempArray",
                "local_5c": "tempVariable1",
                "local_58": "tempVariable2",
                "local_54": "tempVariable3",
                "local_50": "tempVariable4",
                "local_4c": "tempVariable5",
                "local_48": "tempVariable6",
                "local_42": "loopCounter",
                "local_40": "hypoValue",
                "local_3c": "tempVariable7",
                "local_38": "tempVariable8",
                "local_34": "tempVariable9",
                "local_30": "tempVariable10",
                "local_2c": "tempVariable11",
                "local_27": "flag3",
                "local_26": "counter",
                "local_24": "angleValue",
                "local_20": "negatedValue1",
                "local_1c": "negatedValue2"
            },
            "calling": [
                "gc_execute_line"
            ],
            "called": [
                "mc_line",
                "sin",
                "__aeabi_fsub",
                "__aeabi_dadd",
                "atan2",
                "__aeabi_fmul",
                "__addsf3",
                "__aeabi_fcmpge",
                "floor",
                "__aeabi_fdiv",
                "__aeabi_fcmple",
                "__subdf3",
                "__aeabi_f2d",
                "cos",
                "__floatsisf",
                "__aeabi_d2uiz",
                "hypot",
                "__truncdfsf2",
                "__aeabi_fcmpeq",
                "__muldf3"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002408": {
            "entrypoint": "0x08002408",
            "current_name": "calculate_delay_08002408",
            "code": "\nvoid calculateDelay_08002408(undefined4 input)\n\n{\n  undefined2 result1;\n  undefined4 result2;\n  undefined4 result3;\n  undefined8 result4;\n  ushort count;\n  \n  result2 = __aeabi_fmul(input,0x41a00000);\n  result4 = __aeabi_f2d(result2);\n  result4 = floor((int)result4,(int)((ulonglong)result4 >> 0x20));\n  count = __aeabi_d2uiz((int)result4,(int)((ulonglong)result4 >> 0x20));\n  plan_synchronize();\n  result2 = __aeabi_fmul(input,0x447a0000);\n  result3 = __floatsisf((uint)count * 0x32);\n  result2 = __aeabi_fsub(result2,result3);\n  result4 = __aeabi_f2d(result2);\n  result4 = floor((int)result4,(int)((ulonglong)result4 >> 0x20));\n  result1 = __aeabi_d2uiz((int)result4,(int)((ulonglong)result4 >> 0x20));\n  delay_ms(result1);\n  while ((count != 0 && (protocol_execute_runtime(), DAT_20000ea8 == '\\0'))) {\n    _delay_ms(0x32);\n    count = count - 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002408": "calculate_delay_08002408",
                "param_1": "input",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "result3",
                "uVar4": "result4",
                "local_12": "count"
            },
            "calling": [
                "gc_execute_line"
            ],
            "called": [
                "__aeabi_f2d",
                "__aeabi_fsub",
                "__floatsisf",
                "__aeabi_d2uiz",
                "delay_ms",
                "__aeabi_fmul",
                "protocol_execute_runtime",
                "floor",
                "_delay_ms",
                "plan_synchronize"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080024c4": {
            "entrypoint": "0x080024c4",
            "current_name": "initialize_system_080024c4",
            "code": "\nvoid initializeSystem_080024c4(void)\n\n{\n  undefined4 firstOptionValue;\n  undefined4 secondOptionValue;\n  undefined4 thirdOptionValue;\n  char isThirdOptionEnabled;\n  char isSecondOptionEnabled;\n  char isFirstOptionEnabled;\n  \n  DAT_20000ea9 = 5;\n  DAT_20000e4c = 0;\n  limits_go_home();\n  protocol_execute_runtime();\n  if (DAT_20000ea8 == '\\0') {\n    memset(&DAT_20000eac,0,0xc);\n    sys_sync_current_position();\n    DAT_20000ea9 = 0;\n    if ((DAT_20000ee6 & 0x20) == 0) {\n      isFirstOptionEnabled = -1;\n    }\n    else {\n      isFirstOptionEnabled = '\\x01';\n    }\n    if ((DAT_20000ee6 & 0x80) == 0) {\n      isSecondOptionEnabled = -1;\n    }\n    else {\n      isSecondOptionEnabled = '\\x01';\n    }\n    if ((DAT_20000ee6 & 0x200) == 0) {\n      isThirdOptionEnabled = -1;\n    }\n    else {\n      isThirdOptionEnabled = '\\x01';\n    }\n    firstOptionValue = __floatsisf((int)isFirstOptionEnabled);\n    firstOptionValue = __aeabi_fmul(firstOptionValue,DAT_20000ef4);\n    secondOptionValue = __floatsisf((int)isSecondOptionEnabled);\n    secondOptionValue = __aeabi_fmul(secondOptionValue,DAT_20000ef4);\n    thirdOptionValue = __floatsisf((int)isThirdOptionEnabled);\n    thirdOptionValue = __aeabi_fmul(thirdOptionValue,DAT_20000ef4);\n    mc_line(firstOptionValue,secondOptionValue,thirdOptionValue,DAT_20000eec,0);\n    st_cycle_start();\n    plan_synchronize();\n    sys_sync_current_position();\n    if ((DAT_20000ee4 & 8) != 0) {\n      DAT_20000e4c = 1;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080024c4": "initialize_system_080024c4",
                "local_13": "isThirdOptionEnabled",
                "local_12": "isSecondOptionEnabled",
                "local_11": "isFirstOptionEnabled",
                "uVar1": "firstOptionValue",
                "uVar2": "secondOptionValue",
                "uVar3": "thirdOptionValue"
            },
            "calling": [
                "protocol_execute_line"
            ],
            "called": [
                "mc_line",
                "__floatsisf",
                "limits_go_home",
                "__aeabi_fmul",
                "sys_sync_current_position",
                "protocol_execute_runtime",
                "st_cycle_start",
                "memset",
                "plan_synchronize"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080025e8": {
            "entrypoint": "0x080025e8",
            "current_name": "stop_and_idle_processing_080025e8",
            "code": "\nvoid stop_and_idle_processing_080025e8(void)\n\n{\n  if ((DAT_20000eaa & 0x10) == 0) {\n    DAT_20000eaa = DAT_20000eaa | 0x10;\n    spindle_stop();\n    coolant_stop();\n    if (DAT_20000ea9 - 3 < 3) {\n      DAT_20000eaa = DAT_20000eaa | 0x20;\n      st_go_idle();\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080025e8": "stop_and_idle_processing_080025e8"
            },
            "calling": [
                "protocol_execute_line",
                "gc_execute_line",
                "serial_rx_hook",
                "limits_isr",
                "buttons_isr"
            ],
            "called": [
                "st_go_idle",
                "coolant_stop",
                "spindle_stop"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002638": {
            "entrypoint": "0x08002638",
            "current_name": "parse_integer_08002638",
            "code": "\nundefined4 parseInteger_08002638(int startAddress,byte *inputData,uint *outputValue)\n\n{\n  byte digit;\n  bool isNegative;\n  bool decimalPoint;\n  int floatComparison;\n  char *currentChar;\n  char *nextChar;\n  undefined4 status;\n  undefined8 floatValue;\n  uint convertedFloat;\n  byte digitCount;\n  char decimalShift;\n  int integer;\n  char currentDigit;\n  char *currentPosition;\n  \n  nextChar = (char *)(startAddress + (uint)*inputData);\n  currentChar = nextChar + 1;\n  currentDigit = *nextChar;\n  isNegative = false;\n  if (currentDigit == '-') {\n    isNegative = true;\n    currentDigit = *currentChar;\n    currentPosition = nextChar + 2;\n  }\n  else {\n    currentPosition = currentChar;\n    if (currentDigit == '+') {\n      currentPosition = nextChar + 2;\n      currentDigit = *currentChar;\n    }\n  }\n  integer = 0;\n  decimalShift = '\\0';\n  digitCount = 0;\n  decimalPoint = false;\n  do {\n    digit = currentDigit - 0x30;\n    if (digit < 10) {\n      digitCount = digitCount + 1;\n      if (digitCount < 9) {\n        if (decimalPoint) {\n          decimalShift = decimalShift + -1;\n        }\n        integer = (uint)digit + integer * 10;\n      }\n      else if (!decimalPoint) {\n        decimalShift = decimalShift + '\\x01';\n      }\n    }\n    else {\n      if ((digit != 0xfe) || (decimalPoint)) {\n        if (digitCount == 0) {\n          status = 0;\n        }\n        else {\n          convertedFloat = __floatunsisf(integer);\n          floatComparison = __aeabi_fcmpeq(convertedFloat,0);\n          if (floatComparison == 0) {\n            for (; decimalShift < -1; decimalShift = decimalShift + '\\x02') {\n              floatValue = __aeabi_f2d(convertedFloat);\n              floatValue = __muldf3((int)floatValue,(int)((ulonglong)floatValue >> 0x20),0x47ae147b,0x3f847ae1);\n              convertedFloat = __truncdfsf2((int)floatValue,(int)((ulonglong)floatValue >> 0x20));\n            }\n            if (decimalShift < '\\0') {\n              floatValue = __aeabi_f2d(convertedFloat);\n              floatValue = __muldf3((int)floatValue,(int)((ulonglong)floatValue >> 0x20),0x9999999a,0x3fb99999);\n              convertedFloat = __truncdfsf2((int)floatValue,(int)((ulonglong)floatValue >> 0x20));\n            }\n            else {\n              for (; '\\0' < decimalShift; decimalShift = decimalShift + -1) {\n                convertedFloat = __aeabi_fmul(convertedFloat,0x41200000);\n              }\n            }\n          }\n          if (isNegative) {\n            *outputValue = convertedFloat ^ 0x80000000;\n          }\n          else {\n            *outputValue = convertedFloat;\n          }\n          *inputData = ((char)currentPosition - (char)startAddress) - 1;\n          status = 1;\n        }\n        return status;\n      }\n      decimalPoint = true;\n    }\n    currentDigit = *currentPosition;\n    currentPosition = currentPosition + 1;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08002638": "parse_integer_08002638",
                "param_1": "startAddress",
                "param_2": "inputData",
                "param_3": "outputValue",
                "bVar1": "digit",
                "bVar2": "isNegative",
                "bVar3": "decimalPoint",
                "iVar4": "floatComparison",
                "pcVar5": "currentChar",
                "pcVar6": "nextChar",
                "uVar7": "status",
                "uVar8": "floatValue",
                "local_1c": "convertedFloat",
                "local_16": "digitCount",
                "local_15": "decimalShift",
                "local_14": "integer",
                "local_d": "currentDigit",
                "local_c": "currentPosition"
            },
            "calling": [
                "protocol_execute_line",
                "next_statement"
            ],
            "called": [
                "__aeabi_f2d",
                "__floatunsisf",
                "__truncdfsf2",
                "__aeabi_fmul",
                "__muldf3",
                "__aeabi_fcmpeq"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002814": {
            "entrypoint": "0x08002814",
            "current_name": "FUNC_08002814",
            "code": "\nvoid FUNC_08002814(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002814": "FUNC_08002814"
            },
            "calling": [
                "limits_go_home",
                "mc_dwell",
                "report_alarm_message"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002828": {
            "entrypoint": "0x08002828",
            "current_name": "FUNC_08002828",
            "code": "\nvoid FUNC_08002828(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002828": "FUNC_08002828"
            },
            "calling": [
                "homing_cycle"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800283a": {
            "entrypoint": "0x0800283a",
            "current_name": "initialize_positions_0800283a",
            "code": "\nvoid initialize_positions_0800283a(void)\n\n{\n  plan_set_current_position(DAT_20000eac,DAT_20000eb0,DAT_20000eb4);\n  gc_set_current_position(DAT_20000eac,DAT_20000eb0,DAT_20000eb4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800283a": "initialize_positions_0800283a"
            },
            "calling": [
                "grbl_main",
                "mc_go_home"
            ],
            "called": [
                "plan_set_current_position",
                "gc_set_current_position"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002870": {
            "entrypoint": "0x08002870",
            "current_name": "increment_and_check_boundary_08002870",
            "code": "\nchar incrementAndCheckBoundary_08002870(char input)\n\n{\n  char result;\n  \n  result = input + '\\x01';\n  if (result == '\\x12') {\n    result = '\\0';\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002870": "increment_and_check_boundary_08002870",
                "param_1": "input",
                "local_9": "result"
            },
            "calling": [
                "planner_recalculate_trapezoids",
                "plan_discard_current_block",
                "plan_reset_buffer",
                "planner_forward_pass",
                "plan_buffer_line"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002896": {
            "entrypoint": "0x08002896",
            "current_name": "decrement_and_set_default_08002896",
            "code": "\nchar decrementAndSetDefault_08002896(char input)\n\n{\n  char result;\n  \n  result = input;\n  if (input == '\\0') {\n    result = '\\x12';\n  }\n  return result + -1;\n}\n\n",
            "renaming": {
                "FUN_08002896": "decrement_and_set_default_08002896",
                "param_1": "input",
                "local_9": "result"
            },
            "calling": [
                "planner_reverse_pass"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080028bc": {
            "entrypoint": "0x080028bc",
            "current_name": "calculate_division_080028bc",
            "code": "\nundefined4 calculate_division_080028bc(undefined4 num1,undefined4 num2,undefined4 num3)\n\n{\n  undefined4 squared_num2;\n  undefined4 squared_num1;\n  \n  squared_num2 = __aeabi_fmul(num2,num2);\n  squared_num1 = __aeabi_fmul(num1,num1);\n  squared_num2 = __aeabi_fsub(squared_num2,squared_num1);\n  squared_num1 = __addsf3(num3,num3);\n  squared_num2 = __aeabi_fdiv(squared_num2,squared_num1);\n  return squared_num2;\n}\n\n",
            "renaming": {
                "FUN_080028bc": "calculate_division_080028bc",
                "param_1": "num1",
                "param_2": "num2",
                "param_3": "num3",
                "uVar1": "squared_num2",
                "uVar2": "squared_num1"
            },
            "calling": [
                "calculate_trapezoid_for_block"
            ],
            "called": [
                "__aeabi_fsub",
                "__aeabi_fmul",
                "__addsf3",
                "__aeabi_fdiv"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002908": {
            "entrypoint": "0x08002908",
            "current_name": "calculate_results_08002908",
            "code": "\nundefined4 calculate_results_08002908(undefined4 input_1,undefined4 input_2,undefined4 input_3,undefined4 input_4)\n\n{\n  undefined4 result_1;\n  undefined4 result_2;\n  \n  result_1 = __addsf3(input_3,input_3);\n  result_1 = __aeabi_fmul(result_1,input_4);\n  result_2 = __aeabi_fmul(input_1,input_1);\n  result_1 = __aeabi_fsub(result_1,result_2);\n  result_2 = __aeabi_fmul(input_2,input_2);\n  result_1 = __addsf3(result_1,result_2);\n  result_2 = __aeabi_fmul(input_3,0x40800000);\n  result_1 = __aeabi_fdiv(result_1,result_2);\n  return result_1;\n}\n\n",
            "renaming": {
                "FUN_08002908": "calculate_results_08002908",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "result_1",
                "uVar2": "result_2"
            },
            "calling": [
                "calculate_trapezoid_for_block"
            ],
            "called": [
                "__aeabi_fsub",
                "__addsf3",
                "__aeabi_fmul",
                "__aeabi_fdiv"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002978": {
            "entrypoint": "0x08002978",
            "current_name": "calculate_distance_08002978",
            "code": "\nundefined4 calculate_distance_08002978(undefined4 x,undefined4 y,undefined4 z)\n\n{\n  undefined4 squared_y;\n  undefined4 scaled_x;\n  undefined8 distance;\n  \n  squared_y = __aeabi_fmul(y,y);\n  scaled_x = __addsf3(x,x);\n  scaled_x = __aeabi_fmul(scaled_x,z);\n  squared_y = __aeabi_fsub(squared_y,scaled_x);\n  distance = __aeabi_f2d(squared_y);\n  distance = sqrt((int)distance,(int)((ulonglong)distance >> 0x20));\n  squared_y = __truncdfsf2((int)distance,(int)((ulonglong)distance >> 0x20));\n  return squared_y;\n}\n\n",
            "renaming": {
                "FUN_08002978": "calculate_distance_08002978",
                "param_1": "x",
                "param_2": "y",
                "param_3": "z",
                "uVar1": "squared_y",
                "uVar2": "scaled_x",
                "uVar3": "distance"
            },
            "calling": [
                "planner_forward_pass_kernel",
                "planner_reverse_pass_kernel",
                "plan_buffer_line"
            ],
            "called": [
                "sqrt",
                "__aeabi_f2d",
                "__aeabi_fsub",
                "__truncdfsf2",
                "__addsf3",
                "__aeabi_fmul"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080029d8": {
            "entrypoint": "0x080029d8",
            "current_name": "update_speed_080029d8",
            "code": "\nvoid updateSpeed_080029d8(undefined4 param1,int vehicleData,int secondaryData)\n\n{\n  int comparisonResult;\n  undefined4 maxSpeed;\n  undefined4 originalSpeed;\n  \n  if (((vehicleData != 0) && (secondaryData != 0)) &&\n     (comparisonResult = __aeabi_fcmpeq(*(undefined4 *)(vehicleData + 0x18),*(undefined4 *)(vehicleData + 0x1c)),\n     comparisonResult == 0)) {\n    if ((*(char *)(vehicleData + 0x25) == '\\0') &&\n       (comparisonResult = __aeabi_fcmpgt(*(undefined4 *)(vehicleData + 0x1c),*(undefined4 *)(secondaryData + 0x18)),\n       comparisonResult != 0)) {\n      originalSpeed = *(undefined4 *)(vehicleData + 0x1c);\n      maxSpeed = max_allowable_speed(DAT_20000edc ^ 0x80000000,*(undefined4 *)(secondaryData + 0x18),\n                                  *(undefined4 *)(vehicleData + 0x20));\n      comparisonResult = __aeabi_fcmplt(originalSpeed,maxSpeed);\n      if (comparisonResult == 0) {\n        maxSpeed = max_allowable_speed(DAT_20000edc ^ 0x80000000,*(undefined4 *)(secondaryData + 0x18),\n                                    *(undefined4 *)(vehicleData + 0x20));\n      }\n      else {\n        maxSpeed = *(undefined4 *)(vehicleData + 0x1c);\n      }\n      *(undefined4 *)(vehicleData + 0x18) = maxSpeed;\n    }\n    else {\n      *(undefined4 *)(vehicleData + 0x18) = *(undefined4 *)(vehicleData + 0x1c);\n    }\n    *(undefined *)(vehicleData + 0x24) = 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080029d8": "update_speed_080029d8",
                "param_1": "param1",
                "param_2": "vehicleData",
                "param_3": "secondaryData",
                "iVar1": "comparisonResult",
                "uVar2": "maxSpeed",
                "uVar3": "originalSpeed"
            },
            "calling": [
                "planner_reverse_pass"
            ],
            "called": [
                "__aeabi_fcmplt",
                "max_allowable_speed",
                "__aeabi_fcmpgt",
                "__aeabi_fcmpeq"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a94": {
            "entrypoint": "0x08002a94",
            "current_name": "process_blocks_08002a94",
            "code": "\nvoid processBlocks_08002a94(void)\n\n{\n  undefined *tempPtr;\n  undefined *previousBlock;\n  undefined *tempBlock;\n  byte currentBlock;\n  \n  currentBlock = DAT_20000cf0;\n  previousBlock = (undefined *)0x0;\n  tempBlock = (undefined *)0x0;\n  while (tempPtr = tempBlock, currentBlock != DAT_20000cf1) {\n    currentBlock = prev_block_index(currentBlock);\n    tempBlock = previousBlock;\n    planner_reverse_pass_kernel(&DAT_20000870 + (uint)currentBlock * 0x40,previousBlock,tempPtr);\n    previousBlock = &DAT_20000870 + (uint)currentBlock * 0x40;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002a94": "process_blocks_08002a94",
                "local_9": "currentBlock",
                "local_18": "previousBlock",
                "local_14": "tempBlock",
                "puVar1": "tempPtr"
            },
            "calling": [
                "planner_recalculate"
            ],
            "called": [
                "prev_block_index",
                "planner_reverse_pass_kernel"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002afc": {
            "entrypoint": "0x08002afc",
            "current_name": "update_speed_if_needed_08002afc",
            "code": "\nvoid updateSpeedIfNeeded_08002afc(int currentSpeed,int maxSpeed)\n\n{\n  int shouldUpdateSpeed;\n  undefined4 newSpeed;\n  undefined4 maxAllowableSpeed;\n  \n  if (((currentSpeed != 0) && (*(char *)(currentSpeed + 0x25) == '\\0')) &&\n     (shouldUpdateSpeed = __aeabi_fcmplt(*(undefined4 *)(currentSpeed + 0x18),*(undefined4 *)(maxSpeed + 0x18)),\n     shouldUpdateSpeed != 0)) {\n    maxAllowableSpeed = *(undefined4 *)(maxSpeed + 0x18);\n    newSpeed = max_allowable_speed(DAT_20000edc ^ 0x80000000,*(undefined4 *)(currentSpeed + 0x18),\n                                *(undefined4 *)(currentSpeed + 0x20));\n    shouldUpdateSpeed = __aeabi_fcmplt(maxAllowableSpeed,newSpeed);\n    if (shouldUpdateSpeed == 0) {\n      newSpeed = max_allowable_speed(DAT_20000edc ^ 0x80000000,*(undefined4 *)(currentSpeed + 0x18),\n                                  *(undefined4 *)(currentSpeed + 0x20));\n    }\n    else {\n      newSpeed = *(undefined4 *)(maxSpeed + 0x18);\n    }\n    shouldUpdateSpeed = __aeabi_fcmpeq(newSpeed,*(undefined4 *)(maxSpeed + 0x18));\n    if (shouldUpdateSpeed == 0) {\n      *(undefined4 *)(maxSpeed + 0x18) = newSpeed;\n      *(undefined *)(maxSpeed + 0x24) = 1;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002afc": "update_speed_if_needed_08002afc",
                "param_1": "currentSpeed",
                "param_2": "maxSpeed",
                "iVar1": "shouldUpdateSpeed",
                "uVar2": "newSpeed",
                "uVar3": "maxAllowableSpeed"
            },
            "calling": [
                "planner_forward_pass"
            ],
            "called": [
                "__aeabi_fcmplt",
                "max_allowable_speed",
                "__aeabi_fcmpeq"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ba8": {
            "entrypoint": "0x08002ba8",
            "current_name": "planner_forward_pass_08002ba8",
            "code": "\nvoid planner_forward_pass_08002ba8(void)\n\n{\n  uint current_index_uint;\n  undefined *temp_pointer_1;\n  undefined *temp_pointer_2;\n  undefined *previous_block;\n  undefined *current_block;\n  byte current_index;\n  \n  previous_block = (undefined *)0x0;\n  current_block = (undefined *)0x0;\n  current_index = DAT_20000cf1;\n  temp_pointer_2 = (undefined *)0x0;\n  while (temp_pointer_1 = previous_block, current_index != DAT_20000cf0) {\n    previous_block = current_block;\n    current_index_uint = (uint)current_index;\n    planner_forward_pass_08002ba8_kernel(temp_pointer_1,current_block,&DAT_20000870 + current_index_uint * 0x40);\n    current_index = next_block_index(current_index);\n    temp_pointer_2 = temp_pointer_1;\n    current_block = &DAT_20000870 + current_index_uint * 0x40;\n  }\n  planner_forward_pass_08002ba8_kernel(previous_block,current_block,0,previous_block,temp_pointer_2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ba8": "planner_forward_pass_08002ba8",
                "local_14": "previous_block",
                "local_10": "current_block",
                "local_9": "current_index",
                "puVar2": "temp_pointer_1",
                "puVar3": "temp_pointer_2",
                "uVar1": "current_index_uint"
            },
            "calling": [
                "planner_recalculate"
            ],
            "called": [
                "planner_forward_pass_kernel",
                "next_block_index"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c18": {
            "entrypoint": "0x08002c18",
            "current_name": "calculate_acceleration_distance_08002c18",
            "code": "\nvoid calculateAccelerationDistance_08002c18(int pointer,undefined4 factor1,undefined4 factor2)\n\n{\n  undefined4 convertedFloat1;\n  int convertedInt;\n  undefined4 convertedFloat2;\n  undefined4 convertedFloat3;\n  undefined4 convertedFloat4;\n  uint tempUint;\n  undefined8 convertedDouble;\n  int result1;\n  uint result2;\n  \n  convertedFloat1 = __floatunsisf(*(undefined4 *)(pointer + 0x3c));\n  convertedFloat1 = __aeabi_fmul(convertedFloat1,factor1);\n  convertedDouble = __aeabi_f2d(convertedFloat1);\n  convertedDouble = ceil((int)convertedDouble,(int)((ulonglong)convertedDouble >> 0x20));\n  convertedFloat1 = __aeabi_d2uiz((int)convertedDouble,(int)((ulonglong)convertedDouble >> 0x20));\n  *(undefined4 *)(pointer + 0x28) = convertedFloat1;\n  convertedFloat1 = __floatunsisf(*(undefined4 *)(pointer + 0x3c));\n  convertedFloat1 = __aeabi_fmul(convertedFloat1,factor2);\n  convertedDouble = __aeabi_f2d(convertedFloat1);\n  convertedDouble = ceil((int)convertedDouble,(int)((ulonglong)convertedDouble >> 0x20));\n  convertedFloat1 = __aeabi_d2uiz((int)convertedDouble,(int)((ulonglong)convertedDouble >> 0x20));\n  *(undefined4 *)(pointer + 0x2c) = convertedFloat1;\n  convertedDouble = __aeabi_i2d(*(int *)(pointer + 0x30) * 0x32);\n  convertedDouble = __muldf3((int)convertedDouble,(int)((ulonglong)convertedDouble >> 0x20),0,0x404e0000);\n  convertedInt = __aeabi_d2iz((int)convertedDouble,(int)((ulonglong)convertedDouble >> 0x20));\n  convertedFloat1 = __floatunsisf(*(undefined4 *)(pointer + 0x28));\n  convertedFloat2 = __floatunsisf(*(undefined4 *)(pointer + 0x3c));\n  convertedFloat3 = __floatsisf(convertedInt);\n  convertedFloat1 = estimate_acceleration_distance(convertedFloat1,convertedFloat2,convertedFloat3);\n  convertedDouble = __aeabi_f2d(convertedFloat1);\n  convertedDouble = ceil((int)convertedDouble,(int)((ulonglong)convertedDouble >> 0x20));\n  result2 = __aeabi_d2iz((int)convertedDouble,(int)((ulonglong)convertedDouble >> 0x20));\n  convertedFloat1 = __floatunsisf(*(undefined4 *)(pointer + 0x3c));\n  convertedFloat2 = __floatunsisf(*(undefined4 *)(pointer + 0x2c));\n  convertedFloat3 = __floatsisf(-convertedInt);\n  convertedFloat1 = estimate_acceleration_distance(convertedFloat1,convertedFloat2,convertedFloat3);\n  convertedDouble = __aeabi_f2d(convertedFloat1);\n  convertedDouble = floor((int)convertedDouble,(int)((ulonglong)convertedDouble >> 0x20));\n  result1 = __aeabi_d2iz((int)convertedDouble,(int)((ulonglong)convertedDouble >> 0x20));\n  result1 = (*(int *)(pointer + 0x10) - result2) - result1;\n  if (result1 < 0) {\n    convertedFloat1 = __floatunsisf(*(undefined4 *)(pointer + 0x28));\n    convertedFloat2 = __floatunsisf(*(undefined4 *)(pointer + 0x2c));\n    convertedFloat3 = __floatsisf(convertedInt);\n    convertedFloat4 = __floatsisf(*(undefined4 *)(pointer + 0x10));\n    convertedFloat1 = intersection_distance(convertedFloat1,convertedFloat2,convertedFloat3,convertedFloat4);\n    convertedDouble = __aeabi_f2d(convertedFloat1);\n    convertedDouble = ceil((int)convertedDouble,(int)((ulonglong)convertedDouble >> 0x20));\n    tempUint = __aeabi_d2iz((int)convertedDouble,(int)((ulonglong)convertedDouble >> 0x20));\n    tempUint = tempUint & ~((int)tempUint >> 0x1f);\n    result2 = *(uint *)(pointer + 0x10);\n    if ((int)tempUint <= (int)*(uint *)(pointer + 0x10)) {\n      result2 = tempUint;\n    }\n    result1 = 0;\n  }\n  *(uint *)(pointer + 0x34) = result2;\n  *(uint *)(pointer + 0x38) = result1 + result2;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c18": "calculate_acceleration_distance_08002c18",
                "param_1": "pointer",
                "param_2": "factor1",
                "param_3": "factor2",
                "uVar1": "convertedFloat1",
                "iVar2": "convertedInt",
                "uVar3": "convertedFloat2",
                "uVar4": "convertedFloat3",
                "uVar5": "convertedFloat4",
                "uVar6": "tempUint",
                "uVar7": "convertedDouble",
                "local_20": "result1",
                "local_1c": "result2"
            },
            "calling": [
                "planner_recalculate_trapezoids"
            ],
            "called": [
                "__aeabi_f2d",
                "estimate_acceleration_distance",
                "__floatunsisf",
                "__aeabi_d2iz",
                "__floatsisf",
                "__aeabi_d2uiz",
                "ceil",
                "__aeabi_i2d",
                "__aeabi_fmul",
                "floor",
                "intersection_distance",
                "__muldf3"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002e08": {
            "entrypoint": "0x08002e08",
            "current_name": "calculate_trapezoids_08002e08",
            "code": "\nvoid calculate_trapezoids_08002e08(void)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  int offset;\n  undefined *current_block;\n  byte block_index;\n  \n  current_block = (undefined *)0x0;\n  block_index = DAT_20000cf1;\n  while (block_index != DAT_20000cf0) {\n    offset = (uint)block_index * 0x40;\n    if ((current_block != (undefined *)0x0) &&\n       ((current_block[0x24] != '\\0' || ((&DAT_20000894)[offset] != '\\0')))) {\n      result1 = __aeabi_fdiv(*(undefined4 *)(current_block + 0x18),*(undefined4 *)(current_block + 0x14));\n      result2 = __aeabi_fdiv(*(undefined4 *)(&DAT_20000888 + offset),*(undefined4 *)(current_block + 0x14));\n      calculate_trapezoid_for_block(current_block,result1,result2);\n      current_block[0x24] = 0;\n    }\n    block_index = next_block_index(block_index);\n    current_block = &DAT_20000870 + offset;\n  }\n  result1 = __aeabi_fdiv(*(undefined4 *)(current_block + 0x18),*(undefined4 *)(current_block + 0x14));\n  result2 = __aeabi_fdiv(0,*(undefined4 *)(current_block + 0x14));\n  calculate_trapezoid_for_block(current_block,result1,result2);\n  current_block[0x24] = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002e08": "calculate_trapezoids_08002e08",
                "local_18": "current_block",
                "local_11": "block_index",
                "iVar3": "offset",
                "uVar1": "result1",
                "uVar2": "result2"
            },
            "calling": [
                "planner_recalculate"
            ],
            "called": [
                "next_block_index",
                "calculate_trapezoid_for_block",
                "__aeabi_fdiv"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002edc": {
            "entrypoint": "0x08002edc",
            "current_name": "calculate_planner_08002edc",
            "code": "\nvoid calculate_planner_08002edc(void)\n\n{\n  reverse_planner_pass();\n  forward_planner_pass();\n  recalculate_planner_08002edc_trapezoids();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002edc": "calculate_planner_08002edc",
                "planner_reverse_pass": "reverse_planner_pass",
                "planner_forward_pass": "forward_planner_pass",
                "planner_recalculate_trapezoids": "recalculate_planner_trapezoids"
            },
            "calling": [
                "plan_cycle_reinitialize",
                "plan_buffer_line"
            ],
            "called": [
                "planner_recalculate_trapezoids",
                "planner_reverse_pass",
                "planner_forward_pass"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ef0": {
            "entrypoint": "0x08002ef0",
            "current_name": "initialize_block_data_08002ef0",
            "code": "\nvoid initializeBlockData_08002ef0(void)\n\n{\n  DAT_20000cf1 = DAT_20000cf0;\n  DAT_20000cf2 = next_block_index(DAT_20000cf0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ef0": "initialize_block_data_08002ef0"
            },
            "calling": [
                "plan_init"
            ],
            "called": [
                "next_block_index"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f24": {
            "entrypoint": "0x08002f24",
            "current_name": "initialize_data_08002f24",
            "code": "\nvoid initializeData_08002f24(void)\n\n{\n  resetBuffer();\n  memset(&DAT_20000cf4,0,0x1c);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f24": "initialize_data_08002f24",
                "plan_reset_buffer": "resetBuffer"
            },
            "calling": [
                "grbl_main"
            ],
            "called": [
                "plan_reset_buffer",
                "memset"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f40": {
            "entrypoint": "0x08002f40",
            "current_name": "check_and_update_block_index_08002f40",
            "code": "\nvoid check_and_update_block_index_08002f40(void)\n\n{\n  if (DAT_20000cf0 != DAT_20000cf1) {\n    DAT_20000cf1 = next_block_index(DAT_20000cf1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f40": "check_and_update_block_index_08002f40"
            },
            "calling": [
                "step_period_isr"
            ],
            "called": [
                "next_block_index"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f74": {
            "entrypoint": "0x08002f74",
            "current_name": "get_valid_pointer_08002f74",
            "code": "\nundefined * getValidPointer_08002f74(void)\n\n{\n  undefined *validPointer;\n  \n  if (DAT_20000cf0 == DAT_20000cf1) {\n    validPointer = (undefined *)0x0;\n  }\n  else {\n    validPointer = &DAT_20000870 + (uint)DAT_20000cf1 * 0x40;\n  }\n  return validPointer;\n}\n\n",
            "renaming": {
                "FUN_08002f74": "get_valid_pointer_08002f74",
                "puVar1": "validPointer"
            },
            "calling": [
                "step_period_isr",
                "plan_synchronize"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fac": {
            "entrypoint": "0x08002fac",
            "current_name": "are_data_pointers_equal_08002fac",
            "code": "\nbool areDataPointersEqual_08002fac(void)\n\n{\n  return DAT_20000cf1 == DAT_20000cf2;\n}\n\n",
            "renaming": {
                "FUN_08002fac": "are_data_pointers_equal_08002fac"
            },
            "calling": [
                "mc_line"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fd4": {
            "entrypoint": "0x08002fd4",
            "current_name": "execute_protocol_runtime_08002fd4",
            "code": "\nvoid executeProtocolRuntime_08002fd4(void)\n\n{\n  int currentBlock;\n  \n  while ((currentBlock = getCurrentBlock(), currentBlock != 0 || (DAT_20000ea9 == '\\x03'))) {\n    executeRuntime();\n    if (DAT_20000ea8 != '\\0') {\n      return;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002fd4": "execute_protocol_runtime_08002fd4",
                "iVar1": "currentBlock",
                "plan_get_current_block": "getCurrentBlock",
                "protocol_execute_runtime": "executeRuntime"
            },
            "calling": [
                "spindle_run",
                "gc_execute_line",
                "coolant_run",
                "mc_dwell",
                "mc_go_home"
            ],
            "called": [
                "protocol_execute_runtime",
                "plan_get_current_block"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003004": {
            "entrypoint": "0x08003004",
            "current_name": "calculate_block_speed_08003004",
            "code": "\nvoid calculateBlockSpeed_08003004(undefined4 acceleration,undefined4 deceleration,undefined4 position,undefined4 blockDistance,\n                 char isAcceleration)\n\n{\n  undefined4 accelerationMult;\n  int accelerationRounded;\n  int decelerationRounded;\n  int positionRounded;\n  undefined4 decelerationMult;\n  undefined4 positionMult;\n  undefined4 squaredAcc;\n  undefined4 squaredDec;\n  uint squaredPos;\n  int blockIndex;\n  ushort *blockStatus;\n  int diff;\n  uint maxDiff;\n  undefined8 floatDiff;\n  undefined8 floatDiffCeil;\n  undefined8 floatDiv;\n  undefined4 maxSpeed;\n  undefined4 inverseSpeed;\n  \n  blockIndex = (uint)DAT_20000cf0 * 0x40;\n  blockStatus = (ushort *)(&DAT_20000870 + blockIndex);\n  accelerationMult = __aeabi_fmul(DAT_20000ebc,acceleration);\n  floatDiff = __aeabi_f2d(accelerationMult);\n  accelerationRounded = lround((int)floatDiff,(int)((ulonglong)floatDiff >> 0x20));\n  accelerationMult = __aeabi_fmul(DAT_20000ec0,deceleration);\n  floatDiff = __aeabi_f2d(accelerationMult);\n  decelerationRounded = lround((int)floatDiff,(int)((ulonglong)floatDiff >> 0x20));\n  accelerationMult = __aeabi_fmul(DAT_20000ec4,position);\n  floatDiff = __aeabi_f2d(accelerationMult);\n  positionRounded = lround((int)floatDiff,(int)((ulonglong)floatDiff >> 0x20));\n  *blockStatus = 0;\n  if (accelerationRounded < DAT_20000cf4) {\n    *blockStatus = *blockStatus | 0x20;\n  }\n  if (decelerationRounded < DAT_20000cf8) {\n    *blockStatus = *blockStatus | 0x880;\n  }\n  if (positionRounded < DAT_20000cfc) {\n    *blockStatus = *blockStatus | 0x200;\n  }\n  diff = accelerationRounded - DAT_20000cf4;\n  if (diff < 0) {\n    diff = -diff;\n  }\n  *(int *)(&DAT_20000874 + blockIndex) = diff;\n  diff = decelerationRounded - DAT_20000cf8;\n  if (diff < 0) {\n    diff = -diff;\n  }\n  *(int *)(&DAT_20000878 + blockIndex) = diff;\n  diff = positionRounded - DAT_20000cfc;\n  if (diff < 0) {\n    diff = -diff;\n  }\n  *(int *)(&DAT_2000087c + blockIndex) = diff;\n  squaredPos = *(uint *)(&DAT_2000087c + blockIndex);\n  if (*(uint *)(&DAT_2000087c + blockIndex) < *(uint *)(&DAT_20000878 + blockIndex)) {\n    squaredPos = *(uint *)(&DAT_20000878 + blockIndex);\n  }\n  maxDiff = *(uint *)(&DAT_20000874 + blockIndex);\n  if (*(uint *)(&DAT_20000874 + blockIndex) < squaredPos) {\n    maxDiff = squaredPos;\n  }\n  *(uint *)(&DAT_20000880 + blockIndex) = maxDiff;\n  if (*(int *)(&DAT_20000880 + blockIndex) != 0) {\n    accelerationMult = __floatsisf(accelerationRounded - DAT_20000cf4);\n    accelerationMult = __aeabi_fdiv(accelerationMult,DAT_20000ebc);\n    decelerationMult = __floatsisf(decelerationRounded - DAT_20000cf8);\n    decelerationMult = __aeabi_fdiv(decelerationMult,DAT_20000ec0);\n    positionMult = __floatsisf(positionRounded - DAT_20000cfc);\n    positionMult = __aeabi_fdiv(positionMult,DAT_20000ec4);\n    squaredAcc = __aeabi_fmul(accelerationMult,accelerationMult);\n    squaredDec = __aeabi_fmul(decelerationMult,decelerationMult);\n    squaredAcc = __addsf3(squaredAcc,squaredDec);\n    squaredDec = __aeabi_fmul(positionMult,positionMult);\n    squaredAcc = __addsf3(squaredAcc,squaredDec);\n    floatDiff = __aeabi_f2d(squaredAcc);\n    floatDiff = sqrt((int)floatDiff,(int)((ulonglong)floatDiff >> 0x20));\n    squaredAcc = __truncdfsf2((int)floatDiff,(int)((ulonglong)floatDiff >> 0x20));\n    *(undefined4 *)(&DAT_20000890 + blockIndex) = squaredAcc;\n    squaredAcc = __aeabi_fdiv(0x3f800000,*(undefined4 *)(&DAT_20000890 + blockIndex));\n    if (isAcceleration == '\\0') {\n      inverseSpeed = __aeabi_fmul(blockDistance,squaredAcc);\n    }\n    else {\n      inverseSpeed = __aeabi_fdiv(0x3f800000,blockDistance);\n    }\n    squaredDec = __aeabi_fmul(*(undefined4 *)(&DAT_20000890 + blockIndex),inverseSpeed);\n    *(undefined4 *)(&DAT_20000884 + blockIndex) = squaredDec;\n    squaredDec = __floatsisf(*(undefined4 *)(&DAT_20000880 + blockIndex));\n    squaredDec = __aeabi_fmul(squaredDec,inverseSpeed);\n    floatDiff = __aeabi_f2d(squaredDec);\n    floatDiff = ceil((int)floatDiff,(int)((ulonglong)floatDiff >> 0x20));\n    squaredDec = __aeabi_d2uiz((int)floatDiff,(int)((ulonglong)floatDiff >> 0x20));\n    *(undefined4 *)(&DAT_200008ac + blockIndex) = squaredDec;\n    squaredDec = __floatsisf(*(undefined4 *)(&DAT_20000880 + blockIndex));\n    squaredDec = __aeabi_fmul(squaredDec,squaredAcc);\n    squaredDec = __aeabi_fmul(squaredDec,DAT_20000edc);\n    squaredDec = __aeabi_fdiv(squaredDec,0x453b8000);\n    floatDiff = __aeabi_f2d(squaredDec);\n    floatDiff = ceil((int)floatDiff,(int)((ulonglong)floatDiff >> 0x20));\n    squaredDec = __aeabi_d2iz((int)floatDiff,(int)((ulonglong)floatDiff >> 0x20));\n    *(undefined4 *)(&DAT_200008a0 + blockIndex) = squaredDec;\n    squaredPos = __aeabi_fmul(accelerationMult,squaredAcc);\n    accelerationMult = __aeabi_fmul(decelerationMult,squaredAcc);\n    decelerationMult = __aeabi_fmul(positionMult,squaredAcc);\n    maxSpeed = 0;\n    if ((DAT_20000cf0 != DAT_20000cf1) && (diff = __aeabi_fcmpgt(DAT_20000d0c,0), diff != 0)) {\n      positionMult = __aeabi_fmul(DAT_20000d00 ^ 0x80000000,squaredPos);\n      squaredAcc = __aeabi_fmul(DAT_20000d04,accelerationMult);\n      positionMult = __aeabi_fsub(positionMult,squaredAcc);\n      squaredAcc = __aeabi_fmul(DAT_20000d08,decelerationMult);\n      positionMult = __aeabi_fsub(positionMult,squaredAcc);\n      floatDiff = __aeabi_f2d(positionMult);\n      diff = __aeabi_dcmplt((int)floatDiff,(int)((ulonglong)floatDiff >> 0x20),0x66666666,0x3fee6666);\n      if (diff != 0) {\n        diff = __aeabi_fcmplt(DAT_20000d0c,*(undefined4 *)(&DAT_20000884 + blockIndex));\n        maxSpeed = DAT_20000d0c;\n        if (diff == 0) {\n          maxSpeed = *(undefined4 *)(&DAT_20000884 + blockIndex);\n        }\n        floatDiff = __aeabi_f2d(positionMult);\n        diff = __aeabi_dcmpgt((int)floatDiff,(int)((ulonglong)floatDiff >> 0x20),0x66666666,0xbfee6666);\n        if (diff != 0) {\n          floatDiff = __aeabi_f2d(positionMult);\n          floatDiff = __subdf3(0,0x3ff00000,(int)floatDiff,(int)((ulonglong)floatDiff >> 0x20));\n          floatDiff = __muldf3((int)floatDiff,(int)((ulonglong)floatDiff >> 0x20),0,0x3fe00000);\n          floatDiff = sqrt((int)floatDiff,(int)((ulonglong)floatDiff >> 0x20));\n          positionMult = __truncdfsf2((int)floatDiff,(int)((ulonglong)floatDiff >> 0x20));\n          floatDiff = __aeabi_f2d(maxSpeed);\n          squaredAcc = __aeabi_fmul(DAT_20000edc,DAT_20000ee0);\n          squaredAcc = __aeabi_fmul(squaredAcc,positionMult);\n          floatDiffCeil = __aeabi_f2d(squaredAcc);\n          floatDiv = __aeabi_f2d(positionMult);\n          floatDiv = __subdf3(0,0x3ff00000,(int)floatDiv,(int)((ulonglong)floatDiv >> 0x20));\n          floatDiffCeil = __divdf3((int)floatDiffCeil,(int)((ulonglong)floatDiffCeil >> 0x20),(int)floatDiv,\n                            (int)((ulonglong)floatDiv >> 0x20));\n          floatDiffCeil = sqrt((int)floatDiffCeil,(int)((ulonglong)floatDiffCeil >> 0x20));\n          diff = __aeabi_dcmplt((int)floatDiff,(int)((ulonglong)floatDiff >> 0x20),(int)floatDiffCeil,\n                                  (int)((ulonglong)floatDiffCeil >> 0x20));\n          if (diff == 0) {\n            squaredAcc = __aeabi_fmul(DAT_20000edc,DAT_20000ee0);\n            squaredAcc = __aeabi_fmul(squaredAcc,positionMult);\n            floatDiff = __aeabi_f2d(squaredAcc);\n            floatDiffCeil = __aeabi_f2d(positionMult);\n            floatDiffCeil = __subdf3(0,0x3ff00000,(int)floatDiffCeil,(int)((ulonglong)floatDiffCeil >> 0x20));\n            floatDiff = __divdf3((int)floatDiff,(int)((ulonglong)floatDiff >> 0x20),(int)floatDiffCeil,\n                              (int)((ulonglong)floatDiffCeil >> 0x20));\n            floatDiff = sqrt((int)floatDiff,(int)((ulonglong)floatDiff >> 0x20));\n            maxSpeed = __truncdfsf2((int)floatDiff,(int)((ulonglong)floatDiff >> 0x20));\n          }\n        }\n      }\n    }\n    *(undefined4 *)(&DAT_2000088c + blockIndex) = maxSpeed;\n    squaredAcc = max_allowable_speed(DAT_20000edc ^ 0x80000000,0,*(undefined4 *)(&DAT_20000890 + blockIndex))\n    ;\n    diff = __aeabi_fcmplt(maxSpeed,squaredAcc);\n    positionMult = squaredAcc;\n    if (diff != 0) {\n      positionMult = maxSpeed;\n    }\n    *(undefined4 *)(&DAT_20000888 + blockIndex) = positionMult;\n    diff = __aeabi_fcmpge(squaredAcc,*(undefined4 *)(&DAT_20000884 + blockIndex));\n    if (diff == 0) {\n      (&DAT_20000895)[blockIndex] = 0;\n    }\n    else {\n      (&DAT_20000895)[blockIndex] = 1;\n    }\n    (&DAT_20000894)[blockIndex] = 1;\n    DAT_20000d0c = *(undefined4 *)(&DAT_20000884 + blockIndex);\n    DAT_20000cf0 = DAT_20000cf2;\n    DAT_20000d00 = squaredPos;\n    DAT_20000d04 = accelerationMult;\n    DAT_20000d08 = decelerationMult;\n    DAT_20000cf2 = next_block_index(DAT_20000cf2);\n    DAT_20000cf4 = accelerationRounded;\n    DAT_20000cf8 = decelerationRounded;\n    DAT_20000cfc = positionRounded;\n    planner_recalculate();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003004": "calculate_block_speed_08003004",
                "param_1": "acceleration",
                "param_2": "deceleration",
                "param_3": "position",
                "param_4": "blockDistance",
                "param_5": "isAcceleration",
                "uVar1": "accelerationMult",
                "iVar2": "accelerationRounded",
                "iVar3": "decelerationRounded",
                "iVar4": "positionRounded",
                "uVar5": "decelerationMult",
                "uVar6": "positionMult",
                "uVar7": "squaredAcc",
                "uVar8": "squaredDec",
                "uVar9": "squaredPos",
                "iVar10": "blockIndex",
                "puVar11": "blockStatus",
                "iVar12": "diff",
                "uVar13": "maxDiff",
                "uVar14": "floatDiff",
                "uVar15": "floatDiffCeil",
                "uVar16": "floatDiv",
                "local_20": "maxSpeed",
                "local_1c": "inverseSpeed"
            },
            "calling": [
                "mc_line"
            ],
            "called": [
                "sqrt",
                "__aeabi_dcmpgt",
                "__aeabi_fsub",
                "__aeabi_d2iz",
                "next_block_index",
                "__aeabi_fmul",
                "__aeabi_fcmpge",
                "__addsf3",
                "__aeabi_fdiv",
                "max_allowable_speed",
                "planner_recalculate",
                "lround",
                "__subdf3",
                "__aeabi_f2d",
                "__floatsisf",
                "__aeabi_d2uiz",
                "ceil",
                "__aeabi_fcmplt",
                "__truncdfsf2",
                "__divdf3",
                "__aeabi_fcmpgt",
                "__muldf3",
                "__aeabi_dcmplt"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080035ec": {
            "entrypoint": "0x080035ec",
            "current_name": "initialize_parameters_080035ec",
            "code": "\nvoid initializeParameters_080035ec(undefined4 parameter1,undefined4 parameter2,undefined4 parameter3)\n\n{\n  DAT_20000cf4 = parameter1;\n  DAT_20000cf8 = parameter2;\n  DAT_20000cfc = parameter3;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080035ec": "initialize_parameters_080035ec",
                "param_1": "parameter1",
                "param_2": "parameter2",
                "param_3": "parameter3"
            },
            "calling": [
                "sys_sync_current_position"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003618": {
            "entrypoint": "0x08003618",
            "current_name": "update_planner_08003618",
            "code": "\nvoid updatePlanner_08003618(undefined4 inputValue)\n\n{\n  undefined4 convertedValue;\n  int offset;\n  undefined4 divisor;\n  \n  offset = (uint)DAT_20000cf1 * 0x40;\n  divisor = *(undefined4 *)(&DAT_20000890 + offset);\n  convertedValue = __floatsisf(inputValue);\n  convertedValue = __aeabi_fmul(divisor,convertedValue);\n  divisor = __floatsisf(*(undefined4 *)(&DAT_20000880 + offset));\n  convertedValue = __aeabi_fdiv(convertedValue,divisor);\n  *(undefined4 *)(&DAT_20000890 + offset) = convertedValue;\n  *(undefined4 *)(&DAT_20000880 + offset) = inputValue;\n  *(undefined4 *)(&DAT_20000888 + offset) = 0;\n  *(undefined4 *)(&DAT_2000088c + offset) = 0;\n  (&DAT_20000895)[offset] = 0;\n  (&DAT_20000894)[offset] = 1;\n  planner_recalculate();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003618": "update_planner_08003618",
                "param_1": "inputValue",
                "uVar1": "convertedValue",
                "iVar2": "offset",
                "uVar3": "divisor"
            },
            "calling": [
                "st_cycle_reinitialize"
            ],
            "called": [
                "__floatsisf",
                "__aeabi_fmul",
                "__aeabi_fdiv",
                "planner_recalculate"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800369c": {
            "entrypoint": "0x0800369c",
            "current_name": "print_characters_0800369c",
            "code": "\nvoid print_characters_0800369c(char *string)\n\n{\n  char *current_char;\n  \n  current_char = string;\n  while (*current_char != '\\0') {\n    serial_write(*current_char);\n    current_char = current_char + 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800369c": "print_characters_0800369c",
                "param_1": "string",
                "local_c": "current_char"
            },
            "calling": [
                "protocol_execute_startup",
                "report_startup_line"
            ],
            "called": [
                "serial_write"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036c6": {
            "entrypoint": "0x080036c6",
            "current_name": "print_string_080036c6",
            "code": "\nvoid print_string_080036c6(char *input_string)\n\n{\n  char *current_char;\n  \n  current_char = input_string;\n  while (*current_char != '\\0') {\n    serial_write(*current_char);\n    current_char = current_char + 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080036c6": "print_string_080036c6",
                "param_1": "input_string",
                "local_c": "current_char"
            },
            "calling": [
                "report_gcode_parameters",
                "report_feedback_message",
                "report_init_message",
                "report_grbl_settings",
                "report_grbl_help",
                "report_status_message",
                "report_alarm_message",
                "report_startup_line",
                "report_realtime_status",
                "report_gcode_modes"
            ],
            "called": [
                "serial_write"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036f0": {
            "entrypoint": "0x080036f0",
            "current_name": "serial_write_bits_080036f0",
            "code": "\nvoid serial_write_bits_080036f0(uint data,int num_bits)\n\n{\n  undefined4 bit_value;\n  int bit_index;\n  uint bit_mask;\n  \n  bit_mask = 1 << (num_bits - 1U & 0xff);\n  for (bit_index = 0; bit_index < num_bits; bit_index = bit_index + 1) {\n    if ((bit_mask & data) == 0) {\n      bit_value = 0x30;\n    }\n    else {\n      bit_value = 0x31;\n    }\n    serial_write(bit_value);\n    bit_mask = bit_mask >> 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080036f0": "serial_write_bits_080036f0",
                "param_1": "data",
                "param_2": "num_bits",
                "local_10": "bit_index",
                "local_c": "bit_mask",
                "uVar1": "bit_value"
            },
            "calling": [
                "print_uint8_base2",
                "print_uint16_base2"
            ],
            "called": [
                "serial_write"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003740": {
            "entrypoint": "0x08003740",
            "current_name": "print_base2_08003740",
            "code": "\nvoid print_base2_08003740(undefined input)\n\n{\n  print_binary(input,8);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003740": "print_base2_08003740",
                "param_1": "input",
                "print_base2": "print_binary"
            },
            "calling": [],
            "called": [
                "print_base2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800375c": {
            "entrypoint": "0x0800375c",
            "current_name": "print_base2_wrapper_0800375c",
            "code": "\nvoid print_base2_wrapper_0800375c(undefined2 input_value)\n\n{\n  print_base2(input_value,0x10);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800375c": "print_base2_wrapper_0800375c",
                "param_1": "input_value"
            },
            "calling": [
                "report_grbl_settings"
            ],
            "called": [
                "print_base2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003778": {
            "entrypoint": "0x08003778",
            "current_name": "print_uint_08003778",
            "code": "\nvoid print_uint_08003778(uint number)\n\n{\n  uint temp;\n  uint remainder;\n  char digits [12];\n  byte digit_count;\n  \n  digit_count = 0;\n  remainder = number;\n  if (number == 0) {\n    serial_write(0x30);\n  }\n  else {\n    for (; remainder != 0; remainder = remainder / 10) {\n      temp = (uint)digit_count;\n      digit_count = digit_count + 1;\n      digits[temp + 1] = (char)(remainder % 10) + '0';\n    }\n    for (; digit_count != 0; digit_count = digit_count - 1) {\n      serial_write(digits[digit_count]);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003778": "print_uint_08003778",
                "param_1": "number",
                "uVar1": "temp",
                "local_1c": "remainder",
                "acStack_15": "digits",
                "local_9": "digit_count"
            },
            "calling": [
                "printInteger"
            ],
            "called": [
                "serial_write"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080037fc": {
            "entrypoint": "0x080037fc",
            "current_name": "print_absolute_value_080037fc",
            "code": "\nvoid printAbsoluteValue_080037fc(int inputNumber)\n\n{\n  int absoluteValue;\n  \n  absoluteValue = inputNumber;\n  if (inputNumber < 0) {\n    serial_write(0x2d);\n    absoluteValue = -inputNumber;\n  }\n  print_uint32_base10(absoluteValue);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080037fc": "print_absolute_value_080037fc",
                "param_1": "inputNumber",
                "local_c": "absoluteValue"
            },
            "calling": [
                "report_grbl_settings",
                "report_startup_line",
                "report_gcode_modes"
            ],
            "called": [
                "print_uint32_base10",
                "serial_write"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003826": {
            "entrypoint": "0x08003826",
            "current_name": "convert_float_to_decimal_08003826",
            "code": "\nvoid convertFloatToDecimal_08003826(uint inputFloat)\n\n{\n  int isNegative;\n  undefined4 multipliedFloat;\n  byte tempByte;\n  uint tempUInt;\n  uint absoluteFloat;\n  char decimalStack [13];\n  uint integerPart;\n  byte digitIndex;\n  byte loopCounter;\n  \n  isNegative = __aeabi_fcmplt(inputFloat,0);\n  absoluteFloat = inputFloat;\n  if (isNegative != 0) {\n    serial_write(0x2d);\n    absoluteFloat = inputFloat ^ 0x80000000;\n  }\n  for (loopCounter = DAT_20000ef9; 1 < loopCounter; loopCounter = loopCounter - 2) {\n    absoluteFloat = __aeabi_fmul(absoluteFloat,0x42c80000);\n  }\n  if (loopCounter != 0) {\n    absoluteFloat = __aeabi_fmul(absoluteFloat,0x41200000);\n  }\n  multipliedFloat = __addsf3(absoluteFloat,0x3f000000);\n  digitIndex = 0;\n  integerPart = __aeabi_f2iz(multipliedFloat);\n  decimalStack[DAT_20000ef9 + 1] = '.';\n  for (; integerPart != 0; integerPart = integerPart / 10) {\n    if (digitIndex == DAT_20000ef9) {\n      digitIndex = digitIndex + 1;\n    }\n    tempUInt = (uint)digitIndex;\n    digitIndex = digitIndex + 1;\n    decimalStack[tempUInt + 1] = (char)(integerPart % 10) + '0';\n  }\n  while (digitIndex < DAT_20000ef9) {\n    tempUInt = (uint)digitIndex;\n    digitIndex = digitIndex + 1;\n    decimalStack[tempUInt + 1] = '0';\n  }\n  if (digitIndex == DAT_20000ef9) {\n    tempByte = digitIndex + 1;\n    digitIndex = digitIndex + 2;\n    decimalStack[tempByte + 1] = '0';\n  }\n  for (; digitIndex != 0; digitIndex = digitIndex - 1) {\n    serial_write(decimalStack[digitIndex]);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003826": "convert_float_to_decimal_08003826",
                "param_1": "inputFloat",
                "iVar1": "isNegative",
                "uVar2": "multipliedFloat",
                "bVar3": "tempByte",
                "uVar4": "tempUInt",
                "local_24": "absoluteFloat",
                "acStack_1d": "decimalStack",
                "local_10": "integerPart",
                "local_a": "digitIndex",
                "local_9": "loopCounter"
            },
            "calling": [
                "report_gcode_parameters",
                "report_grbl_settings",
                "report_realtime_status",
                "report_gcode_modes"
            ],
            "called": [
                "__aeabi_fcmplt",
                "__addsf3",
                "__aeabi_fmul",
                "__aeabi_f2iz",
                "serial_write"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003980": {
            "entrypoint": "0x08003980",
            "current_name": "initialize_data_08003980",
            "code": "\nvoid initializeData_08003980(void)\n\n{\n  DAT_20000e10 = 0;\n  DAT_20000e11 = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003980": "initialize_data_08003980"
            },
            "calling": [
                "protocol_process",
                "protocol_init"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080039a0": {
            "entrypoint": "0x080039a0",
            "current_name": "initialize_protocol_080039a0",
            "code": "\nvoid initialize_protocol_080039a0(void)\n\n{\n  reset_line_buffer();\n  display_init_message();\n  DAT_20000e50 = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080039a0": "initialize_protocol_080039a0",
                "protocol_reset_line_buffer": "reset_line_buffer",
                "report_init_message": "display_init_message"
            },
            "calling": [
                "grbl_main"
            ],
            "called": [
                "report_init_message",
                "protocol_reset_line_buffer"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080039bc": {
            "entrypoint": "0x080039bc",
            "current_name": "process_startup_lines_080039bc",
            "code": "\nvoid process_startup_lines_080039bc(void)\n\n{\n  int read_result;\n  undefined4 execution_result;\n  byte line_index;\n  \n  for (line_index = 0; line_index < 2; line_index = line_index + 1) {\n    read_result = settings_read_startup_line(line_index,&DAT_20000d10);\n    if (read_result == 0) {\n      report_status_message(10);\n    }\n    else if (DAT_20000d10 != '\\0') {\n      printString(&DAT_20000d10);\n      execution_result = gc_execute_line(&DAT_20000d10);\n      report_status_message(execution_result);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080039bc": "process_startup_lines_080039bc",
                "iVar1": "read_result",
                "uVar2": "execution_result",
                "local_9": "line_index"
            },
            "calling": [
                "protocol_execute_line",
                "grbl_main"
            ],
            "called": [
                "gc_execute_line",
                "settings_read_startup_line",
                "printString",
                "report_status_message"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a18": {
            "entrypoint": "0x08003a18",
            "current_name": "update_status_08003a18",
            "code": "\nvoid updateStatus_08003a18(uint status)\n\n{\n  if ((status & 0x80) == 0) {\n    if ((status & 0x40) == 0) {\n      if ((status & 0x20) != 0) {\n        DAT_20000eaa = DAT_20000eaa | 2;\n      }\n    }\n    else {\n      DAT_20000eaa = DAT_20000eaa | 8;\n    }\n  }\n  else {\n    mc_reset();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003a18": "update_status_08003a18",
                "param_1": "status"
            },
            "calling": [
                "FUN_080074c8"
            ],
            "called": [
                "mc_reset"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a74": {
            "entrypoint": "0x08003a74",
            "current_name": "process_system_status_08003a74",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08003ad2) */\n\nvoid processSystemStatus_08003a74(void)\n\n{\n  byte statusByte;\n  \n  statusByte = DAT_20000eaa;\n  if (DAT_20000eaa != 0) {\n    if ((DAT_20000eaa & 0x60) != 0) {\n      DAT_20000ea9 = 6;\n      if ((DAT_20000eaa & 0x40) != 0) {\n        report_alarm_message(0xffffffff);\n        report_feedback_message(1);\n        do {\n        } while( true );\n      }\n      report_alarm_message(0xfffffffe);\n      DAT_20000eaa = DAT_20000eaa & 0x9f;\n    }\n    if ((statusByte & 0x10) == 0) {\n      if ((statusByte & 1) != 0) {\n        report_realtime_status();\n        DAT_20000eaa = DAT_20000eaa & 0xfe;\n      }\n      if ((statusByte & 8) != 0) {\n        st_feed_hold();\n        DAT_20000eaa = DAT_20000eaa & 0xf7;\n      }\n      if ((statusByte & 4) != 0) {\n        st_cycle_reinitialize();\n        DAT_20000eaa = DAT_20000eaa & 0xfb;\n      }\n      if ((statusByte & 2) != 0) {\n        st_cycle_start();\n        if ((DAT_20000ee4 & 2) != 0) {\n          DAT_20000eb8 = 1;\n        }\n        DAT_20000eaa = DAT_20000eaa & 0xfd;\n      }\n    }\n    else {\n      DAT_20000ea8 = 1;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003a74": "process_system_status_08003a74",
                "bVar1": "statusByte"
            },
            "calling": [
                "mc_line",
                "grbl_main",
                "protocol_process",
                "mc_dwell",
                "mc_go_home",
                "plan_synchronize"
            ],
            "called": [
                "st_feed_hold",
                "report_feedback_message",
                "st_cycle_reinitialize",
                "st_cycle_start",
                "report_alarm_message",
                "report_realtime_status"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003b98": {
            "entrypoint": "0x08003b98",
            "current_name": "process_g_code_command_08003b98",
            "code": "\nuint processGCodeCommand_08003b98(char *gcodeCommand)\n\n{\n  byte firstChar;\n  int result;\n  undefined4 settingValue1;\n  uint returnValue;\n  undefined8 settingValue2;\n  undefined4 globalSettingIndex;\n  undefined4 settingValue;\n  byte indexA;\n  byte indexB;\n  \n  if (*gcodeCommand != '$') {\n    returnValue = gc_execute_line(gcodeCommand);\n    return returnValue;\n  }\n  indexA = 1;\n  indexB = '\\0';\n  firstChar = gcodeCommand[1];\n  if (firstChar == 0) {\n    report_grbl_help();\n    return 0;\n  }\n  if ((0x58 < firstChar) || (firstChar < 0x23)) goto switchD_08003bdc_caseD_25;\n  switch(firstChar) {\n  case 0x23:\n    indexA = 2;\n    if (gcodeCommand[2] != '\\0') {\n      return 3;\n    }\n    report_gcode_parameters();\n    break;\n  case 0x24:\n    indexA = 2;\n    if (gcodeCommand[2] != '\\0') {\n      return 3;\n    }\n    report_grbl_settings();\n    break;\n  case 0x43:\n    indexA = 2;\n    if (gcodeCommand[2] != '\\0') {\n      return 3;\n    }\n    if (DAT_20000ea9 == '\\a') {\n      mc_reset();\n      report_feedback_message(5);\n    }\n    else {\n      if (DAT_20000ea9 != '\\0') {\n        return 0xb;\n      }\n      DAT_20000ea9 = '\\a';\n      report_feedback_message(4);\n    }\n    break;\n  case 0x47:\n    indexA = 2;\n    if (gcodeCommand[2] != '\\0') {\n      return 3;\n    }\n    report_gcode_modes();\n    break;\n  case 0x48:\n    if ((DAT_20000ee4 & 0x10) == 0) {\n      return 7;\n    }\n    if ((DAT_20000ea9 != '\\0') && (DAT_20000ea9 != '\\x06')) {\n      return 0xb;\n    }\n    mc_go_home();\n    if (DAT_20000ea8 == '\\0') {\n      protocol_execute_startup();\n    }\n    break;\n  case 0x4e:\n    indexA = 2;\n    if (gcodeCommand[2] == '\\0') {\n      for (indexB = 0; indexB < 2; indexB = indexB + 1) {\n        result = settings_read_startup_line(indexB,gcodeCommand);\n        if (result == 0) {\n          report_status_message(10);\n        }\n        else {\n          report_startup_line(indexB,gcodeCommand);\n        }\n      }\n      return 0;\n    }\n    indexB = '\\x01';\n  default:\nswitchD_08003bdc_caseD_25:\n    result = read_float(gcodeCommand,&indexA,&settingValue);\n    if (result == 0) {\n      return 1;\n    }\n    firstChar = indexA + 1;\n    if (gcodeCommand[indexA] != '=') {\n      return 3;\n    }\n    indexA = firstChar;\n    if (indexB == '\\0') {\n      result = read_float(gcodeCommand,&indexA,&globalSettingIndex);\n      if (result == 0) {\n        return 1;\n      }\n      if (gcodeCommand[indexA] == '\\0') {\n        settingValue1 = __aeabi_f2iz(settingValue);\n        returnValue = settings_store_global_setting(settingValue1,globalSettingIndex);\n        return returnValue;\n      }\n      return 3;\n    }\n    do {\n      gcodeCommand[(uint)indexA - (uint)firstChar] = gcodeCommand[indexA];\n      returnValue = (uint)indexA;\n      indexA = indexA + 1;\n    } while (gcodeCommand[returnValue] != '\\0');\n    indexB = firstChar;\n    indexB = gc_execute_line(gcodeCommand);\n    if (indexB != 0) {\n      return (uint)indexB;\n    }\n    settingValue2 = __aeabi_f2d(settingValue);\n    settingValue2 = trunc((int)settingValue2,(int)((ulonglong)settingValue2 >> 0x20));\n    indexB = __aeabi_d2uiz((int)settingValue2,(int)((ulonglong)settingValue2 >> 0x20));\n    settings_store_startup_line(indexB,gcodeCommand);\n    break;\n  case 0x58:\n    indexA = 2;\n    if (gcodeCommand[2] != '\\0') {\n      return 3;\n    }\n    if (DAT_20000ea9 == '\\x06') {\n      report_feedback_message(3);\n      DAT_20000ea9 = '\\0';\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003b98": "process_g_code_command_08003b98",
                "param_1": "gcodeCommand",
                "bVar1": "firstChar",
                "iVar2": "result",
                "uVar3": "settingValue1",
                "uVar4": "returnValue",
                "uVar5": "settingValue2",
                "local_14": "globalSettingIndex",
                "local_10": "settingValue",
                "local_a": "indexA",
                "local_9": "indexB"
            },
            "calling": [
                "protocol_process"
            ],
            "called": [
                "settings_store_global_setting",
                "gc_execute_line",
                "report_feedback_message",
                "trunc",
                "report_status_message",
                "report_startup_line",
                "__aeabi_f2iz",
                "mc_go_home",
                "__aeabi_f2d",
                "report_gcode_parameters",
                "mc_reset",
                "protocol_execute_startup",
                "__aeabi_d2uiz",
                "report_grbl_settings",
                "settings_store_startup_line",
                "settings_read_startup_line",
                "report_grbl_help",
                "read_float",
                "report_gcode_modes"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f34": {
            "entrypoint": "0x08003f34",
            "current_name": "process_serial_data_08003f34",
            "code": "\nvoid process_serial_data_08003f34(void)\n\n{\n  byte serial_byte;\n  undefined4 status;\n  uint index;\n  \n  while( true ) {\n    while( true ) {\n      serial_byte = serial_read();\n      if (serial_byte == 0xff) {\n        return;\n      }\n      if ((serial_byte == 10) || (serial_byte == 0xd)) break;\n      if (DAT_20000e11 == '\\0') {\n        if ((0x20 < serial_byte) && (serial_byte != 0x2f)) {\n          if (serial_byte == 0x28) {\n            DAT_20000e11 = '\\x01';\n          }\n          else if (DAT_20000e10 == 0xff) {\n            report_status_message(0xd);\n            protocol_reset_line_buffer();\n          }\n          else if ((serial_byte < 0x61) || (0x7a < serial_byte)) {\n            index = (uint)DAT_20000e10;\n            DAT_20000e10 = DAT_20000e10 + 1;\n            (&DAT_20000d10)[index] = serial_byte;\n          }\n          else {\n            index = (uint)DAT_20000e10;\n            DAT_20000e10 = DAT_20000e10 + 1;\n            (&DAT_20000d10)[index] = serial_byte - 0x20;\n          }\n        }\n      }\n      else if (serial_byte == 0x29) {\n        DAT_20000e11 = '\\0';\n      }\n    }\n    protocol_execute_runtime();\n    if (DAT_20000ea8 != '\\0') break;\n    if (DAT_20000e10 == 0) {\n      report_status_message(0);\n    }\n    else {\n      (&DAT_20000d10)[DAT_20000e10] = 0;\n      status = protocol_execute_line(&DAT_20000d10);\n      report_status_message(status);\n    }\n    protocol_reset_line_buffer();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f34": "process_serial_data_08003f34",
                "bVar1": "serial_byte",
                "uVar2": "status",
                "uVar3": "index"
            },
            "calling": [
                "grbl_main"
            ],
            "called": [
                "protocol_execute_line",
                "protocol_execute_runtime",
                "report_status_message",
                "protocol_reset_line_buffer",
                "serial_read"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004030": {
            "entrypoint": "0x08004030",
            "current_name": "FUNC_08004030",
            "code": "\nvoid FUNC_08004030(char param_1)\n\n{\n  if (param_1 == '\\0') {\n    printPgmString(&DAT_0800b5c8);\n  }\n  else {\n    printPgmString(\"error: \");\n    switch(param_1) {\n    case '\\x01':\n      printPgmString(\"Bad number format\");\n      break;\n    case '\\x02':\n      printPgmString(\"Expected command letter\");\n      break;\n    case '\\x03':\n      printPgmString(\"Unsupported statement\");\n      break;\n    case '\\x04':\n      printPgmString(\"Invalid radius\");\n      break;\n    case '\\x05':\n      printPgmString(\"Modal group violation\");\n      break;\n    case '\\x06':\n      printPgmString(\"Invalid statement\");\n      break;\n    case '\\a':\n      printPgmString(\"Setting disabled\");\n      break;\n    case '\\b':\n      printPgmString(\"Value < 0.0\");\n      break;\n    case '\\t':\n      printPgmString(\"Value < 3 usec\");\n      break;\n    case '\\n':\n      printPgmString(\"EEPROM read fail. Using defaults\");\n      break;\n    case '\\v':\n      printPgmString(\"Busy or queued\");\n      break;\n    case '\\f':\n      printPgmString(\"Alarm lock\");\n      break;\n    case '\\r':\n      printPgmString(\"Line overflow\");\n    }\n    printPgmString(&DAT_0800b6d8);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004030": "FUNC_08004030"
            },
            "calling": [
                "report_gcode_parameters",
                "protocol_execute_line",
                "protocol_process",
                "protocol_execute_startup",
                "gc_init",
                "settings_init"
            ],
            "called": [
                "printPgmString"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004148": {
            "entrypoint": "0x08004148",
            "current_name": "display_alarm_08004148",
            "code": "\nvoid displayAlarm_08004148(char errorCode)\n\n{\n  printProgramString(\"ALARM: \");\n  if (errorCode == -2) {\n    printProgramString(\"Abort during cycle\");\n  }\n  else if (errorCode == -1) {\n    printProgramString(\"Hard limit\");\n  }\n  printProgramString(\". MPos?\\r\\n\");\n  delayMilliseconds(500);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004148": "display_alarm_08004148",
                "param_1": "errorCode",
                "printPgmString": "printProgramString",
                "delay_ms": "delayMilliseconds"
            },
            "calling": [
                "protocol_execute_runtime"
            ],
            "called": [
                "delay_ms",
                "printPgmString"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080041a0": {
            "entrypoint": "0x080041a0",
            "current_name": "print_status_message_080041a0",
            "code": "\nvoid printStatusMessage_080041a0(undefined status)\n\n{\n  printPgmString(&DAT_0800b710);\n  switch(status) {\n  case 1:\n    printPgmString(\"Reset to continue\");\n    break;\n  case 2:\n    printPgmString(\"\\'$H\\'|\\'$X\\' to unlock\");\n    break;\n  case 3:\n    printPgmString(\"Caution: Unlocked\");\n    break;\n  case 4:\n    printPgmString(\"Enabled\");\n    break;\n  case 5:\n    printPgmString(\"Disabled\");\n  }\n  printPgmString(&DAT_0800b764);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080041a0": "print_status_message_080041a0",
                "param_1": "status"
            },
            "calling": [
                "protocol_execute_line",
                "grbl_main",
                "protocol_execute_runtime"
            ],
            "called": [
                "printPgmString"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004228": {
            "entrypoint": "0x08004228",
            "current_name": "initialize_grbl_08004228",
            "code": "\nvoid initializeGrbl_08004228(void)\n\n{\n  printGrblVersion(\"\\r\\nGrbl 0.8c [\\'$\\' for help]\\r\\n\");\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004228": "initialize_grbl_08004228",
                "printPgmString": "printGrblVersion"
            },
            "calling": [
                "protocol_init"
            ],
            "called": [
                "printPgmString"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800423c": {
            "entrypoint": "0x0800423c",
            "current_name": "print_grbl_menu_0800423c",
            "code": "\nvoid printGrblMenu_0800423c(void)\n\n{\n  printProgramString(\n                \"$$ (view Grbl settings)\\r\\n$# (view # parameters)\\r\\n$G (view parser state)\\r\\n$N (view startup blocks)\\r\\n$x=value (save Grbl setting)\\r\\n$Nx=line (save startup block)\\r\\n$C (check gcode mode)\\r\\n$X (kill alarm lock)\\r\\n$H (run homing cycle)\\r\\n~ (cycle start)\\r\\n! (feed hold)\\r\\n? (current status)\\r\\nctrl-x (reset Grbl)\\r\\n\"\n                );\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800423c": "print_grbl_menu_0800423c",
                "printPgmString": "printProgramString"
            },
            "calling": [
                "protocol_execute_line"
            ],
            "called": [
                "printPgmString"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004250": {
            "entrypoint": "0x08004250",
            "current_name": "print_config_values_08004250",
            "code": "\nvoid printConfigValues_08004250(void)\n\n{\n  undefined4 acceleration;\n  \n  printPgmString(&DAT_0800b8b8);\n  printFloat(DAT_20000ebc);\n  printPgmString(\" (x, step/mm)\\r\\n$1=\");\n  printFloat(DAT_20000ec0);\n  printPgmString(\" (y, step/mm)\\r\\n$2=\");\n  printFloat(DAT_20000ec4);\n  printPgmString(\" (z, step/mm)\\r\\n$3=\");\n  printInteger(DAT_20000ec9);\n  printPgmString(\" (step pulse, usec)\\r\\n$4=\");\n  printFloat(DAT_20000ecc);\n  printPgmString(\" (default feed, mm/min)\\r\\n$5=\");\n  printFloat(DAT_20000ed0);\n  printPgmString(\" (default seek, mm/min)\\r\\n$6=\");\n  printInteger(DAT_20000ed4);\n  printPgmString(\" (step port invert mask, int:\");\n  print_uint16_base2(DAT_20000ed4);\n  printPgmString(\")\\r\\n$7=\");\n  printInteger(DAT_20000ef8);\n  printPgmString(\" (step idle delay, msec)\\r\\n$8=\");\n  acceleration = __aeabi_fdiv(DAT_20000edc,0x45610000);\n  printFloat(acceleration);\n  printPgmString(\" (acceleration, mm/sec^2)\\r\\n$9=\");\n  printFloat(DAT_20000ee0);\n  printPgmString(\" (junction deviation, mm)\\r\\n$10=\");\n  printFloat(DAT_20000ed8);\n  printPgmString(\" (arc, mm/segment)\\r\\n$11=\");\n  printInteger(DAT_20000efa);\n  printPgmString(\" (n-arc correction, int)\\r\\n$12=\");\n  printInteger(DAT_20000ef9);\n  printPgmString(\" (n-decimals, int)\\r\\n$13=\");\n  printInteger((DAT_20000ee4 & 1) != 0);\n  printPgmString(\" (report inches, bool)\\r\\n$14=\");\n  printInteger((DAT_20000ee4 & 2) != 0);\n  printPgmString(\" (auto start, bool)\\r\\n$15=\");\n  printInteger((DAT_20000ee4 & 4) != 0);\n  printPgmString(\" (invert step enable, bool)\\r\\n$16=\");\n  printInteger((DAT_20000ee4 & 8) != 0);\n  printPgmString(\" (hard limits, bool)\\r\\n$17=\");\n  printInteger((DAT_20000ee4 & 0x10) != 0);\n  printPgmString(\" (homing cycle, bool)\\r\\n$18=\");\n  printInteger(DAT_20000ee6);\n  printPgmString(\" (homing dir invert mask, int:\");\n  print_uint16_base2(DAT_20000ee6);\n  printPgmString(\")\\r\\n$19=\");\n  printFloat(DAT_20000ee8);\n  printPgmString(\" (homing feed, mm/min)\\r\\n$20=\");\n  printFloat(DAT_20000eec);\n  printPgmString(\" (homing seek, mm/min)\\r\\n$21=\");\n  printInteger(DAT_20000ef0);\n  printPgmString(\" (homing debounce, msec)\\r\\n$22=\");\n  printFloat(DAT_20000ef4);\n  printPgmString(\" (homing pull-off, mm)\\r\\n$23=\");\n  printInteger(DAT_20000ed6);\n  printPgmString(\" (dir port invert mask, int:\");\n  print_uint16_base2(DAT_20000ed6);\n  printPgmString(&DAT_0800bb94);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004250": "print_config_values_08004250",
                "uVar1": "acceleration"
            },
            "calling": [
                "protocol_execute_line",
                "settings_init"
            ],
            "called": [
                "printPgmString",
                "print_uint16_base2",
                "__aeabi_fdiv",
                "printInteger",
                "printFloat"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080044e8": {
            "entrypoint": "0x080044e8",
            "current_name": "print_g92_coordinates_080044e8",
            "code": "\nvoid printG92Coordinates_080044e8(void)\n\n{\n  int result;\n  undefined4 truncatedFloat;\n  undefined8 convertedFloat;\n  undefined4 coordData [3];\n  byte index;\n  byte counter;\n  \n  counter = 0;\n  while( true ) {\n    if (7 < counter) {\n      printPgmString(\"[G92:\");\n      for (index = 0; index < 3; index = index + 1) {\n        if ((DAT_20000ee4 & 1) == 0) {\n          printFloat(*(undefined4 *)(&DAT_20000e74 + (index + 10) * 4));\n        }\n        else {\n          convertedFloat = __aeabi_f2d(*(undefined4 *)(&DAT_20000e74 + (index + 10) * 4));\n          convertedFloat = __muldf3((int)convertedFloat,(int)((ulonglong)convertedFloat >> 0x20),0x57e16865,0x3fa42851);\n          truncatedFloat = __truncdfsf2((int)convertedFloat,(int)((ulonglong)convertedFloat >> 0x20));\n          printFloat(truncatedFloat);\n        }\n        if (index < 2) {\n          printPgmString(&DAT_0800bbbc);\n        }\n        else {\n          printPgmString(&DAT_0800b764);\n        }\n      }\n      return;\n    }\n    result = settings_read_coord_data(counter,coordData);\n    if (result == 0) break;\n    printPgmString(&DAT_0800bb98);\n    switch(counter) {\n    case 0:\n      printPgmString(&DAT_0800bb9c);\n      break;\n    case 1:\n      printPgmString(&DAT_0800bba0);\n      break;\n    case 2:\n      printPgmString(&DAT_0800bba4);\n      break;\n    case 3:\n      printPgmString(&DAT_0800bba8);\n      break;\n    case 4:\n      printPgmString(&DAT_0800bbac);\n      break;\n    case 5:\n      printPgmString(&DAT_0800bbb0);\n      break;\n    case 6:\n      printPgmString(&DAT_0800bbb4);\n      break;\n    case 7:\n      printPgmString(&DAT_0800bbb8);\n    }\n    for (index = 0; index < 3; index = index + 1) {\n      if ((DAT_20000ee4 & 1) == 0) {\n        printFloat(coordData[index]);\n      }\n      else {\n        convertedFloat = __aeabi_f2d(coordData[index]);\n        convertedFloat = __muldf3((int)convertedFloat,(int)((ulonglong)convertedFloat >> 0x20),0x57e16865,0x3fa42851);\n        truncatedFloat = __truncdfsf2((int)convertedFloat,(int)((ulonglong)convertedFloat >> 0x20));\n        printFloat(truncatedFloat);\n      }\n      if (index < 2) {\n        printPgmString(&DAT_0800bbbc);\n      }\n      else {\n        printPgmString(&DAT_0800b764);\n      }\n    }\n    counter = counter + 1;\n  }\n  report_status_message(10);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080044e8": "print_g92_coordinates_080044e8",
                "auStack_18": "coordData",
                "local_a": "index",
                "local_9": "counter",
                "iVar1": "result",
                "uVar2": "truncatedFloat",
                "uVar3": "convertedFloat"
            },
            "calling": [
                "protocol_execute_line"
            ],
            "called": [
                "__aeabi_f2d",
                "settings_read_coord_data",
                "__truncdfsf2",
                "printPgmString",
                "report_status_message",
                "printFloat",
                "__muldf3"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080046d0": {
            "entrypoint": "0x080046d0",
            "current_name": "print_information_080046d0",
            "code": "\nvoid printInformation_080046d0(void)\n\n{\n  undefined4 truncatedValue;\n  undefined8 convertedValue;\n  \n  switch(DAT_20000e71) {\n  case 0:\n    printPgmString(&DAT_0800bbc8);\n    break;\n  case 1:\n    printPgmString(&DAT_0800bbcc);\n    break;\n  case 2:\n    printPgmString(&DAT_0800bbd0);\n    break;\n  case 3:\n    printPgmString(&DAT_0800bbd4);\n    break;\n  case 4:\n    printPgmString(&DAT_0800bbd8);\n  }\n  printPgmString(&DAT_0800bbe0);\n  printInteger(DAT_20000e8c + 0x36);\n  if (DAT_20000e89 == '\\0') {\n    if (DAT_20000e8a == '\\x01') {\n      printPgmString(&DAT_0800bbe4);\n    }\n    else {\n      printPgmString(&DAT_0800bbec);\n    }\n  }\n  else {\n    printPgmString(&DAT_0800bbf4);\n  }\n  if (DAT_20000e73 == '\\0') {\n    printPgmString(&DAT_0800bc04);\n  }\n  else {\n    printPgmString(&DAT_0800bbfc);\n  }\n  if (DAT_20000e74 == '\\0') {\n    printPgmString(&DAT_0800bc14);\n  }\n  else {\n    printPgmString(&DAT_0800bc0c);\n  }\n  if (DAT_20000e72 == '\\0') {\n    printPgmString(&DAT_0800bc24);\n  }\n  else {\n    printPgmString(&DAT_0800bc1c);\n  }\n  if (DAT_20000e75 == 2) {\n    printPgmString(&DAT_0800bc34);\n  }\n  else if (DAT_20000e75 < 3) {\n    if (DAT_20000e75 == 0) {\n      printPgmString(&DAT_0800bc2c);\n    }\n    else if (DAT_20000e75 == 1) {\n      printPgmString(&DAT_0800bc30);\n    }\n  }\n  if (DAT_20000e76 == '\\x01') {\n    printPgmString(&DAT_0800bc38);\n  }\n  else if (DAT_20000e76 < '\\x02') {\n    if (DAT_20000e76 == -1) {\n      printPgmString(&DAT_0800bc3c);\n    }\n    else if (DAT_20000e76 == '\\0') {\n      printPgmString(&DAT_0800bc40);\n    }\n  }\n  if (DAT_20000e77 == 2) {\n    printPgmString(&DAT_0800bc4c);\n  }\n  else if (DAT_20000e77 < 3) {\n    if (DAT_20000e77 == 0) {\n      printPgmString(&DAT_0800bc44);\n    }\n    else if (DAT_20000e77 == 1) {\n      printPgmString(&DAT_0800bc48);\n    }\n  }\n  printPgmString(&DAT_0800bc50);\n  printInteger(DAT_20000e88);\n  printPgmString(&DAT_0800bc54);\n  if (DAT_20000e73 == '\\0') {\n    printFloat(DAT_20000e78);\n  }\n  else {\n    convertedValue = __aeabi_f2d(DAT_20000e78);\n    convertedValue = __muldf3((int)convertedValue,(int)((ulonglong)convertedValue >> 0x20),0x57e16865,0x3fa42851);\n    truncatedValue = __truncdfsf2((int)convertedValue,(int)((ulonglong)convertedValue >> 0x20));\n    printFloat(truncatedValue);\n  }\n  printPgmString(&DAT_0800b764);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080046d0": "print_information_080046d0",
                "uVar1": "truncatedValue",
                "uVar2": "convertedValue"
            },
            "calling": [
                "protocol_execute_line"
            ],
            "called": [
                "__aeabi_f2d",
                "__truncdfsf2",
                "printPgmString",
                "printInteger",
                "printFloat",
                "__muldf3"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004900": {
            "entrypoint": "0x08004900",
            "current_name": "print_message_08004900",
            "code": "\nvoid printMessage_08004900(undefined message1,undefined4 message2)\n\n{\n  printPgmString(&DAT_0800bc58);\n  printInteger(message1);\n  printPgmString(&DAT_0800bc5c);\n  printString(message2);\n  printPgmString(&DAT_0800b6d8);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004900": "print_message_08004900",
                "param_1": "message1",
                "param_2": "message2"
            },
            "calling": [
                "protocol_execute_line"
            ],
            "called": [
                "printPgmString",
                "printString",
                "printInteger"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004940": {
            "entrypoint": "0x08004940",
            "current_name": "print_status_08004940",
            "code": "\nvoid printStatus_08004940(void)\n\n{\n  undefined4 floatVal;\n  uint tempVar;\n  undefined4 tempVar2;\n  undefined8 doubleVal1;\n  undefined8 doubleVal2;\n  undefined4 statusValues [6];\n  byte index;\n  \n  statusValues[3] = DAT_20000eac;\n  statusValues[4] = DAT_20000eb0;\n  statusValues[5] = DAT_20000eb4;\n  switch(DAT_20000ea9) {\n  case 0:\n    printPgmString(\"<Idle\");\n    break;\n  case 2:\n    printPgmString(\"<Queue\");\n    break;\n  case 3:\n    printPgmString(&DAT_0800bc70);\n    break;\n  case 4:\n    printPgmString(\"<Hold\");\n    break;\n  case 5:\n    printPgmString(\"<Home\");\n    break;\n  case 6:\n    printPgmString(\"<Alarm\");\n    break;\n  case 7:\n    printPgmString(\"<Check\");\n  }\n  printPgmString(\",MPos:\");\n  for (index = 0; index < 3; index = index + 1) {\n    floatVal = __floatsisf(statusValues[index + 3]);\n    tempVar = (uint)index;\n    floatVal = __aeabi_fdiv(floatVal,(&DAT_20000ebc)[index]);\n    statusValues[tempVar] = floatVal;\n    if ((DAT_20000ee4 & 1) != 0) {\n      doubleVal1 = __aeabi_f2d(statusValues[index]);\n      doubleVal1 = __muldf3((int)doubleVal1,(int)((ulonglong)doubleVal1 >> 0x20),0x57e16865,0x3fa42851);\n      tempVar = (uint)index;\n      floatVal = __truncdfsf2((int)doubleVal1,(int)((ulonglong)doubleVal1 >> 0x20));\n      statusValues[tempVar] = floatVal;\n    }\n    printFloat(statusValues[index]);\n    printPgmString(&DAT_0800bbbc);\n  }\n  printPgmString(\"WPos:\");\n  for (index = 0; index < 3; index = index + 1) {\n    if ((DAT_20000ee4 & 1) == 0) {\n      tempVar2 = statusValues[index];\n      floatVal = __addsf3(*(undefined4 *)(&DAT_20000e70 + (index + 8) * 4),\n                       *(undefined4 *)(&DAT_20000e74 + (index + 10) * 4));\n      tempVar = (uint)index;\n      floatVal = __aeabi_fsub(tempVar2,floatVal);\n      statusValues[tempVar] = floatVal;\n    }\n    else {\n      doubleVal1 = __aeabi_f2d(statusValues[index]);\n      floatVal = __addsf3(*(undefined4 *)(&DAT_20000e70 + (index + 8) * 4),\n                       *(undefined4 *)(&DAT_20000e74 + (index + 10) * 4));\n      doubleVal2 = __aeabi_f2d(floatVal);\n      doubleVal2 = __muldf3((int)doubleVal2,(int)((ulonglong)doubleVal2 >> 0x20),0x57e16865,0x3fa42851);\n      doubleVal1 = __subdf3((int)doubleVal1,(int)((ulonglong)doubleVal1 >> 0x20),(int)doubleVal2,\n                       (int)((ulonglong)doubleVal2 >> 0x20));\n      tempVar = (uint)index;\n      floatVal = __truncdfsf2((int)doubleVal1,(int)((ulonglong)doubleVal1 >> 0x20));\n      statusValues[tempVar] = floatVal;\n    }\n    printFloat(statusValues[index]);\n    if (index < 2) {\n      printPgmString(&DAT_0800bbbc);\n    }\n  }\n  printPgmString(&DAT_0800bca8);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004940": "print_status_08004940",
                "auStack_2c": "statusValues",
                "local_11": "index",
                "uVar1": "floatVal",
                "uVar2": "tempVar",
                "uVar3": "tempVar2",
                "uVar4": "doubleVal1",
                "uVar5": "doubleVal2"
            },
            "calling": [
                "protocol_execute_runtime"
            ],
            "called": [
                "__aeabi_f2d",
                "__aeabi_fsub",
                "__floatsisf",
                "__truncdfsf2",
                "printPgmString",
                "__addsf3",
                "__aeabi_fdiv",
                "__subdf3",
                "printFloat",
                "__muldf3"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004bc0": {
            "entrypoint": "0x08004bc0",
            "current_name": "write_data_to_eeprom_08004bc0",
            "code": "\nvoid writeDataToEEPROM_08004bc0(byte address,undefined4 data)\n\n{\n  writeDataWithChecksum((ushort)address * 0x101 + 0x300,data,0x100);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004bc0": "write_data_to_eeprom_08004bc0",
                "param_1": "address",
                "param_2": "data",
                "memcpy_to_eeprom_with_checksum": "writeDataWithChecksum"
            },
            "calling": [
                "protocol_execute_line",
                "settings_read_startup_line"
            ],
            "called": [
                "memcpy_to_eeprom_with_checksum"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004bf4": {
            "entrypoint": "0x08004bf4",
            "current_name": "copy_to_eeprom_08004bf4",
            "code": "\nvoid copyToEEPROM_08004bf4(byte sourceByte,undefined4 destinationAddress)\n\n{\n  copyToEEPROM_08004bf4WithChecksum((ushort)sourceByte * 0xd + 0x200,destinationAddress,0xc);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004bf4": "copy_to_eeprom_08004bf4",
                "param_1": "sourceByte",
                "param_2": "destinationAddress",
                "memcpy_to_eeprom_with_checksum": "copyToEEPROMWithChecksum"
            },
            "calling": [
                "settings_read_coord_data",
                "gc_execute_line"
            ],
            "called": [
                "memcpy_to_eeprom_with_checksum"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c2a": {
            "entrypoint": "0x08004c2a",
            "current_name": "initialize_eeprom_data_08004c2a",
            "code": "\nvoid initializeEEPROMData_08004c2a(void)\n\n{\n  writeCharToEEPROM(0,5);\n  writeDataToEEPROMWithChecksum(1,&DAT_20000ebc,0x40);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c2a": "initialize_eeprom_data_08004c2a",
                "eeprom_put_char": "writeCharToEEPROM",
                "memcpy_to_eeprom_with_checksum": "writeDataToEEPROMWithChecksum"
            },
            "calling": [
                "settings_store_global_setting",
                "settings_reset"
            ],
            "called": [
                "eeprom_put_char",
                "memcpy_to_eeprom_with_checksum"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c48": {
            "entrypoint": "0x08004c48",
            "current_name": "initialize_settings_08004c48",
            "code": "\nvoid initialize_settings_08004c48(char input_flag)\n\n{\n  if (input_flag != '\\0') {\n    DAT_20000ebc = 0x431d7af6;\n    DAT_20000ec0 = 0x431d7af6;\n    DAT_20000ec4 = 0x431d7af6;\n    DAT_20000ec9 = 10;\n    DAT_20000ecc = 0x437a0000;\n    DAT_20000ed0 = 0x43fa0000;\n    DAT_20000edc = 0x470ca000;\n    DAT_20000ed8 = 0x3dcccccd;\n    DAT_20000ed4 = 0;\n    DAT_20000ed6 = 0xa80;\n    DAT_20000ee0 = 0x3d4ccccd;\n  }\n  DAT_20000ee4 = 0x12;\n  DAT_20000ee6 = 0;\n  DAT_20000ee8 = 0x41c80000;\n  DAT_20000eec = 0x437a0000;\n  DAT_20000ef0 = 100;\n  DAT_20000ef4 = 0x3f800000;\n  DAT_20000ef8 = 0x19;\n  DAT_20000ef9 = 3;\n  DAT_20000efa = 0x19;\n  write_global_settings();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c48": "initialize_settings_08004c48",
                "param_1": "input_flag"
            },
            "calling": [
                "settings_init",
                "read_global_settings"
            ],
            "called": [
                "write_global_settings"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d2c": {
            "entrypoint": "0x08004d2c",
            "current_name": "load_and_store_settings_08004d2c",
            "code": "\nbool loadAndStoreSettings_08004d2c(byte dataIndex,undefined *buffer)\n\n{\n  int errorCode;\n  \n  errorCode = memcpy_from_eeprom_with_checksum(buffer,(ushort)dataIndex * 0x101 + 0x300,0x100);\n  if (errorCode == 0) {\n    *buffer = 0;\n    settings_store_startup_line(dataIndex,buffer);\n  }\n  return errorCode != 0;\n}\n\n",
            "renaming": {
                "FUN_08004d2c": "load_and_store_settings_08004d2c",
                "param_1": "dataIndex",
                "param_2": "buffer",
                "iVar1": "errorCode"
            },
            "calling": [
                "protocol_execute_line",
                "protocol_execute_startup"
            ],
            "called": [
                "settings_store_startup_line",
                "memcpy_from_eeprom_with_checksum"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d7c": {
            "entrypoint": "0x08004d7c",
            "current_name": "verify_and_copy_data_08004d7c",
            "code": "\nbool verify_and_copy_data_08004d7c(byte input_byte,undefined4 output_buffer)\n\n{\n  int copy_result;\n  \n  copy_result = memcpy_from_eeprom_with_checksum(output_buffer,(ushort)input_byte * 0xd + 0x200,0xc);\n  if (copy_result == 0) {\n    memset(output_buffer,0,0xc);\n    settings_write_coord_data(input_byte,output_buffer);\n  }\n  return copy_result != 0;\n}\n\n",
            "renaming": {
                "FUN_08004d7c": "verify_and_copy_data_08004d7c",
                "param_1": "input_byte",
                "param_2": "output_buffer",
                "iVar1": "copy_result"
            },
            "calling": [
                "report_gcode_parameters",
                "gc_execute_line",
                "gc_init",
                "settings_init"
            ],
            "called": [
                "settings_write_coord_data",
                "memset",
                "memcpy_from_eeprom_with_checksum"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004dd2": {
            "entrypoint": "0x08004dd2",
            "current_name": "check_and_load_settings_08004dd2",
            "code": "\nundefined4 checkAndLoadSettings_08004dd2(void)\n\n{\n  byte eepromValue;\n  int memcpyResult;\n  \n  eepromValue = eeprom_get_char(0);\n  if (eepromValue == 5) {\n    memcpyResult = memcpy_from_eeprom_with_checksum(&DAT_20000ebc,1,0x40);\n    if (memcpyResult == 0) {\n      return 0;\n    }\n  }\n  else {\n    if (4 < eepromValue) {\n      return 0;\n    }\n    memcpyResult = memcpy_from_eeprom_with_checksum(&DAT_20000ebc,1,0x28);\n    if (memcpyResult == 0) {\n      return 0;\n    }\n    settings_reset(0);\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08004dd2": "check_and_load_settings_08004dd2",
                "bVar1": "eepromValue",
                "iVar2": "memcpyResult"
            },
            "calling": [
                "settings_init"
            ],
            "called": [
                "eeprom_get_char",
                "settings_reset",
                "memcpy_from_eeprom_with_checksum"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e30": {
            "entrypoint": "0x08004e30",
            "current_name": "update_settings_08004e30",
            "code": "\nundefined4 updateSettings_08004e30(int settingIndex,uint settingValue)\n\n{\n  undefined4 tempVar1;\n  int comparisonResult;\n  undefined8 convertedValue;\n  \n  switch(settingIndex) {\n  case 0:\n  case 1:\n  case 2:\n    comparisonResult = __aeabi_fcmple(settingValue,0);\n    if (comparisonResult != 0) {\n      return 8;\n    }\n    (&DAT_20000ebc)[settingIndex] = settingValue;\n    break;\n  case 3:\n    comparisonResult = __aeabi_fcmplt(settingValue,0x40400000);\n    if (comparisonResult != 0) {\n      return 9;\n    }\n    convertedValue = __aeabi_f2d(settingValue);\n    convertedValue = round((int)convertedValue,(int)((ulonglong)convertedValue >> 0x20));\n    DAT_20000ec9 = __aeabi_d2uiz((int)convertedValue,(int)((ulonglong)convertedValue >> 0x20));\n    break;\n  case 4:\n    DAT_20000ecc = settingValue;\n    break;\n  case 5:\n    DAT_20000ed0 = settingValue;\n    break;\n  case 6:\n    convertedValue = __aeabi_f2d(settingValue);\n    convertedValue = trunc((int)convertedValue,(int)((ulonglong)convertedValue >> 0x20));\n    DAT_20000ed4 = __aeabi_d2uiz((int)convertedValue,(int)((ulonglong)convertedValue >> 0x20));\n    break;\n  case 7:\n    convertedValue = __aeabi_f2d(settingValue);\n    convertedValue = round((int)convertedValue,(int)((ulonglong)convertedValue >> 0x20));\n    DAT_20000ef8 = __aeabi_d2uiz((int)convertedValue,(int)((ulonglong)convertedValue >> 0x20));\n    break;\n  case 8:\n    tempVar1 = __aeabi_fmul(settingValue,0x42700000);\n    DAT_20000edc = __aeabi_fmul(tempVar1,0x42700000);\n    break;\n  case 9:\n    DAT_20000ee0 = settingValue & 0x7fffffff;\n    break;\n  case 10:\n    DAT_20000ed8 = settingValue;\n    break;\n  case 0xb:\n    convertedValue = __aeabi_f2d(settingValue);\n    convertedValue = round((int)convertedValue,(int)((ulonglong)convertedValue >> 0x20));\n    DAT_20000efa = __aeabi_d2uiz((int)convertedValue,(int)((ulonglong)convertedValue >> 0x20));\n    break;\n  case 0xc:\n    convertedValue = __aeabi_f2d(settingValue);\n    convertedValue = round((int)convertedValue,(int)((ulonglong)convertedValue >> 0x20));\n    DAT_20000ef9 = __aeabi_d2uiz((int)convertedValue,(int)((ulonglong)convertedValue >> 0x20));\n    break;\n  case 0xd:\n    comparisonResult = __aeabi_fcmpeq(settingValue,0);\n    if (comparisonResult == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 1;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xfe;\n    }\n    break;\n  case 0xe:\n    comparisonResult = __aeabi_fcmpeq(settingValue,0);\n    if (comparisonResult == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 2;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xfd;\n    }\n    break;\n  case 0xf:\n    comparisonResult = __aeabi_fcmpeq(settingValue,0);\n    if (comparisonResult == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 4;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xfb;\n    }\n    break;\n  case 0x10:\n    comparisonResult = __aeabi_fcmpeq(settingValue,0);\n    if (comparisonResult == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 8;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xf7;\n    }\n    limits_init();\n    break;\n  case 0x11:\n    comparisonResult = __aeabi_fcmpeq(settingValue,0);\n    if (comparisonResult == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 0x10;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xef;\n    }\n    break;\n  case 0x12:\n    convertedValue = __aeabi_f2d(settingValue);\n    convertedValue = trunc((int)convertedValue,(int)((ulonglong)convertedValue >> 0x20));\n    DAT_20000ee6 = __aeabi_d2uiz((int)convertedValue,(int)((ulonglong)convertedValue >> 0x20));\n    break;\n  case 0x13:\n    DAT_20000ee8 = settingValue;\n    break;\n  case 0x14:\n    DAT_20000eec = settingValue;\n    break;\n  case 0x15:\n    convertedValue = __aeabi_f2d(settingValue);\n    convertedValue = round((int)convertedValue,(int)((ulonglong)convertedValue >> 0x20));\n    DAT_20000ef0 = __aeabi_d2uiz((int)convertedValue,(int)((ulonglong)convertedValue >> 0x20));\n    break;\n  case 0x16:\n    DAT_20000ef4 = settingValue;\n    break;\n  case 0x17:\n    convertedValue = __aeabi_f2d(settingValue);\n    convertedValue = trunc((int)convertedValue,(int)((ulonglong)convertedValue >> 0x20));\n    DAT_20000ed6 = __aeabi_d2uiz((int)convertedValue,(int)((ulonglong)convertedValue >> 0x20));\n    break;\n  default:\n    return 6;\n  }\n  write_global_settings();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004e30": "update_settings_08004e30",
                "param_1": "settingIndex",
                "param_2": "settingValue",
                "uVar1": "tempVar1",
                "iVar2": "comparisonResult",
                "uVar3": "convertedValue"
            },
            "calling": [
                "protocol_execute_line"
            ],
            "called": [
                "__aeabi_f2d",
                "__aeabi_d2uiz",
                "__aeabi_fcmplt",
                "trunc",
                "__aeabi_fmul",
                "write_global_settings",
                "__aeabi_fcmple",
                "limits_init",
                "round",
                "__aeabi_fcmpeq"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080051b4": {
            "entrypoint": "0x080051b4",
            "current_name": "check_and_reset_settings_080051b4",
            "code": "\nvoid checkAndResetSettings_080051b4(void)\n\n{\n  int iVar1;\n  undefined coordData [15];\n  byte count;\n  \n  iVar1 = read_global_settings();\n  if (iVar1 == 0) {\n    report_status_message(10);\n    settings_reset(1);\n    report_grbl_settings();\n  }\n  for (count = 0; count < 8; count = count + 1) {\n    iVar1 = settings_read_coord_data(count,coordData);\n    if (iVar1 == 0) {\n      report_status_message(10);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080051b4": "check_and_reset_settings_080051b4",
                "auStack_18": "coordData",
                "local_9": "count"
            },
            "calling": [
                "grbl_main"
            ],
            "called": [
                "settings_read_coord_data",
                "report_grbl_settings",
                "settings_reset",
                "report_status_message",
                "read_global_settings"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005208": {
            "entrypoint": "0x08005208",
            "current_name": "FUNC_08005208",
            "code": "\nvoid FUNC_08005208(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005208": "FUNC_08005208"
            },
            "calling": [
                "spindle_run"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005214": {
            "entrypoint": "0x08005214",
            "current_name": "FUNC_08005214",
            "code": "\nvoid FUNC_08005214(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005214": "FUNC_08005214"
            },
            "calling": [
                "spindle_stop"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005220": {
            "entrypoint": "0x08005220",
            "current_name": "FUNC_08005220",
            "code": "\nvoid FUNC_08005220(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005220": "FUNC_08005220"
            },
            "calling": [
                "spindle_run"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800522c": {
            "entrypoint": "0x0800522c",
            "current_name": "FUNC_0800522c",
            "code": "\nvoid FUNC_0800522c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800522c": "FUNC_0800522c"
            },
            "calling": [
                "spindle_run"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005238": {
            "entrypoint": "0x08005238",
            "current_name": "stop_spindle_08005238",
            "code": "\nvoid stop_spindle_08005238(void)\n\n{\n  DAT_20000e12 = 0;\n  spindle_stop();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005238": "stop_spindle_08005238"
            },
            "calling": [
                "grbl_main"
            ],
            "called": [
                "spindle_stop"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005250": {
            "entrypoint": "0x08005250",
            "current_name": "turn_off_spindle_08005250",
            "code": "\nvoid turnOffSpindle_08005250(void)\n\n{\n  spindle_off();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005250": "turn_off_spindle_08005250"
            },
            "calling": [
                "mc_reset",
                "spindle_run",
                "spindle_init"
            ],
            "called": [
                "spindle_off"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800525c": {
            "entrypoint": "0x0800525c",
            "current_name": "control_spindle_0800525c",
            "code": "\nvoid controlSpindle_0800525c(byte inputByte)\n\n{\n  if ((int)(char)inputByte != (uint)DAT_20000e12) {\n    synchronizePlan();\n    if (inputByte == 0) {\n      stopSpindle();\n      DAT_20000e12 = inputByte;\n    }\n    else {\n      if ((char)inputByte < '\\x01') {\n        reverseSpindle();\n      }\n      else {\n        forwardSpindle();\n      }\n      turnOnSpindle();\n      DAT_20000e12 = inputByte;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800525c": "control_spindle_0800525c",
                "param_1": "inputByte",
                "plan_synchronize": "synchronizePlan",
                "spindle_stop": "stopSpindle",
                "spindle_rev": "reverseSpindle",
                "spindle_fwd": "forwardSpindle",
                "spindle_on": "turnOnSpindle"
            },
            "calling": [
                "gc_execute_line"
            ],
            "called": [
                "spindle_rev",
                "spindle_fwd",
                "spindle_stop",
                "spindle_on",
                "plan_synchronize"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080052ac": {
            "entrypoint": "0x080052ac",
            "current_name": "update_memory_value_080052ac",
            "code": "\n\n\nvoid updateMemoryValue_080052ac(uint value)\n\n{\n  _DAT_40021014 = value | _DAT_40021014 & 0xfffffaaf;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080052ac": "update_memory_value_080052ac",
                "param_1": "value"
            },
            "calling": [
                "step_pulse_isr",
                "st_init",
                "step_delay_isr"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080052dc": {
            "entrypoint": "0x080052dc",
            "current_name": "update_permission_flags_080052dc",
            "code": "\n\n\nvoid updatePermissionFlags_080052dc(uint permissionFlags)\n\n{\n  _DAT_40021014 = permissionFlags | _DAT_40021014 & 0xfffff55f;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080052dc": "update_permission_flags_080052dc",
                "param_1": "permissionFlags"
            },
            "calling": [
                "step_period_isr"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800530c": {
            "entrypoint": "0x0800530c",
            "current_name": "FUNC_0800530c",
            "code": "\nvoid FUNC_0800530c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800530c": "FUNC_0800530c"
            },
            "calling": [
                "st_go_idle"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005318": {
            "entrypoint": "0x08005318",
            "current_name": "FUNC_08005318",
            "code": "\nvoid FUNC_08005318(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005318": "FUNC_08005318"
            },
            "calling": [
                "st_wake_up"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005324": {
            "entrypoint": "0x08005324",
            "current_name": "calculate_step_period_08005324",
            "code": "\nvoid calculateStepPeriod_08005324(uint inputValue)\n\n{\n  uint adjustedValue;\n  \n  adjustedValue = inputValue;\n  if (inputValue < 800) {\n    adjustedValue = 800;\n  }\n  DAT_20000e28 = 1260000000 / adjustedValue;\n  set_step_period(DAT_20000e28);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005324": "calculate_step_period_08005324",
                "param_1": "inputValue",
                "local_14": "adjustedValue"
            },
            "calling": [
                "st_reset",
                "st_cycle_reinitialize",
                "step_period_isr"
            ],
            "called": [
                "set_step_period"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005360": {
            "entrypoint": "0x08005360",
            "current_name": "calculate_excess_08005360",
            "code": "\nbool calculateExcess_08005360(void)\n\n{\n  bool excessFlag;\n  \n  DAT_20000e2c = DAT_20000e28 + DAT_20000e2c;\n  excessFlag = 420000 < DAT_20000e2c;\n  if (excessFlag) {\n    DAT_20000e2c = DAT_20000e2c - 420000;\n  }\n  return excessFlag;\n}\n\n",
            "renaming": {
                "FUN_08005360": "calculate_excess_08005360",
                "bVar1": "excessFlag"
            },
            "calling": [
                "step_period_isr"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080053a0": {
            "entrypoint": "0x080053a0",
            "current_name": "update_plan_data_080053a0",
            "code": "\nvoid updatePlanData_080053a0(void)\n\n{\n  int iterationResult;\n  \n  writeDirection(DAT_20000e3e);\n  DAT_20000e40 = DAT_20000e3c;\n  if (DAT_20000e38 == (ushort *)0x0) {\n    DAT_20000e38 = (ushort *)getCurrentBlockData();\n    if (DAT_20000e38 == (ushort *)0x0) {\n      goIdle();\n      DAT_20000eaa = DAT_20000eaa | 4;\n    }\n    else {\n      if (DAT_20000ea9 == '\\x03') {\n        DAT_20000e30 = *(uint *)(DAT_20000e38 + 0x14);\n        setStepEventsPerMinute(DAT_20000e30);\n        DAT_20000e2c = 210000;\n      }\n      DAT_20000e34 = (*(int *)(DAT_20000e38 + 0x18) >> 1) + *(int *)(DAT_20000e38 + 0x18);\n      DAT_20000e14 = -(*(int *)(DAT_20000e38 + 8) >> 1);\n      DAT_20000e20 = *(int *)(DAT_20000e38 + 8);\n      DAT_20000e24 = 0;\n      DAT_20000e18 = DAT_20000e14;\n      DAT_20000e1c = DAT_20000e14;\n    }\n  }\n  if (DAT_20000e38 != (ushort *)0x0) {\n    DAT_20000e3e = *DAT_20000e38;\n    DAT_20000e3c = 0;\n    DAT_20000e14 = *(int *)(DAT_20000e38 + 2) + DAT_20000e14;\n    if (0 < DAT_20000e14) {\n      DAT_20000e3c = 0x10;\n      DAT_20000e14 = DAT_20000e14 - DAT_20000e20;\n      if ((DAT_20000e3e & 0x20) == 0) {\n        DAT_20000eac = DAT_20000eac + 1;\n      }\n      else {\n        DAT_20000eac = DAT_20000eac + -1;\n      }\n    }\n    DAT_20000e18 = *(int *)(DAT_20000e38 + 4) + DAT_20000e18;\n    if (0 < DAT_20000e18) {\n      DAT_20000e3c = DAT_20000e3c | 0x440;\n      DAT_20000e18 = DAT_20000e18 - DAT_20000e20;\n      if ((DAT_20000e3e & 0x80) == 0) {\n        DAT_20000eb0 = DAT_20000eb0 + 1;\n      }\n      else {\n        DAT_20000eb0 = DAT_20000eb0 + -1;\n      }\n    }\n    DAT_20000e1c = *(int *)(DAT_20000e38 + 6) + DAT_20000e1c;\n    if (0 < DAT_20000e1c) {\n      DAT_20000e3c = DAT_20000e3c | 0x100;\n      DAT_20000e1c = DAT_20000e1c - DAT_20000e20;\n      if ((DAT_20000e3e & 0x200) == 0) {\n        DAT_20000eb4 = DAT_20000eb4 + 1;\n      }\n      else {\n        DAT_20000eb4 = DAT_20000eb4 + -1;\n      }\n    }\n    DAT_20000e24 = DAT_20000e24 + 1;\n    if (DAT_20000e24 < *(uint *)(DAT_20000e38 + 8)) {\n      if (DAT_20000ea9 == '\\x04') {\n        iterationResult = iterateTrapezoidCounter();\n        if (iterationResult != 0) {\n          if (*(uint *)(DAT_20000e38 + 0x18) < DAT_20000e30) {\n            DAT_20000e30 = DAT_20000e30 - *(int *)(DAT_20000e38 + 0x18);\n            setStepEventsPerMinute(DAT_20000e30);\n          }\n          else {\n            goIdle();\n            DAT_20000eaa = DAT_20000eaa | 4;\n          }\n        }\n      }\n      else if (DAT_20000e24 < *(uint *)(DAT_20000e38 + 0x1a)) {\n        iterationResult = iterateTrapezoidCounter();\n        if (iterationResult != 0) {\n          DAT_20000e30 = DAT_20000e30 + *(int *)(DAT_20000e38 + 0x18);\n          if (*(uint *)(DAT_20000e38 + 0x1e) <= DAT_20000e30) {\n            DAT_20000e30 = *(uint *)(DAT_20000e38 + 0x1e);\n          }\n          setStepEventsPerMinute(DAT_20000e30);\n        }\n      }\n      else if (DAT_20000e24 < *(uint *)(DAT_20000e38 + 0x1c)) {\n        if (DAT_20000e30 != *(uint *)(DAT_20000e38 + 0x1e)) {\n          DAT_20000e30 = *(uint *)(DAT_20000e38 + 0x1e);\n          setStepEventsPerMinute(DAT_20000e30);\n        }\n      }\n      else if (DAT_20000e24 == *(uint *)(DAT_20000e38 + 0x1c)) {\n        if (DAT_20000e30 == *(uint *)(DAT_20000e38 + 0x1e)) {\n          DAT_20000e2c = 210000;\n        }\n        else {\n          DAT_20000e2c = 420000 - DAT_20000e2c;\n        }\n      }\n      else {\n        iterationResult = iterateTrapezoidCounter();\n        if (iterationResult != 0) {\n          if (DAT_20000e34 < DAT_20000e30) {\n            DAT_20000e30 = DAT_20000e30 - *(int *)(DAT_20000e38 + 0x18);\n          }\n          else {\n            DAT_20000e30 = DAT_20000e30 >> 1;\n          }\n          if (DAT_20000e30 < *(uint *)(DAT_20000e38 + 0x16)) {\n            DAT_20000e30 = *(uint *)(DAT_20000e38 + 0x16);\n          }\n          setStepEventsPerMinute(DAT_20000e30);\n        }\n      }\n    }\n    else {\n      DAT_20000e3c = 0;\n      DAT_20000e38 = (ushort *)0x0;\n      plan_discard_current_block();\n    }\n  }\n  DAT_20000e3c = DAT_20000e3c ^ DAT_20000ed4;\n  DAT_20000e3e = DAT_20000e3e ^ DAT_20000ed6;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080053a0": "update_plan_data_080053a0",
                "iVar1": "iterationResult",
                "dirn_wr": "writeDirection",
                "plan_get_current_block": "getCurrentBlockData",
                "set_step_events_per_minute": "setStepEventsPerMinute",
                "st_go_idle": "goIdle",
                "iterate_trapezoid_cycle_counter": "iterateTrapezoidCounter"
            },
            "calling": [
                "TIM2_IRQHandler"
            ],
            "called": [
                "st_go_idle",
                "plan_discard_current_block",
                "iterate_trapezoid_cycle_counter",
                "plan_get_current_block",
                "dirn_wr",
                "set_step_events_per_minute"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005760": {
            "entrypoint": "0x08005760",
            "current_name": "execute_data_processing_08005760",
            "code": "\nvoid execute_data_processing_08005760(void)\n\n{\n  step_wr(DAT_20000ed4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005760": "execute_data_processing_08005760"
            },
            "calling": [
                "TIM2_IRQHandler"
            ],
            "called": [
                "step_wr"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005778": {
            "entrypoint": "0x08005778",
            "current_name": "initialize_step_write_08005778",
            "code": "\nvoid initializeStepWrite_08005778(void)\n\n{\n  step_wr(DAT_20000e40);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005778": "initialize_step_write_08005778"
            },
            "calling": [
                "TIM2_IRQHandler"
            ],
            "called": [
                "step_wr"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005790": {
            "entrypoint": "0x08005790",
            "current_name": "initialize_stepper_motor_08005790",
            "code": "\nvoid initializeStepperMotor_08005790(void)\n\n{\n  stepper_motor_enable();\n  if (DAT_20000ea9 == '\\x03') {\n    DAT_20000e3c = DAT_20000ed4;\n    DAT_20000e3e = DAT_20000ed6;\n    setStepPulseDelay(0x69);\n    setStepPulseTime((DAT_20000ec9 + 5) * 0x15);\n    enableStepISR();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005790": "initialize_stepper_motor_08005790",
                "set_step_pulse_delay": "setStepPulseDelay",
                "set_step_pulse_time": "setStepPulseTime",
                "step_isr_enable": "enableStepISR"
            },
            "calling": [
                "limits_go_home",
                "st_init",
                "st_cycle_start"
            ],
            "called": [
                "step_isr_enable",
                "stepper_motor_enable",
                "set_step_pulse_delay",
                "set_step_pulse_time"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080057e4": {
            "entrypoint": "0x080057e4",
            "current_name": "disable_stepper_motor_if_necessary_080057e4",
            "code": "\nvoid disableStepperMotorIfNecessary_080057e4(void)\n\n{\n  disableStepIsr();\n  if ((DAT_20000ef8 != -1) || ((DAT_20000eaa & 0x20) != 0)) {\n    disableStepperMotor();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080057e4": "disable_stepper_motor_if_necessary_080057e4",
                "step_isr_disable": "disableStepIsr",
                "stepper_motor_disable": "disableStepperMotor"
            },
            "calling": [
                "mc_reset",
                "limits_go_home",
                "st_init",
                "step_period_isr"
            ],
            "called": [
                "step_isr_disable",
                "stepper_motor_disable"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005814": {
            "entrypoint": "0x08005814",
            "current_name": "initialize_data_08005814",
            "code": "\nvoid initializeData_08005814(void)\n\n{\n  memset(&DAT_20000e14,0,0x24);\n  set_step_events_per_minute(800);\n  DAT_20000e38 = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005814": "initialize_data_08005814"
            },
            "calling": [
                "grbl_main"
            ],
            "called": [
                "memset",
                "set_step_events_per_minute"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800583c": {
            "entrypoint": "0x0800583c",
            "current_name": "perform_initialization_0800583c",
            "code": "\nvoid perform_initialization_0800583c(void)\n\n{\n  step_wr(DAT_20000ed4);\n  st_wake_up();\n  st_go_idle();\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800583c": "perform_initialization_0800583c"
            },
            "calling": [
                "grbl_main"
            ],
            "called": [
                "st_go_idle",
                "st_wake_up",
                "step_wr"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800585c": {
            "entrypoint": "0x0800585c",
            "current_name": "check_and_wake_0800585c",
            "code": "\nvoid check_and_wake_0800585c(void)\n\n{\n  if (DAT_20000ea9 == '\\x02') {\n    DAT_20000ea9 = '\\x03';\n    wake_up();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800585c": "check_and_wake_0800585c",
                "st_wake_up": "wake_up"
            },
            "calling": [
                "mc_line",
                "protocol_execute_runtime",
                "mc_go_home"
            ],
            "called": [
                "st_wake_up"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800587c": {
            "entrypoint": "0x0800587c",
            "current_name": "update_state_0800587c",
            "code": "\nvoid updateState_0800587c(void)\n\n{\n  if (DAT_20000ea9 == '\\x03') {\n    DAT_20000ea9 = '\\x04';\n    DAT_20000eb8 = 0;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800587c": "update_state_0800587c"
            },
            "calling": [
                "protocol_execute_runtime"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058a0": {
            "entrypoint": "0x080058a0",
            "current_name": "initialize_plan_cycle_080058a0",
            "code": "\nvoid initializePlanCycle_080058a0(void)\n\n{\n  if (DAT_20000e38 == 0) {\n    DAT_20000ea9 = 0;\n  }\n  else {\n    reinitializePlanCycle_080058a0(*(int *)(DAT_20000e38 + 0x10) - DAT_20000e24);\n    DAT_20000e30 = 0;\n    setStepEventsPerMinute(0);\n    DAT_20000e2c = 210000;\n    DAT_20000e24 = 0;\n    DAT_20000ea9 = 2;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080058a0": "initialize_plan_cycle_080058a0",
                "plan_cycle_reinitialize": "reinitializePlanCycle",
                "set_step_events_per_minute": "setStepEventsPerMinute"
            },
            "calling": [
                "protocol_execute_runtime"
            ],
            "called": [
                "plan_cycle_reinitialize",
                "set_step_events_per_minute"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005900": {
            "entrypoint": "0x08005900",
            "current_name": "check_byte_08005900",
            "code": "\nundefined4 checkByte_08005900(byte byteValue)\n\n{\n  if (byteValue == 0x7e) {\n    DAT_20000eaa = DAT_20000eaa | 2;\n    return 1;\n  }\n  if (byteValue < 0x7f) {\n    if (byteValue == 0x3f) {\n      DAT_20000eaa = DAT_20000eaa | 1;\n      return 1;\n    }\n    if (byteValue < 0x40) {\n      if (byteValue == 0x18) {\n        resetMemory();\n        return 1;\n      }\n      if (byteValue == 0x21) {\n        DAT_20000eaa = DAT_20000eaa | 8;\n        return 1;\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005900": "check_byte_08005900",
                "param_1": "byteValue",
                "mc_reset": "resetMemory"
            },
            "calling": [
                "serial_read"
            ],
            "called": [
                "mc_reset"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800597c": {
            "entrypoint": "0x0800597c",
            "current_name": "execute_software_interrupt_0800597c",
            "code": "\nvoid execute_software_interrupt_0800597c(void)\n\n{\n  execute_system_call(0x3f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800597c": "execute_software_interrupt_0800597c",
                "software_interrupt": "execute_system_call"
            },
            "calling": [
                "startForkserver"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005984": {
            "entrypoint": "0x08005984",
            "current_name": "check_afl_call_08005984",
            "code": "\nundefined4 checkAflCall_08005984(undefined4 inputValue)\n\n{\n  undefined4 result;\n  \n  if (DAT_20000e44 == 0) {\n    result = aflCall(1,inputValue,0);\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005984": "check_afl_call_08005984",
                "param_1": "inputValue",
                "uVar1": "result"
            },
            "calling": [
                "main"
            ],
            "called": [
                "aflCall"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080059b4": {
            "entrypoint": "0x080059b4",
            "current_name": "initialize_system_080059b4",
            "code": "\n\n\nundefined4 initializeSystem_080059b4(void)\n\n{\n  _DAT_40023c00 = _DAT_40023c00 | 0x700;\n  configureSysTick(16000);\n  setPriorityGrouping(3);\n  initializeMsp();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080059b4": "initialize_system_080059b4",
                "HAL_SYSTICK_Config": "configureSysTick",
                "HAL_NVIC_SetPriorityGrouping": "setPriorityGrouping",
                "HAL_MspInit": "initializeMsp"
            },
            "calling": [
                "main"
            ],
            "called": [
                "HAL_NVIC_SetPriorityGrouping",
                "HAL_MspInit",
                "HAL_SYSTICK_Config"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080059f8": {
            "entrypoint": "0x080059f8",
            "current_name": "deinitialize_hardware_080059f8",
            "code": "\n\n\nundefined4 deinitialize_Hardware_080059f8(void)\n\n{\n  _DAT_40023820 = 0;\n  _DAT_40023824 = 0;\n  _DAT_40023810 = 0;\n  _DAT_40023814 = 0;\n  _DAT_40023818 = 0;\n  HAL_MspDeInit();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080059f8": "deinitialize_hardware_080059f8"
            },
            "calling": [],
            "called": [
                "HAL_MspDeInit"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a50": {
            "entrypoint": "0x08005a50",
            "current_name": "FUNC_08005a50",
            "code": "\nvoid FUNC_08005a50(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a50": "FUNC_08005a50"
            },
            "calling": [
                "HAL_Init"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005a5c": {
            "entrypoint": "0x08005a5c",
            "current_name": "FUNC_08005a5c",
            "code": "\nvoid FUNC_08005a5c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a5c": "FUNC_08005a5c"
            },
            "calling": [
                "HAL_DeInit"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005a68": {
            "entrypoint": "0x08005a68",
            "current_name": "increment_counter_08005a68",
            "code": "\nvoid incrementCounter_08005a68(void)\n\n{\n  DAT_20000e48 = DAT_20000e48 + 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a68": "increment_counter_08005a68"
            },
            "calling": [
                "SysTick_Handler"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a84": {
            "entrypoint": "0x08005a84",
            "current_name": "get_dat_value_08005a84",
            "code": "\nundefined4 get_dat_value_08005a84(void)\n\n{\n  return DAT_20000e48;\n}\n\n",
            "renaming": {
                "FUN_08005a84": "get_dat_value_08005a84"
            },
            "calling": [
                "HAL_RCC_OscConfig",
                "SysTick_Handler",
                "get_current_usecs",
                "HAL_RCC_ClockConfig",
                "HAL_Delay"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a98": {
            "entrypoint": "0x08005a98",
            "current_name": "delay_execution_08005a98",
            "code": "\nvoid delayExecution_08005a98(int milliseconds)\n\n{\n  int initialTick;\n  uint currentTick;\n  \n  initialTick = HAL_GetTick();\n  do {\n    currentTick = HAL_GetTick();\n  } while (currentTick < (uint)(milliseconds + initialTick));\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a98": "delay_execution_08005a98",
                "param_1": "milliseconds",
                "iVar1": "initialTick",
                "uVar2": "currentTick"
            },
            "calling": [
                "_delay_ms"
            ],
            "called": [
                "HAL_GetTick"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005bdc": {
            "entrypoint": "0x08005bdc",
            "current_name": "write_to_memory_08005bdc",
            "code": "\nvoid writeToMemory_08005bdc(byte address,uint data)\n\n{\n  if ((char)address < '\\0') {\n    *(char *)((address & 0xf) + 0xe000ed14) = (char)((data & 0xff) << 4);\n  }\n  else {\n    *(char *)((char)address + -0x1fff1c00) = (char)((data & 0xff) << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005bdc": "write_to_memory_08005bdc",
                "param_1": "address",
                "param_2": "data"
            },
            "calling": [
                "FUN_08005c30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c30": {
            "entrypoint": "0x08005c30",
            "current_name": "check_and_update_value_08005c30",
            "code": "\n\n\nbool checkAndUpdateValue_08005c30(int value)\n\n{\n  bool isInRange;\n  \n  isInRange = value - 1U < 0x1000000;\n  if (isInRange) {\n    _DAT_e000e014 = value + -1;\n    writeToMemory(0xffffffff,0xf);\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n  }\n  return !isInRange;\n}\n\n",
            "renaming": {
                "FUN_08005c30": "check_and_update_value_08005c30",
                "param_1": "value",
                "bVar1": "isInRange",
                "write_to_memory_08005bdc": "writeToMemory"
            },
            "calling": [
                "HAL_RCC_ClockConfig"
            ],
            "called": [
                "FUN_08005bdc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cec": {
            "entrypoint": "0x08005cec",
            "current_name": "check_flags_08005cec",
            "code": "\n\n\nundefined4 checkFlags_08005cec(uint *flags)\n\n{\n  int tick;\n  uint currentTick;\n  \n  if ((*flags & 1) != 0) {\n    if (((_DAT_40023808 & 0xc) == 4) ||\n       (((_DAT_40023808 & 0xc) == 8 && ((_DAT_40023804 & 0x400000) == 0x400000)))) {\n      if (((_DAT_40023800 & 0x20000) != 0) && (flags[1] != 1)) {\n        return 1;\n      }\n    }\n    else {\n      _DAT_40023800 = (uint3)_DAT_40023800;\n      tick = getTick();\n      while ((_DAT_40023800 & 0x20000) != 0) {\n        currentTick = getTick();\n        if (tick + 5000U <= currentTick) {\n          return 3;\n        }\n      }\n      _DAT_40023800 = concatenate1(DAT_40023800_3,concatenate2((char)flags[1],_DAT_40023800));\n      if (flags[1] == 1) {\n        tick = getTick();\n        while ((_DAT_40023800 & 0x20000) == 0) {\n          currentTick = getTick();\n          if (tick + 5000U <= currentTick) {\n            return 3;\n          }\n        }\n      }\n      else {\n        tick = getTick();\n        while ((_DAT_40023800 & 0x20000) != 0) {\n          currentTick = getTick();\n          if (tick + 5000U <= currentTick) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*flags & 2) != 0) {\n    if (((_DAT_40023808 & 0xc) == 0) ||\n       (((_DAT_40023808 & 0xc) == 8 && ((_DAT_40023804 & 0x400000) == 0)))) {\n      if (((_DAT_40023800 & 2) != 0) && (flags[3] != 1)) {\n        return 1;\n      }\n    }\n    else if (flags[3] == 0) {\n      _DAT_42470000 = 0;\n      tick = getTick();\n      while ((_DAT_40023800 & 2) != 0) {\n        currentTick = getTick();\n        if (tick + 100U <= currentTick) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470000 = 1;\n      tick = getTick();\n      while ((_DAT_40023800 & 2) == 0) {\n        currentTick = getTick();\n        if (tick + 100U <= currentTick) {\n          return 3;\n        }\n      }\n      _DAT_40023800 = flags[4] << 3 | _DAT_40023800 & 0xffffff07;\n    }\n  }\n  if ((*flags & 8) != 0) {\n    if (flags[5] == 0) {\n      _DAT_42470e80 = 0;\n      tick = getTick();\n      while ((_DAT_40023874 & 2) != 0) {\n        currentTick = getTick();\n        if (tick + 100U <= currentTick) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470e80 = 1;\n      tick = getTick();\n      while ((_DAT_40023874 & 2) == 0) {\n        currentTick = getTick();\n        if (tick + 100U <= currentTick) {\n          return 3;\n        }\n      }\n    }\n  }\n  if ((*flags & 4) != 0) {\n    _DAT_40023840 = _DAT_40023840 | 0x10000000;\n    _DAT_40007000 = _DAT_40007000 | 0x100;\n    tick = getTick();\n    while ((_DAT_40007000 & 0x100) == 0) {\n      currentTick = getTick();\n      if (tick + 100U <= currentTick) {\n        return 3;\n      }\n    }\n    _DAT_40023870 = _DAT_40023870 & 0xffffff00;\n    tick = getTick();\n    while ((_DAT_40023870 & 2) != 0) {\n      currentTick = getTick();\n      if (tick + 5000U <= currentTick) {\n        return 3;\n      }\n    }\n    _DAT_40023870 = CONCAT31(DAT_40023870_1,(char)flags[2]);\n    if (flags[2] == 1) {\n      tick = getTick();\n      while ((_DAT_40023870 & 2) == 0) {\n        currentTick = getTick();\n        if (tick + 5000U <= currentTick) {\n          return 3;\n        }\n      }\n    }\n    else {\n      tick = getTick();\n      while ((_DAT_40023870 & 2) != 0) {\n        currentTick = getTick();\n        if (tick + 5000U <= currentTick) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (flags[6] != 0) {\n    if ((_DAT_40023808 & 0xc) == 8) {\n      return 1;\n    }\n    if (flags[6] == 2) {\n      _DAT_42470060 = 0;\n      tick = getTick();\n      while ((_DAT_40023800 & 0x2000000) != 0) {\n        currentTick = getTick();\n        if (tick + 100U <= currentTick) {\n          return 3;\n        }\n      }\n      _DAT_40023804 =\n           flags[0xb] << 0x18 |\n           flags[8] | flags[9] << 6 | ((flags[10] >> 1) - 1) * 0x10000 | flags[7] |\n           0x20000000;\n      _DAT_42470060 = 1;\n      tick = getTick();\n      while ((_DAT_40023800 & 0x2000000) == 0) {\n        currentTick = getTick();\n        if (tick + 100U <= currentTick) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470060 = 0;\n      tick = getTick();\n      while ((_DAT_40023800 & 0x2000000) != 0) {\n        currentTick = getTick();\n        if (tick + 100U <= currentTick) {\n          return 3;\n        }\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005cec": "check_flags_08005cec",
                "param_1": "flags",
                "iVar1": "tick",
                "uVar2": "currentTick",
                "CONCAT13": "concatenate1",
                "CONCAT12": "concatenate2",
                "HAL_GetTick": "getTick"
            },
            "calling": [
                "SystemClock_Config"
            ],
            "called": [
                "HAL_GetTick"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800618c": {
            "entrypoint": "0x0800618c",
            "current_name": "update_value_and_check_0800618c",
            "code": "\n\n\nundefined4 updateValueAndCheck_0800618c(uint *inputArray,uint arraySize)\n\n{\n  int tickValue;\n  uint currentTick;\n  uint timeoutTick;\n  undefined8 systemFreq;\n  \n  if ((_DAT_40023c00 & 0xf) < arraySize) {\n    _DAT_40023c00 = CONCAT31(DAT_40023c00_1,(char)arraySize);\n    if (arraySize != (arraySize & 0xf)) {\n      return 1;\n    }\n    if ((*inputArray & 1) != 0) {\n      if (inputArray[1] == 1) {\n        if ((_DAT_40023800 & 0x20000) == 0) {\n          return 1;\n        }\n      }\n      else if ((inputArray[1] != 2) && ((_DAT_40023800 & 2) == 0)) {\n        return 1;\n      }\n      _DAT_40023808 = inputArray[1] | _DAT_40023808 & 0xfffffffc;\n      tickValue = getTickValue();\n      timeoutTick = tickValue + 5000;\n      if (inputArray[1] == 1) {\n        while ((_DAT_40023808 & 0xc) != 4) {\n          currentTick = getTickValue();\n          if (timeoutTick <= currentTick) {\n            return 3;\n          }\n        }\n      }\n      else if (inputArray[1] == 2) {\n        while ((_DAT_40023808 & 0xc) != 8) {\n          currentTick = getTickValue();\n          if (timeoutTick <= currentTick) {\n            return 3;\n          }\n        }\n      }\n      else {\n        while ((_DAT_40023808 & 0xc) != 0) {\n          currentTick = getTickValue();\n          if (timeoutTick <= currentTick) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  else {\n    if ((*inputArray & 1) != 0) {\n      if (inputArray[1] == 1) {\n        if ((_DAT_40023800 & 0x20000) == 0) {\n          return 1;\n        }\n      }\n      else if (inputArray[1] == 2) {\n        if ((_DAT_40023800 & 0x2000000) == 0) {\n          return 1;\n        }\n      }\n      else if ((_DAT_40023800 & 2) == 0) {\n        return 1;\n      }\n      _DAT_40023808 = inputArray[1] | _DAT_40023808 & 0xfffffffc;\n      tickValue = getTickValue();\n      timeoutTick = tickValue + 5000;\n      if (inputArray[1] == 1) {\n        while ((_DAT_40023808 & 0xc) != 4) {\n          currentTick = getTickValue();\n          if (timeoutTick <= currentTick) {\n            return 3;\n          }\n        }\n      }\n      else if (inputArray[1] == 2) {\n        while ((_DAT_40023808 & 0xc) != 8) {\n          currentTick = getTickValue();\n          if (timeoutTick <= currentTick) {\n            return 3;\n          }\n        }\n      }\n      else {\n        while ((_DAT_40023808 & 0xc) != 0) {\n          currentTick = getTickValue();\n          if (timeoutTick <= currentTick) {\n            return 3;\n          }\n        }\n      }\n    }\n    _DAT_40023c00 = CONCAT31(DAT_40023c00_1,(char)arraySize);\n    if (arraySize != (arraySize & 0xf)) {\n      return 1;\n    }\n  }\n  if ((*inputArray & 2) != 0) {\n    _DAT_40023808 = inputArray[2] | _DAT_40023808 & 0xffffff0f;\n  }\n  if ((*inputArray & 4) != 0) {\n    _DAT_40023808 = inputArray[3] | _DAT_40023808 & 0xffffe3ff;\n  }\n  if ((*inputArray & 8) != 0) {\n    _DAT_40023808 = inputArray[4] << 3 | _DAT_40023808 & 0xffff1fff;\n  }\n  systemFreq = getSystemFreq();\n  checkAndUpdateValue((uint)systemFreq / 1000,(int)((ulonglong)systemFreq >> 0x20),(uint)systemFreq * 0x10624dd3);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800618c": "update_value_and_check_0800618c",
                "param_1": "inputArray",
                "param_2": "arraySize",
                "iVar1": "tickValue",
                "uVar2": "currentTick",
                "uVar3": "timeoutTick",
                "uVar4": "systemFreq",
                "HAL_GetTick": "getTickValue",
                "HAL_RCC_GetHCLKFreq": "getSystemFreq",
                "check_and_update_value_08005c30": "checkAndUpdateValue"
            },
            "calling": [
                "SystemClock_Config"
            ],
            "called": [
                "FUN_08005c30",
                "HAL_RCC_GetHCLKFreq",
                "HAL_GetTick"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800640c": {
            "entrypoint": "0x0800640c",
            "current_name": "initialize_gpio_0800640c",
            "code": "\n\n\nvoid initializeGPIO_0800640c(int flag,uint paramA,uint paramB)\n\n{\n  undefined4 gpioConfig1;\n  undefined4 gpioConfig2;\n  undefined4 gpioConfig3;\n  undefined4 gpioConfig4;\n  undefined4 gpioConfig5;\n  \n  if (flag == 0) {\n    _DAT_40023830 = _DAT_40023830 | 1;\n    gpioConfig1 = 0x100;\n    gpioConfig2 = 2;\n    gpioConfig4 = 3;\n    gpioConfig3 = 0;\n    gpioConfig5 = 0;\n    HAL_GPIO_Init(0x40020000,&gpioConfig1);\n    _DAT_40023808 = paramB | paramA | _DAT_40023808 & 0xf89fffff;\n  }\n  else {\n    _DAT_40023830 = _DAT_40023830 | 4;\n    gpioConfig1 = 0x200;\n    gpioConfig2 = 2;\n    gpioConfig4 = 3;\n    gpioConfig3 = 0;\n    gpioConfig5 = 0;\n    HAL_GPIO_Init(0x40020800,&gpioConfig1);\n    _DAT_40023808 = paramA | paramB << 3 | _DAT_40023808 & 0x7ffffff;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800640c": "initialize_gpio_0800640c",
                "param_1": "flag",
                "param_2": "paramA",
                "param_3": "paramB",
                "local_1c": "gpioConfig1",
                "local_18": "gpioConfig2",
                "local_14": "gpioConfig3",
                "local_10": "gpioConfig4",
                "local_c": "gpioConfig5"
            },
            "calling": [],
            "called": [
                "HAL_GPIO_Init"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080064ec": {
            "entrypoint": "0x080064ec",
            "current_name": "calculate_clock_frequency_080064ec",
            "code": "\n\n\nuint calculateClockFrequency_080064ec(void)\n\n{\n  uint clockConfig;\n  uint calculatedFrequency;\n  \n  clockConfig = _DAT_40023808 & 0xc;\n  if (clockConfig == 8) {\n    if ((_DAT_40023804 & 0x400000) == 0) {\n      calculatedFrequency = ((_DAT_40023804 & 0x7fc0) >> 6) * (16000000 / (_DAT_40023804 & 0x3f));\n    }\n    else {\n      calculatedFrequency = ((_DAT_40023804 & 0x7fc0) >> 6) * (8000000 / (_DAT_40023804 & 0x3f));\n    }\n    return calculatedFrequency / ((((_DAT_40023804 & 0x30000) >> 0x10) + 1) * 2);\n  }\n  if (clockConfig < 9) {\n    if (clockConfig == 0) {\n      return 16000000;\n    }\n    if (clockConfig == 4) {\n      return 8000000;\n    }\n  }\n  return 16000000;\n}\n\n",
            "renaming": {
                "FUN_080064ec": "calculate_clock_frequency_080064ec",
                "uVar1": "clockConfig",
                "local_c": "calculatedFrequency"
            },
            "calling": [
                "HAL_RCC_GetHCLKFreq"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006628": {
            "entrypoint": "0x08006628",
            "current_name": "calculate_sys_clock_frequency_08006628",
            "code": "\n\n\nuint calculateSysClockFrequency_08006628(void)\n\n{\n  uint sysClockFreq;\n  \n  sysClockFreq = getSysClockFreq();\n  DAT_20000000 = sysClockFreq >> (&DAT_0800bcac)[(_DAT_40023808 & 0xf0) >> 4];\n  return sysClockFreq >> (&DAT_0800bcac)[(_DAT_40023808 & 0xf0) >> 4];\n}\n\n",
            "renaming": {
                "FUN_08006628": "calculate_sys_clock_frequency_08006628",
                "uVar1": "sysClockFreq",
                "HAL_RCC_GetSysClockFreq": "getSysClockFreq"
            },
            "calling": [
                "HAL_RCC_GetPCLK2Freq",
                "HAL_RCC_GetPCLK1Freq",
                "HAL_RCC_ClockConfig"
            ],
            "called": [
                "HAL_RCC_GetSysClockFreq"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006680": {
            "entrypoint": "0x08006680",
            "current_name": "get_scaled_clock_frequency_08006680",
            "code": "\n\n\nuint getScaledClockFrequency_08006680(void)\n\n{\n  uint frequency;\n  \n  frequency = getHCLKFrequency();\n  return frequency >> (&DAT_0800bcac)[(_DAT_40023808 & 0x1c00) >> 10];\n}\n\n",
            "renaming": {
                "FUN_08006680": "get_scaled_clock_frequency_08006680",
                "uVar1": "frequency",
                "HAL_RCC_GetHCLKFreq": "getHCLKFrequency"
            },
            "calling": [
                "set_baud_rate"
            ],
            "called": [
                "HAL_RCC_GetHCLKFreq"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080066cc": {
            "entrypoint": "0x080066cc",
            "current_name": "calculate_hclk_frequency_080066cc",
            "code": "\n\n\nuint calculateHCLKFrequency_080066cc(void)\n\n{\n  uint hclkFrequency;\n  \n  hclkFrequency = getHCLKFrequency();\n  return hclkFrequency >> (&DAT_0800bcac)[(_DAT_40023808 & 0xe000) >> 0xd];\n}\n\n",
            "renaming": {
                "FUN_080066cc": "calculate_hclk_frequency_080066cc",
                "uVar1": "hclkFrequency",
                "HAL_RCC_GetHCLKFreq": "getHCLKFrequency"
            },
            "calling": [
                "set_baud_rate"
            ],
            "called": [
                "HAL_RCC_GetHCLKFreq"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006950": {
            "entrypoint": "0x08006950",
            "current_name": "set_control_bits_08006950",
            "code": "\n\n\nvoid setControlBits_08006950(uint inputValue)\n\n{\n  _DAT_e000ed0c = _DAT_e000ed0c & 0xf8ff | (inputValue & 7) << 8 | 0x5fa0000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006950": "set_control_bits_08006950",
                "param_1": "inputValue"
            },
            "calling": [
                "HAL_NVIC_SetPriorityGrouping"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006998": {
            "entrypoint": "0x08006998",
            "current_name": "get_shifted_bits_08006998",
            "code": "\n\n\nuint getShiftedBits_08006998(void)\n\n{\n  return _DAT_e000ed0c >> 8 & 7;\n}\n\n",
            "renaming": {
                "FUN_08006998": "get_shifted_bits_08006998"
            },
            "calling": [
                "HAL_NVIC_GetPriorityGrouping",
                "HAL_NVIC_SetPriority"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080069b4": {
            "entrypoint": "0x080069b4",
            "current_name": "set_bit_in_memory_080069b4",
            "code": "\nvoid setBitInMemory_080069b4(byte byteToSet)\n\n{\n  *(int *)(((uint)(int)(char)byteToSet >> 5) * 4 + -0x1fff1f00) = 1 << (byteToSet & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080069b4": "set_bit_in_memory_080069b4",
                "param_1": "byteToSet"
            },
            "calling": [
                "HAL_NVIC_EnableIRQ"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080069e4": {
            "entrypoint": "0x080069e4",
            "current_name": "set_bit_in_memory_080069e4",
            "code": "\nvoid setBitInMemory_080069e4(byte inputByte)\n\n{\n  *(int *)((((uint)(int)(char)inputByte >> 5) + 0x20) * 4 + -0x1fff1f00) = 1 << (inputByte & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080069e4": "set_bit_in_memory_080069e4",
                "param_1": "inputByte"
            },
            "calling": [
                "HAL_NVIC_DisableIRQ"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006a18": {
            "entrypoint": "0x08006a18",
            "current_name": "bit_check_08006a18",
            "code": "\nbool bitCheck_08006a18(byte input)\n\n{\n  return (*(uint *)((((uint)(int)(char)input >> 5) + 0x40) * 4 + -0x1fff1f00) &\n         1 << (input & 0x1f)) != 0;\n}\n\n",
            "renaming": {
                "FUN_08006a18": "bit_check_08006a18",
                "param_1": "input"
            },
            "calling": [
                "HAL_NVIC_GetPendingIRQ"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006a58": {
            "entrypoint": "0x08006a58",
            "current_name": "set_bit_in_array_08006a58",
            "code": "\nvoid setBitInArray_08006a58(byte input_byte)\n\n{\n  *(int *)((((uint)(int)(char)input_byte >> 5) + 0x40) * 4 + -0x1fff1f00) = 1 << (input_byte & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006a58": "set_bit_in_array_08006a58",
                "param_1": "input_byte"
            },
            "calling": [
                "HAL_NVIC_SetPendingIRQ"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006a8c": {
            "entrypoint": "0x08006a8c",
            "current_name": "set_bit_in_memory_08006a8c",
            "code": "\nvoid setBitInMemory_08006a8c(byte inputByte)\n\n{\n  *(int *)((((uint)(int)(char)inputByte >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (inputByte & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006a8c": "set_bit_in_memory_08006a8c",
                "param_1": "inputByte"
            },
            "calling": [
                "HAL_NVIC_ClearPendingIRQ"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ac0": {
            "entrypoint": "0x08006ac0",
            "current_name": "check_bit_set_08006ac0",
            "code": "\nbool checkBitSet_08006ac0(byte byteValue)\n\n{\n  return (*(uint *)((((uint)(int)(char)byteValue >> 5) + 0x80) * 4 + -0x1fff1f00) &\n         1 << (byteValue & 0x1f)) != 0;\n}\n\n",
            "renaming": {
                "FUN_08006ac0": "check_bit_set_08006ac0",
                "param_1": "byteValue"
            },
            "calling": [
                "HAL_NVIC_GetActive"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b00": {
            "entrypoint": "0x08006b00",
            "current_name": "update_byte_value_08006b00",
            "code": "\nvoid updateByteValue_08006b00(byte inputByte,uint value)\n\n{\n  if ((char)inputByte < '\\0') {\n    *(char *)((inputByte & 0xf) + 0xe000ed14) = (char)((value & 0xff) << 4);\n  }\n  else {\n    *(char *)((char)inputByte + -0x1fff1c00) = (char)((value & 0xff) << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006b00": "update_byte_value_08006b00",
                "param_1": "inputByte",
                "param_2": "value"
            },
            "calling": [
                "SysTick_Config",
                "HAL_NVIC_SetPriority"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b54": {
            "entrypoint": "0x08006b54",
            "current_name": "extract_byte_from_binary_08006b54",
            "code": "\nbyte extractByteFromBinary_08006b54(byte inputByte)\n\n{\n  byte extractedByte;\n  \n  if ((char)inputByte < '\\0') {\n    extractedByte = *(byte *)((inputByte & 0xf) + 0xe000ed14);\n  }\n  else {\n    extractedByte = *(byte *)((char)inputByte + -0x1fff1c00);\n  }\n  return extractedByte >> 4;\n}\n\n",
            "renaming": {
                "FUN_08006b54": "extract_byte_from_binary_08006b54",
                "param_1": "inputByte",
                "bVar1": "extractedByte"
            },
            "calling": [
                "HAL_NVIC_GetPriority"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ba0": {
            "entrypoint": "0x08006ba0",
            "current_name": "bitwise_operation_08006ba0",
            "code": "\nuint bitwise_operation_08006ba0(uint input_mask,uint input_value,uint output_mask)\n\n{\n  uint shift_amount;\n  \n  input_mask = input_mask & 7;\n  shift_amount = 7 - input_mask;\n  if (3 < shift_amount) {\n    shift_amount = 4;\n  }\n  if (input_mask + 4 < 7) {\n    input_mask = 0;\n  }\n  else {\n    input_mask = input_mask - 3;\n  }\n  return output_mask & (1 << (input_mask & 0xff)) - 1U |\n         ((1 << (shift_amount & 0xff)) - 1U & input_value) << (input_mask & 0xff);\n}\n\n",
            "renaming": {
                "FUN_08006ba0": "bitwise_operation_08006ba0",
                "param_1": "input_mask",
                "param_2": "input_value",
                "param_3": "output_mask",
                "uVar1": "shift_amount"
            },
            "calling": [
                "HAL_NVIC_SetPriority"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c04": {
            "entrypoint": "0x08006c04",
            "current_name": "extract_bits_08006c04",
            "code": "\nvoid extract_bits_08006c04(uint input_value,uint bit_offset,uint *output_value1,uint *output_value2)\n\n{\n  uint shift_amount;\n  \n  bit_offset = bit_offset & 7;\n  shift_amount = 7 - bit_offset;\n  if (3 < shift_amount) {\n    shift_amount = 4;\n  }\n  if (bit_offset + 4 < 7) {\n    bit_offset = 0;\n  }\n  else {\n    bit_offset = bit_offset - 3;\n  }\n  *output_value1 = (1 << (shift_amount & 0xff)) - 1U & input_value >> (bit_offset & 0xff);\n  *output_value2 = (1 << (bit_offset & 0xff)) - 1U & input_value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006c04": "extract_bits_08006c04",
                "param_1": "input_value",
                "param_2": "bit_offset",
                "param_3": "output_value1",
                "param_4": "output_value2",
                "uVar1": "shift_amount"
            },
            "calling": [
                "HAL_NVIC_GetPriority"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c70": {
            "entrypoint": "0x08006c70",
            "current_name": "infinite_loop_08006c70",
            "code": "\nvoid infiniteLoop_08006c70(void)\n\n{\n  syncBarrier(0xf);\n  syncBarrier(0xf);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08006c70": "infinite_loop_08006c70",
                "DataSynchronizationBarrier": "syncBarrier"
            },
            "calling": [
                "HAL_NVIC_SystemReset"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c9c": {
            "entrypoint": "0x08006c9c",
            "current_name": "check_and_set_priority_08006c9c",
            "code": "\n\n\nbool checkAndSetPriority_08006c9c(int value)\n\n{\n  bool isValueInRange;\n  \n  isValueInRange = value - 1U < 0x1000000;\n  if (isValueInRange) {\n    _DAT_e000e014 = value + -1;\n    NVIC_SetPriority(0xffffffff,0xf);\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n  }\n  return !isValueInRange;\n}\n\n",
            "renaming": {
                "FUN_08006c9c": "check_and_set_priority_08006c9c",
                "param_1": "value",
                "bVar1": "isValueInRange"
            },
            "calling": [
                "HAL_SYSTICK_Config"
            ],
            "called": [
                "NVIC_SetPriority"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ce0": {
            "entrypoint": "0x08006ce0",
            "current_name": "set_priority_grouping_08006ce0",
            "code": "\nvoid setPriorityGrouping_08006ce0(undefined4 priorityGroup)\n\n{\n  setPriorityGroup(priorityGroup);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006ce0": "set_priority_grouping_08006ce0",
                "param_1": "priorityGroup",
                "NVIC_SetPriorityGrouping": "setPriorityGroup"
            },
            "calling": [
                "HAL_Init"
            ],
            "called": [
                "NVIC_SetPriorityGrouping"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006cf6": {
            "entrypoint": "0x08006cf6",
            "current_name": "set_interrupt_priority_08006cf6",
            "code": "\nvoid setInterruptPriority_08006cf6(char interruptNumber,undefined4 interruptPriorityGroup,undefined4 interruptPreemptionPriority)\n\n{\n  undefined4 priorityGrouping;\n  \n  priorityGrouping = NVIC_GetPriorityGrouping();\n  priorityGrouping = NVIC_EncodePriority(priorityGrouping,interruptPriorityGroup,interruptPreemptionPriority);\n  NVIC_SetPriority((int)interruptNumber,priorityGrouping);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006cf6": "set_interrupt_priority_08006cf6",
                "param_1": "interruptNumber",
                "param_2": "interruptPriorityGroup",
                "param_3": "interruptPreemptionPriority",
                "uVar1": "priorityGrouping"
            },
            "calling": [
                "enable_tim_interrupt"
            ],
            "called": [
                "NVIC_SetPriority",
                "NVIC_EncodePriority",
                "NVIC_GetPriorityGrouping"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d2e": {
            "entrypoint": "0x08006d2e",
            "current_name": "set_bit_in_memory_08006d2e",
            "code": "\nvoid setBitInMemory_08006d2e(char bit)\n\n{\n  setBit((int)bit);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d2e": "set_bit_in_memory_08006d2e",
                "param_1": "bit",
                "set_bit_in_memory_080069b4": "setBit"
            },
            "calling": [],
            "called": [
                "FUN_080069b4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d4a": {
            "entrypoint": "0x08006d4a",
            "current_name": "disable_interrupt_08006d4a",
            "code": "\nvoid disableInterrupt_08006d4a(char interruptNumber)\n\n{\n  NVIC_DisableIRQ((int)interruptNumber);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d4a": "disable_interrupt_08006d4a",
                "param_1": "interruptNumber"
            },
            "calling": [],
            "called": [
                "NVIC_DisableIRQ"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d66": {
            "entrypoint": "0x08006d66",
            "current_name": "reset_system_08006d66",
            "code": "\nvoid reset_system_08006d66(void)\n\n{\n  reset();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d66": "reset_system_08006d66",
                "NVIC_SystemReset": "reset"
            },
            "calling": [],
            "called": [
                "NVIC_SystemReset"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d72": {
            "entrypoint": "0x08006d72",
            "current_name": "initialize_sys_tick_08006d72",
            "code": "\nundefined4 initializeSysTick_08006d72(undefined4 configValue)\n\n{\n  undefined4 result;\n  \n  result = SysTick_Config(configValue);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08006d72": "initialize_sys_tick_08006d72",
                "param_1": "configValue",
                "uVar1": "result"
            },
            "calling": [
                "HAL_Init"
            ],
            "called": [
                "SysTick_Config"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d8a": {
            "entrypoint": "0x08006d8a",
            "current_name": "get_priority_grouping_08006d8a",
            "code": "\nundefined4 getPriorityGrouping_08006d8a(void)\n\n{\n  undefined4 priorityGrouping;\n  \n  priorityGrouping = NVIC_GetPriorityGrouping();\n  return priorityGrouping;\n}\n\n",
            "renaming": {
                "FUN_08006d8a": "get_priority_grouping_08006d8a",
                "uVar1": "priorityGrouping"
            },
            "calling": [],
            "called": [
                "NVIC_GetPriorityGrouping"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d98": {
            "entrypoint": "0x08006d98",
            "current_name": "decode_priority_and_get_08006d98",
            "code": "\nvoid decode_priority_and_get_08006d98(char input_value,undefined4 output1,undefined4 output2,undefined4 output3)\n\n{\n  undefined4 priority_value;\n  \n  priority_value = NVIC_GetPriority((int)input_value);\n  NVIC_DecodePriority(priority_value,output1,output2,output3);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d98": "decode_priority_and_get_08006d98",
                "param_1": "input_value",
                "param_2": "output1",
                "param_3": "output2",
                "param_4": "output3",
                "uVar1": "priority_value"
            },
            "calling": [],
            "called": [
                "NVIC_GetPriority",
                "NVIC_DecodePriority"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006dc4": {
            "entrypoint": "0x08006dc4",
            "current_name": "set_pending_irq_08006dc4",
            "code": "\nvoid setPendingIRQ_08006dc4(char irqNumber)\n\n{\n  NVIC_SetPendingIRQ((int)irqNumber);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006dc4": "set_pending_irq_08006dc4",
                "param_1": "irqNumber"
            },
            "calling": [],
            "called": [
                "NVIC_SetPendingIRQ"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006de0": {
            "entrypoint": "0x08006de0",
            "current_name": "get_pending_irq_status_08006de0",
            "code": "\nundefined4 getPendingIRQStatus_08006de0(char irqNumber)\n\n{\n  undefined4 pendingStatus;\n  \n  pendingStatus = NVIC_GetPendingIRQ((int)irqNumber);\n  return pendingStatus;\n}\n\n",
            "renaming": {
                "FUN_08006de0": "get_pending_irq_status_08006de0",
                "param_1": "irqNumber",
                "uVar1": "pendingStatus"
            },
            "calling": [],
            "called": [
                "NVIC_GetPendingIRQ"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006dfe": {
            "entrypoint": "0x08006dfe",
            "current_name": "clear_pending_irq_08006dfe",
            "code": "\nvoid clearPendingIRQ_08006dfe(char irqNumber)\n\n{\n  NVIC_ClearPendingIRQ((int)irqNumber);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006dfe": "clear_pending_irq_08006dfe",
                "param_1": "irqNumber"
            },
            "calling": [],
            "called": [
                "NVIC_ClearPendingIRQ"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e1a": {
            "entrypoint": "0x08006e1a",
            "current_name": "get_active_interrupt_08006e1a",
            "code": "\nundefined4 getActiveInterrupt_08006e1a(char interrupt)\n\n{\n  undefined4 activeStatus;\n  \n  activeStatus = NVIC_GetActive((int)interrupt);\n  return activeStatus;\n}\n\n",
            "renaming": {
                "FUN_08006e1a": "get_active_interrupt_08006e1a",
                "param_1": "interrupt",
                "uVar1": "activeStatus"
            },
            "calling": [],
            "called": [
                "NVIC_GetActive"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e88": {
            "entrypoint": "0x08006e88",
            "current_name": "update_bit_fields_08006e88",
            "code": "\n\n\nvoid updateBitFields_08006e88(uint *outputBits,uint *inputBits)\n\n{\n  uint bitMask;\n  uint bitValue;\n  int index;\n  uint bitIndex;\n  \n  for (bitIndex = 0; bitIndex < 0x10; bitIndex = bitIndex + 1) {\n    bitMask = 1 << (bitIndex & 0xff);\n    bitValue = *inputBits & bitMask;\n    if (bitValue == bitMask) {\n      if ((inputBits[1] == 2) || (inputBits[1] == 0x12)) {\n        bitMask = inputBits[4];\n        outputBits[(bitIndex >> 3) + 8] = outputBits[(bitIndex >> 3) + 8] & ~(0xf << ((bitIndex & 7) << 2));\n        outputBits[(bitIndex >> 3) + 8] = outputBits[(bitIndex >> 3) + 8] | bitMask << ((bitIndex & 7) << 2);\n      }\n      *outputBits = *outputBits & ~(3 << ((bitIndex & 0x7f) << 1));\n      *outputBits = *outputBits | (inputBits[1] & 3) << ((bitIndex & 0x7f) << 1);\n      if ((((inputBits[1] == 1) || (inputBits[1] == 2)) || (inputBits[1] == 0x11)) || (inputBits[1] == 0x12)\n         ) {\n        outputBits[2] = outputBits[2] & ~(3 << ((bitIndex & 0x7f) << 1));\n        outputBits[2] = outputBits[2] | inputBits[3] << ((bitIndex & 0x7f) << 1);\n        outputBits[1] = outputBits[1] & ~(1 << (bitIndex & 0xff));\n        outputBits[1] = outputBits[1] | (inputBits[1] >> 4 & 1) << (bitIndex & 0xff);\n      }\n      outputBits[3] = outputBits[3] & ~(3 << ((bitIndex & 0x7f) << 1));\n      outputBits[3] = outputBits[3] | inputBits[2] << ((bitIndex & 0x7f) << 1);\n      if ((inputBits[1] & 0x10000000) != 0) {\n        _DAT_40023844 = _DAT_40023844 | 0x4000;\n        *(uint *)(((bitIndex >> 2) + 2) * 4 + 0x40013800) =\n             ~(0xf << ((bitIndex & 3) << 2)) & *(uint *)(((bitIndex >> 2) + 2) * 4 + 0x40013800);\n        if (outputBits == (uint *)0x40020000) {\n          index = 0;\n        }\n        else if (outputBits == (uint *)0x40020400) {\n          index = 1;\n        }\n        else if (outputBits == (uint *)0x40020800) {\n          index = 2;\n        }\n        else if (outputBits == (uint *)0x40020c00) {\n          index = 3;\n        }\n        else if (outputBits == (uint *)0x40021000) {\n          index = 4;\n        }\n        else if (outputBits == (uint *)0x40021400) {\n          index = 5;\n        }\n        else if (outputBits == (uint *)0x40021800) {\n          index = 6;\n        }\n        else if (outputBits == (uint *)0x40021c00) {\n          index = 7;\n        }\n        else if (outputBits == (uint *)0x40022000) {\n          index = 8;\n        }\n        else if (outputBits == (uint *)0x40022400) {\n          index = 9;\n        }\n        else {\n          index = 10;\n        }\n        *(uint *)(((bitIndex >> 2) + 2) * 4 + 0x40013800) =\n             index << ((bitIndex & 3) << 2) | *(uint *)(((bitIndex >> 2) + 2) * 4 + 0x40013800);\n        _DAT_40013c00 = ~bitValue & _DAT_40013c00;\n        _DAT_40013c04 = ~bitValue & _DAT_40013c04;\n        if ((inputBits[1] & 0x10000) != 0) {\n          _DAT_40013c00 = bitValue | _DAT_40013c00;\n        }\n        if ((inputBits[1] & 0x20000) != 0) {\n          _DAT_40013c04 = bitValue | _DAT_40013c04;\n        }\n        _DAT_40013c08 = ~bitValue & _DAT_40013c08;\n        _DAT_40013c0c = ~bitValue & _DAT_40013c0c;\n        if ((inputBits[1] & 0x100000) != 0) {\n          _DAT_40013c08 = bitValue | _DAT_40013c08;\n        }\n        if ((inputBits[1] & 0x200000) != 0) {\n          _DAT_40013c0c = bitValue | _DAT_40013c0c;\n        }\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006e88": "update_bit_fields_08006e88",
                "param_1": "outputBits",
                "param_2": "inputBits",
                "uVar1": "bitMask",
                "uVar2": "bitValue",
                "iVar3": "index",
                "local_c": "bitIndex"
            },
            "calling": [
                "HAL_RCC_MCOConfig",
                "gpio_init"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800733e": {
            "entrypoint": "0x0800733e",
            "current_name": "update_parameter_0800733e",
            "code": "\nvoid updateParameter_0800733e(int targetAddress,undefined2 newValue,char condition)\n\n{\n  if (condition == '\\0') {\n    *(undefined2 *)(targetAddress + 0x1a) = newValue;\n  }\n  else {\n    *(undefined2 *)(targetAddress + 0x18) = newValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800733e": "update_parameter_0800733e",
                "param_1": "targetAddress",
                "param_2": "newValue",
                "param_3": "condition"
            },
            "calling": [
                "gpio_init"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800738e": {
            "entrypoint": "0x0800738e",
            "current_name": "handle_gpio_interrupt_0800738e",
            "code": "\n\n\nvoid handleGPIOInterrupt_0800738e(ushort interruptPin)\n\n{\n  if ((interruptPin & _DAT_40013c14) != 0) {\n    _DAT_40013c14 = (uint)interruptPin;\n    HAL_GPIO_EXTI_Callback(interruptPin);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800738e": "handle_gpio_interrupt_0800738e",
                "param_1": "interruptPin"
            },
            "calling": [],
            "called": [
                "HAL_GPIO_EXTI_Callback"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073c0": {
            "entrypoint": "0x080073c0",
            "current_name": "FUNC_080073c0",
            "code": "\nvoid FUNC_080073c0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080073c0": "FUNC_080073c0"
            },
            "calling": [
                "HAL_GPIO_EXTI_IRQHandler"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080073d4": {
            "entrypoint": "0x080073d4",
            "current_name": "update_memory_value_080073d4",
            "code": "\nvoid updateMemoryValue_080073d4(uint memoryAddress)\n\n{\n  *(MemoryValue *)(((int)memoryAddress >> 4) * 0x400 + 0x4002001a) = (MemoryValue)(1 << (memoryAddress & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_080073d4": "update_memory_value_080073d4",
                "param_1": "memoryAddress",
                "short": "MemoryValue"
            },
            "calling": [
                "FUN_08007520"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007402": {
            "entrypoint": "0x08007402",
            "current_name": "update_memory_08007402",
            "code": "\nvoid updateMemory_08007402(uint address)\n\n{\n  *(short *)(((int)address >> 4) * 0x400 + 0x40020018) = (short)(1 << (address & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007402": "update_memory_08007402",
                "param_1": "address"
            },
            "calling": [
                "FUN_080074c8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007430": {
            "entrypoint": "0x08007430",
            "current_name": "infinite_loop_08007430",
            "code": "\nvoid infiniteLoop_08007430(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08007430": "infinite_loop_08007430"
            },
            "calling": [
                "SystemClock_Config"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007436": {
            "entrypoint": "0x08007436",
            "current_name": "initialize_system_08007436",
            "code": "\n\n\nvoid initializeSystem_08007436(void)\n\n{\n  int iVar1;\n  undefined4 oscConfigParam1;\n  undefined4 oscConfigParam2;\n  undefined4 oscConfigParam3;\n  undefined4 oscConfigParam4;\n  undefined4 oscConfigParam5;\n  undefined4 oscConfigParam6;\n  undefined4 oscConfigParam7;\n  undefined4 oscConfigParam8;\n  undefined4 clockConfigParam1;\n  undefined4 clockConfigParam2;\n  undefined4 clockConfigParam3;\n  undefined4 clockConfigParam4;\n  undefined4 clockConfigParam5;\n  \n  _DAT_40023840 = _DAT_40023840 | 0x10000000;\n  _DAT_40007000 = _DAT_40007000 | 0xc000;\n  oscConfigParam1 = 1;\n  oscConfigParam2 = 1;\n  oscConfigParam3 = 2;\n  oscConfigParam4 = 0x400000;\n  oscConfigParam5 = 8;\n  oscConfigParam6 = 0x150;\n  oscConfigParam7 = 2;\n  oscConfigParam8 = 7;\n  iVar1 = HAL_RCC_OscConfig(&oscConfigParam1);\n  if (iVar1 != 0) {\n    Error_Handler();\n  }\n  clockConfigParam1 = 0xf;\n  clockConfigParam2 = 2;\n  clockConfigParam3 = 0;\n  clockConfigParam4 = 0x1400;\n  clockConfigParam5 = 0x1000;\n  iVar1 = HAL_RCC_ClockConfig(&clockConfigParam1,5);\n  if (iVar1 != 0) {\n    Error_Handler();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007436": "initialize_system_08007436",
                "local_4c": "oscConfigParam1",
                "local_48": "oscConfigParam2",
                "local_34": "oscConfigParam3",
                "local_30": "oscConfigParam4",
                "local_2c": "oscConfigParam5",
                "local_28": "oscConfigParam6",
                "local_24": "oscConfigParam7",
                "local_20": "oscConfigParam8",
                "local_1c": "clockConfigParam1",
                "local_18": "clockConfigParam2",
                "local_14": "clockConfigParam3",
                "local_10": "clockConfigParam4",
                "local_c": "clockConfigParam5"
            },
            "calling": [
                "main"
            ],
            "called": [
                "Error_Handler",
                "HAL_RCC_OscConfig",
                "HAL_RCC_ClockConfig"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080074c8": {
            "entrypoint": "0x080074c8",
            "current_name": "handle_interrupts_080074c8",
            "code": "\nvoid handleInterrupts_080074c8(uint interruptFlags)\n\n{\n  if ((interruptFlags & 1) != 0) {\n    gpio_set(0x3e);\n  }\n  if ((DAT_20000e4c != 0) && ((interruptFlags & 0x1e) != 0)) {\n    limits_isr();\n  }\n  if ((DAT_20000e50 != 0) && ((interruptFlags & 0x80) != 0)) {\n    buttons_isr(interruptFlags);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080074c8": "handle_interrupts_080074c8",
                "param_1": "interruptFlags"
            },
            "calling": [
                "debounce_isr"
            ],
            "called": [
                "gpio_set",
                "limits_isr",
                "buttons_isr"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007520": {
            "entrypoint": "0x08007520",
            "current_name": "clear_gpio_if_param_flag_set_08007520",
            "code": "\nvoid clearGPIOIfParamFlagSet_08007520(uint flags)\n\n{\n  if ((flags & 1) != 0) {\n    clearGPIO(0x3e);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007520": "clear_gpio_if_param_flag_set_08007520",
                "param_1": "flags",
                "gpio_clr": "clearGPIO"
            },
            "calling": [
                "debounce_isr"
            ],
            "called": [
                "gpio_clr"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007540": {
            "entrypoint": "0x08007540",
            "current_name": "initialize_system_08007540",
            "code": "\nundefined4 initializeSystem_08007540(void)\n\n{\n  initialize_HAL();\n  configure_SystemClock();\n  initialize_gpio();\n  initialize_timers();\n  initialize_debounce();\n  initialize_usart();\n  start_forkserver(0);\n  execute_grbl_main();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007540": "initialize_system_08007540",
                "HAL_Init": "initialize_HAL",
                "SystemClock_Config": "configure_SystemClock",
                "gpio_init": "initialize_gpio",
                "timers_init": "initialize_timers",
                "debounce_init": "initialize_debounce",
                "usart_init": "initialize_usart",
                "startForkserver": "start_forkserver",
                "grbl_main": "execute_grbl_main"
            },
            "calling": [
                "Reset_Handler"
            ],
            "called": [
                "grbl_main",
                "debounce_init",
                "HAL_Init",
                "timers_init",
                "startForkserver",
                "gpio_init",
                "SystemClock_Config",
                "usart_init"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800756c": {
            "entrypoint": "0x0800756c",
            "current_name": "initialize_hardware_0800756c",
            "code": "\n\n\nvoid initializeHardware_0800756c(void)\n\n{\n  _DAT_40023808 = 0;\n  _DAT_40023804 = 0x24003010;\n  _DAT_40023800 = _DAT_40023800 & 0xfef2ffff | 1;\n  _DAT_4002380c = 0;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800756c": "initialize_hardware_0800756c"
            },
            "calling": [
                "Reset_Handler"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080076c8": {
            "entrypoint": "0x080076c8",
            "current_name": "update_bit_in_memory_080076c8",
            "code": "\nvoid updateBitInMemory_080076c8(uint inputValue)\n\n{\n  *(uint *)(((int)inputValue >> 4) * 0x400 + 0x40020014) =\n       *(uint *)(((int)inputValue >> 4) * 0x400 + 0x40020014) ^ 1 << (inputValue & 0xf);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080076c8": "update_bit_in_memory_080076c8",
                "param_1": "inputValue"
            },
            "calling": [
                "SysTick_Handler"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007756": {
            "entrypoint": "0x08007756",
            "current_name": "check_and_toggle_gpio_08007756",
            "code": "\nvoid checkAndToggleGPIO_08007756(void)\n\n{\n  uint tickValue;\n  \n  tickValue = getTickCount();\n  if ((tickValue & 0x1ff) == 0) {\n    toggleGPIO(0x3c);\n  }\n  if ((tickValue & 0xf) == 0) {\n    handleDebounce();\n  }\n  incrementTickCount();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007756": "check_and_toggle_gpio_08007756",
                "uVar1": "tickValue",
                "HAL_GetTick": "getTickCount",
                "gpio_toggle": "toggleGPIO",
                "debounce_isr": "handleDebounce",
                "HAL_IncTick": "incrementTickCount"
            },
            "calling": [],
            "called": [
                "debounce_isr",
                "gpio_toggle",
                "HAL_IncTick",
                "HAL_GetTick"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800778c": {
            "entrypoint": "0x0800778c",
            "current_name": "initialize_gpio_0800778c",
            "code": "\n\n\nvoid initializeGPIO_0800778c(void)\n\n{\n  int index;\n  int pinDescriptor;\n  undefined4 pinConfig1;\n  undefined4 pinConfig2;\n  undefined4 pinConfig3;\n  undefined4 pinConfig4;\n  uint *gpioConfig;\n  uint loopCounter;\n  \n  for (loopCounter = 0; loopCounter < 0x11; loopCounter = loopCounter + 1) {\n    index = loopCounter * 0x18;\n    gpioConfig = (uint *)(&DAT_0800bcbc + index);\n    _DAT_40023830 = _DAT_40023830 | 1 << (*gpioConfig >> 4 & 0xff);\n    pinDescriptor = 1 << (*gpioConfig & 0xf);\n    pinConfig1 = *(undefined4 *)(&DAT_0800bcc0 + index);\n    pinConfig2 = *(undefined4 *)(&DAT_0800bcc4 + index);\n    pinConfig3 = *(undefined4 *)(&DAT_0800bcc8 + index);\n    pinConfig4 = *(undefined4 *)(&DAT_0800bccc + index);\n    initializePin(((*gpioConfig >> 4) + 0x100080) * 0x400,&pinDescriptor);\n    if (-1 < (int)gpioConfig[5]) {\n      writePin(((*gpioConfig >> 4) + 0x100080) * 0x400,1 << (*gpioConfig & 0xf) & 0xffff,\n                        gpioConfig[5] & 0xff);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800778c": "initialize_gpio_0800778c",
                "local_24": "pinDescriptor",
                "local_20": "pinConfig1",
                "local_1c": "pinConfig2",
                "local_18": "pinConfig3",
                "local_14": "pinConfig4",
                "local_10": "gpioConfig",
                "local_c": "loopCounter",
                "iVar1": "index",
                "HAL_GPIO_Init": "initializePin",
                "HAL_GPIO_WritePin": "writePin"
            },
            "calling": [
                "main"
            ],
            "called": [
                "HAL_GPIO_WritePin",
                "HAL_GPIO_Init"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007854": {
            "entrypoint": "0x08007854",
            "current_name": "decode_and_extract_bit_08007854",
            "code": "\nuint decode_and_extract_bit_08007854(uint input_number)\n\n{\n  return *(uint *)(((int)input_number >> 4) * 0x400 + 0x40020010) >> (input_number & 0xf) & 1;\n}\n\n",
            "renaming": {
                "FUN_08007854": "decode_and_extract_bit_08007854",
                "param_1": "input_number"
            },
            "calling": [
                "debounce_input"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007884": {
            "entrypoint": "0x08007884",
            "current_name": "read_gpio_pins_08007884",
            "code": "\nuint read_gpio_pins_08007884(void)\n\n{\n  int pin0_value;\n  int pin1_value;\n  int pin2_value;\n  int pin3_value;\n  int pin15_value;\n  uint pin_value;\n  \n  pin0_value = gpio_rd(0x36);\n  pin1_value = gpio_rd(0x37);\n  pin2_value = gpio_rd(0x38);\n  pin3_value = gpio_rd(0x39);\n  pin15_value = gpio_rd(0xf);\n  pin_value = gpio_rd(0);\n  return pin_value | pin0_value << 4 | pin1_value << 3 | pin2_value << 2 | pin3_value << 1 | pin15_value << 7;\n}\n\n",
            "renaming": {
                "FUN_08007884": "read_gpio_pins_08007884",
                "iVar1": "pin0_value",
                "iVar2": "pin1_value",
                "iVar3": "pin2_value",
                "iVar4": "pin3_value",
                "iVar5": "pin15_value",
                "uVar6": "pin_value"
            },
            "calling": [
                "debounce_isr"
            ],
            "called": [
                "gpio_rd"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080078f4": {
            "entrypoint": "0x080078f4",
            "current_name": "calculate_bitwise_or_080078f4",
            "code": "\nuint calculateBitwiseOR_080078f4(void)\n\n{\n  int index;\n  uint result;\n  \n  result = 0;\n  for (index = 0; index < 4; index = index + 1) {\n    result = *(uint *)(&DAT_20000e54 + index * 4) | result;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080078f4": "calculate_bitwise_or_080078f4",
                "local_10": "index",
                "local_c": "result"
            },
            "calling": [
                "debounce_isr",
                "homing_cycle"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007930": {
            "entrypoint": "0x08007930",
            "current_name": "handle_input_08007930",
            "code": "\nvoid handleInput_08007930(void)\n\n{\n  int counter;\n  uint previousInput;\n  undefined4 inputValue;\n  uint debouncedInput;\n  uint changedBits;\n  \n  counter = DAT_20000e68;\n  previousInput = DAT_20000e64;\n  if (DAT_20000e6c != 0) {\n    inputValue = debounce_input();\n    *(undefined4 *)(&DAT_20000e54 + counter * 4) = inputValue;\n    if (DAT_20000e68 == 3) {\n      DAT_20000e68 = 0;\n    }\n    else {\n      DAT_20000e68 = DAT_20000e68 + 1;\n    }\n    debouncedInput = debounce_rd();\n    previousInput = DAT_20000e64;\n    if (debouncedInput != DAT_20000e64) {\n      changedBits = ~debouncedInput & DAT_20000e64;\n      if ((~DAT_20000e64 & debouncedInput) != 0) {\n        handle_interrupts_080074c8(~DAT_20000e64 & debouncedInput);\n      }\n      previousInput = debouncedInput;\n      if (changedBits != 0) {\n        clear_gpio_if_param_flag_set_08007520(changedBits);\n      }\n    }\n  }\n  DAT_20000e64 = previousInput;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007930": "handle_input_08007930",
                "iVar1": "counter",
                "uVar2": "previousInput",
                "uVar3": "inputValue",
                "uVar4": "debouncedInput",
                "uVar5": "changedBits"
            },
            "calling": [
                "SysTick_Handler"
            ],
            "called": [
                "FUN_080074c8",
                "debounce_rd",
                "FUN_08007520",
                "debounce_input"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080079c0": {
            "entrypoint": "0x080079c0",
            "current_name": "initialize_data_structure_080079c0",
            "code": "\nvoid initialize_data_structure_080079c0(void)\n\n{\n  memset(&DAT_20000e54,0,0x18);\n  DAT_20000e6c = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080079c0": "initialize_data_structure_080079c0"
            },
            "calling": [
                "main"
            ],
            "called": [
                "memset"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080079e0": {
            "entrypoint": "0x080079e0",
            "current_name": "set_bit_in_array_080079e0",
            "code": "\nvoid setBitInArray_080079e0(byte byteToSet)\n\n{\n  *(int *)(((uint)(int)(char)byteToSet >> 5) * 4 + -0x1fff1f00) = 1 << (byteToSet & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080079e0": "set_bit_in_array_080079e0",
                "param_1": "byteToSet"
            },
            "calling": [
                "enable_tim_interrupt"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007a10": {
            "entrypoint": "0x08007a10",
            "current_name": "set_flag_based_on_parameter_08007a10",
            "code": "\n\n\nvoid setFlagBasedOnParameter_08007a10(undefined *param)\n\n{\n  if (param == (undefined *)0x40000000) {\n    _DAT_40023840 = _DAT_40023840 | 1;\n  }\n  else if (param == (undefined *)0x40000400) {\n    _DAT_40023840 = _DAT_40023840 | 2;\n  }\n  else if (param == &DAT_40000800) {\n    _DAT_40023840 = _DAT_40023840 | 4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007a10": "set_flag_based_on_parameter_08007a10",
                "param_1": "param"
            },
            "calling": [
                "g540_timer_init",
                "step_timer_init"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007a70": {
            "entrypoint": "0x08007a70",
            "current_name": "set_priority_and_enable_irq_08007a70",
            "code": "\nvoid setPriorityAndEnableIRQ_08007a70(undefined *address,undefined4 priority,undefined4 subpriority)\n\n{\n  undefined irq;\n  \n  if (address == (undefined *)0x40000000) {\n    irq = 0x1c;\n  }\n  else if (address == (undefined *)0x40000400) {\n    irq = 0x1d;\n  }\n  else {\n    if (address != &DAT_40000800) {\n      return;\n    }\n    irq = 0x1e;\n  }\n  HAL_NVIC_SetPriority(irq,priority,subpriority);\n  NVIC_EnableIRQ(irq);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007a70": "set_priority_and_enable_irq_08007a70",
                "param_1": "address",
                "param_2": "priority",
                "param_3": "subpriority",
                "local_c": "irq"
            },
            "calling": [
                "step_timer_init"
            ],
            "called": [
                "NVIC_EnableIRQ",
                "HAL_NVIC_SetPriority"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007ad0": {
            "entrypoint": "0x08007ad0",
            "current_name": "initialize_system_timer_08007ad0",
            "code": "\n\n\nvoid initializeSystemTimer_08007ad0(void)\n\n{\n  enableTimerClock(0x40000000);\n  _DAT_40000000 = 0;\n  _DAT_40000004 = 0;\n  _DAT_40000008 = 0;\n  _DAT_4000000c = 0;\n  _DAT_40000010 = 0;\n  _DAT_40000018 = 0;\n  _DAT_4000001c = 0;\n  _DAT_40000020 = 0;\n  _DAT_40000024 = 0;\n  _DAT_40000028 = DAT_20000000 / 42000000 - 1;\n  _DAT_4000002c = 0;\n  _DAT_40000034 = 0;\n  _DAT_40000038 = 0;\n  _DAT_4000003c = 0;\n  _DAT_40000040 = 0;\n  _DAT_40000048 = 0;\n  _DAT_4000004c = 0;\n  enableTimerInterrupt(0x40000000,0,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007ad0": "initialize_system_timer_08007ad0",
                "enable_tim_clock": "enableTimerClock",
                "enable_tim_interrupt": "enableTimerInterrupt"
            },
            "calling": [
                "timers_init"
            ],
            "called": [
                "enable_tim_interrupt",
                "enable_tim_clock"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007b70": {
            "entrypoint": "0x08007b70",
            "current_name": "update_flags_08007b70",
            "code": "\n\n\nvoid updateFlags_08007b70(void)\n\n{\n  uint flag;\n  \n  flag = 1;\n  if (_DAT_40000034 != 0) {\n    flag = 3;\n  }\n  if (_DAT_40000038 != 0) {\n    flag = flag | 4;\n  }\n  _DAT_4000000c = _DAT_4000000c | flag;\n  _DAT_40000000 = _DAT_40000000 | 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007b70": "update_flags_08007b70",
                "local_c": "flag"
            },
            "calling": [
                "st_wake_up"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007bc2": {
            "entrypoint": "0x08007bc2",
            "current_name": "clear_flags_08007bc2",
            "code": "\n\n\nvoid clearFlags_08007bc2(void)\n\n{\n  _DAT_40000000 = _DAT_40000000 & 0xfffffffe;\n  _DAT_4000000c = _DAT_4000000c & 0xfffffff8;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007bc2": "clear_flags_08007bc2"
            },
            "calling": [
                "st_go_idle"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007bf0": {
            "entrypoint": "0x08007bf0",
            "current_name": "update_limits_08007bf0",
            "code": "\n\n\nvoid update_limits_08007bf0(uint new_value)\n\n{\n  _DAT_4000002c = new_value;\n  if (new_value <= _DAT_40000024) {\n    _DAT_40000024 = new_value;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007bf0": "update_limits_08007bf0",
                "param_1": "new_value"
            },
            "calling": [
                "set_step_events_per_minute"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007c40": {
            "entrypoint": "0x08007c40",
            "current_name": "store_parameter_value_08007c40",
            "code": "\n\n\nvoid storeParameterValue_08007c40(undefined4 value)\n\n{\n  _DAT_40000034 = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007c40": "store_parameter_value_08007c40",
                "param_1": "value"
            },
            "calling": [
                "st_wake_up"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007c5e": {
            "entrypoint": "0x08007c5e",
            "current_name": "initialize_data_08007c5e",
            "code": "\n\n\nvoid initializeData_08007c5e(undefined4 dataValue)\n\n{\n  _DAT_40000038 = dataValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007c5e": "initialize_data_08007c5e",
                "param_1": "dataValue"
            },
            "calling": [
                "st_wake_up"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007c7c": {
            "entrypoint": "0x08007c7c",
            "current_name": "update_status_and_execute_08007c7c",
            "code": "\n\n\nvoid updateStatusAndExecute_08007c7c(void)\n\n{\n  if (((_DAT_40000010 & 2) != 0) && ((_DAT_4000000c & 2) != 0)) {\n    _DAT_40000010 = _DAT_40000010 & 0xfffffffd;\n    handleStepDelay();\n  }\n  if (((_DAT_40000010 & 4) != 0) && ((_DAT_4000000c & 4) != 0)) {\n    _DAT_40000010 = _DAT_40000010 & 0xfffffffb;\n    handleStepPulse();\n  }\n  if (((_DAT_40000010 & 1) != 0) && ((_DAT_4000000c & 1) != 0)) {\n    _DAT_40000010 = _DAT_40000010 & 0xfffffffe;\n    handleStepPeriod();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007c7c": "update_status_and_execute_08007c7c",
                "step_delay_isr": "handleStepDelay",
                "step_pulse_isr": "handleStepPulse",
                "step_period_isr": "handleStepPeriod"
            },
            "calling": [],
            "called": [
                "step_pulse_isr",
                "step_period_isr",
                "step_delay_isr"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007d08": {
            "entrypoint": "0x08007d08",
            "current_name": "initialize_timer_08007d08",
            "code": "\n\n\nvoid initializeTimer_08007d08(void)\n\n{\n  enable_tim_clock(&DAT_40000800);\n  _DAT_40000800 = 0x80;\n  _DAT_40000804 = 0;\n  _DAT_40000808 = 0;\n  _DAT_4000080c = 0;\n  _DAT_40000810 = 0;\n  _DAT_40000818 = 0x6800;\n  _DAT_4000081c = 0;\n  _DAT_40000820 = 0;\n  _DAT_40000824 = 0;\n  _DAT_40000828 = DAT_20000000 / 4800000 - 1;\n  _DAT_4000082c = 199;\n  _DAT_40000834 = 0;\n  _DAT_40000838 = 100;\n  _DAT_4000083c = 0;\n  _DAT_40000840 = 0;\n  _DAT_40000848 = 0;\n  _DAT_4000084c = 0;\n  _DAT_40000814 = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007d08": "initialize_timer_08007d08"
            },
            "calling": [
                "timers_init"
            ],
            "called": [
                "enable_tim_clock"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007da8": {
            "entrypoint": "0x08007da8",
            "current_name": "set_flags_08007da8",
            "code": "\n\n\nvoid setFlags_08007da8(void)\n\n{\n  _DAT_40000820 = _DAT_40000820 | 0x10;\n  _DAT_40000800 = _DAT_40000800 | 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007da8": "set_flags_08007da8"
            },
            "calling": [
                "timers_init"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e08": {
            "entrypoint": "0x08007e08",
            "current_name": "initialize_timers_08007e08",
            "code": "\nvoid initializeTimers_08007e08(void)\n\n{\n  initializeStepTimer();\n  initializeG540Timer();\n  startG540Timer();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007e08": "initialize_timers_08007e08",
                "step_timer_init": "initializeStepTimer",
                "g540_timer_init": "initializeG540Timer",
                "g540_timer_start": "startG540Timer"
            },
            "calling": [
                "main"
            ],
            "called": [
                "g540_timer_init",
                "g540_timer_start",
                "step_timer_init"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e1c": {
            "entrypoint": "0x08007e1c",
            "current_name": "write_byte_and_wait_08007e1c",
            "code": "\n\n\nvoid writeByteAndWait_08007e1c(byte inputByte)\n\n{\n  do {\n  } while ((_DAT_40004400 & 0x80) == 0);\n  _DAT_40004404 = (uint)inputByte;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007e1c": "write_byte_and_wait_08007e1c",
                "param_1": "inputByte"
            },
            "calling": [
                "__io_putchar",
                "serial_write"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e58": {
            "entrypoint": "0x08007e58",
            "current_name": "check_bit_set_08007e58",
            "code": "\n\n\nbool checkBitSet_08007e58(void)\n\n{\n  return (_DAT_40004400 & 0x20) != 0;\n}\n\n",
            "renaming": {
                "FUN_08007e58": "check_bit_set_08007e58"
            },
            "calling": [
                "serial_read"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e84": {
            "entrypoint": "0x08007e84",
            "current_name": "get_lower_byte_08007e84",
            "code": "\n\n\nuint get_lower_byte_08007e84(void)\n\n{\n  return _DAT_40004404 & 0xff;\n}\n\n",
            "renaming": {
                "FUN_08007e84": "get_lower_byte_08007e84"
            },
            "calling": [
                "serial_read"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007ea4": {
            "entrypoint": "0x08007ea4",
            "current_name": "classify_memory_region_08007ea4",
            "code": "\n\n\nvoid classifyMemoryRegion_08007ea4(undefined *memoryRegion)\n\n{\n  if (memoryRegion == (undefined *)0x40011000) {\n    _DAT_40023844 = _DAT_40023844 | 0x10;\n  }\n  else if (memoryRegion == &DAT_40004400) {\n    _DAT_40023840 = _DAT_40023840 | 0x20000;\n  }\n  else if (memoryRegion == (undefined *)0x40004800) {\n    _DAT_40023840 = _DAT_40023840 | 0x40000;\n  }\n  else if (memoryRegion == (undefined *)0x40004c00) {\n    _DAT_40023840 = _DAT_40023840 | 0x80000;\n  }\n  else if (memoryRegion == (undefined *)0x40005000) {\n    _DAT_40023840 = _DAT_40023840 | 0x100000;\n  }\n  else if (memoryRegion == (undefined *)0x40011400) {\n    _DAT_40023844 = _DAT_40023844 | 0x20;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007ea4": "classify_memory_region_08007ea4",
                "param_1": "memoryRegion"
            },
            "calling": [
                "usart_init"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f54": {
            "entrypoint": "0x08007f54",
            "current_name": "calculate_clock_divider_08007f54",
            "code": "\nvoid calculateClockDivider_08007f54(int baseAddress,int prescaler)\n\n{\n  ulonglong clockFrequency;\n  int calculatedValue1;\n  int calculatedValue2;\n  undefined8 pclkFrequency;\n  \n  if ((*(uint *)(baseAddress + 0xc) & 0x8000) == 0) {\n    if ((baseAddress != 0x40011000) && (baseAddress != 0x40011400)) {\n      pclkFrequency = HAL_RCC_GetPCLK1Freq();\n      clockFrequency = (ulonglong)(uint)((int)pclkFrequency * 0x19) / (ulonglong)(uint)(prescaler << 2);\n      calculatedValue1 = HAL_RCC_GetPCLK1Freq\n                        ((int)pclkFrequency,(int)((ulonglong)pclkFrequency >> 0x20),(int)(clockFrequency * 0x51eb851f));\n      calculatedValue2 = HAL_RCC_GetPCLK1Freq();\n      *(uint *)(baseAddress + 8) =\n           (int)(clockFrequency / 100) << 4 |\n           (((uint)(calculatedValue1 * 0x19) / (uint)(prescaler << 2) +\n            (int)(((ulonglong)(uint)(calculatedValue2 * 0x19) / (ulonglong)(uint)(prescaler << 2)) / 100) * -100)\n            * 0x10 + 0x32) / 100 & 0xf;\n      return;\n    }\n    pclkFrequency = HAL_RCC_GetPCLK2Freq();\n    clockFrequency = (ulonglong)(uint)((int)pclkFrequency * 0x19) / (ulonglong)(uint)(prescaler << 2);\n    calculatedValue1 = HAL_RCC_GetPCLK2Freq\n                      ((int)pclkFrequency,(int)((ulonglong)pclkFrequency >> 0x20),(int)(clockFrequency * 0x51eb851f));\n    calculatedValue2 = HAL_RCC_GetPCLK2Freq();\n    *(uint *)(baseAddress + 8) =\n         (int)(clockFrequency / 100) << 4 |\n         (((uint)(calculatedValue1 * 0x19) / (uint)(prescaler << 2) +\n          (int)(((ulonglong)(uint)(calculatedValue2 * 0x19) / (ulonglong)(uint)(prescaler << 2)) / 100) * -100) *\n          0x10 + 0x32) / 100 & 0xf;\n  }\n  else {\n    if ((baseAddress != 0x40011000) && (baseAddress != 0x40011400)) {\n      pclkFrequency = HAL_RCC_GetPCLK1Freq();\n      clockFrequency = (ulonglong)(uint)((int)pclkFrequency * 0x19) / (ulonglong)(uint)(prescaler << 1);\n      calculatedValue1 = HAL_RCC_GetPCLK1Freq\n                        ((int)pclkFrequency,(int)((ulonglong)pclkFrequency >> 0x20),(int)(clockFrequency * 0x51eb851f));\n      calculatedValue2 = HAL_RCC_GetPCLK1Freq();\n      *(uint *)(baseAddress + 8) =\n           (int)(clockFrequency / 100) << 4 |\n           (((uint)(calculatedValue1 * 0x19) / (uint)(prescaler << 1) +\n            (int)(((ulonglong)(uint)(calculatedValue2 * 0x19) / (ulonglong)(uint)(prescaler << 1)) / 100) * -100)\n            * 0x10 + 0x32) / 100 & 0xf;\n      return;\n    }\n    pclkFrequency = HAL_RCC_GetPCLK2Freq();\n    clockFrequency = (ulonglong)(uint)((int)pclkFrequency * 0x19) / (ulonglong)(uint)(prescaler << 1);\n    calculatedValue1 = HAL_RCC_GetPCLK2Freq\n                      ((int)pclkFrequency,(int)((ulonglong)pclkFrequency >> 0x20),(int)(clockFrequency * 0x51eb851f));\n    calculatedValue2 = HAL_RCC_GetPCLK2Freq();\n    *(uint *)(baseAddress + 8) =\n         (int)(clockFrequency / 100) << 4 |\n         (((uint)(calculatedValue1 * 0x19) / (uint)(prescaler << 1) +\n          (int)(((ulonglong)(uint)(calculatedValue2 * 0x19) / (ulonglong)(uint)(prescaler << 1)) / 100) * -100) *\n          0x10 + 0x32) / 100 & 0xf;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007f54": "calculate_clock_divider_08007f54",
                "param_1": "baseAddress",
                "param_2": "prescaler",
                "uVar1": "clockFrequency",
                "iVar2": "calculatedValue1",
                "iVar3": "calculatedValue2",
                "uVar4": "pclkFrequency"
            },
            "calling": [
                "usart_init"
            ],
            "called": [
                "HAL_RCC_GetPCLK2Freq",
                "HAL_RCC_GetPCLK1Freq"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008190": {
            "entrypoint": "0x08008190",
            "current_name": "initialize_usart_08008190",
            "code": "\n\n\nvoid initializeUSART_08008190(void)\n\n{\n  enableClock(&DAT_40004400);\n  _DAT_4000440c = _DAT_4000440c & 0xffff400c | 0xc;\n  _DAT_40004410 = _DAT_40004410 & 0xffff8090;\n  _DAT_40004414 = _DAT_40004414 & 0xfffff000;\n  _DAT_40004400 = _DAT_40004400 & 0xfffffc00;\n  setBaudRate(&DAT_40004400,0x1c200);\n  _DAT_4000440c = _DAT_4000440c | 0x2000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008190": "initialize_usart_08008190",
                "enable_usart_clock": "enableClock",
                "set_baud_rate": "setBaudRate"
            },
            "calling": [
                "main"
            ],
            "called": [
                "enable_usart_clock",
                "set_baud_rate"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008244": {
            "entrypoint": "0x08008244",
            "current_name": "FUNC_08008244",
            "code": "\nvoid FUNC_08008244(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008244": "FUNC_08008244"
            },
            "calling": [
                "grbl_main"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008250": {
            "entrypoint": "0x08008250",
            "current_name": "print_character_08008250",
            "code": "\nvoid print_character_08008250(undefined character)\n\n{\n  usart_putc(character);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008250": "print_character_08008250",
                "param_1": "character"
            },
            "calling": [
                "print_uint32_base10",
                "printPgmString",
                "printString",
                "print_base2",
                "printInteger",
                "printFloat"
            ],
            "called": [
                "usart_putc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800826a": {
            "entrypoint": "0x0800826a",
            "current_name": "send_char_0800826a",
            "code": "\nvoid send_char_0800826a(undefined character)\n\n{\n  send_to_uart(character);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800826a": "send_char_0800826a",
                "param_1": "character",
                "usart_putc": "send_to_uart",
                "undefined4": "void"
            },
            "calling": [],
            "called": [
                "usart_putc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008286": {
            "entrypoint": "0x08008286",
            "current_name": "process_serial_input_08008286",
            "code": "\nundefined processSerialInput_08008286(void)\n\n{\n  undefined receivedChar;\n  int inputAvailable;\n  \n  inputAvailable = usart_tstc();\n  if (inputAvailable != 0) {\n    receivedChar = usart_getc();\n    inputAvailable = serial_rx_hook(receivedChar);\n    if (inputAvailable == 0) {\n      return receivedChar;\n    }\n  }\n  return 0xff;\n}\n\n",
            "renaming": {
                "FUN_08008286": "process_serial_input_08008286",
                "uVar1": "receivedChar",
                "iVar2": "inputAvailable"
            },
            "calling": [
                "protocol_process"
            ],
            "called": [
                "usart_tstc",
                "serial_rx_hook",
                "usart_getc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080082ba": {
            "entrypoint": "0x080082ba",
            "current_name": "FUNC_080082ba",
            "code": "\nvoid FUNC_080082ba(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080082ba": "FUNC_080082ba"
            },
            "calling": [
                "grbl_main"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080082d0": {
            "entrypoint": "0x080082d0",
            "current_name": "calculate_080082d0",
            "code": "\nulonglong calculate_080082d0(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int shift1;\n  byte carry1;\n  uint shifted1;\n  uint shifted2;\n  uint shifted3;\n  uint shifted4;\n  uint shifted5;\n  int shift2;\n  uint shifted6;\n  uint shifted7;\n  uint shifted8;\n  uint shifted9;\n  bool equal1;\n  bool equal2;\n  bool borrow1;\n  \n  shifted4 = input4 ^ 0x80000000;\n  shifted6 = input2 << 1;\n  input4 = input4 << 1;\n  equal1 = ((input2 ^ shifted4) & 0x7fffffff) == 0;\n  equal2 = equal1 && input1 == input3;\n  if (!equal1 || input1 != input3) {\n    equal2 = (shifted6 | input1) == 0;\n  }\n  if (!equal2) {\n    equal2 = (input4 | input3) == 0;\n  }\n  shift2 = (int)shifted6 >> 0x15;\n  if (!equal2) {\n    equal2 = shift2 == -1;\n  }\n  shift1 = (int)input4 >> 0x15;\n  if (!equal2) {\n    equal2 = shift1 == -1;\n  }\n  if (equal2) {\n    if (shift2 == -1 || shift1 == -1) {\n      shifted6 = shifted4;\n      shifted8 = input3;\n      if (shift2 == -1) {\n        shifted6 = input2;\n        shifted8 = input1;\n      }\n      if (shift2 != -1 || shift1 != -1) {\n        input3 = shifted8;\n        shifted4 = shifted6;\n      }\n      equal2 = (shifted8 | shifted6 << 0xc) == 0;\n      if (equal2) {\n        equal2 = (input3 | shifted4 << 0xc) == 0;\n      }\n      if (equal2) {\n        equal2 = shifted6 == shifted4;\n      }\n      if (!equal2) {\n        shifted6 = shifted6 | 0x80000;\n      }\n      return CONCAT44(shifted6,shifted8);\n    }\n    if (((input2 ^ shifted4) & 0x7fffffff) != 0 || input1 != input3) {\n      if ((shifted6 | input1) == 0) {\n        input1 = input3;\n        input2 = shifted4;\n      }\n      return CONCAT44(input2,input1);\n    }\n    if (input2 != shifted4) {\n      return 0;\n    }\n    if (shifted6 >> 0x15 == 0) {\n      equal2 = (input1 & 0x80000000) != 0;\n      shifted4 = input2 * 2 + (uint)equal2;\n      if (CARRY4(input2,input2) || CARRY4(input2 * 2,(uint)equal2)) {\n        shifted4 = shifted4 | 0x80000000;\n      }\n      return CONCAT44(shifted4,input1 << 1);\n    }\n    if (shifted6 < 0xffc00000) {\n      return CONCAT44(input2 + 0x100000,input1);\n    }\n    input2 = input2 & 0x80000000;\nLAB_08008514:\n    return (ulonglong)(input2 | 0x7ff00000) << 0x20;\n  }\n  shifted6 = shifted6 >> 0x15;\n  input4 = input4 >> 0x15;\n  shifted8 = input4 - shifted6;\n  equal2 = shifted8 != 0;\n  if (input4 < shifted6) {\n    shifted8 = -shifted8;\n  }\n  shifted7 = input1;\n  shifted5 = input2;\n  if (equal2 && shifted6 <= input4) {\n    shifted6 = shifted6 + shifted8;\n    shifted7 = input3;\n    shifted5 = shifted4;\n    input3 = input1;\n    shifted4 = input2;\n  }\n  if (0x36 < shifted8) {\n    return CONCAT44(shifted5,shifted7);\n  }\n  shifted2 = shifted5 & 0xfffff | 0x100000;\n  if ((shifted5 & 0x80000000) != 0) {\n    equal2 = shifted7 != 0;\n    shifted7 = -shifted7;\n    shifted2 = -shifted2 - (uint)equal2;\n  }\n  shifted5 = shifted4 & 0xfffff | 0x100000;\n  if ((shifted4 & 0x80000000) != 0) {\n    equal2 = input3 != 0;\n    input3 = -input3;\n    shifted5 = -shifted5 - (uint)equal2;\n  }\n  if (shifted6 == shifted8) {\n    shifted5 = shifted5 ^ 0x100000;\n    if (shifted6 == 0) {\n      shifted2 = shifted2 ^ 0x100000;\n      shifted6 = 1;\n    }\n    else {\n      shifted8 = shifted8 - 1;\n    }\n  }\n  shifted4 = -shifted8 + 0x20;\n  if ((int)shifted8 < 0x21) {\n    shifted9 = input3 << (shifted4 & 0xff);\n    input3 = input3 >> (shifted8 & 0xff);\n    shifted1 = shifted7 + input3;\n    shifted3 = shifted5 << (shifted4 & 0xff);\n    shifted4 = shifted1 + shifted3;\n    shifted2 = shifted2 + CARRY4(shifted7,input3) + ((int)shifted5 >> (shifted8 & 0xff)) +\n            (uint)CARRY4(shifted1,shifted3);\n  }\n  else {\n    shifted9 = shifted5 << (-shifted8 + 0x40 & 0xff);\n    if (input3 != 0) {\n      shifted9 = shifted9 | 2;\n    }\n    shifted5 = (int)shifted5 >> (shifted8 - 0x20 & 0xff);\n    shifted4 = shifted7 + shifted5;\n    shifted2 = shifted2 + ((int)shifted5 >> 0x1f) + (uint)CARRY4(shifted7,shifted5);\n  }\n  input2 = shifted2 & 0x80000000;\n  shifted8 = shifted2;\n  if ((int)shifted2 < 0) {\n    equal2 = shifted9 == 0;\n    shifted9 = -shifted9;\n    shifted8 = -shifted4;\n    shifted4 = -(uint)!equal2 - shifted4;\n    shifted8 = -(uint)(equal2 <= shifted8) - shifted2;\n  }\n  if (0xfffff < shifted8) {\n    shifted7 = shifted6 - 1;\n    if (0x1fffff < shifted8) {\n      shifted7 = shifted8 & 1;\n      shifted8 = shifted8 >> 1;\n      carry1 = (byte)shifted4;\n      shifted4 = (uint)(shifted7 != 0) << 0x1f | shifted4 >> 1;\n      shifted9 = (uint)(carry1 & 1) << 0x1f | shifted9 >> 1;\n      shifted7 = shifted6;\n      if (0xffbfffff < shifted6 * 0x200000) goto LAB_08008514;\n    }\nLAB_080083e0:\n    equal2 = 0x7fffffff < shifted9;\n    if (shifted9 == 0x80000000) {\n      equal2 = (shifted4 & 1) != 0;\n    }\n    return CONCAT44(shifted8 + shifted7 * 0x100000 + (uint)CARRY4(shifted4,(uint)equal2) | input2,\n                    shifted4 + equal2);\n  }\n  equal1 = (shifted9 & 0x80000000) != 0;\n  shifted9 = shifted9 << 1;\n  shifted7 = shifted4 * 2;\n  equal2 = CARRY4(shifted4,shifted4);\n  shifted4 = shifted4 * 2 + (uint)equal1;\n  shifted8 = shifted8 * 2 + (uint)(equal2 || CARRY4(shifted7,(uint)equal1));\n  shifted7 = shifted6 - 2;\n  if (shifted6 - 1 != 0 && 0xfffff < shifted8) goto LAB_080083e0;\n  shifted5 = shifted4;\n  shifted6 = shifted8;\n  if (shifted8 == 0) {\n    shifted5 = 0;\n    shifted6 = shifted4;\n  }\n  shift2 = LZCOUNT(shifted6);\n  if (shifted8 == 0) {\n    shift2 = shift2 + 0x20;\n  }\n  shifted8 = shift2 - 0xb;\n  borrow1 = SBORROW4(shifted8,0x20);\n  shifted4 = shift2 - 0x2b;\n  equal2 = (int)shifted4 < 0;\n  equal1 = shifted4 == 0;\n  if ((int)shifted8 < 0x20) {\n    borrow1 = SCARRY4(shifted4,0xc);\n    shift2 = shift2 + -0x1f;\n    equal2 = shift2 < 0;\n    equal1 = shift2 == 0;\n    shifted4 = shifted8;\n    if (!equal1 && equal2 == borrow1) {\n      shifted5 = shifted6 << (shifted8 & 0xff);\n      shifted6 = shifted6 >> (0xcU - shift2 & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (equal1 || equal2 != borrow1) {\n    shifted9 = 0x20 - shifted4;\n  }\n  shifted6 = shifted6 << (shifted4 & 0xff);\n  if (equal1 || equal2 != borrow1) {\n    shifted6 = shifted6 | shifted5 >> (shifted9 & 0xff);\n  }\n  if (equal1 || equal2 != borrow1) {\n    shifted5 = shifted5 << (shifted4 & 0xff);\n  }\nLAB_08008458:\n  if ((int)shifted8 <= (int)shifted7) {\n    return CONCAT44(shifted6 + (shifted7 - shifted8) * 0x100000 | input2,shifted5);\n  }\n  shifted4 = ~(shifted7 - shifted8);\n  if ((int)shifted4 < 0x1f) {\n    shift2 = shifted4 - 0x13;\n    if (shift2 != 0 && shift2 < 0 == SCARRY4(shifted4 - 0x1f,0xc)) {\n      return CONCAT44(shifted2,shifted5 >> (0x20 - (0xcU - shift2) & 0xff) | shifted6 << (0xcU - shift2 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    shifted4 = shifted4 + 1;\n    return CONCAT44(input2 | shifted6 >> (shifted4 & 0xff),\n                    shifted5 >> (shifted4 & 0xff) | shifted6 << (0x20 - shifted4 & 0xff));\n  }\n  return CONCAT44(shifted2,shifted6 >> (shifted4 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_080082d0": "calculate_080082d0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "shift1",
                "bVar2": "carry1",
                "uVar3": "shifted1",
                "uVar4": "shifted2",
                "uVar5": "shifted3",
                "uVar6": "shifted4",
                "uVar7": "shifted5",
                "iVar8": "shift2",
                "uVar9": "shifted6",
                "uVar10": "shifted7",
                "uVar11": "shifted8",
                "uVar12": "shifted9",
                "bVar13": "equal1",
                "bVar14": "equal2",
                "bVar15": "borrow1"
            },
            "calling": [
                "mc_arc",
                "__ieee754_rem_pio2",
                "sin",
                "__ieee754_sqrt",
                "atan",
                "__kernel_rem_pio2",
                "plan_buffer_line",
                "report_realtime_status",
                "__kernel_sin",
                "cos",
                "__kernel_cos",
                "__ieee754_hypot",
                "__ieee754_atan2"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080082d4": {
            "entrypoint": "0x080082d4",
            "current_name": "decompile_and_improve_080082d4",
            "code": "\nulonglong decompile_and_improve_080082d4(uint input_1,uint input_2,uint input_3,uint input_4)\n\n{\n  int bit_shift_param2;\n  byte bit_flag;\n  uint temp_var1;\n  uint temp_var2;\n  uint temp_var3;\n  int bit_shift_param4;\n  uint param2_shifted;\n  uint param1_shifted;\n  uint param4_shifted;\n  uint param3_shifted;\n  uint temp_var4;\n  uint temp_var5;\n  bool is_zero;\n  bool is_equal;\n  bool is_negative;\n  \n  param2_shifted = input_2 << 1;\n  param4_shifted = input_4 << 1;\n  is_zero = ((input_2 ^ input_4) & 0x7fffffff) == 0;\n  is_equal = is_zero && input_1 == input_3;\n  if (!is_zero || input_1 != input_3) {\n    is_equal = (param2_shifted | input_1) == 0;\n  }\n  if (!is_equal) {\n    is_equal = (param4_shifted | input_3) == 0;\n  }\n  bit_shift_param4 = (int)param2_shifted >> 0x15;\n  if (!is_equal) {\n    is_equal = bit_shift_param4 == -1;\n  }\n  bit_shift_param2 = (int)param4_shifted >> 0x15;\n  if (!is_equal) {\n    is_equal = bit_shift_param2 == -1;\n  }\n  if (is_equal) {\n    if (bit_shift_param4 == -1 || bit_shift_param2 == -1) {\n      param4_shifted = input_4;\n      param2_shifted = input_3;\n      if (bit_shift_param4 == -1) {\n        param4_shifted = input_2;\n        param2_shifted = input_1;\n      }\n      if (bit_shift_param4 != -1 || bit_shift_param2 != -1) {\n        input_3 = param2_shifted;\n        input_4 = param4_shifted;\n      }\n      is_equal = (param2_shifted | param4_shifted << 0xc) == 0;\n      if (is_equal) {\n        is_equal = (input_3 | input_4 << 0xc) == 0;\n      }\n      if (is_equal) {\n        is_equal = param4_shifted == input_4;\n      }\n      if (!is_equal) {\n        param4_shifted = param4_shifted | 0x80000;\n      }\n      return CONCAT44(param4_shifted,param2_shifted);\n    }\n    if (((input_2 ^ input_4) & 0x7fffffff) != 0 || input_1 != input_3) {\n      if ((param2_shifted | input_1) == 0) {\n        input_1 = input_3;\n        input_2 = input_4;\n      }\n      return CONCAT44(input_2,input_1);\n    }\n    if (input_2 != input_4) {\n      return 0;\n    }\n    if (param2_shifted >> 0x15 == 0) {\n      is_equal = (input_1 & 0x80000000) != 0;\n      param4_shifted = input_2 * 2 + (uint)is_equal;\n      if (CARRY4(input_2,input_2) || CARRY4(input_2 * 2,(uint)is_equal)) {\n        param4_shifted = param4_shifted | 0x80000000;\n      }\n      return CONCAT44(param4_shifted,input_1 << 1);\n    }\n    if (param2_shifted < 0xffc00000) {\n      return CONCAT44(input_2 + 0x100000,input_1);\n    }\n    input_2 = input_2 & 0x80000000;\nLAB_08008514:\n    return (ulonglong)(input_2 | 0x7ff00000) << 0x20;\n  }\n  param2_shifted = param2_shifted >> 0x15;\n  param4_shifted = param4_shifted >> 0x15;\n  param3_shifted = param4_shifted - param2_shifted;\n  is_equal = param3_shifted != 0;\n  if (param4_shifted < param2_shifted) {\n    param3_shifted = -param3_shifted;\n  }\n  param1_shifted = input_1;\n  temp_var3 = input_2;\n  if (is_equal && param2_shifted <= param4_shifted) {\n    param2_shifted = param2_shifted + param3_shifted;\n    param1_shifted = input_3;\n    temp_var3 = input_4;\n    input_3 = input_1;\n    input_4 = input_2;\n  }\n  if (0x36 < param3_shifted) {\n    return CONCAT44(temp_var3,param1_shifted);\n  }\n  param4_shifted = temp_var3 & 0xfffff | 0x100000;\n  if ((temp_var3 & 0x80000000) != 0) {\n    is_equal = param1_shifted != 0;\n    param1_shifted = -param1_shifted;\n    param4_shifted = -param4_shifted - (uint)is_equal;\n  }\n  temp_var3 = input_4 & 0xfffff | 0x100000;\n  if ((input_4 & 0x80000000) != 0) {\n    is_equal = input_3 != 0;\n    input_3 = -input_3;\n    temp_var3 = -temp_var3 - (uint)is_equal;\n  }\n  if (param2_shifted == param3_shifted) {\n    temp_var3 = temp_var3 ^ 0x100000;\n    if (param2_shifted == 0) {\n      param4_shifted = param4_shifted ^ 0x100000;\n      param2_shifted = 1;\n    }\n    else {\n      param3_shifted = param3_shifted - 1;\n    }\n  }\n  temp_var5 = -param3_shifted + 0x20;\n  if ((int)param3_shifted < 0x21) {\n    temp_var4 = input_3 << (temp_var5 & 0xff);\n    input_3 = input_3 >> (param3_shifted & 0xff);\n    temp_var1 = param1_shifted + input_3;\n    temp_var2 = temp_var3 << (temp_var5 & 0xff);\n    temp_var5 = temp_var1 + temp_var2;\n    param4_shifted = param4_shifted + CARRY4(param1_shifted,input_3) + ((int)temp_var3 >> (param3_shifted & 0xff)) +\n            (uint)CARRY4(temp_var1,temp_var2);\n  }\n  else {\n    temp_var4 = temp_var3 << (-param3_shifted + 0x40 & 0xff);\n    if (input_3 != 0) {\n      temp_var4 = temp_var4 | 2;\n    }\n    temp_var3 = (int)temp_var3 >> (param3_shifted - 0x20 & 0xff);\n    temp_var5 = param1_shifted + temp_var3;\n    param4_shifted = param4_shifted + ((int)temp_var3 >> 0x1f) + (uint)CARRY4(param1_shifted,temp_var3);\n  }\n  input_2 = param4_shifted & 0x80000000;\n  param3_shifted = param4_shifted;\n  if ((int)param4_shifted < 0) {\n    is_equal = temp_var4 == 0;\n    temp_var4 = -temp_var4;\n    param3_shifted = -temp_var5;\n    temp_var5 = -(uint)!is_equal - temp_var5;\n    param3_shifted = -(uint)(is_equal <= param3_shifted) - param4_shifted;\n  }\n  if (0xfffff < param3_shifted) {\n    param1_shifted = param2_shifted - 1;\n    if (0x1fffff < param3_shifted) {\n      param4_shifted = param3_shifted & 1;\n      param3_shifted = param3_shifted >> 1;\n      bit_flag = (byte)temp_var5;\n      temp_var5 = (uint)(param4_shifted != 0) << 0x1f | temp_var5 >> 1;\n      temp_var4 = (uint)(bit_flag & 1) << 0x1f | temp_var4 >> 1;\n      param1_shifted = param2_shifted;\n      if (0xffbfffff < param2_shifted * 0x200000) goto LAB_08008514;\n    }\nLAB_080083e0:\n    is_equal = 0x7fffffff < temp_var4;\n    if (temp_var4 == 0x80000000) {\n      is_equal = (temp_var5 & 1) != 0;\n    }\n    return CONCAT44(param3_shifted + param1_shifted * 0x100000 + (uint)CARRY4(temp_var5,(uint)is_equal) | input_2,\n                    temp_var5 + is_equal);\n  }\n  is_zero = (temp_var4 & 0x80000000) != 0;\n  temp_var4 = temp_var4 << 1;\n  param1_shifted = temp_var5 * 2;\n  is_equal = CARRY4(temp_var5,temp_var5);\n  temp_var5 = temp_var5 * 2 + (uint)is_zero;\n  param3_shifted = param3_shifted * 2 + (uint)(is_equal || CARRY4(param1_shifted,(uint)is_zero));\n  param1_shifted = param2_shifted - 2;\n  if (param2_shifted - 1 != 0 && 0xfffff < param3_shifted) goto LAB_080083e0;\n  temp_var3 = temp_var5;\n  param2_shifted = param3_shifted;\n  if (param3_shifted == 0) {\n    temp_var3 = 0;\n    param2_shifted = temp_var5;\n  }\n  bit_shift_param4 = LZCOUNT(param2_shifted);\n  if (param3_shifted == 0) {\n    bit_shift_param4 = bit_shift_param4 + 0x20;\n  }\n  temp_var5 = bit_shift_param4 - 0xb;\n  is_negative = SBORROW4(temp_var5,0x20);\n  param3_shifted = bit_shift_param4 - 0x2b;\n  is_equal = (int)param3_shifted < 0;\n  is_zero = param3_shifted == 0;\n  if ((int)temp_var5 < 0x20) {\n    is_negative = SCARRY4(param3_shifted,0xc);\n    bit_shift_param4 = bit_shift_param4 + -0x1f;\n    is_equal = bit_shift_param4 < 0;\n    is_zero = bit_shift_param4 == 0;\n    param3_shifted = temp_var5;\n    if (!is_zero && is_equal == is_negative) {\n      temp_var3 = param2_shifted << (temp_var5 & 0xff);\n      param2_shifted = param2_shifted >> (0xcU - bit_shift_param4 & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (is_zero || is_equal != is_negative) {\n    temp_var4 = 0x20 - param3_shifted;\n  }\n  param2_shifted = param2_shifted << (param3_shifted & 0xff);\n  if (is_zero || is_equal != is_negative) {\n    param2_shifted = param2_shifted | temp_var3 >> (temp_var4 & 0xff);\n  }\n  if (is_zero || is_equal != is_negative) {\n    temp_var3 = temp_var3 << (param3_shifted & 0xff);\n  }\nLAB_08008458:\n  if ((int)temp_var5 <= (int)param1_shifted) {\n    return CONCAT44(param2_shifted + (param1_shifted - temp_var5) * 0x100000 | input_2,temp_var3);\n  }\n  param3_shifted = ~(param1_shifted - temp_var5);\n  if ((int)param3_shifted < 0x1f) {\n    bit_shift_param4 = param3_shifted - 0x13;\n    if (bit_shift_param4 != 0 && bit_shift_param4 < 0 == SCARRY4(param3_shifted - 0x1f,0xc)) {\n      return CONCAT44(param4_shifted,temp_var3 >> (0x20 - (0xcU - bit_shift_param4) & 0xff) | param2_shifted << (0xcU - bit_shift_param4 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    param3_shifted = param3_shifted + 1;\n    return CONCAT44(input_2 | param2_shifted >> (param3_shifted & 0xff),\n                    temp_var3 >> (param3_shifted & 0xff) | param2_shifted << (0x20 - param3_shifted & 0xff));\n  }\n  return CONCAT44(param4_shifted,param2_shifted >> (param3_shifted - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_080082d4": "decompile_and_improve_080082d4",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "iVar1": "bit_shift_param2",
                "bVar2": "bit_flag",
                "uVar3": "temp_var1",
                "uVar4": "temp_var2",
                "uVar5": "temp_var3",
                "iVar6": "bit_shift_param4",
                "uVar7": "param2_shifted",
                "uVar8": "param1_shifted",
                "uVar9": "param4_shifted",
                "uVar10": "param3_shifted",
                "uVar11": "temp_var4",
                "uVar12": "temp_var5",
                "bVar13": "is_zero",
                "bVar14": "is_equal",
                "bVar15": "is_negative"
            },
            "calling": [
                "mc_arc",
                "__ieee754_rem_pio2",
                "__ieee754_sqrt",
                "trunc",
                "atan",
                "floor",
                "__kernel_rem_pio2",
                "scalbn",
                "__kernel_sin",
                "ceil",
                "__kernel_cos",
                "__ieee754_hypot",
                "__ieee754_atan2",
                "round"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800854c": {
            "entrypoint": "0x0800854c",
            "current_name": "bitshift_and_concatenate_0800854c",
            "code": "\nulonglong bitshift_and_concatenate_0800854c(uint input_value)\n\n{\n  uint result;\n  uint uVar2;\n  int leading_zeros_count;\n  uint shift_amount;\n  uint temp;\n  bool is_negative;\n  bool is_zero;\n  bool is_less_than_32;\n  \n  if (input_value == 0) {\n    return 0;\n  }\n  result = 0;\n  leading_zeros_count = LZCOUNT(input_value);\n  shift_amount = leading_zeros_count + 0x15;\n  is_less_than_32 = SBORROW4(shift_amount,0x20);\n  uVar2 = leading_zeros_count - 0xb;\n  is_negative = (int)uVar2 < 0;\n  is_zero = uVar2 == 0;\n  if (shift_amount < 0x20) {\n    is_less_than_32 = SCARRY4(uVar2,0xc);\n    is_negative = false;\n    is_zero = leading_zeros_count + 1 == 0;\n    uVar2 = shift_amount;\n    if (!is_zero && is_less_than_32 == false) {\n      result = input_value << shift_amount;\n      input_value = input_value >> (0xcU - (leading_zeros_count + 1) & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (is_zero || is_negative != is_less_than_32) {\n    temp = 0x20 - uVar2;\n  }\n  input_value = input_value << (uVar2 & 0xff);\n  if (is_zero || is_negative != is_less_than_32) {\n    input_value = input_value | 0U >> (temp & 0xff);\n  }\n  if (is_zero || is_negative != is_less_than_32) {\n    result = 0 << (uVar2 & 0xff);\n  }\nLAB_08008458:\n  if (shift_amount < 0x433) {\n    return CONCAT44(input_value + (0x432 - shift_amount) * 0x100000,result);\n  }\n  uVar2 = ~(0x432 - shift_amount);\n  if (0x1e < (int)uVar2) {\n    return (ulonglong)(input_value >> (uVar2 - 0x1f & 0xff));\n  }\n  leading_zeros_count = uVar2 - 0x13;\n  if (leading_zeros_count == 0 || leading_zeros_count < 0 != SCARRY4(uVar2 - 0x1f,0xc)) {\n    uVar2 = uVar2 + 1;\n    return CONCAT44(input_value >> (uVar2 & 0xff),\n                    result >> (uVar2 & 0xff) | input_value << (0x20 - uVar2 & 0xff));\n  }\n  return (ulonglong)(result >> (0x20 - (0xcU - leading_zeros_count) & 0xff) | input_value << (0xcU - leading_zeros_count & 0xff));\n}\n\n",
            "renaming": {
                "FUN_0800854c": "bitshift_and_concatenate_0800854c",
                "param_1": "input_value",
                "uVar1": "result",
                "iVar3": "leading_zeros_count",
                "uVar4": "shift_amount",
                "in_r12": "temp",
                "bVar5": "is_negative",
                "bVar6": "is_zero",
                "bVar7": "is_less_than_32"
            },
            "calling": [
                "homing_cycle"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800856c": {
            "entrypoint": "0x0800856c",
            "current_name": "apply_bitwise_operations_0800856c",
            "code": "\nulonglong applyBitwiseOperations_0800856c(uint input)\n\n{\n  uint result1;\n  uint temp1;\n  uint temp2;\n  int bitCount;\n  uint shiftValue;\n  uint sign;\n  uint remainingBits;\n  bool isNegative1;\n  bool isZeroShift;\n  bool isNegative2;\n  \n  if (input == 0) {\n    return 0;\n  }\n  sign = input & 0x80000000;\n  temp1 = input;\n  if ((int)sign < 0) {\n    temp1 = -input;\n  }\n  result1 = 0;\n  bitCount = LZCOUNT(temp1);\n  shiftValue = bitCount + 0x15;\n  isNegative2 = SBORROW4(shiftValue,0x20);\n  temp2 = bitCount - 0xb;\n  isNegative1 = (int)temp2 < 0;\n  isZeroShift = temp2 == 0;\n  if (shiftValue < 0x20) {\n    isNegative2 = SCARRY4(temp2,0xc);\n    isNegative1 = false;\n    isZeroShift = bitCount + 1 == 0;\n    temp2 = shiftValue;\n    if (!isZeroShift && isNegative2 == false) {\n      result1 = temp1 << shiftValue;\n      temp1 = temp1 >> (0xcU - (bitCount + 1) & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (isZeroShift || isNegative1 != isNegative2) {\n    remainingBits = 0x20 - temp2;\n  }\n  temp1 = temp1 << (temp2 & 0xff);\n  if (isZeroShift || isNegative1 != isNegative2) {\n    temp1 = temp1 | 0U >> (remainingBits & 0xff);\n  }\n  if (isZeroShift || isNegative1 != isNegative2) {\n    result1 = 0 << (temp2 & 0xff);\n  }\nLAB_08008458:\n  if (shiftValue < 0x433) {\n    return CONCAT44(temp1 + (0x432 - shiftValue) * 0x100000 | sign,result1);\n  }\n  temp2 = ~(0x432 - shiftValue);\n  if (0x1e < (int)temp2) {\n    return CONCAT44(input,temp1 >> (temp2 - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  bitCount = temp2 - 0x13;\n  if (bitCount == 0 || bitCount < 0 != SCARRY4(temp2 - 0x1f,0xc)) {\n    temp2 = temp2 + 1;\n    return CONCAT44(sign | temp1 >> (temp2 & 0xff),\n                    result1 >> (temp2 & 0xff) | temp1 << (0x20 - temp2 & 0xff));\n  }\n  return CONCAT44(input,result1 >> (0x20 - (0xcU - bitCount) & 0xff) | temp1 << (0xcU - bitCount & 0xff))\n         & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800856c": "apply_bitwise_operations_0800856c",
                "param_1": "input",
                "uVar1": "result1",
                "uVar2": "temp1",
                "uVar3": "temp2",
                "iVar4": "bitCount",
                "uVar5": "shiftValue",
                "uVar6": "sign",
                "in_r12": "remainingBits",
                "bVar7": "isNegative1",
                "bVar8": "isZeroShift",
                "bVar9": "isNegative2"
            },
            "calling": [
                "__ieee754_rem_pio2",
                "calculate_trapezoid_for_block",
                "__kernel_rem_pio2"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008590": {
            "entrypoint": "0x08008590",
            "current_name": "reverse_bits_08008590",
            "code": "\nulonglong reverseBits_08008590(uint input,undefined4 param2,undefined4 param3,uint param4)\n\n{\n  uint bit31;\n  uint tempVar1;\n  uint bit31WithShiftedData;\n  uint shiftedData;\n  uint tempVar2;\n  int shiftCount;\n  uint tempVar3;\n  uint constant;\n  bool isShiftBiggerThan32;\n  bool isParam4EqualToBounds;\n  bool isShiftPositive;\n  \n  tempVar2 = input << 1;\n  isParam4EqualToBounds = tempVar2 == 0;\n  bit31 = (uint)((input & 0x80000000) != 0) << 0x1f;\n  shiftedData = (uint)((int)tempVar2 >> 3) >> 1;\n  bit31WithShiftedData = bit31 | shiftedData;\n  input = input << 0x1d;\n  if (!isParam4EqualToBounds) {\n    param4 = tempVar2 & 0xff000000;\n    isParam4EqualToBounds = param4 == 0;\n  }\n  if (!isParam4EqualToBounds) {\n    isParam4EqualToBounds = param4 == 0xff000000;\n  }\n  if (!isParam4EqualToBounds) {\n    return CONCAT44(bit31WithShiftedData,input) ^ 0x3800000000000000;\n  }\n  if ((tempVar2 & 0xffffff) == 0) {\n    return CONCAT44(bit31WithShiftedData,input);\n  }\n  if (param4 == 0xff000000) {\n    return CONCAT44(bit31WithShiftedData,input) | 0x8000000000000;\n  }\n  tempVar1 = input;\n  tempVar2 = shiftedData;\n  if (shiftedData == 0) {\n    tempVar1 = 0;\n    tempVar2 = input;\n  }\n  shiftCount = LZCOUNT(tempVar2);\n  if (shiftedData == 0) {\n    shiftCount = shiftCount + 0x20;\n  }\n  tempVar3 = shiftCount - 0xb;\n  isShiftPositive = SBORROW4(tempVar3,0x20);\n  shiftedData = shiftCount - 0x2b;\n  isParam4EqualToBounds = (int)shiftedData < 0;\n  isShiftBiggerThan32 = shiftedData == 0;\n  if ((int)tempVar3 < 0x20) {\n    isShiftPositive = SCARRY4(shiftedData,0xc);\n    shiftCount = shiftCount + -0x1f;\n    isParam4EqualToBounds = shiftCount < 0;\n    isShiftBiggerThan32 = shiftCount == 0;\n    shiftedData = tempVar3;\n    if (!isShiftBiggerThan32 && isParam4EqualToBounds == isShiftPositive) {\n      tempVar1 = tempVar2 << (tempVar3 & 0xff);\n      tempVar2 = tempVar2 >> (0xcU - shiftCount & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (isShiftBiggerThan32 || isParam4EqualToBounds != isShiftPositive) {\n    constant = 0x20 - shiftedData;\n  }\n  tempVar2 = tempVar2 << (shiftedData & 0xff);\n  if (isShiftBiggerThan32 || isParam4EqualToBounds != isShiftPositive) {\n    tempVar2 = tempVar2 | tempVar1 >> (constant & 0xff);\n  }\n  if (isShiftBiggerThan32 || isParam4EqualToBounds != isShiftPositive) {\n    tempVar1 = tempVar1 << (shiftedData & 0xff);\n  }\nLAB_08008458:\n  if ((int)tempVar3 < 0x381) {\n    return CONCAT44(tempVar2 + (0x380 - tempVar3) * 0x100000 | bit31,tempVar1);\n  }\n  shiftedData = ~(0x380 - tempVar3);\n  if (0x1e < (int)shiftedData) {\n    return CONCAT44(bit31WithShiftedData,tempVar2 >> (shiftedData - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  shiftCount = shiftedData - 0x13;\n  if (shiftCount == 0 || shiftCount < 0 != SCARRY4(shiftedData - 0x1f,0xc)) {\n    shiftedData = shiftedData + 1;\n    return CONCAT44(bit31 | tempVar2 >> (shiftedData & 0xff),\n                    tempVar1 >> (shiftedData & 0xff) | tempVar2 << (0x20 - shiftedData & 0xff));\n  }\n  return CONCAT44(bit31WithShiftedData,tempVar1 >> (0x20 - (0xcU - shiftCount) & 0xff) | tempVar2 << (0xcU - shiftCount & 0xff)) &\n         0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008590": "reverse_bits_08008590",
                "param_1": "input",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "bit31",
                "uVar2": "tempVar1",
                "uVar3": "bit31WithShiftedData",
                "uVar4": "shiftedData",
                "uVar5": "tempVar2",
                "iVar6": "shiftCount",
                "uVar7": "tempVar3",
                "in_r12": "constant",
                "bVar8": "isShiftBiggerThan32",
                "bVar9": "isParam4EqualToBounds",
                "bVar10": "isShiftPositive"
            },
            "calling": [
                "settings_store_global_setting",
                "mc_arc",
                "protocol_execute_line",
                "gc_execute_line",
                "calculate_trapezoid_for_block",
                "max_allowable_speed",
                "homing_cycle",
                "mc_dwell",
                "plan_buffer_line",
                "report_realtime_status",
                "report_gcode_parameters",
                "to_millimeters",
                "read_float",
                "report_gcode_modes"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008640": {
            "entrypoint": "0x08008640",
            "current_name": "calculate_new_value_08008640",
            "code": "\nulonglong calculate_new_value_08008640(undefined4 input_param,uint value_1,uint value_2,uint value_3)\n\n{\n  ulonglong temp1;\n  longlong temp2;\n  uint temp3;\n  uint temp4;\n  int temp5;\n  uint temp6;\n  uint temp7;\n  uint temp8;\n  uint temp9;\n  bool condition1;\n  bool condition2;\n  bool condition3;\n  ulonglong combined_value;\n  \n  combined_value = CONCAT44(value_1,input_param);\n  temp8 = 0x7ff;\n  temp4 = value_1 >> 0x14 & 0x7ff;\n  condition1 = temp4 == 0;\n  if (!condition1) {\n    temp7 = value_3 >> 0x14 & 0x7ff;\n    condition1 = temp7 == 0;\n  }\n  if (!condition1) {\n    condition1 = temp4 == 0x7ff;\n  }\n  if (!condition1) {\n    condition1 = temp7 == 0x7ff;\n  }\n  if (condition1) {\n    combined_value = calculate_bitwise_0800881c();\n  }\n  temp3 = (uint)(combined_value >> 0x20);\n  temp5 = temp4 + temp7;\n  temp4 = temp3 ^ value_3;\n  temp3 = temp3 & ~(temp8 << 0x15);\n  value_3 = value_3 & ~(temp8 << 0x15);\n  condition1 = ((uint)combined_value | temp3 << 0xc) == 0;\n  if (!condition1) {\n    condition1 = (value_2 | value_3 << 0xc) == 0;\n  }\n  temp3 = temp3 | 0x100000;\n  value_3 = value_3 | 0x100000;\n  if (condition1) {\n    value_2 = (uint)combined_value | value_2;\n    value_3 = (temp4 & 0x80000000 | temp3) ^ value_3;\n    temp4 = temp8 >> 1;\n    condition3 = SBORROW4(temp5,temp4);\n    temp6 = temp5 - temp4;\n    condition1 = temp6 == 0;\n    temp3 = temp6;\n    if (!condition1 && (int)temp4 <= temp5) {\n      condition3 = SBORROW4(temp8,temp6);\n      temp3 = temp8 - temp6;\n      condition1 = temp8 == temp6;\n    }\n    if (!condition1 && (int)temp3 < 0 == condition3) {\n      value_3 = value_3 | temp6 * 0x100000;\n    }\n    if (!condition1 && (int)temp3 < 0 == condition3) {\n      return CONCAT44(value_3,value_2);\n    }\n    value_3 = value_3 | 0x100000;\n    temp8 = 0;\n    condition3 = SBORROW4(temp6,1);\n    temp6 = temp6 - 1;\n    condition1 = temp6 == 0;\n    temp4 = temp6;\n  }\n  else {\n    temp1 = (combined_value & 0xffffffff) * (ulonglong)value_2;\n    combined_value = (combined_value & 0xffffffff) * (ulonglong)value_3 +\n             (ulonglong)temp3 * (ulonglong)value_2 + (temp1 >> 0x20);\n    temp9 = (uint)combined_value;\n    temp2 = (ulonglong)temp3 * (ulonglong)value_3 + (combined_value >> 0x20);\n    temp8 = (uint)temp2;\n    temp3 = (uint)((ulonglong)temp2 >> 0x20);\n    if ((int)temp1 != 0) {\n      temp9 = temp9 | 1;\n    }\n    temp6 = (temp5 + -0x3ff) - (uint)(temp3 < 0x200);\n    if (temp3 < 0x200) {\n      condition1 = (temp9 & 0x80000000) != 0;\n      temp9 = temp9 << 1;\n      temp2 = CONCAT44(temp3 * 2 + (uint)(CARRY4(temp8,temp8) || CARRY4(temp8 * 2,(uint)condition1)),\n                       temp8 * 2 + (uint)condition1);\n    }\n    value_3 = temp4 & 0x80000000 | (int)((ulonglong)temp2 >> 0x20) << 0xb | (uint)temp2 >> 0x15;\n    value_2 = (uint)temp2 << 0xb | temp9 >> 0x15;\n    temp8 = temp9 * 0x800;\n    condition2 = 0xfc < temp6;\n    condition3 = SBORROW4(temp6,0xfd);\n    temp3 = temp6 - 0xfd;\n    condition1 = temp3 == 0;\n    temp4 = temp3;\n    if (condition2 && !condition1) {\n      condition2 = 0x6ff < temp3;\n      condition3 = SBORROW4(temp3,0x700);\n      temp4 = temp6 - 0x7fd;\n      condition1 = temp3 == 0x700;\n    }\n    if (!condition2 || condition1) {\n      condition1 = 0x7fffffff < temp8;\n      if (temp8 == 0x80000000) {\n        condition1 = (temp9 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(value_3 + temp6 * 0x100000 + (uint)CARRY4(value_2,(uint)condition1),value_2 + condition1\n                     );\n    }\n  }\n  if (!condition1 && (int)temp4 < 0 == condition3) {\n    return (ulonglong)(value_3 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  condition2 = SCARRY4(temp6,0x36);\n  condition1 = (int)(temp6 + 0x36) < 0;\n  condition3 = temp6 == 0xffffffca;\n  if (condition3 || condition1 != condition2) {\n    value_2 = 0;\n  }\n  if (condition3 || condition1 != condition2) {\n    value_3 = value_3 & 0x80000000;\n  }\n  if (condition3 || condition1 != condition2) {\n    return CONCAT44(value_3,value_2);\n  }\n  temp4 = -temp6;\n  temp3 = temp4 - 0x20;\n  if (0x1f < (int)temp4) {\n    temp6 = value_2 >> (temp3 & 0xff) | value_3 << (0x20 - temp3 & 0xff);\n    temp4 = (value_3 >> (temp3 & 0xff) & ~((value_3 & 0x80000000) >> (temp3 & 0xff))) -\n            ((int)temp6 >> 0x1f);\n    if ((temp8 | value_2 << (0x20 - temp3 & 0xff) | temp6 << 1) == 0) {\n      temp4 = temp4 & ~(temp6 >> 0x1f);\n    }\n    return CONCAT44(value_3,temp4) & 0x80000000ffffffff;\n  }\n  temp5 = temp4 - 0x14;\n  if (temp5 == 0 || temp5 < 0 != SCARRY4(temp3,0xc)) {\n    temp9 = value_2 << (temp6 + 0x20 & 0xff);\n    temp3 = value_2 >> (temp4 & 0xff) | value_3 << (temp6 + 0x20 & 0xff);\n    temp6 = temp3 + -((int)temp9 >> 0x1f);\n    if ((temp8 | temp9 << 1) == 0) {\n      temp6 = temp6 & ~(temp9 >> 0x1f);\n    }\n    return CONCAT44((value_3 & 0x80000000) +\n                    ((value_3 & 0x7fffffff) >> (temp4 & 0xff)) +\n                    (uint)CARRY4(temp3,-((int)temp9 >> 0x1f)),temp6);\n  }\n  temp4 = 0xc - temp5;\n  temp6 = value_2 << (temp4 & 0xff);\n  temp4 = value_2 >> (0x20 - temp4 & 0xff) | value_3 << (temp4 & 0xff);\n  temp3 = temp4 + -((int)temp6 >> 0x1f);\n  if ((temp8 | temp6 << 1) == 0) {\n    temp3 = temp3 & ~(temp6 >> 0x1f);\n  }\n  return CONCAT44((value_3 & 0x80000000) + (uint)CARRY4(temp4,-((int)temp6 >> 0x1f)),temp3);\n}\n\n",
            "renaming": {
                "FUN_08008640": "calculate_new_value_08008640",
                "param_1": "input_param",
                "param_2": "value_1",
                "param_3": "value_2",
                "param_4": "value_3",
                "uVar1": "temp1",
                "lVar2": "temp2",
                "uVar3": "temp3",
                "uVar4": "temp4",
                "iVar5": "temp5",
                "uVar6": "temp6",
                "unaff_r5": "temp7",
                "uVar7": "temp8",
                "uVar8": "temp9",
                "bVar9": "condition1",
                "bVar10": "condition2",
                "bVar11": "condition3",
                "uVar12": "combined_value"
            },
            "calling": [
                "mc_arc",
                "__ieee754_rem_pio2",
                "__ieee754_sqrt",
                "calculate_trapezoid_for_block",
                "atan",
                "homing_cycle",
                "__kernel_rem_pio2",
                "scalbn",
                "plan_buffer_line",
                "report_realtime_status",
                "__kernel_sin",
                "report_gcode_parameters",
                "__kernel_cos",
                "to_millimeters",
                "__ieee754_hypot",
                "read_float",
                "report_gcode_modes"
            ],
            "called": [
                "FUN_0800881c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800881c": {
            "entrypoint": "0x0800881c",
            "current_name": "calculate_bitwise_0800881c",
            "code": "\nulonglong calculate_bitwise_0800881c(uint input_1,uint input_2,uint input_3,uint input_4)\n\n{\n  uint bit_1;\n  uint bit_2;\n  uint bit_3;\n  uint bit_4;\n  uint mask;\n  bool is_zero;\n  \n  bit_3 = mask & input_4 >> 0x14;\n  if (bit_2 != mask && bit_3 != mask) {\n    is_zero = (input_1 | input_2 << 1) == 0;\n    if (!is_zero) {\n      is_zero = (input_3 | input_4 << 1) == 0;\n    }\n    if (is_zero) {\n      return (ulonglong)((input_2 ^ input_4) & 0x80000000) << 0x20;\n    }\n    if (bit_2 == 0) {\n      bit_4 = input_2 & 0x80000000;\n      do {\n        bit_1 = input_1 & 0x80000000;\n        input_1 = input_1 << 1;\n        input_2 = input_2 * 2 + (uint)(bit_1 != 0);\n      } while ((input_2 & 0x100000) == 0);\n      input_2 = input_2 | bit_4;\n      if (bit_3 != 0) {\n        return CONCAT44(input_2,input_1);\n      }\n    }\n    do {\n      bit_3 = input_3 & 0x80000000;\n      input_3 = input_3 << 1;\n      input_4 = input_4 * 2 + (uint)(bit_3 != 0);\n    } while ((input_4 & 0x100000) == 0);\n    return CONCAT44(input_2,input_1);\n  }\n  is_zero = (input_1 | input_2 << 1) == 0;\n  if (is_zero) {\n    input_2 = input_4;\n    input_1 = input_3;\n  }\n  if (!is_zero) {\n    is_zero = (input_3 | input_4 << 1) == 0;\n  }\n  bit_4 = input_2;\n  if (((!is_zero) && ((bit_2 != mask || ((input_1 | input_2 << 0xc) == 0)))) &&\n     ((bit_3 != mask || (input_1 = input_3, bit_4 = input_4, (input_3 | input_4 << 0xc) == 0)))) {\n    return (ulonglong)((input_2 ^ input_4) & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  return CONCAT44(bit_4,input_1) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_0800881c": "calculate_bitwise_0800881c",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "bit_1",
                "unaff_r4": "bit_2",
                "uVar2": "bit_3",
                "uVar3": "bit_4",
                "in_r12": "mask",
                "bVar4": "is_zero"
            },
            "calling": [
                "__muldf3"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008894": {
            "entrypoint": "0x08008894",
            "current_name": "decode_and_convert_08008894",
            "code": "\nulonglong decode_and_convert_08008894(undefined4 input_param_1,uint input_param_2,uint input_param_3,uint input_param_4)\n\n{\n  uint temp_var_1;\n  uint temp_var_2;\n  uint temp_var_3;\n  uint temp_var_4;\n  uint temp_var_5;\n  uint temp_var_6;\n  uint temp_var_7;\n  int temp_var_8;\n  uint temp_var_9;\n  uint temp_var_10;\n  uint temp_var_11;\n  uint temp_var_12;\n  uint temp_var_13;\n  uint temp_var_14;\n  bool temp_var_15;\n  bool temp_var_16;\n  bool temp_var_17;\n  undefined8 temp_var_18;\n  \n  temp_var_18 = CONCAT44(input_param_2,input_param_1);\n  temp_var_14 = 0x7ff;\n  temp_var_7 = input_param_2 >> 0x14 & 0x7ff;\n  temp_var_15 = temp_var_7 == 0;\n  if (!temp_var_15) {\n    temp_var_10 = input_param_4 >> 0x14 & 0x7ff;\n    temp_var_15 = temp_var_10 == 0;\n  }\n  if (!temp_var_15) {\n    temp_var_15 = temp_var_7 == 0x7ff;\n  }\n  if (!temp_var_15) {\n    temp_var_15 = temp_var_10 == 0x7ff;\n  }\n  if (temp_var_15) {\n    temp_var_18 = decode_and_convert_08008894_08008a02();\n  }\n  temp_var_9 = (uint)((ulonglong)temp_var_18 >> 0x20);\n  temp_var_12 = (uint)temp_var_18;\n  temp_var_8 = temp_var_7 - temp_var_10;\n  if ((input_param_3 | input_param_4 << 0xc) == 0) {\n    temp_var_7 = (temp_var_9 ^ input_param_4) & 0x80000000 | temp_var_9 & 0xfffff;\n    temp_var_17 = SCARRY4(temp_var_8,temp_var_14 >> 1);\n    temp_var_9 = temp_var_8 + (temp_var_14 >> 1);\n    temp_var_15 = (int)temp_var_9 < 0;\n    temp_var_16 = temp_var_9 == 0;\n    if (!temp_var_16 && temp_var_15 == temp_var_17) {\n      temp_var_17 = SBORROW4(temp_var_14,temp_var_9);\n      temp_var_15 = (int)(temp_var_14 - temp_var_9) < 0;\n      temp_var_16 = temp_var_14 == temp_var_9;\n    }\n    if (!temp_var_16 && temp_var_15 == temp_var_17) {\n      temp_var_7 = temp_var_7 | temp_var_9 * 0x100000;\n    }\n    if (!temp_var_16 && temp_var_15 == temp_var_17) {\n      return CONCAT44(temp_var_7,temp_var_12);\n    }\n    temp_var_7 = temp_var_7 | 0x100000;\n    temp_var_14 = 0;\n    temp_var_16 = SBORROW4(temp_var_9,1);\n    temp_var_9 = temp_var_9 - 1;\n    temp_var_15 = temp_var_9 == 0;\n    temp_var_3 = temp_var_9;\n  }\n  else {\n    temp_var_3 = (input_param_4 << 0xc) >> 4 | 0x10000000 | input_param_3 >> 0x18;\n    temp_var_14 = input_param_3 << 8;\n    temp_var_11 = (temp_var_9 << 0xc) >> 4 | 0x10000000 | temp_var_12 >> 0x18;\n    temp_var_12 = temp_var_12 * 0x100;\n    temp_var_7 = (temp_var_9 ^ input_param_4) & 0x80000000;\n    temp_var_15 = temp_var_3 <= temp_var_11;\n    if (temp_var_11 == temp_var_3) {\n      temp_var_15 = temp_var_14 <= temp_var_12;\n    }\n    temp_var_8 = temp_var_8 + (uint)temp_var_15;\n    temp_var_9 = temp_var_8 + 0x3fd;\n    if (temp_var_15 == false) {\n      temp_var_3 = temp_var_3 >> 1;\n      temp_var_14 = (uint)((input_param_3 >> 0x18 & 1) != 0) << 0x1f | temp_var_14 >> 1;\n    }\n    temp_var_13 = temp_var_12 - temp_var_14;\n    temp_var_11 = (temp_var_11 - temp_var_3) - (uint)(temp_var_12 < temp_var_14);\n    temp_var_4 = temp_var_3 >> 1;\n    temp_var_1 = (uint)((temp_var_3 & 1) != 0) << 0x1f | temp_var_14 >> 1;\n    temp_var_12 = 0x100000;\n    temp_var_3 = 0x80000;\n    while( true ) {\n      temp_var_15 = temp_var_1 <= temp_var_13;\n      if (temp_var_4 < temp_var_11 || temp_var_11 - temp_var_4 < (uint)temp_var_15) {\n        temp_var_13 = temp_var_13 - temp_var_1;\n        temp_var_12 = temp_var_12 | temp_var_3;\n        temp_var_11 = (temp_var_11 - temp_var_4) - (uint)!temp_var_15;\n      }\n      temp_var_5 = temp_var_4 >> 1;\n      temp_var_1 = (uint)((temp_var_4 & 1) != 0) << 0x1f | temp_var_1 >> 1;\n      temp_var_16 = temp_var_1 <= temp_var_13;\n      temp_var_15 = temp_var_11 - temp_var_5 < (uint)temp_var_16;\n      temp_var_14 = temp_var_11;\n      if (temp_var_5 < temp_var_11 || temp_var_15) {\n        temp_var_13 = temp_var_13 - temp_var_1;\n        temp_var_14 = (temp_var_11 - temp_var_5) - (uint)!temp_var_16;\n      }\n      if (temp_var_5 < temp_var_11 || temp_var_15) {\n        temp_var_12 = temp_var_12 | temp_var_3 >> 1;\n      }\n      temp_var_11 = temp_var_4 >> 2;\n      temp_var_2 = (uint)((temp_var_5 & 1) != 0) << 0x1f | temp_var_1 >> 1;\n      temp_var_16 = temp_var_2 <= temp_var_13;\n      temp_var_15 = temp_var_14 - temp_var_11 < (uint)temp_var_16;\n      temp_var_5 = temp_var_14;\n      if (temp_var_11 < temp_var_14 || temp_var_15) {\n        temp_var_13 = temp_var_13 - temp_var_2;\n        temp_var_5 = (temp_var_14 - temp_var_11) - (uint)!temp_var_16;\n      }\n      if (temp_var_11 < temp_var_14 || temp_var_15) {\n        temp_var_12 = temp_var_12 | temp_var_3 >> 2;\n      }\n      temp_var_6 = temp_var_4 >> 3;\n      temp_var_1 = (uint)((temp_var_11 & 1) != 0) << 0x1f | temp_var_2 >> 1;\n      temp_var_16 = temp_var_1 <= temp_var_13;\n      temp_var_15 = temp_var_5 - temp_var_6 < (uint)temp_var_16;\n      temp_var_11 = temp_var_5;\n      if (temp_var_6 < temp_var_5 || temp_var_15) {\n        temp_var_13 = temp_var_13 - temp_var_1;\n        temp_var_11 = (temp_var_5 - temp_var_6) - (uint)!temp_var_16;\n      }\n      if (temp_var_6 < temp_var_5 || temp_var_15) {\n        temp_var_12 = temp_var_12 | temp_var_3 >> 3;\n      }\n      temp_var_14 = temp_var_11 | temp_var_13;\n      if (temp_var_14 == 0) break;\n      temp_var_11 = temp_var_11 << 4 | temp_var_13 >> 0x1c;\n      temp_var_13 = temp_var_13 << 4;\n      temp_var_4 = temp_var_4 & 0xfffffff8 | temp_var_1 >> 0x1d;\n      temp_var_1 = (temp_var_2 >> 1) << 3;\n      temp_var_3 = temp_var_3 >> 4;\n      if (temp_var_3 == 0) {\n        temp_var_6 = temp_var_4;\n        if ((temp_var_7 & 0x100000) != 0) goto LAB_080089b2;\n        temp_var_7 = temp_var_7 | temp_var_12;\n        temp_var_12 = 0;\n        temp_var_3 = 0x80000000;\n      }\n    }\n    if ((temp_var_7 & 0x100000) == 0) {\n      temp_var_7 = temp_var_7 | temp_var_12;\n      temp_var_12 = 0;\n    }\nLAB_080089b2:\n    temp_var_17 = 0xfc < temp_var_9;\n    temp_var_16 = SBORROW4(temp_var_9,0xfd);\n    temp_var_4 = temp_var_8 + 0x300;\n    temp_var_15 = temp_var_4 == 0;\n    temp_var_3 = temp_var_4;\n    if (temp_var_17 && !temp_var_15) {\n      temp_var_17 = 0x6ff < temp_var_4;\n      temp_var_16 = SBORROW4(temp_var_4,0x700);\n      temp_var_3 = temp_var_8 - 0x400;\n      temp_var_15 = temp_var_4 == 0x700;\n    }\n    if (!temp_var_17 || temp_var_15) {\n      temp_var_15 = temp_var_6 <= temp_var_11;\n      if (temp_var_11 == temp_var_6) {\n        temp_var_15 = temp_var_1 <= temp_var_13;\n      }\n      if (temp_var_11 == temp_var_6 && temp_var_13 == temp_var_1) {\n        temp_var_15 = (temp_var_12 & 1) != 0;\n      }\n      return CONCAT44(temp_var_7 + temp_var_9 * 0x100000 + (uint)CARRY4(temp_var_12,(uint)temp_var_15),temp_var_12 + temp_var_15);\n    }\n  }\n  if (!temp_var_15 && (int)temp_var_3 < 0 == temp_var_16) {\n    return (ulonglong)(temp_var_7 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  temp_var_17 = SCARRY4(temp_var_9,0x36);\n  temp_var_15 = (int)(temp_var_9 + 0x36) < 0;\n  temp_var_16 = temp_var_9 == 0xffffffca;\n  if (temp_var_16 || temp_var_15 != temp_var_17) {\n    temp_var_12 = 0;\n  }\n  if (temp_var_16 || temp_var_15 != temp_var_17) {\n    temp_var_7 = temp_var_7 & 0x80000000;\n  }\n  if (temp_var_16 || temp_var_15 != temp_var_17) {\n    return CONCAT44(temp_var_7,temp_var_12);\n  }\n  temp_var_3 = -temp_var_9;\n  temp_var_11 = temp_var_3 - 0x20;\n  if (0x1f < (int)temp_var_3) {\n    temp_var_3 = temp_var_12 >> (temp_var_11 & 0xff) | temp_var_7 << (0x20 - temp_var_11 & 0xff);\n    temp_var_9 = (temp_var_7 >> (temp_var_11 & 0xff) & ~((temp_var_7 & 0x80000000) >> (temp_var_11 & 0xff))) -\n            ((int)temp_var_3 >> 0x1f);\n    if ((temp_var_14 | temp_var_12 << (0x20 - temp_var_11 & 0xff) | temp_var_3 << 1) == 0) {\n      temp_var_9 = temp_var_9 & ~(temp_var_3 >> 0x1f);\n    }\n    return CONCAT44(temp_var_7,temp_var_9) & 0x80000000ffffffff;\n  }\n  temp_var_8 = temp_var_3 - 0x14;\n  if (temp_var_8 != 0 && temp_var_8 < 0 == SCARRY4(temp_var_11,0xc)) {\n    temp_var_9 = 0xc - temp_var_8;\n    temp_var_3 = temp_var_12 << (temp_var_9 & 0xff);\n    temp_var_12 = temp_var_12 >> (0x20 - temp_var_9 & 0xff) | temp_var_7 << (temp_var_9 & 0xff);\n    temp_var_9 = temp_var_12 + -((int)temp_var_3 >> 0x1f);\n    if ((temp_var_14 | temp_var_3 << 1) == 0) {\n      temp_var_9 = temp_var_9 & ~(temp_var_3 >> 0x1f);\n    }\n    return CONCAT44((temp_var_7 & 0x80000000) + (uint)CARRY4(temp_var_12,-((int)temp_var_3 >> 0x1f)),temp_var_9);\n  }\n  temp_var_11 = temp_var_12 << (temp_var_9 + 0x20 & 0xff);\n  temp_var_12 = temp_var_12 >> (temp_var_3 & 0xff) | temp_var_7 << (temp_var_9 + 0x20 & 0xff);\n  temp_var_9 = temp_var_12 + -((int)temp_var_11 >> 0x1f);\n  if ((temp_var_14 | temp_var_11 << 1) == 0) {\n    temp_var_9 = temp_var_9 & ~(temp_var_11 >> 0x1f);\n  }\n  return CONCAT44((temp_var_7 & 0x80000000) +\n                  ((temp_var_7 & 0x7fffffff) >> (temp_var_3 & 0xff)) +\n                  (uint)CARRY4(temp_var_12,-((int)temp_var_11 >> 0x1f)),temp_var_9);\n}\n\n",
            "renaming": {
                "FUN_08008894": "decode_and_convert_08008894",
                "param_1": "input_param_1",
                "param_2": "input_param_2",
                "param_3": "input_param_3",
                "param_4": "input_param_4",
                "uVar1": "temp_var_1",
                "uVar2": "temp_var_2",
                "uVar3": "temp_var_3",
                "uVar4": "temp_var_4",
                "uVar5": "temp_var_5",
                "uVar6": "temp_var_6",
                "uVar7": "temp_var_7",
                "iVar8": "temp_var_8",
                "uVar9": "temp_var_9",
                "unaff_r5": "temp_var_10",
                "uVar10": "temp_var_11",
                "uVar11": "temp_var_12",
                "uVar12": "temp_var_13",
                "uVar13": "temp_var_14",
                "bVar14": "temp_var_15",
                "bVar15": "temp_var_16",
                "bVar16": "temp_var_17",
                "uVar17": "temp_var_18"
            },
            "calling": [
                "sqrt",
                "__ieee754_sqrt",
                "gc_execute_line",
                "atan",
                "__ieee754_atan2",
                "homing_cycle",
                "plan_buffer_line"
            ],
            "called": [
                "FUN_08008a02"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008a02": {
            "entrypoint": "0x08008a02",
            "current_name": "decode_and_convert_08008a02",
            "code": "\nulonglong decode_and_convert_08008a02(uint input1,uint input2,uint input3,uint input4)\n\n{\n  uint bit1;\n  uint bit2;\n  uint bit2;\n  uint temp1;\n  uint mask2;\n  bool is_zero;\n  \n  bit2 = mask2 & input4 >> 0x14;\n  temp1 = input2;\n  if (bit2 != mask2 || bit2 != mask2) {\n    if (bit2 == mask2) {\n      if (((input1 | input2 << 0xc) == 0) && (input1 = input3, temp1 = input4, bit2 != mask2)\n         ) {\nLAB_08008874:\n        return (ulonglong)((input2 ^ input4) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n    }\n    else if (bit2 == mask2) {\n      input1 = input3;\n      temp1 = input4;\n      if ((input3 | input4 << 0xc) == 0) {\nLAB_08008838:\n        return (ulonglong)((input2 ^ input4) & 0x80000000) << 0x20;\n      }\n    }\n    else {\n      is_zero = (input1 | input2 << 1) == 0;\n      if (!is_zero) {\n        is_zero = (input3 | input4 << 1) == 0;\n      }\n      if (!is_zero) {\n        if (bit2 == 0) {\n          temp1 = input2 & 0x80000000;\n          do {\n            bit1 = input1 & 0x80000000;\n            input1 = input1 << 1;\n            input2 = input2 * 2 + (uint)(bit1 != 0);\n          } while ((input2 & 0x100000) == 0);\n          input2 = input2 | temp1;\n          if (bit2 != 0) {\n            return CONCAT44(input2,input1);\n          }\n        }\n        do {\n          temp1 = input3 & 0x80000000;\n          input3 = input3 << 1;\n          input4 = input4 * 2 + (uint)(temp1 != 0);\n        } while ((input4 & 0x100000) == 0);\n        return CONCAT44(input2,input1);\n      }\n      if ((input1 | input2 << 1) != 0) goto LAB_08008874;\n      if ((input3 | input4 << 1) != 0) goto LAB_08008838;\n    }\n  }\n  return CONCAT44(temp1,input1) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_08008a02": "decode_and_convert_08008a02",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "bit1",
                "unaff_r4": "bit2",
                "uVar2": "bit2",
                "uVar3": "temp1",
                "in_r12": "mask2",
                "bVar4": "is_zero"
            },
            "calling": [
                "__divdf3"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008a74": {
            "entrypoint": "0x08008a74",
            "current_name": "check_parameters_08008a74",
            "code": "\nuint check_parameters_08008a74(uint input1,uint input2,uint input3,uint input4)\n\n{\n  uint result1;\n  bool condition1;\n  bool condition2;\n  \n  if (((int)(input2 << 1) >> 0x15 == -1 || (int)(input4 << 1) >> 0x15 == -1) &&\n     ((((int)(input2 << 1) >> 0x15 == -1 && ((input1 | input2 << 0xc) != 0)) ||\n      (((int)(input4 << 1) >> 0x15 == -1 && ((input3 | input4 << 0xc) != 0)))))) {\n    return 1;\n  }\n  condition1 = (input1 | input2 << 1) == 0;\n  if (condition1) {\n    condition1 = (input3 | input4 << 1) == 0;\n  }\n  if (!condition1) {\n    condition1 = input2 == input4;\n  }\n  if (condition1) {\n    condition1 = input1 == input3;\n  }\n  if (!condition1) {\n    result1 = input2 ^ input4;\n    condition1 = result1 == 0;\n    if (-1 < (int)result1) {\n      condition1 = input2 == input4;\n    }\n    condition2 = -1 < (int)result1 && input4 <= input2;\n    if (condition1) {\n      condition2 = input3 <= input1;\n    }\n    input4 = (int)input4 >> 0x1f;\n    if (!condition2) {\n      input4 = ~input4;\n    }\n    return input4 | 1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008a74": "check_parameters_08008a74",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result1",
                "bVar2": "condition1",
                "bVar3": "condition2"
            },
            "calling": [
                "__aeabi_cdcmpeq"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008af0": {
            "entrypoint": "0x08008af0",
            "current_name": "compare_floats_08008af0",
            "code": "\nvoid compareFloats_08008af0(undefined4 float1,undefined4 float2,undefined4 float3,undefined4 float4)\n\n{\n  __aeabi_cdcmpeq(float3,float4,float1,float2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008af0": "compare_floats_08008af0",
                "param_1": "float1",
                "param_2": "float2",
                "param_3": "float3",
                "param_4": "float4"
            },
            "calling": [
                "__aeabi_dcmpgt",
                "__aeabi_dcmpge"
            ],
            "called": [
                "__aeabi_cdcmpeq"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b00": {
            "entrypoint": "0x08008b00",
            "current_name": "convert_undefined_to_float_08008b00",
            "code": "\nundefined4 convertUndefinedToFloat_08008b00(undefined4 inputFloat)\n\n{\n  undefinedToFloatConversion();\n  return inputFloat;\n}\n\n",
            "renaming": {
                "FUN_08008b00": "convert_undefined_to_float_08008b00",
                "param_1": "inputFloat",
                "__nedf2": "undefinedToFloatConversion"
            },
            "calling": [
                "__aeabi_cdrcmple",
                "__aeabi_dcmpeq",
                "__aeabi_dcmplt"
            ],
            "called": [
                "__nedf2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b10": {
            "entrypoint": "0x08008b10",
            "current_name": "is_not_zero_08008b10",
            "code": "\nbool is_not_zero_08008b10(void)\n\n{\n  char input_character;\n  \n  __aeabi_cdcmpeq();\n  return input_character != '\\0';\n}\n\n",
            "renaming": {
                "FUN_08008b10": "is_not_zero_08008b10",
                "in_ZR": "input_character"
            },
            "calling": [
                "__ieee754_rem_pio2",
                "__kernel_rem_pio2"
            ],
            "called": [
                "__aeabi_cdcmpeq"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b24": {
            "entrypoint": "0x08008b24",
            "current_name": "is_zero_char_08008b24",
            "code": "\nbool is_zero_char_08008b24(void)\n\n{\n  char input_char;\n  \n  __aeabi_cdcmpeq();\n  return input_char == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08008b24": "is_zero_char_08008b24",
                "in_CY": "input_char"
            },
            "calling": [
                "sqrt",
                "__ieee754_hypot",
                "plan_buffer_line"
            ],
            "called": [
                "__aeabi_cdcmpeq"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b4c": {
            "entrypoint": "0x08008b4c",
            "current_name": "is_comparison_valid_08008b4c",
            "code": "\nbool is_comparison_valid_08008b4c(void)\n\n{\n  undefined is_zero_result;\n  undefined is_carry_flag;\n  \n  __aeabi_cdrcmple();\n  return !(bool)is_carry_flag || (bool)is_zero_result;\n}\n\n",
            "renaming": {
                "FUN_08008b4c": "is_comparison_valid_08008b4c",
                "in_ZR": "is_zero_result",
                "in_CY": "is_carry_flag"
            },
            "calling": [
                "__kernel_rem_pio2"
            ],
            "called": [
                "__aeabi_cdrcmple"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b60": {
            "entrypoint": "0x08008b60",
            "current_name": "is_null_terminated_08008b60",
            "code": "\nbool is_null_terminated_08008b60(void)\n\n{\n  char input_char;\n  \n  __aeabi_cdrcmple();\n  return input_char == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08008b60": "is_null_terminated_08008b60",
                "in_CY": "input_char"
            },
            "calling": [
                "ceil",
                "atan",
                "floor",
                "plan_buffer_line"
            ],
            "called": [
                "__aeabi_cdrcmple"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b74": {
            "entrypoint": "0x08008b74",
            "current_name": "validate_inputs_08008b74",
            "code": "\nundefined4 validate_inputs_08008b74(uint input1,int input2,uint input3,int input4)\n\n{\n  if ((((input2 << 1) >> 0x15 != -1) || ((input1 | input2 << 0xc) == 0)) &&\n     (((input4 << 1) >> 0x15 != -1 || ((input3 | input4 << 0xc) == 0)))) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08008b74": "validate_inputs_08008b74",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4"
            },
            "calling": [
                "sqrt"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008ba0": {
            "entrypoint": "0x08008ba0",
            "current_name": "calculate_output_08008ba0",
            "code": "\nuint calculateOutput_08008ba0(uint input1,uint input2)\n\n{\n  uint output;\n  int tempVar;\n  uint negativeBits;\n  \n  tempVar = input2 * 2 + 0x200000;\n  if (input2 * 2 < 0xffe00000) {\n    if (-1 < tempVar) {\n      return 0;\n    }\n    output = tempVar >> 0x15;\n    negativeBits = -output - 0x3e1;\n    if (output < 0xfffffc20 && negativeBits != 0) {\n      output = (input2 << 0xb | 0x80000000 | input1 >> 0x15) >> (negativeBits & 0xff);\n      if ((input2 & 0x80000000) != 0) {\n        output = -output;\n      }\n      return output;\n    }\n  }\n  else if ((input1 | input2 << 0xc) != 0) {\n    return 0;\n  }\n  input2 = input2 & 0x80000000;\n  if (input2 == 0) {\n    input2 = 0x7fffffff;\n  }\n  return input2;\n}\n\n",
            "renaming": {
                "FUN_08008ba0": "calculate_output_08008ba0",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "output",
                "iVar2": "tempVar",
                "uVar3": "negativeBits"
            },
            "calling": [
                "__ieee754_rem_pio2",
                "gc_execute_line",
                "__kernel_cos",
                "calculate_trapezoid_for_block",
                "__kernel_rem_pio2",
                "lround",
                "plan_buffer_line",
                "__kernel_sin"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008bf0": {
            "entrypoint": "0x08008bf0",
            "current_name": "validate_param_08008bf0",
            "code": "\nuint validate_param_08008bf0(uint input1,uint input2)\n\n{\n  int modified_input2;\n  uint shift_amount;\n  \n  if ((input2 & 0x80000000) != 0) {\n    return 0;\n  }\n  modified_input2 = input2 * 2 + 0x200000;\n  if (input2 * 2 < 0xffe00000) {\n    if (-1 < modified_input2) {\n      return 0;\n    }\n    shift_amount = -(modified_input2 >> 0x15) - 0x3e1;\n    if (-1 < (int)shift_amount) {\n      return (input2 << 0xb | 0x80000000 | input1 >> 0x15) >> (shift_amount & 0xff);\n    }\n  }\n  else if ((input1 | input2 << 0xc) != 0) {\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008bf0": "validate_param_08008bf0",
                "param_1": "input1",
                "param_2": "input2",
                "iVar1": "modified_input2",
                "uVar2": "shift_amount"
            },
            "calling": [
                "settings_store_global_setting",
                "mc_arc",
                "protocol_execute_line",
                "gc_execute_line",
                "calculate_trapezoid_for_block",
                "homing_cycle",
                "mc_dwell",
                "plan_buffer_line"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008c30": {
            "entrypoint": "0x08008c30",
            "current_name": "calculate_normalized_float_08008c30",
            "code": "\nuint calculateNormalizedFloat_08008c30(uint mantissa,uint exponent)\n\n{\n  uint result;\n  uint shiftedExponent;\n  uint shiftedCeiling;\n  uint shiftedFloor;\n  bool isSpecialCase;\n  bool isLessThanThreshold;\n  \n  shiftedExponent = exponent * 2;\n  isLessThanThreshold = shiftedExponent < 0x70000000;\n  shiftedCeiling = shiftedExponent + 0x90000000;\n  result = shiftedCeiling;\n  if (!isLessThanThreshold) {\n    shiftedFloor = shiftedExponent + 0x8fe00000;\n    result = shiftedFloor;\n  }\n  isSpecialCase = result == 0;\n  if (!isLessThanThreshold && shiftedCeiling >= 0x200000) {\n    isSpecialCase = shiftedFloor == 0x1fc00000;\n  }\n  if (((isLessThanThreshold || shiftedCeiling < 0x200000) || 0x1fc00000 < shiftedFloor) || isSpecialCase) {\n    if ((exponent & 0x40000000) != 0) {\n      if (((int)shiftedExponent >> 0x15 == -1) && ((mantissa | exponent << 0xc) != 0)) {\n        return 0x7fc00000;\n      }\n      return exponent & 0x80000000 | 0x7f800000;\n    }\n    if ((int)(shiftedExponent + 0x92e00000) < 0 != SCARRY4(shiftedCeiling,0x2e00000)) {\n      return exponent & 0x80000000;\n    }\n    shiftedExponent = 0x18 - (shiftedExponent + 0x92e00000 >> 0x15);\n    result = mantissa >> (shiftedExponent & 0xff);\n    if (mantissa << (0x20 - shiftedExponent & 0xff) != 0) {\n      result = result | 1;\n    }\n    shiftedCeiling = exponent & 0x1fffff | 0x100000;\n    mantissa = result | shiftedCeiling << (0x20 - shiftedExponent & 0xff);\n    shiftedCeiling = (shiftedCeiling >> (shiftedExponent & 0xff)) << 1;\n  }\n  result = (exponent & 0x80000000 | mantissa >> 0x1d) + shiftedCeiling * 4 + (uint)(0x7fffffff < mantissa * 8);\n  if (mantissa * 8 == 0x80000000) {\n    result = result & 0xfffffffe;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08008c30": "calculate_normalized_float_08008c30",
                "param_1": "mantissa",
                "param_2": "exponent",
                "uVar1": "result",
                "uVar2": "shiftedExponent",
                "uVar3": "shiftedCeiling",
                "in_r12": "shiftedFloor",
                "bVar4": "isSpecialCase",
                "bVar5": "isLessThanThreshold"
            },
            "calling": [
                "mc_arc",
                "report_gcode_parameters",
                "gc_execute_line",
                "to_millimeters",
                "read_float",
                "max_allowable_speed",
                "homing_cycle",
                "plan_buffer_line",
                "report_realtime_status",
                "report_gcode_modes"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008cd8": {
            "entrypoint": "0x08008cd8",
            "current_name": "calculate_float_08008cd8",
            "code": "\nuint calculate_float_08008cd8(uint input_value,uint input_sign,undefined4 param_3,uint input_exponent)\n\n{\n  int sign_bit_1;\n  int sign_bit_2;\n  uint mantissa_1;\n  uint mantissa_2;\n  uint result_mantissa;\n  uint shift_value;\n  uint difference;\n  bool is_equal;\n  \n  mantissa_1 = input_sign ^ 0x80000000;\n  result_mantissa = input_value << 1;\n  is_equal = result_mantissa == 0;\n  if (!is_equal) {\n    input_exponent = input_sign << 1;\n    is_equal = input_exponent == 0;\n  }\n  if (!is_equal) {\n    is_equal = result_mantissa == input_exponent;\n  }\n  sign_bit_1 = (int)result_mantissa >> 0x18;\n  if (!is_equal) {\n    is_equal = sign_bit_1 == -1;\n  }\n  if (!is_equal) {\n    is_equal = (int)input_exponent >> 0x18 == -1;\n  }\n  if (is_equal) {\n    sign_bit_2 = (int)(input_sign << 1) >> 0x18;\n    if (sign_bit_1 == -1 || sign_bit_2 == -1) {\n      result_mantissa = mantissa_1;\n      if (sign_bit_1 == -1) {\n        result_mantissa = input_value;\n      }\n      if (sign_bit_1 != -1 || sign_bit_2 != -1) {\n        mantissa_1 = result_mantissa;\n      }\n      is_equal = (result_mantissa & 0x7fffff) == 0;\n      if (is_equal) {\n        is_equal = (mantissa_1 & 0x7fffff) == 0;\n      }\n      if (is_equal) {\n        is_equal = result_mantissa == mantissa_1;\n      }\n      if (!is_equal) {\n        result_mantissa = result_mantissa | 0x400000;\n      }\n      return result_mantissa;\n    }\n    if (((input_value ^ mantissa_1) & 0x7fffffff) != 0) {\n      if (result_mantissa == 0) {\n        input_value = mantissa_1;\n      }\n      return input_value;\n    }\n    if (input_value != mantissa_1) {\n      return 0;\n    }\n    if ((result_mantissa & 0xff000000) == 0) {\n      mantissa_1 = input_value << 1;\n      if ((input_value & 0x80000000) != 0) {\n        mantissa_1 = mantissa_1 | 0x80000000;\n      }\n      return mantissa_1;\n    }\n    if (result_mantissa < 0xfe000000) {\n      return input_value + 0x800000;\n    }\n    input_value = input_value & 0x80000000;\nLAB_08008e12:\n    return input_value | 0x7f800000;\n  }\n  result_mantissa = result_mantissa >> 0x18;\n  input_exponent = input_exponent >> 0x18;\n  difference = input_exponent - result_mantissa;\n  is_equal = difference != 0;\n  shift_value = result_mantissa;\n  if (is_equal && result_mantissa <= input_exponent) {\n    shift_value = result_mantissa + difference;\n  }\n  if (is_equal && result_mantissa <= input_exponent) {\n    mantissa_1 = mantissa_1 ^ input_value;\n  }\n  if (is_equal && result_mantissa <= input_exponent) {\n    input_value = input_value ^ mantissa_1;\n  }\n  if (is_equal && result_mantissa <= input_exponent) {\n    mantissa_1 = mantissa_1 ^ input_value;\n  }\n  if (input_exponent < result_mantissa) {\n    difference = -difference;\n  }\n  if (0x19 < difference) {\n    return input_value;\n  }\n  result_mantissa = input_value & 0xffffff | 0x800000;\n  if ((input_value & 0x80000000) != 0) {\n    result_mantissa = -result_mantissa;\n  }\n  mantissa_2 = mantissa_1 & 0xffffff | 0x800000;\n  if ((mantissa_1 & 0x80000000) != 0) {\n    mantissa_2 = -mantissa_2;\n  }\n  if (shift_value == difference) {\n    mantissa_2 = mantissa_2 ^ 0x800000;\n    if (shift_value == 0) {\n      result_mantissa = result_mantissa ^ 0x800000;\n      shift_value = 1;\n    }\n    else {\n      difference = difference - 1;\n    }\n  }\n  result_mantissa = result_mantissa + ((int)mantissa_2 >> (difference & 0xff));\n  mantissa_2 = mantissa_2 << (0x20 - difference & 0xff);\n  input_value = result_mantissa & 0x80000000;\n  if ((int)result_mantissa < 0) {\n    is_equal = mantissa_2 != 0;\n    mantissa_2 = -mantissa_2;\n    result_mantissa = -result_mantissa - (uint)is_equal;\n  }\n  if (result_mantissa < 0x800000) {\n    mantissa_1 = mantissa_2 & 0x80000000;\n    mantissa_2 = mantissa_2 << 1;\n    result_mantissa = result_mantissa * 2 + (uint)(mantissa_1 != 0);\n    mantissa_1 = shift_value - 2;\n    if (shift_value - 1 == 0 || result_mantissa < 0x800000) {\n      difference = LZCOUNT(result_mantissa) - 8;\n      result_mantissa = result_mantissa << (difference & 0xff);\n      if ((int)mantissa_1 < (int)difference) {\n        result_mantissa = result_mantissa >> (-(mantissa_1 - difference) & 0xff);\n      }\n      else {\n        result_mantissa = result_mantissa + (mantissa_1 - difference) * 0x800000;\n      }\n      return result_mantissa | input_value;\n    }\n  }\n  else {\n    mantissa_1 = shift_value - 1;\n    if (0xffffff < result_mantissa) {\n      mantissa_1 = result_mantissa & 1;\n      result_mantissa = result_mantissa >> 1;\n      mantissa_2 = (uint)(mantissa_1 != 0) << 0x1f | mantissa_2 >> 1;\n      mantissa_1 = shift_value;\n      if (0xfd < shift_value) goto LAB_08008e12;\n    }\n  }\n  result_mantissa = result_mantissa + mantissa_1 * 0x800000 + (uint)(0x7fffffff < mantissa_2);\n  if (mantissa_2 == 0x80000000) {\n    result_mantissa = result_mantissa & 0xfffffffe;\n  }\n  return result_mantissa | input_value;\n}\n\n",
            "renaming": {
                "FUN_08008cd8": "calculate_float_08008cd8",
                "param_1": "input_value",
                "param_2": "input_sign",
                "param_4": "input_exponent",
                "iVar1": "sign_bit_1",
                "iVar2": "sign_bit_2",
                "uVar3": "mantissa_1",
                "uVar4": "mantissa_2",
                "uVar5": "result_mantissa",
                "uVar6": "shift_value",
                "uVar7": "difference",
                "bVar8": "is_equal"
            },
            "calling": [
                "mc_arc",
                "estimate_acceleration_distance",
                "gc_execute_line",
                "max_allowable_speed",
                "mc_dwell",
                "intersection_distance",
                "plan_buffer_line",
                "report_realtime_status"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008cdc": {
            "entrypoint": "0x08008cdc",
            "current_name": "floating_point_addition_08008cdc",
            "code": "\nuint floatingPointAddition_08008cdc(uint operand1,uint operand2,undefined4 modifier,uint result)\n\n{\n  int leftShiftedOperand1;\n  int leftShiftedOperand2;\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint difference;\n  bool isZero;\n  \n  temp2 = operand1 << 1;\n  isZero = temp2 == 0;\n  if (!isZero) {\n    result = operand2 << 1;\n    isZero = result == 0;\n  }\n  if (!isZero) {\n    isZero = temp2 == result;\n  }\n  leftShiftedOperand1 = (int)temp2 >> 0x18;\n  if (!isZero) {\n    isZero = leftShiftedOperand1 == -1;\n  }\n  if (!isZero) {\n    isZero = (int)result >> 0x18 == -1;\n  }\n  if (isZero) {\n    leftShiftedOperand2 = (int)(operand2 << 1) >> 0x18;\n    if (leftShiftedOperand1 == -1 || leftShiftedOperand2 == -1) {\n      temp2 = operand2;\n      if (leftShiftedOperand1 == -1) {\n        temp2 = operand1;\n      }\n      if (leftShiftedOperand1 != -1 || leftShiftedOperand2 != -1) {\n        operand2 = temp2;\n      }\n      isZero = (temp2 & 0x7fffff) == 0;\n      if (isZero) {\n        isZero = (operand2 & 0x7fffff) == 0;\n      }\n      if (isZero) {\n        isZero = temp2 == operand2;\n      }\n      if (!isZero) {\n        temp2 = temp2 | 0x400000;\n      }\n      return temp2;\n    }\n    if (((operand1 ^ operand2) & 0x7fffffff) != 0) {\n      if (temp2 == 0) {\n        operand1 = operand2;\n      }\n      return operand1;\n    }\n    if (operand1 != operand2) {\n      return 0;\n    }\n    if ((temp2 & 0xff000000) == 0) {\n      temp2 = operand1 << 1;\n      if ((operand1 & 0x80000000) != 0) {\n        temp2 = temp2 | 0x80000000;\n      }\n      return temp2;\n    }\n    if (temp2 < 0xfe000000) {\n      return operand1 + 0x800000;\n    }\n    operand1 = operand1 & 0x80000000;\nLAB_08008e12:\n    return operand1 | 0x7f800000;\n  }\n  temp2 = temp2 >> 0x18;\n  result = result >> 0x18;\n  difference = result - temp2;\n  isZero = difference != 0;\n  temp3 = temp2;\n  if (isZero && temp2 <= result) {\n    temp3 = temp2 + difference;\n  }\n  if (isZero && temp2 <= result) {\n    operand2 = operand2 ^ operand1;\n  }\n  if (isZero && temp2 <= result) {\n    operand1 = operand1 ^ operand2;\n  }\n  if (isZero && temp2 <= result) {\n    operand2 = operand2 ^ operand1;\n  }\n  if (result < temp2) {\n    difference = -difference;\n  }\n  if (0x19 < difference) {\n    return operand1;\n  }\n  temp2 = operand1 & 0xffffff | 0x800000;\n  if ((operand1 & 0x80000000) != 0) {\n    temp2 = -temp2;\n  }\n  temp1 = operand2 & 0xffffff | 0x800000;\n  if ((operand2 & 0x80000000) != 0) {\n    temp1 = -temp1;\n  }\n  if (temp3 == difference) {\n    temp1 = temp1 ^ 0x800000;\n    if (temp3 == 0) {\n      temp2 = temp2 ^ 0x800000;\n      temp3 = 1;\n    }\n    else {\n      difference = difference - 1;\n    }\n  }\n  temp2 = temp2 + ((int)temp1 >> (difference & 0xff));\n  temp1 = temp1 << (0x20 - difference & 0xff);\n  operand1 = temp2 & 0x80000000;\n  if ((int)temp2 < 0) {\n    isZero = temp1 != 0;\n    temp1 = -temp1;\n    temp2 = -temp2 - (uint)isZero;\n  }\n  if (temp2 < 0x800000) {\n    difference = temp1 & 0x80000000;\n    temp1 = temp1 << 1;\n    temp2 = temp2 * 2 + (uint)(difference != 0);\n    difference = temp3 - 2;\n    if (temp3 - 1 == 0 || temp2 < 0x800000) {\n      temp3 = LZCOUNT(temp2) - 8;\n      temp2 = temp2 << (temp3 & 0xff);\n      if ((int)difference < (int)temp3) {\n        temp2 = temp2 >> (-(difference - temp3) & 0xff);\n      }\n      else {\n        temp2 = temp2 + (difference - temp3) * 0x800000;\n      }\n      return temp2 | operand1;\n    }\n  }\n  else {\n    difference = temp3 - 1;\n    if (0xffffff < temp2) {\n      difference = temp2 & 1;\n      temp2 = temp2 >> 1;\n      temp1 = (uint)(difference != 0) << 0x1f | temp1 >> 1;\n      difference = temp3;\n      if (0xfd < temp3) goto LAB_08008e12;\n    }\n  }\n  temp2 = temp2 + difference * 0x800000 + (uint)(0x7fffffff < temp1);\n  if (temp1 == 0x80000000) {\n    temp2 = temp2 & 0xfffffffe;\n  }\n  return temp2 | operand1;\n}\n\n",
            "renaming": {
                "FUN_08008cdc": "floating_point_addition_08008cdc",
                "param_1": "operand1",
                "param_2": "operand2",
                "param_3": "modifier",
                "param_4": "result",
                "iVar1": "leftShiftedOperand1",
                "iVar2": "leftShiftedOperand2",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "uVar5": "temp3",
                "uVar6": "difference",
                "bVar7": "isZero"
            },
            "calling": [
                "mc_arc",
                "estimate_acceleration_distance",
                "gc_execute_line",
                "max_allowable_speed",
                "intersection_distance",
                "printFloat",
                "plan_buffer_line",
                "report_realtime_status"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008e3c": {
            "entrypoint": "0x08008e3c",
            "current_name": "calculate_result_08008e3c",
            "code": "\nuint calculateResult_08008e3c(uint inputValue)\n\n{\n  uint leadingZeroes;\n  uint shiftCount;\n  int intermediateValue;\n  uint temporaryResult;\n  \n  if (inputValue == 0) {\n    return 0;\n  }\n  leadingZeroes = countLeadingZeroes(inputValue);\n  shiftCount = leadingZeroes - 8;\n  intermediateValue = shiftCount * -0x800000 + 0x4a800000;\n  if (7 < leadingZeroes) {\n    temporaryResult = 0 << (shiftCount & 0xff);\n    leadingZeroes = intermediateValue + (inputValue << (shiftCount & 0xff)) +\n            (0U >> (0x20 - shiftCount & 0xff)) + (uint)(0x7fffffff < temporaryResult);\n    if (temporaryResult == 0x80000000) {\n      leadingZeroes = leadingZeroes & 0xfffffffe;\n    }\n    return leadingZeroes;\n  }\n  shiftCount = inputValue << leadingZeroes + 0x18;\n  leadingZeroes = intermediateValue + ((inputValue >> (0x20 - (leadingZeroes + 0x18) & 0xff)) - ((int)shiftCount >> 0x1f));\n  if ((shiftCount & 0x7fffffff) == 0) {\n    leadingZeroes = leadingZeroes & ~(shiftCount >> 0x1f);\n  }\n  return leadingZeroes;\n}\n\n",
            "renaming": {
                "FUN_08008e3c": "calculate_result_08008e3c",
                "param_1": "inputValue",
                "uVar1": "leadingZeroes",
                "uVar2": "shiftCount",
                "iVar3": "intermediateValue",
                "uVar4": "temporaryResult",
                "LZCOUNT": "countLeadingZeroes"
            },
            "calling": [
                "calculate_trapezoid_for_block",
                "read_float"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008e44": {
            "entrypoint": "0x08008e44",
            "current_name": "extract_bits_and_combine_08008e44",
            "code": "\nuint extract_bits_and_combine_08008e44(uint number)\n\n{\n  uint num_leading_zeros;\n  uint shift_amount;\n  uint sign_bit;\n  int combined_value;\n  \n  sign_bit = number & 0x80000000;\n  if ((int)sign_bit < 0) {\n    number = -number;\n  }\n  if (number == 0) {\n    return 0;\n  }\n  num_leading_zeros = LZCOUNT(number);\n  shift_amount = num_leading_zeros - 8;\n  combined_value = ((sign_bit | 0x4b000000) - 0x800000) + shift_amount * -0x800000;\n  if (7 < num_leading_zeros) {\n    num_leading_zeros = 0 << (shift_amount & 0xff);\n    sign_bit = combined_value + (number << (shift_amount & 0xff)) +\n            (0U >> (0x20 - shift_amount & 0xff)) + (uint)(0x7fffffff < num_leading_zeros);\n    if (num_leading_zeros == 0x80000000) {\n      sign_bit = sign_bit & 0xfffffffe;\n    }\n    return sign_bit;\n  }\n  shift_amount = number << num_leading_zeros + 0x18;\n  sign_bit = combined_value + ((number >> (0x20 - (num_leading_zeros + 0x18) & 0xff)) - ((int)shift_amount >> 0x1f));\n  if ((shift_amount & 0x7fffffff) == 0) {\n    sign_bit = sign_bit & ~(shift_amount >> 0x1f);\n  }\n  return sign_bit;\n}\n\n",
            "renaming": {
                "FUN_08008e44": "extract_bits_and_combine_08008e44",
                "param_1": "number",
                "uVar1": "num_leading_zeros",
                "uVar2": "shift_amount",
                "uVar3": "sign_bit",
                "iVar4": "combined_value"
            },
            "calling": [
                "mc_arc",
                "plan_cycle_reinitialize",
                "calculate_trapezoid_for_block",
                "gc_set_current_position",
                "mc_dwell",
                "mc_go_home",
                "plan_buffer_line",
                "report_realtime_status"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008eec": {
            "entrypoint": "0x08008eec",
            "current_name": "calculate_floating_point_08008eec",
            "code": "\nuint calculateFloatingPoint_08008eec(uint input1,uint input2,undefined4 input3,uint input4)\n\n{\n  longlong result;\n  uint floatingPointBits;\n  uint input1Bit;\n  int sumBits;\n  int sum;\n  uint multipliedBits;\n  int difference;\n  uint finalBits;\n  bool isZero;\n  bool isNegative;\n  \n  input1Bit = input1 >> 0x17 & 0xff;\n  isZero = input1Bit == 0;\n  if (!isZero) {\n    input4 = input2 >> 0x17 & 0xff;\n    isZero = input4 == 0;\n  }\n  if (!isZero) {\n    isZero = input1Bit == 0xff;\n  }\n  if (!isZero) {\n    isZero = input4 == 0xff;\n  }\n  if (isZero) {\n    input4 = input2 >> 0x17 & 0xff;\n    if (input1Bit == 0xff || input4 == 0xff) {\n      isZero = input1 == 0 || input1 == 0x80000000;\n      floatingPointBits = input2;\n      if (input1 != 0 && input1 != 0x80000000) {\n        isZero = input2 == 0;\n        floatingPointBits = input1;\n      }\n      if (!isZero) {\n        isZero = input2 == 0x80000000;\n      }\n      finalBits = floatingPointBits;\n      if (((isZero) || ((input1Bit == 0xff && ((floatingPointBits & 0x7fffff) != 0)))) ||\n         ((input4 == 0xff && (finalBits = input2, (input2 & 0x7fffff) != 0)))) {\n        return finalBits | 0x7fc00000;\n      }\n      floatingPointBits = floatingPointBits ^ input2;\n      goto LAB_0800903c;\n    }\n    isZero = (input1 & 0x7fffffff) == 0;\n    if (!isZero) {\n      isZero = (input2 & 0x7fffffff) == 0;\n    }\n    if (isZero) {\n      return (input1 ^ input2) & 0x80000000;\n    }\n    isZero = input1Bit == 0;\n    floatingPointBits = input1 & 0x80000000;\n    while( true ) {\n      if (isZero) {\n        input1 = input1 << 1;\n        isZero = (input1 & 0x800000) == 0;\n      }\n      if (!isZero) break;\n      input1Bit = input1Bit - 1;\n    }\n    input1 = input1 | floatingPointBits;\n    isZero = input4 == 0;\n    floatingPointBits = input2 & 0x80000000;\n    while( true ) {\n      if (isZero) {\n        input2 = input2 << 1;\n        isZero = (input2 & 0x800000) == 0;\n      }\n      if (!isZero) break;\n      input4 = input4 - 1;\n    }\n    input2 = input2 | floatingPointBits;\n  }\n  sumBits = input1Bit + input4;\n  finalBits = input1 ^ input2;\n  input1Bit = input1 << 9;\n  isZero = input1Bit == 0;\n  if (!isZero) {\n    input2 = input2 << 9;\n    isZero = input2 == 0;\n  }\n  if (isZero) {\n    if (input1Bit == 0) {\n      input2 = input2 << 9;\n    }\n    floatingPointBits = finalBits & 0x80000000 | input1 & 0x7fffff | input2 >> 9;\n    isNegative = SBORROW4(sumBits,0x7f);\n    sum = sumBits + -0x7f;\n    isZero = sum == 0;\n    difference = sum;\n    if (!isZero && 0x7e < sumBits) {\n      isNegative = SBORROW4(0xff,sum);\n      difference = 0xff - sum;\n      isZero = sum == 0xff;\n    }\n    if (!isZero && difference < 0 == isNegative) {\n      floatingPointBits = floatingPointBits | sum * 0x800000;\n    }\n    if (!isZero && difference < 0 == isNegative) {\n      return floatingPointBits;\n    }\n    floatingPointBits = floatingPointBits | 0x800000;\n    multipliedBits = 0;\n    isNegative = SBORROW4(sum,1);\n    finalBits = sumBits - 0x80;\n    isZero = finalBits == 0;\n    input1Bit = finalBits;\n  }\n  else {\n    result = (ulonglong)(input1Bit >> 5 | 0x8000000) * (ulonglong)(input2 >> 5 | 0x8000000);\n    multipliedBits = (uint)result;\n    floatingPointBits = (uint)((ulonglong)result >> 0x20);\n    isZero = floatingPointBits < 0x800000;\n    if (isZero) {\n      floatingPointBits = floatingPointBits << 1;\n    }\n    if (isZero) {\n      floatingPointBits = floatingPointBits | multipliedBits >> 0x1f;\n      multipliedBits = multipliedBits << 1;\n    }\n    floatingPointBits = finalBits & 0x80000000 | floatingPointBits;\n    finalBits = (sumBits + -0x7f) - (uint)isZero;\n    isNegative = SBORROW4(finalBits,0xfd);\n    isZero = finalBits == 0xfd;\n    input1Bit = finalBits - 0xfd;\n    if (finalBits < 0xfe) {\n      floatingPointBits = floatingPointBits + finalBits * 0x800000 + (uint)(0x7fffffff < multipliedBits);\n      if (multipliedBits == 0x80000000) {\n        floatingPointBits = floatingPointBits & 0xfffffffe;\n      }\n      return floatingPointBits;\n    }\n  }\n  if (isZero || (int)input1Bit < 0 != isNegative) {\n    isZero = (int)(finalBits + 0x19) < 0;\n    if (finalBits == 0xffffffe7 || isZero != SCARRY4(finalBits,0x19)) {\n      floatingPointBits = floatingPointBits & 0x80000000;\n    }\n    if (finalBits != 0xffffffe7 && isZero == SCARRY4(finalBits,0x19)) {\n      input1Bit = (floatingPointBits << 1) >> (-finalBits & 0xff);\n      finalBits = floatingPointBits << (finalBits + 0x20 & 0xff);\n      input1Bit = ((uint)((floatingPointBits & 0x80000000) != 0) << 0x1f | input1Bit >> 1) + (uint)((byte)input1Bit & 1);\n      if ((multipliedBits | finalBits << 1) == 0) {\n        input1Bit = input1Bit & ~(finalBits >> 0x1f);\n      }\n      return input1Bit;\n    }\n    return floatingPointBits;\n  }\nLAB_0800903c:\n  return floatingPointBits & 0x80000000 | 0x7f800000;\n}\n\n",
            "renaming": {
                "FUN_08008eec": "calculate_floating_point_08008eec",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "lVar1": "result",
                "uVar2": "floatingPointBits",
                "uVar3": "input1Bit",
                "iVar4": "sumBits",
                "iVar5": "sum",
                "uVar6": "multipliedBits",
                "iVar7": "difference",
                "uVar8": "finalBits",
                "bVar9": "isZero",
                "bVar10": "isNegative"
            },
            "calling": [
                "settings_store_global_setting",
                "mc_arc",
                "estimate_acceleration_distance",
                "gc_execute_line",
                "plan_cycle_reinitialize",
                "calculate_trapezoid_for_block",
                "max_allowable_speed",
                "homing_cycle",
                "mc_dwell",
                "intersection_distance",
                "mc_go_home",
                "plan_buffer_line",
                "read_float",
                "printFloat"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009054": {
            "entrypoint": "0x08009054",
            "current_name": "calculate_floating_point_08009054",
            "code": "\nuint calculateFloatingPoint_08009054(uint inputA,uint inputB,undefined4 inputC,uint inputD)\n\n{\n  uint quotient1;\n  uint quotient2;\n  int difference;\n  uint sum;\n  int tempDifference;\n  uint result;\n  bool flag1;\n  bool flag2;\n  bool flag3;\n  \n  quotient2 = inputA >> 0x17 & 0xff;\n  flag1 = quotient2 == 0;\n  if (!flag1) {\n    inputD = inputB >> 0x17 & 0xff;\n    flag1 = inputD == 0;\n  }\n  if (!flag1) {\n    flag1 = quotient2 == 0xff;\n  }\n  if (!flag1) {\n    flag1 = inputD == 0xff;\n  }\n  if (flag1) {\n    inputD = inputB >> 0x17 & 0xff;\n    result = inputA;\n    if (quotient2 == 0xff) {\n      if (((inputA & 0x7fffff) != 0) || (result = inputB, inputD == 0xff)) {\nLAB_0800904a:\n        return result | 0x7fc00000;\n      }\n    }\n    else {\n      if (inputD == 0xff) {\n        result = inputB;\n        if ((inputB & 0x7fffff) == 0) {\nLAB_08009000:\n          return (inputA ^ inputB) & 0x80000000;\n        }\n        goto LAB_0800904a;\n      }\n      flag1 = (inputA & 0x7fffffff) == 0;\n      if (!flag1) {\n        flag1 = (inputB & 0x7fffffff) == 0;\n      }\n      if (!flag1) {\n        flag1 = quotient2 == 0;\n        result = inputA & 0x80000000;\n        while( true ) {\n          if (flag1) {\n            inputA = inputA << 1;\n            flag1 = (inputA & 0x800000) == 0;\n          }\n          if (!flag1) break;\n          quotient2 = quotient2 - 1;\n        }\n        inputA = inputA | result;\n        flag1 = inputD == 0;\n        result = inputB & 0x80000000;\n        while( true ) {\n          if (flag1) {\n            inputB = inputB << 1;\n            flag1 = (inputB & 0x800000) == 0;\n          }\n          if (!flag1) break;\n          inputD = inputD - 1;\n        }\n        inputB = inputB | result;\n        goto LAB_0800906c;\n      }\n      if ((inputA & 0x7fffffff) == 0) {\n        if ((inputB & 0x7fffffff) != 0) goto LAB_08009000;\n        goto LAB_0800904a;\n      }\n    }\n    inputA = inputA ^ inputB;\n  }\n  else {\nLAB_0800906c:\n    difference = quotient2 - inputD;\n    if (inputB << 9 == 0) {\n      inputA = (inputA ^ inputB) & 0x80000000 | inputA & 0x7fffff;\n      flag3 = SCARRY4(difference,0x7f);\n      tempDifference = difference + 0x7f;\n      flag1 = tempDifference < 0;\n      flag2 = tempDifference == 0;\n      if (!flag2 && flag1 == flag3) {\n        flag3 = SBORROW4(0xff,tempDifference);\n        flag1 = 0xff - tempDifference < 0;\n        flag2 = tempDifference == 0xff;\n      }\n      if (!flag2 && flag1 == flag3) {\n        inputA = inputA | tempDifference * 0x800000;\n      }\n      if (!flag2 && flag1 == flag3) {\n        return inputA;\n      }\n      inputA = inputA | 0x800000;\n      quotient2 = 0;\n      flag2 = SBORROW4(tempDifference,1);\n      sum = difference + 0x7e;\n      flag1 = sum == 0;\n      result = sum;\n    }\n    else {\n      quotient1 = (inputB << 9) >> 4 | 0x10000000;\n      quotient2 = (inputA << 9) >> 4 | 0x10000000;\n      inputA = (inputA ^ inputB) & 0x80000000;\n      flag1 = quotient1 <= quotient2;\n      if (!flag1) {\n        quotient2 = quotient2 << 1;\n      }\n      sum = difference + 0x7d + (uint)flag1;\n      result = 0x800000;\n      do {\n        if (quotient1 <= quotient2) {\n          quotient2 = quotient2 - quotient1;\n          inputA = inputA | result;\n        }\n        flag1 = quotient1 >> 1 <= quotient2;\n        if (flag1) {\n          quotient2 = quotient2 - (quotient1 >> 1);\n        }\n        if (flag1) {\n          inputA = inputA | result >> 1;\n        }\n        flag1 = quotient1 >> 2 <= quotient2;\n        if (flag1) {\n          quotient2 = quotient2 - (quotient1 >> 2);\n        }\n        if (flag1) {\n          inputA = inputA | result >> 2;\n        }\n        flag1 = quotient1 >> 3 <= quotient2;\n        if (flag1) {\n          quotient2 = quotient2 - (quotient1 >> 3);\n        }\n        if (flag1) {\n          inputA = inputA | result >> 3;\n        }\n        quotient2 = quotient2 * 0x10;\n        flag1 = quotient2 == 0;\n        if (!flag1) {\n          result = result >> 4;\n          flag1 = result == 0;\n        }\n      } while (!flag1);\n      flag2 = SBORROW4(sum,0xfd);\n      flag1 = sum == 0xfd;\n      result = sum - 0xfd;\n      if (sum < 0xfe) {\n        inputA = inputA + sum * 0x800000 + (uint)(quotient1 <= quotient2);\n        if (quotient2 - quotient1 == 0) {\n          inputA = inputA & 0xfffffffe;\n        }\n        return inputA;\n      }\n    }\n    if (flag1 || (int)result < 0 != flag2) {\n      flag1 = (int)(sum + 0x19) < 0;\n      if (sum == 0xffffffe7 || flag1 != SCARRY4(sum,0x19)) {\n        inputA = inputA & 0x80000000;\n      }\n      if (sum == 0xffffffe7 || flag1 != SCARRY4(sum,0x19)) {\n        return inputA;\n      }\n      result = (inputA << 1) >> (-sum & 0xff);\n      sum = inputA << (sum + 0x20 & 0xff);\n      result = ((uint)((inputA & 0x80000000) != 0) << 0x1f | result >> 1) + (uint)((byte)result & 1);\n      if ((quotient2 | sum << 1) == 0) {\n        result = result & ~(sum >> 0x1f);\n      }\n      return result;\n    }\n  }\n  return inputA & 0x80000000 | 0x7f800000;\n}\n\n",
            "renaming": {
                "FUN_08009054": "calculate_floating_point_08009054",
                "param_1": "inputA",
                "param_2": "inputB",
                "param_3": "inputC",
                "param_4": "inputD",
                "uVar1": "quotient1",
                "uVar2": "quotient2",
                "iVar3": "difference",
                "uVar4": "sum",
                "iVar5": "tempDifference",
                "uVar6": "result",
                "bVar7": "flag1",
                "bVar8": "flag2",
                "bVar9": "flag3"
            },
            "calling": [
                "planner_recalculate_trapezoids",
                "mc_arc",
                "estimate_acceleration_distance",
                "plan_cycle_reinitialize",
                "report_grbl_settings",
                "homing_cycle",
                "gc_set_current_position",
                "intersection_distance",
                "plan_buffer_line",
                "report_realtime_status"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800919c": {
            "entrypoint": "0x0800919c",
            "current_name": "multiply_and_compare_0800919c",
            "code": "\nuint multiply_and_compare_0800919c(uint input_num_1,uint input_num_2)\n\n{\n  bool is_negative;\n  uint num_1_doubled;\n  uint num_2_doubled;\n  uint combination;\n  bool is_zero;\n  \n  num_1_doubled = input_num_1 * 2;\n  num_2_doubled = input_num_2 * 2;\n  if (((int)num_1_doubled >> 0x18 == -1 || (int)num_2_doubled >> 0x18 == -1) &&\n     ((((int)num_1_doubled >> 0x18 == -1 && ((input_num_1 & 0x7fffff) != 0)) ||\n      (((int)num_2_doubled >> 0x18 == -1 && ((input_num_2 & 0x7fffff) != 0)))))) {\n    return 1;\n  }\n  combination = num_1_doubled | input_num_2 & 0x7fffffff;\n  is_zero = combination == 0;\n  if (!is_zero) {\n    combination = input_num_1 ^ input_num_2;\n    is_zero = combination == 0;\n  }\n  is_negative = -1 < (int)combination;\n  if (is_negative) {\n    input_num_1 = num_1_doubled + input_num_2 * -2;\n    is_zero = input_num_1 == 0;\n  }\n  if ((is_negative && num_2_doubled <= num_1_doubled) && !is_zero) {\n    input_num_1 = (int)input_num_2 >> 0x1f;\n  }\n  if (!is_negative || num_2_doubled > num_1_doubled) {\n    input_num_1 = ~((int)input_num_2 >> 0x1f);\n  }\n  if (!is_zero) {\n    input_num_1 = input_num_1 | 1;\n  }\n  return input_num_1;\n}\n\n",
            "renaming": {
                "FUN_0800919c": "multiply_and_compare_0800919c",
                "param_1": "input_num_1",
                "param_2": "input_num_2",
                "uVar2": "num_1_doubled",
                "uVar3": "num_2_doubled",
                "uVar4": "combination",
                "bVar1": "is_negative",
                "bVar5": "is_zero"
            },
            "calling": [
                "__aeabi_cfcmpeq"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091fc": {
            "entrypoint": "0x080091fc",
            "current_name": "compare_floats_080091fc",
            "code": "\nvoid compareFloats_080091fc(undefined4 value1,undefined4 value2)\n\n{\n  __aeabi_cfcmpeq(value2,value1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091fc": "compare_floats_080091fc",
                "param_1": "value1",
                "param_2": "value2"
            },
            "calling": [
                "__aeabi_fcmpge",
                "__aeabi_fcmpgt"
            ],
            "called": [
                "__aeabi_cfcmpeq"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009204": {
            "entrypoint": "0x08009204",
            "current_name": "concatenate_params_08009204",
            "code": "\nundefined8 concatenateParams_08009204(undefined4 firstParam,undefined4 secondParam)\n\n{\n  __cmpsf2();\n  return CONCAT44(secondParam,firstParam);\n}\n\n",
            "renaming": {
                "FUN_08009204": "concatenate_params_08009204",
                "param_1": "firstParam",
                "param_2": "secondParam"
            },
            "calling": [
                "__aeabi_fcmplt",
                "__aeabi_cfrcmple",
                "__aeabi_fcmple",
                "__aeabi_fcmpeq"
            ],
            "called": [
                "__cmpsf2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009214": {
            "entrypoint": "0x08009214",
            "current_name": "compare_floats_08009214",
            "code": "\nbool compareFloats_08009214(void)\n\n{\n  char comparisonResult;\n  \n  __aeabi_cfcmpeq();\n  return comparisonResult != '\\0';\n}\n\n",
            "renaming": {
                "FUN_08009214": "compare_floats_08009214",
                "in_ZR": "comparisonResult"
            },
            "calling": [
                "settings_store_global_setting",
                "mc_arc",
                "planner_forward_pass_kernel",
                "gc_execute_line",
                "planner_reverse_pass_kernel",
                "read_float"
            ],
            "called": [
                "__aeabi_cfcmpeq"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009228": {
            "entrypoint": "0x08009228",
            "current_name": "is_carry_set_08009228",
            "code": "\nbool is_carry_set_08009228(void)\n\n{\n  char carry_flag;\n  \n  __aeabi_cfcmpeq();\n  return carry_flag == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08009228": "is_carry_set_08009228",
                "in_CY": "carry_flag"
            },
            "calling": [
                "settings_store_global_setting",
                "planner_forward_pass_kernel",
                "gc_execute_line",
                "planner_reverse_pass_kernel",
                "printFloat",
                "plan_buffer_line"
            ],
            "called": [
                "__aeabi_cfcmpeq"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800923c": {
            "entrypoint": "0x0800923c",
            "current_name": "check_equality_0800923c",
            "code": "\nbool check_equality_0800923c(void)\n\n{\n  undefined is_zero;\n  undefined is_carry;\n  \n  __aeabi_cfcmpeq();\n  return !(bool)is_carry || (bool)is_zero;\n}\n\n",
            "renaming": {
                "FUN_0800923c": "check_equality_0800923c",
                "in_ZR": "is_zero",
                "in_CY": "is_carry"
            },
            "calling": [
                "settings_store_global_setting",
                "mc_arc",
                "gc_execute_line"
            ],
            "called": [
                "__aeabi_cfcmpeq"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009250": {
            "entrypoint": "0x08009250",
            "current_name": "check_cfrcmpl_condition_08009250",
            "code": "\nbool check_CFRCMPL_condition_08009250(void)\n\n{\n  undefined zero_flag;\n  undefined carry_flag;\n  \n  __aeabi_cfrcmple();\n  return !(bool)carry_flag || (bool)zero_flag;\n}\n\n",
            "renaming": {
                "FUN_08009250": "check_cfrcmpl_condition_08009250",
                "in_ZR": "zero_flag",
                "in_CY": "carry_flag"
            },
            "calling": [
                "mc_arc",
                "plan_buffer_line"
            ],
            "called": [
                "__aeabi_cfrcmple"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009264": {
            "entrypoint": "0x08009264",
            "current_name": "is_null_character_08009264",
            "code": "\nbool is_null_character_08009264(void)\n\n{\n  char input_character;\n  \n  __aeabi_cfrcmple();\n  return input_character == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08009264": "is_null_character_08009264",
                "in_CY": "input_character"
            },
            "calling": [
                "planner_reverse_pass_kernel",
                "plan_buffer_line"
            ],
            "called": [
                "__aeabi_cfrcmple"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009278": {
            "entrypoint": "0x08009278",
            "current_name": "convert_to_signed_int_08009278",
            "code": "\nuint convertToSignedInt_08009278(uint input)\n\n{\n  uint shiftedValue;\n  uint difference;\n  \n  if (input << 1 < 0x7f000000) {\n    return 0;\n  }\n  shiftedValue = (input << 1) >> 0x18;\n  difference = 0x9e - shiftedValue;\n  if (shiftedValue < 0x9f && difference != 0) {\n    shiftedValue = (input << 8 | 0x80000000) >> (difference & 0xff);\n    if ((input & 0x80000000) != 0) {\n      shiftedValue = -shiftedValue;\n    }\n    return shiftedValue;\n  }\n  if ((difference == 0xffffff9f) && ((input & 0x7fffff) != 0)) {\n    return 0;\n  }\n  input = input & 0x80000000;\n  if (input == 0) {\n    input = 0x7fffffff;\n  }\n  return input;\n}\n\n",
            "renaming": {
                "FUN_08009278": "convert_to_signed_int_08009278",
                "param_1": "input",
                "uVar1": "shiftedValue",
                "uVar2": "difference"
            },
            "calling": [
                "protocol_execute_line",
                "printFloat"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080092c4": {
            "entrypoint": "0x080092c4",
            "current_name": "initialize_memory_080092c4",
            "code": "\n/* WARNING: This function may have set the stack pointer */\n\nvoid initializeMemory_080092c4(void)\n\n{\n  int offset;\n  undefined4 *pointer;\n  code *jumptable;\n  \n  for (offset = 0; (undefined4 *)(offset + 0x20000000) < &DAT_2000044c; offset = offset + 4) {\n    *(undefined4 *)(offset + 0x20000000) = *(undefined4 *)(offset + 0x800c0c0);\n  }\n  for (pointer = &DAT_2000044c; pointer < &DAT_20000f20; pointer = pointer + 1) {\n    *pointer = 0;\n  }\n  SystemInit();\n  __libc_init_array();\n  jumptable = (code *)0x80092fa;\n  main();\n                    /* WARNING: Could not recover jumptable at 0x080092fa. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumptable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080092c4": "initialize_memory_080092c4",
                "iVar1": "offset",
                "puVar2": "pointer",
                "UNRECOVERED_JUMPTABLE": "jumptable"
            },
            "calling": [],
            "called": [
                "__libc_init_array",
                "main",
                "SystemInit"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009318": {
            "entrypoint": "0x08009318",
            "current_name": "calculate_double_precision_08009318",
            "code": "\nlonglong calculateDoublePrecision_08009318(uint input1,uint input2,undefined4 constant1,undefined4 constant2)\n\n{\n  int comparison;\n  uint exponentDiff;\n  uint mask;\n  bool carry;\n  undefined8 result;\n  longlong output;\n  \n  mask = (input2 << 1) >> 0x15;\n  exponentDiff = mask - 0x3ff;\n  if ((int)exponentDiff < 0x14) {\n    if ((int)exponentDiff < 0) {\n      result = __aeabi_dadd(input1,input2,0x8800759c,0x7e37e43c,constant2);\n      comparison = __aeabi_dcmpgt((int)result,(int)((ulonglong)result >> 0x20),0,0);\n      output = CONCAT44(input2,input1);\n      if (comparison != 0) {\n        if ((int)input2 < 0) {\n          output = -0x8000000000000000;\n        }\n        else if ((input1 | input2) == 0) {\n          output = 0;\n        }\n        else {\n          output = 0x3ff0000000000000;\n        }\n      }\n    }\n    else {\n      mask = 0xfffff >> (exponentDiff & 0xff);\n      output = CONCAT44(input2,input1);\n      if ((input2 & mask | input1) != 0) {\n        result = __aeabi_dadd(input1,input2,0x8800759c,0x7e37e43c,constant2);\n        comparison = __aeabi_dcmpgt((int)result,(int)((ulonglong)result >> 0x20),0,0);\n        output = CONCAT44(input2,input1);\n        if (comparison != 0) {\n          if (0 < (int)input2) {\n            input2 = input2 + (0x100000 >> (exponentDiff & 0xff));\n          }\n          output = (ulonglong)(input2 & ~mask) << 0x20;\n        }\n      }\n    }\n  }\n  else if ((int)exponentDiff < 0x34) {\n    mask = 0xffffffff >> (mask - 0x413 & 0xff);\n    output = CONCAT44(input2,input1);\n    if ((mask & input1) != 0) {\n      result = __aeabi_dadd(input1,input2,0x8800759c,0x7e37e43c,constant2);\n      comparison = __aeabi_dcmpgt((int)result,(int)((ulonglong)result >> 0x20),0,0);\n      output = CONCAT44(input2,input1);\n      if (comparison != 0) {\n        if (0 < (int)input2) {\n          if (exponentDiff == 0x14) {\n            input2 = input2 + 1;\n          }\n          else {\n            exponentDiff = 1 << (0x34 - exponentDiff & 0xff);\n            carry = CARRY4(exponentDiff,input1);\n            input1 = exponentDiff + input1;\n            if (carry != false) {\n              input2 = input2 + 1;\n            }\n          }\n        }\n        output = CONCAT44(input2,input1 & ~mask);\n      }\n    }\n  }\n  else {\n    output = CONCAT44(input2,input1);\n    if (exponentDiff == 0x400) {\n      output = __aeabi_dadd();\n    }\n  }\n  return output;\n}\n\n",
            "renaming": {
                "FUN_08009318": "calculate_double_precision_08009318",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "constant1",
                "param_4": "constant2",
                "uVar2": "exponentDiff",
                "uVar3": "mask",
                "bVar4": "carry",
                "uVar5": "result",
                "lVar6": "output",
                "iVar1": "comparison"
            },
            "calling": [
                "calculate_trapezoid_for_block",
                "homing_cycle",
                "plan_buffer_line"
            ],
            "called": [
                "__aeabi_dcmpgt",
                "__aeabi_dadd"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009410": {
            "entrypoint": "0x08009410",
            "current_name": "trigonometric_transformation_08009410",
            "code": "\nundefined4 trigonometricTransformation_08009410(undefined4 inputAngle,uint inputValue)\n\n{\n  undefined4 result;\n  uint remPio2Result;\n  undefined4 outputAngle;\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  \n  if (0x3fe921fb < (inputValue & 0x7fffffff)) {\n    if ((inputValue & 0x7fffffff) < 0x7ff00000) {\n      remPio2Result = __ieee754_rem_pio2(inputAngle,inputValue,&outputAngle);\n      remPio2Result = remPio2Result & 3;\n      if (remPio2Result == 1) {\n        result = __kernel_sin(outputAngle,temp1,temp2,temp3,1);\n      }\n      else if (remPio2Result == 2) {\n        result = __kernel_cos(outputAngle,temp1,temp2,temp3);\n      }\n      else if (remPio2Result == 0) {\n        result = __kernel_cos(outputAngle,temp1,temp2,temp3);\n      }\n      else {\n        result = __kernel_sin(outputAngle,temp1,temp2,temp3,1);\n      }\n    }\n    else {\n      result = __subdf3(inputAngle,inputValue,inputAngle,inputValue);\n    }\n    return result;\n  }\n  result = __kernel_cos(inputAngle,inputValue,0,0);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009410": "trigonometric_transformation_08009410",
                "param_1": "inputAngle",
                "param_2": "inputValue",
                "uVar1": "result",
                "uVar2": "remPio2Result",
                "local_28": "outputAngle",
                "uStack_24": "temp1",
                "local_20": "temp2",
                "uStack_1c": "temp3"
            },
            "calling": [
                "mc_arc"
            ],
            "called": [
                "__ieee754_rem_pio2",
                "__kernel_cos",
                "__subdf3",
                "__kernel_sin"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080094c0": {
            "entrypoint": "0x080094c0",
            "current_name": "calculate_floating_point_result_080094c0",
            "code": "\nlonglong calculateFloatingPointResult_080094c0(uint input1,uint input2,undefined4 unusedVar1,undefined4 unusedVar2)\n\n{\n  int comparisonResult;\n  uint exponentShift;\n  uint mask;\n  bool carryFlag;\n  undefined8 addResult;\n  longlong result;\n  \n  mask = (input2 << 1) >> 0x15;\n  exponentShift = mask - 0x3ff;\n  if ((int)exponentShift < 0x14) {\n    if ((int)exponentShift < 0) {\n      addResult = __aeabi_dadd(input1,input2,0x8800759c,0x7e37e43c,unusedVar2);\n      comparisonResult = __aeabi_dcmpgt((int)addResult,(int)((ulonglong)addResult >> 0x20),0,0);\n      result = CONCAT44(input2,input1);\n      if (comparisonResult != 0) {\n        if ((int)input2 < 0) {\n          if ((input1 | input2 & 0x7fffffff) != 0) {\n            input2 = 0xbff00000;\n          }\n          result = (ulonglong)input2 << 0x20;\n        }\n        else {\n          result = 0;\n        }\n      }\n    }\n    else {\n      mask = 0xfffff >> (exponentShift & 0xff);\n      result = CONCAT44(input2,input1);\n      if ((input2 & mask | input1) != 0) {\n        addResult = __aeabi_dadd(input1,input2,0x8800759c,0x7e37e43c,unusedVar2);\n        comparisonResult = __aeabi_dcmpgt((int)addResult,(int)((ulonglong)addResult >> 0x20),0,0);\n        result = CONCAT44(input2,input1);\n        if (comparisonResult != 0) {\n          if ((int)input2 < 0) {\n            input2 = input2 + (0x100000 >> (exponentShift & 0xff));\n          }\n          result = (ulonglong)(input2 & ~mask) << 0x20;\n        }\n      }\n    }\n  }\n  else if ((int)exponentShift < 0x34) {\n    mask = 0xffffffff >> (mask - 0x413 & 0xff);\n    result = CONCAT44(input2,input1);\n    if ((mask & input1) != 0) {\n      addResult = __aeabi_dadd(input1,input2,0x8800759c,0x7e37e43c,unusedVar2);\n      comparisonResult = __aeabi_dcmpgt((int)addResult,(int)((ulonglong)addResult >> 0x20),0,0);\n      result = CONCAT44(input2,input1);\n      if (comparisonResult != 0) {\n        if ((int)input2 < 0) {\n          if (exponentShift == 0x14) {\n            input2 = input2 + 1;\n          }\n          else {\n            exponentShift = 1 << (0x34 - exponentShift & 0xff);\n            carryFlag = CARRY4(exponentShift,input1);\n            input1 = exponentShift + input1;\n            if (carryFlag != false) {\n              input2 = input2 + 1;\n            }\n          }\n        }\n        result = CONCAT44(input2,input1 & ~mask);\n      }\n    }\n  }\n  else {\n    result = CONCAT44(input2,input1);\n    if (exponentShift == 0x400) {\n      result = __aeabi_dadd();\n    }\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080094c0": "calculate_floating_point_result_080094c0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "unusedVar1",
                "param_4": "unusedVar2",
                "iVar1": "comparisonResult",
                "uVar2": "exponentShift",
                "uVar3": "mask",
                "bVar4": "carryFlag",
                "uVar5": "addResult",
                "lVar6": "result"
            },
            "calling": [
                "mc_arc",
                "calculate_trapezoid_for_block",
                "__kernel_rem_pio2",
                "mc_dwell"
            ],
            "called": [
                "__aeabi_dcmpgt",
                "__aeabi_dadd"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080095b8": {
            "entrypoint": "0x080095b8",
            "current_name": "calculate_product_080095b8",
            "code": "\nint calculate_product_080095b8(uint input_1,uint input_2)\n\n{\n  uint bit_mask;\n  uint shift_count;\n  uint result;\n  int sign;\n  uint uVar5;\n  \n  shift_count = (input_2 << 1) >> 0x15;\n  uVar5 = shift_count - 0x3ff;\n  if ((int)input_2 < 0) {\n    sign = -1;\n  }\n  else {\n    sign = 1;\n  }\n  result = input_2 & 0xfffff | 0x100000;\n  if ((int)uVar5 < 0x14) {\n    if ((int)uVar5 < 0) {\n      if (uVar5 != 0xffffffff) {\n        sign = 0;\n      }\n      return sign;\n    }\n    result = result + (0x80000 >> (uVar5 & 0xff)) >> (0x14 - uVar5 & 0xff);\n  }\n  else {\n    if (0x1e < uVar5) {\n      sign = __aeabi_d2iz();\n      return sign;\n    }\n    if ((int)uVar5 < 0x34) {\n      bit_mask = 0x80000000 >> (shift_count - 0x413 & 0xff);\n      if (CARRY4(bit_mask,input_1) != false) {\n        result = result + 1;\n      }\n      result = result << (shift_count - 0x413 & 0xff);\n      if (uVar5 != 0x14) {\n        result = result | bit_mask + input_1 >> (0x34 - uVar5 & 0xff);\n      }\n    }\n    else {\n      result = result << (shift_count - 0x413 & 0xff) | input_1 << (shift_count - 0x433 & 0xff);\n    }\n  }\n  return result * sign;\n}\n\n",
            "renaming": {
                "FUN_080095b8": "calculate_product_080095b8",
                "param_1": "input_1",
                "param_2": "input_2",
                "uVar1": "bit_mask",
                "uVar2": "shift_count",
                "uVar3": "result",
                "iVar4": "sign"
            },
            "calling": [
                "homing_cycle",
                "plan_buffer_line"
            ],
            "called": [
                "__aeabi_d2iz"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009654": {
            "entrypoint": "0x08009654",
            "current_name": "convert_to_double_08009654",
            "code": "\nlonglong convertToDouble_08009654(uint inputPart1,uint inputPart2)\n\n{\n  uint firstDiff;\n  uint shiftedPart2;\n  longlong result;\n  \n  result = combineParts(inputPart2,inputPart1);\n  shiftedPart2 = (inputPart2 << 1) >> 0x15;\n  firstDiff = shiftedPart2 - 0x3ff;\n  if ((int)firstDiff < 0x14) {\n    if ((int)firstDiff < 0) {\n      inputPart2 = inputPart2 & 0x80000000;\n      if (firstDiff == 0xffffffff) {\n        inputPart2 = inputPart2 | 0x3ff00000;\n      }\n      result = (ulonglong)inputPart2 << 0x20;\n    }\n    else {\n      shiftedPart2 = 0xfffff >> (firstDiff & 0xff);\n      result = combineParts(inputPart2,inputPart1);\n      if ((inputPart2 & shiftedPart2 | inputPart1) != 0) {\n        result = (ulonglong)(inputPart2 + (0x80000 >> (firstDiff & 0xff)) & ~shiftedPart2) << 0x20;\n      }\n    }\n  }\n  else if ((int)firstDiff < 0x34) {\n    shiftedPart2 = 0xffffffff >> (shiftedPart2 - 0x413 & 0xff);\n    if ((inputPart1 & shiftedPart2) != 0) {\n      firstDiff = 1 << (0x33 - firstDiff & 0xff);\n      if (hasCarry(inputPart1,firstDiff) != false) {\n        inputPart2 = inputPart2 + 1;\n      }\n      result = combineParts(inputPart2,inputPart1 + firstDiff & ~shiftedPart2);\n    }\n  }\n  else {\n    result = combineParts(inputPart2,inputPart1);\n    if (firstDiff == 0x400) {\n      result = performDoubleAddition();\n    }\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009654": "convert_to_double_08009654",
                "param_1": "inputPart1",
                "param_2": "inputPart2",
                "uVar1": "firstDiff",
                "uVar2": "shiftedPart2",
                "lVar3": "result",
                "CARRY4": "hasCarry",
                "CONCAT44": "combineParts",
                "__aeabi_dadd": "performDoubleAddition"
            },
            "calling": [
                "settings_store_global_setting"
            ],
            "called": [
                "__aeabi_dadd"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080096e8": {
            "entrypoint": "0x080096e8",
            "current_name": "sine_and_cosine_080096e8",
            "code": "\nundefined4 sineAndCosine_080096e8(undefined4 inputValue,uint flags)\n\n{\n  undefined4 result;\n  uint remResult;\n  undefined4 remainder;\n  undefined4 tempVar1;\n  undefined4 tempVar2;\n  undefined4 tempVar3;\n  \n  if (0x3fe921fb < (flags & 0x7fffffff)) {\n    if ((flags & 0x7fffffff) < 0x7ff00000) {\n      remResult = __ieee754_rem_pio2(inputValue,flags,&remainder);\n      remResult = remResult & 3;\n      if (remResult == 1) {\n        result = __kernel_cos(remainder,tempVar1,tempVar2,tempVar3);\n      }\n      else if (remResult == 2) {\n        result = __kernel_sin(remainder,tempVar1,tempVar2,tempVar3,1);\n      }\n      else if (remResult == 0) {\n        result = __kernel_sin(remainder,tempVar1,tempVar2,tempVar3,1);\n      }\n      else {\n        result = __kernel_cos(remainder,tempVar1,tempVar2,tempVar3);\n      }\n    }\n    else {\n      result = __subdf3(inputValue,flags,inputValue,flags);\n    }\n    return result;\n  }\n  result = __kernel_sin(inputValue,flags,0,0,0);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080096e8": "sine_and_cosine_080096e8",
                "param_1": "inputValue",
                "param_2": "flags",
                "uVar1": "result",
                "uVar2": "remResult",
                "local_28": "remainder",
                "uStack_24": "tempVar1",
                "local_20": "tempVar2",
                "uStack_1c": "tempVar3"
            },
            "calling": [
                "mc_arc"
            ],
            "called": [
                "__ieee754_rem_pio2",
                "__kernel_cos",
                "__subdf3",
                "__kernel_sin"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009798": {
            "entrypoint": "0x08009798",
            "current_name": "calculate_shifted_value_08009798",
            "code": "\nlonglong calculate_shifted_value_08009798(uint input_1,uint input_2,undefined4 constant_1,undefined4 constant_2)\n\n{\n  uint shifted_value;\n  uint shift_amount;\n  longlong result;\n  \n  shift_amount = (input_2 << 1) >> 0x15;\n  shifted_value = shift_amount - 0x3ff;\n  if ((int)shifted_value < 0x14) {\n    if ((int)shifted_value < 0) {\n      return ((ulonglong)input_2 & 0x80000000) << 0x20;\n    }\n    result = (ulonglong)(input_2 & ~(0xfffff >> (shifted_value & 0xff))) << 0x20;\n  }\n  else {\n    if ((int)shifted_value < 0x34) {\n      return CONCAT44(input_2,input_1 & ~(0xffffffffU >> (shift_amount - 0x413 & 0xff)));\n    }\n    if (shifted_value != 0x400) {\n      return CONCAT44(input_2,input_1);\n    }\n    result = __aeabi_dadd(input_1,input_2,input_1,input_2,constant_2);\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009798": "calculate_shifted_value_08009798",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "constant_1",
                "param_4": "constant_2",
                "uVar1": "shifted_value",
                "uVar2": "shift_amount",
                "lVar3": "result"
            },
            "calling": [
                "settings_store_global_setting",
                "protocol_execute_line",
                "gc_execute_line"
            ],
            "called": [
                "__aeabi_dadd"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009818": {
            "entrypoint": "0x08009818",
            "current_name": "FUN_08009818",
            "code": "\nuint __ieee754_atan2(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  undefined8 uVar6;\n  \n  uVar4 = param_4 & 0x7fffffff;\n  if (((uVar4 | (-param_3 | param_3) >> 0x1f) < 0x7ff00001) &&\n     (uVar5 = param_2 & 0x7fffffff, (uVar5 | (-param_1 | param_1) >> 0x1f) < 0x7ff00001)) {\n    if ((param_4 + 0xc0100000 | param_3) == 0) {\n      uVar4 = atan();\n      return uVar4;\n    }\n    uVar3 = (int)param_4 >> 0x1e & 2U | param_2 >> 0x1f;\n    if ((uVar5 | param_1) == 0) {\n      if (uVar3 == 2) {\n        param_1 = 0x54442d18;\n      }\n      else if (uVar3 == 3) {\n        param_1 = 0x54442d18;\n      }\n    }\n    else {\n      if ((uVar4 | param_3) != 0) {\n        if (uVar4 == 0x7ff00000) {\n          uVar3 = uVar3 - 1;\n          if (uVar5 == 0x7ff00000) {\n            if (uVar3 < 3) {\n              return *(uint *)(&DAT_0800be68 + uVar3 * 8);\n            }\n            return 0x54442d18;\n          }\n          if (uVar3 < 3) {\n            return *(uint *)(&DAT_0800be80 + uVar3 * 8);\n          }\n          return 0;\n        }\n        if (uVar5 != 0x7ff00000) {\n          iVar1 = (int)(uVar5 - uVar4) >> 0x14;\n          if ((int)(uVar5 - uVar4) < 0x3d00000) {\n            if (((int)param_4 < 0) && (iVar1 + 0x3c < 0 != SCARRY4(iVar1,0x3c))) {\n              uVar6 = 0;\n            }\n            else {\n              __divdf3(param_1,param_2,param_3,param_4,param_4);\n              fabs();\n              uVar6 = atan();\n            }\n          }\n          else {\n            uVar6 = 0x3ff921fb54442d18;\n          }\n          uVar2 = (undefined4)((ulonglong)uVar6 >> 0x20);\n          uVar4 = (uint)uVar6;\n          if (uVar3 == 1) {\n            return uVar4;\n          }\n          if (uVar3 == 2) {\n            uVar6 = __subdf3(uVar4,uVar2,0x33145c07,0x3ca1a626);\n            uVar4 = __subdf3(0x54442d18,0x400921fb,(int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n            return uVar4;\n          }\n          if (uVar3 == 0) {\n            return uVar4;\n          }\n          uVar6 = __subdf3(uVar4,uVar2,0x33145c07,0x3ca1a626);\n          uVar4 = __subdf3((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),0x54442d18,0x400921fb);\n          return uVar4;\n        }\n      }\n      if ((int)param_2 < 0) {\n        param_1 = 0x54442d18;\n      }\n      else {\n        param_1 = 0x54442d18;\n      }\n    }\n  }\n  else {\n    param_1 = __aeabi_dadd(param_3,param_4,param_1,param_2);\n  }\n  return param_1;\n}\n\n",
            "renaming": {},
            "calling": [
                "mc_arc"
            ],
            "called": [
                "__ieee754_atan2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800981c": {
            "entrypoint": "0x0800981c",
            "current_name": "calculate_hypotenuse_0800981c",
            "code": "\nundefined8 calculate_hypotenuse_0800981c(undefined4 side1,undefined4 side2,undefined4 side3,undefined4 side4)\n\n{\n  int is_finite;\n  undefined4 *errno_ptr;\n  int *errno_value;\n  undefined8 result;\n  undefined4 matherr_type;\n  char *matherr_name;\n  undefined4 side1_copy;\n  undefined4 side2_copy;\n  undefined4 side3_copy;\n  undefined4 side4_copy;\n  undefined4 invalid_lower_bound;\n  undefined4 invalid_upper_bound;\n  int previous_errno;\n  \n  result = __ieee754_hypot();\n  if (DAT_20000014 == -1) {\n    return result;\n  }\n  previous_errno = finite();\n  if (previous_errno != 0) {\n    return result;\n  }\n  is_finite = finite(side1,side2);\n  if (is_finite == 0) {\n    return result;\n  }\n  is_finite = finite(side3,side4);\n  if (is_finite == 0) {\n    return result;\n  }\n  matherr_type = 3;\n  matherr_name = \"hypot\";\n  side1_copy = side1;\n  side2_copy = side2;\n  side3_copy = side3;\n  side4_copy = side4;\n  if (DAT_20000014 == '\\0') {\n    invalid_lower_bound = 0xe0000000;\n    invalid_upper_bound = 0x47efffff;\nLAB_080098aa:\n    is_finite = matherr(&matherr_type);\n    if (is_finite != 0) goto LAB_08009896;\n  }\n  else {\n    invalid_lower_bound = 0;\n    invalid_upper_bound = 0x7ff00000;\n    if (DAT_20000014 != '\\x02') goto LAB_080098aa;\n  }\n  errno_ptr = (undefined4 *)__errno();\n  *errno_ptr = 0x22;\nLAB_08009896:\n  result = CONCAT44(invalid_upper_bound,invalid_lower_bound);\n  if (previous_errno != 0) {\n    errno_value = (int *)__errno();\n    result = CONCAT44(invalid_upper_bound,invalid_lower_bound);\n    *errno_value = previous_errno;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_0800981c": "calculate_hypotenuse_0800981c",
                "param_1": "side1",
                "param_2": "side2",
                "param_3": "side3",
                "param_4": "side4",
                "iVar1": "is_finite",
                "puVar2": "errno_ptr",
                "piVar3": "errno_value",
                "uVar4": "result",
                "local_50": "matherr_type",
                "pcStack_4c": "matherr_name",
                "local_48": "side1_copy",
                "uStack_44": "side2_copy",
                "local_40": "side3_copy",
                "uStack_3c": "side4_copy",
                "local_38": "invalid_lower_bound",
                "uStack_34": "invalid_upper_bound",
                "local_30": "previous_errno"
            },
            "calling": [
                "mc_arc",
                "gc_execute_line"
            ],
            "called": [
                "matherr",
                "__errno",
                "__ieee754_hypot",
                "finite"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080098d0": {
            "entrypoint": "0x080098d0",
            "current_name": "calculate_square_root_080098d0",
            "code": "\nundefined4 calculateSquareRoot_080098d0(undefined4 input1,undefined4 input2)\n\n{\n  char specialCaseValue;\n  undefined4 squareRoot;\n  int comparisonResult;\n  undefined4 *errnoPtr;\n  int *errnoPtr2;\n  undefined4 returnValue;\n  undefined *constVariable;\n  undefined4 input1Copy;\n  undefined4 input2Copy;\n  undefined4 input1Copy2;\n  undefined4 input2Copy2;\n  undefined8 returnValueTemp;\n  int temporaryVariable;\n  \n  squareRoot = __ieee754_sqrt();\n  specialCaseValue = DAT_20000014;\n  if (((DAT_20000014 == -1) ||\n      (temporaryVariable = __unorddf2(input1,input2,input1,input2), temporaryVariable != 0)) ||\n     (comparisonResult = __aeabi_dcmplt(input1,input2,0,0), comparisonResult == 0)) {\n    return squareRoot;\n  }\n  returnValue = 1;\n  constVariable = &DAT_0800be5c;\n  input1Copy = input1;\n  input2Copy = input2;\n  input1Copy2 = input1;\n  input2Copy2 = input2;\n  if (specialCaseValue == '\\0') {\n    returnValueTemp = 0;\nLAB_0800996c:\n    comparisonResult = matherr(&returnValue);\n    if (comparisonResult != 0) goto joined_r0x0800997a;\n  }\n  else {\n    returnValueTemp = __divdf3(0,0,0,0);\n    if (specialCaseValue != '\\x02') goto LAB_0800996c;\n  }\n  errnoPtr = (undefined4 *)__errno();\n  *errnoPtr = 0x21;\njoined_r0x0800997a:\n  if (temporaryVariable != 0) {\n    errnoPtr2 = (int *)__errno();\n    *errnoPtr2 = temporaryVariable;\n  }\n  return (undefined4)returnValueTemp;\n}\n\n",
            "renaming": {
                "FUN_080098d0": "calculate_square_root_080098d0",
                "param_1": "input1",
                "param_2": "input2",
                "uVar2": "squareRoot",
                "iVar3": "comparisonResult",
                "puVar4": "errnoPtr",
                "piVar5": "errnoPtr2",
                "local_50": "returnValue",
                "local_4c": "constVariable",
                "local_48": "input1Copy",
                "uStack_44": "input2Copy",
                "local_40": "input1Copy2",
                "uStack_3c": "input2Copy2",
                "local_38": "returnValueTemp",
                "local_30": "temporaryVariable",
                "cVar1": "specialCaseValue"
            },
            "calling": [
                "gc_execute_line",
                "max_allowable_speed",
                "homing_cycle",
                "plan_buffer_line"
            ],
            "called": [
                "__ieee754_sqrt",
                "matherr",
                "__errno",
                "__unorddf2",
                "__divdf3",
                "__aeabi_dcmplt"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009990": {
            "entrypoint": "0x08009990",
            "current_name": "perform_calculation_08009990",
            "code": "\nuint performCalculation_08009990(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int temp1;\n  undefined4 temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  undefined8 temp6;\n  \n  temp4 = input4 & 0x7fffffff;\n  if (((temp4 | (-input3 | input3) >> 0x1f) < 0x7ff00001) &&\n     (temp5 = input2 & 0x7fffffff, (temp5 | (-input1 | input1) >> 0x1f) < 0x7ff00001)) {\n    if ((input4 + 0xc0100000 | input3) == 0) {\n      temp4 = atan();\n      return temp4;\n    }\n    temp3 = (int)input4 >> 0x1e & 2U | input2 >> 0x1f;\n    if ((temp5 | input1) == 0) {\n      if (temp3 == 2) {\n        input1 = 0x54442d18;\n      }\n      else if (temp3 == 3) {\n        input1 = 0x54442d18;\n      }\n    }\n    else {\n      if ((temp4 | input3) != 0) {\n        if (temp4 == 0x7ff00000) {\n          temp3 = temp3 - 1;\n          if (temp5 == 0x7ff00000) {\n            if (temp3 < 3) {\n              return *(uint *)(&DAT_0800be68 + temp3 * 8);\n            }\n            return 0x54442d18;\n          }\n          if (temp3 < 3) {\n            return *(uint *)(&DAT_0800be80 + temp3 * 8);\n          }\n          return 0;\n        }\n        if (temp5 != 0x7ff00000) {\n          temp1 = (int)(temp5 - temp4) >> 0x14;\n          if ((int)(temp5 - temp4) < 0x3d00000) {\n            if (((int)input4 < 0) && (temp1 + 0x3c < 0 != SCARRY4(temp1,0x3c))) {\n              temp6 = 0;\n            }\n            else {\n              __divdf3(input1,input2,input3,input4,input4);\n              fabs();\n              temp6 = atan();\n            }\n          }\n          else {\n            temp6 = 0x3ff921fb54442d18;\n          }\n          temp2 = (undefined4)((ulonglong)temp6 >> 0x20);\n          temp4 = (uint)temp6;\n          if (temp3 == 1) {\n            return temp4;\n          }\n          if (temp3 == 2) {\n            temp6 = __subdf3(temp4,temp2,0x33145c07,0x3ca1a626);\n            temp4 = __subdf3(0x54442d18,0x400921fb,(int)temp6,(int)((ulonglong)temp6 >> 0x20));\n            return temp4;\n          }\n          if (temp3 == 0) {\n            return temp4;\n          }\n          temp6 = __subdf3(temp4,temp2,0x33145c07,0x3ca1a626);\n          temp4 = __subdf3((int)temp6,(int)((ulonglong)temp6 >> 0x20),0x54442d18,0x400921fb);\n          return temp4;\n        }\n      }\n      if ((int)input2 < 0) {\n        input1 = 0x54442d18;\n      }\n      else {\n        input1 = 0x54442d18;\n      }\n    }\n  }\n  else {\n    input1 = __aeabi_dadd(input3,input4,input1,input2);\n  }\n  return input1;\n}\n\n",
            "renaming": {
                "FUN_08009990": "perform_calculation_08009990",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "temp1",
                "uVar2": "temp2",
                "uVar3": "temp3",
                "uVar4": "temp4",
                "uVar5": "temp5",
                "uVar6": "temp6"
            },
            "calling": [
                "atan2"
            ],
            "called": [
                "__aeabi_dadd",
                "atan",
                "fabs",
                "__divdf3",
                "__subdf3"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009b24": {
            "entrypoint": "0x08009b24",
            "current_name": "calculate_distance_08009b24",
            "code": "\nuint calculateDistance_08009b24(uint x1,uint y1,uint x2,uint y2)\n\n{\n  undefined4 temp1;\n  int temp2;\n  uint distance;\n  int result;\n  undefined4 temp3;\n  int temp4;\n  uint temp5;\n  undefined4 temp6;\n  undefined4 temp7;\n  undefined8 temp8;\n  undefined8 temp9;\n  undefined8 temp10;\n  undefined8 temp11;\n  int temp12;\n  \n  y1 = y1 & 0x7fffffff;\n  y2 = y2 & 0x7fffffff;\n  distance = x1;\n  temp5 = y1;\n  if (y1 < y2) {\n    distance = x2;\n    x2 = x1;\n    temp5 = y2;\n    y2 = y1;\n  }\n  if (0x3c00000 < (int)(temp5 - y2)) {\n    distance = __aeabi_dadd(distance,temp5,x2,y2);\n    return distance;\n  }\n  if (temp5 < 0x5f300001) {\n    temp12 = 0;\n  }\n  else {\n    if (0x7fefffff < temp5) {\n      if ((temp5 & 0xfffff | distance) != 0) {\n        distance = __aeabi_dadd(distance,temp5,x2,y2);\n      }\n      if ((y2 ^ 0x7ff00000 | x2) != 0) {\n        return distance;\n      }\n      return x2;\n    }\n    temp5 = temp5 + 0xda800000;\n    y2 = y2 + 0xda800000;\n    temp12 = 600;\n  }\n  temp9 = CONCAT44(temp5,distance);\n  temp8 = CONCAT44(y2,x2);\n  if ((int)y2 < 0x20b00000) {\n    if ((int)y2 < 0x100000) {\n      if ((y2 | x2) == 0) {\n        return distance;\n      }\n      temp8 = __muldf3(x2,y2,0,0x7fd00000);\n      temp9 = __muldf3(distance,temp5,0,0x7fd00000);\n      temp12 = temp12 + -0x3fe;\n    }\n    else {\n      temp5 = temp5 + 0x25800000;\n      temp9 = CONCAT44(temp5,distance);\n      y2 = y2 + 0x25800000;\n      temp8 = CONCAT44(y2,x2);\n      temp12 = temp12 + -600;\n    }\n  }\n  temp7 = (undefined4)((ulonglong)temp9 >> 0x20);\n  temp6 = (undefined4)temp9;\n  temp4 = (int)((ulonglong)temp8 >> 0x20);\n  temp3 = (undefined4)temp8;\n  temp8 = __subdf3(temp6,temp7,temp3,temp4);\n  result = (int)((ulonglong)temp8 >> 0x20);\n  temp1 = (undefined4)temp8;\n  temp2 = __aeabi_dcmplt(temp3,temp4,temp1,result);\n  if (temp2 == 0) {\n    temp8 = __muldf3(0,y2,0);\n    temp9 = __muldf3(temp1,result + -0x80000000,temp1,result);\n    temp10 = __aeabi_dadd(temp6,temp7,temp6,temp7);\n    temp10 = __subdf3((int)temp10,(int)((ulonglong)temp10 >> 0x20),0,temp5 + 0x100000);\n    temp10 = __muldf3((int)temp10,(int)((ulonglong)temp10 >> 0x20),temp3,temp4);\n    temp11 = __subdf3(temp3,temp4,0,y2);\n    temp11 = __muldf3((int)temp11,(int)((ulonglong)temp11 >> 0x20),0,temp5 + 0x100000);\n    temp10 = __aeabi_dadd((int)temp10,(int)((ulonglong)temp10 >> 0x20),(int)temp11,\n                          (int)((ulonglong)temp11 >> 0x20));\n    temp9 = __subdf3((int)temp9,(int)((ulonglong)temp9 >> 0x20),(int)temp10,\n                      (int)((ulonglong)temp10 >> 0x20));\n    __subdf3((int)temp8,(int)((ulonglong)temp8 >> 0x20),(int)temp9,\n             (int)((ulonglong)temp9 >> 0x20));\n    temp8 = __ieee754_sqrt();\n  }\n  else {\n    temp8 = __muldf3(0,temp5,0,temp5);\n    temp9 = __muldf3(temp3,temp4 + -0x80000000,temp3,temp4);\n    temp10 = __aeabi_dadd(temp6,temp7,0,temp5);\n    temp11 = __subdf3(temp6,temp7,0,temp5);\n    temp10 = __muldf3((int)temp10,(int)((ulonglong)temp10 >> 0x20),(int)temp11,\n                      (int)((ulonglong)temp11 >> 0x20));\n    temp9 = __subdf3((int)temp9,(int)((ulonglong)temp9 >> 0x20),(int)temp10,\n                      (int)((ulonglong)temp10 >> 0x20));\n    __subdf3((int)temp8,(int)((ulonglong)temp8 >> 0x20),(int)temp9,\n             (int)((ulonglong)temp9 >> 0x20));\n    temp8 = __ieee754_sqrt();\n  }\n  distance = (uint)temp8;\n  if (temp12 != 0) {\n    distance = __muldf3(distance,(int)((ulonglong)temp8 >> 0x20),0,temp12 * 0x100000 + 0x3ff00000);\n  }\n  return distance;\n}\n\n",
            "renaming": {
                "FUN_08009b24": "calculate_distance_08009b24",
                "param_1": "x1",
                "param_2": "y1",
                "param_3": "x2",
                "param_4": "y2",
                "uVar1": "temp1",
                "iVar2": "temp2",
                "uVar3": "distance",
                "iVar4": "result",
                "uVar5": "temp3",
                "iVar6": "temp4",
                "uVar7": "temp5",
                "uVar8": "temp6",
                "uVar9": "temp7",
                "uVar10": "temp8",
                "uVar11": "temp9",
                "uVar12": "temp10",
                "uVar13": "temp11",
                "local_3c": "temp12"
            },
            "calling": [
                "hypot"
            ],
            "called": [
                "__ieee754_sqrt",
                "__aeabi_dadd",
                "__subdf3",
                "__muldf3",
                "__aeabi_dcmplt"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009d78": {
            "entrypoint": "0x08009d78",
            "current_name": "calculate_value_08009d78",
            "code": "\nint calculate_value_08009d78(undefined4 input_value_1,uint input_value_2,undefined8 *output_values)\n\n{\n  undefined4 temp_1;\n  undefined4 temp_2;\n  undefined4 temp_3;\n  undefined4 temp_4;\n  undefined4 temp_5;\n  undefined4 temp_6;\n  undefined4 temp_7;\n  uint masked_value;\n  int result;\n  undefined8 temp_8;\n  undefined8 temp_9;\n  undefined8 temp_10;\n  undefined4 temp_11;\n  undefined4 temp_12;\n  undefined8 temp_13;\n  undefined8 temp_14;\n  undefined8 temp_15;\n  \n  masked_value = input_value_2 & 0x7fffffff;\n  if (masked_value < 0x3fe921fc) {\n    *(undefined4 *)output_values = input_value_1;\n    *(uint *)((int)output_values + 4) = input_value_2;\n    *(undefined4 *)(output_values + 1) = 0;\n    *(undefined4 *)((int)output_values + 0xc) = 0;\n    return 0;\n  }\n  if (masked_value < 0x4002d97c) {\n    if ((int)input_value_2 < 1) {\n      temp_8 = __aeabi_dadd(input_value_1,input_value_2,0x54400000,0x3ff921fb);\n      temp_3 = (undefined4)((ulonglong)temp_8 >> 0x20);\n      temp_1 = (undefined4)temp_8;\n      if (masked_value != 0x3ff921fb) {\n        temp_8 = __aeabi_dadd(temp_1,temp_3,0x1a626331,0x3dd0b461);\n        *output_values = temp_8;\n        temp_8 = __subdf3(temp_1,temp_3);\n        temp_8 = __aeabi_dadd((int)temp_8,(int)((ulonglong)temp_8 >> 0x20),0x1a626331,0x3dd0b461);\n        output_values[1] = temp_8;\n        return -1;\n      }\n      temp_8 = __aeabi_dadd(temp_1,temp_3,0x1a600000,0x3dd0b461);\n      temp_1 = (undefined4)((ulonglong)temp_8 >> 0x20);\n      temp_9 = __aeabi_dadd((int)temp_8,temp_1,0x2e037073,0x3ba3198a);\n      *output_values = temp_9;\n      temp_8 = __subdf3((int)temp_8,temp_1);\n      temp_8 = __aeabi_dadd((int)temp_8,(int)((ulonglong)temp_8 >> 0x20),0x2e037073,0x3ba3198a);\n      output_values[1] = temp_8;\n      return -1;\n    }\n    temp_8 = __subdf3();\n    temp_3 = (undefined4)((ulonglong)temp_8 >> 0x20);\n    temp_1 = (undefined4)temp_8;\n    if (masked_value != 0x3ff921fb) {\n      temp_8 = __subdf3(temp_1,temp_3,0x1a626331,0x3dd0b461);\n      *output_values = temp_8;\n      temp_8 = __subdf3(temp_1,temp_3);\n      temp_8 = __subdf3((int)temp_8,(int)((ulonglong)temp_8 >> 0x20),0x1a626331,0x3dd0b461);\n      output_values[1] = temp_8;\n      return 1;\n    }\n    temp_8 = __subdf3(temp_1,temp_3,0x1a600000,0x3dd0b461);\n    temp_1 = (undefined4)((ulonglong)temp_8 >> 0x20);\n    temp_9 = __subdf3((int)temp_8,temp_1,0x2e037073,0x3ba3198a);\n    *output_values = temp_9;\n    temp_8 = __subdf3((int)temp_8,temp_1);\n    temp_8 = __subdf3((int)temp_8,(int)((ulonglong)temp_8 >> 0x20),0x2e037073,0x3ba3198a);\n    output_values[1] = temp_8;\n    return 1;\n  }\n  if (0x413921fb < masked_value) {\n    if (0x7fefffff < masked_value) {\n      temp_8 = __subdf3(input_value_1,input_value_2,input_value_1,input_value_2);\n      output_values[1] = temp_8;\n      *output_values = temp_8;\n      return 0;\n    }\n    result = ((int)masked_value >> 0x14) + -0x416;\n    __aeabi_d2iz();\n    temp_13 = __aeabi_i2d();\n    temp_8 = __subdf3(input_value_1,masked_value + result * -0x100000,(int)temp_13,\n                      (int)((ulonglong)temp_13 >> 0x20));\n    temp_8 = __muldf3((int)temp_8,(int)((ulonglong)temp_8 >> 0x20),0,0x41700000);\n    __aeabi_d2iz();\n    temp_14 = __aeabi_i2d();\n    temp_8 = __subdf3((int)temp_8,(int)((ulonglong)temp_8 >> 0x20));\n    temp_15 = __muldf3((int)temp_8,(int)((ulonglong)temp_8 >> 0x20),0,0x41700000);\n    __aeabi_dcmpeq((int)temp_15,(int)((ulonglong)temp_15 >> 0x20),0,0);\n    result = __kernel_rem_pio2(&temp_13,output_values,result);\n    if (-1 < (int)input_value_2) {\n      return result;\n    }\n    *(int *)((int)output_values + 4) = *(int *)((int)output_values + 4) + -0x80000000;\n    *(int *)((int)output_values + 0xc) = *(int *)((int)output_values + 0xc) + -0x80000000;\n    return -result;\n  }\n  temp_8 = fabs();\n  temp_3 = (undefined4)((ulonglong)temp_8 >> 0x20);\n  temp_9 = __muldf3((int)temp_8,temp_3,0x6dc9c883,0x3fe45f30);\n  __aeabi_dadd((int)temp_9,(int)((ulonglong)temp_9 >> 0x20),0,0x3fe00000);\n  result = __aeabi_d2iz();\n  temp_9 = __aeabi_i2d();\n  temp_4 = (undefined4)((ulonglong)temp_9 >> 0x20);\n  temp_1 = (undefined4)temp_9;\n  temp_9 = __muldf3(temp_1,temp_4,0x54400000,0x3ff921fb);\n  temp_8 = __subdf3((int)temp_8,temp_3,(int)temp_9,(int)((ulonglong)temp_9 >> 0x20));\n  temp_5 = (undefined4)((ulonglong)temp_8 >> 0x20);\n  temp_3 = (undefined4)temp_8;\n  temp_9 = __muldf3(temp_1,temp_4,0x1a626331,0x3dd0b461);\n  if ((0x1f < result) || (*(uint *)(&DAT_0800be98 + (result + -1) * 4) == masked_value)) {\n    temp_10 = __subdf3(temp_3,temp_5,(int)temp_9,(int)((ulonglong)temp_9 >> 0x20));\n    if ((int)((masked_value >> 0x14) - ((uint)((int)((ulonglong)temp_10 >> 0x20) << 1) >> 0x15)) < 0x11)\n    goto LAB_0800a0ce;\n    temp_9 = __muldf3(temp_1,temp_4,0x1a600000,0x3dd0b461);\n    temp_6 = (undefined4)((ulonglong)temp_9 >> 0x20);\n    temp_8 = __subdf3(temp_3,temp_5,(int)temp_9,temp_6);\n    temp_7 = (undefined4)((ulonglong)temp_8 >> 0x20);\n    temp_2 = (undefined4)temp_8;\n    temp_10 = __subdf3(temp_3,temp_5,temp_2,temp_7);\n    temp_9 = __subdf3((int)temp_10,(int)((ulonglong)temp_10 >> 0x20),(int)temp_9,temp_6);\n    temp_10 = __muldf3(temp_1,temp_4,0x2e037073,0x3ba3198a);\n    temp_9 = __subdf3((int)temp_10,(int)((ulonglong)temp_10 >> 0x20),(int)temp_9,\n                      (int)((ulonglong)temp_9 >> 0x20));\n    temp_10 = __subdf3(temp_2,temp_7,(int)temp_9,(int)((ulonglong)temp_9 >> 0x20));\n    if ((int)(((int)masked_value >> 0x14) - ((uint)((int)((ulonglong)temp_10 >> 0x20) << 1) >> 0x15)) < 0x32\n       ) goto LAB_0800a0ce;\n    temp_9 = __muldf3(temp_1,temp_4,0x2e000000,0x3ba3198a);\n    temp_3 = (undefined4)((ulonglong)temp_9 >> 0x20);\n    temp_8 = __subdf3(temp_2,temp_7,(int)temp_9,temp_3);\n    temp_10 = __subdf3(temp_2,temp_7);\n    temp_9 = __subdf3((int)temp_10,(int)((ulonglong)temp_10 >> 0x20),(int)temp_9,temp_3);\n    temp_10 = __muldf3(temp_1,temp_4,0x252049c1,0x397b839a);\n    temp_9 = __subdf3((int)temp_10,(int)((ulonglong)temp_10 >> 0x20),(int)temp_9,\n                      (int)((ulonglong)temp_9 >> 0x20));\n  }\n  temp_10 = __subdf3((int)temp_8,(int)((ulonglong)temp_8 >> 0x20),(int)temp_9,\n                    (int)((ulonglong)temp_9 >> 0x20));\nLAB_0800a0ce:\n  temp_12 = (undefined4)((ulonglong)temp_8 >> 0x20);\n  temp_11 = (undefined4)temp_8;\n  *output_values = temp_10;\n  temp_8 = __subdf3(temp_11,temp_12);\n  temp_8 = __subdf3((int)temp_8,(int)((ulonglong)temp_8 >> 0x20),(int)temp_9,\n                    (int)((ulonglong)temp_9 >> 0x20));\n  output_values[1] = temp_8;\n  if ((int)input_value_2 < 0) {\n    *(int *)output_values = (int)temp_10;\n    *(int *)((int)output_values + 4) = (int)((ulonglong)temp_10 >> 0x20) + -0x80000000;\n    *(int *)(output_values + 1) = (int)temp_8;\n    *(int *)((int)output_values + 0xc) = (int)((ulonglong)temp_8 >> 0x20) + -0x80000000;\n    result = -result;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009d78": "calculate_value_08009d78",
                "param_1": "input_value_1",
                "param_2": "input_value_2",
                "param_3": "output_values",
                "uVar1": "temp_1",
                "uVar2": "temp_2",
                "uVar3": "temp_3",
                "uVar4": "temp_4",
                "uVar5": "temp_5",
                "uVar6": "temp_6",
                "uVar7": "temp_7",
                "uVar8": "masked_value",
                "iVar9": "result",
                "uVar10": "temp_8",
                "uVar11": "temp_9",
                "uVar12": "temp_10",
                "local_50": "temp_11",
                "uStack_4c": "temp_12",
                "local_40": "temp_13",
                "local_38": "temp_14",
                "local_30": "temp_15"
            },
            "calling": [
                "sin",
                "cos"
            ],
            "called": [
                "__aeabi_dadd",
                "__aeabi_d2iz",
                "fabs",
                "__aeabi_i2d",
                "__aeabi_dcmpeq",
                "__kernel_rem_pio2",
                "__subdf3",
                "__muldf3"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a1bc": {
            "entrypoint": "0x0800a1bc",
            "current_name": "calculate_result_0800a1bc",
            "code": "\nuint calculateResult_0800a1bc(uint input1,uint input2)\n\n{\n  uint shiftAmount;\n  int iterationCount1;\n  uint temp1;\n  undefined4 temp2;\n  uint shiftedValue;\n  uint bitMask;\n  uint remainder;\n  uint temp3;\n  uint temp4;\n  int iterationCount2;\n  uint temp5;\n  uint count;\n  undefined8 temp6;\n  \n  if ((~input2 & 0x7ff00000) == 0) {\n    temp6 = __muldf3(input1,input2,input1,input2);\n    remainder = __aeabi_dadd((int)temp6,(int)((ulonglong)temp6 >> 0x20),input1,input2);\n    return remainder;\n  }\n  if ((int)input2 < 1) {\n    if ((input2 & 0x7fffffff | input1) == 0) {\n      return input1;\n    }\n    if (input2 != 0) {\n      temp6 = __subdf3(input1,input2,input1);\n      temp2 = (undefined4)((ulonglong)temp6 >> 0x20);\n      remainder = __divdf3((int)temp6,temp2,(int)temp6,temp2);\n      return remainder;\n    }\n    do {\n      temp4 = input1;\n      remainder = temp4 >> 0xb;\n      input2 = input2 - 0x15;\n      input1 = temp4 << 0x15;\n    } while (remainder == 0);\n    shiftAmount = input2;\n    if (-1 < (int)temp4) goto LAB_0800a290;\n    count = 0x20;\n    shiftedValue = 0xffffffff;\n    temp4 = input1;\n  }\n  else {\n    shiftAmount = (int)input2 >> 0x14;\n    remainder = input2;\n    temp4 = input1;\n    if (shiftAmount != 0) goto LAB_0800a1da;\nLAB_0800a290:\n    temp4 = 0;\n    count = remainder;\n    do {\n      shiftedValue = temp4;\n      remainder = count << 1;\n      iterationCount2 = count << 0xc;\n      temp4 = shiftedValue + 1;\n      count = remainder;\n    } while (-1 < iterationCount2);\n    count = 0x20 - temp4;\n    input2 = shiftAmount;\n    temp4 = input1 << (temp4 & 0xff);\n  }\n  remainder = input1 >> (count & 0xff) | remainder;\n  shiftAmount = input2 - shiftedValue;\nLAB_0800a1da:\n  remainder = remainder & 0xfffff | 0x100000;\n  if (-1 < (int)(shiftAmount << 0x1f)) {\n    remainder = remainder * 2 - ((int)temp4 >> 0x1f);\n    temp4 = temp4 << 1;\n  }\n  count = 0;\n  remainder = remainder * 2 - ((int)temp4 >> 0x1f);\n  temp4 = temp4 << 1;\n  shiftAmount = 0;\n  iterationCount2 = 0x16;\n  shiftedValue = 0x200000;\n  do {\n    iterationCount1 = shiftAmount + shiftedValue;\n    if (iterationCount1 <= (int)remainder) {\n      remainder = remainder - iterationCount1;\n      shiftAmount = iterationCount1 + shiftedValue;\n      count = count + shiftedValue;\n    }\n    iterationCount2 = iterationCount2 + -1;\n    remainder = remainder * 2 - ((int)temp4 >> 0x1f);\n    shiftedValue = shiftedValue >> 1;\n    temp4 = temp4 << 1;\n  } while (iterationCount2 != 0);\n  iterationCount1 = 0x20;\n  bitMask = 0x80000000;\n  iterationCount2 = 0;\n  shiftedValue = 0;\n  do {\n    temp1 = bitMask + iterationCount2;\n    temp5 = shiftAmount;\n    if ((int)shiftAmount < (int)remainder) {\n      if ((int)temp1 < 0) {\nLAB_0800a26a:\n        if (-1 < (int)(temp1 + bitMask)) {\n          temp5 = shiftAmount + 1;\n        }\n      }\n      temp3 = remainder - shiftAmount;\n      shiftAmount = temp5;\n      if (temp4 < temp1) {\n        temp3 = temp3 - 1;\n      }\nLAB_0800a262:\n      iterationCount2 = temp1 + bitMask;\n      temp4 = temp4 - temp1;\n      shiftedValue = shiftedValue + bitMask;\n      remainder = temp3;\n    }\n    else if ((remainder == shiftAmount) && (temp1 <= temp4)) {\n      if ((int)temp1 < 0) goto LAB_0800a26a;\n      temp3 = 0;\n      shiftAmount = remainder;\n      goto LAB_0800a262;\n    }\n    iterationCount1 = iterationCount1 + -1;\n    bitMask = bitMask >> 1;\n    remainder = remainder * 2 - ((int)temp4 >> 0x1f);\n    temp4 = temp4 << 1;\n    if (iterationCount1 == 0) {\n      if ((remainder | temp4) == 0) {\n        shiftedValue = shiftedValue >> 1;\n      }\n      else if (shiftedValue == 0xffffffff) {\n        count = count + 1;\n        shiftedValue = 0;\n      }\n      else {\n        shiftedValue = shiftedValue + 1 >> 1;\n      }\n      if ((count & 1) != 0) {\n        shiftedValue = shiftedValue | 0x80000000;\n      }\n      return shiftedValue;\n    }\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_0800a1bc": "calculate_result_0800a1bc",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "shiftAmount",
                "iVar2": "iterationCount1",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "uVar5": "shiftedValue",
                "uVar6": "bitMask",
                "uVar7": "remainder",
                "uVar8": "temp3",
                "uVar9": "temp4",
                "iVar10": "iterationCount2",
                "uVar11": "temp5",
                "uVar12": "count",
                "uVar13": "temp6"
            },
            "calling": [
                "sqrt",
                "__ieee754_hypot"
            ],
            "called": [
                "__aeabi_dadd",
                "__divdf3",
                "__subdf3",
                "__muldf3"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a348": {
            "entrypoint": "0x0800a348",
            "current_name": "calculate_value_0800a348",
            "code": "\nundefined4 calculate_value_0800a348(undefined4 base,uint power,undefined4 multiplier1,undefined4 multiplier2)\n\n{\n  int result1;\n  undefined4 result1_low;\n  undefined4 result1_high;\n  uint abs_power;\n  undefined8 product1;\n  undefined8 product2;\n  undefined8 product3;\n  undefined4 result2;\n  undefined4 result2_high;\n  undefined4 result2_low;\n  undefined4 uStack_24;\n  \n  abs_power = power & 0x7fffffff;\n  if (abs_power < 0x3e400000) {\n    result1 = __aeabi_d2iz();\n    if (result1 == 0) {\n      return 0;\n    }\n    product1 = __muldf3(base,power,base,power);\n    result1_high = (undefined4)((ulonglong)product1 >> 0x20);\n    result1_low = (undefined4)product1;\n    product2 = __muldf3(result1_low,result1_high,0xbe8838d4,0xbda8fae9);\n    product2 = __aeabi_dadd((int)product2,(int)((ulonglong)product2 >> 0x20),0xbdb4b1c4,0x3e21ee9e);\n    product2 = __muldf3((int)product2,(int)((ulonglong)product2 >> 0x20),result1_low,result1_high);\n    product2 = __subdf3((int)product2,(int)((ulonglong)product2 >> 0x20),0x809c52ad,0x3e927e4f);\n    product2 = __muldf3((int)product2,(int)((ulonglong)product2 >> 0x20),result1_low,result1_high);\n    product2 = __aeabi_dadd((int)product2,(int)((ulonglong)product2 >> 0x20),0x19cb1590,0x3efa01a0);\n    product2 = __muldf3((int)product2,(int)((ulonglong)product2 >> 0x20),result1_low,result1_high);\n    product2 = __subdf3((int)product2,(int)((ulonglong)product2 >> 0x20),0x16c15177,0x3f56c16c);\n    product2 = __muldf3((int)product2,(int)((ulonglong)product2 >> 0x20),result1_low,result1_high);\n    product2 = __aeabi_dadd((int)product2,(int)((ulonglong)product2 >> 0x20),0x5555554c,0x3fa55555);\n    product2 = __muldf3((int)product2,(int)((ulonglong)product2 >> 0x20),result1_low,result1_high);\n  }\n  else {\n    product1 = __muldf3(base,power,base,power);\n    result1_high = (undefined4)((ulonglong)product1 >> 0x20);\n    result1_low = (undefined4)product1;\n    product2 = __muldf3(result1_low,result1_high,0xbe8838d4,0xbda8fae9);\n    product2 = __aeabi_dadd((int)product2,(int)((ulonglong)product2 >> 0x20),0xbdb4b1c4,0x3e21ee9e);\n    product2 = __muldf3((int)product2,(int)((ulonglong)product2 >> 0x20),result1_low,result1_high);\n    product2 = __subdf3((int)product2,(int)((ulonglong)product2 >> 0x20),0x809c52ad,0x3e927e4f);\n    product2 = __muldf3((int)product2,(int)((ulonglong)product2 >> 0x20),result1_low,result1_high);\n    product2 = __aeabi_dadd((int)product2,(int)((ulonglong)product2 >> 0x20),0x19cb1590,0x3efa01a0);\n    product2 = __muldf3((int)product2,(int)((ulonglong)product2 >> 0x20),result1_low,result1_high);\n    product2 = __subdf3((int)product2,(int)((ulonglong)product2 >> 0x20),0x16c15177,0x3f56c16c);\n    product2 = __muldf3((int)product2,(int)((ulonglong)product2 >> 0x20),result1_low,result1_high);\n    product2 = __aeabi_dadd((int)product2,(int)((ulonglong)product2 >> 0x20),0x5555554c,0x3fa55555);\n    product2 = __muldf3((int)product2,(int)((ulonglong)product2 >> 0x20),result1_low,result1_high);\n    if (0x3fd33332 < abs_power) {\n      if (abs_power < 0x3fe90001) {\n        result1 = abs_power - 0x200000;\n        product1 = __subdf3(0,0x3ff00000,0,result1);\n      }\n      else {\n        result1 = 0x3fd20000;\n        product1 = 0x3fe7000000000000;\n      }\n      uStack_24 = (undefined4)((ulonglong)product1 >> 0x20);\n      result2_low = (undefined4)product1;\n      product1 = __muldf3(result1_low,result1_high,0,0x3fe00000);\n      product1 = __subdf3((int)product1,(int)((ulonglong)product1 >> 0x20),0,result1);\n      product2 = __muldf3(result1_low,result1_high,(int)product2,(int)((ulonglong)product2 >> 0x20));\n      product3 = __muldf3(base,power,multiplier1,multiplier2);\n      product2 = __subdf3((int)product2,(int)((ulonglong)product2 >> 0x20),(int)product3,\n                       (int)((ulonglong)product3 >> 0x20));\n      product1 = __subdf3((int)product1,(int)((ulonglong)product1 >> 0x20),(int)product2,\n                       (int)((ulonglong)product2 >> 0x20));\n      result1_low = __subdf3(result2_low,uStack_24,(int)product1,(int)((ulonglong)product1 >> 0x20));\n      return result1_low;\n    }\n  }\n  result2_high = (undefined4)((ulonglong)product2 >> 0x20);\n  result2 = (undefined4)product2;\n  result1_low = (undefined4)((ulonglong)product1 >> 0x20);\n  product2 = __muldf3((int)product1,result1_low,0,0x3fe00000);\n  product1 = __muldf3((int)product1,result1_low,result2,result2_high);\n  product3 = __muldf3(base,power,multiplier1,multiplier2);\n  product1 = __subdf3((int)product1,(int)((ulonglong)product1 >> 0x20),(int)product3,\n                   (int)((ulonglong)product3 >> 0x20));\n  product1 = __subdf3((int)product2,(int)((ulonglong)product2 >> 0x20),(int)product1,\n                   (int)((ulonglong)product1 >> 0x20));\n  result1_low = __subdf3(0,0x3ff00000,(int)product1,(int)((ulonglong)product1 >> 0x20));\n  return result1_low;\n}\n\n",
            "renaming": {
                "FUN_0800a348": "calculate_value_0800a348",
                "param_1": "base",
                "param_2": "power",
                "param_3": "multiplier1",
                "param_4": "multiplier2",
                "iVar1": "result1",
                "uVar2": "result1_low",
                "uVar3": "result1_high",
                "uVar4": "abs_power",
                "uVar5": "product1",
                "uVar6": "product2",
                "uVar7": "product3",
                "local_30": "result2",
                "uStack_2c": "result2_high",
                "local_28": "result2_low"
            },
            "calling": [
                "sin",
                "cos"
            ],
            "called": [
                "__aeabi_dadd",
                "__aeabi_d2iz",
                "__subdf3",
                "__muldf3"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a5a0": {
            "entrypoint": "0x0800a5a0",
            "current_name": "calculate_result_0800a5a0",
            "code": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nuint calculateResult_0800a5a0(int resultAddress,undefined8 *inputArray,int inputArraySize,int offset,int option,int param6)\n\n{\n  undefined4 *pointer1;\n  uint result;\n  uint temp1;\n  int temp2;\n  uint *pointer2;\n  undefined4 temp3;\n  uint **pointer3;\n  undefined4 temp4;\n  int temp5;\n  undefined4 *pointer4;\n  undefined4 temp6;\n  uint temp7;\n  uint *pointer5;\n  int temp12;\n  int temp9;\n  undefined8 *pointer6;\n  int temp10;\n  undefined4 *pointer18;\n  undefined8 *pointer19;\n  undefined4 result0;\n  int temp11;\n  undefined8 *presult2;\n  undefined4 *presult3;\n  bool bVar24;\n  undefined8 result5;\n  undefined8 result6;\n  undefined8 result7;\n  undefined8 *matrixPointer;\n  int matrixSize;\n  int currentIndex;\n  int temp13;\n  uint *local_260 [2];\n  uint matrix [20];\n  undefined8 temp15;\n  undefined8 temp14;\n  int tempArray [38];\n  undefined8 temp16;\n  \n  temp9 = *(int *)(&DAT_0800c060 + option * 4);\n  temp5 = offset + -1;\n  local_260[1] = (uint *)inputArray;\n  if (inputArraySize + 0x14 < 0 == SCARRY4(inputArraySize,0x14)) {\n    temp13 = (inputArraySize + -3) / 0x18;\n    currentIndex = (temp13 + 1) * -0x18;\n  }\n  else {\n    currentIndex = -0x18;\n    temp13 = 0;\n  }\n  currentIndex = inputArraySize + currentIndex;\n  temp10 = temp13 - temp5;\n  if (-1 < temp9 + temp5) {\n    temp11 = temp9 + temp5 + 1 + temp10;\n    pointer6 = &temp15;\n    do {\n      while (temp10 < 0) {\n        temp10 = temp10 + 1;\n        *(undefined4 *)pointer6 = 0;\n        *(undefined4 *)((int)pointer6 + 4) = 0;\n        pointer6 = pointer6 + 1;\n        if (temp10 == temp11) goto LAB_0800a626;\n      }\n      result6 = __aeabi_i2d(*(undefined4 *)(param6 + temp10 * 4));\n      temp10 = temp10 + 1;\n      *pointer6 = result6;\n      pointer6 = pointer6 + 1;\n    } while (temp10 != temp11);\n  }\nLAB_0800a626:\n  pointer4 = (undefined4 *)(resultAddress + -8);\n  if (-1 < temp9) {\n    presult2 = &temp15 + offset;\n    temp10 = temp5;\n    pointer6 = &temp16;\n    do {\n      if (temp5 < 0) {\n        result6 = 0;\n      }\n      else {\n        result6 = 0;\n        presult3 = pointer4;\n        pointer19 = presult2;\n        do {\n          pointer18 = presult3 + 2;\n          result5 = __muldf3(*pointer18,presult3[3],*(undefined4 *)(pointer19 + -1),\n                            *(undefined4 *)((int)pointer19 + -4));\n          result6 = __aeabi_dadd((int)result6,(int)((ulonglong)result6 >> 0x20),(int)result5,\n                                (int)((ulonglong)result5 >> 0x20));\n          presult3 = pointer18;\n          pointer19 = pointer19 + -1;\n        } while (pointer18 != pointer4 + offset * 2);\n      }\n      temp10 = temp10 + 1;\n      *pointer6 = result6;\n      presult2 = presult2 + 1;\n      pointer6 = pointer6 + 1;\n    } while (temp10 != temp9 + offset);\n  }\n  local_260[0] = matrix + temp9 + -1;\n  temp10 = temp9;\n  do {\n    result6 = CONCAT44(*(undefined4 *)((int)&temp16 + temp10 * 8 + 4),\n                      *(undefined4 *)(&temp16 + temp10));\n    if (0 < temp10) {\n      pointer6 = &temp16 + temp10;\n      pointer2 = matrix;\n      do {\n        temp3 = (undefined4)((ulonglong)result6 >> 0x20);\n        __muldf3((int)result6,temp3,0,0x3e700000);\n        __aeabi_d2iz();\n        result5 = __aeabi_i2d();\n        temp4 = (undefined4)((ulonglong)result5 >> 0x20);\n        result7 = __muldf3((int)result5,temp4,0,0x41700000);\n        __subdf3((int)result6,temp3,(int)result7,(int)((ulonglong)result7 >> 0x20));\n        result = __aeabi_d2iz();\n        presult2 = pointer6 + -1;\n        temp3 = *(undefined4 *)presult2;\n        temp6 = *(undefined4 *)((int)pointer6 + -4);\n        *pointer2 = result;\n        result6 = __aeabi_dadd((int)result5,temp4,temp3,temp6);\n        pointer6 = presult2;\n        pointer2 = pointer2 + 1;\n      } while (presult2 != &temp16);\n    }\n    result6 = scalbn((int)result6,(int)((ulonglong)result6 >> 0x20),currentIndex);\n    temp4 = (undefined4)((ulonglong)result6 >> 0x20);\n    __muldf3((int)result6,temp4,0,0x3fc00000);\n    result5 = floor();\n    result5 = __muldf3((int)result5,(int)((ulonglong)result5 >> 0x20),0,0x40200000);\n    result6 = __subdf3((int)result6,temp4,(int)result5,(int)((ulonglong)result5 >> 0x20));\n    result = __aeabi_d2iz();\n    result5 = __aeabi_i2d();\n    result6 = __subdf3((int)result6,(int)((ulonglong)result6 >> 0x20),(int)result5,\n                      (int)((ulonglong)result5 >> 0x20));\n    temp3 = (undefined4)((ulonglong)result6 >> 0x20);\n    temp4 = (undefined4)result6;\n    if (currentIndex < 1) {\n      if (currentIndex == 0) {\n        temp11 = (int)matrix[temp10 + -1] >> 0x17;\n        goto joined_r0x0800a8b8;\n      }\n      temp11 = __aeabi_dcmpge(temp4,temp3,0,0x3fe00000);\n      if (temp11 != 0) {\n        result = result + 1;\n        if (temp10 < 1) {\n          result6 = __subdf3(0,0x3ff00000,temp4,temp3);\n          temp11 = 2;\n          goto LAB_0800a7a4;\n        }\n        temp11 = 2;\n        goto LAB_0800a8c8;\n      }\n    }\n    else {\n      temp2 = (int)matrix[temp10 + -1] >> (0x18U - currentIndex & 0xff);\n      temp7 = matrix[temp10 + -1] - (temp2 << (0x18U - currentIndex & 0xff));\n      temp11 = (int)temp7 >> (0x17U - currentIndex & 0xff);\n      matrix[temp10 + -1] = temp7;\n      result = result + temp2;\njoined_r0x0800a8b8:\n      if (0 < temp11) {\n        result = result + 1;\n        if (temp10 < 1) {\n          bVar24 = false;\n        }\n        else {\nLAB_0800a8c8:\n          if (matrix[0] == 0) {\n            bVar24 = false;\n            if (temp10 != 1) {\n              pointer2 = matrix;\n              temp2 = 1;\n              do {\n                pointer2 = pointer2 + 1;\n                if (*pointer2 != 0) {\n                  temp12 = temp2 + 1;\n                  temp7 = *pointer2;\n                  goto LAB_0800a8e2;\n                }\n                temp2 = temp2 + 1;\n              } while (temp2 != temp10);\n              bVar24 = false;\n            }\n          }\n          else {\n            temp12 = 1;\n            temp2 = 0;\n            temp7 = matrix[0];\nLAB_0800a8e2:\n            matrix[temp2] = 0x1000000 - temp7;\n            if (temp12 < temp10) {\n              temp7 = matrix[temp12];\n              pointer2 = matrix + temp12;\n              while( true ) {\n                pointer5 = pointer2 + 1;\n                *pointer2 = 0xffffff - temp7;\n                if (pointer5 == matrix + temp10) break;\n                temp7 = *pointer5;\n                pointer2 = pointer5;\n              }\n            }\n            bVar24 = true;\n          }\n        }\n        if (0 < currentIndex) {\n          if (currentIndex == 1) {\n            matrix[temp10 + -1] = matrix[temp10 + -1] & 0x7fffff;\n          }\n          else if (currentIndex == 2) {\n            matrix[temp10 + -1] = matrix[temp10 + -1] & 0x3fffff;\n          }\n        }\n        if (temp11 == 2) {\n          result6 = __subdf3(0,0x3ff00000,temp4,temp3);\n          if (bVar24) {\n            result5 = scalbn(0,0x3ff00000,currentIndex);\n            result6 = __subdf3((int)result6,(int)((ulonglong)result6 >> 0x20),(int)result5,\n                              (int)((ulonglong)result5 >> 0x20));\n          }\n        }\n      }\n    }\nLAB_0800a7a4:\n    temp4 = (undefined4)((ulonglong)result6 >> 0x20);\n    temp2 = __aeabi_dcmpeq((int)result6,temp4,0,0);\n    if (temp2 == 0) {\n      result6 = scalbn((int)result6,temp4,-currentIndex);\n      temp3 = (undefined4)((ulonglong)result6 >> 0x20);\n      temp4 = (undefined4)result6;\n      temp5 = __aeabi_dcmpge(temp4,temp3,0,0x41700000);\n      if (temp5 == 0) {\n        temp7 = __aeabi_d2iz(temp4,temp3);\n        matrix[temp10] = temp7;\n        temp2 = temp10;\n      }\n      else {\n        __muldf3(temp4,temp3,0,0x3e700000);\n        temp7 = __aeabi_d2iz();\n        result6 = __aeabi_i2d();\n        result6 = __muldf3((int)result6,(int)((ulonglong)result6 >> 0x20),0,0x41700000);\n        __subdf3(temp4,temp3,(int)result6,(int)((ulonglong)result6 >> 0x20));\n        temp1 = __aeabi_d2iz();\n        currentIndex = currentIndex + 0x18;\n        matrix[temp10] = temp1;\n        matrix[temp10 + 1] = temp7;\n        temp2 = temp10 + 1;\n      }\n      goto LAB_0800a9f6;\n    }\n    temp2 = temp10 + -1;\n    if (temp9 <= temp2) {\n      temp7 = 0;\n      pointer2 = matrix + temp10 + 0x3fffffff;\n      do {\n        pointer5 = pointer2 + -1;\n        temp7 = temp7 | *pointer2;\n        pointer2 = pointer5;\n      } while (pointer5 != local_260[0]);\n      if (temp7 != 0) break;\n    }\n    if (matrix[temp9 + -1] == 0) {\n      matrixSize = 1;\n      pointer3 = local_260 + temp9;\n      do {\n        pointer2 = *pointer3;\n        matrixSize = matrixSize + 1;\n        pointer3 = pointer3 + -1;\n      } while (pointer2 == (uint *)0x0);\n      matrixSize = temp10 + matrixSize;\n    }\n    else {\n      matrixSize = temp10 + 1;\n    }\n    temp11 = temp10 + 1;\n    presult3 = (undefined4 *)(param6 + (temp11 + temp13 + 0x3fffffff) * 4);\n    pointer6 = &temp15 + temp10 + offset;\n    matrixPointer = &temp16 + temp11;\n    do {\n      presult3 = presult3 + 1;\n      result6 = __aeabi_i2d(*presult3);\n      *pointer6 = result6;\n      presult2 = pointer6 + 1;\n      if (temp5 < 0) {\n        result5 = 0;\n      }\n      else {\n        result5 = 0;\n        pointer18 = pointer4;\n        while( true ) {\n          pointer6 = pointer6 + -1;\n          pointer1 = pointer18 + 2;\n          result6 = __muldf3((int)result6,(int)((ulonglong)result6 >> 0x20),*pointer1,pointer18[3]);\n          result5 = __aeabi_dadd((int)result5,(int)((ulonglong)result5 >> 0x20),(int)result6,\n                                (int)((ulonglong)result6 >> 0x20));\n          if (pointer1 == pointer4 + offset * 2) break;\n          result6 = *pointer6;\n          pointer18 = pointer1;\n        }\n      }\n      *matrixPointer = result5;\n      temp11 = temp11 + 1;\n      temp10 = matrixSize;\n      pointer6 = presult2;\n      matrixPointer = matrixPointer + 1;\n    } while (temp11 <= matrixSize);\n  } while( true );\n  currentIndex = currentIndex + -0x18;\n  if (matrix[temp2] == 0) {\n    pointer2 = matrix + temp10 + 0x3ffffffe;\n    do {\n      temp7 = *pointer2;\n      temp2 = temp2 + -1;\n      currentIndex = currentIndex + -0x18;\n      pointer2 = pointer2 + -1;\n    } while (temp7 == 0);\n  }\nLAB_0800a9f6:\n  result6 = scalbn(0,0x3ff00000,currentIndex);\n  if (temp2 < 0) {\n    if (2 < option) {\n      if (option == 3) {\n        result6 = 0;\nLAB_0800abe4:\n        if (temp11 == 0) {\n          *local_260[1] = (undefined4)temp14;\n          *(int *)((int)local_260[1] + 4) = temp14._4_4_;\n          *(undefined8 *)((int)local_260[1] + 0x10) = result6;\n          *(int *)((int)local_260[1] + 8) = tempArray[0];\n          *(int *)((int)local_260[1] + 0xc) = tempArray[1];\n          return result & 7;\n        }\n        *(int *)((int)local_260[1] + 0x10) = (int)result6;\n        *(int *)((int)local_260[1] + 8) = tempArray[0];\n        *(int *)((int)local_260[1] + 0x14) = (int)((ulonglong)result6 >> 0x20) + -0x80000000;\n        *(int *)((int)local_260[1] + 4) = temp14._4_4_ + -0x80000000;\n        *(int *)((int)local_260[1] + 0xc) = tempArray[1] + -0x80000000;\n        *local_260[1] = (undefined4)temp14;\n        return result & 7;\n      }\n      goto LAB_0800ab0e;\n    }\n    if (option < 1) {\n      if (option != 0) goto LAB_0800ab0e;\n      result6 = 0;\nLAB_0800aafc:\n      temp5 = (int)((ulonglong)result6 >> 0x20);\n      if (temp11 != 0) {\n        temp5 = temp5 + -0x80000000;\n      }\n      *local_260[1] = (int)result6;\n      *(int *)((int)local_260[1] + 4) = temp5;\nLAB_0800ab0e:\n      return result & 7;\n    }\n    result6 = 0;\n  }\n  else {\n    presult2 = &temp16 + temp2;\n    pointer2 = matrix + temp2 + 1;\n    pointer6 = &temp16 + temp2 + 1;\n    do {\n      temp4 = (undefined4)((ulonglong)result6 >> 0x20);\n      pointer2 = pointer2 + -1;\n      result5 = __aeabi_i2d(*pointer2);\n      result5 = __muldf3((int)result5,(int)((ulonglong)result5 >> 0x20),(int)result6,temp4);\n      pointer6 = pointer6 + -1;\n      *pointer6 = result5;\n      result6 = __muldf3((int)result6,temp4,0,0x3e700000);\n    } while (pointer2 != matrix);\n    temp5 = 0;\n    do {\n      if (temp9 < 0) {\n        result6 = 0;\n      }\n      else {\n        temp4 = 0x40000000;\n        temp3 = 0x3ff921fb;\n        result6 = 0;\n        temp10 = 0;\n        pointer6 = presult2;\n        pointer4 = &DAT_0800c028;\n        while( true ) {\n          result5 = __muldf3(*(undefined4 *)pointer6,*(undefined4 *)((int)pointer6 + 4),temp4,temp3);\n          result6 = __aeabi_dadd((int)result6,(int)((ulonglong)result6 >> 0x20),(int)result5,\n                                (int)((ulonglong)result5 >> 0x20));\n          temp10 = temp10 + 1;\n          if ((temp9 < temp10) || (temp5 < temp10)) break;\n          temp4 = *pointer4;\n          temp3 = pointer4[1];\n          pointer6 = pointer6 + 1;\n          pointer4 = pointer4 + 2;\n        }\n      }\n      bVar24 = temp5 != temp2;\n      *(int *)(&temp14 + temp5) = (int)result6;\n      *(int *)((int)&temp14 + (temp5 * 2 + 1) * 4) = (int)((ulonglong)result6 >> 0x20);\n      presult2 = presult2 + -1;\n      temp5 = temp5 + 1;\n    } while (bVar24);\n    if (2 < option) {\n      if (option == 3) {\n        if (temp2 != 0) {\n          pointer6 = &temp14 + temp2;\n          result6 = CONCAT44(*(undefined4 *)((int)&temp14 + (temp2 * 2 + 1) * 4),\n                            *(undefined4 *)pointer6);\n          do {\n            temp3 = (undefined4)((ulonglong)result6 >> 0x20);\n            temp4 = (undefined4)result6;\n            temp6 = *(undefined4 *)(pointer6 + -1);\n            result0 = *(undefined4 *)((int)pointer6 + -4);\n            result6 = __aeabi_dadd(temp4,temp3,temp6,result0);\n            result5 = __subdf3(temp6,result0,(int)result6,(int)((ulonglong)result6 >> 0x20));\n            result5 = __aeabi_dadd((int)result5,(int)((ulonglong)result5 >> 0x20),temp4,temp3);\n            *pointer6 = result5;\n            pointer6 = pointer6 + -1;\n            *pointer6 = result6;\n          } while (&temp14 != pointer6);\n          if (1 < temp2) {\n            pointer6 = &temp14 + temp2;\n            result6 = CONCAT44(*(undefined4 *)((int)&temp14 + (temp2 * 2 + 1) * 4),\n                              *(undefined4 *)pointer6);\n            do {\n              temp3 = (undefined4)((ulonglong)result6 >> 0x20);\n              temp4 = (undefined4)result6;\n              temp6 = *(undefined4 *)(pointer6 + -1);\n              result0 = *(undefined4 *)((int)pointer6 + -4);\n              result6 = __aeabi_dadd(temp4,temp3,temp6,result0);\n              result5 = __subdf3(temp6,result0,(int)result6,(int)((ulonglong)result6 >> 0x20));\n              result5 = __aeabi_dadd((int)result5,(int)((ulonglong)result5 >> 0x20),temp4,temp3);\n              *pointer6 = result5;\n              pointer6 = pointer6 + -1;\n              *pointer6 = result6;\n            } while (&temp14 + 1 != pointer6);\n            result6 = 0;\n            pointer6 = &temp14 + temp2 + 1;\n            do {\n              presult2 = pointer6 + -1;\n              result6 = __aeabi_dadd((int)result6,(int)((ulonglong)result6 >> 0x20),\n                                    *(undefined4 *)presult2,*(undefined4 *)((int)pointer6 + -4));\n              pointer6 = presult2;\n            } while (&temp14 + 2 != presult2);\n            goto LAB_0800abe4;\n          }\n        }\n        result6 = 0;\n        goto LAB_0800abe4;\n      }\n      goto LAB_0800ab0e;\n    }\n    if (option < 1) {\n      if (option != 0) goto LAB_0800ab0e;\n      result6 = 0;\n      pointer6 = &temp14 + temp2 + 1;\n      do {\n        presult2 = pointer6 + -1;\n        result6 = __aeabi_dadd((int)result6,(int)((ulonglong)result6 >> 0x20),*(undefined4 *)presult2,\n                              *(undefined4 *)((int)pointer6 + -4));\n        pointer6 = presult2;\n      } while (&temp14 != presult2);\n      goto LAB_0800aafc;\n    }\n    result6 = 0;\n    pointer6 = &temp14 + temp2 + 1;\n    do {\n      presult2 = pointer6 + -1;\n      result6 = __aeabi_dadd((int)result6,(int)((ulonglong)result6 >> 0x20),*(undefined4 *)presult2,\n                            *(undefined4 *)((int)pointer6 + -4));\n      pointer6 = presult2;\n    } while (&temp14 != presult2);\n  }\n  temp5 = (int)((ulonglong)result6 >> 0x20);\n  temp4 = (undefined4)result6;\n  if (temp11 == 0) {\n    *(undefined8 *)local_260[1] = result6;\n    result6 = __subdf3((undefined4)temp14,temp14._4_4_,temp4,temp5);\n    if (temp2 < 1) goto LAB_0800ad26;\nLAB_0800ad04:\n    temp5 = 1;\n    pointer6 = &temp14;\n    do {\n      result6 = __aeabi_dadd((int)result6,(int)((ulonglong)result6 >> 0x20),\n                            *(undefined4 *)(pointer6 + 1),*(undefined4 *)((int)pointer6 + 0xc));\n      temp5 = temp5 + 1;\n      pointer6 = pointer6 + 1;\n    } while (temp5 <= temp2);\n    if (temp11 == 0) goto LAB_0800ad26;\n  }\n  else {\n    *local_260[1] = temp4;\n    *(int *)((int)local_260[1] + 4) = temp5 + -0x80000000;\n    result6 = __subdf3((undefined4)temp14,temp14._4_4_,temp4,temp5);\n    if (0 < temp2) goto LAB_0800ad04;\n  }\n  result6 = CONCAT44((int)((ulonglong)result6 >> 0x20) + -0x80000000,(int)result6);\nLAB_0800ad26:\n  *(undefined8 *)((int)local_260[1] + 8) = result6;\n  return result & 7;\n}\n\n",
            "renaming": {
                "FUN_0800a5a0": "calculate_result_0800a5a0",
                "param_1": "resultAddress",
                "param_2": "inputArray",
                "param_3": "inputArraySize",
                "param_4": "offset",
                "param_5": "option",
                "param_6": "param6",
                "puVar1": "pointer1",
                "uVar2": "result",
                "uVar3": "temp1",
                "iVar4": "temp2",
                "puVar5": "pointer2",
                "uVar6": "temp3",
                "ppuVar7": "pointer3",
                "uVar8": "temp4",
                "iVar9": "temp5",
                "puVar10": "pointer4",
                "uVar11": "temp6",
                "uVar12": "temp7",
                "puVar13": "pointer5",
                "iVar14": "temp12",
                "iVar15": "temp9",
                "iVar17": "temp10",
                "iVar21": "temp11",
                "puVar16": "pointer6",
                "local_284": "matrixPointer",
                "local_280": "matrixSize",
                "local_270": "currentIndex",
                "local_26c": "temp13",
                "local_258": "matrix",
                "local_168": "temp14",
                "local_160": "tempArray",
                "uStack_208": "temp15",
                "uStack_c8": "temp16"
            },
            "calling": [
                "__ieee754_rem_pio2"
            ],
            "called": [
                "__aeabi_dadd",
                "__aeabi_d2iz",
                "__aeabi_i2d",
                "floor",
                "__aeabi_dcmpeq",
                "__aeabi_dcmpge",
                "scalbn",
                "__subdf3",
                "__muldf3"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800adf0": {
            "entrypoint": "0x0800adf0",
            "current_name": "calculate_result_0800adf0",
            "code": "\nundefined4\ncalculate_result_0800adf0(undefined4 input_value,uint input_factor,undefined4 mul_operand1,undefined4 mul_operand2,int use_second_multiply)\n\n{\n  int conversion_result;\n  undefined4 mul_result1_high;\n  undefined4 mul_result1_low;\n  undefined4 mul_result2_high;\n  undefined4 mul_result2_low;\n  undefined4 add_result_high;\n  undefined8 add_result_low;\n  undefined8 mul_result3_high;\n  \n  if (((input_factor & 0x7fffffff) < 0x3e400000) && (conversion_result = __aeabi_d2iz(), conversion_result == 0)) {\n    return input_value;\n  }\n  add_result_low = __muldf3(input_value,input_factor,input_value);\n  mul_result2_high = (undefined4)((ulonglong)add_result_low >> 0x20);\n  mul_result1_low = (undefined4)add_result_low;\n  add_result_low = __muldf3(input_value,input_factor,mul_result1_low,mul_result2_high);\n  mul_result2_low = (undefined4)((ulonglong)add_result_low >> 0x20);\n  mul_result1_high = (undefined4)add_result_low;\n  add_result_low = __muldf3(mul_result1_low,mul_result2_high,0x5acfd57c,0x3de5d93a);\n  add_result_low = __subdf3((int)add_result_low,(int)((ulonglong)add_result_low >> 0x20),0x8a2b9ceb,0x3e5ae5e6);\n  add_result_low = __muldf3((int)add_result_low,(int)((ulonglong)add_result_low >> 0x20),mul_result1_low,mul_result2_high);\n  add_result_low = __aeabi_dadd((int)add_result_low,(int)((ulonglong)add_result_low >> 0x20),0x57b1fe7d,0x3ec71de3);\n  add_result_low = __muldf3((int)add_result_low,(int)((ulonglong)add_result_low >> 0x20),mul_result1_low,mul_result2_high);\n  add_result_low = __subdf3((int)add_result_low,(int)((ulonglong)add_result_low >> 0x20),0x19c161d5,0x3f2a01a0);\n  add_result_low = __muldf3((int)add_result_low,(int)((ulonglong)add_result_low >> 0x20),mul_result1_low,mul_result2_high);\n  add_result_low = __aeabi_dadd((int)add_result_low,(int)((ulonglong)add_result_low >> 0x20),0x1110f8a6,0x3f811111);\n  add_result_high = (undefined4)((ulonglong)add_result_low >> 0x20);\n  if (use_second_multiply != 0) {\n    mul_result3_high = __muldf3(mul_operand1,mul_operand2,0,0x3fe00000);\n    add_result_low = __muldf3(mul_result1_high,mul_result2_low,(int)add_result_low,add_result_high);\n    add_result_low = __subdf3((int)mul_result3_high,(int)((ulonglong)mul_result3_high >> 0x20),(int)add_result_low,\n                     (int)((ulonglong)add_result_low >> 0x20));\n    add_result_low = __muldf3((int)add_result_low,(int)((ulonglong)add_result_low >> 0x20),mul_result1_low,mul_result2_high);\n    add_result_low = __subdf3((int)add_result_low,(int)((ulonglong)add_result_low >> 0x20),mul_operand1,mul_operand2);\n    mul_result3_high = __muldf3(mul_result1_high,mul_result2_low,0x55555549,0x3fc55555);\n    add_result_low = __aeabi_dadd((int)add_result_low,(int)((ulonglong)add_result_low >> 0x20),(int)mul_result3_high,\n                         (int)((ulonglong)mul_result3_high >> 0x20));\n    mul_result1_low = __subdf3(input_value,input_factor,(int)add_result_low,(int)((ulonglong)add_result_low >> 0x20));\n    return mul_result1_low;\n  }\n  add_result_low = __muldf3(mul_result1_low,mul_result2_high,(int)add_result_low,add_result_high);\n  add_result_low = __subdf3((int)add_result_low,(int)((ulonglong)add_result_low >> 0x20),0x55555549,0x3fc55555);\n  add_result_low = __muldf3((int)add_result_low,(int)((ulonglong)add_result_low >> 0x20),mul_result1_high,mul_result2_low);\n  mul_result1_low = __aeabi_dadd((int)add_result_low,(int)((ulonglong)add_result_low >> 0x20),input_value,input_factor);\n  return mul_result1_low;\n}\n\n",
            "renaming": {
                "FUN_0800adf0": "calculate_result_0800adf0",
                "param_1": "input_value",
                "param_2": "input_factor",
                "param_3": "mul_operand1",
                "param_4": "mul_operand2",
                "param_5": "use_second_multiply",
                "iVar1": "conversion_result",
                "uVar2": "mul_result1_high",
                "uVar3": "mul_result1_low",
                "uVar4": "mul_result2_high",
                "uVar5": "mul_result2_low",
                "uVar6": "add_result_high",
                "uVar7": "add_result_low",
                "uVar8": "mul_result3_high"
            },
            "calling": [
                "sin",
                "cos"
            ],
            "called": [
                "__aeabi_dadd",
                "__aeabi_d2iz",
                "__subdf3",
                "__muldf3"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800af78": {
            "entrypoint": "0x0800af78",
            "current_name": "calculate_result_0800af78",
            "code": "\nint calculateResult_0800af78(int input1,uint input2)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  undefined4 result3;\n  undefined4 result4;\n  int comparisonResult;\n  undefined4 mulResult1;\n  uint maskedInput2;\n  undefined8 mulResult2;\n  undefined8 mulResult3;\n  undefined4 addResult;\n  \n  mulResult2 = CONCAT44(input2,input1);\n  maskedInput2 = input2 & 0x7fffffff;\n  if (maskedInput2 < 0x44100000) {\n    if (maskedInput2 < 0x3fdc0000) {\n      if (maskedInput2 < 0x3e200000) {\n        mulResult3 = __aeabi_dadd(input1,input2,0x8800759c,0x7e37e43c);\n        comparisonResult = __aeabi_dcmpgt((int)mulResult3,(int)((ulonglong)mulResult3 >> 0x20),0,0x3ff00000);\n        if (comparisonResult != 0) {\n          return input1;\n        }\n      }\n      comparisonResult = -1;\n    }\n    else {\n      mulResult2 = fabs();\n      result4 = (undefined4)((ulonglong)mulResult2 >> 0x20);\n      result1 = (undefined4)mulResult2;\n      if (maskedInput2 < 0x3ff30000) {\n        if (maskedInput2 < 0x3fe60000) {\n          mulResult2 = __aeabi_dadd(result1,result4,result1,result4);\n          mulResult2 = __subdf3((int)mulResult2,(int)((ulonglong)mulResult2 >> 0x20),0,0x3ff00000);\n          mulResult3 = __aeabi_dadd(result1,result4,0,0x40000000);\n          mulResult2 = __divdf3((int)mulResult2,(int)((ulonglong)mulResult2 >> 0x20),(int)mulResult3,\n                           (int)((ulonglong)mulResult3 >> 0x20));\n          comparisonResult = 0;\n        }\n        else {\n          mulResult2 = __subdf3(result1,result4,0,0x3ff00000);\n          mulResult3 = __aeabi_dadd(result1,result4,0,0x3ff00000);\n          mulResult2 = __divdf3((int)mulResult2,(int)((ulonglong)mulResult2 >> 0x20),(int)mulResult3,\n                           (int)((ulonglong)mulResult3 >> 0x20));\n          comparisonResult = 1;\n        }\n      }\n      else if (maskedInput2 < 0x40038000) {\n        mulResult2 = __subdf3(result1,result4,0,0x3ff80000);\n        mulResult3 = __muldf3(result1,result4,0,0x3ff80000);\n        mulResult3 = __aeabi_dadd((int)mulResult3,(int)((ulonglong)mulResult3 >> 0x20),0,0x3ff00000);\n        mulResult2 = __divdf3((int)mulResult2,(int)((ulonglong)mulResult2 >> 0x20),(int)mulResult3,\n                         (int)((ulonglong)mulResult3 >> 0x20));\n        comparisonResult = 2;\n      }\n      else {\n        mulResult2 = __divdf3(0,0xbff00000,result1,result4);\n        comparisonResult = 3;\n      }\n    }\n    addResult = (undefined4)((ulonglong)mulResult2 >> 0x20);\n    mulResult1 = (undefined4)mulResult2;\n    mulResult2 = __muldf3(mulResult1,addResult,mulResult1);\n    result2 = (undefined4)((ulonglong)mulResult2 >> 0x20);\n    result1 = (undefined4)mulResult2;\n    mulResult2 = __muldf3(result1,result2,result1,result2);\n    result3 = (undefined4)((ulonglong)mulResult2 >> 0x20);\n    result4 = (undefined4)mulResult2;\n    mulResult2 = __muldf3(result4,result3,0xe322da11,0x3f90ad3a);\n    mulResult2 = __aeabi_dadd((int)mulResult2,(int)((ulonglong)mulResult2 >> 0x20),0x24760deb,0x3fa97b4b);\n    mulResult2 = __muldf3((int)mulResult2,(int)((ulonglong)mulResult2 >> 0x20),result4,result3);\n    mulResult2 = __aeabi_dadd((int)mulResult2,(int)((ulonglong)mulResult2 >> 0x20),0xa0d03d51,0x3fb10d66);\n    mulResult2 = __muldf3((int)mulResult2,(int)((ulonglong)mulResult2 >> 0x20),result4,result3);\n    mulResult2 = __aeabi_dadd((int)mulResult2,(int)((ulonglong)mulResult2 >> 0x20),0xc54c206e,0x3fb745cd);\n    mulResult2 = __muldf3((int)mulResult2,(int)((ulonglong)mulResult2 >> 0x20),result4,result3);\n    mulResult2 = __aeabi_dadd((int)mulResult2,(int)((ulonglong)mulResult2 >> 0x20),0x920083ff,0x3fc24924);\n    mulResult2 = __muldf3((int)mulResult2,(int)((ulonglong)mulResult2 >> 0x20),result4,result3);\n    mulResult2 = __aeabi_dadd((int)mulResult2,(int)((ulonglong)mulResult2 >> 0x20),0x5555550d,0x3fd55555);\n    mulResult2 = __muldf3((int)mulResult2,(int)((ulonglong)mulResult2 >> 0x20),result1,result2);\n    result1 = (undefined4)((ulonglong)mulResult2 >> 0x20);\n    mulResult3 = __muldf3(result4,result3,0x2c6a6c2f,0xbfa2b444);\n    mulResult3 = __subdf3((int)mulResult3,(int)((ulonglong)mulResult3 >> 0x20),0x52defd9a,0x3fadde2d);\n    mulResult3 = __muldf3((int)mulResult3,(int)((ulonglong)mulResult3 >> 0x20),result4,result3);\n    mulResult3 = __subdf3((int)mulResult3,(int)((ulonglong)mulResult3 >> 0x20),0xaf749a6d,0x3fb3b0f2);\n    mulResult3 = __muldf3((int)mulResult3,(int)((ulonglong)mulResult3 >> 0x20),result4,result3);\n    mulResult3 = __subdf3((int)mulResult3,(int)((ulonglong)mulResult3 >> 0x20),0xfe231671,0x3fbc71c6);\n    mulResult3 = __muldf3((int)mulResult3,(int)((ulonglong)mulResult3 >> 0x20),result4,result3);\n    mulResult3 = __subdf3((int)mulResult3,(int)((ulonglong)mulResult3 >> 0x20),0x9998ebc4,0x3fc99999);\n    mulResult3 = __muldf3((int)mulResult3,(int)((ulonglong)mulResult3 >> 0x20),result4,result3);\n    result4 = (undefined4)((ulonglong)mulResult3 >> 0x20);\n    if (comparisonResult == -1) {\n      mulResult2 = __aeabi_dadd((int)mulResult2,result1,(int)mulResult3,result4);\n      mulResult2 = __muldf3((int)mulResult2,(int)((ulonglong)mulResult2 >> 0x20),mulResult1,addResult);\n      comparisonResult = __subdf3(mulResult1,addResult,(int)mulResult2,(int)((ulonglong)mulResult2 >> 0x20));\n      return comparisonResult;\n    }\n    mulResult2 = __aeabi_dadd((int)mulResult2,result1,(int)mulResult3,result4);\n    mulResult2 = __muldf3((int)mulResult2,(int)((ulonglong)mulResult2 >> 0x20),mulResult1,addResult);\n    mulResult2 = __subdf3((int)mulResult2,(int)((ulonglong)mulResult2 >> 0x20),\n                     *(undefined4 *)(&UNK_0800c090 + comparisonResult * 8),\n                     *(undefined4 *)(&UNK_0800c094 + comparisonResult * 8));\n    mulResult2 = __subdf3((int)mulResult2,(int)((ulonglong)mulResult2 >> 0x20),mulResult1,addResult);\n    comparisonResult = __subdf3(*(undefined4 *)(&UNK_0800c070 + comparisonResult * 8),\n                     *(undefined4 *)(&UNK_0800c074 + comparisonResult * 8),(int)mulResult2,\n                     (int)((ulonglong)mulResult2 >> 0x20));\n    if ((int)input2 < 0) {\n      return comparisonResult;\n    }\n  }\n  else {\n    if ((0x7ff00000 < maskedInput2) || ((maskedInput2 == 0x7ff00000 && (input1 != 0)))) {\n      comparisonResult = __aeabi_dadd(input1,input2,input1);\n      return comparisonResult;\n    }\n    comparisonResult = 0x54442d18;\n  }\n  return comparisonResult;\n}\n\n",
            "renaming": {
                "FUN_0800af78": "calculate_result_0800af78",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "result3",
                "uVar4": "result4",
                "iVar5": "comparisonResult",
                "uVar6": "mulResult1",
                "uVar7": "maskedInput2",
                "uVar8": "mulResult2",
                "uVar9": "mulResult3",
                "local_2c": "addResult"
            },
            "calling": [
                "__ieee754_atan2"
            ],
            "called": [
                "__aeabi_dcmpgt",
                "__aeabi_dadd",
                "fabs",
                "__divdf3",
                "__subdf3",
                "__muldf3"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b2cc": {
            "entrypoint": "0x0800b2cc",
            "current_name": "FUNC_0800b2cc",
            "code": "\nvoid FUNC_0800b2cc(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b2cc": "FUNC_0800b2cc"
            },
            "calling": [
                "__ieee754_rem_pio2",
                "atan",
                "__ieee754_atan2"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b2d4": {
            "entrypoint": "0x0800b2d4",
            "current_name": "get_sign_bit_0800b2d4",
            "code": "\nuint getSignBit_0800b2d4(undefined4 flags,uint value)\n\n{\n  return (value | 0x80000000) + 0x100000 >> 0x1f;\n}\n\n",
            "renaming": {
                "FUN_0800b2d4": "get_sign_bit_0800b2d4",
                "param_1": "flags",
                "param_2": "value"
            },
            "calling": [
                "hypot"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b2e0": {
            "entrypoint": "0x0800b2e0",
            "current_name": "get_default_value_0800b2e0",
            "code": "\nuint32 get_default_value_0800b2e0(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800b2e0": "get_default_value_0800b2e0",
                "undefined4": "uint32"
            },
            "calling": [
                "sqrt",
                "hypot"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b2e8": {
            "entrypoint": "0x0800b2e8",
            "current_name": "calculate_floating_point_value_0800b2e8",
            "code": "\nuint calculateFloatingPointValue_0800b2e8(uint value1,uint value2,int exponent,undefined4 constant)\n\n{\n  uint shiftedValue;\n  int updatedExponent;\n  uint highPart;\n  undefined8 combinedValue;\n  \n  combinedValue = CONCAT44(value2,value1);\n  shiftedValue = (value2 << 1) >> 0x15;\n  if (shiftedValue == 0) {\n    if ((value1 | value2 & 0x7fffffff) == 0) {\n      return value1;\n    }\n    combinedValue = multiplyValues(value1,value2,0,0x43500000);\n    if (exponent < -50000) goto LAB_0800b34a;\n    shiftedValue = ((uint)((int)((ulonglong)combinedValue >> 0x20) << 1) >> 0x15) - 0x36;\n  }\n  else if (shiftedValue == 0x7ff) {\n    shiftedValue = addValues(value1,value2,value1,value2,constant);\n    return shiftedValue;\n  }\n  highPart = (uint)((ulonglong)combinedValue >> 0x20);\n  updatedExponent = shiftedValue + exponent;\n  if (updatedExponent < 0x7ff) {\n    if (0 < updatedExponent) {\n      return (uint)combinedValue;\n    }\n    if (updatedExponent + 0x35 < 0 == isCarrySet(updatedExponent,0x35)) {\n      shiftedValue = multiplyValues((uint)combinedValue,highPart & 0x800fffff | (updatedExponent + 0x36) * 0x100000,0,0x3c900000);\n      return shiftedValue;\n    }\n    if (exponent < 0xc351) {\n      combinedValue = CONCAT44(highPart & 0x80000000 | 0x1a56e1f,0xc2f8f359);\nLAB_0800b34a:\n      shiftedValue = multiplyValues((int)combinedValue,(int)((ulonglong)combinedValue >> 0x20),0xc2f8f359,0x1a56e1f);\n      return shiftedValue;\n    }\n  }\n  shiftedValue = multiplyValues(0x8800759c,highPart & 0x80000000 | 0x7e37e43c,0x8800759c,0x7e37e43c);\n  return shiftedValue;\n}\n\n",
            "renaming": {
                "FUN_0800b2e8": "calculate_floating_point_value_0800b2e8",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "exponent",
                "param_4": "constant",
                "uVar1": "shiftedValue",
                "iVar2": "updatedExponent",
                "uVar3": "highPart",
                "uVar4": "combinedValue",
                "__muldf3": "multiplyValues",
                "__aeabi_dadd": "addValues",
                "SCARRY4": "isCarrySet"
            },
            "calling": [
                "__kernel_rem_pio2"
            ],
            "called": [
                "__aeabi_dadd",
                "__muldf3"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b3dc": {
            "entrypoint": "0x0800b3dc",
            "current_name": "get_data_0800b3dc",
            "code": "\nundefined4 get_data_0800b3dc(void)\n\n{\n  return DAT_20000018;\n}\n\n",
            "renaming": {
                "FUN_0800b3dc": "get_data_0800b3dc"
            },
            "calling": [
                "sqrt",
                "hypot"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b3e8": {
            "entrypoint": "0x0800b3e8",
            "current_name": "initialize_and_execute_callbacks_0800b3e8",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800b3f4) */\n/* WARNING: Removing unreachable block (ram,0x0800b3f6) */\n\nvoid initialize_and_execute_callbacks_0800b3e8(void)\n\n{\n  int iteration_count;\n  code **callback_pointer;\n  \n  _init();\n  iteration_count = 0;\n  callback_pointer = (code **)&DAT_0800c0b4;\n  do {\n    iteration_count = iteration_count + 1;\n    (**callback_pointer)();\n    callback_pointer = callback_pointer + 1;\n  } while (iteration_count != 2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b3e8": "initialize_and_execute_callbacks_0800b3e8",
                "iVar1": "iteration_count",
                "ppcVar2": "callback_pointer"
            },
            "calling": [
                "Reset_Handler"
            ],
            "called": [
                "frame_dummy",
                "register_fini",
                "_init"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b430": {
            "entrypoint": "0x0800b430",
            "current_name": "fill_memory_with_byte_0800b430",
            "code": "\nvoid fillMemoryWithByte_0800b430(undefined4 *dst,undefined value,uint numBytes)\n\n{\n  undefined4 *dst_ptr;\n  undefined4 *temp_ptr;\n  uint numIterations;\n  undefined4 concatValue;\n  bool isLastIteration;\n  \n  if (((uint)dst & 3) != 0) {\n    numIterations = numBytes - 1;\n    dst_ptr = dst;\n    if (numBytes == 0) {\n      return;\n    }\n    while( true ) {\n      dst = (undefined4 *)((int)dst_ptr + 1);\n      *(undefined *)dst_ptr = value;\n      numBytes = numIterations;\n      if (((uint)dst & 3) == 0) break;\n      isLastIteration = numIterations == 0;\n      numIterations = numIterations - 1;\n      dst_ptr = dst;\n      if (isLastIteration) {\n        return;\n      }\n    }\n  }\n  if (3 < numBytes) {\n    concatValue = CONCAT22(CONCAT11(value,value),CONCAT11(value,value));\n    if (0xf < numBytes) {\n      dst_ptr = dst + 4;\n      do {\n        dst_ptr[-4] = concatValue;\n        dst_ptr[-3] = concatValue;\n        dst_ptr[-2] = concatValue;\n        dst_ptr[-1] = concatValue;\n        dst_ptr = dst_ptr + 4;\n      } while (dst_ptr != (undefined4 *)((int)dst + (numBytes - 0x10 & 0xfffffff0) + 0x20));\n      numIterations = numBytes & 0xc;\n      dst = dst + ((numBytes - 0x10 >> 4) + 1) * 4;\n      numBytes = numBytes & 0xf;\n      if (numIterations == 0) goto joined_r0x0800b4a8;\n    }\n    dst_ptr = (undefined4 *)((numBytes - 4 & 0xfffffffc) + 4 + (int)dst);\n    do {\n      temp_ptr = dst + 1;\n      *dst = concatValue;\n      dst = temp_ptr;\n    } while (dst_ptr != temp_ptr);\n    numBytes = numBytes & 3;\n    dst = dst_ptr;\n  }\njoined_r0x0800b4a8:\n  if (numBytes != 0) {\n    dst_ptr = dst;\n    do {\n      temp_ptr = (undefined4 *)((int)dst_ptr + 1);\n      *(undefined *)dst_ptr = value;\n      dst_ptr = temp_ptr;\n    } while ((undefined4 *)(numBytes + (int)dst) != temp_ptr);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b430": "fill_memory_with_byte_0800b430",
                "param_1": "dst",
                "param_2": "value",
                "param_3": "numBytes",
                "puVar1": "dst_ptr",
                "puVar2": "temp_ptr",
                "uVar3": "numIterations",
                "uVar4": "concatValue",
                "bVar5": "isLastIteration"
            },
            "calling": [
                "grbl_main",
                "settings_read_coord_data",
                "st_reset",
                "debounce_init",
                "plan_init",
                "gc_execute_line",
                "gc_init",
                "eeprom_init",
                "homing_cycle",
                "mc_go_home"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b4d0": {
            "entrypoint": "0x0800b4d0",
            "current_name": "FUNC_0800b4d0",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800b4d4) */\n\nvoid FUNC_0800b4d0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b4d0": "FUNC_0800b4d0"
            },
            "calling": [
                "__libc_init_array"
            ],
            "called": [
                "__register_exitproc"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b51c": {
            "entrypoint": "0x0800b51c",
            "current_name": "FUNC_0800b51c",
            "code": "\nvoid FUNC_0800b51c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b51c": "FUNC_0800b51c"
            },
            "calling": [
                "__register_exitproc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b520": {
            "entrypoint": "0x0800b520",
            "current_name": "FUNC_0800b520",
            "code": "\nvoid FUNC_0800b520(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b520": "FUNC_0800b520"
            },
            "calling": [
                "__register_exitproc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b524": {
            "entrypoint": "0x0800b524",
            "current_name": "update_critical_section_0800b524",
            "code": "\nundefined4 updateCriticalSection_0800b524(int operation,undefined4 data,undefined4 value1,undefined4 value2)\n\n{\n  undefined *criticalSectionPtr;\n  undefined4 result;\n  uint bitMask;\n  uint currentIndex;\n  \n  __retarget_lock_acquire_recursive(DAT_20000448);\n  if (DAT_20000168 == (undefined *)0x0) {\n    DAT_20000168 = &DAT_2000016c;\n  }\n  criticalSectionPtr = DAT_20000168;\n  currentIndex = *(uint *)(DAT_20000168 + 4);\n  if ((int)currentIndex < 0x20) {\n    if (operation != 0) {\n      *(undefined4 *)(DAT_20000168 + currentIndex * 4 + 0x88) = value1;\n      bitMask = 1 << (currentIndex & 0xff);\n      *(uint *)(criticalSectionPtr + 0x188) = *(uint *)(criticalSectionPtr + 0x188) | bitMask;\n      *(undefined4 *)(criticalSectionPtr + currentIndex * 4 + 0x108) = value2;\n      if (operation == 2) {\n        *(uint *)(criticalSectionPtr + 0x18c) = bitMask | *(uint *)(criticalSectionPtr + 0x18c);\n      }\n    }\n    result = DAT_20000448;\n    *(uint *)(criticalSectionPtr + 4) = currentIndex + 1;\n    *(undefined4 *)(criticalSectionPtr + (currentIndex + 2) * 4) = data;\n    __retarget_lock_release_recursive(result);\n    result = 0;\n  }\n  else {\n    __retarget_lock_release_recursive(DAT_20000448);\n    result = 0xffffffff;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_0800b524": "update_critical_section_0800b524",
                "param_1": "operation",
                "param_2": "data",
                "param_3": "value1",
                "param_4": "value2",
                "puVar1": "criticalSectionPtr",
                "uVar2": "result",
                "uVar3": "bitMask",
                "uVar4": "currentIndex"
            },
            "calling": [
                "register_fini"
            ],
            "called": [
                "__retarget_lock_acquire_recursive",
                "__retarget_lock_release_recursive"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b5b0": {
            "entrypoint": "0x0800b5b0",
            "current_name": "FUNC_0800b5b0",
            "code": "\nvoid FUNC_0800b5b0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b5b0": "FUNC_0800b5b0"
            },
            "calling": [
                "frame_dummy",
                "__libc_init_array",
                "__do_global_dtors_aux"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b5bc": {
            "entrypoint": "0x0800b5bc",
            "current_name": "FUNC_0800b5bc",
            "code": "\nvoid FUNC_0800b5bc(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b5bc": "FUNC_0800b5bc"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        }
    },
    "used_tokens": 196330,
    "layers": [
        [
            "FUN_08000188",
            "FUN_080001ac",
            "FUN_080001f8",
            "FUN_08000210",
            "FUN_08000220",
            "FUN_08000268",
            "FUN_080002a0",
            "FUN_080002b6",
            "FUN_080002f0",
            "FUN_08000310",
            "FUN_08000340",
            "FUN_08000374",
            "FUN_080003ec",
            "FUN_08000478",
            "FUN_080004ac",
            "FUN_080004fc",
            "FUN_0800056c",
            "FUN_080005b4",
            "FUN_0800184c",
            "FUN_080018cc",
            "FUN_080018fc",
            "FUN_0800192c",
            "FUN_0800195c",
            "FUN_08001d4c",
            "FUN_08001ddc",
            "FUN_08001e98",
            "FUN_08001f00",
            "FUN_08002408",
            "FUN_080024c4",
            "FUN_080025e8",
            "FUN_08002638",
            "FUN_0800283a",
            "FUN_08002870",
            "FUN_08002896",
            "FUN_080028bc",
            "FUN_08002908",
            "FUN_08002978",
            "FUN_080029d8",
            "FUN_08002a94",
            "FUN_08002afc",
            "FUN_08002ba8",
            "FUN_08002c18",
            "FUN_08002e08",
            "FUN_08002edc",
            "FUN_08002ef0",
            "FUN_08002f24",
            "FUN_08002f40",
            "FUN_08002f74",
            "FUN_08002fac",
            "FUN_08002fd4",
            "FUN_08003004",
            "FUN_080035ec",
            "FUN_08003618",
            "FUN_0800369c",
            "FUN_080036c6",
            "FUN_080036f0",
            "FUN_08003740",
            "FUN_0800375c",
            "FUN_08003778",
            "FUN_080037fc",
            "FUN_08003826",
            "FUN_08003980",
            "FUN_080039a0",
            "FUN_080039bc",
            "FUN_08003a18",
            "FUN_08003a74",
            "FUN_08003b98",
            "FUN_08003f34",
            "FUN_08004030",
            "FUN_08004148",
            "FUN_080041a0",
            "FUN_08004228",
            "FUN_0800423c",
            "FUN_08004250",
            "FUN_080044e8",
            "FUN_080046d0",
            "FUN_08004900",
            "FUN_08004940",
            "FUN_08004bc0",
            "FUN_08004bf4",
            "FUN_08004c2a",
            "FUN_08004c48",
            "FUN_08004d2c",
            "FUN_08004d7c",
            "FUN_08004dd2",
            "FUN_08004e30",
            "FUN_080051b4",
            "FUN_08005238",
            "FUN_08005250",
            "FUN_0800525c",
            "FUN_080052ac",
            "FUN_080052dc",
            "FUN_08005324",
            "FUN_08005360",
            "FUN_080053a0",
            "FUN_08005760",
            "FUN_08005778",
            "FUN_08005790",
            "FUN_080057e4",
            "FUN_08005814",
            "FUN_0800583c",
            "FUN_0800585c",
            "FUN_0800587c",
            "FUN_080058a0",
            "FUN_08005900",
            "FUN_0800597c",
            "FUN_08005984",
            "FUN_080059b4",
            "FUN_080059f8",
            "FUN_08005a68",
            "FUN_08005a84",
            "FUN_08005a98",
            "FUN_08005bdc",
            "FUN_08005cec",
            "FUN_0800640c",
            "FUN_080064ec",
            "FUN_08006628",
            "FUN_08006680",
            "FUN_080066cc",
            "FUN_08006950",
            "FUN_08006998",
            "FUN_080069b4",
            "FUN_080069e4",
            "FUN_08006a18",
            "FUN_08006a58",
            "FUN_08006a8c",
            "FUN_08006ac0",
            "FUN_08006b00",
            "FUN_08006b54",
            "FUN_08006ba0",
            "FUN_08006c04",
            "FUN_08006c70",
            "FUN_08006c9c",
            "FUN_08006ce0",
            "FUN_08006cf6",
            "FUN_08006d4a",
            "FUN_08006d66",
            "FUN_08006d72",
            "FUN_08006d8a",
            "FUN_08006d98",
            "FUN_08006dc4",
            "FUN_08006de0",
            "FUN_08006dfe",
            "FUN_08006e1a",
            "FUN_08006e88",
            "FUN_0800733e",
            "FUN_0800738e",
            "FUN_080073d4",
            "FUN_08007402",
            "FUN_08007430",
            "FUN_08007436",
            "FUN_080074c8",
            "FUN_08007520",
            "FUN_08007540",
            "FUN_0800756c",
            "FUN_080076c8",
            "FUN_08007756",
            "FUN_0800778c",
            "FUN_08007854",
            "FUN_08007884",
            "FUN_080078f4",
            "FUN_080079c0",
            "FUN_080079e0",
            "FUN_08007a10",
            "FUN_08007a70",
            "FUN_08007ad0",
            "FUN_08007b70",
            "FUN_08007bc2",
            "FUN_08007bf0",
            "FUN_08007c40",
            "FUN_08007c5e",
            "FUN_08007c7c",
            "FUN_08007d08",
            "FUN_08007da8",
            "FUN_08007e08",
            "FUN_08007e1c",
            "FUN_08007e58",
            "FUN_08007e84",
            "FUN_08007ea4",
            "FUN_08007f54",
            "FUN_08008190",
            "FUN_08008250",
            "FUN_0800826a",
            "FUN_08008286",
            "FUN_080082d0",
            "FUN_080082d4",
            "FUN_0800854c",
            "FUN_0800856c",
            "FUN_08008590",
            "FUN_0800881c",
            "FUN_08008a02",
            "FUN_08008a74",
            "FUN_08008af0",
            "FUN_08008b00",
            "FUN_08008b10",
            "FUN_08008b24",
            "FUN_08008b4c",
            "FUN_08008b60",
            "FUN_08008b74",
            "FUN_08008ba0",
            "FUN_08008bf0",
            "FUN_08008c30",
            "FUN_08008cd8",
            "FUN_08008cdc",
            "FUN_08008e3c",
            "FUN_08008e44",
            "FUN_08008eec",
            "FUN_08009054",
            "FUN_0800919c",
            "FUN_080091fc",
            "FUN_08009204",
            "FUN_08009214",
            "FUN_08009228",
            "FUN_0800923c",
            "FUN_08009250",
            "FUN_08009264",
            "FUN_08009278",
            "FUN_080092c4",
            "FUN_08009318",
            "FUN_08009410",
            "FUN_080094c0",
            "FUN_080095b8",
            "FUN_08009654",
            "FUN_080096e8",
            "FUN_08009798",
            "FUN_0800981c",
            "FUN_080098d0",
            "FUN_08009990",
            "FUN_08009b24",
            "FUN_08009d78",
            "FUN_0800a1bc",
            "FUN_0800a348",
            "FUN_0800a5a0",
            "FUN_0800adf0",
            "FUN_0800af78",
            "FUN_0800b2d4",
            "FUN_0800b2e0",
            "FUN_0800b2e8",
            "FUN_0800b3dc",
            "FUN_0800b3e8",
            "FUN_0800b430",
            "FUN_0800b524"
        ],
        [
            "FUN_08001994",
            "FUN_08005c30",
            "FUN_08006d2e",
            "FUN_08007930",
            "FUN_08008640",
            "FUN_08008894"
        ],
        [
            "FUN_0800618c"
        ]
    ],
    "locked_functions": []
}