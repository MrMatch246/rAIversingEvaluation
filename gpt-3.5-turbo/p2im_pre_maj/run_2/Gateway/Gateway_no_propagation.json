{
    "functions": {
        "FUN_0800010c": {
            "entrypoint": "0x0800010c",
            "current_name": "initialize_flag_0800010c",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08000118) */\n\nundefined4 initializeFlag_0800010c(undefined4 inputValue)\n\n{\n  if ((char)DAT_200000f4 == '\\0') {\n    DAT_200000f4._0_1_ = '\\x01';\n  }\n  return inputValue;\n}\n\n",
            "renaming": {
                "FUN_0800010c": "initialize_flag_0800010c",
                "param_1": "inputValue"
            },
            "calling": [],
            "called": [
                "FUN_0800a424"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000178": {
            "entrypoint": "0x08000178",
            "current_name": "get_null_terminated_string_length_08000178",
            "code": "\nchar * get_null_terminated_string_length_08000178(char *string)\n\n{\n  char current_char;\n  char *next_char_ptr;\n  char *current_char_ptr;\n  \n  current_char_ptr = string;\n  do {\n    next_char_ptr = current_char_ptr + 1;\n    current_char = *current_char_ptr;\n    current_char_ptr = next_char_ptr;\n  } while (current_char != '\\0');\n  return next_char_ptr + (-1 - (int)string);\n}\n\n",
            "renaming": {
                "FUN_08000178": "get_null_terminated_string_length_08000178",
                "param_1": "string",
                "cVar1": "current_char",
                "pcVar2": "next_char_ptr",
                "pcVar3": "current_char_ptr"
            },
            "calling": [
                "FUN_08002e44",
                "FUN_080032a2"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000188": {
            "entrypoint": "0x08000188",
            "current_name": "trigger_software_interrupt_08000188",
            "code": "\nvoid triggerSoftwareInterrupt_08000188(void)\n\n{\n  software_interrupt(0x3f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000188": "trigger_software_interrupt_08000188"
            },
            "calling": [
                "FUN_0800018c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800018c": {
            "entrypoint": "0x0800018c",
            "current_name": "execute_function_0800018c",
            "code": "\nundefined4 executeFunction_0800018c(undefined4 input_1,undefined4 input_2,undefined4 input_3,undefined4 input_4)\n\n{\n  undefined4 returnValue;\n  \n  if (DAT_20000110 != 0) {\n    return 0;\n  }\n  returnValue = FUN_08000188(1,input_1,0,0,input_4);\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_0800018c": "execute_function_0800018c",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08000188"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000214": {
            "entrypoint": "0x08000214",
            "current_name": "process_data_08000214",
            "code": "\nvoid processData_08000214(uint inputValue,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  bool isConditionSatisfied;\n  int functionResult;\n  \n  if (0x3b < (int)inputValue) {\n    return;\n  }\n  functionResult = FUN_08002fa0(&DAT_200003d4,inputValue,param3,param4,param4);\n  if (functionResult == 3) {\n    if (inputValue < 0x3c) {\n      if ((&DAT_0800a908)[inputValue] == -1) {\n        functionResult = 0;\n      }\n      else {\n        functionResult = FUN_080036ac();\n        if (functionResult == 0) {\n          functionResult = 0;\n        }\n        else {\n          functionResult = FUN_080036ac((int)(char)(&DAT_0800a908)[inputValue]);\n          if (functionResult == 1) {\n            functionResult = 0;\n          }\n          else {\n            functionResult = FUN_0800738a((int)(char)(&DAT_0800a908)[inputValue],&DAT_0800a6cc);\n          }\n        }\n      }\n    }\n    else {\n      functionResult = 0;\n    }\n    if (functionResult != 0) {\n      FUN_080088e0(inputValue,param2);\n    }\n    FUN_08002fc2(&DAT_200003d4,inputValue,param2);\n  }\n  else if (functionResult == 4) {\n    if (inputValue < 0x3c) {\n      if ((&DAT_0800a908)[inputValue] == -1) {\n        isConditionSatisfied = false;\n      }\n      else {\n        functionResult = FUN_080036ac();\n        if (functionResult == 0) {\n          isConditionSatisfied = false;\n        }\n        else {\n          functionResult = FUN_080036ac((int)(char)(&DAT_0800a908)[inputValue]);\n          if (functionResult == 1) {\n            isConditionSatisfied = false;\n          }\n          else {\n            isConditionSatisfied = true;\n          }\n        }\n      }\n    }\n    else {\n      isConditionSatisfied = false;\n    }\n    if (isConditionSatisfied) {\n      FUN_080026b0(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[inputValue] * 3,param2);\n    }\n    FUN_08002fc2(&DAT_200003d4,inputValue,param2);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000214": "process_data_08000214",
                "param_1": "inputValue",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "bVar1": "isConditionSatisfied",
                "iVar2": "functionResult"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [
                "FUN_0800021a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800021a": {
            "entrypoint": "0x0800021a",
            "current_name": "perform_action_0800021a",
            "code": "\nvoid performAction_0800021a(uint input,undefined4 output,undefined4 param3,undefined4 param4)\n\n{\n  bool isConditionMet;\n  int result;\n  \n  result = FUN_08002fa0(&DAT_200003d4,input,param3,param4,param4);\n  if (result == 3) {\n    if (input < 0x3c) {\n      if ((&DAT_0800a908)[input] == -1) {\n        result = 0;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          result = 0;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[input]);\n          if (result == 1) {\n            result = 0;\n          }\n          else {\n            result = FUN_0800738a((int)(char)(&DAT_0800a908)[input],&DAT_0800a6cc);\n          }\n        }\n      }\n    }\n    else {\n      result = 0;\n    }\n    if (result != 0) {\n      FUN_080088e0(input,output);\n    }\n    FUN_08002fc2(&DAT_200003d4,input,output);\n  }\n  else if (result == 4) {\n    if (input < 0x3c) {\n      if ((&DAT_0800a908)[input] == -1) {\n        isConditionMet = false;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          isConditionMet = false;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[input]);\n          if (result == 1) {\n            isConditionMet = false;\n          }\n          else {\n            isConditionMet = true;\n          }\n        }\n      }\n    }\n    else {\n      isConditionMet = false;\n    }\n    if (isConditionMet) {\n      FUN_080026b0(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[input] * 3,output);\n    }\n    FUN_08002fc2(&DAT_200003d4,input,output);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800021a": "perform_action_0800021a",
                "param_1": "input",
                "param_2": "output",
                "param_3": "param3",
                "param_4": "param4",
                "bVar1": "isConditionMet",
                "iVar2": "result"
            },
            "calling": [
                "FUN_08000214"
            ],
            "called": [
                "FUN_080026b0",
                "FUN_08002fa0",
                "FUN_080036ac",
                "FUN_08002fc2",
                "FUN_0800738a",
                "FUN_080088e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000488": {
            "entrypoint": "0x08000488",
            "current_name": "update_bitmask_08000488",
            "code": "\nvoid updateBitmask_08000488(uint bitIndex,int setFlag)\n\n{\n  undefined4 result;\n  \n  if ((int)bitIndex < 0xe) {\n    if (setFlag == 0) {\n      DAT_20000114 = DAT_20000114 & ~(1 << (bitIndex & 0xff));\n      return;\n    }\n    DAT_20000114 = 1 << (bitIndex & 0xff) | DAT_20000114;\n    if (DAT_20000171 == '\\0') {\n      result = FUN_08008880();\n      FUN_08002ef2(&DAT_200003d4,bitIndex,result);\n      return;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000488": "update_bitmask_08000488",
                "param_1": "bitIndex",
                "param_2": "setFlag",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08008880",
                "FUN_08002ef2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080004d4": {
            "entrypoint": "0x080004d4",
            "current_name": "process_param_080004d4",
            "code": "\nvoid process_param_080004d4(int input_flag,int value)\n\n{\n  int counter;\n  undefined *data_ptr;\n  \n  if (input_flag != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    data_ptr = &DAT_2000022c;\n    for (counter = 0xb; -1 < counter; counter = counter + -1) {\n      FUN_08002580(data_ptr);\n      data_ptr = data_ptr + 3;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080004d4": "process_param_080004d4",
                "param_1": "input_flag",
                "param_2": "value",
                "iVar1": "counter",
                "puVar2": "data_ptr"
            },
            "calling": [],
            "called": [
                "FUN_08002580"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000500": {
            "entrypoint": "0x08000500",
            "current_name": "attach_servo_08000500",
            "code": "\nvoid attachServo_08000500(int servoIndex,int param2,int param3,undefined4 param4)\n\n{\n  if (0xb < DAT_200001ed) {\n    FUN_08002f14(&DAT_200003d4,\"Max servos attached\",param3,param4,param4);\n    return;\n  }\n  if (DAT_2000011c == 0) {\n    (&DAT_200001f0)[servoIndex] = DAT_200001ed;\n    DAT_200001ed = DAT_200001ed + 1;\n  }\n  else {\n    (&DAT_200001f0)[servoIndex] = (&DAT_2000011f)[DAT_2000011c];\n    DAT_2000011c = DAT_2000011c - 1;\n  }\n  if ((0 < param2) && (0 < param3)) {\n    FUN_080025ac(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[servoIndex] * 3,servoIndex,param2,param3);\n    return;\n  }\n  FUN_08002634(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[servoIndex] * 3,servoIndex);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000500": "attach_servo_08000500",
                "param_1": "servoIndex",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08002634",
                "FUN_08002f14",
                "FUN_080025ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000588": {
            "entrypoint": "0x08000588",
            "current_name": "update_data_08000588",
            "code": "\nvoid updateData_08000588(int index)\n\n{\n  FUN_08002644(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[index] * 3);\n  if (((&DAT_200001f0)[index] == DAT_200001ed) && (DAT_200001ed != '\\0')) {\n    DAT_200001ed = DAT_200001ed + -1;\n  }\n  else if (DAT_200001ed != '\\0') {\n    DAT_2000011c = DAT_2000011c + 1;\n    (&DAT_2000011f)[DAT_2000011c] = (&DAT_200001f0)[index];\n  }\n  (&DAT_200001f0)[index] = 0xff;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000588": "update_data_08000588",
                "param_1": "index"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08002644"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080005e0": {
            "entrypoint": "0x080005e0",
            "current_name": "initialize_data_080005e0",
            "code": "\nvoid initializeData_080005e0(void)\n\n{\n  DAT_20000170 = 0;\n  DAT_20000004 = 0xff;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080005e0": "initialize_data_080005e0"
            },
            "calling": [
                "FUN_08000aec",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080005f8": {
            "entrypoint": "0x080005f8",
            "current_name": "process_pin_080005f8",
            "code": "\nvoid processPin_080005f8(uint pinNumber,int pinMode)\n\n{\n  int result;\n  char tempChar;\n  bool isPinValid;\n  uint shiftedPinNumber;\n  \n  result = FUN_08002fa0(&DAT_200003d4,pinNumber);\n  if (result != 0x7f) {\n    result = FUN_08002fa0(&DAT_200003d4,pinNumber);\n    if (result == 6) {\n      if (DAT_20000170 == '\\0') {\n        tempChar = '\\0';\n      }\n      else {\n        tempChar = DAT_20000170;\n        if (pinMode == 6) {\n          tempChar = '\\0';\n        }\n      }\n    }\n    else {\n      tempChar = '\\0';\n    }\n    if (tempChar != '\\0') {\n      FUN_080005e0();\n    }\n    if (pinNumber < 0x3c) {\n      if ((&DAT_0800a908)[pinNumber] == -1) {\n        isPinValid = false;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          isPinValid = false;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n          if (result == 1) {\n            isPinValid = false;\n          }\n          else if (pinMode == 4) {\n            isPinValid = false;\n          }\n          else {\n            isPinValid = true;\n          }\n        }\n      }\n    }\n    else {\n      isPinValid = false;\n    }\n    if (isPinValid) {\n      if ((byte)(&DAT_200001f0)[pinNumber] < 0xc) {\n        result = FUN_080026f8(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[pinNumber] * 3);\n      }\n      else {\n        result = 0;\n      }\n      if (result != 0) {\n        FUN_08000588(pinNumber);\n      }\n    }\n    shiftedPinNumber = pinNumber - 0x2e & 0xff;\n    if (shiftedPinNumber < 0xe) {\n      if (pinNumber < 0x3c) {\n        result = (int)(char)(&DAT_0800a908)[pinNumber];\n      }\n      else {\n        result = -1;\n      }\n      result = FUN_080036ac(result);\n      if (result == 0) {\n        isPinValid = false;\n      }\n      else {\n        if (pinNumber < 0x3c) {\n          result = (int)(char)(&DAT_0800a908)[pinNumber];\n        }\n        else {\n          result = -1;\n        }\n        result = FUN_080036ac(result);\n        if (result == 1) {\n          isPinValid = false;\n        }\n        else {\n          isPinValid = true;\n        }\n      }\n    }\n    else {\n      isPinValid = false;\n    }\n    if (isPinValid) {\n      FUN_08000488(shiftedPinNumber,pinMode == 2);\n    }\n    if (pinNumber < 0x3c) {\n      if ((&DAT_0800a908)[pinNumber] == -1) {\n        isPinValid = false;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          isPinValid = false;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n          if (result == 1) {\n            isPinValid = false;\n          }\n          else {\n            isPinValid = true;\n          }\n        }\n      }\n    }\n    else {\n      isPinValid = false;\n    }\n    if (isPinValid) {\n      if ((pinMode == 0) || (pinMode == 0xb)) {\n        (&DAT_20000174)[pinNumber >> 3] = (&DAT_20000174)[pinNumber >> 3] | (byte)(1 << (pinNumber & 7));\n      }\n      else {\n        (&DAT_20000174)[pinNumber >> 3] = (&DAT_20000174)[pinNumber >> 3] & ~(byte)(1 << (pinNumber & 7));\n      }\n    }\n    FUN_08002fc2(&DAT_200003d4,pinNumber,0);\n    switch(pinMode) {\n    case 0:\n      if (pinNumber < 0x3c) {\n        if ((&DAT_0800a908)[pinNumber] == -1) {\n          isPinValid = false;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            isPinValid = false;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n            if (result == 1) {\n              isPinValid = false;\n            }\n            else {\n              isPinValid = true;\n            }\n          }\n        }\n      }\n      else {\n        isPinValid = false;\n      }\n      if (isPinValid) {\n        FUN_08008990(pinNumber,0);\n        FUN_08002fa8(&DAT_200003d4,pinNumber,0);\n        return;\n      }\n      break;\n    case 1:\n      if (pinNumber < 0x3c) {\n        if ((&DAT_0800a908)[pinNumber] == -1) {\n          isPinValid = false;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            isPinValid = false;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n            if (result == 1) {\n              isPinValid = false;\n            }\n            else {\n              isPinValid = true;\n            }\n          }\n        }\n      }\n      else {\n        isPinValid = false;\n      }\n      if (isPinValid) {\n        result = FUN_08002fa0(&DAT_200003d4,pinNumber);\n        if (result == 3) {\n          FUN_08008a24(pinNumber,0);\n        }\n        FUN_08008990(pinNumber,1);\n        FUN_08002fa8(&DAT_200003d4,pinNumber,1);\n        return;\n      }\n      break;\n    case 2:\n      if (shiftedPinNumber < 0xe) {\n        if (pinNumber < 0x3c) {\n          result = (int)(char)(&DAT_0800a908)[pinNumber];\n        }\n        else {\n          result = -1;\n        }\n        result = FUN_080036ac(result);\n        if (result == 0) {\n          isPinValid = false;\n        }\n        else {\n          if (pinNumber < 0x3c) {\n            result = (int)(char)(&DAT_0800a908)[pinNumber];\n          }\n          else {\n            result = -1;\n          }\n          result = FUN_080036ac(result);\n          if (result == 1) {\n            isPinValid = false;\n          }\n          else {\n            isPinValid = true;\n          }\n        }\n      }\n      else {\n        isPinValid = false;\n      }\n      if (isPinValid) {\n        if (pinNumber < 0x3c) {\n          if ((&DAT_0800a908)[pinNumber] == -1) {\n            isPinValid = false;\n          }\n          else {\n            result = FUN_080036ac();\n            if (result == 0) {\n              isPinValid = false;\n            }\n            else {\n              result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n              if (result == 1) {\n                isPinValid = false;\n              }\n            }\n          }\n        }\n        else {\n          isPinValid = false;\n        }\n        if (isPinValid) {\n          FUN_08008990(pinNumber,0);\n        }\n        FUN_08002fa8(&DAT_200003d4,pinNumber,2);\n        return;\n      }\n      break;\n    case 3:\n      if (pinNumber < 0x3c) {\n        if ((&DAT_0800a908)[pinNumber] == -1) {\n          result = 0;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            result = 0;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n            if (result == 1) {\n              result = 0;\n            }\n            else {\n              result = FUN_0800738a((int)(char)(&DAT_0800a908)[pinNumber],&DAT_0800a6cc);\n            }\n          }\n        }\n      }\n      else {\n        result = 0;\n      }\n      if (result != 0) {\n        FUN_08008990(pinNumber,1);\n        FUN_080088e0(pinNumber,0);\n        FUN_08002fa8(&DAT_200003d4,pinNumber,3);\n        return;\n      }\n      break;\n    case 4:\n      if (pinNumber < 0x3c) {\n        if ((&DAT_0800a908)[pinNumber] == -1) {\n          isPinValid = false;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            isPinValid = false;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n            if (result == 1) {\n              isPinValid = false;\n            }\n            else {\n              isPinValid = true;\n            }\n          }\n        }\n      }\n      else {\n        isPinValid = false;\n      }\n      if (isPinValid) {\n        FUN_08002fa8(&DAT_200003d4,pinNumber,4);\n        if (((byte)(&DAT_200001f0)[pinNumber] != 0xff) &&\n           (result = FUN_080026f8(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[pinNumber] * 3),\n           result != 0)) {\n          isPinValid = false;\n        }\n        if (isPinValid) {\n          FUN_08000500(pinNumber,0xffffffff);\n          return;\n        }\n      }\n      break;\n    default:\n      FUN_08002f14(&DAT_200003d4,\"Unknown pin mode\");\n      break;\n    case 6:\n      if (pinNumber < 0x3c) {\n        if ((&DAT_0800a908)[pinNumber] == -1) {\n          result = 0;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            result = 0;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n            if (result == 1) {\n              result = 0;\n            }\n            else {\n              result = FUN_0800738a((int)(char)(&DAT_0800a908)[pinNumber],&DAT_0800a69c);\n              if (result == 0) {\n                result = FUN_0800738a((int)(char)(&DAT_0800a908)[pinNumber],&DAT_0800a66c);\n              }\n            }\n          }\n        }\n      }\n      else {\n        result = 0;\n      }\n      if (result != 0) {\n        FUN_08002fa8(&DAT_200003d4,pinNumber,6);\n        return;\n      }\n      break;\n    case 10:\n      break;\n    case 0xb:\n      if (pinNumber < 0x3c) {\n        if ((&DAT_0800a908)[pinNumber] == -1) {\n          isPinValid = false;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            isPinValid = false;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n            if (result == 1) {\n              isPinValid = false;\n            }\n            else {\n              isPinValid = true;\n            }\n          }\n        }\n      }\n      else {\n        isPinValid = false;\n      }\n      if (isPinValid) {\n        FUN_08008990(pinNumber,2);\n        FUN_08002fa8(&DAT_200003d4,pinNumber,0xb);\n        FUN_08002fc2(&DAT_200003d4,pinNumber,1);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080005f8": "process_pin_080005f8",
                "param_1": "pinNumber",
                "param_2": "pinMode",
                "iVar1": "result",
                "cVar2": "tempChar",
                "bVar3": "isPinValid",
                "uVar4": "shiftedPinNumber"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_08000aec",
                "FUN_08000a64"
            ],
            "called": [
                "FUN_08002f14",
                "FUN_08008990",
                "FUN_080036ac",
                "FUN_080005e0",
                "FUN_08002fc2",
                "FUN_0800738a",
                "FUN_080088e0",
                "FUN_08000488",
                "FUN_08000588",
                "FUN_08002fa0",
                "FUN_08008a24",
                "FUN_08002fa8",
                "FUN_08000500",
                "FUN_080026f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a64": {
            "entrypoint": "0x08000a64",
            "current_name": "process_items_08000a64",
            "code": "\nvoid processItems_08000a64(void)\n\n{\n  int result;\n  uint index;\n  \n  for (index = 0; index < 0x3c; index = index + 1 & 0xff) {\n    if (index < 0x3c) {\n      if ((&DAT_0800a908)[index] == -1) {\n        result = 0;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          result = 0;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[index]);\n          if (result == 1) {\n            result = 0;\n          }\n          else {\n            result = FUN_0800738a((int)(char)(&DAT_0800a908)[index],&DAT_0800a69c);\n            if (result == 0) {\n              result = FUN_0800738a((int)(char)(&DAT_0800a908)[index],&DAT_0800a66c);\n            }\n          }\n        }\n      }\n    }\n    else {\n      result = 0;\n    }\n    if (result != 0) {\n      FUN_080005f8(index,6);\n    }\n  }\n  DAT_20000170 = 1;\n  FUN_08002a26(&DAT_20000314);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000a64": "process_items_08000a64",
                "iVar1": "result",
                "uVar2": "index"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [
                "FUN_080036ac",
                "FUN_08002a26",
                "FUN_0800738a",
                "FUN_080005f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000aec": {
            "entrypoint": "0x08000aec",
            "current_name": "initialize_game_data_08000aec",
            "code": "\nvoid initializeGameData_08000aec(void)\n\n{\n  bool bVar1;\n  int iVar2;\n  uint uVar3;\n  \n  DAT_20000171 = 1;\n  if (DAT_20000170 != '\\0') {\n    FUN_080005e0();\n  }\n  for (uVar3 = 0; uVar3 < 5; uVar3 = uVar3 + 1 & 0xff) {\n    (&DAT_200001e8)[uVar3] = 0;\n    (&DAT_20000174)[uVar3] = 0;\n    (&DAT_20000180)[uVar3] = 0;\n  }\n  for (uVar3 = 0; uVar3 < 0x3c; uVar3 = uVar3 + 1 & 0xff) {\n    if ((uVar3 - 0x2e & 0xff) < 0xe) {\n      if (uVar3 < 0x3c) {\n        iVar2 = (int)(char)(&DAT_0800a908)[uVar3];\n      }\n      else {\n        iVar2 = -1;\n      }\n      iVar2 = FUN_080036ac(iVar2);\n      if (iVar2 == 0) {\n        bVar1 = false;\n      }\n      else {\n        if (uVar3 < 0x3c) {\n          iVar2 = (int)(char)(&DAT_0800a908)[uVar3];\n        }\n        else {\n          iVar2 = -1;\n        }\n        iVar2 = FUN_080036ac(iVar2);\n        if (iVar2 == 1) {\n          bVar1 = false;\n        }\n        else {\n          bVar1 = true;\n        }\n      }\n    }\n    else {\n      bVar1 = false;\n    }\n    if (bVar1) {\n      FUN_080005f8(uVar3,2);\n    }\n    else {\n      if ((((uVar3 < 0x3c) && ((&DAT_0800a908)[uVar3] != -1)) &&\n          (iVar2 = FUN_080036ac(), iVar2 != 0)) &&\n         (iVar2 = FUN_080036ac((int)(char)(&DAT_0800a908)[uVar3]), iVar2 != 1)) {\n        bVar1 = true;\n      }\n      if (bVar1) {\n        FUN_080005f8(uVar3,1);\n      }\n    }\n    (&DAT_200001f0)[uVar3] = 0xff;\n  }\n  DAT_20000114 = 0;\n  DAT_2000011c = 0;\n  DAT_200001ed = 0;\n  DAT_20000171 = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000aec": "initialize_game_data_08000aec"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_080036ac",
                "FUN_080005e0",
                "FUN_080005f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000be8": {
            "entrypoint": "0x08000be8",
            "current_name": "check_and_set_data_08000be8",
            "code": "\nvoid checkAndSetData_08000be8(int index,uint mask,int condition,undefined4 param)\n\n{\n  undefined1 *dataPtr;\n  undefined1 *result;\n  \n  dataPtr = &DAT_20000174;\n  result = (undefined1 *)((byte)(&DAT_20000174)[index] & mask);\n  if ((condition != 0) ||\n     (dataPtr = (undefined1 *)(uint)(byte)(&DAT_20000180)[index], result != dataPtr)) {\n    FUN_08002efe(&DAT_200003d4,index,result,dataPtr,param);\n    (&DAT_20000180)[index] = (char)result;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000be8": "check_and_set_data_08000be8",
                "param_1": "index",
                "param_2": "mask",
                "param_3": "condition",
                "param_4": "param",
                "puVar1": "dataPtr",
                "puVar2": "result"
            },
            "calling": [
                "FUN_08000ef8"
            ],
            "called": [
                "FUN_08002efe"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000ef8": {
            "entrypoint": "0x08000ef8",
            "current_name": "configure_flags_08000ef8",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08001ade) */\n/* WARNING: Removing unreachable block (ram,0x08001a4a) */\n/* WARNING: Removing unreachable block (ram,0x080019b6) */\n/* WARNING: Removing unreachable block (ram,0x08001912) */\n/* WARNING: Removing unreachable block (ram,0x08001866) */\n/* WARNING: Removing unreachable block (ram,0x080017d2) */\n/* WARNING: Removing unreachable block (ram,0x0800173e) */\n/* WARNING: Removing unreachable block (ram,0x0800169a) */\n/* WARNING: Removing unreachable block (ram,0x080015ee) */\n/* WARNING: Removing unreachable block (ram,0x0800155a) */\n/* WARNING: Removing unreachable block (ram,0x08001490) */\n/* WARNING: Removing unreachable block (ram,0x080014a2) */\n/* WARNING: Removing unreachable block (ram,0x080014e4) */\n/* WARNING: Removing unreachable block (ram,0x080014b0) */\n/* WARNING: Removing unreachable block (ram,0x080014ba) */\n/* WARNING: Removing unreachable block (ram,0x080014e8) */\n/* WARNING: Removing unreachable block (ram,0x080014c2) */\n/* WARNING: Removing unreachable block (ram,0x080014b6) */\n/* WARNING: Removing unreachable block (ram,0x08001496) */\n/* WARNING: Removing unreachable block (ram,0x08001430) */\n/* WARNING: Removing unreachable block (ram,0x08001376) */\n/* WARNING: Removing unreachable block (ram,0x080012e2) */\n/* WARNING: Removing unreachable block (ram,0x0800124e) */\n/* WARNING: Removing unreachable block (ram,0x080011b8) */\n/* WARNING: Removing unreachable block (ram,0x08001100) */\n/* WARNING: Removing unreachable block (ram,0x0800106c) */\n/* WARNING: Removing unreachable block (ram,0x08000fd8) */\n/* WARNING: Removing unreachable block (ram,0x08000f42) */\n/* WARNING: Removing unreachable block (ram,0x08000f8e) */\n/* WARNING: Removing unreachable block (ram,0x08001022) */\n/* WARNING: Removing unreachable block (ram,0x080010b6) */\n/* WARNING: Removing unreachable block (ram,0x0800114a) */\n/* WARNING: Removing unreachable block (ram,0x08001204) */\n/* WARNING: Removing unreachable block (ram,0x08001298) */\n/* WARNING: Removing unreachable block (ram,0x0800132c) */\n/* WARNING: Removing unreachable block (ram,0x080013c0) */\n/* WARNING: Removing unreachable block (ram,0x0800147c) */\n/* WARNING: Removing unreachable block (ram,0x08001510) */\n/* WARNING: Removing unreachable block (ram,0x080015a4) */\n/* WARNING: Removing unreachable block (ram,0x08001638) */\n/* WARNING: Removing unreachable block (ram,0x080016f4) */\n/* WARNING: Removing unreachable block (ram,0x08001788) */\n/* WARNING: Removing unreachable block (ram,0x0800181c) */\n/* WARNING: Removing unreachable block (ram,0x080018b0) */\n/* WARNING: Removing unreachable block (ram,0x0800196c) */\n/* WARNING: Removing unreachable block (ram,0x08001a00) */\n/* WARNING: Removing unreachable block (ram,0x08001a94) */\n/* WARNING: Removing unreachable block (ram,0x08001b28) */\n/* WARNING: Removing unreachable block (ram,0x080014ca) */\n\nvoid configureFlags_08000ef8(void)\n\n{\n  byte bVar1;\n  int iVar2;\n  bool bVar3;\n  byte bVar4;\n  \n  bVar1 = DAT_20000174;\n  if (DAT_200001e8 != '\\0') {\n    iVar2 = FUN_080036ac();\n    if (iVar2 == 0) {\n      bVar4 = 0;\n    }\n    else {\n      iVar2 = FUN_080036ac(3);\n      if (iVar2 == 1) {\n        bVar4 = 0;\n      }\n      else if ((bVar1 & 1) == 0) {\n        bVar4 = 0;\n      }\n      else {\n        iVar2 = FUN_08008a6c(0);\n        if (iVar2 == 0) {\n          bVar4 = 0;\n        }\n        else {\n          bVar4 = 1;\n        }\n      }\n    }\n    iVar2 = FUN_080036ac();\n    if (iVar2 == 0) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac(2);\n      if (iVar2 == 1) {\n        bVar3 = false;\n      }\n      else if ((bVar1 & 2) == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_08008a6c(1);\n        if (iVar2 == 0) {\n          bVar3 = false;\n        }\n        else {\n          bVar3 = true;\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 2;\n    }\n    iVar2 = FUN_080036ac();\n    if (iVar2 == 0) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac(10);\n      if (iVar2 == 1) {\n        bVar3 = false;\n      }\n      else if ((bVar1 & 4) == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_08008a6c(2);\n        if (iVar2 == 0) {\n          bVar3 = false;\n        }\n        else {\n          bVar3 = true;\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 4;\n    }\n    iVar2 = FUN_080036ac();\n    if (iVar2 == 0) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac(0x13);\n      if (iVar2 == 1) {\n        bVar3 = false;\n      }\n      else if ((bVar1 & 8) == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_08008a6c(3);\n        if (iVar2 == 0) {\n          bVar3 = false;\n        }\n        else {\n          bVar3 = true;\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 8;\n    }\n    iVar2 = FUN_080036ac();\n    if (iVar2 == 0) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac(0x15);\n      if (iVar2 == 1) {\n        bVar3 = false;\n      }\n      else if ((bVar1 & 0x10) == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_08008a6c(4);\n        if (iVar2 == 0) {\n          bVar3 = false;\n        }\n        else {\n          bVar3 = true;\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 0x10;\n    }\n    iVar2 = FUN_080036ac();\n    if (iVar2 == 0) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac(0x14);\n      if (iVar2 == 1) {\n        bVar3 = false;\n      }\n      else if ((bVar1 & 0x20) == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_08008a6c(5);\n        if (iVar2 == 0) {\n          bVar3 = false;\n        }\n        else {\n          bVar3 = true;\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 0x20;\n    }\n    iVar2 = FUN_080036ac();\n    if (iVar2 == 0) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac(0x1a);\n      if (iVar2 == 1) {\n        bVar3 = false;\n      }\n      else if ((bVar1 & 0x40) == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_08008a6c(6);\n        if (iVar2 == 0) {\n          bVar3 = false;\n        }\n        else {\n          bVar3 = true;\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 0x40;\n    }\n    iVar2 = FUN_080036ac();\n    if (iVar2 == 0) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac(8);\n      if (iVar2 == 1) {\n        bVar3 = false;\n      }\n      else if ((bVar1 & 0x80) == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_08008a6c(7);\n        if (iVar2 == 0) {\n          bVar3 = false;\n        }\n        else {\n          bVar3 = true;\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 0x80;\n    }\n    FUN_08000be8(0,bVar4);\n  }\n  bVar1 = DAT_20000175;\n  if (DAT_200001e9 != '\\0') {\n    iVar2 = FUN_080036ac();\n    if (iVar2 == 0) {\n      bVar4 = 0;\n    }\n    else {\n      iVar2 = FUN_080036ac(9);\n      if (iVar2 == 1) {\n        bVar4 = 0;\n      }\n      else if ((bVar1 & 1) == 0) {\n        bVar4 = 0;\n      }\n      else {\n        iVar2 = FUN_08008a6c(8);\n        if (iVar2 == 0) {\n          bVar4 = 0;\n        }\n        else {\n          bVar4 = 1;\n        }\n      }\n    }\n    iVar2 = FUN_080036ac();\n    if (iVar2 == 0) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac(0x27);\n      if (iVar2 == 1) {\n        bVar3 = false;\n      }\n      else if ((bVar1 & 2) == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_08008a6c(9);\n        if (iVar2 == 0) {\n          bVar3 = false;\n        }\n        else {\n          bVar3 = true;\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 2;\n    }\n    iVar2 = FUN_080036ac();\n    if (iVar2 == 0) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac(0x16);\n      if (iVar2 == 1) {\n        bVar3 = false;\n      }\n      else if ((bVar1 & 4) == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_08008a6c(10);\n        if (iVar2 == 0) {\n          bVar3 = false;\n        }\n        else {\n          bVar3 = true;\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 4;\n    }\n    iVar2 = FUN_080036ac();\n    if (iVar2 == 0) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac(7);\n      if (iVar2 == 1) {\n        bVar3 = false;\n      }\n      else if ((bVar1 & 8) == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_08008a6c(0xb);\n        if (iVar2 == 0) {\n          bVar3 = false;\n        }\n        else {\n          bVar3 = true;\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 8;\n    }\n    iVar2 = FUN_080036ac();\n    if (iVar2 == 0) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac(6);\n      if (iVar2 == 1) {\n        bVar3 = false;\n      }\n      else if ((bVar1 & 0x10) == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_08008a6c(0xc);\n        if (iVar2 == 0) {\n          bVar3 = false;\n        }\n        else {\n          bVar3 = true;\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 0x10;\n    }\n    iVar2 = FUN_080036ac();\n    if (iVar2 == 0) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac(5);\n      if (iVar2 == 1) {\n        bVar3 = false;\n      }\n      else if ((bVar1 & 0x20) == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_08008a6c(0xd);\n        if (iVar2 == 0) {\n          bVar3 = false;\n        }\n        else {\n          bVar3 = true;\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 0x20;\n    }\n    iVar2 = FUN_080036ac();\n    if (iVar2 == 0) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac(0x19);\n      if (iVar2 == 1) {\n        bVar3 = false;\n      }\n      else if ((bVar1 & 0x40) == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_08008a6c(0xe);\n        if (iVar2 == 0) {\n          bVar3 = false;\n        }\n        else {\n          bVar3 = true;\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 0x40;\n    }\n    iVar2 = FUN_080036ac();\n    if (iVar2 == 0) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac(0x18);\n      if (iVar2 == 1) {\n        bVar3 = false;\n      }\n      else if ((bVar1 & 0x80) == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_08008a6c(0xf);\n        if (iVar2 == 0) {\n          bVar3 = false;\n        }\n        else {\n          bVar3 = true;\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 0x80;\n    }\n    FUN_08000be8(1,bVar4,0);\n  }\n  bVar1 = DAT_20000176;\n  if (DAT_200001ea != '\\0') {\n    iVar2 = FUN_080036ac();\n    if (iVar2 == 0) {\n      bVar4 = 0;\n    }\n    else {\n      iVar2 = FUN_080036ac(0x2a);\n      if (iVar2 == 1) {\n        bVar4 = 0;\n      }\n      else if ((bVar1 & 1) == 0) {\n        bVar4 = 0;\n      }\n      else {\n        iVar2 = FUN_08008a6c(0x10);\n        if (iVar2 == 0) {\n          bVar4 = 0;\n        }\n        else {\n          bVar4 = 1;\n        }\n      }\n    }\n    iVar2 = FUN_080036ac();\n    if (iVar2 == 0) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac(0x2c);\n      if (iVar2 == 1) {\n        bVar3 = false;\n      }\n      else if ((bVar1 & 2) == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_08008a6c(0x11);\n        if (iVar2 == 0) {\n          bVar3 = false;\n        }\n        else {\n          bVar3 = true;\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 2;\n    }\n    iVar2 = FUN_080036ac();\n    if (iVar2 == 0) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac(0xd);\n      if (iVar2 == 1) {\n        bVar3 = false;\n      }\n      else if ((bVar1 & 8) == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_08008a6c(0x13);\n        if (iVar2 == 0) {\n          bVar3 = false;\n        }\n        else {\n          bVar3 = true;\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 8;\n    }\n    iVar2 = FUN_080036ac();\n    if (iVar2 == 0) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac(0xe);\n      if (iVar2 == 1) {\n        bVar3 = false;\n      }\n      else if ((bVar1 & 0x10) == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_08008a6c(0x14);\n        if (iVar2 == 0) {\n          bVar3 = false;\n        }\n        else {\n          bVar3 = true;\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 0x10;\n    }\n    iVar2 = FUN_080036ac();\n    if (iVar2 == 0) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac(0xf);\n      if (iVar2 == 1) {\n        bVar3 = false;\n      }\n      else if ((bVar1 & 0x20) == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_08008a6c(0x15);\n        if (iVar2 == 0) {\n          bVar3 = false;\n        }\n        else {\n          bVar3 = true;\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 0x20;\n    }\n    iVar2 = FUN_080036ac();\n    if (iVar2 == 0) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac(0x17);\n      if (iVar2 == 1) {\n        bVar3 = false;\n      }\n      else if ((bVar1 & 0x40) == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_08008a6c(0x16);\n        if (iVar2 == 0) {\n          bVar3 = false;\n        }\n        else {\n          bVar3 = true;\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 0x40;\n    }\n    iVar2 = FUN_080036ac();\n    if (iVar2 == 0) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac(0x2d);\n      if (iVar2 == 1) {\n        bVar3 = false;\n      }\n      else if ((bVar1 & 0x80) == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_08008a6c(0x17);\n        if (iVar2 == 0) {\n          bVar3 = false;\n        }\n        else {\n          bVar3 = true;\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 0x80;\n    }\n    FUN_08000be8(2,bVar4,0);\n  }\n  bVar1 = DAT_20000177;\n  if (DAT_200001eb != '\\0') {\n    iVar2 = FUN_080036ac();\n    if (iVar2 == 0) {\n      bVar4 = 0;\n    }\n    else {\n      iVar2 = FUN_080036ac(0x2e);\n      if (iVar2 == 1) {\n        bVar4 = 0;\n      }\n      else if ((bVar1 & 1) == 0) {\n        bVar4 = 0;\n      }\n      else {\n        iVar2 = FUN_08008a6c(0x18);\n        if (iVar2 == 0) {\n          bVar4 = 0;\n        }\n        else {\n          bVar4 = 1;\n        }\n      }\n    }\n    iVar2 = FUN_080036ac();\n    if (iVar2 == 0) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac(0x2f);\n      if (iVar2 == 1) {\n        bVar3 = false;\n      }\n      else if ((bVar1 & 2) == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_08008a6c(0x19);\n        if (iVar2 == 0) {\n          bVar3 = false;\n        }\n        else {\n          bVar3 = true;\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 2;\n    }\n    iVar2 = FUN_080036ac();\n    if (iVar2 == 0) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac(0x30);\n      if (iVar2 == 1) {\n        bVar3 = false;\n      }\n      else if ((bVar1 & 4) == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_08008a6c(0x1a);\n        if (iVar2 == 0) {\n          bVar3 = false;\n        }\n        else {\n          bVar3 = true;\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 4;\n    }\n    iVar2 = FUN_080036ac();\n    if (iVar2 == 0) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac(0x31);\n      if (iVar2 == 1) {\n        bVar3 = false;\n      }\n      else if ((bVar1 & 8) == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_08008a6c(0x1b);\n        if (iVar2 == 0) {\n          bVar3 = false;\n        }\n        else {\n          bVar3 = true;\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 8;\n    }\n    iVar2 = FUN_080036ac();\n    if (iVar2 == 0) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac(0x22);\n      if (iVar2 == 1) {\n        bVar3 = false;\n      }\n      else if ((bVar1 & 0x10) == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_08008a6c(0x1c);\n        if (iVar2 == 0) {\n          bVar3 = false;\n        }\n        else {\n          bVar3 = true;\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 0x10;\n    }\n    iVar2 = FUN_080036ac();\n    if (iVar2 == 0) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac(0x23);\n      if (iVar2 == 1) {\n        bVar3 = false;\n      }\n      else if ((bVar1 & 0x20) == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_08008a6c(0x1d);\n        if (iVar2 == 0) {\n          bVar3 = false;\n        }\n        else {\n          bVar3 = true;\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 0x20;\n    }\n    iVar2 = FUN_080036ac();\n    if (iVar2 == 0) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac(0x2b);\n      if (iVar2 == 1) {\n        bVar3 = false;\n      }\n      else if ((bVar1 & 0x40) == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_08008a6c(0x1e);\n        if (iVar2 == 0) {\n          bVar3 = false;\n        }\n        else {\n          bVar3 = true;\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 0x40;\n    }\n    iVar2 = FUN_080036ac();\n    if (iVar2 == 0) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac(0x32);\n      if (iVar2 == 1) {\n        bVar3 = false;\n      }\n      else if ((bVar1 & 0x80) == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_08008a6c(0x1f);\n        if (iVar2 == 0) {\n          bVar3 = false;\n        }\n        else {\n          bVar3 = true;\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 0x80;\n    }\n    FUN_08000be8(3,bVar4,0);\n  }\n  bVar1 = DAT_20000178;\n  if (DAT_200001ec != '\\0') {\n    iVar2 = FUN_080036ac();\n    if (iVar2 == 0) {\n      bVar4 = 0;\n    }\n    else {\n      iVar2 = FUN_080036ac(0x29);\n      if (iVar2 == 1) {\n        bVar4 = 0;\n      }\n      else if ((bVar1 & 1) == 0) {\n        bVar4 = 0;\n      }\n      else {\n        iVar2 = FUN_08008a6c(0x20);\n        if (iVar2 == 0) {\n          bVar4 = 0;\n        }\n        else {\n          bVar4 = 1;\n        }\n      }\n    }\n    iVar2 = FUN_080036ac();\n    if (iVar2 == 0) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac(0x28);\n      if (iVar2 == 1) {\n        bVar3 = false;\n      }\n      else if ((bVar1 & 2) == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_08008a6c(0x21);\n        if (iVar2 == 0) {\n          bVar3 = false;\n        }\n        else {\n          bVar3 = true;\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 2;\n    }\n    iVar2 = FUN_080036ac();\n    if (iVar2 == 0) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac(0x26);\n      if (iVar2 == 1) {\n        bVar3 = false;\n      }\n      else if ((bVar1 & 4) == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_08008a6c(0x22);\n        if (iVar2 == 0) {\n          bVar3 = false;\n        }\n        else {\n          bVar3 = true;\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 4;\n    }\n    iVar2 = FUN_080036ac();\n    if (iVar2 == 0) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac(0x25);\n      if (iVar2 == 1) {\n        bVar3 = false;\n      }\n      else if ((bVar1 & 8) == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_08008a6c(0x23);\n        if (iVar2 == 0) {\n          bVar3 = false;\n        }\n        else {\n          bVar3 = true;\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 8;\n    }\n    iVar2 = FUN_080036ac();\n    if (iVar2 == 0) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac(0xc);\n      if (iVar2 == 1) {\n        bVar3 = false;\n      }\n      else if ((bVar1 & 0x10) == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_08008a6c(0x24);\n        if (iVar2 == 0) {\n          bVar3 = false;\n        }\n        else {\n          bVar3 = true;\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 0x10;\n    }\n    iVar2 = FUN_080036ac();\n    if (iVar2 == 0) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac(0xb);\n      if (iVar2 == 1) {\n        bVar3 = false;\n      }\n      else if ((bVar1 & 0x20) == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_08008a6c(0x25);\n        if (iVar2 == 0) {\n          bVar3 = false;\n        }\n        else {\n          bVar3 = true;\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 0x20;\n    }\n    iVar2 = FUN_080036ac();\n    if (iVar2 == 0) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac(0x1c);\n      if (iVar2 == 1) {\n        bVar3 = false;\n      }\n      else if ((bVar1 & 0x40) == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_08008a6c(0x26);\n        if (iVar2 == 0) {\n          bVar3 = false;\n        }\n        else {\n          bVar3 = true;\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 0x40;\n    }\n    iVar2 = FUN_080036ac();\n    if (iVar2 == 0) {\n      bVar3 = false;\n    }\n    else {\n      iVar2 = FUN_080036ac(0x1b);\n      if (iVar2 == 1) {\n        bVar3 = false;\n      }\n      else if ((bVar1 & 0x80) == 0) {\n        bVar3 = false;\n      }\n      else {\n        iVar2 = FUN_08008a6c(0x27);\n        if (iVar2 == 0) {\n          bVar3 = false;\n        }\n        else {\n          bVar3 = true;\n        }\n      }\n    }\n    if (bVar3) {\n      bVar4 = bVar4 | 0x80;\n    }\n    FUN_08000be8(4,bVar4,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000ef8": "configure_flags_08000ef8"
            },
            "calling": [
                "FUN_080022f8"
            ],
            "called": [
                "FUN_08000be8",
                "FUN_080036ac",
                "FUN_08008a6c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001b48": {
            "entrypoint": "0x08001b48",
            "current_name": "initialize_firmware_08001b48",
            "code": "\nvoid initializeFirmware_08001b48(void)\n\n{\n  FUN_08002e44(&DAT_200003d4,\"/home/bo/p2im/p2im-real_firmware_scratch/Gateway/StandardFirmata.ino\",\n               2,5);\n  FUN_08002f2c(&DAT_200003d4,0xe0,0x8000215);\n  FUN_08002f2c(&DAT_200003d4,0x90,label1);\n  FUN_08002f2c(&DAT_200003d4,0xc0,0x8000489);\n  FUN_08002f2c(&DAT_200003d4,0xd0,label2);\n  FUN_08002f2c(&DAT_200003d4,0xf4,0x80005f9);\n  FUN_08002f2c(&DAT_200003d4,0xf5,label3);\n  FUN_08002f94(&DAT_200003d4,0xf0,0x8001cd1);\n  FUN_08002f84(&DAT_200003d4,0xff,0x8000aed);\n  FUN_08003048(&DAT_200003d4,0xe100);\n  FUN_08000aec();\n  FUN_0800018c(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001b48": "initialize_firmware_08001b48",
                "&LAB_080002ec_1": "label1",
                "&LAB_08000c18_1": "label2",
                "&LAB_080001a8_1": "label3"
            },
            "calling": [
                "FUN_08008f1c"
            ],
            "called": [
                "FUN_08002f84",
                "FUN_08000aec",
                "FUN_08003048",
                "FUN_08002f94",
                "FUN_08002f2c",
                "FUN_08002e44",
                "FUN_0800018c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001bf8": {
            "entrypoint": "0x08001bf8",
            "current_name": "initialize_data_08001bf8",
            "code": "\nvoid initializeData_08001bf8(undefined4 dataPointer1,undefined4 dataPointer2,undefined4 dataPointer3,undefined4 dataPointer4)\n\n{\n  FUN_0800288c(&DAT_20000314,dataPointer1,dataPointer3,dataPointer4,dataPointer4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001bf8": "initialize_data_08001bf8",
                "param_1": "dataPointer1",
                "param_2": "dataPointer2",
                "param_3": "dataPointer3",
                "param_4": "dataPointer4"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_08001c18"
            ],
            "called": [
                "FUN_0800288c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c08": {
            "entrypoint": "0x08001c08",
            "current_name": "initialize_data_08001c08",
            "code": "\nundefined initializeData_08001c08(void)\n\n{\n  undefined result;\n  \n  result = FUN_08002720(&DAT_20000314);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08001c08": "initialize_data_08001c08",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08001c18"
            ],
            "called": [
                "FUN_08002720"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c18": {
            "entrypoint": "0x08001c18",
            "current_name": "receive_data_from_i2_c_08001c18",
            "code": "\nvoid receiveDataFromI2C_08001c18(undefined4 deviceAddress,uint registerAddress,int numBytes,undefined4 displayBuffer)\n\n{\n  undefined receivedByte;\n  int bytesReceived;\n  int result;\n  bool isReceived;\n  \n  if (registerAddress == 0xffffffff) {\n    registerAddress = 0;\n  }\n  else {\n    FUN_08002a30(&DAT_20000314,deviceAddress);\n    FUN_08001bf8(registerAddress & 0xff);\n    FUN_08002a58(&DAT_20000314,displayBuffer);\n  }\n  FUN_08002c14(&DAT_20000314,deviceAddress,numBytes);\n  bytesReceived = FUN_0800270c(&DAT_20000314);\n  if (numBytes < bytesReceived) {\n    FUN_08002f14(&DAT_200003d4,\"I2C: Too many bytes received\");\n  }\n  else {\n    bytesReceived = FUN_0800270c(&DAT_20000314);\n    if (bytesReceived < numBytes) {\n      FUN_08002f14(&DAT_200003d4,\"I2C: Too few bytes received\");\n    }\n  }\n  DAT_20000130 = (undefined)deviceAddress;\n  DAT_20000131 = (undefined)registerAddress;\n  bytesReceived = 0;\n  while( true ) {\n    if (bytesReceived < numBytes) {\n      result = FUN_0800270c(&DAT_20000314);\n      if (result == 0) {\n        isReceived = false;\n      }\n      else {\n        isReceived = true;\n      }\n    }\n    else {\n      isReceived = false;\n    }\n    if (!isReceived) break;\n    receivedByte = FUN_08001c08();\n    (&DAT_20000132)[bytesReceived] = receivedByte;\n    bytesReceived = bytesReceived + 1;\n  }\n  FUN_08002f0a(&DAT_200003d4,0x77,numBytes + 2U & 0xff,&DAT_20000130);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001c18": "receive_data_from_i2_c_08001c18",
                "param_1": "deviceAddress",
                "param_2": "registerAddress",
                "param_3": "numBytes",
                "param_4": "displayBuffer",
                "uVar1": "receivedByte",
                "iVar2": "bytesReceived",
                "iVar3": "result",
                "bVar4": "isReceived"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_080022f8"
            ],
            "called": [
                "FUN_08002f14",
                "FUN_08002f0a",
                "FUN_0800270c",
                "FUN_08002a58",
                "FUN_08001bf8",
                "FUN_08002c14",
                "FUN_08002a30",
                "FUN_08001c08"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001cd0": {
            "entrypoint": "0x08001cd0",
            "current_name": "process_data_08001cd0",
            "code": "\nvoid processData_08001cd0(undefined4 command,int length,byte *data,undefined4 param_4)\n\n{\n  byte byte1;\n  byte byte2;\n  byte byte3;\n  undefined4 result;\n  byte byte4;\n  char charVar;\n  int index;\n  int index2;\n  uint uVar1;\n  uint uVar2;\n  int iVar1;\n  bool flag;\n  \n  switch(command) {\n  case 0x69:\n    FUN_08002f1e(&DAT_200003d4,0xf0);\n    FUN_08002f1e(&DAT_200003d4,0x6a);\n    for (uVar1 = 0; uVar1 < 0x3c; uVar1 = uVar1 + 1 & 0xff) {\n      uVar2 = uVar1 - 0x2e & 0xff;\n      if (uVar2 < 0xe) {\n        if (uVar1 < 0x3c) {\n          index = (int)(char)(&DAT_0800a908)[uVar1];\n        }\n        else {\n          index = -1;\n        }\n        index = FUN_080036ac(index);\n        if (index == 0) {\n          uVar2 = 0x7f;\n        }\n        else {\n          if (uVar1 < 0x3c) {\n            index = (int)(char)(&DAT_0800a908)[uVar1];\n          }\n          else {\n            index = -1;\n          }\n          index = FUN_080036ac(index);\n          if (index == 1) {\n            uVar2 = 0x7f;\n          }\n        }\n      }\n      else {\n        uVar2 = 0x7f;\n      }\n      FUN_08002f1e(&DAT_200003d4,uVar2);\n    }\n    FUN_08002f1e(&DAT_200003d4,0xf7);\n    break;\n  case 0x6b:\n    FUN_08002f1e(&DAT_200003d4,0xf0);\n    FUN_08002f1e(&DAT_200003d4,0x6c);\n    for (uVar1 = 0; uVar1 < 0x3c; uVar1 = uVar1 + 1 & 0xff) {\n      if (uVar1 < 0x3c) {\n        if ((&DAT_0800a908)[uVar1] == -1) {\n          flag = false;\n        }\n        else {\n          index = FUN_080036ac();\n          if (index == 0) {\n            flag = false;\n          }\n          else {\n            index = FUN_080036ac((int)(char)(&DAT_0800a908)[uVar1]);\n            if (index == 1) {\n              flag = false;\n            }\n            else {\n              flag = true;\n            }\n          }\n        }\n      }\n      else {\n        flag = false;\n      }\n      if (flag) {\n        FUN_08002f1e(&DAT_200003d4,0);\n        FUN_08002f1e(&DAT_200003d4,1);\n        FUN_08002f1e(&DAT_200003d4,0xb);\n        FUN_08002f1e(&DAT_200003d4,1);\n        FUN_08002f1e(&DAT_200003d4,1);\n        FUN_08002f1e(&DAT_200003d4,1);\n      }\n      if ((uVar1 - 0x2e & 0xff) < 0xe) {\n        if (uVar1 < 0x3c) {\n          index = (int)(char)(&DAT_0800a908)[uVar1];\n        }\n        else {\n          index = -1;\n        }\n        index = FUN_080036ac(index);\n        if (index == 0) {\n          flag = false;\n        }\n        else {\n          if (uVar1 < 0x3c) {\n            index = (int)(char)(&DAT_0800a908)[uVar1];\n          }\n          else {\n            index = -1;\n          }\n          index = FUN_080036ac(index);\n          if (index == 1) {\n            flag = false;\n          }\n          else {\n            flag = true;\n          }\n        }\n      }\n      else {\n        flag = false;\n      }\n      if (flag) {\n        FUN_08002f1e(&DAT_200003d4,2);\n        FUN_08002f1e(&DAT_200003d4,10);\n      }\n      if (uVar1 < 0x3c) {\n        if ((&DAT_0800a908)[uVar1] == -1) {\n          index = 0;\n        }\n        else {\n          index = FUN_080036ac();\n          if (index == 0) {\n            index = 0;\n          }\n          else {\n            index = FUN_080036ac((int)(char)(&DAT_0800a908)[uVar1]);\n            if (index == 1) {\n              index = 0;\n            }\n            else {\n              index = FUN_0800738a((int)(char)(&DAT_0800a908)[uVar1],&DAT_0800a6cc);\n            }\n          }\n        }\n      }\n      else {\n        index = 0;\n      }\n      if (index != 0) {\n        FUN_08002f1e(&DAT_200003d4,3);\n        FUN_08002f1e(&DAT_200003d4,8);\n      }\n      if (uVar1 < 0x3c) {\n        if ((&DAT_0800a908)[uVar1] == -1) {\n          flag = false;\n        }\n        else {\n          index = FUN_080036ac();\n          if (index == 0) {\n            flag = false;\n          }\n          else {\n            index = FUN_080036ac((int)(char)(&DAT_0800a908)[uVar1]);\n            if (index == 1) {\n              flag = false;\n            }\n            else {\n              flag = true;\n            }\n          }\n        }\n      }\n      else {\n        flag = false;\n      }\n      if (flag) {\n        FUN_08002f1e(&DAT_200003d4,4);\n        FUN_08002f1e(&DAT_200003d4,0xe);\n      }\n      if (uVar1 < 0x3c) {\n        if ((&DAT_0800a908)[uVar1] == -1) {\n          index = 0;\n        }\n        else {\n          index = FUN_080036ac();\n          if (index == 0) {\n            index = 0;\n          }\n          else {\n            index = FUN_080036ac((int)(char)(&DAT_0800a908)[uVar1]);\n            if (index == 1) {\n              index = 0;\n            }\n            else {\n              index = FUN_0800738a((int)(char)(&DAT_0800a908)[uVar1],&DAT_0800a69c);\n              if (index == 0) {\n                index = FUN_0800738a((int)(char)(&DAT_0800a908)[uVar1],&DAT_0800a66c);\n              }\n            }\n          }\n        }\n      }\n      else {\n        index = 0;\n      }\n      if (index != 0) {\n        FUN_08002f1e(&DAT_200003d4,6);\n        FUN_08002f1e(&DAT_200003d4,1);\n      }\n      FUN_08002f1e(&DAT_200003d4,0x7f);\n    }\n    FUN_08002f1e(&DAT_200003d4,0xf7);\n    return;\n  case 0x6d:\n    if (length != 0) {\n      byte1 = *data;\n      FUN_08002f1e(&DAT_200003d4,0xf0);\n      FUN_08002f1e(&DAT_200003d4,0x6e);\n      FUN_08002f1e(&DAT_200003d4,byte1);\n      if (byte1 < 0x3c) {\n        result = FUN_08002fa0(&DAT_200003d4,byte1);\n        FUN_08002f1e(&DAT_200003d4,result);\n        uVar1 = FUN_08002fba(&DAT_200003d4,byte1);\n        FUN_08002f1e(&DAT_200003d4,uVar1 & 0x7f);\n        uVar1 = FUN_08002fba(&DAT_200003d4,byte1);\n        if ((uVar1 & 0xff80) != 0) {\n          index = FUN_08002fba(&DAT_200003d4,byte1);\n          FUN_08002f1e(&DAT_200003d4,(uint)(index << 0x12) >> 0x19);\n        }\n        uVar1 = FUN_08002fba(&DAT_200003d4,byte1);\n        if ((uVar1 & 0xc000) != 0) {\n          index = FUN_08002fba(&DAT_200003d4,byte1);\n          FUN_08002f1e(&DAT_200003d4,(uint)(index << 0xb) >> 0x19);\n        }\n      }\n      FUN_08002f1e(&DAT_200003d4,0xf7);\n      return;\n    }\n    break;\n  case 0x6f:\n    if (1 < length) {\n      uVar1 = (uint)data[1];\n      if (2 < length) {\n        uVar1 = uVar1 | (uint)data[2] << 7;\n      }\n      if (3 < length) {\n        uVar1 = uVar1 | (uint)data[3] << 0xe;\n      }\n      FUN_08000214(*data,uVar1);\n      return;\n    }\n    break;\n  case 0x70:\n    if (4 < length) {\n      uVar1 = (uint)*data;\n      byte1 = data[1];\n      byte4 = data[2];\n      byte2 = data[3];\n      byte3 = data[4];\n      if (uVar1 < 0x3c) {\n        if ((&DAT_0800a908)[uVar1] == -1) {\n          flag = false;\n        }\n        else {\n          index = FUN_080036ac();\n          if (index == 0) {\n            flag = false;\n          }\n          else {\n            index = FUN_080036ac((int)(char)(&DAT_0800a908)[uVar1]);\n            if (index == 1) {\n              flag = false;\n            }\n            else {\n              flag = true;\n            }\n          }\n        }\n      }\n      else {\n        flag = false;\n      }\n      if (flag) {\n        if ((byte)(&DAT_200001f0)[uVar1] < 0xc) {\n          index = FUN_080026f8(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[uVar1] * 3);\n        }\n        else {\n          index = 0;\n        }\n        if (index != 0) {\n          FUN_08000588(uVar1);\n        }\n        FUN_08000500(uVar1,(uint)byte1 + (uint)byte4 * 0x80,(uint)byte2 + (uint)byte3 * 0x80);\n        FUN_080005f8(uVar1,4);\n        return;\n      }\n    }\n    break;\n  case 0x76:\n    byte1 = data[1];\n    byte4 = byte1 & 0x18;\n    if ((byte1 & 0x20) != 0) {\n      FUN_08002f14(&DAT_200003d4,\"10-bit addressing not supported\",byte4,byte1,param_4);\n      return;\n    }\n    byte2 = *data;\n    flag = (byte1 & 0x40) == 0;\n    if (byte4 < 0x19) {\n      switch(byte4) {\n      case 0:\n        FUN_08002a30(&DAT_20000314,byte2);\n        for (uVar1 = 2; (int)uVar1 < length; uVar1 = uVar1 + 2 & 0xff) {\n          FUN_08001bf8(data[uVar1 + 1] * -0x80 + data[uVar1]);\n        }\n        FUN_08002ac0(&DAT_20000314);\n        return;\n      case 8:\n        if (length == 6) {\n          index = (uint)data[2] + (uint)data[3] * 0x80;\n          charVar = data[4] + data[5] * -0x80;\n        }\n        else {\n          charVar = data[2] + data[3] * -0x80;\n          index = -1;\n        }\n        FUN_08001c18(byte2,index,charVar);\n        return;\n      case 0x10:\n        if (DAT_20000004 + 1 < 8) {\n          if (length == 6) {\n            index = (uint)data[2] + (uint)data[3] * 0x80;\n            charVar = data[4] + data[5] * -0x80;\n          }\n          else {\n            charVar = data[2] + data[3] * -0x80;\n            index = -1;\n          }\n          DAT_20000004 = DAT_20000004 + '\\x01';\n          index2 = (int)DAT_20000004;\n          iVar1 = index2 * 0xc;\n          (&DAT_20000188)[iVar1] = byte2;\n          (&DAT_2000018c)[index2 * 3] = index;\n          (&DAT_20000190)[iVar1] = charVar;\n          (&DAT_20000191)[iVar1] = flag;\n          return;\n        }\n        FUN_08002f14(&DAT_200003d4,\"too many queries\",(int)DAT_20000004,flag,param_4);\n        return;\n      case 0x18:\n        if (DAT_20000004 < 1) {\n          DAT_20000004 = 0xff;\n          return;\n        }\n      }\n      for (uVar1 = 0; index = DAT_20000004 + 1, (int)uVar1 < index; uVar1 = uVar1 + 1 & 0xff) {\n        if (byte2 == (&DAT_20000188)[uVar1 * 0xc]) goto LAB_08001e66;\n      }\n      uVar1 = 0;\nLAB_08001e66:\n      for (; (int)uVar1 < index; uVar1 = uVar1 + 1 & 0xff) {\n        if (uVar1 < 8) {\n          index2 = (uVar1 + 1) * 0xc;\n          iVar1 = uVar1 * 0xc;\n          (&DAT_20000188)[iVar1] = (&DAT_20000188)[index2];\n          (&DAT_2000018c)[uVar1 * 3] = (&DAT_2000018c)[(uVar1 + 1) * 3];\n          (&DAT_20000190)[iVar1] = (&DAT_20000190)[index2];\n          (&DAT_20000191)[iVar1] = (&DAT_20000191)[index2];\n        }\n      }\n      DAT_20000004 = DAT_20000004 + -1;\n      return;\n    }\n    break;\n  case 0x78:\n    index = (uint)*data + (uint)data[1] * 0x80;\n    if ((1 < length) && (index != 0)) {\n      DAT_2000012c = index;\n    }\n    if (DAT_20000170 == '\\0') {\n      FUN_08000a64();\n      return;\n    }\n    break;\n  case 0x7a:\n    if ((1 < length) &&\n       (DAT_20000008 = (uint)*data + (uint)data[1] * 0x80, DAT_20000008 == 0)) {\n      DAT_20000008 = 1;\n      return;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001cd0": "process_data_08001cd0",
                "param_1": "command",
                "param_2": "length",
                "param_3": "data",
                "bVar1": "byte1",
                "bVar2": "byte2",
                "bVar3": "byte3",
                "uVar4": "result",
                "bVar5": "byte4",
                "cVar6": "charVar",
                "iVar7": "index",
                "iVar8": "index2",
                "uVar9": "uVar1",
                "uVar10": "uVar2",
                "iVar11": "iVar1",
                "bVar12": "flag"
            },
            "calling": [],
            "called": [
                "FUN_08002f1e",
                "FUN_08002f14",
                "FUN_080036ac",
                "FUN_08001bf8",
                "FUN_0800738a",
                "FUN_08002ac0",
                "FUN_08001c18",
                "FUN_08002fba",
                "FUN_08002a30",
                "FUN_080005f8",
                "FUN_08000588",
                "FUN_08002fa0",
                "FUN_08000a64",
                "FUN_08000500",
                "FUN_08000214",
                "FUN_080026f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080022f8": {
            "entrypoint": "0x080022f8",
            "current_name": "process_data_080022f8",
            "code": "\nvoid processData_080022f8(void)\n\n{\n  bool condition;\n  int result;\n  undefined4 data;\n  uint index;\n  uint temp;\n  \n  FUN_08000ef8();\n  while (result = FUN_08002ec4(&DAT_200003d4), result != 0) {\n    FUN_08002ed2(&DAT_200003d4);\n  }\n  DAT_20000118 = FUN_08008abc();\n  if (DAT_20000008 < (uint)(DAT_20000118 - DAT_2000017c)) {\n    DAT_2000017c = DAT_2000017c + DAT_20000008;\n    for (index = 0; index < 0x3c; index = index + 1 & 0xff) {\n      temp = index - 0x2e & 0xff;\n      if (temp < 0xe) {\n        if (index < 0x3c) {\n          result = (int)(char)(&DAT_0800a908)[index];\n        }\n        else {\n          result = -1;\n        }\n        result = FUN_080036ac(result);\n        if (result == 0) {\n          condition = false;\n        }\n        else {\n          if (index < 0x3c) {\n            result = (int)(char)(&DAT_0800a908)[index];\n          }\n          else {\n            result = -1;\n          }\n          result = FUN_080036ac(result);\n          if (result == 1) {\n            condition = false;\n          }\n          else {\n            result = FUN_08002fa0(&DAT_200003d4,index);\n            if (result == 2) {\n              condition = true;\n            }\n            else {\n              condition = false;\n            }\n          }\n        }\n      }\n      else {\n        condition = false;\n      }\n      if ((condition) && ((DAT_20000114 >> temp & 1U) != 0)) {\n        data = FUN_08008880(temp);\n        FUN_08002ef2(&DAT_200003d4,temp,data);\n      }\n    }\n    if (-1 < DAT_20000004) {\n      for (index = 0; (int)index < DAT_20000004 + 1; index = index + 1 & 0xff) {\n        result = index * 0xc;\n        FUN_08001c18((&DAT_20000188)[result],(&DAT_2000018c)[index * 3],(&DAT_20000190)[result],\n                     (&DAT_20000191)[result]);\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080022f8": "process_data_080022f8",
                "iVar2": "result",
                "uVar3": "data",
                "uVar4": "index",
                "uVar5": "temp",
                "bVar1": "condition"
            },
            "calling": [
                "FUN_08008f1c"
            ],
            "called": [
                "FUN_08002ed2",
                "FUN_08008abc",
                "FUN_08002fa0",
                "FUN_08008880",
                "FUN_080036ac",
                "FUN_08002ef2",
                "FUN_08001c18",
                "FUN_08002ec4",
                "FUN_08000ef8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002400": {
            "entrypoint": "0x08002400",
            "current_name": "find_bit_flag_08002400",
            "code": "\nundefined4 find_bit_flag_08002400(int input)\n\n{\n  uint index;\n  \n  index = 0;\n  while( true ) {\n    if (0xb < index) {\n      return 0;\n    }\n    if (((&DAT_20000258)[(input * 0xc + index) * 8] & 0x40) != 0) break;\n    index = index + 1 & 0xff;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08002400": "find_bit_flag_08002400",
                "param_1": "input",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08002644",
                "FUN_080025ac"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800242c": {
            "entrypoint": "0x0800242c",
            "current_name": "initialize_connection_0800242c",
            "code": "\nvoid initializeConnection_0800242c(undefined4 socketID,undefined4 timeout,undefined4 bufferSize,undefined4 callbackFunction)\n\n{\n  FUN_08007648(socketID,60000,0x5dc,&label1,callbackFunction);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800242c": "initialize_connection_0800242c",
                "param_1": "socketID",
                "param_2": "timeout",
                "param_3": "bufferSize",
                "param_4": "callbackFunction",
                "LAB_08002444_1": "label1"
            },
            "calling": [
                "FUN_080025ac"
            ],
            "called": [
                "FUN_08007648"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002578": {
            "entrypoint": "0x08002578",
            "current_name": "initialize_application_08002578",
            "code": "\nvoid initializeApplication_08002578(void)\n\n{\n  FUN_080076e0();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002578": "initialize_application_08002578"
            },
            "calling": [
                "FUN_08002644"
            ],
            "called": [
                "FUN_080076e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002580": {
            "entrypoint": "0x08002580",
            "current_name": "set_byte_value_08002580",
            "code": "\nvoid setByteValue_08002580(byte *byteArray)\n\n{\n  char currentValue;\n  uint dataValue;\n  \n  dataValue = (uint)DAT_20000250;\n  if (0xb < dataValue) {\n    *byteArray = 0xff;\n    return;\n  }\n  currentValue = DAT_20000250 + 1;\n  *byteArray = DAT_20000250;\n  DAT_20000250 = currentValue;\n  *(undefined4 *)(&DAT_2000025c + dataValue * 8) = 0x5dc;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002580": "set_byte_value_08002580",
                "param_1": "byteArray",
                "cVar1": "currentValue",
                "uVar2": "dataValue"
            },
            "calling": [
                "FUN_080004d4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080025ac": {
            "entrypoint": "0x080025ac",
            "current_name": "update_data_080025ac",
            "code": "\nbyte updateData_080025ac(byte *data,uint value,int offset1,int offset2)\n\n{\n  uint prevValue;\n  uint dataLength;\n  uint divisionResult;\n  int adjustedOffset1;\n  \n  if (*data < 0xc) {\n    FUN_08008990(value,1,offset1,*data,offset2);\n    dataLength = (uint)*data;\n    prevValue = (byte)(&DAT_20000258)[dataLength * 8] & 0xffffffc0 | value & 0x3f;\n    (&DAT_20000258)[dataLength * 8] = (char)prevValue;\n    adjustedOffset1 = -offset1 + 0x220;\n    if (adjustedOffset1 < 0) {\n      adjustedOffset1 = -offset1 + 0x223;\n    }\n    data[1] = (byte)((uint)(adjustedOffset1 << 0x16) >> 0x18);\n    adjustedOffset1 = -offset2 + 0x960;\n    if (adjustedOffset1 < 0) {\n      adjustedOffset1 = -offset2 + 0x963;\n    }\n    data[2] = (byte)((uint)(adjustedOffset1 << 0x16) >> 0x18);\n    divisionResult = *data / 0xc;\n    adjustedOffset1 = FUN_08002400(divisionResult,prevValue,dataLength,(uint)*data * -0x55555555);\n    if (adjustedOffset1 == 0) {\n      DAT_200002fc = (undefined)divisionResult;\n      FUN_0800242c();\n    }\n    (&DAT_20000258)[(uint)*data * 8] = (&DAT_20000258)[(uint)*data * 8] | 0x40;\n  }\n  return *data;\n}\n\n",
            "renaming": {
                "FUN_080025ac": "update_data_080025ac",
                "param_1": "data",
                "param_2": "value",
                "param_3": "offset1",
                "param_4": "offset2",
                "uVar1": "prevValue",
                "uVar2": "dataLength",
                "uVar3": "divisionResult",
                "iVar4": "adjustedOffset1"
            },
            "calling": [
                "FUN_08002634",
                "FUN_08000500"
            ],
            "called": [
                "FUN_08008990",
                "FUN_0800242c",
                "FUN_08002400"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002634": {
            "entrypoint": "0x08002634",
            "current_name": "initialize_graphics_08002634",
            "code": "\nvoid initializeGraphics_08002634(undefined4 windowHandle,undefined4 graphicsDevice,undefined4 width,undefined4 height)\n\n{\n  FUN_080025ac(windowHandle,graphicsDevice,0x220,0x960,height);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002634": "initialize_graphics_08002634",
                "param_1": "windowHandle",
                "param_2": "graphicsDevice",
                "param_3": "width",
                "param_4": "height"
            },
            "calling": [
                "FUN_08000500"
            ],
            "called": [
                "FUN_080025ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002644": {
            "entrypoint": "0x08002644",
            "current_name": "modify_byte_and_call_function_08002644",
            "code": "\nvoid modifyByteAndCallFunction_08002644(byte *data,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  byte originalByte;\n  uint firstByte;\n  int result;\n  \n  firstByte = (uint)*data;\n  originalByte = (&DAT_20000258)[firstByte * 8];\n  (&DAT_20000258)[firstByte * 8] = originalByte & 0xbf;\n  result = FUN_08002400(firstByte / 0xc,param2,originalByte & 0xbf,firstByte * -0x55555555,param4);\n  if (result == 0) {\n    FUN_08002578(&DAT_200002b8);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002644": "modify_byte_and_call_function_08002644",
                "param_1": "data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "bVar1": "originalByte",
                "uVar2": "firstByte",
                "iVar3": "result"
            },
            "calling": [
                "FUN_08000588"
            ],
            "called": [
                "FUN_08002400",
                "FUN_08002578"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800267c": {
            "entrypoint": "0x0800267c",
            "current_name": "update_int_array_element_0800267c",
            "code": "\nvoid updateIntArrayElement_0800267c(byte *array,int value)\n\n{\n  int index;\n  \n  if (*array < 0xc) {\n    index = (0x88 - (char)array[1]) * 4;\n    if ((index - value == 0 || index < value) &&\n       (index = (600 - (char)array[2]) * 4,\n       value == index || value + (600 - (char)array[2]) * -4 < 0 != SBORROW4(value,index)))\n    {\n      index = value;\n    }\n    *(int *)(&DAT_2000025c + (uint)*array * 8) = index;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800267c": "update_int_array_element_0800267c",
                "param_1": "array",
                "param_2": "value",
                "iVar1": "index"
            },
            "calling": [
                "FUN_080026b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080026b0": {
            "entrypoint": "0x080026b0",
            "current_name": "update_parameter_080026b0",
            "code": "\nvoid updateParameter_080026b0(int originalValue,int newValue)\n\n{\n  if (newValue < 0x220) {\n    if (newValue < 0) {\n      newValue = 0;\n    }\n    else if (0xb4 < newValue) {\n      newValue = 0xb4;\n    }\n    newValue = FUN_08008ef4(newValue,0,0xb4,(0x88 - *(char *)(originalValue + 1)) * 4,\n                           (600 - *(char *)(originalValue + 2)) * 4);\n  }\n  FUN_0800267c(originalValue,newValue);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080026b0": "update_parameter_080026b0",
                "param_1": "originalValue",
                "param_2": "newValue"
            },
            "calling": [
                "FUN_0800021a"
            ],
            "called": [
                "FUN_08008ef4",
                "FUN_0800267c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080026f8": {
            "entrypoint": "0x080026f8",
            "current_name": "bit_value_from_data_080026f8",
            "code": "\nuint bitValueFromData_080026f8(byte *inputData)\n\n{\n  return ((uint)(byte)(&DAT_20000258)[(uint)*inputData * 8] << 0x19) >> 0x1f;\n}\n\n",
            "renaming": {
                "FUN_080026f8": "bit_value_from_data_080026f8",
                "param_1": "inputData"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800270c": {
            "entrypoint": "0x0800270c",
            "current_name": "calculate_difference_0800270c",
            "code": "\nint calculate_difference_0800270c(void)\n\n{\n  return (uint)DAT_200003b7 - (uint)DAT_200003b5;\n}\n\n",
            "renaming": {
                "FUN_0800270c": "calculate_difference_0800270c"
            },
            "calling": [
                "FUN_08001c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002720": {
            "entrypoint": "0x08002720",
            "current_name": "get_next_byte_from_data_08002720",
            "code": "\nuint get_next_byte_from_data_08002720(void)\n\n{\n  uint index;\n  \n  index = (uint)DAT_200003b5;\n  if (index < DAT_200003b7) {\n    DAT_200003b5 = DAT_200003b5 + 1;\n    return (uint)*(byte *)(DAT_200003c8 + index);\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08002720": "get_next_byte_from_data_08002720",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08001c08"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080027f0": {
            "entrypoint": "0x080027f0",
            "current_name": "process_data_080027f0",
            "code": "\nuint processData_080027f0(int inputSize,undefined4 param,uint data)\n\n{\n  int result;\n  uint newSize;\n  \n  if (DAT_200003b4 == '\\0') {\n    result = FUN_08007ede(inputSize + 0x14,param,data & 0xffff);\n    if (result == 0) {\n      return data;\n    }\n    return 0;\n  }\n  newSize = DAT_200003b8 + data;\n  if (DAT_200003c5 < newSize) {\n    if (newSize < 0x20) {\n      newSize = 0x20;\n    }\n    DAT_200003cc = FUN_08009908(DAT_200003cc,newSize);\n    if (DAT_200003cc == 0) {\n      DAT_200003c5 = 0;\n    }\n    else {\n      DAT_200003c5 = (byte)newSize;\n    }\n  }\n  if (DAT_200003cc == 0) {\n    *(undefined4 *)(inputSize + 4) = 1;\n    return 0;\n  }\n  FUN_080091b0((uint)DAT_200003b6 + DAT_200003cc,param,data);\n  DAT_200003b6 = DAT_200003b6 + (char)data;\n  DAT_200003b8 = DAT_200003b6;\n  return data;\n}\n\n",
            "renaming": {
                "FUN_080027f0": "process_data_080027f0",
                "param_1": "inputSize",
                "param_2": "param",
                "param_3": "data",
                "iVar1": "result",
                "uVar2": "newSize"
            },
            "calling": [],
            "called": [
                "FUN_080091b0",
                "FUN_08009908",
                "FUN_08007ede"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800288c": {
            "entrypoint": "0x0800288c",
            "current_name": "process_data_0800288c",
            "code": "\nundefined4 processData_0800288c(int input,undefined flag)\n\n{\n  undefined4 result;\n  int status;\n  uint count;\n  undefined data;\n  \n  data = flag;\n  if (DAT_200003b4 == '\\0') {\n    status = FUN_08007ede(input + 0x14,&data,1);\n    if (status == 0) {\n      result = 1;\n    }\n    else {\n      result = 0;\n    }\n  }\n  else {\n    count = DAT_200003b8 + 1;\n    if (DAT_200003c5 < count) {\n      if (count < 0x20) {\n        count = 0x20;\n      }\n      DAT_200003cc = FUN_08009908(DAT_200003cc,count);\n      if (DAT_200003cc == 0) {\n        DAT_200003c5 = 0;\n      }\n      else {\n        DAT_200003c5 = (byte)count;\n      }\n    }\n    if (DAT_200003cc == 0) {\n      *(undefined4 *)(input + 4) = 1;\n      result = 0;\n    }\n    else {\n      *(undefined *)(DAT_200003cc + (uint)DAT_200003b6) = data;\n      DAT_200003b6 = DAT_200003b6 + 1;\n      result = 1;\n      DAT_200003b8 = DAT_200003b6;\n    }\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_0800288c": "process_data_0800288c",
                "param_1": "input",
                "param_2": "flag",
                "uVar1": "result",
                "iVar2": "status",
                "uVar3": "count",
                "local_11": "data"
            },
            "calling": [
                "FUN_08001bf8"
            ],
            "called": [
                "FUN_08009908",
                "FUN_08007ede"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800291c": {
            "entrypoint": "0x0800291c",
            "current_name": "initialize_function_0800291c",
            "code": "\nvoid initializeFunction_0800291c(undefined4 *functionArray)\n\n{\n  functionArray[1] = 0;\n  functionArray[2] = 1000;\n  *functionArray = &PTR_FUN_0800288c_1_0800a5a0;\n  *(undefined *)(functionArray + 0x1b) = 0x19;\n  *(undefined *)((int)functionArray + 0x6d) = 0x18;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800291c": "initialize_function_0800291c",
                "param_1": "functionArray"
            },
            "calling": [
                "FUN_08002948"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002948": {
            "entrypoint": "0x08002948",
            "current_name": "check_and_process_param_08002948",
            "code": "\nvoid check_and_process_param_08002948(int value_1,int value_2)\n\n{\n  if (value_1 != 1) {\n    return;\n  }\n  if (value_2 == 0xffff) {\n    FUN_0800291c(&DAT_20000314);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002948": "check_and_process_param_08002948",
                "param_1": "value_1",
                "param_2": "value_2"
            },
            "calling": [
                "FUN_08002c1e"
            ],
            "called": [
                "FUN_0800291c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002968": {
            "entrypoint": "0x08002968",
            "current_name": "initialize_device_08002968",
            "code": "\nvoid initializeDevice_08002968(int deviceAddress,uint configValue)\n\n{\n  int shiftedConfig;\n  int registerAddress;\n  \n  DAT_200003b5 = 0;\n  DAT_200003b7 = 0;\n  if (DAT_200003c8 != 0) {\n    FUN_080091c6(DAT_200003c8,0,DAT_200003c4);\n  }\n  DAT_200003b6 = 0;\n  DAT_200003b8 = 0;\n  if (DAT_200003cc != 0) {\n    FUN_080091c6(DAT_200003cc,0,DAT_200003c5);\n  }\n  DAT_200003b4 = 0;\n  shiftedConfig = (configValue & 0x7f) << 1;\n  *(char *)(deviceAddress + 0x10) = (char)shiftedConfig;\n  if (configValue == 0x33) {\n    *(undefined *)(deviceAddress + 0x11) = 1;\n  }\n  else {\n    *(undefined *)(deviceAddress + 0x11) = 0;\n  }\n  registerAddress = deviceAddress + 0x14;\n  FUN_080077b0(registerAddress,100000,0x4000,shiftedConfig,*(undefined *)(deviceAddress + 0x11));\n  if (*(char *)(deviceAddress + 0x11) == '\\0') {\n    FUN_08007f8e(registerAddress,&LAB_08002774_1);\n    FUN_08007f7c(registerAddress,&LAB_08002b00_1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002968": "initialize_device_08002968",
                "param_1": "deviceAddress",
                "param_2": "configValue",
                "iVar1": "shiftedConfig",
                "iVar2": "registerAddress"
            },
            "calling": [
                "FUN_08002a1c"
            ],
            "called": [
                "FUN_080077b0",
                "FUN_08007f8e",
                "FUN_080091c6",
                "FUN_08007f7c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a1c": {
            "entrypoint": "0x08002a1c",
            "current_name": "execute_function_08002a1c",
            "code": "\nvoid executeFunction_08002a1c(undefined4 functionParam1,undefined unusedParam,undefined4 functionParam3,undefined4 functionParam4)\n\n{\n  FUN_08002968(functionParam1,unusedParam,functionParam3,functionParam4,functionParam4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002a1c": "execute_function_08002a1c",
                "param_1": "functionParam1",
                "param_2": "unusedParam",
                "param_3": "functionParam3",
                "param_4": "functionParam4"
            },
            "calling": [
                "FUN_08002a26"
            ],
            "called": [
                "FUN_08002968"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a26": {
            "entrypoint": "0x08002a26",
            "current_name": "initialize_parameters_08002a26",
            "code": "\nvoid initializeParameters_08002a26(undefined4 param1,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  FUN_08002a1c(param1,0x33,param3,param4,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002a26": "initialize_parameters_08002a26",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [
                "FUN_08000a64"
            ],
            "called": [
                "FUN_08002a1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a30": {
            "entrypoint": "0x08002a30",
            "current_name": "initialize_data_08002a30",
            "code": "\nvoid initializeData_08002a30(undefined4 param1,int param2)\n\n{\n  DAT_200003b4 = 1;\n  DAT_200003d0 = (char)(param2 << 1);\n  DAT_200003b6 = 0;\n  DAT_200003b8 = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002a30": "initialize_data_08002a30",
                "param_1": "param1",
                "param_2": "param2"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_08002b68",
                "FUN_08001c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a58": {
            "entrypoint": "0x08002a58",
            "current_name": "check_parameter_08002a58",
            "code": "\nundefined4 checkParameter_08002a58(int param)\n\n{\n  int result;\n  undefined4 returnValue;\n  \n  if (*(char *)(param + 0x11) == '\\0') {\n    returnValue = 4;\n  }\n  else {\n    result = FUN_08007e74(param + 0x14,DAT_200003d0,DAT_200003cc,DAT_200003b8);\n    if (result == 0) {\n      returnValue = 0;\n    }\n    else if (result == 1) {\n      returnValue = 1;\n    }\n    else {\n      returnValue = 4;\n    }\n    if (DAT_200003cc != 0) {\n      FUN_080091c6(DAT_200003cc,0,DAT_200003c5);\n    }\n    DAT_200003b6 = 0;\n    DAT_200003b8 = 0;\n    DAT_200003b4 = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08002a58": "check_parameter_08002a58",
                "param_1": "param",
                "iVar1": "result",
                "uVar2": "returnValue"
            },
            "calling": [
                "FUN_08002b68",
                "FUN_08002ac0",
                "FUN_08001c18"
            ],
            "called": [
                "FUN_080091c6",
                "FUN_08007e74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ac0": {
            "entrypoint": "0x08002ac0",
            "current_name": "initialize_function_08002ac0",
            "code": "\nvoid initializeFunction_08002ac0(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  FUN_08002a58(input1,1,input3,input4,input4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ac0": "initialize_function_08002ac0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [
                "FUN_08002a58"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002acc": {
            "entrypoint": "0x08002acc",
            "current_name": "update_data_size_08002acc",
            "code": "\nvoid updateDataSize_08002acc(uint dataSize,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  if (DAT_200003c4 < dataSize) {\n    if (dataSize < 0x20) {\n      dataSize = 0x20;\n    }\n    DAT_200003c8 = FUN_08009908(DAT_200003c8,dataSize,param3,(uint)DAT_200003c4,param4);\n    if (DAT_200003c8 == 0) {\n      DAT_200003c4 = 0;\n    }\n    else {\n      DAT_200003c4 = (byte)dataSize;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002acc": "update_data_size_08002acc",
                "param_1": "dataSize",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [
                "FUN_08002b68"
            ],
            "called": [
                "FUN_08009908"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002b68": {
            "entrypoint": "0x08002b68",
            "current_name": "execute_function_08002b68",
            "code": "\nundefined4\nexecute_function_08002b68(undefined4 *array_ptr,uint size,undefined4 value,uint mask,byte flag)\n\n{\n  int result;\n  uint flag_value;\n  uint masked_value;\n  \n  flag_value = (uint)flag;\n  if (*(char *)((int)array_ptr + 0x11) == '\\0') {\n    return 0;\n  }\n  masked_value = mask;\n  FUN_08002acc(value);\n  if (DAT_200003c8 != 0) {\n    if (flag_value != 0) {\n      FUN_08002a30(array_ptr,size);\n      if (3 < flag_value) {\n        flag_value = 3;\n      }\n      while( true ) {\n        if (flag_value == 0) break;\n        (**(code **)*array_ptr)(array_ptr,mask >> ((flag_value - 1 & 0x1f) << 3) & 0xff);\n        flag_value = flag_value - 1 & 0xff;\n      }\n      FUN_08002a58(array_ptr,0);\n    }\n    result = FUN_08007f0e(array_ptr + 5,(size & 0x7f) << 1,DAT_200003c8,value,masked_value);\n    if (result != 0) {\n      value = 0;\n    }\n    DAT_200003b5 = 0;\n    DAT_200003b7 = (char)value;\n    return value;\n  }\n  array_ptr[1] = 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002b68": "execute_function_08002b68",
                "param_1": "array_ptr",
                "param_2": "size",
                "param_3": "value",
                "param_4": "mask",
                "param_5": "flag",
                "iVar1": "result",
                "uVar2": "flag_value",
                "uVar3": "masked_value"
            },
            "calling": [
                "FUN_08002c00"
            ],
            "called": [
                "FUN_08007f0e",
                "FUN_08002a58",
                "FUN_08002acc",
                "FUN_08002a30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c00": {
            "entrypoint": "0x08002c00",
            "current_name": "initialize_program_08002c00",
            "code": "\nvoid initialize_program_08002c00(void)\n\n{\n  FUN_08002b68();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c00": "initialize_program_08002c00"
            },
            "calling": [
                "FUN_08002c14"
            ],
            "called": [
                "FUN_08002b68"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c14": {
            "entrypoint": "0x08002c14",
            "current_name": "initialize_application_08002c14",
            "code": "\nvoid initializeApplication_08002c14(void)\n\n{\n  FUN_08002c00();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c14": "initialize_application_08002c14"
            },
            "calling": [
                "FUN_08001c18"
            ],
            "called": [
                "FUN_08002c00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c1e": {
            "entrypoint": "0x08002c1e",
            "current_name": "initialize_application_08002c1e",
            "code": "\nvoid initializeApplication_08002c1e(undefined4 mode,undefined4 maxValue,undefined4 param3,undefined4 param4)\n\n{\n  FUN_08002948(1,0xffff,param3,param4,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c1e": "initialize_application_08002c1e",
                "param_1": "mode",
                "param_2": "maxValue",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [],
            "called": [
                "FUN_08002948"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c2c": {
            "entrypoint": "0x08002c2c",
            "current_name": "execute_callback_08002c2c",
            "code": "\nvoid executeCallback_08002c2c(undefined4 callbackFunction,undefined4 param1,undefined4 param2,undefined4 param3)\n\n{\n  if (DAT_200005d4 != (code *)0x0) {\n    (*DAT_200005d4)(param1,param2,param2,DAT_200005d4,param3);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c2c": "execute_callback_08002c2c",
                "param_1": "callbackFunction",
                "param_2": "param1",
                "param_3": "param2",
                "param_4": "param3"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ce0": {
            "entrypoint": "0x08002ce0",
            "current_name": "initialize_function_08002ce0",
            "code": "\nint initializeFunction_08002ce0(int parameter)\n\n{\n  int tempVar;\n  \n  FUN_0800314e(parameter + 0x40);\n  tempVar = parameter + 0x44;\n  FUN_080032bc(tempVar,parameter,0x40);\n  *(undefined *)(parameter + 0xc4) = 0;\n  *(undefined4 *)(parameter + 200) = 0;\n  *(undefined *)(parameter + 0x1f8) = 0;\n  FUN_08003306(tempVar,0xe0,FUN_08002c2c + 1,0);\n  FUN_08003306(tempVar,0x90,label1,0);\n  FUN_08003306(tempVar,0xc0,label2,0);\n  FUN_08003306(tempVar,0xd0,label3,0);\n  FUN_08003306(tempVar,0xf4,label4,0);\n  FUN_08003306(tempVar,0xf5,label5,0);\n  FUN_08003366(tempVar,0x71,label6,0);\n  FUN_08003370(tempVar,0xf0,label7,0);\n  FUN_08003346(tempVar,0x79,label8,parameter);\n  FUN_08003350(tempVar,0xf9,label9,parameter);\n  FUN_08003350(tempVar,0xff,label10,0);\n  return parameter;\n}\n\n",
            "renaming": {
                "FUN_08002ce0": "initialize_function_08002ce0",
                "param_1": "parameter",
                "iVar1": "tempVar",
                "&LAB_08002c40_1": "label1",
                "&LAB_08002c7c_1": "label2",
                "&LAB_08002c90_1": "label3",
                "&LAB_08002c54_1": "label4",
                "&LAB_08002c68_1": "label5",
                "&LAB_08002ca4_1": "label6",
                "&LAB_08002cb8_1": "label7",
                "&LAB_08002e1a_1": "label8",
                "&LAB_08002dea_1": "label9",
                "&LAB_08002cd0_1": "label10"
            },
            "calling": [
                "FUN_08002dbc"
            ],
            "called": [
                "FUN_08003350",
                "FUN_08003366",
                "FUN_08003306",
                "FUN_0800314e",
                "FUN_080032bc",
                "FUN_08003346",
                "FUN_08003370"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002dbc": {
            "entrypoint": "0x08002dbc",
            "current_name": "check_param_08002dbc",
            "code": "\nvoid check_param_08002dbc(int input_param,int value_param)\n\n{\n  if (input_param != 1) {\n    return;\n  }\n  if (value_param == 0xffff) {\n    FUN_08002ce0(&DAT_200003d4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002dbc": "check_param_08002dbc",
                "param_1": "input_param",
                "param_2": "value_param"
            },
            "calling": [],
            "called": [
                "FUN_08002ce0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ddc": {
            "entrypoint": "0x08002ddc",
            "current_name": "copy_data_from_source_to_destination_08002ddc",
            "code": "\nvoid copyDataFromSourceToDestination_08002ddc(int sourceAddress,undefined4 value1,undefined4 value2,undefined4 destinationAddress)\n\n{\n  FUN_0800322c(sourceAddress + 0x40,2,5,destinationAddress,destinationAddress);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ddc": "copy_data_from_source_to_destination_08002ddc",
                "param_1": "sourceAddress",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "destinationAddress"
            },
            "calling": [
                "FUN_08002e26"
            ],
            "called": [
                "FUN_0800322c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002df6": {
            "entrypoint": "0x08002df6",
            "current_name": "process_data_08002df6",
            "code": "\nvoid processData_08002df6(int data)\n\n{\n  undefined *pointer;\n  \n  if (*(byte *)(data + 0xc4) == 0) {\n    return;\n  }\n  pointer = *(undefined **)(data + 200);\n  FUN_080031ce(data + 0x40,*pointer,pointer[1],*(byte *)(data + 0xc4) - 2,pointer + 2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002df6": "process_data_08002df6",
                "param_1": "data",
                "puVar1": "pointer"
            },
            "calling": [
                "FUN_08002e26"
            ],
            "called": [
                "FUN_080031ce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002e26": {
            "entrypoint": "0x08002e26",
            "current_name": "update_parameter_and_execute_08002e26",
            "code": "\nvoid updateParameterAndExecute_08002e26(int baseAddress,undefined4 newValue)\n\n{\n  *(undefined4 *)(baseAddress + 0xc0) = newValue;\n  FUN_08003154(baseAddress + 0x40);\n  FUN_08002ddc(baseAddress);\n  FUN_08002df6(baseAddress);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002e26": "update_parameter_and_execute_08002e26",
                "param_1": "baseAddress",
                "param_2": "newValue"
            },
            "calling": [
                "FUN_08003048"
            ],
            "called": [
                "FUN_08002ddc",
                "FUN_08002df6",
                "FUN_08003154"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002e44": {
            "entrypoint": "0x08002e44",
            "current_name": "parse_path_08002e44",
            "code": "\nvoid parsePath_08002e44(int outputBuffer,int inputPath,undefined param_3,undefined param_4)\n\n{\n  byte length;\n  char character;\n  int extensionFound;\n  int slashPosition;\n  undefined *newString;\n  \n  extensionFound = FUN_080099a4(inputPath,\".cpp\");\n  slashPosition = FUN_0800997e(inputPath,0x2f);\n  if (slashPosition == 0) {\n    slashPosition = FUN_0800997e(inputPath,0x5c);\n  }\n  if (slashPosition != 0) {\n    inputPath = slashPosition + 1;\n  }\n  if (extensionFound == 0) {\n    character = FUN_08000178(inputPath);\n    *(char *)(outputBuffer + 0xc4) = character + '\\x02';\n  }\n  else {\n    *(char *)(outputBuffer + 0xc4) = ((char)extensionFound - (char)inputPath) + '\\x02';\n  }\n  FUN_080091a0(*(undefined4 *)(outputBuffer + 200));\n  length = *(byte *)(outputBuffer + 0xc4);\n  newString = (undefined *)FUN_08009190(length + 1);\n  *(undefined **)(outputBuffer + 200) = newString;\n  newString[length] = 0;\n  *newString = param_3;\n  newString[1] = param_4;\n  FUN_08009954(newString + 2,inputPath,*(byte *)(outputBuffer + 0xc4) - 2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002e44": "parse_path_08002e44",
                "param_1": "outputBuffer",
                "param_2": "inputPath",
                "iVar3": "extensionFound",
                "iVar4": "slashPosition",
                "puVar5": "newString",
                "bVar1": "length",
                "cVar2": "character"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_0800997e",
                "FUN_08009954",
                "FUN_080099a4",
                "FUN_08000178",
                "FUN_080091a0",
                "FUN_08009190"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ec4": {
            "entrypoint": "0x08002ec4",
            "current_name": "execute_code_block_08002ec4",
            "code": "\nvoid executeCodeBlock_08002ec4(int inputParameter)\n\n{\n  (**(code **)(**(int **)(inputParameter + 0xc0) + 8))();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ec4": "execute_code_block_08002ec4",
                "param_1": "inputParameter"
            },
            "calling": [
                "FUN_080022f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ed2": {
            "entrypoint": "0x08002ed2",
            "current_name": "execute_function_08002ed2",
            "code": "\nvoid executeFunction_08002ed2(int input)\n\n{\n  uint result;\n  \n  result = (**(code **)(**(int **)(input + 0xc0) + 0xc))();\n  if (result != 0xffffffff) {\n    FUN_08003474(input + 0x44,result & 0xff);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ed2": "execute_function_08002ed2",
                "param_1": "input",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080022f8"
            ],
            "called": [
                "FUN_08003474"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ef2": {
            "entrypoint": "0x08002ef2",
            "current_name": "copy_data_08002ef2",
            "code": "\nvoid copyData_08002ef2(int buffer,undefined4 arg1,undefined2 arg2,undefined4 arg3)\n\n{\n  FUN_08003158(buffer + 0x40,arg1,arg2,arg3,arg3);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ef2": "copy_data_08002ef2",
                "param_1": "buffer",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3"
            },
            "calling": [
                "FUN_080022f8",
                "FUN_08000488"
            ],
            "called": [
                "FUN_08003158"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002efe": {
            "entrypoint": "0x08002efe",
            "current_name": "initialize_data_08002efe",
            "code": "\nvoid initializeData_08002efe(int dataAddress,undefined4 value1,undefined2 value2,undefined4 value3)\n\n{\n  FUN_0800319e(dataAddress + 0x40,value1,value2,value3,value3);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002efe": "initialize_data_08002efe",
                "param_1": "dataAddress",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3"
            },
            "calling": [
                "FUN_08000be8"
            ],
            "called": [
                "FUN_0800319e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f0a": {
            "entrypoint": "0x08002f0a",
            "current_name": "execute_function_with_offset_08002f0a",
            "code": "\nvoid execute_function_with_offset_08002f0a(int original_offset)\n\n{\n  FUN_0800325a(original_offset + 0x40);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f0a": "execute_function_with_offset_08002f0a",
                "param_1": "original_offset"
            },
            "calling": [
                "FUN_08001c18"
            ],
            "called": [
                "FUN_0800325a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f14": {
            "entrypoint": "0x08002f14",
            "current_name": "call_function_with_offset_08002f14",
            "code": "\nvoid callFunctionWithOffset_08002f14(int inputValue)\n\n{\n  FUN_080032a2(inputValue + 0x40);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f14": "call_function_with_offset_08002f14",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_08001c18",
                "FUN_08000500",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_080032a2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f1e": {
            "entrypoint": "0x08002f1e",
            "current_name": "execute_dynamic_function_08002f1e",
            "code": "\nvoid executeDynamicFunction_08002f1e(int functionPointer)\n\n{\n  (**(code **)**(undefined4 **)(functionPointer + 0xc0))();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f1e": "execute_dynamic_function_08002f1e",
                "param_1": "functionPointer"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f2c": {
            "entrypoint": "0x08002f2c",
            "current_name": "update_data_08002f2c",
            "code": "\nvoid updateData_08002f2c(undefined4 param1,uint param2,undefined4 param3)\n\n{\n  undefined4 temp1;\n  \n  if (param2 == 0xd0) {\n    DAT_200005f0 = param3;\n    return;\n  }\n  if (0xd0 < param2) {\n    if (param2 == 0xf4) {\n      DAT_200005e0 = param3;\n      return;\n    }\n    temp1 = param3;\n    if ((param2 != 0xf5) && (temp1 = DAT_200005e4, param2 == 0xe0)) {\n      DAT_200005d4 = param3;\n      return;\n    }\n    DAT_200005e4 = temp1;\n    return;\n  }\n  if (param2 == 0x90) {\n    DAT_200005dc = param3;\n    return;\n  }\n  if (param2 != 0xc0) {\n    return;\n  }\n  DAT_200005ec = param3;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f2c": "update_data_08002f2c",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "uVar1": "temp1"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f84": {
            "entrypoint": "0x08002f84",
            "current_name": "update_data_08002f84",
            "code": "\nvoid updateData_08002f84(undefined4 arg1,int status,undefined4 data)\n\n{\n  if (status == 0xff) {\n    DAT_200005e8 = data;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f84": "update_data_08002f84",
                "param_1": "arg1",
                "param_2": "status",
                "param_3": "data"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f94": {
            "entrypoint": "0x08002f94",
            "current_name": "store_param_3_08002f94",
            "code": "\nvoid store_param_3_08002f94(undefined4 param_1,undefined4 param_2,undefined4 param_3)\n\n{\n  DAT_200005d0 = param_3;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f94": "store_param_3_08002f94"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fa0": {
            "entrypoint": "0x08002fa0",
            "current_name": "get_byte_from_offset_08002fa0",
            "code": "\nundefined getByteFromOffset_08002fa0(int offset,int baseAddress)\n\n{\n  return *(undefined *)(baseAddress + offset + 0xcc);\n}\n\n",
            "renaming": {
                "FUN_08002fa0": "get_byte_from_offset_08002fa0",
                "param_1": "offset",
                "param_2": "baseAddress"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_08001cd0",
                "FUN_080022f8",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fa8": {
            "entrypoint": "0x08002fa8",
            "current_name": "update_character_08002fa8",
            "code": "\nvoid updateCharacter_08002fa8(int baseAddress,int offset,undefined newValue)\n\n{\n  if (*(char *)(baseAddress + offset + 0xcc) != '\\x7f') {\n    *(undefined *)(baseAddress + offset + 0xcc) = newValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002fa8": "update_character_08002fa8",
                "param_1": "baseAddress",
                "param_2": "offset",
                "param_3": "newValue"
            },
            "calling": [
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fba": {
            "entrypoint": "0x08002fba",
            "current_name": "get_value_at_offset_08002fba",
            "code": "\nundefined4 getValueAtOffset_08002fba(int baseAddress,int offset)\n\n{\n  return *(undefined4 *)(baseAddress + (offset + 0x42) * 4);\n}\n\n",
            "renaming": {
                "FUN_08002fba": "get_value_at_offset_08002fba",
                "param_1": "baseAddress",
                "param_2": "offset"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fc2": {
            "entrypoint": "0x08002fc2",
            "current_name": "store_value_at_index_08002fc2",
            "code": "\nvoid storeValueAtIndex_08002fc2(int arrayBaseAddress,int index,undefined4 value)\n\n{\n  *(undefined4 *)(arrayBaseAddress + (index + 0x42) * 4) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002fc2": "store_value_at_index_08002fc2",
                "param_1": "arrayBaseAddress",
                "param_2": "index",
                "param_3": "value"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fca": {
            "entrypoint": "0x08002fca",
            "current_name": "process_loop_08002fca",
            "code": "\nvoid processLoop_08002fca(undefined4 arg1,undefined4 arg2,int count,undefined4 arg4,\n                 undefined4 arg5)\n\n{\n  uint iteration;\n  \n  for (iteration = 0; (int)iteration < count; iteration = iteration + 1 & 0xff) {\n    FUNC_08008ac4(arg5);\n    FUN_08008a24(arg2,1);\n    FUNC_08008ac4(arg4);\n    FUN_08008a24(arg2,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002fca": "process_loop_08002fca",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "count",
                "param_4": "arg4",
                "param_5": "arg5",
                "uVar1": "iteration"
            },
            "calling": [
                "FUN_08003002"
            ],
            "called": [
                "FUN_08008ac4",
                "FUN_08008a24"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003002": {
            "entrypoint": "0x08003002",
            "current_name": "check_and_execute_operations_08003002",
            "code": "\nvoid checkAndExecuteOperations_08003002(int inputValue)\n\n{\n  if (*(char *)(inputValue + 0x1f8) != '\\0') {\n    return;\n  }\n  FUN_08008990(0xd,1);\n  FUN_08002fca(inputValue,0xd,2,0x28,0xd2);\n  FUNC_08008ac4(0xfa);\n  FUN_08002fca(inputValue,0xd,5,0x28,0xd2);\n  FUNC_08008ac4(0x7d);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003002": "check_and_execute_operations_08003002",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08003048"
            ],
            "called": [
                "FUN_08008990",
                "FUN_08008ac4",
                "FUN_08002fca"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003048": {
            "entrypoint": "0x08003048",
            "current_name": "initialize_data_08003048",
            "code": "\nvoid initializeData_08003048(undefined4 parameter1,undefined4 parameter2,undefined4 parameter3,undefined4 parameter4)\n\n{\n  FUN_08008c44(&DAT_20000700,parameter2,6,parameter4,parameter4);\n  FUN_08003002(parameter1);\n  FUN_08002e26(parameter1,&DAT_20000700);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003048": "initialize_data_08003048",
                "param_1": "parameter1",
                "param_2": "parameter2",
                "param_3": "parameter3",
                "param_4": "parameter4"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08003002",
                "FUN_08002e26",
                "FUN_08008c44"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800307a": {
            "entrypoint": "0x0800307a",
            "current_name": "decode_0800307a",
            "code": "\nvoid decode_0800307a(undefined4 *output_buffer,uint input_length,byte *input_buffer,uint max_output_length)\n\n{\n  uint current_byte;\n  uint bits_consumed;\n  uint output_length;\n  uint input_index;\n  \n  current_byte = (uint)*input_buffer;\n  if (max_output_length == 0) {\n    max_output_length = 0xffffffff;\n  }\n  input_index = 0;\n  bits_consumed = 0;\n  output_length = 0;\n  while ((input_index < input_length && (output_length < max_output_length))) {\n    (***(code ***)(undefined4 *)*output_buffer)\n              ((undefined4 *)*output_buffer,((uint)input_buffer[input_index] << (bits_consumed & 0xff) | current_byte) & 0x7f);\n    current_byte = (int)(uint)input_buffer[input_index] >> (7 - bits_consumed & 0xff) & 0xff;\n    bits_consumed = bits_consumed + 1;\n    while ((output_length = output_length + 1, 6 < bits_consumed && (output_length < max_output_length))) {\n      (***(code ***)(undefined4 *)*output_buffer)((undefined4 *)*output_buffer,current_byte & 0x7f);\n      current_byte = current_byte >> 7;\n      bits_consumed = bits_consumed - 7;\n    }\n    input_index = input_index + 1;\n  }\n  if ((bits_consumed != 0) && (output_length < max_output_length)) {\n    (***(code ***)(undefined4 *)*output_buffer)((undefined4 *)*output_buffer,(1 << (bits_consumed & 0xff)) - 1U & current_byte)\n    ;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800307a": "decode_0800307a",
                "param_1": "output_buffer",
                "param_2": "input_length",
                "param_3": "input_buffer",
                "param_4": "max_output_length",
                "uVar1": "current_byte",
                "uVar2": "bits_consumed",
                "uVar3": "output_length",
                "uVar4": "input_index"
            },
            "calling": [
                "FUN_08003158",
                "FUN_080031ce",
                "FUN_08003106",
                "FUN_0800319e",
                "FUN_0800325a"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003106": {
            "entrypoint": "0x08003106",
            "current_name": "execute_operations_08003106",
            "code": "\nvoid execute_operations_08003106(undefined4 *operation_ptr,undefined4 first_param,undefined4 second_param,undefined4 third_param)\n\n{\n  undefined4 *operation;\n  \n  operation = (undefined4 *)*operation_ptr;\n  if (operation != (undefined4 *)0x0) {\n    (**(code **)*operation)(operation,0xf0);\n    (***(code ***)(undefined4 *)*operation_ptr)((undefined4 *)*operation_ptr,0x6f);\n    (***(code ***)(undefined4 *)*operation_ptr)((undefined4 *)*operation_ptr,first_param);\n    FUN_0800307a(operation_ptr,second_param,third_param,second_param);\n    (***(code ***)(undefined4 *)*operation_ptr)((undefined4 *)*operation_ptr,0xf7);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003106": "execute_operations_08003106",
                "param_1": "operation_ptr",
                "param_2": "first_param",
                "param_3": "second_param",
                "param_4": "third_param",
                "puVar1": "operation"
            },
            "calling": [
                "FUN_08003158"
            ],
            "called": [
                "FUN_0800307a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800314e": {
            "entrypoint": "0x0800314e",
            "current_name": "initialize_pointer_0800314e",
            "code": "\nvoid initializePointer_0800314e(undefined4 *outputPointer)\n\n{\n  *outputPointer = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800314e": "initialize_pointer_0800314e",
                "param_1": "outputPointer"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003154": {
            "entrypoint": "0x08003154",
            "current_name": "copy_param_to_pointer_08003154",
            "code": "\nvoid copyParamToPointer_08003154(undefined4 *destination,undefined4 value)\n\n{\n  *destination = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003154": "copy_param_to_pointer_08003154",
                "param_1": "destination",
                "param_2": "value"
            },
            "calling": [
                "FUN_08002e26"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003158": {
            "entrypoint": "0x08003158",
            "current_name": "execute_function_08003158",
            "code": "\nvoid executeFunction_08003158(undefined4 *functionPointer,uint inputValue,ushort ushortValue)\n\n{\n  undefined4 *tempPointer;\n  ushort localUshort;\n  \n  tempPointer = (undefined4 *)*functionPointer;\n  if (tempPointer != (undefined4 *)0x0) {\n    localUshort = ushortValue;\n    if (((int)inputValue < 0x10) && (ushortValue < 0x4000)) {\n      (**(code **)*tempPointer)(tempPointer,inputValue | 0xe0);\n      FUN_0800307a(functionPointer,2,&localUshort);\n    }\n    else {\n      FUN_08003106(functionPointer,inputValue,2,&localUshort);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003158": "execute_function_08003158",
                "param_1": "functionPointer",
                "param_2": "inputValue",
                "param_3": "ushortValue",
                "puVar1": "tempPointer",
                "local_a": "localUshort"
            },
            "calling": [
                "FUN_08002ef2"
            ],
            "called": [
                "FUN_0800307a",
                "FUN_08003106"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800319e": {
            "entrypoint": "0x0800319e",
            "current_name": "execute_function_and_handle_result_0800319e",
            "code": "\nvoid executeFunctionAndHandleResult_0800319e(undefined4 *functionPointer,uint flags,undefined2 argument)\n\n{\n  undefined4 *pointerToFunction;\n  undefined2 tempArgument;\n  \n  pointerToFunction = (undefined4 *)*functionPointer;\n  if (pointerToFunction != (undefined4 *)0x0) {\n    tempArgument = argument;\n    (**(code **)*pointerToFunction)(pointerToFunction,flags & 0xf | 0x90);\n    FUN_0800307a(functionPointer,2,&tempArgument);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800319e": "execute_function_and_handle_result_0800319e",
                "param_1": "functionPointer",
                "param_2": "flags",
                "param_3": "argument",
                "puVar1": "pointerToFunction",
                "local_a": "tempArgument"
            },
            "calling": [
                "FUN_08002efe"
            ],
            "called": [
                "FUN_0800307a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080031ce": {
            "entrypoint": "0x080031ce",
            "current_name": "execute_fun_080031ce",
            "code": "\nvoid execute_fun_080031ce(undefined4 *function_ptr_list,undefined4 param_2,undefined4 param_3,uint count,int start_index\n                 )\n\n{\n  undefined4 *function_ptr;\n  uint i;\n  \n  function_ptr = (undefined4 *)*function_ptr_list;\n  if (function_ptr != (undefined4 *)0x0) {\n    (**(code **)*function_ptr)(function_ptr,0xf0,param_3,*(code **)*function_ptr,count);\n    (***(code ***)(undefined4 *)*function_ptr_list)((undefined4 *)*function_ptr_list,0x79);\n    (***(code ***)(undefined4 *)*function_ptr_list)((undefined4 *)*function_ptr_list,param_2);\n    (***(code ***)(undefined4 *)*function_ptr_list)((undefined4 *)*function_ptr_list,param_3);\n    for (i = 0; i < count; i = i + 1) {\n      FUN_0800307a(function_ptr_list,1,start_index + i,0);\n    }\n    (***(code ***)(undefined4 *)*function_ptr_list)((undefined4 *)*function_ptr_list,0xf7);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080031ce": "execute_fun_080031ce",
                "param_1": "function_ptr_list",
                "param_4": "count",
                "param_5": "start_index",
                "puVar1": "function_ptr",
                "uVar2": "i"
            },
            "calling": [
                "FUN_08002df6"
            ],
            "called": [
                "FUN_0800307a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800322c": {
            "entrypoint": "0x0800322c",
            "current_name": "execute_function_chain_0800322c",
            "code": "\nvoid executeFunctionChain_0800322c(undefined4 *functionPointer,undefined4 argument1,undefined4 argument2)\n\n{\n  undefined4 *functionPtr;\n  \n  functionPtr = (undefined4 *)*functionPointer;\n  if (functionPtr != (undefined4 *)0x0) {\n    (**(code **)*functionPtr)(functionPtr,0xf9);\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,argument1);\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,argument2);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800322c": "execute_function_chain_0800322c",
                "param_1": "functionPointer",
                "param_2": "argument1",
                "param_3": "argument2",
                "puVar1": "functionPtr"
            },
            "calling": [
                "FUN_08002ddc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800325a": {
            "entrypoint": "0x0800325a",
            "current_name": "execute_function_0800325a",
            "code": "\nvoid executeFunction_0800325a(undefined4 *functionPointer,undefined4 param_2,uint numIterations,int baseValue)\n\n{\n  undefined4 *functionPointer;\n  uint iteration;\n  \n  functionPointer = (undefined4 *)*functionPointer;\n  if (functionPointer != (undefined4 *)0x0) {\n    (**(code **)*functionPointer)(functionPointer,0xf0);\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,param_2);\n    for (iteration = 0; iteration < numIterations; iteration = iteration + 1) {\n      FUN_0800307a(functionPointer,1,baseValue + iteration,0);\n    }\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,0xf7);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800325a": "execute_function_0800325a",
                "param_1": "functionPointer",
                "param_3": "numIterations",
                "param_4": "baseValue",
                "puVar1": "functionPointer",
                "uVar2": "iteration"
            },
            "calling": [
                "FUN_08002f0a",
                "FUN_080032a2"
            ],
            "called": [
                "FUN_0800307a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080032a2": {
            "entrypoint": "0x080032a2",
            "current_name": "send_data_080032a2",
            "code": "\nvoid send_data_080032a2(undefined4 socket,undefined4 data,undefined4 size,undefined4 flag)\n\n{\n  undefined4 formatted_data;\n  \n  formatted_data = FUN_08000178(data);\n  FUN_0800325a(socket,0x71,formatted_data,data,flag);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080032a2": "send_data_080032a2",
                "param_1": "socket",
                "param_2": "data",
                "param_3": "size",
                "param_4": "flag",
                "uVar1": "formatted_data"
            },
            "calling": [
                "FUN_08002f14"
            ],
            "called": [
                "FUN_08000178",
                "FUN_0800325a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080032bc": {
            "entrypoint": "0x080032bc",
            "current_name": "initialize_params_080032bc",
            "code": "\nvoid initializeParams_080032bc(int paramAddress,int paramValue,undefined4 param3Value)\n\n{\n  *(int *)(paramAddress + 4) = paramValue;\n  *(undefined4 *)(paramAddress + 8) = param3Value;\n  *(undefined *)(paramAddress + 0xc) = 0;\n  *(undefined *)(paramAddress + 0xd) = 0;\n  *(undefined4 *)(paramAddress + 0x10) = 0;\n  *(undefined *)(paramAddress + 0x14) = 0;\n  *(undefined4 *)(paramAddress + 0x18) = 0;\n  *(undefined4 *)(paramAddress + 0x1c) = 0;\n  *(undefined4 *)(paramAddress + 0x20) = 0;\n  *(undefined4 *)(paramAddress + 0x24) = 0;\n  *(undefined4 *)(paramAddress + 0x28) = 0;\n  *(undefined4 *)(paramAddress + 0x2c) = 0;\n  *(undefined4 *)(paramAddress + 0x30) = 0;\n  *(undefined4 *)(paramAddress + 0x34) = 0;\n  *(undefined4 *)(paramAddress + 0x38) = 0;\n  *(undefined4 *)(paramAddress + 0x3c) = 0;\n  *(undefined4 *)(paramAddress + 0x40) = 0;\n  *(undefined4 *)(paramAddress + 0x44) = 0;\n  *(undefined4 *)(paramAddress + 0x48) = 0;\n  *(undefined4 *)(paramAddress + 0x4c) = 0;\n  *(undefined4 *)(paramAddress + 0x50) = 0;\n  *(undefined4 *)(paramAddress + 0x54) = 0;\n  *(undefined4 *)(paramAddress + 0x58) = 0;\n  *(undefined4 *)(paramAddress + 0x5c) = 0;\n  *(undefined4 *)(paramAddress + 0x60) = 0;\n  *(undefined4 *)(paramAddress + 100) = 0;\n  *(undefined4 *)(paramAddress + 0x68) = 0;\n  *(undefined4 *)(paramAddress + 0x6c) = 0;\n  *(undefined4 *)(paramAddress + 0x70) = 0;\n  *(undefined4 *)(paramAddress + 0x74) = 0;\n  *(undefined4 *)(paramAddress + 0x78) = 0;\n  *(bool *)paramAddress = paramValue == 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080032bc": "initialize_params_080032bc",
                "param_1": "paramAddress",
                "param_2": "paramValue",
                "param_3": "param3Value"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003306": {
            "entrypoint": "0x08003306",
            "current_name": "update_data_08003306",
            "code": "\nvoid updateData_08003306(int dataAddress,uint value,undefined4 newValue1,undefined4 newValue2)\n\n{\n  if (value == 0xd0) {\n    *(undefined4 *)(dataAddress + 0x58) = newValue1;\n    *(undefined4 *)(dataAddress + 0x28) = newValue2;\n    return;\n  }\n  if (0xd0 < value) {\n    if (value == 0xf4) {\n      *(undefined4 *)(dataAddress + 0x5c) = newValue1;\n      *(undefined4 *)(dataAddress + 0x2c) = newValue2;\n      return;\n    }\n    if (value == 0xf5) {\n      *(undefined4 *)(dataAddress + 0x60) = newValue1;\n      *(undefined4 *)(dataAddress + 0x30) = newValue2;\n    }\n    else if (value == 0xe0) {\n      *(undefined4 *)(dataAddress + 0x4c) = newValue1;\n      *(undefined4 *)(dataAddress + 0x1c) = newValue2;\n      return;\n    }\n    return;\n  }\n  if (value == 0x90) {\n    *(undefined4 *)(dataAddress + 0x50) = newValue1;\n    *(undefined4 *)(dataAddress + 0x20) = newValue2;\n    return;\n  }\n  if (value == 0xc0) {\n    *(undefined4 *)(dataAddress + 0x54) = newValue1;\n    *(undefined4 *)(dataAddress + 0x24) = newValue2;\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003306": "update_data_08003306",
                "param_1": "dataAddress",
                "param_2": "value",
                "param_3": "newValue1",
                "param_4": "newValue2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003346": {
            "entrypoint": "0x08003346",
            "current_name": "update_memory_08003346",
            "code": "\nvoid updateMemory_08003346(int memoryAddress,int value,undefined4 newValue1,undefined4 newValue2)\n\n{\n  if (value == 0x79) {\n    *(undefined4 *)(memoryAddress + 0x70) = newValue1;\n    *(undefined4 *)(memoryAddress + 0x34) = newValue2;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003346": "update_memory_08003346",
                "param_1": "memoryAddress",
                "param_2": "value",
                "param_3": "newValue1",
                "param_4": "newValue2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003350": {
            "entrypoint": "0x08003350",
            "current_name": "update_data_08003350",
            "code": "\nvoid updateData_08003350(int ptr,int inputValue,undefined4 data1,undefined4 data2)\n\n{\n  if (inputValue == 0xf9) {\n    *(undefined4 *)(ptr + 0x74) = data1;\n    *(undefined4 *)(ptr + 0x38) = data2;\n    return;\n  }\n  if (inputValue != 0xff) {\n    return;\n  }\n  *(undefined4 *)(ptr + 0x78) = data1;\n  *(undefined4 *)(ptr + 0x48) = data2;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003350": "update_data_08003350",
                "param_1": "ptr",
                "param_2": "inputValue",
                "param_3": "data1",
                "param_4": "data2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003366": {
            "entrypoint": "0x08003366",
            "current_name": "update_data_08003366",
            "code": "\nvoid updateData_08003366(int data,int flag,undefined4 value1,undefined4 value2)\n\n{\n  if (flag == 0x71) {\n    *(undefined4 *)(data + 0x68) = value1;\n    *(undefined4 *)(data + 0x40) = value2;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003366": "update_data_08003366",
                "param_1": "data",
                "param_2": "flag",
                "param_3": "value1",
                "param_4": "value2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003370": {
            "entrypoint": "0x08003370",
            "current_name": "set_parameters_08003370",
            "code": "\nvoid setParameters_08003370(int objectAddress,undefined4 unusedParameter1,undefined4 newParam,undefined4 newParam2)\n\n{\n  *(undefined4 *)(objectAddress + 0x6c) = newParam;\n  *(undefined4 *)(objectAddress + 0x44) = newParam2;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003370": "set_parameters_08003370",
                "param_1": "objectAddress",
                "param_2": "unusedParameter1",
                "param_3": "newParam",
                "param_4": "newParam2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003376": {
            "entrypoint": "0x08003376",
            "current_name": "update_memory_08003376",
            "code": "\nvoid updateMemory_08003376(undefined *memory,undefined value,uint index)\n\n{\n  bool isWithinBounds;\n  \n  if (index < *(uint *)(memory + 8)) {\n    isWithinBounds = false;\n  }\n  else {\n    isWithinBounds = true;\n    if (*(code **)(memory + 100) != (code *)0x0) {\n      *memory = 1;\n      (**(code **)(memory + 100))(*(undefined4 *)(memory + 0x3c));\n      if (index < *(uint *)(memory + 8)) {\n        isWithinBounds = false;\n      }\n      else {\n        isWithinBounds = true;\n      }\n    }\n  }\n  if (!isWithinBounds) {\n    *(undefined *)(*(int *)(memory + 4) + index) = value;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003376": "update_memory_08003376",
                "param_1": "memory",
                "param_2": "value",
                "param_3": "index",
                "bVar1": "isWithinBounds"
            },
            "calling": [
                "FUN_08003474",
                "FUN_080033cc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080033a8": {
            "entrypoint": "0x080033a8",
            "current_name": "copy_and_shift_bytes_080033a8",
            "code": "\nvoid copyAndShiftBytes_080033a8(undefined4 data,uint length,int buffer)\n\n{\n  byte currentByte;\n  int currentIndex;\n  uint currentOffset;\n  \n  currentIndex = 0;\n  for (currentOffset = 0; currentOffset < length; currentOffset = currentOffset + 2) {\n    currentByte = *(byte *)(buffer + currentOffset);\n    *(byte *)(buffer + currentIndex) = currentByte;\n    *(byte *)(buffer + currentIndex) = *(char *)(buffer + currentOffset + 1) << 7 | currentByte;\n    currentIndex = currentIndex + 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080033a8": "copy_and_shift_bytes_080033a8",
                "param_1": "data",
                "param_2": "length",
                "param_3": "buffer",
                "bVar1": "currentByte",
                "iVar2": "currentIndex",
                "uVar3": "currentOffset"
            },
            "calling": [
                "FUN_080033cc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080033cc": {
            "entrypoint": "0x080033cc",
            "current_name": "process_input_080033cc",
            "code": "\nvoid processInput_080033cc(int inputData,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  char firstChar;\n  int tempVar;\n  char *charPtr;\n  \n  charPtr = *(char **)(inputData + 4);\n  firstChar = *charPtr;\n  if (firstChar == 'q') {\n    if (*(int *)(inputData + 0x68) != 0) {\n      tempVar = FUN_080033a8(inputData,*(int *)(inputData + 0x18) + -1,charPtr + 1,charPtr,param4);\n      FUN_08003376(inputData,0,tempVar + 1);\n      (**(code **)(inputData + 0x68))(*(undefined4 *)(inputData + 0x40),*(int *)(inputData + 4) + 1);\n      return;\n    }\n  }\n  else if (firstChar == 'y') {\n    if (*(code **)(inputData + 0x70) != (code *)0x0) {\n      if (*(uint *)(inputData + 0x18) < 3) {\n        (**(code **)(inputData + 0x70))(*(undefined4 *)(inputData + 0x34),0,0);\n        return;\n      }\n      tempVar = FUN_080033a8(inputData,*(uint *)(inputData + 0x18) - 3,charPtr + 3,charPtr,param4);\n      FUN_08003376(inputData,0,tempVar + 3);\n      tempVar = *(int *)(inputData + 4);\n      (**(code **)(inputData + 0x70))\n                (*(undefined4 *)(inputData + 0x34),*(undefined *)(tempVar + 1),*(undefined *)(tempVar + 2)\n                 ,tempVar + 3);\n      return;\n    }\n  }\n  else if (*(code **)(inputData + 0x6c) != (code *)0x0) {\n    (**(code **)(inputData + 0x6c))\n              (*(undefined4 *)(inputData + 0x44),firstChar,*(int *)(inputData + 0x18) + -1,charPtr + 1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080033cc": "process_input_080033cc",
                "param_1": "inputData",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "cVar1": "firstChar",
                "iVar2": "tempVar",
                "pcVar3": "charPtr"
            },
            "calling": [
                "FUN_08003474"
            ],
            "called": [
                "FUN_08003376",
                "FUN_080033a8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800344a": {
            "entrypoint": "0x0800344a",
            "current_name": "initialize_function_0800344a",
            "code": "\nvoid initializeFunction_0800344a(int functionParameter)\n\n{\n  uint iterator;\n  \n  *(undefined4 *)(functionParameter + 0x10) = 0;\n  *(undefined *)(functionParameter + 0xc) = 0;\n  *(undefined *)(functionParameter + 0xd) = 0;\n  for (iterator = 0; iterator < *(uint *)(functionParameter + 8); iterator = iterator + 1) {\n    *(undefined *)(*(int *)(functionParameter + 4) + iterator) = 0;\n  }\n  *(undefined *)(functionParameter + 0x14) = 0;\n  *(undefined4 *)(functionParameter + 0x18) = 0;\n  if (*(code **)(functionParameter + 0x78) != (code *)0x0) {\n    (**(code **)(functionParameter + 0x78))(*(undefined4 *)(functionParameter + 0x48));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800344a": "initialize_function_0800344a",
                "param_1": "functionParameter",
                "uVar1": "iterator"
            },
            "calling": [
                "FUN_08003474"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003474": {
            "entrypoint": "0x08003474",
            "current_name": "process_param_08003474",
            "code": "\nvoid processParam_08003474(int param_ptr,uint param_val)\n\n{\n  byte byte_val;\n  \n  if (*(char *)(param_ptr + 0x14) != '\\0') {\n    if (param_val != 0xf7) {\n      FUN_08003376(param_ptr,param_val,*(undefined4 *)(param_ptr + 0x18));\n      *(int *)(param_ptr + 0x18) = *(int *)(param_ptr + 0x18) + 1;\n      return;\n    }\n    *(undefined *)(param_ptr + 0x14) = 0;\n    FUN_080033cc();\n    return;\n  }\n  if ((*(int *)(param_ptr + 0x10) == 0) || (0x7f < (int)param_val)) {\n    if ((int)param_val < 0xf0) {\n      *(byte *)(param_ptr + 0xd) = (byte)param_val & 0xf;\n      param_val = param_val & 0xf0;\n    }\n    if (param_val == 0xf0) {\n      *(undefined *)(param_ptr + 0x14) = 1;\n      *(undefined4 *)(param_ptr + 0x18) = 0;\n      return;\n    }\n    if (param_val < 0xf1) {\n      if (param_val != 0xc0) {\n        if (param_val < 0xc1) {\n          if (param_val != 0x90) {\n            return;\n          }\n        }\n        else {\n          if (param_val == 0xd0) goto LAB_0800359c;\n          if (param_val != 0xe0) {\n            return;\n          }\n        }\nLAB_08003586:\n        *(undefined4 *)(param_ptr + 0x10) = 2;\n        *(char *)(param_ptr + 0xc) = (char)param_val;\n        return;\n      }\nLAB_0800359c:\n      *(undefined4 *)(param_ptr + 0x10) = 1;\n      *(char *)(param_ptr + 0xc) = (char)param_val;\n      return;\n    }\n    if (param_val != 0xf9) {\n      if (0xf9 < param_val) {\n        if (param_val == 0xff) {\n          FUN_0800344a(param_ptr);\n          return;\n        }\n        return;\n      }\n      if (1 < param_val - 0xf4) {\n        return;\n      }\n      goto LAB_08003586;\n    }\n    if (*(code **)(param_ptr + 0x74) != (code *)0x0) {\n      (**(code **)(param_ptr + 0x74))(*(undefined4 *)(param_ptr + 0x38));\n    }\n  }\n  else {\n    *(int *)(param_ptr + 0x10) = *(int *)(param_ptr + 0x10) + -1;\n    FUN_08003376();\n    if ((*(int *)(param_ptr + 0x10) == 0) && (byte_val = *(byte *)(param_ptr + 0xc), byte_val != 0)) {\n      if (byte_val == 0xd0) {\n        if (*(code **)(param_ptr + 0x58) != (code *)0x0) {\n          (**(code **)(param_ptr + 0x58))\n                    (*(undefined4 *)(param_ptr + 0x28),*(undefined *)(param_ptr + 0xd),\n                     **(undefined **)(param_ptr + 4));\n        }\n      }\n      else if (byte_val < 0xd1) {\n        if (byte_val == 0x90) {\n          if (*(code **)(param_ptr + 0x50) != (code *)0x0) {\n            (**(code **)(param_ptr + 0x50))\n                      (*(undefined4 *)(param_ptr + 0x20),*(undefined *)(param_ptr + 0xd),\n                       (uint)(*(byte **)(param_ptr + 4))[1] + (uint)**(byte **)(param_ptr + 4) * 0x80);\n          }\n        }\n        else if ((byte_val == 0xc0) && (*(code **)(param_ptr + 0x54) != (code *)0x0)) {\n          (**(code **)(param_ptr + 0x54))\n                    (*(undefined4 *)(param_ptr + 0x24),*(undefined *)(param_ptr + 0xd),\n                     **(undefined **)(param_ptr + 4));\n        }\n      }\n      else if (byte_val == 0xf4) {\n        if (*(code **)(param_ptr + 0x5c) != (code *)0x0) {\n          (**(code **)(param_ptr + 0x5c))\n                    (*(undefined4 *)(param_ptr + 0x2c),(*(undefined **)(param_ptr + 4))[1],\n                     **(undefined **)(param_ptr + 4));\n        }\n      }\n      else if (byte_val == 0xf5) {\n        if (*(code **)(param_ptr + 0x60) != (code *)0x0) {\n          (**(code **)(param_ptr + 0x60))\n                    (*(undefined4 *)(param_ptr + 0x30),(*(undefined **)(param_ptr + 4))[1],\n                     **(undefined **)(param_ptr + 4));\n        }\n      }\n      else if ((byte_val == 0xe0) && (*(code **)(param_ptr + 0x4c) != (code *)0x0)) {\n        (**(code **)(param_ptr + 0x4c))\n                  (*(undefined4 *)(param_ptr + 0x1c),*(undefined *)(param_ptr + 0xd),\n                   (uint)(*(byte **)(param_ptr + 4))[1] + (uint)**(byte **)(param_ptr + 4) * 0x80);\n      }\n      *(undefined *)(param_ptr + 0xc) = 0;\n      return;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003474": "process_param_08003474",
                "param_1": "param_ptr",
                "param_2": "param_val",
                "bVar1": "byte_val"
            },
            "calling": [
                "FUN_08002ed2"
            ],
            "called": [
                "FUN_08003376",
                "FUN_080033cc",
                "FUN_0800344a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080035b8": {
            "entrypoint": "0x080035b8",
            "current_name": "initialize_device_080035b8",
            "code": "\nvoid initializeDevice_080035b8(void)\n\n{\n  int result;\n  uint timeInSeconds;\n  undefined4 localArray1 [2];\n  undefined4 localVariable1;\n  undefined4 localVariable2;\n  undefined4 localVariable3;\n  undefined4 localVariable4;\n  undefined4 localVariable5;\n  undefined4 localVariable6;\n  undefined4 localArray2 [4];\n  undefined4 localVariable7;\n  undefined4 localVariable8;\n  undefined4 localVariable9;\n  undefined4 localVariable10;\n  undefined4 localVariable11;\n  \n  localArray2[0] = 2;\n  localVariable7 = 1;\n  localVariable8 = 0x10;\n  localVariable9 = 2;\n  localVariable10 = 0;\n  localVariable11 = 0x380000;\n  result = FUN_08005460(localArray2);\n  if (result != 0) {\n    FUN_080073e8(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x88);\n  }\n  localVariable2 = 0xf;\n  localVariable3 = 2;\n  localVariable4 = 0;\n  localVariable5 = 0x400;\n  localVariable6 = 0;\n  result = FUN_080058ac(&localVariable2);\n  if (result != 0) {\n    FUN_080073e8(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x95);\n  }\n  localArray1[0] = 2;\n  localVariable1 = 0x8000;\n  result = FUN_08005aa4(localArray1);\n  if (result != 0) {\n    FUN_080073e8(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x9c);\n  }\n  timeInSeconds = FUN_08005a1c();\n  FUN_08003fd8(timeInSeconds / 1000);\n  FUN_08004024(4);\n  FUN_08003f30(0xffffffff,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080035b8": "initialize_device_080035b8",
                "iVar1": "result",
                "uVar2": "timeInSeconds",
                "local_54": "localArray1",
                "local_4c": "localVariable1",
                "local_44": "localVariable2",
                "local_40": "localVariable3",
                "local_3c": "localVariable4",
                "local_38": "localVariable5",
                "local_34": "localVariable6",
                "local_30": "localArray2",
                "local_20": "localVariable7",
                "local_1c": "localVariable8",
                "local_14": "localVariable9",
                "local_10": "localVariable10",
                "local_c": "localVariable11"
            },
            "calling": [
                "FUN_080072fa"
            ],
            "called": [
                "FUN_08005a1c",
                "FUN_08005aa4",
                "FUN_08004024",
                "FUN_08003fd8",
                "FUN_08003f30",
                "FUN_08005460",
                "FUN_080073e8",
                "FUN_080058ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "entry": {
            "entrypoint": "0x08003658",
            "current_name": "entry",
            "code": "\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined4 *)(iVar1 + 0x20000000) < &DAT_200000f4; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x800ac18);\n  }\n  for (puVar2 = &DAT_200000f4; puVar2 < &DAT_20000a3c; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  FUN_080073ec();\n  FUN_08009148();\n  UNRECOVERED_JUMPTABLE = (code *)0x800368a;\n  FUN_08008f1c();\n                    /* WARNING: Could not recover jumptable at 0x0800368a. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "renaming": {},
            "calling": [],
            "called": [
                "FUN_080073ec",
                "FUN_08009148",
                "FUN_08008f1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036a2": {
            "entrypoint": "0x080036a2",
            "current_name": "initialize_application_080036a2",
            "code": "\nvoid initialize_application_080036a2(void)\n\n{\n  FUN_080072fa();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080036a2": "initialize_application_080036a2"
            },
            "calling": [
                "FUN_08008f0e"
            ],
            "called": [
                "FUN_080072fa"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036ac": {
            "entrypoint": "0x080036ac",
            "current_name": "find_char_index_080036ac",
            "code": "\nuint find_char_index_080036ac(int input_value)\n\n{\n  uint index;\n  \n  if ((uint)(input_value << 0x18) >> 0x1c < 5) {\n    for (index = 0; (index < 0x3c && (input_value != (char)(&DAT_0800a908)[index])); index = index + 1)\n    {\n    }\n  }\n  else {\n    index = 0xffffffff;\n  }\n  return index;\n}\n\n",
            "renaming": {
                "FUN_080036ac": "find_char_index_080036ac",
                "param_1": "input_value",
                "uVar1": "index"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_08001cd0",
                "FUN_08000aec",
                "FUN_080022f8",
                "FUN_08000a64",
                "FUN_08000ef8",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036d4": {
            "entrypoint": "0x080036d4",
            "current_name": "FUNC_080036d4",
            "code": "\nvoid FUNC_080036d4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080036d4": "FUNC_080036d4"
            },
            "calling": [
                "FUN_08003724"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080036d8": {
            "entrypoint": "0x080036d8",
            "current_name": "check_and_set_param_080036d8",
            "code": "\nundefined4 checkAndSetParam_080036d8(uint inputParam)\n\n{\n  int result;\n  \n  result = FUN_08003fd8(DAT_20000018 / (1000 / DAT_2000000c));\n  if (result != 0) {\n    return 1;\n  }\n  if (0xf < inputParam) {\n    return 1;\n  }\n  FUN_08003f30(0xffffffff,inputParam,0);\n  DAT_20000010 = inputParam;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080036d8": "check_and_set_param_080036d8",
                "param_1": "inputParam",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08003724",
                "FUN_080058d2"
            ],
            "called": [
                "FUN_08003fd8",
                "FUN_08003f30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003724": {
            "entrypoint": "0x08003724",
            "current_name": "initialize_system_08003724",
            "code": "\n\n\nundefined4 initializeSystem_08003724(void)\n\n{\n  _DAT_40022000 = _DAT_40022000 | 0x10;\n  FUN_08003f0c(3);\n  FUN_080036d8(0xf);\n  FUNC_080036d4();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003724": "initialize_system_08003724"
            },
            "calling": [
                "FUN_080072fa"
            ],
            "called": [
                "FUN_080036d4",
                "FUN_080036d8",
                "FUN_08003f0c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003748": {
            "entrypoint": "0x08003748",
            "current_name": "addition_with_global_variable_08003748",
            "code": "\nvoid additionWithGlobalVariable_08003748(void)\n\n{\n  DAT_20000a34 = (uint)DAT_2000000c + DAT_20000a34;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003748": "addition_with_global_variable_08003748"
            },
            "calling": [
                "FUN_08007246"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003760": {
            "entrypoint": "0x08003760",
            "current_name": "get_data_08003760",
            "code": "\nundefined4 get_data_08003760(void)\n\n{\n  return DAT_20000a34;\n}\n\n",
            "renaming": {
                "FUN_08003760": "get_data_08003760"
            },
            "calling": [
                "FUN_080066e8",
                "FUN_080067ac",
                "FUN_0800376c",
                "FUN_08003b8c",
                "FUN_080058d2",
                "FUN_08007e74",
                "FUN_08008500",
                "FUN_08005aa4",
                "FUN_08007f0e",
                "FUN_0800723c",
                "FUN_08003a20",
                "FUN_08003e20",
                "FUN_08005460"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800376c": {
            "entrypoint": "0x0800376c",
            "current_name": "check_and_modify_flags_0800376c",
            "code": "\nundefined4 checkAndModifyFlags_0800376c(uint **parameters,uint size)\n\n{\n  int initialValue;\n  uint randomValue;\n  int tempValue;\n  undefined4 result;\n  uint *dataPtr;\n  uint calculationResult;\n  uint counter;\n  \n  counter = 0;\n  initialValue = FUN_08003760();\n  calculationResult = DAT_20000018;\n  dataPtr = *parameters;\n  if ((dataPtr[2] & 0x100) == 0) {\n    if (((dataPtr[1] & 0x100) == 0) && ((dataPtr[0xb] & 0xf00000) == 0)) {\n      do {\n        if ((**parameters & 2) != 0) goto LAB_0800387e;\n      } while ((size == 0xffffffff) ||\n              ((size != 0 && (tempValue = FUN_08003760(), (uint)(tempValue - initialValue) <= size))));\n      parameters[10] = (uint *)((uint)parameters[10] | 4);\n      *(undefined *)(parameters + 9) = 0;\n      result = 3;\n    }\n    else {\n      randomValue = FUN_08005bb8(2);\n      dataPtr = *parameters;\n      if (((dataPtr[4] & 0x24924924) == 0) && ((dataPtr[3] & 0x924924) == 0)) {\n        if ((dataPtr[4] & 0x12492492) == 0) {\n          if ((dataPtr[3] & 0x492492) == 0) {\n            tempValue = 0x14;\n          }\n          else {\n            tempValue = 0x29;\n          }\n        }\n        else {\n          tempValue = 0x29;\n        }\n      }\n      else if (((dataPtr[4] & 0x12492492) == 0) && ((dataPtr[3] & 0x492492) == 0)) {\n        tempValue = 0x54;\n      }\n      else if ((dataPtr[4] & 0x249249) == 0) {\n        if ((dataPtr[3] & 0x249249) == 0) {\n          tempValue = 0x54;\n        }\n        else {\n          tempValue = 0xfc;\n        }\n      }\n      else {\n        tempValue = 0xfc;\n      }\n      calculationResult = (calculationResult / randomValue) * tempValue;\n      for (; counter <= calculationResult && calculationResult - counter != 0; counter = counter + 1) {\n        if ((size != 0xffffffff) &&\n           ((size == 0 || (tempValue = FUN_08003760(), size < (uint)(tempValue - initialValue))))) {\n          parameters[10] = (uint *)((uint)parameters[10] | 4);\n          *(undefined *)(parameters + 9) = 0;\n          return 3;\n        }\n      }\nLAB_0800387e:\n      **parameters = 0xffffffed;\n      parameters[10] = (uint *)((uint)parameters[10] | 0x200);\n      if (((*parameters)[2] & 0xe0000) == 0xe0000) {\n        if (parameters[3] == (uint *)0x0) {\n          parameters[10] = (uint *)((uint)parameters[10] & 0xfffffeff);\n          if (((uint)parameters[10] & 0x1000) == 0) {\n            parameters[10] = (uint *)((uint)parameters[10] | 1);\n            result = 0;\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        result = 0;\n      }\n    }\n  }\n  else {\n    parameters[10] = (uint *)((uint)parameters[10] | 0x20);\n    *(undefined *)(parameters + 9) = 0;\n    result = 1;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_0800376c": "check_and_modify_flags_0800376c",
                "param_1": "parameters",
                "param_2": "size",
                "iVar1": "initialValue",
                "uVar2": "randomValue",
                "iVar3": "tempValue",
                "uVar4": "result",
                "puVar5": "dataPtr",
                "uVar6": "calculationResult",
                "local_1c": "counter"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08005bb8",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080038dc": {
            "entrypoint": "0x080038dc",
            "current_name": "get_offset_value_080038dc",
            "code": "\nundefined4 get_offset_value_080038dc(int *offset_ptr)\n\n{\n  return *(undefined4 *)(*offset_ptr + 0x4c);\n}\n\n",
            "renaming": {
                "FUN_080038dc": "get_offset_value_080038dc",
                "param_1": "offset_ptr"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080038e4": {
            "entrypoint": "0x080038e4",
            "current_name": "reverse_and_modify_080038e4",
            "code": "\nundefined4 reverseAndModify_080038e4(int *data,uint *values)\n\n{\n  undefined4 result;\n  uint index;\n  int count;\n  \n  if (*(char *)(data + 9) == '\\x01') {\n    result = 2;\n  }\n  else {\n    *(undefined *)(data + 9) = 1;\n    index = values[1];\n    if (index < 7) {\n      index = index * 5 - 5;\n      *(uint *)(*data + 0x34) =\n           *values << (index & 0xff) | *(uint *)(*data + 0x34) & ~(0x1f << (index & 0xff));\n    }\n    else if (index < 0xd) {\n      index = index * 5 - 0x23;\n      *(uint *)(*data + 0x30) =\n           *values << (index & 0xff) | *(uint *)(*data + 0x30) & ~(0x1f << (index & 0xff));\n    }\n    else {\n      index = index * 5 - 0x41;\n      *(uint *)(*data + 0x2c) =\n           *values << (index & 0xff) | *(uint *)(*data + 0x2c) & ~(0x1f << (index & 0xff));\n    }\n    index = *values;\n    if (index < 10) {\n      *(uint *)(*data + 0x10) =\n           values[2] << (index * 3 & 0xff) |\n           *(uint *)(*data + 0x10) & ~(7 << (index * 3 & 0xff));\n    }\n    else {\n      index = index * 3 - 0x1e;\n      *(uint *)(*data + 0xc) =\n           values[2] << (index & 0xff) | *(uint *)(*data + 0xc) & ~(7 << (index & 0xff));\n    }\n    if (*values - 0x10 < 2) {\n      if (*data == 0x40012400) {\n        if ((uRam40012408 & 0x800000) == 0) {\n          uRam40012408 = uRam40012408 | 0x800000;\n          if (*values == 0x10) {\n            for (count = (DAT_20000018 / 1000000) * 10; count != 0; count = count + -1) {\n            }\n            result = 0;\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        data[10] = data[10] | 0x20;\n        result = 1;\n      }\n    }\n    else {\n      result = 0;\n    }\n    *(undefined *)(data + 9) = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080038e4": "reverse_and_modify_080038e4",
                "param_1": "data",
                "param_2": "values",
                "uVar1": "result",
                "uVar2": "index",
                "local_c": "count"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a1c": {
            "entrypoint": "0x08003a1c",
            "current_name": "get_value_from_offset_08003a1c",
            "code": "\nundefined4 get_value_from_offset_08003a1c(int offset)\n\n{\n  return *(undefined4 *)(offset + 0x28);\n}\n\n",
            "renaming": {
                "FUN_08003a1c": "get_value_from_offset_08003a1c",
                "param_1": "offset"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a20": {
            "entrypoint": "0x08003a20",
            "current_name": "lock_and_check_if_finished_08003a20",
            "code": "\nundefined4 lockAndCheckIfFinished_08003a20(int *ptrToValue,undefined4 newValue)\n\n{\n  int returnValue;\n  undefined4 result;\n  int ptrToVariable;\n  uint loopCounter;\n  \n  ptrToVariable = *ptrToValue;\n  if ((*(uint *)(ptrToVariable + 8) & 1) == 0) {\n    *(uint *)(ptrToVariable + 8) = *(uint *)(ptrToVariable + 8) | 1;\n    for (loopCounter = DAT_20000018 / 1000000; loopCounter != 0; loopCounter = loopCounter - 1) {\n    }\n    ptrToVariable = FUN_08003760(ptrToValue,newValue,DAT_20000018 * 0x431bde83);\n    do {\n      if ((*(uint *)(*ptrToValue + 8) & 1) != 0) {\n        return 0;\n      }\n      returnValue = FUN_08003760();\n    } while ((uint)(returnValue - ptrToVariable) < 3);\n    ptrToValue[10] = ptrToValue[10] | 0x10;\n    ptrToValue[0xb] = ptrToValue[0xb] | 1;\n    *(undefined *)(ptrToValue + 9) = 0;\n    result = 1;\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08003a20": "lock_and_check_if_finished_08003a20",
                "param_1": "ptrToValue",
                "param_2": "newValue",
                "iVar1": "returnValue",
                "iVar3": "ptrToVariable",
                "uVar2": "result",
                "local_14": "loopCounter"
            },
            "calling": [
                "FUN_08003e20",
                "FUN_08003aa0"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003aa0": {
            "entrypoint": "0x08003aa0",
            "current_name": "initialize_flags_08003aa0",
            "code": "\n\n\nint initializeFlags_08003aa0(int *parameters)\n\n{\n  int result;\n  undefined4 *ptrVar;\n  int tempVar;\n  \n  if (*(char *)(parameters + 9) != '\\x01') {\n    *(undefined *)(parameters + 9) = 1;\n    result = FUN_08003a20();\n    if (result == 0) {\n      parameters[10] = parameters[10] & 0xfffffcfeU | 0x100;\n      ptrVar = (undefined4 *)*parameters;\n      if ((ptrVar == (undefined4 *)0x40012800) && ((_DAT_40012404 & 0xf0000) != 0)) {\n        parameters[10] = parameters[10] | 0x100000;\n        if ((_DAT_40012404 & 0x400) != 0) {\n          parameters[10] = parameters[10] & 0xffffcfffU | 0x1000;\n        }\n      }\n      else {\n        parameters[10] = parameters[10] & 0xffefffff;\n        if ((ptrVar[1] & 0x400) != 0) {\n          parameters[10] = parameters[10] & 0xffffcfffU | 0x1000;\n        }\n      }\n      if ((parameters[10] & 0x1000U) == 0) {\n        parameters[0xb] = 0;\n      }\n      else {\n        parameters[0xb] = parameters[0xb] & 0xfffffff9;\n      }\n      *(undefined *)(parameters + 9) = 0;\n      *ptrVar = 0xfffffffd;\n      tempVar = *parameters;\n      if (((*(uint *)(tempVar + 8) & 0xe0000) == 0xe0000) &&\n         ((tempVar != 0x40012800 || ((_DAT_40012404 & 0xf0000) == 0)))) {\n        *(uint *)(tempVar + 8) = *(uint *)(tempVar + 8) | 0x500000;\n      }\n      else {\n        *(uint *)(tempVar + 8) = *(uint *)(tempVar + 8) | 0x100000;\n      }\n    }\n    else {\n      *(undefined *)(parameters + 9) = 0;\n    }\n    return result;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08003aa0": "initialize_flags_08003aa0",
                "param_1": "parameters",
                "iVar1": "result",
                "puVar2": "ptrVar",
                "iVar3": "tempVar"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08003a20"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003b8c": {
            "entrypoint": "0x08003b8c",
            "current_name": "check_and_update_data_08003b8c",
            "code": "\nundefined4 checkAndUpdateData_08003b8c(int *dataPtr)\n\n{\n  int tempVar1;\n  int tempVar2;\n  \n  tempVar2 = *dataPtr;\n  if ((*(uint *)(tempVar2 + 8) & 1) == 0) {\n    return 0;\n  }\n  *(uint *)(tempVar2 + 8) = *(uint *)(tempVar2 + 8) & 0xfffffffe;\n  tempVar2 = FUN_08003760();\n  do {\n    if ((*(uint *)(*dataPtr + 8) & 1) == 0) {\n      return 0;\n    }\n    tempVar1 = FUN_08003760();\n  } while ((uint)(tempVar1 - tempVar2) < 3);\n  dataPtr[10] = dataPtr[10] | 0x10;\n  dataPtr[0xb] = dataPtr[0xb] | 1;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08003b8c": "check_and_update_data_08003b8c",
                "param_1": "dataPtr",
                "iVar1": "tempVar1",
                "iVar2": "tempVar2"
            },
            "calling": [
                "FUN_08003bd8",
                "FUN_08003ce8",
                "FUN_08003e20",
                "FUN_08003de4"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003bd8": {
            "entrypoint": "0x08003bd8",
            "current_name": "validate_data_08003bd8",
            "code": "\nundefined4 validateData_08003bd8(int *_data)\n\n{\n  int _result;\n  uint _flag1;\n  uint _flag2;\n  \n  if (_data == (int *)0x0) {\n    return 1;\n  }\n  if (_data[10] == 0) {\n    _data[0xb] = 0;\n    *(undefined *)(_data + 9) = 0;\n    FUN_08006ca8();\n  }\n  _result = FUN_08003b8c(_data);\n  if (((_data[10] & 0x10U) == 0) && (_result == 0)) {\n    _data[10] = _data[10] & 0xffffeefdU | 2;\n    _flag1 = _data[1] | _data[7] | _data[3] << 1;\n    if (_data[2] == 0x100) {\n      _flag2 = 0x100;\n    }\n    else {\n      _flag2 = 0;\n      if (_data[2] == 1) {\n        _flag2 = 0x100;\n      }\n    }\n    if (_data[5] == 1) {\n      if (_data[3] == 0) {\n        _flag2 = _flag2 | (_data[6] + -1) * 0x2000 | 0x800;\n      }\n      else {\n        _data[10] = _data[10] | 0x20;\n        _data[0xb] = _data[0xb] | 1;\n      }\n    }\n    *(uint *)(*_data + 4) = _flag2 | *(uint *)(*_data + 4) & 0xffff16ff;\n    *(uint *)(*_data + 8) = *(uint *)(*_data + 8) & 0xffe1f7fd | _flag1;\n    if ((_data[2] == 0x100) || (_data[2] == 1)) {\n      _flag2 = (_data[4] + -1) * 0x100000;\n    }\n    else {\n      _flag2 = 0;\n    }\n    *(uint *)(*_data + 0x2c) = _flag2 | *(uint *)(*_data + 0x2c) & 0xff0fffff;\n    if (_flag1 != (*(uint *)(*_data + 8) & 0xff1f0efe)) {\n      _data[10] = _data[10] & 0xffffffedU | 0x10;\n      _data[0xb] = _data[0xb] | 1;\n      return 1;\n    }\n    _data[0xb] = 0;\n    _data[10] = _data[10] & 0xfffffffcU | 1;\n    return 0;\n  }\n  _data[10] = _data[10] | 0x10;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08003bd8": "validate_data_08003bd8",
                "param_1": "_data",
                "iVar1": "_result",
                "uVar2": "_flag1",
                "uVar3": "_flag2"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08006ca8",
                "FUN_08003b8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ce8": {
            "entrypoint": "0x08003ce8",
            "current_name": "sanitize_data_08003ce8",
            "code": "\nint sanitizeData_08003ce8(int *data)\n\n{\n  int result;\n  \n  if (data == (int *)0x0) {\n    result = 1;\n  }\n  else {\n    data[10] = data[10] | 2;\n    result = FUN_08003b8c();\n    if (result == 0) {\n      *(undefined4 *)*data = 0xffffffe0;\n      *(uint *)(*data + 4) = *(uint *)(*data + 4) & 0xff3f0000;\n      *(uint *)(*data + 8) = *(uint *)(*data + 8) & 0xff0106f0;\n      *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xff000000;\n      *(uint *)(*data + 0x10) = *(uint *)(*data + 0x10) & 0xc0000000;\n      *(uint *)(*data + 0x14) = *(uint *)(*data + 0x14) & 0xfffff000;\n      *(uint *)(*data + 0x18) = *(uint *)(*data + 0x18) & 0xfffff000;\n      *(uint *)(*data + 0x1c) = *(uint *)(*data + 0x1c) & 0xfffff000;\n      *(uint *)(*data + 0x20) = *(uint *)(*data + 0x20) & 0xfffff000;\n      *(uint *)(*data + 0x24) = *(uint *)(*data + 0x24) & 0xfffff000;\n      *(uint *)(*data + 0x28) = *(uint *)(*data + 0x28) & 0xfffff000;\n      *(uint *)(*data + 0x2c) = *(uint *)(*data + 0x2c) & 0xff000000;\n      *(uint *)(*data + 0x2c) = *(uint *)(*data + 0x2c) & 0xff000000;\n      *(uint *)(*data + 0x30) = *(uint *)(*data + 0x30) & 0xc0000000;\n      *(uint *)(*data + 0x34) = *(uint *)(*data + 0x34) & 0xc0000000;\n      *(uint *)(*data + 0x38) = *(uint *)(*data + 0x38) & 0xffc00000;\n      *(uint *)(*data + 0x38) = *(uint *)(*data + 0x38) & 0xffc00000;\n      FUN_08006d24(data);\n      data[0xb] = 0;\n      data[10] = 0;\n    }\n    *(undefined *)(data + 9) = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08003ce8": "sanitize_data_08003ce8",
                "param_1": "data",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08006d24",
                "FUN_08003b8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003de4": {
            "entrypoint": "0x08003de4",
            "current_name": "check_and_modify_status_08003de4",
            "code": "\nint check_and_modify_status_08003de4(int status_ptr)\n\n{\n  int result;\n  \n  if (*(char *)(status_ptr + 0x24) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(status_ptr + 0x24) = 1;\n  result = FUN_08003b8c();\n  if (result == 0) {\n    *(uint *)(status_ptr + 0x28) = *(uint *)(status_ptr + 0x28) & 0xffffeefe | 1;\n  }\n  *(undefined *)(status_ptr + 0x24) = 0;\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08003de4": "check_and_modify_status_08003de4",
                "param_1": "status_ptr",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08003b8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003e20": {
            "entrypoint": "0x08003e20",
            "current_name": "execute_function_08003e20",
            "code": "\nint execute_function_08003e20(int *input_params)\n\n{\n  uint constant1;\n  int result;\n  uint constant2;\n  int loop_var1;\n  int loop_var2;\n  int loop_counter;\n  \n  if (*(char *)(input_params + 9) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(input_params + 9) = 1;\n  result = FUN_08003b8c();\n  if (result == 0) {\n    status = status & 0xffffeefdU | 2;\n    constant1 = DAT_20000018;\n    constant2 = FUN_08005bb8(2);\n    for (loop_counter = constant1 / constant2 << 1; loop_counter != 0; loop_counter = loop_counter + -1) {\n    }\n    FUN_08003a20(input_params);\n    *(uint *)(*input_params + 8) = *(uint *)(*input_params + 8) | 8;\n    loop_var1 = FUN_08003760();\n    while (loop_var2 = *input_params, (*(uint *)(loop_var2 + 8) & 8) != 0) {\n      loop_var2 = FUN_08003760();\n      if (10 < (uint)(loop_var2 - loop_var1)) {\n        status = status & 0xffffffedU | 0x10;\n        *(undefined *)(input_params + 9) = 0;\n        return 1;\n      }\n    }\n    *(uint *)(loop_var2 + 8) = *(uint *)(loop_var2 + 8) | 4;\n    loop_var1 = FUN_08003760();\n    while ((*(uint *)(*input_params + 8) & 4) != 0) {\n      loop_var2 = FUN_08003760();\n      if (10 < (uint)(loop_var2 - loop_var1)) {\n        status = status & 0xffffffedU | 0x10;\n        *(undefined *)(input_params + 9) = 0;\n        return 1;\n      }\n    }\n    status = status & 0xfffffffcU | 1;\n  }\n  *(undefined *)(input_params + 9) = 0;\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08003e20": "execute_function_08003e20",
                "param_1": "input_params",
                "uVar1": "constant1",
                "iVar2": "result",
                "uVar3": "constant2",
                "iVar4": "loop_var1",
                "iVar5": "loop_var2",
                "local_14": "loop_counter",
                "param_1[10]": "status"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08003a20",
                "FUN_08003b8c",
                "FUN_08005bb8",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f0c": {
            "entrypoint": "0x08003f0c",
            "current_name": "update_config_08003f0c",
            "code": "\n\n\nvoid updateConfig_08003f0c(uint configValue)\n\n{\n  _DAT_e000ed0c = (configValue & 7) << 8 | _DAT_e000ed0c & 0xf8ff | 0x5fa0000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f0c": "update_config_08003f0c",
                "param_1": "configValue"
            },
            "calling": [
                "FUN_08008f0e",
                "FUN_08003724"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f30": {
            "entrypoint": "0x08003f30",
            "current_name": "encode_char_08003f30",
            "code": "\n\n\nvoid encode_char_08003f30(uint address,uint bitmask_1,uint bitmask_2)\n\n{\n  uint shift_amount;\n  uint shifted_value;\n  \n  shift_amount = (uint)(_DAT_e000ed0c << 0x15) >> 0x1d;\n  shifted_value = 7 - shift_amount;\n  if (3 < shifted_value) {\n    shifted_value = 4;\n  }\n  if (shift_amount + 4 < 7) {\n    shift_amount = 0;\n  }\n  else {\n    shift_amount = shift_amount - 3;\n  }\n  shift_amount = (bitmask_1 & (1 << (shifted_value & 0xff)) - 1U) << (shift_amount & 0xff) |\n          (1 << (shift_amount & 0xff)) - 1U & bitmask_2;\n  if ((int)address < 0) {\n    *(char *)((address & 0xf) + 0xe000ed14) = (char)(shift_amount << 4);\n  }\n  else {\n    *(char *)(address + 0xe000e400) = (char)(shift_amount << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f30": "encode_char_08003f30",
                "param_1": "address",
                "param_2": "bitmask_1",
                "param_3": "bitmask_2",
                "uVar1": "shift_amount",
                "uVar2": "shifted_value"
            },
            "calling": [
                "FUN_08007648",
                "FUN_080077b0",
                "FUN_08008694",
                "FUN_080036d8",
                "FUN_080035b8",
                "FUN_0800863c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f94": {
            "entrypoint": "0x08003f94",
            "current_name": "set_bit_in_array_08003f94",
            "code": "\nvoid setBitInArray_08003f94(uint bitPosition)\n\n{\n  if (-1 < (int)bitPosition) {\n    *(int *)((bitPosition >> 5) * 4 + -0x1fff1f00) = 1 << (bitPosition & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f94": "set_bit_in_array_08003f94",
                "param_1": "bitPosition"
            },
            "calling": [
                "FUN_08007648",
                "FUN_080077b0",
                "FUN_08008694",
                "FUN_0800863c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003fb0": {
            "entrypoint": "0x08003fb0",
            "current_name": "set_bit_value_08003fb0",
            "code": "\nvoid setBitValue_08003fb0(uint bitPosition)\n\n{\n  if (-1 < (int)bitPosition) {\n    *(int *)(((bitPosition >> 5) + 0x20) * 4 + -0x1fff1f00) = 1 << (bitPosition & 0x1f);\n    performDataSyncBarrier(0xf);\n    performInstrSyncBarrier(0xf);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003fb0": "set_bit_value_08003fb0",
                "param_1": "bitPosition",
                "DataSynchronizationBarrier": "performDataSyncBarrier",
                "InstructionSynchronizationBarrier": "performInstrSyncBarrier"
            },
            "calling": [
                "FUN_080076e0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003fd8": {
            "entrypoint": "0x08003fd8",
            "current_name": "check_valid_parameter_08003fd8",
            "code": "\n\n\nundefined4 check_valid_parameter_08003fd8(int input_value)\n\n{\n  if (input_value - 1U < 0x1000000) {\n    _DAT_e000e014 = input_value - 1U;\n    DAT_e000ed23 = 0xf0;\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n    result 0;\n  }\n  result 1;\n}\n\n",
            "renaming": {
                "FUN_08003fd8": "check_valid_parameter_08003fd8",
                "param_1": "input_value",
                "return": "result"
            },
            "calling": [
                "FUN_080036d8",
                "FUN_080035b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004004": {
            "entrypoint": "0x08004004",
            "current_name": "set_bit_08004004",
            "code": "\nvoid setBit_08004004(uint index)\n\n{\n  if (-1 < (int)index) {\n    *(int *)(((index >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (index & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004004": "set_bit_08004004",
                "param_1": "index"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004024": {
            "entrypoint": "0x08004024",
            "current_name": "set_dat_e000e010_bit_08004024",
            "code": "\n\n\nvoid set_dat_e000e010_bit_08004024(int value)\n\n{\n  if (value != 4) {\n    _DAT_e000e010 = _DAT_e000e010 & 0xfffffffb;\n    return;\n  }\n  _DAT_e000e010 = _DAT_e000e010 | 4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004024": "set_dat_e000e010_bit_08004024",
                "param_1": "value"
            },
            "calling": [
                "FUN_080035b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004044": {
            "entrypoint": "0x08004044",
            "current_name": "FUNC_08004044",
            "code": "\nvoid FUNC_08004044(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004044": "FUNC_08004044"
            },
            "calling": [
                "FUN_08004046"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004046": {
            "entrypoint": "0x08004046",
            "current_name": "initialize_program_08004046",
            "code": "\nvoid initializeProgram_08004046(void)\n\n{\n  FUNC_08004044();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004046": "initialize_program_08004046"
            },
            "calling": [
                "FUN_08007246"
            ],
            "called": [
                "FUN_08004044"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004050": {
            "entrypoint": "0x08004050",
            "current_name": "process_data_08004050",
            "code": "\n\n\nundefined4 processData_08004050(uint **input)\n\n{\n  uint *currentValue;\n  \n  if (*(char *)((int)input + 0x21) != '\\x02') {\n    input[0xe] = (uint *)0x4;\n    return 1;\n  }\n  **input = **input & 0xfffffff1;\n  **input = **input & 0xfffffffe;\n  currentValue = *input;\n  if (currentValue == (uint *)0x40020008) {\n    _DAT_40020004 = 1;\n  }\n  else if (currentValue == (uint *)0x4002001c) {\n    _DAT_40020004 = 0x10;\n  }\n  else if (currentValue == (uint *)0x40020030) {\n    _DAT_40020004 = 0x100;\n  }\n  else if (currentValue == (uint *)0x40020044) {\n    _DAT_40020004 = 0x1000;\n  }\n  else if (currentValue == (uint *)0x40020058) {\n    _DAT_40020004 = 0x10000;\n  }\n  else if (currentValue == (uint *)0x4002006c) {\n    _DAT_40020004 = 0x100000;\n  }\n  else {\n    _DAT_40020004 = 0x1000000;\n  }\n  *(undefined *)((int)input + 0x21) = 1;\n  *(undefined *)(input + 8) = 0;\n  if (input[0xd] != (uint *)0x0) {\n    (*(code *)input[0xd])();\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004050": "process_data_08004050",
                "param_1": "input",
                "puVar1": "currentValue"
            },
            "calling": [
                "FUN_080069ec",
                "FUN_08004f3c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040e8": {
            "entrypoint": "0x080040e8",
            "current_name": "update_flags_and_registers_080040e8",
            "code": "\n\n\nvoid updateFlagsAndRegisters_080040e8(uint *flagsArray,uint *inputArray)\n\n{\n  uint *pointerVar1;\n  uint bitMask;\n  uint inputArrayBit;\n  uint loopCounter;\n  uint secondValue;\n  uint newValue;\n  int tempVar1;\n  int tempVar2;\n  \n  newValue = 0;\n  loopCounter = 0;\n  do {\n    if (0xf < loopCounter) {\n      return;\n    }\n    bitMask = 1 << (loopCounter & 0xff);\n    inputArrayBit = *inputArray & bitMask;\n    if (bitMask == inputArrayBit) {\n      secondValue = inputArray[1];\n      if (secondValue == 0x12) {\n        newValue = inputArray[3] + 0xc;\n      }\n      else if (secondValue < 0x13) {\n        if (secondValue == 2) {\n          newValue = inputArray[3] + 8;\n        }\n        else if (secondValue < 3) {\n          if (secondValue == 0) goto LAB_0800423a;\n          if (secondValue == 1) {\n            newValue = inputArray[3];\n          }\n        }\n        else if (secondValue == 3) {\n          newValue = 0;\n        }\n        else if (secondValue == 0x11) {\n          newValue = inputArray[3] + 4;\n        }\n      }\n      else if (secondValue == 0x10210000) {\nLAB_0800423a:\n        if (inputArray[2] == 0) {\n          newValue = 4;\n        }\n        else if (inputArray[2] == 1) {\n          flagsArray[4] = bitMask;\n          newValue = 8;\n        }\n        else {\n          flagsArray[5] = bitMask;\n          newValue = 8;\n        }\n      }\n      else if (secondValue < 0x10210001) {\n        if ((secondValue == 0x10110000) || (secondValue == 0x10120000)) goto LAB_0800423a;\n      }\n      else if ((secondValue == 0x10310000) || ((secondValue == 0x10320000 || (secondValue == 0x10220000))))\n      goto LAB_0800423a;\n      bitMask = loopCounter;\n      pointerVar1 = flagsArray;\n      if (0xff < inputArrayBit) {\n        bitMask = loopCounter - 8;\n        pointerVar1 = flagsArray + 1;\n      }\n      *pointerVar1 = *pointerVar1 & ~(0xf << (bitMask << 2 & 0xff)) | newValue << (bitMask << 2 & 0xff);\n      if ((inputArray[1] & 0x10000000) != 0) {\n        _DAT_40021018 = _DAT_40021018 | 1;\n        tempVar1 = (loopCounter & 3) << 2;\n        if (flagsArray == (uint *)0x40010800) {\n          tempVar2 = 0;\n        }\n        else if (flagsArray == (uint *)0x40010c00) {\n          tempVar2 = 1;\n        }\n        else if (flagsArray == (uint *)0x40011000) {\n          tempVar2 = 2;\n        }\n        else if (flagsArray == (uint *)0x40011400) {\n          tempVar2 = 3;\n        }\n        else {\n          tempVar2 = 4;\n        }\n        *(uint *)(((loopCounter >> 2) + 2) * 4 + 0x40010000) =\n             *(uint *)(((loopCounter >> 2) + 2) * 4 + 0x40010000) & ~(0xf << tempVar1) | tempVar2 << tempVar1;\n        if ((inputArray[1] & 0x10000) == 0) {\n          _DAT_40010400 = _DAT_40010400 & ~inputArrayBit;\n        }\n        else {\n          _DAT_40010400 = _DAT_40010400 | inputArrayBit;\n        }\n        if ((inputArray[1] & 0x20000) == 0) {\n          _DAT_40010404 = _DAT_40010404 & ~inputArrayBit;\n        }\n        else {\n          _DAT_40010404 = _DAT_40010404 | inputArrayBit;\n        }\n        if ((inputArray[1] & 0x100000) == 0) {\n          _DAT_40010408 = _DAT_40010408 & ~inputArrayBit;\n        }\n        else {\n          _DAT_40010408 = _DAT_40010408 | inputArrayBit;\n        }\n        if ((inputArray[1] & 0x200000) == 0) {\n          _DAT_4001040c = _DAT_4001040c & ~inputArrayBit;\n        }\n        else {\n          _DAT_4001040c = inputArrayBit | _DAT_4001040c;\n        }\n      }\n    }\n    loopCounter = loopCounter + 1;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080040e8": "update_flags_and_registers_080040e8",
                "param_1": "flagsArray",
                "param_2": "inputArray",
                "puVar1": "pointerVar1",
                "uVar2": "bitMask",
                "uVar3": "inputArrayBit",
                "uVar4": "loopCounter",
                "uVar5": "secondValue",
                "uVar6": "newValue",
                "iVar7": "tempVar1",
                "iVar8": "tempVar2"
            },
            "calling": [
                "FUN_08006ca8",
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08006e68",
                "FUN_08007258"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080042d4": {
            "entrypoint": "0x080042d4",
            "current_name": "check_bit_080042d4",
            "code": "\nundefined4 check_bit_080042d4(int data_start,uint bit_mask)\n\n{\n  if ((bit_mask & *(uint *)(data_start + 8)) == 0) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080042d4": "check_bit_080042d4",
                "param_1": "data_start",
                "param_2": "bit_mask"
            },
            "calling": [
                "FUN_080072f0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080042e2": {
            "entrypoint": "0x080042e2",
            "current_name": "update_parameter_value_080042e2",
            "code": "\nvoid updateParameterValue_080042e2(int dataAddress,int newValue,int flag)\n\n{\n  if (flag == 0) {\n    *(int *)(dataAddress + 0x10) = newValue << 0x10;\n    return;\n  }\n  *(int *)(dataAddress + 0x10) = newValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080042e2": "update_parameter_value_080042e2",
                "param_1": "dataAddress",
                "param_2": "newValue",
                "param_3": "flag"
            },
            "calling": [
                "FUN_080072d8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080042f0": {
            "entrypoint": "0x080042f0",
            "current_name": "update_and_execute_080042f0",
            "code": "\n\n\nvoid update_and_execute_080042f0(uint input_value)\n\n{\n  if ((_DAT_40010414 & input_value) != 0) {\n    _DAT_40010414 = input_value;\n    FUN_08009094();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080042f0": "update_and_execute_080042f0",
                "param_1": "input_value"
            },
            "calling": [],
            "called": [
                "FUN_08009094"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800430c": {
            "entrypoint": "0x0800430c",
            "current_name": "update_status_0800430c",
            "code": "\nundefined4 updateStatus_0800430c(int *status)\n\n{\n  if (*(char *)((int)status + 0x3e) == '@') {\n    if (value == 0) {\n      *(uint *)(*status + 0x10) = data & 0xfe;\n    }\n    else {\n      *(uint *)(*status + 0x10) = data & 0xffU | 1;\n    }\n  }\n  else if (status[4] == 0x4000) {\n    if (*(char *)((int)status + 0x3d) == '!') {\n      *(uint *)(*status + 0x10) = data & 0xfe;\n    }\n    else {\n      *(uint *)(*status + 0x10) = data & 0xffU | 1;\n    }\n  }\n  else if (value == 0) {\n    *(uint *)(*status + 0x10) = (uint)(data << 0x10) >> 0x17 & 6 | 0xf0;\n  }\n  else if (value == 1) {\n    *(uint *)(*status + 0x10) = (uint)(data << 0x10) >> 0x17 & 6 | 0xf1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800430c": "update_status_0800430c",
                "param_1": "status",
                "param_1[0x14]": "value",
                "param_1[0x11]": "data"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004396": {
            "entrypoint": "0x08004396",
            "current_name": "copy_byte_to_pointer_08004396",
            "code": "\nundefined4 copyByteToPointer_08004396(int *sourceArray)\n\n{\n  *(uint *)(*sourceArray + 0x10) = sourceArray[0x11] & 0xff;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004396": "copy_byte_to_pointer_08004396",
                "param_1": "sourceArray"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080043a2": {
            "entrypoint": "0x080043a2",
            "current_name": "update_flags_080043a2",
            "code": "\nundefined4 updateFlags_080043a2(uint **params)\n\n{\n  uint *flagPtr;\n  \n  flagPtr = params[0xb];\n  if ((*(char *)(paramAddr + 0x3d) == '\\\"') &&\n     ((ptr != (uint *)0x0 || (*(char *)(paramAddr + 0x3e) != '@')))) {\n    if ((ptr == (uint *)0x0) && (ptr2 == (uint *)0xc000)) {\n      **params = **params | 0x100;\n      ptr = (uint *)((int)ptr + 1);\n    }\n    else {\n      if (*(short *)(paramAddr + 0x2a) == 0) {\n        **params = **params | 0x200;\n      }\n      else if (*(short *)(paramAddr + 0x2a) == 1) {\n        if (flagPtr == (uint *)0xffff0000) {\n          **params = **params & 0xfffffbff;\n          flagPtr = *params;\n          if ((flagPtr[1] & 0x800) == 0) {\n            *flagPtr = *flagPtr | 0x200;\n          }\n          else {\n            *flagPtr = *flagPtr & 0xfffffbff;\n          }\n        }\n        else if (((flagPtr == (uint *)0x4) || (flagPtr == (uint *)0x8)) ||\n                (ptr3 == (uint *)0x12)) {\n          **params = **params & 0xfffffbff;\n          **params = **params | 0x200;\n        }\n        else if (params[0xb] == (uint *)0x2) {\n          **params = **params | 0x400;\n        }\n        else {\n          **params = **params & 0xfffffbff;\n        }\n      }\n      else if (*(short *)(paramAddr + 0x2a) == 2) {\n        if (params[0xb] == (uint *)0x2) {\n          **params = **params | 0x400;\n        }\n        else {\n          **params = **params | 0x800;\n          **params = **params & 0xfffffbff;\n        }\n        flagPtr = *params;\n        if ((flagPtr[1] & 0x800) != 0) {\n          flagPtr[1] = flagPtr[1] | 0x1000;\n        }\n      }\n      else {\n        **params = **params | 0x400;\n        flagPtr = *params;\n        if ((flagPtr[1] & 0x800) != 0) {\n          flagPtr[1] = flagPtr[1] | 0x1000;\n        }\n      }\n      ptr = (uint *)0x0;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080043a2": "update_flags_080043a2",
                "param_1": "params",
                "puVar1": "flagPtr",
                "param_1[0x14]": "ptr",
                "param_1[4]": "ptr2",
                "(int)param_1": "paramAddr",
                "param_1[0xc]": "ptr3"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800457c": {
            "entrypoint": "0x0800457c",
            "current_name": "update_pointer_value_0800457c",
            "code": "\nundefined4 updatePointerValue_0800457c(int *ptrArray)\n\n{\n  byte *bytePointer;\n  \n  if (*(short *)((int)ptrArray + 0x2a) != 0) {\n    bytePointer = (byte *)arrayValue;\n    arrayValue = (int)(bytePointer + 1);\n    *(uint *)(*ptrArray + 0x10) = (uint)*bytePointer;\n    *(short *)((int)ptrArray + 0x2a) = *(short *)((int)ptrArray + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800457c": "update_pointer_value_0800457c",
                "param_1": "ptrArray",
                "pbVar1": "bytePointer",
                "param_1[9]": "arrayValue"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800459c": {
            "entrypoint": "0x0800459c",
            "current_name": "update_short_in_param_array_0800459c",
            "code": "\nundefined4 updateShortInParamArray_0800459c(int *paramArray)\n\n{\n  undefined *ptrToData;\n  \n  if (*(short *)((int)paramArray + 0x2a) != 0) {\n    ptrToData = (undefined *)dataPtrInArray;\n    dataPtrInArray = (int)(ptrToData + 1);\n    *ptrToData = (char)*(undefined4 *)(*paramArray + 0x10);\n    *(short *)((int)paramArray + 0x2a) = *(short *)((int)paramArray + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800459c": "update_short_in_param_array_0800459c",
                "param_1": "paramArray",
                "puVar1": "ptrToData",
                "param_1[9]": "dataPtrInArray"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080045bc": {
            "entrypoint": "0x080045bc",
            "current_name": "FUNC_080045bc",
            "code": "\nvoid FUNC_080045bc(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080045bc": "FUNC_080045bc"
            },
            "calling": [
                "FUN_080045c0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080045c0": {
            "entrypoint": "0x080045c0",
            "current_name": "calculate_parameters_080045c0",
            "code": "\nundefined4 calculateParameters_080045c0(uint **parameters)\n\n{\n  bool isSmallValue;\n  uint value;\n  uint *divisor;\n  uint result;\n  \n  if (parameters == (uint **)0x0) {\n    return 1;\n  }\n  if (*(char *)((int)parameters + 0x3d) == '\\0') {\n    *(undefined *)(parameters + 0xf) = 0;\n    FUNC_080045bc();\n  }\n  *(undefined *)((int)parameters + 0x3d) = 0x24;\n  **parameters = **parameters & 0xfffffffe;\n  value = FUN_08005a28();\n  if (parameters[1] < (uint *)0x186a1) {\n    if (value < 2000000) {\n      isSmallValue = true;\n    }\n    else {\n      isSmallValue = false;\n    }\n  }\n  else {\n    isSmallValue = value < 4000000;\n  }\n  if (isSmallValue) {\n    return 1;\n  }\n  result = value / 1000000;\n  (*parameters)[1] = result;\n  if ((uint *)0x186a0 < parameters[1]) {\n    result = (result * 300) / 1000;\n  }\n  (*parameters)[8] = result + 1;\n  divisor = parameters[1];\n  if (divisor < (uint *)0x186a1) {\n    value = (value - 1) / (uint)((int)divisor << 1) + 1 & 0xfff;\n    if (value < 4) {\n      value = 4;\n    }\n  }\n  else {\n    if (parameters[2] == (uint *)0x0) {\n      result = (value - 1) / (uint)((int)divisor * 3);\n    }\n    else {\n      result = (value - 1) / (uint)((int)divisor * 0x19);\n    }\n    if ((result + 1 & 0xfff) == 0) {\n      value = 1;\n    }\n    else if (parameters[2] == (uint *)0x0) {\n      value = (value - 1) / (uint)((int)divisor * 3) + 1 & 0xfff | 0x8000;\n    }\n    else {\n      value = (value - 1) / (uint)((int)divisor * 0x19) + 1 & 0xfff | 0xc000;\n    }\n  }\n  (*parameters)[7] = value;\n  **parameters = (uint)parameters[7] | (uint)parameters[8];\n  (*parameters)[2] = (uint)parameters[4] | (uint)parameters[3];\n  (*parameters)[3] = (uint)parameters[5] | (uint)parameters[6];\n  **parameters = **parameters | 1;\n  parameters[0x10] = (uint *)0x0;\n  *(undefined *)((int)parameters + 0x3d) = 0x20;\n  parameters[0xc] = (uint *)0x0;\n  *(undefined *)((int)parameters + 0x3e) = 0;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080045c0": "calculate_parameters_080045c0",
                "param_1": "parameters",
                "bVar1": "isSmallValue",
                "uVar2": "value",
                "puVar3": "divisor",
                "uVar4": "result"
            },
            "calling": [
                "FUN_080077b0"
            ],
            "called": [
                "FUN_080045bc",
                "FUN_08005a28"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004728": {
            "entrypoint": "0x08004728",
            "current_name": "check_and_update_status_08004728",
            "code": "\nresult checkAndUpdateStatus_08004728(uint **ptr_list,uint *param_2,uint *param_3,undefined2 param_4)\n\n{\n  result uVar1;\n  uint *ptr;\n  int counter;\n  \n  if (*(char *)((int)ptr_list + 0x3d) == ' ') {\n    counter = (DAT_20000018 / 25000) * 0x19;\n    do {\n      if (counter == 0) {\n        ptr_list[0xc] = (uint *)0x0;\n        *(undefined *)((int)ptr_list + 0x3d) = 0x20;\n        *(undefined *)(ptr_list + 0xf) = 0;\n        return 3;\n      }\n      ptr = *ptr_list;\n      counter = counter + -1;\n    } while ((ptr[6] & 2) != 0);\n    if (*(char *)(ptr_list + 0xf) == '\\x01') {\n      uVar1 = 2;\n    }\n    else {\n      *(undefined *)(ptr_list + 0xf) = 1;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **ptr_list = **ptr_list & 0xfffff7ff;\n      *(undefined *)((int)ptr_list + 0x3d) = 0x21;\n      *(undefined *)((int)ptr_list + 0x3e) = 0x10;\n      uVar1 = 0;\n      ptr_list[0x10] = (uint *)0x0;\n      ptr_list[9] = param_3;\n      *(undefined2 *)((int)ptr_list + 0x2a) = param_4;\n      ptr_list[0xb] = (uint *)0xffff0000;\n      *(undefined2 *)(ptr_list + 10) = *(undefined2 *)((int)ptr_list + 0x2a);\n      ptr_list[0x11] = param_2;\n      **ptr_list = **ptr_list | 0x100;\n      *(undefined *)(ptr_list + 0xf) = 0;\n      (*ptr_list)[1] = (*ptr_list)[1] | 0x700;\n    }\n  }\n  else {\n    uVar1 = 2;\n  }\n  return uVar1;\n}\n\n",
            "renaming": {
                "FUN_08004728": "check_and_update_status_08004728",
                "param_1": "ptr_list",
                "undefined4": "result",
                "puVar2": "ptr",
                "local_c": "counter"
            },
            "calling": [
                "FUN_08007e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047f4": {
            "entrypoint": "0x080047f4",
            "current_name": "process_input_080047f4",
            "code": "\nundefined4 process_input_080047f4(uint **input_data,uint *param2,uint *param3,undefined2 param4)\n\n{\n  undefined4 result;\n  uint *data_ptr;\n  int count;\n  \n  if (*(char *)((int)input_data + 0x3d) == ' ') {\n    count = (DAT_20000018 / 25000) * 0x19;\n    do {\n      if (count == 0) {\n        input_data[0xc] = (uint *)0x0;\n        *(undefined *)((int)input_data + 0x3d) = 0x20;\n        *(undefined *)(input_data + 0xf) = 0;\n        return 3;\n      }\n      data_ptr = *input_data;\n      count = count + -1;\n    } while ((data_ptr[6] & 2) != 0);\n    if (*(char *)(input_data + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(input_data + 0xf) = 1;\n      if ((*data_ptr & 1) == 0) {\n        *data_ptr = *data_ptr | 1;\n      }\n      **input_data = **input_data & 0xfffff7ff;\n      *(undefined *)((int)input_data + 0x3d) = 0x22;\n      *(undefined *)((int)input_data + 0x3e) = 0x10;\n      result = 0;\n      input_data[0x10] = (uint *)0x0;\n      input_data[9] = param3;\n      *(undefined2 *)((int)input_data + 0x2a) = param4;\n      input_data[0xb] = (uint *)0xffff0000;\n      *(undefined2 *)(input_data + 10) = *(undefined2 *)((int)input_data + 0x2a);\n      input_data[0x11] = param2;\n      **input_data = **input_data | 0x400;\n      **input_data = **input_data | 0x100;\n      *(undefined *)(input_data + 0xf) = 0;\n      (*input_data)[1] = (*input_data)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080047f4": "process_input_080047f4",
                "param_1": "input_data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "result",
                "puVar2": "data_ptr",
                "local_c": "count"
            },
            "calling": [
                "FUN_08007f0e"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080048c8": {
            "entrypoint": "0x080048c8",
            "current_name": "validate_input_080048c8",
            "code": "\nundefined4 validate_input_080048c8(uint **input_data,uint *data_ptr,int size,uint *result)\n\n{\n  undefined4 return_value;\n  uint *temp_ptr;\n  \n  if (*(char *)((int)input_data + 0x3d) == '(') {\n    if (data_ptr == (uint *)0x0) {\n      return_value = 1;\n    }\n    else if (size == 0) {\n      return_value = 1;\n    }\n    else if (*(char *)(input_data + 0xf) == '\\x01') {\n      return_value = 2;\n    }\n    else {\n      *(undefined *)(input_data + 0xf) = 1;\n      temp_ptr = *input_data;\n      if ((*temp_ptr & 1) == 0) {\n        *temp_ptr = *temp_ptr | 1;\n      }\n      **input_data = **input_data & 0xfffff7ff;\n      *(undefined *)((int)input_data + 0x3d) = 0x29;\n      *(undefined *)((int)input_data + 0x3e) = 0x20;\n      return_value = 0;\n      input_data[0x10] = (uint *)0x0;\n      input_data[9] = data_ptr;\n      *(short *)((int)input_data + 0x2a) = (short)size;\n      input_data[0xb] = result;\n      *(undefined2 *)(input_data + 10) = *(undefined2 *)((int)input_data + 0x2a);\n      *(undefined *)(input_data + 0xf) = 0;\n      (*input_data)[1] = (*input_data)[1] | 0x700;\n    }\n  }\n  else {\n    return_value = 2;\n  }\n  return return_value;\n}\n\n",
            "renaming": {
                "FUN_080048c8": "validate_input_080048c8",
                "param_1": "input_data",
                "param_2": "data_ptr",
                "param_3": "size",
                "param_4": "result",
                "uVar1": "return_value",
                "puVar2": "temp_ptr"
            },
            "calling": [
                "FUN_08007fa0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004954": {
            "entrypoint": "0x08004954",
            "current_name": "validate_input_08004954",
            "code": "\nundefined4 validateInput_08004954(uint **inputPtr,uint *dataPtr,int dataSize,uint *outputPtr)\n\n{\n  undefined4 result;\n  uint *ptrVar;\n  \n  if (*(char *)((int)inputPtr + 0x3d) == '(') {\n    if (dataPtr == (uint *)0x0) {\n      result = 1;\n    }\n    else if (dataSize == 0) {\n      result = 1;\n    }\n    else if (*(char *)(inputPtr + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(inputPtr + 0xf) = 1;\n      ptrVar = *inputPtr;\n      if ((*ptrVar & 1) == 0) {\n        *ptrVar = *ptrVar | 1;\n      }\n      **inputPtr = **inputPtr & 0xfffff7ff;\n      *(undefined *)((int)inputPtr + 0x3d) = 0x2a;\n      *(undefined *)((int)inputPtr + 0x3e) = 0x20;\n      result = 0;\n      inputPtr[0x10] = (uint *)0x0;\n      inputPtr[9] = dataPtr;\n      *(short *)((int)inputPtr + 0x2a) = (short)dataSize;\n      inputPtr[0xb] = outputPtr;\n      *(undefined2 *)(inputPtr + 10) = *(undefined2 *)((int)inputPtr + 0x2a);\n      *(undefined *)(inputPtr + 0xf) = 0;\n      (*inputPtr)[1] = (*inputPtr)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08004954": "validate_input_08004954",
                "param_1": "inputPtr",
                "param_2": "dataPtr",
                "param_3": "dataSize",
                "param_4": "outputPtr",
                "uVar1": "result",
                "puVar2": "ptrVar"
            },
            "calling": [
                "FUN_08007fa0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080049e0": {
            "entrypoint": "0x080049e0",
            "current_name": "initialize_data_structure_080049e0",
            "code": "\nundefined4 initializeDataStructure_080049e0(uint **dataStructure)\n\n{\n  uint *pointerToData;\n  \n  if (*(char *)((int)dataStructure + 0x3d) != ' ') {\n    return 2;\n  }\n  *(undefined *)((int)dataStructure + 0x3d) = 0x28;\n  pointerToData = *dataStructure;\n  if ((*pointerToData & 1) == 0) {\n    *pointerToData = *pointerToData | 1;\n  }\n  **dataStructure = **dataStructure | 0x400;\n  (*dataStructure)[1] = (*dataStructure)[1] | 0x300;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080049e0": "initialize_data_structure_080049e0",
                "param_1": "dataStructure",
                "puVar1": "pointerToData"
            },
            "calling": [
                "FUN_08008020",
                "FUN_08007f8e",
                "FUN_08007ff0",
                "FUN_08007f7c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a1e": {
            "entrypoint": "0x08004a1e",
            "current_name": "FUNC_08004a1e",
            "code": "\nvoid FUNC_08004a1e(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a1e": "FUNC_08004a1e"
            },
            "calling": [
                "FUN_08004b82",
                "FUN_08004ccc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004a20": {
            "entrypoint": "0x08004a20",
            "current_name": "FUNC_08004a20",
            "code": "\nvoid FUNC_08004a20(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a20": "FUNC_08004a20"
            },
            "calling": [
                "FUN_08004e3c",
                "FUN_08004d6c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004a22": {
            "entrypoint": "0x08004a22",
            "current_name": "FUNC_08004a22",
            "code": "\nvoid FUNC_08004a22(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a22": "FUNC_08004a22"
            },
            "calling": [
                "FUN_08004aec",
                "FUN_08004a24"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004a24": {
            "entrypoint": "0x08004a24",
            "current_name": "process_data_08004a24",
            "code": "\nundefined4 processData_08004a24(int *data)\n\n{\n  char charValue;\n  byte *bytePointer;\n  \n  charValue = *(char *)((int)data + 0x3d);\n  if (*(short *)((int)data + 0x2a) != 0) {\n    bytePointer = (byte *)data[9];\n    data[9] = (int)(bytePointer + 1);\n    *(uint *)(*data + 0x10) = (uint)*bytePointer;\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    if ((*(short *)((int)data + 0x2a) == 0) && (charValue == ')')) {\n      *(uint *)(*data + 4) = *(uint *)(*data + 4) & 0xfffffbff;\n      data[0xc] = 0x21;\n      *(undefined *)((int)data + 0x3d) = 0x28;\n      FUNC_08004a22();\n    }\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004a24": "process_data_08004a24",
                "param_1": "data",
                "cVar1": "charValue",
                "pbVar2": "bytePointer"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a22"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a74": {
            "entrypoint": "0x08004a74",
            "current_name": "FUNC_08004a74",
            "code": "\nvoid FUNC_08004a74(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a74": "FUNC_08004a74"
            },
            "calling": [
                "FUN_08004a76",
                "FUN_08005084"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004a76": {
            "entrypoint": "0x08004a76",
            "current_name": "process_data_08004a76",
            "code": "\nundefined4 processData_08004a76(int *data)\n\n{\n  char charValue;\n  undefined *ptrToData;\n  \n  charValue = *(char *)((int)data + 0x3d);\n  if (*(short *)((int)data + 0x2a) != 0) {\n    ptrToData = (undefined *)ptrToData2;\n    ptrToData2 = (int)(ptrToData + 1);\n    *ptrToData = (char)*(undefined4 *)(*data + 0x10);\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    if ((*(short *)((int)data + 0x2a) == 0) && (charValue == '*')) {\n      *(uint *)(*data + 4) = *(uint *)(*data + 4) & 0xfffffbff;\n      data[0xc] = 0x22;\n      *(undefined *)((int)data + 0x3d) = 0x28;\n      FUNC_08004a74();\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004a76": "process_data_08004a76",
                "param_1": "data",
                "cVar1": "charValue",
                "puVar2": "ptrToData",
                "param_1[9]": "ptrToData2",
                "param_1[0xc]": "data[0xc]"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ac2": {
            "entrypoint": "0x08004ac2",
            "current_name": "process_data_08004ac2",
            "code": "\nundefined4 processData_08004ac2(int *dataPointer,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined2 selectedValue;\n  uint flag;\n  \n  flag = *(uint *)(*dataPointer + 0x18);\n  if ((flag & 0x80) == 0) {\n    selectedValue = *(undefined2 *)(dataPointer + 3);\n  }\n  else {\n    selectedValue = *(undefined2 *)(dataPointer + 6);\n  }\n  FUN_08007fa0(dataPointer,(*(uint *)(*dataPointer + 0x18) & 4) == 0,selectedValue,flag,param4);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004ac2": "process_data_08004ac2",
                "param_1": "dataPointer",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "selectedValue",
                "uVar2": "flag"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08007fa0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004aec": {
            "entrypoint": "0x08004aec",
            "current_name": "process_param_08004aec",
            "code": "\nundefined4 processParam_08004aec(uint **paramArray)\n\n{\n  if (((paramArray[11] == (uint *)0x4) || (paramArray[11] == (uint *)0x8)) &&\n     (*(char *)((int)paramArray + 0x3d) == '(')) {\n    paramArray[11] = (uint *)0xffff0000;\n    (*paramArray)[1] = (*paramArray)[1] & 0xfffff8ff;\n    (*paramArray)[5] = 0xfffffbff;\n    **paramArray = **paramArray & 0xfffffbff;\n    paramArray[12] = (uint *)0x0;\n    *(undefined *)((int)paramArray + 0x3d) = 0x20;\n    *(undefined *)((int)paramArray + 0x3e) = 0;\n    FUN_08007ff0();\n  }\n  else if (*(char *)((int)paramArray + 0x3d) == '!') {\n    paramArray[11] = (uint *)0xffff0000;\n    paramArray[12] = (uint *)0x21;\n    *(undefined *)((int)paramArray + 0x3d) = 0x20;\n    *(undefined *)((int)paramArray + 0x3e) = 0;\n    (*paramArray)[1] = (*paramArray)[1] & 0xfffff8ff;\n    (*paramArray)[5] = 0xfffffbff;\n    **paramArray = **paramArray & 0xfffffbff;\n    FUNC_08004a22();\n  }\n  else {\n    (*paramArray)[5] = 0xfffffbff;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004aec": "process_param_08004aec",
                "param_1": "paramArray",
                "param_1[0xb]": "paramArray[11]",
                "param_1[0xc]": "paramArray[12]",
                "(int)param_1": "(int)paramArray"
            },
            "calling": [
                "FUN_080052f0"
            ],
            "called": [
                "FUN_08007ff0",
                "FUN_08004a22"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b80": {
            "entrypoint": "0x08004b80",
            "current_name": "FUNC_08004b80",
            "code": "\nvoid FUNC_08004b80(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b80": "FUNC_08004b80"
            },
            "calling": [
                "FUN_08004b82",
                "FUN_08004ccc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004b82": {
            "entrypoint": "0x08004b82",
            "current_name": "process_param_08004b82",
            "code": "\nundefined4 processParam_08004b82(uint **param)\n\n{\n  char character;\n  uint *pointer;\n  \n  character = *(char *)((int)param + 0x3d);\n  pointer = param[0xb];\n  if ((*(short *)(param + 10) == 0) && (character == '!')) {\n    if ((pointer == (uint *)0x4) || ((pointer == (uint *)0x8 || (pointer == (uint *)0xffff0000)))) {\n      (*param)[1] = (*param)[1] & 0xfffff8ff;\n      **param = **param | 0x200;\n      param[0xc] = (uint *)0x0;\n      *(undefined *)((int)param + 0x3d) = 0x20;\n      if (*(char *)((int)param + 0x3e) == '@') {\n        *(undefined *)((int)param + 0x3e) = 0;\n        FUNC_08004b80();\n      }\n      else {\n        *(undefined *)((int)param + 0x3e) = 0;\n        FUNC_08004a1e();\n      }\n    }\n    else {\n      (*param)[1] = (*param)[1] & 0xfffff8ff;\n      param[0xc] = (uint *)0x11;\n      *(undefined *)((int)param + 0x3e) = 0;\n      *(undefined *)((int)param + 0x3d) = 0x20;\n      FUNC_08004a1e();\n    }\n  }\n  else if ((character == '!') || ((*(char *)((int)param + 0x3e) == '@' && (character == '\\\"')))) {\n    if (*(short *)((int)param + 0x2a) == 0) {\n      (*param)[1] = (*param)[1] & 0xfffffbff;\n    }\n    else if (*(char *)((int)param + 0x3e) == '@') {\n      if (param[0x14] == (uint *)0x0) {\n        if (param[0x13] == (uint *)0x1) {\n          (*param)[4] = (uint)param[0x12] & 0xff;\n          param[0x14] = (uint *)((int)param[0x14] + 2);\n        }\n        else {\n          (*param)[4] = (uint)((int)param[0x12] << 0x10) >> 0x18;\n          param[0x14] = (uint *)((int)param[0x14] + 1);\n        }\n      }\n      else if (param[0x14] == (uint *)0x1) {\n        (*param)[4] = (uint)param[0x12] & 0xff;\n        param[0x14] = (uint *)((int)param[0x14] + 1);\n      }\n      else if (param[0x14] == (uint *)0x2) {\n        if (*(char *)((int)param + 0x3d) == '\\\"') {\n          **param = **param | 0x100;\n        }\n        else if (*(char *)((int)param + 0x3d) == '!') {\n          pointer = param[9];\n          param[9] = (uint *)((int)pointer + 1);\n          (*param)[4] = (uint)*(byte *)pointer;\n          *(short *)((int)param + 0x2a) = *(short *)((int)param + 0x2a) + -1;\n        }\n      }\n    }\n    else {\n      pointer = param[9];\n      param[9] = (uint *)((int)pointer + 1);\n      (*param)[4] = (uint)*(byte *)pointer;\n      *(short *)((int)param + 0x2a) = *(short *)((int)param + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004b82": "process_param_08004b82",
                "param_1": "param",
                "cVar1": "character",
                "puVar2": "pointer"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a1e",
                "FUN_08004b80"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ccc": {
            "entrypoint": "0x08004ccc",
            "current_name": "handle_special_character_08004ccc",
            "code": "\nundefined4 handleSpecialCharacter_08004ccc(uint **parameters)\n\n{\n  uint *currentValue;\n  \n  currentValue = parameters[0xb];\n  if (*(char *)((int)parameters + 0x3d) == '!') {\n    if (*(short *)((int)parameters + 0x2a) == 0) {\n      if (((currentValue == (uint *)0x4) || (currentValue == (uint *)0x8)) || (currentValue == (uint *)0xffff0000)) {\n        (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n        **parameters = **parameters | 0x200;\n        parameters[0xc] = (uint *)0x0;\n        *(undefined *)((int)parameters + 0x3d) = 0x20;\n        if (*(char *)((int)parameters + 0x3e) == '@') {\n          *(undefined *)((int)parameters + 0x3e) = 0;\n          FUNC_08004b80();\n        }\n        else {\n          *(undefined *)((int)parameters + 0x3e) = 0;\n          FUNC_08004a1e();\n        }\n      }\n      else {\n        (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n        parameters[0xc] = (uint *)0x11;\n        *(undefined *)((int)parameters + 0x3e) = 0;\n        *(undefined *)((int)parameters + 0x3d) = 0x20;\n        FUNC_08004a1e();\n      }\n    }\n    else {\n      currentValue = parameters[9];\n      parameters[9] = (uint *)((int)currentValue + 1);\n      (*parameters)[4] = (uint)*(byte *)currentValue;\n      *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004ccc": "handle_special_character_08004ccc",
                "param_1": "parameters",
                "puVar1": "currentValue"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a1e",
                "FUN_08004b80"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d6a": {
            "entrypoint": "0x08004d6a",
            "current_name": "FUNC_08004d6a",
            "code": "\nvoid FUNC_08004d6a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d6a": "FUNC_08004d6a"
            },
            "calling": [
                "FUN_08004e3c",
                "FUN_08004d6c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004d6c": {
            "entrypoint": "0x08004d6c",
            "current_name": "apply_flags_08004d6c",
            "code": "\nundefined4 applyFlags_08004d6c(uint **flags)\n\n{\n  uint *tempPtr;\n  \n  if (*(char *)((int)flags + 0x3d) == '\\\"') {\n    if (*(ushort *)((int)flags + 0x2a) < 4) {\n      if (*(ushort *)((int)flags + 0x2a) - 2 < 2) {\n        if (ptrValue == (uint *)0x2) {\n          **flags = **flags | 0x400;\n        }\n        else {\n          **flags = **flags & 0xfffffbff;\n          **flags = **flags | 0x800;\n        }\n        (*flags)[1] = (*flags)[1] & 0xfffffbff;\n      }\n      else {\n        if (ptrValue == (uint *)0x2) {\n          **flags = **flags | 0x400;\n        }\n        else {\n          **flags = **flags & 0xfffffbff;\n        }\n        (*flags)[1] = (*flags)[1] & 0xfffff8ff;\n        tempPtr = flags[9];\n        flags[9] = (uint *)((int)tempPtr + 1);\n        *(char *)tempPtr = (char)(*flags)[4];\n        *(short *)((int)flags + 0x2a) = *(short *)((int)flags + 0x2a) + -1;\n        *(undefined *)((int)flags + 0x3d) = 0x20;\n        zeroPtr = (uint *)0x0;\n        if (*(char *)((int)flags + 0x3e) == '@') {\n          *(undefined *)((int)flags + 0x3e) = 0;\n          FUNC_08004d6a();\n        }\n        else {\n          *(undefined *)((int)flags + 0x3e) = 0;\n          FUNC_08004a20();\n        }\n      }\n    }\n    else {\n      tempPtr = flags[9];\n      flags[9] = (uint *)((int)tempPtr + 1);\n      *(char *)tempPtr = (char)(*flags)[4];\n      *(short *)((int)flags + 0x2a) = *(short *)((int)flags + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004d6c": "apply_flags_08004d6c",
                "param_1": "flags",
                "puVar1": "tempPtr",
                "param_1[0xb]": "ptrValue",
                "param_1[0xc]": "zeroPtr"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004d6a",
                "FUN_08004a20"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e3c": {
            "entrypoint": "0x08004e3c",
            "current_name": "process_data_08004e3c",
            "code": "\nundefined4 process_data_08004e3c(uint **data)\n\n{\n  uint *value;\n  \n  value = ptr_value;\n  if (*(short *)((int)data + 0x2a) == 3) {\n    if (((value == (uint *)0x4) || (value == (uint *)0x8)) || (value == (uint *)0xffff0000)) {\n      **data = **data & 0xfffffbff;\n    }\n    value = ptr_index;\n    ptr_index = (uint *)((int)value + 1);\n    *(char *)value = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  else if (*(short *)((int)data + 0x2a) == 2) {\n    if (((value == (uint *)0x4) || (value == (uint *)0x8)) || (value == (uint *)0xffff0000)) {\n      (*data)[1] = (*data)[1] & 0xfffffcff;\n      **data = **data | 0x200;\n    }\n    else {\n      if (value == (uint *)0x2) {\n        **data = **data | 0x400;\n      }\n      else {\n        **data = **data & 0xfffffbff;\n      }\n      (*data)[1] = (*data)[1] & 0xfffffcff;\n    }\n    value = ptr_index;\n    ptr_index = (uint *)((int)value + 1);\n    *(char *)value = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    value = ptr_index;\n    ptr_index = (uint *)((int)value + 1);\n    *(char *)value = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    *(undefined *)((int)data + 0x3d) = 0x20;\n    ptr_flag = (uint *)0x0;\n    if (*(char *)((int)data + 0x3e) == '@') {\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUNC_08004d6a();\n    }\n    else {\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUNC_08004a20();\n    }\n  }\n  else {\n    value = ptr_index;\n    ptr_index = (uint *)((int)value + 1);\n    *(char *)value = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004e3c": "process_data_08004e3c",
                "param_1": "data",
                "puVar1": "value",
                "param_1[0xb]": "ptr_value",
                "param_1[9]": "ptr_index",
                "param_1[0xc]": "ptr_flag"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004d6a",
                "FUN_08004a20"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004f3a": {
            "entrypoint": "0x08004f3a",
            "current_name": "FUNC_08004f3a",
            "code": "\nvoid FUNC_08004f3a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004f3a": "FUNC_08004f3a"
            },
            "calling": [
                "FUN_08004f3c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004f3c": {
            "entrypoint": "0x08004f3c",
            "current_name": "process_input_data_08004f3c",
            "code": "\nvoid processInputData_08004f3c(uint **data)\n\n{\n  int result;\n  uint *charPtr;\n  uint *ptr;\n  \n  if (*(byte *)((int)data + 0x3d) - 0x29 < 2) {\n    data[0xc] = (uint *)0x0;\n    *(undefined *)((int)data + 0x3d) = 0x28;\n  }\n  else {\n    if ((*(char *)((int)data + 0x3d) != '`') && (((*data)[1] & 0x800) == 0)) {\n      *(undefined *)((int)data + 0x3d) = 0x20;\n    }\n    data[0xc] = (uint *)0x0;\n    *(undefined *)((int)data + 0x3e) = 0;\n  }\n  **data = **data & 0xfffff7ff;\n  ptr = *data;\n  if ((ptr[1] & 0x800) == 0) {\n    if (*(char *)((int)data + 0x3d) == '`') {\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      data[0x10] = (uint *)0x0;\n      if ((ptr[5] & 0x40) != 0) {\n        charPtr = data[9];\n        data[9] = (uint *)((int)charPtr + 1);\n        *(char *)charPtr = (char)ptr[4];\n      }\n      **data = **data & 0xfffffffe;\n      FUNC_08004f3a(data);\n    }\n    else {\n      if ((ptr[5] & 0x40) != 0) {\n        charPtr = data[9];\n        data[9] = (uint *)((int)charPtr + 1);\n        *(char *)charPtr = (char)ptr[4];\n      }\n      FUN_08008020(data);\n    }\n  }\n  else {\n    ptr[1] = ptr[1] & 0xfffff7ff;\n    if (*(char *)((int)data[0xd] + 0x21) == '\\x01') {\n      data[0xe][0xd] = (uint)&label;\n      result = FUN_08004050(data[0xe]);\n      if (result != 0) {\n        if (((*data)[5] & 0x40) != 0) {\n          ptr = data[9];\n          data[9] = (uint *)((int)ptr + 1);\n          *(char *)ptr = (char)(*data)[4];\n        }\n        **data = **data & 0xfffffffe;\n        *(undefined *)((int)data + 0x3d) = 0x20;\n        (*(functionPtr *)data[0xe][0xd])();\n      }\n    }\n    else {\n      data[0xd][0xd] = (uint)&label;\n      result = FUN_08004050(data[0xd]);\n      if (result != 0) {\n        **data = **data & 0xfffffffe;\n        *(undefined *)((int)data + 0x3d) = 0x20;\n        (*(functionPtr *)data[0xd][0xd])();\n      }\n    }\n  }\n  if ((*(char *)((int)data + 0x3d) == '(') && (((uint)data[0x10] & 4) != 0)) {\n    data[0xb] = (uint *)0xffff0000;\n    data[0xc] = (uint *)0x0;\n    *(undefined *)((int)data + 0x3d) = 0x20;\n    *(undefined *)((int)data + 0x3e) = 0;\n    FUN_08007ff0(data);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004f3c": "process_input_data_08004f3c",
                "param_1": "data",
                "iVar1": "result",
                "puVar2": "charPtr",
                "puVar3": "ptr",
                "LAB_080053cc_1": "label",
                "code": "functionPtr"
            },
            "calling": [
                "FUN_080052f0",
                "FUN_08005084"
            ],
            "called": [
                "FUN_08008020",
                "FUN_08004050",
                "FUN_08004f3a",
                "FUN_08007ff0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005084": {
            "entrypoint": "0x08005084",
            "current_name": "process_data_08005084",
            "code": "\nundefined4 processData_08005084(uint **data)\n\n{\n  char character;\n  uint *ptr1;\n  uint *ptr2;\n  \n  character = *(char *)((int)data + 0x3d);\n  (*data)[1] = (*data)[1] & 0xfffff8ff;\n  **data = **data | 1;\n  **data = **data & 0xfffffbff;\n  ptr1 = *data;\n  if ((ptr1[1] & 0x800) != 0) {\n    if ((*(char *)((int)data + 0x3d) == '\\\"') || (*(char *)((int)data + 0x3d) == '*')) {\n      *(short *)((int)data + 0x2a) = (short)*(undefined4 *)(*data[0xe] + 4);\n    }\n    else {\n      *(short *)((int)data + 0x2a) = (short)*(undefined4 *)(*data[0xd] + 4);\n    }\n  }\n  if (*(short *)((int)data + 0x2a) != 0) {\n    if ((ptr1[5] & 4) != 0) {\n      ptr2 = data[9];\n      data[9] = (uint *)((int)ptr2 + 1);\n      *(char *)ptr2 = (char)ptr1[4];\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n    if (((*data)[5] & 0x40) != 0) {\n      ptr1 = data[9];\n      data[9] = (uint *)((int)ptr1 + 1);\n      *(char *)ptr1 = (char)(*data)[4];\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n    data[0x10] = (uint *)((uint)data[0x10] | 4);\n  }\n  if (data[0x10] == (uint *)0x0) {\n    if (((character == '(') || (character == '*')) || (character == ')')) {\n      data[0xb] = (uint *)0xffff0000;\n      data[0xc] = (uint *)0x0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUN_08007ff0();\n    }\n    else if ((data[0xc] == (uint *)0x22) || (character == '\\\"')) {\n      data[0xc] = (uint *)0x0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUNC_08004a74();\n    }\n  }\n  else {\n    FUN_08004f3c();\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005084": "process_data_08005084",
                "param_1": "data",
                "cVar1": "character",
                "puVar2": "ptr1",
                "puVar3": "ptr2"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a74",
                "FUN_08007ff0",
                "FUN_08004f3c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005188": {
            "entrypoint": "0x08005188",
            "current_name": "process_data_08005188",
            "code": "\nvoid processData_08005188(int *data)\n\n{\n  int value;\n  uint flagA;\n  uint flagB;\n  uint flagC;\n  \n  value = *data;\n  flagC = *(uint *)(value + 0x18);\n  flagA = *(uint *)(value + 0x14);\n  flagB = *(uint *)(value + 4);\n  if ((*(char *)((int)data + 0x3e) == '\\x10') || (*(char *)((int)data + 0x3e) == '@')) {\n    if (((flagA & 0x10001) == 0) || ((flagB & 0x200) == 0)) {\n      if (((flagA & 0x10008) == 0) || ((flagB & 0x200) == 0)) {\n        if (((flagA & 0x10002) != 0) && ((flagB & 0x200) != 0)) {\n          FUN_080043a2(data);\n        }\n      }\n      else {\n        FUN_08004396(data);\n      }\n    }\n    else {\n      FUN_0800430c(data);\n    }\n    if ((flagC & 0x100004) == 0) {\n      if ((((flagA & 0x10040) != 0) && ((flagB & 0x400) != 0)) && ((flagA & 0x10004) == 0)) {\n        FUN_08004d6c(data);\n        return;\n      }\n      if (((flagA & 0x10004) != 0) && ((flagB & 0x200) != 0)) {\n        FUN_08004e3c(data);\n        return;\n      }\n    }\n    else {\n      if ((((flagA & 0x10080) != 0) && ((flagB & 0x400) != 0)) && ((flagA & 0x10004) == 0)) {\n        FUN_08004b82(data);\n        return;\n      }\n      if (((flagA & 0x10004) != 0) && ((flagB & 0x200) != 0)) {\n        FUN_08004ccc(data);\n        return;\n      }\n    }\n  }\n  else {\n    if (((flagA & 0x10002) != 0) && ((flagB & 0x200) != 0)) {\n      FUN_08004ac2();\n      return;\n    }\n    if (((flagA & 0x10010) != 0) && ((flagB & 0x200) != 0)) {\n      FUN_08005084(data);\n      return;\n    }\n    if ((flagC & 0x100004) == 0) {\n      if ((((flagA & 0x10040) != 0) && ((flagB & 0x400) != 0)) && ((flagA & 0x10004) == 0)) {\n        FUN_08004a76(data);\n        return;\n      }\n      if (((flagA & 0x10004) != 0) && ((flagB & 0x200) != 0)) {\n        FUN_0800459c(data);\n      }\n    }\n    else {\n      if ((((flagA & 0x10080) != 0) && ((flagB & 0x400) != 0)) && ((flagA & 0x10004) == 0)) {\n        FUN_08004a24(data);\n        return;\n      }\n      if (((flagA & 0x10004) != 0) && ((flagB & 0x200) != 0)) {\n        FUN_0800457c(data);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005188": "process_data_08005188",
                "param_1": "data",
                "iVar1": "value",
                "uVar2": "flagA",
                "uVar3": "flagB",
                "uVar4": "flagC"
            },
            "calling": [],
            "called": [
                "FUN_08004e3c",
                "FUN_08004ccc",
                "FUN_08004396",
                "FUN_08004ac2",
                "FUN_08004a76",
                "FUN_0800459c",
                "FUN_0800457c",
                "FUN_080043a2",
                "FUN_08005084",
                "FUN_0800430c",
                "FUN_08004a24",
                "FUN_08004b82",
                "FUN_08004d6c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080052f0": {
            "entrypoint": "0x080052f0",
            "current_name": "update_flags_080052f0",
            "code": "\nvoid updateFlags_080052f0(uint **flagsArray)\n\n{\n  char charValue;\n  uint *pointerVar;\n  uint flagValue1;\n  uint flagValue2;\n  \n  pointerVar = *flagsArray;\n  flagValue1 = pointerVar[5];\n  flagValue2 = pointerVar[1];\n  if (((flagValue1 & 0x10100) != 0) && ((flagValue2 & 0x100) != 0)) {\n    flagsArray[0x10] = (uint *)((uint)flagsArray[0x10] | 1);\n    pointerVar[5] = 0xfffffeff;\n    **flagsArray = **flagsArray | 0x8000;\n  }\n  if (((flagValue1 & 0x10200) != 0) && ((flagValue2 & 0x100) != 0)) {\n    flagsArray[0x10] = (uint *)((uint)flagsArray[0x10] | 2);\n    (*flagsArray)[5] = 0xfffffdff;\n  }\n  if (((flagValue1 & 0x10400) != 0) && ((flagValue2 & 0x100) != 0)) {\n    charValue = *(char *)((int)flagsArray + 0x3d);\n    if (((*(char *)((int)flagsArray + 0x3e) == ' ') && (*(short *)((int)flagsArray + 0x2a) == 0)) &&\n       (((charValue == '!' || (charValue == ')')) || ((charValue == '(' && (flagsArray[0xc] == (uint *)0x21)))))) {\n      FUN_08004aec(flagsArray);\n    }\n    else {\n      flagsArray[0x10] = (uint *)((uint)flagsArray[0x10] | 4);\n      if (*(char *)((int)flagsArray + 0x3e) == '\\x10') {\n        **flagsArray = **flagsArray | 0x200;\n      }\n      (*flagsArray)[5] = 0xfffffbff;\n    }\n  }\n  if (((flagValue1 & 0x10800) != 0) && ((flagValue2 & 0x100) != 0)) {\n    flagsArray[0x10] = (uint *)((uint)flagsArray[0x10] | 8);\n    (*flagsArray)[5] = 0xfffff7ff;\n  }\n  if (flagsArray[0x10] != (uint *)0x0) {\n    FUN_08004f3c(flagsArray);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080052f0": "update_flags_080052f0",
                "param_1": "flagsArray",
                "cVar1": "charValue",
                "puVar2": "pointerVar",
                "uVar3": "flagValue1",
                "uVar4": "flagValue2"
            },
            "calling": [],
            "called": [
                "FUN_08004aec",
                "FUN_08004f3c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800542a": {
            "entrypoint": "0x0800542a",
            "current_name": "get_byte_at_offset_0800542a",
            "code": "\nundefined get_byte_at_offset_0800542a(int offset)\n\n{\n  return *(undefined *)(offset + 0x3d);\n}\n\n",
            "renaming": {
                "FUN_0800542a": "get_byte_at_offset_0800542a",
                "param_1": "offset"
            },
            "calling": [
                "FUN_08007f0e",
                "FUN_08007e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005430": {
            "entrypoint": "0x08005430",
            "current_name": "get_parameter_value_08005430",
            "code": "\nundefined4 getParameterValue_08005430(int inputAddress)\n\n{\n  return *(undefined4 *)(inputAddress + 0x40);\n}\n\n",
            "renaming": {
                "FUN_08005430": "get_parameter_value_08005430",
                "param_1": "inputAddress"
            },
            "calling": [
                "FUN_08007f0e",
                "FUN_08007e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005434": {
            "entrypoint": "0x08005434",
            "current_name": "delay_function_08005434",
            "code": "\nvoid delayFunction_08005434(int inputValue)\n\n{\n  bool continueLoop;\n  int calculatedValue;\n  \n  calculatedValue = inputValue * (DAT_20000018 / 8000);\n  do {\n    continueLoop = calculatedValue != 0;\n    calculatedValue = calculatedValue + -1;\n  } while (continueLoop);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005434": "delay_function_08005434",
                "param_1": "inputValue",
                "local_4": "calculatedValue",
                "bVar1": "continueLoop"
            },
            "calling": [
                "FUN_08005460"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005460": {
            "entrypoint": "0x08005460",
            "current_name": "process_flags_08005460",
            "code": "\n\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nundefined4 processFlags_08005460(uint *flags)\n\n{\n  int initialTime;\n  int currentTime;\n  undefined4 result;\n  uint temp;\n  bool isSet;\n  \n  if ((*flags & 1) != 0) {\n    if (((_DAT_40021004 & 0xc) == 4) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) != 0)))) {\n      if (((_DAT_40021000 & 0x20000) != 0) && (flags[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      temp = flags[1];\n      if (temp == 0x10000) {\n        _DAT_40021000 = _DAT_40021000 | 0x10000;\n      }\n      else if (temp == 0) {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      else if (temp == 0x50000) {\n        _DAT_40021000 = _DAT_40021000 | 0x50000;\n      }\n      else {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      if (flags[1] == 0) {\n        initialTime = FUN_08003760();\n        while ((_DAT_40021000 & 0x20000) != 0) {\n          currentTime = FUN_08003760();\n          if (100 < (uint)(currentTime - initialTime)) {\n            return 3;\n          }\n        }\n      }\n      else {\n        initialTime = FUN_08003760();\n        while ((_DAT_40021000 & 0x20000) == 0) {\n          currentTime = FUN_08003760();\n          if (100 < (uint)(currentTime - initialTime)) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*flags & 2) != 0) {\n    if (((_DAT_40021004 & 0xc) == 0) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) == 0)))) {\n      if (((_DAT_40021000 & 2) != 0) && (flags[4] != 1)) {\n        return 1;\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | flags[5] << 3;\n    }\n    else if (flags[4] == 0) {\n      _DAT_42420000 = 0;\n      initialTime = FUN_08003760();\n      while ((_DAT_40021000 & 2) != 0) {\n        currentTime = FUN_08003760();\n        if (2 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420000 = 1;\n      initialTime = FUN_08003760();\n      while ((_DAT_40021000 & 2) == 0) {\n        currentTime = FUN_08003760();\n        if (2 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | flags[5] << 3;\n    }\n  }\n  if ((*flags & 8) != 0) {\n    if (flags[6] == 0) {\n      _DAT_42420480 = 0;\n      initialTime = FUN_08003760();\n      while ((_DAT_40021024 & 2) != 0) {\n        currentTime = FUN_08003760();\n        if (2 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420480 = 1;\n      initialTime = FUN_08003760();\n      while ((_DAT_40021024 & 2) == 0) {\n        currentTime = FUN_08003760();\n        if (2 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n      FUN_08005434(1);\n    }\n  }\n  if ((*flags & 4) != 0) {\n    isSet = (_DAT_4002101c & 0x10000000) == 0;\n    if (isSet) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      initialTime = FUN_08003760();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        currentTime = FUN_08003760();\n        if (100 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n    }\n    temp = flags[3];\n    if (temp == 1) {\n      _DAT_40021020 = _DAT_40021020 | 1;\n    }\n    else if (temp == 0) {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    else if (temp == 5) {\n      _DAT_40021020 = _DAT_40021020 | 5;\n    }\n    else {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    if (flags[3] == 0) {\n      initialTime = FUN_08003760();\n      while ((_DAT_40021020 & 2) != 0) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      initialTime = FUN_08003760();\n      while ((_DAT_40021020 & 2) == 0) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n    }\n    if (isSet) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if (flags[7] == 0) {\n    result = 0;\n  }\n  else if ((_DAT_40021004 & 0xc) == 8) {\n    result = 1;\n  }\n  else if (flags[7] == 2) {\n    _DAT_42420060 = 0;\n    initialTime = FUN_08003760();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        if (flags[8] == 0x10000) {\n          _DAT_40021004 = _DAT_40021004 & 0xfffdffff | flags[2];\n        }\n        _DAT_40021004 = _DAT_40021004 & 0xffc2ffff | flags[8] | flags[9];\n        _DAT_42420060 = 1;\n        initialTime = FUN_08003760();\n        do {\n          if ((_DAT_40021000 & 0x2000000) != 0) {\n            return 0;\n          }\n          currentTime = FUN_08003760();\n        } while ((uint)(currentTime - initialTime) < 3);\n        return 3;\n      }\n      currentTime = FUN_08003760();\n    } while ((uint)(currentTime - initialTime) < 3);\n    result = 3;\n  }\n  else {\n    _DAT_42420060 = 0;\n    initialTime = FUN_08003760();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        return 0;\n      }\n      currentTime = FUN_08003760();\n    } while ((uint)(currentTime - initialTime) < 3);\n    result = 3;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005460": "process_flags_08005460",
                "param_1": "flags",
                "iVar1": "initialTime",
                "iVar2": "currentTime",
                "uVar3": "result",
                "uVar4": "temp",
                "bVar5": "isSet"
            },
            "calling": [
                "FUN_080035b8"
            ],
            "called": [
                "FUN_08005434",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005840": {
            "entrypoint": "0x08005840",
            "current_name": "calculate_clock_speed_08005840",
            "code": "\n\n\nuint calculateClockSpeed_08005840(void)\n\n{\n  uint uVar1;\n  undefined2 configFlag;\n  undefined4 stackValue1;\n  undefined4 stackValue2;\n  undefined4 stackValue3;\n  undefined4 stackValue4;\n  \n  stackValue4 = 0x10100f0e;\n  stackValue3 = 0xd0c0b0a;\n  stackValue2 = 0x9080706;\n  stackValue1 = 0x5040302;\n  configFlag = 0x201;\n  if ((_DAT_40021004 & 0xc) == 8) {\n    uVar1 = (uint)*(byte *)((int)&stackValue1 + ((_DAT_40021004 << 10) >> 0x1c));\n    if ((_DAT_40021004 & 0x10000) == 0) {\n      uVar1 = uVar1 * 4000000;\n    }\n    else {\n      uVar1 = (uVar1 * 8000000) /\n              (uint)*(byte *)((int)&configFlag - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n    }\n  }\n  else {\n    uVar1 = 8000000;\n  }\n  return uVar1;\n}\n\n",
            "renaming": {
                "FUN_08005840": "calculate_clock_speed_08005840",
                "local_1c": "configFlag",
                "uStack_18": "stackValue1",
                "uStack_14": "stackValue2",
                "uStack_10": "stackValue3",
                "uStack_c": "stackValue4"
            },
            "calling": [
                "FUN_080058d2"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058ac": {
            "entrypoint": "0x080058ac",
            "current_name": "initialize_memory_080058ac",
            "code": "\n\n\nundefined4 initializeMemory_080058ac(uint *memoryParams,uint requiredSize)\n\n{\n  int initialTime;\n  int currentTime;\n  uint temp;\n  \n  if ((_DAT_40022000 & 7) < requiredSize) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | requiredSize;\n    if (requiredSize != (requiredSize & 7)) {\n      return 1;\n    }\n  }\n  if ((*memoryParams & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | memoryParams[2];\n  }\n  if ((*memoryParams & 1) != 0) {\n    temp = memoryParams[1];\n    if (temp == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((temp != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = temp | _DAT_40021004 & 0xfffffffc;\n    initialTime = FUN_08003760();\n    if (memoryParams[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n    }\n    else if (memoryParams[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (requiredSize < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | requiredSize;\n    if (requiredSize != (requiredSize & 7)) {\n      return 1;\n    }\n  }\n  if ((*memoryParams & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | memoryParams[3];\n  }\n  if ((*memoryParams & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | memoryParams[4] << 3;\n  }\n  temp = FUN_08005840();\n  DAT_20000018 = temp >> (&DAT_0800a944)[(_DAT_40021004 << 0x18) >> 0x1c];\n  FUN_080036d8(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080058ac": "initialize_memory_080058ac",
                "param_1": "memoryParams",
                "param_2": "requiredSize",
                "uVar3": "temp",
                "iVar1": "initialTime",
                "iVar2": "currentTime"
            },
            "calling": [
                "FUN_080035b8"
            ],
            "called": [
                "FUN_080058d2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058d2": {
            "entrypoint": "0x080058d2",
            "current_name": "handle_param_updates_080058d2",
            "code": "\n\n\nundefined4 handleParamUpdates_080058d2(uint *paramFlags,uint paramValue)\n\n{\n  int initialTime;\n  int currentTime;\n  uint tempValue;\n  \n  if ((*paramFlags & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | paramFlags[2];\n  }\n  if ((*paramFlags & 1) != 0) {\n    tempValue = paramFlags[1];\n    if (tempValue == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((tempValue != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = tempValue | _DAT_40021004 & 0xfffffffc;\n    initialTime = FUN_08003760();\n    if (paramFlags[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n    }\n    else if (paramFlags[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (paramValue < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | paramValue;\n    if (paramValue != (paramValue & 7)) {\n      return 1;\n    }\n  }\n  if ((*paramFlags & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | paramFlags[3];\n  }\n  if ((*paramFlags & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | paramFlags[4] << 3;\n  }\n  tempValue = FUN_08005840();\n  DAT_20000018 = tempValue >> (&DAT_0800a944)[(_DAT_40021004 << 0x18) >> 0x1c];\n  FUN_080036d8(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080058d2": "handle_param_updates_080058d2",
                "param_1": "paramFlags",
                "param_2": "paramValue",
                "iVar1": "initialTime",
                "iVar2": "currentTime",
                "uVar3": "tempValue"
            },
            "calling": [
                "FUN_080058ac"
            ],
            "called": [
                "FUN_080036d8",
                "FUN_08003760",
                "FUN_08005840"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a1c": {
            "entrypoint": "0x08005a1c",
            "current_name": "get_global_data_08005a1c",
            "code": "\nundefined4 getGlobalData_08005a1c(void)\n\n{\n  return DAT_20000018;\n}\n\n",
            "renaming": {
                "FUN_08005a1c": "get_global_data_08005a1c"
            },
            "calling": [
                "FUN_08005a28",
                "FUN_08005a48",
                "FUN_080035b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a28": {
            "entrypoint": "0x08005a28",
            "current_name": "get_shifted_value_08005a28",
            "code": "\n\n\nuint getShiftedValue_08005a28(void)\n\n{\n  uint result;\n  \n  result = FUN_08005a1c();\n  return result >> (&DAT_0800a954)[(uint)(_DAT_40021004 << 0x15) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_08005a28": "get_shifted_value_08005a28",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080045c0",
                "FUN_08006538",
                "FUN_080075dc"
            ],
            "called": [
                "FUN_08005a1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a48": {
            "entrypoint": "0x08005a48",
            "current_name": "shifted_result_08005a48",
            "code": "\n\n\nuint shiftedResult_08005a48(void)\n\n{\n  uint result;\n  \n  result = FUN_08005a1c();\n  return result >> (&DAT_0800a954)[(uint)(_DAT_40021004 << 0x12) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_08005a48": "shifted_result_08005a48",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08006538",
                "FUN_08005bb8",
                "FUN_080075dc"
            ],
            "called": [
                "FUN_08005a1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a68": {
            "entrypoint": "0x08005a68",
            "current_name": "initialize_values_08005a68",
            "code": "\n\n\nvoid initializeValues_08005a68(undefined4 *resultArray,uint *configArray)\n\n{\n  *resultArray = 0xf;\n  resultArray[1] = _DAT_40021004 & 3;\n  resultArray[2] = _DAT_40021004 & 0xf0;\n  resultArray[3] = _DAT_40021004 & 0x700;\n  resultArray[4] = _DAT_40021004 >> 3 & 0x700;\n  *configArray = _DAT_40022000 & 7;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a68": "initialize_values_08005a68",
                "param_1": "resultArray",
                "param_2": "configArray"
            },
            "calling": [
                "FUN_080075dc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005aa4": {
            "entrypoint": "0x08005aa4",
            "current_name": "update_flags_and_settings_08005aa4",
            "code": "\n\n\nundefined4 updateFlagsAndSettings_08005aa4(uint *flags)\n\n{\n  uint tempVar1;\n  uint tempVar2;\n  int counter1;\n  int counter2;\n  bool shouldSetFlag;\n  \n  if ((*flags & 1) != 0) {\n    shouldSetFlag = (_DAT_4002101c & 0x10000000) == 0;\n    if (shouldSetFlag) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      counter1 = FUN_08003760();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        counter2 = FUN_08003760();\n        if (100 < (uint)(counter2 - counter1)) {\n          return 3;\n        }\n      }\n    }\n    if (((_DAT_40021020 & 0x300) != 0) && ((_DAT_40021020 & 0x300) != (flags[1] & 0x300))) {\n      tempVar2 = _DAT_40021020 & 0xfffffcff;\n      _DAT_42420440 = 0;\n      tempVar1 = _DAT_40021020 & 1;\n      _DAT_40021020 = tempVar2;\n      if (tempVar1 != 0) {\n        counter1 = FUN_08003760();\n        while ((_DAT_40021020 & 2) == 0) {\n          counter2 = FUN_08003760();\n          if (5000 < (uint)(counter2 - counter1)) {\n            return 3;\n          }\n        }\n      }\n    }\n    _DAT_40021020 = _DAT_40021020 & 0xfffffcff | flags[1];\n    if (shouldSetFlag) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if ((*flags & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffff3fff | flags[2];\n  }\n  if ((*flags & 0x10) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffbfffff | flags[3];\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005aa4": "update_flags_and_settings_08005aa4",
                "param_1": "flags",
                "uVar1": "tempVar1",
                "uVar2": "tempVar2",
                "iVar3": "counter1",
                "iVar4": "counter2",
                "bVar5": "shouldSetFlag"
            },
            "calling": [
                "FUN_080035b8"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005bb8": {
            "entrypoint": "0x08005bb8",
            "current_name": "calculate_delay_08005bb8",
            "code": "\n\n\nuint calculateDelay_08005bb8(int inputValue)\n\n{\n  uint delay;\n  undefined2 constantValue;\n  undefined4 configValue1;\n  undefined4 configValue2;\n  undefined4 configValue3;\n  undefined4 configValue4;\n  \n  configValue4 = 0x10100f0e;\n  configValue3 = 0xd0c0b0a;\n  configValue2 = 0x9080706;\n  configValue1 = 0x5040302;\n  constantValue = 0x201;\n  if (inputValue == 2) {\n    delay = FUN_08005a48();\n    delay = delay / ((((_DAT_40021004 << 0x10) >> 0x1e) + 1) * 2);\n  }\n  else if (inputValue == 0x10) {\n    if ((_DAT_40021000 & 0x1000000) == 0) {\n      delay = 0;\n    }\n    else {\n      if ((_DAT_40021004 & 0x10000) == 0) {\n        delay = 4000000;\n      }\n      else {\n        delay = 8000000 / *(byte *)((int)&constantValue - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n      }\n      delay = delay * *(byte *)((int)&configValue1 + ((_DAT_40021004 << 10) >> 0x1c));\n      if ((_DAT_40021004 & 0x400000) == 0) {\n        delay = (delay * 2) / 3;\n      }\n    }\n  }\n  else if (inputValue == 1) {\n    if ((_DAT_40021020 & 0x302) == 0x102) {\n      delay = 0x8000;\n    }\n    else if (((_DAT_40021020 & 0x300) == 0x200) && ((_DAT_40021024 & 2) != 0)) {\n      delay = 32000;\n    }\n    else if ((_DAT_40021020 & 0x300) == 0x300) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        delay = 0;\n      }\n      else {\n        delay = 0xf424;\n      }\n    }\n    else {\n      delay = 0;\n    }\n  }\n  else {\n    delay = 0;\n  }\n  return delay;\n}\n\n",
            "renaming": {
                "FUN_08005bb8": "calculate_delay_08005bb8",
                "param_1": "inputValue",
                "uVar1": "delay",
                "local_24": "constantValue",
                "uStack_20": "configValue1",
                "uStack_1c": "configValue2",
                "uStack_18": "configValue3",
                "uStack_14": "configValue4"
            },
            "calling": [
                "FUN_0800376c",
                "FUN_08003e20"
            ],
            "called": [
                "FUN_08005a48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cb4": {
            "entrypoint": "0x08005cb4",
            "current_name": "check_and_initialize_flags_08005cb4",
            "code": "\n\n\nvoid checkAndInitializeFlags_08005cb4(uint **flags)\n\n{\n  if (((**flags & 2) != 0) && (((*flags)[1] & 2) != 0)) {\n    FUN_080073c0();\n    (*flags)[1] = 0xfffffffd;\n  }\n  _DAT_40010414 = 0x20000;\n  *(undefined *)((int)flags + 0x11) = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005cb4": "check_and_initialize_flags_08005cb4",
                "param_1": "flags"
            },
            "calling": [],
            "called": [
                "FUN_080073c0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cec": {
            "entrypoint": "0x08005cec",
            "current_name": "update_configuration_08005cec",
            "code": "\nvoid updateConfiguration_08005cec(int configAddress,uint *paramsArray)\n\n{\n  uint updatedValue1;\n  uint updatedValue2;\n  uint updatedValue3;\n  \n  *(uint *)(configAddress + 0x20) = *(uint *)(configAddress + 0x20) & 0xfffffffe;\n  updatedValue2 = *(uint *)(configAddress + 4);\n  updatedValue3 = *paramsArray;\n  updatedValue1 = *(uint *)(configAddress + 0x20) & 0xfffffffd | paramsArray[2];\n  if (configAddress == 0x40012c00) {\n    updatedValue1 = (updatedValue1 & 0xfffffff7 | paramsArray[3]) & 0xfffffffb;\n    updatedValue2 = updatedValue2 & 0xfffffcff | paramsArray[5] | paramsArray[6];\n  }\n  *(uint *)(configAddress + 4) = updatedValue2;\n  *(uint *)(configAddress + 0x18) = *(uint *)(configAddress + 0x18) & 0xffffff8c | updatedValue3;\n  *(uint *)(configAddress + 0x34) = paramsArray[1];\n  *(uint *)(configAddress + 0x20) = updatedValue1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005cec": "update_configuration_08005cec",
                "param_1": "configAddress",
                "param_2": "paramsArray",
                "uVar1": "updatedValue1",
                "uVar2": "updatedValue2",
                "uVar3": "updatedValue3"
            },
            "calling": [
                "FUN_08006186",
                "FUN_08006128"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005d48": {
            "entrypoint": "0x08005d48",
            "current_name": "update_parameters_08005d48",
            "code": "\nvoid updateParameters_08005d48(int address,uint *values)\n\n{\n  uint updatedValue1;\n  uint updatedValue2;\n  uint updatedValue3;\n  \n  *(uint *)(address + 0x20) = *(uint *)(address + 0x20) & 0xfffffeff;\n  updatedValue2 = *(uint *)(address + 4);\n  updatedValue3 = *values;\n  updatedValue1 = *(uint *)(address + 0x20) & 0xfffffdff | values[2] << 8;\n  if (address == 0x40012c00) {\n    updatedValue1 = (updatedValue1 & 0xfffff7ff | values[3] << 8) & 0xfffffbff;\n    updatedValue2 = updatedValue2 & 0xffffcfff | values[5] << 4 | values[6] << 4;\n  }\n  *(uint *)(address + 4) = updatedValue2;\n  *(uint *)(address + 0x1c) = *(uint *)(address + 0x1c) & 0xffffff8c | updatedValue3;\n  *(uint *)(address + 0x3c) = values[1];\n  *(uint *)(address + 0x20) = updatedValue1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005d48": "update_parameters_08005d48",
                "param_1": "address",
                "param_2": "values",
                "uVar1": "updatedValue1",
                "uVar2": "updatedValue2",
                "uVar3": "updatedValue3"
            },
            "calling": [
                "FUN_08006186",
                "FUN_08006128"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005dac": {
            "entrypoint": "0x08005dac",
            "current_name": "update_params_08005dac",
            "code": "\nvoid updateParams_08005dac(int memoryAddress,int *parameters)\n\n{\n  uint var1;\n  int var2;\n  int var3;\n  \n  *(uint *)(memoryAddress + 0x20) = *(uint *)(memoryAddress + 0x20) & 0xffffefff;\n  var1 = *(uint *)(memoryAddress + 4);\n  var2 = *parameters;\n  var3 = parameters[2];\n  if (memoryAddress == 0x40012c00) {\n    var1 = var1 & 0xffffbfff | parameters[5] << 6;\n  }\n  *(uint *)(memoryAddress + 4) = var1;\n  *(uint *)(memoryAddress + 0x1c) = *(uint *)(memoryAddress + 0x1c) & 0xffff8cff | var2 << 8;\n  *(int *)(memoryAddress + 0x40) = parameters[1];\n  *(uint *)(memoryAddress + 0x20) = *(uint *)(memoryAddress + 0x20) & 0xffffdfff | var3 << 0xc;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005dac": "update_params_08005dac",
                "param_1": "memoryAddress",
                "param_2": "parameters",
                "uVar1": "var1",
                "iVar2": "var2",
                "iVar3": "var3"
            },
            "calling": [
                "FUN_08006186",
                "FUN_08006128"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005df4": {
            "entrypoint": "0x08005df4",
            "current_name": "set_flag_and_update_status_08005df4",
            "code": "\nvoid setFlagAndUpdateStatus_08005df4(uint **paramList)\n\n{\n  uint *currentParam;\n  \n  *(undefined *)((int)paramList + 0x3d) = 2;\n  currentParam = *paramList;\n  if ((paramValue & 0x1111) == 0) {\n    if ((paramValue & 0x444) == 0) {\n      *currentParam = *currentParam & 0xfffffffe;\n    }\n  }\n  FUN_08007710(paramList);\n  *(undefined *)((int)paramList + 0x3d) = 0;\n  *(undefined *)(paramList + 0xf) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005df4": "set_flag_and_update_status_08005df4",
                "param_1": "paramList",
                "puVar1": "currentParam",
                "puVar1[8]": "paramValue"
            },
            "calling": [
                "FUN_080076e0"
            ],
            "called": [
                "FUN_08007710"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005e2e": {
            "entrypoint": "0x08005e2e",
            "current_name": "update_data_and_call_function_08005e2e",
            "code": "\nvoid updateDataAndCallFunction_08005e2e(uint **data)\n\n{\n  uint *pointer1;\n  \n  *(undefined *)((int)data + 0x3d) = 2;\n  pointer1 = *data;\n  if ((pointer1[8] & 0x1111) == 0) {\n    if ((pointer1[8] & 0x444) == 0) {\n      *pointer1 = *pointer1 & 0xfffffffe;\n    }\n  }\n  FUN_08007110(data);\n  *(undefined *)((int)data + 0x3d) = 0;\n  *(undefined *)(data + 0xf) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e2e": "update_data_and_call_function_08005e2e",
                "param_1": "data",
                "puVar1": "pointer1"
            },
            "calling": [
                "FUN_080071e4"
            ],
            "called": [
                "FUN_08007110"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005e68": {
            "entrypoint": "0x08005e68",
            "current_name": "FUNC_08005e68",
            "code": "\nvoid FUNC_08005e68(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e68": "FUNC_08005e68"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005e6a": {
            "entrypoint": "0x08005e6a",
            "current_name": "FUNC_08005e6a",
            "code": "\nvoid FUNC_08005e6a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e6a": "FUNC_08005e6a"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005e6c": {
            "entrypoint": "0x08005e6c",
            "current_name": "FUNC_08005e6c",
            "code": "\nvoid FUNC_08005e6c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e6c": "FUNC_08005e6c"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005e6e": {
            "entrypoint": "0x08005e6e",
            "current_name": "update_flags_and_perform_operations_08005e6e",
            "code": "\nvoid updateFlagsAndPerformOperations_08005e6e(int *param)\n\n{\n  int data;\n  \n  data = *param;\n  if (((*(uint *)(data + 0x10) & 2) != 0) && ((*(uint *)(data + 0xc) & 2) != 0)) {\n    *(undefined4 *)(data + 0x10) = 0xfffffffd;\n    *(undefined *)(param + 7) = 1;\n    if ((*(uint *)(*param + 0x18) & 3) == 0) {\n      FUN_0800771c();\n      FUNC_08005e6a(param);\n    }\n    else {\n      FUNC_08005e68();\n    }\n    *(undefined *)(param + 7) = 0;\n  }\n  data = *param;\n  if (((*(uint *)(data + 0x10) & 4) != 0) && ((*(uint *)(data + 0xc) & 4) != 0)) {\n    *(undefined4 *)(data + 0x10) = 0xfffffffb;\n    *(undefined *)(param + 7) = 2;\n    if ((*(uint *)(*param + 0x18) & 0x300) == 0) {\n      FUN_0800771c(param);\n      FUNC_08005e6a(param);\n    }\n    else {\n      FUNC_08005e68(param);\n    }\n    *(undefined *)(param + 7) = 0;\n  }\n  data = *param;\n  if (((*(uint *)(data + 0x10) & 8) != 0) && ((*(uint *)(data + 0xc) & 8) != 0)) {\n    *(undefined4 *)(data + 0x10) = 0xfffffff7;\n    *(undefined *)(param + 7) = 4;\n    if ((*(uint *)(*param + 0x1c) & 3) == 0) {\n      FUN_0800771c(param);\n      FUNC_08005e6a(param);\n    }\n    else {\n      FUNC_08005e68(param);\n    }\n    *(undefined *)(param + 7) = 0;\n  }\n  data = *param;\n  if (((*(uint *)(data + 0x10) & 0x10) != 0) && ((*(uint *)(data + 0xc) & 0x10) != 0)) {\n    *(undefined4 *)(data + 0x10) = 0xffffffef;\n    *(undefined *)(param + 7) = 8;\n    if ((*(uint *)(*param + 0x1c) & 0x300) == 0) {\n      FUN_0800771c(param);\n      FUNC_08005e6a(param);\n    }\n    else {\n      FUNC_08005e68(param);\n    }\n    *(undefined *)(param + 7) = 0;\n  }\n  data = *param;\n  if (((*(uint *)(data + 0x10) & 1) != 0) && ((*(uint *)(data + 0xc) & 1) != 0)) {\n    *(undefined4 *)(data + 0x10) = 0xfffffffe;\n    FUN_08007736(param);\n  }\n  data = *param;\n  if (((*(uint *)(data + 0x10) & 0x80) != 0) && ((*(uint *)(data + 0xc) & 0x80) != 0)) {\n    *(undefined4 *)(data + 0x10) = 0xffffff7f;\n    FUNC_080064ae(param);\n  }\n  data = *param;\n  if (((*(uint *)(data + 0x10) & 0x40) != 0) && ((*(uint *)(data + 0xc) & 0x40) != 0)) {\n    *(undefined4 *)(data + 0x10) = 0xffffffbf;\n    FUNC_08005e6c(param);\n  }\n  data = *param;\n  if (((*(uint *)(data + 0x10) & 0x20) != 0) && ((*(uint *)(data + 0xc) & 0x20) != 0)) {\n    *(undefined4 *)(data + 0x10) = 0xffffffdf;\n    FUNC_080064ac(param);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e6e": "update_flags_and_perform_operations_08005e6e",
                "param_1": "param",
                "iVar1": "data"
            },
            "calling": [],
            "called": [
                "FUN_0800771c",
                "FUN_08005e6a",
                "FUN_08005e6c",
                "FUN_080064ae",
                "FUN_08005e68",
                "FUN_080064ac",
                "FUN_08007736"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005fe8": {
            "entrypoint": "0x08005fe8",
            "current_name": "update_memory_values_08005fe8",
            "code": "\nvoid updateMemoryValues_08005fe8(uint *memoryAddress,uint *dataValues)\n\n{\n  uint currentValue;\n  \n  currentValue = *memoryAddress;\n  if ((((memoryAddress == (uint *)0x40012c00) || (memoryAddress == (uint *)0x40000000)) ||\n      (memoryAddress == (uint *)0x40000400)) || (memoryAddress == (uint *)0x40000800)) {\n    currentValue = currentValue & 0xffffff8f | dataValues[1];\n  }\n  if (((memoryAddress == (uint *)0x40012c00) || (memoryAddress == (uint *)0x40000000)) ||\n     ((memoryAddress == (uint *)0x40000400 || (memoryAddress == (uint *)0x40000800)))) {\n    currentValue = currentValue & 0xfffffcff | dataValues[3];\n  }\n  *memoryAddress = currentValue & 0xffffff7f | dataValues[5];\n  memoryAddress[0xb] = dataValues[2];\n  memoryAddress[10] = *dataValues;\n  if (memoryAddress == (uint *)0x40012c00) {\n    specialValue = dataValues[4];\n  }\n  memoryAddress[5] = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005fe8": "update_memory_values_08005fe8",
                "param_1": "memoryAddress",
                "param_2": "dataValues",
                "uVar1": "currentValue",
                "uRam40012c30": "specialValue"
            },
            "calling": [
                "FUN_08006092",
                "FUN_08006060"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006060": {
            "entrypoint": "0x08006060",
            "current_name": "check_and_process_data_08006060",
            "code": "\nundefined4 checkAndProcessData_08006060(undefined4 *dataPointer)\n\n{\n  if (dataPointer != (undefined4 *)0x0) {\n    if (*(char *)((int)dataPointer + 0x3d) == '\\0') {\n      *(undefined *)(dataPointer + 0xf) = 0;\n      FUN_08007708();\n    }\n    *(undefined *)((int)dataPointer + 0x3d) = 2;\n    FUN_08005fe8(*dataPointer,dataPointer + 1);\n    *(undefined *)((int)dataPointer + 0x3d) = 1;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08006060": "check_and_process_data_08006060",
                "param_1": "dataPointer"
            },
            "calling": [
                "FUN_08007648"
            ],
            "called": [
                "FUN_08007708",
                "FUN_08005fe8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006092": {
            "entrypoint": "0x08006092",
            "current_name": "update_data_08006092",
            "code": "\nundefined4 updateData_08006092(undefined4 *data)\n\n{\n  if (data != (undefined4 *)0x0) {\n    if (*(char *)((int)data + 0x3d) == '\\0') {\n      *(undefined *)(data + 0xf) = 0;\n      FUN_08006e68();\n    }\n    *(undefined *)((int)data + 0x3d) = 2;\n    FUN_08005fe8(*data,data + 1);\n    *(undefined *)((int)data + 0x3d) = 1;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08006092": "update_data_08006092",
                "param_1": "data"
            },
            "calling": [
                "FUN_08007118"
            ],
            "called": [
                "FUN_08006e68",
                "FUN_08005fe8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080060c4": {
            "entrypoint": "0x080060c4",
            "current_name": "update_param_values_080060c4",
            "code": "\nvoid updateParamValues_080060c4(int baseAddress,int *paramValues)\n\n{\n  uint modifiedValue1;\n  uint modifiedValue2;\n  int newValue;\n  \n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) & 0xffffffef;\n  modifiedValue2 = *(uint *)(baseAddress + 4);\n  newValue = *paramValues;\n  modifiedValue1 = *(uint *)(baseAddress + 0x20) & 0xffffffdf | paramValues[2] << 4;\n  if (baseAddress == 0x40012c00) {\n    modifiedValue1 = (modifiedValue1 & 0xffffff7f | paramValues[3] << 4) & 0xffffffbf;\n    modifiedValue2 = modifiedValue2 & 0xfffff3ff | paramValues[5] << 2 | paramValues[6] << 2;\n  }\n  *(uint *)(baseAddress + 4) = modifiedValue2;\n  *(uint *)(baseAddress + 0x18) = *(uint *)(baseAddress + 0x18) & 0xffff8cff | newValue << 8;\n  *(int *)(baseAddress + 0x38) = paramValues[1];\n  *(uint *)(baseAddress + 0x20) = modifiedValue1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080060c4": "update_param_values_080060c4",
                "param_1": "baseAddress",
                "param_2": "paramValues",
                "uVar1": "modifiedValue1",
                "uVar2": "modifiedValue2",
                "iVar3": "newValue"
            },
            "calling": [
                "FUN_08006186",
                "FUN_08006128"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006128": {
            "entrypoint": "0x08006128",
            "current_name": "execute_function_08006128",
            "code": "\nundefined4 executeFunction_08006128(undefined4 *pointer,undefined4 value1,undefined4 value2)\n\n{\n  if (*(char *)(pointer + 0xf) != '\\x01') {\n    *(undefined *)(pointer + 0xf) = 1;\n    *(undefined *)((int)pointer + 0x3d) = 2;\n    switchStatement {\n    case 0:\n      FUN_08005cec(*pointer);\n      break;\n    case 4:\n      FUN_080060c4(*pointer);\n      break;\n    case 8:\n      FUN_08005d48(*pointer);\n      break;\n    case 0xc:\n      FUN_08005dac(*pointer);\n    }\n    *(undefined *)((int)pointer + 0x3d) = 1;\n    *(undefined *)(pointer + 0xf) = 0;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08006128": "execute_function_08006128",
                "param_1": "pointer",
                "param_2": "value1",
                "param_3": "value2",
                "switch(param_3)": "switchStatement"
            },
            "calling": [
                "FUN_08007648"
            ],
            "called": [
                "FUN_08005d48",
                "FUN_08005dac",
                "FUN_080060c4",
                "FUN_08005cec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006186": {
            "entrypoint": "0x08006186",
            "current_name": "update_settings_08006186",
            "code": "\nundefined4 updateSettings_08006186(int *settings,int data,undefined4 option)\n\n{\n  if (*(char *)(settings + 0xf) != '\\x01') {\n    *(undefined *)(settings + 0xf) = 1;\n    *(undefined *)((int)settings + 0x3d) = 2;\n    switch(option) {\n    case 0:\n      FUN_08005cec(*settings);\n      *(uint *)(*settings + 0x18) = *(uint *)(*settings + 0x18) | 8;\n      *(uint *)(*settings + 0x18) = *(uint *)(*settings + 0x18) & 0xfffffffb;\n      *(uint *)(*settings + 0x18) = *(uint *)(*settings + 0x18) | *(uint *)(data + 0x10);\n      break;\n    case 4:\n      FUN_080060c4(*settings);\n      *(uint *)(*settings + 0x18) = *(uint *)(*settings + 0x18) | 0x800;\n      *(uint *)(*settings + 0x18) = *(uint *)(*settings + 0x18) & 0xfffffbff;\n      *(uint *)(*settings + 0x18) = *(uint *)(*settings + 0x18) | *(int *)(data + 0x10) << 8;\n      break;\n    case 8:\n      FUN_08005d48(*settings);\n      *(uint *)(*settings + 0x1c) = *(uint *)(*settings + 0x1c) | 8;\n      *(uint *)(*settings + 0x1c) = *(uint *)(*settings + 0x1c) & 0xfffffffb;\n      *(uint *)(*settings + 0x1c) = *(uint *)(*settings + 0x1c) | *(uint *)(data + 0x10);\n      break;\n    case 0xc:\n      FUN_08005dac(*settings);\n      *(uint *)(*settings + 0x1c) = *(uint *)(*settings + 0x1c) | 0x800;\n      *(uint *)(*settings + 0x1c) = *(uint *)(*settings + 0x1c) & 0xfffffbff;\n      *(uint *)(*settings + 0x1c) = *(uint *)(*settings + 0x1c) | *(int *)(data + 0x10) << 8;\n    }\n    *(undefined *)((int)settings + 0x3d) = 1;\n    *(undefined *)(settings + 0xf) = 0;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08006186": "update_settings_08006186",
                "param_1": "settings",
                "param_2": "data",
                "param_3": "option"
            },
            "calling": [
                "FUN_08007118"
            ],
            "called": [
                "FUN_08005d48",
                "FUN_08005dac",
                "FUN_080060c4",
                "FUN_08005cec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006262": {
            "entrypoint": "0x08006262",
            "current_name": "update_bitfield_08006262",
            "code": "\nvoid updateBitfield_08006262(int dataPointer,uint bitIndex,int bitValue)\n\n{\n  *(uint *)(dataPointer + 0x20) = *(uint *)(dataPointer + 0x20) & ~(1 << (bitIndex & 0xff));\n  *(uint *)(dataPointer + 0x20) = *(uint *)(dataPointer + 0x20) | bitValue << (bitIndex & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006262": "update_bitfield_08006262",
                "param_1": "dataPointer",
                "param_2": "bitIndex",
                "param_3": "bitValue"
            },
            "calling": [
                "FUN_080063c0",
                "FUN_08006280",
                "FUN_080062f4",
                "FUN_08006390"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006280": {
            "entrypoint": "0x08006280",
            "current_name": "update_permissions_08006280",
            "code": "\nundefined4 updatePermissions_08006280(uint **data,undefined4 permission)\n\n{\n  switch(permission) {\n  case 0:\n    (*data)[3] = (*data)[3] | 2;\n    break;\n  case 4:\n    (*data)[3] = (*data)[3] | 4;\n    break;\n  case 8:\n    (*data)[3] = (*data)[3] | 8;\n    break;\n  case 0xc:\n    (*data)[3] = (*data)[3] | 0x10;\n  }\n  FUN_08006262(*data,permission,1);\n  if (*data == (uint *)0x40012c00) {\n    someValue = someValue | 0x8000;\n  }\n  **data = **data | 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006280": "update_permissions_08006280",
                "param_1": "data",
                "param_2": "permission",
                "uRam40012c44": "someValue"
            },
            "calling": [
                "FUN_08007648"
            ],
            "called": [
                "FUN_08006262"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080062f4": {
            "entrypoint": "0x080062f4",
            "current_name": "update_permissions_080062f4",
            "code": "\nundefined4 updatePermissions_080062f4(uint **data,undefined4 permission)\n\n{\n  uint *ptr;\n  \n  switch(permission) {\n  case 0:\n    (*data)[3] = (*data)[3] & 0xfffffffd;\n    break;\n  case 4:\n    (*data)[3] = (*data)[3] & 0xfffffffb;\n    break;\n  case 8:\n    (*data)[3] = (*data)[3] & 0xfffffff7;\n    break;\n  case 0xc:\n    (*data)[3] = (*data)[3] & 0xffffffef;\n  }\n  FUN_08006262(*data,permission,0);\n  if (((*data == (uint *)0x40012c00) && ((uRam40012c20 & 0x1111) == 0)) &&\n     ((uRam40012c20 & 0x444) == 0)) {\n    uRam40012c44 = uRam40012c44 & 0xffff7fff;\n  }\n  ptr = *data;\n  if (((ptr[8] & 0x1111) == 0) && ((ptr[8] & 0x444) == 0)) {\n    *ptr = *ptr & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080062f4": "update_permissions_080062f4",
                "param_1": "data",
                "param_2": "permission",
                "puVar1": "ptr"
            },
            "calling": [
                "FUN_080076e0"
            ],
            "called": [
                "FUN_08006262"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006390": {
            "entrypoint": "0x08006390",
            "current_name": "set_flags_and_permissions_08006390",
            "code": "\nundefined4 setFlagsAndPermissions_08006390(uint **ptrToUint,undefined4 value)\n\n{\n  FUN_08006262(*ptrToUint,value,1);\n  if (*ptrToUint == (uint *)0x40012c00) {\n    flagVariable = flagVariable | 0x8000;\n  }\n  **ptrToUint = **ptrToUint | 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006390": "set_flags_and_permissions_08006390",
                "param_1": "ptrToUint",
                "param_2": "value",
                "uRam40012c44": "flagVariable"
            },
            "calling": [
                "FUN_08007118"
            ],
            "called": [
                "FUN_08006262"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080063c0": {
            "entrypoint": "0x080063c0",
            "current_name": "update_memory_flags_080063c0",
            "code": "\nundefined4 updateMemoryFlags_080063c0(uint **memoryPointer,undefined4 dataValue)\n\n{\n  uint *memoryPointerTemp;\n  \n  FUN_08006262(*memoryPointer,dataValue,0);\n  if (((*memoryPointer == (uint *)0x40012c00) && ((constant2 & 0x1111) == 0)) &&\n     ((constant2 & 0x444) == 0)) {\n    memoryFlag = memoryFlag & 0xffff7fff;\n  }\n  memoryPointerTemp = *memoryPointer;\n  if (((memoryPointerTemp[8] & 0x1111) == 0) && ((memoryPointerTemp[8] & 0x444) == 0)) {\n    *memoryPointerTemp = *memoryPointerTemp & 0xfffffffe;\n  }\n  *(undefined *)((int)memoryPointer + 0x3d) = 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080063c0": "update_memory_flags_080063c0",
                "param_1": "memoryPointer",
                "param_2": "dataValue",
                "puVar1": "memoryPointerTemp",
                "uRam40012c20": "constant2",
                "uRam40012c44": "memoryFlag"
            },
            "calling": [
                "FUN_080071e4"
            ],
            "called": [
                "FUN_08006262"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006420": {
            "entrypoint": "0x08006420",
            "current_name": "update_bitwise_value_08006420",
            "code": "\nvoid updateBitwiseValue_08006420(int dataPtr,uint bitOffset,int bitValue)\n\n{\n  *(uint *)(dataPtr + 0x20) = *(uint *)(dataPtr + 0x20) & ~(4 << (bitOffset & 0xff));\n  *(uint *)(dataPtr + 0x20) = *(uint *)(dataPtr + 0x20) | bitValue << (bitOffset & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006420": "update_bitwise_value_08006420",
                "param_1": "dataPtr",
                "param_2": "bitOffset",
                "param_3": "bitValue"
            },
            "calling": [
                "FUN_0800643c",
                "FUN_08006460"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800643c": {
            "entrypoint": "0x0800643c",
            "current_name": "toggle_bit_and_set_flag_0800643c",
            "code": "\nundefined4 toggleBitAndSetFlag_0800643c(uint **pointerToPointer,undefined4 value)\n\n{\n  FUN_08006420(*pointerToPointer,value,4);\n  (*pointerToPointer)[0x11] = (*pointerToPointer)[0x11] | 0x8000;\n  **pointerToPointer = **pointerToPointer | 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800643c": "toggle_bit_and_set_flag_0800643c",
                "param_1": "pointerToPointer",
                "param_2": "value"
            },
            "calling": [
                "FUN_08007118"
            ],
            "called": [
                "FUN_08006420"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006460": {
            "entrypoint": "0x08006460",
            "current_name": "clear_flags_and_update_values_08006460",
            "code": "\nundefined4 clearFlagsAndUpdateValues_08006460(uint **pointerToValues,undefined4 value)\n\n{\n  uint *valuePointer;\n  \n  FUN_08006420(*pointerToValues,value,0);\n  valuePointer = *pointerToValues;\n  if (((valuePointer[8] & 0x1111) == 0) && ((valuePointer[8] & 0x444) == 0)) {\n    valuePointer[0x11] = valuePointer[0x11] & 0xffff7fff;\n  }\n  valuePointer = *pointerToValues;\n  if (((valuePointer[8] & 0x1111) == 0) && ((valuePointer[8] & 0x444) == 0)) {\n    *valuePointer = *valuePointer & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006460": "clear_flags_and_update_values_08006460",
                "param_1": "pointerToValues",
                "param_2": "value",
                "puVar1": "valuePointer"
            },
            "calling": [
                "FUN_080071e4"
            ],
            "called": [
                "FUN_08006420"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080064ac": {
            "entrypoint": "0x080064ac",
            "current_name": "FUNC_080064ac",
            "code": "\nvoid FUNC_080064ac(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080064ac": "FUNC_080064ac"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080064ae": {
            "entrypoint": "0x080064ae",
            "current_name": "FUNC_080064ae",
            "code": "\nvoid FUNC_080064ae(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080064ae": "FUNC_080064ae"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080064b0": {
            "entrypoint": "0x080064b0",
            "current_name": "clear_bitwise_flags_080064b0",
            "code": "\nvoid clearBitwiseFlags_080064b0(int *pointer)\n\n{\n  *(uint *)(*pointer + 0xc) = *(uint *)(*pointer + 0xc) & 0xfffffedf;\n  *(uint *)(*pointer + 0x14) = *(uint *)(*pointer + 0x14) & 0xfffffffe;\n  *(undefined *)((int)pointer + 0x3a) = 0x20;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080064b0": "clear_bitwise_flags_080064b0",
                "param_1": "pointer"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080064cc": {
            "entrypoint": "0x080064cc",
            "current_name": "process_data_080064cc",
            "code": "\nundefined4 processData_080064cc(int *data)\n\n{\n  short count;\n  byte *bytePtr;\n  \n  if (*(char *)((int)data + 0x39) != '!') {\n    return 2;\n  }\n  if (data[2] == 0x1000) {\n    *(uint *)(*data + 4) = *(ushort *)data[8] & 0x1ff;\n    if (data[4] == 0) {\n      data[8] = data[8] + 2;\n    }\n    else {\n      data[8] = data[8] + 1;\n    }\n  }\n  else {\n    bytePtr = (byte *)data[8];\n    data[8] = (int)(bytePtr + 1);\n    *(uint *)(*data + 4) = (uint)*bytePtr;\n  }\n  count = *(short *)((int)data + 0x26) + -1;\n  *(short *)((int)data + 0x26) = count;\n  if (count == 0) {\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xffffff7f;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) | 0x40;\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080064cc": "process_data_080064cc",
                "param_1": "data",
                "sVar1": "count",
                "pbVar2": "bytePtr"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006538": {
            "entrypoint": "0x08006538",
            "current_name": "calculate_score_08006538",
            "code": "\nvoid calculateScore_08006538(int *parameters)\n\n{\n  int result1;\n  int result2;\n  int result3;\n  int result4;\n  int result5;\n  int result6;\n  int result7;\n  int result8;\n  int result9;\n  int result10;\n  \n  *(uint *)(*parameters + 0x10) = *(uint *)(*parameters + 0x10) & 0xffffcfff | parameters[3];\n  *(uint *)(*parameters + 0xc) =\n       parameters[2] | parameters[4] | parameters[5] | *(uint *)(*parameters + 0xc) & 0xffffe9f3;\n  *(uint *)(*parameters + 0x14) = *(uint *)(*parameters + 0x14) & 0xfffffcff | parameters[6];\n  result10 = *parameters;\n  if (result10 != 0x40013800) {\n    result1 = FUN_08005a28();\n    result6 = parameters[1];\n    result2 = FUN_08005a28();\n    result7 = parameters[1];\n    result3 = FUN_08005a28();\n    result8 = parameters[1];\n    result4 = FUN_08005a28();\n    result9 = parameters[1];\n    result5 = FUN_08005a28();\n    *(uint *)(result10 + 8) =\n         ((uint)((int)((ulonglong)\n                       (((uint)(result4 * 0x19) / (uint)(result9 << 2) +\n                        (int)(((ulonglong)(uint)(result5 * 0x19) / (ulonglong)(uint)(parameters[1] << 2))\n                             / 100) * -100) * 0x10 + 0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n         ((((uint)(result2 * 0x19) / (uint)(result7 << 2) +\n           (int)(((ulonglong)(uint)(result3 * 0x19) / (ulonglong)(uint)(result8 << 2)) / 100) * -100) *\n           0x10 + 0x32) / 100 & 0xf0) +\n         (int)(((ulonglong)(uint)(result1 * 0x19) / (ulonglong)(uint)(result6 << 2)) / 100) * 0x10;\n    return;\n  }\n  result10 = FUN_08005a48();\n  result5 = parameters[1];\n  result1 = FUN_08005a48();\n  result6 = parameters[1];\n  result2 = FUN_08005a48();\n  result7 = parameters[1];\n  result3 = FUN_08005a48();\n  result8 = parameters[1];\n  result4 = FUN_08005a48();\n  iRam40013808 = ((uint)((int)((ulonglong)\n                               (((uint)(result3 * 0x19) / (uint)(result8 << 2) +\n                                (int)(((ulonglong)(uint)(result4 * 0x19) /\n                                      (ulonglong)(uint)(parameters[1] << 2)) / 100) * -100) * 0x10 +\n                               0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n                 ((((uint)(result1 * 0x19) / (uint)(result6 << 2) +\n                   (int)(((ulonglong)(uint)(result2 * 0x19) / (ulonglong)(uint)(result7 << 2)) / 100) *\n                   -100) * 0x10 + 0x32) / 100 & 0xf0) +\n                 (int)(((ulonglong)(uint)(result10 * 0x19) / (ulonglong)(uint)(result5 << 2)) / 100) *\n                 0x10;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006538": "calculate_score_08006538",
                "param_1": "parameters",
                "iVar1": "result1",
                "iVar2": "result2",
                "iVar3": "result3",
                "iVar4": "result4",
                "iVar5": "result5",
                "iVar6": "result6",
                "iVar7": "result7",
                "iVar8": "result8",
                "iVar9": "result9",
                "iVar10": "result10"
            },
            "calling": [
                "FUN_0800674e"
            ],
            "called": [
                "FUN_08005a28",
                "FUN_08005a48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080066e8": {
            "entrypoint": "0x080066e8",
            "current_name": "check_conditions_080066e8",
            "code": "\nundefined4 checkConditions_080066e8(uint **pointerToPointer,uint bitMask,uint checkResult,int comparisonValue,uint maxDifference)\n\n{\n  int returnValue;\n  \n  do {\n    if (((bitMask & ~**pointerToPointer) == 0) != checkResult) {\n      return 0;\n    }\n  } while ((maxDifference == 0xffffffff) ||\n          ((maxDifference != 0 && (returnValue = FUN_08003760(), (uint)(returnValue - comparisonValue) <= maxDifference))));\n  (*pointerToPointer)[3] = (*pointerToPointer)[3] & 0xfffffe5f;\n  (*pointerToPointer)[5] = (*pointerToPointer)[5] & 0xfffffffe;\n  *(undefined *)((int)pointerToPointer + 0x39) = 0x20;\n  *(undefined *)((int)pointerToPointer + 0x3a) = 0x20;\n  *(undefined *)(pointerToPointer + 0xe) = 0;\n  return 3;\n}\n\n",
            "renaming": {
                "FUN_080066e8": "check_conditions_080066e8",
                "param_1": "pointerToPointer",
                "param_2": "bitMask",
                "param_3": "checkResult",
                "param_4": "comparisonValue",
                "param_5": "maxDifference",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_080067ac"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800674c": {
            "entrypoint": "0x0800674c",
            "current_name": "FUNC_0800674c",
            "code": "\nvoid FUNC_0800674c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800674c": "FUNC_0800674c"
            },
            "calling": [
                "FUN_0800674e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800674e": {
            "entrypoint": "0x0800674e",
            "current_name": "initialize_data_0800674e",
            "code": "\nundefined4 initializeData_0800674e(int *dataPointer)\n\n{\n  if (dataPointer != (int *)0x0) {\n    if (*(char *)((int)dataPointer + 0x39) == '\\0') {\n      *(undefined *)(dataPointer + 0xe) = 0;\n      FUNC_0800674c();\n    }\n    *(undefined *)((int)dataPointer + 0x39) = 0x24;\n    *(uint *)(*dataPointer + 0xc) = *(uint *)(*dataPointer + 0xc) & 0xffffdfff;\n    FUN_08006538(dataPointer);\n    *(uint *)(*dataPointer + 0x10) = *(uint *)(*dataPointer + 0x10) & 0xffffb7ff;\n    *(uint *)(*dataPointer + 0x14) = *(uint *)(*dataPointer + 0x14) & 0xffffffd5;\n    *(uint *)(*dataPointer + 0xc) = *(uint *)(*dataPointer + 0xc) | 0x2000;\n    counter = 0;\n    *(undefined *)((int)dataPointer + 0x39) = 0x20;\n    *(undefined *)((int)dataPointer + 0x3a) = 0x20;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800674e": "initialize_data_0800674e",
                "param_1": "dataPointer",
                "param_1[0xf]": "counter"
            },
            "calling": [
                "FUN_08008078"
            ],
            "called": [
                "FUN_0800674c",
                "FUN_08006538"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080067ac": {
            "entrypoint": "0x080067ac",
            "current_name": "process_data_080067ac",
            "code": "\nundefined4 process_data_080067ac(int *data_ptr,ushort *char_ptr,int char_count,undefined4 param_4)\n\n{\n  int result;\n  undefined4 status;\n  \n  if (*(char *)((int)data_ptr + 0x39) == ' ') {\n    if (char_ptr == (ushort *)0x0) {\n      status = 1;\n    }\n    else if (char_count == 0) {\n      status = 1;\n    }\n    else if (*(char *)(data_ptr + 0xe) == '\\x01') {\n      status = 2;\n    }\n    else {\n      *(undefined *)(data_ptr + 0xe) = 1;\n      data_ptr[0xf] = 0;\n      *(undefined *)((int)data_ptr + 0x39) = 0x21;\n      status = FUN_08003760();\n      *(short *)(data_ptr + 9) = (short)char_count;\n      *(short *)((int)data_ptr + 0x26) = (short)char_count;\n      while (*(short *)((int)data_ptr + 0x26) != 0) {\n        *(short *)((int)data_ptr + 0x26) = *(short *)((int)data_ptr + 0x26) + -1;\n        if (data_ptr[2] == 0x1000) {\n          result = FUN_080066e8(data_ptr,0x80,0,status,param_4);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*data_ptr + 4) = *char_ptr & 0x1ff;\n          if (data_ptr[4] == 0) {\n            char_ptr = char_ptr + 1;\n          }\n          else {\n            char_ptr = (ushort *)((int)char_ptr + 1);\n          }\n        }\n        else {\n          result = FUN_080066e8(data_ptr,0x80,0,status,param_4);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*data_ptr + 4) = (uint)*(byte *)char_ptr;\n          char_ptr = (ushort *)((int)char_ptr + 1);\n        }\n      }\n      result = FUN_080066e8(data_ptr,0x40,0,status,param_4);\n      if (result == 0) {\n        *(undefined *)((int)data_ptr + 0x39) = 0x20;\n        *(undefined *)(data_ptr + 0xe) = 0;\n        status = 0;\n      }\n      else {\n        status = 3;\n      }\n    }\n  }\n  else {\n    status = 2;\n  }\n  return status;\n}\n\n",
            "renaming": {
                "FUN_080067ac": "process_data_080067ac",
                "param_1": "data_ptr",
                "param_2": "char_ptr",
                "param_3": "char_count",
                "iVar1": "result",
                "uVar2": "status"
            },
            "calling": [
                "FUN_08008500"
            ],
            "called": [
                "FUN_080066e8",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800688e": {
            "entrypoint": "0x0800688e",
            "current_name": "update_parameters_0800688e",
            "code": "\nundefined4 updateParameters_0800688e(int *paramArray,int value1,int value2)\n\n{\n  if (*(char *)((int)paramArray + 0x39) != ' ') {\n    return 2;\n  }\n  if (value1 == 0) {\n    return 1;\n  }\n  if (value2 == 0) {\n    return 1;\n  }\n  if (*(char *)(paramArray + 0xe) != '\\x01') {\n    paramArray[8] = value1;\n    *(short *)(paramArray + 9) = (short)value2;\n    *(short *)((int)paramArray + 0x26) = (short)value2;\n    paramArray[0xf] = 0;\n    *(undefined *)((int)paramArray + 0x39) = 0x21;\n    *(undefined *)(paramArray + 0xe) = 0;\n    *(uint *)(*paramArray + 0xc) = *(uint *)(*paramArray + 0xc) | 0x80;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_0800688e": "update_parameters_0800688e",
                "param_1": "paramArray",
                "param_2": "value1",
                "param_3": "value2",
                "param_1[8]": "paramArray[8]",
                "param_1[0xf]": "paramArray[0xf]"
            },
            "calling": [
                "FUN_08008694",
                "FUN_08008730"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080068d6": {
            "entrypoint": "0x080068d6",
            "current_name": "validate_input_080068d6",
            "code": "\nundefined4 validate_input_080068d6(int *input_array,int int_value,int short_value)\n\n{\n  if (*(char *)((int)input_array + 0x3a) != ' ') {\n    return 2;\n  }\n  if (int_value == 0) {\n    return 1;\n  }\n  if (short_value == 0) {\n    return 1;\n  }\n  if (*(char *)(input_array + 0xe) != '\\x01') {\n    input_array[10] = int_value;\n    *(short *)(input_array + 0xb) = (short)short_value;\n    *(short *)((int)input_array + 0x2e) = (short)short_value;\n    input_array[15] = 0;\n    *(undefined *)((int)input_array + 0x3a) = 0x22;\n    *(undefined *)(input_array + 0xe) = 0;\n    *(uint *)(*input_array + 0xc) = *(uint *)(*input_array + 0xc) | 0x100;\n    *(uint *)(*input_array + 0x14) = *(uint *)(*input_array + 0x14) | 1;\n    *(uint *)(*input_array + 0xc) = *(uint *)(*input_array + 0xc) | 0x20;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_080068d6": "validate_input_080068d6",
                "param_1": "input_array",
                "param_2": "int_value",
                "param_3": "short_value",
                "param_1[10]": "input_array[10]",
                "param_1[0xf]": "input_array[15]"
            },
            "calling": [
                "FUN_08008600",
                "FUN_0800863c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006932": {
            "entrypoint": "0x08006932",
            "current_name": "update_memory_and_call_function_08006932",
            "code": "\nundefined4 updateMemoryAndCallFunction_08006932(int *memoryAddress)\n\n{\n  *(uint *)(*memoryAddress + 0xc) = *(uint *)(*memoryAddress + 0xc) & 0xffffffbf;\n  *(undefined *)((int)memoryAddress + 0x39) = 0x20;\n  FUN_08008730();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006932": "update_memory_and_call_function_08006932",
                "param_1": "memoryAddress"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [
                "FUN_08008730"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800694c": {
            "entrypoint": "0x0800694c",
            "current_name": "process_string_0800694c",
            "code": "\nundefined4 process_string_0800694c(int *input)\n\n{\n  byte *output_byte;\n  short remaining_elements;\n  undefined *output_pointer;\n  \n  if (*(char *)((int)input + 0x3a) != '\\\"') {\n    return 2;\n  }\n  if (input[2] == 0x1000) {\n    if (input[4] == 0) {\n      *(ushort *)input[10] = (ushort)((uint)(*(int *)(*input + 4) << 0x17) >> 0x17);\n      input[10] = input[10] + 2;\n    }\n    else {\n      *(ushort *)input[10] = (ushort)*(undefined4 *)(*input + 4) & 0xff;\n      input[10] = input[10] + 1;\n    }\n  }\n  else if (input[4] == 0) {\n    output_pointer = (undefined *)input[10];\n    input[10] = (int)(output_pointer + 1);\n    *output_pointer = (char)*(undefined4 *)(*input + 4);\n  }\n  else {\n    output_byte = (byte *)input[10];\n    input[10] = (int)(output_byte + 1);\n    *output_byte = (byte)*(undefined4 *)(*input + 4) & 0x7f;\n  }\n  remaining_elements = *(short *)((int)input + 0x2e) + -1;\n  *(short *)((int)input + 0x2e) = remaining_elements;\n  if (remaining_elements != 0) {\n    return 0;\n  }\n  *(uint *)(*input + 0xc) = *(uint *)(*input + 0xc) & 0xffffffdf;\n  *(uint *)(*input + 0xc) = *(uint *)(*input + 0xc) & 0xfffffeff;\n  *(uint *)(*input + 0x14) = *(uint *)(*input + 0x14) & 0xfffffffe;\n  *(undefined *)((int)input + 0x3a) = 0x20;\n  FUN_0800870c();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800694c": "process_string_0800694c",
                "param_1": "input",
                "pbVar1": "output_byte",
                "sVar2": "remaining_elements",
                "puVar3": "output_pointer"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [
                "FUN_0800870c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080069ec": {
            "entrypoint": "0x080069ec",
            "current_name": "process_flags_080069ec",
            "code": "\nvoid processFlags_080069ec(uint **param)\n\n{\n  int var1;\n  uint var2;\n  uint *var3;\n  uint var4;\n  uint var5;\n  \n  var3 = *param;\n  var5 = *var3;\n  var2 = var3[3];\n  if ((((var5 & 0xf) == 0) && ((var5 & 0x20) != 0)) && ((var2 & 0x20) != 0)) {\n    FUN_0800694c(param);\n    return;\n  }\n  if (((var5 & 0xf) == 0) || ((var4 = var3[5] & 1, var4 == 0 && ((var2 & 0x120) == 0)))) {\n    if (((var5 & 0x80) != 0) && ((var2 & 0x80) != 0)) {\n      FUN_080064cc(param);\n      return;\n    }\n    if (((var5 & 0x40) != 0) && ((var2 & 0x40) != 0)) {\n      FUN_08006932(param);\n    }\n  }\n  else {\n    if (((var5 & 1) != 0) && ((var2 & 0x100) != 0)) {\n      param[0xf] = (uint *)((uint)param[0xf] | 1);\n    }\n    if (((var5 & 4) != 0) && (var4 != 0)) {\n      param[0xf] = (uint *)((uint)param[0xf] | 2);\n    }\n    if (((var5 & 2) != 0) && (var4 != 0)) {\n      param[0xf] = (uint *)((uint)param[0xf] | 4);\n    }\n    if (((var5 & 8) != 0) && (var4 != 0)) {\n      param[0xf] = (uint *)((uint)param[0xf] | 8);\n    }\n    if (param[0xf] != (uint *)0x0) {\n      if (((var5 & 0x20) != 0) && ((var2 & 0x20) != 0)) {\n        FUN_0800694c(param);\n      }\n      if ((((uint)param[0xf] & 8) == 0) && (((*param)[5] & 0x40) == 0)) {\n        FUNC_0800877c(param);\n        param[0xf] = (uint *)0x0;\n        return;\n      }\n      FUN_080064b0(param);\n      var3 = *param;\n      if ((var3[5] & 0x40) == 0) {\n        FUNC_0800877c(param);\n        return;\n      }\n      var3[5] = var3[5] & 0xffffffbf;\n      if (param[0xd] == (uint *)0x0) {\n        FUNC_0800877c(param);\n        return;\n      }\n      param[0xd][0xd] = (uint)&LAB_08006b0c_1;\n      var1 = FUN_08004050(param[0xd]);\n      if (var1 != 0) {\n        (*(code *)param[0xd][0xd])();\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080069ec": "process_flags_080069ec",
                "param_1": "param",
                "iVar1": "var1",
                "uVar2": "var2",
                "puVar3": "var3",
                "uVar4": "var4",
                "uVar5": "var5"
            },
            "calling": [],
            "called": [
                "FUN_0800877c",
                "FUN_080064b0",
                "FUN_08004050",
                "FUN_08006932",
                "FUN_0800694c",
                "FUN_080064cc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b1c": {
            "entrypoint": "0x08006b1c",
            "current_name": "combine_bytes_08006b1c",
            "code": "\nbyte combineBytes_08006b1c(int input)\n\n{\n  return *(byte *)(input + 0x3a) | *(byte *)(input + 0x39);\n}\n\n",
            "renaming": {
                "FUN_08006b1c": "combine_bytes_08006b1c",
                "param_1": "input"
            },
            "calling": [
                "FUN_080085b8",
                "FUN_080085dc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b28": {
            "entrypoint": "0x08006b28",
            "current_name": "check_bit_08006b28",
            "code": "\nuint check_bit_08006b28(uint value,int address)\n\n{\n  return *(uint *)(address + ((value << 0x18) >> 0x1c) * 4) >> (value & 0xf) & 1;\n}\n\n",
            "renaming": {
                "FUN_08006b28": "check_bit_08006b28",
                "param_1": "value",
                "param_2": "address"
            },
            "calling": [
                "FUN_08008990",
                "FUN_08008a24",
                "FUN_080088e0",
                "FUN_08008a6c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b3e": {
            "entrypoint": "0x08006b3e",
            "current_name": "set_bit_in_memory_08006b3e",
            "code": "\nvoid setBitInMemory_08006b3e(uint value,int array)\n\n{\n  uint shiftedIndex;\n  \n  shiftedIndex = (value << 0x18) >> 0x1c;\n  *(uint *)(array + shiftedIndex * 4) = *(uint *)(array + shiftedIndex * 4) | 1 << (value & 0xf);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006b3e": "set_bit_in_memory_08006b3e",
                "param_1": "value",
                "param_2": "array",
                "uVar1": "shiftedIndex"
            },
            "calling": [
                "FUN_08008990",
                "FUN_080088e0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b5c": {
            "entrypoint": "0x08006b5c",
            "current_name": "update_bit_08006b5c",
            "code": "\nvoid updateBit_08006b5c(uint bitIndex,int arrayAddress)\n\n{\n  uint shiftedIndex;\n  \n  shiftedIndex = (bitIndex << 0x18) >> 0x1c;\n  *(uint *)(arrayAddress + shiftedIndex * 4) = *(uint *)(arrayAddress + shiftedIndex * 4) & ~(1 << (bitIndex & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006b5c": "update_bit_08006b5c",
                "param_1": "bitIndex",
                "param_2": "arrayAddress",
                "uVar1": "shiftedIndex"
            },
            "calling": [
                "FUN_08008990"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b7c": {
            "entrypoint": "0x08006b7c",
            "current_name": "get_memory_address_08006b7c",
            "code": "\nundefined4 getMemoryAddress_08006b7c(undefined4 index)\n\n{\n  switch(index) {\n  case 0:\n    return 0x40010800;\n  case 1:\n    return 0x40010c00;\n  case 2:\n    return 0x40011000;\n  case 3:\n    return 0x40011400;\n  case 4:\n    return 0x40011800;\n  default:\n    return 0;\n  }\n}\n\n",
            "renaming": {
                "FUN_08006b7c": "get_memory_address_08006b7c",
                "param_1": "index"
            },
            "calling": [
                "FUN_08008a24",
                "FUN_08008a6c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006bb8": {
            "entrypoint": "0x08006bb8",
            "current_name": "update_registers_08006bb8",
            "code": "\n\n\nundefined4 update_registers_08006bb8(undefined4 input_value)\n\n{\n  undefined4 output_address;\n  \n  switch(input_value) {\n  case 0:\n    _DAT_40021018 = _DAT_40021018 | 4;\n    output_address = 0x40010800;\n    break;\n  case 1:\n    _DAT_40021018 = _DAT_40021018 | 8;\n    output_address = 0x40010c00;\n    break;\n  case 2:\n    _DAT_40021018 = _DAT_40021018 | 0x10;\n    output_address = 0x40011000;\n    break;\n  case 3:\n    _DAT_40021018 = _DAT_40021018 | 0x20;\n    output_address = 0x40011400;\n    break;\n  case 4:\n    _DAT_40021018 = _DAT_40021018 | 0x40;\n    output_address = 0x40011800;\n    break;\n  default:\n    output_address = 0;\n  }\n  return output_address;\n}\n\n",
            "renaming": {
                "FUN_08006bb8": "update_registers_08006bb8",
                "param_1": "input_value",
                "uVar1": "output_address"
            },
            "calling": [
                "FUN_08006ca8",
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08006e68",
                "FUN_08007258"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c60": {
            "entrypoint": "0x08006c60",
            "current_name": "calculate_shifted_value_08006c60",
            "code": "\nuint calculateShiftedValue_08006c60(undefined4 inputParam1,undefined4 inputParam2,undefined4 inputParam3,undefined4 inputParam4)\n\n{\n  int result;\n  uint shiftedValue;\n  \n  result = FUN_08007376(inputParam1,&DAT_0800a5b8,inputParam3,inputParam4,inputParam4);\n  shiftedValue = (uint)(result << 0xc) >> 0x1b;\n  if (0x10 < shiftedValue - 1) {\n    shiftedValue = 0;\n  }\n  return shiftedValue;\n}\n\n",
            "renaming": {
                "FUN_08006c60": "calculate_shifted_value_08006c60",
                "param_1": "inputParam1",
                "param_2": "inputParam2",
                "param_3": "inputParam3",
                "param_4": "inputParam4",
                "iVar1": "result",
                "uVar2": "shiftedValue"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08007376"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c7c": {
            "entrypoint": "0x08006c7c",
            "current_name": "get_output_value_08006c7c",
            "code": "\nundefined4 get_output_value_08006c7c(undefined4 input_param,undefined4 unused_param,undefined4 data_param,undefined4 size_param)\n\n{\n  int result;\n  uint shifted_result;\n  \n  result = FUN_08007376(input_param,&DAT_0800a6cc,data_param,size_param,size_param);\n  shifted_result = (uint)(result << 0xc) >> 0x1b;\n  if (shifted_result == 3) {\n    return 8;\n  }\n  if (shifted_result != 4) {\n    if (shifted_result != 2) {\n      return 0;\n    }\n    return 4;\n  }\n  return 0xc;\n}\n\n",
            "renaming": {
                "FUN_08006c7c": "get_output_value_08006c7c",
                "param_1": "input_param",
                "param_2": "unused_param",
                "param_3": "data_param",
                "param_4": "size_param",
                "iVar1": "result",
                "uVar2": "shifted_result"
            },
            "calling": [
                "FUN_080071e4",
                "FUN_08007118"
            ],
            "called": [
                "FUN_08007376"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ca8": {
            "entrypoint": "0x08006ca8",
            "current_name": "update_data_and_call_function_08006ca8",
            "code": "\n\n\nvoid updateDataAndCallFunction_08006ca8(int *dataPointer,undefined4 paramValue)\n\n{\n  undefined4 returnValue;\n  uint updatedValue;\n  int dataValue;\n  uint bitMask;\n  undefined4 constant1;\n  undefined4 constant2;\n  \n  dataValue = *dataPointer;\n  if (dataValue == 0x40012400) {\n    updatedValue = _DAT_40021018 | 0x200;\n    dataValue = 0x200;\n    _DAT_40021018 = updatedValue;\n  }\n  else {\n    updatedValue = 0x40012800;\n    if (dataValue == 0x40012800) {\n      updatedValue = _DAT_40021018 | 0x400;\n      dataValue = 0x400;\n      _DAT_40021018 = updatedValue;\n    }\n  }\n  returnValue = FUN_08006bb8((uint)((int)(char)DAT_20000014 << 0x18) >> 0x1c,paramValue,updatedValue,dataValue);\n  bitMask = 1 << (DAT_20000014 & 0xf) & 0xffff;\n  constant1 = 3;\n  constant2 = 0;\n  FUN_080040e8(returnValue,&bitMask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006ca8": "update_data_and_call_function_08006ca8",
                "param_1": "dataPointer",
                "param_2": "paramValue",
                "uVar1": "returnValue",
                "uVar2": "updatedValue",
                "iVar3": "dataValue",
                "local_18": "bitMask",
                "local_14": "constant1",
                "local_10": "constant2"
            },
            "calling": [
                "FUN_08003bd8"
            ],
            "called": [
                "FUN_08006bb8",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d24": {
            "entrypoint": "0x08006d24",
            "current_name": "update_data_access_permissions_08006d24",
            "code": "\n\n\nvoid updateDataAccessPermissions_08006d24(int *dataPtr)\n\n{\n  if (*dataPtr != 0x40012400) {\n    if (*dataPtr == 0x40012800) {\n      _DAT_4002100c = _DAT_4002100c & 0xfffffbff;\n      _DAT_40021018 = _DAT_40021018 & 0xfffffbff;\n    }\n    return;\n  }\n  _DAT_4002100c = _DAT_4002100c & 0xfffffdff;\n  _DAT_40021018 = _DAT_40021018 & 0xfffffdff;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d24": "update_data_access_permissions_08006d24",
                "param_1": "dataPtr"
            },
            "calling": [
                "FUN_08003ce8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d80": {
            "entrypoint": "0x08006d80",
            "current_name": "decode_binary_08006d80",
            "code": "\nundefined2 decode_binary_08006d80(undefined4 input_value)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined2 decoded_value;\n  uint counter;\n  undefined4 flag1;\n  undefined4 flag2;\n  int buffer;\n  undefined4 variable1;\n  undefined4 variable2;\n  undefined4 variable3;\n  undefined4 variable4;\n  undefined4 variable5;\n  undefined4 variable6;\n  undefined4 variable7;\n  undefined4 variable8;\n  \n  FUN_080091c6(&buffer,0,0x30);\n  counter = 0;\n  flag1 = 0;\n  flag2 = 0;\n  decoded_value = 0;\n  buffer = FUN_08007320(input_value,&DAT_0800a5b8);\n  if (buffer == 0) {\n    decoded_value = 0;\n  }\n  else {\n    variable1 = 0;\n    variable2 = 0;\n    variable3 = 0;\n    variable5 = 0;\n    variable7 = 0xe0000;\n    variable8 = 0;\n    variable4 = 1;\n    variable6 = 0;\n    DAT_20000014 = (undefined)input_value;\n    iVar1 = FUN_08003bd8(&buffer);\n    if (iVar1 == 0) {\n      counter = FUN_08006c60(input_value);\n      if (counter < 0x12) {\n        flag1 = 1;\n        flag2 = 2;\n        iVar1 = FUN_080038e4(&buffer,&counter);\n        if (iVar1 == 0) {\n          iVar1 = FUN_08003e20(&buffer);\n          if (iVar1 == 0) {\n            iVar1 = FUN_08003aa0(&buffer);\n            if (iVar1 == 0) {\n              iVar1 = FUN_0800376c(&buffer,10);\n              if (iVar1 == 0) {\n                uVar2 = FUN_08003a1c(&buffer);\n                if ((uVar2 & 0x200) != 0) {\n                  decoded_value = FUN_080038dc(&buffer);\n                }\n                iVar1 = FUN_08003de4(&buffer);\n                if (iVar1 == 0) {\n                  iVar1 = FUN_08003ce8(&buffer);\n                  if (iVar1 != 0) {\n                    decoded_value = 0;\n                  }\n                }\n                else {\n                  decoded_value = 0;\n                }\n              }\n              else {\n                decoded_value = 0;\n              }\n            }\n            else {\n              decoded_value = 0;\n            }\n          }\n          else {\n            decoded_value = 0;\n          }\n        }\n        else {\n          decoded_value = 0;\n        }\n      }\n      else {\n        decoded_value = 0;\n      }\n    }\n    else {\n      decoded_value = 0;\n    }\n  }\n  return decoded_value;\n}\n\n",
            "renaming": {
                "FUN_08006d80": "decode_binary_08006d80",
                "param_1": "input_value",
                "local_46": "decoded_value",
                "local_44": "counter",
                "local_40": "flag1",
                "local_3c": "flag2",
                "local_38": "buffer",
                "local_34": "variable1",
                "local_30": "variable2",
                "local_2c": "variable3",
                "local_28": "variable4",
                "local_24": "variable5",
                "local_20": "variable6",
                "local_1c": "variable7",
                "local_10": "variable8"
            },
            "calling": [
                "FUN_08008880"
            ],
            "called": [
                "FUN_080038dc",
                "FUN_08003bd8",
                "FUN_080038e4",
                "FUN_08003a1c",
                "FUN_08006c60",
                "FUN_080091c6",
                "FUN_0800376c",
                "FUN_08003ce8",
                "FUN_08003e20",
                "FUN_08003aa0",
                "FUN_08003de4",
                "FUN_08007320"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e68": {
            "entrypoint": "0x08006e68",
            "current_name": "initialize_hardware_08006e68",
            "code": "\n\n\nvoid initializeHardware_08006e68(undefined4 param)\n\n{\n  int status;\n  undefined4 config;\n  uint bitMask;\n  undefined4 var1;\n  undefined4 var2;\n  undefined4 var3;\n  \n  status = FUN_08007376((int)(char)DAT_20000014,&DAT_0800a6cc);\n  FUN_08007438(param);\n  config = FUN_08006bb8((uint)((int)(char)DAT_20000014 << 0x18) >> 0x1c);\n  var1 = 2;\n  var2 = 0;\n  var3 = 3;\n  _DAT_40021018 = _DAT_40021018 | 1;\n  switch((uint)(status << 0x11) >> 0x19) {\n  case 1:\n    _DAT_40010004 = _DAT_40010004 | 0x7000001;\n    break;\n  case 2:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n    break;\n  case 3:\n    _DAT_40010004 = _DAT_40010004 | 0x7000002;\n    break;\n  case 4:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n    break;\n  case 5:\n    _DAT_40010004 = _DAT_40010004 | 0x7000004;\n    break;\n  case 6:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n    break;\n  case 7:\n    _DAT_40010004 = _DAT_40010004 | 0x7000008;\n    break;\n  case 8:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n    break;\n  case 9:\n    _DAT_40010004 = _DAT_40010004 | 0x7000030;\n    break;\n  case 10:\n    _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n    break;\n  case 0xb:\n    _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n    break;\n  case 0xc:\n    _DAT_40010004 = _DAT_40010004 | 0x70000c0;\n    break;\n  case 0xd:\n    _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n    break;\n  case 0xe:\n    _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n    break;\n  case 0xf:\n    _DAT_40010004 = _DAT_40010004 | 0x7000300;\n    break;\n  case 0x10:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n    break;\n  case 0x11:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n    break;\n  case 0x12:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n    break;\n  case 0x13:\n    _DAT_40010004 = _DAT_40010004 | 0x7000c00;\n    break;\n  case 0x14:\n    _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n    break;\n  case 0x15:\n    _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n    break;\n  case 0x16:\n    _DAT_40010004 = _DAT_40010004 | 0x7001000;\n    break;\n  case 0x17:\n    _DAT_40010004 = _DAT_40010004 & 0xffffefff | 0x7000000;\n    break;\n  case 0x1b:\n    _DAT_40010004 = _DAT_40010004 | 0x7008000;\n    break;\n  case 0x1c:\n    _DAT_40010004 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n    break;\n  case 0x21:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff;\n    break;\n  case 0x22:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n    break;\n  case 0x23:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n    break;\n  case 0x24:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n  }\n  bitMask = 1 << (DAT_20000014 & 0xf) & 0xffff;\n  FUN_080040e8(config,&bitMask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006e68": "initialize_hardware_08006e68",
                "param_1": "param",
                "iVar1": "status",
                "uVar2": "config",
                "local_20": "bitMask",
                "local_1c": "var1",
                "local_18": "var2",
                "local_14": "var3"
            },
            "calling": [
                "FUN_08006092"
            ],
            "called": [
                "FUN_08007438",
                "FUN_08007376",
                "FUN_08006bb8",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007110": {
            "entrypoint": "0x08007110",
            "current_name": "initialize_program_08007110",
            "code": "\nvoid initialize_program_08007110(void)\n\n{\n  FUN_080074e0();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007110": "initialize_program_08007110"
            },
            "calling": [
                "FUN_08005e2e"
            ],
            "called": [
                "FUN_080074e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007118": {
            "entrypoint": "0x08007118",
            "current_name": "decode_and_process_data_08007118",
            "code": "\nvoid decode_and_process_data_08007118(undefined4 input_1,uint factor,int count,undefined4 data,char flag)\n\n{\n  uint remainder;\n  int result_1;\n  int result_2;\n  undefined4 size_1;\n  undefined4 size_2;\n  undefined4 size_3;\n  undefined4 size_4;\n  undefined4 size_5;\n  undefined4 size_6;\n  undefined4 size_7;\n  int buffer;\n  int temp_1;\n  undefined4 temp_2;\n  int temp_3;\n  undefined4 temp_4;\n  undefined4 temp_5;\n  undefined flag_value;\n  \n  FUN_080091c6(&buffer,0,0x40);\n  size_1 = 0;\n  size_2 = 0;\n  size_3 = 0;\n  size_4 = 0;\n  size_5 = 0;\n  size_6 = 0;\n  size_7 = 0;\n  buffer = FUN_08007320(input_1,&DAT_0800a6cc);\n  if (buffer != 0) {\n    remainder = FUN_080075dc();\n    temp_1 = remainder / factor - 1;\n    temp_3 = count + -1;\n    temp_4 = 0;\n    temp_2 = 0;\n    temp_5 = 0;\n    flag_value = 0;\n    if (flag == '\\x01') {\n      DAT_20000014 = (undefined)input_1;\n      result_1 = FUN_08006092(&buffer);\n      if (result_1 != 0) {\n        return;\n      }\n    }\n    result_1 = FUN_08006c7c(input_1);\n    if ((((result_1 == 0) || (result_1 == 4)) || (result_1 == 8)) || ((result_1 == 0xc || (result_1 == 0x18)))) {\n      size_1 = 0x60;\n      size_3 = 0;\n      size_5 = 0;\n      size_4 = 0;\n      size_7 = 0;\n      size_6 = 0;\n      size_2 = data;\n      result_2 = FUN_08006186(&buffer,&size_1,result_1);\n      if (result_2 == 0) {\n        remainder = FUN_08007376(input_1,&DAT_0800a6cc);\n        if ((remainder & 0x100000) == 0) {\n          FUN_08006390(&buffer,result_1);\n        }\n        else {\n          FUN_0800643c(&buffer,result_1);\n        }\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007118": "decode_and_process_data_08007118",
                "param_1": "input_1",
                "param_2": "factor",
                "param_3": "count",
                "param_4": "data",
                "param_5": "flag",
                "uVar1": "remainder",
                "iVar2": "result_1",
                "iVar3": "result_2",
                "local_74": "size_1",
                "local_70": "size_2",
                "local_6c": "size_3",
                "local_68": "size_4",
                "local_64": "size_5",
                "local_60": "size_6",
                "local_5c": "size_7",
                "local_58": "buffer",
                "local_54": "temp_1",
                "local_50": "temp_2",
                "local_4c": "temp_3",
                "local_48": "temp_4",
                "local_44": "temp_5",
                "local_1b": "flag_value"
            },
            "calling": [
                "FUN_080088e0"
            ],
            "called": [
                "FUN_08006092",
                "FUN_08006186",
                "FUN_0800643c",
                "FUN_08006c7c",
                "FUN_080091c6",
                "FUN_08007376",
                "FUN_080075dc",
                "FUN_08006390",
                "FUN_08007320"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080071e4": {
            "entrypoint": "0x080071e4",
            "current_name": "process_data_080071e4",
            "code": "\nvoid processData_080071e4(undefined4 input)\n\n{\n  int result;\n  uint flags;\n  int values [17];\n  \n  values[0] = FUN_08007320(input,&DAT_0800a6cc);\n  if ((values[0] != 0) &&\n     ((((result = FUN_08006c7c(input), result == 0 || (result == 4)) || (result == 8)) ||\n      ((result == 0xc || (result == 0x18)))))) {\n    flags = FUN_08007376(input,&DAT_0800a6cc);\n    if ((flags & 0x100000) == 0) {\n      FUN_080063c0(values,result);\n    }\n    else {\n      FUN_08006460(values,result);\n    }\n    FUN_08005e2e(values);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080071e4": "process_data_080071e4",
                "param_1": "input",
                "iVar1": "result",
                "uVar2": "flags",
                "local_50": "values"
            },
            "calling": [
                "FUN_08008990"
            ],
            "called": [
                "FUN_08005e2e",
                "FUN_080063c0",
                "FUN_08006c7c",
                "FUN_08006460",
                "FUN_08007376",
                "FUN_08007320"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800723c": {
            "entrypoint": "0x0800723c",
            "current_name": "initialize_application_0800723c",
            "code": "\nvoid initialize_application_0800723c(void)\n\n{\n  FUN_08003760();\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800723c": "initialize_application_0800723c"
            },
            "calling": [
                "FUN_08008abc"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007244": {
            "entrypoint": "0x08007244",
            "current_name": "FUNC_08007244",
            "code": "\nvoid FUNC_08007244(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007244": "FUNC_08007244"
            },
            "calling": [
                "FUN_08007246"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08007246": {
            "entrypoint": "0x08007246",
            "current_name": "initialize_system_08007246",
            "code": "\nvoid initialize_system_08007246(void)\n\n{\n  FUN_08003748();\n  FUN_08004046();\n  FUNC_08007244();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007246": "initialize_system_08007246"
            },
            "calling": [],
            "called": [
                "FUN_08007244",
                "FUN_08004046",
                "FUN_08003748"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007258": {
            "entrypoint": "0x08007258",
            "current_name": "initialize_device_08007258",
            "code": "\n\n\nvoid initializeDevice_08007258(uint deviceID,undefined4 parameter1,undefined4 parameter2)\n\n{\n  undefined4 translatedParam;\n  uint bitMask;\n  undefined4 localVar1;\n  undefined4 localVar2;\n  undefined4 localVar3;\n  \n  translatedParam = FUN_08006bb8((deviceID << 0x18) >> 0x1c);\n  bitMask = 1 << (deviceID & 0xf) & 0xffff;\n  localVar3 = 3;\n  _DAT_40021018 = _DAT_40021018 | 1;\n  if ((deviceID - 0xd & 0xff) < 2) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n  }\n  if (((deviceID == 0xf) || (deviceID == 0x13)) || (deviceID == 0x14)) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n  }\n  localVar1 = parameter1;\n  localVar2 = parameter2;\n  FUN_080040e8(translatedParam,&bitMask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007258": "initialize_device_08007258",
                "param_1": "deviceID",
                "param_2": "parameter1",
                "param_3": "parameter2",
                "uVar1": "translatedParam",
                "local_20": "bitMask",
                "local_1c": "localVar1",
                "local_18": "localVar2",
                "local_14": "localVar3"
            },
            "calling": [
                "FUN_08008990"
            ],
            "called": [
                "FUN_08006bb8",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080072d8": {
            "entrypoint": "0x080072d8",
            "current_name": "execute_operation_080072d8",
            "code": "\nvoid executeOperation_080072d8(undefined4 operationCode,undefined2 operationData,int condition,undefined4 extraParam)\n\n{\n  if (condition == 0) {\n    FUN_080042e2(operationCode,operationData,0,extraParam,extraParam);\n    return;\n  }\n  FUN_080042e2(operationCode,operationData,1,extraParam,extraParam);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080072d8": "execute_operation_080072d8",
                "param_1": "operationCode",
                "param_2": "operationData",
                "param_3": "condition",
                "param_4": "extraParam"
            },
            "calling": [
                "FUN_08008a24"
            ],
            "called": [
                "FUN_080042e2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080072f0": {
            "entrypoint": "0x080072f0",
            "current_name": "process_data_080072f0",
            "code": "\nvoid process_data_080072f0(undefined4 input_1,undefined2 input_2,undefined4 temp_1,undefined4 temp_2)\n\n{\n  FUN_080042d4(input_1,input_2,temp_1,temp_2,temp_2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080072f0": "process_data_080072f0",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "temp_1",
                "param_4": "temp_2"
            },
            "calling": [
                "FUN_08008a6c"
            ],
            "called": [
                "FUN_080042d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080072fa": {
            "entrypoint": "0x080072fa",
            "current_name": "initialize_080072fa",
            "code": "\nvoid initialize_080072fa(void)\n\n{\n  FUN_08003724();\n  FUN_080035b8();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080072fa": "initialize_080072fa"
            },
            "calling": [
                "FUN_080036a2"
            ],
            "called": [
                "FUN_08003724",
                "FUN_080035b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007306": {
            "entrypoint": "0x08007306",
            "current_name": "find_value_08007306",
            "code": "\nundefined4 find_value_08007306(int value,char *array)\n\n{\n  while( true ) {\n    if (*array == -1) {\n      return 0;\n    }\n    if (*array == value) break;\n    array = array + 0xc;\n  }\n  return *(undefined4 *)(array + 4);\n}\n\n",
            "renaming": {
                "FUN_08007306": "find_value_08007306",
                "param_1": "value",
                "param_2": "array"
            },
            "calling": [
                "FUN_08007306",
                "FUN_08007320"
            ],
            "called": [
                "FUN_08007306"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007320": {
            "entrypoint": "0x08007320",
            "current_name": "check_param_08007320",
            "code": "\nundefined4 checkParam_08007320(int input)\n\n{\n  undefined4 result;\n  \n  if (input != -1) {\n    result = FUN_08007306();\n    return result;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007320": "check_param_08007320",
                "param_1": "input",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08008078",
                "FUN_080084b0",
                "FUN_080077b0",
                "FUN_080071e4",
                "FUN_08007118",
                "FUN_08006d80",
                "FUN_08008500"
            ],
            "called": [
                "FUN_08007306"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007332": {
            "entrypoint": "0x08007332",
            "current_name": "find_character_position_08007332",
            "code": "\nint find_character_position_08007332(int target_character,char *string_array)\n\n{\n  while( true ) {\n    if (*(int *)(string_array + 4) == 0) {\n      return -1;\n    }\n    if (*(int *)(string_array + 4) == target_character) break;\n    string_array = string_array + 0xc;\n  }\n  return (int)*string_array;\n}\n\n",
            "renaming": {
                "FUN_08007332": "find_character_position_08007332",
                "param_1": "target_character",
                "param_2": "string_array"
            },
            "calling": [
                "FUN_0800734a",
                "FUN_08007332"
            ],
            "called": [
                "FUN_08007332"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800734a": {
            "entrypoint": "0x0800734a",
            "current_name": "check_param_0800734a",
            "code": "\nundefined4 checkParam_0800734a(int inputValue)\n\n{\n  undefined4 returnValue;\n  \n  if (inputValue != 0) {\n    returnValue = FUN_08007332();\n    return returnValue;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800734a": "check_param_0800734a",
                "param_1": "inputValue",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_080084b0",
                "FUN_08008d30"
            ],
            "called": [
                "FUN_08007332"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800735a": {
            "entrypoint": "0x0800735a",
            "current_name": "find_value_in_array_0800735a",
            "code": "\nundefined4 find_value_in_array_0800735a(int value,char *array)\n\n{\n  while( true ) {\n    if (*array == -1) {\n      return 0xffffffff;\n    }\n    if (*array == value) break;\n    array = array + 0xc;\n  }\n  return *(undefined4 *)(array + 8);\n}\n\n",
            "renaming": {
                "FUN_0800735a": "find_value_in_array_0800735a",
                "param_1": "value",
                "param_2": "array"
            },
            "calling": [
                "FUN_0800735a",
                "FUN_08007376"
            ],
            "called": [
                "FUN_0800735a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007376": {
            "entrypoint": "0x08007376",
            "current_name": "check_error_code_08007376",
            "code": "\nundefined4 checkErrorCode_08007376(int errorCode)\n\n{\n  undefined4 output;\n  \n  if (errorCode == -1) {\n    return 0xffffffff;\n  }\n  output = FUN_0800735a();\n  return output;\n}\n\n",
            "renaming": {
                "FUN_08007376": "check_error_code_08007376",
                "param_1": "errorCode",
                "uVar1": "output"
            },
            "calling": [
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08006e68",
                "FUN_08006c60",
                "FUN_080071e4",
                "FUN_08006c7c",
                "FUN_08007118"
            ],
            "called": [
                "FUN_0800735a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800738a": {
            "entrypoint": "0x0800738a",
            "current_name": "check_match_0800738a",
            "code": "\nundefined4 check_match_0800738a(int input_value,char *array_ptr)\n\n{\n  if (input_value == -1) {\n    return 0;\n  }\n  while( true ) {\n    if (*array_ptr == -1) {\n      return 0;\n    }\n    if (input_value == *array_ptr) break;\n    array_ptr = array_ptr + 0xc;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800738a": "check_match_0800738a",
                "param_1": "input_value",
                "param_2": "array_ptr"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_08001cd0",
                "FUN_08008990",
                "FUN_08000a64",
                "FUN_080088e0",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073ae": {
            "entrypoint": "0x080073ae",
            "current_name": "compare_and_return_different_080073ae",
            "code": "\nint compare_and_return_different_080073ae(int value_1,int value_2)\n\n{\n  if (value_1 != value_2) {\n    if (value_1 == 0) {\n      return value_2;\n    }\n    if (value_2 == 0) {\n      return value_1;\n    }\n    value_1 = 0;\n  }\n  return value_1;\n}\n\n",
            "renaming": {
                "FUN_080073ae": "compare_and_return_different_080073ae",
                "param_1": "value_1",
                "param_2": "value_2"
            },
            "calling": [
                "FUN_08008078",
                "FUN_080077b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073c0": {
            "entrypoint": "0x080073c0",
            "current_name": "execute_callback_function_080073c0",
            "code": "\nvoid execute_callback_function_080073c0(void)\n\n{\n  if (DAT_200005f4 != (code *)0x0) {\n    (*DAT_200005f4)(DAT_2000060c);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080073c0": "execute_callback_function_080073c0"
            },
            "calling": [
                "FUN_08005cb4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073e8": {
            "entrypoint": "0x080073e8",
            "current_name": "infinite_loop_080073e8",
            "code": "\nvoid infiniteLoop_080073e8(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080073e8": "infinite_loop_080073e8"
            },
            "calling": [
                "FUN_080035b8",
                "FUN_080073e8"
            ],
            "called": [
                "FUN_080073e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073ec": {
            "entrypoint": "0x080073ec",
            "current_name": "init_memory_configuration_080073ec",
            "code": "\n\n\nvoid initMemoryConfiguration_080073ec(void)\n\n{\n  _DAT_40021000 = _DAT_40021000 & 0xfef2ffff | 1;\n  _DAT_40021004 = _DAT_40021004 & 0xf8800000;\n  _DAT_40021008 = 0x9f0000;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080073ec": "init_memory_configuration_080073ec"
            },
            "calling": [
                "entry"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007438": {
            "entrypoint": "0x08007438",
            "current_name": "update_data_flags_08007438",
            "code": "\n\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nvoid updateDataFlags_08007438(int *dataPtr)\n\n{\n  if (*dataPtr == 0x40012c00) {\n    _DAT_40021018 = _DAT_40021018 | 0x800;\n    DAT_20000610 = dataPtr;\n  }\n  if (*dataPtr == 0x40000000) {\n    _DAT_4002101c = _DAT_4002101c | 1;\n    DAT_20000614 = dataPtr;\n  }\n  if (*dataPtr == 0x40000400) {\n    _DAT_4002101c = _DAT_4002101c | 2;\n    DAT_20000618 = dataPtr;\n  }\n  if (*dataPtr == 0x40000800) {\n    _DAT_4002101c = _DAT_4002101c | 4;\n    DAT_2000061c = dataPtr;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007438": "update_data_flags_08007438",
                "param_1": "dataPtr"
            },
            "calling": [
                "FUN_08006e68",
                "FUN_08007708"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080074e0": {
            "entrypoint": "0x080074e0",
            "current_name": "update_flags_based_on_value_080074e0",
            "code": "\n\n\nvoid updateFlagsBasedOnValue_080074e0(int *value)\n\n{\n  if (*value == 0x40012c00) {\n    _DAT_40021018 = _DAT_40021018 & 0xfffff7ff;\n  }\n  if (*value == 0x40000000) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffe;\n  }\n  if (*value == 0x40000400) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffd;\n  }\n  if (*value == 0x40000800) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffb;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080074e0": "update_flags_based_on_value_080074e0",
                "param_1": "value"
            },
            "calling": [
                "FUN_08007710",
                "FUN_08007110"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007544": {
            "entrypoint": "0x08007544",
            "current_name": "get_timer_ir_qn_08007544",
            "code": "\nundefined4 getTimerIRQn_08007544(uint timerNumber)\n\n{\n  if (timerNumber == 0xffffffff) {\n    return 0;\n  }\n  if (timerNumber == 0x40000400) {\n    return 0x1d;\n  }\n  if (timerNumber < 0x40000401) {\n    if (timerNumber == 0x40000000) {\n      return 0x1c;\n    }\n  }\n  else {\n    if (timerNumber == 0x40000800) {\n      return 0x1e;\n    }\n    if (timerNumber == 0x40012c00) {\n      return 0x19;\n    }\n  }\n  FUN_080098d8(\"TIM: Unknown timer IRQn\");\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007544": "get_timer_ir_qn_08007544",
                "param_1": "timerNumber"
            },
            "calling": [
                "FUN_080076e0",
                "FUN_08007648"
            ],
            "called": [
                "FUN_080098d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007594": {
            "entrypoint": "0x08007594",
            "current_name": "check_timer_instance_08007594",
            "code": "\nundefined4 checkTimerInstance_08007594(uint timerInstance)\n\n{\n  if (timerInstance == 0xffffffff) {\n    return 0;\n  }\n  if (timerInstance == 0x40000400) {\n    return 1;\n  }\n  if (timerInstance < 0x40000401) {\n    if (timerInstance == 0x40000000) {\n      return 1;\n    }\n  }\n  else {\n    if (timerInstance == 0x40000800) {\n      return 1;\n    }\n    if (timerInstance == 0x40012c00) {\n      return 2;\n    }\n  }\n  FUN_080098d8(\"TIM: Unknown timer instance\");\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007594": "check_timer_instance_08007594",
                "param_1": "timerInstance"
            },
            "calling": [
                "FUN_080075dc"
            ],
            "called": [
                "FUN_080098d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080075dc": {
            "entrypoint": "0x080075dc",
            "current_name": "calculate_clock_offset_080075dc",
            "code": "\nint calculateClockOffset_080075dc(undefined4 source)\n\n{\n  uint clockOffset;\n  int retval;\n  uint clockSource;\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  undefined4 temp4;\n  uint temp5;\n  uint temp6;\n  \n  temp2 = 0;\n  temp3 = 0;\n  temp4 = 0;\n  temp5 = 0;\n  temp6 = 0;\n  temp1 = 0;\n  FUN_08005a68(&temp2,&temp1);\n  retval = FUN_08007594(source);\n  clockOffset = temp6;\n  clockSource = temp5;\n  if (retval == 1) {\n    retval = FUN_08005a28();\n  }\n  else if (retval == 2) {\n    retval = FUN_08005a48();\n    clockSource = clockOffset;\n  }\n  else {\n    FUN_080098d8(\"TIM: Unknown clock source\");\n    retval = 0;\n    clockSource = 0;\n  }\n  if (clockSource != 0x500) {\n    if (clockSource < 0x501) {\n      if (clockSource != 0x400) {\n        return retval;\n      }\n    }\n    else if ((clockSource != 0x600) && (clockSource != 0x700)) {\n      return retval;\n    }\n  }\n  return retval << 1;\n}\n\n",
            "renaming": {
                "FUN_080075dc": "calculate_clock_offset_080075dc",
                "param_1": "source",
                "uVar1": "clockOffset",
                "iVar2": "retval",
                "uVar3": "clockSource",
                "local_20": "temp1",
                "local_1c": "temp2",
                "local_18": "temp3",
                "local_14": "temp4",
                "local_10": "temp5",
                "local_c": "temp6"
            },
            "calling": [
                "FUN_08007648",
                "FUN_08007118"
            ],
            "called": [
                "FUN_08005a28",
                "FUN_08005a48",
                "FUN_080098d8",
                "FUN_08007594",
                "FUN_08005a68"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007648": {
            "entrypoint": "0x08007648",
            "current_name": "initialize_data_08007648",
            "code": "\nvoid initializeData_08007648(undefined4 *data,undefined4 value1,undefined4 value2,undefined4 value3)\n\n{\n  char character;\n  uint result;\n  int status;\n  undefined4 *pointer;\n  undefined4 localVar1;\n  undefined4 localVar2;\n  undefined4 localVar3;\n  undefined4 localVar4;\n  undefined4 localVar5;\n  undefined4 localVar6;\n  undefined4 localVar7;\n  \n  localVar1 = 0;\n  localVar2 = 0;\n  localVar3 = 0;\n  localVar4 = 0;\n  localVar5 = 0;\n  localVar6 = 0;\n  localVar7 = 0;\n  pointer = data + 1;\n  *data = 0x40000000;\n  data[1] = 0x40000000;\n  data[4] = value1;\n  result = FUN_080075dc();\n  data[2] = result / 1000000 - 1;\n  data[5] = 0;\n  data[3] = 0;\n  data[6] = 0;\n  data[0x13] = value3;\n  localVar1 = 0;\n  localVar3 = 0;\n  localVar5 = 0;\n  localVar4 = 0;\n  localVar6 = 0;\n  localVar7 = 0;\n  localVar2 = value2;\n  character = FUN_08007544(*data);\n  FUN_08003f30((int)character,0xe,0);\n  character = FUN_08007544(*data);\n  FUN_08003f94((int)character);\n  status = FUN_08006060(pointer);\n  if ((status == 0) && (status = FUN_08006128(pointer,&localVar1,0), status == 0)) {\n    FUN_08006280(pointer,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007648": "initialize_data_08007648",
                "param_1": "data",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "cVar1": "character",
                "uVar2": "result",
                "iVar3": "status",
                "puVar4": "pointer",
                "local_34": "localVar1",
                "local_30": "localVar2",
                "local_2c": "localVar3",
                "local_28": "localVar4",
                "local_24": "localVar5",
                "local_20": "localVar6",
                "local_1c": "localVar7"
            },
            "calling": [
                "FUN_0800242c"
            ],
            "called": [
                "FUN_08007544",
                "FUN_08006280",
                "FUN_08003f30",
                "FUN_08006060",
                "FUN_08003f94",
                "FUN_080075dc",
                "FUN_08006128"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080076e0": {
            "entrypoint": "0x080076e0",
            "current_name": "process_data_080076e0",
            "code": "\nvoid processData_080076e0(undefined4 *data)\n\n{\n  char result;\n  int status;\n  \n  data[0x13] = 0;\n  result = FUN_08007544(*data);\n  FUN_08003fb0((int)result);\n  status = FUN_08005df4(data + 1);\n  if (status == 0) {\n    FUN_080062f4(data + 1,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080076e0": "process_data_080076e0",
                "param_1": "data",
                "cVar1": "result",
                "iVar2": "status"
            },
            "calling": [
                "FUN_08002578"
            ],
            "called": [
                "FUN_08003fb0",
                "FUN_08007544",
                "FUN_08005df4",
                "FUN_080062f4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007708": {
            "entrypoint": "0x08007708",
            "current_name": "initialize_08007708",
            "code": "\nvoid initialize_08007708(void)\n\n{\n  FUN_08007438();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007708": "initialize_08007708"
            },
            "calling": [
                "FUN_08006060"
            ],
            "called": [
                "FUN_08007438"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007710": {
            "entrypoint": "0x08007710",
            "current_name": "initialize_application_08007710",
            "code": "\nvoid initialize_application_08007710(void)\n\n{\n  FUN_080074e0();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007710": "initialize_application_08007710"
            },
            "calling": [
                "FUN_08005df4"
            ],
            "called": [
                "FUN_080074e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007718": {
            "entrypoint": "0x08007718",
            "current_name": "decrease_value_by_four_08007718",
            "code": "\nint decreaseValueByFour_08007718(int inputValue)\n\n{\n  return inputValue + -4;\n}\n\n",
            "renaming": {
                "FUN_08007718": "decrease_value_by_four_08007718",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_0800771c",
                "FUN_08007736"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800771c": {
            "entrypoint": "0x0800771c",
            "current_name": "execute_if_flag_set_0800771c",
            "code": "\nvoid executeIfFlagSet_0800771c(int flag)\n\n{\n  int functionPtr;\n  \n  functionPtr = FUN_08007718();\n  if ((*(code **)(functionPtr + 0x4c) != (code *)0x0) && (*(char *)(flag + 0x1c) == '\\x01')) {\n    (**(code **)(functionPtr + 0x4c))(functionPtr,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800771c": "execute_if_flag_set_0800771c",
                "param_1": "flag",
                "iVar1": "functionPtr"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [
                "FUN_08007718"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007736": {
            "entrypoint": "0x08007736",
            "current_name": "execute_hook_function_08007736",
            "code": "\nvoid executeHookFunction_08007736(void)\n\n{\n  int result;\n  \n  result = FUN_08007718();\n  if (*(functionPointer **)(result + 0x48) != (functionPointer *)0x0) {\n    (**(functionPointer **)(result + 0x48))();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007736": "execute_hook_function_08007736",
                "iVar1": "result",
                "code": "functionPointer"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [
                "FUN_08007718"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007744": {
            "entrypoint": "0x08007744",
            "current_name": "get_modified_value_08007744",
            "code": "\nundefined4 getModifiedValue_08007744(int inputValue)\n\n{\n  return *(undefined4 *)(*(int *)(inputValue + 4) + 0x24);\n}\n\n",
            "renaming": {
                "FUN_08007744": "get_modified_value_08007744",
                "param_1": "inputValue"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800774a": {
            "entrypoint": "0x0800774a",
            "current_name": "set_param_value_0800774a",
            "code": "\nvoid setParamValue_0800774a(int context,undefined4 value)\n\n{\n  *(undefined4 *)(*(int *)(context + 4) + 0x24) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800774a": "set_param_value_0800774a",
                "param_1": "context",
                "param_2": "value"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007750": {
            "entrypoint": "0x08007750",
            "current_name": "write_to_memory_08007750",
            "code": "\nvoid writeToMemory_08007750(int baseAddress,int index,undefined4 value)\n\n{\n  *(undefined4 *)(*(int *)(baseAddress + 4) + 0x34 + index * 4) = value;\n  void;\n}\n\n",
            "renaming": {
                "FUN_08007750": "write_to_memory_08007750",
                "param_1": "baseAddress",
                "param_2": "index",
                "param_3": "value",
                "return": "void"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080077b0": {
            "entrypoint": "0x080077b0",
            "current_name": "configure_i2_c_080077b0",
            "code": "\n\n\nvoid configureI2C_080077b0(int *configData,int pin1,int pin2,int pin3,undefined unspecified)\n\n{\n  int pinPeripheral1;\n  int pinPeripheral2;\n  undefined4 i2cPeriph;\n  uint tempVar1;\n  uint tempVar2;\n  int *pointerToVar;\n  uint bitMask1;\n  uint bitMask2;\n  uint bitMask3;\n  undefined4 reserved;\n  \n  if (configData != (int *)0x0) {\n    pointerToVar = configData + 1;\n    pinPeripheral1 = FUN_08007320((int)*(char *)(configData + 0x16),&DAT_0800a69c);\n    pinPeripheral2 = FUN_08007320((int)*(char *)((int)configData + 0x59),&DAT_0800a66c);\n    if ((pinPeripheral1 == 0) || (pinPeripheral2 == 0)) {\n      FUN_080098d8(\"ERROR: at least one I2C pin has no peripheral\\n\");\n    }\n    else {\n      pinPeripheral1 = FUN_080073ae(pinPeripheral1,pinPeripheral2);\n      *configData = pinPeripheral1;\n      if (pinPeripheral1 == 0) {\n        FUN_080098d8(\"ERROR: I2C pins mismatch\\n\");\n      }\n      else {\n        if (pinPeripheral1 == 0x40005400) {\n          _DAT_4002101c = _DAT_4002101c | 0x200000;\n          _DAT_40021010 = _DAT_40021010 & 0xffdfffff;\n          *(undefined *)((int)configData + 0x5a) = 0x1f;\n          *(undefined *)((int)configData + 0x5b) = 0x20;\n          DAT_20000668 = pointerToVar;\n        }\n        if (*configData == 0x40005800) {\n          _DAT_4002101c = _DAT_4002101c | 0x400000;\n          _DAT_40021010 = _DAT_40021010 & 0xffbfffff;\n          *(undefined *)((int)configData + 0x5a) = 0x21;\n          *(undefined *)((int)configData + 0x5b) = 0x22;\n          DAT_2000066c = pointerToVar;\n        }\n        i2cPeriph = FUN_08006bb8((uint)((int)*(char *)((int)configData + 0x59) << 0x18) >> 0x1c);\n        bitMask1 = 1 << ((int)*(char *)((int)configData + 0x59) & 0xfU) & 0xffff;\n        tempVar1 = FUN_08007376((int)*(char *)((int)configData + 0x59),&DAT_0800a66c);\n        tempVar2 = FUN_08007376((int)*(char *)((int)configData + 0x59),&DAT_0800a66c);\n        bitMask2 = (tempVar1 >> 3 & 1) << 4 | tempVar2 & 7;\n        reserved = 3;\n        pinPeripheral1 = FUN_08007376((int)*(char *)((int)configData + 0x59),&DAT_0800a66c);\n        bitMask3 = (uint)(pinPeripheral1 << 0x1a) >> 0x1e;\n        pinPeripheral1 = FUN_08007376((int)*(char *)((int)configData + 0x59),&DAT_0800a66c);\n        _DAT_40021018 = _DAT_40021018 | 1;\n        tempVar2 = 1;\n        tempVar1 = _DAT_40021018;\n        switch((uint)(pinPeripheral1 << 0x11) >> 0x19) {\n        case 1:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000001;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 2:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 3:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000002;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 4:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 5:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000004;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 6:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 7:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000008;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 8:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 9:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000030;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 10:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0xb:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0xc:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x70000c0;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0xd:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0xe:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0xf:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000300;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x10:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x11:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x12:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x13:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000c00;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x14:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x15:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x16:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7001000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x17:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x1b:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7008000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x1c:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x21:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xf8ffffff;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x22:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x23:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x24:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n          _DAT_40010004 = tempVar2;\n        }\n        FUN_080040e8(i2cPeriph,&bitMask1,tempVar1,tempVar2);\n        i2cPeriph = FUN_08006bb8((uint)((int)*(char *)(configData + 0x16) << 0x18) >> 0x1c);\n        bitMask1 = 1 << ((int)*(char *)(configData + 0x16) & 0xfU) & 0xffff;\n        tempVar1 = FUN_08007376((int)*(char *)(configData + 0x16),&DAT_0800a69c);\n        tempVar2 = FUN_08007376((int)*(char *)(configData + 0x16),&DAT_0800a69c);\n        bitMask2 = (tempVar1 >> 3 & 1) << 4 | tempVar2 & 7;\n        reserved = 3;\n        pinPeripheral1 = FUN_08007376((int)*(char *)(configData + 0x16),&DAT_0800a69c);\n        bitMask3 = (uint)(pinPeripheral1 << 0x1a) >> 0x1e;\n        pinPeripheral1 = FUN_08007376((int)*(char *)(configData + 0x16),&DAT_0800a69c);\n        _DAT_40021018 = _DAT_40021018 | 1;\n        tempVar2 = 1;\n        tempVar1 = _DAT_40021018;\n        switch((uint)(pinPeripheral1 << 0x11) >> 0x19) {\n        case 1:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000001;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 2:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 3:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000002;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 4:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 5:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000004;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 6:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 7:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000008;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 8:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 9:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000030;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 10:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0xb:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0xc:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x70000c0;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0xd:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0xe:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0xf:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000300;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x10:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x11:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x12:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x13:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000c00;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x14:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x15:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x16:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7001000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x17:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x1b:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7008000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x1c:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x21:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xf8ffffff;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x22:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x23:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x24:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n          _DAT_40010004 = tempVar2;\n        }\n        FUN_080040e8(i2cPeriph,&bitMask1,tempVar1,tempVar2);\n        configData[1] = *configData;\n        configData[2] = pin1;\n        configData[3] = 0;\n        configData[4] = pin3;\n        configData[7] = 0xff;\n        configData[5] = pin2;\n        configData[6] = 0;\n        configData[8] = 0;\n        configData[9] = 0;\n        *(undefined *)((int)configData + 0x41) = 0;\n        FUN_08003f30((int)*(char *)((int)configData + 0x5a),0,1);\n        FUN_08003f94((int)*(char *)((int)configData + 0x5a));\n        FUN_08003f30((int)*(char *)((int)configData + 0x5b),0,1);\n        FUN_08003f94((int)*(char *)((int)configData + 0x5b));\n        FUN_080045c0(pointerToVar);\n        *(undefined *)((int)configData + 0x5d) = unspecified;\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080077b0": "configure_i2_c_080077b0",
                "param_1": "configData",
                "param_2": "pin1",
                "param_3": "pin2",
                "param_4": "pin3",
                "param_5": "unspecified",
                "iVar1": "pinPeripheral1",
                "iVar2": "pinPeripheral2",
                "uVar3": "i2cPeriph",
                "uVar4": "tempVar1",
                "uVar5": "tempVar2",
                "piVar6": "pointerToVar",
                "local_38": "bitMask1",
                "local_34": "bitMask2",
                "local_30": "bitMask3",
                "local_2c": "reserved"
            },
            "calling": [
                "FUN_08002968"
            ],
            "called": [
                "FUN_080045c0",
                "FUN_080098d8",
                "FUN_080073ae",
                "FUN_08003f30",
                "FUN_08003f94",
                "FUN_08006bb8",
                "FUN_08007376",
                "FUN_08007320",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e74": {
            "entrypoint": "0x08007e74",
            "current_name": "check_for_condition_08007e74",
            "code": "\nint checkForCondition_08007e74(int input,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int initialValue;\n  int result;\n  uint difference;\n  int status;\n  int temp;\n  undefined4 tempParam4;\n  \n  tempParam4 = param4;\n  initialValue = FUN_08003760();\n  difference = 0;\n  status = 2;\n  do {\n    temp = input + 4;\n    result = FUN_08004728(temp,param2,param3,param4,tempParam4);\n    if (result == 0) {\n      status = 0;\n      while ((result = FUN_0800542a(temp), result != 0x20 && (status == 0))) {\n        result = FUN_08003760();\n        difference = result - initialValue;\n        if (difference < 0x65) {\n          result = FUN_08005430(temp);\n          if (result != 0) {\n            status = 2;\n          }\n        }\n        else {\n          status = 1;\n        }\n      }\n    }\n    result = FUN_08005430(temp);\n  } while ((result == 4) && (difference < 100));\n  return status;\n}\n\n",
            "renaming": {
                "FUN_08007e74": "check_for_condition_08007e74",
                "param_1": "input",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "initialValue",
                "iVar2": "result",
                "uVar3": "difference",
                "iVar4": "status",
                "iVar5": "temp",
                "uVar6": "tempParam4"
            },
            "calling": [
                "FUN_08002a58"
            ],
            "called": [
                "FUN_08004728",
                "FUN_0800542a",
                "FUN_08005430",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007ede": {
            "entrypoint": "0x08007ede",
            "current_name": "copy_data_to_memory_08007ede",
            "code": "\nundefined4 copyDataToMemory_08007ede(int destinationAddress,int sourceAddress,uint dataSize)\n\n{\n  uint i;\n  \n  if (0x20 < dataSize) {\n    return 2;\n  }\n  for (i = 0; i < dataSize; i = i + 1 & 0xff) {\n    *(undefined *)(destinationAddress + i + 0x68) = *(undefined *)(sourceAddress + i);\n    *(char *)(destinationAddress + 0x88) = *(char *)(destinationAddress + 0x88) + '\\x01';\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007ede": "copy_data_to_memory_08007ede",
                "param_1": "destinationAddress",
                "param_2": "sourceAddress",
                "param_3": "dataSize",
                "uVar1": "i"
            },
            "calling": [
                "FUN_080027f0",
                "FUN_0800288c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f0e": {
            "entrypoint": "0x08007f0e",
            "current_name": "check_validity_08007f0e",
            "code": "\nint checkValidity_08007f0e(int inputValue,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int initialValue;\n  int result;\n  uint difference;\n  int status;\n  int tempValue;\n  undefined4 tempParam;\n  \n  tempParam = param4;\n  initialValue = FUN_08003760();\n  difference = 0;\n  status = 2;\n  do {\n    tempValue = inputValue + 4;\n    result = FUN_080047f4(tempValue,param2,param3,param4,tempParam);\n    if (result == 0) {\n      status = 0;\n      while ((result = FUN_0800542a(tempValue), result != 0x20 && (status == 0))) {\n        result = FUN_08003760();\n        difference = result - initialValue;\n        if (difference < 0x65) {\n          result = FUN_08005430(tempValue);\n          if (result != 0) {\n            status = 2;\n          }\n        }\n        else {\n          status = 1;\n        }\n      }\n    }\n    result = FUN_08005430(tempValue);\n  } while ((result == 4) && (difference < 100));\n  return status;\n}\n\n",
            "renaming": {
                "FUN_08007f0e": "check_validity_08007f0e",
                "param_1": "inputValue",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "initialValue",
                "iVar2": "result",
                "uVar3": "difference",
                "iVar4": "status",
                "iVar5": "tempValue",
                "uVar6": "tempParam"
            },
            "calling": [
                "FUN_08002b68"
            ],
            "called": [
                "FUN_080047f4",
                "FUN_0800542a",
                "FUN_08005430",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f78": {
            "entrypoint": "0x08007f78",
            "current_name": "subtract_four_08007f78",
            "code": "\nint subtractFour_08007f78(int input)\n\n{\n  return input + -4;\n}\n\n",
            "renaming": {
                "FUN_08007f78": "subtract_four_08007f78",
                "param_1": "input"
            },
            "calling": [
                "FUN_08008020",
                "FUN_08007fa0",
                "FUN_08007ff0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f7c": {
            "entrypoint": "0x08007f7c",
            "current_name": "set_param_value_08007f7c",
            "code": "\nvoid set_param_value_08007f7c(int object_ptr,int value)\n\n{\n  if (object_ptr != 0) {\n    if (value != 0) {\n      *(int *)(object_ptr + 0x60) = value;\n      FUN_080049e0(object_ptr + 4);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007f7c": "set_param_value_08007f7c",
                "param_1": "object_ptr",
                "param_2": "value"
            },
            "calling": [
                "FUN_08002968"
            ],
            "called": [
                "FUN_080049e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f8e": {
            "entrypoint": "0x08007f8e",
            "current_name": "update_param_with_value_08007f8e",
            "code": "\nvoid update_param_with_value_08007f8e(int base_address,int value)\n\n{\n  if (base_address != 0) {\n    if (value != 0) {\n      *(int *)(base_address + 100) = value;\n      FUN_080049e0(base_address + 4);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007f8e": "update_param_with_value_08007f8e",
                "param_1": "base_address",
                "param_2": "value"
            },
            "calling": [
                "FUN_08002968"
            ],
            "called": [
                "FUN_080049e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007fa0": {
            "entrypoint": "0x08007fa0",
            "current_name": "process_params_08007fa0",
            "code": "\nvoid processParams_08007fa0(int ptr,int flag,int value,undefined4 param)\n\n{\n  int result;\n  \n  result = FUN_08007f78();\n  if (value == *(int *)(ptr + 0xc)) {\n    if (flag == 0) {\n      *(undefined *)(result + 0x88) = 0;\n      *(undefined *)(result + 0x5c) = 0;\n      if (*(code **)(result + 100) != (code *)0x0) {\n        (**(code **)(result + 100))();\n      }\n      FUN_080048c8(ptr,result + 0x68,*(undefined *)(result + 0x88),8);\n      return;\n    }\n    *(undefined *)(result + 0x5c) = 1;\n    FUN_08004954(ptr,result + 0x68,0x20,8,param);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007fa0": "process_params_08007fa0",
                "param_1": "ptr",
                "param_2": "flag",
                "param_3": "value",
                "param_4": "param",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08004ac2"
            ],
            "called": [
                "FUN_08004954",
                "FUN_08007f78",
                "FUN_080048c8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007ff0": {
            "entrypoint": "0x08007ff0",
            "current_name": "execute_function_08007ff0",
            "code": "\nvoid executeFunction_08007ff0(undefined4 inputParam)\n\n{\n  int result;\n  \n  result = FUN_08007f78();\n  if (((*(functionPointer **)(result + 0x60) != (functionPointer *)0x0) && (*(char *)(result + 0x5c) == '\\x01')) &&\n     (*(char *)(result + 0x2c) != ' ')) {\n    (**(functionPointer **)(result + 0x60))(result + 0x68);\n  }\n  FUN_080049e0(inputParam);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007ff0": "execute_function_08007ff0",
                "param_1": "inputParam",
                "iVar1": "result",
                "code": "functionPointer"
            },
            "calling": [
                "FUN_08004aec",
                "FUN_08004f3c",
                "FUN_08005084"
            ],
            "called": [
                "FUN_08007f78",
                "FUN_080049e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008020": {
            "entrypoint": "0x08008020",
            "current_name": "check_and_call_function_08008020",
            "code": "\nvoid checkAndCallFunction_08008020(undefined4 inputParam)\n\n{\n  int result;\n  \n  result = FUN_08007f78();\n  if (*(char *)(result + 0x5d) == '\\0') {\n    FUN_080049e0(inputParam);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008020": "check_and_call_function_08008020",
                "param_1": "inputParam",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08004f3c"
            ],
            "called": [
                "FUN_08007f78",
                "FUN_080049e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008078": {
            "entrypoint": "0x08008078",
            "current_name": "configure_uart_settings_08008078",
            "code": "\n\n\nvoid configure_UART_settings_08008078(int *uart_pins_array)\n\n{\n  int uart_pin_1;\n  int uart_pin_2;\n  undefined4 uart_settings_1;\n  uint uart_settings_2;\n  uint mask;\n  uint bits;\n  uint shift;\n  undefined4 num;\n  \n  if (uart_pins_array != (int *)0x0) {\n    uart_pin_1 = FUN_08007320((int)*(char *)(uart_pins_array + 0x16),&DAT_0800a864);\n    uart_pin_2 = FUN_08007320((int)*(char *)((int)uart_pins_array + 0x59),&DAT_0800a81c);\n    if ((uart_pin_2 == 0) || (uart_pin_1 == 0)) {\n      FUN_080098d8(\"ERROR: at least one UART pin has no peripheral\\n\",uart_pin_2);\n    }\n    else {\n      uart_pin_1 = FUN_080073ae(uart_pin_1);\n      *uart_pins_array = uart_pin_1;\n      if (uart_pin_1 == 0) {\n        FUN_080098d8(\"ERROR: U(S)ART pins mismatch\\n\");\n      }\n      else {\n        if (uart_pin_1 == 0x40013800) {\n          _DAT_4002100c = _DAT_4002100c & 0xffffbfff;\n          _DAT_40021018 = _DAT_40021018 | 0x4000;\n          *(undefined *)(uart_pins_array + 0x11) = 0;\n          *(undefined *)((int)uart_pins_array + 0x5a) = 0x25;\n        }\n        else if (uart_pin_1 == 0x40004400) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffdffff;\n          _DAT_4002101c = _DAT_4002101c | 0x20000;\n          *(undefined *)(uart_pins_array + 0x11) = 1;\n          *(undefined *)((int)uart_pins_array + 0x5a) = 0x26;\n        }\n        else if (uart_pin_1 == 0x40004800) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffbffff;\n          _DAT_4002101c = _DAT_4002101c | 0x40000;\n          *(undefined *)(uart_pins_array + 0x11) = 2;\n          *(undefined *)((int)uart_pins_array + 0x5a) = 0x27;\n        }\n        uart_settings_1 = FUN_08006bb8((uint)((int)*(char *)((int)uart_pins_array + 0x59) << 0x18) >> 0x1c);\n        uart_settings_2 = FUN_08007376((int)*(char *)((int)uart_pins_array + 0x59),&DAT_0800a81c);\n        mask = 1 << (*(byte *)((int)uart_pins_array + 0x59) & 0xf) & 0xffff;\n        bits = (uart_settings_2 >> 3 & 1) << 4 | uart_settings_2 & 7;\n        shift = (uart_settings_2 << 0x1a) >> 0x1e;\n        _DAT_40021018 = _DAT_40021018 | 1;\n        switch((uart_settings_2 << 0x11) >> 0x19) {\n        case 1:\n          _DAT_40010004 = _DAT_40010004 | 0x7000001;\n          break;\n        case 2:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          break;\n        case 3:\n          _DAT_40010004 = _DAT_40010004 | 0x7000002;\n          break;\n        case 4:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          break;\n        case 5:\n          _DAT_40010004 = _DAT_40010004 | 0x7000004;\n          break;\n        case 6:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          break;\n        case 7:\n          _DAT_40010004 = _DAT_40010004 | 0x7000008;\n          break;\n        case 8:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          break;\n        case 9:\n          _DAT_40010004 = _DAT_40010004 | 0x7000030;\n          break;\n        case 10:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          break;\n        case 0xb:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          break;\n        case 0xc:\n          _DAT_40010004 = _DAT_40010004 | 0x70000c0;\n          break;\n        case 0xd:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          break;\n        case 0xe:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          break;\n        case 0xf:\n          _DAT_40010004 = _DAT_40010004 | 0x7000300;\n          break;\n        case 0x10:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          break;\n        case 0x11:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          break;\n        case 0x12:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          break;\n        case 0x13:\n          _DAT_40010004 = _DAT_40010004 | 0x7000c00;\n          break;\n        case 0x14:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          break;\n        case 0x15:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          break;\n        case 0x16:\n          _DAT_40010004 = _DAT_40010004 | 0x7001000;\n          break;\n        case 0x17:\n          _DAT_40010004 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          break;\n        case 0x1b:\n          _DAT_40010004 = _DAT_40010004 | 0x7008000;\n          break;\n        case 0x1c:\n          _DAT_40010004 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          break;\n        case 0x21:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff;\n          break;\n        case 0x22:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          break;\n        case 0x23:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          break;\n        case 0x24:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n        }\n        num = 3;\n        FUN_080040e8(uart_settings_1,&mask);\n        uart_settings_1 = FUN_08006bb8((uint)((int)*(char *)(uart_pins_array + 0x16) << 0x18) >> 0x1c);\n        uart_settings_2 = FUN_08007376((int)*(char *)(uart_pins_array + 0x16),&DAT_0800a864);\n        mask = 1 << (*(byte *)(uart_pins_array + 0x16) & 0xf) & 0xffff;\n        bits = (uart_settings_2 >> 3 & 1) << 4 | uart_settings_2 & 7;\n        shift = (uart_settings_2 << 0x1a) >> 0x1e;\n        FUN_080040e8(uart_settings_1,&mask);\n        (&DAT_200006c0)[*(byte *)(uart_pins_array + 0x11)] = uart_pins_array + 1;\n        uart_pins_array[1] = *uart_pins_array;\n        uart_pins_array[2] = uart_pins_array[0x12];\n        uart_pins_array[3] = uart_pins_array[0x13];\n        uart_pins_array[4] = uart_pins_array[0x14];\n        uart_pins_array[5] = uart_pins_array[0x15];\n        uart_pins_array[6] = 0xc;\n        uart_pins_array[7] = 0;\n        uart_pins_array[8] = 0;\n        FUN_0800674e(uart_pins_array + 1);\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008078": "configure_uart_settings_08008078",
                "param_1": "uart_pins_array",
                "iVar1": "uart_pin_1",
                "iVar2": "uart_pin_2",
                "uVar3": "uart_settings_1",
                "uVar4": "uart_settings_2",
                "local_20": "mask",
                "local_1c": "bits",
                "local_18": "shift",
                "local_14": "num"
            },
            "calling": [
                "FUN_080084b0",
                "FUN_08008c44"
            ],
            "called": [
                "FUN_080073ae",
                "FUN_080098d8",
                "FUN_0800674e",
                "FUN_08006bb8",
                "FUN_08007376",
                "FUN_08007320",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080084b0": {
            "entrypoint": "0x080084b0",
            "current_name": "initialize_data_080084b0",
            "code": "\nvoid initializeData_080084b0(void)\n\n{\n  int result;\n  undefined4 secondResult;\n  \n  result = FUN_08007320(2,&DAT_0800a864);\n  if (result != 0) {\n    secondResult = FUN_08007320(2,&DAT_0800a864);\n    DAT_20000075 = FUN_0800734a(secondResult,&DAT_0800a81c);\n    DAT_20000074 = 2;\n    DAT_20000064 = 0x2580;\n    DAT_20000070 = 0;\n    DAT_20000068 = 0;\n    DAT_2000006c = 0;\n    FUN_08008078(&DAT_2000001c);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080084b0": "initialize_data_080084b0",
                "iVar1": "result",
                "uVar2": "secondResult"
            },
            "calling": [
                "FUN_08008500"
            ],
            "called": [
                "FUN_08008078",
                "FUN_0800734a",
                "FUN_08007320"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008500": {
            "entrypoint": "0x08008500",
            "current_name": "check_and_execute_08008500",
            "code": "\nuint check_and_execute_08008500(undefined4 input_param,uint value)\n\n{\n  int initial_value;\n  int result;\n  uint index;\n  \n  initial_value = FUN_08003760();\n  result = FUN_08007320(2,&DAT_0800a864);\n  if (result == 0) {\n    return 0;\n  }\n  for (index = 0;\n      (index < 5 &&\n      (((&DAT_200006c0)[index] == 0 ||\n       (result = FUN_08007320(2,&DAT_0800a864), *(int *)(&DAT_200006c0)[index] != result))));\n      index = index + 1 & 0xff) {\n  }\n  if (4 < index) {\n    if ((4 < DAT_20000060) && (FUN_080084b0(), 4 < DAT_20000060)) {\n      return 0;\n    }\n    index = (uint)DAT_20000060;\n  }\n  do {\n    result = FUN_080067ac((&DAT_200006c0)[index],input_param,value & 0xffff,1000);\n    if (result == 0) {\n      return value;\n    }\n    result = FUN_08003760();\n  } while ((uint)(result - initial_value) < 1000);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008500": "check_and_execute_08008500",
                "param_1": "input_param",
                "param_2": "value",
                "iVar1": "initial_value",
                "iVar2": "result",
                "uVar3": "index"
            },
            "calling": [
                "FUN_0800885c"
            ],
            "called": [
                "FUN_080084b0",
                "FUN_080067ac",
                "FUN_08007320",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080085b8": {
            "entrypoint": "0x080085b8",
            "current_name": "check_flags_080085b8",
            "code": "\nbool checkFlags_080085b8(int input)\n\n{\n  uint flags;\n  \n  flags = FUN_08006b1c((&DAT_200006c0)[*(byte *)(input + 0x44)]);\n  return (flags & 0x22) == 0x22;\n}\n\n",
            "renaming": {
                "FUN_080085b8": "check_flags_080085b8",
                "param_1": "input",
                "uVar1": "flags"
            },
            "calling": [
                "FUN_08008600",
                "FUN_0800863c"
            ],
            "called": [
                "FUN_08006b1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080085dc": {
            "entrypoint": "0x080085dc",
            "current_name": "is_parameter_valid_080085dc",
            "code": "\nbool isParameterValid_080085dc(int inputParameter)\n\n{\n  uint result;\n  \n  result = FUN_08006b1c((&DAT_200006c0)[*(byte *)(inputParameter + 0x44)]);\n  return (result & 0x21) == 0x21;\n}\n\n",
            "renaming": {
                "FUN_080085dc": "is_parameter_valid_080085dc",
                "param_1": "inputParameter",
                "uVar1": "result"
            },
            "calling": [],
            "called": [
                "FUN_08006b1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008600": {
            "entrypoint": "0x08008600",
            "current_name": "extract_data_08008600",
            "code": "\nundefined4 extract_data_08008600(int input_value,undefined *output_buffer,undefined4 param_3,undefined4 param_4)\n\n{\n  int result;\n  \n  if (input_value == 0) {\n    return 0xffffffff;\n  }\n  result = FUN_080085b8();\n  if (result == 0) {\n    *output_buffer = *(undefined *)(input_value + 0x45);\n    FUN_080068d6((&DAT_200006c0)[*(byte *)(input_value + 0x44)],input_value + 0x45,1,&DAT_200006c0,param_4);\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008600": "extract_data_08008600",
                "param_1": "input_value",
                "param_2": "output_buffer",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08008b66"
            ],
            "called": [
                "FUN_080085b8",
                "FUN_080068d6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800863c": {
            "entrypoint": "0x0800863c",
            "current_name": "process_data_0800863c",
            "code": "\nvoid processData_0800863c(int data,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int result;\n  uint index;\n  \n  if (data != 0) {\n    result = FUN_080085b8();\n    if (result == 0) {\n      index = (uint)*(byte *)(data + 0x44);\n      *(undefined4 *)(&DAT_20000670 + index * 4) = param2;\n      *(int *)(&DAT_20000684 + index * 4) = data;\n      FUN_08003f30((int)*(char *)(data + 0x5a),0,1,index,param4);\n      FUN_08003f94((int)*(char *)(data + 0x5a));\n      FUN_080068d6((&DAT_200006c0)[*(byte *)(data + 0x44)],data + 0x45,1);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800863c": "process_data_0800863c",
                "param_1": "data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "result",
                "uVar2": "index"
            },
            "calling": [
                "FUN_08008c44"
            ],
            "called": [
                "FUN_080085b8",
                "FUN_08003f30",
                "FUN_08003f94",
                "FUN_080068d6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008694": {
            "entrypoint": "0x08008694",
            "current_name": "update_parameter_08008694",
            "code": "\nvoid updateParameter_08008694(int parameter,undefined4 newValue)\n\n{\n  byte byteValue;\n  \n  if (parameter != 0) {\n    byteValue = *(byte *)(parameter + 0x44);\n    *(undefined4 *)(&DAT_20000698 + (uint)byteValue * 4) = newValue;\n    *(int *)(&DAT_200006ac + (uint)byteValue * 4) = parameter;\n    FUN_08003f30((int)*(char *)(parameter + 0x5a),0,2);\n    FUN_08003f94((int)*(char *)(parameter + 0x5a));\n    FUN_0800688e((&DAT_200006c0)[*(byte *)(parameter + 0x44)],\n                 *(int *)(parameter + 100) + (uint)*(ushort *)(parameter + 0x6a),1);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008694": "update_parameter_08008694",
                "param_1": "parameter",
                "param_2": "newValue",
                "bVar1": "byteValue"
            },
            "calling": [],
            "called": [
                "FUN_08003f30",
                "FUN_08003f94",
                "FUN_0800688e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080086e8": {
            "entrypoint": "0x080086e8",
            "current_name": "find_value_in_array_080086e8",
            "code": "\nuint find_value_in_array_080086e8(int value)\n\n{\n  uint index;\n  \n  if (value == 0) {\n    index = 5;\n  }\n  else {\n    index = 0;\n    while( true ) {\n      if (4 < index) {\n        return index;\n      }\n      if (value == (&DAT_200006c0)[index]) break;\n      index = index + 1 & 0xff;\n    }\n  }\n  return index;\n}\n\n",
            "renaming": {
                "FUN_080086e8": "find_value_in_array_080086e8",
                "param_1": "value",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08008730",
                "FUN_0800870c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800870c": {
            "entrypoint": "0x0800870c",
            "current_name": "execute_logic_0800870c",
            "code": "\nvoid executeLogic_0800870c(void)\n\n{\n  uint result;\n  \n  result = FUN_080086e8();\n  if (result < 5) {\n    (**(functionPointer **)(&DAT_20000670 + result * 4))(*(undefined4 *)(&DAT_20000684 + result * 4));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800870c": "execute_logic_0800870c",
                "uVar1": "result",
                "code": "functionPointer"
            },
            "calling": [
                "FUN_0800694c"
            ],
            "called": [
                "FUN_080086e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008730": {
            "entrypoint": "0x08008730",
            "current_name": "process_binary_function_08008730",
            "code": "\nvoid processBinaryFunction_08008730(void)\n\n{\n  uint randomIndex;\n  int result;\n  int dataPointer;\n  \n  randomIndex = FUN_080086e8();\n  dataPointer = *(int *)(&DAT_200006ac + randomIndex * 4);\n  if ((randomIndex < 5) && (result = (**(code **)(&DAT_20000698 + randomIndex * 4))(dataPointer), result != -1)) {\n    FUN_0800688e((&DAT_200006c0)[*(byte *)(dataPointer + 0x44)],\n                 *(int *)(dataPointer + 100) + (uint)*(ushort *)(dataPointer + 0x6a),1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008730": "process_binary_function_08008730",
                "uVar1": "randomIndex",
                "iVar2": "result",
                "iVar3": "dataPointer"
            },
            "calling": [
                "FUN_08006932"
            ],
            "called": [
                "FUN_080086e8",
                "FUN_0800688e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800877c": {
            "entrypoint": "0x0800877c",
            "current_name": "FUNC_0800877c",
            "code": "\nvoid FUNC_0800877c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800877c": "FUNC_0800877c"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008804": {
            "entrypoint": "0x08008804",
            "current_name": "allocate_memory_08008804",
            "code": "\nundefined * allocateMemory_08008804(int size)\n\n{\n  undefined *allocatedMemory;\n  \n  if (DAT_200006d4 == (undefined *)0x0) {\n    DAT_200006d4 = &DAT_20000a3c;\n  }\n  allocatedMemory = DAT_200006d4;\n  if (DAT_200006d4 + size <= endPosition) {\n    DAT_200006d4 = DAT_200006d4 + size;\n    return allocatedMemory;\n  }\n  DAT_20000a38 = 0xc;\n  return (undefined *)0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008804": "allocate_memory_08008804",
                "param_1": "size",
                "puVar1": "allocatedMemory",
                "&stack0x00000000": "endPosition"
            },
            "calling": [
                "FUN_08009918"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008840": {
            "entrypoint": "0x08008840",
            "current_name": "get_error_code_08008840",
            "code": "\nundefined4 get_error_code_08008840(void)\n\n{\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008840": "get_error_code_08008840"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008846": {
            "entrypoint": "0x08008846",
            "current_name": "initialize_memory_08008846",
            "code": "\nundefined4 initializeMemory_08008846(undefined4 param1,int bufferAddress)\n\n{\n  *(undefined4 *)(bufferAddress + 4) = 0x2000;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008846": "initialize_memory_08008846",
                "param_1": "param1",
                "param_2": "bufferAddress"
            },
            "calling": [
                "FUN_0800a0ec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008850": {
            "entrypoint": "0x08008850",
            "current_name": "initialize_return_value_08008850",
            "code": "\nresult initialize_return_value_08008850(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08008850": "initialize_return_value_08008850",
                "undefined4": "result"
            },
            "calling": [
                "FUN_0800a110"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008854": {
            "entrypoint": "0x08008854",
            "current_name": "initialize_application_08008854",
            "code": "\nvoid initializeApplication_08008854(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008854": "initialize_application_08008854",
                "undefined4": "void"
            },
            "calling": [
                "FUN_0800a130"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008858": {
            "entrypoint": "0x08008858",
            "current_name": "initialize_08008858",
            "code": "\nundefined4 initialize_08008858(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008858": "initialize_08008858"
            },
            "calling": [
                "FUN_0800a168"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800885c": {
            "entrypoint": "0x0800885c",
            "current_name": "initialize_components_0800885c",
            "code": "\nvoid initializeComponents_0800885c(undefined4 firstParameter,undefined4 secondParameter,undefined4 thirdParameter,undefined4 fourthParameter)\n\n{\n  FUN_08008500(secondParameter,thirdParameter,thirdParameter,fourthParameter,fourthParameter);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800885c": "initialize_components_0800885c",
                "param_1": "firstParameter",
                "param_2": "secondParameter",
                "param_3": "thirdParameter",
                "param_4": "fourthParameter"
            },
            "calling": [
                "FUN_0800a042"
            ],
            "called": [
                "FUN_08008500"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008868": {
            "entrypoint": "0x08008868",
            "current_name": "infinite_loop_08008868",
            "code": "\nvoid infiniteLoop_08008868(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08008868": "infinite_loop_08008868"
            },
            "calling": [
                "FUN_08008868",
                "FUN_08009b5c"
            ],
            "called": [
                "FUN_08008868"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800886c": {
            "entrypoint": "0x0800886c",
            "current_name": "set_initial_value_0800886c",
            "code": "\nundefined4 setInitialValue_0800886c(void)\n\n{\n  DAT_20000a38 = 0x16;\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800886c": "set_initial_value_0800886c"
            },
            "calling": [
                "FUN_08009fe8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800887c": {
            "entrypoint": "0x0800887c",
            "current_name": "check_if_valid_0800887c",
            "code": "\nbool checkIfValid_0800887c(void)\n\n{\n  result 1;\n}\n\n",
            "renaming": {
                "FUN_0800887c": "check_if_valid_0800887c",
                "undefined4": "bool",
                "return": "result"
            },
            "calling": [
                "thunk_FUN_0800887c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008880": {
            "entrypoint": "0x08008880",
            "current_name": "extracted_value_08008880",
            "code": "\nuint extractedValue_08008880(uint inputValue)\n\n{\n  bool isParam1Valid;\n  char extractedChar;\n  uint outputValue;\n  \n  if (inputValue < 0xe) {\n    if (inputValue + 0x2e < 0x3c) {\n      isParam1Valid = true;\n    }\n    else {\n      isParam1Valid = false;\n    }\n  }\n  else {\n    isParam1Valid = inputValue < 0x3c;\n  }\n  if (isParam1Valid) {\n    if (inputValue < 0xe) {\n      inputValue = inputValue + 0x2e;\n    }\n    extractedChar = (&DAT_0800a908)[inputValue];\n  }\n  else {\n    extractedChar = -1;\n  }\n  if (extractedChar == -1) {\n    outputValue = 0;\n  }\n  else {\n    outputValue = FUN_08006d80();\n    if (DAT_20000088 != 0xc) {\n      if (DAT_20000088 < 0xc) {\n        return outputValue >> (0xc - DAT_20000088 & 0xff);\n      }\n      return outputValue << (DAT_20000088 - 0xc & 0xff);\n    }\n  }\n  return outputValue;\n}\n\n",
            "renaming": {
                "FUN_08008880": "extracted_value_08008880",
                "param_1": "inputValue",
                "bVar1": "isParam1Valid",
                "cVar2": "extractedChar",
                "uVar3": "outputValue"
            },
            "calling": [
                "FUN_080022f8",
                "FUN_08000488"
            ],
            "called": [
                "FUN_08006d80"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080088e0": {
            "entrypoint": "0x080088e0",
            "current_name": "process_data_080088e0",
            "code": "\nvoid processData_080088e0(uint inputIndex,uint inputValue)\n\n{\n  int resultVar;\n  int charAtIndex;\n  \n  if (inputIndex < 0x3c) {\n    charAtIndex = (int)(char)(&DAT_0800a908)[inputIndex];\n  }\n  else {\n    charAtIndex = -1;\n  }\n  if (charAtIndex != -1) {\n    resultVar = FUN_0800738a(charAtIndex,&DAT_0800a6cc);\n    if (resultVar == 0) {\n      FUN_08008990(inputIndex,1);\n      if (DAT_2000008c != 8) {\n        if (DAT_2000008c < 9) {\n          inputValue = inputValue << (8 - DAT_2000008c & 0xff);\n        }\n        else {\n          inputValue = inputValue >> (DAT_2000008c - 8 & 0xff);\n        }\n      }\n      if (inputValue < 0x80) {\n        FUN_08008a24(inputIndex,0);\n      }\n      else {\n        FUN_08008a24(inputIndex,1);\n      }\n    }\n    else {\n      resultVar = FUN_08006b28(charAtIndex,&DAT_200006d8);\n      if (resultVar == 0) {\n        FUN_08006b3e(charAtIndex,&DAT_200006d8);\n      }\n      if (DAT_2000008c != 8) {\n        if (DAT_2000008c < 9) {\n          inputValue = inputValue << (8 - DAT_2000008c & 0xff);\n        }\n        else {\n          inputValue = inputValue >> (DAT_2000008c - 8 & 0xff);\n        }\n      }\n      FUN_08007118(charAtIndex,0x3e418,0xff,inputValue,resultVar == 0);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080088e0": "process_data_080088e0",
                "param_1": "inputIndex",
                "param_2": "inputValue",
                "iVar1": "resultVar",
                "iVar2": "charAtIndex"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08008990",
                "FUN_08008a24",
                "FUN_08007118",
                "FUN_0800738a",
                "FUN_08006b3e",
                "FUN_08006b28"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008990": {
            "entrypoint": "0x08008990",
            "current_name": "process_data_08008990",
            "code": "\nvoid processData_08008990(uint index,undefined4 mode,undefined4 param_3,undefined1 *data)\n\n{\n  int result;\n  undefined1 *dataPtr;\n  int value;\n  \n  if (index < 0x3c) {\n    value = (int)(char)(&DAT_0800a908)[index];\n    dataPtr = &DAT_0800a908;\n  }\n  else {\n    value = -1;\n    dataPtr = data;\n  }\n  if (value != -1) {\n    result = FUN_08006b28(value,&DAT_200006d8,param_3,dataPtr,data);\n    if (result != 0) {\n      result = FUN_0800738a(value,&DAT_0800a6cc);\n      if (result != 0) {\n        FUN_080071e4(value);\n      }\n      FUN_08006b5c(value,&DAT_200006d8);\n    }\n    switch(mode) {\n    case 0:\n      FUN_08007258(value,0);\n      break;\n    case 1:\n      FUN_08007258(value,1,0);\n      break;\n    case 2:\n      FUN_08007258(value,0,1);\n      break;\n    case 3:\n      FUN_08007258(value,0,2);\n    }\n    FUN_08006b3e(value,&DAT_200006ec);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008990": "process_data_08008990",
                "param_1": "index",
                "param_2": "mode",
                "param_4": "data",
                "iVar1": "result",
                "puVar2": "dataPtr",
                "iVar3": "value"
            },
            "calling": [
                "FUN_08003002",
                "FUN_080088e0",
                "FUN_080025ac",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08006b5c",
                "FUN_080071e4",
                "FUN_08007258",
                "FUN_0800738a",
                "FUN_08006b3e",
                "FUN_08006b28"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008a24": {
            "entrypoint": "0x08008a24",
            "current_name": "decode_and_execute_08008a24",
            "code": "\nvoid decode_and_execute_08008a24(uint index,undefined4 param_2,undefined4 param_3,undefined1 *input_data)\n\n{\n  int result;\n  undefined4 shifted_value;\n  undefined1 *lookup_table;\n  uint lookup_value;\n  \n  if (index < 0x3c) {\n    lookup_value = (uint)(char)(&DAT_0800a908)[index];\n    lookup_table = &DAT_0800a908;\n  }\n  else {\n    lookup_value = 0xffffffff;\n    lookup_table = input_data;\n  }\n  if ((lookup_value != 0xffffffff) &&\n     (result = FUN_08006b28(lookup_value,&DAT_200006ec,param_3,lookup_table,input_data), result != 0)) {\n    shifted_value = FUN_08006b7c((lookup_value << 0x18) >> 0x1c);\n    FUN_080072d8(shifted_value,1 << (lookup_value & 0xf) & 0xffff,param_2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008a24": "decode_and_execute_08008a24",
                "param_1": "index",
                "param_4": "input_data",
                "iVar1": "result",
                "uVar2": "shifted_value",
                "puVar3": "lookup_table",
                "uVar4": "lookup_value"
            },
            "calling": [
                "FUN_08002fca",
                "FUN_080088e0",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08006b7c",
                "FUN_08006b28",
                "FUN_080072d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008a6c": {
            "entrypoint": "0x08008a6c",
            "current_name": "check_character_validity_08008a6c",
            "code": "\nchar checkCharacterValidity_08008a6c(uint character)\n\n{\n  char isValid;\n  int isExist;\n  undefined4 shiftedValue;\n  uint lookupIndex;\n  \n  if (character < 0x3c) {\n    lookupIndex = (uint)(char)(&DAT_0800a908)[character];\n  }\n  else {\n    lookupIndex = 0xffffffff;\n  }\n  if (lookupIndex == 0xffffffff) {\n    isValid = '\\0';\n  }\n  else {\n    isExist = FUN_08006b28(lookupIndex,&DAT_200006ec);\n    if (isExist == 0) {\n      isValid = '\\0';\n    }\n    else {\n      shiftedValue = FUN_08006b7c((lookupIndex << 0x18) >> 0x1c);\n      isValid = FUN_080072f0(shiftedValue,1 << (lookupIndex & 0xf) & 0xffff);\n    }\n  }\n  if (isValid != '\\0') {\n    isValid = '\\x01';\n  }\n  return isValid;\n}\n\n",
            "renaming": {
                "FUN_08008a6c": "check_character_validity_08008a6c",
                "param_1": "character",
                "cVar1": "isValid",
                "iVar2": "isExist",
                "uVar3": "shiftedValue",
                "uVar4": "lookupIndex"
            },
            "calling": [
                "FUN_08000ef8"
            ],
            "called": [
                "FUN_08006b7c",
                "FUN_08006b28",
                "FUN_080072f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008abc": {
            "entrypoint": "0x08008abc",
            "current_name": "execute_initialization_08008abc",
            "code": "\nvoid executeInitialization_08008abc(void)\n\n{\n  FUN_0800723c();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008abc": "execute_initialization_08008abc"
            },
            "calling": [
                "FUN_080022f8"
            ],
            "called": [
                "FUN_0800723c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008ac4": {
            "entrypoint": "0x08008ac4",
            "current_name": "FUNC_08008ac4",
            "code": "\nvoid FUNC_08008ac4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008ac4": "FUNC_08008ac4"
            },
            "calling": [
                "FUN_08003002",
                "FUN_08002fca"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008afa": {
            "entrypoint": "0x08008afa",
            "current_name": "calculate_offset_08008afa",
            "code": "\nushort calculateOffset_08008afa(int input)\n\n{\n  return (*(short *)(input + 0x134) + 0x40) - *(short *)(input + 0x136) & 0x3f;\n}\n\n",
            "renaming": {
                "FUN_08008afa": "calculate_offset_08008afa",
                "param_1": "input"
            },
            "calling": [
                "FUN_08008bf4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b66": {
            "entrypoint": "0x08008b66",
            "current_name": "update_and_store_value_08008b66",
            "code": "\nvoid updateAndStoreValue_08008b66(int inputValue)\n\n{\n  int result;\n  ushort newValue;\n  undefined valueToStore;\n  \n  result = FUN_08008600(inputValue,&valueToStore);\n  if ((result == 0) &&\n     (newValue = *(short *)(inputValue + 0x60) + 1U & 0x3f, newValue != *(ushort *)(inputValue + 0x62))) {\n    *(undefined *)(*(int *)(inputValue + 0x5c) + (uint)*(ushort *)(inputValue + 0x60)) = valueToStore;\n    *(ushort *)(inputValue + 0x60) = newValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008b66": "update_and_store_value_08008b66",
                "param_1": "inputValue",
                "iVar1": "result",
                "uVar2": "newValue",
                "local_9": "valueToStore"
            },
            "calling": [],
            "called": [
                "FUN_08008600"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008bf4": {
            "entrypoint": "0x08008bf4",
            "current_name": "FUNC_08008bf4",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08008bfa) */\n/* WARNING: Removing unreachable block (ram,0x08008c0c) */\n/* WARNING: Removing unreachable block (ram,0x08008c02) */\n/* WARNING: Removing unreachable block (ram,0x08008c14) */\n\nvoid FUNC_08008bf4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008bf4": "FUNC_08008bf4"
            },
            "calling": [
                "FUN_08008f1c"
            ],
            "called": [
                "FUN_08008afa"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008c20": {
            "entrypoint": "0x08008c20",
            "current_name": "initialize_parameters_08008c20",
            "code": "\nvoid initializeParameters_08008c20(int baseAddress)\n\n{\n  *(int *)(baseAddress + 0x130) = baseAddress + 0x11;\n  *(undefined2 *)(baseAddress + 0x134) = 0;\n  *(undefined2 *)(baseAddress + 0x136) = 0;\n  *(int *)(baseAddress + 0x138) = baseAddress + 0x51;\n  *(undefined2 *)(baseAddress + 0x13c) = 0;\n  *(undefined2 *)(baseAddress + 0x13e) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008c20": "initialize_parameters_08008c20",
                "param_1": "baseAddress"
            },
            "calling": [
                "FUN_08008d30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008c44": {
            "entrypoint": "0x08008c44",
            "current_name": "configure_serial_port_08008c44",
            "code": "\nvoid configureSerialPort_08008c44(int portAddress,undefined4 baudRate,byte serialMode)\n\n{\n  uint errorCode;\n  byte modeBits;\n  int configValue;\n  code *jmpTable;\n  \n  *(undefined4 *)(portAddress + 0x11c) = baudRate;\n  *(byte *)(portAddress + 0x140) = serialMode;\n  modeBits = serialMode & 7;\n  if (modeBits == 4) {\n    configValue = 7;\n  }\n  else if (modeBits == 6) {\n    configValue = 8;\n  }\n  else if (modeBits == 2) {\n    configValue = 6;\n  }\n  else {\n    configValue = 0;\n  }\n  if ((serialMode & 0x30) == 0x30) {\n    *(undefined4 *)(portAddress + 0x128) = 0x600;\n    configValue = configValue + 1;\n  }\n  else if ((serialMode & 0x20) == 0) {\n    *(undefined4 *)(portAddress + 0x128) = 0;\n  }\n  else {\n    *(undefined4 *)(portAddress + 0x128) = 0x400;\n    configValue = configValue + 1;\n  }\n  if ((serialMode & 8) == 0) {\n    *(undefined4 *)(portAddress + 0x124) = 0;\n  }\n  else {\n    *(undefined4 *)(portAddress + 0x124) = 0x2000;\n  }\n  if (configValue == 8) {\n    *(undefined4 *)(portAddress + 0x120) = 0;\n  }\n  else if (configValue == 9) {\n    *(undefined4 *)(portAddress + 0x120) = 0x1000;\n  }\n  else {\n    configValue = 0;\n  }\n  if (configValue != 0) {\n    FUN_08008078(portAddress + 0xd4);\n    FUN_0800863c(portAddress + 0xd4,0x8008b67);\n    return;\n  }\n  jmpTable = (code *)0x8008cee;\n  FUN_080090cc(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/cores/arduino/HardwareSerial.cpp\"\n               ,299,\"void HardwareSerial::begin(long unsigned int, byte)\",\"databits!=0\");\n  if (errorCode < 0x3c) {\n    uRam0000012d = (&DAT_0800a908)[errorCode];\n  }\n  else {\n    uRam0000012d = 0xff;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08008d0c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jmpTable)(0,errorCode,&stack0x00000148);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008c44": "configure_serial_port_08008c44",
                "param_1": "portAddress",
                "param_2": "baudRate",
                "param_3": "serialMode",
                "extraout_r1": "errorCode",
                "bVar1": "modeBits",
                "iVar2": "configValue",
                "UNRECOVERED_JUMPTABLE": "jmpTable"
            },
            "calling": [
                "FUN_08003048"
            ],
            "called": [
                "FUN_08008078",
                "FUN_080090cc",
                "FUN_0800863c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008d00": {
            "entrypoint": "0x08008d00",
            "current_name": "assign_value_and_jump_08008d00",
            "code": "\nvoid assignValueAndJump_08008d00(int destinationAddress,uint valueIndex)\n\n{\n  undefined assignedValue;\n  code *jumpTable;\n  \n  if (valueIndex < 0x3c) {\n    assignedValue = (&DAT_0800a908)[valueIndex];\n  }\n  else {\n    assignedValue = 0xff;\n  }\n  *(undefined *)(destinationAddress + 0x12d) = assignedValue;\n                    /* WARNING: Could not recover jumptable at 0x08008d0c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008d00": "assign_value_and_jump_08008d00",
                "param_1": "destinationAddress",
                "param_2": "valueIndex",
                "uVar1": "assignedValue",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_08008d30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008d18": {
            "entrypoint": "0x08008d18",
            "current_name": "set_byte_value_08008d18",
            "code": "\nvoid setByteValue_08008d18(int memoryAddress,uint index)\n\n{\n  undefined byteValue;\n  \n  if (index < 0x3c) {\n    byteValue = (&DAT_0800a908)[index];\n  }\n  else {\n    byteValue = 0xff;\n  }\n  *(undefined *)(memoryAddress + 300) = byteValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008d18": "set_byte_value_08008d18",
                "param_1": "memoryAddress",
                "param_2": "index",
                "uVar1": "byteValue"
            },
            "calling": [
                "FUN_08008d30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008d30": {
            "entrypoint": "0x08008d30",
            "current_name": "initialize_data_08008d30",
            "code": "\nundefined4 *\ninitializeData_08008d30(undefined4 *data,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined result;\n  \n  data[1] = 0;\n  data[2] = 1000;\n  *data = &PTR_LAB_08008ba4_1_0800aab8;\n  if (data == (undefined4 *)&DAT_20000700) {\n    FUN_08008d00(&DAT_20000700,0,param3,&DAT_20000700,param4);\n    FUN_08008d18(&DAT_20000700,1);\n  }\n  else {\n    result = FUN_0800734a(param2,&DAT_0800a81c);\n    *(undefined *)((int)data + 0x12d) = result;\n    result = FUN_0800734a(param2,&DAT_0800a864);\n    *(undefined *)(data + 0x4b) = result;\n  }\n  FUN_08008c20(data);\n  return data;\n}\n\n",
            "renaming": {
                "FUN_08008d30": "initialize_data_08008d30",
                "param_1": "data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08008d8c"
            ],
            "called": [
                "FUN_08008d18",
                "FUN_08008d00",
                "FUN_08008c20",
                "FUN_0800734a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008d8c": {
            "entrypoint": "0x08008d8c",
            "current_name": "process_data_08008d8c",
            "code": "\nvoid process_data_08008d8c(int flag,int value,undefined4 arg1,undefined4 arg2)\n\n{\n  if (flag != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    FUN_08008d30(&DAT_20000700,0x40004400,arg1,0xffff,arg2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008d8c": "process_data_08008d8c",
                "param_1": "flag",
                "param_2": "value",
                "param_3": "arg1",
                "param_4": "arg2"
            },
            "calling": [],
            "called": [
                "FUN_08008d30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008df8": {
            "entrypoint": "0x08008df8",
            "current_name": "initialize_data_08008df8",
            "code": "\nvoid initializeData_08008df8(undefined4 *dataPointer,undefined value1,undefined value2,undefined value3,\n                 undefined value4)\n\n{\n  *dataPointer = &DAT_0800ab0c;\n  *(undefined *)(dataPointer + 1) = value1;\n  *(undefined *)((int)dataPointer + 5) = value2;\n  *(undefined *)((int)dataPointer + 6) = value3;\n  *(undefined *)((int)dataPointer + 7) = value4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008df8": "initialize_data_08008df8",
                "param_1": "dataPointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "value4"
            },
            "calling": [
                "FUN_08008e14"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008e14": {
            "entrypoint": "0x08008e14",
            "current_name": "check_params_08008e14",
            "code": "\nvoid checkParams_08008e14(int input1,int input2)\n\n{\n  if ((input1 == 1) && (input2 == 0xffff)) {\n    FUN_08008df8(&DAT_20000844,0,0,0,0);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008e14": "check_params_08008e14",
                "param_1": "input1",
                "param_2": "input2"
            },
            "calling": [],
            "called": [
                "FUN_08008df8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008ef4": {
            "entrypoint": "0x08008ef4",
            "current_name": "calculate_interpolation_08008ef4",
            "code": "\nint calculate_interpolation_08008ef4(int start_value,int end_value,int target_value,int start_range,int end_range)\n\n{\n  return (uint)((end_range - start_range) * (start_value - end_value)) / (uint)(target_value - end_value) + start_range;\n}\n\n",
            "renaming": {
                "FUN_08008ef4": "calculate_interpolation_08008ef4",
                "param_1": "start_value",
                "param_2": "end_value",
                "param_3": "target_value",
                "param_4": "start_range",
                "param_5": "end_range"
            },
            "calling": [
                "FUN_080026b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008f0c": {
            "entrypoint": "0x08008f0c",
            "current_name": "FUNC_08008f0c",
            "code": "\nvoid FUNC_08008f0c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008f0c": "FUNC_08008f0c"
            },
            "calling": [
                "FUN_08008f1c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008f0e": {
            "entrypoint": "0x08008f0e",
            "current_name": "initialize_system_08008f0e",
            "code": "\nvoid initializeSystem_08008f0e(void)\n\n{\n  FUN_08003f0c(3);\n  FUN_080036a2();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008f0e": "initialize_system_08008f0e"
            },
            "calling": [
                "FUN_08009148"
            ],
            "called": [
                "FUN_080036a2",
                "FUN_08003f0c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008f1c": {
            "entrypoint": "0x08008f1c",
            "current_name": "continuous_processing_08008f1c",
            "code": "\nvoid continuousProcessing_08008f1c(void)\n\n{\n  FUNC_08008f0c();\n  FUN_08001b48();\n  do {\n    FUN_080022f8();\n    FUNC_08008bf4();\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08008f1c": "continuous_processing_08008f1c"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_080022f8",
                "FUN_08008f0c",
                "FUN_08008bf4",
                "FUN_08001b48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008f3c": {
            "entrypoint": "0x08008f3c",
            "current_name": "count_set_bits_08008f3c",
            "code": "\nchar countSetBits_08008f3c(uint num)\n\n{\n  char bitCount;\n  \n  bitCount = '\\0';\n  for (; num != 1; num = num >> 1) {\n    bitCount = bitCount + '\\x01';\n  }\n  return bitCount;\n}\n\n",
            "renaming": {
                "FUN_08008f3c": "count_set_bits_08008f3c",
                "param_1": "num",
                "cVar1": "bitCount"
            },
            "calling": [
                "FUN_08009094"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008f78": {
            "entrypoint": "0x08008f78",
            "current_name": "initialize_settings_08008f78",
            "code": "\nvoid initializeSettings_08008f78(int isInitialRun,int paramValue,undefined4 param3,undefined4 param4)\n\n{\n  if (isInitialRun != 1) {\n    return;\n  }\n  if (paramValue == 0xffff) {\n    DAT_2000084c = 6;\n    DAT_20000858 = 0;\n    DAT_20000860 = 7;\n    DAT_2000086c = 0;\n    DAT_20000874 = 8;\n    DAT_20000880 = 0;\n    DAT_20000888 = 9;\n    DAT_20000894 = 0;\n    DAT_2000089c = 10;\n    DAT_200008a8 = 0;\n    DAT_200008b0 = 0x17;\n    DAT_200008bc = 0;\n    DAT_200008c4 = 0x17;\n    DAT_200008d0 = 0;\n    DAT_200008d8 = 0x17;\n    DAT_200008e4 = 0;\n    DAT_200008ec = 0x17;\n    DAT_200008f8 = 0;\n    DAT_20000900 = 0x17;\n    DAT_2000090c = 0;\n    DAT_20000914 = 0x28;\n    DAT_20000920 = 0;\n    DAT_20000928 = 0x28;\n    DAT_20000934 = 0;\n    DAT_2000093c = 0x28;\n    DAT_20000948 = 0;\n    DAT_20000950 = 0x28;\n    DAT_2000095c = 0;\n    DAT_20000964 = 0x28;\n    DAT_20000970 = 0;\n    DAT_20000978 = 0x28;\n    DAT_20000984 = 0;\n    FUN_080090c2(0,&LAB_08008f50_1,&DAT_20000000,&DAT_2000084c,param4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008f78": "initialize_settings_08008f78",
                "param_1": "isInitialRun",
                "param_2": "paramValue",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [],
            "called": [
                "FUN_080090c2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009084": {
            "entrypoint": "0x08009084",
            "current_name": "execute_next_operation_08009084",
            "code": "\nvoid executeNextOperation_08009084(int dataStructure)\n\n{\n  int index;\n  \n  if (*(int *)(dataStructure + 8) != 0) {\n    (**(code **)(dataStructure + 0xc))();\n    return;\n  }\n  FUN_0800a18c();\n  index = FUN_08008f3c();\n  if ((&DAT_20000858)[index * 5] != 0) {\n    executeNextOperation_08009084();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009084": "execute_next_operation_08009084",
                "param_1": "dataStructure",
                "iVar1": "index"
            },
            "calling": [
                "FUN_08009094"
            ],
            "called": [
                "FUN_0800a18c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009094": {
            "entrypoint": "0x08009094",
            "current_name": "check_and_execute_action_08009094",
            "code": "\nvoid checkAndExecuteAction_08009094(void)\n\n{\n  int result;\n  \n  result = FUN_08008f3c();\n  if ((&DAT_20000858)[result * 5] != 0) {\n    FUN_08009084();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009094": "check_and_execute_action_08009094",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080042f0"
            ],
            "called": [
                "FUN_08008f3c",
                "FUN_08009084"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080090c2": {
            "entrypoint": "0x080090c2",
            "current_name": "update_parameters_080090c2",
            "code": "\nvoid updateParameters_080090c2(undefined4 newParam,undefined4 oldParam)\n\n{\n  FUN_08009108(oldParam,newParam);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080090c2": "update_parameters_080090c2",
                "param_1": "newParam",
                "param_2": "oldParam"
            },
            "calling": [
                "FUN_08008f78"
            ],
            "called": [
                "FUN_08009108"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080090cc": {
            "entrypoint": "0x080090cc",
            "current_name": "print_assertion_error_080090cc",
            "code": "\nvoid printAssertionError_080090cc(undefined4 fileName,undefined4 lineNumber,char *assertionMessage,undefined4 functionName)\n\n{\n  undefined4 assertionMessageFormat;\n  char *additionalInfo;\n  undefined8 result;\n  undefined4 additionalInfoFormat;\n  \n  assertionMessageFormat = *(undefined4 *)(DAT_20000090 + 0xc);\n  additionalInfoFormat = functionName;\n  if (assertionMessage == (char *)0x0) goto LAB_080090f0;\n  additionalInfo = \", function: \";\n  do {\n    FUN_08009124(assertionMessageFormat,\"assertion \\\"%s\\\" failed: file \\\"%s\\\", line %d%s%s\\n\",functionName,fileName,lineNumber\n                 ,additionalInfo,assertionMessage,additionalInfoFormat);\n    result = FUN_08009b5c();\n    lineNumber = (undefined4)((ulonglong)result >> 0x20);\n    assertionMessageFormat = (undefined4)result;\nLAB_080090f0:\n    assertionMessage = \"\";\n    additionalInfo = assertionMessage;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080090cc": "print_assertion_error_080090cc",
                "param_1": "fileName",
                "param_2": "lineNumber",
                "param_3": "assertionMessage",
                "param_4": "functionName",
                "uVar1": "assertionMessageFormat",
                "pcVar2": "additionalInfo",
                "uVar3": "result",
                "uVar4": "additionalInfoFormat"
            },
            "calling": [
                "FUN_08008c44"
            ],
            "called": [
                "FUN_08009b5c",
                "FUN_08009124"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009108": {
            "entrypoint": "0x08009108",
            "current_name": "left_shift_uint64_08009108",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08009110) */\n\nlonglong leftShiftUint64_08009108(undefined4 param1,uint input)\n\n{\n  return (ulonglong)input << 0x20;\n}\n\n",
            "renaming": {
                "FUN_08009108": "left_shift_uint64_08009108",
                "param_1": "param1",
                "param_2": "input"
            },
            "calling": [
                "FUN_080090c2"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009124": {
            "entrypoint": "0x08009124",
            "current_name": "initialize_data_08009124",
            "code": "\nvoid initializeData_08009124(undefined4 inputParameter1,undefined4 inputParameter2,undefined4 data1,undefined4 data2)\n\n{\n  undefined4 data3;\n  undefined4 data4;\n  \n  data3 = data1;\n  data4 = data2;\n  FUN_0800937c(DAT_20000090,inputParameter1,inputParameter2,&data3,inputParameter1,&data3);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009124": "initialize_data_08009124",
                "param_1": "inputParameter1",
                "param_2": "inputParameter2",
                "param_3": "data1",
                "param_4": "data2",
                "uStack_8": "data3",
                "uStack_4": "data4"
            },
            "calling": [
                "FUN_080090cc"
            ],
            "called": [
                "FUN_0800937c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009148": {
            "entrypoint": "0x08009148",
            "current_name": "execute_functions_08009148",
            "code": "\nvoid executeFunctions_08009148(void)\n\n{\n  int index;\n  \n  for (index = 0; index != 0; index = index + 1) {\n    (*(code *)(&DAT_0800abe4)[index])();\n  }\n  FUNC_0800a424();\n  for (index = 0; index != 0xc; index = index + 1) {\n    (*(code *)(&DAT_0800abe4)[index])();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009148": "execute_functions_08009148",
                "iVar1": "index"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_0800a424",
                "FUN_08008f0e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009190": {
            "entrypoint": "0x08009190",
            "current_name": "initialize_data_08009190",
            "code": "\nvoid initializeData_08009190(undefined4 inputData)\n\n{\n  FUN_08009270(DAT_20000090,inputData);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009190": "initialize_data_08009190",
                "param_1": "inputData"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [
                "FUN_08009270"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091a0": {
            "entrypoint": "0x080091a0",
            "current_name": "initialize_data_080091a0",
            "code": "\nvoid initializeData_080091a0(undefined4 data)\n\n{\n  FUN_080091d8(DAT_20000090,data);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091a0": "initialize_data_080091a0",
                "param_1": "data"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [
                "FUN_080091d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091b0": {
            "entrypoint": "0x080091b0",
            "current_name": "copy_data_080091b0",
            "code": "\nvoid copy_data_080091b0(int data_offset,undefined *source,int num_elements)\n\n{\n  undefined *destination_end;\n  undefined *destination;\n  \n  destination = (undefined *)(data_offset + -1);\n  destination_end = source + num_elements;\n  for (; source != destination_end; source = source + 1) {\n    destination = destination + 1;\n    *destination = *source;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091b0": "copy_data_080091b0",
                "param_1": "data_offset",
                "param_2": "source",
                "param_3": "num_elements",
                "puVar1": "destination_end",
                "puVar2": "destination"
            },
            "calling": [
                "FUN_080027f0",
                "FUN_08009908"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091c6": {
            "entrypoint": "0x080091c6",
            "current_name": "fill_memory_080091c6",
            "code": "\nvoid fillMemory_080091c6(undefined *destination,undefined value,int size)\n\n{\n  undefined *endAddress;\n  \n  endAddress = destination + size;\n  for (; destination != endAddress; destination = destination + 1) {\n    *destination = value;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091c6": "fill_memory_080091c6",
                "param_1": "destination",
                "param_2": "value",
                "param_3": "size",
                "puVar1": "endAddress"
            },
            "calling": [
                "FUN_08002a58",
                "FUN_08009cdc",
                "FUN_08002968",
                "FUN_08007118",
                "FUN_08009db0",
                "FUN_08009d24",
                "FUN_08006d80"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091d8": {
            "entrypoint": "0x080091d8",
            "current_name": "process_data_080091d8",
            "code": "\nvoid processData_080091d8(undefined4 *output,int size,undefined4 param1,undefined4 param2)\n\n{\n  int **temp1;\n  int **temp2;\n  int **temp3;\n  int *temp4;\n  int **temp5;\n  int **temp6;\n  \n  if (size == 0) {\n    return;\n  }\n  temp6 = (int **)(size + -4);\n  if (*(int *)(size + -4) < 0) {\n    temp6 = (int **)((int)temp6 + *(int *)(size + -4));\n  }\n  FUNC_08009f48();\n  temp3 = (int **)&DAT_2000098c;\n  if (DAT_2000098c == (int **)0x0) {\n    temp6[1] = (int *)0x0;\n    temp2 = temp1;\n    DAT_2000098c = temp6;\n  }\n  else {\n    temp3 = DAT_2000098c;\n    if (temp6 < DAT_2000098c) {\n      temp2 = (int **)*temp6;\n      temp3 = (int **)((int)temp6 + (int)temp2);\n      if (DAT_2000098c == temp3) {\n        temp4 = *DAT_2000098c;\n        DAT_2000098c = (int **)DAT_2000098c[1];\n        temp3 = (int **)((int)temp4 + (int)temp2);\n        *temp6 = (int *)temp3;\n      }\n      temp6[1] = (int *)DAT_2000098c;\n      DAT_2000098c = temp6;\n    }\n    else {\n      do {\n        temp5 = temp3;\n        temp3 = (int **)temp5[1];\n        if (temp3 == (int **)0x0) break;\n      } while (temp3 <= temp6);\n      temp2 = (int **)*temp5;\n      if ((int **)((int)temp5 + (int)temp2) == temp6) {\n        temp2 = (int **)((int)temp2 + (int)*temp6);\n        *temp5 = (int *)temp2;\n        if (temp3 == (int **)((int)temp5 + (int)temp2)) {\n          temp4 = *temp3;\n          temp3 = (int **)temp3[1];\n          temp2 = (int **)((int)temp2 + (int)temp4);\n          *temp5 = (int *)temp2;\n          temp5[1] = (int *)temp3;\n        }\n      }\n      else if (temp6 < (int **)((int)temp5 + (int)temp2)) {\n        *output = 0xc;\n      }\n      else {\n        temp2 = (int **)((int)temp6 + (int)*temp6);\n        if (temp3 == temp2) {\n          temp4 = *temp3;\n          temp3 = (int **)temp3[1];\n          temp2 = (int **)((int)temp4 + (int)*temp6);\n          *temp6 = (int *)temp2;\n        }\n        temp6[1] = (int *)temp3;\n        temp5[1] = (int *)temp6;\n      }\n    }\n  }\n  FUNC_08009f4a(output,temp2,temp3,param2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091d8": "process_data_080091d8",
                "param_1": "output",
                "param_2": "size",
                "param_3": "param1",
                "param_4": "param2",
                "extraout_r1": "temp1",
                "ppiVar1": "temp2",
                "ppiVar2": "temp3",
                "piVar3": "temp4",
                "ppiVar4": "temp5",
                "ppiVar5": "temp6"
            },
            "calling": [
                "FUN_08009b5c",
                "FUN_08009908",
                "FUN_080091a0",
                "FUN_08009a80"
            ],
            "called": [
                "FUN_08009f4a",
                "FUN_08009f48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009270": {
            "entrypoint": "0x08009270",
            "current_name": "allocate_memory_block_08009270",
            "code": "\nuint allocate_memory_block_08009270(undefined4 *result_ptr,uint data_size)\n\n{\n  uint *current_block;\n  int block_size;\n  uint *previous_block;\n  uint difference;\n  uint *new_block;\n  uint allocated_size;\n  \n  allocated_size = (data_size + 3 & 0xfffffffc) + 8;\n  if (allocated_size < 0xc) {\n    allocated_size = 0xc;\n  }\n  if (((int)allocated_size < 0) || (allocated_size < data_size)) {\n    *result_ptr = 0xc;\n  }\n  else {\n    FUNC_08009f48();\n    current_block = DAT_2000098c;\n    new_block = DAT_2000098c;\n    while (previous_block = current_block, previous_block != (uint *)0x0) {\n      difference = *previous_block - allocated_size;\n      if (-1 < (int)difference) {\n        if (difference < 0xc) {\n          if (new_block == previous_block) {\n            current_block = (uint *)new_block[1];\n            DAT_2000098c = current_block;\n          }\n          else {\n            current_block = (uint *)previous_block[1];\n          }\n          if (new_block != previous_block) {\n            new_block[1] = (uint)current_block;\n            new_block = previous_block;\n          }\n        }\n        else {\n          *previous_block = difference;\n          *(uint *)((int)previous_block + difference) = allocated_size;\n          new_block = (uint *)((int)previous_block + difference);\n        }\n        goto LAB_080092d4;\n      }\n      new_block = previous_block;\n      current_block = (uint *)previous_block[1];\n    }\n    if (DAT_20000990 == 0) {\n      DAT_20000990 = FUN_08009918(result_ptr);\n    }\n    current_block = (uint *)FUN_08009918(result_ptr,allocated_size);\n    if ((current_block != (uint *)0xffffffff) &&\n       ((new_block = (uint *)((int)current_block + 3U & 0xfffffffc), current_block == new_block ||\n        (block_size = FUN_08009918(result_ptr,(int)new_block - (int)current_block), block_size != -1)))) {\n      *new_block = allocated_size;\nLAB_080092d4:\n      FUNC_08009f4a(result_ptr);\n      allocated_size = (int)new_block + 0xbU & 0xfffffff8;\n      block_size = allocated_size - (int)(new_block + 1);\n      if (block_size != 0) {\n        *(int *)((int)new_block + block_size) = -block_size;\n        return allocated_size;\n      }\n      return allocated_size;\n    }\n    *result_ptr = 0xc;\n    FUNC_08009f4a(result_ptr);\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08009270": "allocate_memory_block_08009270",
                "param_1": "result_ptr",
                "param_2": "data_size",
                "puVar1": "current_block",
                "iVar2": "block_size",
                "puVar3": "previous_block",
                "uVar4": "difference",
                "puVar5": "new_block",
                "uVar6": "allocated_size"
            },
            "calling": [
                "FUN_08009908",
                "FUN_08009eac",
                "FUN_08009190",
                "FUN_08009d24"
            ],
            "called": [
                "FUN_08009f4a",
                "FUN_08009f48",
                "FUN_08009918"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800932c": {
            "entrypoint": "0x0800932c",
            "current_name": "process_input_0800932c",
            "code": "\nuint process_input_0800932c(int param1,byte param2,byte **param3)\n\n{\n  int counter;\n  byte *buffer;\n  byte *value;\n  uint result;\n  \n  buffer = param3[2] + -1;\n  param3[2] = buffer;\n  if ((-1 < (int)buffer) ||\n     (((int)param3[6] <= (int)buffer && (buffer = (byte *)(uint)param2, buffer != (byte *)0xa))))\n  {\n    buffer = *param3;\n    *param3 = buffer + 1;\n    *buffer = param2;\n    return (uint)param2;\n  }\n  if ((param1 != 0) && (*(int *)(param1 + 0x18) == 0)) {\n    FUN_08009d50();\n  }\n  if (param3 == (byte **)&DAT_0800aba4) {\n    param3 = *(byte ***)(param1 + 4);\n  }\n  else if (param3 == (byte **)&DAT_0800abc4) {\n    param3 = *(byte ***)(param1 + 8);\n  }\n  else if (param3 == (byte **)&DAT_0800ab84) {\n    param3 = *(byte ***)(param1 + 0xc);\n  }\n  param3[2] = param3[6];\n  value = (byte *)(uint)*(ushort *)(param3 + 3);\n  counter = (int)value << 0x1c;\n  if (((counter < 0) && (value = param3[4], value != (byte *)0x0)) ||\n     (counter = FUN_08009a80(param1,param3,counter,value,buffer), counter == 0)) {\n    result = (uint)param2;\n    counter = (int)*param3 - (int)param3[4];\n    if ((counter < (int)param3[5]) || (counter = FUN_08009c7c(param1,param3), counter == 0)) {\n      param3[2] = param3[2] + -1;\n      buffer = *param3;\n      *param3 = buffer + 1;\n      *buffer = param2;\n      if ((byte *)(counter + 1) != param3[5]) {\n        if (-1 < (int)((uint)*(ushort *)(param3 + 3) << 0x1f)) {\n          return result;\n        }\n        if (result != 10) {\n          return result;\n        }\n      }\n      counter = FUN_08009c7c(param1,param3);\n      if (counter == 0) {\n        return result;\n      }\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800932c": "process_input_0800932c",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "iVar1": "counter",
                "pbVar2": "buffer",
                "pbVar3": "value",
                "uVar4": "result"
            },
            "calling": [
                "FUN_08009358"
            ],
            "called": [
                "FUN_08009c7c",
                "FUN_08009a80",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009358": {
            "entrypoint": "0x08009358",
            "current_name": "process_data_08009358",
            "code": "\nint processData_08009358(undefined4 input1,undefined4 input2,undefined *data,int length)\n\n{\n  int result;\n  undefined *endPtr;\n  int currentIndex;\n  \n  endPtr = data + length;\n  currentIndex = length;\n  do {\n    if (data == endPtr) {\n      return 0;\n    }\n    result = FUN_0800932c(input1,*data,input2,length,currentIndex);\n    length = result + 1;\n    data = data + 1;\n  } while (length != 0);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009358": "process_data_08009358",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "data",
                "param_4": "length",
                "iVar1": "result",
                "puVar2": "endPtr",
                "iVar3": "currentIndex"
            },
            "calling": [
                "FUN_0800937c"
            ],
            "called": [
                "FUN_0800932c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800937c": {
            "entrypoint": "0x0800937c",
            "current_name": "parse_input_0800937c",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08009550) */\n\nint parseInput_0800937c(int inputPtr,undefined4 *formatStr,byte *strPtr,int *countPtr)\n\n{\n  int result;\n  int *count;\n  bool isNumber;\n  byte *strIter;\n  byte *currentChar;\n  int maxCount;\n  int temp;\n  int *countPtr;\n  uint flags;\n  int precision;\n  undefined4 unaffVar;\n  int width;\n  int totalBytes;\n  byte conversion;\n  undefined local_6f;\n  undefined local_6e;\n  undefined local_45;\n  undefined4 local_30;\n  \n  countPtr = countPtr;\n  if ((inputPtr != 0) && (*(int *)(inputPtr + 0x18) == 0)) {\n    FUN_08009d50();\n  }\n  if (formatStr == &DAT_0800aba4) {\n    formatStr = *(undefined4 **)(inputPtr + 4);\n  }\n  else if (formatStr == (undefined4 *)&DAT_0800abc4) {\n    formatStr = *(undefined4 **)(inputPtr + 8);\n  }\n  else if (formatStr == (undefined4 *)&DAT_0800ab84) {\n    formatStr = *(undefined4 **)(inputPtr + 0xc);\n  }\n  if (((-1 < (int)((uint)*(ushort *)(formatStr + 3) << 0x1c)) || (formatStr[4] == 0)) &&\n     (temp = FUN_08009a80(inputPtr,formatStr), temp != 0)) {\n    return -1;\n  }\n  totalBytes = 0;\n  local_6f = 0x20;\n  local_6e = 0x30;\n  strIter = strPtr;\nLAB_080093be:\n  currentChar = strIter;\n  if (*currentChar != 0) goto LAB_08009474;\n  goto LAB_080093c8;\nLAB_08009474:\n  strIter = currentChar + 1;\n  if (*currentChar != 0x25) goto LAB_080093be;\nLAB_080093c8:\n  temp = (int)currentChar - (int)strPtr;\n  if (temp != 0) {\n    result = FUN_08009358(inputPtr,formatStr,strPtr,temp);\n    if (result == -1) {\nLAB_08009568:\n      if ((int)((uint)*(ushort *)(formatStr + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return totalBytes;\n    }\n    totalBytes = totalBytes + temp;\n  }\n  if (*currentChar == 0) goto LAB_08009568;\n  flags = 0;\n  width = 0;\n  precision = -1;\n  unaffVar = 0;\n  local_45 = 0;\n  local_30 = 0;\n  strIter = currentChar + 1;\n  while( true ) {\n    temp = FUN_08009f2c(\"#-0+ \",*strIter);\n    strPtr = strIter + 1;\n    if (temp == 0) break;\n    flags = 1 << (temp + 0xf7ff54b0U & 0xff) | flags;\n    strIter = strPtr;\n  }\n  if ((int)(flags << 0x1b) < 0) {\n    local_45 = 0x20;\n  }\n  if ((int)(flags << 0x1c) < 0) {\n    local_45 = 0x2b;\n  }\n  if (*strIter == 0x2a) {\n    count = countPtr + 1;\n    temp = *countPtr;\n    countPtr = count;\n    if (temp < 0) {\n      width = -temp;\n      flags = flags | 2;\n      goto LAB_080094a6;\n    }\n  }\n  else {\n    isNumber = false;\n    temp = width;\n    strPtr = strIter;\n    while( true ) {\n      if (9 < *strPtr - 0x30) break;\n      temp = temp * 10 + (*strPtr - 0x30);\n      isNumber = true;\n      strPtr = strPtr + 1;\n    }\n    if (!isNumber) goto LAB_080094a6;\n  }\n  width = temp;\nLAB_080094a6:\n  if (*strPtr == 0x2e) {\n    if (strPtr[1] == 0x2a) {\n      strPtr = strPtr + 2;\n      count = countPtr + 1;\n      precision = *countPtr;\n      countPtr = count;\n      if (precision < 0) {\n        precision = -1;\n      }\n    }\n    else {\n      isNumber = false;\n      temp = 0;\n      precision = 0;\n      while( true ) {\n        strPtr = strPtr + 1;\n        if (9 < *strPtr - 0x30) break;\n        temp = temp * 10 + (*strPtr - 0x30);\n        isNumber = true;\n      }\n      if (isNumber) {\n        precision = temp;\n      }\n    }\n  }\n  temp = FUN_08009f2c(&DAT_0800ab56,*strPtr,3);\n  if (temp != 0) {\n    strPtr = strPtr + 1;\n    flags = flags | 0x40 << (temp + 0xf7ff54aaU & 0xff);\n  }\n  conversion = *strPtr;\n  strPtr = strPtr + 1;\n  temp = FUN_08009f2c(\"efgEFG\",conversion,6);\n  if (temp == 0) {\n    maxCount = FUN_08009698(inputPtr,&flags,formatStr,0x8009359,&countPtr);\n    if (maxCount == -1) goto LAB_08009568;\n  }\n  else {\n    countPtr = (int *)(((int)countPtr + 7U & 0xfffffff8) + 8);\n  }\n  totalBytes = totalBytes + maxCount;\n  strIter = strPtr;\n  goto LAB_080093be;\n}\n\n",
            "renaming": {
                "FUN_0800937c": "parse_input_0800937c",
                "param_1": "inputPtr",
                "param_2": "formatStr",
                "param_3": "strPtr",
                "param_4": "countPtr",
                "iVar1": "result",
                "piVar2": "count",
                "bVar3": "isNumber",
                "pbVar4": "strIter",
                "pbVar5": "currentChar",
                "unaff_r9": "maxCount",
                "iVar6": "temp",
                "local_8c": "countPtr",
                "local_88": "flags",
                "local_84": "precision",
                "local_80": "unaffVar",
                "local_7c": "width",
                "local_74": "totalBytes",
                "local_70": "conversion"
            },
            "calling": [
                "FUN_080098d8",
                "FUN_08009124"
            ],
            "called": [
                "FUN_08009f2c",
                "FUN_08009358",
                "FUN_08009698",
                "FUN_08009a80",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080095a8": {
            "entrypoint": "0x080095a8",
            "current_name": "extract_data_080095a8",
            "code": "\nundefined4\nextract_data_080095a8(undefined4 data,uint *buffer,uint *length,undefined4 param,code *callback)\n\n{\n  int index;\n  int result;\n  uint max_length;\n  uint offset;\n  bool flag;\n  \n  max_length = buffer[4];\n  if ((int)buffer[4] < (int)buffer[2]) {\n    max_length = buffer[2];\n  }\n  *length = max_length;\n  if (*(char *)((int)buffer + 0x43) != '\\0') {\n    *length = max_length + 1;\n  }\n  if ((int)(*buffer << 0x1a) < 0) {\n    *length = *length + 2;\n  }\n  if ((*buffer & 6) == 0) {\n    for (index = 0; index < (int)(buffer[3] - *length); index = index + 1) {\n      result = (*callback)(data,param,(int)buffer + 0x19,1);\n      if (result == -1) {\n        return 0xffffffff;\n      }\n    }\n  }\n  max_length = (uint)*(byte *)((int)buffer + 0x43);\n  if (max_length != 0) {\n    max_length = 1;\n  }\n  offset = max_length;\n  if ((int)(*buffer << 0x1a) < 0) {\n    *(undefined *)((int)buffer + max_length + 0x43) = 0x30;\n    offset = max_length + 2;\n    *(undefined *)((int)buffer + max_length + 0x44) = *(undefined *)((int)buffer + 0x45);\n  }\n  index = (*callback)(data,param,(int)buffer + 0x43,offset);\n  if (index != -1) {\n    max_length = buffer[3];\n    flag = (*buffer & 6) != 4;\n    if (flag) {\n      max_length = 0;\n    }\n    offset = 0;\n    if (!flag) {\n      max_length = max_length - *length;\n    }\n    if (!flag) {\n      max_length = max_length & ~((int)max_length >> 0x1f);\n    }\n    if ((int)buffer[4] < (int)buffer[2]) {\n      max_length = max_length + (buffer[2] - buffer[4]);\n    }\n    while( true ) {\n      if (max_length == offset) {\n        return 0;\n      }\n      index = (*callback)(data,param,(int)buffer + 0x1a,1);\n      if (index == -1) break;\n      offset = offset + 1;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080095a8": "extract_data_080095a8",
                "param_1": "data",
                "param_2": "buffer",
                "param_3": "length",
                "param_4": "param",
                "param_5": "callback",
                "iVar1": "index",
                "iVar2": "result",
                "uVar3": "max_length",
                "uVar4": "offset",
                "bVar5": "flag"
            },
            "calling": [
                "FUN_08009698"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009698": {
            "entrypoint": "0x08009698",
            "current_name": "decode_and_process_data_08009698",
            "code": "\nuint decode_and_process_data_08009698(undefined4 input_value,uint *input_array,undefined4 param_3,code *callback_function,uint **ptr_to_count)\n\n{\n  byte byte_value;\n  int variable_2;\n  uint *pointer_3;\n  int variable_4;\n  char *char_pointer_5;\n  uint variable_6;\n  uint **pointer_to_pointer_7;\n  char **pointer_to_pointer_of_char_8;\n  uint variable_9;\n  uint variable_10;\n  char *char_pointer_11;\n  char *char_pointer_12;\n  uint local_array_24 [2];\n  \n  byte_value = *(byte *)(input_array + 6);\n  char_pointer_12 = (char *)((int)input_array + 0x43);\n  if (byte_value != 0x6e) {\n    if (byte_value < 0x6f) {\n      if (byte_value != 99) {\n        if (byte_value < 100) {\n          if (byte_value == 0) goto LAB_08009852;\n          if (byte_value != 0x58) goto LAB_080096c8;\n          *(undefined *)((int)input_array + 0x45) = 0x58;\n          char_pointer_5 = \"0123456789ABCDEF\";\nLAB_080097e2:\n          variable_6 = *input_array;\n          pointer_3 = *ptr_to_count;\n          *ptr_to_count = pointer_3 + 1;\n          if (((variable_6 & 0x80) == 0) && ((int)(variable_6 << 0x19) < 0)) {\n            variable_9 = (uint)*(ushort *)pointer_3;\n          }\n          else {\n            variable_9 = *pointer_3;\n          }\n          if ((int)(variable_6 << 0x1f) < 0) {\n            *input_array = variable_6 | 0x20;\n          }\n          if (variable_9 == 0) {\n            *input_array = *input_array & 0xffffffdf;\n          }\n          variable_6 = 0x10;\nLAB_08009778:\n          *(undefined *)((int)input_array + 0x43) = 0;\n        }\n        else {\n          if ((byte_value != 100) && (byte_value != 0x69)) goto LAB_080096c8;\n          variable_9 = *input_array;\n          pointer_3 = *ptr_to_count;\n          if ((variable_9 & 0x80) == 0) {\n            *ptr_to_count = pointer_3 + 1;\n            if ((variable_9 & 0x40) == 0) goto LAB_080096e8;\n            variable_9 = (uint)(short)*(ushort *)pointer_3;\n          }\n          else {\n            *ptr_to_count = pointer_3 + 1;\nLAB_080096e8:\n            variable_9 = *pointer_3;\n          }\n          if ((int)variable_9 < 0) {\n            variable_9 = -variable_9;\n            *(undefined *)((int)input_array + 0x43) = 0x2d;\n          }\n          char_pointer_5 = \"0123456789ABCDEF\";\n          variable_6 = 10;\n        }\n        variable_10 = input_array[1];\n        input_array[2] = variable_10;\n        char_pointer_11 = char_pointer_12;\n        if ((int)variable_10 < 0) {\n          if (variable_9 != 0) goto LAB_08009816;\nLAB_080098c4:\n          *(char *)((int)input_array + 0x42) = *char_pointer_5;\n          char_pointer_11 = (char *)((int)input_array + 0x42);\n        }\n        else {\n          *input_array = *input_array & 0xfffffffb;\n          if (variable_9 == 0) {\n            if (variable_10 != 0) goto LAB_080098c4;\n          }\n          else {\nLAB_08009816:\n            do {\n              variable_10 = variable_9 / variable_6;\n              char_pointer_11 = char_pointer_11 + -1;\n              *char_pointer_11 = char_pointer_5[variable_9 - variable_6 * variable_10];\n              variable_9 = variable_10;\n            } while (variable_10 != 0);\n          }\n        }\n        if (((variable_6 == 8) && ((int)(*input_array << 0x1f) < 0)) && ((int)input_array[1] <= (int)input_array[4]))\n        {\n          char_pointer_11[-1] = '0';\n          char_pointer_11 = char_pointer_11 + -1;\n        }\n        input_array[4] = (int)char_pointer_12 - (int)char_pointer_11;\n        char_pointer_12 = char_pointer_11;\n        goto LAB_080097be;\n      }\n      pointer_3 = *ptr_to_count;\n      *ptr_to_count = pointer_3 + 1;\n      *(char *)((int)input_array + 0x42) = (char)*pointer_3;\nLAB_08009728:\n      char_pointer_12 = (char *)((int)input_array + 0x42);\n      variable_9 = 1;\n    }\n    else {\n      if (byte_value != 0x73) {\n        if (byte_value < 0x74) {\n          if (byte_value == 0x6f) {\nLAB_0800974e:\n            variable_9 = *input_array;\n            pointer_3 = *ptr_to_count;\n            if ((variable_9 & 0x80) == 0) {\n              *ptr_to_count = pointer_3 + 1;\n              if ((variable_9 & 0x40) == 0) goto LAB_0800975c;\n              variable_9 = (uint)*(ushort *)pointer_3;\n            }\n            else {\n              *ptr_to_count = pointer_3 + 1;\nLAB_0800975c:\n              variable_9 = *pointer_3;\n            }\n            if (byte_value == 0x6f) {\n              variable_6 = 8;\n            }\n            else {\n              variable_6 = 10;\n            }\n            char_pointer_5 = \"0123456789ABCDEF\";\n            goto LAB_08009778;\n          }\n          if (byte_value == 0x70) {\n            *input_array = *input_array | 0x20;\nLAB_0800970e:\n            char_pointer_5 = \"0123456789abcdef\";\n            *(undefined *)((int)input_array + 0x45) = 0x78;\n            goto LAB_080097e2;\n          }\n        }\n        else {\n          if (byte_value == 0x75) goto LAB_0800974e;\n          if (byte_value == 0x78) goto LAB_0800970e;\n        }\nLAB_080096c8:\n        *(byte *)((int)input_array + 0x42) = byte_value;\n        goto LAB_08009728;\n      }\n      pointer_to_pointer_of_char_8 = (char **)*ptr_to_count;\n      *ptr_to_count = (uint *)(pointer_to_pointer_of_char_8 + 1);\n      char_pointer_12 = *pointer_to_pointer_of_char_8;\n      variable_2 = FUN_08009f2c(char_pointer_12,0,input_array[1]);\n      if (variable_2 != 0) {\n        input_array[1] = variable_2 - (int)char_pointer_12;\n      }\n      variable_9 = input_array[1];\n    }\n    input_array[4] = variable_9;\n    *(undefined *)((int)input_array + 0x43) = 0;\n    goto LAB_080097be;\n  }\n  variable_9 = *input_array;\n  pointer_to_pointer_7 = (uint **)*ptr_to_count;\n  variable_6 = input_array[5];\n  if ((variable_9 & 0x80) == 0) {\n    *ptr_to_count = (uint *)(pointer_to_pointer_7 + 1);\n    pointer_3 = *pointer_to_pointer_7;\n    if ((variable_9 & 0x40) == 0) goto LAB_0800983e;\n    *(short *)pointer_3 = (short)variable_6;\n  }\n  else {\n    *ptr_to_count = (uint *)(pointer_to_pointer_7 + 1);\n    pointer_3 = *pointer_to_pointer_7;\nLAB_0800983e:\n    *pointer_3 = variable_6;\n  }\nLAB_08009852:\n  input_array[4] = 0;\nLAB_080097be:\n  variable_2 = FUN_080095a8(input_value,input_array,local_array_24,param_3,callback_function);\n  if ((variable_2 == -1) || (variable_2 = (*callback_function)(input_value,param_3,char_pointer_12,input_array[4]), variable_2 == -1)) {\nLAB_080097d2:\n    variable_9 = 0xffffffff;\n  }\n  else {\n    if ((int)(*input_array << 0x1e) < 0) {\n      for (variable_2 = 0; variable_2 < (int)(input_array[3] - local_array_24[0]); variable_2 = variable_2 + 1) {\n        variable_4 = (*callback_function)(input_value,param_3,(int)input_array + 0x19,1);\n        if (variable_4 == -1) goto LAB_080097d2;\n      }\n    }\n    variable_9 = input_array[3];\n    if ((int)input_array[3] < (int)local_array_24[0]) {\n      variable_9 = local_array_24[0];\n    }\n  }\n  return variable_9;\n}\n\n",
            "renaming": {
                "FUN_08009698": "decode_and_process_data_08009698",
                "param_1": "input_value",
                "param_2": "input_array",
                "param_4": "callback_function",
                "param_5": "ptr_to_count",
                "bVar1": "byte_value",
                "iVar2": "variable_2",
                "puVar3": "pointer_3",
                "iVar4": "variable_4",
                "pcVar5": "char_pointer_5",
                "uVar6": "variable_6",
                "uVar9": "variable_9",
                "uVar10": "variable_10",
                "pcVar11": "char_pointer_11",
                "pcVar12": "char_pointer_12",
                "local_24": "local_array_24",
                "ppuVar7": "pointer_to_pointer_7",
                "ppcVar8": "pointer_to_pointer_of_char_8"
            },
            "calling": [
                "FUN_0800937c"
            ],
            "called": [
                "FUN_08009f2c",
                "FUN_080095a8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080098d8": {
            "entrypoint": "0x080098d8",
            "current_name": "initialize_and_call_function_080098d8",
            "code": "\nvoid initializeAndCallFunction_080098d8(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  int dataPtr;\n  undefined4 arg1Backup;\n  undefined4 localVariable1;\n  undefined4 localVariable2;\n  undefined4 localVariable3;\n  \n  dataPtr = DAT_20000090;\n  arg1Backup = arg1;\n  localVariable1 = arg2;\n  localVariable2 = arg3;\n  localVariable3 = arg4;\n  if ((DAT_20000090 != 0) && (*(int *)(DAT_20000090 + 0x18) == 0)) {\n    FUN_08009d50(DAT_20000090);\n  }\n  FUN_0800937c(dataPtr,*(undefined4 *)(dataPtr + 8),arg1,&localVariable1,arg1Backup,&localVariable1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080098d8": "initialize_and_call_function_080098d8",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "iVar1": "dataPtr",
                "uVar2": "arg1Backup",
                "uStack_c": "localVariable1",
                "uStack_8": "localVariable2",
                "uStack_4": "localVariable3"
            },
            "calling": [
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08007544",
                "FUN_08007594",
                "FUN_080075dc"
            ],
            "called": [
                "FUN_0800937c",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009908": {
            "entrypoint": "0x08009908",
            "current_name": "validate_param_08009908",
            "code": "\nint validate_param_08009908(int input_param,uint limit)\n\n{\n  undefined4 data;\n  int result;\n  uint value;\n  \n  data = DAT_20000090;\n  if (input_param != 0) {\n    if (limit == 0) {\n      FUN_080091d8();\n      result = 0;\n    }\n    else {\n      value = FUN_0800a154();\n      result = input_param;\n      if ((value < limit) && (result = FUN_08009270(data,limit), result != 0)) {\n        FUN_080091b0(result,input_param,limit);\n        FUN_080091d8(data,input_param);\n      }\n    }\n    return result;\n  }\n  result = FUN_08009270(DAT_20000090,limit,limit,&DAT_20000090);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009908": "validate_param_08009908",
                "param_1": "input_param",
                "param_2": "limit",
                "uVar1": "data",
                "iVar2": "result",
                "uVar3": "value"
            },
            "calling": [
                "FUN_080027f0",
                "FUN_08002acc",
                "FUN_0800288c"
            ],
            "called": [
                "FUN_080091d8",
                "FUN_0800a154",
                "FUN_080091b0",
                "FUN_08009270"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009918": {
            "entrypoint": "0x08009918",
            "current_name": "initialize_and_assign_value_08009918",
            "code": "\nvoid initializeAndAssignValue_08009918(int *resultPointer,undefined4 inputValue)\n\n{\n  int functionResult;\n  \n  DAT_20000a38 = 0;\n  functionResult = FUN_08008804(inputValue);\n  if ((functionResult == -1) && (DAT_20000a38 != 0)) {\n    *resultPointer = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009918": "initialize_and_assign_value_08009918",
                "param_1": "resultPointer",
                "param_2": "inputValue",
                "iVar1": "functionResult"
            },
            "calling": [
                "FUN_08009270"
            ],
            "called": [
                "FUN_08008804"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009938": {
            "entrypoint": "0x08009938",
            "current_name": "find_character_in_string_08009938",
            "code": "\nchar * find_character_in_string_08009938(char *input_string,char character)\n\n{\n  char *current_character;\n  \n  do {\n    current_character = input_string;\n    if (*current_character == '\\0') {\n      if (character != '\\0') {\n        current_character = (char *)0x0;\n      }\n      return current_character;\n    }\n    input_string = current_character + 1;\n  } while (character != *current_character);\n  return current_character;\n}\n\n",
            "renaming": {
                "FUN_08009938": "find_character_in_string_08009938",
                "param_1": "input_string",
                "param_2": "character",
                "pcVar1": "current_character"
            },
            "calling": [
                "FUN_0800997e"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009954": {
            "entrypoint": "0x08009954",
            "current_name": "copy_string_with_length_08009954",
            "code": "\nvoid copyStringWithLength_08009954(char *destination,char *source,int length)\n\n{\n  char currentChar;\n  int remainingLength;\n  char *destinationPtr;\n  \n  do {\n    destinationPtr = destination;\n    remainingLength = length;\n    if (remainingLength == 0) {\n      return;\n    }\n    currentChar = *source;\n    destination = destinationPtr + 1;\n    *destinationPtr = currentChar;\n    source = source + 1;\n    length = remainingLength + -1;\n  } while (currentChar != '\\0');\n  for (; destination != destinationPtr + remainingLength; destination = destination + 1) {\n    *destination = '\\0';\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009954": "copy_string_with_length_08009954",
                "param_1": "destination",
                "param_2": "source",
                "param_3": "length",
                "cVar1": "currentChar",
                "iVar2": "remainingLength",
                "pcVar3": "destinationPtr"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800997e": {
            "entrypoint": "0x0800997e",
            "current_name": "find_last_occurrence_0800997e",
            "code": "\nint findLastOccurrence_0800997e(int array,int size,undefined4 param_3,undefined4 param_4)\n\n{\n  int index;\n  int lastOccurrence;\n  \n  if (size != 0) {\n    lastOccurrence = 0;\n    while (index = FUN_08009938(array,size,param_3,array,param_4), index != 0) {\n      array = index + 1;\n      lastOccurrence = index;\n    }\n    return lastOccurrence;\n  }\n  lastOccurrence = FUN_08009938();\n  return lastOccurrence;\n}\n\n",
            "renaming": {
                "FUN_0800997e": "find_last_occurrence_0800997e",
                "param_1": "array",
                "param_2": "size",
                "iVar1": "index",
                "iVar2": "lastOccurrence"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [
                "FUN_08009938"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080099a4": {
            "entrypoint": "0x080099a4",
            "current_name": "find_first_occurrence_080099a4",
            "code": "\nchar * find_first_occurrence_080099a4(char *string1,char *string2)\n\n{\n  char *current_char1;\n  char *current_char2;\n  char *temp_char;\n  \n  if (*string1 == '\\0') {\n    if (*string2 != '\\0') {\n      string1 = (char *)0x0;\n    }\n    return string1;\n  }\n  do {\n    current_char1 = string1;\n    if (*current_char1 == '\\0') {\n      return (char *)0x0;\n    }\n    temp_char = string2 + -1;\n    current_char2 = current_char1 + -1;\n    do {\n      temp_char = temp_char + 1;\n      if (*temp_char == '\\0') {\n        return current_char1;\n      }\n      current_char2 = current_char2 + 1;\n      string1 = current_char1 + 1;\n    } while (*current_char2 == *temp_char);\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080099a4": "find_first_occurrence_080099a4",
                "param_1": "string1",
                "param_2": "string2",
                "pcVar1": "current_char1",
                "pcVar2": "current_char2",
                "pcVar3": "temp_char"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009a80": {
            "entrypoint": "0x08009a80",
            "current_name": "validate_and_transform_data_08009a80",
            "code": "\nuint validate_and_transform_data_08009a80(undefined4 *input_dest,undefined4 *input_data)\n\n{\n  int data_ptr;\n  uint result;\n  ushort data_flag;\n  \n  data_ptr = DAT_20000090;\n  if ((DAT_20000090 != 0) && (*(int *)(DAT_20000090 + 0x18) == 0)) {\n    FUN_08009d50(DAT_20000090);\n  }\n  if (input_data == &DAT_0800aba4) {\n    input_data = *(undefined4 **)(data_ptr + 4);\n  }\n  else if (input_data == (undefined4 *)&DAT_0800abc4) {\n    input_data = *(undefined4 **)(data_ptr + 8);\n  }\n  else if (input_data == (undefined4 *)&DAT_0800ab84) {\n    input_data = *(undefined4 **)(data_ptr + 0xc);\n  }\n  data_flag = *(ushort *)(input_data + 3);\n  result = (uint)data_flag;\n  if (-1 < (int)(result << 0x1c)) {\n    if (-1 < (int)(result << 0x1b)) {\n      *input_dest = 9;\n      goto LAB_08009ab0;\n    }\n    if ((int)(result << 0x1d) < 0) {\n      if ((undefined4 *)input_data[0xd] != (undefined4 *)0x0) {\n        if ((undefined4 *)input_data[0xd] != input_data + 0x11) {\n          FUN_080091d8(input_dest);\n        }\n        input_data[0xd] = 0;\n      }\n      *(ushort *)(input_data + 3) = *(ushort *)(input_data + 3) & 0xffdb;\n      input_data[1] = 0;\n      *input_data = input_data[4];\n    }\n    *(ushort *)(input_data + 3) = *(ushort *)(input_data + 3) | 8;\n  }\n  if ((input_data[4] == 0) && ((*(ushort *)(input_data + 3) & 0x280) != 0x200)) {\n    FUN_08009eac(input_dest,input_data);\n  }\n  data_flag = *(ushort *)(input_data + 3);\n  result = data_flag & 1;\n  if ((data_flag & 1) == 0) {\n    if (-1 < (int)((uint)data_flag << 0x1e)) {\n      result = input_data[5];\n    }\n    input_data[2] = result;\n  }\n  else {\n    input_data[2] = 0;\n    input_data[6] = -input_data[5];\n  }\n  if (input_data[4] == 0) {\n    data_flag = *(ushort *)(input_data + 3);\n    result = (int)(short)data_flag & 0x80;\n    if (result != 0) {\nLAB_08009ab0:\n      *(ushort *)(input_data + 3) = data_flag | 0x40;\n      return 0xffffffff;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009a80": "validate_and_transform_data_08009a80",
                "param_1": "input_dest",
                "param_2": "input_data",
                "iVar1": "data_ptr",
                "uVar2": "result",
                "uVar3": "data_flag"
            },
            "calling": [
                "FUN_0800937c",
                "FUN_0800932c"
            ],
            "called": [
                "FUN_080091d8",
                "FUN_08009eac",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009b5c": {
            "entrypoint": "0x08009b5c",
            "current_name": "process_data_08009b5c",
            "code": "\nvoid processData_08009b5c(void)\n\n{\n  uint *dataPointer;\n  int offset;\n  int *pointerArray;\n  int *tempPointerArray;\n  uint ushortValue;\n  ushort modifiedUshortValue;\n  int tempValue;\n  code *functionPointer;\n  int tempVariable;\n  uint tempValue2;\n  code *unrecoveredJumptableFunction;\n  bool isConditionTrue;\n  undefined8 recoveredValue;\n  \n  FUN_08009fe8(6);\n  unrecoveredJumptableFunction = (code *)0x8009b6b;\n  recoveredValue = FUN_08008868(1);\n  pointerArray = (int *)((ulonglong)recoveredValue >> 0x20);\n  dataPointer = (uint *)recoveredValue;\n  modifiedUshortValue = *(ushort *)(pointerArray + 3);\n  ushortValue = (uint)modifiedUshortValue;\n  if ((int)(ushortValue << 0x1c) < 0) {\n    offset = pointerArray[4];\n    if (offset != 0) {\n      tempValue = ushortValue << 0x1e;\n      isConditionTrue = tempValue != 0;\n      if (isConditionTrue) {\n        tempValue = 0;\n      }\n      tempVariable = *pointerArray;\n      if (!isConditionTrue) {\n        tempValue = pointerArray[5];\n      }\n      *pointerArray = offset;\n      pointerArray[2] = tempValue;\n      for (tempVariable = tempVariable - offset; 0 < tempVariable; tempVariable = tempVariable - tempValue) {\n        tempValue = (*(code *)pointerArray[10])(dataPointer,pointerArray[8],offset,tempVariable);\n        if (tempValue < 1) {\n          modifiedUshortValue = *(ushort *)(pointerArray + 3);\n          goto LAB_08009c62;\n        }\n        offset = offset + tempValue;\n      }\n    }\n  }\n  else if (((0 < pointerArray[1]) || (0 < pointerArray[0x10])) &&\n          (functionPointer = (code *)pointerArray[0xb], functionPointer != (code *)0x0)) {\n    tempValue2 = *dataPointer;\n    *dataPointer = 0;\n    if ((modifiedUshortValue & 0x1000) == 0) {\n      offset = (*functionPointer)(dataPointer,pointerArray[8],ushortValue & 0x1000,1);\n      if ((offset == -1) && (ushortValue = *dataPointer, ushortValue != 0)) {\n        if ((ushortValue != 0x1d) && (ushortValue != 0x16)) {\n          *(ushort *)(pointerArray + 3) = *(ushort *)(pointerArray + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c2c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          (*unrecoveredJumptableFunction)();\n          return;\n        }\n        *dataPointer = tempValue2;\n        goto LAB_08009b86;\n      }\n    }\n    else {\n      offset = pointerArray[0x15];\n    }\n    if (((int)((uint)*(ushort *)(pointerArray + 3) << 0x1d) < 0) &&\n       (offset = offset - pointerArray[1], pointerArray[0xd] != 0)) {\n      offset = offset - pointerArray[0x10];\n    }\n    offset = (*(code *)pointerArray[0xb])(dataPointer,pointerArray[8],offset,0);\n    modifiedUshortValue = *(ushort *)(pointerArray + 3);\n    if ((offset == -1) &&\n       ((0x1d < *dataPointer || (-1 < (int)((0x20400001U >> (*dataPointer & 0xff)) << 0x1f))))) {\nLAB_08009c62:\n      *(ushort *)(pointerArray + 3) = modifiedUshortValue | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c6c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*unrecoveredJumptableFunction)(0xffffffff);\n      return;\n    }\n    pointerArray[1] = 0;\n    *pointerArray = pointerArray[4];\n    if (((int)((uint)modifiedUshortValue << 0x13) < 0) && ((offset != -1 || (*dataPointer == 0)))) {\n      pointerArray[0x15] = offset;\n    }\n    tempPointerArray = (int *)pointerArray[0xd];\n    *dataPointer = tempValue2;\n    if (tempPointerArray != (int *)0x0) {\n      if (tempPointerArray != pointerArray + 0x11) {\n        FUN_080091d8(dataPointer);\n      }\n      pointerArray[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08009c02. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*unrecoveredJumptableFunction)();\n      return;\n    }\n  }\nLAB_08009b86:\n                    /* WARNING: Could not recover jumptable at 0x08009b88. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*unrecoveredJumptableFunction)(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009b5c": "process_data_08009b5c",
                "puVar1": "dataPointer",
                "iVar2": "offset",
                "piVar3": "pointerArray",
                "piVar4": "tempPointerArray",
                "uVar5": "ushortValue",
                "uVar6": "modifiedUshortValue",
                "iVar7": "tempValue",
                "pcVar8": "functionPointer",
                "iVar9": "tempVariable",
                "uVar10": "tempValue2",
                "UNRECOVERED_JUMPTABLE_00": "unrecoveredJumptableFunction",
                "bVar11": "isConditionTrue",
                "uVar12": "recoveredValue"
            },
            "calling": [
                "FUN_080090cc",
                "FUN_0800a18c"
            ],
            "called": [
                "FUN_080091d8",
                "FUN_08008868",
                "FUN_08009fe8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009c7c": {
            "entrypoint": "0x08009c7c",
            "current_name": "process_data_08009c7c",
            "code": "\nundefined4 processData_08009c7c(uint *inputData,int *outputData)\n\n{\n  undefined4 returnValue;\n  int tempVar1;\n  int *tempVar2;\n  uint tempVar3;\n  ushort tempVar4;\n  int tempVar5;\n  undefined4 unaffectedVar1;\n  undefined4 unaffectedVar2;\n  code *functionPtr;\n  int loopVar;\n  uint tempVar6;\n  code *jumpTable;\n  bool checkVar;\n  \n  if (outputData[4] != 0) {\n    if ((inputData != (uint *)0x0) && (inputData[6] == 0)) {\n      FUN_08009d50();\n    }\n    if (outputData == &DAT_0800aba4) {\n      outputData = (int *)inputData[1];\n    }\n    else if (outputData == (int *)&DAT_0800abc4) {\n      outputData = (int *)inputData[2];\n    }\n    else if (outputData == (int *)&DAT_0800ab84) {\n      outputData = (int *)inputData[3];\n    }\n    if (*(short *)(outputData + 3) != 0) {\n      tempVar4 = *(ushort *)(outputData + 3);\n      tempVar3 = (uint)tempVar4;\n      if ((int)(tempVar3 << 0x1c) < 0) {\n        tempVar1 = outputData[4];\n        if (tempVar1 != 0) {\n          tempVar5 = tempVar3 << 0x1e;\n          checkVar = tempVar5 != 0;\n          if (checkVar) {\n            tempVar5 = 0;\n          }\n          loopVar = *outputData;\n          if (!checkVar) {\n            tempVar5 = outputData[5];\n          }\n          *outputData = tempVar1;\n          outputData[2] = tempVar5;\n          for (loopVar = loopVar - tempVar1; 0 < loopVar; loopVar = loopVar - tempVar5) {\n            tempVar5 = (*(code *)outputData[10])(inputData,outputData[8],tempVar1,loopVar,unaffectedVar1,unaffectedVar2);\n            if (tempVar5 < 1) {\n              tempVar4 = *(ushort *)(outputData + 3);\n              goto LAB_08009c62;\n            }\n            tempVar1 = tempVar1 + tempVar5;\n          }\n        }\n      }\n      else if (((0 < outputData[1]) || (0 < outputData[0x10])) &&\n              (functionPtr = (code *)outputData[0xb], functionPtr != (code *)0x0)) {\n        tempVar6 = *inputData;\n        *inputData = 0;\n        if ((tempVar4 & 0x1000) == 0) {\n          tempVar1 = (*functionPtr)(inputData,outputData[8],tempVar3 & 0x1000,1);\n          if ((tempVar1 == -1) && (tempVar3 = *inputData, tempVar3 != 0)) {\n            if ((tempVar3 != 0x1d) && (tempVar3 != 0x16)) {\n              *(ushort *)(outputData + 3) = *(ushort *)(outputData + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c2c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n              returnValue = (*jumpTable)();\n              return returnValue;\n            }\n            *inputData = tempVar6;\n            goto LAB_08009b86;\n          }\n        }\n        else {\n          tempVar1 = outputData[0x15];\n        }\n        if (((int)((uint)*(ushort *)(outputData + 3) << 0x1d) < 0) &&\n           (tempVar1 = tempVar1 - outputData[1], outputData[0xd] != 0)) {\n          tempVar1 = tempVar1 - outputData[0x10];\n        }\n        tempVar1 = (*(code *)outputData[0xb])(inputData,outputData[8],tempVar1,0);\n        tempVar4 = *(ushort *)(outputData + 3);\n        if ((tempVar1 == -1) &&\n           ((0x1d < *inputData || (-1 < (int)((0x20400001U >> (*inputData & 0xff)) << 0x1f))))) {\nLAB_08009c62:\n          *(ushort *)(outputData + 3) = tempVar4 | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c6c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          returnValue = (*jumpTable)(0xffffffff);\n          return returnValue;\n        }\n        outputData[1] = 0;\n        *outputData = outputData[4];\n        if (((int)((uint)tempVar4 << 0x13) < 0) && ((tempVar1 != -1 || (*inputData == 0)))) {\n          outputData[0x15] = tempVar1;\n        }\n        tempVar2 = (int *)outputData[0xd];\n        *inputData = tempVar6;\n        if (tempVar2 != (int *)0x0) {\n          if (tempVar2 != outputData + 0x11) {\n            FUN_080091d8(inputData);\n          }\n          outputData[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08009c02. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          returnValue = (*jumpTable)();\n          return returnValue;\n        }\n      }\nLAB_08009b86:\n                    /* WARNING: Could not recover jumptable at 0x08009b88. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      returnValue = (*jumpTable)(0);\n      return returnValue;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08009c7c": "process_data_08009c7c",
                "param_1": "inputData",
                "param_2": "outputData",
                "uVar1": "returnValue",
                "iVar2": "tempVar1",
                "piVar3": "tempVar2",
                "uVar4": "tempVar3",
                "uVar5": "tempVar4",
                "iVar6": "tempVar5",
                "unaff_r4": "unaffectedVar1",
                "unaff_r5": "unaffectedVar2",
                "pcVar7": "functionPtr",
                "iVar8": "loopVar",
                "uVar9": "tempVar6",
                "UNRECOVERED_JUMPTABLE_00": "jumpTable",
                "bVar10": "checkVar"
            },
            "calling": [
                "FUN_0800932c"
            ],
            "called": [
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009cdc": {
            "entrypoint": "0x08009cdc",
            "current_name": "initialize_data_08009cdc",
            "code": "\nvoid initializeData_08009cdc(undefined4 *data,undefined2 value1,undefined2 value2)\n\n{\n  *data = 0;\n  data[1] = 0;\n  data[2] = 0;\n  *(undefined2 *)(data + 3) = value1;\n  data[0x19] = 0;\n  *(undefined2 *)((int)data + 0xe) = value2;\n  data[4] = 0;\n  data[5] = 0;\n  data[6] = 0;\n  FUN_080091c6(data + 0x17,0,8);\n  data[8] = data;\n  data[9] = 0x800a021;\n  data[10] = 0x800a043;\n  data[0xb] = 0x800a07b;\n  data[0xc] = &label;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009cdc": "initialize_data_08009cdc",
                "param_1": "data",
                "param_2": "value1",
                "param_3": "value2",
                "LAB_0800a09e_1": "label"
            },
            "calling": [
                "FUN_08009d50"
            ],
            "called": [
                "FUN_080091c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009d24": {
            "entrypoint": "0x08009d24",
            "current_name": "initialize_data_structure_08009d24",
            "code": "\nundefined4 * initializeDataStructure_08009d24(undefined4 data,int size)\n\n{\n  undefined4 *ptr;\n  int offset;\n  \n  offset = (size + -1) * 0x68;\n  ptr = (undefined4 *)FUN_08009270(data,offset + 0x74);\n  if (ptr != (undefined4 *)0x0) {\n    *ptr = 0;\n    ptr[1] = size;\n    ptr[2] = ptr + 3;\n    FUN_080091c6(ptr + 3,0,offset + 0x68);\n  }\n  return ptr;\n}\n\n",
            "renaming": {
                "FUN_08009d24": "initialize_data_structure_08009d24",
                "param_1": "data",
                "param_2": "size",
                "puVar1": "ptr",
                "iVar2": "offset"
            },
            "calling": [
                "FUN_08009db0"
            ],
            "called": [
                "FUN_080091c6",
                "FUN_08009270"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009d50": {
            "entrypoint": "0x08009d50",
            "current_name": "initialize_parameters_08009d50",
            "code": "\nvoid initializeParameters_08009d50(undefined4 *parameters)\n\n{\n  undefined4 returnValue;\n  undefined4 *tempPointer;\n  \n  if (parameters[6] == 0) {\n    parameters[0x12] = 0;\n    parameters[0x13] = 0;\n    parameters[0x14] = 0;\n    tempPointer = &DAT_20000094;\n    parameters[10] = &functionPointer;\n    if (parameters == &DAT_20000094) {\n      tempPointer = (undefined4 *)0x1;\n    }\n    if (parameters == &DAT_20000094) {\n      parameters[6] = tempPointer;\n    }\n    returnValue = FUN_08009db0();\n    parameters[1] = returnValue;\n    returnValue = FUN_08009db0(parameters);\n    parameters[2] = returnValue;\n    returnValue = FUN_08009db0(parameters);\n    parameters[3] = returnValue;\n    FUN_08009cdc(parameters[1],4,0);\n    FUN_08009cdc(parameters[2],9,1);\n    FUN_08009cdc(parameters[3],0x12,2);\n    parameters[6] = 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009d50": "initialize_parameters_08009d50",
                "param_1": "parameters",
                "uVar1": "returnValue",
                "puVar2": "tempPointer",
                "LAB_08009cd0_1": "functionPointer"
            },
            "calling": [
                "FUN_08009c7c",
                "FUN_080098d8",
                "FUN_0800937c",
                "FUN_0800932c",
                "FUN_08009db0",
                "FUN_08009a80"
            ],
            "called": [
                "FUN_08009cdc",
                "FUN_08009db0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009db0": {
            "entrypoint": "0x08009db0",
            "current_name": "process_data_08009db0",
            "code": "\nint * processData_08009db0(undefined4 *input,undefined4 size,undefined4 temp1,undefined4 temp2)\n\n{\n  int *currentElement;\n  int *currentSubElement;\n  int **ptrToPtr;\n  \n  if (DAT_200000ac == 0) {\n    FUN_08009d50(&DAT_20000094);\n  }\n  ptrToPtr = (int **)&DAT_200000dc;\n  do {\n    currentSubElement = ptrToPtr[2];\n    currentElement = ptrToPtr[1];\n    while (currentElement = (int *)((int)currentElement + -1), -1 < (int)currentElement) {\n      if (*(short *)(currentSubElement + 3) == 0) {\n        *(undefined2 *)((int)currentSubElement + 0xe) = 0xffff;\n        currentSubElement[0x19] = 0;\n        *(undefined2 *)(currentSubElement + 3) = 1;\n        *currentSubElement = 0;\n        currentSubElement[2] = 0;\n        currentSubElement[1] = 0;\n        currentSubElement[4] = 0;\n        currentSubElement[5] = 0;\n        currentSubElement[6] = 0;\n        FUN_080091c6(currentSubElement + 0x17,0,8,1,temp2);\n        currentSubElement[0xd] = 0;\n        currentSubElement[0xe] = 0;\n        currentSubElement[0x12] = 0;\n        currentSubElement[0x13] = 0;\n        return currentSubElement;\n      }\n      currentSubElement = currentSubElement + 0x1a;\n    }\n    if (*ptrToPtr == (int *)0x0) {\n      currentElement = (int *)FUN_08009d24(input,4);\n      *ptrToPtr = currentElement;\n      if (currentElement == (int *)0x0) {\n        *input = 0xc;\n        return (int *)0x0;\n      }\n    }\n    ptrToPtr = (int **)*ptrToPtr;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08009db0": "process_data_08009db0",
                "param_1": "input",
                "param_2": "size",
                "param_3": "temp1",
                "param_4": "temp2",
                "piVar1": "currentElement",
                "piVar2": "currentSubElement",
                "ppiVar3": "ptrToPtr"
            },
            "calling": [
                "FUN_08009d50"
            ],
            "called": [
                "FUN_080091c6",
                "FUN_08009d24",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009e64": {
            "entrypoint": "0x08009e64",
            "current_name": "calculate_permissions_08009e64",
            "code": "\nundefined4 calculatePermissions_08009e64(undefined4 param1,int param2,undefined4 *outputParam,uint *resultParam)\n\n{\n  int returnValue;\n  undefined4 permissionsValue;\n  undefined temporaryBuffer [4];\n  uint flagsValue;\n  \n  if ((*(short *)(param2 + 0xe) < 0) ||\n     (returnValue = FUN_0800a0ec(param1,(int)*(short *)(param2 + 0xe),temporaryBuffer), returnValue < 0)) {\n    *resultParam = 0;\n    if ((int)((uint)*(ushort *)(param2 + 0xc) << 0x18) < 0) {\n      permissionsValue = 0x40;\n      goto LAB_08009ea4;\n    }\n  }\n  else {\n    *resultParam = (uint)((flagsValue & 0xf000) == 0x2000);\n  }\n  permissionsValue = 0x400;\nLAB_08009ea4:\n  *outputParam = permissionsValue;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08009e64": "calculate_permissions_08009e64",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "outputParam",
                "param_4": "resultParam",
                "iVar1": "returnValue",
                "auStack_4c": "temporaryBuffer",
                "local_48": "flagsValue",
                "uVar2": "permissionsValue"
            },
            "calling": [
                "FUN_08009eac"
            ],
            "called": [
                "FUN_0800a0ec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009eac": {
            "entrypoint": "0x08009eac",
            "current_name": "process_params_08009eac",
            "code": "\nvoid processParams_08009eac(int input_value,int *param_array)\n\n{\n  ushort result;\n  int output_value;\n  int local_value;\n  int *local_array;\n  \n  if (-1 < (int)((uint)*(ushort *)(param_array + 3) << 0x1e)) {\n    local_value = input_value;\n    local_array = param_array;\n    result = FUN_08009e64(input_value,param_array,&local_value,&local_array);\n    output_value = FUN_08009270(input_value,local_value);\n    if (output_value != 0) {\n      *(undefined **)(input_value + 0x28) = &LAB_08009cd0_1;\n      *param_array = output_value;\n      *(ushort *)(param_array + 3) = *(ushort *)(param_array + 3) | 0x80;\n      param_array[4] = output_value;\n      param_array[5] = local_value;\n      if ((local_array != (int *)0x0) &&\n         (output_value = FUN_0800a110(input_value,(int)*(short *)((int)param_array + 0xe)), output_value != 0)) {\n        *(ushort *)(param_array + 3) = *(ushort *)(param_array + 3) & 0xfffc | 1;\n      }\n      *(ushort *)(param_array + 3) = result | *(ushort *)(param_array + 3);\n      return;\n    }\n    if ((int)(short)*(ushort *)(param_array + 3) << 0x16 < 0) {\n      return;\n    }\n    *(ushort *)(param_array + 3) = *(ushort *)(param_array + 3) & 0xfffc | 2;\n  }\n  *param_array = (int)param_array + 0x47;\n  param_array[4] = (int)param_array + 0x47;\n  param_array[5] = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009eac": "process_params_08009eac",
                "param_1": "input_value",
                "param_2": "param_array",
                "uVar1": "result",
                "iVar2": "output_value",
                "local_18": "local_value",
                "local_14": "local_array"
            },
            "calling": [
                "FUN_08009a80"
            ],
            "called": [
                "FUN_08009270",
                "FUN_0800a110",
                "FUN_08009e64"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009f2c": {
            "entrypoint": "0x08009f2c",
            "current_name": "find_character_08009f2c",
            "code": "\nchar * find_character_08009f2c(char *string,char character,int length)\n\n{\n  char *current_char;\n  char *next_char;\n  \n  current_char = string;\n  do {\n    next_char = current_char;\n    if (next_char == string + length) {\n      return (char *)0x0;\n    }\n    current_char = next_char + 1;\n  } while (*next_char != character);\n  return next_char;\n}\n\n",
            "renaming": {
                "FUN_08009f2c": "find_character_08009f2c",
                "param_1": "string",
                "param_2": "character",
                "param_3": "length",
                "pcVar1": "current_char",
                "pcVar2": "next_char"
            },
            "calling": [
                "FUN_0800937c",
                "FUN_08009698"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009f48": {
            "entrypoint": "0x08009f48",
            "current_name": "FUNC_08009f48",
            "code": "\nvoid FUNC_08009f48(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009f48": "FUNC_08009f48"
            },
            "calling": [
                "FUN_080091d8",
                "FUN_08009270"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08009f4a": {
            "entrypoint": "0x08009f4a",
            "current_name": "FUNC_08009f4a",
            "code": "\nvoid FUNC_08009f4a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009f4a": "FUNC_08009f4a"
            },
            "calling": [
                "FUN_080091d8",
                "FUN_08009270"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08009fe8": {
            "entrypoint": "0x08009fe8",
            "current_name": "execute_function_08009fe8",
            "code": "\nint executeFunction_08009fe8(uint input)\n\n{\n  int *functionList;\n  undefined4 returnValue;\n  int temp;\n  code *functionPointer;\n  undefined4 unaff_r4;\n  undefined4 unaff_r5;\n  undefined4 in_lr;\n  undefined4 *functionListPointer;\n  \n  functionList = DAT_20000090;\n  functionListPointer = &DAT_20000090;\n  if (0x1f < input) {\n    *DAT_20000090 = 0x16;\n    return -1;\n  }\n  temp = DAT_20000090[0x11];\n  if ((temp != 0) && (functionPointer = *(code **)(temp + input * 4), functionPointer != (code *)0x0)) {\n    if (functionPointer != (code *)0x1) {\n      if (functionPointer == (code *)0xffffffff) {\n        *DAT_20000090 = 0x16;\n        return 1;\n      }\n      *(undefined4 *)(temp + input * 4) = 0;\n      (*functionPointer)(input);\n    }\n    return 0;\n  }\n  returnValue = thunk_FUN_0800887c(DAT_20000090);\n  DAT_20000a38 = 0;\n  temp = FUN_0800886c(returnValue,input,input,0,functionListPointer,unaff_r4,unaff_r5,in_lr);\n  if ((temp == -1) && (DAT_20000a38 != 0)) {\n    *functionList = DAT_20000a38;\n  }\n  return temp;\n}\n\n",
            "renaming": {
                "FUN_08009fe8": "execute_function_08009fe8",
                "param_1": "input",
                "piVar1": "functionList",
                "uVar2": "returnValue",
                "iVar3": "temp",
                "pcVar4": "functionPointer",
                "puVar5": "functionListPointer"
            },
            "calling": [
                "FUN_08009b5c"
            ],
            "called": [
                "thunk_FUN_0800887c",
                "FUN_0800886c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_0800887c": {
            "entrypoint": "0x0800a01c",
            "current_name": "get_return_value_thunk_0800887c",
            "code": "\nundefined4 getReturnValue_thunk_0800887c(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "thunk_FUN_0800887c": "get_return_value_thunk_0800887c"
            },
            "calling": [
                "FUN_08009fe8"
            ],
            "called": [
                "FUN_0800887c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a020": {
            "entrypoint": "0x0800a020",
            "current_name": "update_values_0800a020",
            "code": "\nvoid updateValues_0800a020(undefined4 input1,int input2)\n\n{\n  int result1;\n  uint result2;\n  bool isPositive;\n  \n  result1 = FUN_0800a168(input1,(int)*(short *)(input2 + 0xe));\n  isPositive = -1 < result1;\n  if (isPositive) {\n    result2 = *(int *)(input2 + 0x54) + result1;\n  }\n  else {\n    result2 = *(ushort *)(input2 + 0xc) & 0xffffefff;\n  }\n  if (isPositive) {\n    *(uint *)(input2 + 0x54) = result2;\n  }\n  if (!isPositive) {\n    *(short *)(input2 + 0xc) = (short)result2;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a020": "update_values_0800a020",
                "param_1": "input1",
                "param_2": "input2",
                "iVar1": "result1",
                "uVar2": "result2",
                "bVar3": "isPositive"
            },
            "calling": [],
            "called": [
                "FUN_0800a168"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a042": {
            "entrypoint": "0x0800a042",
            "current_name": "process_data_0800a042",
            "code": "\nvoid processData_0800a042(int *outputArray,int inputData,undefined4 paramA,undefined4 paramB)\n\n{\n  int result;\n  undefined4 unused_1;\n  undefined4 unused_2;\n  undefined4 unused_3;\n  \n  if ((int)((uint)*(ushort *)(inputData + 0xc) << 0x17) < 0) {\n    FUN_0800a130(outputArray,(int)*(short *)(inputData + 0xe),0,2);\n  }\n  *(ushort *)(inputData + 0xc) = *(ushort *)(inputData + 0xc) & 0xefff;\n  DAT_20000a38 = 0;\n  result = FUN_0800885c((int)*(short *)(inputData + 0xe),paramA,paramB,paramB,paramB,unused_1,\n                       unused_2,unused_3);\n  if ((result == -1) && (DAT_20000a38 != 0)) {\n    *outputArray = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a042": "process_data_0800a042",
                "param_1": "outputArray",
                "param_2": "inputData",
                "param_3": "paramA",
                "param_4": "paramB",
                "iVar1": "result",
                "unaff_r4": "unused_1",
                "unaff_r5": "unused_2",
                "in_lr": "unused_3"
            },
            "calling": [],
            "called": [
                "FUN_0800885c",
                "FUN_0800a130"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a07a": {
            "entrypoint": "0x0800a07a",
            "current_name": "update_status_0800a07a",
            "code": "\nvoid updateStatus_0800a07a(undefined4 statusData,int userData)\n\n{\n  int result;\n  ushort updatedStatus;\n  bool isError;\n  \n  result = FUN_0800a130(statusData,(int)*(short *)(userData + 0xe));\n  isError = result == -1;\n  if (isError) {\n    updatedStatus = *(ushort *)(userData + 0xc) & 0xefff;\n  }\n  else {\n    *(int *)(userData + 0x54) = result;\n    updatedStatus = *(ushort *)(userData + 0xc) | 0x1000;\n  }\n  if (isError) {\n    *(ushort *)(userData + 0xc) = updatedStatus;\n  }\n  if (!isError) {\n    *(ushort *)(userData + 0xc) = updatedStatus;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a07a": "update_status_0800a07a",
                "param_1": "statusData",
                "param_2": "userData",
                "iVar1": "result",
                "uVar2": "updatedStatus",
                "bVar3": "isError"
            },
            "calling": [],
            "called": [
                "FUN_0800a130"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a0ec": {
            "entrypoint": "0x0800a0ec",
            "current_name": "update_data_0800a0ec",
            "code": "\nvoid updateData_0800a0ec(int *output,undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  int result;\n  \n  DAT_20000a38 = 0;\n  result = FUN_08008846(input1,input2,input2,0,input3);\n  if ((result == -1) && (DAT_20000a38 != 0)) {\n    *output = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a0ec": "update_data_0800a0ec",
                "param_1": "output",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "input3",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08009e64"
            ],
            "called": [
                "FUN_08008846"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a110": {
            "entrypoint": "0x0800a110",
            "current_name": "check_and_update_value_0800a110",
            "code": "\nvoid checkAndUpdateValue_0800a110(int *output,undefined4 input)\n\n{\n  int result;\n  \n  DAT_20000a38 = 0;\n  result = FUN_08008850(input);\n  if ((result == -1) && (DAT_20000a38 != 0)) {\n    *output = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a110": "check_and_update_value_0800a110",
                "param_1": "output",
                "param_2": "input",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08009eac"
            ],
            "called": [
                "FUN_08008850"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a130": {
            "entrypoint": "0x0800a130",
            "current_name": "update_and_check_result_0800a130",
            "code": "\nvoid updateAndCheckResult_0800a130(int *result,undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  int returnValue;\n  \n  DAT_20000a38 = 0;\n  returnValue = FUN_08008854(input1,input2,input3,input3,input3);\n  if ((returnValue == -1) && (DAT_20000a38 != 0)) {\n    *result = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a130": "update_and_check_result_0800a130",
                "param_1": "result",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "input3",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_0800a07a",
                "FUN_0800a042"
            ],
            "called": [
                "FUN_08008854"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a154": {
            "entrypoint": "0x0800a154",
            "current_name": "calculate_result_0800a154",
            "code": "\nint calculateResult_0800a154(undefined4 arg1,int arg2)\n\n{\n  int result;\n  \n  result = *(int *)(arg2 + -4) + -4;\n  if (*(int *)(arg2 + -4) < 0) {\n    result = result + *(int *)(arg2 + result);\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_0800a154": "calculate_result_0800a154",
                "param_1": "arg1",
                "param_2": "arg2",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08009908"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a168": {
            "entrypoint": "0x0800a168",
            "current_name": "check_and_update_value_0800a168",
            "code": "\nvoid checkAndUpdateValue_0800a168(int *output,undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  int result;\n  \n  DAT_20000a38 = 0;\n  result = FUN_08008858(input1,input2,input3,input3,input3);\n  if ((result == -1) && (DAT_20000a38 != 0)) {\n    *output = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a168": "check_and_update_value_0800a168",
                "param_1": "output",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "input3",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800a020"
            ],
            "called": [
                "FUN_08008858"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a18c": {
            "entrypoint": "0x0800a18c",
            "current_name": "update_data_0800a18c",
            "code": "\nvoid updateData_0800a18c(void)\n\n{\n  code *jumpTable;\n  \n  jumpTable = updateData_0800a18c;\n  FUN_08009b5c();\n  if (-1 < DAT_200009c0 << 0x1f) {\n    DAT_200009c0 = 1;\n  }\n  if (-1 < DAT_200009bc << 0x1f) {\n    DAT_200009bc = 1;\n  }\n  if (-1 < DAT_200009b8 << 0x1f) {\n    DAT_200009b8 = 1;\n  }\n  if (-1 < DAT_200009b4 << 0x1f) {\n    DAT_200009b4 = 1;\n  }\n  if (-1 < DAT_200009b0 << 0x1f) {\n    DAT_200009b0 = 1;\n  }\n  if (-1 < DAT_200009ac << 0x1f) {\n    DAT_200009ac = 1;\n  }\n  if (-1 < DAT_200009a8 << 0x1f) {\n    DAT_200009a8 = 1;\n  }\n  if (-1 < DAT_200009a4 << 0x1f) {\n    DAT_200009a4 = 1;\n  }\n  if (-1 < DAT_200009a0 << 0x1f) {\n    DAT_200009a0 = 1;\n  }\n  if (-1 < DAT_2000099c << 0x1f) {\n    DAT_2000099c = 1;\n  }\n  if (-1 < DAT_20000998 << 0x1f) {\n    DAT_20000998 = 1;\n  }\n  if (-1 < DAT_20000994 << 0x1f) {\n    DAT_20000994 = 1;\n  }\n                    /* WARNING: Could not recover jumptable at 0x0800a224. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a18c": "update_data_0800a18c",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_08009084"
            ],
            "called": [
                "FUN_08009b5c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a424": {
            "entrypoint": "0x0800a424",
            "current_name": "FUNC_0800a424",
            "code": "\nvoid FUNC_0800a424(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a424": "FUNC_0800a424"
            },
            "calling": [
                "FUN_08009148",
                "FUN_0800010c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800a430": {
            "entrypoint": "0x0800a430",
            "current_name": "FUNC_0800a430",
            "code": "\nvoid FUNC_0800a430(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a430": "FUNC_0800a430"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        }
    },
    "used_tokens": 212213,
    "layers": [
        [
            "FUN_0800010c",
            "FUN_08000178",
            "FUN_08000188",
            "FUN_0800018c",
            "FUN_08000214",
            "FUN_0800021a",
            "FUN_08000488",
            "FUN_080004d4",
            "FUN_08000500",
            "FUN_08000588",
            "FUN_080005e0",
            "FUN_080005f8",
            "FUN_08000a64",
            "FUN_08000aec",
            "FUN_08000be8",
            "FUN_08000ef8",
            "FUN_08001b48",
            "FUN_08001bf8",
            "FUN_08001c08",
            "FUN_08001c18",
            "FUN_08001cd0",
            "FUN_080022f8",
            "FUN_08002400",
            "FUN_0800242c",
            "FUN_08002578",
            "FUN_08002580",
            "FUN_080025ac",
            "FUN_08002634",
            "FUN_08002644",
            "FUN_0800267c",
            "FUN_080026b0",
            "FUN_080026f8",
            "FUN_0800270c",
            "FUN_08002720",
            "FUN_080027f0",
            "FUN_0800288c",
            "FUN_0800291c",
            "FUN_08002948",
            "FUN_08002968",
            "FUN_08002a1c",
            "FUN_08002a26",
            "FUN_08002a30",
            "FUN_08002a58",
            "FUN_08002ac0",
            "FUN_08002acc",
            "FUN_08002b68",
            "FUN_08002c00",
            "FUN_08002c14",
            "FUN_08002c1e",
            "FUN_08002c2c",
            "FUN_08002ce0",
            "FUN_08002dbc",
            "FUN_08002ddc",
            "FUN_08002df6",
            "FUN_08002e26",
            "FUN_08002e44",
            "FUN_08002ec4",
            "FUN_08002ed2",
            "FUN_08002ef2",
            "FUN_08002efe",
            "FUN_08002f0a",
            "FUN_08002f14",
            "FUN_08002f1e",
            "FUN_08002f2c",
            "FUN_08002f84",
            "FUN_08002f94",
            "FUN_08002fa0",
            "FUN_08002fa8",
            "FUN_08002fba",
            "FUN_08002fc2",
            "FUN_08002fca",
            "FUN_08003002",
            "FUN_08003048",
            "FUN_0800307a",
            "FUN_08003106",
            "FUN_0800314e",
            "FUN_08003154",
            "FUN_08003158",
            "FUN_0800319e",
            "FUN_080031ce",
            "FUN_0800322c",
            "FUN_0800325a",
            "FUN_080032a2",
            "FUN_080032bc",
            "FUN_08003306",
            "FUN_08003346",
            "FUN_08003350",
            "FUN_08003366",
            "FUN_08003370",
            "FUN_08003376",
            "FUN_080033a8",
            "FUN_080033cc",
            "FUN_0800344a",
            "FUN_08003474",
            "FUN_080035b8",
            "FUN_080036a2",
            "FUN_080036ac",
            "FUN_080036d8",
            "FUN_08003724",
            "FUN_08003748",
            "FUN_08003760",
            "FUN_0800376c",
            "FUN_080038dc",
            "FUN_080038e4",
            "FUN_08003a1c",
            "FUN_08003a20",
            "FUN_08003aa0",
            "FUN_08003b8c",
            "FUN_08003bd8",
            "FUN_08003ce8",
            "FUN_08003de4",
            "FUN_08003e20",
            "FUN_08003f0c",
            "FUN_08003f30",
            "FUN_08003f94",
            "FUN_08003fb0",
            "FUN_08003fd8",
            "FUN_08004004",
            "FUN_08004024",
            "FUN_08004046",
            "FUN_08004050",
            "FUN_080040e8",
            "FUN_080042d4",
            "FUN_080042e2",
            "FUN_080042f0",
            "FUN_0800430c",
            "FUN_08004396",
            "FUN_080043a2",
            "FUN_0800457c",
            "FUN_0800459c",
            "FUN_080045c0",
            "FUN_08004728",
            "FUN_080047f4",
            "FUN_080048c8",
            "FUN_08004954",
            "FUN_080049e0",
            "FUN_08004a24",
            "FUN_08004a76",
            "FUN_08004ac2",
            "FUN_08004aec",
            "FUN_08004b82",
            "FUN_08004ccc",
            "FUN_08004d6c",
            "FUN_08004e3c",
            "FUN_08004f3c",
            "FUN_08005084",
            "FUN_08005188",
            "FUN_080052f0",
            "FUN_0800542a",
            "FUN_08005430",
            "FUN_08005434",
            "FUN_08005460",
            "FUN_08005840",
            "FUN_080058ac",
            "FUN_080058d2",
            "FUN_08005a1c",
            "FUN_08005a28",
            "FUN_08005a48",
            "FUN_08005a68",
            "FUN_08005aa4",
            "FUN_08005bb8",
            "FUN_08005cb4",
            "FUN_08005cec",
            "FUN_08005d48",
            "FUN_08005dac",
            "FUN_08005df4",
            "FUN_08005e2e",
            "FUN_08005e6e",
            "FUN_08005fe8",
            "FUN_08006060",
            "FUN_08006092",
            "FUN_080060c4",
            "FUN_08006128",
            "FUN_08006186",
            "FUN_08006262",
            "FUN_08006280",
            "FUN_080062f4",
            "FUN_08006390",
            "FUN_080063c0",
            "FUN_08006420",
            "FUN_0800643c",
            "FUN_08006460",
            "FUN_080064b0",
            "FUN_080064cc",
            "FUN_08006538",
            "FUN_080066e8",
            "FUN_0800674e",
            "FUN_080067ac",
            "FUN_0800688e",
            "FUN_080068d6",
            "FUN_08006932",
            "FUN_0800694c",
            "FUN_080069ec",
            "FUN_08006b1c",
            "FUN_08006b28",
            "FUN_08006b3e",
            "FUN_08006b5c",
            "FUN_08006b7c",
            "FUN_08006bb8",
            "FUN_08006c60",
            "FUN_08006c7c",
            "FUN_08006ca8",
            "FUN_08006d24",
            "FUN_08006d80",
            "FUN_08006e68",
            "FUN_08007110",
            "FUN_08007118",
            "FUN_080071e4",
            "FUN_0800723c",
            "FUN_08007246",
            "FUN_08007258",
            "FUN_080072d8",
            "FUN_080072f0",
            "FUN_080072fa",
            "FUN_08007306",
            "FUN_08007320",
            "FUN_08007332",
            "FUN_0800734a",
            "FUN_0800735a",
            "FUN_08007376",
            "FUN_0800738a",
            "FUN_080073ae",
            "FUN_080073c0",
            "FUN_080073e8",
            "FUN_080073ec",
            "FUN_08007438",
            "FUN_080074e0",
            "FUN_08007544",
            "FUN_08007594",
            "FUN_080075dc",
            "FUN_08007648",
            "FUN_080076e0",
            "FUN_08007708",
            "FUN_08007710",
            "FUN_08007718",
            "FUN_0800771c",
            "FUN_08007736",
            "FUN_08007744",
            "FUN_0800774a",
            "FUN_08007750",
            "FUN_080077b0",
            "FUN_08007e74",
            "FUN_08007ede",
            "FUN_08007f0e",
            "FUN_08007f78",
            "FUN_08007f7c",
            "FUN_08007f8e",
            "FUN_08007fa0",
            "FUN_08007ff0",
            "FUN_08008020",
            "FUN_08008078",
            "FUN_080084b0",
            "FUN_08008500",
            "FUN_080085b8",
            "FUN_080085dc",
            "FUN_08008600",
            "FUN_0800863c",
            "FUN_08008694",
            "FUN_080086e8",
            "FUN_0800870c",
            "FUN_08008730",
            "FUN_08008804",
            "FUN_08008840",
            "FUN_08008846",
            "FUN_08008850",
            "FUN_08008854",
            "FUN_08008858",
            "FUN_0800885c",
            "FUN_08008868",
            "FUN_0800886c",
            "FUN_0800887c",
            "FUN_08008880",
            "FUN_080088e0",
            "FUN_08008990",
            "FUN_08008a24",
            "FUN_08008a6c",
            "FUN_08008abc",
            "FUN_08008afa",
            "FUN_08008b66",
            "FUN_08008c20",
            "FUN_08008c44",
            "FUN_08008d00",
            "FUN_08008d18",
            "FUN_08008d30",
            "FUN_08008d8c",
            "FUN_08008df8",
            "FUN_08008e14",
            "FUN_08008ef4",
            "FUN_08008f0e",
            "FUN_08008f1c",
            "FUN_08008f3c",
            "FUN_08008f78",
            "FUN_08009084",
            "FUN_08009094",
            "FUN_080090c2",
            "FUN_080090cc",
            "FUN_08009108",
            "FUN_08009124",
            "FUN_08009148",
            "FUN_08009190",
            "FUN_080091a0",
            "FUN_080091b0",
            "FUN_080091c6",
            "FUN_080091d8",
            "FUN_08009270",
            "FUN_0800932c",
            "FUN_08009358",
            "FUN_0800937c",
            "FUN_080095a8",
            "FUN_08009698",
            "FUN_080098d8",
            "FUN_08009908",
            "FUN_08009918",
            "FUN_08009938",
            "FUN_08009954",
            "FUN_0800997e",
            "FUN_080099a4",
            "FUN_08009a80",
            "FUN_08009b5c",
            "FUN_08009c7c",
            "FUN_08009cdc",
            "FUN_08009d24",
            "FUN_08009d50",
            "FUN_08009db0",
            "FUN_08009e64",
            "FUN_08009eac",
            "FUN_08009f2c",
            "FUN_08009fe8",
            "thunk_FUN_0800887c",
            "FUN_0800a020",
            "FUN_0800a042",
            "FUN_0800a07a",
            "FUN_0800a0ec",
            "FUN_0800a110",
            "FUN_0800a130",
            "FUN_0800a154",
            "FUN_0800a168",
            "FUN_0800a18c"
        ]
    ],
    "locked_functions": []
}