{
    "functions": {
        "FUN_080001ac": {
            "entrypoint": "0x080001ac",
            "current_name": "initialize_flag_080001ac",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x080001b8) */\n\nundefined4 initializeFlag_080001ac(undefined4 input)\n\n{\n  if ((char)DAT_20000104 == '\\0') {\n    DAT_20000104._0_1_ = '\\x01';\n  }\n  return input;\n}\n\n",
            "renaming": {
                "FUN_080001ac": "initialize_flag_080001ac",
                "param_1": "input"
            },
            "calling": [],
            "called": [
                "FUN_080059f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000230": {
            "entrypoint": "0x08000230",
            "current_name": "find_byte_sequence_08000230",
            "code": "\nbyte * find_byte_sequence_08000230(uint *data,uint byte_to_find,uint data_size)\n\n{\n  byte current_byte;\n  char byte_match;\n  char byte_match;\n  char byte_match;\n  char byte_match;\n  byte *result;\n  uint *data_ptr;\n  byte *result;\n  uint ptr_alignment;\n  uint data_count;\n  uint data_xor;\n  uint ptr_xor;\n  bool is_byte_nonzero;\n  bool is_byte_nonzero;\n  bool is_byte_nonzero;\n  bool is_byte_nonzero;\n  \n  byte_to_find = byte_to_find & 0xff;\n  if ((int)data_size < 0x10) {\njoined_r0x08000290:\n    do {\n      if (data_size == 0) {\n        return (byte *)0x0;\n      }\n      data_ptr = (uint *)((int)data + 1);\n      current_byte = *(byte *)data;\n      data_size = data_size - 1;\n      data = data_ptr;\n    } while (current_byte != byte_to_find);\n  }\n  else {\n    ptr_alignment = (uint)data & 7;\n    while( true ) {\n      if (ptr_alignment == 0) {\n        ptr_alignment = byte_to_find | byte_to_find << 8;\n        ptr_alignment = ptr_alignment | ptr_alignment << 0x10;\n        data_count = data_size & 0xfffffff8;\n        do {\n          data_ptr = data + 2;\n          data_count = data_count - 8;\n          data_xor = *data ^ ptr_alignment;\n          ptr_xor = data[1] ^ ptr_alignment;\n          byte_match = -((char)data_xor == '\\0');\n          byte_match = -((char)(data_xor >> 8) == '\\0');\n          byte_match = -((char)(data_xor >> 0x10) == '\\0');\n          byte_match = -((char)(data_xor >> 0x18) == '\\0');\n          data_xor = CONCAT13(byte_match,CONCAT12(byte_match,CONCAT11(byte_match,byte_match)));\n          is_byte_nonzero = (char)ptr_xor != '\\0';\n          is_byte_nonzero = (char)(ptr_xor >> 8) != '\\0';\n          is_byte_nonzero = (char)(ptr_xor >> 0x10) != '\\0';\n          is_byte_nonzero = (char)(ptr_xor >> 0x18) != '\\0';\n          ptr_xor = CONCAT13(is_byte_nonzero * byte_match - !is_byte_nonzero,\n                            CONCAT12(is_byte_nonzero * byte_match - !is_byte_nonzero,\n                                     CONCAT11(is_byte_nonzero * byte_match - !is_byte_nonzero,is_byte_nonzero * byte_match - !is_byte_nonzero)));\n          if (ptr_xor != 0) {\n            if (data_xor == 0) {\n              result = (byte *)((int)data + 5);\n              data_xor = ptr_xor;\n            }\n            else {\n              result = (byte *)((int)data + 1);\n            }\n            if ((data_xor & 1) == 0) {\n              is_byte_nonzero = (data_xor & 0x100) == 0;\n              result = result + 1;\n              if (is_byte_nonzero) {\n                is_byte_nonzero = (data_xor & 0x18000) == 0;\n                result = result + 2;\n              }\n              result = result;\n              if (is_byte_nonzero) {\n                result = result + 1;\n              }\n            }\n            return result + -1;\n          }\n          data = data_ptr;\n        } while (data_count != 0);\n        data_size = data_size & 7;\n        goto joined_r0x08000290;\n      }\n      data_ptr = (uint *)((int)data + 1);\n      data_size = data_size - 1;\n      if (*(byte *)data == byte_to_find) break;\n      ptr_alignment = (uint)data_ptr & 7;\n      data = data_ptr;\n      if (data_size == 0) {\n        return (byte *)0x0;\n      }\n    }\n  }\n  return (byte *)((int)data_ptr + -1);\n}\n\n",
            "renaming": {
                "FUN_08000230": "find_byte_sequence_08000230",
                "param_1": "data",
                "param_2": "byte_to_find",
                "param_3": "data_size",
                "bVar1": "current_byte",
                "cVar2": "byte_match",
                "cVar3": "byte_match",
                "cVar4": "byte_match",
                "cVar5": "byte_match",
                "pbVar6": "result",
                "puVar7": "data_ptr",
                "pbVar8": "result",
                "uVar9": "ptr_alignment",
                "uVar10": "data_count",
                "uVar11": "data_xor",
                "uVar12": "ptr_xor",
                "bVar13": "is_byte_nonzero",
                "bVar14": "is_byte_nonzero",
                "bVar15": "is_byte_nonzero",
                "bVar16": "is_byte_nonzero"
            },
            "calling": [
                "FUN_08004a84",
                "FUN_08004d9c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080002d0": {
            "entrypoint": "0x080002d0",
            "current_name": "check_and_return_values_080002d0",
            "code": "\nundefined8 checkAndReturnValues_080002d0(int input1,int input2,int input3,int input4)\n\n{\n  undefined8 result;\n  \n  if ((input4 == 0) && (input3 == 0)) {\n    if (input2 != 0 || input1 != 0) {\n      input2 = -1;\n      input1 = -1;\n    }\n    return CONCAT44(input2,input1);\n  }\n  result = FUN_08000300();\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080002d0": "check_and_return_values_080002d0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080023b4"
            ],
            "called": [
                "FUN_08000300"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000300": {
            "entrypoint": "0x08000300",
            "current_name": "divide_with_remainder_08000300",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x080005aa) */\n\nulonglong divide_with_remainder_08000300(uint dividend,uint divisor,uint quotient1,uint quotient2,uint *remainder)\n\n{\n  ulonglong result;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  int iVar10;\n  bool bVar11;\n  \n  if (quotient2 == 0) {\n    if (divisor < quotient1) {\n      iVar10 = LZCOUNT(quotient1);\n      if (iVar10 != 0) {\n        quotient1 = quotient1 << iVar10;\n        divisor = dividend >> (0x20U - iVar10 & 0xff) | divisor << iVar10;\n        dividend = dividend << iVar10;\n      }\n      uVar8 = quotient1 >> 0x10;\n      uVar6 = divisor / uVar8;\n      uVar5 = dividend >> 0x10 | (divisor - uVar8 * uVar6) * 0x10000;\n      uVar4 = uVar6 * (quotient1 & 0xffff);\n      uVar3 = uVar6;\n      if (uVar5 <= uVar4 && uVar4 - uVar5 != 0) {\n        bVar11 = CARRY4(uVar5,quotient1);\n        uVar5 = uVar5 + quotient1;\n        uVar3 = uVar6 - 1;\n        if ((bVar11 == false) && (uVar5 <= uVar4 && uVar4 - uVar5 != 0)) {\n          uVar3 = uVar6 - 2;\n          uVar5 = uVar5 + quotient1;\n        }\n      }\n      uVar6 = (uVar5 - uVar4) / uVar8;\n      uVar5 = dividend & 0xffff | ((uVar5 - uVar4) - uVar8 * uVar6) * 0x10000;\n      uVar8 = uVar6 * (quotient1 & 0xffff);\n      uVar4 = uVar6;\n      if (uVar5 <= uVar8 && uVar8 - uVar5 != 0) {\n        bVar11 = CARRY4(uVar5,quotient1);\n        uVar5 = uVar5 + quotient1;\n        uVar4 = uVar6 - 1;\n        if ((bVar11 == false) && (uVar5 <= uVar8 && uVar8 - uVar5 != 0)) {\n          uVar4 = uVar6 - 2;\n          uVar5 = uVar5 + quotient1;\n        }\n      }\n      uVar5 = uVar5 - uVar8;\n      uVar4 = uVar4 | uVar3 << 0x10;\n      uVar3 = 0;\n    }\n    else {\n      if (quotient1 == 0) {\n        quotient1 = 1 / 0;\n      }\n      iVar10 = LZCOUNT(quotient1);\n      if (iVar10 == 0) {\n        divisor = divisor - quotient1;\n        uVar5 = quotient1 >> 0x10;\n        uVar9 = quotient1 & 0xffff;\n        uVar3 = 1;\n      }\n      else {\n        quotient1 = quotient1 << iVar10;\n        uVar5 = quotient1 >> 0x10;\n        uVar4 = divisor >> (0x20U - iVar10 & 0xff);\n        uVar7 = dividend >> (0x20U - iVar10 & 0xff) | divisor << iVar10;\n        uVar3 = uVar4 / uVar5;\n        uVar9 = quotient1 & 0xffff;\n        uVar8 = uVar7 >> 0x10 | (uVar4 - uVar5 * uVar3) * 0x10000;\n        uVar6 = uVar3 * uVar9;\n        dividend = dividend << iVar10;\n        uVar4 = uVar3;\n        if (uVar8 <= uVar6 && uVar6 - uVar8 != 0) {\n          bVar11 = CARRY4(uVar8,quotient1);\n          uVar8 = uVar8 + quotient1;\n          uVar4 = uVar3 - 1;\n          if ((bVar11 == false) && (uVar8 <= uVar6 && uVar6 - uVar8 != 0)) {\n            uVar4 = uVar3 - 2;\n            uVar8 = uVar8 + quotient1;\n          }\n        }\n        uVar2 = (uVar8 - uVar6) / uVar5;\n        divisor = uVar7 & 0xffff | ((uVar8 - uVar6) - uVar5 * uVar2) * 0x10000;\n        uVar6 = uVar2 * uVar9;\n        uVar3 = uVar2;\n        if (divisor <= uVar6 && uVar6 - divisor != 0) {\n          bVar11 = CARRY4(divisor,quotient1);\n          divisor = divisor + quotient1;\n          uVar3 = uVar2 - 1;\n          if ((bVar11 == false) && (divisor <= uVar6 && uVar6 - divisor != 0)) {\n            uVar3 = uVar2 - 2;\n            divisor = divisor + quotient1;\n          }\n        }\n        divisor = divisor - uVar6;\n        uVar3 = uVar3 | uVar4 << 0x10;\n      }\n      uVar7 = divisor / uVar5;\n      uVar8 = dividend >> 0x10 | (divisor - uVar5 * uVar7) * 0x10000;\n      uVar4 = uVar9 * uVar7;\n      uVar6 = uVar7;\n      if (uVar8 <= uVar4 && uVar4 - uVar8 != 0) {\n        bVar11 = CARRY4(uVar8,quotient1);\n        uVar8 = uVar8 + quotient1;\n        uVar6 = uVar7 - 1;\n        if ((bVar11 == false) && (uVar8 <= uVar4 && uVar4 - uVar8 != 0)) {\n          uVar6 = uVar7 - 2;\n          uVar8 = uVar8 + quotient1;\n        }\n      }\n      uVar7 = (uVar8 - uVar4) / uVar5;\n      uVar5 = dividend & 0xffff | ((uVar8 - uVar4) - uVar5 * uVar7) * 0x10000;\n      uVar9 = uVar9 * uVar7;\n      uVar4 = uVar7;\n      if (uVar5 <= uVar9 && uVar9 - uVar5 != 0) {\n        bVar11 = CARRY4(uVar5,quotient1);\n        uVar5 = uVar5 + quotient1;\n        uVar4 = uVar7 - 1;\n        if ((bVar11 == false) && (uVar5 <= uVar9 && uVar9 - uVar5 != 0)) {\n          uVar4 = uVar7 - 2;\n          uVar5 = uVar5 + quotient1;\n        }\n      }\n      uVar5 = uVar5 - uVar9;\n      uVar4 = uVar4 | uVar6 << 0x10;\n    }\n    if (remainder != (uint *)0x0) {\n      *remainder = uVar5 >> iVar10;\n      remainder[1] = 0;\n      return CONCAT44(uVar3,uVar4);\n    }\n  }\n  else if (divisor < quotient2) {\n    if (remainder != (uint *)0x0) {\n      *remainder = dividend;\n      remainder[1] = divisor;\n      return 0;\n    }\n    uVar4 = 0;\n    uVar3 = 0;\n  }\n  else {\n    iVar10 = LZCOUNT(quotient2);\n    if (iVar10 != 0) {\n      uVar8 = 0x20 - iVar10;\n      uVar3 = quotient1 >> (uVar8 & 0xff) | quotient2 << iVar10;\n      uVar9 = uVar3 >> 0x10;\n      uVar4 = divisor >> (uVar8 & 0xff);\n      uVar2 = dividend >> (uVar8 & 0xff) | divisor << iVar10;\n      uVar7 = uVar4 / uVar9;\n      uVar6 = uVar2 >> 0x10 | (uVar4 - uVar9 * uVar7) * 0x10000;\n      uVar5 = uVar7 * (uVar3 & 0xffff);\n      dividend = dividend << iVar10;\n      uVar4 = uVar7;\n      if (uVar6 <= uVar5 && uVar5 - uVar6 != 0) {\n        bVar11 = CARRY4(uVar6,uVar3);\n        uVar6 = uVar6 + uVar3;\n        uVar4 = uVar7 - 1;\n        if ((bVar11 == false) && (uVar6 <= uVar5 && uVar5 - uVar6 != 0)) {\n          uVar4 = uVar7 - 2;\n          uVar6 = uVar6 + uVar3;\n        }\n      }\n      uVar7 = (uVar6 - uVar5) / uVar9;\n      uVar6 = uVar2 & 0xffff | ((uVar6 - uVar5) - uVar9 * uVar7) * 0x10000;\n      uVar9 = uVar7 * (uVar3 & 0xffff);\n      uVar5 = uVar7;\n      if (uVar6 <= uVar9 && uVar9 - uVar6 != 0) {\n        bVar11 = CARRY4(uVar6,uVar3);\n        uVar6 = uVar6 + uVar3;\n        uVar5 = uVar7 - 1;\n        if ((bVar11 == false) && (uVar6 <= uVar9 && uVar9 - uVar6 != 0)) {\n          uVar5 = uVar7 - 2;\n          uVar6 = uVar6 + uVar3;\n        }\n      }\n      uVar5 = uVar5 | uVar4 << 0x10;\n      result = (ulonglong)uVar5 * (ulonglong)(quotient1 << iVar10);\n      if (CONCAT44(uVar6 - uVar9,dividend) < result) {\n        result = result - CONCAT44(uVar3,quotient1 << iVar10);\n        uVar5 = uVar5 - 1;\n      }\n      if (remainder != (uint *)0x0) {\n        uVar4 = ((uVar6 - uVar9) - (int)(result >> 0x20)) - (uint)(dividend < (uint)result);\n        *remainder = uVar4 << (uVar8 & 0xff) | dividend - (uint)result >> iVar10;\n        remainder[1] = uVar4 >> iVar10;\n      }\n      return (ulonglong)uVar5;\n    }\n    if ((quotient2 < divisor) || (quotient1 <= dividend)) {\n      bVar11 = dividend < quotient1;\n      dividend = dividend - quotient1;\n      divisor = (divisor - quotient2) - (uint)bVar11;\n      uVar4 = 1;\n    }\n    else {\n      uVar4 = 0;\n    }\n    uVar3 = 0;\n    if (remainder != (uint *)0x0) {\n      *remainder = dividend;\n      remainder[1] = divisor;\n      return (ulonglong)uVar4;\n    }\n  }\n  return CONCAT44(uVar3,uVar4);\n}\n\n",
            "renaming": {
                "FUN_08000300": "divide_with_remainder_08000300",
                "param_1": "dividend",
                "param_2": "divisor",
                "param_3": "quotient1",
                "param_4": "quotient2",
                "param_5": "remainder",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080002d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080005e0": {
            "entrypoint": "0x080005e0",
            "current_name": "execute_system_call_080005e0",
            "code": "\nvoid execute_system_call_080005e0(void)\n\n{\n  software_interrupt(0x3f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080005e0": "execute_system_call_080005e0"
            },
            "calling": [
                "FUN_080005e4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080005e4": {
            "entrypoint": "0x080005e4",
            "current_name": "check_and_update_data_080005e4",
            "code": "\nundefined4 checkAndUpdateData_080005e4(undefined4 inputValue,undefined4 unusedParam1,undefined4 unusedParam2,undefined4 inputFlag)\n\n{\n  undefined4 result;\n  \n  if (DAT_20000120 != 0) {\n    return 0;\n  }\n  result = FUN_080005e0(1,inputValue,0,0,inputFlag);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080005e4": "check_and_update_data_080005e4",
                "param_1": "inputValue",
                "param_2": "unusedParam1",
                "param_3": "unusedParam2",
                "param_4": "inputFlag",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08000c4c"
            ],
            "called": [
                "FUN_080005e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000600": {
            "entrypoint": "0x08000600",
            "current_name": "initialize_data_08000600",
            "code": "\nvoid initializeData_08000600(int **dataPointer,undefined4 value)\n\n{\n  char dataFlag;\n  int result;\n  \n  dataFlag = *(char *)((int)dataPointer + 5);\n  if (dataFlag == '\\x02') {\n    *dataPointer = &DAT_20000338;\n  }\n  else if (dataFlag == '\\x03') {\n    *dataPointer = &DAT_20000338;\n  }\n  else if (dataFlag == '\\x01') {\n    *dataPointer = &DAT_20000338;\n  }\n  else {\n    *dataPointer = &DAT_20000338;\n  }\n  FUN_08004388(*dataPointer,value,6);\n  if (1 < *(byte *)((int)dataPointer + 6)) {\n    FUN_08004110(*(byte *)((int)dataPointer + 6),1);\n    FUN_080041bc(*(undefined *)((int)dataPointer + 6),0);\n  }\n  do {\n    result = (**(code **)(**dataPointer + 0xc))();\n  } while (-1 < result);\n  *(undefined *)((int)dataPointer + 0x49) = 0;\n  *(undefined *)((int)dataPointer + 0x4a) = 0;\n  *(undefined2 *)(dataPointer + 0x15) = 0;\n  *(undefined2 *)((int)dataPointer + 0x52) = 0;\n  *(undefined2 *)(dataPointer + 0x14) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000600": "initialize_data_08000600",
                "param_1": "dataPointer",
                "param_2": "value",
                "cVar1": "dataFlag",
                "iVar2": "result"
            },
            "calling": [
                "FUN_08000c4c"
            ],
            "called": [
                "FUN_08004388",
                "FUN_08004110",
                "FUN_080041bc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800066c": {
            "entrypoint": "0x0800066c",
            "current_name": "set_arguments_0800066c",
            "code": "\nvoid setArguments_0800066c(int bufferPtr,undefined value,int count,undefined config)\n\n{\n  *(undefined *)(bufferPtr + 4) = value;\n  if (3 < count) {\n    count = 0;\n  }\n  *(char *)(bufferPtr + 5) = (char)count;\n  *(undefined *)(bufferPtr + 6) = config;\n  *(undefined2 *)(bufferPtr + 0x56) = 1000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800066c": "set_arguments_0800066c",
                "param_1": "bufferPtr",
                "param_2": "value",
                "param_3": "count",
                "param_4": "config"
            },
            "calling": [
                "FUN_08000682"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000682": {
            "entrypoint": "0x08000682",
            "current_name": "initialize_08000682",
            "code": "\nundefined4 initialize_08000682(undefined4 input_parameter)\n\n{\n  FUN_0800066c();\n  return input_parameter;\n}\n\n",
            "renaming": {
                "FUN_08000682": "initialize_08000682",
                "param_1": "input_parameter"
            },
            "calling": [
                "FUN_08000690"
            ],
            "called": [
                "FUN_0800066c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000690": {
            "entrypoint": "0x08000690",
            "current_name": "check_and_execute_08000690",
            "code": "\nvoid check_and_execute_08000690(int status,int value,undefined4 unused_param,undefined4 context)\n\n{\n  if (status != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    FUN_08000682(&DAT_20000124,1,0,0,context);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000690": "check_and_execute_08000690",
                "param_1": "status",
                "param_2": "value",
                "param_3": "unused_param",
                "param_4": "context"
            },
            "calling": [],
            "called": [
                "FUN_08000682"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080006b4": {
            "entrypoint": "0x080006b4",
            "current_name": "process_data_080006b4",
            "code": "\nint process_data_080006b4(int **data)\n\n{\n  bool isOverflow;\n  undefined result;\n  int returnValue;\n  byte counter;\n  \n  if (1 < *(byte *)((int)data + 6)) {\n    FUN_080041bc(*(byte *)((int)data + 6),0);\n  }\n  *(undefined *)((int)data + 0x49) = 0;\n  if (*(byte *)((int)data + 5) < 4) {\n    isOverflow = false;\n    while (returnValue = (**(code **)(**data + 8))(), returnValue != 0) {\n      counter = *(byte *)((int)data + 0x49);\n      result = (**(code **)(**data + 0xc))();\n      *(undefined *)((int)data + counter + 9) = result;\n      counter = *(char *)((int)data + 0x49) + 1;\n      *(byte *)((int)data + 0x49) = counter;\n      if (0x3f < counter) {\n        isOverflow = true;\n      }\n    }\n  }\n  else {\n    isOverflow = false;\n  }\n  *(short *)(data + 0x14) = *(short *)(data + 0x14) + 1;\n  if (isOverflow) {\n    *(short *)(data + 0x15) = *(short *)(data + 0x15) + 1;\n    return -3;\n  }\n  return (int)*(char *)((int)data + 0x49);\n}\n\n",
            "renaming": {
                "FUN_080006b4": "process_data_080006b4",
                "param_1": "data",
                "bVar1": "isOverflow",
                "uVar2": "result",
                "iVar3": "returnValue",
                "bVar4": "counter"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_080041bc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000728": {
            "entrypoint": "0x08000728",
            "current_name": "calculate_checksum_08000728",
            "code": "\nuint calculateChecksum_08000728(int dataAddress,int dataLength)\n\n{\n  byte bitCounter;\n  uint checksum;\n  uint parityBit;\n  uint index;\n  \n  checksum = 0xffff;\n  for (index = 0; (int)index < dataLength; index = index + 1 & 0xff) {\n    checksum = checksum ^ *(byte *)(dataAddress + index + 9);\n    for (bitCounter = 1; bitCounter < 9; bitCounter = bitCounter + 1) {\n      parityBit = checksum & 1;\n      checksum = checksum >> 1;\n      if (parityBit != 0) {\n        checksum = checksum ^ 0xa001;\n      }\n    }\n  }\n  return (checksum & 0xff) << 8 | checksum >> 8;\n}\n\n",
            "renaming": {
                "FUN_08000728": "calculate_checksum_08000728",
                "param_1": "dataAddress",
                "param_2": "dataLength",
                "bVar1": "bitCounter",
                "uVar2": "checksum",
                "uVar3": "parityBit",
                "uVar4": "index"
            },
            "calling": [
                "FUN_0800076c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800076c": {
            "entrypoint": "0x0800076c",
            "current_name": "update_data_0800076c",
            "code": "\nvoid updateData_0800076c(int **dataPointer,undefined4 value1,undefined4 value2,undefined4 value3)\n\n{\n  undefined2 result;\n  int loopVariable;\n  uint index;\n  \n  index = (uint)*(byte *)((int)dataPointer + 0x49);\n  result = FUN_08000728(dataPointer,index,value2,value3,value3);\n  *(char *)((int)dataPointer + index + 9) = (char)((ushort)result >> 8);\n  index = index + 1 & 0xff;\n  *(char *)((int)dataPointer + index + 9) = (char)result;\n  *(char *)((int)dataPointer + 0x49) = (char)index + '\\x01';\n  if (1 < *(byte *)((int)dataPointer + 6)) {\n    FUN_080041bc(*(byte *)((int)dataPointer + 6),1);\n  }\n  if (*(byte *)((int)dataPointer + 5) < 4) {\n    (**(code **)(**dataPointer + 4))(*dataPointer,(int)dataPointer + 9,*(undefined *)((int)dataPointer + 0x49));\n  }\n  if (1 < *(byte *)((int)dataPointer + 6)) {\n    FUN_080041bc(*(byte *)((int)dataPointer + 6),0);\n  }\n  if (*(byte *)((int)dataPointer + 5) < 4) {\n    do {\n      loopVariable = (**(code **)(**dataPointer + 0xc))();\n    } while (-1 < loopVariable);\n  }\n  *(undefined *)((int)dataPointer + 0x49) = 0;\n  loopVariable = FUN_08004204();\n  dataPointer[0x17] = (int *)(loopVariable + (uint)*(ushort *)((int)dataPointer + 0x56));\n  *(short *)((int)dataPointer + 0x52) = *(short *)((int)dataPointer + 0x52) + 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800076c": "update_data_0800076c",
                "param_1": "dataPointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "uVar1": "result",
                "iVar2": "loopVariable",
                "uVar3": "index"
            },
            "calling": [
                "FUN_08000a4e",
                "FUN_080008e2",
                "FUN_08000b04",
                "FUN_08000998",
                "FUN_08000b54",
                "FUN_08000a7a",
                "FUN_08000a00"
            ],
            "called": [
                "FUN_080041bc",
                "FUN_08004204",
                "FUN_08000728"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080007f0": {
            "entrypoint": "0x080007f0",
            "current_name": "check_condition_080007f0",
            "code": "\nundefined4 check_condition_080007f0(int ptr_data,undefined4 param2,uint param3,undefined4 param4)\n\n{\n  bool is_match;\n  byte result;\n  char result1;\n  char result2;\n  int value1;\n  uint index;\n  int value2;\n  \n  index = 0;\n  do {\n    if (7 < index) {\n      is_match = false;\nLAB_0800080a:\n      if (!is_match) {\n        *(short *)(ptr_data + 0x54) = *(short *)(ptr_data + 0x54) + 1;\n        return 1;\n      }\n      value2 = *(byte *)(ptr_data + 10) - 1;\n      switch(*(byte *)(ptr_data + 10)) {\n      case 1:\n      case 2:\n      case 0xf:\n        goto switchD_08000816_caseD_1;\n      case 3:\n      case 4:\n      case 0x10:\n        result1 = FUN_08004640(*(undefined *)(ptr_data + 0xb),*(undefined *)(ptr_data + 0xc),param3,\n                             value2,param4);\n        result2 = FUN_08004640(*(undefined *)(ptr_data + 0xd),*(undefined *)(ptr_data + 0xe));\n        if (*(byte *)(ptr_data + 0x60) < (byte)(result2 + result1)) {\n          return 2;\n        }\n        return 0;\n      case 5:\n        value2 = FUN_08004640(*(undefined *)(ptr_data + 0xb),*(undefined *)(ptr_data + 0xc),param3,\n                             value2,param4);\n        if ((uint)*(byte *)(ptr_data + 0x60) < (uint)(value2 << 0x14) >> 0x18) {\n          return 2;\n        }\n        return 0;\n      case 6:\n        result = FUN_08004640(*(undefined *)(ptr_data + 0xb),*(undefined *)(ptr_data + 0xc),param3,\n                             value2,param4);\n        if (*(byte *)(ptr_data + 0x60) < result) {\n          return 2;\n        }\n        return 0;\n      default:\n        return 0;\n      }\n    }\n    param3 = (uint)*(byte *)(ptr_data + 10);\n    if ((byte)(&DAT_08005a10)[index] == param3) {\n      is_match = true;\n      goto LAB_0800080a;\n    }\n    index = index + 1 & 0xff;\n  } while( true );\nswitchD_08000816_caseD_1:\n  value2 = FUN_08004640(*(undefined *)(ptr_data + 0xb),*(undefined *)(ptr_data + 0xc),param3,value2,\n                       param4);\n  value1 = FUN_08004640(*(undefined *)(ptr_data + 0xd),*(undefined *)(ptr_data + 0xe));\n  if ((uint)*(byte *)(ptr_data + 0x60) <\n      (((uint)(value2 << 0xc) >> 0x10) + ((uint)(value1 << 0xc) >> 0x10) & 0xff)) {\n    return 2;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080007f0": "check_condition_080007f0",
                "param_1": "ptr_data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "bVar1": "is_match",
                "bVar2": "result",
                "cVar3": "result1",
                "cVar4": "result2",
                "iVar5": "value1",
                "uVar6": "index",
                "iVar7": "value2"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080008cc": {
            "entrypoint": "0x080008cc",
            "current_name": "copy_and_modify_data_080008cc",
            "code": "\nvoid copyAndModifyData_080008cc(int dataAddress,undefined newValue)\n\n{\n  *(undefined *)(dataAddress + 9) = *(undefined *)(dataAddress + 4);\n  *(byte *)(dataAddress + 10) = *(byte *)(dataAddress + 10) ^ 0x80;\n  *(undefined *)(dataAddress + 0xb) = newValue;\n  *(undefined *)(dataAddress + 0x49) = 3;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080008cc": "copy_and_modify_data_080008cc",
                "param_1": "dataAddress",
                "param_2": "newValue"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080008e2": {
            "entrypoint": "0x080008e2",
            "current_name": "calculate_checksum_080008e2",
            "code": "\nint calculateChecksum_080008e2(int dataOffset,int dataSize,undefined4 param3,undefined4 param4)\n\n{\n  int startOffset;\n  uint numChunks;\n  uint i;\n  uint bitPosition;\n  char checksum;\n  int tempOffset;\n  \n  startOffset = FUN_08004640(*(undefined *)(dataOffset + 0xb),*(undefined *)(dataOffset + 0xc),param3,param4,\n                       param4);\n  numChunks = FUN_08004640(*(undefined *)(dataOffset + 0xd),*(undefined *)(dataOffset + 0xe));\n  checksum = (char)((numChunks << 0x15) >> 0x18);\n  if ((numChunks & 7) != 0) {\n    checksum = checksum + '\\x01';\n  }\n  *(char *)(dataOffset + 0xb) = checksum;\n  *(undefined *)(dataOffset + 0x49) = 3;\n  bitPosition = 0;\n  for (i = 0; (int)i < (int)numChunks; i = i + 1 & 0xffff) {\n    if (((int)(uint)*(ushort *)(dataSize + ((i + startOffset) * 0x100000 >> 0x18) * 2) >>\n         (i + startOffset & 0xf) & 1U) == 0) {\n      tempOffset = (uint)*(byte *)(dataOffset + 0x49) + dataOffset;\n      *(byte *)(tempOffset + 9) = *(byte *)(tempOffset + 9) & ~(byte)(1 << bitPosition);\n    }\n    else {\n      tempOffset = (uint)*(byte *)(dataOffset + 0x49) + dataOffset;\n      *(byte *)(tempOffset + 9) = *(byte *)(tempOffset + 9) | (byte)(1 << bitPosition);\n    }\n    bitPosition = bitPosition + 1 & 0xff;\n    if (7 < bitPosition) {\n      *(char *)(dataOffset + 0x49) = *(char *)(dataOffset + 0x49) + '\\x01';\n      bitPosition = 0;\n    }\n  }\n  if ((numChunks & 7) != 0) {\n    *(char *)(dataOffset + 0x49) = *(char *)(dataOffset + 0x49) + '\\x01';\n  }\n  checksum = *(char *)(dataOffset + 0x49);\n  FUN_0800076c(dataOffset);\n  return (int)(char)(checksum + '\\x02');\n}\n\n",
            "renaming": {
                "FUN_080008e2": "calculate_checksum_080008e2",
                "param_1": "dataOffset",
                "param_2": "dataSize",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "startOffset",
                "uVar2": "numChunks",
                "uVar3": "i",
                "uVar4": "bitPosition",
                "cVar5": "checksum",
                "iVar6": "tempOffset"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800076c",
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000998": {
            "entrypoint": "0x08000998",
            "current_name": "extract_data_08000998",
            "code": "\nint extract_data_08000998(int data_address,int input_array,undefined4 param_3,undefined4 param_4)\n\n{\n  byte counter;\n  char next_index;\n  byte result_1;\n  byte result_2;\n  uint start_index;\n  uint updated_index;\n  \n  result_1 = FUN_08004640(*(undefined *)(data_address + 0xb),*(undefined *)(data_address + 0xc),param_3,param_4,\n                       param_4);\n  result_2 = FUN_08004640(*(undefined *)(data_address + 0xd),*(undefined *)(data_address + 0xe));\n  *(byte *)(data_address + 0xb) = result_2 << 1;\n  *(undefined *)(data_address + 0x49) = 3;\n  for (start_index = (uint)result_1; start_index < (uint)result_1 + (uint)result_2; start_index = start_index + 1 & 0xff) {\n    counter = *(byte *)(data_address + 0x49);\n    *(char *)(data_address + (uint)counter + 9) = (char)((ushort)*(undefined2 *)(input_array + start_index * 2) >> 8)\n    ;\n    updated_index = counter + 1 & 0xff;\n    next_index = (char)updated_index;\n    *(char *)(data_address + 0x49) = next_index;\n    *(undefined *)(data_address + updated_index + 9) = *(undefined *)(input_array + start_index * 2);\n    *(char *)(data_address + 0x49) = next_index + '\\x01';\n  }\n  next_index = *(char *)(data_address + 0x49);\n  FUN_0800076c(data_address);\n  return (int)(char)(next_index + '\\x02');\n}\n\n",
            "renaming": {
                "FUN_08000998": "extract_data_08000998",
                "param_1": "data_address",
                "param_2": "input_array",
                "bVar1": "counter",
                "cVar2": "next_index",
                "bVar3": "result_1",
                "bVar4": "result_2",
                "uVar5": "start_index",
                "uVar6": "updated_index"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800076c",
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a00": {
            "entrypoint": "0x08000a00",
            "current_name": "update_bit_in_array_08000a00",
            "code": "\nundefined4 updateBitInArray_08000a00(int arrayOffset,int arrayStart,undefined4 param3,undefined4 param4)\n\n{\n  uint bitIndex;\n  uint arrayIndex;\n  \n  bitIndex = FUN_08004640(*(undefined *)(arrayOffset + 0xb),*(undefined *)(arrayOffset + 0xc),param3,param4,\n                       param4);\n  arrayIndex = (bitIndex << 0x14) >> 0x18;\n  if (*(char *)(arrayOffset + 0xd) == -1) {\n    *(ushort *)(arrayStart + arrayIndex * 2) =\n         (ushort)(1 << (bitIndex & 0xf)) | *(ushort *)(arrayStart + arrayIndex * 2);\n  }\n  else {\n    *(ushort *)(arrayStart + arrayIndex * 2) =\n         *(ushort *)(arrayStart + arrayIndex * 2) & ~(ushort)(1 << (bitIndex & 0xf));\n  }\n  *(undefined *)(arrayOffset + 0x49) = 6;\n  FUN_0800076c(arrayOffset);\n  return 8;\n}\n\n",
            "renaming": {
                "FUN_08000a00": "update_bit_in_array_08000a00",
                "param_1": "arrayOffset",
                "param_2": "arrayStart",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "bitIndex",
                "uVar2": "arrayIndex"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800076c",
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a4e": {
            "entrypoint": "0x08000a4e",
            "current_name": "update_data_08000a4e",
            "code": "\nundefined4 updateData_08000a4e(int dataOffset,int resultOffset)\n\n{\n  byte byteValue;\n  undefined2 returnValue;\n  \n  byteValue = FUN_08004640(*(undefined *)(dataOffset + 0xb),*(undefined *)(dataOffset + 0xc));\n  returnValue = FUN_08004640(*(undefined *)(dataOffset + 0xd),*(undefined *)(dataOffset + 0xe));\n  *(undefined2 *)(resultOffset + (uint)byteValue * 2) = returnValue;\n  *(undefined *)(dataOffset + 0x49) = 6;\n  FUN_0800076c(dataOffset);\n  return 8;\n}\n\n",
            "renaming": {
                "FUN_08000a4e": "update_data_08000a4e",
                "param_1": "dataOffset",
                "param_2": "resultOffset",
                "bVar1": "byteValue",
                "uVar2": "returnValue"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800076c",
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a7a": {
            "entrypoint": "0x08000a7a",
            "current_name": "update_data_08000a7a",
            "code": "\nundefined4 updateData_08000a7a(int ptrData,int ptrResult,undefined4 param_3,undefined4 param_4)\n\n{\n  int var1;\n  int var2;\n  uint loopIndex;\n  uint bitIndex;\n  uint shiftAmount;\n  uint dividedResult;\n  uint offset;\n  \n  var1 = FUN_08004640(*(undefined *)(ptrData + 0xb),*(undefined *)(ptrData + 0xc),param_3,param_4,\n                       param_4);\n  var2 = FUN_08004640(*(undefined *)(ptrData + 0xd),*(undefined *)(ptrData + 0xe));\n  bitIndex = 0;\n  offset = 7;\n  for (loopIndex = 0; (int)loopIndex < var2; loopIndex = loopIndex + 1 & 0xffff) {\n    dividedResult = (loopIndex + var1) * 0x100000 >> 0x18;\n    shiftAmount = loopIndex + var1 & 0xf;\n    if (((int)(uint)*(byte *)(ptrData + offset + 9) >> bitIndex & 1U) == 0) {\n      *(ushort *)(ptrResult + dividedResult * 2) = *(ushort *)(ptrResult + dividedResult * 2) & ~(ushort)(1 << shiftAmount);\n    }\n    else {\n      *(ushort *)(ptrResult + dividedResult * 2) = (ushort)(1 << shiftAmount) | *(ushort *)(ptrResult + dividedResult * 2);\n    }\n    bitIndex = bitIndex + 1 & 0xff;\n    if (7 < bitIndex) {\n      offset = offset + 1 & 0xff;\n      bitIndex = 0;\n    }\n  }\n  *(undefined *)(ptrData + 0x49) = 6;\n  FUN_0800076c(ptrData);\n  return 8;\n}\n\n",
            "renaming": {
                "FUN_08000a7a": "update_data_08000a7a",
                "param_1": "ptrData",
                "param_2": "ptrResult",
                "iVar1": "var1",
                "iVar2": "var2",
                "uVar3": "loopIndex",
                "uVar4": "bitIndex",
                "uVar5": "shiftAmount",
                "uVar6": "dividedResult",
                "uVar7": "offset"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800076c",
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000b04": {
            "entrypoint": "0x08000b04",
            "current_name": "process_data_and_update_08000b04",
            "code": "\nint process_data_and_update_08000b04(int data_address,int result_address)\n\n{\n  byte num_items;\n  byte num_iterations;\n  char constant_value;\n  undefined2 processed_value;\n  uint iteration_index;\n  \n  num_items = *(byte *)(data_address + 0xc);\n  num_iterations = *(byte *)(data_address + 0xe);\n  *(undefined *)(data_address + 0xd) = 0;\n  *(byte *)(data_address + 0xe) = num_iterations;\n  *(undefined *)(data_address + 0x49) = 6;\n  for (iteration_index = 0; iteration_index < num_iterations; iteration_index = iteration_index + 1 & 0xff) {\n    processed_value = FUN_08004640(*(undefined *)(iteration_index * 2 + data_address + 0x10),\n                         *(undefined *)(data_address + (iteration_index + 4) * 2 + 9));\n    *(undefined2 *)(result_address + (num_items + iteration_index) * 2) = processed_value;\n  }\n  constant_value = *(char *)(data_address + 0x49);\n  FUN_0800076c(data_address);\n  return (int)(char)(constant_value + '\\x02');\n}\n\n",
            "renaming": {
                "FUN_08000b04": "process_data_and_update_08000b04",
                "param_1": "data_address",
                "param_2": "result_address",
                "bVar1": "num_items",
                "bVar2": "num_iterations",
                "cVar3": "constant_value",
                "uVar4": "processed_value",
                "uVar5": "iteration_index"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800076c",
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000b54": {
            "entrypoint": "0x08000b54",
            "current_name": "process_data_08000b54",
            "code": "\nint processData_08000b54(int **dataStruct,int *inputData,undefined4 value)\n\n{\n  byte result;\n  int returnValue;\n  uint unaff_value;\n  int outputValue;\n  \n  dataStruct[0x13] = inputData;\n  *(char *)(dataStruct + 0x18) = (char)value;\n  if (*(byte *)((int)dataStruct + 5) < 4) {\n    result = (**(code **)(**dataStruct + 8))();\n    unaff_value = (uint)result;\n  }\n  if (unaff_value == 0) {\n    outputValue = 0;\n  }\n  else if ((int)unaff_value < 8) {\n    outputValue = 0;\n  }\n  else {\n    outputValue = FUN_080006b4(dataStruct);\n    *(char *)(dataStruct + 2) = (char)outputValue;\n    if (*(char *)((int)dataStruct + 9) == *(char *)(dataStruct + 1)) {\n      returnValue = FUN_080007f0(dataStruct);\n      if (returnValue < 1) {\n        returnValue = FUN_08004204();\n        dataStruct[0x17] = (int *)((uint)*(ushort *)((int)dataStruct + 0x56) + returnValue);\n        *(undefined *)(dataStruct + 2) = 0;\n        switch(*(undefined *)((int)dataStruct + 10)) {\n        case 1:\n        case 2:\n          outputValue = FUN_080008e2(dataStruct,inputData,value);\n          break;\n        case 3:\n        case 4:\n          outputValue = FUN_08000998(dataStruct,inputData,value);\n          break;\n        case 5:\n          outputValue = FUN_08000a00(dataStruct,inputData,value);\n          break;\n        case 6:\n          outputValue = FUN_08000a4e(dataStruct,inputData,value);\n          break;\n        case 0xf:\n          outputValue = FUN_08000a7a(dataStruct,inputData,value);\n          break;\n        case 0x10:\n          outputValue = FUN_08000b04(dataStruct,inputData,value);\n        }\n      }\n      else {\n        if (returnValue != 0xff) {\n          FUN_080008cc(dataStruct,returnValue);\n          FUN_0800076c(dataStruct);\n        }\n        *(char *)(dataStruct + 2) = (char)returnValue;\n        outputValue = (int)(char)returnValue;\n      }\n    }\n    else {\n      outputValue = 0;\n    }\n  }\n  return outputValue;\n}\n\n",
            "renaming": {
                "FUN_08000b54": "process_data_08000b54",
                "param_1": "dataStruct",
                "param_2": "inputData",
                "param_3": "value",
                "bVar1": "result",
                "iVar2": "returnValue",
                "unaff_r5": "unaff_value",
                "iVar3": "outputValue"
            },
            "calling": [
                "FUN_08000c64"
            ],
            "called": [
                "FUN_08000a4e",
                "FUN_0800076c",
                "FUN_080008e2",
                "FUN_080008cc",
                "FUN_08000b04",
                "FUN_08000998",
                "FUN_08004204",
                "FUN_080007f0",
                "FUN_080006b4",
                "FUN_08000a7a",
                "FUN_08000a00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000c4c": {
            "entrypoint": "0x08000c4c",
            "current_name": "initialize_data_08000c4c",
            "code": "\nvoid initializeData_08000c4c(void)\n\n{\n  FUN_080005e4(0);\n  FUN_08000600(&DAT_20000124,0x4b00);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000c4c": "initialize_data_08000c4c"
            },
            "calling": [
                "FUN_08004658"
            ],
            "called": [
                "FUN_08000600",
                "FUN_080005e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000c64": {
            "entrypoint": "0x08000c64",
            "current_name": "initialize_data_08000c64",
            "code": "\nvoid initialize_data_08000c64(void)\n\n{\n  undefined4 unused_param;\n  \n  FUN_08000b54(&DAT_20000124,&DAT_20000004,0x10,unused_param,unused_param);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000c64": "initialize_data_08000c64",
                "in_r3": "unused_param"
            },
            "calling": [
                "FUN_08004658"
            ],
            "called": [
                "FUN_08000b54"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000c8c": {
            "entrypoint": "0x08000c8c",
            "current_name": "initialize_system_08000c8c",
            "code": "\n\n\nvoid initializeSystem_08000c8c(void)\n\n{\n  uint uVar1;\n  undefined4 isFlagSet;\n  undefined4 flagValue;\n  undefined4 counter;\n  undefined4 memoryAddress;\n  undefined4 constant1;\n  undefined4 constant2;\n  undefined4 variable1;\n  undefined4 variable2;\n  undefined4 mask;\n  undefined4 operation;\n  undefined4 value;\n  undefined4 value1;\n  undefined4 value2;\n  \n  _DAT_40023840 = _DAT_40023840 | 0x10000000;\n  _DAT_40007000 = _DAT_40007000 | 0xc000;\n  isFlagSet = 1;\n  flagValue = 0x50000;\n  counter = 2;\n  memoryAddress = 0x400000;\n  constant1 = 8;\n  constant2 = 0x150;\n  variable1 = 2;\n  variable2 = 7;\n  FUN_0800201c(&isFlagSet);\n  FUN_08001f9c();\n  mask = 0xf;\n  operation = 2;\n  value = 0;\n  value1 = 0x1400;\n  value2 = 0x1000;\n  FUN_08002488(&mask,5);\n  uVar1 = FUN_080025e0();\n  FUN_08000ee0(uVar1 / 1000);\n  FUN_08000f2c(4);\n  FUN_08000e60(0xffffffff,0,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000c8c": "initialize_system_08000c8c",
                "local_54": "isFlagSet",
                "local_50": "flagValue",
                "local_3c": "counter",
                "local_38": "memoryAddress",
                "local_34": "constant1",
                "local_30": "constant2",
                "local_2c": "variable1",
                "local_28": "variable2",
                "local_24": "mask",
                "local_20": "operation",
                "local_1c": "value",
                "local_18": "value1",
                "local_14": "value2"
            },
            "calling": [
                "FUN_080034ce"
            ],
            "called": [
                "FUN_08000f2c",
                "FUN_08000ee0",
                "FUN_080025e0",
                "FUN_08000e60",
                "FUN_08002488",
                "FUN_0800201c",
                "FUN_08001f9c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "entry": {
            "entrypoint": "0x08000d3c",
            "current_name": "entry",
            "code": "\n/* WARNING: This function may have set the stack pointer */\n\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined4 *)(iVar1 + 0x20000000) < &DAT_20000104; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x8006034);\n  }\n  for (puVar2 = &DAT_20000104; puVar2 < &DAT_20000678; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  FUN_080035bc();\n  FUN_08004884();\n  UNRECOVERED_JUMPTABLE = (code *)0x8000d72;\n  FUN_08004658();\n                    /* WARNING: Could not recover jumptable at 0x08000d72. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "renaming": {},
            "calling": [],
            "called": [
                "FUN_080035bc",
                "FUN_08004658",
                "FUN_08004884"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000d8e": {
            "entrypoint": "0x08000d8e",
            "current_name": "initialize_application_08000d8e",
            "code": "\nvoid initialize_application_08000d8e(void)\n\n{\n  FUN_080034ce();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000d8e": "initialize_application_08000d8e"
            },
            "calling": [
                "FUN_08004648"
            ],
            "called": [
                "FUN_080034ce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000d96": {
            "entrypoint": "0x08000d96",
            "current_name": "FUNC_08000d96",
            "code": "\nvoid FUNC_08000d96(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000d96": "FUNC_08000d96"
            },
            "calling": [
                "FUN_08000de4"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08000d98": {
            "entrypoint": "0x08000d98",
            "current_name": "check_and_set_param_08000d98",
            "code": "\nundefined4 checkAndSetParam_08000d98(uint input)\n\n{\n  int result;\n  \n  result = FUN_08000ee0(DAT_2000002c / (1000 / DAT_20000024));\n  if (result != 0) {\n    return 1;\n  }\n  if (0xf < input) {\n    return 1;\n  }\n  FUN_08000e60(0xffffffff,input,0);\n  DAT_20000028 = input;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08000d98": "check_and_set_param_08000d98",
                "param_1": "input",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08002488",
                "FUN_08000de4"
            ],
            "called": [
                "FUN_08000ee0",
                "FUN_08000e60"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000de4": {
            "entrypoint": "0x08000de4",
            "current_name": "initialize_components_08000de4",
            "code": "\n\n\nundefined4 initializeComponents_08000de4(void)\n\n{\n  _DAT_40023c00 = _DAT_40023c00 | 0x700;\n  FUN_08000e3c(3);\n  FUN_08000d98(0xf);\n  FUNC_08000d96();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08000de4": "initialize_components_08000de4"
            },
            "calling": [
                "FUN_080034ce"
            ],
            "called": [
                "FUN_08000d98",
                "FUN_08000e3c",
                "FUN_08000d96"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000e18": {
            "entrypoint": "0x08000e18",
            "current_name": "update_with_sum_08000e18",
            "code": "\nvoid updateWithSum_08000e18(void)\n\n{\n  DAT_20000670 = (uint)DAT_20000024 + DAT_20000670;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000e18": "update_with_sum_08000e18"
            },
            "calling": [
                "FUN_08003476"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000e30": {
            "entrypoint": "0x08000e30",
            "current_name": "get_global_data_08000e30",
            "code": "\nundefined4 getGlobalData_08000e30(void)\n\n{\n  return DAT_20000670;\n}\n\n",
            "renaming": {
                "FUN_08000e30": "get_global_data_08000e30"
            },
            "calling": [
                "FUN_0800346c",
                "FUN_08003d18",
                "FUN_08002488",
                "FUN_0800201c",
                "FUN_08001f9c",
                "FUN_08002dd0",
                "FUN_08002d0c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000e3c": {
            "entrypoint": "0x08000e3c",
            "current_name": "update_configuration_08000e3c",
            "code": "\n\n\nvoid updateConfiguration_08000e3c(uint inputValue)\n\n{\n  _DAT_e000ed0c = (inputValue & 7) << 8 | _DAT_e000ed0c & 0xf8ff | 0x5fa0000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000e3c": "update_configuration_08000e3c",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08004648",
                "FUN_08000de4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000e60": {
            "entrypoint": "0x08000e60",
            "current_name": "apply_bitwise_operations_08000e60",
            "code": "\n\n\nvoid applyBitwiseOperations_08000e60(uint dataAddress,uint flag1,uint flag2)\n\n{\n  uint shiftAmount;\n  uint adjustment;\n  \n  shiftAmount = (uint)(_DAT_e000ed0c << 0x15) >> 0x1d;\n  adjustment = 7 - shiftAmount;\n  if (3 < adjustment) {\n    adjustment = 4;\n  }\n  if (shiftAmount + 4 < 7) {\n    shiftAmount = 0;\n  }\n  else {\n    shiftAmount = shiftAmount - 3;\n  }\n  shiftAmount = (flag1 & (1 << (adjustment & 0xff)) - 1U) << (shiftAmount & 0xff) |\n          (1 << (shiftAmount & 0xff)) - 1U & flag2;\n  if ((int)dataAddress < 0) {\n    *(char *)((dataAddress & 0xf) + 0xe000ed14) = (char)(shiftAmount << 4);\n  }\n  else {\n    *(char *)(dataAddress + 0xe000e400) = (char)(shiftAmount << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000e60": "apply_bitwise_operations_08000e60",
                "param_1": "dataAddress",
                "param_2": "flag1",
                "param_3": "flag2",
                "uVar1": "shiftAmount",
                "uVar2": "adjustment"
            },
            "calling": [
                "FUN_08000d98",
                "FUN_08000c8c",
                "FUN_08003e54",
                "FUN_08003eac"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000ec4": {
            "entrypoint": "0x08000ec4",
            "current_name": "set_bit_08000ec4",
            "code": "\nvoid setBit_08000ec4(uint bitIndex)\n\n{\n  if (-1 < (int)bitIndex) {\n    *(int *)((bitIndex >> 5) * 4 + -0x1fff1f00) = 1 << (bitIndex & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000ec4": "set_bit_08000ec4",
                "param_1": "bitIndex"
            },
            "calling": [
                "FUN_08003e54",
                "FUN_08003eac"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000ee0": {
            "entrypoint": "0x08000ee0",
            "current_name": "set_param_values_08000ee0",
            "code": "\n\n\nundefined4 set_param_values_08000ee0(int input_value)\n\n{\n  if (input_value - 1U < 0x1000000) {\n    _DAT_e000e014 = input_value - 1U;\n    DAT_e000ed23 = 0xf0;\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08000ee0": "set_param_values_08000ee0",
                "param_1": "input_value"
            },
            "calling": [
                "FUN_08000d98",
                "FUN_08000c8c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000f0c": {
            "entrypoint": "0x08000f0c",
            "current_name": "set_bit_at_index_08000f0c",
            "code": "\nvoid setBitAtIndex_08000f0c(uint index)\n\n{\n  if (-1 < (int)index) {\n    *(int *)(((index >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (index & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000f0c": "set_bit_at_index_08000f0c",
                "param_1": "index"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000f2c": {
            "entrypoint": "0x08000f2c",
            "current_name": "update_flag_08000f2c",
            "code": "\n\n\nvoid updateFlag_08000f2c(int flag)\n\n{\n  if (flag != 4) {\n    _DAT_e000e010 = _DAT_e000e010 & 0xfffffffb;\n    return;\n  }\n  _DAT_e000e010 = _DAT_e000e010 | 4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000f2c": "update_flag_08000f2c",
                "param_1": "flag"
            },
            "calling": [
                "FUN_08000c8c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000f4c": {
            "entrypoint": "0x08000f4c",
            "current_name": "FUNC_08000f4c",
            "code": "\nvoid FUNC_08000f4c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000f4c": "FUNC_08000f4c"
            },
            "calling": [
                "FUN_08000f4e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08000f4e": {
            "entrypoint": "0x08000f4e",
            "current_name": "initialize_system_08000f4e",
            "code": "\nvoid initializeSystem_08000f4e(void)\n\n{\n  FUNC_08000f4c();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000f4e": "initialize_system_08000f4e"
            },
            "calling": [
                "FUN_08003476"
            ],
            "called": [
                "FUN_08000f4c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000f56": {
            "entrypoint": "0x08000f56",
            "current_name": "initialize_data_08000f56",
            "code": "\nundefined4 initializeData_08000f56(int dataPointer)\n\n{\n  if (dataPointer != 0) {\n    *(undefined *)(dataPointer + 4) = 2;\n    FUN_080033c8();\n    *(undefined4 *)(dataPointer + 0x10) = 0;\n    *(undefined *)(dataPointer + 4) = 0;\n    *(undefined *)(dataPointer + 5) = 0;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08000f56": "initialize_data_08000f56",
                "param_1": "dataPointer"
            },
            "calling": [
                "FUN_080033d8"
            ],
            "called": [
                "FUN_080033c8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000f72": {
            "entrypoint": "0x08000f72",
            "current_name": "clear_bit_and_set_flag_08000f72",
            "code": "\nundefined4 clearBitAndSetFlag_08000f72(uint **bytePointer,uint bitPosition)\n\n{\n  **bytePointer = **bytePointer & ~(1 << (bitPosition & 0xff));\n  *(undefined *)(bytePointer + 1) = 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08000f72": "clear_bit_and_set_flag_08000f72",
                "param_1": "bytePointer",
                "param_2": "bitPosition"
            },
            "calling": [
                "FUN_080033d8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000f8c": {
            "entrypoint": "0x08000f8c",
            "current_name": "update_param_08000f8c",
            "code": "\nundefined4 updateParam_08000f8c(uint **paramList)\n\n{\n  if (*(char *)((int)paramList + 0x35) != '\\x02') {\n    paramList[0x15] = (uint *)0x80;\n    return 1;\n  }\n  *(undefined *)((int)paramList + 0x35) = 5;\n  **paramList = **paramList & 0xfffffffe;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08000f8c": "update_param_08000f8c",
                "param_1": "paramList",
                "param_1[0x15]": "paramList[0x15]"
            },
            "calling": [
                "FUN_08002ffc",
                "FUN_08001ab0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000fb4": {
            "entrypoint": "0x08000fb4",
            "current_name": "update_registers_08000fb4",
            "code": "\n\n\nvoid updateRegisters_08000fb4(uint *ioReg,uint *inputData)\n\n{\n  uint temp1;\n  uint temp2;\n  uint uIndex;\n  uint mask;\n  uint temp5;\n  int index1;\n  uint temp7;\n  int index2;\n  \n  for (uIndex = 0; uIndex < 0x10; uIndex = uIndex + 1) {\n    temp2 = 1 << (uIndex & 0xff);\n    mask = temp2 & *inputData;\n    temp1 = _DAT_40013c0c;\n    if (temp2 == mask) {\n      if ((inputData[1] == 2) || (inputData[1] == 0x12)) {\n        index1 = (uIndex >> 3) + 8;\n        index2 = (uIndex & 7) << 2;\n        ioReg[index1] = ioReg[index1] & ~(0xf << index2) | inputData[4] << index2;\n      }\n      temp7 = uIndex << 1;\n      temp1 = ~(3 << (temp7 & 0xff));\n      *ioReg = *ioReg & temp1 | (inputData[1] & 3) << (temp7 & 0xff);\n      temp5 = inputData[1];\n      if (((temp5 - 1 < 2) || (temp5 == 0x11)) || (temp5 == 0x12)) {\n        ioReg[2] = ioReg[2] & temp1 | inputData[3] << (temp7 & 0xff);\n        ioReg[1] = ioReg[1] & ~temp2 | ((inputData[1] << 0x1b) >> 0x1f) << (uIndex & 0xff);\n      }\n      ioReg[3] = temp1 & ioReg[3] | inputData[2] << (temp7 & 0xff);\n      temp1 = _DAT_40013c0c;\n      if ((inputData[1] & 0x10000000) != 0) {\n        _DAT_40023844 = _DAT_40023844 | 0x4000;\n        index2 = (uIndex & 3) << 2;\n        if (ioReg == (uint *)0x40020000) {\n          index1 = 0;\n        }\n        else if (ioReg == (uint *)0x40020400) {\n          index1 = 1;\n        }\n        else if (ioReg == (uint *)0x40020800) {\n          index1 = 2;\n        }\n        else if (ioReg == (uint *)0x40020c00) {\n          index1 = 3;\n        }\n        else if (ioReg == (uint *)0x40021000) {\n          index1 = 4;\n        }\n        else if (ioReg == (uint *)0x40021400) {\n          index1 = 5;\n        }\n        else if (ioReg == (uint *)0x40021800) {\n          index1 = 6;\n        }\n        else if (ioReg == (uint *)0x40021c00) {\n          index1 = 7;\n        }\n        else if (ioReg == (uint *)0x40022000) {\n          index1 = 8;\n        }\n        else if (ioReg == (uint *)0x40022400) {\n          index1 = 9;\n        }\n        else {\n          index1 = 10;\n        }\n        *(uint *)(((uIndex >> 2) + 2) * 4 + 0x40013800) =\n             *(uint *)(((uIndex >> 2) + 2) * 4 + 0x40013800) & ~(0xf << index2) | index1 << index2;\n        temp1 = ~mask;\n        temp2 = _DAT_40013c00 & temp1;\n        if ((inputData[1] & 0x10000) != 0) {\n          temp2 = mask | _DAT_40013c00;\n        }\n        temp5 = temp1 & _DAT_40013c04;\n        if ((inputData[1] & 0x20000) != 0) {\n          temp5 = mask | _DAT_40013c04;\n        }\n        temp7 = temp1 & _DAT_40013c08;\n        if ((inputData[1] & 0x100000) != 0) {\n          temp7 = mask | _DAT_40013c08;\n        }\n        _DAT_40013c00 = temp2;\n        _DAT_40013c04 = temp5;\n        _DAT_40013c08 = temp7;\n        temp1 = temp1 & _DAT_40013c0c;\n        if ((inputData[1] & 0x200000) != 0) {\n          temp1 = mask | _DAT_40013c0c;\n        }\n      }\n    }\n    _DAT_40013c0c = temp1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000fb4": "update_registers_08000fb4",
                "param_1": "ioReg",
                "param_2": "inputData",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "uVar3": "uIndex",
                "uVar4": "mask",
                "uVar5": "temp5",
                "uVar7": "temp7",
                "iVar6": "index1",
                "iVar8": "index2"
            },
            "calling": [
                "FUN_08003486",
                "FUN_08003978"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001198": {
            "entrypoint": "0x08001198",
            "current_name": "set_param_value_08001198",
            "code": "\nvoid setParamValue_08001198(int objectAddress,int value,int isShifted)\n\n{\n  if (isShifted == 0) {\n    *(int *)(objectAddress + 0x18) = value << 0x10;\n    return;\n  }\n  *(int *)(objectAddress + 0x18) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001198": "set_param_value_08001198",
                "param_1": "objectAddress",
                "param_2": "value",
                "param_3": "isShifted"
            },
            "calling": [
                "FUN_080034b6"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080011a4": {
            "entrypoint": "0x080011a4",
            "current_name": "update_data_if_needed_080011a4",
            "code": "\n\n\nvoid update_data_if_needed_080011a4(uint input_data)\n\n{\n  if ((_DAT_40013c14 & input_data) != 0) {\n    _DAT_40013c14 = input_data;\n    FUN_080047d0();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080011a4": "update_data_if_needed_080011a4",
                "param_1": "input_data"
            },
            "calling": [],
            "called": [
                "FUN_080047d0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080011c0": {
            "entrypoint": "0x080011c0",
            "current_name": "update_flags_based_on_conditions_080011c0",
            "code": "\nundefined4 updateFlagsBasedOnConditions_080011c0(int *parameters)\n\n{\n  if (*(char *)((int)parameters + 0x3e) == '@') {\n    if (valueAtOffset14 == 0) {\n      *(uint *)(*parameters + 0x10) = valueAtOffset11 & 0xfe;\n    }\n    else {\n      *(uint *)(*parameters + 0x10) = valueAtOffset11 & 0xffU | 1;\n    }\n  }\n  else if (parameters[4] == 0x4000) {\n    if (*(char *)((int)parameters + 0x3d) == '!') {\n      *(uint *)(*parameters + 0x10) = valueAtOffset11 & 0xfe;\n    }\n    else {\n      *(uint *)(*parameters + 0x10) = valueAtOffset11 & 0xffU | 1;\n    }\n  }\n  else if (valueAtOffset14 == 0) {\n    *(uint *)(*parameters + 0x10) = (uint)(valueAtOffset11 << 0x10) >> 0x17 & 6 | 0xf0;\n  }\n  else if (valueAtOffset14 == 1) {\n    *(uint *)(*parameters + 0x10) = (uint)(valueAtOffset11 << 0x10) >> 0x17 & 6 | 0xf1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080011c0": "update_flags_based_on_conditions_080011c0",
                "param_1": "parameters",
                "param_1[0x14]": "valueAtOffset14",
                "param_1[0x11]": "valueAtOffset11"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800124a": {
            "entrypoint": "0x0800124a",
            "current_name": "set_param_from_index_0800124a",
            "code": "\nundefined4 setParamFromIndex_0800124a(int *paramArray)\n\n{\n  *(uint *)(*paramArray + 0x10) = paramArray[0x11] & 0xff;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800124a": "set_param_from_index_0800124a",
                "param_1": "paramArray"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001256": {
            "entrypoint": "0x08001256",
            "current_name": "update_flag_values_08001256",
            "code": "\nundefined4 updateFlagValues_08001256(uint **parameters)\n\n{\n  uint *ptrValue;\n  \n  ptrValue = parameters[11];\n  if ((*(char *)((int)parameters + 0x3d) == '\\\"') &&\n     ((parameters[20] != (uint *)0x0 || (*(char *)((int)parameters + 0x3e) != '@')))) {\n    if ((parameters[20] == (uint *)0x0) && (parameters[4] == (uint *)0xc000)) {\n      **parameters = **parameters | 0x100;\n      parameters[20] = (uint *)((int)parameters[20] + 1);\n    }\n    else {\n      if (*(short *)((int)parameters + 0x2a) == 0) {\n        **parameters = **parameters | 0x200;\n      }\n      else if (*(short *)((int)parameters + 0x2a) == 1) {\n        if (ptrValue == (uint *)0xffff0000) {\n          **parameters = **parameters & 0xfffffbff;\n          ptrValue = *parameters;\n          if ((ptrValue[1] & 0x800) == 0) {\n            *ptrValue = *ptrValue | 0x200;\n          }\n          else {\n            *ptrValue = *ptrValue & 0xfffffbff;\n          }\n        }\n        else if (((ptrValue == (uint *)0x4) || (ptrValue == (uint *)0x8)) ||\n                (parameters[0xc] == (uint *)0x12)) {\n          **parameters = **parameters & 0xfffffbff;\n          **parameters = **parameters | 0x200;\n        }\n        else if (parameters[11] == (uint *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters & 0xfffffbff;\n        }\n      }\n      else if (*(short *)((int)parameters + 0x2a) == 2) {\n        if (parameters[11] == (uint *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters & 0xfffffbff;\n          **parameters = **parameters | 0x800;\n        }\n        ptrValue = *parameters;\n        if ((ptrValue[1] & 0x800) != 0) {\n          ptrValue[1] = ptrValue[1] | 0x1000;\n        }\n      }\n      else {\n        **parameters = **parameters | 0x400;\n        ptrValue = *parameters;\n        if ((ptrValue[1] & 0x800) != 0) {\n          ptrValue[1] = ptrValue[1] | 0x1000;\n        }\n      }\n      parameters[20] = (uint *)0x0;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001256": "update_flag_values_08001256",
                "param_1": "parameters",
                "puVar1": "ptrValue",
                "param_1[0xb]": "parameters[11]",
                "param_1[0x14]": "parameters[20]",
                "param_1[4]": "parameters[4]"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001420": {
            "entrypoint": "0x08001420",
            "current_name": "update_buffer_08001420",
            "code": "\nundefined4 updateBuffer_08001420(int *buffer)\n\n{\n  byte *currentByte;\n  \n  if (*(short *)((int)buffer + 0x2a) != 0) {\n    currentByte = (byte *)buffer[9];\n    buffer[9] = (int)(currentByte + 1);\n    *(uint *)(*buffer + 0x10) = (uint)*currentByte;\n    *(short *)((int)buffer + 0x2a) = *(short *)((int)buffer + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001420": "update_buffer_08001420",
                "param_1": "buffer",
                "pbVar1": "currentByte"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001440": {
            "entrypoint": "0x08001440",
            "current_name": "update_value_in_array_08001440",
            "code": "\nundefined4 updateValueInArray_08001440(int *array)\n\n{\n  undefined *nextPointer;\n  \n  if (*(short *)((int)array + 0x2a) != 0) {\n    nextPointer = (undefined *)array[9];\n    array[9] = (int)(nextPointer + 1);\n    *nextPointer = (char)*(undefined4 *)(*array + 0x10);\n    *(short *)((int)array + 0x2a) = *(short *)((int)array + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001440": "update_value_in_array_08001440",
                "param_1": "array",
                "puVar1": "nextPointer"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001460": {
            "entrypoint": "0x08001460",
            "current_name": "process_params_08001460",
            "code": "\nundefined4 process_params_08001460(uint **param_list,uint *param_ptr,int param_length,uint *data_ptr)\n\n{\n  undefined4 result;\n  uint *ptr;\n  \n  if (*(char *)((int)param_list + 0x3d) == '(') {\n    if (param_ptr == (uint *)0x0) {\n      result = 1;\n    }\n    else if (param_length == 0) {\n      result = 1;\n    }\n    else if (*(char *)(param_list + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(param_list + 0xf) = 1;\n      ptr = *param_list;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **param_list = **param_list & 0xfffff7ff;\n      *(undefined *)((int)param_list + 0x3d) = 0x29;\n      *(undefined *)((int)param_list + 0x3e) = 0x20;\n      result = 0;\n      param_ptr2 = (uint *)0x0;\n      param_ptr3 = param_ptr;\n      *(short *)((int)param_list + 0x2a) = (short)param_length;\n      param_ptr4 = data_ptr;\n      *(undefined2 *)(param_list + 10) = *(undefined2 *)((int)param_list + 0x2a);\n      *(undefined *)(param_list + 0xf) = 0;\n      (*param_list)[1] = (*param_list)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08001460": "process_params_08001460",
                "param_1": "param_list",
                "param_2": "param_ptr",
                "param_3": "param_length",
                "param_4": "data_ptr",
                "uVar1": "result",
                "puVar2": "ptr",
                "param_1[0x10]": "param_ptr2",
                "param_1[9]": "param_ptr3",
                "param_1[0xb]": "param_ptr4"
            },
            "calling": [
                "FUN_08003880"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080014ec": {
            "entrypoint": "0x080014ec",
            "current_name": "validate_input_080014ec",
            "code": "\nundefined4 validate_input_080014ec(uint **function_data,uint *param1,int param2,uint *param3)\n\n{\n  undefined4 result;\n  uint *ptr;\n  \n  if (*(char *)((int)function_data + 0x3d) == '(') {\n    if (param1 == (uint *)0x0) {\n      result = 1;\n    }\n    else if (param2 == 0) {\n      result = 1;\n    }\n    else if (*(char *)(function_data + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(function_data + 0xf) = 1;\n      ptr = *function_data;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **function_data = **function_data & 0xfffff7ff;\n      *(undefined *)((int)function_data + 0x3d) = 0x2a;\n      *(undefined *)((int)function_data + 0x3e) = 0x20;\n      result = 0;\n      function_data[0x10] = (uint *)0x0;\n      function_data[9] = param1;\n      *(short *)((int)function_data + 0x2a) = (short)param2;\n      function_data[0xb] = param3;\n      *(undefined2 *)(function_data + 10) = *(undefined2 *)((int)function_data + 0x2a);\n      *(undefined *)(function_data + 0xf) = 0;\n      (*function_data)[1] = (*function_data)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080014ec": "validate_input_080014ec",
                "param_1": "function_data",
                "param_2": "param1",
                "param_3": "param2",
                "param_4": "param3",
                "uVar1": "result",
                "puVar2": "ptr"
            },
            "calling": [
                "FUN_08003880"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001578": {
            "entrypoint": "0x08001578",
            "current_name": "initialize_variable_08001578",
            "code": "\nundefined4 initializeVariable_08001578(uint **parameter)\n\n{\n  uint *pointerVar;\n  \n  if (*(char *)((int)parameter + 0x3d) != ' ') {\n    return 2;\n  }\n  *(undefined *)((int)parameter + 0x3d) = 0x28;\n  pointerVar = *parameter;\n  if ((*pointerVar & 1) == 0) {\n    *pointerVar = *pointerVar | 1;\n  }\n  **parameter = **parameter | 0x400;\n  (*parameter)[1] = (*parameter)[1] | 0x300;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001578": "initialize_variable_08001578",
                "param_1": "parameter",
                "puVar1": "pointerVar"
            },
            "calling": [
                "FUN_080038d0",
                "FUN_08003900"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080015b6": {
            "entrypoint": "0x080015b6",
            "current_name": "FUNC_080015b6",
            "code": "\nvoid FUNC_080015b6(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080015b6": "FUNC_080015b6"
            },
            "calling": [
                "FUN_08001864",
                "FUN_0800171a"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080015b8": {
            "entrypoint": "0x080015b8",
            "current_name": "FUNC_080015b8",
            "code": "\nvoid FUNC_080015b8(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080015b8": "FUNC_080015b8"
            },
            "calling": [
                "FUN_08001904",
                "FUN_080019a0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080015ba": {
            "entrypoint": "0x080015ba",
            "current_name": "FUNC_080015ba",
            "code": "\nvoid FUNC_080015ba(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080015ba": "FUNC_080015ba"
            },
            "calling": [
                "FUN_080015bc",
                "FUN_08001684"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080015bc": {
            "entrypoint": "0x080015bc",
            "current_name": "process_data_080015bc",
            "code": "\nundefined4 processData_080015bc(int *data)\n\n{\n  char charValue;\n  byte *bytePtr;\n  \n  charValue = *(char *)((int)data + 0x3d);\n  if (*(short *)((int)data + 0x2a) != 0) {\n    bytePtr = (byte *)data[9];\n    data[9] = (int)(bytePtr + 1);\n    *(uint *)(*data + 0x10) = (uint)*bytePtr;\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    if ((*(short *)((int)data + 0x2a) == 0) && (charValue == ')')) {\n      *(uint *)(*data + 4) = *(uint *)(*data + 4) & 0xfffffbff;\n      data[0xc] = 0x21;\n      *(undefined *)((int)data + 0x3d) = 0x28;\n      FUNC_080015ba();\n    }\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080015bc": "process_data_080015bc",
                "param_1": "data",
                "cVar1": "charValue",
                "pbVar2": "bytePtr"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_080015ba"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800160c": {
            "entrypoint": "0x0800160c",
            "current_name": "FUNC_0800160c",
            "code": "\nvoid FUNC_0800160c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800160c": "FUNC_0800160c"
            },
            "calling": [
                "FUN_0800160e",
                "FUN_08001bfc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800160e": {
            "entrypoint": "0x0800160e",
            "current_name": "update_parameter_0800160e",
            "code": "\nundefined4 updateParameter_0800160e(int *paramArray)\n\n{\n  char charValue;\n  undefined *undefinedPointer;\n  \n  charValue = *(char *)((int)paramArray + 0x3d);\n  if (*(short *)((int)paramArray + 0x2a) != 0) {\n    undefinedPointer = (undefined *)pointerToArray;\n    pointerToArray = (int)(undefinedPointer + 1);\n    *undefinedPointer = (char)*(undefined4 *)(*paramArray + 0x10);\n    *(short *)((int)paramArray + 0x2a) = *(short *)((int)paramArray + 0x2a) + -1;\n    if ((*(short *)((int)paramArray + 0x2a) == 0) && (charValue == '*')) {\n      *(uint *)(*paramArray + 4) = *(uint *)(*paramArray + 4) & 0xfffffbff;\n      hexValue = 0x22;\n      *(undefined *)((int)paramArray + 0x3d) = 0x28;\n      FUNC_0800160c();\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800160e": "update_parameter_0800160e",
                "param_1": "paramArray",
                "cVar1": "charValue",
                "puVar2": "undefinedPointer",
                "param_1[9]": "pointerToArray",
                "param_1[0xc]": "hexValue"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_0800160c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800165a": {
            "entrypoint": "0x0800165a",
            "current_name": "process_data_0800165a",
            "code": "\nundefined4 processData_0800165a(int *data,undefined4 flag1,undefined4 flag2,undefined4 param4)\n\n{\n  undefined2 value1;\n  uint value2;\n  \n  value2 = *(uint *)(*data + 0x18);\n  if ((value2 & 0x80) == 0) {\n    value1 = *(undefined2 *)(data + 3);\n  }\n  else {\n    value1 = *(undefined2 *)(data + 6);\n  }\n  FUN_08003880(data,(*(uint *)(*data + 0x18) & 4) == 0,value1,value2,param4);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800165a": "process_data_0800165a",
                "param_1": "data",
                "param_2": "flag1",
                "param_3": "flag2",
                "param_4": "param4",
                "uVar1": "value1",
                "uVar2": "value2"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_08003880"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001684": {
            "entrypoint": "0x08001684",
            "current_name": "process_parameters_08001684",
            "code": "\nundefined4 processParameters_08001684(uint **params)\n\n{\n  if (((param_1_b == (uint *)0x4) || (param_1_b == (uint *)0x8)) &&\n     (*(char *)((int)params + 0x3d) == '(')) {\n    param_1_b = (uint *)0xffff0000;\n    (*params)[1] = (*params)[1] & 0xfffff8ff;\n    (*params)[5] = 0xfffffbff;\n    **params = **params & 0xfffffbff;\n    params[0xc] = (uint *)0x0;\n    *(undefined *)((int)params + 0x3d) = 0x20;\n    *(undefined *)((int)params + 0x3e) = 0;\n    FUN_080038d0();\n  }\n  else if (*(char *)((int)params + 0x3d) == 'exclamation') {\n    param_1_b = (uint *)0xffff0000;\n    params[0xc] = (uint *)0x21;\n    *(undefined *)((int)params + 0x3d) = 0x20;\n    *(undefined *)((int)params + 0x3e) = 0;\n    (*params)[1] = (*params)[1] & 0xfffff8ff;\n    (*params)[5] = 0xfffffbff;\n    **params = **params & 0xfffffbff;\n    FUNC_080015ba();\n  }\n  else {\n    (*params)[5] = 0xfffffbff;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001684": "process_parameters_08001684",
                "param_1": "params",
                "param_1[0xb]": "param_1_b",
                "!": "exclamation"
            },
            "calling": [
                "FUN_08001e68"
            ],
            "called": [
                "FUN_080015ba",
                "FUN_080038d0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001718": {
            "entrypoint": "0x08001718",
            "current_name": "FUNC_08001718",
            "code": "\nvoid FUNC_08001718(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001718": "FUNC_08001718"
            },
            "calling": [
                "FUN_08001864",
                "FUN_0800171a"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800171a": {
            "entrypoint": "0x0800171a",
            "current_name": "process_data_0800171a",
            "code": "\nundefined4 processData_0800171a(uint **data)\n\n{\n  char character;\n  uint *ptr;\n  \n  character = *(char *)((int)data + 0x3d);\n  ptr = data[0xb];\n  if ((*(short *)(data + 10) == 0) && (character == '!')) {\n    if ((ptr == (uint *)0x4) || ((ptr == (uint *)0x8 || (ptr == (uint *)0xffff0000)))) {\n      (*data)[1] = (*data)[1] & 0xfffff8ff;\n      **data = **data | 0x200;\n      data[0xc] = (uint *)0x0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      if (*(char *)((int)data + 0x3e) == '@') {\n        *(undefined *)((int)data + 0x3e) = 0;\n        FUNC_08001718();\n      }\n      else {\n        *(undefined *)((int)data + 0x3e) = 0;\n        FUNC_080015b6();\n      }\n    }\n    else {\n      (*data)[1] = (*data)[1] & 0xfffff8ff;\n      data[0xc] = (uint *)0x11;\n      *(undefined *)((int)data + 0x3e) = 0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      FUNC_080015b6();\n    }\n  }\n  else if ((character == '!') || ((*(char *)((int)data + 0x3e) == '@' && (character == '\\\"')))) {\n    if (*(short *)((int)data + 0x2a) == 0) {\n      (*data)[1] = (*data)[1] & 0xfffffbff;\n    }\n    else if (*(char *)((int)data + 0x3e) == '@') {\n      if (data[0x14] == (uint *)0x0) {\n        if (data[0x13] == (uint *)0x1) {\n          (*data)[4] = (uint)data[0x12] & 0xff;\n          data[0x14] = (uint *)((int)data[0x14] + 2);\n        }\n        else {\n          (*data)[4] = (uint)((int)data[0x12] << 0x10) >> 0x18;\n          data[0x14] = (uint *)((int)data[0x14] + 1);\n        }\n      }\n      else if (data[0x14] == (uint *)0x1) {\n        (*data)[4] = (uint)data[0x12] & 0xff;\n        data[0x14] = (uint *)((int)data[0x14] + 1);\n      }\n      else if (data[0x14] == (uint *)0x2) {\n        if (*(char *)((int)data + 0x3d) == '\\\"') {\n          **data = **data | 0x100;\n        }\n        else if (*(char *)((int)data + 0x3d) == '!') {\n          ptr = data[9];\n          data[9] = (uint *)((int)ptr + 1);\n          (*data)[4] = (uint)*(byte *)ptr;\n          *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n        }\n      }\n    }\n    else {\n      ptr = data[9];\n      data[9] = (uint *)((int)ptr + 1);\n      (*data)[4] = (uint)*(byte *)ptr;\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800171a": "process_data_0800171a",
                "param_1": "data",
                "cVar1": "character",
                "puVar2": "ptr"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_08001718",
                "FUN_080015b6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001864": {
            "entrypoint": "0x08001864",
            "current_name": "process_param_08001864",
            "code": "\nundefined4 processParam_08001864(uint **param)\n\n{\n  uint *ptr;\n  \n  ptr = ptr1;\n  if (*(char *)((int)param + 0x3d) == '!') {\n    if (*(short *)((int)param + 0x2a) == 0) {\n      if (((ptr == (uint *)0x4) || (ptr == (uint *)0x8)) || (ptr == (uint *)0xffff0000)) {\n        (*param)[1] = (*param)[1] & 0xfffff8ff;\n        **param = **param | 0x200;\n        ptr2 = (uint *)0x0;\n        *(undefined *)((int)param + 0x3d) = 0x20;\n        if (*(char *)((int)param + 0x3e) == '@') {\n          *(undefined *)((int)param + 0x3e) = 0;\n          FUNC_08001718();\n        }\n        else {\n          *(undefined *)((int)param + 0x3e) = 0;\n          FUNC_080015b6();\n        }\n      }\n      else {\n        (*param)[1] = (*param)[1] & 0xfffff8ff;\n        ptr2 = (uint *)0x11;\n        *(undefined *)((int)param + 0x3e) = 0;\n        *(undefined *)((int)param + 0x3d) = 0x20;\n        FUNC_080015b6();\n      }\n    }\n    else {\n      ptr = param[9];\n      param[9] = (uint *)((int)ptr + 1);\n      (*param)[4] = (uint)*(byte *)ptr;\n      *(short *)((int)param + 0x2a) = *(short *)((int)param + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001864": "process_param_08001864",
                "param_1": "param",
                "puVar1": "ptr",
                "param_1[0xb]": "ptr1",
                "param_1[0xc]": "ptr2"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_08001718",
                "FUN_080015b6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001902": {
            "entrypoint": "0x08001902",
            "current_name": "FUNC_08001902",
            "code": "\nvoid FUNC_08001902(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001902": "FUNC_08001902"
            },
            "calling": [
                "FUN_08001904",
                "FUN_080019a0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08001904": {
            "entrypoint": "0x08001904",
            "current_name": "process_param_08001904",
            "code": "\nundefined4 processParam_08001904(uint **param)\n\n{\n  uint *ptr;\n  \n  if (*(char *)((int)param + 0x3d) == '\\\"') {\n    if (*(ushort *)((int)param + 0x2a) < 4) {\n      if (*(ushort *)((int)param + 0x2a) < 2) {\n        **param = **param & 0xfffffbff;\n        (*param)[1] = (*param)[1] & 0xfffff8ff;\n        ptr = ptrAtIndex9;\n        ptrAtIndex9 = (uint *)((int)ptr + 1);\n        *(char *)ptr = (char)(*param)[4];\n        *(short *)((int)param + 0x2a) = *(short *)((int)param + 0x2a) + -1;\n        *(undefined *)((int)param + 0x3d) = 0x20;\n        ptrAtIndexC = (uint *)0x0;\n        if (*(char *)((int)param + 0x3e) == '@') {\n          *(undefined *)((int)param + 0x3e) = 0;\n          FUNC_08001902();\n        }\n        else {\n          *(undefined *)((int)param + 0x3e) = 0;\n          FUNC_080015b8();\n        }\n      }\n    }\n    else {\n      ptr = ptrAtIndex9;\n      ptrAtIndex9 = (uint *)((int)ptr + 1);\n      *(char *)ptr = (char)(*param)[4];\n      *(short *)((int)param + 0x2a) = *(short *)((int)param + 0x2a) + -1;\n      if (*(short *)((int)param + 0x2a) == 3) {\n        (*param)[1] = (*param)[1] & 0xfffffbff;\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001904": "process_param_08001904",
                "param_1": "param",
                "puVar1": "ptr",
                "param_1[9]": "ptrAtIndex9",
                "param_1[0xc]": "ptrAtIndexC"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_08001902",
                "FUN_080015b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080019a0": {
            "entrypoint": "0x080019a0",
            "current_name": "process_param_080019a0",
            "code": "\nundefined4 processParam_080019a0(uint **parameters)\n\n{\n  uint *tempVar1;\n  \n  if (*(short *)((int)parameters + 0x2a) == 4) {\n    (*parameters)[1] = (*parameters)[1] & 0xfffffbff;\n    tempVar1 = parameters[9];\n    parameters[9] = (uint *)((int)tempVar1 + 1);\n    *(char *)tempVar1 = (char)(*parameters)[4];\n    *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n  }\n  else if (*(short *)((int)parameters + 0x2a) == 3) {\n    (*parameters)[1] = (*parameters)[1] & 0xfffffbff;\n    **parameters = **parameters & 0xfffffbff;\n    tempVar1 = parameters[9];\n    parameters[9] = (uint *)((int)tempVar1 + 1);\n    *(char *)tempVar1 = (char)(*parameters)[4];\n    *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n  }\n  else if (*(short *)((int)parameters + 0x2a) == 2) {\n    if ((int)parameters[0xb] - 1U < 2) {\n      **parameters = **parameters & 0xfffffbff;\n      **parameters = **parameters | 0x100;\n    }\n    else {\n      **parameters = **parameters | 0x200;\n    }\n    tempVar1 = parameters[9];\n    parameters[9] = (uint *)((int)tempVar1 + 1);\n    *(char *)tempVar1 = (char)(*parameters)[4];\n    *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n    tempVar1 = parameters[9];\n    parameters[9] = (uint *)((int)tempVar1 + 1);\n    *(char *)tempVar1 = (char)(*parameters)[4];\n    *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n    (*parameters)[1] = (*parameters)[1] & 0xfffffcff;\n    *(undefined *)((int)parameters + 0x3d) = 0x20;\n    parameters[0xc] = (uint *)0x0;\n    if (*(char *)((int)parameters + 0x3e) == '@') {\n      *(undefined *)((int)parameters + 0x3e) = 0;\n      FUNC_08001902();\n    }\n    else {\n      *(undefined *)((int)parameters + 0x3e) = 0;\n      FUNC_080015b8();\n    }\n  }\n  else {\n    tempVar1 = parameters[9];\n    parameters[9] = (uint *)((int)tempVar1 + 1);\n    *(char *)tempVar1 = (char)(*parameters)[4];\n    *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080019a0": "process_param_080019a0",
                "param_1": "parameters",
                "puVar1": "tempVar1"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_08001902",
                "FUN_080015b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001aac": {
            "entrypoint": "0x08001aac",
            "current_name": "FUNC_08001aac",
            "code": "\nvoid FUNC_08001aac(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001aac": "FUNC_08001aac"
            },
            "calling": [
                "FUN_08001ab0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08001ab0": {
            "entrypoint": "0x08001ab0",
            "current_name": "process_input_08001ab0",
            "code": "\nvoid processInput_08001ab0(uint **inputArray)\n\n{\n  int returnValue;\n  uint *ptrChar;\n  uint *ptrUint;\n  \n  if (*(byte *)((int)inputArray + 0x3d) - 0x29 < 2) {\n    inputArray[0xc] = (uint *)0x0;\n    *(undefined *)((int)inputArray + 0x3d) = 0x28;\n  }\n  else {\n    if ((*(char *)((int)inputArray + 0x3d) != '`') && (((*inputArray)[1] & 0x800) == 0)) {\n      *(undefined *)((int)inputArray + 0x3d) = 0x20;\n    }\n    inputArray[0xc] = (uint *)0x0;\n    *(undefined *)((int)inputArray + 0x3e) = 0;\n  }\n  **inputArray = **inputArray & 0xfffff7ff;\n  ptrUint = *inputArray;\n  if ((ptrUint[1] & 0x800) == 0) {\n    if (*(char *)((int)inputArray + 0x3d) == '`') {\n      *(undefined *)((int)inputArray + 0x3d) = 0x20;\n      inputArray[0x10] = (uint *)0x0;\n      if ((ptrUint[5] & 0x40) != 0) {\n        ptrChar = inputArray[9];\n        inputArray[9] = (uint *)((int)ptrChar + 1);\n        *(char *)ptrChar = (char)ptrUint[4];\n      }\n      **inputArray = **inputArray & 0xfffffffe;\n      FUNC_08001aac(inputArray);\n    }\n    else {\n      if ((ptrUint[5] & 0x40) != 0) {\n        ptrChar = inputArray[9];\n        inputArray[9] = (uint *)((int)ptrChar + 1);\n        *(char *)ptrChar = (char)ptrUint[4];\n      }\n      FUN_08003900(inputArray);\n    }\n  }\n  else {\n    ptrUint[1] = ptrUint[1] & 0xfffff7ff;\n    if (*(char *)((int)inputArray[0xd] + 0x35) == '\\x01') {\n      inputArray[0xe][0x14] = (uint)&LAB_08001f3c_1;\n      returnValue = FUN_08000f8c(inputArray[0xe]);\n      if (returnValue != 0) {\n        if (((*inputArray)[5] & 0x40) != 0) {\n          ptrUint = inputArray[9];\n          inputArray[9] = (uint *)((int)ptrUint + 1);\n          *(char *)ptrUint = (char)(*inputArray)[4];\n        }\n        **inputArray = **inputArray & 0xfffffffe;\n        *(undefined *)((int)inputArray + 0x3d) = 0x20;\n        (*(code *)inputArray[0xe][0x14])();\n      }\n    }\n    else {\n      inputArray[0xd][0x14] = (uint)&LAB_08001f3c_1;\n      returnValue = FUN_08000f8c(inputArray[0xd]);\n      if (returnValue != 0) {\n        **inputArray = **inputArray & 0xfffffffe;\n        *(undefined *)((int)inputArray + 0x3d) = 0x20;\n        (*(code *)inputArray[0xd][0x14])();\n      }\n    }\n  }\n  if ((*(char *)((int)inputArray + 0x3d) == '(') && (((uint)inputArray[0x10] & 4) != 0)) {\n    inputArray[0xb] = (uint *)0xffff0000;\n    inputArray[0xc] = (uint *)0x0;\n    *(undefined *)((int)inputArray + 0x3d) = 0x20;\n    *(undefined *)((int)inputArray + 0x3e) = 0;\n    FUN_080038d0(inputArray);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001ab0": "process_input_08001ab0",
                "param_1": "inputArray",
                "iVar1": "returnValue",
                "puVar2": "ptrChar",
                "puVar3": "ptrUint"
            },
            "calling": [
                "FUN_08001e68",
                "FUN_08001bfc"
            ],
            "called": [
                "FUN_08001aac",
                "FUN_08000f8c",
                "FUN_080038d0",
                "FUN_08003900"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001bfc": {
            "entrypoint": "0x08001bfc",
            "current_name": "process_param_08001bfc",
            "code": "\nundefined4 processParam_08001bfc(uint **paramList)\n\n{\n  char charValue;\n  uint *ptr1;\n  uint *ptr2;\n  \n  charValue = *(char *)((int)paramList + 0x3d);\n  (*paramList)[1] = (*paramList)[1] & 0xfffff8ff;\n  **paramList = **paramList | 1;\n  **paramList = **paramList & 0xfffffbff;\n  ptr1 = *paramList;\n  if ((ptr1[1] & 0x800) != 0) {\n    if ((*(char *)((int)paramList + 0x3d) == '\\\"') || (*(char *)((int)paramList + 0x3d) == '*')) {\n      *(short *)((int)paramList + 0x2a) = (short)*(undefined4 *)(*paramList[0xe] + 4);\n    }\n    else {\n      *(short *)((int)paramList + 0x2a) = (short)*(undefined4 *)(*paramList[0xd] + 4);\n    }\n  }\n  if (*(short *)((int)paramList + 0x2a) != 0) {\n    if ((ptr1[5] & 4) != 0) {\n      ptr2 = paramList[9];\n      paramList[9] = (uint *)((int)ptr2 + 1);\n      *(char *)ptr2 = (char)ptr1[4];\n      *(short *)((int)paramList + 0x2a) = *(short *)((int)paramList + 0x2a) + -1;\n    }\n    if (((*paramList)[5] & 0x40) != 0) {\n      ptr1 = paramList[9];\n      paramList[9] = (uint *)((int)ptr1 + 1);\n      *(char *)ptr1 = (char)(*paramList)[4];\n      *(short *)((int)paramList + 0x2a) = *(short *)((int)paramList + 0x2a) + -1;\n    }\n    paramList[0x10] = (uint *)((uint)paramList[0x10] | 4);\n  }\n  if (paramList[0x10] == (uint *)0x0) {\n    if (((charValue == '(') || (charValue == '*')) || (charValue == ')')) {\n      paramList[0xb] = (uint *)0xffff0000;\n      paramList[0xc] = (uint *)0x0;\n      *(undefined *)((int)paramList + 0x3d) = 0x20;\n      *(undefined *)((int)paramList + 0x3e) = 0;\n      FUN_080038d0();\n    }\n    else if ((paramList[0xc] == (uint *)0x22) || (charValue == '\\\"')) {\n      paramList[0xc] = (uint *)0x0;\n      *(undefined *)((int)paramList + 0x3d) = 0x20;\n      *(undefined *)((int)paramList + 0x3e) = 0;\n      FUNC_0800160c();\n    }\n  }\n  else {\n    FUN_08001ab0();\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001bfc": "process_param_08001bfc",
                "param_1": "paramList",
                "cVar1": "charValue",
                "puVar2": "ptr1",
                "puVar3": "ptr2"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_08001ab0",
                "FUN_0800160c",
                "FUN_080038d0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001d00": {
            "entrypoint": "0x08001d00",
            "current_name": "handle_function_08001d00",
            "code": "\nvoid handleFunction_08001d00(int *inputData)\n\n{\n  int dataPointer;\n  uint value1;\n  uint value2;\n  uint value3;\n  \n  dataPointer = *inputData;\n  value3 = *(uint *)(dataPointer + 0x18);\n  value1 = *(uint *)(dataPointer + 0x14);\n  value2 = *(uint *)(dataPointer + 4);\n  if ((*(char *)((int)inputData + 0x3e) == '\\x10') || (*(char *)((int)inputData + 0x3e) == '@')) {\n    if (((value1 & 0x10001) == 0) || ((value2 & 0x200) == 0)) {\n      if (((value1 & 0x10008) == 0) || ((value2 & 0x200) == 0)) {\n        if (((value1 & 0x10002) != 0) && ((value2 & 0x200) != 0)) {\n          FUN_08001256(inputData);\n        }\n      }\n      else {\n        FUN_0800124a(inputData);\n      }\n    }\n    else {\n      FUN_080011c0(inputData);\n    }\n    if ((value3 & 0x100004) == 0) {\n      if ((((value1 & 0x10040) != 0) && ((value2 & 0x400) != 0)) && ((value1 & 0x10004) == 0)) {\n        FUN_08001904(inputData);\n        return;\n      }\n      if (((value1 & 0x10004) != 0) && ((value2 & 0x200) != 0)) {\n        FUN_080019a0(inputData);\n        return;\n      }\n    }\n    else {\n      if ((((value1 & 0x10080) != 0) && ((value2 & 0x400) != 0)) && ((value1 & 0x10004) == 0)) {\n        FUN_0800171a(inputData);\n        return;\n      }\n      if (((value1 & 0x10004) != 0) && ((value2 & 0x200) != 0)) {\n        FUN_08001864(inputData);\n        return;\n      }\n    }\n  }\n  else {\n    if (((value1 & 0x10002) != 0) && ((value2 & 0x200) != 0)) {\n      FUN_0800165a();\n      return;\n    }\n    if (((value1 & 0x10010) != 0) && ((value2 & 0x200) != 0)) {\n      FUN_08001bfc(inputData);\n      return;\n    }\n    if ((value3 & 0x100004) == 0) {\n      if ((((value1 & 0x10040) != 0) && ((value2 & 0x400) != 0)) && ((value1 & 0x10004) == 0)) {\n        FUN_0800160e(inputData);\n        return;\n      }\n      if (((value1 & 0x10004) != 0) && ((value2 & 0x200) != 0)) {\n        FUN_08001440(inputData);\n      }\n    }\n    else {\n      if ((((value1 & 0x10080) != 0) && ((value2 & 0x400) != 0)) && ((value1 & 0x10004) == 0)) {\n        FUN_080015bc(inputData);\n        return;\n      }\n      if (((value1 & 0x10004) != 0) && ((value2 & 0x200) != 0)) {\n        FUN_08001420(inputData);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001d00": "handle_function_08001d00",
                "param_1": "inputData",
                "iVar1": "dataPointer",
                "uVar2": "value1",
                "uVar3": "value2",
                "uVar4": "value3"
            },
            "calling": [],
            "called": [
                "FUN_0800160e",
                "FUN_08001256",
                "FUN_080015bc",
                "FUN_08001440",
                "FUN_08001420",
                "FUN_08001904",
                "FUN_080011c0",
                "FUN_0800165a",
                "FUN_0800124a",
                "FUN_08001864",
                "FUN_08001bfc",
                "FUN_0800171a",
                "FUN_080019a0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001e68": {
            "entrypoint": "0x08001e68",
            "current_name": "process_binary_08001e68",
            "code": "\nvoid processBinary_08001e68(uint **binaryData)\n\n{\n  char charValue;\n  uint *pointerValue;\n  uint value1;\n  uint value2;\n  \n  pointerValue = *binaryData;\n  value1 = pointerValue[5];\n  value2 = pointerValue[1];\n  if (((value1 & 0x10100) != 0) && ((value2 & 0x100) != 0)) {\n    binaryData[0x10] = (uint *)((uint)binaryData[0x10] | 1);\n    pointerValue[5] = 0xfffffeff;\n  }\n  if (((value1 & 0x10200) != 0) && ((value2 & 0x100) != 0)) {\n    binaryData[0x10] = (uint *)((uint)binaryData[0x10] | 2);\n    (*binaryData)[5] = 0xfffffdff;\n  }\n  if (((value1 & 0x10400) != 0) && ((value2 & 0x100) != 0)) {\n    charValue = *(char *)((int)binaryData + 0x3d);\n    if (((*(char *)((int)binaryData + 0x3e) == ' ') && (*(short *)((int)binaryData + 0x2a) == 0)) &&\n       (((charValue == '!' || (charValue == ')')) || ((charValue == '(' && (binaryData[0xc] == (uint *)0x21)))))) {\n      FUN_08001684(binaryData);\n    }\n    else {\n      binaryData[0x10] = (uint *)((uint)binaryData[0x10] | 4);\n      if (*(char *)((int)binaryData + 0x3e) == '\\x10') {\n        **binaryData = **binaryData | 0x200;\n      }\n      (*binaryData)[5] = 0xfffffbff;\n    }\n  }\n  if (((value1 & 0x10800) != 0) && ((value2 & 0x100) != 0)) {\n    binaryData[0x10] = (uint *)((uint)binaryData[0x10] | 8);\n    (*binaryData)[5] = 0xfffff7ff;\n  }\n  if (binaryData[0x10] != (uint *)0x0) {\n    FUN_08001ab0(binaryData);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001e68": "process_binary_08001e68",
                "param_1": "binaryData",
                "cVar1": "charValue",
                "puVar2": "pointerValue",
                "uVar3": "value1",
                "uVar4": "value2"
            },
            "calling": [],
            "called": [
                "FUN_08001684",
                "FUN_08001ab0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001f9c": {
            "entrypoint": "0x08001f9c",
            "current_name": "initialize_flags_08001f9c",
            "code": "\n\n\nundefined4 initializeFlags_08001f9c(void)\n\n{\n  int startTime;\n  int currentTime;\n  \n  _DAT_40023840 = _DAT_40023840 | 0x10000000;\n  _DAT_420e0040 = 1;\n  startTime = FUN_08000e30();\n  do {\n    if ((_DAT_40007004 & 0x10000) != 0) {\n      _DAT_420e0044 = 1;\n      startTime = FUN_08000e30();\n      do {\n        if ((_DAT_40007004 & 0x20000) != 0) {\n          return 0;\n        }\n        currentTime = FUN_08000e30();\n      } while ((uint)(currentTime - startTime) < 0x3e9);\n      return 3;\n    }\n    currentTime = FUN_08000e30();\n  } while ((uint)(currentTime - startTime) < 0x3e9);\n  return 3;\n}\n\n",
            "renaming": {
                "FUN_08001f9c": "initialize_flags_08001f9c",
                "iVar1": "startTime",
                "iVar2": "currentTime"
            },
            "calling": [
                "FUN_08000c8c"
            ],
            "called": [
                "FUN_08000e30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800201c": {
            "entrypoint": "0x0800201c",
            "current_name": "check_flags_0800201c",
            "code": "\n\n\nundefined4 checkFlags_0800201c(uint *flags)\n\n{\n  int startTimestamp;\n  int currentTimestamp;\n  undefined4 result;\n  bool isFlagSet;\n  \n  if (flags == (uint *)0x0) {\n    return 1;\n  }\n  if ((*flags & 1) != 0) {\n    if (((_DAT_40023808 & 0xc) == 4) ||\n       (((_DAT_40023808 & 0xc) == 8 && ((_DAT_40023804 & 0x400000) != 0)))) {\n      if (((_DAT_40023800 & 0x20000) != 0) && (flags[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      if (flags[1] == 0x10000) {\n        _DAT_40023800 = _DAT_40023800 | 0x10000;\n      }\n      else if (flags[1] == 0x50000) {\n        _DAT_40023800 = _DAT_40023800 | 0x50000;\n      }\n      else {\n        _DAT_40023800 = _DAT_40023800 & 0xfffaffff;\n      }\n      if (flags[1] == 0) {\n        startTimestamp = FUN_08000e30();\n        while ((_DAT_40023800 & 0x20000) != 0) {\n          currentTimestamp = FUN_08000e30();\n          if (100 < (uint)(currentTimestamp - startTimestamp)) {\n            return 3;\n          }\n        }\n      }\n      else {\n        startTimestamp = FUN_08000e30();\n        while ((_DAT_40023800 & 0x20000) == 0) {\n          currentTimestamp = FUN_08000e30();\n          if (100 < (uint)(currentTimestamp - startTimestamp)) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*flags & 2) != 0) {\n    if (((_DAT_40023808 & 0xc) == 0) ||\n       (((_DAT_40023808 & 0xc) == 8 && ((_DAT_40023804 & 0x400000) == 0)))) {\n      if (((_DAT_40023800 & 2) != 0) && (flags[3] != 1)) {\n        return 1;\n      }\n      _DAT_40023800 = _DAT_40023800 & 0xffffff07 | flags[4] << 3;\n    }\n    else if (flags[3] == 0) {\n      _DAT_42470000 = 0;\n      startTimestamp = FUN_08000e30();\n      while ((_DAT_40023800 & 2) != 0) {\n        currentTimestamp = FUN_08000e30();\n        if (2 < (uint)(currentTimestamp - startTimestamp)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470000 = 1;\n      startTimestamp = FUN_08000e30();\n      while ((_DAT_40023800 & 2) == 0) {\n        currentTimestamp = FUN_08000e30();\n        if (2 < (uint)(currentTimestamp - startTimestamp)) {\n          return 3;\n        }\n      }\n      _DAT_40023800 = _DAT_40023800 & 0xffffff07 | flags[4] << 3;\n    }\n  }\n  if ((*flags & 8) != 0) {\n    if (flags[5] == 0) {\n      _DAT_42470e80 = 0;\n      startTimestamp = FUN_08000e30();\n      while ((_DAT_40023874 & 2) != 0) {\n        currentTimestamp = FUN_08000e30();\n        if (2 < (uint)(currentTimestamp - startTimestamp)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470e80 = 1;\n      startTimestamp = FUN_08000e30();\n      while ((_DAT_40023874 & 2) == 0) {\n        currentTimestamp = FUN_08000e30();\n        if (2 < (uint)(currentTimestamp - startTimestamp)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if ((*flags & 4) != 0) {\n    isFlagSet = (_DAT_40023840 & 0x10000000) == 0;\n    if (isFlagSet) {\n      _DAT_40023840 = _DAT_40023840 | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      startTimestamp = FUN_08000e30();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        currentTimestamp = FUN_08000e30();\n        if (2 < (uint)(currentTimestamp - startTimestamp)) {\n          return 3;\n        }\n      }\n    }\n    if (flags[2] == 1) {\n      _DAT_40023870 = _DAT_40023870 | 1;\n    }\n    else if (flags[2] == 5) {\n      _DAT_40023870 = _DAT_40023870 | 5;\n    }\n    else {\n      _DAT_40023870 = _DAT_40023870 & 0xfffffffa;\n    }\n    if (flags[2] == 0) {\n      startTimestamp = FUN_08000e30();\n      while ((_DAT_40023870 & 2) != 0) {\n        currentTimestamp = FUN_08000e30();\n        if (5000 < (uint)(currentTimestamp - startTimestamp)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      startTimestamp = FUN_08000e30();\n      while ((_DAT_40023870 & 2) == 0) {\n        currentTimestamp = FUN_08000e30();\n        if (5000 < (uint)(currentTimestamp - startTimestamp)) {\n          return 3;\n        }\n      }\n    }\n    if (isFlagSet) {\n      _DAT_40023840 = _DAT_40023840 & 0xefffffff;\n    }\n  }\n  if (flags[6] == 0) {\n    result = 0;\n  }\n  else if ((_DAT_40023808 & 0xc) == 8) {\n    result = 1;\n  }\n  else if (flags[6] == 2) {\n    _DAT_42470060 = 0;\n    startTimestamp = FUN_08000e30();\n    do {\n      if ((_DAT_40023800 & 0x2000000) == 0) {\n        _DAT_40023804 =\n             flags[7] | flags[8] | flags[9] << 6 | ((flags[10] >> 1) - 1) * 0x10000 |\n             flags[0xb] << 0x18;\n        _DAT_42470060 = 1;\n        startTimestamp = FUN_08000e30();\n        do {\n          if ((_DAT_40023800 & 0x2000000) != 0) {\n            return 0;\n          }\n          currentTimestamp = FUN_08000e30();\n        } while ((uint)(currentTimestamp - startTimestamp) < 3);\n        return 3;\n      }\n      currentTimestamp = FUN_08000e30();\n    } while ((uint)(currentTimestamp - startTimestamp) < 3);\n    result = 3;\n  }\n  else {\n    _DAT_42470060 = 0;\n    startTimestamp = FUN_08000e30();\n    do {\n      if ((_DAT_40023800 & 0x2000000) == 0) {\n        return 0;\n      }\n      currentTimestamp = FUN_08000e30();\n    } while ((uint)(currentTimestamp - startTimestamp) < 3);\n    result = 3;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_0800201c": "check_flags_0800201c",
                "param_1": "flags",
                "iVar1": "startTimestamp",
                "iVar2": "currentTimestamp",
                "uVar3": "result",
                "bVar4": "isFlagSet"
            },
            "calling": [
                "FUN_08000c8c"
            ],
            "called": [
                "FUN_08000e30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080023b4": {
            "entrypoint": "0x080023b4",
            "current_name": "calculate_clock_speed_080023b4",
            "code": "\n\n\nuint calculateClockSpeed_080023b4(void)\n\n{\n  undefined4 inputParameter;\n  uint result;\n  \n  if ((_DAT_40023808 & 0xc) == 4) {\n    return 8000000;\n  }\n  if ((_DAT_40023808 & 0xc) != 8) {\n    return 16000000;\n  }\n  if ((_DAT_40023804 & 0x400000) == 0) {\n    result = (_DAT_40023804 << 0x11) >> 0x17;\n    result = FUN_080002d0(result * 16000000,\n                         (((uint)(result * 0x20 < result) * -0x3f -\n                          (uint)(result * 0x7c0 < result * 0x1f)) * 8 +\n                         (uint)CARRY4(result * 0x3d08,result)) * 0x400 | result * 0x3d09 >> 0x16,\n                         _DAT_40023804 & 0x3f,0,inputParameter);\n  }\n  else {\n    result = (_DAT_40023804 << 0x11) >> 0x17;\n    result = FUN_080002d0(result * 8000000,\n                         (((uint)(result * 0x20 < result) * -0x3f -\n                          (uint)(result * 0x7c0 < result * 0x1f)) * 8 +\n                         (uint)CARRY4(result * 0x3d08,result)) * 0x200,_DAT_40023804 & 0x3f,0,inputParameter);\n  }\n  return result / ((((_DAT_40023804 << 0xe) >> 0x1e) + 1) * 2);\n}\n\n",
            "renaming": {
                "FUN_080023b4": "calculate_clock_speed_080023b4",
                "in_r3": "inputParameter",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08002488"
            ],
            "called": [
                "FUN_080002d0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002488": {
            "entrypoint": "0x08002488",
            "current_name": "set_configuration_08002488",
            "code": "\n\n\nundefined4 setConfiguration_08002488(uint *configArray,uint configSize)\n\n{\n  int startTime;\n  int currentTime;\n  uint configValue;\n  \n  if (configArray == (uint *)0x0) {\n    return 1;\n  }\n  if ((_DAT_40023c00 & 0xf) < configSize) {\n    _DAT_40023c00 = CONCAT31(DAT_40023c00_1,(char)configSize);\n    if (configSize != (configSize & 0xf)) {\n      return 1;\n    }\n  }\n  if ((*configArray & 2) != 0) {\n    if ((*configArray & 4) != 0) {\n      _DAT_40023808 = _DAT_40023808 | 0x1c00;\n    }\n    if ((*configArray & 8) != 0) {\n      _DAT_40023808 = _DAT_40023808 | 0xe000;\n    }\n    _DAT_40023808 = _DAT_40023808 & 0xffffff0f | configOption;\n  }\n  if ((*configArray & 1) != 0) {\n    configValue = configType;\n    if (configValue == 1) {\n      if ((_DAT_40023800 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if (configValue - 2 < 2) {\n      if ((_DAT_40023800 & 0x2000000) == 0) {\n        return 1;\n      }\n    }\n    else if ((_DAT_40023800 & 2) == 0) {\n      return 1;\n    }\n    _DAT_40023808 = configValue | _DAT_40023808 & 0xfffffffc;\n    startTime = FUN_08000e30();\n    while( true ) {\n      if ((_DAT_40023808 & 0xc) == configType * 4) break;\n      currentTime = FUN_08000e30();\n      if (5000 < (uint)(currentTime - startTime)) {\n        return 3;\n      }\n    }\n  }\n  if (configSize < (_DAT_40023c00 & 0xf)) {\n    _DAT_40023c00 = CONCAT31(DAT_40023c00_1,(char)configSize);\n    if (configSize != (configSize & 0xf)) {\n      return 1;\n    }\n  }\n  if ((*configArray & 4) != 0) {\n    _DAT_40023808 = _DAT_40023808 & 0xffffe3ff | configArray[3];\n  }\n  if ((*configArray & 8) != 0) {\n    _DAT_40023808 = _DAT_40023808 & 0xffff1fff | configArray[4] << 3;\n  }\n  configValue = FUN_080023b4();\n  DAT_2000002c = configValue >> (&DAT_08005dfc)[(_DAT_40023808 << 0x18) >> 0x1c];\n  FUN_08000d98(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002488": "set_configuration_08002488",
                "param_1": "configArray",
                "param_2": "configSize",
                "param_1[2]": "configOption",
                "param_1[1]": "configType",
                "uVar3": "configValue",
                "iVar1": "startTime",
                "iVar2": "currentTime"
            },
            "calling": [
                "FUN_08000c8c"
            ],
            "called": [
                "FUN_080023b4",
                "FUN_08000e30",
                "FUN_08000d98"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080025e0": {
            "entrypoint": "0x080025e0",
            "current_name": "get_data_constant_080025e0",
            "code": "\nundefined4 get_data_constant_080025e0(void)\n\n{\n  return DAT_2000002c;\n}\n\n",
            "renaming": {
                "FUN_080025e0": "get_data_constant_080025e0"
            },
            "calling": [
                "FUN_080025ec",
                "FUN_0800260c",
                "FUN_08000c8c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080025ec": {
            "entrypoint": "0x080025ec",
            "current_name": "calculate_shifted_value_080025ec",
            "code": "\n\n\nuint calculateShiftedValue_080025ec(void)\n\n{\n  uint result;\n  \n  result = FUN_080025e0();\n  return result >> (&DAT_08005e0c)[(uint)(_DAT_40023808 << 0x13) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_080025ec": "calculate_shifted_value_080025ec",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080029c8"
            ],
            "called": [
                "FUN_080025e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800260c": {
            "entrypoint": "0x0800260c",
            "current_name": "shifted_result_0800260c",
            "code": "\n\n\nuint shiftedResult_0800260c(void)\n\n{\n  uint uVar1;\n  \n  uVar1 = FUN_080025e0();\n  return uVar1 >> (&DAT_08005e0c)[(uint)(_DAT_40023808 << 0x10) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_0800260c": "shifted_result_0800260c"
            },
            "calling": [
                "FUN_080029c8"
            ],
            "called": [
                "FUN_080025e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800262c": {
            "entrypoint": "0x0800262c",
            "current_name": "initialize_flags_0800262c",
            "code": "\n\n\nvoid initializeFlags_0800262c(int *flags)\n\n{\n  if (((*(uint *)(*flags + 0xc) & 0x100) != 0) && ((*(uint *)(*flags + 8) & 0x1000) != 0)) {\n    FUN_08003594();\n    *(uint *)(*flags + 0xc) = *(uint *)(*flags + 0xc) & 0xff | 0xfffffe7f;\n  }\n  if (((*(uint *)(*flags + 0xc) & 0x200) != 0) && ((*(uint *)(*flags + 8) & 0x2000) != 0)) {\n    FUNC_0800268c(flags);\n    *(uint *)(*flags + 0xc) = *(uint *)(*flags + 0xc) & 0xff | 0xfffffd7f;\n  }\n  _DAT_40013c14 = 0x20000;\n  *(undefined *)((int)flags + 0x1d) = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800262c": "initialize_flags_0800262c",
                "param_1": "flags"
            },
            "calling": [],
            "called": [
                "FUN_0800268c",
                "FUN_08003594"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800268c": {
            "entrypoint": "0x0800268c",
            "current_name": "FUNC_0800268c",
            "code": "\nvoid FUNC_0800268c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800268c": "FUNC_0800268c"
            },
            "calling": [
                "FUN_0800262c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800268e": {
            "entrypoint": "0x0800268e",
            "current_name": "update_flags_and_call_function_0800268e",
            "code": "\nvoid updateFlagsAndCallFunction_0800268e(uint **parameters)\n\n{\n  uint *pointerVar1;\n  \n  *(undefined *)((int)parameters + 0x39) = 2;\n  pointerVar1 = *parameters;\n  if ((pointerVar1[8] & 0x1111) == 0) {\n    if ((pointerVar1[8] & 0x444) == 0) {\n      *pointerVar1 = *pointerVar1 & 0xfffffffe;\n    }\n  }\n  FUN_0800340c(parameters);\n  *(undefined *)((int)parameters + 0x39) = 0;\n  *(undefined *)(parameters + 0xe) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800268e": "update_flags_and_call_function_0800268e",
                "param_1": "parameters",
                "puVar1": "pointerVar1"
            },
            "calling": [
                "FUN_08003414"
            ],
            "called": [
                "FUN_0800340c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080026c8": {
            "entrypoint": "0x080026c8",
            "current_name": "FUNC_080026c8",
            "code": "\nvoid FUNC_080026c8(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080026c8": "FUNC_080026c8"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080026ca": {
            "entrypoint": "0x080026ca",
            "current_name": "FUNC_080026ca",
            "code": "\nvoid FUNC_080026ca(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080026ca": "FUNC_080026ca"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080026cc": {
            "entrypoint": "0x080026cc",
            "current_name": "FUNC_080026cc",
            "code": "\nvoid FUNC_080026cc(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080026cc": "FUNC_080026cc"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080026ce": {
            "entrypoint": "0x080026ce",
            "current_name": "process_flags_080026ce",
            "code": "\nvoid processFlags_080026ce(int *flagArray)\n\n{\n  int element;\n  \n  element = *flagArray;\n  if (((*(uint *)(element + 0x10) & 2) != 0) && ((*(uint *)(element + 0xc) & 2) != 0)) {\n    *(undefined4 *)(element + 0x10) = 0xfffffffd;\n    *(undefined *)(flagArray + 6) = 1;\n    if ((*(uint *)(*flagArray + 0x18) & 3) == 0) {\n      FUN_08003754();\n      FUNC_080026ca(flagArray);\n    }\n    else {\n      FUNC_080026c8();\n    }\n    *(undefined *)(flagArray + 6) = 0;\n  }\n  element = *flagArray;\n  if (((*(uint *)(element + 0x10) & 4) != 0) && ((*(uint *)(element + 0xc) & 4) != 0)) {\n    *(undefined4 *)(element + 0x10) = 0xfffffffb;\n    *(undefined *)(flagArray + 6) = 2;\n    if ((*(uint *)(*flagArray + 0x18) & 0x300) == 0) {\n      FUN_08003754(flagArray);\n      FUNC_080026ca(flagArray);\n    }\n    else {\n      FUNC_080026c8(flagArray);\n    }\n    *(undefined *)(flagArray + 6) = 0;\n  }\n  element = *flagArray;\n  if (((*(uint *)(element + 0x10) & 8) != 0) && ((*(uint *)(element + 0xc) & 8) != 0)) {\n    *(undefined4 *)(element + 0x10) = 0xfffffff7;\n    *(undefined *)(flagArray + 6) = 4;\n    if ((*(uint *)(*flagArray + 0x1c) & 3) == 0) {\n      FUN_08003754(flagArray);\n      FUNC_080026ca(flagArray);\n    }\n    else {\n      FUNC_080026c8(flagArray);\n    }\n    *(undefined *)(flagArray + 6) = 0;\n  }\n  element = *flagArray;\n  if (((*(uint *)(element + 0x10) & 0x10) != 0) && ((*(uint *)(element + 0xc) & 0x10) != 0)) {\n    *(undefined4 *)(element + 0x10) = 0xffffffef;\n    *(undefined *)(flagArray + 6) = 8;\n    if ((*(uint *)(*flagArray + 0x1c) & 0x300) == 0) {\n      FUN_08003754(flagArray);\n      FUNC_080026ca(flagArray);\n    }\n    else {\n      FUNC_080026c8(flagArray);\n    }\n    *(undefined *)(flagArray + 6) = 0;\n  }\n  element = *flagArray;\n  if (((*(uint *)(element + 0x10) & 1) != 0) && ((*(uint *)(element + 0xc) & 1) != 0)) {\n    *(undefined4 *)(element + 0x10) = 0xfffffffe;\n    FUN_0800376e(flagArray);\n  }\n  element = *flagArray;\n  if (((*(uint *)(element + 0x10) & 0x80) != 0) && ((*(uint *)(element + 0xc) & 0x80) != 0)) {\n    *(undefined4 *)(element + 0x10) = 0xffffff7f;\n    FUNC_0800293e(flagArray);\n  }\n  element = *flagArray;\n  if (((*(uint *)(element + 0x10) & 0x40) != 0) && ((*(uint *)(element + 0xc) & 0x40) != 0)) {\n    *(undefined4 *)(element + 0x10) = 0xffffffbf;\n    FUNC_080026cc(flagArray);\n  }\n  element = *flagArray;\n  if (((*(uint *)(element + 0x10) & 0x20) != 0) && ((*(uint *)(element + 0xc) & 0x20) != 0)) {\n    *(undefined4 *)(element + 0x10) = 0xffffffdf;\n    FUNC_0800293c(flagArray);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080026ce": "process_flags_080026ce",
                "param_1": "flagArray",
                "iVar1": "element"
            },
            "calling": [
                "FUN_0800377c"
            ],
            "called": [
                "FUN_0800293c",
                "FUN_080026c8",
                "FUN_08003754",
                "FUN_080026ca",
                "FUN_0800293e",
                "FUN_0800376e",
                "FUN_080026cc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002848": {
            "entrypoint": "0x08002848",
            "current_name": "update_bit_value_08002848",
            "code": "\nvoid updateBitValue_08002848(int baseAddress,uint bitIndex,int newValue)\n\n{\n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) & ~(1 << (bitIndex & 0xff));\n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) | newValue << (bitIndex & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002848": "update_bit_value_08002848",
                "param_1": "baseAddress",
                "param_2": "bitIndex",
                "param_3": "newValue"
            },
            "calling": [
                "FUN_08002864"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002864": {
            "entrypoint": "0x08002864",
            "current_name": "check_and_update_flags_08002864",
            "code": "\nundefined4 check_and_update_flags_08002864(uint **data_ptr,undefined4 value)\n\n{\n  bool is_block_valid;\n  uint *block_ptr;\n  \n  FUN_08002848(*data_ptr,value,0);\n  block_ptr = *data_ptr;\n  if (block_ptr == (uint *)0x40010000) {\n    is_block_valid = true;\n  }\n  else if (block_ptr == (uint *)0x40010400) {\n    is_block_valid = true;\n  }\n  else {\n    is_block_valid = false;\n  }\n  if (((is_block_valid) && ((block_ptr[8] & 0x1111) == 0)) && ((block_ptr[8] & 0x444) == 0)) {\n    block_ptr[0x11] = block_ptr[0x11] & 0xffff7fff;\n  }\n  block_ptr = *data_ptr;\n  if (((block_ptr[8] & 0x1111) == 0) && ((block_ptr[8] & 0x444) == 0)) {\n    *block_ptr = *block_ptr & 0xfffffffe;\n  }\n  *(undefined *)((int)data_ptr + 0x39) = 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002864": "check_and_update_flags_08002864",
                "param_1": "data_ptr",
                "param_2": "value",
                "bVar1": "is_block_valid",
                "puVar2": "block_ptr"
            },
            "calling": [
                "FUN_08003414"
            ],
            "called": [
                "FUN_08002848"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080028d4": {
            "entrypoint": "0x080028d4",
            "current_name": "apply_bitwise_operations_080028d4",
            "code": "\nvoid applyBitwiseOperations_080028d4(int inputAddress,uint bitPosition,int valueToSet)\n\n{\n  *(uint *)(inputAddress + 0x20) = *(uint *)(inputAddress + 0x20) & ~(4 << (bitPosition & 0xff));\n  *(uint *)(inputAddress + 0x20) = *(uint *)(inputAddress + 0x20) | valueToSet << (bitPosition & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080028d4": "apply_bitwise_operations_080028d4",
                "param_1": "inputAddress",
                "param_2": "bitPosition",
                "param_3": "valueToSet"
            },
            "calling": [
                "FUN_080028f0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080028f0": {
            "entrypoint": "0x080028f0",
            "current_name": "update_data_080028f0",
            "code": "\nundefined4 updateData_080028f0(uint **data,undefined4 value)\n\n{\n  uint *pointer;\n  \n  FUN_080028d4(*data,value,0);\n  pointer = *data;\n  if (((pointer[8] & 0x1111) == 0) && ((pointer[8] & 0x444) == 0)) {\n    pointer[0x11] = pointer[0x11] & 0xffff7fff;\n  }\n  pointer = *data;\n  if (((pointer[8] & 0x1111) == 0) && ((pointer[8] & 0x444) == 0)) {\n    *pointer = *pointer & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080028f0": "update_data_080028f0",
                "param_1": "data",
                "param_2": "value",
                "puVar1": "pointer"
            },
            "calling": [
                "FUN_08003414"
            ],
            "called": [
                "FUN_080028d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800293c": {
            "entrypoint": "0x0800293c",
            "current_name": "FUNC_0800293c",
            "code": "\nvoid FUNC_0800293c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800293c": "FUNC_0800293c"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800293e": {
            "entrypoint": "0x0800293e",
            "current_name": "FUNC_0800293e",
            "code": "\nvoid FUNC_0800293e(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800293e": "FUNC_0800293e"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002940": {
            "entrypoint": "0x08002940",
            "current_name": "clear_flags_08002940",
            "code": "\nvoid clearFlags_08002940(int *flagsPtr)\n\n{\n  *(uint *)(*flagsPtr + 0xc) = *(uint *)(*flagsPtr + 0xc) & 0xfffffedf;\n  *(uint *)(*flagsPtr + 0x14) = *(uint *)(*flagsPtr + 0x14) & 0xfffffffe;\n  *(undefined *)((int)flagsPtr + 0x3a) = 0x20;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002940": "clear_flags_08002940",
                "param_1": "flagsPtr"
            },
            "calling": [
                "FUN_08002ffc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800295c": {
            "entrypoint": "0x0800295c",
            "current_name": "process_data_0800295c",
            "code": "\nundefined4 process_data_0800295c(int *data)\n\n{\n  short count;\n  byte *byte_ptr;\n  \n  if (*(char *)((int)data + 0x39) != '!') {\n    return 2;\n  }\n  if (data[2] == 0x1000) {\n    *(uint *)(*data + 4) = *(ushort *)data[8] & 0x1ff;\n    if (data[4] == 0) {\n      data[8] = data[8] + 2;\n    }\n    else {\n      data[8] = data[8] + 1;\n    }\n  }\n  else {\n    byte_ptr = (byte *)data[8];\n    data[8] = (int)(byte_ptr + 1);\n    *(uint *)(*data + 4) = (uint)*byte_ptr;\n  }\n  count = *(short *)((int)data + 0x26) + -1;\n  *(short *)((int)data + 0x26) = count;\n  if (count == 0) {\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xffffff7f;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) | 0x40;\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800295c": "process_data_0800295c",
                "param_1": "data",
                "sVar1": "count",
                "pbVar2": "byte_ptr"
            },
            "calling": [
                "FUN_08002ffc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080029c8": {
            "entrypoint": "0x080029c8",
            "current_name": "calculate_values_080029c8",
            "code": "\nvoid calculateValues_080029c8(int *inputArray)\n\n{\n  int calculation1;\n  int calculation2;\n  int calculation3;\n  int calculation4;\n  int calculation5;\n  int calculation6;\n  int calculation7;\n  int calculation8;\n  int calculation9;\n  int initialValue;\n  \n  *(uint *)(*inputArray + 0x10) = *(uint *)(*inputArray + 0x10) & 0xffffcfff | inputArray[3];\n  *(uint *)(*inputArray + 0xc) =\n       *(uint *)(*inputArray + 0xc) & 0xffff69f3 | inputArray[2] | inputArray[4] | inputArray[5] | inputArray[7];\n  *(uint *)(*inputArray + 0x14) = *(uint *)(*inputArray + 0x14) & 0xfffffcff | inputArray[6];\n  if (inputArray[7] == 0x8000) {\n    initialValue = *inputArray;\n    if ((initialValue != 0x40011000) && (initialValue != 0x40011400)) {\n      calculation1 = FUN_080025ec();\n      calculation6 = inputArray[1];\n      calculation2 = FUN_080025ec();\n      calculation7 = inputArray[1];\n      calculation3 = FUN_080025ec();\n      calculation8 = inputArray[1];\n      calculation4 = FUN_080025ec();\n      calculation9 = inputArray[1];\n      calculation5 = FUN_080025ec();\n      *(uint *)(initialValue + 8) =\n           ((uint)((int)((ulonglong)\n                         (((uint)(calculation4 * 0x19) / (uint)(calculation9 << 1) +\n                          (int)(((ulonglong)(uint)(calculation5 * 0x19) /\n                                (ulonglong)(uint)(inputArray[1] << 1)) / 100) * -100) * 8 + 0x32) *\n                         0x51eb851f >> 0x20) << 0x18) >> 0x1d) +\n           ((((uint)(calculation2 * 0x19) / (uint)(calculation7 << 1) +\n             (int)(((ulonglong)(uint)(calculation3 * 0x19) / (ulonglong)(uint)(calculation8 << 1)) / 100) * -100)\n             * 8 + 0x32) / 100 & 0xf8) * 2 +\n           (int)(((ulonglong)(uint)(calculation1 * 0x19) / (ulonglong)(uint)(calculation6 << 1)) / 100) * 0x10;\n      return;\n    }\n    calculation1 = FUN_0800260c();\n    calculation6 = inputArray[1];\n    calculation2 = FUN_0800260c();\n    calculation7 = inputArray[1];\n    calculation3 = FUN_0800260c();\n    calculation8 = inputArray[1];\n    calculation4 = FUN_0800260c();\n    calculation9 = inputArray[1];\n    calculation5 = FUN_0800260c();\n    *(uint *)(initialValue + 8) =\n         ((uint)((int)((ulonglong)\n                       (((uint)(calculation4 * 0x19) / (uint)(calculation9 << 1) +\n                        (int)(((ulonglong)(uint)(calculation5 * 0x19) / (ulonglong)(uint)(inputArray[1] << 1))\n                             / 100) * -100) * 8 + 0x32) * 0x51eb851f >> 0x20) << 0x18) >> 0x1d) +\n         ((((uint)(calculation2 * 0x19) / (uint)(calculation7 << 1) +\n           (int)(((ulonglong)(uint)(calculation3 * 0x19) / (ulonglong)(uint)(calculation8 << 1)) / 100) * -100) *\n           8 + 0x32) / 100 & 0xf8) * 2 +\n         (int)(((ulonglong)(uint)(calculation1 * 0x19) / (ulonglong)(uint)(calculation6 << 1)) / 100) * 0x10;\n    return;\n  }\n  initialValue = *inputArray;\n  if ((initialValue != 0x40011000) && (initialValue != 0x40011400)) {\n    calculation1 = FUN_080025ec();\n    calculation6 = inputArray[1];\n    calculation2 = FUN_080025ec();\n    calculation7 = inputArray[1];\n    calculation3 = FUN_080025ec();\n    calculation8 = inputArray[1];\n    calculation4 = FUN_080025ec();\n    calculation9 = inputArray[1];\n    calculation5 = FUN_080025ec();\n    *(uint *)(initialValue + 8) =\n         ((uint)((int)((ulonglong)\n                       (((uint)(calculation4 * 0x19) / (uint)(calculation9 << 2) +\n                        (int)(((ulonglong)(uint)(calculation5 * 0x19) / (ulonglong)(uint)(inputArray[1] << 2))\n                             / 100) * -100) * 0x10 + 0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n         ((((uint)(calculation2 * 0x19) / (uint)(calculation7 << 2) +\n           (int)(((ulonglong)(uint)(calculation3 * 0x19) / (ulonglong)(uint)(calculation8 << 2)) / 100) * -100) *\n           0x10 + 0x32) / 100 & 0xf0) +\n         (int)(((ulonglong)(uint)(calculation1 * 0x19) / (ulonglong)(uint)(calculation6 << 2)) / 100) * 0x10;\n    return;\n  }\n  calculation1 = FUN_0800260c();\n  calculation6 = inputArray[1];\n  calculation2 = FUN_0800260c();\n  calculation7 = inputArray[1];\n  calculation3 = FUN_0800260c();\n  calculation8 = inputArray[1];\n  calculation4 = FUN_0800260c();\n  calculation9 = inputArray[1];\n  calculation5 = FUN_0800260c();\n  *(uint *)(initialValue + 8) =\n       ((uint)((int)((ulonglong)\n                     (((uint)(calculation4 * 0x19) / (uint)(calculation9 << 2) +\n                      (int)(((ulonglong)(uint)(calculation5 * 0x19) / (ulonglong)(uint)(inputArray[1] << 2)) /\n                           100) * -100) * 0x10 + 0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n       ((((uint)(calculation2 * 0x19) / (uint)(calculation7 << 2) +\n         (int)(((ulonglong)(uint)(calculation3 * 0x19) / (ulonglong)(uint)(calculation8 << 2)) / 100) * -100) *\n         0x10 + 0x32) / 100 & 0xf0) +\n       (int)(((ulonglong)(uint)(calculation1 * 0x19) / (ulonglong)(uint)(calculation6 << 2)) / 100) * 0x10;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080029c8": "calculate_values_080029c8",
                "param_1": "inputArray",
                "iVar1": "calculation1",
                "iVar2": "calculation2",
                "iVar3": "calculation3",
                "iVar4": "calculation4",
                "iVar5": "calculation5",
                "iVar6": "calculation6",
                "iVar7": "calculation7",
                "iVar8": "calculation8",
                "iVar9": "calculation9",
                "iVar10": "initialValue"
            },
            "calling": [
                "FUN_08002d72"
            ],
            "called": [
                "FUN_080025ec",
                "FUN_0800260c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002d0c": {
            "entrypoint": "0x08002d0c",
            "current_name": "validate_data_08002d0c",
            "code": "\nundefined4 validate_data_08002d0c(uint **data_param,uint flag,uint is_true,int limit,uint threshold)\n\n{\n  int result;\n  \n  do {\n    if (((flag & ~**data_param) == 0) != is_true) {\n      return 0;\n    }\n  } while ((threshold == 0xffffffff) ||\n          ((threshold != 0 && (result = FUN_08000e30(), (uint)(result - limit) <= threshold))));\n  (*data_param)[3] = (*data_param)[3] & 0xfffffe5f;\n  (*data_param)[5] = (*data_param)[5] & 0xfffffffe;\n  *(undefined *)((int)data_param + 0x39) = 0x20;\n  *(undefined *)((int)data_param + 0x3a) = 0x20;\n  *(undefined *)(data_param + 0xe) = 0;\n  return 3;\n}\n\n",
            "renaming": {
                "FUN_08002d0c": "validate_data_08002d0c",
                "param_1": "data_param",
                "param_2": "flag",
                "param_3": "is_true",
                "param_4": "limit",
                "param_5": "threshold",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08002dd0"
            ],
            "called": [
                "FUN_08000e30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002d70": {
            "entrypoint": "0x08002d70",
            "current_name": "FUNC_08002d70",
            "code": "\nvoid FUNC_08002d70(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002d70": "FUNC_08002d70"
            },
            "calling": [
                "FUN_08002d72"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002d72": {
            "entrypoint": "0x08002d72",
            "current_name": "validate_and_initialize_param_08002d72",
            "code": "\nundefined4 validateAndInitializeParam_08002d72(int *param)\n\n{\n  if (param != (int *)0x0) {\n    if (*(char *)((int)param + 0x39) == '\\0') {\n      *(undefined *)(param + 0xe) = 0;\n      FUNC_08002d70();\n    }\n    *(undefined *)((int)param + 0x39) = 0x24;\n    *(uint *)(*param + 0xc) = *(uint *)(*param + 0xc) & 0xffffdfff;\n    FUN_080029c8(param);\n    *(uint *)(*param + 0x10) = *(uint *)(*param + 0x10) & 0xffffb7ff;\n    *(uint *)(*param + 0x14) = *(uint *)(*param + 0x14) & 0xffffffd5;\n    *(uint *)(*param + 0xc) = *(uint *)(*param + 0xc) | 0x2000;\n    paramValue4 = 0;\n    *(undefined *)((int)param + 0x39) = 0x20;\n    *(undefined *)((int)param + 0x3a) = 0x20;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08002d72": "validate_and_initialize_param_08002d72",
                "param_1": "param",
                "param_1[0xf]": "paramValue4"
            },
            "calling": [
                "FUN_08003978"
            ],
            "called": [
                "FUN_08002d70",
                "FUN_080029c8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002dd0": {
            "entrypoint": "0x08002dd0",
            "current_name": "process_data_08002dd0",
            "code": "\nundefined4 processData_08002dd0(int *data,ushort *buffer,int length,undefined4 arg)\n\n{\n  int returnValue;\n  undefined4 result;\n  \n  if (*(char *)((int)data + 0x39) == ' ') {\n    if (buffer == (ushort *)0x0) {\n      result = 1;\n    }\n    else if (length == 0) {\n      result = 1;\n    }\n    else if (*(char *)(data + 0xe) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(data + 0xe) = 1;\n      data[0xf] = 0;\n      *(undefined *)((int)data + 0x39) = 0x21;\n      result = FUN_08000e30();\n      *(short *)(data + 9) = (short)length;\n      *(short *)((int)data + 0x26) = (short)length;\n      while (*(short *)((int)data + 0x26) != 0) {\n        *(short *)((int)data + 0x26) = *(short *)((int)data + 0x26) + -1;\n        if (arrayValue == 0x1000) {\n          returnValue = FUN_08002d0c(data,0x80,0,result,arg);\n          if (returnValue != 0) {\n            return 3;\n          }\n          *(uint *)(*data + 4) = *buffer & 0x1ff;\n          if (data[4] == 0) {\n            buffer = buffer + 1;\n          }\n          else {\n            buffer = (ushort *)((int)buffer + 1);\n          }\n        }\n        else {\n          returnValue = FUN_08002d0c(data,0x80,0,result,arg);\n          if (returnValue != 0) {\n            return 3;\n          }\n          *(uint *)(*data + 4) = (uint)*(byte *)buffer;\n          buffer = (ushort *)((int)buffer + 1);\n        }\n      }\n      returnValue = FUN_08002d0c(data,0x40,0,result,arg);\n      if (returnValue == 0) {\n        *(undefined *)((int)data + 0x39) = 0x20;\n        *(undefined *)(data + 0xe) = 0;\n        result = 0;\n      }\n      else {\n        result = 3;\n      }\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002dd0": "process_data_08002dd0",
                "param_1": "data",
                "param_2": "buffer",
                "param_3": "length",
                "param_4": "arg",
                "iVar1": "returnValue",
                "uVar2": "result",
                "param_1[2]": "arrayValue"
            },
            "calling": [
                "FUN_08003d18"
            ],
            "called": [
                "FUN_08000e30",
                "FUN_08002d0c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002eb2": {
            "entrypoint": "0x08002eb2",
            "current_name": "validate_input_08002eb2",
            "code": "\nundefined4 validate_input_08002eb2(int *input_array,int value_1,int value_2)\n\n{\n  if (*(char *)((int)input_array + 0x39) != ' ') {\n    return 2;\n  }\n  if (value_1 == 0) {\n    return 1;\n  }\n  if (value_2 == 0) {\n    return 1;\n  }\n  if (*(char *)(input_array + 0xe) != '\\x01') {\n    input_array[8] = value_1;\n    *(short *)(input_array + 9) = (short)value_2;\n    *(short *)((int)input_array + 0x26) = (short)value_2;\n    input_array[0xf] = 0;\n    *(undefined *)((int)input_array + 0x39) = 0x21;\n    *(undefined *)(input_array + 0xe) = 0;\n    *(uint *)(*input_array + 0xc) = *(uint *)(*input_array + 0xc) | 0x80;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08002eb2": "validate_input_08002eb2",
                "param_1": "input_array",
                "param_2": "value_1",
                "param_3": "value_2",
                "param_1[8]": "input_array[8]",
                "param_1[0xf]": "input_array[0xf]"
            },
            "calling": [
                "FUN_08003eac",
                "FUN_08003f48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002efa": {
            "entrypoint": "0x08002efa",
            "current_name": "validate_and_update_data_08002efa",
            "code": "\nundefined4 validateAndUpdateData_08002efa(int *data,int value1,int value2)\n\n{\n  if (*(char *)((int)data + 0x3a) != ' ') {\n    return 2;\n  }\n  if (value1 == 0) {\n    return 1;\n  }\n  if (value2 == 0) {\n    return 1;\n  }\n  if (*(char *)(data + 0xe) != '\\x01') {\n    data1 = value1;\n    *(short *)(data + 0xb) = (short)value2;\n    *(short *)((int)data + 0x2e) = (short)value2;\n    data4 = 0;\n    *(undefined *)((int)data + 0x3a) = 0x22;\n    *(undefined *)(data + 0xe) = 0;\n    *(uint *)(*data + 0x14) = *(uint *)(*data + 0x14) | 1;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) | 0x120;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08002efa": "validate_and_update_data_08002efa",
                "param_1": "data",
                "param_2": "value1",
                "param_3": "value2",
                "param_1[10]": "data1",
                "param_1[0xf]": "data4"
            },
            "calling": [
                "FUN_08003e54",
                "FUN_08003e18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f4c": {
            "entrypoint": "0x08002f4c",
            "current_name": "set_flag_and_invoke_function_08002f4c",
            "code": "\nundefined4 setFlagAndInvokeFunction_08002f4c(int *input)\n\n{\n  *(uint *)(*input + 0xc) = *(uint *)(*input + 0xc) & 0xffffffbf;\n  *(undefined *)((int)input + 0x39) = 0x20;\n  FUN_08003f48();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002f4c": "set_flag_and_invoke_function_08002f4c",
                "param_1": "input"
            },
            "calling": [
                "FUN_08002ffc"
            ],
            "called": [
                "FUN_08003f48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f66": {
            "entrypoint": "0x08002f66",
            "current_name": "process_input_08002f66",
            "code": "\nundefined4 processInput_08002f66(int *inputArray)\n\n{\n  byte *bytePointer;\n  short shortVar;\n  undefined *undefinedPointer;\n  \n  if (*(char *)((int)inputArray + 0x3a) != '\\\"') {\n    return 2;\n  }\n  if (inputArray[2] == 0x1000) {\n    if (inputArray[4] == 0) {\n      *(ushort *)inputArray[10] = (ushort)((uint)(*(int *)(*inputArray + 4) << 0x17) >> 0x17);\n      inputArray[10] = inputArray[10] + 2;\n    }\n    else {\n      *(ushort *)inputArray[10] = (ushort)*(undefined4 *)(*inputArray + 4) & 0xff;\n      inputArray[10] = inputArray[10] + 1;\n    }\n  }\n  else if (inputArray[4] == 0) {\n    undefinedPointer = (undefined *)inputArray[10];\n    inputArray[10] = (int)(undefinedPointer + 1);\n    *undefinedPointer = (char)*(undefined4 *)(*inputArray + 4);\n  }\n  else {\n    bytePointer = (byte *)inputArray[10];\n    inputArray[10] = (int)(bytePointer + 1);\n    *bytePointer = (byte)*(undefined4 *)(*inputArray + 4) & 0x7f;\n  }\n  shortVar = *(short *)((int)inputArray + 0x2e) + -1;\n  *(short *)((int)inputArray + 0x2e) = shortVar;\n  if (shortVar != 0) {\n    return 0;\n  }\n  *(uint *)(*inputArray + 0xc) = *(uint *)(*inputArray + 0xc) & 0xfffffedf;\n  *(uint *)(*inputArray + 0x14) = *(uint *)(*inputArray + 0x14) & 0xfffffffe;\n  *(undefined *)((int)inputArray + 0x3a) = 0x20;\n  FUN_08003f24();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002f66": "process_input_08002f66",
                "param_1": "inputArray",
                "pbVar1": "bytePointer",
                "sVar2": "shortVar",
                "puVar3": "undefinedPointer"
            },
            "calling": [
                "FUN_08002ffc"
            ],
            "called": [
                "FUN_08003f24"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ffc": {
            "entrypoint": "0x08002ffc",
            "current_name": "check_and_update_status_08002ffc",
            "code": "\nvoid check_and_update_status_08002ffc(uint **input_data)\n\n{\n  int result;\n  uint value_check;\n  uint *ptr_data;\n  uint flag_check;\n  uint flag_value;\n  \n  ptr_data = *input_data;\n  flag_value = *ptr_data;\n  value_check = ptr_data[3];\n  if ((((flag_value & 0xf) == 0) && ((flag_value & 0x20) != 0)) && ((value_check & 0x20) != 0)) {\n    FUN_08002f66(input_data);\n    return;\n  }\n  if (((flag_value & 0xf) == 0) || ((flag_check = ptr_data[5] & 1, flag_check == 0 && ((value_check & 0x120) == 0)))) {\n    if (((flag_value & 0x80) != 0) && ((value_check & 0x80) != 0)) {\n      FUN_0800295c(input_data);\n      return;\n    }\n    if (((flag_value & 0x40) != 0) && ((value_check & 0x40) != 0)) {\n      FUN_08002f4c(input_data);\n    }\n  }\n  else {\n    if (((flag_value & 1) != 0) && ((value_check & 0x100) != 0)) {\n      input_data[0xf] = (uint *)((uint)input_data[0xf] | 1);\n    }\n    if (((flag_value & 4) != 0) && (flag_check != 0)) {\n      input_data[0xf] = (uint *)((uint)input_data[0xf] | 2);\n    }\n    if (((flag_value & 2) != 0) && (flag_check != 0)) {\n      input_data[0xf] = (uint *)((uint)input_data[0xf] | 4);\n    }\n    if (((flag_value & 8) != 0) && (flag_check != 0)) {\n      input_data[0xf] = (uint *)((uint)input_data[0xf] | 8);\n    }\n    if (input_data[0xf] != (uint *)0x0) {\n      if (((flag_value & 0x20) != 0) && ((value_check & 0x20) != 0)) {\n        FUN_08002f66(input_data);\n      }\n      if ((((uint)input_data[0xf] & 8) == 0) && (((*input_data)[5] & 0x40) == 0)) {\n        FUNC_08003f94(input_data);\n        input_data[0xf] = (uint *)0x0;\n        return;\n      }\n      FUN_08002940(input_data);\n      ptr_data = *input_data;\n      if ((ptr_data[5] & 0x40) == 0) {\n        FUNC_08003f94(input_data);\n        return;\n      }\n      ptr_data[5] = ptr_data[5] & 0xffffffbf;\n      if (input_data[0xd] == (uint *)0x0) {\n        FUNC_08003f94(input_data);\n        return;\n      }\n      input_data[0xd][0x14] = (uint)&LAB_0800311c_1;\n      result = FUN_08000f8c(input_data[0xd]);\n      if (result != 0) {\n        (*(code *)input_data[0xd][0x14])();\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ffc": "check_and_update_status_08002ffc",
                "param_1": "input_data",
                "iVar1": "result",
                "uVar2": "value_check",
                "puVar3": "ptr_data",
                "uVar4": "flag_check",
                "uVar5": "flag_value"
            },
            "calling": [],
            "called": [
                "FUN_08003f94",
                "FUN_0800295c",
                "FUN_08002940",
                "FUN_08002f4c",
                "FUN_08000f8c",
                "FUN_08002f66"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800312c": {
            "entrypoint": "0x0800312c",
            "current_name": "combine_bytes_0800312c",
            "code": "\nbyte combineBytes_0800312c(int input)\n\n{\n  return *(byte *)(input + 0x3a) | *(byte *)(input + 0x39);\n}\n\n",
            "renaming": {
                "FUN_0800312c": "combine_bytes_0800312c",
                "param_1": "input"
            },
            "calling": [
                "FUN_08003dd0",
                "FUN_08003df4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003138": {
            "entrypoint": "0x08003138",
            "current_name": "get_bit_at_position_08003138",
            "code": "\nuint get_bit_at_position_08003138(uint input_value,int array_address)\n\n{\n  return *(uint *)(array_address + ((input_value << 0x18) >> 0x1c) * 4) >> (input_value & 0xf) & 1;\n}\n\n",
            "renaming": {
                "FUN_08003138": "get_bit_at_position_08003138",
                "param_1": "input_value",
                "param_2": "array_address"
            },
            "calling": [
                "FUN_08004110",
                "FUN_080041bc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800314e": {
            "entrypoint": "0x0800314e",
            "current_name": "update_bit_0800314e",
            "code": "\nvoid updateBit_0800314e(uint inputParam,int memoryAddress)\n\n{\n  uint bitOffset;\n  \n  bitOffset = (inputParam << 0x18) >> 0x1c;\n  *(uint *)(memoryAddress + bitOffset * 4) = *(uint *)(memoryAddress + bitOffset * 4) | 1 << (inputParam & 0xf);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800314e": "update_bit_0800314e",
                "param_1": "inputParam",
                "param_2": "memoryAddress",
                "uVar1": "bitOffset"
            },
            "calling": [
                "FUN_08004110"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800316c": {
            "entrypoint": "0x0800316c",
            "current_name": "update_bit_in_array_0800316c",
            "code": "\nvoid updateBitInArray_0800316c(uint bitIndex,int arrayBase)\n\n{\n  uint arrayIndex;\n  \n  arrayIndex = (bitIndex << 0x18) >> 0x1c;\n  *(uint *)(arrayBase + arrayIndex * 4) = *(uint *)(arrayBase + arrayIndex * 4) & ~(1 << (bitIndex & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800316c": "update_bit_in_array_0800316c",
                "param_1": "bitIndex",
                "param_2": "arrayBase",
                "uVar1": "arrayIndex"
            },
            "calling": [
                "FUN_08004110"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800318c": {
            "entrypoint": "0x0800318c",
            "current_name": "get_memory_address_0800318c",
            "code": "\nundefined4 getMemoryAddress_0800318c(undefined4 inputIndex)\n\n{\n  switch(inputIndex) {\n  case 0:\n    return 0x40020000;\n  case 1:\n    return 0x40020400;\n  case 2:\n    return 0x40020800;\n  case 3:\n    return 0x40020c00;\n  case 4:\n    return 0x40021000;\n  case 5:\n    return 0x40021400;\n  case 6:\n    return 0x40021800;\n  case 7:\n    return 0x40021c00;\n  case 8:\n    return 0x40022000;\n  case 9:\n    return 0x40022400;\n  case 10:\n    return 0x40022800;\n  default:\n    return 0;\n  }\n}\n\n",
            "renaming": {
                "FUN_0800318c": "get_memory_address_0800318c",
                "param_1": "inputIndex"
            },
            "calling": [
                "FUN_080041bc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080031fc": {
            "entrypoint": "0x080031fc",
            "current_name": "set_memory_address_080031fc",
            "code": "\n\n\nundefined4 setMemoryAddress_080031fc(undefined4 addressIndex)\n\n{\n  undefined4 newAddress;\n  \n  switch(addressIndex) {\n  case 0:\n    _DAT_40023830 = _DAT_40023830 | 1;\n    newAddress = 0x40020000;\n    break;\n  case 1:\n    _DAT_40023830 = _DAT_40023830 | 2;\n    newAddress = 0x40020400;\n    break;\n  case 2:\n    _DAT_40023830 = _DAT_40023830 | 4;\n    newAddress = 0x40020800;\n    break;\n  case 3:\n    _DAT_40023830 = _DAT_40023830 | 8;\n    newAddress = 0x40020c00;\n    break;\n  case 4:\n    _DAT_40023830 = _DAT_40023830 | 0x10;\n    newAddress = 0x40021000;\n    break;\n  case 5:\n    _DAT_40023830 = _DAT_40023830 | 0x20;\n    newAddress = 0x40021400;\n    break;\n  case 6:\n    _DAT_40023830 = _DAT_40023830 | 0x40;\n    newAddress = 0x40021800;\n    break;\n  case 7:\n    _DAT_40023830 = _DAT_40023830 | 0x80;\n    newAddress = 0x40021c00;\n    break;\n  case 8:\n    _DAT_40023830 = _DAT_40023830 | 0x100;\n    newAddress = 0x40022000;\n    break;\n  case 9:\n    _DAT_40023830 = _DAT_40023830 | 0x200;\n    newAddress = 0x40022400;\n    break;\n  case 10:\n    _DAT_40023830 = _DAT_40023830 | 0x400;\n    newAddress = 0x40022800;\n    break;\n  default:\n    newAddress = 0;\n  }\n  return newAddress;\n}\n\n",
            "renaming": {
                "FUN_080031fc": "set_memory_address_080031fc",
                "param_1": "addressIndex",
                "uVar1": "newAddress"
            },
            "calling": [
                "FUN_08003486",
                "FUN_08003978"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003380": {
            "entrypoint": "0x08003380",
            "current_name": "check_input_validity_08003380",
            "code": "\nundefined4 check_input_validity_08003380(undefined4 input_param1,undefined4 input_param2,undefined4 input_param3,undefined4 input_param4)\n\n{\n  int result;\n  \n  result = FUN_0800354a(input_param1,&DAT_08005a18,input_param3,input_param4,input_param4);\n  if ((uint)(result << 0xc) >> 0x1b != 2) {\n    return 0;\n  }\n  return 0x10;\n}\n\n",
            "renaming": {
                "FUN_08003380": "check_input_validity_08003380",
                "param_1": "input_param1",
                "param_2": "input_param2",
                "param_3": "input_param3",
                "param_4": "input_param4",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080033d8"
            ],
            "called": [
                "FUN_0800354a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800339c": {
            "entrypoint": "0x0800339c",
            "current_name": "determine_return_value_0800339c",
            "code": "\nundefined4 determineReturnValue_0800339c(undefined4 input_param_1,undefined4 input_param_2,undefined4 input_param_3,undefined4 input_param_4)\n\n{\n  int result;\n  uint shifted_value;\n  \n  result = FUN_0800354a(input_param_1,&DAT_08005a3c,input_param_3,input_param_4,input_param_4);\n  shifted_value = (uint)(result << 0xc) >> 0x1b;\n  if (shifted_value == 3) {\n    return 8;\n  }\n  if (shifted_value != 4) {\n    if (shifted_value != 2) {\n      return 0;\n    }\n    return 4;\n  }\n  return 0xc;\n}\n\n",
            "renaming": {
                "FUN_0800339c": "determine_return_value_0800339c",
                "param_1": "input_param_1",
                "param_2": "input_param_2",
                "param_3": "input_param_3",
                "param_4": "input_param_4",
                "iVar1": "result",
                "uVar2": "shifted_value"
            },
            "calling": [
                "FUN_08003414"
            ],
            "called": [
                "FUN_0800354a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080033c8": {
            "entrypoint": "0x080033c8",
            "current_name": "clear_data_flag_080033c8",
            "code": "\n\n\nvoid clearDataFlag_080033c8(void)\n\n{\n  _DAT_40023840 = _DAT_40023840 & 0xdfffffff;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080033c8": "clear_data_flag_080033c8"
            },
            "calling": [
                "FUN_08000f56"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080033d8": {
            "entrypoint": "0x080033d8",
            "current_name": "execute_function_080033d8",
            "code": "\nvoid executeFunction_080033d8(undefined4 input)\n\n{\n  int result;\n  int array [5];\n  \n  array[0] = FUN_080034f4(input,&DAT_08005a18);\n  if ((array[0] != 0) && ((result = FUN_08003380(input), result == 0 || (result == 0x10)))) {\n    FUN_08000f72(array,result);\n    FUN_08000f56(array);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080033d8": "execute_function_080033d8",
                "param_1": "input",
                "iVar1": "result",
                "local_1c": "array"
            },
            "calling": [
                "FUN_08004110"
            ],
            "called": [
                "FUN_08000f56",
                "FUN_080034f4",
                "FUN_08003380",
                "FUN_08000f72"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800340c": {
            "entrypoint": "0x0800340c",
            "current_name": "initialize_system_0800340c",
            "code": "\nvoid initialize_system_0800340c(void)\n\n{\n  FUN_080035fc();\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800340c": "initialize_system_0800340c"
            },
            "calling": [
                "FUN_0800268e"
            ],
            "called": [
                "FUN_080035fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003414": {
            "entrypoint": "0x08003414",
            "current_name": "process_data_08003414",
            "code": "\nvoid processData_08003414(undefined4 inputData)\n\n{\n  int result;\n  uint flags;\n  int processedData [16];\n  \n  processedData[0] = FUN_080034f4(inputData,&DAT_08005a3c);\n  if ((processedData[0] != 0) &&\n     ((((result = FUN_0800339c(inputData), result == 0 || (result == 4)) || (result == 8)) ||\n      ((result == 0xc || (result == 0x18)))))) {\n    flags = FUN_0800354a(inputData,&DAT_08005a3c);\n    if ((flags & 0x100000) == 0) {\n      FUN_08002864(processedData,result);\n    }\n    else {\n      FUN_080028f0(processedData,result);\n    }\n    FUN_0800268e(processedData);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003414": "process_data_08003414",
                "param_1": "inputData",
                "iVar1": "result",
                "uVar2": "flags",
                "local_4c": "processedData"
            },
            "calling": [
                "FUN_08004110"
            ],
            "called": [
                "FUN_0800339c",
                "FUN_080034f4",
                "FUN_08002864",
                "FUN_0800268e",
                "FUN_080028f0",
                "FUN_0800354a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800346c": {
            "entrypoint": "0x0800346c",
            "current_name": "initialize_application_0800346c",
            "code": "\nvoid initialize_application_0800346c(void)\n\n{\n  FUN_08000e30();\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800346c": "initialize_application_0800346c"
            },
            "calling": [
                "FUN_08004204"
            ],
            "called": [
                "FUN_08000e30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003474": {
            "entrypoint": "0x08003474",
            "current_name": "FUNC_08003474",
            "code": "\nvoid FUNC_08003474(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003474": "FUNC_08003474"
            },
            "calling": [
                "FUN_08003476"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08003476": {
            "entrypoint": "0x08003476",
            "current_name": "initialize_program_08003476",
            "code": "\nvoid initialize_program_08003476(void)\n\n{\n  FUN_08000e18();\n  FUN_08000f4e();\n  FUNC_08003474();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003476": "initialize_program_08003476"
            },
            "calling": [],
            "called": [
                "FUN_08003474",
                "FUN_08000f4e",
                "FUN_08000e18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003486": {
            "entrypoint": "0x08003486",
            "current_name": "initialize_bits_08003486",
            "code": "\nvoid initializeBits_08003486(uint inputValue,undefined4 parameter2,undefined4 parameter3)\n\n{\n  undefined4 shiftedValue;\n  uint bitMask;\n  undefined4 localVariable1;\n  undefined4 localVariable2;\n  undefined4 localVariable3;\n  \n  shiftedValue = FUN_080031fc((inputValue << 0x18) >> 0x1c);\n  bitMask = 1 << (inputValue & 0xf) & 0xffff;\n  localVariable3 = 2;\n  localVariable1 = parameter2;\n  localVariable2 = parameter3;\n  FUN_08000fb4(shiftedValue,&bitMask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003486": "initialize_bits_08003486",
                "param_1": "inputValue",
                "param_2": "parameter2",
                "param_3": "parameter3",
                "uVar1": "shiftedValue",
                "local_24": "bitMask",
                "local_20": "localVariable1",
                "local_1c": "localVariable2",
                "local_18": "localVariable3"
            },
            "calling": [
                "FUN_08004110"
            ],
            "called": [
                "FUN_08000fb4",
                "FUN_080031fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080034b6": {
            "entrypoint": "0x080034b6",
            "current_name": "execute_process_080034b6",
            "code": "\nvoid executeProcess_080034b6(undefined4 processHandle,undefined2 fileName,int isStarted,undefined4 data)\n\n{\n  if (isStarted == 0) {\n    FUN_08001198(processHandle,fileName,0,data,data);\n    return;\n  }\n  FUN_08001198(processHandle,fileName,1,data,data);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080034b6": "execute_process_080034b6",
                "param_1": "processHandle",
                "param_2": "fileName",
                "param_3": "isStarted",
                "param_4": "data"
            },
            "calling": [
                "FUN_080041bc"
            ],
            "called": [
                "FUN_08001198"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080034ce": {
            "entrypoint": "0x080034ce",
            "current_name": "initialize_system_080034ce",
            "code": "\nvoid initialize_system_080034ce(void)\n\n{\n  FUN_08000de4();\n  FUN_08000c8c();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080034ce": "initialize_system_080034ce"
            },
            "calling": [
                "FUN_08000d8e"
            ],
            "called": [
                "FUN_08000c8c",
                "FUN_08000de4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080034da": {
            "entrypoint": "0x080034da",
            "current_name": "find_index_080034da",
            "code": "\nundefined4 find_index_080034da(int target,short *array)\n\n{\n  while( true ) {\n    if (*array == -1) {\n      return 0;\n    }\n    if (*array == target) break;\n    array = array + 6;\n  }\n  return *(undefined4 *)(array + 2);\n}\n\n",
            "renaming": {
                "FUN_080034da": "find_index_080034da",
                "param_1": "target",
                "param_2": "array"
            },
            "calling": [
                "FUN_080034f4",
                "FUN_080034da"
            ],
            "called": [
                "FUN_080034da"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080034f4": {
            "entrypoint": "0x080034f4",
            "current_name": "check_parameter_080034f4",
            "code": "\nundefined4 check_parameter_080034f4(int input_param)\n\n{\n  undefined4 result;\n  \n  if (input_param != -1) {\n    result = FUN_080034da();\n    return result;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080034f4": "check_parameter_080034f4",
                "param_1": "input_param",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080033d8",
                "FUN_08003414",
                "FUN_08003d18",
                "FUN_08003978",
                "FUN_08003cc8"
            ],
            "called": [
                "FUN_080034da"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003506": {
            "entrypoint": "0x08003506",
            "current_name": "find_parameter_value_08003506",
            "code": "\nint find_parameter_value_08003506(int target_value,short *data_array)\n\n{\n  while( true ) {\n    if (*(int *)(data_array + 2) == 0) {\n      return -1;\n    }\n    if (*(int *)(data_array + 2) == target_value) break;\n    data_array = data_array + 6;\n  }\n  return (int)*data_array;\n}\n\n",
            "renaming": {
                "FUN_08003506": "find_parameter_value_08003506",
                "param_1": "target_value",
                "param_2": "data_array"
            },
            "calling": [
                "FUN_08003506",
                "FUN_0800351e"
            ],
            "called": [
                "FUN_08003506"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800351e": {
            "entrypoint": "0x0800351e",
            "current_name": "validate_input_0800351e",
            "code": "\nundefined4 validate_input_0800351e(int input_value)\n\n{\n  undefined4 result;\n  \n  if (input_value != 0) {\n    result = FUN_08003506();\n    return result;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800351e": "validate_input_0800351e",
                "param_1": "input_value",
                "uVar1": "result"
            },
            "calling": [
                "FUN_0800447c",
                "FUN_08003cc8"
            ],
            "called": [
                "FUN_08003506"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800352e": {
            "entrypoint": "0x0800352e",
            "current_name": "find_value_in_array_0800352e",
            "code": "\nundefined4 find_value_in_array_0800352e(int value,short *array)\n\n{\n  while( true ) {\n    if (*array == -1) {\n      return 0xffffffff;\n    }\n    if (*array == value) break;\n    array = array + 6;\n  }\n  return *(undefined4 *)(array + 4);\n}\n\n",
            "renaming": {
                "FUN_0800352e": "find_value_in_array_0800352e",
                "param_1": "value",
                "param_2": "array"
            },
            "calling": [
                "FUN_0800352e",
                "FUN_0800354a"
            ],
            "called": [
                "FUN_0800352e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800354a": {
            "entrypoint": "0x0800354a",
            "current_name": "check_return_value_0800354a",
            "code": "\nundefined4 checkReturnValue_0800354a(int inputValue)\n\n{\n  undefined4 returnValue;\n  \n  if (inputValue == -1) {\n    return 0xffffffff;\n  }\n  returnValue = FUN_0800352e();\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_0800354a": "check_return_value_0800354a",
                "param_1": "inputValue",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08003414",
                "FUN_0800339c",
                "FUN_08003380",
                "FUN_08003978"
            ],
            "called": [
                "FUN_0800352e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800355e": {
            "entrypoint": "0x0800355e",
            "current_name": "find_element_0800355e",
            "code": "\nundefined4 find_element_0800355e(int value,short *array)\n\n{\n  if (value == -1) {\n    return 0;\n  }\n  while( true ) {\n    if (*array == -1) {\n      return 0;\n    }\n    if (value == *array) break;\n    array = array + 6;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800355e": "find_element_0800355e",
                "param_1": "value",
                "param_2": "array"
            },
            "calling": [
                "FUN_08004110"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003582": {
            "entrypoint": "0x08003582",
            "current_name": "compare_and_return_non_zero_08003582",
            "code": "\nint compareAndReturnNonZero_08003582(int input_1,int input_2)\n\n{\n  if (input_1 != input_2) {\n    if (input_1 == 0) {\n      return input_2;\n    }\n    if (input_2 == 0) {\n      return input_1;\n    }\n    input_1 = 0;\n  }\n  return input_1;\n}\n\n",
            "renaming": {
                "FUN_08003582": "compare_and_return_non_zero_08003582",
                "param_1": "input_1",
                "param_2": "input_2"
            },
            "calling": [
                "FUN_08003978"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003594": {
            "entrypoint": "0x08003594",
            "current_name": "execute_if_valid_func_08003594",
            "code": "\nvoid execute_if_valid_func_08003594(void)\n\n{\n  if (DAT_20000188 != (code *)0x0) {\n    (*DAT_20000188)(DAT_200001ac);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003594": "execute_if_valid_func_08003594"
            },
            "calling": [
                "FUN_0800262c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080035bc": {
            "entrypoint": "0x080035bc",
            "current_name": "initialize_memory_080035bc",
            "code": "\n\n\nvoid initializeMemory_080035bc(void)\n\n{\n  _DAT_40023808 = 0;\n  _DAT_40023804 = 0x24003010;\n  _DAT_40023800 = _DAT_40023800 & 0xfef2ffff | 1;\n  _DAT_4002380c = 0;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080035bc": "initialize_memory_080035bc"
            },
            "calling": [
                "entry"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080035fc": {
            "entrypoint": "0x080035fc",
            "current_name": "update_flags_based_on_param_value_080035fc",
            "code": "\n\n\nvoid updateFlagsBasedOnParamValue_080035fc(int *param)\n\n{\n  if (*param == 0x40010000) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffffffe;\n  }\n  if (*param == 0x40000000) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffffe;\n  }\n  if (*param == 0x40000400) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffffd;\n  }\n  if (*param == 0x40000800) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffffb;\n  }\n  if (*param == 0x40000c00) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffff7;\n  }\n  if (*param == 0x40001000) {\n    _DAT_40023840 = _DAT_40023840 & 0xffffffef;\n  }\n  if (*param == 0x40001400) {\n    _DAT_40023840 = _DAT_40023840 & 0xffffffdf;\n  }\n  if (*param == 0x40010400) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffffffd;\n  }\n  if (*param == 0x40014000) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffeffff;\n  }\n  if (*param == 0x40014400) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffdffff;\n  }\n  if (*param == 0x40014800) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffbffff;\n  }\n  if (*param == 0x40001800) {\n    _DAT_40023840 = _DAT_40023840 & 0xffffffbf;\n  }\n  if (*param == 0x40001c00) {\n    _DAT_40023840 = _DAT_40023840 & 0xffffff7f;\n  }\n  if (*param == 0x40002000) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffeff;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080035fc": "update_flags_based_on_param_value_080035fc",
                "param_1": "param"
            },
            "calling": [
                "FUN_0800340c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003750": {
            "entrypoint": "0x08003750",
            "current_name": "subtract_four_08003750",
            "code": "\nint subtract_four_08003750(int input_num)\n\n{\n  return input_num + -4;\n}\n\n",
            "renaming": {
                "FUN_08003750": "subtract_four_08003750",
                "param_1": "input_num"
            },
            "calling": [
                "FUN_08003754",
                "FUN_0800376e"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003754": {
            "entrypoint": "0x08003754",
            "current_name": "execute_callback_08003754",
            "code": "\nvoid executeCallback_08003754(int callbackParameter)\n\n{\n  int callbackHandler;\n  \n  callbackHandler = FUN_08003750();\n  if ((*(code **)(callbackHandler + 0x48) != (code *)0x0) && (*(char *)(callbackParameter + 0x18) == '\\x01')) {\n    (**(code **)(callbackHandler + 0x48))(callbackHandler,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003754": "execute_callback_08003754",
                "param_1": "callbackParameter",
                "iVar1": "callbackHandler"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [
                "FUN_08003750"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800376e": {
            "entrypoint": "0x0800376e",
            "current_name": "execute_function_0800376e",
            "code": "\nvoid executeFunction_0800376e(void)\n\n{\n  int pointer;\n  \n  pointer = FUN_08003750();\n  if (*(code **)(pointer + 0x44) != (code *)0x0) {\n    (**(code **)(pointer + 0x44))();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800376e": "execute_function_0800376e",
                "iVar1": "pointer"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [
                "FUN_08003750"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800377c": {
            "entrypoint": "0x0800377c",
            "current_name": "check_and_execute_functions_0800377c",
            "code": "\nvoid checkAndExecuteFunctions_0800377c(void)\n\n{\n  if (DAT_200001b0 != 0) {\n    FUN_080026ce();\n  }\n  if (DAT_200001d4 != 0) {\n    FUN_080026ce();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800377c": "check_and_execute_functions_0800377c"
            },
            "calling": [],
            "called": [
                "FUN_080026ce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800387c": {
            "entrypoint": "0x0800387c",
            "current_name": "subtract_four_0800387c",
            "code": "\nint subtractFour_0800387c(int input)\n\n{\n  return input + -4;\n}\n\n",
            "renaming": {
                "FUN_0800387c": "subtract_four_0800387c",
                "param_1": "input"
            },
            "calling": [
                "FUN_08003880",
                "FUN_080038d0",
                "FUN_08003900"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003880": {
            "entrypoint": "0x08003880",
            "current_name": "process_data_08003880",
            "code": "\nvoid processData_08003880(int inputParam,int flag,int compareValue,undefined4 extraParam)\n\n{\n  int result;\n  \n  result = FUN_0800387c();\n  if (compareValue == *(int *)(inputParam + 0xc)) {\n    if (flag == 0) {\n      *(undefined *)(result + 0x88) = 0;\n      *(undefined *)(result + 0x5e) = 0;\n      if (*(code **)(result + 100) != (code *)0x0) {\n        (**(code **)(result + 100))();\n      }\n      FUN_08001460(inputParam,result + 0x68,*(undefined *)(result + 0x88),8);\n      return;\n    }\n    *(undefined *)(result + 0x5e) = 1;\n    FUN_080014ec(inputParam,result + 0x68,0x20,8,extraParam);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003880": "process_data_08003880",
                "param_1": "inputParam",
                "param_2": "flag",
                "param_3": "compareValue",
                "param_4": "extraParam",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800165a"
            ],
            "called": [
                "FUN_0800387c",
                "FUN_080014ec",
                "FUN_08001460"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080038d0": {
            "entrypoint": "0x080038d0",
            "current_name": "execute_function_if_needed_080038d0",
            "code": "\nvoid executeFunctionIfNeeded_080038d0(undefined4 inputParam)\n\n{\n  int result;\n  \n  result = FUN_0800387c();\n  if (((*(function **)(result + 0x60) != (function *)0x0) && (*(char *)(result + 0x5e) == '\\x01')) &&\n     (*(char *)(result + 0x2c) != ' ')) {\n    (**(function **)(result + 0x60))(result + 0x68);\n  }\n  FUN_08001578(inputParam);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080038d0": "execute_function_if_needed_080038d0",
                "param_1": "inputParam",
                "iVar1": "result",
                "code": "function"
            },
            "calling": [
                "FUN_08001684",
                "FUN_08001ab0",
                "FUN_08001bfc"
            ],
            "called": [
                "FUN_0800387c",
                "FUN_08001578"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003900": {
            "entrypoint": "0x08003900",
            "current_name": "check_and_execute_08003900",
            "code": "\nvoid checkAndExecute_08003900(undefined4 input)\n\n{\n  int result;\n  \n  result = FUN_0800387c();\n  if (*(char *)(result + 0x5f) == '\\0') {\n    FUN_08001578(input);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003900": "check_and_execute_08003900",
                "param_1": "input",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08001ab0"
            ],
            "called": [
                "FUN_0800387c",
                "FUN_08001578"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003978": {
            "entrypoint": "0x08003978",
            "current_name": "configure_uart_pins_08003978",
            "code": "\n\n\nvoid configureUARTPins_08003978(int *pins)\n\n{\n  int uart1Peripheral;\n  int uart2Peripheral;\n  undefined4 uartPeripheralConfig;\n  uint uartPinConfig;\n  uint uart1PinMask;\n  uint uart1PinConfig;\n  uint uart1PinShift;\n  undefined4 uartPinMode;\n  uint uartPinData;\n  \n  if (pins != (int *)0x0) {\n    uart1Peripheral = FUN_080034f4((int)*(short *)(pins + 0x16),&DAT_08005ca0);\n    uart2Peripheral = FUN_080034f4((int)*(short *)((int)pins + 0x5a),&DAT_08005c10);\n    if ((uart2Peripheral == 0) || (uart1Peripheral == 0)) {\n      FUN_08004fdc(\"ERROR: at least one UART pin has no peripheral\\n\",uart2Peripheral);\n    }\n    else {\n      uart1Peripheral = FUN_08003582(uart1Peripheral);\n      *pins = uart1Peripheral;\n      if (uart1Peripheral == 0) {\n        FUN_08004fdc(\"ERROR: U(S)ART pins mismatch\\n\");\n      }\n      else {\n        if (uart1Peripheral == 0x40011000) {\n          _DAT_40023824 = _DAT_40023824 & 0xffffffef;\n          _DAT_40023844 = _DAT_40023844 | 0x10;\n          *(undefined *)(pins + 0x11) = 0;\n          *(undefined *)(pins + 0x17) = 0x25;\n        }\n        else if (uart1Peripheral == 0x40004400) {\n          _DAT_40023820 = _DAT_40023820 & 0xfffdffff;\n          _DAT_40023840 = _DAT_40023840 | 0x20000;\n          *(undefined *)(pins + 0x11) = 1;\n          *(undefined *)(pins + 0x17) = 0x26;\n        }\n        else if (uart1Peripheral == 0x40004800) {\n          _DAT_40023820 = _DAT_40023820 & 0xfffbffff;\n          _DAT_40023840 = _DAT_40023840 | 0x40000;\n          *(undefined *)(pins + 0x11) = 2;\n          *(undefined *)(pins + 0x17) = 0x27;\n        }\n        else if (uart1Peripheral == 0x40004c00) {\n          _DAT_40023820 = _DAT_40023820 & 0xfff7ffff;\n          _DAT_40023840 = _DAT_40023840 | 0x80000;\n          *(undefined *)(pins + 0x11) = 3;\n          *(undefined *)(pins + 0x17) = 0x34;\n        }\n        else if (uart1Peripheral == 0x40005000) {\n          _DAT_40023820 = _DAT_40023820 & 0xffefffff;\n          _DAT_40023840 = _DAT_40023840 | 0x100000;\n          *(undefined *)(pins + 0x11) = 4;\n          *(undefined *)(pins + 0x17) = 0x35;\n        }\n        else if (uart1Peripheral == 0x40011400) {\n          _DAT_40023824 = _DAT_40023824 & 0xffffffdf;\n          _DAT_40023844 = _DAT_40023844 | 0x20;\n          *(undefined *)(pins + 0x11) = 5;\n          *(undefined *)(pins + 0x17) = 0x47;\n        }\n        else if (uart1Peripheral == 0x40007800) {\n          _DAT_40023820 = _DAT_40023820 & 0xbfffffff;\n          _DAT_40023840 = _DAT_40023840 | 0x40000000;\n          *(undefined *)(pins + 0x11) = 6;\n          *(undefined *)(pins + 0x17) = 0x52;\n        }\n        else if (uart1Peripheral == 0x40007c00) {\n          _DAT_40023820 = _DAT_40023820 & 0x7fffffff;\n          _DAT_40023840 = _DAT_40023840 | 0x80000000;\n          *(undefined *)(pins + 0x11) = 7;\n          *(undefined *)(pins + 0x17) = 0x53;\n        }\n        uartPeripheralConfig = FUN_080031fc((uint)((int)*(short *)((int)pins + 0x5a) << 0x18) >> 0x1c);\n        uartPinConfig = FUN_0800354a((int)*(short *)((int)pins + 0x5a),&DAT_08005c10);\n        uart1PinMask = 1 << (*(ushort *)((int)pins + 0x5a) & 0xf) & 0xffff;\n        uart1PinConfig = (uartPinConfig >> 3 & 1) << 4 | uartPinConfig & 7;\n        uart1PinShift = (uartPinConfig << 0x1a) >> 0x1e;\n        uartPinData = (uartPinConfig << 0x11) >> 0x19;\n        uartPinMode = 3;\n        FUN_08000fb4(uartPeripheralConfig,&uart1PinMask);\n        uartPeripheralConfig = FUN_080031fc((uint)((int)*(short *)(pins + 0x16) << 0x18) >> 0x1c);\n        uartPinConfig = FUN_0800354a((int)*(short *)(pins + 0x16),&DAT_08005ca0);\n        uart1PinMask = 1 << (*(ushort *)(pins + 0x16) & 0xf) & 0xffff;\n        uart1PinConfig = (uartPinConfig >> 3 & 1) << 4 | uartPinConfig & 7;\n        uart1PinShift = (uartPinConfig << 0x1a) >> 0x1e;\n        FUN_08000fb4(uartPeripheralConfig,&uart1PinMask);\n        (&DAT_200002b4)[*(byte *)(pins + 0x11)] = pins + 1;\n        pins[1] = *pins;\n        pins[2] = pins[0x12];\n        pins[3] = pins[0x13];\n        pins[4] = pins[0x14];\n        pins[5] = pins[0x15];\n        pins[6] = 0xc;\n        pins[7] = 0;\n        pins[8] = 0;\n        FUN_08002d72(pins + 1);\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003978": "configure_uart_pins_08003978",
                "param_1": "pins",
                "iVar1": "uart1Peripheral",
                "iVar2": "uart2Peripheral",
                "uVar3": "uartPeripheralConfig",
                "uVar4": "uartPinConfig",
                "local_2c": "uart1PinMask",
                "local_28": "uart1PinConfig",
                "local_24": "uart1PinShift",
                "local_20": "uartPinMode",
                "local_1c": "uartPinData"
            },
            "calling": [
                "FUN_08004388",
                "FUN_08003cc8"
            ],
            "called": [
                "FUN_080034f4",
                "FUN_08003582",
                "FUN_08002d72",
                "FUN_08000fb4",
                "FUN_08004fdc",
                "FUN_0800354a",
                "FUN_080031fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003cc8": {
            "entrypoint": "0x08003cc8",
            "current_name": "initialize_data_08003cc8",
            "code": "\nvoid initializeData_08003cc8(void)\n\n{\n  int result;\n  undefined4 secondResult;\n  \n  result = FUN_080034f4(0x38,&DAT_08005ca0);\n  if (result != 0) {\n    secondResult = FUN_080034f4(0x38,&DAT_08005ca0);\n    DAT_2000008a = FUN_0800351e(secondResult,&DAT_08005c10);\n    DAT_20000088 = 0x38;\n    DAT_20000078 = 0x2580;\n    DAT_20000084 = 0;\n    DAT_2000007c = 0;\n    DAT_20000080 = 0;\n    FUN_08003978(&DAT_20000030);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003cc8": "initialize_data_08003cc8",
                "iVar1": "result",
                "uVar2": "secondResult"
            },
            "calling": [
                "FUN_08003d18"
            ],
            "called": [
                "FUN_080034f4",
                "FUN_0800351e",
                "FUN_08003978"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003d18": {
            "entrypoint": "0x08003d18",
            "current_name": "check_and_execute_08003d18",
            "code": "\nuint check_and_execute_08003d18(undefined4 status_code,uint input_value)\n\n{\n  int prev_status;\n  int current_status;\n  uint index;\n  \n  prev_status = FUN_08000e30();\n  current_status = FUN_080034f4(0x38,&DAT_08005ca0);\n  if (current_status == 0) {\n    return 0;\n  }\n  for (index = 0;\n      (index < 10 &&\n      (((&DAT_200002b4)[index] == 0 ||\n       (current_status = FUN_080034f4(0x38,&DAT_08005ca0), *(int *)(&DAT_200002b4)[index] != current_status))));\n      index = index + 1 & 0xff) {\n  }\n  if (9 < index) {\n    if ((9 < DAT_20000074) && (FUN_08003cc8(), 9 < DAT_20000074)) {\n      return 0;\n    }\n    index = (uint)DAT_20000074;\n  }\n  do {\n    current_status = FUN_08002dd0((&DAT_200002b4)[index],status_code,input_value & 0xffff,1000);\n    if (current_status == 0) {\n      return input_value;\n    }\n    current_status = FUN_08000e30();\n  } while ((uint)(current_status - prev_status) < 1000);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003d18": "check_and_execute_08003d18",
                "param_1": "status_code",
                "param_2": "input_value",
                "iVar1": "prev_status",
                "iVar2": "current_status",
                "uVar3": "index"
            },
            "calling": [
                "FUN_080040ec"
            ],
            "called": [
                "FUN_080034f4",
                "FUN_08000e30",
                "FUN_08003cc8",
                "FUN_08002dd0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003dd0": {
            "entrypoint": "0x08003dd0",
            "current_name": "check_bit_pattern_08003dd0",
            "code": "\nbool checkBitPattern_08003dd0(int inputValue)\n\n{\n  uint flags;\n  \n  flags = FUN_0800312c((&DAT_200002b4)[*(byteValue *)(inputValue + 0x44)]);\n  return (flags & 0x22) == 0x22;\n}\n\n",
            "renaming": {
                "FUN_08003dd0": "check_bit_pattern_08003dd0",
                "param_1": "inputValue",
                "uVar1": "flags",
                "byte": "byteValue"
            },
            "calling": [
                "FUN_08003e54",
                "FUN_08003e18"
            ],
            "called": [
                "FUN_0800312c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003df4": {
            "entrypoint": "0x08003df4",
            "current_name": "is_value_valid_08003df4",
            "code": "\nbool isValueValid_08003df4(int input)\n\n{\n  uint result;\n  \n  result = FUN_0800312c((&DAT_200002b4)[*(byteValue *)(input + 0x44)]);\n  return (result & 0x21) == 0x21;\n}\n\n",
            "renaming": {
                "FUN_08003df4": "is_value_valid_08003df4",
                "param_1": "input",
                "uVar1": "result",
                "byte": "byteValue"
            },
            "calling": [
                "FUN_080042e8"
            ],
            "called": [
                "FUN_0800312c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003e18": {
            "entrypoint": "0x08003e18",
            "current_name": "extract_data_from_binary_08003e18",
            "code": "\nundefined4 extract_data_from_binary_08003e18(int binary_addr,undefined *output_data,undefined4 len,undefined4 param_4)\n\n{\n  int result;\n  \n  if (binary_addr == 0) {\n    return 0xffffffff;\n  }\n  result = FUN_08003dd0();\n  if (result == 0) {\n    *output_data = *(undefined *)(binary_addr + 0x45);\n    FUN_08002efa((&DAT_200002b4)[*(byte *)(binary_addr + 0x44)],binary_addr + 0x45,1,&DAT_200002b4,param_4);\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08003e18": "extract_data_from_binary_08003e18",
                "param_1": "binary_addr",
                "param_2": "output_data",
                "param_3": "len",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080042ac"
            ],
            "called": [
                "FUN_08002efa",
                "FUN_08003dd0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003e54": {
            "entrypoint": "0x08003e54",
            "current_name": "update_data_08003e54",
            "code": "\nvoid updateData_08003e54(int data,undefined4 value,undefined4 unused1,undefined4 unused2)\n\n{\n  int result;\n  uint index;\n  \n  if (data != 0) {\n    result = FUN_08003dd0();\n    if (result == 0) {\n      index = (uint)*(byte *)(data + 0x44);\n      *(undefined4 *)(&DAT_20000214 + index * 4) = value;\n      *(int *)(&DAT_2000023c + index * 4) = data;\n      FUN_08000e60((int)*(char *)(data + 0x5c),0,1,index,unused2);\n      FUN_08000ec4((int)*(char *)(data + 0x5c));\n      FUN_08002efa((&DAT_200002b4)[*(byte *)(data + 0x44)],data + 0x45,1);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003e54": "update_data_08003e54",
                "param_1": "data",
                "param_2": "value",
                "param_3": "unused1",
                "param_4": "unused2",
                "iVar1": "result",
                "uVar2": "index"
            },
            "calling": [
                "FUN_08004388"
            ],
            "called": [
                "FUN_08002efa",
                "FUN_08000e60",
                "FUN_08003dd0",
                "FUN_08000ec4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003eac": {
            "entrypoint": "0x08003eac",
            "current_name": "update_data_08003eac",
            "code": "\nvoid updateData_08003eac(int dataPtr,undefined4 newData)\n\n{\n  byte offset;\n  \n  if (dataPtr != 0) {\n    offset = *(byte *)(dataPtr + 0x44);\n    *(undefined4 *)(&DAT_20000264 + (uint)offset * 4) = newData;\n    *(int *)(&DAT_2000028c + (uint)offset * 4) = dataPtr;\n    FUN_08000e60((int)*(char *)(dataPtr + 0x5c),0,2);\n    FUN_08000ec4((int)*(char *)(dataPtr + 0x5c));\n    FUN_08002eb2((&DAT_200002b4)[*(byte *)(dataPtr + 0x44)],\n                 *(int *)(dataPtr + 0x68) + (uint)*(ushort *)(dataPtr + 0x6e),1);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003eac": "update_data_08003eac",
                "param_1": "dataPtr",
                "param_2": "newData",
                "bVar1": "offset"
            },
            "calling": [
                "FUN_080042e8"
            ],
            "called": [
                "FUN_08000e60",
                "FUN_08000ec4",
                "FUN_08002eb2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f00": {
            "entrypoint": "0x08003f00",
            "current_name": "find_index_in_data_08003f00",
            "code": "\nuint find_index_in_data_08003f00(int input_value)\n\n{\n  uint index;\n  \n  if (input_value == 0) {\n    index = 10;\n  }\n  else {\n    index = 0;\n    while( true ) {\n      if (9 < index) {\n        return index;\n      }\n      if (input_value == (&DAT_200002b4)[index]) break;\n      index = index + 1 & 0xff;\n    }\n  }\n  return index;\n}\n\n",
            "renaming": {
                "FUN_08003f00": "find_index_in_data_08003f00",
                "param_1": "input_value",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08003f24",
                "FUN_08003f48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f24": {
            "entrypoint": "0x08003f24",
            "current_name": "execute_function_based_on_threshold_08003f24",
            "code": "\nvoid executeFunctionBasedOnThreshold_08003f24(void)\n\n{\n  uint thresholdValue;\n  \n  thresholdValue = FUN_08003f00();\n  if (thresholdValue < 10) {\n    (**(code **)(&DAT_20000214 + thresholdValue * 4))(*(undefined4 *)(&DAT_2000023c + thresholdValue * 4));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f24": "execute_function_based_on_threshold_08003f24",
                "uVar1": "thresholdValue"
            },
            "calling": [
                "FUN_08002f66"
            ],
            "called": [
                "FUN_08003f00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f48": {
            "entrypoint": "0x08003f48",
            "current_name": "process_data_08003f48",
            "code": "\nvoid processData_08003f48(void)\n\n{\n  uint randomIndex;\n  int result;\n  int dataPointer;\n  \n  randomIndex = FUN_08003f00();\n  dataPointer = *(int *)(&DAT_2000028c + randomIndex * 4);\n  if ((randomIndex < 10) && (result = (**(code **)(&DAT_20000264 + randomIndex * 4))(dataPointer), result != -1)) {\n    FUN_08002eb2((&DAT_200002b4)[*(byte *)(dataPointer + 0x44)],\n                 *(int *)(dataPointer + 0x68) + (uint)*(ushort *)(dataPointer + 0x6e),1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f48": "process_data_08003f48",
                "uVar1": "randomIndex",
                "iVar2": "result",
                "iVar3": "dataPointer"
            },
            "calling": [
                "FUN_08002f4c"
            ],
            "called": [
                "FUN_08003f00",
                "FUN_08002eb2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f94": {
            "entrypoint": "0x08003f94",
            "current_name": "FUNC_08003f94",
            "code": "\nvoid FUNC_08003f94(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f94": "FUNC_08003f94"
            },
            "calling": [
                "FUN_08002ffc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004094": {
            "entrypoint": "0x08004094",
            "current_name": "allocate_memory_08004094",
            "code": "\nundefined * allocate_memory_08004094(int size)\n\n{\n  undefined *allocated_memory;\n  \n  if (DAT_200002dc == (undefined *)0x0) {\n    DAT_200002dc = &DAT_20000678;\n  }\n  allocated_memory = DAT_200002dc;\n  if (DAT_200002dc + size <= stack_limit) {\n    DAT_200002dc = DAT_200002dc + size;\n    return allocated_memory;\n  }\n  DAT_20000674 = 0xc;\n  return (undefined *)0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08004094": "allocate_memory_08004094",
                "param_1": "size",
                "puVar1": "allocated_memory",
                "&stack0x00000000": "stack_limit"
            },
            "calling": [
                "FUN_0800500c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040d0": {
            "entrypoint": "0x080040d0",
            "current_name": "get_error_value_080040d0",
            "code": "\nuint32_t get_error_value_080040d0(void)\n\n{\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080040d0": "get_error_value_080040d0",
                "undefined4": "uint32_t"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040d6": {
            "entrypoint": "0x080040d6",
            "current_name": "set_memory_flags_080040d6",
            "code": "\nundefined4 setMemoryFlags_080040d6(undefined4 param1,int param2)\n\n{\n  *(undefined4 *)(param2 + 4) = 0x2000;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080040d6": "set_memory_flags_080040d6",
                "param_1": "param1",
                "param_2": "param2"
            },
            "calling": [
                "FUN_080056d4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040e0": {
            "entrypoint": "0x080040e0",
            "current_name": "initialize_080040e0",
            "code": "\nint initialize_080040e0(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080040e0": "initialize_080040e0",
                "undefined4": "int"
            },
            "calling": [
                "FUN_080056f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040e4": {
            "entrypoint": "0x080040e4",
            "current_name": "initialize_application_080040e4",
            "code": "\nundefined4 initializeApplication_080040e4(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080040e4": "initialize_application_080040e4"
            },
            "calling": [
                "FUN_08005718"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040e8": {
            "entrypoint": "0x080040e8",
            "current_name": "initialize_program_settings_080040e8",
            "code": "\nvoid initializeProgramSettings_080040e8(void)\n\n{\n  exitStatus 0;\n}\n\n",
            "renaming": {
                "FUN_080040e8": "initialize_program_settings_080040e8",
                "undefined4": "void",
                "return": "exitStatus"
            },
            "calling": [
                "FUN_0800573c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040ec": {
            "entrypoint": "0x080040ec",
            "current_name": "execute_function_080040ec",
            "code": "\nvoid execute_function_080040ec(undefined4 input_param_1,undefined4 input_param_2,undefined4 input_param_3,undefined4 input_param_4)\n\n{\n  FUN_08003d18(input_param_2,input_param_3,input_param_3,input_param_4,input_param_4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080040ec": "execute_function_080040ec",
                "param_1": "input_param_1",
                "param_2": "input_param_2",
                "param_3": "input_param_3",
                "param_4": "input_param_4"
            },
            "calling": [
                "FUN_0800562a"
            ],
            "called": [
                "FUN_08003d18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040f8": {
            "entrypoint": "0x080040f8",
            "current_name": "infinite_loop_080040f8",
            "code": "\nvoid infiniteLoop_080040f8(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080040f8": "infinite_loop_080040f8"
            },
            "calling": [
                "FUN_080051ac",
                "FUN_080040f8"
            ],
            "called": [
                "FUN_080040f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040fc": {
            "entrypoint": "0x080040fc",
            "current_name": "initialize_data_080040fc",
            "code": "\nundefined4 initializeData_080040fc(void)\n\n{\n  DAT_20000674 = 0x16;\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080040fc": "initialize_data_080040fc"
            },
            "calling": [
                "FUN_080055d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800410c": {
            "entrypoint": "0x0800410c",
            "current_name": "check_success_0800410c",
            "code": "\nundefined4 check_success_0800410c(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800410c": "check_success_0800410c"
            },
            "calling": [
                "thunk_FUN_0800410c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004110": {
            "entrypoint": "0x08004110",
            "current_name": "process_data_08004110",
            "code": "\nvoid processData_08004110(uint inputSize,undefined4 mode,undefined4 unknown1,undefined *data)\n\n{\n  int result;\n  undefined *pointer;\n  int index;\n  \n  if (inputSize < 0x60) {\n    index = (int)*(short *)(&DAT_08005d3c + inputSize * 2);\n    pointer = &DAT_08005d3c;\n  }\n  else {\n    index = -1;\n    pointer = data;\n  }\n  if (index != -1) {\n    result = FUN_08003138(index,&DAT_200002e0,unknown1,pointer,data);\n    if (result != 0) {\n      result = FUN_0800355e(index,&DAT_08005a18);\n      if (result == 0) {\n        result = FUN_0800355e(index,&DAT_08005a3c);\n        if (result != 0) {\n          FUN_08003414(index);\n        }\n      }\n      else {\n        FUN_080033d8(index);\n      }\n      FUN_0800316c(index,&DAT_200002e0);\n    }\n    switch(mode) {\n    case 0:\n      FUN_08003486(index,0);\n      break;\n    case 1:\n      FUN_08003486(index,1,0);\n      break;\n    case 2:\n      FUN_08003486(index,0,1);\n      break;\n    case 3:\n      FUN_08003486(index,0,2);\n    }\n    FUN_0800314e(index,&DAT_2000030c);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004110": "process_data_08004110",
                "param_1": "inputSize",
                "param_2": "mode",
                "param_3": "unknown1",
                "param_4": "data",
                "iVar1": "result",
                "puVar2": "pointer",
                "iVar3": "index"
            },
            "calling": [
                "FUN_08000600"
            ],
            "called": [
                "FUN_0800314e",
                "FUN_080033d8",
                "FUN_08003138",
                "FUN_08003414",
                "FUN_0800355e",
                "FUN_08003486",
                "FUN_0800316c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080041bc": {
            "entrypoint": "0x080041bc",
            "current_name": "decode_and_update_data_080041bc",
            "code": "\nvoid decode_and_update_data_080041bc(uint index,undefined4 param2,undefined4 param3,undefined *data_ptr)\n\n{\n  int result;\n  undefined4 shifted_value;\n  undefined *decoded_data_ptr;\n  uint decoded_value;\n  \n  if (index < 0x60) {\n    decoded_value = (uint)*(short *)(&DAT_08005d3c + index * 2);\n    decoded_data_ptr = &DAT_08005d3c;\n  }\n  else {\n    decoded_value = 0xffffffff;\n    decoded_data_ptr = data_ptr;\n  }\n  if ((decoded_value != 0xffffffff) &&\n     (result = FUN_08003138(decoded_value,&DAT_2000030c,param3,decoded_data_ptr,data_ptr), result != 0)) {\n    shifted_value = FUN_0800318c((decoded_value << 0x18) >> 0x1c);\n    FUN_080034b6(shifted_value,1 << (decoded_value & 0xf) & 0xffff,param2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080041bc": "decode_and_update_data_080041bc",
                "param_1": "index",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "data_ptr",
                "uVar4": "decoded_value",
                "puVar3": "decoded_data_ptr",
                "iVar1": "result",
                "uVar2": "shifted_value"
            },
            "calling": [
                "FUN_0800076c",
                "FUN_08000600",
                "FUN_080006b4"
            ],
            "called": [
                "FUN_0800318c",
                "FUN_08003138",
                "FUN_080034b6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004204": {
            "entrypoint": "0x08004204",
            "current_name": "execute_setup_process_08004204",
            "code": "\nvoid executeSetupProcess_08004204(void)\n\n{\n  FUN_0800346c();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004204": "execute_setup_process_08004204"
            },
            "calling": [
                "FUN_0800076c",
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800346c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004240": {
            "entrypoint": "0x08004240",
            "current_name": "calculate_offset_08004240",
            "code": "\nushort calculateOffset_08004240(int baseAddress)\n\n{\n  return (*(short *)(baseAddress + 0x138) + 0x40) - *(short *)(baseAddress + 0x13a) & 0x3f;\n}\n\n",
            "renaming": {
                "FUN_08004240": "calculate_offset_08004240",
                "param_1": "baseAddress"
            },
            "calling": [
                "FUN_08004338"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080042ac": {
            "entrypoint": "0x080042ac",
            "current_name": "update_and_store_data_080042ac",
            "code": "\nvoid updateAndStoreData_080042ac(int data)\n\n{\n  int result;\n  ushort updatedValue;\n  undefined newValue;\n  \n  result = FUN_08003e18(data,&newValue);\n  if ((result == 0) &&\n     (updatedValue = *(short *)(data + 100) + 1U & 0x3f, updatedValue != *(ushort *)(data + 0x66))) {\n    *(undefined *)(*(int *)(data + 0x60) + (uint)*(ushort *)(data + 100)) = newValue;\n    *(ushort *)(data + 100) = updatedValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080042ac": "update_and_store_data_080042ac",
                "param_1": "data",
                "iVar1": "result",
                "uVar2": "updatedValue",
                "local_9": "newValue"
            },
            "calling": [],
            "called": [
                "FUN_08003e18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080042e8": {
            "entrypoint": "0x080042e8",
            "current_name": "initialize_data_080042e8",
            "code": "\nundefined4 initializeData_080042e8(int dataAddress,undefined newData)\n\n{\n  byte counter;\n  byte modifiedCounter;\n  int offset;\n  \n  *(undefined *)(dataAddress + 0x10) = 1;\n  offset = *(ushort *)(dataAddress + 0x140) + 1;\n  counter = (byte)offset;\n  modifiedCounter = counter & 0x7f;\n  if (offset == 0) {\n    modifiedCounter = -(-counter & 0x7f);\n  }\n  do {\n  } while (*(ushort *)(dataAddress + 0x142) == (ushort)modifiedCounter);\n  *(undefined *)(*(int *)(dataAddress + 0x13c) + (uint)*(ushort *)(dataAddress + 0x140)) = newData;\n  *(ushort *)(dataAddress + 0x140) = (ushort)modifiedCounter;\n  offset = FUN_08003df4(dataAddress + 0xd4);\n  if (offset == 0) {\n    FUN_08003eac(dataAddress + 0xd4,invalidDataLabel);\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080042e8": "initialize_data_080042e8",
                "param_1": "dataAddress",
                "param_2": "newData",
                "bVar1": "counter",
                "bVar2": "modifiedCounter",
                "iVar3": "offset",
                "&LAB_0800420c_1": "invalidDataLabel"
            },
            "calling": [],
            "called": [
                "FUN_08003eac",
                "FUN_08003df4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004338": {
            "entrypoint": "0x08004338",
            "current_name": "FUNC_08004338",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800433e) */\n/* WARNING: Removing unreachable block (ram,0x08004350) */\n/* WARNING: Removing unreachable block (ram,0x08004346) */\n/* WARNING: Removing unreachable block (ram,0x08004358) */\n\nvoid FUNC_08004338(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004338": "FUNC_08004338"
            },
            "calling": [
                "FUN_08004658"
            ],
            "called": [
                "FUN_08004240"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004364": {
            "entrypoint": "0x08004364",
            "current_name": "initialize_parameters_08004364",
            "code": "\nvoid initializeParameters_08004364(int param)\n\n{\n  *(int *)(param + 0x134) = param + 0x11;\n  *(undefined2 *)(param + 0x138) = 0;\n  *(undefined2 *)(param + 0x13a) = 0;\n  *(int *)(param + 0x13c) = param + 0x51;\n  *(undefined2 *)(param + 0x140) = 0;\n  *(undefined2 *)(param + 0x142) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004364": "initialize_parameters_08004364",
                "param_1": "param"
            },
            "calling": [
                "FUN_0800447c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004388": {
            "entrypoint": "0x08004388",
            "current_name": "configure_serial_port_08004388",
            "code": "\nvoid configureSerialPort_08004388(int serialPortAddress,undefined4 baudRate,byte byteConfig)\n\n{\n  uint errorCode;\n  byte configParam;\n  int configValue;\n  code *jumpTablePtr;\n  \n  *(undefined4 *)(serialPortAddress + 0x11c) = baudRate;\n  *(byte *)(serialPortAddress + 0x144) = byteConfig;\n  configParam = byteConfig & 7;\n  if (configParam == 4) {\n    configValue = 7;\n  }\n  else if (configParam == 6) {\n    configValue = 8;\n  }\n  else if (configParam == 2) {\n    configValue = 6;\n  }\n  else {\n    configValue = 0;\n  }\n  if ((byteConfig & 0x30) == 0x30) {\n    *(undefined4 *)(serialPortAddress + 0x128) = 0x600;\n    configValue = configValue + 1;\n  }\n  else if ((byteConfig & 0x20) == 0) {\n    *(undefined4 *)(serialPortAddress + 0x128) = 0;\n  }\n  else {\n    *(undefined4 *)(serialPortAddress + 0x128) = 0x400;\n    configValue = configValue + 1;\n  }\n  if ((byteConfig & 8) == 0) {\n    *(undefined4 *)(serialPortAddress + 0x124) = 0;\n  }\n  else {\n    *(undefined4 *)(serialPortAddress + 0x124) = 0x2000;\n  }\n  if (configValue == 8) {\n    *(undefined4 *)(serialPortAddress + 0x120) = 0;\n  }\n  else if (configValue == 9) {\n    *(undefined4 *)(serialPortAddress + 0x120) = 0x1000;\n  }\n  else {\n    configValue = 0;\n  }\n  if (configValue != 0) {\n    FUN_08003978(serialPortAddress + 0xd4);\n    FUN_08003e54(serialPortAddress + 0xd4,0x80042ad);\n    return;\n  }\n  jumpTablePtr = (code *)0x8004432;\n  FUN_08004808(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/cores/arduino/HardwareSerial.cpp\"\n               ,299,\"void HardwareSerial::begin(long unsigned int, byte)\");\n  if (errorCode < 0x60) {\n    uRam0000012e = *(undefined2 *)(&DAT_08005d3c + errorCode * 2);\n  }\n  else {\n    uRam0000012e = 0xffff;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08004452. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTablePtr)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004388": "configure_serial_port_08004388",
                "param_1": "serialPortAddress",
                "param_2": "baudRate",
                "param_3": "byteConfig",
                "extraout_r1": "errorCode",
                "bVar1": "configParam",
                "iVar2": "configValue",
                "UNRECOVERED_JUMPTABLE": "jumpTablePtr"
            },
            "calling": [
                "FUN_08000600"
            ],
            "called": [
                "FUN_08004808",
                "FUN_08003e54",
                "FUN_08003978"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004444": {
            "entrypoint": "0x08004444",
            "current_name": "update_value_08004444",
            "code": "\nvoid updateValue_08004444(int address,uint value)\n\n{\n  undefined2 newValue;\n  code *jumpTable;\n  \n  if (value < 0x60) {\n    newValue = *(undefined2 *)(&DAT_08005d3c + value * 2);\n  }\n  else {\n    newValue = 0xffff;\n  }\n  *(undefined2 *)(address + 0x12e) = newValue;\n                    /* WARNING: Could not recover jumptable at 0x08004452. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004444": "update_value_08004444",
                "param_1": "address",
                "param_2": "value",
                "uVar1": "newValue",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_0800447c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004460": {
            "entrypoint": "0x08004460",
            "current_name": "assign_value_to_memory_08004460",
            "code": "\nvoid assignValueToMemory_08004460(int memoryAddress,uint offset)\n\n{\n  undefined2 value;\n  \n  if (offset < 0x60) {\n    value = *(undefined2 *)(&DAT_08005d3c + offset * 2);\n  }\n  else {\n    value = 0xffff;\n  }\n  *(undefined2 *)(memoryAddress + 300) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004460": "assign_value_to_memory_08004460",
                "param_1": "memoryAddress",
                "param_2": "offset",
                "uVar1": "value"
            },
            "calling": [
                "FUN_0800447c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800447c": {
            "entrypoint": "0x0800447c",
            "current_name": "initialize_parameters_0800447c",
            "code": "\nundefined4 *\ninitializeParameters_0800447c(undefined4 *parametersArray,undefined4 inputValue,undefined4 unusedValue,undefined4 anotherValue)\n\n{\n  undefined2 returnValue;\n  \n  parametersArray[1] = 0;\n  parametersArray[2] = 1000;\n  *parametersArray = &PTR_FUN_080042e8_1_08005ed4;\n  if (parametersArray == &DAT_20000338) {\n    FUN_08004444(&DAT_20000338,0x4c,unusedValue,&DAT_20000338,anotherValue);\n    FUN_08004460(&DAT_20000338,0x4d);\n  }\n  else {\n    returnValue = FUN_0800351e(inputValue,&DAT_08005c10);\n    *(undefined2 *)((int)parametersArray + 0x12e) = returnValue;\n    returnValue = FUN_0800351e(inputValue,&DAT_08005ca0);\n    *(undefined2 *)(parametersArray + 0x4b) = returnValue;\n  }\n  FUN_08004364(parametersArray);\n  return parametersArray;\n}\n\n",
            "renaming": {
                "FUN_0800447c": "initialize_parameters_0800447c",
                "param_1": "parametersArray",
                "param_2": "inputValue",
                "param_3": "unusedValue",
                "param_4": "anotherValue",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_080044d8"
            ],
            "called": [
                "FUN_08004444",
                "FUN_08004364",
                "FUN_0800351e",
                "FUN_08004460"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080044d8": {
            "entrypoint": "0x080044d8",
            "current_name": "check_param_080044d8",
            "code": "\nvoid check_param_080044d8(int param1,int param2,undefined4 param3,undefined4 param4)\n\n{\n  if (param1 != 1) {\n    return;\n  }\n  if (param2 == 0xffff) {\n    FUN_0800447c(&DAT_20000338,0x40004800,param3,0xffff,param4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080044d8": "check_param_080044d8",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [],
            "called": [
                "FUN_0800447c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004544": {
            "entrypoint": "0x08004544",
            "current_name": "initialize_memory_08004544",
            "code": "\nvoid initializeMemory_08004544(undefined4 *memoryPointer,undefined value1,undefined value2,undefined value3,\n                 undefined value4)\n\n{\n  *memoryPointer = &DAT_08005f28;\n  *(undefined *)(memoryPointer + 1) = value1;\n  *(undefined *)((int)memoryPointer + 5) = value2;\n  *(undefined *)((int)memoryPointer + 6) = value3;\n  *(undefined *)((int)memoryPointer + 7) = value4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004544": "initialize_memory_08004544",
                "param_1": "memoryPointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "value4"
            },
            "calling": [
                "FUN_08004560"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004560": {
            "entrypoint": "0x08004560",
            "current_name": "check_parameters_08004560",
            "code": "\nvoid check_parameters_08004560(int value_1,int value_2)\n\n{\n  if ((value_1 == 1) && (value_2 == 0xffff)) {\n    FUN_08004544(&DAT_20000480,0,0,0,0);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004560": "check_parameters_08004560",
                "param_1": "value_1",
                "param_2": "value_2"
            },
            "calling": [],
            "called": [
                "FUN_08004544"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004640": {
            "entrypoint": "0x08004640",
            "current_name": "combine_values_08004640",
            "code": "\nuint combineValues_08004640(int value1,uint value2)\n\n{\n  return value2 | value1 << 8;\n}\n\n",
            "renaming": {
                "FUN_08004640": "combine_values_08004640",
                "param_1": "value1",
                "param_2": "value2"
            },
            "calling": [
                "FUN_08000a4e",
                "FUN_080008e2",
                "FUN_08000b04",
                "FUN_08000998",
                "FUN_080007f0",
                "FUN_08000a7a",
                "FUN_08000a00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004646": {
            "entrypoint": "0x08004646",
            "current_name": "FUNC_08004646",
            "code": "\nvoid FUNC_08004646(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004646": "FUNC_08004646"
            },
            "calling": [
                "FUN_08004658"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004648": {
            "entrypoint": "0x08004648",
            "current_name": "initialize_system_08004648",
            "code": "\nvoid initializeSystem_08004648(void)\n\n{\n  FUN_08000e3c(3);\n  FUN_08000d8e();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004648": "initialize_system_08004648"
            },
            "calling": [
                "FUN_08004884"
            ],
            "called": [
                "FUN_08000e3c",
                "FUN_08000d8e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004658": {
            "entrypoint": "0x08004658",
            "current_name": "execute_functions_08004658",
            "code": "\nvoid execute_functions_08004658(void)\n\n{\n  FUNC_08004646();\n  FUN_08000c4c();\n  do {\n    FUN_08000c64();\n    FUNC_08004338();\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08004658": "execute_functions_08004658"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_08004338",
                "FUN_08000c64",
                "FUN_08000c4c",
                "FUN_08004646"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004678": {
            "entrypoint": "0x08004678",
            "current_name": "count_set_bits_08004678",
            "code": "\nchar countSetBits_08004678(uint input)\n\n{\n  char bitCount;\n  \n  bitCount = '\\0';\n  for (; input != 1; input = input >> 1) {\n    bitCount = bitCount + '\\x01';\n  }\n  return bitCount;\n}\n\n",
            "renaming": {
                "FUN_08004678": "count_set_bits_08004678",
                "param_1": "input",
                "cVar1": "bitCount"
            },
            "calling": [
                "FUN_080047d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080046b4": {
            "entrypoint": "0x080046b4",
            "current_name": "initialize_data_080046b4",
            "code": "\nvoid initializeData_080046b4(int flag,int value,undefined4 param3,undefined4 param4)\n\n{\n  if (flag != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    DAT_20000488 = 6;\n    DAT_20000494 = 0;\n    DAT_2000049c = 7;\n    DAT_200004a8 = 0;\n    DAT_200004b0 = 8;\n    DAT_200004bc = 0;\n    DAT_200004c4 = 9;\n    DAT_200004d0 = 0;\n    DAT_200004d8 = 10;\n    DAT_200004e4 = 0;\n    DAT_200004ec = 0x17;\n    DAT_200004f8 = 0;\n    DAT_20000500 = 0x17;\n    DAT_2000050c = 0;\n    DAT_20000514 = 0x17;\n    DAT_20000520 = 0;\n    DAT_20000528 = 0x17;\n    DAT_20000534 = 0;\n    DAT_2000053c = 0x17;\n    DAT_20000548 = 0;\n    DAT_20000550 = 0x28;\n    DAT_2000055c = 0;\n    DAT_20000564 = 0x28;\n    DAT_20000570 = 0;\n    DAT_20000578 = 0x28;\n    DAT_20000584 = 0;\n    DAT_2000058c = 0x28;\n    DAT_20000598 = 0;\n    DAT_200005a0 = 0x28;\n    DAT_200005ac = 0;\n    DAT_200005b4 = 0x28;\n    DAT_200005c0 = 0;\n    FUN_080047fe(0,&LAB_0800468c_1,&DAT_20000000,&DAT_20000488,param4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080046b4": "initialize_data_080046b4",
                "param_1": "flag",
                "param_2": "value",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [],
            "called": [
                "FUN_080047fe"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047c0": {
            "entrypoint": "0x080047c0",
            "current_name": "execute_function_080047c0",
            "code": "\nvoid executeFunction_080047c0(int arg1)\n\n{\n  int index;\n  \n  if (*(int *)(arg1 + 8) != 0) {\n    (**(code **)(arg1 + 0xc))();\n    return;\n  }\n  FUN_08005760();\n  index = FUN_08004678();\n  if ((&DAT_20000494)[index * 5] != 0) {\n    executeFunction_080047c0();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080047c0": "execute_function_080047c0",
                "param_1": "arg1",
                "iVar1": "index"
            },
            "calling": [
                "FUN_080047d0"
            ],
            "called": [
                "FUN_08005760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047d0": {
            "entrypoint": "0x080047d0",
            "current_name": "check_if_data_valid_080047d0",
            "code": "\nvoid checkIfDataValid_080047d0(void)\n\n{\n  int index;\n  \n  index = FUN_08004678();\n  if ((&DAT_20000494)[index * 5] != 0) {\n    FUN_080047c0();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080047d0": "check_if_data_valid_080047d0",
                "iVar1": "index"
            },
            "calling": [
                "FUN_080011a4"
            ],
            "called": [
                "FUN_08004678",
                "FUN_080047c0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047fe": {
            "entrypoint": "0x080047fe",
            "current_name": "copy_params_080047fe",
            "code": "\nvoid copyParams_080047fe(undefined4 destination,undefined4 source)\n\n{\n  FUN_08004844(source,destination);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080047fe": "copy_params_080047fe",
                "param_1": "destination",
                "param_2": "source"
            },
            "calling": [
                "FUN_080046b4"
            ],
            "called": [
                "FUN_08004844"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004808": {
            "entrypoint": "0x08004808",
            "current_name": "assertion_failed_08004808",
            "code": "\nvoid assertionFailed_08004808(undefined4 file,undefined4 line,char *assertionMessage,undefined4 function)\n\n{\n  undefined4 filePtr;\n  char *additionalMessage;\n  undefined8 result;\n  undefined4 functionPtr;\n  \n  filePtr = *(undefined4 *)(DAT_200000a0 + 0xc);\n  functionPtr = function;\n  if (assertionMessage == (char *)0x0) goto LAB_0800482c;\n  additionalMessage = \", function: \";\n  do {\n    FUN_08004860(filePtr,\"assertion \\\"%s\\\" failed: file \\\"%s\\\", line %d%s%s\\n\",function,file,line\n                 ,additionalMessage,assertionMessage,functionPtr);\n    result = FUN_080051ac();\n    line = (undefined4)((ulonglong)result >> 0x20);\n    filePtr = (undefined4)result;\nLAB_0800482c:\n    assertionMessage = \"\";\n    additionalMessage = assertionMessage;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08004808": "assertion_failed_08004808",
                "param_1": "file",
                "param_2": "line",
                "param_3": "assertionMessage",
                "param_4": "function",
                "uVar1": "filePtr",
                "pcVar2": "additionalMessage",
                "uVar3": "result",
                "uVar4": "functionPtr"
            },
            "calling": [
                "FUN_08004388"
            ],
            "called": [
                "FUN_080051ac",
                "FUN_08004860"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004844": {
            "entrypoint": "0x08004844",
            "current_name": "left_shift_param_08004844",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800484c) */\n\nlonglong leftShiftParam_08004844(undefined4 paramOne,uint paramTwo)\n\n{\n  return (ulonglong)paramTwo << 0x20;\n}\n\n",
            "renaming": {
                "FUN_08004844": "left_shift_param_08004844",
                "param_1": "paramOne",
                "param_2": "paramTwo"
            },
            "calling": [
                "FUN_080047fe"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004860": {
            "entrypoint": "0x08004860",
            "current_name": "initialize_data_08004860",
            "code": "\nvoid initializeData_08004860(undefined4 value1,undefined4 value2,undefined4 data1,undefined4 data2)\n\n{\n  undefined4 localData1;\n  undefined4 localData2;\n  \n  localData1 = data1;\n  localData2 = data2;\n  FUN_08004a84(DAT_200000a0,value1,value2,&localData1,value1,&localData1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004860": "initialize_data_08004860",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "data1",
                "param_4": "data2",
                "uStack_8": "localData1",
                "uStack_4": "localData2"
            },
            "calling": [
                "FUN_08004808"
            ],
            "called": [
                "FUN_08004a84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004884": {
            "entrypoint": "0x08004884",
            "current_name": "execute_functions_08004884",
            "code": "\nvoid executeFunctions_08004884(void)\n\n{\n  int index;\n  \n  for (index = 0; index != 0; index = index + 1) {\n    (*(code *)(&DAT_08006008)[index])();\n  }\n  FUNC_080059f8();\n  for (index = 0; index != 10; index = index + 1) {\n    (*(code *)(&DAT_08006008)[index])();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004884": "execute_functions_08004884",
                "iVar1": "index"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_08004648",
                "FUN_080059f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080048cc": {
            "entrypoint": "0x080048cc",
            "current_name": "memset_080048cc",
            "code": "\nvoid memset_080048cc(undefined *destination,undefined value,int num_bytes)\n\n{\n  undefined *destination_end;\n  \n  destination_end = destination + num_bytes;\n  for (; destination != destination_end; destination = destination + 1) {\n    *destination = value;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080048cc": "memset_080048cc",
                "param_1": "destination",
                "param_2": "value",
                "param_3": "num_bytes",
                "puVar1": "destination_end"
            },
            "calling": [
                "FUN_08005400",
                "FUN_08005374",
                "FUN_0800532c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080048dc": {
            "entrypoint": "0x080048dc",
            "current_name": "update_linked_list_080048dc",
            "code": "\nvoid updateLinkedList_080048dc(undefined4 *list,int size,undefined4 param_3,undefined4 param_4)\n\n{\n  int *temp;\n  int **extra;\n  int **currentNode;\n  int **nextNode;\n  int **prevNode;\n  int **nodeToAdd;\n  bool isLastNode;\n  \n  if (size == 0) {\n    return;\n  }\n  nodeToAdd = (int **)(size + -4);\n  if (*(int *)(size + -4) < 0) {\n    nodeToAdd = (int **)((int)nodeToAdd + *(int *)(size + -4));\n  }\n  FUNC_0800557c();\n  nextNode = (int **)&DAT_200005c8;\n  if (DAT_200005c8 == (int **)0x0) {\n    nodeToAdd[1] = (int *)0x0;\n    currentNode = extra;\n    DAT_200005c8 = nodeToAdd;\n  }\n  else {\n    nextNode = DAT_200005c8;\n    if (nodeToAdd < DAT_200005c8) {\n      currentNode = (int **)*nodeToAdd;\n      nextNode = (int **)((int)nodeToAdd + (int)currentNode);\n      isLastNode = DAT_200005c8 == nextNode;\n      if (isLastNode) {\n        nextNode = (int **)*DAT_200005c8;\n        DAT_200005c8 = (int **)DAT_200005c8[1];\n      }\n      nodeToAdd[1] = (int *)DAT_200005c8;\n      DAT_200005c8 = nodeToAdd;\n      if (isLastNode) {\n        nextNode = (int **)((int)nextNode + (int)currentNode);\n        *nodeToAdd = (int *)nextNode;\n      }\n    }\n    else {\n      do {\n        prevNode = nextNode;\n        nextNode = (int **)prevNode[1];\n        if (nextNode == (int **)0x0) break;\n      } while (nextNode <= nodeToAdd);\n      currentNode = (int **)*prevNode;\n      if ((int **)((int)prevNode + (int)currentNode) == nodeToAdd) {\n        currentNode = (int **)((int)currentNode + (int)*nodeToAdd);\n        *prevNode = (int *)currentNode;\n        if (nextNode == (int **)((int)prevNode + (int)currentNode)) {\n          temp = *nextNode;\n          nextNode = (int **)nextNode[1];\n          prevNode[1] = (int *)nextNode;\n          currentNode = (int **)((int)currentNode + (int)temp);\n          *prevNode = (int *)currentNode;\n        }\n      }\n      else if (nodeToAdd < (int **)((int)prevNode + (int)currentNode)) {\n        *list = 0xc;\n      }\n      else {\n        currentNode = (int **)((int)nodeToAdd + (int)*nodeToAdd);\n        isLastNode = nextNode == currentNode;\n        if (isLastNode) {\n          currentNode = (int **)*nextNode;\n          nextNode = (int **)nextNode[1];\n        }\n        nodeToAdd[1] = (int *)nextNode;\n        if (isLastNode) {\n          currentNode = (int **)((int)currentNode + (int)*nodeToAdd);\n          *nodeToAdd = (int *)currentNode;\n        }\n        prevNode[1] = (int *)nodeToAdd;\n      }\n    }\n  }\n  FUNC_0800557e(list,currentNode,nextNode,param_4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080048dc": "update_linked_list_080048dc",
                "param_1": "list",
                "param_2": "size",
                "piVar1": "temp",
                "extraout_r1": "extra",
                "ppiVar2": "currentNode",
                "ppiVar3": "nextNode",
                "ppiVar4": "prevNode",
                "ppiVar5": "nodeToAdd",
                "bVar6": "isLastNode"
            },
            "calling": [
                "FUN_080050d0",
                "FUN_080051ac"
            ],
            "called": [
                "FUN_0800557c",
                "FUN_0800557e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004978": {
            "entrypoint": "0x08004978",
            "current_name": "allocate_memory_block_08004978",
            "code": "\nuint allocate_memory_block_08004978(undefined4 *result,uint size)\n\n{\n  uint *current_block;\n  int difference;\n  uint *next_block;\n  uint block_size_diff;\n  uint *previous_block;\n  uint aligned_size;\n  \n  aligned_size = (size + 3 & 0xfffffffc) + 8;\n  if (aligned_size < 0xc) {\n    aligned_size = 0xc;\n  }\n  if (((int)aligned_size < 0) || (aligned_size < size)) {\n    *result = 0xc;\n  }\n  else {\n    FUNC_0800557c();\n    current_block = DAT_200005c8;\n    previous_block = DAT_200005c8;\n    while (next_block = current_block, next_block != (uint *)0x0) {\n      block_size_diff = *next_block - aligned_size;\n      if (-1 < (int)block_size_diff) {\n        if (block_size_diff < 0xc) {\n          if (previous_block == next_block) {\n            current_block = (uint *)previous_block[1];\n          }\n          else {\n            current_block = (uint *)next_block[1];\n          }\n          if (previous_block != next_block) {\n            previous_block[1] = (uint)current_block;\n            previous_block = next_block;\n            current_block = DAT_200005c8;\n          }\n        }\n        else {\n          *next_block = block_size_diff;\n          *(uint *)((int)next_block + block_size_diff) = aligned_size;\n          previous_block = (uint *)((int)next_block + block_size_diff);\n          current_block = DAT_200005c8;\n        }\n        goto LAB_080049dc;\n      }\n      previous_block = next_block;\n      current_block = (uint *)next_block[1];\n    }\n    if (DAT_200005cc == 0) {\n      DAT_200005cc = FUN_0800500c(result);\n    }\n    current_block = (uint *)FUN_0800500c(result,aligned_size);\n    if ((current_block != (uint *)0xffffffff) &&\n       ((previous_block = (uint *)((int)current_block + 3U & 0xfffffffc), current_block == previous_block ||\n        (difference = FUN_0800500c(result,(int)previous_block - (int)current_block), difference != -1)))) {\n      *previous_block = aligned_size;\n      current_block = DAT_200005c8;\nLAB_080049dc:\n      DAT_200005c8 = current_block;\n      FUNC_0800557e(result);\n      aligned_size = (int)previous_block + 0xbU & 0xfffffff8;\n      difference = aligned_size - (int)(previous_block + 1);\n      if (difference != 0) {\n        *(int *)((int)previous_block + difference) = -difference;\n        return aligned_size;\n      }\n      return aligned_size;\n    }\n    *result = 0xc;\n    FUNC_0800557e(result);\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004978": "allocate_memory_block_08004978",
                "param_1": "result",
                "param_2": "size",
                "puVar1": "current_block",
                "iVar2": "difference",
                "puVar3": "next_block",
                "uVar4": "block_size_diff",
                "puVar5": "previous_block",
                "uVar6": "aligned_size"
            },
            "calling": [
                "FUN_080054fc",
                "FUN_08005374"
            ],
            "called": [
                "FUN_0800557c",
                "FUN_0800557e",
                "FUN_0800500c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a34": {
            "entrypoint": "0x08004a34",
            "current_name": "process_input_08004a34",
            "code": "\nuint process_input_08004a34(int arg1,byte arg2,byte **arg3)\n\n{\n  int index;\n  byte *bytePtr1;\n  byte *bytePtr2;\n  uint returnValue;\n  \n  bytePtr1 = arg3[2] + -1;\n  arg3[2] = bytePtr1;\n  if ((-1 < (int)bytePtr1) ||\n     (((int)arg3[6] <= (int)bytePtr1 && (bytePtr1 = (byte *)(uint)arg2, bytePtr1 != (byte *)0xa))))\n  {\n    bytePtr1 = *arg3;\n    *arg3 = bytePtr1 + 1;\n    *bytePtr1 = arg2;\n    return (uint)arg2;\n  }\n  if ((arg1 != 0) && (*(int *)(arg1 + 0x18) == 0)) {\n    FUN_080053a0();\n  }\n  if (arg3 == (byte **)&DAT_08005fc0) {\n    arg3 = *(byte ***)(arg1 + 4);\n  }\n  else if (arg3 == (byte **)&DAT_08005fe0) {\n    arg3 = *(byte ***)(arg1 + 8);\n  }\n  else if (arg3 == (byte **)&DAT_08005fa0) {\n    arg3 = *(byte ***)(arg1 + 0xc);\n  }\n  arg3[2] = arg3[6];\n  bytePtr2 = (byte *)(uint)*(ushort *)(arg3 + 3);\n  index = (int)bytePtr2 << 0x1c;\n  if (((index < 0) && (bytePtr2 = arg3[4], bytePtr2 != (byte *)0x0)) ||\n     (index = FUN_080050d0(arg1,arg3,index,bytePtr2,bytePtr1), index == 0)) {\n    index = (int)*arg3 - (int)arg3[4];\n    returnValue = (uint)arg2;\n    if ((index < (int)arg3[5]) || (index = FUN_080052cc(arg1,arg3), index == 0)) {\n      arg3[2] = arg3[2] + -1;\n      bytePtr1 = *arg3;\n      *arg3 = bytePtr1 + 1;\n      *bytePtr1 = arg2;\n      if ((byte *)(index + 1) != arg3[5]) {\n        if (-1 < (int)((uint)*(ushort *)(arg3 + 3) << 0x1f)) {\n          return returnValue;\n        }\n        if (returnValue != 10) {\n          return returnValue;\n        }\n      }\n      index = FUN_080052cc(arg1,arg3);\n      if (index == 0) {\n        return returnValue;\n      }\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08004a34": "process_input_08004a34",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "iVar1": "index",
                "pbVar2": "bytePtr1",
                "pbVar3": "bytePtr2",
                "uVar4": "returnValue"
            },
            "calling": [
                "FUN_08004a60"
            ],
            "called": [
                "FUN_080050d0",
                "FUN_080052cc",
                "FUN_080053a0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a60": {
            "entrypoint": "0x08004a60",
            "current_name": "process_data_08004a60",
            "code": "\nint process_data_08004a60(undefined4 input_param,undefined4 output_param,undefined *data_ptr,int data_size)\n\n{\n  int result;\n  undefined *end_of_data_ptr;\n  int current_index;\n  \n  end_of_data_ptr = data_ptr + data_size;\n  current_index = data_size;\n  do {\n    if (data_ptr == end_of_data_ptr) {\n      return 0;\n    }\n    result = FUN_08004a34(input_param,*data_ptr,output_param,data_size,current_index);\n    data_size = result + 1;\n    data_ptr = data_ptr + 1;\n  } while (data_size != 0);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08004a60": "process_data_08004a60",
                "param_1": "input_param",
                "param_2": "output_param",
                "param_3": "data_ptr",
                "param_4": "data_size",
                "iVar1": "result",
                "puVar2": "end_of_data_ptr",
                "iVar3": "current_index"
            },
            "calling": [
                "FUN_08004a84"
            ],
            "called": [
                "FUN_08004a34"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a84": {
            "entrypoint": "0x08004a84",
            "current_name": "process_data_08004a84",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08004c58) */\n\nint processData_08004a84(int input,undefined4 *header_data,byte *string_data,int *output)\n\n{\n  int result;\n  int *pointer;\n  bool isNumeric;\n  byte *curr_position;\n  byte *next_position;\n  int return_value;\n  int temp;\n  int *output_ptr;\n  uint format_flags;\n  int precision;\n  undefined4 padding;\n  int width;\n  int total_bytes;\n  byte conversion_specifier;\n  undefined SPACE;\n  undefined PLUS;\n  undefined HASH;\n  undefined4 ZERO;\n  \n  output_ptr = output;\n  if ((input != 0) && (*(int *)(input + 0x18) == 0)) {\n    FUN_080053a0();\n  }\n  if (header_data == &DAT_08005fc0) {\n    header_data = *(undefined4 **)(input + 4);\n  }\n  else if (header_data == (undefined4 *)&DAT_08005fe0) {\n    header_data = *(undefined4 **)(input + 8);\n  }\n  else if (header_data == (undefined4 *)&DAT_08005fa0) {\n    header_data = *(undefined4 **)(input + 0xc);\n  }\n  if (((-1 < (int)((uint)*(ushort *)(header_data + 3) << 0x1c)) || (header_data[4] == 0)) &&\n     (temp = FUN_080050d0(input,header_data), temp != 0)) {\n    return -1;\n  }\n  total_bytes = 0;\n  SPACE = 0x20;\n  PLUS = 0x30;\n  curr_position = string_data;\nLAB_08004ac6:\n  next_position = curr_position;\n  if (*next_position != 0) goto LAB_08004b7c;\n  goto LAB_08004ad0;\nLAB_08004b7c:\n  curr_position = next_position + 1;\n  if (*next_position != 0x25) goto LAB_08004ac6;\nLAB_08004ad0:\n  temp = (int)next_position - (int)string_data;\n  if (temp != 0) {\n    result = FUN_08004a60(input,header_data,string_data,temp);\n    if (result == -1) {\nLAB_08004c70:\n      if ((int)((uint)*(ushort *)(header_data + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return total_bytes;\n    }\n    total_bytes = total_bytes + temp;\n  }\n  if (*next_position == 0) goto LAB_08004c70;\n  format_flags = 0;\n  width = 0;\n  precision = -1;\n  padding = 0;\n  HASH = 0;\n  ZERO = 0;\n  curr_position = next_position + 1;\n  while( true ) {\n    temp = FUN_08000230(\"#-0+ \",*curr_position);\n    string_data = curr_position + 1;\n    if (temp == 0) break;\n    format_flags = 1 << (temp + 0xf7ffa094U & 0xff) | format_flags;\n    curr_position = string_data;\n  }\n  if ((int)(format_flags << 0x1b) < 0) {\n    HASH = 0x20;\n  }\n  if ((int)(format_flags << 0x1c) < 0) {\n    HASH = 0x2b;\n  }\n  if (*curr_position == 0x2a) {\n    pointer = output_ptr + 1;\n    temp = *output_ptr;\n    output_ptr = pointer;\n    if (temp < 0) {\n      width = -temp;\n      format_flags = format_flags | 2;\n      goto LAB_08004bae;\n    }\n  }\n  else {\n    isNumeric = false;\n    temp = width;\n    string_data = curr_position;\n    while( true ) {\n      if (9 < *string_data - 0x30) break;\n      temp = temp * 10 + (*string_data - 0x30);\n      isNumeric = true;\n      string_data = string_data + 1;\n    }\n    if (!isNumeric) goto LAB_08004bae;\n  }\n  width = temp;\nLAB_08004bae:\n  if (*string_data == 0x2e) {\n    if (string_data[1] == 0x2a) {\n      precision = *output_ptr;\n      if (precision < 0) {\n        precision = -1;\n      }\n      string_data = string_data + 2;\n      output_ptr = output_ptr + 1;\n    }\n    else {\n      isNumeric = false;\n      precision = 0;\n      temp = 0;\n      while( true ) {\n        string_data = string_data + 1;\n        if (9 < *string_data - 0x30) break;\n        temp = temp * 10 + (*string_data - 0x30);\n        isNumeric = true;\n      }\n      if (isNumeric) {\n        precision = temp;\n      }\n    }\n  }\n  temp = FUN_08000230(&DAT_08005f72,*string_data,3);\n  if (temp != 0) {\n    format_flags = format_flags | 0x40 << (temp + 0xf7ffa08eU & 0xff);\n    string_data = string_data + 1;\n  }\n  conversion_specifier = *string_data;\n  string_data = string_data + 1;\n  temp = FUN_08000230(\"efgEFG\",conversion_specifier,6);\n  if (temp == 0) {\n    return_value = FUN_08004d9c(input,&format_flags,header_data,0x8004a61,&output_ptr);\n    if (return_value == -1) goto LAB_08004c70;\n  }\n  else {\n    output_ptr = (int *)(((int)output_ptr + 7U & 0xfffffff8) + 8);\n  }\n  total_bytes = total_bytes + return_value;\n  curr_position = string_data;\n  goto LAB_08004ac6;\n}\n\n",
            "renaming": {
                "FUN_08004a84": "process_data_08004a84",
                "param_1": "input",
                "param_2": "header_data",
                "param_3": "string_data",
                "param_4": "output",
                "iVar1": "result",
                "piVar2": "pointer",
                "bVar3": "isNumeric",
                "pbVar4": "curr_position",
                "pbVar5": "next_position",
                "unaff_r9": "return_value",
                "iVar6": "temp",
                "local_8c": "output_ptr",
                "local_88": "format_flags",
                "local_84": "precision",
                "local_80": "padding",
                "local_7c": "width",
                "local_74": "total_bytes",
                "local_70": "conversion_specifier",
                "local_6f": "SPACE",
                "local_6e": "PLUS",
                "local_45": "HASH",
                "local_30": "ZERO"
            },
            "calling": [
                "FUN_08004860",
                "FUN_08004fdc"
            ],
            "called": [
                "FUN_080050d0",
                "FUN_08004a60",
                "FUN_08000230",
                "FUN_080053a0",
                "FUN_08004d9c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004cb0": {
            "entrypoint": "0x08004cb0",
            "current_name": "process_binary_data_08004cb0",
            "code": "\nundefined4\nprocessBinaryData_08004cb0(undefined4 input,uint *data,uint *output,undefined4 extra,code *callbackFunction)\n\n{\n  int index;\n  int result;\n  uint maxValue;\n  uint counter;\n  bool isNonZero;\n  \n  maxValue = data[4];\n  if ((int)data[4] < (int)data[2]) {\n    maxValue = data[2];\n  }\n  *output = maxValue;\n  if (*(char *)((int)data + 0x43) != '\\0') {\n    *output = maxValue + 1;\n  }\n  if ((int)(*data << 0x1a) < 0) {\n    *output = *output + 2;\n  }\n  if ((*data & 6) == 0) {\n    for (index = 0; index < (int)(data[3] - *output); index = index + 1) {\n      result = (*callbackFunction)(input,extra,(int)data + 0x19,1);\n      if (result == -1) {\n        return 0xffffffff;\n      }\n    }\n  }\n  maxValue = (uint)*(byte *)((int)data + 0x43);\n  if (maxValue != 0) {\n    maxValue = 1;\n  }\n  if ((int)(*data << 0x1a) < 0) {\n    *(undefined *)((int)data + maxValue + 0x43) = 0x30;\n    *(undefined *)((int)data + maxValue + 0x44) = *(undefined *)((int)data + 0x45);\n    maxValue = maxValue + 2;\n  }\n  index = (*callbackFunction)(input,extra,(int)data + 0x43,maxValue);\n  if (index != -1) {\n    maxValue = data[3];\n    isNonZero = (*data & 6) == 4;\n    if (isNonZero) {\n      maxValue = maxValue - *output;\n    }\n    if (isNonZero) {\n      maxValue = maxValue & ~((int)maxValue >> 0x1f);\n    }\n    else {\n      maxValue = 0;\n    }\n    if ((int)data[4] < (int)data[2]) {\n      maxValue = maxValue + (data[2] - data[4]);\n    }\n    counter = 0;\n    while( true ) {\n      if (maxValue == counter) {\n        return 0;\n      }\n      index = (*callbackFunction)(input,extra,(int)data + 0x1a,1);\n      if (index == -1) break;\n      counter = counter + 1;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08004cb0": "process_binary_data_08004cb0",
                "param_1": "input",
                "param_2": "data",
                "param_3": "output",
                "param_4": "extra",
                "param_5": "callbackFunction",
                "iVar1": "index",
                "iVar2": "result",
                "uVar3": "maxValue",
                "uVar4": "counter",
                "bVar5": "isNonZero"
            },
            "calling": [
                "FUN_08004d9c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d9c": {
            "entrypoint": "0x08004d9c",
            "current_name": "convert_data_08004d9c",
            "code": "\nuint convertData_08004d9c(undefined4 input,uint *data,undefined4 param,code *callback,uint **output)\n\n{\n  byte byteVal;\n  int result;\n  uint *tempPtr;\n  int innerResult;\n  char *conversionTable;\n  uint tempVal;\n  uint **ppuVar7;\n  char **ppcVar8;\n  uint value;\n  uint tempVar;\n  char *tempPtr2;\n  char *tempPtr3;\n  uint localVar [2];\n  \n  byteVal = *(byte *)(data + 6);\n  tempPtr3 = (char *)((int)data + 0x43);\n  if (byteVal != 0x6e) {\n    if (byteVal < 0x6f) {\n      if (byteVal != 99) {\n        if (byteVal < 100) {\n          if (byteVal == 0) goto LAB_08004f56;\n          if (byteVal != 0x58) goto LAB_08004dcc;\n          *(undefined *)((int)data + 0x45) = 0x58;\n          conversionTable = \"0123456789ABCDEF\";\nLAB_08004ee6:\n          tempVal = *data;\n          tempPtr = *output;\n          *output = tempPtr + 1;\n          if (((tempVal & 0x80) == 0) && ((int)(tempVal << 0x19) < 0)) {\n            value = (uint)*(ushort *)tempPtr;\n          }\n          else {\n            value = *tempPtr;\n          }\n          if ((int)(tempVal << 0x1f) < 0) {\n            *data = tempVal | 0x20;\n          }\n          if (value == 0) {\n            *data = *data & 0xffffffdf;\n          }\n          tempVal = 0x10;\nLAB_08004e7c:\n          *(undefined *)((int)data + 0x43) = 0;\n        }\n        else {\n          if ((byteVal != 100) && (byteVal != 0x69)) goto LAB_08004dcc;\n          value = *data;\n          tempPtr = *output;\n          if ((value & 0x80) == 0) {\n            *output = tempPtr + 1;\n            if ((value & 0x40) == 0) goto LAB_08004dec;\n            value = (uint)(short)*(ushort *)tempPtr;\n          }\n          else {\n            *output = tempPtr + 1;\nLAB_08004dec:\n            value = *tempPtr;\n          }\n          if ((int)value < 0) {\n            value = -value;\n            *(undefined *)((int)data + 0x43) = 0x2d;\n          }\n          conversionTable = \"0123456789ABCDEF\";\n          tempVal = 10;\n        }\n        tempVar = data[1];\n        data[2] = tempVar;\n        tempPtr2 = tempPtr3;\n        if ((int)tempVar < 0) {\n          if (value != 0) goto LAB_08004f1a;\nLAB_08004fc8:\n          *(char *)((int)data + 0x42) = *conversionTable;\n          tempPtr2 = (char *)((int)data + 0x42);\n        }\n        else {\n          *data = *data & 0xfffffffb;\n          if (value == 0) {\n            if (tempVar != 0) goto LAB_08004fc8;\n          }\n          else {\nLAB_08004f1a:\n            do {\n              tempVar = value / tempVal;\n              tempPtr2 = tempPtr2 + -1;\n              *tempPtr2 = conversionTable[value - tempVal * tempVar];\n              value = tempVar;\n            } while (tempVar != 0);\n          }\n        }\n        if (((tempVal == 8) && ((int)(*data << 0x1f) < 0)) && ((int)data[1] <= (int)data[4]))\n        {\n          tempPtr2[-1] = '0';\n          tempPtr2 = tempPtr2 + -1;\n        }\n        data[4] = (int)tempPtr3 - (int)tempPtr2;\n        tempPtr3 = tempPtr2;\n        goto LAB_08004ec2;\n      }\n      tempPtr = *output;\n      *output = tempPtr + 1;\n      *(char *)((int)data + 0x42) = (char)*tempPtr;\nLAB_08004e2c:\n      tempPtr3 = (char *)((int)data + 0x42);\n      value = 1;\n    }\n    else {\n      if (byteVal != 0x73) {\n        if (byteVal < 0x74) {\n          if (byteVal == 0x6f) {\nLAB_08004e52:\n            value = *data;\n            tempPtr = *output;\n            if ((value & 0x80) == 0) {\n              *output = tempPtr + 1;\n              if ((value & 0x40) == 0) goto LAB_08004e60;\n              value = (uint)*(ushort *)tempPtr;\n            }\n            else {\n              *output = tempPtr + 1;\nLAB_08004e60:\n              value = *tempPtr;\n            }\n            conversionTable = \"0123456789ABCDEF\";\n            if (byteVal == 0x6f) {\n              tempVal = 8;\n            }\n            else {\n              tempVal = 10;\n            }\n            goto LAB_08004e7c;\n          }\n          if (byteVal == 0x70) {\n            *data = *data | 0x20;\nLAB_08004e12:\n            *(undefined *)((int)data + 0x45) = 0x78;\n            conversionTable = \"0123456789abcdef\";\n            goto LAB_08004ee6;\n          }\n        }\n        else {\n          if (byteVal == 0x75) goto LAB_08004e52;\n          if (byteVal == 0x78) goto LAB_08004e12;\n        }\nLAB_08004dcc:\n        *(byte *)((int)data + 0x42) = byteVal;\n        goto LAB_08004e2c;\n      }\n      ppcVar8 = (char **)*output;\n      *output = (uint *)(ppcVar8 + 1);\n      tempPtr3 = *ppcVar8;\n      result = FUN_08000230(tempPtr3,0,data[1]);\n      if (result != 0) {\n        data[1] = result - (int)tempPtr3;\n      }\n      value = data[1];\n    }\n    data[4] = value;\n    *(undefined *)((int)data + 0x43) = 0;\n    goto LAB_08004ec2;\n  }\n  value = *data;\n  ppuVar7 = (uint **)*output;\n  tempVal = data[5];\n  if ((value & 0x80) == 0) {\n    *output = (uint *)(ppuVar7 + 1);\n    tempPtr = *ppuVar7;\n    if ((value & 0x40) == 0) goto LAB_08004f42;\n    *(short *)tempPtr = (short)tempVal;\n  }\n  else {\n    *output = (uint *)(ppuVar7 + 1);\n    tempPtr = *ppuVar7;\nLAB_08004f42:\n    *tempPtr = tempVal;\n  }\nLAB_08004f56:\n  data[4] = 0;\nLAB_08004ec2:\n  result = FUN_08004cb0(input,data,localVar,param,callback);\n  if ((result == -1) || (result = (*callback)(input,param,tempPtr3,data[4]), result == -1)) {\nLAB_08004ed6:\n    value = 0xffffffff;\n  }\n  else {\n    if ((int)(*data << 0x1e) < 0) {\n      for (result = 0; result < (int)(data[3] - localVar[0]); result = result + 1) {\n        innerResult = (*callback)(input,param,(int)data + 0x19,1);\n        if (innerResult == -1) goto LAB_08004ed6;\n      }\n    }\n    value = data[3];\n    if ((int)data[3] < (int)localVar[0]) {\n      value = localVar[0];\n    }\n  }\n  return value;\n}\n\n",
            "renaming": {
                "FUN_08004d9c": "convert_data_08004d9c",
                "param_1": "input",
                "param_2": "data",
                "param_3": "param",
                "param_4": "callback",
                "param_5": "output",
                "bVar1": "byteVal",
                "iVar2": "result",
                "puVar3": "tempPtr",
                "iVar4": "innerResult",
                "pcVar5": "conversionTable",
                "uVar6": "tempVal",
                "uVar9": "value",
                "uVar10": "tempVar",
                "pcVar11": "tempPtr2",
                "pcVar12": "tempPtr3",
                "local_24": "localVar"
            },
            "calling": [
                "FUN_08004a84"
            ],
            "called": [
                "FUN_08004cb0",
                "FUN_08000230"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004fdc": {
            "entrypoint": "0x08004fdc",
            "current_name": "execute_function_08004fdc",
            "code": "\nvoid executeFunction_08004fdc(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  int ptrData;\n  undefined4 param1Copy;\n  undefined4 input2Copy;\n  undefined4 input3Copy;\n  undefined4 input4Copy;\n  \n  ptrData = DAT_200000a0;\n  param1Copy = input1;\n  input2Copy = input2;\n  input3Copy = input3;\n  input4Copy = input4;\n  if ((DAT_200000a0 != 0) && (*(int *)(DAT_200000a0 + 0x18) == 0)) {\n    FUN_080053a0(DAT_200000a0);\n  }\n  FUN_08004a84(ptrData,*(undefined4 *)(ptrData + 8),input1,&input2Copy,param1Copy,&input2Copy);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004fdc": "execute_function_08004fdc",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "ptrData",
                "uVar2": "param1Copy",
                "uStack_c": "input2Copy",
                "uStack_8": "input3Copy",
                "uStack_4": "input4Copy"
            },
            "calling": [
                "FUN_08003978"
            ],
            "called": [
                "FUN_08004a84",
                "FUN_080053a0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800500c": {
            "entrypoint": "0x0800500c",
            "current_name": "update_and_check_value_0800500c",
            "code": "\nvoid updateAndCheckValue_0800500c(int *result,undefined4 inputValue)\n\n{\n  int returnValue;\n  \n  DAT_20000674 = 0;\n  returnValue = FUN_08004094(inputValue);\n  if ((returnValue == -1) && (DAT_20000674 != 0)) {\n    *result = DAT_20000674;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800500c": "update_and_check_value_0800500c",
                "param_1": "result",
                "param_2": "inputValue",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08004978"
            ],
            "called": [
                "FUN_08004094"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080050d0": {
            "entrypoint": "0x080050d0",
            "current_name": "process_data_080050d0",
            "code": "\nuint processData_080050d0(undefined4 *output_result,undefined4 *input_data)\n\n{\n  int data_pointer;\n  uint result;\n  ushort flags;\n  \n  data_pointer = DAT_200000a0;\n  if ((DAT_200000a0 != 0) && (*(int *)(DAT_200000a0 + 0x18) == 0)) {\n    FUN_080053a0(DAT_200000a0);\n  }\n  if (input_data == &DAT_08005fc0) {\n    input_data = *(undefined4 **)(data_pointer + 4);\n  }\n  else if (input_data == (undefined4 *)&DAT_08005fe0) {\n    input_data = *(undefined4 **)(data_pointer + 8);\n  }\n  else if (input_data == (undefined4 *)&DAT_08005fa0) {\n    input_data = *(undefined4 **)(data_pointer + 0xc);\n  }\n  flags = *(ushort *)(input_data + 3);\n  result = (uint)flags;\n  if (-1 < (int)(result << 0x1c)) {\n    if (-1 < (int)(result << 0x1b)) {\n      *output_result = 9;\n      goto LAB_08005100;\n    }\n    if ((int)(result << 0x1d) < 0) {\n      if ((undefined4 *)input_data[0xd] != (undefined4 *)0x0) {\n        if ((undefined4 *)input_data[0xd] != input_data + 0x11) {\n          FUN_080048dc(output_result);\n        }\n        input_data[0xd] = 0;\n      }\n      *(ushort *)(input_data + 3) = *(ushort *)(input_data + 3) & 0xffdb;\n      input_data[1] = 0;\n      *input_data = input_data[4];\n    }\n    *(ushort *)(input_data + 3) = *(ushort *)(input_data + 3) | 8;\n  }\n  if ((input_data[4] == 0) && ((*(ushort *)(input_data + 3) & 0x280) != 0x200)) {\n    FUN_080054fc(output_result,input_data);\n  }\n  flags = *(ushort *)(input_data + 3);\n  result = flags & 1;\n  if ((flags & 1) == 0) {\n    if (-1 < (int)((uint)flags << 0x1e)) {\n      result = input_data[5];\n    }\n    input_data[2] = result;\n  }\n  else {\n    input_data[2] = 0;\n    input_data[6] = -input_data[5];\n  }\n  if (input_data[4] == 0) {\n    flags = *(ushort *)(input_data + 3);\n    result = (int)(short)flags & 0x80;\n    if (result != 0) {\nLAB_08005100:\n      *(ushort *)(input_data + 3) = flags | 0x40;\n      return 0xffffffff;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080050d0": "process_data_080050d0",
                "param_1": "output_result",
                "param_2": "input_data",
                "iVar1": "data_pointer",
                "uVar2": "result",
                "uVar3": "flags"
            },
            "calling": [
                "FUN_08004a84",
                "FUN_08004a34"
            ],
            "called": [
                "FUN_080054fc",
                "FUN_080048dc",
                "FUN_080053a0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080051ac": {
            "entrypoint": "0x080051ac",
            "current_name": "process_data_080051ac",
            "code": "\nvoid processData_080051ac(void)\n\n{\n  uint *ptrValue;\n  int count;\n  int *ptrData;\n  int *ptrOther;\n  uint value;\n  ushort flag;\n  int temp;\n  code *functionPtr;\n  int length;\n  uint tempValue;\n  code *jmpTable;\n  bool isZero;\n  undefined8 returnValue;\n  \n  FUN_080055d0(6);\n  jmpTable = (code *)0x80051bb;\n  returnValue = FUN_080040f8(1);\n  ptrData = (int *)((ulonglong)returnValue >> 0x20);\n  ptrValue = (uint *)returnValue;\n  flag = *(ushort *)(ptrData + 3);\n  value = (uint)flag;\n  if ((int)(value << 0x1c) < 0) {\n    count = ptrData[4];\n    if (count != 0) {\n      temp = value << 0x1e;\n      isZero = temp == 0;\n      length = *ptrData;\n      if (isZero) {\n        temp = ptrData[5];\n      }\n      *ptrData = count;\n      if (!isZero) {\n        temp = 0;\n      }\n      ptrData[2] = temp;\n      for (length = length - count; 0 < length; length = length - temp) {\n        temp = (*(code *)ptrData[10])(ptrValue,ptrData[8],count,length);\n        if (temp < 1) {\n          flag = *(ushort *)(ptrData + 3);\n          goto LAB_080052b2;\n        }\n        count = count + temp;\n      }\n    }\n  }\n  else if (((0 < ptrData[1]) || (0 < ptrData[0x10])) &&\n          (functionPtr = (code *)ptrData[0xb], functionPtr != (code *)0x0)) {\n    tempValue = *ptrValue;\n    *ptrValue = 0;\n    if ((flag & 0x1000) == 0) {\n      count = (*functionPtr)(ptrValue,ptrData[8],value & 0x1000,1);\n      if ((count == -1) && (value = *ptrValue, value != 0)) {\n        if ((value != 0x1d) && (value != 0x16)) {\n          *(ushort *)(ptrData + 3) = *(ushort *)(ptrData + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x0800527c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          (*jmpTable)();\n          return;\n        }\n        *ptrValue = tempValue;\n        goto LAB_080051d6;\n      }\n    }\n    else {\n      count = ptrData[0x15];\n    }\n    if (((int)((uint)*(ushort *)(ptrData + 3) << 0x1d) < 0) &&\n       (count = count - ptrData[1], ptrData[0xd] != 0)) {\n      count = count - ptrData[0x10];\n    }\n    count = (*(code *)ptrData[0xb])(ptrValue,ptrData[8],count,0);\n    flag = *(ushort *)(ptrData + 3);\n    if ((count == -1) &&\n       ((0x1d < *ptrValue || (-1 < (int)((0x20400001U >> (*ptrValue & 0xff)) << 0x1f))))) {\nLAB_080052b2:\n      *(ushort *)(ptrData + 3) = flag | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x080052bc. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jmpTable)(0xffffffff);\n      return;\n    }\n    ptrData[1] = 0;\n    *ptrData = ptrData[4];\n    if (((int)((uint)flag << 0x13) < 0) && ((count != -1 || (*ptrValue == 0)))) {\n      ptrData[0x15] = count;\n    }\n    ptrOther = (int *)ptrData[0xd];\n    *ptrValue = tempValue;\n    if (ptrOther != (int *)0x0) {\n      if (ptrOther != ptrData + 0x11) {\n        FUN_080048dc(ptrValue);\n      }\n      ptrData[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08005252. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jmpTable)();\n      return;\n    }\n  }\nLAB_080051d6:\n                    /* WARNING: Could not recover jumptable at 0x080051d8. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jmpTable)(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080051ac": "process_data_080051ac",
                "piVar3": "ptrData",
                "puVar1": "ptrValue",
                "iVar2": "count",
                "piVar4": "ptrOther",
                "uVar5": "value",
                "uVar6": "flag",
                "iVar7": "temp",
                "pcVar8": "functionPtr",
                "iVar9": "length",
                "uVar10": "tempValue",
                "bVar11": "isZero",
                "uVar12": "returnValue",
                "UNRECOVERED_JUMPTABLE_00": "jmpTable"
            },
            "calling": [
                "FUN_08004808",
                "FUN_08005760"
            ],
            "called": [
                "FUN_080048dc",
                "FUN_080040f8",
                "FUN_080055d0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080052cc": {
            "entrypoint": "0x080052cc",
            "current_name": "process_data_080052cc",
            "code": "\nundefined4 processData_080052cc(uint *dataPointer,int *infoPointer)\n\n{\n  undefined4 returnValue;\n  int length;\n  int *ptr;\n  uint value;\n  ushort flag;\n  int tempVar;\n  undefined4 register4;\n  undefined4 register5;\n  code *functionPtr;\n  int counter;\n  uint tempValue;\n  code *jumpTable;\n  bool isValid;\n  \n  if (infoPointer[4] != 0) {\n    if ((dataPointer != (uint *)0x0) && (dataPointer[6] == 0)) {\n      FUN_080053a0();\n    }\n    if (infoPointer == &DAT_08005fc0) {\n      infoPointer = (int *)dataPointer[1];\n    }\n    else if (infoPointer == (int *)&DAT_08005fe0) {\n      infoPointer = (int *)dataPointer[2];\n    }\n    else if (infoPointer == (int *)&DAT_08005fa0) {\n      infoPointer = (int *)dataPointer[3];\n    }\n    if (*(short *)(infoPointer + 3) != 0) {\n      flag = *(ushort *)(infoPointer + 3);\n      value = (uint)flag;\n      if ((int)(value << 0x1c) < 0) {\n        length = infoPointer[4];\n        if (length != 0) {\n          tempVar = value << 0x1e;\n          isValid = tempVar == 0;\n          counter = *infoPointer;\n          if (isValid) {\n            tempVar = infoPointer[5];\n          }\n          *infoPointer = length;\n          if (!isValid) {\n            tempVar = 0;\n          }\n          infoPointer[2] = tempVar;\n          for (counter = counter - length; 0 < counter; counter = counter - tempVar) {\n            tempVar = (*(code *)infoPointer[10])(dataPointer,infoPointer[8],length,counter,register4,register5);\n            if (tempVar < 1) {\n              flag = *(ushort *)(infoPointer + 3);\n              goto LAB_080052b2;\n            }\n            length = length + tempVar;\n          }\n        }\n      }\n      else if (((0 < infoPointer[1]) || (0 < infoPointer[0x10])) &&\n              (functionPtr = (code *)infoPointer[0xb], functionPtr != (code *)0x0)) {\n        tempValue = *dataPointer;\n        *dataPointer = 0;\n        if ((flag & 0x1000) == 0) {\n          length = (*functionPtr)(dataPointer,infoPointer[8],value & 0x1000,1);\n          if ((length == -1) && (value = *dataPointer, value != 0)) {\n            if ((value != 0x1d) && (value != 0x16)) {\n              *(ushort *)(infoPointer + 3) = *(ushort *)(infoPointer + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x0800527c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n              returnValue = (*jumpTable)();\n              return returnValue;\n            }\n            *dataPointer = tempValue;\n            goto LAB_080051d6;\n          }\n        }\n        else {\n          length = infoPointer[0x15];\n        }\n        if (((int)((uint)*(ushort *)(infoPointer + 3) << 0x1d) < 0) &&\n           (length = length - infoPointer[1], infoPointer[0xd] != 0)) {\n          length = length - infoPointer[0x10];\n        }\n        length = (*(code *)infoPointer[0xb])(dataPointer,infoPointer[8],length,0);\n        flag = *(ushort *)(infoPointer + 3);\n        if ((length == -1) &&\n           ((0x1d < *dataPointer || (-1 < (int)((0x20400001U >> (*dataPointer & 0xff)) << 0x1f))))) {\nLAB_080052b2:\n          *(ushort *)(infoPointer + 3) = flag | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x080052bc. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          returnValue = (*jumpTable)(0xffffffff);\n          return returnValue;\n        }\n        infoPointer[1] = 0;\n        *infoPointer = infoPointer[4];\n        if (((int)((uint)flag << 0x13) < 0) && ((length != -1 || (*dataPointer == 0)))) {\n          infoPointer[0x15] = length;\n        }\n        ptr = (int *)infoPointer[0xd];\n        *dataPointer = tempValue;\n        if (ptr != (int *)0x0) {\n          if (ptr != infoPointer + 0x11) {\n            FUN_080048dc(dataPointer);\n          }\n          infoPointer[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08005252. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          returnValue = (*jumpTable)();\n          return returnValue;\n        }\n      }\nLAB_080051d6:\n                    /* WARNING: Could not recover jumptable at 0x080051d8. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      returnValue = (*jumpTable)(0);\n      return returnValue;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080052cc": "process_data_080052cc",
                "param_1": "dataPointer",
                "param_2": "infoPointer",
                "uVar1": "returnValue",
                "iVar2": "length",
                "piVar3": "ptr",
                "uVar4": "value",
                "uVar5": "flag",
                "iVar6": "tempVar",
                "unaff_r4": "register4",
                "unaff_r5": "register5",
                "pcVar7": "functionPtr",
                "iVar8": "counter",
                "uVar9": "tempValue",
                "bVar10": "isValid",
                "UNRECOVERED_JUMPTABLE_00": "jumpTable"
            },
            "calling": [
                "FUN_08004a34"
            ],
            "called": [
                "FUN_080053a0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800532c": {
            "entrypoint": "0x0800532c",
            "current_name": "initialize_data_structure_0800532c",
            "code": "\nvoid initializeDataStructure_0800532c(undefined4 *dataStructure,undefined2 value1,undefined2 value2)\n\n{\n  *dataStructure = 0;\n  dataStructure[1] = 0;\n  dataStructure[2] = 0;\n  *(undefined2 *)(dataStructure + 3) = value1;\n  dataStructure[0x19] = 0;\n  *(undefined2 *)((int)dataStructure + 0xe) = value2;\n  dataStructure[4] = 0;\n  dataStructure[5] = 0;\n  dataStructure[6] = 0;\n  FUN_080048cc(dataStructure + 0x17,0,8);\n  dataStructure[9] = 0x8005609;\n  dataStructure[10] = 0x800562b;\n  dataStructure[0xb] = 0x8005663;\n  dataStructure[8] = dataStructure;\n  dataStructure[0xc] = &LAB_08005686_1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800532c": "initialize_data_structure_0800532c",
                "param_1": "dataStructure",
                "param_2": "value1",
                "param_3": "value2"
            },
            "calling": [
                "FUN_080053a0"
            ],
            "called": [
                "FUN_080048cc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005374": {
            "entrypoint": "0x08005374",
            "current_name": "initialize_array_08005374",
            "code": "\nundefined4 * initializeArray_08005374(undefined4 array,int size)\n\n{\n  undefined4 *allocatedArray;\n  int offset;\n  \n  offset = (size + -1) * 0x68;\n  allocatedArray = (undefined4 *)FUN_08004978(array,offset + 0x74);\n  if (allocatedArray != (undefined4 *)0x0) {\n    *allocatedArray = 0;\n    allocatedArray[1] = size;\n    allocatedArray[2] = allocatedArray + 3;\n    FUN_080048cc(allocatedArray + 3,0,offset + 0x68);\n  }\n  return allocatedArray;\n}\n\n",
            "renaming": {
                "FUN_08005374": "initialize_array_08005374",
                "param_1": "array",
                "param_2": "size",
                "puVar1": "allocatedArray",
                "iVar2": "offset"
            },
            "calling": [
                "FUN_08005400"
            ],
            "called": [
                "FUN_080048cc",
                "FUN_08004978"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080053a0": {
            "entrypoint": "0x080053a0",
            "current_name": "initialize_data_080053a0",
            "code": "\nvoid initializeData_080053a0(undefined4 *data)\n\n{\n  undefined4 result;\n  undefined4 *ptr;\n  \n  if (data[6] == 0) {\n    data[0x12] = 0;\n    data[0x13] = 0;\n    data[0x14] = 0;\n    ptr = &DAT_200000a4;\n    data[10] = &label1;\n    if (data == &DAT_200000a4) {\n      ptr = (undefined4 *)0x1;\n    }\n    if (data == &DAT_200000a4) {\n      data[6] = ptr;\n    }\n    result = FUN_08005400();\n    data[1] = result;\n    result = FUN_08005400(data);\n    data[2] = result;\n    result = FUN_08005400(data);\n    data[3] = result;\n    FUN_0800532c(data[1],4,0);\n    FUN_0800532c(data[2],9,1);\n    FUN_0800532c(data[3],0x12,2);\n    data[6] = 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080053a0": "initialize_data_080053a0",
                "param_1": "data",
                "uVar1": "result",
                "puVar2": "ptr",
                "LAB_08005320_1": "label1"
            },
            "calling": [
                "FUN_080050d0",
                "FUN_08004a84",
                "FUN_080052cc",
                "FUN_08005400",
                "FUN_08004a34",
                "FUN_08004fdc"
            ],
            "called": [
                "FUN_08005400",
                "FUN_0800532c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005400": {
            "entrypoint": "0x08005400",
            "current_name": "initialize_fun_08005400",
            "code": "\nint * initializeFun_08005400(undefined4 *output,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int *current;\n  int *entry;\n  int **list;\n  \n  if (DAT_200000bc == 0) {\n    FUN_080053a0(&DAT_200000a4);\n  }\n  list = (int **)&DAT_200000ec;\n  do {\n    entry = list[2];\n    current = list[1];\n    while (current = (int *)((int)current + -1), -1 < (int)current) {\n      if (*(short *)(entry + 3) == 0) {\n        *(undefined2 *)((int)entry + 0xe) = 0xffff;\n        *(undefined2 *)(entry + 3) = 1;\n        entry[0x19] = 0;\n        *entry = 0;\n        entry[2] = 0;\n        entry[1] = 0;\n        entry[4] = 0;\n        entry[5] = 0;\n        entry[6] = 0;\n        FUN_080048cc(entry + 0x17,0,8,1,param4);\n        entry[0xd] = 0;\n        entry[0xe] = 0;\n        entry[0x12] = 0;\n        entry[0x13] = 0;\n        return entry;\n      }\n      entry = entry + 0x1a;\n    }\n    if (*list == (int *)0x0) {\n      current = (int *)FUN_08005374(output,4);\n      *list = current;\n      if (current == (int *)0x0) {\n        *output = 0xc;\n        return (int *)0x0;\n      }\n    }\n    list = (int **)*list;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08005400": "initialize_fun_08005400",
                "param_1": "output",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "piVar1": "current",
                "piVar2": "entry",
                "ppiVar3": "list"
            },
            "calling": [
                "FUN_080053a0"
            ],
            "called": [
                "FUN_08005374",
                "FUN_080048cc",
                "FUN_080053a0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080054b4": {
            "entrypoint": "0x080054b4",
            "current_name": "check_permissions_080054b4",
            "code": "\nundefined4 checkPermissions_080054b4(undefined4 data,int offset,undefined4 *result,uint *status)\n\n{\n  int returnValue;\n  undefined4 permission;\n  undefined temp [4];\n  uint value;\n  \n  if ((*(short *)(offset + 0xe) < 0) ||\n     (returnValue = FUN_080056d4(data,(int)*(short *)(offset + 0xe),temp), returnValue < 0)) {\n    *status = 0;\n    if ((int)((uint)*(ushort *)(offset + 0xc) << 0x18) < 0) {\n      permission = 0x40;\n      goto LAB_080054f4;\n    }\n  }\n  else {\n    *status = (uint)((value & 0xf000) == 0x2000);\n  }\n  permission = 0x400;\nLAB_080054f4:\n  *result = permission;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080054b4": "check_permissions_080054b4",
                "param_1": "data",
                "param_2": "offset",
                "param_3": "result",
                "param_4": "status",
                "iVar1": "returnValue",
                "uVar2": "permission",
                "auStack_4c": "temp",
                "local_48": "value"
            },
            "calling": [
                "FUN_080054fc"
            ],
            "called": [
                "FUN_080056d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080054fc": {
            "entrypoint": "0x080054fc",
            "current_name": "process_data_080054fc",
            "code": "\nvoid processData_080054fc(int dataStream,int *dataPacket)\n\n{\n  ushort result;\n  int status;\n  int tempVar1;\n  int *tempVar2;\n  \n  if (-1 < (int)((uint)*(ushort *)(dataPacket + 3) << 0x1e)) {\n    tempVar1 = dataStream;\n    tempVar2 = dataPacket;\n    result = FUN_080054b4(dataStream,dataPacket,&tempVar1,&tempVar2);\n    status = FUN_08004978(dataStream,tempVar1);\n    if (status != 0) {\n      *(undefined **)(dataStream + 0x28) = &LAB_08005320_1;\n      *dataPacket = status;\n      *(ushort *)(dataPacket + 3) = *(ushort *)(dataPacket + 3) | 0x80;\n      dataPacket[5] = tempVar1;\n      dataPacket[4] = status;\n      if ((tempVar2 != (int *)0x0) &&\n         (status = FUN_080056f8(dataStream,(int)*(short *)((int)dataPacket + 0xe)), status != 0)) {\n        *(ushort *)(dataPacket + 3) = *(ushort *)(dataPacket + 3) & 0xfffc | 1;\n      }\n      *(ushort *)(dataPacket + 3) = result | *(ushort *)(dataPacket + 3);\n      return;\n    }\n    if ((int)(short)*(ushort *)(dataPacket + 3) << 0x16 < 0) {\n      return;\n    }\n    *(ushort *)(dataPacket + 3) = *(ushort *)(dataPacket + 3) & 0xfffc | 2;\n  }\n  *dataPacket = (int)dataPacket + 0x47;\n  dataPacket[4] = (int)dataPacket + 0x47;\n  dataPacket[5] = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080054fc": "process_data_080054fc",
                "param_1": "dataStream",
                "param_2": "dataPacket",
                "uVar1": "result",
                "iVar2": "status",
                "local_18": "tempVar1",
                "local_14": "tempVar2"
            },
            "calling": [
                "FUN_080050d0"
            ],
            "called": [
                "FUN_080054b4",
                "FUN_080056f8",
                "FUN_08004978"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800557c": {
            "entrypoint": "0x0800557c",
            "current_name": "FUNC_0800557c",
            "code": "\nvoid FUNC_0800557c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800557c": "FUNC_0800557c"
            },
            "calling": [
                "FUN_080048dc",
                "FUN_08004978"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800557e": {
            "entrypoint": "0x0800557e",
            "current_name": "FUNC_0800557e",
            "code": "\nvoid FUNC_0800557e(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800557e": "FUNC_0800557e"
            },
            "calling": [
                "FUN_080048dc",
                "FUN_08004978"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080055d0": {
            "entrypoint": "0x080055d0",
            "current_name": "process_input_080055d0",
            "code": "\nint processInput_080055d0(uint input)\n\n{\n  int *pointer;\n  undefined4 result;\n  int index;\n  code *function_ptr;\n  undefined4 unused_var_1;\n  undefined4 unused_var_2;\n  undefined4 unused_var_3;\n  undefined4 *pointer_ptr;\n  \n  pointer = DAT_200000a0;\n  pointer_ptr = &DAT_200000a0;\n  if (0x1f < input) {\n    *DAT_200000a0 = 0x16;\n    return -1;\n  }\n  index = DAT_200000a0[0x11];\n  if ((index != 0) && (function_ptr = *(code **)(index + input * 4), function_ptr != (code *)0x0)) {\n    if (function_ptr != (code *)0x1) {\n      if (function_ptr == (code *)0xffffffff) {\n        *DAT_200000a0 = 0x16;\n        return 1;\n      }\n      *(undefined4 *)(index + input * 4) = 0;\n      (*function_ptr)(input);\n    }\n    return 0;\n  }\n  result = thunk_FUN_0800410c(DAT_200000a0);\n  DAT_20000674 = 0;\n  index = FUN_080040fc(result,input,input,0,pointer_ptr,unused_var_1,unused_var_2,unused_var_3);\n  if ((index == -1) && (DAT_20000674 != 0)) {\n    *pointer = DAT_20000674;\n  }\n  return index;\n}\n\n",
            "renaming": {
                "FUN_080055d0": "process_input_080055d0",
                "param_1": "input",
                "piVar1": "pointer",
                "uVar2": "result",
                "iVar3": "index",
                "pcVar4": "function_ptr",
                "unaff_r4": "unused_var_1",
                "unaff_r5": "unused_var_2",
                "in_lr": "unused_var_3",
                "puVar5": "pointer_ptr"
            },
            "calling": [
                "FUN_080051ac"
            ],
            "called": [
                "FUN_080040fc",
                "thunk_FUN_0800410c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_0800410c": {
            "entrypoint": "0x08005604",
            "current_name": "initialize_return_value_thunk_0800410c",
            "code": "\nundefined4 initializeReturnValue_thunk_0800410c(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "thunk_FUN_0800410c": "initialize_return_value_thunk_0800410c"
            },
            "calling": [
                "FUN_080055d0"
            ],
            "called": [
                "FUN_0800410c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005608": {
            "entrypoint": "0x08005608",
            "current_name": "update_data_08005608",
            "code": "\nvoid updateData_08005608(undefined4 dataPointer,int buffer)\n\n{\n  int result;\n  uint updatedValue;\n  bool isPositive;\n  \n  result = FUN_0800573c(dataPointer,(int)*(short *)(buffer + 0xe));\n  isPositive = -1 < result;\n  if (isPositive) {\n    updatedValue = *(int *)(buffer + 0x54) + result;\n  }\n  else {\n    updatedValue = *(ushort *)(buffer + 0xc) & 0xffffefff;\n  }\n  if (isPositive) {\n    *(uint *)(buffer + 0x54) = updatedValue;\n  }\n  if (!isPositive) {\n    *(short *)(buffer + 0xc) = (short)updatedValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005608": "update_data_08005608",
                "param_1": "dataPointer",
                "param_2": "buffer",
                "iVar1": "result",
                "uVar2": "updatedValue",
                "bVar3": "isPositive"
            },
            "calling": [],
            "called": [
                "FUN_0800573c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800562a": {
            "entrypoint": "0x0800562a",
            "current_name": "handle_data_0800562a",
            "code": "\nvoid handleData_0800562a(int *result,int data,undefined4 arg1,undefined4 arg2)\n\n{\n  int returnValue;\n  undefined4 ptr1;\n  undefined4 ptr2;\n  undefined4 ptr3;\n  \n  if ((int)((uint)*(ushort *)(data + 0xc) << 0x17) < 0) {\n    FUN_08005718(result,(int)*(short *)(data + 0xe),0,2);\n  }\n  *(ushort *)(data + 0xc) = *(ushort *)(data + 0xc) & 0xefff;\n  DAT_20000674 = 0;\n  returnValue = FUN_080040ec((int)*(short *)(data + 0xe),arg1,arg2,arg2,arg2,ptr1,\n                       ptr2,ptr3);\n  if ((returnValue == -1) && (DAT_20000674 != 0)) {\n    *result = DAT_20000674;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800562a": "handle_data_0800562a",
                "param_1": "result",
                "param_2": "data",
                "param_3": "arg1",
                "param_4": "arg2",
                "unaff_r4": "ptr1",
                "unaff_r5": "ptr2",
                "in_lr": "ptr3",
                "iVar1": "returnValue"
            },
            "calling": [],
            "called": [
                "FUN_08005718",
                "FUN_080040ec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005662": {
            "entrypoint": "0x08005662",
            "current_name": "update_flags_08005662",
            "code": "\nvoid updateFlags_08005662(undefined4 input,int data)\n\n{\n  int result;\n  ushort updatedValue;\n  bool isNegative;\n  \n  result = FUN_08005718(input,(int)*(short *)(data + 0xe));\n  isNegative = result == -1;\n  if (isNegative) {\n    updatedValue = *(ushort *)(data + 0xc) & 0xefff;\n  }\n  else {\n    *(int *)(data + 0x54) = result;\n    updatedValue = *(ushort *)(data + 0xc) | 0x1000;\n  }\n  if (isNegative) {\n    *(ushort *)(data + 0xc) = updatedValue;\n  }\n  if (!isNegative) {\n    *(ushort *)(data + 0xc) = updatedValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005662": "update_flags_08005662",
                "param_1": "input",
                "param_2": "data",
                "iVar1": "result",
                "uVar2": "updatedValue",
                "bVar3": "isNegative"
            },
            "calling": [],
            "called": [
                "FUN_08005718"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080056d4": {
            "entrypoint": "0x080056d4",
            "current_name": "reverse_and_store_value_080056d4",
            "code": "\nvoid reverseAndStoreValue_080056d4(int *outputValue,undefined4 inputValue1,undefined4 inputValue2,undefined4 inputValue3)\n\n{\n  int functionResult;\n  \n  DAT_20000674 = 0;\n  functionResult = FUN_080040d6(inputValue1,inputValue2,inputValue2,0,inputValue3);\n  if ((functionResult == -1) && (DAT_20000674 != 0)) {\n    *outputValue = DAT_20000674;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080056d4": "reverse_and_store_value_080056d4",
                "param_1": "outputValue",
                "param_2": "inputValue1",
                "param_3": "inputValue2",
                "param_4": "inputValue3",
                "iVar1": "functionResult"
            },
            "calling": [
                "FUN_080054b4"
            ],
            "called": [
                "FUN_080040d6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080056f8": {
            "entrypoint": "0x080056f8",
            "current_name": "process_result_080056f8",
            "code": "\nvoid processResult_080056f8(int *resultPointer,undefined4 inputValue)\n\n{\n  int returnValue;\n  \n  DAT_20000674 = 0;\n  returnValue = FUN_080040e0(inputValue);\n  if ((returnValue == -1) && (DAT_20000674 != 0)) {\n    *resultPointer = DAT_20000674;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080056f8": "process_result_080056f8",
                "param_1": "resultPointer",
                "param_2": "inputValue",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_080054fc"
            ],
            "called": [
                "FUN_080040e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005718": {
            "entrypoint": "0x08005718",
            "current_name": "process_data_08005718",
            "code": "\nvoid processData_08005718(int *output,undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  int result;\n  \n  DAT_20000674 = 0;\n  result = FUN_080040e4(input1,input2,input3,input3,input3);\n  if ((result == -1) && (DAT_20000674 != 0)) {\n    *output = DAT_20000674;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005718": "process_data_08005718",
                "param_1": "output",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "input3",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08005662",
                "FUN_0800562a"
            ],
            "called": [
                "FUN_080040e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800573c": {
            "entrypoint": "0x0800573c",
            "current_name": "update_param_if_error_0800573c",
            "code": "\nvoid updateParamIfError_0800573c(int *result,undefined4 param1,undefined4 param2,undefined4 param3)\n\n{\n  int returnValue;\n  \n  DAT_20000674 = 0;\n  returnValue = FUN_080040e8(param1,param2,param3,param3,param3);\n  if ((returnValue == -1) && (DAT_20000674 != 0)) {\n    *result = DAT_20000674;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800573c": "update_param_if_error_0800573c",
                "param_1": "result",
                "param_2": "param1",
                "param_3": "param2",
                "param_4": "param3",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08005608"
            ],
            "called": [
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005760": {
            "entrypoint": "0x08005760",
            "current_name": "initialize_variables_08005760",
            "code": "\nvoid initializeVariables_08005760(void)\n\n{\n  code *jumpTable;\n  \n  jumpTable = initializeVariables_08005760;\n  FUN_080051ac();\n  if (-1 < DAT_200005fc << 0x1f) {\n    DAT_200005fc = 1;\n  }\n  if (-1 < DAT_200005f8 << 0x1f) {\n    DAT_200005f8 = 1;\n  }\n  if (-1 < DAT_200005f4 << 0x1f) {\n    DAT_200005f4 = 1;\n  }\n  if (-1 < DAT_200005f0 << 0x1f) {\n    DAT_200005f0 = 1;\n  }\n  if (-1 < DAT_200005ec << 0x1f) {\n    DAT_200005ec = 1;\n  }\n  if (-1 < DAT_200005e8 << 0x1f) {\n    DAT_200005e8 = 1;\n  }\n  if (-1 < DAT_200005e4 << 0x1f) {\n    DAT_200005e4 = 1;\n  }\n  if (-1 < DAT_200005e0 << 0x1f) {\n    DAT_200005e0 = 1;\n  }\n  if (-1 < DAT_200005dc << 0x1f) {\n    DAT_200005dc = 1;\n  }\n  if (-1 < DAT_200005d8 << 0x1f) {\n    DAT_200005d8 = 1;\n  }\n  if (-1 < DAT_200005d4 << 0x1f) {\n    DAT_200005d4 = 1;\n  }\n  if (-1 < DAT_200005d0 << 0x1f) {\n    DAT_200005d0 = 1;\n  }\n                    /* WARNING: Could not recover jumptable at 0x080057f8. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005760": "initialize_variables_08005760",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_080047c0"
            ],
            "called": [
                "FUN_080051ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080059f8": {
            "entrypoint": "0x080059f8",
            "current_name": "FUNC_080059f8",
            "code": "\nvoid FUNC_080059f8(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080059f8": "FUNC_080059f8"
            },
            "calling": [
                "FUN_080001ac",
                "FUN_08004884"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005a04": {
            "entrypoint": "0x08005a04",
            "current_name": "FUNC_08005a04",
            "code": "\nvoid FUNC_08005a04(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a04": "FUNC_08005a04"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        }
    },
    "used_tokens": 122037,
    "layers": [
        [
            "FUN_080001ac",
            "FUN_08000230",
            "FUN_080002d0",
            "FUN_08000300",
            "FUN_080005e0",
            "FUN_080005e4",
            "FUN_08000600",
            "FUN_0800066c",
            "FUN_08000682",
            "FUN_08000690",
            "FUN_080006b4",
            "FUN_08000728",
            "FUN_0800076c",
            "FUN_080007f0",
            "FUN_080008cc",
            "FUN_080008e2",
            "FUN_08000998",
            "FUN_08000a00",
            "FUN_08000a4e",
            "FUN_08000a7a",
            "FUN_08000b04",
            "FUN_08000b54",
            "FUN_08000c4c",
            "FUN_08000c64",
            "FUN_08000c8c",
            "FUN_08000d8e",
            "FUN_08000d98",
            "FUN_08000de4",
            "FUN_08000e18",
            "FUN_08000e30",
            "FUN_08000e3c",
            "FUN_08000e60",
            "FUN_08000ec4",
            "FUN_08000ee0",
            "FUN_08000f0c",
            "FUN_08000f2c",
            "FUN_08000f4e",
            "FUN_08000f56",
            "FUN_08000f72",
            "FUN_08000f8c",
            "FUN_08000fb4",
            "FUN_08001198",
            "FUN_080011a4",
            "FUN_080011c0",
            "FUN_0800124a",
            "FUN_08001256",
            "FUN_08001420",
            "FUN_08001440",
            "FUN_08001460",
            "FUN_080014ec",
            "FUN_08001578",
            "FUN_080015bc",
            "FUN_0800160e",
            "FUN_0800165a",
            "FUN_08001684",
            "FUN_0800171a",
            "FUN_08001864",
            "FUN_08001904",
            "FUN_080019a0",
            "FUN_08001ab0",
            "FUN_08001bfc",
            "FUN_08001d00",
            "FUN_08001e68",
            "FUN_08001f9c",
            "FUN_0800201c",
            "FUN_080023b4",
            "FUN_08002488",
            "FUN_080025e0",
            "FUN_080025ec",
            "FUN_0800260c",
            "FUN_0800262c",
            "FUN_0800268e",
            "FUN_080026ce",
            "FUN_08002848",
            "FUN_08002864",
            "FUN_080028d4",
            "FUN_080028f0",
            "FUN_08002940",
            "FUN_0800295c",
            "FUN_080029c8",
            "FUN_08002d0c",
            "FUN_08002d72",
            "FUN_08002dd0",
            "FUN_08002eb2",
            "FUN_08002efa",
            "FUN_08002f4c",
            "FUN_08002f66",
            "FUN_08002ffc",
            "FUN_0800312c",
            "FUN_08003138",
            "FUN_0800314e",
            "FUN_0800316c",
            "FUN_0800318c",
            "FUN_080031fc",
            "FUN_08003380",
            "FUN_0800339c",
            "FUN_080033c8",
            "FUN_080033d8",
            "FUN_0800340c",
            "FUN_08003414",
            "FUN_0800346c",
            "FUN_08003476",
            "FUN_08003486",
            "FUN_080034b6",
            "FUN_080034ce",
            "FUN_080034da",
            "FUN_080034f4",
            "FUN_08003506",
            "FUN_0800351e",
            "FUN_0800352e",
            "FUN_0800354a",
            "FUN_0800355e",
            "FUN_08003582",
            "FUN_08003594",
            "FUN_080035bc",
            "FUN_080035fc",
            "FUN_08003750",
            "FUN_08003754",
            "FUN_0800376e",
            "FUN_0800377c",
            "FUN_0800387c",
            "FUN_08003880",
            "FUN_080038d0",
            "FUN_08003900",
            "FUN_08003978",
            "FUN_08003cc8",
            "FUN_08003d18",
            "FUN_08003dd0",
            "FUN_08003df4",
            "FUN_08003e18",
            "FUN_08003e54",
            "FUN_08003eac",
            "FUN_08003f00",
            "FUN_08003f24",
            "FUN_08003f48",
            "FUN_08004094",
            "FUN_080040d0",
            "FUN_080040d6",
            "FUN_080040e0",
            "FUN_080040e4",
            "FUN_080040e8",
            "FUN_080040ec",
            "FUN_080040f8",
            "FUN_080040fc",
            "FUN_0800410c",
            "FUN_08004110",
            "FUN_080041bc",
            "FUN_08004204",
            "FUN_08004240",
            "FUN_080042ac",
            "FUN_080042e8",
            "FUN_08004364",
            "FUN_08004388",
            "FUN_08004444",
            "FUN_08004460",
            "FUN_0800447c",
            "FUN_080044d8",
            "FUN_08004544",
            "FUN_08004560",
            "FUN_08004640",
            "FUN_08004648",
            "FUN_08004658",
            "FUN_08004678",
            "FUN_080046b4",
            "FUN_080047c0",
            "FUN_080047d0",
            "FUN_080047fe",
            "FUN_08004808",
            "FUN_08004844",
            "FUN_08004860",
            "FUN_08004884",
            "FUN_080048cc",
            "FUN_080048dc",
            "FUN_08004978",
            "FUN_08004a34",
            "FUN_08004a60",
            "FUN_08004a84",
            "FUN_08004cb0",
            "FUN_08004d9c",
            "FUN_08004fdc",
            "FUN_0800500c",
            "FUN_080050d0",
            "FUN_080051ac",
            "FUN_080052cc",
            "FUN_0800532c",
            "FUN_08005374",
            "FUN_080053a0",
            "FUN_08005400",
            "FUN_080054b4",
            "FUN_080054fc",
            "FUN_080055d0",
            "thunk_FUN_0800410c",
            "FUN_08005608",
            "FUN_0800562a",
            "FUN_08005662",
            "FUN_080056d4",
            "FUN_080056f8",
            "FUN_08005718",
            "FUN_0800573c",
            "FUN_08005760"
        ]
    ],
    "locked_functions": []
}