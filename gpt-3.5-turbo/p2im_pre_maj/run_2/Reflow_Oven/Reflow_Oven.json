{
    "functions": {
        "FUN_0800010c": {
            "entrypoint": "0x0800010c",
            "current_name": "initialize_flag_if_unset_0800010c",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08000118) */\n\nundefined4 initializeFlagIfUnset_0800010c(undefined4 inputParameter)\n\n{\n  if ((char)DAT_20000160 == '\\0') {\n    DAT_20000160._0_1_ = '\\x01';\n  }\n  return inputParameter;\n}\n\n",
            "renaming": {
                "FUN_0800010c": "initialize_flag_if_unset_0800010c",
                "param_1": "inputParameter"
            },
            "calling": [],
            "called": [
                "FUN_08007328"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000178": {
            "entrypoint": "0x08000178",
            "current_name": "find_string_length_08000178",
            "code": "\nchar * find_string_length_08000178(char *input_string)\n\n{\n  char current_char;\n  char *next_character;\n  char *current_character;\n  \n  current_character = input_string;\n  do {\n    next_character = current_character + 1;\n    current_char = *current_character;\n    current_character = next_character;\n  } while (current_char != '\\0');\n  return next_character + (-1 - (int)input_string);\n}\n\n",
            "renaming": {
                "FUN_08000178": "find_string_length_08000178",
                "param_1": "input_string",
                "pcVar2": "next_character",
                "pcVar3": "current_character",
                "cVar1": "current_char"
            },
            "calling": [
                "FUN_08005c96",
                "FUN_08005ce8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000190": {
            "entrypoint": "0x08000190",
            "current_name": "calculate_result_08000190",
            "code": "\nulonglong calculate_result_08000190(uint input_1,uint input_2,uint input_3,uint input_4)\n\n{\n  int temp_1;\n  byte temp_2;\n  uint temp_3;\n  uint temp_4;\n  uint temp_5;\n  uint temp_6;\n  uint temp_7;\n  int temp_8;\n  uint temp_9;\n  uint temp_10;\n  uint temp_11;\n  uint temp_12;\n  bool flag_1;\n  bool flag_2;\n  bool flag_3;\n  \n  temp_6 = input_4 ^ 0x80000000;\n  temp_9 = input_2 << 1;\n  input_4 = input_4 << 1;\n  flag_1 = ((input_2 ^ temp_6) & 0x7fffffff) == 0;\n  flag_2 = flag_1 && input_1 == input_3;\n  if (!flag_1 || input_1 != input_3) {\n    flag_2 = (temp_9 | input_1) == 0;\n  }\n  if (!flag_2) {\n    flag_2 = (input_4 | input_3) == 0;\n  }\n  temp_8 = (int)temp_9 >> 0x15;\n  if (!flag_2) {\n    flag_2 = temp_8 == -1;\n  }\n  temp_1 = (int)input_4 >> 0x15;\n  if (!flag_2) {\n    flag_2 = temp_1 == -1;\n  }\n  if (flag_2) {\n    if (temp_8 == -1 || temp_1 == -1) {\n      temp_9 = temp_6;\n      temp_11 = input_3;\n      if (temp_8 == -1) {\n        temp_9 = input_2;\n        temp_11 = input_1;\n      }\n      if (temp_8 != -1 || temp_1 != -1) {\n        input_3 = temp_11;\n        temp_6 = temp_9;\n      }\n      flag_2 = (temp_11 | temp_9 << 0xc) == 0;\n      if (flag_2) {\n        flag_2 = (input_3 | temp_6 << 0xc) == 0;\n      }\n      if (flag_2) {\n        flag_2 = temp_9 == temp_6;\n      }\n      if (!flag_2) {\n        temp_9 = temp_9 | 0x80000;\n      }\n      return CONCAT44(temp_9,temp_11);\n    }\n    if (((input_2 ^ temp_6) & 0x7fffffff) != 0 || input_1 != input_3) {\n      if ((temp_9 | input_1) == 0) {\n        input_1 = input_3;\n        input_2 = temp_6;\n      }\n      return CONCAT44(input_2,input_1);\n    }\n    if (input_2 != temp_6) {\n      return 0;\n    }\n    if (temp_9 >> 0x15 == 0) {\n      flag_2 = (input_1 & 0x80000000) != 0;\n      temp_6 = input_2 * 2 + (uint)flag_2;\n      if (CARRY4(input_2,input_2) || CARRY4(input_2 * 2,(uint)flag_2)) {\n        temp_6 = temp_6 | 0x80000000;\n      }\n      return CONCAT44(temp_6,input_1 << 1);\n    }\n    if (temp_9 < 0xffc00000) {\n      return CONCAT44(input_2 + 0x100000,input_1);\n    }\n    input_2 = input_2 & 0x80000000;\nLAB_080003d4:\n    return (ulonglong)(input_2 | 0x7ff00000) << 0x20;\n  }\n  temp_9 = temp_9 >> 0x15;\n  input_4 = input_4 >> 0x15;\n  temp_11 = input_4 - temp_9;\n  flag_2 = temp_11 != 0;\n  if (input_4 < temp_9) {\n    temp_11 = -temp_11;\n  }\n  temp_10 = input_1;\n  temp_7 = input_2;\n  if (flag_2 && temp_9 <= input_4) {\n    temp_9 = temp_9 + temp_11;\n    temp_10 = input_3;\n    temp_7 = temp_6;\n    input_3 = input_1;\n    temp_6 = input_2;\n  }\n  if (0x36 < temp_11) {\n    return CONCAT44(temp_7,temp_10);\n  }\n  temp_4 = temp_7 & 0xfffff | 0x100000;\n  if ((temp_7 & 0x80000000) != 0) {\n    flag_2 = temp_10 != 0;\n    temp_10 = -temp_10;\n    temp_4 = -temp_4 - (uint)flag_2;\n  }\n  temp_7 = temp_6 & 0xfffff | 0x100000;\n  if ((temp_6 & 0x80000000) != 0) {\n    flag_2 = input_3 != 0;\n    input_3 = -input_3;\n    temp_7 = -temp_7 - (uint)flag_2;\n  }\n  if (temp_9 == temp_11) {\n    temp_7 = temp_7 ^ 0x100000;\n    if (temp_9 == 0) {\n      temp_4 = temp_4 ^ 0x100000;\n      temp_9 = 1;\n    }\n    else {\n      temp_11 = temp_11 - 1;\n    }\n  }\n  temp_6 = -temp_11 + 0x20;\n  if ((int)temp_11 < 0x21) {\n    temp_12 = input_3 << (temp_6 & 0xff);\n    input_3 = input_3 >> (temp_11 & 0xff);\n    temp_3 = temp_10 + input_3;\n    temp_5 = temp_7 << (temp_6 & 0xff);\n    temp_6 = temp_3 + temp_5;\n    temp_4 = temp_4 + CARRY4(temp_10,input_3) + ((int)temp_7 >> (temp_11 & 0xff)) +\n            (uint)CARRY4(temp_3,temp_5);\n  }\n  else {\n    temp_12 = temp_7 << (-temp_11 + 0x40 & 0xff);\n    if (input_3 != 0) {\n      temp_12 = temp_12 | 2;\n    }\n    temp_7 = (int)temp_7 >> (temp_11 - 0x20 & 0xff);\n    temp_6 = temp_10 + temp_7;\n    temp_4 = temp_4 + ((int)temp_7 >> 0x1f) + (uint)CARRY4(temp_10,temp_7);\n  }\n  input_2 = temp_4 & 0x80000000;\n  temp_11 = temp_4;\n  if ((int)temp_4 < 0) {\n    flag_2 = temp_12 == 0;\n    temp_12 = -temp_12;\n    temp_11 = -temp_6;\n    temp_6 = -(uint)!flag_2 - temp_6;\n    temp_11 = -(uint)(flag_2 <= temp_11) - temp_4;\n  }\n  if (0xfffff < temp_11) {\n    temp_10 = temp_9 - 1;\n    if (0x1fffff < temp_11) {\n      temp_10 = temp_11 & 1;\n      temp_11 = temp_11 >> 1;\n      temp_2 = (byte)temp_6;\n      temp_6 = (uint)(temp_10 != 0) << 0x1f | temp_6 >> 1;\n      temp_12 = (uint)(temp_2 & 1) << 0x1f | temp_12 >> 1;\n      temp_10 = temp_9;\n      if (0xffbfffff < temp_9 * 0x200000) goto LAB_080003d4;\n    }\nLAB_080002a0:\n    flag_2 = 0x7fffffff < temp_12;\n    if (temp_12 == 0x80000000) {\n      flag_2 = (temp_6 & 1) != 0;\n    }\n    return CONCAT44(temp_11 + temp_10 * 0x100000 + (uint)CARRY4(temp_6,(uint)flag_2) | input_2,\n                    temp_6 + flag_2);\n  }\n  flag_1 = (temp_12 & 0x80000000) != 0;\n  temp_12 = temp_12 << 1;\n  temp_10 = temp_6 * 2;\n  flag_2 = CARRY4(temp_6,temp_6);\n  temp_6 = temp_6 * 2 + (uint)flag_1;\n  temp_11 = temp_11 * 2 + (uint)(flag_2 || CARRY4(temp_10,(uint)flag_1));\n  temp_10 = temp_9 - 2;\n  if ((temp_11 & 0x100000) != 0) goto LAB_080002a0;\n  temp_7 = temp_6;\n  temp_9 = temp_11;\n  if (temp_11 == 0) {\n    temp_7 = 0;\n    temp_9 = temp_6;\n  }\n  temp_8 = LZCOUNT(temp_9);\n  if (temp_11 == 0) {\n    temp_8 = temp_8 + 0x20;\n  }\n  temp_11 = temp_8 - 0xb;\n  flag_3 = SBORROW4(temp_11,0x20);\n  temp_6 = temp_8 - 0x2b;\n  flag_2 = (int)temp_6 < 0;\n  flag_1 = temp_6 == 0;\n  if ((int)temp_11 < 0x20) {\n    flag_3 = SCARRY4(temp_6,0xc);\n    temp_8 = temp_8 + -0x1f;\n    flag_2 = temp_8 < 0;\n    flag_1 = temp_8 == 0;\n    temp_6 = temp_11;\n    if (!flag_1 && flag_2 == flag_3) {\n      temp_7 = temp_9 << (temp_11 & 0xff);\n      temp_9 = temp_9 >> (0xcU - temp_8 & 0xff);\n      goto LAB_08000318;\n    }\n  }\n  if (flag_1 || flag_2 != flag_3) {\n    temp_12 = 0x20 - temp_6;\n  }\n  temp_9 = temp_9 << (temp_6 & 0xff);\n  if (flag_1 || flag_2 != flag_3) {\n    temp_9 = temp_9 | temp_7 >> (temp_12 & 0xff);\n  }\n  if (flag_1 || flag_2 != flag_3) {\n    temp_7 = temp_7 << (temp_6 & 0xff);\n  }\nLAB_08000318:\n  if ((int)temp_11 <= (int)temp_10) {\n    return CONCAT44(temp_9 + (temp_10 - temp_11) * 0x100000 | input_2,temp_7);\n  }\n  temp_6 = ~(temp_10 - temp_11);\n  if ((int)temp_6 < 0x1f) {\n    temp_8 = temp_6 - 0x13;\n    if (temp_8 != 0 && temp_8 < 0 == SCARRY4(temp_6 - 0x1f,0xc)) {\n      return CONCAT44(temp_4,temp_7 >> (0x20 - (0xcU - temp_8) & 0xff) | temp_9 << (0xcU - temp_8 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    temp_6 = temp_6 + 1;\n    return CONCAT44(input_2 | temp_9 >> (temp_6 & 0xff),\n                    temp_7 >> (temp_6 & 0xff) | temp_9 << (0x20 - temp_6 & 0xff));\n  }\n  return CONCAT44(temp_4,temp_9 >> (temp_6 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_08000190": "calculate_result_08000190",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "iVar1": "temp_1",
                "bVar2": "temp_2",
                "uVar3": "temp_3",
                "uVar4": "temp_4",
                "uVar5": "temp_5",
                "uVar6": "temp_6",
                "uVar7": "temp_7",
                "iVar8": "temp_8",
                "uVar9": "temp_9",
                "uVar10": "temp_10",
                "uVar11": "temp_11",
                "uVar12": "temp_12",
                "bVar13": "flag_1",
                "bVar14": "flag_2",
                "bVar15": "flag_3"
            },
            "calling": [
                "FUN_080016b4",
                "FUN_08005da8",
                "FUN_08001814",
                "FUN_08001a66"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000194": {
            "entrypoint": "0x08000194",
            "current_name": "perform_calculation_08000194",
            "code": "\nulonglong performCalculation_08000194(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int shiftedRight1;\n  byte byteValue;\n  uint maskValue;\n  uint maskValue2;\n  uint maskedParam2;\n  int shiftedRight2;\n  uint shiftedParam2;\n  uint shiftedParam4;\n  uint shiftedInput2;\n  uint shiftedInput4;\n  uint shiftedInput1;\n  uint shiftedInput3;\n  bool isEqual;\n  bool isEqualAndZero;\n  bool isGreaterThanOrEqual;\n  \n  shiftedParam2 = input2 << 1;\n  shiftedInput2 = input4 << 1;\n  isEqual = ((input2 ^ input4) & 0x7fffffff) == 0;\n  isEqualAndZero = isEqual && input1 == input3;\n  if (!isEqual || input1 != input3) {\n    isEqualAndZero = (shiftedParam2 | input1) == 0;\n  }\n  if (!isEqualAndZero) {\n    isEqualAndZero = (shiftedInput2 | input3) == 0;\n  }\n  shiftedRight2 = (int)shiftedParam2 >> 0x15;\n  if (!isEqualAndZero) {\n    isEqualAndZero = shiftedRight2 == -1;\n  }\n  shiftedRight1 = (int)shiftedInput2 >> 0x15;\n  if (!isEqualAndZero) {\n    isEqualAndZero = shiftedRight1 == -1;\n  }\n  if (isEqualAndZero) {\n    if (shiftedRight2 == -1 || shiftedRight1 == -1) {\n      shiftedInput2 = input4;\n      shiftedParam2 = input3;\n      if (shiftedRight2 == -1) {\n        shiftedInput2 = input2;\n        shiftedParam2 = input1;\n      }\n      if (shiftedRight2 != -1 || shiftedRight1 != -1) {\n        input3 = shiftedParam2;\n        input4 = shiftedInput2;\n      }\n      isEqualAndZero = (shiftedParam2 | shiftedInput2 << 0xc) == 0;\n      if (isEqualAndZero) {\n        isEqualAndZero = (input3 | input4 << 0xc) == 0;\n      }\n      if (isEqualAndZero) {\n        isEqualAndZero = shiftedInput2 == input4;\n      }\n      if (!isEqualAndZero) {\n        shiftedInput2 = shiftedInput2 | 0x80000;\n      }\n      return CONCAT44(shiftedInput2,shiftedParam2);\n    }\n    if (((input2 ^ input4) & 0x7fffffff) != 0 || input1 != input3) {\n      if ((shiftedParam2 | input1) == 0) {\n        input1 = input3;\n        input2 = input4;\n      }\n      return CONCAT44(input2,input1);\n    }\n    if (input2 != input4) {\n      return 0;\n    }\n    if (shiftedParam2 >> 0x15 == 0) {\n      isEqualAndZero = (input1 & 0x80000000) != 0;\n      shiftedInput2 = input2 * 2 + (uint)isEqualAndZero;\n      if (CARRY4(input2,input2) || CARRY4(input2 * 2,(uint)isEqualAndZero)) {\n        shiftedInput2 = shiftedInput2 | 0x80000000;\n      }\n      return CONCAT44(shiftedInput2,input1 << 1);\n    }\n    if (shiftedParam2 < 0xffc00000) {\n      return CONCAT44(input2 + 0x100000,input1);\n    }\n    input2 = input2 & 0x80000000;\nLAB_080003d4:\n    return (ulonglong)(input2 | 0x7ff00000) << 0x20;\n  }\n  shiftedParam2 = shiftedParam2 >> 0x15;\n  shiftedInput2 = shiftedInput2 >> 0x15;\n  shiftedInput4 = shiftedInput2 - shiftedParam2;\n  isEqualAndZero = shiftedInput4 != 0;\n  if (shiftedInput2 < shiftedParam2) {\n    shiftedInput4 = -shiftedInput4;\n  }\n  shiftedParam4 = input1;\n  maskedParam2 = input2;\n  if (isEqualAndZero && shiftedParam2 <= shiftedInput2) {\n    shiftedParam2 = shiftedParam2 + shiftedInput4;\n    shiftedParam4 = input3;\n    maskedParam2 = input4;\n    input3 = input1;\n    input4 = input2;\n  }\n  if (0x36 < shiftedInput4) {\n    return CONCAT44(maskedParam2,shiftedParam4);\n  }\n  shiftedInput2 = maskedParam2 & 0xfffff | 0x100000;\n  if ((maskedParam2 & 0x80000000) != 0) {\n    isEqualAndZero = shiftedParam4 != 0;\n    shiftedParam4 = -shiftedParam4;\n    shiftedInput2 = -shiftedInput2 - (uint)isEqualAndZero;\n  }\n  maskedParam2 = input4 & 0xfffff | 0x100000;\n  if ((input4 & 0x80000000) != 0) {\n    isEqualAndZero = input3 != 0;\n    input3 = -input3;\n    maskedParam2 = -maskedParam2 - (uint)isEqualAndZero;\n  }\n  if (shiftedParam2 == shiftedInput4) {\n    maskedParam2 = maskedParam2 ^ 0x100000;\n    if (shiftedParam2 == 0) {\n      shiftedInput2 = shiftedInput2 ^ 0x100000;\n      shiftedParam2 = 1;\n    }\n    else {\n      shiftedInput4 = shiftedInput4 - 1;\n    }\n  }\n  shiftedInput3 = -shiftedInput4 + 0x20;\n  if ((int)shiftedInput4 < 0x21) {\n    shiftedInput1 = input3 << (shiftedInput3 & 0xff);\n    input3 = input3 >> (shiftedInput4 & 0xff);\n    maskValue = shiftedParam4 + input3;\n    maskValue2 = maskedParam2 << (shiftedInput3 & 0xff);\n    shiftedInput3 = maskValue + maskValue2;\n    shiftedInput2 = shiftedInput2 + CARRY4(shiftedParam4,input3) + ((int)maskedParam2 >> (shiftedInput4 & 0xff)) +\n            (uint)CARRY4(maskValue,maskValue2);\n  }\n  else {\n    shiftedInput1 = maskedParam2 << (-shiftedInput4 + 0x40 & 0xff);\n    if (input3 != 0) {\n      shiftedInput1 = shiftedInput1 | 2;\n    }\n    maskedParam2 = (int)maskedParam2 >> (shiftedInput4 - 0x20 & 0xff);\n    shiftedInput3 = shiftedParam4 + maskedParam2;\n    shiftedInput2 = shiftedInput2 + ((int)maskedParam2 >> 0x1f) + (uint)CARRY4(shiftedParam4,maskedParam2);\n  }\n  input2 = shiftedInput2 & 0x80000000;\n  shiftedInput4 = shiftedInput2;\n  if ((int)shiftedInput2 < 0) {\n    isEqualAndZero = shiftedInput1 == 0;\n    shiftedInput1 = -shiftedInput1;\n    shiftedInput4 = -shiftedInput3;\n    shiftedInput3 = -(uint)!isEqualAndZero - shiftedInput3;\n    shiftedInput4 = -(uint)(isEqualAndZero <= shiftedInput4) - shiftedInput2;\n  }\n  if (0xfffff < shiftedInput4) {\n    shiftedParam4 = shiftedParam2 - 1;\n    if (0x1fffff < shiftedInput4) {\n      shiftedInput2 = shiftedInput4 & 1;\n      shiftedInput4 = shiftedInput4 >> 1;\n      byteValue = (byte)shiftedInput3;\n      shiftedInput3 = (uint)(shiftedInput2 != 0) << 0x1f | shiftedInput3 >> 1;\n      shiftedInput1 = (uint)(byteValue & 1) << 0x1f | shiftedInput1 >> 1;\n      shiftedParam4 = shiftedParam2;\n      if (0xffbfffff < shiftedParam2 * 0x200000) goto LAB_080003d4;\n    }\nLAB_080002a0:\n    isEqualAndZero = 0x7fffffff < shiftedInput1;\n    if (shiftedInput1 == 0x80000000) {\n      isEqualAndZero = (shiftedInput3 & 1) != 0;\n    }\n    return CONCAT44(shiftedInput4 + shiftedParam4 * 0x100000 + (uint)CARRY4(shiftedInput3,(uint)isEqualAndZero) | input2,\n                    shiftedInput3 + isEqualAndZero);\n  }\n  isEqual = (shiftedInput1 & 0x80000000) != 0;\n  shiftedInput1 = shiftedInput1 << 1;\n  shiftedParam4 = shiftedInput3 * 2;\n  isEqualAndZero = CARRY4(shiftedInput3,shiftedInput3);\n  shiftedInput3 = shiftedInput3 * 2 + (uint)isEqual;\n  shiftedInput4 = shiftedInput4 * 2 + (uint)(isEqualAndZero || CARRY4(shiftedParam4,(uint)isEqual));\n  shiftedParam4 = shiftedParam2 - 2;\n  if ((shiftedInput4 & 0x100000) != 0) goto LAB_080002a0;\n  maskedParam2 = shiftedInput3;\n  shiftedParam2 = shiftedInput4;\n  if (shiftedInput4 == 0) {\n    maskedParam2 = 0;\n    shiftedParam2 = shiftedInput3;\n  }\n  shiftedRight2 = LZCOUNT(shiftedParam2);\n  if (shiftedInput4 == 0) {\n    shiftedRight2 = shiftedRight2 + 0x20;\n  }\n  shiftedInput3 = shiftedRight2 - 0xb;\n  isGreaterThanOrEqual = SBORROW4(shiftedInput3,0x20);\n  shiftedInput4 = shiftedRight2 - 0x2b;\n  isEqualAndZero = (int)shiftedInput4 < 0;\n  isEqual = shiftedInput4 == 0;\n  if ((int)shiftedInput3 < 0x20) {\n    isGreaterThanOrEqual = SCARRY4(shiftedInput4,0xc);\n    shiftedRight2 = shiftedRight2 + -0x1f;\n    isEqualAndZero = shiftedRight2 < 0;\n    isEqual = shiftedRight2 == 0;\n    shiftedInput4 = shiftedInput3;\n    if (!isEqual && isEqualAndZero == isGreaterThanOrEqual) {\n      maskedParam2 = shiftedParam2 << (shiftedInput3 & 0xff);\n      shiftedParam2 = shiftedParam2 >> (0xcU - shiftedRight2 & 0xff);\n      goto LAB_08000318;\n    }\n  }\n  if (isEqual || isEqualAndZero != isGreaterThanOrEqual) {\n    shiftedInput1 = 0x20 - shiftedInput4;\n  }\n  shiftedParam2 = shiftedParam2 << (shiftedInput4 & 0xff);\n  if (isEqual || isEqualAndZero != isGreaterThanOrEqual) {\n    shiftedParam2 = shiftedParam2 | maskedParam2 >> (shiftedInput1 & 0xff);\n  }\n  if (isEqual || isEqualAndZero != isGreaterThanOrEqual) {\n    maskedParam2 = maskedParam2 << (shiftedInput4 & 0xff);\n  }\nLAB_08000318:\n  if ((int)shiftedInput3 <= (int)shiftedParam4) {\n    return CONCAT44(shiftedParam2 + (shiftedParam4 - shiftedInput3) * 0x100000 | input2,maskedParam2);\n  }\n  shiftedInput4 = ~(shiftedParam4 - shiftedInput3);\n  if ((int)shiftedInput4 < 0x1f) {\n    shiftedRight2 = shiftedInput4 - 0x13;\n    if (shiftedRight2 != 0 && shiftedRight2 < 0 == SCARRY4(shiftedInput4 - 0x1f,0xc)) {\n      return CONCAT44(shiftedInput2,maskedParam2 >> (0x20 - (0xcU - shiftedRight2) & 0xff) | shiftedParam2 << (0xcU - shiftedRight2 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    shiftedInput4 = shiftedInput4 + 1;\n    return CONCAT44(input2 | shiftedParam2 >> (shiftedInput4 & 0xff),\n                    maskedParam2 >> (shiftedInput4 & 0xff) | shiftedParam2 << (0x20 - shiftedInput4 & 0xff));\n  }\n  return CONCAT44(shiftedInput2,shiftedParam2 >> (shiftedInput4 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_08000194": "perform_calculation_08000194",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "shiftedRight1",
                "bVar2": "byteValue",
                "uVar3": "maskValue",
                "uVar4": "maskValue2",
                "uVar5": "maskedParam2",
                "iVar6": "shiftedRight2",
                "uVar7": "shiftedParam2",
                "uVar8": "shiftedParam4",
                "uVar9": "shiftedInput2",
                "uVar10": "shiftedInput4",
                "uVar11": "shiftedInput1",
                "uVar12": "shiftedInput3",
                "bVar13": "isEqual",
                "bVar14": "isEqualAndZero",
                "bVar15": "isGreaterThanOrEqual"
            },
            "calling": [
                "FUN_080016b4",
                "FUN_08005da8",
                "FUN_08000cd0",
                "FUN_080015f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800040c": {
            "entrypoint": "0x0800040c",
            "current_name": "shift_and_rotate_bits_0800040c",
            "code": "\nulonglong shiftAndRotateBits_0800040c(uint input)\n\n{\n  uint result1;\n  uint result2;\n  int numBits;\n  uint shiftAmount;\n  uint remainingBits;\n  bool isNegative;\n  bool isZero;\n  bool carryFlag;\n  \n  if (input == 0) {\n    return 0;\n  }\n  result1 = 0;\n  numBits = LZCOUNT(input);\n  shiftAmount = numBits + 0x15;\n  carryFlag = SBORROW4(shiftAmount,0x20);\n  result2 = numBits - 0xb;\n  isNegative = (int)result2 < 0;\n  isZero = result2 == 0;\n  if (shiftAmount < 0x20) {\n    carryFlag = SCARRY4(result2,0xc);\n    isNegative = false;\n    isZero = numBits + 1 == 0;\n    result2 = shiftAmount;\n    if (!isZero && carryFlag == false) {\n      result1 = input << shiftAmount;\n      input = input >> (0xcU - (numBits + 1) & 0xff);\n      goto endLabel;\n    }\n  }\n  if (isZero || isNegative != carryFlag) {\n    remainingBits = 0x20 - result2;\n  }\n  input = input << (result2 & 0xff);\n  if (isZero || isNegative != carryFlag) {\n    input = input | 0U >> (remainingBits & 0xff);\n  }\n  if (isZero || isNegative != carryFlag) {\n    result1 = 0 << (result2 & 0xff);\n  }\nendLabel:\n  if (shiftAmount < 0x433) {\n    return CONCAT44(input + (0x432 - shiftAmount) * 0x100000,result1);\n  }\n  result2 = ~(0x432 - shiftAmount);\n  if (0x1e < (int)result2) {\n    return (ulonglong)(input >> (result2 - 0x1f & 0xff));\n  }\n  numBits = result2 - 0x13;\n  if (numBits == 0 || numBits < 0 != SCARRY4(result2 - 0x1f,0xc)) {\n    result2 = result2 + 1;\n    return CONCAT44(input >> (result2 & 0xff),\n                    result1 >> (result2 & 0xff) | input << (0x20 - result2 & 0xff));\n  }\n  return (ulonglong)(result1 >> (0x20 - (0xcU - numBits) & 0xff) | input << (0xcU - numBits & 0xff));\n}\n\n",
            "renaming": {
                "FUN_0800040c": "shift_and_rotate_bits_0800040c",
                "param_1": "input",
                "uVar1": "result1",
                "uVar2": "result2",
                "iVar3": "numBits",
                "uVar4": "shiftAmount",
                "in_r12": "remainingBits",
                "bVar5": "isNegative",
                "bVar6": "isZero",
                "bVar7": "carryFlag",
                "LAB_08000318": "endLabel"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08001814",
                "FUN_08000cd0",
                "FUN_08001918",
                "FUN_080015f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800042c": {
            "entrypoint": "0x0800042c",
            "current_name": "bitwise_shift_0800042c",
            "code": "\nulonglong bitwiseShift_0800042c(uint input)\n\n{\n  uint shiftedBits;\n  uint absInput;\n  uint shiftAmount;\n  int leadingZeros;\n  uint shiftedValue;\n  uint signBit;\n  uint remainingBits;\n  bool isNegative;\n  bool isZero;\n  bool carryFlag;\n  \n  if (input == 0) {\n    return 0;\n  }\n  signBit = input & 0x80000000;\n  absInput = input;\n  if ((int)signBit < 0) {\n    absInput = -input;\n  }\n  shiftedBits = 0;\n  leadingZeros = LZCOUNT(absInput);\n  shiftedValue = leadingZeros + 0x15;\n  carryFlag = SBORROW4(shiftedValue,0x20);\n  shiftAmount = leadingZeros - 0xb;\n  isNegative = (int)shiftAmount < 0;\n  isZero = shiftAmount == 0;\n  if (shiftedValue < 0x20) {\n    carryFlag = SCARRY4(shiftAmount,0xc);\n    isNegative = false;\n    isZero = leadingZeros + 1 == 0;\n    shiftAmount = shiftedValue;\n    if (!isZero && carryFlag == false) {\n      shiftedBits = absInput << shiftedValue;\n      absInput = absInput >> (0xcU - (leadingZeros + 1) & 0xff);\n      goto LAB_08000318;\n    }\n  }\n  if (isZero || isNegative != carryFlag) {\n    remainingBits = 0x20 - shiftAmount;\n  }\n  absInput = absInput << (shiftAmount & 0xff);\n  if (isZero || isNegative != carryFlag) {\n    absInput = absInput | 0U >> (remainingBits & 0xff);\n  }\n  if (isZero || isNegative != carryFlag) {\n    shiftedBits = 0 << (shiftAmount & 0xff);\n  }\nLAB_08000318:\n  if (shiftedValue < 0x433) {\n    return CONCAT44(absInput + (0x432 - shiftedValue) * 0x100000 | signBit,shiftedBits);\n  }\n  shiftAmount = ~(0x432 - shiftedValue);\n  if (0x1e < (int)shiftAmount) {\n    return CONCAT44(input,absInput >> (shiftAmount - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  leadingZeros = shiftAmount - 0x13;\n  if (leadingZeros == 0 || leadingZeros < 0 != SCARRY4(shiftAmount - 0x1f,0xc)) {\n    shiftAmount = shiftAmount + 1;\n    return CONCAT44(signBit | absInput >> (shiftAmount & 0xff),\n                    shiftedBits >> (shiftAmount & 0xff) | absInput << (0x20 - shiftAmount & 0xff));\n  }\n  return CONCAT44(input,shiftedBits >> (0x20 - (0xcU - leadingZeros) & 0xff) | absInput << (0xcU - leadingZeros & 0xff))\n         & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800042c": "bitwise_shift_0800042c",
                "param_1": "input",
                "uVar1": "shiftedBits",
                "uVar2": "absInput",
                "uVar3": "shiftAmount",
                "iVar4": "leadingZeros",
                "uVar5": "shiftedValue",
                "uVar6": "signBit",
                "in_r12": "remainingBits",
                "bVar7": "isNegative",
                "bVar8": "isZero",
                "bVar9": "carryFlag"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0",
                "FUN_08001918"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080004f8": {
            "entrypoint": "0x080004f8",
            "current_name": "calculate_080004f8",
            "code": "\nulonglong calculate_080004f8(undefined4 input1,uint input2,uint input3,uint input4)\n\n{\n  ulonglong result;\n  longlong temp1;\n  uint temp2;\n  uint temp3;\n  int temp4;\n  uint temp5;\n  uint temp6;\n  uint temp7;\n  uint temp8;\n  bool flag1;\n  bool flag2;\n  bool flag3;\n  ulonglong combined_inputs;\n  \n  combined_inputs = CONCAT44(input2,input1);\n  temp7 = 0x7ff;\n  temp3 = input2 >> 0x14 & 0x7ff;\n  flag1 = temp3 == 0;\n  if (!flag1) {\n    temp6 = input4 >> 0x14 & 0x7ff;\n    flag1 = temp6 == 0;\n  }\n  if (!flag1) {\n    flag1 = temp3 == 0x7ff;\n  }\n  if (!flag1) {\n    flag1 = temp6 == 0x7ff;\n  }\n  if (flag1) {\n    combined_inputs = calculation_function_080006d4();\n  }\n  temp2 = (uint)(combined_inputs >> 0x20);\n  temp4 = temp3 + temp6;\n  temp3 = temp2 ^ input4;\n  temp2 = temp2 & ~(temp7 << 0x15);\n  input4 = input4 & ~(temp7 << 0x15);\n  flag1 = ((uint)combined_inputs | temp2 << 0xc) == 0;\n  if (!flag1) {\n    flag1 = (input3 | input4 << 0xc) == 0;\n  }\n  temp2 = temp2 | 0x100000;\n  input4 = input4 | 0x100000;\n  if (flag1) {\n    input3 = (uint)combined_inputs | input3;\n    input4 = (temp3 & 0x80000000 | temp2) ^ input4;\n    temp3 = temp7 >> 1;\n    flag3 = SBORROW4(temp4,temp3);\n    temp5 = temp4 - temp3;\n    flag1 = temp5 == 0;\n    temp2 = temp5;\n    if (!flag1 && (int)temp3 <= temp4) {\n      flag3 = SBORROW4(temp7,temp5);\n      temp2 = temp7 - temp5;\n      flag1 = temp7 == temp5;\n    }\n    if (!flag1 && (int)temp2 < 0 == flag3) {\n      input4 = input4 | temp5 * 0x100000;\n    }\n    if (!flag1 && (int)temp2 < 0 == flag3) {\n      return CONCAT44(input4,input3);\n    }\n    input4 = input4 | 0x100000;\n    temp7 = 0;\n    flag3 = SBORROW4(temp5,1);\n    temp5 = temp5 - 1;\n    flag1 = temp5 == 0;\n    temp3 = temp5;\n  }\n  else {\n    result = (combined_inputs & 0xffffffff) * (ulonglong)input3;\n    combined_inputs = (combined_inputs & 0xffffffff) * (ulonglong)input4 +\n             (ulonglong)temp2 * (ulonglong)input3 + (result >> 0x20);\n    temp8 = (uint)combined_inputs;\n    temp1 = (ulonglong)temp2 * (ulonglong)input4 + (combined_inputs >> 0x20);\n    temp7 = (uint)temp1;\n    temp2 = (uint)((ulonglong)temp1 >> 0x20);\n    if ((int)result != 0) {\n      temp8 = temp8 | 1;\n    }\n    temp5 = (temp4 + -0x3ff) - (uint)(temp2 < 0x200);\n    if (temp2 < 0x200) {\n      flag1 = (temp8 & 0x80000000) != 0;\n      temp8 = temp8 << 1;\n      temp1 = CONCAT44(temp2 * 2 + (uint)(CARRY4(temp7,temp7) || CARRY4(temp7 * 2,(uint)flag1)),\n                       temp7 * 2 + (uint)flag1);\n    }\n    input4 = temp3 & 0x80000000 | (int)((ulonglong)temp1 >> 0x20) << 0xb | (uint)temp1 >> 0x15;\n    input3 = (uint)temp1 << 0xb | temp8 >> 0x15;\n    temp7 = temp8 * 0x800;\n    flag2 = 0xfc < temp5;\n    flag3 = SBORROW4(temp5,0xfd);\n    temp2 = temp5 - 0xfd;\n    flag1 = temp2 == 0;\n    temp3 = temp2;\n    if (flag2 && !flag1) {\n      flag2 = 0x6ff < temp2;\n      flag3 = SBORROW4(temp2,0x700);\n      temp3 = temp5 - 0x7fd;\n      flag1 = temp2 == 0x700;\n    }\n    if (!flag2 || flag1) {\n      flag1 = 0x7fffffff < temp7;\n      if (temp7 == 0x80000000) {\n        flag1 = (temp8 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(input4 + temp5 * 0x100000 + (uint)CARRY4(input3,(uint)flag1),input3 + flag1\n                     );\n    }\n  }\n  if (!flag1 && (int)temp3 < 0 == flag3) {\n    return (ulonglong)(input4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  flag2 = SCARRY4(temp5,0x36);\n  flag1 = (int)(temp5 + 0x36) < 0;\n  flag3 = temp5 == 0xffffffca;\n  if (flag3 || flag1 != flag2) {\n    input3 = 0;\n  }\n  if (flag3 || flag1 != flag2) {\n    input4 = input4 & 0x80000000;\n  }\n  if (flag3 || flag1 != flag2) {\n    return CONCAT44(input4,input3);\n  }\n  temp3 = -temp5;\n  temp2 = temp3 - 0x20;\n  if (0x1f < (int)temp3) {\n    temp5 = input3 >> (temp2 & 0xff) | input4 << (0x20 - temp2 & 0xff);\n    temp3 = (input4 >> (temp2 & 0xff) & ~((input4 & 0x80000000) >> (temp2 & 0xff))) -\n            ((int)temp5 >> 0x1f);\n    if ((temp7 | input3 << (0x20 - temp2 & 0xff) | temp5 << 1) == 0) {\n      temp3 = temp3 & ~(temp5 >> 0x1f);\n    }\n    return CONCAT44(input4,temp3) & 0x80000000ffffffff;\n  }\n  temp4 = temp3 - 0x14;\n  if (temp4 == 0 || temp4 < 0 != SCARRY4(temp2,0xc)) {\n    temp8 = input3 << (temp5 + 0x20 & 0xff);\n    temp2 = input3 >> (temp3 & 0xff) | input4 << (temp5 + 0x20 & 0xff);\n    temp5 = temp2 + -((int)temp8 >> 0x1f);\n    if ((temp7 | temp8 << 1) == 0) {\n      temp5 = temp5 & ~(temp8 >> 0x1f);\n    }\n    return CONCAT44((input4 & 0x80000000) +\n                    ((input4 & 0x7fffffff) >> (temp3 & 0xff)) +\n                    (uint)CARRY4(temp2,-((int)temp8 >> 0x1f)),temp5);\n  }\n  temp3 = 0xc - temp4;\n  temp5 = input3 << (temp3 & 0xff);\n  temp3 = input3 >> (0x20 - temp3 & 0xff) | input4 << (temp3 & 0xff);\n  temp2 = temp3 + -((int)temp5 >> 0x1f);\n  if ((temp7 | temp5 << 1) == 0) {\n    temp2 = temp2 & ~(temp5 >> 0x1f);\n  }\n  return CONCAT44((input4 & 0x80000000) + (uint)CARRY4(temp3,-((int)temp5 >> 0x1f)),temp2);\n}\n\n",
            "renaming": {
                "FUN_080004f8": "calculate_080004f8",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result",
                "lVar2": "temp1",
                "uVar3": "temp2",
                "uVar4": "temp3",
                "iVar5": "temp4",
                "uVar6": "temp5",
                "unaff_r5": "temp6",
                "uVar7": "temp7",
                "uVar8": "temp8",
                "bVar9": "flag1",
                "bVar10": "flag2",
                "bVar11": "flag3",
                "uVar12": "combined_inputs"
            },
            "calling": [
                "FUN_080016b4",
                "FUN_08005da8",
                "FUN_08001814",
                "FUN_08001918",
                "FUN_080015f8"
            ],
            "called": [
                "FUN_080006d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080006d4": {
            "entrypoint": "0x080006d4",
            "current_name": "calculation_function_080006d4",
            "code": "\nulonglong calculationFunction_080006d4(uint input1,uint input2,uint input3,uint input4)\n\n{\n  uint bit1;\n  uint bit2;\n  uint bit3;\n  uint bit4;\n  uint bit5;\n  bool isZero;\n  \n  bit3 = bit5 & input4 >> 0x14;\n  if (bit2 != bit5 && bit3 != bit5) {\n    isZero = (input1 | input2 << 1) == 0;\n    if (!isZero) {\n      isZero = (input3 | input4 << 1) == 0;\n    }\n    if (isZero) {\n      return (ulonglong)((input2 ^ input4) & 0x80000000) << 0x20;\n    }\n    if (bit2 == 0) {\n      bit4 = input2 & 0x80000000;\n      do {\n        bit1 = input1 & 0x80000000;\n        input1 = input1 << 1;\n        input2 = input2 * 2 + (uint)(bit1 != 0);\n      } while ((input2 & 0x100000) == 0);\n      input2 = input2 | bit4;\n      if (bit3 != 0) {\n        return CONCAT44(input2,input1);\n      }\n    }\n    do {\n      bit3 = input3 & 0x80000000;\n      input3 = input3 << 1;\n      input4 = input4 * 2 + (uint)(bit3 != 0);\n    } while ((input4 & 0x100000) == 0);\n    return CONCAT44(input2,input1);\n  }\n  isZero = (input1 | input2 << 1) == 0;\n  if (isZero) {\n    input2 = input4;\n    input1 = input3;\n  }\n  if (!isZero) {\n    isZero = (input3 | input4 << 1) == 0;\n  }\n  bit4 = input2;\n  if (((!isZero) && ((bit2 != bit5 || ((input1 | input2 << 0xc) == 0)))) &&\n     ((bit3 != bit5 || (input1 = input3, bit4 = input4, (input3 | input4 << 0xc) == 0)))) {\n    return (ulonglong)((input2 ^ input4) & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  return CONCAT44(bit4,input1) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_080006d4": "calculation_function_080006d4",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "bit1",
                "unaff_r4": "bit2",
                "uVar2": "bit3",
                "uVar3": "bit4",
                "in_r12": "bit5",
                "bVar4": "isZero"
            },
            "calling": [
                "FUN_080004f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800074c": {
            "entrypoint": "0x0800074c",
            "current_name": "calculate_floating_point_0800074c",
            "code": "\nulonglong calculateFloatingPoint_0800074c(undefined4 significand,uint exponent,uint sourceExponent,uint sourceSignificand)\n\n{\n  uint temp1;\n  uint temp2;\n  uint shiftedSourceExponent;\n  uint shiftedSourceSignificand;\n  uint comparisonResult;\n  uint shiftedSignificand;\n  uint significandExponent;\n  int difference;\n  uint adjustedExponent;\n  uint unaff_r5;\n  uint comparisonResult2;\n  uint result;\n  uint temp3;\n  uint temp4;\n  bool condition1;\n  bool condition2;\n  bool condition3;\n  undefined8 bitwiseConversion;\n  \n  bitwiseConversion = CONCAT44(exponent,significand);\n  temp4 = 0x7ff;\n  significandExponent = exponent >> 0x14 & 0x7ff;\n  condition1 = significandExponent == 0;\n  if (!condition1) {\n    unaff_r5 = sourceSignificand >> 0x14 & 0x7ff;\n    condition1 = unaff_r5 == 0;\n  }\n  if (!condition1) {\n    condition1 = significandExponent == 0x7ff;\n  }\n  if (!condition1) {\n    condition1 = unaff_r5 == 0x7ff;\n  }\n  if (condition1) {\n    bitwiseConversion = bitwise_conversion_080008ba();\n  }\n  adjustedExponent = (uint)((ulonglong)bitwiseConversion >> 0x20);\n  result = (uint)bitwiseConversion;\n  difference = significandExponent - unaff_r5;\n  if ((sourceExponent | sourceSignificand << 0xc) == 0) {\n    significandExponent = (adjustedExponent ^ sourceSignificand) & 0x80000000 | adjustedExponent & 0xfffff;\n    condition3 = SCARRY4(difference,temp4 >> 1);\n    adjustedExponent = difference + (temp4 >> 1);\n    condition1 = (int)adjustedExponent < 0;\n    condition2 = adjustedExponent == 0;\n    if (!condition2 && condition1 == condition3) {\n      condition3 = SBORROW4(temp4,adjustedExponent);\n      condition1 = (int)(temp4 - adjustedExponent) < 0;\n      condition2 = temp4 == adjustedExponent;\n    }\n    if (!condition2 && condition1 == condition3) {\n      significandExponent = significandExponent | adjustedExponent * 0x100000;\n    }\n    if (!condition2 && condition1 == condition3) {\n      return CONCAT44(significandExponent,result);\n    }\n    significandExponent = significandExponent | 0x100000;\n    temp4 = 0;\n    condition2 = SBORROW4(adjustedExponent,1);\n    adjustedExponent = adjustedExponent - 1;\n    condition1 = adjustedExponent == 0;\n    shiftedSourceExponent = adjustedExponent;\n  }\n  else {\n    shiftedSourceExponent = (sourceSignificand << 0xc) >> 4 | 0x10000000 | sourceExponent >> 0x18;\n    temp4 = sourceExponent << 8;\n    comparisonResult2 = (adjustedExponent << 0xc) >> 4 | 0x10000000 | result >> 0x18;\n    result = result * 0x100;\n    significandExponent = (adjustedExponent ^ sourceSignificand) & 0x80000000;\n    condition1 = shiftedSourceExponent <= comparisonResult2;\n    if (comparisonResult2 == shiftedSourceExponent) {\n      condition1 = temp4 <= result;\n    }\n    difference = difference + (uint)condition1;\n    adjustedExponent = difference + 0x3fd;\n    if (condition1 == false) {\n      shiftedSourceExponent = shiftedSourceExponent >> 1;\n      temp4 = (uint)((sourceExponent >> 0x18 & 1) != 0) << 0x1f | temp4 >> 1;\n    }\n    temp3 = result - temp4;\n    comparisonResult2 = (comparisonResult2 - shiftedSourceExponent) - (uint)(result < temp4);\n    shiftedSourceSignificand = shiftedSourceExponent >> 1;\n    temp1 = (uint)((shiftedSourceExponent & 1) != 0) << 0x1f | temp4 >> 1;\n    result = 0x100000;\n    shiftedSourceExponent = 0x80000;\n    while( true ) {\n      condition1 = temp1 <= temp3;\n      if (shiftedSourceSignificand < comparisonResult2 || comparisonResult2 - shiftedSourceSignificand < (uint)condition1) {\n        temp3 = temp3 - temp1;\n        result = result | shiftedSourceExponent;\n        comparisonResult2 = (comparisonResult2 - shiftedSourceSignificand) - (uint)!condition1;\n      }\n      comparisonResult = shiftedSourceSignificand >> 1;\n      temp1 = (uint)((shiftedSourceSignificand & 1) != 0) << 0x1f | temp1 >> 1;\n      condition2 = temp1 <= temp3;\n      condition1 = comparisonResult2 - comparisonResult < (uint)condition2;\n      temp4 = comparisonResult2;\n      if (comparisonResult < comparisonResult2 || condition1) {\n        temp3 = temp3 - temp1;\n        temp4 = (comparisonResult2 - comparisonResult) - (uint)!condition2;\n      }\n      if (comparisonResult < comparisonResult2 || condition1) {\n        result = result | shiftedSourceExponent >> 1;\n      }\n      comparisonResult2 = shiftedSourceSignificand >> 2;\n      temp2 = (uint)((comparisonResult & 1) != 0) << 0x1f | temp1 >> 1;\n      condition2 = temp2 <= temp3;\n      condition1 = temp4 - comparisonResult2 < (uint)condition2;\n      comparisonResult = temp4;\n      if (comparisonResult2 < temp4 || condition1) {\n        temp3 = temp3 - temp2;\n        comparisonResult = (temp4 - comparisonResult2) - (uint)!condition2;\n      }\n      if (comparisonResult2 < temp4 || condition1) {\n        result = result | shiftedSourceExponent >> 2;\n      }\n      shiftedSignificand = shiftedSourceSignificand >> 3;\n      temp1 = (uint)((comparisonResult2 & 1) != 0) << 0x1f | temp2 >> 1;\n      condition2 = temp1 <= temp3;\n      condition1 = comparisonResult - shiftedSignificand < (uint)condition2;\n      comparisonResult2 = comparisonResult;\n      if (shiftedSignificand < comparisonResult || condition1) {\n        temp3 = temp3 - temp1;\n        comparisonResult2 = (comparisonResult - shiftedSignificand) - (uint)!condition2;\n      }\n      if (shiftedSignificand < comparisonResult || condition1) {\n        result = result | shiftedSourceExponent >> 3;\n      }\n      temp4 = comparisonResult2 | temp3;\n      if (temp4 == 0) break;\n      comparisonResult2 = comparisonResult2 << 4 | temp3 >> 0x1c;\n      temp3 = temp3 << 4;\n      shiftedSourceSignificand = shiftedSourceSignificand & 0xfffffff8 | temp1 >> 0x1d;\n      temp1 = (temp2 >> 1) << 3;\n      shiftedSourceExponent = shiftedSourceExponent >> 4;\n      if (shiftedSourceExponent == 0) {\n        shiftedSignificand = shiftedSourceSignificand;\n        if ((significandExponent & 0x100000) != 0) goto LAB_0800086a;\n        significandExponent = significandExponent | result;\n        result = 0;\n        shiftedSourceExponent = 0x80000000;\n      }\n    }\n    if ((significandExponent & 0x100000) == 0) {\n      significandExponent = significandExponent | result;\n      result = 0;\n    }\nLAB_0800086a:\n    condition3 = 0xfc < adjustedExponent;\n    condition2 = SBORROW4(adjustedExponent,0xfd);\n    shiftedSourceSignificand = difference + 0x300;\n    condition1 = shiftedSourceSignificand == 0;\n    shiftedSourceExponent = shiftedSourceSignificand;\n    if (condition3 && !condition1) {\n      condition3 = 0x6ff < shiftedSourceSignificand;\n      condition2 = SBORROW4(shiftedSourceSignificand,0x700);\n      shiftedSourceExponent = difference - 0x400;\n      condition1 = shiftedSourceSignificand == 0x700;\n    }\n    if (!condition3 || condition1) {\n      condition1 = shiftedSignificand <= comparisonResult2;\n      if (comparisonResult2 == shiftedSignificand) {\n        condition1 = temp1 <= temp3;\n      }\n      if (comparisonResult2 == shiftedSignificand && temp3 == temp1) {\n        condition1 = (result & 1) != 0;\n      }\n      return CONCAT44(significandExponent + adjustedExponent * 0x100000 + (uint)CARRY4(result,(uint)condition1),result + condition1);\n    }\n  }\n  if (!condition1 && (int)shiftedSourceExponent < 0 == condition2) {\n    return (ulonglong)(significandExponent & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  condition3 = SCARRY4(adjustedExponent,0x36);\n  condition1 = (int)(adjustedExponent + 0x36) < 0;\n  condition2 = adjustedExponent == 0xffffffca;\n  if (condition2 || condition1 != condition3) {\n    result = 0;\n  }\n  if (condition2 || condition1 != condition3) {\n    significandExponent = significandExponent & 0x80000000;\n  }\n  if (condition2 || condition1 != condition3) {\n    return CONCAT44(significandExponent,result);\n  }\n  shiftedSourceExponent = -adjustedExponent;\n  comparisonResult2 = shiftedSourceExponent - 0x20;\n  if (0x1f < (int)shiftedSourceExponent) {\n    shiftedSourceExponent = result >> (comparisonResult2 & 0xff) | significandExponent << (0x20 - comparisonResult2 & 0xff);\n    adjustedExponent = (significandExponent >> (comparisonResult2 & 0xff) & ~((significandExponent & 0x80000000) >> (comparisonResult2 & 0xff))) -\n            ((int)shiftedSourceExponent >> 0x1f);\n    if ((temp4 | result << (0x20 - comparisonResult2 & 0xff) | shiftedSourceExponent << 1) == 0) {\n      adjustedExponent = adjustedExponent & ~(shiftedSourceExponent >> 0x1f);\n    }\n    return CONCAT44(significandExponent,adjustedExponent) & 0x80000000ffffffff;\n  }\n  difference = shiftedSourceExponent - 0x14;\n  if (difference != 0 && difference < 0 == SCARRY4(comparisonResult2,0xc)) {\n    adjustedExponent = 0xc - difference;\n    shiftedSourceExponent = result << (adjustedExponent & 0xff);\n    result = result >> (0x20 - adjustedExponent & 0xff) | significandExponent << (adjustedExponent & 0xff);\n    adjustedExponent = result + -((int)shiftedSourceExponent >> 0x1f);\n    if ((temp4 | shiftedSourceExponent << 1) == 0) {\n      adjustedExponent = adjustedExponent & ~(shiftedSourceExponent >> 0x1f);\n    }\n    return CONCAT44((significandExponent & 0x80000000) + (uint)CARRY4(result,-((int)shiftedSourceExponent >> 0x1f)),adjustedExponent);\n  }\n  comparisonResult2 = result << (adjustedExponent + 0x20 & 0xff);\n  result = result >> (shiftedSourceExponent & 0xff) | significandExponent << (adjustedExponent + 0x20 & 0xff);\n  adjustedExponent = result + -((int)comparisonResult2 >> 0x1f);\n  if ((temp4 | comparisonResult2 << 1) == 0) {\n    adjustedExponent = adjustedExponent & ~(comparisonResult2 >> 0x1f);\n  }\n  return CONCAT44((significandExponent & 0x80000000) +\n                  ((significandExponent & 0x7fffffff) >> (shiftedSourceExponent & 0xff)) +\n                  (uint)CARRY4(result,-((int)comparisonResult2 >> 0x1f)),adjustedExponent);\n}\n\n",
            "renaming": {
                "FUN_0800074c": "calculate_floating_point_0800074c",
                "param_1": "significand",
                "param_2": "exponent",
                "param_3": "sourceExponent",
                "param_4": "sourceSignificand",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "uVar3": "shiftedSourceExponent",
                "uVar4": "shiftedSourceSignificand",
                "uVar5": "comparisonResult",
                "uVar6": "shiftedSignificand",
                "uVar7": "significandExponent",
                "iVar8": "difference",
                "uVar9": "adjustedExponent",
                "uVar10": "comparisonResult2",
                "uVar11": "result",
                "uVar12": "temp3",
                "uVar13": "temp4",
                "bVar14": "condition1",
                "bVar15": "condition2",
                "bVar16": "condition3",
                "uVar17": "bitwiseConversion"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08001814",
                "FUN_08001918",
                "FUN_080015f8"
            ],
            "called": [
                "FUN_080008ba"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080008ba": {
            "entrypoint": "0x080008ba",
            "current_name": "bitwise_conversion_080008ba",
            "code": "\nulonglong bitwiseConversion_080008ba(uint input1,uint input2,uint input3,uint input4)\n\n{\n  uint bit1;\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint temp4;\n  bool isZero;\n  \n  temp2 = temp4 & input4 >> 0x14;\n  temp3 = input2;\n  if (temp1 != temp4 || temp2 != temp4) {\n    if (temp1 == temp4) {\n      if (((input1 | input2 << 0xc) == 0) && (input1 = input3, temp3 = input4, temp2 != temp4)\n         ) {\nLAB_0800072c:\n        return (ulonglong)((input2 ^ input4) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n    }\n    else if (temp2 == temp4) {\n      input1 = input3;\n      temp3 = input4;\n      if ((input3 | input4 << 0xc) == 0) {\nLAB_080006f0:\n        return (ulonglong)((input2 ^ input4) & 0x80000000) << 0x20;\n      }\n    }\n    else {\n      isZero = (input1 | input2 << 1) == 0;\n      if (!isZero) {\n        isZero = (input3 | input4 << 1) == 0;\n      }\n      if (!isZero) {\n        if (temp1 == 0) {\n          temp3 = input2 & 0x80000000;\n          do {\n            bit1 = input1 & 0x80000000;\n            input1 = input1 << 1;\n            input2 = input2 * 2 + (uint)(bit1 != 0);\n          } while ((input2 & 0x100000) == 0);\n          input2 = input2 | temp3;\n          if (temp2 != 0) {\n            return CONCAT44(input2,input1);\n          }\n        }\n        do {\n          temp3 = input3 & 0x80000000;\n          input3 = input3 << 1;\n          input4 = input4 * 2 + (uint)(temp3 != 0);\n        } while ((input4 & 0x100000) == 0);\n        return CONCAT44(input2,input1);\n      }\n      if ((input1 | input2 << 1) != 0) goto LAB_0800072c;\n      if ((input3 | input4 << 1) != 0) goto LAB_080006f0;\n    }\n  }\n  return CONCAT44(temp3,input1) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_080008ba": "bitwise_conversion_080008ba",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "bit1",
                "unaff_r4": "temp1",
                "uVar2": "temp2",
                "uVar3": "temp3",
                "in_r12": "temp4",
                "bVar4": "isZero"
            },
            "calling": [
                "FUN_0800074c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800092c": {
            "entrypoint": "0x0800092c",
            "current_name": "check_params_and_compare_0800092c",
            "code": "\nuint check_params_and_compare_0800092c(uint value1,uint value2,uint value3,uint value4)\n\n{\n  uint result;\n  bool is_zero_param1_param2;\n  bool is_less_than_zero_and_param4_smaller_than_param2;\n  \n  if (((int)(value2 << 1) >> 0x15 == -1 || (int)(value4 << 1) >> 0x15 == -1) &&\n     ((((int)(value2 << 1) >> 0x15 == -1 && ((value1 | value2 << 0xc) != 0)) ||\n      (((int)(value4 << 1) >> 0x15 == -1 && ((value3 | value4 << 0xc) != 0)))))) {\n    return 1;\n  }\n  is_zero_param1_param2 = (value1 | value2 << 1) == 0;\n  if (is_zero_param1_param2) {\n    is_zero_param1_param2 = (value3 | value4 << 1) == 0;\n  }\n  if (!is_zero_param1_param2) {\n    is_zero_param1_param2 = value2 == value4;\n  }\n  if (is_zero_param1_param2) {\n    is_zero_param1_param2 = value1 == value3;\n  }\n  if (!is_zero_param1_param2) {\n    result = value2 ^ value4;\n    is_zero_param1_param2 = result == 0;\n    if (-1 < (int)result) {\n      is_zero_param1_param2 = value2 == value4;\n    }\n    is_less_than_zero_and_param4_smaller_than_param2 = -1 < (int)result && value4 <= value2;\n    if (is_zero_param1_param2) {\n      is_less_than_zero_and_param4_smaller_than_param2 = value3 <= value1;\n    }\n    value4 = (int)value4 >> 0x1f;\n    if (!is_less_than_zero_and_param4_smaller_than_param2) {\n      value4 = ~value4;\n    }\n    return value4 | 1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800092c": "check_params_and_compare_0800092c",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4",
                "uVar1": "result",
                "bVar2": "is_zero_param1_param2",
                "bVar3": "is_less_than_zero_and_param4_smaller_than_param2"
            },
            "calling": [
                "FUN_080009b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009a8": {
            "entrypoint": "0x080009a8",
            "current_name": "validate_and_return_080009a8",
            "code": "\nvoid validate_and_return_080009a8(undefined4 param_arg1,undefined4 param_arg2,undefined4 param_arg3,undefined4 param_arg4)\n\n{\n  validate_and_return_080009a8_param_080009b8(param_arg3,param_arg4,param_arg1,param_arg2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080009a8": "validate_and_return_080009a8",
                "param_1": "param_arg1",
                "param_2": "param_arg2",
                "param_3": "param_arg3",
                "param_4": "param_arg4"
            },
            "calling": [
                "FUN_08000a04",
                "FUN_08000a18"
            ],
            "called": [
                "FUN_080009b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009b8": {
            "entrypoint": "0x080009b8",
            "current_name": "validate_and_return_param_080009b8",
            "code": "\nundefined4 validate_and_return_param_080009b8(undefined4 input_param)\n\n{\n  validate_params();\n  return input_param;\n}\n\n",
            "renaming": {
                "FUN_080009b8": "validate_and_return_param_080009b8",
                "param_1": "input_param",
                "check_params_and_compare_0800092c": "validate_params"
            },
            "calling": [
                "FUN_080009dc",
                "FUN_080009c8",
                "FUN_080009a8",
                "FUN_080009f0"
            ],
            "called": [
                "FUN_0800092c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009c8": {
            "entrypoint": "0x080009c8",
            "current_name": "check_if_parameter_is_valid_080009c8",
            "code": "\nbool check_if_parameter_is_valid_080009c8(void)\n\n{\n  char is_parameter_valid;\n  \n  validate_and_return_param_080009b8();\n  return is_parameter_valid != '\\0';\n}\n\n",
            "renaming": {
                "FUN_080009c8": "check_if_parameter_is_valid_080009c8",
                "in_ZR": "is_parameter_valid"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080009b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009dc": {
            "entrypoint": "0x080009dc",
            "current_name": "check_if_input_is_empty_080009dc",
            "code": "\nbool check_if_input_is_empty_080009dc(void)\n\n{\n  char input_char;\n  \n  validate_and_return_param_080009b8();\n  return input_char == '\\0';\n}\n\n",
            "renaming": {
                "FUN_080009dc": "check_if_input_is_empty_080009dc",
                "in_CY": "input_char"
            },
            "calling": [
                "FUN_080016b4",
                "FUN_08005da8",
                "FUN_080019f6",
                "FUN_08001960",
                "FUN_08001814",
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080009b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009f0": {
            "entrypoint": "0x080009f0",
            "current_name": "validate_param_and_return_bool_080009f0",
            "code": "\nbool validate_param_and_return_bool_080009f0(void)\n\n{\n  undefined is_zero_result;\n  undefined is_carry;\n  \n  validate_param_and_return_result();\n  return !(bool)is_carry || (bool)is_zero_result;\n}\n\n",
            "renaming": {
                "FUN_080009f0": "validate_param_and_return_bool_080009f0",
                "in_ZR": "is_zero_result",
                "in_CY": "is_carry",
                "validate_and_return_param_080009b8": "validate_param_and_return_result"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080009b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a04": {
            "entrypoint": "0x08000a04",
            "current_name": "validate_and_return_08000a04",
            "code": "\nbool validate_and_return_08000a04(void)\n\n{\n  undefined zero_flag;\n  undefined carry_flag;\n  \n  validate_and_return_08000a04_080009a8();\n  return !(bool)carry_flag || (bool)zero_flag;\n}\n\n",
            "renaming": {
                "FUN_08000a04": "validate_and_return_08000a04",
                "in_ZR": "zero_flag",
                "in_CY": "carry_flag"
            },
            "calling": [
                "FUN_08001960",
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080009a8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a18": {
            "entrypoint": "0x08000a18",
            "current_name": "check_if_pointer_is_null_08000a18",
            "code": "\nbool check_if_pointer_is_null_08000a18(void)\n\n{\n  char input_character;\n  \n  validate_and_return_080009a8();\n  return input_character == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08000a18": "check_if_pointer_is_null_08000a18",
                "in_CY": "input_character"
            },
            "calling": [
                "FUN_080016b4",
                "FUN_08005da8",
                "FUN_080019f6",
                "FUN_08001960",
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080009a8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a2c": {
            "entrypoint": "0x08000a2c",
            "current_name": "check_param_combinations_08000a2c",
            "code": "\nundefined4 check_param_combinations_08000a2c(uint param_1,int param_2,uint param_3,int param_4)\n\n{\n  if ((((param_2 << 1) >> 0x15 != -1) || ((param_1 | param_2 << 0xc) == 0)) &&\n     (((param_4 << 1) >> 0x15 != -1 || ((param_3 | param_4 << 0xc) == 0)))) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08000a2c": "check_param_combinations_08000a2c"
            },
            "calling": [
                "FUN_08005da8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a58": {
            "entrypoint": "0x08000a58",
            "current_name": "calculate_modified_value_08000a58",
            "code": "\nuint calculateModifiedValue_08000a58(uint inputValue1,uint inputValue2)\n\n{\n  uint shiftedValue;\n  int tempValue;\n  uint shiftOffset;\n  \n  tempValue = inputValue2 * 2 + 0x200000;\n  if (inputValue2 * 2 < 0xffe00000) {\n    if (-1 < tempValue) {\n      return 0;\n    }\n    shiftedValue = tempValue >> 0x15;\n    shiftOffset = -shiftedValue - 0x3e1;\n    if (shiftedValue < 0xfffffc20 && shiftOffset != 0) {\n      shiftedValue = (inputValue2 << 0xb | 0x80000000 | inputValue1 >> 0x15) >> (shiftOffset & 0xff);\n      if ((inputValue2 & 0x80000000) != 0) {\n        shiftedValue = -shiftedValue;\n      }\n      return shiftedValue;\n    }\n  }\n  else if ((inputValue1 | inputValue2 << 0xc) != 0) {\n    return 0;\n  }\n  inputValue2 = inputValue2 & 0x80000000;\n  if (inputValue2 == 0) {\n    inputValue2 = 0x7fffffff;\n  }\n  return inputValue2;\n}\n\n",
            "renaming": {
                "FUN_08000a58": "calculate_modified_value_08000a58",
                "param_1": "inputValue1",
                "param_2": "inputValue2",
                "uVar1": "shiftedValue",
                "iVar2": "tempValue",
                "uVar3": "shiftOffset"
            },
            "calling": [
                "FUN_08005da8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000aa8": {
            "entrypoint": "0x08000aa8",
            "current_name": "check_and_shift_bits_08000aa8",
            "code": "\nuint check_and_shift_bits_08000aa8(uint input_value_1,uint input_value_2)\n\n{\n  int shifted_value;\n  uint shift_amount;\n  \n  if ((input_value_2 & 0x80000000) != 0) {\n    return 0;\n  }\n  shifted_value = input_value_2 * 2 + 0x200000;\n  if (input_value_2 * 2 < 0xffe00000) {\n    if (-1 < shifted_value) {\n      return 0;\n    }\n    shift_amount = -(shifted_value >> 0x15) - 0x3e1;\n    if (-1 < (int)shift_amount) {\n      return (input_value_2 << 0xb | 0x80000000 | input_value_1 >> 0x15) >> (shift_amount & 0xff);\n    }\n  }\n  else if ((input_value_1 | input_value_2 << 0xc) != 0) {\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08000aa8": "check_and_shift_bits_08000aa8",
                "param_1": "input_value_1",
                "param_2": "input_value_2",
                "iVar1": "shifted_value",
                "uVar2": "shift_amount"
            },
            "calling": [
                "FUN_08005da8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000ae8": {
            "entrypoint": "0x08000ae8",
            "current_name": "perform_system_call_08000ae8",
            "code": "\nvoid performSystemCall_08000ae8(void)\n\n{\n  executeInterrupt(0x3f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000ae8": "perform_system_call_08000ae8",
                "software_interrupt": "executeInterrupt"
            },
            "calling": [
                "FUN_08000aec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000aec": {
            "entrypoint": "0x08000aec",
            "current_name": "perform_system_call_08000aec",
            "code": "\nundefined4 perform_system_call_08000aec(undefined4 input,undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  undefined4 result;\n  \n  if (DAT_2000017c != 0) {\n    return 0;\n  }\n  result = perform_system_call_08000aec_08000ae8(1,input,0,0,arg3);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08000aec": "perform_system_call_08000aec",
                "param_1": "input",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08000ae8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000b08": {
            "entrypoint": "0x08000b08",
            "current_name": "initialize_params_and_process_input_08000b08",
            "code": "\nvoid initializeParamsAndProcessInput_08000b08(int flag,int value)\n\n{\n  if ((flag == 1) && (value == 0xffff)) {\n    initializeParams(&DAT_200001c0,&DAT_20000188,&DAT_200001b8,&DAT_20000240,DAT_20000020,DAT_20000024,\n                 DAT_20000018,DAT_2000001c,DAT_20000010,DAT_20000014,0);\n    initializeWithData(&DAT_20000194,DAT_2000005c,DAT_20000038,DAT_20000028,DAT_2000002c,DAT_20000030,\n                 DAT_20000034);\n    processAndStoreInput(&DAT_2000024c,DAT_20000074,DAT_20000070,DAT_2000006c);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000b08": "initialize_params_and_process_input_08000b08",
                "param_1": "flag",
                "param_2": "value",
                "initialize_and_return_param_08001b18": "initializeParams",
                "initialize_with_data_08001510": "initializeWithData",
                "process_and_store_input_0800157c": "processAndStoreInput"
            },
            "calling": [],
            "called": [
                "FUN_0800157c",
                "FUN_08001510",
                "FUN_08001b18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000bcc": {
            "entrypoint": "0x08000bcc",
            "current_name": "initialize_08000bcc",
            "code": "\nvoid initialize_08000bcc(void)\n\n{\n  processData(DAT_20000064,0);\n  processInput(DAT_20000064,1);\n  processData(DAT_20000004,0);\n  processInput(DAT_20000004,1);\n  processData(DAT_20000060,0);\n  processInput(DAT_20000060,1);\n  processData(DAT_20000004,1);\n  initialize_08000bccDataProcessing(&DAT_20000194,8,2,0);\n  processAndCallCode(&DAT_20000194,0,&DAT_20000008);\n  processAndStoreData(&DAT_20000194);\n  processString(&DAT_20000194,\"Reflow\");\n  processData(&DAT_20000194,0,1);\n  processString(&DAT_20000194,\"Oven 1.2\");\n  processData(DAT_20000004,0);\n  FUNC_080058e8(0x9c4);\n  processAndStoreData(&DAT_20000194);\n  initialize_08000bccSerialConnection(&DAT_2000036c,0xe100,6);\n  processData(DAT_20000060,1);\n  DAT_20000258 = 2000;\n  DAT_200001b0 = initialize_08000bccGlobalVariable();\n  DAT_200001b4 = initialize_08000bccGlobalVariable();\n  performSystemCall(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000bcc": "initialize_08000bcc",
                "process_data_08005848": "processData",
                "process_input_080057b4": "processInput",
                "initialize_data_processing_080013a4": "initializeDataProcessing",
                "process_and_call_code_08001550": "processAndCallCode",
                "process_and_store_data_0800135a": "processAndStoreData",
                "process_string_08005c96": "processString",
                "process_data_08001366": "processData",
                "initialize_serial_connection_08005a68": "initializeSerialConnection",
                "initialize_global_variable_080058e0": "initializeGlobalVariable",
                "perform_system_call_08000aec": "performSystemCall"
            },
            "calling": [
                "FUN_08005f6c"
            ],
            "called": [
                "FUN_08005848",
                "FUN_08000aec",
                "FUN_08005a68",
                "FUN_08001550",
                "FUN_080057b4",
                "FUN_080058e8",
                "FUN_080058e0",
                "FUN_080013a4",
                "FUN_08005c96",
                "FUN_0800135a",
                "FUN_08001366"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000cd0": {
            "entrypoint": "0x08000cd0",
            "current_name": "process_data_08000cd0",
            "code": "\nvoid process_data_08000cd0(void)\n\n{\n  uint global_var1;\n  undefined4 global_var2;\n  int result;\n  undefined4 global_var4;\n  undefined4 extra_result1;\n  undefined4 extra_result2;\n  undefined4 extra_result3;\n  undefined8 result64;\n  \n  global_var1 = initialize_global_variable_080058e0();\n  if (DAT_200001b4 < global_var1) {\n    DAT_200001b4 = DAT_200001b4 + 1000;\n    result64 = perform_calculation_080015f8(&DAT_2000024c,0);\n    global_var4 = (undefined4)((ulonglong)result64 >> 0x20);\n    global_var2 = (undefined4)result64;\n    DAT_20000188 = global_var2;\n    DAT_2000018c = global_var4;\n    result = check_if_parameter_is_valid_080009c8(global_var2,global_var4,0,0x40c38800);\n    if (((result != 0) || (result = check_if_parameter_is_valid_080009c8(global_var2,global_var4,0,0x40c38880), result != 0)) ||\n       (result = check_if_parameter_is_valid_080009c8(global_var2,global_var4,0,0x40c38900), result != 0)) {\n      DAT_20000238 = 7;\n      DAT_20000239 = '\\0';\n    }\n  }\n  global_var1 = initialize_global_variable_080058e0();\n  global_var2 = DAT_20000060;\n  if (DAT_200001b0 < global_var1) {\n    DAT_200001b0 = DAT_200001b0 + 1000;\n    if (DAT_20000239 == '\\x01') {\n      result = check_and_update_bit_08005890(DAT_20000060);\n      process_data_08000cd0_08005848(global_var2,result == 0);\n      DAT_20000250 = DAT_20000250 + 1;\n      convert_and_return_base_08005d82(&DAT_2000036c,DAT_20000250,10);\n      process_string_08005c96(&DAT_2000036c,&DAT_08007368);\n      process_and_return_input_08005f2c(&DAT_2000036c,extra_result1,DAT_20000240,DAT_20000244,2);\n      process_string_08005c96(&DAT_2000036c,&DAT_08007368);\n      process_and_return_input_08005f2c(&DAT_2000036c,extra_result2,DAT_20000188,DAT_2000018c,2);\n      process_string_08005c96(&DAT_2000036c,&DAT_08007368);\n      compute_sum_08005f40(&DAT_2000036c,extra_result3,DAT_200001b8,DAT_200001bc,2);\n    }\n    else {\n      process_data_08000cd0_08005848(DAT_20000060,1);\n    }\n    process_and_store_data_0800135a(&DAT_20000194);\n    process_string_08005c96(&DAT_20000194,(&PTR_s_Ready_2000003c)[DAT_20000238]);\n    process_data_08000cd0_08001366(&DAT_20000194,0,1);\n    if (DAT_20000238 == 7) {\n      process_string_08005c96(&DAT_20000194,\"TC Error!\");\n    }\n    else {\n      process_and_return_input_08005f2c(&DAT_20000194,2,DAT_20000188,DAT_2000018c,2);\n      process_and_return_one_0800134e(&DAT_20000194,0);\n      process_string_08005c96(&DAT_20000194,&DAT_08007378);\n    }\n  }\n  global_var4 = DAT_2000018c;\n  global_var2 = DAT_20000188;\n  switch(DAT_20000238) {\n  case 0:\n    result = validate_and_return_08000a04(DAT_20000188,DAT_2000018c,0,0x40490000);\n    if (result == 0) {\n      if (DAT_20000248 == '\\x01') {\n        calculate_total_08005cd4(&DAT_2000036c,\"Time Setpoint Input Output\");\n        DAT_20000250 = 0;\n        DAT_2000025c = initialize_global_variable_080058e0();\n        DAT_20000240 = 0;\n        DAT_20000244 = 0x4062c000;\n        result64 = bitwise_shift_0800042c(DAT_20000258);\n        update_config_08001960(&DAT_200001c0,(int)((ulonglong)result64 >> 0x20),0,0,result64);\n        perform_computation_08001918(&DAT_200001c0,1000);\n        set_flag_and_call_update_pointers_08001a44(&DAT_200001c0,1);\n        DAT_20000238 = 1;\n      }\n    }\n    else {\n      DAT_20000238 = 6;\n    }\n    break;\n  case 1:\n    DAT_20000239 = '\\x01';\n    result = validate_and_return_08000a04(DAT_20000188,DAT_2000018c,0,0x4062c000);\n    if (result != 0) {\n      result64 = initialize_global_variable_080058e0();\n      DAT_20000254 = (int)result64 + 9000;\n      process_and_return_080018f8(&DAT_200001c0,(int)((ulonglong)result64 >> 0x20),0,0x4072c000,0x9999999a,0x3fa99999,\n                   0,0x406f4000);\n      DAT_20000240 = 0;\n      DAT_20000244 = 0x40636000;\n      DAT_20000238 = 2;\n    }\n    break;\n  case 2:\n    global_var1 = initialize_global_variable_080058e0();\n    if (DAT_20000254 < global_var1) {\n      result = initialize_global_variable_080058e0();\n      DAT_20000254 = result + 9000;\n      result64 = perform_calculation_08000194(DAT_20000240,DAT_20000244,0,0x40140000);\n      DAT_20000244 = (undefined4)((ulonglong)result64 >> 0x20);\n      DAT_20000240 = (undefined4)result64;\n      result64 = check_if_pointer_is_null_08000a18(DAT_20000240,DAT_20000244,0,0x40690000);\n      if ((int)result64 != 0) {\n        process_and_return_080018f8(&DAT_200001c0,(int)((ulonglong)result64 >> 0x20),0,0x4072c000,0x9999999a,\n                     0x3fa99999,0,0x4075e000);\n        DAT_20000240 = 0;\n        DAT_20000244 = 0x406f4000;\n        DAT_20000238 = 3;\n      }\n    }\n    break;\n  case 3:\n    result64 = validate_and_return_08000a04(DAT_20000188,DAT_2000018c,0,0x406ea000);\n    if ((int)result64 != 0) {\n      process_and_return_080018f8(&DAT_200001c0,(int)((ulonglong)result64 >> 0x20),0,0x4072c000,0x9999999a,0x3fa99999,\n                   0,0x4075e000);\n      DAT_20000240 = 0;\n      DAT_20000244 = 0x40590000;\n      DAT_20000238 = 4;\n    }\n    break;\n  case 4:\n    result = validate_param_and_return_bool_080009f0(DAT_20000188,DAT_2000018c,0,0x40590000);\n    if (result != 0) {\n      result = initialize_global_variable_080058e0();\n      DAT_20000180 = result + 1000;\n      process_data_08000cd0_08005848(DAT_20000004,1);\n      DAT_20000239 = '\\0';\n      DAT_20000238 = 5;\n    }\n    break;\n  case 5:\n    global_var1 = initialize_global_variable_080058e0();\n    if (DAT_20000180 < global_var1) {\n      process_data_08000cd0_08005848(DAT_20000004,0);\n      DAT_20000238 = 0;\n    }\n    break;\n  case 6:\n    result = check_if_input_is_empty_080009dc(DAT_20000188,DAT_2000018c,0,0x40490000);\n    if (result != 0) {\n      DAT_20000238 = 0;\n    }\n    break;\n  case 7:\n    result = check_if_parameter_is_valid_080009c8(DAT_20000188,DAT_2000018c,0,0x40c38800);\n    if (((result == 0) && (result = check_if_parameter_is_valid_080009c8(global_var2,global_var4,0,0x40c38880), result == 0)) &&\n       (result = check_if_parameter_is_valid_080009c8(global_var2,global_var4,0,0x40c38900), result == 0)) {\n      DAT_20000238 = 0;\n    }\n    else {\n      DAT_20000238 = 7;\n    }\n  }\n  if ((DAT_20000248 == '\\x01') && (DAT_20000239 == '\\x01')) {\n    DAT_20000239 = '\\0';\n    DAT_20000238 = 0;\n  }\n  if (DAT_20000184 == '\\x01') {\n    result = process_data_08000cd0_08005754(DAT_20000068);\n    if (result == 0) {\n      result = initialize_global_variable_080058e0();\n      if (0x32 < (uint)(result - DAT_20000190)) {\n        DAT_20000184 = '\\x02';\n      }\n    }\n    else {\n      DAT_20000184 = '\\0';\n    }\n  }\n  else if (DAT_20000184 == '\\0') {\n    DAT_20000248 = '\\0';\n    result = process_data_08000cd0_08005754(DAT_20000068);\n    if (result == 0) {\n      DAT_20000190 = initialize_global_variable_080058e0();\n      DAT_20000184 = '\\x01';\n    }\n  }\n  else if ((DAT_20000184 == '\\x02') && (result = process_data_08000cd0_08005754(DAT_20000068), result != 0)) {\n    DAT_20000248 = '\\x01';\n    DAT_20000184 = '\\0';\n  }\n  if (DAT_20000239 == '\\x01') {\n    result = initialize_global_variable_080058e0();\n    process_data_08000cd0_080016b4(&DAT_200001c0);\n    if (DAT_20000258 < (uint)(result - DAT_2000025c)) {\n      DAT_2000025c = DAT_2000025c + DAT_20000258;\n    }\n    result64 = shift_and_rotate_bits_0800040c(result - DAT_2000025c);\n    result = check_if_input_is_empty_080009dc((int)result64,(int)((ulonglong)result64 >> 0x20),DAT_200001b8,DAT_200001bc);\n    if (result == 0) {\n      process_data_08000cd0_08005848(DAT_20000064,0);\n    }\n    else {\n      process_data_08000cd0_08005848(DAT_20000064,1);\n    }\n  }\n  else {\n    process_data_08000cd0_08005848(DAT_20000064,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000cd0": "process_data_08000cd0",
                "uVar1": "global_var1",
                "uVar2": "global_var2",
                "iVar3": "result",
                "uVar4": "global_var4",
                "extraout_r1": "extra_result1",
                "extraout_r1_00": "extra_result2",
                "extraout_r1_01": "extra_result3",
                "uVar5": "result64"
            },
            "calling": [
                "FUN_08005f6c"
            ],
            "called": [
                "FUN_0800134e",
                "FUN_08005f2c",
                "FUN_080009dc",
                "FUN_08005d82",
                "FUN_080009c8",
                "FUN_08000a04",
                "FUN_08001918",
                "FUN_08000a18",
                "FUN_080016b4",
                "FUN_08005cd4",
                "FUN_08005848",
                "FUN_08005754",
                "FUN_080058e0",
                "FUN_0800042c",
                "FUN_08005f40",
                "FUN_08000194",
                "FUN_08005c96",
                "FUN_08005890",
                "FUN_08001366",
                "FUN_08001a44",
                "FUN_08001960",
                "FUN_080018f8",
                "FUN_080009f0",
                "FUN_080015f8",
                "FUN_0800040c",
                "FUN_0800135a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001294": {
            "entrypoint": "0x08001294",
            "current_name": "set_params_08001294",
            "code": "\nvoid setParams_08001294(int objPtr,undefined value1,undefined value2,undefined value3,\n                 undefined value4)\n\n{\n  *(undefined *)(objPtr + 0x18) = value1;\n  *(undefined *)(objPtr + 0x19) = value2;\n  *(undefined *)(objPtr + 0x1a) = value3;\n  *(undefined *)(objPtr + 0x1b) = value4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001294": "set_params_08001294",
                "param_1": "objPtr",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "value4"
            },
            "calling": [
                "FUN_080013a4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080012a2": {
            "entrypoint": "0x080012a2",
            "current_name": "process_and_duplicate_data_080012a2",
            "code": "\nvoid process_and_duplicate_data_080012a2(int data_address)\n\n{\n  process_data(*(undefined *)(data_address + 10),0);\n  process_data(*(undefined *)(data_address + 10),1);\n  process_data(*(undefined *)(data_address + 10),0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080012a2": "process_and_duplicate_data_080012a2",
                "param_1": "data_address",
                "process_data_08005848": "process_data"
            },
            "calling": [
                "FUN_080012c0",
                "FUN_080012e8"
            ],
            "called": [
                "FUN_08005848"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080012c0": {
            "entrypoint": "0x080012c0",
            "current_name": "process_and_duplicate_data_080012c0",
            "code": "\nvoid process_and_duplicate_data_080012c0(int data_address,int bitmask)\n\n{\n  uint iteration_count;\n  \n  for (iteration_count = 0; (int)iteration_count < 4; iteration_count = iteration_count + 1) {\n    process_data_08005848(*(undefined *)(data_address + iteration_count + 0xb),bitmask >> (iteration_count & 0xff) & 1);\n  }\n  process_and_duplicate_data_080012c0_080012a2(data_address);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080012c0": "process_and_duplicate_data_080012c0",
                "param_1": "data_address",
                "param_2": "bitmask",
                "uVar1": "iteration_count"
            },
            "calling": [
                "FUN_08001310",
                "FUN_080013a4"
            ],
            "called": [
                "FUN_08005848",
                "FUN_080012a2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080012e8": {
            "entrypoint": "0x080012e8",
            "current_name": "process_and_duplicate_data_080012e8",
            "code": "\nvoid process_and_duplicate_data_080012e8(int input_address,int bitmask)\n\n{\n  uint counter;\n  \n  for (counter = 0; (int)counter < 8; counter = counter + 1) {\n    process_data_08005848(*(undefined *)(input_address + counter + 0xb),bitmask >> (counter & 0xff) & 1);\n  }\n  process_and_duplicate_data_080012e8_080012a2(input_address);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080012e8": "process_and_duplicate_data_080012e8",
                "param_1": "input_address",
                "param_2": "bitmask",
                "uVar1": "counter"
            },
            "calling": [
                "FUN_08001310"
            ],
            "called": [
                "FUN_08005848",
                "FUN_080012a2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001310": {
            "entrypoint": "0x08001310",
            "current_name": "process_data_08001310",
            "code": "\nvoid processData_08001310(int dataPointer,uint dataSize,undefined4 param3,undefined4 param4)\n\n{\n  process_data_08005848(*(undefined *)(dataPointer + 8),param3,param3,param4,param4);\n  if (*(char *)(dataPointer + 9) != -1) {\n    process_data_08005848(*(char *)(dataPointer + 9),0);\n  }\n  if ((*(byte *)(dataPointer + 0x13) & 0x10) == 0) {\n    process_and_duplicate_data_080012c0(dataPointer,dataSize >> 4);\n    process_and_duplicate_data_080012c0(dataPointer,dataSize);\n    return;\n  }\n  process_and_duplicate_data_080012e8(dataPointer,dataSize);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001310": "process_data_08001310",
                "param_1": "dataPointer",
                "param_2": "dataSize",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [
                "FUN_0800134e",
                "FUN_08001550",
                "FUN_0800138e",
                "FUN_080013a4",
                "FUN_0800135a",
                "FUN_08001366"
            ],
            "called": [
                "FUN_08005848",
                "FUN_080012c0",
                "FUN_080012e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800134e": {
            "entrypoint": "0x0800134e",
            "current_name": "process_and_return_one_0800134e",
            "code": "\nundefined4 process_and_return_one_0800134e(undefined4 input_data,undefined4 output_data,undefined4 param_3,undefined4 param_4)\n\n{\n  process_data(input_data,output_data,1,param_4,param_4);\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800134e": "process_and_return_one_0800134e",
                "param_1": "input_data",
                "param_2": "output_data",
                "process_data_08001310": "process_data"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800135a": {
            "entrypoint": "0x0800135a",
            "current_name": "process_and_store_data_0800135a",
            "code": "\nvoid process_and_store_data_0800135a(undefined4 data,undefined4 value1,undefined4 value2,undefined4 buffer)\n\n{\n  process_data_08001310(data,1,0,buffer,buffer);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800135a": "process_and_store_data_0800135a",
                "param_1": "data",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "buffer"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_080013a4",
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001366": {
            "entrypoint": "0x08001366",
            "current_name": "process_data_08001366",
            "code": "\nvoid processData_08001366(int data,char flag,uint limit,undefined4 param)\n\n{\n  char character;\n  \n  if (3 < limit) {\n    limit = 3;\n  }\n  if ((int)(uint)*(byte *)(data + 0x17) <= (int)limit) {\n    limit = *(byte *)(data + 0x17) - 1 & 0xff;\n  }\n  character = *(char *)(limit + data + 0x18);\n  process_data_08001310(data,flag + character | 0x80,0,character,param);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001366": "process_data_08001366",
                "param_1": "data",
                "param_2": "flag",
                "param_3": "limit",
                "param_4": "param",
                "cVar1": "character"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800138e": {
            "entrypoint": "0x0800138e",
            "current_name": "update_data_and_process_0800138e",
            "code": "\nvoid updateDataAndProcess_0800138e(int dataAddress,undefined4 unusedParam,undefined4 unusedParam2,undefined4 unusedParam3)\n\n{\n  byte originalByte;\n  \n  originalByte = *(byte *)(dataAddress + 0x14);\n  *(byte *)(dataAddress + 0x14) = originalByte | 4;\n  processData(dataAddress,originalByte | 0xc,0,unusedParam3,unusedParam3);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800138e": "update_data_and_process_0800138e",
                "param_1": "dataAddress",
                "param_2": "unusedParam",
                "param_3": "unusedParam2",
                "param_4": "unusedParam3",
                "bVar1": "originalByte",
                "process_data_08001310": "processData"
            },
            "calling": [
                "FUN_080013a4"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080013a4": {
            "entrypoint": "0x080013a4",
            "current_name": "initialize_data_processing_080013a4",
            "code": "\nvoid initializeDataProcessing_080013a4(int dataPointer,int param_2,int param_3,int param_4)\n\n{\n  int loopCounter;\n  int loopIndex;\n  \n  if (1 < param_3) {\n    *(byte *)(dataPointer + 0x13) = *(byte *)(dataPointer + 0x13) | 8;\n  }\n  *(char *)(dataPointer + 0x17) = (char)param_3;\n  set_params_08001294(dataPointer,0,0x40,param_2,param_2 + 0x40);\n  if ((param_4 != 0) && (param_3 == 1)) {\n    *(byte *)(dataPointer + 0x13) = *(byte *)(dataPointer + 0x13) | 4;\n  }\n  process_input_080057b4(*(undefined *)(dataPointer + 8),1);\n  if (*(char *)(dataPointer + 9) != -1) {\n    process_input_080057b4(*(char *)(dataPointer + 9),1);\n  }\n  process_input_080057b4(*(undefined *)(dataPointer + 10),1);\n  loopIndex = 0;\n  while( true ) {\n    if ((*(byte *)(dataPointer + 0x13) & 0x10) == 0) {\n      loopCounter = 4;\n    }\n    else {\n      loopCounter = 8;\n    }\n    if (loopCounter <= loopIndex) break;\n    process_input_080057b4(*(undefined *)(dataPointer + loopIndex + 0xb),1);\n    loopIndex = loopIndex + 1;\n  }\n  process_data_08005848(*(undefined *)(dataPointer + 8),0);\n  process_data_08005848(*(undefined *)(dataPointer + 10),0);\n  if (*(char *)(dataPointer + 9) != -1) {\n    process_data_08005848(*(char *)(dataPointer + 9),0);\n  }\n  if ((*(byte *)(dataPointer + 0x13) & 0x10) == 0) {\n    process_and_duplicate_data_080012c0(dataPointer,3);\n    process_and_duplicate_data_080012c0(dataPointer,3);\n    process_and_duplicate_data_080012c0(dataPointer,3);\n    process_and_duplicate_data_080012c0(dataPointer,2);\n  }\n  else {\n    process_data_08001310(dataPointer,*(byte *)(dataPointer + 0x13) | 0x20,0);\n    process_data_08001310(dataPointer,*(byte *)(dataPointer + 0x13) | 0x20,0);\n    process_data_08001310(dataPointer,*(byte *)(dataPointer + 0x13) | 0x20,0);\n  }\n  process_data_08001310(dataPointer,*(byte *)(dataPointer + 0x13) | 0x20,0);\n  *(undefined *)(dataPointer + 0x14) = 4;\n  update_data_and_process_0800138e(dataPointer);\n  process_and_store_data_0800135a(dataPointer);\n  *(undefined *)(dataPointer + 0x15) = 2;\n  process_data_08001310(dataPointer,6,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080013a4": "initialize_data_processing_080013a4",
                "param_1": "dataPointer",
                "iVar1": "loopCounter",
                "iVar2": "loopIndex"
            },
            "calling": [
                "FUN_08000bcc",
                "FUN_080014ba"
            ],
            "called": [
                "FUN_08001310",
                "FUN_08005848",
                "FUN_080057b4",
                "FUN_080012c0",
                "FUN_0800138e",
                "FUN_08001294",
                "FUN_0800135a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080014ba": {
            "entrypoint": "0x080014ba",
            "current_name": "initialize_data_080014ba",
            "code": "\nvoid initialize_data_080014ba(int data_ptr,int flag,undefined undefined_1,undefined4 undefined_4,undefined undefined_2,\n                 undefined undefined_3,undefined undefined_4,undefined undefined_5,undefined undefined_6,\n                 undefined undefined_7,undefined undefined_8,undefined undefined_9,undefined undefined_10)\n\n{\n  *(undefined *)(data_ptr + 8) = undefined_1;\n  *(char *)(data_ptr + 9) = (char)undefined_4;\n  *(undefined *)(data_ptr + 10) = undefined_2;\n  *(undefined *)(data_ptr + 0xb) = undefined_3;\n  *(undefined *)(data_ptr + 0xc) = undefined_4;\n  *(undefined *)(data_ptr + 0xd) = undefined_5;\n  *(undefined *)(data_ptr + 0xe) = undefined_6;\n  *(undefined *)(data_ptr + 0xf) = undefined_7;\n  *(undefined *)(data_ptr + 0x10) = undefined_8;\n  *(undefined *)(data_ptr + 0x11) = undefined_9;\n  *(undefined *)(data_ptr + 0x12) = undefined_10;\n  if (flag == 0) {\n    *(undefined *)(data_ptr + 0x13) = 0x10;\n  }\n  else {\n    *(undefined *)(data_ptr + 0x13) = 0;\n  }\n  initialize_data_080014ba_processing_080013a4(data_ptr,0x10,1,0,undefined_4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080014ba": "initialize_data_080014ba",
                "param_1": "data_ptr",
                "param_2": "flag",
                "param_3": "undefined_1",
                "param_4": "undefined_4",
                "param_5": "undefined_2",
                "param_6": "undefined_3",
                "param_7": "undefined_4",
                "param_8": "undefined_5",
                "param_9": "undefined_6",
                "param_10": "undefined_7",
                "param_11": "undefined_8",
                "param_12": "undefined_9",
                "param_13": "undefined_10"
            },
            "calling": [
                "FUN_08001510"
            ],
            "called": [
                "FUN_080013a4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001510": {
            "entrypoint": "0x08001510",
            "current_name": "initialize_with_data_08001510",
            "code": "\nundefined4 *\ninitialize_with_data_08001510(undefined4 *output,undefined4 value_2,undefined4 value_3,undefined4 value_4,\n            undefined unknown_1,undefined unknown_2,undefined unknown_3)\n\n{\n  output[1] = 0;\n  *output = &PTR_process_and_return_one_0800134e_1_080073f8;\n  initialize_data_080014ba(output,1,value_2,0xff,value_3,value_4,unknown_1,unknown_2,unknown_3,0,0,0,0);\n  return output;\n}\n\n",
            "renaming": {
                "FUN_08001510": "initialize_with_data_08001510",
                "param_1": "output",
                "param_2": "value_2",
                "param_3": "value_3",
                "param_4": "value_4",
                "param_5": "unknown_1",
                "param_6": "unknown_2",
                "param_7": "unknown_3"
            },
            "calling": [
                "FUN_08000b08"
            ],
            "called": [
                "FUN_080014ba"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001550": {
            "entrypoint": "0x08001550",
            "current_name": "process_and_call_code_08001550",
            "code": "\nvoid process_and_call_code_08001550(undefined4 *pointer,uint size,int data_start)\n\n{\n  int index;\n  \n  process_data_08001310(pointer,(size & 7) << 3 | 0x40,0);\n  for (index = 0; index < 8; index = index + 1) {\n    (**(code **)*pointer)(pointer,*(undefined *)(data_start + index));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001550": "process_and_call_code_08001550",
                "param_1": "pointer",
                "param_2": "size",
                "param_3": "data_start",
                "iVar1": "index"
            },
            "calling": [
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800157c": {
            "entrypoint": "0x0800157c",
            "current_name": "process_and_store_input_0800157c",
            "code": "\nundefined * processAndStoreInput_0800157c(undefined *inputArray,undefined4 inputValue,undefined inputChar1,undefined inputChar2)\n\n{\n  *inputArray = (char)inputValue;\n  inputArray[1] = inputChar1;\n  inputArray[2] = inputChar2;\n  process_input_080057b4(inputValue,0);\n  process_input_080057b4(inputArray[1],1);\n  process_input_080057b4(inputArray[2],1);\n  process_data_08005848(inputArray[1],1);\n  process_data_08005848(inputArray[2],0);\n  return inputArray;\n}\n\n",
            "renaming": {
                "FUN_0800157c": "process_and_store_input_0800157c",
                "param_1": "inputArray",
                "param_2": "inputValue",
                "param_3": "inputChar1",
                "param_4": "inputChar2"
            },
            "calling": [
                "FUN_08000b08"
            ],
            "called": [
                "FUN_08005848",
                "FUN_080057b4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080015b2": {
            "entrypoint": "0x080015b2",
            "current_name": "reverse_bits_080015b2",
            "code": "\nuint reverseBits_080015b2(undefined *data)\n\n{\n  int bitCheckResult;\n  uint bitPosition;\n  uint reversedBits;\n  \n  process_data_08005848(data[1],0);\n  reversedBits = 0;\n  for (bitPosition = 0x1f; -1 < (int)bitPosition; bitPosition = bitPosition - 1) {\n    process_data_08005848(data[2],1);\n    bitCheckResult = check_and_update_bit_08005890(*data);\n    if (bitCheckResult != 0) {\n      reversedBits = reversedBits | 1 << (bitPosition & 0xff);\n    }\n    process_data_08005848(data[2],0);\n  }\n  process_data_08005848(data[1],1);\n  return reversedBits;\n}\n\n",
            "renaming": {
                "FUN_080015b2": "reverse_bits_080015b2",
                "param_1": "data",
                "iVar1": "bitCheckResult",
                "uVar2": "bitPosition",
                "uVar3": "reversedBits"
            },
            "calling": [
                "FUN_080015f8"
            ],
            "called": [
                "FUN_08005848",
                "FUN_08005890"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080015f8": {
            "entrypoint": "0x080015f8",
            "current_name": "perform_calculation_080015f8",
            "code": "\nundefined8 performCalculation_080015f8(undefined4 param1,int param2,undefined4 param3,undefined4 param4)\n\n{\n  uint reversedBits;\n  undefined8 result;\n  \n  reversedBits = reverse_bits_080015b2();\n  if ((reversedBits & 0x10000) == 0) {\n    reversedBits = reversedBits >> 0x12;\n    result = shift_and_rotate_bits_0800040c(reversedBits & 0x1fff);\n    if ((reversedBits & 0x2000) != 0) {\n      result = shift_and_rotate_bits_0800040c(~reversedBits & 0x1fff);\n      result = perform_calculation_08000194((int)result,(int)((ulonglong)result >> 0x20),0,0x3ff00000,param4);\n      result = CONCAT44((int)((ulonglong)result >> 0x20) + -0x80000000,(int)result);\n    }\n    result = calculate_080004f8((int)result,(int)((ulonglong)result >> 0x20),0,0x3fd00000);\n    if (param2 == 1) {\n      result = calculate_080004f8((int)result,(int)((ulonglong)result >> 0x20),0,0x40220000);\n      result = calculate_floating_point_0800074c((int)result,(int)((ulonglong)result >> 0x20),0,0x40140000);\n      result = perform_calculation_08000194((int)result,(int)((ulonglong)result >> 0x20),0,0x40400000);\n      return result;\n    }\n  }\n  else {\n    reversedBits = reversedBits & 7;\n    if (reversedBits == 2) {\n      return 0x40c3888000000000;\n    }\n    if (reversedBits == 4) {\n      return 0x40c3890000000000;\n    }\n    if (reversedBits != 1) {\n      return 0;\n    }\n    result = 0x40c3880000000000;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080015f8": "perform_calculation_080015f8",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "reversedBits",
                "uVar2": "result"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_0800074c",
                "FUN_08000194",
                "FUN_080015b2",
                "FUN_080004f8",
                "FUN_0800040c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080016b4": {
            "entrypoint": "0x080016b4",
            "current_name": "process_data_080016b4",
            "code": "\nchar processData_080016b4(int input)\n\n{\n  char output;\n  int initializedGlobalVar;\n  int checkResult;\n  undefined4 result1_high;\n  undefined4 result2;\n  undefined4 result1;\n  undefined4 defaultResult1;\n  undefined4 result3;\n  undefined4 result2_high;\n  undefined4 defaultResult2;\n  char isInitialized;\n  undefined4 defaultResult1_high;\n  undefined4 defaultResult2_high;\n  undefined4 result3_high;\n  undefined8 calculation1;\n  undefined8 calculation2;\n  undefined8 calculationResult;\n  undefined8 calculation3;\n  undefined4 calculation1_low;\n  undefined4 calculation1_high;\n  \n  isInitialized = *(char *)(input + 0x70);\n  if (isInitialized != '\\0') {\n    initializedGlobalVar = initialize_global_variable_080058e0();\n    if ((uint)(initializedGlobalVar - *(int *)(input + 0x44)) < *(uint *)(input + 0x58)) {\n      isInitialized = '\\0';\n    }\n    else {\n      result2 = **(undefined4 **)(input + 0x38);\n      result3 = (*(undefined4 **)(input + 0x38))[1];\n      calculation1 = calculate_result_08000190(**(undefined4 **)(input + 0x40),(*(undefined4 **)(input + 0x40))[1])\n      ;\n      result3_high = (undefined4)((ulonglong)calculation1 >> 0x20);\n      calculation2 = calculate_result_08000190(result2,result3,*(undefined4 *)(input + 0x50),\n                            *(undefined4 *)(input + 0x54));\n      result1_high = (undefined4)((ulonglong)calculation2 >> 0x20);\n      calculationResult = calculate_080004f8((int)calculation1,result3_high,*(undefined4 *)(input + 0x20),\n                            *(undefined4 *)(input + 0x24));\n      calculationResult = perform_calculation_08000194((int)calculationResult,(int)((ulonglong)calculationResult >> 0x20),\n                            *(undefined4 *)(input + 0x48),*(undefined4 *)(input + 0x4c));\n      *(undefined8 *)(input + 0x48) = calculationResult;\n      output = *(char *)(input + 0x71);\n      if (output == '\\0') {\n        calculation3 = calculate_080004f8((int)calculation2,result1_high,*(undefined4 *)(input + 0x18),\n                              *(undefined4 *)(input + 0x1c));\n        calculationResult = calculate_result_08000190((int)calculationResult,(int)((ulonglong)calculationResult >> 0x20),(int)calculation3,\n                              (int)((ulonglong)calculation3 >> 0x20));\n        *(undefined8 *)(input + 0x48) = calculationResult;\n      }\n      result1 = *(undefined4 *)(input + 0x48);\n      result2_high = *(undefined4 *)(input + 0x4c);\n      defaultResult1_high = *(undefined4 *)(undefined8 *)(input + 0x68);\n      defaultResult2_high = *(undefined4 *)(input + 0x6c);\n      calculationResult = *(undefined8 *)(input + 0x68);\n      checkResult = check_if_pointer_is_null_08000a18(result1,result2_high,defaultResult1_high,defaultResult2_high);\n      if (checkResult == 0) {\n        defaultResult1 = *(undefined4 *)(input + 0x60);\n        defaultResult2 = *(undefined4 *)(input + 100);\n        checkResult = check_if_input_is_empty_080009dc(result1,result2_high);\n        if (checkResult != 0) {\n          *(undefined4 *)(input + 0x48) = defaultResult1;\n          *(undefined4 *)(input + 0x4c) = defaultResult2;\n        }\n      }\n      else {\n        *(undefined4 *)(input + 0x48) = defaultResult1_high;\n        *(undefined4 *)(input + 0x4c) = defaultResult2_high;\n      }\n      if (output == '\\0') {\n        calculation1 = 0;\n      }\n      else {\n        calculation1 = calculate_080004f8((int)calculation1,result3_high,*(undefined4 *)(input + 0x18),\n                              *(undefined4 *)(input + 0x1c));\n      }\n      calculation1_high = (undefined4)((ulonglong)calculation1 >> 0x20);\n      calculation1_low = (undefined4)calculation1;\n      result3_high = *(undefined4 *)(input + 0x48);\n      result1 = *(undefined4 *)(input + 0x4c);\n      calculation1 = calculate_080004f8((int)calculation2,result1_high,*(undefined4 *)(input + 0x28),\n                            *(undefined4 *)(input + 0x2c));\n      calculation1 = calculate_result_08000190(result3_high,result1,(int)calculation1,(int)((ulonglong)calculation1 >> 0x20));\n      calculation1 = perform_calculation_08000194(calculation1_low,calculation1_high,(int)calculation1,(int)((ulonglong)calculation1 >> 0x20));\n      result3_high = (undefined4)((ulonglong)calculation1 >> 0x20);\n      checkResult = check_if_input_is_empty_080009dc(defaultResult1_high,defaultResult2_high,(int)calculation1,result3_high);\n      if (checkResult == 0) {\n        calculationResult = *(undefined8 *)(input + 0x60);\n        checkResult = check_if_input_is_empty_080009dc((int)calculation1,result3_high,*(undefined4 *)(undefined8 *)(input + 0x60),\n                             *(undefined4 *)(input + 100));\n        if (checkResult == 0) {\n          calculationResult = calculation1;\n        }\n      }\n      **(undefined8 **)(input + 0x3c) = calculationResult;\n      *(undefined4 *)(input + 0x50) = result2;\n      *(undefined4 *)(input + 0x54) = result3;\n      *(int *)(input + 0x44) = initializedGlobalVar;\n    }\n  }\n  return isInitialized;\n}\n\n",
            "renaming": {
                "FUN_080016b4": "process_data_080016b4",
                "param_1": "input",
                "cVar1": "output",
                "iVar2": "initializedGlobalVar",
                "iVar3": "checkResult",
                "uVar4": "result1_high",
                "uVar5": "result2",
                "uVar6": "result1",
                "uVar7": "defaultResult1",
                "uVar8": "result3",
                "uVar9": "result2_high",
                "uVar10": "defaultResult2",
                "cVar11": "isInitialized",
                "uVar12": "defaultResult1_high",
                "uVar13": "defaultResult2_high",
                "uVar14": "result3_high",
                "uVar15": "calculation1",
                "uVar16": "calculation2",
                "uVar17": "calculationResult",
                "uVar18": "calculation3",
                "local_38": "calculation1_low",
                "uStack_34": "calculation1_high"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080009dc",
                "FUN_08000194",
                "FUN_080058e0",
                "FUN_080004f8",
                "FUN_08000a18",
                "FUN_08000190"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001814": {
            "entrypoint": "0x08001814",
            "current_name": "process_input_08001814",
            "code": "\nvoid processInput_08001814(undefined4 *outputArray,undefined4 inputArg1,undefined4 inputArg2,undefined4 inputArg3,\n                 undefined4 inputArg4,undefined4 inputArg5,undefined4 inputArg6,undefined4 inputArg7,\n                 int inputArg8)\n\n{\n  int isEmpty;\n  undefined4 tempVar;\n  undefined flag;\n  bool isNotEqualOne;\n  undefined8 shiftedValue;\n  undefined8 calculationResult1;\n  undefined8 calculationResult2;\n  \n  isEmpty = check_if_input_is_empty_080009dc(inputArg2,inputArg3,0,0);\n  if (((isEmpty == 0) && (isEmpty = check_if_input_is_empty_080009dc(inputArg4,inputArg5,0,0), isEmpty == 0)) &&\n     (isEmpty = check_if_input_is_empty_080009dc(inputArg6,inputArg7,0,0), isEmpty == 0)) {\n    outputArray[0xd] = inputArg8;\n    isNotEqualOne = inputArg8 != 1;\n    if (isNotEqualOne) {\n      inputArg8 = 0;\n    }\n    flag = (undefined)inputArg8;\n    if (!isNotEqualOne) {\n      flag = 1;\n    }\n    *(undefined *)((int)outputArray + 0x71) = flag;\n    *outputArray = inputArg2;\n    outputArray[1] = inputArg3;\n    outputArray[2] = inputArg4;\n    outputArray[3] = inputArg5;\n    outputArray[4] = inputArg6;\n    outputArray[5] = inputArg7;\n    shiftedValue = shift_and_rotate_bits_0800040c(outputArray[0x16]);\n    shiftedValue = calculate_floating_point_0800074c((int)shiftedValue,(int)((ulonglong)shiftedValue >> 0x20),0,0x408f4000);\n    tempVar = (undefined4)((ulonglong)shiftedValue >> 0x20);\n    outputArray[6] = inputArg2;\n    outputArray[7] = inputArg3;\n    calculationResult1 = calculate_080004f8(inputArg4,inputArg5,(int)shiftedValue,tempVar);\n    *(undefined8 *)(outputArray + 8) = calculationResult1;\n    shiftedValue = calculate_floating_point_0800074c(inputArg6,inputArg7,(int)shiftedValue,tempVar);\n    *(undefined8 *)(outputArray + 10) = shiftedValue;\n    if (outputArray[0xc] == 1) {\n      calculationResult2 = calculate_result_08000190(0,0,inputArg2,inputArg3);\n      *(undefined8 *)(outputArray + 6) = calculationResult2;\n      calculationResult1 = calculate_result_08000190(0,0,(int)calculationResult1,(int)((ulonglong)calculationResult1 >> 0x20));\n      *(undefined8 *)(outputArray + 8) = calculationResult1;\n      shiftedValue = calculate_result_08000190(0,0,(int)shiftedValue,(int)((ulonglong)shiftedValue >> 0x20));\n      *(undefined8 *)(outputArray + 10) = shiftedValue;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001814": "process_input_08001814",
                "param_1": "outputArray",
                "param_2": "inputArg1",
                "param_3": "inputArg2",
                "param_4": "inputArg3",
                "param_5": "inputArg4",
                "param_6": "inputArg5",
                "param_7": "inputArg6",
                "param_8": "inputArg7",
                "param_9": "inputArg8",
                "iVar1": "isEmpty",
                "uVar2": "tempVar",
                "uVar3": "flag",
                "bVar4": "isNotEqualOne",
                "uVar5": "shiftedValue",
                "uVar6": "calculationResult1",
                "uVar7": "calculationResult2"
            },
            "calling": [
                "FUN_08001ab0",
                "FUN_080018f8"
            ],
            "called": [
                "FUN_0800074c",
                "FUN_080009dc",
                "FUN_080004f8",
                "FUN_0800040c",
                "FUN_08000190"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080018f8": {
            "entrypoint": "0x080018f8",
            "current_name": "process_and_return_080018f8",
            "code": "\nvoid processAndReturn_080018f8(void)\n\n{\n  processInput();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080018f8": "process_and_return_080018f8",
                "process_input_08001814": "processInput"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08001814"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001918": {
            "entrypoint": "0x08001918",
            "current_name": "perform_computation_08001918",
            "code": "\nvoid performComputation_08001918(int dataStructParam,int loopCount,undefined4 unusedParam1,undefined4 unusedParam2)\n\n{\n  undefined4 shiftedResult;\n  undefined8 bitwiseShifted;\n  undefined8 shiftedAndRotated;\n  \n  if (0 < loopCount) {\n    bitwiseShifted = bitwise_shift_0800042c(loopCount);\n    shiftedAndRotated = shift_and_rotate_bits_0800040c(*(undefined4 *)(dataStructParam + 0x58));\n    bitwiseShifted = calculate_floating_point_0800074c((int)bitwiseShifted,(int)((ulonglong)bitwiseShifted >> 0x20),(int)shiftedAndRotated,\n                         (int)((ulonglong)shiftedAndRotated >> 0x20),unusedParam2);\n    shiftedResult = (undefined4)((ulonglong)bitwiseShifted >> 0x20);\n    shiftedAndRotated = calculate_080004f8((int)bitwiseShifted,shiftedResult,*(undefined4 *)(dataStructParam + 0x20),\n                         *(undefined4 *)(dataStructParam + 0x24));\n    *(undefined8 *)(dataStructParam + 0x20) = shiftedAndRotated;\n    bitwiseShifted = calculate_floating_point_0800074c(*(undefined4 *)(dataStructParam + 0x28),*(undefined4 *)(dataStructParam + 0x2c),(int)bitwiseShifted,\n                         shiftedResult);\n    *(undefined8 *)(dataStructParam + 0x28) = bitwiseShifted;\n    *(int *)(dataStructParam + 0x58) = loopCount;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001918": "perform_computation_08001918",
                "param_1": "dataStructParam",
                "param_2": "loopCount",
                "param_3": "unusedParam1",
                "param_4": "unusedParam2",
                "uVar1": "shiftedResult",
                "uVar2": "bitwiseShifted",
                "uVar3": "shiftedAndRotated"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_0800074c",
                "FUN_080004f8",
                "FUN_0800040c",
                "FUN_0800042c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001960": {
            "entrypoint": "0x08001960",
            "current_name": "update_config_08001960",
            "code": "\nvoid updateConfig_08001960(int configAddress,undefined4 param2,undefined4 input1,undefined4 input2,\n                 undefined4 input3,undefined4 input4)\n\n{\n  int isValid;\n  undefined4 *ptrToConfig;\n  undefined4 ptrToData1;\n  undefined4 ptrToData2;\n  undefined4 tempData1;\n  undefined4 tempData2;\n  \n  isValid = validate_and_return_08000a04(input1,input2,input3,input4,input2);\n  if (isValid == 0) {\n    *(undefined4 *)(configAddress + 0x60) = input1;\n    *(undefined4 *)(configAddress + 100) = input2;\n    *(undefined4 *)(configAddress + 0x68) = input3;\n    *(undefined4 *)(configAddress + 0x6c) = input4;\n    if (*(char *)(configAddress + 0x70) != '\\0') {\n      ptrToConfig = *(undefined4 **)(configAddress + 0x3c);\n      ptrToData1 = *ptrToConfig;\n      tempData1 = ptrToConfig[1];\n      isValid = check_if_input_is_empty_080009dc(input3,input4,ptrToData1,tempData1);\n      if (isValid == 0) {\n        isValid = check_if_pointer_is_null_08000a18(input1,input2,ptrToData1,tempData1);\n        if (isValid != 0) {\n          *ptrToConfig = input1;\n          ptrToConfig[1] = input2;\n        }\n      }\n      else {\n        *ptrToConfig = input3;\n        ptrToConfig[1] = input4;\n      }\n      ptrToData1 = *(undefined4 *)(configAddress + 0x48);\n      tempData1 = *(undefined4 *)(configAddress + 0x4c);\n      ptrToData2 = *(undefined4 *)(configAddress + 0x68);\n      tempData2 = *(undefined4 *)(configAddress + 0x6c);\n      isValid = check_if_pointer_is_null_08000a18(ptrToData1,tempData1,ptrToData2,tempData2);\n      if (isValid != 0) {\n        *(undefined4 *)(configAddress + 0x48) = ptrToData2;\n        *(undefined4 *)(configAddress + 0x4c) = tempData2;\n        return;\n      }\n      ptrToData2 = *(undefined4 *)(configAddress + 0x60);\n      tempData2 = *(undefined4 *)(configAddress + 100);\n      isValid = check_if_input_is_empty_080009dc(ptrToData1,tempData1,ptrToData2,tempData2);\n      if (isValid != 0) {\n        *(undefined4 *)(configAddress + 0x48) = ptrToData2;\n        *(undefined4 *)(configAddress + 0x4c) = tempData2;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001960": "update_config_08001960",
                "param_1": "configAddress",
                "param_2": "param2",
                "param_3": "input1",
                "param_4": "input2",
                "param_5": "input3",
                "param_6": "input4",
                "iVar1": "isValid",
                "puVar2": "ptrToConfig",
                "uVar3": "ptrToData1",
                "uVar4": "ptrToData2",
                "uVar5": "tempData1",
                "uVar6": "tempData2"
            },
            "calling": [
                "FUN_08001ab0",
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080009dc",
                "FUN_08000a04",
                "FUN_08000a18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080019f6": {
            "entrypoint": "0x080019f6",
            "current_name": "update_pointers_080019f6",
            "code": "\nvoid updatePointers_080019f6(int ptr)\n\n{\n  int result;\n  undefined4 ptr1;\n  undefined4 ptr2;\n  undefined4 ptr3;\n  undefined4 ptr4;\n  \n  ptr2 = **(undefined4 **)(ptr + 0x3c);\n  ptr3 = (*(undefined4 **)(ptr + 0x3c))[1];\n  *(undefined4 *)(ptr + 0x48) = ptr2;\n  *(undefined4 *)(ptr + 0x4c) = ptr3;\n  ptr1 = (*(undefined4 **)(ptr + 0x38))[1];\n  *(undefined4 *)(ptr + 0x50) = **(undefined4 **)(ptr + 0x38);\n  *(undefined4 *)(ptr + 0x54) = ptr1;\n  ptr1 = *(undefined4 *)(ptr + 0x68);\n  ptr4 = *(undefined4 *)(ptr + 0x6c);\n  result = check_if_pointer_is_null_08000a18(ptr2,ptr3,ptr1,ptr4);\n  if (result == 0) {\n    ptr1 = *(undefined4 *)(ptr + 0x60);\n    ptr4 = *(undefined4 *)(ptr + 100);\n    result = check_if_input_is_empty_080009dc(ptr2,ptr3,ptr1,ptr4);\n    if (result != 0) {\n      *(undefined4 *)(ptr + 0x48) = ptr1;\n      *(undefined4 *)(ptr + 0x4c) = ptr4;\n    }\n    return;\n  }\n  *(undefined4 *)(ptr + 0x48) = ptr1;\n  *(undefined4 *)(ptr + 0x4c) = ptr4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080019f6": "update_pointers_080019f6",
                "param_1": "ptr",
                "iVar1": "result",
                "uVar2": "ptr1",
                "uVar3": "ptr2",
                "uVar4": "ptr3",
                "uVar5": "ptr4"
            },
            "calling": [
                "FUN_08001a44"
            ],
            "called": [
                "FUN_080009dc",
                "FUN_08000a18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001a44": {
            "entrypoint": "0x08001a44",
            "current_name": "set_flag_and_call_update_pointers_08001a44",
            "code": "\nvoid setFlagAndCallUpdatePointers_08001a44(int objectAddress,int flagValue)\n\n{\n  undefined newFlagValue;\n  \n  if (flagValue == 1) {\n    newFlagValue = 1;\n    if (*(char *)(objectAddress + 0x70) == '\\0') {\n      update_pointers_080019f6();\n    }\n  }\n  else {\n    newFlagValue = 0;\n  }\n  *(undefined *)(objectAddress + 0x70) = newFlagValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001a44": "set_flag_and_call_update_pointers_08001a44",
                "param_1": "objectAddress",
                "param_2": "flagValue",
                "uVar1": "newFlagValue"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080019f6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001a66": {
            "entrypoint": "0x08001a66",
            "current_name": "update_parameters_08001a66",
            "code": "\nvoid updateParameters_08001a66(int ptrFunctionData,int newParamValue,undefined4 param3,undefined4 param4)\n\n{\n  undefined8 result;\n  \n  if ((*(char *)(ptrFunctionData + 0x70) != '\\0') && (*(int *)(ptrFunctionData + 0x30) != newParamValue)) {\n    result = calculateResult(0,0,*(undefined4 *)(ptrFunctionData + 0x18),*(undefined4 *)(ptrFunctionData + 0x1c),param4\n                        );\n    *(undefined8 *)(ptrFunctionData + 0x18) = result;\n    result = calculateResult(0,0,*(undefined4 *)(ptrFunctionData + 0x20),*(undefined4 *)(ptrFunctionData + 0x24));\n    *(undefined8 *)(ptrFunctionData + 0x20) = result;\n    result = calculateResult(0,0,*(undefined4 *)(ptrFunctionData + 0x28),*(undefined4 *)(ptrFunctionData + 0x2c));\n    *(undefined8 *)(ptrFunctionData + 0x28) = result;\n  }\n  *(int *)(ptrFunctionData + 0x30) = newParamValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001a66": "update_parameters_08001a66",
                "param_1": "ptrFunctionData",
                "param_2": "newParamValue",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "result",
                "calculate_result_08000190": "calculateResult"
            },
            "calling": [
                "FUN_08001ab0"
            ],
            "called": [
                "FUN_08000190"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001ab0": {
            "entrypoint": "0x08001ab0",
            "current_name": "initialize_config_08001ab0",
            "code": "\nint initialize_config_08001ab0(int config,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                undefined4 param_5,undefined4 param_6,undefined4 param_7,undefined4 param_8,\n                undefined4 param_9,undefined4 config0,undefined4 config1,undefined4 config2)\n\n{\n  int initialized_variable;\n  undefined4 extra_output;\n  \n  *(undefined4 *)(config + 0x3c) = param_3;\n  *(undefined4 *)(config + 0x38) = param_2;\n  *(undefined4 *)(config + 0x40) = param_4;\n  *(undefined *)(config + 0x70) = 0;\n  update_config(config,param_2,0,0,0,0x406fe000);\n  *(undefined4 *)(config + 0x58) = 100;\n  update_parameters(config,config2);\n  process_input(config,extra_output,param_5,param_6,param_7,param_8,param_9,config0,config1);\n  initialized_variable = initialize_global_variable();\n  *(int *)(config + 0x44) = initialized_variable - *(int *)(config + 0x58);\n  return config;\n}\n\n",
            "renaming": {
                "FUN_08001ab0": "initialize_config_08001ab0",
                "param_1": "config",
                "iVar1": "initialized_variable",
                "extraout_r1": "extra_output",
                "update_config_08001960": "update_config",
                "update_parameters_08001a66": "update_parameters",
                "process_input_08001814": "process_input",
                "initialize_global_variable_080058e0": "initialize_global_variable"
            },
            "calling": [
                "FUN_08001b18"
            ],
            "called": [
                "FUN_08001814",
                "FUN_08001960",
                "FUN_08001a66",
                "FUN_080058e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001b18": {
            "entrypoint": "0x08001b18",
            "current_name": "initialize_and_return_param_08001b18",
            "code": "\nundefined4 initialize_and_return_param_08001b18(undefined4 input_param)\n\n{\n  initialize_config();\n  return input_param;\n}\n\n",
            "renaming": {
                "FUN_08001b18": "initialize_and_return_param_08001b18",
                "param_1": "input_param",
                "initialize_config_08001ab0": "initialize_config"
            },
            "calling": [
                "FUN_08000b08"
            ],
            "called": [
                "FUN_08001ab0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001b48": {
            "entrypoint": "0x08001b48",
            "current_name": "initialize_hardware_08001b48",
            "code": "\nvoid initialize_hardware_08001b48(void)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined4 config_1 [2];\n  undefined4 config_2;\n  undefined4 param_1;\n  undefined4 param_2;\n  undefined4 param_3;\n  undefined4 param_4;\n  undefined4 param_5;\n  undefined4 hardware_status [4];\n  undefined4 setting_1;\n  undefined4 setting_2;\n  undefined4 setting_3;\n  undefined4 setting_4;\n  undefined4 setting_5;\n  \n  hardware_status[0] = 2;\n  setting_1 = 1;\n  setting_2 = 0x10;\n  setting_3 = 2;\n  setting_4 = 0;\n  setting_5 = 0x380000;\n  iVar1 = check_hardware_status(hardware_status);\n  if (iVar1 != 0) {\n    halt_execution(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x88);\n  }\n  param_1 = 0xf;\n  param_2 = 2;\n  param_3 = 0;\n  param_4 = 0x400;\n  param_5 = 0;\n  iVar1 = update_settings(&param_1);\n  if (iVar1 != 0) {\n    halt_execution(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x95);\n  }\n  config_1[0] = 2;\n  config_2 = 0x8000;\n  iVar1 = update_configuration(config_1);\n  if (iVar1 != 0) {\n    halt_execution(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x9c);\n  }\n  uVar2 = get_global_variable();\n  initialize_data(uVar2 / 1000);\n  update_register(4);\n  update_data(0xffffffff,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001b48": "initialize_hardware_08001b48",
                "local_30": "hardware_status",
                "local_20": "setting_1",
                "local_1c": "setting_2",
                "local_14": "setting_3",
                "local_10": "setting_4",
                "local_c": "setting_5",
                "check_hardware_status_08003688": "check_hardware_status",
                "infinite_loop_08004d40": "halt_execution",
                "local_44": "param_1",
                "local_40": "param_2",
                "local_3c": "param_3",
                "local_38": "param_4",
                "local_34": "param_5",
                "update_settings_08003ad4": "update_settings",
                "local_54": "config_1",
                "local_4c": "config_2",
                "update_configuration_08003c90": "update_configuration",
                "get_global_variable_08003c44": "get_global_variable",
                "initialize_data_08002514": "initialize_data",
                "update_register_08002560": "update_register",
                "update_data_08002494": "update_data"
            },
            "calling": [
                "FUN_08004c52"
            ],
            "called": [
                "FUN_08002514",
                "FUN_08004d40",
                "FUN_08002494",
                "FUN_08003c90",
                "FUN_08003ad4",
                "FUN_08003c44",
                "FUN_08003688",
                "FUN_08002560"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "entry": {
            "entrypoint": "0x08001be8",
            "current_name": "entry",
            "code": "\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined *)(iVar1 + 0x20000000) < &DAT_2000015c; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x8007970);\n  }\n  for (puVar2 = &DAT_20000160; puVar2 < &DAT_200006a8; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  initialize_memory_08004d44();\n  execute_functions_08006198();\n  UNRECOVERED_JUMPTABLE = (code *)0x8001c1a;\n  continuous_processing_08005f6c();\n                    /* WARNING: Could not recover jumptable at 0x08001c1a. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "renaming": {},
            "calling": [],
            "called": [
                "FUN_08005f6c",
                "FUN_08004d44",
                "FUN_08006198"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c32": {
            "entrypoint": "0x08001c32",
            "current_name": "initialize_hardware_08001c32",
            "code": "\nvoid initialize_hardware_08001c32(void)\n\n{\n  init_hardware();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001c32": "initialize_hardware_08001c32",
                "initialize_hardware_and_update_flag_08004c52": "init_hardware"
            },
            "calling": [
                "FUN_08005f5e"
            ],
            "called": [
                "FUN_08004c52"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c3a": {
            "entrypoint": "0x08001c3a",
            "current_name": "FUNC_08001c3a",
            "code": "\nvoid FUNC_08001c3a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001c3a": "FUNC_08001c3a"
            },
            "calling": [
                "FUN_08001c88"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08001c3c": {
            "entrypoint": "0x08001c3c",
            "current_name": "initialize_and_update_data_08001c3c",
            "code": "\nundefined4 initializeAndUpdateData_08001c3c(uint inputParam)\n\n{\n  int initResult;\n  \n  initResult = initialize_data_08002514(DAT_20000084 / (1000 / DAT_20000078));\n  if (initResult != 0) {\n    return 1;\n  }\n  if (0xf < inputParam) {\n    return 1;\n  }\n  update_data_08002494(0xffffffff,inputParam,0);\n  DAT_2000007c = inputParam;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001c3c": "initialize_and_update_data_08001c3c",
                "param_1": "inputParam",
                "iVar1": "initResult"
            },
            "calling": [
                "FUN_08003afa",
                "FUN_08001c88"
            ],
            "called": [
                "FUN_08002514",
                "FUN_08002494"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c88": {
            "entrypoint": "0x08001c88",
            "current_name": "initialize_and_update_flag_08001c88",
            "code": "\n\n\nundefined4 initialize_and_update_flag_08001c88(void)\n\n{\n  _DAT_40022000 = _DAT_40022000 | 0x10;\n  update_flag(3);\n  initialize_and_update_data(0xf);\n  FUNC_08001c3a();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001c88": "initialize_and_update_flag_08001c88",
                "update_flag_08002470": "update_flag",
                "initialize_and_update_data_08001c3c": "initialize_and_update_data"
            },
            "calling": [
                "FUN_08004c52"
            ],
            "called": [
                "FUN_08001c3a",
                "FUN_08002470",
                "FUN_08001c3c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001cac": {
            "entrypoint": "0x08001cac",
            "current_name": "update_sum_08001cac",
            "code": "\nvoid updateSum_08001cac(void)\n\n{\n  DAT_200006a0 = (uint)DAT_20000078 + DAT_200006a0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001cac": "update_sum_08001cac"
            },
            "calling": [
                "FUN_08004b9e"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001cc4": {
            "entrypoint": "0x08001cc4",
            "current_name": "get_global_variable_08001cc4",
            "code": "\nundefined4 get_global_variable_08001cc4(void)\n\n{\n  return DAT_200006a0;\n}\n\n",
            "renaming": {
                "FUN_08001cc4": "get_global_variable_08001cc4"
            },
            "calling": [
                "FUN_080020f0",
                "FUN_08003c90",
                "FUN_08001cd0",
                "FUN_08004b94",
                "FUN_08003afa",
                "FUN_08004478",
                "FUN_08001f84",
                "FUN_08002384",
                "FUN_080043b4",
                "FUN_080053d4",
                "FUN_08003688"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001cd0": {
            "entrypoint": "0x08001cd0",
            "current_name": "check_and_calculate_resource_value_08001cd0",
            "code": "\nundefined4 checkAndCalculateResourceValue_08001cd0(uint **resourceData,uint limit)\n\n{\n  int initialGlobalVar;\n  uint resourceValue;\n  int calculationValue;\n  undefined4 result;\n  uint *dataPtr;\n  uint modifiedGlobalVar;\n  uint counter;\n  \n  counter = 0;\n  initialGlobalVar = get_global_variable_08001cc4();\n  modifiedGlobalVar = DAT_20000084;\n  dataPtr = *resourceData;\n  if ((dataPtr[2] & 0x100) == 0) {\n    if (((dataPtr[1] & 0x100) == 0) && ((dataPtr[0xb] & 0xf00000) == 0)) {\n      do {\n        if ((**resourceData & 2) != 0) goto LAB_08001de2;\n      } while ((limit == 0xffffffff) ||\n              ((limit != 0 && (calculationValue = get_global_variable_08001cc4(), (uint)(calculationValue - initialGlobalVar) <= limit))));\n      resourceData[10] = (uint *)((uint)resourceData[10] | 4);\n      *(undefined *)(resourceData + 9) = 0;\n      result = 3;\n    }\n    else {\n      resourceValue = calculate_resource_value_08003da4(2);\n      dataPtr = *resourceData;\n      if (((dataPtr[4] & 0x24924924) == 0) && ((dataPtr[3] & 0x924924) == 0)) {\n        if ((dataPtr[4] & 0x12492492) == 0) {\n          if ((dataPtr[3] & 0x492492) == 0) {\n            calculationValue = 0x14;\n          }\n          else {\n            calculationValue = 0x29;\n          }\n        }\n        else {\n          calculationValue = 0x29;\n        }\n      }\n      else if (((dataPtr[4] & 0x12492492) == 0) && ((dataPtr[3] & 0x492492) == 0)) {\n        calculationValue = 0x54;\n      }\n      else if ((dataPtr[4] & 0x249249) == 0) {\n        if ((dataPtr[3] & 0x249249) == 0) {\n          calculationValue = 0x54;\n        }\n        else {\n          calculationValue = 0xfc;\n        }\n      }\n      else {\n        calculationValue = 0xfc;\n      }\n      modifiedGlobalVar = (modifiedGlobalVar / resourceValue) * calculationValue;\n      for (; counter <= modifiedGlobalVar && modifiedGlobalVar - counter != 0; counter = counter + 1) {\n        if ((limit != 0xffffffff) &&\n           ((limit == 0 || (calculationValue = get_global_variable_08001cc4(), limit < (uint)(calculationValue - initialGlobalVar))))) {\n          resourceData[10] = (uint *)((uint)resourceData[10] | 4);\n          *(undefined *)(resourceData + 9) = 0;\n          return 3;\n        }\n      }\nLAB_08001de2:\n      **resourceData = 0xffffffed;\n      resourceData[10] = (uint *)((uint)resourceData[10] | 0x200);\n      if (((*resourceData)[2] & 0xe0000) == 0xe0000) {\n        if (resourceData[3] == (uint *)0x0) {\n          resourceData[10] = (uint *)((uint)resourceData[10] & 0xfffffeff);\n          if (((uint)resourceData[10] & 0x1000) == 0) {\n            resourceData[10] = (uint *)((uint)resourceData[10] | 1);\n            result = 0;\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        result = 0;\n      }\n    }\n  }\n  else {\n    resourceData[10] = (uint *)((uint)resourceData[10] | 0x20);\n    *(undefined *)(resourceData + 9) = 0;\n    result = 1;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08001cd0": "check_and_calculate_resource_value_08001cd0",
                "param_1": "resourceData",
                "param_2": "limit",
                "iVar1": "initialGlobalVar",
                "uVar2": "resourceValue",
                "iVar3": "calculationValue",
                "uVar4": "result",
                "puVar5": "dataPtr",
                "uVar6": "modifiedGlobalVar",
                "local_1c": "counter"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08003da4",
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001e40": {
            "entrypoint": "0x08001e40",
            "current_name": "get_offset_value_08001e40",
            "code": "\nundefined4 getOffsetValue_08001e40(int *inputArray)\n\n{\n  return *(undefined4 *)(*inputArray + 0x4c);\n}\n\n",
            "renaming": {
                "FUN_08001e40": "get_offset_value_08001e40",
                "param_1": "inputArray"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001e48": {
            "entrypoint": "0x08001e48",
            "current_name": "update_registers_08001e48",
            "code": "\nundefined4 update_registers_08001e48(int *register_1,uint *register_2)\n\n{\n  undefined4 result;\n  uint temp;\n  int counter;\n  \n  if (*(char *)(register_1 + 9) == '\\x01') {\n    result = 2;\n  }\n  else {\n    *(undefined *)(register_1 + 9) = 1;\n    temp = register_2[1];\n    if (temp < 7) {\n      temp = temp * 5 - 5;\n      *(uint *)(*register_1 + 0x34) =\n           *register_2 << (temp & 0xff) | *(uint *)(*register_1 + 0x34) & ~(0x1f << (temp & 0xff));\n    }\n    else if (temp < 0xd) {\n      temp = temp * 5 - 0x23;\n      *(uint *)(*register_1 + 0x30) =\n           *register_2 << (temp & 0xff) | *(uint *)(*register_1 + 0x30) & ~(0x1f << (temp & 0xff));\n    }\n    else {\n      temp = temp * 5 - 0x41;\n      *(uint *)(*register_1 + 0x2c) =\n           *register_2 << (temp & 0xff) | *(uint *)(*register_1 + 0x2c) & ~(0x1f << (temp & 0xff));\n    }\n    temp = *register_2;\n    if (temp < 10) {\n      *(uint *)(*register_1 + 0x10) =\n           register_2[2] << (temp * 3 & 0xff) |\n           *(uint *)(*register_1 + 0x10) & ~(7 << (temp * 3 & 0xff));\n    }\n    else {\n      temp = temp * 3 - 0x1e;\n      *(uint *)(*register_1 + 0xc) =\n           register_2[2] << (temp & 0xff) | *(uint *)(*register_1 + 0xc) & ~(7 << (temp & 0xff));\n    }\n    if (*register_2 - 0x10 < 2) {\n      if (*register_1 == 0x40012400) {\n        if ((uRam40012408 & 0x800000) == 0) {\n          uRam40012408 = uRam40012408 | 0x800000;\n          if (*register_2 == 0x10) {\n            for (counter = (DAT_20000084 / 1000000) * 10; counter != 0; counter = counter + -1) {\n            }\n            result = 0;\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        register_1[10] = register_1[10] | 0x20;\n        result = 1;\n      }\n    }\n    else {\n      result = 0;\n    }\n    *(undefined *)(register_1 + 9) = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08001e48": "update_registers_08001e48",
                "param_1": "register_1",
                "param_2": "register_2",
                "uVar1": "result",
                "uVar2": "temp",
                "local_c": "counter"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001f80": {
            "entrypoint": "0x08001f80",
            "current_name": "get_offset_value_08001f80",
            "code": "\nundefined4 getOffsetValue_08001f80(int offset)\n\n{\n  return *(undefined4 *)(offset + 0x28);\n}\n\n",
            "renaming": {
                "FUN_08001f80": "get_offset_value_08001f80",
                "param_1": "offset"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001f84": {
            "entrypoint": "0x08001f84",
            "current_name": "check_and_set_flag_08001f84",
            "code": "\nundefined4 checkAndSetFlag_08001f84(int *data,undefined4 size)\n\n{\n  int currentValue;\n  undefined4 result;\n  int ptr;\n  uint count;\n  \n  ptr = *data;\n  if ((*(uint *)(ptr + 8) & 1) == 0) {\n    *(uint *)(ptr + 8) = *(uint *)(ptr + 8) | 1;\n    for (count = DAT_20000084 / 1000000; count != 0; count = count - 1) {\n    }\n    ptr = get_global_variable_08001cc4(data,size,DAT_20000084 * 0x431bde83);\n    do {\n      if ((*(uint *)(*data + 8) & 1) != 0) {\n        return 0;\n      }\n      currentValue = get_global_variable_08001cc4();\n    } while ((uint)(currentValue - ptr) < 3);\n    data[10] = data[10] | 0x10;\n    data[0xb] = data[0xb] | 1;\n    *(undefined *)(data + 9) = 0;\n    result = 1;\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08001f84": "check_and_set_flag_08001f84",
                "param_1": "data",
                "param_2": "size",
                "iVar1": "currentValue",
                "uVar2": "result",
                "iVar3": "ptr",
                "local_14": "count"
            },
            "calling": [
                "FUN_08002004",
                "FUN_08002384"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002004": {
            "entrypoint": "0x08002004",
            "current_name": "process_param_08002004",
            "code": "\n\n\nint processParam_08002004(int *paramArray)\n\n{\n  int result;\n  undefined4 *ptrVar;\n  int iVar;\n  \n  if (*(char *)(paramArray + 9) != '\\x01') {\n    *(undefined *)(paramArray + 9) = 1;\n    result = checkAndSetFlag();\n    if (result == 0) {\n      paramArray[10] = paramArray[10] & 0xfffffcfeU | 0x100;\n      ptrVar = (undefined4 *)*paramArray;\n      if ((ptrVar == (undefined4 *)0x40012800) && ((_DAT_40012404 & 0xf0000) != 0)) {\n        paramArray[10] = paramArray[10] | 0x100000;\n        if ((_DAT_40012404 & 0x400) != 0) {\n          paramArray[10] = paramArray[10] & 0xffffcfffU | 0x1000;\n        }\n      }\n      else {\n        paramArray[10] = paramArray[10] & 0xffefffff;\n        if ((ptrVar[1] & 0x400) != 0) {\n          paramArray[10] = paramArray[10] & 0xffffcfffU | 0x1000;\n        }\n      }\n      if ((paramArray[10] & 0x1000U) == 0) {\n        paramArray[0xb] = 0;\n      }\n      else {\n        paramArray[0xb] = paramArray[0xb] & 0xfffffff9;\n      }\n      *(undefined *)(paramArray + 9) = 0;\n      *ptrVar = 0xfffffffd;\n      iVar = *paramArray;\n      if (((*(uint *)(iVar + 8) & 0xe0000) == 0xe0000) &&\n         ((iVar != 0x40012800 || ((_DAT_40012404 & 0xf0000) == 0)))) {\n        *(uint *)(iVar + 8) = *(uint *)(iVar + 8) | 0x500000;\n      }\n      else {\n        *(uint *)(iVar + 8) = *(uint *)(iVar + 8) | 0x100000;\n      }\n    }\n    else {\n      *(undefined *)(paramArray + 9) = 0;\n    }\n    return result;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08002004": "process_param_08002004",
                "param_1": "paramArray",
                "iVar1": "result",
                "puVar2": "ptrVar",
                "iVar3": "iVar",
                "check_and_set_flag_08001f84": "checkAndSetFlag",
                "param_1[10]": "paramArray[10]",
                "param_1[0xb]": "paramArray[0xb]",
                "puVar2[1]": "ptrVar[1]"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08001f84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080020f0": {
            "entrypoint": "0x080020f0",
            "current_name": "update_flags_080020f0",
            "code": "\nundefined4 updateFlags_080020f0(int *data)\n\n{\n  int globalVar1;\n  int globalVar2;\n  \n  globalVar2 = *data;\n  if ((*(uint *)(globalVar2 + 8) & 1) == 0) {\n    return 0;\n  }\n  *(uint *)(globalVar2 + 8) = *(uint *)(globalVar2 + 8) & 0xfffffffe;\n  globalVar2 = get_global_variable_08001cc4();\n  do {\n    if ((*(uint *)(*data + 8) & 1) == 0) {\n      return 0;\n    }\n    globalVar1 = get_global_variable_08001cc4();\n  } while ((uint)(globalVar1 - globalVar2) < 3);\n  data[10] = data[10] | 0x10;\n  data[0xb] = data[0xb] | 1;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080020f0": "update_flags_080020f0",
                "param_1": "data",
                "iVar1": "globalVar1",
                "iVar2": "globalVar2"
            },
            "calling": [
                "FUN_0800213c",
                "FUN_08002348",
                "FUN_0800224c",
                "FUN_08002384"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800213c": {
            "entrypoint": "0x0800213c",
            "current_name": "update_flags_and_memory_0800213c",
            "code": "\nundefined4 update_flags_and_memory_0800213c(int *args)\n\n{\n  int result;\n  uint flag_1;\n  uint flag_2;\n  \n  if (args == (int *)0x0) {\n    return 1;\n  }\n  if (args[10] == 0) {\n    args[0xb] = 0;\n    *(undefined *)(args + 9) = 0;\n    update_memory_and_flags_08004974();\n  }\n  result = update_flags_080020f0(args);\n  if (((args[10] & 0x10U) == 0) && (result == 0)) {\n    args[10] = args[10] & 0xffffeefdU | 2;\n    flag_1 = args[1] | args[7] | args[3] << 1;\n    if (args[2] == 0x100) {\n      flag_2 = 0x100;\n    }\n    else {\n      flag_2 = 0;\n      if (args[2] == 1) {\n        flag_2 = 0x100;\n      }\n    }\n    if (args[5] == 1) {\n      if (args[3] == 0) {\n        flag_2 = flag_2 | (args[6] + -1) * 0x2000 | 0x800;\n      }\n      else {\n        args[10] = args[10] | 0x20;\n        args[0xb] = args[0xb] | 1;\n      }\n    }\n    *(uint *)(*args + 4) = flag_2 | *(uint *)(*args + 4) & 0xffff16ff;\n    *(uint *)(*args + 8) = *(uint *)(*args + 8) & 0xffe1f7fd | flag_1;\n    if ((args[2] == 0x100) || (args[2] == 1)) {\n      flag_2 = (args[4] + -1) * 0x100000;\n    }\n    else {\n      flag_2 = 0;\n    }\n    *(uint *)(*args + 0x2c) = flag_2 | *(uint *)(*args + 0x2c) & 0xff0fffff;\n    if (flag_1 != (*(uint *)(*args + 8) & 0xff1f0efe)) {\n      args[10] = args[10] & 0xffffffedU | 0x10;\n      args[0xb] = args[0xb] | 1;\n      return 1;\n    }\n    args[0xb] = 0;\n    args[10] = args[10] & 0xfffffffcU | 1;\n    return 0;\n  }\n  args[10] = args[10] | 0x10;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800213c": "update_flags_and_memory_0800213c",
                "param_1": "args",
                "iVar1": "result",
                "uVar2": "flag_1",
                "uVar3": "flag_2"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_080020f0",
                "FUN_08004974"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800224c": {
            "entrypoint": "0x0800224c",
            "current_name": "update_something_0800224c",
            "code": "\nint updateSomething_0800224c(int *data)\n\n{\n  int result;\n  \n  if (data == (int *)0x0) {\n    result = 1;\n  }\n  else {\n    data[10] = data[10] | 2;\n    result = update_flags_080020f0();\n    if (result == 0) {\n      *(undefined4 *)*data = 0xffffffe0;\n      *(uint *)(*data + 4) = *(uint *)(*data + 4) & 0xff3f0000;\n      *(uint *)(*data + 8) = *(uint *)(*data + 8) & 0xff0106f0;\n      *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xff000000;\n      *(uint *)(*data + 0x10) = *(uint *)(*data + 0x10) & 0xc0000000;\n      *(uint *)(*data + 0x14) = *(uint *)(*data + 0x14) & 0xfffff000;\n      *(uint *)(*data + 0x18) = *(uint *)(*data + 0x18) & 0xfffff000;\n      *(uint *)(*data + 0x1c) = *(uint *)(*data + 0x1c) & 0xfffff000;\n      *(uint *)(*data + 0x20) = *(uint *)(*data + 0x20) & 0xfffff000;\n      *(uint *)(*data + 0x24) = *(uint *)(*data + 0x24) & 0xfffff000;\n      *(uint *)(*data + 0x28) = *(uint *)(*data + 0x28) & 0xfffff000;\n      *(uint *)(*data + 0x2c) = *(uint *)(*data + 0x2c) & 0xff000000;\n      *(uint *)(*data + 0x2c) = *(uint *)(*data + 0x2c) & 0xff000000;\n      *(uint *)(*data + 0x30) = *(uint *)(*data + 0x30) & 0xc0000000;\n      *(uint *)(*data + 0x34) = *(uint *)(*data + 0x34) & 0xc0000000;\n      *(uint *)(*data + 0x38) = *(uint *)(*data + 0x38) & 0xffc00000;\n      *(uint *)(*data + 0x38) = *(uint *)(*data + 0x38) & 0xffc00000;\n      update_configuration_080049f0(data);\n      data[0xb] = 0;\n      data[10] = 0;\n    }\n    *(undefined *)(data + 9) = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_0800224c": "update_something_0800224c",
                "param_1": "data",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_080020f0",
                "FUN_080049f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002348": {
            "entrypoint": "0x08002348",
            "current_name": "check_and_update_flags_08002348",
            "code": "\nint checkAndUpdateFlags_08002348(int input)\n\n{\n  int result;\n  \n  if (*(char *)(input + 0x24) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(input + 0x24) = 1;\n  result = updateFlags;\n  if (result == 0) {\n    *(uint *)(input + 0x28) = *(uint *)(input + 0x28) & 0xffffeefe | 1;\n  }\n  *(undefined *)(input + 0x24) = 0;\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002348": "check_and_update_flags_08002348",
                "param_1": "input",
                "iVar1": "result",
                "update_flags_080020f0()": "updateFlags"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_080020f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002384": {
            "entrypoint": "0x08002384",
            "current_name": "perform_resource_check_08002384",
            "code": "\nint performResourceCheck_08002384(int *resourceData)\n\n{\n  uint resourceValue;\n  int flagUpdateResult;\n  uint resourceCalculationResult;\n  int initialGlobalVarValue;\n  int updatedGlobalVarValue;\n  int loopCounter;\n  \n  if (*(char *)(resourceData + 9) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(resourceData + 9) = 1;\n  flagUpdateResult = update_flags_080020f0();\n  if (flagUpdateResult == 0) {\n    resourceData[10] = resourceData[10] & 0xffffeefdU | 2;\n    resourceValue = DAT_20000084;\n    resourceCalculationResult = calculate_resource_value_08003da4(2);\n    for (loopCounter = resourceValue / resourceCalculationResult << 1; loopCounter != 0; loopCounter = loopCounter + -1) {\n    }\n    check_and_set_flag_08001f84(resourceData);\n    *(uint *)(*resourceData + 8) = *(uint *)(*resourceData + 8) | 8;\n    initialGlobalVarValue = get_global_variable_08001cc4();\n    while (updatedGlobalVarValue = *resourceData, (*(uint *)(updatedGlobalVarValue + 8) & 8) != 0) {\n      updatedGlobalVarValue = get_global_variable_08001cc4();\n      if (10 < (uint)(updatedGlobalVarValue - initialGlobalVarValue)) {\n        resourceData[10] = resourceData[10] & 0xffffffedU | 0x10;\n        *(undefined *)(resourceData + 9) = 0;\n        return 1;\n      }\n    }\n    *(uint *)(updatedGlobalVarValue + 8) = *(uint *)(updatedGlobalVarValue + 8) | 4;\n    initialGlobalVarValue = get_global_variable_08001cc4();\n    while ((*(uint *)(*resourceData + 8) & 4) != 0) {\n      updatedGlobalVarValue = get_global_variable_08001cc4();\n      if (10 < (uint)(updatedGlobalVarValue - initialGlobalVarValue)) {\n        resourceData[10] = resourceData[10] & 0xffffffedU | 0x10;\n        *(undefined *)(resourceData + 9) = 0;\n        return 1;\n      }\n    }\n    resourceData[10] = resourceData[10] & 0xfffffffcU | 1;\n  }\n  *(undefined *)(resourceData + 9) = 0;\n  return flagUpdateResult;\n}\n\n",
            "renaming": {
                "FUN_08002384": "perform_resource_check_08002384",
                "param_1": "resourceData",
                "uVar1": "resourceValue",
                "iVar2": "flagUpdateResult",
                "uVar3": "resourceCalculationResult",
                "iVar4": "initialGlobalVarValue",
                "iVar5": "updatedGlobalVarValue",
                "local_14": "loopCounter"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08003da4",
                "FUN_080020f0",
                "FUN_08001cc4",
                "FUN_08001f84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002470": {
            "entrypoint": "0x08002470",
            "current_name": "update_flag_08002470",
            "code": "\n\n\nvoid updateFlag_08002470(uint inputValue)\n\n{\n  _DAT_e000ed0c = (inputValue & 7) << 8 | _DAT_e000ed0c & 0xf8ff | 0x5fa0000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002470": "update_flag_08002470",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08001c88",
                "FUN_08005f5e"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002494": {
            "entrypoint": "0x08002494",
            "current_name": "update_data_08002494",
            "code": "\n\n\nvoid updateData_08002494(uint dataIndex,uint bitMask1,uint bitMask2)\n\n{\n  uint shiftAmount;\n  uint inverseShiftAmount;\n  \n  shiftAmount = (uint)(_DAT_e000ed0c << 0x15) >> 0x1d;\n  inverseShiftAmount = 7 - shiftAmount;\n  if (3 < inverseShiftAmount) {\n    inverseShiftAmount = 4;\n  }\n  if (shiftAmount + 4 < 7) {\n    shiftAmount = 0;\n  }\n  else {\n    shiftAmount = shiftAmount - 3;\n  }\n  shiftAmount = (bitMask1 & (1 << (inverseShiftAmount & 0xff)) - 1U) << (shiftAmount & 0xff) |\n          (1 << (shiftAmount & 0xff)) - 1U & bitMask2;\n  if ((int)dataIndex < 0) {\n    *(char *)((dataIndex & 0xf) + 0xe000ed14) = (char)(shiftAmount << 4);\n  }\n  else {\n    *(char *)(dataIndex + 0xe000e400) = (char)(shiftAmount << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002494": "update_data_08002494",
                "param_1": "dataIndex",
                "param_2": "bitMask1",
                "param_3": "bitMask2",
                "uVar1": "shiftAmount",
                "uVar2": "inverseShiftAmount"
            },
            "calling": [
                "FUN_08005510",
                "FUN_08005568",
                "FUN_08001b48",
                "FUN_08001c3c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080024f8": {
            "entrypoint": "0x080024f8",
            "current_name": "set_bit_080024f8",
            "code": "\nvoid setBit_080024f8(uint bitPosition)\n\n{\n  if (-1 < (int)bitPosition) {\n    *(int *)((bitPosition >> 5) * 4 + -0x1fff1f00) = 1 << (bitPosition & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080024f8": "set_bit_080024f8",
                "param_1": "bitPosition"
            },
            "calling": [
                "FUN_08005510",
                "FUN_08005568"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002514": {
            "entrypoint": "0x08002514",
            "current_name": "initialize_data_08002514",
            "code": "\n\n\nundefined4 initializeData_08002514(int value)\n\n{\n  if (value - 1U < 0x1000000) {\n    _DAT_e000e014 = value - 1U;\n    DAT_e000ed23 = 0xf0;\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08002514": "initialize_data_08002514",
                "param_1": "value"
            },
            "calling": [
                "FUN_08001b48",
                "FUN_08001c3c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002540": {
            "entrypoint": "0x08002540",
            "current_name": "set_bit_in_memory_08002540",
            "code": "\nvoid setBitInMemory_08002540(uint bitPosition)\n\n{\n  if (-1 < (int)bitPosition) {\n    *(int *)(((bitPosition >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (bitPosition & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002540": "set_bit_in_memory_08002540",
                "param_1": "bitPosition"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002560": {
            "entrypoint": "0x08002560",
            "current_name": "update_register_08002560",
            "code": "\n\n\nvoid updateRegister_08002560(int value)\n\n{\n  if (value != 4) {\n    _DAT_e000e010 = _DAT_e000e010 & 0xfffffffb;\n    return;\n  }\n  _DAT_e000e010 = _DAT_e000e010 | 4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002560": "update_register_08002560",
                "param_1": "value"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002580": {
            "entrypoint": "0x08002580",
            "current_name": "FUNC_08002580",
            "code": "\nvoid FUNC_08002580(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002580": "FUNC_08002580"
            },
            "calling": [
                "FUN_08002582"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002582": {
            "entrypoint": "0x08002582",
            "current_name": "execute_function_08002582",
            "code": "\nvoid execute_function_08002582(void)\n\n{\n  FUNC_08002580();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002582": "execute_function_08002582"
            },
            "calling": [
                "FUN_08004b9e"
            ],
            "called": [
                "FUN_08002580"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800258c": {
            "entrypoint": "0x0800258c",
            "current_name": "initialize_data_0800258c",
            "code": "\n\n\nundefined4 initializeData_0800258c(uint **data)\n\n{\n  uint *currentData;\n  \n  if (*(char *)((int)data + 0x21) != '\\x02') {\n    data[0xe] = (uint *)0x4;\n    return 1;\n  }\n  **data = **data & 0xfffffff1;\n  **data = **data & 0xfffffffe;\n  currentData = *data;\n  if (currentData == (uint *)0x40020008) {\n    _DAT_40020004 = 1;\n  }\n  else if (currentData == (uint *)0x4002001c) {\n    _DAT_40020004 = 0x10;\n  }\n  else if (currentData == (uint *)0x40020030) {\n    _DAT_40020004 = 0x100;\n  }\n  else if (currentData == (uint *)0x40020044) {\n    _DAT_40020004 = 0x1000;\n  }\n  else if (currentData == (uint *)0x40020058) {\n    _DAT_40020004 = 0x10000;\n  }\n  else if (currentData == (uint *)0x4002006c) {\n    _DAT_40020004 = 0x100000;\n  }\n  else {\n    _DAT_40020004 = 0x1000000;\n  }\n  *(undefined *)((int)data + 0x21) = 1;\n  *(undefined *)(data + 8) = 0;\n  if (data[0xd] != (uint *)0x0) {\n    (*(code *)data[0xd])();\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800258c": "initialize_data_0800258c",
                "param_1": "data",
                "puVar1": "currentData"
            },
            "calling": [
                "FUN_0800316c",
                "FUN_080046b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002624": {
            "entrypoint": "0x08002624",
            "current_name": "update_flags_and_registers_08002624",
            "code": "\n\n\nvoid updateFlagsAndRegisters_08002624(uint *flags,uint *registers)\n\n{\n  uint *ptr1;\n  uint bitMask;\n  uint registerValue;\n  uint i;\n  uint opcode;\n  uint newValue;\n  int shift;\n  int index;\n  \n  newValue = 0;\n  i = 0;\n  do {\n    if (0xf < i) {\n      return;\n    }\n    bitMask = 1 << (i & 0xff);\n    registerValue = *registers & bitMask;\n    if (bitMask == registerValue) {\n      opcode = registers[1];\n      if (opcode == 0x12) {\n        newValue = registers[3] + 0xc;\n      }\n      else if (opcode < 0x13) {\n        if (opcode == 2) {\n          newValue = registers[3] + 8;\n        }\n        else if (opcode < 3) {\n          if (opcode == 0) goto LAB_08002776;\n          if (opcode == 1) {\n            newValue = registers[3];\n          }\n        }\n        else if (opcode == 3) {\n          newValue = 0;\n        }\n        else if (opcode == 0x11) {\n          newValue = registers[3] + 4;\n        }\n      }\n      else if (opcode == 0x10210000) {\nLAB_08002776:\n        if (registers[2] == 0) {\n          newValue = 4;\n        }\n        else if (registers[2] == 1) {\n          flags[4] = bitMask;\n          newValue = 8;\n        }\n        else {\n          flags[5] = bitMask;\n          newValue = 8;\n        }\n      }\n      else if (opcode < 0x10210001) {\n        if ((opcode == 0x10110000) || (opcode == 0x10120000)) goto LAB_08002776;\n      }\n      else if ((opcode == 0x10310000) || ((opcode == 0x10320000 || (opcode == 0x10220000))))\n      goto LAB_08002776;\n      bitMask = i;\n      ptr1 = flags;\n      if (0xff < registerValue) {\n        bitMask = i - 8;\n        ptr1 = flags + 1;\n      }\n      *ptr1 = *ptr1 & ~(0xf << (bitMask << 2 & 0xff)) | newValue << (bitMask << 2 & 0xff);\n      if ((registers[1] & 0x10000000) != 0) {\n        _DAT_40021018 = _DAT_40021018 | 1;\n        shift = (i & 3) << 2;\n        if (flags == (uint *)0x40010800) {\n          index = 0;\n        }\n        else if (flags == (uint *)0x40010c00) {\n          index = 1;\n        }\n        else if (flags == (uint *)0x40011000) {\n          index = 2;\n        }\n        else if (flags == (uint *)0x40011400) {\n          index = 3;\n        }\n        else {\n          index = 4;\n        }\n        *(uint *)(((i >> 2) + 2) * 4 + 0x40010000) =\n             *(uint *)(((i >> 2) + 2) * 4 + 0x40010000) & ~(0xf << shift) | index << shift;\n        if ((registers[1] & 0x10000) == 0) {\n          _DAT_40010400 = _DAT_40010400 & ~registerValue;\n        }\n        else {\n          _DAT_40010400 = _DAT_40010400 | registerValue;\n        }\n        if ((registers[1] & 0x20000) == 0) {\n          _DAT_40010404 = _DAT_40010404 & ~registerValue;\n        }\n        else {\n          _DAT_40010404 = _DAT_40010404 | registerValue;\n        }\n        if ((registers[1] & 0x100000) == 0) {\n          _DAT_40010408 = _DAT_40010408 & ~registerValue;\n        }\n        else {\n          _DAT_40010408 = _DAT_40010408 | registerValue;\n        }\n        if ((registers[1] & 0x200000) == 0) {\n          _DAT_4001040c = _DAT_4001040c & ~registerValue;\n        }\n        else {\n          _DAT_4001040c = registerValue | _DAT_4001040c;\n        }\n      }\n    }\n    i = i + 1;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08002624": "update_flags_and_registers_08002624",
                "param_1": "flags",
                "param_2": "registers",
                "puVar1": "ptr1",
                "uVar2": "bitMask",
                "uVar3": "registerValue",
                "uVar4": "i",
                "uVar5": "opcode",
                "uVar6": "newValue",
                "iVar7": "shift",
                "iVar8": "index"
            },
            "calling": [
                "FUN_08004f4c",
                "FUN_08004974",
                "FUN_08004bb0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002810": {
            "entrypoint": "0x08002810",
            "current_name": "check_bit_08002810",
            "code": "\nundefined4 check_bit_08002810(int byte_offset,uint bit_mask)\n\n{\n  if ((bit_mask & *(uint *)(byte_offset + 8)) == 0) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08002810": "check_bit_08002810",
                "param_1": "byte_offset",
                "param_2": "bit_mask"
            },
            "calling": [
                "FUN_08004c48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800281e": {
            "entrypoint": "0x0800281e",
            "current_name": "update_value_0800281e",
            "code": "\nvoid updateValue_0800281e(int baseAddress,int newValue,int shiftFlag)\n\n{\n  if (shiftFlag == 0) {\n    *(int *)(baseAddress + 0x10) = newValue << 0x10;\n    return;\n  }\n  *(int *)(baseAddress + 0x10) = newValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800281e": "update_value_0800281e",
                "param_1": "baseAddress",
                "param_2": "newValue",
                "param_3": "shiftFlag"
            },
            "calling": [
                "FUN_08004c30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800282c": {
            "entrypoint": "0x0800282c",
            "current_name": "update_data_if_necessary_0800282c",
            "code": "\n\n\nvoid update_data_if_necessary_0800282c(uint data)\n\n{\n  if ((_DAT_40010414 & data) != 0) {\n    _DAT_40010414 = data;\n    process_updated_data();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800282c": "update_data_if_necessary_0800282c",
                "param_1": "data",
                "check_and_process_data_080060e4": "process_updated_data"
            },
            "calling": [],
            "called": [
                "FUN_080060e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002848": {
            "entrypoint": "0x08002848",
            "current_name": "process_param_08002848",
            "code": "\nundefined4 processParam_08002848(int *paramArr)\n\n{\n  if (*(char *)((int)paramArr + 0x3e) == '@') {\n    if (paramArr[0x14] == 0) {\n      *(uint *)(*paramArr + 0x10) = paramArr[0x11] & 0xfe;\n    }\n    else {\n      *(uint *)(*paramArr + 0x10) = paramArr[0x11] & 0xffU | 1;\n    }\n  }\n  else if (paramArr[4] == 0x4000) {\n    if (*(char *)((int)paramArr + 0x3d) == '!') {\n      *(uint *)(*paramArr + 0x10) = paramArr[0x11] & 0xfe;\n    }\n    else {\n      *(uint *)(*paramArr + 0x10) = paramArr[0x11] & 0xffU | 1;\n    }\n  }\n  else if (paramArr[0x14] == 0) {\n    *(uint *)(*paramArr + 0x10) = (uint)(paramArr[0x11] << 0x10) >> 0x17 & 6 | 0xf0;\n  }\n  else if (paramArr[0x14] == 1) {\n    *(uint *)(*paramArr + 0x10) = (uint)(paramArr[0x11] << 0x10) >> 0x17 & 6 | 0xf1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002848": "process_param_08002848",
                "param_1": "paramArr",
                "param_1[0x14]": "paramArr[0x14]",
                "param_1[0x11]": "paramArr[0x11]",
                "param_1[4]": "paramArr[4]"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080028d2": {
            "entrypoint": "0x080028d2",
            "current_name": "assign_parameter_value_080028d2",
            "code": "\nundefined4 assignParameterValue_080028d2(int *parameterArray)\n\n{\n  *(uint *)(*parameterArray + 0x10) = parameterValue & 0xff;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080028d2": "assign_parameter_value_080028d2",
                "param_1": "parameterArray",
                "param_1[0x11]": "parameterValue"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080028de": {
            "entrypoint": "0x080028de",
            "current_name": "enhance_permissions_080028de",
            "code": "\nundefined4 enhance_permissions_080028de(uint **arguments)\n\n{\n  uint *ptr_value;\n  \n  ptr_value = ptr_array_param;\n  if ((*(char *)((int)arguments + 0x3d) == '\\\"') &&\n     ((ptr_array != (uint *)0x0 || (*(char *)((int)arguments + 0x3e) != '@')))) {\n    if ((ptr_array == (uint *)0x0) && (ptr_array_2 == (uint *)0xc000)) {\n      **arguments = **arguments | 0x100;\n      ptr_array = (uint *)((int)ptr_array + 1);\n    }\n    else {\n      if (*(short *)((int)arguments + 0x2a) == 0) {\n        **arguments = **arguments | 0x200;\n      }\n      else if (*(short *)((int)arguments + 0x2a) == 1) {\n        if (ptr_value == (uint *)0xffff0000) {\n          **arguments = **arguments & 0xfffffbff;\n          ptr_value = *arguments;\n          if ((ptr_value_index & 0x800) == 0) {\n            *ptr_value = *ptr_value | 0x200;\n          }\n          else {\n            *ptr_value = *ptr_value & 0xfffffbff;\n          }\n        }\n        else if (((ptr_value == (uint *)0x4) || (ptr_value == (uint *)0x8)) ||\n                (ptr_array_index == (uint *)0x12)) {\n          **arguments = **arguments & 0xfffffbff;\n          **arguments = **arguments | 0x200;\n        }\n        else if (ptr_array_param == (uint *)0x2) {\n          **arguments = **arguments | 0x400;\n        }\n        else {\n          **arguments = **arguments & 0xfffffbff;\n        }\n      }\n      else if (*(short *)((int)arguments + 0x2a) == 2) {\n        if (ptr_array_param == (uint *)0x2) {\n          **arguments = **arguments | 0x400;\n        }\n        else {\n          **arguments = **arguments | 0x800;\n          **arguments = **arguments & 0xfffffbff;\n        }\n        ptr_value = *arguments;\n        if ((ptr_value_index & 0x800) != 0) {\n          ptr_value_index = ptr_value_index | 0x1000;\n        }\n      }\n      else {\n        **arguments = **arguments | 0x400;\n        ptr_value = *arguments;\n        if ((ptr_value_index & 0x800) != 0) {\n          ptr_value_index = ptr_value_index | 0x1000;\n        }\n      }\n      ptr_array = (uint *)0x0;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080028de": "enhance_permissions_080028de",
                "param_1": "arguments",
                "puVar1": "ptr_value",
                "param_1[0x14]": "ptr_array",
                "param_1[4]": "ptr_array_2",
                "puVar1[1]": "ptr_value_index",
                "param_1[0xc]": "ptr_array_index",
                "param_1[0xb]": "ptr_array_param"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ab8": {
            "entrypoint": "0x08002ab8",
            "current_name": "decrement_counter_08002ab8",
            "code": "\nundefined4 decrementCounter_08002ab8(int *array)\n\n{\n  byte *byteArray;\n  \n  if (*(short *)((int)array + 0x2a) != 0) {\n    byteArray = (byte *)array[9];\n    array[9] = (int)(byteArray + 1);\n    *(uint *)(*array + 0x10) = (uint)*byteArray;\n    *(short *)((int)array + 0x2a) = *(short *)((int)array + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002ab8": "decrement_counter_08002ab8",
                "param_1": "array",
                "pbVar1": "byteArray"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ad8": {
            "entrypoint": "0x08002ad8",
            "current_name": "update_array_element_08002ad8",
            "code": "\nundefined4 updateArrayElement_08002ad8(int *array)\n\n{\n  undefined *element;\n  \n  if (*(short *)((int)array + 0x2a) != 0) {\n    element = (undefined *)arrayAddress;\n    arrayAddress = (int)(element + 1);\n    *element = (char)*(undefined4 *)(*array + 0x10);\n    *(short *)((int)array + 0x2a) = *(short *)((int)array + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002ad8": "update_array_element_08002ad8",
                "param_1": "array",
                "puVar1": "element",
                "param_1[9]": "arrayAddress"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002af8": {
            "entrypoint": "0x08002af8",
            "current_name": "process_params_08002af8",
            "code": "\nundefined4 processParams_08002af8(uint **paramList,uint *param2,int param3,uint *param4)\n\n{\n  undefined4 result;\n  uint *ptrVar;\n  \n  if (*(char *)((int)paramList + 0x3d) == '(') {\n    if (param2 == (uint *)0x0) {\n      result = 1;\n    }\n    else if (param3 == 0) {\n      result = 1;\n    }\n    else if (*(char *)(paramList + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(paramList + 0xf) = 1;\n      ptrVar = *paramList;\n      if ((*ptrVar & 1) == 0) {\n        *ptrVar = *ptrVar | 1;\n      }\n      **paramList = **paramList & 0xfffff7ff;\n      *(undefined *)((int)paramList + 0x3d) = 0x29;\n      *(undefined *)((int)paramList + 0x3e) = 0x20;\n      result = 0;\n      paramList[0x10] = (uint *)0x0;\n      paramList[9] = param2;\n      *(short *)((int)paramList + 0x2a) = (short)param3;\n      paramList[0xb] = param4;\n      *(undefined2 *)(paramList + 10) = *(undefined2 *)((int)paramList + 0x2a);\n      *(undefined *)(paramList + 0xf) = 0;\n      (*paramList)[1] = (*paramList)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002af8": "process_params_08002af8",
                "param_1": "paramList",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "result",
                "puVar2": "ptrVar"
            },
            "calling": [
                "FUN_08004e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002b84": {
            "entrypoint": "0x08002b84",
            "current_name": "initialize_data_08002b84",
            "code": "\nundefined4 initializeData_08002b84(uint **data,uint *inputArray,int inputSize,uint *outputArray)\n\n{\n  undefined4 result;\n  uint *firstElement;\n  \n  if (*(char *)((int)data + 0x3d) == '(') {\n    if (inputArray == (uint *)0x0) {\n      result = 1;\n    }\n    else if (inputSize == 0) {\n      result = 1;\n    }\n    else if (*(char *)(data + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(data + 0xf) = 1;\n      firstElement = *data;\n      if ((*firstElement & 1) == 0) {\n        *firstElement = *firstElement | 1;\n      }\n      **data = **data & 0xfffff7ff;\n      *(undefined *)((int)data + 0x3d) = 0x2a;\n      *(undefined *)((int)data + 0x3e) = 0x20;\n      result = 0;\n      data[0x10] = (uint *)0x0;\n      data[9] = inputArray;\n      *(short *)((int)data + 0x2a) = (short)inputSize;\n      data[0xb] = outputArray;\n      *(undefined2 *)(data + 10) = *(undefined2 *)((int)data + 0x2a);\n      *(undefined *)(data + 0xf) = 0;\n      (*data)[1] = (*data)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002b84": "initialize_data_08002b84",
                "param_1": "data",
                "param_2": "inputArray",
                "param_3": "inputSize",
                "param_4": "outputArray",
                "uVar1": "result",
                "puVar2": "firstElement"
            },
            "calling": [
                "FUN_08004e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c10": {
            "entrypoint": "0x08002c10",
            "current_name": "initialize_data_08002c10",
            "code": "\nundefined4 initializeData_08002c10(uint **data)\n\n{\n  uint *pointer;\n  \n  if (*(char *)((int)data + 0x3d) != ' ') {\n    return 2;\n  }\n  *(undefined *)((int)data + 0x3d) = 0x28;\n  pointer = *data;\n  if ((*pointer & 1) == 0) {\n    *pointer = *pointer | 1;\n  }\n  **data = **data | 0x400;\n  (*data)[1] = (*data)[1] | 0x300;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002c10": "initialize_data_08002c10",
                "param_1": "data",
                "puVar1": "pointer"
            },
            "calling": [
                "FUN_08004ec4",
                "FUN_08004ef4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c4e": {
            "entrypoint": "0x08002c4e",
            "current_name": "FUNC_08002c4e",
            "code": "\nvoid FUNC_08002c4e(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c4e": "FUNC_08002c4e"
            },
            "calling": [
                "FUN_08002db2",
                "FUN_08002efc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002c50": {
            "entrypoint": "0x08002c50",
            "current_name": "FUNC_08002c50",
            "code": "\nvoid FUNC_08002c50(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c50": "FUNC_08002c50"
            },
            "calling": [
                "FUN_08002f9c",
                "FUN_0800306c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002c52": {
            "entrypoint": "0x08002c52",
            "current_name": "FUNC_08002c52",
            "code": "\nvoid FUNC_08002c52(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c52": "FUNC_08002c52"
            },
            "calling": [
                "FUN_08002d1c",
                "FUN_08002c54"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002c54": {
            "entrypoint": "0x08002c54",
            "current_name": "process_data_08002c54",
            "code": "\nundefined4 process_data_08002c54(int *data)\n\n{\n  char current_char;\n  byte *byte_ptr;\n  \n  current_char = *(char *)((int)data + 0x3d);\n  if (*(short *)((int)data + 0x2a) != 0) {\n    byte_ptr = (byte *)data[9];\n    data[9] = (int)(byte_ptr + 1);\n    *(uint *)(*data + 0x10) = (uint)*byte_ptr;\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    if ((*(short *)((int)data + 0x2a) == 0) && (current_char == ')')) {\n      *(uint *)(*data + 4) = *(uint *)(*data + 4) & 0xfffffbff;\n      data[0xc] = 0x21;\n      *(undefined *)((int)data + 0x3d) = 0x28;\n      FUNC_08002c52();\n    }\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002c54": "process_data_08002c54",
                "param_1": "data",
                "cVar1": "current_char",
                "pbVar2": "byte_ptr"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002c52"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ca4": {
            "entrypoint": "0x08002ca4",
            "current_name": "FUNC_08002ca4",
            "code": "\nvoid FUNC_08002ca4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ca4": "FUNC_08002ca4"
            },
            "calling": [
                "FUN_080032b4",
                "FUN_08002ca6"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002ca6": {
            "entrypoint": "0x08002ca6",
            "current_name": "process_parameter_08002ca6",
            "code": "\nundefined4 processParameter_08002ca6(int *parameter)\n\n{\n  char conditionChar;\n  undefined *pointerVar;\n  \n  conditionChar = *(char *)((int)parameter + 0x3d);\n  if (*(short *)((int)parameter + 0x2a) != 0) {\n    pointerVar = (undefined *)arrayElement;\n    arrayElement = (int)(pointerVar + 1);\n    *pointerVar = (char)*(undefined4 *)(*parameter + 0x10);\n    *(short *)((int)parameter + 0x2a) = *(short *)((int)parameter + 0x2a) + -1;\n    if ((*(short *)((int)parameter + 0x2a) == 0) && (conditionChar == '*')) {\n      *(uint *)(*parameter + 4) = *(uint *)(*parameter + 4) & 0xfffffbff;\n      arrayIndex = 0x22;\n      *(undefined *)((int)parameter + 0x3d) = 0x28;\n      FUNC_08002ca4();\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002ca6": "process_parameter_08002ca6",
                "param_1": "parameter",
                "cVar1": "conditionChar",
                "puVar2": "pointerVar",
                "param_1[9]": "arrayElement",
                "param_1[0xc]": "arrayIndex"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002ca4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002cf2": {
            "entrypoint": "0x08002cf2",
            "current_name": "process_parameters_08002cf2",
            "code": "\nundefined4 process_parameters_08002cf2(int *input_ptr,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  undefined2 selected_value;\n  uint param_value;\n  \n  param_value = *(uint *)(*input_ptr + 0x18);\n  if ((param_value & 0x80) == 0) {\n    selected_value = *(undefined2 *)(input_ptr + 3);\n  }\n  else {\n    selected_value = *(undefined2 *)(input_ptr + 6);\n  }\n  process_params_08004e74(input_ptr,(*(uint *)(*input_ptr + 0x18) & 4) == 0,selected_value,param_value,param_4);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002cf2": "process_parameters_08002cf2",
                "param_1": "input_ptr",
                "uVar1": "selected_value",
                "uVar2": "param_value"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08004e74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002d1c": {
            "entrypoint": "0x08002d1c",
            "current_name": "handle_param_08002d1c",
            "code": "\nundefined4 handle_param_08002d1c(uint **param)\n\n{\n  if (((param[0xb] == (uint *)0x4) || (param[0xb] == (uint *)0x8)) &&\n     (*(char *)((int)param + 0x3d) == '(')) {\n    param[0xb] = (uint *)0xffff0000;\n    (*param)[1] = (*param)[1] & 0xfffff8ff;\n    (*param)[5] = 0xfffffbff;\n    **param = **param & 0xfffffbff;\n    param[0xc] = (uint *)0x0;\n    *(undefined *)((int)param + 0x3d) = 0x20;\n    *(undefined *)((int)param + 0x3e) = 0;\n    initialize_data_and_call_function_08004ec4();\n  }\n  else if (*(char *)((int)param + 0x3d) == '!') {\n    param[0xb] = (uint *)0xffff0000;\n    param[0xc] = (uint *)0x21;\n    *(undefined *)((int)param + 0x3d) = 0x20;\n    *(undefined *)((int)param + 0x3e) = 0;\n    (*param)[1] = (*param)[1] & 0xfffff8ff;\n    (*param)[5] = 0xfffffbff;\n    **param = **param & 0xfffffbff;\n    FUNC_08002c52();\n  }\n  else {\n    (*param)[5] = 0xfffffbff;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002d1c": "handle_param_08002d1c",
                "param_1": "param"
            },
            "calling": [
                "FUN_08003520"
            ],
            "called": [
                "FUN_08002c52",
                "FUN_08004ec4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002db0": {
            "entrypoint": "0x08002db0",
            "current_name": "FUNC_08002db0",
            "code": "\nvoid FUNC_08002db0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002db0": "FUNC_08002db0"
            },
            "calling": [
                "FUN_08002db2",
                "FUN_08002efc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002db2": {
            "entrypoint": "0x08002db2",
            "current_name": "update_flags_and_execute_08002db2",
            "code": "\nundefined4 updateFlagsAndExecute_08002db2(unsignedInt **parameters)\n\n{\n  character charValue;\n  unsignedInt *pointerValue;\n  \n  charValue = *(character *)((int)parameters + 0x3d);\n  pointerValue = parameters[0xb];\n  if ((*(short *)(parameters + 10) == 0) && (charValue == '!')) {\n    if ((pointerValue == (unsignedInt *)0x4) || ((pointerValue == (unsignedInt *)0x8 || (pointerValue == (unsignedInt *)0xffff0000)))) {\n      (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n      **parameters = **parameters | 0x200;\n      parameters[0xc] = (unsignedInt *)0x0;\n      *(undefined *)((int)parameters + 0x3d) = 0x20;\n      if (*(character *)((int)parameters + 0x3e) == '@') {\n        *(undefined *)((int)parameters + 0x3e) = 0;\n        FUNC_08002db0();\n      }\n      else {\n        *(undefined *)((int)parameters + 0x3e) = 0;\n        FUNC_08002c4e();\n      }\n    }\n    else {\n      (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n      parameters[0xc] = (unsignedInt *)0x11;\n      *(undefined *)((int)parameters + 0x3e) = 0;\n      *(undefined *)((int)parameters + 0x3d) = 0x20;\n      FUNC_08002c4e();\n    }\n  }\n  else if ((charValue == '!') || ((*(character *)((int)parameters + 0x3e) == '@' && (charValue == '\\\"')))) {\n    if (*(short *)((int)parameters + 0x2a) == 0) {\n      (*parameters)[1] = (*parameters)[1] & 0xfffffbff;\n    }\n    else if (*(character *)((int)parameters + 0x3e) == '@') {\n      if (parameters[0x14] == (unsignedInt *)0x0) {\n        if (parameters[0x13] == (unsignedInt *)0x1) {\n          (*parameters)[4] = (unsignedInt)parameters[0x12] & 0xff;\n          parameters[0x14] = (unsignedInt *)((int)parameters[0x14] + 2);\n        }\n        else {\n          (*parameters)[4] = (unsignedInt)((int)parameters[0x12] << 0x10) >> 0x18;\n          parameters[0x14] = (unsignedInt *)((int)parameters[0x14] + 1);\n        }\n      }\n      else if (parameters[0x14] == (unsignedInt *)0x1) {\n        (*parameters)[4] = (unsignedInt)parameters[0x12] & 0xff;\n        parameters[0x14] = (unsignedInt *)((int)parameters[0x14] + 1);\n      }\n      else if (parameters[0x14] == (unsignedInt *)0x2) {\n        if (*(character *)((int)parameters + 0x3d) == '\\\"') {\n          **parameters = **parameters | 0x100;\n        }\n        else if (*(character *)((int)parameters + 0x3d) == '!') {\n          pointerValue = parameters[9];\n          parameters[9] = (unsignedInt *)((int)pointerValue + 1);\n          (*parameters)[4] = (unsignedInt)*(byte *)pointerValue;\n          *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n        }\n      }\n    }\n    else {\n      pointerValue = parameters[9];\n      parameters[9] = (unsignedInt *)((int)pointerValue + 1);\n      (*parameters)[4] = (unsignedInt)*(byte *)pointerValue;\n      *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002db2": "update_flags_and_execute_08002db2",
                "param_1": "parameters",
                "cVar1": "charValue",
                "puVar2": "pointerValue",
                "char": "character",
                "uint": "unsignedInt"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002db0",
                "FUN_08002c4e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002efc": {
            "entrypoint": "0x08002efc",
            "current_name": "process_parameter_08002efc",
            "code": "\nundefined4 processParameter_08002efc(uint **parameters)\n\n{\n  uint *pointerVar;\n  \n  pointerVar = parameters[0xb];\n  if (*(char *)((int)parameters + 0x3d) == '!') {\n    if (*(short *)((int)parameters + 0x2a) == 0) {\n      if (((pointerVar == (uint *)0x4) || (pointerVar == (uint *)0x8)) || (pointerVar == (uint *)0xffff0000)) {\n        (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n        **parameters = **parameters | 0x200;\n        pointerToC = (uint *)0x0;\n        *(undefined *)((int)parameters + 0x3d) = 0x20;\n        if (*(char *)((int)parameters + 0x3e) == '@') {\n          *(undefined *)((int)parameters + 0x3e) = 0;\n          FUNC_08002db0();\n        }\n        else {\n          *(undefined *)((int)parameters + 0x3e) = 0;\n          FUNC_08002c4e();\n        }\n      }\n      else {\n        (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n        pointerToC = (uint *)0x11;\n        *(undefined *)((int)parameters + 0x3e) = 0;\n        *(undefined *)((int)parameters + 0x3d) = 0x20;\n        FUNC_08002c4e();\n      }\n    }\n    else {\n      pointerVar = pointerTo9;\n      pointerTo9 = (uint *)((int)pointerVar + 1);\n      (*parameters)[4] = (uint)*(byte *)pointerVar;\n      *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002efc": "process_parameter_08002efc",
                "param_1": "parameters",
                "puVar1": "pointerVar",
                "param_1[0xc]": "pointerToC",
                "param_1[9]": "pointerTo9"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002db0",
                "FUN_08002c4e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f9a": {
            "entrypoint": "0x08002f9a",
            "current_name": "FUNC_08002f9a",
            "code": "\nvoid FUNC_08002f9a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f9a": "FUNC_08002f9a"
            },
            "calling": [
                "FUN_08002f9c",
                "FUN_0800306c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002f9c": {
            "entrypoint": "0x08002f9c",
            "current_name": "process_parameters_08002f9c",
            "code": "\nundefined4 processParameters_08002f9c(uint **parameters)\n\n{\n  uint *ptr;\n  \n  if (*(char *)((int)parameters + 0x3d) == '\\\"') {\n    if (*(ushort *)((int)parameters + 0x2a) < 4) {\n      if (*(ushort *)((int)parameters + 0x2a) - 2 < 2) {\n        if (parameters[0xb] == (uint *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters & 0xfffffbff;\n          **parameters = **parameters | 0x800;\n        }\n        (*parameters)[1] = (*parameters)[1] & 0xfffffbff;\n      }\n      else {\n        if (parameters[0xb] == (uint *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters & 0xfffffbff;\n        }\n        (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n        ptr = parameters[9];\n        parameters[9] = (uint *)((int)ptr + 1);\n        *(char *)ptr = (char)(*parameters)[4];\n        *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n        *(undefined *)((int)parameters + 0x3d) = 0x20;\n        parameters[0xc] = (uint *)0x0;\n        if (*(char *)((int)parameters + 0x3e) == '@') {\n          *(undefined *)((int)parameters + 0x3e) = 0;\n          FUNC_08002f9a();\n        }\n        else {\n          *(undefined *)((int)parameters + 0x3e) = 0;\n          FUNC_08002c50();\n        }\n      }\n    }\n    else {\n      ptr = parameters[9];\n      parameters[9] = (uint *)((int)ptr + 1);\n      *(char *)ptr = (char)(*parameters)[4];\n      *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002f9c": "process_parameters_08002f9c",
                "param_1": "parameters",
                "puVar1": "ptr"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002f9a",
                "FUN_08002c50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800306c": {
            "entrypoint": "0x0800306c",
            "current_name": "process_input_0800306c",
            "code": "\nundefined4 processInput_0800306c(uint **input)\n\n{\n  uint *pointer;\n  \n  pointer = input[0xb];\n  if (*(short *)((int)input + 0x2a) == 3) {\n    if (((pointer == (uint *)0x4) || (pointer == (uint *)0x8)) || (pointer == (uint *)0xffff0000)) {\n      **input = **input & 0xfffffbff;\n    }\n    pointer = input[9];\n    input[9] = (uint *)((int)pointer + 1);\n    *(char *)pointer = (char)(*input)[4];\n    *(short *)((int)input + 0x2a) = *(short *)((int)input + 0x2a) + -1;\n  }\n  else if (*(short *)((int)input + 0x2a) == 2) {\n    if (((pointer == (uint *)0x4) || (pointer == (uint *)0x8)) || (pointer == (uint *)0xffff0000)) {\n      (*input)[1] = (*input)[1] & 0xfffffcff;\n      **input = **input | 0x200;\n    }\n    else {\n      if (pointer == (uint *)0x2) {\n        **input = **input | 0x400;\n      }\n      else {\n        **input = **input & 0xfffffbff;\n      }\n      (*input)[1] = (*input)[1] & 0xfffffcff;\n    }\n    pointer = input[9];\n    input[9] = (uint *)((int)pointer + 1);\n    *(char *)pointer = (char)(*input)[4];\n    *(short *)((int)input + 0x2a) = *(short *)((int)input + 0x2a) + -1;\n    pointer = input[9];\n    input[9] = (uint *)((int)pointer + 1);\n    *(char *)pointer = (char)(*input)[4];\n    *(short *)((int)input + 0x2a) = *(short *)((int)input + 0x2a) + -1;\n    *(undefined *)((int)input + 0x3d) = 0x20;\n    input[0xc] = (uint *)0x0;\n    if (*(char *)((int)input + 0x3e) == '@') {\n      *(undefined *)((int)input + 0x3e) = 0;\n      FUNC_08002f9a();\n    }\n    else {\n      *(undefined *)((int)input + 0x3e) = 0;\n      FUNC_08002c50();\n    }\n  }\n  else {\n    pointer = input[9];\n    input[9] = (uint *)((int)pointer + 1);\n    *(char *)pointer = (char)(*input)[4];\n    *(short *)((int)input + 0x2a) = *(short *)((int)input + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800306c": "process_input_0800306c",
                "param_1": "input",
                "puVar1": "pointer"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002f9a",
                "FUN_08002c50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800316a": {
            "entrypoint": "0x0800316a",
            "current_name": "FUNC_0800316a",
            "code": "\nvoid FUNC_0800316a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800316a": "FUNC_0800316a"
            },
            "calling": [
                "FUN_0800316c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800316c": {
            "entrypoint": "0x0800316c",
            "current_name": "initialize_param_0800316c",
            "code": "\nvoid initialize_param_0800316c(uint **param)\n\n{\n  int returnValue;\n  uint *pointerVar1;\n  uint *pointerVar2;\n  \n  if (*(byte *)((int)param + 0x3d) - 0x29 < 2) {\n    param[0xc] = (uint *)0x0;\n    *(undefined *)((int)param + 0x3d) = 0x28;\n  }\n  else {\n    if ((*(char *)((int)param + 0x3d) != '`') && (((*param)[1] & 0x800) == 0)) {\n      *(undefined *)((int)param + 0x3d) = 0x20;\n    }\n    param[0xc] = (uint *)0x0;\n    *(undefined *)((int)param + 0x3e) = 0;\n  }\n  **param = **param & 0xfffff7ff;\n  pointerVar2 = *param;\n  if ((pointerVar2[1] & 0x800) == 0) {\n    if (*(char *)((int)param + 0x3d) == '`') {\n      *(undefined *)((int)param + 0x3d) = 0x20;\n      param[0x10] = (uint *)0x0;\n      if ((pointerVar2[5] & 0x40) != 0) {\n        pointerVar1 = param[9];\n        param[9] = (uint *)((int)pointerVar1 + 1);\n        *(char *)pointerVar1 = (char)pointerVar2[4];\n      }\n      **param = **param & 0xfffffffe;\n      FUNC_0800316a(param);\n    }\n    else {\n      if ((pointerVar2[5] & 0x40) != 0) {\n        pointerVar1 = param[9];\n        param[9] = (uint *)((int)pointerVar1 + 1);\n        *(char *)pointerVar1 = (char)pointerVar2[4];\n      }\n      initialize_if_not_initialized_08004ef4(param);\n    }\n  }\n  else {\n    pointerVar2[1] = pointerVar2[1] & 0xfffff7ff;\n    if (*(char *)((int)param[0xd] + 0x21) == '\\x01') {\n      param[0xe][0xd] = (uint)&LAB_080035fc_1;\n      returnValue = initialize_data_0800258c(param[0xe]);\n      if (returnValue != 0) {\n        if (((*param)[5] & 0x40) != 0) {\n          pointerVar2 = param[9];\n          param[9] = (uint *)((int)pointerVar2 + 1);\n          *(char *)pointerVar2 = (char)(*param)[4];\n        }\n        **param = **param & 0xfffffffe;\n        *(undefined *)((int)param + 0x3d) = 0x20;\n        (*(code *)param[0xe][0xd])();\n      }\n    }\n    else {\n      param[0xd][0xd] = (uint)&LAB_080035fc_1;\n      returnValue = initialize_data_0800258c(param[0xd]);\n      if (returnValue != 0) {\n        **param = **param & 0xfffffffe;\n        *(undefined *)((int)param + 0x3d) = 0x20;\n        (*(code *)param[0xd][0xd])();\n      }\n    }\n  }\n  if ((*(char *)((int)param + 0x3d) == '(') && (((uint)param[0x10] & 4) != 0)) {\n    param[0xb] = (uint *)0xffff0000;\n    param[0xc] = (uint *)0x0;\n    *(undefined *)((int)param + 0x3d) = 0x20;\n    *(undefined *)((int)param + 0x3e) = 0;\n    initialize_data_and_call_function_08004ec4(param);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800316c": "initialize_param_0800316c",
                "param_1": "param",
                "iVar1": "returnValue",
                "puVar2": "pointerVar1",
                "puVar3": "pointerVar2"
            },
            "calling": [
                "FUN_08003520",
                "FUN_080032b4"
            ],
            "called": [
                "FUN_08004ec4",
                "FUN_08004ef4",
                "FUN_0800258c",
                "FUN_0800316a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080032b4": {
            "entrypoint": "0x080032b4",
            "current_name": "initialize_080032b4",
            "code": "\nundefined4 initialize_080032b4(uint **param)\n\n{\n  char charVar;\n  uint *pointerVar1;\n  uint *pointerVar2;\n  \n  charVar = *(char *)((int)param + 0x3d);\n  (*param)[1] = (*param)[1] & 0xfffff8ff;\n  **param = **param | 1;\n  **param = **param & 0xfffffbff;\n  pointerVar1 = *param;\n  if ((pointerVar1[1] & 0x800) != 0) {\n    if ((*(char *)((int)param + 0x3d) == '\\\"') || (*(char *)((int)param + 0x3d) == '*')) {\n      *(short *)((int)param + 0x2a) = (short)*(undefined4 *)(*param[0xe] + 4);\n    }\n    else {\n      *(short *)((int)param + 0x2a) = (short)*(undefined4 *)(*param[0xd] + 4);\n    }\n  }\n  if (*(short *)((int)param + 0x2a) != 0) {\n    if ((pointerVar1[5] & 4) != 0) {\n      pointerVar2 = param[9];\n      param[9] = (uint *)((int)pointerVar2 + 1);\n      *(char *)pointerVar2 = (char)pointerVar1[4];\n      *(short *)((int)param + 0x2a) = *(short *)((int)param + 0x2a) + -1;\n    }\n    if (((*param)[5] & 0x40) != 0) {\n      pointerVar1 = param[9];\n      param[9] = (uint *)((int)pointerVar1 + 1);\n      *(char *)pointerVar1 = (char)(*param)[4];\n      *(short *)((int)param + 0x2a) = *(short *)((int)param + 0x2a) + -1;\n    }\n    param[0x10] = (uint *)((uint)param[0x10] | 4);\n  }\n  if (param[0x10] == (uint *)0x0) {\n    if (((charVar == '(') || (charVar == '*')) || (charVar == ')')) {\n      param[0xb] = (uint *)0xffff0000;\n      param[0xc] = (uint *)0x0;\n      *(undefined *)((int)param + 0x3d) = 0x20;\n      *(undefined *)((int)param + 0x3e) = 0;\n      initialize_080032b4_data_and_call_function_08004ec4();\n    }\n    else if ((param[0xc] == (uint *)0x22) || (charVar == '\\\"')) {\n      param[0xc] = (uint *)0x0;\n      *(undefined *)((int)param + 0x3d) = 0x20;\n      *(undefined *)((int)param + 0x3e) = 0;\n      FUNC_08002ca4();\n    }\n  }\n  else {\n    initialize_080032b4_param_0800316c();\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080032b4": "initialize_080032b4",
                "param_1": "param",
                "cVar1": "charVar",
                "puVar2": "pointerVar1",
                "puVar3": "pointerVar2"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002ca4",
                "FUN_0800316c",
                "FUN_08004ec4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080033b8": {
            "entrypoint": "0x080033b8",
            "current_name": "process_function_080033b8",
            "code": "\nvoid process_function_080033b8(int *input_array)\n\n{\n  int var1;\n  uint var2;\n  uint var3;\n  uint var4;\n  \n  var1 = *input_array;\n  var4 = *(uint *)(var1 + 0x18);\n  var2 = *(uint *)(var1 + 0x14);\n  var3 = *(uint *)(var1 + 4);\n  if ((*(char *)((int)input_array + 0x3e) == '\\x10') || (*(char *)((int)input_array + 0x3e) == '@')) {\n    if (((var2 & 0x10001) == 0) || ((var3 & 0x200) == 0)) {\n      if (((var2 & 0x10008) == 0) || ((var3 & 0x200) == 0)) {\n        if (((var2 & 0x10002) != 0) && ((var3 & 0x200) != 0)) {\n          enhance_permissions_080028de(input_array);\n        }\n      }\n      else {\n        assign_parameter_value_080028d2(input_array);\n      }\n    }\n    else {\n      process_param_08002848(input_array);\n    }\n    if ((var4 & 0x100004) == 0) {\n      if ((((var2 & 0x10040) != 0) && ((var3 & 0x400) != 0)) && ((var2 & 0x10004) == 0)) {\n        process_parameters_08002f9c(input_array);\n        return;\n      }\n      if (((var2 & 0x10004) != 0) && ((var3 & 0x200) != 0)) {\n        process_input_0800306c(input_array);\n        return;\n      }\n    }\n    else {\n      if ((((var2 & 0x10080) != 0) && ((var3 & 0x400) != 0)) && ((var2 & 0x10004) == 0)) {\n        update_flags_and_execute_08002db2(input_array);\n        return;\n      }\n      if (((var2 & 0x10004) != 0) && ((var3 & 0x200) != 0)) {\n        process_parameter_08002efc(input_array);\n        return;\n      }\n    }\n  }\n  else {\n    if (((var2 & 0x10002) != 0) && ((var3 & 0x200) != 0)) {\n      process_parameters_08002cf2();\n      return;\n    }\n    if (((var2 & 0x10010) != 0) && ((var3 & 0x200) != 0)) {\n      initialize_080032b4(input_array);\n      return;\n    }\n    if ((var4 & 0x100004) == 0) {\n      if ((((var2 & 0x10040) != 0) && ((var3 & 0x400) != 0)) && ((var2 & 0x10004) == 0)) {\n        process_parameter_08002ca6(input_array);\n        return;\n      }\n      if (((var2 & 0x10004) != 0) && ((var3 & 0x200) != 0)) {\n        update_array_element_08002ad8(input_array);\n      }\n    }\n    else {\n      if ((((var2 & 0x10080) != 0) && ((var3 & 0x400) != 0)) && ((var2 & 0x10004) == 0)) {\n        process_data_08002c54(input_array);\n        return;\n      }\n      if (((var2 & 0x10004) != 0) && ((var3 & 0x200) != 0)) {\n        decrement_counter_08002ab8(input_array);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080033b8": "process_function_080033b8",
                "param_1": "input_array",
                "iVar1": "var1",
                "uVar2": "var2",
                "uVar3": "var3",
                "uVar4": "var4"
            },
            "calling": [],
            "called": [
                "FUN_08002db2",
                "FUN_080028de",
                "FUN_08002f9c",
                "FUN_08002c54",
                "FUN_08002cf2",
                "FUN_0800306c",
                "FUN_08002ab8",
                "FUN_08002ad8",
                "FUN_08002848",
                "FUN_08002efc",
                "FUN_080032b4",
                "FUN_080028d2",
                "FUN_08002ca6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003520": {
            "entrypoint": "0x08003520",
            "current_name": "update_permissions_08003520",
            "code": "\nvoid updatePermissions_08003520(uint **permissions)\n\n{\n  char charVar;\n  uint *ptrPermissions;\n  uint value1;\n  uint value2;\n  \n  ptrPermissions = *permissions;\n  value1 = ptrPermissions[5];\n  value2 = ptrPermissions[1];\n  if (((value1 & 0x10100) != 0) && ((value2 & 0x100) != 0)) {\n    permissions[0x10] = (uint *)((uint)permissions[0x10] | 1);\n    ptrPermissions[5] = 0xfffffeff;\n    **permissions = **permissions | 0x8000;\n  }\n  if (((value1 & 0x10200) != 0) && ((value2 & 0x100) != 0)) {\n    permissions[0x10] = (uint *)((uint)permissions[0x10] | 2);\n    (*permissions)[5] = 0xfffffdff;\n  }\n  if (((value1 & 0x10400) != 0) && ((value2 & 0x100) != 0)) {\n    charVar = *(char *)((int)permissions + 0x3d);\n    if (((*(char *)((int)permissions + 0x3e) == ' ') && (*(short *)((int)permissions + 0x2a) == 0)) &&\n       (((charVar == '!' || (charVar == ')')) || ((charVar == '(' && (permissions[0xc] == (uint *)0x21)))))) {\n      handle_param_08002d1c(permissions);\n    }\n    else {\n      permissions[0x10] = (uint *)((uint)permissions[0x10] | 4);\n      if (*(char *)((int)permissions + 0x3e) == '\\x10') {\n        **permissions = **permissions | 0x200;\n      }\n      (*permissions)[5] = 0xfffffbff;\n    }\n  }\n  if (((value1 & 0x10800) != 0) && ((value2 & 0x100) != 0)) {\n    permissions[0x10] = (uint *)((uint)permissions[0x10] | 8);\n    (*permissions)[5] = 0xfffff7ff;\n  }\n  if (permissions[0x10] != (uint *)0x0) {\n    initialize_param_0800316c(permissions);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003520": "update_permissions_08003520",
                "param_1": "permissions",
                "cVar1": "charVar",
                "puVar2": "ptrPermissions",
                "uVar3": "value1",
                "uVar4": "value2"
            },
            "calling": [],
            "called": [
                "FUN_0800316c",
                "FUN_08002d1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800365c": {
            "entrypoint": "0x0800365c",
            "current_name": "calculate_delay_0800365c",
            "code": "\nvoid calculateDelay_0800365c(int input)\n\n{\n  bool hasNextDelay;\n  int adjustedDelay;\n  \n  adjustedDelay = input * (DAT_20000084 / 8000);\n  do {\n    hasNextDelay = adjustedDelay != 0;\n    adjustedDelay = adjustedDelay + -1;\n  } while (hasNextDelay);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800365c": "calculate_delay_0800365c",
                "param_1": "input",
                "local_4": "adjustedDelay",
                "bVar1": "hasNextDelay"
            },
            "calling": [
                "FUN_08003688"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003688": {
            "entrypoint": "0x08003688",
            "current_name": "check_hardware_status_08003688",
            "code": "\n\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nundefined4 checkHardwareStatus_08003688(uint *hardwareStatus)\n\n{\n  int startTime;\n  int currentTime;\n  undefined4 result;\n  uint value;\n  bool isFlagSet;\n  \n  if ((*hardwareStatus & 1) != 0) {\n    if (((_DAT_40021004 & 0xc) == 4) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) != 0)))) {\n      if (((_DAT_40021000 & 0x20000) != 0) && (hardwareStatus[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      value = hardwareStatus[1];\n      if (value == 0x10000) {\n        _DAT_40021000 = _DAT_40021000 | 0x10000;\n      }\n      else if (value == 0) {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      else if (value == 0x50000) {\n        _DAT_40021000 = _DAT_40021000 | 0x50000;\n      }\n      else {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      if (hardwareStatus[1] == 0) {\n        startTime = get_global_variable_08001cc4();\n        while ((_DAT_40021000 & 0x20000) != 0) {\n          currentTime = get_global_variable_08001cc4();\n          if (100 < (uint)(currentTime - startTime)) {\n            return 3;\n          }\n        }\n      }\n      else {\n        startTime = get_global_variable_08001cc4();\n        while ((_DAT_40021000 & 0x20000) == 0) {\n          currentTime = get_global_variable_08001cc4();\n          if (100 < (uint)(currentTime - startTime)) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*hardwareStatus & 2) != 0) {\n    if (((_DAT_40021004 & 0xc) == 0) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) == 0)))) {\n      if (((_DAT_40021000 & 2) != 0) && (hardwareStatus[4] != 1)) {\n        return 1;\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | hardwareStatus[5] << 3;\n    }\n    else if (hardwareStatus[4] == 0) {\n      _DAT_42420000 = 0;\n      startTime = get_global_variable_08001cc4();\n      while ((_DAT_40021000 & 2) != 0) {\n        currentTime = get_global_variable_08001cc4();\n        if (2 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420000 = 1;\n      startTime = get_global_variable_08001cc4();\n      while ((_DAT_40021000 & 2) == 0) {\n        currentTime = get_global_variable_08001cc4();\n        if (2 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | hardwareStatus[5] << 3;\n    }\n  }\n  if ((*hardwareStatus & 8) != 0) {\n    if (hardwareStatus[6] == 0) {\n      _DAT_42420480 = 0;\n      startTime = get_global_variable_08001cc4();\n      while ((_DAT_40021024 & 2) != 0) {\n        currentTime = get_global_variable_08001cc4();\n        if (2 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420480 = 1;\n      startTime = get_global_variable_08001cc4();\n      while ((_DAT_40021024 & 2) == 0) {\n        currentTime = get_global_variable_08001cc4();\n        if (2 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n      calculate_delay_0800365c(1);\n    }\n  }\n  if ((*hardwareStatus & 4) != 0) {\n    isFlagSet = (_DAT_4002101c & 0x10000000) == 0;\n    if (isFlagSet) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      startTime = get_global_variable_08001cc4();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        currentTime = get_global_variable_08001cc4();\n        if (100 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    value = hardwareStatus[3];\n    if (value == 1) {\n      _DAT_40021020 = _DAT_40021020 | 1;\n    }\n    else if (value == 0) {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    else if (value == 5) {\n      _DAT_40021020 = _DAT_40021020 | 5;\n    }\n    else {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    if (hardwareStatus[3] == 0) {\n      startTime = get_global_variable_08001cc4();\n      while ((_DAT_40021020 & 2) != 0) {\n        currentTime = get_global_variable_08001cc4();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      startTime = get_global_variable_08001cc4();\n      while ((_DAT_40021020 & 2) == 0) {\n        currentTime = get_global_variable_08001cc4();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    if (isFlagSet) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if (hardwareStatus[7] == 0) {\n    result = 0;\n  }\n  else if ((_DAT_40021004 & 0xc) == 8) {\n    result = 1;\n  }\n  else if (hardwareStatus[7] == 2) {\n    _DAT_42420060 = 0;\n    startTime = get_global_variable_08001cc4();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        if (hardwareStatus[8] == 0x10000) {\n          _DAT_40021004 = _DAT_40021004 & 0xfffdffff | hardwareStatus[2];\n        }\n        _DAT_40021004 = _DAT_40021004 & 0xffc2ffff | hardwareStatus[8] | hardwareStatus[9];\n        _DAT_42420060 = 1;\n        startTime = get_global_variable_08001cc4();\n        do {\n          if ((_DAT_40021000 & 0x2000000) != 0) {\n            return 0;\n          }\n          currentTime = get_global_variable_08001cc4();\n        } while ((uint)(currentTime - startTime) < 3);\n        return 3;\n      }\n      currentTime = get_global_variable_08001cc4();\n    } while ((uint)(currentTime - startTime) < 3);\n    result = 3;\n  }\n  else {\n    _DAT_42420060 = 0;\n    startTime = get_global_variable_08001cc4();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        return 0;\n      }\n      currentTime = get_global_variable_08001cc4();\n    } while ((uint)(currentTime - startTime) < 3);\n    result = 3;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08003688": "check_hardware_status_08003688",
                "param_1": "hardwareStatus",
                "iVar1": "startTime",
                "iVar2": "currentTime",
                "uVar3": "result",
                "uVar4": "value",
                "bVar5": "isFlagSet"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_0800365c",
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a68": {
            "entrypoint": "0x08003a68",
            "current_name": "calculate_function_time_08003a68",
            "code": "\n\n\nuint calculateFunctionTime_08003a68(void)\n\n{\n  uint uVar1;\n  undefined2 tempValue1;\n  undefined4 paramPointer;\n  undefined4 variable1;\n  undefined4 variable2;\n  undefined4 variable3;\n  \n  variable3 = 0x10100f0e;\n  variable2 = 0xd0c0b0a;\n  variable1 = 0x9080706;\n  paramPointer = 0x5040302;\n  tempValue1 = 0x201;\n  if ((_DAT_40021004 & 0xc) == 8) {\n    uVar1 = (uint)*(byte *)((int)&paramPointer + ((_DAT_40021004 << 10) >> 0x1c));\n    if ((_DAT_40021004 & 0x10000) == 0) {\n      uVar1 = uVar1 * 4000000;\n    }\n    else {\n      uVar1 = (uVar1 * 8000000) /\n              (uint)*(byte *)((int)&tempValue1 - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n    }\n  }\n  else {\n    uVar1 = 8000000;\n  }\n  return uVar1;\n}\n\n",
            "renaming": {
                "FUN_08003a68": "calculate_function_time_08003a68",
                "local_1c": "tempValue1",
                "uStack_18": "paramPointer",
                "uStack_14": "variable1",
                "uStack_10": "variable2",
                "uStack_c": "variable3"
            },
            "calling": [
                "FUN_08003afa"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ad4": {
            "entrypoint": "0x08003ad4",
            "current_name": "update_settings_08003ad4",
            "code": "\n\n\nundefined4 updateSettings_08003ad4(uint *settings,uint numSettings)\n\n{\n  int iVar1;\n  int iVar2;\n  uint flag;\n  \n  if ((_DAT_40022000 & 7) < numSettings) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | numSettings;\n    if (numSettings != (numSettings & 7)) {\n      return 1;\n    }\n  }\n  if ((*settings & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | settings[2];\n  }\n  if ((*settings & 1) != 0) {\n    flag = settings[1];\n    if (flag == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((flag != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = flag | _DAT_40021004 & 0xfffffffc;\n    iVar1 = getCurrentTime();\n    if (settings[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        iVar2 = getCurrentTime();\n        if (5000 < (uint)(iVar2 - iVar1)) {\n          return 3;\n        }\n      }\n    }\n    else if (settings[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        iVar2 = getCurrentTime();\n        if (5000 < (uint)(iVar2 - iVar1)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        iVar2 = getCurrentTime();\n        if (5000 < (uint)(iVar2 - iVar1)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (numSettings < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | numSettings;\n    if (numSettings != (numSettings & 7)) {\n      return 1;\n    }\n  }\n  if ((*settings & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | settings[3];\n  }\n  if ((*settings & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | settings[4] << 3;\n  }\n  flag = calculateFunctionTime();\n  DAT_20000084 = flag >> (&DAT_0800772c)[(_DAT_40021004 << 0x18) >> 0x1c];\n  initializeAndUpdateData(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003ad4": "update_settings_08003ad4",
                "param_1": "settings",
                "param_2": "numSettings",
                "uVar3": "flag",
                "get_global_variable_08001cc4": "getCurrentTime",
                "calculate_function_time_08003a68": "calculateFunctionTime",
                "initialize_and_update_data_08001c3c": "initializeAndUpdateData"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08003afa"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003afa": {
            "entrypoint": "0x08003afa",
            "current_name": "process_parameter_data_08003afa",
            "code": "\n\n\nundefined4 processParameterData_08003afa(uint *parameters,uint data)\n\n{\n  int initialValue;\n  int currentValue;\n  uint functionTime;\n  \n  if ((*parameters & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | parameters[2];\n  }\n  if ((*parameters & 1) != 0) {\n    functionTime = parameters[1];\n    if (functionTime == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((functionTime != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = functionTime | _DAT_40021004 & 0xfffffffc;\n    initialValue = getGlobalVariable();\n    if (parameters[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        currentValue = getGlobalVariable();\n        if (5000 < (uint)(currentValue - initialValue)) {\n          return 3;\n        }\n      }\n    }\n    else if (parameters[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        currentValue = getGlobalVariable();\n        if (5000 < (uint)(currentValue - initialValue)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        currentValue = getGlobalVariable();\n        if (5000 < (uint)(currentValue - initialValue)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (data < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | data;\n    if (data != (data & 7)) {\n      return 1;\n    }\n  }\n  if ((*parameters & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | parameters[3];\n  }\n  if ((*parameters & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | parameters[4] << 3;\n  }\n  functionTime = calculateFunctionTime();\n  DAT_20000084 = functionTime >> (&DAT_0800772c)[(_DAT_40021004 << 0x18) >> 0x1c];\n  initializeAndUpdateData(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003afa": "process_parameter_data_08003afa",
                "param_1": "parameters",
                "param_2": "data",
                "iVar1": "initialValue",
                "iVar2": "currentValue",
                "uVar3": "functionTime",
                "get_global_variable_08001cc4": "getGlobalVariable",
                "calculate_function_time_08003a68": "calculateFunctionTime",
                "initialize_and_update_data_08001c3c": "initializeAndUpdateData"
            },
            "calling": [
                "FUN_08003ad4"
            ],
            "called": [
                "FUN_08003a68",
                "FUN_08001cc4",
                "FUN_08001c3c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003c44": {
            "entrypoint": "0x08003c44",
            "current_name": "get_global_variable_08003c44",
            "code": "\nundefined4 getGlobalVariable_08003c44(void)\n\n{\n  return DAT_20000084;\n}\n\n",
            "renaming": {
                "FUN_08003c44": "get_global_variable_08003c44"
            },
            "calling": [
                "FUN_08003c50",
                "FUN_08001b48",
                "FUN_08003c70"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003c50": {
            "entrypoint": "0x08003c50",
            "current_name": "extracted_value_shift_08003c50",
            "code": "\n\n\nuint extracted_value_shift_08003c50(void)\n\n{\n  uint global_variable;\n  \n  global_variable = get_global_variable();\n  return global_variable >> (&DAT_0800773c)[(uint)(_DAT_40021004 << 0x15) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_08003c50": "extracted_value_shift_08003c50",
                "uVar1": "global_variable",
                "get_global_variable_08003c44": "get_global_variable"
            },
            "calling": [
                "FUN_08004204"
            ],
            "called": [
                "FUN_08003c44"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003c70": {
            "entrypoint": "0x08003c70",
            "current_name": "shifted_global_variable_08003c70",
            "code": "\n\n\nuint shiftedGlobalVariable_08003c70(void)\n\n{\n  uint globalVariable;\n  \n  globalVariable = getGlobalVariable();\n  return globalVariable >> (&DAT_0800773c)[(uint)(_DAT_40021004 << 0x12) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_08003c70": "shifted_global_variable_08003c70",
                "uVar1": "globalVariable",
                "get_global_variable_08003c44": "getGlobalVariable"
            },
            "calling": [
                "FUN_08004204",
                "FUN_08003da4"
            ],
            "called": [
                "FUN_08003c44"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003c90": {
            "entrypoint": "0x08003c90",
            "current_name": "update_configuration_08003c90",
            "code": "\n\n\nundefined4 updateConfiguration_08003c90(uint *config)\n\n{\n  uint newValue1;\n  uint newValue2;\n  int initialValue;\n  int updatedValue;\n  bool isFlagSet;\n  \n  if ((*config & 1) != 0) {\n    isFlagSet = (_DAT_4002101c & 0x10000000) == 0;\n    if (isFlagSet) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      initialValue = get_global_variable_08001cc4();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        updatedValue = get_global_variable_08001cc4();\n        if (100 < (uint)(updatedValue - initialValue)) {\n          return 3;\n        }\n      }\n    }\n    if (((_DAT_40021020 & 0x300) != 0) && ((_DAT_40021020 & 0x300) != (config[1] & 0x300))) {\n      newValue2 = _DAT_40021020 & 0xfffffcff;\n      _DAT_42420440 = 0;\n      newValue1 = _DAT_40021020 & 1;\n      _DAT_40021020 = newValue2;\n      if (newValue1 != 0) {\n        initialValue = get_global_variable_08001cc4();\n        while ((_DAT_40021020 & 2) == 0) {\n          updatedValue = get_global_variable_08001cc4();\n          if (5000 < (uint)(updatedValue - initialValue)) {\n            return 3;\n          }\n        }\n      }\n    }\n    _DAT_40021020 = _DAT_40021020 & 0xfffffcff | config[1];\n    if (isFlagSet) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if ((*config & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffff3fff | config[2];\n  }\n  if ((*config & 0x10) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffbfffff | config[3];\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003c90": "update_configuration_08003c90",
                "param_1": "config",
                "uVar1": "newValue1",
                "uVar2": "newValue2",
                "iVar3": "initialValue",
                "iVar4": "updatedValue",
                "bVar5": "isFlagSet"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003da4": {
            "entrypoint": "0x08003da4",
            "current_name": "calculate_resource_value_08003da4",
            "code": "\n\n\nuint calculateResourceValue_08003da4(int resourceType)\n\n{\n  uint resourceValue;\n  undefined2 shiftedValue;\n  undefined4 variable1;\n  undefined4 variable2;\n  undefined4 variable3;\n  undefined4 variable4;\n  \n  variable4 = 0x10100f0e;\n  variable3 = 0xd0c0b0a;\n  variable2 = 0x9080706;\n  variable1 = 0x5040302;\n  shiftedValue = 0x201;\n  if (resourceType == 2) {\n    resourceValue = shifted_global_variable_08003c70();\n    resourceValue = resourceValue / ((((_DAT_40021004 << 0x10) >> 0x1e) + 1) * 2);\n  }\n  else if (resourceType == 0x10) {\n    if ((_DAT_40021000 & 0x1000000) == 0) {\n      resourceValue = 0;\n    }\n    else {\n      if ((_DAT_40021004 & 0x10000) == 0) {\n        resourceValue = 4000000;\n      }\n      else {\n        resourceValue = 8000000 / *(byte *)((int)&shiftedValue - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n      }\n      resourceValue = resourceValue * *(byte *)((int)&variable1 + ((_DAT_40021004 << 10) >> 0x1c));\n      if ((_DAT_40021004 & 0x400000) == 0) {\n        resourceValue = (resourceValue * 2) / 3;\n      }\n    }\n  }\n  else if (resourceType == 1) {\n    if ((_DAT_40021020 & 0x302) == 0x102) {\n      resourceValue = 0x8000;\n    }\n    else if (((_DAT_40021020 & 0x300) == 0x200) && ((_DAT_40021024 & 2) != 0)) {\n      resourceValue = 32000;\n    }\n    else if ((_DAT_40021020 & 0x300) == 0x300) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        resourceValue = 0;\n      }\n      else {\n        resourceValue = 0xf424;\n      }\n    }\n    else {\n      resourceValue = 0;\n    }\n  }\n  else {\n    resourceValue = 0;\n  }\n  return resourceValue;\n}\n\n",
            "renaming": {
                "FUN_08003da4": "calculate_resource_value_08003da4",
                "param_1": "resourceType",
                "uVar1": "resourceValue",
                "local_24": "shiftedValue",
                "uStack_20": "variable1",
                "uStack_1c": "variable2",
                "uStack_18": "variable3",
                "uStack_14": "variable4"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_08002384"
            ],
            "called": [
                "FUN_08003c70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ea0": {
            "entrypoint": "0x08003ea0",
            "current_name": "execute_callback_and_reset_08003ea0",
            "code": "\n\n\nvoid execute_callback_and_reset_08003ea0(uint **param)\n\n{\n  if (((**param & 2) != 0) && (((*param)[1] & 2) != 0)) {\n    execute_callback_08004d18();\n    (*param)[1] = 0xfffffffd;\n  }\n  _DAT_40010414 = 0x20000;\n  *(undefined *)((int)param + 0x11) = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003ea0": "execute_callback_and_reset_08003ea0",
                "param_1": "param"
            },
            "calling": [],
            "called": [
                "FUN_08004d18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ed8": {
            "entrypoint": "0x08003ed8",
            "current_name": "initialize_and_protect_memory_08003ed8",
            "code": "\nvoid initializeAndProtectMemory_08003ed8(uint **pointerToUIntPointer)\n\n{\n  uint *pointedUIntPointer;\n  \n  *(undefined *)((int)pointerToUIntPointer + 0x3d) = 2;\n  pointedUIntPointer = *pointerToUIntPointer;\n  if ((pointedUIntPointer[8] & 0x1111) == 0) {\n    if ((pointedUIntPointer[8] & 0x444) == 0) {\n      *pointedUIntPointer = *pointedUIntPointer & 0xfffffffe;\n    }\n  }\n  initializeMemoryProtection(pointerToUIntPointer);\n  *(undefined *)((int)pointerToUIntPointer + 0x3d) = 0;\n  *(undefined *)(pointerToUIntPointer + 0xf) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003ed8": "initialize_and_protect_memory_08003ed8",
                "param_1": "pointerToUIntPointer",
                "puVar1": "pointedUIntPointer",
                "initialize_memory_protection_08004b34": "initializeMemoryProtection"
            },
            "calling": [
                "FUN_08004b3c"
            ],
            "called": [
                "FUN_08004b34"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f12": {
            "entrypoint": "0x08003f12",
            "current_name": "FUNC_08003f12",
            "code": "\nvoid FUNC_08003f12(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f12": "FUNC_08003f12"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08003f14": {
            "entrypoint": "0x08003f14",
            "current_name": "FUNC_08003f14",
            "code": "\nvoid FUNC_08003f14(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f14": "FUNC_08003f14"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08003f16": {
            "entrypoint": "0x08003f16",
            "current_name": "FUNC_08003f16",
            "code": "\nvoid FUNC_08003f16(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f16": "FUNC_08003f16"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08003f18": {
            "entrypoint": "0x08003f18",
            "current_name": "main_function_08003f18",
            "code": "\nvoid main_function_08003f18(int *input_array)\n\n{\n  int temp_var;\n  \n  temp_var = *input_array;\n  if (((*(uint *)(temp_var + 0x10) & 2) != 0) && ((*(uint *)(temp_var + 0xc) & 2) != 0)) {\n    *(undefined4 *)(temp_var + 0x10) = 0xfffffffd;\n    *(undefined *)(input_array + 7) = 1;\n    if ((*(uint *)(*input_array + 0x18) & 3) == 0) {\n      execute_callback();\n      FUNC_08003f14(input_array);\n    }\n    else {\n      FUNC_08003f12();\n    }\n    *(undefined *)(input_array + 7) = 0;\n  }\n  temp_var = *input_array;\n  if (((*(uint *)(temp_var + 0x10) & 4) != 0) && ((*(uint *)(temp_var + 0xc) & 4) != 0)) {\n    *(undefined4 *)(temp_var + 0x10) = 0xfffffffb;\n    *(undefined *)(input_array + 7) = 2;\n    if ((*(uint *)(*input_array + 0x18) & 0x300) == 0) {\n      execute_callback(input_array);\n      FUNC_08003f14(input_array);\n    }\n    else {\n      FUNC_08003f12(input_array);\n    }\n    *(undefined *)(input_array + 7) = 0;\n  }\n  temp_var = *input_array;\n  if (((*(uint *)(temp_var + 0x10) & 8) != 0) && ((*(uint *)(temp_var + 0xc) & 8) != 0)) {\n    *(undefined4 *)(temp_var + 0x10) = 0xfffffff7;\n    *(undefined *)(input_array + 7) = 4;\n    if ((*(uint *)(*input_array + 0x1c) & 3) == 0) {\n      execute_callback(input_array);\n      FUNC_08003f14(input_array);\n    }\n    else {\n      FUNC_08003f12(input_array);\n    }\n    *(undefined *)(input_array + 7) = 0;\n  }\n  temp_var = *input_array;\n  if (((*(uint *)(temp_var + 0x10) & 0x10) != 0) && ((*(uint *)(temp_var + 0xc) & 0x10) != 0)) {\n    *(undefined4 *)(temp_var + 0x10) = 0xffffffef;\n    *(undefined *)(input_array + 7) = 8;\n    if ((*(uint *)(*input_array + 0x1c) & 0x300) == 0) {\n      execute_callback(input_array);\n      FUNC_08003f14(input_array);\n    }\n    else {\n      FUNC_08003f12(input_array);\n    }\n    *(undefined *)(input_array + 7) = 0;\n  }\n  temp_var = *input_array;\n  if (((*(uint *)(temp_var + 0x10) & 1) != 0) && ((*(uint *)(temp_var + 0xc) & 1) != 0)) {\n    *(undefined4 *)(temp_var + 0x10) = 0xfffffffe;\n    execute_subtracted_function(input_array);\n  }\n  temp_var = *input_array;\n  if (((*(uint *)(temp_var + 0x10) & 0x80) != 0) && ((*(uint *)(temp_var + 0xc) & 0x80) != 0)) {\n    *(undefined4 *)(temp_var + 0x10) = 0xffffff7f;\n    FUNC_0800417a(input_array);\n  }\n  temp_var = *input_array;\n  if (((*(uint *)(temp_var + 0x10) & 0x40) != 0) && ((*(uint *)(temp_var + 0xc) & 0x40) != 0)) {\n    *(undefined4 *)(temp_var + 0x10) = 0xffffffbf;\n    FUNC_08003f16(input_array);\n  }\n  temp_var = *input_array;\n  if (((*(uint *)(temp_var + 0x10) & 0x20) != 0) && ((*(uint *)(temp_var + 0xc) & 0x20) != 0)) {\n    *(undefined4 *)(temp_var + 0x10) = 0xffffffdf;\n    FUNC_08004178(input_array);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f18": "main_function_08003f18",
                "param_1": "input_array",
                "iVar1": "temp_var",
                "execute_callback_if_condition_met_08004df8": "execute_callback",
                "execute_subtracted_function_08004e12": "execute_subtracted_function"
            },
            "calling": [
                "FUN_08004e20"
            ],
            "called": [
                "FUN_0800417a",
                "FUN_08004e12",
                "FUN_08004178",
                "FUN_08004df8",
                "FUN_08003f12",
                "FUN_08003f16",
                "FUN_08003f14"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004092": {
            "entrypoint": "0x08004092",
            "current_name": "update_bit_value_08004092",
            "code": "\nvoid updateBitValue_08004092(int dataPointer,uint bitPos,int bitValue)\n\n{\n  *(uint *)(dataPointer + 0x20) = *(uint *)(dataPointer + 0x20) & ~(1 << (bitPos & 0xff));\n  *(uint *)(dataPointer + 0x20) = *(uint *)(dataPointer + 0x20) | bitValue << (bitPos & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004092": "update_bit_value_08004092",
                "param_1": "dataPointer",
                "param_2": "bitPos",
                "param_3": "bitValue"
            },
            "calling": [
                "FUN_080040b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040b0": {
            "entrypoint": "0x080040b0",
            "current_name": "update_bit_values_080040b0",
            "code": "\nundefined4 update_bit_values_080040b0(uint **input_array,undefined4 value)\n\n{\n  uint *current_array;\n  \n  update_bit_value_08004092(*input_array,value,0);\n  if (((*input_array == (uint *)0x40012c00) && ((constant2 & 0x1111) == 0)) &&\n     ((constant2 & 0x444) == 0)) {\n    constant3 = constant3 & 0xffff7fff;\n  }\n  current_array = *input_array;\n  if (((current_array[8] & 0x1111) == 0) && ((current_array[8] & 0x444) == 0)) {\n    *current_array = *current_array & 0xfffffffe;\n  }\n  *(undefined *)((int)input_array + 0x3d) = 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080040b0": "update_bit_values_080040b0",
                "param_1": "input_array",
                "param_2": "value",
                "puVar1": "current_array",
                "uRam40012c20": "constant2",
                "uRam40012c44": "constant3"
            },
            "calling": [
                "FUN_08004b3c"
            ],
            "called": [
                "FUN_08004092"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004110": {
            "entrypoint": "0x08004110",
            "current_name": "update_value_08004110",
            "code": "\nvoid updateValue_08004110(int objectAddress,uint bitPosition,int newValue)\n\n{\n  *(uint *)(objectAddress + 0x20) = *(uint *)(objectAddress + 0x20) & ~(4 << (bitPosition & 0xff));\n  *(uint *)(objectAddress + 0x20) = *(uint *)(objectAddress + 0x20) | newValue << (bitPosition & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004110": "update_value_08004110",
                "param_1": "objectAddress",
                "param_2": "bitPosition",
                "param_3": "newValue"
            },
            "calling": [
                "FUN_0800412c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800412c": {
            "entrypoint": "0x0800412c",
            "current_name": "update_value_0800412c",
            "code": "\nundefined4 updateValue_0800412c(uint **array,undefined4 value)\n\n{\n  uint *ptr;\n  \n  update_value_08004110(*array,value,0);\n  ptr = *array;\n  if (((ptr[8] & 0x1111) == 0) && ((ptr[8] & 0x444) == 0)) {\n    ptr[0x11] = ptr[0x11] & 0xffff7fff;\n  }\n  ptr = *array;\n  if (((ptr[8] & 0x1111) == 0) && ((ptr[8] & 0x444) == 0)) {\n    *ptr = *ptr & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800412c": "update_value_0800412c",
                "param_1": "array",
                "param_2": "value",
                "puVar1": "ptr"
            },
            "calling": [
                "FUN_08004b3c"
            ],
            "called": [
                "FUN_08004110"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004178": {
            "entrypoint": "0x08004178",
            "current_name": "FUNC_08004178",
            "code": "\nvoid FUNC_08004178(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004178": "FUNC_08004178"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800417a": {
            "entrypoint": "0x0800417a",
            "current_name": "FUNC_0800417a",
            "code": "\nvoid FUNC_0800417a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800417a": "FUNC_0800417a"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800417c": {
            "entrypoint": "0x0800417c",
            "current_name": "clear_bits_and_set_flag_0800417c",
            "code": "\nvoid clearBitsAndSetFlag_0800417c(int *dataPointer)\n\n{\n  *(uint *)(*dataPointer + 0xc) = *(uint *)(*dataPointer + 0xc) & 0xfffffedf;\n  *(uint *)(*dataPointer + 0x14) = *(uint *)(*dataPointer + 0x14) & 0xfffffffe;\n  *(undefined *)((int)dataPointer + 0x3a) = 0x20;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800417c": "clear_bits_and_set_flag_0800417c",
                "param_1": "dataPointer"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004198": {
            "entrypoint": "0x08004198",
            "current_name": "decode_data_08004198",
            "code": "\nundefined4 decode_data_08004198(int *data_ptr)\n\n{\n  short loop_count;\n  byte *byte_ptr;\n  \n  if (*(char *)((int)data_ptr + 0x39) != '!') {\n    return 2;\n  }\n  if (data_ptr[2] == 0x1000) {\n    *(uint *)(*data_ptr + 4) = *(ushort *)data_ptr[8] & 0x1ff;\n    if (data_ptr[4] == 0) {\n      data_ptr[8] = data_ptr[8] + 2;\n    }\n    else {\n      data_ptr[8] = data_ptr[8] + 1;\n    }\n  }\n  else {\n    byte_ptr = (byte *)data_ptr[8];\n    data_ptr[8] = (int)(byte_ptr + 1);\n    *(uint *)(*data_ptr + 4) = (uint)*byte_ptr;\n  }\n  loop_count = *(short *)((int)data_ptr + 0x26) + -1;\n  *(short *)((int)data_ptr + 0x26) = loop_count;\n  if (loop_count == 0) {\n    *(uint *)(*data_ptr + 0xc) = *(uint *)(*data_ptr + 0xc) & 0xffffff7f;\n    *(uint *)(*data_ptr + 0xc) = *(uint *)(*data_ptr + 0xc) | 0x40;\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004198": "decode_data_08004198",
                "param_1": "data_ptr",
                "sVar1": "loop_count",
                "pbVar2": "byte_ptr"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004204": {
            "entrypoint": "0x08004204",
            "current_name": "calculate_result_08004204",
            "code": "\nvoid calculateResult_08004204(int *inputArray)\n\n{\n  int value1;\n  int value2;\n  int value3;\n  int value4;\n  int value5;\n  int value6;\n  int value7;\n  int value8;\n  int value9;\n  int value10;\n  \n  *(uint *)(*inputArray + 0x10) = *(uint *)(*inputArray + 0x10) & 0xffffcfff | inputArray[3];\n  *(uint *)(*inputArray + 0xc) =\n       inputArray[2] | inputArray[4] | inputArray[5] | *(uint *)(*inputArray + 0xc) & 0xffffe9f3;\n  *(uint *)(*inputArray + 0x14) = *(uint *)(*inputArray + 0x14) & 0xfffffcff | inputArray[6];\n  value10 = *inputArray;\n  if (value10 != 0x40013800) {\n    value1 = extracted_value_shift_08003c50();\n    value6 = inputArray[1];\n    value2 = extracted_value_shift_08003c50();\n    value7 = inputArray[1];\n    value3 = extracted_value_shift_08003c50();\n    value8 = inputArray[1];\n    value4 = extracted_value_shift_08003c50();\n    value9 = inputArray[1];\n    value5 = extracted_value_shift_08003c50();\n    *(uint *)(value10 + 8) =\n         ((uint)((int)((ulonglong)\n                       (((uint)(value4 * 0x19) / (uint)(value9 << 2) +\n                        (int)(((ulonglong)(uint)(value5 * 0x19) / (ulonglong)(uint)(inputArray[1] << 2))\n                             / 100) * -100) * 0x10 + 0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n         ((((uint)(value2 * 0x19) / (uint)(value7 << 2) +\n           (int)(((ulonglong)(uint)(value3 * 0x19) / (ulonglong)(uint)(value8 << 2)) / 100) * -100) *\n           0x10 + 0x32) / 100 & 0xf0) +\n         (int)(((ulonglong)(uint)(value1 * 0x19) / (ulonglong)(uint)(value6 << 2)) / 100) * 0x10;\n    return;\n  }\n  value10 = shifted_global_variable_08003c70();\n  value5 = inputArray[1];\n  value1 = shifted_global_variable_08003c70();\n  value6 = inputArray[1];\n  value2 = shifted_global_variable_08003c70();\n  value7 = inputArray[1];\n  value3 = shifted_global_variable_08003c70();\n  value8 = inputArray[1];\n  value4 = shifted_global_variable_08003c70();\n  iRam40013808 = ((uint)((int)((ulonglong)\n                               (((uint)(value3 * 0x19) / (uint)(value8 << 2) +\n                                (int)(((ulonglong)(uint)(value4 * 0x19) /\n                                      (ulonglong)(uint)(inputArray[1] << 2)) / 100) * -100) * 0x10 +\n                               0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n                 ((((uint)(value1 * 0x19) / (uint)(value6 << 2) +\n                   (int)(((ulonglong)(uint)(value2 * 0x19) / (ulonglong)(uint)(value7 << 2)) / 100) *\n                   -100) * 0x10 + 0x32) / 100 & 0xf0) +\n                 (int)(((ulonglong)(uint)(value10 * 0x19) / (ulonglong)(uint)(value5 << 2)) / 100) *\n                 0x10;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004204": "calculate_result_08004204",
                "param_1": "inputArray",
                "iVar1": "value1",
                "iVar2": "value2",
                "iVar3": "value3",
                "iVar4": "value4",
                "iVar5": "value5",
                "iVar6": "value6",
                "iVar7": "value7",
                "iVar8": "value8",
                "iVar9": "value9",
                "iVar10": "value10"
            },
            "calling": [
                "FUN_0800441a"
            ],
            "called": [
                "FUN_08003c50",
                "FUN_08003c70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080043b4": {
            "entrypoint": "0x080043b4",
            "current_name": "check_flags_080043b4",
            "code": "\nundefined4 checkFlags_080043b4(uint **flags,uint flag,uint expectedResult,int globalVar,uint maxDiff)\n\n{\n  int currentVar;\n  \n  do {\n    if (((flag & ~**flags) == 0) != expectedResult) {\n      return 0;\n    }\n  } while ((maxDiff == 0xffffffff) ||\n          ((maxDiff != 0 && (currentVar = getCurrentGlobalVar(), (uint)(currentVar - globalVar) <= maxDiff))));\n  (*flags)[3] = (*flags)[3] & 0xfffffe5f;\n  (*flags)[5] = (*flags)[5] & 0xfffffffe;\n  *(undefined *)((int)flags + 0x39) = 0x20;\n  *(undefined *)((int)flags + 0x3a) = 0x20;\n  *(undefined *)(flags + 0xe) = 0;\n  return 3;\n}\n\n",
            "renaming": {
                "FUN_080043b4": "check_flags_080043b4",
                "param_1": "flags",
                "param_2": "flag",
                "param_3": "expectedResult",
                "param_4": "globalVar",
                "param_5": "maxDiff",
                "iVar1": "currentVar",
                "get_global_variable_08001cc4": "getCurrentGlobalVar"
            },
            "calling": [
                "FUN_08004478"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004418": {
            "entrypoint": "0x08004418",
            "current_name": "FUNC_08004418",
            "code": "\nvoid FUNC_08004418(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004418": "FUNC_08004418"
            },
            "calling": [
                "FUN_0800441a"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800441a": {
            "entrypoint": "0x0800441a",
            "current_name": "process_data_0800441a",
            "code": "\nundefined4 processData_0800441a(int *data)\n\n{\n  if (data != (int *)0x0) {\n    if (*(char *)((int)data + 0x39) == '\\0') {\n      *(undefined *)(data + 0xe) = 0;\n      FUNC_08004418();\n    }\n    *(undefined *)((int)data + 0x39) = 0x24;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xffffdfff;\n    calculateResult(data);\n    *(uint *)(*data + 0x10) = *(uint *)(*data + 0x10) & 0xffffb7ff;\n    *(uint *)(*data + 0x14) = *(uint *)(*data + 0x14) & 0xffffffd5;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) | 0x2000;\n    value_5 = 0;\n    *(undefined *)((int)data + 0x39) = 0x20;\n    *(undefined *)((int)data + 0x3a) = 0x20;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800441a": "process_data_0800441a",
                "param_1": "data",
                "calculate_result_08004204": "calculateResult",
                "param_1[0xf]": "value_5"
            },
            "calling": [
                "FUN_08004f4c"
            ],
            "called": [
                "FUN_08004204",
                "FUN_08004418"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004478": {
            "entrypoint": "0x08004478",
            "current_name": "process_data_08004478",
            "code": "\nundefined4 processData_08004478(int *array,ushort *data,int length,undefined4 result)\n\n{\n  int returnValue;\n  undefined4 status;\n  \n  if (*(char *)((int)array + 0x39) == ' ') {\n    if (data == (ushort *)0x0) {\n      status = 1;\n    }\n    else if (length == 0) {\n      status = 1;\n    }\n    else if (*(char *)(array + 0xe) == '\\x01') {\n      status = 2;\n    }\n    else {\n      *(undefined *)(array + 0xe) = 1;\n      array[0xf] = 0;\n      *(undefined *)((int)array + 0x39) = 0x21;\n      status = get_global_variable_08001cc4();\n      *(short *)(array + 9) = (short)length;\n      *(short *)((int)array + 0x26) = (short)length;\n      while (*(short *)((int)array + 0x26) != 0) {\n        *(short *)((int)array + 0x26) = *(short *)((int)array + 0x26) + -1;\n        if (array[2] == 0x1000) {\n          returnValue = check_flags_080043b4(array,0x80,0,status,result);\n          if (returnValue != 0) {\n            return 3;\n          }\n          *(uint *)(*array + 4) = *data & 0x1ff;\n          if (array[4] == 0) {\n            data = data + 1;\n          }\n          else {\n            data = (ushort *)((int)data + 1);\n          }\n        }\n        else {\n          returnValue = check_flags_080043b4(array,0x80,0,status,result);\n          if (returnValue != 0) {\n            return 3;\n          }\n          *(uint *)(*array + 4) = (uint)*(byte *)data;\n          data = (ushort *)((int)data + 1);\n        }\n      }\n      returnValue = check_flags_080043b4(array,0x40,0,status,result);\n      if (returnValue == 0) {\n        *(undefined *)((int)array + 0x39) = 0x20;\n        *(undefined *)(array + 0xe) = 0;\n        status = 0;\n      }\n      else {\n        status = 3;\n      }\n    }\n  }\n  else {\n    status = 2;\n  }\n  return status;\n}\n\n",
            "renaming": {
                "FUN_08004478": "process_data_08004478",
                "param_1": "array",
                "param_2": "data",
                "param_3": "length",
                "param_4": "result",
                "iVar1": "returnValue",
                "uVar2": "status"
            },
            "calling": [
                "FUN_080053d4"
            ],
            "called": [
                "FUN_08001cc4",
                "FUN_080043b4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800455a": {
            "entrypoint": "0x0800455a",
            "current_name": "check_input_validity_0800455a",
            "code": "\nundefined4 checkInputValidity_0800455a(int *array,int size,int length)\n\n{\n  if (*(char *)((int)array + 0x39) != ' ') {\n    return 2;\n  }\n  if (size == 0) {\n    return 1;\n  }\n  if (length == 0) {\n    return 1;\n  }\n  if (*(char *)(array + 0xe) != '\\x01') {\n    array[8] = size;\n    *(short *)(array + 9) = (short)length;\n    *(short *)((int)array + 0x26) = (short)length;\n    array[0xf] = 0;\n    *(undefined *)((int)array + 0x39) = 0x21;\n    *(undefined *)(array + 0xe) = 0;\n    *(uint *)(*array + 0xc) = *(uint *)(*array + 0xc) | 0x80;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_0800455a": "check_input_validity_0800455a",
                "param_1": "array",
                "param_2": "size",
                "param_3": "length"
            },
            "calling": [
                "FUN_08005568",
                "FUN_08005604"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080045a2": {
            "entrypoint": "0x080045a2",
            "current_name": "validate_parameters_080045a2",
            "code": "\nundefined4 validate_parameters_080045a2(int *data,int value1,int value2)\n\n{\n  if (*(char *)((int)data + 0x3a) != ' ') {\n    return 2;\n  }\n  if (value1 == 0) {\n    return 1;\n  }\n  if (value2 == 0) {\n    return 1;\n  }\n  if (*(char *)(data + 0xe) != '\\x01') {\n    data_field1 = value1;\n    *(short *)(data + 0xb) = (short)value2;\n    *(short *)((int)data + 0x2e) = (short)value2;\n    data_field4 = 0;\n    *(undefined *)((int)data + 0x3a) = 0x22;\n    *(undefined *)(data + 0xe) = 0;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) | 0x100;\n    *(uint *)(*data + 0x14) = *(uint *)(*data + 0x14) | 1;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) | 0x20;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_080045a2": "validate_parameters_080045a2",
                "param_1": "data",
                "param_2": "value1",
                "param_3": "value2",
                "param_1[10]": "data_field1",
                "param_1[0xf]": "data_field4"
            },
            "calling": [
                "FUN_08005510",
                "FUN_080054d4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080045fe": {
            "entrypoint": "0x080045fe",
            "current_name": "update_parameter_and_process_value_080045fe",
            "code": "\nundefined4 updateParameterAndProcessValue_080045fe(int *param)\n\n{\n  *(uint *)(*param + 0xc) = *(uint *)(*param + 0xc) & 0xffffffbf;\n  *(undefined *)((int)param + 0x39) = 0x20;\n  processValue();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080045fe": "update_parameter_and_process_value_080045fe",
                "param_1": "param",
                "process_value_08005604": "processValue"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [
                "FUN_08005604"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004618": {
            "entrypoint": "0x08004618",
            "current_name": "process_input_08004618",
            "code": "\nundefined4 processInput_08004618(int *inputArray)\n\n{\n  byte *bytePointer;\n  short shortValue;\n  undefined *undefinedPointer;\n  \n  if (*(char *)((int)inputArray + 0x3a) != '\\\"') {\n    return 2;\n  }\n  if (inputArray[2] == 0x1000) {\n    if (inputArray[4] == 0) {\n      *(ushort *)inputArray[10] = (ushort)((uint)(*(int *)(*inputArray + 4) << 0x17) >> 0x17);\n      inputArray[10] = inputArray[10] + 2;\n    }\n    else {\n      *(ushort *)inputArray[10] = (ushort)*(undefined4 *)(*inputArray + 4) & 0xff;\n      inputArray[10] = inputArray[10] + 1;\n    }\n  }\n  else if (inputArray[4] == 0) {\n    undefinedPointer = (undefined *)inputArray[10];\n    inputArray[10] = (int)(undefinedPointer + 1);\n    *undefinedPointer = (char)*(undefined4 *)(*inputArray + 4);\n  }\n  else {\n    bytePointer = (byte *)inputArray[10];\n    inputArray[10] = (int)(bytePointer + 1);\n    *bytePointer = (byte)*(undefined4 *)(*inputArray + 4) & 0x7f;\n  }\n  shortValue = *(short *)((int)inputArray + 0x2e) + -1;\n  *(short *)((int)inputArray + 0x2e) = shortValue;\n  if (shortValue != 0) {\n    return 0;\n  }\n  *(uint *)(*inputArray + 0xc) = *(uint *)(*inputArray + 0xc) & 0xffffffdf;\n  *(uint *)(*inputArray + 0xc) = *(uint *)(*inputArray + 0xc) & 0xfffffeff;\n  *(uint *)(*inputArray + 0x14) = *(uint *)(*inputArray + 0x14) & 0xfffffffe;\n  *(undefined *)((int)inputArray + 0x3a) = 0x20;\n  execute_function_based_on_index_080055e0();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004618": "process_input_08004618",
                "param_1": "inputArray",
                "pbVar1": "bytePointer",
                "sVar2": "shortValue",
                "puVar3": "undefinedPointer"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [
                "FUN_080055e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080046b8": {
            "entrypoint": "0x080046b8",
            "current_name": "process_input_080046b8",
            "code": "\nvoid process_input_080046b8(uint **parameters)\n\n{\n  int result;\n  uint parameter2;\n  uint *pointer;\n  uint flag;\n  uint parameter1;\n  \n  pointer = *parameters;\n  parameter1 = *pointer;\n  parameter2 = pointer[3];\n  if ((((parameter1 & 0xf) == 0) && ((parameter1 & 0x20) != 0)) && ((parameter2 & 0x20) != 0)) {\n    process_input_080046b8_helper(parameters);\n    return;\n  }\n  if (((parameter1 & 0xf) == 0) || ((flag = pointer[5] & 1, flag == 0 && ((parameter2 & 0x120) == 0)))) {\n    if (((parameter1 & 0x80) != 0) && ((parameter2 & 0x80) != 0)) {\n      decode_data(parameters);\n      return;\n    }\n    if (((parameter1 & 0x40) != 0) && ((parameter2 & 0x40) != 0)) {\n      update_parameter_and_process_value(parameters);\n    }\n  }\n  else {\n    if (((parameter1 & 1) != 0) && ((parameter2 & 0x100) != 0)) {\n      parameters[0xf] = (uint *)((uint)parameters[0xf] | 1);\n    }\n    if (((parameter1 & 4) != 0) && (flag != 0)) {\n      parameters[0xf] = (uint *)((uint)parameters[0xf] | 2);\n    }\n    if (((parameter1 & 2) != 0) && (flag != 0)) {\n      parameters[0xf] = (uint *)((uint)parameters[0xf] | 4);\n    }\n    if (((parameter1 & 8) != 0) && (flag != 0)) {\n      parameters[0xf] = (uint *)((uint)parameters[0xf] | 8);\n    }\n    if (parameters[0xf] != (uint *)0x0) {\n      if (((parameter1 & 0x20) != 0) && ((parameter2 & 0x20) != 0)) {\n        process_input_080046b8_helper(parameters);\n      }\n      if ((((uint)parameters[0xf] & 8) == 0) && (((*parameters)[5] & 0x40) == 0)) {\n        FUNC_08005650(parameters);\n        parameters[0xf] = (uint *)0x0;\n        return;\n      }\n      clear_bits_and_set_flag(parameters);\n      pointer = *parameters;\n      if ((pointer[5] & 0x40) == 0) {\n        FUNC_08005650(parameters);\n        return;\n      }\n      pointer[5] = pointer[5] & 0xffffffbf;\n      if (parameters[0xd] == (uint *)0x0) {\n        FUNC_08005650(parameters);\n        return;\n      }\n      parameters[0xd][0xd] = (uint)&label_1;\n      result = initialize_data(parameters[0xd]);\n      if (result != 0) {\n        (*(code *)parameters[0xd][0xd])();\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080046b8": "process_input_080046b8",
                "param_1": "parameters",
                "iVar1": "result",
                "uVar2": "parameter2",
                "uVar4": "flag",
                "uVar5": "parameter1",
                "puVar3": "pointer",
                "process_input_08004618": "process_input_helper",
                "decode_data_08004198": "decode_data",
                "update_parameter_and_process_value_080045fe": "update_parameter_and_process_value",
                "clear_bits_and_set_flag_0800417c": "clear_bits_and_set_flag",
                "initialize_data_0800258c": "initialize_data",
                "LAB_080047d8_1": "label_1"
            },
            "calling": [],
            "called": [
                "FUN_0800417c",
                "FUN_08005650",
                "FUN_080045fe",
                "FUN_08004618",
                "FUN_08004198",
                "FUN_0800258c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047e8": {
            "entrypoint": "0x080047e8",
            "current_name": "combine_bytes_080047e8",
            "code": "\nbyte combineBytes_080047e8(int baseAddress)\n\n{\n  return *(byte *)(baseAddress + 0x3a) | *(byte *)(baseAddress + 0x39);\n}\n\n",
            "renaming": {
                "FUN_080047e8": "combine_bytes_080047e8",
                "param_1": "baseAddress"
            },
            "calling": [
                "FUN_0800548c",
                "FUN_080054b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047f4": {
            "entrypoint": "0x080047f4",
            "current_name": "get_bit_value_080047f4",
            "code": "\nuint get_bit_value_080047f4(uint value,int address)\n\n{\n  return *(uint *)(address + ((value << 0x18) >> 0x1c) * 4) >> (value & 0xf) & 1;\n}\n\n",
            "renaming": {
                "FUN_080047f4": "get_bit_value_080047f4",
                "param_1": "value",
                "param_2": "address"
            },
            "calling": [
                "FUN_08005848",
                "FUN_080057b4",
                "FUN_08005890"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800480a": {
            "entrypoint": "0x0800480a",
            "current_name": "update_bit_value_0800480a",
            "code": "\nvoid updateBitValue_0800480a(uint inputValue,int arrayBaseAddress)\n\n{\n  uint shiftedValue;\n  \n  shiftedValue = (inputValue << 0x18) >> 0x1c;\n  *(uint *)(arrayBaseAddress + shiftedValue * 4) = *(uint *)(arrayBaseAddress + shiftedValue * 4) | 1 << (inputValue & 0xf);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800480a": "update_bit_value_0800480a",
                "param_1": "inputValue",
                "param_2": "arrayBaseAddress",
                "uVar1": "shiftedValue"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004828": {
            "entrypoint": "0x08004828",
            "current_name": "update_bit_in_array_by_index_08004828",
            "code": "\nvoid updateBitInArrayByIndex_08004828(uint value,int array)\n\n{\n  uint index;\n  \n  index = (value << 0x18) >> 0x1c;\n  *(uint *)(array + index * 4) = *(uint *)(array + index * 4) & ~(1 << (value & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004828": "update_bit_in_array_by_index_08004828",
                "param_1": "value",
                "param_2": "array",
                "uVar1": "index"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004848": {
            "entrypoint": "0x08004848",
            "current_name": "get_address_by_param_08004848",
            "code": "\nundefined4 getAddressByParam_08004848(undefined4 param)\n\n{\n  switch(param) {\n  case 0:\n    return 0x40010800;\n  case 1:\n    return 0x40010c00;\n  case 2:\n    return 0x40011000;\n  case 3:\n    return 0x40011400;\n  case 4:\n    return 0x40011800;\n  default:\n    return 0;\n  }\n}\n\n",
            "renaming": {
                "FUN_08004848": "get_address_by_param_08004848",
                "param_1": "param"
            },
            "calling": [
                "FUN_08005848",
                "FUN_08005890"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004884": {
            "entrypoint": "0x08004884",
            "current_name": "set_memory_value_08004884",
            "code": "\n\n\nundefined4 setMemoryValue_08004884(undefined4 value)\n\n{\n  undefined4 returnValue;\n  \n  switch(value) {\n  case 0:\n    _DAT_40021018 = _DAT_40021018 | 4;\n    returnValue = 0x40010800;\n    break;\n  case 1:\n    _DAT_40021018 = _DAT_40021018 | 8;\n    returnValue = 0x40010c00;\n    break;\n  case 2:\n    _DAT_40021018 = _DAT_40021018 | 0x10;\n    returnValue = 0x40011000;\n    break;\n  case 3:\n    _DAT_40021018 = _DAT_40021018 | 0x20;\n    returnValue = 0x40011400;\n    break;\n  case 4:\n    _DAT_40021018 = _DAT_40021018 | 0x40;\n    returnValue = 0x40011800;\n    break;\n  default:\n    returnValue = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08004884": "set_memory_value_08004884",
                "param_1": "value",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08004f4c",
                "FUN_08004974",
                "FUN_08004bb0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800492c": {
            "entrypoint": "0x0800492c",
            "current_name": "calculate_and_limit_value_0800492c",
            "code": "\nuint calculateAndLimitValue_0800492c(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  int result;\n  uint shiftedValue;\n  \n  result = get_value_08004cce(input1,&DAT_08007400,input3,input4,input4);\n  shiftedValue = (uint)(result << 0xc) >> 0x1b;\n  if (0x10 < shiftedValue - 1) {\n    shiftedValue = 0;\n  }\n  return shiftedValue;\n}\n\n",
            "renaming": {
                "FUN_0800492c": "calculate_and_limit_value_0800492c",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "result",
                "uVar2": "shiftedValue"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08004cce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004948": {
            "entrypoint": "0x08004948",
            "current_name": "get_result_code_08004948",
            "code": "\nundefined4 get_result_code_08004948(undefined4 input_value,undefined4 parameter_2,undefined4 parameter_3,undefined4 parameter_4)\n\n{\n  int result;\n  uint shifted_result;\n  \n  result = get_value_08004cce(input_value,&DAT_080074b4,parameter_3,parameter_4,parameter_4);\n  shifted_result = (uint)(result << 0xc) >> 0x1b;\n  if (shifted_result == 3) {\n    return 8;\n  }\n  if (shifted_result != 4) {\n    if (shifted_result != 2) {\n      return 0;\n    }\n    return 4;\n  }\n  return 0xc;\n}\n\n",
            "renaming": {
                "FUN_08004948": "get_result_code_08004948",
                "param_1": "input_value",
                "param_2": "parameter_2",
                "param_3": "parameter_3",
                "param_4": "parameter_4",
                "iVar1": "result",
                "uVar2": "shifted_result"
            },
            "calling": [
                "FUN_08004b3c"
            ],
            "called": [
                "FUN_08004cce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004974": {
            "entrypoint": "0x08004974",
            "current_name": "update_memory_and_flags_08004974",
            "code": "\n\n\nvoid updateMemoryAndFlags_08004974(int *memoryPointer,undefined4 valueToUpdate)\n\n{\n  undefined4 updatedMemoryValue;\n  uint dataFlag;\n  int memoryValue;\n  uint flagMask;\n  undefined4 register1;\n  undefined4 register2;\n  \n  memoryValue = *memoryPointer;\n  if (memoryValue == 0x40012400) {\n    dataFlag = _DAT_40021018 | 0x200;\n    memoryValue = 0x200;\n    _DAT_40021018 = dataFlag;\n  }\n  else {\n    dataFlag = 0x40012800;\n    if (memoryValue == 0x40012800) {\n      dataFlag = _DAT_40021018 | 0x400;\n      memoryValue = 0x400;\n      _DAT_40021018 = dataFlag;\n    }\n  }\n  updatedMemoryValue = set_memory_value_08004884((uint)((int)(char)DAT_20000080 << 0x18) >> 0x1c,valueToUpdate,dataFlag,memoryValue);\n  flagMask = 1 << (DAT_20000080 & 0xf) & 0xffff;\n  register1 = 3;\n  register2 = 0;\n  update_flags_and_registers_08002624(updatedMemoryValue,&flagMask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004974": "update_memory_and_flags_08004974",
                "param_1": "memoryPointer",
                "param_2": "valueToUpdate",
                "uVar1": "updatedMemoryValue",
                "uVar2": "dataFlag",
                "iVar3": "memoryValue",
                "local_18": "flagMask",
                "local_14": "register1",
                "local_10": "register2"
            },
            "calling": [
                "FUN_0800213c"
            ],
            "called": [
                "FUN_08002624",
                "FUN_08004884"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080049f0": {
            "entrypoint": "0x080049f0",
            "current_name": "update_configuration_080049f0",
            "code": "\n\n\nvoid updateConfiguration_080049f0(int *configPtr)\n\n{\n  if (*configPtr != 0x40012400) {\n    if (*configPtr == 0x40012800) {\n      _DAT_4002100c = _DAT_4002100c & 0xfffffbff;\n      _DAT_40021018 = _DAT_40021018 & 0xfffffbff;\n    }\n    return;\n  }\n  _DAT_4002100c = _DAT_4002100c & 0xfffffdff;\n  _DAT_40021018 = _DAT_40021018 & 0xfffffdff;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080049f0": "update_configuration_080049f0",
                "param_1": "configPtr"
            },
            "calling": [
                "FUN_0800224c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a4c": {
            "entrypoint": "0x08004a4c",
            "current_name": "check_param_and_process_08004a4c",
            "code": "\nundefined2 check_param_and_process_08004a4c(undefined4 input_param)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined2 result;\n  uint value;\n  undefined4 flag1;\n  undefined4 flag2;\n  int param_status;\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  undefined4 temp4;\n  undefined4 temp5;\n  undefined4 temp6;\n  undefined4 temp7;\n  undefined4 temp8;\n  \n  fill_array_with_zeros(&param_status,0,0x30);\n  value = 0;\n  flag1 = 0;\n  flag2 = 0;\n  result = 0;\n  param_status = check_valid_input(input_param,&DAT_08007400);\n  if (param_status == 0) {\n    result = 0;\n  }\n  else {\n    temp1 = 0;\n    temp2 = 0;\n    temp3 = 0;\n    temp5 = 0;\n    temp7 = 0xe0000;\n    temp8 = 0;\n    temp4 = 1;\n    temp6 = 0;\n    DAT_20000080 = (undefined)input_param;\n    iVar1 = update_flags_and_memory(&param_status);\n    if (iVar1 == 0) {\n      value = calculate_limited_value(input_param);\n      if (value < 0x12) {\n        flag1 = 1;\n        flag2 = 2;\n        iVar1 = update_registers(&param_status,&value);\n        if (iVar1 == 0) {\n          iVar1 = perform_resource_check(&param_status);\n          if (iVar1 == 0) {\n            iVar1 = process_param(&param_status);\n            if (iVar1 == 0) {\n              iVar1 = check_and_calculate_resource_value(&param_status,10);\n              if (iVar1 == 0) {\n                uVar2 = get_offset_value(&param_status);\n                if ((uVar2 & 0x200) != 0) {\n                  result = get_offset_value2(&param_status);\n                }\n                iVar1 = check_and_update_flags(&param_status);\n                if (iVar1 == 0) {\n                  iVar1 = update_something(&param_status);\n                  if (iVar1 != 0) {\n                    result = 0;\n                  }\n                }\n                else {\n                  result = 0;\n                }\n              }\n              else {\n                result = 0;\n              }\n            }\n            else {\n              result = 0;\n            }\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        result = 0;\n      }\n    }\n    else {\n      result = 0;\n    }\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08004a4c": "check_param_and_process_08004a4c",
                "param_1": "input_param",
                "local_46": "result",
                "local_44": "value",
                "local_40": "flag1",
                "local_3c": "flag2",
                "local_38": "param_status",
                "local_34": "temp1",
                "local_30": "temp2",
                "local_2c": "temp3",
                "local_28": "temp4",
                "local_24": "temp5",
                "local_20": "temp6",
                "local_1c": "temp7",
                "local_10": "temp8",
                "fill_array_with_080061e0": "fill_array_with_zeros",
                "check_valid_param_08004c78": "check_valid_input",
                "update_flags_and_memory_0800213c": "update_flags_and_memory",
                "calculate_and_limit_value_0800492c": "calculate_limited_value",
                "update_registers_08001e48": "update_registers",
                "perform_resource_check_08002384": "perform_resource_check",
                "process_param_08002004": "process_param",
                "check_and_calculate_resource_value_08001cd0": "check_and_calculate_resource_value",
                "get_offset_value_08001f80": "get_offset_value",
                "get_offset_value_08001e40": "get_offset_value2",
                "check_and_update_flags_08002348": "check_and_update_flags",
                "update_something_0800224c": "update_something"
            },
            "calling": [
                "FUN_08005754"
            ],
            "called": [
                "FUN_08004c78",
                "FUN_08001e40",
                "FUN_08001e48",
                "FUN_0800213c",
                "FUN_080061e0",
                "FUN_08002004",
                "FUN_08002348",
                "FUN_08001cd0",
                "FUN_0800224c",
                "FUN_0800492c",
                "FUN_08002384",
                "FUN_08001f80"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b34": {
            "entrypoint": "0x08004b34",
            "current_name": "initialize_memory_protection_08004b34",
            "code": "\nvoid initialize_memory_protection_08004b34(void)\n\n{\n  update_memory_protection();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b34": "initialize_memory_protection_08004b34",
                "update_memory_protection_08004d90": "update_memory_protection"
            },
            "calling": [
                "FUN_08003ed8"
            ],
            "called": [
                "FUN_08004d90"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b3c": {
            "entrypoint": "0x08004b3c",
            "current_name": "process_valid_input_08004b3c",
            "code": "\nvoid processValidInput_08004b3c(undefined4 input)\n\n{\n  int resultCode;\n  uint value;\n  int resultArray [17];\n  \n  resultArray[0] = checkValidParam(input,&DAT_080074b4);\n  if ((resultArray[0] != 0) &&\n     ((((resultCode = getResultCode(input), resultCode == 0 || (resultCode == 4)) || (resultCode == 8)) ||\n      ((resultCode == 0xc || (resultCode == 0x18)))))) {\n    value = getValue(input,&DAT_080074b4);\n    if ((value & 0x100000) == 0) {\n      updateBitValues(resultArray,resultCode);\n    }\n    else {\n      updateValue(resultArray,resultCode);\n    }\n    initializeAndProtectMemory(resultArray);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b3c": "process_valid_input_08004b3c",
                "param_1": "input",
                "local_50": "resultArray",
                "iVar1": "resultCode",
                "uVar2": "value",
                "check_valid_param_08004c78": "checkValidParam",
                "get_result_code_08004948": "getResultCode",
                "get_value_08004cce": "getValue",
                "update_bit_values_080040b0": "updateBitValues",
                "update_value_0800412c": "updateValue",
                "initialize_and_protect_memory_08003ed8": "initializeAndProtectMemory"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [
                "FUN_08004c78",
                "FUN_08003ed8",
                "FUN_0800412c",
                "FUN_08004948",
                "FUN_080040b0",
                "FUN_08004cce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b94": {
            "entrypoint": "0x08004b94",
            "current_name": "initialize_global_variable_08004b94",
            "code": "\nvoid initializeGlobalVariable_08004b94(void)\n\n{\n  fetchGlobalVariable();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b94": "initialize_global_variable_08004b94",
                "get_global_variable_08001cc4": "fetchGlobalVariable"
            },
            "calling": [
                "FUN_080058e0"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b9c": {
            "entrypoint": "0x08004b9c",
            "current_name": "FUNC_08004b9c",
            "code": "\nvoid FUNC_08004b9c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b9c": "FUNC_08004b9c"
            },
            "calling": [
                "FUN_08004b9e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004b9e": {
            "entrypoint": "0x08004b9e",
            "current_name": "execute_main_function_08004b9e",
            "code": "\nvoid execute_main_function_08004b9e(void)\n\n{\n  update_sum();\n  execute_subfunction();\n  FUNC_08004b9c();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b9e": "execute_main_function_08004b9e",
                "update_sum_08001cac": "update_sum",
                "execute_function_08002582": "execute_subfunction"
            },
            "calling": [],
            "called": [
                "FUN_08001cac",
                "FUN_08002582",
                "FUN_08004b9c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004bb0": {
            "entrypoint": "0x08004bb0",
            "current_name": "update_flags_and_registers_08004bb0",
            "code": "\n\n\nvoid update_flags_and_registers_08004bb0(uint input_value,undefined4 param_2,undefined4 param_3)\n\n{\n  undefined4 memory_value;\n  uint bitmask;\n  undefined4 local_param_2;\n  undefined4 local_param_3;\n  undefined4 local_variable;\n  \n  memory_value = set_memory_value_08004884((input_value << 0x18) >> 0x1c);\n  bitmask = 1 << (input_value & 0xf) & 0xffff;\n  local_variable = 3;\n  _DAT_40021018 = _DAT_40021018 | 1;\n  if ((input_value - 0xd & 0xff) < 2) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n  }\n  if (((input_value == 0xf) || (input_value == 0x13)) || (input_value == 0x14)) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n  }\n  local_param_2 = param_2;\n  local_param_3 = param_3;\n  update_flags_and_registers_08004bb0_08002624(memory_value,&bitmask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004bb0": "update_flags_and_registers_08004bb0",
                "param_1": "input_value",
                "uVar1": "memory_value",
                "local_20": "bitmask",
                "local_1c": "local_param_2",
                "local_18": "local_param_3",
                "local_14": "local_variable"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [
                "FUN_08002624",
                "FUN_08004884"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c30": {
            "entrypoint": "0x08004c30",
            "current_name": "update_value_based_on_condition_08004c30",
            "code": "\nvoid update_value_based_on_condition_08004c30(undefined4 input_1,undefined2 input_2,int condition,undefined4 value)\n\n{\n  if (condition == 0) {\n    update_value(input_1,input_2,0,value,value);\n    return;\n  }\n  update_value(input_1,input_2,1,value,value);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c30": "update_value_based_on_condition_08004c30",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "condition",
                "param_4": "value",
                "update_value_0800281e": "update_value"
            },
            "calling": [
                "FUN_08005848"
            ],
            "called": [
                "FUN_0800281e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c48": {
            "entrypoint": "0x08004c48",
            "current_name": "check_and_update_bit_08004c48",
            "code": "\nvoid check_and_update_bit_08004c48(undefined4 input_value,undefined2 input_flag,undefined4 data_ptr1,undefined4 data_ptr2)\n\n{\n  check_bit_08002810(input_value,input_flag,data_ptr1,data_ptr2,data_ptr2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c48": "check_and_update_bit_08004c48",
                "param_1": "input_value",
                "param_2": "input_flag",
                "param_3": "data_ptr1",
                "param_4": "data_ptr2"
            },
            "calling": [
                "FUN_08005890"
            ],
            "called": [
                "FUN_08002810"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c52": {
            "entrypoint": "0x08004c52",
            "current_name": "initialize_hardware_and_update_flag_08004c52",
            "code": "\nvoid initialize_hardware_and_update_flag_08004c52(void)\n\n{\n  initialize_and_update_flag();\n  initialize_hardware();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c52": "initialize_hardware_and_update_flag_08004c52",
                "initialize_and_update_flag_08001c88": "initialize_and_update_flag",
                "initialize_hardware_08001b48": "initialize_hardware"
            },
            "calling": [
                "FUN_08001c32"
            ],
            "called": [
                "FUN_08001b48",
                "FUN_08001c88"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c5e": {
            "entrypoint": "0x08004c5e",
            "current_name": "find_value_index_08004c5e",
            "code": "\nundefined4 find_value_index_08004c5e(int value,char *value_array)\n\n{\n  while( true ) {\n    if (*value_array == -1) {\n      return 0;\n    }\n    if (*value_array == value) break;\n    value_array = value_array + 0xc;\n  }\n  return *(undefined4 *)(value_array + 4);\n}\n\n",
            "renaming": {
                "FUN_08004c5e": "find_value_index_08004c5e",
                "param_1": "value",
                "param_2": "value_array"
            },
            "calling": [
                "FUN_08004c78",
                "FUN_08004c5e"
            ],
            "called": [
                "FUN_08004c5e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c78": {
            "entrypoint": "0x08004c78",
            "current_name": "check_valid_param_08004c78",
            "code": "\nundefined4 check_valid_param_08004c78(int input_value)\n\n{\n  undefined4 value_index;\n  \n  if (input_value != -1) {\n    value_index = find_value_index_08004c5e();\n    return value_index;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004c78": "check_valid_param_08004c78",
                "param_1": "input_value",
                "uVar1": "value_index"
            },
            "calling": [
                "FUN_08005384",
                "FUN_08004f4c",
                "FUN_080053d4",
                "FUN_08004a4c",
                "FUN_08004b3c"
            ],
            "called": [
                "FUN_08004c5e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c8a": {
            "entrypoint": "0x08004c8a",
            "current_name": "find_value_index_08004c8a",
            "code": "\nint find_value_index_08004c8a(int value_to_find,char *values_list)\n\n{\n  while( true ) {\n    if (*(int *)(values_list + 4) == 0) {\n      return -1;\n    }\n    if (*(int *)(values_list + 4) == value_to_find) break;\n    values_list = values_list + 0xc;\n  }\n  return (int)*values_list;\n}\n\n",
            "renaming": {
                "FUN_08004c8a": "find_value_index_08004c8a",
                "param_1": "value_to_find",
                "param_2": "values_list"
            },
            "calling": [
                "FUN_08004ca2",
                "FUN_08004c8a"
            ],
            "called": [
                "FUN_08004c8a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ca2": {
            "entrypoint": "0x08004ca2",
            "current_name": "find_value_index_08004ca2",
            "code": "\nundefined4 findValueIndex_08004ca2(int value)\n\n{\n  undefined4 index;\n  \n  if (value != 0) {\n    index = find_value_index_08004c8a();\n    return index;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08004ca2": "find_value_index_08004ca2",
                "param_1": "value",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08005384",
                "FUN_08005b54"
            ],
            "called": [
                "FUN_08004c8a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004cb2": {
            "entrypoint": "0x08004cb2",
            "current_name": "find_value_08004cb2",
            "code": "\nundefined4 find_value_08004cb2(int value,char *array)\n\n{\n  while( true ) {\n    if (*array == -1) {\n      result 0xffffffff;\n    }\n    if (*array == value) break;\n    array = array + 0xc;\n  }\n  result *(undefined4 *)(array + 8);\n}\n\n",
            "renaming": {
                "FUN_08004cb2": "find_value_08004cb2",
                "param_1": "value",
                "param_2": "array",
                "return": "result"
            },
            "calling": [
                "FUN_08004cb2",
                "FUN_08004cce"
            ],
            "called": [
                "FUN_08004cb2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004cce": {
            "entrypoint": "0x08004cce",
            "current_name": "get_value_08004cce",
            "code": "\nundefined4 get_value_08004cce(int input)\n\n{\n  undefined4 result;\n  \n  if (input == -1) {\n    return 0xffffffff;\n  }\n  result = find_value_08004cb2();\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08004cce": "get_value_08004cce",
                "param_1": "input",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08004948",
                "FUN_08004f4c",
                "FUN_0800492c",
                "FUN_08004b3c"
            ],
            "called": [
                "FUN_08004cb2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ce2": {
            "entrypoint": "0x08004ce2",
            "current_name": "find_value_in_array_08004ce2",
            "code": "\nundefined4 find_value_in_array_08004ce2(int target_value,char *array)\n\n{\n  if (target_value == -1) {\n    return 0;\n  }\n  while( true ) {\n    if (*array == -1) {\n      return 0;\n    }\n    if (target_value == *array) break;\n    array = array + 0xc;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08004ce2": "find_value_in_array_08004ce2",
                "param_1": "target_value",
                "param_2": "array"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d06": {
            "entrypoint": "0x08004d06",
            "current_name": "compare_and_return_zero_08004d06",
            "code": "\nint compareAndReturnZero_08004d06(int value1,int value2)\n\n{\n  if (value1 != value2) {\n    if (value1 == 0) {\n      return value2;\n    }\n    if (value2 == 0) {\n      return value1;\n    }\n    value1 = 0;\n  }\n  return value1;\n}\n\n",
            "renaming": {
                "FUN_08004d06": "compare_and_return_zero_08004d06",
                "param_1": "value1",
                "param_2": "value2"
            },
            "calling": [
                "FUN_08004f4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d18": {
            "entrypoint": "0x08004d18",
            "current_name": "execute_callback_08004d18",
            "code": "\nvoid execute_callback_08004d18(void)\n\n{\n  if (DAT_20000260 != (code *)0x0) {\n    (*DAT_20000260)(DAT_20000278);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d18": "execute_callback_08004d18"
            },
            "calling": [
                "FUN_08003ea0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d40": {
            "entrypoint": "0x08004d40",
            "current_name": "infinite_loop_08004d40",
            "code": "\nvoid infiniteLoop_08004d40(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08004d40": "infinite_loop_08004d40"
            },
            "calling": [
                "FUN_08004d40",
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08004d40"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d44": {
            "entrypoint": "0x08004d44",
            "current_name": "initialize_memory_08004d44",
            "code": "\n\n\nvoid initializeMemory_08004d44(void)\n\n{\n  _DAT_40021000 = _DAT_40021000 & 0xfef2ffff | 1;\n  _DAT_40021004 = _DAT_40021004 & 0xf8800000;\n  _DAT_40021008 = 0x9f0000;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d44": "initialize_memory_08004d44"
            },
            "calling": [
                "entry"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d90": {
            "entrypoint": "0x08004d90",
            "current_name": "update_memory_protection_08004d90",
            "code": "\n\n\nvoid updateMemoryProtection_08004d90(int *memoryAddress)\n\n{\n  if (*memoryAddress == 0x40012c00) {\n    _DAT_40021018 = _DAT_40021018 & 0xfffff7ff;\n  }\n  if (*memoryAddress == 0x40000000) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffe;\n  }\n  if (*memoryAddress == 0x40000400) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffd;\n  }\n  if (*memoryAddress == 0x40000800) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffb;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d90": "update_memory_protection_08004d90",
                "param_1": "memoryAddress"
            },
            "calling": [
                "FUN_08004b34"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004df4": {
            "entrypoint": "0x08004df4",
            "current_name": "subtract_four_08004df4",
            "code": "\nint subtract_four_08004df4(int number)\n\n{\n  return number + -4;\n}\n\n",
            "renaming": {
                "FUN_08004df4": "subtract_four_08004df4",
                "param_1": "number"
            },
            "calling": [
                "FUN_08004e12",
                "FUN_08004df8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004df8": {
            "entrypoint": "0x08004df8",
            "current_name": "execute_callback_if_condition_met_08004df8",
            "code": "\nvoid executeCallbackIfConditionMet_08004df8(int callbackParam)\n\n{\n  int result;\n  \n  result = getFunctionAddress();\n  if ((*(code **)(result + 0x4c) != (code *)0x0) && (*(char *)(callbackParam + 0x1c) == '\\x01')) {\n    (**(code **)(result + 0x4c))(result,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004df8": "execute_callback_if_condition_met_08004df8",
                "param_1": "callbackParam",
                "iVar1": "result",
                "subtract_four_08004df4": "getFunctionAddress"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [
                "FUN_08004df4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e12": {
            "entrypoint": "0x08004e12",
            "current_name": "execute_subtracted_function_08004e12",
            "code": "\nvoid executeSubtractedFunction_08004e12(void)\n\n{\n  int subtractedResult;\n  \n  subtractedResult = subtractFour();\n  if (*(code **)(subtractedResult + 0x48) != (code *)0x0) {\n    (**(code **)(subtractedResult + 0x48))();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004e12": "execute_subtracted_function_08004e12",
                "iVar1": "subtractedResult",
                "subtract_four_08004df4": "subtractFour"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [
                "FUN_08004df4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e20": {
            "entrypoint": "0x08004e20",
            "current_name": "check_and_call_main_function_08004e20",
            "code": "\nvoid checkAndCallMainFunction_08004e20(void)\n\n{\n  if (DAT_2000027c != 0) {\n    mainFunction();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004e20": "check_and_call_main_function_08004e20",
                "main_function_08003f18": "mainFunction"
            },
            "calling": [],
            "called": [
                "FUN_08003f18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e70": {
            "entrypoint": "0x08004e70",
            "current_name": "subtract_four_08004e70",
            "code": "\nint subtract_four_08004e70(int original_value)\n\n{\n  return original_value + -4;\n}\n\n",
            "renaming": {
                "FUN_08004e70": "subtract_four_08004e70",
                "param_1": "original_value"
            },
            "calling": [
                "FUN_08004ec4",
                "FUN_08004e74",
                "FUN_08004ef4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e74": {
            "entrypoint": "0x08004e74",
            "current_name": "process_params_08004e74",
            "code": "\nvoid processParams_08004e74(int inputParam1,int inputParam2,int inputParam3,undefined4 inputParam4)\n\n{\n  int resultVar;\n  \n  resultVar = subtractFour();\n  if (inputParam3 == *(int *)(inputParam1 + 0xc)) {\n    if (inputParam2 == 0) {\n      *(undefined *)(resultVar + 0x88) = 0;\n      *(undefined *)(resultVar + 0x5c) = 0;\n      if (*(functionPointer **)(resultVar + 100) != (functionPointer *)0x0) {\n        (**(functionPointer **)(resultVar + 100))();\n      }\n      processParams_08004e74Helper(inputParam1,resultVar + 0x68,*(undefined *)(resultVar + 0x88),8);\n      return;\n    }\n    *(undefined *)(resultVar + 0x5c) = 1;\n    initializeData(inputParam1,resultVar + 0x68,0x20,8,inputParam4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004e74": "process_params_08004e74",
                "param_1": "inputParam1",
                "param_2": "inputParam2",
                "param_3": "inputParam3",
                "param_4": "inputParam4",
                "iVar1": "resultVar",
                "subtract_four_08004e70": "subtractFour",
                "code": "functionPointer",
                "process_params_08002af8": "processParamsHelper",
                "initialize_data_08002b84": "initializeData"
            },
            "calling": [
                "FUN_08002cf2"
            ],
            "called": [
                "FUN_08004e70",
                "FUN_08002b84",
                "FUN_08002af8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ec4": {
            "entrypoint": "0x08004ec4",
            "current_name": "initialize_data_and_call_function_08004ec4",
            "code": "\nvoid initialize_data_and_call_function_08004ec4(undefined4 param)\n\n{\n  int result;\n  \n  result = subtract_four();\n  if (((*(code **)(result + 0x60) != (code *)0x0) && (*(char *)(result + 0x5c) == '\\x01')) &&\n     (*(char *)(result + 0x2c) != ' ')) {\n    (**(code **)(result + 0x60))(result + 0x68);\n  }\n  initialize_data(param);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004ec4": "initialize_data_and_call_function_08004ec4",
                "param_1": "param",
                "iVar1": "result",
                "subtract_four_08004e70": "subtract_four",
                "initialize_data_08002c10": "initialize_data"
            },
            "calling": [
                "FUN_0800316c",
                "FUN_08002d1c",
                "FUN_080032b4"
            ],
            "called": [
                "FUN_08004e70",
                "FUN_08002c10"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ef4": {
            "entrypoint": "0x08004ef4",
            "current_name": "initialize_if_not_initialized_08004ef4",
            "code": "\nvoid initialize_if_not_initialized_08004ef4(undefined4 data)\n\n{\n  int result;\n  \n  result = subtract_four_08004e70();\n  if (*(char *)(result + 0x5d) == '\\0') {\n    initialize_data_08002c10(data);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004ef4": "initialize_if_not_initialized_08004ef4",
                "param_1": "data",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800316c"
            ],
            "called": [
                "FUN_08004e70",
                "FUN_08002c10"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004f4c": {
            "entrypoint": "0x08004f4c",
            "current_name": "initialize_uart_08004f4c",
            "code": "\n\n\nvoid initializeUART_08004f4c(int *uartPins)\n\n{\n  int uartPin1Valid;\n  int uartPin2Valid;\n  undefined4 memoryValue1;\n  uint value1;\n  uint bitmask1;\n  uint combinedValue1;\n  uint shiftedValue1;\n  undefined4 tempValue;\n  \n  if (uartPins != (int *)0x0) {\n    uartPin1Valid = check_valid_param_08004c78((int)*(char *)(uartPins + 0x16),&DAT_0800764c);\n    uartPin2Valid = check_valid_param_08004c78((int)*(char *)((int)uartPins + 0x59),&DAT_08007604);\n    if ((uartPin2Valid == 0) || (uartPin1Valid == 0)) {\n      initialize_and_process_data_080068f0(\"ERROR: at least one UART pin has no peripheral\\n\",uartPin2Valid);\n    }\n    else {\n      uartPin1Valid = compare_and_return_zero_08004d06(uartPin1Valid);\n      *uartPins = uartPin1Valid;\n      if (uartPin1Valid == 0) {\n        initialize_and_process_data_080068f0(\"ERROR: U(S)ART pins mismatch\\n\");\n      }\n      else {\n        if (uartPin1Valid == 0x40013800) {\n          _DAT_4002100c = _DAT_4002100c & 0xffffbfff;\n          _DAT_40021018 = _DAT_40021018 | 0x4000;\n          *(undefined *)(uartPins + 0x11) = 0;\n          *(undefined *)((int)uartPins + 0x5a) = 0x25;\n        }\n        else if (uartPin1Valid == 0x40004400) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffdffff;\n          _DAT_4002101c = _DAT_4002101c | 0x20000;\n          *(undefined *)(uartPins + 0x11) = 1;\n          *(undefined *)((int)uartPins + 0x5a) = 0x26;\n        }\n        else if (uartPin1Valid == 0x40004800) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffbffff;\n          _DAT_4002101c = _DAT_4002101c | 0x40000;\n          *(undefined *)(uartPins + 0x11) = 2;\n          *(undefined *)((int)uartPins + 0x5a) = 0x27;\n        }\n        memoryValue1 = setMemoryValue((uint)((int)*(char *)((int)uartPins + 0x59) << 0x18) >> 0x1c);\n        value1 = getValue((int)*(char *)((int)uartPins + 0x59),&DAT_08007604);\n        bitmask1 = 1 << (*(byte *)((int)uartPins + 0x59) & 0xf) & 0xffff;\n        combinedValue1 = (value1 >> 3 & 1) << 4 | value1 & 7;\n        shiftedValue1 = (value1 << 0x1a) >> 0x1e;\n        _DAT_40021018 = _DAT_40021018 | 1;\n        switch((value1 << 0x11) >> 0x19) {\n        case 1:\n          _DAT_40010004 = _DAT_40010004 | 0x7000001;\n          break;\n        case 2:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          break;\n        case 3:\n          _DAT_40010004 = _DAT_40010004 | 0x7000002;\n          break;\n        case 4:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          break;\n        case 5:\n          _DAT_40010004 = _DAT_40010004 | 0x7000004;\n          break;\n        case 6:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          break;\n        case 7:\n          _DAT_40010004 = _DAT_40010004 | 0x7000008;\n          break;\n        case 8:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          break;\n        case 9:\n          _DAT_40010004 = _DAT_40010004 | 0x7000030;\n          break;\n        case 10:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          break;\n        case 0xb:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          break;\n        case 0xc:\n          _DAT_40010004 = _DAT_40010004 | 0x70000c0;\n          break;\n        case 0xd:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          break;\n        case 0xe:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          break;\n        case 0xf:\n          _DAT_40010004 = _DAT_40010004 | 0x7000300;\n          break;\n        case 0x10:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          break;\n        case 0x11:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          break;\n        case 0x12:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          break;\n        case 0x13:\n          _DAT_40010004 = _DAT_40010004 | 0x7000c00;\n          break;\n        case 0x14:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          break;\n        case 0x15:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          break;\n        case 0x16:\n          _DAT_40010004 = _DAT_40010004 | 0x7001000;\n          break;\n        case 0x17:\n          _DAT_40010004 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          break;\n        case 0x1b:\n          _DAT_40010004 = _DAT_40010004 | 0x7008000;\n          break;\n        case 0x1c:\n          _DAT_40010004 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          break;\n        case 0x21:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff;\n          break;\n        case 0x22:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          break;\n        case 0x23:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          break;\n        case 0x24:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n        }\n        tempValue = 3;\n        update_flags_and_registers_08002624(memoryValue1,&bitmask1);\n        memoryValue1 = setMemoryValue((uint)((int)*(char *)(uartPins + 0x16) << 0x18) >> 0x1c);\n        value1 = getValue((int)*(char *)(uartPins + 0x16),&DAT_0800764c);\n        bitmask1 = 1 << (*(byte *)(uartPins + 0x16) & 0xf) & 0xffff;\n        combinedValue1 = (value1 >> 3 & 1) << 4 | value1 & 7;\n        shiftedValue1 = (value1 << 0x1a) >> 0x1e;\n        update_flags_and_registers_08002624(memoryValue1,&bitmask1);\n        (&DAT_2000032c)[*(byte *)(uartPins + 0x11)] = uartPins + 1;\n        data1 = *uartPins;\n        data2 = uartPins[0x12];\n        data3 = uartPins[0x13];\n        data4 = uartPins[0x14];\n        data5 = uartPins[0x15];\n        data6 = 0xc;\n        data7 = 0;\n        data8 = 0;\n        process_data_0800441a(uartPins + 1);\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004f4c": "initialize_uart_08004f4c",
                "param_1": "uartPins",
                "iVar1": "uartPin1Valid",
                "iVar2": "uartPin2Valid",
                "uVar3": "memoryValue1",
                "uVar4": "value1",
                "local_20": "bitmask1",
                "local_1c": "combinedValue1",
                "local_18": "shiftedValue1",
                "local_14": "tempValue",
                "set_memory_value_08004884": "setMemoryValue",
                "get_value_08004cce": "getValue",
                "param_1[1]": "data1",
                "param_1[2]": "data2",
                "param_1[3]": "data3",
                "param_1[4]": "data4",
                "param_1[5]": "data5",
                "param_1[6]": "data6",
                "param_1[7]": "data7",
                "param_1[8]": "data8"
            },
            "calling": [
                "FUN_08005a68",
                "FUN_08005384"
            ],
            "called": [
                "FUN_080068f0",
                "FUN_08004c78",
                "FUN_0800441a",
                "FUN_08004d06",
                "FUN_08004cce",
                "FUN_08002624",
                "FUN_08004884"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005384": {
            "entrypoint": "0x08005384",
            "current_name": "initialize_uart_08005384",
            "code": "\nvoid initializeUart_08005384(void)\n\n{\n  int iVar1;\n  undefined4 validParamResult;\n  \n  iVar1 = checkValidParam(2,&DAT_0800764c);\n  if (iVar1 != 0) {\n    validParamResult = checkValidParam(2,&DAT_0800764c);\n    DAT_200000e1 = find_value_index_08004ca2(validParamResult,&DAT_08007604);\n    DAT_200000e0 = 2;\n    DAT_200000d0 = 0x2580;\n    DAT_200000dc = 0;\n    DAT_200000d4 = 0;\n    DAT_200000d8 = 0;\n    initializeUart_08005384Func(&DAT_20000088);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005384": "initialize_uart_08005384",
                "check_valid_param_08004c78": "checkValidParam",
                "uVar2": "validParamResult",
                "initialize_uart_08004f4c": "initializeUartFunc"
            },
            "calling": [
                "FUN_080053d4"
            ],
            "called": [
                "FUN_08004c78",
                "FUN_08004ca2",
                "FUN_08004f4c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080053d4": {
            "entrypoint": "0x080053d4",
            "current_name": "process_and_check_data_080053d4",
            "code": "\nuint process_and_check_data_080053d4(undefined4 input_value,uint flags)\n\n{\n  int global_variable;\n  int valid_param_check;\n  uint index;\n  \n  global_variable = get_global_variable_08001cc4();\n  valid_param_check = check_valid_param_08004c78(2,&DAT_0800764c);\n  if (valid_param_check == 0) {\n    return 0;\n  }\n  for (index = 0;\n      (index < 5 &&\n      (((&DAT_2000032c)[index] == 0 ||\n       (valid_param_check = check_valid_param_08004c78(2,&DAT_0800764c), *(int *)(&DAT_2000032c)[index] != valid_param_check))));\n      index = index + 1 & 0xff) {\n  }\n  if (4 < index) {\n    if ((4 < DAT_200000cc) && (initialize_uart_08005384(), 4 < DAT_200000cc)) {\n      return 0;\n    }\n    index = (uint)DAT_200000cc;\n  }\n  do {\n    valid_param_check = process_data_08004478((&DAT_2000032c)[index],input_value,flags & 0xffff,1000);\n    if (valid_param_check == 0) {\n      return flags;\n    }\n    valid_param_check = get_global_variable_08001cc4();\n  } while ((uint)(valid_param_check - global_variable) < 1000);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080053d4": "process_and_check_data_080053d4",
                "param_1": "input_value",
                "param_2": "flags",
                "iVar1": "global_variable",
                "iVar2": "valid_param_check",
                "uVar3": "index"
            },
            "calling": [
                "FUN_08005730"
            ],
            "called": [
                "FUN_08004c78",
                "FUN_08005384",
                "FUN_08004478",
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800548c": {
            "entrypoint": "0x0800548c",
            "current_name": "check_combination_status_0800548c",
            "code": "\nbool checkCombinationStatus_0800548c(int inputValue)\n\n{\n  uint combinedBytes;\n  \n  combinedBytes = combine_bytes_080047e8((&DAT_2000032c)[*(byte *)(inputValue + 0x44)]);\n  return (combinedBytes & 0x22) == 0x22;\n}\n\n",
            "renaming": {
                "FUN_0800548c": "check_combination_status_0800548c",
                "param_1": "inputValue",
                "uVar1": "combinedBytes"
            },
            "calling": [
                "FUN_08005510",
                "FUN_080054d4"
            ],
            "called": [
                "FUN_080047e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080054b0": {
            "entrypoint": "0x080054b0",
            "current_name": "check_if_flag_is_valid_080054b0",
            "code": "\nbool check_if_flag_is_valid_080054b0(int flag_index)\n\n{\n  uint combined_bytes;\n  \n  combined_bytes = combine_bytes_080047e8((&DAT_2000032c)[*(byte *)(flag_index + 0x44)]);\n  return (combined_bytes & 0x21) == 0x21;\n}\n\n",
            "renaming": {
                "FUN_080054b0": "check_if_flag_is_valid_080054b0",
                "param_1": "flag_index",
                "uVar1": "combined_bytes"
            },
            "calling": [],
            "called": [
                "FUN_080047e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080054d4": {
            "entrypoint": "0x080054d4",
            "current_name": "validate_combination_080054d4",
            "code": "\nundefined4 validate_combination_080054d4(int combination_code,undefined *output,undefined4 status_1,undefined4 status_2)\n\n{\n  int combination_status;\n  \n  if (combination_code == 0) {\n    return 0xffffffff;\n  }\n  combination_status = check_combination_status_0800548c();\n  if (combination_status == 0) {\n    *output = *(undefined *)(combination_code + 0x45);\n    validate_parameters_080045a2((&DAT_2000032c)[*(byte *)(combination_code + 0x44)],combination_code + 0x45,1,&DAT_2000032c,status_2);\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080054d4": "validate_combination_080054d4",
                "param_1": "combination_code",
                "param_2": "output",
                "param_3": "status_1",
                "param_4": "status_2",
                "iVar1": "combination_status"
            },
            "calling": [
                "FUN_0800598a"
            ],
            "called": [
                "FUN_080045a2",
                "FUN_0800548c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005510": {
            "entrypoint": "0x08005510",
            "current_name": "update_combination_data_08005510",
            "code": "\nvoid updateCombinationData_08005510(int combinationData,undefined4 newValue,undefined4 unusedParam1,undefined4 unusedParam2)\n\n{\n  int combinationStatus;\n  uint combinationIndex;\n  \n  if (combinationData != 0) {\n    combinationStatus = check_combination_status_0800548c();\n    if (combinationStatus == 0) {\n      combinationIndex = (uint)*(byte *)(combinationData + 0x44);\n      *(undefined4 *)(&DAT_200002dc + combinationIndex * 4) = newValue;\n      *(int *)(&DAT_200002f0 + combinationIndex * 4) = combinationData;\n      update_data_08002494((int)*(char *)(combinationData + 0x5a),0,1,combinationIndex,unusedParam2);\n      set_bit_080024f8((int)*(char *)(combinationData + 0x5a));\n      validate_parameters_080045a2((&DAT_2000032c)[*(byte *)(combinationData + 0x44)],combinationData + 0x45,1);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005510": "update_combination_data_08005510",
                "param_1": "combinationData",
                "param_2": "newValue",
                "param_3": "unusedParam1",
                "param_4": "unusedParam2",
                "iVar1": "combinationStatus",
                "uVar2": "combinationIndex"
            },
            "calling": [
                "FUN_08005a68"
            ],
            "called": [
                "FUN_080045a2",
                "FUN_080024f8",
                "FUN_08002494",
                "FUN_0800548c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005568": {
            "entrypoint": "0x08005568",
            "current_name": "update_data_08005568",
            "code": "\nvoid updateData_08005568(int dataPtr,undefined4 newValue)\n\n{\n  byte byteValue;\n  \n  if (dataPtr != 0) {\n    byteValue = *(byte *)(dataPtr + 0x44);\n    *(undefined4 *)(&DAT_20000304 + (uint)byteValue * 4) = newValue;\n    *(int *)(&DAT_20000318 + (uint)byteValue * 4) = dataPtr;\n    update_data_08002494((int)*(char *)(dataPtr + 0x5a),0,2);\n    set_bit_080024f8((int)*(char *)(dataPtr + 0x5a));\n    check_input_validity_0800455a((&DAT_2000032c)[*(byte *)(dataPtr + 0x44)],\n                 *(int *)(dataPtr + 100) + (uint)*(ushort *)(dataPtr + 0x6a),1);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005568": "update_data_08005568",
                "param_1": "dataPtr",
                "param_2": "newValue",
                "bVar1": "byteValue"
            },
            "calling": [],
            "called": [
                "FUN_0800455a",
                "FUN_080024f8",
                "FUN_08002494"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080055bc": {
            "entrypoint": "0x080055bc",
            "current_name": "find_value_index_080055bc",
            "code": "\nuint findValueIndex_080055bc(int value)\n\n{\n  uint index;\n  \n  if (value == 0) {\n    index = 5;\n  }\n  else {\n    index = 0;\n    while( true ) {\n      if (4 < index) {\n        return index;\n      }\n      if (value == (&DAT_2000032c)[index]) break;\n      index = index + 1 & 0xff;\n    }\n  }\n  return index;\n}\n\n",
            "renaming": {
                "FUN_080055bc": "find_value_index_080055bc",
                "param_1": "value",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08005604",
                "FUN_080055e0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080055e0": {
            "entrypoint": "0x080055e0",
            "current_name": "execute_function_based_on_index_080055e0",
            "code": "\nvoid executeFunctionBasedOnIndex_080055e0(void)\n\n{\n  uint index;\n  \n  index = findValueIndex();\n  if (index < 5) {\n    (**(code **)(&DAT_200002dc + index * 4))(*(undefined4 *)(&DAT_200002f0 + index * 4));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080055e0": "execute_function_based_on_index_080055e0",
                "uVar1": "index",
                "find_value_index_080055bc": "findValueIndex"
            },
            "calling": [
                "FUN_08004618"
            ],
            "called": [
                "FUN_080055bc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005604": {
            "entrypoint": "0x08005604",
            "current_name": "process_value_08005604",
            "code": "\nvoid processValue_08005604(void)\n\n{\n  uint valueIndex;\n  int result;\n  int data;\n  \n  valueIndex = findValueIndex();\n  data = *(int *)(&DAT_20000318 + valueIndex * 4);\n  if ((valueIndex < 5) && (result = (**(code **)(&DAT_20000304 + valueIndex * 4))(data), result != -1)) {\n    checkInputValidity((&DAT_2000032c)[*(byte *)(data + 0x44)],\n                 *(int *)(data + 100) + (uint)*(ushort *)(data + 0x6a),1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005604": "process_value_08005604",
                "uVar1": "valueIndex",
                "iVar2": "result",
                "iVar3": "data",
                "find_value_index_080055bc": "findValueIndex",
                "check_input_validity_0800455a": "checkInputValidity"
            },
            "calling": [
                "FUN_080045fe"
            ],
            "called": [
                "FUN_0800455a",
                "FUN_080055bc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005650": {
            "entrypoint": "0x08005650",
            "current_name": "FUNC_08005650",
            "code": "\nvoid FUNC_08005650(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005650": "FUNC_08005650"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080056d8": {
            "entrypoint": "0x080056d8",
            "current_name": "allocate_memory_080056d8",
            "code": "\nundefined * allocate_memory_080056d8(int size)\n\n{\n  undefined *allocated_memory;\n  \n  if (DAT_20000340 == (undefined *)0x0) {\n    DAT_20000340 = &DAT_200006a8;\n  }\n  allocated_memory = DAT_20000340;\n  if (DAT_20000340 + size <= stack_end) {\n    DAT_20000340 = DAT_20000340 + size;\n    return allocated_memory;\n  }\n  DAT_200006a4 = 0xc;\n  return (undefined *)0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080056d8": "allocate_memory_080056d8",
                "param_1": "size",
                "puVar1": "allocated_memory",
                "&stack0x00000000": "stack_end"
            },
            "calling": [
                "FUN_08006920"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005714": {
            "entrypoint": "0x08005714",
            "current_name": "get_default_return_value_08005714",
            "code": "\nundefined4 get_default_return_value_08005714(void)\n\n{\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08005714": "get_default_return_value_08005714"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800571a": {
            "entrypoint": "0x0800571a",
            "current_name": "initialize_memory_segment_0800571a",
            "code": "\nundefined4 initializeMemorySegment_0800571a(undefined4 param,int memorySegmentAddress)\n\n{\n  *(undefined4 *)(memorySegmentAddress + 4) = 0x2000;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800571a": "initialize_memory_segment_0800571a",
                "param_1": "param",
                "param_2": "memorySegmentAddress"
            },
            "calling": [
                "FUN_08007004"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005724": {
            "entrypoint": "0x08005724",
            "current_name": "initialize_application_08005724",
            "code": "\nstatus initialize_application_08005724(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08005724": "initialize_application_08005724",
                "undefined4": "status"
            },
            "calling": [
                "FUN_08007028"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005728": {
            "entrypoint": "0x08005728",
            "current_name": "initialize_08005728",
            "code": "\nvoid initialize_08005728(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005728": "initialize_08005728",
                "undefined4": "void"
            },
            "calling": [
                "FUN_08007048"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800572c": {
            "entrypoint": "0x0800572c",
            "current_name": "initialize_application_0800572c",
            "code": "\nundefined4 initializeApplication_0800572c(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800572c": "initialize_application_0800572c"
            },
            "calling": [
                "FUN_0800706c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005730": {
            "entrypoint": "0x08005730",
            "current_name": "process_and_check_data_08005730",
            "code": "\nvoid processAndCheckData_08005730(undefined4 param1,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  process_and_check_data_080053d4(param2,param3,param3,param4,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005730": "process_and_check_data_08005730",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [
                "FUN_08006f5a"
            ],
            "called": [
                "FUN_080053d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800573c": {
            "entrypoint": "0x0800573c",
            "current_name": "infinite_loop_0800573c",
            "code": "\nvoid infiniteLoop_0800573c(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_0800573c": "infinite_loop_0800573c"
            },
            "calling": [
                "FUN_08006ac0",
                "FUN_0800573c"
            ],
            "called": [
                "FUN_0800573c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005740": {
            "entrypoint": "0x08005740",
            "current_name": "initialize_data_08005740",
            "code": "\nundefined4 initializeData_08005740(void)\n\n{\n  DAT_200006a4 = 0x16;\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08005740": "initialize_data_08005740"
            },
            "calling": [
                "FUN_08006f00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005750": {
            "entrypoint": "0x08005750",
            "current_name": "initialize_flag_08005750",
            "code": "\nundefined4 initialize_flag_08005750(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08005750": "initialize_flag_08005750"
            },
            "calling": [
                "thunk_FUN_08005750"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005754": {
            "entrypoint": "0x08005754",
            "current_name": "process_data_08005754",
            "code": "\nuint processData_08005754(uint input)\n\n{\n  bool isInRange;\n  char character;\n  uint result;\n  \n  if (input < 0xe) {\n    if (input + 0x2e < 0x3c) {\n      isInRange = true;\n    }\n    else {\n      isInRange = false;\n    }\n  }\n  else {\n    isInRange = input < 0x3c;\n  }\n  if (isInRange) {\n    if (input < 0xe) {\n      input = input + 0x2e;\n    }\n    character = (&DAT_080076f0)[input];\n  }\n  else {\n    character = -1;\n  }\n  if (character == -1) {\n    result = 0;\n  }\n  else {\n    result = check_param_and_process_08004a4c();\n    if (DAT_200000f4 != 0xc) {\n      if (DAT_200000f4 < 0xc) {\n        return result >> (0xc - DAT_200000f4 & 0xff);\n      }\n      return result << (DAT_200000f4 - 0xc & 0xff);\n    }\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005754": "process_data_08005754",
                "param_1": "input",
                "bVar1": "isInRange",
                "cVar2": "character",
                "uVar3": "result"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08004a4c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080057b4": {
            "entrypoint": "0x080057b4",
            "current_name": "process_input_080057b4",
            "code": "\nvoid process_input_080057b4(uint index,undefined4 flag,undefined4 value,undefined *data)\n\n{\n  int bitValue;\n  undefined *dataPtr;\n  int arrayIndex;\n  \n  if (index < 0x3c) {\n    arrayIndex = (int)(char)(&DAT_080076f0)[index];\n    dataPtr = &DAT_080076f0;\n  }\n  else {\n    arrayIndex = -1;\n    dataPtr = data;\n  }\n  if (arrayIndex != -1) {\n    bitValue = get_bit_value_080047f4(arrayIndex,&DAT_20000344,value,dataPtr,data);\n    if (bitValue != 0) {\n      bitValue = find_value_in_array_08004ce2(arrayIndex,&DAT_080074b4);\n      if (bitValue != 0) {\n        process_valid_input_08004b3c(arrayIndex);\n      }\n      update_bit_in_array_by_index_08004828(arrayIndex,&DAT_20000344);\n    }\n    switch(flag) {\n    case 0:\n      update_flags_and_registers_08004bb0(arrayIndex,0);\n      break;\n    case 1:\n      update_flags_and_registers_08004bb0(arrayIndex,1,0);\n      break;\n    case 2:\n      update_flags_and_registers_08004bb0(arrayIndex,0,1);\n      break;\n    case 3:\n      update_flags_and_registers_08004bb0(arrayIndex,0,2);\n    }\n    update_bit_value_0800480a(arrayIndex,&DAT_20000358);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080057b4": "process_input_080057b4",
                "param_1": "index",
                "param_2": "flag",
                "param_3": "value",
                "param_4": "data",
                "iVar1": "bitValue",
                "puVar2": "dataPtr",
                "iVar3": "arrayIndex"
            },
            "calling": [
                "FUN_0800157c",
                "FUN_080013a4",
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08004828",
                "FUN_080047f4",
                "FUN_08004ce2",
                "FUN_08004bb0",
                "FUN_0800480a",
                "FUN_08004b3c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005848": {
            "entrypoint": "0x08005848",
            "current_name": "process_data_08005848",
            "code": "\nvoid processData_08005848(uint inputIndex,undefined4 paramA,undefined4 paramB,undefined *paramC)\n\n{\n  int bitValue;\n  undefined4 address;\n  undefined *dataPtr;\n  uint value;\n  \n  if (inputIndex < 0x3c) {\n    value = (uint)(char)(&DAT_080076f0)[inputIndex];\n    dataPtr = &DAT_080076f0;\n  }\n  else {\n    value = 0xffffffff;\n    dataPtr = paramC;\n  }\n  if ((value != 0xffffffff) &&\n     (bitValue = get_bit_value_080047f4(value,&DAT_20000358,paramB,dataPtr,paramC), bitValue != 0)) {\n    address = get_address_by_param_08004848((value << 0x18) >> 0x1c);\n    update_value_based_on_condition_08004c30(address,1 << (value & 0xf) & 0xffff,paramA);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005848": "process_data_08005848",
                "param_1": "inputIndex",
                "param_2": "paramA",
                "param_3": "paramB",
                "param_4": "paramC",
                "iVar1": "bitValue",
                "uVar2": "address",
                "puVar3": "dataPtr",
                "uVar4": "value"
            },
            "calling": [
                "FUN_08001310",
                "FUN_0800157c",
                "FUN_080012a2",
                "FUN_080012c0",
                "FUN_08000cd0",
                "FUN_080015b2",
                "FUN_080012e8",
                "FUN_080013a4",
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_080047f4",
                "FUN_08004c30",
                "FUN_08004848"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005890": {
            "entrypoint": "0x08005890",
            "current_name": "check_and_update_bit_08005890",
            "code": "\nchar checkAndUpdateBit_08005890(uint inputValue)\n\n{\n  char returnValue;\n  int bitValue;\n  undefined4 address;\n  uint index;\n  \n  if (inputValue < 0x3c) {\n    index = (uint)(char)(&DAT_080076f0)[inputValue];\n  }\n  else {\n    index = 0xffffffff;\n  }\n  if (index == 0xffffffff) {\n    returnValue = '\\0';\n  }\n  else {\n    bitValue = get_bit_value_080047f4(index,&DAT_20000358);\n    if (bitValue == 0) {\n      returnValue = '\\0';\n    }\n    else {\n      address = get_address_by_param_08004848((index << 0x18) >> 0x1c);\n      returnValue = check_and_update_bit_08004c48(address,1 << (index & 0xf) & 0xffff);\n    }\n  }\n  if (returnValue != '\\0') {\n    returnValue = '\\x01';\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08005890": "check_and_update_bit_08005890",
                "param_1": "inputValue",
                "cVar1": "returnValue",
                "iVar2": "bitValue",
                "uVar3": "address",
                "uVar4": "index"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_080015b2"
            ],
            "called": [
                "FUN_08004c48",
                "FUN_080047f4",
                "FUN_08004848"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058e0": {
            "entrypoint": "0x080058e0",
            "current_name": "initialize_global_variable_080058e0",
            "code": "\nvoid initialize_global_variable_080058e0(void)\n\n{\n  initialize_global_variable_080058e0_08004b94();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080058e0": "initialize_global_variable_080058e0"
            },
            "calling": [
                "FUN_080016b4",
                "FUN_08001ab0",
                "FUN_08000cd0",
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08004b94"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058e8": {
            "entrypoint": "0x080058e8",
            "current_name": "FUNC_080058e8",
            "code": "\nvoid FUNC_080058e8(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080058e8": "FUNC_080058e8"
            },
            "calling": [
                "FUN_08000bcc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800591e": {
            "entrypoint": "0x0800591e",
            "current_name": "calculate_offset_0800591e",
            "code": "\nushort calculate_offset_0800591e(int base_address)\n\n{\n  return (*(short *)(base_address + 0x134) + 0x40) - *(short *)(base_address + 0x136) & 0x3f;\n}\n\n",
            "renaming": {
                "FUN_0800591e": "calculate_offset_0800591e",
                "param_1": "base_address"
            },
            "calling": [
                "FUN_08005a18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800598a": {
            "entrypoint": "0x0800598a",
            "current_name": "update_combination_0800598a",
            "code": "\nvoid updateCombination_0800598a(int combination)\n\n{\n  int validationResult;\n  ushort newIndex;\n  undefined newValue;\n  \n  validationResult = validate_combination_080054d4(combination,&newValue);\n  if ((validationResult == 0) &&\n     (newIndex = *(short *)(combination + 0x60) + 1U & 0x3f, newIndex != *(ushort *)(combination + 0x62))) {\n    *(undefined *)(*(int *)(combination + 0x5c) + (uint)*(ushort *)(combination + 0x60)) = newValue;\n    *(ushort *)(combination + 0x60) = newIndex;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800598a": "update_combination_0800598a",
                "param_1": "combination",
                "iVar1": "validationResult",
                "uVar2": "newIndex",
                "local_9": "newValue"
            },
            "calling": [],
            "called": [
                "FUN_080054d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a18": {
            "entrypoint": "0x08005a18",
            "current_name": "FUNC_08005a18",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08005a1e) */\n/* WARNING: Removing unreachable block (ram,0x08005a30) */\n/* WARNING: Removing unreachable block (ram,0x08005a26) */\n/* WARNING: Removing unreachable block (ram,0x08005a38) */\n\nvoid FUNC_08005a18(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a18": "FUNC_08005a18"
            },
            "calling": [
                "FUN_08005f6c"
            ],
            "called": [
                "FUN_0800591e"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005a44": {
            "entrypoint": "0x08005a44",
            "current_name": "initialize_memory_block_08005a44",
            "code": "\nvoid initializeMemoryBlock_08005a44(int memoryBlockAddress)\n\n{\n  *(int *)(memoryBlockAddress + 0x130) = memoryBlockAddress + 0x11;\n  *(undefined2 *)(memoryBlockAddress + 0x134) = 0;\n  *(undefined2 *)(memoryBlockAddress + 0x136) = 0;\n  *(int *)(memoryBlockAddress + 0x138) = memoryBlockAddress + 0x51;\n  *(undefined2 *)(memoryBlockAddress + 0x13c) = 0;\n  *(undefined2 *)(memoryBlockAddress + 0x13e) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a44": "initialize_memory_block_08005a44",
                "param_1": "memoryBlockAddress"
            },
            "calling": [
                "FUN_08005b54"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a68": {
            "entrypoint": "0x08005a68",
            "current_name": "initialize_serial_connection_08005a68",
            "code": "\nvoid initializeSerialConnection_08005a68(int serialPort,undefined4 baudRate,byte config)\n\n{\n  uint status;\n  char *errorMessage;\n  byte configMasked;\n  int configValue;\n  byte *bytePtr;\n  char character;\n  int baseAddress;\n  code *jumpTableFunc;\n  \n  *(undefined4 *)(serialPort + 0x11c) = baudRate;\n  *(byte *)(serialPort + 0x140) = config;\n  configMasked = config & 7;\n  if (configMasked == 4) {\n    configValue = 7;\n  }\n  else if (configMasked == 6) {\n    configValue = 8;\n  }\n  else if (configMasked == 2) {\n    configValue = 6;\n  }\n  else {\n    configValue = 0;\n  }\n  if ((config & 0x30) == 0x30) {\n    *(undefined4 *)(serialPort + 0x128) = 0x600;\n    configValue = configValue + 1;\n  }\n  else if ((config & 0x20) == 0) {\n    *(undefined4 *)(serialPort + 0x128) = 0;\n  }\n  else {\n    *(undefined4 *)(serialPort + 0x128) = 0x400;\n    configValue = configValue + 1;\n  }\n  if ((config & 8) == 0) {\n    *(undefined4 *)(serialPort + 0x124) = 0;\n  }\n  else {\n    *(undefined4 *)(serialPort + 0x124) = 0x2000;\n  }\n  if (configValue == 8) {\n    *(undefined4 *)(serialPort + 0x120) = 0;\n  }\n  else if (configValue == 9) {\n    *(undefined4 *)(serialPort + 0x120) = 0x1000;\n  }\n  else {\n    configValue = 0;\n  }\n  if (configValue != 0) {\n    initialize_uart_08004f4c(serialPort + 0xd4);\n    update_combination_data_08005510(serialPort + 0xd4,0x800598b);\n    return;\n  }\n  errorMessage = \"void HardwareSerial::begin(long unsigned int, byte)\";\n  jumpTableFunc = (code *)0x8005b12;\n  print_assertion_failure_0800611c(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/cores/arduino/HardwareSerial.cpp\"\n               ,299,\"void HardwareSerial::begin(long unsigned int, byte)\",\"databits!=0\");\n  bytePtr = *(byte **)(status + baseAddress);\n  errorMessage[0x1e] = character;\n  *(undefined *)(*bytePtr + 0x1e) = 0;\n  if (status < 0x3c) {\n    uRam0000012d = (&DAT_080076f0)[status];\n  }\n  else {\n    uRam0000012d = 0xff;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08005b30. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTableFunc)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a68": "initialize_serial_connection_08005a68",
                "param_1": "serialPort",
                "param_2": "baudRate",
                "param_3": "config",
                "extraout_r1": "status",
                "pcVar1": "errorMessage",
                "bVar2": "configMasked",
                "iVar3": "configValue",
                "pbVar4": "bytePtr",
                "unaff_r4": "character",
                "unaff_r6": "baseAddress",
                "UNRECOVERED_JUMPTABLE": "jumpTableFunc"
            },
            "calling": [
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08005510",
                "FUN_08004f4c",
                "FUN_0800611c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005b24": {
            "entrypoint": "0x08005b24",
            "current_name": "set_byte_value_08005b24",
            "code": "\nvoid setByteValue_08005b24(int memoryAddress,uint valueIndex)\n\n{\n  undefined byteValue;\n  code *jumpTableFunction;\n  \n  if (valueIndex < 0x3c) {\n    byteValue = (&DAT_080076f0)[valueIndex];\n  }\n  else {\n    byteValue = 0xff;\n  }\n  *(undefined *)(memoryAddress + 0x12d) = byteValue;\n                    /* WARNING: Could not recover jumptable at 0x08005b30. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTableFunction)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005b24": "set_byte_value_08005b24",
                "param_1": "memoryAddress",
                "param_2": "valueIndex",
                "uVar1": "byteValue",
                "UNRECOVERED_JUMPTABLE": "jumpTableFunction"
            },
            "calling": [
                "FUN_08005b54"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005b3c": {
            "entrypoint": "0x08005b3c",
            "current_name": "set_memory_byte_08005b3c",
            "code": "\nvoid setMemoryByte_08005b3c(int address,uint index)\n\n{\n  undefined byteValue;\n  \n  if (index < 0x3c) {\n    byteValue = (&DAT_080076f0)[index];\n  }\n  else {\n    byteValue = 0xff;\n  }\n  *(undefined *)(address + 300) = byteValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005b3c": "set_memory_byte_08005b3c",
                "param_1": "address",
                "param_2": "index",
                "uVar1": "byteValue"
            },
            "calling": [
                "FUN_08005b54"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005b54": {
            "entrypoint": "0x08005b54",
            "current_name": "initialize_parameters_08005b54",
            "code": "\nundefined4 *\ninitialize_parameters_08005b54(undefined4 *parameters,undefined4 value,undefined4 index,undefined4 byte_value)\n\n{\n  undefined value_index;\n  \n  parameters[1] = 0;\n  parameters[2] = 1000;\n  *parameters = &PTR_LAB_080059c8_1_08007804;\n  if (parameters == (undefined4 *)&DAT_2000036c) {\n    set_byte_value(&DAT_2000036c,0,index,&DAT_2000036c,byte_value);\n    set_memory_byte(&DAT_2000036c,1);\n  }\n  else {\n    value_index = find_value_index(value,&DAT_08007604);\n    *(undefined *)((int)parameters + 0x12d) = value_index;\n    value_index = find_value_index(value,&DAT_0800764c);\n    *(undefined *)(parameters + 0x4b) = value_index;\n  }\n  initialize_memory_block(parameters);\n  return parameters;\n}\n\n",
            "renaming": {
                "FUN_08005b54": "initialize_parameters_08005b54",
                "param_1": "parameters",
                "param_2": "value",
                "param_3": "index",
                "param_4": "byte_value",
                "uVar1": "value_index",
                "set_byte_value_08005b24": "set_byte_value",
                "set_memory_byte_08005b3c": "set_memory_byte",
                "find_value_index_08004ca2": "find_value_index",
                "initialize_memory_block_08005a44": "initialize_memory_block"
            },
            "calling": [
                "FUN_08005bb0"
            ],
            "called": [
                "FUN_08005a44",
                "FUN_08004ca2",
                "FUN_08005b3c",
                "FUN_08005b24"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005bb0": {
            "entrypoint": "0x08005bb0",
            "current_name": "initialize_if_param1_equal_1_08005bb0",
            "code": "\nvoid initialize_if_param1_equal_1_08005bb0(int param1,int param2,undefined4 param3,undefined4 param4)\n\n{\n  if (param1 != 1) {\n    return;\n  }\n  if (param2 == 0xffff) {\n    initialize_parameters(&DAT_2000036c,0x40004400,param3,0xffff,param4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005bb0": "initialize_if_param1_equal_1_08005bb0",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "initialize_parameters_08005b54": "initialize_parameters"
            },
            "calling": [],
            "called": [
                "FUN_08005b54"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c1c": {
            "entrypoint": "0x08005c1c",
            "current_name": "initialize_data_08005c1c",
            "code": "\nvoid initializeData_08005c1c(undefined4 *dataPointer,undefined value1,undefined value2,undefined value3,\n                 undefined value4)\n\n{\n  *dataPointer = &DAT_08007858;\n  *(undefined *)(dataPointer + 1) = value1;\n  *(undefined *)((int)dataPointer + 5) = value2;\n  *(undefined *)((int)dataPointer + 6) = value3;\n  *(undefined *)((int)dataPointer + 7) = value4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005c1c": "initialize_data_08005c1c",
                "param_1": "dataPointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "value4"
            },
            "calling": [
                "FUN_08005c38"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c38": {
            "entrypoint": "0x08005c38",
            "current_name": "initialize_data_if_condition_met_08005c38",
            "code": "\nvoid initialize_data_if_condition_met_08005c38(int condition_variable_1,int condition_variable_2)\n\n{\n  if ((condition_variable_1 == 1) && (condition_variable_2 == 0xffff)) {\n    initialize_data_08005c1c(&DAT_200004b0,0,0,0,0);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005c38": "initialize_data_if_condition_met_08005c38",
                "param_1": "condition_variable_1",
                "param_2": "condition_variable_2"
            },
            "calling": [],
            "called": [
                "FUN_08005c1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c96": {
            "entrypoint": "0x08005c96",
            "current_name": "process_string_08005c96",
            "code": "\nundefined4 process_string_08005c96(int *string_ptr,int string_length,undefined4 unused_param,undefined4 additional_param)\n\n{\n  undefined4 length;\n  \n  if (string_length != 0) {\n    length = find_string_length(string_length);\n    length = (**(code **)(*string_ptr + 4))(string_ptr,string_length,length,*(code **)(*string_ptr + 4),additional_param);\n    return length;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005c96": "process_string_08005c96",
                "param_1": "string_ptr",
                "param_2": "string_length",
                "param_3": "unused_param",
                "param_4": "additional_param",
                "uVar1": "length",
                "find_string_length_08000178": "find_string_length"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08005cd4",
                "FUN_08000cd0",
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08000178"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cb6": {
            "entrypoint": "0x08005cb6",
            "current_name": "execute_function_08005cb6",
            "code": "\nvoid executeFunction_08005cb6(undefined4 *functionPtr)\n\n{\n  (**(code **)*functionPtr)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005cb6": "execute_function_08005cb6",
                "param_1": "functionPtr"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08005d42"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cc0": {
            "entrypoint": "0x08005cc0",
            "current_name": "execute_data_processing_08005cc0",
            "code": "\nvoid executeDataProcessing_08005cc0(int *dataProcessor,undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  (**(code **)(*dataProcessor + 4))(dataProcessor,&DAT_0800786c,2,*(code **)(*dataProcessor + 4),arg3);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005cc0": "execute_data_processing_08005cc0",
                "param_1": "dataProcessor",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3"
            },
            "calling": [
                "FUN_08005cd4",
                "FUN_08005f40"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cd4": {
            "entrypoint": "0x08005cd4",
            "current_name": "calculate_total_08005cd4",
            "code": "\nint calculate_total_08005cd4(undefined4 input_value)\n\n{\n  int string_processing_result;\n  int data_processing_result;\n  \n  string_processing_result = process_string_08005c96();\n  data_processing_result = execute_data_processing_08005cc0(input_value);\n  return data_processing_result + string_processing_result;\n}\n\n",
            "renaming": {
                "FUN_08005cd4": "calculate_total_08005cd4",
                "param_1": "input_value",
                "iVar1": "string_processing_result",
                "iVar2": "data_processing_result"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08005cc0",
                "FUN_08005c96"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005ce8": {
            "entrypoint": "0x08005ce8",
            "current_name": "convert_number_to_base_08005ce8",
            "code": "\nundefined4 convertNumberToBase_08005ce8(int *input_array,uint number,uint base)\n\n{\n  char converted_digit;\n  undefined4 result;\n  uint remainder;\n  uint quotient;\n  char *output_array;\n  char temp_array [9];\n  \n  temp_array[1] = 0;\n  if ((int)base < 2) {\n    base = 10;\n  }\n  output_array = temp_array + 1;\n  do {\n    quotient = number / base;\n    remainder = (number & 0xff) - (quotient * base & 0xff) & 0xff;\n    output_array = output_array + -1;\n    converted_digit = (char)remainder;\n    if (remainder < 10) {\n      converted_digit = converted_digit + '0';\n    }\n    else {\n      converted_digit = converted_digit + '7';\n    }\n    *output_array = converted_digit;\n    number = quotient;\n  } while (quotient != 0);\n  if (output_array == (char *)0x0) {\n    result = 0;\n  }\n  else {\n    result = find_string_length_08000178(output_array);\n    result = (**(code **)(*input_array + 4))(input_array,output_array,result);\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005ce8": "convert_number_to_base_08005ce8",
                "param_1": "input_array",
                "param_2": "number",
                "param_3": "base",
                "cVar1": "converted_digit",
                "uVar2": "result",
                "uVar3": "remainder",
                "uVar4": "quotient",
                "pcVar5": "output_array",
                "local_15": "temp_array"
            },
            "calling": [
                "FUN_08005d8a",
                "FUN_08005d42"
            ],
            "called": [
                "FUN_08000178"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005d42": {
            "entrypoint": "0x08005d42",
            "current_name": "convert_base_08005d42",
            "code": "\nint convert_base_08005d42(undefined4 *array_ptr,uint number,uint base)\n\n{\n  int result;\n  int negative_result;\n  \n  if (base == 0) {\n    result = (**(code **)*array_ptr)(array_ptr,number & 0xff);\n    return result;\n  }\n  if (base != 10) {\n    result = convert_number_to_base_08005ce8(array_ptr,number,base & 0xff);\n    return result;\n  }\n  if (-1 < (int)number) {\n    result = convert_number_to_base_08005ce8(array_ptr,number,10);\n    return result;\n  }\n  result = execute_function_08005cb6(array_ptr,0x2d);\n  negative_result = convert_number_to_base_08005ce8(array_ptr,-number,10);\n  return negative_result + result;\n}\n\n",
            "renaming": {
                "FUN_08005d42": "convert_base_08005d42",
                "param_1": "array_ptr",
                "param_2": "number",
                "param_3": "base",
                "iVar1": "result",
                "iVar2": "negative_result"
            },
            "calling": [
                "FUN_08005d82"
            ],
            "called": [
                "FUN_08005cb6",
                "FUN_08005ce8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005d82": {
            "entrypoint": "0x08005d82",
            "current_name": "convert_and_return_base_08005d82",
            "code": "\nvoid convert_and_return_base_08005d82(void)\n\n{\n  perform_base_conversion();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005d82": "convert_and_return_base_08005d82",
                "convert_base_08005d42": "perform_base_conversion"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08005d42"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005d8a": {
            "entrypoint": "0x08005d8a",
            "current_name": "convert_number_08005d8a",
            "code": "\nvoid convert_number_08005d8a(undefined4 *callback,uint number,uint base,undefined4 param)\n\n{\n  if (base != 0) {\n    convert_number_08005d8a_to_base(callback,number,base & 0xff);\n    return;\n  }\n  (**(code **)*callback)(callback,number & 0xff,0,*(code **)*callback,param);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005d8a": "convert_number_08005d8a",
                "param_1": "callback",
                "param_2": "number",
                "param_3": "base",
                "param_4": "param",
                "convert_number_to_base_08005ce8": "convert_number_to_base"
            },
            "calling": [
                "FUN_08005da8"
            ],
            "called": [
                "FUN_08005ce8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005da8": {
            "entrypoint": "0x08005da8",
            "current_name": "process_input_08005da8",
            "code": "\nint processInput_08005da8(undefined4 inputData,undefined4 param2,undefined4 param3,uint param4,byte param5)\n\n{\n  int result;\n  undefined4 tempValue;\n  int convertedValue;\n  byte counter;\n  undefined8 calculationResult;\n  undefined8 shiftedValue;\n  \n  result = check_param_combinations_08000a2c(param3,param4,param3,param4);\n  if (result == 0) {\n    result = check_param_combinations_08000a2c(param3,param4 & 0x7fffffff,0xffffffff,0x7fefffff);\n    if ((result == 0) &&\n       (result = validate_param_and_return_bool_080009f0(param3,param4 & 0x7fffffff,0xffffffff,0x7fefffff), result == 0)) {\n      result = process_string_08005c96(inputData,&DAT_08007860);\n    }\n    else {\n      result = check_if_pointer_is_null_08000a18(param3,param4,0xe0000000,0x41efffff);\n      if (result == 0) {\n        result = check_if_input_is_empty_080009dc(param3,param4,0xe0000000,0xc1efffff);\n        if (result == 0) {\n          result = check_if_input_is_empty_080009dc(param3,param4,0,0);\n          if (result == 0) {\n            result = 0;\n          }\n          else {\n            result = execute_function_08005cb6(inputData,0x2d);\n            param4 = param4 + 0x80000000;\n          }\n          calculationResult = 0x3fe0000000000000;\n          for (counter = 0; tempValue = (undefined4)((ulonglong)calculationResult >> 0x20), counter < param5;\n              counter = counter + 1) {\n            calculationResult = calculate_floating_point_0800074c((int)calculationResult,tempValue,0,0x40240000);\n          }\n          calculationResult = perform_calculation_08000194(param3,param4,(int)calculationResult,tempValue);\n          tempValue = check_and_shift_bits_08000aa8();\n          shiftedValue = shift_and_rotate_bits_0800040c();\n          calculationResult = calculate_result_08000190((int)calculationResult,(int)((ulonglong)calculationResult >> 0x20),(int)shiftedValue,\n                               (int)((ulonglong)shiftedValue >> 0x20));\n          convertedValue = convert_number_08005d8a(inputData,tempValue,10);\n          result = result + convertedValue;\n          if (param5 != 0) {\n            convertedValue = process_string_08005c96(inputData,&DAT_08007868);\n            result = result + convertedValue;\n          }\n          while (param5 != 0) {\n            calculationResult = calculate_080004f8((int)calculationResult,(int)((ulonglong)calculationResult >> 0x20),0,0x40240000);\n            tempValue = calculate_modified_value_08000a58();\n            convertedValue = convert_and_return_base_08005d82(inputData,tempValue,10);\n            result = result + convertedValue;\n            shiftedValue = bitwise_shift_0800042c(tempValue);\n            calculationResult = calculate_result_08000190((int)calculationResult,(int)((ulonglong)calculationResult >> 0x20),(int)shiftedValue,\n                                 (int)((ulonglong)shiftedValue >> 0x20));\n            param5 = param5 - 1;\n          }\n        }\n        else {\n          result = process_string_08005c96(inputData,&DAT_08007864);\n        }\n      }\n      else {\n        result = process_string_08005c96(inputData,&DAT_08007864);\n      }\n    }\n  }\n  else {\n    result = process_string_08005c96(inputData,&DAT_0800785c);\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005da8": "process_input_08005da8",
                "param_1": "inputData",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "iVar1": "result",
                "uVar2": "tempValue",
                "iVar3": "convertedValue",
                "bVar4": "counter",
                "uVar5": "calculationResult",
                "uVar6": "shiftedValue"
            },
            "calling": [
                "FUN_08005f2c"
            ],
            "called": [
                "FUN_08005d8a",
                "FUN_08005cb6",
                "FUN_0800074c",
                "FUN_080009dc",
                "FUN_08005d82",
                "FUN_08000a58",
                "FUN_08000194",
                "FUN_080004f8",
                "FUN_08005c96",
                "FUN_08000a2c",
                "FUN_08000a18",
                "FUN_0800040c",
                "FUN_080009f0",
                "FUN_08000aa8",
                "FUN_08000190",
                "FUN_0800042c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f2c": {
            "entrypoint": "0x08005f2c",
            "current_name": "process_and_return_input_08005f2c",
            "code": "\nvoid process_and_return_input_08005f2c(void)\n\n{\n  process_input();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005f2c": "process_and_return_input_08005f2c",
                "process_input_08005da8": "process_input"
            },
            "calling": [
                "FUN_08005f40",
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08005da8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f40": {
            "entrypoint": "0x08005f40",
            "current_name": "compute_sum_08005f40",
            "code": "\nint computeSum_08005f40(undefined4 input)\n\n{\n  int inputProcessingResult;\n  int dataProcessingResult;\n  \n  inputProcessingResult = process_and_return_input_08005f2c();\n  dataProcessingResult = execute_data_processing_08005cc0(input);\n  return dataProcessingResult + inputProcessingResult;\n}\n\n",
            "renaming": {
                "FUN_08005f40": "compute_sum_08005f40",
                "param_1": "input",
                "iVar1": "inputProcessingResult",
                "iVar2": "dataProcessingResult"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08005cc0",
                "FUN_08005f2c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f5c": {
            "entrypoint": "0x08005f5c",
            "current_name": "FUNC_08005f5c",
            "code": "\nvoid FUNC_08005f5c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005f5c": "FUNC_08005f5c"
            },
            "calling": [
                "FUN_08005f6c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005f5e": {
            "entrypoint": "0x08005f5e",
            "current_name": "initialize_hardware_and_update_flag_08005f5e",
            "code": "\nvoid initialize_hardware_and_update_flag_08005f5e(void)\n\n{\n  update_flag_08002470(3);\n  initialize_hardware_08001c32();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005f5e": "initialize_hardware_and_update_flag_08005f5e"
            },
            "calling": [
                "FUN_08006198"
            ],
            "called": [
                "FUN_08001c32",
                "FUN_08002470"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f6c": {
            "entrypoint": "0x08005f6c",
            "current_name": "continuous_processing_08005f6c",
            "code": "\nvoid continuous_processing_08005f6c(void)\n\n{\n  FUNC_08005f5c();\n  initialize_environment();\n  do {\n    process_data();\n    FUNC_08005a18();\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08005f6c": "continuous_processing_08005f6c",
                "initialize_08000bcc": "initialize_environment",
                "process_data_08000cd0": "process_data"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_08005a18",
                "FUN_08000cd0",
                "FUN_08000bcc",
                "FUN_08005f5c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f8c": {
            "entrypoint": "0x08005f8c",
            "current_name": "count_set_bits_08005f8c",
            "code": "\nchar count_set_bits_08005f8c(uint number)\n\n{\n  char bit_count;\n  \n  bit_count = '\\0';\n  for (; number != 1; number = number >> 1) {\n    bit_count = bit_count + '\\x01';\n  }\n  return bit_count;\n}\n\n",
            "renaming": {
                "FUN_08005f8c": "count_set_bits_08005f8c",
                "param_1": "number",
                "cVar1": "bit_count"
            },
            "calling": [
                "FUN_080060e4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005fc8": {
            "entrypoint": "0x08005fc8",
            "current_name": "initialize_default_values_08005fc8",
            "code": "\nvoid initializeDefaultValues_08005fc8(int inputFlag,int inputValue,undefined4 unusedParam1,undefined4 unusedParam2)\n\n{\n  if (inputFlag != 1) {\n    return;\n  }\n  if (inputValue == 0xffff) {\n    DAT_200004b8 = 6;\n    DAT_200004c4 = 0;\n    DAT_200004cc = 7;\n    DAT_200004d8 = 0;\n    DAT_200004e0 = 8;\n    DAT_200004ec = 0;\n    DAT_200004f4 = 9;\n    DAT_20000500 = 0;\n    DAT_20000508 = 10;\n    DAT_20000514 = 0;\n    DAT_2000051c = 0x17;\n    DAT_20000528 = 0;\n    DAT_20000530 = 0x17;\n    DAT_2000053c = 0;\n    DAT_20000544 = 0x17;\n    DAT_20000550 = 0;\n    DAT_20000558 = 0x17;\n    DAT_20000564 = 0;\n    DAT_2000056c = 0x17;\n    DAT_20000578 = 0;\n    DAT_20000580 = 0x28;\n    DAT_2000058c = 0;\n    DAT_20000594 = 0x28;\n    DAT_200005a0 = 0;\n    DAT_200005a8 = 0x28;\n    DAT_200005b4 = 0;\n    DAT_200005bc = 0x28;\n    DAT_200005c8 = 0;\n    DAT_200005d0 = 0x28;\n    DAT_200005dc = 0;\n    DAT_200005e4 = 0x28;\n    DAT_200005f0 = 0;\n    shiftUint64(0,unusedPointer1,&DAT_20000000,&DAT_200004b8,unusedParam2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005fc8": "initialize_default_values_08005fc8",
                "param_1": "inputFlag",
                "param_2": "inputValue",
                "param_3": "unusedParam1",
                "param_4": "unusedParam2",
                "shift_uint64_08006112": "shiftUint64",
                "&LAB_08005fa0_1": "unusedPointer1"
            },
            "calling": [],
            "called": [
                "FUN_08006112"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080060d4": {
            "entrypoint": "0x080060d4",
            "current_name": "process_data_080060d4",
            "code": "\nvoid processData_080060d4(int inputParam)\n\n{\n  int bitCount;\n  \n  if (*(int *)(inputParam + 8) != 0) {\n    (**(code **)(inputParam + 0xc))();\n    return;\n  }\n  processData_080060d4();\n  bitCount = countSetBits();\n  if ((&DAT_200004c4)[bitCount * 5] != 0) {\n    processData_080060d4();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080060d4": "process_data_080060d4",
                "param_1": "inputParam",
                "iVar1": "bitCount",
                "process_data_08007090": "processData",
                "count_set_bits_08005f8c": "countSetBits"
            },
            "calling": [
                "FUN_080060e4"
            ],
            "called": [
                "FUN_08007090"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080060e4": {
            "entrypoint": "0x080060e4",
            "current_name": "check_and_process_data_080060e4",
            "code": "\nvoid checkAndProcessData_080060e4(void)\n\n{\n  int bitCount;\n  \n  bitCount = count_set_bits_08005f8c();\n  if ((&DAT_200004c4)[bitCount * 5] != 0) {\n    processData();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080060e4": "check_and_process_data_080060e4",
                "iVar1": "bitCount",
                "process_data_080060d4": "processData"
            },
            "calling": [
                "FUN_0800282c"
            ],
            "called": [
                "FUN_08005f8c",
                "FUN_080060d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006112": {
            "entrypoint": "0x08006112",
            "current_name": "shift_uint64_08006112",
            "code": "\nvoid shift_uint64_08006112(undefined4 dest,undefined4 src)\n\n{\n  shift_u_int64_08006158(src,dest);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006112": "shift_uint64_08006112",
                "param_1": "dest",
                "param_2": "src"
            },
            "calling": [
                "FUN_08005fc8"
            ],
            "called": [
                "FUN_08006158"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800611c": {
            "entrypoint": "0x0800611c",
            "current_name": "print_assertion_failure_0800611c",
            "code": "\nvoid printAssertionFailure_0800611c(undefined4 message,undefined4 file,char *line,undefined4 assertion)\n\n{\n  undefined4 data;\n  char *prefix;\n  undefined8 result;\n  undefined4 suffix;\n  \n  data = *(undefined4 *)(DAT_200000f8 + 0xc);\n  suffix = assertion;\n  if (line == (char *)0x0) goto LAB_08006140;\n  prefix = \", function: \";\n  do {\n    process_data_08006174(data,\"assertion \\\"%s\\\" failed: file \\\"%s\\\", line %d%s%s\\n\",assertion,message,file\n                 ,prefix,line,suffix);\n    result = process_data_08006ac0();\n    file = (undefined4)((ulonglong)result >> 0x20);\n    data = (undefined4)result;\nLAB_08006140:\n    line = \"\";\n    prefix = line;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_0800611c": "print_assertion_failure_0800611c",
                "param_1": "message",
                "param_2": "file",
                "param_3": "line",
                "param_4": "assertion",
                "uVar1": "data",
                "pcVar2": "prefix",
                "uVar3": "result",
                "uVar4": "suffix"
            },
            "calling": [
                "FUN_08005a68"
            ],
            "called": [
                "FUN_08006174",
                "FUN_08006ac0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006158": {
            "entrypoint": "0x08006158",
            "current_name": "shift_u_int64_08006158",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08006160) */\n\nlonglong shiftUInt64_08006158(undefined4 arg1,uint arg2)\n\n{\n  return (ulonglong)arg2 << 0x20;\n}\n\n",
            "renaming": {
                "FUN_08006158": "shift_u_int64_08006158",
                "param_1": "arg1",
                "param_2": "arg2"
            },
            "calling": [
                "FUN_08006112"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006174": {
            "entrypoint": "0x08006174",
            "current_name": "process_data_08006174",
            "code": "\nvoid process_data_08006174(undefined4 input1,undefined4 input2,undefined4 output1,undefined4 output2)\n\n{\n  undefined4 output1_copy;\n  undefined4 output2_copy;\n  \n  output1_copy = output1;\n  output2_copy = output2;\n  process_binary_data_08006394(DAT_200000f8,input1,input2,&output1_copy,input1,&output1_copy);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006174": "process_data_08006174",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "output1",
                "param_4": "output2",
                "uStack_8": "output1_copy",
                "uStack_4": "output2_copy"
            },
            "calling": [
                "FUN_0800611c"
            ],
            "called": [
                "FUN_08006394"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006198": {
            "entrypoint": "0x08006198",
            "current_name": "execute_functions_08006198",
            "code": "\nvoid executeFunctions_08006198(void)\n\n{\n  int index;\n  \n  for (index = 0; index != 0; index = index + 1) {\n    (*(code *)(&DAT_08007944)[index])();\n  }\n  FUNC_08007328();\n  for (index = 0; index != 10; index = index + 1) {\n    (*(code *)(&DAT_08007944)[index])();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006198": "execute_functions_08006198",
                "iVar1": "index"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_08007328",
                "FUN_08005f5e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080061e0": {
            "entrypoint": "0x080061e0",
            "current_name": "fill_array_with_080061e0",
            "code": "\nvoid fillArrayWith_080061e0(undefined *array,undefined value,int length)\n\n{\n  undefined *endPtr;\n  \n  endPtr = array + length;\n  for (; array != endPtr; array = array + 1) {\n    *array = value;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080061e0": "fill_array_with_080061e0",
                "param_1": "array",
                "param_2": "value",
                "param_3": "length",
                "puVar1": "endPtr"
            },
            "calling": [
                "FUN_08006c88",
                "FUN_08006c40",
                "FUN_08006d14",
                "FUN_08004a4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080061f0": {
            "entrypoint": "0x080061f0",
            "current_name": "organize_data_080061f0",
            "code": "\nvoid organizeData_080061f0(undefined4 *outputArray,int inputCount,undefined4 param3,undefined4 param4)\n\n{\n  int **nextPointer1;\n  int **currentPointer1;\n  int **currentPointer2;\n  int *tempPointer;\n  int **previousPointer;\n  int **currentPointer3;\n  \n  if (inputCount == 0) {\n    return;\n  }\n  currentPointer3 = (int **)(inputCount + -4);\n  if (*(int *)(inputCount + -4) < 0) {\n    currentPointer3 = (int **)((int)currentPointer3 + *(int *)(inputCount + -4));\n  }\n  FUNC_08006eac();\n  currentPointer2 = (int **)&DAT_200005f8;\n  if (DAT_200005f8 == (int **)0x0) {\n    currentPointer3[1] = (int *)0x0;\n    currentPointer1 = nextPointer1;\n    DAT_200005f8 = currentPointer3;\n  }\n  else {\n    currentPointer2 = DAT_200005f8;\n    if (currentPointer3 < DAT_200005f8) {\n      currentPointer1 = (int **)*currentPointer3;\n      currentPointer2 = (int **)((int)currentPointer3 + (int)currentPointer1);\n      if (DAT_200005f8 == currentPointer2) {\n        tempPointer = *DAT_200005f8;\n        DAT_200005f8 = (int **)DAT_200005f8[1];\n        currentPointer2 = (int **)((int)tempPointer + (int)currentPointer1);\n        *currentPointer3 = (int *)currentPointer2;\n      }\n      currentPointer3[1] = (int *)DAT_200005f8;\n      DAT_200005f8 = currentPointer3;\n    }\n    else {\n      do {\n        previousPointer = currentPointer2;\n        currentPointer2 = (int **)previousPointer[1];\n        if (currentPointer2 == (int **)0x0) break;\n      } while (currentPointer2 <= currentPointer3);\n      currentPointer1 = (int **)*previousPointer;\n      if ((int **)((int)previousPointer + (int)currentPointer1) == currentPointer3) {\n        currentPointer1 = (int **)((int)currentPointer1 + (int)*currentPointer3);\n        *previousPointer = (int *)currentPointer1;\n        if (currentPointer2 == (int **)((int)previousPointer + (int)currentPointer1)) {\n          tempPointer = *currentPointer2;\n          currentPointer2 = (int **)currentPointer2[1];\n          currentPointer1 = (int **)((int)currentPointer1 + (int)tempPointer);\n          *previousPointer = (int *)currentPointer1;\n          previousPointer[1] = (int *)currentPointer2;\n        }\n      }\n      else if (currentPointer3 < (int **)((int)previousPointer + (int)currentPointer1)) {\n        *outputArray = 0xc;\n      }\n      else {\n        currentPointer1 = (int **)((int)currentPointer3 + (int)*currentPointer3);\n        if (currentPointer2 == currentPointer1) {\n          tempPointer = *currentPointer2;\n          currentPointer2 = (int **)currentPointer2[1];\n          currentPointer1 = (int **)((int)tempPointer + (int)*currentPointer3);\n          *currentPointer3 = (int *)currentPointer1;\n        }\n        currentPointer3[1] = (int *)currentPointer2;\n        previousPointer[1] = (int *)currentPointer3;\n      }\n    }\n  }\n  FUNC_08006eae(outputArray,currentPointer1,currentPointer2,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080061f0": "organize_data_080061f0",
                "param_1": "outputArray",
                "param_2": "inputCount",
                "param_3": "param3",
                "param_4": "param4",
                "extraout_r1": "nextPointer1",
                "ppiVar1": "currentPointer1",
                "ppiVar2": "currentPointer2",
                "piVar3": "tempPointer",
                "ppiVar4": "previousPointer",
                "ppiVar5": "currentPointer3"
            },
            "calling": [
                "FUN_080069e4",
                "FUN_08006ac0"
            ],
            "called": [
                "FUN_08006eae",
                "FUN_08006eac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006288": {
            "entrypoint": "0x08006288",
            "current_name": "allocate_and_initialize_memory_08006288",
            "code": "\nuint allocate_and_initialize_memory_08006288(undefined4 *output_pointer,uint requested_size)\n\n{\n  uint *current_block;\n  int difference;\n  uint *previous_block;\n  uint block_difference;\n  uint *current_block_previous;\n  uint aligned_size;\n  \n  aligned_size = (requested_size + 3 & 0xfffffffc) + 8;\n  if (aligned_size < 0xc) {\n    aligned_size = 0xc;\n  }\n  if (((int)aligned_size < 0) || (aligned_size < requested_size)) {\n    *output_pointer = 0xc;\n  }\n  else {\n    FUNC_08006eac();\n    current_block = DAT_200005f8;\n    current_block_previous = DAT_200005f8;\n    while (previous_block = current_block, previous_block != (uint *)0x0) {\n      block_difference = *previous_block - aligned_size;\n      if (-1 < (int)block_difference) {\n        if (block_difference < 0xc) {\n          if (current_block_previous == previous_block) {\n            current_block = (uint *)current_block_previous[1];\n            DAT_200005f8 = current_block;\n          }\n          else {\n            current_block = (uint *)previous_block[1];\n          }\n          if (current_block_previous != previous_block) {\n            current_block_previous[1] = (uint)current_block;\n            current_block_previous = previous_block;\n          }\n        }\n        else {\n          *previous_block = block_difference;\n          *(uint *)((int)previous_block + block_difference) = aligned_size;\n          current_block_previous = (uint *)((int)previous_block + block_difference);\n        }\n        goto LAB_080062ec;\n      }\n      current_block_previous = previous_block;\n      current_block = (uint *)previous_block[1];\n    }\n    if (DAT_200005fc == 0) {\n      DAT_200005fc = initialize_memory_allocation_08006920(output_pointer);\n    }\n    current_block = (uint *)initialize_memory_allocation_08006920(output_pointer,aligned_size);\n    if ((current_block != (uint *)0xffffffff) &&\n       ((current_block_previous = (uint *)((int)current_block + 3U & 0xfffffffc), current_block == current_block_previous ||\n        (difference = initialize_memory_allocation_08006920(output_pointer,(int)current_block_previous - (int)current_block), difference != -1)))) {\n      *current_block_previous = aligned_size;\nLAB_080062ec:\n      FUNC_08006eae(output_pointer);\n      aligned_size = (int)current_block_previous + 0xbU & 0xfffffff8;\n      difference = aligned_size - (int)(current_block_previous + 1);\n      if (difference != 0) {\n        *(int *)((int)current_block_previous + difference) = -difference;\n        return aligned_size;\n      }\n      return aligned_size;\n    }\n    *output_pointer = 0xc;\n    FUNC_08006eae(output_pointer);\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006288": "allocate_and_initialize_memory_08006288",
                "param_1": "output_pointer",
                "param_2": "requested_size",
                "puVar1": "current_block",
                "iVar2": "difference",
                "puVar3": "previous_block",
                "uVar4": "block_difference",
                "puVar5": "current_block_previous",
                "uVar6": "aligned_size"
            },
            "calling": [
                "FUN_08006c88",
                "FUN_08006e10"
            ],
            "called": [
                "FUN_08006eae",
                "FUN_08006eac",
                "FUN_08006920"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006344": {
            "entrypoint": "0x08006344",
            "current_name": "process_input_08006344",
            "code": "\nuint process_input_08006344(int data_struct,byte input_byte,byte **input_data)\n\n{\n  int iVar1;\n  byte *current_byte;\n  byte *segment_byte;\n  uint converted_input;\n  \n  current_byte = input_data[2] + -1;\n  input_data[2] = current_byte;\n  if ((-1 < (int)current_byte) ||\n     (((int)input_data[6] <= (int)current_byte && (current_byte = (byte *)(uint)input_byte, current_byte != (byte *)0xa))))\n  {\n    current_byte = *input_data;\n    *input_data = current_byte + 1;\n    *current_byte = input_byte;\n    return (uint)input_byte;\n  }\n  if ((data_struct != 0) && (*(int *)(data_struct + 0x18) == 0)) {\n    initialize_data();\n  }\n  if (input_data == (byte **)&DAT_08007904) {\n    input_data = *(byte ***)(data_struct + 4);\n  }\n  else if (input_data == (byte **)&DAT_08007924) {\n    input_data = *(byte ***)(data_struct + 8);\n  }\n  else if (input_data == (byte **)&DAT_080078e4) {\n    input_data = *(byte ***)(data_struct + 0xc);\n  }\n  input_data[2] = input_data[6];\n  segment_byte = (byte *)(uint)*(ushort *)(input_data + 3);\n  iVar1 = (int)segment_byte << 0x1c;\n  if (((iVar1 < 0) && (segment_byte = input_data[4], segment_byte != (byte *)0x0)) ||\n     (iVar1 = check_and_update_segment_080069e4(data_struct,input_data,iVar1,segment_byte,current_byte), iVar1 == 0)) {\n    converted_input = (uint)input_byte;\n    iVar1 = (int)*input_data - (int)input_data[4];\n    if ((iVar1 < (int)input_data[5]) || (iVar1 = process_data(data_struct,input_data), iVar1 == 0)) {\n      input_data[2] = input_data[2] + -1;\n      current_byte = *input_data;\n      *input_data = current_byte + 1;\n      *current_byte = input_byte;\n      if ((byte *)(iVar1 + 1) != input_data[5]) {\n        if (-1 < (int)((uint)*(ushort *)(input_data + 3) << 0x1f)) {\n          return converted_input;\n        }\n        if (converted_input != 10) {\n          return converted_input;\n        }\n      }\n      iVar1 = process_data(data_struct,input_data);\n      if (iVar1 == 0) {\n        return converted_input;\n      }\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08006344": "process_input_08006344",
                "param_1": "data_struct",
                "param_2": "input_byte",
                "param_3": "input_data",
                "pbVar2": "current_byte",
                "pbVar3": "segment_byte",
                "uVar4": "converted_input",
                "initialize_data_08006cb4": "initialize_data",
                "process_data_08006be0": "process_data"
            },
            "calling": [
                "FUN_08006370"
            ],
            "called": [
                "FUN_080069e4",
                "FUN_08006cb4",
                "FUN_08006be0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006370": {
            "entrypoint": "0x08006370",
            "current_name": "process_input_08006370",
            "code": "\nint processInput_08006370(undefined4 arg1,undefined4 arg2,undefined *inputArray,int arrayLength)\n\n{\n  int returnValue;\n  undefined *endOfArray;\n  int arrayIndex;\n  \n  endOfArray = inputArray + arrayLength;\n  arrayIndex = arrayLength;\n  do {\n    if (inputArray == endOfArray) {\n      return 0;\n    }\n    returnValue = process_input_08006344(arg1,*inputArray,arg2,arrayLength,arrayIndex);\n    arrayLength = returnValue + 1;\n    inputArray = inputArray + 1;\n  } while (arrayLength != 0);\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08006370": "process_input_08006370",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "inputArray",
                "param_4": "arrayLength",
                "iVar1": "returnValue",
                "puVar2": "endOfArray",
                "iVar3": "arrayIndex"
            },
            "calling": [
                "FUN_08006394"
            ],
            "called": [
                "FUN_08006344"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006394": {
            "entrypoint": "0x08006394",
            "current_name": "process_binary_data_08006394",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08006568) */\n\nint processBinaryData_08006394(int binaryData,undefined4 *paramArray,byte *inputString,int *output)\n\n{\n  int result;\n  int *ptrVar;\n  bool isNumeric;\n  byte *ptrData;\n  byte *ptrDataNext;\n  int segInfo;\n  int tempVar;\n  int *outputPtr;\n  uint flagBits;\n  int precision;\n  undefined4 extraInfo;\n  int width;\n  int processedCount;\n  byte currentChar;\n  undefined flag1;\n  undefined flag2;\n  undefined flag3;\n  undefined4 flag4;\n  \n  outputPtr = output;\n  if ((binaryData != 0) && (*(int *)(binaryData + 0x18) == 0)) {\n    initialize_data_08006cb4();\n  }\n  if (paramArray == &DAT_08007904) {\n    paramArray = *(undefined4 **)(binaryData + 4);\n  }\n  else if (paramArray == (undefined4 *)&DAT_08007924) {\n    paramArray = *(undefined4 **)(binaryData + 8);\n  }\n  else if (paramArray == (undefined4 *)&DAT_080078e4) {\n    paramArray = *(undefined4 **)(binaryData + 0xc);\n  }\n  if (((-1 < (int)((uint)*(ushort *)(paramArray + 3) << 0x1c)) || (paramArray[4] == 0)) &&\n     (tempVar = check_and_update_segment_080069e4(binaryData,paramArray), tempVar != 0)) {\n    return -1;\n  }\n  processedCount = 0;\n  flag1 = 0x20;\n  flag2 = 0x30;\n  ptrData = inputString;\nLAB_080063d6:\n  ptrDataNext = ptrData;\n  if (*ptrDataNext != 0) goto LAB_0800648c;\n  goto LAB_080063e0;\nLAB_0800648c:\n  ptrData = ptrDataNext + 1;\n  if (*ptrDataNext != 0x25) goto LAB_080063d6;\nLAB_080063e0:\n  tempVar = (int)ptrDataNext - (int)inputString;\n  if (tempVar != 0) {\n    result = process_input_08006370(binaryData,paramArray,inputString,tempVar);\n    if (result == -1) {\nLAB_08006580:\n      if ((int)((uint)*(ushort *)(paramArray + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return processedCount;\n    }\n    processedCount = processedCount + tempVar;\n  }\n  if (*ptrDataNext == 0) goto LAB_08006580;\n  flagBits = 0;\n  width = 0;\n  precision = -1;\n  extraInfo = 0;\n  flag3 = 0;\n  flag4 = 0;\n  ptrData = ptrDataNext + 1;\n  while( true ) {\n    tempVar = find_character_in_string_08006e90(\"#-0+ \",*ptrData);\n    inputString = ptrData + 1;\n    if (tempVar == 0) break;\n    flagBits = 1 << (tempVar + 0xf7ff8750U & 0xff) | flagBits;\n    ptrData = inputString;\n  }\n  if ((int)(flagBits << 0x1b) < 0) {\n    flag3 = 0x20;\n  }\n  if ((int)(flagBits << 0x1c) < 0) {\n    flag3 = 0x2b;\n  }\n  if (*ptrData == 0x2a) {\n    ptrVar = outputPtr + 1;\n    tempVar = *outputPtr;\n    outputPtr = ptrVar;\n    if (tempVar < 0) {\n      width = -tempVar;\n      flagBits = flagBits | 2;\n      goto LAB_080064be;\n    }\n  }\n  else {\n    isNumeric = false;\n    tempVar = width;\n    inputString = ptrData;\n    while( true ) {\n      if (9 < *inputString - 0x30) break;\n      tempVar = tempVar * 10 + (*inputString - 0x30);\n      isNumeric = true;\n      inputString = inputString + 1;\n    }\n    if (!isNumeric) goto LAB_080064be;\n  }\n  width = tempVar;\nLAB_080064be:\n  if (*inputString == 0x2e) {\n    if (inputString[1] == 0x2a) {\n      inputString = inputString + 2;\n      ptrVar = outputPtr + 1;\n      precision = *outputPtr;\n      outputPtr = ptrVar;\n      if (precision < 0) {\n        precision = -1;\n      }\n    }\n    else {\n      isNumeric = false;\n      tempVar = 0;\n      precision = 0;\n      while( true ) {\n        inputString = inputString + 1;\n        if (9 < *inputString - 0x30) break;\n        tempVar = tempVar * 10 + (*inputString - 0x30);\n        isNumeric = true;\n      }\n      if (isNumeric) {\n        precision = tempVar;\n      }\n    }\n  }\n  tempVar = find_character_in_string_08006e90(&DAT_080078b6,*inputString,3);\n  if (tempVar != 0) {\n    inputString = inputString + 1;\n    flagBits = flagBits | 0x40 << (tempVar + 0xf7ff874aU & 0xff);\n  }\n  currentChar = *inputString;\n  inputString = inputString + 1;\n  tempVar = find_character_in_string_08006e90(\"efgEFG\",currentChar,6);\n  if (tempVar == 0) {\n    segInfo = decode_and_process_data_080066b0(binaryData,&flagBits,paramArray,0x8006371,&outputPtr);\n    if (segInfo == -1) goto LAB_08006580;\n  }\n  else {\n    outputPtr = (int *)(((int)outputPtr + 7U & 0xfffffff8) + 8);\n  }\n  processedCount = processedCount + segInfo;\n  ptrData = inputString;\n  goto LAB_080063d6;\n}\n\n",
            "renaming": {
                "FUN_08006394": "process_binary_data_08006394",
                "param_1": "binaryData",
                "param_2": "paramArray",
                "param_3": "inputString",
                "param_4": "output",
                "iVar1": "result",
                "piVar2": "ptrVar",
                "bVar3": "isNumeric",
                "pbVar4": "ptrData",
                "pbVar5": "ptrDataNext",
                "unaff_r9": "segInfo",
                "iVar6": "tempVar",
                "local_8c": "outputPtr",
                "local_88": "flagBits",
                "local_84": "precision",
                "local_80": "extraInfo",
                "local_7c": "width",
                "local_74": "processedCount",
                "local_70": "currentChar",
                "local_6f": "flag1",
                "local_6e": "flag2",
                "local_45": "flag3",
                "local_30": "flag4"
            },
            "calling": [
                "FUN_080068f0",
                "FUN_08006174"
            ],
            "called": [
                "FUN_080069e4",
                "FUN_08006370",
                "FUN_08006e90",
                "FUN_080066b0",
                "FUN_08006cb4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080065c0": {
            "entrypoint": "0x080065c0",
            "current_name": "decode_and_process_080065c0",
            "code": "\nundefined4\ndecode_and_process_080065c0(undefined4 data_ptr,uint *header,uint *max_value,undefined4 param_4,code *callback)\n\n{\n  int i;\n  int j;\n  uint max_size;\n  uint extra_size;\n  bool has_extra;\n  \n  max_size = header[4];\n  if ((int)header[4] < (int)header[2]) {\n    max_size = header[2];\n  }\n  *max_value = max_size;\n  if (*(char *)((int)header + 0x43) != '\\0') {\n    *max_value = max_size + 1;\n  }\n  if ((int)(*header << 0x1a) < 0) {\n    *max_value = *max_value + 2;\n  }\n  if ((*header & 6) == 0) {\n    for (i = 0; i < (int)(header[3] - *max_value); i = i + 1) {\n      j = (*callback)(data_ptr,param_4,(int)header + 0x19,1);\n      if (j == -1) {\n        return 0xffffffff;\n      }\n    }\n  }\n  max_size = (uint)*(byte *)((int)header + 0x43);\n  if (max_size != 0) {\n    max_size = 1;\n  }\n  extra_size = max_size;\n  if ((int)(*header << 0x1a) < 0) {\n    *(undefined *)((int)header + max_size + 0x43) = 0x30;\n    extra_size = max_size + 2;\n    *(undefined *)((int)header + max_size + 0x44) = *(undefined *)((int)header + 0x45);\n  }\n  i = (*callback)(data_ptr,param_4,(int)header + 0x43,extra_size);\n  if (i != -1) {\n    max_size = header[3];\n    has_extra = (*header & 6) != 4;\n    if (has_extra) {\n      max_size = 0;\n    }\n    extra_size = 0;\n    if (!has_extra) {\n      max_size = max_size - *max_value;\n    }\n    if (!has_extra) {\n      max_size = max_size & ~((int)max_size >> 0x1f);\n    }\n    if ((int)header[4] < (int)header[2]) {\n      max_size = max_size + (header[2] - header[4]);\n    }\n    while( true ) {\n      if (max_size == extra_size) {\n        return 0;\n      }\n      i = (*callback)(data_ptr,param_4,(int)header + 0x1a,1);\n      if (i == -1) break;\n      extra_size = extra_size + 1;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080065c0": "decode_and_process_080065c0",
                "param_1": "data_ptr",
                "param_2": "header",
                "param_3": "max_value",
                "param_5": "callback",
                "iVar1": "i",
                "iVar2": "j",
                "uVar3": "max_size",
                "uVar4": "extra_size",
                "bVar5": "has_extra"
            },
            "calling": [
                "FUN_080066b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080066b0": {
            "entrypoint": "0x080066b0",
            "current_name": "decode_and_process_data_080066b0",
            "code": "\nuint decode_and_process_data_080066b0(undefined4 param1,uint *data_array,undefined4 param3,code *data_processing_function,uint **param5)\n\n{\n  byte byte_value;\n  int index;\n  uint *ptr;\n  int loop_counter;\n  char *hex_digits;\n  uint number;\n  uint **ppuVar7;\n  char **ppcVar8;\n  uint result;\n  uint temp_number;\n  char *current_char;\n  char *data_string;\n  uint local_array [2];\n  \n  byte_value = *(byte *)(data_array + 6);\n  data_string = (char *)((int)data_array + 0x43);\n  if (byte_value != 0x6e) {\n    if (byte_value < 0x6f) {\n      if (byte_value != 99) {\n        if (byte_value < 100) {\n          if (byte_value == 0) goto LAB_0800686a;\n          if (byte_value != 0x58) goto LAB_080066e0;\n          *(undefined *)((int)data_array + 0x45) = 0x58;\n          hex_digits = \"0123456789ABCDEF\";\nLAB_080067fa:\n          number = *data_array;\n          ptr = *param5;\n          *param5 = ptr + 1;\n          if (((number & 0x80) == 0) && ((int)(number << 0x19) < 0)) {\n            result = (uint)*(ushort *)ptr;\n          }\n          else {\n            result = *ptr;\n          }\n          if ((int)(number << 0x1f) < 0) {\n            *data_array = number | 0x20;\n          }\n          if (result == 0) {\n            *data_array = *data_array & 0xffffffdf;\n          }\n          number = 0x10;\nLAB_08006790:\n          *(undefined *)((int)data_array + 0x43) = 0;\n        }\n        else {\n          if ((byte_value != 100) && (byte_value != 0x69)) goto LAB_080066e0;\n          result = *data_array;\n          ptr = *param5;\n          if ((result & 0x80) == 0) {\n            *param5 = ptr + 1;\n            if ((result & 0x40) == 0) goto LAB_08006700;\n            result = (uint)(short)*(ushort *)ptr;\n          }\n          else {\n            *param5 = ptr + 1;\nLAB_08006700:\n            result = *ptr;\n          }\n          if ((int)result < 0) {\n            result = -result;\n            *(undefined *)((int)data_array + 0x43) = 0x2d;\n          }\n          hex_digits = \"0123456789ABCDEF\";\n          number = 10;\n        }\n        temp_number = data_array[1];\n        data_array[2] = temp_number;\n        current_char = data_string;\n        if ((int)temp_number < 0) {\n          if (result != 0) goto LAB_0800682e;\nLAB_080068dc:\n          *(char *)((int)data_array + 0x42) = *hex_digits;\n          current_char = (char *)((int)data_array + 0x42);\n        }\n        else {\n          *data_array = *data_array & 0xfffffffb;\n          if (result == 0) {\n            if (temp_number != 0) goto LAB_080068dc;\n          }\n          else {\nLAB_0800682e:\n            do {\n              temp_number = result / number;\n              current_char = current_char + -1;\n              *current_char = hex_digits[result - number * temp_number];\n              result = temp_number;\n            } while (temp_number != 0);\n          }\n        }\n        if (((number == 8) && ((int)(*data_array << 0x1f) < 0)) && ((int)data_array[1] <= (int)data_array[4]))\n        {\n          current_char[-1] = '0';\n          current_char = current_char + -1;\n        }\n        data_array[4] = (int)data_string - (int)current_char;\n        data_string = current_char;\n        goto LAB_080067d6;\n      }\n      ptr = *param5;\n      *param5 = ptr + 1;\n      *(char *)((int)data_array + 0x42) = (char)*ptr;\nLAB_08006740:\n      data_string = (char *)((int)data_array + 0x42);\n      result = 1;\n    }\n    else {\n      if (byte_value != 0x73) {\n        if (byte_value < 0x74) {\n          if (byte_value == 0x6f) {\nLAB_08006766:\n            result = *data_array;\n            ptr = *param5;\n            if ((result & 0x80) == 0) {\n              *param5 = ptr + 1;\n              if ((result & 0x40) == 0) goto LAB_08006774;\n              result = (uint)*(ushort *)ptr;\n            }\n            else {\n              *param5 = ptr + 1;\nLAB_08006774:\n              result = *ptr;\n            }\n            if (byte_value == 0x6f) {\n              number = 8;\n            }\n            else {\n              number = 10;\n            }\n            hex_digits = \"0123456789ABCDEF\";\n            goto LAB_08006790;\n          }\n          if (byte_value == 0x70) {\n            *data_array = *data_array | 0x20;\nLAB_08006726:\n            hex_digits = \"0123456789abcdef\";\n            *(undefined *)((int)data_array + 0x45) = 0x78;\n            goto LAB_080067fa;\n          }\n        }\n        else {\n          if (byte_value == 0x75) goto LAB_08006766;\n          if (byte_value == 0x78) goto LAB_08006726;\n        }\nLAB_080066e0:\n        *(byte *)((int)data_array + 0x42) = byte_value;\n        goto LAB_08006740;\n      }\n      ppcVar8 = (char **)*param5;\n      *param5 = (uint *)(ppcVar8 + 1);\n      data_string = *ppcVar8;\n      index = find_character_in_string_08006e90(data_string,0,data_array[1]);\n      if (index != 0) {\n        data_array[1] = index - (int)data_string;\n      }\n      result = data_array[1];\n    }\n    data_array[4] = result;\n    *(undefined *)((int)data_array + 0x43) = 0;\n    goto LAB_080067d6;\n  }\n  result = *data_array;\n  ppuVar7 = (uint **)*param5;\n  number = data_array[5];\n  if ((result & 0x80) == 0) {\n    *param5 = (uint *)(ppuVar7 + 1);\n    ptr = *ppuVar7;\n    if ((result & 0x40) == 0) goto LAB_08006856;\n    *(short *)ptr = (short)number;\n  }\n  else {\n    *param5 = (uint *)(ppuVar7 + 1);\n    ptr = *ppuVar7;\nLAB_08006856:\n    *ptr = number;\n  }\nLAB_0800686a:\n  data_array[4] = 0;\nLAB_080067d6:\n  index = decode_and_process_080065c0(param1,data_array,local_array,param3,data_processing_function);\n  if ((index == -1) || (index = (*data_processing_function)(param1,param3,data_string,data_array[4]), index == -1)) {\nLAB_080067ea:\n    result = 0xffffffff;\n  }\n  else {\n    if ((int)(*data_array << 0x1e) < 0) {\n      for (index = 0; index < (int)(data_array[3] - local_array[0]); index = index + 1) {\n        loop_counter = (*data_processing_function)(param1,param3,(int)data_array + 0x19,1);\n        if (loop_counter == -1) goto LAB_080067ea;\n      }\n    }\n    result = data_array[3];\n    if ((int)data_array[3] < (int)local_array[0]) {\n      result = local_array[0];\n    }\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080066b0": "decode_and_process_data_080066b0",
                "param_1": "param1",
                "param_2": "data_array",
                "param_3": "param3",
                "param_4": "data_processing_function",
                "param_5": "param5",
                "bVar1": "byte_value",
                "iVar2": "index",
                "puVar3": "ptr",
                "iVar4": "loop_counter",
                "pcVar5": "hex_digits",
                "uVar6": "number",
                "uVar9": "result",
                "uVar10": "temp_number",
                "pcVar11": "current_char",
                "pcVar12": "data_string",
                "local_24": "local_array"
            },
            "calling": [
                "FUN_08006394"
            ],
            "called": [
                "FUN_08006e90",
                "FUN_080065c0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080068f0": {
            "entrypoint": "0x080068f0",
            "current_name": "initialize_and_process_data_080068f0",
            "code": "\nvoid initializeAndProcessData_080068f0(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  int dataPointer;\n  undefined4 var1;\n  undefined4 var2;\n  undefined4 var3;\n  undefined4 var4;\n  \n  dataPointer = DAT_200000f8;\n  var1 = input1;\n  var2 = input2;\n  var3 = input3;\n  var4 = input4;\n  if ((DAT_200000f8 != 0) && (*(int *)(DAT_200000f8 + 0x18) == 0)) {\n    initialize_data_08006cb4(DAT_200000f8);\n  }\n  process_binary_data_08006394(dataPointer,*(undefined4 *)(dataPointer + 8),input1,&var2,var1,&var2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080068f0": "initialize_and_process_data_080068f0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "dataPointer",
                "uVar2": "var1",
                "uStack_c": "var2",
                "uStack_8": "var3",
                "uStack_4": "var4"
            },
            "calling": [
                "FUN_08004f4c"
            ],
            "called": [
                "FUN_08006cb4",
                "FUN_08006394"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006920": {
            "entrypoint": "0x08006920",
            "current_name": "initialize_memory_allocation_08006920",
            "code": "\nvoid initializeMemoryAllocation_08006920(int *outputPointer,undefined4 size)\n\n{\n  int allocationResult;\n  \n  DAT_200006a4 = 0;\n  allocationResult = allocate_memory_080056d8(size);\n  if ((allocationResult == -1) && (DAT_200006a4 != 0)) {\n    *outputPointer = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006920": "initialize_memory_allocation_08006920",
                "param_1": "outputPointer",
                "param_2": "size",
                "iVar1": "allocationResult"
            },
            "calling": [
                "FUN_08006288"
            ],
            "called": [
                "FUN_080056d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080069e4": {
            "entrypoint": "0x080069e4",
            "current_name": "check_and_update_segment_080069e4",
            "code": "\nuint checkAndUpdateSegment_080069e4(undefined4 *outputParam,undefined4 *inputParam)\n\n{\n  int segmentData;\n  uint result;\n  ushort flags;\n  \n  segmentData = DAT_200000f8;\n  if ((DAT_200000f8 != 0) && (*(int *)(DAT_200000f8 + 0x18) == 0)) {\n    initialize_data_08006cb4(DAT_200000f8);\n  }\n  if (inputParam == &DAT_08007904) {\n    inputParam = *(undefined4 **)(segmentData + 4);\n  }\n  else if (inputParam == (undefined4 *)&DAT_08007924) {\n    inputParam = *(undefined4 **)(segmentData + 8);\n  }\n  else if (inputParam == (undefined4 *)&DAT_080078e4) {\n    inputParam = *(undefined4 **)(segmentData + 0xc);\n  }\n  flags = *(ushort *)(inputParam + 3);\n  result = (uint)flags;\n  if (-1 < (int)(result << 0x1c)) {\n    if (-1 < (int)(result << 0x1b)) {\n      *outputParam = 9;\n      goto LAB_08006a14;\n    }\n    if ((int)(result << 0x1d) < 0) {\n      if ((undefined4 *)inputParam[0xd] != (undefined4 *)0x0) {\n        if ((undefined4 *)inputParam[0xd] != inputParam + 0x11) {\n          organize_data_080061f0(outputParam);\n        }\n        inputParam[0xd] = 0;\n      }\n      *(ushort *)(inputParam + 3) = *(ushort *)(inputParam + 3) & 0xffdb;\n      inputParam[1] = 0;\n      *inputParam = inputParam[4];\n    }\n    *(ushort *)(inputParam + 3) = *(ushort *)(inputParam + 3) | 8;\n  }\n  if ((inputParam[4] == 0) && ((*(ushort *)(inputParam + 3) & 0x280) != 0x200)) {\n    initialize_segment_08006e10(outputParam,inputParam);\n  }\n  flags = *(ushort *)(inputParam + 3);\n  result = flags & 1;\n  if ((flags & 1) == 0) {\n    if (-1 < (int)((uint)flags << 0x1e)) {\n      result = inputParam[5];\n    }\n    inputParam[2] = result;\n  }\n  else {\n    inputParam[2] = 0;\n    inputParam[6] = -inputParam[5];\n  }\n  if (inputParam[4] == 0) {\n    flags = *(ushort *)(inputParam + 3);\n    result = (int)(short)flags & 0x80;\n    if (result != 0) {\nLAB_08006a14:\n      *(ushort *)(inputParam + 3) = flags | 0x40;\n      return 0xffffffff;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080069e4": "check_and_update_segment_080069e4",
                "param_1": "outputParam",
                "param_2": "inputParam",
                "iVar1": "segmentData",
                "uVar2": "result",
                "uVar3": "flags"
            },
            "calling": [
                "FUN_08006344",
                "FUN_08006394"
            ],
            "called": [
                "FUN_080061f0",
                "FUN_08006cb4",
                "FUN_08006e10"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": [],
            "code_backup": "\nuint FUN_080069e4(undefined4 *param_1,undefined4 *param_2)\n\n{\n  int iVar1;\n  uint uVar2;\n  ushort uVar3;\n  \n  iVar1 = DAT_200000f8;\n  if ((DAT_200000f8 != 0) && (*(int *)(DAT_200000f8 + 0x18) == 0)) {\n    FUNC_08006cb4(DAT_200000f8);\n  }\n  if (param_2 == &DAT_08007904) {\n    param_2 = *(undefined4 **)(iVar1 + 4);\n  }\n  else if (param_2 == (undefined4 *)&DAT_08007924) {\n    param_2 = *(undefined4 **)(iVar1 + 8);\n  }\n  else if (param_2 == (undefined4 *)&DAT_080078e4) {\n    param_2 = *(undefined4 **)(iVar1 + 0xc);\n  }\n  uVar3 = *(ushort *)(param_2 + 3);\n  uVar2 = (uint)uVar3;\n  if (-1 < (int)(uVar2 << 0x1c)) {\n    if (-1 < (int)(uVar2 << 0x1b)) {\n      *param_1 = 9;\n      goto LAB_08006a14;\n    }\n    if ((int)(uVar2 << 0x1d) < 0) {\n      if ((undefined4 *)param_2[0xd] != (undefined4 *)0x0) {\n        if ((undefined4 *)param_2[0xd] != param_2 + 0x11) {\n          organize_data_080061f0(param_1);\n        }\n        param_2[0xd] = 0;\n      }\n      *(ushort *)(param_2 + 3) = *(ushort *)(param_2 + 3) & 0xffdb;\n      param_2[1] = 0;\n      *param_2 = param_2[4];\n    }\n    *(ushort *)(param_2 + 3) = *(ushort *)(param_2 + 3) | 8;\n  }\n  if ((param_2[4] == 0) && ((*(ushort *)(param_2 + 3) & 0x280) != 0x200)) {\n    initialize_segment_08006e10(param_1,param_2);\n  }\n  uVar3 = *(ushort *)(param_2 + 3);\n  uVar2 = uVar3 & 1;\n  if ((uVar3 & 1) == 0) {\n    if (-1 < (int)((uint)uVar3 << 0x1e)) {\n      uVar2 = param_2[5];\n    }\n    param_2[2] = uVar2;\n  }\n  else {\n    param_2[2] = 0;\n    param_2[6] = -param_2[5];\n  }\n  if (param_2[4] == 0) {\n    uVar3 = *(ushort *)(param_2 + 3);\n    uVar2 = (int)(short)uVar3 & 0x80;\n    if (uVar2 != 0) {\nLAB_08006a14:\n      *(ushort *)(param_2 + 3) = uVar3 | 0x40;\n      return 0xffffffff;\n    }\n  }\n  else {\n    uVar2 = 0;\n  }\n  return uVar2;\n}\n\n"
        },
        "FUN_08006ac0": {
            "entrypoint": "0x08006ac0",
            "current_name": "process_data_08006ac0",
            "code": "\nvoid processData_08006ac0(void)\n\n{\n  uint *dataPointer;\n  int temporaryVar;\n  int *functionPointer;\n  int *dataPointer2;\n  uint ushortVar;\n  ushort ushortVar2;\n  int loopCounter;\n  code *callbackFunction;\n  int loopVar;\n  uint tempVar2;\n  code *jumpTableFunction;\n  bool conditionFlag;\n  undefined8 returnValue;\n  \n  check_function_result_08006f00(6);\n  jumpTableFunction = (code *)0x8006acf;\n  returnValue = infinite_loop_0800573c(1);\n  functionPointer = (int *)((ulonglong)returnValue >> 0x20);\n  dataPointer = (uint *)returnValue;\n  ushortVar2 = *(ushort *)(functionPointer + 3);\n  ushortVar = (uint)ushortVar2;\n  if ((int)(ushortVar << 0x1c) < 0) {\n    temporaryVar = functionPointer[4];\n    if (temporaryVar != 0) {\n      loopCounter = ushortVar << 0x1e;\n      conditionFlag = loopCounter != 0;\n      if (conditionFlag) {\n        loopCounter = 0;\n      }\n      loopVar = *functionPointer;\n      if (!conditionFlag) {\n        loopCounter = functionPointer[5];\n      }\n      *functionPointer = temporaryVar;\n      functionPointer[2] = loopCounter;\n      for (loopVar = loopVar - temporaryVar; 0 < loopVar; loopVar = loopVar - loopCounter) {\n        loopCounter = (*(code *)functionPointer[10])(dataPointer,functionPointer[8],temporaryVar,loopVar);\n        if (loopCounter < 1) {\n          ushortVar2 = *(ushort *)(functionPointer + 3);\n          goto LAB_08006bc6;\n        }\n        temporaryVar = temporaryVar + loopCounter;\n      }\n    }\n  }\n  else if (((0 < functionPointer[1]) || (0 < functionPointer[0x10])) &&\n          (callbackFunction = (code *)functionPointer[0xb], callbackFunction != (code *)0x0)) {\n    tempVar2 = *dataPointer;\n    *dataPointer = 0;\n    if ((ushortVar2 & 0x1000) == 0) {\n      temporaryVar = (*callbackFunction)(dataPointer,functionPointer[8],ushortVar & 0x1000,1);\n      if ((temporaryVar == -1) && (ushortVar = *dataPointer, ushortVar != 0)) {\n        if ((ushortVar != 0x1d) && (ushortVar != 0x16)) {\n          *(ushort *)(functionPointer + 3) = *(ushort *)(functionPointer + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006b90. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          (*jumpTableFunction)();\n          return;\n        }\n        *dataPointer = tempVar2;\n        goto LAB_08006aea;\n      }\n    }\n    else {\n      temporaryVar = functionPointer[0x15];\n    }\n    if (((int)((uint)*(ushort *)(functionPointer + 3) << 0x1d) < 0) &&\n       (temporaryVar = temporaryVar - functionPointer[1], functionPointer[0xd] != 0)) {\n      temporaryVar = temporaryVar - functionPointer[0x10];\n    }\n    temporaryVar = (*(code *)functionPointer[0xb])(dataPointer,functionPointer[8],temporaryVar,0);\n    ushortVar2 = *(ushort *)(functionPointer + 3);\n    if ((temporaryVar == -1) &&\n       ((0x1d < *dataPointer || (-1 < (int)((0x20400001U >> (*dataPointer & 0xff)) << 0x1f))))) {\nLAB_08006bc6:\n      *(ushort *)(functionPointer + 3) = ushortVar2 | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006bd0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jumpTableFunction)(0xffffffff);\n      return;\n    }\n    functionPointer[1] = 0;\n    *functionPointer = functionPointer[4];\n    if (((int)((uint)ushortVar2 << 0x13) < 0) && ((temporaryVar != -1 || (*dataPointer == 0)))) {\n      functionPointer[0x15] = temporaryVar;\n    }\n    dataPointer2 = (int *)functionPointer[0xd];\n    *dataPointer = tempVar2;\n    if (dataPointer2 != (int *)0x0) {\n      if (dataPointer2 != functionPointer + 0x11) {\n        organize_data_080061f0(dataPointer);\n      }\n      functionPointer[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08006b66. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jumpTableFunction)();\n      return;\n    }\n  }\nLAB_08006aea:\n                    /* WARNING: Could not recover jumptable at 0x08006aec. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTableFunction)(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006ac0": "process_data_08006ac0",
                "puVar1": "dataPointer",
                "iVar2": "temporaryVar",
                "piVar3": "functionPointer",
                "piVar4": "dataPointer2",
                "uVar5": "ushortVar",
                "uVar6": "ushortVar2",
                "iVar7": "loopCounter",
                "pcVar8": "callbackFunction",
                "iVar9": "loopVar",
                "uVar10": "tempVar2",
                "bVar11": "conditionFlag",
                "uVar12": "returnValue",
                "UNRECOVERED_JUMPTABLE_00": "jumpTableFunction"
            },
            "calling": [
                "FUN_08007090",
                "FUN_0800611c"
            ],
            "called": [
                "FUN_080061f0",
                "FUN_08006f00",
                "FUN_0800573c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006be0": {
            "entrypoint": "0x08006be0",
            "current_name": "process_data_08006be0",
            "code": "\nundefined4 processData_08006be0(uint *input_data,int *output_data)\n\n{\n  undefined4 result;\n  int counter;\n  int *ptr;\n  uint var1;\n  ushort var2;\n  int var3;\n  undefined4 var4;\n  undefined4 var5;\n  code *func_ptr;\n  int var6;\n  uint var7;\n  code *jmp_table;\n  bool bool2;\n  \n  if (output_data[4] != 0) {\n    if ((input_data != (uint *)0x0) && (input_data[6] == 0)) {\n      initialize_data_08006cb4();\n    }\n    if (output_data == &DAT_08007904) {\n      output_data = (int *)input_data[1];\n    }\n    else if (output_data == (int *)&DAT_08007924) {\n      output_data = (int *)input_data[2];\n    }\n    else if (output_data == (int *)&DAT_080078e4) {\n      output_data = (int *)input_data[3];\n    }\n    if (*(short *)(output_data + 3) != 0) {\n      var2 = *(ushort *)(output_data + 3);\n      var1 = (uint)var2;\n      if ((int)(var1 << 0x1c) < 0) {\n        counter = output_data[4];\n        if (counter != 0) {\n          var3 = var1 << 0x1e;\n          bool2 = var3 != 0;\n          if (bool2) {\n            var3 = 0;\n          }\n          var6 = *output_data;\n          if (!bool2) {\n            var3 = output_data[5];\n          }\n          *output_data = counter;\n          output_data[2] = var3;\n          for (var6 = var6 - counter; 0 < var6; var6 = var6 - var3) {\n            var3 = (*(code *)output_data[10])(input_data,output_data[8],counter,var6,var4,var5);\n            if (var3 < 1) {\n              var2 = *(ushort *)(output_data + 3);\n              goto LAB_08006bc6;\n            }\n            counter = counter + var3;\n          }\n        }\n      }\n      else if (((0 < output_data[1]) || (0 < output_data[0x10])) &&\n              (func_ptr = (code *)output_data[0xb], func_ptr != (code *)0x0)) {\n        var7 = *input_data;\n        *input_data = 0;\n        if ((var2 & 0x1000) == 0) {\n          counter = (*func_ptr)(input_data,output_data[8],var1 & 0x1000,1);\n          if ((counter == -1) && (var1 = *input_data, var1 != 0)) {\n            if ((var1 != 0x1d) && (var1 != 0x16)) {\n              *(ushort *)(output_data + 3) = *(ushort *)(output_data + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006b90. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n              result = (*jmp_table)();\n              return result;\n            }\n            *input_data = var7;\n            goto LAB_08006aea;\n          }\n        }\n        else {\n          counter = output_data[0x15];\n        }\n        if (((int)((uint)*(ushort *)(output_data + 3) << 0x1d) < 0) &&\n           (counter = counter - output_data[1], output_data[0xd] != 0)) {\n          counter = counter - output_data[0x10];\n        }\n        counter = (*(code *)output_data[0xb])(input_data,output_data[8],counter,0);\n        var2 = *(ushort *)(output_data + 3);\n        if ((counter == -1) &&\n           ((0x1d < *input_data || (-1 < (int)((0x20400001U >> (*input_data & 0xff)) << 0x1f))))) {\nLAB_08006bc6:\n          *(ushort *)(output_data + 3) = var2 | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006bd0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          result = (*jmp_table)(0xffffffff);\n          return result;\n        }\n        output_data[1] = 0;\n        *output_data = output_data[4];\n        if (((int)((uint)var2 << 0x13) < 0) && ((counter != -1 || (*input_data == 0)))) {\n          output_data[0x15] = counter;\n        }\n        ptr = (int *)output_data[0xd];\n        *input_data = var7;\n        if (ptr != (int *)0x0) {\n          if (ptr != output_data + 0x11) {\n            organize_data_080061f0(input_data);\n          }\n          output_data[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08006b66. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          result = (*jmp_table)();\n          return result;\n        }\n      }\nLAB_08006aea:\n                    /* WARNING: Could not recover jumptable at 0x08006aec. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      result = (*jmp_table)(0);\n      return result;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006be0": "process_data_08006be0",
                "param_1": "input_data",
                "param_2": "output_data",
                "uVar1": "result",
                "iVar2": "counter",
                "piVar3": "ptr",
                "uVar4": "var1",
                "uVar5": "var2",
                "iVar6": "var3",
                "unaff_r4": "var4",
                "unaff_r5": "var5",
                "pcVar7": "func_ptr",
                "iVar8": "var6",
                "uVar9": "var7",
                "UNRECOVERED_JUMPTABLE_00": "jmp_table",
                "bVar10": "bool2"
            },
            "calling": [
                "FUN_08006344"
            ],
            "called": [
                "FUN_08006cb4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": [],
            "code_backup": "\nundefined4 FUN_08006be0(uint *param_1,int *param_2)\n\n{\n  undefined4 uVar1;\n  int iVar2;\n  int *piVar3;\n  uint uVar4;\n  ushort uVar5;\n  int iVar6;\n  undefined4 unaff_r4;\n  undefined4 unaff_r5;\n  code *pcVar7;\n  int iVar8;\n  uint uVar9;\n  code *UNRECOVERED_JUMPTABLE_00;\n  bool bVar10;\n  \n  if (param_2[4] != 0) {\n    if ((param_1 != (uint *)0x0) && (param_1[6] == 0)) {\n      FUNC_08006cb4();\n    }\n    if (param_2 == &DAT_08007904) {\n      param_2 = (int *)param_1[1];\n    }\n    else if (param_2 == (int *)&DAT_08007924) {\n      param_2 = (int *)param_1[2];\n    }\n    else if (param_2 == (int *)&DAT_080078e4) {\n      param_2 = (int *)param_1[3];\n    }\n    if (*(short *)(param_2 + 3) != 0) {\n      uVar5 = *(ushort *)(param_2 + 3);\n      uVar4 = (uint)uVar5;\n      if ((int)(uVar4 << 0x1c) < 0) {\n        iVar2 = param_2[4];\n        if (iVar2 != 0) {\n          iVar6 = uVar4 << 0x1e;\n          bVar10 = iVar6 != 0;\n          if (bVar10) {\n            iVar6 = 0;\n          }\n          iVar8 = *param_2;\n          if (!bVar10) {\n            iVar6 = param_2[5];\n          }\n          *param_2 = iVar2;\n          param_2[2] = iVar6;\n          for (iVar8 = iVar8 - iVar2; 0 < iVar8; iVar8 = iVar8 - iVar6) {\n            iVar6 = (*(code *)param_2[10])(param_1,param_2[8],iVar2,iVar8,unaff_r4,unaff_r5);\n            if (iVar6 < 1) {\n              uVar5 = *(ushort *)(param_2 + 3);\n              goto LAB_08006bc6;\n            }\n            iVar2 = iVar2 + iVar6;\n          }\n        }\n      }\n      else if (((0 < param_2[1]) || (0 < param_2[0x10])) &&\n              (pcVar7 = (code *)param_2[0xb], pcVar7 != (code *)0x0)) {\n        uVar9 = *param_1;\n        *param_1 = 0;\n        if ((uVar5 & 0x1000) == 0) {\n          iVar2 = (*pcVar7)(param_1,param_2[8],uVar4 & 0x1000,1);\n          if ((iVar2 == -1) && (uVar4 = *param_1, uVar4 != 0)) {\n            if ((uVar4 != 0x1d) && (uVar4 != 0x16)) {\n              *(ushort *)(param_2 + 3) = *(ushort *)(param_2 + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006b90. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n              uVar1 = (*UNRECOVERED_JUMPTABLE_00)();\n              return uVar1;\n            }\n            *param_1 = uVar9;\n            goto LAB_08006aea;\n          }\n        }\n        else {\n          iVar2 = param_2[0x15];\n        }\n        if (((int)((uint)*(ushort *)(param_2 + 3) << 0x1d) < 0) &&\n           (iVar2 = iVar2 - param_2[1], param_2[0xd] != 0)) {\n          iVar2 = iVar2 - param_2[0x10];\n        }\n        iVar2 = (*(code *)param_2[0xb])(param_1,param_2[8],iVar2,0);\n        uVar5 = *(ushort *)(param_2 + 3);\n        if ((iVar2 == -1) &&\n           ((0x1d < *param_1 || (-1 < (int)((0x20400001U >> (*param_1 & 0xff)) << 0x1f))))) {\nLAB_08006bc6:\n          *(ushort *)(param_2 + 3) = uVar5 | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006bd0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          uVar1 = (*UNRECOVERED_JUMPTABLE_00)(0xffffffff);\n          return uVar1;\n        }\n        param_2[1] = 0;\n        *param_2 = param_2[4];\n        if (((int)((uint)uVar5 << 0x13) < 0) && ((iVar2 != -1 || (*param_1 == 0)))) {\n          param_2[0x15] = iVar2;\n        }\n        piVar3 = (int *)param_2[0xd];\n        *param_1 = uVar9;\n        if (piVar3 != (int *)0x0) {\n          if (piVar3 != param_2 + 0x11) {\n            organize_data_080061f0(param_1);\n          }\n          param_2[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08006b66. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          uVar1 = (*UNRECOVERED_JUMPTABLE_00)();\n          return uVar1;\n        }\n      }\nLAB_08006aea:\n                    /* WARNING: Could not recover jumptable at 0x08006aec. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      uVar1 = (*UNRECOVERED_JUMPTABLE_00)(0);\n      return uVar1;\n    }\n  }\n  return 0;\n}\n\n"
        },
        "FUN_08006c40": {
            "entrypoint": "0x08006c40",
            "current_name": "initialize_data_structure_08006c40",
            "code": "\nvoid initializeDataStructure_08006c40(undefined4 *dataStructure,undefined2 value1,undefined2 value2)\n\n{\n  *dataStructure = 0;\n  dataStructure[1] = 0;\n  dataStructure[2] = 0;\n  *(undefined2 *)(dataStructure + 3) = value1;\n  dataStructure[0x19] = 0;\n  *(undefined2 *)((int)dataStructure + 0xe) = value2;\n  dataStructure[4] = 0;\n  dataStructure[5] = 0;\n  dataStructure[6] = 0;\n  fill_array_with_080061e0(dataStructure + 0x17,0,8);\n  dataStructure[8] = dataStructure;\n  dataStructure[9] = 0x8006f39;\n  dataStructure[10] = 0x8006f5b;\n  dataStructure[0xb] = 0x8006f93;\n  dataStructure[0xc] = &LAB_08006fb6_1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006c40": "initialize_data_structure_08006c40",
                "param_1": "dataStructure",
                "param_2": "value1",
                "param_3": "value2"
            },
            "calling": [
                "FUN_08006cb4"
            ],
            "called": [
                "FUN_080061e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c88": {
            "entrypoint": "0x08006c88",
            "current_name": "allocate_and_initialize_memory_08006c88",
            "code": "\nundefined4 * allocate_and_initialize_memory_08006c88(undefined4 initial_value,int count)\n\n{\n  undefined4 *memory_ptr;\n  int offset;\n  \n  offset = (count + -1) * 0x68;\n  memory_ptr = (undefined4 *)allocate_and_initialize_memory_08006c88_08006288(initial_value,offset + 0x74);\n  if (memory_ptr != (undefined4 *)0x0) {\n    *memory_ptr = 0;\n    memory_ptr[1] = count;\n    memory_ptr[2] = memory_ptr + 3;\n    fill_array_with_080061e0(memory_ptr + 3,0,offset + 0x68);\n  }\n  return memory_ptr;\n}\n\n",
            "renaming": {
                "FUN_08006c88": "allocate_and_initialize_memory_08006c88",
                "param_1": "initial_value",
                "param_2": "count",
                "puVar1": "memory_ptr",
                "iVar2": "offset"
            },
            "calling": [
                "FUN_08006d14"
            ],
            "called": [
                "FUN_08006288",
                "FUN_080061e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006cb4": {
            "entrypoint": "0x08006cb4",
            "current_name": "initialize_data_08006cb4",
            "code": "\nvoid initialize_data_08006cb4(undefined4 *pointer)\n\n{\n  undefined4 result;\n  undefined4 *data_ptr;\n  \n  if (pointer[6] == 0) {\n    pointer[0x12] = 0;\n    pointer[0x13] = 0;\n    pointer[0x14] = 0;\n    data_ptr = &DAT_200000fc;\n    pointer[10] = &LAB_08006c34_1;\n    if (pointer == &DAT_200000fc) {\n      data_ptr = (undefined4 *)0x1;\n    }\n    if (pointer == &DAT_200000fc) {\n      pointer[6] = data_ptr;\n    }\n    result = initialize_structures();\n    pointer[1] = result;\n    result = initialize_structures(pointer);\n    pointer[2] = result;\n    result = initialize_structures(pointer);\n    pointer[3] = result;\n    initialize_structure(pointer[1],4,0);\n    initialize_structure(pointer[2],9,1);\n    initialize_structure(pointer[3],0x12,2);\n    pointer[6] = 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006cb4": "initialize_data_08006cb4",
                "param_1": "pointer",
                "uVar1": "result",
                "puVar2": "data_ptr",
                "initialize_data_structures_08006d14": "initialize_structures",
                "initialize_data_structure_08006c40": "initialize_structure"
            },
            "calling": [
                "FUN_080068f0",
                "FUN_080069e4",
                "FUN_08006be0",
                "FUN_08006344",
                "FUN_08006394",
                "FUN_08006d14"
            ],
            "called": [
                "FUN_08006c40",
                "FUN_08006d14"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d14": {
            "entrypoint": "0x08006d14",
            "current_name": "initialize_data_structures_08006d14",
            "code": "\nint * initializeDataStructures_08006d14(undefined4 *errorMessage,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int *currentElement;\n  int *nextElement;\n  int **listHead;\n  \n  if (DAT_20000114 == 0) {\n    initialize_data_08006cb4(&DAT_200000fc);\n  }\n  listHead = (int **)&DAT_20000144;\n  do {\n    nextElement = listHead[2];\n    currentElement = listHead[1];\n    while (currentElement = (int *)((int)currentElement + -1), -1 < (int)currentElement) {\n      if (*(short *)(nextElement + 3) == 0) {\n        *(undefined2 *)((int)nextElement + 0xe) = 0xffff;\n        nextElement[0x19] = 0;\n        *(undefined2 *)(nextElement + 3) = 1;\n        *nextElement = 0;\n        nextElement[2] = 0;\n        nextElement[1] = 0;\n        nextElement[4] = 0;\n        nextElement[5] = 0;\n        nextElement[6] = 0;\n        fill_array_with_080061e0(nextElement + 0x17,0,8,1,param4);\n        nextElement[0xd] = 0;\n        nextElement[0xe] = 0;\n        nextElement[0x12] = 0;\n        nextElement[0x13] = 0;\n        return nextElement;\n      }\n      nextElement = nextElement + 0x1a;\n    }\n    if (*listHead == (int *)0x0) {\n      currentElement = (int *)allocate_and_initialize_memory_08006c88(errorMessage,4);\n      *listHead = currentElement;\n      if (currentElement == (int *)0x0) {\n        *errorMessage = 0xc;\n        return (int *)0x0;\n      }\n    }\n    listHead = (int **)*listHead;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08006d14": "initialize_data_structures_08006d14",
                "param_1": "errorMessage",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "piVar1": "currentElement",
                "piVar2": "nextElement",
                "ppiVar3": "listHead"
            },
            "calling": [
                "FUN_08006cb4"
            ],
            "called": [
                "FUN_08006c88",
                "FUN_08006cb4",
                "FUN_080061e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": [],
            "code_backup": "\nint * FUN_08006d14(undefined4 *param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int *piVar1;\n  int *piVar2;\n  int **ppiVar3;\n  \n  if (DAT_20000114 == 0) {\n    FUNC_08006cb4(&DAT_200000fc);\n  }\n  ppiVar3 = (int **)&DAT_20000144;\n  do {\n    piVar2 = ppiVar3[2];\n    piVar1 = ppiVar3[1];\n    while (piVar1 = (int *)((int)piVar1 + -1), -1 < (int)piVar1) {\n      if (*(short *)(piVar2 + 3) == 0) {\n        *(undefined2 *)((int)piVar2 + 0xe) = 0xffff;\n        piVar2[0x19] = 0;\n        *(undefined2 *)(piVar2 + 3) = 1;\n        *piVar2 = 0;\n        piVar2[2] = 0;\n        piVar2[1] = 0;\n        piVar2[4] = 0;\n        piVar2[5] = 0;\n        piVar2[6] = 0;\n        fill_array_with_080061e0(piVar2 + 0x17,0,8,1,param_4);\n        piVar2[0xd] = 0;\n        piVar2[0xe] = 0;\n        piVar2[0x12] = 0;\n        piVar2[0x13] = 0;\n        return piVar2;\n      }\n      piVar2 = piVar2 + 0x1a;\n    }\n    if (*ppiVar3 == (int *)0x0) {\n      piVar1 = (int *)allocate_and_initialize_memory_08006c88(param_1,4);\n      *ppiVar3 = piVar1;\n      if (piVar1 == (int *)0x0) {\n        *param_1 = 0xc;\n        return (int *)0x0;\n      }\n    }\n    ppiVar3 = (int **)*ppiVar3;\n  } while( true );\n}\n\n"
        },
        "FUN_08006dc8": {
            "entrypoint": "0x08006dc8",
            "current_name": "initialize_segment_08006dc8",
            "code": "\nundefined4 initialize_segment_08006dc8(undefined4 arg1,int arg2,undefined4 *arg3,uint *arg4)\n\n{\n  int result;\n  undefined4 segment_flags;\n  undefined stack_variable [4];\n  uint value;\n  \n  if ((*(short *)(arg2 + 0xe) < 0) ||\n     (result = initialize_memory_segment_08007004(arg1,(int)*(short *)(arg2 + 0xe),stack_variable), result < 0)) {\n    *arg4 = 0;\n    if ((int)((uint)*(ushort *)(arg2 + 0xc) << 0x18) < 0) {\n      segment_flags = 0x40;\n      goto LAB_08006e08;\n    }\n  }\n  else {\n    *arg4 = (uint)((value & 0xf000) == 0x2000);\n  }\n  segment_flags = 0x400;\nLAB_08006e08:\n  *arg3 = segment_flags;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006dc8": "initialize_segment_08006dc8",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "iVar1": "result",
                "uVar2": "segment_flags",
                "auStack_4c": "stack_variable",
                "local_48": "value"
            },
            "calling": [
                "FUN_08006e10"
            ],
            "called": [
                "FUN_08007004"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e10": {
            "entrypoint": "0x08006e10",
            "current_name": "initialize_segment_08006e10",
            "code": "\nvoid initializeSegment_08006e10(int param1,int *param2)\n\n{\n  ushort segmentVar;\n  int memoryVar;\n  int localVar1;\n  int *localVar2;\n  \n  if (-1 < (int)((uint)*(ushort *)(param2 + 3) << 0x1e)) {\n    localVar1 = param1;\n    localVar2 = param2;\n    segmentVar = initialize_segment_08006dc8(param1,param2,&localVar1,&localVar2);\n    memoryVar = allocate_and_initialize_memory_08006288(param1,localVar1);\n    if (memoryVar != 0) {\n      *(undefined **)(param1 + 0x28) = &LAB_08006c34_1;\n      *param2 = memoryVar;\n      *(ushort *)(param2 + 3) = *(ushort *)(param2 + 3) | 0x80;\n      param2[4] = memoryVar;\n      param2[5] = localVar1;\n      if ((localVar2 != (int *)0x0) &&\n         (memoryVar = initialize_and_check_application_08007028(param1,(int)*(short *)((int)param2 + 0xe)), memoryVar != 0)) {\n        *(ushort *)(param2 + 3) = *(ushort *)(param2 + 3) & 0xfffc | 1;\n      }\n      *(ushort *)(param2 + 3) = segmentVar | *(ushort *)(param2 + 3);\n      return;\n    }\n    if ((int)(short)*(ushort *)(param2 + 3) << 0x16 < 0) {\n      return;\n    }\n    *(ushort *)(param2 + 3) = *(ushort *)(param2 + 3) & 0xfffc | 2;\n  }\n  *param2 = (int)param2 + 0x47;\n  param2[4] = (int)param2 + 0x47;\n  param2[5] = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006e10": "initialize_segment_08006e10",
                "param_1": "param1",
                "param_2": "param2",
                "uVar1": "segmentVar",
                "iVar2": "memoryVar",
                "local_18": "localVar1",
                "local_14": "localVar2"
            },
            "calling": [
                "FUN_080069e4"
            ],
            "called": [
                "FUN_08006288",
                "FUN_08006dc8",
                "FUN_08007028"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e90": {
            "entrypoint": "0x08006e90",
            "current_name": "find_character_in_string_08006e90",
            "code": "\nchar * find_character_in_string_08006e90(char *string,char character,int length)\n\n{\n  char *current_char;\n  char *current_ptr;\n  \n  current_char = string;\n  do {\n    current_ptr = current_char;\n    if (current_ptr == string + length) {\n      return (char *)0x0;\n    }\n    current_char = current_ptr + 1;\n  } while (*current_ptr != character);\n  return current_ptr;\n}\n\n",
            "renaming": {
                "FUN_08006e90": "find_character_in_string_08006e90",
                "param_1": "string",
                "param_2": "character",
                "param_3": "length",
                "pcVar1": "current_char",
                "pcVar2": "current_ptr"
            },
            "calling": [
                "FUN_080066b0",
                "FUN_08006394"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006eac": {
            "entrypoint": "0x08006eac",
            "current_name": "FUNC_08006eac",
            "code": "\nvoid FUNC_08006eac(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006eac": "FUNC_08006eac"
            },
            "calling": [
                "FUN_08006288",
                "FUN_080061f0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08006eae": {
            "entrypoint": "0x08006eae",
            "current_name": "FUNC_08006eae",
            "code": "\nvoid FUNC_08006eae(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006eae": "FUNC_08006eae"
            },
            "calling": [
                "FUN_08006288",
                "FUN_080061f0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08006f00": {
            "entrypoint": "0x08006f00",
            "current_name": "check_function_result_08006f00",
            "code": "\nint check_function_result_08006f00(uint input_value)\n\n{\n  int *ptr_function_data;\n  undefined4 initialization_flag;\n  int function_result;\n  code *function_ptr;\n  undefined4 register_r4;\n  undefined4 register_r5;\n  undefined4 return_address;\n  undefined4 *ptr_function_data;\n  \n  ptr_function_data = DAT_200000f8;\n  ptr_function_data = &DAT_200000f8;\n  if (0x1f < input_value) {\n    *DAT_200000f8 = 0x16;\n    return -1;\n  }\n  function_result = DAT_200000f8[0x11];\n  if ((function_result != 0) && (function_ptr = *(code **)(function_result + input_value * 4), function_ptr != (code *)0x0)) {\n    if (function_ptr != (code *)0x1) {\n      if (function_ptr == (code *)0xffffffff) {\n        *DAT_200000f8 = 0x16;\n        return 1;\n      }\n      *(undefined4 *)(function_result + input_value * 4) = 0;\n      (*function_ptr)(input_value);\n    }\n    return 0;\n  }\n  initialization_flag = thunk_initialize_flag_08005750(DAT_200000f8);\n  DAT_200006a4 = 0;\n  function_result = initialize_data_08005740(initialization_flag,input_value,input_value,0,ptr_function_data,register_r4,register_r5,return_address);\n  if ((function_result == -1) && (DAT_200006a4 != 0)) {\n    *ptr_function_data = DAT_200006a4;\n  }\n  return function_result;\n}\n\n",
            "renaming": {
                "FUN_08006f00": "check_function_result_08006f00",
                "param_1": "input_value",
                "piVar1": "ptr_function_data",
                "uVar2": "initialization_flag",
                "iVar3": "function_result",
                "pcVar4": "function_ptr",
                "unaff_r4": "register_r4",
                "unaff_r5": "register_r5",
                "in_lr": "return_address",
                "puVar5": "ptr_function_data"
            },
            "calling": [
                "FUN_08006ac0"
            ],
            "called": [
                "FUN_08005740",
                "thunk_FUN_08005750"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_08005750": {
            "entrypoint": "0x08006f34",
            "current_name": "get_return_value_thunk_08005750",
            "code": "\nReturnValue getReturnValue_thunk_08005750(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "thunk_FUN_08005750": "get_return_value_thunk_08005750",
                "undefined4": "ReturnValue"
            },
            "calling": [
                "FUN_08006f00"
            ],
            "called": [
                "FUN_08005750"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006f38": {
            "entrypoint": "0x08006f38",
            "current_name": "update_application_data_08006f38",
            "code": "\nvoid updateApplicationData_08006f38(undefined4 param1,int param2)\n\n{\n  int initializedValue;\n  uint updatedValue;\n  bool isInitialized;\n  \n  initializedValue = initialize_application_0800706c(param1,(int)*(short *)(param2 + 0xe));\n  isInitialized = -1 < initializedValue;\n  if (isInitialized) {\n    updatedValue = *(int *)(param2 + 0x54) + initializedValue;\n  }\n  else {\n    updatedValue = *(ushort *)(param2 + 0xc) & 0xffffefff;\n  }\n  if (isInitialized) {\n    *(uint *)(param2 + 0x54) = updatedValue;\n  }\n  if (!isInitialized) {\n    *(short *)(param2 + 0xc) = (short)updatedValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006f38": "update_application_data_08006f38",
                "param_1": "param1",
                "param_2": "param2",
                "iVar1": "initializedValue",
                "uVar2": "updatedValue",
                "bVar3": "isInitialized"
            },
            "calling": [],
            "called": [
                "FUN_0800706c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006f5a": {
            "entrypoint": "0x08006f5a",
            "current_name": "process_data_08006f5a",
            "code": "\nvoid processData_08006f5a(int *outputArray,int inputArray,undefined4 paramA,undefined4 paramB)\n\n{\n  int result;\n  undefined4 tempVar1;\n  undefined4 tempVar2;\n  undefined4 tempVar3;\n  \n  if ((int)((uint)*(ushort *)(inputArray + 0xc) << 0x17) < 0) {\n    initialize_and_check_08007048(outputArray,(int)*(short *)(inputArray + 0xe),0,2);\n  }\n  *(ushort *)(inputArray + 0xc) = *(ushort *)(inputArray + 0xc) & 0xefff;\n  DAT_200006a4 = 0;\n  result = process_and_check_data_08005730((int)*(short *)(inputArray + 0xe),paramA,paramB,paramB,paramB,tempVar1,\n                       tempVar2,tempVar3);\n  if ((result == -1) && (DAT_200006a4 != 0)) {\n    *outputArray = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006f5a": "process_data_08006f5a",
                "param_1": "outputArray",
                "param_2": "inputArray",
                "param_3": "paramA",
                "param_4": "paramB",
                "iVar1": "result",
                "unaff_r4": "tempVar1",
                "unaff_r5": "tempVar2",
                "in_lr": "tempVar3"
            },
            "calling": [],
            "called": [
                "FUN_08007048",
                "FUN_08005730"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006f92": {
            "entrypoint": "0x08006f92",
            "current_name": "initialize_and_update_flags_08006f92",
            "code": "\nvoid initialize_and_update_flags_08006f92(undefined4 arg1,int arg2)\n\n{\n  int result;\n  ushort updated_flags;\n  bool is_error;\n  \n  result = initialize_and_check_08007048(arg1,(int)*(short *)(arg2 + 0xe));\n  is_error = result == -1;\n  if (is_error) {\n    updated_flags = *(ushort *)(arg2 + 0xc) & 0xefff;\n  }\n  else {\n    *(int *)(arg2 + 0x54) = result;\n    updated_flags = *(ushort *)(arg2 + 0xc) | 0x1000;\n  }\n  if (is_error) {\n    *(ushort *)(arg2 + 0xc) = updated_flags;\n  }\n  if (!is_error) {\n    *(ushort *)(arg2 + 0xc) = updated_flags;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006f92": "initialize_and_update_flags_08006f92",
                "param_1": "arg1",
                "param_2": "arg2",
                "iVar1": "result",
                "uVar2": "updated_flags",
                "bVar3": "is_error"
            },
            "calling": [],
            "called": [
                "FUN_08007048"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007004": {
            "entrypoint": "0x08007004",
            "current_name": "initialize_memory_segment_08007004",
            "code": "\nvoid initialize_memory_segment_08007004(int *result,undefined4 size,undefined4 value,undefined4 flag)\n\n{\n  int status;\n  \n  DAT_200006a4 = 0;\n  status = initialize_memory_segment_08007004_0800571a(size,value,value,0,flag);\n  if ((status == -1) && (DAT_200006a4 != 0)) {\n    *result = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007004": "initialize_memory_segment_08007004",
                "param_1": "result",
                "param_2": "size",
                "param_3": "value",
                "param_4": "flag",
                "iVar1": "status"
            },
            "calling": [
                "FUN_08006dc8"
            ],
            "called": [
                "FUN_0800571a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007028": {
            "entrypoint": "0x08007028",
            "current_name": "initialize_and_check_application_08007028",
            "code": "\nvoid initialize_and_check_application_08007028(int *error_code,undefined4 input_parameter)\n\n{\n  int init_result;\n  \n  DAT_200006a4 = 0;\n  init_result = initialize_application_08005724(input_parameter);\n  if ((init_result == -1) && (DAT_200006a4 != 0)) {\n    *error_code = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007028": "initialize_and_check_application_08007028",
                "param_1": "error_code",
                "param_2": "input_parameter",
                "iVar1": "init_result"
            },
            "calling": [
                "FUN_08006e10"
            ],
            "called": [
                "FUN_08005724"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007048": {
            "entrypoint": "0x08007048",
            "current_name": "initialize_and_check_08007048",
            "code": "\nvoid initialize_and_check_08007048(int *result,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int init_result;\n  \n  DAT_200006a4 = 0;\n  init_result = initialize_08005728(param2,param3,param4,param4,param4);\n  if ((init_result == -1) && (DAT_200006a4 != 0)) {\n    *result = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007048": "initialize_and_check_08007048",
                "param_1": "result",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "init_result"
            },
            "calling": [
                "FUN_08006f92",
                "FUN_08006f5a"
            ],
            "called": [
                "FUN_08005728"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800706c": {
            "entrypoint": "0x0800706c",
            "current_name": "initialize_application_0800706c",
            "code": "\nvoid initialize_application_0800706c(int *result,undefined4 input_1,undefined4 input_2,undefined4 input_3)\n\n{\n  int init_result;\n  \n  DAT_200006a4 = 0;\n  init_result = initialize_application_0800706c_0800572c(input_1,input_2,input_3,input_3,input_3);\n  if ((init_result == -1) && (DAT_200006a4 != 0)) {\n    *result = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800706c": "initialize_application_0800706c",
                "param_1": "result",
                "param_2": "input_1",
                "param_3": "input_2",
                "param_4": "input_3",
                "iVar1": "init_result"
            },
            "calling": [
                "FUN_08006f38"
            ],
            "called": [
                "FUN_0800572c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007090": {
            "entrypoint": "0x08007090",
            "current_name": "process_data_08007090",
            "code": "\nvoid process_data_08007090(void)\n\n{\n  code *jumptable;\n  \n  jumptable = process_data_08007090;\n  process_data_08007090_08006ac0();\n  if (-1 < DAT_2000062c << 0x1f) {\n    DAT_2000062c = 1;\n  }\n  if (-1 < DAT_20000628 << 0x1f) {\n    DAT_20000628 = 1;\n  }\n  if (-1 < DAT_20000624 << 0x1f) {\n    DAT_20000624 = 1;\n  }\n  if (-1 < DAT_20000620 << 0x1f) {\n    DAT_20000620 = 1;\n  }\n  if (-1 < DAT_2000061c << 0x1f) {\n    DAT_2000061c = 1;\n  }\n  if (-1 < DAT_20000618 << 0x1f) {\n    DAT_20000618 = 1;\n  }\n  if (-1 < DAT_20000614 << 0x1f) {\n    DAT_20000614 = 1;\n  }\n  if (-1 < DAT_20000610 << 0x1f) {\n    DAT_20000610 = 1;\n  }\n  if (-1 < DAT_2000060c << 0x1f) {\n    DAT_2000060c = 1;\n  }\n  if (-1 < DAT_20000608 << 0x1f) {\n    DAT_20000608 = 1;\n  }\n  if (-1 < DAT_20000604 << 0x1f) {\n    DAT_20000604 = 1;\n  }\n  if (-1 < DAT_20000600 << 0x1f) {\n    DAT_20000600 = 1;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08007128. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumptable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007090": "process_data_08007090",
                "UNRECOVERED_JUMPTABLE": "jumptable"
            },
            "calling": [
                "FUN_080060d4"
            ],
            "called": [
                "FUN_08006ac0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007328": {
            "entrypoint": "0x08007328",
            "current_name": "FUNC_08007328",
            "code": "\nvoid FUNC_08007328(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007328": "FUNC_08007328"
            },
            "calling": [
                "FUN_0800010c",
                "FUN_08006198"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08007334": {
            "entrypoint": "0x08007334",
            "current_name": "FUNC_08007334",
            "code": "\nvoid FUNC_08007334(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007334": "FUNC_08007334"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        }
    },
    "used_tokens": 186635,
    "layers": [
        [
            "FUN_0800010c",
            "FUN_08000178",
            "FUN_08000190",
            "FUN_08000194",
            "FUN_0800040c",
            "FUN_0800042c",
            "FUN_080006d4",
            "FUN_080008ba",
            "FUN_0800092c",
            "FUN_08000a2c",
            "FUN_08000a58",
            "FUN_08000aa8",
            "FUN_08000ae8",
            "FUN_08001294",
            "FUN_08001cac",
            "FUN_08001cc4",
            "FUN_08001e40",
            "FUN_08001e48",
            "FUN_08001f80",
            "FUN_08002470",
            "FUN_08002494",
            "FUN_080024f8",
            "FUN_08002514",
            "FUN_08002540",
            "FUN_08002560",
            "FUN_08002582",
            "FUN_0800258c",
            "FUN_08002624",
            "FUN_08002810",
            "FUN_0800281e",
            "FUN_08002848",
            "FUN_080028d2",
            "FUN_080028de",
            "FUN_08002ab8",
            "FUN_08002ad8",
            "FUN_08002af8",
            "FUN_08002b84",
            "FUN_08002c10",
            "FUN_08002c54",
            "FUN_08002ca6",
            "FUN_08002db2",
            "FUN_08002efc",
            "FUN_08002f9c",
            "FUN_0800306c",
            "FUN_0800365c",
            "FUN_08003a68",
            "FUN_08003c44",
            "FUN_08004092",
            "FUN_08004110",
            "FUN_0800417c",
            "FUN_08004198",
            "FUN_0800455a",
            "FUN_080045a2",
            "FUN_080047e8",
            "FUN_080047f4",
            "FUN_0800480a",
            "FUN_08004828",
            "FUN_08004848",
            "FUN_08004884",
            "FUN_080049f0",
            "FUN_08004c5e",
            "FUN_08004c8a",
            "FUN_08004cb2",
            "FUN_08004ce2",
            "FUN_08004d06",
            "FUN_08004d18",
            "FUN_08004d40",
            "FUN_08004d44",
            "FUN_08004d90",
            "FUN_08004df4",
            "FUN_08004e70",
            "FUN_080055bc",
            "FUN_080056d8",
            "FUN_08005714",
            "FUN_0800571a",
            "FUN_08005724",
            "FUN_08005728",
            "FUN_0800572c",
            "FUN_0800573c",
            "FUN_08005740",
            "FUN_08005750",
            "FUN_0800591e",
            "FUN_08005a44",
            "FUN_08005b24",
            "FUN_08005b3c",
            "FUN_08005c1c",
            "FUN_08005cb6",
            "FUN_08005cc0",
            "FUN_08005f8c",
            "FUN_08006158",
            "FUN_08006198",
            "FUN_080061e0",
            "FUN_080061f0",
            "FUN_080065c0",
            "FUN_08006e90",
            "thunk_FUN_08005750"
        ],
        [
            "FUN_080004f8",
            "FUN_0800074c",
            "FUN_080009b8",
            "FUN_08000aec",
            "FUN_08001a66",
            "FUN_08001c3c",
            "FUN_08001f84",
            "FUN_080020f0",
            "FUN_08003688",
            "FUN_08003c50",
            "FUN_08003c70",
            "FUN_08003c90",
            "FUN_08003ea0",
            "FUN_080040b0",
            "FUN_0800412c",
            "FUN_080043b4",
            "FUN_08004974",
            "FUN_08004b34",
            "FUN_08004b94",
            "FUN_08004b9e",
            "FUN_08004bb0",
            "FUN_08004c30",
            "FUN_08004c48",
            "FUN_08004c78",
            "FUN_08004ca2",
            "FUN_08004cce",
            "FUN_08004df8",
            "FUN_08004e12",
            "FUN_08004e74",
            "FUN_08004ec4",
            "FUN_08004ef4",
            "FUN_0800548c",
            "FUN_080054b0",
            "FUN_08005568",
            "FUN_080055e0",
            "FUN_08005604",
            "FUN_08005c38",
            "FUN_08005c96",
            "FUN_08005ce8",
            "FUN_08006112",
            "FUN_080066b0",
            "FUN_08006920",
            "FUN_08006c40",
            "FUN_08006f00",
            "FUN_08007004",
            "FUN_08007028",
            "FUN_08007048",
            "FUN_0800706c"
        ],
        [
            "FUN_080009a8",
            "FUN_080009c8",
            "FUN_080009dc",
            "FUN_080009f0",
            "FUN_08001918",
            "FUN_08001c88",
            "FUN_08002004",
            "FUN_0800213c",
            "FUN_0800224c",
            "FUN_08002348",
            "FUN_08002cf2",
            "FUN_08002d1c",
            "FUN_0800316c",
            "FUN_08003ad4",
            "FUN_08003afa",
            "FUN_08003da4",
            "FUN_08003ed8",
            "FUN_08003f18",
            "FUN_08004204",
            "FUN_08004478",
            "FUN_080045fe",
            "FUN_08004618",
            "FUN_0800492c",
            "FUN_08004948",
            "FUN_080054d4",
            "FUN_08005510",
            "FUN_08005848",
            "FUN_08005890",
            "FUN_080058e0",
            "FUN_08005b54",
            "FUN_08005cd4",
            "FUN_08005d42",
            "FUN_08005d8a",
            "FUN_08005fc8",
            "FUN_08006288",
            "FUN_08006ac0",
            "FUN_08006dc8",
            "FUN_08006f38",
            "FUN_08006f92"
        ],
        [
            "FUN_08000a04",
            "FUN_08000a18",
            "FUN_080012a2",
            "FUN_080015b2",
            "FUN_08001814",
            "FUN_08001b48",
            "FUN_08001cd0",
            "FUN_08002384",
            "FUN_080032b4",
            "FUN_08003520",
            "FUN_0800441a",
            "FUN_080046b8",
            "FUN_08004b3c",
            "FUN_08004e20",
            "FUN_0800598a",
            "FUN_08005bb0",
            "FUN_08005d82",
            "FUN_08006c88",
            "FUN_08006e10"
        ],
        [
            "FUN_080012c0",
            "FUN_080012e8",
            "FUN_080015f8",
            "FUN_080016b4",
            "FUN_080018f8",
            "FUN_08001960",
            "FUN_080019f6",
            "FUN_080033b8",
            "FUN_08004a4c",
            "FUN_08004c52",
            "FUN_080057b4",
            "FUN_08005da8"
        ],
        [
            "FUN_08001310",
            "FUN_0800157c",
            "FUN_08001a44",
            "FUN_08001ab0",
            "FUN_08001c32",
            "FUN_08005754",
            "FUN_08005f2c"
        ],
        [
            "FUN_0800134e",
            "FUN_0800135a",
            "FUN_08001366",
            "FUN_0800138e",
            "FUN_08001550",
            "FUN_08001b18",
            "FUN_08005f40",
            "FUN_08005f5e"
        ],
        [
            "FUN_08000cd0",
            "FUN_080013a4"
        ],
        [
            "FUN_080014ba"
        ],
        [
            "FUN_08001510"
        ],
        [
            "FUN_08000b08"
        ],
        [
            "FUN_08007090"
        ],
        [
            "FUN_080060d4"
        ],
        [
            "FUN_080060e4"
        ],
        [
            "FUN_0800282c"
        ],
        [
            "FUN_080069e4",
            "FUN_08006be0",
            "FUN_08006d14"
        ],
        [
            "FUN_08006cb4"
        ],
        [
            "FUN_08006344"
        ],
        [
            "FUN_08006370"
        ],
        [
            "FUN_08006394"
        ],
        [
            "FUN_08006174",
            "FUN_080068f0"
        ],
        [
            "FUN_08004f4c",
            "FUN_0800611c"
        ],
        [
            "FUN_08005384",
            "FUN_08005a68"
        ],
        [
            "FUN_08000bcc",
            "FUN_080053d4"
        ],
        [
            "FUN_08005730",
            "FUN_08005f6c"
        ],
        [
            "FUN_08006f5a"
        ]
    ],
    "locked_functions": []
}