{
    "functions": {
        "FUN_0800010c": {
            "entrypoint": "0x0800010c",
            "current_name": "initialize_flag_0800010c",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08000118) */\n\nundefined4 initializeFlag_0800010c(undefined4 flag)\n\n{\n  if ((char)DAT_20000160 == '\\0') {\n    DAT_20000160._0_1_ = '\\x01';\n  }\n  return flag;\n}\n\n",
            "renaming": {
                "FUN_0800010c": "initialize_flag_0800010c",
                "param_1": "flag"
            },
            "calling": [],
            "called": [
                "FUN_08007328"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000178": {
            "entrypoint": "0x08000178",
            "current_name": "find_null_terminated_string_08000178",
            "code": "\nchar * find_null_terminated_string_08000178(char *string)\n\n{\n  char current_character;\n  char *current_index;\n  char *next_index;\n  \n  next_index = string;\n  do {\n    current_index = next_index + 1;\n    current_character = *next_index;\n    next_index = current_index;\n  } while (current_character != '\\0');\n  return current_index + (-1 - (int)string);\n}\n\n",
            "renaming": {
                "FUN_08000178": "find_null_terminated_string_08000178",
                "param_1": "string",
                "cVar1": "current_character",
                "pcVar2": "current_index",
                "pcVar3": "next_index"
            },
            "calling": [
                "FUN_08005ce8",
                "FUN_08005c96"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000190": {
            "entrypoint": "0x08000190",
            "current_name": "calculate_xor_difference_08000190",
            "code": "\nulonglong calculate_xor_difference_08000190(uint number1,uint number2,uint number3,uint number4)\n\n{\n  int shifted_number2;\n  byte carry_flag;\n  uint temp_value;\n  uint result_1;\n  uint result_2;\n  uint result_3;\n  uint result_4;\n  int shifted_number4;\n  uint shifted_number2;\n  uint temp_value_2;\n  uint temp_result_1;\n  uint temp_result_2;\n  bool is_condition_met;\n  bool is_condition_met_2;\n  bool is_condition_met_3;\n  \n  result_3 = number4 ^ 0x80000000;\n  shifted_number2 = number2 << 1;\n  number4 = number4 << 1;\n  is_condition_met = ((number2 ^ result_3) & 0x7fffffff) == 0;\n  is_condition_met_2 = is_condition_met && number1 == number3;\n  if (!is_condition_met || number1 != number3) {\n    is_condition_met_2 = (shifted_number2 | number1) == 0;\n  }\n  if (!is_condition_met_2) {\n    is_condition_met_2 = (number4 | number3) == 0;\n  }\n  shifted_number4 = (int)shifted_number2 >> 0x15;\n  if (!is_condition_met_2) {\n    is_condition_met_2 = shifted_number4 == -1;\n  }\n  shifted_number2 = (int)number4 >> 0x15;\n  if (!is_condition_met_2) {\n    is_condition_met_2 = shifted_number2 == -1;\n  }\n  if (is_condition_met_2) {\n    if (shifted_number4 == -1 || shifted_number2 == -1) {\n      shifted_number2 = result_3;\n      temp_result_1 = number3;\n      if (shifted_number4 == -1) {\n        shifted_number2 = number2;\n        temp_result_1 = number1;\n      }\n      if (shifted_number4 != -1 || shifted_number2 != -1) {\n        number3 = temp_result_1;\n        result_3 = shifted_number2;\n      }\n      is_condition_met_2 = (temp_result_1 | shifted_number2 << 0xc) == 0;\n      if (is_condition_met_2) {\n        is_condition_met_2 = (number3 | result_3 << 0xc) == 0;\n      }\n      if (is_condition_met_2) {\n        is_condition_met_2 = shifted_number2 == result_3;\n      }\n      if (!is_condition_met_2) {\n        shifted_number2 = shifted_number2 | 0x80000;\n      }\n      return CONCAT44(shifted_number2,temp_result_1);\n    }\n    if (((number2 ^ result_3) & 0x7fffffff) != 0 || number1 != number3) {\n      if ((shifted_number2 | number1) == 0) {\n        number1 = number3;\n        number2 = result_3;\n      }\n      return CONCAT44(number2,number1);\n    }\n    if (number2 != result_3) {\n      return 0;\n    }\n    if (shifted_number2 >> 0x15 == 0) {\n      is_condition_met_2 = (number1 & 0x80000000) != 0;\n      result_3 = number2 * 2 + (uint)is_condition_met_2;\n      if (CARRY4(number2,number2) || CARRY4(number2 * 2,(uint)is_condition_met_2)) {\n        result_3 = result_3 | 0x80000000;\n      }\n      return CONCAT44(result_3,number1 << 1);\n    }\n    if (shifted_number2 < 0xffc00000) {\n      return CONCAT44(number2 + 0x100000,number1);\n    }\n    number2 = number2 & 0x80000000;\nLAB_080003d4:\n    return (ulonglong)(number2 | 0x7ff00000) << 0x20;\n  }\n  shifted_number2 = shifted_number2 >> 0x15;\n  number4 = number4 >> 0x15;\n  temp_result_1 = number4 - shifted_number2;\n  is_condition_met_2 = temp_result_1 != 0;\n  if (number4 < shifted_number2) {\n    temp_result_1 = -temp_result_1;\n  }\n  temp_value_2 = number1;\n  result_4 = number2;\n  if (is_condition_met_2 && shifted_number2 <= number4) {\n    shifted_number2 = shifted_number2 + temp_result_1;\n    temp_value_2 = number3;\n    result_4 = result_3;\n    number3 = number1;\n    result_3 = number2;\n  }\n  if (0x36 < temp_result_1) {\n    return CONCAT44(result_4,temp_value_2);\n  }\n  result_1 = result_4 & 0xfffff | 0x100000;\n  if ((result_4 & 0x80000000) != 0) {\n    is_condition_met_2 = temp_value_2 != 0;\n    temp_value_2 = -temp_value_2;\n    result_1 = -result_1 - (uint)is_condition_met_2;\n  }\n  result_4 = result_3 & 0xfffff | 0x100000;\n  if ((result_3 & 0x80000000) != 0) {\n    is_condition_met_2 = number3 != 0;\n    number3 = -number3;\n    result_4 = -result_4 - (uint)is_condition_met_2;\n  }\n  if (shifted_number2 == temp_result_1) {\n    result_4 = result_4 ^ 0x100000;\n    if (shifted_number2 == 0) {\n      result_1 = result_1 ^ 0x100000;\n      shifted_number2 = 1;\n    }\n    else {\n      temp_result_1 = temp_result_1 - 1;\n    }\n  }\n  result_3 = -temp_result_1 + 0x20;\n  if ((int)temp_result_1 < 0x21) {\n    temp_result_2 = number3 << (result_3 & 0xff);\n    number3 = number3 >> (temp_result_1 & 0xff);\n    temp_value = temp_value_2 + number3;\n    result_2 = result_4 << (result_3 & 0xff);\n    result_3 = temp_value + result_2;\n    result_1 = result_1 + CARRY4(temp_value_2,number3) + ((int)result_4 >> (temp_result_1 & 0xff)) +\n            (uint)CARRY4(temp_value,result_2);\n  }\n  else {\n    temp_result_2 = result_4 << (-temp_result_1 + 0x40 & 0xff);\n    if (number3 != 0) {\n      temp_result_2 = temp_result_2 | 2;\n    }\n    result_4 = (int)result_4 >> (temp_result_1 - 0x20 & 0xff);\n    result_3 = temp_value_2 + result_4;\n    result_1 = result_1 + ((int)result_4 >> 0x1f) + (uint)CARRY4(temp_value_2,result_4);\n  }\n  number2 = result_1 & 0x80000000;\n  temp_result_1 = result_1;\n  if ((int)result_1 < 0) {\n    is_condition_met_2 = temp_result_2 == 0;\n    temp_result_2 = -temp_result_2;\n    temp_result_1 = -result_3;\n    result_3 = -(uint)!is_condition_met_2 - result_3;\n    temp_result_1 = -(uint)(is_condition_met_2 <= temp_result_1) - result_1;\n  }\n  if (0xfffff < temp_result_1) {\n    temp_value_2 = shifted_number2 - 1;\n    if (0x1fffff < temp_result_1) {\n      temp_value_2 = temp_result_1 & 1;\n      temp_result_1 = temp_result_1 >> 1;\n      carry_flag = (byte)result_3;\n      result_3 = (uint)(temp_value_2 != 0) << 0x1f | result_3 >> 1;\n      temp_result_2 = (uint)(carry_flag & 1) << 0x1f | temp_result_2 >> 1;\n      temp_value_2 = shifted_number2;\n      if (0xffbfffff < shifted_number2 * 0x200000) goto LAB_080003d4;\n    }\nLAB_080002a0:\n    is_condition_met_2 = 0x7fffffff < temp_result_2;\n    if (temp_result_2 == 0x80000000) {\n      is_condition_met_2 = (result_3 & 1) != 0;\n    }\n    return CONCAT44(temp_result_1 + temp_value_2 * 0x100000 + (uint)CARRY4(result_3,(uint)is_condition_met_2) | number2,\n                    result_3 + is_condition_met_2);\n  }\n  is_condition_met = (temp_result_2 & 0x80000000) != 0;\n  temp_result_2 = temp_result_2 << 1;\n  temp_value_2 = result_3 * 2;\n  is_condition_met_2 = CARRY4(result_3,result_3);\n  result_3 = result_3 * 2 + (uint)is_condition_met;\n  temp_result_1 = temp_result_1 * 2 + (uint)(is_condition_met_2 || CARRY4(temp_value_2,(uint)is_condition_met));\n  temp_value_2 = shifted_number2 - 2;\n  if ((temp_result_1 & 0x100000) != 0) goto LAB_080002a0;\n  result_4 = result_3;\n  shifted_number2 = temp_result_1;\n  if (temp_result_1 == 0) {\n    result_4 = 0;\n    shifted_number2 = result_3;\n  }\n  shifted_number4 = LZCOUNT(shifted_number2);\n  if (temp_result_1 == 0) {\n    shifted_number4 = shifted_number4 + 0x20;\n  }\n  temp_result_1 = shifted_number4 - 0xb;\n  is_condition_met_3 = SBORROW4(temp_result_1,0x20);\n  result_3 = shifted_number4 - 0x2b;\n  is_condition_met_2 = (int)result_3 < 0;\n  is_condition_met = result_3 == 0;\n  if ((int)temp_result_1 < 0x20) {\n    is_condition_met_3 = SCARRY4(result_3,0xc);\n    shifted_number4 = shifted_number4 + -0x1f;\n    is_condition_met_2 = shifted_number4 < 0;\n    is_condition_met = shifted_number4 == 0;\n    result_3 = temp_result_1;\n    if (!is_condition_met && is_condition_met_2 == is_condition_met_3) {\n      result_4 = shifted_number2 << (temp_result_1 & 0xff);\n      shifted_number2 = shifted_number2 >> (0xcU - shifted_number4 & 0xff);\n      goto LAB_08000318;\n    }\n  }\n  if (is_condition_met || is_condition_met_2 != is_condition_met_3) {\n    temp_result_2 = 0x20 - result_3;\n  }\n  shifted_number2 = shifted_number2 << (result_3 & 0xff);\n  if (is_condition_met || is_condition_met_2 != is_condition_met_3) {\n    shifted_number2 = shifted_number2 | result_4 >> (temp_result_2 & 0xff);\n  }\n  if (is_condition_met || is_condition_met_2 != is_condition_met_3) {\n    result_4 = result_4 << (result_3 & 0xff);\n  }\nLAB_08000318:\n  if ((int)temp_result_1 <= (int)temp_value_2) {\n    return CONCAT44(shifted_number2 + (temp_value_2 - temp_result_1) * 0x100000 | number2,result_4);\n  }\n  result_3 = ~(temp_value_2 - temp_result_1);\n  if ((int)result_3 < 0x1f) {\n    shifted_number4 = result_3 - 0x13;\n    if (shifted_number4 != 0 && shifted_number4 < 0 == SCARRY4(result_3 - 0x1f,0xc)) {\n      return CONCAT44(result_1,result_4 >> (0x20 - (0xcU - shifted_number4) & 0xff) | shifted_number2 << (0xcU - shifted_number4 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    result_3 = result_3 + 1;\n    return CONCAT44(number2 | shifted_number2 >> (result_3 & 0xff),\n                    result_4 >> (result_3 & 0xff) | shifted_number2 << (0x20 - result_3 & 0xff));\n  }\n  return CONCAT44(result_1,shifted_number2 >> (result_3 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_08000190": "calculate_xor_difference_08000190",
                "param_1": "number1",
                "param_2": "number2",
                "param_3": "number3",
                "param_4": "number4",
                "iVar1": "shifted_number2",
                "bVar2": "carry_flag",
                "uVar3": "temp_value",
                "uVar4": "result_1",
                "uVar5": "result_2",
                "uVar6": "result_3",
                "uVar7": "result_4",
                "iVar8": "shifted_number4",
                "uVar9": "shifted_number2",
                "uVar10": "temp_value_2",
                "uVar11": "temp_result_1",
                "uVar12": "temp_result_2",
                "bVar13": "is_condition_met",
                "bVar14": "is_condition_met_2",
                "bVar15": "is_condition_met_3"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08001814",
                "FUN_080016b4",
                "FUN_08001a66"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000194": {
            "entrypoint": "0x08000194",
            "current_name": "perform_unsigned_division_08000194",
            "code": "\nulonglong performUnsignedDivision_08000194(uint dividend,uint divisor,uint quotient,uint remainder)\n\n{\n  int bitShift;\n  byte carry;\n  uint dividendBits;\n  uint quotientBits;\n  uint remainderBits;\n  int shiftedBits;\n  uint dividendShifted;\n  uint quotientShifted;\n  uint carryExpanded;\n  uint quotientTemp;\n  uint remainderTemp;\n  uint quotientCombined;\n  bool isDividendNegative;\n  bool isDivisorNegative;\n  bool isDivisorEqualZero;\n  \n  dividendShifted = divisor << 1;\n  carryExpanded = remainder << 1;\n  isDividendNegative = ((divisor ^ remainder) & 0x7fffffff) == 0;\n  isDivisorNegative = isDividendNegative && dividend == quotient;\n  if (!isDividendNegative || dividend != quotient) {\n    isDivisorNegative = (dividendShifted | dividend) == 0;\n  }\n  if (!isDivisorNegative) {\n    isDivisorNegative = (carryExpanded | quotient) == 0;\n  }\n  shiftedBits = (int)dividendShifted >> 0x15;\n  if (!isDivisorNegative) {\n    isDivisorNegative = shiftedBits == -1;\n  }\n  bitShift = (int)carryExpanded >> 0x15;\n  if (!isDivisorNegative) {\n    isDivisorNegative = bitShift == -1;\n  }\n  if (isDivisorNegative) {\n    if (shiftedBits == -1 || bitShift == -1) {\n      carryExpanded = remainder;\n      dividendShifted = quotient;\n      if (shiftedBits == -1) {\n        carryExpanded = divisor;\n        dividendShifted = dividend;\n      }\n      if (shiftedBits != -1 || bitShift != -1) {\n        quotient = dividendShifted;\n        remainder = carryExpanded;\n      }\n      isDivisorNegative = (dividendShifted | carryExpanded << 0xc) == 0;\n      if (isDivisorNegative) {\n        isDivisorNegative = (quotient | remainder << 0xc) == 0;\n      }\n      if (isDivisorNegative) {\n        isDivisorNegative = carryExpanded == remainder;\n      }\n      if (!isDivisorNegative) {\n        carryExpanded = carryExpanded | 0x80000;\n      }\n      return CONCAT44(carryExpanded,dividendShifted);\n    }\n    if (((divisor ^ remainder) & 0x7fffffff) != 0 || dividend != quotient) {\n      if ((dividendShifted | dividend) == 0) {\n        dividend = quotient;\n        divisor = remainder;\n      }\n      return CONCAT44(divisor,dividend);\n    }\n    if (divisor != remainder) {\n      return 0;\n    }\n    if (dividendShifted >> 0x15 == 0) {\n      isDivisorNegative = (dividend & 0x80000000) != 0;\n      carryExpanded = divisor * 2 + (uint)isDivisorNegative;\n      if (CARRY4(divisor,divisor) || CARRY4(divisor * 2,(uint)isDivisorNegative)) {\n        carryExpanded = carryExpanded | 0x80000000;\n      }\n      return CONCAT44(carryExpanded,dividend << 1);\n    }\n    if (dividendShifted < 0xffc00000) {\n      return CONCAT44(divisor + 0x100000,dividend);\n    }\n    divisor = divisor & 0x80000000;\nLAB_080003d4:\n    return (ulonglong)(divisor | 0x7ff00000) << 0x20;\n  }\n  dividendShifted = dividendShifted >> 0x15;\n  carryExpanded = carryExpanded >> 0x15;\n  quotientTemp = carryExpanded - dividendShifted;\n  isDivisorNegative = quotientTemp != 0;\n  if (carryExpanded < dividendShifted) {\n    quotientTemp = -quotientTemp;\n  }\n  quotientShifted = dividend;\n  remainderBits = divisor;\n  if (isDivisorNegative && dividendShifted <= carryExpanded) {\n    dividendShifted = dividendShifted + quotientTemp;\n    quotientShifted = quotient;\n    remainderBits = remainder;\n    quotient = dividend;\n    remainder = divisor;\n  }\n  if (0x36 < quotientTemp) {\n    return CONCAT44(remainderBits,quotientShifted);\n  }\n  carryExpanded = remainderBits & 0xfffff | 0x100000;\n  if ((remainderBits & 0x80000000) != 0) {\n    isDivisorNegative = quotientShifted != 0;\n    quotientShifted = -quotientShifted;\n    carryExpanded = -carryExpanded - (uint)isDivisorNegative;\n  }\n  remainderBits = remainder & 0xfffff | 0x100000;\n  if ((remainder & 0x80000000) != 0) {\n    isDivisorNegative = quotient != 0;\n    quotient = -quotient;\n    remainderBits = -remainderBits - (uint)isDivisorNegative;\n  }\n  if (dividendShifted == quotientTemp) {\n    remainderBits = remainderBits ^ 0x100000;\n    if (dividendShifted == 0) {\n      carryExpanded = carryExpanded ^ 0x100000;\n      dividendShifted = 1;\n    }\n    else {\n      quotientTemp = quotientTemp - 1;\n    }\n  }\n  quotientCombined = -quotientTemp + 0x20;\n  if ((int)quotientTemp < 0x21) {\n    remainderTemp = quotient << (quotientCombined & 0xff);\n    quotient = quotient >> (quotientTemp & 0xff);\n    dividendBits = quotientShifted + quotient;\n    quotientBits = remainderBits << (quotientCombined & 0xff);\n    quotientCombined = dividendBits + quotientBits;\n    carryExpanded = carryExpanded + CARRY4(quotientShifted,quotient) + ((int)remainderBits >> (quotientTemp & 0xff)) +\n            (uint)CARRY4(dividendBits,quotientBits);\n  }\n  else {\n    remainderTemp = remainderBits << (-quotientTemp + 0x40 & 0xff);\n    if (quotient != 0) {\n      remainderTemp = remainderTemp | 2;\n    }\n    remainderBits = (int)remainderBits >> (quotientTemp - 0x20 & 0xff);\n    quotientCombined = quotientShifted + remainderBits;\n    carryExpanded = carryExpanded + ((int)remainderBits >> 0x1f) + (uint)CARRY4(quotientShifted,remainderBits);\n  }\n  divisor = carryExpanded & 0x80000000;\n  quotientTemp = carryExpanded;\n  if ((int)carryExpanded < 0) {\n    isDivisorNegative = remainderTemp == 0;\n    remainderTemp = -remainderTemp;\n    quotientTemp = -quotientCombined;\n    quotientCombined = -(uint)!isDivisorNegative - quotientCombined;\n    quotientTemp = -(uint)(isDivisorNegative <= quotientTemp) - carryExpanded;\n  }\n  if (0xfffff < quotientTemp) {\n    quotientShifted = dividendShifted - 1;\n    if (0x1fffff < quotientTemp) {\n      carryExpanded = quotientTemp & 1;\n      quotientTemp = quotientTemp >> 1;\n      carry = (byte)quotientCombined;\n      quotientCombined = (uint)(carryExpanded != 0) << 0x1f | quotientCombined >> 1;\n      remainderTemp = (uint)(carry & 1) << 0x1f | remainderTemp >> 1;\n      quotientShifted = dividendShifted;\n      if (0xffbfffff < dividendShifted * 0x200000) goto LAB_080003d4;\n    }\nLAB_080002a0:\n    isDivisorNegative = 0x7fffffff < remainderTemp;\n    if (remainderTemp == 0x80000000) {\n      isDivisorNegative = (quotientCombined & 1) != 0;\n    }\n    return CONCAT44(quotientTemp + quotientShifted * 0x100000 + (uint)CARRY4(quotientCombined,(uint)isDivisorNegative) | divisor,\n                    quotientCombined + isDivisorNegative);\n  }\n  isDividendNegative = (remainderTemp & 0x80000000) != 0;\n  remainderTemp = remainderTemp << 1;\n  quotientShifted = quotientCombined * 2;\n  isDivisorNegative = CARRY4(quotientCombined,quotientCombined);\n  quotientCombined = quotientCombined * 2 + (uint)isDividendNegative;\n  quotientTemp = quotientTemp * 2 + (uint)(isDivisorNegative || CARRY4(quotientShifted,(uint)isDividendNegative));\n  quotientShifted = dividendShifted - 2;\n  if ((quotientTemp & 0x100000) != 0) goto LAB_080002a0;\n  remainderBits = quotientCombined;\n  dividendShifted = quotientTemp;\n  if (quotientTemp == 0) {\n    remainderBits = 0;\n    dividendShifted = quotientCombined;\n  }\n  shiftedBits = LZCOUNT(dividendShifted);\n  if (quotientTemp == 0) {\n    shiftedBits = shiftedBits + 0x20;\n  }\n  quotientCombined = shiftedBits - 0xb;\n  isDivisorEqualZero = SBORROW4(quotientCombined,0x20);\n  quotientTemp = shiftedBits - 0x2b;\n  isDivisorNegative = (int)quotientTemp < 0;\n  isDividendNegative = quotientTemp == 0;\n  if ((int)quotientCombined < 0x20) {\n    isDivisorEqualZero = SCARRY4(quotientTemp,0xc);\n    shiftedBits = shiftedBits + -0x1f;\n    isDivisorNegative = shiftedBits < 0;\n    isDividendNegative = shiftedBits == 0;\n    quotientTemp = quotientCombined;\n    if (!isDividendNegative && isDivisorNegative == isDivisorEqualZero) {\n      remainderBits = dividendShifted << (quotientCombined & 0xff);\n      dividendShifted = dividendShifted >> (0xcU - shiftedBits & 0xff);\n      goto LAB_08000318;\n    }\n  }\n  if (isDividendNegative || isDivisorNegative != isDivisorEqualZero) {\n    remainderTemp = 0x20 - quotientTemp;\n  }\n  dividendShifted = dividendShifted << (quotientTemp & 0xff);\n  if (isDividendNegative || isDivisorNegative != isDivisorEqualZero) {\n    dividendShifted = dividendShifted | remainderBits >> (remainderTemp & 0xff);\n  }\n  if (isDividendNegative || isDivisorNegative != isDivisorEqualZero) {\n    remainderBits = remainderBits << (quotientTemp & 0xff);\n  }\nLAB_08000318:\n  if ((int)quotientCombined <= (int)quotientShifted) {\n    return CONCAT44(dividendShifted + (quotientShifted - quotientCombined) * 0x100000 | divisor,remainderBits);\n  }\n  quotientTemp = ~(quotientShifted - quotientCombined);\n  if ((int)quotientTemp < 0x1f) {\n    shiftedBits = quotientTemp - 0x13;\n    if (shiftedBits != 0 && shiftedBits < 0 == SCARRY4(quotientTemp - 0x1f,0xc)) {\n      return CONCAT44(carryExpanded,remainderBits >> (0x20 - (0xcU - shiftedBits) & 0xff) | dividendShifted << (0xcU - shiftedBits & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    quotientTemp = quotientTemp + 1;\n    return CONCAT44(divisor | dividendShifted >> (quotientTemp & 0xff),\n                    remainderBits >> (quotientTemp & 0xff) | dividendShifted << (0x20 - quotientTemp & 0xff));\n  }\n  return CONCAT44(carryExpanded,dividendShifted >> (quotientTemp - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_08000194": "perform_unsigned_division_08000194",
                "param_1": "dividend",
                "param_2": "divisor",
                "param_3": "quotient",
                "param_4": "remainder",
                "iVar1": "bitShift",
                "bVar2": "carry",
                "uVar3": "dividendBits",
                "uVar4": "quotientBits",
                "uVar5": "remainderBits",
                "iVar6": "shiftedBits",
                "uVar7": "dividendShifted",
                "uVar8": "quotientShifted",
                "uVar9": "carryExpanded",
                "uVar10": "quotientTemp",
                "uVar11": "remainderTemp",
                "uVar12": "quotientCombined",
                "bVar13": "isDividendNegative",
                "bVar14": "isDivisorNegative",
                "bVar15": "isDivisorEqualZero"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_080015f8",
                "FUN_08000cd0",
                "FUN_080016b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800040c": {
            "entrypoint": "0x0800040c",
            "current_name": "extract_bits_from_param_0800040c",
            "code": "\nulonglong extract_bits_from_param_0800040c(uint input)\n\n{\n  uint upper_bits;\n  uint lower_bits;\n  int num_of_bits;\n  uint shift_amount;\n  uint temp_var_1;\n  bool check_1;\n  bool check_2;\n  bool check_3;\n  \n  if (input == 0) {\n    return 0;\n  }\n  upper_bits = 0;\n  num_of_bits = leading_zeros_count(input);\n  shift_amount = num_of_bits + 0x15;\n  check_3 = signed_borrow_check(shift_amount,0x20);\n  lower_bits = num_of_bits - 0xb;\n  check_1 = (int)lower_bits < 0;\n  check_2 = lower_bits == 0;\n  if (shift_amount < 0x20) {\n    check_3 = signed_carry_check(lower_bits,0xc);\n    check_1 = false;\n    check_2 = num_of_bits + 1 == 0;\n    lower_bits = shift_amount;\n    if (!check_2 && check_3 == false) {\n      upper_bits = input << shift_amount;\n      input = input >> (0xcU - (num_of_bits + 1) & 0xff);\n      goto bit_extraction;\n    }\n  }\n  if (check_2 || check_1 != check_3) {\n    temp_var_1 = 0x20 - lower_bits;\n  }\n  input = input << (lower_bits & 0xff);\n  if (check_2 || check_1 != check_3) {\n    input = input | 0U >> (temp_var_1 & 0xff);\n  }\n  if (check_2 || check_1 != check_3) {\n    upper_bits = 0 << (lower_bits & 0xff);\n  }\nbit_extraction:\n  if (shift_amount < 0x433) {\n    return concatenate(input + (0x432 - shift_amount) * 0x100000,upper_bits);\n  }\n  lower_bits = ~(0x432 - shift_amount);\n  if (0x1e < (int)lower_bits) {\n    return (ulonglong)(input >> (lower_bits - 0x1f & 0xff));\n  }\n  num_of_bits = lower_bits - 0x13;\n  if (num_of_bits == 0 || num_of_bits < 0 != signed_carry_check(lower_bits - 0x1f,0xc)) {\n    lower_bits = lower_bits + 1;\n    return concatenate(input >> (lower_bits & 0xff),\n                    upper_bits >> (lower_bits & 0xff) | input << (0x20 - lower_bits & 0xff));\n  }\n  return (ulonglong)(upper_bits >> (0x20 - (0xcU - num_of_bits) & 0xff) | input << (0xcU - num_of_bits & 0xff));\n}\n\n",
            "renaming": {
                "FUN_0800040c": "extract_bits_from_param_0800040c",
                "param_1": "input",
                "uVar1": "upper_bits",
                "uVar2": "lower_bits",
                "iVar3": "num_of_bits",
                "uVar4": "shift_amount",
                "in_r12": "temp_var_1",
                "bVar5": "check_1",
                "bVar6": "check_2",
                "bVar7": "check_3",
                "LAB_08000318": "bit_extraction",
                "CONCAT44": "concatenate",
                "SCARRY4": "signed_carry_check",
                "SBORROW4": "signed_borrow_check",
                "LZCOUNT": "leading_zeros_count"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_080015f8",
                "FUN_08000cd0",
                "FUN_08001814",
                "FUN_08001918"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800042c": {
            "entrypoint": "0x0800042c",
            "current_name": "shift_and_concat_0800042c",
            "code": "\nulonglong shiftAndConcat_0800042c(uint input)\n\n{\n  uint lowerBits;\n  uint positiveInput;\n  uint shiftAmount;\n  int count;\n  uint finalCount;\n  uint signBit;\n  uint remainingBits;\n  bool isNegative;\n  bool isZero;\n  bool isOverflow;\n  \n  if (input == 0) {\n    return 0;\n  }\n  signBit = input & 0x80000000;\n  positiveInput = input;\n  if ((int)signBit < 0) {\n    positiveInput = -input;\n  }\n  lowerBits = 0;\n  count = LZCOUNT(positiveInput);\n  finalCount = count + 0x15;\n  isOverflow = SBORROW4(finalCount,0x20);\n  shiftAmount = count - 0xb;\n  isNegative = (int)shiftAmount < 0;\n  isZero = shiftAmount == 0;\n  if (finalCount < 0x20) {\n    isOverflow = SCARRY4(shiftAmount,0xc);\n    isNegative = false;\n    isZero = count + 1 == 0;\n    shiftAmount = finalCount;\n    if (!isZero && isOverflow == false) {\n      lowerBits = positiveInput << finalCount;\n      positiveInput = positiveInput >> (0xcU - (count + 1) & 0xff);\n      goto LAB_08000318;\n    }\n  }\n  if (isZero || isNegative != isOverflow) {\n    remainingBits = 0x20 - shiftAmount;\n  }\n  positiveInput = positiveInput << (shiftAmount & 0xff);\n  if (isZero || isNegative != isOverflow) {\n    positiveInput = positiveInput | 0U >> (remainingBits & 0xff);\n  }\n  if (isZero || isNegative != isOverflow) {\n    lowerBits = 0 << (shiftAmount & 0xff);\n  }\nLAB_08000318:\n  if (finalCount < 0x433) {\n    return CONCAT44(positiveInput + (0x432 - finalCount) * 0x100000 | signBit,lowerBits);\n  }\n  shiftAmount = ~(0x432 - finalCount);\n  if (0x1e < (int)shiftAmount) {\n    return CONCAT44(input,positiveInput >> (shiftAmount - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  count = shiftAmount - 0x13;\n  if (count == 0 || count < 0 != SCARRY4(shiftAmount - 0x1f,0xc)) {\n    shiftAmount = shiftAmount + 1;\n    return CONCAT44(signBit | positiveInput >> (shiftAmount & 0xff),\n                    lowerBits >> (shiftAmount & 0xff) | positiveInput << (0x20 - shiftAmount & 0xff));\n  }\n  return CONCAT44(input,lowerBits >> (0x20 - (0xcU - count) & 0xff) | positiveInput << (0xcU - count & 0xff))\n         & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800042c": "shift_and_concat_0800042c",
                "param_1": "input",
                "uVar1": "lowerBits",
                "uVar2": "positiveInput",
                "uVar3": "shiftAmount",
                "iVar4": "count",
                "uVar5": "finalCount",
                "uVar6": "signBit",
                "in_r12": "remainingBits",
                "bVar7": "isNegative",
                "bVar8": "isZero",
                "bVar9": "isOverflow"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0",
                "FUN_08001918"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080004f8": {
            "entrypoint": "0x080004f8",
            "current_name": "calculate_product_080004f8",
            "code": "\nulonglong calculateProduct_080004f8(undefined4 input1,uint input2,uint var4,uint var3)\n\n{\n  ulonglong tempVar1;\n  longlong tempVar2;\n  uint var2;\n  uint var1;\n  int tempVar5;\n  uint var2;\n  uint tempVar7;\n  uint maxValue;\n  uint tempVar9;\n  bool flag1;\n  bool flag2;\n  bool var1Flag;\n  ulonglong concatenatedValue;\n  \n  concatenatedValue = CONCAT44(input2,input1);\n  maxValue = 0x7ff;\n  var1 = input2 >> 0x14 & 0x7ff;\n  flag1 = var1 == 0;\n  if (!flag1) {\n    tempVar7 = var3 >> 0x14 & 0x7ff;\n    flag1 = tempVar7 == 0;\n  }\n  if (!flag1) {\n    flag1 = var1 == 0x7ff;\n  }\n  if (!flag1) {\n    flag1 = tempVar7 == 0x7ff;\n  }\n  if (flag1) {\n    concatenatedValue = FUN_080006d4();\n  }\n  var2 = (uint)(concatenatedValue >> 0x20);\n  tempVar5 = var1 + tempVar7;\n  var1 = var2 ^ var3;\n  var2 = var2 & ~(maxValue << 0x15);\n  var3 = var3 & ~(maxValue << 0x15);\n  flag1 = ((uint)concatenatedValue | var2 << 0xc) == 0;\n  if (!flag1) {\n    flag1 = (var4 | var3 << 0xc) == 0;\n  }\n  var2 = var2 | 0x100000;\n  var3 = var3 | 0x100000;\n  if (flag1) {\n    var4 = (uint)concatenatedValue | var4;\n    var3 = (var1 & 0x80000000 | var2) ^ var3;\n    var1 = maxValue >> 1;\n    var1Flag = SBORROW4(tempVar5,var1);\n    var2 = tempVar5 - var1;\n    flag1 = var2 == 0;\n    var2 = var2;\n    if (!flag1 && (int)var1 <= tempVar5) {\n      var1Flag = SBORROW4(maxValue,var2);\n      var2 = maxValue - var2;\n      flag1 = maxValue == var2;\n    }\n    if (!flag1 && (int)var2 < 0 == var1Flag) {\n      var3 = var3 | var2 * 0x100000;\n    }\n    if (!flag1 && (int)var2 < 0 == var1Flag) {\n      return CONCAT44(var3,var4);\n    }\n    var3 = var3 | 0x100000;\n    maxValue = 0;\n    var1Flag = SBORROW4(var2,1);\n    var2 = var2 - 1;\n    flag1 = var2 == 0;\n    var1 = var2;\n  }\n  else {\n    tempVar1 = (concatenatedValue & 0xffffffff) * (ulonglong)var4;\n    concatenatedValue = (concatenatedValue & 0xffffffff) * (ulonglong)var3 +\n             (ulonglong)var2 * (ulonglong)var4 + (tempVar1 >> 0x20);\n    tempVar9 = (uint)concatenatedValue;\n    tempVar2 = (ulonglong)var2 * (ulonglong)var3 + (concatenatedValue >> 0x20);\n    maxValue = (uint)tempVar2;\n    var2 = (uint)((ulonglong)tempVar2 >> 0x20);\n    if ((int)tempVar1 != 0) {\n      tempVar9 = tempVar9 | 1;\n    }\n    var2 = (tempVar5 + -0x3ff) - (uint)(var2 < 0x200);\n    if (var2 < 0x200) {\n      flag1 = (tempVar9 & 0x80000000) != 0;\n      tempVar9 = tempVar9 << 1;\n      tempVar2 = CONCAT44(var2 * 2 + (uint)(CARRY4(maxValue,maxValue) || CARRY4(maxValue * 2,(uint)flag1)),\n                       maxValue * 2 + (uint)flag1);\n    }\n    var3 = var1 & 0x80000000 | (int)((ulonglong)tempVar2 >> 0x20) << 0xb | (uint)tempVar2 >> 0x15;\n    var4 = (uint)tempVar2 << 0xb | tempVar9 >> 0x15;\n    maxValue = tempVar9 * 0x800;\n    flag2 = 0xfc < var2;\n    var1Flag = SBORROW4(var2,0xfd);\n    var2 = var2 - 0xfd;\n    flag1 = var2 == 0;\n    var1 = var2;\n    if (flag2 && !flag1) {\n      flag2 = 0x6ff < var2;\n      var1Flag = SBORROW4(var2,0x700);\n      var1 = var2 - 0x7fd;\n      flag1 = var2 == 0x700;\n    }\n    if (!flag2 || flag1) {\n      flag1 = 0x7fffffff < maxValue;\n      if (maxValue == 0x80000000) {\n        flag1 = (tempVar9 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(var3 + var2 * 0x100000 + (uint)CARRY4(var4,(uint)flag1),var4 + flag1\n                     );\n    }\n  }\n  if (!flag1 && (int)var1 < 0 == var1Flag) {\n    return (ulonglong)(var3 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  flag2 = SCARRY4(var2,0x36);\n  flag1 = (int)(var2 + 0x36) < 0;\n  var1Flag = var2 == 0xffffffca;\n  if (var1Flag || flag1 != flag2) {\n    var4 = 0;\n  }\n  if (var1Flag || flag1 != flag2) {\n    var3 = var3 & 0x80000000;\n  }\n  if (var1Flag || flag1 != flag2) {\n    return CONCAT44(var3,var4);\n  }\n  var1 = -var2;\n  var2 = var1 - 0x20;\n  if (0x1f < (int)var1) {\n    var2 = var4 >> (var2 & 0xff) | var3 << (0x20 - var2 & 0xff);\n    var1 = (var3 >> (var2 & 0xff) & ~((var3 & 0x80000000) >> (var2 & 0xff))) -\n            ((int)var2 >> 0x1f);\n    if ((maxValue | var4 << (0x20 - var2 & 0xff) | var2 << 1) == 0) {\n      var1 = var1 & ~(var2 >> 0x1f);\n    }\n    return CONCAT44(var3,var1) & 0x80000000ffffffff;\n  }\n  tempVar5 = var1 - 0x14;\n  if (tempVar5 == 0 || tempVar5 < 0 != SCARRY4(var2,0xc)) {\n    tempVar9 = var4 << (var2 + 0x20 & 0xff);\n    var2 = var4 >> (var1 & 0xff) | var3 << (var2 + 0x20 & 0xff);\n    var2 = var2 + -((int)tempVar9 >> 0x1f);\n    if ((maxValue | tempVar9 << 1) == 0) {\n      var2 = var2 & ~(tempVar9 >> 0x1f);\n    }\n    return CONCAT44((var3 & 0x80000000) +\n                    ((var3 & 0x7fffffff) >> (var1 & 0xff)) +\n                    (uint)CARRY4(var2,-((int)tempVar9 >> 0x1f)),var2);\n  }\n  var1 = 0xc - tempVar5;\n  var2 = var4 << (var1 & 0xff);\n  var1 = var4 >> (0x20 - var1 & 0xff) | var3 << (var1 & 0xff);\n  var2 = var1 + -((int)var2 >> 0x1f);\n  if ((maxValue | var2 << 1) == 0) {\n    var2 = var2 & ~(var2 >> 0x1f);\n  }\n  return CONCAT44((var3 & 0x80000000) + (uint)CARRY4(var1,-((int)var2 >> 0x1f)),var2);\n}\n\n",
            "renaming": {
                "FUN_080004f8": "calculate_product_080004f8",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "var4",
                "param_4": "var3",
                "uVar1": "tempVar1",
                "lVar2": "tempVar2",
                "uVar3": "var2",
                "uVar4": "var1",
                "iVar5": "tempVar5",
                "uVar6": "var2",
                "unaff_r5": "tempVar7",
                "uVar7": "maxValue",
                "uVar8": "tempVar9",
                "bVar9": "flag1",
                "bVar10": "flag2",
                "bVar11": "var1Flag",
                "uVar12": "concatenatedValue"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_080015f8",
                "FUN_08001814",
                "FUN_08001918",
                "FUN_080016b4"
            ],
            "called": [
                "FUN_080006d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080006d4": {
            "entrypoint": "0x080006d4",
            "current_name": "calculate_bitwise_xor_080006d4",
            "code": "\nulonglong calculate_bitwise_xor_080006d4(uint input1,uint input2,uint input3,uint input4)\n\n{\n  uint bit1;\n  uint bit2;\n  uint bit3;\n  uint bit4;\n  uint bit5;\n  bool isZero;\n  \n  bit3 = bit5 & input4 >> 0x14;\n  if (bit2 != bit5 && bit3 != bit5) {\n    isZero = (input1 | input2 << 1) == 0;\n    if (!isZero) {\n      isZero = (input3 | input4 << 1) == 0;\n    }\n    if (isZero) {\n      return (ulonglong)((input2 ^ input4) & 0x80000000) << 0x20;\n    }\n    if (bit2 == 0) {\n      bit4 = input2 & 0x80000000;\n      do {\n        bit1 = input1 & 0x80000000;\n        input1 = input1 << 1;\n        input2 = input2 * 2 + (uint)(bit1 != 0);\n      } while ((input2 & 0x100000) == 0);\n      input2 = input2 | bit4;\n      if (bit3 != 0) {\n        return CONCAT44(input2,input1);\n      }\n    }\n    do {\n      bit3 = input3 & 0x80000000;\n      input3 = input3 << 1;\n      input4 = input4 * 2 + (uint)(bit3 != 0);\n    } while ((input4 & 0x100000) == 0);\n    return CONCAT44(input2,input1);\n  }\n  isZero = (input1 | input2 << 1) == 0;\n  if (isZero) {\n    input2 = input4;\n    input1 = input3;\n  }\n  if (!isZero) {\n    isZero = (input3 | input4 << 1) == 0;\n  }\n  bit4 = input2;\n  if (((!isZero) && ((bit2 != bit5 || ((input1 | input2 << 0xc) == 0)))) &&\n     ((bit3 != bit5 || (input1 = input3, bit4 = input4, (input3 | input4 << 0xc) == 0)))) {\n    return (ulonglong)((input2 ^ input4) & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  return CONCAT44(bit4,input1) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_080006d4": "calculate_bitwise_xor_080006d4",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "bit1",
                "unaff_r4": "bit2",
                "uVar2": "bit3",
                "uVar3": "bit4",
                "in_r12": "bit5",
                "bVar4": "isZero"
            },
            "calling": [
                "FUN_080004f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800074c": {
            "entrypoint": "0x0800074c",
            "current_name": "perform_floating_point_calculation_0800074c",
            "code": "\nulonglong performFloatingPointCalculation_0800074c(undefined4 input1,uint input2,uint input3,uint input4)\n\n{\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  uint temp7;\n  int difference;\n  uint temp9;\n  uint temp10;\n  uint temp11;\n  uint temp12;\n  uint temp13;\n  uint temp14;\n  bool isZero;\n  bool isEqual;\n  bool isCarry;\n  undefined8 result;\n  \n  result = CONCAT44(input2,input1);\n  temp14 = 0x7ff;\n  temp7 = input2 >> 0x14 & 0x7ff;\n  isZero = temp7 == 0;\n  if (!isZero) {\n    temp10 = input4 >> 0x14 & 0x7ff;\n    isZero = temp10 == 0;\n  }\n  if (!isZero) {\n    isZero = temp7 == 0x7ff;\n  }\n  if (!isZero) {\n    isZero = temp10 == 0x7ff;\n  }\n  if (isZero) {\n    result = FUN_080008ba();\n  }\n  temp9 = (uint)((ulonglong)result >> 0x20);\n  temp12 = (uint)result;\n  difference = temp7 - temp10;\n  if ((input3 | input4 << 0xc) == 0) {\n    temp7 = (temp9 ^ input4) & 0x80000000 | temp9 & 0xfffff;\n    isCarry = SCARRY4(difference,temp14 >> 1);\n    temp9 = difference + (temp14 >> 1);\n    isZero = (int)temp9 < 0;\n    isEqual = temp9 == 0;\n    if (!isEqual && isZero == isCarry) {\n      isCarry = SBORROW4(temp14,temp9);\n      isZero = (int)(temp14 - temp9) < 0;\n      isEqual = temp14 == temp9;\n    }\n    if (!isEqual && isZero == isCarry) {\n      temp7 = temp7 | temp9 * 0x100000;\n    }\n    if (!isEqual && isZero == isCarry) {\n      return CONCAT44(temp7,temp12);\n    }\n    temp7 = temp7 | 0x100000;\n    temp14 = 0;\n    isEqual = SBORROW4(temp9,1);\n    temp9 = temp9 - 1;\n    isZero = temp9 == 0;\n    temp3 = temp9;\n  }\n  else {\n    temp3 = (input4 << 0xc) >> 4 | 0x10000000 | input3 >> 0x18;\n    temp14 = input3 << 8;\n    temp11 = (temp9 << 0xc) >> 4 | 0x10000000 | temp12 >> 0x18;\n    temp12 = temp12 * 0x100;\n    temp7 = (temp9 ^ input4) & 0x80000000;\n    isZero = temp3 <= temp11;\n    if (temp11 == temp3) {\n      isZero = temp14 <= temp12;\n    }\n    difference = difference + (uint)isZero;\n    temp9 = difference + 0x3fd;\n    if (isZero == false) {\n      temp3 = temp3 >> 1;\n      temp14 = (uint)((input3 >> 0x18 & 1) != 0) << 0x1f | temp14 >> 1;\n    }\n    temp13 = temp12 - temp14;\n    temp11 = (temp11 - temp3) - (uint)(temp12 < temp14);\n    temp4 = temp3 >> 1;\n    temp1 = (uint)((temp3 & 1) != 0) << 0x1f | temp14 >> 1;\n    temp12 = 0x100000;\n    temp3 = 0x80000;\n    while( true ) {\n      isZero = temp1 <= temp13;\n      if (temp4 < temp11 || temp11 - temp4 < (uint)isZero) {\n        temp13 = temp13 - temp1;\n        temp12 = temp12 | temp3;\n        temp11 = (temp11 - temp4) - (uint)!isZero;\n      }\n      temp5 = temp4 >> 1;\n      temp1 = (uint)((temp4 & 1) != 0) << 0x1f | temp1 >> 1;\n      isEqual = temp1 <= temp13;\n      isZero = temp11 - temp5 < (uint)isEqual;\n      temp14 = temp11;\n      if (temp5 < temp11 || isZero) {\n        temp13 = temp13 - temp1;\n        temp14 = (temp11 - temp5) - (uint)!isEqual;\n      }\n      if (temp5 < temp11 || isZero) {\n        temp12 = temp12 | temp3 >> 1;\n      }\n      temp11 = temp4 >> 2;\n      temp2 = (uint)((temp5 & 1) != 0) << 0x1f | temp1 >> 1;\n      isEqual = temp2 <= temp13;\n      isZero = temp14 - temp11 < (uint)isEqual;\n      temp5 = temp14;\n      if (temp11 < temp14 || isZero) {\n        temp13 = temp13 - temp2;\n        temp5 = (temp14 - temp11) - (uint)!isEqual;\n      }\n      if (temp11 < temp14 || isZero) {\n        temp12 = temp12 | temp3 >> 2;\n      }\n      temp6 = temp4 >> 3;\n      temp1 = (uint)((temp11 & 1) != 0) << 0x1f | temp2 >> 1;\n      isEqual = temp1 <= temp13;\n      isZero = temp5 - temp6 < (uint)isEqual;\n      temp11 = temp5;\n      if (temp6 < temp5 || isZero) {\n        temp13 = temp13 - temp1;\n        temp11 = (temp5 - temp6) - (uint)!isEqual;\n      }\n      if (temp6 < temp5 || isZero) {\n        temp12 = temp12 | temp3 >> 3;\n      }\n      temp14 = temp11 | temp13;\n      if (temp14 == 0) break;\n      temp11 = temp11 << 4 | temp13 >> 0x1c;\n      temp13 = temp13 << 4;\n      temp4 = temp4 & 0xfffffff8 | temp1 >> 0x1d;\n      temp1 = (temp2 >> 1) << 3;\n      temp3 = temp3 >> 4;\n      if (temp3 == 0) {\n        temp6 = temp4;\n        if ((temp7 & 0x100000) != 0) goto LAB_0800086a;\n        temp7 = temp7 | temp12;\n        temp12 = 0;\n        temp3 = 0x80000000;\n      }\n    }\n    if ((temp7 & 0x100000) == 0) {\n      temp7 = temp7 | temp12;\n      temp12 = 0;\n    }\nLAB_0800086a:\n    isCarry = 0xfc < temp9;\n    isEqual = SBORROW4(temp9,0xfd);\n    temp4 = difference + 0x300;\n    isZero = temp4 == 0;\n    temp3 = temp4;\n    if (isCarry && !isZero) {\n      isCarry = 0x6ff < temp4;\n      isEqual = SBORROW4(temp4,0x700);\n      temp3 = difference - 0x400;\n      isZero = temp4 == 0x700;\n    }\n    if (!isCarry || isZero) {\n      isZero = temp6 <= temp11;\n      if (temp11 == temp6) {\n        isZero = temp1 <= temp13;\n      }\n      if (temp11 == temp6 && temp13 == temp1) {\n        isZero = (temp12 & 1) != 0;\n      }\n      return CONCAT44(temp7 + temp9 * 0x100000 + (uint)CARRY4(temp12,(uint)isZero),temp12 + isZero);\n    }\n  }\n  if (!isZero && (int)temp3 < 0 == isEqual) {\n    return (ulonglong)(temp7 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  isCarry = SCARRY4(temp9,0x36);\n  isZero = (int)(temp9 + 0x36) < 0;\n  isEqual = temp9 == 0xffffffca;\n  if (isEqual || isZero != isCarry) {\n    temp12 = 0;\n  }\n  if (isEqual || isZero != isCarry) {\n    temp7 = temp7 & 0x80000000;\n  }\n  if (isEqual || isZero != isCarry) {\n    return CONCAT44(temp7,temp12);\n  }\n  temp3 = -temp9;\n  temp11 = temp3 - 0x20;\n  if (0x1f < (int)temp3) {\n    temp3 = temp12 >> (temp11 & 0xff) | temp7 << (0x20 - temp11 & 0xff);\n    temp9 = (temp7 >> (temp11 & 0xff) & ~((temp7 & 0x80000000) >> (temp11 & 0xff))) -\n            ((int)temp3 >> 0x1f);\n    if ((temp14 | temp12 << (0x20 - temp11 & 0xff) | temp3 << 1) == 0) {\n      temp9 = temp9 & ~(temp3 >> 0x1f);\n    }\n    return CONCAT44(temp7,temp9) & 0x80000000ffffffff;\n  }\n  difference = temp3 - 0x14;\n  if (difference != 0 && difference < 0 == SCARRY4(temp11,0xc)) {\n    temp9 = 0xc - difference;\n    temp3 = temp12 << (temp9 & 0xff);\n    temp12 = temp12 >> (0x20 - temp9 & 0xff) | temp7 << (temp9 & 0xff);\n    temp9 = temp12 + -((int)temp3 >> 0x1f);\n    if ((temp14 | temp3 << 1) == 0) {\n      temp9 = temp9 & ~(temp3 >> 0x1f);\n    }\n    return CONCAT44((temp7 & 0x80000000) + (uint)CARRY4(temp12,-((int)temp3 >> 0x1f)),temp9);\n  }\n  temp11 = temp12 << (temp9 + 0x20 & 0xff);\n  temp12 = temp12 >> (temp3 & 0xff) | temp7 << (temp9 + 0x20 & 0xff);\n  temp9 = temp12 + -((int)temp11 >> 0x1f);\n  if ((temp14 | temp11 << 1) == 0) {\n    temp9 = temp9 & ~(temp11 >> 0x1f);\n  }\n  return CONCAT44((temp7 & 0x80000000) +\n                  ((temp7 & 0x7fffffff) >> (temp3 & 0xff)) +\n                  (uint)CARRY4(temp12,-((int)temp11 >> 0x1f)),temp9);\n}\n\n",
            "renaming": {
                "FUN_0800074c": "perform_floating_point_calculation_0800074c",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "uVar3": "temp3",
                "uVar4": "temp4",
                "uVar5": "temp5",
                "uVar6": "temp6",
                "uVar7": "temp7",
                "iVar8": "difference",
                "uVar9": "temp9",
                "unaff_r5": "temp10",
                "uVar10": "temp11",
                "uVar11": "temp12",
                "uVar12": "temp13",
                "uVar13": "temp14",
                "bVar14": "isZero",
                "bVar15": "isEqual",
                "bVar16": "isCarry",
                "uVar17": "result"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_080015f8",
                "FUN_08001814",
                "FUN_08001918"
            ],
            "called": [
                "FUN_080008ba"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080008ba": {
            "entrypoint": "0x080008ba",
            "current_name": "calculate_double_080008ba",
            "code": "\nulonglong calculate_double_080008ba(uint input_1,uint input_2,uint input_3,uint input_4)\n\n{\n  uint bit_1;\n  uint bit_2;\n  uint bit_3;\n  uint bit_4;\n  uint bit_5;\n  bool is_zero;\n  \n  bit_3 = bit_5 & input_4 >> 0x14;\n  bit_4 = input_2;\n  if (bit_2 != bit_5 || bit_3 != bit_5) {\n    if (bit_2 == bit_5) {\n      if (((input_1 | input_2 << 0xc) == 0) && (input_1 = input_3, bit_4 = input_4, bit_3 != bit_5)\n         ) {\nLAB_0800072c:\n        return (ulonglong)((input_2 ^ input_4) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n    }\n    else if (bit_3 == bit_5) {\n      input_1 = input_3;\n      bit_4 = input_4;\n      if ((input_3 | input_4 << 0xc) == 0) {\nLAB_080006f0:\n        return (ulonglong)((input_2 ^ input_4) & 0x80000000) << 0x20;\n      }\n    }\n    else {\n      is_zero = (input_1 | input_2 << 1) == 0;\n      if (!is_zero) {\n        is_zero = (input_3 | input_4 << 1) == 0;\n      }\n      if (!is_zero) {\n        if (bit_2 == 0) {\n          bit_4 = input_2 & 0x80000000;\n          do {\n            bit_1 = input_1 & 0x80000000;\n            input_1 = input_1 << 1;\n            input_2 = input_2 * 2 + (uint)(bit_1 != 0);\n          } while ((input_2 & 0x100000) == 0);\n          input_2 = input_2 | bit_4;\n          if (bit_3 != 0) {\n            return CONCAT44(input_2,input_1);\n          }\n        }\n        do {\n          bit_4 = input_3 & 0x80000000;\n          input_3 = input_3 << 1;\n          input_4 = input_4 * 2 + (uint)(bit_4 != 0);\n        } while ((input_4 & 0x100000) == 0);\n        return CONCAT44(input_2,input_1);\n      }\n      if ((input_1 | input_2 << 1) != 0) goto LAB_0800072c;\n      if ((input_3 | input_4 << 1) != 0) goto LAB_080006f0;\n    }\n  }\n  return CONCAT44(bit_4,input_1) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_080008ba": "calculate_double_080008ba",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "bit_1",
                "unaff_r4": "bit_2",
                "uVar2": "bit_3",
                "uVar3": "bit_4",
                "in_r12": "bit_5",
                "bVar4": "is_zero"
            },
            "calling": [
                "FUN_0800074c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800092c": {
            "entrypoint": "0x0800092c",
            "current_name": "check_parameters_0800092c",
            "code": "\nuint check_parameters_0800092c(uint value1,uint value2,uint value3,uint value4)\n\n{\n  uint result;\n  bool isZero;\n  bool isConditionMet;\n  \n  if (((int)(value2 << 1) >> 0x15 == -1 || (int)(value4 << 1) >> 0x15 == -1) &&\n     ((((int)(value2 << 1) >> 0x15 == -1 && ((value1 | value2 << 0xc) != 0)) ||\n      (((int)(value4 << 1) >> 0x15 == -1 && ((value3 | value4 << 0xc) != 0)))))) {\n    return 1;\n  }\n  isZero = (value1 | value2 << 1) == 0;\n  if (isZero) {\n    isZero = (value3 | value4 << 1) == 0;\n  }\n  if (!isZero) {\n    isZero = value2 == value4;\n  }\n  if (isZero) {\n    isZero = value1 == value3;\n  }\n  if (!isZero) {\n    result = value2 ^ value4;\n    isZero = result == 0;\n    if (-1 < (int)result) {\n      isZero = value2 == value4;\n    }\n    isConditionMet = -1 < (int)result && value4 <= value2;\n    if (isZero) {\n      isConditionMet = value3 <= value1;\n    }\n    value4 = (int)value4 >> 0x1f;\n    if (!isConditionMet) {\n      value4 = ~value4;\n    }\n    return value4 | 1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800092c": "check_parameters_0800092c",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4",
                "uVar1": "result",
                "bVar2": "isZero",
                "bVar3": "isConditionMet"
            },
            "calling": [
                "FUN_080009b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009a8": {
            "entrypoint": "0x080009a8",
            "current_name": "execute_function_080009a8",
            "code": "\nvoid executeFunction_080009a8(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  FUN_080009b8(input3,input4,input1,input2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080009a8": "execute_function_080009a8",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4"
            },
            "calling": [
                "FUN_08000a18",
                "FUN_08000a04"
            ],
            "called": [
                "FUN_080009b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009b8": {
            "entrypoint": "0x080009b8",
            "current_name": "initialize_function_080009b8",
            "code": "\nundefined4 initializeFunction_080009b8(undefined4 inputParam)\n\n{\n  FUN_0800092c();\n  return inputParam;\n}\n\n",
            "renaming": {
                "FUN_080009b8": "initialize_function_080009b8",
                "param_1": "inputParam"
            },
            "calling": [
                "FUN_080009c8",
                "FUN_080009f0",
                "FUN_080009dc",
                "FUN_080009a8"
            ],
            "called": [
                "FUN_0800092c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009c8": {
            "entrypoint": "0x080009c8",
            "current_name": "check_if_not_zero_080009c8",
            "code": "\nbool checkIfNotZero_080009c8(void)\n\n{\n  char inputChar;\n  \n  FUN_080009b8();\n  return inputChar != '\\0';\n}\n\n",
            "renaming": {
                "FUN_080009c8": "check_if_not_zero_080009c8",
                "in_ZR": "inputChar"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080009b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009dc": {
            "entrypoint": "0x080009dc",
            "current_name": "is_input_empty_080009dc",
            "code": "\nbool isInputEmpty_080009dc(void)\n\n{\n  char inputChar;\n  \n  FUN_080009b8();\n  return inputChar == '\\0';\n}\n\n",
            "renaming": {
                "FUN_080009dc": "is_input_empty_080009dc",
                "in_CY": "inputChar"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0",
                "FUN_080019f6",
                "FUN_08001814",
                "FUN_080016b4",
                "FUN_08001960"
            ],
            "called": [
                "FUN_080009b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009f0": {
            "entrypoint": "0x080009f0",
            "current_name": "check_zero_or_carry_080009f0",
            "code": "\nbool checkZeroOrCarry_080009f0(void)\n\n{\n  undefined isZeroFlag;\n  undefined carryFlag;\n  \n  FUN_080009b8();\n  return !(bool)carryFlag || (bool)isZeroFlag;\n}\n\n",
            "renaming": {
                "FUN_080009f0": "check_zero_or_carry_080009f0",
                "in_ZR": "isZeroFlag",
                "in_CY": "carryFlag"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080009b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a04": {
            "entrypoint": "0x08000a04",
            "current_name": "check_input_flags_08000a04",
            "code": "\nbool checkInputFlags_08000a04(void)\n\n{\n  undefined isZeroFlagSet;\n  undefined isCarryFlagSet;\n  \n  FUN_080009a8();\n  return !(bool)isCarryFlagSet || (bool)isZeroFlagSet;\n}\n\n",
            "renaming": {
                "FUN_08000a04": "check_input_flags_08000a04",
                "in_ZR": "isZeroFlagSet",
                "in_CY": "isCarryFlagSet"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08001960"
            ],
            "called": [
                "FUN_080009a8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a18": {
            "entrypoint": "0x08000a18",
            "current_name": "check_if_character_zero_08000a18",
            "code": "\nbool check_if_character_zero_08000a18(void)\n\n{\n  char input_character;\n  \n  FUN_080009a8();\n  return input_character == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08000a18": "check_if_character_zero_08000a18",
                "in_CY": "input_character"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_080019f6",
                "FUN_08000cd0",
                "FUN_080016b4",
                "FUN_08001960"
            ],
            "called": [
                "FUN_080009a8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a2c": {
            "entrypoint": "0x08000a2c",
            "current_name": "check_parameters_validity_08000a2c",
            "code": "\nundefined4 check_parameters_validity_08000a2c(uint input1,int input2,uint input3,int input4)\n\n{\n  if ((((input2 << 1) >> 0x15 != -1) || ((input1 | input2 << 0xc) == 0)) &&\n     (((input4 << 1) >> 0x15 != -1 || ((input3 | input4 << 0xc) == 0)))) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08000a2c": "check_parameters_validity_08000a2c",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4"
            },
            "calling": [
                "FUN_08005da8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a58": {
            "entrypoint": "0x08000a58",
            "current_name": "apply_transformation_08000a58",
            "code": "\nuint applyTransformation_08000a58(uint input1,uint input2)\n\n{\n  uint outputVar;\n  int tempVar;\n  uint transformedVar;\n  \n  tempVar = input2 * 2 + 0x200000;\n  if (input2 * 2 < 0xffe00000) {\n    if (-1 < tempVar) {\n      return 0;\n    }\n    outputVar = tempVar >> 0x15;\n    transformedVar = -outputVar - 0x3e1;\n    if (outputVar < 0xfffffc20 && transformedVar != 0) {\n      outputVar = (input2 << 0xb | 0x80000000 | input1 >> 0x15) >> (transformedVar & 0xff);\n      if ((input2 & 0x80000000) != 0) {\n        outputVar = -outputVar;\n      }\n      return outputVar;\n    }\n  }\n  else if ((input1 | input2 << 0xc) != 0) {\n    return 0;\n  }\n  input2 = input2 & 0x80000000;\n  if (input2 == 0) {\n    input2 = 0x7fffffff;\n  }\n  return input2;\n}\n\n",
            "renaming": {
                "FUN_08000a58": "apply_transformation_08000a58",
                "param_1": "input1",
                "param_2": "input2",
                "iVar2": "tempVar",
                "uVar1": "outputVar",
                "uVar3": "transformedVar"
            },
            "calling": [
                "FUN_08005da8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000aa8": {
            "entrypoint": "0x08000aa8",
            "current_name": "calculate_shift_amount_08000aa8",
            "code": "\nuint calculate_shift_amount_08000aa8(uint input_value1,uint input_value2)\n\n{\n  int shifted_value;\n  uint shift_amount;\n  \n  if ((input_value2 & 0x80000000) != 0) {\n    return 0;\n  }\n  shifted_value = input_value2 * 2 + 0x200000;\n  if (input_value2 * 2 < 0xffe00000) {\n    if (-1 < shifted_value) {\n      return 0;\n    }\n    shift_amount = -(shifted_value >> 0x15) - 0x3e1;\n    if (-1 < (int)shift_amount) {\n      return (input_value2 << 0xb | 0x80000000 | input_value1 >> 0x15) >> (shift_amount & 0xff);\n    }\n  }\n  else if ((input_value1 | input_value2 << 0xc) != 0) {\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08000aa8": "calculate_shift_amount_08000aa8",
                "param_1": "input_value1",
                "param_2": "input_value2",
                "iVar1": "shifted_value",
                "uVar2": "shift_amount"
            },
            "calling": [
                "FUN_08005da8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000ae8": {
            "entrypoint": "0x08000ae8",
            "current_name": "trigger_software_interrupt_08000ae8",
            "code": "\nvoid triggerSoftwareInterrupt_08000ae8(void)\n\n{\n  software_interrupt(0x3f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000ae8": "trigger_software_interrupt_08000ae8"
            },
            "calling": [
                "FUN_08000aec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000aec": {
            "entrypoint": "0x08000aec",
            "current_name": "execute_function_08000aec",
            "code": "\nundefined4 execute_function_08000aec(undefined4 input_value1,undefined4 input_value2,undefined4 input_value3,undefined4 input_value4)\n\n{\n  undefined4 result;\n  \n  if (DAT_2000017c != 0) {\n    return 0;\n  }\n  result = FUN_08000ae8(1,input_value1,0,0,input_value4);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08000aec": "execute_function_08000aec",
                "param_1": "input_value1",
                "param_2": "input_value2",
                "param_3": "input_value3",
                "param_4": "input_value4",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08000ae8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000b08": {
            "entrypoint": "0x08000b08",
            "current_name": "process_data_08000b08",
            "code": "\nvoid processData_08000b08(int condition1,int condition2)\n\n{\n  if ((condition1 == 1) && (condition2 == 0xffff)) {\n    FUN_08001b18(&DAT_200001c0,&DAT_20000188,&DAT_200001b8,&DAT_20000240,DAT_20000020,DAT_20000024,\n                 DAT_20000018,DAT_2000001c,DAT_20000010,DAT_20000014,0);\n    FUN_08001510(&DAT_20000194,DAT_2000005c,DAT_20000038,DAT_20000028,DAT_2000002c,DAT_20000030,\n                 DAT_20000034);\n    FUN_0800157c(&DAT_2000024c,DAT_20000074,DAT_20000070,DAT_2000006c);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000b08": "process_data_08000b08",
                "param_1": "condition1",
                "param_2": "condition2"
            },
            "calling": [],
            "called": [
                "FUN_08001510",
                "FUN_0800157c",
                "FUN_08001b18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000bcc": {
            "entrypoint": "0x08000bcc",
            "current_name": "initialize_oven_08000bcc",
            "code": "\nvoid initializeOven_08000bcc(void)\n\n{\n  FUN_08005848(DAT_20000064,0);\n  FUN_080057b4(DAT_20000064,1);\n  FUN_08005848(DAT_20000004,0);\n  FUN_080057b4(DAT_20000004,1);\n  FUN_08005848(DAT_20000060,0);\n  FUN_080057b4(DAT_20000060,1);\n  FUN_08005848(DAT_20000004,1);\n  FUN_080013a4(&DAT_20000194,8,2,0);\n  FUN_08001550(&DAT_20000194,0,&DAT_20000008);\n  FUN_0800135a(&DAT_20000194);\n  FUN_08005c96(&DAT_20000194,\"Reflow\");\n  FUN_08001366(&DAT_20000194,0,1);\n  FUN_08005c96(&DAT_20000194,\"Oven 1.2\");\n  FUN_08005848(DAT_20000004,0);\n  FUNC_080058e8(0x9c4);\n  FUN_0800135a(&DAT_20000194);\n  FUN_08005a68(&DAT_2000036c,0xe100,6);\n  FUN_08005848(DAT_20000060,1);\n  DAT_20000258 = 2000;\n  DAT_200001b0 = FUN_080058e0();\n  DAT_200001b4 = FUN_080058e0();\n  FUN_08000aec(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000bcc": "initialize_oven_08000bcc"
            },
            "calling": [
                "FUN_08005f6c"
            ],
            "called": [
                "FUN_080058e8",
                "FUN_08005a68",
                "FUN_08001550",
                "FUN_0800135a",
                "FUN_08000aec",
                "FUN_08005848",
                "FUN_08005c96",
                "FUN_080013a4",
                "FUN_080057b4",
                "FUN_08001366",
                "FUN_080058e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000cd0": {
            "entrypoint": "0x08000cd0",
            "current_name": "process_data_08000cd0",
            "code": "\nvoid processData_08000cd0(void)\n\n{\n  uint value1;\n  undefined4 value2;\n  int counter;\n  undefined4 value3;\n  undefined4 extraValue1;\n  undefined4 extraValue2;\n  undefined4 extraValue3;\n  undefined8 tempValue;\n  \n  value1 = FUN_080058e0();\n  if (DAT_200001b4 < value1) {\n    DAT_200001b4 = DAT_200001b4 + 1000;\n    tempValue = FUN_080015f8(&DAT_2000024c,0);\n    value3 = (undefined4)((ulonglong)tempValue >> 0x20);\n    value2 = (undefined4)tempValue;\n    DAT_20000188 = value2;\n    DAT_2000018c = value3;\n    counter = FUN_080009c8(value2,value3,0,0x40c38800);\n    if (((counter != 0) || (counter = FUN_080009c8(value2,value3,0,0x40c38880), counter != 0)) ||\n       (counter = FUN_080009c8(value2,value3,0,0x40c38900), counter != 0)) {\n      DAT_20000238 = 7;\n      DAT_20000239 = '\\0';\n    }\n  }\n  value1 = FUN_080058e0();\n  value2 = DAT_20000060;\n  if (DAT_200001b0 < value1) {\n    DAT_200001b0 = DAT_200001b0 + 1000;\n    if (DAT_20000239 == '\\x01') {\n      counter = FUN_08005890(DAT_20000060);\n      FUN_08005848(value2,counter == 0);\n      DAT_20000250 = DAT_20000250 + 1;\n      FUN_08005d82(&DAT_2000036c,DAT_20000250,10);\n      FUN_08005c96(&DAT_2000036c,&DAT_08007368);\n      FUN_08005f2c(&DAT_2000036c,extraValue1,DAT_20000240,DAT_20000244,2);\n      FUN_08005c96(&DAT_2000036c,&DAT_08007368);\n      FUN_08005f2c(&DAT_2000036c,extraValue2,DAT_20000188,DAT_2000018c,2);\n      FUN_08005c96(&DAT_2000036c,&DAT_08007368);\n      FUN_08005f40(&DAT_2000036c,extraValue3,DAT_200001b8,DAT_200001bc,2);\n    }\n    else {\n      FUN_08005848(DAT_20000060,1);\n    }\n    FUN_0800135a(&DAT_20000194);\n    FUN_08005c96(&DAT_20000194,(&PTR_s_Ready_2000003c)[DAT_20000238]);\n    FUN_08001366(&DAT_20000194,0,1);\n    if (DAT_20000238 == 7) {\n      FUN_08005c96(&DAT_20000194,\"TC Error!\");\n    }\n    else {\n      FUN_08005f2c(&DAT_20000194,2,DAT_20000188,DAT_2000018c,2);\n      FUN_0800134e(&DAT_20000194,0);\n      FUN_08005c96(&DAT_20000194,&DAT_08007378);\n    }\n  }\n  value3 = DAT_2000018c;\n  value2 = DAT_20000188;\n  switch(DAT_20000238) {\n  case 0:\n    counter = FUN_08000a04(DAT_20000188,DAT_2000018c,0,0x40490000);\n    if (counter == 0) {\n      if (DAT_20000248 == '\\x01') {\n        FUN_08005cd4(&DAT_2000036c,\"Time Setpoint Input Output\");\n        DAT_20000250 = 0;\n        DAT_2000025c = FUN_080058e0();\n        DAT_20000240 = 0;\n        DAT_20000244 = 0x4062c000;\n        tempValue = FUN_0800042c(DAT_20000258);\n        FUN_08001960(&DAT_200001c0,(int)((ulonglong)tempValue >> 0x20),0,0,tempValue);\n        FUN_08001918(&DAT_200001c0,1000);\n        FUN_08001a44(&DAT_200001c0,1);\n        DAT_20000238 = 1;\n      }\n    }\n    else {\n      DAT_20000238 = 6;\n    }\n    break;\n  case 1:\n    DAT_20000239 = '\\x01';\n    counter = FUN_08000a04(DAT_20000188,DAT_2000018c,0,0x4062c000);\n    if (counter != 0) {\n      tempValue = FUN_080058e0();\n      DAT_20000254 = (int)tempValue + 9000;\n      FUN_080018f8(&DAT_200001c0,(int)((ulonglong)tempValue >> 0x20),0,0x4072c000,0x9999999a,0x3fa99999,\n                   0,0x406f4000);\n      DAT_20000240 = 0;\n      DAT_20000244 = 0x40636000;\n      DAT_20000238 = 2;\n    }\n    break;\n  case 2:\n    value1 = FUN_080058e0();\n    if (DAT_20000254 < value1) {\n      counter = FUN_080058e0();\n      DAT_20000254 = counter + 9000;\n      tempValue = FUN_08000194(DAT_20000240,DAT_20000244,0,0x40140000);\n      DAT_20000244 = (undefined4)((ulonglong)tempValue >> 0x20);\n      DAT_20000240 = (undefined4)tempValue;\n      tempValue = FUN_08000a18(DAT_20000240,DAT_20000244,0,0x40690000);\n      if ((int)tempValue != 0) {\n        FUN_080018f8(&DAT_200001c0,(int)((ulonglong)tempValue >> 0x20),0,0x4072c000,0x9999999a,\n                     0x3fa99999,0,0x4075e000);\n        DAT_20000240 = 0;\n        DAT_20000244 = 0x406f4000;\n        DAT_20000238 = 3;\n      }\n    }\n    break;\n  case 3:\n    tempValue = FUN_08000a04(DAT_20000188,DAT_2000018c,0,0x406ea000);\n    if ((int)tempValue != 0) {\n      FUN_080018f8(&DAT_200001c0,(int)((ulonglong)tempValue >> 0x20),0,0x4072c000,0x9999999a,0x3fa99999,\n                   0,0x4075e000);\n      DAT_20000240 = 0;\n      DAT_20000244 = 0x40590000;\n      DAT_20000238 = 4;\n    }\n    break;\n  case 4:\n    counter = FUN_080009f0(DAT_20000188,DAT_2000018c,0,0x40590000);\n    if (counter != 0) {\n      counter = FUN_080058e0();\n      DAT_20000180 = counter + 1000;\n      FUN_08005848(DAT_20000004,1);\n      DAT_20000239 = '\\0';\n      DAT_20000238 = 5;\n    }\n    break;\n  case 5:\n    value1 = FUN_080058e0();\n    if (DAT_20000180 < value1) {\n      FUN_08005848(DAT_20000004,0);\n      DAT_20000238 = 0;\n    }\n    break;\n  case 6:\n    counter = FUN_080009dc(DAT_20000188,DAT_2000018c,0,0x40490000);\n    if (counter != 0) {\n      DAT_20000238 = 0;\n    }\n    break;\n  case 7:\n    counter = FUN_080009c8(DAT_20000188,DAT_2000018c,0,0x40c38800);\n    if (((counter == 0) && (counter = FUN_080009c8(value2,value3,0,0x40c38880), counter == 0)) &&\n       (counter = FUN_080009c8(value2,value3,0,0x40c38900), counter == 0)) {\n      DAT_20000238 = 0;\n    }\n    else {\n      DAT_20000238 = 7;\n    }\n  }\n  if ((DAT_20000248 == '\\x01') && (DAT_20000239 == '\\x01')) {\n    DAT_20000239 = '\\0';\n    DAT_20000238 = 0;\n  }\n  if (DAT_20000184 == '\\x01') {\n    counter = FUN_08005754(DAT_20000068);\n    if (counter == 0) {\n      counter = FUN_080058e0();\n      if (0x32 < (uint)(counter - DAT_20000190)) {\n        DAT_20000184 = '\\x02';\n      }\n    }\n    else {\n      DAT_20000184 = '\\0';\n    }\n  }\n  else if (DAT_20000184 == '\\0') {\n    DAT_20000248 = '\\0';\n    counter = FUN_08005754(DAT_20000068);\n    if (counter == 0) {\n      DAT_20000190 = FUN_080058e0();\n      DAT_20000184 = '\\x01';\n    }\n  }\n  else if ((DAT_20000184 == '\\x02') && (counter = FUN_08005754(DAT_20000068), counter != 0)) {\n    DAT_20000248 = '\\x01';\n    DAT_20000184 = '\\0';\n  }\n  if (DAT_20000239 == '\\x01') {\n    counter = FUN_080058e0();\n    FUN_080016b4(&DAT_200001c0);\n    if (DAT_20000258 < (uint)(counter - DAT_2000025c)) {\n      DAT_2000025c = DAT_2000025c + DAT_20000258;\n    }\n    tempValue = FUN_0800040c(counter - DAT_2000025c);\n    counter = FUN_080009dc((int)tempValue,(int)((ulonglong)tempValue >> 0x20),DAT_200001b8,DAT_200001bc);\n    if (counter == 0) {\n      FUN_08005848(DAT_20000064,0);\n    }\n    else {\n      FUN_08005848(DAT_20000064,1);\n    }\n  }\n  else {\n    FUN_08005848(DAT_20000064,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000cd0": "process_data_08000cd0",
                "uVar1": "value1",
                "uVar2": "value2",
                "iVar3": "counter",
                "uVar4": "value3",
                "extraout_r1": "extraValue1",
                "extraout_r1_00": "extraValue2",
                "extraout_r1_01": "extraValue3",
                "uVar5": "tempValue"
            },
            "calling": [
                "FUN_08005f6c"
            ],
            "called": [
                "FUN_08005f2c",
                "FUN_080009c8",
                "FUN_080015f8",
                "FUN_080018f8",
                "FUN_08005c96",
                "FUN_0800042c",
                "FUN_080016b4",
                "FUN_08005890",
                "FUN_080058e0",
                "FUN_08000194",
                "FUN_08005cd4",
                "FUN_08005848",
                "FUN_08005d82",
                "FUN_08001918",
                "FUN_08001366",
                "FUN_08000a18",
                "FUN_0800040c",
                "FUN_08005754",
                "FUN_08001a44",
                "FUN_08000a04",
                "FUN_080009f0",
                "FUN_080009dc",
                "FUN_0800134e",
                "FUN_0800135a",
                "FUN_08005f40",
                "FUN_08001960"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001294": {
            "entrypoint": "0x08001294",
            "current_name": "set_params_08001294",
            "code": "\nvoid setParams_08001294(int baseAddress,undefined value1,undefined value2,undefined value3,\n                 undefined value4)\n\n{\n  *(undefined *)(baseAddress + 0x18) = value1;\n  *(undefined *)(baseAddress + 0x19) = value2;\n  *(undefined *)(baseAddress + 0x1a) = value3;\n  *(undefined *)(baseAddress + 0x1b) = value4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001294": "set_params_08001294",
                "param_1": "baseAddress",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "value4"
            },
            "calling": [
                "FUN_080013a4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080012a2": {
            "entrypoint": "0x080012a2",
            "current_name": "initialize_function_080012a2",
            "code": "\nvoid initializeFunction_080012a2(int inputParameter)\n\n{\n  FUN_08005848(*(undefined *)(inputParameter + 10),0);\n  FUN_08005848(*(undefined *)(inputParameter + 10),1);\n  FUN_08005848(*(undefined *)(inputParameter + 10),0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080012a2": "initialize_function_080012a2",
                "param_1": "inputParameter"
            },
            "calling": [
                "FUN_080012c0",
                "FUN_080012e8"
            ],
            "called": [
                "FUN_08005848"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080012c0": {
            "entrypoint": "0x080012c0",
            "current_name": "process_data_080012c0",
            "code": "\nvoid processData_080012c0(int dataAddress,int inputValue)\n\n{\n  uint index;\n  \n  for (index = 0; (int)index < 4; index = index + 1) {\n    FUN_08005848(*(undefined *)(dataAddress + index + 0xb),inputValue >> (index & 0xff) & 1);\n  }\n  FUN_080012a2(dataAddress);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080012c0": "process_data_080012c0",
                "param_1": "dataAddress",
                "param_2": "inputValue",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08001310",
                "FUN_080013a4"
            ],
            "called": [
                "FUN_080012a2",
                "FUN_08005848"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080012e8": {
            "entrypoint": "0x080012e8",
            "current_name": "process_data_080012e8",
            "code": "\nvoid processData_080012e8(int dataPointer,int inputValue)\n\n{\n  uint iteration;\n  \n  for (iteration = 0; (int)iteration < 8; iteration = iteration + 1) {\n    FUN_08005848(*(undefined *)(dataPointer + iteration + 0xb),inputValue >> (iteration & 0xff) & 1);\n  }\n  FUN_080012a2(dataPointer);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080012e8": "process_data_080012e8",
                "param_1": "dataPointer",
                "param_2": "inputValue",
                "uVar1": "iteration"
            },
            "calling": [
                "FUN_08001310"
            ],
            "called": [
                "FUN_080012a2",
                "FUN_08005848"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001310": {
            "entrypoint": "0x08001310",
            "current_name": "process_data_08001310",
            "code": "\nvoid processData_08001310(int data,uint flags,undefined4 param1,undefined4 param2)\n\n{\n  FUN_08005848(*(undefined *)(data + 8),param1,param1,param2,param2);\n  if (*(char *)(data + 9) != -1) {\n    FUN_08005848(*(char *)(data + 9),0);\n  }\n  if ((*(byte *)(data + 0x13) & 0x10) == 0) {\n    FUN_080012c0(data,flags >> 4);\n    FUN_080012c0(data,flags);\n    return;\n  }\n  FUN_080012e8(data,flags);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001310": "process_data_08001310",
                "param_1": "data",
                "param_2": "flags",
                "param_3": "param1",
                "param_4": "param2"
            },
            "calling": [
                "FUN_0800138e",
                "FUN_0800134e",
                "FUN_08001550",
                "FUN_0800135a",
                "FUN_080013a4",
                "FUN_08001366"
            ],
            "called": [
                "FUN_08005848",
                "FUN_080012c0",
                "FUN_080012e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800134e": {
            "entrypoint": "0x0800134e",
            "current_name": "initialize_and_return_0800134e",
            "code": "\nundefined4 initialize_and_return_0800134e(undefined4 input1,undefined4 input2,undefined4 constant1,undefined4 constant2)\n\n{\n  FUN_08001310(input1,input2,1,constant2,constant2);\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800134e": "initialize_and_return_0800134e",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "constant1",
                "param_4": "constant2"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800135a": {
            "entrypoint": "0x0800135a",
            "current_name": "initialize_function_0800135a",
            "code": "\nvoid initializeFunction_0800135a(undefined4 initialValue,undefined4 size,undefined4 offset,undefined4 pointer)\n\n{\n  FUN_08001310(initialValue,1,0,pointer,pointer);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800135a": "initialize_function_0800135a",
                "param_1": "initialValue",
                "param_2": "size",
                "param_3": "offset",
                "param_4": "pointer"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08000bcc",
                "FUN_080013a4"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001366": {
            "entrypoint": "0x08001366",
            "current_name": "process_data_08001366",
            "code": "\nvoid processData_08001366(int inputParam,char charParam,uint limit,undefined4 additionalParam)\n\n{\n  char resultChar;\n  \n  if (3 < limit) {\n    limit = 3;\n  }\n  if ((int)(uint)*(byte *)(inputParam + 0x17) <= (int)limit) {\n    limit = *(byte *)(inputParam + 0x17) - 1 & 0xff;\n  }\n  resultChar = *(char *)(limit + inputParam + 0x18);\n  FUN_08001310(inputParam,charParam + resultChar | 0x80,0,resultChar,additionalParam);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001366": "process_data_08001366",
                "param_1": "inputParam",
                "param_2": "charParam",
                "param_3": "limit",
                "param_4": "additionalParam",
                "cVar1": "resultChar"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800138e": {
            "entrypoint": "0x0800138e",
            "current_name": "enable_feature_0800138e",
            "code": "\nvoid enableFeature_0800138e(int data,undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  byte bVar1;\n  \n  bVar1 = *(byte *)(data + 0x14);\n  *(byte *)(data + 0x14) = bVar1 | 4;\n  FUN_08001310(data,bVar1 | 0xc,0,arg3,arg3);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800138e": "enable_feature_0800138e",
                "param_1": "data",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3"
            },
            "calling": [
                "FUN_080013a4"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080013a4": {
            "entrypoint": "0x080013a4",
            "current_name": "process_data_080013a4",
            "code": "\nvoid processData_080013a4(int dataPointer,int param1,int param2,int param3)\n\n{\n  int loopCounter1;\n  int loopCounter2;\n  \n  if (1 < param2) {\n    *(byte *)(dataPointer + 0x13) = *(byte *)(dataPointer + 0x13) | 8;\n  }\n  *(char *)(dataPointer + 0x17) = (char)param2;\n  FUN_08001294(dataPointer,0,0x40,param1,param1 + 0x40);\n  if ((param3 != 0) && (param2 == 1)) {\n    *(byte *)(dataPointer + 0x13) = *(byte *)(dataPointer + 0x13) | 4;\n  }\n  FUN_080057b4(*(undefined *)(dataPointer + 8),1);\n  if (*(char *)(dataPointer + 9) != -1) {\n    FUN_080057b4(*(char *)(dataPointer + 9),1);\n  }\n  FUN_080057b4(*(undefined *)(dataPointer + 10),1);\n  loopCounter2 = 0;\n  while( true ) {\n    if ((*(byte *)(dataPointer + 0x13) & 0x10) == 0) {\n      loopCounter1 = 4;\n    }\n    else {\n      loopCounter1 = 8;\n    }\n    if (loopCounter1 <= loopCounter2) break;\n    FUN_080057b4(*(undefined *)(dataPointer + loopCounter2 + 0xb),1);\n    loopCounter2 = loopCounter2 + 1;\n  }\n  FUN_08005848(*(undefined *)(dataPointer + 8),0);\n  FUN_08005848(*(undefined *)(dataPointer + 10),0);\n  if (*(char *)(dataPointer + 9) != -1) {\n    FUN_08005848(*(char *)(dataPointer + 9),0);\n  }\n  if ((*(byte *)(dataPointer + 0x13) & 0x10) == 0) {\n    FUN_080012c0(dataPointer,3);\n    FUN_080012c0(dataPointer,3);\n    FUN_080012c0(dataPointer,3);\n    FUN_080012c0(dataPointer,2);\n  }\n  else {\n    FUN_08001310(dataPointer,*(byte *)(dataPointer + 0x13) | 0x20,0);\n    FUN_08001310(dataPointer,*(byte *)(dataPointer + 0x13) | 0x20,0);\n    FUN_08001310(dataPointer,*(byte *)(dataPointer + 0x13) | 0x20,0);\n  }\n  FUN_08001310(dataPointer,*(byte *)(dataPointer + 0x13) | 0x20,0);\n  *(undefined *)(dataPointer + 0x14) = 4;\n  FUN_0800138e(dataPointer);\n  FUN_0800135a(dataPointer);\n  *(undefined *)(dataPointer + 0x15) = 2;\n  FUN_08001310(dataPointer,6,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080013a4": "process_data_080013a4",
                "param_1": "dataPointer",
                "param_2": "param1",
                "param_3": "param2",
                "param_4": "param3",
                "iVar1": "loopCounter1",
                "iVar2": "loopCounter2"
            },
            "calling": [
                "FUN_080014ba",
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_0800138e",
                "FUN_08001310",
                "FUN_0800135a",
                "FUN_08005848",
                "FUN_080012c0",
                "FUN_080057b4",
                "FUN_08001294"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080014ba": {
            "entrypoint": "0x080014ba",
            "current_name": "init_params_080014ba",
            "code": "\nvoid initParams_080014ba(int objAddress,int flag,undefined param_3_value,undefined4 param_4_value,undefined param_5_value,\n                 undefined param_6_value,undefined param_7_value,undefined param_8_value,undefined param_9_value,\n                 undefined param_10_value,undefined param_11_value,undefined param_12_value,undefined param_13_value)\n\n{\n  *(undefined *)(objAddress + 8) = param_3_value;\n  *(char *)(objAddress + 9) = (char)param_4_value;\n  *(undefined *)(objAddress + 10) = param_5_value;\n  *(undefined *)(objAddress + 0xb) = param_6_value;\n  *(undefined *)(objAddress + 0xc) = param_7_value;\n  *(undefined *)(objAddress + 0xd) = param_8_value;\n  *(undefined *)(objAddress + 0xe) = param_9_value;\n  *(undefined *)(objAddress + 0xf) = param_10_value;\n  *(undefined *)(objAddress + 0x10) = param_11_value;\n  *(undefined *)(objAddress + 0x11) = param_12_value;\n  *(undefined *)(objAddress + 0x12) = param_13_value;\n  if (flag == 0) {\n    *(undefined *)(objAddress + 0x13) = 0x10;\n  }\n  else {\n    *(undefined *)(objAddress + 0x13) = 0;\n  }\n  FUN_080013a4(objAddress,0x10,1,0,param_4_value);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080014ba": "init_params_080014ba",
                "param_1": "objAddress",
                "param_2": "flag",
                "param_3": "param_3_value",
                "param_4": "param_4_value",
                "param_5": "param_5_value",
                "param_6": "param_6_value",
                "param_7": "param_7_value",
                "param_8": "param_8_value",
                "param_9": "param_9_value",
                "param_10": "param_10_value",
                "param_11": "param_11_value",
                "param_12": "param_12_value",
                "param_13": "param_13_value"
            },
            "calling": [
                "FUN_08001510"
            ],
            "called": [
                "FUN_080013a4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001510": {
            "entrypoint": "0x08001510",
            "current_name": "initialize_function_08001510",
            "code": "\nundefined4 *\ninitializeFunction_08001510(undefined4 *result,undefined4 val1,undefined4 val2,undefined4 val3,\n            undefined val4,undefined val5,undefined val6)\n\n{\n  result[1] = 0;\n  *result = &PTR_FUN_0800134e_1_080073f8;\n  FUN_080014ba(result,1,val1,0xff,val2,val3,val4,val5,val6,0,0,0,0);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08001510": "initialize_function_08001510",
                "param_1": "result",
                "param_2": "val1",
                "param_3": "val2",
                "param_4": "val3",
                "param_5": "val4",
                "param_6": "val5",
                "param_7": "val6"
            },
            "calling": [
                "FUN_08000b08"
            ],
            "called": [
                "FUN_080014ba"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001550": {
            "entrypoint": "0x08001550",
            "current_name": "process_data_08001550",
            "code": "\nvoid processData_08001550(undefined4 *dataPtr,uint dataSize,int sourceAddress)\n\n{\n  int index;\n  \n  FUN_08001310(dataPtr,(dataSize & 7) << 3 | 0x40,0);\n  for (index = 0; index < 8; index = index + 1) {\n    (**(code **)*dataPtr)(dataPtr,*(undefined *)(sourceAddress + index));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001550": "process_data_08001550",
                "param_1": "dataPtr",
                "param_2": "dataSize",
                "param_3": "sourceAddress",
                "iVar1": "index"
            },
            "calling": [
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800157c": {
            "entrypoint": "0x0800157c",
            "current_name": "extract_params_and_call_functions_0800157c",
            "code": "\nundefined * extractParamsAndCallFunctions_0800157c(undefined *output,undefined4 inputChar,undefined input1,undefined input2)\n\n{\n  *output = (char)inputChar;\n  output[1] = input1;\n  output[2] = input2;\n  FUN_080057b4(inputChar,0);\n  FUN_080057b4(output[1],1);\n  FUN_080057b4(output[2],1);\n  FUN_08005848(output[1],1);\n  FUN_08005848(output[2],0);\n  return output;\n}\n\n",
            "renaming": {
                "FUN_0800157c": "extract_params_and_call_functions_0800157c",
                "param_1": "output",
                "param_2": "inputChar",
                "param_3": "input1",
                "param_4": "input2"
            },
            "calling": [
                "FUN_08000b08"
            ],
            "called": [
                "FUN_08005848",
                "FUN_080057b4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080015b2": {
            "entrypoint": "0x080015b2",
            "current_name": "bitwise_check_080015b2",
            "code": "\nuint bitwise_check_080015b2(undefined *input_array)\n\n{\n  int result;\n  uint bit_index;\n  uint bitwise_result;\n  \n  FUN_08005848(input_array[1],0);\n  bitwise_result = 0;\n  for (bit_index = 0x1f; -1 < (int)bit_index; bit_index = bit_index - 1) {\n    FUN_08005848(input_array[2],1);\n    result = FUN_08005890(*input_array);\n    if (result != 0) {\n      bitwise_result = bitwise_result | 1 << (bit_index & 0xff);\n    }\n    FUN_08005848(input_array[2],0);\n  }\n  FUN_08005848(input_array[1],1);\n  return bitwise_result;\n}\n\n",
            "renaming": {
                "FUN_080015b2": "bitwise_check_080015b2",
                "param_1": "input_array",
                "iVar1": "result",
                "uVar2": "bit_index",
                "uVar3": "bitwise_result"
            },
            "calling": [
                "FUN_080015f8"
            ],
            "called": [
                "FUN_08005848",
                "FUN_08005890"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080015f8": {
            "entrypoint": "0x080015f8",
            "current_name": "calculate_value_080015f8",
            "code": "\nundefined8 calculateValue_080015f8(undefined4 input1,int input2,undefined4 input3,undefined4 input4)\n\n{\n  uint value1;\n  undefined8 value2;\n  \n  value1 = FUN_080015b2();\n  if ((value1 & 0x10000) == 0) {\n    value1 = value1 >> 0x12;\n    value2 = FUN_0800040c(value1 & 0x1fff);\n    if ((value1 & 0x2000) != 0) {\n      value2 = FUN_0800040c(~value1 & 0x1fff);\n      value2 = FUN_08000194((int)value2,(int)((ulonglong)value2 >> 0x20),0,0x3ff00000,input4);\n      value2 = CONCAT44((int)((ulonglong)value2 >> 0x20) + -0x80000000,(int)value2);\n    }\n    value2 = FUN_080004f8((int)value2,(int)((ulonglong)value2 >> 0x20),0,0x3fd00000);\n    if (input2 == 1) {\n      value2 = FUN_080004f8((int)value2,(int)((ulonglong)value2 >> 0x20),0,0x40220000);\n      value2 = FUN_0800074c((int)value2,(int)((ulonglong)value2 >> 0x20),0,0x40140000);\n      value2 = FUN_08000194((int)value2,(int)((ulonglong)value2 >> 0x20),0,0x40400000);\n      return value2;\n    }\n  }\n  else {\n    value1 = value1 & 7;\n    if (value1 == 2) {\n      return 0x40c3888000000000;\n    }\n    if (value1 == 4) {\n      return 0x40c3890000000000;\n    }\n    if (value1 != 1) {\n      return 0;\n    }\n    value2 = 0x40c3880000000000;\n  }\n  return value2;\n}\n\n",
            "renaming": {
                "FUN_080015f8": "calculate_value_080015f8",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "value1",
                "uVar2": "value2"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080004f8",
                "FUN_08000194",
                "FUN_0800040c",
                "FUN_080015b2",
                "FUN_0800074c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080016b4": {
            "entrypoint": "0x080016b4",
            "current_name": "perform_data_processing_080016b4",
            "code": "\nchar performDataProcessing_080016b4(int input)\n\n{\n  char isInitialized;\n  int result;\n  int checkResult;\n  undefined4 tempVar1;\n  undefined4 tempVar2;\n  undefined4 tempVar3;\n  undefined4 tempVar4;\n  undefined4 tempVar5;\n  undefined4 tempVar6;\n  undefined4 tempVar7;\n  char isInitialized1;\n  undefined4 tempVar9;\n  undefined4 tempVar10;\n  undefined4 tempVar11;\n  undefined8 tempVar12;\n  undefined8 tempVar13;\n  undefined8 tempVar14;\n  undefined8 tempVar15;\n  undefined4 localVariable1;\n  undefined4 localVariable2;\n  \n  isInitialized1 = *(char *)(input + 0x70);\n  if (isInitialized1 != '\\0') {\n    result = FUN_080058e0();\n    if ((uint)(result - *(int *)(input + 0x44)) < *(uint *)(input + 0x58)) {\n      isInitialized1 = '\\0';\n    }\n    else {\n      tempVar2 = **(undefined4 **)(input + 0x38);\n      tempVar5 = (*(undefined4 **)(input + 0x38))[1];\n      tempVar12 = FUN_08000190(**(undefined4 **)(input + 0x40),(*(undefined4 **)(input + 0x40))[1])\n      ;\n      tempVar11 = (undefined4)((ulonglong)tempVar12 >> 0x20);\n      tempVar13 = FUN_08000190(tempVar2,tempVar5,*(undefined4 *)(input + 0x50),\n                            *(undefined4 *)(input + 0x54));\n      tempVar1 = (undefined4)((ulonglong)tempVar13 >> 0x20);\n      tempVar14 = FUN_080004f8((int)tempVar12,tempVar11,*(undefined4 *)(input + 0x20),\n                            *(undefined4 *)(input + 0x24));\n      tempVar14 = FUN_08000194((int)tempVar14,(int)((ulonglong)tempVar14 >> 0x20),\n                            *(undefined4 *)(input + 0x48),*(undefined4 *)(input + 0x4c));\n      *(undefined8 *)(input + 0x48) = tempVar14;\n      isInitialized = *(char *)(input + 0x71);\n      if (isInitialized == '\\0') {\n        tempVar15 = FUN_080004f8((int)tempVar13,tempVar1,*(undefined4 *)(input + 0x18),\n                              *(undefined4 *)(input + 0x1c));\n        tempVar14 = FUN_08000190((int)tempVar14,(int)((ulonglong)tempVar14 >> 0x20),(int)tempVar15,\n                              (int)((ulonglong)tempVar15 >> 0x20));\n        *(undefined8 *)(input + 0x48) = tempVar14;\n      }\n      tempVar3 = *(undefined4 *)(input + 0x48);\n      tempVar6 = *(undefined4 *)(input + 0x4c);\n      tempVar9 = *(undefined4 *)(undefined8 *)(input + 0x68);\n      tempVar10 = *(undefined4 *)(input + 0x6c);\n      tempVar14 = *(undefined8 *)(input + 0x68);\n      checkResult = FUN_08000a18(tempVar3,tempVar6,tempVar9,tempVar10);\n      if (checkResult == 0) {\n        tempVar4 = *(undefined4 *)(input + 0x60);\n        tempVar7 = *(undefined4 *)(input + 100);\n        checkResult = FUN_080009dc(tempVar3,tempVar6);\n        if (checkResult != 0) {\n          *(undefined4 *)(input + 0x48) = tempVar4;\n          *(undefined4 *)(input + 0x4c) = tempVar7;\n        }\n      }\n      else {\n        *(undefined4 *)(input + 0x48) = tempVar9;\n        *(undefined4 *)(input + 0x4c) = tempVar10;\n      }\n      if (isInitialized == '\\0') {\n        tempVar12 = 0;\n      }\n      else {\n        tempVar12 = FUN_080004f8((int)tempVar12,tempVar11,*(undefined4 *)(input + 0x18),\n                              *(undefined4 *)(input + 0x1c));\n      }\n      localVariable2 = (undefined4)((ulonglong)tempVar12 >> 0x20);\n      localVariable1 = (undefined4)tempVar12;\n      tempVar11 = *(undefined4 *)(input + 0x48);\n      tempVar3 = *(undefined4 *)(input + 0x4c);\n      tempVar12 = FUN_080004f8((int)tempVar13,tempVar1,*(undefined4 *)(input + 0x28),\n                            *(undefined4 *)(input + 0x2c));\n      tempVar12 = FUN_08000190(tempVar11,tempVar3,(int)tempVar12,(int)((ulonglong)tempVar12 >> 0x20));\n      tempVar12 = FUN_08000194(localVariable1,localVariable2,(int)tempVar12,(int)((ulonglong)tempVar12 >> 0x20));\n      tempVar11 = (undefined4)((ulonglong)tempVar12 >> 0x20);\n      checkResult = FUN_080009dc(tempVar9,tempVar10,(int)tempVar12,tempVar11);\n      if (checkResult == 0) {\n        tempVar14 = *(undefined8 *)(input + 0x60);\n        checkResult = FUN_080009dc((int)tempVar12,tempVar11,*(undefined4 *)(undefined8 *)(input + 0x60),\n                             *(undefined4 *)(input + 100));\n        if (checkResult == 0) {\n          tempVar14 = tempVar12;\n        }\n      }\n      **(undefined8 **)(input + 0x3c) = tempVar14;\n      *(undefined4 *)(input + 0x50) = tempVar2;\n      *(undefined4 *)(input + 0x54) = tempVar5;\n      *(int *)(input + 0x44) = result;\n    }\n  }\n  return isInitialized1;\n}\n\n",
            "renaming": {
                "FUN_080016b4": "perform_data_processing_080016b4",
                "param_1": "input",
                "cVar1": "isInitialized",
                "iVar2": "result",
                "iVar3": "checkResult",
                "uVar4": "tempVar1",
                "uVar5": "tempVar2",
                "uVar6": "tempVar3",
                "uVar7": "tempVar4",
                "uVar8": "tempVar5",
                "uVar9": "tempVar6",
                "uVar10": "tempVar7",
                "uVar12": "tempVar9",
                "uVar13": "tempVar10",
                "uVar14": "tempVar11",
                "uVar15": "tempVar12",
                "uVar16": "tempVar13",
                "uVar17": "tempVar14",
                "uVar18": "tempVar15",
                "local_38": "localVariable1",
                "uStack_34": "localVariable2"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08000a18",
                "FUN_08000194",
                "FUN_08000190",
                "FUN_080004f8",
                "FUN_080009dc",
                "FUN_080058e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001814": {
            "entrypoint": "0x08001814",
            "current_name": "initialize_data_08001814",
            "code": "\nvoid initializeData_08001814(undefined4 *data,undefined4 param_2,undefined4 value1,undefined4 value2,\n                 undefined4 value3,undefined4 value4,undefined4 value5,undefined4 value6,\n                 int flag)\n\n{\n  int result;\n  undefined4 temp;\n  undefined flagToChar;\n  bool isFlagOne;\n  undefined8 tempResult1;\n  undefined8 tempResult2;\n  undefined8 tempResult3;\n  \n  result = FUN_080009dc(value1,value2,0,0);\n  if (((result == 0) && (result = FUN_080009dc(value3,value4,0,0), result == 0)) &&\n     (result = FUN_080009dc(value5,value6,0,0), result == 0)) {\n    data[0xd] = flag;\n    isFlagOne = flag != 1;\n    if (isFlagOne) {\n      flag = 0;\n    }\n    flagToChar = (undefined)flag;\n    if (!isFlagOne) {\n      flagToChar = 1;\n    }\n    *(undefined *)((int)data + 0x71) = flagToChar;\n    *data = value1;\n    data[1] = value2;\n    data[2] = value3;\n    data[3] = value4;\n    data[4] = value5;\n    data[5] = value6;\n    tempResult1 = FUN_0800040c(data[0x16]);\n    tempResult1 = FUN_0800074c((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),0,0x408f4000);\n    temp = (undefined4)((ulonglong)tempResult1 >> 0x20);\n    data[6] = value1;\n    data[7] = value2;\n    tempResult2 = FUN_080004f8(value3,value4,(int)tempResult1,temp);\n    *(undefined8 *)(data + 8) = tempResult2;\n    tempResult1 = FUN_0800074c(value5,value6,(int)tempResult1,temp);\n    *(undefined8 *)(data + 10) = tempResult1;\n    if (data[0xc] == 1) {\n      tempResult3 = FUN_08000190(0,0,value1,value2);\n      *(undefined8 *)(data + 6) = tempResult3;\n      tempResult2 = FUN_08000190(0,0,(int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20));\n      *(undefined8 *)(data + 8) = tempResult2;\n      tempResult1 = FUN_08000190(0,0,(int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20));\n      *(undefined8 *)(data + 10) = tempResult1;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001814": "initialize_data_08001814",
                "param_1": "data",
                "param_3": "value1",
                "param_4": "value2",
                "param_5": "value3",
                "param_6": "value4",
                "param_7": "value5",
                "param_8": "value6",
                "param_9": "flag",
                "iVar1": "result",
                "uVar2": "temp",
                "uVar3": "flagToChar",
                "bVar4": "isFlagOne",
                "uVar5": "tempResult1",
                "uVar6": "tempResult2",
                "uVar7": "tempResult3"
            },
            "calling": [
                "FUN_080018f8",
                "FUN_08001ab0"
            ],
            "called": [
                "FUN_08000190",
                "FUN_080004f8",
                "FUN_080009dc",
                "FUN_0800040c",
                "FUN_0800074c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080018f8": {
            "entrypoint": "0x080018f8",
            "current_name": "initialize_application_080018f8",
            "code": "\nvoid initializeApplication_080018f8(void)\n\n{\n  FUN_08001814();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080018f8": "initialize_application_080018f8"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08001814"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001918": {
            "entrypoint": "0x08001918",
            "current_name": "update_data_08001918",
            "code": "\nvoid updateData_08001918(int dataPtr,int size,undefined4 param1,undefined4 param2)\n\n{\n  undefined4 upperValue;\n  undefined8 ptr1;\n  undefined8 ptr2;\n  \n  if (0 < size) {\n    ptr1 = FUN_0800042c(size);\n    ptr2 = FUN_0800040c(*(undefined4 *)(dataPtr + 0x58));\n    ptr1 = FUN_0800074c((int)ptr1,(int)((ulonglong)ptr1 >> 0x20),(int)ptr2,\n                         (int)((ulonglong)ptr2 >> 0x20),param2);\n    upperValue = (undefined4)((ulonglong)ptr1 >> 0x20);\n    ptr2 = FUN_080004f8((int)ptr1,upperValue,*(undefined4 *)(dataPtr + 0x20),\n                         *(undefined4 *)(dataPtr + 0x24));\n    *(undefined8 *)(dataPtr + 0x20) = ptr2;\n    ptr1 = FUN_0800074c(*(undefined4 *)(dataPtr + 0x28),*(undefined4 *)(dataPtr + 0x2c),(int)ptr1,\n                         upperValue);\n    *(undefined8 *)(dataPtr + 0x28) = ptr1;\n    *(int *)(dataPtr + 0x58) = size;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001918": "update_data_08001918",
                "param_1": "dataPtr",
                "param_2": "size",
                "param_3": "param1",
                "param_4": "param2",
                "uVar1": "upperValue",
                "uVar2": "ptr1",
                "uVar3": "ptr2"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080004f8",
                "FUN_0800040c",
                "FUN_0800042c",
                "FUN_0800074c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001960": {
            "entrypoint": "0x08001960",
            "current_name": "update_data_08001960",
            "code": "\nvoid updateData_08001960(int dataStructPtr,undefined4 param2,undefined4 newData1,undefined4 newData2,\n                 undefined4 newDataPtr1,undefined4 newDataPtr2)\n\n{\n  int result;\n  undefined4 *dataPtr;\n  undefined4 tempData1;\n  undefined4 tempData2;\n  undefined4 tempDataPtr1;\n  undefined4 tempDataPtr2;\n  \n  result = FUN_08000a04(newData1,newData2,newDataPtr1,newDataPtr2,newData2);\n  if (result == 0) {\n    *(undefined4 *)(dataStructPtr + 0x60) = newData1;\n    *(undefined4 *)(dataStructPtr + 100) = newData2;\n    *(undefined4 *)(dataStructPtr + 0x68) = newDataPtr1;\n    *(undefined4 *)(dataStructPtr + 0x6c) = newDataPtr2;\n    if (*(char *)(dataStructPtr + 0x70) != '\\0') {\n      dataPtr = *(undefined4 **)(dataStructPtr + 0x3c);\n      tempData1 = *dataPtr;\n      tempDataPtr1 = dataPtr[1];\n      result = FUN_080009dc(newDataPtr1,newDataPtr2,tempData1,tempDataPtr1);\n      if (result == 0) {\n        result = FUN_08000a18(newData1,newData2,tempData1,tempDataPtr1);\n        if (result != 0) {\n          *dataPtr = newData1;\n          dataPtr[1] = newData2;\n        }\n      }\n      else {\n        *dataPtr = newDataPtr1;\n        dataPtr[1] = newDataPtr2;\n      }\n      tempData1 = *(undefined4 *)(dataStructPtr + 0x48);\n      tempDataPtr1 = *(undefined4 *)(dataStructPtr + 0x4c);\n      tempData2 = *(undefined4 *)(dataStructPtr + 0x68);\n      tempDataPtr2 = *(undefined4 *)(dataStructPtr + 0x6c);\n      result = FUN_08000a18(tempData1,tempDataPtr1,tempData2,tempDataPtr2);\n      if (result != 0) {\n        *(undefined4 *)(dataStructPtr + 0x48) = tempData2;\n        *(undefined4 *)(dataStructPtr + 0x4c) = tempDataPtr2;\n        return;\n      }\n      tempData2 = *(undefined4 *)(dataStructPtr + 0x60);\n      tempDataPtr2 = *(undefined4 *)(dataStructPtr + 100);\n      result = FUN_080009dc(tempData1,tempDataPtr1,tempData2,tempDataPtr2);\n      if (result != 0) {\n        *(undefined4 *)(dataStructPtr + 0x48) = tempData2;\n        *(undefined4 *)(dataStructPtr + 0x4c) = tempDataPtr2;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001960": "update_data_08001960",
                "param_1": "dataStructPtr",
                "param_2": "param2",
                "param_3": "newData1",
                "param_4": "newData2",
                "param_5": "newDataPtr1",
                "param_6": "newDataPtr2",
                "iVar1": "result",
                "puVar2": "dataPtr",
                "uVar3": "tempData1",
                "uVar4": "tempData2",
                "uVar5": "tempDataPtr1",
                "uVar6": "tempDataPtr2"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08001ab0"
            ],
            "called": [
                "FUN_08000a18",
                "FUN_08000a04",
                "FUN_080009dc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080019f6": {
            "entrypoint": "0x080019f6",
            "current_name": "update_values_080019f6",
            "code": "\nvoid updateValues_080019f6(int baseAddress)\n\n{\n  int result;\n  undefined4 value1;\n  undefined4 ptrValue1;\n  undefined4 ptrValue2;\n  undefined4 value2;\n  \n  ptrValue1 = **(undefined4 **)(baseAddress + 0x3c);\n  ptrValue2 = (*(undefined4 **)(baseAddress + 0x3c))[1];\n  *(undefined4 *)(baseAddress + 0x48) = ptrValue1;\n  *(undefined4 *)(baseAddress + 0x4c) = ptrValue2;\n  value1 = (*(undefined4 **)(baseAddress + 0x38))[1];\n  *(undefined4 *)(baseAddress + 0x50) = **(undefined4 **)(baseAddress + 0x38);\n  *(undefined4 *)(baseAddress + 0x54) = value1;\n  value1 = *(undefined4 *)(baseAddress + 0x68);\n  value2 = *(undefined4 *)(baseAddress + 0x6c);\n  result = FUN_08000a18(ptrValue1,ptrValue2,value1,value2);\n  if (result == 0) {\n    value1 = *(undefined4 *)(baseAddress + 0x60);\n    value2 = *(undefined4 *)(baseAddress + 100);\n    result = FUN_080009dc(ptrValue1,ptrValue2,value1,value2);\n    if (result != 0) {\n      *(undefined4 *)(baseAddress + 0x48) = value1;\n      *(undefined4 *)(baseAddress + 0x4c) = value2;\n    }\n    return;\n  }\n  *(undefined4 *)(baseAddress + 0x48) = value1;\n  *(undefined4 *)(baseAddress + 0x4c) = value2;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080019f6": "update_values_080019f6",
                "param_1": "baseAddress",
                "iVar1": "result",
                "uVar2": "value1",
                "uVar3": "ptrValue1",
                "uVar4": "ptrValue2",
                "uVar5": "value2"
            },
            "calling": [
                "FUN_08001a44"
            ],
            "called": [
                "FUN_08000a18",
                "FUN_080009dc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001a44": {
            "entrypoint": "0x08001a44",
            "current_name": "update_flag_08001a44",
            "code": "\nvoid updateFlag_08001a44(int objectAddress,int flagValue)\n\n{\n  undefined newFlagValue;\n  \n  if (flagValue == 1) {\n    newFlagValue = 1;\n    if (*(char *)(objectAddress + 0x70) == '\\0') {\n      FUN_080019f6();\n    }\n  }\n  else {\n    newFlagValue = 0;\n  }\n  *(undefined *)(objectAddress + 0x70) = newFlagValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001a44": "update_flag_08001a44",
                "param_1": "objectAddress",
                "param_2": "flagValue",
                "uVar1": "newFlagValue"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080019f6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001a66": {
            "entrypoint": "0x08001a66",
            "current_name": "update_parameters_08001a66",
            "code": "\nvoid updateParameters_08001a66(int ptr_parameter1,int ptr_parameter2,undefined4 param_3,undefined4 param_4)\n\n{\n  undefined8 result;\n  \n  if ((*(char *)(ptr_parameter1 + 0x70) != '\\0') && (*(int *)(ptr_parameter1 + 0x30) != ptr_parameter2)) {\n    result = FUN_08000190(0,0,*(undefined4 *)(ptr_parameter1 + 0x18),*(undefined4 *)(ptr_parameter1 + 0x1c),param_4\n                        );\n    *(undefined8 *)(ptr_parameter1 + 0x18) = result;\n    result = FUN_08000190(0,0,*(undefined4 *)(ptr_parameter1 + 0x20),*(undefined4 *)(ptr_parameter1 + 0x24));\n    *(undefined8 *)(ptr_parameter1 + 0x20) = result;\n    result = FUN_08000190(0,0,*(undefined4 *)(ptr_parameter1 + 0x28),*(undefined4 *)(ptr_parameter1 + 0x2c));\n    *(undefined8 *)(ptr_parameter1 + 0x28) = result;\n  }\n  *(int *)(ptr_parameter1 + 0x30) = ptr_parameter2;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001a66": "update_parameters_08001a66",
                "param_1": "ptr_parameter1",
                "param_2": "ptr_parameter2",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08001ab0"
            ],
            "called": [
                "FUN_08000190"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001ab0": {
            "entrypoint": "0x08001ab0",
            "current_name": "initialize_parameters_08001ab0",
            "code": "\nint initializeParameters_08001ab0(int parameter1,undefined4 parameter2,undefined4 parameter3,undefined4 parameter4,\n                undefined4 parameter5,undefined4 parameter6,undefined4 parameter7,undefined4 parameter8,\n                undefined4 parameter9,undefined4 parameter10,undefined4 parameter11,undefined4 parameter12)\n\n{\n  int result;\n  undefined4 extraOutput;\n  \n  *(undefined4 *)(parameter1 + 0x3c) = parameter3;\n  *(undefined4 *)(parameter1 + 0x38) = parameter2;\n  *(undefined4 *)(parameter1 + 0x40) = parameter4;\n  *(undefined *)(parameter1 + 0x70) = 0;\n  FUN_08001960(parameter1,parameter2,0,0,0,0x406fe000);\n  *(undefined4 *)(parameter1 + 0x58) = 100;\n  FUN_08001a66(parameter1,parameter12);\n  FUN_08001814(parameter1,extraOutput,parameter5,parameter6,parameter7,parameter8,parameter9,parameter10,parameter11);\n  result = FUN_080058e0();\n  *(int *)(parameter1 + 0x44) = result - *(int *)(parameter1 + 0x58);\n  return parameter1;\n}\n\n",
            "renaming": {
                "FUN_08001ab0": "initialize_parameters_08001ab0",
                "param_1": "parameter1",
                "param_2": "parameter2",
                "param_3": "parameter3",
                "param_4": "parameter4",
                "param_5": "parameter5",
                "param_6": "parameter6",
                "param_7": "parameter7",
                "param_8": "parameter8",
                "param_9": "parameter9",
                "param_10": "parameter10",
                "param_11": "parameter11",
                "param_12": "parameter12",
                "iVar1": "result",
                "extraout_r1": "extraOutput"
            },
            "calling": [
                "FUN_08001b18"
            ],
            "called": [
                "FUN_08001814",
                "FUN_08001960",
                "FUN_080058e0",
                "FUN_08001a66"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001b18": {
            "entrypoint": "0x08001b18",
            "current_name": "initialize_param_08001b18",
            "code": "\nundefined4 initializeParam_08001b18(undefined4 inputParam)\n\n{\n  FUN_08001ab0();\n  return inputParam;\n}\n\n",
            "renaming": {
                "FUN_08001b18": "initialize_param_08001b18",
                "param_1": "inputParam"
            },
            "calling": [
                "FUN_08000b08"
            ],
            "called": [
                "FUN_08001ab0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001b48": {
            "entrypoint": "0x08001b48",
            "current_name": "initialize_08001b48",
            "code": "\nvoid initialize_08001b48(void)\n\n{\n  int result;\n  uint millis;\n  undefined4 sckPin [2];\n  undefined4 clkFrequency;\n  undefined4 ss;\n  undefined4 spiMode;\n  undefined4 spiBits;\n  undefined4 spiFrequency;\n  undefined4 spiDelay;\n  undefined4 modePin [4];\n  undefined4 resetPin;\n  undefined4 chipSelectPin;\n  undefined4 spiClockPin;\n  undefined4 spiDataPin;\n  undefined4 spiSpeed;\n  \n  modePin[0] = 2;\n  resetPin = 1;\n  chipSelectPin = 0x10;\n  spiClockPin = 2;\n  spiDataPin = 0;\n  spiSpeed = 0x380000;\n  result = FUN_08003688(modePin);\n  if (result != 0) {\n    FUN_08004d40(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x88);\n  }\n  ss = 0xf;\n  spiMode = 2;\n  spiBits = 0;\n  spiFrequency = 0x400;\n  spiDelay = 0;\n  result = FUN_08003ad4(&ss);\n  if (result != 0) {\n    FUN_08004d40(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x95);\n  }\n  sckPin[0] = 2;\n  clkFrequency = 0x8000;\n  result = FUN_08003c90(sckPin);\n  if (result != 0) {\n    FUN_08004d40(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x9c);\n  }\n  millis = FUN_08003c44();\n  FUN_08002514(millis / 1000);\n  FUN_08002560(4);\n  FUN_08002494(0xffffffff,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001b48": "initialize_08001b48",
                "local_30": "modePin",
                "local_20": "resetPin",
                "local_1c": "chipSelectPin",
                "local_14": "spiClockPin",
                "local_10": "spiDataPin",
                "local_c": "spiSpeed",
                "iVar1": "result",
                "local_44": "ss",
                "local_40": "spiMode",
                "local_3c": "spiBits",
                "local_38": "spiFrequency",
                "local_34": "spiDelay",
                "local_54": "sckPin",
                "local_4c": "clkFrequency",
                "uVar2": "millis"
            },
            "calling": [
                "FUN_08004c52"
            ],
            "called": [
                "FUN_08002494",
                "FUN_08003c90",
                "FUN_08002560",
                "FUN_08002514",
                "FUN_08004d40",
                "FUN_08003c44",
                "FUN_08003ad4",
                "FUN_08003688"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "entry": {
            "entrypoint": "0x08001be8",
            "current_name": "entry",
            "code": "\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined *)(iVar1 + 0x20000000) < &DAT_2000015c; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x8007970);\n  }\n  for (puVar2 = &DAT_20000160; puVar2 < &DAT_200006a8; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  FUN_08004d44();\n  FUN_08006198();\n  UNRECOVERED_JUMPTABLE = (code *)0x8001c1a;\n  FUN_08005f6c();\n                    /* WARNING: Could not recover jumptable at 0x08001c1a. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "renaming": {},
            "calling": [],
            "called": [
                "FUN_08006198",
                "FUN_08004d44",
                "FUN_08005f6c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c32": {
            "entrypoint": "0x08001c32",
            "current_name": "initialize_application_08001c32",
            "code": "\nvoid initializeApplication_08001c32(void)\n\n{\n  FUN_08004c52();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001c32": "initialize_application_08001c32"
            },
            "calling": [
                "FUN_08005f5e"
            ],
            "called": [
                "FUN_08004c52"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c3a": {
            "entrypoint": "0x08001c3a",
            "current_name": "FUNC_08001c3a",
            "code": "\nvoid FUNC_08001c3a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001c3a": "FUNC_08001c3a"
            },
            "calling": [
                "FUN_08001c88"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08001c3c": {
            "entrypoint": "0x08001c3c",
            "current_name": "check_and_set_param_08001c3c",
            "code": "\nundefined4 checkAndSetParam_08001c3c(uint inputParam)\n\n{\n  int result;\n  \n  result = FUN_08002514(DAT_20000084 / (1000 / DAT_20000078));\n  if (result != 0) {\n    return 1;\n  }\n  if (0xf < inputParam) {\n    return 1;\n  }\n  FUN_08002494(0xffffffff,inputParam,0);\n  DAT_2000007c = inputParam;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001c3c": "check_and_set_param_08001c3c",
                "param_1": "inputParam",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08003afa",
                "FUN_08001c88"
            ],
            "called": [
                "FUN_08002494",
                "FUN_08002514"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c88": {
            "entrypoint": "0x08001c88",
            "current_name": "set_flags_and_call_functions_08001c88",
            "code": "\n\n\nundefined4 set_flags_and_call_functions_08001c88(void)\n\n{\n  _DAT_40022000 = _DAT_40022000 | 0x10;\n  FUN_08002470(3);\n  FUN_08001c3c(0xf);\n  FUNC_08001c3a();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001c88": "set_flags_and_call_functions_08001c88"
            },
            "calling": [
                "FUN_08004c52"
            ],
            "called": [
                "FUN_08001c3c",
                "FUN_08001c3a",
                "FUN_08002470"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001cac": {
            "entrypoint": "0x08001cac",
            "current_name": "add_global_data_to_count_08001cac",
            "code": "\nvoid addGlobalDataToCount_08001cac(void)\n\n{\n  DAT_200006a0 = (uint)DAT_20000078 + DAT_200006a0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001cac": "add_global_data_to_count_08001cac"
            },
            "calling": [
                "FUN_08004b9e"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001cc4": {
            "entrypoint": "0x08001cc4",
            "current_name": "get_global_data_08001cc4",
            "code": "\nundefined4 getGlobalData_08001cc4(void)\n\n{\n  return DAT_200006a0;\n}\n\n",
            "renaming": {
                "FUN_08001cc4": "get_global_data_08001cc4"
            },
            "calling": [
                "FUN_08004478",
                "FUN_08002384",
                "FUN_080053d4",
                "FUN_08003afa",
                "FUN_08003c90",
                "FUN_08001cd0",
                "FUN_08001f84",
                "FUN_080043b4",
                "FUN_080020f0",
                "FUN_08004b94",
                "FUN_08003688"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001cd0": {
            "entrypoint": "0x08001cd0",
            "current_name": "check_and_modify_flags_08001cd0",
            "code": "\nundefined4 checkAndModifyFlags_08001cd0(uint **data,uint limit)\n\n{\n  int initialValue;\n  uint randomValue;\n  int loopCount;\n  undefined4 result;\n  uint *pointerToData;\n  uint calcResult;\n  uint counter;\n  \n  counter = 0;\n  initialValue = FUN_08001cc4();\n  calcResult = DAT_20000084;\n  pointerToData = *data;\n  if ((pointerToData[2] & 0x100) == 0) {\n    if (((pointerToData[1] & 0x100) == 0) && ((pointerToData[0xb] & 0xf00000) == 0)) {\n      do {\n        if ((**data & 2) != 0) goto LAB_08001de2;\n      } while ((limit == 0xffffffff) ||\n              ((limit != 0 && (loopCount = FUN_08001cc4(), (uint)(loopCount - initialValue) <= limit))));\n      data[10] = (uint *)((uint)data[10] | 4);\n      *(undefined *)(data + 9) = 0;\n      result = 3;\n    }\n    else {\n      randomValue = FUN_08003da4(2);\n      pointerToData = *data;\n      if (((pointerToData[4] & 0x24924924) == 0) && ((pointerToData[3] & 0x924924) == 0)) {\n        if ((pointerToData[4] & 0x12492492) == 0) {\n          if ((pointerToData[3] & 0x492492) == 0) {\n            loopCount = 0x14;\n          }\n          else {\n            loopCount = 0x29;\n          }\n        }\n        else {\n          loopCount = 0x29;\n        }\n      }\n      else if (((pointerToData[4] & 0x12492492) == 0) && ((pointerToData[3] & 0x492492) == 0)) {\n        loopCount = 0x54;\n      }\n      else if ((pointerToData[4] & 0x249249) == 0) {\n        if ((pointerToData[3] & 0x249249) == 0) {\n          loopCount = 0x54;\n        }\n        else {\n          loopCount = 0xfc;\n        }\n      }\n      else {\n        loopCount = 0xfc;\n      }\n      calcResult = (calcResult / randomValue) * loopCount;\n      for (; counter <= calcResult && calcResult - counter != 0; counter = counter + 1) {\n        if ((limit != 0xffffffff) &&\n           ((limit == 0 || (loopCount = FUN_08001cc4(), limit < (uint)(loopCount - initialValue))))) {\n          data[10] = (uint *)((uint)data[10] | 4);\n          *(undefined *)(data + 9) = 0;\n          return 3;\n        }\n      }\nLAB_08001de2:\n      **data = 0xffffffed;\n      data[10] = (uint *)((uint)data[10] | 0x200);\n      if (((*data)[2] & 0xe0000) == 0xe0000) {\n        if (data[3] == (uint *)0x0) {\n          data[10] = (uint *)((uint)data[10] & 0xfffffeff);\n          if (((uint)data[10] & 0x1000) == 0) {\n            data[10] = (uint *)((uint)data[10] | 1);\n            result = 0;\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        result = 0;\n      }\n    }\n  }\n  else {\n    data[10] = (uint *)((uint)data[10] | 0x20);\n    *(undefined *)(data + 9) = 0;\n    result = 1;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08001cd0": "check_and_modify_flags_08001cd0",
                "param_1": "data",
                "param_2": "limit",
                "iVar1": "initialValue",
                "uVar2": "randomValue",
                "iVar3": "loopCount",
                "uVar4": "result",
                "puVar5": "pointerToData",
                "uVar6": "calcResult",
                "local_1c": "counter"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08003da4",
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001e40": {
            "entrypoint": "0x08001e40",
            "current_name": "get_offset_value_08001e40",
            "code": "\nundefined4 getOffsetValue_08001e40(int *offsetPtr)\n\n{\n  return *(undefined4 *)(*offsetPtr + 0x4c);\n}\n\n",
            "renaming": {
                "FUN_08001e40": "get_offset_value_08001e40",
                "param_1": "offsetPtr"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001e48": {
            "entrypoint": "0x08001e48",
            "current_name": "update_parameters_08001e48",
            "code": "\nundefined4 updateParameters_08001e48(int *params,uint *values)\n\n{\n  undefined4 returnValue;\n  uint temp;\n  int counter;\n  \n  if (*(char *)(params + 9) == '\\x01') {\n    returnValue = 2;\n  }\n  else {\n    *(undefined *)(params + 9) = 1;\n    temp = values[1];\n    if (temp < 7) {\n      temp = temp * 5 - 5;\n      *(uint *)(*params + 0x34) =\n           *values << (temp & 0xff) | *(uint *)(*params + 0x34) & ~(0x1f << (temp & 0xff));\n    }\n    else if (temp < 0xd) {\n      temp = temp * 5 - 0x23;\n      *(uint *)(*params + 0x30) =\n           *values << (temp & 0xff) | *(uint *)(*params + 0x30) & ~(0x1f << (temp & 0xff));\n    }\n    else {\n      temp = temp * 5 - 0x41;\n      *(uint *)(*params + 0x2c) =\n           *values << (temp & 0xff) | *(uint *)(*params + 0x2c) & ~(0x1f << (temp & 0xff));\n    }\n    temp = *values;\n    if (temp < 10) {\n      *(uint *)(*params + 0x10) =\n           values[2] << (temp * 3 & 0xff) |\n           *(uint *)(*params + 0x10) & ~(7 << (temp * 3 & 0xff));\n    }\n    else {\n      temp = temp * 3 - 0x1e;\n      *(uint *)(*params + 0xc) =\n           values[2] << (temp & 0xff) | *(uint *)(*params + 0xc) & ~(7 << (temp & 0xff));\n    }\n    if (*values - 0x10 < 2) {\n      if (*params == 0x40012400) {\n        if ((uRam40012408 & 0x800000) == 0) {\n          uRam40012408 = uRam40012408 | 0x800000;\n          if (*values == 0x10) {\n            for (counter = (DAT_20000084 / 1000000) * 10; counter != 0; counter = counter + -1) {\n            }\n            returnValue = 0;\n          }\n          else {\n            returnValue = 0;\n          }\n        }\n        else {\n          returnValue = 0;\n        }\n      }\n      else {\n        params[10] = params[10] | 0x20;\n        returnValue = 1;\n      }\n    }\n    else {\n      returnValue = 0;\n    }\n    *(undefined *)(params + 9) = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08001e48": "update_parameters_08001e48",
                "param_1": "params",
                "param_2": "values",
                "uVar1": "returnValue",
                "uVar2": "temp",
                "local_c": "counter"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001f80": {
            "entrypoint": "0x08001f80",
            "current_name": "get_memory_value_08001f80",
            "code": "\nundefined4 getMemoryValue_08001f80(int address)\n\n{\n  return *(undefined4 *)(address + 0x28);\n}\n\n",
            "renaming": {
                "FUN_08001f80": "get_memory_value_08001f80",
                "param_1": "address"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001f84": {
            "entrypoint": "0x08001f84",
            "current_name": "update_data_status_08001f84",
            "code": "\nundefined4 updateDataStatus_08001f84(int *data,undefined4 status)\n\n{\n  int result;\n  undefined4 returnStatus;\n  int dataPtr;\n  uint delay;\n  \n  dataPtr = *data;\n  if ((*(uint *)(dataPtr + 8) & 1) == 0) {\n    *(uint *)(dataPtr + 8) = *(uint *)(dataPtr + 8) | 1;\n    for (delay = DAT_20000084 / 1000000; delay != 0; delay = delay - 1) {\n    }\n    dataPtr = FUN_08001cc4(data,status,DAT_20000084 * 0x431bde83);\n    do {\n      if ((*(uint *)(*data + 8) & 1) != 0) {\n        return 0;\n      }\n      result = FUN_08001cc4();\n    } while ((uint)(result - dataPtr) < 3);\n    data[10] = data[10] | 0x10;\n    data[0xb] = data[0xb] | 1;\n    *(undefined *)(data + 9) = 0;\n    returnStatus = 1;\n  }\n  else {\n    returnStatus = 0;\n  }\n  return returnStatus;\n}\n\n",
            "renaming": {
                "FUN_08001f84": "update_data_status_08001f84",
                "param_1": "data",
                "param_2": "status",
                "iVar1": "result",
                "iVar3": "dataPtr",
                "uVar2": "returnStatus",
                "local_14": "delay"
            },
            "calling": [
                "FUN_08002384",
                "FUN_08002004"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002004": {
            "entrypoint": "0x08002004",
            "current_name": "update_flags_and_settings_08002004",
            "code": "\n\n\nint updateFlagsAndSettings_08002004(int *parameters)\n\n{\n  int result;\n  undefined4 *pointerVar;\n  int intValue;\n  \n  if (*(char *)(parameters + 9) != '\\x01') {\n    *(undefined *)(parameters + 9) = 1;\n    result = FUN_08001f84();\n    if (result == 0) {\n      parameters[10] = parameters[10] & 0xfffffcfeU | 0x100;\n      pointerVar = (undefined4 *)*parameters;\n      if ((pointerVar == (undefined4 *)0x40012800) && ((_DAT_40012404 & 0xf0000) != 0)) {\n        parameters[10] = parameters[10] | 0x100000;\n        if ((_DAT_40012404 & 0x400) != 0) {\n          parameters[10] = parameters[10] & 0xffffcfffU | 0x1000;\n        }\n      }\n      else {\n        parameters[10] = parameters[10] & 0xffefffff;\n        if ((pointerVar[1] & 0x400) != 0) {\n          parameters[10] = parameters[10] & 0xffffcfffU | 0x1000;\n        }\n      }\n      if ((parameters[10] & 0x1000U) == 0) {\n        parameters[0xb] = 0;\n      }\n      else {\n        parameters[0xb] = parameters[0xb] & 0xfffffff9;\n      }\n      *(undefined *)(parameters + 9) = 0;\n      *pointerVar = 0xfffffffd;\n      intValue = *parameters;\n      if (((*(uint *)(intValue + 8) & 0xe0000) == 0xe0000) &&\n         ((intValue != 0x40012800 || ((_DAT_40012404 & 0xf0000) == 0)))) {\n        *(uint *)(intValue + 8) = *(uint *)(intValue + 8) | 0x500000;\n      }\n      else {\n        *(uint *)(intValue + 8) = *(uint *)(intValue + 8) | 0x100000;\n      }\n    }\n    else {\n      *(undefined *)(parameters + 9) = 0;\n    }\n    return result;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08002004": "update_flags_and_settings_08002004",
                "param_1": "parameters",
                "iVar1": "result",
                "puVar2": "pointerVar",
                "iVar3": "intValue"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08001f84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080020f0": {
            "entrypoint": "0x080020f0",
            "current_name": "update_memory_flags_080020f0",
            "code": "\nundefined4 updateMemoryFlags_080020f0(int *memoryPointer)\n\n{\n  int currentValue;\n  int originalValue;\n  \n  originalValue = *memoryPointer;\n  if ((*(uint *)(originalValue + 8) & 1) == 0) {\n    return 0;\n  }\n  *(uint *)(originalValue + 8) = *(uint *)(originalValue + 8) & 0xfffffffe;\n  originalValue = FUN_08001cc4();\n  do {\n    if ((*(uint *)(*memoryPointer + 8) & 1) == 0) {\n      return 0;\n    }\n    currentValue = FUN_08001cc4();\n  } while ((uint)(currentValue - originalValue) < 3);\n  memoryPointer[10] = memoryPointer[10] | 0x10;\n  memoryPointer[0xb] = memoryPointer[0xb] | 1;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080020f0": "update_memory_flags_080020f0",
                "param_1": "memoryPointer",
                "iVar1": "currentValue",
                "iVar2": "originalValue"
            },
            "calling": [
                "FUN_0800213c",
                "FUN_08002384",
                "FUN_08002348",
                "FUN_0800224c"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800213c": {
            "entrypoint": "0x0800213c",
            "current_name": "verify_parameters_0800213c",
            "code": "\nundefined4 verify_parameters_0800213c(int *parameters)\n\n{\n  int result;\n  uint flags;\n  uint value;\n  \n  if (parameters == (int *)0x0) {\n    return 1;\n  }\n  if (parameters[10] == 0) {\n    parameters[0xb] = 0;\n    *(undefined *)(parameters + 9) = 0;\n    FUN_08004974();\n  }\n  result = FUN_080020f0(parameters);\n  if (((parameters[10] & 0x10U) == 0) && (result == 0)) {\n    parameters[10] = parameters[10] & 0xffffeefdU | 2;\n    flags = parameters[1] | parameters[7] | parameters[3] << 1;\n    if (parameters[2] == 0x100) {\n      value = 0x100;\n    }\n    else {\n      value = 0;\n      if (parameters[2] == 1) {\n        value = 0x100;\n      }\n    }\n    if (parameters[5] == 1) {\n      if (parameters[3] == 0) {\n        value = value | (parameters[6] + -1) * 0x2000 | 0x800;\n      }\n      else {\n        parameters[10] = parameters[10] | 0x20;\n        parameters[0xb] = parameters[0xb] | 1;\n      }\n    }\n    *(uint *)(*parameters + 4) = value | *(uint *)(*parameters + 4) & 0xffff16ff;\n    *(uint *)(*parameters + 8) = *(uint *)(*parameters + 8) & 0xffe1f7fd | flags;\n    if ((parameters[2] == 0x100) || (parameters[2] == 1)) {\n      value = (parameters[4] + -1) * 0x100000;\n    }\n    else {\n      value = 0;\n    }\n    *(uint *)(*parameters + 0x2c) = value | *(uint *)(*parameters + 0x2c) & 0xff0fffff;\n    if (flags != (*(uint *)(*parameters + 8) & 0xff1f0efe)) {\n      parameters[10] = parameters[10] & 0xffffffedU | 0x10;\n      parameters[0xb] = parameters[0xb] | 1;\n      return 1;\n    }\n    parameters[0xb] = 0;\n    parameters[10] = parameters[10] & 0xfffffffcU | 1;\n    return 0;\n  }\n  parameters[10] = parameters[10] | 0x10;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800213c": "verify_parameters_0800213c",
                "param_1": "parameters",
                "iVar1": "result",
                "uVar2": "flags",
                "uVar3": "value"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08004974",
                "FUN_080020f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800224c": {
            "entrypoint": "0x0800224c",
            "current_name": "initialize_parameter_0800224c",
            "code": "\nint initializeParameter_0800224c(int *parameter)\n\n{\n  int returnValue;\n  \n  if (parameter == (int *)0x0) {\n    returnValue = 1;\n  }\n  else {\n    parameter[10] = parameter[10] | 2;\n    returnValue = FUN_080020f0();\n    if (returnValue == 0) {\n      *(undefined4 *)*parameter = 0xffffffe0;\n      *(uint *)(*parameter + 4) = *(uint *)(*parameter + 4) & 0xff3f0000;\n      *(uint *)(*parameter + 8) = *(uint *)(*parameter + 8) & 0xff0106f0;\n      *(uint *)(*parameter + 0xc) = *(uint *)(*parameter + 0xc) & 0xff000000;\n      *(uint *)(*parameter + 0x10) = *(uint *)(*parameter + 0x10) & 0xc0000000;\n      *(uint *)(*parameter + 0x14) = *(uint *)(*parameter + 0x14) & 0xfffff000;\n      *(uint *)(*parameter + 0x18) = *(uint *)(*parameter + 0x18) & 0xfffff000;\n      *(uint *)(*parameter + 0x1c) = *(uint *)(*parameter + 0x1c) & 0xfffff000;\n      *(uint *)(*parameter + 0x20) = *(uint *)(*parameter + 0x20) & 0xfffff000;\n      *(uint *)(*parameter + 0x24) = *(uint *)(*parameter + 0x24) & 0xfffff000;\n      *(uint *)(*parameter + 0x28) = *(uint *)(*parameter + 0x28) & 0xfffff000;\n      *(uint *)(*parameter + 0x2c) = *(uint *)(*parameter + 0x2c) & 0xff000000;\n      *(uint *)(*parameter + 0x2c) = *(uint *)(*parameter + 0x2c) & 0xff000000;\n      *(uint *)(*parameter + 0x30) = *(uint *)(*parameter + 0x30) & 0xc0000000;\n      *(uint *)(*parameter + 0x34) = *(uint *)(*parameter + 0x34) & 0xc0000000;\n      *(uint *)(*parameter + 0x38) = *(uint *)(*parameter + 0x38) & 0xffc00000;\n      *(uint *)(*parameter + 0x38) = *(uint *)(*parameter + 0x38) & 0xffc00000;\n      FUN_080049f0(parameter);\n      parameter[0xb] = 0;\n      parameter[10] = 0;\n    }\n    *(undefined *)(parameter + 9) = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_0800224c": "initialize_parameter_0800224c",
                "param_1": "parameter",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_080020f0",
                "FUN_080049f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002348": {
            "entrypoint": "0x08002348",
            "current_name": "check_flag_status_08002348",
            "code": "\nint checkFlagStatus_08002348(int flag)\n\n{\n  int result;\n  \n  if (*(char *)(flag + 0x24) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(flag + 0x24) = 1;\n  result = FUN_080020f0();\n  if (result == 0) {\n    *(uint *)(flag + 0x28) = *(uint *)(flag + 0x28) & 0xffffeefe | 1;\n  }\n  *(undefined *)(flag + 0x24) = 0;\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002348": "check_flag_status_08002348",
                "param_1": "flag",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_080020f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002384": {
            "entrypoint": "0x08002384",
            "current_name": "check_and_update_function_08002384",
            "code": "\nint check_and_update_function_08002384(int *pointer)\n\n{\n  uint division_result;\n  int result;\n  uint division_parameter;\n  int starting_value;\n  int current_value;\n  int loop_counter;\n  \n  if (*(char *)(pointer + 9) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(pointer + 9) = 1;\n  result = FUN_080020f0();\n  if (result == 0) {\n    pointer[10] = pointer[10] & 0xffffeefdU | 2;\n    division_result = DAT_20000084;\n    division_parameter = FUN_08003da4(2);\n    for (loop_counter = division_result / division_parameter << 1; loop_counter != 0; loop_counter = loop_counter + -1) {\n    }\n    FUN_08001f84(pointer);\n    *(uint *)(*pointer + 8) = *(uint *)(*pointer + 8) | 8;\n    starting_value = FUN_08001cc4();\n    while (current_value = *pointer, (*(uint *)(current_value + 8) & 8) != 0) {\n      current_value = FUN_08001cc4();\n      if (10 < (uint)(current_value - starting_value)) {\n        pointer[10] = pointer[10] & 0xffffffedU | 0x10;\n        *(undefined *)(pointer + 9) = 0;\n        return 1;\n      }\n    }\n    *(uint *)(current_value + 8) = *(uint *)(current_value + 8) | 4;\n    starting_value = FUN_08001cc4();\n    while ((*(uint *)(*pointer + 8) & 4) != 0) {\n      current_value = FUN_08001cc4();\n      if (10 < (uint)(current_value - starting_value)) {\n        pointer[10] = pointer[10] & 0xffffffedU | 0x10;\n        *(undefined *)(pointer + 9) = 0;\n        return 1;\n      }\n    }\n    pointer[10] = pointer[10] & 0xfffffffcU | 1;\n  }\n  *(undefined *)(pointer + 9) = 0;\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002384": "check_and_update_function_08002384",
                "param_1": "pointer",
                "uVar1": "division_result",
                "iVar2": "result",
                "uVar3": "division_parameter",
                "iVar4": "starting_value",
                "iVar5": "current_value",
                "local_14": "loop_counter"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08003da4",
                "FUN_08001cc4",
                "FUN_08001f84",
                "FUN_080020f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002470": {
            "entrypoint": "0x08002470",
            "current_name": "update_register_value_08002470",
            "code": "\n\n\nvoid updateRegisterValue_08002470(uint input)\n\n{\n  _DAT_e000ed0c = (input & 7) << 8 | _DAT_e000ed0c & 0xf8ff | 0x5fa0000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002470": "update_register_value_08002470",
                "param_1": "input"
            },
            "calling": [
                "FUN_08005f5e",
                "FUN_08001c88"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002494": {
            "entrypoint": "0x08002494",
            "current_name": "apply_bitmask_08002494",
            "code": "\n\n\nvoid applyBitmask_08002494(uint input,uint bitmask1,uint bitmask2)\n\n{\n  uint bitmask1Applied;\n  uint bitmask2Applied;\n  \n  bitmask1Applied = (uint)(_DAT_e000ed0c << 0x15) >> 0x1d;\n  bitmask2Applied = 7 - bitmask1Applied;\n  if (3 < bitmask2Applied) {\n    bitmask2Applied = 4;\n  }\n  if (bitmask1Applied + 4 < 7) {\n    bitmask1Applied = 0;\n  }\n  else {\n    bitmask1Applied = bitmask1Applied - 3;\n  }\n  bitmask1Applied = (bitmask1 & (1 << (bitmask2Applied & 0xff)) - 1U) << (bitmask1Applied & 0xff) |\n          (1 << (bitmask1Applied & 0xff)) - 1U & bitmask2;\n  if ((int)input < 0) {\n    *(char *)((input & 0xf) + 0xe000ed14) = (char)(bitmask1Applied << 4);\n  }\n  else {\n    *(char *)(input + 0xe000e400) = (char)(bitmask1Applied << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002494": "apply_bitmask_08002494",
                "param_1": "input",
                "param_2": "bitmask1",
                "param_3": "bitmask2",
                "uVar1": "bitmask1Applied",
                "uVar2": "bitmask2Applied"
            },
            "calling": [
                "FUN_08005510",
                "FUN_08001b48",
                "FUN_08001c3c",
                "FUN_08005568"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080024f8": {
            "entrypoint": "0x080024f8",
            "current_name": "set_bit_080024f8",
            "code": "\nvoid setBit_080024f8(uint bitPosition)\n\n{\n  if (-1 < (int)bitPosition) {\n    *(int *)((bitPosition >> 5) * 4 + -0x1fff1f00) = 1 << (bitPosition & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080024f8": "set_bit_080024f8",
                "param_1": "bitPosition"
            },
            "calling": [
                "FUN_08005510",
                "FUN_08005568"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002514": {
            "entrypoint": "0x08002514",
            "current_name": "initialize_data_08002514",
            "code": "\n\n\nundefined4 initializeData_08002514(int value)\n\n{\n  if (value - 1U < 0x1000000) {\n    _DAT_e000e014 = value - 1U;\n    DAT_e000ed23 = 0xf0;\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08002514": "initialize_data_08002514",
                "param_1": "value"
            },
            "calling": [
                "FUN_08001b48",
                "FUN_08001c3c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002540": {
            "entrypoint": "0x08002540",
            "current_name": "set_bit_at_position_08002540",
            "code": "\nvoid setBitAtPosition_08002540(uint bitPosition)\n\n{\n  if (-1 < (int)bitPosition) {\n    *(int *)(((bitPosition >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (bitPosition & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002540": "set_bit_at_position_08002540",
                "param_1": "bitPosition"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002560": {
            "entrypoint": "0x08002560",
            "current_name": "update_e000e010_flag_08002560",
            "code": "\n\n\nvoid update_e000e010_flag_08002560(int input_param)\n\n{\n  if (input_param != 4) {\n    _DAT_e000e010 = _DAT_e000e010 & 0xfffffffb;\n    return;\n  }\n  _DAT_e000e010 = _DAT_e000e010 | 4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002560": "update_e000e010_flag_08002560",
                "param_1": "input_param"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002580": {
            "entrypoint": "0x08002580",
            "current_name": "FUNC_08002580",
            "code": "\nvoid FUNC_08002580(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002580": "FUNC_08002580"
            },
            "calling": [
                "FUN_08002582"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002582": {
            "entrypoint": "0x08002582",
            "current_name": "execute_initialization_function_08002582",
            "code": "\nvoid executeInitializationFunction_08002582(void)\n\n{\n  FUNC_08002580();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002582": "execute_initialization_function_08002582"
            },
            "calling": [
                "FUN_08004b9e"
            ],
            "called": [
                "FUN_08002580"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800258c": {
            "entrypoint": "0x0800258c",
            "current_name": "setup_configuration_0800258c",
            "code": "\n\n\nundefined4 setupConfiguration_0800258c(uint **configuration)\n\n{\n  uint *currentConfig;\n  \n  if (*(char *)((int)configuration + 0x21) != '\\x02') {\n    configuration[0xe] = (uint *)0x4;\n    return 1;\n  }\n  **configuration = **configuration & 0xfffffff1;\n  **configuration = **configuration & 0xfffffffe;\n  currentConfig = *configuration;\n  if (currentConfig == (uint *)0x40020008) {\n    _DAT_40020004 = 1;\n  }\n  else if (currentConfig == (uint *)0x4002001c) {\n    _DAT_40020004 = 0x10;\n  }\n  else if (currentConfig == (uint *)0x40020030) {\n    _DAT_40020004 = 0x100;\n  }\n  else if (currentConfig == (uint *)0x40020044) {\n    _DAT_40020004 = 0x1000;\n  }\n  else if (currentConfig == (uint *)0x40020058) {\n    _DAT_40020004 = 0x10000;\n  }\n  else if (currentConfig == (uint *)0x4002006c) {\n    _DAT_40020004 = 0x100000;\n  }\n  else {\n    _DAT_40020004 = 0x1000000;\n  }\n  *(undefined *)((int)configuration + 0x21) = 1;\n  *(undefined *)(configuration + 8) = 0;\n  if (configuration[0xd] != (uint *)0x0) {\n    (*(code *)configuration[0xd])();\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800258c": "setup_configuration_0800258c",
                "param_1": "configuration",
                "puVar1": "currentConfig"
            },
            "calling": [
                "FUN_0800316c",
                "FUN_080046b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002624": {
            "entrypoint": "0x08002624",
            "current_name": "update_bits_08002624",
            "code": "\n\n\nvoid updateBits_08002624(uint *bitArray1,uint *bitArray2)\n\n{\n  uint *pBitArray1;\n  uint bitMask;\n  uint bitMaskResult;\n  uint bitIndex;\n  uint flag;\n  uint bitValue;\n  int shiftValue1;\n  int shiftValue2;\n  \n  bitValue = 0;\n  bitIndex = 0;\n  do {\n    if (0xf < bitIndex) {\n      return;\n    }\n    bitMask = 1 << (bitIndex & 0xff);\n    bitMaskResult = *bitArray2 & bitMask;\n    if (bitMask == bitMaskResult) {\n      flag = bitArray2[1];\n      if (flag == 0x12) {\n        bitValue = bitArray2[3] + 0xc;\n      }\n      else if (flag < 0x13) {\n        if (flag == 2) {\n          bitValue = bitArray2[3] + 8;\n        }\n        else if (flag < 3) {\n          if (flag == 0) goto LAB_08002776;\n          if (flag == 1) {\n            bitValue = bitArray2[3];\n          }\n        }\n        else if (flag == 3) {\n          bitValue = 0;\n        }\n        else if (flag == 0x11) {\n          bitValue = bitArray2[3] + 4;\n        }\n      }\n      else if (flag == 0x10210000) {\nLAB_08002776:\n        if (bitArray2[2] == 0) {\n          bitValue = 4;\n        }\n        else if (bitArray2[2] == 1) {\n          bitArray1[4] = bitMask;\n          bitValue = 8;\n        }\n        else {\n          bitArray1[5] = bitMask;\n          bitValue = 8;\n        }\n      }\n      else if (flag < 0x10210001) {\n        if ((flag == 0x10110000) || (flag == 0x10120000)) goto LAB_08002776;\n      }\n      else if ((flag == 0x10310000) || ((flag == 0x10320000 || (flag == 0x10220000))))\n      goto LAB_08002776;\n      bitMask = bitIndex;\n      pBitArray1 = bitArray1;\n      if (0xff < bitMaskResult) {\n        bitMask = bitIndex - 8;\n        pBitArray1 = bitArray1 + 1;\n      }\n      *pBitArray1 = *pBitArray1 & ~(0xf << (bitMask << 2 & 0xff)) | bitValue << (bitMask << 2 & 0xff);\n      if ((bitArray2[1] & 0x10000000) != 0) {\n        _DAT_40021018 = _DAT_40021018 | 1;\n        shiftValue1 = (bitIndex & 3) << 2;\n        if (bitArray1 == (uint *)0x40010800) {\n          shiftValue2 = 0;\n        }\n        else if (bitArray1 == (uint *)0x40010c00) {\n          shiftValue2 = 1;\n        }\n        else if (bitArray1 == (uint *)0x40011000) {\n          shiftValue2 = 2;\n        }\n        else if (bitArray1 == (uint *)0x40011400) {\n          shiftValue2 = 3;\n        }\n        else {\n          shiftValue2 = 4;\n        }\n        *(uint *)(((bitIndex >> 2) + 2) * 4 + 0x40010000) =\n             *(uint *)(((bitIndex >> 2) + 2) * 4 + 0x40010000) & ~(0xf << shiftValue1) | shiftValue2 << shiftValue1;\n        if ((bitArray2[1] & 0x10000) == 0) {\n          _DAT_40010400 = _DAT_40010400 & ~bitMaskResult;\n        }\n        else {\n          _DAT_40010400 = _DAT_40010400 | bitMaskResult;\n        }\n        if ((bitArray2[1] & 0x20000) == 0) {\n          _DAT_40010404 = _DAT_40010404 & ~bitMaskResult;\n        }\n        else {\n          _DAT_40010404 = _DAT_40010404 | bitMaskResult;\n        }\n        if ((bitArray2[1] & 0x100000) == 0) {\n          _DAT_40010408 = _DAT_40010408 & ~bitMaskResult;\n        }\n        else {\n          _DAT_40010408 = _DAT_40010408 | bitMaskResult;\n        }\n        if ((bitArray2[1] & 0x200000) == 0) {\n          _DAT_4001040c = _DAT_4001040c & ~bitMaskResult;\n        }\n        else {\n          _DAT_4001040c = bitMaskResult | _DAT_4001040c;\n        }\n      }\n    }\n    bitIndex = bitIndex + 1;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08002624": "update_bits_08002624",
                "param_1": "bitArray1",
                "param_2": "bitArray2",
                "puVar1": "pBitArray1",
                "uVar2": "bitMask",
                "uVar3": "bitMaskResult",
                "uVar4": "bitIndex",
                "uVar5": "flag",
                "uVar6": "bitValue",
                "iVar7": "shiftValue1",
                "iVar8": "shiftValue2"
            },
            "calling": [
                "FUN_08004bb0",
                "FUN_08004974",
                "FUN_08004f4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002810": {
            "entrypoint": "0x08002810",
            "current_name": "check_bit_08002810",
            "code": "\nundefined4 check_bit_08002810(int address,uint value)\n\n{\n  if ((value & *(uint *)(address + 8)) == 0) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08002810": "check_bit_08002810",
                "param_1": "address",
                "param_2": "value"
            },
            "calling": [
                "FUN_08004c48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800281e": {
            "entrypoint": "0x0800281e",
            "current_name": "set_param_value_0800281e",
            "code": "\nvoid setParamValue_0800281e(int object,int value,int shift)\n\n{\n  if (shift == 0) {\n    *(int *)(object + 0x10) = value << 0x10;\n    return;\n  }\n  *(int *)(object + 0x10) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800281e": "set_param_value_0800281e",
                "param_1": "object",
                "param_2": "value",
                "param_3": "shift"
            },
            "calling": [
                "FUN_08004c30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800282c": {
            "entrypoint": "0x0800282c",
            "current_name": "update_data_if_required_0800282c",
            "code": "\n\n\nvoid update_data_if_required_0800282c(uint input_flag)\n\n{\n  if ((_DAT_40010414 & input_flag) != 0) {\n    _DAT_40010414 = input_flag;\n    FUN_080060e4();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800282c": "update_data_if_required_0800282c",
                "param_1": "input_flag"
            },
            "calling": [],
            "called": [
                "FUN_080060e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002848": {
            "entrypoint": "0x08002848",
            "current_name": "update_flags_08002848",
            "code": "\nundefined4 updateFlags_08002848(int *input)\n\n{\n  if (*(char *)((int)input + 0x3e) == '@') {\n    if (value1 == 0) {\n      *(uint *)(*input + 0x10) = value2 & 0xfe;\n    }\n    else {\n      *(uint *)(*input + 0x10) = value2 & 0xffU | 1;\n    }\n  }\n  else if (value3 == 0x4000) {\n    if (*(char *)((int)input + 0x3d) == '!') {\n      *(uint *)(*input + 0x10) = value2 & 0xfe;\n    }\n    else {\n      *(uint *)(*input + 0x10) = value2 & 0xffU | 1;\n    }\n  }\n  else if (value1 == 0) {\n    *(uint *)(*input + 0x10) = (uint)(value2 << 0x10) >> 0x17 & 6 | 0xf0;\n  }\n  else if (value1 == 1) {\n    *(uint *)(*input + 0x10) = (uint)(value2 << 0x10) >> 0x17 & 6 | 0xf1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002848": "update_flags_08002848",
                "param_1": "input",
                "param_1[0x14]": "value1",
                "param_1[0x11]": "value2",
                "param_1[4]": "value3"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080028d2": {
            "entrypoint": "0x080028d2",
            "current_name": "extract_byte_from_param_080028d2",
            "code": "\nundefined4 extractByteFromParam_080028d2(int *param)\n\n{\n  *(uint *)(*param + 0x10) = param[0x11] & 0xff;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080028d2": "extract_byte_from_param_080028d2",
                "param_1": "param"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080028de": {
            "entrypoint": "0x080028de",
            "current_name": "set_flag_080028de",
            "code": "\nundefined4 setFlag_080028de(uint **parameters)\n\n{\n  uint *pointer;\n  \n  pointer = value4;\n  if ((*(char *)((int)parameters + 0x3d) == '\\\"') &&\n     ((flag != (uint *)0x0 || (*(char *)((int)parameters + 0x3e) != '@')))) {\n    if ((flag == (uint *)0x0) && (value1 == (uint *)0xc000)) {\n      **parameters = **parameters | 0x100;\n      flag = (uint *)((int)flag + 1);\n    }\n    else {\n      if (*(short *)((int)parameters + 0x2a) == 0) {\n        **parameters = **parameters | 0x200;\n      }\n      else if (*(short *)((int)parameters + 0x2a) == 1) {\n        if (pointer == (uint *)0xffff0000) {\n          **parameters = **parameters & 0xfffffbff;\n          pointer = *parameters;\n          if ((pointer[1] & 0x800) == 0) {\n            *pointer = *pointer | 0x200;\n          }\n          else {\n            *pointer = *pointer & 0xfffffbff;\n          }\n        }\n        else if (((pointer == (uint *)0x4) || (pointer == (uint *)0x8)) ||\n                (value3 == (uint *)0x12)) {\n          **parameters = **parameters & 0xfffffbff;\n          **parameters = **parameters | 0x200;\n        }\n        else if (value4 == (uint *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters & 0xfffffbff;\n        }\n      }\n      else if (*(short *)((int)parameters + 0x2a) == 2) {\n        if (value4 == (uint *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters | 0x800;\n          **parameters = **parameters & 0xfffffbff;\n        }\n        pointer = *parameters;\n        if ((pointer[1] & 0x800) != 0) {\n          pointer[1] = pointer[1] | 0x1000;\n        }\n      }\n      else {\n        **parameters = **parameters | 0x400;\n        pointer = *parameters;\n        if ((pointer[1] & 0x800) != 0) {\n          pointer[1] = pointer[1] | 0x1000;\n        }\n      }\n      flag = (uint *)0x0;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080028de": "set_flag_080028de",
                "param_1": "parameters",
                "puVar1": "pointer",
                "param_1[0x14]": "flag",
                "param_1[4]": "value1",
                "param_1[0xc]": "value3",
                "param_1[0xb]": "value4"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ab8": {
            "entrypoint": "0x08002ab8",
            "current_name": "update_byte_value_08002ab8",
            "code": "\nundefined4 updateByteValue_08002ab8(int *data)\n\n{\n  byte *byteArrayPtr;\n  \n  if (*(short *)((int)data + 0x2a) != 0) {\n    byteArrayPtr = (byte *)data[9];\n    data[9] = (int)(byteArrayPtr + 1);\n    *(uint *)(*data + 0x10) = (uint)*byteArrayPtr;\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002ab8": "update_byte_value_08002ab8",
                "param_1": "data",
                "pbVar1": "byteArrayPtr"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ad8": {
            "entrypoint": "0x08002ad8",
            "current_name": "update_value_and_decrement_08002ad8",
            "code": "\nundefined4 updateValueAndDecrement_08002ad8(int *array)\n\n{\n  undefined *pointer1;\n  \n  if (*(short *)((int)array + 0x2a) != 0) {\n    pointer1 = (undefined *)array[9];\n    array[9] = (int)(pointer1 + 1);\n    *pointer1 = (char)*(undefined4 *)(*array + 0x10);\n    *(short *)((int)array + 0x2a) = *(short *)((int)array + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002ad8": "update_value_and_decrement_08002ad8",
                "param_1": "array",
                "puVar1": "pointer1"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002af8": {
            "entrypoint": "0x08002af8",
            "current_name": "validate_input_08002af8",
            "code": "\nundefined4 validate_input_08002af8(uint **input_struct,uint *data_ptr,int size,uint *flag_ptr)\n\n{\n  undefined4 result;\n  uint *ptr_var;\n  \n  if (*(char *)((int)input_struct + 0x3d) == '(') {\n    if (data_ptr == (uint *)0x0) {\n      result = 1;\n    }\n    else if (size == 0) {\n      result = 1;\n    }\n    else if (*(char *)(input_struct + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(input_struct + 0xf) = 1;\n      ptr_var = *input_struct;\n      if ((*ptr_var & 1) == 0) {\n        *ptr_var = *ptr_var | 1;\n      }\n      **input_struct = **input_struct & 0xfffff7ff;\n      *(undefined *)((int)input_struct + 0x3d) = 0x29;\n      *(undefined *)((int)input_struct + 0x3e) = 0x20;\n      result = 0;\n      input_struct[0x10] = (uint *)0x0;\n      input_struct[9] = data_ptr;\n      *(short *)((int)input_struct + 0x2a) = (short)size;\n      input_struct[0xb] = flag_ptr;\n      *(undefined2 *)(input_struct + 10) = *(undefined2 *)((int)input_struct + 0x2a);\n      *(undefined *)(input_struct + 0xf) = 0;\n      (*input_struct)[1] = (*input_struct)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002af8": "validate_input_08002af8",
                "param_1": "input_struct",
                "param_2": "data_ptr",
                "param_3": "size",
                "param_4": "flag_ptr",
                "uVar1": "result",
                "puVar2": "ptr_var"
            },
            "calling": [
                "FUN_08004e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002b84": {
            "entrypoint": "0x08002b84",
            "current_name": "process_parameters_08002b84",
            "code": "\nundefined4 processParameters_08002b84(uint **parameters,uint *value1,int size,uint *value2)\n\n{\n  undefined4 result;\n  uint *ptr;\n  \n  if (*(char *)((int)parameters + 0x3d) == '(') {\n    if (value1 == (uint *)0x0) {\n      result = 1;\n    }\n    else if (size == 0) {\n      result = 1;\n    }\n    else if (*(char *)(parameters + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(parameters + 0xf) = 1;\n      ptr = *parameters;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **parameters = **parameters & 0xfffff7ff;\n      *(undefined *)((int)parameters + 0x3d) = 0x2a;\n      *(undefined *)((int)parameters + 0x3e) = 0x20;\n      result = 0;\n      parameters[0x10] = (uint *)0x0;\n      parameters[9] = value1;\n      *(short *)((int)parameters + 0x2a) = (short)size;\n      parameters[0xb] = value2;\n      *(undefined2 *)(parameters + 10) = *(undefined2 *)((int)parameters + 0x2a);\n      *(undefined *)(parameters + 0xf) = 0;\n      (*parameters)[1] = (*parameters)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002b84": "process_parameters_08002b84",
                "param_1": "parameters",
                "param_2": "value1",
                "param_3": "size",
                "param_4": "value2",
                "uVar1": "result",
                "puVar2": "ptr"
            },
            "calling": [
                "FUN_08004e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c10": {
            "entrypoint": "0x08002c10",
            "current_name": "initialize_memory_08002c10",
            "code": "\nundefined4 initializeMemory_08002c10(uint **memoryPointer)\n\n{\n  uint *valuePointer;\n  \n  if (*(char *)((int)memoryPointer + 0x3d) != ' ') {\n    return 2;\n  }\n  *(undefined *)((int)memoryPointer + 0x3d) = 0x28;\n  valuePointer = *memoryPointer;\n  if ((*valuePointer & 1) == 0) {\n    *valuePointer = *valuePointer | 1;\n  }\n  **memoryPointer = **memoryPointer | 0x400;\n  (*memoryPointer)[1] = (*memoryPointer)[1] | 0x300;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002c10": "initialize_memory_08002c10",
                "param_1": "memoryPointer",
                "puVar1": "valuePointer"
            },
            "calling": [
                "FUN_08004ec4",
                "FUN_08004ef4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c4e": {
            "entrypoint": "0x08002c4e",
            "current_name": "FUNC_08002c4e",
            "code": "\nvoid FUNC_08002c4e(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c4e": "FUNC_08002c4e"
            },
            "calling": [
                "FUN_08002db2",
                "FUN_08002efc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002c50": {
            "entrypoint": "0x08002c50",
            "current_name": "FUNC_08002c50",
            "code": "\nvoid FUNC_08002c50(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c50": "FUNC_08002c50"
            },
            "calling": [
                "FUN_0800306c",
                "FUN_08002f9c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002c52": {
            "entrypoint": "0x08002c52",
            "current_name": "FUNC_08002c52",
            "code": "\nvoid FUNC_08002c52(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c52": "FUNC_08002c52"
            },
            "calling": [
                "FUN_08002c54",
                "FUN_08002d1c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002c54": {
            "entrypoint": "0x08002c54",
            "current_name": "process_data_08002c54",
            "code": "\nundefined4 processData_08002c54(int *data)\n\n{\n  char charValue;\n  byte *bytePtr;\n  \n  charValue = *(char *)((int)data + 0x3d);\n  if (*(short *)((int)data + 0x2a) != 0) {\n    bytePtr = (byte *)data[9];\n    data[9] = (int)(bytePtr + 1);\n    *(uint *)(*data + 0x10) = (uint)*bytePtr;\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    if ((*(short *)((int)data + 0x2a) == 0) && (charValue == ')')) {\n      *(uint *)(*data + 4) = *(uint *)(*data + 4) & 0xfffffbff;\n      value1 = 0x21;\n      *(undefined *)((int)data + 0x3d) = 0x28;\n      FUNC_08002c52();\n    }\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002c54": "process_data_08002c54",
                "param_1": "data",
                "cVar1": "charValue",
                "pbVar2": "bytePtr",
                "param_1[0xc]": "value1"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002c52"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ca4": {
            "entrypoint": "0x08002ca4",
            "current_name": "FUNC_08002ca4",
            "code": "\nvoid FUNC_08002ca4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ca4": "FUNC_08002ca4"
            },
            "calling": [
                "FUN_08002ca6",
                "FUN_080032b4"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002ca6": {
            "entrypoint": "0x08002ca6",
            "current_name": "update_parameter_08002ca6",
            "code": "\nundefined4 updateParameter_08002ca6(int *paramArray)\n\n{\n  char charValue;\n  undefined *bytePtr;\n  \n  charValue = *(char *)((int)paramArray + 0x3d);\n  if (*(short *)((int)paramArray + 0x2a) != 0) {\n    bytePtr = (undefined *)paramArray[9];\n    paramArray[9] = (int)(bytePtr + 1);\n    *bytePtr = (char)*(undefined4 *)(*paramArray + 0x10);\n    *(short *)((int)paramArray + 0x2a) = *(short *)((int)paramArray + 0x2a) + -1;\n    if ((*(short *)((int)paramArray + 0x2a) == 0) && (charValue == '*')) {\n      *(uint *)(*paramArray + 4) = *(uint *)(*paramArray + 4) & 0xfffffbff;\n      paramArray[0xc] = 0x22;\n      *(undefined *)((int)paramArray + 0x3d) = 0x28;\n      FUNC_08002ca4();\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002ca6": "update_parameter_08002ca6",
                "param_1": "paramArray",
                "cVar1": "charValue",
                "puVar2": "bytePtr",
                "param_1[0xc]": "paramArray[0xc]"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002ca4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002cf2": {
            "entrypoint": "0x08002cf2",
            "current_name": "process_data_08002cf2",
            "code": "\nundefined4 processData_08002cf2(int *data,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined2 selectedValue;\n  uint flagValue;\n  \n  flagValue = *(uint *)(*data + 0x18);\n  if ((flagValue & 0x80) == 0) {\n    selectedValue = *(undefined2 *)(data + 3);\n  }\n  else {\n    selectedValue = *(undefined2 *)(data + 6);\n  }\n  FUN_08004e74(data,(*(uint *)(*data + 0x18) & 4) == 0,selectedValue,flagValue,param4);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002cf2": "process_data_08002cf2",
                "param_1": "data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "selectedValue",
                "uVar2": "flagValue"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08004e74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002d1c": {
            "entrypoint": "0x08002d1c",
            "current_name": "process_param_08002d1c",
            "code": "\nundefined4 process_param_08002d1c(uint **param_arr)\n\n{\n  if (((param_arr[11] == (uint *)0x4) || (param_arr[11] == (uint *)0x8)) &&\n     (*(char *)((int)param_arr + 0x3d) == '(')) {\n    param_arr[11] = (uint *)0xffff0000;\n    (*param_arr)[1] = (*param_arr)[1] & 0xfffff8ff;\n    (*param_arr)[5] = 0xfffffbff;\n    **param_arr = **param_arr & 0xfffffbff;\n    param_arr[12] = (uint *)0x0;\n    *(undefined *)((int)param_arr + 0x3d) = 0x20;\n    *(undefined *)((int)param_arr + 0x3e) = 0;\n    FUN_08004ec4();\n  }\n  else if (*(char *)((int)param_arr + 0x3d) == '!') {\n    param_arr[11] = (uint *)0xffff0000;\n    param_arr[12] = (uint *)0x21;\n    *(undefined *)((int)param_arr + 0x3d) = 0x20;\n    *(undefined *)((int)param_arr + 0x3e) = 0;\n    (*param_arr)[1] = (*param_arr)[1] & 0xfffff8ff;\n    (*param_arr)[5] = 0xfffffbff;\n    **param_arr = **param_arr & 0xfffffbff;\n    FUNC_08002c52();\n  }\n  else {\n    (*param_arr)[5] = 0xfffffbff;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002d1c": "process_param_08002d1c",
                "param_1": "param_arr",
                "param_1[0xb]": "param_arr[11]",
                "param_1[0xc]": "param_arr[12]"
            },
            "calling": [
                "FUN_08003520"
            ],
            "called": [
                "FUN_08004ec4",
                "FUN_08002c52"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002db0": {
            "entrypoint": "0x08002db0",
            "current_name": "FUNC_08002db0",
            "code": "\nvoid FUNC_08002db0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002db0": "FUNC_08002db0"
            },
            "calling": [
                "FUN_08002db2",
                "FUN_08002efc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002db2": {
            "entrypoint": "0x08002db2",
            "current_name": "process_data_08002db2",
            "code": "\nundefined4 processData_08002db2(uint **inputData)\n\n{\n  char firstChar;\n  uint *pointerVar;\n  \n  firstChar = *(char *)((int)inputData + 0x3d);\n  pointerVar = inputData[11];\n  if ((*(short *)(inputData + 10) == 0) && (firstChar == '!')) {\n    if ((pointerVar == (uint *)0x4) || ((pointerVar == (uint *)0x8 || (pointerVar == (uint *)0xffff0000)))) {\n      (*inputData)[1] = (*inputData)[1] & 0xfffff8ff;\n      **inputData = **inputData | 0x200;\n      inputData[12] = (uint *)0x0;\n      *(undefined *)((int)inputData + 0x3d) = 0x20;\n      if (*(char *)((int)inputData + 0x3e) == '@') {\n        *(undefined *)((int)inputData + 0x3e) = 0;\n        FUNC_08002db0();\n      }\n      else {\n        *(undefined *)((int)inputData + 0x3e) = 0;\n        FUNC_08002c4e();\n      }\n    }\n    else {\n      (*inputData)[1] = (*inputData)[1] & 0xfffff8ff;\n      inputData[12] = (uint *)0x11;\n      *(undefined *)((int)inputData + 0x3e) = 0;\n      *(undefined *)((int)inputData + 0x3d) = 0x20;\n      FUNC_08002c4e();\n    }\n  }\n  else if ((firstChar == '!') || ((*(char *)((int)inputData + 0x3e) == '@' && (firstChar == '\\\"')))) {\n    if (*(short *)((int)inputData + 0x2a) == 0) {\n      (*inputData)[1] = (*inputData)[1] & 0xfffffbff;\n    }\n    else if (*(char *)((int)inputData + 0x3e) == '@') {\n      if (inputData[0x14] == (uint *)0x0) {\n        if (inputData[0x13] == (uint *)0x1) {\n          (*inputData)[4] = (uint)inputData[0x12] & 0xff;\n          inputData[0x14] = (uint *)((int)inputData[0x14] + 2);\n        }\n        else {\n          (*inputData)[4] = (uint)((int)inputData[0x12] << 0x10) >> 0x18;\n          inputData[0x14] = (uint *)((int)inputData[0x14] + 1);\n        }\n      }\n      else if (inputData[0x14] == (uint *)0x1) {\n        (*inputData)[4] = (uint)inputData[0x12] & 0xff;\n        inputData[0x14] = (uint *)((int)inputData[0x14] + 1);\n      }\n      else if (inputData[0x14] == (uint *)0x2) {\n        if (*(char *)((int)inputData + 0x3d) == '\\\"') {\n          **inputData = **inputData | 0x100;\n        }\n        else if (*(char *)((int)inputData + 0x3d) == '!') {\n          pointerVar = inputData[9];\n          inputData[9] = (uint *)((int)pointerVar + 1);\n          (*inputData)[4] = (uint)*(byte *)pointerVar;\n          *(short *)((int)inputData + 0x2a) = *(short *)((int)inputData + 0x2a) + -1;\n        }\n      }\n    }\n    else {\n      pointerVar = inputData[9];\n      inputData[9] = (uint *)((int)pointerVar + 1);\n      (*inputData)[4] = (uint)*(byte *)pointerVar;\n      *(short *)((int)inputData + 0x2a) = *(short *)((int)inputData + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002db2": "process_data_08002db2",
                "param_1": "inputData",
                "cVar1": "firstChar",
                "puVar2": "pointerVar",
                "param_1[0xb]": "inputData[11]",
                "param_1[0xc]": "inputData[12]"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002db0",
                "FUN_08002c4e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002efc": {
            "entrypoint": "0x08002efc",
            "current_name": "set_flags_and_perform_action_08002efc",
            "code": "\nundefined4 setFlagsAndPerformAction_08002efc(uint **params)\n\n{\n  uint *ptr;\n  \n  ptr = param3;\n  if (*(char *)((int)params + 0x3d) == '!') {\n    if (*(short *)((int)params + 0x2a) == 0) {\n      if (((ptr == (uint *)0x4) || (ptr == (uint *)0x8)) || (ptr == (uint *)0xffff0000)) {\n        (*params)[1] = (*params)[1] & 0xfffff8ff;\n        **params = **params | 0x200;\n        param4 = (uint *)0x0;\n        *(undefined *)((int)params + 0x3d) = 0x20;\n        if (*(char *)((int)params + 0x3e) == '@') {\n          *(undefined *)((int)params + 0x3e) = 0;\n          FUNC_08002db0();\n        }\n        else {\n          *(undefined *)((int)params + 0x3e) = 0;\n          FUNC_08002c4e();\n        }\n      }\n      else {\n        (*params)[1] = (*params)[1] & 0xfffff8ff;\n        param4 = (uint *)0x11;\n        *(undefined *)((int)params + 0x3e) = 0;\n        *(undefined *)((int)params + 0x3d) = 0x20;\n        FUNC_08002c4e();\n      }\n    }\n    else {\n      ptr = param5;\n      param5 = (uint *)((int)ptr + 1);\n      (*params)[4] = (uint)*(byte *)ptr;\n      *(short *)((int)params + 0x2a) = *(short *)((int)params + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002efc": "set_flags_and_perform_action_08002efc",
                "param_1": "params",
                "puVar1": "ptr",
                "param_1[0xb]": "param3",
                "param_1[0xc]": "param4",
                "param_1[9]": "param5"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002db0",
                "FUN_08002c4e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f9a": {
            "entrypoint": "0x08002f9a",
            "current_name": "FUNC_08002f9a",
            "code": "\nvoid FUNC_08002f9a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f9a": "FUNC_08002f9a"
            },
            "calling": [
                "FUN_0800306c",
                "FUN_08002f9c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002f9c": {
            "entrypoint": "0x08002f9c",
            "current_name": "update_flags_and_execute_08002f9c",
            "code": "\nundefined4 updateFlagsAndExecute_08002f9c(uint **flags)\n\n{\n  uint *tempPtr;\n  \n  if (*(char *)((int)flags + 0x3d) == '\\\"') {\n    if (*(ushort *)((int)flags + 0x2a) < 4) {\n      if (*(ushort *)((int)flags + 0x2a) - 2 < 2) {\n        if (condition1 == (uint *)0x2) {\n          **flags = **flags | 0x400;\n        }\n        else {\n          **flags = **flags & 0xfffffbff;\n          **flags = **flags | 0x800;\n        }\n        (*flags)[1] = (*flags)[1] & 0xfffffbff;\n      }\n      else {\n        if (condition1 == (uint *)0x2) {\n          **flags = **flags | 0x400;\n        }\n        else {\n          **flags = **flags & 0xfffffbff;\n        }\n        (*flags)[1] = (*flags)[1] & 0xfffff8ff;\n        tempPtr = charPtr;\n        charPtr = (uint *)((int)tempPtr + 1);\n        *(char *)tempPtr = (char)(*flags)[4];\n        *(short *)((int)flags + 0x2a) = *(short *)((int)flags + 0x2a) + -1;\n        *(undefined *)((int)flags + 0x3d) = 0x20;\n        flags[0xc] = (uint *)0x0;\n        if (*(char *)((int)flags + 0x3e) == '@') {\n          *(undefined *)((int)flags + 0x3e) = 0;\n          FUNC_08002f9a();\n        }\n        else {\n          *(undefined *)((int)flags + 0x3e) = 0;\n          FUNC_08002c50();\n        }\n      }\n    }\n    else {\n      tempPtr = charPtr;\n      charPtr = (uint *)((int)tempPtr + 1);\n      *(char *)tempPtr = (char)(*flags)[4];\n      *(short *)((int)flags + 0x2a) = *(short *)((int)flags + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002f9c": "update_flags_and_execute_08002f9c",
                "param_1": "flags",
                "puVar1": "tempPtr",
                "param_1[0xb]": "condition1",
                "param_1[9]": "charPtr"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002f9a",
                "FUN_08002c50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800306c": {
            "entrypoint": "0x0800306c",
            "current_name": "process_parameter_0800306c",
            "code": "\nundefined4 processParameter_0800306c(uint **parameter)\n\n{\n  uint *pointerVar1;\n  \n  pointerVar1 = parameter[0xb];\n  if (*(short *)((int)parameter + 0x2a) == 3) {\n    if (((pointerVar1 == (uint *)0x4) || (pointerVar1 == (uint *)0x8)) || (pointerVar1 == (uint *)0xffff0000)) {\n      **parameter = **parameter & 0xfffffbff;\n    }\n    pointerVar1 = parameter[9];\n    parameter[9] = (uint *)((int)pointerVar1 + 1);\n    *(char *)pointerVar1 = (char)(*parameter)[4];\n    *(short *)((int)parameter + 0x2a) = *(short *)((int)parameter + 0x2a) + -1;\n  }\n  else if (*(short *)((int)parameter + 0x2a) == 2) {\n    if (((pointerVar1 == (uint *)0x4) || (pointerVar1 == (uint *)0x8)) || (pointerVar1 == (uint *)0xffff0000)) {\n      (*parameter)[1] = (*parameter)[1] & 0xfffffcff;\n      **parameter = **parameter | 0x200;\n    }\n    else {\n      if (pointerVar1 == (uint *)0x2) {\n        **parameter = **parameter | 0x400;\n      }\n      else {\n        **parameter = **parameter & 0xfffffbff;\n      }\n      (*parameter)[1] = (*parameter)[1] & 0xfffffcff;\n    }\n    pointerVar1 = parameter[9];\n    parameter[9] = (uint *)((int)pointerVar1 + 1);\n    *(char *)pointerVar1 = (char)(*parameter)[4];\n    *(short *)((int)parameter + 0x2a) = *(short *)((int)parameter + 0x2a) + -1;\n    pointerVar1 = parameter[9];\n    parameter[9] = (uint *)((int)pointerVar1 + 1);\n    *(char *)pointerVar1 = (char)(*parameter)[4];\n    *(short *)((int)parameter + 0x2a) = *(short *)((int)parameter + 0x2a) + -1;\n    *(undefined *)((int)parameter + 0x3d) = 0x20;\n    parameter[0xc] = (uint *)0x0;\n    if (*(char *)((int)parameter + 0x3e) == '@') {\n      *(undefined *)((int)parameter + 0x3e) = 0;\n      FUNC_08002f9a();\n    }\n    else {\n      *(undefined *)((int)parameter + 0x3e) = 0;\n      FUNC_08002c50();\n    }\n  }\n  else {\n    pointerVar1 = parameter[9];\n    parameter[9] = (uint *)((int)pointerVar1 + 1);\n    *(char *)pointerVar1 = (char)(*parameter)[4];\n    *(short *)((int)parameter + 0x2a) = *(short *)((int)parameter + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800306c": "process_parameter_0800306c",
                "param_1": "parameter",
                "puVar1": "pointerVar1"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002f9a",
                "FUN_08002c50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800316a": {
            "entrypoint": "0x0800316a",
            "current_name": "FUNC_0800316a",
            "code": "\nvoid FUNC_0800316a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800316a": "FUNC_0800316a"
            },
            "calling": [
                "FUN_0800316c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800316c": {
            "entrypoint": "0x0800316c",
            "current_name": "process_parameter_0800316c",
            "code": "\nvoid processParameter_0800316c(uint **parameter)\n\n{\n  int result;\n  uint *tempPointer;\n  uint *paramPointer;\n  \n  if (*(byte *)((int)parameter + 0x3d) - 0x29 < 2) {\n    paramOneC = (uint *)0x0;\n    *(undefined *)((int)parameter + 0x3d) = 0x28;\n  }\n  else {\n    if ((*(char *)((int)parameter + 0x3d) != '`') && (((*parameter)[1] & 0x800) == 0)) {\n      *(undefined *)((int)parameter + 0x3d) = 0x20;\n    }\n    paramOneC = (uint *)0x0;\n    *(undefined *)((int)parameter + 0x3e) = 0;\n  }\n  **parameter = **parameter & 0xfffff7ff;\n  paramPointer = *parameter;\n  if ((paramPointer[1] & 0x800) == 0) {\n    if (*(char *)((int)parameter + 0x3d) == '`') {\n      *(undefined *)((int)parameter + 0x3d) = 0x20;\n      paramOneTen = (uint *)0x0;\n      if ((paramPointer[5] & 0x40) != 0) {\n        tempPointer = paramOneNine;\n        paramOneNine = (uint *)((int)tempPointer + 1);\n        *(char *)tempPointer = (char)paramPointer[4];\n      }\n      **parameter = **parameter & 0xfffffffe;\n      FUNC_0800316a(parameter);\n    }\n    else {\n      if ((paramPointer[5] & 0x40) != 0) {\n        tempPointer = paramOneNine;\n        paramOneNine = (uint *)((int)tempPointer + 1);\n        *(char *)tempPointer = (char)paramPointer[4];\n      }\n      FUN_08004ef4(parameter);\n    }\n  }\n  else {\n    paramPointer[1] = paramPointer[1] & 0xfffff7ff;\n    if (*(char *)((int)paramOneD + 0x21) == '\\x01') {\n      paramOneE[0xd] = (uint)labelOneAddress;\n      result = FUN_0800258c(paramOneE);\n      if (result != 0) {\n        if (((*parameter)[5] & 0x40) != 0) {\n          paramPointer = paramOneNine;\n          paramOneNine = (uint *)((int)paramPointer + 1);\n          *(char *)paramPointer = (char)(*parameter)[4];\n        }\n        **parameter = **parameter & 0xfffffffe;\n        *(undefined *)((int)parameter + 0x3d) = 0x20;\n        (*(code *)paramOneE[0xd])();\n      }\n    }\n    else {\n      paramOneD[0xd] = (uint)labelOneAddress;\n      result = FUN_0800258c(paramOneD);\n      if (result != 0) {\n        **parameter = **parameter & 0xfffffffe;\n        *(undefined *)((int)parameter + 0x3d) = 0x20;\n        (*(code *)paramOneD[0xd])();\n      }\n    }\n  }\n  if ((*(char *)((int)parameter + 0x3d) == '(') && (((uint)paramOneTen & 4) != 0)) {\n    parameter[0xb] = (uint *)0xffff0000;\n    paramOneC = (uint *)0x0;\n    *(undefined *)((int)parameter + 0x3d) = 0x20;\n    *(undefined *)((int)parameter + 0x3e) = 0;\n    FUN_08004ec4(parameter);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800316c": "process_parameter_0800316c",
                "param_1": "parameter",
                "iVar1": "result",
                "puVar2": "tempPointer",
                "puVar3": "paramPointer",
                "LAB_080035fc_1": "labelOne",
                "param_1[0xc]": "paramOneC",
                "param_1[9]": "paramOneNine",
                "param_1[0x10]": "paramOneTen",
                "param_1[0xd]": "paramOneD",
                "param_1[0xe]": "paramOneE",
                "&LAB_080035fc_1": "labelOneAddress"
            },
            "calling": [
                "FUN_08003520",
                "FUN_080032b4"
            ],
            "called": [
                "FUN_08004ec4",
                "FUN_0800258c",
                "FUN_0800316a",
                "FUN_08004ef4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080032b4": {
            "entrypoint": "0x080032b4",
            "current_name": "process_parameter_080032b4",
            "code": "\nundefined4 processParameter_080032b4(uint **parameter)\n\n{\n  char character;\n  uint *pointer1;\n  uint *pointer2;\n  \n  character = *(char *)((int)parameter + 0x3d);\n  (*parameter)[1] = (*parameter)[1] & 0xfffff8ff;\n  **parameter = **parameter | 1;\n  **parameter = **parameter & 0xfffffbff;\n  pointer1 = *parameter;\n  if ((pointer1[1] & 0x800) != 0) {\n    if ((*(char *)((int)parameter + 0x3d) == '\\\"') || (*(char *)((int)parameter + 0x3d) == '*')) {\n      *(short *)((int)parameter + 0x2a) = (short)*(undefined4 *)(*parameter[0xe] + 4);\n    }\n    else {\n      *(short *)((int)parameter + 0x2a) = (short)*(undefined4 *)(*parameter[0xd] + 4);\n    }\n  }\n  if (*(short *)((int)parameter + 0x2a) != 0) {\n    if ((pointer1[5] & 4) != 0) {\n      pointer2 = parameter[9];\n      parameter[9] = (uint *)((int)pointer2 + 1);\n      *(char *)pointer2 = (char)pointer1[4];\n      *(short *)((int)parameter + 0x2a) = *(short *)((int)parameter + 0x2a) + -1;\n    }\n    if (((*parameter)[5] & 0x40) != 0) {\n      pointer1 = parameter[9];\n      parameter[9] = (uint *)((int)pointer1 + 1);\n      *(char *)pointer1 = (char)(*parameter)[4];\n      *(short *)((int)parameter + 0x2a) = *(short *)((int)parameter + 0x2a) + -1;\n    }\n    parameter[0x10] = (uint *)((uint)parameter[0x10] | 4);\n  }\n  if (parameter[0x10] == (uint *)0x0) {\n    if (((character == '(') || (character == '*')) || (character == ')')) {\n      parameter[0xb] = (uint *)0xffff0000;\n      parameter[0xc] = (uint *)0x0;\n      *(undefined *)((int)parameter + 0x3d) = 0x20;\n      *(undefined *)((int)parameter + 0x3e) = 0;\n      FUN_08004ec4();\n    }\n    else if ((parameter[0xc] == (uint *)0x22) || (character == '\\\"')) {\n      parameter[0xc] = (uint *)0x0;\n      *(undefined *)((int)parameter + 0x3d) = 0x20;\n      *(undefined *)((int)parameter + 0x3e) = 0;\n      FUNC_08002ca4();\n    }\n  }\n  else {\n    FUN_0800316c();\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080032b4": "process_parameter_080032b4",
                "param_1": "parameter",
                "cVar1": "character",
                "puVar2": "pointer1",
                "puVar3": "pointer2"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_0800316c",
                "FUN_08004ec4",
                "FUN_08002ca4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080033b8": {
            "entrypoint": "0x080033b8",
            "current_name": "process_param_080033b8",
            "code": "\nvoid processParam_080033b8(int *param)\n\n{\n  int ptr1;\n  uint value1;\n  uint value2;\n  uint value3;\n  \n  ptr1 = *param;\n  value3 = *(uint *)(ptr1 + 0x18);\n  value1 = *(uint *)(ptr1 + 0x14);\n  value2 = *(uint *)(ptr1 + 4);\n  if ((*(char *)((int)param + 0x3e) == '\\x10') || (*(char *)((int)param + 0x3e) == '@')) {\n    if (((value1 & 0x10001) == 0) || ((value2 & 0x200) == 0)) {\n      if (((value1 & 0x10008) == 0) || ((value2 & 0x200) == 0)) {\n        if (((value1 & 0x10002) != 0) && ((value2 & 0x200) != 0)) {\n          FUN_080028de(param);\n        }\n      }\n      else {\n        FUN_080028d2(param);\n      }\n    }\n    else {\n      FUN_08002848(param);\n    }\n    if ((value3 & 0x100004) == 0) {\n      if ((((value1 & 0x10040) != 0) && ((value2 & 0x400) != 0)) && ((value1 & 0x10004) == 0)) {\n        FUN_08002f9c(param);\n        return;\n      }\n      if (((value1 & 0x10004) != 0) && ((value2 & 0x200) != 0)) {\n        FUN_0800306c(param);\n        return;\n      }\n    }\n    else {\n      if ((((value1 & 0x10080) != 0) && ((value2 & 0x400) != 0)) && ((value1 & 0x10004) == 0)) {\n        FUN_08002db2(param);\n        return;\n      }\n      if (((value1 & 0x10004) != 0) && ((value2 & 0x200) != 0)) {\n        FUN_08002efc(param);\n        return;\n      }\n    }\n  }\n  else {\n    if (((value1 & 0x10002) != 0) && ((value2 & 0x200) != 0)) {\n      FUN_08002cf2();\n      return;\n    }\n    if (((value1 & 0x10010) != 0) && ((value2 & 0x200) != 0)) {\n      FUN_080032b4(param);\n      return;\n    }\n    if ((value3 & 0x100004) == 0) {\n      if ((((value1 & 0x10040) != 0) && ((value2 & 0x400) != 0)) && ((value1 & 0x10004) == 0)) {\n        FUN_08002ca6(param);\n        return;\n      }\n      if (((value1 & 0x10004) != 0) && ((value2 & 0x200) != 0)) {\n        FUN_08002ad8(param);\n      }\n    }\n    else {\n      if ((((value1 & 0x10080) != 0) && ((value2 & 0x400) != 0)) && ((value1 & 0x10004) == 0)) {\n        FUN_08002c54(param);\n        return;\n      }\n      if (((value1 & 0x10004) != 0) && ((value2 & 0x200) != 0)) {\n        FUN_08002ab8(param);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080033b8": "process_param_080033b8",
                "param_1": "param",
                "iVar1": "ptr1",
                "uVar2": "value1",
                "uVar3": "value2",
                "uVar4": "value3"
            },
            "calling": [],
            "called": [
                "FUN_0800306c",
                "FUN_08002848",
                "FUN_08002ca6",
                "FUN_080028d2",
                "FUN_08002c54",
                "FUN_08002db2",
                "FUN_08002f9c",
                "FUN_080028de",
                "FUN_08002ab8",
                "FUN_08002ad8",
                "FUN_08002efc",
                "FUN_080032b4",
                "FUN_08002cf2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003520": {
            "entrypoint": "0x08003520",
            "current_name": "set_flags_08003520",
            "code": "\nvoid set_flags_08003520(uint **parameter)\n\n{\n  char character;\n  uint *pointer;\n  uint flags;\n  uint value;\n  \n  pointer = *parameter;\n  flags = pointer[5];\n  value = pointer[1];\n  if (((flags & 0x10100) != 0) && ((value & 0x100) != 0)) {\n    parameter[0x10] = (uint *)((uint)parameter[0x10] | 1);\n    pointer[5] = 0xfffffeff;\n    **parameter = **parameter | 0x8000;\n  }\n  if (((flags & 0x10200) != 0) && ((value & 0x100) != 0)) {\n    parameter[0x10] = (uint *)((uint)parameter[0x10] | 2);\n    (*parameter)[5] = 0xfffffdff;\n  }\n  if (((flags & 0x10400) != 0) && ((value & 0x100) != 0)) {\n    character = *(char *)((int)parameter + 0x3d);\n    if (((*(char *)((int)parameter + 0x3e) == ' ') && (*(short *)((int)parameter + 0x2a) == 0)) &&\n       (((character == '!' || (character == ')')) || ((character == '(' && (parameter[0xc] == (uint *)0x21)))))) {\n      FUN_08002d1c(parameter);\n    }\n    else {\n      parameter[0x10] = (uint *)((uint)parameter[0x10] | 4);\n      if (*(char *)((int)parameter + 0x3e) == '\\x10') {\n        **parameter = **parameter | 0x200;\n      }\n      (*parameter)[5] = 0xfffffbff;\n    }\n  }\n  if (((flags & 0x10800) != 0) && ((value & 0x100) != 0)) {\n    parameter[0x10] = (uint *)((uint)parameter[0x10] | 8);\n    (*parameter)[5] = 0xfffff7ff;\n  }\n  if (parameter[0x10] != (uint *)0x0) {\n    FUN_0800316c(parameter);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003520": "set_flags_08003520",
                "param_1": "parameter",
                "cVar1": "character",
                "puVar2": "pointer",
                "uVar3": "flags",
                "uVar4": "value"
            },
            "calling": [],
            "called": [
                "FUN_0800316c",
                "FUN_08002d1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800365c": {
            "entrypoint": "0x0800365c",
            "current_name": "calculate_delay_0800365c",
            "code": "\nvoid calculateDelay_0800365c(int inputValue)\n\n{\n  bool isDelayComplete;\n  int delayIterations;\n  \n  delayIterations = inputValue * (DAT_20000084 / 8000);\n  do {\n    isDelayComplete = delayIterations != 0;\n    delayIterations = delayIterations + -1;\n  } while (isDelayComplete);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800365c": "calculate_delay_0800365c",
                "param_1": "inputValue",
                "local_4": "delayIterations",
                "bVar1": "isDelayComplete"
            },
            "calling": [
                "FUN_08003688"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003688": {
            "entrypoint": "0x08003688",
            "current_name": "check_flags_08003688",
            "code": "\n\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nundefined4 checkFlags_08003688(uint *flags)\n\n{\n  int startVal;\n  int currentVal;\n  undefined4 result;\n  uint paramVal;\n  bool isVarSet;\n  \n  if ((*flags & 1) != 0) {\n    if (((_DAT_40021004 & 0xc) == 4) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) != 0)))) {\n      if (((_DAT_40021000 & 0x20000) != 0) && (flags[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      paramVal = flags[1];\n      if (paramVal == 0x10000) {\n        _DAT_40021000 = _DAT_40021000 | 0x10000;\n      }\n      else if (paramVal == 0) {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      else if (paramVal == 0x50000) {\n        _DAT_40021000 = _DAT_40021000 | 0x50000;\n      }\n      else {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      if (flags[1] == 0) {\n        startVal = FUN_08001cc4();\n        while ((_DAT_40021000 & 0x20000) != 0) {\n          currentVal = FUN_08001cc4();\n          if (100 < (uint)(currentVal - startVal)) {\n            return 3;\n          }\n        }\n      }\n      else {\n        startVal = FUN_08001cc4();\n        while ((_DAT_40021000 & 0x20000) == 0) {\n          currentVal = FUN_08001cc4();\n          if (100 < (uint)(currentVal - startVal)) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*flags & 2) != 0) {\n    if (((_DAT_40021004 & 0xc) == 0) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) == 0)))) {\n      if (((_DAT_40021000 & 2) != 0) && (flags[4] != 1)) {\n        return 1;\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | flags[5] << 3;\n    }\n    else if (flags[4] == 0) {\n      _DAT_42420000 = 0;\n      startVal = FUN_08001cc4();\n      while ((_DAT_40021000 & 2) != 0) {\n        currentVal = FUN_08001cc4();\n        if (2 < (uint)(currentVal - startVal)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420000 = 1;\n      startVal = FUN_08001cc4();\n      while ((_DAT_40021000 & 2) == 0) {\n        currentVal = FUN_08001cc4();\n        if (2 < (uint)(currentVal - startVal)) {\n          return 3;\n        }\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | flags[5] << 3;\n    }\n  }\n  if ((*flags & 8) != 0) {\n    if (flags[6] == 0) {\n      _DAT_42420480 = 0;\n      startVal = FUN_08001cc4();\n      while ((_DAT_40021024 & 2) != 0) {\n        currentVal = FUN_08001cc4();\n        if (2 < (uint)(currentVal - startVal)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420480 = 1;\n      startVal = FUN_08001cc4();\n      while ((_DAT_40021024 & 2) == 0) {\n        currentVal = FUN_08001cc4();\n        if (2 < (uint)(currentVal - startVal)) {\n          return 3;\n        }\n      }\n      FUN_0800365c(1);\n    }\n  }\n  if ((*flags & 4) != 0) {\n    isVarSet = (_DAT_4002101c & 0x10000000) == 0;\n    if (isVarSet) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      startVal = FUN_08001cc4();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        currentVal = FUN_08001cc4();\n        if (100 < (uint)(currentVal - startVal)) {\n          return 3;\n        }\n      }\n    }\n    paramVal = flags[3];\n    if (paramVal == 1) {\n      _DAT_40021020 = _DAT_40021020 | 1;\n    }\n    else if (paramVal == 0) {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    else if (paramVal == 5) {\n      _DAT_40021020 = _DAT_40021020 | 5;\n    }\n    else {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    if (flags[3] == 0) {\n      startVal = FUN_08001cc4();\n      while ((_DAT_40021020 & 2) != 0) {\n        currentVal = FUN_08001cc4();\n        if (5000 < (uint)(currentVal - startVal)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      startVal = FUN_08001cc4();\n      while ((_DAT_40021020 & 2) == 0) {\n        currentVal = FUN_08001cc4();\n        if (5000 < (uint)(currentVal - startVal)) {\n          return 3;\n        }\n      }\n    }\n    if (isVarSet) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if (flags[7] == 0) {\n    result = 0;\n  }\n  else if ((_DAT_40021004 & 0xc) == 8) {\n    result = 1;\n  }\n  else if (flags[7] == 2) {\n    _DAT_42420060 = 0;\n    startVal = FUN_08001cc4();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        if (flags[8] == 0x10000) {\n          _DAT_40021004 = _DAT_40021004 & 0xfffdffff | flags[2];\n        }\n        _DAT_40021004 = _DAT_40021004 & 0xffc2ffff | flags[8] | flags[9];\n        _DAT_42420060 = 1;\n        startVal = FUN_08001cc4();\n        do {\n          if ((_DAT_40021000 & 0x2000000) != 0) {\n            return 0;\n          }\n          currentVal = FUN_08001cc4();\n        } while ((uint)(currentVal - startVal) < 3);\n        return 3;\n      }\n      currentVal = FUN_08001cc4();\n    } while ((uint)(currentVal - startVal) < 3);\n    result = 3;\n  }\n  else {\n    _DAT_42420060 = 0;\n    startVal = FUN_08001cc4();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        return 0;\n      }\n      currentVal = FUN_08001cc4();\n    } while ((uint)(currentVal - startVal) < 3);\n    result = 3;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08003688": "check_flags_08003688",
                "param_1": "flags",
                "iVar1": "startVal",
                "iVar2": "currentVal",
                "uVar3": "result",
                "uVar4": "paramVal",
                "bVar5": "isVarSet"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08001cc4",
                "FUN_0800365c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a68": {
            "entrypoint": "0x08003a68",
            "current_name": "calculate_delay_value_08003a68",
            "code": "\n\n\nuint calculateDelayValue_08003a68(void)\n\n{\n  uint delayValue;\n  undefined2 constantValue;\n  undefined4 optionalValue1;\n  undefined4 optionalValue2;\n  undefined4 optionalValue3;\n  undefined4 optionalValue4;\n  \n  optionalValue4 = 0x10100f0e;\n  optionalValue3 = 0xd0c0b0a;\n  optionalValue2 = 0x9080706;\n  optionalValue1 = 0x5040302;\n  constantValue = 0x201;\n  if ((_DAT_40021004 & 0xc) == 8) {\n    delayValue = (uint)*(byte *)((int)&optionalValue1 + ((_DAT_40021004 << 10) >> 0x1c));\n    if ((_DAT_40021004 & 0x10000) == 0) {\n      delayValue = delayValue * 4000000;\n    }\n    else {\n      delayValue = (delayValue * 8000000) /\n              (uint)*(byte *)((int)&constantValue - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n    }\n  }\n  else {\n    delayValue = 8000000;\n  }\n  return delayValue;\n}\n\n",
            "renaming": {
                "FUN_08003a68": "calculate_delay_value_08003a68",
                "uStack_18": "optionalValue1",
                "uStack_14": "optionalValue2",
                "uStack_10": "optionalValue3",
                "uStack_c": "optionalValue4",
                "local_1c": "constantValue",
                "uVar1": "delayValue"
            },
            "calling": [
                "FUN_08003afa"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ad4": {
            "entrypoint": "0x08003ad4",
            "current_name": "initialize_data_08003ad4",
            "code": "\n\n\nundefined4 initializeData_08003ad4(uint *dataPointer,uint dataSize)\n\n{\n  int iVar1;\n  int iVar2;\n  uint tempValue;\n  \n  if ((_DAT_40022000 & 7) < dataSize) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | dataSize;\n    if (dataSize != (dataSize & 7)) {\n      return 1;\n    }\n  }\n  if ((*dataPointer & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | dataPointer[2];\n  }\n  if ((*dataPointer & 1) != 0) {\n    tempValue = dataPointer[1];\n    if (tempValue == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((tempValue != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = tempValue | _DAT_40021004 & 0xfffffffc;\n    iVar1 = FUN_08001cc4();\n    if (dataPointer[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        iVar2 = FUN_08001cc4();\n        if (5000 < (uint)(iVar2 - iVar1)) {\n          return 3;\n        }\n      }\n    }\n    else if (dataPointer[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        iVar2 = FUN_08001cc4();\n        if (5000 < (uint)(iVar2 - iVar1)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        iVar2 = FUN_08001cc4();\n        if (5000 < (uint)(iVar2 - iVar1)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (dataSize < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | dataSize;\n    if (dataSize != (dataSize & 7)) {\n      return 1;\n    }\n  }\n  if ((*dataPointer & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | dataPointer[3];\n  }\n  if ((*dataPointer & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | dataPointer[4] << 3;\n  }\n  tempValue = FUN_08003a68();\n  DAT_20000084 = tempValue >> (&DAT_0800772c)[(_DAT_40021004 << 0x18) >> 0x1c];\n  FUN_08001c3c(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003ad4": "initialize_data_08003ad4",
                "param_1": "dataPointer",
                "param_2": "dataSize",
                "uVar3": "tempValue"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08003afa"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003afa": {
            "entrypoint": "0x08003afa",
            "current_name": "perform_operation_08003afa",
            "code": "\n\n\nundefined4 perform_operation_08003afa(uint *flags,uint value)\n\n{\n  int initial_time;\n  int current_time;\n  uint temp;\n  \n  if ((*flags & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | flags[2];\n  }\n  if ((*flags & 1) != 0) {\n    temp = flags[1];\n    if (temp == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((temp != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = temp | _DAT_40021004 & 0xfffffffc;\n    initial_time = FUN_08001cc4();\n    if (flags[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        current_time = FUN_08001cc4();\n        if (5000 < (uint)(current_time - initial_time)) {\n          return 3;\n        }\n      }\n    }\n    else if (flags[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        current_time = FUN_08001cc4();\n        if (5000 < (uint)(current_time - initial_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        current_time = FUN_08001cc4();\n        if (5000 < (uint)(current_time - initial_time)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (value < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | value;\n    if (value != (value & 7)) {\n      return 1;\n    }\n  }\n  if ((*flags & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | flags[3];\n  }\n  if ((*flags & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | flags[4] << 3;\n  }\n  temp = FUN_08003a68();\n  DAT_20000084 = temp >> (&DAT_0800772c)[(_DAT_40021004 << 0x18) >> 0x1c];\n  FUN_08001c3c(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003afa": "perform_operation_08003afa",
                "param_1": "flags",
                "param_2": "value",
                "iVar1": "initial_time",
                "iVar2": "current_time",
                "uVar3": "temp"
            },
            "calling": [
                "FUN_08003ad4"
            ],
            "called": [
                "FUN_08003a68",
                "FUN_08001c3c",
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003c44": {
            "entrypoint": "0x08003c44",
            "current_name": "get_global_value_08003c44",
            "code": "\nundefined4 getGlobalValue_08003c44(void)\n\n{\n  return DAT_20000084;\n}\n\n",
            "renaming": {
                "FUN_08003c44": "get_global_value_08003c44"
            },
            "calling": [
                "FUN_08001b48",
                "FUN_08003c50",
                "FUN_08003c70"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003c50": {
            "entrypoint": "0x08003c50",
            "current_name": "shifted_value_08003c50",
            "code": "\n\n\nuint shiftedValue_08003c50(void)\n\n{\n  uint result;\n  \n  result = FUN_08003c44();\n  return result >> (&DAT_0800773c)[(uint)(_DAT_40021004 << 0x15) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_08003c50": "shifted_value_08003c50",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08004204"
            ],
            "called": [
                "FUN_08003c44"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003c70": {
            "entrypoint": "0x08003c70",
            "current_name": "shifted_value_by_table_index_08003c70",
            "code": "\n\n\nuint shiftedValueByTableIndex_08003c70(void)\n\n{\n  uint returnValue;\n  \n  returnValue = FUN_08003c44();\n  return returnValue >> (&DAT_0800773c)[(uint)(_DAT_40021004 << 0x12) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_08003c70": "shifted_value_by_table_index_08003c70",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08003da4",
                "FUN_08004204"
            ],
            "called": [
                "FUN_08003c44"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003c90": {
            "entrypoint": "0x08003c90",
            "current_name": "update_registers_08003c90",
            "code": "\n\n\nundefined4 updateRegisters_08003c90(uint *registers)\n\n{\n  uint tempVar1;\n  uint tempVar2;\n  int interval1;\n  int interval2;\n  bool bitFlag;\n  \n  if ((*registers & 1) != 0) {\n    bitFlag = (_DAT_4002101c & 0x10000000) == 0;\n    if (bitFlag) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      interval1 = FUN_08001cc4();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        interval2 = FUN_08001cc4();\n        if (100 < (uint)(interval2 - interval1)) {\n          return 3;\n        }\n      }\n    }\n    if (((_DAT_40021020 & 0x300) != 0) && ((_DAT_40021020 & 0x300) != (registers[1] & 0x300))) {\n      tempVar2 = _DAT_40021020 & 0xfffffcff;\n      _DAT_42420440 = 0;\n      tempVar1 = _DAT_40021020 & 1;\n      _DAT_40021020 = tempVar2;\n      if (tempVar1 != 0) {\n        interval1 = FUN_08001cc4();\n        while ((_DAT_40021020 & 2) == 0) {\n          interval2 = FUN_08001cc4();\n          if (5000 < (uint)(interval2 - interval1)) {\n            return 3;\n          }\n        }\n      }\n    }\n    _DAT_40021020 = _DAT_40021020 & 0xfffffcff | registers[1];\n    if (bitFlag) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if ((*registers & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffff3fff | registers[2];\n  }\n  if ((*registers & 0x10) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffbfffff | registers[3];\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003c90": "update_registers_08003c90",
                "param_1": "registers",
                "uVar1": "tempVar1",
                "uVar2": "tempVar2",
                "iVar3": "interval1",
                "iVar4": "interval2",
                "bVar5": "bitFlag"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003da4": {
            "entrypoint": "0x08003da4",
            "current_name": "calculate_delay_08003da4",
            "code": "\n\n\nuint calculateDelay_08003da4(int input)\n\n{\n  uint delay;\n  undefined2 constantValue;\n  undefined4 multiplier;\n  undefined4 divider;\n  undefined4 constant1;\n  undefined4 constant2;\n  \n  constant2 = 0x10100f0e;\n  constant1 = 0xd0c0b0a;\n  divider = 0x9080706;\n  multiplier = 0x5040302;\n  constantValue = 0x201;\n  if (input == 2) {\n    delay = FUN_08003c70();\n    delay = delay / ((((_DAT_40021004 << 0x10) >> 0x1e) + 1) * 2);\n  }\n  else if (input == 0x10) {\n    if ((_DAT_40021000 & 0x1000000) == 0) {\n      delay = 0;\n    }\n    else {\n      if ((_DAT_40021004 & 0x10000) == 0) {\n        delay = 4000000;\n      }\n      else {\n        delay = 8000000 / *(byte *)((int)&constantValue - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n      }\n      delay = delay * *(byte *)((int)&multiplier + ((_DAT_40021004 << 10) >> 0x1c));\n      if ((_DAT_40021004 & 0x400000) == 0) {\n        delay = (delay * 2) / 3;\n      }\n    }\n  }\n  else if (input == 1) {\n    if ((_DAT_40021020 & 0x302) == 0x102) {\n      delay = 0x8000;\n    }\n    else if (((_DAT_40021020 & 0x300) == 0x200) && ((_DAT_40021024 & 2) != 0)) {\n      delay = 32000;\n    }\n    else if ((_DAT_40021020 & 0x300) == 0x300) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        delay = 0;\n      }\n      else {\n        delay = 0xf424;\n      }\n    }\n    else {\n      delay = 0;\n    }\n  }\n  else {\n    delay = 0;\n  }\n  return delay;\n}\n\n",
            "renaming": {
                "FUN_08003da4": "calculate_delay_08003da4",
                "param_1": "input",
                "uVar1": "delay",
                "local_24": "constantValue",
                "uStack_20": "multiplier",
                "uStack_1c": "divider",
                "uStack_18": "constant1",
                "uStack_14": "constant2"
            },
            "calling": [
                "FUN_08002384",
                "FUN_08001cd0"
            ],
            "called": [
                "FUN_08003c70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ea0": {
            "entrypoint": "0x08003ea0",
            "current_name": "check_and_update_flags_08003ea0",
            "code": "\n\n\nvoid checkAndUpdateFlags_08003ea0(uint **flags)\n\n{\n  if (((**flags & 2) != 0) && (((*flags)[1] & 2) != 0)) {\n    FUN_08004d18();\n    (*flags)[1] = 0xfffffffd;\n  }\n  _DAT_40010414 = 0x20000;\n  *(undefined *)((int)flags + 0x11) = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003ea0": "check_and_update_flags_08003ea0",
                "param_1": "flags"
            },
            "calling": [],
            "called": [
                "FUN_08004d18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ed8": {
            "entrypoint": "0x08003ed8",
            "current_name": "update_value_and_call_08003ed8",
            "code": "\nvoid updateValueAndCall_08003ed8(uint **pointer)\n\n{\n  uint *pointerValue;\n  \n  *(undefined *)((int)pointer + 0x3d) = 2;\n  pointerValue = *pointer;\n  if ((pointerValue[8] & 0x1111) == 0) {\n    if ((pointerValue[8] & 0x444) == 0) {\n      *pointerValue = *pointerValue & 0xfffffffe;\n    }\n  }\n  FUN_08004b34(pointer);\n  *(undefined *)((int)pointer + 0x3d) = 0;\n  *(undefined *)(pointer + 0xf) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003ed8": "update_value_and_call_08003ed8",
                "param_1": "pointer",
                "puVar1": "pointerValue"
            },
            "calling": [
                "FUN_08004b3c"
            ],
            "called": [
                "FUN_08004b34"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f12": {
            "entrypoint": "0x08003f12",
            "current_name": "FUNC_08003f12",
            "code": "\nvoid FUNC_08003f12(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f12": "FUNC_08003f12"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08003f14": {
            "entrypoint": "0x08003f14",
            "current_name": "FUNC_08003f14",
            "code": "\nvoid FUNC_08003f14(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f14": "FUNC_08003f14"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08003f16": {
            "entrypoint": "0x08003f16",
            "current_name": "FUNC_08003f16",
            "code": "\nvoid FUNC_08003f16(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f16": "FUNC_08003f16"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08003f18": {
            "entrypoint": "0x08003f18",
            "current_name": "process_params_08003f18",
            "code": "\nvoid processParams_08003f18(int *param)\n\n{\n  int value;\n  \n  value = *param;\n  if (((*(uint *)(value + 0x10) & 2) != 0) && ((*(uint *)(value + 0xc) & 2) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffd;\n    *(undefined *)(param + 7) = 1;\n    if ((*(uint *)(*param + 0x18) & 3) == 0) {\n      FUN_08004df8();\n      FUNC_08003f14(param);\n    }\n    else {\n      FUNC_08003f12();\n    }\n    *(undefined *)(param + 7) = 0;\n  }\n  value = *param;\n  if (((*(uint *)(value + 0x10) & 4) != 0) && ((*(uint *)(value + 0xc) & 4) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffb;\n    *(undefined *)(param + 7) = 2;\n    if ((*(uint *)(*param + 0x18) & 0x300) == 0) {\n      FUN_08004df8(param);\n      FUNC_08003f14(param);\n    }\n    else {\n      FUNC_08003f12(param);\n    }\n    *(undefined *)(param + 7) = 0;\n  }\n  value = *param;\n  if (((*(uint *)(value + 0x10) & 8) != 0) && ((*(uint *)(value + 0xc) & 8) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffff7;\n    *(undefined *)(param + 7) = 4;\n    if ((*(uint *)(*param + 0x1c) & 3) == 0) {\n      FUN_08004df8(param);\n      FUNC_08003f14(param);\n    }\n    else {\n      FUNC_08003f12(param);\n    }\n    *(undefined *)(param + 7) = 0;\n  }\n  value = *param;\n  if (((*(uint *)(value + 0x10) & 0x10) != 0) && ((*(uint *)(value + 0xc) & 0x10) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffef;\n    *(undefined *)(param + 7) = 8;\n    if ((*(uint *)(*param + 0x1c) & 0x300) == 0) {\n      FUN_08004df8(param);\n      FUNC_08003f14(param);\n    }\n    else {\n      FUNC_08003f12(param);\n    }\n    *(undefined *)(param + 7) = 0;\n  }\n  value = *param;\n  if (((*(uint *)(value + 0x10) & 1) != 0) && ((*(uint *)(value + 0xc) & 1) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffe;\n    FUN_08004e12(param);\n  }\n  value = *param;\n  if (((*(uint *)(value + 0x10) & 0x80) != 0) && ((*(uint *)(value + 0xc) & 0x80) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffff7f;\n    FUNC_0800417a(param);\n  }\n  value = *param;\n  if (((*(uint *)(value + 0x10) & 0x40) != 0) && ((*(uint *)(value + 0xc) & 0x40) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffbf;\n    FUNC_08003f16(param);\n  }\n  value = *param;\n  if (((*(uint *)(value + 0x10) & 0x20) != 0) && ((*(uint *)(value + 0xc) & 0x20) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffdf;\n    FUNC_08004178(param);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f18": "process_params_08003f18",
                "param_1": "param",
                "iVar1": "value"
            },
            "calling": [
                "FUN_08004e20"
            ],
            "called": [
                "FUN_08003f14",
                "FUN_08004178",
                "FUN_08004e12",
                "FUN_0800417a",
                "FUN_08003f12",
                "FUN_08004df8",
                "FUN_08003f16"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004092": {
            "entrypoint": "0x08004092",
            "current_name": "update_bit_08004092",
            "code": "\nvoid updateBit_08004092(int data,uint bitPosition,int bitValue)\n\n{\n  *(uint *)(data + 0x20) = *(uint *)(data + 0x20) & ~(1 << (bitPosition & 0xff));\n  *(uint *)(data + 0x20) = *(uint *)(data + 0x20) | bitValue << (bitPosition & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004092": "update_bit_08004092",
                "param_1": "data",
                "param_2": "bitPosition",
                "param_3": "bitValue"
            },
            "calling": [
                "FUN_080040b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040b0": {
            "entrypoint": "0x080040b0",
            "current_name": "update_flags_and_settings_080040b0",
            "code": "\nundefined4 updateFlagsAndSettings_080040b0(uint **inputPointer,undefined4 inputValue)\n\n{\n  uint *tempPtr;\n  \n  FUN_08004092(*inputPointer,inputValue,0);\n  if (((*inputPointer == (uint *)0x40012c00) && ((memoryLocation & 0x1111) == 0)) &&\n     ((memoryLocation & 0x444) == 0)) {\n    flagsAndSettings = flagsAndSettings & 0xffff7fff;\n  }\n  tempPtr = *inputPointer;\n  if (((tempPtrValue & 0x1111) == 0) && ((tempPtrValue & 0x444) == 0)) {\n    *tempPtr = *tempPtr & 0xfffffffe;\n  }\n  *(undefined *)((int)inputPointer + 0x3d) = 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080040b0": "update_flags_and_settings_080040b0",
                "param_1": "inputPointer",
                "param_2": "inputValue",
                "puVar1": "tempPtr",
                "uRam40012c20": "memoryLocation",
                "uRam40012c44": "flagsAndSettings",
                "puVar1[8]": "tempPtrValue"
            },
            "calling": [
                "FUN_08004b3c"
            ],
            "called": [
                "FUN_08004092"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004110": {
            "entrypoint": "0x08004110",
            "current_name": "apply_bit_mask_and_update_value_08004110",
            "code": "\nvoid applyBitMaskAndUpdateValue_08004110(int baseAddress,uint bitPosition,int newValue)\n\n{\n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) & ~(4 << (bitPosition & 0xff));\n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) | newValue << (bitPosition & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004110": "apply_bit_mask_and_update_value_08004110",
                "param_1": "baseAddress",
                "param_2": "bitPosition",
                "param_3": "newValue"
            },
            "calling": [
                "FUN_0800412c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800412c": {
            "entrypoint": "0x0800412c",
            "current_name": "update_data_structure_0800412c",
            "code": "\nundefined4 updateDataStructure_0800412c(uint **pData,undefined4 value)\n\n{\n  uint *dataPtr;\n  \n  FUN_08004110(*pData,value,0);\n  dataPtr = *pData;\n  if (((dataPtr[8] & 0x1111) == 0) && ((dataPtr[8] & 0x444) == 0)) {\n    dataPtr[0x11] = dataPtr[0x11] & 0xffff7fff;\n  }\n  dataPtr = *pData;\n  if (((dataPtr[8] & 0x1111) == 0) && ((dataPtr[8] & 0x444) == 0)) {\n    *dataPtr = *dataPtr & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800412c": "update_data_structure_0800412c",
                "param_1": "pData",
                "param_2": "value",
                "puVar1": "dataPtr"
            },
            "calling": [
                "FUN_08004b3c"
            ],
            "called": [
                "FUN_08004110"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004178": {
            "entrypoint": "0x08004178",
            "current_name": "FUNC_08004178",
            "code": "\nvoid FUNC_08004178(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004178": "FUNC_08004178"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800417a": {
            "entrypoint": "0x0800417a",
            "current_name": "FUNC_0800417a",
            "code": "\nvoid FUNC_0800417a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800417a": "FUNC_0800417a"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800417c": {
            "entrypoint": "0x0800417c",
            "current_name": "set_permissions_0800417c",
            "code": "\nvoid setPermissions_0800417c(int *ptr)\n\n{\n  *(unsignedInteger *)(*ptr + 0xc) = *(unsignedInteger *)(*ptr + 0xc) & 0xfffffedf;\n  *(unsignedInteger *)(*ptr + 0x14) = *(unsignedInteger *)(*ptr + 0x14) & 0xfffffffe;\n  *(undefined *)((int)ptr + 0x3a) = 0x20;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800417c": "set_permissions_0800417c",
                "param_1": "ptr",
                "uint": "unsignedInteger"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004198": {
            "entrypoint": "0x08004198",
            "current_name": "process_data_08004198",
            "code": "\nundefined4 processData_08004198(int *data)\n\n{\n  short count;\n  byte *dataPointer;\n  \n  if (*(char *)((int)data + 0x39) != '!') {\n    return 2;\n  }\n  if (data[2] == 0x1000) {\n    *(uint *)(*data + 4) = *(ushort *)data[8] & 0x1ff;\n    if (data[4] == 0) {\n      data[8] = data[8] + 2;\n    }\n    else {\n      data[8] = data[8] + 1;\n    }\n  }\n  else {\n    dataPointer = (byte *)data[8];\n    data[8] = (int)(dataPointer + 1);\n    *(uint *)(*data + 4) = (uint)*dataPointer;\n  }\n  count = *(short *)((int)data + 0x26) + -1;\n  *(short *)((int)data + 0x26) = count;\n  if (count == 0) {\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xffffff7f;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) | 0x40;\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004198": "process_data_08004198",
                "param_1": "data",
                "sVar1": "count",
                "pbVar2": "dataPointer"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004204": {
            "entrypoint": "0x08004204",
            "current_name": "calculate_return_value_08004204",
            "code": "\nvoid calculateReturnValue_08004204(int *paramArray)\n\n{\n  int result1;\n  int result2;\n  int result3;\n  int result4;\n  int result5;\n  int result6;\n  int result7;\n  int result8;\n  int result9;\n  int result10;\n  \n  *(uint *)(*paramArray + 0x10) = *(uint *)(*paramArray + 0x10) & 0xffffcfff | paramArray[3];\n  *(uint *)(*paramArray + 0xc) =\n       paramArray[2] | paramArray[4] | paramArray[5] | *(uint *)(*paramArray + 0xc) & 0xffffe9f3;\n  *(uint *)(*paramArray + 0x14) = *(uint *)(*paramArray + 0x14) & 0xfffffcff | paramArray[6];\n  result10 = *paramArray;\n  if (result10 != 0x40013800) {\n    result1 = FUN_08003c50();\n    result6 = paramArray[1];\n    result2 = FUN_08003c50();\n    result7 = paramArray[1];\n    result3 = FUN_08003c50();\n    result8 = paramArray[1];\n    result4 = FUN_08003c50();\n    result9 = paramArray[1];\n    result5 = FUN_08003c50();\n    *(uint *)(result10 + 8) =\n         ((uint)((int)((ulonglong)\n                       (((uint)(result4 * 0x19) / (uint)(result9 << 2) +\n                        (int)(((ulonglong)(uint)(result5 * 0x19) / (ulonglong)(uint)(paramArray[1] << 2))\n                             / 100) * -100) * 0x10 + 0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n         ((((uint)(result2 * 0x19) / (uint)(result7 << 2) +\n           (int)(((ulonglong)(uint)(result3 * 0x19) / (ulonglong)(uint)(result8 << 2)) / 100) * -100) *\n           0x10 + 0x32) / 100 & 0xf0) +\n         (int)(((ulonglong)(uint)(result1 * 0x19) / (ulonglong)(uint)(result6 << 2)) / 100) * 0x10;\n    return;\n  }\n  result10 = FUN_08003c70();\n  result5 = paramArray[1];\n  result1 = FUN_08003c70();\n  result6 = paramArray[1];\n  result2 = FUN_08003c70();\n  result7 = paramArray[1];\n  result3 = FUN_08003c70();\n  result8 = paramArray[1];\n  result4 = FUN_08003c70();\n  iRam40013808 = ((uint)((int)((ulonglong)\n                               (((uint)(result3 * 0x19) / (uint)(result8 << 2) +\n                                (int)(((ulonglong)(uint)(result4 * 0x19) /\n                                      (ulonglong)(uint)(paramArray[1] << 2)) / 100) * -100) * 0x10 +\n                               0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n                 ((((uint)(result1 * 0x19) / (uint)(result6 << 2) +\n                   (int)(((ulonglong)(uint)(result2 * 0x19) / (ulonglong)(uint)(result7 << 2)) / 100) *\n                   -100) * 0x10 + 0x32) / 100 & 0xf0) +\n                 (int)(((ulonglong)(uint)(result10 * 0x19) / (ulonglong)(uint)(result5 << 2)) / 100) *\n                 0x10;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004204": "calculate_return_value_08004204",
                "param_1": "paramArray",
                "iVar1": "result1",
                "iVar2": "result2",
                "iVar3": "result3",
                "iVar4": "result4",
                "iVar5": "result5",
                "iVar6": "result6",
                "iVar7": "result7",
                "iVar8": "result8",
                "iVar9": "result9",
                "iVar10": "result10"
            },
            "calling": [
                "FUN_0800441a"
            ],
            "called": [
                "FUN_08003c50",
                "FUN_08003c70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080043b4": {
            "entrypoint": "0x080043b4",
            "current_name": "perform_validation_080043b4",
            "code": "\nundefined4 performValidation_080043b4(uint **inputArray,uint mask,uint isTrueCondition,int comparisonValue,uint tolerance)\n\n{\n  int result;\n  \n  do {\n    if (((mask & ~**inputArray) == 0) != isTrueCondition) {\n      return 0;\n    }\n  } while ((tolerance == 0xffffffff) ||\n          ((tolerance != 0 && (result = FUN_08001cc4(), (uint)(result - comparisonValue) <= tolerance))));\n  (*inputArray)[3] = (*inputArray)[3] & 0xfffffe5f;\n  (*inputArray)[5] = (*inputArray)[5] & 0xfffffffe;\n  *(undefined *)((int)inputArray + 0x39) = 0x20;\n  *(undefined *)((int)inputArray + 0x3a) = 0x20;\n  *(undefined *)(inputArray + 0xe) = 0;\n  return 3;\n}\n\n",
            "renaming": {
                "FUN_080043b4": "perform_validation_080043b4",
                "param_1": "inputArray",
                "param_2": "mask",
                "param_3": "isTrueCondition",
                "param_4": "comparisonValue",
                "param_5": "tolerance",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08004478"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004418": {
            "entrypoint": "0x08004418",
            "current_name": "FUNC_08004418",
            "code": "\nvoid FUNC_08004418(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004418": "FUNC_08004418"
            },
            "calling": [
                "FUN_0800441a"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800441a": {
            "entrypoint": "0x0800441a",
            "current_name": "initialize_data_0800441a",
            "code": "\nundefined4 initializeData_0800441a(int *dataStruct)\n\n{\n  if (dataStruct != (int *)0x0) {\n    if (*(char *)((int)dataStruct + 0x39) == '\\0') {\n      *(undefined *)(dataStruct + 0xe) = 0;\n      FUNC_08004418();\n    }\n    *(undefined *)((int)dataStruct + 0x39) = 0x24;\n    *(uint *)(*dataStruct + 0xc) = *(uint *)(*dataStruct + 0xc) & 0xffffdfff;\n    FUN_08004204(dataStruct);\n    *(uint *)(*dataStruct + 0x10) = *(uint *)(*dataStruct + 0x10) & 0xffffb7ff;\n    *(uint *)(*dataStruct + 0x14) = *(uint *)(*dataStruct + 0x14) & 0xffffffd5;\n    *(uint *)(*dataStruct + 0xc) = *(uint *)(*dataStruct + 0xc) | 0x2000;\n    dataStruct.variable2 = 0;\n    *(undefined *)((int)dataStruct + 0x39) = 0x20;\n    *(undefined *)((int)dataStruct + 0x3a) = 0x20;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800441a": "initialize_data_0800441a",
                "param_1": "dataStruct",
                "param_1[0xf]": "dataStruct.variable2"
            },
            "calling": [
                "FUN_08004f4c"
            ],
            "called": [
                "FUN_08004204",
                "FUN_08004418"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004478": {
            "entrypoint": "0x08004478",
            "current_name": "decode_and_process_data_08004478",
            "code": "\nundefined4 decode_and_process_data_08004478(int *buffer,ushort *data,int data_length,undefined4 param)\n\n{\n  int result;\n  undefined4 status;\n  \n  if (*(char *)((int)buffer + 0x39) == ' ') {\n    if (data == (ushort *)0x0) {\n      status = 1;\n    }\n    else if (data_length == 0) {\n      status = 1;\n    }\n    else if (*(char *)(buffer + 0xe) == '\\x01') {\n      status = 2;\n    }\n    else {\n      *(undefined *)(buffer + 0xe) = 1;\n      buffer[0xf] = 0;\n      *(undefined *)((int)buffer + 0x39) = 0x21;\n      status = FUN_08001cc4();\n      *(short *)(buffer + 9) = (short)data_length;\n      *(short *)((int)buffer + 0x26) = (short)data_length;\n      while (*(short *)((int)buffer + 0x26) != 0) {\n        *(short *)((int)buffer + 0x26) = *(short *)((int)buffer + 0x26) + -1;\n        if (buffer[2] == 0x1000) {\n          result = FUN_080043b4(buffer,0x80,0,status,param);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*buffer + 4) = *data & 0x1ff;\n          if (buffer[4] == 0) {\n            data = data + 1;\n          }\n          else {\n            data = (ushort *)((int)data + 1);\n          }\n        }\n        else {\n          result = FUN_080043b4(buffer,0x80,0,status,param);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*buffer + 4) = (uint)*(byte *)data;\n          data = (ushort *)((int)data + 1);\n        }\n      }\n      result = FUN_080043b4(buffer,0x40,0,status,param);\n      if (result == 0) {\n        *(undefined *)((int)buffer + 0x39) = 0x20;\n        *(undefined *)(buffer + 0xe) = 0;\n        status = 0;\n      }\n      else {\n        status = 3;\n      }\n    }\n  }\n  else {\n    status = 2;\n  }\n  return status;\n}\n\n",
            "renaming": {
                "FUN_08004478": "decode_and_process_data_08004478",
                "param_1": "buffer",
                "param_2": "data",
                "param_3": "data_length",
                "param_4": "param",
                "iVar1": "result",
                "uVar2": "status"
            },
            "calling": [
                "FUN_080053d4"
            ],
            "called": [
                "FUN_08001cc4",
                "FUN_080043b4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800455a": {
            "entrypoint": "0x0800455a",
            "current_name": "validate_params_0800455a",
            "code": "\nundefined4 validateParams_0800455a(int *array,int value1,int value2)\n\n{\n  if (*(char *)((int)array + 0x39) != ' ') {\n    return 2;\n  }\n  if (value1 == 0) {\n    return 1;\n  }\n  if (value2 == 0) {\n    return 1;\n  }\n  if (*(char *)(array + 0xe) != '\\x01') {\n    array_value1 = value1;\n    *(short *)(array + 9) = (short)value2;\n    *(short *)((int)array + 0x26) = (short)value2;\n    array_value2 = 0;\n    *(undefined *)((int)array + 0x39) = 0x21;\n    *(undefined *)(array + 0xe) = 0;\n    *(uint *)(*array + 0xc) = *(uint *)(*array + 0xc) | 0x80;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_0800455a": "validate_params_0800455a",
                "param_1": "array",
                "param_2": "value1",
                "param_3": "value2",
                "param_1[8]": "array_value1",
                "param_1[0xf]": "array_value2"
            },
            "calling": [
                "FUN_08005604",
                "FUN_08005568"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080045a2": {
            "entrypoint": "0x080045a2",
            "current_name": "check_inputs_080045a2",
            "code": "\nundefined4 check_inputs_080045a2(int *input_array,int value_1,int value_2)\n\n{\n  if (*(char *)((int)input_array + 0x3a) != ' ') {\n    return 2;\n  }\n  if (value_1 == 0) {\n    return 1;\n  }\n  if (value_2 == 0) {\n    return 1;\n  }\n  if (*(char *)(input_array + 0xe) != '\\x01') {\n    input_array[10] = value_1;\n    *(short *)(input_array + 0xb) = (short)value_2;\n    *(short *)((int)input_array + 0x2e) = (short)value_2;\n    input_array[0xf] = 0;\n    *(undefined *)((int)input_array + 0x3a) = 0x22;\n    *(undefined *)(input_array + 0xe) = 0;\n    *(uint *)(*input_array + 0xc) = *(uint *)(*input_array + 0xc) | 0x100;\n    *(uint *)(*input_array + 0x14) = *(uint *)(*input_array + 0x14) | 1;\n    *(uint *)(*input_array + 0xc) = *(uint *)(*input_array + 0xc) | 0x20;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_080045a2": "check_inputs_080045a2",
                "param_1": "input_array",
                "param_2": "value_1",
                "param_3": "value_2"
            },
            "calling": [
                "FUN_08005510",
                "FUN_080054d4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080045fe": {
            "entrypoint": "0x080045fe",
            "current_name": "clear_flags_080045fe",
            "code": "\nundefined4 clearFlags_080045fe(int *flags)\n\n{\n  *(uint *)(*flags + 0xc) = *(uint *)(*flags + 0xc) & 0xffffffbf;\n  *(undefined *)((int)flags + 0x39) = 0x20;\n  FUN_08005604();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080045fe": "clear_flags_080045fe",
                "param_1": "flags"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [
                "FUN_08005604"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004618": {
            "entrypoint": "0x08004618",
            "current_name": "process_string_08004618",
            "code": "\nundefined4 processString_08004618(int *inputData)\n\n{\n  byte *bytePtr;\n  short count;\n  undefined *bytePtr;\n  \n  if (*(char *)((int)inputData + 0x3a) != '\\\"') {\n    return 2;\n  }\n  if (param2 == 0x1000) {\n    if (param4 == 0) {\n      *(ushort *)outputPtr = (ushort)((uint)(*(int *)(*inputData + 4) << 0x17) >> 0x17);\n      outputPtr = outputPtr + 2;\n    }\n    else {\n      *(ushort *)outputPtr = (ushort)*(undefined4 *)(*inputData + 4) & 0xff;\n      outputPtr = outputPtr + 1;\n    }\n  }\n  else if (param4 == 0) {\n    bytePtr = (undefined *)outputPtr;\n    outputPtr = (int)(bytePtr + 1);\n    *bytePtr = (char)*(undefined4 *)(*inputData + 4);\n  }\n  else {\n    bytePtr = (byte *)outputPtr;\n    outputPtr = (int)(bytePtr + 1);\n    *bytePtr = (byte)*(undefined4 *)(*inputData + 4) & 0x7f;\n  }\n  count = *(short *)((int)inputData + 0x2e) + -1;\n  *(short *)((int)inputData + 0x2e) = count;\n  if (count != 0) {\n    return 0;\n  }\n  *(uint *)(*inputData + 0xc) = *(uint *)(*inputData + 0xc) & 0xffffffdf;\n  *(uint *)(*inputData + 0xc) = *(uint *)(*inputData + 0xc) & 0xfffffeff;\n  *(uint *)(*inputData + 0x14) = *(uint *)(*inputData + 0x14) & 0xfffffffe;\n  *(undefined *)((int)inputData + 0x3a) = 0x20;\n  FUN_080055e0();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004618": "process_string_08004618",
                "param_1": "inputData",
                "pbVar1": "bytePtr",
                "sVar2": "count",
                "puVar3": "bytePtr",
                "param_1[2]": "param2",
                "param_1[4]": "param4",
                "param_1[10]": "outputPtr"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [
                "FUN_080055e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080046b8": {
            "entrypoint": "0x080046b8",
            "current_name": "update_status_080046b8",
            "code": "\nvoid updateStatus_080046b8(uint **status)\n\n{\n  int result;\n  uint flag1;\n  uint *ptr;\n  uint flag2;\n  uint flag3;\n  \n  ptr = *status;\n  flag3 = *ptr;\n  flag1 = ptr[3];\n  if ((((flag3 & 0xf) == 0) && ((flag3 & 0x20) != 0)) && ((flag1 & 0x20) != 0)) {\n    FUN_08004618(status);\n    return;\n  }\n  if (((flag3 & 0xf) == 0) || ((flag2 = ptr[5] & 1, flag2 == 0 && ((flag1 & 0x120) == 0)))) {\n    if (((flag3 & 0x80) != 0) && ((flag1 & 0x80) != 0)) {\n      FUN_08004198(status);\n      return;\n    }\n    if (((flag3 & 0x40) != 0) && ((flag1 & 0x40) != 0)) {\n      FUN_080045fe(status);\n    }\n  }\n  else {\n    if (((flag3 & 1) != 0) && ((flag1 & 0x100) != 0)) {\n      status[15] = (uint *)((uint)status[15] | 1);\n    }\n    if (((flag3 & 4) != 0) && (flag2 != 0)) {\n      status[15] = (uint *)((uint)status[15] | 2);\n    }\n    if (((flag3 & 2) != 0) && (flag2 != 0)) {\n      status[15] = (uint *)((uint)status[15] | 4);\n    }\n    if (((flag3 & 8) != 0) && (flag2 != 0)) {\n      status[15] = (uint *)((uint)status[15] | 8);\n    }\n    if (status[15] != (uint *)0x0) {\n      if (((flag3 & 0x20) != 0) && ((flag1 & 0x20) != 0)) {\n        FUN_08004618(status);\n      }\n      if ((((uint)status[15] & 8) == 0) && (((*status)[5] & 0x40) == 0)) {\n        FUNC_08005650(status);\n        status[15] = (uint *)0x0;\n        return;\n      }\n      FUN_0800417c(status);\n      ptr = *status;\n      if ((ptr[5] & 0x40) == 0) {\n        FUNC_08005650(status);\n        return;\n      }\n      ptr[5] = ptr[5] & 0xffffffbf;\n      if (status[13] == (uint *)0x0) {\n        FUNC_08005650(status);\n        return;\n      }\n      status[13][0xd] = (uint)&label_080047d8;\n      result = FUN_0800258c(status[13]);\n      if (result != 0) {\n        (*(code *)status[13][0xd])();\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080046b8": "update_status_080046b8",
                "param_1": "status",
                "iVar1": "result",
                "uVar2": "flag1",
                "puVar3": "ptr",
                "uVar4": "flag2",
                "uVar5": "flag3",
                "puVar3[3]": "ptr[3]",
                "puVar3[5]": "ptr[5]",
                "param_1[0xf]": "status[15]",
                "param_1[0xd]": "status[13]",
                "LAB_080047d8_1": "label_080047d8",
                "(uint)&LAB_080047d8_1": "(uint)&label_080047d8",
                "&LAB_080047d8_1": "&label_080047d8"
            },
            "calling": [],
            "called": [
                "FUN_08004198",
                "FUN_080045fe",
                "FUN_08004618",
                "FUN_0800258c",
                "FUN_08005650",
                "FUN_0800417c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047e8": {
            "entrypoint": "0x080047e8",
            "current_name": "combine_bytes_080047e8",
            "code": "\nbyte combine_bytes_080047e8(int input)\n\n{\n  return *(byte *)(input + 0x3a) | *(byte *)(input + 0x39);\n}\n\n",
            "renaming": {
                "FUN_080047e8": "combine_bytes_080047e8",
                "param_1": "input"
            },
            "calling": [
                "FUN_080054b0",
                "FUN_0800548c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047f4": {
            "entrypoint": "0x080047f4",
            "current_name": "check_bit_value_080047f4",
            "code": "\nuint checkBitValue_080047f4(uint value,int address)\n\n{\n  return *(uint *)(address + ((value << 0x18) >> 0x1c) * 4) >> (value & 0xf) & 1;\n}\n\n",
            "renaming": {
                "FUN_080047f4": "check_bit_value_080047f4",
                "param_1": "value",
                "param_2": "address"
            },
            "calling": [
                "FUN_08005848",
                "FUN_080057b4",
                "FUN_08005890"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800480a": {
            "entrypoint": "0x0800480a",
            "current_name": "set_bit_in_array_0800480a",
            "code": "\nvoid setBitInArray_0800480a(uint input,int array)\n\n{\n  uint index;\n  \n  index = (input << 0x18) >> 0x1c;\n  *(uint *)(array + index * 4) = *(uint *)(array + index * 4) | 1 << (input & 0xf);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800480a": "set_bit_in_array_0800480a",
                "param_1": "input",
                "param_2": "array",
                "uVar1": "index"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004828": {
            "entrypoint": "0x08004828",
            "current_name": "modify_data_08004828",
            "code": "\nvoid modifyData_08004828(uint dataIndex,int dataArray)\n\n{\n  uint shiftedIndex;\n  \n  shiftedIndex = (dataIndex << 0x18) >> 0x1c;\n  *(uint *)(dataArray + shiftedIndex * 4) = *(uint *)(dataArray + shiftedIndex * 4) & ~(1 << (dataIndex & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004828": "modify_data_08004828",
                "param_1": "dataIndex",
                "param_2": "dataArray",
                "uVar1": "shiftedIndex"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004848": {
            "entrypoint": "0x08004848",
            "current_name": "map_param_to_address_08004848",
            "code": "\nundefined4 mapParamToAddress_08004848(undefined4 inputParam)\n\n{\n  switch(inputParam) {\n  case 0:\n    return 0x40010800;\n  case 1:\n    return 0x40010c00;\n  case 2:\n    return 0x40011000;\n  case 3:\n    return 0x40011400;\n  case 4:\n    return 0x40011800;\n  default:\n    return 0;\n  }\n}\n\n",
            "renaming": {
                "FUN_08004848": "map_param_to_address_08004848",
                "param_1": "inputParam"
            },
            "calling": [
                "FUN_08005848",
                "FUN_08005890"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004884": {
            "entrypoint": "0x08004884",
            "current_name": "update_data_register_08004884",
            "code": "\n\n\nundefined4 updateDataRegister_08004884(undefined4 inputValue)\n\n{\n  undefined4 returnValue;\n  \n  switch(inputValue) {\n  case 0:\n    _DAT_40021018 = _DAT_40021018 | 4;\n    returnValue = 0x40010800;\n    break;\n  case 1:\n    _DAT_40021018 = _DAT_40021018 | 8;\n    returnValue = 0x40010c00;\n    break;\n  case 2:\n    _DAT_40021018 = _DAT_40021018 | 0x10;\n    returnValue = 0x40011000;\n    break;\n  case 3:\n    _DAT_40021018 = _DAT_40021018 | 0x20;\n    returnValue = 0x40011400;\n    break;\n  case 4:\n    _DAT_40021018 = _DAT_40021018 | 0x40;\n    returnValue = 0x40011800;\n    break;\n  default:\n    returnValue = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08004884": "update_data_register_08004884",
                "param_1": "inputValue",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08004bb0",
                "FUN_08004974",
                "FUN_08004f4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800492c": {
            "entrypoint": "0x0800492c",
            "current_name": "calculate_shifted_value_0800492c",
            "code": "\nuint calculateShiftedValue_0800492c(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  int result;\n  uint shiftedValue;\n  \n  result = FUN_08004cce(input1,&DAT_08007400,input3,input4,input4);\n  shiftedValue = (uint)(result << 0xc) >> 0x1b;\n  if (0x10 < shiftedValue - 1) {\n    shiftedValue = 0;\n  }\n  return shiftedValue;\n}\n\n",
            "renaming": {
                "FUN_0800492c": "calculate_shifted_value_0800492c",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "result",
                "uVar2": "shiftedValue"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08004cce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004948": {
            "entrypoint": "0x08004948",
            "current_name": "determine_return_value_08004948",
            "code": "\nundefined4 determineReturnValue_08004948(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  int result;\n  uint shiftedResult;\n  \n  result = FUN_08004cce(input1,&DAT_080074b4,input3,input4,input4);\n  shiftedResult = (uint)(result << 0xc) >> 0x1b;\n  if (shiftedResult == 3) {\n    return 8;\n  }\n  if (shiftedResult != 4) {\n    if (shiftedResult != 2) {\n      return 0;\n    }\n    return 4;\n  }\n  return 0xc;\n}\n\n",
            "renaming": {
                "FUN_08004948": "determine_return_value_08004948",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "result",
                "uVar2": "shiftedResult"
            },
            "calling": [
                "FUN_08004b3c"
            ],
            "called": [
                "FUN_08004cce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004974": {
            "entrypoint": "0x08004974",
            "current_name": "update_flags_and_call_function_08004974",
            "code": "\n\n\nvoid updateFlagsAndCallFunction_08004974(int *dataPtr,undefined4 param2)\n\n{\n  undefined4 result;\n  uint updatedFlags;\n  int originalValue;\n  uint bitMask;\n  undefined4 value1;\n  undefined4 value2;\n  \n  originalValue = *dataPtr;\n  if (originalValue == 0x40012400) {\n    updatedFlags = _DAT_40021018 | 0x200;\n    originalValue = 0x200;\n    _DAT_40021018 = updatedFlags;\n  }\n  else {\n    updatedFlags = 0x40012800;\n    if (originalValue == 0x40012800) {\n      updatedFlags = _DAT_40021018 | 0x400;\n      originalValue = 0x400;\n      _DAT_40021018 = updatedFlags;\n    }\n  }\n  result = FUN_08004884((uint)((int)(char)DAT_20000080 << 0x18) >> 0x1c,param2,updatedFlags,originalValue);\n  bitMask = 1 << (DAT_20000080 & 0xf) & 0xffff;\n  value1 = 3;\n  value2 = 0;\n  FUN_08002624(result,&bitMask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004974": "update_flags_and_call_function_08004974",
                "param_1": "dataPtr",
                "param_2": "param2",
                "uVar1": "result",
                "uVar2": "updatedFlags",
                "iVar3": "originalValue",
                "local_18": "bitMask",
                "local_14": "value1",
                "local_10": "value2"
            },
            "calling": [
                "FUN_0800213c"
            ],
            "called": [
                "FUN_08002624",
                "FUN_08004884"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080049f0": {
            "entrypoint": "0x080049f0",
            "current_name": "update_permissions_080049f0",
            "code": "\n\n\nvoid updatePermissions_080049f0(int *data)\n\n{\n  if (*data != 0x40012400) {\n    if (*data == 0x40012800) {\n      _DAT_4002100c = _DAT_4002100c & 0xfffffbff;\n      _DAT_40021018 = _DAT_40021018 & 0xfffffbff;\n    }\n    return;\n  }\n  _DAT_4002100c = _DAT_4002100c & 0xfffffdff;\n  _DAT_40021018 = _DAT_40021018 & 0xfffffdff;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080049f0": "update_permissions_080049f0",
                "param_1": "data"
            },
            "calling": [
                "FUN_0800224c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a4c": {
            "entrypoint": "0x08004a4c",
            "current_name": "extract_binary_info_08004a4c",
            "code": "\nundefined2 extract_binary_info_08004a4c(undefined4 binary_data)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined2 result;\n  uint binary_length;\n  undefined4 is_valid;\n  undefined4 item_type;\n  int item_value;\n  undefined4 counter1;\n  undefined4 counter2;\n  undefined4 counter3;\n  undefined4 counter4;\n  undefined4 constant_val;\n  undefined4 flag;\n  undefined4 magic_number;\n  undefined4 counter5;\n  \n  FUN_080061e0(&item_value,0,0x30);\n  binary_length = 0;\n  is_valid = 0;\n  item_type = 0;\n  result = 0;\n  item_value = FUN_08004c78(binary_data,&DAT_08007400);\n  if (item_value == 0) {\n    result = 0;\n  }\n  else {\n    counter1 = 0;\n    counter2 = 0;\n    counter3 = 0;\n    constant_val = 0;\n    magic_number = 0xe0000;\n    counter5 = 0;\n    counter4 = 1;\n    flag = 0;\n    DAT_20000080 = (undefined)binary_data;\n    iVar1 = FUN_0800213c(&item_value);\n    if (iVar1 == 0) {\n      binary_length = FUN_0800492c(binary_data);\n      if (binary_length < 0x12) {\n        is_valid = 1;\n        item_type = 2;\n        iVar1 = FUN_08001e48(&item_value,&binary_length);\n        if (iVar1 == 0) {\n          iVar1 = FUN_08002384(&item_value);\n          if (iVar1 == 0) {\n            iVar1 = FUN_08002004(&item_value);\n            if (iVar1 == 0) {\n              iVar1 = FUN_08001cd0(&item_value,10);\n              if (iVar1 == 0) {\n                uVar2 = FUN_08001f80(&item_value);\n                if ((uVar2 & 0x200) != 0) {\n                  result = FUN_08001e40(&item_value);\n                }\n                iVar1 = FUN_08002348(&item_value);\n                if (iVar1 == 0) {\n                  iVar1 = FUN_0800224c(&item_value);\n                  if (iVar1 != 0) {\n                    result = 0;\n                  }\n                }\n                else {\n                  result = 0;\n                }\n              }\n              else {\n                result = 0;\n              }\n            }\n            else {\n              result = 0;\n            }\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        result = 0;\n      }\n    }\n    else {\n      result = 0;\n    }\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08004a4c": "extract_binary_info_08004a4c",
                "param_1": "binary_data",
                "local_46": "result",
                "local_44": "binary_length",
                "local_40": "is_valid",
                "local_3c": "item_type",
                "local_38": "item_value",
                "local_34": "counter1",
                "local_30": "counter2",
                "local_2c": "counter3",
                "local_28": "counter4",
                "local_24": "constant_val",
                "local_20": "flag",
                "local_1c": "magic_number",
                "local_10": "counter5"
            },
            "calling": [
                "FUN_08005754"
            ],
            "called": [
                "FUN_0800213c",
                "FUN_08001f80",
                "FUN_08004c78",
                "FUN_08002384",
                "FUN_08002348",
                "FUN_08002004",
                "FUN_08001e40",
                "FUN_08001e48",
                "FUN_0800224c",
                "FUN_08001cd0",
                "FUN_080061e0",
                "FUN_0800492c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b34": {
            "entrypoint": "0x08004b34",
            "current_name": "initialize_app_08004b34",
            "code": "\nvoid initializeApp_08004b34(void)\n\n{\n  FUN_08004d90();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b34": "initialize_app_08004b34"
            },
            "calling": [
                "FUN_08003ed8"
            ],
            "called": [
                "FUN_08004d90"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b3c": {
            "entrypoint": "0x08004b3c",
            "current_name": "check_and_process_data_08004b3c",
            "code": "\nvoid checkAndProcessData_08004b3c(undefined4 inputData)\n\n{\n  int checkResult;\n  uint flag;\n  int dataArray [17];\n  \n  dataArray[0] = FUN_08004c78(inputData,&DAT_080074b4);\n  if ((dataArray[0] != 0) &&\n     ((((checkResult = FUN_08004948(inputData), checkResult == 0 || (checkResult == 4)) || (checkResult == 8)) ||\n      ((checkResult == 0xc || (checkResult == 0x18)))))) {\n    flag = FUN_08004cce(inputData,&DAT_080074b4);\n    if ((flag & 0x100000) == 0) {\n      FUN_080040b0(dataArray,checkResult);\n    }\n    else {\n      FUN_0800412c(dataArray,checkResult);\n    }\n    FUN_08003ed8(dataArray);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b3c": "check_and_process_data_08004b3c",
                "param_1": "inputData",
                "iVar1": "checkResult",
                "uVar2": "flag",
                "local_50": "dataArray"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [
                "FUN_0800412c",
                "FUN_08004c78",
                "FUN_080040b0",
                "FUN_08004948",
                "FUN_08003ed8",
                "FUN_08004cce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b94": {
            "entrypoint": "0x08004b94",
            "current_name": "initialize_08004b94",
            "code": "\nvoid initialize_08004b94(void)\n\n{\n  FUN_08001cc4();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b94": "initialize_08004b94"
            },
            "calling": [
                "FUN_080058e0"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b9c": {
            "entrypoint": "0x08004b9c",
            "current_name": "FUNC_08004b9c",
            "code": "\nvoid FUNC_08004b9c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b9c": "FUNC_08004b9c"
            },
            "calling": [
                "FUN_08004b9e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004b9e": {
            "entrypoint": "0x08004b9e",
            "current_name": "initialize_system_08004b9e",
            "code": "\nvoid initializeSystem_08004b9e(void)\n\n{\n  FUN_08001cac();\n  FUN_08002582();\n  FUNC_08004b9c();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b9e": "initialize_system_08004b9e"
            },
            "calling": [],
            "called": [
                "FUN_08001cac",
                "FUN_08002582",
                "FUN_08004b9c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004bb0": {
            "entrypoint": "0x08004bb0",
            "current_name": "initialize_settings_08004bb0",
            "code": "\n\n\nvoid initializeSettings_08004bb0(uint setting,undefined4 value1,undefined4 value2)\n\n{\n  undefined4 shiftedValue;\n  uint bitMask;\n  undefined4 parameter1;\n  undefined4 parameter2;\n  undefined4 parameter3;\n  \n  shiftedValue = FUN_08004884((setting << 0x18) >> 0x1c);\n  bitMask = 1 << (setting & 0xf) & 0xffff;\n  parameter3 = 3;\n  _DAT_40021018 = _DAT_40021018 | 1;\n  if ((setting - 0xd & 0xff) < 2) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n  }\n  if (((setting == 0xf) || (setting == 0x13)) || (setting == 0x14)) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n  }\n  parameter1 = value1;\n  parameter2 = value2;\n  FUN_08002624(shiftedValue,&bitMask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004bb0": "initialize_settings_08004bb0",
                "param_1": "setting",
                "param_2": "value1",
                "param_3": "value2",
                "uVar1": "shiftedValue",
                "local_20": "bitMask",
                "local_1c": "parameter1",
                "local_18": "parameter2",
                "local_14": "parameter3"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [
                "FUN_08002624",
                "FUN_08004884"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c30": {
            "entrypoint": "0x08004c30",
            "current_name": "execute_function_08004c30",
            "code": "\nvoid executeFunction_08004c30(undefined4 func_param_1,undefined2 func_param_2,int func_param_3,undefined4 func_param_4)\n\n{\n  if (func_param_3 == 0) {\n    FUN_0800281e(func_param_1,func_param_2,0,func_param_4,func_param_4);\n    return;\n  }\n  FUN_0800281e(func_param_1,func_param_2,1,func_param_4,func_param_4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c30": "execute_function_08004c30",
                "param_1": "func_param_1",
                "param_2": "func_param_2",
                "param_3": "func_param_3",
                "param_4": "func_param_4"
            },
            "calling": [
                "FUN_08005848"
            ],
            "called": [
                "FUN_0800281e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c48": {
            "entrypoint": "0x08004c48",
            "current_name": "execute_function_08004c48",
            "code": "\nvoid executeFunction_08004c48(undefined4 parameter1,undefined2 parameter2,undefined4 parameter3,undefined4 parameter4)\n\n{\n  FUN_08002810(parameter1,parameter2,parameter3,parameter4,parameter4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c48": "execute_function_08004c48",
                "param_1": "parameter1",
                "param_2": "parameter2",
                "param_3": "parameter3",
                "param_4": "parameter4"
            },
            "calling": [
                "FUN_08005890"
            ],
            "called": [
                "FUN_08002810"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c52": {
            "entrypoint": "0x08004c52",
            "current_name": "initialize_application_08004c52",
            "code": "\nvoid initialize_application_08004c52(void)\n\n{\n  FUN_08001c88();\n  FUN_08001b48();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c52": "initialize_application_08004c52"
            },
            "calling": [
                "FUN_08001c32"
            ],
            "called": [
                "FUN_08001b48",
                "FUN_08001c88"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c5e": {
            "entrypoint": "0x08004c5e",
            "current_name": "find_value_index_08004c5e",
            "code": "\nundefined4 find_value_index_08004c5e(int value,char *array)\n\n{\n  while( true ) {\n    if (*array == -1) {\n      return 0;\n    }\n    if (*array == value) break;\n    array = array + 0xc;\n  }\n  return *(undefined4 *)(array + 4);\n}\n\n",
            "renaming": {
                "FUN_08004c5e": "find_value_index_08004c5e",
                "param_1": "value",
                "param_2": "array"
            },
            "calling": [
                "FUN_08004c78",
                "FUN_08004c5e"
            ],
            "called": [
                "FUN_08004c5e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c78": {
            "entrypoint": "0x08004c78",
            "current_name": "check_validity_08004c78",
            "code": "\nundefined4 checkValidity_08004c78(int value)\n\n{\n  undefined4 result;\n  \n  if (value != -1) {\n    result = FUN_08004c5e();\n    return result;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004c78": "check_validity_08004c78",
                "param_1": "value",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080053d4",
                "FUN_08004f4c",
                "FUN_08004a4c",
                "FUN_08004b3c",
                "FUN_08005384"
            ],
            "called": [
                "FUN_08004c5e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c8a": {
            "entrypoint": "0x08004c8a",
            "current_name": "find_matching_element_08004c8a",
            "code": "\nint find_matching_element_08004c8a(int target_value,char *array)\n\n{\n  while( true ) {\n    if (*(int *)(array + 4) == 0) {\n      return -1;\n    }\n    if (*(int *)(array + 4) == target_value) break;\n    array = array + 0xc;\n  }\n  return (int)*array;\n}\n\n",
            "renaming": {
                "FUN_08004c8a": "find_matching_element_08004c8a",
                "param_1": "target_value",
                "param_2": "array"
            },
            "calling": [
                "FUN_08004ca2",
                "FUN_08004c8a"
            ],
            "called": [
                "FUN_08004c8a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ca2": {
            "entrypoint": "0x08004ca2",
            "current_name": "check_validity_08004ca2",
            "code": "\nundefined4 checkValidity_08004ca2(int input)\n\n{\n  undefined4 result;\n  \n  if (input != 0) {\n    result = FUN_08004c8a();\n    return result;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08004ca2": "check_validity_08004ca2",
                "param_1": "input",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08005b54",
                "FUN_08005384"
            ],
            "called": [
                "FUN_08004c8a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004cb2": {
            "entrypoint": "0x08004cb2",
            "current_name": "find_value_by_index_08004cb2",
            "code": "\nundefined4 find_value_by_index_08004cb2(int target_value,char *data_array)\n\n{\n  while( true ) {\n    if (*data_array == -1) {\n      return 0xffffffff;\n    }\n    if (*data_array == target_value) break;\n    data_array = data_array + 0xc;\n  }\n  return *(undefined4 *)(data_array + 8);\n}\n\n",
            "renaming": {
                "FUN_08004cb2": "find_value_by_index_08004cb2",
                "param_1": "target_value",
                "param_2": "data_array"
            },
            "calling": [
                "FUN_08004cb2",
                "FUN_08004cce"
            ],
            "called": [
                "FUN_08004cb2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004cce": {
            "entrypoint": "0x08004cce",
            "current_name": "check_parameter_08004cce",
            "code": "\nundefined4 checkParameter_08004cce(int inputParameterValue)\n\n{\n  undefined4 result;\n  \n  if (inputParameterValue == -1) {\n    return 0xffffffff;\n  }\n  result = FUN_08004cb2();\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08004cce": "check_parameter_08004cce",
                "param_1": "inputParameterValue",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08004948",
                "FUN_08004f4c",
                "FUN_08004b3c",
                "FUN_0800492c"
            ],
            "called": [
                "FUN_08004cb2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ce2": {
            "entrypoint": "0x08004ce2",
            "current_name": "check_param_match_08004ce2",
            "code": "\nundefined4 check_param_match_08004ce2(int value_1,char *param_list)\n\n{\n  if (value_1 == -1) {\n    is_match 0;\n  }\n  while( true ) {\n    if (*param_list == -1) {\n      is_match 0;\n    }\n    if (value_1 == *param_list) break;\n    param_list = param_list + 0xc;\n  }\n  is_match 1;\n}\n\n",
            "renaming": {
                "FUN_08004ce2": "check_param_match_08004ce2",
                "param_1": "value_1",
                "param_2": "param_list",
                "return": "is_match"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d06": {
            "entrypoint": "0x08004d06",
            "current_name": "compare_and_return_nonzero_08004d06",
            "code": "\nint compare_and_return_nonzero_08004d06(int value_1,int value_2)\n\n{\n  if (value_1 != value_2) {\n    if (value_1 == 0) {\n      return value_2;\n    }\n    if (value_2 == 0) {\n      return value_1;\n    }\n    value_1 = 0;\n  }\n  return value_1;\n}\n\n",
            "renaming": {
                "FUN_08004d06": "compare_and_return_nonzero_08004d06",
                "param_1": "value_1",
                "param_2": "value_2"
            },
            "calling": [
                "FUN_08004f4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d18": {
            "entrypoint": "0x08004d18",
            "current_name": "execute_callback_08004d18",
            "code": "\nvoid executeCallback_08004d18(void)\n\n{\n  if (DAT_20000260 != (code *)0x0) {\n    (*DAT_20000260)(DAT_20000278);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d18": "execute_callback_08004d18"
            },
            "calling": [
                "FUN_08003ea0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d40": {
            "entrypoint": "0x08004d40",
            "current_name": "infinite_loop_08004d40",
            "code": "\nvoid infiniteLoop_08004d40(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08004d40": "infinite_loop_08004d40"
            },
            "calling": [
                "FUN_08001b48",
                "FUN_08004d40"
            ],
            "called": [
                "FUN_08004d40"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d44": {
            "entrypoint": "0x08004d44",
            "current_name": "initialize_registers_08004d44",
            "code": "\n\n\nvoid initialize_registers_08004d44(void)\n\n{\n  _DAT_40021000 = _DAT_40021000 & 0xfef2ffff | 1;\n  _DAT_40021004 = _DAT_40021004 & 0xf8800000;\n  _DAT_40021008 = 0x9f0000;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d44": "initialize_registers_08004d44"
            },
            "calling": [
                "entry"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d90": {
            "entrypoint": "0x08004d90",
            "current_name": "update_register_08004d90",
            "code": "\n\n\nvoid updateRegister_08004d90(int *registerValue)\n\n{\n  if (*registerValue == 0x40012c00) {\n    _DAT_40021018 = _DAT_40021018 & 0xfffff7ff;\n  }\n  if (*registerValue == 0x40000000) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffe;\n  }\n  if (*registerValue == 0x40000400) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffd;\n  }\n  if (*registerValue == 0x40000800) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffb;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d90": "update_register_08004d90",
                "param_1": "registerValue"
            },
            "calling": [
                "FUN_08004b34"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004df4": {
            "entrypoint": "0x08004df4",
            "current_name": "subtract_four_from_param_08004df4",
            "code": "\nint subtract_four_from_param_08004df4(int input_num)\n\n{\n  return input_num + -4;\n}\n\n",
            "renaming": {
                "FUN_08004df4": "subtract_four_from_param_08004df4",
                "param_1": "input_num"
            },
            "calling": [
                "FUN_08004e12",
                "FUN_08004df8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004df8": {
            "entrypoint": "0x08004df8",
            "current_name": "execute_callback_if_enabled_08004df8",
            "code": "\nvoid executeCallbackIfEnabled_08004df8(int callbackParameter)\n\n{\n  int functionPointer;\n  \n  functionPointer = FUN_08004df4();\n  if ((*(callbackFunction **)(functionPointer + 0x4c) != (callbackFunction *)0x0) && (*(char *)(callbackParameter + 0x1c) == '\\x01')) {\n    (**(callbackFunction **)(functionPointer + 0x4c))(functionPointer,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004df8": "execute_callback_if_enabled_08004df8",
                "param_1": "callbackParameter",
                "iVar1": "functionPointer",
                "code": "callbackFunction"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [
                "FUN_08004df4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e12": {
            "entrypoint": "0x08004e12",
            "current_name": "execute_function_from_binary_08004e12",
            "code": "\nvoid executeFunctionFromBinary_08004e12(void)\n\n{\n  int functionPointer;\n  \n  functionPointer = FUN_08004df4();\n  if (*(FunctionType **)(functionPointer + 0x48) != (FunctionType *)0x0) {\n    (**(FunctionType **)(functionPointer + 0x48))();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004e12": "execute_function_from_binary_08004e12",
                "iVar1": "functionPointer",
                "code": "FunctionType"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [
                "FUN_08004df4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e20": {
            "entrypoint": "0x08004e20",
            "current_name": "check_and_execute_function_08004e20",
            "code": "\nvoid checkAndExecuteFunction_08004e20(void)\n\n{\n  if (DAT_2000027c != 0) {\n    FUN_08003f18();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004e20": "check_and_execute_function_08004e20"
            },
            "calling": [],
            "called": [
                "FUN_08003f18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e70": {
            "entrypoint": "0x08004e70",
            "current_name": "subtract_4_from_parameter_08004e70",
            "code": "\nint subtract_4_from_parameter_08004e70(int input_value)\n\n{\n  return input_value + -4;\n}\n\n",
            "renaming": {
                "FUN_08004e70": "subtract_4_from_parameter_08004e70",
                "param_1": "input_value"
            },
            "calling": [
                "FUN_08004e74",
                "FUN_08004ec4",
                "FUN_08004ef4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e74": {
            "entrypoint": "0x08004e74",
            "current_name": "process_data_08004e74",
            "code": "\nvoid processData_08004e74(int inputData,int flag,int value,undefined4 param)\n\n{\n  int result;\n  \n  result = FUN_08004e70();\n  if (value == *(int *)(inputData + 0xc)) {\n    if (flag == 0) {\n      *(undefined *)(result + 0x88) = 0;\n      *(undefined *)(result + 0x5c) = 0;\n      if (*(code **)(result + 100) != (code *)0x0) {\n        (**(code **)(result + 100))();\n      }\n      FUN_08002af8(inputData,result + 0x68,*(undefined *)(result + 0x88),8);\n      return;\n    }\n    *(undefined *)(result + 0x5c) = 1;\n    FUN_08002b84(inputData,result + 0x68,0x20,8,param);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004e74": "process_data_08004e74",
                "param_1": "inputData",
                "param_2": "flag",
                "param_3": "value",
                "param_4": "param",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08002cf2"
            ],
            "called": [
                "FUN_08002af8",
                "FUN_08004e70",
                "FUN_08002b84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ec4": {
            "entrypoint": "0x08004ec4",
            "current_name": "execute_function_08004ec4",
            "code": "\nvoid executeFunction_08004ec4(undefined4 inputParameter)\n\n{\n  int functionPointer;\n  \n  functionPointer = FUN_08004e70();\n  if (((*(code **)(functionPointer + 0x60) != (code *)0x0) && (*(char *)(functionPointer + 0x5c) == '\\x01')) &&\n     (*(char *)(functionPointer + 0x2c) != ' ')) {\n    (**(code **)(functionPointer + 0x60))(functionPointer + 0x68);\n  }\n  FUN_08002c10(inputParameter);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004ec4": "execute_function_08004ec4",
                "param_1": "inputParameter",
                "iVar1": "functionPointer"
            },
            "calling": [
                "FUN_0800316c",
                "FUN_080032b4",
                "FUN_08002d1c"
            ],
            "called": [
                "FUN_08004e70",
                "FUN_08002c10"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ef4": {
            "entrypoint": "0x08004ef4",
            "current_name": "check_and_execute_function_08004ef4",
            "code": "\nvoid checkAndExecuteFunction_08004ef4(undefined4 arg1)\n\n{\n  int result;\n  \n  result = FUN_08004e70();\n  if (*(char *)(result + 0x5d) == '\\0') {\n    FUN_08002c10(arg1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004ef4": "check_and_execute_function_08004ef4",
                "param_1": "arg1",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800316c"
            ],
            "called": [
                "FUN_08004e70",
                "FUN_08002c10"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004f4c": {
            "entrypoint": "0x08004f4c",
            "current_name": "configure_uart_pins_08004f4c",
            "code": "\n\n\nvoid configure_UART_pins_08004f4c(int *pins)\n\n{\n  int uart_pin1;\n  int uart_pin2;\n  undefined4 uart_config1;\n  uint uart_config2;\n  uint mask1;\n  uint mask2;\n  uint mask3;\n  undefined4 uart_config3;\n  \n  if (pins != (int *)0x0) {\n    uart_pin1 = FUN_08004c78((int)*(char *)(pins + 0x16),&DAT_0800764c);\n    uart_pin2 = FUN_08004c78((int)*(char *)((int)pins + 0x59),&DAT_08007604);\n    if ((uart_pin2 == 0) || (uart_pin1 == 0)) {\n      FUN_080068f0(\"ERROR: at least one UART pin has no peripheral\\n\",uart_pin2);\n    }\n    else {\n      uart_pin1 = FUN_08004d06(uart_pin1);\n      *pins = uart_pin1;\n      if (uart_pin1 == 0) {\n        FUN_080068f0(\"ERROR: U(S)ART pins mismatch\\n\");\n      }\n      else {\n        if (uart_pin1 == 0x40013800) {\n          _DAT_4002100c = _DAT_4002100c & 0xffffbfff;\n          _DAT_40021018 = _DAT_40021018 | 0x4000;\n          *(undefined *)(pins + 0x11) = 0;\n          *(undefined *)((int)pins + 0x5a) = 0x25;\n        }\n        else if (uart_pin1 == 0x40004400) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffdffff;\n          _DAT_4002101c = _DAT_4002101c | 0x20000;\n          *(undefined *)(pins + 0x11) = 1;\n          *(undefined *)((int)pins + 0x5a) = 0x26;\n        }\n        else if (uart_pin1 == 0x40004800) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffbffff;\n          _DAT_4002101c = _DAT_4002101c | 0x40000;\n          *(undefined *)(pins + 0x11) = 2;\n          *(undefined *)((int)pins + 0x5a) = 0x27;\n        }\n        uart_config1 = FUN_08004884((uint)((int)*(char *)((int)pins + 0x59) << 0x18) >> 0x1c);\n        uart_config2 = FUN_08004cce((int)*(char *)((int)pins + 0x59),&DAT_08007604);\n        mask1 = 1 << (*(byte *)((int)pins + 0x59) & 0xf) & 0xffff;\n        mask2 = (uart_config2 >> 3 & 1) << 4 | uart_config2 & 7;\n        mask3 = (uart_config2 << 0x1a) >> 0x1e;\n        _DAT_40021018 = _DAT_40021018 | 1;\n        switch((uart_config2 << 0x11) >> 0x19) {\n        case 1:\n          _DAT_40010004 = _DAT_40010004 | 0x7000001;\n          break;\n        case 2:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          break;\n        case 3:\n          _DAT_40010004 = _DAT_40010004 | 0x7000002;\n          break;\n        case 4:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          break;\n        case 5:\n          _DAT_40010004 = _DAT_40010004 | 0x7000004;\n          break;\n        case 6:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          break;\n        case 7:\n          _DAT_40010004 = _DAT_40010004 | 0x7000008;\n          break;\n        case 8:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          break;\n        case 9:\n          _DAT_40010004 = _DAT_40010004 | 0x7000030;\n          break;\n        case 10:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          break;\n        case 0xb:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          break;\n        case 0xc:\n          _DAT_40010004 = _DAT_40010004 | 0x70000c0;\n          break;\n        case 0xd:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          break;\n        case 0xe:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          break;\n        case 0xf:\n          _DAT_40010004 = _DAT_40010004 | 0x7000300;\n          break;\n        case 0x10:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          break;\n        case 0x11:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          break;\n        case 0x12:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          break;\n        case 0x13:\n          _DAT_40010004 = _DAT_40010004 | 0x7000c00;\n          break;\n        case 0x14:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          break;\n        case 0x15:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          break;\n        case 0x16:\n          _DAT_40010004 = _DAT_40010004 | 0x7001000;\n          break;\n        case 0x17:\n          _DAT_40010004 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          break;\n        case 0x1b:\n          _DAT_40010004 = _DAT_40010004 | 0x7008000;\n          break;\n        case 0x1c:\n          _DAT_40010004 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          break;\n        case 0x21:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff;\n          break;\n        case 0x22:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          break;\n        case 0x23:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          break;\n        case 0x24:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n        }\n        uart_config3 = 3;\n        FUN_08002624(uart_config1,&mask1);\n        uart_config1 = FUN_08004884((uint)((int)*(char *)(pins + 0x16) << 0x18) >> 0x1c);\n        uart_config2 = FUN_08004cce((int)*(char *)(pins + 0x16),&DAT_0800764c);\n        mask1 = 1 << (*(byte *)(pins + 0x16) & 0xf) & 0xffff;\n        mask2 = (uart_config2 >> 3 & 1) << 4 | uart_config2 & 7;\n        mask3 = (uart_config2 << 0x1a) >> 0x1e;\n        FUN_08002624(uart_config1,&mask1);\n        (&DAT_2000032c)[*(byte *)(pins + 0x11)] = pins + 1;\n        pins[1] = *pins;\n        pins[2] = pins[0x12];\n        pins[3] = pins[0x13];\n        pins[4] = pins[0x14];\n        pins[5] = pins[0x15];\n        pins[6] = 0xc;\n        pins[7] = 0;\n        pins[8] = 0;\n        FUN_0800441a(pins + 1);\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004f4c": "configure_uart_pins_08004f4c",
                "param_1": "pins",
                "iVar1": "uart_pin1",
                "iVar2": "uart_pin2",
                "uVar3": "uart_config1",
                "uVar4": "uart_config2",
                "local_20": "mask1",
                "local_1c": "mask2",
                "local_18": "mask3",
                "local_14": "uart_config3"
            },
            "calling": [
                "FUN_08005a68",
                "FUN_08005384"
            ],
            "called": [
                "FUN_08002624",
                "FUN_08004c78",
                "FUN_08004d06",
                "FUN_08004884",
                "FUN_080068f0",
                "FUN_08004cce",
                "FUN_0800441a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005384": {
            "entrypoint": "0x08005384",
            "current_name": "initialize_data_08005384",
            "code": "\nvoid initializeData_08005384(void)\n\n{\n  int result;\n  undefined4 value;\n  \n  result = FUN_08004c78(2,&DAT_0800764c);\n  if (result != 0) {\n    value = FUN_08004c78(2,&DAT_0800764c);\n    DAT_200000e1 = FUN_08004ca2(value,&DAT_08007604);\n    DAT_200000e0 = 2;\n    DAT_200000d0 = 0x2580;\n    DAT_200000dc = 0;\n    DAT_200000d4 = 0;\n    DAT_200000d8 = 0;\n    FUN_08004f4c(&DAT_20000088);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005384": "initialize_data_08005384",
                "iVar1": "result",
                "uVar2": "value"
            },
            "calling": [
                "FUN_080053d4"
            ],
            "called": [
                "FUN_08004c78",
                "FUN_08004ca2",
                "FUN_08004f4c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080053d4": {
            "entrypoint": "0x080053d4",
            "current_name": "check_and_execute_operation_080053d4",
            "code": "\nuint check_and_execute_operation_080053d4(undefined4 input_param,uint flag)\n\n{\n  int initial_value;\n  int result;\n  uint index;\n  \n  initial_value = FUN_08001cc4();\n  result = FUN_08004c78(2,&DAT_0800764c);\n  if (result == 0) {\n    return 0;\n  }\n  for (index = 0;\n      (index < 5 &&\n      (((&DAT_2000032c)[index] == 0 ||\n       (result = FUN_08004c78(2,&DAT_0800764c), *(int *)(&DAT_2000032c)[index] != result))));\n      index = index + 1 & 0xff) {\n  }\n  if (4 < index) {\n    if ((4 < DAT_200000cc) && (FUN_08005384(), 4 < DAT_200000cc)) {\n      return 0;\n    }\n    index = (uint)DAT_200000cc;\n  }\n  do {\n    result = FUN_08004478((&DAT_2000032c)[index],input_param,flag & 0xffff,1000);\n    if (result == 0) {\n      return flag;\n    }\n    result = FUN_08001cc4();\n  } while ((uint)(result - initial_value) < 1000);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080053d4": "check_and_execute_operation_080053d4",
                "param_1": "input_param",
                "param_2": "flag",
                "iVar1": "initial_value",
                "iVar2": "result",
                "uVar3": "index"
            },
            "calling": [
                "FUN_08005730"
            ],
            "called": [
                "FUN_08004c78",
                "FUN_08004478",
                "FUN_08001cc4",
                "FUN_08005384"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800548c": {
            "entrypoint": "0x0800548c",
            "current_name": "is_feature_enabled_0800548c",
            "code": "\nbool isFeatureEnabled_0800548c(int featureIndex)\n\n{\n  uint result;\n  \n  result = FUN_080047e8((&DAT_2000032c)[*(byte *)(featureIndex + 0x44)]);\n  return (result & 0x22) == 0x22;\n}\n\n",
            "renaming": {
                "FUN_0800548c": "is_feature_enabled_0800548c",
                "param_1": "featureIndex",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08005510",
                "FUN_080054d4"
            ],
            "called": [
                "FUN_080047e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080054b0": {
            "entrypoint": "0x080054b0",
            "current_name": "is_desired_value_valid_080054b0",
            "code": "\nbool isDesiredValueValid_080054b0(int value)\n\n{\n  uint result;\n  \n  result = FUN_080047e8((&DAT_2000032c)[*(byte *)(value + 0x44)]);\n  return (result & 0x21) == 0x21;\n}\n\n",
            "renaming": {
                "FUN_080054b0": "is_desired_value_valid_080054b0",
                "param_1": "value",
                "uVar1": "result"
            },
            "calling": [],
            "called": [
                "FUN_080047e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080054d4": {
            "entrypoint": "0x080054d4",
            "current_name": "extract_data_080054d4",
            "code": "\nundefined4 extract_data_080054d4(int input,undefined *output,undefined4 arg1,undefined4 arg2)\n\n{\n  int result;\n  \n  if (input == 0) {\n    return 0xffffffff;\n  }\n  result = FUN_0800548c();\n  if (result == 0) {\n    *output = *(undefined *)(input + 0x45);\n    FUN_080045a2((&DAT_2000032c)[*(byte *)(input + 0x44)],input + 0x45,1,&DAT_2000032c,arg2);\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080054d4": "extract_data_080054d4",
                "param_1": "input",
                "param_2": "output",
                "param_3": "arg1",
                "param_4": "arg2",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800598a"
            ],
            "called": [
                "FUN_080045a2",
                "FUN_0800548c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005510": {
            "entrypoint": "0x08005510",
            "current_name": "update_data_08005510",
            "code": "\nvoid updateData_08005510(int dataPointer,undefined4 newValue,undefined4 unused,undefined4 param_4)\n\n{\n  int result;\n  uint index;\n  \n  if (dataPointer != 0) {\n    result = FUN_0800548c();\n    if (result == 0) {\n      index = (uint)*(byte *)(dataPointer + 0x44);\n      *(undefined4 *)(&DAT_200002dc + index * 4) = newValue;\n      *(int *)(&DAT_200002f0 + index * 4) = dataPointer;\n      FUN_08002494((int)*(char *)(dataPointer + 0x5a),0,1,index,param_4);\n      FUN_080024f8((int)*(char *)(dataPointer + 0x5a));\n      FUN_080045a2((&DAT_2000032c)[*(byte *)(dataPointer + 0x44)],dataPointer + 0x45,1);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005510": "update_data_08005510",
                "param_1": "dataPointer",
                "param_2": "newValue",
                "param_3": "unused",
                "iVar1": "result",
                "uVar2": "index"
            },
            "calling": [
                "FUN_08005a68"
            ],
            "called": [
                "FUN_080045a2",
                "FUN_08002494",
                "FUN_0800548c",
                "FUN_080024f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005568": {
            "entrypoint": "0x08005568",
            "current_name": "update_data_08005568",
            "code": "\nvoid updateData_08005568(int inputData,undefined4 newValue)\n\n{\n  byte byteValue;\n  \n  if (inputData != 0) {\n    byteValue = *(byte *)(inputData + 0x44);\n    *(undefined4 *)(&DAT_20000304 + (uint)byteValue * 4) = newValue;\n    *(int *)(&DAT_20000318 + (uint)byteValue * 4) = inputData;\n    FUN_08002494((int)*(char *)(inputData + 0x5a),0,2);\n    FUN_080024f8((int)*(char *)(inputData + 0x5a));\n    FUN_0800455a((&DAT_2000032c)[*(byte *)(inputData + 0x44)],\n                 *(int *)(inputData + 100) + (uint)*(ushort *)(inputData + 0x6a),1);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005568": "update_data_08005568",
                "param_1": "inputData",
                "param_2": "newValue",
                "bVar1": "byteValue"
            },
            "calling": [],
            "called": [
                "FUN_08002494",
                "FUN_080024f8",
                "FUN_0800455a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080055bc": {
            "entrypoint": "0x080055bc",
            "current_name": "find_index_or_default_080055bc",
            "code": "\nuint find_index_or_default_080055bc(int value)\n\n{\n  uint index;\n  \n  if (value == 0) {\n    index = 5;\n  }\n  else {\n    index = 0;\n    while( true ) {\n      if (4 < index) {\n        return index;\n      }\n      if (value == (&DAT_2000032c)[index]) break;\n      index = index + 1 & 0xff;\n    }\n  }\n  return index;\n}\n\n",
            "renaming": {
                "FUN_080055bc": "find_index_or_default_080055bc",
                "param_1": "value",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08005604",
                "FUN_080055e0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080055e0": {
            "entrypoint": "0x080055e0",
            "current_name": "execute_selected_function_080055e0",
            "code": "\nvoid executeSelectedFunction_080055e0(void)\n\n{\n  uint result;\n  \n  result = FUN_080055bc();\n  if (result < 5) {\n    (**(code **)(&DAT_200002dc + result * 4))(*(undefined4 *)(&DAT_200002f0 + result * 4));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080055e0": "execute_selected_function_080055e0",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08004618"
            ],
            "called": [
                "FUN_080055bc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005604": {
            "entrypoint": "0x08005604",
            "current_name": "execute_task_08005604",
            "code": "\nvoid executeTask_08005604(void)\n\n{\n  uint randomIndex;\n  int result;\n  int dataAddr;\n  \n  randomIndex = FUN_080055bc();\n  dataAddr = *(int *)(&DAT_20000318 + randomIndex * 4);\n  if ((randomIndex < 5) && (result = (**(code **)(&DAT_20000304 + randomIndex * 4))(dataAddr), result != -1)) {\n    FUN_0800455a((&DAT_2000032c)[*(byte *)(dataAddr + 0x44)],\n                 *(int *)(dataAddr + 100) + (uint)*(ushort *)(dataAddr + 0x6a),1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005604": "execute_task_08005604",
                "uVar1": "randomIndex",
                "iVar2": "result",
                "iVar3": "dataAddr"
            },
            "calling": [
                "FUN_080045fe"
            ],
            "called": [
                "FUN_080055bc",
                "FUN_0800455a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005650": {
            "entrypoint": "0x08005650",
            "current_name": "FUNC_08005650",
            "code": "\nvoid FUNC_08005650(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005650": "FUNC_08005650"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080056d8": {
            "entrypoint": "0x080056d8",
            "current_name": "allocate_memory_080056d8",
            "code": "\nundefined * allocateMemory_080056d8(int size)\n\n{\n  undefined *allocatedMemory;\n  \n  if (DAT_20000340 == (undefined *)0x0) {\n    DAT_20000340 = &DAT_200006a8;\n  }\n  allocatedMemory = DAT_20000340;\n  if (DAT_20000340 + size <= &stack0x00000000) {\n    DAT_20000340 = DAT_20000340 + size;\n    return allocatedMemory;\n  }\n  DAT_200006a4 = 0xc;\n  return (undefined *)0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080056d8": "allocate_memory_080056d8",
                "param_1": "size",
                "puVar1": "allocatedMemory"
            },
            "calling": [
                "FUN_08006920"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005714": {
            "entrypoint": "0x08005714",
            "current_name": "get_negative_one_08005714",
            "code": "\nundefined4 get_negative_one_08005714(void)\n\n{\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08005714": "get_negative_one_08005714"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800571a": {
            "entrypoint": "0x0800571a",
            "current_name": "initialize_memory_0800571a",
            "code": "\nundefined4 initializeMemory_0800571a(undefined4 param,int buffer)\n\n{\n  *(undefined4 *)(buffer + 4) = 0x2000;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800571a": "initialize_memory_0800571a",
                "param_1": "param",
                "param_2": "buffer"
            },
            "calling": [
                "FUN_08007004"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005724": {
            "entrypoint": "0x08005724",
            "current_name": "initialize_return_value_08005724",
            "code": "\nundefined4 initializeReturnValue_08005724(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08005724": "initialize_return_value_08005724"
            },
            "calling": [
                "FUN_08007028"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005728": {
            "entrypoint": "0x08005728",
            "current_name": "initialize_08005728",
            "code": "\nundefined4 initialize_08005728(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005728": "initialize_08005728"
            },
            "calling": [
                "FUN_08007048"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800572c": {
            "entrypoint": "0x0800572c",
            "current_name": "initialize_application_0800572c",
            "code": "\nundefined4 initializeApplication_0800572c(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800572c": "initialize_application_0800572c"
            },
            "calling": [
                "FUN_0800706c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005730": {
            "entrypoint": "0x08005730",
            "current_name": "execute_function_08005730",
            "code": "\nvoid executeFunction_08005730(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  FUN_080053d4(arg2,arg3,arg3,arg4,arg4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005730": "execute_function_08005730",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "calling": [
                "FUN_08006f5a"
            ],
            "called": [
                "FUN_080053d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800573c": {
            "entrypoint": "0x0800573c",
            "current_name": "idle_loop_0800573c",
            "code": "\nvoid idle_loop_0800573c(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_0800573c": "idle_loop_0800573c"
            },
            "calling": [
                "FUN_0800573c",
                "FUN_08006ac0"
            ],
            "called": [
                "FUN_0800573c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005740": {
            "entrypoint": "0x08005740",
            "current_name": "initialize_data_08005740",
            "code": "\nundefined4 initializeData_08005740(void)\n\n{\n  DAT_200006a4 = 0x16;\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08005740": "initialize_data_08005740"
            },
            "calling": [
                "FUN_08006f00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005750": {
            "entrypoint": "0x08005750",
            "current_name": "check_return_value_08005750",
            "code": "\nundefined4 check_return_value_08005750(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08005750": "check_return_value_08005750"
            },
            "calling": [
                "thunk_FUN_08005750"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005754": {
            "entrypoint": "0x08005754",
            "current_name": "extracted_value_08005754",
            "code": "\nuint extractedValue_08005754(uint inputValue)\n\n{\n  bool isInRange;\n  char extractedChar;\n  uint result;\n  \n  if (inputValue < 0xe) {\n    if (inputValue + 0x2e < 0x3c) {\n      isInRange = true;\n    }\n    else {\n      isInRange = false;\n    }\n  }\n  else {\n    isInRange = inputValue < 0x3c;\n  }\n  if (isInRange) {\n    if (inputValue < 0xe) {\n      inputValue = inputValue + 0x2e;\n    }\n    extractedChar = (&DAT_080076f0)[inputValue];\n  }\n  else {\n    extractedChar = -1;\n  }\n  if (extractedChar == -1) {\n    result = 0;\n  }\n  else {\n    result = FUN_08004a4c();\n    if (DAT_200000f4 != 0xc) {\n      if (DAT_200000f4 < 0xc) {\n        return result >> (0xc - DAT_200000f4 & 0xff);\n      }\n      return result << (DAT_200000f4 - 0xc & 0xff);\n    }\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005754": "extracted_value_08005754",
                "param_1": "inputValue",
                "bVar1": "isInRange",
                "cVar2": "extractedChar",
                "uVar3": "result"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08004a4c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080057b4": {
            "entrypoint": "0x080057b4",
            "current_name": "execute_function_080057b4",
            "code": "\nvoid executeFunction_080057b4(uint index,undefined4 mode,undefined4 param1,undefined *param2)\n\n{\n  int result;\n  undefined *data;\n  int value;\n  \n  if (index < 0x3c) {\n    value = (int)(char)(&DAT_080076f0)[index];\n    data = &DAT_080076f0;\n  }\n  else {\n    value = -1;\n    data = param2;\n  }\n  if (value != -1) {\n    result = FUN_080047f4(value,&DAT_20000344,param1,data,param2);\n    if (result != 0) {\n      result = FUN_08004ce2(value,&DAT_080074b4);\n      if (result != 0) {\n        FUN_08004b3c(value);\n      }\n      FUN_08004828(value,&DAT_20000344);\n    }\n    switch(mode) {\n    case 0:\n      FUN_08004bb0(value,0);\n      break;\n    case 1:\n      FUN_08004bb0(value,1,0);\n      break;\n    case 2:\n      FUN_08004bb0(value,0,1);\n      break;\n    case 3:\n      FUN_08004bb0(value,0,2);\n    }\n    FUN_0800480a(value,&DAT_20000358);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080057b4": "execute_function_080057b4",
                "param_1": "index",
                "param_2": "mode",
                "param_3": "param1",
                "param_4": "param2",
                "iVar1": "result",
                "iVar3": "value",
                "puVar2": "data"
            },
            "calling": [
                "FUN_08000bcc",
                "FUN_0800157c",
                "FUN_080013a4"
            ],
            "called": [
                "FUN_08004bb0",
                "FUN_080047f4",
                "FUN_0800480a",
                "FUN_08004b3c",
                "FUN_08004828",
                "FUN_08004ce2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005848": {
            "entrypoint": "0x08005848",
            "current_name": "decode_and_update_data_08005848",
            "code": "\nvoid decode_and_update_data_08005848(uint input_value,undefined4 param_2,undefined4 param_3,undefined *data_array)\n\n{\n  int result;\n  undefined4 shifted_value;\n  undefined *updated_data_array;\n  uint selected_index;\n  \n  if (input_value < 0x3c) {\n    selected_index = (uint)(char)(&DAT_080076f0)[input_value];\n    updated_data_array = &DAT_080076f0;\n  }\n  else {\n    selected_index = 0xffffffff;\n    updated_data_array = data_array;\n  }\n  if ((selected_index != 0xffffffff) &&\n     (result = FUN_080047f4(selected_index,&DAT_20000358,param_3,updated_data_array,data_array), result != 0)) {\n    shifted_value = FUN_08004848((selected_index << 0x18) >> 0x1c);\n    FUN_08004c30(shifted_value,1 << (selected_index & 0xf) & 0xffff,param_2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005848": "decode_and_update_data_08005848",
                "param_1": "input_value",
                "param_4": "data_array",
                "iVar1": "result",
                "uVar2": "shifted_value",
                "puVar3": "updated_data_array",
                "uVar4": "selected_index"
            },
            "calling": [
                "FUN_08001310",
                "FUN_08000cd0",
                "FUN_080012a2",
                "FUN_08000bcc",
                "FUN_080015b2",
                "FUN_080012c0",
                "FUN_0800157c",
                "FUN_080013a4",
                "FUN_080012e8"
            ],
            "called": [
                "FUN_08004848",
                "FUN_08004c30",
                "FUN_080047f4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005890": {
            "entrypoint": "0x08005890",
            "current_name": "check_valid_input_08005890",
            "code": "\nchar check_valid_input_08005890(uint input_value)\n\n{\n  char is_valid;\n  int result;\n  undefined4 shifted_value;\n  uint lookup_index;\n  \n  if (input_value < 0x3c) {\n    lookup_index = (uint)(char)(&DAT_080076f0)[input_value];\n  }\n  else {\n    lookup_index = 0xffffffff;\n  }\n  if (lookup_index == 0xffffffff) {\n    is_valid = '\\0';\n  }\n  else {\n    result = FUN_080047f4(lookup_index,&DAT_20000358);\n    if (result == 0) {\n      is_valid = '\\0';\n    }\n    else {\n      shifted_value = FUN_08004848((lookup_index << 0x18) >> 0x1c);\n      is_valid = FUN_08004c48(shifted_value,1 << (lookup_index & 0xf) & 0xffff);\n    }\n  }\n  if (is_valid != '\\0') {\n    is_valid = '\\x01';\n  }\n  return is_valid;\n}\n\n",
            "renaming": {
                "FUN_08005890": "check_valid_input_08005890",
                "param_1": "input_value",
                "cVar1": "is_valid",
                "iVar2": "result",
                "uVar3": "shifted_value",
                "uVar4": "lookup_index"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_080015b2"
            ],
            "called": [
                "FUN_08004848",
                "FUN_080047f4",
                "FUN_08004c48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058e0": {
            "entrypoint": "0x080058e0",
            "current_name": "initialize_application_080058e0",
            "code": "\nvoid initialize_application_080058e0(void)\n\n{\n  FUN_08004b94();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080058e0": "initialize_application_080058e0"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08000bcc",
                "FUN_08001ab0",
                "FUN_080016b4"
            ],
            "called": [
                "FUN_08004b94"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058e8": {
            "entrypoint": "0x080058e8",
            "current_name": "FUNC_080058e8",
            "code": "\nvoid FUNC_080058e8(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080058e8": "FUNC_080058e8"
            },
            "calling": [
                "FUN_08000bcc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800591e": {
            "entrypoint": "0x0800591e",
            "current_name": "calculate_offset_0800591e",
            "code": "\nushort calculate_offset_0800591e(int input_value)\n\n{\n  return (*(short *)(input_value + 0x134) + 0x40) - *(short *)(input_value + 0x136) & 0x3f;\n}\n\n",
            "renaming": {
                "FUN_0800591e": "calculate_offset_0800591e",
                "param_1": "input_value"
            },
            "calling": [
                "FUN_08005a18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800598a": {
            "entrypoint": "0x0800598a",
            "current_name": "update_array_and_index_0800598a",
            "code": "\nvoid updateArrayAndIndex_0800598a(int arrayPointer)\n\n{\n  int result;\n  ushort updatedIndex;\n  undefined newValue;\n  \n  result = FUN_080054d4(arrayPointer,&newValue);\n  if ((result == 0) &&\n     (updatedIndex = *(short *)(arrayPointer + 0x60) + 1U & 0x3f, updatedIndex != *(ushort *)(arrayPointer + 0x62))) {\n    *(undefined *)(*(int *)(arrayPointer + 0x5c) + (uint)*(ushort *)(arrayPointer + 0x60)) = newValue;\n    *(ushort *)(arrayPointer + 0x60) = updatedIndex;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800598a": "update_array_and_index_0800598a",
                "param_1": "arrayPointer",
                "iVar1": "result",
                "uVar2": "updatedIndex",
                "local_9": "newValue"
            },
            "calling": [],
            "called": [
                "FUN_080054d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a18": {
            "entrypoint": "0x08005a18",
            "current_name": "FUNC_08005a18",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08005a1e) */\n/* WARNING: Removing unreachable block (ram,0x08005a30) */\n/* WARNING: Removing unreachable block (ram,0x08005a26) */\n/* WARNING: Removing unreachable block (ram,0x08005a38) */\n\nvoid FUNC_08005a18(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a18": "FUNC_08005a18"
            },
            "calling": [
                "FUN_08005f6c"
            ],
            "called": [
                "FUN_0800591e"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005a44": {
            "entrypoint": "0x08005a44",
            "current_name": "initialize_data_structure_08005a44",
            "code": "\nvoid initializeDataStructure_08005a44(int dataStructure)\n\n{\n  *(int *)(dataStructure + 0x130) = dataStructure + 0x11;\n  *(undefined2 *)(dataStructure + 0x134) = 0;\n  *(undefined2 *)(dataStructure + 0x136) = 0;\n  *(int *)(dataStructure + 0x138) = dataStructure + 0x51;\n  *(undefined2 *)(dataStructure + 0x13c) = 0;\n  *(undefined2 *)(dataStructure + 0x13e) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a44": "initialize_data_structure_08005a44",
                "param_1": "dataStructure"
            },
            "calling": [
                "FUN_08005b54"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a68": {
            "entrypoint": "0x08005a68",
            "current_name": "configure_serial_port_08005a68",
            "code": "\nvoid configureSerialPort_08005a68(int serialPortAddress,undefined4 baudRate,byte serialConfig)\n\n{\n  uint value;\n  char *errorMessage;\n  byte configBits;\n  int configOption;\n  byte *bytePointer;\n  char tempChar;\n  int tempInt;\n  code *functionPointer;\n  \n  *(undefined4 *)(serialPortAddress + 0x11c) = baudRate;\n  *(byte *)(serialPortAddress + 0x140) = serialConfig;\n  configBits = serialConfig & 7;\n  if (configBits == 4) {\n    configOption = 7;\n  }\n  else if (configBits == 6) {\n    configOption = 8;\n  }\n  else if (configBits == 2) {\n    configOption = 6;\n  }\n  else {\n    configOption = 0;\n  }\n  if ((serialConfig & 0x30) == 0x30) {\n    *(undefined4 *)(serialPortAddress + 0x128) = 0x600;\n    configOption = configOption + 1;\n  }\n  else if ((serialConfig & 0x20) == 0) {\n    *(undefined4 *)(serialPortAddress + 0x128) = 0;\n  }\n  else {\n    *(undefined4 *)(serialPortAddress + 0x128) = 0x400;\n    configOption = configOption + 1;\n  }\n  if ((serialConfig & 8) == 0) {\n    *(undefined4 *)(serialPortAddress + 0x124) = 0;\n  }\n  else {\n    *(undefined4 *)(serialPortAddress + 0x124) = 0x2000;\n  }\n  if (configOption == 8) {\n    *(undefined4 *)(serialPortAddress + 0x120) = 0;\n  }\n  else if (configOption == 9) {\n    *(undefined4 *)(serialPortAddress + 0x120) = 0x1000;\n  }\n  else {\n    configOption = 0;\n  }\n  if (configOption != 0) {\n    FUN_08004f4c(serialPortAddress + 0xd4);\n    FUN_08005510(serialPortAddress + 0xd4,0x800598b);\n    return;\n  }\n  errorMessage = \"void HardwareSerial::begin(long unsigned int, byte)\";\n  functionPointer = (code *)0x8005b12;\n  FUN_0800611c(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/cores/arduino/HardwareSerial.cpp\"\n               ,299,\"void HardwareSerial::begin(long unsigned int, byte)\",\"databits!=0\");\n  bytePointer = *(byte **)(value + tempInt);\n  errorMessage[0x1e] = tempChar;\n  *(undefined *)(*bytePointer + 0x1e) = 0;\n  if (value < 0x3c) {\n    uRam0000012d = (&DAT_080076f0)[value];\n  }\n  else {\n    uRam0000012d = 0xff;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08005b30. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*functionPointer)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a68": "configure_serial_port_08005a68",
                "param_1": "serialPortAddress",
                "param_2": "baudRate",
                "param_3": "serialConfig",
                "extraout_r1": "value",
                "pcVar1": "errorMessage",
                "bVar2": "configBits",
                "iVar3": "configOption",
                "pbVar4": "bytePointer",
                "unaff_r4": "tempChar",
                "unaff_r6": "tempInt",
                "UNRECOVERED_JUMPTABLE": "functionPointer"
            },
            "calling": [
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08005510",
                "FUN_08004f4c",
                "FUN_0800611c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005b24": {
            "entrypoint": "0x08005b24",
            "current_name": "set_default_value_08005b24",
            "code": "\nvoid setDefaultValue_08005b24(int memoryAddress,uint value)\n\n{\n  undefined defaultValue;\n  code *jumpTable;\n  \n  if (value < 0x3c) {\n    defaultValue = (&DAT_080076f0)[value];\n  }\n  else {\n    defaultValue = 0xff;\n  }\n  *(undefined *)(memoryAddress + 0x12d) = defaultValue;\n                    /* WARNING: Could not recover jumptable at 0x08005b30. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005b24": "set_default_value_08005b24",
                "param_1": "memoryAddress",
                "param_2": "value",
                "uVar1": "defaultValue",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_08005b54"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005b3c": {
            "entrypoint": "0x08005b3c",
            "current_name": "set_pixel_value_08005b3c",
            "code": "\nvoid setPixelValue_08005b3c(int baseAddress,uint index)\n\n{\n  undefined pixelValue;\n  \n  if (index < 0x3c) {\n    pixelValue = (&DAT_080076f0)[index];\n  }\n  else {\n    pixelValue = 0xff;\n  }\n  *(undefined *)(baseAddress + 300) = pixelValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005b3c": "set_pixel_value_08005b3c",
                "param_1": "baseAddress",
                "param_2": "index",
                "uVar1": "pixelValue"
            },
            "calling": [
                "FUN_08005b54"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005b54": {
            "entrypoint": "0x08005b54",
            "current_name": "initialize_parameters_08005b54",
            "code": "\nundefined4 *\ninitializeParameters_08005b54(undefined4 *paramArray,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined returnValue;\n  \n  paramArray[1] = 0;\n  paramArray[2] = 1000;\n  *paramArray = &PTR_LAB_080059c8_1_08007804;\n  if (paramArray == (undefined4 *)&DAT_2000036c) {\n    FUN_08005b24(&DAT_2000036c,0,param3,&DAT_2000036c,param4);\n    FUN_08005b3c(&DAT_2000036c,1);\n  }\n  else {\n    returnValue = FUN_08004ca2(param2,&DAT_08007604);\n    *(undefined *)((int)paramArray + 0x12d) = returnValue;\n    returnValue = FUN_08004ca2(param2,&DAT_0800764c);\n    *(undefined *)(paramArray + 0x4b) = returnValue;\n  }\n  FUN_08005a44(paramArray);\n  return paramArray;\n}\n\n",
            "renaming": {
                "FUN_08005b54": "initialize_parameters_08005b54",
                "param_1": "paramArray",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08005bb0"
            ],
            "called": [
                "FUN_08004ca2",
                "FUN_08005a44",
                "FUN_08005b3c",
                "FUN_08005b24"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005bb0": {
            "entrypoint": "0x08005bb0",
            "current_name": "check_params_08005bb0",
            "code": "\nvoid checkParams_08005bb0(int flag,int value,undefined4 param3,undefined4 param4)\n\n{\n  if (flag != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    FUN_08005b54(&DAT_2000036c,0x40004400,param3,0xffff,param4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005bb0": "check_params_08005bb0",
                "param_1": "flag",
                "param_2": "value",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [],
            "called": [
                "FUN_08005b54"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c1c": {
            "entrypoint": "0x08005c1c",
            "current_name": "initialize_data_08005c1c",
            "code": "\nvoid initializeData_08005c1c(undefined4 *data,undefined value1,undefined value2,undefined value3,\n                 undefined value4)\n\n{\n  *data = &DAT_08007858;\n  *(undefined *)(data + 1) = value1;\n  *(undefined *)((int)data + 5) = value2;\n  *(undefined *)((int)data + 6) = value3;\n  *(undefined *)((int)data + 7) = value4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005c1c": "initialize_data_08005c1c",
                "param_1": "data",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "value4"
            },
            "calling": [
                "FUN_08005c38"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c38": {
            "entrypoint": "0x08005c38",
            "current_name": "check_params_08005c38",
            "code": "\nvoid checkParams_08005c38(int condition1,int condition2)\n\n{\n  if ((condition1 == 1) && (condition2 == 0xffff)) {\n    FUN_08005c1c(&DAT_200004b0,0,0,0,0);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005c38": "check_params_08005c38",
                "param_1": "condition1",
                "param_2": "condition2"
            },
            "calling": [],
            "called": [
                "FUN_08005c1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c96": {
            "entrypoint": "0x08005c96",
            "current_name": "execute_function_08005c96",
            "code": "\nundefined4 executeFunction_08005c96(int *functionPointer,int inputValue,undefined4 additionalParam1,undefined4 additionalParam2)\n\n{\n  undefined4 allocatedMemory;\n  \n  if (inputValue != 0) {\n    allocatedMemory = FUN_08000178(inputValue);\n    allocatedMemory = (**(code **)(*functionPointer + 4))(functionPointer,inputValue,allocatedMemory,*(code **)(*functionPointer + 4),additionalParam2);\n    return allocatedMemory;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005c96": "execute_function_08005c96",
                "param_1": "functionPointer",
                "param_2": "inputValue",
                "param_3": "additionalParam1",
                "param_4": "additionalParam2",
                "uVar1": "allocatedMemory"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0",
                "FUN_08005cd4",
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08000178"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cb6": {
            "entrypoint": "0x08005cb6",
            "current_name": "execute_function_08005cb6",
            "code": "\nvoid executeFunction_08005cb6(undefined4 *functionPointer)\n\n{\n  (**(code **)*functionPointer)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005cb6": "execute_function_08005cb6",
                "param_1": "functionPointer"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08005d42"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cc0": {
            "entrypoint": "0x08005cc0",
            "current_name": "execute_function_08005cc0",
            "code": "\nvoid executeFunction_08005cc0(int *functionPointer,undefined4 arg1,undefined4 arg2,undefined4 arg4)\n\n{\n  (**(code **)(*functionPointer + 4))(functionPointer,&DAT_0800786c,2,*(code **)(*functionPointer + 4),arg4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005cc0": "execute_function_08005cc0",
                "param_1": "functionPointer",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg4"
            },
            "calling": [
                "FUN_08005cd4",
                "FUN_08005f40"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cd4": {
            "entrypoint": "0x08005cd4",
            "current_name": "add_and_calculate_08005cd4",
            "code": "\nint addAndCalculate_08005cd4(undefined4 inputParam)\n\n{\n  int result1;\n  int result2;\n  \n  result1 = FUN_08005c96();\n  result2 = FUN_08005cc0(inputParam);\n  return result2 + result1;\n}\n\n",
            "renaming": {
                "FUN_08005cd4": "add_and_calculate_08005cd4",
                "param_1": "inputParam",
                "iVar1": "result1",
                "iVar2": "result2"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08005cc0",
                "FUN_08005c96"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005ce8": {
            "entrypoint": "0x08005ce8",
            "current_name": "convert_base_08005ce8",
            "code": "\nundefined4 convertBase_08005ce8(int *array_ptr,uint number,uint base)\n\n{\n  char digit;\n  undefined4 result;\n  uint remainder;\n  uint quotient;\n  char *buffer_ptr;\n  char buffer [9];\n  \n  buffer[1] = 0;\n  if ((int)base < 2) {\n    base = 10;\n  }\n  buffer_ptr = buffer + 1;\n  do {\n    quotient = number / base;\n    remainder = (number & 0xff) - (quotient * base & 0xff) & 0xff;\n    buffer_ptr = buffer_ptr + -1;\n    digit = (char)remainder;\n    if (remainder < 10) {\n      digit = digit + '0';\n    }\n    else {\n      digit = digit + '7';\n    }\n    *buffer_ptr = digit;\n    number = quotient;\n  } while (quotient != 0);\n  if (buffer_ptr == (char *)0x0) {\n    result = 0;\n  }\n  else {\n    result = FUN_08000178(buffer_ptr);\n    result = (**(code **)(*array_ptr + 4))(array_ptr,buffer_ptr,result);\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005ce8": "convert_base_08005ce8",
                "param_1": "array_ptr",
                "param_2": "number",
                "param_3": "base",
                "cVar1": "digit",
                "uVar2": "result",
                "uVar3": "remainder",
                "uVar4": "quotient",
                "pcVar5": "buffer_ptr",
                "local_15": "buffer"
            },
            "calling": [
                "FUN_08005d8a",
                "FUN_08005d42"
            ],
            "called": [
                "FUN_08000178"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005d42": {
            "entrypoint": "0x08005d42",
            "current_name": "process_input_08005d42",
            "code": "\nint processInput_08005d42(undefined4 *data,uint value,uint base)\n\n{\n  int result;\n  int negative;\n  \n  if (base == 0) {\n    result = (**(code **)*data)(data,value & 0xff);\n    return result;\n  }\n  if (base != 10) {\n    result = FUN_08005ce8(data,value,base & 0xff);\n    return result;\n  }\n  if (-1 < (int)value) {\n    result = FUN_08005ce8(data,value,10);\n    return result;\n  }\n  result = FUN_08005cb6(data,0x2d);\n  negative = FUN_08005ce8(data,-value,10);\n  return negative + result;\n}\n\n",
            "renaming": {
                "FUN_08005d42": "process_input_08005d42",
                "param_1": "data",
                "param_2": "value",
                "param_3": "base",
                "iVar1": "result",
                "iVar2": "negative"
            },
            "calling": [
                "FUN_08005d82"
            ],
            "called": [
                "FUN_08005cb6",
                "FUN_08005ce8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005d82": {
            "entrypoint": "0x08005d82",
            "current_name": "initialize_08005d82",
            "code": "\nvoid initialize_08005d82(void)\n\n{\n  FUN_08005d42();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005d82": "initialize_08005d82"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08005d42"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005d8a": {
            "entrypoint": "0x08005d8a",
            "current_name": "process_data_08005d8a",
            "code": "\nvoid processData_08005d8a(undefined4 *data,uint value1,uint value2,undefined4 code)\n\n{\n  if (value2 != 0) {\n    FUN_08005ce8(data,value1,value2 & 0xff);\n    return;\n  }\n  (**(code **)*data)(data,value1 & 0xff,0,*(code **)*data,code);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005d8a": "process_data_08005d8a",
                "param_1": "data",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "code"
            },
            "calling": [
                "FUN_08005da8"
            ],
            "called": [
                "FUN_08005ce8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005da8": {
            "entrypoint": "0x08005da8",
            "current_name": "perform_complex_calculation_08005da8",
            "code": "\nint performComplexCalculation_08005da8(undefined4 param1,undefined4 param2,undefined4 param3,uint param4,byte param5)\n\n{\n  int result;\n  undefined4 tempVar1;\n  int tempVar2;\n  byte byteVar;\n  undefined8 calcVar1;\n  undefined8 calcVar2;\n  \n  result = FUN_08000a2c(param3,param4,param3,param4);\n  if (result == 0) {\n    result = FUN_08000a2c(param3,param4 & 0x7fffffff,0xffffffff,0x7fefffff);\n    if ((result == 0) &&\n       (result = FUN_080009f0(param3,param4 & 0x7fffffff,0xffffffff,0x7fefffff), result == 0)) {\n      result = FUN_08005c96(param1,&DAT_08007860);\n    }\n    else {\n      result = FUN_08000a18(param3,param4,0xe0000000,0x41efffff);\n      if (result == 0) {\n        result = FUN_080009dc(param3,param4,0xe0000000,0xc1efffff);\n        if (result == 0) {\n          result = FUN_080009dc(param3,param4,0,0);\n          if (result == 0) {\n            result = 0;\n          }\n          else {\n            result = FUN_08005cb6(param1,0x2d);\n            param4 = param4 + 0x80000000;\n          }\n          calcVar1 = 0x3fe0000000000000;\n          for (byteVar = 0; tempVar1 = (undefined4)((ulonglong)calcVar1 >> 0x20), byteVar < param5;\n              byteVar = byteVar + 1) {\n            calcVar1 = FUN_0800074c((int)calcVar1,tempVar1,0,0x40240000);\n          }\n          calcVar1 = FUN_08000194(param3,param4,(int)calcVar1,tempVar1);\n          tempVar1 = FUN_08000aa8();\n          calcVar2 = FUN_0800040c();\n          calcVar1 = FUN_08000190((int)calcVar1,(int)((ulonglong)calcVar1 >> 0x20),(int)calcVar2,\n                               (int)((ulonglong)calcVar2 >> 0x20));\n          tempVar2 = FUN_08005d8a(param1,tempVar1,10);\n          result = result + tempVar2;\n          if (param5 != 0) {\n            tempVar2 = FUN_08005c96(param1,&DAT_08007868);\n            result = result + tempVar2;\n          }\n          while (param5 != 0) {\n            calcVar1 = FUN_080004f8((int)calcVar1,(int)((ulonglong)calcVar1 >> 0x20),0,0x40240000);\n            tempVar1 = FUN_08000a58();\n            tempVar2 = FUN_08005d82(param1,tempVar1,10);\n            result = result + tempVar2;\n            calcVar2 = FUN_0800042c(tempVar1);\n            calcVar1 = FUN_08000190((int)calcVar1,(int)((ulonglong)calcVar1 >> 0x20),(int)calcVar2,\n                                 (int)((ulonglong)calcVar2 >> 0x20));\n            param5 = param5 - 1;\n          }\n        }\n        else {\n          result = FUN_08005c96(param1,&DAT_08007864);\n        }\n      }\n      else {\n        result = FUN_08005c96(param1,&DAT_08007864);\n      }\n    }\n  }\n  else {\n    result = FUN_08005c96(param1,&DAT_0800785c);\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005da8": "perform_complex_calculation_08005da8",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "iVar1": "result",
                "uVar2": "tempVar1",
                "iVar3": "tempVar2",
                "bVar4": "byteVar",
                "uVar5": "calcVar1",
                "uVar6": "calcVar2"
            },
            "calling": [
                "FUN_08005f2c"
            ],
            "called": [
                "FUN_08000a18",
                "FUN_08000aa8",
                "FUN_0800040c",
                "FUN_08005c96",
                "FUN_0800042c",
                "FUN_0800074c",
                "FUN_08000190",
                "FUN_08000194",
                "FUN_080004f8",
                "FUN_080009f0",
                "FUN_080009dc",
                "FUN_08005cb6",
                "FUN_08000a58",
                "FUN_08005d82",
                "FUN_08000a2c",
                "FUN_08005d8a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f2c": {
            "entrypoint": "0x08005f2c",
            "current_name": "initialize_application_08005f2c",
            "code": "\nvoid initializeApplication_08005f2c(void)\n\n{\n  FUN_08005da8();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005f2c": "initialize_application_08005f2c"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08005f40"
            ],
            "called": [
                "FUN_08005da8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f40": {
            "entrypoint": "0x08005f40",
            "current_name": "calculate_sum_08005f40",
            "code": "\nint calculateSum_08005f40(undefined4 inputValue)\n\n{\n  int result1;\n  int result2;\n  \n  result1 = FUN_08005f2c();\n  result2 = FUN_08005cc0(inputValue);\n  return result2 + result1;\n}\n\n",
            "renaming": {
                "FUN_08005f40": "calculate_sum_08005f40",
                "param_1": "inputValue",
                "iVar1": "result1",
                "iVar2": "result2"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08005f2c",
                "FUN_08005cc0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f5c": {
            "entrypoint": "0x08005f5c",
            "current_name": "FUNC_08005f5c",
            "code": "\nvoid FUNC_08005f5c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005f5c": "FUNC_08005f5c"
            },
            "calling": [
                "FUN_08005f6c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005f5e": {
            "entrypoint": "0x08005f5e",
            "current_name": "initialize_application_08005f5e",
            "code": "\nvoid initializeApplication_08005f5e(void)\n\n{\n  FUN_08002470(3);\n  FUN_08001c32();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005f5e": "initialize_application_08005f5e"
            },
            "calling": [
                "FUN_08006198"
            ],
            "called": [
                "FUN_08001c32",
                "FUN_08002470"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f6c": {
            "entrypoint": "0x08005f6c",
            "current_name": "execute_continuous_tasks_08005f6c",
            "code": "\nvoid executeContinuousTasks_08005f6c(void)\n\n{\n  FUNC_08005f5c();\n  FUN_08000bcc();\n  do {\n    FUN_08000cd0();\n    FUNC_08005a18();\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08005f6c": "execute_continuous_tasks_08005f6c"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_08000cd0",
                "FUN_08000bcc",
                "FUN_08005f5c",
                "FUN_08005a18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f8c": {
            "entrypoint": "0x08005f8c",
            "current_name": "count_set_bits_08005f8c",
            "code": "\nchar countSetBits_08005f8c(uint inputNum)\n\n{\n  char bitCount;\n  \n  bitCount = '\\0';\n  for (; inputNum != 1; inputNum = inputNum >> 1) {\n    bitCount = bitCount + '\\x01';\n  }\n  return bitCount;\n}\n\n",
            "renaming": {
                "FUN_08005f8c": "count_set_bits_08005f8c",
                "param_1": "inputNum",
                "cVar1": "bitCount"
            },
            "calling": [
                "FUN_080060e4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005fc8": {
            "entrypoint": "0x08005fc8",
            "current_name": "initialize_configuration_08005fc8",
            "code": "\nvoid initialize_configuration_08005fc8(int config_flag,int param_flag,undefined4 new_param_3,undefined4 new_param_4)\n\n{\n  if (config_flag != 1) {\n    return;\n  }\n  if (param_flag == 0xffff) {\n    DAT_200004b8 = 6;\n    DAT_200004c4 = 0;\n    DAT_200004cc = 7;\n    DAT_200004d8 = 0;\n    DAT_200004e0 = 8;\n    DAT_200004ec = 0;\n    DAT_200004f4 = 9;\n    DAT_20000500 = 0;\n    DAT_20000508 = 10;\n    DAT_20000514 = 0;\n    DAT_2000051c = 0x17;\n    DAT_20000528 = 0;\n    DAT_20000530 = 0x17;\n    DAT_2000053c = 0;\n    DAT_20000544 = 0x17;\n    DAT_20000550 = 0;\n    DAT_20000558 = 0x17;\n    DAT_20000564 = 0;\n    DAT_2000056c = 0x17;\n    DAT_20000578 = 0;\n    DAT_20000580 = 0x28;\n    DAT_2000058c = 0;\n    DAT_20000594 = 0x28;\n    DAT_200005a0 = 0;\n    DAT_200005a8 = 0x28;\n    DAT_200005b4 = 0;\n    DAT_200005bc = 0x28;\n    DAT_200005c8 = 0;\n    DAT_200005d0 = 0x28;\n    DAT_200005dc = 0;\n    DAT_200005e4 = 0x28;\n    DAT_200005f0 = 0;\n    FUN_08006112(0,&LAB_08005fa0_1,&DAT_20000000,&DAT_200004b8,new_param_4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005fc8": "initialize_configuration_08005fc8",
                "param_1": "config_flag",
                "param_2": "param_flag",
                "param_3": "new_param_3",
                "param_4": "new_param_4"
            },
            "calling": [],
            "called": [
                "FUN_08006112"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080060d4": {
            "entrypoint": "0x080060d4",
            "current_name": "handle_param_080060d4",
            "code": "\nvoid handleParam_080060d4(int param)\n\n{\n  int index;\n  \n  if (*(int *)(param + 8) != 0) {\n    (**(code **)(param + 0xc))();\n    return;\n  }\n  FUN_08007090();\n  index = FUN_08005f8c();\n  if ((&DAT_200004c4)[index * 5] != 0) {\n    handleParam_080060d4();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080060d4": "handle_param_080060d4",
                "param_1": "param",
                "iVar1": "index"
            },
            "calling": [
                "FUN_080060e4"
            ],
            "called": [
                "FUN_08007090"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080060e4": {
            "entrypoint": "0x080060e4",
            "current_name": "check_and_call_function_080060e4",
            "code": "\nvoid checkAndCallFunction_080060e4(void)\n\n{\n  int result;\n  \n  result = FUN_08005f8c();\n  if ((&DAT_200004c4)[result * 5] != 0) {\n    FUN_080060d4();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080060e4": "check_and_call_function_080060e4",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800282c"
            ],
            "called": [
                "FUN_08005f8c",
                "FUN_080060d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006112": {
            "entrypoint": "0x08006112",
            "current_name": "initialize_variables_08006112",
            "code": "\nvoid initializeVariables_08006112(undefined4 destinationPtr,undefined4 sourcePtr)\n\n{\n  FUN_08006158(sourcePtr,destinationPtr);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006112": "initialize_variables_08006112",
                "param_1": "destinationPtr",
                "param_2": "sourcePtr"
            },
            "calling": [
                "FUN_08005fc8"
            ],
            "called": [
                "FUN_08006158"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800611c": {
            "entrypoint": "0x0800611c",
            "current_name": "assertion_failed_0800611c",
            "code": "\nvoid assertionFailed_0800611c(undefined4 file,undefined4 line,char *assertion,undefined4 function)\n\n{\n  undefined4 filePointer;\n  char *messagePart;\n  undefined8 result;\n  undefined4 functionPointer;\n  \n  filePointer = *(undefined4 *)(DAT_200000f8 + 0xc);\n  functionPointer = function;\n  if (assertion == (char *)0x0) goto LAB_08006140;\n  messagePart = \", function: \";\n  do {\n    FUN_08006174(filePointer,\"assertion \\\"%s\\\" failed: file \\\"%s\\\", line %d%s%s\\n\",function,file,line\n                 ,messagePart,assertion,functionPointer);\n    result = FUN_08006ac0();\n    line = (undefined4)((ulonglong)result >> 0x20);\n    filePointer = (undefined4)result;\nLAB_08006140:\n    assertion = \"\";\n    messagePart = assertion;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_0800611c": "assertion_failed_0800611c",
                "param_1": "file",
                "param_2": "line",
                "param_3": "assertion",
                "param_4": "function",
                "uVar1": "filePointer",
                "pcVar2": "messagePart",
                "uVar3": "result",
                "uVar4": "functionPointer"
            },
            "calling": [
                "FUN_08005a68"
            ],
            "called": [
                "FUN_08006174",
                "FUN_08006ac0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006158": {
            "entrypoint": "0x08006158",
            "current_name": "shift_left_by32_08006158",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08006160) */\n\nlonglong shiftLeftBy32_08006158(undefined4 arg1,uint value)\n\n{\n  return (unsignedLongLong)value << 0x20;\n}\n\n",
            "renaming": {
                "FUN_08006158": "shift_left_by32_08006158",
                "param_1": "arg1",
                "param_2": "value",
                "ulonglong": "unsignedLongLong"
            },
            "calling": [
                "FUN_08006112"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006174": {
            "entrypoint": "0x08006174",
            "current_name": "initialize_stack_variables_08006174",
            "code": "\nvoid initializeStackVariables_08006174(undefined4 functionParam1,undefined4 functionParam2,undefined4 stackVar1,undefined4 stackVar2)\n\n{\n  undefined4 stackVar3;\n  undefined4 stackVar4;\n  \n  stackVar3 = stackVar1;\n  stackVar4 = stackVar2;\n  FUN_08006394(DAT_200000f8,functionParam1,functionParam2,&stackVar3,functionParam1,&stackVar3);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006174": "initialize_stack_variables_08006174",
                "param_1": "functionParam1",
                "param_2": "functionParam2",
                "param_3": "stackVar1",
                "param_4": "stackVar2",
                "uStack_8": "stackVar3",
                "uStack_4": "stackVar4"
            },
            "calling": [
                "FUN_0800611c"
            ],
            "called": [
                "FUN_08006394"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006198": {
            "entrypoint": "0x08006198",
            "current_name": "execute_func_array_08006198",
            "code": "\nvoid executeFuncArray_08006198(void)\n\n{\n  int index;\n  \n  for (index = 0; index != 0; index = index + 1) {\n    (*(function_pointer *)(&DAT_08007944)[index])();\n  }\n  FUNC_08007328();\n  for (index = 0; index != 10; index = index + 1) {\n    (*(function_pointer *)(&DAT_08007944)[index])();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006198": "execute_func_array_08006198",
                "iVar1": "index",
                "code": "function_pointer"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_08005f5e",
                "FUN_08007328"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080061e0": {
            "entrypoint": "0x080061e0",
            "current_name": "initialize_memory_block_080061e0",
            "code": "\nvoid initializeMemoryBlock_080061e0(undefined *memoryBlock,undefined value,int size)\n\n{\n  undefined *endMemoryBlock;\n  \n  endMemoryBlock = memoryBlock + size;\n  for (; memoryBlock != endMemoryBlock; memoryBlock = memoryBlock + 1) {\n    *memoryBlock = value;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080061e0": "initialize_memory_block_080061e0",
                "param_1": "memoryBlock",
                "param_2": "value",
                "param_3": "size",
                "puVar1": "endMemoryBlock"
            },
            "calling": [
                "FUN_08006c40",
                "FUN_08006c88",
                "FUN_08004a4c",
                "FUN_08006d14"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080061f0": {
            "entrypoint": "0x080061f0",
            "current_name": "process_input_080061f0",
            "code": "\nvoid processInput_080061f0(undefined4 *output,int inputLength,undefined4 param3,undefined4 param4)\n\n{\n  int **temp1;\n  int **temp2;\n  int **temp3;\n  int *temp4;\n  int **temp5;\n  int **temp6;\n  \n  if (inputLength == 0) {\n    return;\n  }\n  temp6 = (int **)(inputLength + -4);\n  if (*(int *)(inputLength + -4) < 0) {\n    temp6 = (int **)((int)temp6 + *(int *)(inputLength + -4));\n  }\n  FUNC_08006eac();\n  temp3 = (int **)&DAT_200005f8;\n  if (DAT_200005f8 == (int **)0x0) {\n    temp6[1] = (int *)0x0;\n    temp2 = temp1;\n    DAT_200005f8 = temp6;\n  }\n  else {\n    temp3 = DAT_200005f8;\n    if (temp6 < DAT_200005f8) {\n      temp2 = (int **)*temp6;\n      temp3 = (int **)((int)temp6 + (int)temp2);\n      if (DAT_200005f8 == temp3) {\n        temp4 = *DAT_200005f8;\n        DAT_200005f8 = (int **)DAT_200005f8[1];\n        temp3 = (int **)((int)temp4 + (int)temp2);\n        *temp6 = (int *)temp3;\n      }\n      temp6[1] = (int *)DAT_200005f8;\n      DAT_200005f8 = temp6;\n    }\n    else {\n      do {\n        temp5 = temp3;\n        temp3 = (int **)temp5[1];\n        if (temp3 == (int **)0x0) break;\n      } while (temp3 <= temp6);\n      temp2 = (int **)*temp5;\n      if ((int **)((int)temp5 + (int)temp2) == temp6) {\n        temp2 = (int **)((int)temp2 + (int)*temp6);\n        *temp5 = (int *)temp2;\n        if (temp3 == (int **)((int)temp5 + (int)temp2)) {\n          temp4 = *temp3;\n          temp3 = (int **)temp3[1];\n          temp2 = (int **)((int)temp2 + (int)temp4);\n          *temp5 = (int *)temp2;\n          temp5[1] = (int *)temp3;\n        }\n      }\n      else if (temp6 < (int **)((int)temp5 + (int)temp2)) {\n        *output = 0xc;\n      }\n      else {\n        temp2 = (int **)((int)temp6 + (int)*temp6);\n        if (temp3 == temp2) {\n          temp4 = *temp3;\n          temp3 = (int **)temp3[1];\n          temp2 = (int **)((int)temp4 + (int)*temp6);\n          *temp6 = (int *)temp2;\n        }\n        temp6[1] = (int *)temp3;\n        temp5[1] = (int *)temp6;\n      }\n    }\n  }\n  FUNC_08006eae(output,temp2,temp3,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080061f0": "process_input_080061f0",
                "param_1": "output",
                "param_2": "inputLength",
                "param_3": "param3",
                "param_4": "param4",
                "extraout_r1": "temp1",
                "ppiVar1": "temp2",
                "ppiVar2": "temp3",
                "piVar3": "temp4",
                "ppiVar4": "temp5",
                "ppiVar5": "temp6"
            },
            "calling": [
                "FUN_080069e4",
                "FUN_08006ac0"
            ],
            "called": [
                "FUN_08006eac",
                "FUN_08006eae"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006288": {
            "entrypoint": "0x08006288",
            "current_name": "allocate_memory_block_08006288",
            "code": "\nuint allocate_memory_block_08006288(undefined4 *result_ptr,uint size)\n\n{\n  uint *current_block;\n  int difference;\n  uint *previous_block;\n  uint offset;\n  uint *last_block;\n  uint new_size;\n  \n  new_size = (size + 3 & 0xfffffffc) + 8;\n  if (new_size < 0xc) {\n    new_size = 0xc;\n  }\n  if (((int)new_size < 0) || (new_size < size)) {\n    *result_ptr = 0xc;\n  }\n  else {\n    FUNC_08006eac();\n    current_block = DAT_200005f8;\n    last_block = DAT_200005f8;\n    while (previous_block = current_block, previous_block != (uint *)0x0) {\n      offset = *previous_block - new_size;\n      if (-1 < (int)offset) {\n        if (offset < 0xc) {\n          if (last_block == previous_block) {\n            current_block = (uint *)last_block[1];\n            DAT_200005f8 = current_block;\n          }\n          else {\n            current_block = (uint *)previous_block[1];\n          }\n          if (last_block != previous_block) {\n            last_block[1] = (uint)current_block;\n            last_block = previous_block;\n          }\n        }\n        else {\n          *previous_block = offset;\n          *(uint *)((int)previous_block + offset) = new_size;\n          last_block = (uint *)((int)previous_block + offset);\n        }\n        goto LAB_080062ec;\n      }\n      last_block = previous_block;\n      current_block = (uint *)previous_block[1];\n    }\n    if (DAT_200005fc == 0) {\n      DAT_200005fc = FUN_08006920(result_ptr);\n    }\n    current_block = (uint *)FUN_08006920(result_ptr,new_size);\n    if ((current_block != (uint *)0xffffffff) &&\n       ((last_block = (uint *)((int)current_block + 3U & 0xfffffffc), current_block == last_block ||\n        (difference = FUN_08006920(result_ptr,(int)last_block - (int)current_block), difference != -1)))) {\n      *last_block = new_size;\nLAB_080062ec:\n      FUNC_08006eae(result_ptr);\n      new_size = (int)last_block + 0xbU & 0xfffffff8;\n      difference = new_size - (int)(last_block + 1);\n      if (difference != 0) {\n        *(int *)((int)last_block + difference) = -difference;\n        return new_size;\n      }\n      return new_size;\n    }\n    *result_ptr = 0xc;\n    FUNC_08006eae(result_ptr);\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006288": "allocate_memory_block_08006288",
                "param_1": "result_ptr",
                "param_2": "size",
                "puVar1": "current_block",
                "iVar2": "difference",
                "puVar3": "previous_block",
                "uVar4": "offset",
                "puVar5": "last_block",
                "uVar6": "new_size"
            },
            "calling": [
                "FUN_08006e10",
                "FUN_08006c88"
            ],
            "called": [
                "FUN_08006920",
                "FUN_08006eac",
                "FUN_08006eae"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006344": {
            "entrypoint": "0x08006344",
            "current_name": "process_input_08006344",
            "code": "\nuint processInput_08006344(int inputData,byte byteData,byte **byteArray)\n\n{\n  int tempVar1;\n  byte *tempVar2;\n  byte *tempVar3;\n  uint result;\n  \n  tempVar2 = byteArray[2] + -1;\n  byteArray[2] = tempVar2;\n  if ((-1 < (int)tempVar2) ||\n     (((int)byteArray[6] <= (int)tempVar2 && (tempVar2 = (byte *)(uint)byteData, tempVar2 != (byte *)0xa))))\n  {\n    tempVar2 = *byteArray;\n    *byteArray = tempVar2 + 1;\n    *tempVar2 = byteData;\n    return (uint)byteData;\n  }\n  if ((inputData != 0) && (*(int *)(inputData + 0x18) == 0)) {\n    FUN_08006cb4();\n  }\n  if (byteArray == (byte **)&DAT_08007904) {\n    byteArray = *(byte ***)(inputData + 4);\n  }\n  else if (byteArray == (byte **)&DAT_08007924) {\n    byteArray = *(byte ***)(inputData + 8);\n  }\n  else if (byteArray == (byte **)&DAT_080078e4) {\n    byteArray = *(byte ***)(inputData + 0xc);\n  }\n  byteArray[2] = byteArray[6];\n  tempVar3 = (byte *)(uint)*(ushort *)(byteArray + 3);\n  tempVar1 = (int)tempVar3 << 0x1c;\n  if (((tempVar1 < 0) && (tempVar3 = byteArray[4], tempVar3 != (byte *)0x0)) ||\n     (tempVar1 = FUN_080069e4(inputData,byteArray,tempVar1,tempVar3,tempVar2), tempVar1 == 0)) {\n    result = (uint)byteData;\n    tempVar1 = (int)*byteArray - (int)byteArray[4];\n    if ((tempVar1 < (int)byteArray[5]) || (tempVar1 = FUN_08006be0(inputData,byteArray), tempVar1 == 0)) {\n      byteArray[2] = byteArray[2] + -1;\n      tempVar2 = *byteArray;\n      *byteArray = tempVar2 + 1;\n      *tempVar2 = byteData;\n      if ((byte *)(tempVar1 + 1) != byteArray[5]) {\n        if (-1 < (int)((uint)*(ushort *)(byteArray + 3) << 0x1f)) {\n          return result;\n        }\n        if (result != 10) {\n          return result;\n        }\n      }\n      tempVar1 = FUN_08006be0(inputData,byteArray);\n      if (tempVar1 == 0) {\n        return result;\n      }\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08006344": "process_input_08006344",
                "param_1": "inputData",
                "param_2": "byteData",
                "param_3": "byteArray",
                "iVar1": "tempVar1",
                "pbVar2": "tempVar2",
                "pbVar3": "tempVar3",
                "uVar4": "result"
            },
            "calling": [
                "FUN_08006370"
            ],
            "called": [
                "FUN_08006be0",
                "FUN_08006cb4",
                "FUN_080069e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006370": {
            "entrypoint": "0x08006370",
            "current_name": "process_data_08006370",
            "code": "\nint process_data_08006370(undefined4 input_1,undefined4 input_2,undefined *data_array,int array_length)\n\n{\n  int result;\n  undefined *end_ptr;\n  int current_idx;\n  \n  end_ptr = data_array + array_length;\n  current_idx = array_length;\n  do {\n    if (data_array == end_ptr) {\n      return 0;\n    }\n    result = FUN_08006344(input_1,*data_array,input_2,array_length,current_idx);\n    array_length = result + 1;\n    data_array = data_array + 1;\n  } while (array_length != 0);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08006370": "process_data_08006370",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "data_array",
                "param_4": "array_length",
                "iVar1": "result",
                "puVar2": "end_ptr",
                "iVar3": "current_idx"
            },
            "calling": [
                "FUN_08006394"
            ],
            "called": [
                "FUN_08006344"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006394": {
            "entrypoint": "0x08006394",
            "current_name": "parse_format_string_08006394",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08006568) */\n\nint parseFormatString_08006394(int formatString,undefined4 *formatArgs,byte *outputBuffer,int *outputLen)\n\n{\n  int result;\n  int *tempPtr;\n  bool isNumber;\n  byte *currentChar;\n  byte *nextChar;\n  int tempVar;\n  int tempVar2;\n  int *argCounter;\n  uint formatFlags;\n  int width;\n  undefined4 precision;\n  int argWidth;\n  int totalSize;\n  byte conversionSpecifier;\n  undefined spaceFlag;\n  undefined plusFlag;\n  undefined altFormFlag;\n  undefined4 zeroPadFlag;\n  \n  argCounter = outputLen;\n  if ((formatString != 0) && (*(int *)(formatString + 0x18) == 0)) {\n    FUN_08006cb4();\n  }\n  if (formatArgs == &DAT_08007904) {\n    formatArgs = *(undefined4 **)(formatString + 4);\n  }\n  else if (formatArgs == (undefined4 *)&DAT_08007924) {\n    formatArgs = *(undefined4 **)(formatString + 8);\n  }\n  else if (formatArgs == (undefined4 *)&DAT_080078e4) {\n    formatArgs = *(undefined4 **)(formatString + 0xc);\n  }\n  if (((-1 < (int)((uint)*(ushort *)(formatArgs + 3) << 0x1c)) || (formatArgs[4] == 0)) &&\n     (tempVar2 = FUN_080069e4(formatString,formatArgs), tempVar2 != 0)) {\n    return -1;\n  }\n  totalSize = 0;\n  spaceFlag = 0x20;\n  plusFlag = 0x30;\n  currentChar = outputBuffer;\nLAB_080063d6:\n  nextChar = currentChar;\n  if (*nextChar != 0) goto LAB_0800648c;\n  goto LAB_080063e0;\nLAB_0800648c:\n  currentChar = nextChar + 1;\n  if (*nextChar != 0x25) goto LAB_080063d6;\nLAB_080063e0:\n  tempVar2 = (int)nextChar - (int)outputBuffer;\n  if (tempVar2 != 0) {\n    result = FUN_08006370(formatString,formatArgs,outputBuffer,tempVar2);\n    if (result == -1) {\nLAB_08006580:\n      if ((int)((uint)*(ushort *)(formatArgs + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return totalSize;\n    }\n    totalSize = totalSize + tempVar2;\n  }\n  if (*nextChar == 0) goto LAB_08006580;\n  formatFlags = 0;\n  argWidth = 0;\n  width = -1;\n  precision = 0;\n  altFormFlag = 0;\n  zeroPadFlag = 0;\n  currentChar = nextChar + 1;\n  while( true ) {\n    tempVar2 = FUN_08006e90(\"#-0+ \",*currentChar);\n    outputBuffer = currentChar + 1;\n    if (tempVar2 == 0) break;\n    formatFlags = 1 << (tempVar2 + 0xf7ff8750U & 0xff) | formatFlags;\n    currentChar = outputBuffer;\n  }\n  if ((int)(formatFlags << 0x1b) < 0) {\n    altFormFlag = 0x20;\n  }\n  if ((int)(formatFlags << 0x1c) < 0) {\n    altFormFlag = 0x2b;\n  }\n  if (*currentChar == 0x2a) {\n    tempPtr = argCounter + 1;\n    tempVar2 = *argCounter;\n    argCounter = tempPtr;\n    if (tempVar2 < 0) {\n      argWidth = -tempVar2;\n      formatFlags = formatFlags | 2;\n      goto LAB_080064be;\n    }\n  }\n  else {\n    isNumber = false;\n    tempVar2 = argWidth;\n    outputBuffer = currentChar;\n    while( true ) {\n      if (9 < *outputBuffer - 0x30) break;\n      tempVar2 = tempVar2 * 10 + (*outputBuffer - 0x30);\n      isNumber = true;\n      outputBuffer = outputBuffer + 1;\n    }\n    if (!isNumber) goto LAB_080064be;\n  }\n  argWidth = tempVar2;\nLAB_080064be:\n  if (*outputBuffer == 0x2e) {\n    if (outputBuffer[1] == 0x2a) {\n      outputBuffer = outputBuffer + 2;\n      tempPtr = argCounter + 1;\n      width = *argCounter;\n      argCounter = tempPtr;\n      if (width < 0) {\n        width = -1;\n      }\n    }\n    else {\n      isNumber = false;\n      tempVar2 = 0;\n      width = 0;\n      while( true ) {\n        outputBuffer = outputBuffer + 1;\n        if (9 < *outputBuffer - 0x30) break;\n        tempVar2 = tempVar2 * 10 + (*outputBuffer - 0x30);\n        isNumber = true;\n      }\n      if (isNumber) {\n        width = tempVar2;\n      }\n    }\n  }\n  tempVar2 = FUN_08006e90(&DAT_080078b6,*outputBuffer,3);\n  if (tempVar2 != 0) {\n    outputBuffer = outputBuffer + 1;\n    formatFlags = formatFlags | 0x40 << (tempVar2 + 0xf7ff874aU & 0xff);\n  }\n  conversionSpecifier = *outputBuffer;\n  outputBuffer = outputBuffer + 1;\n  tempVar2 = FUN_08006e90(\"efgEFG\",conversionSpecifier,6);\n  if (tempVar2 == 0) {\n    tempVar = FUN_080066b0(formatString,&formatFlags,formatArgs,0x8006371,&argCounter);\n    if (tempVar == -1) goto LAB_08006580;\n  }\n  else {\n    argCounter = (int *)(((int)argCounter + 7U & 0xfffffff8) + 8);\n  }\n  totalSize = totalSize + tempVar;\n  currentChar = outputBuffer;\n  goto LAB_080063d6;\n}\n\n",
            "renaming": {
                "FUN_08006394": "parse_format_string_08006394",
                "param_1": "formatString",
                "param_2": "formatArgs",
                "param_3": "outputBuffer",
                "param_4": "outputLen",
                "iVar1": "result",
                "piVar2": "tempPtr",
                "bVar3": "isNumber",
                "pbVar4": "currentChar",
                "pbVar5": "nextChar",
                "unaff_r9": "tempVar",
                "iVar6": "tempVar2",
                "local_8c": "argCounter",
                "local_88": "formatFlags",
                "local_84": "width",
                "local_80": "precision",
                "local_7c": "argWidth",
                "local_74": "totalSize",
                "local_70": "conversionSpecifier",
                "local_6f": "spaceFlag",
                "local_6e": "plusFlag",
                "local_45": "altFormFlag",
                "local_30": "zeroPadFlag"
            },
            "calling": [
                "FUN_08006174",
                "FUN_080068f0"
            ],
            "called": [
                "FUN_080066b0",
                "FUN_08006cb4",
                "FUN_08006e90",
                "FUN_080069e4",
                "FUN_08006370"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080065c0": {
            "entrypoint": "0x080065c0",
            "current_name": "process_data_080065c0",
            "code": "\nundefined4\nprocessData_080065c0(undefined4 input,uint *parameters,uint *output,undefined4 extraParam,code *callback)\n\n{\n  int counter1;\n  int result;\n  uint maxValue;\n  uint value;\n  bool isNonZero;\n  \n  maxValue = parameters[4];\n  if ((int)parameters[4] < (int)parameters[2]) {\n    maxValue = parameters[2];\n  }\n  *output = maxValue;\n  if (*(char *)((int)parameters + 0x43) != '\\0') {\n    *output = maxValue + 1;\n  }\n  if ((int)(*parameters << 0x1a) < 0) {\n    *output = *output + 2;\n  }\n  if ((*parameters & 6) == 0) {\n    for (counter1 = 0; counter1 < (int)(parameters[3] - *output); counter1 = counter1 + 1) {\n      result = (*callback)(input,extraParam,(int)parameters + 0x19,1);\n      if (result == -1) {\n        return 0xffffffff;\n      }\n    }\n  }\n  maxValue = (uint)*(byte *)((int)parameters + 0x43);\n  if (maxValue != 0) {\n    maxValue = 1;\n  }\n  value = maxValue;\n  if ((int)(*parameters << 0x1a) < 0) {\n    *(undefined *)((int)parameters + maxValue + 0x43) = 0x30;\n    value = maxValue + 2;\n    *(undefined *)((int)parameters + maxValue + 0x44) = *(undefined *)((int)parameters + 0x45);\n  }\n  counter1 = (*callback)(input,extraParam,(int)parameters + 0x43,value);\n  if (counter1 != -1) {\n    maxValue = parameters[3];\n    isNonZero = (*parameters & 6) != 4;\n    if (isNonZero) {\n      maxValue = 0;\n    }\n    value = 0;\n    if (!isNonZero) {\n      maxValue = maxValue - *output;\n    }\n    if (!isNonZero) {\n      maxValue = maxValue & ~((int)maxValue >> 0x1f);\n    }\n    if ((int)parameters[4] < (int)parameters[2]) {\n      maxValue = maxValue + (parameters[2] - parameters[4]);\n    }\n    while( true ) {\n      if (maxValue == value) {\n        return 0;\n      }\n      counter1 = (*callback)(input,extraParam,(int)parameters + 0x1a,1);\n      if (counter1 == -1) break;\n      value = value + 1;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080065c0": "process_data_080065c0",
                "param_1": "input",
                "param_2": "parameters",
                "param_3": "output",
                "param_4": "extraParam",
                "param_5": "callback",
                "iVar1": "counter1",
                "iVar2": "result",
                "uVar3": "maxValue",
                "uVar4": "value",
                "bVar5": "isNonZero"
            },
            "calling": [
                "FUN_080066b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080066b0": {
            "entrypoint": "0x080066b0",
            "current_name": "convert_and_write_data_080066b0",
            "code": "\nuint convertAndWriteData_080066b0(undefined4 input,uint *data,undefined4 size,code *callback,uint **output)\n\n{\n  byte byteValue;\n  int index;\n  uint *ptr;\n  int status;\n  char *hexDigits;\n  uint value;\n  uint **ppuVar7;\n  char **ppcVar8;\n  uint absValue;\n  uint oldSize;\n  char *dst;\n  char *src;\n  uint buffer [2];\n  \n  byteValue = *(byte *)(data + 6);\n  src = (char *)((int)data + 0x43);\n  if (byteValue != 0x6e) {\n    if (byteValue < 0x6f) {\n      if (byteValue != 99) {\n        if (byteValue < 100) {\n          if (byteValue == 0) goto LAB_0800686a;\n          if (byteValue != 0x58) goto LAB_080066e0;\n          *(undefined *)((int)data + 0x45) = 0x58;\n          hexDigits = \"0123456789ABCDEF\";\nLAB_080067fa:\n          value = *data;\n          ptr = *output;\n          *output = ptr + 1;\n          if (((value & 0x80) == 0) && ((int)(value << 0x19) < 0)) {\n            absValue = (uint)*(ushort *)ptr;\n          }\n          else {\n            absValue = *ptr;\n          }\n          if ((int)(value << 0x1f) < 0) {\n            *data = value | 0x20;\n          }\n          if (absValue == 0) {\n            *data = *data & 0xffffffdf;\n          }\n          value = 0x10;\nLAB_08006790:\n          *(undefined *)((int)data + 0x43) = 0;\n        }\n        else {\n          if ((byteValue != 100) && (byteValue != 0x69)) goto LAB_080066e0;\n          absValue = *data;\n          ptr = *output;\n          if ((absValue & 0x80) == 0) {\n            *output = ptr + 1;\n            if ((absValue & 0x40) == 0) goto LAB_08006700;\n            absValue = (uint)(short)*(ushort *)ptr;\n          }\n          else {\n            *output = ptr + 1;\nLAB_08006700:\n            absValue = *ptr;\n          }\n          if ((int)absValue < 0) {\n            absValue = -absValue;\n            *(undefined *)((int)data + 0x43) = 0x2d;\n          }\n          hexDigits = \"0123456789ABCDEF\";\n          value = 10;\n        }\n        oldSize = data[1];\n        data[2] = oldSize;\n        dst = src;\n        if ((int)oldSize < 0) {\n          if (absValue != 0) goto LAB_0800682e;\nLAB_080068dc:\n          *(char *)((int)data + 0x42) = *hexDigits;\n          dst = (char *)((int)data + 0x42);\n        }\n        else {\n          *data = *data & 0xfffffffb;\n          if (absValue == 0) {\n            if (oldSize != 0) goto LAB_080068dc;\n          }\n          else {\nLAB_0800682e:\n            do {\n              oldSize = absValue / value;\n              dst = dst + -1;\n              *dst = hexDigits[absValue - value * oldSize];\n              absValue = oldSize;\n            } while (oldSize != 0);\n          }\n        }\n        if (((value == 8) && ((int)(*data << 0x1f) < 0)) && ((int)data[1] <= (int)data[4]))\n        {\n          dst[-1] = '0';\n          dst = dst + -1;\n        }\n        data[4] = (int)src - (int)dst;\n        src = dst;\n        goto LAB_080067d6;\n      }\n      ptr = *output;\n      *output = ptr + 1;\n      *(char *)((int)data + 0x42) = (char)*ptr;\nLAB_08006740:\n      src = (char *)((int)data + 0x42);\n      absValue = 1;\n    }\n    else {\n      if (byteValue != 0x73) {\n        if (byteValue < 0x74) {\n          if (byteValue == 0x6f) {\nLAB_08006766:\n            absValue = *data;\n            ptr = *output;\n            if ((absValue & 0x80) == 0) {\n              *output = ptr + 1;\n              if ((absValue & 0x40) == 0) goto LAB_08006774;\n              absValue = (uint)*(ushort *)ptr;\n            }\n            else {\n              *output = ptr + 1;\nLAB_08006774:\n              absValue = *ptr;\n            }\n            if (byteValue == 0x6f) {\n              value = 8;\n            }\n            else {\n              value = 10;\n            }\n            hexDigits = \"0123456789ABCDEF\";\n            goto LAB_08006790;\n          }\n          if (byteValue == 0x70) {\n            *data = *data | 0x20;\nLAB_08006726:\n            hexDigits = \"0123456789abcdef\";\n            *(undefined *)((int)data + 0x45) = 0x78;\n            goto LAB_080067fa;\n          }\n        }\n        else {\n          if (byteValue == 0x75) goto LAB_08006766;\n          if (byteValue == 0x78) goto LAB_08006726;\n        }\nLAB_080066e0:\n        *(byte *)((int)data + 0x42) = byteValue;\n        goto LAB_08006740;\n      }\n      ppcVar8 = (char **)*output;\n      *output = (uint *)(ppcVar8 + 1);\n      src = *ppcVar8;\n      index = FUN_08006e90(src,0,data[1]);\n      if (index != 0) {\n        data[1] = index - (int)src;\n      }\n      absValue = data[1];\n    }\n    data[4] = absValue;\n    *(undefined *)((int)data + 0x43) = 0;\n    goto LAB_080067d6;\n  }\n  absValue = *data;\n  ppuVar7 = (uint **)*output;\n  value = data[5];\n  if ((absValue & 0x80) == 0) {\n    *output = (uint *)(ppuVar7 + 1);\n    ptr = *ppuVar7;\n    if ((absValue & 0x40) == 0) goto LAB_08006856;\n    *(short *)ptr = (short)value;\n  }\n  else {\n    *output = (uint *)(ppuVar7 + 1);\n    ptr = *ppuVar7;\nLAB_08006856:\n    *ptr = value;\n  }\nLAB_0800686a:\n  data[4] = 0;\nLAB_080067d6:\n  index = FUN_080065c0(input,data,buffer,size,callback);\n  if ((index == -1) || (index = (*callback)(input,size,src,data[4]), index == -1)) {\nLAB_080067ea:\n    absValue = 0xffffffff;\n  }\n  else {\n    if ((int)(*data << 0x1e) < 0) {\n      for (index = 0; index < (int)(data[3] - buffer[0]); index = index + 1) {\n        status = (*callback)(input,size,(int)data + 0x19,1);\n        if (status == -1) goto LAB_080067ea;\n      }\n    }\n    absValue = data[3];\n    if ((int)data[3] < (int)buffer[0]) {\n      absValue = buffer[0];\n    }\n  }\n  return absValue;\n}\n\n",
            "renaming": {
                "FUN_080066b0": "convert_and_write_data_080066b0",
                "param_1": "input",
                "param_2": "data",
                "param_3": "size",
                "param_4": "callback",
                "param_5": "output",
                "bVar1": "byteValue",
                "iVar2": "index",
                "puVar3": "ptr",
                "iVar4": "status",
                "pcVar5": "hexDigits",
                "uVar6": "value",
                "uVar9": "absValue",
                "uVar10": "oldSize",
                "pcVar11": "dst",
                "pcVar12": "src",
                "local_24": "buffer"
            },
            "calling": [
                "FUN_08006394"
            ],
            "called": [
                "FUN_080065c0",
                "FUN_08006e90"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080068f0": {
            "entrypoint": "0x080068f0",
            "current_name": "initialize_function_080068f0",
            "code": "\nvoid initializeFunction_080068f0(undefined4 firstParam,undefined4 secondParam,undefined4 thirdParam,undefined4 fourthParam)\n\n{\n  int data;\n  undefined4 paramCopy;\n  undefined4 param2Copy;\n  undefined4 param3Copy;\n  undefined4 param4Copy;\n  \n  data = DAT_200000f8;\n  paramCopy = firstParam;\n  param2Copy = secondParam;\n  param3Copy = thirdParam;\n  param4Copy = fourthParam;\n  if ((DAT_200000f8 != 0) && (*(int *)(DAT_200000f8 + 0x18) == 0)) {\n    FUN_08006cb4(DAT_200000f8);\n  }\n  FUN_08006394(data,*(undefined4 *)(data + 8),firstParam,&param2Copy,paramCopy,&param2Copy);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080068f0": "initialize_function_080068f0",
                "param_1": "firstParam",
                "param_2": "secondParam",
                "param_3": "thirdParam",
                "param_4": "fourthParam",
                "iVar1": "data",
                "uVar2": "paramCopy",
                "uStack_c": "param2Copy",
                "uStack_8": "param3Copy",
                "uStack_4": "param4Copy"
            },
            "calling": [
                "FUN_08004f4c"
            ],
            "called": [
                "FUN_08006cb4",
                "FUN_08006394"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006920": {
            "entrypoint": "0x08006920",
            "current_name": "check_return_value_and_update_08006920",
            "code": "\nvoid checkReturnValueAndUpdate_08006920(int *output,undefined4 input)\n\n{\n  int result;\n  \n  DAT_200006a4 = 0;\n  result = FUN_080056d8(input);\n  if ((result == -1) && (DAT_200006a4 != 0)) {\n    *output = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006920": "check_return_value_and_update_08006920",
                "param_1": "output",
                "param_2": "input",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08006288"
            ],
            "called": [
                "FUN_080056d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080069e4": {
            "entrypoint": "0x080069e4",
            "current_name": "check_and_update_param_080069e4",
            "code": "\nuint checkAndUpdateParam_080069e4(undefined4 *output_param,undefined4 *input_param)\n\n{\n  int data;\n  uint result;\n  ushort flags;\n  \n  data = DAT_200000f8;\n  if ((DAT_200000f8 != 0) && (*(int *)(DAT_200000f8 + 0x18) == 0)) {\n    FUN_08006cb4(DAT_200000f8);\n  }\n  if (input_param == &DAT_08007904) {\n    input_param = *(undefined4 **)(data + 4);\n  }\n  else if (input_param == (undefined4 *)&DAT_08007924) {\n    input_param = *(undefined4 **)(data + 8);\n  }\n  else if (input_param == (undefined4 *)&DAT_080078e4) {\n    input_param = *(undefined4 **)(data + 0xc);\n  }\n  flags = *(ushort *)(input_param + 3);\n  result = (uint)flags;\n  if (-1 < (int)(result << 0x1c)) {\n    if (-1 < (int)(result << 0x1b)) {\n      *output_param = 9;\n      goto LAB_08006a14;\n    }\n    if ((int)(result << 0x1d) < 0) {\n      if ((undefined4 *)input_param[0xd] != (undefined4 *)0x0) {\n        if ((undefined4 *)input_param[0xd] != input_param + 0x11) {\n          FUN_080061f0(output_param);\n        }\n        input_param[0xd] = 0;\n      }\n      *(ushort *)(input_param + 3) = *(ushort *)(input_param + 3) & 0xffdb;\n      input_param[1] = 0;\n      *input_param = input_param[4];\n    }\n    *(ushort *)(input_param + 3) = *(ushort *)(input_param + 3) | 8;\n  }\n  if ((input_param[4] == 0) && ((*(ushort *)(input_param + 3) & 0x280) != 0x200)) {\n    FUN_08006e10(output_param,input_param);\n  }\n  flags = *(ushort *)(input_param + 3);\n  result = flags & 1;\n  if ((flags & 1) == 0) {\n    if (-1 < (int)((uint)flags << 0x1e)) {\n      result = input_param[5];\n    }\n    input_param[2] = result;\n  }\n  else {\n    input_param[2] = 0;\n    input_param[6] = -input_param[5];\n  }\n  if (input_param[4] == 0) {\n    flags = *(ushort *)(input_param + 3);\n    result = (int)(short)flags & 0x80;\n    if (result != 0) {\nLAB_08006a14:\n      *(ushort *)(input_param + 3) = flags | 0x40;\n      return 0xffffffff;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080069e4": "check_and_update_param_080069e4",
                "param_1": "output_param",
                "param_2": "input_param",
                "iVar1": "data",
                "uVar2": "result",
                "uVar3": "flags"
            },
            "calling": [
                "FUN_08006344",
                "FUN_08006394"
            ],
            "called": [
                "FUN_08006e10",
                "FUN_08006cb4",
                "FUN_080061f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ac0": {
            "entrypoint": "0x08006ac0",
            "current_name": "execute_main_function_08006ac0",
            "code": "\nvoid executeMainFunction_08006ac0(void)\n\n{\n  uint *pointerToUint;\n  int variable1;\n  int *pointerToIntArray;\n  int *piVar4;\n  uint uintValue;\n  ushort ushortValue;\n  int variable2;\n  code *functionPtr;\n  int variable3;\n  uint uintValue2;\n  code *jumpTable;\n  bool boolValue;\n  undefined8 undefinedValue;\n  \n  FUN_08006f00(6);\n  jumpTable = (code *)0x8006acf;\n  undefinedValue = FUN_0800573c(1);\n  pointerToIntArray = (int *)((ulonglong)undefinedValue >> 0x20);\n  pointerToUint = (uint *)undefinedValue;\n  ushortValue = *(ushort *)(pointerToIntArray + 3);\n  uintValue = (uint)ushortValue;\n  if ((int)(uintValue << 0x1c) < 0) {\n    variable1 = pointerToIntArray[4];\n    if (variable1 != 0) {\n      variable2 = uintValue << 0x1e;\n      boolValue = variable2 != 0;\n      if (boolValue) {\n        variable2 = 0;\n      }\n      variable3 = *pointerToIntArray;\n      if (!boolValue) {\n        variable2 = pointerToIntArray[5];\n      }\n      *pointerToIntArray = variable1;\n      pointerToIntArray[2] = variable2;\n      for (variable3 = variable3 - variable1; 0 < variable3; variable3 = variable3 - variable2) {\n        variable2 = (*(code *)pointerToIntArray[10])(pointerToUint,pointerToIntArray[8],variable1,variable3);\n        if (variable2 < 1) {\n          ushortValue = *(ushort *)(pointerToIntArray + 3);\n          goto LAB_08006bc6;\n        }\n        variable1 = variable1 + variable2;\n      }\n    }\n  }\n  else if (((0 < pointerToIntArray[1]) || (0 < pointerToIntArray[0x10])) &&\n          (functionPtr = (code *)pointerToIntArray[0xb], functionPtr != (code *)0x0)) {\n    uintValue2 = *pointerToUint;\n    *pointerToUint = 0;\n    if ((ushortValue & 0x1000) == 0) {\n      variable1 = (*functionPtr)(pointerToUint,pointerToIntArray[8],uintValue & 0x1000,1);\n      if ((variable1 == -1) && (uintValue = *pointerToUint, uintValue != 0)) {\n        if ((uintValue != 0x1d) && (uintValue != 0x16)) {\n          *(ushort *)(pointerToIntArray + 3) = *(ushort *)(pointerToIntArray + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006b90. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          (*jumpTable)();\n          return;\n        }\n        *pointerToUint = uintValue2;\n        goto LAB_08006aea;\n      }\n    }\n    else {\n      variable1 = pointerToIntArray[0x15];\n    }\n    if (((int)((uint)*(ushort *)(pointerToIntArray + 3) << 0x1d) < 0) &&\n       (variable1 = variable1 - pointerToIntArray[1], pointerToIntArray[0xd] != 0)) {\n      variable1 = variable1 - pointerToIntArray[0x10];\n    }\n    variable1 = (*(code *)pointerToIntArray[0xb])(pointerToUint,pointerToIntArray[8],variable1,0);\n    ushortValue = *(ushort *)(pointerToIntArray + 3);\n    if ((variable1 == -1) &&\n       ((0x1d < *pointerToUint || (-1 < (int)((0x20400001U >> (*pointerToUint & 0xff)) << 0x1f))))) {\nLAB_08006bc6:\n      *(ushort *)(pointerToIntArray + 3) = ushortValue | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006bd0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jumpTable)(0xffffffff);\n      return;\n    }\n    pointerToIntArray[1] = 0;\n    *pointerToIntArray = pointerToIntArray[4];\n    if (((int)((uint)ushortValue << 0x13) < 0) && ((variable1 != -1 || (*pointerToUint == 0)))) {\n      pointerToIntArray[0x15] = variable1;\n    }\n    piVar4 = (int *)pointerToIntArray[0xd];\n    *pointerToUint = uintValue2;\n    if (piVar4 != (int *)0x0) {\n      if (piVar4 != pointerToIntArray + 0x11) {\n        FUN_080061f0(pointerToUint);\n      }\n      pointerToIntArray[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08006b66. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jumpTable)();\n      return;\n    }\n  }\nLAB_08006aea:\n                    /* WARNING: Could not recover jumptable at 0x08006aec. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006ac0": "execute_main_function_08006ac0",
                "piVar3": "pointerToIntArray",
                "puVar1": "pointerToUint",
                "uVar6": "ushortValue",
                "uVar5": "uintValue",
                "iVar2": "variable1",
                "iVar7": "variable2",
                "iVar9": "variable3",
                "bVar11": "boolValue",
                "pcVar8": "functionPtr",
                "uVar10": "uintValue2",
                "UNRECOVERED_JUMPTABLE_00": "jumpTable",
                "uVar12": "undefinedValue"
            },
            "calling": [
                "FUN_08007090",
                "FUN_0800611c"
            ],
            "called": [
                "FUN_0800573c",
                "FUN_080061f0",
                "FUN_08006f00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006be0": {
            "entrypoint": "0x08006be0",
            "current_name": "process_data_08006be0",
            "code": "\nundefined4 processData_08006be0(uint *data,int *config)\n\n{\n  undefined4 result;\n  int offset;\n  int *ptr;\n  uint value;\n  ushort flag;\n  int temp;\n  undefined4 temp1;\n  undefined4 temp2;\n  code *callback;\n  int size;\n  uint backup;\n  code *jumpTable;\n  bool conditionFlag;\n  \n  if (config[4] != 0) {\n    if ((data != (uint *)0x0) && (data[6] == 0)) {\n      FUN_08006cb4();\n    }\n    if (config == &DAT_08007904) {\n      config = (int *)data[1];\n    }\n    else if (config == (int *)&DAT_08007924) {\n      config = (int *)data[2];\n    }\n    else if (config == (int *)&DAT_080078e4) {\n      config = (int *)data[3];\n    }\n    if (*(short *)(config + 3) != 0) {\n      flag = *(ushort *)(config + 3);\n      value = (uint)flag;\n      if ((int)(value << 0x1c) < 0) {\n        offset = config[4];\n        if (offset != 0) {\n          temp = value << 0x1e;\n          conditionFlag = temp != 0;\n          if (conditionFlag) {\n            temp = 0;\n          }\n          size = *config;\n          if (!conditionFlag) {\n            temp = config[5];\n          }\n          *config = offset;\n          config[2] = temp;\n          for (size = size - offset; 0 < size; size = size - temp) {\n            temp = (*(code *)config[10])(data,config[8],offset,size,temp1,temp2);\n            if (temp < 1) {\n              flag = *(ushort *)(config + 3);\n              goto LAB_08006bc6;\n            }\n            offset = offset + temp;\n          }\n        }\n      }\n      else if (((0 < config[1]) || (0 < config[0x10])) &&\n              (callback = (code *)config[0xb], callback != (code *)0x0)) {\n        backup = *data;\n        *data = 0;\n        if ((flag & 0x1000) == 0) {\n          offset = (*callback)(data,config[8],value & 0x1000,1);\n          if ((offset == -1) && (value = *data, value != 0)) {\n            if ((value != 0x1d) && (value != 0x16)) {\n              *(ushort *)(config + 3) = *(ushort *)(config + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006b90. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n              result = (*jumpTable)();\n              return result;\n            }\n            *data = backup;\n            goto LAB_08006aea;\n          }\n        }\n        else {\n          offset = config[0x15];\n        }\n        if (((int)((uint)*(ushort *)(config + 3) << 0x1d) < 0) &&\n           (offset = offset - config[1], config[0xd] != 0)) {\n          offset = offset - config[0x10];\n        }\n        offset = (*(code *)config[0xb])(data,config[8],offset,0);\n        flag = *(ushort *)(config + 3);\n        if ((offset == -1) &&\n           ((0x1d < *data || (-1 < (int)((0x20400001U >> (*data & 0xff)) << 0x1f))))) {\nLAB_08006bc6:\n          *(ushort *)(config + 3) = flag | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006bd0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          result = (*jumpTable)(0xffffffff);\n          return result;\n        }\n        config[1] = 0;\n        *config = config[4];\n        if (((int)((uint)flag << 0x13) < 0) && ((offset != -1 || (*data == 0)))) {\n          config[0x15] = offset;\n        }\n        ptr = (int *)config[0xd];\n        *data = backup;\n        if (ptr != (int *)0x0) {\n          if (ptr != config + 0x11) {\n            FUN_080061f0(data);\n          }\n          config[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08006b66. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          result = (*jumpTable)();\n          return result;\n        }\n      }\nLAB_08006aea:\n                    /* WARNING: Could not recover jumptable at 0x08006aec. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      result = (*jumpTable)(0);\n      return result;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006be0": "process_data_08006be0",
                "param_1": "data",
                "param_2": "config",
                "uVar1": "result",
                "iVar2": "offset",
                "piVar3": "ptr",
                "uVar4": "value",
                "uVar5": "flag",
                "iVar6": "temp",
                "unaff_r4": "temp1",
                "unaff_r5": "temp2",
                "pcVar7": "callback",
                "iVar8": "size",
                "uVar9": "backup",
                "UNRECOVERED_JUMPTABLE_00": "jumpTable",
                "bVar10": "conditionFlag"
            },
            "calling": [
                "FUN_08006344"
            ],
            "called": [
                "FUN_08006cb4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c40": {
            "entrypoint": "0x08006c40",
            "current_name": "initialize_data_08006c40",
            "code": "\nvoid initializeData_08006c40(undefined4 *data,undefined2 value1,undefined2 value2)\n\n{\n  *data = 0;\n  data[1] = 0;\n  data[2] = 0;\n  *(undefined2 *)(data + 3) = value1;\n  data[0x19] = 0;\n  *(undefined2 *)((int)data + 0xe) = value2;\n  data[4] = 0;\n  data[5] = 0;\n  data[6] = 0;\n  FUN_080061e0(data + 0x17,0,8);\n  data[8] = data;\n  data[9] = 0x8006f39;\n  data[10] = 0x8006f5b;\n  data[0xb] = 0x8006f93;\n  data[0xc] = &constant;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006c40": "initialize_data_08006c40",
                "param_1": "data",
                "param_2": "value1",
                "param_3": "value2",
                "LAB_08006fb6_1": "constant"
            },
            "calling": [
                "FUN_08006cb4"
            ],
            "called": [
                "FUN_080061e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c88": {
            "entrypoint": "0x08006c88",
            "current_name": "initialize_data_structure_08006c88",
            "code": "\nundefined4 * initializeDataStructure_08006c88(undefined4 inputValue,int count)\n\n{\n  undefined4 *dataPointer;\n  int offset;\n  \n  offset = (count + -1) * 0x68;\n  dataPointer = (undefined4 *)FUN_08006288(inputValue,offset + 0x74);\n  if (dataPointer != (undefined4 *)0x0) {\n    *dataPointer = 0;\n    dataPointer[1] = count;\n    dataPointer[2] = dataPointer + 3;\n    FUN_080061e0(dataPointer + 3,0,offset + 0x68);\n  }\n  return dataPointer;\n}\n\n",
            "renaming": {
                "FUN_08006c88": "initialize_data_structure_08006c88",
                "param_1": "inputValue",
                "param_2": "count",
                "puVar1": "dataPointer",
                "iVar2": "offset"
            },
            "calling": [
                "FUN_08006d14"
            ],
            "called": [
                "FUN_08006288",
                "FUN_080061e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006cb4": {
            "entrypoint": "0x08006cb4",
            "current_name": "initialize_data_08006cb4",
            "code": "\nvoid initializeData_08006cb4(undefined4 *data)\n\n{\n  undefined4 result;\n  undefined4 *pointer;\n  \n  if (data[6] == 0) {\n    data[0x12] = 0;\n    data[0x13] = 0;\n    data[0x14] = 0;\n    pointer = &DAT_200000fc;\n    data[10] = &LAB_08006c34_1;\n    if (data == &DAT_200000fc) {\n      pointer = (undefined4 *)0x1;\n    }\n    if (data == &DAT_200000fc) {\n      data[6] = pointer;\n    }\n    result = FUN_08006d14();\n    data[1] = result;\n    result = FUN_08006d14(data);\n    data[2] = result;\n    result = FUN_08006d14(data);\n    data[3] = result;\n    FUN_08006c40(data[1],4,0);\n    FUN_08006c40(data[2],9,1);\n    FUN_08006c40(data[3],0x12,2);\n    data[6] = 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006cb4": "initialize_data_08006cb4",
                "param_1": "data",
                "uVar1": "result",
                "puVar2": "pointer"
            },
            "calling": [
                "FUN_08006be0",
                "FUN_080069e4",
                "FUN_08006344",
                "FUN_080068f0",
                "FUN_08006394",
                "FUN_08006d14"
            ],
            "called": [
                "FUN_08006c40",
                "FUN_08006d14"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d14": {
            "entrypoint": "0x08006d14",
            "current_name": "initialize_data_08006d14",
            "code": "\nint * initializeData_08006d14(undefined4 *outParam,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int *ptr1;\n  int *ptr2;\n  int **ptrPtr3;\n  \n  if (DAT_20000114 == 0) {\n    FUN_08006cb4(&DAT_200000fc);\n  }\n  ptrPtr3 = (int **)&DAT_20000144;\n  do {\n    ptr2 = ptrPtr3[2];\n    ptr1 = ptrPtr3[1];\n    while (ptr1 = (int *)((int)ptr1 + -1), -1 < (int)ptr1) {\n      if (*(short *)(ptr2 + 3) == 0) {\n        *(undefined2 *)((int)ptr2 + 0xe) = 0xffff;\n        ptr2[0x19] = 0;\n        *(undefined2 *)(ptr2 + 3) = 1;\n        *ptr2 = 0;\n        ptr2[2] = 0;\n        ptr2[1] = 0;\n        ptr2[4] = 0;\n        ptr2[5] = 0;\n        ptr2[6] = 0;\n        FUN_080061e0(ptr2 + 0x17,0,8,1,param4);\n        ptr2[0xd] = 0;\n        ptr2[0xe] = 0;\n        ptr2[0x12] = 0;\n        ptr2[0x13] = 0;\n        return ptr2;\n      }\n      ptr2 = ptr2 + 0x1a;\n    }\n    if (*ptrPtr3 == (int *)0x0) {\n      ptr1 = (int *)FUN_08006c88(outParam,4);\n      *ptrPtr3 = ptr1;\n      if (ptr1 == (int *)0x0) {\n        *outParam = 0xc;\n        return (int *)0x0;\n      }\n    }\n    ptrPtr3 = (int **)*ptrPtr3;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08006d14": "initialize_data_08006d14",
                "param_1": "outParam",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "piVar1": "ptr1",
                "piVar2": "ptr2",
                "ppiVar3": "ptrPtr3"
            },
            "calling": [
                "FUN_08006cb4"
            ],
            "called": [
                "FUN_08006cb4",
                "FUN_08006c88",
                "FUN_080061e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006dc8": {
            "entrypoint": "0x08006dc8",
            "current_name": "calculate_permission_08006dc8",
            "code": "\nundefined4 calculatePermission_08006dc8(undefined4 param1,int param2,undefined4 *permission,uint *result)\n\n{\n  int error;\n  undefined4 permissionFlag;\n  undefined stackArray [4];\n  uint localVariable;\n  \n  if ((*(short *)(param2 + 0xe) < 0) ||\n     (error = FUN_08007004(param1,(int)*(short *)(param2 + 0xe),stackArray), error < 0)) {\n    *result = 0;\n    if ((int)((uint)*(ushort *)(param2 + 0xc) << 0x18) < 0) {\n      permissionFlag = 0x40;\n      goto LAB_08006e08;\n    }\n  }\n  else {\n    *result = (uint)((localVariable & 0xf000) == 0x2000);\n  }\n  permissionFlag = 0x400;\nLAB_08006e08:\n  *permission = permissionFlag;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006dc8": "calculate_permission_08006dc8",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "permission",
                "param_4": "result",
                "iVar1": "error",
                "uVar2": "permissionFlag",
                "auStack_4c": "stackArray",
                "local_48": "localVariable"
            },
            "calling": [
                "FUN_08006e10"
            ],
            "called": [
                "FUN_08007004"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e10": {
            "entrypoint": "0x08006e10",
            "current_name": "process_data_08006e10",
            "code": "\nvoid processData_08006e10(int inputValue,int *dataArray)\n\n{\n  ushort result;\n  int returnValue;\n  int tempValue;\n  int *tempArray;\n  \n  if (-1 < (int)((uint)*(ushort *)(dataArray + 3) << 0x1e)) {\n    tempValue = inputValue;\n    tempArray = dataArray;\n    result = FUN_08006dc8(inputValue,dataArray,&tempValue,&tempArray);\n    returnValue = FUN_08006288(inputValue,tempValue);\n    if (returnValue != 0) {\n      *(undefined **)(inputValue + 0x28) = &LAB_08006c34_1;\n      *dataArray = returnValue;\n      *(ushort *)(dataArray + 3) = *(ushort *)(dataArray + 3) | 0x80;\n      dataArray[4] = returnValue;\n      dataArray[5] = tempValue;\n      if ((tempArray != (int *)0x0) &&\n         (returnValue = FUN_08007028(inputValue,(int)*(short *)((int)dataArray + 0xe)), returnValue != 0)) {\n        *(ushort *)(dataArray + 3) = *(ushort *)(dataArray + 3) & 0xfffc | 1;\n      }\n      *(ushort *)(dataArray + 3) = result | *(ushort *)(dataArray + 3);\n      return;\n    }\n    if ((int)(short)*(ushort *)(dataArray + 3) << 0x16 < 0) {\n      return;\n    }\n    *(ushort *)(dataArray + 3) = *(ushort *)(dataArray + 3) & 0xfffc | 2;\n  }\n  *dataArray = (int)dataArray + 0x47;\n  dataArray[4] = (int)dataArray + 0x47;\n  dataArray[5] = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006e10": "process_data_08006e10",
                "param_1": "inputValue",
                "param_2": "dataArray",
                "uVar1": "result",
                "iVar2": "returnValue",
                "local_18": "tempValue",
                "local_14": "tempArray"
            },
            "calling": [
                "FUN_080069e4"
            ],
            "called": [
                "FUN_08007028",
                "FUN_08006288",
                "FUN_08006dc8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e90": {
            "entrypoint": "0x08006e90",
            "current_name": "find_character_08006e90",
            "code": "\nchar * find_character_08006e90(char *str,char character,int length)\n\n{\n  char *current_position;\n  char *next_position;\n  \n  current_position = str;\n  do {\n    next_position = current_position;\n    if (next_position == str + length) {\n      return (char *)0x0;\n    }\n    current_position = next_position + 1;\n  } while (*next_position != character);\n  return next_position;\n}\n\n",
            "renaming": {
                "FUN_08006e90": "find_character_08006e90",
                "param_1": "str",
                "param_2": "character",
                "param_3": "length",
                "pcVar1": "current_position",
                "pcVar2": "next_position"
            },
            "calling": [
                "FUN_080066b0",
                "FUN_08006394"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006eac": {
            "entrypoint": "0x08006eac",
            "current_name": "FUNC_08006eac",
            "code": "\nvoid FUNC_08006eac(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006eac": "FUNC_08006eac"
            },
            "calling": [
                "FUN_080061f0",
                "FUN_08006288"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08006eae": {
            "entrypoint": "0x08006eae",
            "current_name": "FUNC_08006eae",
            "code": "\nvoid FUNC_08006eae(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006eae": "FUNC_08006eae"
            },
            "calling": [
                "FUN_08006288",
                "FUN_080061f0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08006f00": {
            "entrypoint": "0x08006f00",
            "current_name": "process_data_08006f00",
            "code": "\nint processData_08006f00(uint data)\n\n{\n  int *ptrData;\n  undefined4 result;\n  int index;\n  code *functionPtr;\n  undefined4 unusedVar1;\n  undefined4 unusedVar2;\n  undefined4 unusedVar3;\n  undefined4 *ptrDataPointer;\n  \n  ptrData = DAT_200000f8;\n  ptrDataPointer = &DAT_200000f8;\n  if (0x1f < data) {\n    *DAT_200000f8 = 0x16;\n    return -1;\n  }\n  index = DAT_200000f8[0x11];\n  if ((index != 0) && (functionPtr = *(code **)(index + data * 4), functionPtr != (code *)0x0)) {\n    if (functionPtr != (code *)0x1) {\n      if (functionPtr == (code *)0xffffffff) {\n        *DAT_200000f8 = 0x16;\n        return 1;\n      }\n      *(undefined4 *)(index + data * 4) = 0;\n      (*functionPtr)(data);\n    }\n    return 0;\n  }\n  result = thunk_FUN_08005750(DAT_200000f8);\n  DAT_200006a4 = 0;\n  index = FUN_08005740(result,data,data,0,ptrDataPointer,unusedVar1,unusedVar2,unusedVar3);\n  if ((index == -1) && (DAT_200006a4 != 0)) {\n    *ptrData = DAT_200006a4;\n  }\n  return index;\n}\n\n",
            "renaming": {
                "FUN_08006f00": "process_data_08006f00",
                "param_1": "data",
                "piVar1": "ptrData",
                "uVar2": "result",
                "iVar3": "index",
                "pcVar4": "functionPtr",
                "unaff_r4": "unusedVar1",
                "unaff_r5": "unusedVar2",
                "in_lr": "unusedVar3",
                "puVar5": "ptrDataPointer"
            },
            "calling": [
                "FUN_08006ac0"
            ],
            "called": [
                "FUN_08005740",
                "thunk_FUN_08005750"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_08005750": {
            "entrypoint": "0x08006f34",
            "current_name": "get_return_value_thunk_08005750",
            "code": "\nint getReturnValue_thunk_08005750(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "thunk_FUN_08005750": "get_return_value_thunk_08005750",
                "undefined4": "int"
            },
            "calling": [
                "FUN_08006f00"
            ],
            "called": [
                "FUN_08005750"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006f38": {
            "entrypoint": "0x08006f38",
            "current_name": "update_value_08006f38",
            "code": "\nvoid updateValue_08006f38(undefined4 input1,int input2)\n\n{\n  int result;\n  uint newValue;\n  bool isPositive;\n  \n  result = FUN_0800706c(input1,(int)*(short *)(input2 + 0xe));\n  isPositive = -1 < result;\n  if (isPositive) {\n    newValue = *(int *)(input2 + 0x54) + result;\n  }\n  else {\n    newValue = *(ushort *)(input2 + 0xc) & 0xffffefff;\n  }\n  if (isPositive) {\n    *(uint *)(input2 + 0x54) = newValue;\n  }\n  if (!isPositive) {\n    *(short *)(input2 + 0xc) = (short)newValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006f38": "update_value_08006f38",
                "param_1": "input1",
                "param_2": "input2",
                "iVar1": "result",
                "uVar2": "newValue",
                "bVar3": "isPositive"
            },
            "calling": [],
            "called": [
                "FUN_0800706c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006f5a": {
            "entrypoint": "0x08006f5a",
            "current_name": "process_data_08006f5a",
            "code": "\nvoid processData_08006f5a(int *outputPtr,int inputPtr,undefined4 param1,undefined4 param2)\n\n{\n  int result;\n  undefined4 unusedParam1;\n  undefined4 unusedParam2;\n  undefined4 unusedParam3;\n  \n  if ((int)((uint)*(ushort *)(inputPtr + 0xc) << 0x17) < 0) {\n    FUN_08007048(outputPtr,(int)*(short *)(inputPtr + 0xe),0,2);\n  }\n  *(ushort *)(inputPtr + 0xc) = *(ushort *)(inputPtr + 0xc) & 0xefff;\n  DAT_200006a4 = 0;\n  result = FUN_08005730((int)*(short *)(inputPtr + 0xe),param1,param2,param2,param2,unusedParam1,\n                       unusedParam2,unusedParam3);\n  if ((result == -1) && (DAT_200006a4 != 0)) {\n    *outputPtr = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006f5a": "process_data_08006f5a",
                "param_1": "outputPtr",
                "param_2": "inputPtr",
                "param_3": "param1",
                "param_4": "param2",
                "iVar1": "result",
                "unaff_r4": "unusedParam1",
                "unaff_r5": "unusedParam2",
                "in_lr": "unusedParam3"
            },
            "calling": [],
            "called": [
                "FUN_08007048",
                "FUN_08005730"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006f92": {
            "entrypoint": "0x08006f92",
            "current_name": "update_flag_08006f92",
            "code": "\nvoid updateFlag_08006f92(undefined4 param1,int param2)\n\n{\n  int result;\n  ushort updatedFlag;\n  bool isError;\n  \n  result = FUN_08007048(param1,(int)*(short *)(param2 + 0xe));\n  isError = result == -1;\n  if (isError) {\n    updatedFlag = *(ushort *)(param2 + 0xc) & 0xefff;\n  }\n  else {\n    *(int *)(param2 + 0x54) = result;\n    updatedFlag = *(ushort *)(param2 + 0xc) | 0x1000;\n  }\n  if (isError) {\n    *(ushort *)(param2 + 0xc) = updatedFlag;\n  }\n  if (!isError) {\n    *(ushort *)(param2 + 0xc) = updatedFlag;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006f92": "update_flag_08006f92",
                "param_1": "param1",
                "param_2": "param2",
                "iVar1": "result",
                "uVar2": "updatedFlag",
                "bVar3": "isError"
            },
            "calling": [],
            "called": [
                "FUN_08007048"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007004": {
            "entrypoint": "0x08007004",
            "current_name": "check_and_update_value_08007004",
            "code": "\nvoid checkAndUpdateValue_08007004(int *outputValue,undefined4 inputValue1,undefined4 inputValue2,undefined4 inputValue3)\n\n{\n  int functionResult;\n  \n  DAT_200006a4 = 0;\n  functionResult = FUN_0800571a(inputValue1,inputValue2,inputValue2,0,inputValue3);\n  if ((functionResult == -1) && (DAT_200006a4 != 0)) {\n    *outputValue = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007004": "check_and_update_value_08007004",
                "param_1": "outputValue",
                "param_2": "inputValue1",
                "param_3": "inputValue2",
                "param_4": "inputValue3",
                "iVar1": "functionResult"
            },
            "calling": [
                "FUN_08006dc8"
            ],
            "called": [
                "FUN_0800571a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007028": {
            "entrypoint": "0x08007028",
            "current_name": "find_and_set_value_08007028",
            "code": "\nvoid find_and_set_value_08007028(int *output,undefined4 input)\n\n{\n  int result;\n  \n  DAT_200006a4 = 0;\n  result = FUN_08005724(input);\n  if ((result == -1) && (DAT_200006a4 != 0)) {\n    *output = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007028": "find_and_set_value_08007028",
                "param_1": "output",
                "param_2": "input",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08006e10"
            ],
            "called": [
                "FUN_08005724"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007048": {
            "entrypoint": "0x08007048",
            "current_name": "extract_value_and_update_if_error_08007048",
            "code": "\nvoid extractValueAndUpdateIfError_08007048(int *resultPtr,undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  int returnValue;\n  \n  DAT_200006a4 = 0;\n  returnValue = FUN_08005728(input1,input2,input3,input3,input3);\n  if ((returnValue == -1) && (DAT_200006a4 != 0)) {\n    *resultPtr = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007048": "extract_value_and_update_if_error_08007048",
                "param_1": "resultPtr",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "input3",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08006f5a",
                "FUN_08006f92"
            ],
            "called": [
                "FUN_08005728"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800706c": {
            "entrypoint": "0x0800706c",
            "current_name": "extract_and_assign_value_0800706c",
            "code": "\nvoid extractAndAssignValue_0800706c(int *outputValue,undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  int result;\n  \n  DAT_200006a4 = 0;\n  result = FUN_0800572c(input1,input2,input3,input3,input3);\n  if ((result == -1) && (DAT_200006a4 != 0)) {\n    *outputValue = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800706c": "extract_and_assign_value_0800706c",
                "param_1": "outputValue",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "input3",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08006f38"
            ],
            "called": [
                "FUN_0800572c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007090": {
            "entrypoint": "0x08007090",
            "current_name": "initialize_variables_08007090",
            "code": "\nvoid initializeVariables_08007090(void)\n\n{\n  code *jumpTable;\n  \n  jumpTable = initializeVariables_08007090;\n  FUN_08006ac0();\n  if (-1 < DAT_2000062c << 0x1f) {\n    DAT_2000062c = 1;\n  }\n  if (-1 < DAT_20000628 << 0x1f) {\n    DAT_20000628 = 1;\n  }\n  if (-1 < DAT_20000624 << 0x1f) {\n    DAT_20000624 = 1;\n  }\n  if (-1 < DAT_20000620 << 0x1f) {\n    DAT_20000620 = 1;\n  }\n  if (-1 < DAT_2000061c << 0x1f) {\n    DAT_2000061c = 1;\n  }\n  if (-1 < DAT_20000618 << 0x1f) {\n    DAT_20000618 = 1;\n  }\n  if (-1 < DAT_20000614 << 0x1f) {\n    DAT_20000614 = 1;\n  }\n  if (-1 < DAT_20000610 << 0x1f) {\n    DAT_20000610 = 1;\n  }\n  if (-1 < DAT_2000060c << 0x1f) {\n    DAT_2000060c = 1;\n  }\n  if (-1 < DAT_20000608 << 0x1f) {\n    DAT_20000608 = 1;\n  }\n  if (-1 < DAT_20000604 << 0x1f) {\n    DAT_20000604 = 1;\n  }\n  if (-1 < DAT_20000600 << 0x1f) {\n    DAT_20000600 = 1;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08007128. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007090": "initialize_variables_08007090",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_080060d4"
            ],
            "called": [
                "FUN_08006ac0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007328": {
            "entrypoint": "0x08007328",
            "current_name": "FUNC_08007328",
            "code": "\nvoid FUNC_08007328(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007328": "FUNC_08007328"
            },
            "calling": [
                "FUN_08006198",
                "FUN_0800010c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08007334": {
            "entrypoint": "0x08007334",
            "current_name": "FUNC_08007334",
            "code": "\nvoid FUNC_08007334(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007334": "FUNC_08007334"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        }
    },
    "used_tokens": 172543,
    "layers": [
        [
            "FUN_0800010c",
            "FUN_08000178",
            "FUN_08000190",
            "FUN_08000194",
            "FUN_0800040c",
            "FUN_0800042c",
            "FUN_080004f8",
            "FUN_080006d4",
            "FUN_0800074c",
            "FUN_080008ba",
            "FUN_0800092c",
            "FUN_080009a8",
            "FUN_080009b8",
            "FUN_080009c8",
            "FUN_080009dc",
            "FUN_080009f0",
            "FUN_08000a04",
            "FUN_08000a18",
            "FUN_08000a2c",
            "FUN_08000a58",
            "FUN_08000aa8",
            "FUN_08000ae8",
            "FUN_08000aec",
            "FUN_08000b08",
            "FUN_08000bcc",
            "FUN_08000cd0",
            "FUN_08001294",
            "FUN_080012a2",
            "FUN_080012c0",
            "FUN_080012e8",
            "FUN_08001310",
            "FUN_0800134e",
            "FUN_0800135a",
            "FUN_08001366",
            "FUN_0800138e",
            "FUN_080013a4",
            "FUN_080014ba",
            "FUN_08001510",
            "FUN_08001550",
            "FUN_0800157c",
            "FUN_080015b2",
            "FUN_080015f8",
            "FUN_080016b4",
            "FUN_08001814",
            "FUN_080018f8",
            "FUN_08001918",
            "FUN_08001960",
            "FUN_080019f6",
            "FUN_08001a44",
            "FUN_08001a66",
            "FUN_08001ab0",
            "FUN_08001b18",
            "FUN_08001b48",
            "FUN_08001c32",
            "FUN_08001c3c",
            "FUN_08001c88",
            "FUN_08001cac",
            "FUN_08001cc4",
            "FUN_08001cd0",
            "FUN_08001e40",
            "FUN_08001e48",
            "FUN_08001f80",
            "FUN_08001f84",
            "FUN_08002004",
            "FUN_080020f0",
            "FUN_0800213c",
            "FUN_0800224c",
            "FUN_08002348",
            "FUN_08002384",
            "FUN_08002470",
            "FUN_08002494",
            "FUN_080024f8",
            "FUN_08002514",
            "FUN_08002540",
            "FUN_08002560",
            "FUN_08002582",
            "FUN_0800258c",
            "FUN_08002624",
            "FUN_08002810",
            "FUN_0800281e",
            "FUN_0800282c",
            "FUN_08002848",
            "FUN_080028d2",
            "FUN_080028de",
            "FUN_08002ab8",
            "FUN_08002ad8",
            "FUN_08002af8",
            "FUN_08002b84",
            "FUN_08002c10",
            "FUN_08002c54",
            "FUN_08002ca6",
            "FUN_08002cf2",
            "FUN_08002d1c",
            "FUN_08002db2",
            "FUN_08002efc",
            "FUN_08002f9c",
            "FUN_0800306c",
            "FUN_0800316c",
            "FUN_080032b4",
            "FUN_080033b8",
            "FUN_08003520",
            "FUN_0800365c",
            "FUN_08003688",
            "FUN_08003a68",
            "FUN_08003ad4",
            "FUN_08003afa",
            "FUN_08003c44",
            "FUN_08003c50",
            "FUN_08003c70",
            "FUN_08003c90",
            "FUN_08003da4",
            "FUN_08003ea0",
            "FUN_08003ed8",
            "FUN_08003f18",
            "FUN_08004092",
            "FUN_080040b0",
            "FUN_08004110",
            "FUN_0800412c",
            "FUN_0800417c",
            "FUN_08004198",
            "FUN_08004204",
            "FUN_080043b4",
            "FUN_0800441a",
            "FUN_08004478",
            "FUN_0800455a",
            "FUN_080045a2",
            "FUN_080045fe",
            "FUN_08004618",
            "FUN_080046b8",
            "FUN_080047e8",
            "FUN_080047f4",
            "FUN_0800480a",
            "FUN_08004828",
            "FUN_08004848",
            "FUN_08004884",
            "FUN_0800492c",
            "FUN_08004948",
            "FUN_08004974",
            "FUN_080049f0",
            "FUN_08004a4c",
            "FUN_08004b34",
            "FUN_08004b3c",
            "FUN_08004b94",
            "FUN_08004b9e",
            "FUN_08004bb0",
            "FUN_08004c30",
            "FUN_08004c48",
            "FUN_08004c52",
            "FUN_08004c5e",
            "FUN_08004c78",
            "FUN_08004c8a",
            "FUN_08004ca2",
            "FUN_08004cb2",
            "FUN_08004cce",
            "FUN_08004ce2",
            "FUN_08004d06",
            "FUN_08004d18",
            "FUN_08004d40",
            "FUN_08004d44",
            "FUN_08004d90",
            "FUN_08004df4",
            "FUN_08004df8",
            "FUN_08004e12",
            "FUN_08004e20",
            "FUN_08004e70",
            "FUN_08004e74",
            "FUN_08004ec4",
            "FUN_08004ef4",
            "FUN_08004f4c",
            "FUN_08005384",
            "FUN_080053d4",
            "FUN_0800548c",
            "FUN_080054b0",
            "FUN_080054d4",
            "FUN_08005510",
            "FUN_08005568",
            "FUN_080055bc",
            "FUN_080055e0",
            "FUN_08005604",
            "FUN_080056d8",
            "FUN_08005714",
            "FUN_0800571a",
            "FUN_08005724",
            "FUN_08005728",
            "FUN_0800572c",
            "FUN_08005730",
            "FUN_0800573c",
            "FUN_08005740",
            "FUN_08005750",
            "FUN_08005754",
            "FUN_080057b4",
            "FUN_08005848",
            "FUN_08005890",
            "FUN_080058e0",
            "FUN_0800591e",
            "FUN_0800598a",
            "FUN_08005a44",
            "FUN_08005a68",
            "FUN_08005b24",
            "FUN_08005b3c",
            "FUN_08005b54",
            "FUN_08005bb0",
            "FUN_08005c1c",
            "FUN_08005c38",
            "FUN_08005c96",
            "FUN_08005cb6",
            "FUN_08005cc0",
            "FUN_08005cd4",
            "FUN_08005ce8",
            "FUN_08005d42",
            "FUN_08005d82",
            "FUN_08005d8a",
            "FUN_08005da8",
            "FUN_08005f2c",
            "FUN_08005f40",
            "FUN_08005f5e",
            "FUN_08005f6c",
            "FUN_08005f8c",
            "FUN_08005fc8",
            "FUN_080060d4",
            "FUN_080060e4",
            "FUN_08006112",
            "FUN_0800611c",
            "FUN_08006158",
            "FUN_08006174",
            "FUN_08006198",
            "FUN_080061e0",
            "FUN_080061f0",
            "FUN_08006288",
            "FUN_08006344",
            "FUN_08006370",
            "FUN_08006394",
            "FUN_080065c0",
            "FUN_080066b0",
            "FUN_080068f0",
            "FUN_08006920",
            "FUN_080069e4",
            "FUN_08006ac0",
            "FUN_08006be0",
            "FUN_08006c40",
            "FUN_08006c88",
            "FUN_08006cb4",
            "FUN_08006d14",
            "FUN_08006dc8",
            "FUN_08006e10",
            "FUN_08006e90",
            "FUN_08006f00",
            "thunk_FUN_08005750",
            "FUN_08006f38",
            "FUN_08006f5a",
            "FUN_08006f92",
            "FUN_08007004",
            "FUN_08007028",
            "FUN_08007048",
            "FUN_0800706c",
            "FUN_08007090"
        ]
    ],
    "locked_functions": []
}