{
    "functions": {
        "FUN_0800010c": {
            "entrypoint": "0x0800010c",
            "current_name": "initialize_flag_0800010c",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08000118) */\n\nundefined4 initializeFlag_0800010c(undefined4 input)\n\n{\n  if ((char)DAT_20000160 == '\\0') {\n    DAT_20000160._0_1_ = '\\x01';\n  }\n  return input;\n}\n\n",
            "renaming": {
                "FUN_0800010c": "initialize_flag_0800010c",
                "param_1": "input"
            },
            "calling": [],
            "called": [
                "FUN_08007328"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000178": {
            "entrypoint": "0x08000178",
            "current_name": "find_end_of_string_08000178",
            "code": "\nchar * find_end_of_string_08000178(char *string)\n\n{\n  char current_char;\n  char *next_char;\n  char *current_position;\n  \n  current_position = string;\n  do {\n    next_char = current_position + 1;\n    current_char = *current_position;\n    current_position = next_char;\n  } while (current_char != '\\0');\n  return next_char + (-1 - (int)string);\n}\n\n",
            "renaming": {
                "FUN_08000178": "find_end_of_string_08000178",
                "param_1": "string",
                "cVar1": "current_char",
                "pcVar2": "next_char",
                "pcVar3": "current_position"
            },
            "calling": [
                "FUN_08005ce8",
                "FUN_08005c96"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000190": {
            "entrypoint": "0x08000190",
            "current_name": "calculate_multiplication_08000190",
            "code": "\nulonglong calculate_multiplication_08000190(uint multiplier_1,uint multiplier_2,uint multiplicand_1,uint multiplicand_2)\n\n{\n  int bit_shift_var1;\n  byte carry_var1;\n  uint temp_var1;\n  uint temp_var2;\n  uint temp_var3;\n  uint temp_var4;\n  uint temp_var5;\n  int bit_shift_var2;\n  uint result_high;\n  uint temp_var6;\n  uint result_low;\n  uint temp_var7;\n  bool bool_var1;\n  bool bool_var2;\n  bool bool_var3;\n  \n  temp_var4 = multiplicand_2 ^ 0x80000000;\n  result_high = multiplier_2 << 1;\n  multiplicand_2 = multiplicand_2 << 1;\n  bool_var1 = ((multiplier_2 ^ temp_var4) & 0x7fffffff) == 0;\n  bool_var2 = bool_var1 && multiplier_1 == multiplicand_1;\n  if (!bool_var1 || multiplier_1 != multiplicand_1) {\n    bool_var2 = (result_high | multiplier_1) == 0;\n  }\n  if (!bool_var2) {\n    bool_var2 = (multiplicand_2 | multiplicand_1) == 0;\n  }\n  bit_shift_var2 = (int)result_high >> 0x15;\n  if (!bool_var2) {\n    bool_var2 = bit_shift_var2 == -1;\n  }\n  bit_shift_var1 = (int)multiplicand_2 >> 0x15;\n  if (!bool_var2) {\n    bool_var2 = bit_shift_var1 == -1;\n  }\n  if (bool_var2) {\n    if (bit_shift_var2 == -1 || bit_shift_var1 == -1) {\n      result_high = temp_var4;\n      result_low = multiplicand_1;\n      if (bit_shift_var2 == -1) {\n        result_high = multiplier_2;\n        result_low = multiplier_1;\n      }\n      if (bit_shift_var2 != -1 || bit_shift_var1 != -1) {\n        multiplicand_1 = result_low;\n        temp_var4 = result_high;\n      }\n      bool_var2 = (result_low | result_high << 0xc) == 0;\n      if (bool_var2) {\n        bool_var2 = (multiplicand_1 | temp_var4 << 0xc) == 0;\n      }\n      if (bool_var2) {\n        bool_var2 = result_high == temp_var4;\n      }\n      if (!bool_var2) {\n        result_high = result_high | 0x80000;\n      }\n      return CONCAT44(result_high,result_low);\n    }\n    if (((multiplier_2 ^ temp_var4) & 0x7fffffff) != 0 || multiplier_1 != multiplicand_1) {\n      if ((result_high | multiplier_1) == 0) {\n        multiplier_1 = multiplicand_1;\n        multiplier_2 = temp_var4;\n      }\n      return CONCAT44(multiplier_2,multiplier_1);\n    }\n    if (multiplier_2 != temp_var4) {\n      return 0;\n    }\n    if (result_high >> 0x15 == 0) {\n      bool_var2 = (multiplier_1 & 0x80000000) != 0;\n      temp_var4 = multiplier_2 * 2 + (uint)bool_var2;\n      if (CARRY4(multiplier_2,multiplier_2) || CARRY4(multiplier_2 * 2,(uint)bool_var2)) {\n        temp_var4 = temp_var4 | 0x80000000;\n      }\n      return CONCAT44(temp_var4,multiplier_1 << 1);\n    }\n    if (result_high < 0xffc00000) {\n      return CONCAT44(multiplier_2 + 0x100000,multiplier_1);\n    }\n    multiplier_2 = multiplier_2 & 0x80000000;\nLAB_080003d4:\n    return (ulonglong)(multiplier_2 | 0x7ff00000) << 0x20;\n  }\n  result_high = result_high >> 0x15;\n  multiplicand_2 = multiplicand_2 >> 0x15;\n  result_low = multiplicand_2 - result_high;\n  bool_var2 = result_low != 0;\n  if (multiplicand_2 < result_high) {\n    result_low = -result_low;\n  }\n  temp_var6 = multiplier_1;\n  temp_var5 = multiplier_2;\n  if (bool_var2 && result_high <= multiplicand_2) {\n    result_high = result_high + result_low;\n    temp_var6 = multiplicand_1;\n    temp_var5 = temp_var4;\n    multiplicand_1 = multiplier_1;\n    temp_var4 = multiplier_2;\n  }\n  if (0x36 < result_low) {\n    return CONCAT44(temp_var5,temp_var6);\n  }\n  temp_var2 = temp_var5 & 0xfffff | 0x100000;\n  if ((temp_var5 & 0x80000000) != 0) {\n    bool_var2 = temp_var6 != 0;\n    temp_var6 = -temp_var6;\n    temp_var2 = -temp_var2 - (uint)bool_var2;\n  }\n  temp_var5 = temp_var4 & 0xfffff | 0x100000;\n  if ((temp_var4 & 0x80000000) != 0) {\n    bool_var2 = multiplicand_1 != 0;\n    multiplicand_1 = -multiplicand_1;\n    temp_var5 = -temp_var5 - (uint)bool_var2;\n  }\n  if (result_high == result_low) {\n    temp_var5 = temp_var5 ^ 0x100000;\n    if (result_high == 0) {\n      temp_var2 = temp_var2 ^ 0x100000;\n      result_high = 1;\n    }\n    else {\n      result_low = result_low - 1;\n    }\n  }\n  temp_var4 = -result_low + 0x20;\n  if ((int)result_low < 0x21) {\n    temp_var7 = multiplicand_1 << (temp_var4 & 0xff);\n    multiplicand_1 = multiplicand_1 >> (result_low & 0xff);\n    temp_var1 = temp_var6 + multiplicand_1;\n    temp_var3 = temp_var5 << (temp_var4 & 0xff);\n    temp_var4 = temp_var1 + temp_var3;\n    temp_var2 = temp_var2 + CARRY4(temp_var6,multiplicand_1) + ((int)temp_var5 >> (result_low & 0xff)) +\n            (uint)CARRY4(temp_var1,temp_var3);\n  }\n  else {\n    temp_var7 = temp_var5 << (-result_low + 0x40 & 0xff);\n    if (multiplicand_1 != 0) {\n      temp_var7 = temp_var7 | 2;\n    }\n    temp_var5 = (int)temp_var5 >> (result_low - 0x20 & 0xff);\n    temp_var4 = temp_var6 + temp_var5;\n    temp_var2 = temp_var2 + ((int)temp_var5 >> 0x1f) + (uint)CARRY4(temp_var6,temp_var5);\n  }\n  multiplier_2 = temp_var2 & 0x80000000;\n  result_low = temp_var2;\n  if ((int)temp_var2 < 0) {\n    bool_var2 = temp_var7 == 0;\n    temp_var7 = -temp_var7;\n    result_low = -temp_var4;\n    temp_var4 = -(uint)!bool_var2 - temp_var4;\n    result_low = -(uint)(bool_var2 <= result_low) - temp_var2;\n  }\n  if (0xfffff < result_low) {\n    temp_var6 = result_high - 1;\n    if (0x1fffff < result_low) {\n      temp_var6 = result_low & 1;\n      result_low = result_low >> 1;\n      carry_var1 = (byte)temp_var4;\n      temp_var4 = (uint)(temp_var6 != 0) << 0x1f | temp_var4 >> 1;\n      temp_var7 = (uint)(carry_var1 & 1) << 0x1f | temp_var7 >> 1;\n      temp_var6 = result_high;\n      if (0xffbfffff < result_high * 0x200000) goto LAB_080003d4;\n    }\nLAB_080002a0:\n    bool_var2 = 0x7fffffff < temp_var7;\n    if (temp_var7 == 0x80000000) {\n      bool_var2 = (temp_var4 & 1) != 0;\n    }\n    return CONCAT44(result_low + temp_var6 * 0x100000 + (uint)CARRY4(temp_var4,(uint)bool_var2) | multiplier_2,\n                    temp_var4 + bool_var2);\n  }\n  bool_var1 = (temp_var7 & 0x80000000) != 0;\n  temp_var7 = temp_var7 << 1;\n  temp_var6 = temp_var4 * 2;\n  bool_var2 = CARRY4(temp_var4,temp_var4);\n  temp_var4 = temp_var4 * 2 + (uint)bool_var1;\n  result_low = result_low * 2 + (uint)(bool_var2 || CARRY4(temp_var6,(uint)bool_var1));\n  temp_var6 = result_high - 2;\n  if ((result_low & 0x100000) != 0) goto LAB_080002a0;\n  temp_var5 = temp_var4;\n  result_high = result_low;\n  if (result_low == 0) {\n    temp_var5 = 0;\n    result_high = temp_var4;\n  }\n  bit_shift_var2 = LZCOUNT(result_high);\n  if (result_low == 0) {\n    bit_shift_var2 = bit_shift_var2 + 0x20;\n  }\n  result_low = bit_shift_var2 - 0xb;\n  bool_var3 = SBORROW4(result_low,0x20);\n  temp_var4 = bit_shift_var2 - 0x2b;\n  bool_var2 = (int)temp_var4 < 0;\n  bool_var1 = temp_var4 == 0;\n  if ((int)result_low < 0x20) {\n    bool_var3 = SCARRY4(temp_var4,0xc);\n    bit_shift_var2 = bit_shift_var2 + -0x1f;\n    bool_var2 = bit_shift_var2 < 0;\n    bool_var1 = bit_shift_var2 == 0;\n    temp_var4 = result_low;\n    if (!bool_var1 && bool_var2 == bool_var3) {\n      temp_var5 = result_high << (result_low & 0xff);\n      result_high = result_high >> (0xcU - bit_shift_var2 & 0xff);\n      goto LAB_08000318;\n    }\n  }\n  if (bool_var1 || bool_var2 != bool_var3) {\n    temp_var7 = 0x20 - temp_var4;\n  }\n  result_high = result_high << (temp_var4 & 0xff);\n  if (bool_var1 || bool_var2 != bool_var3) {\n    result_high = result_high | temp_var5 >> (temp_var7 & 0xff);\n  }\n  if (bool_var1 || bool_var2 != bool_var3) {\n    temp_var5 = temp_var5 << (temp_var4 & 0xff);\n  }\nLAB_08000318:\n  if ((int)result_low <= (int)temp_var6) {\n    return CONCAT44(result_high + (temp_var6 - result_low) * 0x100000 | multiplier_2,temp_var5);\n  }\n  temp_var4 = ~(temp_var6 - result_low);\n  if ((int)temp_var4 < 0x1f) {\n    bit_shift_var2 = temp_var4 - 0x13;\n    if (bit_shift_var2 != 0 && bit_shift_var2 < 0 == SCARRY4(temp_var4 - 0x1f,0xc)) {\n      return CONCAT44(temp_var2,temp_var5 >> (0x20 - (0xcU - bit_shift_var2) & 0xff) | result_high << (0xcU - bit_shift_var2 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    temp_var4 = temp_var4 + 1;\n    return CONCAT44(multiplier_2 | result_high >> (temp_var4 & 0xff),\n                    temp_var5 >> (temp_var4 & 0xff) | result_high << (0x20 - temp_var4 & 0xff));\n  }\n  return CONCAT44(temp_var2,result_high >> (temp_var4 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_08000190": "calculate_multiplication_08000190",
                "param_1": "multiplier_1",
                "param_2": "multiplier_2",
                "param_3": "multiplicand_1",
                "param_4": "multiplicand_2",
                "iVar1": "bit_shift_var1",
                "bVar2": "carry_var1",
                "uVar3": "temp_var1",
                "uVar4": "temp_var2",
                "uVar5": "temp_var3",
                "uVar6": "temp_var4",
                "uVar7": "temp_var5",
                "iVar8": "bit_shift_var2",
                "uVar9": "result_high",
                "uVar10": "temp_var6",
                "uVar11": "result_low",
                "uVar12": "temp_var7",
                "bVar13": "bool_var1",
                "bVar14": "bool_var2",
                "bVar15": "bool_var3"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08001814",
                "FUN_080016b4",
                "FUN_08001a66"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000194": {
            "entrypoint": "0x08000194",
            "current_name": "calculate_double_precision_08000194",
            "code": "\nulonglong calculate_double_precision_08000194(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int shift_amount1;\n  byte carry;\n  uint sum1;\n  uint sum2;\n  uint uVar5;\n  int shift_amount2;\n  uint uVar7;\n  uint input1_shifted;\n  uint input2_shifted;\n  uint difference;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  bool bVar14;\n  bool bVar15;\n  \n  uVar7 = input2 << 1;\n  input2_shifted = input4 << 1;\n  bVar13 = ((input2 ^ input4) & 0x7fffffff) == 0;\n  bVar14 = bVar13 && input1 == input3;\n  if (!bVar13 || input1 != input3) {\n    bVar14 = (uVar7 | input1) == 0;\n  }\n  if (!bVar14) {\n    bVar14 = (input2_shifted | input3) == 0;\n  }\n  shift_amount2 = (int)uVar7 >> 0x15;\n  if (!bVar14) {\n    bVar14 = shift_amount2 == -1;\n  }\n  shift_amount1 = (int)input2_shifted >> 0x15;\n  if (!bVar14) {\n    bVar14 = shift_amount1 == -1;\n  }\n  if (bVar14) {\n    if (shift_amount2 == -1 || shift_amount1 == -1) {\n      input2_shifted = input4;\n      uVar7 = input3;\n      if (shift_amount2 == -1) {\n        input2_shifted = input2;\n        uVar7 = input1;\n      }\n      if (shift_amount2 != -1 || shift_amount1 != -1) {\n        input3 = uVar7;\n        input4 = input2_shifted;\n      }\n      bVar14 = (uVar7 | input2_shifted << 0xc) == 0;\n      if (bVar14) {\n        bVar14 = (input3 | input4 << 0xc) == 0;\n      }\n      if (bVar14) {\n        bVar14 = input2_shifted == input4;\n      }\n      if (!bVar14) {\n        input2_shifted = input2_shifted | 0x80000;\n      }\n      return CONCAT44(input2_shifted,uVar7);\n    }\n    if (((input2 ^ input4) & 0x7fffffff) != 0 || input1 != input3) {\n      if ((uVar7 | input1) == 0) {\n        input1 = input3;\n        input2 = input4;\n      }\n      return CONCAT44(input2,input1);\n    }\n    if (input2 != input4) {\n      return 0;\n    }\n    if (uVar7 >> 0x15 == 0) {\n      bVar14 = (input1 & 0x80000000) != 0;\n      input2_shifted = input2 * 2 + (uint)bVar14;\n      if (CARRY4(input2,input2) || CARRY4(input2 * 2,(uint)bVar14)) {\n        input2_shifted = input2_shifted | 0x80000000;\n      }\n      return CONCAT44(input2_shifted,input1 << 1);\n    }\n    if (uVar7 < 0xffc00000) {\n      return CONCAT44(input2 + 0x100000,input1);\n    }\n    input2 = input2 & 0x80000000;\nLAB_080003d4:\n    return (ulonglong)(input2 | 0x7ff00000) << 0x20;\n  }\n  uVar7 = uVar7 >> 0x15;\n  input2_shifted = input2_shifted >> 0x15;\n  difference = input2_shifted - uVar7;\n  bVar14 = difference != 0;\n  if (input2_shifted < uVar7) {\n    difference = -difference;\n  }\n  input1_shifted = input1;\n  uVar5 = input2;\n  if (bVar14 && uVar7 <= input2_shifted) {\n    uVar7 = uVar7 + difference;\n    input1_shifted = input3;\n    uVar5 = input4;\n    input3 = input1;\n    input4 = input2;\n  }\n  if (0x36 < difference) {\n    return CONCAT44(uVar5,input1_shifted);\n  }\n  input2_shifted = uVar5 & 0xfffff | 0x100000;\n  if ((uVar5 & 0x80000000) != 0) {\n    bVar14 = input1_shifted != 0;\n    input1_shifted = -input1_shifted;\n    input2_shifted = -input2_shifted - (uint)bVar14;\n  }\n  uVar5 = input4 & 0xfffff | 0x100000;\n  if ((input4 & 0x80000000) != 0) {\n    bVar14 = input3 != 0;\n    input3 = -input3;\n    uVar5 = -uVar5 - (uint)bVar14;\n  }\n  if (uVar7 == difference) {\n    uVar5 = uVar5 ^ 0x100000;\n    if (uVar7 == 0) {\n      input2_shifted = input2_shifted ^ 0x100000;\n      uVar7 = 1;\n    }\n    else {\n      difference = difference - 1;\n    }\n  }\n  uVar12 = -difference + 0x20;\n  if ((int)difference < 0x21) {\n    uVar11 = input3 << (uVar12 & 0xff);\n    input3 = input3 >> (difference & 0xff);\n    sum1 = input1_shifted + input3;\n    sum2 = uVar5 << (uVar12 & 0xff);\n    uVar12 = sum1 + sum2;\n    input2_shifted = input2_shifted + CARRY4(input1_shifted,input3) + ((int)uVar5 >> (difference & 0xff)) +\n            (uint)CARRY4(sum1,sum2);\n  }\n  else {\n    uVar11 = uVar5 << (-difference + 0x40 & 0xff);\n    if (input3 != 0) {\n      uVar11 = uVar11 | 2;\n    }\n    uVar5 = (int)uVar5 >> (difference - 0x20 & 0xff);\n    uVar12 = input1_shifted + uVar5;\n    input2_shifted = input2_shifted + ((int)uVar5 >> 0x1f) + (uint)CARRY4(input1_shifted,uVar5);\n  }\n  input2 = input2_shifted & 0x80000000;\n  difference = input2_shifted;\n  if ((int)input2_shifted < 0) {\n    bVar14 = uVar11 == 0;\n    uVar11 = -uVar11;\n    difference = -uVar12;\n    uVar12 = -(uint)!bVar14 - uVar12;\n    difference = -(uint)(bVar14 <= difference) - input2_shifted;\n  }\n  if (0xfffff < difference) {\n    input1_shifted = uVar7 - 1;\n    if (0x1fffff < difference) {\n      input2_shifted = difference & 1;\n      difference = difference >> 1;\n      carry = (byte)uVar12;\n      uVar12 = (uint)(input2_shifted != 0) << 0x1f | uVar12 >> 1;\n      uVar11 = (uint)(carry & 1) << 0x1f | uVar11 >> 1;\n      input1_shifted = uVar7;\n      if (0xffbfffff < uVar7 * 0x200000) goto LAB_080003d4;\n    }\nLAB_080002a0:\n    bVar14 = 0x7fffffff < uVar11;\n    if (uVar11 == 0x80000000) {\n      bVar14 = (uVar12 & 1) != 0;\n    }\n    return CONCAT44(difference + input1_shifted * 0x100000 + (uint)CARRY4(uVar12,(uint)bVar14) | input2,\n                    uVar12 + bVar14);\n  }\n  bVar13 = (uVar11 & 0x80000000) != 0;\n  uVar11 = uVar11 << 1;\n  input1_shifted = uVar12 * 2;\n  bVar14 = CARRY4(uVar12,uVar12);\n  uVar12 = uVar12 * 2 + (uint)bVar13;\n  difference = difference * 2 + (uint)(bVar14 || CARRY4(input1_shifted,(uint)bVar13));\n  input1_shifted = uVar7 - 2;\n  if ((difference & 0x100000) != 0) goto LAB_080002a0;\n  uVar5 = uVar12;\n  uVar7 = difference;\n  if (difference == 0) {\n    uVar5 = 0;\n    uVar7 = uVar12;\n  }\n  shift_amount2 = LZCOUNT(uVar7);\n  if (difference == 0) {\n    shift_amount2 = shift_amount2 + 0x20;\n  }\n  uVar12 = shift_amount2 - 0xb;\n  bVar15 = SBORROW4(uVar12,0x20);\n  difference = shift_amount2 - 0x2b;\n  bVar14 = (int)difference < 0;\n  bVar13 = difference == 0;\n  if ((int)uVar12 < 0x20) {\n    bVar15 = SCARRY4(difference,0xc);\n    shift_amount2 = shift_amount2 + -0x1f;\n    bVar14 = shift_amount2 < 0;\n    bVar13 = shift_amount2 == 0;\n    difference = uVar12;\n    if (!bVar13 && bVar14 == bVar15) {\n      uVar5 = uVar7 << (uVar12 & 0xff);\n      uVar7 = uVar7 >> (0xcU - shift_amount2 & 0xff);\n      goto LAB_08000318;\n    }\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar11 = 0x20 - difference;\n  }\n  uVar7 = uVar7 << (difference & 0xff);\n  if (bVar13 || bVar14 != bVar15) {\n    uVar7 = uVar7 | uVar5 >> (uVar11 & 0xff);\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar5 = uVar5 << (difference & 0xff);\n  }\nLAB_08000318:\n  if ((int)uVar12 <= (int)input1_shifted) {\n    return CONCAT44(uVar7 + (input1_shifted - uVar12) * 0x100000 | input2,uVar5);\n  }\n  difference = ~(input1_shifted - uVar12);\n  if ((int)difference < 0x1f) {\n    shift_amount2 = difference - 0x13;\n    if (shift_amount2 != 0 && shift_amount2 < 0 == SCARRY4(difference - 0x1f,0xc)) {\n      return CONCAT44(input2_shifted,uVar5 >> (0x20 - (0xcU - shift_amount2) & 0xff) | uVar7 << (0xcU - shift_amount2 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    difference = difference + 1;\n    return CONCAT44(input2 | uVar7 >> (difference & 0xff),\n                    uVar5 >> (difference & 0xff) | uVar7 << (0x20 - difference & 0xff));\n  }\n  return CONCAT44(input2_shifted,uVar7 >> (difference - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_08000194": "calculate_double_precision_08000194",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "shift_amount1",
                "bVar2": "carry",
                "uVar3": "sum1",
                "uVar4": "sum2",
                "iVar6": "shift_amount2",
                "uVar8": "input1_shifted",
                "uVar9": "input2_shifted",
                "uVar10": "difference"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_080015f8",
                "FUN_08000cd0",
                "FUN_080016b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800040c": {
            "entrypoint": "0x0800040c",
            "current_name": "shift_and_concat_0800040c",
            "code": "\nulonglong shiftAndConcat_0800040c(uint input)\n\n{\n  uint resultHigh;\n  uint shiftAmount;\n  int bitCount;\n  uint adjustedBitCount;\n  uint remainderBitCount;\n  bool isNegative;\n  bool isEqual;\n  bool isBorrow;\n  \n  if (input == 0) {\n    return 0;\n  }\n  resultHigh = 0;\n  bitCount = LZCOUNT(input);\n  adjustedBitCount = bitCount + 0x15;\n  isBorrow = SBORROW4(adjustedBitCount,0x20);\n  shiftAmount = bitCount - 0xb;\n  isNegative = (int)shiftAmount < 0;\n  isEqual = shiftAmount == 0;\n  if (adjustedBitCount < 0x20) {\n    isBorrow = SCARRY4(shiftAmount,0xc);\n    isNegative = false;\n    isEqual = bitCount + 1 == 0;\n    shiftAmount = adjustedBitCount;\n    if (!isEqual && isBorrow == false) {\n      resultHigh = input << adjustedBitCount;\n      input = input >> (0xcU - (bitCount + 1) & 0xff);\n      goto LAB_08000318;\n    }\n  }\n  if (isEqual || isNegative != isBorrow) {\n    remainderBitCount = 0x20 - shiftAmount;\n  }\n  input = input << (shiftAmount & 0xff);\n  if (isEqual || isNegative != isBorrow) {\n    input = input | 0U >> (remainderBitCount & 0xff);\n  }\n  if (isEqual || isNegative != isBorrow) {\n    resultHigh = 0 << (shiftAmount & 0xff);\n  }\nLAB_08000318:\n  if (adjustedBitCount < 0x433) {\n    return CONCAT44(input + (0x432 - adjustedBitCount) * 0x100000,resultHigh);\n  }\n  shiftAmount = ~(0x432 - adjustedBitCount);\n  if (0x1e < (int)shiftAmount) {\n    return (ulonglong)(input >> (shiftAmount - 0x1f & 0xff));\n  }\n  bitCount = shiftAmount - 0x13;\n  if (bitCount == 0 || bitCount < 0 != SCARRY4(shiftAmount - 0x1f,0xc)) {\n    shiftAmount = shiftAmount + 1;\n    return CONCAT44(input >> (shiftAmount & 0xff),\n                    resultHigh >> (shiftAmount & 0xff) | input << (0x20 - shiftAmount & 0xff));\n  }\n  return (ulonglong)(resultHigh >> (0x20 - (0xcU - bitCount) & 0xff) | input << (0xcU - bitCount & 0xff));\n}\n\n",
            "renaming": {
                "FUN_0800040c": "shift_and_concat_0800040c",
                "param_1": "input",
                "uVar1": "resultHigh",
                "uVar2": "shiftAmount",
                "iVar3": "bitCount",
                "uVar4": "adjustedBitCount",
                "in_r12": "remainderBitCount",
                "bVar5": "isNegative",
                "bVar6": "isEqual",
                "bVar7": "isBorrow"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_080015f8",
                "FUN_08000cd0",
                "FUN_08001814",
                "FUN_08001918"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800042c": {
            "entrypoint": "0x0800042c",
            "current_name": "shift_and_merge_0800042c",
            "code": "\nulonglong shift_and_merge_0800042c(uint input)\n\n{\n  uint shift_count;\n  uint abs_input;\n  uint shift_dist;\n  int leading_zeros;\n  uint shifted_count;\n  uint sign_bit;\n  uint remaining_shift;\n  bool shift_dist_negative;\n  bool shift_dist_zero;\n  bool shift_dist_carry;\n  \n  if (input == 0) {\n    return 0;\n  }\n  sign_bit = input & 0x80000000;\n  abs_input = input;\n  if ((int)sign_bit < 0) {\n    abs_input = -input;\n  }\n  shift_count = 0;\n  leading_zeros = LZCOUNT(abs_input);\n  shifted_count = leading_zeros + 0x15;\n  shift_dist_carry = SBORROW4(shifted_count,0x20);\n  shift_dist = leading_zeros - 0xb;\n  shift_dist_negative = (int)shift_dist < 0;\n  shift_dist_zero = shift_dist == 0;\n  if (shifted_count < 0x20) {\n    shift_dist_carry = SCARRY4(shift_dist,0xc);\n    shift_dist_negative = false;\n    shift_dist_zero = leading_zeros + 1 == 0;\n    shift_dist = shifted_count;\n    if (!shift_dist_zero && shift_dist_carry == false) {\n      shift_count = abs_input << shifted_count;\n      abs_input = abs_input >> (0xcU - (leading_zeros + 1) & 0xff);\n      goto perform_shift;\n    }\n  }\n  if (shift_dist_zero || shift_dist_negative != shift_dist_carry) {\n    remaining_shift = 0x20 - shift_dist;\n  }\n  abs_input = abs_input << (shift_dist & 0xff);\n  if (shift_dist_zero || shift_dist_negative != shift_dist_carry) {\n    abs_input = abs_input | 0U >> (remaining_shift & 0xff);\n  }\n  if (shift_dist_zero || shift_dist_negative != shift_dist_carry) {\n    shift_count = 0 << (shift_dist & 0xff);\n  }\nperform_shift:\n  if (shifted_count < 0x433) {\n    return CONCAT44(abs_input + (0x432 - shifted_count) * 0x100000 | sign_bit,shift_count);\n  }\n  shift_dist = ~(0x432 - shifted_count);\n  if (0x1e < (int)shift_dist) {\n    return CONCAT44(input,abs_input >> (shift_dist - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  leading_zeros = shift_dist - 0x13;\n  if (leading_zeros == 0 || leading_zeros < 0 != SCARRY4(shift_dist - 0x1f,0xc)) {\n    shift_dist = shift_dist + 1;\n    return CONCAT44(sign_bit | abs_input >> (shift_dist & 0xff),\n                    shift_count >> (shift_dist & 0xff) | abs_input << (0x20 - shift_dist & 0xff));\n  }\n  return CONCAT44(input,shift_count >> (0x20 - (0xcU - leading_zeros) & 0xff) | abs_input << (0xcU - leading_zeros & 0xff))\n         & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800042c": "shift_and_merge_0800042c",
                "param_1": "input",
                "uVar1": "shift_count",
                "uVar2": "abs_input",
                "uVar3": "shift_dist",
                "iVar4": "leading_zeros",
                "uVar5": "shifted_count",
                "uVar6": "sign_bit",
                "in_r12": "remaining_shift",
                "bVar7": "shift_dist_negative",
                "bVar8": "shift_dist_zero",
                "bVar9": "shift_dist_carry",
                "LAB_08000318": "perform_shift"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0",
                "FUN_08001918"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080004f8": {
            "entrypoint": "0x080004f8",
            "current_name": "calculate_result_080004f8",
            "code": "\nulonglong calculateResult_080004f8(undefined4 value_1,uint value_2,uint value_3,uint value_4)\n\n{\n  ulonglong temp_1;\n  longlong temp_2;\n  uint temp_3;\n  uint temp_4;\n  int temp_5;\n  uint temp_6;\n  uint temp_7;\n  uint temp_8;\n  uint temp_9;\n  bool temp_10;\n  bool temp_11;\n  bool temp_12;\n  ulonglong temp_13;\n  \n  temp_13 = CONCAT44(value_2,value_1);\n  temp_8 = 0x7ff;\n  temp_4 = value_2 >> 0x14 & 0x7ff;\n  temp_10 = temp_4 == 0;\n  if (!temp_10) {\n    temp_7 = value_4 >> 0x14 & 0x7ff;\n    temp_10 = temp_7 == 0;\n  }\n  if (!temp_10) {\n    temp_10 = temp_4 == 0x7ff;\n  }\n  if (!temp_10) {\n    temp_10 = temp_7 == 0x7ff;\n  }\n  if (temp_10) {\n    temp_13 = FUN_080006d4();\n  }\n  temp_3 = (uint)(temp_13 >> 0x20);\n  temp_5 = temp_4 + temp_7;\n  temp_4 = temp_3 ^ value_4;\n  temp_3 = temp_3 & ~(temp_8 << 0x15);\n  value_4 = value_4 & ~(temp_8 << 0x15);\n  temp_10 = ((uint)temp_13 | temp_3 << 0xc) == 0;\n  if (!temp_10) {\n    temp_10 = (value_3 | value_4 << 0xc) == 0;\n  }\n  temp_3 = temp_3 | 0x100000;\n  value_4 = value_4 | 0x100000;\n  if (temp_10) {\n    value_3 = (uint)temp_13 | value_3;\n    value_4 = (temp_4 & 0x80000000 | temp_3) ^ value_4;\n    temp_4 = temp_8 >> 1;\n    temp_12 = SBORROW4(temp_5,temp_4);\n    temp_6 = temp_5 - temp_4;\n    temp_10 = temp_6 == 0;\n    temp_3 = temp_6;\n    if (!temp_10 && (int)temp_4 <= temp_5) {\n      temp_12 = SBORROW4(temp_8,temp_6);\n      temp_3 = temp_8 - temp_6;\n      temp_10 = temp_8 == temp_6;\n    }\n    if (!temp_10 && (int)temp_3 < 0 == temp_12) {\n      value_4 = value_4 | temp_6 * 0x100000;\n    }\n    if (!temp_10 && (int)temp_3 < 0 == temp_12) {\n      return CONCAT44(value_4,value_3);\n    }\n    value_4 = value_4 | 0x100000;\n    temp_8 = 0;\n    temp_12 = SBORROW4(temp_6,1);\n    temp_6 = temp_6 - 1;\n    temp_10 = temp_6 == 0;\n    temp_4 = temp_6;\n  }\n  else {\n    temp_1 = (temp_13 & 0xffffffff) * (ulonglong)value_3;\n    temp_13 = (temp_13 & 0xffffffff) * (ulonglong)value_4 +\n             (ulonglong)temp_3 * (ulonglong)value_3 + (temp_1 >> 0x20);\n    temp_9 = (uint)temp_13;\n    temp_2 = (ulonglong)temp_3 * (ulonglong)value_4 + (temp_13 >> 0x20);\n    temp_8 = (uint)temp_2;\n    temp_3 = (uint)((ulonglong)temp_2 >> 0x20);\n    if ((int)temp_1 != 0) {\n      temp_9 = temp_9 | 1;\n    }\n    temp_6 = (temp_5 + -0x3ff) - (uint)(temp_3 < 0x200);\n    if (temp_3 < 0x200) {\n      temp_10 = (temp_9 & 0x80000000) != 0;\n      temp_9 = temp_9 << 1;\n      temp_2 = CONCAT44(temp_3 * 2 + (uint)(CARRY4(temp_8,temp_8) || CARRY4(temp_8 * 2,(uint)temp_10)),\n                       temp_8 * 2 + (uint)temp_10);\n    }\n    value_4 = temp_4 & 0x80000000 | (int)((ulonglong)temp_2 >> 0x20) << 0xb | (uint)temp_2 >> 0x15;\n    value_3 = (uint)temp_2 << 0xb | temp_9 >> 0x15;\n    temp_8 = temp_9 * 0x800;\n    temp_11 = 0xfc < temp_6;\n    temp_12 = SBORROW4(temp_6,0xfd);\n    temp_3 = temp_6 - 0xfd;\n    temp_10 = temp_3 == 0;\n    temp_4 = temp_3;\n    if (temp_11 && !temp_10) {\n      temp_11 = 0x6ff < temp_3;\n      temp_12 = SBORROW4(temp_3,0x700);\n      temp_4 = temp_6 - 0x7fd;\n      temp_10 = temp_3 == 0x700;\n    }\n    if (!temp_11 || temp_10) {\n      temp_10 = 0x7fffffff < temp_8;\n      if (temp_8 == 0x80000000) {\n        temp_10 = (temp_9 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(value_4 + temp_6 * 0x100000 + (uint)CARRY4(value_3,(uint)temp_10),value_3 + temp_10\n                     );\n    }\n  }\n  if (!temp_10 && (int)temp_4 < 0 == temp_12) {\n    return (ulonglong)(value_4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  temp_11 = SCARRY4(temp_6,0x36);\n  temp_10 = (int)(temp_6 + 0x36) < 0;\n  temp_12 = temp_6 == 0xffffffca;\n  if (temp_12 || temp_10 != temp_11) {\n    value_3 = 0;\n  }\n  if (temp_12 || temp_10 != temp_11) {\n    value_4 = value_4 & 0x80000000;\n  }\n  if (temp_12 || temp_10 != temp_11) {\n    return CONCAT44(value_4,value_3);\n  }\n  temp_4 = -temp_6;\n  temp_3 = temp_4 - 0x20;\n  if (0x1f < (int)temp_4) {\n    temp_6 = value_3 >> (temp_3 & 0xff) | value_4 << (0x20 - temp_3 & 0xff);\n    temp_4 = (value_4 >> (temp_3 & 0xff) & ~((value_4 & 0x80000000) >> (temp_3 & 0xff))) -\n            ((int)temp_6 >> 0x1f);\n    if ((temp_8 | value_3 << (0x20 - temp_3 & 0xff) | temp_6 << 1) == 0) {\n      temp_4 = temp_4 & ~(temp_6 >> 0x1f);\n    }\n    return CONCAT44(value_4,temp_4) & 0x80000000ffffffff;\n  }\n  temp_5 = temp_4 - 0x14;\n  if (temp_5 == 0 || temp_5 < 0 != SCARRY4(temp_3,0xc)) {\n    temp_9 = value_3 << (temp_6 + 0x20 & 0xff);\n    temp_3 = value_3 >> (temp_4 & 0xff) | value_4 << (temp_6 + 0x20 & 0xff);\n    temp_6 = temp_3 + -((int)temp_9 >> 0x1f);\n    if ((temp_8 | temp_9 << 1) == 0) {\n      temp_6 = temp_6 & ~(temp_9 >> 0x1f);\n    }\n    return CONCAT44((value_4 & 0x80000000) +\n                    ((value_4 & 0x7fffffff) >> (temp_4 & 0xff)) +\n                    (uint)CARRY4(temp_3,-((int)temp_9 >> 0x1f)),temp_6);\n  }\n  temp_4 = 0xc - temp_5;\n  temp_6 = value_3 << (temp_4 & 0xff);\n  temp_4 = value_3 >> (0x20 - temp_4 & 0xff) | value_4 << (temp_4 & 0xff);\n  temp_3 = temp_4 + -((int)temp_6 >> 0x1f);\n  if ((temp_8 | temp_6 << 1) == 0) {\n    temp_3 = temp_3 & ~(temp_6 >> 0x1f);\n  }\n  return CONCAT44((value_4 & 0x80000000) + (uint)CARRY4(temp_4,-((int)temp_6 >> 0x1f)),temp_3);\n}\n\n",
            "renaming": {
                "FUN_080004f8": "calculate_result_080004f8",
                "param_1": "value_1",
                "param_2": "value_2",
                "param_3": "value_3",
                "param_4": "value_4",
                "uVar1": "temp_1",
                "lVar2": "temp_2",
                "uVar3": "temp_3",
                "uVar4": "temp_4",
                "iVar5": "temp_5",
                "uVar6": "temp_6",
                "unaff_r5": "temp_7",
                "uVar7": "temp_8",
                "uVar8": "temp_9",
                "bVar9": "temp_10",
                "bVar10": "temp_11",
                "bVar11": "temp_12",
                "uVar12": "temp_13"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_080015f8",
                "FUN_08001814",
                "FUN_08001918",
                "FUN_080016b4"
            ],
            "called": [
                "FUN_080006d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080006d4": {
            "entrypoint": "0x080006d4",
            "current_name": "reverse_bits_080006d4",
            "code": "\nulonglong reverseBits_080006d4(uint input1,uint input2,uint input3,uint input4)\n\n{\n  uint bit1;\n  uint bit2;\n  uint bit3;\n  uint bit4;\n  uint bit5;\n  bool isZero;\n  \n  bit3 = bit5 & input4 >> 0x14;\n  if (bit2 != bit5 && bit3 != bit5) {\n    isZero = (input1 | input2 << 1) == 0;\n    if (!isZero) {\n      isZero = (input3 | input4 << 1) == 0;\n    }\n    if (isZero) {\n      return (ulonglong)((input2 ^ input4) & 0x80000000) << 0x20;\n    }\n    if (bit2 == 0) {\n      bit4 = input2 & 0x80000000;\n      do {\n        bit1 = input1 & 0x80000000;\n        input1 = input1 << 1;\n        input2 = input2 * 2 + (uint)(bit1 != 0);\n      } while ((input2 & 0x100000) == 0);\n      input2 = input2 | bit4;\n      if (bit3 != 0) {\n        return CONCAT44(input2,input1);\n      }\n    }\n    do {\n      bit3 = input3 & 0x80000000;\n      input3 = input3 << 1;\n      input4 = input4 * 2 + (uint)(bit3 != 0);\n    } while ((input4 & 0x100000) == 0);\n    return CONCAT44(input2,input1);\n  }\n  isZero = (input1 | input2 << 1) == 0;\n  if (isZero) {\n    input2 = input4;\n    input1 = input3;\n  }\n  if (!isZero) {\n    isZero = (input3 | input4 << 1) == 0;\n  }\n  bit4 = input2;\n  if (((!isZero) && ((bit2 != bit5 || ((input1 | input2 << 0xc) == 0)))) &&\n     ((bit3 != bit5 || (input1 = input3, bit4 = input4, (input3 | input4 << 0xc) == 0)))) {\n    return (ulonglong)((input2 ^ input4) & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  return CONCAT44(bit4,input1) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_080006d4": "reverse_bits_080006d4",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "bit1",
                "unaff_r4": "bit2",
                "uVar2": "bit3",
                "uVar3": "bit4",
                "in_r12": "bit5",
                "bVar4": "isZero"
            },
            "calling": [
                "FUN_080004f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800074c": {
            "entrypoint": "0x0800074c",
            "current_name": "calculate_floating_point_0800074c",
            "code": "\nulonglong calculateFloatingPoint_0800074c(undefined4 value1,uint value2,uint value3,uint value4)\n\n{\n  uint integer1;\n  uint integer2;\n  uint integer3;\n  uint integer4;\n  uint integer5;\n  uint integer6;\n  uint integer7;\n  int difference;\n  uint exponent1;\n  uint exponent2;\n  uint exponent3;\n  uint mantissa1;\n  uint mantissa2;\n  uint mask;\n  bool isZero;\n  bool isCarry;\n  bool isOverflow;\n  undefined8 concatenatedValue;\n  \n  concatenatedValue = CONCAT44(value2,value1);\n  mask = 0x7ff;\n  integer7 = value2 >> 0x14 & 0x7ff;\n  isZero = integer7 == 0;\n  if (!isZero) {\n    exponent2 = value4 >> 0x14 & 0x7ff;\n    isZero = exponent2 == 0;\n  }\n  if (!isZero) {\n    isZero = integer7 == 0x7ff;\n  }\n  if (!isZero) {\n    isZero = exponent2 == 0x7ff;\n  }\n  if (isZero) {\n    concatenatedValue = FUN_080008ba();\n  }\n  exponent1 = (uint)((ulonglong)concatenatedValue >> 0x20);\n  mantissa1 = (uint)concatenatedValue;\n  difference = integer7 - exponent2;\n  if ((value3 | value4 << 0xc) == 0) {\n    integer7 = (exponent1 ^ value4) & 0x80000000 | exponent1 & 0xfffff;\n    isOverflow = SCARRY4(difference,mask >> 1);\n    exponent1 = difference + (mask >> 1);\n    isZero = (int)exponent1 < 0;\n    isCarry = exponent1 == 0;\n    if (!isCarry && isZero == isOverflow) {\n      isOverflow = SBORROW4(mask,exponent1);\n      isZero = (int)(mask - exponent1) < 0;\n      isCarry = mask == exponent1;\n    }\n    if (!isCarry && isZero == isOverflow) {\n      integer7 = integer7 | exponent1 * 0x100000;\n    }\n    if (!isCarry && isZero == isOverflow) {\n      return CONCAT44(integer7,mantissa1);\n    }\n    integer7 = integer7 | 0x100000;\n    mask = 0;\n    isCarry = SBORROW4(exponent1,1);\n    exponent1 = exponent1 - 1;\n    isZero = exponent1 == 0;\n    integer3 = exponent1;\n  }\n  else {\n    integer3 = (value4 << 0xc) >> 4 | 0x10000000 | value3 >> 0x18;\n    mask = value3 << 8;\n    exponent3 = (exponent1 << 0xc) >> 4 | 0x10000000 | mantissa1 >> 0x18;\n    mantissa1 = mantissa1 * 0x100;\n    integer7 = (exponent1 ^ value4) & 0x80000000;\n    isZero = integer3 <= exponent3;\n    if (exponent3 == integer3) {\n      isZero = mask <= mantissa1;\n    }\n    difference = difference + (uint)isZero;\n    exponent1 = difference + 0x3fd;\n    if (isZero == false) {\n      integer3 = integer3 >> 1;\n      mask = (uint)((value3 >> 0x18 & 1) != 0) << 0x1f | mask >> 1;\n    }\n    mantissa2 = mantissa1 - mask;\n    exponent3 = (exponent3 - integer3) - (uint)(mantissa1 < mask);\n    integer4 = integer3 >> 1;\n    integer1 = (uint)((integer3 & 1) != 0) << 0x1f | mask >> 1;\n    mantissa1 = 0x100000;\n    integer3 = 0x80000;\n    while( true ) {\n      isZero = integer1 <= mantissa2;\n      if (integer4 < exponent3 || exponent3 - integer4 < (uint)isZero) {\n        mantissa2 = mantissa2 - integer1;\n        mantissa1 = mantissa1 | integer3;\n        exponent3 = (exponent3 - integer4) - (uint)!isZero;\n      }\n      integer5 = integer4 >> 1;\n      integer1 = (uint)((integer4 & 1) != 0) << 0x1f | integer1 >> 1;\n      isCarry = integer1 <= mantissa2;\n      isZero = exponent3 - integer5 < (uint)isCarry;\n      mask = exponent3;\n      if (integer5 < exponent3 || isZero) {\n        mantissa2 = mantissa2 - integer1;\n        mask = (exponent3 - integer5) - (uint)!isCarry;\n      }\n      if (integer5 < exponent3 || isZero) {\n        mantissa1 = mantissa1 | integer3 >> 1;\n      }\n      exponent3 = integer4 >> 2;\n      integer2 = (uint)((integer5 & 1) != 0) << 0x1f | integer1 >> 1;\n      isCarry = integer2 <= mantissa2;\n      isZero = mask - exponent3 < (uint)isCarry;\n      integer5 = mask;\n      if (exponent3 < mask || isZero) {\n        mantissa2 = mantissa2 - integer2;\n        integer5 = (mask - exponent3) - (uint)!isCarry;\n      }\n      if (exponent3 < mask || isZero) {\n        mantissa1 = mantissa1 | integer3 >> 2;\n      }\n      integer6 = integer4 >> 3;\n      integer1 = (uint)((exponent3 & 1) != 0) << 0x1f | integer2 >> 1;\n      isCarry = integer1 <= mantissa2;\n      isZero = integer5 - integer6 < (uint)isCarry;\n      exponent3 = integer5;\n      if (integer6 < integer5 || isZero) {\n        mantissa2 = mantissa2 - integer1;\n        exponent3 = (integer5 - integer6) - (uint)!isCarry;\n      }\n      if (integer6 < integer5 || isZero) {\n        mantissa1 = mantissa1 | integer3 >> 3;\n      }\n      mask = exponent3 | mantissa2;\n      if (mask == 0) break;\n      exponent3 = exponent3 << 4 | mantissa2 >> 0x1c;\n      mantissa2 = mantissa2 << 4;\n      integer4 = integer4 & 0xfffffff8 | integer1 >> 0x1d;\n      integer1 = (integer2 >> 1) << 3;\n      integer3 = integer3 >> 4;\n      if (integer3 == 0) {\n        integer6 = integer4;\n        if ((integer7 & 0x100000) != 0) goto LAB_0800086a;\n        integer7 = integer7 | mantissa1;\n        mantissa1 = 0;\n        integer3 = 0x80000000;\n      }\n    }\n    if ((integer7 & 0x100000) == 0) {\n      integer7 = integer7 | mantissa1;\n      mantissa1 = 0;\n    }\nLAB_0800086a:\n    isOverflow = 0xfc < exponent1;\n    isCarry = SBORROW4(exponent1,0xfd);\n    integer4 = difference + 0x300;\n    isZero = integer4 == 0;\n    integer3 = integer4;\n    if (isOverflow && !isZero) {\n      isOverflow = 0x6ff < integer4;\n      isCarry = SBORROW4(integer4,0x700);\n      integer3 = difference - 0x400;\n      isZero = integer4 == 0x700;\n    }\n    if (!isOverflow || isZero) {\n      isZero = integer6 <= exponent3;\n      if (exponent3 == integer6) {\n        isZero = integer1 <= mantissa2;\n      }\n      if (exponent3 == integer6 && mantissa2 == integer1) {\n        isZero = (mantissa1 & 1) != 0;\n      }\n      return CONCAT44(integer7 + exponent1 * 0x100000 + (uint)CARRY4(mantissa1,(uint)isZero),mantissa1 + isZero);\n    }\n  }\n  if (!isZero && (int)integer3 < 0 == isCarry) {\n    return (ulonglong)(integer7 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  isOverflow = SCARRY4(exponent1,0x36);\n  isZero = (int)(exponent1 + 0x36) < 0;\n  isCarry = exponent1 == 0xffffffca;\n  if (isCarry || isZero != isOverflow) {\n    mantissa1 = 0;\n  }\n  if (isCarry || isZero != isOverflow) {\n    integer7 = integer7 & 0x80000000;\n  }\n  if (isCarry || isZero != isOverflow) {\n    return CONCAT44(integer7,mantissa1);\n  }\n  integer3 = -exponent1;\n  exponent3 = integer3 - 0x20;\n  if (0x1f < (int)integer3) {\n    integer3 = mantissa1 >> (exponent3 & 0xff) | integer7 << (0x20 - exponent3 & 0xff);\n    exponent1 = (integer7 >> (exponent3 & 0xff) & ~((integer7 & 0x80000000) >> (exponent3 & 0xff))) -\n            ((int)integer3 >> 0x1f);\n    if ((mask | mantissa1 << (0x20 - exponent3 & 0xff) | integer3 << 1) == 0) {\n      exponent1 = exponent1 & ~(integer3 >> 0x1f);\n    }\n    return CONCAT44(integer7,exponent1) & 0x80000000ffffffff;\n  }\n  difference = integer3 - 0x14;\n  if (difference != 0 && difference < 0 == SCARRY4(exponent3,0xc)) {\n    exponent1 = 0xc - difference;\n    integer3 = mantissa1 << (exponent1 & 0xff);\n    mantissa1 = mantissa1 >> (0x20 - exponent1 & 0xff) | integer7 << (exponent1 & 0xff);\n    exponent1 = mantissa1 + -((int)integer3 >> 0x1f);\n    if ((mask | integer3 << 1) == 0) {\n      exponent1 = exponent1 & ~(integer3 >> 0x1f);\n    }\n    return CONCAT44((integer7 & 0x80000000) + (uint)CARRY4(mantissa1,-((int)integer3 >> 0x1f)),exponent1);\n  }\n  exponent3 = mantissa1 << (exponent1 + 0x20 & 0xff);\n  mantissa1 = mantissa1 >> (integer3 & 0xff) | integer7 << (exponent1 + 0x20 & 0xff);\n  exponent1 = mantissa1 + -((int)exponent3 >> 0x1f);\n  if ((mask | exponent3 << 1) == 0) {\n    exponent1 = exponent1 & ~(exponent3 >> 0x1f);\n  }\n  return CONCAT44((integer7 & 0x80000000) +\n                  ((integer7 & 0x7fffffff) >> (integer3 & 0xff)) +\n                  (uint)CARRY4(mantissa1,-((int)exponent3 >> 0x1f)),exponent1);\n}\n\n",
            "renaming": {
                "FUN_0800074c": "calculate_floating_point_0800074c",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4",
                "uVar1": "integer1",
                "uVar2": "integer2",
                "uVar3": "integer3",
                "uVar4": "integer4",
                "uVar5": "integer5",
                "uVar6": "integer6",
                "uVar7": "integer7",
                "iVar8": "difference",
                "uVar9": "exponent1",
                "unaff_r5": "exponent2",
                "uVar10": "exponent3",
                "uVar11": "mantissa1",
                "uVar12": "mantissa2",
                "uVar13": "mask",
                "bVar14": "isZero",
                "bVar15": "isCarry",
                "bVar16": "isOverflow",
                "uVar17": "concatenatedValue"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_080015f8",
                "FUN_08001814",
                "FUN_08001918"
            ],
            "called": [
                "FUN_080008ba"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080008ba": {
            "entrypoint": "0x080008ba",
            "current_name": "binary_to_double_080008ba",
            "code": "\nulonglong binary_to_double_080008ba(uint exponent_bits,uint mantissa_bits,uint exponent_bits_copy,uint mantissa_bits_copy)\n\n{\n  uint bit_check_exponent;\n  uint exponent_bits_copy_copy;\n  uint bit_shifted_exponent;\n  uint mantissa_bits_copy_copy;\n  uint bit_shifted_mantissa;\n  bool check_zero_condition;\n  \n  bit_shifted_exponent = bit_shifted_mantissa & mantissa_bits_copy >> 0x14;\n  mantissa_bits_copy_copy = mantissa_bits;\n  if (exponent_bits_copy_copy != bit_shifted_mantissa || bit_shifted_exponent != bit_shifted_mantissa) {\n    if (exponent_bits_copy_copy == bit_shifted_mantissa) {\n      if (((exponent_bits | mantissa_bits << 0xc) == 0) && (exponent_bits = exponent_bits_copy, mantissa_bits_copy_copy = mantissa_bits_copy, bit_shifted_exponent != bit_shifted_mantissa)\n         ) {\nLAB_0800072c:\n        return (ulonglong)((mantissa_bits ^ mantissa_bits_copy) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n    }\n    else if (bit_shifted_exponent == bit_shifted_mantissa) {\n      exponent_bits = exponent_bits_copy;\n      mantissa_bits_copy_copy = mantissa_bits_copy;\n      if ((exponent_bits_copy | mantissa_bits_copy << 0xc) == 0) {\nLAB_080006f0:\n        return (ulonglong)((mantissa_bits ^ mantissa_bits_copy) & 0x80000000) << 0x20;\n      }\n    }\n    else {\n      check_zero_condition = (exponent_bits | mantissa_bits << 1) == 0;\n      if (!check_zero_condition) {\n        check_zero_condition = (exponent_bits_copy | mantissa_bits_copy << 1) == 0;\n      }\n      if (!check_zero_condition) {\n        if (exponent_bits_copy_copy == 0) {\n          mantissa_bits_copy_copy = mantissa_bits & 0x80000000;\n          do {\n            bit_check_exponent = exponent_bits & 0x80000000;\n            exponent_bits = exponent_bits << 1;\n            mantissa_bits = mantissa_bits * 2 + (uint)(bit_check_exponent != 0);\n          } while ((mantissa_bits & 0x100000) == 0);\n          mantissa_bits = mantissa_bits | mantissa_bits_copy_copy;\n          if (bit_shifted_exponent != 0) {\n            return CONCAT44(mantissa_bits,exponent_bits);\n          }\n        }\n        do {\n          mantissa_bits_copy_copy = exponent_bits_copy & 0x80000000;\n          exponent_bits_copy = exponent_bits_copy << 1;\n          mantissa_bits_copy = mantissa_bits_copy * 2 + (uint)(mantissa_bits_copy_copy != 0);\n        } while ((mantissa_bits_copy & 0x100000) == 0);\n        return CONCAT44(mantissa_bits,exponent_bits);\n      }\n      if ((exponent_bits | mantissa_bits << 1) != 0) goto LAB_0800072c;\n      if ((exponent_bits_copy | mantissa_bits_copy << 1) != 0) goto LAB_080006f0;\n    }\n  }\n  return CONCAT44(mantissa_bits_copy_copy,exponent_bits) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_080008ba": "binary_to_double_080008ba",
                "param_1": "exponent_bits",
                "param_2": "mantissa_bits",
                "param_3": "exponent_bits_copy",
                "param_4": "mantissa_bits_copy",
                "uVar1": "bit_check_exponent",
                "unaff_r4": "exponent_bits_copy_copy",
                "uVar2": "bit_shifted_exponent",
                "uVar3": "mantissa_bits_copy_copy",
                "in_r12": "bit_shifted_mantissa",
                "bVar4": "check_zero_condition"
            },
            "calling": [
                "FUN_0800074c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800092c": {
            "entrypoint": "0x0800092c",
            "current_name": "check_params_0800092c",
            "code": "\nuint check_params_0800092c(uint value1,uint value2,uint value3,uint value4)\n\n{\n  uint result;\n  bool hasZeroParams;\n  bool hasNegativeResult;\n  \n  if (((int)(value2 << 1) >> 0x15 == -1 || (int)(value4 << 1) >> 0x15 == -1) &&\n     ((((int)(value2 << 1) >> 0x15 == -1 && ((value1 | value2 << 0xc) != 0)) ||\n      (((int)(value4 << 1) >> 0x15 == -1 && ((value3 | value4 << 0xc) != 0)))))) {\n    return 1;\n  }\n  hasZeroParams = (value1 | value2 << 1) == 0;\n  if (hasZeroParams) {\n    hasZeroParams = (value3 | value4 << 1) == 0;\n  }\n  if (!hasZeroParams) {\n    hasZeroParams = value2 == value4;\n  }\n  if (hasZeroParams) {\n    hasZeroParams = value1 == value3;\n  }\n  if (!hasZeroParams) {\n    result = value2 ^ value4;\n    hasZeroParams = result == 0;\n    if (-1 < (int)result) {\n      hasZeroParams = value2 == value4;\n    }\n    hasNegativeResult = -1 < (int)result && value4 <= value2;\n    if (hasZeroParams) {\n      hasNegativeResult = value3 <= value1;\n    }\n    value4 = (int)value4 >> 0x1f;\n    if (!hasNegativeResult) {\n      value4 = ~value4;\n    }\n    return value4 | 1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800092c": "check_params_0800092c",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4",
                "uVar1": "result",
                "bVar2": "hasZeroParams",
                "bVar3": "hasNegativeResult"
            },
            "calling": [
                "FUN_080009b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009a8": {
            "entrypoint": "0x080009a8",
            "current_name": "execute_function_080009a8",
            "code": "\nvoid execute_function_080009a8(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  FUN_080009b8(param_3,param_4,param_1,param_2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080009a8": "execute_function_080009a8"
            },
            "calling": [
                "FUN_08000a18",
                "FUN_08000a04"
            ],
            "called": [
                "FUN_080009b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009b8": {
            "entrypoint": "0x080009b8",
            "current_name": "initialize_080009b8",
            "code": "\nundefined4 initialize_080009b8(undefined4 input_param)\n\n{\n  FUN_0800092c();\n  return input_param;\n}\n\n",
            "renaming": {
                "FUN_080009b8": "initialize_080009b8",
                "param_1": "input_param"
            },
            "calling": [
                "FUN_080009c8",
                "FUN_080009f0",
                "FUN_080009dc",
                "FUN_080009a8"
            ],
            "called": [
                "FUN_0800092c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009c8": {
            "entrypoint": "0x080009c8",
            "current_name": "is_zero_character_present_080009c8",
            "code": "\nbool isZeroCharacterPresent_080009c8(void)\n\n{\n  char character;\n  \n  FUN_080009b8();\n  return character != '\\0';\n}\n\n",
            "renaming": {
                "FUN_080009c8": "is_zero_character_present_080009c8",
                "in_ZR": "character"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080009b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009dc": {
            "entrypoint": "0x080009dc",
            "current_name": "check_if_string_empty_080009dc",
            "code": "\nbool check_if_string_empty_080009dc(void)\n\n{\n  char user_input;\n  \n  FUN_080009b8();\n  return user_input == '\\0';\n}\n\n",
            "renaming": {
                "FUN_080009dc": "check_if_string_empty_080009dc",
                "in_CY": "user_input"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0",
                "FUN_080019f6",
                "FUN_08001814",
                "FUN_080016b4",
                "FUN_08001960"
            ],
            "called": [
                "FUN_080009b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009f0": {
            "entrypoint": "0x080009f0",
            "current_name": "check_cy_and_zr_080009f0",
            "code": "\nbool check_CY_and_ZR_080009f0(void)\n\n{\n  undefined is_ZR_set;\n  undefined is_CY_set;\n  \n  FUN_080009b8();\n  return !(bool)is_CY_set || (bool)is_ZR_set;\n}\n\n",
            "renaming": {
                "FUN_080009f0": "check_cy_and_zr_080009f0",
                "in_CY": "is_CY_set",
                "in_ZR": "is_ZR_set"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080009b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a04": {
            "entrypoint": "0x08000a04",
            "current_name": "check_cy_and_zr_08000a04",
            "code": "\nbool check_CY_and_ZR_08000a04(void)\n\n{\n  undefined zero_flag;\n  undefined carry_flag;\n  \n  FUN_080009a8();\n  return !(bool)carry_flag || (bool)zero_flag;\n}\n\n",
            "renaming": {
                "FUN_08000a04": "check_cy_and_zr_08000a04",
                "in_ZR": "zero_flag",
                "in_CY": "carry_flag"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08001960"
            ],
            "called": [
                "FUN_080009a8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a18": {
            "entrypoint": "0x08000a18",
            "current_name": "check_if_in_cy_empty_08000a18",
            "code": "\nbool check_if_in_CY_empty_08000a18(void)\n\n{\n  char input_character;\n  \n  FUN_080009a8();\n  return input_character == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08000a18": "check_if_in_cy_empty_08000a18",
                "in_CY": "input_character"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_080019f6",
                "FUN_08000cd0",
                "FUN_080016b4",
                "FUN_08001960"
            ],
            "called": [
                "FUN_080009a8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a2c": {
            "entrypoint": "0x08000a2c",
            "current_name": "check_parameters_08000a2c",
            "code": "\nundefined4 check_parameters_08000a2c(uint input_1,int input_2,uint input_3,int input_4)\n\n{\n  if ((((input_2 << 1) >> 0x15 != -1) || ((input_1 | input_2 << 0xc) == 0)) &&\n     (((input_4 << 1) >> 0x15 != -1 || ((input_3 | input_4 << 0xc) == 0)))) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08000a2c": "check_parameters_08000a2c",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4"
            },
            "calling": [
                "FUN_08005da8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a58": {
            "entrypoint": "0x08000a58",
            "current_name": "calculate_value_08000a58",
            "code": "\nuint calculate_value_08000a58(uint input_value,uint multiplier)\n\n{\n  uint result_1;\n  int temp_var;\n  uint result_2;\n  \n  temp_var = multiplier * 2 + 0x200000;\n  if (multiplier * 2 < 0xffe00000) {\n    if (-1 < temp_var) {\n      return 0;\n    }\n    result_1 = temp_var >> 0x15;\n    result_2 = -result_1 - 0x3e1;\n    if (result_1 < 0xfffffc20 && result_2 != 0) {\n      result_1 = (multiplier << 0xb | 0x80000000 | input_value >> 0x15) >> (result_2 & 0xff);\n      if ((multiplier & 0x80000000) != 0) {\n        result_1 = -result_1;\n      }\n      return result_1;\n    }\n  }\n  else if ((input_value | multiplier << 0xc) != 0) {\n    return 0;\n  }\n  multiplier = multiplier & 0x80000000;\n  if (multiplier == 0) {\n    multiplier = 0x7fffffff;\n  }\n  return multiplier;\n}\n\n",
            "renaming": {
                "FUN_08000a58": "calculate_value_08000a58",
                "param_1": "input_value",
                "param_2": "multiplier",
                "uVar1": "result_1",
                "iVar2": "temp_var",
                "uVar3": "result_2"
            },
            "calling": [
                "FUN_08005da8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000aa8": {
            "entrypoint": "0x08000aa8",
            "current_name": "calculate_shifted_value_08000aa8",
            "code": "\nuint calculateShiftedValue_08000aa8(uint inputValue,uint shiftAmount)\n\n{\n  int tempVariable;\n  uint shiftedValue;\n  \n  if ((shiftAmount & 0x80000000) != 0) {\n    return 0;\n  }\n  tempVariable = shiftAmount * 2 + 0x200000;\n  if (shiftAmount * 2 < 0xffe00000) {\n    if (-1 < tempVariable) {\n      return 0;\n    }\n    shiftedValue = -(tempVariable >> 0x15) - 0x3e1;\n    if (-1 < (int)shiftedValue) {\n      return (shiftAmount << 0xb | 0x80000000 | inputValue >> 0x15) >> (shiftedValue & 0xff);\n    }\n  }\n  else if ((inputValue | shiftAmount << 0xc) != 0) {\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08000aa8": "calculate_shifted_value_08000aa8",
                "param_1": "inputValue",
                "param_2": "shiftAmount",
                "iVar1": "tempVariable",
                "uVar2": "shiftedValue"
            },
            "calling": [
                "FUN_08005da8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000ae8": {
            "entrypoint": "0x08000ae8",
            "current_name": "execute_system_call_08000ae8",
            "code": "\nvoid execute_system_call_08000ae8(void)\n\n{\n  software_interrupt(0x3f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000ae8": "execute_system_call_08000ae8"
            },
            "calling": [
                "FUN_08000aec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000aec": {
            "entrypoint": "0x08000aec",
            "current_name": "run_function_08000aec",
            "code": "\nundefined4 runFunction_08000aec(undefined4 inputParam,undefined4 unusedParam,undefined4 unusedParam2,undefined4 outputParam)\n\n{\n  undefined4 returnValue;\n  \n  if (DAT_2000017c != 0) {\n    return 0;\n  }\n  returnValue = FUN_08000ae8(1,inputParam,0,0,outputParam);\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08000aec": "run_function_08000aec",
                "param_1": "inputParam",
                "param_2": "unusedParam",
                "param_3": "unusedParam2",
                "param_4": "outputParam",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08000ae8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000b08": {
            "entrypoint": "0x08000b08",
            "current_name": "execute_specific_tasks_08000b08",
            "code": "\nvoid executeSpecificTasks_08000b08(int status,int value)\n\n{\n  if ((status == 1) && (value == 0xffff)) {\n    FUN_08001b18(&DAT_200001c0,&DAT_20000188,&DAT_200001b8,&DAT_20000240,DAT_20000020,DAT_20000024,\n                 DAT_20000018,DAT_2000001c,DAT_20000010,DAT_20000014,0);\n    FUN_08001510(&DAT_20000194,DAT_2000005c,DAT_20000038,DAT_20000028,DAT_2000002c,DAT_20000030,\n                 DAT_20000034);\n    FUN_0800157c(&DAT_2000024c,DAT_20000074,DAT_20000070,DAT_2000006c);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000b08": "execute_specific_tasks_08000b08",
                "param_1": "status",
                "param_2": "value"
            },
            "calling": [],
            "called": [
                "FUN_08001510",
                "FUN_0800157c",
                "FUN_08001b18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000bcc": {
            "entrypoint": "0x08000bcc",
            "current_name": "initialize_reflow_oven_08000bcc",
            "code": "\nvoid initializeReflowOven_08000bcc(void)\n\n{\n  FUN_08005848(DAT_20000064,0);\n  FUN_080057b4(DAT_20000064,1);\n  FUN_08005848(DAT_20000004,0);\n  FUN_080057b4(DAT_20000004,1);\n  FUN_08005848(DAT_20000060,0);\n  FUN_080057b4(DAT_20000060,1);\n  FUN_08005848(DAT_20000004,1);\n  FUN_080013a4(&DAT_20000194,8,2,0);\n  FUN_08001550(&DAT_20000194,0,&DAT_20000008);\n  FUN_0800135a(&DAT_20000194);\n  FUN_08005c96(&DAT_20000194,\"Reflow\");\n  FUN_08001366(&DAT_20000194,0,1);\n  FUN_08005c96(&DAT_20000194,\"Oven 1.2\");\n  FUN_08005848(DAT_20000004,0);\n  FUNC_080058e8(0x9c4);\n  FUN_0800135a(&DAT_20000194);\n  FUN_08005a68(&DAT_2000036c,0xe100,6);\n  FUN_08005848(DAT_20000060,1);\n  DAT_20000258 = 2000;\n  DAT_200001b0 = FUN_080058e0();\n  DAT_200001b4 = FUN_080058e0();\n  FUN_08000aec(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000bcc": "initialize_reflow_oven_08000bcc"
            },
            "calling": [
                "FUN_08005f6c"
            ],
            "called": [
                "FUN_080058e8",
                "FUN_08005a68",
                "FUN_08001550",
                "FUN_0800135a",
                "FUN_08000aec",
                "FUN_08005848",
                "FUN_08005c96",
                "FUN_080013a4",
                "FUN_080057b4",
                "FUN_08001366",
                "FUN_080058e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000cd0": {
            "entrypoint": "0x08000cd0",
            "current_name": "improve_and_readability_08000cd0",
            "code": "\nvoid improve_and_readability_08000cd0(void)\n\n{\n  uint result;\n  undefined4 value1;\n  int errorCode;\n  undefined4 value2;\n  undefined4 output1;\n  undefined4 output2;\n  undefined4 output3;\n  undefined8 value3;\n  \n  result = FUN_080058e0();\n  if (DAT_200001b4 < result) {\n    DAT_200001b4 = DAT_200001b4 + 1000;\n    value3 = FUN_080015f8(&DAT_2000024c,0);\n    value2 = (undefined4)((ulonglong)value3 >> 0x20);\n    value1 = (undefined4)value3;\n    DAT_20000188 = value1;\n    DAT_2000018c = value2;\n    errorCode = FUN_080009c8(value1,value2,0,0x40c38800);\n    if (((errorCode != 0) || (errorCode = FUN_080009c8(value1,value2,0,0x40c38880), errorCode != 0)) ||\n       (errorCode = FUN_080009c8(value1,value2,0,0x40c38900), errorCode != 0)) {\n      DAT_20000238 = 7;\n      DAT_20000239 = '\\0';\n    }\n  }\n  result = FUN_080058e0();\n  value1 = DAT_20000060;\n  if (DAT_200001b0 < result) {\n    DAT_200001b0 = DAT_200001b0 + 1000;\n    if (DAT_20000239 == '\\x01') {\n      errorCode = FUN_08005890(DAT_20000060);\n      FUN_08005848(value1,errorCode == 0);\n      DAT_20000250 = DAT_20000250 + 1;\n      FUN_08005d82(&DAT_2000036c,DAT_20000250,10);\n      FUN_08005c96(&DAT_2000036c,&DAT_08007368);\n      FUN_08005f2c(&DAT_2000036c,output1,DAT_20000240,DAT_20000244,2);\n      FUN_08005c96(&DAT_2000036c,&DAT_08007368);\n      FUN_08005f2c(&DAT_2000036c,output2,DAT_20000188,DAT_2000018c,2);\n      FUN_08005c96(&DAT_2000036c,&DAT_08007368);\n      FUN_08005f40(&DAT_2000036c,output3,DAT_200001b8,DAT_200001bc,2);\n    }\n    else {\n      FUN_08005848(DAT_20000060,1);\n    }\n    FUN_0800135a(&DAT_20000194);\n    FUN_08005c96(&DAT_20000194,(&PTR_s_Ready_2000003c)[DAT_20000238]);\n    FUN_08001366(&DAT_20000194,0,1);\n    if (DAT_20000238 == 7) {\n      FUN_08005c96(&DAT_20000194,\"TC Error!\");\n    }\n    else {\n      FUN_08005f2c(&DAT_20000194,2,DAT_20000188,DAT_2000018c,2);\n      FUN_0800134e(&DAT_20000194,0);\n      FUN_08005c96(&DAT_20000194,&DAT_08007378);\n    }\n  }\n  value2 = DAT_2000018c;\n  value1 = DAT_20000188;\n  switch(DAT_20000238) {\n  case 0:\n    errorCode = FUN_08000a04(DAT_20000188,DAT_2000018c,0,0x40490000);\n    if (errorCode == 0) {\n      if (DAT_20000248 == '\\x01') {\n        FUN_08005cd4(&DAT_2000036c,\"Time Setpoint Input Output\");\n        DAT_20000250 = 0;\n        DAT_2000025c = FUN_080058e0();\n        DAT_20000240 = 0;\n        DAT_20000244 = 0x4062c000;\n        value3 = FUN_0800042c(DAT_20000258);\n        FUN_08001960(&DAT_200001c0,(int)((ulonglong)value3 >> 0x20),0,0,value3);\n        FUN_08001918(&DAT_200001c0,1000);\n        FUN_08001a44(&DAT_200001c0,1);\n        DAT_20000238 = 1;\n      }\n    }\n    else {\n      DAT_20000238 = 6;\n    }\n    break;\n  case 1:\n    DAT_20000239 = '\\x01';\n    errorCode = FUN_08000a04(DAT_20000188,DAT_2000018c,0,0x4062c000);\n    if (errorCode != 0) {\n      value3 = FUN_080058e0();\n      DAT_20000254 = (int)value3 + 9000;\n      FUN_080018f8(&DAT_200001c0,(int)((ulonglong)value3 >> 0x20),0,0x4072c000,0x9999999a,0x3fa99999,\n                   0,0x406f4000);\n      DAT_20000240 = 0;\n      DAT_20000244 = 0x40636000;\n      DAT_20000238 = 2;\n    }\n    break;\n  case 2:\n    result = FUN_080058e0();\n    if (DAT_20000254 < result) {\n      errorCode = FUN_080058e0();\n      DAT_20000254 = errorCode + 9000;\n      value3 = FUN_08000194(DAT_20000240,DAT_20000244,0,0x40140000);\n      DAT_20000244 = (undefined4)((ulonglong)value3 >> 0x20);\n      DAT_20000240 = (undefined4)value3;\n      value3 = FUN_08000a18(DAT_20000240,DAT_20000244,0,0x40690000);\n      if ((int)value3 != 0) {\n        FUN_080018f8(&DAT_200001c0,(int)((ulonglong)value3 >> 0x20),0,0x4072c000,0x9999999a,\n                     0x3fa99999,0,0x4075e000);\n        DAT_20000240 = 0;\n        DAT_20000244 = 0x406f4000;\n        DAT_20000238 = 3;\n      }\n    }\n    break;\n  case 3:\n    value3 = FUN_08000a04(DAT_20000188,DAT_2000018c,0,0x406ea000);\n    if ((int)value3 != 0) {\n      FUN_080018f8(&DAT_200001c0,(int)((ulonglong)value3 >> 0x20),0,0x4072c000,0x9999999a,0x3fa99999,\n                   0,0x4075e000);\n      DAT_20000240 = 0;\n      DAT_20000244 = 0x40590000;\n      DAT_20000238 = 4;\n    }\n    break;\n  case 4:\n    errorCode = FUN_080009f0(DAT_20000188,DAT_2000018c,0,0x40590000);\n    if (errorCode != 0) {\n      errorCode = FUN_080058e0();\n      DAT_20000180 = errorCode + 1000;\n      FUN_08005848(DAT_20000004,1);\n      DAT_20000239 = '\\0';\n      DAT_20000238 = 5;\n    }\n    break;\n  case 5:\n    result = FUN_080058e0();\n    if (DAT_20000180 < result) {\n      FUN_08005848(DAT_20000004,0);\n      DAT_20000238 = 0;\n    }\n    break;\n  case 6:\n    errorCode = FUN_080009dc(DAT_20000188,DAT_2000018c,0,0x40490000);\n    if (errorCode != 0) {\n      DAT_20000238 = 0;\n    }\n    break;\n  case 7:\n    errorCode = FUN_080009c8(DAT_20000188,DAT_2000018c,0,0x40c38800);\n    if (((errorCode == 0) && (errorCode = FUN_080009c8(value1,value2,0,0x40c38880), errorCode == 0)) &&\n       (errorCode = FUN_080009c8(value1,value2,0,0x40c38900), errorCode == 0)) {\n      DAT_20000238 = 0;\n    }\n    else {\n      DAT_20000238 = 7;\n    }\n  }\n  if ((DAT_20000248 == '\\x01') && (DAT_20000239 == '\\x01')) {\n    DAT_20000239 = '\\0';\n    DAT_20000238 = 0;\n  }\n  if (DAT_20000184 == '\\x01') {\n    errorCode = FUN_08005754(DAT_20000068);\n    if (errorCode == 0) {\n      errorCode = FUN_080058e0();\n      if (0x32 < (uint)(errorCode - DAT_20000190)) {\n        DAT_20000184 = '\\x02';\n      }\n    }\n    else {\n      DAT_20000184 = '\\0';\n    }\n  }\n  else if (DAT_20000184 == '\\0') {\n    DAT_20000248 = '\\0';\n    errorCode = FUN_08005754(DAT_20000068);\n    if (errorCode == 0) {\n      DAT_20000190 = FUN_080058e0();\n      DAT_20000184 = '\\x01';\n    }\n  }\n  else if ((DAT_20000184 == '\\x02') && (errorCode = FUN_08005754(DAT_20000068), errorCode != 0)) {\n    DAT_20000248 = '\\x01';\n    DAT_20000184 = '\\0';\n  }\n  if (DAT_20000239 == '\\x01') {\n    errorCode = FUN_080058e0();\n    FUN_080016b4(&DAT_200001c0);\n    if (DAT_20000258 < (uint)(errorCode - DAT_2000025c)) {\n      DAT_2000025c = DAT_2000025c + DAT_20000258;\n    }\n    value3 = FUN_0800040c(errorCode - DAT_2000025c);\n    errorCode = FUN_080009dc((int)value3,(int)((ulonglong)value3 >> 0x20),DAT_200001b8,DAT_200001bc);\n    if (errorCode == 0) {\n      FUN_08005848(DAT_20000064,0);\n    }\n    else {\n      FUN_08005848(DAT_20000064,1);\n    }\n  }\n  else {\n    FUN_08005848(DAT_20000064,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000cd0": "improve_and_readability_08000cd0",
                "uVar1": "result",
                "uVar2": "value1",
                "iVar3": "errorCode",
                "uVar4": "value2",
                "extraout_r1": "output1",
                "extraout_r1_00": "output2",
                "extraout_r1_01": "output3",
                "uVar5": "value3"
            },
            "calling": [
                "FUN_08005f6c"
            ],
            "called": [
                "FUN_08005f2c",
                "FUN_080009c8",
                "FUN_080015f8",
                "FUN_080018f8",
                "FUN_08005c96",
                "FUN_0800042c",
                "FUN_080016b4",
                "FUN_08005890",
                "FUN_080058e0",
                "FUN_08000194",
                "FUN_08005cd4",
                "FUN_08005848",
                "FUN_08005d82",
                "FUN_08001918",
                "FUN_08001366",
                "FUN_08000a18",
                "FUN_0800040c",
                "FUN_08005754",
                "FUN_08001a44",
                "FUN_08000a04",
                "FUN_080009f0",
                "FUN_080009dc",
                "FUN_0800134e",
                "FUN_0800135a",
                "FUN_08005f40",
                "FUN_08001960"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001294": {
            "entrypoint": "0x08001294",
            "current_name": "update_params_08001294",
            "code": "\nvoid updateParams_08001294(int ptr,undefined value1,undefined value2,undefined value3,\n                 undefined value4)\n\n{\n  *(undefined *)(ptr + 0x18) = value1;\n  *(undefined *)(ptr + 0x19) = value2;\n  *(undefined *)(ptr + 0x1a) = value3;\n  *(undefined *)(ptr + 0x1b) = value4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001294": "update_params_08001294",
                "param_1": "ptr",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "value4"
            },
            "calling": [
                "FUN_080013a4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080012a2": {
            "entrypoint": "0x080012a2",
            "current_name": "execute_three_calls_080012a2",
            "code": "\nvoid executeThreeCalls_080012a2(int input)\n\n{\n  FUN_08005848(*(undefined *)(input + 10),0);\n  FUN_08005848(*(undefined *)(input + 10),1);\n  FUN_08005848(*(undefined *)(input + 10),0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080012a2": "execute_three_calls_080012a2",
                "param_1": "input"
            },
            "calling": [
                "FUN_080012c0",
                "FUN_080012e8"
            ],
            "called": [
                "FUN_08005848"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080012c0": {
            "entrypoint": "0x080012c0",
            "current_name": "process_data_080012c0",
            "code": "\nvoid process_data_080012c0(int data_ptr,int mask)\n\n{\n  uint iterator;\n  \n  for (iterator = 0; (int)iterator < 4; iterator = iterator + 1) {\n    FUN_08005848(*(undefined *)(data_ptr + iterator + 0xb),mask >> (iterator & 0xff) & 1);\n  }\n  FUN_080012a2(data_ptr);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080012c0": "process_data_080012c0",
                "param_1": "data_ptr",
                "param_2": "mask",
                "uVar1": "iterator"
            },
            "calling": [
                "FUN_08001310",
                "FUN_080013a4"
            ],
            "called": [
                "FUN_080012a2",
                "FUN_08005848"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080012e8": {
            "entrypoint": "0x080012e8",
            "current_name": "process_data_080012e8",
            "code": "\nvoid process_data_080012e8(int data_pointer,int input_value)\n\n{\n  uint i;\n  \n  for (i = 0; (int)i < 8; i = i + 1) {\n    FUN_08005848(*(undefined *)(data_pointer + i + 0xb),input_value >> (i & 0xff) & 1);\n  }\n  FUN_080012a2(data_pointer);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080012e8": "process_data_080012e8",
                "param_1": "data_pointer",
                "param_2": "input_value",
                "uVar1": "i"
            },
            "calling": [
                "FUN_08001310"
            ],
            "called": [
                "FUN_080012a2",
                "FUN_08005848"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001310": {
            "entrypoint": "0x08001310",
            "current_name": "update_data_08001310",
            "code": "\nvoid updateData_08001310(int dataPtr,uint value,undefined4 arg1,undefined4 arg2)\n\n{\n  FUN_08005848(*(undefined *)(dataPtr + 8),arg1,arg1,arg2,arg2);\n  if (*(char *)(dataPtr + 9) != -1) {\n    FUN_08005848(*(char *)(dataPtr + 9),0);\n  }\n  if ((*(byte *)(dataPtr + 0x13) & 0x10) == 0) {\n    FUN_080012c0(dataPtr,value >> 4);\n    FUN_080012c0(dataPtr,value);\n    return;\n  }\n  FUN_080012e8(dataPtr,value);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001310": "update_data_08001310",
                "param_1": "dataPtr",
                "param_2": "value",
                "param_3": "arg1",
                "param_4": "arg2"
            },
            "calling": [
                "FUN_0800138e",
                "FUN_0800134e",
                "FUN_08001550",
                "FUN_0800135a",
                "FUN_080013a4",
                "FUN_08001366"
            ],
            "called": [
                "FUN_08005848",
                "FUN_080012c0",
                "FUN_080012e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800134e": {
            "entrypoint": "0x0800134e",
            "current_name": "initialize_and_return_one_0800134e",
            "code": "\nundefined4 initializeAndReturnOne_0800134e(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  FUN_08001310(input1,input2,1,input4,input4);\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800134e": "initialize_and_return_one_0800134e",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800135a": {
            "entrypoint": "0x0800135a",
            "current_name": "initialize_data_0800135a",
            "code": "\nvoid initialize_data_0800135a(undefined4 data_1,undefined4 data_2,undefined4 data_3,undefined4 data_4)\n\n{\n  FUN_08001310(data_1,1,0,data_4,data_4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800135a": "initialize_data_0800135a",
                "param_1": "data_1",
                "param_2": "data_2",
                "param_3": "data_3",
                "param_4": "data_4"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08000bcc",
                "FUN_080013a4"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001366": {
            "entrypoint": "0x08001366",
            "current_name": "process_data_08001366",
            "code": "\nvoid processData_08001366(int dataAddress,char flag,uint maxIterations,undefined4 config)\n\n{\n  char character;\n  \n  if (3 < maxIterations) {\n    maxIterations = 3;\n  }\n  if ((int)(uint)*(byte *)(dataAddress + 0x17) <= (int)maxIterations) {\n    maxIterations = *(byte *)(dataAddress + 0x17) - 1 & 0xff;\n  }\n  character = *(char *)(maxIterations + dataAddress + 0x18);\n  FUN_08001310(dataAddress,flag + character | 0x80,0,character,config);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001366": "process_data_08001366",
                "param_1": "dataAddress",
                "param_2": "flag",
                "param_3": "maxIterations",
                "param_4": "config",
                "cVar1": "character"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800138e": {
            "entrypoint": "0x0800138e",
            "current_name": "set_flag_and_call_function_0800138e",
            "code": "\nvoid setFlagAndCallFunction_0800138e(int functionPointer,undefined4 unusedParam1,undefined4 unusedParam2,undefined4 paramValue)\n\n{\n  byte currentFlagValue;\n  \n  currentFlagValue = *(byte *)(functionPointer + 0x14);\n  *(byte *)(functionPointer + 0x14) = currentFlagValue | 4;\n  FUN_08001310(functionPointer,currentFlagValue | 0xc,0,paramValue,paramValue);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800138e": "set_flag_and_call_function_0800138e",
                "param_1": "functionPointer",
                "param_2": "unusedParam1",
                "param_3": "unusedParam2",
                "param_4": "paramValue",
                "bVar1": "currentFlagValue"
            },
            "calling": [
                "FUN_080013a4"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080013a4": {
            "entrypoint": "0x080013a4",
            "current_name": "update_settings_080013a4",
            "code": "\nvoid updateSettings_080013a4(int settings,int value1,int value2,int value3)\n\n{\n  int counter;\n  int index;\n  \n  if (1 < value2) {\n    *(byte *)(settings + 0x13) = *(byte *)(settings + 0x13) | 8;\n  }\n  *(char *)(settings + 0x17) = (char)value2;\n  FUN_08001294(settings,0,0x40,value1,value1 + 0x40);\n  if ((value3 != 0) && (value2 == 1)) {\n    *(byte *)(settings + 0x13) = *(byte *)(settings + 0x13) | 4;\n  }\n  FUN_080057b4(*(undefined *)(settings + 8),1);\n  if (*(char *)(settings + 9) != -1) {\n    FUN_080057b4(*(char *)(settings + 9),1);\n  }\n  FUN_080057b4(*(undefined *)(settings + 10),1);\n  index = 0;\n  while( true ) {\n    if ((*(byte *)(settings + 0x13) & 0x10) == 0) {\n      counter = 4;\n    }\n    else {\n      counter = 8;\n    }\n    if (counter <= index) break;\n    FUN_080057b4(*(undefined *)(settings + index + 0xb),1);\n    index = index + 1;\n  }\n  FUN_08005848(*(undefined *)(settings + 8),0);\n  FUN_08005848(*(undefined *)(settings + 10),0);\n  if (*(char *)(settings + 9) != -1) {\n    FUN_08005848(*(char *)(settings + 9),0);\n  }\n  if ((*(byte *)(settings + 0x13) & 0x10) == 0) {\n    FUN_080012c0(settings,3);\n    FUN_080012c0(settings,3);\n    FUN_080012c0(settings,3);\n    FUN_080012c0(settings,2);\n  }\n  else {\n    FUN_08001310(settings,*(byte *)(settings + 0x13) | 0x20,0);\n    FUN_08001310(settings,*(byte *)(settings + 0x13) | 0x20,0);\n    FUN_08001310(settings,*(byte *)(settings + 0x13) | 0x20,0);\n  }\n  FUN_08001310(settings,*(byte *)(settings + 0x13) | 0x20,0);\n  *(undefined *)(settings + 0x14) = 4;\n  FUN_0800138e(settings);\n  FUN_0800135a(settings);\n  *(undefined *)(settings + 0x15) = 2;\n  FUN_08001310(settings,6,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080013a4": "update_settings_080013a4",
                "param_1": "settings",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "iVar1": "counter",
                "iVar2": "index"
            },
            "calling": [
                "FUN_080014ba",
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_0800138e",
                "FUN_08001310",
                "FUN_0800135a",
                "FUN_08005848",
                "FUN_080012c0",
                "FUN_080057b4",
                "FUN_08001294"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080014ba": {
            "entrypoint": "0x080014ba",
            "current_name": "set_parameters_080014ba",
            "code": "\nvoid setParameters_080014ba(int baseAddress,int condition,undefined param3,undefined4 param4,undefined param5,\n                 undefined param6,undefined param7,undefined param8,undefined param9,\n                 undefined param10,undefined param11,undefined param12,undefined param13)\n\n{\n  *(undefined *)(baseAddress + 8) = param3;\n  *(char *)(baseAddress + 9) = (char)param4;\n  *(undefined *)(baseAddress + 10) = param5;\n  *(undefined *)(baseAddress + 0xb) = param6;\n  *(undefined *)(baseAddress + 0xc) = param7;\n  *(undefined *)(baseAddress + 0xd) = param8;\n  *(undefined *)(baseAddress + 0xe) = param9;\n  *(undefined *)(baseAddress + 0xf) = param10;\n  *(undefined *)(baseAddress + 0x10) = param11;\n  *(undefined *)(baseAddress + 0x11) = param12;\n  *(undefined *)(baseAddress + 0x12) = param13;\n  if (condition == 0) {\n    *(undefined *)(baseAddress + 0x13) = 0x10;\n  }\n  else {\n    *(undefined *)(baseAddress + 0x13) = 0;\n  }\n  FUN_080013a4(baseAddress,0x10,1,0,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080014ba": "set_parameters_080014ba",
                "param_1": "baseAddress",
                "param_2": "condition",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "param_6": "param6",
                "param_7": "param7",
                "param_8": "param8",
                "param_9": "param9",
                "param_10": "param10",
                "param_11": "param11",
                "param_12": "param12",
                "param_13": "param13"
            },
            "calling": [
                "FUN_08001510"
            ],
            "called": [
                "FUN_080013a4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001510": {
            "entrypoint": "0x08001510",
            "current_name": "initialize_function_08001510",
            "code": "\nundefined4 *\ninitializeFunction_08001510(undefined4 *outputArray,undefined4 inputValue1,undefined4 inputValue2,undefined4 inputValue3,\n            undefined inputValue4,undefined inputValue5,undefined inputValue6)\n\n{\n  outputArray[1] = 0;\n  *outputArray = &PTR_FUN_0800134e_1_080073f8;\n  FUN_080014ba(outputArray,1,inputValue1,0xff,inputValue2,inputValue3,inputValue4,inputValue5,inputValue6,0,0,0,0);\n  return outputArray;\n}\n\n",
            "renaming": {
                "FUN_08001510": "initialize_function_08001510",
                "param_1": "outputArray",
                "param_2": "inputValue1",
                "param_3": "inputValue2",
                "param_4": "inputValue3",
                "param_5": "inputValue4",
                "param_6": "inputValue5",
                "param_7": "inputValue6"
            },
            "calling": [
                "FUN_08000b08"
            ],
            "called": [
                "FUN_080014ba"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001550": {
            "entrypoint": "0x08001550",
            "current_name": "process_data_08001550",
            "code": "\nvoid processData_08001550(undefined4 *dataBuffer,uint dataSize,int arrayAddress)\n\n{\n  int index;\n  \n  FUN_08001310(dataBuffer,(dataSize & 7) << 3 | 0x40,0);\n  for (index = 0; index < 8; index = index + 1) {\n    (**(code **)*dataBuffer)(dataBuffer,*(undefined *)(arrayAddress + index));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001550": "process_data_08001550",
                "param_1": "dataBuffer",
                "param_2": "dataSize",
                "param_3": "arrayAddress",
                "iVar1": "index"
            },
            "calling": [
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800157c": {
            "entrypoint": "0x0800157c",
            "current_name": "initialize_params_0800157c",
            "code": "\nundefined * initializeParams_0800157c(undefined *output,undefined4 input1,undefined input2,undefined input3)\n\n{\n  *output = (char)input1;\n  output[1] = input2;\n  output[2] = input3;\n  FUN_080057b4(input1,0);\n  FUN_080057b4(output[1],1);\n  FUN_080057b4(output[2],1);\n  FUN_08005848(output[1],1);\n  FUN_08005848(output[2],0);\n  return output;\n}\n\n",
            "renaming": {
                "FUN_0800157c": "initialize_params_0800157c",
                "param_1": "output",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "input3"
            },
            "calling": [
                "FUN_08000b08"
            ],
            "called": [
                "FUN_08005848",
                "FUN_080057b4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080015b2": {
            "entrypoint": "0x080015b2",
            "current_name": "check_bits_set_at_080015b2",
            "code": "\nuint check_bits_set_at_080015b2(undefined *data_array)\n\n{\n  int check_result;\n  uint bit_index;\n  uint result;\n  \n  FUN_08005848(data_array[1],0);\n  result = 0;\n  for (bit_index = 0x1f; -1 < (int)bit_index; bit_index = bit_index - 1) {\n    FUN_08005848(data_array[2],1);\n    check_result = FUN_08005890(*data_array);\n    if (check_result != 0) {\n      result = result | 1 << (bit_index & 0xff);\n    }\n    FUN_08005848(data_array[2],0);\n  }\n  FUN_08005848(data_array[1],1);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080015b2": "check_bits_set_at_080015b2",
                "param_1": "data_array",
                "iVar1": "check_result",
                "uVar2": "bit_index",
                "uVar3": "result"
            },
            "calling": [
                "FUN_080015f8"
            ],
            "called": [
                "FUN_08005848",
                "FUN_08005890"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080015f8": {
            "entrypoint": "0x080015f8",
            "current_name": "calculate_result_080015f8",
            "code": "\nundefined8 calculateResult_080015f8(undefined4 arg1,int arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  uint flags;\n  undefined8 result;\n  \n  flags = FUN_080015b2();\n  if ((flags & 0x10000) == 0) {\n    flags = flags >> 0x12;\n    result = FUN_0800040c(flags & 0x1fff);\n    if ((flags & 0x2000) != 0) {\n      result = FUN_0800040c(~flags & 0x1fff);\n      result = FUN_08000194((int)result,(int)((ulonglong)result >> 0x20),0,0x3ff00000,arg4);\n      result = CONCAT44((int)((ulonglong)result >> 0x20) + -0x80000000,(int)result);\n    }\n    result = FUN_080004f8((int)result,(int)((ulonglong)result >> 0x20),0,0x3fd00000);\n    if (arg2 == 1) {\n      result = FUN_080004f8((int)result,(int)((ulonglong)result >> 0x20),0,0x40220000);\n      result = FUN_0800074c((int)result,(int)((ulonglong)result >> 0x20),0,0x40140000);\n      result = FUN_08000194((int)result,(int)((ulonglong)result >> 0x20),0,0x40400000);\n      return result;\n    }\n  }\n  else {\n    flags = flags & 7;\n    if (flags == 2) {\n      return 0x40c3888000000000;\n    }\n    if (flags == 4) {\n      return 0x40c3890000000000;\n    }\n    if (flags != 1) {\n      return 0;\n    }\n    result = 0x40c3880000000000;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080015f8": "calculate_result_080015f8",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "uVar1": "flags",
                "uVar2": "result"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080004f8",
                "FUN_08000194",
                "FUN_0800040c",
                "FUN_080015b2",
                "FUN_0800074c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080016b4": {
            "entrypoint": "0x080016b4",
            "current_name": "process_data_080016b4",
            "code": "\nchar processData_080016b4(int data)\n\n{\n  char result;\n  int value;\n  int comparison;\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  undefined4 temp4;\n  undefined4 temp5;\n  undefined4 temp6;\n  undefined4 temp7;\n  char flag;\n  undefined4 temp8;\n  undefined4 temp9;\n  undefined4 temp10;\n  undefined8 temp11;\n  undefined8 temp12;\n  undefined8 temp13;\n  undefined8 temp14;\n  undefined4 temp15;\n  undefined4 temp16;\n  \n  flag = *(char *)(data + 0x70);\n  if (flag != '\\0') {\n    value = FUN_080058e0();\n    if ((uint)(value - *(int *)(data + 0x44)) < *(uint *)(data + 0x58)) {\n      flag = '\\0';\n    }\n    else {\n      temp2 = **(undefined4 **)(data + 0x38);\n      temp5 = (*(undefined4 **)(data + 0x38))[1];\n      temp11 = FUN_08000190(**(undefined4 **)(data + 0x40),(*(undefined4 **)(data + 0x40))[1])\n      ;\n      temp10 = (undefined4)((ulonglong)temp11 >> 0x20);\n      temp12 = FUN_08000190(temp2,temp5,*(undefined4 *)(data + 0x50),\n                            *(undefined4 *)(data + 0x54));\n      temp1 = (undefined4)((ulonglong)temp12 >> 0x20);\n      temp13 = FUN_080004f8((int)temp11,temp10,*(undefined4 *)(data + 0x20),\n                            *(undefined4 *)(data + 0x24));\n      temp13 = FUN_08000194((int)temp13,(int)((ulonglong)temp13 >> 0x20),\n                            *(undefined4 *)(data + 0x48),*(undefined4 *)(data + 0x4c));\n      *(undefined8 *)(data + 0x48) = temp13;\n      result = *(char *)(data + 0x71);\n      if (result == '\\0') {\n        temp14 = FUN_080004f8((int)temp12,temp1,*(undefined4 *)(data + 0x18),\n                              *(undefined4 *)(data + 0x1c));\n        temp13 = FUN_08000190((int)temp13,(int)((ulonglong)temp13 >> 0x20),(int)temp14,\n                              (int)((ulonglong)temp14 >> 0x20));\n        *(undefined8 *)(data + 0x48) = temp13;\n      }\n      temp3 = *(undefined4 *)(data + 0x48);\n      temp6 = *(undefined4 *)(data + 0x4c);\n      temp8 = *(undefined4 *)(undefined8 *)(data + 0x68);\n      temp9 = *(undefined4 *)(data + 0x6c);\n      temp13 = *(undefined8 *)(data + 0x68);\n      comparison = FUN_08000a18(temp3,temp6,temp8,temp9);\n      if (comparison == 0) {\n        temp4 = *(undefined4 *)(data + 0x60);\n        temp7 = *(undefined4 *)(data + 100);\n        comparison = FUN_080009dc(temp3,temp6);\n        if (comparison != 0) {\n          *(undefined4 *)(data + 0x48) = temp4;\n          *(undefined4 *)(data + 0x4c) = temp7;\n        }\n      }\n      else {\n        *(undefined4 *)(data + 0x48) = temp8;\n        *(undefined4 *)(data + 0x4c) = temp9;\n      }\n      if (result == '\\0') {\n        temp11 = 0;\n      }\n      else {\n        temp11 = FUN_080004f8((int)temp11,temp10,*(undefined4 *)(data + 0x18),\n                              *(undefined4 *)(data + 0x1c));\n      }\n      temp16 = (undefined4)((ulonglong)temp11 >> 0x20);\n      temp15 = (undefined4)temp11;\n      temp10 = *(undefined4 *)(data + 0x48);\n      temp3 = *(undefined4 *)(data + 0x4c);\n      temp11 = FUN_080004f8((int)temp12,temp1,*(undefined4 *)(data + 0x28),\n                            *(undefined4 *)(data + 0x2c));\n      temp11 = FUN_08000190(temp10,temp3,(int)temp11,(int)((ulonglong)temp11 >> 0x20));\n      temp11 = FUN_08000194(temp15,temp16,(int)temp11,(int)((ulonglong)temp11 >> 0x20));\n      temp10 = (undefined4)((ulonglong)temp11 >> 0x20);\n      comparison = FUN_080009dc(temp8,temp9,(int)temp11,temp10);\n      if (comparison == 0) {\n        temp13 = *(undefined8 *)(data + 0x60);\n        comparison = FUN_080009dc((int)temp11,temp10,*(undefined4 *)(undefined8 *)(data + 0x60),\n                             *(undefined4 *)(data + 100));\n        if (comparison == 0) {\n          temp13 = temp11;\n        }\n      }\n      **(undefined8 **)(data + 0x3c) = temp13;\n      *(undefined4 *)(data + 0x50) = temp2;\n      *(undefined4 *)(data + 0x54) = temp5;\n      *(int *)(data + 0x44) = value;\n    }\n  }\n  return flag;\n}\n\n",
            "renaming": {
                "FUN_080016b4": "process_data_080016b4",
                "param_1": "data",
                "cVar1": "result",
                "iVar2": "value",
                "iVar3": "comparison",
                "uVar4": "temp1",
                "uVar5": "temp2",
                "uVar6": "temp3",
                "uVar7": "temp4",
                "uVar8": "temp5",
                "uVar9": "temp6",
                "uVar10": "temp7",
                "cVar11": "flag",
                "uVar12": "temp8",
                "uVar13": "temp9",
                "uVar14": "temp10",
                "uVar15": "temp11",
                "uVar16": "temp12",
                "uVar17": "temp13",
                "uVar18": "temp14",
                "local_38": "temp15",
                "uStack_34": "temp16"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08000a18",
                "FUN_08000194",
                "FUN_08000190",
                "FUN_080004f8",
                "FUN_080009dc",
                "FUN_080058e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001814": {
            "entrypoint": "0x08001814",
            "current_name": "initialize_parameters_08001814",
            "code": "\nvoid initializeParameters_08001814(undefined4 *paramArray,undefined4 param_2,undefined4 source_1,undefined4 source_2,\n                 undefined4 source_3,undefined4 source_4,undefined4 source_5,undefined4 source_6,\n                 int flag)\n\n{\n  int result;\n  undefined4 result_high;\n  undefined flag_value;\n  bool flag_2;\n  undefined8 temp_1;\n  undefined8 temp_2;\n  undefined8 temp_3;\n  \n  result = FUN_080009dc(source_1,source_2,0,0);\n  if (((result == 0) && (result = FUN_080009dc(source_3,source_4,0,0), result == 0)) &&\n     (result = FUN_080009dc(source_5,source_6,0,0), result == 0)) {\n    paramArray[0xd] = flag;\n    flag_2 = flag != 1;\n    if (flag_2) {\n      flag = 0;\n    }\n    flag_value = (undefined)flag;\n    if (!flag_2) {\n      flag_value = 1;\n    }\n    *(undefined *)((int)paramArray + 0x71) = flag_value;\n    *paramArray = source_1;\n    paramArray[1] = source_2;\n    paramArray[2] = source_3;\n    paramArray[3] = source_4;\n    paramArray[4] = source_5;\n    paramArray[5] = source_6;\n    temp_1 = FUN_0800040c(paramArray[0x16]);\n    temp_1 = FUN_0800074c((int)temp_1,(int)((ulonglong)temp_1 >> 0x20),0,0x408f4000);\n    result_high = (undefined4)((ulonglong)temp_1 >> 0x20);\n    paramArray[6] = source_1;\n    paramArray[7] = source_2;\n    temp_2 = FUN_080004f8(source_3,source_4,(int)temp_1,result_high);\n    *(undefined8 *)(paramArray + 8) = temp_2;\n    temp_1 = FUN_0800074c(source_5,source_6,(int)temp_1,result_high);\n    *(undefined8 *)(paramArray + 10) = temp_1;\n    if (paramArray[0xc] == 1) {\n      temp_3 = FUN_08000190(0,0,source_1,source_2);\n      *(undefined8 *)(paramArray + 6) = temp_3;\n      temp_2 = FUN_08000190(0,0,(int)temp_2,(int)((ulonglong)temp_2 >> 0x20));\n      *(undefined8 *)(paramArray + 8) = temp_2;\n      temp_1 = FUN_08000190(0,0,(int)temp_1,(int)((ulonglong)temp_1 >> 0x20));\n      *(undefined8 *)(paramArray + 10) = temp_1;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001814": "initialize_parameters_08001814",
                "param_1": "paramArray",
                "param_3": "source_1",
                "param_4": "source_2",
                "param_5": "source_3",
                "param_6": "source_4",
                "param_7": "source_5",
                "param_8": "source_6",
                "param_9": "flag",
                "iVar1": "result",
                "uVar2": "result_high",
                "uVar3": "flag_value",
                "bVar4": "flag_2",
                "uVar5": "temp_1",
                "uVar6": "temp_2",
                "uVar7": "temp_3"
            },
            "calling": [
                "FUN_080018f8",
                "FUN_08001ab0"
            ],
            "called": [
                "FUN_08000190",
                "FUN_080004f8",
                "FUN_080009dc",
                "FUN_0800040c",
                "FUN_0800074c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080018f8": {
            "entrypoint": "0x080018f8",
            "current_name": "initialize_program_080018f8",
            "code": "\nvoid initialize_program_080018f8(void)\n\n{\n  FUN_08001814();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080018f8": "initialize_program_080018f8"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08001814"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001918": {
            "entrypoint": "0x08001918",
            "current_name": "process_data_08001918",
            "code": "\nvoid processData_08001918(int inputData,int size,undefined4 param3,undefined4 param4)\n\n{\n  undefined4 result1;\n  undefined8 result2;\n  undefined8 result3;\n  \n  if (0 < size) {\n    result2 = FUN_0800042c(size);\n    result3 = FUN_0800040c(*(undefined4 *)(inputData + 0x58));\n    result2 = FUN_0800074c((int)result2,(int)((ulonglong)result2 >> 0x20),(int)result3,\n                         (int)((ulonglong)result3 >> 0x20),param4);\n    result1 = (undefined4)((ulonglong)result2 >> 0x20);\n    result3 = FUN_080004f8((int)result2,result1,*(undefined4 *)(inputData + 0x20),\n                         *(undefined4 *)(inputData + 0x24));\n    *(undefined8 *)(inputData + 0x20) = result3;\n    result2 = FUN_0800074c(*(undefined4 *)(inputData + 0x28),*(undefined4 *)(inputData + 0x2c),(int)result2,\n                         result1);\n    *(undefined8 *)(inputData + 0x28) = result2;\n    *(int *)(inputData + 0x58) = size;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001918": "process_data_08001918",
                "param_1": "inputData",
                "param_2": "size",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "result3"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080004f8",
                "FUN_0800040c",
                "FUN_0800042c",
                "FUN_0800074c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001960": {
            "entrypoint": "0x08001960",
            "current_name": "update_parameters_08001960",
            "code": "\nvoid updateParameters_08001960(int objectAddress,undefined4 unusedParameter,undefined4 newValue1,undefined4 newValue2,\n                 undefined4 newValue3,undefined4 newValue4)\n\n{\n  int result;\n  undefined4 *pointerToVariables;\n  undefined4 tempValue1;\n  undefined4 tempValue2;\n  undefined4 tempValue3;\n  undefined4 tempValue4;\n  \n  result = FUN_08000a04(newValue1,newValue2,newValue3,newValue4,newValue2);\n  if (result == 0) {\n    *(undefined4 *)(objectAddress + 0x60) = newValue1;\n    *(undefined4 *)(objectAddress + 100) = newValue2;\n    *(undefined4 *)(objectAddress + 0x68) = newValue3;\n    *(undefined4 *)(objectAddress + 0x6c) = newValue4;\n    if (*(char *)(objectAddress + 0x70) != '\\0') {\n      pointerToVariables = *(undefined4 **)(objectAddress + 0x3c);\n      tempValue1 = *pointerToVariables;\n      tempValue3 = pointerToVariables[1];\n      result = FUN_080009dc(newValue3,newValue4,tempValue1,tempValue3);\n      if (result == 0) {\n        result = FUN_08000a18(newValue1,newValue2,tempValue1,tempValue3);\n        if (result != 0) {\n          *pointerToVariables = newValue1;\n          pointerToVariables[1] = newValue2;\n        }\n      }\n      else {\n        *pointerToVariables = newValue3;\n        pointerToVariables[1] = newValue4;\n      }\n      tempValue1 = *(undefined4 *)(objectAddress + 0x48);\n      tempValue3 = *(undefined4 *)(objectAddress + 0x4c);\n      tempValue2 = *(undefined4 *)(objectAddress + 0x68);\n      tempValue4 = *(undefined4 *)(objectAddress + 0x6c);\n      result = FUN_08000a18(tempValue1,tempValue3,tempValue2,tempValue4);\n      if (result != 0) {\n        *(undefined4 *)(objectAddress + 0x48) = tempValue2;\n        *(undefined4 *)(objectAddress + 0x4c) = tempValue4;\n        return;\n      }\n      tempValue2 = *(undefined4 *)(objectAddress + 0x60);\n      tempValue4 = *(undefined4 *)(objectAddress + 100);\n      result = FUN_080009dc(tempValue1,tempValue3,tempValue2,tempValue4);\n      if (result != 0) {\n        *(undefined4 *)(objectAddress + 0x48) = tempValue2;\n        *(undefined4 *)(objectAddress + 0x4c) = tempValue4;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001960": "update_parameters_08001960",
                "param_1": "objectAddress",
                "param_2": "unusedParameter",
                "param_3": "newValue1",
                "param_4": "newValue2",
                "param_5": "newValue3",
                "param_6": "newValue4",
                "iVar1": "result",
                "puVar2": "pointerToVariables",
                "uVar3": "tempValue1",
                "uVar4": "tempValue2",
                "uVar5": "tempValue3",
                "uVar6": "tempValue4"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08001ab0"
            ],
            "called": [
                "FUN_08000a18",
                "FUN_08000a04",
                "FUN_080009dc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080019f6": {
            "entrypoint": "0x080019f6",
            "current_name": "update_data_080019f6",
            "code": "\nvoid updateData_080019f6(int dataPtr)\n\n{\n  int result;\n  undefined4 tempVar1;\n  undefined4 tempVar2;\n  undefined4 tempVar3;\n  undefined4 tempVar4;\n  \n  tempVar2 = **(undefined4 **)(dataPtr + 0x3c);\n  tempVar3 = (*(undefined4 **)(dataPtr + 0x3c))[1];\n  *(undefined4 *)(dataPtr + 0x48) = tempVar2;\n  *(undefined4 *)(dataPtr + 0x4c) = tempVar3;\n  tempVar1 = (*(undefined4 **)(dataPtr + 0x38))[1];\n  *(undefined4 *)(dataPtr + 0x50) = **(undefined4 **)(dataPtr + 0x38);\n  *(undefined4 *)(dataPtr + 0x54) = tempVar1;\n  tempVar1 = *(undefined4 *)(dataPtr + 0x68);\n  tempVar4 = *(undefined4 *)(dataPtr + 0x6c);\n  result = FUN_08000a18(tempVar2,tempVar3,tempVar1,tempVar4);\n  if (result == 0) {\n    tempVar1 = *(undefined4 *)(dataPtr + 0x60);\n    tempVar4 = *(undefined4 *)(dataPtr + 100);\n    result = FUN_080009dc(tempVar2,tempVar3,tempVar1,tempVar4);\n    if (result != 0) {\n      *(undefined4 *)(dataPtr + 0x48) = tempVar1;\n      *(undefined4 *)(dataPtr + 0x4c) = tempVar4;\n    }\n    return;\n  }\n  *(undefined4 *)(dataPtr + 0x48) = tempVar1;\n  *(undefined4 *)(dataPtr + 0x4c) = tempVar4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080019f6": "update_data_080019f6",
                "param_1": "dataPtr",
                "iVar1": "result",
                "uVar2": "tempVar1",
                "uVar3": "tempVar2",
                "uVar4": "tempVar3",
                "uVar5": "tempVar4"
            },
            "calling": [
                "FUN_08001a44"
            ],
            "called": [
                "FUN_08000a18",
                "FUN_080009dc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001a44": {
            "entrypoint": "0x08001a44",
            "current_name": "set_flag_based_on_condition_08001a44",
            "code": "\nvoid setFlagBasedOnCondition_08001a44(int ptr,int condition)\n\n{\n  undefined flag;\n  \n  if (condition == 1) {\n    flag = 1;\n    if (*(char *)(ptr + 0x70) == '\\0') {\n      FUN_080019f6();\n    }\n  }\n  else {\n    flag = 0;\n  }\n  *(undefined *)(ptr + 0x70) = flag;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001a44": "set_flag_based_on_condition_08001a44",
                "param_1": "ptr",
                "param_2": "condition",
                "uVar1": "flag"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080019f6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001a66": {
            "entrypoint": "0x08001a66",
            "current_name": "update_params_if_needed_08001a66",
            "code": "\nvoid updateParamsIfNeeded_08001a66(int ptr_struct,int new_param,undefined4 ptr_param_1,undefined4 ptr_param_2)\n\n{\n  undefined8 result;\n  \n  if ((*(char *)(ptr_struct + 0x70) != '\\0') && (*(int *)(ptr_struct + 0x30) != new_param)) {\n    result = FUN_08000190(0,0,*(undefined4 *)(ptr_struct + 0x18),*(undefined4 *)(ptr_struct + 0x1c),ptr_param_2\n                        );\n    *(undefined8 *)(ptr_struct + 0x18) = result;\n    result = FUN_08000190(0,0,*(undefined4 *)(ptr_struct + 0x20),*(undefined4 *)(ptr_struct + 0x24));\n    *(undefined8 *)(ptr_struct + 0x20) = result;\n    result = FUN_08000190(0,0,*(undefined4 *)(ptr_struct + 0x28),*(undefined4 *)(ptr_struct + 0x2c));\n    *(undefined8 *)(ptr_struct + 0x28) = result;\n  }\n  *(int *)(ptr_struct + 0x30) = new_param;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001a66": "update_params_if_needed_08001a66",
                "param_1": "ptr_struct",
                "param_2": "new_param",
                "param_3": "ptr_param_1",
                "param_4": "ptr_param_2",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08001ab0"
            ],
            "called": [
                "FUN_08000190"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001ab0": {
            "entrypoint": "0x08001ab0",
            "current_name": "initialize_function_08001ab0",
            "code": "\nint initializeFunction_08001ab0(int functionPointer,undefined4 param2,undefined4 param3,undefined4 param4,\n                undefined4 param5,undefined4 param6,undefined4 param7,undefined4 param8,\n                undefined4 param9,undefined4 param10,undefined4 param11,undefined4 param12)\n\n{\n  int result;\n  undefined4 extraResult;\n  \n  *(undefined4 *)(functionPointer + 0x3c) = param3;\n  *(undefined4 *)(functionPointer + 0x38) = param2;\n  *(undefined4 *)(functionPointer + 0x40) = param4;\n  *(undefined *)(functionPointer + 0x70) = 0;\n  FUN_08001960(functionPointer,param2,0,0,0,0x406fe000);\n  *(undefined4 *)(functionPointer + 0x58) = 100;\n  FUN_08001a66(functionPointer,param12);\n  FUN_08001814(functionPointer,extraResult,param5,param6,param7,param8,param9,param10,param11);\n  result = FUN_080058e0();\n  *(int *)(functionPointer + 0x44) = result - *(int *)(functionPointer + 0x58);\n  return functionPointer;\n}\n\n",
            "renaming": {
                "FUN_08001ab0": "initialize_function_08001ab0",
                "param_1": "functionPointer",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "param_6": "param6",
                "param_7": "param7",
                "param_8": "param8",
                "param_9": "param9",
                "param_10": "param10",
                "param_11": "param11",
                "param_12": "param12",
                "iVar1": "result",
                "extraout_r1": "extraResult"
            },
            "calling": [
                "FUN_08001b18"
            ],
            "called": [
                "FUN_08001814",
                "FUN_08001960",
                "FUN_080058e0",
                "FUN_08001a66"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001b18": {
            "entrypoint": "0x08001b18",
            "current_name": "initialize_08001b18",
            "code": "\nundefined4 initialize_08001b18(undefined4 input)\n\n{\n  FUN_08001ab0();\n  return input;\n}\n\n",
            "renaming": {
                "FUN_08001b18": "initialize_08001b18",
                "param_1": "input"
            },
            "calling": [
                "FUN_08000b08"
            ],
            "called": [
                "FUN_08001ab0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001b48": {
            "entrypoint": "0x08001b48",
            "current_name": "initialize_hardware_08001b48",
            "code": "\nvoid initializeHardware_08001b48(void)\n\n{\n  int result;\n  uint uVar2;\n  undefined4 alternateFunctionArray [2];\n  undefined4 alternateFunction;\n  undefined4 pinNum;\n  undefined4 pinMode;\n  undefined4 hasPullup;\n  undefined4 outputSpeed;\n  undefined4 hasAlternateFunction;\n  undefined4 modeArray [4];\n  undefined4 count;\n  undefined4 size;\n  undefined4 interval;\n  undefined4 index;\n  undefined4 address;\n  \n  modeArray[0] = 2;\n  count = 1;\n  size = 0x10;\n  interval = 2;\n  index = 0;\n  address = 0x380000;\n  result = FUN_08003688(modeArray);\n  if (result != 0) {\n    FUN_08004d40(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x88);\n  }\n  pinNum = 0xf;\n  pinMode = 2;\n  hasPullup = 0;\n  outputSpeed = 0x400;\n  hasAlternateFunction = 0;\n  result = FUN_08003ad4(&pinNum);\n  if (result != 0) {\n    FUN_08004d40(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x95);\n  }\n  alternateFunctionArray[0] = 2;\n  alternateFunction = 0x8000;\n  result = FUN_08003c90(alternateFunctionArray);\n  if (result != 0) {\n    FUN_08004d40(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x9c);\n  }\n  uVar2 = FUN_08003c44();\n  FUN_08002514(uVar2 / 1000);\n  FUN_08002560(4);\n  FUN_08002494(0xffffffff,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001b48": "initialize_hardware_08001b48",
                "local_30": "modeArray",
                "local_20": "count",
                "local_1c": "size",
                "local_14": "interval",
                "local_10": "index",
                "local_c": "address",
                "iVar1": "result",
                "local_44": "pinNum",
                "local_40": "pinMode",
                "local_3c": "hasPullup",
                "local_38": "outputSpeed",
                "local_34": "hasAlternateFunction",
                "local_54": "alternateFunctionArray",
                "local_4c": "alternateFunction"
            },
            "calling": [
                "FUN_08004c52"
            ],
            "called": [
                "FUN_08002494",
                "FUN_08003c90",
                "FUN_08002560",
                "FUN_08002514",
                "FUN_08004d40",
                "FUN_08003c44",
                "FUN_08003ad4",
                "FUN_08003688"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "entry": {
            "entrypoint": "0x08001be8",
            "current_name": "entry",
            "code": "\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined *)(iVar1 + 0x20000000) < &DAT_2000015c; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x8007970);\n  }\n  for (puVar2 = &DAT_20000160; puVar2 < &DAT_200006a8; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  FUN_08004d44();\n  FUN_08006198();\n  UNRECOVERED_JUMPTABLE = (code *)0x8001c1a;\n  FUN_08005f6c();\n                    /* WARNING: Could not recover jumptable at 0x08001c1a. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "renaming": {},
            "calling": [],
            "called": [
                "FUN_08006198",
                "FUN_08004d44",
                "FUN_08005f6c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c32": {
            "entrypoint": "0x08001c32",
            "current_name": "execute_initial_setup_08001c32",
            "code": "\nvoid executeInitialSetup_08001c32(void)\n\n{\n  FUN_08004c52();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001c32": "execute_initial_setup_08001c32"
            },
            "calling": [
                "FUN_08005f5e"
            ],
            "called": [
                "FUN_08004c52"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c3a": {
            "entrypoint": "0x08001c3a",
            "current_name": "FUNC_08001c3a",
            "code": "\nvoid FUNC_08001c3a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001c3a": "FUNC_08001c3a"
            },
            "calling": [
                "FUN_08001c88"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08001c3c": {
            "entrypoint": "0x08001c3c",
            "current_name": "check_and_update_param_08001c3c",
            "code": "\nundefined4 checkAndUpdateParam_08001c3c(uint inputParam)\n\n{\n  int result;\n  \n  result = FUN_08002514(DAT_20000084 / (1000 / DAT_20000078));\n  if (result != 0) {\n    return 1;\n  }\n  if (0xf < inputParam) {\n    return 1;\n  }\n  FUN_08002494(0xffffffff,inputParam,0);\n  DAT_2000007c = inputParam;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001c3c": "check_and_update_param_08001c3c",
                "param_1": "inputParam",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08003afa",
                "FUN_08001c88"
            ],
            "called": [
                "FUN_08002494",
                "FUN_08002514"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c88": {
            "entrypoint": "0x08001c88",
            "current_name": "initialize_system_08001c88",
            "code": "\n\n\nundefined4 initializeSystem_08001c88(void)\n\n{\n  _DAT_40022000 = _DAT_40022000 | 0x10;\n  FUN_08002470(3);\n  FUN_08001c3c(0xf);\n  FUNC_08001c3a();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001c88": "initialize_system_08001c88"
            },
            "calling": [
                "FUN_08004c52"
            ],
            "called": [
                "FUN_08001c3c",
                "FUN_08001c3a",
                "FUN_08002470"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001cac": {
            "entrypoint": "0x08001cac",
            "current_name": "add_global_variable_to_itself_08001cac",
            "code": "\nvoid addGlobalVariableToItself_08001cac(void)\n\n{\n  DAT_200006a0 = (uint)DAT_20000078 + DAT_200006a0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001cac": "add_global_variable_to_itself_08001cac"
            },
            "calling": [
                "FUN_08004b9e"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001cc4": {
            "entrypoint": "0x08001cc4",
            "current_name": "get_data_value_08001cc4",
            "code": "\nundefined4 get_data_value_08001cc4(void)\n\n{\n  return DAT_200006a0;\n}\n\n",
            "renaming": {
                "FUN_08001cc4": "get_data_value_08001cc4"
            },
            "calling": [
                "FUN_08004478",
                "FUN_08002384",
                "FUN_080053d4",
                "FUN_08003afa",
                "FUN_08003c90",
                "FUN_08001cd0",
                "FUN_08001f84",
                "FUN_080043b4",
                "FUN_080020f0",
                "FUN_08004b94",
                "FUN_08003688"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001cd0": {
            "entrypoint": "0x08001cd0",
            "current_name": "check_and_process_flags_08001cd0",
            "code": "\nundefined4 checkAndProcessFlags_08001cd0(uint **inputParams,uint size)\n\n{\n  int initialValue;\n  uint factor;\n  int threshold;\n  undefined4 result;\n  uint *params;\n  uint calculationResult;\n  uint counter;\n  \n  counter = 0;\n  initialValue = FUN_08001cc4();\n  calculationResult = DAT_20000084;\n  params = *inputParams;\n  if ((params[2] & 0x100) == 0) {\n    if (((params[1] & 0x100) == 0) && ((params[0xb] & 0xf00000) == 0)) {\n      do {\n        if ((**inputParams & 2) != 0) goto LAB_08001de2;\n      } while ((size == 0xffffffff) ||\n              ((size != 0 && (threshold = FUN_08001cc4(), (uint)(threshold - initialValue) <= size))));\n      inputParams[10] = (uint *)((uint)inputParams[10] | 4);\n      *(undefined *)(inputParams + 9) = 0;\n      result = 3;\n    }\n    else {\n      factor = FUN_08003da4(2);\n      params = *inputParams;\n      if (((params[4] & 0x24924924) == 0) && ((params[3] & 0x924924) == 0)) {\n        if ((params[4] & 0x12492492) == 0) {\n          if ((params[3] & 0x492492) == 0) {\n            threshold = 0x14;\n          }\n          else {\n            threshold = 0x29;\n          }\n        }\n        else {\n          threshold = 0x29;\n        }\n      }\n      else if (((params[4] & 0x12492492) == 0) && ((params[3] & 0x492492) == 0)) {\n        threshold = 0x54;\n      }\n      else if ((params[4] & 0x249249) == 0) {\n        if ((params[3] & 0x249249) == 0) {\n          threshold = 0x54;\n        }\n        else {\n          threshold = 0xfc;\n        }\n      }\n      else {\n        threshold = 0xfc;\n      }\n      calculationResult = (calculationResult / factor) * threshold;\n      for (; counter <= calculationResult && calculationResult - counter != 0; counter = counter + 1) {\n        if ((size != 0xffffffff) &&\n           ((size == 0 || (threshold = FUN_08001cc4(), size < (uint)(threshold - initialValue))))) {\n          inputParams[10] = (uint *)((uint)inputParams[10] | 4);\n          *(undefined *)(inputParams + 9) = 0;\n          return 3;\n        }\n      }\nLAB_08001de2:\n      **inputParams = 0xffffffed;\n      inputParams[10] = (uint *)((uint)inputParams[10] | 0x200);\n      if (((*inputParams)[2] & 0xe0000) == 0xe0000) {\n        if (inputParams[3] == (uint *)0x0) {\n          inputParams[10] = (uint *)((uint)inputParams[10] & 0xfffffeff);\n          if (((uint)inputParams[10] & 0x1000) == 0) {\n            inputParams[10] = (uint *)((uint)inputParams[10] | 1);\n            result = 0;\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        result = 0;\n      }\n    }\n  }\n  else {\n    inputParams[10] = (uint *)((uint)inputParams[10] | 0x20);\n    *(undefined *)(inputParams + 9) = 0;\n    result = 1;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08001cd0": "check_and_process_flags_08001cd0",
                "param_1": "inputParams",
                "param_2": "size",
                "iVar1": "initialValue",
                "uVar2": "factor",
                "iVar3": "threshold",
                "uVar4": "result",
                "puVar5": "params",
                "uVar6": "calculationResult",
                "local_1c": "counter"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08003da4",
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001e40": {
            "entrypoint": "0x08001e40",
            "current_name": "get_fourth_word_08001e40",
            "code": "\nundefined4 getFourthWord_08001e40(int *arrayPointer)\n\n{\n  return *(undefined4 *)(*arrayPointer + 0x4c);\n}\n\n",
            "renaming": {
                "FUN_08001e40": "get_fourth_word_08001e40",
                "param_1": "arrayPointer"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001e48": {
            "entrypoint": "0x08001e48",
            "current_name": "update_parameter_08001e48",
            "code": "\nundefined4 updateParameter_08001e48(int *paramArray,uint *valueArray)\n\n{\n  undefined4 returnValue;\n  uint intValue;\n  int counter;\n  \n  if (*(char *)(paramArray + 9) == '\\x01') {\n    returnValue = 2;\n  }\n  else {\n    *(undefined *)(paramArray + 9) = 1;\n    intValue = valueArray[1];\n    if (intValue < 7) {\n      intValue = intValue * 5 - 5;\n      *(uint *)(*paramArray + 0x34) =\n           *valueArray << (intValue & 0xff) | *(uint *)(*paramArray + 0x34) & ~(0x1f << (intValue & 0xff));\n    }\n    else if (intValue < 0xd) {\n      intValue = intValue * 5 - 0x23;\n      *(uint *)(*paramArray + 0x30) =\n           *valueArray << (intValue & 0xff) | *(uint *)(*paramArray + 0x30) & ~(0x1f << (intValue & 0xff));\n    }\n    else {\n      intValue = intValue * 5 - 0x41;\n      *(uint *)(*paramArray + 0x2c) =\n           *valueArray << (intValue & 0xff) | *(uint *)(*paramArray + 0x2c) & ~(0x1f << (intValue & 0xff));\n    }\n    intValue = *valueArray;\n    if (intValue < 10) {\n      *(uint *)(*paramArray + 0x10) =\n           valueArray[2] << (intValue * 3 & 0xff) |\n           *(uint *)(*paramArray + 0x10) & ~(7 << (intValue * 3 & 0xff));\n    }\n    else {\n      intValue = intValue * 3 - 0x1e;\n      *(uint *)(*paramArray + 0xc) =\n           valueArray[2] << (intValue & 0xff) | *(uint *)(*paramArray + 0xc) & ~(7 << (intValue & 0xff));\n    }\n    if (*valueArray - 0x10 < 2) {\n      if (*paramArray == 0x40012400) {\n        if ((uRam40012408 & 0x800000) == 0) {\n          uRam40012408 = uRam40012408 | 0x800000;\n          if (*valueArray == 0x10) {\n            for (counter = (DAT_20000084 / 1000000) * 10; counter != 0; counter = counter + -1) {\n            }\n            returnValue = 0;\n          }\n          else {\n            returnValue = 0;\n          }\n        }\n        else {\n          returnValue = 0;\n        }\n      }\n      else {\n        paramArray[10] = paramArray[10] | 0x20;\n        returnValue = 1;\n      }\n    }\n    else {\n      returnValue = 0;\n    }\n    *(undefined *)(paramArray + 9) = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08001e48": "update_parameter_08001e48",
                "param_1": "paramArray",
                "param_2": "valueArray",
                "uVar1": "returnValue",
                "uVar2": "intValue",
                "local_c": "counter"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001f80": {
            "entrypoint": "0x08001f80",
            "current_name": "get_memory_value_08001f80",
            "code": "\nMemoryValue getMemoryValue_08001f80(int memoryAddress)\n\n{\n  return *(MemoryValue *)(memoryAddress + 0x28);\n}\n\n",
            "renaming": {
                "FUN_08001f80": "get_memory_value_08001f80",
                "param_1": "memoryAddress",
                "undefined4": "MemoryValue"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001f84": {
            "entrypoint": "0x08001f84",
            "current_name": "process_data_08001f84",
            "code": "\nundefined4 processData_08001f84(int *dataContainer,undefined4 param)\n\n{\n  int counter;\n  undefined4 result;\n  int dataValue;\n  uint loopCount;\n  \n  dataValue = *dataContainer;\n  if ((*(uint *)(dataValue + 8) & 1) == 0) {\n    *(uint *)(dataValue + 8) = *(uint *)(dataValue + 8) | 1;\n    for (loopCount = DAT_20000084 / 1000000; loopCount != 0; loopCount = loopCount - 1) {\n    }\n    dataValue = FUN_08001cc4(dataContainer,param,DAT_20000084 * 0x431bde83);\n    do {\n      if ((*(uint *)(*dataContainer + 8) & 1) != 0) {\n        return 0;\n      }\n      counter = FUN_08001cc4();\n    } while ((uint)(counter - dataValue) < 3);\n    dataContainer[10] = dataContainer[10] | 0x10;\n    dataContainer[0xb] = dataContainer[0xb] | 1;\n    *(undefined *)(dataContainer + 9) = 0;\n    result = 1;\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08001f84": "process_data_08001f84",
                "param_1": "dataContainer",
                "param_2": "param",
                "iVar1": "counter",
                "uVar2": "result",
                "iVar3": "dataValue",
                "local_14": "loopCount"
            },
            "calling": [
                "FUN_08002384",
                "FUN_08002004"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002004": {
            "entrypoint": "0x08002004",
            "current_name": "initialize_parameters_08002004",
            "code": "\n\n\nint initializeParameters_08002004(int *parameters)\n\n{\n  int result;\n  undefined4 *pointer;\n  int value;\n  \n  if (*(char *)(parameters + 9) != '\\x01') {\n    *(undefined *)(parameters + 9) = 1;\n    result = FUN_08001f84();\n    if (result == 0) {\n      parameters[10] = parameters[10] & 0xfffffcfeU | 0x100;\n      pointer = (undefined4 *)*parameters;\n      if ((pointer == (undefined4 *)0x40012800) && ((_DAT_40012404 & 0xf0000) != 0)) {\n        parameters[10] = parameters[10] | 0x100000;\n        if ((_DAT_40012404 & 0x400) != 0) {\n          parameters[10] = parameters[10] & 0xffffcfffU | 0x1000;\n        }\n      }\n      else {\n        parameters[10] = parameters[10] & 0xffefffff;\n        if ((pointer[1] & 0x400) != 0) {\n          parameters[10] = parameters[10] & 0xffffcfffU | 0x1000;\n        }\n      }\n      if ((parameters[10] & 0x1000U) == 0) {\n        parameters[0xb] = 0;\n      }\n      else {\n        parameters[0xb] = parameters[0xb] & 0xfffffff9;\n      }\n      *(undefined *)(parameters + 9) = 0;\n      *pointer = 0xfffffffd;\n      value = *parameters;\n      if (((*(uint *)(value + 8) & 0xe0000) == 0xe0000) &&\n         ((value != 0x40012800 || ((_DAT_40012404 & 0xf0000) == 0)))) {\n        *(uint *)(value + 8) = *(uint *)(value + 8) | 0x500000;\n      }\n      else {\n        *(uint *)(value + 8) = *(uint *)(value + 8) | 0x100000;\n      }\n    }\n    else {\n      *(undefined *)(parameters + 9) = 0;\n    }\n    return result;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08002004": "initialize_parameters_08002004",
                "param_1": "parameters",
                "iVar1": "result",
                "puVar2": "pointer",
                "iVar3": "value"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08001f84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080020f0": {
            "entrypoint": "0x080020f0",
            "current_name": "update_flags_and_values_080020f0",
            "code": "\nundefined4 updateFlagsAndValues_080020f0(int *data)\n\n{\n  int tempVar1;\n  int tempVar2;\n  \n  tempVar2 = *data;\n  if ((*(uint *)(tempVar2 + 8) & 1) == 0) {\n    return 0;\n  }\n  *(uint *)(tempVar2 + 8) = *(uint *)(tempVar2 + 8) & 0xfffffffe;\n  tempVar2 = FUN_08001cc4();\n  do {\n    if ((*(uint *)(*data + 8) & 1) == 0) {\n      return 0;\n    }\n    tempVar1 = FUN_08001cc4();\n  } while ((uint)(tempVar1 - tempVar2) < 3);\n  data[10] = data[10] | 0x10;\n  data[0xb] = data[0xb] | 1;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080020f0": "update_flags_and_values_080020f0",
                "param_1": "data",
                "iVar1": "tempVar1",
                "iVar2": "tempVar2"
            },
            "calling": [
                "FUN_0800213c",
                "FUN_08002384",
                "FUN_08002348",
                "FUN_0800224c"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800213c": {
            "entrypoint": "0x0800213c",
            "current_name": "set_config_and_verify_0800213c",
            "code": "\nundefined4 setConfigAndVerify_0800213c(int *config)\n\n{\n  int checkResult;\n  uint flag1;\n  uint flag2;\n  \n  if (config == (int *)0x0) {\n    return 1;\n  }\n  if (config[10] == 0) {\n    config[0xb] = 0;\n    *(undefined *)(config + 9) = 0;\n    FUN_08004974();\n  }\n  checkResult = FUN_080020f0(config);\n  if (((config[10] & 0x10U) == 0) && (checkResult == 0)) {\n    config[10] = config[10] & 0xffffeefdU | 2;\n    flag1 = config[1] | config[7] | config[3] << 1;\n    if (config[2] == 0x100) {\n      flag2 = 0x100;\n    }\n    else {\n      flag2 = 0;\n      if (config[2] == 1) {\n        flag2 = 0x100;\n      }\n    }\n    if (config[5] == 1) {\n      if (config[3] == 0) {\n        flag2 = flag2 | (config[6] + -1) * 0x2000 | 0x800;\n      }\n      else {\n        config[10] = config[10] | 0x20;\n        config[0xb] = config[0xb] | 1;\n      }\n    }\n    *(uint *)(*config + 4) = flag2 | *(uint *)(*config + 4) & 0xffff16ff;\n    *(uint *)(*config + 8) = *(uint *)(*config + 8) & 0xffe1f7fd | flag1;\n    if ((config[2] == 0x100) || (config[2] == 1)) {\n      flag2 = (config[4] + -1) * 0x100000;\n    }\n    else {\n      flag2 = 0;\n    }\n    *(uint *)(*config + 0x2c) = flag2 | *(uint *)(*config + 0x2c) & 0xff0fffff;\n    if (flag1 != (*(uint *)(*config + 8) & 0xff1f0efe)) {\n      config[10] = config[10] & 0xffffffedU | 0x10;\n      config[0xb] = config[0xb] | 1;\n      return 1;\n    }\n    config[0xb] = 0;\n    config[10] = config[10] & 0xfffffffcU | 1;\n    return 0;\n  }\n  config[10] = config[10] | 0x10;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800213c": "set_config_and_verify_0800213c",
                "param_1": "config",
                "iVar1": "checkResult",
                "uVar2": "flag1",
                "uVar3": "flag2"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08004974",
                "FUN_080020f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800224c": {
            "entrypoint": "0x0800224c",
            "current_name": "update_memory_layout_0800224c",
            "code": "\nint updateMemoryLayout_0800224c(int *memory)\n\n{\n  int returnValue;\n  \n  if (memory == (int *)0x0) {\n    returnValue = 1;\n  }\n  else {\n    memory[10] = memory[10] | 2;\n    returnValue = FUN_080020f0();\n    if (returnValue == 0) {\n      *(undefined4 *)*memory = 0xffffffe0;\n      *(uint *)(*memory + 4) = *(uint *)(*memory + 4) & 0xff3f0000;\n      *(uint *)(*memory + 8) = *(uint *)(*memory + 8) & 0xff0106f0;\n      *(uint *)(*memory + 0xc) = *(uint *)(*memory + 0xc) & 0xff000000;\n      *(uint *)(*memory + 0x10) = *(uint *)(*memory + 0x10) & 0xc0000000;\n      *(uint *)(*memory + 0x14) = *(uint *)(*memory + 0x14) & 0xfffff000;\n      *(uint *)(*memory + 0x18) = *(uint *)(*memory + 0x18) & 0xfffff000;\n      *(uint *)(*memory + 0x1c) = *(uint *)(*memory + 0x1c) & 0xfffff000;\n      *(uint *)(*memory + 0x20) = *(uint *)(*memory + 0x20) & 0xfffff000;\n      *(uint *)(*memory + 0x24) = *(uint *)(*memory + 0x24) & 0xfffff000;\n      *(uint *)(*memory + 0x28) = *(uint *)(*memory + 0x28) & 0xfffff000;\n      *(uint *)(*memory + 0x2c) = *(uint *)(*memory + 0x2c) & 0xff000000;\n      *(uint *)(*memory + 0x2c) = *(uint *)(*memory + 0x2c) & 0xff000000;\n      *(uint *)(*memory + 0x30) = *(uint *)(*memory + 0x30) & 0xc0000000;\n      *(uint *)(*memory + 0x34) = *(uint *)(*memory + 0x34) & 0xc0000000;\n      *(uint *)(*memory + 0x38) = *(uint *)(*memory + 0x38) & 0xffc00000;\n      *(uint *)(*memory + 0x38) = *(uint *)(*memory + 0x38) & 0xffc00000;\n      FUN_080049f0(memory);\n      memory[0xb] = 0;\n      memory[10] = 0;\n    }\n    *(undefined *)(memory + 9) = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_0800224c": "update_memory_layout_0800224c",
                "param_1": "memory",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_080020f0",
                "FUN_080049f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002348": {
            "entrypoint": "0x08002348",
            "current_name": "check_and_update_status_08002348",
            "code": "\nint checkAndUpdateStatus_08002348(int param)\n\n{\n  int status;\n  \n  if (*(char *)(param + 0x24) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(param + 0x24) = 1;\n  status = FUN_080020f0();\n  if (status == 0) {\n    *(uint *)(param + 0x28) = *(uint *)(param + 0x28) & 0xffffeefe | 1;\n  }\n  *(undefined *)(param + 0x24) = 0;\n  return status;\n}\n\n",
            "renaming": {
                "FUN_08002348": "check_and_update_status_08002348",
                "param_1": "param",
                "iVar1": "status"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_080020f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002384": {
            "entrypoint": "0x08002384",
            "current_name": "check_and_update_status_08002384",
            "code": "\nint check_and_update_status_08002384(int *input_data)\n\n{\n  uint divisor;\n  int result;\n  uint dividend;\n  int starting_value;\n  int current_value;\n  int loop_counter;\n  \n  if (*(char *)(input_data + 9) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(input_data + 9) = 1;\n  result = FUN_080020f0();\n  if (result == 0) {\n    input_data[10] = input_data[10] & 0xffffeefdU | 2;\n    divisor = DAT_20000084;\n    dividend = FUN_08003da4(2);\n    for (loop_counter = divisor / dividend << 1; loop_counter != 0; loop_counter = loop_counter + -1) {\n    }\n    FUN_08001f84(input_data);\n    *(uint *)(*input_data + 8) = *(uint *)(*input_data + 8) | 8;\n    starting_value = FUN_08001cc4();\n    while (current_value = *input_data, (*(uint *)(current_value + 8) & 8) != 0) {\n      current_value = FUN_08001cc4();\n      if (10 < (uint)(current_value - starting_value)) {\n        input_data[10] = input_data[10] & 0xffffffedU | 0x10;\n        *(undefined *)(input_data + 9) = 0;\n        return 1;\n      }\n    }\n    *(uint *)(current_value + 8) = *(uint *)(current_value + 8) | 4;\n    starting_value = FUN_08001cc4();\n    while ((*(uint *)(*input_data + 8) & 4) != 0) {\n      current_value = FUN_08001cc4();\n      if (10 < (uint)(current_value - starting_value)) {\n        input_data[10] = input_data[10] & 0xffffffedU | 0x10;\n        *(undefined *)(input_data + 9) = 0;\n        return 1;\n      }\n    }\n    input_data[10] = input_data[10] & 0xfffffffcU | 1;\n  }\n  *(undefined *)(input_data + 9) = 0;\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002384": "check_and_update_status_08002384",
                "param_1": "input_data",
                "uVar1": "divisor",
                "iVar2": "result",
                "uVar3": "dividend",
                "iVar4": "starting_value",
                "iVar5": "current_value",
                "local_14": "loop_counter"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08003da4",
                "FUN_08001cc4",
                "FUN_08001f84",
                "FUN_080020f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002470": {
            "entrypoint": "0x08002470",
            "current_name": "update_register_value_08002470",
            "code": "\n\n\nvoid updateRegisterValue_08002470(uint inputValue)\n\n{\n  _DAT_e000ed0c = (inputValue & 7) << 8 | _DAT_e000ed0c & 0xf8ff | 0x5fa0000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002470": "update_register_value_08002470",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08005f5e",
                "FUN_08001c88"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002494": {
            "entrypoint": "0x08002494",
            "current_name": "update_character_in_memory_08002494",
            "code": "\n\n\nvoid updateCharacterInMemory_08002494(uint offset,uint data,uint mask)\n\n{\n  uint shiftAmount;\n  uint bitOffset;\n  \n  shiftAmount = (uint)(_DAT_e000ed0c << 0x15) >> 0x1d;\n  bitOffset = 7 - shiftAmount;\n  if (3 < bitOffset) {\n    bitOffset = 4;\n  }\n  if (shiftAmount + 4 < 7) {\n    shiftAmount = 0;\n  }\n  else {\n    shiftAmount = shiftAmount - 3;\n  }\n  shiftAmount = (data & (1 << (bitOffset & 0xff)) - 1U) << (shiftAmount & 0xff) |\n          (1 << (shiftAmount & 0xff)) - 1U & mask;\n  if ((int)offset < 0) {\n    *(char *)((offset & 0xf) + 0xe000ed14) = (char)(shiftAmount << 4);\n  }\n  else {\n    *(char *)(offset + 0xe000e400) = (char)(shiftAmount << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002494": "update_character_in_memory_08002494",
                "param_1": "offset",
                "param_2": "data",
                "param_3": "mask",
                "uVar1": "shiftAmount",
                "uVar2": "bitOffset"
            },
            "calling": [
                "FUN_08005510",
                "FUN_08001b48",
                "FUN_08001c3c",
                "FUN_08005568"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080024f8": {
            "entrypoint": "0x080024f8",
            "current_name": "set_bit_080024f8",
            "code": "\nvoid setBit_080024f8(uint index)\n\n{\n  if (-1 < (int)index) {\n    *(int *)((index >> 5) * 4 + -0x1fff1f00) = 1 << (index & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080024f8": "set_bit_080024f8",
                "param_1": "index"
            },
            "calling": [
                "FUN_08005510",
                "FUN_08005568"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002514": {
            "entrypoint": "0x08002514",
            "current_name": "set_parameters_08002514",
            "code": "\n\n\nundefined4 setParameters_08002514(int value)\n\n{\n  if (value - 1U < 0x1000000) {\n    _DAT_e000e014 = value - 1U;\n    DAT_e000ed23 = 0xf0;\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08002514": "set_parameters_08002514",
                "param_1": "value"
            },
            "calling": [
                "FUN_08001b48",
                "FUN_08001c3c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002540": {
            "entrypoint": "0x08002540",
            "current_name": "set_bit_value_08002540",
            "code": "\nvoid setBitValue_08002540(uint bitIndex)\n\n{\n  if (-1 < (int)bitIndex) {\n    *(int *)(((bitIndex >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (bitIndex & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002540": "set_bit_value_08002540",
                "param_1": "bitIndex"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002560": {
            "entrypoint": "0x08002560",
            "current_name": "update_flag_08002560",
            "code": "\n\n\nvoid updateFlag_08002560(int flagValue)\n\n{\n  if (flagValue != 4) {\n    _DAT_e000e010 = _DAT_e000e010 & 0xfffffffb;\n    return;\n  }\n  _DAT_e000e010 = _DAT_e000e010 | 4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002560": "update_flag_08002560",
                "param_1": "flagValue"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002580": {
            "entrypoint": "0x08002580",
            "current_name": "FUNC_08002580",
            "code": "\nvoid FUNC_08002580(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002580": "FUNC_08002580"
            },
            "calling": [
                "FUN_08002582"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002582": {
            "entrypoint": "0x08002582",
            "current_name": "initialize_application_08002582",
            "code": "\nvoid initializeApplication_08002582(void)\n\n{\n  FUNC_08002580();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002582": "initialize_application_08002582"
            },
            "calling": [
                "FUN_08004b9e"
            ],
            "called": [
                "FUN_08002580"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800258c": {
            "entrypoint": "0x0800258c",
            "current_name": "update_data_structure_0800258c",
            "code": "\n\n\nundefined4 updateDataStructure_0800258c(uint **inputParams)\n\n{\n  uint *tempPointer;\n  \n  if (*(char *)((int)inputParams + 0x21) != '\\x02') {\n    inputParams[0xe] = (uint *)0x4;\n    return 1;\n  }\n  **inputParams = **inputParams & 0xfffffff1;\n  **inputParams = **inputParams & 0xfffffffe;\n  tempPointer = *inputParams;\n  if (tempPointer == (uint *)0x40020008) {\n    _DAT_40020004 = 1;\n  }\n  else if (tempPointer == (uint *)0x4002001c) {\n    _DAT_40020004 = 0x10;\n  }\n  else if (tempPointer == (uint *)0x40020030) {\n    _DAT_40020004 = 0x100;\n  }\n  else if (tempPointer == (uint *)0x40020044) {\n    _DAT_40020004 = 0x1000;\n  }\n  else if (tempPointer == (uint *)0x40020058) {\n    _DAT_40020004 = 0x10000;\n  }\n  else if (tempPointer == (uint *)0x4002006c) {\n    _DAT_40020004 = 0x100000;\n  }\n  else {\n    _DAT_40020004 = 0x1000000;\n  }\n  *(undefined *)((int)inputParams + 0x21) = 1;\n  *(undefined *)(inputParams + 8) = 0;\n  if (inputParams[0xd] != (uint *)0x0) {\n    (*(code *)inputParams[0xd])();\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800258c": "update_data_structure_0800258c",
                "param_1": "inputParams",
                "puVar1": "tempPointer"
            },
            "calling": [
                "FUN_0800316c",
                "FUN_080046b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002624": {
            "entrypoint": "0x08002624",
            "current_name": "update_bitmask_08002624",
            "code": "\n\n\nvoid updateBitmask_08002624(uint *output,uint *input)\n\n{\n  uint *output_ptr;\n  uint bit;\n  uint bitwise_and;\n  uint index;\n  uint value;\n  uint mask_value;\n  int offset;\n  int register_index;\n  \n  mask_value = 0;\n  index = 0;\n  do {\n    if (0xf < index) {\n      return;\n    }\n    bit = 1 << (index & 0xff);\n    bitwise_and = *input & bit;\n    if (bit == bitwise_and) {\n      value = input[1];\n      if (value == 0x12) {\n        mask_value = input[3] + 0xc;\n      }\n      else if (value < 0x13) {\n        if (value == 2) {\n          mask_value = input[3] + 8;\n        }\n        else if (value < 3) {\n          if (value == 0) goto LAB_08002776;\n          if (value == 1) {\n            mask_value = input[3];\n          }\n        }\n        else if (value == 3) {\n          mask_value = 0;\n        }\n        else if (value == 0x11) {\n          mask_value = input[3] + 4;\n        }\n      }\n      else if (value == 0x10210000) {\nLAB_08002776:\n        if (input[2] == 0) {\n          mask_value = 4;\n        }\n        else if (input[2] == 1) {\n          output[4] = bit;\n          mask_value = 8;\n        }\n        else {\n          output[5] = bit;\n          mask_value = 8;\n        }\n      }\n      else if (value < 0x10210001) {\n        if ((value == 0x10110000) || (value == 0x10120000)) goto LAB_08002776;\n      }\n      else if ((value == 0x10310000) || ((value == 0x10320000 || (value == 0x10220000))))\n      goto LAB_08002776;\n      bit = index;\n      output_ptr = output;\n      if (0xff < bitwise_and) {\n        bit = index - 8;\n        output_ptr = output + 1;\n      }\n      *output_ptr = *output_ptr & ~(0xf << (bit << 2 & 0xff)) | mask_value << (bit << 2 & 0xff);\n      if ((input[1] & 0x10000000) != 0) {\n        _DAT_40021018 = _DAT_40021018 | 1;\n        offset = (index & 3) << 2;\n        if (output == (uint *)0x40010800) {\n          register_index = 0;\n        }\n        else if (output == (uint *)0x40010c00) {\n          register_index = 1;\n        }\n        else if (output == (uint *)0x40011000) {\n          register_index = 2;\n        }\n        else if (output == (uint *)0x40011400) {\n          register_index = 3;\n        }\n        else {\n          register_index = 4;\n        }\n        *(uint *)(((index >> 2) + 2) * 4 + 0x40010000) =\n             *(uint *)(((index >> 2) + 2) * 4 + 0x40010000) & ~(0xf << offset) | register_index << offset;\n        if ((input[1] & 0x10000) == 0) {\n          _DAT_40010400 = _DAT_40010400 & ~bitwise_and;\n        }\n        else {\n          _DAT_40010400 = _DAT_40010400 | bitwise_and;\n        }\n        if ((input[1] & 0x20000) == 0) {\n          _DAT_40010404 = _DAT_40010404 & ~bitwise_and;\n        }\n        else {\n          _DAT_40010404 = _DAT_40010404 | bitwise_and;\n        }\n        if ((input[1] & 0x100000) == 0) {\n          _DAT_40010408 = _DAT_40010408 & ~bitwise_and;\n        }\n        else {\n          _DAT_40010408 = _DAT_40010408 | bitwise_and;\n        }\n        if ((input[1] & 0x200000) == 0) {\n          _DAT_4001040c = _DAT_4001040c & ~bitwise_and;\n        }\n        else {\n          _DAT_4001040c = bitwise_and | _DAT_4001040c;\n        }\n      }\n    }\n    index = index + 1;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08002624": "update_bitmask_08002624",
                "param_1": "output",
                "param_2": "input",
                "puVar1": "output_ptr",
                "uVar2": "bit",
                "uVar3": "bitwise_and",
                "uVar4": "index",
                "uVar5": "value",
                "uVar6": "mask_value",
                "iVar7": "offset",
                "iVar8": "register_index"
            },
            "calling": [
                "FUN_08004bb0",
                "FUN_08004974",
                "FUN_08004f4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002810": {
            "entrypoint": "0x08002810",
            "current_name": "check_bit_08002810",
            "code": "\nundefined4 check_bit_08002810(int data_ptr,uint mask)\n\n{\n  if ((mask & *(uint *)(data_ptr + 8)) == 0) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08002810": "check_bit_08002810",
                "param_1": "data_ptr",
                "param_2": "mask"
            },
            "calling": [
                "FUN_08004c48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800281e": {
            "entrypoint": "0x0800281e",
            "current_name": "set_parameter_value_0800281e",
            "code": "\nvoid setParameterValue_0800281e(int objectAddress,int newValue,int shiftFlag)\n\n{\n  if (shiftFlag == 0) {\n    *(int *)(objectAddress + 0x10) = newValue << 0x10;\n    return;\n  }\n  *(int *)(objectAddress + 0x10) = newValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800281e": "set_parameter_value_0800281e",
                "param_1": "objectAddress",
                "param_2": "newValue",
                "param_3": "shiftFlag"
            },
            "calling": [
                "FUN_08004c30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800282c": {
            "entrypoint": "0x0800282c",
            "current_name": "update_and_call_function_0800282c",
            "code": "\n\n\nvoid updateAndCallFunction_0800282c(uint input)\n\n{\n  if ((_DAT_40010414 & input) != 0) {\n    _DAT_40010414 = input;\n    FUN_080060e4();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800282c": "update_and_call_function_0800282c",
                "param_1": "input"
            },
            "calling": [],
            "called": [
                "FUN_080060e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002848": {
            "entrypoint": "0x08002848",
            "current_name": "decode_flags_08002848",
            "code": "\nundefined4 decode_flags_08002848(int *input)\n\n{\n  if (*(char *)((int)input + 0x3e) == '@') {\n    if (input[20] == 0) {\n      *(uint *)(*input + 0x10) = input[17] & 0xfe;\n    }\n    else {\n      *(uint *)(*input + 0x10) = input[17] & 0xffU | 1;\n    }\n  }\n  else if (input[4] == 0x4000) {\n    if (*(char *)((int)input + 0x3d) == '!') {\n      *(uint *)(*input + 0x10) = input[17] & 0xfe;\n    }\n    else {\n      *(uint *)(*input + 0x10) = input[17] & 0xffU | 1;\n    }\n  }\n  else if (input[20] == 0) {\n    *(uint *)(*input + 0x10) = (uint)(input[17] << 0x10) >> 0x17 & 6 | 0xf0;\n  }\n  else if (input[20] == 1) {\n    *(uint *)(*input + 0x10) = (uint)(input[17] << 0x10) >> 0x17 & 6 | 0xf1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002848": "decode_flags_08002848",
                "param_1": "input",
                "param_1[0x14]": "input[20]",
                "param_1[0x11]": "input[17]",
                "param_1[4]": "input[4]"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080028d2": {
            "entrypoint": "0x080028d2",
            "current_name": "copy_and_mask_value_080028d2",
            "code": "\nundefined4 copy_and_mask_value_080028d2(int *input_array)\n\n{\n  *(uint *)(*input_array + 0x10) = input_array[0x11] & 0xff;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080028d2": "copy_and_mask_value_080028d2",
                "param_1": "input_array"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080028de": {
            "entrypoint": "0x080028de",
            "current_name": "update_permissions_080028de",
            "code": "\nundefined4 updatePermissions_080028de(uint **permissions)\n\n{\n  uint *permissionValue;\n  \n  permissionValue = permissions[0xb];\n  if ((*(char *)((int)permissions + 0x3d) == '\\\"') &&\n     ((permissions[0x14] != (uint *)0x0 || (*(char *)((int)permissions + 0x3e) != '@')))) {\n    if ((permissions[0x14] == (uint *)0x0) && (permissions[4] == (uint *)0xc000)) {\n      **permissions = **permissions | 0x100;\n      permissions[0x14] = (uint *)((int)permissions[0x14] + 1);\n    }\n    else {\n      if (*(short *)((int)permissions + 0x2a) == 0) {\n        **permissions = **permissions | 0x200;\n      }\n      else if (*(short *)((int)permissions + 0x2a) == 1) {\n        if (permissionValue == (uint *)0xffff0000) {\n          **permissions = **permissions & 0xfffffbff;\n          permissionValue = *permissions;\n          if ((permissionValue[1] & 0x800) == 0) {\n            *permissionValue = *permissionValue | 0x200;\n          }\n          else {\n            *permissionValue = *permissionValue & 0xfffffbff;\n          }\n        }\n        else if (((permissionValue == (uint *)0x4) || (permissionValue == (uint *)0x8)) ||\n                (permissions[0xc] == (uint *)0x12)) {\n          **permissions = **permissions & 0xfffffbff;\n          **permissions = **permissions | 0x200;\n        }\n        else if (permissions[0xb] == (uint *)0x2) {\n          **permissions = **permissions | 0x400;\n        }\n        else {\n          **permissions = **permissions & 0xfffffbff;\n        }\n      }\n      else if (*(short *)((int)permissions + 0x2a) == 2) {\n        if (permissions[0xb] == (uint *)0x2) {\n          **permissions = **permissions | 0x400;\n        }\n        else {\n          **permissions = **permissions | 0x800;\n          **permissions = **permissions & 0xfffffbff;\n        }\n        permissionValue = *permissions;\n        if ((permissionValue[1] & 0x800) != 0) {\n          permissionValue[1] = permissionValue[1] | 0x1000;\n        }\n      }\n      else {\n        **permissions = **permissions | 0x400;\n        permissionValue = *permissions;\n        if ((permissionValue[1] & 0x800) != 0) {\n          permissionValue[1] = permissionValue[1] | 0x1000;\n        }\n      }\n      permissions[0x14] = (uint *)0x0;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080028de": "update_permissions_080028de",
                "param_1": "permissions",
                "puVar1": "permissionValue"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ab8": {
            "entrypoint": "0x08002ab8",
            "current_name": "update_parameter_08002ab8",
            "code": "\nundefined4 updateParameter_08002ab8(int *param)\n\n{\n  byte *bytePointer;\n  \n  if (*(short *)((int)param + 0x2a) != 0) {\n    bytePointer = (byte *)param[9];\n    param[9] = (int)(bytePointer + 1);\n    *(uint *)(*param + 0x10) = (uint)*bytePointer;\n    *(short *)((int)param + 0x2a) = *(short *)((int)param + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002ab8": "update_parameter_08002ab8",
                "param_1": "param",
                "pbVar1": "bytePointer"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ad8": {
            "entrypoint": "0x08002ad8",
            "current_name": "update_and_decrement_08002ad8",
            "code": "\nundefined4 updateAndDecrement_08002ad8(int *dataArray)\n\n{\n  undefined *pointer;\n  \n  if (*(short *)((int)dataArray + 0x2a) != 0) {\n    pointer = (undefined *)dataArray[9];\n    dataArray[9] = (int)(pointer + 1);\n    *pointer = (char)*(undefined4 *)(*dataArray + 0x10);\n    *(short *)((int)dataArray + 0x2a) = *(short *)((int)dataArray + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002ad8": "update_and_decrement_08002ad8",
                "param_1": "dataArray",
                "puVar1": "pointer"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002af8": {
            "entrypoint": "0x08002af8",
            "current_name": "validate_parameters_08002af8",
            "code": "\nundefined4 validate_parameters_08002af8(uint **ptr_param_list,uint *ptr_input,int input_length,uint *ptr_output)\n\n{\n  undefined4 result;\n  uint *ptr_value;\n  \n  if (*(char *)((int)ptr_param_list + 0x3d) == '(') {\n    if (ptr_input == (uint *)0x0) {\n      result = 1;\n    }\n    else if (input_length == 0) {\n      result = 1;\n    }\n    else if (*(char *)(ptr_param_list + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(ptr_param_list + 0xf) = 1;\n      ptr_value = *ptr_param_list;\n      if ((*ptr_value & 1) == 0) {\n        *ptr_value = *ptr_value | 1;\n      }\n      **ptr_param_list = **ptr_param_list & 0xfffff7ff;\n      *(undefined *)((int)ptr_param_list + 0x3d) = 0x29;\n      *(undefined *)((int)ptr_param_list + 0x3e) = 0x20;\n      result = 0;\n      ptr_param_list[0x10] = (uint *)0x0;\n      ptr_param_list[9] = ptr_input;\n      *(short *)((int)ptr_param_list + 0x2a) = (short)input_length;\n      ptr_param_list[0xb] = ptr_output;\n      *(undefined2 *)(ptr_param_list + 10) = *(undefined2 *)((int)ptr_param_list + 0x2a);\n      *(undefined *)(ptr_param_list + 0xf) = 0;\n      (*ptr_param_list)[1] = (*ptr_param_list)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002af8": "validate_parameters_08002af8",
                "param_1": "ptr_param_list",
                "param_2": "ptr_input",
                "param_3": "input_length",
                "param_4": "ptr_output",
                "uVar1": "result",
                "puVar2": "ptr_value"
            },
            "calling": [
                "FUN_08004e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002b84": {
            "entrypoint": "0x08002b84",
            "current_name": "process_data_08002b84",
            "code": "\nundefined4 processData_08002b84(uint **inputPtr,uint *paramPtr,int count,uint *resultPtr)\n\n{\n  undefined4 returnValue;\n  uint *tempPtr;\n  \n  if (*(char *)((int)inputPtr + 0x3d) == '(') {\n    if (paramPtr == (uint *)0x0) {\n      returnValue = 1;\n    }\n    else if (count == 0) {\n      returnValue = 1;\n    }\n    else if (*(char *)(inputPtr + 0xf) == '\\x01') {\n      returnValue = 2;\n    }\n    else {\n      *(undefined *)(inputPtr + 0xf) = 1;\n      tempPtr = *inputPtr;\n      if ((*tempPtr & 1) == 0) {\n        *tempPtr = *tempPtr | 1;\n      }\n      **inputPtr = **inputPtr & 0xfffff7ff;\n      *(undefined *)((int)inputPtr + 0x3d) = 0x2a;\n      *(undefined *)((int)inputPtr + 0x3e) = 0x20;\n      returnValue = 0;\n      inputPtr[0x10] = (uint *)0x0;\n      inputPtr[9] = paramPtr;\n      *(short *)((int)inputPtr + 0x2a) = (short)count;\n      inputPtr[0xb] = resultPtr;\n      *(undefined2 *)(inputPtr + 10) = *(undefined2 *)((int)inputPtr + 0x2a);\n      *(undefined *)(inputPtr + 0xf) = 0;\n      (*inputPtr)[1] = (*inputPtr)[1] | 0x700;\n    }\n  }\n  else {\n    returnValue = 2;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08002b84": "process_data_08002b84",
                "param_1": "inputPtr",
                "param_2": "paramPtr",
                "param_3": "count",
                "param_4": "resultPtr",
                "uVar1": "returnValue",
                "puVar2": "tempPtr"
            },
            "calling": [
                "FUN_08004e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c10": {
            "entrypoint": "0x08002c10",
            "current_name": "initialize_data_08002c10",
            "code": "\nundefined4 initializeData_08002c10(uint **dataPointer)\n\n{\n  uint *firstElement;\n  \n  if (*(char *)((int)dataPointer + 0x3d) != ' ') {\n    return 2;\n  }\n  *(undefined *)((int)dataPointer + 0x3d) = 0x28;\n  firstElement = *dataPointer;\n  if ((*firstElement & 1) == 0) {\n    *firstElement = *firstElement | 1;\n  }\n  **dataPointer = **dataPointer | 0x400;\n  (*dataPointer)[1] = (*dataPointer)[1] | 0x300;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002c10": "initialize_data_08002c10",
                "param_1": "dataPointer",
                "puVar1": "firstElement"
            },
            "calling": [
                "FUN_08004ec4",
                "FUN_08004ef4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c4e": {
            "entrypoint": "0x08002c4e",
            "current_name": "FUNC_08002c4e",
            "code": "\nvoid FUNC_08002c4e(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c4e": "FUNC_08002c4e"
            },
            "calling": [
                "FUN_08002db2",
                "FUN_08002efc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002c50": {
            "entrypoint": "0x08002c50",
            "current_name": "FUNC_08002c50",
            "code": "\nvoid FUNC_08002c50(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c50": "FUNC_08002c50"
            },
            "calling": [
                "FUN_0800306c",
                "FUN_08002f9c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002c52": {
            "entrypoint": "0x08002c52",
            "current_name": "FUNC_08002c52",
            "code": "\nvoid FUNC_08002c52(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c52": "FUNC_08002c52"
            },
            "calling": [
                "FUN_08002c54",
                "FUN_08002d1c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002c54": {
            "entrypoint": "0x08002c54",
            "current_name": "process_input_08002c54",
            "code": "\nundefined4 processInput_08002c54(int *inputArray)\n\n{\n  char character;\n  byte *bytePtr;\n  \n  character = *(char *)((int)inputArray + 0x3d);\n  if (*(short *)((int)inputArray + 0x2a) != 0) {\n    bytePtr = (byte *)bytePointer2;\n    bytePointer2 = (int)(bytePtr + 1);\n    *(uint *)(*inputArray + 0x10) = (uint)*bytePtr;\n    *(short *)((int)inputArray + 0x2a) = *(short *)((int)inputArray + 0x2a) + -1;\n    if ((*(short *)((int)inputArray + 0x2a) == 0) && (character == ')')) {\n      *(uint *)(*inputArray + 4) = *(uint *)(*inputArray + 4) & 0xfffffbff;\n      value = 0x21;\n      *(undefined *)((int)inputArray + 0x3d) = 0x28;\n      FUNC_08002c52();\n    }\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002c54": "process_input_08002c54",
                "param_1": "inputArray",
                "cVar1": "character",
                "pbVar2": "bytePtr",
                "param_1[9]": "bytePointer2",
                "param_1[0xc]": "value"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002c52"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ca4": {
            "entrypoint": "0x08002ca4",
            "current_name": "FUNC_08002ca4",
            "code": "\nvoid FUNC_08002ca4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ca4": "FUNC_08002ca4"
            },
            "calling": [
                "FUN_08002ca6",
                "FUN_080032b4"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002ca6": {
            "entrypoint": "0x08002ca6",
            "current_name": "update_data_and_check_condition_08002ca6",
            "code": "\nundefined4 updateDataAndCheckCondition_08002ca6(int *array)\n\n{\n  char charValue;\n  undefined *pointer;\n  \n  charValue = *(char *)((int)array + 0x3d);\n  if (*(short *)((int)array + 0x2a) != 0) {\n    pointer = (undefined *)array[9];\n    array[9] = (int)(pointer + 1);\n    *pointer = (char)*(undefined4 *)(*array + 0x10);\n    *(short *)((int)array + 0x2a) = *(short *)((int)array + 0x2a) + -1;\n    if ((*(short *)((int)array + 0x2a) == 0) && (charValue == '*')) {\n      *(uint *)(*array + 4) = *(uint *)(*array + 4) & 0xfffffbff;\n      array[0xc] = 0x22;\n      *(undefined *)((int)array + 0x3d) = 0x28;\n      FUNC_08002ca4();\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002ca6": "update_data_and_check_condition_08002ca6",
                "param_1": "array",
                "cVar1": "charValue",
                "puVar2": "pointer"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002ca4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002cf2": {
            "entrypoint": "0x08002cf2",
            "current_name": "extract_function_data_08002cf2",
            "code": "\nundefined4 extractFunctionData_08002cf2(int *dataPointer,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined2 value1;\n  uint value2;\n  \n  value2 = *(uint *)(*dataPointer + 0x18);\n  if ((value2 & 0x80) == 0) {\n    value1 = *(undefined2 *)(dataPointer + 3);\n  }\n  else {\n    value1 = *(undefined2 *)(dataPointer + 6);\n  }\n  FUN_08004e74(dataPointer,(*(uint *)(*dataPointer + 0x18) & 4) == 0,value1,value2,param4);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002cf2": "extract_function_data_08002cf2",
                "param_1": "dataPointer",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "value1",
                "uVar2": "value2"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08004e74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002d1c": {
            "entrypoint": "0x08002d1c",
            "current_name": "handle_param_08002d1c",
            "code": "\nundefined4 handle_param_08002d1c(uint **param_array)\n\n{\n  if (((param_array[11] == (uint *)0x4) || (param_array[11] == (uint *)0x8)) &&\n     (*(char *)((int)param_array + 0x3d) == '(')) {\n    param_array[11] = (uint *)0xffff0000;\n    (*param_array)[1] = (*param_array)[1] & 0xfffff8ff;\n    (*param_array)[5] = 0xfffffbff;\n    **param_array = **param_array & 0xfffffbff;\n    param_array[12] = (uint *)0x0;\n    *(undefined *)((int)param_array + 0x3d) = 0x20;\n    *(undefined *)((int)param_array + 0x3e) = 0;\n    FUN_08004ec4();\n  }\n  else if (*(char *)((int)param_array + 0x3d) == '!') {\n    param_array[11] = (uint *)0xffff0000;\n    param_array[12] = (uint *)0x21;\n    *(undefined *)((int)param_array + 0x3d) = 0x20;\n    *(undefined *)((int)param_array + 0x3e) = 0;\n    (*param_array)[1] = (*param_array)[1] & 0xfffff8ff;\n    (*param_array)[5] = 0xfffffbff;\n    **param_array = **param_array & 0xfffffbff;\n    FUNC_08002c52();\n  }\n  else {\n    (*param_array)[5] = 0xfffffbff;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002d1c": "handle_param_08002d1c",
                "param_1": "param_array",
                "param_1[0xb]": "param_array[11]",
                "param_1[0xc]": "param_array[12]"
            },
            "calling": [
                "FUN_08003520"
            ],
            "called": [
                "FUN_08004ec4",
                "FUN_08002c52"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002db0": {
            "entrypoint": "0x08002db0",
            "current_name": "FUNC_08002db0",
            "code": "\nvoid FUNC_08002db0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002db0": "FUNC_08002db0"
            },
            "calling": [
                "FUN_08002db2",
                "FUN_08002efc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002db2": {
            "entrypoint": "0x08002db2",
            "current_name": "process_input_08002db2",
            "code": "\nundefined4 processInput_08002db2(uint **inputData)\n\n{\n  char charValue;\n  uint *pointerVar;\n  \n  charValue = *(char *)((int)inputData + 0x3d);\n  pointerVar = inputData[0xb];\n  if ((*(short *)(inputData + 10) == 0) && (charValue == '!')) {\n    if ((pointerVar == (uint *)0x4) || ((pointerVar == (uint *)0x8 || (pointerVar == (uint *)0xffff0000)))) {\n      (*inputData)[1] = (*inputData)[1] & 0xfffff8ff;\n      **inputData = **inputData | 0x200;\n      inputData[0xc] = (uint *)0x0;\n      *(undefined *)((int)inputData + 0x3d) = 0x20;\n      if (*(char *)((int)inputData + 0x3e) == '@') {\n        *(undefined *)((int)inputData + 0x3e) = 0;\n        FUNC_08002db0();\n      }\n      else {\n        *(undefined *)((int)inputData + 0x3e) = 0;\n        FUNC_08002c4e();\n      }\n    }\n    else {\n      (*inputData)[1] = (*inputData)[1] & 0xfffff8ff;\n      inputData[0xc] = (uint *)0x11;\n      *(undefined *)((int)inputData + 0x3e) = 0;\n      *(undefined *)((int)inputData + 0x3d) = 0x20;\n      FUNC_08002c4e();\n    }\n  }\n  else if ((charValue == '!') || ((*(char *)((int)inputData + 0x3e) == '@' && (charValue == '\\\"')))) {\n    if (*(short *)((int)inputData + 0x2a) == 0) {\n      (*inputData)[1] = (*inputData)[1] & 0xfffffbff;\n    }\n    else if (*(char *)((int)inputData + 0x3e) == '@') {\n      if (inputData[0x14] == (uint *)0x0) {\n        if (inputData[0x13] == (uint *)0x1) {\n          (*inputData)[4] = (uint)inputData[0x12] & 0xff;\n          inputData[0x14] = (uint *)((int)inputData[0x14] + 2);\n        }\n        else {\n          (*inputData)[4] = (uint)((int)inputData[0x12] << 0x10) >> 0x18;\n          inputData[0x14] = (uint *)((int)inputData[0x14] + 1);\n        }\n      }\n      else if (inputData[0x14] == (uint *)0x1) {\n        (*inputData)[4] = (uint)inputData[0x12] & 0xff;\n        inputData[0x14] = (uint *)((int)inputData[0x14] + 1);\n      }\n      else if (inputData[0x14] == (uint *)0x2) {\n        if (*(char *)((int)inputData + 0x3d) == '\\\"') {\n          **inputData = **inputData | 0x100;\n        }\n        else if (*(char *)((int)inputData + 0x3d) == '!') {\n          pointerVar = inputData[9];\n          inputData[9] = (uint *)((int)pointerVar + 1);\n          (*inputData)[4] = (uint)*(byte *)pointerVar;\n          *(short *)((int)inputData + 0x2a) = *(short *)((int)inputData + 0x2a) + -1;\n        }\n      }\n    }\n    else {\n      pointerVar = inputData[9];\n      inputData[9] = (uint *)((int)pointerVar + 1);\n      (*inputData)[4] = (uint)*(byte *)pointerVar;\n      *(short *)((int)inputData + 0x2a) = *(short *)((int)inputData + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002db2": "process_input_08002db2",
                "param_1": "inputData",
                "cVar1": "charValue",
                "puVar2": "pointerVar"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002db0",
                "FUN_08002c4e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002efc": {
            "entrypoint": "0x08002efc",
            "current_name": "check_and_update_param_08002efc",
            "code": "\nundefined4 checkAndUpdateParam_08002efc(uint **param)\n\n{\n  uint *ptrVar1;\n  \n  ptrVar1 = param[0xb];\n  if (*(char *)((int)param + 0x3d) == '!') {\n    if (*(short *)((int)param + 0x2a) == 0) {\n      if (((ptrVar1 == (uint *)0x4) || (ptrVar1 == (uint *)0x8)) || (ptrVar1 == (uint *)0xffff0000)) {\n        (*param)[1] = (*param)[1] & 0xfffff8ff;\n        **param = **param | 0x200;\n        param3 = (uint *)0x0;\n        *(undefined *)((int)param + 0x3d) = 0x20;\n        if (*(char *)((int)param + 0x3e) == '@') {\n          *(undefined *)((int)param + 0x3e) = 0;\n          FUNC_08002db0();\n        }\n        else {\n          *(undefined *)((int)param + 0x3e) = 0;\n          FUNC_08002c4e();\n        }\n      }\n      else {\n        (*param)[1] = (*param)[1] & 0xfffff8ff;\n        param3 = (uint *)0x11;\n        *(undefined *)((int)param + 0x3e) = 0;\n        *(undefined *)((int)param + 0x3d) = 0x20;\n        FUNC_08002c4e();\n      }\n    }\n    else {\n      ptrVar1 = param4;\n      param4 = (uint *)((int)ptrVar1 + 1);\n      (*param)[4] = (uint)*(byte *)ptrVar1;\n      *(short *)((int)param + 0x2a) = *(short *)((int)param + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002efc": "check_and_update_param_08002efc",
                "param_1": "param",
                "puVar1": "ptrVar1",
                "param_1[0xc]": "param3",
                "param_1[9]": "param4"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002db0",
                "FUN_08002c4e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f9a": {
            "entrypoint": "0x08002f9a",
            "current_name": "FUNC_08002f9a",
            "code": "\nvoid FUNC_08002f9a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f9a": "FUNC_08002f9a"
            },
            "calling": [
                "FUN_0800306c",
                "FUN_08002f9c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002f9c": {
            "entrypoint": "0x08002f9c",
            "current_name": "process_data_08002f9c",
            "code": "\nundefined4 processData_08002f9c(uint **data)\n\n{\n  uint *tempPointer;\n  \n  if (*(char *)((int)data + 0x3d) == '\\\"') {\n    if (*(ushort *)((int)data + 0x2a) < 4) {\n      if (*(ushort *)((int)data + 0x2a) - 2 < 2) {\n        if (arrayValue == (uint *)0x2) {\n          **data = **data | 0x400;\n        }\n        else {\n          **data = **data & 0xfffffbff;\n          **data = **data | 0x800;\n        }\n        (*data)[1] = (*data)[1] & 0xfffffbff;\n      }\n      else {\n        if (arrayValue == (uint *)0x2) {\n          **data = **data | 0x400;\n        }\n        else {\n          **data = **data & 0xfffffbff;\n        }\n        (*data)[1] = (*data)[1] & 0xfffff8ff;\n        tempPointer = data[9];\n        data[9] = (uint *)((int)tempPointer + 1);\n        *(char *)tempPointer = (char)(*data)[4];\n        *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n        *(undefined *)((int)data + 0x3d) = 0x20;\n        arrayValue3 = (uint *)0x0;\n        if (*(char *)((int)data + 0x3e) == 'symbol') {\n          *(undefined *)((int)data + 0x3e) = 0;\n          FUNC_08002f9a();\n        }\n        else {\n          *(undefined *)((int)data + 0x3e) = 0;\n          FUNC_08002c50();\n        }\n      }\n    }\n    else {\n      tempPointer = data[9];\n      data[9] = (uint *)((int)tempPointer + 1);\n      *(char *)tempPointer = (char)(*data)[4];\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002f9c": "process_data_08002f9c",
                "param_1": "data",
                "puVar1": "tempPointer",
                "param_1[0xb]": "arrayValue",
                "param_1[0xc]": "arrayValue3",
                "@": "symbol"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002f9a",
                "FUN_08002c50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800306c": {
            "entrypoint": "0x0800306c",
            "current_name": "process_parameters_0800306c",
            "code": "\nundefined4 processParameters_0800306c(uint **parameters)\n\n{\n  uint *currentValue;\n  \n  currentValue = currentParam;\n  if (*(short *)((int)parameters + 0x2a) == 3) {\n    if (((currentValue == (uint *)0x4) || (currentValue == (uint *)0x8)) || (currentValue == (uint *)0xffff0000)) {\n      **parameters = **parameters & 0xfffffbff;\n    }\n    currentValue = nextParam;\n    nextParam = (uint *)((int)currentValue + 1);\n    *(char *)currentValue = (char)(*parameters)[4];\n    *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n  }\n  else if (*(short *)((int)parameters + 0x2a) == 2) {\n    if (((currentValue == (uint *)0x4) || (currentValue == (uint *)0x8)) || (currentValue == (uint *)0xffff0000)) {\n      (*parameters)[1] = (*parameters)[1] & 0xfffffcff;\n      **parameters = **parameters | 0x200;\n    }\n    else {\n      if (currentValue == (uint *)0x2) {\n        **parameters = **parameters | 0x400;\n      }\n      else {\n        **parameters = **parameters & 0xfffffbff;\n      }\n      (*parameters)[1] = (*parameters)[1] & 0xfffffcff;\n    }\n    currentValue = nextParam;\n    nextParam = (uint *)((int)currentValue + 1);\n    *(char *)currentValue = (char)(*parameters)[4];\n    *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n    currentValue = nextParam;\n    nextParam = (uint *)((int)currentValue + 1);\n    *(char *)currentValue = (char)(*parameters)[4];\n    *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n    *(undefined *)((int)parameters + 0x3d) = 0x20;\n    parameters[0xc] = (uint *)0x0;\n    if (*(char *)((int)parameters + 0x3e) == '@') {\n      *(undefined *)((int)parameters + 0x3e) = 0;\n      FUNC_08002f9a();\n    }\n    else {\n      *(undefined *)((int)parameters + 0x3e) = 0;\n      FUNC_08002c50();\n    }\n  }\n  else {\n    currentValue = nextParam;\n    nextParam = (uint *)((int)currentValue + 1);\n    *(char *)currentValue = (char)(*parameters)[4];\n    *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800306c": "process_parameters_0800306c",
                "param_1": "parameters",
                "puVar1": "currentValue",
                "param_1[0xb]": "currentParam",
                "param_1[9]": "nextParam"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002f9a",
                "FUN_08002c50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800316a": {
            "entrypoint": "0x0800316a",
            "current_name": "FUNC_0800316a",
            "code": "\nvoid FUNC_0800316a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800316a": "FUNC_0800316a"
            },
            "calling": [
                "FUN_0800316c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800316c": {
            "entrypoint": "0x0800316c",
            "current_name": "process_param_0800316c",
            "code": "\nvoid process_param_0800316c(uint **parameters)\n\n{\n  int index;\n  uint *ptr1;\n  uint *ptr2;\n  \n  if (*(byte *)((int)parameters + 0x3d) - 0x29 < 2) {\n    parameters[0xc] = (uint *)0x0;\n    *(undefined *)((int)parameters + 0x3d) = 0x28;\n  }\n  else {\n    if ((*(char *)((int)parameters + 0x3d) != '`') && (((*parameters)[1] & 0x800) == 0)) {\n      *(undefined *)((int)parameters + 0x3d) = 0x20;\n    }\n    parameters[0xc] = (uint *)0x0;\n    *(undefined *)((int)parameters + 0x3e) = 0;\n  }\n  **parameters = **parameters & 0xfffff7ff;\n  ptr2 = *parameters;\n  if ((ptr2[1] & 0x800) == 0) {\n    if (*(char *)((int)parameters + 0x3d) == '`') {\n      *(undefined *)((int)parameters + 0x3d) = 0x20;\n      parameters[0x10] = (uint *)0x0;\n      if ((ptr2[5] & 0x40) != 0) {\n        ptr1 = parameters[9];\n        parameters[9] = (uint *)((int)ptr1 + 1);\n        *(char *)ptr1 = (char)ptr2[4];\n      }\n      **parameters = **parameters & 0xfffffffe;\n      FUNC_0800316a(parameters);\n    }\n    else {\n      if ((ptr2[5] & 0x40) != 0) {\n        ptr1 = parameters[9];\n        parameters[9] = (uint *)((int)ptr1 + 1);\n        *(char *)ptr1 = (char)ptr2[4];\n      }\n      FUN_08004ef4(parameters);\n    }\n  }\n  else {\n    ptr2[1] = ptr2[1] & 0xfffff7ff;\n    if (*(char *)((int)parameters[0xd] + 0x21) == '\\x01') {\n      parameters[0xe][0xd] = (uint)&LAB_080035fc_1;\n      index = FUN_0800258c(parameters[0xe]);\n      if (index != 0) {\n        if (((*parameters)[5] & 0x40) != 0) {\n          ptr2 = parameters[9];\n          parameters[9] = (uint *)((int)ptr2 + 1);\n          *(char *)ptr2 = (char)(*parameters)[4];\n        }\n        **parameters = **parameters & 0xfffffffe;\n        *(undefined *)((int)parameters + 0x3d) = 0x20;\n        (*(code *)parameters[0xe][0xd])();\n      }\n    }\n    else {\n      parameters[0xd][0xd] = (uint)&LAB_080035fc_1;\n      index = FUN_0800258c(parameters[0xd]);\n      if (index != 0) {\n        **parameters = **parameters & 0xfffffffe;\n        *(undefined *)((int)parameters + 0x3d) = 0x20;\n        (*(code *)parameters[0xd][0xd])();\n      }\n    }\n  }\n  if ((*(char *)((int)parameters + 0x3d) == '(') && (((uint)parameters[0x10] & 4) != 0)) {\n    parameters[0xb] = (uint *)0xffff0000;\n    parameters[0xc] = (uint *)0x0;\n    *(undefined *)((int)parameters + 0x3d) = 0x20;\n    *(undefined *)((int)parameters + 0x3e) = 0;\n    FUN_08004ec4(parameters);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800316c": "process_param_0800316c",
                "param_1": "parameters",
                "iVar1": "index",
                "puVar2": "ptr1",
                "puVar3": "ptr2"
            },
            "calling": [
                "FUN_08003520",
                "FUN_080032b4"
            ],
            "called": [
                "FUN_08004ec4",
                "FUN_0800258c",
                "FUN_0800316a",
                "FUN_08004ef4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080032b4": {
            "entrypoint": "0x080032b4",
            "current_name": "process_parameter_080032b4",
            "code": "\nundefined4 processParameter_080032b4(uint **parameter)\n\n{\n  char charValue;\n  uint *ptr1;\n  uint *ptr2;\n  \n  charValue = *(char *)((int)parameter + 0x3d);\n  (*parameter)[1] = (*parameter)[1] & 0xfffff8ff;\n  **parameter = **parameter | 1;\n  **parameter = **parameter & 0xfffffbff;\n  ptr1 = *parameter;\n  if ((ptr1[1] & 0x800) != 0) {\n    if ((*(char *)((int)parameter + 0x3d) == '\\\"') || (*(char *)((int)parameter + 0x3d) == '*')) {\n      *(short *)((int)parameter + 0x2a) = (short)*(undefined4 *)(*parameter[0xe] + 4);\n    }\n    else {\n      *(short *)((int)parameter + 0x2a) = (short)*(undefined4 *)(*parameter[0xd] + 4);\n    }\n  }\n  if (*(short *)((int)parameter + 0x2a) != 0) {\n    if ((ptr1[5] & 4) != 0) {\n      ptr2 = parameter[9];\n      parameter[9] = (uint *)((int)ptr2 + 1);\n      *(char *)ptr2 = (char)ptr1[4];\n      *(short *)((int)parameter + 0x2a) = *(short *)((int)parameter + 0x2a) + -1;\n    }\n    if (((*parameter)[5] & 0x40) != 0) {\n      ptr1 = parameter[9];\n      parameter[9] = (uint *)((int)ptr1 + 1);\n      *(char *)ptr1 = (char)(*parameter)[4];\n      *(short *)((int)parameter + 0x2a) = *(short *)((int)parameter + 0x2a) + -1;\n    }\n    parameter[0x10] = (uint *)((uint)parameter[0x10] | 4);\n  }\n  if (parameter[0x10] == (uint *)0x0) {\n    if (((charValue == '(') || (charValue == '*')) || (charValue == ')')) {\n      parameter[0xb] = (uint *)0xffff0000;\n      parameter[0xc] = (uint *)0x0;\n      *(undefined *)((int)parameter + 0x3d) = 0x20;\n      *(undefined *)((int)parameter + 0x3e) = 0;\n      FUN_08004ec4();\n    }\n    else if ((parameter[0xc] == (uint *)0x22) || (charValue == '\\\"')) {\n      parameter[0xc] = (uint *)0x0;\n      *(undefined *)((int)parameter + 0x3d) = 0x20;\n      *(undefined *)((int)parameter + 0x3e) = 0;\n      FUNC_08002ca4();\n    }\n  }\n  else {\n    FUN_0800316c();\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080032b4": "process_parameter_080032b4",
                "param_1": "parameter",
                "cVar1": "charValue",
                "puVar2": "ptr1",
                "puVar3": "ptr2"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_0800316c",
                "FUN_08004ec4",
                "FUN_08002ca4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080033b8": {
            "entrypoint": "0x080033b8",
            "current_name": "process_input_080033b8",
            "code": "\nvoid processInput_080033b8(int *input)\n\n{\n  int var1;\n  uint var2;\n  uint var3;\n  uint var4;\n  \n  var1 = *input;\n  var4 = *(uint *)(var1 + 0x18);\n  var2 = *(uint *)(var1 + 0x14);\n  var3 = *(uint *)(var1 + 4);\n  if ((*(char *)((int)input + 0x3e) == '\\x10') || (*(char *)((int)input + 0x3e) == '@')) {\n    if (((var2 & 0x10001) == 0) || ((var3 & 0x200) == 0)) {\n      if (((var2 & 0x10008) == 0) || ((var3 & 0x200) == 0)) {\n        if (((var2 & 0x10002) != 0) && ((var3 & 0x200) != 0)) {\n          FUN_080028de(input);\n        }\n      }\n      else {\n        FUN_080028d2(input);\n      }\n    }\n    else {\n      FUN_08002848(input);\n    }\n    if ((var4 & 0x100004) == 0) {\n      if ((((var2 & 0x10040) != 0) && ((var3 & 0x400) != 0)) && ((var2 & 0x10004) == 0)) {\n        FUN_08002f9c(input);\n        return;\n      }\n      if (((var2 & 0x10004) != 0) && ((var3 & 0x200) != 0)) {\n        FUN_0800306c(input);\n        return;\n      }\n    }\n    else {\n      if ((((var2 & 0x10080) != 0) && ((var3 & 0x400) != 0)) && ((var2 & 0x10004) == 0)) {\n        FUN_08002db2(input);\n        return;\n      }\n      if (((var2 & 0x10004) != 0) && ((var3 & 0x200) != 0)) {\n        FUN_08002efc(input);\n        return;\n      }\n    }\n  }\n  else {\n    if (((var2 & 0x10002) != 0) && ((var3 & 0x200) != 0)) {\n      FUN_08002cf2();\n      return;\n    }\n    if (((var2 & 0x10010) != 0) && ((var3 & 0x200) != 0)) {\n      FUN_080032b4(input);\n      return;\n    }\n    if ((var4 & 0x100004) == 0) {\n      if ((((var2 & 0x10040) != 0) && ((var3 & 0x400) != 0)) && ((var2 & 0x10004) == 0)) {\n        FUN_08002ca6(input);\n        return;\n      }\n      if (((var2 & 0x10004) != 0) && ((var3 & 0x200) != 0)) {\n        FUN_08002ad8(input);\n      }\n    }\n    else {\n      if ((((var2 & 0x10080) != 0) && ((var3 & 0x400) != 0)) && ((var2 & 0x10004) == 0)) {\n        FUN_08002c54(input);\n        return;\n      }\n      if (((var2 & 0x10004) != 0) && ((var3 & 0x200) != 0)) {\n        FUN_08002ab8(input);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080033b8": "process_input_080033b8",
                "param_1": "input",
                "iVar1": "var1",
                "uVar2": "var2",
                "uVar3": "var3",
                "uVar4": "var4"
            },
            "calling": [],
            "called": [
                "FUN_0800306c",
                "FUN_08002848",
                "FUN_08002ca6",
                "FUN_080028d2",
                "FUN_08002c54",
                "FUN_08002db2",
                "FUN_08002f9c",
                "FUN_080028de",
                "FUN_08002ab8",
                "FUN_08002ad8",
                "FUN_08002efc",
                "FUN_080032b4",
                "FUN_08002cf2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003520": {
            "entrypoint": "0x08003520",
            "current_name": "update_status_08003520",
            "code": "\nvoid updateStatus_08003520(uint **param)\n\n{\n  char char1;\n  uint *ptr;\n  uint status1;\n  uint status2;\n  \n  ptr = *param;\n  status1 = ptr[5];\n  status2 = ptr[1];\n  if (((status1 & 0x10100) != 0) && ((status2 & 0x100) != 0)) {\n    param[0x10] = (uint *)((uint)param[0x10] | 1);\n    ptr[5] = 0xfffffeff;\n    **param = **param | 0x8000;\n  }\n  if (((status1 & 0x10200) != 0) && ((status2 & 0x100) != 0)) {\n    param[0x10] = (uint *)((uint)param[0x10] | 2);\n    (*param)[5] = 0xfffffdff;\n  }\n  if (((status1 & 0x10400) != 0) && ((status2 & 0x100) != 0)) {\n    char1 = *(char *)((int)param + 0x3d);\n    if (((*(char *)((int)param + 0x3e) == ' ') && (*(short *)((int)param + 0x2a) == 0)) &&\n       (((char1 == '!' || (char1 == ')')) || ((char1 == '(' && (param[0xc] == (uint *)0x21)))))) {\n      FUN_08002d1c(param);\n    }\n    else {\n      param[0x10] = (uint *)((uint)param[0x10] | 4);\n      if (*(char *)((int)param + 0x3e) == '\\x10') {\n        **param = **param | 0x200;\n      }\n      (*param)[5] = 0xfffffbff;\n    }\n  }\n  if (((status1 & 0x10800) != 0) && ((status2 & 0x100) != 0)) {\n    param[0x10] = (uint *)((uint)param[0x10] | 8);\n    (*param)[5] = 0xfffff7ff;\n  }\n  if (param[0x10] != (uint *)0x0) {\n    FUN_0800316c(param);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003520": "update_status_08003520",
                "param_1": "param",
                "cVar1": "char1",
                "puVar2": "ptr",
                "uVar3": "status1",
                "uVar4": "status2"
            },
            "calling": [],
            "called": [
                "FUN_0800316c",
                "FUN_08002d1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800365c": {
            "entrypoint": "0x0800365c",
            "current_name": "delay_function_0800365c",
            "code": "\nvoid delayFunction_0800365c(int input)\n\n{\n  bool bVar1;\n  int iteration;\n  \n  iteration = input * (DAT_20000084 / 8000);\n  do {\n    bVar1 = iteration != 0;\n    iteration = iteration + -1;\n  } while (bVar1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800365c": "delay_function_0800365c",
                "param_1": "input",
                "local_4": "iteration"
            },
            "calling": [
                "FUN_08003688"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003688": {
            "entrypoint": "0x08003688",
            "current_name": "check_status_08003688",
            "code": "\n\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nundefined4 checkStatus_08003688(uint *statusFlags)\n\n{\n  int startTime;\n  int currentTime;\n  undefined4 result;\n  uint value;\n  bool isFlagSet;\n  \n  if ((*statusFlags & 1) != 0) {\n    if (((_DAT_40021004 & 0xc) == 4) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) != 0)))) {\n      if (((_DAT_40021000 & 0x20000) != 0) && (statusFlags[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      value = statusFlags[1];\n      if (value == 0x10000) {\n        _DAT_40021000 = _DAT_40021000 | 0x10000;\n      }\n      else if (value == 0) {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      else if (value == 0x50000) {\n        _DAT_40021000 = _DAT_40021000 | 0x50000;\n      }\n      else {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      if (statusFlags[1] == 0) {\n        startTime = FUN_08001cc4();\n        while ((_DAT_40021000 & 0x20000) != 0) {\n          currentTime = FUN_08001cc4();\n          if (100 < (uint)(currentTime - startTime)) {\n            return 3;\n          }\n        }\n      }\n      else {\n        startTime = FUN_08001cc4();\n        while ((_DAT_40021000 & 0x20000) == 0) {\n          currentTime = FUN_08001cc4();\n          if (100 < (uint)(currentTime - startTime)) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*statusFlags & 2) != 0) {\n    if (((_DAT_40021004 & 0xc) == 0) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) == 0)))) {\n      if (((_DAT_40021000 & 2) != 0) && (statusFlags[4] != 1)) {\n        return 1;\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | statusFlags[5] << 3;\n    }\n    else if (statusFlags[4] == 0) {\n      _DAT_42420000 = 0;\n      startTime = FUN_08001cc4();\n      while ((_DAT_40021000 & 2) != 0) {\n        currentTime = FUN_08001cc4();\n        if (2 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420000 = 1;\n      startTime = FUN_08001cc4();\n      while ((_DAT_40021000 & 2) == 0) {\n        currentTime = FUN_08001cc4();\n        if (2 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | statusFlags[5] << 3;\n    }\n  }\n  if ((*statusFlags & 8) != 0) {\n    if (statusFlags[6] == 0) {\n      _DAT_42420480 = 0;\n      startTime = FUN_08001cc4();\n      while ((_DAT_40021024 & 2) != 0) {\n        currentTime = FUN_08001cc4();\n        if (2 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420480 = 1;\n      startTime = FUN_08001cc4();\n      while ((_DAT_40021024 & 2) == 0) {\n        currentTime = FUN_08001cc4();\n        if (2 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n      FUN_0800365c(1);\n    }\n  }\n  if ((*statusFlags & 4) != 0) {\n    isFlagSet = (_DAT_4002101c & 0x10000000) == 0;\n    if (isFlagSet) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      startTime = FUN_08001cc4();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        currentTime = FUN_08001cc4();\n        if (100 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    value = statusFlags[3];\n    if (value == 1) {\n      _DAT_40021020 = _DAT_40021020 | 1;\n    }\n    else if (value == 0) {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    else if (value == 5) {\n      _DAT_40021020 = _DAT_40021020 | 5;\n    }\n    else {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    if (statusFlags[3] == 0) {\n      startTime = FUN_08001cc4();\n      while ((_DAT_40021020 & 2) != 0) {\n        currentTime = FUN_08001cc4();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      startTime = FUN_08001cc4();\n      while ((_DAT_40021020 & 2) == 0) {\n        currentTime = FUN_08001cc4();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    if (isFlagSet) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if (statusFlags[7] == 0) {\n    result = 0;\n  }\n  else if ((_DAT_40021004 & 0xc) == 8) {\n    result = 1;\n  }\n  else if (statusFlags[7] == 2) {\n    _DAT_42420060 = 0;\n    startTime = FUN_08001cc4();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        if (statusFlags[8] == 0x10000) {\n          _DAT_40021004 = _DAT_40021004 & 0xfffdffff | statusFlags[2];\n        }\n        _DAT_40021004 = _DAT_40021004 & 0xffc2ffff | statusFlags[8] | statusFlags[9];\n        _DAT_42420060 = 1;\n        startTime = FUN_08001cc4();\n        do {\n          if ((_DAT_40021000 & 0x2000000) != 0) {\n            return 0;\n          }\n          currentTime = FUN_08001cc4();\n        } while ((uint)(currentTime - startTime) < 3);\n        return 3;\n      }\n      currentTime = FUN_08001cc4();\n    } while ((uint)(currentTime - startTime) < 3);\n    result = 3;\n  }\n  else {\n    _DAT_42420060 = 0;\n    startTime = FUN_08001cc4();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        return 0;\n      }\n      currentTime = FUN_08001cc4();\n    } while ((uint)(currentTime - startTime) < 3);\n    result = 3;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08003688": "check_status_08003688",
                "param_1": "statusFlags",
                "iVar1": "startTime",
                "iVar2": "currentTime",
                "uVar3": "result",
                "uVar4": "value",
                "bVar5": "isFlagSet"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08001cc4",
                "FUN_0800365c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a68": {
            "entrypoint": "0x08003a68",
            "current_name": "calculate_execution_time_08003a68",
            "code": "\n\n\nuint calculateExecutionTime_08003a68(void)\n\n{\n  uint uVar1;\n  undefined2 offset;\n  undefined4 stackValue1;\n  undefined4 stackValue2;\n  undefined4 stackValue3;\n  undefined4 stackValue4;\n  \n  stackValue4 = 0x10100f0e;\n  stackValue3 = 0xd0c0b0a;\n  stackValue2 = 0x9080706;\n  stackValue1 = 0x5040302;\n  offset = 0x201;\n  if ((_DAT_40021004 & 0xc) == 8) {\n    uVar1 = (uint)*(byte *)((int)&stackValue1 + ((_DAT_40021004 << 10) >> 0x1c));\n    if ((_DAT_40021004 & 0x10000) == 0) {\n      uVar1 = uVar1 * 4000000;\n    }\n    else {\n      uVar1 = (uVar1 * 8000000) /\n              (uint)*(byte *)((int)&offset - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n    }\n  }\n  else {\n    uVar1 = 8000000;\n  }\n  return uVar1;\n}\n\n",
            "renaming": {
                "FUN_08003a68": "calculate_execution_time_08003a68",
                "local_1c": "offset",
                "uStack_18": "stackValue1",
                "uStack_14": "stackValue2",
                "uStack_10": "stackValue3",
                "uStack_c": "stackValue4"
            },
            "calling": [
                "FUN_08003afa"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ad4": {
            "entrypoint": "0x08003ad4",
            "current_name": "configure_device_08003ad4",
            "code": "\n\n\nundefined4 configureDevice_08003ad4(uint *deviceConfig,uint configSize)\n\n{\n  int startTime;\n  int currentTime;\n  uint status;\n  \n  if ((_DAT_40022000 & 7) < configSize) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | configSize;\n    if (configSize != (configSize & 7)) {\n      return 1;\n    }\n  }\n  if ((*deviceConfig & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | deviceConfig[2];\n  }\n  if ((*deviceConfig & 1) != 0) {\n    status = deviceConfig[1];\n    if (status == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((status != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = status | _DAT_40021004 & 0xfffffffc;\n    startTime = FUN_08001cc4();\n    if (deviceConfig[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        currentTime = FUN_08001cc4();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else if (deviceConfig[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        currentTime = FUN_08001cc4();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        currentTime = FUN_08001cc4();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (configSize < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | configSize;\n    if (configSize != (configSize & 7)) {\n      return 1;\n    }\n  }\n  if ((*deviceConfig & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | deviceConfig[3];\n  }\n  if ((*deviceConfig & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | deviceConfig[4] << 3;\n  }\n  status = FUN_08003a68();\n  DAT_20000084 = status >> (&DAT_0800772c)[(_DAT_40021004 << 0x18) >> 0x1c];\n  FUN_08001c3c(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003ad4": "configure_device_08003ad4",
                "param_1": "deviceConfig",
                "param_2": "configSize",
                "iVar1": "startTime",
                "iVar2": "currentTime",
                "uVar3": "status"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08003afa"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003afa": {
            "entrypoint": "0x08003afa",
            "current_name": "initialize_system_08003afa",
            "code": "\n\n\nundefined4 initializeSystem_08003afa(uint *flags,uint maxValue)\n\n{\n  int initialValue;\n  int currentValue;\n  uint tempValue;\n  \n  if ((*flags & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | flags[2];\n  }\n  if ((*flags & 1) != 0) {\n    tempValue = flags[1];\n    if (tempValue == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((tempValue != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = tempValue | _DAT_40021004 & 0xfffffffc;\n    initialValue = FUN_08001cc4();\n    if (flags[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        currentValue = FUN_08001cc4();\n        if (5000 < (uint)(currentValue - initialValue)) {\n          return 3;\n        }\n      }\n    }\n    else if (flags[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        currentValue = FUN_08001cc4();\n        if (5000 < (uint)(currentValue - initialValue)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        currentValue = FUN_08001cc4();\n        if (5000 < (uint)(currentValue - initialValue)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (maxValue < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | maxValue;\n    if (maxValue != (maxValue & 7)) {\n      return 1;\n    }\n  }\n  if ((*flags & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | flags[3];\n  }\n  if ((*flags & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | flags[4] << 3;\n  }\n  tempValue = FUN_08003a68();\n  DAT_20000084 = tempValue >> (&DAT_0800772c)[(_DAT_40021004 << 0x18) >> 0x1c];\n  FUN_08001c3c(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003afa": "initialize_system_08003afa",
                "param_1": "flags",
                "param_2": "maxValue",
                "uVar3": "tempValue",
                "iVar1": "initialValue",
                "iVar2": "currentValue"
            },
            "calling": [
                "FUN_08003ad4"
            ],
            "called": [
                "FUN_08003a68",
                "FUN_08001c3c",
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003c44": {
            "entrypoint": "0x08003c44",
            "current_name": "get_global_variable_value_08003c44",
            "code": "\nundefined4 getGlobalVariableValue_08003c44(void)\n\n{\n  return DAT_20000084;\n}\n\n",
            "renaming": {
                "FUN_08003c44": "get_global_variable_value_08003c44"
            },
            "calling": [
                "FUN_08001b48",
                "FUN_08003c50",
                "FUN_08003c70"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003c50": {
            "entrypoint": "0x08003c50",
            "current_name": "shifted_value_08003c50",
            "code": "\n\n\nuint shiftedValue_08003c50(void)\n\n{\n  uint result;\n  \n  result = FUN_08003c44();\n  return result >> (&DAT_0800773c)[(uint)(_DAT_40021004 << 0x15) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_08003c50": "shifted_value_08003c50",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08004204"
            ],
            "called": [
                "FUN_08003c44"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003c70": {
            "entrypoint": "0x08003c70",
            "current_name": "calculate_shifted_value_08003c70",
            "code": "\n\n\nuint calculate_shifted_value_08003c70(void)\n\n{\n  uint result;\n  \n  result = FUN_08003c44();\n  return result >> (&DAT_0800773c)[(uint)(_DAT_40021004 << 0x12) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_08003c70": "calculate_shifted_value_08003c70",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08003da4",
                "FUN_08004204"
            ],
            "called": [
                "FUN_08003c44"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003c90": {
            "entrypoint": "0x08003c90",
            "current_name": "update_flags_and_settings_08003c90",
            "code": "\n\n\nundefined4 updateFlagsAndSettings_08003c90(uint *flags)\n\n{\n  uint temp1;\n  uint temp2;\n  int initialValue;\n  int currentValue;\n  bool isFirstTimeUpdate;\n  \n  if ((*flags & 1) != 0) {\n    isFirstTimeUpdate = (_DAT_4002101c & 0x10000000) == 0;\n    if (isFirstTimeUpdate) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      initialValue = FUN_08001cc4();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        currentValue = FUN_08001cc4();\n        if (100 < (uint)(currentValue - initialValue)) {\n          return 3;\n        }\n      }\n    }\n    if (((_DAT_40021020 & 0x300) != 0) && ((_DAT_40021020 & 0x300) != (flags[1] & 0x300))) {\n      temp2 = _DAT_40021020 & 0xfffffcff;\n      _DAT_42420440 = 0;\n      temp1 = _DAT_40021020 & 1;\n      _DAT_40021020 = temp2;\n      if (temp1 != 0) {\n        initialValue = FUN_08001cc4();\n        while ((_DAT_40021020 & 2) == 0) {\n          currentValue = FUN_08001cc4();\n          if (5000 < (uint)(currentValue - initialValue)) {\n            return 3;\n          }\n        }\n      }\n    }\n    _DAT_40021020 = _DAT_40021020 & 0xfffffcff | flags[1];\n    if (isFirstTimeUpdate) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if ((*flags & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffff3fff | flags[2];\n  }\n  if ((*flags & 0x10) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffbfffff | flags[3];\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003c90": "update_flags_and_settings_08003c90",
                "param_1": "flags",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "iVar3": "initialValue",
                "iVar4": "currentValue",
                "bVar5": "isFirstTimeUpdate"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003da4": {
            "entrypoint": "0x08003da4",
            "current_name": "calculate_value_08003da4",
            "code": "\n\n\nuint calculateValue_08003da4(int inputValue)\n\n{\n  uint calculatedValue;\n  undefined2 constantValue;\n  undefined4 constantValue1;\n  undefined4 constantValue2;\n  undefined4 constantValue3;\n  undefined4 constantValue4;\n  \n  constantValue4 = 0x10100f0e;\n  constantValue3 = 0xd0c0b0a;\n  constantValue2 = 0x9080706;\n  constantValue1 = 0x5040302;\n  constantValue = 0x201;\n  if (inputValue == 2) {\n    calculatedValue = FUN_08003c70();\n    calculatedValue = calculatedValue / ((((_DAT_40021004 << 0x10) >> 0x1e) + 1) * 2);\n  }\n  else if (inputValue == 0x10) {\n    if ((_DAT_40021000 & 0x1000000) == 0) {\n      calculatedValue = 0;\n    }\n    else {\n      if ((_DAT_40021004 & 0x10000) == 0) {\n        calculatedValue = 4000000;\n      }\n      else {\n        calculatedValue = 8000000 / *(byte *)((int)&constantValue - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n      }\n      calculatedValue = calculatedValue * *(byte *)((int)&constantValue1 + ((_DAT_40021004 << 10) >> 0x1c));\n      if ((_DAT_40021004 & 0x400000) == 0) {\n        calculatedValue = (calculatedValue * 2) / 3;\n      }\n    }\n  }\n  else if (inputValue == 1) {\n    if ((_DAT_40021020 & 0x302) == 0x102) {\n      calculatedValue = 0x8000;\n    }\n    else if (((_DAT_40021020 & 0x300) == 0x200) && ((_DAT_40021024 & 2) != 0)) {\n      calculatedValue = 32000;\n    }\n    else if ((_DAT_40021020 & 0x300) == 0x300) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        calculatedValue = 0;\n      }\n      else {\n        calculatedValue = 0xf424;\n      }\n    }\n    else {\n      calculatedValue = 0;\n    }\n  }\n  else {\n    calculatedValue = 0;\n  }\n  return calculatedValue;\n}\n\n",
            "renaming": {
                "FUN_08003da4": "calculate_value_08003da4",
                "param_1": "inputValue",
                "uVar1": "calculatedValue",
                "local_24": "constantValue",
                "uStack_20": "constantValue1",
                "uStack_1c": "constantValue2",
                "uStack_18": "constantValue3",
                "uStack_14": "constantValue4"
            },
            "calling": [
                "FUN_08002384",
                "FUN_08001cd0"
            ],
            "called": [
                "FUN_08003c70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ea0": {
            "entrypoint": "0x08003ea0",
            "current_name": "initialize_memory_08003ea0",
            "code": "\n\n\nvoid initializeMemory_08003ea0(uint **pointerToMemory)\n\n{\n  if (((**pointerToMemory & 2) != 0) && (((*pointerToMemory)[1] & 2) != 0)) {\n    FUN_08004d18();\n    (*pointerToMemory)[1] = 0xfffffffd;\n  }\n  _DAT_40010414 = 0x20000;\n  *(undefined *)((int)pointerToMemory + 0x11) = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003ea0": "initialize_memory_08003ea0",
                "param_1": "pointerToMemory"
            },
            "calling": [],
            "called": [
                "FUN_08004d18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ed8": {
            "entrypoint": "0x08003ed8",
            "current_name": "initialize_flags_and_perform_action_08003ed8",
            "code": "\nvoid initializeFlagsAndPerformAction_08003ed8(uint **parameters)\n\n{\n  uint *pointerVar1;\n  \n  *(undefined *)((int)parameters + 0x3d) = 2;\n  pointerVar1 = *parameters;\n  if ((pointerVar1[8] & 0x1111) == 0) {\n    if ((pointerVar1[8] & 0x444) == 0) {\n      *pointerVar1 = *pointerVar1 & 0xfffffffe;\n    }\n  }\n  FUN_08004b34(parameters);\n  *(undefined *)((int)parameters + 0x3d) = 0;\n  *(undefined *)(parameters + 0xf) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003ed8": "initialize_flags_and_perform_action_08003ed8",
                "param_1": "parameters",
                "puVar1": "pointerVar1"
            },
            "calling": [
                "FUN_08004b3c"
            ],
            "called": [
                "FUN_08004b34"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f12": {
            "entrypoint": "0x08003f12",
            "current_name": "FUNC_08003f12",
            "code": "\nvoid FUNC_08003f12(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f12": "FUNC_08003f12"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08003f14": {
            "entrypoint": "0x08003f14",
            "current_name": "FUNC_08003f14",
            "code": "\nvoid FUNC_08003f14(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f14": "FUNC_08003f14"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08003f16": {
            "entrypoint": "0x08003f16",
            "current_name": "FUNC_08003f16",
            "code": "\nvoid FUNC_08003f16(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f16": "FUNC_08003f16"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08003f18": {
            "entrypoint": "0x08003f18",
            "current_name": "process_data_08003f18",
            "code": "\nvoid processData_08003f18(int *data)\n\n{\n  int value;\n  \n  value = *data;\n  if (((*(uint *)(value + 0x10) & 2) != 0) && ((*(uint *)(value + 0xc) & 2) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffd;\n    *(undefined *)(data + 7) = 1;\n    if ((*(uint *)(*data + 0x18) & 3) == 0) {\n      FUN_08004df8();\n      FUNC_08003f14(data);\n    }\n    else {\n      FUNC_08003f12();\n    }\n    *(undefined *)(data + 7) = 0;\n  }\n  value = *data;\n  if (((*(uint *)(value + 0x10) & 4) != 0) && ((*(uint *)(value + 0xc) & 4) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffb;\n    *(undefined *)(data + 7) = 2;\n    if ((*(uint *)(*data + 0x18) & 0x300) == 0) {\n      FUN_08004df8(data);\n      FUNC_08003f14(data);\n    }\n    else {\n      FUNC_08003f12(data);\n    }\n    *(undefined *)(data + 7) = 0;\n  }\n  value = *data;\n  if (((*(uint *)(value + 0x10) & 8) != 0) && ((*(uint *)(value + 0xc) & 8) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffff7;\n    *(undefined *)(data + 7) = 4;\n    if ((*(uint *)(*data + 0x1c) & 3) == 0) {\n      FUN_08004df8(data);\n      FUNC_08003f14(data);\n    }\n    else {\n      FUNC_08003f12(data);\n    }\n    *(undefined *)(data + 7) = 0;\n  }\n  value = *data;\n  if (((*(uint *)(value + 0x10) & 0x10) != 0) && ((*(uint *)(value + 0xc) & 0x10) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffef;\n    *(undefined *)(data + 7) = 8;\n    if ((*(uint *)(*data + 0x1c) & 0x300) == 0) {\n      FUN_08004df8(data);\n      FUNC_08003f14(data);\n    }\n    else {\n      FUNC_08003f12(data);\n    }\n    *(undefined *)(data + 7) = 0;\n  }\n  value = *data;\n  if (((*(uint *)(value + 0x10) & 1) != 0) && ((*(uint *)(value + 0xc) & 1) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffe;\n    FUN_08004e12(data);\n  }\n  value = *data;\n  if (((*(uint *)(value + 0x10) & 0x80) != 0) && ((*(uint *)(value + 0xc) & 0x80) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffff7f;\n    FUNC_0800417a(data);\n  }\n  value = *data;\n  if (((*(uint *)(value + 0x10) & 0x40) != 0) && ((*(uint *)(value + 0xc) & 0x40) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffbf;\n    FUNC_08003f16(data);\n  }\n  value = *data;\n  if (((*(uint *)(value + 0x10) & 0x20) != 0) && ((*(uint *)(value + 0xc) & 0x20) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffdf;\n    FUNC_08004178(data);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f18": "process_data_08003f18",
                "param_1": "data",
                "iVar1": "value"
            },
            "calling": [
                "FUN_08004e20"
            ],
            "called": [
                "FUN_08003f14",
                "FUN_08004178",
                "FUN_08004e12",
                "FUN_0800417a",
                "FUN_08003f12",
                "FUN_08004df8",
                "FUN_08003f16"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004092": {
            "entrypoint": "0x08004092",
            "current_name": "update_bitwise_value_08004092",
            "code": "\nvoid updateBitwiseValue_08004092(int baseAddress,uint bitPosition,int bitValue)\n\n{\n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) & ~(1 << (bitPosition & 0xff));\n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) | bitValue << (bitPosition & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004092": "update_bitwise_value_08004092",
                "param_1": "baseAddress",
                "param_2": "bitPosition",
                "param_3": "bitValue"
            },
            "calling": [
                "FUN_080040b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040b0": {
            "entrypoint": "0x080040b0",
            "current_name": "initialize_memory_080040b0",
            "code": "\nundefined4 initializeMemory_080040b0(uint **memoryPointer,undefined4 parameter)\n\n{\n  uint *pointer;\n  \n  FUN_08004092(*memoryPointer,parameter,0);\n  if (((*memoryPointer == (uint *)0x40012c00) && ((memoryAddress2 & 0x1111) == 0)) &&\n     ((memoryAddress2 & 0x444) == 0)) {\n    memoryAddress3 = memoryAddress3 & 0xffff7fff;\n  }\n  pointer = *memoryPointer;\n  if (((pointer[8] & 0x1111) == 0) && ((pointer[8] & 0x444) == 0)) {\n    *pointer = *pointer & 0xfffffffe;\n  }\n  *(undefined *)((int)memoryPointer + 0x3d) = 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080040b0": "initialize_memory_080040b0",
                "param_1": "memoryPointer",
                "param_2": "parameter",
                "puVar1": "pointer",
                "uRam40012c20": "memoryAddress2",
                "uRam40012c44": "memoryAddress3"
            },
            "calling": [
                "FUN_08004b3c"
            ],
            "called": [
                "FUN_08004092"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004110": {
            "entrypoint": "0x08004110",
            "current_name": "update_bits_08004110",
            "code": "\nvoid updateBits_08004110(int ptr,uint bitOffset,int value)\n\n{\n  *(uint *)(ptr + 0x20) = *(uint *)(ptr + 0x20) & ~(4 << (bitOffset & 0xff));\n  *(uint *)(ptr + 0x20) = *(uint *)(ptr + 0x20) | value << (bitOffset & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004110": "update_bits_08004110",
                "param_1": "ptr",
                "param_2": "bitOffset",
                "param_3": "value"
            },
            "calling": [
                "FUN_0800412c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800412c": {
            "entrypoint": "0x0800412c",
            "current_name": "update_bit_flags_0800412c",
            "code": "\nundefined4 updateBitFlags_0800412c(uint **bitFlagsPtr,undefined4 inputFlag)\n\n{\n  uint *flags;\n  \n  FUN_08004110(*bitFlagsPtr,inputFlag,0);\n  flags = *bitFlagsPtr;\n  if (((flags[8] & 0x1111) == 0) && ((flags[8] & 0x444) == 0)) {\n    flags[0x11] = flags[0x11] & 0xffff7fff;\n  }\n  flags = *bitFlagsPtr;\n  if (((flags[8] & 0x1111) == 0) && ((flags[8] & 0x444) == 0)) {\n    *flags = *flags & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800412c": "update_bit_flags_0800412c",
                "param_1": "bitFlagsPtr",
                "param_2": "inputFlag",
                "puVar1": "flags"
            },
            "calling": [
                "FUN_08004b3c"
            ],
            "called": [
                "FUN_08004110"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004178": {
            "entrypoint": "0x08004178",
            "current_name": "FUNC_08004178",
            "code": "\nvoid FUNC_08004178(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004178": "FUNC_08004178"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800417a": {
            "entrypoint": "0x0800417a",
            "current_name": "FUNC_0800417a",
            "code": "\nvoid FUNC_0800417a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800417a": "FUNC_0800417a"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800417c": {
            "entrypoint": "0x0800417c",
            "current_name": "clear_bits_and_set_flag_0800417c",
            "code": "\nvoid clearBitsAndSetFlag_0800417c(int *ptr)\n\n{\n  *(uint *)(*ptr + 0xc) = *(uint *)(*ptr + 0xc) & 0xfffffedf;\n  *(uint *)(*ptr + 0x14) = *(uint *)(*ptr + 0x14) & 0xfffffffe;\n  *(undefined *)((int)ptr + 0x3a) = 0x20;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800417c": "clear_bits_and_set_flag_0800417c",
                "param_1": "ptr"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004198": {
            "entrypoint": "0x08004198",
            "current_name": "parse_input_08004198",
            "code": "\nundefined4 parseInput_08004198(int *inputArray)\n\n{\n  short counter;\n  byte *bytePtr;\n  \n  if (*(char *)((int)inputArray + 0x39) != '!') {\n    return 2;\n  }\n  if (inputArray[2] == 0x1000) {\n    *(uint *)(*inputArray + 4) = *(ushort *)inputArray[8] & 0x1ff;\n    if (inputArray[4] == 0) {\n      inputArray[8] = inputArray[8] + 2;\n    }\n    else {\n      inputArray[8] = inputArray[8] + 1;\n    }\n  }\n  else {\n    bytePtr = (byte *)inputArray[8];\n    inputArray[8] = (int)(bytePtr + 1);\n    *(uint *)(*inputArray + 4) = (uint)*bytePtr;\n  }\n  counter = *(short *)((int)inputArray + 0x26) + -1;\n  *(short *)((int)inputArray + 0x26) = counter;\n  if (counter == 0) {\n    *(uint *)(*inputArray + 0xc) = *(uint *)(*inputArray + 0xc) & 0xffffff7f;\n    *(uint *)(*inputArray + 0xc) = *(uint *)(*inputArray + 0xc) | 0x40;\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004198": "parse_input_08004198",
                "param_1": "inputArray",
                "sVar1": "counter",
                "pbVar2": "bytePtr"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004204": {
            "entrypoint": "0x08004204",
            "current_name": "update_parameters_08004204",
            "code": "\nvoid updateParameters_08004204(int *parameters)\n\n{\n  int result1;\n  int result2;\n  int result3;\n  int result4;\n  int result5;\n  int result6;\n  int result7;\n  int result8;\n  int result9;\n  int result10;\n  \n  *(uint *)(*parameters + 0x10) = *(uint *)(*parameters + 0x10) & 0xffffcfff | parameters[3];\n  *(uint *)(*parameters + 0xc) =\n       parameters[2] | parameters[4] | parameters[5] | *(uint *)(*parameters + 0xc) & 0xffffe9f3;\n  *(uint *)(*parameters + 0x14) = *(uint *)(*parameters + 0x14) & 0xfffffcff | parameters[6];\n  result10 = *parameters;\n  if (result10 != 0x40013800) {\n    result1 = FUN_08003c50();\n    result6 = parameters[1];\n    result2 = FUN_08003c50();\n    result7 = parameters[1];\n    result3 = FUN_08003c50();\n    result8 = parameters[1];\n    result4 = FUN_08003c50();\n    result9 = parameters[1];\n    result5 = FUN_08003c50();\n    *(uint *)(result10 + 8) =\n         ((uint)((int)((ulonglong)\n                       (((uint)(result4 * 0x19) / (uint)(result9 << 2) +\n                        (int)(((ulonglong)(uint)(result5 * 0x19) / (ulonglong)(uint)(parameters[1] << 2))\n                             / 100) * -100) * 0x10 + 0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n         ((((uint)(result2 * 0x19) / (uint)(result7 << 2) +\n           (int)(((ulonglong)(uint)(result3 * 0x19) / (ulonglong)(uint)(result8 << 2)) / 100) * -100) *\n           0x10 + 0x32) / 100 & 0xf0) +\n         (int)(((ulonglong)(uint)(result1 * 0x19) / (ulonglong)(uint)(result6 << 2)) / 100) * 0x10;\n    return;\n  }\n  result10 = FUN_08003c70();\n  result5 = parameters[1];\n  result1 = FUN_08003c70();\n  result6 = parameters[1];\n  result2 = FUN_08003c70();\n  result7 = parameters[1];\n  result3 = FUN_08003c70();\n  result8 = parameters[1];\n  result4 = FUN_08003c70();\n  iRam40013808 = ((uint)((int)((ulonglong)\n                               (((uint)(result3 * 0x19) / (uint)(result8 << 2) +\n                                (int)(((ulonglong)(uint)(result4 * 0x19) /\n                                      (ulonglong)(uint)(parameters[1] << 2)) / 100) * -100) * 0x10 +\n                               0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n                 ((((uint)(result1 * 0x19) / (uint)(result6 << 2) +\n                   (int)(((ulonglong)(uint)(result2 * 0x19) / (ulonglong)(uint)(result7 << 2)) / 100) *\n                   -100) * 0x10 + 0x32) / 100 & 0xf0) +\n                 (int)(((ulonglong)(uint)(result10 * 0x19) / (ulonglong)(uint)(result5 << 2)) / 100) *\n                 0x10;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004204": "update_parameters_08004204",
                "param_1": "parameters",
                "iVar1": "result1",
                "iVar2": "result2",
                "iVar3": "result3",
                "iVar4": "result4",
                "iVar5": "result5",
                "iVar6": "result6",
                "iVar7": "result7",
                "iVar8": "result8",
                "iVar9": "result9",
                "iVar10": "result10"
            },
            "calling": [
                "FUN_0800441a"
            ],
            "called": [
                "FUN_08003c50",
                "FUN_08003c70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080043b4": {
            "entrypoint": "0x080043b4",
            "current_name": "check_parameters_080043b4",
            "code": "\nundefined4 checkParameters_080043b4(uint **paramArray,uint flag,uint isFlagSet,int comparisonValue,uint maxDifference)\n\n{\n  int result;\n  \n  do {\n    if (((flag & ~**paramArray) == 0) != isFlagSet) {\n      return 0;\n    }\n  } while ((maxDifference == 0xffffffff) ||\n          ((maxDifference != 0 && (result = FUN_08001cc4(), (uint)(result - comparisonValue) <= maxDifference))));\n  (*paramArray)[3] = (*paramArray)[3] & 0xfffffe5f;\n  (*paramArray)[5] = (*paramArray)[5] & 0xfffffffe;\n  *(undefined *)((int)paramArray + 0x39) = 0x20;\n  *(undefined *)((int)paramArray + 0x3a) = 0x20;\n  *(undefined *)(paramArray + 0xe) = 0;\n  return 3;\n}\n\n",
            "renaming": {
                "FUN_080043b4": "check_parameters_080043b4",
                "param_1": "paramArray",
                "param_2": "flag",
                "param_3": "isFlagSet",
                "param_4": "comparisonValue",
                "param_5": "maxDifference",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08004478"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004418": {
            "entrypoint": "0x08004418",
            "current_name": "FUNC_08004418",
            "code": "\nvoid FUNC_08004418(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004418": "FUNC_08004418"
            },
            "calling": [
                "FUN_0800441a"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800441a": {
            "entrypoint": "0x0800441a",
            "current_name": "initialize_data_structure_0800441a",
            "code": "\nundefined4 initialize_data_structure_0800441a(int *data_structure)\n\n{\n  if (data_structure != (int *)0x0) {\n    if (*(char *)((int)data_structure + 0x39) == '\\0') {\n      *(undefined *)(data_structure + 0xe) = 0;\n      FUNC_08004418();\n    }\n    *(undefined *)((int)data_structure + 0x39) = 0x24;\n    *(uint *)(*data_structure + 0xc) = *(uint *)(*data_structure + 0xc) & 0xffffdfff;\n    FUN_08004204(data_structure);\n    *(uint *)(*data_structure + 0x10) = *(uint *)(*data_structure + 0x10) & 0xffffb7ff;\n    *(uint *)(*data_structure + 0x14) = *(uint *)(*data_structure + 0x14) & 0xffffffd5;\n    *(uint *)(*data_structure + 0xc) = *(uint *)(*data_structure + 0xc) | 0x2000;\n    data_structure[0xf] = 0;\n    *(undefined *)((int)data_structure + 0x39) = 0x20;\n    *(undefined *)((int)data_structure + 0x3a) = 0x20;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800441a": "initialize_data_structure_0800441a",
                "param_1": "data_structure"
            },
            "calling": [
                "FUN_08004f4c"
            ],
            "called": [
                "FUN_08004204",
                "FUN_08004418"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004478": {
            "entrypoint": "0x08004478",
            "current_name": "process_data_08004478",
            "code": "\nundefined4 processData_08004478(int *dataArray,ushort *shortArray,int arrayLength,undefined4 paramValue)\n\n{\n  int result;\n  undefined4 returnValue;\n  \n  if (*(char *)((int)dataArray + 0x39) == ' ') {\n    if (shortArray == (ushort *)0x0) {\n      returnValue = 1;\n    }\n    else if (arrayLength == 0) {\n      returnValue = 1;\n    }\n    else if (*(char *)(dataArray + 0xe) == '\\x01') {\n      returnValue = 2;\n    }\n    else {\n      *(undefined *)(dataArray + 0xe) = 1;\n      dataArray[0xf] = 0;\n      *(undefined *)((int)dataArray + 0x39) = 0x21;\n      returnValue = FUN_08001cc4();\n      *(short *)(dataArray + 9) = (short)arrayLength;\n      *(short *)((int)dataArray + 0x26) = (short)arrayLength;\n      while (*(short *)((int)dataArray + 0x26) != 0) {\n        *(short *)((int)dataArray + 0x26) = *(short *)((int)dataArray + 0x26) + -1;\n        if (dataArray[2] == 0x1000) {\n          result = FUN_080043b4(dataArray,0x80,0,returnValue,paramValue);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*dataArray + 4) = *shortArray & 0x1ff;\n          if (dataArray[4] == 0) {\n            shortArray = shortArray + 1;\n          }\n          else {\n            shortArray = (ushort *)((int)shortArray + 1);\n          }\n        }\n        else {\n          result = FUN_080043b4(dataArray,0x80,0,returnValue,paramValue);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*dataArray + 4) = (uint)*(byte *)shortArray;\n          shortArray = (ushort *)((int)shortArray + 1);\n        }\n      }\n      result = FUN_080043b4(dataArray,0x40,0,returnValue,paramValue);\n      if (result == 0) {\n        *(undefined *)((int)dataArray + 0x39) = 0x20;\n        *(undefined *)(dataArray + 0xe) = 0;\n        returnValue = 0;\n      }\n      else {\n        returnValue = 3;\n      }\n    }\n  }\n  else {\n    returnValue = 2;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08004478": "process_data_08004478",
                "param_1": "dataArray",
                "param_2": "shortArray",
                "param_3": "arrayLength",
                "param_4": "paramValue",
                "iVar1": "result",
                "uVar2": "returnValue"
            },
            "calling": [
                "FUN_080053d4"
            ],
            "called": [
                "FUN_08001cc4",
                "FUN_080043b4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800455a": {
            "entrypoint": "0x0800455a",
            "current_name": "validate_and_update_data_0800455a",
            "code": "\nundefined4 validate_and_update_data_0800455a(int *data_array,int value_1,int value_2)\n\n{\n  if (*(char *)((int)data_array + 0x39) != ' ') {\n    return 2;\n  }\n  if (value_1 == 0) {\n    return 1;\n  }\n  if (value_2 == 0) {\n    return 1;\n  }\n  if (*(char *)(data_array + 0xe) != '\\x01') {\n    data_array[length_index] = value_1;\n    *(short *)(data_array + 9) = (short)value_2;\n    *(short *)((int)data_array + 0x26) = (short)value_2;\n    data_array[flag] = 0;\n    *(undefined *)((int)data_array + 0x39) = 0x21;\n    *(undefined *)(data_array + 0xe) = 0;\n    *(uint *)(*data_array + 0xc) = *(uint *)(*data_array + 0xc) | 0x80;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_0800455a": "validate_and_update_data_0800455a",
                "param_1": "data_array",
                "param_2": "value_1",
                "param_3": "value_2",
                "param_1[8]": "data_array[length_index]",
                "param_1[0xf]": "data_array[flag]"
            },
            "calling": [
                "FUN_08005604",
                "FUN_08005568"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080045a2": {
            "entrypoint": "0x080045a2",
            "current_name": "validate_input_080045a2",
            "code": "\nundefined4 validate_input_080045a2(int *input_array,int value,int size)\n\n{\n  if (*(char *)((int)input_array + 0x3a) != ' ') {\n    return 2;\n  }\n  if (value == 0) {\n    return 1;\n  }\n  if (size == 0) {\n    return 1;\n  }\n  if (*(char *)(input_array + 0xe) != '\\x01') {\n    input_array[10] = value;\n    *(short *)(input_array + 0xb) = (short)size;\n    *(short *)((int)input_array + 0x2e) = (short)size;\n    input_array[15] = 0;\n    *(undefined *)((int)input_array + 0x3a) = 0x22;\n    *(undefined *)(input_array + 0xe) = 0;\n    *(uint *)(*input_array + 0xc) = *(uint *)(*input_array + 0xc) | 0x100;\n    *(uint *)(*input_array + 0x14) = *(uint *)(*input_array + 0x14) | 1;\n    *(uint *)(*input_array + 0xc) = *(uint *)(*input_array + 0xc) | 0x20;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_080045a2": "validate_input_080045a2",
                "param_1": "input_array",
                "param_2": "value",
                "param_3": "size",
                "param_1[10]": "input_array[10]",
                "param_1[0xf]": "input_array[15]"
            },
            "calling": [
                "FUN_08005510",
                "FUN_080054d4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080045fe": {
            "entrypoint": "0x080045fe",
            "current_name": "update_permissions_080045fe",
            "code": "\nundefined4 updatePermissions_080045fe(int *ptr)\n\n{\n  *(uint *)(*ptr + 0xc) = *(uint *)(*ptr + 0xc) & 0xffffffbf;\n  *(undefined *)((int)ptr + 0x39) = 0x20;\n  FUN_08005604();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080045fe": "update_permissions_080045fe",
                "param_1": "ptr"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [
                "FUN_08005604"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004618": {
            "entrypoint": "0x08004618",
            "current_name": "process_binary_data_08004618",
            "code": "\nundefined4 processBinaryData_08004618(int *binaryData)\n\n{\n  byte *bytePointer;\n  short loopCounter;\n  undefined *undefinedPointer;\n  \n  if (*(char *)((int)binaryData + 0x3a) != '\\\"') {\n    return 2;\n  }\n  if (binaryData[2] == 0x1000) {\n    if (binaryData[4] == 0) {\n      *(ushort *)binaryData[10] = (ushort)((uint)(*(int *)(*binaryData + 4) << 0x17) >> 0x17);\n      binaryData[10] = binaryData[10] + 2;\n    }\n    else {\n      *(ushort *)binaryData[10] = (ushort)*(undefined4 *)(*binaryData + 4) & 0xff;\n      binaryData[10] = binaryData[10] + 1;\n    }\n  }\n  else if (binaryData[4] == 0) {\n    undefinedPointer = (undefined *)binaryData[10];\n    binaryData[10] = (int)(undefinedPointer + 1);\n    *undefinedPointer = (char)*(undefined4 *)(*binaryData + 4);\n  }\n  else {\n    bytePointer = (byte *)binaryData[10];\n    binaryData[10] = (int)(bytePointer + 1);\n    *bytePointer = (byte)*(undefined4 *)(*binaryData + 4) & 0x7f;\n  }\n  loopCounter = *(short *)((int)binaryData + 0x2e) + -1;\n  *(short *)((int)binaryData + 0x2e) = loopCounter;\n  if (loopCounter != 0) {\n    return 0;\n  }\n  *(uint *)(*binaryData + 0xc) = *(uint *)(*binaryData + 0xc) & 0xffffffdf;\n  *(uint *)(*binaryData + 0xc) = *(uint *)(*binaryData + 0xc) & 0xfffffeff;\n  *(uint *)(*binaryData + 0x14) = *(uint *)(*binaryData + 0x14) & 0xfffffffe;\n  *(undefined *)((int)binaryData + 0x3a) = 0x20;\n  FUN_080055e0();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004618": "process_binary_data_08004618",
                "param_1": "binaryData",
                "pbVar1": "bytePointer",
                "sVar2": "loopCounter",
                "puVar3": "undefinedPointer"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [
                "FUN_080055e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080046b8": {
            "entrypoint": "0x080046b8",
            "current_name": "process_flags_080046b8",
            "code": "\nvoid processFlags_080046b8(uint **flags)\n\n{\n  int returnValue;\n  uint flagValue;\n  uint *ptrFlags;\n  uint isFlagSet;\n  uint firstFlag;\n  \n  ptrFlags = *flags;\n  firstFlag = *ptrFlags;\n  flagValue = ptrFlags[3];\n  if ((((firstFlag & 0xf) == 0) && ((firstFlag & 0x20) != 0)) && ((flagValue & 0x20) != 0)) {\n    FUN_08004618(flags);\n    return;\n  }\n  if (((firstFlag & 0xf) == 0) || ((isFlagSet = ptrFlags[5] & 1, isFlagSet == 0 && ((flagValue & 0x120) == 0)))) {\n    if (((firstFlag & 0x80) != 0) && ((flagValue & 0x80) != 0)) {\n      FUN_08004198(flags);\n      return;\n    }\n    if (((firstFlag & 0x40) != 0) && ((flagValue & 0x40) != 0)) {\n      FUN_080045fe(flags);\n    }\n  }\n  else {\n    if (((firstFlag & 1) != 0) && ((flagValue & 0x100) != 0)) {\n      flags[0xf] = (uint *)((uint)flags[0xf] | 1);\n    }\n    if (((firstFlag & 4) != 0) && (isFlagSet != 0)) {\n      flags[0xf] = (uint *)((uint)flags[0xf] | 2);\n    }\n    if (((firstFlag & 2) != 0) && (isFlagSet != 0)) {\n      flags[0xf] = (uint *)((uint)flags[0xf] | 4);\n    }\n    if (((firstFlag & 8) != 0) && (isFlagSet != 0)) {\n      flags[0xf] = (uint *)((uint)flags[0xf] | 8);\n    }\n    if (flags[0xf] != (uint *)0x0) {\n      if (((firstFlag & 0x20) != 0) && ((flagValue & 0x20) != 0)) {\n        FUN_08004618(flags);\n      }\n      if ((((uint)flags[0xf] & 8) == 0) && (((*flags)[5] & 0x40) == 0)) {\n        FUNC_08005650(flags);\n        flags[0xf] = (uint *)0x0;\n        return;\n      }\n      FUN_0800417c(flags);\n      ptrFlags = *flags;\n      if ((ptrFlags[5] & 0x40) == 0) {\n        FUNC_08005650(flags);\n        return;\n      }\n      ptrFlags[5] = ptrFlags[5] & 0xffffffbf;\n      if (flags[0xd] == (uint *)0x0) {\n        FUNC_08005650(flags);\n        return;\n      }\n      flags[0xd][0xd] = (uint)&LAB_080047d8_1;\n      returnValue = FUN_0800258c(flags[0xd]);\n      if (returnValue != 0) {\n        (*(code *)flags[0xd][0xd])();\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080046b8": "process_flags_080046b8",
                "param_1": "flags",
                "iVar1": "returnValue",
                "uVar2": "flagValue",
                "puVar3": "ptrFlags",
                "uVar4": "isFlagSet",
                "uVar5": "firstFlag"
            },
            "calling": [],
            "called": [
                "FUN_08004198",
                "FUN_080045fe",
                "FUN_08004618",
                "FUN_0800258c",
                "FUN_08005650",
                "FUN_0800417c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047e8": {
            "entrypoint": "0x080047e8",
            "current_name": "combine_bytes_080047e8",
            "code": "\nbyte combineBytes_080047e8(int inputAddress)\n\n{\n  return *(byte *)(inputAddress + 0x3a) | *(byte *)(inputAddress + 0x39);\n}\n\n",
            "renaming": {
                "FUN_080047e8": "combine_bytes_080047e8",
                "param_1": "inputAddress"
            },
            "calling": [
                "FUN_080054b0",
                "FUN_0800548c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047f4": {
            "entrypoint": "0x080047f4",
            "current_name": "read_bit_from_uint_080047f4",
            "code": "\nuint read_bit_from_uint_080047f4(uint data,int offset)\n\n{\n  return *(uint *)(offset + ((data << 0x18) >> 0x1c) * 4) >> (data & 0xf) & 1;\n}\n\n",
            "renaming": {
                "FUN_080047f4": "read_bit_from_uint_080047f4",
                "param_1": "data",
                "param_2": "offset"
            },
            "calling": [
                "FUN_08005848",
                "FUN_080057b4",
                "FUN_08005890"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800480a": {
            "entrypoint": "0x0800480a",
            "current_name": "update_bitwise_value_0800480a",
            "code": "\nvoid updateBitwiseValue_0800480a(uint inputValue,int arrayAddress)\n\n{\n  uint shiftAmount;\n  \n  shiftAmount = (inputValue << 0x18) >> 0x1c;\n  *(uint *)(arrayAddress + shiftAmount * 4) = *(uint *)(arrayAddress + shiftAmount * 4) | 1 << (inputValue & 0xf);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800480a": "update_bitwise_value_0800480a",
                "param_1": "inputValue",
                "param_2": "arrayAddress",
                "uVar1": "shiftAmount"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004828": {
            "entrypoint": "0x08004828",
            "current_name": "update_bit_in_array_08004828",
            "code": "\nvoid updateBitInArray_08004828(uint bitIndex,int arrayAddress)\n\n{\n  uint byteIndex;\n  \n  byteIndex = (bitIndex << 0x18) >> 0x1c;\n  *(uint *)(arrayAddress + byteIndex * 4) = *(uint *)(arrayAddress + byteIndex * 4) & ~(1 << (bitIndex & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004828": "update_bit_in_array_08004828",
                "param_1": "bitIndex",
                "param_2": "arrayAddress",
                "uVar1": "byteIndex"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004848": {
            "entrypoint": "0x08004848",
            "current_name": "get_memory_address_08004848",
            "code": "\nundefined4 getMemoryAddress_08004848(undefined4 inputValue)\n\n{\n  switch(inputValue) {\n  case 0:\n    return 0x40010800;\n  case 1:\n    return 0x40010c00;\n  case 2:\n    return 0x40011000;\n  case 3:\n    return 0x40011400;\n  case 4:\n    return 0x40011800;\n  default:\n    return 0;\n  }\n}\n\n",
            "renaming": {
                "FUN_08004848": "get_memory_address_08004848",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08005848",
                "FUN_08005890"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004884": {
            "entrypoint": "0x08004884",
            "current_name": "set_flag_and_return_address_08004884",
            "code": "\n\n\nundefined4 setFlagAndReturnAddress_08004884(undefined4 flag)\n\n{\n  undefined4 returnValue;\n  \n  switch(flag) {\n  case 0:\n    _DAT_40021018 = _DAT_40021018 | 4;\n    returnValue = 0x40010800;\n    break;\n  case 1:\n    _DAT_40021018 = _DAT_40021018 | 8;\n    returnValue = 0x40010c00;\n    break;\n  case 2:\n    _DAT_40021018 = _DAT_40021018 | 0x10;\n    returnValue = 0x40011000;\n    break;\n  case 3:\n    _DAT_40021018 = _DAT_40021018 | 0x20;\n    returnValue = 0x40011400;\n    break;\n  case 4:\n    _DAT_40021018 = _DAT_40021018 | 0x40;\n    returnValue = 0x40011800;\n    break;\n  default:\n    returnValue = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08004884": "set_flag_and_return_address_08004884",
                "param_1": "flag",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08004bb0",
                "FUN_08004974",
                "FUN_08004f4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800492c": {
            "entrypoint": "0x0800492c",
            "current_name": "calculate_value_0800492c",
            "code": "\nuint calculateValue_0800492c(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  int result;\n  uint shiftedValue;\n  \n  result = FUN_08004cce(input1,&DAT_08007400,input3,input4,input4);\n  shiftedValue = (uint)(result << 0xc) >> 0x1b;\n  if (0x10 < shiftedValue - 1) {\n    shiftedValue = 0;\n  }\n  return shiftedValue;\n}\n\n",
            "renaming": {
                "FUN_0800492c": "calculate_value_0800492c",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "result",
                "uVar2": "shiftedValue"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08004cce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004948": {
            "entrypoint": "0x08004948",
            "current_name": "get_value_from_input_08004948",
            "code": "\nundefined4 get_value_from_input_08004948(undefined4 input_param_1,undefined4 input_param_2,undefined4 input_param_3,undefined4 input_param_4)\n\n{\n  int result;\n  uint shifted_value;\n  \n  result = FUN_08004cce(input_param_1,&DAT_080074b4,input_param_3,input_param_4,input_param_4);\n  shifted_value = (uint)(result << 0xc) >> 0x1b;\n  if (shifted_value == 3) {\n    return 8;\n  }\n  if (shifted_value != 4) {\n    if (shifted_value != 2) {\n      return 0;\n    }\n    return 4;\n  }\n  return 0xc;\n}\n\n",
            "renaming": {
                "FUN_08004948": "get_value_from_input_08004948",
                "param_1": "input_param_1",
                "param_2": "input_param_2",
                "param_3": "input_param_3",
                "param_4": "input_param_4",
                "iVar1": "result",
                "uVar2": "shifted_value"
            },
            "calling": [
                "FUN_08004b3c"
            ],
            "called": [
                "FUN_08004cce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004974": {
            "entrypoint": "0x08004974",
            "current_name": "initialize_flags_08004974",
            "code": "\n\n\nvoid initializeFlags_08004974(int *flagPointer,undefined4 dataValue)\n\n{\n  undefined4 result;\n  uint flagStatus;\n  int flagValue;\n  uint bitMask;\n  undefined4 count;\n  undefined4 value;\n  \n  flagValue = *flagPointer;\n  if (flagValue == 0x40012400) {\n    flagStatus = _DAT_40021018 | 0x200;\n    flagValue = 0x200;\n    _DAT_40021018 = flagStatus;\n  }\n  else {\n    flagStatus = 0x40012800;\n    if (flagValue == 0x40012800) {\n      flagStatus = _DAT_40021018 | 0x400;\n      flagValue = 0x400;\n      _DAT_40021018 = flagStatus;\n    }\n  }\n  result = FUN_08004884((uint)((int)(char)DAT_20000080 << 0x18) >> 0x1c,dataValue,flagStatus,flagValue);\n  bitMask = 1 << (DAT_20000080 & 0xf) & 0xffff;\n  count = 3;\n  value = 0;\n  FUN_08002624(result,&bitMask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004974": "initialize_flags_08004974",
                "param_1": "flagPointer",
                "param_2": "dataValue",
                "uVar1": "result",
                "uVar2": "flagStatus",
                "iVar3": "flagValue",
                "local_18": "bitMask",
                "local_14": "count",
                "local_10": "value"
            },
            "calling": [
                "FUN_0800213c"
            ],
            "called": [
                "FUN_08002624",
                "FUN_08004884"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080049f0": {
            "entrypoint": "0x080049f0",
            "current_name": "update_permissions_080049f0",
            "code": "\n\n\nvoid updatePermissions_080049f0(int *ptr_value)\n\n{\n  if (*ptr_value != 0x40012400) {\n    if (*ptr_value == 0x40012800) {\n      _DAT_4002100c = _DAT_4002100c & 0xfffffbff;\n      _DAT_40021018 = _DAT_40021018 & 0xfffffbff;\n    }\n    return;\n  }\n  _DAT_4002100c = _DAT_4002100c & 0xfffffdff;\n  _DAT_40021018 = _DAT_40021018 & 0xfffffdff;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080049f0": "update_permissions_080049f0",
                "param_1": "ptr_value"
            },
            "calling": [
                "FUN_0800224c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a4c": {
            "entrypoint": "0x08004a4c",
            "current_name": "validate_and_process_data_08004a4c",
            "code": "\nundefined2 validate_and_process_data_08004a4c(undefined4 input_data)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined2 result;\n  uint data_length;\n  undefined4 flag_1;\n  undefined4 flag_2;\n  int buffer;\n  undefined4 temp_1;\n  undefined4 temp_2;\n  undefined4 temp_3;\n  undefined4 temp_4;\n  undefined4 temp_5;\n  undefined4 temp_6;\n  undefined4 temp_7;\n  undefined4 temp_8;\n  \n  FUN_080061e0(&buffer,0,0x30);\n  data_length = 0;\n  flag_1 = 0;\n  flag_2 = 0;\n  result = 0;\n  buffer = FUN_08004c78(input_data,&DAT_08007400);\n  if (buffer == 0) {\n    result = 0;\n  }\n  else {\n    temp_1 = 0;\n    temp_2 = 0;\n    temp_3 = 0;\n    temp_5 = 0;\n    temp_7 = 0xe0000;\n    temp_8 = 0;\n    temp_4 = 1;\n    temp_6 = 0;\n    DAT_20000080 = (undefined)input_data;\n    iVar1 = FUN_0800213c(&buffer);\n    if (iVar1 == 0) {\n      data_length = FUN_0800492c(input_data);\n      if (data_length < 0x12) {\n        flag_1 = 1;\n        flag_2 = 2;\n        iVar1 = FUN_08001e48(&buffer,&data_length);\n        if (iVar1 == 0) {\n          iVar1 = FUN_08002384(&buffer);\n          if (iVar1 == 0) {\n            iVar1 = FUN_08002004(&buffer);\n            if (iVar1 == 0) {\n              iVar1 = FUN_08001cd0(&buffer,10);\n              if (iVar1 == 0) {\n                uVar2 = FUN_08001f80(&buffer);\n                if ((uVar2 & 0x200) != 0) {\n                  result = FUN_08001e40(&buffer);\n                }\n                iVar1 = FUN_08002348(&buffer);\n                if (iVar1 == 0) {\n                  iVar1 = FUN_0800224c(&buffer);\n                  if (iVar1 != 0) {\n                    result = 0;\n                  }\n                }\n                else {\n                  result = 0;\n                }\n              }\n              else {\n                result = 0;\n              }\n            }\n            else {\n              result = 0;\n            }\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        result = 0;\n      }\n    }\n    else {\n      result = 0;\n    }\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08004a4c": "validate_and_process_data_08004a4c",
                "param_1": "input_data",
                "local_46": "result",
                "local_44": "data_length",
                "local_40": "flag_1",
                "local_3c": "flag_2",
                "local_38": "buffer",
                "local_34": "temp_1",
                "local_30": "temp_2",
                "local_2c": "temp_3",
                "local_28": "temp_4",
                "local_24": "temp_5",
                "local_20": "temp_6",
                "local_1c": "temp_7",
                "local_10": "temp_8"
            },
            "calling": [
                "FUN_08005754"
            ],
            "called": [
                "FUN_0800213c",
                "FUN_08001f80",
                "FUN_08004c78",
                "FUN_08002384",
                "FUN_08002348",
                "FUN_08002004",
                "FUN_08001e40",
                "FUN_08001e48",
                "FUN_0800224c",
                "FUN_08001cd0",
                "FUN_080061e0",
                "FUN_0800492c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b34": {
            "entrypoint": "0x08004b34",
            "current_name": "execute_initialization_08004b34",
            "code": "\nvoid executeInitialization_08004b34(void)\n\n{\n  FUN_08004d90();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b34": "execute_initialization_08004b34"
            },
            "calling": [
                "FUN_08003ed8"
            ],
            "called": [
                "FUN_08004d90"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b3c": {
            "entrypoint": "0x08004b3c",
            "current_name": "process_data_08004b3c",
            "code": "\nvoid processData_08004b3c(undefined4 inputData)\n\n{\n  int result;\n  uint flags;\n  int processedData [17];\n  \n  processedData[0] = FUN_08004c78(inputData,&DAT_080074b4);\n  if ((processedData[0] != 0) &&\n     ((((result = FUN_08004948(inputData), result == 0 || (result == 4)) || (result == 8)) ||\n      ((result == 0xc || (result == 0x18)))))) {\n    flags = FUN_08004cce(inputData,&DAT_080074b4);\n    if ((flags & 0x100000) == 0) {\n      FUN_080040b0(processedData,result);\n    }\n    else {\n      FUN_0800412c(processedData,result);\n    }\n    FUN_08003ed8(processedData);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b3c": "process_data_08004b3c",
                "param_1": "inputData",
                "iVar1": "result",
                "uVar2": "flags",
                "local_50": "processedData"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [
                "FUN_0800412c",
                "FUN_08004c78",
                "FUN_080040b0",
                "FUN_08004948",
                "FUN_08003ed8",
                "FUN_08004cce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b94": {
            "entrypoint": "0x08004b94",
            "current_name": "initialize_app_08004b94",
            "code": "\nvoid initialize_app_08004b94(void)\n\n{\n  FUN_08001cc4();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b94": "initialize_app_08004b94"
            },
            "calling": [
                "FUN_080058e0"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b9c": {
            "entrypoint": "0x08004b9c",
            "current_name": "FUNC_08004b9c",
            "code": "\nvoid FUNC_08004b9c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b9c": "FUNC_08004b9c"
            },
            "calling": [
                "FUN_08004b9e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004b9e": {
            "entrypoint": "0x08004b9e",
            "current_name": "initialize_and_setup_08004b9e",
            "code": "\nvoid initialize_and_setup_08004b9e(void)\n\n{\n  FUN_08001cac();\n  FUN_08002582();\n  FUNC_08004b9c();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b9e": "initialize_and_setup_08004b9e"
            },
            "calling": [],
            "called": [
                "FUN_08001cac",
                "FUN_08002582",
                "FUN_08004b9c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004bb0": {
            "entrypoint": "0x08004bb0",
            "current_name": "initialize_peripheral_08004bb0",
            "code": "\n\n\nvoid initializePeripheral_08004bb0(uint peripheralCode,undefined4 parameter2,undefined4 parameter3)\n\n{\n  undefined4 transformedValue;\n  uint bitMask;\n  undefined4 localVariable1;\n  undefined4 localVariable2;\n  undefined4 localVariable3;\n  \n  transformedValue = FUN_08004884((peripheralCode << 0x18) >> 0x1c);\n  bitMask = 1 << (peripheralCode & 0xf) & 0xffff;\n  localVariable3 = 3;\n  _DAT_40021018 = _DAT_40021018 | 1;\n  if ((peripheralCode - 0xd & 0xff) < 2) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n  }\n  if (((peripheralCode == 0xf) || (peripheralCode == 0x13)) || (peripheralCode == 0x14)) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n  }\n  localVariable1 = parameter2;\n  localVariable2 = parameter3;\n  FUN_08002624(transformedValue,&bitMask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004bb0": "initialize_peripheral_08004bb0",
                "param_1": "peripheralCode",
                "param_2": "parameter2",
                "param_3": "parameter3",
                "uVar1": "transformedValue",
                "local_20": "bitMask",
                "local_1c": "localVariable1",
                "local_18": "localVariable2",
                "local_14": "localVariable3"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [
                "FUN_08002624",
                "FUN_08004884"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c30": {
            "entrypoint": "0x08004c30",
            "current_name": "update_param_status_08004c30",
            "code": "\nvoid updateParamStatus_08004c30(undefined4 status,undefined2 flag,int count,undefined4 data)\n\n{\n  if (count == 0) {\n    FUN_0800281e(status,flag,0,data,data);\n    return;\n  }\n  FUN_0800281e(status,flag,1,data,data);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c30": "update_param_status_08004c30",
                "param_1": "status",
                "param_2": "flag",
                "param_3": "count",
                "param_4": "data"
            },
            "calling": [
                "FUN_08005848"
            ],
            "called": [
                "FUN_0800281e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c48": {
            "entrypoint": "0x08004c48",
            "current_name": "execute_function_with_params_08004c48",
            "code": "\nvoid executeFunctionWithParams_08004c48(undefined4 arg1,undefined2 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  FUN_08002810(arg1,arg2,arg3,arg4,arg4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c48": "execute_function_with_params_08004c48",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "calling": [
                "FUN_08005890"
            ],
            "called": [
                "FUN_08002810"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c52": {
            "entrypoint": "0x08004c52",
            "current_name": "initialize_system_08004c52",
            "code": "\nvoid initialize_system_08004c52(void)\n\n{\n  FUN_08001c88();\n  FUN_08001b48();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c52": "initialize_system_08004c52"
            },
            "calling": [
                "FUN_08001c32"
            ],
            "called": [
                "FUN_08001b48",
                "FUN_08001c88"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c5e": {
            "entrypoint": "0x08004c5e",
            "current_name": "find_value_index_08004c5e",
            "code": "\nundefined4 find_value_index_08004c5e(int value_to_find,char *array)\n\n{\n  while( true ) {\n    if (*array == -1) {\n      return 0;\n    }\n    if (*array == value_to_find) break;\n    array = array + 0xc;\n  }\n  return *(undefined4 *)(array + 4);\n}\n\n",
            "renaming": {
                "FUN_08004c5e": "find_value_index_08004c5e",
                "param_1": "value_to_find",
                "param_2": "array"
            },
            "calling": [
                "FUN_08004c78",
                "FUN_08004c5e"
            ],
            "called": [
                "FUN_08004c5e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c78": {
            "entrypoint": "0x08004c78",
            "current_name": "check_valid_param_08004c78",
            "code": "\nundefined4 checkValidParam_08004c78(int inputParam)\n\n{\n  undefined4 result;\n  \n  if (inputParam != -1) {\n    result = FUN_08004c5e();\n    return result;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004c78": "check_valid_param_08004c78",
                "param_1": "inputParam",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080053d4",
                "FUN_08004f4c",
                "FUN_08004a4c",
                "FUN_08004b3c",
                "FUN_08005384"
            ],
            "called": [
                "FUN_08004c5e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c8a": {
            "entrypoint": "0x08004c8a",
            "current_name": "find_character_index_08004c8a",
            "code": "\nint find_character_index_08004c8a(int character,char *character_array)\n\n{\n  while( true ) {\n    if (*(int *)(character_array + 4) == 0) {\n      return -1;\n    }\n    if (*(int *)(character_array + 4) == character) break;\n    character_array = character_array + 0xc;\n  }\n  return (int)*character_array;\n}\n\n",
            "renaming": {
                "FUN_08004c8a": "find_character_index_08004c8a",
                "param_1": "character",
                "param_2": "character_array"
            },
            "calling": [
                "FUN_08004ca2",
                "FUN_08004c8a"
            ],
            "called": [
                "FUN_08004c8a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ca2": {
            "entrypoint": "0x08004ca2",
            "current_name": "check_validity_08004ca2",
            "code": "\nundefined4 checkValidity_08004ca2(int inputValue)\n\n{\n  undefined4 result;\n  \n  if (inputValue != 0) {\n    result = FUN_08004c8a();\n    return result;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08004ca2": "check_validity_08004ca2",
                "param_1": "inputValue",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08005b54",
                "FUN_08005384"
            ],
            "called": [
                "FUN_08004c8a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004cb2": {
            "entrypoint": "0x08004cb2",
            "current_name": "find_value_in_array_08004cb2",
            "code": "\nundefined4 find_value_in_array_08004cb2(int value,char *array)\n\n{\n  while( true ) {\n    if (*array == -1) {\n      return 0xffffffff;\n    }\n    if (*array == value) break;\n    array = array + 0xc;\n  }\n  return *(undefined4 *)(array + 8);\n}\n\n",
            "renaming": {
                "FUN_08004cb2": "find_value_in_array_08004cb2",
                "param_1": "value",
                "param_2": "array"
            },
            "calling": [
                "FUN_08004cb2",
                "FUN_08004cce"
            ],
            "called": [
                "FUN_08004cb2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004cce": {
            "entrypoint": "0x08004cce",
            "current_name": "get_result_08004cce",
            "code": "\nundefined4 get_result_08004cce(int input_param)\n\n{\n  undefined4 result;\n  \n  if (input_param == -1) {\n    return 0xffffffff;\n  }\n  result = FUN_08004cb2();\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08004cce": "get_result_08004cce",
                "param_1": "input_param",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08004948",
                "FUN_08004f4c",
                "FUN_08004b3c",
                "FUN_0800492c"
            ],
            "called": [
                "FUN_08004cb2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ce2": {
            "entrypoint": "0x08004ce2",
            "current_name": "find_value_in_array_08004ce2",
            "code": "\nundefined4 find_value_in_array_08004ce2(int value,char *array)\n\n{\n  if (value == -1) {\n    return 0;\n  }\n  while( true ) {\n    if (*array == -1) {\n      return 0;\n    }\n    if (value == *array) break;\n    array = array + 0xc;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08004ce2": "find_value_in_array_08004ce2",
                "param_1": "value",
                "param_2": "array"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d06": {
            "entrypoint": "0x08004d06",
            "current_name": "compare_and_return_smaller_param_08004d06",
            "code": "\nint compare_and_return_smaller_param_08004d06(int value_1,int value_2)\n\n{\n  if (value_1 != value_2) {\n    if (value_1 == 0) {\n      return value_2;\n    }\n    if (value_2 == 0) {\n      return value_1;\n    }\n    value_1 = 0;\n  }\n  return value_1;\n}\n\n",
            "renaming": {
                "FUN_08004d06": "compare_and_return_smaller_param_08004d06",
                "param_1": "value_1",
                "param_2": "value_2"
            },
            "calling": [
                "FUN_08004f4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d18": {
            "entrypoint": "0x08004d18",
            "current_name": "execute_callback_function_08004d18",
            "code": "\nvoid executeCallbackFunction_08004d18(void)\n\n{\n  if (DAT_20000260 != (code *)0x0) {\n    (*DAT_20000260)(DAT_20000278);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d18": "execute_callback_function_08004d18"
            },
            "calling": [
                "FUN_08003ea0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d40": {
            "entrypoint": "0x08004d40",
            "current_name": "infinite_loop_08004d40",
            "code": "\nvoid infiniteLoop_08004d40(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08004d40": "infinite_loop_08004d40"
            },
            "calling": [
                "FUN_08001b48",
                "FUN_08004d40"
            ],
            "called": [
                "FUN_08004d40"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d44": {
            "entrypoint": "0x08004d44",
            "current_name": "initialize_hardware_08004d44",
            "code": "\n\n\nvoid initializeHardware_08004d44(void)\n\n{\n  _DAT_40021000 = _DAT_40021000 & 0xfef2ffff | 1;\n  _DAT_40021004 = _DAT_40021004 & 0xf8800000;\n  _DAT_40021008 = 0x9f0000;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d44": "initialize_hardware_08004d44"
            },
            "calling": [
                "entry"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d90": {
            "entrypoint": "0x08004d90",
            "current_name": "update_data_08004d90",
            "code": "\n\n\nvoid updateData_08004d90(int *dataPointer)\n\n{\n  if (*dataPointer == 0x40012c00) {\n    _DAT_40021018 = _DAT_40021018 & 0xfffff7ff;\n  }\n  if (*dataPointer == 0x40000000) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffe;\n  }\n  if (*dataPointer == 0x40000400) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffd;\n  }\n  if (*dataPointer == 0x40000800) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffb;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d90": "update_data_08004d90",
                "param_1": "dataPointer"
            },
            "calling": [
                "FUN_08004b34"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004df4": {
            "entrypoint": "0x08004df4",
            "current_name": "subtract_four_08004df4",
            "code": "\nint subtractFour_08004df4(int input)\n\n{\n  return input + -4;\n}\n\n",
            "renaming": {
                "FUN_08004df4": "subtract_four_08004df4",
                "param_1": "input"
            },
            "calling": [
                "FUN_08004e12",
                "FUN_08004df8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004df8": {
            "entrypoint": "0x08004df8",
            "current_name": "execute_code_if_flag_set_08004df8",
            "code": "\nvoid executeCodeIfFlagSet_08004df8(int flag)\n\n{\n  int functionPointer;\n  \n  functionPointer = FUN_08004df4();\n  if ((*(function **)(functionPointer + 0x4c) != (function *)0x0) && (*(char *)(flag + 0x1c) == '\\x01')) {\n    (**(function **)(functionPointer + 0x4c))(functionPointer,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004df8": "execute_code_if_flag_set_08004df8",
                "param_1": "flag",
                "iVar1": "functionPointer",
                "code": "function"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [
                "FUN_08004df4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e12": {
            "entrypoint": "0x08004e12",
            "current_name": "execute_callback_08004e12",
            "code": "\nvoid executeCallback_08004e12(void)\n\n{\n  int result;\n  \n  result = FUN_08004df4();\n  if (*(CallbackFunction **)(result + 0x48) != (CallbackFunction *)0x0) {\n    (**(CallbackFunction **)(result + 0x48))();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004e12": "execute_callback_08004e12",
                "iVar1": "result",
                "code": "CallbackFunction"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [
                "FUN_08004df4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e20": {
            "entrypoint": "0x08004e20",
            "current_name": "check_and_call_function_08004e20",
            "code": "\nvoid checkAndCallFunction_08004e20(void)\n\n{\n  if (DAT_2000027c != 0) {\n    FUN_08003f18();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004e20": "check_and_call_function_08004e20"
            },
            "calling": [],
            "called": [
                "FUN_08003f18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e70": {
            "entrypoint": "0x08004e70",
            "current_name": "subtract_four_08004e70",
            "code": "\nint subtractFour_08004e70(int number)\n\n{\n  return number + -4;\n}\n\n",
            "renaming": {
                "FUN_08004e70": "subtract_four_08004e70",
                "param_1": "number"
            },
            "calling": [
                "FUN_08004e74",
                "FUN_08004ec4",
                "FUN_08004ef4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e74": {
            "entrypoint": "0x08004e74",
            "current_name": "update_function_08004e74",
            "code": "\nvoid updateFunction_08004e74(int inputParam,int flagParam,int conditionParam,undefined4 undefinedParam)\n\n{\n  int returnValue;\n  \n  returnValue = FUN_08004e70();\n  if (conditionParam == *(int *)(inputParam + 0xc)) {\n    if (flagParam == 0) {\n      *(undefined *)(returnValue + 0x88) = 0;\n      *(undefined *)(returnValue + 0x5c) = 0;\n      if (*(code **)(returnValue + 100) != (code *)0x0) {\n        (**(code **)(returnValue + 100))();\n      }\n      FUN_08002af8(inputParam,returnValue + 0x68,*(undefined *)(returnValue + 0x88),8);\n      return;\n    }\n    *(undefined *)(returnValue + 0x5c) = 1;\n    FUN_08002b84(inputParam,returnValue + 0x68,0x20,8,undefinedParam);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004e74": "update_function_08004e74",
                "param_1": "inputParam",
                "param_2": "flagParam",
                "param_3": "conditionParam",
                "param_4": "undefinedParam",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08002cf2"
            ],
            "called": [
                "FUN_08002af8",
                "FUN_08004e70",
                "FUN_08002b84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ec4": {
            "entrypoint": "0x08004ec4",
            "current_name": "execute_function_if_conditions_met_08004ec4",
            "code": "\nvoid executeFunctionIfConditionsMet_08004ec4(undefined4 param)\n\n{\n  int result;\n  \n  result = FUN_08004e70();\n  if (((*(code **)(result + 0x60) != (code *)0x0) && (*(char *)(result + 0x5c) == '\\x01')) &&\n     (*(char *)(result + 0x2c) != ' ')) {\n    (**(code **)(result + 0x60))(result + 0x68);\n  }\n  FUN_08002c10(param);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004ec4": "execute_function_if_conditions_met_08004ec4",
                "param_1": "param",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800316c",
                "FUN_080032b4",
                "FUN_08002d1c"
            ],
            "called": [
                "FUN_08004e70",
                "FUN_08002c10"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ef4": {
            "entrypoint": "0x08004ef4",
            "current_name": "check_and_call_function_08004ef4",
            "code": "\nvoid checkAndCallFunction_08004ef4(undefined4 input)\n\n{\n  int result;\n  \n  result = FUN_08004e70();\n  if (*(char *)(result + 0x5d) == '\\0') {\n    FUN_08002c10(input);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004ef4": "check_and_call_function_08004ef4",
                "param_1": "input",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800316c"
            ],
            "called": [
                "FUN_08004e70",
                "FUN_08002c10"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004f4c": {
            "entrypoint": "0x08004f4c",
            "current_name": "configure_uart_pins_08004f4c",
            "code": "\n\n\nvoid configureUARTPins_08004f4c(int *pinConfiguration)\n\n{\n  int uart1PinConfiguration;\n  int uart2PinConfiguration;\n  undefined4 uartPeripheralValue;\n  uint uartPeripheralIndex;\n  uint uartPinBitMask;\n  uint uartPinsConfig;\n  uint uartPartialConfig;\n  undefined4 uartConfigLength;\n  \n  if (pinConfiguration != (int *)0x0) {\n    uart1PinConfiguration = FUN_08004c78((int)*(char *)(pinConfiguration + 0x16),&DAT_0800764c);\n    uart2PinConfiguration = FUN_08004c78((int)*(char *)((int)pinConfiguration + 0x59),&DAT_08007604);\n    if ((uart2PinConfiguration == 0) || (uart1PinConfiguration == 0)) {\n      FUN_080068f0(\"ERROR: at least one UART pin has no peripheral\\n\",uart2PinConfiguration);\n    }\n    else {\n      uart1PinConfiguration = FUN_08004d06(uart1PinConfiguration);\n      *pinConfiguration = uart1PinConfiguration;\n      if (uart1PinConfiguration == 0) {\n        FUN_080068f0(\"ERROR: U(S)ART pins mismatch\\n\");\n      }\n      else {\n        if (uart1PinConfiguration == 0x40013800) {\n          _DAT_4002100c = _DAT_4002100c & 0xffffbfff;\n          _DAT_40021018 = _DAT_40021018 | 0x4000;\n          *(undefined *)(pinConfiguration + 0x11) = 0;\n          *(undefined *)((int)pinConfiguration + 0x5a) = 0x25;\n        }\n        else if (uart1PinConfiguration == 0x40004400) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffdffff;\n          _DAT_4002101c = _DAT_4002101c | 0x20000;\n          *(undefined *)(pinConfiguration + 0x11) = 1;\n          *(undefined *)((int)pinConfiguration + 0x5a) = 0x26;\n        }\n        else if (uart1PinConfiguration == 0x40004800) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffbffff;\n          _DAT_4002101c = _DAT_4002101c | 0x40000;\n          *(undefined *)(pinConfiguration + 0x11) = 2;\n          *(undefined *)((int)pinConfiguration + 0x5a) = 0x27;\n        }\n        uartPeripheralValue = FUN_08004884((uint)((int)*(char *)((int)pinConfiguration + 0x59) << 0x18) >> 0x1c);\n        uartPeripheralIndex = FUN_08004cce((int)*(char *)((int)pinConfiguration + 0x59),&DAT_08007604);\n        uartPinBitMask = 1 << (*(byte *)((int)pinConfiguration + 0x59) & 0xf) & 0xffff;\n        uartPinsConfig = (uartPeripheralIndex >> 3 & 1) << 4 | uartPeripheralIndex & 7;\n        uartPartialConfig = (uartPeripheralIndex << 0x1a) >> 0x1e;\n        _DAT_40021018 = _DAT_40021018 | 1;\n        switch((uartPeripheralIndex << 0x11) >> 0x19) {\n        case 1:\n          _DAT_40010004 = _DAT_40010004 | 0x7000001;\n          break;\n        case 2:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          break;\n        case 3:\n          _DAT_40010004 = _DAT_40010004 | 0x7000002;\n          break;\n        case 4:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          break;\n        case 5:\n          _DAT_40010004 = _DAT_40010004 | 0x7000004;\n          break;\n        case 6:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          break;\n        case 7:\n          _DAT_40010004 = _DAT_40010004 | 0x7000008;\n          break;\n        case 8:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          break;\n        case 9:\n          _DAT_40010004 = _DAT_40010004 | 0x7000030;\n          break;\n        case 10:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          break;\n        case 0xb:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          break;\n        case 0xc:\n          _DAT_40010004 = _DAT_40010004 | 0x70000c0;\n          break;\n        case 0xd:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          break;\n        case 0xe:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          break;\n        case 0xf:\n          _DAT_40010004 = _DAT_40010004 | 0x7000300;\n          break;\n        case 0x10:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          break;\n        case 0x11:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          break;\n        case 0x12:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          break;\n        case 0x13:\n          _DAT_40010004 = _DAT_40010004 | 0x7000c00;\n          break;\n        case 0x14:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          break;\n        case 0x15:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          break;\n        case 0x16:\n          _DAT_40010004 = _DAT_40010004 | 0x7001000;\n          break;\n        case 0x17:\n          _DAT_40010004 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          break;\n        case 0x1b:\n          _DAT_40010004 = _DAT_40010004 | 0x7008000;\n          break;\n        case 0x1c:\n          _DAT_40010004 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          break;\n        case 0x21:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff;\n          break;\n        case 0x22:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          break;\n        case 0x23:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          break;\n        case 0x24:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n        }\n        uartConfigLength = 3;\n        FUN_08002624(uartPeripheralValue,&uartPinBitMask);\n        uartPeripheralValue = FUN_08004884((uint)((int)*(char *)(pinConfiguration + 0x16) << 0x18) >> 0x1c);\n        uartPeripheralIndex = FUN_08004cce((int)*(char *)(pinConfiguration + 0x16),&DAT_0800764c);\n        uartPinBitMask = 1 << (*(byte *)(pinConfiguration + 0x16) & 0xf) & 0xffff;\n        uartPinsConfig = (uartPeripheralIndex >> 3 & 1) << 4 | uartPeripheralIndex & 7;\n        uartPartialConfig = (uartPeripheralIndex << 0x1a) >> 0x1e;\n        FUN_08002624(uartPeripheralValue,&uartPinBitMask);\n        (&DAT_2000032c)[*(byte *)(pinConfiguration + 0x11)] = pinConfiguration + 1;\n        pinConfiguration[1] = *pinConfiguration;\n        pinConfiguration[2] = pinConfiguration[0x12];\n        pinConfiguration[3] = pinConfiguration[0x13];\n        pinConfiguration[4] = pinConfiguration[0x14];\n        pinConfiguration[5] = pinConfiguration[0x15];\n        pinConfiguration[6] = 0xc;\n        pinConfiguration[7] = 0;\n        pinConfiguration[8] = 0;\n        FUN_0800441a(pinConfiguration + 1);\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004f4c": "configure_uart_pins_08004f4c",
                "param_1": "pinConfiguration",
                "iVar1": "uart1PinConfiguration",
                "iVar2": "uart2PinConfiguration",
                "uVar3": "uartPeripheralValue",
                "uVar4": "uartPeripheralIndex",
                "local_20": "uartPinBitMask",
                "local_1c": "uartPinsConfig",
                "local_18": "uartPartialConfig",
                "local_14": "uartConfigLength"
            },
            "calling": [
                "FUN_08005a68",
                "FUN_08005384"
            ],
            "called": [
                "FUN_08002624",
                "FUN_08004c78",
                "FUN_08004d06",
                "FUN_08004884",
                "FUN_080068f0",
                "FUN_08004cce",
                "FUN_0800441a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005384": {
            "entrypoint": "0x08005384",
            "current_name": "initialize_data_08005384",
            "code": "\nvoid initializeData_08005384(void)\n\n{\n  int result;\n  undefined4 value;\n  \n  result = FUN_08004c78(2,&DAT_0800764c);\n  if (result != 0) {\n    value = FUN_08004c78(2,&DAT_0800764c);\n    DAT_200000e1 = FUN_08004ca2(value,&DAT_08007604);\n    DAT_200000e0 = 2;\n    DAT_200000d0 = 0x2580;\n    DAT_200000dc = 0;\n    DAT_200000d4 = 0;\n    DAT_200000d8 = 0;\n    FUN_08004f4c(&DAT_20000088);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005384": "initialize_data_08005384",
                "iVar1": "result",
                "uVar2": "value"
            },
            "calling": [
                "FUN_080053d4"
            ],
            "called": [
                "FUN_08004c78",
                "FUN_08004ca2",
                "FUN_08004f4c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080053d4": {
            "entrypoint": "0x080053d4",
            "current_name": "check_and_execute_function_080053d4",
            "code": "\nuint check_and_execute_function_080053d4(undefined4 input_param_1,uint input_param_2)\n\n{\n  int initial_value;\n  int result;\n  uint counter;\n  \n  initial_value = FUN_08001cc4();\n  result = FUN_08004c78(2,&DAT_0800764c);\n  if (result == 0) {\n    return 0;\n  }\n  for (counter = 0;\n      (counter < 5 &&\n      (((&DAT_2000032c)[counter] == 0 ||\n       (result = FUN_08004c78(2,&DAT_0800764c), *(int *)(&DAT_2000032c)[counter] != result))));\n      counter = counter + 1 & 0xff) {\n  }\n  if (4 < counter) {\n    if ((4 < DAT_200000cc) && (FUN_08005384(), 4 < DAT_200000cc)) {\n      return 0;\n    }\n    counter = (uint)DAT_200000cc;\n  }\n  do {\n    result = FUN_08004478((&DAT_2000032c)[counter],input_param_1,input_param_2 & 0xffff,1000);\n    if (result == 0) {\n      return input_param_2;\n    }\n    result = FUN_08001cc4();\n  } while ((uint)(result - initial_value) < 1000);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080053d4": "check_and_execute_function_080053d4",
                "param_1": "input_param_1",
                "param_2": "input_param_2",
                "iVar1": "initial_value",
                "iVar2": "result",
                "uVar3": "counter"
            },
            "calling": [
                "FUN_08005730"
            ],
            "called": [
                "FUN_08004c78",
                "FUN_08004478",
                "FUN_08001cc4",
                "FUN_08005384"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800548c": {
            "entrypoint": "0x0800548c",
            "current_name": "is_flag_set_0800548c",
            "code": "\nbool isFlagSet_0800548c(int flag)\n\n{\n  uint result;\n  \n  result = FUN_080047e8((&DAT_2000032c)[*(byteVal *)(flag + 0x44)]);\n  return (result & 0x22) == 0x22;\n}\n\n",
            "renaming": {
                "FUN_0800548c": "is_flag_set_0800548c",
                "param_1": "flag",
                "uVar1": "result",
                "byte": "byteVal"
            },
            "calling": [
                "FUN_08005510",
                "FUN_080054d4"
            ],
            "called": [
                "FUN_080047e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080054b0": {
            "entrypoint": "0x080054b0",
            "current_name": "is_flag_set_080054b0",
            "code": "\nbool isFlagSet_080054b0(int flagValue)\n\n{\n  uint result;\n  \n  result = FUN_080047e8((&DAT_2000032c)[*(byte *)(flagValue + 0x44)]);\n  return (result & 0x21) == 0x21;\n}\n\n",
            "renaming": {
                "FUN_080054b0": "is_flag_set_080054b0",
                "param_1": "flagValue",
                "uVar1": "result"
            },
            "calling": [],
            "called": [
                "FUN_080047e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080054d4": {
            "entrypoint": "0x080054d4",
            "current_name": "copy_data_080054d4",
            "code": "\nundefined4 copyData_080054d4(int source,undefined *destination,undefined4 param_a,undefined4 param_b)\n\n{\n  int result;\n  \n  if (source == 0) {\n    return 0xffffffff;\n  }\n  result = FUN_0800548c();\n  if (result == 0) {\n    *destination = *(undefined *)(source + 0x45);\n    FUN_080045a2((&DAT_2000032c)[*(byte *)(source + 0x44)],source + 0x45,1,&DAT_2000032c,param_b);\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080054d4": "copy_data_080054d4",
                "param_1": "source",
                "param_2": "destination",
                "param_3": "param_a",
                "param_4": "param_b",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800598a"
            ],
            "called": [
                "FUN_080045a2",
                "FUN_0800548c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005510": {
            "entrypoint": "0x08005510",
            "current_name": "update_data_08005510",
            "code": "\nvoid updateData_08005510(int dataPointer,undefined4 newValue,undefined4 unusedParam,undefined4 additionalParam)\n\n{\n  int result;\n  uint index;\n  \n  if (dataPointer != 0) {\n    result = FUN_0800548c();\n    if (result == 0) {\n      index = (uint)*(byte *)(dataPointer + 0x44);\n      *(undefined4 *)(&DAT_200002dc + index * 4) = newValue;\n      *(int *)(&DAT_200002f0 + index * 4) = dataPointer;\n      FUN_08002494((int)*(char *)(dataPointer + 0x5a),0,1,index,additionalParam);\n      FUN_080024f8((int)*(char *)(dataPointer + 0x5a));\n      FUN_080045a2((&DAT_2000032c)[*(byte *)(dataPointer + 0x44)],dataPointer + 0x45,1);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005510": "update_data_08005510",
                "param_1": "dataPointer",
                "param_2": "newValue",
                "param_3": "unusedParam",
                "param_4": "additionalParam",
                "iVar1": "result",
                "uVar2": "index"
            },
            "calling": [
                "FUN_08005a68"
            ],
            "called": [
                "FUN_080045a2",
                "FUN_08002494",
                "FUN_0800548c",
                "FUN_080024f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005568": {
            "entrypoint": "0x08005568",
            "current_name": "update_data_08005568",
            "code": "\nvoid updateData_08005568(int dataPointer,undefined4 newValue)\n\n{\n  byte byteValue;\n  \n  if (dataPointer != 0) {\n    byteValue = *(byte *)(dataPointer + 0x44);\n    *(undefined4 *)(&DAT_20000304 + (uint)byteValue * 4) = newValue;\n    *(int *)(&DAT_20000318 + (uint)byteValue * 4) = dataPointer;\n    FUN_08002494((int)*(char *)(dataPointer + 0x5a),0,2);\n    FUN_080024f8((int)*(char *)(dataPointer + 0x5a));\n    FUN_0800455a((&DAT_2000032c)[*(byte *)(dataPointer + 0x44)],\n                 *(int *)(dataPointer + 100) + (uint)*(ushort *)(dataPointer + 0x6a),1);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005568": "update_data_08005568",
                "param_1": "dataPointer",
                "param_2": "newValue",
                "bVar1": "byteValue"
            },
            "calling": [],
            "called": [
                "FUN_08002494",
                "FUN_080024f8",
                "FUN_0800455a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080055bc": {
            "entrypoint": "0x080055bc",
            "current_name": "find_index_in_data_080055bc",
            "code": "\nuint find_index_in_data_080055bc(int input_value)\n\n{\n  uint index;\n  \n  if (input_value == 0) {\n    index = 5;\n  }\n  else {\n    index = 0;\n    while( true ) {\n      if (4 < index) {\n        return index;\n      }\n      if (input_value == (&DAT_2000032c)[index]) break;\n      index = index + 1 & 0xff;\n    }\n  }\n  return index;\n}\n\n",
            "renaming": {
                "FUN_080055bc": "find_index_in_data_080055bc",
                "param_1": "input_value",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08005604",
                "FUN_080055e0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080055e0": {
            "entrypoint": "0x080055e0",
            "current_name": "execute_function_based_on_value_080055e0",
            "code": "\nvoid executeFunctionBasedOnValue_080055e0(void)\n\n{\n  uint result;\n  \n  result = FUN_080055bc();\n  if (result < 5) {\n    (**(functionPointer **)(&DAT_200002dc + result * 4))(*(undefined4 *)(&DAT_200002f0 + result * 4));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080055e0": "execute_function_based_on_value_080055e0",
                "uVar1": "result",
                "code": "functionPointer"
            },
            "calling": [
                "FUN_08004618"
            ],
            "called": [
                "FUN_080055bc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005604": {
            "entrypoint": "0x08005604",
            "current_name": "execute_function_08005604",
            "code": "\nvoid executeFunction_08005604(void)\n\n{\n  uint randomValue;\n  int result;\n  int dataAddress;\n  \n  randomValue = FUN_080055bc();\n  dataAddress = *(int *)(&DAT_20000318 + randomValue * 4);\n  if ((randomValue < 5) && (result = (**(code **)(&DAT_20000304 + randomValue * 4))(dataAddress), result != -1)) {\n    FUN_0800455a((&DAT_2000032c)[*(byte *)(dataAddress + 0x44)],\n                 *(int *)(dataAddress + 100) + (uint)*(ushort *)(dataAddress + 0x6a),1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005604": "execute_function_08005604",
                "uVar1": "randomValue",
                "iVar2": "result",
                "iVar3": "dataAddress"
            },
            "calling": [
                "FUN_080045fe"
            ],
            "called": [
                "FUN_080055bc",
                "FUN_0800455a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005650": {
            "entrypoint": "0x08005650",
            "current_name": "FUNC_08005650",
            "code": "\nvoid FUNC_08005650(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005650": "FUNC_08005650"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080056d8": {
            "entrypoint": "0x080056d8",
            "current_name": "reserve_stack_memory_080056d8",
            "code": "\nundefined * reserveStackMemory_080056d8(int requestedSize)\n\n{\n  undefined *reservedMemory;\n  \n  if (DAT_20000340 == (undefined *)0x0) {\n    DAT_20000340 = &DAT_200006a8;\n  }\n  reservedMemory = DAT_20000340;\n  if (DAT_20000340 + requestedSize <= &stack0x00000000) {\n    DAT_20000340 = DAT_20000340 + requestedSize;\n    return reservedMemory;\n  }\n  DAT_200006a4 = 0xc;\n  return (undefined *)0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080056d8": "reserve_stack_memory_080056d8",
                "param_1": "requestedSize",
                "puVar1": "reservedMemory"
            },
            "calling": [
                "FUN_08006920"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005714": {
            "entrypoint": "0x08005714",
            "current_name": "get_error_code_08005714",
            "code": "\nunsigned_int get_error_code_08005714(void)\n\n{\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08005714": "get_error_code_08005714",
                "undefined4": "unsigned_int"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800571a": {
            "entrypoint": "0x0800571a",
            "current_name": "initialize_memory_0800571a",
            "code": "\nundefined4 initializeMemory_0800571a(undefined4 param_1,int dst_address)\n\n{\n  *(undefined4 *)(dst_address + 4) = 0x2000;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800571a": "initialize_memory_0800571a",
                "param_2": "dst_address"
            },
            "calling": [
                "FUN_08007004"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005724": {
            "entrypoint": "0x08005724",
            "current_name": "initialize_flag_08005724",
            "code": "\nundefined4 initializeFlag_08005724(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08005724": "initialize_flag_08005724"
            },
            "calling": [
                "FUN_08007028"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005728": {
            "entrypoint": "0x08005728",
            "current_name": "initialize_program_08005728",
            "code": "\nvoid initializeProgram_08005728(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005728": "initialize_program_08005728",
                "undefined4": "void"
            },
            "calling": [
                "FUN_08007048"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800572c": {
            "entrypoint": "0x0800572c",
            "current_name": "dummy_function_0800572c",
            "code": "\nundefined4 dummyFunction_0800572c(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800572c": "dummy_function_0800572c"
            },
            "calling": [
                "FUN_0800706c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005730": {
            "entrypoint": "0x08005730",
            "current_name": "execute_function_08005730",
            "code": "\nvoid execute_function_08005730(undefined4 unused_param,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  FUN_080053d4(param_2,param_3,param_3,param_4,param_4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005730": "execute_function_08005730",
                "param_1": "unused_param"
            },
            "calling": [
                "FUN_08006f5a"
            ],
            "called": [
                "FUN_080053d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800573c": {
            "entrypoint": "0x0800573c",
            "current_name": "infinite_loop_0800573c",
            "code": "\nvoid infiniteLoop_0800573c(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_0800573c": "infinite_loop_0800573c"
            },
            "calling": [
                "FUN_0800573c",
                "FUN_08006ac0"
            ],
            "called": [
                "FUN_0800573c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005740": {
            "entrypoint": "0x08005740",
            "current_name": "set_initial_value_08005740",
            "code": "\nundefined4 set_initial_value_08005740(void)\n\n{\n  DAT_200006a4 = 0x16;\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08005740": "set_initial_value_08005740"
            },
            "calling": [
                "FUN_08006f00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005750": {
            "entrypoint": "0x08005750",
            "current_name": "initialize_program_08005750",
            "code": "\nundefined4 initializeProgram_08005750(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08005750": "initialize_program_08005750"
            },
            "calling": [
                "thunk_FUN_08005750"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005754": {
            "entrypoint": "0x08005754",
            "current_name": "get_modified_value_08005754",
            "code": "\nuint getModifiedValue_08005754(uint originalValue)\n\n{\n  bool isInRange;\n  char modifiedCharacter;\n  uint result;\n  \n  if (originalValue < 0xe) {\n    if (originalValue + 0x2e < 0x3c) {\n      isInRange = true;\n    }\n    else {\n      isInRange = false;\n    }\n  }\n  else {\n    isInRange = originalValue < 0x3c;\n  }\n  if (isInRange) {\n    if (originalValue < 0xe) {\n      originalValue = originalValue + 0x2e;\n    }\n    modifiedCharacter = (&DAT_080076f0)[originalValue];\n  }\n  else {\n    modifiedCharacter = -1;\n  }\n  if (modifiedCharacter == -1) {\n    result = 0;\n  }\n  else {\n    result = FUN_08004a4c();\n    if (DAT_200000f4 != 0xc) {\n      if (DAT_200000f4 < 0xc) {\n        return result >> (0xc - DAT_200000f4 & 0xff);\n      }\n      return result << (DAT_200000f4 - 0xc & 0xff);\n    }\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005754": "get_modified_value_08005754",
                "param_1": "originalValue",
                "bVar1": "isInRange",
                "cVar2": "modifiedCharacter",
                "uVar3": "result"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08004a4c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080057b4": {
            "entrypoint": "0x080057b4",
            "current_name": "process_data_080057b4",
            "code": "\nvoid processData_080057b4(uint index,undefined4 mode,undefined4 input,undefined *value)\n\n{\n  int result;\n  undefined *lookupTable;\n  int iVar;\n  \n  if (index < 0x3c) {\n    iVar = (int)(char)(&DAT_080076f0)[index];\n    lookupTable = &DAT_080076f0;\n  }\n  else {\n    iVar = -1;\n    lookupTable = value;\n  }\n  if (iVar != -1) {\n    result = FUN_080047f4(iVar,&DAT_20000344,input,lookupTable,value);\n    if (result != 0) {\n      result = FUN_08004ce2(iVar,&DAT_080074b4);\n      if (result != 0) {\n        FUN_08004b3c(iVar);\n      }\n      FUN_08004828(iVar,&DAT_20000344);\n    }\n    switch(mode) {\n    case 0:\n      FUN_08004bb0(iVar,0);\n      break;\n    case 1:\n      FUN_08004bb0(iVar,1,0);\n      break;\n    case 2:\n      FUN_08004bb0(iVar,0,1);\n      break;\n    case 3:\n      FUN_08004bb0(iVar,0,2);\n    }\n    FUN_0800480a(iVar,&DAT_20000358);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080057b4": "process_data_080057b4",
                "param_1": "index",
                "param_2": "mode",
                "param_3": "input",
                "param_4": "value",
                "iVar1": "result",
                "puVar2": "lookupTable",
                "iVar3": "iVar"
            },
            "calling": [
                "FUN_08000bcc",
                "FUN_0800157c",
                "FUN_080013a4"
            ],
            "called": [
                "FUN_08004bb0",
                "FUN_080047f4",
                "FUN_0800480a",
                "FUN_08004b3c",
                "FUN_08004828",
                "FUN_08004ce2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005848": {
            "entrypoint": "0x08005848",
            "current_name": "process_data_08005848",
            "code": "\nvoid processData_08005848(uint inputIndex,undefined4 param2,undefined4 param3,undefined *param4)\n\n{\n  int result;\n  undefined4 shiftedValue;\n  undefined *dataPtr;\n  uint value;\n  \n  if (inputIndex < 0x3c) {\n    value = (uint)(char)(&DAT_080076f0)[inputIndex];\n    dataPtr = &DAT_080076f0;\n  }\n  else {\n    value = 0xffffffff;\n    dataPtr = param4;\n  }\n  if ((value != 0xffffffff) &&\n     (result = FUN_080047f4(value,&DAT_20000358,param3,dataPtr,param4), result != 0)) {\n    shiftedValue = FUN_08004848((value << 0x18) >> 0x1c);\n    FUN_08004c30(shiftedValue,1 << (value & 0xf) & 0xffff,param2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005848": "process_data_08005848",
                "param_1": "inputIndex",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "result",
                "uVar2": "shiftedValue",
                "puVar3": "dataPtr",
                "uVar4": "value"
            },
            "calling": [
                "FUN_08001310",
                "FUN_08000cd0",
                "FUN_080012a2",
                "FUN_08000bcc",
                "FUN_080015b2",
                "FUN_080012c0",
                "FUN_0800157c",
                "FUN_080013a4",
                "FUN_080012e8"
            ],
            "called": [
                "FUN_08004848",
                "FUN_08004c30",
                "FUN_080047f4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005890": {
            "entrypoint": "0x08005890",
            "current_name": "check_character_validity_08005890",
            "code": "\nchar checkCharacterValidity_08005890(uint character)\n\n{\n  char isValid;\n  int result;\n  undefined4 shiftedValue;\n  uint lookupIndex;\n  \n  if (character < 0x3c) {\n    lookupIndex = (uint)(char)(&DAT_080076f0)[character];\n  }\n  else {\n    lookupIndex = 0xffffffff;\n  }\n  if (lookupIndex == 0xffffffff) {\n    isValid = '\\0';\n  }\n  else {\n    result = FUN_080047f4(lookupIndex,&DAT_20000358);\n    if (result == 0) {\n      isValid = '\\0';\n    }\n    else {\n      shiftedValue = FUN_08004848((lookupIndex << 0x18) >> 0x1c);\n      isValid = FUN_08004c48(shiftedValue,1 << (lookupIndex & 0xf) & 0xffff);\n    }\n  }\n  if (isValid != '\\0') {\n    isValid = '\\x01';\n  }\n  return isValid;\n}\n\n",
            "renaming": {
                "FUN_08005890": "check_character_validity_08005890",
                "param_1": "character",
                "cVar1": "isValid",
                "iVar2": "result",
                "uVar3": "shiftedValue",
                "uVar4": "lookupIndex"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_080015b2"
            ],
            "called": [
                "FUN_08004848",
                "FUN_080047f4",
                "FUN_08004c48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058e0": {
            "entrypoint": "0x080058e0",
            "current_name": "initialize_application_080058e0",
            "code": "\nvoid initialize_application_080058e0(void)\n\n{\n  FUN_08004b94();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080058e0": "initialize_application_080058e0"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08000bcc",
                "FUN_08001ab0",
                "FUN_080016b4"
            ],
            "called": [
                "FUN_08004b94"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058e8": {
            "entrypoint": "0x080058e8",
            "current_name": "FUNC_080058e8",
            "code": "\nvoid FUNC_080058e8(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080058e8": "FUNC_080058e8"
            },
            "calling": [
                "FUN_08000bcc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800591e": {
            "entrypoint": "0x0800591e",
            "current_name": "calculate_checksum_0800591e",
            "code": "\nushort calculateChecksum_0800591e(int inputAddress)\n\n{\n  return (*(short *)(inputAddress + 0x134) + 0x40) - *(short *)(inputAddress + 0x136) & 0x3f;\n}\n\n",
            "renaming": {
                "FUN_0800591e": "calculate_checksum_0800591e",
                "param_1": "inputAddress"
            },
            "calling": [
                "FUN_08005a18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800598a": {
            "entrypoint": "0x0800598a",
            "current_name": "update_data_0800598a",
            "code": "\nvoid updateData_0800598a(int data)\n\n{\n  int result;\n  ushort newIndex;\n  undefined newValue;\n  \n  result = FUN_080054d4(data,&newValue);\n  if ((result == 0) &&\n     (newIndex = *(short *)(data + 0x60) + 1U & 0x3f, newIndex != *(ushort *)(data + 0x62))) {\n    *(undefined *)(*(int *)(data + 0x5c) + (uint)*(ushort *)(data + 0x60)) = newValue;\n    *(ushort *)(data + 0x60) = newIndex;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800598a": "update_data_0800598a",
                "param_1": "data",
                "iVar1": "result",
                "uVar2": "newIndex",
                "local_9": "newValue"
            },
            "calling": [],
            "called": [
                "FUN_080054d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a18": {
            "entrypoint": "0x08005a18",
            "current_name": "FUNC_08005a18",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08005a1e) */\n/* WARNING: Removing unreachable block (ram,0x08005a30) */\n/* WARNING: Removing unreachable block (ram,0x08005a26) */\n/* WARNING: Removing unreachable block (ram,0x08005a38) */\n\nvoid FUNC_08005a18(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a18": "FUNC_08005a18"
            },
            "calling": [
                "FUN_08005f6c"
            ],
            "called": [
                "FUN_0800591e"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005a44": {
            "entrypoint": "0x08005a44",
            "current_name": "initialize_data_08005a44",
            "code": "\nvoid initializeData_08005a44(int baseAddress)\n\n{\n  *(int *)(baseAddress + 0x130) = baseAddress + 0x11;\n  *(undefined2 *)(baseAddress + 0x134) = 0;\n  *(undefined2 *)(baseAddress + 0x136) = 0;\n  *(int *)(baseAddress + 0x138) = baseAddress + 0x51;\n  *(undefined2 *)(baseAddress + 0x13c) = 0;\n  *(undefined2 *)(baseAddress + 0x13e) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a44": "initialize_data_08005a44",
                "param_1": "baseAddress"
            },
            "calling": [
                "FUN_08005b54"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a68": {
            "entrypoint": "0x08005a68",
            "current_name": "initialize_serial_port_08005a68",
            "code": "\nvoid initializeSerialPort_08005a68(int serialPort,undefined4 baudRate,byte options)\n\n{\n  uint data;\n  char *errorMessage;\n  byte optionBits;\n  int dataBits;\n  byte *bytePointer;\n  char character;\n  int baseAddress;\n  code *jumpTable;\n  \n  *(undefined4 *)(serialPort + 0x11c) = baudRate;\n  *(byte *)(serialPort + 0x140) = options;\n  optionBits = options & 7;\n  if (optionBits == 4) {\n    dataBits = 7;\n  }\n  else if (optionBits == 6) {\n    dataBits = 8;\n  }\n  else if (optionBits == 2) {\n    dataBits = 6;\n  }\n  else {\n    dataBits = 0;\n  }\n  if ((options & 0x30) == 0x30) {\n    *(undefined4 *)(serialPort + 0x128) = 0x600;\n    dataBits = dataBits + 1;\n  }\n  else if ((options & 0x20) == 0) {\n    *(undefined4 *)(serialPort + 0x128) = 0;\n  }\n  else {\n    *(undefined4 *)(serialPort + 0x128) = 0x400;\n    dataBits = dataBits + 1;\n  }\n  if ((options & 8) == 0) {\n    *(undefined4 *)(serialPort + 0x124) = 0;\n  }\n  else {\n    *(undefined4 *)(serialPort + 0x124) = 0x2000;\n  }\n  if (dataBits == 8) {\n    *(undefined4 *)(serialPort + 0x120) = 0;\n  }\n  else if (dataBits == 9) {\n    *(undefined4 *)(serialPort + 0x120) = 0x1000;\n  }\n  else {\n    dataBits = 0;\n  }\n  if (dataBits != 0) {\n    FUN_08004f4c(serialPort + 0xd4);\n    FUN_08005510(serialPort + 0xd4,0x800598b);\n    return;\n  }\n  errorMessage = \"void HardwareSerial::begin(long unsigned int, byte)\";\n  jumpTable = (code *)0x8005b12;\n  FUN_0800611c(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/cores/arduino/HardwareSerial.cpp\"\n               ,299,\"void HardwareSerial::begin(long unsigned int, byte)\",\"databits!=0\");\n  bytePointer = *(byte **)(data + baseAddress);\n  errorMessage[0x1e] = character;\n  *(undefined *)(*bytePointer + 0x1e) = 0;\n  if (data < 0x3c) {\n    uRam0000012d = (&DAT_080076f0)[data];\n  }\n  else {\n    uRam0000012d = 0xff;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08005b30. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a68": "initialize_serial_port_08005a68",
                "param_1": "serialPort",
                "param_2": "baudRate",
                "param_3": "options",
                "extraout_r1": "data",
                "pcVar1": "errorMessage",
                "bVar2": "optionBits",
                "iVar3": "dataBits",
                "pbVar4": "bytePointer",
                "unaff_r4": "character",
                "unaff_r6": "baseAddress",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08005510",
                "FUN_08004f4c",
                "FUN_0800611c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005b24": {
            "entrypoint": "0x08005b24",
            "current_name": "check_and_update_value_08005b24",
            "code": "\nvoid checkAndUpdateValue_08005b24(int address,uint index)\n\n{\n  undefined updatedValue;\n  code *unknownJumpTable;\n  \n  if (index < 0x3c) {\n    updatedValue = (&DAT_080076f0)[index];\n  }\n  else {\n    updatedValue = 0xff;\n  }\n  *(undefined *)(address + 0x12d) = updatedValue;\n                    /* WARNING: Could not recover jumptable at 0x08005b30. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*unknownJumpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005b24": "check_and_update_value_08005b24",
                "param_1": "address",
                "param_2": "index",
                "uVar1": "updatedValue",
                "UNRECOVERED_JUMPTABLE": "unknownJumpTable"
            },
            "calling": [
                "FUN_08005b54"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005b3c": {
            "entrypoint": "0x08005b3c",
            "current_name": "set_limited_value_08005b3c",
            "code": "\nvoid setLimitedValue_08005b3c(int baseAddress,uint index)\n\n{\n  undefined limitedValue;\n  \n  if (index < 0x3c) {\n    limitedValue = (&DAT_080076f0)[index];\n  }\n  else {\n    limitedValue = 0xff;\n  }\n  *(undefined *)(baseAddress + 300) = limitedValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005b3c": "set_limited_value_08005b3c",
                "param_1": "baseAddress",
                "param_2": "index",
                "uVar1": "limitedValue"
            },
            "calling": [
                "FUN_08005b54"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005b54": {
            "entrypoint": "0x08005b54",
            "current_name": "initialize_parameters_08005b54",
            "code": "\nundefined4 *\ninitializeParameters_08005b54(undefined4 *parameters,undefined4 value1,undefined4 value2,undefined4 value3)\n\n{\n  undefined result;\n  \n  parameters[1] = 0;\n  parameters[2] = 1000;\n  *parameters = &PTR_LAB_080059c8_1_08007804;\n  if (parameters == (undefined4 *)&DAT_2000036c) {\n    FUN_08005b24(&DAT_2000036c,0,value2,&DAT_2000036c,value3);\n    FUN_08005b3c(&DAT_2000036c,1);\n  }\n  else {\n    result = FUN_08004ca2(value1,&DAT_08007604);\n    *(undefined *)((int)parameters + 0x12d) = result;\n    result = FUN_08004ca2(value1,&DAT_0800764c);\n    *(undefined *)(parameters + 0x4b) = result;\n  }\n  FUN_08005a44(parameters);\n  return parameters;\n}\n\n",
            "renaming": {
                "FUN_08005b54": "initialize_parameters_08005b54",
                "param_1": "parameters",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08005bb0"
            ],
            "called": [
                "FUN_08004ca2",
                "FUN_08005a44",
                "FUN_08005b3c",
                "FUN_08005b24"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005bb0": {
            "entrypoint": "0x08005bb0",
            "current_name": "check_and_process_08005bb0",
            "code": "\nvoid check_and_process_08005bb0(int condition,int value,undefined4 arg1,undefined4 arg2)\n\n{\n  if (condition != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    FUN_08005b54(&DAT_2000036c,0x40004400,arg1,0xffff,arg2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005bb0": "check_and_process_08005bb0",
                "param_1": "condition",
                "param_2": "value",
                "param_3": "arg1",
                "param_4": "arg2"
            },
            "calling": [],
            "called": [
                "FUN_08005b54"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c1c": {
            "entrypoint": "0x08005c1c",
            "current_name": "initialize_data_08005c1c",
            "code": "\nvoid initializeData_08005c1c(undefined4 *destination,undefined value1,undefined value2,undefined value3,\n                 undefined value4)\n\n{\n  *destination = &DAT_08007858;\n  *(undefined *)(destination + 1) = value1;\n  *(undefined *)((int)destination + 5) = value2;\n  *(undefined *)((int)destination + 6) = value3;\n  *(undefined *)((int)destination + 7) = value4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005c1c": "initialize_data_08005c1c",
                "param_1": "destination",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "value4"
            },
            "calling": [
                "FUN_08005c38"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c38": {
            "entrypoint": "0x08005c38",
            "current_name": "check_params_and_execute_08005c38",
            "code": "\nvoid checkParamsAndExecute_08005c38(int isOne,int isFFFF)\n\n{\n  if ((isOne == 1) && (isFFFF == 0xffff)) {\n    FUN_08005c1c(&DAT_200004b0,0,0,0,0);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005c38": "check_params_and_execute_08005c38",
                "param_1": "isOne",
                "param_2": "isFFFF"
            },
            "calling": [],
            "called": [
                "FUN_08005c1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c96": {
            "entrypoint": "0x08005c96",
            "current_name": "execute_function_08005c96",
            "code": "\nundefined4 executeFunction_08005c96(int *functionPtr,int parameter,undefined4 param1,undefined4 param2)\n\n{\n  undefined4 result;\n  \n  if (parameter != 0) {\n    result = FUN_08000178(parameter);\n    result = (**(code **)(*functionPtr + 4))(functionPtr,parameter,result,*(code **)(*functionPtr + 4),param2);\n    return result;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005c96": "execute_function_08005c96",
                "param_1": "functionPtr",
                "param_2": "parameter",
                "param_3": "param1",
                "param_4": "param2",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0",
                "FUN_08005cd4",
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08000178"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cb6": {
            "entrypoint": "0x08005cb6",
            "current_name": "execute_function_08005cb6",
            "code": "\nvoid executeFunction_08005cb6(undefined4 *functionPointer)\n\n{\n  (**(code **)*functionPointer)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005cb6": "execute_function_08005cb6",
                "param_1": "functionPointer"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08005d42"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cc0": {
            "entrypoint": "0x08005cc0",
            "current_name": "execute_function_08005cc0",
            "code": "\nvoid executeFunction_08005cc0(int *functionPointer,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  (**(code **)(*functionPointer + 4))(functionPointer,&DAT_0800786c,2,*(code **)(*functionPointer + 4),param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005cc0": "execute_function_08005cc0",
                "param_1": "functionPointer",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [
                "FUN_08005cd4",
                "FUN_08005f40"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cd4": {
            "entrypoint": "0x08005cd4",
            "current_name": "add_function_results_08005cd4",
            "code": "\nint addFunctionResults_08005cd4(undefined4 inputValue)\n\n{\n  int result1;\n  int result2;\n  \n  result1 = FUN_08005c96();\n  result2 = FUN_08005cc0(inputValue);\n  return result2 + result1;\n}\n\n",
            "renaming": {
                "FUN_08005cd4": "add_function_results_08005cd4",
                "param_1": "inputValue",
                "iVar1": "result1",
                "iVar2": "result2"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08005cc0",
                "FUN_08005c96"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005ce8": {
            "entrypoint": "0x08005ce8",
            "current_name": "convert_base_08005ce8",
            "code": "\nundefined4 convertBase_08005ce8(int *inputArray,uint number,uint base)\n\n{\n  char cVar1;\n  undefined4 result;\n  uint remainder;\n  uint quotient;\n  char *outputString;\n  char tempString [9];\n  \n  tempString[1] = 0;\n  if ((int)base < 2) {\n    base = 10;\n  }\n  outputString = tempString + 1;\n  do {\n    quotient = number / base;\n    remainder = (number & 0xff) - (quotient * base & 0xff) & 0xff;\n    outputString = outputString + -1;\n    cVar1 = (char)remainder;\n    if (remainder < 10) {\n      cVar1 = cVar1 + '0';\n    }\n    else {\n      cVar1 = cVar1 + '7';\n    }\n    *outputString = cVar1;\n    number = quotient;\n  } while (quotient != 0);\n  if (outputString == (char *)0x0) {\n    result = 0;\n  }\n  else {\n    result = FUN_08000178(outputString);\n    result = (**(code **)(*inputArray + 4))(inputArray,outputString,result);\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005ce8": "convert_base_08005ce8",
                "param_1": "inputArray",
                "param_2": "number",
                "param_3": "base",
                "uVar2": "result",
                "uVar3": "remainder",
                "uVar4": "quotient",
                "pcVar5": "outputString",
                "local_15": "tempString"
            },
            "calling": [
                "FUN_08005d8a",
                "FUN_08005d42"
            ],
            "called": [
                "FUN_08000178"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005d42": {
            "entrypoint": "0x08005d42",
            "current_name": "process_number_08005d42",
            "code": "\nint process_number_08005d42(undefined4 *input_array,uint number,uint base)\n\n{\n  int result;\n  int negative_flag;\n  \n  if (base == 0) {\n    result = (**(code **)*input_array)(input_array,number & 0xff);\n    return result;\n  }\n  if (base != 10) {\n    result = FUN_08005ce8(input_array,number,base & 0xff);\n    return result;\n  }\n  if (-1 < (int)number) {\n    result = FUN_08005ce8(input_array,number,10);\n    return result;\n  }\n  result = FUN_08005cb6(input_array,0x2d);\n  negative_flag = FUN_08005ce8(input_array,-number,10);\n  return negative_flag + result;\n}\n\n",
            "renaming": {
                "FUN_08005d42": "process_number_08005d42",
                "param_1": "input_array",
                "param_2": "number",
                "param_3": "base",
                "iVar1": "result",
                "iVar2": "negative_flag"
            },
            "calling": [
                "FUN_08005d82"
            ],
            "called": [
                "FUN_08005cb6",
                "FUN_08005ce8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005d82": {
            "entrypoint": "0x08005d82",
            "current_name": "initialize_08005d82",
            "code": "\nvoid initialize_08005d82(void)\n\n{\n  FUN_08005d42();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005d82": "initialize_08005d82"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08005d42"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005d8a": {
            "entrypoint": "0x08005d8a",
            "current_name": "process_data_08005d8a",
            "code": "\nvoid processData_08005d8a(undefined4 *functionPointer,uint inputData,uint inputSize,undefined4 additionalData)\n\n{\n  if (inputSize != 0) {\n    FUN_08005ce8(functionPointer,inputData,inputSize & 0xff);\n    return;\n  }\n  (**(code **)*functionPointer)(functionPointer,inputData & 0xff,0,*(code **)*functionPointer,additionalData);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005d8a": "process_data_08005d8a",
                "param_1": "functionPointer",
                "param_2": "inputData",
                "param_3": "inputSize",
                "param_4": "additionalData"
            },
            "calling": [
                "FUN_08005da8"
            ],
            "called": [
                "FUN_08005ce8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005da8": {
            "entrypoint": "0x08005da8",
            "current_name": "process_data_08005da8",
            "code": "\nint processData_08005da8(undefined4 input1,undefined4 input2,undefined4 input3,uint input4,byte input5)\n\n{\n  int result;\n  undefined4 tempVar1;\n  int tempVar2;\n  byte tempVar3;\n  undefined8 tempVar4;\n  undefined8 tempVar5;\n  \n  result = FUN_08000a2c(input3,input4,input3,input4);\n  if (result == 0) {\n    result = FUN_08000a2c(input3,input4 & 0x7fffffff,0xffffffff,0x7fefffff);\n    if ((result == 0) &&\n       (result = FUN_080009f0(input3,input4 & 0x7fffffff,0xffffffff,0x7fefffff), result == 0)) {\n      result = FUN_08005c96(input1,&DAT_08007860);\n    }\n    else {\n      result = FUN_08000a18(input3,input4,0xe0000000,0x41efffff);\n      if (result == 0) {\n        result = FUN_080009dc(input3,input4,0xe0000000,0xc1efffff);\n        if (result == 0) {\n          result = FUN_080009dc(input3,input4,0,0);\n          if (result == 0) {\n            result = 0;\n          }\n          else {\n            result = FUN_08005cb6(input1,0x2d);\n            input4 = input4 + 0x80000000;\n          }\n          tempVar4 = 0x3fe0000000000000;\n          for (tempVar3 = 0; tempVar1 = (undefined4)((ulonglong)tempVar4 >> 0x20), tempVar3 < input5;\n              tempVar3 = tempVar3 + 1) {\n            tempVar4 = FUN_0800074c((int)tempVar4,tempVar1,0,0x40240000);\n          }\n          tempVar4 = FUN_08000194(input3,input4,(int)tempVar4,tempVar1);\n          tempVar1 = FUN_08000aa8();\n          tempVar5 = FUN_0800040c();\n          tempVar4 = FUN_08000190((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20),(int)tempVar5,\n                               (int)((ulonglong)tempVar5 >> 0x20));\n          tempVar2 = FUN_08005d8a(input1,tempVar1,10);\n          result = result + tempVar2;\n          if (input5 != 0) {\n            tempVar2 = FUN_08005c96(input1,&DAT_08007868);\n            result = result + tempVar2;\n          }\n          while (input5 != 0) {\n            tempVar4 = FUN_080004f8((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20),0,0x40240000);\n            tempVar1 = FUN_08000a58();\n            tempVar2 = FUN_08005d82(input1,tempVar1,10);\n            result = result + tempVar2;\n            tempVar5 = FUN_0800042c(tempVar1);\n            tempVar4 = FUN_08000190((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20),(int)tempVar5,\n                                 (int)((ulonglong)tempVar5 >> 0x20));\n            input5 = input5 - 1;\n          }\n        }\n        else {\n          result = FUN_08005c96(input1,&DAT_08007864);\n        }\n      }\n      else {\n        result = FUN_08005c96(input1,&DAT_08007864);\n      }\n    }\n  }\n  else {\n    result = FUN_08005c96(input1,&DAT_0800785c);\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005da8": "process_data_08005da8",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "param_5": "input5",
                "iVar1": "result",
                "uVar2": "tempVar1",
                "iVar3": "tempVar2",
                "bVar4": "tempVar3",
                "uVar5": "tempVar4",
                "uVar6": "tempVar5"
            },
            "calling": [
                "FUN_08005f2c"
            ],
            "called": [
                "FUN_08000a18",
                "FUN_08000aa8",
                "FUN_0800040c",
                "FUN_08005c96",
                "FUN_0800042c",
                "FUN_0800074c",
                "FUN_08000190",
                "FUN_08000194",
                "FUN_080004f8",
                "FUN_080009f0",
                "FUN_080009dc",
                "FUN_08005cb6",
                "FUN_08000a58",
                "FUN_08005d82",
                "FUN_08000a2c",
                "FUN_08005d8a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f2c": {
            "entrypoint": "0x08005f2c",
            "current_name": "initialize_application_08005f2c",
            "code": "\nvoid initializeApplication_08005f2c(void)\n\n{\n  FUN_08005da8();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005f2c": "initialize_application_08005f2c"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08005f40"
            ],
            "called": [
                "FUN_08005da8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f40": {
            "entrypoint": "0x08005f40",
            "current_name": "calculate_sum_08005f40",
            "code": "\nint calculateSum_08005f40(undefined4 input)\n\n{\n  int result1;\n  int result2;\n  \n  result1 = FUN_08005f2c();\n  result2 = FUN_08005cc0(input);\n  return result2 + result1;\n}\n\n",
            "renaming": {
                "FUN_08005f40": "calculate_sum_08005f40",
                "param_1": "input",
                "iVar1": "result1",
                "iVar2": "result2"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08005f2c",
                "FUN_08005cc0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f5c": {
            "entrypoint": "0x08005f5c",
            "current_name": "FUNC_08005f5c",
            "code": "\nvoid FUNC_08005f5c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005f5c": "FUNC_08005f5c"
            },
            "calling": [
                "FUN_08005f6c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005f5e": {
            "entrypoint": "0x08005f5e",
            "current_name": "initialize_system_08005f5e",
            "code": "\nvoid initializeSystem_08005f5e(void)\n\n{\n  FUN_08002470(3);\n  FUN_08001c32();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005f5e": "initialize_system_08005f5e"
            },
            "calling": [
                "FUN_08006198"
            ],
            "called": [
                "FUN_08001c32",
                "FUN_08002470"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f6c": {
            "entrypoint": "0x08005f6c",
            "current_name": "run_infinite_loop_08005f6c",
            "code": "\nvoid run_infinite_loop_08005f6c(void)\n\n{\n  FUNC_08005f5c();\n  FUN_08000bcc();\n  do {\n    FUN_08000cd0();\n    FUNC_08005a18();\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08005f6c": "run_infinite_loop_08005f6c"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_08000cd0",
                "FUN_08000bcc",
                "FUN_08005f5c",
                "FUN_08005a18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f8c": {
            "entrypoint": "0x08005f8c",
            "current_name": "count_set_bits_08005f8c",
            "code": "\nchar countSetBits_08005f8c(uint number)\n\n{\n  char count;\n  \n  count = '\\0';\n  for (; number != 1; number = number >> 1) {\n    count = count + '\\x01';\n  }\n  return count;\n}\n\n",
            "renaming": {
                "FUN_08005f8c": "count_set_bits_08005f8c",
                "param_1": "number",
                "cVar1": "count"
            },
            "calling": [
                "FUN_080060e4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005fc8": {
            "entrypoint": "0x08005fc8",
            "current_name": "initialize_data_08005fc8",
            "code": "\nvoid initializeData_08005fc8(int status,int value,undefined4 param3,undefined4 param4)\n\n{\n  if (status != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    DAT_200004b8 = 6;\n    DAT_200004c4 = 0;\n    DAT_200004cc = 7;\n    DAT_200004d8 = 0;\n    DAT_200004e0 = 8;\n    DAT_200004ec = 0;\n    DAT_200004f4 = 9;\n    DAT_20000500 = 0;\n    DAT_20000508 = 10;\n    DAT_20000514 = 0;\n    DAT_2000051c = 0x17;\n    DAT_20000528 = 0;\n    DAT_20000530 = 0x17;\n    DAT_2000053c = 0;\n    DAT_20000544 = 0x17;\n    DAT_20000550 = 0;\n    DAT_20000558 = 0x17;\n    DAT_20000564 = 0;\n    DAT_2000056c = 0x17;\n    DAT_20000578 = 0;\n    DAT_20000580 = 0x28;\n    DAT_2000058c = 0;\n    DAT_20000594 = 0x28;\n    DAT_200005a0 = 0;\n    DAT_200005a8 = 0x28;\n    DAT_200005b4 = 0;\n    DAT_200005bc = 0x28;\n    DAT_200005c8 = 0;\n    DAT_200005d0 = 0x28;\n    DAT_200005dc = 0;\n    DAT_200005e4 = 0x28;\n    DAT_200005f0 = 0;\n    FUN_08006112(0,&label1,&DAT_20000000,&DAT_200004b8,param4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005fc8": "initialize_data_08005fc8",
                "param_1": "status",
                "param_2": "value",
                "param_3": "param3",
                "param_4": "param4",
                "LAB_08005fa0_1": "label1"
            },
            "calling": [],
            "called": [
                "FUN_08006112"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080060d4": {
            "entrypoint": "0x080060d4",
            "current_name": "execute_or_fallback_080060d4",
            "code": "\nvoid executeOrFallback_080060d4(int input)\n\n{\n  int result;\n  \n  if (*(int *)(input + 8) != 0) {\n    (**(code **)(input + 0xc))();\n    return;\n  }\n  FUN_08007090();\n  result = FUN_08005f8c();\n  if ((&DAT_200004c4)[result * 5] != 0) {\n    executeOrFallback_080060d4();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080060d4": "execute_or_fallback_080060d4",
                "param_1": "input",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080060e4"
            ],
            "called": [
                "FUN_08007090"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080060e4": {
            "entrypoint": "0x080060e4",
            "current_name": "check_and_execute_function_080060e4",
            "code": "\nvoid checkAndExecuteFunction_080060e4(void)\n\n{\n  int result;\n  \n  result = FUN_08005f8c();\n  if ((&DAT_200004c4)[result * 5] != 0) {\n    FUN_080060d4();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080060e4": "check_and_execute_function_080060e4",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800282c"
            ],
            "called": [
                "FUN_08005f8c",
                "FUN_080060d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006112": {
            "entrypoint": "0x08006112",
            "current_name": "call_another_function_08006112",
            "code": "\nvoid callAnotherFunction_08006112(undefined4 addressParam,undefined4 valueParam)\n\n{\n  FUN_08006158(valueParam,addressParam);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006112": "call_another_function_08006112",
                "param_1": "addressParam",
                "param_2": "valueParam"
            },
            "calling": [
                "FUN_08005fc8"
            ],
            "called": [
                "FUN_08006158"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800611c": {
            "entrypoint": "0x0800611c",
            "current_name": "assertion_failed_0800611c",
            "code": "\nvoid assertionFailed_0800611c(undefined4 file,undefined4 line,char *message,undefined4 function)\n\n{\n  undefined4 uVar1;\n  char *constantString;\n  undefined8 combinedResult;\n  undefined4 uVar4;\n  \n  uVar1 = *(undefined4 *)(DAT_200000f8 + 0xc);\n  uVar4 = function;\n  if (message == (char *)0x0) goto LAB_08006140;\n  constantString = \", function: \";\n  do {\n    FUN_08006174(uVar1,\"assertion \\\"%s\\\" failed: file \\\"%s\\\", line %d%s%s\\n\",function,file,line\n                 ,constantString,message,uVar4);\n    combinedResult = FUN_08006ac0();\n    line = (undefined4)((ulonglong)combinedResult >> 0x20);\n    uVar1 = (undefined4)combinedResult;\nLAB_08006140:\n    message = \"\";\n    constantString = message;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_0800611c": "assertion_failed_0800611c",
                "param_1": "file",
                "param_2": "line",
                "param_3": "message",
                "param_4": "function",
                "pcVar2": "constantString",
                "uVar3": "combinedResult"
            },
            "calling": [
                "FUN_08005a68"
            ],
            "called": [
                "FUN_08006174",
                "FUN_08006ac0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006158": {
            "entrypoint": "0x08006158",
            "current_name": "extend_32_bit_to_64_bit_08006158",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08006160) */\n\nlonglong extend_32_bit_to_64_bit_08006158(undefined4 ignored_param,uint input_32_bit_number)\n\n{\n  return (ulonglong)input_32_bit_number << 0x20;\n}\n\n",
            "renaming": {
                "FUN_08006158": "extend_32_bit_to_64_bit_08006158",
                "param_1": "ignored_param",
                "param_2": "input_32_bit_number"
            },
            "calling": [
                "FUN_08006112"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006174": {
            "entrypoint": "0x08006174",
            "current_name": "execute_function_08006174",
            "code": "\nvoid executeFunction_08006174(undefined4 inputParam1,undefined4 inputParam2,undefined4 tempParam1,undefined4 tempParam2)\n\n{\n  undefined4 tempVariable1;\n  undefined4 tempVariable2;\n  \n  tempVariable1 = tempParam1;\n  tempVariable2 = tempParam2;\n  FUN_08006394(DAT_200000f8,inputParam1,inputParam2,&tempVariable1,inputParam1,&tempVariable1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006174": "execute_function_08006174",
                "param_1": "inputParam1",
                "param_2": "inputParam2",
                "param_3": "tempParam1",
                "param_4": "tempParam2",
                "uStack_8": "tempVariable1",
                "uStack_4": "tempVariable2"
            },
            "calling": [
                "FUN_0800611c"
            ],
            "called": [
                "FUN_08006394"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006198": {
            "entrypoint": "0x08006198",
            "current_name": "execute_functions_08006198",
            "code": "\nvoid execute_functions_08006198(void)\n\n{\n  int index;\n  \n  for (index = 0; index != 0; index = index + 1) {\n    (*(code *)(&DAT_08007944)[index])();\n  }\n  FUNC_08007328();\n  for (index = 0; index != 10; index = index + 1) {\n    (*(code *)(&DAT_08007944)[index])();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006198": "execute_functions_08006198",
                "iVar1": "index"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_08005f5e",
                "FUN_08007328"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080061e0": {
            "entrypoint": "0x080061e0",
            "current_name": "initialize_array_080061e0",
            "code": "\nvoid initializeArray_080061e0(undefined *array,undefined value,int length)\n\n{\n  undefined *endPointer;\n  \n  endPointer = array + length;\n  for (; array != endPointer; array = array + 1) {\n    *array = value;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080061e0": "initialize_array_080061e0",
                "param_1": "array",
                "param_2": "value",
                "param_3": "length",
                "puVar1": "endPointer"
            },
            "calling": [
                "FUN_08006c40",
                "FUN_08006c88",
                "FUN_08004a4c",
                "FUN_08006d14"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080061f0": {
            "entrypoint": "0x080061f0",
            "current_name": "manage_linked_list_080061f0",
            "code": "\nvoid manageLinkedList_080061f0(undefined4 *result,int size,undefined4 arg1,undefined4 arg2)\n\n{\n  int **nextPtr;\n  int **currentNodePtr;\n  int **tempPtr;\n  int *nodePtr;\n  int **prevNodePtr;\n  int **newNodePtr;\n  \n  if (size == 0) {\n    return;\n  }\n  newNodePtr = (int **)(size + -4);\n  if (*(int *)(size + -4) < 0) {\n    newNodePtr = (int **)((int)newNodePtr + *(int *)(size + -4));\n  }\n  FUNC_08006eac();\n  tempPtr = (int **)&DAT_200005f8;\n  if (DAT_200005f8 == (int **)0x0) {\n    newNodePtr[1] = (int *)0x0;\n    currentNodePtr = nextPtr;\n    DAT_200005f8 = newNodePtr;\n  }\n  else {\n    tempPtr = DAT_200005f8;\n    if (newNodePtr < DAT_200005f8) {\n      currentNodePtr = (int **)*newNodePtr;\n      tempPtr = (int **)((int)newNodePtr + (int)currentNodePtr);\n      if (DAT_200005f8 == tempPtr) {\n        nodePtr = *DAT_200005f8;\n        DAT_200005f8 = (int **)DAT_200005f8[1];\n        tempPtr = (int **)((int)nodePtr + (int)currentNodePtr);\n        *newNodePtr = (int *)tempPtr;\n      }\n      newNodePtr[1] = (int *)DAT_200005f8;\n      DAT_200005f8 = newNodePtr;\n    }\n    else {\n      do {\n        prevNodePtr = tempPtr;\n        tempPtr = (int **)prevNodePtr[1];\n        if (tempPtr == (int **)0x0) break;\n      } while (tempPtr <= newNodePtr);\n      currentNodePtr = (int **)*prevNodePtr;\n      if ((int **)((int)prevNodePtr + (int)currentNodePtr) == newNodePtr) {\n        currentNodePtr = (int **)((int)currentNodePtr + (int)*newNodePtr);\n        *prevNodePtr = (int *)currentNodePtr;\n        if (tempPtr == (int **)((int)prevNodePtr + (int)currentNodePtr)) {\n          nodePtr = *tempPtr;\n          tempPtr = (int **)tempPtr[1];\n          currentNodePtr = (int **)((int)currentNodePtr + (int)nodePtr);\n          *prevNodePtr = (int *)currentNodePtr;\n          prevNodePtr[1] = (int *)tempPtr;\n        }\n      }\n      else if (newNodePtr < (int **)((int)prevNodePtr + (int)currentNodePtr)) {\n        *result = 0xc;\n      }\n      else {\n        currentNodePtr = (int **)((int)newNodePtr + (int)*newNodePtr);\n        if (tempPtr == currentNodePtr) {\n          nodePtr = *tempPtr;\n          tempPtr = (int **)tempPtr[1];\n          currentNodePtr = (int **)((int)nodePtr + (int)*newNodePtr);\n          *newNodePtr = (int *)currentNodePtr;\n        }\n        newNodePtr[1] = (int *)tempPtr;\n        prevNodePtr[1] = (int *)newNodePtr;\n      }\n    }\n  }\n  FUNC_08006eae(result,currentNodePtr,tempPtr,arg2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080061f0": "manage_linked_list_080061f0",
                "param_1": "result",
                "param_2": "size",
                "param_3": "arg1",
                "param_4": "arg2",
                "extraout_r1": "nextPtr",
                "ppiVar1": "currentNodePtr",
                "ppiVar2": "tempPtr",
                "piVar3": "nodePtr",
                "ppiVar4": "prevNodePtr",
                "ppiVar5": "newNodePtr"
            },
            "calling": [
                "FUN_080069e4",
                "FUN_08006ac0"
            ],
            "called": [
                "FUN_08006eac",
                "FUN_08006eae"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006288": {
            "entrypoint": "0x08006288",
            "current_name": "allocate_memory_08006288",
            "code": "\nuint allocate_memory_08006288(undefined4 *output_ptr,uint size)\n\n{\n  uint *current_ptr;\n  int offset;\n  uint *next_ptr;\n  uint ptr_difference;\n  uint *previous_ptr;\n  uint allocated_size;\n  \n  allocated_size = (size + 3 & 0xfffffffc) + 8;\n  if (allocated_size < 0xc) {\n    allocated_size = 0xc;\n  }\n  if (((int)allocated_size < 0) || (allocated_size < size)) {\n    *output_ptr = 0xc;\n  }\n  else {\n    FUNC_08006eac();\n    current_ptr = DAT_200005f8;\n    previous_ptr = DAT_200005f8;\n    while (next_ptr = current_ptr, next_ptr != (uint *)0x0) {\n      ptr_difference = *next_ptr - allocated_size;\n      if (-1 < (int)ptr_difference) {\n        if (ptr_difference < 0xc) {\n          if (previous_ptr == next_ptr) {\n            current_ptr = (uint *)previous_ptr[1];\n            DAT_200005f8 = current_ptr;\n          }\n          else {\n            current_ptr = (uint *)next_ptr[1];\n          }\n          if (previous_ptr != next_ptr) {\n            previous_ptr[1] = (uint)current_ptr;\n            previous_ptr = next_ptr;\n          }\n        }\n        else {\n          *next_ptr = ptr_difference;\n          *(uint *)((int)next_ptr + ptr_difference) = allocated_size;\n          previous_ptr = (uint *)((int)next_ptr + ptr_difference);\n        }\n        goto LAB_080062ec;\n      }\n      previous_ptr = next_ptr;\n      current_ptr = (uint *)next_ptr[1];\n    }\n    if (DAT_200005fc == 0) {\n      DAT_200005fc = FUN_08006920(output_ptr);\n    }\n    current_ptr = (uint *)FUN_08006920(output_ptr,allocated_size);\n    if ((current_ptr != (uint *)0xffffffff) &&\n       ((previous_ptr = (uint *)((int)current_ptr + 3U & 0xfffffffc), current_ptr == previous_ptr ||\n        (offset = FUN_08006920(output_ptr,(int)previous_ptr - (int)current_ptr), offset != -1)))) {\n      *previous_ptr = allocated_size;\nLAB_080062ec:\n      FUNC_08006eae(output_ptr);\n      allocated_size = (int)previous_ptr + 0xbU & 0xfffffff8;\n      offset = allocated_size - (int)(previous_ptr + 1);\n      if (offset != 0) {\n        *(int *)((int)previous_ptr + offset) = -offset;\n        return allocated_size;\n      }\n      return allocated_size;\n    }\n    *output_ptr = 0xc;\n    FUNC_08006eae(output_ptr);\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006288": "allocate_memory_08006288",
                "param_1": "output_ptr",
                "param_2": "size",
                "puVar1": "current_ptr",
                "iVar2": "offset",
                "puVar3": "next_ptr",
                "uVar4": "ptr_difference",
                "puVar5": "previous_ptr",
                "uVar6": "allocated_size"
            },
            "calling": [
                "FUN_08006e10",
                "FUN_08006c88"
            ],
            "called": [
                "FUN_08006920",
                "FUN_08006eac",
                "FUN_08006eae"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006344": {
            "entrypoint": "0x08006344",
            "current_name": "process_input_08006344",
            "code": "\nuint process_input_08006344(int var1,byte byte_value,byte **byte_ptr_array)\n\n{\n  int temp_var;\n  byte *ptr_1;\n  byte *ptr_2;\n  uint return_value;\n  \n  ptr_1 = byte_ptr_array[2] + -1;\n  byte_ptr_array[2] = ptr_1;\n  if ((-1 < (int)ptr_1) ||\n     (((int)byte_ptr_array[6] <= (int)ptr_1 && (ptr_1 = (byte *)(uint)byte_value, ptr_1 != (byte *)0xa))))\n  {\n    ptr_1 = *byte_ptr_array;\n    *byte_ptr_array = ptr_1 + 1;\n    *ptr_1 = byte_value;\n    return (uint)byte_value;\n  }\n  if ((var1 != 0) && (*(int *)(var1 + 0x18) == 0)) {\n    FUN_08006cb4();\n  }\n  if (byte_ptr_array == (byte **)&DAT_08007904) {\n    byte_ptr_array = *(byte ***)(var1 + 4);\n  }\n  else if (byte_ptr_array == (byte **)&DAT_08007924) {\n    byte_ptr_array = *(byte ***)(var1 + 8);\n  }\n  else if (byte_ptr_array == (byte **)&DAT_080078e4) {\n    byte_ptr_array = *(byte ***)(var1 + 0xc);\n  }\n  byte_ptr_array[2] = byte_ptr_array[6];\n  ptr_2 = (byte *)(uint)*(ushort *)(byte_ptr_array + 3);\n  temp_var = (int)ptr_2 << 0x1c;\n  if (((temp_var < 0) && (ptr_2 = byte_ptr_array[4], ptr_2 != (byte *)0x0)) ||\n     (temp_var = FUN_080069e4(var1,byte_ptr_array,temp_var,ptr_2,ptr_1), temp_var == 0)) {\n    return_value = (uint)byte_value;\n    temp_var = (int)*byte_ptr_array - (int)byte_ptr_array[4];\n    if ((temp_var < (int)byte_ptr_array[5]) || (temp_var = FUN_08006be0(var1,byte_ptr_array), temp_var == 0)) {\n      byte_ptr_array[2] = byte_ptr_array[2] + -1;\n      ptr_1 = *byte_ptr_array;\n      *byte_ptr_array = ptr_1 + 1;\n      *ptr_1 = byte_value;\n      if ((byte *)(temp_var + 1) != byte_ptr_array[5]) {\n        if (-1 < (int)((uint)*(ushort *)(byte_ptr_array + 3) << 0x1f)) {\n          return return_value;\n        }\n        if (return_value != 10) {\n          return return_value;\n        }\n      }\n      temp_var = FUN_08006be0(var1,byte_ptr_array);\n      if (temp_var == 0) {\n        return return_value;\n      }\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08006344": "process_input_08006344",
                "param_1": "var1",
                "param_2": "byte_value",
                "param_3": "byte_ptr_array",
                "iVar1": "temp_var",
                "pbVar2": "ptr_1",
                "pbVar3": "ptr_2",
                "uVar4": "return_value"
            },
            "calling": [
                "FUN_08006370"
            ],
            "called": [
                "FUN_08006be0",
                "FUN_08006cb4",
                "FUN_080069e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006370": {
            "entrypoint": "0x08006370",
            "current_name": "process_data_08006370",
            "code": "\nint process_data_08006370(undefined4 data1,undefined4 data2,undefined *input_data,int input_size)\n\n{\n  int result;\n  undefined *end_of_input;\n  int current_index;\n  \n  end_of_input = input_data + input_size;\n  current_index = input_size;\n  do {\n    if (input_data == end_of_input) {\n      return 0;\n    }\n    result = FUN_08006344(data1,*input_data,data2,input_size,current_index);\n    input_size = result + 1;\n    input_data = input_data + 1;\n  } while (input_size != 0);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08006370": "process_data_08006370",
                "param_1": "data1",
                "param_2": "data2",
                "param_3": "input_data",
                "param_4": "input_size",
                "iVar1": "result",
                "puVar2": "end_of_input",
                "iVar3": "current_index"
            },
            "calling": [
                "FUN_08006394"
            ],
            "called": [
                "FUN_08006344"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006394": {
            "entrypoint": "0x08006394",
            "current_name": "parse_format_string_08006394",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08006568) */\n\nint parseFormatString_08006394(int formatString,undefined4 *formatSpecifier,byte *output,int *bytesWritten)\n\n{\n  int result;\n  int *ptr;\n  bool foundNumber;\n  byte *p;\n  byte *nextChar;\n  int tmpValue;\n  int value;\n  int *bytesWrittenPointer;\n  uint flags;\n  int width;\n  undefined4 length;\n  int precision;\n  int totalBytesWritten;\n  byte formatChar;\n  undefined spaceFlag;\n  undefined plusFlag;\n  undefined valueFlag;\n  undefined4 hashFlag;\n  \n  bytesWrittenPointer = bytesWritten;\n  if ((formatString != 0) && (*(int *)(formatString + 0x18) == 0)) {\n    FUN_08006cb4();\n  }\n  if (formatSpecifier == &DAT_08007904) {\n    formatSpecifier = *(undefined4 **)(formatString + 4);\n  }\n  else if (formatSpecifier == (undefined4 *)&DAT_08007924) {\n    formatSpecifier = *(undefined4 **)(formatString + 8);\n  }\n  else if (formatSpecifier == (undefined4 *)&DAT_080078e4) {\n    formatSpecifier = *(undefined4 **)(formatString + 0xc);\n  }\n  if (((-1 < (int)((uint)*(ushort *)(formatSpecifier + 3) << 0x1c)) || (formatSpecifier[4] == 0)) &&\n     (value = FUN_080069e4(formatString,formatSpecifier), value != 0)) {\n    return -1;\n  }\n  totalBytesWritten = 0;\n  spaceFlag = 0x20;\n  plusFlag = 0x30;\n  p = output;\nLAB_080063d6:\n  nextChar = p;\n  if (*nextChar != 0) goto LAB_0800648c;\n  goto LAB_080063e0;\nLAB_0800648c:\n  p = nextChar + 1;\n  if (*nextChar != 0x25) goto LAB_080063d6;\nLAB_080063e0:\n  value = (int)nextChar - (int)output;\n  if (value != 0) {\n    result = FUN_08006370(formatString,formatSpecifier,output,value);\n    if (result == -1) {\nLAB_08006580:\n      if ((int)((uint)*(ushort *)(formatSpecifier + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return totalBytesWritten;\n    }\n    totalBytesWritten = totalBytesWritten + value;\n  }\n  if (*nextChar == 0) goto LAB_08006580;\n  flags = 0;\n  precision = 0;\n  width = -1;\n  length = 0;\n  valueFlag = 0;\n  hashFlag = 0;\n  p = nextChar + 1;\n  while( true ) {\n    value = FUN_08006e90(\"#-0+ \",*p);\n    output = p + 1;\n    if (value == 0) break;\n    flags = 1 << (value + 0xf7ff8750U & 0xff) | flags;\n    p = output;\n  }\n  if ((int)(flags << 0x1b) < 0) {\n    valueFlag = 0x20;\n  }\n  if ((int)(flags << 0x1c) < 0) {\n    valueFlag = 0x2b;\n  }\n  if (*p == 0x2a) {\n    ptr = bytesWrittenPointer + 1;\n    value = *bytesWrittenPointer;\n    bytesWrittenPointer = ptr;\n    if (value < 0) {\n      precision = -value;\n      flags = flags | 2;\n      goto LAB_080064be;\n    }\n  }\n  else {\n    foundNumber = false;\n    value = precision;\n    output = p;\n    while( true ) {\n      if (9 < *output - 0x30) break;\n      value = value * 10 + (*output - 0x30);\n      foundNumber = true;\n      output = output + 1;\n    }\n    if (!foundNumber) goto LAB_080064be;\n  }\n  precision = value;\nLAB_080064be:\n  if (*output == 0x2e) {\n    if (output[1] == 0x2a) {\n      output = output + 2;\n      ptr = bytesWrittenPointer + 1;\n      width = *bytesWrittenPointer;\n      bytesWrittenPointer = ptr;\n      if (width < 0) {\n        width = -1;\n      }\n    }\n    else {\n      foundNumber = false;\n      value = 0;\n      width = 0;\n      while( true ) {\n        output = output + 1;\n        if (9 < *output - 0x30) break;\n        value = value * 10 + (*output - 0x30);\n        foundNumber = true;\n      }\n      if (foundNumber) {\n        width = value;\n      }\n    }\n  }\n  value = FUN_08006e90(&DAT_080078b6,*output,3);\n  if (value != 0) {\n    output = output + 1;\n    flags = flags | 0x40 << (value + 0xf7ff874aU & 0xff);\n  }\n  formatChar = *output;\n  output = output + 1;\n  value = FUN_08006e90(\"efgEFG\",formatChar,6);\n  if (value == 0) {\n    tmpValue = FUN_080066b0(formatString,&flags,formatSpecifier,0x8006371,&bytesWrittenPointer);\n    if (tmpValue == -1) goto LAB_08006580;\n  }\n  else {\n    bytesWrittenPointer = (int *)(((int)bytesWrittenPointer + 7U & 0xfffffff8) + 8);\n  }\n  totalBytesWritten = totalBytesWritten + tmpValue;\n  p = output;\n  goto LAB_080063d6;\n}\n\n",
            "renaming": {
                "FUN_08006394": "parse_format_string_08006394",
                "param_1": "formatString",
                "param_2": "formatSpecifier",
                "param_3": "output",
                "param_4": "bytesWritten",
                "iVar1": "result",
                "piVar2": "ptr",
                "bVar3": "foundNumber",
                "pbVar4": "p",
                "pbVar5": "nextChar",
                "unaff_r9": "tmpValue",
                "iVar6": "value",
                "local_8c": "bytesWrittenPointer",
                "local_88": "flags",
                "local_84": "width",
                "local_80": "length",
                "local_7c": "precision",
                "local_74": "totalBytesWritten",
                "local_70": "formatChar",
                "local_6f": "spaceFlag",
                "local_6e": "plusFlag",
                "local_45": "valueFlag",
                "local_30": "hashFlag"
            },
            "calling": [
                "FUN_08006174",
                "FUN_080068f0"
            ],
            "called": [
                "FUN_080066b0",
                "FUN_08006cb4",
                "FUN_08006e90",
                "FUN_080069e4",
                "FUN_08006370"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080065c0": {
            "entrypoint": "0x080065c0",
            "current_name": "process_data_080065c0",
            "code": "\nundefined4\nprocessData_080065c0(undefined4 data,uint *params,uint *maxValue,undefined4 param,code *callback)\n\n{\n  int index;\n  int result;\n  uint maxValueTmp;\n  uint valueTmp;\n  bool flag;\n  \n  maxValueTmp = params[4];\n  if ((int)params[4] < (int)params[2]) {\n    maxValueTmp = params[2];\n  }\n  *maxValue = maxValueTmp;\n  if (*(char *)((int)params + 0x43) != '\\0') {\n    *maxValue = maxValueTmp + 1;\n  }\n  if ((int)(*params << 0x1a) < 0) {\n    *maxValue = *maxValue + 2;\n  }\n  if ((*params & 6) == 0) {\n    for (index = 0; index < (int)(params[3] - *maxValue); index = index + 1) {\n      result = (*callback)(data,param,(int)params + 0x19,1);\n      if (result == -1) {\n        return 0xffffffff;\n      }\n    }\n  }\n  maxValueTmp = (uint)*(byte *)((int)params + 0x43);\n  if (maxValueTmp != 0) {\n    maxValueTmp = 1;\n  }\n  valueTmp = maxValueTmp;\n  if ((int)(*params << 0x1a) < 0) {\n    *(undefined *)((int)params + maxValueTmp + 0x43) = 0x30;\n    valueTmp = maxValueTmp + 2;\n    *(undefined *)((int)params + maxValueTmp + 0x44) = *(undefined *)((int)params + 0x45);\n  }\n  index = (*callback)(data,param,(int)params + 0x43,valueTmp);\n  if (index != -1) {\n    maxValueTmp = params[3];\n    flag = (*params & 6) != 4;\n    if (flag) {\n      maxValueTmp = 0;\n    }\n    valueTmp = 0;\n    if (!flag) {\n      maxValueTmp = maxValueTmp - *maxValue;\n    }\n    if (!flag) {\n      maxValueTmp = maxValueTmp & ~((int)maxValueTmp >> 0x1f);\n    }\n    if ((int)params[4] < (int)params[2]) {\n      maxValueTmp = maxValueTmp + (params[2] - params[4]);\n    }\n    while( true ) {\n      if (maxValueTmp == valueTmp) {\n        return 0;\n      }\n      index = (*callback)(data,param,(int)params + 0x1a,1);\n      if (index == -1) break;\n      valueTmp = valueTmp + 1;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080065c0": "process_data_080065c0",
                "param_1": "data",
                "param_2": "params",
                "param_3": "maxValue",
                "param_4": "param",
                "param_5": "callback",
                "iVar1": "index",
                "iVar2": "result",
                "uVar3": "maxValueTmp",
                "uVar4": "valueTmp",
                "bVar5": "flag"
            },
            "calling": [
                "FUN_080066b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080066b0": {
            "entrypoint": "0x080066b0",
            "current_name": "convert_and_write_number_to_string_080066b0",
            "code": "\nuint convertAndWriteNumberToString_080066b0(undefined4 input_param,uint *number,undefined4 input_size,code *callback_func,uint **output_ptr)\n\n{\n  byte byte_val;\n  int index;\n  uint *param_ptr;\n  int callback_result;\n  char *digit_chars;\n  uint base;\n  uint **ppuVar7;\n  char **ppcVar8;\n  uint value;\n  uint size;\n  char *output_ptr;\n  char *output_str;\n  uint output_str_length [2];\n  \n  byte_val = *(byte *)(number + 6);\n  output_str = (char *)((int)number + 0x43);\n  if (byte_val != 0x6e) {\n    if (byte_val < 0x6f) {\n      if (byte_val != 99) {\n        if (byte_val < 100) {\n          if (byte_val == 0) goto LAB_0800686a;\n          if (byte_val != 0x58) goto LAB_080066e0;\n          *(undefined *)((int)number + 0x45) = 0x58;\n          digit_chars = \"0123456789ABCDEF\";\nLAB_080067fa:\n          base = *number;\n          param_ptr = *output_ptr;\n          *output_ptr = param_ptr + 1;\n          if (((base & 0x80) == 0) && ((int)(base << 0x19) < 0)) {\n            value = (uint)*(ushort *)param_ptr;\n          }\n          else {\n            value = *param_ptr;\n          }\n          if ((int)(base << 0x1f) < 0) {\n            *number = base | 0x20;\n          }\n          if (value == 0) {\n            *number = *number & 0xffffffdf;\n          }\n          base = 0x10;\nLAB_08006790:\n          *(undefined *)((int)number + 0x43) = 0;\n        }\n        else {\n          if ((byte_val != 100) && (byte_val != 0x69)) goto LAB_080066e0;\n          value = *number;\n          param_ptr = *output_ptr;\n          if ((value & 0x80) == 0) {\n            *output_ptr = param_ptr + 1;\n            if ((value & 0x40) == 0) goto LAB_08006700;\n            value = (uint)(short)*(ushort *)param_ptr;\n          }\n          else {\n            *output_ptr = param_ptr + 1;\nLAB_08006700:\n            value = *param_ptr;\n          }\n          if ((int)value < 0) {\n            value = -value;\n            *(undefined *)((int)number + 0x43) = 0x2d;\n          }\n          digit_chars = \"0123456789ABCDEF\";\n          base = 10;\n        }\n        size = number[1];\n        number[2] = size;\n        output_ptr = output_str;\n        if ((int)size < 0) {\n          if (value != 0) goto LAB_0800682e;\nLAB_080068dc:\n          *(char *)((int)number + 0x42) = *digit_chars;\n          output_ptr = (char *)((int)number + 0x42);\n        }\n        else {\n          *number = *number & 0xfffffffb;\n          if (value == 0) {\n            if (size != 0) goto LAB_080068dc;\n          }\n          else {\nLAB_0800682e:\n            do {\n              size = value / base;\n              output_ptr = output_ptr + -1;\n              *output_ptr = digit_chars[value - base * size];\n              value = size;\n            } while (size != 0);\n          }\n        }\n        if (((base == 8) && ((int)(*number << 0x1f) < 0)) && ((int)number[1] <= (int)number[4]))\n        {\n          output_ptr[-1] = '0';\n          output_ptr = output_ptr + -1;\n        }\n        number[4] = (int)output_str - (int)output_ptr;\n        output_str = output_ptr;\n        goto LAB_080067d6;\n      }\n      param_ptr = *output_ptr;\n      *output_ptr = param_ptr + 1;\n      *(char *)((int)number + 0x42) = (char)*param_ptr;\nLAB_08006740:\n      output_str = (char *)((int)number + 0x42);\n      value = 1;\n    }\n    else {\n      if (byte_val != 0x73) {\n        if (byte_val < 0x74) {\n          if (byte_val == 0x6f) {\nLAB_08006766:\n            value = *number;\n            param_ptr = *output_ptr;\n            if ((value & 0x80) == 0) {\n              *output_ptr = param_ptr + 1;\n              if ((value & 0x40) == 0) goto LAB_08006774;\n              value = (uint)*(ushort *)param_ptr;\n            }\n            else {\n              *output_ptr = param_ptr + 1;\nLAB_08006774:\n              value = *param_ptr;\n            }\n            if (byte_val == 0x6f) {\n              base = 8;\n            }\n            else {\n              base = 10;\n            }\n            digit_chars = \"0123456789ABCDEF\";\n            goto LAB_08006790;\n          }\n          if (byte_val == 0x70) {\n            *number = *number | 0x20;\nLAB_08006726:\n            digit_chars = \"0123456789abcdef\";\n            *(undefined *)((int)number + 0x45) = 0x78;\n            goto LAB_080067fa;\n          }\n        }\n        else {\n          if (byte_val == 0x75) goto LAB_08006766;\n          if (byte_val == 0x78) goto LAB_08006726;\n        }\nLAB_080066e0:\n        *(byte *)((int)number + 0x42) = byte_val;\n        goto LAB_08006740;\n      }\n      ppcVar8 = (char **)*output_ptr;\n      *output_ptr = (uint *)(ppcVar8 + 1);\n      output_str = *ppcVar8;\n      index = FUN_08006e90(output_str,0,number[1]);\n      if (index != 0) {\n        number[1] = index - (int)output_str;\n      }\n      value = number[1];\n    }\n    number[4] = value;\n    *(undefined *)((int)number + 0x43) = 0;\n    goto LAB_080067d6;\n  }\n  value = *number;\n  ppuVar7 = (uint **)*output_ptr;\n  base = number[5];\n  if ((value & 0x80) == 0) {\n    *output_ptr = (uint *)(ppuVar7 + 1);\n    param_ptr = *ppuVar7;\n    if ((value & 0x40) == 0) goto LAB_08006856;\n    *(short *)param_ptr = (short)base;\n  }\n  else {\n    *output_ptr = (uint *)(ppuVar7 + 1);\n    param_ptr = *ppuVar7;\nLAB_08006856:\n    *param_ptr = base;\n  }\nLAB_0800686a:\n  number[4] = 0;\nLAB_080067d6:\n  index = FUN_080065c0(input_param,number,output_str_length,input_size,callback_func);\n  if ((index == -1) || (index = (*callback_func)(input_param,input_size,output_str,number[4]), index == -1)) {\nLAB_080067ea:\n    value = 0xffffffff;\n  }\n  else {\n    if ((int)(*number << 0x1e) < 0) {\n      for (index = 0; index < (int)(number[3] - output_str_length[0]); index = index + 1) {\n        callback_result = (*callback_func)(input_param,input_size,(int)number + 0x19,1);\n        if (callback_result == -1) goto LAB_080067ea;\n      }\n    }\n    value = number[3];\n    if ((int)number[3] < (int)output_str_length[0]) {\n      value = output_str_length[0];\n    }\n  }\n  return value;\n}\n\n",
            "renaming": {
                "FUN_080066b0": "convert_and_write_number_to_string_080066b0",
                "param_1": "input_param",
                "param_2": "number",
                "param_3": "input_size",
                "param_4": "callback_func",
                "param_5": "output_ptr",
                "bVar1": "byte_val",
                "iVar2": "index",
                "puVar3": "param_ptr",
                "iVar4": "callback_result",
                "pcVar5": "digit_chars",
                "uVar6": "base",
                "uVar9": "value",
                "uVar10": "size",
                "pcVar11": "output_ptr",
                "pcVar12": "output_str",
                "local_24": "output_str_length"
            },
            "calling": [
                "FUN_08006394"
            ],
            "called": [
                "FUN_080065c0",
                "FUN_08006e90"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080068f0": {
            "entrypoint": "0x080068f0",
            "current_name": "initialize_function_080068f0",
            "code": "\nvoid initializeFunction_080068f0(undefined4 firstParam,undefined4 secondParam,undefined4 thirdParam,undefined4 fourthParam)\n\n{\n  int dataAddress;\n  undefined4 param1Copy;\n  undefined4 secondParamCopy;\n  undefined4 thirdParamCopy;\n  undefined4 fourthParamCopy;\n  \n  dataAddress = DAT_200000f8;\n  param1Copy = firstParam;\n  secondParamCopy = secondParam;\n  thirdParamCopy = thirdParam;\n  fourthParamCopy = fourthParam;\n  if ((DAT_200000f8 != 0) && (*(int *)(DAT_200000f8 + 0x18) == 0)) {\n    FUN_08006cb4(DAT_200000f8);\n  }\n  FUN_08006394(dataAddress,*(undefined4 *)(dataAddress + 8),firstParam,&secondParamCopy,param1Copy,&secondParamCopy);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080068f0": "initialize_function_080068f0",
                "param_1": "firstParam",
                "param_2": "secondParam",
                "param_3": "thirdParam",
                "param_4": "fourthParam",
                "iVar1": "dataAddress",
                "uVar2": "param1Copy",
                "uStack_c": "secondParamCopy",
                "uStack_8": "thirdParamCopy",
                "uStack_4": "fourthParamCopy"
            },
            "calling": [
                "FUN_08004f4c"
            ],
            "called": [
                "FUN_08006cb4",
                "FUN_08006394"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006920": {
            "entrypoint": "0x08006920",
            "current_name": "validate_and_assign_value_08006920",
            "code": "\nvoid validate_and_assign_value_08006920(int *output_value,undefined4 input_value)\n\n{\n  int result;\n  \n  DAT_200006a4 = 0;\n  result = FUN_080056d8(input_value);\n  if ((result == -1) && (DAT_200006a4 != 0)) {\n    *output_value = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006920": "validate_and_assign_value_08006920",
                "param_1": "output_value",
                "param_2": "input_value",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08006288"
            ],
            "called": [
                "FUN_080056d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080069e4": {
            "entrypoint": "0x080069e4",
            "current_name": "process_data_080069e4",
            "code": "\nuint processData_080069e4(undefined4 *result,undefined4 *data)\n\n{\n  int dataPtr;\n  uint count;\n  ushort flags;\n  \n  dataPtr = DAT_200000f8;\n  if ((DAT_200000f8 != 0) && (*(int *)(DAT_200000f8 + 0x18) == 0)) {\n    FUN_08006cb4(DAT_200000f8);\n  }\n  if (data == &DAT_08007904) {\n    data = *(undefined4 **)(dataPtr + 4);\n  }\n  else if (data == (undefined4 *)&DAT_08007924) {\n    data = *(undefined4 **)(dataPtr + 8);\n  }\n  else if (data == (undefined4 *)&DAT_080078e4) {\n    data = *(undefined4 **)(dataPtr + 0xc);\n  }\n  flags = *(ushort *)(data + 3);\n  count = (uint)flags;\n  if (-1 < (int)(count << 0x1c)) {\n    if (-1 < (int)(count << 0x1b)) {\n      *result = 9;\n      goto LAB_08006a14;\n    }\n    if ((int)(count << 0x1d) < 0) {\n      if ((undefined4 *)data[0xd] != (undefined4 *)0x0) {\n        if ((undefined4 *)data[0xd] != data + 0x11) {\n          FUN_080061f0(result);\n        }\n        data[0xd] = 0;\n      }\n      *(ushort *)(data + 3) = *(ushort *)(data + 3) & 0xffdb;\n      data[1] = 0;\n      *data = data[4];\n    }\n    *(ushort *)(data + 3) = *(ushort *)(data + 3) | 8;\n  }\n  if ((data[4] == 0) && ((*(ushort *)(data + 3) & 0x280) != 0x200)) {\n    FUN_08006e10(result,data);\n  }\n  flags = *(ushort *)(data + 3);\n  count = flags & 1;\n  if ((flags & 1) == 0) {\n    if (-1 < (int)((uint)flags << 0x1e)) {\n      count = data[5];\n    }\n    data[2] = count;\n  }\n  else {\n    data[2] = 0;\n    data[6] = -data[5];\n  }\n  if (data[4] == 0) {\n    flags = *(ushort *)(data + 3);\n    count = (int)(short)flags & 0x80;\n    if (count != 0) {\nLAB_08006a14:\n      *(ushort *)(data + 3) = flags | 0x40;\n      return 0xffffffff;\n    }\n  }\n  else {\n    count = 0;\n  }\n  return count;\n}\n\n",
            "renaming": {
                "FUN_080069e4": "process_data_080069e4",
                "param_1": "result",
                "param_2": "data",
                "iVar1": "dataPtr",
                "uVar2": "count",
                "uVar3": "flags"
            },
            "calling": [
                "FUN_08006344",
                "FUN_08006394"
            ],
            "called": [
                "FUN_08006e10",
                "FUN_08006cb4",
                "FUN_080061f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ac0": {
            "entrypoint": "0x08006ac0",
            "current_name": "process_data_08006ac0",
            "code": "\nvoid processData_08006ac0(void)\n\n{\n  uint *pointer1;\n  int var1;\n  int *pointer2;\n  int *pointer3;\n  uint value1;\n  ushort value2;\n  int var2;\n  code *functionPointer;\n  int var3;\n  uint value3;\n  code *jumpTable;\n  bool flag;\n  undefined8 result;\n  \n  FUN_08006f00(6);\n  jumpTable = (code *)0x8006acf;\n  result = FUN_0800573c(1);\n  pointer2 = (int *)((ulonglong)result >> 0x20);\n  pointer1 = (uint *)result;\n  value2 = *(ushort *)(pointer2 + 3);\n  value1 = (uint)value2;\n  if ((int)(value1 << 0x1c) < 0) {\n    var1 = pointer2[4];\n    if (var1 != 0) {\n      var2 = value1 << 0x1e;\n      flag = var2 != 0;\n      if (flag) {\n        var2 = 0;\n      }\n      var3 = *pointer2;\n      if (!flag) {\n        var2 = pointer2[5];\n      }\n      *pointer2 = var1;\n      pointer2[2] = var2;\n      for (var3 = var3 - var1; 0 < var3; var3 = var3 - var2) {\n        var2 = (*(code *)pointer2[10])(pointer1,pointer2[8],var1,var3);\n        if (var2 < 1) {\n          value2 = *(ushort *)(pointer2 + 3);\n          goto LAB_08006bc6;\n        }\n        var1 = var1 + var2;\n      }\n    }\n  }\n  else if (((0 < pointer2[1]) || (0 < pointer2[0x10])) &&\n          (functionPointer = (code *)pointer2[0xb], functionPointer != (code *)0x0)) {\n    value3 = *pointer1;\n    *pointer1 = 0;\n    if ((value2 & 0x1000) == 0) {\n      var1 = (*functionPointer)(pointer1,pointer2[8],value1 & 0x1000,1);\n      if ((var1 == -1) && (value1 = *pointer1, value1 != 0)) {\n        if ((value1 != 0x1d) && (value1 != 0x16)) {\n          *(ushort *)(pointer2 + 3) = *(ushort *)(pointer2 + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006b90. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          (*jumpTable)();\n          return;\n        }\n        *pointer1 = value3;\n        goto LAB_08006aea;\n      }\n    }\n    else {\n      var1 = pointer2[0x15];\n    }\n    if (((int)((uint)*(ushort *)(pointer2 + 3) << 0x1d) < 0) &&\n       (var1 = var1 - pointer2[1], pointer2[0xd] != 0)) {\n      var1 = var1 - pointer2[0x10];\n    }\n    var1 = (*(code *)pointer2[0xb])(pointer1,pointer2[8],var1,0);\n    value2 = *(ushort *)(pointer2 + 3);\n    if ((var1 == -1) &&\n       ((0x1d < *pointer1 || (-1 < (int)((0x20400001U >> (*pointer1 & 0xff)) << 0x1f))))) {\nLAB_08006bc6:\n      *(ushort *)(pointer2 + 3) = value2 | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006bd0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jumpTable)(0xffffffff);\n      return;\n    }\n    pointer2[1] = 0;\n    *pointer2 = pointer2[4];\n    if (((int)((uint)value2 << 0x13) < 0) && ((var1 != -1 || (*pointer1 == 0)))) {\n      pointer2[0x15] = var1;\n    }\n    pointer3 = (int *)pointer2[0xd];\n    *pointer1 = value3;\n    if (pointer3 != (int *)0x0) {\n      if (pointer3 != pointer2 + 0x11) {\n        FUN_080061f0(pointer1);\n      }\n      pointer2[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08006b66. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jumpTable)();\n      return;\n    }\n  }\nLAB_08006aea:\n                    /* WARNING: Could not recover jumptable at 0x08006aec. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006ac0": "process_data_08006ac0",
                "puVar1": "pointer1",
                "iVar2": "var1",
                "piVar3": "pointer2",
                "piVar4": "pointer3",
                "uVar5": "value1",
                "uVar6": "value2",
                "iVar7": "var2",
                "pcVar8": "functionPointer",
                "iVar9": "var3",
                "uVar10": "value3",
                "UNRECOVERED_JUMPTABLE_00": "jumpTable",
                "bVar11": "flag",
                "uVar12": "result"
            },
            "calling": [
                "FUN_08007090",
                "FUN_0800611c"
            ],
            "called": [
                "FUN_0800573c",
                "FUN_080061f0",
                "FUN_08006f00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006be0": {
            "entrypoint": "0x08006be0",
            "current_name": "process_data_08006be0",
            "code": "\nundefined4 processData_08006be0(uint *dataArray,int *flagsArray)\n\n{\n  undefined4 returnValue;\n  int flagValue;\n  int *tempPtr;\n  uint ushortValue;\n  ushort tempUShort;\n  int temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  code *functionPtr;\n  int temp4;\n  uint tempUInt;\n  code *jumpTable;\n  bool flag;\n  \n  if (flagsArray[4] != 0) {\n    if ((dataArray != (uint *)0x0) && (dataArray[6] == 0)) {\n      FUN_08006cb4();\n    }\n    if (flagsArray == &DAT_08007904) {\n      flagsArray = (int *)dataArray[1];\n    }\n    else if (flagsArray == (int *)&DAT_08007924) {\n      flagsArray = (int *)dataArray[2];\n    }\n    else if (flagsArray == (int *)&DAT_080078e4) {\n      flagsArray = (int *)dataArray[3];\n    }\n    if (*(short *)(flagsArray + 3) != 0) {\n      tempUShort = *(ushort *)(flagsArray + 3);\n      ushortValue = (uint)tempUShort;\n      if ((int)(ushortValue << 0x1c) < 0) {\n        flagValue = flagsArray[4];\n        if (flagValue != 0) {\n          temp1 = ushortValue << 0x1e;\n          flag = temp1 != 0;\n          if (flag) {\n            temp1 = 0;\n          }\n          temp4 = *flagsArray;\n          if (!flag) {\n            temp1 = flagsArray[5];\n          }\n          *flagsArray = flagValue;\n          flagsArray[2] = temp1;\n          for (temp4 = temp4 - flagValue; 0 < temp4; temp4 = temp4 - temp1) {\n            temp1 = (*(code *)flagsArray[10])(dataArray,flagsArray[8],flagValue,temp4,temp2,temp3);\n            if (temp1 < 1) {\n              tempUShort = *(ushort *)(flagsArray + 3);\n              goto LAB_08006bc6;\n            }\n            flagValue = flagValue + temp1;\n          }\n        }\n      }\n      else if (((0 < flagsArray[1]) || (0 < flagsArray[0x10])) &&\n              (functionPtr = (code *)flagsArray[0xb], functionPtr != (code *)0x0)) {\n        tempUInt = *dataArray;\n        *dataArray = 0;\n        if ((tempUShort & 0x1000) == 0) {\n          flagValue = (*functionPtr)(dataArray,flagsArray[8],ushortValue & 0x1000,1);\n          if ((flagValue == -1) && (ushortValue = *dataArray, ushortValue != 0)) {\n            if ((ushortValue != 0x1d) && (ushortValue != 0x16)) {\n              *(ushort *)(flagsArray + 3) = *(ushort *)(flagsArray + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006b90. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n              returnValue = (*jumpTable)();\n              return returnValue;\n            }\n            *dataArray = tempUInt;\n            goto LAB_08006aea;\n          }\n        }\n        else {\n          flagValue = flagsArray[0x15];\n        }\n        if (((int)((uint)*(ushort *)(flagsArray + 3) << 0x1d) < 0) &&\n           (flagValue = flagValue - flagsArray[1], flagsArray[0xd] != 0)) {\n          flagValue = flagValue - flagsArray[0x10];\n        }\n        flagValue = (*(code *)flagsArray[0xb])(dataArray,flagsArray[8],flagValue,0);\n        tempUShort = *(ushort *)(flagsArray + 3);\n        if ((flagValue == -1) &&\n           ((0x1d < *dataArray || (-1 < (int)((0x20400001U >> (*dataArray & 0xff)) << 0x1f))))) {\nLAB_08006bc6:\n          *(ushort *)(flagsArray + 3) = tempUShort | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006bd0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          returnValue = (*jumpTable)(0xffffffff);\n          return returnValue;\n        }\n        flagsArray[1] = 0;\n        *flagsArray = flagsArray[4];\n        if (((int)((uint)tempUShort << 0x13) < 0) && ((flagValue != -1 || (*dataArray == 0)))) {\n          flagsArray[0x15] = flagValue;\n        }\n        tempPtr = (int *)flagsArray[0xd];\n        *dataArray = tempUInt;\n        if (tempPtr != (int *)0x0) {\n          if (tempPtr != flagsArray + 0x11) {\n            FUN_080061f0(dataArray);\n          }\n          flagsArray[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08006b66. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          returnValue = (*jumpTable)();\n          return returnValue;\n        }\n      }\nLAB_08006aea:\n                    /* WARNING: Could not recover jumptable at 0x08006aec. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      returnValue = (*jumpTable)(0);\n      return returnValue;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006be0": "process_data_08006be0",
                "param_1": "dataArray",
                "param_2": "flagsArray",
                "uVar1": "returnValue",
                "iVar2": "flagValue",
                "piVar3": "tempPtr",
                "uVar4": "ushortValue",
                "uVar5": "tempUShort",
                "iVar6": "temp1",
                "unaff_r4": "temp2",
                "unaff_r5": "temp3",
                "pcVar7": "functionPtr",
                "iVar8": "temp4",
                "uVar9": "tempUInt",
                "UNRECOVERED_JUMPTABLE_00": "jumpTable",
                "bVar10": "flag"
            },
            "calling": [
                "FUN_08006344"
            ],
            "called": [
                "FUN_08006cb4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c40": {
            "entrypoint": "0x08006c40",
            "current_name": "initialize_data_structure_08006c40",
            "code": "\nvoid initializeDataStructure_08006c40(undefined4 *dataStructure,undefined2 value1,undefined2 value2)\n\n{\n  *dataStructure = 0;\n  dataStructure[1] = 0;\n  dataStructure[2] = 0;\n  *(undefined2 *)(dataStructure + 3) = value1;\n  dataStructure[0x19] = 0;\n  *(undefined2 *)((int)dataStructure + 0xe) = value2;\n  dataStructure[4] = 0;\n  dataStructure[5] = 0;\n  dataStructure[6] = 0;\n  FUN_080061e0(dataStructure + 0x17,0,8);\n  dataStructure[8] = dataStructure;\n  dataStructure[9] = 0x8006f39;\n  dataStructure[10] = 0x8006f5b;\n  dataStructure[0xb] = 0x8006f93;\n  dataStructure[0xc] = &label_08006fb6_1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006c40": "initialize_data_structure_08006c40",
                "param_1": "dataStructure",
                "param_2": "value1",
                "param_3": "value2",
                "LAB_08006fb6_1": "label_08006fb6_1"
            },
            "calling": [
                "FUN_08006cb4"
            ],
            "called": [
                "FUN_080061e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c88": {
            "entrypoint": "0x08006c88",
            "current_name": "initialize_data_structure_08006c88",
            "code": "\nundefined4 * initializeDataStructure_08006c88(undefined4 data,int size)\n\n{\n  undefined4 *newData;\n  int offset;\n  \n  offset = (size + -1) * 0x68;\n  newData = (undefined4 *)FUN_08006288(data,offset + 0x74);\n  if (newData != (undefined4 *)0x0) {\n    *newData = 0;\n    newData[1] = size;\n    newData[2] = newData + 3;\n    FUN_080061e0(newData + 3,0,offset + 0x68);\n  }\n  return newData;\n}\n\n",
            "renaming": {
                "FUN_08006c88": "initialize_data_structure_08006c88",
                "param_1": "data",
                "param_2": "size",
                "puVar1": "newData",
                "iVar2": "offset"
            },
            "calling": [
                "FUN_08006d14"
            ],
            "called": [
                "FUN_08006288",
                "FUN_080061e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006cb4": {
            "entrypoint": "0x08006cb4",
            "current_name": "initialize_data_08006cb4",
            "code": "\nvoid initializeData_08006cb4(undefined4 *dataPointer)\n\n{\n  undefined4 returnValue;\n  undefined4 *tempPointer;\n  \n  if (dataPointer[6] == 0) {\n    dataPointer[0x12] = 0;\n    dataPointer[0x13] = 0;\n    dataPointer[0x14] = 0;\n    tempPointer = &DAT_200000fc;\n    dataPointer[10] = functionPointer;\n    if (dataPointer == &DAT_200000fc) {\n      tempPointer = (undefined4 *)0x1;\n    }\n    if (dataPointer == &DAT_200000fc) {\n      dataPointer[6] = tempPointer;\n    }\n    returnValue = FUN_08006d14();\n    dataPointer[1] = returnValue;\n    returnValue = FUN_08006d14(dataPointer);\n    dataPointer[2] = returnValue;\n    returnValue = FUN_08006d14(dataPointer);\n    dataPointer[3] = returnValue;\n    FUN_08006c40(dataPointer[1],4,0);\n    FUN_08006c40(dataPointer[2],9,1);\n    FUN_08006c40(dataPointer[3],0x12,2);\n    dataPointer[6] = 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006cb4": "initialize_data_08006cb4",
                "param_1": "dataPointer",
                "uVar1": "returnValue",
                "puVar2": "tempPointer",
                "&LAB_08006c34_1": "functionPointer"
            },
            "calling": [
                "FUN_08006be0",
                "FUN_080069e4",
                "FUN_08006344",
                "FUN_080068f0",
                "FUN_08006394",
                "FUN_08006d14"
            ],
            "called": [
                "FUN_08006c40",
                "FUN_08006d14"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d14": {
            "entrypoint": "0x08006d14",
            "current_name": "process_data_08006d14",
            "code": "\nint * processData_08006d14(undefined4 *output,undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  int *endPtr;\n  int *currentPtr;\n  int **listPtrPtr;\n  \n  if (DAT_20000114 == 0) {\n    FUN_08006cb4(&DAT_200000fc);\n  }\n  listPtrPtr = (int **)&DAT_20000144;\n  do {\n    currentPtr = listPtrPtr[2];\n    endPtr = listPtrPtr[1];\n    while (endPtr = (int *)((int)endPtr + -1), -1 < (int)endPtr) {\n      if (*(short *)(currentPtr + 3) == 0) {\n        *(undefined2 *)((int)currentPtr + 0xe) = 0xffff;\n        currentPtr[0x19] = 0;\n        *(undefined2 *)(currentPtr + 3) = 1;\n        *currentPtr = 0;\n        currentPtr[2] = 0;\n        currentPtr[1] = 0;\n        currentPtr[4] = 0;\n        currentPtr[5] = 0;\n        currentPtr[6] = 0;\n        FUN_080061e0(currentPtr + 0x17,0,8,1,input3);\n        currentPtr[0xd] = 0;\n        currentPtr[0xe] = 0;\n        currentPtr[0x12] = 0;\n        currentPtr[0x13] = 0;\n        return currentPtr;\n      }\n      currentPtr = currentPtr + 0x1a;\n    }\n    if (*listPtrPtr == (int *)0x0) {\n      endPtr = (int *)FUN_08006c88(output,4);\n      *listPtrPtr = endPtr;\n      if (endPtr == (int *)0x0) {\n        *output = 0xc;\n        return (int *)0x0;\n      }\n    }\n    listPtrPtr = (int **)*listPtrPtr;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08006d14": "process_data_08006d14",
                "param_1": "output",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "input3",
                "piVar1": "endPtr",
                "piVar2": "currentPtr",
                "ppiVar3": "listPtrPtr"
            },
            "calling": [
                "FUN_08006cb4"
            ],
            "called": [
                "FUN_08006cb4",
                "FUN_08006c88",
                "FUN_080061e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006dc8": {
            "entrypoint": "0x08006dc8",
            "current_name": "check_permissions_08006dc8",
            "code": "\nundefined4 checkPermissions_08006dc8(undefined4 param,int data,undefined4 *permission,uint *result)\n\n{\n  int errorCode;\n  undefined4 permissionCode;\n  undefined localArray [4];\n  uint flags;\n  \n  if ((*(short *)(data + 0xe) < 0) ||\n     (errorCode = FUN_08007004(param,(int)*(short *)(data + 0xe),localArray), errorCode < 0)) {\n    *result = 0;\n    if ((int)((uint)*(ushort *)(data + 0xc) << 0x18) < 0) {\n      permissionCode = 0x40;\n      goto LAB_08006e08;\n    }\n  }\n  else {\n    *result = (uint)((flags & 0xf000) == 0x2000);\n  }\n  permissionCode = 0x400;\nLAB_08006e08:\n  *permission = permissionCode;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006dc8": "check_permissions_08006dc8",
                "param_1": "param",
                "param_2": "data",
                "param_3": "permission",
                "param_4": "result",
                "iVar1": "errorCode",
                "uVar2": "permissionCode",
                "auStack_4c": "localArray",
                "local_48": "flags"
            },
            "calling": [
                "FUN_08006e10"
            ],
            "called": [
                "FUN_08007004"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e10": {
            "entrypoint": "0x08006e10",
            "current_name": "process_data_08006e10",
            "code": "\nvoid processData_08006e10(int inputValue,int *outputArray)\n\n{\n  ushort result;\n  int returnValue;\n  int tempValue;\n  int *tempArray;\n  \n  if (-1 < (int)((uint)*(ushort *)(outputArray + 3) << 0x1e)) {\n    tempValue = inputValue;\n    tempArray = outputArray;\n    result = FUN_08006dc8(inputValue,outputArray,&tempValue,&tempArray);\n    returnValue = FUN_08006288(inputValue,tempValue);\n    if (returnValue != 0) {\n      *(undefined **)(inputValue + 0x28) = &LAB_08006c34_1;\n      *outputArray = returnValue;\n      *(ushort *)(outputArray + 3) = *(ushort *)(outputArray + 3) | 0x80;\n      outputArray[4] = returnValue;\n      outputArray[5] = tempValue;\n      if ((tempArray != (int *)0x0) &&\n         (returnValue = FUN_08007028(inputValue,(int)*(short *)((int)outputArray + 0xe)), returnValue != 0)) {\n        *(ushort *)(outputArray + 3) = *(ushort *)(outputArray + 3) & 0xfffc | 1;\n      }\n      *(ushort *)(outputArray + 3) = result | *(ushort *)(outputArray + 3);\n      return;\n    }\n    if ((int)(short)*(ushort *)(outputArray + 3) << 0x16 < 0) {\n      return;\n    }\n    *(ushort *)(outputArray + 3) = *(ushort *)(outputArray + 3) & 0xfffc | 2;\n  }\n  *outputArray = (int)outputArray + 0x47;\n  outputArray[4] = (int)outputArray + 0x47;\n  outputArray[5] = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006e10": "process_data_08006e10",
                "param_1": "inputValue",
                "param_2": "outputArray",
                "uVar1": "result",
                "iVar2": "returnValue",
                "local_18": "tempValue",
                "local_14": "tempArray"
            },
            "calling": [
                "FUN_080069e4"
            ],
            "called": [
                "FUN_08007028",
                "FUN_08006288",
                "FUN_08006dc8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e90": {
            "entrypoint": "0x08006e90",
            "current_name": "find_character_08006e90",
            "code": "\nchar * find_character_08006e90(char *input_string,char character,int length)\n\n{\n  char *current_char;\n  char *next_char;\n  \n  current_char = input_string;\n  do {\n    next_char = current_char;\n    if (next_char == input_string + length) {\n      return (char *)0x0;\n    }\n    current_char = next_char + 1;\n  } while (*next_char != character);\n  return next_char;\n}\n\n",
            "renaming": {
                "FUN_08006e90": "find_character_08006e90",
                "param_1": "input_string",
                "param_2": "character",
                "param_3": "length",
                "pcVar1": "current_char",
                "pcVar2": "next_char"
            },
            "calling": [
                "FUN_080066b0",
                "FUN_08006394"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006eac": {
            "entrypoint": "0x08006eac",
            "current_name": "FUNC_08006eac",
            "code": "\nvoid FUNC_08006eac(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006eac": "FUNC_08006eac"
            },
            "calling": [
                "FUN_080061f0",
                "FUN_08006288"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08006eae": {
            "entrypoint": "0x08006eae",
            "current_name": "FUNC_08006eae",
            "code": "\nvoid FUNC_08006eae(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006eae": "FUNC_08006eae"
            },
            "calling": [
                "FUN_08006288",
                "FUN_080061f0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08006f00": {
            "entrypoint": "0x08006f00",
            "current_name": "execute_operation_08006f00",
            "code": "\nint executeOperation_08006f00(uint operationIndex)\n\n{\n  int *datPointer;\n  undefined4 resultCode;\n  int functionPointer;\n  code *targetFunction;\n  undefined4 unaff_r4;\n  undefined4 unaff_r5;\n  undefined4 in_lr;\n  undefined4 *datPointerPtr;\n  \n  datPointer = DAT_200000f8;\n  datPointerPtr = &DAT_200000f8;\n  if (0x1f < operationIndex) {\n    *DAT_200000f8 = 0x16;\n    return -1;\n  }\n  functionPointer = DAT_200000f8[0x11];\n  if ((functionPointer != 0) && (targetFunction = *(code **)(functionPointer + operationIndex * 4), targetFunction != (code *)0x0)) {\n    if (targetFunction != (code *)0x1) {\n      if (targetFunction == (code *)0xffffffff) {\n        *DAT_200000f8 = 0x16;\n        return 1;\n      }\n      *(undefined4 *)(functionPointer + operationIndex * 4) = 0;\n      (*targetFunction)(operationIndex);\n    }\n    return 0;\n  }\n  resultCode = thunk_FUN_08005750(DAT_200000f8);\n  DAT_200006a4 = 0;\n  functionPointer = FUN_08005740(resultCode,operationIndex,operationIndex,0,datPointerPtr,unaff_r4,unaff_r5,in_lr);\n  if ((functionPointer == -1) && (DAT_200006a4 != 0)) {\n    *datPointer = DAT_200006a4;\n  }\n  return functionPointer;\n}\n\n",
            "renaming": {
                "FUN_08006f00": "execute_operation_08006f00",
                "param_1": "operationIndex",
                "piVar1": "datPointer",
                "uVar2": "resultCode",
                "iVar3": "functionPointer",
                "pcVar4": "targetFunction",
                "puVar5": "datPointerPtr"
            },
            "calling": [
                "FUN_08006ac0"
            ],
            "called": [
                "FUN_08005740",
                "thunk_FUN_08005750"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_08005750": {
            "entrypoint": "0x08006f34",
            "current_name": "get_default_value_thunk_08005750",
            "code": "\nint get_default_value_thunk_08005750(void)\n\n{\n  result 1;\n}\n\n",
            "renaming": {
                "thunk_FUN_08005750": "get_default_value_thunk_08005750",
                "undefined4": "int",
                "return": "result"
            },
            "calling": [
                "FUN_08006f00"
            ],
            "called": [
                "FUN_08005750"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006f38": {
            "entrypoint": "0x08006f38",
            "current_name": "update_value_08006f38",
            "code": "\nvoid updateValue_08006f38(undefined4 inputValue,int dataPointer)\n\n{\n  int result;\n  uint newValue;\n  bool isPositive;\n  \n  result = FUN_0800706c(inputValue,(int)*(short *)(dataPointer + 0xe));\n  isPositive = -1 < result;\n  if (isPositive) {\n    newValue = *(int *)(dataPointer + 0x54) + result;\n  }\n  else {\n    newValue = *(ushort *)(dataPointer + 0xc) & 0xffffefff;\n  }\n  if (isPositive) {\n    *(uint *)(dataPointer + 0x54) = newValue;\n  }\n  if (!isPositive) {\n    *(short *)(dataPointer + 0xc) = (short)newValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006f38": "update_value_08006f38",
                "param_1": "inputValue",
                "param_2": "dataPointer",
                "iVar1": "result",
                "uVar2": "newValue",
                "bVar3": "isPositive"
            },
            "calling": [],
            "called": [
                "FUN_0800706c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006f5a": {
            "entrypoint": "0x08006f5a",
            "current_name": "sanitize_and_check_input_08006f5a",
            "code": "\nvoid sanitizeAndCheckInput_08006f5a(int *outputArray,int inputArray,undefined4 paramA,undefined4 paramB)\n\n{\n  int returnValue;\n  undefined4 unusedRegister4;\n  undefined4 unusedRegister5;\n  undefined4 unusedLinkRegister;\n  \n  if ((int)((uint)*(ushort *)(inputArray + 0xc) << 0x17) < 0) {\n    FUN_08007048(outputArray,(int)*(short *)(inputArray + 0xe),0,2);\n  }\n  *(ushort *)(inputArray + 0xc) = *(ushort *)(inputArray + 0xc) & 0xefff;\n  DAT_200006a4 = 0;\n  returnValue = FUN_08005730((int)*(short *)(inputArray + 0xe),paramA,paramB,paramB,paramB,unusedRegister4,\n                       unusedRegister5,unusedLinkRegister);\n  if ((returnValue == -1) && (DAT_200006a4 != 0)) {\n    *outputArray = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006f5a": "sanitize_and_check_input_08006f5a",
                "param_1": "outputArray",
                "param_2": "inputArray",
                "param_3": "paramA",
                "param_4": "paramB",
                "iVar1": "returnValue",
                "unaff_r4": "unusedRegister4",
                "unaff_r5": "unusedRegister5",
                "in_lr": "unusedLinkRegister"
            },
            "calling": [],
            "called": [
                "FUN_08007048",
                "FUN_08005730"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006f92": {
            "entrypoint": "0x08006f92",
            "current_name": "update_status_08006f92",
            "code": "\nvoid updateStatus_08006f92(undefined4 statusAddress,int dataAddress)\n\n{\n  int result;\n  ushort updatedValue;\n  bool isError;\n  \n  result = FUN_08007048(statusAddress,(int)*(short *)(dataAddress + 0xe));\n  isError = result == -1;\n  if (isError) {\n    updatedValue = *(ushort *)(dataAddress + 0xc) & 0xefff;\n  }\n  else {\n    *(int *)(dataAddress + 0x54) = result;\n    updatedValue = *(ushort *)(dataAddress + 0xc) | 0x1000;\n  }\n  if (isError) {\n    *(ushort *)(dataAddress + 0xc) = updatedValue;\n  }\n  if (!isError) {\n    *(ushort *)(dataAddress + 0xc) = updatedValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006f92": "update_status_08006f92",
                "param_1": "statusAddress",
                "param_2": "dataAddress",
                "iVar1": "result",
                "uVar2": "updatedValue",
                "bVar3": "isError"
            },
            "calling": [],
            "called": [
                "FUN_08007048"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007004": {
            "entrypoint": "0x08007004",
            "current_name": "update_param_08007004",
            "code": "\nvoid updateParam_08007004(int *output,undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  int result;\n  \n  DAT_200006a4 = 0;\n  result = FUN_0800571a(input1,input2,input2,0,input3);\n  if ((result == -1) && (DAT_200006a4 != 0)) {\n    *output = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007004": "update_param_08007004",
                "param_1": "output",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "input3",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08006dc8"
            ],
            "called": [
                "FUN_0800571a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007028": {
            "entrypoint": "0x08007028",
            "current_name": "check_and_assign_value_08007028",
            "code": "\nvoid checkAndAssignValue_08007028(int *result,undefined4 input)\n\n{\n  int returnValue;\n  \n  DAT_200006a4 = 0;\n  returnValue = FUN_08005724(input);\n  if ((returnValue == -1) && (DAT_200006a4 != 0)) {\n    *result = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007028": "check_and_assign_value_08007028",
                "param_1": "result",
                "param_2": "input",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08006e10"
            ],
            "called": [
                "FUN_08005724"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007048": {
            "entrypoint": "0x08007048",
            "current_name": "update_data_08007048",
            "code": "\nvoid updateData_08007048(int *result,undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  int returnValue;\n  \n  DAT_200006a4 = 0;\n  returnValue = FUN_08005728(input1,input2,input3,input3,input3);\n  if ((returnValue == -1) && (DAT_200006a4 != 0)) {\n    *result = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007048": "update_data_08007048",
                "param_1": "result",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "input3",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08006f5a",
                "FUN_08006f92"
            ],
            "called": [
                "FUN_08005728"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800706c": {
            "entrypoint": "0x0800706c",
            "current_name": "find_and_set_non_zero_value_0800706c",
            "code": "\nvoid findAndSetNonZeroValue_0800706c(int *result,undefined4 value1,undefined4 value2,undefined4 value3)\n\n{\n  int returnValue;\n  \n  DAT_200006a4 = 0;\n  returnValue = FUN_0800572c(value1,value2,value3,value3,value3);\n  if ((returnValue == -1) && (DAT_200006a4 != 0)) {\n    *result = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800706c": "find_and_set_non_zero_value_0800706c",
                "param_1": "result",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08006f38"
            ],
            "called": [
                "FUN_0800572c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007090": {
            "entrypoint": "0x08007090",
            "current_name": "initialize_data_08007090",
            "code": "\nvoid initializeData_08007090(void)\n\n{\n  code *jumpTable;\n  \n  jumpTable = initializeData_08007090;\n  FUN_08006ac0();\n  if (-1 < DAT_2000062c << 0x1f) {\n    DAT_2000062c = 1;\n  }\n  if (-1 < DAT_20000628 << 0x1f) {\n    DAT_20000628 = 1;\n  }\n  if (-1 < DAT_20000624 << 0x1f) {\n    DAT_20000624 = 1;\n  }\n  if (-1 < DAT_20000620 << 0x1f) {\n    DAT_20000620 = 1;\n  }\n  if (-1 < DAT_2000061c << 0x1f) {\n    DAT_2000061c = 1;\n  }\n  if (-1 < DAT_20000618 << 0x1f) {\n    DAT_20000618 = 1;\n  }\n  if (-1 < DAT_20000614 << 0x1f) {\n    DAT_20000614 = 1;\n  }\n  if (-1 < DAT_20000610 << 0x1f) {\n    DAT_20000610 = 1;\n  }\n  if (-1 < DAT_2000060c << 0x1f) {\n    DAT_2000060c = 1;\n  }\n  if (-1 < DAT_20000608 << 0x1f) {\n    DAT_20000608 = 1;\n  }\n  if (-1 < DAT_20000604 << 0x1f) {\n    DAT_20000604 = 1;\n  }\n  if (-1 < DAT_20000600 << 0x1f) {\n    DAT_20000600 = 1;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08007128. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007090": "initialize_data_08007090",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_080060d4"
            ],
            "called": [
                "FUN_08006ac0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007328": {
            "entrypoint": "0x08007328",
            "current_name": "FUNC_08007328",
            "code": "\nvoid FUNC_08007328(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007328": "FUNC_08007328"
            },
            "calling": [
                "FUN_08006198",
                "FUN_0800010c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08007334": {
            "entrypoint": "0x08007334",
            "current_name": "FUNC_08007334",
            "code": "\nvoid FUNC_08007334(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007334": "FUNC_08007334"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        }
    },
    "used_tokens": 194133,
    "layers": [
        [
            "FUN_0800010c",
            "FUN_08000178",
            "FUN_08000190",
            "FUN_08000194",
            "FUN_0800040c",
            "FUN_0800042c",
            "FUN_080004f8",
            "FUN_080006d4",
            "FUN_0800074c",
            "FUN_080008ba",
            "FUN_0800092c",
            "FUN_080009a8",
            "FUN_080009b8",
            "FUN_080009c8",
            "FUN_080009dc",
            "FUN_080009f0",
            "FUN_08000a04",
            "FUN_08000a18",
            "FUN_08000a2c",
            "FUN_08000a58",
            "FUN_08000aa8",
            "FUN_08000ae8",
            "FUN_08000aec",
            "FUN_08000b08",
            "FUN_08000bcc",
            "FUN_08000cd0",
            "FUN_08001294",
            "FUN_080012a2",
            "FUN_080012c0",
            "FUN_080012e8",
            "FUN_08001310",
            "FUN_0800134e",
            "FUN_0800135a",
            "FUN_08001366",
            "FUN_0800138e",
            "FUN_080013a4",
            "FUN_080014ba",
            "FUN_08001510",
            "FUN_08001550",
            "FUN_0800157c",
            "FUN_080015b2",
            "FUN_080015f8",
            "FUN_080016b4",
            "FUN_08001814",
            "FUN_080018f8",
            "FUN_08001918",
            "FUN_08001960",
            "FUN_080019f6",
            "FUN_08001a44",
            "FUN_08001a66",
            "FUN_08001ab0",
            "FUN_08001b18",
            "FUN_08001b48",
            "FUN_08001c32",
            "FUN_08001c3c",
            "FUN_08001c88",
            "FUN_08001cac",
            "FUN_08001cc4",
            "FUN_08001cd0",
            "FUN_08001e40",
            "FUN_08001e48",
            "FUN_08001f80",
            "FUN_08001f84",
            "FUN_08002004",
            "FUN_080020f0",
            "FUN_0800213c",
            "FUN_0800224c",
            "FUN_08002348",
            "FUN_08002384",
            "FUN_08002470",
            "FUN_08002494",
            "FUN_080024f8",
            "FUN_08002514",
            "FUN_08002540",
            "FUN_08002560",
            "FUN_08002582",
            "FUN_0800258c",
            "FUN_08002624",
            "FUN_08002810",
            "FUN_0800281e",
            "FUN_0800282c",
            "FUN_08002848",
            "FUN_080028d2",
            "FUN_080028de",
            "FUN_08002ab8",
            "FUN_08002ad8",
            "FUN_08002af8",
            "FUN_08002b84",
            "FUN_08002c10",
            "FUN_08002c54",
            "FUN_08002ca6",
            "FUN_08002cf2",
            "FUN_08002d1c",
            "FUN_08002db2",
            "FUN_08002efc",
            "FUN_08002f9c",
            "FUN_0800306c",
            "FUN_0800316c",
            "FUN_080032b4",
            "FUN_080033b8",
            "FUN_08003520",
            "FUN_0800365c",
            "FUN_08003688",
            "FUN_08003a68",
            "FUN_08003ad4",
            "FUN_08003afa",
            "FUN_08003c44",
            "FUN_08003c50",
            "FUN_08003c70",
            "FUN_08003c90",
            "FUN_08003da4",
            "FUN_08003ea0",
            "FUN_08003ed8",
            "FUN_08003f18",
            "FUN_08004092",
            "FUN_080040b0",
            "FUN_08004110",
            "FUN_0800412c",
            "FUN_0800417c",
            "FUN_08004198",
            "FUN_08004204",
            "FUN_080043b4",
            "FUN_0800441a",
            "FUN_08004478",
            "FUN_0800455a",
            "FUN_080045a2",
            "FUN_080045fe",
            "FUN_08004618",
            "FUN_080046b8",
            "FUN_080047e8",
            "FUN_080047f4",
            "FUN_0800480a",
            "FUN_08004828",
            "FUN_08004848",
            "FUN_08004884",
            "FUN_0800492c",
            "FUN_08004948",
            "FUN_08004974",
            "FUN_080049f0",
            "FUN_08004a4c",
            "FUN_08004b34",
            "FUN_08004b3c",
            "FUN_08004b94",
            "FUN_08004b9e",
            "FUN_08004bb0",
            "FUN_08004c30",
            "FUN_08004c48",
            "FUN_08004c52",
            "FUN_08004c5e",
            "FUN_08004c78",
            "FUN_08004c8a",
            "FUN_08004ca2",
            "FUN_08004cb2",
            "FUN_08004cce",
            "FUN_08004ce2",
            "FUN_08004d06",
            "FUN_08004d18",
            "FUN_08004d40",
            "FUN_08004d44",
            "FUN_08004d90",
            "FUN_08004df4",
            "FUN_08004df8",
            "FUN_08004e12",
            "FUN_08004e20",
            "FUN_08004e70",
            "FUN_08004e74",
            "FUN_08004ec4",
            "FUN_08004ef4",
            "FUN_08004f4c",
            "FUN_08005384",
            "FUN_080053d4",
            "FUN_0800548c",
            "FUN_080054b0",
            "FUN_080054d4",
            "FUN_08005510",
            "FUN_08005568",
            "FUN_080055bc",
            "FUN_080055e0",
            "FUN_08005604",
            "FUN_080056d8",
            "FUN_08005714",
            "FUN_0800571a",
            "FUN_08005724",
            "FUN_08005728",
            "FUN_0800572c",
            "FUN_08005730",
            "FUN_0800573c",
            "FUN_08005740",
            "FUN_08005750",
            "FUN_08005754",
            "FUN_080057b4",
            "FUN_08005848",
            "FUN_08005890",
            "FUN_080058e0",
            "FUN_0800591e",
            "FUN_0800598a",
            "FUN_08005a44",
            "FUN_08005a68",
            "FUN_08005b24",
            "FUN_08005b3c",
            "FUN_08005b54",
            "FUN_08005bb0",
            "FUN_08005c1c",
            "FUN_08005c38",
            "FUN_08005c96",
            "FUN_08005cb6",
            "FUN_08005cc0",
            "FUN_08005cd4",
            "FUN_08005ce8",
            "FUN_08005d42",
            "FUN_08005d82",
            "FUN_08005d8a",
            "FUN_08005da8",
            "FUN_08005f2c",
            "FUN_08005f40",
            "FUN_08005f5e",
            "FUN_08005f6c",
            "FUN_08005f8c",
            "FUN_08005fc8",
            "FUN_080060d4",
            "FUN_080060e4",
            "FUN_08006112",
            "FUN_0800611c",
            "FUN_08006158",
            "FUN_08006174",
            "FUN_08006198",
            "FUN_080061e0",
            "FUN_080061f0",
            "FUN_08006288",
            "FUN_08006344",
            "FUN_08006370",
            "FUN_08006394",
            "FUN_080065c0",
            "FUN_080066b0",
            "FUN_080068f0",
            "FUN_08006920",
            "FUN_080069e4",
            "FUN_08006ac0",
            "FUN_08006be0",
            "FUN_08006c40",
            "FUN_08006c88",
            "FUN_08006cb4",
            "FUN_08006d14",
            "FUN_08006dc8",
            "FUN_08006e10",
            "FUN_08006e90",
            "FUN_08006f00",
            "thunk_FUN_08005750",
            "FUN_08006f38",
            "FUN_08006f5a",
            "FUN_08006f92",
            "FUN_08007004",
            "FUN_08007028",
            "FUN_08007048",
            "FUN_0800706c",
            "FUN_08007090"
        ]
    ],
    "locked_functions": []
}