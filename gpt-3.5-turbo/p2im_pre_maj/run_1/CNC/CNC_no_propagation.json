{
    "functions": {
        "FUN_08000188": {
            "entrypoint": "0x08000188",
            "current_name": "initialize_flag_08000188",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08000194) */\n\nundefined4 initializeFlag_08000188(undefined4 input)\n\n{\n  if ((char)DAT_2000044c == '\\0') {\n    DAT_2000044c._0_1_ = '\\x01';\n  }\n  return input;\n}\n\n",
            "renaming": {
                "FUN_08000188": "initialize_flag_08000188",
                "param_1": "input"
            },
            "calling": [],
            "called": [
                "FUN_0800b5b0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080001ac": {
            "entrypoint": "0x080001ac",
            "current_name": "concatenate_param_080001ac",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x080001b2) */\n\nundefined8 concatenate_param_080001ac(undefined4 destination,undefined4 source)\n\n{\n  return CONCAT44(source,destination);\n}\n\n",
            "renaming": {
                "FUN_080001ac": "concatenate_param_080001ac",
                "param_1": "destination",
                "param_2": "source"
            },
            "calling": [
                "FUN_0800b3e8"
            ],
            "called": [
                "FUN_0800b5b0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080001c8": {
            "entrypoint": "0x080001c8",
            "current_name": "FUNC_080001c8",
            "code": "\nvoid FUNC_080001c8(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001c8": "FUNC_080001c8"
            },
            "calling": [
                "FUN_08000220"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080001d4": {
            "entrypoint": "0x080001d4",
            "current_name": "FUNC_080001d4",
            "code": "\nvoid FUNC_080001d4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001d4": "FUNC_080001d4"
            },
            "calling": [
                "FUN_08000210"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080001e0": {
            "entrypoint": "0x080001e0",
            "current_name": "FUNC_080001e0",
            "code": "\nvoid FUNC_080001e0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001e0": "FUNC_080001e0"
            },
            "calling": [
                "FUN_08000220"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080001ec": {
            "entrypoint": "0x080001ec",
            "current_name": "FUNC_080001ec",
            "code": "\nvoid FUNC_080001ec(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001ec": "FUNC_080001ec"
            },
            "calling": [
                "FUN_08000210"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080001f8": {
            "entrypoint": "0x080001f8",
            "current_name": "initialize_data_080001f8",
            "code": "\nvoid initializeData_080001f8(void)\n\n{\n  DAT_20000468 = 0;\n  FUN_08000210();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001f8": "initialize_data_080001f8"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08000210"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000210": {
            "entrypoint": "0x08000210",
            "current_name": "initialize_system_08000210",
            "code": "\nvoid initialize_system_08000210(void)\n\n{\n  FUNC_080001ec();\n  FUNC_080001d4();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000210": "initialize_system_08000210"
            },
            "calling": [
                "FUN_08000220",
                "FUN_080025e8",
                "FUN_080001f8"
            ],
            "called": [
                "FUN_080001d4",
                "FUN_080001ec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000220": {
            "entrypoint": "0x08000220",
            "current_name": "update_param_08000220",
            "code": "\nvoid updateParam_08000220(char newParam)\n\n{\n  if (newParam != DAT_20000468) {\n    FUN_08002fd4();\n    if (newParam == '\\x01') {\n      FUNC_080001c8();\n      DAT_20000468 = newParam;\n    }\n    else if (newParam == '\\x02') {\n      FUNC_080001e0();\n      DAT_20000468 = newParam;\n    }\n    else {\n      FUN_08000210();\n      DAT_20000468 = newParam;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000220": "update_param_08000220",
                "param_1": "newParam"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_080001e0",
                "FUN_08000210",
                "FUN_080001c8",
                "FUN_08002fd4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000268": {
            "entrypoint": "0x08000268",
            "current_name": "calculate_adjusted_value_08000268",
            "code": "\n\n\nint calculateAdjustedValue_08000268(void)\n\n{\n  int result;\n  \n  result = FUN_08005a84();\n  return (result + 1) * 1000 - _DAT_e000e018 / 0xa8;\n}\n\n",
            "renaming": {
                "FUN_08000268": "calculate_adjusted_value_08000268",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080002b6"
            ],
            "called": [
                "FUN_08005a84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080002a0": {
            "entrypoint": "0x080002a0",
            "current_name": "execute_function_080002a0",
            "code": "\nvoid execute_function_080002a0(undefined4 parameter)\n\n{\n  FUN_08005a98(parameter);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080002a0": "execute_function_080002a0",
                "param_1": "parameter"
            },
            "calling": [
                "FUN_08002408"
            ],
            "called": [
                "FUN_08005a98"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080002b6": {
            "entrypoint": "0x080002b6",
            "current_name": "find_value_in_sequence_080002b6",
            "code": "\nvoid findValueInSequence_080002b6(uint sequence)\n\n{\n  uint sequenceValue;\n  uint targetValue;\n  bool sequenceValueGreater;\n  longlong baseValue;\n  undefined8 currentValue;\n  \n  baseValue = FUN_08000268();\n  targetValue = (uint)(baseValue + (ulonglong)sequence >> 0x20);\n  do {\n    currentValue = FUN_08000268();\n    sequenceValue = (uint)((ulonglong)currentValue >> 0x20);\n    sequenceValueGreater = targetValue <= sequenceValue;\n    if (sequenceValue == targetValue) {\n      sequenceValueGreater = (uint)(baseValue + (ulonglong)sequence) <= (uint)currentValue;\n    }\n  } while (!sequenceValueGreater);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080002b6": "find_value_in_sequence_080002b6",
                "param_1": "sequence",
                "uVar1": "sequenceValue",
                "uVar2": "targetValue",
                "bVar3": "sequenceValueGreater",
                "lVar4": "baseValue",
                "uVar5": "currentValue"
            },
            "calling": [],
            "called": [
                "FUN_08000268"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080002f0": {
            "entrypoint": "0x080002f0",
            "current_name": "initialize_data_080002f0",
            "code": "\nvoid initializeData_080002f0(void)\n\n{\n  FUN_0800b430(&DAT_20000470,0xff,4);\n  DAT_2000046c = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080002f0": "initialize_data_080002f0"
            },
            "calling": [
                "FUN_08000374",
                "FUN_08000340",
                "FUN_080003ec",
                "FUN_08000310"
            ],
            "called": [
                "FUN_0800b430"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000310": {
            "entrypoint": "0x08000310",
            "current_name": "get_indexed_value_08000310",
            "code": "\nundefined getIndexedValue_08000310(uint index)\n\n{\n  if (DAT_2000046c == 0) {\n    FUN_080002f0();\n  }\n  return (&DAT_20000470)[index & 0x3ff];\n}\n\n",
            "renaming": {
                "FUN_08000310": "get_indexed_value_08000310",
                "param_1": "index"
            },
            "calling": [
                "FUN_08004dd2",
                "FUN_080003ec"
            ],
            "called": [
                "FUN_080002f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000340": {
            "entrypoint": "0x08000340",
            "current_name": "save_data_08000340",
            "code": "\nvoid saveData_08000340(uint index,undefined value)\n\n{\n  if (DAT_2000046c == 0) {\n    FUN_080002f0();\n  }\n  (&DAT_20000470)[index & 0x3ff] = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000340": "save_data_08000340",
                "param_1": "index",
                "param_2": "value"
            },
            "calling": [
                "FUN_08000374",
                "FUN_08004c2a"
            ],
            "called": [
                "FUN_080002f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000374": {
            "entrypoint": "0x08000374",
            "current_name": "calculate_checksum_08000374",
            "code": "\nvoid calculateChecksum_08000374(int startIndex,char *dataString,int length)\n\n{\n  int remainingLength;\n  char *currentChar;\n  int currentIndex;\n  char checksum;\n  \n  checksum = '\\0';\n  remainingLength = length;\n  currentChar = dataString;\n  currentIndex = startIndex;\n  if (DAT_2000046c == 0) {\n    FUN_080002f0();\n    currentChar = dataString;\n    currentIndex = startIndex;\n  }\n  for (; remainingLength != 0; remainingLength = remainingLength + -1) {\n    checksum = (checksum != '\\0') + *currentChar;\n    FUN_08000340(currentIndex,*currentChar);\n    currentChar = currentChar + 1;\n    currentIndex = currentIndex + 1;\n  }\n  FUN_08000340(currentIndex,checksum);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000374": "calculate_checksum_08000374",
                "param_1": "startIndex",
                "param_2": "dataString",
                "param_3": "length",
                "local_1c": "remainingLength",
                "local_18": "currentChar",
                "local_14": "currentIndex",
                "local_9": "checksum"
            },
            "calling": [
                "FUN_08004bc0",
                "FUN_08004c2a",
                "FUN_08004bf4"
            ],
            "called": [
                "FUN_08000340",
                "FUN_080002f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080003ec": {
            "entrypoint": "0x080003ec",
            "current_name": "check_equality_080003ec",
            "code": "\nbool checkEquality_080003ec(char *inputArray,int startIndex,int length)\n\n{\n  char cVar1;\n  uint expectedChar;\n  int remainingLength;\n  int currentIndex;\n  char *currentChar;\n  byte charSum;\n  \n  charSum = 0;\n  remainingLength = length;\n  currentIndex = startIndex;\n  currentChar = inputArray;\n  if (DAT_2000046c == 0) {\n    FUN_080002f0();\n    currentIndex = startIndex;\n    currentChar = inputArray;\n  }\n  for (; remainingLength != 0; remainingLength = remainingLength + -1) {\n    cVar1 = FUN_08000310(currentIndex);\n    charSum = cVar1 + (charSum != 0);\n    *currentChar = cVar1;\n    currentIndex = currentIndex + 1;\n    currentChar = currentChar + 1;\n  }\n  expectedChar = FUN_08000310(currentIndex);\n  return charSum == expectedChar;\n}\n\n",
            "renaming": {
                "FUN_080003ec": "check_equality_080003ec",
                "param_1": "inputArray",
                "param_2": "startIndex",
                "param_3": "length",
                "local_1c": "remainingLength",
                "local_18": "currentIndex",
                "local_14": "currentChar",
                "local_9": "charSum",
                "uVar2": "expectedChar"
            },
            "calling": [
                "FUN_08004d7c",
                "FUN_08004dd2",
                "FUN_08004d2c"
            ],
            "called": [
                "FUN_08000310",
                "FUN_080002f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000478": {
            "entrypoint": "0x08000478",
            "current_name": "initialize_variables_08000478",
            "code": "\nvoid initializeVariables_08000478(undefined value1,undefined value2,undefined value3)\n\n{\n  DAT_20000e89 = value1;\n  DAT_20000e8a = value2;\n  DAT_20000e8b = value3;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000478": "initialize_variables_08000478",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3"
            },
            "calling": [
                "FUN_080004ac",
                "FUN_080005b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080004ac": {
            "entrypoint": "0x080004ac",
            "current_name": "initialize_data_080004ac",
            "code": "\nvoid initializeData_080004ac(void)\n\n{\n  int iVar1;\n  \n  FUN_0800b430(&DAT_20000e70,0,0x38);\n  DAT_20000e78 = DAT_20000ecc;\n  FUN_08000478(0,1,2);\n  DAT_20000e74 = 1;\n  iVar1 = FUN_08004d7c(DAT_20000e8c,&DAT_20000e90);\n  if (iVar1 == 0) {\n    FUN_08004030(10);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080004ac": "initialize_data_080004ac"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_0800b430",
                "FUN_08000478",
                "FUN_08004d7c",
                "FUN_08004030"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080004fc": {
            "entrypoint": "0x080004fc",
            "current_name": "initialize_data_080004fc",
            "code": "\nvoid initializeData_080004fc(undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  undefined4 result;\n  \n  result = FUN_08008e44(input1);\n  DAT_20000e7c = FUN_08009054(result,DAT_20000ebc);\n  result = FUN_08008e44(input2);\n  DAT_20000e80 = FUN_08009054(result,DAT_20000ec0);\n  result = FUN_08008e44(input3);\n  DAT_20000e84 = FUN_08009054(result,DAT_20000ec4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080004fc": "initialize_data_080004fc",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "uVar1": "result"
            },
            "calling": [
                "FUN_0800283a"
            ],
            "called": [
                "FUN_08009054",
                "FUN_08008e44"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800056c": {
            "entrypoint": "0x0800056c",
            "current_name": "process_data_0800056c",
            "code": "\nundefined4 processData_0800056c(undefined4 inputData)\n\n{\n  undefined8 result;\n  \n  if (DAT_20000e73 != '\\0') {\n    result = FUN_08008590(inputData);\n    result = FUN_08008640((int)result,(int)((ulonglong)result >> 0x20),0x66666666,0x40396666);\n    inputData = FUN_08008c30((int)result,(int)((ulonglong)result >> 0x20));\n  }\n  return inputData;\n}\n\n",
            "renaming": {
                "FUN_0800056c": "process_data_0800056c",
                "param_1": "inputData",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08008640",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080005b4": {
            "entrypoint": "0x080005b4",
            "current_name": "FUNC_080005b4",
            "code": "\nchar FUNC_080005b4(undefined4 param_1)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  char cVar3;\n  uint uVar4;\n  undefined4 uVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  undefined8 uVar8;\n  undefined4 local_94 [4];\n  undefined4 local_84;\n  undefined4 local_80;\n  undefined4 local_7c;\n  undefined4 uStack_78;\n  undefined4 uStack_74;\n  undefined4 auStack_70 [6];\n  undefined4 local_58;\n  byte local_52;\n  undefined local_51;\n  undefined4 local_50;\n  undefined4 local_4c;\n  undefined local_45;\n  uint local_44;\n  byte local_3d;\n  byte local_3c;\n  byte local_3b;\n  byte local_3a;\n  char local_39;\n  uint local_38;\n  undefined4 local_34;\n  sbyte local_2f;\n  char local_2e;\n  char local_2d;\n  undefined4 local_2c;\n  byte local_27;\n  ushort local_26;\n  uint local_24;\n  \n  if (DAT_20000ea9 == '\\x06') {\n    cVar3 = '\\f';\n  }\n  else {\n    local_51 = 0;\n    local_26 = 0;\n    local_27 = 0;\n    local_2c = 0xbf800000;\n    local_2d = '\\0';\n    local_2e = '\\0';\n    FUN_0800b430(auStack_70 + 3,0,0xc);\n    FUN_0800b430(auStack_70,0,0xc);\n    DAT_20000e70 = '\\0';\n    local_2f = 0;\n    while (iVar1 = FUN_0800184c(&local_52,auStack_70 + 6,param_1,&local_51), iVar1 != 0) {\n      uVar6 = FUN_08008590(local_58);\n      uVar6 = FUN_08009798((int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n      local_24 = FUN_08008ba0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n      if (local_52 == 0x47) {\n        switch(local_24) {\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n        case 0x50:\n          local_2f = 2;\n          break;\n        case 4:\n        case 10:\n        case 0x1c:\n        case 0x1e:\n        case 0x35:\n        case 0x5c:\n          local_2f = 1;\n          break;\n        case 0x11:\n        case 0x12:\n        case 0x13:\n          local_2f = 3;\n          break;\n        case 0x14:\n        case 0x15:\n          local_2f = 7;\n          break;\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n          local_2f = 9;\n          break;\n        case 0x5a:\n        case 0x5b:\n          local_2f = 4;\n          break;\n        case 0x5d:\n        case 0x5e:\n          local_2f = 6;\n        }\n        switch(local_24) {\n        case 0:\n          DAT_20000e71 = '\\0';\n          break;\n        case 1:\n          DAT_20000e71 = '\\x01';\n          break;\n        case 2:\n          DAT_20000e71 = '\\x02';\n          break;\n        case 3:\n          DAT_20000e71 = '\\x03';\n          break;\n        case 4:\n          local_2e = '\\x01';\n          break;\n        default:\n          DAT_20000e70 = '\\x03';\n          break;\n        case 10:\n          local_2e = '\\x02';\n          break;\n        case 0x11:\n          FUN_08000478(0,1,2);\n          break;\n        case 0x12:\n          FUN_08000478(2,0,1);\n          break;\n        case 0x13:\n          FUN_08000478(1,2,0);\n          break;\n        case 0x14:\n          DAT_20000e73 = 1;\n          break;\n        case 0x15:\n          DAT_20000e73 = 0;\n          break;\n        case 0x1c:\n        case 0x1e:\n          uVar2 = FUN_08008eec(local_58,0x41200000);\n          uVar6 = FUN_08008590(uVar2);\n          uVar6 = FUN_08009798((int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n          local_24 = FUN_08008ba0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n          switch(local_24) {\n          case 0x118:\n            local_2e = '\\x03';\n            break;\n          case 0x119:\n            local_2e = '\\x04';\n            break;\n          default:\n            DAT_20000e70 = '\\x03';\n            break;\n          case 300:\n            local_2e = '\\x05';\n            break;\n          case 0x12d:\n            local_2e = '\\x06';\n          }\n          break;\n        case 0x35:\n          local_2d = '\\x01';\n          break;\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n          DAT_20000e8c = (char)local_24 - 0x36;\n          break;\n        case 0x50:\n          DAT_20000e71 = '\\x04';\n          break;\n        case 0x5a:\n          DAT_20000e74 = '\\x01';\n          break;\n        case 0x5b:\n          DAT_20000e74 = '\\0';\n          break;\n        case 0x5c:\n          uVar2 = FUN_08008eec(local_58,0x41200000);\n          uVar6 = FUN_08008590(uVar2);\n          uVar6 = FUN_08009798((int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n          local_24 = FUN_08008ba0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n          if (local_24 == 0x398) {\n            local_2e = '\\a';\n          }\n          else if (local_24 == 0x399) {\n            local_2e = '\\b';\n          }\n          else {\n            DAT_20000e70 = '\\x03';\n          }\n          break;\n        case 0x5d:\n          DAT_20000e72 = '\\x01';\n          break;\n        case 0x5e:\n          DAT_20000e72 = '\\0';\n        }\n      }\n      else if (local_52 == 0x4d) {\n        if (local_24 == 0x1e) {\nLAB_08000b96:\n          local_2f = 5;\n        }\n        else if ((int)local_24 < 0x1f) {\n          if ((int)local_24 < 3) {\n            if (-1 < (int)local_24) goto LAB_08000b96;\n          }\n          else if (local_24 - 3 < 3) {\n            local_2f = 8;\n          }\n        }\n        switch(local_24) {\n        case 0:\n          DAT_20000e75 = '\\x01';\n          break;\n        case 1:\n          break;\n        case 2:\n        case 0x1e:\n          DAT_20000e75 = '\\x02';\n          break;\n        case 3:\n          DAT_20000e76 = '\\x01';\n          break;\n        case 4:\n          DAT_20000e76 = -1;\n          break;\n        case 5:\n          DAT_20000e76 = '\\0';\n          break;\n        default:\n          DAT_20000e70 = '\\x03';\n          break;\n        case 7:\n          DAT_20000e77 = 2;\n          break;\n        case 8:\n          DAT_20000e77 = 1;\n          break;\n        case 9:\n          DAT_20000e77 = 0;\n        }\n      }\n      if (local_2f != 0) {\n        if (((int)(uint)local_26 >> local_2f & 1U) == 0) {\n          local_26 = local_26 | (ushort)(1 << local_2f);\n        }\n        else {\n          DAT_20000e70 = '\\x05';\n        }\n        local_2f = 0;\n      }\n    }\n    cVar3 = DAT_20000e70;\n    if (DAT_20000e70 == '\\0') {\n      local_34 = 0;\n      local_38 = 0;\n      local_39 = '\\0';\n      local_51 = 0;\nswitchD_08000d18_caseD_47:\n      iVar1 = FUN_0800184c(&local_52,auStack_70 + 6,param_1,&local_51);\n      if (iVar1 != 0) {\n        switch(local_52) {\n        case 0x46:\n          iVar1 = FUN_0800923c(local_58,0);\n          if (iVar1 != 0) {\n            DAT_20000e70 = '\\x06';\n          }\n          if (DAT_20000e72 == '\\0') {\n            DAT_20000e78 = FUN_0800056c(local_58);\n          }\n          else {\n            local_2c = FUN_0800056c(local_58);\n          }\n          break;\n        case 0x47:\n        case 0x4d:\n        case 0x4e:\n          break;\n        default:\n          DAT_20000e70 = '\\x03';\n          break;\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n          uVar4 = (uint)local_52;\n          uVar2 = FUN_0800056c(local_58);\n          auStack_70[uVar4 - 0x49] = uVar2;\n          break;\n        case 0x4c:\n          uVar6 = FUN_08008590(local_58);\n          uVar6 = FUN_08009798((int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n          local_39 = FUN_08008bf0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n          break;\n        case 0x50:\n          local_34 = local_58;\n          break;\n        case 0x52:\n          local_38 = FUN_0800056c(local_58);\n          break;\n        case 0x53:\n          iVar1 = FUN_08009228(local_58,0);\n          if (iVar1 != 0) {\n            DAT_20000e70 = '\\x06';\n          }\n          break;\n        case 0x54:\n          iVar1 = FUN_08009228(local_58,0);\n          if (iVar1 != 0) {\n            DAT_20000e70 = '\\x06';\n          }\n          uVar6 = FUN_08008590(local_58);\n          uVar6 = FUN_08009798((int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n          DAT_20000e88 = FUN_08008bf0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n          break;\n        case 0x58:\n          auStack_70[3] = FUN_0800056c(local_58);\n          local_27 = local_27 | 1;\n          break;\n        case 0x59:\n          auStack_70[4] = FUN_0800056c(local_58);\n          local_27 = local_27 | 2;\n          break;\n        case 0x5a:\n          auStack_70[5] = FUN_0800056c(local_58);\n          local_27 = local_27 | 4;\n        }\n        goto switchD_08000d18_caseD_47;\n      }\n      cVar3 = DAT_20000e70;\n      if (DAT_20000e70 == '\\0') {\n        if (DAT_20000ea9 != '\\a') {\n          FUN_0800525c((int)DAT_20000e76);\n          FUN_08000220(DAT_20000e77);\n        }\n        if ((local_26 & 0x200) != 0) {\n          iVar1 = FUN_08004d7c(DAT_20000e8c,&local_7c);\n          if (iVar1 == 0) {\n            return '\\n';\n          }\n          DAT_20000e90 = local_7c;\n          DAT_20000e94 = uStack_78;\n          DAT_20000e98 = uStack_74;\n        }\n        switch(local_2e) {\n        case '\\x01':\n          iVar1 = FUN_08009228(local_34,0);\n          if (iVar1 == 0) {\n            if (DAT_20000ea9 != '\\a') {\n              FUN_08002408(local_34);\n            }\n          }\n          else {\n            DAT_20000e70 = '\\x06';\n          }\n          break;\n        case '\\x02':\n          uVar6 = FUN_08008590(local_34);\n          uVar6 = FUN_08009798((int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n          local_24 = FUN_08008ba0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n          if ((((local_39 == '\\x02') || (local_39 == '\\x14')) && (-1 < (int)local_24)) &&\n             ((int)local_24 < 7)) {\n            if ((local_27 == 0) && (local_39 == '\\x02')) {\n              DAT_20000e70 = '\\x06';\n            }\n            else {\n              if ((int)local_24 < 1) {\n                local_24 = (uint)DAT_20000e8c;\n              }\n              else {\n                local_24 = local_24 - 1;\n              }\n              iVar1 = FUN_08004d7c(local_24 & 0xff,local_94);\n              if (iVar1 == 0) {\n                return '\\n';\n              }\n              for (local_3a = 0; local_3a < 3; local_3a = local_3a + 1) {\n                if (((int)(uint)local_27 >> local_3a & 1U) != 0) {\n                  if (local_39 == '\\x14') {\n                    uVar4 = (uint)local_3a;\n                    uVar2 = FUN_08008cd8(*(undefined4 *)(&DAT_20000e74 + (local_3a + 2) * 4),\n                                         auStack_70[local_3a + 3]);\n                    local_94[uVar4] = uVar2;\n                  }\n                  else {\n                    local_94[local_3a] = auStack_70[local_3a + 3];\n                  }\n                }\n              }\n              FUN_08004bf4(local_24 & 0xff,local_94);\n              if (local_24 == DAT_20000e8c) {\n                DAT_20000e90 = local_94[0];\n                DAT_20000e94 = local_94[1];\n                DAT_20000e98 = local_94[2];\n              }\n            }\n          }\n          else {\n            DAT_20000e70 = '\\x03';\n          }\n          local_27 = 0;\n          break;\n        case '\\x03':\n        case '\\x05':\n          if (local_27 != 0) {\n            for (local_3b = 0; local_3b < 3; local_3b = local_3b + 1) {\n              if (((int)(uint)local_27 >> local_3b & 1U) == 0) {\n                auStack_70[local_3b + 3] = *(undefined4 *)(&DAT_20000e74 + (local_3b + 2) * 4);\n              }\n              else if (DAT_20000e74 == '\\0') {\n                uVar4 = (uint)local_3b;\n                uVar2 = FUN_08008cdc(auStack_70[local_3b + 3],\n                                     *(undefined4 *)(&DAT_20000e74 + (local_3b + 2) * 4));\n                auStack_70[uVar4 + 3] = uVar2;\n              }\n              else {\n                uVar5 = auStack_70[local_3b + 3];\n                uVar2 = FUN_08008cdc(*(undefined4 *)(&DAT_20000e70 + (local_3b + 8) * 4),\n                                     *(undefined4 *)(&DAT_20000e74 + (local_3b + 10) * 4));\n                uVar4 = (uint)local_3b;\n                uVar2 = FUN_08008cdc(uVar5,uVar2);\n                auStack_70[uVar4 + 3] = uVar2;\n              }\n            }\n            FUN_08001e98(auStack_70[3],auStack_70[4],auStack_70[5],DAT_20000ed0,0);\n          }\n          if (local_2e == '\\x05') {\n            iVar1 = FUN_08004d7c(7,local_94 + 3);\n            if (iVar1 == 0) {\n              return '\\n';\n            }\n          }\n          else {\n            iVar1 = FUN_08004d7c(6,local_94 + 3);\n            if (iVar1 == 0) {\n              return '\\n';\n            }\n          }\n          FUN_08001e98(local_94[3],local_84,local_80,DAT_20000ed0,0);\n          DAT_20000e7c = local_94[3];\n          DAT_20000e80 = local_84;\n          DAT_20000e84 = local_80;\n          local_27 = 0;\n          break;\n        case '\\x04':\n        case '\\x06':\n          if (local_2e == '\\x06') {\n            FUN_08004bf4(7,&DAT_20000e7c);\n          }\n          else {\n            FUN_08004bf4(6,&DAT_20000e7c);\n          }\n          break;\n        case '\\a':\n          if (local_27 == 0) {\n            DAT_20000e70 = '\\x06';\n          }\n          else {\n            for (local_3c = 0; local_3c < 3; local_3c = local_3c + 1) {\n              if (((int)(uint)local_27 >> local_3c & 1U) != 0) {\n                uVar2 = FUN_08008cd8(*(undefined4 *)(&DAT_20000e74 + (local_3c + 2) * 4),\n                                     *(undefined4 *)(&DAT_20000e70 + (local_3c + 8) * 4));\n                uVar4 = (uint)local_3c;\n                uVar2 = FUN_08008cd8(uVar2,auStack_70[local_3c + 3]);\n                *(undefined4 *)(&DAT_20000e74 + (uVar4 + 10) * 4) = uVar2;\n              }\n            }\n          }\n          local_27 = 0;\n          break;\n        case '\\b':\n          FUN_0800b430(&DAT_20000e9c,0,0xc);\n        }\n        if (((local_26 & 4) != 0) || (local_27 != 0)) {\n          if ((DAT_20000e72 != '\\0') &&\n             ((iVar1 = FUN_08009228(local_2c,0), iVar1 != 0 && (DAT_20000e71 != '\\x04')))) {\n            DAT_20000e70 = '\\x06';\n          }\n          if (((local_2d != '\\0') && (DAT_20000e71 != '\\0')) && (DAT_20000e71 != '\\x01')) {\n            DAT_20000e70 = '\\x06';\n          }\n          if (DAT_20000e70 != '\\0') {\n            return DAT_20000e70;\n          }\n          for (local_3d = 0; local_3d < 3; local_3d = local_3d + 1) {\n            if (((int)(uint)local_27 >> local_3d & 1U) == 0) {\n              auStack_70[local_3d + 3] = *(undefined4 *)(&DAT_20000e74 + (local_3d + 2) * 4);\n            }\n            else if (local_2d == '\\0') {\n              if (DAT_20000e74 == '\\0') {\n                uVar4 = (uint)local_3d;\n                uVar2 = FUN_08008cdc(auStack_70[local_3d + 3],\n                                     *(undefined4 *)(&DAT_20000e74 + (local_3d + 2) * 4));\n                auStack_70[uVar4 + 3] = uVar2;\n              }\n              else {\n                uVar5 = auStack_70[local_3d + 3];\n                uVar2 = FUN_08008cdc(*(undefined4 *)(&DAT_20000e70 + (local_3d + 8) * 4),\n                                     *(undefined4 *)(&DAT_20000e74 + (local_3d + 10) * 4));\n                uVar4 = (uint)local_3d;\n                uVar2 = FUN_08008cdc(uVar5,uVar2);\n                auStack_70[uVar4 + 3] = uVar2;\n              }\n            }\n          }\n          switch(DAT_20000e71) {\n          case '\\0':\n            if (local_27 == 0) {\n              DAT_20000e70 = '\\x06';\n            }\n            else {\n              FUN_08001e98(auStack_70[3],auStack_70[4],auStack_70[5],DAT_20000ed0,0);\n            }\n            break;\n          case '\\x01':\n            if (local_27 == 0) {\n              DAT_20000e70 = '\\x06';\n            }\n            else {\n              uVar2 = local_2c;\n              if (DAT_20000e72 == '\\0') {\n                uVar2 = DAT_20000e78;\n              }\n              FUN_08001e98(auStack_70[3],auStack_70[4],auStack_70[5],uVar2,DAT_20000e72);\n            }\n            break;\n          case '\\x02':\n          case '\\x03':\n            local_27 = local_27 & ~(byte)(1 << DAT_20000e8b);\n            if ((local_27 == 0) ||\n               (((iVar1 = FUN_08009214(local_38,0), iVar1 != 0 &&\n                 (iVar1 = FUN_08009214(auStack_70[DAT_20000e89],0), iVar1 != 0)) &&\n                (iVar1 = FUN_08009214(auStack_70[DAT_20000e8a],0), iVar1 != 0)))) {\n              DAT_20000e70 = '\\x06';\n            }\n            else {\n              iVar1 = FUN_08009214(local_38,0);\n              if (iVar1 == 0) {\n                local_4c = FUN_08008cd8(auStack_70[DAT_20000e89 + 3],\n                                        *(undefined4 *)(&DAT_20000e74 + (DAT_20000e89 + 2) * 4));\n                local_50 = FUN_08008cd8(auStack_70[DAT_20000e8a + 3],\n                                        *(undefined4 *)(&DAT_20000e74 + (DAT_20000e8a + 2) * 4));\n                FUN_0800b430(auStack_70,0,0xc);\n                uVar2 = FUN_08008eec(local_38,0x40800000);\n                uVar2 = FUN_08008eec(uVar2,local_38);\n                uVar5 = FUN_08008eec(local_4c,local_4c);\n                uVar2 = FUN_08008cd8(uVar2,uVar5);\n                uVar5 = FUN_08008eec(local_50,local_50);\n                local_44 = FUN_08008cd8(uVar2,uVar5);\n                iVar1 = FUN_08009228(local_44,0);\n                if (iVar1 != 0) {\n                  DAT_20000e70 = 4;\n                  return '\\x04';\n                }\n                uVar6 = FUN_08008590(local_44);\n                uVar6 = FUN_080098d0((int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n                uVar7 = FUN_08008590(local_4c);\n                uVar8 = FUN_08008590(local_50);\n                uVar7 = FUN_0800981c((int)uVar7,(int)((ulonglong)uVar7 >> 0x20),(int)uVar8,\n                                     (int)((ulonglong)uVar8 >> 0x20));\n                uVar6 = FUN_08008894((int)uVar6,(uint)((ulonglong)uVar6 >> 0x20) ^ 0x80000000,\n                                     (int)uVar7,(int)((ulonglong)uVar7 >> 0x20));\n                local_44 = FUN_08008c30((int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n                if (DAT_20000e71 == '\\x03') {\n                  local_44 = local_44 ^ 0x80000000;\n                }\n                iVar1 = FUN_08009228(local_38,0);\n                if (iVar1 != 0) {\n                  local_44 = local_44 ^ 0x80000000;\n                  local_38 = local_38 ^ 0x80000000;\n                }\n                uVar2 = FUN_08008eec(local_50,local_44);\n                uVar2 = FUN_08008cd8(local_4c,uVar2);\n                uVar4 = (uint)DAT_20000e89;\n                uVar2 = FUN_08008eec(uVar2,0x3f000000);\n                auStack_70[uVar4] = uVar2;\n                uVar2 = FUN_08008eec(local_4c,local_44);\n                uVar2 = FUN_08008cdc(uVar2,local_50);\n                uVar4 = (uint)DAT_20000e8a;\n                uVar2 = FUN_08008eec(uVar2,0x3f000000);\n                auStack_70[uVar4] = uVar2;\n              }\n              else {\n                uVar6 = FUN_08008590(auStack_70[DAT_20000e89]);\n                uVar7 = FUN_08008590(auStack_70[DAT_20000e8a]);\n                uVar6 = FUN_0800981c((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),(int)uVar7,\n                                     (int)((ulonglong)uVar7 >> 0x20));\n                local_38 = FUN_08008c30((int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n              }\n              local_45 = DAT_20000e71 == '\\x02';\n              uVar2 = local_2c;\n              if (DAT_20000e72 == '\\0') {\n                uVar2 = DAT_20000e78;\n              }\n              FUN_08001f00(&DAT_20000e7c,auStack_70 + 3,auStack_70,DAT_20000e89,DAT_20000e8a,\n                           DAT_20000e8b,uVar2,DAT_20000e72,local_38,local_45);\n            }\n            break;\n          case '\\x04':\n            if (local_27 != 0) {\n              DAT_20000e70 = '\\x06';\n            }\n          }\n          if (DAT_20000e70 != '\\0') {\n            return DAT_20000e70;\n          }\n          DAT_20000e7c = auStack_70[3];\n          DAT_20000e80 = auStack_70[4];\n          DAT_20000e84 = auStack_70[5];\n        }\n        cVar3 = DAT_20000e70;\n        if (DAT_20000e75 != '\\0') {\n          FUN_08002fd4();\n          DAT_20000eb8 = 0;\n          if (DAT_20000e75 == '\\x02') {\n            FUN_080025e8();\n            cVar3 = DAT_20000e70;\n          }\n          else {\n            DAT_20000e75 = '\\0';\n            cVar3 = DAT_20000e70;\n          }\n        }\n      }\n    }\n  }\n  return cVar3;\n}\n\n",
            "renaming": {
                "FUN_080005b4": "FUNC_080005b4"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080039bc"
            ],
            "called": [
                "FUN_08000478",
                "FUN_08009214",
                "FUN_0800923c",
                "FUN_08001f00",
                "FUN_08008bf0",
                "FUN_08004bf4",
                "FUN_08008590",
                "FUN_08009228",
                "FUN_0800184c",
                "FUN_08000220",
                "FUN_08008cdc",
                "FUN_08008cd8",
                "FUN_0800525c",
                "FUN_08009798",
                "FUN_080025e8",
                "FUN_08008ba0",
                "FUN_08002408",
                "FUN_08008894",
                "FUN_08002fd4",
                "FUN_0800b430",
                "FUN_08001e98",
                "FUN_080098d0",
                "FUN_08004d7c",
                "FUN_0800056c",
                "FUN_0800981c",
                "FUN_08008eec",
                "FUN_08008c30"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800184c": {
            "entrypoint": "0x0800184c",
            "current_name": "validate_and_increment_0800184c",
            "code": "\nundefined4 validateAndIncrement_0800184c(byte *output,undefined4 constant,int baseAddress,byte *currentIndex)\n\n{\n  int result;\n  undefined4 success;\n  \n  if (*(char *)(baseAddress + (uint)*currentIndex) == '\\0') {\n    success = 0;\n  }\n  else {\n    *output = *(byte *)(baseAddress + (uint)*currentIndex);\n    if ((*output < 0x41) || (0x5a < *output)) {\n      DAT_20000e70 = 2;\n      success = 0;\n    }\n    else {\n      *currentIndex = *currentIndex + 1;\n      result = FUN_08002638(baseAddress,currentIndex,constant);\n      if (result == 0) {\n        DAT_20000e70 = 1;\n        success = 0;\n      }\n      else {\n        success = 1;\n      }\n    }\n  }\n  return success;\n}\n\n",
            "renaming": {
                "FUN_0800184c": "validate_and_increment_0800184c",
                "param_1": "output",
                "param_2": "constant",
                "param_3": "baseAddress",
                "param_4": "currentIndex",
                "iVar1": "result",
                "uVar2": "success"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08002638"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080018cc": {
            "entrypoint": "0x080018cc",
            "current_name": "update_flags_080018cc",
            "code": "\n\n\nvoid updateFlags_080018cc(uint newValue)\n\n{\n  _DAT_40021014 = newValue | _DAT_40021014 & 0maskfffffaaf;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080018cc": "update_flags_080018cc",
                "param_1": "newValue",
                "x": "mask"
            },
            "calling": [
                "FUN_08001994"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080018fc": {
            "entrypoint": "0x080018fc",
            "current_name": "update_settings_080018fc",
            "code": "\n\n\nvoid updateSettings_080018fc(uint newSettings)\n\n{\n  _DAT_40021014 = newSettings | _DAT_40021014 & 0xfffff55f;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080018fc": "update_settings_080018fc",
                "param_1": "newSettings"
            },
            "calling": [
                "FUN_08001994"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800192c": {
            "entrypoint": "0x0800192c",
            "current_name": "determine_flags_0800192c",
            "code": "\nvoid determineFlags_0800192c(void)\n\n{\n  DAT_20000e4c = (uint)((DAT_20000ee4 & 8) != 0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800192c": "determine_flags_0800192c"
            },
            "calling": [
                "FUN_08004e30",
                "FUN_08001ddc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800195c": {
            "entrypoint": "0x0800195c",
            "current_name": "initialize_and_set_flag_0800195c",
            "code": "\nvoid initializeAndSetFlag_0800195c(void)\n\n{\n  if ((DAT_20000ea9 != '\\x06') && ((DAT_20000eaa & 0x20) == 0)) {\n    FUN_080025e8();\n    DAT_20000eaa = DAT_20000eaa | 0x40;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800195c": "initialize_and_set_flag_0800195c"
            },
            "calling": [
                "FUN_080074c8"
            ],
            "called": [
                "FUN_080025e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001994": {
            "entrypoint": "0x08001994",
            "current_name": "process_data_08001994",
            "code": "\nvoid processData_08001994(byte flags,char condition1,char condition2,undefined4 data)\n\n{\n  undefined4 result1;\n  uint maxValue;\n  undefined8 result2;\n  undefined8 result3;\n  byte tempByte;\n  uint value1;\n  uint value2;\n  uint value3;\n  ushort constant1;\n  uint value4;\n  int value5;\n  undefined4 result4;\n  uint result5;\n  uint result6;\n  ushort constant2;\n  uint result7;\n  uint result8;\n  int result9;\n  int result10;\n  int result11;\n  int result12;\n  ushort constant3;\n  uint result13;\n  char flagCounter;\n  \n  flagCounter = '\\0';\n  FUN_0800b430(&value1,0,0xc);\n  if ((flags & 1) != 0) {\n    flagCounter = flagCounter + '\\x01';\n    result2 = FUN_08008590(DAT_20000ebc);\n    value1 = FUN_080095b8((int)result2,(int)((ulonglong)result2 >> 0x20));\n  }\n  if ((flags & 2) != 0) {\n    flagCounter = flagCounter + '\\x01';\n    result2 = FUN_08008590(DAT_20000ec0);\n    value2 = FUN_080095b8((int)result2,(int)((ulonglong)result2 >> 0x20));\n  }\n  if ((flags & 4) != 0) {\n    flagCounter = flagCounter + '\\x01';\n    result2 = FUN_08008590(DAT_20000ec4);\n    value3 = FUN_080095b8((int)result2,(int)((ulonglong)result2 >> 0x20));\n  }\n  maxValue = value3;\n  if (value3 < value2) {\n    maxValue = value2;\n  }\n  result5 = value1;\n  if (value1 < maxValue) {\n    result5 = maxValue;\n  }\n  result2 = FUN_0800854c(result5);\n  result3 = FUN_0800854c(flagCounter);\n  result3 = FUN_080098d0((int)result3,(int)((ulonglong)result3 >> 0x20));\n  result2 = FUN_08008894((int)result2,(int)((ulonglong)result2 >> 0x20),(int)result3,\n                       (int)((ulonglong)result3 >> 0x20));\n  result4 = FUN_08008c30((int)result2,(int)((ulonglong)result2 >> 0x20));\n  result1 = FUN_08008eec(DAT_20000edc,result4);\n  result1 = FUN_08009054(result1,0x453b8000);\n  result2 = FUN_08008590(result1);\n  result2 = FUN_08009318((int)result2,(int)((ulonglong)result2 >> 0x20));\n  value5 = FUN_08008bf0((int)result2,(int)((ulonglong)result2 >> 0x20));\n  result2 = FUN_0800854c(flagCounter);\n  result2 = FUN_080098d0((int)result2,(int)((ulonglong)result2 >> 0x20));\n  result3 = FUN_08008590(data);\n  result2 = FUN_08008640((int)result2,(int)((ulonglong)result2 >> 0x20),(int)result3,\n                       (int)((ulonglong)result3 >> 0x20));\n  result1 = FUN_08008c30((int)result2,(int)((ulonglong)result2 >> 0x20));\n  result1 = FUN_08008eec(result4,result1);\n  result1 = FUN_08009054(0x4c64e1c0,result1);\n  result2 = FUN_08008590(result1);\n  value4 = FUN_080095b8((int)result2,(int)((ulonglong)result2 >> 0x20));\n  result13 = 75000;\n  if (value4 < 75000) {\n    result13 = value4;\n  }\n  constant1 = DAT_20000ed4;\n  constant3 = DAT_20000ed6 ^ DAT_20000ee6 & 0xaa0;\n  if (condition1 == '\\0') {\n    constant3 = constant3 ^ 0xaa0;\n  }\n  FUN_080018fc(constant3);\n  FUN_080018cc(constant1);\n  result10 = -(result5 >> 1);\n  result9 = result13 - DAT_20000ec9;\n  result8 = 0;\n  result7 = 10000;\n  tempByte = flags;\n  result11 = result10;\n  result12 = result10;\n  while( true ) {\n    constant2 = constant1;\n    result6 = FUN_080078f4();\n    if (condition2 == '\\0') {\n      result6 = result6 ^ 0x1e;\n    }\n    if (((tempByte & 1) != 0) && (result12 = result12 + value1, 0 < result12)) {\n      if ((result6 & 0x10) == 0) {\n        tempByte = tempByte & 0xfe;\n      }\n      else {\n        constant2 = constant2 ^ 0x10;\n      }\n      result12 = result12 - result5;\n    }\n    if (((tempByte & 2) != 0) && (result11 = result11 + value2, 0 < result11)) {\n      if ((result6 & 8) == 0) {\n        tempByte = tempByte & 0xfd;\n      }\n      else {\n        constant2 = constant2 ^ 0x440;\n      }\n      result11 = result11 - result5;\n    }\n    if (((tempByte & 4) != 0) && (result10 = result10 + value3, 0 < result10)) {\n      if ((result6 & 4) == 0) {\n        tempByte = tempByte & 0xfb;\n      }\n      else {\n        constant2 = constant2 ^ 0x100;\n      }\n      result10 = result10 - result5;\n    }\n    if ((tempByte == 0) || ((DAT_20000eaa & 0x10) != 0)) break;\n    FUN_080018cc(constant2);\n    FUNC_08002828(DAT_20000ec9);\n    FUN_080018cc(constant1);\n    FUNC_08002828(result9);\n    if ((value4 < result13) && (result7 = result13 + result7, 20000 < result7)) {\n      result7 = result7 - 20000;\n      result8 = value5 + result8;\n      result13 = 60000000 / result8;\n      if (result13 < value4) {\n        result13 = value4;\n      }\n      result9 = result13 - DAT_20000ec9;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001994": "process_data_08001994",
                "param_1": "flags",
                "param_2": "condition1",
                "param_3": "condition2",
                "param_4": "data",
                "uVar1": "result1",
                "uVar2": "maxValue",
                "uVar3": "result2",
                "uVar4": "result3",
                "local_61": "tempByte",
                "local_5c": "value1",
                "local_58": "value2",
                "local_54": "value3",
                "local_4e": "constant1",
                "local_4c": "value4",
                "local_48": "value5",
                "local_44": "result4",
                "local_40": "result5",
                "local_3c": "result6",
                "local_36": "constant2",
                "local_34": "result7",
                "local_30": "result8",
                "local_2c": "result9",
                "local_28": "result10",
                "local_24": "result11",
                "local_20": "result12",
                "local_1a": "constant3",
                "local_18": "result13",
                "local_11": "flagCounter"
            },
            "calling": [
                "FUN_08001d4c"
            ],
            "called": [
                "FUN_080095b8",
                "FUN_08009054",
                "FUN_08009318",
                "FUN_0800854c",
                "FUN_080078f4",
                "FUN_08008894",
                "FUN_08008640",
                "FUN_08008bf0",
                "FUN_080018cc",
                "FUN_0800b430",
                "FUN_08008590",
                "FUN_080098d0",
                "FUN_080018fc",
                "FUN_08008eec",
                "FUN_08008c30",
                "FUN_08002828"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001d4c": {
            "entrypoint": "0x08001d4c",
            "current_name": "initialize_process_08001d4c",
            "code": "\nvoid initializeProcess_08001d4c(void)\n\n{\n  char temp;\n  char count;\n  \n  FUN_08005790();\n  FUN_08001994(4,1,0,DAT_20000eec);\n  FUN_08001994(3,1,0,DAT_20000eec);\n  FUNC_08002814(DAT_20000ef0);\n  count = '\\x02';\n  while( true ) {\n    temp = count + -1;\n    if (count == '\\0') break;\n    FUN_08001994(7,0,1,DAT_20000ee8);\n    FUNC_08002814(DAT_20000ef0);\n    count = temp;\n    if ('\\0' < temp) {\n      FUN_08001994(7,1,0,DAT_20000ee8);\n      FUNC_08002814(DAT_20000ef0);\n    }\n  }\n  FUN_080057e4();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001d4c": "initialize_process_08001d4c",
                "local_9": "count",
                "cVar1": "temp"
            },
            "calling": [
                "FUN_080024c4"
            ],
            "called": [
                "FUN_08002814",
                "FUN_08005790",
                "FUN_080057e4",
                "FUN_08001994"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001ddc": {
            "entrypoint": "0x08001ddc",
            "current_name": "initialize_application_08001ddc",
            "code": "\nvoid initialize_application_08001ddc(void)\n\n{\n  FUNC_08008244();\n  FUN_080051b4();\n  FUN_0800583c();\n  FUN_0800b430(&DAT_20000ea8,0,0x14);\n  DAT_20000ea8 = '\\x01';\n  DAT_20000ea9 = '\\x01';\n  do {\n    if (DAT_20000ea8 != '\\0') {\n      FUNC_080082ba();\n      FUN_08002f24();\n      FUN_080004ac();\n      FUN_080039a0();\n      FUN_08005238();\n      FUN_080001f8();\n      FUN_0800192c();\n      FUN_08005814();\n      FUN_0800283a();\n      DAT_20000ea8 = '\\0';\n      DAT_20000eaa = 0;\n      if ((DAT_20000ee4 & 2) != 0) {\n        DAT_20000eb8 = 1;\n      }\n      if ((DAT_20000ea9 == '\\x01') && ((DAT_20000ee4 & 0x10) != 0)) {\n        DAT_20000ea9 = '\\x06';\n      }\n      if (DAT_20000ea9 == '\\x06') {\n        FUN_080041a0(2);\n      }\n      else {\n        DAT_20000ea9 = '\\0';\n        FUN_080039bc();\n      }\n    }\n    FUN_08003a74();\n    FUN_08003f34();\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08001ddc": "initialize_application_08001ddc"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_08005814",
                "FUN_0800583c",
                "FUN_08005238",
                "FUN_08008244",
                "FUN_08003f34",
                "FUN_080039bc",
                "FUN_0800283a",
                "FUN_080082ba",
                "FUN_080051b4",
                "FUN_0800192c",
                "FUN_0800b430",
                "FUN_080039a0",
                "FUN_08003a74",
                "FUN_080004ac",
                "FUN_08002f24",
                "FUN_080001f8",
                "FUN_080041a0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001e98": {
            "entrypoint": "0x08001e98",
            "current_name": "check_and_process_data_08001e98",
            "code": "\nvoid checkAndProcessData_08001e98(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4,\n                 undefined arg5)\n\n{\n  int returnValue;\n  \n  if (DAT_20000ea9 != '\\a') {\n    do {\n      FUN_08003a74();\n      if (DAT_20000ea8 != '\\0') {\n        return;\n      }\n      returnValue = FUN_08002fac();\n    } while (returnValue != 0);\n    FUN_08003004(arg1,arg2,arg3,arg4,arg5);\n    if (DAT_20000ea9 == '\\0') {\n      DAT_20000ea9 = '\\x02';\n    }\n    if (DAT_20000eb8 != '\\0') {\n      FUN_0800585c();\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001e98": "check_and_process_data_08001e98",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "param_5": "arg5",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_080005b4",
                "FUN_08001f00",
                "FUN_080024c4"
            ],
            "called": [
                "FUN_0800585c",
                "FUN_08003004",
                "FUN_08002fac",
                "FUN_08003a74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001f00": {
            "entrypoint": "0x08001f00",
            "current_name": "calculate_checksum_08001f00",
            "code": "\nvoid calculateChecksum_08001f00(int input1,undefined4 *outputArray,int input2,byte byte1,byte byte2,byte byte3\n                 ,undefined4 input3,char flag1,undefined4 input4,char flag2)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  int comparisonResult;\n  uint tempResult;\n  undefined8 tempResult1;\n  undefined8 tempResult2;\n  uint checksumArray [4];\n  undefined4 tempVar1;\n  undefined4 tempVar2;\n  undefined4 tempVar3;\n  undefined4 tempVar4;\n  undefined4 tempVar5;\n  undefined4 tempVar6;\n  ushort loopCount;\n  undefined4 tempVar7;\n  undefined4 tempVar8;\n  undefined4 tempVar9;\n  uint tempVar10;\n  undefined4 tempVar11;\n  undefined4 tempVar12;\n  char loopFlag;\n  ushort incrementVar;\n  undefined4 sumResult;\n  uint tempVar13;\n  uint tempVar14;\n  \n  tempVar12 = FUN_08008cdc(*(undefined4 *)((uint)byte1 * 4 + input1),\n                          *(undefined4 *)((uint)byte1 * 4 + input2));\n  tempVar11 = FUN_08008cdc(*(undefined4 *)((uint)byte2 * 4 + input1),\n                          *(undefined4 *)((uint)byte2 * 4 + input2));\n  tempVar10 = FUN_08008cd8(outputArray[byte3],*(undefined4 *)((uint)byte3 * 4 + input1));\n  tempVar14 = *(uint *)((uint)byte1 * 4 + input2) ^ 0x80000000;\n  tempVar13 = *(uint *)((uint)byte2 * 4 + input2) ^ 0x80000000;\n  tempVar9 = FUN_08008cd8(outputArray[byte1],tempVar12);\n  tempVar8 = FUN_08008cd8(outputArray[byte2],tempVar11);\n  result1 = FUN_08008eec(tempVar14,tempVar8);\n  result2 = FUN_08008eec(tempVar13,tempVar9);\n  result1 = FUN_08008cd8(result1,result2);\n  tempResult1 = FUN_08008590(result1);\n  result1 = FUN_08008eec(tempVar14,tempVar9);\n  result2 = FUN_08008eec(tempVar13,tempVar8);\n  result1 = FUN_08008cdc(result1,result2);\n  tempResult2 = FUN_08008590(result1);\n  tempResult1 = thunk_FUN_08009990((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),(int)tempResult2,\n                             (int)((ulonglong)tempResult2 >> 0x20));\n  sumResult = FUN_08008c30((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20));\n  if (flag2 == '\\0') {\n    comparisonResult = FUN_0800923c(sumResult,0);\n    if (comparisonResult != 0) {\n      tempResult1 = FUN_08008590(sumResult);\n      tempResult1 = FUN_080082d4((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),0x54442d18,0x401921fb);\n      sumResult = FUN_08008c30((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20));\n    }\n  }\n  else {\n    comparisonResult = FUN_08009250(sumResult,0);\n    if (comparisonResult != 0) {\n      tempResult1 = FUN_08008590(sumResult);\n      tempResult1 = FUN_080082d0((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),0x54442d18,0x401921fb);\n      sumResult = FUN_08008c30((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20));\n    }\n  }\n  result1 = FUN_08008eec(sumResult,input4);\n  tempResult1 = FUN_08008590(result1);\n  tempResult2 = FUN_08008590(tempVar10 & 0x7fffffff);\n  tempResult1 = FUN_0800981c((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),(int)tempResult2,\n                       (int)((ulonglong)tempResult2 >> 0x20));\n  tempVar7 = FUN_08008c30((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20));\n  comparisonResult = FUN_08009214(tempVar7,0);\n  if (comparisonResult == 0) {\n    result1 = FUN_08009054(tempVar7,DAT_20000ed8);\n    tempResult1 = FUN_08008590(result1);\n    tempResult1 = FUN_080094c0((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20));\n    loopCount = FUN_08008bf0((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20));\n    if (flag1 != '\\0') {\n      result1 = FUN_08008e44(loopCount);\n      input3 = FUN_08008eec(input3,result1);\n    }\n    result1 = FUN_08008e44(loopCount);\n    tempVar6 = FUN_08009054(sumResult,result1);\n    result1 = FUN_08008e44(loopCount);\n    tempVar5 = FUN_08009054(tempVar10,result1);\n    tempResult1 = FUN_08008590(tempVar6);\n    tempResult1 = FUN_08008640((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),0,0x3fe00000);\n    tempResult2 = FUN_08008590(tempVar6);\n    tempResult1 = FUN_08008640((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),(int)tempResult2,\n                         (int)((ulonglong)tempResult2 >> 0x20));\n    tempResult1 = FUN_080082d0(0,0x3ff00000,(int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20));\n    tempVar4 = FUN_08008c30((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20));\n    tempVar3 = tempVar6;\n    loopFlag = '\\0';\n    checksumArray[byte3] = *(uint *)(input1 + (uint)byte3 * 4);\n    for (incrementVar = 1; incrementVar < loopCount; incrementVar = incrementVar + 1) {\n      if ((int)loopFlag < (int)(uint)DAT_20000efa) {\n        result1 = FUN_08008eec(tempVar14,tempVar3);\n        result2 = FUN_08008eec(tempVar13,tempVar4);\n        checksumArray[3] = FUN_08008cdc(result1,result2);\n        result1 = FUN_08008eec(tempVar14,tempVar4);\n        result2 = FUN_08008eec(tempVar13,tempVar3);\n        tempVar14 = FUN_08008cd8(result1,result2);\n        tempVar13 = checksumArray[3];\n        loopFlag = loopFlag + '\\x01';\n      }\n      else {\n        result1 = FUN_08008e44(incrementVar);\n        result1 = FUN_08008eec(result1,tempVar6);\n        tempResult1 = FUN_08008590(result1);\n        tempResult1 = FUN_08009410((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20));\n        tempVar2 = FUN_08008c30((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20));\n        result1 = FUN_08008e44(incrementVar);\n        result1 = FUN_08008eec(result1,tempVar6);\n        tempResult1 = FUN_08008590(result1);\n        tempResult1 = FUN_080096e8((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20));\n        tempVar1 = FUN_08008c30((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20));\n        result1 = FUN_08008eec(*(uint *)((uint)byte1 * 4 + input2) ^ 0x80000000,tempVar2);\n        result2 = FUN_08008eec(*(undefined4 *)((uint)byte2 * 4 + input2),tempVar1);\n        tempVar14 = FUN_08008cdc(result1,result2);\n        result1 = FUN_08008eec(*(uint *)((uint)byte1 * 4 + input2) ^ 0x80000000,tempVar1);\n        result2 = FUN_08008eec(*(undefined4 *)((uint)byte2 * 4 + input2),tempVar2);\n        tempVar13 = FUN_08008cd8(result1,result2);\n        loopFlag = '\\0';\n      }\n      tempResult = FUN_08008cdc(tempVar12,tempVar14);\n      checksumArray[byte1] = tempResult;\n      tempResult = FUN_08008cdc(tempVar11,tempVar13);\n      checksumArray[byte2] = tempResult;\n      tempResult = FUN_08008cdc(checksumArray[byte3],tempVar5);\n      checksumArray[byte3] = tempResult;\n      FUN_08001e98(checksumArray[0],checksumArray[1],checksumArray[2],input3,flag1);\n      if (DAT_20000ea8 != '\\0') {\n        return;\n      }\n    }\n    FUN_08001e98(*outputArray,outputArray[1],outputArray[2],input3,flag1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001f00": "calculate_checksum_08001f00",
                "param_1": "input1",
                "param_2": "outputArray",
                "param_3": "input2",
                "param_4": "byte1",
                "param_5": "byte2",
                "param_6": "byte3",
                "param_7": "input3",
                "param_8": "flag1",
                "param_9": "input4",
                "param_10": "flag2",
                "uVar1": "result1",
                "uVar2": "result2",
                "iVar3": "comparisonResult",
                "uVar4": "tempResult",
                "uVar5": "tempResult1",
                "uVar6": "tempResult2",
                "local_6c": "checksumArray",
                "local_5c": "tempVar1",
                "local_58": "tempVar2",
                "local_54": "tempVar3",
                "local_50": "tempVar4",
                "local_4c": "tempVar5",
                "local_48": "tempVar6",
                "local_42": "loopCount",
                "local_40": "tempVar7",
                "local_3c": "tempVar8",
                "local_38": "tempVar9",
                "local_34": "tempVar10",
                "local_30": "tempVar11",
                "local_2c": "tempVar12",
                "local_27": "loopFlag",
                "local_26": "incrementVar",
                "local_24": "sumResult",
                "local_20": "tempVar13",
                "local_1c": "tempVar14"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08008cd8",
                "FUN_08008e44",
                "FUN_080096e8",
                "FUN_08009054",
                "FUN_08009214",
                "FUN_0800923c",
                "FUN_08008640",
                "FUN_08008bf0",
                "FUN_08008590",
                "FUN_080082d0",
                "FUN_080094c0",
                "FUN_08001e98",
                "FUN_08009410",
                "FUN_0800981c",
                "FUN_08008eec",
                "thunk_FUN_08009990",
                "FUN_08009250",
                "FUN_08008cdc",
                "FUN_08008c30",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002408": {
            "entrypoint": "0x08002408",
            "current_name": "process_data_08002408",
            "code": "\nvoid processData_08002408(undefined4 input)\n\n{\n  undefined2 result1;\n  undefined4 result2;\n  undefined4 result3;\n  undefined8 result4;\n  ushort counter;\n  \n  result2 = FUN_08008eec(input,0x41a00000);\n  result4 = FUN_08008590(result2);\n  result4 = FUN_080094c0((int)result4,(int)((ulonglong)result4 >> 0x20));\n  counter = FUN_08008bf0((int)result4,(int)((ulonglong)result4 >> 0x20));\n  FUN_08002fd4();\n  result2 = FUN_08008eec(input,0x447a0000);\n  result3 = FUN_08008e44((uint)counter * 0x32);\n  result2 = FUN_08008cd8(result2,result3);\n  result4 = FUN_08008590(result2);\n  result4 = FUN_080094c0((int)result4,(int)((ulonglong)result4 >> 0x20));\n  result1 = FUN_08008bf0((int)result4,(int)((ulonglong)result4 >> 0x20));\n  FUNC_08002814(result1);\n  while ((counter != 0 && (FUN_08003a74(), DAT_20000ea8 == '\\0'))) {\n    FUN_080002a0(0x32);\n    counter = counter - 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002408": "process_data_08002408",
                "param_1": "input",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "result3",
                "uVar4": "result4",
                "local_12": "counter"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08008e44",
                "FUN_080094c0",
                "FUN_08008cd8",
                "FUN_080002a0",
                "FUN_08003a74",
                "FUN_08002814",
                "FUN_08008eec",
                "FUN_08008bf0",
                "FUN_08002fd4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080024c4": {
            "entrypoint": "0x080024c4",
            "current_name": "initialize_data_080024c4",
            "code": "\nvoid initializeData_080024c4(void)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  char local_13;\n  char local_12;\n  char local_11;\n  \n  DAT_20000ea9 = 5;\n  DAT_20000e4c = 0;\n  FUN_08001d4c();\n  FUN_08003a74();\n  if (DAT_20000ea8 == '\\0') {\n    FUN_0800b430(&DAT_20000eac,0,0xc);\n    FUN_0800283a();\n    DAT_20000ea9 = 0;\n    if ((DAT_20000ee6 & 0x20) == 0) {\n      local_11 = -1;\n    }\n    else {\n      local_11 = '\\x01';\n    }\n    if ((DAT_20000ee6 & 0x80) == 0) {\n      local_12 = -1;\n    }\n    else {\n      local_12 = '\\x01';\n    }\n    if ((DAT_20000ee6 & 0x200) == 0) {\n      local_13 = -1;\n    }\n    else {\n      local_13 = '\\x01';\n    }\n    uVar1 = FUN_08008e44((int)local_11);\n    uVar1 = FUN_08008eec(uVar1,DAT_20000ef4);\n    uVar2 = FUN_08008e44((int)local_12);\n    uVar2 = FUN_08008eec(uVar2,DAT_20000ef4);\n    uVar3 = FUN_08008e44((int)local_13);\n    uVar3 = FUN_08008eec(uVar3,DAT_20000ef4);\n    FUN_08001e98(uVar1,uVar2,uVar3,DAT_20000eec,0);\n    FUN_0800585c();\n    FUN_08002fd4();\n    FUN_0800283a();\n    if ((DAT_20000ee4 & 8) != 0) {\n      DAT_20000e4c = 1;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080024c4": "initialize_data_080024c4"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_0800b430",
                "FUN_0800585c",
                "FUN_08008e44",
                "FUN_08001e98",
                "FUN_08003a74",
                "FUN_08008eec",
                "FUN_08001d4c",
                "FUN_0800283a",
                "FUN_08002fd4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080025e8": {
            "entrypoint": "0x080025e8",
            "current_name": "update_flag_if_not_set_080025e8",
            "code": "\nvoid updateFlagIfNotSet_080025e8(void)\n\n{\n  if ((DAT_20000eaa & 0x10) == 0) {\n    DAT_20000eaa = DAT_20000eaa | 0x10;\n    FUN_08005250();\n    FUN_08000210();\n    if (DAT_20000ea9 - 3 < 3) {\n      DAT_20000eaa = DAT_20000eaa | 0x20;\n      FUN_080057e4();\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080025e8": "update_flag_if_not_set_080025e8"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080005b4",
                "FUN_0800195c",
                "FUN_08005900",
                "FUN_08003a18"
            ],
            "called": [
                "FUN_08005250",
                "FUN_08000210",
                "FUN_080057e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002638": {
            "entrypoint": "0x08002638",
            "current_name": "convert_string_to_int_08002638",
            "code": "\nundefined4 convertStringToInt_08002638(int input_base_address,byte *input_string,uint *output_value)\n\n{\n  byte is_digit;\n  bool is_negative;\n  bool is_decimal;\n  int conversion_result;\n  char *current_char;\n  char *next_char;\n  undefined4 return_value;\n  undefined8 temp_value;\n  uint converted_value;\n  byte digit_count;\n  char decimal_count;\n  int integer_value;\n  char first_char;\n  char *next_iterator;\n  \n  next_char = (char *)(input_base_address + (uint)*input_string);\n  current_char = next_char + 1;\n  first_char = *next_char;\n  is_negative = false;\n  if (first_char == '-') {\n    is_negative = true;\n    first_char = *current_char;\n    next_iterator = next_char + 2;\n  }\n  else {\n    next_iterator = current_char;\n    if (first_char == '+') {\n      next_iterator = next_char + 2;\n      first_char = *current_char;\n    }\n  }\n  integer_value = 0;\n  decimal_count = '\\0';\n  digit_count = 0;\n  is_decimal = false;\n  do {\n    is_digit = first_char - 0x30;\n    if (is_digit < 10) {\n      digit_count = digit_count + 1;\n      if (digit_count < 9) {\n        if (is_decimal) {\n          decimal_count = decimal_count + -1;\n        }\n        integer_value = (uint)is_digit + integer_value * 10;\n      }\n      else if (!is_decimal) {\n        decimal_count = decimal_count + '\\x01';\n      }\n    }\n    else {\n      if ((is_digit != 0xfe) || (is_decimal)) {\n        if (digit_count == 0) {\n          return_value = 0;\n        }\n        else {\n          converted_value = FUN_08008e3c(integer_value);\n          conversion_result = FUN_08009214(converted_value,0);\n          if (conversion_result == 0) {\n            for (; decimal_count < -1; decimal_count = decimal_count + '\\x02') {\n              temp_value = FUN_08008590(converted_value);\n              temp_value = FUN_08008640((int)temp_value,(int)((ulonglong)temp_value >> 0x20),0x47ae147b,0x3f847ae1)\n              ;\n              converted_value = FUN_08008c30((int)temp_value,(int)((ulonglong)temp_value >> 0x20));\n            }\n            if (decimal_count < '\\0') {\n              temp_value = FUN_08008590(converted_value);\n              temp_value = FUN_08008640((int)temp_value,(int)((ulonglong)temp_value >> 0x20),0x9999999a,0x3fb99999)\n              ;\n              converted_value = FUN_08008c30((int)temp_value,(int)((ulonglong)temp_value >> 0x20));\n            }\n            else {\n              for (; '\\0' < decimal_count; decimal_count = decimal_count + -1) {\n                converted_value = FUN_08008eec(converted_value,0x41200000);\n              }\n            }\n          }\n          if (is_negative) {\n            *output_value = converted_value ^ 0x80000000;\n          }\n          else {\n            *output_value = converted_value;\n          }\n          *input_string = ((char)next_iterator - (char)input_base_address) - 1;\n          return_value = 1;\n        }\n        return return_value;\n      }\n      is_decimal = true;\n    }\n    first_char = *next_iterator;\n    next_iterator = next_iterator + 1;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08002638": "convert_string_to_int_08002638",
                "param_1": "input_base_address",
                "param_2": "input_string",
                "param_3": "output_value",
                "bVar1": "is_digit",
                "bVar2": "is_negative",
                "bVar3": "is_decimal",
                "iVar4": "conversion_result",
                "pcVar5": "current_char",
                "pcVar6": "next_char",
                "uVar7": "return_value",
                "uVar8": "temp_value",
                "local_1c": "converted_value",
                "local_16": "digit_count",
                "local_15": "decimal_count",
                "local_14": "integer_value",
                "local_d": "first_char",
                "local_c": "next_iterator"
            },
            "calling": [
                "FUN_0800184c",
                "FUN_08003b98"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08009214",
                "FUN_08008e3c",
                "FUN_08008eec",
                "FUN_08008640",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002814": {
            "entrypoint": "0x08002814",
            "current_name": "FUNC_08002814",
            "code": "\nvoid FUNC_08002814(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002814": "FUNC_08002814"
            },
            "calling": [
                "FUN_08001d4c",
                "FUN_08002408",
                "FUN_08004148"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002828": {
            "entrypoint": "0x08002828",
            "current_name": "FUNC_08002828",
            "code": "\nvoid FUNC_08002828(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002828": "FUNC_08002828"
            },
            "calling": [
                "FUN_08001994"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800283a": {
            "entrypoint": "0x0800283a",
            "current_name": "initialize_data_0800283a",
            "code": "\nvoid initializeData_0800283a(void)\n\n{\n  FUN_080035ec(DAT_20000eac,DAT_20000eb0,DAT_20000eb4);\n  FUN_080004fc(DAT_20000eac,DAT_20000eb0,DAT_20000eb4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800283a": "initialize_data_0800283a"
            },
            "calling": [
                "FUN_08001ddc",
                "FUN_080024c4"
            ],
            "called": [
                "FUN_080035ec",
                "FUN_080004fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002870": {
            "entrypoint": "0x08002870",
            "current_name": "increment_and_check_limit_08002870",
            "code": "\nchar increment_and_check_limit_08002870(char input)\n\n{\n  char result;\n  \n  result = input + '\\x01';\n  if (result == '\\x12') {\n    result = '\\0';\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002870": "increment_and_check_limit_08002870",
                "param_1": "input",
                "local_9": "result"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08002ef0",
                "FUN_08002e08",
                "FUN_08002ba8",
                "FUN_08002f40"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002896": {
            "entrypoint": "0x08002896",
            "current_name": "decrement_and_default_08002896",
            "code": "\nchar decrementAndDefault_08002896(char input)\n\n{\n  char result;\n  \n  result = input;\n  if (input == '\\0') {\n    result = '\\x12';\n  }\n  return result + -1;\n}\n\n",
            "renaming": {
                "FUN_08002896": "decrement_and_default_08002896",
                "param_1": "input",
                "local_9": "result"
            },
            "calling": [
                "FUN_08002a94"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080028bc": {
            "entrypoint": "0x080028bc",
            "current_name": "combine_three_results_080028bc",
            "code": "\nundefined4 combineThreeResults_080028bc(undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  \n  result1 = FUN_08008eec(input2,input2);\n  result2 = FUN_08008eec(input1,input1);\n  result1 = FUN_08008cd8(result1,result2);\n  result2 = FUN_08008cdc(input3,input3);\n  result1 = FUN_08009054(result1,result2);\n  return result1;\n}\n\n",
            "renaming": {
                "FUN_080028bc": "combine_three_results_080028bc",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "uVar1": "result1",
                "uVar2": "result2"
            },
            "calling": [
                "FUN_08002c18"
            ],
            "called": [
                "FUN_08009054",
                "FUN_08008cd8",
                "FUN_08008eec",
                "FUN_08008cdc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002908": {
            "entrypoint": "0x08002908",
            "current_name": "calculate_result_08002908",
            "code": "\nundefined4 calculate_result_08002908(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  \n  result1 = FUN_08008cdc(input3,input3);\n  result1 = FUN_08008eec(result1,input4);\n  result2 = FUN_08008eec(input1,input1);\n  result1 = FUN_08008cd8(result1,result2);\n  result2 = FUN_08008eec(input2,input2);\n  result1 = FUN_08008cdc(result1,result2);\n  result2 = FUN_08008eec(input3,0x40800000);\n  result1 = FUN_08009054(result1,result2);\n  return result1;\n}\n\n",
            "renaming": {
                "FUN_08002908": "calculate_result_08002908",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result1",
                "uVar2": "result2"
            },
            "calling": [
                "FUN_08002c18"
            ],
            "called": [
                "FUN_08008cd8",
                "FUN_08009054",
                "FUN_08008eec",
                "FUN_08008cdc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002978": {
            "entrypoint": "0x08002978",
            "current_name": "calculate_result_08002978",
            "code": "\nundefined4 calculateResult_08002978(undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  undefined8 finalResult;\n  \n  result1 = FUN_08008eec(input2,input2);\n  result2 = FUN_08008cdc(input1,input1);\n  result2 = FUN_08008eec(result2,input3);\n  result1 = FUN_08008cd8(result1,result2);\n  finalResult = FUN_08008590(result1);\n  finalResult = FUN_080098d0((int)finalResult,(int)((ulonglong)finalResult >> 0x20));\n  result1 = FUN_08008c30((int)finalResult,(int)((ulonglong)finalResult >> 0x20));\n  return result1;\n}\n\n",
            "renaming": {
                "FUN_08002978": "calculate_result_08002978",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "finalResult"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08002afc",
                "FUN_080029d8"
            ],
            "called": [
                "FUN_08008590",
                "FUN_080098d0",
                "FUN_08008cd8",
                "FUN_08008eec",
                "FUN_08008cdc",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080029d8": {
            "entrypoint": "0x080029d8",
            "current_name": "update_data_080029d8",
            "code": "\nvoid updateData_080029d8(undefined4 param1,int data1,int data2)\n\n{\n  int result;\n  undefined4 newValue1;\n  undefined4 value1;\n  \n  if (((data1 != 0) && (data2 != 0)) &&\n     (result = FUN_08009214(*(undefined4 *)(data1 + 0x18),*(undefined4 *)(data1 + 0x1c)),\n     result == 0)) {\n    if ((*(char *)(data1 + 0x25) == '\\0') &&\n       (result = FUN_08009264(*(undefined4 *)(data1 + 0x1c),*(undefined4 *)(data2 + 0x18)),\n       result != 0)) {\n      value1 = *(undefined4 *)(data1 + 0x1c);\n      newValue1 = FUN_08002978(DAT_20000edc ^ 0x80000000,*(undefined4 *)(data2 + 0x18),\n                           *(undefined4 *)(data1 + 0x20));\n      result = FUN_08009228(value1,newValue1);\n      if (result == 0) {\n        newValue1 = FUN_08002978(DAT_20000edc ^ 0x80000000,*(undefined4 *)(data2 + 0x18),\n                             *(undefined4 *)(data1 + 0x20));\n      }\n      else {\n        newValue1 = *(undefined4 *)(data1 + 0x1c);\n      }\n      *(undefined4 *)(data1 + 0x18) = newValue1;\n    }\n    else {\n      *(undefined4 *)(data1 + 0x18) = *(undefined4 *)(data1 + 0x1c);\n    }\n    *(undefined *)(data1 + 0x24) = 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080029d8": "update_data_080029d8",
                "param_1": "param1",
                "param_2": "data1",
                "param_3": "data2",
                "iVar1": "result",
                "uVar2": "newValue1",
                "uVar3": "value1"
            },
            "calling": [
                "FUN_08002a94"
            ],
            "called": [
                "FUN_08009228",
                "FUN_08009214",
                "FUN_08009264",
                "FUN_08002978"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a94": {
            "entrypoint": "0x08002a94",
            "current_name": "extract_data_08002a94",
            "code": "\nvoid extractData_08002a94(void)\n\n{\n  undefined *previousPointer;\n  undefined *currentPointer;\n  undefined *nextPointer;\n  byte currentByte;\n  \n  currentByte = DAT_20000cf0;\n  currentPointer = (undefined *)0x0;\n  nextPointer = (undefined *)0x0;\n  while (previousPointer = nextPointer, currentByte != DAT_20000cf1) {\n    currentByte = FUN_08002896(currentByte);\n    nextPointer = currentPointer;\n    FUN_080029d8(&DAT_20000870 + (uint)currentByte * 0x40,currentPointer,previousPointer);\n    currentPointer = &DAT_20000870 + (uint)currentByte * 0x40;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002a94": "extract_data_08002a94",
                "puVar1": "previousPointer",
                "local_18": "currentPointer",
                "local_14": "nextPointer",
                "local_9": "currentByte"
            },
            "calling": [
                "FUN_08002edc"
            ],
            "called": [
                "FUN_08002896",
                "FUN_080029d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002afc": {
            "entrypoint": "0x08002afc",
            "current_name": "check_and_modify_parameters_08002afc",
            "code": "\nvoid checkAndModifyParameters_08002afc(int param1,int param2)\n\n{\n  int result;\n  undefined4 updatedParam;\n  undefined4 originalParam;\n  \n  if (((param1 != 0) && (*(char *)(param1 + 0x25) == '\\0')) &&\n     (result = FUN_08009228(*(undefined4 *)(param1 + 0x18),*(undefined4 *)(param2 + 0x18)),\n     result != 0)) {\n    originalParam = *(undefined4 *)(param2 + 0x18);\n    updatedParam = FUN_08002978(DAT_20000edc ^ 0x80000000,*(undefined4 *)(param1 + 0x18),\n                         *(undefined4 *)(param1 + 0x20));\n    result = FUN_08009228(originalParam,updatedParam);\n    if (result == 0) {\n      updatedParam = FUN_08002978(DAT_20000edc ^ 0x80000000,*(undefined4 *)(param1 + 0x18),\n                           *(undefined4 *)(param1 + 0x20));\n    }\n    else {\n      updatedParam = *(undefined4 *)(param2 + 0x18);\n    }\n    result = FUN_08009214(updatedParam,*(undefined4 *)(param2 + 0x18));\n    if (result == 0) {\n      *(undefined4 *)(param2 + 0x18) = updatedParam;\n      *(undefined *)(param2 + 0x24) = 1;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002afc": "check_and_modify_parameters_08002afc",
                "param_1": "param1",
                "param_2": "param2",
                "iVar1": "result",
                "uVar2": "updatedParam",
                "uVar3": "originalParam"
            },
            "calling": [
                "FUN_08002ba8"
            ],
            "called": [
                "FUN_08009228",
                "FUN_08009214",
                "FUN_08002978"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ba8": {
            "entrypoint": "0x08002ba8",
            "current_name": "process_data_08002ba8",
            "code": "\nvoid processData_08002ba8(void)\n\n{\n  uint convertedValue;\n  undefined *currentPointer;\n  undefined *previousPointer;\n  undefined *temp1;\n  undefined *temp2;\n  byte byteValue;\n  \n  temp1 = (undefined *)0x0;\n  temp2 = (undefined *)0x0;\n  byteValue = DAT_20000cf1;\n  previousPointer = (undefined *)0x0;\n  while (currentPointer = temp1, byteValue != DAT_20000cf0) {\n    temp1 = temp2;\n    convertedValue = (uint)byteValue;\n    FUN_08002afc(currentPointer,temp2,&DAT_20000870 + convertedValue * 0x40);\n    byteValue = FUN_08002870(byteValue);\n    previousPointer = currentPointer;\n    temp2 = &DAT_20000870 + convertedValue * 0x40;\n  }\n  FUN_08002afc(temp1,temp2,0,temp1,previousPointer);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ba8": "process_data_08002ba8",
                "puVar2": "currentPointer",
                "puVar3": "previousPointer",
                "local_14": "temp1",
                "local_10": "temp2",
                "local_9": "byteValue",
                "uVar1": "convertedValue"
            },
            "calling": [
                "FUN_08002edc"
            ],
            "called": [
                "FUN_08002afc",
                "FUN_08002870"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c18": {
            "entrypoint": "0x08002c18",
            "current_name": "calculate_memory_offset_08002c18",
            "code": "\nvoid calculateMemoryOffset_08002c18(int baseAddress,undefined4 parameter1,undefined4 parameter2)\n\n{\n  undefined4 result1;\n  int result2;\n  undefined4 result3;\n  undefined4 result4;\n  undefined4 result5;\n  uint result6;\n  undefined8 result7;\n  int memoryOffset1;\n  uint memoryOffset2;\n  \n  result1 = FUN_08008e3c(*(undefined4 *)(baseAddress + 0x3c));\n  result1 = FUN_08008eec(result1,parameter1);\n  result7 = FUN_08008590(result1);\n  result7 = FUN_08009318((int)result7,(int)((ulonglong)result7 >> 0x20));\n  result1 = FUN_08008bf0((int)result7,(int)((ulonglong)result7 >> 0x20));\n  *(undefined4 *)(baseAddress + 0x28) = result1;\n  result1 = FUN_08008e3c(*(undefined4 *)(baseAddress + 0x3c));\n  result1 = FUN_08008eec(result1,parameter2);\n  result7 = FUN_08008590(result1);\n  result7 = FUN_08009318((int)result7,(int)((ulonglong)result7 >> 0x20));\n  result1 = FUN_08008bf0((int)result7,(int)((ulonglong)result7 >> 0x20));\n  *(undefined4 *)(baseAddress + 0x2c) = result1;\n  result7 = FUN_0800856c(*(int *)(baseAddress + 0x30) * 0x32);\n  result7 = FUN_08008640((int)result7,(int)((ulonglong)result7 >> 0x20),0,0x404e0000);\n  result2 = FUN_08008ba0((int)result7,(int)((ulonglong)result7 >> 0x20));\n  result1 = FUN_08008e3c(*(undefined4 *)(baseAddress + 0x28));\n  result3 = FUN_08008e3c(*(undefined4 *)(baseAddress + 0x3c));\n  result4 = FUN_08008e44(result2);\n  result1 = FUN_080028bc(result1,result3,result4);\n  result7 = FUN_08008590(result1);\n  result7 = FUN_08009318((int)result7,(int)((ulonglong)result7 >> 0x20));\n  memoryOffset2 = FUN_08008ba0((int)result7,(int)((ulonglong)result7 >> 0x20));\n  result1 = FUN_08008e3c(*(undefined4 *)(baseAddress + 0x3c));\n  result3 = FUN_08008e3c(*(undefined4 *)(baseAddress + 0x2c));\n  result4 = FUN_08008e44(-result2);\n  result1 = FUN_080028bc(result1,result3,result4);\n  result7 = FUN_08008590(result1);\n  result7 = FUN_080094c0((int)result7,(int)((ulonglong)result7 >> 0x20));\n  memoryOffset1 = FUN_08008ba0((int)result7,(int)((ulonglong)result7 >> 0x20));\n  memoryOffset1 = (*(int *)(baseAddress + 0x10) - memoryOffset2) - memoryOffset1;\n  if (memoryOffset1 < 0) {\n    result1 = FUN_08008e3c(*(undefined4 *)(baseAddress + 0x28));\n    result3 = FUN_08008e3c(*(undefined4 *)(baseAddress + 0x2c));\n    result4 = FUN_08008e44(result2);\n    result5 = FUN_08008e44(*(undefined4 *)(baseAddress + 0x10));\n    result1 = FUN_08002908(result1,result3,result4,result5);\n    result7 = FUN_08008590(result1);\n    result7 = FUN_08009318((int)result7,(int)((ulonglong)result7 >> 0x20));\n    result6 = FUN_08008ba0((int)result7,(int)((ulonglong)result7 >> 0x20));\n    result6 = result6 & ~((int)result6 >> 0x1f);\n    memoryOffset2 = *(uint *)(baseAddress + 0x10);\n    if ((int)result6 <= (int)*(uint *)(baseAddress + 0x10)) {\n      memoryOffset2 = result6;\n    }\n    memoryOffset1 = 0;\n  }\n  *(uint *)(baseAddress + 0x34) = memoryOffset2;\n  *(uint *)(baseAddress + 0x38) = memoryOffset1 + memoryOffset2;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c18": "calculate_memory_offset_08002c18",
                "param_1": "baseAddress",
                "param_2": "parameter1",
                "param_3": "parameter2",
                "uVar1": "result1",
                "iVar2": "result2",
                "uVar3": "result3",
                "uVar4": "result4",
                "uVar5": "result5",
                "uVar6": "result6",
                "uVar7": "result7",
                "local_20": "memoryOffset1",
                "local_1c": "memoryOffset2"
            },
            "calling": [
                "FUN_08002e08"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08002908",
                "FUN_08008e44",
                "FUN_0800856c",
                "FUN_080094c0",
                "FUN_08008ba0",
                "FUN_08009318",
                "FUN_08008e3c",
                "FUN_08008eec",
                "FUN_080028bc",
                "FUN_08008640",
                "FUN_08008bf0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002e08": {
            "entrypoint": "0x08002e08",
            "current_name": "process_data_08002e08",
            "code": "\nvoid processData_08002e08(void)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  int offset;\n  undefined *dataPtr;\n  byte byteValue;\n  \n  dataPtr = (undefined *)0x0;\n  byteValue = DAT_20000cf1;\n  while (byteValue != DAT_20000cf0) {\n    offset = (uint)byteValue * 0x40;\n    if ((dataPtr != (undefined *)0x0) &&\n       ((dataPtr[0x24] != '\\0' || ((&DAT_20000894)[offset] != '\\0')))) {\n      result1 = FUN_08009054(*(undefined4 *)(dataPtr + 0x18),*(undefined4 *)(dataPtr + 0x14));\n      result2 = FUN_08009054(*(undefined4 *)(&DAT_20000888 + offset),*(undefined4 *)(dataPtr + 0x14));\n      FUN_08002c18(dataPtr,result1,result2);\n      dataPtr[0x24] = 0;\n    }\n    byteValue = FUN_08002870(byteValue);\n    dataPtr = &DAT_20000870 + offset;\n  }\n  result1 = FUN_08009054(*(undefined4 *)(dataPtr + 0x18),*(undefined4 *)(dataPtr + 0x14));\n  result2 = FUN_08009054(0,*(undefined4 *)(dataPtr + 0x14));\n  FUN_08002c18(dataPtr,result1,result2);\n  dataPtr[0x24] = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002e08": "process_data_08002e08",
                "local_18": "dataPtr",
                "local_11": "byteValue",
                "iVar3": "offset",
                "uVar1": "result1",
                "uVar2": "result2"
            },
            "calling": [
                "FUN_08002edc"
            ],
            "called": [
                "FUN_08009054",
                "FUN_08002870",
                "FUN_08002c18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002edc": {
            "entrypoint": "0x08002edc",
            "current_name": "initialize_app_08002edc",
            "code": "\nvoid initialize_app_08002edc(void)\n\n{\n  FUN_08002a94();\n  FUN_08002ba8();\n  FUN_08002e08();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002edc": "initialize_app_08002edc"
            },
            "calling": [
                "FUN_08003618",
                "FUN_08003004"
            ],
            "called": [
                "FUN_08002e08",
                "FUN_08002a94",
                "FUN_08002ba8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ef0": {
            "entrypoint": "0x08002ef0",
            "current_name": "initialize_data_08002ef0",
            "code": "\nvoid initializeData_08002ef0(void)\n\n{\n  DAT_20000cf1 = DAT_20000cf0;\n  DAT_20000cf2 = FUN_08002870(DAT_20000cf0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ef0": "initialize_data_08002ef0"
            },
            "calling": [
                "FUN_08002f24"
            ],
            "called": [
                "FUN_08002870"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f24": {
            "entrypoint": "0x08002f24",
            "current_name": "initialize_data_08002f24",
            "code": "\nvoid initializeData_08002f24(void)\n\n{\n  FUN_08002ef0();\n  FUN_0800b430(&DAT_20000cf4,0,0x1c);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f24": "initialize_data_08002f24"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_0800b430",
                "FUN_08002ef0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f40": {
            "entrypoint": "0x08002f40",
            "current_name": "update_data_if_needed_08002f40",
            "code": "\nvoid updateDataIfNeeded_08002f40(void)\n\n{\n  if (DAT_20000cf0 != DAT_20000cf1) {\n    DAT_20000cf1 = FUN_08002870(DAT_20000cf1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f40": "update_data_if_needed_08002f40"
            },
            "calling": [
                "FUN_080053a0"
            ],
            "called": [
                "FUN_08002870"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f74": {
            "entrypoint": "0x08002f74",
            "current_name": "get_current_data_pointer_08002f74",
            "code": "\nundefined * get_current_data_pointer_08002f74(void)\n\n{\n  undefined *current_data_pointer;\n  \n  if (DAT_20000cf0 == DAT_20000cf1) {\n    current_data_pointer = (undefined *)0x0;\n  }\n  else {\n    current_data_pointer = &DAT_20000870 + (uint)DAT_20000cf1 * 0x40;\n  }\n  return current_data_pointer;\n}\n\n",
            "renaming": {
                "FUN_08002f74": "get_current_data_pointer_08002f74",
                "puVar1": "current_data_pointer"
            },
            "calling": [
                "FUN_080053a0",
                "FUN_08002fd4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fac": {
            "entrypoint": "0x08002fac",
            "current_name": "compare_data_equality_08002fac",
            "code": "\nbool compareDataEquality_08002fac(void)\n\n{\n  return DAT_20000cf1 == DAT_20000cf2;\n}\n\n",
            "renaming": {
                "FUN_08002fac": "compare_data_equality_08002fac"
            },
            "calling": [
                "FUN_08001e98"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fd4": {
            "entrypoint": "0x08002fd4",
            "current_name": "process_data_08002fd4",
            "code": "\nvoid processData_08002fd4(void)\n\n{\n  int result;\n  \n  while ((result = FUN_08002f74(), result != 0 || (DAT_20000ea9 == '\\x03'))) {\n    FUN_08003a74();\n    if (DAT_20000ea8 != '\\0') {\n      return;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002fd4": "process_data_08002fd4",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800525c",
                "FUN_08000220",
                "FUN_080005b4",
                "FUN_08002408",
                "FUN_080024c4"
            ],
            "called": [
                "FUN_08003a74",
                "FUN_08002f74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003004": {
            "entrypoint": "0x08003004",
            "current_name": "calculate_quality_score_08003004",
            "code": "\nvoid calculateQualityScore_08003004(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4,\n                 char flag)\n\n{\n  undefined4 result1;\n  int score1;\n  int score2;\n  int score3;\n  undefined4 result2;\n  undefined4 result3;\n  undefined4 finalResult;\n  undefined4 result4;\n  uint maxScore;\n  int index;\n  ushort *ptrArray;\n  int difference;\n  uint maxDiff;\n  undefined8 tempResult1;\n  undefined8 tempResult2;\n  undefined8 tempResult3;\n  undefined4 localVar1;\n  undefined4 localVar2;\n  \n  index = (uint)DAT_20000cf0 * 0x40;\n  ptrArray = (ushort *)(&DAT_20000870 + index);\n  result1 = FUN_08008eec(DAT_20000ebc,input1);\n  tempResult1 = FUN_08008590(result1);\n  score1 = FUN_080095b8((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20));\n  result1 = FUN_08008eec(DAT_20000ec0,input2);\n  tempResult1 = FUN_08008590(result1);\n  score2 = FUN_080095b8((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20));\n  result1 = FUN_08008eec(DAT_20000ec4,input3);\n  tempResult1 = FUN_08008590(result1);\n  score3 = FUN_080095b8((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20));\n  *ptrArray = 0;\n  if (score1 < DAT_20000cf4) {\n    *ptrArray = *ptrArray | 0x20;\n  }\n  if (score2 < DAT_20000cf8) {\n    *ptrArray = *ptrArray | 0x880;\n  }\n  if (score3 < DAT_20000cfc) {\n    *ptrArray = *ptrArray | 0x200;\n  }\n  difference = score1 - DAT_20000cf4;\n  if (difference < 0) {\n    difference = -difference;\n  }\n  *(int *)(&DAT_20000874 + index) = difference;\n  difference = score2 - DAT_20000cf8;\n  if (difference < 0) {\n    difference = -difference;\n  }\n  *(int *)(&DAT_20000878 + index) = difference;\n  difference = score3 - DAT_20000cfc;\n  if (difference < 0) {\n    difference = -difference;\n  }\n  *(int *)(&DAT_2000087c + index) = difference;\n  maxScore = *(uint *)(&DAT_2000087c + index);\n  if (*(uint *)(&DAT_2000087c + index) < *(uint *)(&DAT_20000878 + index)) {\n    maxScore = *(uint *)(&DAT_20000878 + index);\n  }\n  maxDiff = *(uint *)(&DAT_20000874 + index);\n  if (*(uint *)(&DAT_20000874 + index) < maxScore) {\n    maxDiff = maxScore;\n  }\n  *(uint *)(&DAT_20000880 + index) = maxDiff;\n  if (*(int *)(&DAT_20000880 + index) != 0) {\n    result1 = FUN_08008e44(score1 - DAT_20000cf4);\n    result1 = FUN_08009054(result1,DAT_20000ebc);\n    result2 = FUN_08008e44(score2 - DAT_20000cf8);\n    result2 = FUN_08009054(result2,DAT_20000ec0);\n    result3 = FUN_08008e44(score3 - DAT_20000cfc);\n    result3 = FUN_08009054(result3,DAT_20000ec4);\n    finalResult = FUN_08008eec(result1,result1);\n    result4 = FUN_08008eec(result2,result2);\n    finalResult = FUN_08008cdc(finalResult,result4);\n    result4 = FUN_08008eec(result3,result3);\n    finalResult = FUN_08008cdc(finalResult,result4);\n    tempResult1 = FUN_08008590(finalResult);\n    tempResult1 = FUN_080098d0((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20));\n    finalResult = FUN_08008c30((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20));\n    *(undefined4 *)(&DAT_20000890 + index) = finalResult;\n    finalResult = FUN_08009054(0x3f800000,*(undefined4 *)(&DAT_20000890 + index));\n    if (flag == '\\0') {\n      localVar2 = FUN_08008eec(input4,finalResult);\n    }\n    else {\n      localVar2 = FUN_08009054(0x3f800000,input4);\n    }\n    result4 = FUN_08008eec(*(undefined4 *)(&DAT_20000890 + index),localVar2);\n    *(undefined4 *)(&DAT_20000884 + index) = result4;\n    result4 = FUN_08008e44(*(undefined4 *)(&DAT_20000880 + index));\n    result4 = FUN_08008eec(result4,localVar2);\n    tempResult1 = FUN_08008590(result4);\n    tempResult1 = FUN_08009318((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20));\n    result4 = FUN_08008bf0((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20));\n    *(undefined4 *)(&DAT_200008ac + index) = result4;\n    result4 = FUN_08008e44(*(undefined4 *)(&DAT_20000880 + index));\n    result4 = FUN_08008eec(result4,finalResult);\n    result4 = FUN_08008eec(result4,DAT_20000edc);\n    result4 = FUN_08009054(result4,0x453b8000);\n    tempResult1 = FUN_08008590(result4);\n    tempResult1 = FUN_08009318((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20));\n    result4 = FUN_08008ba0((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20));\n    *(undefined4 *)(&DAT_200008a0 + index) = result4;\n    maxScore = FUN_08008eec(result1,finalResult);\n    result1 = FUN_08008eec(result2,finalResult);\n    result2 = FUN_08008eec(result3,finalResult);\n    localVar1 = 0;\n    if ((DAT_20000cf0 != DAT_20000cf1) && (difference = FUN_08009264(DAT_20000d0c,0), difference != 0)) {\n      result3 = FUN_08008eec(DAT_20000d00 ^ 0x80000000,maxScore);\n      finalResult = FUN_08008eec(DAT_20000d04,result1);\n      result3 = FUN_08008cd8(result3,finalResult);\n      finalResult = FUN_08008eec(DAT_20000d08,result2);\n      result3 = FUN_08008cd8(result3,finalResult);\n      tempResult1 = FUN_08008590(result3);\n      difference = FUN_08008b24((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),0x66666666,0x3fee6666);\n      if (difference != 0) {\n        difference = FUN_08009228(DAT_20000d0c,*(undefined4 *)(&DAT_20000884 + index));\n        localVar1 = DAT_20000d0c;\n        if (difference == 0) {\n          localVar1 = *(undefined4 *)(&DAT_20000884 + index);\n        }\n        tempResult1 = FUN_08008590(result3);\n        difference = FUN_08008b60((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),0x66666666,0xbfee6666);\n        if (difference != 0) {\n          tempResult1 = FUN_08008590(result3);\n          tempResult1 = FUN_080082d0(0,0x3ff00000,(int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20));\n          tempResult1 = FUN_08008640((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),0,0x3fe00000);\n          tempResult1 = FUN_080098d0((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20));\n          result3 = FUN_08008c30((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20));\n          tempResult1 = FUN_08008590(localVar1);\n          finalResult = FUN_08008eec(DAT_20000edc,DAT_20000ee0);\n          finalResult = FUN_08008eec(finalResult,result3);\n          tempResult2 = FUN_08008590(finalResult);\n          tempResult3 = FUN_08008590(result3);\n          tempResult3 = FUN_080082d0(0,0x3ff00000,(int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20));\n          tempResult2 = FUN_08008894((int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20),(int)tempResult3,\n                                (int)((ulonglong)tempResult3 >> 0x20));\n          tempResult2 = FUN_080098d0((int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20));\n          difference = FUN_08008b24((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),(int)tempResult2,\n                                (int)((ulonglong)tempResult2 >> 0x20));\n          if (difference == 0) {\n            finalResult = FUN_08008eec(DAT_20000edc,DAT_20000ee0);\n            finalResult = FUN_08008eec(finalResult,result3);\n            tempResult1 = FUN_08008590(finalResult);\n            tempResult2 = FUN_08008590(result3);\n            tempResult2 = FUN_080082d0(0,0x3ff00000,(int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20));\n            tempResult1 = FUN_08008894((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),(int)tempResult2,\n                                  (int)((ulonglong)tempResult2 >> 0x20));\n            tempResult1 = FUN_080098d0((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20));\n            localVar1 = FUN_08008c30((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20));\n          }\n        }\n      }\n    }\n    *(undefined4 *)(&DAT_2000088c + index) = localVar1;\n    finalResult = FUN_08002978(DAT_20000edc ^ 0x80000000,0,*(undefined4 *)(&DAT_20000890 + index));\n    difference = FUN_08009228(localVar1,finalResult);\n    result3 = finalResult;\n    if (difference != 0) {\n      result3 = localVar1;\n    }\n    *(undefined4 *)(&DAT_20000888 + index) = result3;\n    difference = FUN_08009250(finalResult,*(undefined4 *)(&DAT_20000884 + index));\n    if (difference == 0) {\n      (&DAT_20000895)[index] = 0;\n    }\n    else {\n      (&DAT_20000895)[index] = 1;\n    }\n    (&DAT_20000894)[index] = 1;\n    DAT_20000d0c = *(undefined4 *)(&DAT_20000884 + index);\n    DAT_20000cf0 = DAT_20000cf2;\n    DAT_20000d00 = maxScore;\n    DAT_20000d04 = result1;\n    DAT_20000d08 = result2;\n    DAT_20000cf2 = FUN_08002870(DAT_20000cf2);\n    DAT_20000cf4 = score1;\n    DAT_20000cf8 = score2;\n    DAT_20000cfc = score3;\n    FUN_08002edc();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003004": "calculate_quality_score_08003004",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "param_5": "flag",
                "uVar1": "result1",
                "iVar2": "score1",
                "iVar3": "score2",
                "iVar4": "score3",
                "uVar5": "result2",
                "uVar6": "result3",
                "uVar7": "finalResult",
                "uVar8": "result4",
                "uVar9": "maxScore",
                "iVar10": "index",
                "puVar11": "ptrArray",
                "iVar12": "difference",
                "uVar13": "maxDiff",
                "uVar14": "tempResult1",
                "uVar15": "tempResult2",
                "uVar16": "tempResult3",
                "local_20": "localVar1",
                "local_1c": "localVar2"
            },
            "calling": [
                "FUN_08001e98"
            ],
            "called": [
                "FUN_080095b8",
                "FUN_08009054",
                "FUN_08008e44",
                "FUN_08008cd8",
                "FUN_08009318",
                "FUN_08008ba0",
                "FUN_08002870",
                "FUN_08008b60",
                "FUN_08009264",
                "FUN_08008894",
                "FUN_08008640",
                "FUN_08008bf0",
                "FUN_08008b24",
                "FUN_08008590",
                "FUN_080082d0",
                "FUN_08009228",
                "FUN_080098d0",
                "FUN_08008eec",
                "FUN_08009250",
                "FUN_08002978",
                "FUN_08008cdc",
                "FUN_08008c30",
                "FUN_08002edc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080035ec": {
            "entrypoint": "0x080035ec",
            "current_name": "initialize_data_080035ec",
            "code": "\nvoid initializeData_080035ec(undefined4 data1,undefined4 data2,undefined4 data3)\n\n{\n  DAT_20000cf4 = data1;\n  DAT_20000cf8 = data2;\n  DAT_20000cfc = data3;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080035ec": "initialize_data_080035ec",
                "param_1": "data1",
                "param_2": "data2",
                "param_3": "data3"
            },
            "calling": [
                "FUN_0800283a"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003618": {
            "entrypoint": "0x08003618",
            "current_name": "update_data_08003618",
            "code": "\nvoid updateData_08003618(undefined4 inputData)\n\n{\n  undefined4 result1;\n  int index;\n  undefined4 storedData;\n  \n  index = (uint)DAT_20000cf1 * 0x40;\n  storedData = *(undefined4 *)(&DAT_20000890 + index);\n  result1 = FUN_08008e44(inputData);\n  result1 = FUN_08008eec(storedData,result1);\n  storedData = FUN_08008e44(*(undefined4 *)(&DAT_20000880 + index));\n  result1 = FUN_08009054(result1,storedData);\n  *(undefined4 *)(&DAT_20000890 + index) = result1;\n  *(undefined4 *)(&DAT_20000880 + index) = inputData;\n  *(undefined4 *)(&DAT_20000888 + index) = 0;\n  *(undefined4 *)(&DAT_2000088c + index) = 0;\n  (&DAT_20000895)[index] = 0;\n  (&DAT_20000894)[index] = 1;\n  FUN_08002edc();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003618": "update_data_08003618",
                "param_1": "inputData",
                "uVar1": "result1",
                "iVar2": "index",
                "uVar3": "storedData"
            },
            "calling": [
                "FUN_080058a0"
            ],
            "called": [
                "FUN_08009054",
                "FUN_08008e44",
                "FUN_08008eec",
                "FUN_08002edc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800369c": {
            "entrypoint": "0x0800369c",
            "current_name": "process_string_0800369c",
            "code": "\nvoid processString_0800369c(char *inputString)\n\n{\n  char *currentChar;\n  \n  currentChar = inputString;\n  while (*currentChar != '\\0') {\n    FUN_08008250(*currentChar);\n    currentChar = currentChar + 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800369c": "process_string_0800369c",
                "param_1": "inputString",
                "local_c": "currentChar"
            },
            "calling": [
                "FUN_08004900",
                "FUN_080039bc"
            ],
            "called": [
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036c6": {
            "entrypoint": "0x080036c6",
            "current_name": "print_string_080036c6",
            "code": "\nvoid print_string_080036c6(char *string)\n\n{\n  char *current_char;\n  \n  current_char = string;\n  while (*current_char != '\\0') {\n    FUN_08008250(*current_char);\n    current_char = current_char + 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080036c6": "print_string_080036c6",
                "param_1": "string",
                "local_c": "current_char"
            },
            "calling": [
                "FUN_0800423c",
                "FUN_08004250",
                "FUN_08004940",
                "FUN_08004900",
                "FUN_080044e8",
                "FUN_08004228",
                "FUN_080046d0",
                "FUN_08004030",
                "FUN_080041a0",
                "FUN_08004148"
            ],
            "called": [
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036f0": {
            "entrypoint": "0x080036f0",
            "current_name": "print_binary_representation_080036f0",
            "code": "\nvoid printBinaryRepresentation_080036f0(uint number,int numBits)\n\n{\n  undefined4 binaryDigit;\n  int bitIndex;\n  uint currentBit;\n  \n  currentBit = 1 << (numBits - 1U & 0xff);\n  for (bitIndex = 0; bitIndex < numBits; bitIndex = bitIndex + 1) {\n    if ((currentBit & number) == 0) {\n      binaryDigit = 0x30;\n    }\n    else {\n      binaryDigit = 0x31;\n    }\n    FUN_08008250(binaryDigit);\n    currentBit = currentBit >> 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080036f0": "print_binary_representation_080036f0",
                "param_1": "number",
                "param_2": "numBits",
                "uVar1": "binaryDigit",
                "local_10": "bitIndex",
                "local_c": "currentBit"
            },
            "calling": [
                "FUN_08003740",
                "FUN_0800375c"
            ],
            "called": [
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003740": {
            "entrypoint": "0x08003740",
            "current_name": "initialize_memory_08003740",
            "code": "\nvoid initialize_memory_08003740(undefined data)\n\n{\n  FUN_080036f0(data,8);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003740": "initialize_memory_08003740",
                "param_1": "data"
            },
            "calling": [],
            "called": [
                "FUN_080036f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800375c": {
            "entrypoint": "0x0800375c",
            "current_name": "initialize_memory_0800375c",
            "code": "\nvoid initialize_memory_0800375c(undefined2 data_array)\n\n{\n  FUN_080036f0(data_array,0x10);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800375c": "initialize_memory_0800375c",
                "param_1": "data_array"
            },
            "calling": [
                "FUN_08004250"
            ],
            "called": [
                "FUN_080036f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003778": {
            "entrypoint": "0x08003778",
            "current_name": "print_number_08003778",
            "code": "\nvoid print_number_08003778(uint number)\n\n{\n  uint temp;\n  uint current_number;\n  char character_stack [12];\n  byte stack_index;\n  \n  stack_index = 0;\n  current_number = number;\n  if (number == 0) {\n    FUN_08008250(0x30);\n  }\n  else {\n    for (; current_number != 0; current_number = current_number / 10) {\n      temp = (uint)stack_index;\n      stack_index = stack_index + 1;\n      character_stack[temp + 1] = (char)(current_number % 10) + '0';\n    }\n    for (; stack_index != 0; stack_index = stack_index - 1) {\n      FUN_08008250(character_stack[stack_index]);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003778": "print_number_08003778",
                "param_1": "number",
                "uVar1": "temp",
                "local_1c": "current_number",
                "acStack_15": "character_stack",
                "local_9": "stack_index"
            },
            "calling": [
                "FUN_080037fc"
            ],
            "called": [
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080037fc": {
            "entrypoint": "0x080037fc",
            "current_name": "print_absolute_value_080037fc",
            "code": "\nvoid printAbsoluteValue_080037fc(int number)\n\n{\n  int absoluteValue;\n  \n  absoluteValue = number;\n  if (number < 0) {\n    FUN_08008250(0x2d);\n    absoluteValue = -number;\n  }\n  FUN_08003778(absoluteValue);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080037fc": "print_absolute_value_080037fc",
                "param_1": "number",
                "local_c": "absoluteValue"
            },
            "calling": [
                "FUN_08004250",
                "FUN_08004900",
                "FUN_080046d0"
            ],
            "called": [
                "FUN_08003778",
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003826": {
            "entrypoint": "0x08003826",
            "current_name": "format_and_print_integer_08003826",
            "code": "\nvoid formatAndPrintInteger_08003826(uint inputNumber)\n\n{\n  int checkResult;\n  undefined4 formattedNumber;\n  byte tempByte;\n  uint tempNumber;\n  uint workingNumber;\n  char formattedOutput [13];\n  uint divisionResult;\n  byte index;\n  byte loopCounter;\n  \n  checkResult = FUN_08009228(inputNumber,0);\n  workingNumber = inputNumber;\n  if (checkResult != 0) {\n    FUN_08008250(0x2d);\n    workingNumber = inputNumber ^ 0x80000000;\n  }\n  for (loopCounter = DAT_20000ef9; 1 < loopCounter; loopCounter = loopCounter - 2) {\n    workingNumber = FUN_08008eec(workingNumber,0x42c80000);\n  }\n  if (loopCounter != 0) {\n    workingNumber = FUN_08008eec(workingNumber,0x41200000);\n  }\n  formattedNumber = FUN_08008cdc(workingNumber,0x3f000000);\n  index = 0;\n  divisionResult = FUN_08009278(formattedNumber);\n  formattedOutput[DAT_20000ef9 + 1] = '.';\n  for (; divisionResult != 0; divisionResult = divisionResult / 10) {\n    if (index == DAT_20000ef9) {\n      index = index + 1;\n    }\n    tempNumber = (uint)index;\n    index = index + 1;\n    formattedOutput[tempNumber + 1] = (char)(divisionResult % 10) + '0';\n  }\n  while (index < DAT_20000ef9) {\n    tempNumber = (uint)index;\n    index = index + 1;\n    formattedOutput[tempNumber + 1] = '0';\n  }\n  if (index == DAT_20000ef9) {\n    tempByte = index + 1;\n    index = index + 2;\n    formattedOutput[tempByte + 1] = '0';\n  }\n  for (; index != 0; index = index - 1) {\n    FUN_08008250(formattedOutput[index]);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003826": "format_and_print_integer_08003826",
                "param_1": "inputNumber",
                "iVar1": "checkResult",
                "uVar2": "formattedNumber",
                "bVar3": "tempByte",
                "uVar4": "tempNumber",
                "local_24": "workingNumber",
                "acStack_1d": "formattedOutput",
                "local_10": "divisionResult",
                "local_a": "index",
                "local_9": "loopCounter"
            },
            "calling": [
                "FUN_08004250",
                "FUN_08004940",
                "FUN_080044e8",
                "FUN_080046d0"
            ],
            "called": [
                "FUN_08009228",
                "FUN_08009278",
                "FUN_08008eec",
                "FUN_08008cdc",
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003980": {
            "entrypoint": "0x08003980",
            "current_name": "reset_data_08003980",
            "code": "\nvoid resetData_08003980(void)\n\n{\n  DAT_20000e10 = 0;\n  DAT_20000e11 = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003980": "reset_data_08003980"
            },
            "calling": [
                "FUN_080039a0",
                "FUN_08003f34"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080039a0": {
            "entrypoint": "0x080039a0",
            "current_name": "initialize_application_080039a0",
            "code": "\nvoid initializeApplication_080039a0(void)\n\n{\n  FUN_08003980();\n  FUN_08004228();\n  DAT_20000e50 = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080039a0": "initialize_application_080039a0"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08004228",
                "FUN_08003980"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080039bc": {
            "entrypoint": "0x080039bc",
            "current_name": "process_data_080039bc",
            "code": "\nvoid processData_080039bc(void)\n\n{\n  int result;\n  undefined4 returnValue;\n  byte counter;\n  \n  for (counter = 0; counter < 2; counter = counter + 1) {\n    result = FUN_08004d2c(counter,&DAT_20000d10);\n    if (result == 0) {\n      FUN_08004030(10);\n    }\n    else if (DAT_20000d10 != '\\0') {\n      FUN_0800369c(&DAT_20000d10);\n      returnValue = FUNC_080005b4(&DAT_20000d10);\n      FUN_08004030(returnValue);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080039bc": "process_data_080039bc",
                "iVar1": "result",
                "uVar2": "returnValue",
                "local_9": "counter"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_0800369c",
                "FUN_080005b4",
                "FUN_08004030",
                "FUN_08004d2c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a18": {
            "entrypoint": "0x08003a18",
            "current_name": "check_bit_flags_08003a18",
            "code": "\nvoid checkBitFlags_08003a18(uint flags)\n\n{\n  if ((flags & 0x80) == 0) {\n    if ((flags & 0x40) == 0) {\n      if ((flags & 0x20) != 0) {\n        DAT_20000eaa = DAT_20000eaa | 2;\n      }\n    }\n    else {\n      DAT_20000eaa = DAT_20000eaa | 8;\n    }\n  }\n  else {\n    FUN_080025e8();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003a18": "check_bit_flags_08003a18",
                "param_1": "flags"
            },
            "calling": [
                "FUN_080074c8"
            ],
            "called": [
                "FUN_080025e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a74": {
            "entrypoint": "0x08003a74",
            "current_name": "initialize_device_08003a74",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08003ad2) */\n\nvoid initializeDevice_08003a74(void)\n\n{\n  byte byteValue;\n  \n  byteValue = DAT_20000eaa;\n  if (DAT_20000eaa != 0) {\n    if ((DAT_20000eaa & 0x60) != 0) {\n      DAT_20000ea9 = 6;\n      if ((DAT_20000eaa & 0x40) != 0) {\n        FUN_08004148(0xffffffff);\n        FUN_080041a0(1);\n        do {\n        } while( true );\n      }\n      FUN_08004148(0xfffffffe);\n      DAT_20000eaa = DAT_20000eaa & 0x9f;\n    }\n    if ((byteValue & 0x10) == 0) {\n      if ((byteValue & 1) != 0) {\n        FUN_08004940();\n        DAT_20000eaa = DAT_20000eaa & 0xfe;\n      }\n      if ((byteValue & 8) != 0) {\n        FUN_0800587c();\n        DAT_20000eaa = DAT_20000eaa & 0xf7;\n      }\n      if ((byteValue & 4) != 0) {\n        FUN_080058a0();\n        DAT_20000eaa = DAT_20000eaa & 0xfb;\n      }\n      if ((byteValue & 2) != 0) {\n        FUN_0800585c();\n        if ((DAT_20000ee4 & 2) != 0) {\n          DAT_20000eb8 = 1;\n        }\n        DAT_20000eaa = DAT_20000eaa & 0xfd;\n      }\n    }\n    else {\n      DAT_20000ea8 = 1;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003a74": "initialize_device_08003a74",
                "bVar1": "byteValue"
            },
            "calling": [
                "FUN_08001e98",
                "FUN_08002408",
                "FUN_08003f34",
                "FUN_08001ddc",
                "FUN_08002fd4",
                "FUN_080024c4"
            ],
            "called": [
                "FUN_080058a0",
                "FUN_0800585c",
                "FUN_08004940",
                "FUN_0800587c",
                "FUN_080041a0",
                "FUN_08004148"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003b98": {
            "entrypoint": "0x08003b98",
            "current_name": "process_input_08003b98",
            "code": "\nuint processInput_08003b98(char *inputString)\n\n{\n  byte firstCharacter;\n  int returnValue;\n  undefined4 convertedValue;\n  uint result;\n  undefined8 tempValue;\n  undefined4 value1;\n  undefined4 value2;\n  byte index;\n  byte flag;\n  \n  if (*inputString != '$') {\n    result = FUNC_080005b4(inputString);\n    return result;\n  }\n  index = 1;\n  flag = '\\0';\n  firstCharacter = inputString[1];\n  if (firstCharacter == 0) {\n    FUN_0800423c();\n    return 0;\n  }\n  if ((0x58 < firstCharacter) || (firstCharacter < 0x23)) goto switchD_08003bdc_caseD_25;\n  switch(firstCharacter) {\n  case 0x23:\n    index = 2;\n    if (inputString[2] != '\\0') {\n      return 3;\n    }\n    FUN_080044e8();\n    break;\n  case 0x24:\n    index = 2;\n    if (inputString[2] != '\\0') {\n      return 3;\n    }\n    FUN_08004250();\n    break;\n  case 0x43:\n    index = 2;\n    if (inputString[2] != '\\0') {\n      return 3;\n    }\n    if (DAT_20000ea9 == '\\a') {\n      FUN_080025e8();\n      FUN_080041a0(5);\n    }\n    else {\n      if (DAT_20000ea9 != '\\0') {\n        return 0xb;\n      }\n      DAT_20000ea9 = '\\a';\n      FUN_080041a0(4);\n    }\n    break;\n  case 0x47:\n    index = 2;\n    if (inputString[2] != '\\0') {\n      return 3;\n    }\n    FUN_080046d0();\n    break;\n  case 0x48:\n    if ((DAT_20000ee4 & 0x10) == 0) {\n      return 7;\n    }\n    if ((DAT_20000ea9 != '\\0') && (DAT_20000ea9 != '\\x06')) {\n      return 0xb;\n    }\n    FUN_080024c4();\n    if (DAT_20000ea8 == '\\0') {\n      FUN_080039bc();\n    }\n    break;\n  case 0x4e:\n    index = 2;\n    if (inputString[2] == '\\0') {\n      for (flag = 0; flag < 2; flag = flag + 1) {\n        returnValue = FUN_08004d2c(flag,inputString);\n        if (returnValue == 0) {\n          FUN_08004030(10);\n        }\n        else {\n          FUN_08004900(flag,inputString);\n        }\n      }\n      return 0;\n    }\n    flag = '\\x01';\n  default:\nswitchD_08003bdc_caseD_25:\n    returnValue = FUN_08002638(inputString,&index,&value2);\n    if (returnValue == 0) {\n      return 1;\n    }\n    firstCharacter = index + 1;\n    if (inputString[index] != '=') {\n      return 3;\n    }\n    index = firstCharacter;\n    if (flag == '\\0') {\n      returnValue = FUN_08002638(inputString,&index,&value1);\n      if (returnValue == 0) {\n        return 1;\n      }\n      if (inputString[index] == '\\0') {\n        convertedValue = FUN_08009278(value2);\n        result = FUN_08004e30(convertedValue,value1);\n        return result;\n      }\n      return 3;\n    }\n    do {\n      inputString[(uint)index - (uint)firstCharacter] = inputString[index];\n      result = (uint)index;\n      index = index + 1;\n    } while (inputString[result] != '\\0');\n    flag = firstCharacter;\n    flag = FUNC_080005b4(inputString);\n    if (flag != 0) {\n      return (uint)flag;\n    }\n    tempValue = FUN_08008590(value2);\n    tempValue = FUN_08009798((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    flag = FUN_08008bf0((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    FUN_08004bc0(flag,inputString);\n    break;\n  case 0x58:\n    index = 2;\n    if (inputString[2] != '\\0') {\n      return 3;\n    }\n    if (DAT_20000ea9 == '\\x06') {\n      FUN_080041a0(3);\n      DAT_20000ea9 = '\\0';\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003b98": "process_input_08003b98",
                "param_1": "inputString",
                "bVar1": "firstCharacter",
                "iVar2": "returnValue",
                "uVar3": "convertedValue",
                "uVar4": "result",
                "uVar5": "tempValue",
                "local_14": "value1",
                "local_10": "value2",
                "local_a": "index",
                "local_9": "flag"
            },
            "calling": [
                "FUN_08003f34"
            ],
            "called": [
                "FUN_0800423c",
                "FUN_08004bc0",
                "FUN_08002638",
                "FUN_08009798",
                "FUN_08004900",
                "FUN_080025e8",
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_080046d0",
                "FUN_080039bc",
                "FUN_08008bf0",
                "FUN_08004d2c",
                "FUN_08008590",
                "FUN_08004250",
                "FUN_08009278",
                "FUN_080044e8",
                "FUN_08004030",
                "FUN_080041a0",
                "FUN_080024c4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f34": {
            "entrypoint": "0x08003f34",
            "current_name": "parse_input_08003f34",
            "code": "\nvoid parseInput_08003f34(void)\n\n{\n  byte inputByte;\n  undefined4 result;\n  uint index;\n  \n  while( true ) {\n    while( true ) {\n      inputByte = FUN_08008286();\n      if (inputByte == 0xff) {\n        return;\n      }\n      if ((inputByte == 10) || (inputByte == 0xd)) break;\n      if (DAT_20000e11 == '\\0') {\n        if ((0x20 < inputByte) && (inputByte != 0x2f)) {\n          if (inputByte == 0x28) {\n            DAT_20000e11 = '\\x01';\n          }\n          else if (DAT_20000e10 == 0xff) {\n            FUN_08004030(0xd);\n            FUN_08003980();\n          }\n          else if ((inputByte < 0x61) || (0x7a < inputByte)) {\n            index = (uint)DAT_20000e10;\n            DAT_20000e10 = DAT_20000e10 + 1;\n            (&DAT_20000d10)[index] = inputByte;\n          }\n          else {\n            index = (uint)DAT_20000e10;\n            DAT_20000e10 = DAT_20000e10 + 1;\n            (&DAT_20000d10)[index] = inputByte - 0x20;\n          }\n        }\n      }\n      else if (inputByte == 0x29) {\n        DAT_20000e11 = '\\0';\n      }\n    }\n    FUN_08003a74();\n    if (DAT_20000ea8 != '\\0') break;\n    if (DAT_20000e10 == 0) {\n      FUN_08004030(0);\n    }\n    else {\n      (&DAT_20000d10)[DAT_20000e10] = 0;\n      result = FUN_08003b98(&DAT_20000d10);\n      FUN_08004030(result);\n    }\n    FUN_08003980();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f34": "parse_input_08003f34",
                "bVar1": "inputByte",
                "uVar2": "result",
                "uVar3": "index"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08003b98",
                "FUN_08003a74",
                "FUN_08008286",
                "FUN_08004030",
                "FUN_08003980"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004030": {
            "entrypoint": "0x08004030",
            "current_name": "display_error_message_08004030",
            "code": "\nvoid displayErrorMessage_08004030(char errorCode)\n\n{\n  if (errorCode == '\\0') {\n    FUN_080036c6(&DAT_0800b5c8);\n  }\n  else {\n    FUN_080036c6(\"error: \");\n    switch(errorCode) {\n    case '\\x01':\n      FUN_080036c6(\"Bad number format\");\n      break;\n    case '\\x02':\n      FUN_080036c6(\"Expected command letter\");\n      break;\n    case '\\x03':\n      FUN_080036c6(\"Unsupported statement\");\n      break;\n    case '\\x04':\n      FUN_080036c6(\"Invalid radius\");\n      break;\n    case '\\x05':\n      FUN_080036c6(\"Modal group violation\");\n      break;\n    case '\\x06':\n      FUN_080036c6(\"Invalid statement\");\n      break;\n    case '\\a':\n      FUN_080036c6(\"Setting disabled\");\n      break;\n    case '\\b':\n      FUN_080036c6(\"Value < 0.0\");\n      break;\n    case '\\t':\n      FUN_080036c6(\"Value < 3 usec\");\n      break;\n    case '\\n':\n      FUN_080036c6(\"EEPROM read fail. Using defaults\");\n      break;\n    case '\\v':\n      FUN_080036c6(\"Busy or queued\");\n      break;\n    case '\\f':\n      FUN_080036c6(\"Alarm lock\");\n      break;\n    case '\\r':\n      FUN_080036c6(\"Line overflow\");\n    }\n    FUN_080036c6(&DAT_0800b6d8);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004030": "display_error_message_08004030",
                "param_1": "errorCode"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080004ac",
                "FUN_080044e8",
                "FUN_08003f34",
                "FUN_080039bc",
                "FUN_080051b4"
            ],
            "called": [
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004148": {
            "entrypoint": "0x08004148",
            "current_name": "display_alarm_message_08004148",
            "code": "\nvoid displayAlarmMessage_08004148(char errorType)\n\n{\n  FUN_080036c6(\"ALARM: \");\n  if (errorType == -2) {\n    FUN_080036c6(\"Abort during cycle\");\n  }\n  else if (errorType == -1) {\n    FUN_080036c6(\"Hard limit\");\n  }\n  FUN_080036c6(\". MPos?\\r\\n\");\n  FUNC_08002814(500);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004148": "display_alarm_message_08004148",
                "param_1": "errorType"
            },
            "calling": [
                "FUN_08003a74"
            ],
            "called": [
                "FUN_08002814",
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080041a0": {
            "entrypoint": "0x080041a0",
            "current_name": "display_message_080041a0",
            "code": "\nvoid displayMessage_080041a0(undefined messageType)\n\n{\n  FUN_080036c6(&DAT_0800b710);\n  switch(messageType) {\n  case 1:\n    FUN_080036c6(\"Reset to continue\");\n    break;\n  case 2:\n    FUN_080036c6(\"\\'$H\\'|\\'$X\\' to unlock\");\n    break;\n  case 3:\n    FUN_080036c6(\"Caution: Unlocked\");\n    break;\n  case 4:\n    FUN_080036c6(\"Enabled\");\n    break;\n  case 5:\n    FUN_080036c6(\"Disabled\");\n  }\n  FUN_080036c6(&DAT_0800b764);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080041a0": "display_message_080041a0",
                "param_1": "messageType"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_08003a74",
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004228": {
            "entrypoint": "0x08004228",
            "current_name": "display_grbl_version_08004228",
            "code": "\nvoid displayGrblVersion_08004228(void)\n\n{\n  FUN_080036c6(\"\\r\\nGrbl 0.8c [\\'$\\' for help]\\r\\n\");\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004228": "display_grbl_version_08004228"
            },
            "calling": [
                "FUN_080039a0"
            ],
            "called": [
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800423c": {
            "entrypoint": "0x0800423c",
            "current_name": "print_grbl_settings_0800423c",
            "code": "\nvoid printGrblSettings_0800423c(void)\n\n{\n  FUN_080036c6(\n              \"$$ (view Grbl settings)\\r\\n$# (view # parameters)\\r\\n$G (view parser state)\\r\\n$N (view startup blocks)\\r\\n$x=value (save Grbl setting)\\r\\n$Nx=line (save startup block)\\r\\n$C (check gcode mode)\\r\\n$X (kill alarm lock)\\r\\n$H (run homing cycle)\\r\\n~ (cycle start)\\r\\n! (feed hold)\\r\\n? (current status)\\r\\nctrl-x (reset Grbl)\\r\\n\"\n              );\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800423c": "print_grbl_settings_0800423c"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004250": {
            "entrypoint": "0x08004250",
            "current_name": "print_settings_08004250",
            "code": "\nvoid printSettings_08004250(void)\n\n{\n  undefined4 acceleration;\n  \n  FUN_080036c6(&DAT_0800b8b8);\n  FUN_08003826(DAT_20000ebc);\n  FUN_080036c6(\" (x, step/mm)\\r\\n$1=\");\n  FUN_08003826(DAT_20000ec0);\n  FUN_080036c6(\" (y, step/mm)\\r\\n$2=\");\n  FUN_08003826(DAT_20000ec4);\n  FUN_080036c6(\" (z, step/mm)\\r\\n$3=\");\n  FUN_080037fc(DAT_20000ec9);\n  FUN_080036c6(\" (step pulse, usec)\\r\\n$4=\");\n  FUN_08003826(DAT_20000ecc);\n  FUN_080036c6(\" (default feed, mm/min)\\r\\n$5=\");\n  FUN_08003826(DAT_20000ed0);\n  FUN_080036c6(\" (default seek, mm/min)\\r\\n$6=\");\n  FUN_080037fc(DAT_20000ed4);\n  FUN_080036c6(\" (step port invert mask, int:\");\n  FUN_0800375c(DAT_20000ed4);\n  FUN_080036c6(\")\\r\\n$7=\");\n  FUN_080037fc(DAT_20000ef8);\n  FUN_080036c6(\" (step idle delay, msec)\\r\\n$8=\");\n  acceleration = FUN_08009054(DAT_20000edc,0x45610000);\n  FUN_08003826(acceleration);\n  FUN_080036c6(\" (acceleration, mm/sec^2)\\r\\n$9=\");\n  FUN_08003826(DAT_20000ee0);\n  FUN_080036c6(\" (junction deviation, mm)\\r\\n$10=\");\n  FUN_08003826(DAT_20000ed8);\n  FUN_080036c6(\" (arc, mm/segment)\\r\\n$11=\");\n  FUN_080037fc(DAT_20000efa);\n  FUN_080036c6(\" (n-arc correction, int)\\r\\n$12=\");\n  FUN_080037fc(DAT_20000ef9);\n  FUN_080036c6(\" (n-decimals, int)\\r\\n$13=\");\n  FUN_080037fc((DAT_20000ee4 & 1) != 0);\n  FUN_080036c6(\" (report inches, bool)\\r\\n$14=\");\n  FUN_080037fc((DAT_20000ee4 & 2) != 0);\n  FUN_080036c6(\" (auto start, bool)\\r\\n$15=\");\n  FUN_080037fc((DAT_20000ee4 & 4) != 0);\n  FUN_080036c6(\" (invert step enable, bool)\\r\\n$16=\");\n  FUN_080037fc((DAT_20000ee4 & 8) != 0);\n  FUN_080036c6(\" (hard limits, bool)\\r\\n$17=\");\n  FUN_080037fc((DAT_20000ee4 & 0x10) != 0);\n  FUN_080036c6(\" (homing cycle, bool)\\r\\n$18=\");\n  FUN_080037fc(DAT_20000ee6);\n  FUN_080036c6(\" (homing dir invert mask, int:\");\n  FUN_0800375c(DAT_20000ee6);\n  FUN_080036c6(\")\\r\\n$19=\");\n  FUN_08003826(DAT_20000ee8);\n  FUN_080036c6(\" (homing feed, mm/min)\\r\\n$20=\");\n  FUN_08003826(DAT_20000eec);\n  FUN_080036c6(\" (homing seek, mm/min)\\r\\n$21=\");\n  FUN_080037fc(DAT_20000ef0);\n  FUN_080036c6(\" (homing debounce, msec)\\r\\n$22=\");\n  FUN_08003826(DAT_20000ef4);\n  FUN_080036c6(\" (homing pull-off, mm)\\r\\n$23=\");\n  FUN_080037fc(DAT_20000ed6);\n  FUN_080036c6(\" (dir port invert mask, int:\");\n  FUN_0800375c(DAT_20000ed6);\n  FUN_080036c6(&DAT_0800bb94);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004250": "print_settings_08004250",
                "uVar1": "acceleration"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080051b4"
            ],
            "called": [
                "FUN_08003826",
                "FUN_08009054",
                "FUN_080037fc",
                "FUN_080036c6",
                "FUN_0800375c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080044e8": {
            "entrypoint": "0x080044e8",
            "current_name": "process_data_080044e8",
            "code": "\nvoid processData_080044e8(void)\n\n{\n  int result;\n  undefined4 processedValue;\n  undefined8 tempValue;\n  undefined4 stackValues [3];\n  byte index;\n  byte iteration;\n  \n  iteration = 0;\n  while( true ) {\n    if (7 < iteration) {\n      FUN_080036c6(\"[G92:\");\n      for (index = 0; index < 3; index = index + 1) {\n        if ((DAT_20000ee4 & 1) == 0) {\n          FUN_08003826(*(undefined4 *)(&DAT_20000e74 + (index + 10) * 4));\n        }\n        else {\n          tempValue = FUN_08008590(*(undefined4 *)(&DAT_20000e74 + (index + 10) * 4));\n          tempValue = FUN_08008640((int)tempValue,(int)((ulonglong)tempValue >> 0x20),0x57e16865,0x3fa42851);\n          processedValue = FUN_08008c30((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n          FUN_08003826(processedValue);\n        }\n        if (index < 2) {\n          FUN_080036c6(&DAT_0800bbbc);\n        }\n        else {\n          FUN_080036c6(&DAT_0800b764);\n        }\n      }\n      return;\n    }\n    result = FUN_08004d7c(iteration,stackValues);\n    if (result == 0) break;\n    FUN_080036c6(&DAT_0800bb98);\n    switch(iteration) {\n    case 0:\n      FUN_080036c6(&DAT_0800bb9c);\n      break;\n    case 1:\n      FUN_080036c6(&DAT_0800bba0);\n      break;\n    case 2:\n      FUN_080036c6(&DAT_0800bba4);\n      break;\n    case 3:\n      FUN_080036c6(&DAT_0800bba8);\n      break;\n    case 4:\n      FUN_080036c6(&DAT_0800bbac);\n      break;\n    case 5:\n      FUN_080036c6(&DAT_0800bbb0);\n      break;\n    case 6:\n      FUN_080036c6(&DAT_0800bbb4);\n      break;\n    case 7:\n      FUN_080036c6(&DAT_0800bbb8);\n    }\n    for (index = 0; index < 3; index = index + 1) {\n      if ((DAT_20000ee4 & 1) == 0) {\n        FUN_08003826(stackValues[index]);\n      }\n      else {\n        tempValue = FUN_08008590(stackValues[index]);\n        tempValue = FUN_08008640((int)tempValue,(int)((ulonglong)tempValue >> 0x20),0x57e16865,0x3fa42851);\n        processedValue = FUN_08008c30((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n        FUN_08003826(processedValue);\n      }\n      if (index < 2) {\n        FUN_080036c6(&DAT_0800bbbc);\n      }\n      else {\n        FUN_080036c6(&DAT_0800b764);\n      }\n    }\n    iteration = iteration + 1;\n  }\n  FUN_08004030(10);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080044e8": "process_data_080044e8",
                "iVar1": "result",
                "uVar2": "processedValue",
                "uVar3": "tempValue",
                "auStack_18": "stackValues",
                "local_a": "index",
                "local_9": "iteration"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08003826",
                "FUN_08004d7c",
                "FUN_08008640",
                "FUN_08004030",
                "FUN_080036c6",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080046d0": {
            "entrypoint": "0x080046d0",
            "current_name": "process_data_080046d0",
            "code": "\nvoid processData_080046d0(void)\n\n{\n  undefined4 result1;\n  undefined8 result2;\n  \n  switch(DAT_20000e71) {\n  case 0:\n    FUN_080036c6(&DAT_0800bbc8);\n    break;\n  case 1:\n    FUN_080036c6(&DAT_0800bbcc);\n    break;\n  case 2:\n    FUN_080036c6(&DAT_0800bbd0);\n    break;\n  case 3:\n    FUN_080036c6(&DAT_0800bbd4);\n    break;\n  case 4:\n    FUN_080036c6(&DAT_0800bbd8);\n  }\n  FUN_080036c6(&DAT_0800bbe0);\n  FUN_080037fc(DAT_20000e8c + 0x36);\n  if (DAT_20000e89 == '\\0') {\n    if (DAT_20000e8a == '\\x01') {\n      FUN_080036c6(&DAT_0800bbe4);\n    }\n    else {\n      FUN_080036c6(&DAT_0800bbec);\n    }\n  }\n  else {\n    FUN_080036c6(&DAT_0800bbf4);\n  }\n  if (DAT_20000e73 == '\\0') {\n    FUN_080036c6(&DAT_0800bc04);\n  }\n  else {\n    FUN_080036c6(&DAT_0800bbfc);\n  }\n  if (DAT_20000e74 == '\\0') {\n    FUN_080036c6(&DAT_0800bc14);\n  }\n  else {\n    FUN_080036c6(&DAT_0800bc0c);\n  }\n  if (DAT_20000e72 == '\\0') {\n    FUN_080036c6(&DAT_0800bc24);\n  }\n  else {\n    FUN_080036c6(&DAT_0800bc1c);\n  }\n  if (DAT_20000e75 == 2) {\n    FUN_080036c6(&DAT_0800bc34);\n  }\n  else if (DAT_20000e75 < 3) {\n    if (DAT_20000e75 == 0) {\n      FUN_080036c6(&DAT_0800bc2c);\n    }\n    else if (DAT_20000e75 == 1) {\n      FUN_080036c6(&DAT_0800bc30);\n    }\n  }\n  if (DAT_20000e76 == '\\x01') {\n    FUN_080036c6(&DAT_0800bc38);\n  }\n  else if (DAT_20000e76 < '\\x02') {\n    if (DAT_20000e76 == -1) {\n      FUN_080036c6(&DAT_0800bc3c);\n    }\n    else if (DAT_20000e76 == '\\0') {\n      FUN_080036c6(&DAT_0800bc40);\n    }\n  }\n  if (DAT_20000e77 == 2) {\n    FUN_080036c6(&DAT_0800bc4c);\n  }\n  else if (DAT_20000e77 < 3) {\n    if (DAT_20000e77 == 0) {\n      FUN_080036c6(&DAT_0800bc44);\n    }\n    else if (DAT_20000e77 == 1) {\n      FUN_080036c6(&DAT_0800bc48);\n    }\n  }\n  FUN_080036c6(&DAT_0800bc50);\n  FUN_080037fc(DAT_20000e88);\n  FUN_080036c6(&DAT_0800bc54);\n  if (DAT_20000e73 == '\\0') {\n    FUN_08003826(DAT_20000e78);\n  }\n  else {\n    result2 = FUN_08008590(DAT_20000e78);\n    result2 = FUN_08008640((int)result2,(int)((ulonglong)result2 >> 0x20),0x57e16865,0x3fa42851);\n    result1 = FUN_08008c30((int)result2,(int)((ulonglong)result2 >> 0x20));\n    FUN_08003826(result1);\n  }\n  FUN_080036c6(&DAT_0800b764);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080046d0": "process_data_080046d0",
                "uVar1": "result1",
                "uVar2": "result2"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08003826",
                "FUN_080037fc",
                "FUN_08008640",
                "FUN_080036c6",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004900": {
            "entrypoint": "0x08004900",
            "current_name": "initialize_binary_data_08004900",
            "code": "\nvoid initializeBinaryData_08004900(undefined undefinedParam1,undefined4 undefinedParam2)\n\n{\n  FUN_080036c6(&DAT_0800bc58);\n  FUN_080037fc(undefinedParam1);\n  FUN_080036c6(&DAT_0800bc5c);\n  FUN_0800369c(undefinedParam2);\n  FUN_080036c6(&DAT_0800b6d8);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004900": "initialize_binary_data_08004900",
                "param_1": "undefinedParam1",
                "param_2": "undefinedParam2"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_0800369c",
                "FUN_080037fc",
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004940": {
            "entrypoint": "0x08004940",
            "current_name": "print_machine_status_08004940",
            "code": "\nvoid printMachineStatus_08004940(void)\n\n{\n  undefined4 temp1;\n  uint temp2;\n  undefined4 temp3;\n  undefined8 temp4;\n  undefined8 temp5;\n  undefined4 statusArray [6];\n  byte index;\n  \n  statusArray[3] = DAT_20000eac;\n  statusArray[4] = DAT_20000eb0;\n  statusArray[5] = DAT_20000eb4;\n  switch(DAT_20000ea9) {\n  case 0:\n    FUN_080036c6(\"<Idle\");\n    break;\n  case 2:\n    FUN_080036c6(\"<Queue\");\n    break;\n  case 3:\n    FUN_080036c6(&DAT_0800bc70);\n    break;\n  case 4:\n    FUN_080036c6(\"<Hold\");\n    break;\n  case 5:\n    FUN_080036c6(\"<Home\");\n    break;\n  case 6:\n    FUN_080036c6(\"<Alarm\");\n    break;\n  case 7:\n    FUN_080036c6(\"<Check\");\n  }\n  FUN_080036c6(\",MPos:\");\n  for (index = 0; index < 3; index = index + 1) {\n    temp1 = FUN_08008e44(statusArray[index + 3]);\n    temp2 = (uint)index;\n    temp1 = FUN_08009054(temp1,(&DAT_20000ebc)[index]);\n    statusArray[temp2] = temp1;\n    if ((DAT_20000ee4 & 1) != 0) {\n      temp4 = FUN_08008590(statusArray[index]);\n      temp4 = FUN_08008640((int)temp4,(int)((ulonglong)temp4 >> 0x20),0x57e16865,0x3fa42851);\n      temp2 = (uint)index;\n      temp1 = FUN_08008c30((int)temp4,(int)((ulonglong)temp4 >> 0x20));\n      statusArray[temp2] = temp1;\n    }\n    FUN_08003826(statusArray[index]);\n    FUN_080036c6(&DAT_0800bbbc);\n  }\n  FUN_080036c6(\"WPos:\");\n  for (index = 0; index < 3; index = index + 1) {\n    if ((DAT_20000ee4 & 1) == 0) {\n      temp3 = statusArray[index];\n      temp1 = FUN_08008cdc(*(undefined4 *)(&DAT_20000e70 + (index + 8) * 4),\n                           *(undefined4 *)(&DAT_20000e74 + (index + 10) * 4));\n      temp2 = (uint)index;\n      temp1 = FUN_08008cd8(temp3,temp1);\n      statusArray[temp2] = temp1;\n    }\n    else {\n      temp4 = FUN_08008590(statusArray[index]);\n      temp1 = FUN_08008cdc(*(undefined4 *)(&DAT_20000e70 + (index + 8) * 4),\n                           *(undefined4 *)(&DAT_20000e74 + (index + 10) * 4));\n      temp5 = FUN_08008590(temp1);\n      temp5 = FUN_08008640((int)temp5,(int)((ulonglong)temp5 >> 0x20),0x57e16865,0x3fa42851);\n      temp4 = FUN_080082d0((int)temp4,(int)((ulonglong)temp4 >> 0x20),(int)temp5,\n                           (int)((ulonglong)temp5 >> 0x20));\n      temp2 = (uint)index;\n      temp1 = FUN_08008c30((int)temp4,(int)((ulonglong)temp4 >> 0x20));\n      statusArray[temp2] = temp1;\n    }\n    FUN_08003826(statusArray[index]);\n    if (index < 2) {\n      FUN_080036c6(&DAT_0800bbbc);\n    }\n  }\n  FUN_080036c6(&DAT_0800bca8);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004940": "print_machine_status_08004940",
                "auStack_2c": "statusArray",
                "local_11": "index",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "uVar3": "temp3",
                "uVar4": "temp4",
                "uVar5": "temp5"
            },
            "calling": [
                "FUN_08003a74"
            ],
            "called": [
                "FUN_08008590",
                "FUN_080082d0",
                "FUN_08008cd8",
                "FUN_08003826",
                "FUN_08008e44",
                "FUN_08009054",
                "FUN_08008cdc",
                "FUN_08008640",
                "FUN_08008c30",
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004bc0": {
            "entrypoint": "0x08004bc0",
            "current_name": "process_byte_data_08004bc0",
            "code": "\nvoid process_byte_data_08004bc0(byte byte_data,undefined4 param_value)\n\n{\n  FUN_08000374((ushort)byte_data * 0x101 + 0x300,param_value,0x100);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004bc0": "process_byte_data_08004bc0",
                "param_1": "byte_data",
                "param_2": "param_value"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_08004d2c"
            ],
            "called": [
                "FUN_08000374"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004bf4": {
            "entrypoint": "0x08004bf4",
            "current_name": "calculate_offset_and_send_08004bf4",
            "code": "\nvoid calculateOffsetAndSend_08004bf4(byte inputByte,undefined4 inputValue)\n\n{\n  FUN_08000374((unsignedShort)inputByte * 0xd + 0x200,inputValue,0xc);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004bf4": "calculate_offset_and_send_08004bf4",
                "param_1": "inputByte",
                "param_2": "inputValue",
                "ushort": "unsignedShort"
            },
            "calling": [
                "FUN_08004d7c",
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08000374"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c2a": {
            "entrypoint": "0x08004c2a",
            "current_name": "initialize_data_08004c2a",
            "code": "\nvoid initializeData_08004c2a(void)\n\n{\n  FUN_08000340(0,5);\n  FUN_08000374(1,&DAT_20000ebc,0x40);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c2a": "initialize_data_08004c2a"
            },
            "calling": [
                "FUN_08004e30",
                "FUN_08004c48"
            ],
            "called": [
                "FUN_08000374",
                "FUN_08000340"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c48": {
            "entrypoint": "0x08004c48",
            "current_name": "initialize_data_08004c48",
            "code": "\nvoid initializeData_08004c48(char inputParameter)\n\n{\n  if (inputParameter != '\\0') {\n    DAT_20000ebc = 0x431d7af6;\n    DAT_20000ec0 = 0x431d7af6;\n    DAT_20000ec4 = 0x431d7af6;\n    DAT_20000ec9 = 10;\n    DAT_20000ecc = 0x437a0000;\n    DAT_20000ed0 = 0x43fa0000;\n    DAT_20000edc = 0x470ca000;\n    DAT_20000ed8 = 0x3dcccccd;\n    DAT_20000ed4 = 0;\n    DAT_20000ed6 = 0xa80;\n    DAT_20000ee0 = 0x3d4ccccd;\n  }\n  DAT_20000ee4 = 0x12;\n  DAT_20000ee6 = 0;\n  DAT_20000ee8 = 0x41c80000;\n  DAT_20000eec = 0x437a0000;\n  DAT_20000ef0 = 100;\n  DAT_20000ef4 = 0x3f800000;\n  DAT_20000ef8 = 0x19;\n  DAT_20000ef9 = 3;\n  DAT_20000efa = 0x19;\n  FUN_08004c2a();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c48": "initialize_data_08004c48",
                "param_1": "inputParameter"
            },
            "calling": [
                "FUN_08004dd2",
                "FUN_080051b4"
            ],
            "called": [
                "FUN_08004c2a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d2c": {
            "entrypoint": "0x08004d2c",
            "current_name": "validate_and_call_function_08004d2c",
            "code": "\nbool validate_and_call_function_08004d2c(byte input_byte,undefined *output_buffer)\n\n{\n  int result;\n  \n  result = FUN_080003ec(output_buffer,(ushort)input_byte * 0x101 + 0x300,0x100);\n  if (result == 0) {\n    *output_buffer = 0;\n    FUN_08004bc0(input_byte,output_buffer);\n  }\n  return result != 0;\n}\n\n",
            "renaming": {
                "FUN_08004d2c": "validate_and_call_function_08004d2c",
                "param_1": "input_byte",
                "param_2": "output_buffer",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080039bc"
            ],
            "called": [
                "FUN_08004bc0",
                "FUN_080003ec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d7c": {
            "entrypoint": "0x08004d7c",
            "current_name": "validate_and_process_08004d7c",
            "code": "\nbool validateAndProcess_08004d7c(byte byteInput,undefined4 funcParam)\n\n{\n  int resultCode;\n  \n  resultCode = FUN_080003ec(funcParam,(ushort)byteInput * 0xd + 0x200,0xc);\n  if (resultCode == 0) {\n    FUN_0800b430(funcParam,0,0xc);\n    FUN_08004bf4(byteInput,funcParam);\n  }\n  return resultCode != 0;\n}\n\n",
            "renaming": {
                "FUN_08004d7c": "validate_and_process_08004d7c",
                "param_1": "byteInput",
                "param_2": "funcParam",
                "iVar1": "resultCode"
            },
            "calling": [
                "FUN_080004ac",
                "FUN_080005b4",
                "FUN_080044e8",
                "FUN_080051b4"
            ],
            "called": [
                "FUN_0800b430",
                "FUN_080003ec",
                "FUN_08004bf4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004dd2": {
            "entrypoint": "0x08004dd2",
            "current_name": "initialize_data_08004dd2",
            "code": "\nundefined4 initializeData_08004dd2(void)\n\n{\n  byte result;\n  int returnValue;\n  \n  result = FUN_08000310(0);\n  if (result == 5) {\n    returnValue = FUN_080003ec(&DAT_20000ebc,1,0x40);\n    if (returnValue == 0) {\n      return 0;\n    }\n  }\n  else {\n    if (4 < result) {\n      return 0;\n    }\n    returnValue = FUN_080003ec(&DAT_20000ebc,1,0x28);\n    if (returnValue == 0) {\n      return 0;\n    }\n    FUN_08004c48(0);\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08004dd2": "initialize_data_08004dd2",
                "bVar1": "result",
                "iVar2": "returnValue"
            },
            "calling": [
                "FUN_080051b4"
            ],
            "called": [
                "FUN_080003ec",
                "FUN_08000310",
                "FUN_08004c48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e30": {
            "entrypoint": "0x08004e30",
            "current_name": "set_config_value_08004e30",
            "code": "\nundefined4 setConfigValue_08004e30(int configType,uint configValue)\n\n{\n  undefined4 result;\n  int error;\n  undefined8 tempVar;\n  \n  switch(configType) {\n  case 0:\n  case 1:\n  case 2:\n    error = FUN_0800923c(configValue,0);\n    if (error != 0) {\n      return 8;\n    }\n    (&DAT_20000ebc)[configType] = configValue;\n    break;\n  case 3:\n    error = FUN_08009228(configValue,0x40400000);\n    if (error != 0) {\n      return 9;\n    }\n    tempVar = FUN_08008590(configValue);\n    tempVar = FUN_08009654((int)tempVar,(int)((ulonglong)tempVar >> 0x20));\n    DAT_20000ec9 = FUN_08008bf0((int)tempVar,(int)((ulonglong)tempVar >> 0x20));\n    break;\n  case 4:\n    DAT_20000ecc = configValue;\n    break;\n  case 5:\n    DAT_20000ed0 = configValue;\n    break;\n  case 6:\n    tempVar = FUN_08008590(configValue);\n    tempVar = FUN_08009798((int)tempVar,(int)((ulonglong)tempVar >> 0x20));\n    DAT_20000ed4 = FUN_08008bf0((int)tempVar,(int)((ulonglong)tempVar >> 0x20));\n    break;\n  case 7:\n    tempVar = FUN_08008590(configValue);\n    tempVar = FUN_08009654((int)tempVar,(int)((ulonglong)tempVar >> 0x20));\n    DAT_20000ef8 = FUN_08008bf0((int)tempVar,(int)((ulonglong)tempVar >> 0x20));\n    break;\n  case 8:\n    result = FUN_08008eec(configValue,0x42700000);\n    DAT_20000edc = FUN_08008eec(result,0x42700000);\n    break;\n  case 9:\n    DAT_20000ee0 = configValue & 0x7fffffff;\n    break;\n  case 10:\n    DAT_20000ed8 = configValue;\n    break;\n  case 0xb:\n    tempVar = FUN_08008590(configValue);\n    tempVar = FUN_08009654((int)tempVar,(int)((ulonglong)tempVar >> 0x20));\n    DAT_20000efa = FUN_08008bf0((int)tempVar,(int)((ulonglong)tempVar >> 0x20));\n    break;\n  case 0xc:\n    tempVar = FUN_08008590(configValue);\n    tempVar = FUN_08009654((int)tempVar,(int)((ulonglong)tempVar >> 0x20));\n    DAT_20000ef9 = FUN_08008bf0((int)tempVar,(int)((ulonglong)tempVar >> 0x20));\n    break;\n  case 0xd:\n    error = FUN_08009214(configValue,0);\n    if (error == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 1;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xfe;\n    }\n    break;\n  case 0xe:\n    error = FUN_08009214(configValue,0);\n    if (error == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 2;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xfd;\n    }\n    break;\n  case 0xf:\n    error = FUN_08009214(configValue,0);\n    if (error == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 4;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xfb;\n    }\n    break;\n  case 0x10:\n    error = FUN_08009214(configValue,0);\n    if (error == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 8;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xf7;\n    }\n    FUN_0800192c();\n    break;\n  case 0x11:\n    error = FUN_08009214(configValue,0);\n    if (error == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 0x10;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xef;\n    }\n    break;\n  case 0x12:\n    tempVar = FUN_08008590(configValue);\n    tempVar = FUN_08009798((int)tempVar,(int)((ulonglong)tempVar >> 0x20));\n    DAT_20000ee6 = FUN_08008bf0((int)tempVar,(int)((ulonglong)tempVar >> 0x20));\n    break;\n  case 0x13:\n    DAT_20000ee8 = configValue;\n    break;\n  case 0x14:\n    DAT_20000eec = configValue;\n    break;\n  case 0x15:\n    tempVar = FUN_08008590(configValue);\n    tempVar = FUN_08009654((int)tempVar,(int)((ulonglong)tempVar >> 0x20));\n    DAT_20000ef0 = FUN_08008bf0((int)tempVar,(int)((ulonglong)tempVar >> 0x20));\n    break;\n  case 0x16:\n    DAT_20000ef4 = configValue;\n    break;\n  case 0x17:\n    tempVar = FUN_08008590(configValue);\n    tempVar = FUN_08009798((int)tempVar,(int)((ulonglong)tempVar >> 0x20));\n    DAT_20000ed6 = FUN_08008bf0((int)tempVar,(int)((ulonglong)tempVar >> 0x20));\n    break;\n  default:\n    return 6;\n  }\n  FUN_08004c2a();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004e30": "set_config_value_08004e30",
                "param_1": "configType",
                "param_2": "configValue",
                "uVar1": "result",
                "iVar2": "error",
                "uVar3": "tempVar"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08009228",
                "FUN_08009798",
                "FUN_08009214",
                "FUN_08004c2a",
                "FUN_08008eec",
                "FUN_08009654",
                "FUN_0800923c",
                "FUN_08008bf0",
                "FUN_0800192c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080051b4": {
            "entrypoint": "0x080051b4",
            "current_name": "check_and_process_data_080051b4",
            "code": "\nvoid checkAndProcessData_080051b4(void)\n\n{\n  int result;\n  undefined buffer [15];\n  byte index;\n  \n  result = FUN_08004dd2();\n  if (result == 0) {\n    FUN_08004030(10);\n    FUN_08004c48(1);\n    FUN_08004250();\n  }\n  for (index = 0; index < 8; index = index + 1) {\n    result = FUN_08004d7c(index,buffer);\n    if (result == 0) {\n      FUN_08004030(10);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080051b4": "check_and_process_data_080051b4",
                "auStack_18": "buffer",
                "local_9": "index",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08004250",
                "FUN_08004d7c",
                "FUN_08004dd2",
                "FUN_08004030",
                "FUN_08004c48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005208": {
            "entrypoint": "0x08005208",
            "current_name": "FUNC_08005208",
            "code": "\nvoid FUNC_08005208(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005208": "FUNC_08005208"
            },
            "calling": [
                "FUN_0800525c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005214": {
            "entrypoint": "0x08005214",
            "current_name": "FUNC_08005214",
            "code": "\nvoid FUNC_08005214(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005214": "FUNC_08005214"
            },
            "calling": [
                "FUN_08005250"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005220": {
            "entrypoint": "0x08005220",
            "current_name": "FUNC_08005220",
            "code": "\nvoid FUNC_08005220(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005220": "FUNC_08005220"
            },
            "calling": [
                "FUN_0800525c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800522c": {
            "entrypoint": "0x0800522c",
            "current_name": "FUNC_0800522c",
            "code": "\nvoid FUNC_0800522c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800522c": "FUNC_0800522c"
            },
            "calling": [
                "FUN_0800525c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005238": {
            "entrypoint": "0x08005238",
            "current_name": "initialize_data_08005238",
            "code": "\nvoid initializeData_08005238(void)\n\n{\n  DAT_20000e12 = 0;\n  FUN_08005250();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005238": "initialize_data_08005238"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08005250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005250": {
            "entrypoint": "0x08005250",
            "current_name": "execute_initialization_08005250",
            "code": "\nvoid execute_initialization_08005250(void)\n\n{\n  FUNC_08005214();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005250": "execute_initialization_08005250"
            },
            "calling": [
                "FUN_0800525c",
                "FUN_080025e8",
                "FUN_08005238"
            ],
            "called": [
                "FUN_08005214"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800525c": {
            "entrypoint": "0x0800525c",
            "current_name": "check_and_update_param_0800525c",
            "code": "\nvoid checkAndUpdateParam_0800525c(byte inputParam)\n\n{\n  if ((int)(char)inputParam != (uint)DAT_20000e12) {\n    FUN_08002fd4();\n    if (inputParam == 0) {\n      FUN_08005250();\n      DAT_20000e12 = inputParam;\n    }\n    else {\n      if ((char)inputParam < '\\x01') {\n        FUNC_0800522c();\n      }\n      else {\n        FUNC_08005220();\n      }\n      FUNC_08005208();\n      DAT_20000e12 = inputParam;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800525c": "check_and_update_param_0800525c",
                "param_1": "inputParam"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08005208",
                "FUN_0800522c",
                "FUN_08005250",
                "FUN_08005220",
                "FUN_08002fd4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080052ac": {
            "entrypoint": "0x080052ac",
            "current_name": "update_data_080052ac",
            "code": "\n\n\nvoid update_data_080052ac(uint new_value)\n\n{\n  _DAT_40021014 = new_value | _DAT_40021014 & 0xfffffaaf;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080052ac": "update_data_080052ac",
                "param_1": "new_value"
            },
            "calling": [
                "FUN_0800583c",
                "FUN_08005778",
                "FUN_08005760"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080052dc": {
            "entrypoint": "0x080052dc",
            "current_name": "update_memory_value_080052dc",
            "code": "\n\n\nvoid updateMemoryValue_080052dc(uint inputValue)\n\n{\n  _DAT_40021014 = inputValue | _DAT_40021014 & 0xfffff55f;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080052dc": "update_memory_value_080052dc",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_080053a0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800530c": {
            "entrypoint": "0x0800530c",
            "current_name": "FUNC_0800530c",
            "code": "\nvoid FUNC_0800530c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800530c": "FUNC_0800530c"
            },
            "calling": [
                "FUN_080057e4"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005318": {
            "entrypoint": "0x08005318",
            "current_name": "FUNC_08005318",
            "code": "\nvoid FUNC_08005318(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005318": "FUNC_08005318"
            },
            "calling": [
                "FUN_08005790"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005324": {
            "entrypoint": "0x08005324",
            "current_name": "calculate_and_update_interval_08005324",
            "code": "\nvoid calculateAndUpdateInterval_08005324(uint inputValue)\n\n{\n  uint minInputValue;\n  \n  minInputValue = inputValue;\n  if (inputValue < 800) {\n    minInputValue = 800;\n  }\n  DAT_20000e28 = 1260000000 / minInputValue;\n  FUN_08007bf0(DAT_20000e28);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005324": "calculate_and_update_interval_08005324",
                "param_1": "inputValue",
                "local_14": "minInputValue"
            },
            "calling": [
                "FUN_08005814",
                "FUN_080058a0",
                "FUN_080053a0"
            ],
            "called": [
                "FUN_08007bf0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005360": {
            "entrypoint": "0x08005360",
            "current_name": "calculate_and_check_threshold_overflow_08005360",
            "code": "\nbool calculateAndCheckThresholdOverflow_08005360(void)\n\n{\n  bool isThresholdExceeded;\n  \n  DAT_20000e2c = DAT_20000e28 + DAT_20000e2c;\n  isThresholdExceeded = 420000 < DAT_20000e2c;\n  if (isThresholdExceeded) {\n    DAT_20000e2c = DAT_20000e2c - 420000;\n  }\n  return isThresholdExceeded;\n}\n\n",
            "renaming": {
                "FUN_08005360": "calculate_and_check_threshold_overflow_08005360",
                "bVar1": "isThresholdExceeded"
            },
            "calling": [
                "FUN_080053a0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080053a0": {
            "entrypoint": "0x080053a0",
            "current_name": "update_data_080053a0",
            "code": "\nvoid updateData_080053a0(void)\n\n{\n  int result;\n  \n  FUN_080052dc(DAT_20000e3e);\n  DAT_20000e40 = DAT_20000e3c;\n  if (DAT_20000e38 == (ushort *)0x0) {\n    DAT_20000e38 = (ushort *)FUN_08002f74();\n    if (DAT_20000e38 == (ushort *)0x0) {\n      FUN_080057e4();\n      DAT_20000eaa = DAT_20000eaa | 4;\n    }\n    else {\n      if (DAT_20000ea9 == '\\x03') {\n        DAT_20000e30 = *(uint *)(DAT_20000e38 + 0x14);\n        FUN_08005324(DAT_20000e30);\n        DAT_20000e2c = 210000;\n      }\n      DAT_20000e34 = (*(int *)(DAT_20000e38 + 0x18) >> 1) + *(int *)(DAT_20000e38 + 0x18);\n      DAT_20000e14 = -(*(int *)(DAT_20000e38 + 8) >> 1);\n      DAT_20000e20 = *(int *)(DAT_20000e38 + 8);\n      DAT_20000e24 = 0;\n      DAT_20000e18 = DAT_20000e14;\n      DAT_20000e1c = DAT_20000e14;\n    }\n  }\n  if (DAT_20000e38 != (ushort *)0x0) {\n    DAT_20000e3e = *DAT_20000e38;\n    DAT_20000e3c = 0;\n    DAT_20000e14 = *(int *)(DAT_20000e38 + 2) + DAT_20000e14;\n    if (0 < DAT_20000e14) {\n      DAT_20000e3c = 0x10;\n      DAT_20000e14 = DAT_20000e14 - DAT_20000e20;\n      if ((DAT_20000e3e & 0x20) == 0) {\n        DAT_20000eac = DAT_20000eac + 1;\n      }\n      else {\n        DAT_20000eac = DAT_20000eac + -1;\n      }\n    }\n    DAT_20000e18 = *(int *)(DAT_20000e38 + 4) + DAT_20000e18;\n    if (0 < DAT_20000e18) {\n      DAT_20000e3c = DAT_20000e3c | 0x440;\n      DAT_20000e18 = DAT_20000e18 - DAT_20000e20;\n      if ((DAT_20000e3e & 0x80) == 0) {\n        DAT_20000eb0 = DAT_20000eb0 + 1;\n      }\n      else {\n        DAT_20000eb0 = DAT_20000eb0 + -1;\n      }\n    }\n    DAT_20000e1c = *(int *)(DAT_20000e38 + 6) + DAT_20000e1c;\n    if (0 < DAT_20000e1c) {\n      DAT_20000e3c = DAT_20000e3c | 0x100;\n      DAT_20000e1c = DAT_20000e1c - DAT_20000e20;\n      if ((DAT_20000e3e & 0x200) == 0) {\n        DAT_20000eb4 = DAT_20000eb4 + 1;\n      }\n      else {\n        DAT_20000eb4 = DAT_20000eb4 + -1;\n      }\n    }\n    DAT_20000e24 = DAT_20000e24 + 1;\n    if (DAT_20000e24 < *(uint *)(DAT_20000e38 + 8)) {\n      if (DAT_20000ea9 == '\\x04') {\n        result = FUN_08005360();\n        if (result != 0) {\n          if (*(uint *)(DAT_20000e38 + 0x18) < DAT_20000e30) {\n            DAT_20000e30 = DAT_20000e30 - *(int *)(DAT_20000e38 + 0x18);\n            FUN_08005324(DAT_20000e30);\n          }\n          else {\n            FUN_080057e4();\n            DAT_20000eaa = DAT_20000eaa | 4;\n          }\n        }\n      }\n      else if (DAT_20000e24 < *(uint *)(DAT_20000e38 + 0x1a)) {\n        result = FUN_08005360();\n        if (result != 0) {\n          DAT_20000e30 = DAT_20000e30 + *(int *)(DAT_20000e38 + 0x18);\n          if (*(uint *)(DAT_20000e38 + 0x1e) <= DAT_20000e30) {\n            DAT_20000e30 = *(uint *)(DAT_20000e38 + 0x1e);\n          }\n          FUN_08005324(DAT_20000e30);\n        }\n      }\n      else if (DAT_20000e24 < *(uint *)(DAT_20000e38 + 0x1c)) {\n        if (DAT_20000e30 != *(uint *)(DAT_20000e38 + 0x1e)) {\n          DAT_20000e30 = *(uint *)(DAT_20000e38 + 0x1e);\n          FUN_08005324(DAT_20000e30);\n        }\n      }\n      else if (DAT_20000e24 == *(uint *)(DAT_20000e38 + 0x1c)) {\n        if (DAT_20000e30 == *(uint *)(DAT_20000e38 + 0x1e)) {\n          DAT_20000e2c = 210000;\n        }\n        else {\n          DAT_20000e2c = 420000 - DAT_20000e2c;\n        }\n      }\n      else {\n        result = FUN_08005360();\n        if (result != 0) {\n          if (DAT_20000e34 < DAT_20000e30) {\n            DAT_20000e30 = DAT_20000e30 - *(int *)(DAT_20000e38 + 0x18);\n          }\n          else {\n            DAT_20000e30 = DAT_20000e30 >> 1;\n          }\n          if (DAT_20000e30 < *(uint *)(DAT_20000e38 + 0x16)) {\n            DAT_20000e30 = *(uint *)(DAT_20000e38 + 0x16);\n          }\n          FUN_08005324(DAT_20000e30);\n        }\n      }\n    }\n    else {\n      DAT_20000e3c = 0;\n      DAT_20000e38 = (ushort *)0x0;\n      FUN_08002f40();\n    }\n  }\n  DAT_20000e3c = DAT_20000e3c ^ DAT_20000ed4;\n  DAT_20000e3e = DAT_20000e3e ^ DAT_20000ed6;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080053a0": "update_data_080053a0",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08007c7c"
            ],
            "called": [
                "FUN_080052dc",
                "FUN_080057e4",
                "FUN_08005324",
                "FUN_08002f40",
                "FUN_08005360",
                "FUN_08002f74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005760": {
            "entrypoint": "0x08005760",
            "current_name": "initialize_data_08005760",
            "code": "\nvoid initializeData_08005760(void)\n\n{\n  FUN_080052ac(DAT_20000ed4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005760": "initialize_data_08005760"
            },
            "calling": [
                "FUN_08007c7c"
            ],
            "called": [
                "FUN_080052ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005778": {
            "entrypoint": "0x08005778",
            "current_name": "initialize_data_08005778",
            "code": "\nvoid initializeData_08005778(void)\n\n{\n  FUN_080052ac(DAT_20000e40);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005778": "initialize_data_08005778"
            },
            "calling": [
                "FUN_08007c7c"
            ],
            "called": [
                "FUN_080052ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005790": {
            "entrypoint": "0x08005790",
            "current_name": "initialize_data_08005790",
            "code": "\nvoid initializeData_08005790(void)\n\n{\n  FUNC_08005318();\n  if (DAT_20000ea9 == '\\x03') {\n    DAT_20000e3c = DAT_20000ed4;\n    DAT_20000e3e = DAT_20000ed6;\n    FUN_08007c40(0x69);\n    FUN_08007c5e((DAT_20000ec9 + 5) * 0x15);\n    FUN_08007b70();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005790": "initialize_data_08005790"
            },
            "calling": [
                "FUN_0800585c",
                "FUN_0800583c",
                "FUN_08001d4c"
            ],
            "called": [
                "FUN_08007c5e",
                "FUN_08007c40",
                "FUN_08005318",
                "FUN_08007b70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080057e4": {
            "entrypoint": "0x080057e4",
            "current_name": "execute_important_function_080057e4",
            "code": "\nvoid executeImportantFunction_080057e4(void)\n\n{\n  FUN_08007bc2();\n  if ((DAT_20000ef8 != -1) || ((DAT_20000eaa & 0x20) != 0)) {\n    FUNC_0800530c();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080057e4": "execute_important_function_080057e4"
            },
            "calling": [
                "FUN_080053a0",
                "FUN_0800583c",
                "FUN_080025e8",
                "FUN_08001d4c"
            ],
            "called": [
                "FUN_0800530c",
                "FUN_08007bc2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005814": {
            "entrypoint": "0x08005814",
            "current_name": "initialize_data_08005814",
            "code": "\nvoid initializeData_08005814(void)\n\n{\n  FUN_0800b430(&DAT_20000e14,0,0x24);\n  FUN_08005324(800);\n  DAT_20000e38 = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005814": "initialize_data_08005814"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_0800b430",
                "FUN_08005324"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800583c": {
            "entrypoint": "0x0800583c",
            "current_name": "initialize_system_0800583c",
            "code": "\nvoid initializeSystem_0800583c(void)\n\n{\n  FUN_080052ac(DAT_20000ed4);\n  FUN_08005790();\n  FUN_080057e4();\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800583c": "initialize_system_0800583c"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08005790",
                "FUN_080057e4",
                "FUN_080052ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800585c": {
            "entrypoint": "0x0800585c",
            "current_name": "update_status_and_call_function_0800585c",
            "code": "\nvoid updateStatusAndCallFunction_0800585c(void)\n\n{\n  if (DAT_20000ea9 == '\\x02') {\n    DAT_20000ea9 = '\\x03';\n    FUN_08005790();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800585c": "update_status_and_call_function_0800585c"
            },
            "calling": [
                "FUN_08001e98",
                "FUN_08003a74",
                "FUN_080024c4"
            ],
            "called": [
                "FUN_08005790"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800587c": {
            "entrypoint": "0x0800587c",
            "current_name": "update_status_0800587c",
            "code": "\nvoid updateStatus_0800587c(void)\n\n{\n  if (DAT_20000ea9 == '\\x03') {\n    DAT_20000ea9 = '\\x04';\n    DAT_20000eb8 = 0;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800587c": "update_status_0800587c"
            },
            "calling": [
                "FUN_08003a74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058a0": {
            "entrypoint": "0x080058a0",
            "current_name": "initialize_data_080058a0",
            "code": "\nvoid initializeData_080058a0(void)\n\n{\n  if (DAT_20000e38 == 0) {\n    DAT_20000ea9 = 0;\n  }\n  else {\n    FUN_08003618(*(int *)(DAT_20000e38 + 0x10) - DAT_20000e24);\n    DAT_20000e30 = 0;\n    FUN_08005324(0);\n    DAT_20000e2c = 210000;\n    DAT_20000e24 = 0;\n    DAT_20000ea9 = 2;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080058a0": "initialize_data_080058a0"
            },
            "calling": [
                "FUN_08003a74"
            ],
            "called": [
                "FUN_08003618",
                "FUN_08005324"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005900": {
            "entrypoint": "0x08005900",
            "current_name": "set_flags_based_on_byte_08005900",
            "code": "\nundefined4 setFlagsBasedOnByte_08005900(byte byteValue)\n\n{\n  if (byteValue == 0x7e) {\n    DAT_20000eaa = DAT_20000eaa | 2;\n    return 1;\n  }\n  if (byteValue < 0x7f) {\n    if (byteValue == 0x3f) {\n      DAT_20000eaa = DAT_20000eaa | 1;\n      return 1;\n    }\n    if (byteValue < 0x40) {\n      if (byteValue == 0x18) {\n        FUN_080025e8();\n        return 1;\n      }\n      if (byteValue == 0x21) {\n        DAT_20000eaa = DAT_20000eaa | 8;\n        return 1;\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005900": "set_flags_based_on_byte_08005900",
                "param_1": "byteValue"
            },
            "calling": [
                "FUN_08008286"
            ],
            "called": [
                "FUN_080025e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800597c": {
            "entrypoint": "0x0800597c",
            "current_name": "execute_system_interrupt_0800597c",
            "code": "\nvoid executeSystemInterrupt_0800597c(void)\n\n{\n  performInterrupt(0x3f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800597c": "execute_system_interrupt_0800597c",
                "software_interrupt": "performInterrupt"
            },
            "calling": [
                "FUN_08005984"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005984": {
            "entrypoint": "0x08005984",
            "current_name": "initialize_data_08005984",
            "code": "\nundefined4 initializeData_08005984(undefined4 inputData)\n\n{\n  undefined4 returnValue;\n  \n  if (DAT_20000e44 == 0) {\n    returnValue = FUN_0800597c(1,inputData,0);\n  }\n  else {\n    returnValue = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08005984": "initialize_data_08005984",
                "param_1": "inputData",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_0800597c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080059b4": {
            "entrypoint": "0x080059b4",
            "current_name": "initialize_system_080059b4",
            "code": "\n\n\nundefined4 initializeSystem_080059b4(void)\n\n{\n  _DAT_40023c00 = _DAT_40023c00 | 0x700;\n  FUN_08006d72(16000);\n  FUN_08006ce0(3);\n  FUNC_08005a50();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080059b4": "initialize_system_080059b4"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_08005a50",
                "FUN_08006d72",
                "FUN_08006ce0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080059f8": {
            "entrypoint": "0x080059f8",
            "current_name": "initialize_data_080059f8",
            "code": "\n\n\nundefined4 initializeData_080059f8(void)\n\n{\n  _DAT_40023820 = 0;\n  _DAT_40023824 = 0;\n  _DAT_40023810 = 0;\n  _DAT_40023814 = 0;\n  _DAT_40023818 = 0;\n  FUNC_08005a5c();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080059f8": "initialize_data_080059f8"
            },
            "calling": [],
            "called": [
                "FUN_08005a5c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a50": {
            "entrypoint": "0x08005a50",
            "current_name": "FUNC_08005a50",
            "code": "\nvoid FUNC_08005a50(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a50": "FUNC_08005a50"
            },
            "calling": [
                "FUN_080059b4"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005a5c": {
            "entrypoint": "0x08005a5c",
            "current_name": "FUNC_08005a5c",
            "code": "\nvoid FUNC_08005a5c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a5c": "FUNC_08005a5c"
            },
            "calling": [
                "FUN_080059f8"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005a68": {
            "entrypoint": "0x08005a68",
            "current_name": "increment_counter_08005a68",
            "code": "\nvoid incrementCounter_08005a68(void)\n\n{\n  DAT_20000e48 = DAT_20000e48 + 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a68": "increment_counter_08005a68"
            },
            "calling": [
                "FUN_08007756"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a84": {
            "entrypoint": "0x08005a84",
            "current_name": "get_data_entry_08005a84",
            "code": "\nundefined4 get_data_entry_08005a84(void)\n\n{\n  return DAT_20000e48;\n}\n\n",
            "renaming": {
                "FUN_08005a84": "get_data_entry_08005a84"
            },
            "calling": [
                "FUN_08007756",
                "FUN_08000268",
                "FUN_0800618c",
                "FUN_08005a98",
                "FUN_08005cec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a98": {
            "entrypoint": "0x08005a98",
            "current_name": "wait_for_sum_08005a98",
            "code": "\nvoid waitForSum_08005a98(int targetSum)\n\n{\n  int currentSum;\n  uint randomValue;\n  \n  currentSum = FUN_08005a84();\n  do {\n    randomValue = FUN_08005a84();\n  } while (randomValue < (uint)(targetSum + currentSum));\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a98": "wait_for_sum_08005a98",
                "param_1": "targetSum",
                "iVar1": "currentSum",
                "uVar2": "randomValue"
            },
            "calling": [
                "FUN_080002a0"
            ],
            "called": [
                "FUN_08005a84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005bdc": {
            "entrypoint": "0x08005bdc",
            "current_name": "store_shifted_byte_08005bdc",
            "code": "\nvoid storeShiftedByte_08005bdc(byte inputByte,uint value)\n\n{\n  if ((char)inputByte < '\\0') {\n    *(char *)((inputByte & 0xf) + 0xe000ed14) = (char)((value & 0xff) << 4);\n  }\n  else {\n    *(char *)((char)inputByte + -0x1fff1c00) = (char)((value & 0xff) << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005bdc": "store_shifted_byte_08005bdc",
                "param_1": "inputByte",
                "param_2": "value"
            },
            "calling": [
                "FUN_08005c30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c30": {
            "entrypoint": "0x08005c30",
            "current_name": "is_valid_range_08005c30",
            "code": "\n\n\nbool isValidRange_08005c30(int input)\n\n{\n  bool isWithinRange;\n  \n  isWithinRange = input - 1U < 0x1000000;\n  if (isWithinRange) {\n    _DAT_e000e014 = input + -1;\n    FUN_08005bdc(0xffffffff,0xf);\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n  }\n  return !isWithinRange;\n}\n\n",
            "renaming": {
                "FUN_08005c30": "is_valid_range_08005c30",
                "param_1": "input",
                "bVar1": "isWithinRange"
            },
            "calling": [
                "FUN_0800618c"
            ],
            "called": [
                "FUN_08005bdc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cec": {
            "entrypoint": "0x08005cec",
            "current_name": "check_conditions_08005cec",
            "code": "\n\n\nundefined4 checkConditions_08005cec(uint *inputParams)\n\n{\n  int result;\n  uint randomValue;\n  \n  if ((*inputParams & 1) != 0) {\n    if (((_DAT_40023808 & 0xc) == 4) ||\n       (((_DAT_40023808 & 0xc) == 8 && ((_DAT_40023804 & 0x400000) == 0x400000)))) {\n      if (((_DAT_40023800 & 0x20000) != 0) && (param1Value1 != 1)) {\n        return 1;\n      }\n    }\n    else {\n      _DAT_40023800 = (uint3)_DAT_40023800;\n      result = FUN_08005a84();\n      while ((_DAT_40023800 & 0x20000) != 0) {\n        randomValue = FUN_08005a84();\n        if (result + 5000U <= randomValue) {\n          return 3;\n        }\n      }\n      _DAT_40023800 = CONCAT13(DAT_40023800_3,CONCAT12((char)param1Value1,_DAT_40023800));\n      if (param1Value1 == 1) {\n        result = FUN_08005a84();\n        while ((_DAT_40023800 & 0x20000) == 0) {\n          randomValue = FUN_08005a84();\n          if (result + 5000U <= randomValue) {\n            return 3;\n          }\n        }\n      }\n      else {\n        result = FUN_08005a84();\n        while ((_DAT_40023800 & 0x20000) != 0) {\n          randomValue = FUN_08005a84();\n          if (result + 5000U <= randomValue) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*inputParams & 2) != 0) {\n    if (((_DAT_40023808 & 0xc) == 0) ||\n       (((_DAT_40023808 & 0xc) == 8 && ((_DAT_40023804 & 0x400000) == 0)))) {\n      if (((_DAT_40023800 & 2) != 0) && (param1Value2 != 1)) {\n        return 1;\n      }\n    }\n    else if (param1Value2 == 0) {\n      _DAT_42470000 = 0;\n      result = FUN_08005a84();\n      while ((_DAT_40023800 & 2) != 0) {\n        randomValue = FUN_08005a84();\n        if (result + 100U <= randomValue) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470000 = 1;\n      result = FUN_08005a84();\n      while ((_DAT_40023800 & 2) == 0) {\n        randomValue = FUN_08005a84();\n        if (result + 100U <= randomValue) {\n          return 3;\n        }\n      }\n      _DAT_40023800 = inputParams[4] << 3 | _DAT_40023800 & 0xffffff07;\n    }\n  }\n  if ((*inputParams & 8) != 0) {\n    if (inputParams[5] == 0) {\n      _DAT_42470e80 = 0;\n      result = FUN_08005a84();\n      while ((_DAT_40023874 & 2) != 0) {\n        randomValue = FUN_08005a84();\n        if (result + 100U <= randomValue) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470e80 = 1;\n      result = FUN_08005a84();\n      while ((_DAT_40023874 & 2) == 0) {\n        randomValue = FUN_08005a84();\n        if (result + 100U <= randomValue) {\n          return 3;\n        }\n      }\n    }\n  }\n  if ((*inputParams & 4) != 0) {\n    _DAT_40023840 = _DAT_40023840 | 0x10000000;\n    _DAT_40007000 = _DAT_40007000 | 0x100;\n    result = FUN_08005a84();\n    while ((_DAT_40007000 & 0x100) == 0) {\n      randomValue = FUN_08005a84();\n      if (result + 100U <= randomValue) {\n        return 3;\n      }\n    }\n    _DAT_40023870 = _DAT_40023870 & 0xffffff00;\n    result = FUN_08005a84();\n    while ((_DAT_40023870 & 2) != 0) {\n      randomValue = FUN_08005a84();\n      if (result + 5000U <= randomValue) {\n        return 3;\n      }\n    }\n    _DAT_40023870 = CONCAT31(DAT_40023870_1,(char)param1Value3);\n    if (param1Value3 == 1) {\n      result = FUN_08005a84();\n      while ((_DAT_40023870 & 2) == 0) {\n        randomValue = FUN_08005a84();\n        if (result + 5000U <= randomValue) {\n          return 3;\n        }\n      }\n    }\n    else {\n      result = FUN_08005a84();\n      while ((_DAT_40023870 & 2) != 0) {\n        randomValue = FUN_08005a84();\n        if (result + 5000U <= randomValue) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (param1Value4 != 0) {\n    if ((_DAT_40023808 & 0xc) == 8) {\n      return 1;\n    }\n    if (param1Value4 == 2) {\n      _DAT_42470060 = 0;\n      result = FUN_08005a84();\n      while ((_DAT_40023800 & 0x2000000) != 0) {\n        randomValue = FUN_08005a84();\n        if (result + 100U <= randomValue) {\n          return 3;\n        }\n      }\n      _DAT_40023804 =\n           param2Value1 << 0x18 |\n           param2Value2 | param2Value3 << 6 | ((param2Value4 >> 1) - 1) * 0x10000 | param2Value5 |\n           0x20000000;\n      _DAT_42470060 = 1;\n      result = FUN_08005a84();\n      while ((_DAT_40023800 & 0x2000000) == 0) {\n        randomValue = FUN_08005a84();\n        if (result + 100U <= randomValue) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470060 = 0;\n      result = FUN_08005a84();\n      while ((_DAT_40023800 & 0x2000000) != 0) {\n        randomValue = FUN_08005a84();\n        if (result + 100U <= randomValue) {\n          return 3;\n        }\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005cec": "check_conditions_08005cec",
                "param_1": "inputParams",
                "iVar1": "result",
                "uVar2": "randomValue",
                "param_1[1]": "param1Value1",
                "param_1[3]": "param1Value2",
                "param_1[2]": "param1Value3",
                "param_1[6]": "param1Value4",
                "param_1[0xb]": "param2Value1",
                "param_1[8]": "param2Value2",
                "param_1[9]": "param2Value3",
                "param_1[10]": "param2Value4",
                "param_1[7]": "param2Value5"
            },
            "calling": [
                "FUN_08007436"
            ],
            "called": [
                "FUN_08005a84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800618c": {
            "entrypoint": "0x0800618c",
            "current_name": "validate_and_process_data_0800618c",
            "code": "\n\n\nundefined4 validate_and_process_data_0800618c(uint *data,uint size)\n\n{\n  int result;\n  uint temp_var;\n  uint timeout;\n  undefined8 timestamp;\n  \n  if ((_DAT_40023c00 & 0xf) < size) {\n    _DAT_40023c00 = CONCAT31(DAT_40023c00_1,(char)size);\n    if (size != (size & 0xf)) {\n      return 1;\n    }\n    if ((*data & 1) != 0) {\n      if (mode == 1) {\n        if ((_DAT_40023800 & 0x20000) == 0) {\n          return 1;\n        }\n      }\n      else if ((mode != 2) && ((_DAT_40023800 & 2) == 0)) {\n        return 1;\n      }\n      _DAT_40023808 = mode | _DAT_40023808 & 0xfffffffc;\n      result = FUN_08005a84();\n      timeout = result + 5000;\n      if (mode == 1) {\n        while ((_DAT_40023808 & 0xc) != 4) {\n          temp_var = FUN_08005a84();\n          if (timeout <= temp_var) {\n            return 3;\n          }\n        }\n      }\n      else if (mode == 2) {\n        while ((_DAT_40023808 & 0xc) != 8) {\n          temp_var = FUN_08005a84();\n          if (timeout <= temp_var) {\n            return 3;\n          }\n        }\n      }\n      else {\n        while ((_DAT_40023808 & 0xc) != 0) {\n          temp_var = FUN_08005a84();\n          if (timeout <= temp_var) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  else {\n    if ((*data & 1) != 0) {\n      if (mode == 1) {\n        if ((_DAT_40023800 & 0x20000) == 0) {\n          return 1;\n        }\n      }\n      else if (mode == 2) {\n        if ((_DAT_40023800 & 0x2000000) == 0) {\n          return 1;\n        }\n      }\n      else if ((_DAT_40023800 & 2) == 0) {\n        return 1;\n      }\n      _DAT_40023808 = mode | _DAT_40023808 & 0xfffffffc;\n      result = FUN_08005a84();\n      timeout = result + 5000;\n      if (mode == 1) {\n        while ((_DAT_40023808 & 0xc) != 4) {\n          temp_var = FUN_08005a84();\n          if (timeout <= temp_var) {\n            return 3;\n          }\n        }\n      }\n      else if (mode == 2) {\n        while ((_DAT_40023808 & 0xc) != 8) {\n          temp_var = FUN_08005a84();\n          if (timeout <= temp_var) {\n            return 3;\n          }\n        }\n      }\n      else {\n        while ((_DAT_40023808 & 0xc) != 0) {\n          temp_var = FUN_08005a84();\n          if (timeout <= temp_var) {\n            return 3;\n          }\n        }\n      }\n    }\n    _DAT_40023c00 = CONCAT31(DAT_40023c00_1,(char)size);\n    if (size != (size & 0xf)) {\n      return 1;\n    }\n  }\n  if ((*data & 2) != 0) {\n    _DAT_40023808 = data[2] | _DAT_40023808 & 0xffffff0f;\n  }\n  if ((*data & 4) != 0) {\n    _DAT_40023808 = data[3] | _DAT_40023808 & 0xffffe3ff;\n  }\n  if ((*data & 8) != 0) {\n    _DAT_40023808 = data[4] << 3 | _DAT_40023808 & 0xffff1fff;\n  }\n  timestamp = FUN_08006628();\n  FUN_08005c30((uint)timestamp / 1000,(int)((ulonglong)timestamp >> 0x20),(uint)timestamp * 0x10624dd3);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800618c": "validate_and_process_data_0800618c",
                "param_1": "data",
                "param_2": "size",
                "iVar1": "result",
                "uVar2": "temp_var",
                "uVar3": "timeout",
                "uVar4": "timestamp",
                "param_1[1]": "mode"
            },
            "calling": [
                "FUN_08007436"
            ],
            "called": [
                "FUN_08005a84",
                "FUN_08006628",
                "FUN_08005c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800640c": {
            "entrypoint": "0x0800640c",
            "current_name": "update_data_0800640c",
            "code": "\n\n\nvoid updateData_0800640c(int flag,uint value1,uint value2)\n\n{\n  undefined4 constant1;\n  undefined4 constant2;\n  undefined4 constant3;\n  undefined4 constant4;\n  undefined4 constant5;\n  \n  if (flag == 0) {\n    _DAT_40023830 = _DAT_40023830 | 1;\n    constant1 = 0x100;\n    constant2 = 2;\n    constant4 = 3;\n    constant3 = 0;\n    constant5 = 0;\n    FUN_08006e88(0x40020000,&constant1);\n    _DAT_40023808 = value2 | value1 | _DAT_40023808 & 0xf89fffff;\n  }\n  else {\n    _DAT_40023830 = _DAT_40023830 | 4;\n    constant1 = 0x200;\n    constant2 = 2;\n    constant4 = 3;\n    constant3 = 0;\n    constant5 = 0;\n    FUN_08006e88(0x40020800,&constant1);\n    _DAT_40023808 = value1 | value2 << 3 | _DAT_40023808 & 0x7ffffff;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800640c": "update_data_0800640c",
                "param_1": "flag",
                "param_2": "value1",
                "param_3": "value2",
                "local_1c": "constant1",
                "local_18": "constant2",
                "local_14": "constant3",
                "local_10": "constant4",
                "local_c": "constant5"
            },
            "calling": [],
            "called": [
                "FUN_08006e88"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080064ec": {
            "entrypoint": "0x080064ec",
            "current_name": "calculate_clock_frequency_080064ec",
            "code": "\n\n\nuint calculateClockFrequency_080064ec(void)\n\n{\n  uint clockConfig;\n  uint calculatedFrequency;\n  \n  clockConfig = _DAT_40023808 & 0xc;\n  if (clockConfig == 8) {\n    if ((_DAT_40023804 & 0x400000) == 0) {\n      calculatedFrequency = ((_DAT_40023804 & 0x7fc0) >> 6) * (16000000 / (_DAT_40023804 & 0x3f));\n    }\n    else {\n      calculatedFrequency = ((_DAT_40023804 & 0x7fc0) >> 6) * (8000000 / (_DAT_40023804 & 0x3f));\n    }\n    return calculatedFrequency / ((((_DAT_40023804 & 0x30000) >> 0x10) + 1) * 2);\n  }\n  if (clockConfig < 9) {\n    if (clockConfig == 0) {\n      return 16000000;\n    }\n    if (clockConfig == 4) {\n      return 8000000;\n    }\n  }\n  return 16000000;\n}\n\n",
            "renaming": {
                "FUN_080064ec": "calculate_clock_frequency_080064ec",
                "uVar1": "clockConfig",
                "local_c": "calculatedFrequency"
            },
            "calling": [
                "FUN_08006628"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006628": {
            "entrypoint": "0x08006628",
            "current_name": "calculate_shifted_value_08006628",
            "code": "\n\n\nuint calculateShiftedValue_08006628(void)\n\n{\n  uint originalValue;\n  \n  originalValue = FUN_080064ec();\n  DAT_20000000 = originalValue >> (&DAT_0800bcac)[(_DAT_40023808 & 0xf0) >> 4];\n  return originalValue >> (&DAT_0800bcac)[(_DAT_40023808 & 0xf0) >> 4];\n}\n\n",
            "renaming": {
                "FUN_08006628": "calculate_shifted_value_08006628",
                "uVar1": "originalValue"
            },
            "calling": [
                "FUN_08006680",
                "FUN_080066cc",
                "FUN_0800618c"
            ],
            "called": [
                "FUN_080064ec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006680": {
            "entrypoint": "0x08006680",
            "current_name": "get_shifted_value_08006680",
            "code": "\n\n\nuint get_shifted_value_08006680(void)\n\n{\n  uint result;\n  \n  result = FUN_08006628();\n  return result >> (&DAT_0800bcac)[(_DAT_40023808 & 0x1c00) >> 10];\n}\n\n",
            "renaming": {
                "FUN_08006680": "get_shifted_value_08006680",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08007f54"
            ],
            "called": [
                "FUN_08006628"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080066cc": {
            "entrypoint": "0x080066cc",
            "current_name": "decode_and_shift_080066cc",
            "code": "\n\n\nuint decode_and_shift_080066cc(void)\n\n{\n  uint result;\n  \n  result = FUN_08006628();\n  return result >> (&DAT_0800bcac)[(_DAT_40023808 & 0xe000) >> 0xd];\n}\n\n",
            "renaming": {
                "FUN_080066cc": "decode_and_shift_080066cc",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08007f54"
            ],
            "called": [
                "FUN_08006628"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006950": {
            "entrypoint": "0x08006950",
            "current_name": "set_memory_configuration_08006950",
            "code": "\n\n\nvoid setMemoryConfiguration_08006950(uint configuration)\n\n{\n  _DAT_e000ed0c = _DAT_e000ed0c & 0xf8ff | (configuration & 7) << 8 | 0x5fa0000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006950": "set_memory_configuration_08006950",
                "param_1": "configuration"
            },
            "calling": [
                "FUN_08006ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006998": {
            "entrypoint": "0x08006998",
            "current_name": "get_bit_value_08006998",
            "code": "\n\n\nuint get_bit_value_08006998(void)\n\n{\n  return _DAT_e000ed0c >> 8 & 7;\n}\n\n",
            "renaming": {
                "FUN_08006998": "get_bit_value_08006998"
            },
            "calling": [
                "FUN_08006d8a",
                "FUN_08006cf6"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080069b4": {
            "entrypoint": "0x080069b4",
            "current_name": "set_bit_at_offset_080069b4",
            "code": "\nvoid setBitAtOffset_080069b4(byte byteVal)\n\n{\n  *(int *)(((uint)(int)(char)byteVal >> 5) * 4 + -0x1fff1f00) = 1 << (byteVal & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080069b4": "set_bit_at_offset_080069b4",
                "param_1": "byteVal"
            },
            "calling": [
                "FUN_08006d2e"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080069e4": {
            "entrypoint": "0x080069e4",
            "current_name": "set_bit_in_memory_080069e4",
            "code": "\nvoid setBitInMemory_080069e4(byte inputByte)\n\n{\n  *(int *)((((uint)(int)(char)inputByte >> 5) + 0x20) * 4 + -0x1fff1f00) = 1 << (inputByte & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080069e4": "set_bit_in_memory_080069e4",
                "param_1": "inputByte"
            },
            "calling": [
                "FUN_08006d4a"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006a18": {
            "entrypoint": "0x08006a18",
            "current_name": "check_bit_08006a18",
            "code": "\nbool checkBit_08006a18(byte byteToCheck)\n\n{\n  return (*(uint *)(((convertByteToUnsignedIntbyteToCheck >> 5) + 0x40) * 4 + -0x1fff1f00) &\n         1 << (byteToCheck & 0x1f)) != 0;\n}\n\n",
            "renaming": {
                "FUN_08006a18": "check_bit_08006a18",
                "param_1": "byteToCheck",
                "(uint)(int)(char)": "convertByteToUnsignedInt"
            },
            "calling": [
                "FUN_08006de0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006a58": {
            "entrypoint": "0x08006a58",
            "current_name": "set_bit_at_index_08006a58",
            "code": "\nvoid setBitAtIndex_08006a58(byte byteValue)\n\n{\n  *(int *)((((uint)(int)(char)byteValue >> 5) + 0x40) * 4 + -0x1fff1f00) = 1 << (byteValue & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006a58": "set_bit_at_index_08006a58",
                "param_1": "byteValue"
            },
            "calling": [
                "FUN_08006dc4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006a8c": {
            "entrypoint": "0x08006a8c",
            "current_name": "set_bit_in_memory_08006a8c",
            "code": "\nvoid setBitInMemory_08006a8c(byte inputByte)\n\n{\n  *(int *)((((uint)(int)(char)inputByte >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (inputByte & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006a8c": "set_bit_in_memory_08006a8c",
                "param_1": "inputByte"
            },
            "calling": [
                "FUN_08006dfe"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ac0": {
            "entrypoint": "0x08006ac0",
            "current_name": "check_bit_08006ac0",
            "code": "\nbool checkBit_08006ac0(byte byteValue)\n\n{\n  return (*(uint *)((((uint)(int)(char)byteValue >> 5) + 0x80) * 4 + -0x1fff1f00) &\n         1 << (byteValue & 0x1f)) != 0;\n}\n\n",
            "renaming": {
                "FUN_08006ac0": "check_bit_08006ac0",
                "param_1": "byteValue"
            },
            "calling": [
                "FUN_08006e1a"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b00": {
            "entrypoint": "0x08006b00",
            "current_name": "write_to_memory_08006b00",
            "code": "\nvoid writeToMemory_08006b00(byte address,uint data)\n\n{\n  if ((char)address < '\\0') {\n    *(char *)((address & 0xf) + 0xe000ed14) = (char)((data & 0xff) << 4);\n  }\n  else {\n    *(char *)((char)address + -0x1fff1c00) = (char)((data & 0xff) << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006b00": "write_to_memory_08006b00",
                "param_1": "address",
                "param_2": "data"
            },
            "calling": [
                "FUN_08006c9c",
                "FUN_08006cf6"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b54": {
            "entrypoint": "0x08006b54",
            "current_name": "extracted_byte_08006b54",
            "code": "\nbyte extractedByte_08006b54(byte inputByte)\n\n{\n  byte outputByte;\n  \n  if ((char)inputByte < '\\0') {\n    outputByte = *(byte *)((inputByte & 0xf) + 0xe000ed14);\n  }\n  else {\n    outputByte = *(byte *)((char)inputByte + -0x1fff1c00);\n  }\n  return outputByte >> 4;\n}\n\n",
            "renaming": {
                "FUN_08006b54": "extracted_byte_08006b54",
                "param_1": "inputByte",
                "bVar1": "outputByte"
            },
            "calling": [
                "FUN_08006d98"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ba0": {
            "entrypoint": "0x08006ba0",
            "current_name": "apply_mask_08006ba0",
            "code": "\nuint applyMask_08006ba0(uint bitOffset,uint inputValue,uint inputMask)\n\n{\n  uint bitsToShift;\n  \n  bitOffset = bitOffset & 7;\n  bitsToShift = 7 - bitOffset;\n  if (3 < bitsToShift) {\n    bitsToShift = 4;\n  }\n  if (bitOffset + 4 < 7) {\n    bitOffset = 0;\n  }\n  else {\n    bitOffset = bitOffset - 3;\n  }\n  return inputMask & (1 << (bitOffset & 0xff)) - 1U |\n         ((1 << (bitsToShift & 0xff)) - 1U & inputValue) << (bitOffset & 0xff);\n}\n\n",
            "renaming": {
                "FUN_08006ba0": "apply_mask_08006ba0",
                "param_1": "bitOffset",
                "param_2": "inputValue",
                "param_3": "inputMask",
                "uVar1": "bitsToShift"
            },
            "calling": [
                "FUN_08006cf6"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c04": {
            "entrypoint": "0x08006c04",
            "current_name": "extract_bits_08006c04",
            "code": "\nvoid extractBits_08006c04(uint inputValue,uint bitOffset,uint *outputValue1,uint *outputValue2)\n\n{\n  uint bitCountOffset;\n  \n  bitOffset = bitOffset & 7;\n  bitCountOffset = 7 - bitOffset;\n  if (3 < bitCountOffset) {\n    bitCountOffset = 4;\n  }\n  if (bitOffset + 4 < 7) {\n    bitOffset = 0;\n  }\n  else {\n    bitOffset = bitOffset - 3;\n  }\n  *outputValue1 = (1 << (bitCountOffset & 0xff)) - 1U & inputValue >> (bitOffset & 0xff);\n  *outputValue2 = (1 << (bitOffset & 0xff)) - 1U & inputValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006c04": "extract_bits_08006c04",
                "param_1": "inputValue",
                "param_2": "bitOffset",
                "param_3": "outputValue1",
                "param_4": "outputValue2",
                "uVar1": "bitCountOffset"
            },
            "calling": [
                "FUN_08006d98"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c70": {
            "entrypoint": "0x08006c70",
            "current_name": "endless_loop_08006c70",
            "code": "\nvoid endlessLoop_08006c70(void)\n\n{\n  syncBarrier(0xf);\n  syncBarrier(0xf);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08006c70": "endless_loop_08006c70",
                "DataSynchronizationBarrier": "syncBarrier"
            },
            "calling": [
                "FUN_08006d66"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c9c": {
            "entrypoint": "0x08006c9c",
            "current_name": "check_and_initialize_08006c9c",
            "code": "\n\n\nbool checkAndInitialize_08006c9c(int inputValue)\n\n{\n  bool isValueValid;\n  \n  isValueValid = inputValue - 1U < 0x1000000;\n  if (isValueValid) {\n    _DAT_e000e014 = inputValue + -1;\n    FUN_08006b00(0xffffffff,0xf);\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n  }\n  return !isValueValid;\n}\n\n",
            "renaming": {
                "FUN_08006c9c": "check_and_initialize_08006c9c",
                "param_1": "inputValue",
                "bVar1": "isValueValid"
            },
            "calling": [
                "FUN_08006d72"
            ],
            "called": [
                "FUN_08006b00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ce0": {
            "entrypoint": "0x08006ce0",
            "current_name": "initialize_function_08006ce0",
            "code": "\nvoid initializeFunction_08006ce0(undefined4 input)\n\n{\n  FUN_08006950(input);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006ce0": "initialize_function_08006ce0",
                "param_1": "input"
            },
            "calling": [
                "FUN_080059b4"
            ],
            "called": [
                "FUN_08006950"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006cf6": {
            "entrypoint": "0x08006cf6",
            "current_name": "process_data_08006cf6",
            "code": "\nvoid processData_08006cf6(char inputChar,undefined4 param2,undefined4 param3)\n\n{\n  undefined4 result;\n  \n  result = FUN_08006998();\n  result = FUN_08006ba0(result,param2,param3);\n  FUN_08006b00((int)inputChar,result);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006cf6": "process_data_08006cf6",
                "param_1": "inputChar",
                "param_2": "param2",
                "param_3": "param3",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08007a70"
            ],
            "called": [
                "FUN_08006998",
                "FUN_08006b00",
                "FUN_08006ba0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d2e": {
            "entrypoint": "0x08006d2e",
            "current_name": "decompiled_function_08006d2e",
            "code": "\nvoid decompiled_function_08006d2e(char input_parameter)\n\n{\n  FUN_080069b4((int)input_parameter);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d2e": "decompiled_function_08006d2e",
                "param_1": "input_parameter"
            },
            "calling": [],
            "called": [
                "FUN_080069b4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d4a": {
            "entrypoint": "0x08006d4a",
            "current_name": "execute_function_08006d4a",
            "code": "\nvoid execute_function_08006d4a(char input_param)\n\n{\n  FUN_080069e4((int)input_param);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d4a": "execute_function_08006d4a",
                "param_1": "input_param"
            },
            "calling": [],
            "called": [
                "FUN_080069e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d66": {
            "entrypoint": "0x08006d66",
            "current_name": "initialize_program_08006d66",
            "code": "\nvoid initialize_program_08006d66(void)\n\n{\n  FUN_08006c70();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d66": "initialize_program_08006d66"
            },
            "calling": [],
            "called": [
                "FUN_08006c70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d72": {
            "entrypoint": "0x08006d72",
            "current_name": "process_data_08006d72",
            "code": "\nundefined4 processData_08006d72(undefined4 inputData)\n\n{\n  undefined4 result;\n  \n  result = FUN_08006c9c(inputData);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08006d72": "process_data_08006d72",
                "param_1": "inputData",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080059b4"
            ],
            "called": [
                "FUN_08006c9c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d8a": {
            "entrypoint": "0x08006d8a",
            "current_name": "initialize_connection_08006d8a",
            "code": "\nundefined4 initializeConnection_08006d8a(void)\n\n{\n  undefined4 result;\n  \n  result = FUN_08006998();\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08006d8a": "initialize_connection_08006d8a",
                "uVar1": "result"
            },
            "calling": [],
            "called": [
                "FUN_08006998"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d98": {
            "entrypoint": "0x08006d98",
            "current_name": "execute_reverse_operation_08006d98",
            "code": "\nvoid executeReverseOperation_08006d98(char input,undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  undefined4 result;\n  \n  result = FUN_08006b54((int)input);\n  FUN_08006c04(result,arg1,arg2,arg3);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d98": "execute_reverse_operation_08006d98",
                "param_1": "input",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3",
                "uVar1": "result"
            },
            "calling": [],
            "called": [
                "FUN_08006b54",
                "FUN_08006c04"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006dc4": {
            "entrypoint": "0x08006dc4",
            "current_name": "execute_function_08006dc4",
            "code": "\nvoid executeFunction_08006dc4(char inputValue)\n\n{\n  FUN_08006a58((int)inputValue);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006dc4": "execute_function_08006dc4",
                "param_1": "inputValue"
            },
            "calling": [],
            "called": [
                "FUN_08006a58"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006de0": {
            "entrypoint": "0x08006de0",
            "current_name": "process_character_08006de0",
            "code": "\nundefined4 processCharacter_08006de0(char character)\n\n{\n  undefined4 result;\n  \n  result = FUN_08006a18((int)character);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08006de0": "process_character_08006de0",
                "param_1": "character",
                "uVar1": "result"
            },
            "calling": [],
            "called": [
                "FUN_08006a18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006dfe": {
            "entrypoint": "0x08006dfe",
            "current_name": "initialize_data_08006dfe",
            "code": "\nvoid initializeData_08006dfe(char data)\n\n{\n  FUN_08006a8c((int)data);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006dfe": "initialize_data_08006dfe",
                "param_1": "data"
            },
            "calling": [],
            "called": [
                "FUN_08006a8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e1a": {
            "entrypoint": "0x08006e1a",
            "current_name": "process_character_08006e1a",
            "code": "\nundefined4 processCharacter_08006e1a(char character)\n\n{\n  undefined4 result;\n  \n  result = FUN_08006ac0((int)character);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08006e1a": "process_character_08006e1a",
                "param_1": "character",
                "uVar1": "result"
            },
            "calling": [],
            "called": [
                "FUN_08006ac0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e88": {
            "entrypoint": "0x08006e88",
            "current_name": "update_params_08006e88",
            "code": "\n\n\nvoid updateParams_08006e88(uint *outputParams,uint *inputParams)\n\n{\n  uint bitMask;\n  uint bitValue;\n  int index;\n  uint loopCount;\n  \n  for (loopCount = 0; loopCount < 0x10; loopCount = loopCount + 1) {\n    bitMask = 1 << (loopCount & 0xff);\n    bitValue = *inputParams & bitMask;\n    if (bitValue == bitMask) {\n      if ((inputParams[1] == 2) || (inputParams[1] == 0x12)) {\n        bitMask = inputParams[4];\n        outputParams[(loopCount >> 3) + 8] = outputParams[(loopCount >> 3) + 8] & ~(0xf << ((loopCount & 7) << 2));\n        outputParams[(loopCount >> 3) + 8] = outputParams[(loopCount >> 3) + 8] | bitMask << ((loopCount & 7) << 2);\n      }\n      *outputParams = *outputParams & ~(3 << ((loopCount & 0x7f) << 1));\n      *outputParams = *outputParams | (inputParams[1] & 3) << ((loopCount & 0x7f) << 1);\n      if ((((inputParams[1] == 1) || (inputParams[1] == 2)) || (inputParams[1] == 0x11)) || (inputParams[1] == 0x12)\n         ) {\n        outputParams[2] = outputParams[2] & ~(3 << ((loopCount & 0x7f) << 1));\n        outputParams[2] = outputParams[2] | inputParams[3] << ((loopCount & 0x7f) << 1);\n        outputParams[1] = outputParams[1] & ~(1 << (loopCount & 0xff));\n        outputParams[1] = outputParams[1] | (inputParams[1] >> 4 & 1) << (loopCount & 0xff);\n      }\n      outputParams[3] = outputParams[3] & ~(3 << ((loopCount & 0x7f) << 1));\n      outputParams[3] = outputParams[3] | inputParams[2] << ((loopCount & 0x7f) << 1);\n      if ((inputParams[1] & 0x10000000) != 0) {\n        _DAT_40023844 = _DAT_40023844 | 0x4000;\n        *(uint *)(((loopCount >> 2) + 2) * 4 + 0x40013800) =\n             ~(0xf << ((loopCount & 3) << 2)) & *(uint *)(((loopCount >> 2) + 2) * 4 + 0x40013800);\n        if (outputParams == (uint *)0x40020000) {\n          index = 0;\n        }\n        else if (outputParams == (uint *)0x40020400) {\n          index = 1;\n        }\n        else if (outputParams == (uint *)0x40020800) {\n          index = 2;\n        }\n        else if (outputParams == (uint *)0x40020c00) {\n          index = 3;\n        }\n        else if (outputParams == (uint *)0x40021000) {\n          index = 4;\n        }\n        else if (outputParams == (uint *)0x40021400) {\n          index = 5;\n        }\n        else if (outputParams == (uint *)0x40021800) {\n          index = 6;\n        }\n        else if (outputParams == (uint *)0x40021c00) {\n          index = 7;\n        }\n        else if (outputParams == (uint *)0x40022000) {\n          index = 8;\n        }\n        else if (outputParams == (uint *)0x40022400) {\n          index = 9;\n        }\n        else {\n          index = 10;\n        }\n        *(uint *)(((loopCount >> 2) + 2) * 4 + 0x40013800) =\n             index << ((loopCount & 3) << 2) | *(uint *)(((loopCount >> 2) + 2) * 4 + 0x40013800);\n        _DAT_40013c00 = ~bitValue & _DAT_40013c00;\n        _DAT_40013c04 = ~bitValue & _DAT_40013c04;\n        if ((inputParams[1] & 0x10000) != 0) {\n          _DAT_40013c00 = bitValue | _DAT_40013c00;\n        }\n        if ((inputParams[1] & 0x20000) != 0) {\n          _DAT_40013c04 = bitValue | _DAT_40013c04;\n        }\n        _DAT_40013c08 = ~bitValue & _DAT_40013c08;\n        _DAT_40013c0c = ~bitValue & _DAT_40013c0c;\n        if ((inputParams[1] & 0x100000) != 0) {\n          _DAT_40013c08 = bitValue | _DAT_40013c08;\n        }\n        if ((inputParams[1] & 0x200000) != 0) {\n          _DAT_40013c0c = bitValue | _DAT_40013c0c;\n        }\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006e88": "update_params_08006e88",
                "param_1": "outputParams",
                "param_2": "inputParams",
                "uVar1": "bitMask",
                "uVar2": "bitValue",
                "iVar3": "index",
                "local_c": "loopCount"
            },
            "calling": [
                "FUN_0800640c",
                "FUN_0800778c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800733e": {
            "entrypoint": "0x0800733e",
            "current_name": "update_parameter_0800733e",
            "code": "\nvoid updateParameter_0800733e(int dataAddress,undefined2 value,char isNull)\n\n{\n  if (isNull == '\\0') {\n    *(undefined2 *)(dataAddress + 0x1a) = value;\n  }\n  else {\n    *(undefined2 *)(dataAddress + 0x18) = value;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800733e": "update_parameter_0800733e",
                "param_1": "dataAddress",
                "param_2": "value",
                "param_3": "isNull"
            },
            "calling": [
                "FUN_0800778c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800738e": {
            "entrypoint": "0x0800738e",
            "current_name": "update_data_and_call_function_0800738e",
            "code": "\n\n\nvoid updateDataAndCallFunction_0800738e(ushort inputValue)\n\n{\n  if ((inputValue & _DAT_40013c14) != 0) {\n    _DAT_40013c14 = (uint)inputValue;\n    FUNC_080073c0(inputValue);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800738e": "update_data_and_call_function_0800738e",
                "param_1": "inputValue"
            },
            "calling": [],
            "called": [
                "FUN_080073c0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073c0": {
            "entrypoint": "0x080073c0",
            "current_name": "FUNC_080073c0",
            "code": "\nvoid FUNC_080073c0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080073c0": "FUNC_080073c0"
            },
            "calling": [
                "FUN_0800738e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080073d4": {
            "entrypoint": "0x080073d4",
            "current_name": "set_bit_080073d4",
            "code": "\nvoid setBit_080073d4(uint input)\n\n{\n  *(short *)(((int)input >> 4) * 0x400 + 0x4002001a) = (short)(1 << (input & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_080073d4": "set_bit_080073d4",
                "param_1": "input"
            },
            "calling": [
                "FUN_08007520"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007402": {
            "entrypoint": "0x08007402",
            "current_name": "set_bit_in_memory_08007402",
            "code": "\nvoid setBitInMemory_08007402(uint inputValue)\n\n{\n  *(short *)(((int)inputValue >> 4) * 0x400 + 0x40020018) = (short)(1 << (inputValue & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007402": "set_bit_in_memory_08007402",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_080074c8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007430": {
            "entrypoint": "0x08007430",
            "current_name": "infinite_loop_08007430",
            "code": "\nvoid infiniteLoop_08007430(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08007430": "infinite_loop_08007430"
            },
            "calling": [
                "FUN_08007436"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007436": {
            "entrypoint": "0x08007436",
            "current_name": "initialize_data_08007436",
            "code": "\n\n\nvoid initializeData_08007436(void)\n\n{\n  int iVar1;\n  undefined4 flag1;\n  undefined4 flag2;\n  undefined4 number1;\n  undefined4 address1;\n  undefined4 number2;\n  undefined4 size1;\n  undefined4 number3;\n  undefined4 number4;\n  undefined4 option1;\n  undefined4 option2;\n  undefined4 option3;\n  undefined4 address2;\n  undefined4 size2;\n  \n  _DAT_40023840 = _DAT_40023840 | 0x10000000;\n  _DAT_40007000 = _DAT_40007000 | 0xc000;\n  flag1 = 1;\n  flag2 = 1;\n  number1 = 2;\n  address1 = 0x400000;\n  number2 = 8;\n  size1 = 0x150;\n  number3 = 2;\n  number4 = 7;\n  iVar1 = FUN_08005cec(&flag1);\n  if (iVar1 != 0) {\n    FUN_08007430();\n  }\n  option1 = 0xf;\n  option2 = 2;\n  option3 = 0;\n  address2 = 0x1400;\n  size2 = 0x1000;\n  iVar1 = FUN_0800618c(&option1,5);\n  if (iVar1 != 0) {\n    FUN_08007430();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007436": "initialize_data_08007436",
                "local_4c": "flag1",
                "local_48": "flag2",
                "local_34": "number1",
                "local_30": "address1",
                "local_2c": "number2",
                "local_28": "size1",
                "local_24": "number3",
                "local_20": "number4",
                "local_1c": "option1",
                "local_18": "option2",
                "local_14": "option3",
                "local_10": "address2",
                "local_c": "size2"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_0800618c",
                "FUN_08007430",
                "FUN_08005cec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080074c8": {
            "entrypoint": "0x080074c8",
            "current_name": "process_param_flags_080074c8",
            "code": "\nvoid processParamFlags_080074c8(uint flags)\n\n{\n  if ((flags & 1) != 0) {\n    FUN_08007402(0x3e);\n  }\n  if ((DAT_20000e4c != 0) && ((flags & 0x1e) != 0)) {\n    FUN_0800195c();\n  }\n  if ((DAT_20000e50 != 0) && ((flags & 0x80) != 0)) {\n    FUN_08003a18(flags);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080074c8": "process_param_flags_080074c8",
                "param_1": "flags"
            },
            "calling": [
                "FUN_08007930"
            ],
            "called": [
                "FUN_0800195c",
                "FUN_08007402",
                "FUN_08003a18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007520": {
            "entrypoint": "0x08007520",
            "current_name": "process_parameter_08007520",
            "code": "\nvoid processParameter_08007520(uint inputParameter)\n\n{\n  if ((inputParameter & 1) != 0) {\n    FUN_080073d4(0x3e);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007520": "process_parameter_08007520",
                "param_1": "inputParameter"
            },
            "calling": [
                "FUN_08007930"
            ],
            "called": [
                "FUN_080073d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007540": {
            "entrypoint": "0x08007540",
            "current_name": "initialize_program_08007540",
            "code": "\nundefined4 initialize_program_08007540(void)\n\n{\n  FUN_080059b4();\n  FUN_08007436();\n  FUN_0800778c();\n  FUN_08007e08();\n  FUN_080079c0();\n  FUN_08008190();\n  FUN_08005984(0);\n  FUN_08001ddc();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007540": "initialize_program_08007540"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_080059b4",
                "FUN_08007e08",
                "FUN_0800778c",
                "FUN_08005984",
                "FUN_08007436",
                "FUN_08008190",
                "FUN_080079c0",
                "FUN_08001ddc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800756c": {
            "entrypoint": "0x0800756c",
            "current_name": "initialize_system_0800756c",
            "code": "\n\n\nvoid initializeSystem_0800756c(void)\n\n{\n  _DAT_40023808 = 0;\n  _DAT_40023804 = 0x24003010;\n  _DAT_40023800 = _DAT_40023800 & 0xfef2ffff | 1;\n  _DAT_4002380c = 0;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800756c": "initialize_system_0800756c"
            },
            "calling": [
                "entry"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080076c8": {
            "entrypoint": "0x080076c8",
            "current_name": "update_bit_in_array_080076c8",
            "code": "\nvoid updateBitInArray_080076c8(uint input)\n\n{\n  *(uint *)(((int)input >> 4) * 0x400 + 0x40020014) =\n       *(uint *)(((int)input >> 4) * 0x400 + 0x40020014) ^ 1 << (input & 0xf);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080076c8": "update_bit_in_array_080076c8",
                "param_1": "input"
            },
            "calling": [
                "FUN_08007756"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007756": {
            "entrypoint": "0x08007756",
            "current_name": "check_and_handle_conditions_08007756",
            "code": "\nvoid check_and_handle_conditions_08007756(void)\n\n{\n  uint result;\n  \n  result = FUN_08005a84();\n  if ((result & 0x1ff) == 0) {\n    FUN_080076c8(0x3c);\n  }\n  if ((result & 0xf) == 0) {\n    FUN_08007930();\n  }\n  FUN_08005a68();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007756": "check_and_handle_conditions_08007756",
                "uVar1": "result"
            },
            "calling": [],
            "called": [
                "FUN_08005a68",
                "FUN_08007930",
                "FUN_08005a84",
                "FUN_080076c8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800778c": {
            "entrypoint": "0x0800778c",
            "current_name": "configure_device_0800778c",
            "code": "\n\n\nvoid configureDevice_0800778c(void)\n\n{\n  int offset;\n  int mask;\n  undefined4 value_1;\n  undefined4 value_2;\n  undefined4 value_3;\n  undefined4 value_4;\n  uint *pData;\n  uint index;\n  \n  for (index = 0; index < 0x11; index = index + 1) {\n    offset = index * 0x18;\n    pData = (uint *)(&DAT_0800bcbc + offset);\n    _DAT_40023830 = _DAT_40023830 | 1 << (*pData >> 4 & 0xff);\n    mask = 1 << (*pData & 0xf);\n    value_1 = *(undefined4 *)(&DAT_0800bcc0 + offset);\n    value_2 = *(undefined4 *)(&DAT_0800bcc4 + offset);\n    value_3 = *(undefined4 *)(&DAT_0800bcc8 + offset);\n    value_4 = *(undefined4 *)(&DAT_0800bccc + offset);\n    FUN_08006e88(((*pData >> 4) + 0x100080) * 0x400,&mask);\n    if (-1 < (int)pData[5]) {\n      FUN_0800733e(((*pData >> 4) + 0x100080) * 0x400,1 << (*pData & 0xf) & 0xffff,\n                   pData[5] & 0xff);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800778c": "configure_device_0800778c",
                "iVar1": "offset",
                "local_24": "mask",
                "local_20": "value_1",
                "local_1c": "value_2",
                "local_18": "value_3",
                "local_14": "value_4",
                "local_10": "pData",
                "local_c": "index"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_08006e88",
                "FUN_0800733e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007854": {
            "entrypoint": "0x08007854",
            "current_name": "read_bit_08007854",
            "code": "\nuint read_bit_08007854(uint input_value)\n\n{\n  return *(uint *)(((int)input_value >> 4) * 0x400 + 0x40020010) >> (input_value & 0xf) & 1;\n}\n\n",
            "renaming": {
                "FUN_08007854": "read_bit_08007854",
                "param_1": "input_value"
            },
            "calling": [
                "FUN_08007884"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007884": {
            "entrypoint": "0x08007884",
            "current_name": "calculate_flags_08007884",
            "code": "\nuint calculateFlags_08007884(void)\n\n{\n  int flag1;\n  int flag2;\n  int flag3;\n  int flag4;\n  int flag5;\n  uint result;\n  \n  flag1 = FUN_08007854(0x36);\n  flag2 = FUN_08007854(0x37);\n  flag3 = FUN_08007854(0x38);\n  flag4 = FUN_08007854(0x39);\n  flag5 = FUN_08007854(0xf);\n  result = FUN_08007854(0);\n  return result | flag1 << 4 | flag2 << 3 | flag3 << 2 | flag4 << 1 | flag5 << 7;\n}\n\n",
            "renaming": {
                "FUN_08007884": "calculate_flags_08007884",
                "iVar1": "flag1",
                "iVar2": "flag2",
                "iVar3": "flag3",
                "iVar4": "flag4",
                "iVar5": "flag5",
                "uVar6": "result"
            },
            "calling": [
                "FUN_08007930"
            ],
            "called": [
                "FUN_08007854"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080078f4": {
            "entrypoint": "0x080078f4",
            "current_name": "calculate_combined_bits_080078f4",
            "code": "\nuint calculateCombinedBits_080078f4(void)\n\n{\n  int index;\n  uint result;\n  \n  result = 0;\n  for (index = 0; index < 4; index = index + 1) {\n    result = *(uint *)(&DAT_20000e54 + index * 4) | result;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080078f4": "calculate_combined_bits_080078f4",
                "local_10": "index",
                "local_c": "result"
            },
            "calling": [
                "FUN_08007930",
                "FUN_08001994"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007930": {
            "entrypoint": "0x08007930",
            "current_name": "update_data_08007930",
            "code": "\nvoid updateData_08007930(void)\n\n{\n  int currentValue;\n  uint previousValue;\n  undefined4 newData;\n  uint tempValue;\n  uint bitDifference;\n  \n  currentValue = DAT_20000e68;\n  previousValue = DAT_20000e64;\n  if (DAT_20000e6c != 0) {\n    newData = FUN_08007884();\n    *(undefined4 *)(&DAT_20000e54 + currentValue * 4) = newData;\n    if (DAT_20000e68 == 3) {\n      DAT_20000e68 = 0;\n    }\n    else {\n      DAT_20000e68 = DAT_20000e68 + 1;\n    }\n    tempValue = FUN_080078f4();\n    previousValue = DAT_20000e64;\n    if (tempValue != DAT_20000e64) {\n      bitDifference = ~tempValue & DAT_20000e64;\n      if ((~DAT_20000e64 & tempValue) != 0) {\n        FUN_080074c8(~DAT_20000e64 & tempValue);\n      }\n      previousValue = tempValue;\n      if (bitDifference != 0) {\n        FUN_08007520(bitDifference);\n      }\n    }\n  }\n  DAT_20000e64 = previousValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007930": "update_data_08007930",
                "iVar1": "currentValue",
                "uVar2": "previousValue",
                "uVar3": "newData",
                "uVar4": "tempValue",
                "uVar5": "bitDifference"
            },
            "calling": [
                "FUN_08007756"
            ],
            "called": [
                "FUN_080074c8",
                "FUN_080078f4",
                "FUN_08007884",
                "FUN_08007520"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080079c0": {
            "entrypoint": "0x080079c0",
            "current_name": "initialize_data_structure_080079c0",
            "code": "\nvoid initializeDataStructure_080079c0(void)\n\n{\n  FUN_0800b430(&DAT_20000e54,0,0x18);\n  DAT_20000e6c = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080079c0": "initialize_data_structure_080079c0"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_0800b430"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080079e0": {
            "entrypoint": "0x080079e0",
            "current_name": "set_bit_080079e0",
            "code": "\nvoid setBit_080079e0(byte inputByte)\n\n{\n  *(int *)(((uint)(int)(char)inputByte >> 5) * 4 + -0x1fff1f00) = 1 << (inputByte & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080079e0": "set_bit_080079e0",
                "param_1": "inputByte"
            },
            "calling": [
                "FUN_08007a70"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007a10": {
            "entrypoint": "0x08007a10",
            "current_name": "update_data_flags_08007a10",
            "code": "\n\n\nvoid updateDataFlags_08007a10(undefined *dataBlock)\n\n{\n  if (dataBlock == (undefined *)0x40000000) {\n    _DAT_40023840 = _DAT_40023840 | 1;\n  }\n  else if (dataBlock == (undefined *)0x40000400) {\n    _DAT_40023840 = _DAT_40023840 | 2;\n  }\n  else if (dataBlock == &DAT_40000800) {\n    _DAT_40023840 = _DAT_40023840 | 4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007a10": "update_data_flags_08007a10",
                "param_1": "dataBlock"
            },
            "calling": [
                "FUN_08007d08",
                "FUN_08007ad0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007a70": {
            "entrypoint": "0x08007a70",
            "current_name": "process_param_08007a70",
            "code": "\nvoid processParam_08007a70(undefined *inputParam,undefined4 param2,undefined4 param3)\n\n{\n  undefined selectedValue;\n  \n  if (inputParam == (undefined *)0x40000000) {\n    selectedValue = 0x1c;\n  }\n  else if (inputParam == (undefined *)0x40000400) {\n    selectedValue = 0x1d;\n  }\n  else {\n    if (inputParam != &DAT_40000800) {\n      return;\n    }\n    selectedValue = 0x1e;\n  }\n  FUN_08006cf6(selectedValue,param2,param3);\n  FUN_080079e0(selectedValue);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007a70": "process_param_08007a70",
                "param_1": "inputParam",
                "param_2": "param2",
                "param_3": "param3",
                "local_c": "selectedValue"
            },
            "calling": [
                "FUN_08007ad0"
            ],
            "called": [
                "FUN_080079e0",
                "FUN_08006cf6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007ad0": {
            "entrypoint": "0x08007ad0",
            "current_name": "initialize_memory_08007ad0",
            "code": "\n\n\nvoid initializeMemory_08007ad0(void)\n\n{\n  FUN_08007a10(0x40000000);\n  _DAT_40000000 = 0;\n  _DAT_40000004 = 0;\n  _DAT_40000008 = 0;\n  _DAT_4000000c = 0;\n  _DAT_40000010 = 0;\n  _DAT_40000018 = 0;\n  _DAT_4000001c = 0;\n  _DAT_40000020 = 0;\n  _DAT_40000024 = 0;\n  _DAT_40000028 = DAT_20000000 / 42000000 - 1;\n  _DAT_4000002c = 0;\n  _DAT_40000034 = 0;\n  _DAT_40000038 = 0;\n  _DAT_4000003c = 0;\n  _DAT_40000040 = 0;\n  _DAT_40000048 = 0;\n  _DAT_4000004c = 0;\n  FUN_08007a70(0x40000000,0,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007ad0": "initialize_memory_08007ad0"
            },
            "calling": [
                "FUN_08007e08"
            ],
            "called": [
                "FUN_08007a10",
                "FUN_08007a70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007b70": {
            "entrypoint": "0x08007b70",
            "current_name": "set_flags_based_on_conditions_08007b70",
            "code": "\n\n\nvoid set_flags_based_on_conditions_08007b70(void)\n\n{\n  uint flags;\n  \n  flags = 1;\n  if (_DAT_40000034 != 0) {\n    flags = 3;\n  }\n  if (_DAT_40000038 != 0) {\n    flags = flags | 4;\n  }\n  _DAT_4000000c = _DAT_4000000c | flags;\n  _DAT_40000000 = _DAT_40000000 | 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007b70": "set_flags_based_on_conditions_08007b70",
                "local_c": "flags"
            },
            "calling": [
                "FUN_08005790"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007bc2": {
            "entrypoint": "0x08007bc2",
            "current_name": "clear_flags_08007bc2",
            "code": "\n\n\nvoid clearFlags_08007bc2(void)\n\n{\n  _DAT_40000000 = _DAT_40000000 & 0xfffffffe;\n  _DAT_4000000c = _DAT_4000000c & 0xfffffff8;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007bc2": "clear_flags_08007bc2"
            },
            "calling": [
                "FUN_080057e4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007bf0": {
            "entrypoint": "0x08007bf0",
            "current_name": "update_min_value_08007bf0",
            "code": "\n\n\nvoid update_min_value_08007bf0(uint new_value)\n\n{\n  _DAT_4000002c = new_value;\n  if (new_value <= _DAT_40000024) {\n    _DAT_40000024 = new_value;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007bf0": "update_min_value_08007bf0",
                "param_1": "new_value"
            },
            "calling": [
                "FUN_08005324"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007c40": {
            "entrypoint": "0x08007c40",
            "current_name": "initialize_data_08007c40",
            "code": "\n\n\nvoid initializeData_08007c40(undefined4 inputValue)\n\n{\n  _DAT_40000034 = inputValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007c40": "initialize_data_08007c40",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08005790"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007c5e": {
            "entrypoint": "0x08007c5e",
            "current_name": "set_global_data_08007c5e",
            "code": "\n\n\nvoid set_global_data_08007c5e(undefined4 value)\n\n{\n  _DAT_40000038 = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007c5e": "set_global_data_08007c5e",
                "param_1": "value"
            },
            "calling": [
                "FUN_08005790"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007c7c": {
            "entrypoint": "0x08007c7c",
            "current_name": "check_and_execute_functions_08007c7c",
            "code": "\n\n\nvoid check_and_execute_functions_08007c7c(void)\n\n{\n  if (((_DAT_40000010 & 2) != 0) && ((_DAT_4000000c & 2) != 0)) {\n    _DAT_40000010 = _DAT_40000010 & 0xfffffffd;\n    FUN_08005778();\n  }\n  if (((_DAT_40000010 & 4) != 0) && ((_DAT_4000000c & 4) != 0)) {\n    _DAT_40000010 = _DAT_40000010 & 0xfffffffb;\n    FUN_08005760();\n  }\n  if (((_DAT_40000010 & 1) != 0) && ((_DAT_4000000c & 1) != 0)) {\n    _DAT_40000010 = _DAT_40000010 & 0xfffffffe;\n    FUN_080053a0();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007c7c": "check_and_execute_functions_08007c7c"
            },
            "calling": [],
            "called": [
                "FUN_080053a0",
                "FUN_08005778",
                "FUN_08005760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007d08": {
            "entrypoint": "0x08007d08",
            "current_name": "initialize_registers_08007d08",
            "code": "\n\n\nvoid initializeRegisters_08007d08(void)\n\n{\n  FUN_08007a10(&DAT_40000800);\n  _DAT_40000800 = 0x80;\n  _DAT_40000804 = 0;\n  _DAT_40000808 = 0;\n  _DAT_4000080c = 0;\n  _DAT_40000810 = 0;\n  _DAT_40000818 = 0x6800;\n  _DAT_4000081c = 0;\n  _DAT_40000820 = 0;\n  _DAT_40000824 = 0;\n  _DAT_40000828 = DAT_20000000 / 4800000 - 1;\n  _DAT_4000082c = 199;\n  _DAT_40000834 = 0;\n  _DAT_40000838 = 100;\n  _DAT_4000083c = 0;\n  _DAT_40000840 = 0;\n  _DAT_40000848 = 0;\n  _DAT_4000084c = 0;\n  _DAT_40000814 = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007d08": "initialize_registers_08007d08"
            },
            "calling": [
                "FUN_08007e08"
            ],
            "called": [
                "FUN_08007a10"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007da8": {
            "entrypoint": "0x08007da8",
            "current_name": "set_flags_and_values_08007da8",
            "code": "\n\n\nvoid setFlagsAndValues_08007da8(void)\n\n{\n  _DAT_40000820 = _DAT_40000820 | 0x10;\n  _DAT_40000800 = _DAT_40000800 | 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007da8": "set_flags_and_values_08007da8"
            },
            "calling": [
                "FUN_08007e08"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e08": {
            "entrypoint": "0x08007e08",
            "current_name": "initiate_application_08007e08",
            "code": "\nvoid initiate_application_08007e08(void)\n\n{\n  FUN_08007ad0();\n  FUN_08007d08();\n  FUN_08007da8();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007e08": "initiate_application_08007e08"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_08007d08",
                "FUN_08007da8",
                "FUN_08007ad0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e1c": {
            "entrypoint": "0x08007e1c",
            "current_name": "wait_for_flag_08007e1c",
            "code": "\n\n\nvoid waitForFlag_08007e1c(byte inputValue)\n\n{\n  do {\n  } while ((_DAT_40004400 & 0x80) == 0);\n  _DAT_40004404 = (uint)inputValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007e1c": "wait_for_flag_08007e1c",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_0800826a",
                "FUN_08008250"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e58": {
            "entrypoint": "0x08007e58",
            "current_name": "check_if_flag_is_set_08007e58",
            "code": "\n\n\nbool checkIfFlagIsSet_08007e58(void)\n\n{\n  return (_DAT_40004400 & 0x20) != 0;\n}\n\n",
            "renaming": {
                "FUN_08007e58": "check_if_flag_is_set_08007e58"
            },
            "calling": [
                "FUN_08008286"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e84": {
            "entrypoint": "0x08007e84",
            "current_name": "get_lowest_byte_08007e84",
            "code": "\n\n\nuint get_lowest_byte_08007e84(void)\n\n{\n  return _DAT_40004404 & 0xff;\n}\n\n",
            "renaming": {
                "FUN_08007e84": "get_lowest_byte_08007e84"
            },
            "calling": [
                "FUN_08008286"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007ea4": {
            "entrypoint": "0x08007ea4",
            "current_name": "update_flags_08007ea4",
            "code": "\n\n\nvoid updateFlags_08007ea4(undefined *address)\n\n{\n  if (address == (undefined *)0x40011000) {\n    _DAT_40023844 = _DAT_40023844 | 0x10;\n  }\n  else if (address == &DAT_40004400) {\n    _DAT_40023840 = _DAT_40023840 | 0x20000;\n  }\n  else if (address == (undefined *)0x40004800) {\n    _DAT_40023840 = _DAT_40023840 | 0x40000;\n  }\n  else if (address == (undefined *)0x40004c00) {\n    _DAT_40023840 = _DAT_40023840 | 0x80000;\n  }\n  else if (address == (undefined *)0x40005000) {\n    _DAT_40023840 = _DAT_40023840 | 0x100000;\n  }\n  else if (address == (undefined *)0x40011400) {\n    _DAT_40023844 = _DAT_40023844 | 0x20;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007ea4": "update_flags_08007ea4",
                "param_1": "address"
            },
            "calling": [
                "FUN_08008190"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f54": {
            "entrypoint": "0x08007f54",
            "current_name": "calculate_parameter_08007f54",
            "code": "\nvoid calculateParameter_08007f54(int address,int value)\n\n{\n  ulonglong quotient;\n  int result1;\n  int result2;\n  undefined8 funcResult;\n  \n  if ((*(uint *)(address + 0xc) & 0x8000) == 0) {\n    if ((address != 0x40011000) && (address != 0x40011400)) {\n      funcResult = FUN_08006680();\n      quotient = (ulonglong)(uint)((int)funcResult * 0x19) / (ulonglong)(uint)(value << 2);\n      result1 = FUN_08006680((int)funcResult,(int)((ulonglong)funcResult >> 0x20),(int)(quotient * 0x51eb851f));\n      result2 = FUN_08006680();\n      *(uint *)(address + 8) =\n           (int)(quotient / 100) << 4 |\n           (((uint)(result1 * 0x19) / (uint)(value << 2) +\n            (int)(((ulonglong)(uint)(result2 * 0x19) / (ulonglong)(uint)(value << 2)) / 100) * -100)\n            * 0x10 + 0x32) / 100 & 0xf;\n      return;\n    }\n    funcResult = FUN_080066cc();\n    quotient = (ulonglong)(uint)((int)funcResult * 0x19) / (ulonglong)(uint)(value << 2);\n    result1 = FUN_080066cc((int)funcResult,(int)((ulonglong)funcResult >> 0x20),(int)(quotient * 0x51eb851f));\n    result2 = FUN_080066cc();\n    *(uint *)(address + 8) =\n         (int)(quotient / 100) << 4 |\n         (((uint)(result1 * 0x19) / (uint)(value << 2) +\n          (int)(((ulonglong)(uint)(result2 * 0x19) / (ulonglong)(uint)(value << 2)) / 100) * -100) *\n          0x10 + 0x32) / 100 & 0xf;\n  }\n  else {\n    if ((address != 0x40011000) && (address != 0x40011400)) {\n      funcResult = FUN_08006680();\n      quotient = (ulonglong)(uint)((int)funcResult * 0x19) / (ulonglong)(uint)(value << 1);\n      result1 = FUN_08006680((int)funcResult,(int)((ulonglong)funcResult >> 0x20),(int)(quotient * 0x51eb851f));\n      result2 = FUN_08006680();\n      *(uint *)(address + 8) =\n           (int)(quotient / 100) << 4 |\n           (((uint)(result1 * 0x19) / (uint)(value << 1) +\n            (int)(((ulonglong)(uint)(result2 * 0x19) / (ulonglong)(uint)(value << 1)) / 100) * -100)\n            * 0x10 + 0x32) / 100 & 0xf;\n      return;\n    }\n    funcResult = FUN_080066cc();\n    quotient = (ulonglong)(uint)((int)funcResult * 0x19) / (ulonglong)(uint)(value << 1);\n    result1 = FUN_080066cc((int)funcResult,(int)((ulonglong)funcResult >> 0x20),(int)(quotient * 0x51eb851f));\n    result2 = FUN_080066cc();\n    *(uint *)(address + 8) =\n         (int)(quotient / 100) << 4 |\n         (((uint)(result1 * 0x19) / (uint)(value << 1) +\n          (int)(((ulonglong)(uint)(result2 * 0x19) / (ulonglong)(uint)(value << 1)) / 100) * -100) *\n          0x10 + 0x32) / 100 & 0xf;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007f54": "calculate_parameter_08007f54",
                "param_1": "address",
                "param_2": "value",
                "uVar1": "quotient",
                "iVar2": "result1",
                "iVar3": "result2",
                "uVar4": "funcResult"
            },
            "calling": [
                "FUN_08008190"
            ],
            "called": [
                "FUN_08006680",
                "FUN_080066cc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008190": {
            "entrypoint": "0x08008190",
            "current_name": "initialize_memory_08008190",
            "code": "\n\n\nvoid initializeMemory_08008190(void)\n\n{\n  FUN_08007ea4(&DAT_40004400);\n  _DAT_4000440c = _DAT_4000440c & 0xffff400c | 0xc;\n  _DAT_40004410 = _DAT_40004410 & 0xffff8090;\n  _DAT_40004414 = _DAT_40004414 & 0xfffff000;\n  _DAT_40004400 = _DAT_40004400 & 0xfffffc00;\n  FUN_08007f54(&DAT_40004400,0x1c200);\n  _DAT_4000440c = _DAT_4000440c | 0x2000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008190": "initialize_memory_08008190"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_08007ea4",
                "FUN_08007f54"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008244": {
            "entrypoint": "0x08008244",
            "current_name": "FUNC_08008244",
            "code": "\nvoid FUNC_08008244(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008244": "FUNC_08008244"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008250": {
            "entrypoint": "0x08008250",
            "current_name": "initialize_08008250",
            "code": "\nvoid initialize_08008250(undefined undefined_param)\n\n{\n  FUN_08007e1c(undefined_param);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008250": "initialize_08008250",
                "param_1": "undefined_param"
            },
            "calling": [
                "FUN_0800369c",
                "FUN_08003826",
                "FUN_080037fc",
                "FUN_080036f0",
                "FUN_08003778",
                "FUN_080036c6"
            ],
            "called": [
                "FUN_08007e1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800826a": {
            "entrypoint": "0x0800826a",
            "current_name": "execute_function_0800826a",
            "code": "\nundefined4 execute_function_0800826a(undefined parameter)\n\n{\n  FUN_08007e1c(parameter);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800826a": "execute_function_0800826a",
                "param_1": "parameter"
            },
            "calling": [],
            "called": [
                "FUN_08007e1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008286": {
            "entrypoint": "0x08008286",
            "current_name": "check_validity_08008286",
            "code": "\nundefined check_validity_08008286(void)\n\n{\n  undefined result;\n  int status;\n  \n  status = FUN_08007e58();\n  if (status != 0) {\n    result = FUN_08007e84();\n    status = FUN_08005900(result);\n    if (status == 0) {\n      return result;\n    }\n  }\n  return 0xff;\n}\n\n",
            "renaming": {
                "FUN_08008286": "check_validity_08008286",
                "uVar1": "result",
                "iVar2": "status"
            },
            "calling": [
                "FUN_08003f34"
            ],
            "called": [
                "FUN_08007e84",
                "FUN_08005900",
                "FUN_08007e58"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080082ba": {
            "entrypoint": "0x080082ba",
            "current_name": "FUNC_080082ba",
            "code": "\nvoid FUNC_080082ba(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080082ba": "FUNC_080082ba"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080082d0": {
            "entrypoint": "0x080082d0",
            "current_name": "calculate_result_080082d0",
            "code": "\nulonglong calculateResult_080082d0(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int temp1;\n  byte temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  uint temp7;\n  int temp8;\n  uint temp9;\n  uint temp10;\n  uint temp11;\n  uint temp12;\n  bool tempBool1;\n  bool tempBool2;\n  bool tempBool3;\n  \n  temp6 = input4 ^ 0x80000000;\n  temp9 = input2 << 1;\n  input4 = input4 << 1;\n  tempBool1 = ((input2 ^ temp6) & 0x7fffffff) == 0;\n  tempBool2 = tempBool1 && input1 == input3;\n  if (!tempBool1 || input1 != input3) {\n    tempBool2 = (temp9 | input1) == 0;\n  }\n  if (!tempBool2) {\n    tempBool2 = (input4 | input3) == 0;\n  }\n  temp8 = (int)temp9 >> 0x15;\n  if (!tempBool2) {\n    tempBool2 = temp8 == -1;\n  }\n  temp1 = (int)input4 >> 0x15;\n  if (!tempBool2) {\n    tempBool2 = temp1 == -1;\n  }\n  if (tempBool2) {\n    if (temp8 == -1 || temp1 == -1) {\n      temp9 = temp6;\n      temp11 = input3;\n      if (temp8 == -1) {\n        temp9 = input2;\n        temp11 = input1;\n      }\n      if (temp8 != -1 || temp1 != -1) {\n        input3 = temp11;\n        temp6 = temp9;\n      }\n      tempBool2 = (temp11 | temp9 << 0xc) == 0;\n      if (tempBool2) {\n        tempBool2 = (input3 | temp6 << 0xc) == 0;\n      }\n      if (tempBool2) {\n        tempBool2 = temp9 == temp6;\n      }\n      if (!tempBool2) {\n        temp9 = temp9 | 0x80000;\n      }\n      return CONCAT44(temp9,temp11);\n    }\n    if (((input2 ^ temp6) & 0x7fffffff) != 0 || input1 != input3) {\n      if ((temp9 | input1) == 0) {\n        input1 = input3;\n        input2 = temp6;\n      }\n      return CONCAT44(input2,input1);\n    }\n    if (input2 != temp6) {\n      return 0;\n    }\n    if (temp9 >> 0x15 == 0) {\n      tempBool2 = (input1 & 0x80000000) != 0;\n      temp6 = input2 * 2 + (uint)tempBool2;\n      if (CARRY4(input2,input2) || CARRY4(input2 * 2,(uint)tempBool2)) {\n        temp6 = temp6 | 0x80000000;\n      }\n      return CONCAT44(temp6,input1 << 1);\n    }\n    if (temp9 < 0xffc00000) {\n      return CONCAT44(input2 + 0x100000,input1);\n    }\n    input2 = input2 & 0x80000000;\nLAB_08008514:\n    return (ulonglong)(input2 | 0x7ff00000) << 0x20;\n  }\n  temp9 = temp9 >> 0x15;\n  input4 = input4 >> 0x15;\n  temp11 = input4 - temp9;\n  tempBool2 = temp11 != 0;\n  if (input4 < temp9) {\n    temp11 = -temp11;\n  }\n  temp10 = input1;\n  temp7 = input2;\n  if (tempBool2 && temp9 <= input4) {\n    temp9 = temp9 + temp11;\n    temp10 = input3;\n    temp7 = temp6;\n    input3 = input1;\n    temp6 = input2;\n  }\n  if (0x36 < temp11) {\n    return CONCAT44(temp7,temp10);\n  }\n  temp4 = temp7 & 0xfffff | 0x100000;\n  if ((temp7 & 0x80000000) != 0) {\n    tempBool2 = temp10 != 0;\n    temp10 = -temp10;\n    temp4 = -temp4 - (uint)tempBool2;\n  }\n  temp7 = temp6 & 0xfffff | 0x100000;\n  if ((temp6 & 0x80000000) != 0) {\n    tempBool2 = input3 != 0;\n    input3 = -input3;\n    temp7 = -temp7 - (uint)tempBool2;\n  }\n  if (temp9 == temp11) {\n    temp7 = temp7 ^ 0x100000;\n    if (temp9 == 0) {\n      temp4 = temp4 ^ 0x100000;\n      temp9 = 1;\n    }\n    else {\n      temp11 = temp11 - 1;\n    }\n  }\n  temp6 = -temp11 + 0x20;\n  if ((int)temp11 < 0x21) {\n    temp12 = input3 << (temp6 & 0xff);\n    input3 = input3 >> (temp11 & 0xff);\n    temp3 = temp10 + input3;\n    temp5 = temp7 << (temp6 & 0xff);\n    temp6 = temp3 + temp5;\n    temp4 = temp4 + CARRY4(temp10,input3) + ((int)temp7 >> (temp11 & 0xff)) +\n            (uint)CARRY4(temp3,temp5);\n  }\n  else {\n    temp12 = temp7 << (-temp11 + 0x40 & 0xff);\n    if (input3 != 0) {\n      temp12 = temp12 | 2;\n    }\n    temp7 = (int)temp7 >> (temp11 - 0x20 & 0xff);\n    temp6 = temp10 + temp7;\n    temp4 = temp4 + ((int)temp7 >> 0x1f) + (uint)CARRY4(temp10,temp7);\n  }\n  input2 = temp4 & 0x80000000;\n  temp11 = temp4;\n  if ((int)temp4 < 0) {\n    tempBool2 = temp12 == 0;\n    temp12 = -temp12;\n    temp11 = -temp6;\n    temp6 = -(uint)!tempBool2 - temp6;\n    temp11 = -(uint)(tempBool2 <= temp11) - temp4;\n  }\n  if (0xfffff < temp11) {\n    temp10 = temp9 - 1;\n    if (0x1fffff < temp11) {\n      temp10 = temp11 & 1;\n      temp11 = temp11 >> 1;\n      temp2 = (byte)temp6;\n      temp6 = (uint)(temp10 != 0) << 0x1f | temp6 >> 1;\n      temp12 = (uint)(temp2 & 1) << 0x1f | temp12 >> 1;\n      temp10 = temp9;\n      if (0xffbfffff < temp9 * 0x200000) goto LAB_08008514;\n    }\nLAB_080083e0:\n    tempBool2 = 0x7fffffff < temp12;\n    if (temp12 == 0x80000000) {\n      tempBool2 = (temp6 & 1) != 0;\n    }\n    return CONCAT44(temp11 + temp10 * 0x100000 + (uint)CARRY4(temp6,(uint)tempBool2) | input2,\n                    temp6 + tempBool2);\n  }\n  tempBool1 = (temp12 & 0x80000000) != 0;\n  temp12 = temp12 << 1;\n  temp10 = temp6 * 2;\n  tempBool2 = CARRY4(temp6,temp6);\n  temp6 = temp6 * 2 + (uint)tempBool1;\n  temp11 = temp11 * 2 + (uint)(tempBool2 || CARRY4(temp10,(uint)tempBool1));\n  temp10 = temp9 - 2;\n  if (temp9 - 1 != 0 && 0xfffff < temp11) goto LAB_080083e0;\n  temp7 = temp6;\n  temp9 = temp11;\n  if (temp11 == 0) {\n    temp7 = 0;\n    temp9 = temp6;\n  }\n  temp8 = LZCOUNT(temp9);\n  if (temp11 == 0) {\n    temp8 = temp8 + 0x20;\n  }\n  temp11 = temp8 - 0xb;\n  tempBool3 = SBORROW4(temp11,0x20);\n  temp6 = temp8 - 0x2b;\n  tempBool2 = (int)temp6 < 0;\n  tempBool1 = temp6 == 0;\n  if ((int)temp11 < 0x20) {\n    tempBool3 = SCARRY4(temp6,0xc);\n    temp8 = temp8 + -0x1f;\n    tempBool2 = temp8 < 0;\n    tempBool1 = temp8 == 0;\n    temp6 = temp11;\n    if (!tempBool1 && tempBool2 == tempBool3) {\n      temp7 = temp9 << (temp11 & 0xff);\n      temp9 = temp9 >> (0xcU - temp8 & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (tempBool1 || tempBool2 != tempBool3) {\n    temp12 = 0x20 - temp6;\n  }\n  temp9 = temp9 << (temp6 & 0xff);\n  if (tempBool1 || tempBool2 != tempBool3) {\n    temp9 = temp9 | temp7 >> (temp12 & 0xff);\n  }\n  if (tempBool1 || tempBool2 != tempBool3) {\n    temp7 = temp7 << (temp6 & 0xff);\n  }\nLAB_08008458:\n  if ((int)temp11 <= (int)temp10) {\n    return CONCAT44(temp9 + (temp10 - temp11) * 0x100000 | input2,temp7);\n  }\n  temp6 = ~(temp10 - temp11);\n  if ((int)temp6 < 0x1f) {\n    temp8 = temp6 - 0x13;\n    if (temp8 != 0 && temp8 < 0 == SCARRY4(temp6 - 0x1f,0xc)) {\n      return CONCAT44(temp4,temp7 >> (0x20 - (0xcU - temp8) & 0xff) | temp9 << (0xcU - temp8 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    temp6 = temp6 + 1;\n    return CONCAT44(input2 | temp9 >> (temp6 & 0xff),\n                    temp7 >> (temp6 & 0xff) | temp9 << (0x20 - temp6 & 0xff));\n  }\n  return CONCAT44(temp4,temp9 >> (temp6 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_080082d0": "calculate_result_080082d0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "temp1",
                "bVar2": "temp2",
                "uVar3": "temp3",
                "uVar4": "temp4",
                "uVar5": "temp5",
                "uVar6": "temp6",
                "uVar7": "temp7",
                "iVar8": "temp8",
                "uVar9": "temp9",
                "uVar10": "temp10",
                "uVar11": "temp11",
                "uVar12": "temp12",
                "bVar13": "tempBool1",
                "bVar14": "tempBool2",
                "bVar15": "tempBool3"
            },
            "calling": [
                "FUN_08003004",
                "FUN_080096e8",
                "FUN_08009d78",
                "FUN_0800a5a0",
                "FUN_08001f00",
                "FUN_0800af78",
                "FUN_08004940",
                "FUN_0800a1bc",
                "FUN_08009410",
                "FUN_0800a348",
                "FUN_08009b24",
                "FUN_0800adf0",
                "FUN_08009990"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080082d4": {
            "entrypoint": "0x080082d4",
            "current_name": "calculate_sum_080082d4",
            "code": "\nulonglong calculate_sum_080082d4(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int index1;\n  byte bit1;\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  int index2;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  uint temp7;\n  uint temp8;\n  uint temp9;\n  bool condition1;\n  bool condition2;\n  bool condition3;\n  \n  temp4 = param_2 << 1;\n  temp6 = param_4 << 1;\n  condition1 = ((param_2 ^ param_4) & 0x7fffffff) == 0;\n  condition2 = condition1 && param_1 == param_3;\n  if (!condition1 || param_1 != param_3) {\n    condition2 = (temp4 | param_1) == 0;\n  }\n  if (!condition2) {\n    condition2 = (temp6 | param_3) == 0;\n  }\n  index2 = (int)temp4 >> 0x15;\n  if (!condition2) {\n    condition2 = index2 == -1;\n  }\n  index1 = (int)temp6 >> 0x15;\n  if (!condition2) {\n    condition2 = index1 == -1;\n  }\n  if (condition2) {\n    if (index2 == -1 || index1 == -1) {\n      temp6 = param_4;\n      temp4 = param_3;\n      if (index2 == -1) {\n        temp6 = param_2;\n        temp4 = param_1;\n      }\n      if (index2 != -1 || index1 != -1) {\n        param_3 = temp4;\n        param_4 = temp6;\n      }\n      condition2 = (temp4 | temp6 << 0xc) == 0;\n      if (condition2) {\n        condition2 = (param_3 | param_4 << 0xc) == 0;\n      }\n      if (condition2) {\n        condition2 = temp6 == param_4;\n      }\n      if (!condition2) {\n        temp6 = temp6 | 0x80000;\n      }\n      return CONCAT44(temp6,temp4);\n    }\n    if (((param_2 ^ param_4) & 0x7fffffff) != 0 || param_1 != param_3) {\n      if ((temp4 | param_1) == 0) {\n        param_1 = param_3;\n        param_2 = param_4;\n      }\n      return CONCAT44(param_2,param_1);\n    }\n    if (param_2 != param_4) {\n      return 0;\n    }\n    if (temp4 >> 0x15 == 0) {\n      condition2 = (param_1 & 0x80000000) != 0;\n      temp6 = param_2 * 2 + (uint)condition2;\n      if (CARRY4(param_2,param_2) || CARRY4(param_2 * 2,(uint)condition2)) {\n        temp6 = temp6 | 0x80000000;\n      }\n      return CONCAT44(temp6,param_1 << 1);\n    }\n    if (temp4 < 0xffc00000) {\n      return CONCAT44(param_2 + 0x100000,param_1);\n    }\n    param_2 = param_2 & 0x80000000;\nLAB_08008514:\n    return (ulonglong)(param_2 | 0x7ff00000) << 0x20;\n  }\n  temp4 = temp4 >> 0x15;\n  temp6 = temp6 >> 0x15;\n  temp7 = temp6 - temp4;\n  condition2 = temp7 != 0;\n  if (temp6 < temp4) {\n    temp7 = -temp7;\n  }\n  temp5 = param_1;\n  temp3 = param_2;\n  if (condition2 && temp4 <= temp6) {\n    temp4 = temp4 + temp7;\n    temp5 = param_3;\n    temp3 = param_4;\n    param_3 = param_1;\n    param_4 = param_2;\n  }\n  if (0x36 < temp7) {\n    return CONCAT44(temp3,temp5);\n  }\n  temp6 = temp3 & 0xfffff | 0x100000;\n  if ((temp3 & 0x80000000) != 0) {\n    condition2 = temp5 != 0;\n    temp5 = -temp5;\n    temp6 = -temp6 - (uint)condition2;\n  }\n  temp3 = param_4 & 0xfffff | 0x100000;\n  if ((param_4 & 0x80000000) != 0) {\n    condition2 = param_3 != 0;\n    param_3 = -param_3;\n    temp3 = -temp3 - (uint)condition2;\n  }\n  if (temp4 == temp7) {\n    temp3 = temp3 ^ 0x100000;\n    if (temp4 == 0) {\n      temp6 = temp6 ^ 0x100000;\n      temp4 = 1;\n    }\n    else {\n      temp7 = temp7 - 1;\n    }\n  }\n  temp9 = -temp7 + 0x20;\n  if ((int)temp7 < 0x21) {\n    temp8 = param_3 << (temp9 & 0xff);\n    param_3 = param_3 >> (temp7 & 0xff);\n    temp1 = temp5 + param_3;\n    temp2 = temp3 << (temp9 & 0xff);\n    temp9 = temp1 + temp2;\n    temp6 = temp6 + CARRY4(temp5,param_3) + ((int)temp3 >> (temp7 & 0xff)) +\n            (uint)CARRY4(temp1,temp2);\n  }\n  else {\n    temp8 = temp3 << (-temp7 + 0x40 & 0xff);\n    if (param_3 != 0) {\n      temp8 = temp8 | 2;\n    }\n    temp3 = (int)temp3 >> (temp7 - 0x20 & 0xff);\n    temp9 = temp5 + temp3;\n    temp6 = temp6 + ((int)temp3 >> 0x1f) + (uint)CARRY4(temp5,temp3);\n  }\n  param_2 = temp6 & 0x80000000;\n  temp7 = temp6;\n  if ((int)temp6 < 0) {\n    condition2 = temp8 == 0;\n    temp8 = -temp8;\n    temp7 = -temp9;\n    temp9 = -(uint)!condition2 - temp9;\n    temp7 = -(uint)(condition2 <= temp7) - temp6;\n  }\n  if (0xfffff < temp7) {\n    temp5 = temp4 - 1;\n    if (0x1fffff < temp7) {\n      temp6 = temp7 & 1;\n      temp7 = temp7 >> 1;\n      bit1 = (byte)temp9;\n      temp9 = (uint)(temp6 != 0) << 0x1f | temp9 >> 1;\n      temp8 = (uint)(bit1 & 1) << 0x1f | temp8 >> 1;\n      temp5 = temp4;\n      if (0xffbfffff < temp4 * 0x200000) goto LAB_08008514;\n    }\nLAB_080083e0:\n    condition2 = 0x7fffffff < temp8;\n    if (temp8 == 0x80000000) {\n      condition2 = (temp9 & 1) != 0;\n    }\n    return CONCAT44(temp7 + temp5 * 0x100000 + (uint)CARRY4(temp9,(uint)condition2) | param_2,\n                    temp9 + condition2);\n  }\n  condition1 = (temp8 & 0x80000000) != 0;\n  temp8 = temp8 << 1;\n  temp5 = temp9 * 2;\n  condition2 = CARRY4(temp9,temp9);\n  temp9 = temp9 * 2 + (uint)condition1;\n  temp7 = temp7 * 2 + (uint)(condition2 || CARRY4(temp5,(uint)condition1));\n  temp5 = temp4 - 2;\n  if (temp4 - 1 != 0 && 0xfffff < temp7) goto LAB_080083e0;\n  temp3 = temp9;\n  temp4 = temp7;\n  if (temp7 == 0) {\n    temp3 = 0;\n    temp4 = temp9;\n  }\n  index2 = LZCOUNT(temp4);\n  if (temp7 == 0) {\n    index2 = index2 + 0x20;\n  }\n  temp9 = index2 - 0xb;\n  condition3 = SBORROW4(temp9,0x20);\n  temp7 = index2 - 0x2b;\n  condition2 = (int)temp7 < 0;\n  condition1 = temp7 == 0;\n  if ((int)temp9 < 0x20) {\n    condition3 = SCARRY4(temp7,0xc);\n    index2 = index2 + -0x1f;\n    condition2 = index2 < 0;\n    condition1 = index2 == 0;\n    temp7 = temp9;\n    if (!condition1 && condition2 == condition3) {\n      temp3 = temp4 << (temp9 & 0xff);\n      temp4 = temp4 >> (0xcU - index2 & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (condition1 || condition2 != condition3) {\n    temp8 = 0x20 - temp7;\n  }\n  temp4 = temp4 << (temp7 & 0xff);\n  if (condition1 || condition2 != condition3) {\n    temp4 = temp4 | temp3 >> (temp8 & 0xff);\n  }\n  if (condition1 || condition2 != condition3) {\n    temp3 = temp3 << (temp7 & 0xff);\n  }\nLAB_08008458:\n  if ((int)temp9 <= (int)temp5) {\n    return CONCAT44(temp4 + (temp5 - temp9) * 0x100000 | param_2,temp3);\n  }\n  temp7 = ~(temp5 - temp9);\n  if ((int)temp7 < 0x1f) {\n    index2 = temp7 - 0x13;\n    if (index2 != 0 && index2 < 0 == SCARRY4(temp7 - 0x1f,0xc)) {\n      return CONCAT44(temp6,temp3 >> (0x20 - (0xcU - index2) & 0xff) | temp4 << (0xcU - index2 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    temp7 = temp7 + 1;\n    return CONCAT44(param_2 | temp4 >> (temp7 & 0xff),\n                    temp3 >> (temp7 & 0xff) | temp4 << (0x20 - temp7 & 0xff));\n  }\n  return CONCAT44(temp6,temp4 >> (temp7 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_080082d4": "calculate_sum_080082d4",
                "iVar1": "index1",
                "bVar2": "bit1",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "uVar5": "temp3",
                "iVar6": "index2",
                "uVar7": "temp4",
                "uVar8": "temp5",
                "uVar9": "temp6",
                "uVar10": "temp7",
                "uVar11": "temp8",
                "uVar12": "temp9",
                "bVar13": "condition1",
                "bVar14": "condition2",
                "bVar15": "condition3"
            },
            "calling": [
                "FUN_08009798",
                "FUN_08009d78",
                "FUN_0800a5a0",
                "FUN_08009318",
                "FUN_08009654",
                "FUN_08001f00",
                "FUN_0800af78",
                "FUN_0800b2e8",
                "FUN_080094c0",
                "FUN_0800a1bc",
                "FUN_0800a348",
                "FUN_08009b24",
                "FUN_0800adf0",
                "FUN_08009990"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800854c": {
            "entrypoint": "0x0800854c",
            "current_name": "shift_and_concatenate_0800854c",
            "code": "\nulonglong shift_and_concatenate_0800854c(uint input)\n\n{\n  uint result1;\n  uint result2;\n  int count;\n  uint shift;\n  uint remaining_bits;\n  bool is_negative;\n  bool is_zero;\n  bool is_borrow;\n  \n  if (input == 0) {\n    return 0;\n  }\n  result1 = 0;\n  count = LZCOUNT(input);\n  shift = count + 0x15;\n  is_borrow = SBORROW4(shift,0x20);\n  result2 = count - 0xb;\n  is_negative = (int)result2 < 0;\n  is_zero = result2 == 0;\n  if (shift < 0x20) {\n    is_borrow = SCARRY4(result2,0xc);\n    is_negative = false;\n    is_zero = count + 1 == 0;\n    result2 = shift;\n    if (!is_zero && is_borrow == false) {\n      result1 = input << shift;\n      input = input >> (0xcU - (count + 1) & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (is_zero || is_negative != is_borrow) {\n    remaining_bits = 0x20 - result2;\n  }\n  input = input << (result2 & 0xff);\n  if (is_zero || is_negative != is_borrow) {\n    input = input | 0U >> (remaining_bits & 0xff);\n  }\n  if (is_zero || is_negative != is_borrow) {\n    result1 = 0 << (result2 & 0xff);\n  }\nLAB_08008458:\n  if (shift < 0x433) {\n    return CONCAT44(input + (0x432 - shift) * 0x100000,result1);\n  }\n  result2 = ~(0x432 - shift);\n  if (0x1e < (int)result2) {\n    return (ulonglong)(input >> (result2 - 0x1f & 0xff));\n  }\n  count = result2 - 0x13;\n  if (count == 0 || count < 0 != SCARRY4(result2 - 0x1f,0xc)) {\n    result2 = result2 + 1;\n    return CONCAT44(input >> (result2 & 0xff),\n                    result1 >> (result2 & 0xff) | input << (0x20 - result2 & 0xff));\n  }\n  return (ulonglong)(result1 >> (0x20 - (0xcU - count) & 0xff) | input << (0xcU - count & 0xff));\n}\n\n",
            "renaming": {
                "FUN_0800854c": "shift_and_concatenate_0800854c",
                "param_1": "input",
                "uVar1": "result1",
                "uVar2": "result2",
                "iVar3": "count",
                "uVar4": "shift",
                "in_r12": "remaining_bits",
                "bVar5": "is_negative",
                "bVar6": "is_zero",
                "bVar7": "is_borrow"
            },
            "calling": [
                "FUN_08001994"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800856c": {
            "entrypoint": "0x0800856c",
            "current_name": "bitwise_operations_0800856c",
            "code": "\nulonglong bitwise_operations_0800856c(uint input)\n\n{\n  uint result1;\n  uint result2;\n  uint shift;\n  int count;\n  uint constant;\n  uint sign;\n  uint temp;\n  bool condition1;\n  bool condition2;\n  bool condition3;\n  \n  if (input == 0) {\n    return 0;\n  }\n  sign = input & 0x80000000;\n  result2 = input;\n  if ((int)sign < 0) {\n    result2 = -input;\n  }\n  result1 = 0;\n  count = LZCOUNT(result2);\n  constant = count + 0x15;\n  condition3 = SBORROW4(constant,0x20);\n  shift = count - 0xb;\n  condition1 = (int)shift < 0;\n  condition2 = shift == 0;\n  if (constant < 0x20) {\n    condition3 = SCARRY4(shift,0xc);\n    condition1 = false;\n    condition2 = count + 1 == 0;\n    shift = constant;\n    if (!condition2 && condition3 == false) {\n      result1 = result2 << constant;\n      result2 = result2 >> (0xcU - (count + 1) & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (condition2 || condition1 != condition3) {\n    temp = 0x20 - shift;\n  }\n  result2 = result2 << (shift & 0xff);\n  if (condition2 || condition1 != condition3) {\n    result2 = result2 | 0U >> (temp & 0xff);\n  }\n  if (condition2 || condition1 != condition3) {\n    result1 = 0 << (shift & 0xff);\n  }\nLAB_08008458:\n  if (constant < 0x433) {\n    return CONCAT44(result2 + (0x432 - constant) * 0x100000 | sign,result1);\n  }\n  shift = ~(0x432 - constant);\n  if (0x1e < (int)shift) {\n    return CONCAT44(input,result2 >> (shift - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  count = shift - 0x13;\n  if (count == 0 || count < 0 != SCARRY4(shift - 0x1f,0xc)) {\n    shift = shift + 1;\n    return CONCAT44(sign | result2 >> (shift & 0xff),\n                    result1 >> (shift & 0xff) | result2 << (0x20 - shift & 0xff));\n  }\n  return CONCAT44(input,result1 >> (0x20 - (0xcU - count) & 0xff) | result2 << (0xcU - count & 0xff))\n         & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800856c": "bitwise_operations_0800856c",
                "param_1": "input",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "shift",
                "iVar4": "count",
                "uVar5": "constant",
                "uVar6": "sign",
                "in_r12": "temp",
                "bVar7": "condition1",
                "bVar8": "condition2",
                "bVar9": "condition3"
            },
            "calling": [
                "FUN_08009d78",
                "FUN_0800a5a0",
                "FUN_08002c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008590": {
            "entrypoint": "0x08008590",
            "current_name": "reverse_bit_pattern_08008590",
            "code": "\nulonglong reverseBitPattern_08008590(uint input_value,undefined4 unused_param1,undefined4 unused_param2,uint unused_param3)\n\n{\n  uint msb_bit;\n  uint temp_var;\n  uint result_upper;\n  uint shifted_input;\n  uint shifted_input_bitwise_not;\n  int count;\n  uint shift_amount;\n  uint remaining_shift_amount;\n  bool is_negative_shift;\n  bool is_cond_true;\n  bool is_cond_false;\n  \n  shifted_input_bitwise_not = input_value << 1;\n  is_cond_true = shifted_input_bitwise_not == 0;\n  msb_bit = (uint)((input_value & 0x80000000) != 0) << 0x1f;\n  shifted_input = (uint)((int)shifted_input_bitwise_not >> 3) >> 1;\n  result_upper = msb_bit | shifted_input;\n  input_value = input_value << 0x1d;\n  if (!is_cond_true) {\n    unused_param3 = shifted_input_bitwise_not & 0xff000000;\n    is_cond_true = unused_param3 == 0;\n  }\n  if (!is_cond_true) {\n    is_cond_true = unused_param3 == 0xff000000;\n  }\n  if (!is_cond_true) {\n    return CONCAT44(result_upper,input_value) ^ 0x3800000000000000;\n  }\n  if ((shifted_input_bitwise_not & 0xffffff) == 0) {\n    return CONCAT44(result_upper,input_value);\n  }\n  if (unused_param3 == 0xff000000) {\n    return CONCAT44(result_upper,input_value) | 0x8000000000000;\n  }\n  temp_var = input_value;\n  shifted_input_bitwise_not = shifted_input;\n  if (shifted_input == 0) {\n    temp_var = 0;\n    shifted_input_bitwise_not = input_value;\n  }\n  count = LZCOUNT(shifted_input_bitwise_not);\n  if (shifted_input == 0) {\n    count = count + 0x20;\n  }\n  shift_amount = count - 0xb;\n  is_cond_false = SBORROW4(shift_amount,0x20);\n  shifted_input = count - 0x2b;\n  is_cond_true = (int)shifted_input < 0;\n  is_negative_shift = shifted_input == 0;\n  if ((int)shift_amount < 0x20) {\n    is_cond_false = SCARRY4(shifted_input,0xc);\n    count = count + -0x1f;\n    is_cond_true = count < 0;\n    is_negative_shift = count == 0;\n    shifted_input = shift_amount;\n    if (!is_negative_shift && is_cond_true == is_cond_false) {\n      temp_var = shifted_input_bitwise_not << (shift_amount & 0xff);\n      shifted_input_bitwise_not = shifted_input_bitwise_not >> (0xcU - count & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (is_negative_shift || is_cond_true != is_cond_false) {\n    remaining_shift_amount = 0x20 - shifted_input;\n  }\n  shifted_input_bitwise_not = shifted_input_bitwise_not << (shifted_input & 0xff);\n  if (is_negative_shift || is_cond_true != is_cond_false) {\n    shifted_input_bitwise_not = shifted_input_bitwise_not | temp_var >> (remaining_shift_amount & 0xff);\n  }\n  if (is_negative_shift || is_cond_true != is_cond_false) {\n    temp_var = temp_var << (shifted_input & 0xff);\n  }\nLAB_08008458:\n  if ((int)shift_amount < 0x381) {\n    return CONCAT44(shifted_input_bitwise_not + (0x380 - shift_amount) * 0x100000 | msb_bit,temp_var);\n  }\n  shifted_input = ~(0x380 - shift_amount);\n  if (0x1e < (int)shifted_input) {\n    return CONCAT44(result_upper,shifted_input_bitwise_not >> (shifted_input - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  count = shifted_input - 0x13;\n  if (count == 0 || count < 0 != SCARRY4(shifted_input - 0x1f,0xc)) {\n    shifted_input = shifted_input + 1;\n    return CONCAT44(msb_bit | shifted_input_bitwise_not >> (shifted_input & 0xff),\n                    temp_var >> (shifted_input & 0xff) | shifted_input_bitwise_not << (0x20 - shifted_input & 0xff));\n  }\n  return CONCAT44(result_upper,temp_var >> (0x20 - (0xcU - count) & 0xff) | shifted_input_bitwise_not << (0xcU - count & 0xff)) &\n         0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008590": "reverse_bit_pattern_08008590",
                "param_1": "input_value",
                "param_2": "unused_param1",
                "param_3": "unused_param2",
                "param_4": "unused_param3",
                "uVar1": "msb_bit",
                "uVar2": "temp_var",
                "uVar3": "result_upper",
                "uVar4": "shifted_input",
                "uVar5": "shifted_input_bitwise_not",
                "uVar7": "shift_amount",
                "iVar6": "count",
                "bVar8": "is_negative_shift",
                "bVar9": "is_cond_true",
                "bVar10": "is_cond_false",
                "in_r12": "remaining_shift_amount"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08002638",
                "FUN_080005b4",
                "FUN_08002408",
                "FUN_08004e30",
                "FUN_080046d0",
                "FUN_08001f00",
                "FUN_08003b98",
                "FUN_08004940",
                "FUN_0800056c",
                "FUN_080044e8",
                "FUN_08002978",
                "FUN_08001994",
                "FUN_08002c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008640": {
            "entrypoint": "0x08008640",
            "current_name": "calculate_floating_point_08008640",
            "code": "\nulonglong calculateFloatingPoint_08008640(undefined4 value1,uint value2,uint value3,uint value4)\n\n{\n  ulonglong result1;\n  longlong result2;\n  uint temp1;\n  uint temp2;\n  int temp3;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  uint temp7;\n  bool flag1;\n  bool flag2;\n  bool flag3;\n  ulonglong temp8;\n  \n  temp8 = CONCAT44(value2,value1);\n  temp6 = 0x7ff;\n  temp2 = value2 >> 0x14 & 0x7ff;\n  flag1 = temp2 == 0;\n  if (!flag1) {\n    temp5 = value4 >> 0x14 & 0x7ff;\n    flag1 = temp5 == 0;\n  }\n  if (!flag1) {\n    flag1 = temp2 == 0x7ff;\n  }\n  if (!flag1) {\n    flag1 = temp5 == 0x7ff;\n  }\n  if (flag1) {\n    temp8 = FUN_0800881c();\n  }\n  temp1 = (uint)(temp8 >> 0x20);\n  temp3 = temp2 + temp5;\n  temp2 = temp1 ^ value4;\n  temp1 = temp1 & ~(temp6 << 0x15);\n  value4 = value4 & ~(temp6 << 0x15);\n  flag1 = ((uint)temp8 | temp1 << 0xc) == 0;\n  if (!flag1) {\n    flag1 = (value3 | value4 << 0xc) == 0;\n  }\n  temp1 = temp1 | 0x100000;\n  value4 = value4 | 0x100000;\n  if (flag1) {\n    value3 = (uint)temp8 | value3;\n    value4 = (temp2 & 0x80000000 | temp1) ^ value4;\n    temp2 = temp6 >> 1;\n    flag3 = SBORROW4(temp3,temp2);\n    temp4 = temp3 - temp2;\n    flag1 = temp4 == 0;\n    temp1 = temp4;\n    if (!flag1 && (int)temp2 <= temp3) {\n      flag3 = SBORROW4(temp6,temp4);\n      temp1 = temp6 - temp4;\n      flag1 = temp6 == temp4;\n    }\n    if (!flag1 && (int)temp1 < 0 == flag3) {\n      value4 = value4 | temp4 * 0x100000;\n    }\n    if (!flag1 && (int)temp1 < 0 == flag3) {\n      return CONCAT44(value4,value3);\n    }\n    value4 = value4 | 0x100000;\n    temp6 = 0;\n    flag3 = SBORROW4(temp4,1);\n    temp4 = temp4 - 1;\n    flag1 = temp4 == 0;\n    temp2 = temp4;\n  }\n  else {\n    result1 = (temp8 & 0xffffffff) * (ulonglong)value3;\n    temp8 = (temp8 & 0xffffffff) * (ulonglong)value4 +\n             (ulonglong)temp1 * (ulonglong)value3 + (result1 >> 0x20);\n    temp7 = (uint)temp8;\n    result2 = (ulonglong)temp1 * (ulonglong)value4 + (temp8 >> 0x20);\n    temp6 = (uint)result2;\n    temp1 = (uint)((ulonglong)result2 >> 0x20);\n    if ((int)result1 != 0) {\n      temp7 = temp7 | 1;\n    }\n    temp4 = (temp3 + -0x3ff) - (uint)(temp1 < 0x200);\n    if (temp1 < 0x200) {\n      flag1 = (temp7 & 0x80000000) != 0;\n      temp7 = temp7 << 1;\n      result2 = CONCAT44(temp1 * 2 + (uint)(CARRY4(temp6,temp6) || CARRY4(temp6 * 2,(uint)flag1)),\n                       temp6 * 2 + (uint)flag1);\n    }\n    value4 = temp2 & 0x80000000 | (int)((ulonglong)result2 >> 0x20) << 0xb | (uint)result2 >> 0x15;\n    value3 = (uint)result2 << 0xb | temp7 >> 0x15;\n    temp6 = temp7 * 0x800;\n    flag2 = 0xfc < temp4;\n    flag3 = SBORROW4(temp4,0xfd);\n    temp1 = temp4 - 0xfd;\n    flag1 = temp1 == 0;\n    temp2 = temp1;\n    if (flag2 && !flag1) {\n      flag2 = 0x6ff < temp1;\n      flag3 = SBORROW4(temp1,0x700);\n      temp2 = temp4 - 0x7fd;\n      flag1 = temp1 == 0x700;\n    }\n    if (!flag2 || flag1) {\n      flag1 = 0x7fffffff < temp6;\n      if (temp6 == 0x80000000) {\n        flag1 = (temp7 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(value4 + temp4 * 0x100000 + (uint)CARRY4(value3,(uint)flag1),value3 + flag1\n                     );\n    }\n  }\n  if (!flag1 && (int)temp2 < 0 == flag3) {\n    return (ulonglong)(value4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  flag2 = SCARRY4(temp4,0x36);\n  flag1 = (int)(temp4 + 0x36) < 0;\n  flag3 = temp4 == 0xffffffca;\n  if (flag3 || flag1 != flag2) {\n    value3 = 0;\n  }\n  if (flag3 || flag1 != flag2) {\n    value4 = value4 & 0x80000000;\n  }\n  if (flag3 || flag1 != flag2) {\n    return CONCAT44(value4,value3);\n  }\n  temp2 = -temp4;\n  temp1 = temp2 - 0x20;\n  if (0x1f < (int)temp2) {\n    temp4 = value3 >> (temp1 & 0xff) | value4 << (0x20 - temp1 & 0xff);\n    temp2 = (value4 >> (temp1 & 0xff) & ~((value4 & 0x80000000) >> (temp1 & 0xff))) -\n            ((int)temp4 >> 0x1f);\n    if ((temp6 | value3 << (0x20 - temp1 & 0xff) | temp4 << 1) == 0) {\n      temp2 = temp2 & ~(temp4 >> 0x1f);\n    }\n    return CONCAT44(value4,temp2) & 0x80000000ffffffff;\n  }\n  temp3 = temp2 - 0x14;\n  if (temp3 == 0 || temp3 < 0 != SCARRY4(temp1,0xc)) {\n    temp7 = value3 << (temp4 + 0x20 & 0xff);\n    temp1 = value3 >> (temp2 & 0xff) | value4 << (temp4 + 0x20 & 0xff);\n    temp4 = temp1 + -((int)temp7 >> 0x1f);\n    if ((temp6 | temp7 << 1) == 0) {\n      temp4 = temp4 & ~(temp7 >> 0x1f);\n    }\n    return CONCAT44((value4 & 0x80000000) +\n                    ((value4 & 0x7fffffff) >> (temp2 & 0xff)) +\n                    (uint)CARRY4(temp1,-((int)temp7 >> 0x1f)),temp4);\n  }\n  temp2 = 0xc - temp3;\n  temp4 = value3 << (temp2 & 0xff);\n  temp2 = value3 >> (0x20 - temp2 & 0xff) | value4 << (temp2 & 0xff);\n  temp1 = temp2 + -((int)temp4 >> 0x1f);\n  if ((temp6 | temp4 << 1) == 0) {\n    temp1 = temp1 & ~(temp4 >> 0x1f);\n  }\n  return CONCAT44((value4 & 0x80000000) + (uint)CARRY4(temp2,-((int)temp4 >> 0x1f)),temp1);\n}\n\n",
            "renaming": {
                "FUN_08008640": "calculate_floating_point_08008640",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4",
                "uVar1": "result1",
                "lVar2": "result2",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "iVar5": "temp3",
                "uVar6": "temp4",
                "unaff_r5": "temp5",
                "uVar7": "temp6",
                "uVar8": "temp7",
                "bVar9": "flag1",
                "bVar10": "flag2",
                "bVar11": "flag3",
                "uVar12": "temp8"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08002638",
                "FUN_08009d78",
                "FUN_0800a5a0",
                "FUN_080046d0",
                "FUN_08001f00",
                "FUN_0800af78",
                "FUN_0800b2e8",
                "FUN_08004940",
                "FUN_0800a1bc",
                "FUN_0800a348",
                "FUN_0800056c",
                "FUN_080044e8",
                "FUN_08009b24",
                "FUN_08001994",
                "FUN_0800adf0",
                "FUN_08002c18"
            ],
            "called": [
                "FUN_0800881c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800881c": {
            "entrypoint": "0x0800881c",
            "current_name": "calculate_bitwise_0800881c",
            "code": "\nulonglong calculate_bitwise_0800881c(uint input1,uint input2,uint input3,uint input4)\n\n{\n  uint input1_bit;\n  uint input1_copy;\n  uint in_r12_bit;\n  uint input2_copy;\n  uint in_r12_copy;\n  bool is_zero;\n  \n  in_r12_bit = in_r12_copy & input4 >> 0x14;\n  if (input1_copy != in_r12_copy && in_r12_bit != in_r12_copy) {\n    is_zero = (input1 | input2 << 1) == 0;\n    if (!is_zero) {\n      is_zero = (input3 | input4 << 1) == 0;\n    }\n    if (is_zero) {\n      return (ulonglong)((input2 ^ input4) & 0x80000000) << 0x20;\n    }\n    if (input1_copy == 0) {\n      input2_copy = input2 & 0x80000000;\n      do {\n        input1_bit = input1 & 0x80000000;\n        input1 = input1 << 1;\n        input2 = input2 * 2 + (uint)(input1_bit != 0);\n      } while ((input2 & 0x100000) == 0);\n      input2 = input2 | input2_copy;\n      if (in_r12_bit != 0) {\n        return CONCAT44(input2,input1);\n      }\n    }\n    do {\n      in_r12_bit = input3 & 0x80000000;\n      input3 = input3 << 1;\n      input4 = input4 * 2 + (uint)(in_r12_bit != 0);\n    } while ((input4 & 0x100000) == 0);\n    return CONCAT44(input2,input1);\n  }\n  is_zero = (input1 | input2 << 1) == 0;\n  if (is_zero) {\n    input2 = input4;\n    input1 = input3;\n  }\n  if (!is_zero) {\n    is_zero = (input3 | input4 << 1) == 0;\n  }\n  input2_copy = input2;\n  if (((!is_zero) && ((input1_copy != in_r12_copy || ((input1 | input2 << 0xc) == 0)))) &&\n     ((in_r12_bit != in_r12_copy || (input1 = input3, input2_copy = input4, (input3 | input4 << 0xc) == 0)))) {\n    return (ulonglong)((input2 ^ input4) & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  return CONCAT44(input2_copy,input1) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_0800881c": "calculate_bitwise_0800881c",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "input1_bit",
                "unaff_r4": "input1_copy",
                "uVar2": "in_r12_bit",
                "uVar3": "input2_copy",
                "in_r12": "in_r12_copy",
                "bVar4": "is_zero"
            },
            "calling": [
                "FUN_08008640"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008894": {
            "entrypoint": "0x08008894",
            "current_name": "calculate_floating_point_08008894",
            "code": "\nulonglong calculateFloatingPoint_08008894(undefined4 signAndExponent,uint fractionHigh,uint fractionLow,uint signAndExponent2)\n\n{\n  uint leftmostBit;\n  uint fractionHighCopy;\n  uint fractionLowCopy;\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint temp4;\n  int difference;\n  uint exponentDifference;\n  uint unaff_r5;\n  uint temp5;\n  uint resultFractionHigh;\n  uint fractionDifference;\n  uint MAX;\n  bool isZero;\n  bool isEqual;\n  bool isNegative;\n  undefined8 temp6;\n  \n  temp6 = CONCAT44(fractionHigh,signAndExponent);\n  MAX = 0x7ff;\n  temp4 = fractionHigh >> 0x14 & 0x7ff;\n  isZero = temp4 == 0;\n  if (!isZero) {\n    unaff_r5 = signAndExponent2 >> 0x14 & 0x7ff;\n    isZero = unaff_r5 == 0;\n  }\n  if (!isZero) {\n    isZero = temp4 == 0x7ff;\n  }\n  if (!isZero) {\n    isZero = unaff_r5 == 0x7ff;\n  }\n  if (isZero) {\n    temp6 = FUN_08008a02();\n  }\n  exponentDifference = (uint)((ulonglong)temp6 >> 0x20);\n  resultFractionHigh = (uint)temp6;\n  difference = temp4 - unaff_r5;\n  if ((fractionLow | signAndExponent2 << 0xc) == 0) {\n    temp4 = (exponentDifference ^ signAndExponent2) & 0x80000000 | exponentDifference & 0xfffff;\n    isNegative = SCARRY4(difference,MAX >> 1);\n    exponentDifference = difference + (MAX >> 1);\n    isZero = (int)exponentDifference < 0;\n    isEqual = exponentDifference == 0;\n    if (!isEqual && isZero == isNegative) {\n      isNegative = SBORROW4(MAX,exponentDifference);\n      isZero = (int)(MAX - exponentDifference) < 0;\n      isEqual = MAX == exponentDifference;\n    }\n    if (!isEqual && isZero == isNegative) {\n      temp4 = temp4 | exponentDifference * 0x100000;\n    }\n    if (!isEqual && isZero == isNegative) {\n      return CONCAT44(temp4,resultFractionHigh);\n    }\n    temp4 = temp4 | 0x100000;\n    MAX = 0;\n    isEqual = SBORROW4(exponentDifference,1);\n    exponentDifference = exponentDifference - 1;\n    isZero = exponentDifference == 0;\n    fractionLowCopy = exponentDifference;\n  }\n  else {\n    fractionLowCopy = (signAndExponent2 << 0xc) >> 4 | 0x10000000 | fractionLow >> 0x18;\n    MAX = fractionLow << 8;\n    temp5 = (exponentDifference << 0xc) >> 4 | 0x10000000 | resultFractionHigh >> 0x18;\n    resultFractionHigh = resultFractionHigh * 0x100;\n    temp4 = (exponentDifference ^ signAndExponent2) & 0x80000000;\n    isZero = fractionLowCopy <= temp5;\n    if (temp5 == fractionLowCopy) {\n      isZero = MAX <= resultFractionHigh;\n    }\n    difference = difference + (uint)isZero;\n    exponentDifference = difference + 0x3fd;\n    if (isZero == false) {\n      fractionLowCopy = fractionLowCopy >> 1;\n      MAX = (uint)((fractionLow >> 0x18 & 1) != 0) << 0x1f | MAX >> 1;\n    }\n    fractionDifference = resultFractionHigh - MAX;\n    temp5 = (temp5 - fractionLowCopy) - (uint)(resultFractionHigh < MAX);\n    temp1 = fractionLowCopy >> 1;\n    leftmostBit = (uint)((fractionLowCopy & 1) != 0) << 0x1f | MAX >> 1;\n    resultFractionHigh = 0x100000;\n    fractionLowCopy = 0x80000;\n    while( true ) {\n      isZero = leftmostBit <= fractionDifference;\n      if (temp1 < temp5 || temp5 - temp1 < (uint)isZero) {\n        fractionDifference = fractionDifference - leftmostBit;\n        resultFractionHigh = resultFractionHigh | fractionLowCopy;\n        temp5 = (temp5 - temp1) - (uint)!isZero;\n      }\n      temp2 = temp1 >> 1;\n      leftmostBit = (uint)((temp1 & 1) != 0) << 0x1f | leftmostBit >> 1;\n      isEqual = leftmostBit <= fractionDifference;\n      isZero = temp5 - temp2 < (uint)isEqual;\n      MAX = temp5;\n      if (temp2 < temp5 || isZero) {\n        fractionDifference = fractionDifference - leftmostBit;\n        MAX = (temp5 - temp2) - (uint)!isEqual;\n      }\n      if (temp2 < temp5 || isZero) {\n        resultFractionHigh = resultFractionHigh | fractionLowCopy >> 1;\n      }\n      temp5 = temp1 >> 2;\n      fractionHighCopy = (uint)((temp2 & 1) != 0) << 0x1f | leftmostBit >> 1;\n      isEqual = fractionHighCopy <= fractionDifference;\n      isZero = MAX - temp5 < (uint)isEqual;\n      temp2 = MAX;\n      if (temp5 < MAX || isZero) {\n        fractionDifference = fractionDifference - fractionHighCopy;\n        temp2 = (MAX - temp5) - (uint)!isEqual;\n      }\n      if (temp5 < MAX || isZero) {\n        resultFractionHigh = resultFractionHigh | fractionLowCopy >> 2;\n      }\n      temp3 = temp1 >> 3;\n      leftmostBit = (uint)((temp5 & 1) != 0) << 0x1f | fractionHighCopy >> 1;\n      isEqual = leftmostBit <= fractionDifference;\n      isZero = temp2 - temp3 < (uint)isEqual;\n      temp5 = temp2;\n      if (temp3 < temp2 || isZero) {\n        fractionDifference = fractionDifference - leftmostBit;\n        temp5 = (temp2 - temp3) - (uint)!isEqual;\n      }\n      if (temp3 < temp2 || isZero) {\n        resultFractionHigh = resultFractionHigh | fractionLowCopy >> 3;\n      }\n      MAX = temp5 | fractionDifference;\n      if (MAX == 0) break;\n      temp5 = temp5 << 4 | fractionDifference >> 0x1c;\n      fractionDifference = fractionDifference << 4;\n      temp1 = temp1 & 0xfffffff8 | leftmostBit >> 0x1d;\n      leftmostBit = (fractionHighCopy >> 1) << 3;\n      fractionLowCopy = fractionLowCopy >> 4;\n      if (fractionLowCopy == 0) {\n        temp3 = temp1;\n        if ((temp4 & 0x100000) != 0) goto LAB_080089b2;\n        temp4 = temp4 | resultFractionHigh;\n        resultFractionHigh = 0;\n        fractionLowCopy = 0x80000000;\n      }\n    }\n    if ((temp4 & 0x100000) == 0) {\n      temp4 = temp4 | resultFractionHigh;\n      resultFractionHigh = 0;\n    }\nLAB_080089b2:\n    isNegative = 0xfc < exponentDifference;\n    isEqual = SBORROW4(exponentDifference,0xfd);\n    temp1 = difference + 0x300;\n    isZero = temp1 == 0;\n    fractionLowCopy = temp1;\n    if (isNegative && !isZero) {\n      isNegative = 0x6ff < temp1;\n      isEqual = SBORROW4(temp1,0x700);\n      fractionLowCopy = difference - 0x400;\n      isZero = temp1 == 0x700;\n    }\n    if (!isNegative || isZero) {\n      isZero = temp3 <= temp5;\n      if (temp5 == temp3) {\n        isZero = leftmostBit <= fractionDifference;\n      }\n      if (temp5 == temp3 && fractionDifference == leftmostBit) {\n        isZero = (resultFractionHigh & 1) != 0;\n      }\n      return CONCAT44(temp4 + exponentDifference * 0x100000 + (uint)CARRY4(resultFractionHigh,(uint)isZero),resultFractionHigh + isZero);\n    }\n  }\n  if (!isZero && (int)fractionLowCopy < 0 == isEqual) {\n    return (ulonglong)(temp4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  isNegative = SCARRY4(exponentDifference,0x36);\n  isZero = (int)(exponentDifference + 0x36) < 0;\n  isEqual = exponentDifference == 0xffffffca;\n  if (isEqual || isZero != isNegative) {\n    resultFractionHigh = 0;\n  }\n  if (isEqual || isZero != isNegative) {\n    temp4 = temp4 & 0x80000000;\n  }\n  if (isEqual || isZero != isNegative) {\n    return CONCAT44(temp4,resultFractionHigh);\n  }\n  fractionLowCopy = -exponentDifference;\n  temp5 = fractionLowCopy - 0x20;\n  if (0x1f < (int)fractionLowCopy) {\n    fractionLowCopy = resultFractionHigh >> (temp5 & 0xff) | temp4 << (0x20 - temp5 & 0xff);\n    exponentDifference = (temp4 >> (temp5 & 0xff) & ~((temp4 & 0x80000000) >> (temp5 & 0xff))) -\n            ((int)fractionLowCopy >> 0x1f);\n    if ((MAX | resultFractionHigh << (0x20 - temp5 & 0xff) | fractionLowCopy << 1) == 0) {\n      exponentDifference = exponentDifference & ~(fractionLowCopy >> 0x1f);\n    }\n    return CONCAT44(temp4,exponentDifference) & 0x80000000ffffffff;\n  }\n  difference = fractionLowCopy - 0x14;\n  if (difference != 0 && difference < 0 == SCARRY4(temp5,0xc)) {\n    exponentDifference = 0xc - difference;\n    fractionLowCopy = resultFractionHigh << (exponentDifference & 0xff);\n    resultFractionHigh = resultFractionHigh >> (0x20 - exponentDifference & 0xff) | temp4 << (exponentDifference & 0xff);\n    exponentDifference = resultFractionHigh + -((int)fractionLowCopy >> 0x1f);\n    if ((MAX | fractionLowCopy << 1) == 0) {\n      exponentDifference = exponentDifference & ~(fractionLowCopy >> 0x1f);\n    }\n    return CONCAT44((temp4 & 0x80000000) + (uint)CARRY4(resultFractionHigh,-((int)fractionLowCopy >> 0x1f)),exponentDifference);\n  }\n  temp5 = resultFractionHigh << (exponentDifference + 0x20 & 0xff);\n  resultFractionHigh = resultFractionHigh >> (fractionLowCopy & 0xff) | temp4 << (exponentDifference + 0x20 & 0xff);\n  exponentDifference = resultFractionHigh + -((int)temp5 >> 0x1f);\n  if ((MAX | temp5 << 1) == 0) {\n    exponentDifference = exponentDifference & ~(temp5 >> 0x1f);\n  }\n  return CONCAT44((temp4 & 0x80000000) +\n                  ((temp4 & 0x7fffffff) >> (fractionLowCopy & 0xff)) +\n                  (uint)CARRY4(resultFractionHigh,-((int)temp5 >> 0x1f)),exponentDifference);\n}\n\n",
            "renaming": {
                "FUN_08008894": "calculate_floating_point_08008894",
                "param_1": "signAndExponent",
                "param_2": "fractionHigh",
                "param_3": "fractionLow",
                "param_4": "signAndExponent2",
                "uVar1": "leftmostBit",
                "uVar2": "fractionHighCopy",
                "uVar3": "fractionLowCopy",
                "uVar4": "temp1",
                "uVar5": "temp2",
                "uVar6": "temp3",
                "uVar7": "temp4",
                "iVar8": "difference",
                "uVar9": "exponentDifference",
                "uVar10": "temp5",
                "uVar11": "resultFractionHigh",
                "uVar12": "fractionDifference",
                "uVar13": "MAX",
                "bVar14": "isZero",
                "bVar15": "isEqual",
                "bVar16": "isNegative",
                "uVar17": "temp6"
            },
            "calling": [
                "FUN_080098d0",
                "FUN_08003004",
                "FUN_0800a1bc",
                "FUN_080005b4",
                "FUN_08001994",
                "FUN_0800af78",
                "FUN_08009990"
            ],
            "called": [
                "FUN_08008a02"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008a02": {
            "entrypoint": "0x08008a02",
            "current_name": "calculate_double_precision_08008a02",
            "code": "\nulonglong calculate_double_precision_08008a02(uint input1,uint input2,uint input3,uint input4)\n\n{\n  uint bit1;\n  uint bit2;\n  uint bit3;\n  uint bit4;\n  uint bit5;\n  bool is_zero;\n  \n  bit3 = bit5 & input4 >> 0x14;\n  bit4 = input2;\n  if (bit2 != bit5 || bit3 != bit5) {\n    if (bit2 == bit5) {\n      if (((input1 | input2 << 0xc) == 0) && (input1 = input3, bit4 = input4, bit3 != bit5)\n         ) {\nLAB_08008874:\n        return (ulonglong)((input2 ^ input4) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n    }\n    else if (bit3 == bit5) {\n      input1 = input3;\n      bit4 = input4;\n      if ((input3 | input4 << 0xc) == 0) {\nLAB_08008838:\n        return (ulonglong)((input2 ^ input4) & 0x80000000) << 0x20;\n      }\n    }\n    else {\n      is_zero = (input1 | input2 << 1) == 0;\n      if (!is_zero) {\n        is_zero = (input3 | input4 << 1) == 0;\n      }\n      if (!is_zero) {\n        if (bit2 == 0) {\n          bit4 = input2 & 0x80000000;\n          do {\n            bit1 = input1 & 0x80000000;\n            input1 = input1 << 1;\n            input2 = input2 * 2 + (uint)(bit1 != 0);\n          } while ((input2 & 0x100000) == 0);\n          input2 = input2 | bit4;\n          if (bit3 != 0) {\n            return CONCAT44(input2,input1);\n          }\n        }\n        do {\n          bit4 = input3 & 0x80000000;\n          input3 = input3 << 1;\n          input4 = input4 * 2 + (uint)(bit4 != 0);\n        } while ((input4 & 0x100000) == 0);\n        return CONCAT44(input2,input1);\n      }\n      if ((input1 | input2 << 1) != 0) goto LAB_08008874;\n      if ((input3 | input4 << 1) != 0) goto LAB_08008838;\n    }\n  }\n  return CONCAT44(bit4,input1) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_08008a02": "calculate_double_precision_08008a02",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "bit1",
                "unaff_r4": "bit2",
                "uVar2": "bit3",
                "uVar3": "bit4",
                "in_r12": "bit5",
                "bVar4": "is_zero"
            },
            "calling": [
                "FUN_08008894"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008a74": {
            "entrypoint": "0x08008a74",
            "current_name": "compare_parameters_08008a74",
            "code": "\nuint compare_parameters_08008a74(uint value1,uint value2,uint value3,uint value4)\n\n{\n  uint result;\n  bool equalValues;\n  bool lessThanOrEqual;\n  \n  if (((int)(value2 << 1) >> 0x15 == -1 || (int)(value4 << 1) >> 0x15 == -1) &&\n     ((((int)(value2 << 1) >> 0x15 == -1 && ((value1 | value2 << 0xc) != 0)) ||\n      (((int)(value4 << 1) >> 0x15 == -1 && ((value3 | value4 << 0xc) != 0)))))) {\n    return 1;\n  }\n  equalValues = (value1 | value2 << 1) == 0;\n  if (equalValues) {\n    equalValues = (value3 | value4 << 1) == 0;\n  }\n  if (!equalValues) {\n    equalValues = value2 == value4;\n  }\n  if (equalValues) {\n    equalValues = value1 == value3;\n  }\n  if (!equalValues) {\n    result = value2 ^ value4;\n    equalValues = result == 0;\n    if (-1 < (int)result) {\n      equalValues = value2 == value4;\n    }\n    lessThanOrEqual = -1 < (int)result && value4 <= value2;\n    if (equalValues) {\n      lessThanOrEqual = value3 <= value1;\n    }\n    value4 = (int)value4 >> 0x1f;\n    if (!lessThanOrEqual) {\n      value4 = ~value4;\n    }\n    return value4 | 1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008a74": "compare_parameters_08008a74",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4",
                "uVar1": "result",
                "bVar2": "equalValues",
                "bVar3": "lessThanOrEqual"
            },
            "calling": [
                "FUN_08008b00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008af0": {
            "entrypoint": "0x08008af0",
            "current_name": "execute_function_08008af0",
            "code": "\nvoid executeFunction_08008af0(undefined4 inputParam1,undefined4 inputParam2,undefined4 inputParam3,undefined4 inputParam4)\n\n{\n  FUN_08008b00(inputParam3,inputParam4,inputParam1,inputParam2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008af0": "execute_function_08008af0",
                "param_1": "inputParam1",
                "param_2": "inputParam2",
                "param_3": "inputParam3",
                "param_4": "inputParam4"
            },
            "calling": [
                "FUN_08008b4c",
                "FUN_08008b60"
            ],
            "called": [
                "FUN_08008b00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b00": {
            "entrypoint": "0x08008b00",
            "current_name": "initialize_08008b00",
            "code": "\nundefined4 initialize_08008b00(undefined4 input)\n\n{\n  FUN_08008a74();\n  return input;\n}\n\n",
            "renaming": {
                "FUN_08008b00": "initialize_08008b00",
                "param_1": "input"
            },
            "calling": [
                "FUN_08008b24",
                "FUN_08008b10",
                "FUN_08008af0"
            ],
            "called": [
                "FUN_08008a74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b10": {
            "entrypoint": "0x08008b10",
            "current_name": "check_if_input_exists_08008b10",
            "code": "\nbool checkIfInputExists_08008b10(void)\n\n{\n  char inputExists;\n  \n  FUN_08008b00();\n  return inputExists != '\\0';\n}\n\n",
            "renaming": {
                "FUN_08008b10": "check_if_input_exists_08008b10",
                "in_ZR": "inputExists"
            },
            "calling": [
                "FUN_08009d78",
                "FUN_0800a5a0"
            ],
            "called": [
                "FUN_08008b00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b24": {
            "entrypoint": "0x08008b24",
            "current_name": "is_null_terminated_string_08008b24",
            "code": "\nbool is_NullTerminatedString_08008b24(void)\n\n{\n  char input_char;\n  \n  FUN_08008b00();\n  return input_char == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08008b24": "is_null_terminated_string_08008b24",
                "in_CY": "input_char"
            },
            "calling": [
                "FUN_080098d0",
                "FUN_08003004",
                "FUN_08009b24"
            ],
            "called": [
                "FUN_08008b00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b4c": {
            "entrypoint": "0x08008b4c",
            "current_name": "check_carry_and_zero_08008b4c",
            "code": "\nbool check_Carry_and_Zero_08008b4c(void)\n\n{\n  undefined isZero;\n  undefined isCarry;\n  \n  FUN_08008af0();\n  return !(bool)isCarry || (bool)isZero;\n}\n\n",
            "renaming": {
                "FUN_08008b4c": "check_carry_and_zero_08008b4c",
                "in_ZR": "isZero",
                "in_CY": "isCarry"
            },
            "calling": [
                "FUN_0800a5a0"
            ],
            "called": [
                "FUN_08008af0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b60": {
            "entrypoint": "0x08008b60",
            "current_name": "check_if_null_terminated_08008b60",
            "code": "\nbool check_if_null_terminated_08008b60(void)\n\n{\n  char input_character;\n  \n  FUN_08008af0();\n  return input_character == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08008b60": "check_if_null_terminated_08008b60",
                "in_CY": "input_character"
            },
            "calling": [
                "FUN_080094c0",
                "FUN_08003004",
                "FUN_08009318",
                "FUN_0800af78"
            ],
            "called": [
                "FUN_08008af0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b74": {
            "entrypoint": "0x08008b74",
            "current_name": "is_valid_params_08008b74",
            "code": "\nundefined4 is_valid_params_08008b74(uint input1,int input2,uint input3,int input4)\n\n{\n  if ((((input2 << 1) >> 0x15 != -1) || ((input1 | input2 << 0xc) == 0)) &&\n     (((input4 << 1) >> 0x15 != -1 || ((input3 | input4 << 0xc) == 0)))) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08008b74": "is_valid_params_08008b74",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4"
            },
            "calling": [
                "FUN_080098d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008ba0": {
            "entrypoint": "0x08008ba0",
            "current_name": "calculate_new_value_08008ba0",
            "code": "\nuint calculate_new_value_08008ba0(uint input_value,uint multiplier)\n\n{\n  uint shifted_value;\n  int shifted_multiplier;\n  uint calculated_offset;\n  \n  shifted_multiplier = multiplier * 2 + 0x200000;\n  if (multiplier * 2 < 0xffe00000) {\n    if (-1 < shifted_multiplier) {\n      return 0;\n    }\n    shifted_value = shifted_multiplier >> 0x15;\n    calculated_offset = -shifted_value - 0x3e1;\n    if (shifted_value < 0xfffffc20 && calculated_offset != 0) {\n      shifted_value = (multiplier << 0xb | 0x80000000 | input_value >> 0x15) >> (calculated_offset & 0xff);\n      if ((multiplier & 0x80000000) != 0) {\n        shifted_value = -shifted_value;\n      }\n      return shifted_value;\n    }\n  }\n  else if ((input_value | multiplier << 0xc) != 0) {\n    return 0;\n  }\n  multiplier = multiplier & 0x80000000;\n  if (multiplier == 0) {\n    multiplier = 0x7fffffff;\n  }\n  return multiplier;\n}\n\n",
            "renaming": {
                "FUN_08008ba0": "calculate_new_value_08008ba0",
                "param_1": "input_value",
                "param_2": "multiplier",
                "uVar1": "shifted_value",
                "iVar2": "shifted_multiplier",
                "uVar3": "calculated_offset"
            },
            "calling": [
                "FUN_080095b8",
                "FUN_08003004",
                "FUN_08009d78",
                "FUN_0800a348",
                "FUN_0800a5a0",
                "FUN_080005b4",
                "FUN_0800adf0",
                "FUN_08002c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008bf0": {
            "entrypoint": "0x08008bf0",
            "current_name": "calculate_shifted_value_08008bf0",
            "code": "\nuint calculateShiftedValue_08008bf0(uint inputValue,uint shiftAmount)\n\n{\n  int shiftedValue;\n  uint finalValue;\n  \n  if ((shiftAmount & 0x80000000) != 0) {\n    return 0;\n  }\n  shiftedValue = shiftAmount * 2 + 0x200000;\n  if (shiftAmount * 2 < 0xffe00000) {\n    if (-1 < shiftedValue) {\n      return 0;\n    }\n    finalValue = -(shiftedValue >> 0x15) - 0x3e1;\n    if (-1 < (int)finalValue) {\n      return (shiftAmount << 0xb | 0x80000000 | inputValue >> 0x15) >> (finalValue & 0xff);\n    }\n  }\n  else if ((inputValue | shiftAmount << 0xc) != 0) {\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008bf0": "calculate_shifted_value_08008bf0",
                "param_1": "inputValue",
                "param_2": "shiftAmount",
                "iVar1": "shiftedValue",
                "uVar2": "finalValue"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_08003004",
                "FUN_08002408",
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_08001994",
                "FUN_08001f00",
                "FUN_08002c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008c30": {
            "entrypoint": "0x08008c30",
            "current_name": "calculate_float_08008c30",
            "code": "\nuint calculateFloat_08008c30(uint value1,uint value2)\n\n{\n  uint result1;\n  uint result2;\n  uint result3;\n  uint result4;\n  bool isZero;\n  bool isLessThan;\n  \n  result2 = value2 * 2;\n  isLessThan = result2 < 0x70000000;\n  result3 = result2 + 0x90000000;\n  result1 = result3;\n  if (!isLessThan) {\n    result4 = result2 + 0x8fe00000;\n    result1 = result4;\n  }\n  isZero = result1 == 0;\n  if (!isLessThan && result3 >= 0x200000) {\n    isZero = result4 == 0x1fc00000;\n  }\n  if (((isLessThan || result3 < 0x200000) || 0x1fc00000 < result4) || isZero) {\n    if ((value2 & 0x40000000) != 0) {\n      if (((int)result2 >> 0x15 == -1) && ((value1 | value2 << 0xc) != 0)) {\n        return 0x7fc00000;\n      }\n      return value2 & 0x80000000 | 0x7f800000;\n    }\n    if ((int)(result2 + 0x92e00000) < 0 != SCARRY4(result3,0x2e00000)) {\n      return value2 & 0x80000000;\n    }\n    result2 = 0x18 - (result2 + 0x92e00000 >> 0x15);\n    result1 = value1 >> (result2 & 0xff);\n    if (value1 << (0x20 - result2 & 0xff) != 0) {\n      result1 = result1 | 1;\n    }\n    result3 = value2 & 0x1fffff | 0x100000;\n    value1 = result1 | result3 << (0x20 - result2 & 0xff);\n    result3 = (result3 >> (result2 & 0xff)) << 1;\n  }\n  result1 = (value2 & 0x80000000 | value1 >> 0x1d) + result3 * 4 + (uint)(0x7fffffff < value1 * 8);\n  if (value1 * 8 == 0x80000000) {\n    result1 = result1 & 0xfffffffe;\n  }\n  return result1;\n}\n\n",
            "renaming": {
                "FUN_08008c30": "calculate_float_08008c30",
                "param_1": "value1",
                "param_2": "value2",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "result3",
                "in_r12": "result4",
                "bVar4": "isZero",
                "bVar5": "isLessThan"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08002638",
                "FUN_08004940",
                "FUN_0800056c",
                "FUN_080005b4",
                "FUN_080044e8",
                "FUN_080046d0",
                "FUN_08002978",
                "FUN_08001994",
                "FUN_08001f00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008cd8": {
            "entrypoint": "0x08008cd8",
            "current_name": "calculate_float_08008cd8",
            "code": "\nuint calculate_float_08008cd8(uint input_1,uint input_2,undefined4 input_3,uint input_4)\n\n{\n  int shifted_input_1;\n  int shifted_input_2;\n  uint result_1;\n  uint result_2;\n  uint temp_1;\n  uint temp_2;\n  uint temp_3;\n  bool is_equal;\n  \n  result_1 = input_2 ^ 0x80000000;\n  temp_1 = input_1 << 1;\n  is_equal = temp_1 == 0;\n  if (!is_equal) {\n    input_4 = input_2 << 1;\n    is_equal = input_4 == 0;\n  }\n  if (!is_equal) {\n    is_equal = temp_1 == input_4;\n  }\n  shifted_input_1 = (int)temp_1 >> 0x18;\n  if (!is_equal) {\n    is_equal = shifted_input_1 == -1;\n  }\n  if (!is_equal) {\n    is_equal = (int)input_4 >> 0x18 == -1;\n  }\n  if (is_equal) {\n    shifted_input_2 = (int)(input_2 << 1) >> 0x18;\n    if (shifted_input_1 == -1 || shifted_input_2 == -1) {\n      temp_1 = result_1;\n      if (shifted_input_1 == -1) {\n        temp_1 = input_1;\n      }\n      if (shifted_input_1 != -1 || shifted_input_2 != -1) {\n        result_1 = temp_1;\n      }\n      is_equal = (temp_1 & 0x7fffff) == 0;\n      if (is_equal) {\n        is_equal = (result_1 & 0x7fffff) == 0;\n      }\n      if (is_equal) {\n        is_equal = temp_1 == result_1;\n      }\n      if (!is_equal) {\n        temp_1 = temp_1 | 0x400000;\n      }\n      return temp_1;\n    }\n    if (((input_1 ^ result_1) & 0x7fffffff) != 0) {\n      if (temp_1 == 0) {\n        input_1 = result_1;\n      }\n      return input_1;\n    }\n    if (input_1 != result_1) {\n      return 0;\n    }\n    if ((temp_1 & 0xff000000) == 0) {\n      result_1 = input_1 << 1;\n      if ((input_1 & 0x80000000) != 0) {\n        result_1 = result_1 | 0x80000000;\n      }\n      return result_1;\n    }\n    if (temp_1 < 0xfe000000) {\n      return input_1 + 0x800000;\n    }\n    input_1 = input_1 & 0x80000000;\nLAB_08008e12:\n    return input_1 | 0x7f800000;\n  }\n  temp_1 = temp_1 >> 0x18;\n  input_4 = input_4 >> 0x18;\n  temp_3 = input_4 - temp_1;\n  is_equal = temp_3 != 0;\n  temp_2 = temp_1;\n  if (is_equal && temp_1 <= input_4) {\n    temp_2 = temp_1 + temp_3;\n  }\n  if (is_equal && temp_1 <= input_4) {\n    result_1 = result_1 ^ input_1;\n  }\n  if (is_equal && temp_1 <= input_4) {\n    input_1 = input_1 ^ result_1;\n  }\n  if (is_equal && temp_1 <= input_4) {\n    result_1 = result_1 ^ input_1;\n  }\n  if (input_4 < temp_1) {\n    temp_3 = -temp_3;\n  }\n  if (0x19 < temp_3) {\n    return input_1;\n  }\n  temp_1 = input_1 & 0xffffff | 0x800000;\n  if ((input_1 & 0x80000000) != 0) {\n    temp_1 = -temp_1;\n  }\n  result_2 = result_1 & 0xffffff | 0x800000;\n  if ((result_1 & 0x80000000) != 0) {\n    result_2 = -result_2;\n  }\n  if (temp_2 == temp_3) {\n    result_2 = result_2 ^ 0x800000;\n    if (temp_2 == 0) {\n      temp_1 = temp_1 ^ 0x800000;\n      temp_2 = 1;\n    }\n    else {\n      temp_3 = temp_3 - 1;\n    }\n  }\n  temp_1 = temp_1 + ((int)result_2 >> (temp_3 & 0xff));\n  result_2 = result_2 << (0x20 - temp_3 & 0xff);\n  input_1 = temp_1 & 0x80000000;\n  if ((int)temp_1 < 0) {\n    is_equal = result_2 != 0;\n    result_2 = -result_2;\n    temp_1 = -temp_1 - (uint)is_equal;\n  }\n  if (temp_1 < 0x800000) {\n    result_1 = result_2 & 0x80000000;\n    result_2 = result_2 << 1;\n    temp_1 = temp_1 * 2 + (uint)(result_1 != 0);\n    result_1 = temp_2 - 2;\n    if (temp_2 - 1 == 0 || temp_1 < 0x800000) {\n      temp_3 = LZCOUNT(temp_1) - 8;\n      temp_1 = temp_1 << (temp_3 & 0xff);\n      if ((int)result_1 < (int)temp_3) {\n        temp_1 = temp_1 >> (-(result_1 - temp_3) & 0xff);\n      }\n      else {\n        temp_1 = temp_1 + (result_1 - temp_3) * 0x800000;\n      }\n      return temp_1 | input_1;\n    }\n  }\n  else {\n    result_1 = temp_2 - 1;\n    if (0xffffff < temp_1) {\n      result_1 = temp_1 & 1;\n      temp_1 = temp_1 >> 1;\n      result_2 = (uint)(result_1 != 0) << 0x1f | result_2 >> 1;\n      result_1 = temp_2;\n      if (0xfd < temp_2) goto LAB_08008e12;\n    }\n  }\n  temp_1 = temp_1 + result_1 * 0x800000 + (uint)(0x7fffffff < result_2);\n  if (result_2 == 0x80000000) {\n    temp_1 = temp_1 & 0xfffffffe;\n  }\n  return temp_1 | input_1;\n}\n\n",
            "renaming": {
                "FUN_08008cd8": "calculate_float_08008cd8",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "iVar1": "shifted_input_1",
                "iVar2": "shifted_input_2",
                "uVar3": "result_1",
                "uVar4": "result_2",
                "uVar5": "temp_1",
                "uVar6": "temp_2",
                "uVar7": "temp_3",
                "bVar8": "is_equal"
            },
            "calling": [
                "FUN_08002908",
                "FUN_08003004",
                "FUN_08004940",
                "FUN_08002408",
                "FUN_080005b4",
                "FUN_08002978",
                "FUN_080028bc",
                "FUN_08001f00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008cdc": {
            "entrypoint": "0x08008cdc",
            "current_name": "calculate_float_08008cdc",
            "code": "\nuint calculateFloat_08008cdc(uint inputA,uint inputB,undefined4 inputC,uint inputD)\n\n{\n  int shiftedA;\n  int shiftedB;\n  uint resultA;\n  uint resultB;\n  uint shiftedResultA;\n  uint difference;\n  bool comparison;\n  \n  resultB = inputA << 1;\n  comparison = resultB == 0;\n  if (!comparison) {\n    inputD = inputB << 1;\n    comparison = inputD == 0;\n  }\n  if (!comparison) {\n    comparison = resultB == inputD;\n  }\n  shiftedA = (int)resultB >> 0x18;\n  if (!comparison) {\n    comparison = shiftedA == -1;\n  }\n  if (!comparison) {\n    comparison = (int)inputD >> 0x18 == -1;\n  }\n  if (comparison) {\n    shiftedB = (int)(inputB << 1) >> 0x18;\n    if (shiftedA == -1 || shiftedB == -1) {\n      resultB = inputB;\n      if (shiftedA == -1) {\n        resultB = inputA;\n      }\n      if (shiftedA != -1 || shiftedB != -1) {\n        inputB = resultB;\n      }\n      comparison = (resultB & 0x7fffff) == 0;\n      if (comparison) {\n        comparison = (inputB & 0x7fffff) == 0;\n      }\n      if (comparison) {\n        comparison = resultB == inputB;\n      }\n      if (!comparison) {\n        resultB = resultB | 0x400000;\n      }\n      return resultB;\n    }\n    if (((inputA ^ inputB) & 0x7fffffff) != 0) {\n      if (resultB == 0) {\n        inputA = inputB;\n      }\n      return inputA;\n    }\n    if (inputA != inputB) {\n      return 0;\n    }\n    if ((resultB & 0xff000000) == 0) {\n      resultB = inputA << 1;\n      if ((inputA & 0x80000000) != 0) {\n        resultB = resultB | 0x80000000;\n      }\n      return resultB;\n    }\n    if (resultB < 0xfe000000) {\n      return inputA + 0x800000;\n    }\n    inputA = inputA & 0x80000000;\nLAB_08008e12:\n    return inputA | 0x7f800000;\n  }\n  resultB = resultB >> 0x18;\n  inputD = inputD >> 0x18;\n  difference = inputD - resultB;\n  comparison = difference != 0;\n  shiftedResultA = resultB;\n  if (comparison && resultB <= inputD) {\n    shiftedResultA = resultB + difference;\n  }\n  if (comparison && resultB <= inputD) {\n    inputB = inputB ^ inputA;\n  }\n  if (comparison && resultB <= inputD) {\n    inputA = inputA ^ inputB;\n  }\n  if (comparison && resultB <= inputD) {\n    inputB = inputB ^ inputA;\n  }\n  if (inputD < resultB) {\n    difference = -difference;\n  }\n  if (0x19 < difference) {\n    return inputA;\n  }\n  resultB = inputA & 0xffffff | 0x800000;\n  if ((inputA & 0x80000000) != 0) {\n    resultB = -resultB;\n  }\n  resultA = inputB & 0xffffff | 0x800000;\n  if ((inputB & 0x80000000) != 0) {\n    resultA = -resultA;\n  }\n  if (shiftedResultA == difference) {\n    resultA = resultA ^ 0x800000;\n    if (shiftedResultA == 0) {\n      resultB = resultB ^ 0x800000;\n      shiftedResultA = 1;\n    }\n    else {\n      difference = difference - 1;\n    }\n  }\n  resultB = resultB + ((int)resultA >> (difference & 0xff));\n  resultA = resultA << (0x20 - difference & 0xff);\n  inputA = resultB & 0x80000000;\n  if ((int)resultB < 0) {\n    comparison = resultA != 0;\n    resultA = -resultA;\n    resultB = -resultB - (uint)comparison;\n  }\n  if (resultB < 0x800000) {\n    difference = resultA & 0x80000000;\n    resultA = resultA << 1;\n    resultB = resultB * 2 + (uint)(difference != 0);\n    difference = shiftedResultA - 2;\n    if (shiftedResultA - 1 == 0 || resultB < 0x800000) {\n      shiftedResultA = LZCOUNT(resultB) - 8;\n      resultB = resultB << (shiftedResultA & 0xff);\n      if ((int)difference < (int)shiftedResultA) {\n        resultB = resultB >> (-(difference - shiftedResultA) & 0xff);\n      }\n      else {\n        resultB = resultB + (difference - shiftedResultA) * 0x800000;\n      }\n      return resultB | inputA;\n    }\n  }\n  else {\n    difference = shiftedResultA - 1;\n    if (0xffffff < resultB) {\n      difference = resultB & 1;\n      resultB = resultB >> 1;\n      resultA = (uint)(difference != 0) << 0x1f | resultA >> 1;\n      difference = shiftedResultA;\n      if (0xfd < shiftedResultA) goto LAB_08008e12;\n    }\n  }\n  resultB = resultB + difference * 0x800000 + (uint)(0x7fffffff < resultA);\n  if (resultA == 0x80000000) {\n    resultB = resultB & 0xfffffffe;\n  }\n  return resultB | inputA;\n}\n\n",
            "renaming": {
                "FUN_08008cdc": "calculate_float_08008cdc",
                "param_1": "inputA",
                "param_2": "inputB",
                "param_3": "inputC",
                "param_4": "inputD",
                "iVar1": "shiftedA",
                "iVar2": "shiftedB",
                "uVar3": "resultA",
                "uVar4": "resultB",
                "uVar5": "shiftedResultA",
                "uVar6": "difference",
                "bVar7": "comparison"
            },
            "calling": [
                "FUN_08002908",
                "FUN_08003826",
                "FUN_08003004",
                "FUN_08004940",
                "FUN_080005b4",
                "FUN_08002978",
                "FUN_080028bc",
                "FUN_08001f00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008e3c": {
            "entrypoint": "0x08008e3c",
            "current_name": "calculate_result_08008e3c",
            "code": "\nuint calculateResult_08008e3c(uint inputValue)\n\n{\n  uint leadingZeroes;\n  uint shiftAmount;\n  int constant;\n  uint tempValue;\n  \n  if (inputValue == 0) {\n    return 0;\n  }\n  leadingZeroes = LZCOUNT(inputValue);\n  shiftAmount = leadingZeroes - 8;\n  constant = shiftAmount * -0x800000 + 0x4a800000;\n  if (7 < leadingZeroes) {\n    tempValue = 0 << (shiftAmount & 0xff);\n    leadingZeroes = constant + (inputValue << (shiftAmount & 0xff)) +\n            (0U >> (0x20 - shiftAmount & 0xff)) + (uint)(0x7fffffff < tempValue);\n    if (tempValue == 0x80000000) {\n      leadingZeroes = leadingZeroes & 0xfffffffe;\n    }\n    return leadingZeroes;\n  }\n  shiftAmount = inputValue << leadingZeroes + 0x18;\n  leadingZeroes = constant + ((inputValue >> (0x20 - (leadingZeroes + 0x18) & 0xff)) - ((int)shiftAmount >> 0x1f));\n  if ((shiftAmount & 0x7fffffff) == 0) {\n    leadingZeroes = leadingZeroes & ~(shiftAmount >> 0x1f);\n  }\n  return leadingZeroes;\n}\n\n",
            "renaming": {
                "FUN_08008e3c": "calculate_result_08008e3c",
                "param_1": "inputValue",
                "uVar1": "leadingZeroes",
                "uVar2": "shiftAmount",
                "iVar3": "constant",
                "uVar4": "tempValue"
            },
            "calling": [
                "FUN_08002638",
                "FUN_08002c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008e44": {
            "entrypoint": "0x08008e44",
            "current_name": "reverse_bits_08008e44",
            "code": "\nuint reverse_bits_08008e44(uint input_num)\n\n{\n  uint leading_zeros;\n  uint shift_amount;\n  uint sign_mask;\n  int result;\n  \n  sign_mask = input_num & 0x80000000;\n  if ((int)sign_mask < 0) {\n    input_num = -input_num;\n  }\n  if (input_num == 0) {\n    return 0;\n  }\n  leading_zeros = count_leading_zeros(input_num);\n  shift_amount = leading_zeros - 8;\n  result = ((sign_mask | 0x4b000000) - 0x800000) + shift_amount * -0x800000;\n  if (7 < leading_zeros) {\n    leading_zeros = 0 << (shift_amount & 0xff);\n    sign_mask = result + (input_num << (shift_amount & 0xff)) +\n            (0U >> (0x20 - shift_amount & 0xff)) + (uint)(0x7fffffff < leading_zeros);\n    if (leading_zeros == 0x80000000) {\n      sign_mask = sign_mask & 0xfffffffe;\n    }\n    return sign_mask;\n  }\n  shift_amount = input_num << leading_zeros + 0x18;\n  sign_mask = result + ((input_num >> (0x20 - (leading_zeros + 0x18) & 0xff)) - ((int)shift_amount >> 0x1f));\n  if ((shift_amount & 0x7fffffff) == 0) {\n    sign_mask = sign_mask & ~(shift_amount >> 0x1f);\n  }\n  return sign_mask;\n}\n\n",
            "renaming": {
                "FUN_08008e44": "reverse_bits_08008e44",
                "param_1": "input_num",
                "uVar1": "leading_zeros",
                "uVar2": "shift_amount",
                "uVar3": "sign_mask",
                "iVar4": "result",
                "LZCOUNT": "count_leading_zeros"
            },
            "calling": [
                "FUN_08003618",
                "FUN_08003004",
                "FUN_08004940",
                "FUN_08002408",
                "FUN_08001f00",
                "FUN_080004fc",
                "FUN_08002c18",
                "FUN_080024c4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008eec": {
            "entrypoint": "0x08008eec",
            "current_name": "process_data_08008eec",
            "code": "\nuint processData_08008eec(uint input1,uint input2,undefined4 value1,uint value2)\n\n{\n  longlong result;\n  uint output;\n  uint temp1;\n  int sum;\n  int diff;\n  uint temp2;\n  int temp3;\n  uint temp4;\n  bool flag1;\n  bool flag2;\n  \n  temp1 = input1 >> 0x17 & 0xff;\n  flag1 = temp1 == 0;\n  if (!flag1) {\n    value2 = input2 >> 0x17 & 0xff;\n    flag1 = value2 == 0;\n  }\n  if (!flag1) {\n    flag1 = temp1 == 0xff;\n  }\n  if (!flag1) {\n    flag1 = value2 == 0xff;\n  }\n  if (flag1) {\n    value2 = input2 >> 0x17 & 0xff;\n    if (temp1 == 0xff || value2 == 0xff) {\n      flag1 = input1 == 0 || input1 == 0x80000000;\n      output = input2;\n      if (input1 != 0 && input1 != 0x80000000) {\n        flag1 = input2 == 0;\n        output = input1;\n      }\n      if (!flag1) {\n        flag1 = input2 == 0x80000000;\n      }\n      temp4 = output;\n      if (((flag1) || ((temp1 == 0xff && ((output & 0x7fffff) != 0)))) ||\n         ((value2 == 0xff && (temp4 = input2, (input2 & 0x7fffff) != 0)))) {\n        return temp4 | 0x7fc00000;\n      }\n      output = output ^ input2;\n      goto LAB_0800903c;\n    }\n    flag1 = (input1 & 0x7fffffff) == 0;\n    if (!flag1) {\n      flag1 = (input2 & 0x7fffffff) == 0;\n    }\n    if (flag1) {\n      return (input1 ^ input2) & 0x80000000;\n    }\n    flag1 = temp1 == 0;\n    output = input1 & 0x80000000;\n    while( true ) {\n      if (flag1) {\n        input1 = input1 << 1;\n        flag1 = (input1 & 0x800000) == 0;\n      }\n      if (!flag1) break;\n      temp1 = temp1 - 1;\n    }\n    input1 = input1 | output;\n    flag1 = value2 == 0;\n    output = input2 & 0x80000000;\n    while( true ) {\n      if (flag1) {\n        input2 = input2 << 1;\n        flag1 = (input2 & 0x800000) == 0;\n      }\n      if (!flag1) break;\n      value2 = value2 - 1;\n    }\n    input2 = input2 | output;\n  }\n  sum = temp1 + value2;\n  temp4 = input1 ^ input2;\n  temp1 = input1 << 9;\n  flag1 = temp1 == 0;\n  if (!flag1) {\n    input2 = input2 << 9;\n    flag1 = input2 == 0;\n  }\n  if (flag1) {\n    if (temp1 == 0) {\n      input2 = input2 << 9;\n    }\n    output = temp4 & 0x80000000 | input1 & 0x7fffff | input2 >> 9;\n    flag2 = SBORROW4(sum,0x7f);\n    diff = sum + -0x7f;\n    flag1 = diff == 0;\n    temp3 = diff;\n    if (!flag1 && 0x7e < sum) {\n      flag2 = SBORROW4(0xff,diff);\n      temp3 = 0xff - diff;\n      flag1 = diff == 0xff;\n    }\n    if (!flag1 && temp3 < 0 == flag2) {\n      output = output | diff * 0x800000;\n    }\n    if (!flag1 && temp3 < 0 == flag2) {\n      return output;\n    }\n    output = output | 0x800000;\n    temp2 = 0;\n    flag2 = SBORROW4(diff,1);\n    temp4 = sum - 0x80;\n    flag1 = temp4 == 0;\n    temp1 = temp4;\n  }\n  else {\n    result = (ulonglong)(temp1 >> 5 | 0x8000000) * (ulonglong)(input2 >> 5 | 0x8000000);\n    temp2 = (uint)result;\n    output = (uint)((ulonglong)result >> 0x20);\n    flag1 = output < 0x800000;\n    if (flag1) {\n      output = output << 1;\n    }\n    if (flag1) {\n      output = output | temp2 >> 0x1f;\n      temp2 = temp2 << 1;\n    }\n    output = temp4 & 0x80000000 | output;\n    temp4 = (sum + -0x7f) - (uint)flag1;\n    flag2 = SBORROW4(temp4,0xfd);\n    flag1 = temp4 == 0xfd;\n    temp1 = temp4 - 0xfd;\n    if (temp4 < 0xfe) {\n      output = output + temp4 * 0x800000 + (uint)(0x7fffffff < temp2);\n      if (temp2 == 0x80000000) {\n        output = output & 0xfffffffe;\n      }\n      return output;\n    }\n  }\n  if (flag1 || (int)temp1 < 0 != flag2) {\n    flag1 = (int)(temp4 + 0x19) < 0;\n    if (temp4 == 0xffffffe7 || flag1 != SCARRY4(temp4,0x19)) {\n      output = output & 0x80000000;\n    }\n    if (temp4 != 0xffffffe7 && flag1 == SCARRY4(temp4,0x19)) {\n      temp1 = (output << 1) >> (-temp4 & 0xff);\n      temp4 = output << (temp4 + 0x20 & 0xff);\n      temp1 = ((uint)((output & 0x80000000) != 0) << 0x1f | temp1 >> 1) + (uint)((byte)temp1 & 1);\n      if ((temp2 | temp4 << 1) == 0) {\n        temp1 = temp1 & ~(temp4 >> 0x1f);\n      }\n      return temp1;\n    }\n    return output;\n  }\nLAB_0800903c:\n  return output & 0x80000000 | 0x7f800000;\n}\n\n",
            "renaming": {
                "FUN_08008eec": "process_data_08008eec",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "value1",
                "param_4": "value2",
                "lVar1": "result",
                "uVar2": "output",
                "uVar3": "temp1",
                "iVar4": "sum",
                "iVar5": "diff",
                "uVar6": "temp2",
                "iVar7": "temp3",
                "uVar8": "temp4",
                "bVar9": "flag1",
                "bVar10": "flag2"
            },
            "calling": [
                "FUN_08003618",
                "FUN_08003826",
                "FUN_08003004",
                "FUN_08002638",
                "FUN_08002408",
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_080028bc",
                "FUN_08001f00",
                "FUN_08002908",
                "FUN_08002978",
                "FUN_08001994",
                "FUN_08002c18",
                "FUN_080024c4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009054": {
            "entrypoint": "0x08009054",
            "current_name": "calculate_floating_point_08009054",
            "code": "\nuint calculateFloatingPoint_08009054(uint input1,uint input2,undefined4 bitMask,uint bitShift)\n\n{\n  uint result;\n  uint exponent1;\n  int diffExponents;\n  uint exponent2;\n  int sumExponents;\n  uint resultMask;\n  bool isZero;\n  bool isPositive;\n  bool bVar9;\n  \n  exponent1 = input1 >> 0x17 & 0xff;\n  isZero = exponent1 == 0;\n  if (!isZero) {\n    bitShift = input2 >> 0x17 & 0xff;\n    isZero = bitShift == 0;\n  }\n  if (!isZero) {\n    isZero = exponent1 == 0xff;\n  }\n  if (!isZero) {\n    isZero = bitShift == 0xff;\n  }\n  if (isZero) {\n    bitShift = input2 >> 0x17 & 0xff;\n    resultMask = input1;\n    if (exponent1 == 0xff) {\n      if (((input1 & 0x7fffff) != 0) || (resultMask = input2, bitShift == 0xff)) {\nLAB_0800904a:\n        return resultMask | 0x7fc00000;\n      }\n    }\n    else {\n      if (bitShift == 0xff) {\n        resultMask = input2;\n        if ((input2 & 0x7fffff) == 0) {\nLAB_08009000:\n          return (input1 ^ input2) & 0x80000000;\n        }\n        goto LAB_0800904a;\n      }\n      isZero = (input1 & 0x7fffffff) == 0;\n      if (!isZero) {\n        isZero = (input2 & 0x7fffffff) == 0;\n      }\n      if (!isZero) {\n        isZero = exponent1 == 0;\n        resultMask = input1 & 0x80000000;\n        while( true ) {\n          if (isZero) {\n            input1 = input1 << 1;\n            isZero = (input1 & 0x800000) == 0;\n          }\n          if (!isZero) break;\n          exponent1 = exponent1 - 1;\n        }\n        input1 = input1 | resultMask;\n        isZero = bitShift == 0;\n        resultMask = input2 & 0x80000000;\n        while( true ) {\n          if (isZero) {\n            input2 = input2 << 1;\n            isZero = (input2 & 0x800000) == 0;\n          }\n          if (!isZero) break;\n          bitShift = bitShift - 1;\n        }\n        input2 = input2 | resultMask;\n        goto LAB_0800906c;\n      }\n      if ((input1 & 0x7fffffff) == 0) {\n        if ((input2 & 0x7fffffff) != 0) goto LAB_08009000;\n        goto LAB_0800904a;\n      }\n    }\n    input1 = input1 ^ input2;\n  }\n  else {\nLAB_0800906c:\n    diffExponents = exponent1 - bitShift;\n    if (input2 << 9 == 0) {\n      input1 = (input1 ^ input2) & 0x80000000 | input1 & 0x7fffff;\n      bVar9 = SCARRY4(diffExponents,0x7f);\n      sumExponents = diffExponents + 0x7f;\n      isZero = sumExponents < 0;\n      isPositive = sumExponents == 0;\n      if (!isPositive && isZero == bVar9) {\n        bVar9 = SBORROW4(0xff,sumExponents);\n        isZero = 0xff - sumExponents < 0;\n        isPositive = sumExponents == 0xff;\n      }\n      if (!isPositive && isZero == bVar9) {\n        input1 = input1 | sumExponents * 0x800000;\n      }\n      if (!isPositive && isZero == bVar9) {\n        return input1;\n      }\n      input1 = input1 | 0x800000;\n      exponent1 = 0;\n      isPositive = SBORROW4(sumExponents,1);\n      exponent2 = diffExponents + 0x7e;\n      isZero = exponent2 == 0;\n      resultMask = exponent2;\n    }\n    else {\n      result = (input2 << 9) >> 4 | 0x10000000;\n      exponent1 = (input1 << 9) >> 4 | 0x10000000;\n      input1 = (input1 ^ input2) & 0x80000000;\n      isZero = result <= exponent1;\n      if (!isZero) {\n        exponent1 = exponent1 << 1;\n      }\n      exponent2 = diffExponents + 0x7d + (uint)isZero;\n      resultMask = 0x800000;\n      do {\n        if (result <= exponent1) {\n          exponent1 = exponent1 - result;\n          input1 = input1 | resultMask;\n        }\n        isZero = result >> 1 <= exponent1;\n        if (isZero) {\n          exponent1 = exponent1 - (result >> 1);\n        }\n        if (isZero) {\n          input1 = input1 | resultMask >> 1;\n        }\n        isZero = result >> 2 <= exponent1;\n        if (isZero) {\n          exponent1 = exponent1 - (result >> 2);\n        }\n        if (isZero) {\n          input1 = input1 | resultMask >> 2;\n        }\n        isZero = result >> 3 <= exponent1;\n        if (isZero) {\n          exponent1 = exponent1 - (result >> 3);\n        }\n        if (isZero) {\n          input1 = input1 | resultMask >> 3;\n        }\n        exponent1 = exponent1 * 0x10;\n        isZero = exponent1 == 0;\n        if (!isZero) {\n          resultMask = resultMask >> 4;\n          isZero = resultMask == 0;\n        }\n      } while (!isZero);\n      isPositive = SBORROW4(exponent2,0xfd);\n      isZero = exponent2 == 0xfd;\n      resultMask = exponent2 - 0xfd;\n      if (exponent2 < 0xfe) {\n        input1 = input1 + exponent2 * 0x800000 + (uint)(result <= exponent1);\n        if (exponent1 - result == 0) {\n          input1 = input1 & 0xfffffffe;\n        }\n        return input1;\n      }\n    }\n    if (isZero || (int)resultMask < 0 != isPositive) {\n      isZero = (int)(exponent2 + 0x19) < 0;\n      if (exponent2 == 0xffffffe7 || isZero != SCARRY4(exponent2,0x19)) {\n        input1 = input1 & 0x80000000;\n      }\n      if (exponent2 == 0xffffffe7 || isZero != SCARRY4(exponent2,0x19)) {\n        return input1;\n      }\n      resultMask = (input1 << 1) >> (-exponent2 & 0xff);\n      exponent2 = input1 << (exponent2 + 0x20 & 0xff);\n      resultMask = ((uint)((input1 & 0x80000000) != 0) << 0x1f | resultMask >> 1) + (uint)((byte)resultMask & 1);\n      if ((exponent1 | exponent2 << 1) == 0) {\n        resultMask = resultMask & ~(exponent2 >> 0x1f);\n      }\n      return resultMask;\n    }\n  }\n  return input1 & 0x80000000 | 0x7f800000;\n}\n\n",
            "renaming": {
                "FUN_08009054": "calculate_floating_point_08009054",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "bitMask",
                "param_4": "bitShift",
                "uVar1": "result",
                "uVar2": "exponent1",
                "iVar3": "diffExponents",
                "uVar4": "exponent2",
                "iVar5": "sumExponents",
                "uVar6": "resultMask",
                "bVar7": "isZero",
                "bVar8": "isPositive"
            },
            "calling": [
                "FUN_08004250",
                "FUN_08003618",
                "FUN_08002908",
                "FUN_08003004",
                "FUN_08004940",
                "FUN_08002e08",
                "FUN_080028bc",
                "FUN_08001994",
                "FUN_08001f00",
                "FUN_080004fc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800919c": {
            "entrypoint": "0x0800919c",
            "current_name": "calculate_result_0800919c",
            "code": "\nuint calculate_result_0800919c(uint input_1,uint input_2)\n\n{\n  bool is_negative;\n  uint doubled_input_1;\n  uint doubled_input_2;\n  uint combined_inputs;\n  bool is_zero;\n  \n  doubled_input_1 = input_1 * 2;\n  doubled_input_2 = input_2 * 2;\n  if (((int)doubled_input_1 >> 0x18 == -1 || (int)doubled_input_2 >> 0x18 == -1) &&\n     ((((int)doubled_input_1 >> 0x18 == -1 && ((input_1 & 0x7fffff) != 0)) ||\n      (((int)doubled_input_2 >> 0x18 == -1 && ((input_2 & 0x7fffff) != 0)))))) {\n    result 1;\n  }\n  combined_inputs = doubled_input_1 | input_2 & 0x7fffffff;\n  is_zero = combined_inputs == 0;\n  if (!is_zero) {\n    combined_inputs = input_1 ^ input_2;\n    is_zero = combined_inputs == 0;\n  }\n  is_negative = -1 < (int)combined_inputs;\n  if (is_negative) {\n    input_1 = doubled_input_1 + input_2 * -2;\n    is_zero = input_1 == 0;\n  }\n  if ((is_negative && doubled_input_2 <= doubled_input_1) && !is_zero) {\n    input_1 = (int)input_2 >> 0x1f;\n  }\n  if (!is_negative || doubled_input_2 > doubled_input_1) {\n    input_1 = ~((int)input_2 >> 0x1f);\n  }\n  if (!is_zero) {\n    input_1 = input_1 | 1;\n  }\n  result input_1;\n}\n\n",
            "renaming": {
                "FUN_0800919c": "calculate_result_0800919c",
                "param_1": "input_1",
                "param_2": "input_2",
                "uVar2": "doubled_input_1",
                "uVar3": "doubled_input_2",
                "uVar4": "combined_inputs",
                "bVar1": "is_negative",
                "bVar5": "is_zero",
                "return": "result"
            },
            "calling": [
                "FUN_08009204"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091fc": {
            "entrypoint": "0x080091fc",
            "current_name": "execute_function_with_swapped_parameters_080091fc",
            "code": "\nvoid execute_function_with_swapped_parameters_080091fc(undefined4 output_parameter,undefined4 input_parameter)\n\n{\n  FUN_08009204(input_parameter,output_parameter);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091fc": "execute_function_with_swapped_parameters_080091fc",
                "param_1": "output_parameter",
                "param_2": "input_parameter"
            },
            "calling": [
                "FUN_08009250",
                "FUN_08009264"
            ],
            "called": [
                "FUN_08009204"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009204": {
            "entrypoint": "0x08009204",
            "current_name": "concatenate_params_08009204",
            "code": "\nundefined8 concatenate_params_08009204(undefined4 first_param,undefined4 second_param)\n\n{\n  FUN_0800919c();\n  return CONCAT44(second_param,first_param);\n}\n\n",
            "renaming": {
                "FUN_08009204": "concatenate_params_08009204",
                "param_1": "first_param",
                "param_2": "second_param"
            },
            "calling": [
                "FUN_08009228",
                "FUN_080091fc",
                "FUN_08009214",
                "FUN_0800923c"
            ],
            "called": [
                "FUN_0800919c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009214": {
            "entrypoint": "0x08009214",
            "current_name": "is_nonzero_input_08009214",
            "code": "\nbool is_nonzero_input_08009214(void)\n\n{\n  char input_char;\n  \n  FUN_08009204();\n  return input_char != '\\0';\n}\n\n",
            "renaming": {
                "FUN_08009214": "is_nonzero_input_08009214",
                "in_ZR": "input_char"
            },
            "calling": [
                "FUN_08002638",
                "FUN_08002afc",
                "FUN_080029d8",
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_08001f00"
            ],
            "called": [
                "FUN_08009204"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009228": {
            "entrypoint": "0x08009228",
            "current_name": "check_input_is_null_08009228",
            "code": "\nbool check_input_is_null_08009228(void)\n\n{\n  char input_character;\n  \n  FUN_08009204();\n  return input_character == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08009228": "check_input_is_null_08009228",
                "in_CY": "input_character"
            },
            "calling": [
                "FUN_08003826",
                "FUN_08003004",
                "FUN_08002afc",
                "FUN_080029d8",
                "FUN_080005b4",
                "FUN_08004e30"
            ],
            "called": [
                "FUN_08009204"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800923c": {
            "entrypoint": "0x0800923c",
            "current_name": "check_cy_and_zr_0800923c",
            "code": "\nbool check_CY_and_ZR_0800923c(void)\n\n{\n  undefined isZero;\n  undefined isCarry;\n  \n  FUN_08009204();\n  return !(bool)isCarry || (bool)isZero;\n}\n\n",
            "renaming": {
                "FUN_0800923c": "check_cy_and_zr_0800923c",
                "in_ZR": "isZero",
                "in_CY": "isCarry"
            },
            "calling": [
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_08001f00"
            ],
            "called": [
                "FUN_08009204"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009250": {
            "entrypoint": "0x08009250",
            "current_name": "check_conditions_08009250",
            "code": "\nbool check_conditions_08009250(void)\n\n{\n  undefined zero_flag;\n  undefined carry_flag;\n  \n  FUN_080091fc();\n  return !(bool)carry_flag || (bool)zero_flag;\n}\n\n",
            "renaming": {
                "FUN_08009250": "check_conditions_08009250",
                "in_ZR": "zero_flag",
                "in_CY": "carry_flag"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08001f00"
            ],
            "called": [
                "FUN_080091fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009264": {
            "entrypoint": "0x08009264",
            "current_name": "check_if_null_terminator_08009264",
            "code": "\nbool check_if_null_terminator_08009264(void)\n\n{\n  char input_character;\n  \n  FUN_080091fc();\n  return input_character == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08009264": "check_if_null_terminator_08009264",
                "in_CY": "input_character"
            },
            "calling": [
                "FUN_08003004",
                "FUN_080029d8"
            ],
            "called": [
                "FUN_080091fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009278": {
            "entrypoint": "0x08009278",
            "current_name": "extract_integer_08009278",
            "code": "\nuint extract_integer_08009278(uint input_value)\n\n{\n  uint shifted_value;\n  uint difference;\n  \n  if (input_value << 1 < 0x7f000000) {\n    return 0;\n  }\n  shifted_value = (input_value << 1) >> 0x18;\n  difference = 0x9e - shifted_value;\n  if (shifted_value < 0x9f && difference != 0) {\n    shifted_value = (input_value << 8 | 0x80000000) >> (difference & 0xff);\n    if ((input_value & 0x80000000) != 0) {\n      shifted_value = -shifted_value;\n    }\n    return shifted_value;\n  }\n  if ((difference == 0xffffff9f) && ((input_value & 0x7fffff) != 0)) {\n    return 0;\n  }\n  input_value = input_value & 0x80000000;\n  if (input_value == 0) {\n    input_value = 0x7fffffff;\n  }\n  return input_value;\n}\n\n",
            "renaming": {
                "FUN_08009278": "extract_integer_08009278",
                "param_1": "input_value",
                "uVar1": "shifted_value",
                "uVar2": "difference"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_08003826"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "entry": {
            "entrypoint": "0x080092c4",
            "current_name": "entry",
            "code": "\n/* WARNING: This function may have set the stack pointer */\n\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined4 *)(iVar1 + 0x20000000) < &DAT_2000044c; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x800c0c0);\n  }\n  for (puVar2 = &DAT_2000044c; puVar2 < &DAT_20000f20; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  FUN_0800756c();\n  FUN_0800b3e8();\n  UNRECOVERED_JUMPTABLE = (code *)0x80092fa;\n  FUN_08007540();\n                    /* WARNING: Could not recover jumptable at 0x080092fa. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "renaming": {},
            "calling": [],
            "called": [
                "FUN_0800756c",
                "FUN_08007540",
                "FUN_0800b3e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009318": {
            "entrypoint": "0x08009318",
            "current_name": "process_binary_data_08009318",
            "code": "\nlonglong processBinaryData_08009318(uint input1,uint input2,undefined4 unusedParam1,undefined4 unusedParam2)\n\n{\n  int result;\n  uint shiftedBits;\n  uint mask;\n  bool carryFlag;\n  undefined8 computedValue;\n  longlong output;\n  \n  mask = (input2 << 1) >> 0x15;\n  shiftedBits = mask - 0x3ff;\n  if ((int)shiftedBits < 0x14) {\n    if ((int)shiftedBits < 0) {\n      computedValue = FUN_080082d4(input1,input2,0x8800759c,0x7e37e43c,unusedParam2);\n      result = FUN_08008b60((int)computedValue,(int)((ulonglong)computedValue >> 0x20),0,0);\n      output = CONCAT44(input2,input1);\n      if (result != 0) {\n        if ((int)input2 < 0) {\n          output = -0x8000000000000000;\n        }\n        else if ((input1 | input2) == 0) {\n          output = 0;\n        }\n        else {\n          output = 0x3ff0000000000000;\n        }\n      }\n    }\n    else {\n      mask = 0xfffff >> (shiftedBits & 0xff);\n      output = CONCAT44(input2,input1);\n      if ((input2 & mask | input1) != 0) {\n        computedValue = FUN_080082d4(input1,input2,0x8800759c,0x7e37e43c,unusedParam2);\n        result = FUN_08008b60((int)computedValue,(int)((ulonglong)computedValue >> 0x20),0,0);\n        output = CONCAT44(input2,input1);\n        if (result != 0) {\n          if (0 < (int)input2) {\n            input2 = input2 + (0x100000 >> (shiftedBits & 0xff));\n          }\n          output = (ulonglong)(input2 & ~mask) << 0x20;\n        }\n      }\n    }\n  }\n  else if ((int)shiftedBits < 0x34) {\n    mask = 0xffffffff >> (mask - 0x413 & 0xff);\n    output = CONCAT44(input2,input1);\n    if ((mask & input1) != 0) {\n      computedValue = FUN_080082d4(input1,input2,0x8800759c,0x7e37e43c,unusedParam2);\n      result = FUN_08008b60((int)computedValue,(int)((ulonglong)computedValue >> 0x20),0,0);\n      output = CONCAT44(input2,input1);\n      if (result != 0) {\n        if (0 < (int)input2) {\n          if (shiftedBits == 0x14) {\n            input2 = input2 + 1;\n          }\n          else {\n            shiftedBits = 1 << (0x34 - shiftedBits & 0xff);\n            carryFlag = CARRY4(shiftedBits,input1);\n            input1 = shiftedBits + input1;\n            if (carryFlag != false) {\n              input2 = input2 + 1;\n            }\n          }\n        }\n        output = CONCAT44(input2,input1 & ~mask);\n      }\n    }\n  }\n  else {\n    output = CONCAT44(input2,input1);\n    if (shiftedBits == 0x400) {\n      output = FUN_080082d4();\n    }\n  }\n  return output;\n}\n\n",
            "renaming": {
                "FUN_08009318": "process_binary_data_08009318",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "unusedParam1",
                "param_4": "unusedParam2",
                "iVar1": "result",
                "uVar2": "shiftedBits",
                "uVar3": "mask",
                "bVar4": "carryFlag",
                "uVar5": "computedValue",
                "lVar6": "output"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08001994",
                "FUN_08002c18"
            ],
            "called": [
                "FUN_08008b60",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009410": {
            "entrypoint": "0x08009410",
            "current_name": "calculate_result_08009410",
            "code": "\nundefined4 calculateResult_08009410(undefined4 input_param_1,uint input_param_2)\n\n{\n  undefined4 result;\n  uint flag;\n  undefined4 temp_var_1;\n  undefined4 temp_var_2;\n  undefined4 temp_var_3;\n  undefined4 temp_var_4;\n  \n  if (0x3fe921fb < (input_param_2 & 0x7fffffff)) {\n    if ((input_param_2 & 0x7fffffff) < 0x7ff00000) {\n      flag = FUN_08009d78(input_param_1,input_param_2,&temp_var_1);\n      flag = flag & 3;\n      if (flag == 1) {\n        result = FUN_0800adf0(temp_var_1,temp_var_2,temp_var_3,temp_var_4,1);\n      }\n      else if (flag == 2) {\n        result = FUN_0800a348(temp_var_1,temp_var_2,temp_var_3,temp_var_4);\n      }\n      else if (flag == 0) {\n        result = FUN_0800a348(temp_var_1,temp_var_2,temp_var_3,temp_var_4);\n      }\n      else {\n        result = FUN_0800adf0(temp_var_1,temp_var_2,temp_var_3,temp_var_4,1);\n      }\n    }\n    else {\n      result = FUN_080082d0(input_param_1,input_param_2,input_param_1,input_param_2);\n    }\n    return result;\n  }\n  result = FUN_0800a348(input_param_1,input_param_2,0,0);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009410": "calculate_result_08009410",
                "param_1": "input_param_1",
                "param_2": "input_param_2",
                "uVar1": "result",
                "uVar2": "flag",
                "local_28": "temp_var_1",
                "uStack_24": "temp_var_2",
                "local_20": "temp_var_3",
                "uStack_1c": "temp_var_4"
            },
            "calling": [
                "FUN_08001f00"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_0800a348",
                "FUN_08009d78",
                "FUN_0800adf0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080094c0": {
            "entrypoint": "0x080094c0",
            "current_name": "convert_to_hexadecimal_080094c0",
            "code": "\nlonglong convert_to_hexadecimal_080094c0(uint input_a,uint input_b,undefined4 parameter_1,undefined4 parameter_2)\n\n{\n  int result;\n  uint shifted_amount;\n  uint mask;\n  bool carry_flag;\n  undefined8 converted_value;\n  longlong final_value;\n  \n  mask = (input_b << 1) >> 0x15;\n  shifted_amount = mask - 0x3ff;\n  if ((int)shifted_amount < 0x14) {\n    if ((int)shifted_amount < 0) {\n      converted_value = FUN_080082d4(input_a,input_b,0x8800759c,0x7e37e43c,parameter_2);\n      result = FUN_08008b60((int)converted_value,(int)((ulonglong)converted_value >> 0x20),0,0);\n      final_value = CONCAT44(input_b,input_a);\n      if (result != 0) {\n        if ((int)input_b < 0) {\n          if ((input_a | input_b & 0x7fffffff) != 0) {\n            input_b = 0xbff00000;\n          }\n          final_value = (ulonglong)input_b << 0x20;\n        }\n        else {\n          final_value = 0;\n        }\n      }\n    }\n    else {\n      mask = 0xfffff >> (shifted_amount & 0xff);\n      final_value = CONCAT44(input_b,input_a);\n      if ((input_b & mask | input_a) != 0) {\n        converted_value = FUN_080082d4(input_a,input_b,0x8800759c,0x7e37e43c,parameter_2);\n        result = FUN_08008b60((int)converted_value,(int)((ulonglong)converted_value >> 0x20),0,0);\n        final_value = CONCAT44(input_b,input_a);\n        if (result != 0) {\n          if ((int)input_b < 0) {\n            input_b = input_b + (0x100000 >> (shifted_amount & 0xff));\n          }\n          final_value = (ulonglong)(input_b & ~mask) << 0x20;\n        }\n      }\n    }\n  }\n  else if ((int)shifted_amount < 0x34) {\n    mask = 0xffffffff >> (mask - 0x413 & 0xff);\n    final_value = CONCAT44(input_b,input_a);\n    if ((mask & input_a) != 0) {\n      converted_value = FUN_080082d4(input_a,input_b,0x8800759c,0x7e37e43c,parameter_2);\n      result = FUN_08008b60((int)converted_value,(int)((ulonglong)converted_value >> 0x20),0,0);\n      final_value = CONCAT44(input_b,input_a);\n      if (result != 0) {\n        if ((int)input_b < 0) {\n          if (shifted_amount == 0x14) {\n            input_b = input_b + 1;\n          }\n          else {\n            shifted_amount = 1 << (0x34 - shifted_amount & 0xff);\n            carry_flag = CARRY4(shifted_amount,input_a);\n            input_a = shifted_amount + input_a;\n            if (carry_flag != false) {\n              input_b = input_b + 1;\n            }\n          }\n        }\n        final_value = CONCAT44(input_b,input_a & ~mask);\n      }\n    }\n  }\n  else {\n    final_value = CONCAT44(input_b,input_a);\n    if (shifted_amount == 0x400) {\n      final_value = FUN_080082d4();\n    }\n  }\n  return final_value;\n}\n\n",
            "renaming": {
                "FUN_080094c0": "convert_to_hexadecimal_080094c0",
                "param_1": "input_a",
                "param_2": "input_b",
                "param_3": "parameter_1",
                "param_4": "parameter_2",
                "iVar1": "result",
                "uVar2": "shifted_amount",
                "uVar3": "mask",
                "bVar4": "carry_flag",
                "uVar5": "converted_value",
                "lVar6": "final_value"
            },
            "calling": [
                "FUN_0800a5a0",
                "FUN_08002408",
                "FUN_08001f00",
                "FUN_08002c18"
            ],
            "called": [
                "FUN_08008b60",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080095b8": {
            "entrypoint": "0x080095b8",
            "current_name": "calculate_product_080095b8",
            "code": "\nint calculateProduct_080095b8(uint input1,uint input2)\n\n{\n  uint mask;\n  uint shiftedInput2;\n  uint result;\n  int sign;\n  uint difference;\n  \n  shiftedInput2 = (input2 << 1) >> 0x15;\n  difference = shiftedInput2 - 0x3ff;\n  if ((int)input2 < 0) {\n    sign = -1;\n  }\n  else {\n    sign = 1;\n  }\n  result = input2 & 0xfffff | 0x100000;\n  if ((int)difference < 0x14) {\n    if ((int)difference < 0) {\n      if (difference != 0xffffffff) {\n        sign = 0;\n      }\n      return sign;\n    }\n    result = result + (0x80000 >> (difference & 0xff)) >> (0x14 - difference & 0xff);\n  }\n  else {\n    if (0x1e < difference) {\n      sign = FUN_08008ba0();\n      return sign;\n    }\n    if ((int)difference < 0x34) {\n      mask = 0x80000000 >> (shiftedInput2 - 0x413 & 0xff);\n      if (CARRY4(mask,input1) != false) {\n        result = result + 1;\n      }\n      result = result << (shiftedInput2 - 0x413 & 0xff);\n      if (difference != 0x14) {\n        result = result | mask + input1 >> (0x34 - difference & 0xff);\n      }\n    }\n    else {\n      result = result << (shiftedInput2 - 0x413 & 0xff) | input1 << (shiftedInput2 - 0x433 & 0xff);\n    }\n  }\n  return result * sign;\n}\n\n",
            "renaming": {
                "FUN_080095b8": "calculate_product_080095b8",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "mask",
                "uVar2": "shiftedInput2",
                "uVar3": "result",
                "iVar4": "sign",
                "uVar5": "difference"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08001994"
            ],
            "called": [
                "FUN_08008ba0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009654": {
            "entrypoint": "0x08009654",
            "current_name": "decode_08009654",
            "code": "\nlonglong decode_08009654(uint input1,uint input2)\n\n{\n  uint shiftedResult;\n  uint shiftedBits;\n  longlong result;\n  \n  result = CONCAT44(input2,input1);\n  shiftedBits = (input2 << 1) >> 0x15;\n  shiftedResult = shiftedBits - 0x3ff;\n  if ((int)shiftedResult < 0x14) {\n    if ((int)shiftedResult < 0) {\n      input2 = input2 & 0x80000000;\n      if (shiftedResult == 0xffffffff) {\n        input2 = input2 | 0x3ff00000;\n      }\n      result = (ulonglong)input2 << 0x20;\n    }\n    else {\n      shiftedBits = 0xfffff >> (shiftedResult & 0xff);\n      result = CONCAT44(input2,input1);\n      if ((input2 & shiftedBits | input1) != 0) {\n        result = (ulonglong)(input2 + (0x80000 >> (shiftedResult & 0xff)) & ~shiftedBits) << 0x20;\n      }\n    }\n  }\n  else if ((int)shiftedResult < 0x34) {\n    shiftedBits = 0xffffffff >> (shiftedBits - 0x413 & 0xff);\n    if ((input1 & shiftedBits) != 0) {\n      shiftedResult = 1 << (0x33 - shiftedResult & 0xff);\n      if (CARRY4(input1,shiftedResult) != false) {\n        input2 = input2 + 1;\n      }\n      result = CONCAT44(input2,input1 + shiftedResult & ~shiftedBits);\n    }\n  }\n  else {\n    result = CONCAT44(input2,input1);\n    if (shiftedResult == 0x400) {\n      result = FUN_080082d4();\n    }\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009654": "decode_08009654",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "shiftedResult",
                "uVar2": "shiftedBits",
                "lVar3": "result"
            },
            "calling": [
                "FUN_08004e30"
            ],
            "called": [
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080096e8": {
            "entrypoint": "0x080096e8",
            "current_name": "process_floating_point_080096e8",
            "code": "\nundefined4 processFloatingPoint_080096e8(undefined4 inputValue,uint flags)\n\n{\n  undefined4 result;\n  uint maskedFlags;\n  undefined4 localVariable1;\n  undefined4 localVariable2;\n  undefined4 localVariable3;\n  undefined4 localVariable4;\n  \n  if (0x3fe921fb < (flags & 0x7fffffff)) {\n    if ((flags & 0x7fffffff) < 0x7ff00000) {\n      maskedFlags = FUN_08009d78(inputValue,flags,&localVariable1);\n      maskedFlags = maskedFlags & 3;\n      if (maskedFlags == 1) {\n        result = FUN_0800a348(localVariable1,localVariable2,localVariable3,localVariable4);\n      }\n      else if (maskedFlags == 2) {\n        result = FUN_0800adf0(localVariable1,localVariable2,localVariable3,localVariable4,1);\n      }\n      else if (maskedFlags == 0) {\n        result = FUN_0800adf0(localVariable1,localVariable2,localVariable3,localVariable4,1);\n      }\n      else {\n        result = FUN_0800a348(localVariable1,localVariable2,localVariable3,localVariable4);\n      }\n    }\n    else {\n      result = FUN_080082d0(inputValue,flags,inputValue,flags);\n    }\n    return result;\n  }\n  result = FUN_0800adf0(inputValue,flags,0,0,0);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080096e8": "process_floating_point_080096e8",
                "param_1": "inputValue",
                "param_2": "flags",
                "uVar1": "result",
                "uVar2": "maskedFlags",
                "local_28": "localVariable1",
                "uStack_24": "localVariable2",
                "local_20": "localVariable3",
                "uStack_1c": "localVariable4"
            },
            "calling": [
                "FUN_08001f00"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_0800a348",
                "FUN_08009d78",
                "FUN_0800adf0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009798": {
            "entrypoint": "0x08009798",
            "current_name": "convert_to_long_long_08009798",
            "code": "\nlonglong convertToLongLong_08009798(uint number1,uint number2,undefined4 unused,undefined4 unused2)\n\n{\n  uint shiftedBitCount;\n  uint shiftedNumber;\n  longlong result;\n  \n  shiftedNumber = (number2 << 1) >> 0x15;\n  shiftedBitCount = shiftedNumber - 0x3ff;\n  if ((int)shiftedBitCount < 0x14) {\n    if ((int)shiftedBitCount < 0) {\n      return ((ulonglong)number2 & 0x80000000) << 0x20;\n    }\n    result = (ulonglong)(number2 & ~(0xfffff >> (shiftedBitCount & 0xff))) << 0x20;\n  }\n  else {\n    if ((int)shiftedBitCount < 0x34) {\n      return CONCAT44(number2,number1 & ~(0xffffffffU >> (shiftedNumber - 0x413 & 0xff)));\n    }\n    if (shiftedBitCount != 0x400) {\n      return CONCAT44(number2,number1);\n    }\n    result = FUN_080082d4(number1,number2,number1,number2,unused2);\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009798": "convert_to_long_long_08009798",
                "param_1": "number1",
                "param_2": "number2",
                "param_3": "unused",
                "param_4": "unused2",
                "uVar1": "shiftedBitCount",
                "uVar2": "shiftedNumber",
                "lVar3": "result"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080005b4",
                "FUN_08004e30"
            ],
            "called": [
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_08009990": {
            "entrypoint": "0x08009818",
            "current_name": "calculate_result_thunk_08009990",
            "code": "\nuint calculate_result_thunk_08009990(uint input_1,uint input_2,uint input_3,uint input_4)\n\n{\n  int difference;\n  undefined4 upper_bits;\n  uint bitwise_result;\n  uint modified_input_4;\n  uint modified_input_2;\n  undefined8 result_1;\n  \n  modified_input_4 = input_4 & 0x7fffffff;\n  if (((modified_input_4 | (-input_3 | input_3) >> 0x1f) < 0x7ff00001) &&\n     (modified_input_2 = input_2 & 0x7fffffff, (modified_input_2 | (-input_1 | input_1) >> 0x1f) < 0x7ff00001)) {\n    if ((input_4 + 0xc0100000 | input_3) == 0) {\n      modified_input_4 = FUN_0800af78();\n      return modified_input_4;\n    }\n    bitwise_result = (int)input_4 >> 0x1e & 2U | input_2 >> 0x1f;\n    if ((modified_input_2 | input_1) == 0) {\n      if (bitwise_result == 2) {\n        input_1 = 0x54442d18;\n      }\n      else if (bitwise_result == 3) {\n        input_1 = 0x54442d18;\n      }\n    }\n    else {\n      if ((modified_input_4 | input_3) != 0) {\n        if (modified_input_4 == 0x7ff00000) {\n          bitwise_result = bitwise_result - 1;\n          if (modified_input_2 == 0x7ff00000) {\n            if (bitwise_result < 3) {\n              return *(uint *)(&DAT_0800be68 + bitwise_result * 8);\n            }\n            return 0x54442d18;\n          }\n          if (bitwise_result < 3) {\n            return *(uint *)(&DAT_0800be80 + bitwise_result * 8);\n          }\n          return 0;\n        }\n        if (modified_input_2 != 0x7ff00000) {\n          difference = (int)(modified_input_2 - modified_input_4) >> 0x14;\n          if ((int)(modified_input_2 - modified_input_4) < 0x3d00000) {\n            if (((int)input_4 < 0) && (difference + 0x3c < 0 != check_overflow(difference,0x3c))) {\n              result_1 = 0;\n            }\n            else {\n              FUN_08008894(input_1,input_2,input_3,input_4,input_4);\n              FUNC_0800b2cc();\n              result_1 = FUN_0800af78();\n            }\n          }\n          else {\n            result_1 = 0x3ff921fb54442d18;\n          }\n          upper_bits = (undefined4)((ulonglong)result_1 >> 0x20);\n          modified_input_4 = (uint)result_1;\n          if (bitwise_result == 1) {\n            return modified_input_4;\n          }\n          if (bitwise_result == 2) {\n            result_1 = FUN_080082d0(modified_input_4,upper_bits,0x33145c07,0x3ca1a626);\n            modified_input_4 = FUN_080082d0(0x54442d18,0x400921fb,(int)result_1,(int)((ulonglong)result_1 >> 0x20));\n            return modified_input_4;\n          }\n          if (bitwise_result == 0) {\n            return modified_input_4;\n          }\n          result_1 = FUN_080082d0(modified_input_4,upper_bits,0x33145c07,0x3ca1a626);\n          modified_input_4 = FUN_080082d0((int)result_1,(int)((ulonglong)result_1 >> 0x20),0x54442d18,0x400921fb);\n          return modified_input_4;\n        }\n      }\n      if ((int)input_2 < 0) {\n        input_1 = 0x54442d18;\n      }\n      else {\n        input_1 = 0x54442d18;\n      }\n    }\n  }\n  else {\n    input_1 = FUN_080082d4(input_3,input_4,input_1,input_2);\n  }\n  return input_1;\n}\n\n",
            "renaming": {
                "thunk_FUN_08009990": "calculate_result_thunk_08009990",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "iVar1": "difference",
                "uVar2": "upper_bits",
                "uVar3": "bitwise_result",
                "uVar4": "modified_input_4",
                "uVar5": "modified_input_2",
                "uVar6": "result_1",
                "SCARRY4": "check_overflow"
            },
            "calling": [
                "FUN_08001f00"
            ],
            "called": [
                "FUN_08009990"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800981c": {
            "entrypoint": "0x0800981c",
            "current_name": "calculate_hypotenuse_0800981c",
            "code": "\nundefined8 calculateHypotenuse_0800981c(undefined4 sideA,undefined4 sideB,undefined4 sideC,undefined4 sideD)\n\n{\n  int result;\n  undefined4 *pointerVar;\n  int *intPointer;\n  undefined8 returnValue;\n  undefined4 calculationType;\n  char *calculationName;\n  undefined4 inputParam1;\n  undefined4 inputParam2;\n  undefined4 inputParam3;\n  undefined4 inputParam4;\n  undefined4 lowerLimit;\n  undefined4 upperLimit;\n  int errorCode;\n  \n  returnValue = FUN_08009b24();\n  if (DAT_20000014 == -1) {\n    return returnValue;\n  }\n  errorCode = FUN_0800b2d4();\n  if (errorCode != 0) {\n    return returnValue;\n  }\n  result = FUN_0800b2d4(sideA,sideB);\n  if (result == 0) {\n    return returnValue;\n  }\n  result = FUN_0800b2d4(sideC,sideD);\n  if (result == 0) {\n    return returnValue;\n  }\n  calculationType = 3;\n  calculationName = \"hypot\";\n  inputParam1 = sideA;\n  inputParam2 = sideB;\n  inputParam3 = sideC;\n  inputParam4 = sideD;\n  if (DAT_20000014 == '\\0') {\n    lowerLimit = 0xe0000000;\n    upperLimit = 0x47efffff;\nLAB_080098aa:\n    result = FUN_0800b2e0(&calculationType);\n    if (result != 0) goto LAB_08009896;\n  }\n  else {\n    lowerLimit = 0;\n    upperLimit = 0x7ff00000;\n    if (DAT_20000014 != '\\x02') goto LAB_080098aa;\n  }\n  pointerVar = (undefined4 *)FUN_0800b3dc();\n  *pointerVar = 0x22;\nLAB_08009896:\n  returnValue = CONCAT44(upperLimit,lowerLimit);\n  if (errorCode != 0) {\n    intPointer = (int *)FUN_0800b3dc();\n    returnValue = CONCAT44(upperLimit,lowerLimit);\n    *intPointer = errorCode;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_0800981c": "calculate_hypotenuse_0800981c",
                "param_1": "sideA",
                "param_2": "sideB",
                "param_3": "sideC",
                "param_4": "sideD",
                "iVar1": "result",
                "puVar2": "pointerVar",
                "piVar3": "intPointer",
                "uVar4": "returnValue",
                "local_50": "calculationType",
                "pcStack_4c": "calculationName",
                "local_48": "inputParam1",
                "uStack_44": "inputParam2",
                "local_40": "inputParam3",
                "uStack_3c": "inputParam4",
                "local_38": "lowerLimit",
                "uStack_34": "upperLimit",
                "local_30": "errorCode"
            },
            "calling": [
                "FUN_080005b4",
                "FUN_08001f00"
            ],
            "called": [
                "FUN_0800b2d4",
                "FUN_0800b3dc",
                "FUN_0800b2e0",
                "FUN_08009b24"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080098d0": {
            "entrypoint": "0x080098d0",
            "current_name": "process_data_080098d0",
            "code": "\nundefined4 process_data_080098d0(undefined4 input_param1,undefined4 input_param2)\n\n{\n  char data_flag;\n  undefined4 result;\n  int check_result;\n  undefined4 *ptr1;\n  int *ptr2;\n  undefined4 flag1;\n  undefined *flag2_ptr;\n  undefined4 input_param1_copy;\n  undefined4 input_param2_copy;\n  undefined4 input_param1_copy2;\n  undefined4 input_param2_copy2;\n  undefined8 output;\n  int temp;\n  \n  result = FUN_0800a1bc();\n  data_flag = DAT_20000014;\n  if (((DAT_20000014 == -1) ||\n      (temp = FUN_08008b74(input_param1,input_param2,input_param1,input_param2), temp != 0)) ||\n     (check_result = FUN_08008b24(input_param1,input_param2,0,0), check_result == 0)) {\n    return result;\n  }\n  flag1 = 1;\n  flag2_ptr = &DAT_0800be5c;\n  input_param1_copy = input_param1;\n  input_param2_copy = input_param2;\n  input_param1_copy2 = input_param1;\n  input_param2_copy2 = input_param2;\n  if (data_flag == '\\0') {\n    output = 0;\nLAB_0800996c:\n    check_result = FUN_0800b2e0(&flag1);\n    if (check_result != 0) goto joined_r0x0800997a;\n  }\n  else {\n    output = FUN_08008894(0,0,0,0);\n    if (data_flag != '\\x02') goto LAB_0800996c;\n  }\n  ptr1 = (undefined4 *)FUN_0800b3dc();\n  *ptr1 = 0x21;\njoined_r0x0800997a:\n  if (temp != 0) {\n    ptr2 = (int *)FUN_0800b3dc();\n    *ptr2 = temp;\n  }\n  return (undefined4)output;\n}\n\n",
            "renaming": {
                "FUN_080098d0": "process_data_080098d0",
                "param_1": "input_param1",
                "param_2": "input_param2",
                "cVar1": "data_flag",
                "uVar2": "result",
                "iVar3": "check_result",
                "puVar4": "ptr1",
                "piVar5": "ptr2",
                "local_50": "flag1",
                "local_4c": "flag2_ptr",
                "local_48": "input_param1_copy",
                "uStack_44": "input_param2_copy",
                "local_40": "input_param1_copy2",
                "uStack_3c": "input_param2_copy2",
                "local_38": "output",
                "local_30": "temp"
            },
            "calling": [
                "FUN_08003004",
                "FUN_080005b4",
                "FUN_08002978",
                "FUN_08001994"
            ],
            "called": [
                "FUN_08008b24",
                "FUN_0800b3dc",
                "FUN_0800a1bc",
                "FUN_0800b2e0",
                "FUN_08008894",
                "FUN_08008b74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009990": {
            "entrypoint": "0x08009990",
            "current_name": "calculate_value_08009990",
            "code": "\nuint calculateValue_08009990(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int temp1;\n  undefined4 temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  undefined8 temp6;\n  \n  temp4 = input4 & 0x7fffffff;\n  if (((temp4 | (-input3 | input3) >> 0x1f) < 0x7ff00001) &&\n     (temp5 = input2 & 0x7fffffff, (temp5 | (-input1 | input1) >> 0x1f) < 0x7ff00001)) {\n    if ((input4 + 0xc0100000 | input3) == 0) {\n      temp4 = FUN_0800af78();\n      return temp4;\n    }\n    temp3 = (int)input4 >> 0x1e & 2U | input2 >> 0x1f;\n    if ((temp5 | input1) == 0) {\n      if (temp3 == 2) {\n        input1 = 0x54442d18;\n      }\n      else if (temp3 == 3) {\n        input1 = 0x54442d18;\n      }\n    }\n    else {\n      if ((temp4 | input3) != 0) {\n        if (temp4 == 0x7ff00000) {\n          temp3 = temp3 - 1;\n          if (temp5 == 0x7ff00000) {\n            if (temp3 < 3) {\n              return *(uint *)(&DAT_0800be68 + temp3 * 8);\n            }\n            return 0x54442d18;\n          }\n          if (temp3 < 3) {\n            return *(uint *)(&DAT_0800be80 + temp3 * 8);\n          }\n          return 0;\n        }\n        if (temp5 != 0x7ff00000) {\n          temp1 = (int)(temp5 - temp4) >> 0x14;\n          if ((int)(temp5 - temp4) < 0x3d00000) {\n            if (((int)input4 < 0) && (temp1 + 0x3c < 0 != SCARRY4(temp1,0x3c))) {\n              temp6 = 0;\n            }\n            else {\n              FUN_08008894(input1,input2,input3,input4,input4);\n              FUNC_0800b2cc();\n              temp6 = FUN_0800af78();\n            }\n          }\n          else {\n            temp6 = 0x3ff921fb54442d18;\n          }\n          temp2 = (undefined4)((ulonglong)temp6 >> 0x20);\n          temp4 = (uint)temp6;\n          if (temp3 == 1) {\n            return temp4;\n          }\n          if (temp3 == 2) {\n            temp6 = FUN_080082d0(temp4,temp2,0x33145c07,0x3ca1a626);\n            temp4 = FUN_080082d0(0x54442d18,0x400921fb,(int)temp6,(int)((ulonglong)temp6 >> 0x20));\n            return temp4;\n          }\n          if (temp3 == 0) {\n            return temp4;\n          }\n          temp6 = FUN_080082d0(temp4,temp2,0x33145c07,0x3ca1a626);\n          temp4 = FUN_080082d0((int)temp6,(int)((ulonglong)temp6 >> 0x20),0x54442d18,0x400921fb);\n          return temp4;\n        }\n      }\n      if ((int)input2 < 0) {\n        input1 = 0x54442d18;\n      }\n      else {\n        input1 = 0x54442d18;\n      }\n    }\n  }\n  else {\n    input1 = FUN_080082d4(input3,input4,input1,input2);\n  }\n  return input1;\n}\n\n",
            "renaming": {
                "FUN_08009990": "calculate_value_08009990",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "temp1",
                "uVar2": "temp2",
                "uVar3": "temp3",
                "uVar4": "temp4",
                "uVar5": "temp5",
                "uVar6": "temp6"
            },
            "calling": [
                "thunk_FUN_08009990"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_0800b2cc",
                "FUN_08008894",
                "FUN_0800af78",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009b24": {
            "entrypoint": "0x08009b24",
            "current_name": "calculate_result_08009b24",
            "code": "\nuint calculateResult_08009b24(uint input1,uint input2,uint input3,uint input4)\n\n{\n  undefined4 result1;\n  int result2;\n  uint temp1;\n  int temp2;\n  undefined4 temp3;\n  int temp4;\n  uint temp5;\n  undefined4 temp6;\n  undefined4 temp7;\n  undefined8 temp8;\n  undefined8 temp9;\n  undefined8 temp10;\n  undefined8 temp11;\n  int localVar1;\n  \n  input2 = input2 & 0x7fffffff;\n  input4 = input4 & 0x7fffffff;\n  temp1 = input1;\n  temp5 = input2;\n  if (input2 < input4) {\n    temp1 = input3;\n    input3 = input1;\n    temp5 = input4;\n    input4 = input2;\n  }\n  if (0x3c00000 < (int)(temp5 - input4)) {\n    temp1 = FUN_080082d4(temp1,temp5,input3,input4);\n    return temp1;\n  }\n  if (temp5 < 0x5f300001) {\n    localVar1 = 0;\n  }\n  else {\n    if (0x7fefffff < temp5) {\n      if ((temp5 & 0xfffff | temp1) != 0) {\n        temp1 = FUN_080082d4(temp1,temp5,input3,input4);\n      }\n      if ((input4 ^ 0x7ff00000 | input3) != 0) {\n        return temp1;\n      }\n      return input3;\n    }\n    temp5 = temp5 + 0xda800000;\n    input4 = input4 + 0xda800000;\n    localVar1 = 600;\n  }\n  temp9 = CONCAT44(temp5,temp1);\n  temp8 = CONCAT44(input4,input3);\n  if ((int)input4 < 0x20b00000) {\n    if ((int)input4 < 0x100000) {\n      if ((input4 | input3) == 0) {\n        return temp1;\n      }\n      temp8 = FUN_08008640(input3,input4,0,0x7fd00000);\n      temp9 = FUN_08008640(temp1,temp5,0,0x7fd00000);\n      localVar1 = localVar1 + -0x3fe;\n    }\n    else {\n      temp5 = temp5 + 0x25800000;\n      temp9 = CONCAT44(temp5,temp1);\n      input4 = input4 + 0x25800000;\n      temp8 = CONCAT44(input4,input3);\n      localVar1 = localVar1 + -600;\n    }\n  }\n  temp7 = (undefined4)((ulonglong)temp9 >> 0x20);\n  temp6 = (undefined4)temp9;\n  temp4 = (int)((ulonglong)temp8 >> 0x20);\n  temp3 = (undefined4)temp8;\n  temp8 = FUN_080082d0(temp6,temp7,temp3,temp4);\n  temp2 = (int)((ulonglong)temp8 >> 0x20);\n  result1 = (undefined4)temp8;\n  result2 = FUN_08008b24(temp3,temp4,result1,temp2);\n  if (result2 == 0) {\n    temp8 = FUN_08008640(0,input4,0);\n    temp9 = FUN_08008640(result1,temp2 + -0x80000000,result1,temp2);\n    temp10 = FUN_080082d4(temp6,temp7,temp6,temp7);\n    temp10 = FUN_080082d0((int)temp10,(int)((ulonglong)temp10 >> 0x20),0,temp5 + 0x100000);\n    temp10 = FUN_08008640((int)temp10,(int)((ulonglong)temp10 >> 0x20),temp3,temp4);\n    temp11 = FUN_080082d0(temp3,temp4,0,input4);\n    temp11 = FUN_08008640((int)temp11,(int)((ulonglong)temp11 >> 0x20),0,temp5 + 0x100000);\n    temp10 = FUN_080082d4((int)temp10,(int)((ulonglong)temp10 >> 0x20),(int)temp11,\n                          (int)((ulonglong)temp11 >> 0x20));\n    temp9 = FUN_080082d0((int)temp9,(int)((ulonglong)temp9 >> 0x20),(int)temp10,\n                          (int)((ulonglong)temp10 >> 0x20));\n    FUN_080082d0((int)temp8,(int)((ulonglong)temp8 >> 0x20),(int)temp9,\n                 (int)((ulonglong)temp9 >> 0x20));\n    temp8 = FUN_0800a1bc();\n  }\n  else {\n    temp8 = FUN_08008640(0,temp5,0,temp5);\n    temp9 = FUN_08008640(temp3,temp4 + -0x80000000,temp3,temp4);\n    temp10 = FUN_080082d4(temp6,temp7,0,temp5);\n    temp11 = FUN_080082d0(temp6,temp7,0,temp5);\n    temp10 = FUN_08008640((int)temp10,(int)((ulonglong)temp10 >> 0x20),(int)temp11,\n                          (int)((ulonglong)temp11 >> 0x20));\n    temp9 = FUN_080082d0((int)temp9,(int)((ulonglong)temp9 >> 0x20),(int)temp10,\n                          (int)((ulonglong)temp10 >> 0x20));\n    FUN_080082d0((int)temp8,(int)((ulonglong)temp8 >> 0x20),(int)temp9,\n                 (int)((ulonglong)temp9 >> 0x20));\n    temp8 = FUN_0800a1bc();\n  }\n  temp1 = (uint)temp8;\n  if (localVar1 != 0) {\n    temp1 = FUN_08008640(temp1,(int)((ulonglong)temp8 >> 0x20),0,localVar1 * 0x100000 + 0x3ff00000);\n  }\n  return temp1;\n}\n\n",
            "renaming": {
                "FUN_08009b24": "calculate_result_08009b24",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result1",
                "iVar2": "result2",
                "uVar3": "temp1",
                "iVar4": "temp2",
                "uVar5": "temp3",
                "iVar6": "temp4",
                "uVar7": "temp5",
                "uVar8": "temp6",
                "uVar9": "temp7",
                "uVar10": "temp8",
                "uVar11": "temp9",
                "uVar12": "temp10",
                "uVar13": "temp11",
                "local_3c": "localVar1"
            },
            "calling": [
                "FUN_0800981c"
            ],
            "called": [
                "FUN_08008b24",
                "FUN_080082d0",
                "FUN_0800a1bc",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009d78": {
            "entrypoint": "0x08009d78",
            "current_name": "calculate_result_08009d78",
            "code": "\nint calculateResult_08009d78(undefined4 value,uint flags,undefined8 *result)\n\n{\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  undefined4 temp4;\n  undefined4 temp5;\n  undefined4 temp6;\n  undefined4 temp7;\n  uint flagMasked;\n  int resultLength;\n  undefined8 temp8;\n  undefined8 temp9;\n  undefined8 temp10;\n  undefined4 localVar1;\n  undefined4 localVar2;\n  undefined8 localVar3;\n  undefined8 localVar4;\n  undefined8 localVar5;\n  \n  flagMasked = flags & 0x7fffffff;\n  if (flagMasked < 0x3fe921fc) {\n    *(undefined4 *)result = value;\n    *(uint *)((int)result + 4) = flags;\n    *(undefined4 *)(result + 1) = 0;\n    *(undefined4 *)((int)result + 0xc) = 0;\n    return 0;\n  }\n  if (flagMasked < 0x4002d97c) {\n    if ((int)flags < 1) {\n      temp8 = FUN_080082d4(value,flags,0x54400000,0x3ff921fb);\n      temp3 = (undefined4)((ulonglong)temp8 >> 0x20);\n      temp1 = (undefined4)temp8;\n      if (flagMasked != 0x3ff921fb) {\n        temp8 = FUN_080082d4(temp1,temp3,0x1a626331,0x3dd0b461);\n        *result = temp8;\n        temp8 = FUN_080082d0(temp1,temp3);\n        temp8 = FUN_080082d4((int)temp8,(int)((ulonglong)temp8 >> 0x20),0x1a626331,0x3dd0b461);\n        result[1] = temp8;\n        return -1;\n      }\n      temp8 = FUN_080082d4(temp1,temp3,0x1a600000,0x3dd0b461);\n      temp1 = (undefined4)((ulonglong)temp8 >> 0x20);\n      temp9 = FUN_080082d4((int)temp8,temp1,0x2e037073,0x3ba3198a);\n      *result = temp9;\n      temp8 = FUN_080082d0((int)temp8,temp1);\n      temp8 = FUN_080082d4((int)temp8,(int)((ulonglong)temp8 >> 0x20),0x2e037073,0x3ba3198a);\n      result[1] = temp8;\n      return -1;\n    }\n    temp8 = FUN_080082d0();\n    temp3 = (undefined4)((ulonglong)temp8 >> 0x20);\n    temp1 = (undefined4)temp8;\n    if (flagMasked != 0x3ff921fb) {\n      temp8 = FUN_080082d0(temp1,temp3,0x1a626331,0x3dd0b461);\n      *result = temp8;\n      temp8 = FUN_080082d0(temp1,temp3);\n      temp8 = FUN_080082d0((int)temp8,(int)((ulonglong)temp8 >> 0x20),0x1a626331,0x3dd0b461);\n      result[1] = temp8;\n      return 1;\n    }\n    temp8 = FUN_080082d0(temp1,temp3,0x1a600000,0x3dd0b461);\n    temp1 = (undefined4)((ulonglong)temp8 >> 0x20);\n    temp9 = FUN_080082d0((int)temp8,temp1,0x2e037073,0x3ba3198a);\n    *result = temp9;\n    temp8 = FUN_080082d0((int)temp8,temp1);\n    temp8 = FUN_080082d0((int)temp8,(int)((ulonglong)temp8 >> 0x20),0x2e037073,0x3ba3198a);\n    result[1] = temp8;\n    return 1;\n  }\n  if (0x413921fb < flagMasked) {\n    if (0x7fefffff < flagMasked) {\n      temp8 = FUN_080082d0(value,flags,value,flags);\n      result[1] = temp8;\n      *result = temp8;\n      return 0;\n    }\n    resultLength = ((int)flagMasked >> 0x14) + -0x416;\n    FUN_08008ba0();\n    localVar3 = FUN_0800856c();\n    temp8 = FUN_080082d0(value,flagMasked + resultLength * -0x100000,(int)localVar3,\n                          (int)((ulonglong)localVar3 >> 0x20));\n    temp8 = FUN_08008640((int)temp8,(int)((ulonglong)temp8 >> 0x20),0,0x41700000);\n    FUN_08008ba0();\n    localVar4 = FUN_0800856c();\n    temp8 = FUN_080082d0((int)temp8,(int)((ulonglong)temp8 >> 0x20));\n    localVar5 = FUN_08008640((int)temp8,(int)((ulonglong)temp8 >> 0x20),0,0x41700000);\n    FUN_08008b10((int)localVar5,(int)((ulonglong)localVar5 >> 0x20),0,0);\n    resultLength = FUN_0800a5a0(&localVar3,result,resultLength);\n    if (-1 < (int)flags) {\n      return resultLength;\n    }\n    *(int *)((int)result + 4) = *(int *)((int)result + 4) + -0x80000000;\n    *(int *)((int)result + 0xc) = *(int *)((int)result + 0xc) + -0x80000000;\n    return -resultLength;\n  }\n  temp8 = FUNC_0800b2cc();\n  temp3 = (undefined4)((ulonglong)temp8 >> 0x20);\n  temp9 = FUN_08008640((int)temp8,temp3,0x6dc9c883,0x3fe45f30);\n  FUN_080082d4((int)temp9,(int)((ulonglong)temp9 >> 0x20),0,0x3fe00000);\n  resultLength = FUN_08008ba0();\n  temp9 = FUN_0800856c();\n  temp4 = (undefined4)((ulonglong)temp9 >> 0x20);\n  temp1 = (undefined4)temp9;\n  temp9 = FUN_08008640(temp1,temp4,0x54400000,0x3ff921fb);\n  temp8 = FUN_080082d0((int)temp8,temp3,(int)temp9,(int)((ulonglong)temp9 >> 0x20));\n  temp5 = (undefined4)((ulonglong)temp8 >> 0x20);\n  temp3 = (undefined4)temp8;\n  temp9 = FUN_08008640(temp1,temp4,0x1a626331,0x3dd0b461);\n  if ((0x1f < resultLength) || (*(uint *)(&DAT_0800be98 + (resultLength + -1) * 4) == flagMasked)) {\n    temp10 = FUN_080082d0(temp3,temp5,(int)temp9,(int)((ulonglong)temp9 >> 0x20));\n    if ((int)((flagMasked >> 0x14) - ((uint)((int)((ulonglong)temp10 >> 0x20) << 1) >> 0x15)) < 0x11)\n    goto LAB_0800a0ce;\n    temp9 = FUN_08008640(temp1,temp4,0x1a600000,0x3dd0b461);\n    temp6 = (undefined4)((ulonglong)temp9 >> 0x20);\n    temp8 = FUN_080082d0(temp3,temp5,(int)temp9,temp6);\n    temp7 = (undefined4)((ulonglong)temp8 >> 0x20);\n    temp2 = (undefined4)temp8;\n    temp10 = FUN_080082d0(temp3,temp5,temp2,temp7);\n    temp9 = FUN_080082d0((int)temp10,(int)((ulonglong)temp10 >> 0x20),(int)temp9,temp6);\n    temp10 = FUN_08008640(temp1,temp4,0x2e037073,0x3ba3198a);\n    temp9 = FUN_080082d0((int)temp10,(int)((ulonglong)temp10 >> 0x20),(int)temp9,\n                          (int)((ulonglong)temp9 >> 0x20));\n    temp10 = FUN_080082d0(temp2,temp7,(int)temp9,(int)((ulonglong)temp9 >> 0x20));\n    if ((int)(((int)flagMasked >> 0x14) - ((uint)((int)((ulonglong)temp10 >> 0x20) << 1) >> 0x15)) < 0x32\n       ) goto LAB_0800a0ce;\n    temp9 = FUN_08008640(temp1,temp4,0x2e000000,0x3ba3198a);\n    temp3 = (undefined4)((ulonglong)temp9 >> 0x20);\n    temp8 = FUN_080082d0(temp2,temp7,(int)temp9,temp3);\n    temp10 = FUN_080082d0(temp2,temp7);\n    temp9 = FUN_080082d0((int)temp10,(int)((ulonglong)temp10 >> 0x20),(int)temp9,temp3);\n    temp10 = FUN_08008640(temp1,temp4,0x252049c1,0x397b839a);\n    temp9 = FUN_080082d0((int)temp10,(int)((ulonglong)temp10 >> 0x20),(int)temp9,\n                          (int)((ulonglong)temp9 >> 0x20));\n  }\n  temp10 = FUN_080082d0((int)temp8,(int)((ulonglong)temp8 >> 0x20),(int)temp9,\n                        (int)((ulonglong)temp9 >> 0x20));\nLAB_0800a0ce:\n  localVar2 = (undefined4)((ulonglong)temp8 >> 0x20);\n  localVar1 = (undefined4)temp8;\n  *result = temp10;\n  temp8 = FUN_080082d0(localVar1,localVar2);\n  temp8 = FUN_080082d0((int)temp8,(int)((ulonglong)temp8 >> 0x20),(int)temp9,\n                        (int)((ulonglong)temp9 >> 0x20));\n  result[1] = temp8;\n  if ((int)flags < 0) {\n    *(int *)result = (int)temp10;\n    *(int *)((int)result + 4) = (int)((ulonglong)temp10 >> 0x20) + -0x80000000;\n    *(int *)(result + 1) = (int)temp8;\n    *(int *)((int)result + 0xc) = (int)((ulonglong)temp8 >> 0x20) + -0x80000000;\n    resultLength = -resultLength;\n  }\n  return resultLength;\n}\n\n",
            "renaming": {
                "FUN_08009d78": "calculate_result_08009d78",
                "param_1": "value",
                "param_2": "flags",
                "param_3": "result",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "uVar3": "temp3",
                "uVar4": "temp4",
                "uVar5": "temp5",
                "uVar6": "temp6",
                "uVar7": "temp7",
                "uVar8": "flagMasked",
                "iVar9": "resultLength",
                "uVar10": "temp8",
                "uVar11": "temp9",
                "uVar12": "temp10",
                "local_50": "localVar1",
                "uStack_4c": "localVar2",
                "local_40": "localVar3",
                "local_38": "localVar4",
                "local_30": "localVar5"
            },
            "calling": [
                "FUN_080096e8",
                "FUN_08009410"
            ],
            "called": [
                "FUN_08008b10",
                "FUN_080082d0",
                "FUN_0800b2cc",
                "FUN_0800856c",
                "FUN_0800a5a0",
                "FUN_08008ba0",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a1bc": {
            "entrypoint": "0x0800a1bc",
            "current_name": "calculate_result_0800a1bc",
            "code": "\nuint calculate_result_0800a1bc(uint input_1,uint input_2)\n\n{\n  uint temp_1;\n  int index;\n  uint mask;\n  undefined4 temp_2;\n  uint shift;\n  uint initial_value;\n  uint result;\n  uint remaining_bits;\n  uint temp_3;\n  int loop_counter;\n  uint temp_4;\n  uint shift_amount;\n  undefined8 func_result;\n  \n  if ((~input_2 & 0x7ff00000) == 0) {\n    func_result = FUN_08008640(input_1,input_2,input_1,input_2);\n    result = FUN_080082d4((int)func_result,(int)((ulonglong)func_result >> 0x20),input_1,input_2);\n    return result;\n  }\n  if ((int)input_2 < 1) {\n    if ((input_2 & 0x7fffffff | input_1) == 0) {\n      return input_1;\n    }\n    if (input_2 != 0) {\n      func_result = FUN_080082d0(input_1,input_2,input_1);\n      temp_2 = (undefined4)((ulonglong)func_result >> 0x20);\n      result = FUN_08008894((int)func_result,temp_2,(int)func_result,temp_2);\n      return result;\n    }\n    do {\n      temp_3 = input_1;\n      result = temp_3 >> 0xb;\n      input_2 = input_2 - 0x15;\n      input_1 = temp_3 << 0x15;\n    } while (result == 0);\n    temp_1 = input_2;\n    if (-1 < (int)temp_3) goto LAB_0800a290;\n    shift_amount = 0x20;\n    shift = 0xffffffff;\n    temp_3 = input_1;\n  }\n  else {\n    temp_1 = (int)input_2 >> 0x14;\n    result = input_2;\n    temp_3 = input_1;\n    if (temp_1 != 0) goto LAB_0800a1da;\nLAB_0800a290:\n    temp_3 = 0;\n    shift_amount = result;\n    do {\n      shift = temp_3;\n      result = shift_amount << 1;\n      loop_counter = shift_amount << 0xc;\n      temp_3 = shift + 1;\n      shift_amount = result;\n    } while (-1 < loop_counter);\n    shift_amount = 0x20 - temp_3;\n    input_2 = temp_1;\n    temp_3 = input_1 << (temp_3 & 0xff);\n  }\n  result = input_1 >> (shift_amount & 0xff) | result;\n  temp_1 = input_2 - shift;\nLAB_0800a1da:\n  result = result & 0xfffff | 0x100000;\n  if (-1 < (int)(temp_1 << 0x1f)) {\n    result = result * 2 - ((int)temp_3 >> 0x1f);\n    temp_3 = temp_3 << 1;\n  }\n  shift_amount = 0;\n  result = result * 2 - ((int)temp_3 >> 0x1f);\n  temp_3 = temp_3 << 1;\n  temp_1 = 0;\n  loop_counter = 0x16;\n  shift = 0x200000;\n  do {\n    index = temp_1 + shift;\n    if (index <= (int)result) {\n      result = result - index;\n      temp_1 = index + shift;\n      shift_amount = shift_amount + shift;\n    }\n    loop_counter = loop_counter + -1;\n    result = result * 2 - ((int)temp_3 >> 0x1f);\n    shift = shift >> 1;\n    temp_3 = temp_3 << 1;\n  } while (loop_counter != 0);\n  index = 0x20;\n  initial_value = 0x80000000;\n  loop_counter = 0;\n  shift = 0;\n  do {\n    mask = initial_value + loop_counter;\n    temp_4 = temp_1;\n    if ((int)temp_1 < (int)result) {\n      if ((int)mask < 0) {\nLAB_0800a26a:\n        if (-1 < (int)(mask + initial_value)) {\n          temp_4 = temp_1 + 1;\n        }\n      }\n      remaining_bits = result - temp_1;\n      temp_1 = temp_4;\n      if (temp_3 < mask) {\n        remaining_bits = remaining_bits - 1;\n      }\nLAB_0800a262:\n      loop_counter = mask + initial_value;\n      temp_3 = temp_3 - mask;\n      shift = shift + initial_value;\n      result = remaining_bits;\n    }\n    else if ((result == temp_1) && (mask <= temp_3)) {\n      if ((int)mask < 0) goto LAB_0800a26a;\n      remaining_bits = 0;\n      temp_1 = result;\n      goto LAB_0800a262;\n    }\n    index = index + -1;\n    initial_value = initial_value >> 1;\n    result = result * 2 - ((int)temp_3 >> 0x1f);\n    temp_3 = temp_3 << 1;\n    if (index == 0) {\n      if ((result | temp_3) == 0) {\n        shift = shift >> 1;\n      }\n      else if (shift == 0xffffffff) {\n        shift_amount = shift_amount + 1;\n        shift = 0;\n      }\n      else {\n        shift = shift + 1 >> 1;\n      }\n      if ((shift_amount & 1) != 0) {\n        shift = shift | 0x80000000;\n      }\n      return shift;\n    }\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_0800a1bc": "calculate_result_0800a1bc",
                "param_1": "input_1",
                "param_2": "input_2",
                "uVar1": "temp_1",
                "iVar2": "index",
                "uVar3": "mask",
                "uVar4": "temp_2",
                "uVar5": "shift",
                "uVar6": "initial_value",
                "uVar7": "result",
                "uVar8": "remaining_bits",
                "uVar9": "temp_3",
                "iVar10": "loop_counter",
                "uVar11": "temp_4",
                "uVar12": "shift_amount",
                "uVar13": "func_result"
            },
            "calling": [
                "FUN_080098d0",
                "FUN_08009b24"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_08008894",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a348": {
            "entrypoint": "0x0800a348",
            "current_name": "calculate_result_0800a348",
            "code": "\nundefined4 calculateResult_0800a348(undefined4 input1,uint input2,undefined4 input3,undefined4 input4)\n\n{\n  int result;\n  undefined4 tempVar1;\n  undefined4 tempVar2;\n  uint absInput2;\n  undefined8 tempResult1;\n  undefined8 tempResult2;\n  undefined8 tempResult3;\n  undefined4 tempVar3;\n  undefined4 tempVar4;\n  undefined4 tempVar5;\n  undefined4 tempVar6;\n  \n  absInput2 = input2 & 0x7fffffff;\n  if (absInput2 < 0x3e400000) {\n    result = FUN_08008ba0();\n    if (result == 0) {\n      return 0;\n    }\n    tempResult1 = FUN_08008640(input1,input2,input1,input2);\n    tempVar2 = (undefined4)((ulonglong)tempResult1 >> 0x20);\n    tempVar1 = (undefined4)tempResult1;\n    tempResult2 = FUN_08008640(tempVar1,tempVar2,0xbe8838d4,0xbda8fae9);\n    tempResult2 = FUN_080082d4((int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20),0xbdb4b1c4,0x3e21ee9e);\n    tempResult2 = FUN_08008640((int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20),tempVar1,tempVar2);\n    tempResult2 = FUN_080082d0((int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20),0x809c52ad,0x3e927e4f);\n    tempResult2 = FUN_08008640((int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20),tempVar1,tempVar2);\n    tempResult2 = FUN_080082d4((int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20),0x19cb1590,0x3efa01a0);\n    tempResult2 = FUN_08008640((int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20),tempVar1,tempVar2);\n    tempResult2 = FUN_080082d0((int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20),0x16c15177,0x3f56c16c);\n    tempResult2 = FUN_08008640((int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20),tempVar1,tempVar2);\n    tempResult2 = FUN_080082d4((int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20),0x5555554c,0x3fa55555);\n    tempResult2 = FUN_08008640((int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20),tempVar1,tempVar2);\n  }\n  else {\n    tempResult1 = FUN_08008640(input1,input2,input1,input2);\n    tempVar2 = (undefined4)((ulonglong)tempResult1 >> 0x20);\n    tempVar1 = (undefined4)tempResult1;\n    tempResult2 = FUN_08008640(tempVar1,tempVar2,0xbe8838d4,0xbda8fae9);\n    tempResult2 = FUN_080082d4((int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20),0xbdb4b1c4,0x3e21ee9e);\n    tempResult2 = FUN_08008640((int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20),tempVar1,tempVar2);\n    tempResult2 = FUN_080082d0((int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20),0x809c52ad,0x3e927e4f);\n    tempResult2 = FUN_08008640((int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20),tempVar1,tempVar2);\n    tempResult2 = FUN_080082d4((int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20),0x19cb1590,0x3efa01a0);\n    tempResult2 = FUN_08008640((int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20),tempVar1,tempVar2);\n    tempResult2 = FUN_080082d0((int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20),0x16c15177,0x3f56c16c);\n    tempResult2 = FUN_08008640((int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20),tempVar1,tempVar2);\n    tempResult2 = FUN_080082d4((int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20),0x5555554c,0x3fa55555);\n    tempResult2 = FUN_08008640((int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20),tempVar1,tempVar2);\n    if (0x3fd33332 < absInput2) {\n      if (absInput2 < 0x3fe90001) {\n        result = absInput2 - 0x200000;\n        tempResult1 = FUN_080082d0(0,0x3ff00000,0,result);\n      }\n      else {\n        result = 0x3fd20000;\n        tempResult1 = 0x3fe7000000000000;\n      }\n      tempVar6 = (undefined4)((ulonglong)tempResult1 >> 0x20);\n      tempVar5 = (undefined4)tempResult1;\n      tempResult1 = FUN_08008640(tempVar1,tempVar2,0,0x3fe00000);\n      tempResult1 = FUN_080082d0((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),0,result);\n      tempResult2 = FUN_08008640(tempVar1,tempVar2,(int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20));\n      tempResult3 = FUN_08008640(input1,input2,input3,input4);\n      tempResult2 = FUN_080082d0((int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20),(int)tempResult3,\n                           (int)((ulonglong)tempResult3 >> 0x20));\n      tempResult1 = FUN_080082d0((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),(int)tempResult2,\n                           (int)((ulonglong)tempResult2 >> 0x20));\n      tempVar1 = FUN_080082d0(tempVar5,tempVar6,(int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20));\n      return tempVar1;\n    }\n  }\n  tempVar4 = (undefined4)((ulonglong)tempResult2 >> 0x20);\n  tempVar3 = (undefined4)tempResult2;\n  tempVar1 = (undefined4)((ulonglong)tempResult1 >> 0x20);\n  tempResult2 = FUN_08008640((int)tempResult1,tempVar1,0,0x3fe00000);\n  tempResult1 = FUN_08008640((int)tempResult1,tempVar1,tempVar3,tempVar4);\n  tempResult3 = FUN_08008640(input1,input2,input3,input4);\n  tempResult1 = FUN_080082d0((int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20),(int)tempResult3,\n                       (int)((ulonglong)tempResult3 >> 0x20));\n  tempResult1 = FUN_080082d0((int)tempResult2,(int)((ulonglong)tempResult2 >> 0x20),(int)tempResult1,\n                       (int)((ulonglong)tempResult1 >> 0x20));\n  tempVar1 = FUN_080082d0(0,0x3ff00000,(int)tempResult1,(int)((ulonglong)tempResult1 >> 0x20));\n  return tempVar1;\n}\n\n",
            "renaming": {
                "FUN_0800a348": "calculate_result_0800a348",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "result",
                "uVar2": "tempVar1",
                "uVar3": "tempVar2",
                "uVar4": "absInput2",
                "uVar5": "tempResult1",
                "uVar6": "tempResult2",
                "uVar7": "tempResult3",
                "local_30": "tempVar3",
                "uStack_2c": "tempVar4",
                "local_28": "tempVar5",
                "uStack_24": "tempVar6"
            },
            "calling": [
                "FUN_080096e8",
                "FUN_08009410"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_08008ba0",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a5a0": {
            "entrypoint": "0x0800a5a0",
            "current_name": "calculate_result_0800a5a0",
            "code": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nuint calculateResult_0800a5a0(int input,undefined8 *output,int input_length,int coefficients_length,int operation_type,int coefficients)\n\n{\n  undefined4 *ptr1;\n  uint result;\n  uint temp;\n  int index;\n  uint *ptr2;\n  undefined4 temp1;\n  uint **ptr_ptr;\n  undefined4 temp2;\n  int index1;\n  undefined4 *ptr3;\n  undefined4 temp3;\n  uint temp4;\n  uint *ptr4;\n  int index2;\n  int coefficient_index;\n  undefined8 *ptr16;\n  int iterator;\n  undefined4 *ptr18;\n  undefined8 *ptr19;\n  undefined4 result0;\n  int temp_index;\n  undefined8 *presult2;\n  undefined4 *presult3;\n  bool bVar24;\n  undefined8 result5;\n  undefined8 result6;\n  undefined8 result7;\n  undefined8 *temp_ptr;\n  int temp_length;\n  int temp_variable;\n  int temp_variable1;\n  uint *output_copy [2];\n  uint coefficients_copy [20];\n  undefined8 stack_variable1;\n  undefined8 stack_variable2;\n  int stack_variable3 [38];\n  undefined8 stack_variable4;\n  \n  coefficient_index = *(int *)(&DAT_0800c060 + operation_type * 4);\n  index1 = coefficients_length + -1;\n  output_copy[1] = (uint *)output;\n  if (input_length + 0x14 < 0 == SCARRY4(input_length,0x14)) {\n    temp_variable1 = (input_length + -3) / 0x18;\n    temp_variable = (temp_variable1 + 1) * -0x18;\n  }\n  else {\n    temp_variable = -0x18;\n    temp_variable1 = 0;\n  }\n  temp_variable = input_length + temp_variable;\n  iterator = temp_variable1 - index1;\n  if (-1 < coefficient_index + index1) {\n    temp_index = coefficient_index + index1 + 1 + iterator;\n    ptr16 = &stack_variable1;\n    do {\n      while (iterator < 0) {\n        iterator = iterator + 1;\n        *(undefined4 *)ptr16 = 0;\n        *(undefined4 *)((int)ptr16 + 4) = 0;\n        ptr16 = ptr16 + 1;\n        if (iterator == temp_index) goto LAB_0800a626;\n      }\n      result6 = FUN_0800856c(*(undefined4 *)(coefficients + iterator * 4));\n      iterator = iterator + 1;\n      *ptr16 = result6;\n      ptr16 = ptr16 + 1;\n    } while (iterator != temp_index);\n  }\nLAB_0800a626:\n  ptr3 = (undefined4 *)(input + -8);\n  if (-1 < coefficient_index) {\n    presult2 = &stack_variable1 + coefficients_length;\n    iterator = index1;\n    ptr16 = &stack_variable4;\n    do {\n      if (index1 < 0) {\n        result6 = 0;\n      }\n      else {\n        result6 = 0;\n        presult3 = ptr3;\n        ptr19 = presult2;\n        do {\n          ptr18 = presult3 + 2;\n          result5 = FUN_08008640(*ptr18,presult3[3],*(undefined4 *)(ptr19 + -1),\n                                *(undefined4 *)((int)ptr19 + -4));\n          result6 = FUN_080082d4((int)result6,(int)((ulonglong)result6 >> 0x20),(int)result5,\n                                (int)((ulonglong)result5 >> 0x20));\n          presult3 = ptr18;\n          ptr19 = ptr19 + -1;\n        } while (ptr18 != ptr3 + coefficients_length * 2);\n      }\n      iterator = iterator + 1;\n      *ptr16 = result6;\n      presult2 = presult2 + 1;\n      ptr16 = ptr16 + 1;\n    } while (iterator != coefficient_index + coefficients_length);\n  }\n  output_copy[0] = coefficients_copy + coefficient_index + -1;\n  iterator = coefficient_index;\n  do {\n    result6 = CONCAT44(*(undefined4 *)((int)&stack_variable4 + iterator * 8 + 4),\n                      *(undefined4 *)(&stack_variable4 + iterator));\n    if (0 < iterator) {\n      ptr16 = &stack_variable4 + iterator;\n      ptr2 = coefficients_copy;\n      do {\n        temp1 = (undefined4)((ulonglong)result6 >> 0x20);\n        FUN_08008640((int)result6,temp1,0,0x3e700000);\n        FUN_08008ba0();\n        result5 = FUN_0800856c();\n        temp2 = (undefined4)((ulonglong)result5 >> 0x20);\n        result7 = FUN_08008640((int)result5,temp2,0,0x41700000);\n        FUN_080082d0((int)result6,temp1,(int)result7,(int)((ulonglong)result7 >> 0x20));\n        result = FUN_08008ba0();\n        presult2 = ptr16 + -1;\n        temp1 = *(undefined4 *)presult2;\n        temp3 = *(undefined4 *)((int)ptr16 + -4);\n        *ptr2 = result;\n        result6 = FUN_080082d4((int)result5,temp2,temp1,temp3);\n        ptr16 = presult2;\n        ptr2 = ptr2 + 1;\n      } while (presult2 != &stack_variable4);\n    }\n    result6 = FUN_0800b2e8((int)result6,(int)((ulonglong)result6 >> 0x20),temp_variable);\n    temp2 = (undefined4)((ulonglong)result6 >> 0x20);\n    FUN_08008640((int)result6,temp2,0,0x3fc00000);\n    result5 = FUN_080094c0();\n    result5 = FUN_08008640((int)result5,(int)((ulonglong)result5 >> 0x20),0,0x40200000);\n    result6 = FUN_080082d0((int)result6,temp2,(int)result5,(int)((ulonglong)result5 >> 0x20));\n    result = FUN_08008ba0();\n    result5 = FUN_0800856c();\n    result6 = FUN_080082d0((int)result6,(int)((ulonglong)result6 >> 0x20),(int)result5,\n                          (int)((ulonglong)result5 >> 0x20));\n    temp1 = (undefined4)((ulonglong)result6 >> 0x20);\n    temp2 = (undefined4)result6;\n    if (temp_variable < 1) {\n      if (temp_variable == 0) {\n        temp_index = (int)coefficients_copy[iterator + -1] >> 0x17;\n        goto joined_r0x0800a8b8;\n      }\n      temp_index = FUN_08008b4c(temp2,temp1,0,0x3fe00000);\n      if (temp_index != 0) {\n        result = result + 1;\n        if (iterator < 1) {\n          result6 = FUN_080082d0(0,0x3ff00000,temp2,temp1);\n          temp_index = 2;\n          goto LAB_0800a7a4;\n        }\n        temp_index = 2;\n        goto LAB_0800a8c8;\n      }\n    }\n    else {\n      index = (int)coefficients_copy[iterator + -1] >> (0x18U - temp_variable & 0xff);\n      temp4 = coefficients_copy[iterator + -1] - (index << (0x18U - temp_variable & 0xff));\n      temp_index = (int)temp4 >> (0x17U - temp_variable & 0xff);\n      coefficients_copy[iterator + -1] = temp4;\n      result = result + index;\njoined_r0x0800a8b8:\n      if (0 < temp_index) {\n        result = result + 1;\n        if (iterator < 1) {\n          bVar24 = false;\n        }\n        else {\nLAB_0800a8c8:\n          if (coefficients_copy[0] == 0) {\n            bVar24 = false;\n            if (iterator != 1) {\n              ptr2 = coefficients_copy;\n              index = 1;\n              do {\n                ptr2 = ptr2 + 1;\n                if (*ptr2 != 0) {\n                  index2 = index + 1;\n                  temp4 = *ptr2;\n                  goto LAB_0800a8e2;\n                }\n                index = index + 1;\n              } while (index != iterator);\n              bVar24 = false;\n            }\n          }\n          else {\n            index2 = 1;\n            index = 0;\n            temp4 = coefficients_copy[0];\nLAB_0800a8e2:\n            coefficients_copy[index] = 0x1000000 - temp4;\n            if (index2 < iterator) {\n              temp4 = coefficients_copy[index2];\n              ptr2 = coefficients_copy + index2;\n              while( true ) {\n                ptr4 = ptr2 + 1;\n                *ptr2 = 0xffffff - temp4;\n                if (ptr4 == coefficients_copy + iterator) break;\n                temp4 = *ptr4;\n                ptr2 = ptr4;\n              }\n            }\n            bVar24 = true;\n          }\n        }\n        if (0 < temp_variable) {\n          if (temp_variable == 1) {\n            coefficients_copy[iterator + -1] = coefficients_copy[iterator + -1] & 0x7fffff;\n          }\n          else if (temp_variable == 2) {\n            coefficients_copy[iterator + -1] = coefficients_copy[iterator + -1] & 0x3fffff;\n          }\n        }\n        if (temp_index == 2) {\n          result6 = FUN_080082d0(0,0x3ff00000,temp2,temp1);\n          if (bVar24) {\n            result5 = FUN_0800b2e8(0,0x3ff00000,temp_variable);\n            result6 = FUN_080082d0((int)result6,(int)((ulonglong)result6 >> 0x20),(int)result5,\n                                  (int)((ulonglong)result5 >> 0x20));\n          }\n        }\n      }\n    }\nLAB_0800a7a4:\n    temp2 = (undefined4)((ulonglong)result6 >> 0x20);\n    index = FUN_08008b10((int)result6,temp2,0,0);\n    if (index == 0) {\n      result6 = FUN_0800b2e8((int)result6,temp2,-temp_variable);\n      temp1 = (undefined4)((ulonglong)result6 >> 0x20);\n      temp2 = (undefined4)result6;\n      index1 = FUN_08008b4c(temp2,temp1,0,0x41700000);\n      if (index1 == 0) {\n        temp4 = FUN_08008ba0(temp2,temp1);\n        coefficients_copy[iterator] = temp4;\n        index = iterator;\n      }\n      else {\n        FUN_08008640(temp2,temp1,0,0x3e700000);\n        temp4 = FUN_08008ba0();\n        result6 = FUN_0800856c();\n        result6 = FUN_08008640((int)result6,(int)((ulonglong)result6 >> 0x20),0,0x41700000);\n        FUN_080082d0(temp2,temp1,(int)result6,(int)((ulonglong)result6 >> 0x20));\n        temp = FUN_08008ba0();\n        temp_variable = temp_variable + 0x18;\n        coefficients_copy[iterator] = temp;\n        coefficients_copy[iterator + 1] = temp4;\n        index = iterator + 1;\n      }\n      goto LAB_0800a9f6;\n    }\n    index = iterator + -1;\n    if (coefficient_index <= index) {\n      temp4 = 0;\n      ptr2 = coefficients_copy + iterator + 0x3fffffff;\n      do {\n        ptr4 = ptr2 + -1;\n        temp4 = temp4 | *ptr2;\n        ptr2 = ptr4;\n      } while (ptr4 != output_copy[0]);\n      if (temp4 != 0) break;\n    }\n    if (coefficients_copy[coefficient_index + -1] == 0) {\n      temp_length = 1;\n      ptr_ptr = output_copy + coefficient_index;\n      do {\n        ptr2 = *ptr_ptr;\n        temp_length = temp_length + 1;\n        ptr_ptr = ptr_ptr + -1;\n      } while (ptr2 == (uint *)0x0);\n      temp_length = iterator + temp_length;\n    }\n    else {\n      temp_length = iterator + 1;\n    }\n    temp_index = iterator + 1;\n    presult3 = (undefined4 *)(coefficients + (temp_index + temp_variable1 + 0x3fffffff) * 4);\n    ptr16 = &stack_variable1 + iterator + coefficients_length;\n    temp_ptr = &stack_variable4 + temp_index;\n    do {\n      presult3 = presult3 + 1;\n      result6 = FUN_0800856c(*presult3);\n      *ptr16 = result6;\n      presult2 = ptr16 + 1;\n      if (index1 < 0) {\n        result5 = 0;\n      }\n      else {\n        result5 = 0;\n        ptr18 = ptr3;\n        while( true ) {\n          ptr16 = ptr16 + -1;\n          ptr1 = ptr18 + 2;\n          result6 = FUN_08008640((int)result6,(int)((ulonglong)result6 >> 0x20),*ptr1,ptr18[3]);\n          result5 = FUN_080082d4((int)result5,(int)((ulonglong)result5 >> 0x20),(int)result6,\n                                (int)((ulonglong)result6 >> 0x20));\n          if (ptr1 == ptr3 + coefficients_length * 2) break;\n          result6 = *ptr16;\n          ptr18 = ptr1;\n        }\n      }\n      *temp_ptr = result5;\n      temp_index = temp_index + 1;\n      iterator = temp_length;\n      ptr16 = presult2;\n      temp_ptr = temp_ptr + 1;\n    } while (temp_index <= temp_length);\n  } while( true );\n  temp_variable = temp_variable + -0x18;\n  if (coefficients_copy[index] == 0) {\n    ptr2 = coefficients_copy + iterator + 0x3ffffffe;\n    do {\n      temp4 = *ptr2;\n      index = index + -1;\n      temp_variable = temp_variable + -0x18;\n      ptr2 = ptr2 + -1;\n    } while (temp4 == 0);\n  }\nLAB_0800a9f6:\n  result6 = FUN_0800b2e8(0,0x3ff00000,temp_variable);\n  if (index < 0) {\n    if (2 < operation_type) {\n      if (operation_type == 3) {\n        result6 = 0;\nLAB_0800abe4:\n        if (temp_index == 0) {\n          *output_copy[1] = (undefined4)stack_variable2;\n          *(int *)((int)output_copy[1] + 4) = stack_variable2._4_4_;\n          *(undefined8 *)((int)output_copy[1] + 0x10) = result6;\n          *(int *)((int)output_copy[1] + 8) = stack_variable3[0];\n          *(int *)((int)output_copy[1] + 0xc) = stack_variable3[1];\n          return result & 7;\n        }\n        *(int *)((int)output_copy[1] + 0x10) = (int)result6;\n        *(int *)((int)output_copy[1] + 8) = stack_variable3[0];\n        *(int *)((int)output_copy[1] + 0x14) = (int)((ulonglong)result6 >> 0x20) + -0x80000000;\n        *(int *)((int)output_copy[1] + 4) = stack_variable2._4_4_ + -0x80000000;\n        *(int *)((int)output_copy[1] + 0xc) = stack_variable3[1] + -0x80000000;\n        *output_copy[1] = (undefined4)stack_variable2;\n        return result & 7;\n      }\n      goto LAB_0800ab0e;\n    }\n    if (operation_type < 1) {\n      if (operation_type != 0) goto LAB_0800ab0e;\n      result6 = 0;\nLAB_0800aafc:\n      index1 = (int)((ulonglong)result6 >> 0x20);\n      if (temp_index != 0) {\n        index1 = index1 + -0x80000000;\n      }\n      *output_copy[1] = (int)result6;\n      *(int *)((int)output_copy[1] + 4) = index1;\nLAB_0800ab0e:\n      return result & 7;\n    }\n    result6 = 0;\n  }\n  else {\n    presult2 = &stack_variable4 + index;\n    ptr2 = coefficients_copy + index + 1;\n    ptr16 = &stack_variable4 + index + 1;\n    do {\n      temp2 = (undefined4)((ulonglong)result6 >> 0x20);\n      ptr2 = ptr2 + -1;\n      result5 = FUN_0800856c(*ptr2);\n      result5 = FUN_08008640((int)result5,(int)((ulonglong)result5 >> 0x20),(int)result6,temp2);\n      ptr16 = ptr16 + -1;\n      *ptr16 = result5;\n      result6 = FUN_08008640((int)result6,temp2,0,0x3e700000);\n    } while (ptr2 != coefficients_copy);\n    index1 = 0;\n    do {\n      if (coefficient_index < 0) {\n        result6 = 0;\n      }\n      else {\n        temp2 = 0x40000000;\n        temp1 = 0x3ff921fb;\n        result6 = 0;\n        iterator = 0;\n        ptr16 = presult2;\n        ptr3 = &DAT_0800c028;\n        while( true ) {\n          result5 = FUN_08008640(*(undefined4 *)ptr16,*(undefined4 *)((int)ptr16 + 4),temp2,temp1\n                               );\n          result6 = FUN_080082d4((int)result6,(int)((ulonglong)result6 >> 0x20),(int)result5,\n                                (int)((ulonglong)result5 >> 0x20));\n          iterator = iterator + 1;\n          if ((coefficient_index < iterator) || (index1 < iterator)) break;\n          temp2 = *ptr3;\n          temp1 = ptr3[1];\n          ptr16 = ptr16 + 1;\n          ptr3 = ptr3 + 2;\n        }\n      }\n      bVar24 = index1 != index;\n      *(int *)(&stack_variable2 + index1) = (int)result6;\n      *(int *)((int)&stack_variable2 + (index1 * 2 + 1) * 4) = (int)((ulonglong)result6 >> 0x20);\n      presult2 = presult2 + -1;\n      index1 = index1 + 1;\n    } while (bVar24);\n    if (2 < operation_type) {\n      if (operation_type == 3) {\n        if (index != 0) {\n          ptr16 = &stack_variable2 + index;\n          result6 = CONCAT44(*(undefined4 *)((int)&stack_variable2 + (index * 2 + 1) * 4),\n                            *(undefined4 *)ptr16);\n          do {\n            temp1 = (undefined4)((ulonglong)result6 >> 0x20);\n            temp2 = (undefined4)result6;\n            temp3 = *(undefined4 *)(ptr16 + -1);\n            result0 = *(undefined4 *)((int)ptr16 + -4);\n            result6 = FUN_080082d4(temp2,temp1,temp3,result0);\n            result5 = FUN_080082d0(temp3,result0,(int)result6,(int)((ulonglong)result6 >> 0x20));\n            result5 = FUN_080082d4((int)result5,(int)((ulonglong)result5 >> 0x20),temp2,temp1);\n            *ptr16 = result5;\n            ptr16 = ptr16 + -1;\n            *ptr16 = result6;\n          } while (&stack_variable2 != ptr16);\n          if (1 < index) {\n            ptr16 = &stack_variable2 + index;\n            result6 = CONCAT44(*(undefined4 *)((int)&stack_variable2 + (index * 2 + 1) * 4),\n                              *(undefined4 *)ptr16);\n            do {\n              temp1 = (undefined4)((ulonglong)result6 >> 0x20);\n              temp2 = (undefined4)result6;\n              temp3 = *(undefined4 *)(ptr16 + -1);\n              result0 = *(undefined4 *)((int)ptr16 + -4);\n              result6 = FUN_080082d4(temp2,temp1,temp3,result0);\n              result5 = FUN_080082d0(temp3,result0,(int)result6,(int)((ulonglong)result6 >> 0x20));\n              result5 = FUN_080082d4((int)result5,(int)((ulonglong)result5 >> 0x20),temp2,temp1);\n              *ptr16 = result5;\n              ptr16 = ptr16 + -1;\n              *ptr16 = result6;\n            } while (&stack_variable2 + 1 != ptr16);\n            result6 = 0;\n            ptr16 = &stack_variable2 + index + 1;\n            do {\n              presult2 = ptr16 + -1;\n              result6 = FUN_080082d4((int)result6,(int)((ulonglong)result6 >> 0x20),\n                                    *(undefined4 *)presult2,*(undefined4 *)((int)ptr16 + -4));\n              ptr16 = presult2;\n            } while (&stack_variable2 + 2 != presult2);\n            goto LAB_0800abe4;\n          }\n        }\n        result6 = 0;\n        goto LAB_0800abe4;\n      }\n      goto LAB_0800ab0e;\n    }\n    if (operation_type < 1) {\n      if (operation_type != 0) goto LAB_0800ab0e;\n      result6 = 0;\n      ptr16 = &stack_variable2 + index + 1;\n      do {\n        presult2 = ptr16 + -1;\n        result6 = FUN_080082d4((int)result6,(int)((ulonglong)result6 >> 0x20),*(undefined4 *)presult2,\n                              *(undefined4 *)((int)ptr16 + -4));\n        ptr16 = presult2;\n      } while (&stack_variable2 != presult2);\n      goto LAB_0800aafc;\n    }\n    result6 = 0;\n    ptr16 = &stack_variable2 + index + 1;\n    do {\n      presult2 = ptr16 + -1;\n      result6 = FUN_080082d4((int)result6,(int)((ulonglong)result6 >> 0x20),*(undefined4 *)presult2,\n                            *(undefined4 *)((int)ptr16 + -4));\n      ptr16 = presult2;\n    } while (&stack_variable2 != presult2);\n  }\n  index1 = (int)((ulonglong)result6 >> 0x20);\n  temp2 = (undefined4)result6;\n  if (temp_index == 0) {\n    *(undefined8 *)output_copy[1] = result6;\n    result6 = FUN_080082d0((undefined4)stack_variable2,stack_variable2._4_4_,temp2,index1);\n    if (index < 1) goto LAB_0800ad26;\nLAB_0800ad04:\n    index1 = 1;\n    ptr16 = &stack_variable2;\n    do {\n      result6 = FUN_080082d4((int)result6,(int)((ulonglong)result6 >> 0x20),\n                            *(undefined4 *)(ptr16 + 1),*(undefined4 *)((int)ptr16 + 0xc));\n      index1 = index1 + 1;\n      ptr16 = ptr16 + 1;\n    } while (index1 <= index);\n    if (temp_index == 0) goto LAB_0800ad26;\n  }\n  else {\n    *output_copy[1] = temp2;\n    *(int *)((int)output_copy[1] + 4) = index1 + -0x80000000;\n    result6 = FUN_080082d0((undefined4)stack_variable2,stack_variable2._4_4_,temp2,index1);\n    if (0 < index) goto LAB_0800ad04;\n  }\n  result6 = CONCAT44((int)((ulonglong)result6 >> 0x20) + -0x80000000,(int)result6);\nLAB_0800ad26:\n  *(undefined8 *)((int)output_copy[1] + 8) = result6;\n  return result & 7;\n}\n\n",
            "renaming": {
                "FUN_0800a5a0": "calculate_result_0800a5a0",
                "param_1": "input",
                "param_2": "output",
                "param_3": "input_length",
                "param_4": "coefficients_length",
                "param_5": "operation_type",
                "param_6": "coefficients",
                "puVar1": "ptr1",
                "uVar2": "result",
                "uVar3": "temp",
                "iVar4": "index",
                "puVar5": "ptr2",
                "uVar6": "temp1",
                "ppuVar7": "ptr_ptr",
                "uVar8": "temp2",
                "iVar9": "index1",
                "puVar10": "ptr3",
                "uVar11": "temp3",
                "uVar12": "temp4",
                "puVar13": "ptr4",
                "iVar14": "index2",
                "iVar15": "coefficient_index",
                "iVar17": "iterator",
                "iVar21": "temp_index",
                "local_284": "temp_ptr",
                "local_280": "temp_length",
                "local_270": "temp_variable",
                "local_26c": "temp_variable1",
                "local_260": "output_copy",
                "local_258": "coefficients_copy",
                "uStack_208": "stack_variable1",
                "local_168": "stack_variable2",
                "local_160": "stack_variable3",
                "uStack_c8": "stack_variable4"
            },
            "calling": [
                "FUN_08009d78"
            ],
            "called": [
                "FUN_0800b2e8",
                "FUN_08008b10",
                "FUN_080082d0",
                "FUN_0800856c",
                "FUN_080094c0",
                "FUN_08008b4c",
                "FUN_08008ba0",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800adf0": {
            "entrypoint": "0x0800adf0",
            "current_name": "calculate_result_0800adf0",
            "code": "\nundefined4\ncalculate_result_0800adf0(undefined4 input1,uint input2,undefined4 input3,undefined4 input4,int isNonZeroInput)\n\n{\n  int result;\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  undefined4 temp4;\n  undefined4 temp5;\n  undefined8 result1;\n  undefined8 result2;\n  \n  if (((input2 & 0x7fffffff) < 0x3e400000) && (result = FUN_08008ba0(), result == 0)) {\n    return input1;\n  }\n  result1 = FUN_08008640(input1,input2,input1);\n  temp3 = (undefined4)((ulonglong)result1 >> 0x20);\n  temp2 = (undefined4)result1;\n  result1 = FUN_08008640(input1,input2,temp2,temp3);\n  temp4 = (undefined4)((ulonglong)result1 >> 0x20);\n  temp1 = (undefined4)result1;\n  result1 = FUN_08008640(temp2,temp3,0x5acfd57c,0x3de5d93a);\n  result1 = FUN_080082d0((int)result1,(int)((ulonglong)result1 >> 0x20),0x8a2b9ceb,0x3e5ae5e6);\n  result1 = FUN_08008640((int)result1,(int)((ulonglong)result1 >> 0x20),temp2,temp3);\n  result1 = FUN_080082d4((int)result1,(int)((ulonglong)result1 >> 0x20),0x57b1fe7d,0x3ec71de3);\n  result1 = FUN_08008640((int)result1,(int)((ulonglong)result1 >> 0x20),temp2,temp3);\n  result1 = FUN_080082d0((int)result1,(int)((ulonglong)result1 >> 0x20),0x19c161d5,0x3f2a01a0);\n  result1 = FUN_08008640((int)result1,(int)((ulonglong)result1 >> 0x20),temp2,temp3);\n  result1 = FUN_080082d4((int)result1,(int)((ulonglong)result1 >> 0x20),0x1110f8a6,0x3f811111);\n  temp5 = (undefined4)((ulonglong)result1 >> 0x20);\n  if (isNonZeroInput != 0) {\n    result2 = FUN_08008640(input3,input4,0,0x3fe00000);\n    result1 = FUN_08008640(temp1,temp4,(int)result1,temp5);\n    result1 = FUN_080082d0((int)result2,(int)((ulonglong)result2 >> 0x20),(int)result1,\n                         (int)((ulonglong)result1 >> 0x20));\n    result1 = FUN_08008640((int)result1,(int)((ulonglong)result1 >> 0x20),temp2,temp3);\n    result1 = FUN_080082d0((int)result1,(int)((ulonglong)result1 >> 0x20),input3,input4);\n    result2 = FUN_08008640(temp1,temp4,0x55555549,0x3fc55555);\n    result1 = FUN_080082d4((int)result1,(int)((ulonglong)result1 >> 0x20),(int)result2,\n                         (int)((ulonglong)result2 >> 0x20));\n    temp2 = FUN_080082d0(input1,input2,(int)result1,(int)((ulonglong)result1 >> 0x20));\n    return temp2;\n  }\n  result1 = FUN_08008640(temp2,temp3,(int)result1,temp5);\n  result1 = FUN_080082d0((int)result1,(int)((ulonglong)result1 >> 0x20),0x55555549,0x3fc55555);\n  result1 = FUN_08008640((int)result1,(int)((ulonglong)result1 >> 0x20),temp1,temp4);\n  temp2 = FUN_080082d4((int)result1,(int)((ulonglong)result1 >> 0x20),input1,input2);\n  return temp2;\n}\n\n",
            "renaming": {
                "FUN_0800adf0": "calculate_result_0800adf0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "param_5": "isNonZeroInput",
                "iVar1": "result",
                "uVar2": "temp1",
                "uVar3": "temp2",
                "uVar4": "temp3",
                "uVar5": "temp4",
                "uVar6": "temp5",
                "uVar7": "result1",
                "uVar8": "result2"
            },
            "calling": [
                "FUN_080096e8",
                "FUN_08009410"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_08008ba0",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800af78": {
            "entrypoint": "0x0800af78",
            "current_name": "calculate_result_0800af78",
            "code": "\nint calculateResult_0800af78(int input1,uint input2)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  undefined4 result3;\n  undefined4 result4;\n  int returnValue;\n  undefined4 result5;\n  uint unsignedInput2;\n  undefined8 result6;\n  undefined8 result7;\n  undefined4 localVariable;\n  \n  result6 = CONCAT44(input2,input1);\n  unsignedInput2 = input2 & 0x7fffffff;\n  if (unsignedInput2 < 0x44100000) {\n    if (unsignedInput2 < 0x3fdc0000) {\n      if (unsignedInput2 < 0x3e200000) {\n        result7 = FUN_080082d4(input1,input2,0x8800759c,0x7e37e43c);\n        returnValue = FUN_08008b60((int)result7,(int)((ulonglong)result7 >> 0x20),0,0x3ff00000);\n        if (returnValue != 0) {\n          return input1;\n        }\n      }\n      returnValue = -1;\n    }\n    else {\n      result6 = FUNC_0800b2cc();\n      result4 = (undefined4)((ulonglong)result6 >> 0x20);\n      result1 = (undefined4)result6;\n      if (unsignedInput2 < 0x3ff30000) {\n        if (unsignedInput2 < 0x3fe60000) {\n          result6 = FUN_080082d4(result1,result4,result1,result4);\n          result6 = FUN_080082d0((int)result6,(int)((ulonglong)result6 >> 0x20),0,0x3ff00000);\n          result7 = FUN_080082d4(result1,result4,0,0x40000000);\n          result6 = FUN_08008894((int)result6,(int)((ulonglong)result6 >> 0x20),(int)result7,\n                               (int)((ulonglong)result7 >> 0x20));\n          returnValue = 0;\n        }\n        else {\n          result6 = FUN_080082d0(result1,result4,0,0x3ff00000);\n          result7 = FUN_080082d4(result1,result4,0,0x3ff00000);\n          result6 = FUN_08008894((int)result6,(int)((ulonglong)result6 >> 0x20),(int)result7,\n                               (int)((ulonglong)result7 >> 0x20));\n          returnValue = 1;\n        }\n      }\n      else if (unsignedInput2 < 0x40038000) {\n        result6 = FUN_080082d0(result1,result4,0,0x3ff80000);\n        result7 = FUN_08008640(result1,result4,0,0x3ff80000);\n        result7 = FUN_080082d4((int)result7,(int)((ulonglong)result7 >> 0x20),0,0x3ff00000);\n        result6 = FUN_08008894((int)result6,(int)((ulonglong)result6 >> 0x20),(int)result7,\n                             (int)((ulonglong)result7 >> 0x20));\n        returnValue = 2;\n      }\n      else {\n        result6 = FUN_08008894(0,0xbff00000,result1,result4);\n        returnValue = 3;\n      }\n    }\n    localVariable = (undefined4)((ulonglong)result6 >> 0x20);\n    result5 = (undefined4)result6;\n    result6 = FUN_08008640(result5,localVariable,result5);\n    result2 = (undefined4)((ulonglong)result6 >> 0x20);\n    result1 = (undefined4)result6;\n    result6 = FUN_08008640(result1,result2,result1,result2);\n    result3 = (undefined4)((ulonglong)result6 >> 0x20);\n    result4 = (undefined4)result6;\n    result6 = FUN_08008640(result4,result3,0xe322da11,0x3f90ad3a);\n    result6 = FUN_080082d4((int)result6,(int)((ulonglong)result6 >> 0x20),0x24760deb,0x3fa97b4b);\n    result6 = FUN_08008640((int)result6,(int)((ulonglong)result6 >> 0x20),result4,result3);\n    result6 = FUN_080082d4((int)result6,(int)((ulonglong)result6 >> 0x20),0xa0d03d51,0x3fb10d66);\n    result6 = FUN_08008640((int)result6,(int)((ulonglong)result6 >> 0x20),result4,result3);\n    result6 = FUN_080082d4((int)result6,(int)((ulonglong)result6 >> 0x20),0xc54c206e,0x3fb745cd);\n    result6 = FUN_08008640((int)result6,(int)((ulonglong)result6 >> 0x20),result4,result3);\n    result6 = FUN_080082d4((int)result6,(int)((ulonglong)result6 >> 0x20),0x920083ff,0x3fc24924);\n    result6 = FUN_08008640((int)result6,(int)((ulonglong)result6 >> 0x20),result4,result3);\n    result6 = FUN_080082d4((int)result6,(int)((ulonglong)result6 >> 0x20),0x5555550d,0x3fd55555);\n    result6 = FUN_08008640((int)result6,(int)((ulonglong)result6 >> 0x20),result1,result2);\n    result1 = (undefined4)((ulonglong)result6 >> 0x20);\n    result7 = FUN_08008640(result4,result3,0x2c6a6c2f,0xbfa2b444);\n    result7 = FUN_080082d0((int)result7,(int)((ulonglong)result7 >> 0x20),0x52defd9a,0x3fadde2d);\n    result7 = FUN_08008640((int)result7,(int)((ulonglong)result7 >> 0x20),result4,result3);\n    result7 = FUN_080082d0((int)result7,(int)((ulonglong)result7 >> 0x20),0xaf749a6d,0x3fb3b0f2);\n    result7 = FUN_08008640((int)result7,(int)((ulonglong)result7 >> 0x20),result4,result3);\n    result7 = FUN_080082d0((int)result7,(int)((ulonglong)result7 >> 0x20),0xfe231671,0x3fbc71c6);\n    result7 = FUN_08008640((int)result7,(int)((ulonglong)result7 >> 0x20),result4,result3);\n    result7 = FUN_080082d0((int)result7,(int)((ulonglong)result7 >> 0x20),0x9998ebc4,0x3fc99999);\n    result7 = FUN_08008640((int)result7,(int)((ulonglong)result7 >> 0x20),result4,result3);\n    result4 = (undefined4)((ulonglong)result7 >> 0x20);\n    if (returnValue == -1) {\n      result6 = FUN_080082d4((int)result6,result1,(int)result7,result4);\n      result6 = FUN_08008640((int)result6,(int)((ulonglong)result6 >> 0x20),result5,localVariable);\n      returnValue = FUN_080082d0(result5,localVariable,(int)result6,(int)((ulonglong)result6 >> 0x20));\n      return returnValue;\n    }\n    result6 = FUN_080082d4((int)result6,result1,(int)result7,result4);\n    result6 = FUN_08008640((int)result6,(int)((ulonglong)result6 >> 0x20),result5,localVariable);\n    result6 = FUN_080082d0((int)result6,(int)((ulonglong)result6 >> 0x20),\n                         *(undefined4 *)(&UNK_0800c090 + returnValue * 8),\n                         *(undefined4 *)(&UNK_0800c094 + returnValue * 8));\n    result6 = FUN_080082d0((int)result6,(int)((ulonglong)result6 >> 0x20),result5,localVariable);\n    returnValue = FUN_080082d0(*(undefined4 *)(&UNK_0800c070 + returnValue * 8),\n                         *(undefined4 *)(&UNK_0800c074 + returnValue * 8),(int)result6,\n                         (int)((ulonglong)result6 >> 0x20));\n    if ((int)input2 < 0) {\n      return returnValue;\n    }\n  }\n  else {\n    if ((0x7ff00000 < unsignedInput2) || ((unsignedInput2 == 0x7ff00000 && (input1 != 0)))) {\n      returnValue = FUN_080082d4(input1,input2,input1);\n      return returnValue;\n    }\n    returnValue = 0x54442d18;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_0800af78": "calculate_result_0800af78",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "result3",
                "uVar4": "result4",
                "iVar5": "returnValue",
                "uVar6": "result5",
                "uVar7": "unsignedInput2",
                "uVar8": "result6",
                "uVar9": "result7",
                "local_2c": "localVariable"
            },
            "calling": [
                "FUN_08009990"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_0800b2cc",
                "FUN_08008b60",
                "FUN_08008894",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b2cc": {
            "entrypoint": "0x0800b2cc",
            "current_name": "FUNC_0800b2cc",
            "code": "\nvoid FUNC_0800b2cc(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b2cc": "FUNC_0800b2cc"
            },
            "calling": [
                "FUN_08009d78",
                "FUN_0800af78",
                "FUN_08009990"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b2d4": {
            "entrypoint": "0x0800b2d4",
            "current_name": "calculate_shifted_value_0800b2d4",
            "code": "\nuint calculateShiftedValue_0800b2d4(undefined4 inputFlag,uint inputValue)\n\n{\n  return (inputValue | 0x80000000) + 0x100000 >> 0x1f;\n}\n\n",
            "renaming": {
                "FUN_0800b2d4": "calculate_shifted_value_0800b2d4",
                "param_1": "inputFlag",
                "param_2": "inputValue"
            },
            "calling": [
                "FUN_0800981c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b2e0": {
            "entrypoint": "0x0800b2e0",
            "current_name": "initialize_0800b2e0",
            "code": "\nundefined4 initialize_0800b2e0(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800b2e0": "initialize_0800b2e0"
            },
            "calling": [
                "FUN_080098d0",
                "FUN_0800981c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b2e8": {
            "entrypoint": "0x0800b2e8",
            "current_name": "perform_calculation_0800b2e8",
            "code": "\nuint performCalculation_0800b2e8(uint input1,uint input2,int iteration,undefined4 constant)\n\n{\n  uint shiftedInput;\n  int updatedIteration;\n  uint highBits;\n  undefined8 concatenatedInputs;\n  \n  concatenatedInputs = CONCAT44(input2,input1);\n  shiftedInput = (input2 << 1) >> 0x15;\n  if (shiftedInput == 0) {\n    if ((input1 | input2 & 0x7fffffff) == 0) {\n      return input1;\n    }\n    concatenatedInputs = FUN_08008640(input1,input2,0,0x43500000);\n    if (iteration < -50000) goto LAB_0800b34a;\n    shiftedInput = ((uint)((int)((ulonglong)concatenatedInputs >> 0x20) << 1) >> 0x15) - 0x36;\n  }\n  else if (shiftedInput == 0x7ff) {\n    shiftedInput = FUN_080082d4(input1,input2,input1,input2,constant);\n    return shiftedInput;\n  }\n  highBits = (uint)((ulonglong)concatenatedInputs >> 0x20);\n  updatedIteration = shiftedInput + iteration;\n  if (updatedIteration < 0x7ff) {\n    if (0 < updatedIteration) {\n      return (uint)concatenatedInputs;\n    }\n    if (updatedIteration + 0x35 < 0 == SCARRY4(updatedIteration,0x35)) {\n      shiftedInput = FUN_08008640((uint)concatenatedInputs,highBits & 0x800fffff | (updatedIteration + 0x36) * 0x100000,0,0x3c900000);\n      return shiftedInput;\n    }\n    if (iteration < 0xc351) {\n      concatenatedInputs = CONCAT44(highBits & 0x80000000 | 0x1a56e1f,0xc2f8f359);\nLAB_0800b34a:\n      shiftedInput = FUN_08008640((int)concatenatedInputs,(int)((ulonglong)concatenatedInputs >> 0x20),0xc2f8f359,0x1a56e1f);\n      return shiftedInput;\n    }\n  }\n  shiftedInput = FUN_08008640(0x8800759c,highBits & 0x80000000 | 0x7e37e43c,0x8800759c,0x7e37e43c);\n  return shiftedInput;\n}\n\n",
            "renaming": {
                "FUN_0800b2e8": "perform_calculation_0800b2e8",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "iteration",
                "param_4": "constant",
                "uVar1": "shiftedInput",
                "iVar2": "updatedIteration",
                "uVar3": "highBits",
                "uVar4": "concatenatedInputs"
            },
            "calling": [
                "FUN_0800a5a0"
            ],
            "called": [
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b3dc": {
            "entrypoint": "0x0800b3dc",
            "current_name": "get_data_0800b3dc",
            "code": "\nundefined4 get_data_0800b3dc(void)\n\n{\n  return DAT_20000018;\n}\n\n",
            "renaming": {
                "FUN_0800b3dc": "get_data_0800b3dc"
            },
            "calling": [
                "FUN_080098d0",
                "FUN_0800981c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b3e8": {
            "entrypoint": "0x0800b3e8",
            "current_name": "execute_function_sequence_0800b3e8",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800b3f4) */\n/* WARNING: Removing unreachable block (ram,0x0800b3f6) */\n\nvoid executeFunctionSequence_0800b3e8(void)\n\n{\n  int iterationCount;\n  code **functionPointerArray;\n  \n  FUNC_0800b5b0();\n  iterationCount = 0;\n  functionPointerArray = (code **)&DAT_0800c0b4;\n  do {\n    iterationCount = iterationCount + 1;\n    (**functionPointerArray)();\n    functionPointerArray = functionPointerArray + 1;\n  } while (iterationCount != 2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b3e8": "execute_function_sequence_0800b3e8",
                "iVar1": "iterationCount",
                "ppcVar2": "functionPointerArray"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_0800b5b0",
                "FUN_0800b4d0",
                "FUN_080001ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b430": {
            "entrypoint": "0x0800b430",
            "current_name": "fill_memory_with_byte_0800b430",
            "code": "\nvoid fillMemoryWithByte_0800b430(undefined4 *destination,undefined byteToFill,uint length)\n\n{\n  undefined4 *destPtr1;\n  undefined4 *destPtr2;\n  uint remainingLength;\n  undefined4 byteToFillConcatenated;\n  bool isRemainingZero;\n  \n  if (((uint)destination & 3) != 0) {\n    remainingLength = length - 1;\n    destPtr1 = destination;\n    if (length == 0) {\n      return;\n    }\n    while( true ) {\n      destination = (undefined4 *)((int)destPtr1 + 1);\n      *(undefined *)destPtr1 = byteToFill;\n      length = remainingLength;\n      if (((uint)destination & 3) == 0) break;\n      isRemainingZero = remainingLength == 0;\n      remainingLength = remainingLength - 1;\n      destPtr1 = destination;\n      if (isRemainingZero) {\n        return;\n      }\n    }\n  }\n  if (3 < length) {\n    byteToFillConcatenated = CONCAT22(CONCAT11(byteToFill,byteToFill),CONCAT11(byteToFill,byteToFill));\n    if (0xf < length) {\n      destPtr1 = destination + 4;\n      do {\n        destPtr1[-4] = byteToFillConcatenated;\n        destPtr1[-3] = byteToFillConcatenated;\n        destPtr1[-2] = byteToFillConcatenated;\n        destPtr1[-1] = byteToFillConcatenated;\n        destPtr1 = destPtr1 + 4;\n      } while (destPtr1 != (undefined4 *)((int)destination + (length - 0x10 & 0xfffffff0) + 0x20));\n      remainingLength = length & 0xc;\n      destination = destination + ((length - 0x10 >> 4) + 1) * 4;\n      length = length & 0xf;\n      if (remainingLength == 0) goto joined_r0x0800b4a8;\n    }\n    destPtr1 = (undefined4 *)((length - 4 & 0xfffffffc) + 4 + (int)destination);\n    do {\n      destPtr2 = destination + 1;\n      *destination = byteToFillConcatenated;\n      destination = destPtr2;\n    } while (destPtr1 != destPtr2);\n    length = length & 3;\n    destination = destPtr1;\n  }\njoined_r0x0800b4a8:\n  if (length != 0) {\n    destPtr1 = destination;\n    do {\n      destPtr2 = (undefined4 *)((int)destPtr1 + 1);\n      *(undefined *)destPtr1 = byteToFill;\n      destPtr1 = destPtr2;\n    } while ((undefined4 *)(length + (int)destination) != destPtr2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b430": "fill_memory_with_byte_0800b430",
                "param_1": "destination",
                "param_2": "byteToFill",
                "param_3": "length",
                "puVar1": "destPtr1",
                "puVar2": "destPtr2",
                "uVar3": "remainingLength",
                "uVar4": "byteToFillConcatenated",
                "bVar5": "isRemainingZero"
            },
            "calling": [
                "FUN_08005814",
                "FUN_08004d7c",
                "FUN_080004ac",
                "FUN_080005b4",
                "FUN_08002f24",
                "FUN_08001994",
                "FUN_080002f0",
                "FUN_08001ddc",
                "FUN_080079c0",
                "FUN_080024c4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b4d0": {
            "entrypoint": "0x0800b4d0",
            "current_name": "FUNC_0800b4d0",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800b4d4) */\n\nvoid FUNC_0800b4d0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b4d0": "FUNC_0800b4d0"
            },
            "calling": [
                "FUN_0800b3e8"
            ],
            "called": [
                "FUN_0800b524"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b51c": {
            "entrypoint": "0x0800b51c",
            "current_name": "FUNC_0800b51c",
            "code": "\nvoid FUNC_0800b51c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b51c": "FUNC_0800b51c"
            },
            "calling": [
                "FUN_0800b524"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b520": {
            "entrypoint": "0x0800b520",
            "current_name": "FUNC_0800b520",
            "code": "\nvoid FUNC_0800b520(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b520": "FUNC_0800b520"
            },
            "calling": [
                "FUN_0800b524"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b524": {
            "entrypoint": "0x0800b524",
            "current_name": "update_data_0800b524",
            "code": "\nundefined4 updateData_0800b524(int status,undefined4 value1,undefined4 value2,undefined4 value3)\n\n{\n  undefined *dataPointer;\n  undefined4 returnValue;\n  uint bitMask;\n  uint count;\n  \n  FUNC_0800b51c(DAT_20000448);\n  if (DAT_20000168 == (undefined *)0x0) {\n    DAT_20000168 = &DAT_2000016c;\n  }\n  dataPointer = DAT_20000168;\n  count = *(uint *)(DAT_20000168 + 4);\n  if ((int)count < 0x20) {\n    if (status != 0) {\n      *(undefined4 *)(DAT_20000168 + count * 4 + 0x88) = value2;\n      bitMask = 1 << (count & 0xff);\n      *(uint *)(dataPointer + 0x188) = *(uint *)(dataPointer + 0x188) | bitMask;\n      *(undefined4 *)(dataPointer + count * 4 + 0x108) = value3;\n      if (status == 2) {\n        *(uint *)(dataPointer + 0x18c) = bitMask | *(uint *)(dataPointer + 0x18c);\n      }\n    }\n    returnValue = DAT_20000448;\n    *(uint *)(dataPointer + 4) = count + 1;\n    *(undefined4 *)(dataPointer + (count + 2) * 4) = value1;\n    FUNC_0800b520(returnValue);\n    returnValue = 0;\n  }\n  else {\n    FUNC_0800b520(DAT_20000448);\n    returnValue = 0xffffffff;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_0800b524": "update_data_0800b524",
                "param_1": "status",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "puVar1": "dataPointer",
                "uVar2": "returnValue",
                "uVar3": "bitMask",
                "uVar4": "count"
            },
            "calling": [
                "FUN_0800b4d0"
            ],
            "called": [
                "FUN_0800b51c",
                "FUN_0800b520"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b5b0": {
            "entrypoint": "0x0800b5b0",
            "current_name": "FUNC_0800b5b0",
            "code": "\nvoid FUNC_0800b5b0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b5b0": "FUNC_0800b5b0"
            },
            "calling": [
                "FUN_08000188",
                "FUN_080001ac",
                "FUN_0800b3e8"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b5bc": {
            "entrypoint": "0x0800b5bc",
            "current_name": "FUNC_0800b5bc",
            "code": "\nvoid FUNC_0800b5bc(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b5bc": "FUNC_0800b5bc"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        }
    },
    "used_tokens": 181596,
    "layers": [
        [
            "FUN_08000188",
            "FUN_080001ac",
            "FUN_080001f8",
            "FUN_08000210",
            "FUN_08000220",
            "FUN_08000268",
            "FUN_080002a0",
            "FUN_080002b6",
            "FUN_080002f0",
            "FUN_08000310",
            "FUN_08000340",
            "FUN_08000374",
            "FUN_080003ec",
            "FUN_08000478",
            "FUN_080004ac",
            "FUN_080004fc",
            "FUN_0800056c",
            "FUN_080005b4",
            "FUN_0800184c",
            "FUN_080018cc",
            "FUN_080018fc",
            "FUN_0800192c",
            "FUN_0800195c",
            "FUN_08001994",
            "FUN_08001d4c",
            "FUN_08001ddc",
            "FUN_08001e98",
            "FUN_08001f00",
            "FUN_08002408",
            "FUN_080024c4",
            "FUN_080025e8",
            "FUN_08002638",
            "FUN_0800283a",
            "FUN_08002870",
            "FUN_08002896",
            "FUN_080028bc",
            "FUN_08002908",
            "FUN_08002978",
            "FUN_080029d8",
            "FUN_08002a94",
            "FUN_08002afc",
            "FUN_08002ba8",
            "FUN_08002c18",
            "FUN_08002e08",
            "FUN_08002edc",
            "FUN_08002ef0",
            "FUN_08002f24",
            "FUN_08002f40",
            "FUN_08002f74",
            "FUN_08002fac",
            "FUN_08002fd4",
            "FUN_08003004",
            "FUN_080035ec",
            "FUN_08003618",
            "FUN_0800369c",
            "FUN_080036c6",
            "FUN_080036f0",
            "FUN_08003740",
            "FUN_0800375c",
            "FUN_08003778",
            "FUN_080037fc",
            "FUN_08003826",
            "FUN_08003980",
            "FUN_080039a0",
            "FUN_080039bc",
            "FUN_08003a18",
            "FUN_08003a74",
            "FUN_08003b98",
            "FUN_08003f34",
            "FUN_08004030",
            "FUN_08004148",
            "FUN_080041a0",
            "FUN_08004228",
            "FUN_0800423c",
            "FUN_08004250",
            "FUN_080044e8",
            "FUN_080046d0",
            "FUN_08004900",
            "FUN_08004940",
            "FUN_08004bc0",
            "FUN_08004bf4",
            "FUN_08004c2a",
            "FUN_08004c48",
            "FUN_08004d2c",
            "FUN_08004d7c",
            "FUN_08004dd2",
            "FUN_08004e30",
            "FUN_080051b4",
            "FUN_08005238",
            "FUN_08005250",
            "FUN_0800525c",
            "FUN_080052ac",
            "FUN_080052dc",
            "FUN_08005324",
            "FUN_08005360",
            "FUN_080053a0",
            "FUN_08005760",
            "FUN_08005778",
            "FUN_08005790",
            "FUN_080057e4",
            "FUN_08005814",
            "FUN_0800583c",
            "FUN_0800585c",
            "FUN_0800587c",
            "FUN_080058a0",
            "FUN_08005900",
            "FUN_0800597c",
            "FUN_08005984",
            "FUN_080059b4",
            "FUN_080059f8",
            "FUN_08005a68",
            "FUN_08005a84",
            "FUN_08005a98",
            "FUN_08005bdc",
            "FUN_08005c30",
            "FUN_08005cec",
            "FUN_0800618c",
            "FUN_0800640c",
            "FUN_080064ec",
            "FUN_08006628",
            "FUN_08006680",
            "FUN_080066cc",
            "FUN_08006950",
            "FUN_08006998",
            "FUN_080069b4",
            "FUN_080069e4",
            "FUN_08006a18",
            "FUN_08006a58",
            "FUN_08006a8c",
            "FUN_08006ac0",
            "FUN_08006b00",
            "FUN_08006b54",
            "FUN_08006ba0",
            "FUN_08006c04",
            "FUN_08006c70",
            "FUN_08006c9c",
            "FUN_08006ce0",
            "FUN_08006cf6",
            "FUN_08006d2e",
            "FUN_08006d4a",
            "FUN_08006d66",
            "FUN_08006d72",
            "FUN_08006d8a",
            "FUN_08006d98",
            "FUN_08006dc4",
            "FUN_08006de0",
            "FUN_08006dfe",
            "FUN_08006e1a",
            "FUN_08006e88",
            "FUN_0800733e",
            "FUN_0800738e",
            "FUN_080073d4",
            "FUN_08007402",
            "FUN_08007430",
            "FUN_08007436",
            "FUN_080074c8",
            "FUN_08007520",
            "FUN_08007540",
            "FUN_0800756c",
            "FUN_080076c8",
            "FUN_08007756",
            "FUN_0800778c",
            "FUN_08007854",
            "FUN_08007884",
            "FUN_080078f4",
            "FUN_08007930",
            "FUN_080079c0",
            "FUN_080079e0",
            "FUN_08007a10",
            "FUN_08007a70",
            "FUN_08007ad0",
            "FUN_08007b70",
            "FUN_08007bc2",
            "FUN_08007bf0",
            "FUN_08007c40",
            "FUN_08007c5e",
            "FUN_08007c7c",
            "FUN_08007d08",
            "FUN_08007da8",
            "FUN_08007e08",
            "FUN_08007e1c",
            "FUN_08007e58",
            "FUN_08007e84",
            "FUN_08007ea4",
            "FUN_08007f54",
            "FUN_08008190",
            "FUN_08008250",
            "FUN_0800826a",
            "FUN_08008286",
            "FUN_080082d0",
            "FUN_080082d4",
            "FUN_0800854c",
            "FUN_0800856c",
            "FUN_08008590",
            "FUN_08008640",
            "FUN_0800881c",
            "FUN_08008894",
            "FUN_08008a02",
            "FUN_08008a74",
            "FUN_08008af0",
            "FUN_08008b00",
            "FUN_08008b10",
            "FUN_08008b24",
            "FUN_08008b4c",
            "FUN_08008b60",
            "FUN_08008b74",
            "FUN_08008ba0",
            "FUN_08008bf0",
            "FUN_08008c30",
            "FUN_08008cd8",
            "FUN_08008cdc",
            "FUN_08008e3c",
            "FUN_08008e44",
            "FUN_08008eec",
            "FUN_08009054",
            "FUN_0800919c",
            "FUN_080091fc",
            "FUN_08009204",
            "FUN_08009214",
            "FUN_08009228",
            "FUN_0800923c",
            "FUN_08009250",
            "FUN_08009264",
            "FUN_08009278",
            "FUN_08009318",
            "FUN_08009410",
            "FUN_080094c0",
            "FUN_080095b8",
            "FUN_08009654",
            "FUN_080096e8",
            "FUN_08009798",
            "thunk_FUN_08009990",
            "FUN_0800981c",
            "FUN_080098d0",
            "FUN_08009990",
            "FUN_08009b24",
            "FUN_08009d78",
            "FUN_0800a1bc",
            "FUN_0800a348",
            "FUN_0800a5a0",
            "FUN_0800adf0",
            "FUN_0800af78",
            "FUN_0800b2d4",
            "FUN_0800b2e0",
            "FUN_0800b2e8",
            "FUN_0800b3dc",
            "FUN_0800b3e8",
            "FUN_0800b430",
            "FUN_0800b524"
        ]
    ],
    "locked_functions": []
}