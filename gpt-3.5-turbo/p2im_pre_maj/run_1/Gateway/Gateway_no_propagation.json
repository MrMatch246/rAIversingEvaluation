{
    "functions": {
        "FUN_0800010c": {
            "entrypoint": "0x0800010c",
            "current_name": "initialize_flag_0800010c",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08000118) */\n\nundefined4 initializeFlag_0800010c(undefined4 inputValue)\n\n{\n  if ((char)DAT_200000f4 == '\\0') {\n    DAT_200000f4._0_1_ = '\\x01';\n  }\n  return inputValue;\n}\n\n",
            "renaming": {
                "FUN_0800010c": "initialize_flag_0800010c",
                "param_1": "inputValue"
            },
            "calling": [],
            "called": [
                "FUN_0800a424"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000178": {
            "entrypoint": "0x08000178",
            "current_name": "find_end_of_string_08000178",
            "code": "\nchar * find_end_of_string_08000178(char *string)\n\n{\n  char current_char;\n  char *next_char;\n  char *current_position;\n  \n  current_position = string;\n  do {\n    next_char = current_position + 1;\n    current_char = *current_position;\n    current_position = next_char;\n  } while (current_char != '\\0');\n  return next_char + (-1 - (int)string);\n}\n\n",
            "renaming": {
                "FUN_08000178": "find_end_of_string_08000178",
                "param_1": "string",
                "cVar1": "current_char",
                "pcVar2": "next_char",
                "pcVar3": "current_position"
            },
            "calling": [
                "FUN_08002e44",
                "FUN_080032a2"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000188": {
            "entrypoint": "0x08000188",
            "current_name": "send_software_interrupt_08000188",
            "code": "\nvoid sendSoftwareInterrupt_08000188(void)\n\n{\n  software_interrupt(0x3f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000188": "send_software_interrupt_08000188"
            },
            "calling": [
                "FUN_0800018c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800018c": {
            "entrypoint": "0x0800018c",
            "current_name": "execute_function_0800018c",
            "code": "\nundefined4 executeFunction_0800018c(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  undefined4 returnValue;\n  \n  if (DAT_20000110 != 0) {\n    return 0;\n  }\n  returnValue = FUN_08000188(1,input1,0,0,input4);\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_0800018c": "execute_function_0800018c",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08000188"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000214": {
            "entrypoint": "0x08000214",
            "current_name": "process_data_08000214",
            "code": "\nvoid processData_08000214(uint input,undefined4 output1,undefined4 output2,undefined4 output3)\n\n{\n  bool isConditionMet;\n  int result;\n  \n  if (0x3b < (int)input) {\n    return;\n  }\n  result = FUN_08002fa0(&DAT_200003d4,input,output2,output3,output3);\n  if (result == 3) {\n    if (input < 0x3c) {\n      if ((&DAT_0800a908)[input] == -1) {\n        result = 0;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          result = 0;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[input]);\n          if (result == 1) {\n            result = 0;\n          }\n          else {\n            result = FUN_0800738a((int)(char)(&DAT_0800a908)[input],&DAT_0800a6cc);\n          }\n        }\n      }\n    }\n    else {\n      result = 0;\n    }\n    if (result != 0) {\n      FUN_080088e0(input,output1);\n    }\n    FUN_08002fc2(&DAT_200003d4,input,output1);\n  }\n  else if (result == 4) {\n    if (input < 0x3c) {\n      if ((&DAT_0800a908)[input] == -1) {\n        isConditionMet = false;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          isConditionMet = false;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[input]);\n          if (result == 1) {\n            isConditionMet = false;\n          }\n          else {\n            isConditionMet = true;\n          }\n        }\n      }\n    }\n    else {\n      isConditionMet = false;\n    }\n    if (isConditionMet) {\n      FUN_080026b0(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[input] * 3,output1);\n    }\n    FUN_08002fc2(&DAT_200003d4,input,output1);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000214": "process_data_08000214",
                "param_1": "input",
                "param_2": "output1",
                "param_3": "output2",
                "param_4": "output3",
                "bVar1": "isConditionMet",
                "iVar2": "result"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [
                "FUN_0800021a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800021a": {
            "entrypoint": "0x0800021a",
            "current_name": "process_item_0800021a",
            "code": "\nvoid processItem_0800021a(uint itemIndex,undefined4 param2,undefined4 unusedParam1,undefined4 unusedParam2)\n\n{\n  bool isValid;\n  int result;\n  \n  result = FUN_08002fa0(&DAT_200003d4,itemIndex,unusedParam1,unusedParam2,unusedParam2);\n  if (result == 3) {\n    if (itemIndex < 0x3c) {\n      if ((&DAT_0800a908)[itemIndex] == -1) {\n        result = 0;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          result = 0;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[itemIndex]);\n          if (result == 1) {\n            result = 0;\n          }\n          else {\n            result = FUN_0800738a((int)(char)(&DAT_0800a908)[itemIndex],&DAT_0800a6cc);\n          }\n        }\n      }\n    }\n    else {\n      result = 0;\n    }\n    if (result != 0) {\n      FUN_080088e0(itemIndex,param2);\n    }\n    FUN_08002fc2(&DAT_200003d4,itemIndex,param2);\n  }\n  else if (result == 4) {\n    if (itemIndex < 0x3c) {\n      if ((&DAT_0800a908)[itemIndex] == -1) {\n        isValid = false;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          isValid = false;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[itemIndex]);\n          if (result == 1) {\n            isValid = false;\n          }\n          else {\n            isValid = true;\n          }\n        }\n      }\n    }\n    else {\n      isValid = false;\n    }\n    if (isValid) {\n      FUN_080026b0(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[itemIndex] * 3,param2);\n    }\n    FUN_08002fc2(&DAT_200003d4,itemIndex,param2);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800021a": "process_item_0800021a",
                "param_1": "itemIndex",
                "param_2": "param2",
                "param_3": "unusedParam1",
                "param_4": "unusedParam2",
                "bVar1": "isValid",
                "iVar2": "result"
            },
            "calling": [
                "FUN_08000214"
            ],
            "called": [
                "FUN_080026b0",
                "FUN_08002fa0",
                "FUN_080036ac",
                "FUN_08002fc2",
                "FUN_0800738a",
                "FUN_080088e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000488": {
            "entrypoint": "0x08000488",
            "current_name": "update_data_08000488",
            "code": "\nvoid updateData_08000488(uint index,int value)\n\n{\n  undefined4 result;\n  \n  if ((int)index < 0xe) {\n    if (value == 0) {\n      DAT_20000114 = DAT_20000114 & ~(1 << (index & 0xff));\n      return;\n    }\n    DAT_20000114 = 1 << (index & 0xff) | DAT_20000114;\n    if (DAT_20000171 == '\\0') {\n      result = FUN_08008880();\n      FUN_08002ef2(&DAT_200003d4,index,result);\n      return;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000488": "update_data_08000488",
                "param_1": "index",
                "param_2": "value",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08008880",
                "FUN_08002ef2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080004d4": {
            "entrypoint": "0x080004d4",
            "current_name": "process_data_080004d4",
            "code": "\nvoid processData_080004d4(int flag,int value)\n\n{\n  int counter;\n  undefined *dataPtr;\n  \n  if (flag != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    dataPtr = &DAT_2000022c;\n    for (counter = 0xb; -1 < counter; counter = counter + -1) {\n      FUN_08002580(dataPtr);\n      dataPtr = dataPtr + 3;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080004d4": "process_data_080004d4",
                "param_1": "flag",
                "param_2": "value",
                "iVar1": "counter",
                "puVar2": "dataPtr"
            },
            "calling": [],
            "called": [
                "FUN_08002580"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000500": {
            "entrypoint": "0x08000500",
            "current_name": "attach_servo_08000500",
            "code": "\nvoid attachServo_08000500(int servoIndex,int param2,int param3,undefined4 param4)\n\n{\n  if (0xb < DAT_200001ed) {\n    FUN_08002f14(&DAT_200003d4,\"Max servos attached\",param3,param4,param4);\n    return;\n  }\n  if (DAT_2000011c == 0) {\n    (&DAT_200001f0)[servoIndex] = DAT_200001ed;\n    DAT_200001ed = DAT_200001ed + 1;\n  }\n  else {\n    (&DAT_200001f0)[servoIndex] = (&DAT_2000011f)[DAT_2000011c];\n    DAT_2000011c = DAT_2000011c - 1;\n  }\n  if ((0 < param2) && (0 < param3)) {\n    FUN_080025ac(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[servoIndex] * 3,servoIndex,param2,param3);\n    return;\n  }\n  FUN_08002634(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[servoIndex] * 3,servoIndex);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000500": "attach_servo_08000500",
                "param_1": "servoIndex",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08002634",
                "FUN_08002f14",
                "FUN_080025ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000588": {
            "entrypoint": "0x08000588",
            "current_name": "update_data_08000588",
            "code": "\nvoid updateData_08000588(int index)\n\n{\n  FUN_08002644(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[index] * 3);\n  if (((&DAT_200001f0)[index] == DAT_200001ed) && (DAT_200001ed != '\\0')) {\n    DAT_200001ed = DAT_200001ed + -1;\n  }\n  else if (DAT_200001ed != '\\0') {\n    DAT_2000011c = DAT_2000011c + 1;\n    (&DAT_2000011f)[DAT_2000011c] = (&DAT_200001f0)[index];\n  }\n  (&DAT_200001f0)[index] = 0xff;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000588": "update_data_08000588",
                "param_1": "index"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08002644"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080005e0": {
            "entrypoint": "0x080005e0",
            "current_name": "initialize_data_080005e0",
            "code": "\nvoid initializeData_080005e0(void)\n\n{\n  DAT_20000170 = 0;\n  DAT_20000004 = 0xff;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080005e0": "initialize_data_080005e0"
            },
            "calling": [
                "FUN_08000aec",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080005f8": {
            "entrypoint": "0x080005f8",
            "current_name": "update_pin_mode_080005f8",
            "code": "\nvoid updatePinMode_080005f8(uint pinNumber,int mode)\n\n{\n  int result;\n  char flag;\n  bool isAllowed;\n  uint shiftedPinNumber;\n  \n  result = FUN_08002fa0(&DAT_200003d4,pinNumber);\n  if (result != 0x7f) {\n    result = FUN_08002fa0(&DAT_200003d4,pinNumber);\n    if (result == 6) {\n      if (DAT_20000170 == '\\0') {\n        flag = '\\0';\n      }\n      else {\n        flag = DAT_20000170;\n        if (mode == 6) {\n          flag = '\\0';\n        }\n      }\n    }\n    else {\n      flag = '\\0';\n    }\n    if (flag != '\\0') {\n      FUN_080005e0();\n    }\n    if (pinNumber < 0x3c) {\n      if ((&DAT_0800a908)[pinNumber] == -1) {\n        isAllowed = false;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          isAllowed = false;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n          if (result == 1) {\n            isAllowed = false;\n          }\n          else if (mode == 4) {\n            isAllowed = false;\n          }\n          else {\n            isAllowed = true;\n          }\n        }\n      }\n    }\n    else {\n      isAllowed = false;\n    }\n    if (isAllowed) {\n      if ((byte)(&DAT_200001f0)[pinNumber] < 0xc) {\n        result = FUN_080026f8(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[pinNumber] * 3);\n      }\n      else {\n        result = 0;\n      }\n      if (result != 0) {\n        FUN_08000588(pinNumber);\n      }\n    }\n    shiftedPinNumber = pinNumber - 0x2e & 0xff;\n    if (shiftedPinNumber < 0xe) {\n      if (pinNumber < 0x3c) {\n        result = (int)(char)(&DAT_0800a908)[pinNumber];\n      }\n      else {\n        result = -1;\n      }\n      result = FUN_080036ac(result);\n      if (result == 0) {\n        isAllowed = false;\n      }\n      else {\n        if (pinNumber < 0x3c) {\n          result = (int)(char)(&DAT_0800a908)[pinNumber];\n        }\n        else {\n          result = -1;\n        }\n        result = FUN_080036ac(result);\n        if (result == 1) {\n          isAllowed = false;\n        }\n        else {\n          isAllowed = true;\n        }\n      }\n    }\n    else {\n      isAllowed = false;\n    }\n    if (isAllowed) {\n      FUN_08000488(shiftedPinNumber,mode == 2);\n    }\n    if (pinNumber < 0x3c) {\n      if ((&DAT_0800a908)[pinNumber] == -1) {\n        isAllowed = false;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          isAllowed = false;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n          if (result == 1) {\n            isAllowed = false;\n          }\n          else {\n            isAllowed = true;\n          }\n        }\n      }\n    }\n    else {\n      isAllowed = false;\n    }\n    if (isAllowed) {\n      if ((mode == 0) || (mode == 0xb)) {\n        (&DAT_20000174)[pinNumber >> 3] = (&DAT_20000174)[pinNumber >> 3] | (byte)(1 << (pinNumber & 7));\n      }\n      else {\n        (&DAT_20000174)[pinNumber >> 3] = (&DAT_20000174)[pinNumber >> 3] & ~(byte)(1 << (pinNumber & 7));\n      }\n    }\n    FUN_08002fc2(&DAT_200003d4,pinNumber,0);\n    switch(mode) {\n    case 0:\n      if (pinNumber < 0x3c) {\n        if ((&DAT_0800a908)[pinNumber] == -1) {\n          isAllowed = false;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            isAllowed = false;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n            if (result == 1) {\n              isAllowed = false;\n            }\n            else {\n              isAllowed = true;\n            }\n          }\n        }\n      }\n      else {\n        isAllowed = false;\n      }\n      if (isAllowed) {\n        FUN_08008990(pinNumber,0);\n        FUN_08002fa8(&DAT_200003d4,pinNumber,0);\n        return;\n      }\n      break;\n    case 1:\n      if (pinNumber < 0x3c) {\n        if ((&DAT_0800a908)[pinNumber] == -1) {\n          isAllowed = false;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            isAllowed = false;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n            if (result == 1) {\n              isAllowed = false;\n            }\n            else {\n              isAllowed = true;\n            }\n          }\n        }\n      }\n      else {\n        isAllowed = false;\n      }\n      if (isAllowed) {\n        result = FUN_08002fa0(&DAT_200003d4,pinNumber);\n        if (result == 3) {\n          FUN_08008a24(pinNumber,0);\n        }\n        FUN_08008990(pinNumber,1);\n        FUN_08002fa8(&DAT_200003d4,pinNumber,1);\n        return;\n      }\n      break;\n    case 2:\n      if (shiftedPinNumber < 0xe) {\n        if (pinNumber < 0x3c) {\n          result = (int)(char)(&DAT_0800a908)[pinNumber];\n        }\n        else {\n          result = -1;\n        }\n        result = FUN_080036ac(result);\n        if (result == 0) {\n          isAllowed = false;\n        }\n        else {\n          if (pinNumber < 0x3c) {\n            result = (int)(char)(&DAT_0800a908)[pinNumber];\n          }\n          else {\n            result = -1;\n          }\n          result = FUN_080036ac(result);\n          if (result == 1) {\n            isAllowed = false;\n          }\n          else {\n            isAllowed = true;\n          }\n        }\n      }\n      else {\n        isAllowed = false;\n      }\n      if (isAllowed) {\n        if (pinNumber < 0x3c) {\n          if ((&DAT_0800a908)[pinNumber] == -1) {\n            isAllowed = false;\n          }\n          else {\n            result = FUN_080036ac();\n            if (result == 0) {\n              isAllowed = false;\n            }\n            else {\n              result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n              if (result == 1) {\n                isAllowed = false;\n              }\n            }\n          }\n        }\n        else {\n          isAllowed = false;\n        }\n        if (isAllowed) {\n          FUN_08008990(pinNumber,0);\n        }\n        FUN_08002fa8(&DAT_200003d4,pinNumber,2);\n        return;\n      }\n      break;\n    case 3:\n      if (pinNumber < 0x3c) {\n        if ((&DAT_0800a908)[pinNumber] == -1) {\n          result = 0;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            result = 0;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n            if (result == 1) {\n              result = 0;\n            }\n            else {\n              result = FUN_0800738a((int)(char)(&DAT_0800a908)[pinNumber],&DAT_0800a6cc);\n            }\n          }\n        }\n      }\n      else {\n        result = 0;\n      }\n      if (result != 0) {\n        FUN_08008990(pinNumber,1);\n        FUN_080088e0(pinNumber,0);\n        FUN_08002fa8(&DAT_200003d4,pinNumber,3);\n        return;\n      }\n      break;\n    case 4:\n      if (pinNumber < 0x3c) {\n        if ((&DAT_0800a908)[pinNumber] == -1) {\n          isAllowed = false;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            isAllowed = false;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n            if (result == 1) {\n              isAllowed = false;\n            }\n            else {\n              isAllowed = true;\n            }\n          }\n        }\n      }\n      else {\n        isAllowed = false;\n      }\n      if (isAllowed) {\n        FUN_08002fa8(&DAT_200003d4,pinNumber,4);\n        if (((byte)(&DAT_200001f0)[pinNumber] != 0xff) &&\n           (result = FUN_080026f8(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[pinNumber] * 3),\n           result != 0)) {\n          isAllowed = false;\n        }\n        if (isAllowed) {\n          FUN_08000500(pinNumber,0xffffffff);\n          return;\n        }\n      }\n      break;\n    default:\n      FUN_08002f14(&DAT_200003d4,\"Unknown pin mode\");\n      break;\n    case 6:\n      if (pinNumber < 0x3c) {\n        if ((&DAT_0800a908)[pinNumber] == -1) {\n          result = 0;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            result = 0;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n            if (result == 1) {\n              result = 0;\n            }\n            else {\n              result = FUN_0800738a((int)(char)(&DAT_0800a908)[pinNumber],&DAT_0800a69c);\n              if (result == 0) {\n                result = FUN_0800738a((int)(char)(&DAT_0800a908)[pinNumber],&DAT_0800a66c);\n              }\n            }\n          }\n        }\n      }\n      else {\n        result = 0;\n      }\n      if (result != 0) {\n        FUN_08002fa8(&DAT_200003d4,pinNumber,6);\n        return;\n      }\n      break;\n    case 10:\n      break;\n    case 0xb:\n      if (pinNumber < 0x3c) {\n        if ((&DAT_0800a908)[pinNumber] == -1) {\n          isAllowed = false;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            isAllowed = false;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNumber]);\n            if (result == 1) {\n              isAllowed = false;\n            }\n            else {\n              isAllowed = true;\n            }\n          }\n        }\n      }\n      else {\n        isAllowed = false;\n      }\n      if (isAllowed) {\n        FUN_08008990(pinNumber,2);\n        FUN_08002fa8(&DAT_200003d4,pinNumber,0xb);\n        FUN_08002fc2(&DAT_200003d4,pinNumber,1);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080005f8": "update_pin_mode_080005f8",
                "param_1": "pinNumber",
                "param_2": "mode",
                "iVar1": "result",
                "cVar2": "flag",
                "bVar3": "isAllowed",
                "uVar4": "shiftedPinNumber"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_08000aec",
                "FUN_08000a64"
            ],
            "called": [
                "FUN_08002f14",
                "FUN_08008990",
                "FUN_080036ac",
                "FUN_080005e0",
                "FUN_08002fc2",
                "FUN_0800738a",
                "FUN_080088e0",
                "FUN_08000488",
                "FUN_08000588",
                "FUN_08002fa0",
                "FUN_08008a24",
                "FUN_08002fa8",
                "FUN_08000500",
                "FUN_080026f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a64": {
            "entrypoint": "0x08000a64",
            "current_name": "process_data_08000a64",
            "code": "\nvoid processData_08000a64(void)\n\n{\n  int result;\n  uint index;\n  \n  for (index = 0; index < 0x3c; index = index + 1 & 0xff) {\n    if (index < 0x3c) {\n      if ((&DAT_0800a908)[index] == -1) {\n        result = 0;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          result = 0;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[index]);\n          if (result == 1) {\n            result = 0;\n          }\n          else {\n            result = FUN_0800738a((int)(char)(&DAT_0800a908)[index],&DAT_0800a69c);\n            if (result == 0) {\n              result = FUN_0800738a((int)(char)(&DAT_0800a908)[index],&DAT_0800a66c);\n            }\n          }\n        }\n      }\n    }\n    else {\n      result = 0;\n    }\n    if (result != 0) {\n      FUN_080005f8(index,6);\n    }\n  }\n  DAT_20000170 = 1;\n  FUN_08002a26(&DAT_20000314);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000a64": "process_data_08000a64",
                "iVar1": "result",
                "uVar2": "index"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [
                "FUN_080036ac",
                "FUN_08002a26",
                "FUN_0800738a",
                "FUN_080005f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000aec": {
            "entrypoint": "0x08000aec",
            "current_name": "initialize_data_08000aec",
            "code": "\nvoid initializeData_08000aec(void)\n\n{\n  bool isInRange;\n  int result;\n  uint index;\n  \n  DAT_20000171 = 1;\n  if (DAT_20000170 != '\\0') {\n    FUN_080005e0();\n  }\n  for (index = 0; index < 5; index = index + 1 & 0xff) {\n    (&DAT_200001e8)[index] = 0;\n    (&DAT_20000174)[index] = 0;\n    (&DAT_20000180)[index] = 0;\n  }\n  for (index = 0; index < 0x3c; index = index + 1 & 0xff) {\n    if ((index - 0x2e & 0xff) < 0xe) {\n      if (index < 0x3c) {\n        result = (int)(char)(&DAT_0800a908)[index];\n      }\n      else {\n        result = -1;\n      }\n      result = FUN_080036ac(result);\n      if (result == 0) {\n        isInRange = false;\n      }\n      else {\n        if (index < 0x3c) {\n          result = (int)(char)(&DAT_0800a908)[index];\n        }\n        else {\n          result = -1;\n        }\n        result = FUN_080036ac(result);\n        if (result == 1) {\n          isInRange = false;\n        }\n        else {\n          isInRange = true;\n        }\n      }\n    }\n    else {\n      isInRange = false;\n    }\n    if (isInRange) {\n      FUN_080005f8(index,2);\n    }\n    else {\n      if ((((index < 0x3c) && ((&DAT_0800a908)[index] != -1)) &&\n          (result = FUN_080036ac(), result != 0)) &&\n         (result = FUN_080036ac((int)(char)(&DAT_0800a908)[index]), result != 1)) {\n        isInRange = true;\n      }\n      if (isInRange) {\n        FUN_080005f8(index,1);\n      }\n    }\n    (&DAT_200001f0)[index] = 0xff;\n  }\n  DAT_20000114 = 0;\n  DAT_2000011c = 0;\n  DAT_200001ed = 0;\n  DAT_20000171 = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000aec": "initialize_data_08000aec",
                "bVar1": "isInRange",
                "iVar2": "result",
                "uVar3": "index"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_080036ac",
                "FUN_080005e0",
                "FUN_080005f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000be8": {
            "entrypoint": "0x08000be8",
            "current_name": "process_data_08000be8",
            "code": "\nvoid processData_08000be8(int index,uint mask,int isNonzero,undefined4 paramValue)\n\n{\n  undefined1 *pointer1;\n  undefined1 *pointer2;\n  \n  pointer1 = &DAT_20000174;\n  pointer2 = (undefined1 *)((byte)(&DAT_20000174)[index] & mask);\n  if ((isNonzero != 0) ||\n     (pointer1 = (undefined1 *)(uint)(byte)(&DAT_20000180)[index], pointer2 != pointer1)) {\n    FUN_08002efe(&DAT_200003d4,index,pointer2,pointer1,paramValue);\n    (&DAT_20000180)[index] = (char)pointer2;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000be8": "process_data_08000be8",
                "param_1": "index",
                "param_2": "mask",
                "param_3": "isNonzero",
                "param_4": "paramValue",
                "puVar1": "pointer1",
                "puVar2": "pointer2"
            },
            "calling": [
                "FUN_08000ef8"
            ],
            "called": [
                "FUN_08002efe"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000ef8": {
            "entrypoint": "0x08000ef8",
            "current_name": "process_configuration_flags_08000ef8",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08001ade) */\n/* WARNING: Removing unreachable block (ram,0x08001a4a) */\n/* WARNING: Removing unreachable block (ram,0x080019b6) */\n/* WARNING: Removing unreachable block (ram,0x08001912) */\n/* WARNING: Removing unreachable block (ram,0x08001866) */\n/* WARNING: Removing unreachable block (ram,0x080017d2) */\n/* WARNING: Removing unreachable block (ram,0x0800173e) */\n/* WARNING: Removing unreachable block (ram,0x0800169a) */\n/* WARNING: Removing unreachable block (ram,0x080015ee) */\n/* WARNING: Removing unreachable block (ram,0x0800155a) */\n/* WARNING: Removing unreachable block (ram,0x08001490) */\n/* WARNING: Removing unreachable block (ram,0x080014a2) */\n/* WARNING: Removing unreachable block (ram,0x080014e4) */\n/* WARNING: Removing unreachable block (ram,0x080014b0) */\n/* WARNING: Removing unreachable block (ram,0x080014ba) */\n/* WARNING: Removing unreachable block (ram,0x080014e8) */\n/* WARNING: Removing unreachable block (ram,0x080014c2) */\n/* WARNING: Removing unreachable block (ram,0x080014b6) */\n/* WARNING: Removing unreachable block (ram,0x08001496) */\n/* WARNING: Removing unreachable block (ram,0x08001430) */\n/* WARNING: Removing unreachable block (ram,0x08001376) */\n/* WARNING: Removing unreachable block (ram,0x080012e2) */\n/* WARNING: Removing unreachable block (ram,0x0800124e) */\n/* WARNING: Removing unreachable block (ram,0x080011b8) */\n/* WARNING: Removing unreachable block (ram,0x08001100) */\n/* WARNING: Removing unreachable block (ram,0x0800106c) */\n/* WARNING: Removing unreachable block (ram,0x08000fd8) */\n/* WARNING: Removing unreachable block (ram,0x08000f42) */\n/* WARNING: Removing unreachable block (ram,0x08000f8e) */\n/* WARNING: Removing unreachable block (ram,0x08001022) */\n/* WARNING: Removing unreachable block (ram,0x080010b6) */\n/* WARNING: Removing unreachable block (ram,0x0800114a) */\n/* WARNING: Removing unreachable block (ram,0x08001204) */\n/* WARNING: Removing unreachable block (ram,0x08001298) */\n/* WARNING: Removing unreachable block (ram,0x0800132c) */\n/* WARNING: Removing unreachable block (ram,0x080013c0) */\n/* WARNING: Removing unreachable block (ram,0x0800147c) */\n/* WARNING: Removing unreachable block (ram,0x08001510) */\n/* WARNING: Removing unreachable block (ram,0x080015a4) */\n/* WARNING: Removing unreachable block (ram,0x08001638) */\n/* WARNING: Removing unreachable block (ram,0x080016f4) */\n/* WARNING: Removing unreachable block (ram,0x08001788) */\n/* WARNING: Removing unreachable block (ram,0x0800181c) */\n/* WARNING: Removing unreachable block (ram,0x080018b0) */\n/* WARNING: Removing unreachable block (ram,0x0800196c) */\n/* WARNING: Removing unreachable block (ram,0x08001a00) */\n/* WARNING: Removing unreachable block (ram,0x08001a94) */\n/* WARNING: Removing unreachable block (ram,0x08001b28) */\n/* WARNING: Removing unreachable block (ram,0x080014ca) */\n\nvoid processConfigurationFlags_08000ef8(void)\n\n{\n  byte inputByte1;\n  int returnValue;\n  bool flagCheckResult;\n  byte outputByte;\n  \n  inputByte1 = DAT_20000174;\n  if (DAT_200001e8 != '\\0') {\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      outputByte = 0;\n    }\n    else {\n      returnValue = FUN_080036ac(3);\n      if (returnValue == 1) {\n        outputByte = 0;\n      }\n      else if ((inputByte1 & 1) == 0) {\n        outputByte = 0;\n      }\n      else {\n        returnValue = FUN_08008a6c(0);\n        if (returnValue == 0) {\n          outputByte = 0;\n        }\n        else {\n          outputByte = 1;\n        }\n      }\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      flagCheckResult = false;\n    }\n    else {\n      returnValue = FUN_080036ac(2);\n      if (returnValue == 1) {\n        flagCheckResult = false;\n      }\n      else if ((inputByte1 & 2) == 0) {\n        flagCheckResult = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(1);\n        if (returnValue == 0) {\n          flagCheckResult = false;\n        }\n        else {\n          flagCheckResult = true;\n        }\n      }\n    }\n    if (flagCheckResult) {\n      outputByte = outputByte | 2;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      flagCheckResult = false;\n    }\n    else {\n      returnValue = FUN_080036ac(10);\n      if (returnValue == 1) {\n        flagCheckResult = false;\n      }\n      else if ((inputByte1 & 4) == 0) {\n        flagCheckResult = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(2);\n        if (returnValue == 0) {\n          flagCheckResult = false;\n        }\n        else {\n          flagCheckResult = true;\n        }\n      }\n    }\n    if (flagCheckResult) {\n      outputByte = outputByte | 4;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      flagCheckResult = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0x13);\n      if (returnValue == 1) {\n        flagCheckResult = false;\n      }\n      else if ((inputByte1 & 8) == 0) {\n        flagCheckResult = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(3);\n        if (returnValue == 0) {\n          flagCheckResult = false;\n        }\n        else {\n          flagCheckResult = true;\n        }\n      }\n    }\n    if (flagCheckResult) {\n      outputByte = outputByte | 8;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      flagCheckResult = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0x15);\n      if (returnValue == 1) {\n        flagCheckResult = false;\n      }\n      else if ((inputByte1 & 0x10) == 0) {\n        flagCheckResult = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(4);\n        if (returnValue == 0) {\n          flagCheckResult = false;\n        }\n        else {\n          flagCheckResult = true;\n        }\n      }\n    }\n    if (flagCheckResult) {\n      outputByte = outputByte | 0x10;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      flagCheckResult = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0x14);\n      if (returnValue == 1) {\n        flagCheckResult = false;\n      }\n      else if ((inputByte1 & 0x20) == 0) {\n        flagCheckResult = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(5);\n        if (returnValue == 0) {\n          flagCheckResult = false;\n        }\n        else {\n          flagCheckResult = true;\n        }\n      }\n    }\n    if (flagCheckResult) {\n      outputByte = outputByte | 0x20;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      flagCheckResult = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0x1a);\n      if (returnValue == 1) {\n        flagCheckResult = false;\n      }\n      else if ((inputByte1 & 0x40) == 0) {\n        flagCheckResult = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(6);\n        if (returnValue == 0) {\n          flagCheckResult = false;\n        }\n        else {\n          flagCheckResult = true;\n        }\n      }\n    }\n    if (flagCheckResult) {\n      outputByte = outputByte | 0x40;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      flagCheckResult = false;\n    }\n    else {\n      returnValue = FUN_080036ac(8);\n      if (returnValue == 1) {\n        flagCheckResult = false;\n      }\n      else if ((inputByte1 & 0x80) == 0) {\n        flagCheckResult = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(7);\n        if (returnValue == 0) {\n          flagCheckResult = false;\n        }\n        else {\n          flagCheckResult = true;\n        }\n      }\n    }\n    if (flagCheckResult) {\n      outputByte = outputByte | 0x80;\n    }\n    FUN_08000be8(0,outputByte);\n  }\n  inputByte1 = DAT_20000175;\n  if (DAT_200001e9 != '\\0') {\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      outputByte = 0;\n    }\n    else {\n      returnValue = FUN_080036ac(9);\n      if (returnValue == 1) {\n        outputByte = 0;\n      }\n      else if ((inputByte1 & 1) == 0) {\n        outputByte = 0;\n      }\n      else {\n        returnValue = FUN_08008a6c(8);\n        if (returnValue == 0) {\n          outputByte = 0;\n        }\n        else {\n          outputByte = 1;\n        }\n      }\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      flagCheckResult = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0x27);\n      if (returnValue == 1) {\n        flagCheckResult = false;\n      }\n      else if ((inputByte1 & 2) == 0) {\n        flagCheckResult = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(9);\n        if (returnValue == 0) {\n          flagCheckResult = false;\n        }\n        else {\n          flagCheckResult = true;\n        }\n      }\n    }\n    if (flagCheckResult) {\n      outputByte = outputByte | 2;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      flagCheckResult = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0x16);\n      if (returnValue == 1) {\n        flagCheckResult = false;\n      }\n      else if ((inputByte1 & 4) == 0) {\n        flagCheckResult = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(10);\n        if (returnValue == 0) {\n          flagCheckResult = false;\n        }\n        else {\n          flagCheckResult = true;\n        }\n      }\n    }\n    if (flagCheckResult) {\n      outputByte = outputByte | 4;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      flagCheckResult = false;\n    }\n    else {\n      returnValue = FUN_080036ac(7);\n      if (returnValue == 1) {\n        flagCheckResult = false;\n      }\n      else if ((inputByte1 & 8) == 0) {\n        flagCheckResult = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0xb);\n        if (returnValue == 0) {\n          flagCheckResult = false;\n        }\n        else {\n          flagCheckResult = true;\n        }\n      }\n    }\n    if (flagCheckResult) {\n      outputByte = outputByte | 8;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      flagCheckResult = false;\n    }\n    else {\n      returnValue = FUN_080036ac(6);\n      if (returnValue == 1) {\n        flagCheckResult = false;\n      }\n      else if ((inputByte1 & 0x10) == 0) {\n        flagCheckResult = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0xc);\n        if (returnValue == 0) {\n          flagCheckResult = false;\n        }\n        else {\n          flagCheckResult = true;\n        }\n      }\n    }\n    if (flagCheckResult) {\n      outputByte = outputByte | 0x10;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      flagCheckResult = false;\n    }\n    else {\n      returnValue = FUN_080036ac(5);\n      if (returnValue == 1) {\n        flagCheckResult = false;\n      }\n      else if ((inputByte1 & 0x20) == 0) {\n        flagCheckResult = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0xd);\n        if (returnValue == 0) {\n          flagCheckResult = false;\n        }\n        else {\n          flagCheckResult = true;\n        }\n      }\n    }\n    if (flagCheckResult) {\n      outputByte = outputByte | 0x20;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      flagCheckResult = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0x19);\n      if (returnValue == 1) {\n        flagCheckResult = false;\n      }\n      else if ((inputByte1 & 0x40) == 0) {\n        flagCheckResult = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0xe);\n        if (returnValue == 0) {\n          flagCheckResult = false;\n        }\n        else {\n          flagCheckResult = true;\n        }\n      }\n    }\n    if (flagCheckResult) {\n      outputByte = outputByte | 0x40;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      flagCheckResult = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0x18);\n      if (returnValue == 1) {\n        flagCheckResult = false;\n      }\n      else if ((inputByte1 & 0x80) == 0) {\n        flagCheckResult = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0xf);\n        if (returnValue == 0) {\n          flagCheckResult = false;\n        }\n        else {\n          flagCheckResult = true;\n        }\n      }\n    }\n    if (flagCheckResult) {\n      outputByte = outputByte | 0x80;\n    }\n    FUN_08000be8(1,outputByte,0);\n  }\n  inputByte1 = DAT_20000176;\n  if (DAT_200001ea != '\\0') {\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      outputByte = 0;\n    }\n    else {\n      returnValue = FUN_080036ac(0x2a);\n      if (returnValue == 1) {\n        outputByte = 0;\n      }\n      else if ((inputByte1 & 1) == 0) {\n        outputByte = 0;\n      }\n      else {\n        returnValue = FUN_08008a6c(0x10);\n        if (returnValue == 0) {\n          outputByte = 0;\n        }\n        else {\n          outputByte = 1;\n        }\n      }\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      flagCheckResult = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0x2c);\n      if (returnValue == 1) {\n        flagCheckResult = false;\n      }\n      else if ((inputByte1 & 2) == 0) {\n        flagCheckResult = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0x11);\n        if (returnValue == 0) {\n          flagCheckResult = false;\n        }\n        else {\n          flagCheckResult = true;\n        }\n      }\n    }\n    if (flagCheckResult) {\n      outputByte = outputByte | 2;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      flagCheckResult = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0xd);\n      if (returnValue == 1) {\n        flagCheckResult = false;\n      }\n      else if ((inputByte1 & 8) == 0) {\n        flagCheckResult = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0x13);\n        if (returnValue == 0) {\n          flagCheckResult = false;\n        }\n        else {\n          flagCheckResult = true;\n        }\n      }\n    }\n    if (flagCheckResult) {\n      outputByte = outputByte | 8;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      flagCheckResult = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0xe);\n      if (returnValue == 1) {\n        flagCheckResult = false;\n      }\n      else if ((inputByte1 & 0x10) == 0) {\n        flagCheckResult = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0x14);\n        if (returnValue == 0) {\n          flagCheckResult = false;\n        }\n        else {\n          flagCheckResult = true;\n        }\n      }\n    }\n    if (flagCheckResult) {\n      outputByte = outputByte | 0x10;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      flagCheckResult = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0xf);\n      if (returnValue == 1) {\n        flagCheckResult = false;\n      }\n      else if ((inputByte1 & 0x20) == 0) {\n        flagCheckResult = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0x15);\n        if (returnValue == 0) {\n          flagCheckResult = false;\n        }\n        else {\n          flagCheckResult = true;\n        }\n      }\n    }\n    if (flagCheckResult) {\n      outputByte = outputByte | 0x20;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      flagCheckResult = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0x17);\n      if (returnValue == 1) {\n        flagCheckResult = false;\n      }\n      else if ((inputByte1 & 0x40) == 0) {\n        flagCheckResult = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0x16);\n        if (returnValue == 0) {\n          flagCheckResult = false;\n        }\n        else {\n          flagCheckResult = true;\n        }\n      }\n    }\n    if (flagCheckResult) {\n      outputByte = outputByte | 0x40;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      flagCheckResult = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0x2d);\n      if (returnValue == 1) {\n        flagCheckResult = false;\n      }\n      else if ((inputByte1 & 0x80) == 0) {\n        flagCheckResult = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0x17);\n        if (returnValue == 0) {\n          flagCheckResult = false;\n        }\n        else {\n          flagCheckResult = true;\n        }\n      }\n    }\n    if (flagCheckResult) {\n      outputByte = outputByte | 0x80;\n    }\n    FUN_08000be8(2,outputByte,0);\n  }\n  inputByte1 = DAT_20000177;\n  if (DAT_200001eb != '\\0') {\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      outputByte = 0;\n    }\n    else {\n      returnValue = FUN_080036ac(0x2e);\n      if (returnValue == 1) {\n        outputByte = 0;\n      }\n      else if ((inputByte1 & 1) == 0) {\n        outputByte = 0;\n      }\n      else {\n        returnValue = FUN_08008a6c(0x18);\n        if (returnValue == 0) {\n          outputByte = 0;\n        }\n        else {\n          outputByte = 1;\n        }\n      }\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      flagCheckResult = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0x2f);\n      if (returnValue == 1) {\n        flagCheckResult = false;\n      }\n      else if ((inputByte1 & 2) == 0) {\n        flagCheckResult = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0x19);\n        if (returnValue == 0) {\n          flagCheckResult = false;\n        }\n        else {\n          flagCheckResult = true;\n        }\n      }\n    }\n    if (flagCheckResult) {\n      outputByte = outputByte | 2;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      flagCheckResult = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0x30);\n      if (returnValue == 1) {\n        flagCheckResult = false;\n      }\n      else if ((inputByte1 & 4) == 0) {\n        flagCheckResult = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0x1a);\n        if (returnValue == 0) {\n          flagCheckResult = false;\n        }\n        else {\n          flagCheckResult = true;\n        }\n      }\n    }\n    if (flagCheckResult) {\n      outputByte = outputByte | 4;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      flagCheckResult = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0x31);\n      if (returnValue == 1) {\n        flagCheckResult = false;\n      }\n      else if ((inputByte1 & 8) == 0) {\n        flagCheckResult = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0x1b);\n        if (returnValue == 0) {\n          flagCheckResult = false;\n        }\n        else {\n          flagCheckResult = true;\n        }\n      }\n    }\n    if (flagCheckResult) {\n      outputByte = outputByte | 8;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      flagCheckResult = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0x22);\n      if (returnValue == 1) {\n        flagCheckResult = false;\n      }\n      else if ((inputByte1 & 0x10) == 0) {\n        flagCheckResult = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0x1c);\n        if (returnValue == 0) {\n          flagCheckResult = false;\n        }\n        else {\n          flagCheckResult = true;\n        }\n      }\n    }\n    if (flagCheckResult) {\n      outputByte = outputByte | 0x10;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      flagCheckResult = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0x23);\n      if (returnValue == 1) {\n        flagCheckResult = false;\n      }\n      else if ((inputByte1 & 0x20) == 0) {\n        flagCheckResult = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0x1d);\n        if (returnValue == 0) {\n          flagCheckResult = false;\n        }\n        else {\n          flagCheckResult = true;\n        }\n      }\n    }\n    if (flagCheckResult) {\n      outputByte = outputByte | 0x20;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      flagCheckResult = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0x2b);\n      if (returnValue == 1) {\n        flagCheckResult = false;\n      }\n      else if ((inputByte1 & 0x40) == 0) {\n        flagCheckResult = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0x1e);\n        if (returnValue == 0) {\n          flagCheckResult = false;\n        }\n        else {\n          flagCheckResult = true;\n        }\n      }\n    }\n    if (flagCheckResult) {\n      outputByte = outputByte | 0x40;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      flagCheckResult = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0x32);\n      if (returnValue == 1) {\n        flagCheckResult = false;\n      }\n      else if ((inputByte1 & 0x80) == 0) {\n        flagCheckResult = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0x1f);\n        if (returnValue == 0) {\n          flagCheckResult = false;\n        }\n        else {\n          flagCheckResult = true;\n        }\n      }\n    }\n    if (flagCheckResult) {\n      outputByte = outputByte | 0x80;\n    }\n    FUN_08000be8(3,outputByte,0);\n  }\n  inputByte1 = DAT_20000178;\n  if (DAT_200001ec != '\\0') {\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      outputByte = 0;\n    }\n    else {\n      returnValue = FUN_080036ac(0x29);\n      if (returnValue == 1) {\n        outputByte = 0;\n      }\n      else if ((inputByte1 & 1) == 0) {\n        outputByte = 0;\n      }\n      else {\n        returnValue = FUN_08008a6c(0x20);\n        if (returnValue == 0) {\n          outputByte = 0;\n        }\n        else {\n          outputByte = 1;\n        }\n      }\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      flagCheckResult = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0x28);\n      if (returnValue == 1) {\n        flagCheckResult = false;\n      }\n      else if ((inputByte1 & 2) == 0) {\n        flagCheckResult = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0x21);\n        if (returnValue == 0) {\n          flagCheckResult = false;\n        }\n        else {\n          flagCheckResult = true;\n        }\n      }\n    }\n    if (flagCheckResult) {\n      outputByte = outputByte | 2;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      flagCheckResult = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0x26);\n      if (returnValue == 1) {\n        flagCheckResult = false;\n      }\n      else if ((inputByte1 & 4) == 0) {\n        flagCheckResult = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0x22);\n        if (returnValue == 0) {\n          flagCheckResult = false;\n        }\n        else {\n          flagCheckResult = true;\n        }\n      }\n    }\n    if (flagCheckResult) {\n      outputByte = outputByte | 4;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      flagCheckResult = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0x25);\n      if (returnValue == 1) {\n        flagCheckResult = false;\n      }\n      else if ((inputByte1 & 8) == 0) {\n        flagCheckResult = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0x23);\n        if (returnValue == 0) {\n          flagCheckResult = false;\n        }\n        else {\n          flagCheckResult = true;\n        }\n      }\n    }\n    if (flagCheckResult) {\n      outputByte = outputByte | 8;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      flagCheckResult = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0xc);\n      if (returnValue == 1) {\n        flagCheckResult = false;\n      }\n      else if ((inputByte1 & 0x10) == 0) {\n        flagCheckResult = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0x24);\n        if (returnValue == 0) {\n          flagCheckResult = false;\n        }\n        else {\n          flagCheckResult = true;\n        }\n      }\n    }\n    if (flagCheckResult) {\n      outputByte = outputByte | 0x10;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      flagCheckResult = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0xb);\n      if (returnValue == 1) {\n        flagCheckResult = false;\n      }\n      else if ((inputByte1 & 0x20) == 0) {\n        flagCheckResult = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0x25);\n        if (returnValue == 0) {\n          flagCheckResult = false;\n        }\n        else {\n          flagCheckResult = true;\n        }\n      }\n    }\n    if (flagCheckResult) {\n      outputByte = outputByte | 0x20;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      flagCheckResult = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0x1c);\n      if (returnValue == 1) {\n        flagCheckResult = false;\n      }\n      else if ((inputByte1 & 0x40) == 0) {\n        flagCheckResult = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0x26);\n        if (returnValue == 0) {\n          flagCheckResult = false;\n        }\n        else {\n          flagCheckResult = true;\n        }\n      }\n    }\n    if (flagCheckResult) {\n      outputByte = outputByte | 0x40;\n    }\n    returnValue = FUN_080036ac();\n    if (returnValue == 0) {\n      flagCheckResult = false;\n    }\n    else {\n      returnValue = FUN_080036ac(0x1b);\n      if (returnValue == 1) {\n        flagCheckResult = false;\n      }\n      else if ((inputByte1 & 0x80) == 0) {\n        flagCheckResult = false;\n      }\n      else {\n        returnValue = FUN_08008a6c(0x27);\n        if (returnValue == 0) {\n          flagCheckResult = false;\n        }\n        else {\n          flagCheckResult = true;\n        }\n      }\n    }\n    if (flagCheckResult) {\n      outputByte = outputByte | 0x80;\n    }\n    FUN_08000be8(4,outputByte,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000ef8": "process_configuration_flags_08000ef8",
                "bVar1": "inputByte1",
                "iVar2": "returnValue",
                "bVar3": "flagCheckResult",
                "bVar4": "outputByte"
            },
            "calling": [
                "FUN_080022f8"
            ],
            "called": [
                "FUN_08000be8",
                "FUN_080036ac",
                "FUN_08008a6c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001b48": {
            "entrypoint": "0x08001b48",
            "current_name": "initialize_gateway_08001b48",
            "code": "\nvoid initializeGateway_08001b48(void)\n\n{\n  FUN_08002e44(&DAT_200003d4,\"/home/bo/p2im/p2im-real_firmware_scratch/Gateway/StandardFirmata.ino\",\n               2,5);\n  FUN_08002f2c(&DAT_200003d4,0xe0,0x8000215);\n  FUN_08002f2c(&DAT_200003d4,0x90,&path);\n  FUN_08002f2c(&DAT_200003d4,0xc0,0x8000489);\n  FUN_08002f2c(&DAT_200003d4,0xd0,&settings);\n  FUN_08002f2c(&DAT_200003d4,0xf4,0x80005f9);\n  FUN_08002f2c(&DAT_200003d4,0xf5,&flags);\n  FUN_08002f94(&DAT_200003d4,0xf0,0x8001cd1);\n  FUN_08002f84(&DAT_200003d4,0xff,0x8000aed);\n  FUN_08003048(&DAT_200003d4,0xe100);\n  FUN_08000aec();\n  FUN_0800018c(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001b48": "initialize_gateway_08001b48",
                "LAB_080002ec_1": "path",
                "LAB_08000c18_1": "settings",
                "LAB_080001a8_1": "flags"
            },
            "calling": [
                "FUN_08008f1c"
            ],
            "called": [
                "FUN_08002f84",
                "FUN_08000aec",
                "FUN_08003048",
                "FUN_08002f94",
                "FUN_08002f2c",
                "FUN_08002e44",
                "FUN_0800018c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001bf8": {
            "entrypoint": "0x08001bf8",
            "current_name": "initialize_data_08001bf8",
            "code": "\nvoid initializeData_08001bf8(undefined4 dataPointer,undefined4 unusedParam,undefined4 inputParam1,undefined4 inputParam2)\n\n{\n  FUN_0800288c(&DAT_20000314,dataPointer,inputParam1,inputParam2,inputParam2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001bf8": "initialize_data_08001bf8",
                "param_1": "dataPointer",
                "param_2": "unusedParam",
                "param_3": "inputParam1",
                "param_4": "inputParam2"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_08001c18"
            ],
            "called": [
                "FUN_0800288c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c08": {
            "entrypoint": "0x08001c08",
            "current_name": "initialize_data_08001c08",
            "code": "\nundefined initializeData_08001c08(void)\n\n{\n  undefined result;\n  \n  result = FUN_08002720(&DAT_20000314);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08001c08": "initialize_data_08001c08",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08001c18"
            ],
            "called": [
                "FUN_08002720"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c18": {
            "entrypoint": "0x08001c18",
            "current_name": "process_i2_c_data_08001c18",
            "code": "\nvoid processI2CData_08001c18(undefined4 deviceAddress,uint statusFlag,int numBytes,undefined4 configFlag)\n\n{\n  undefined receivedData;\n  int receivedBytes;\n  int i;\n  bool isDataReceived;\n  \n  if (statusFlag == 0xffffffff) {\n    statusFlag = 0;\n  }\n  else {\n    FUN_08002a30(&DAT_20000314,deviceAddress);\n    FUN_08001bf8(statusFlag & 0xff);\n    FUN_08002a58(&DAT_20000314,configFlag);\n  }\n  FUN_08002c14(&DAT_20000314,deviceAddress,numBytes);\n  receivedBytes = FUN_0800270c(&DAT_20000314);\n  if (numBytes < receivedBytes) {\n    FUN_08002f14(&DAT_200003d4,\"I2C: Too many bytes received\");\n  }\n  else {\n    receivedBytes = FUN_0800270c(&DAT_20000314);\n    if (receivedBytes < numBytes) {\n      FUN_08002f14(&DAT_200003d4,\"I2C: Too few bytes received\");\n    }\n  }\n  DAT_20000130 = (undefined)deviceAddress;\n  DAT_20000131 = (undefined)statusFlag;\n  receivedBytes = 0;\n  while( true ) {\n    if (receivedBytes < numBytes) {\n      i = FUN_0800270c(&DAT_20000314);\n      if (i == 0) {\n        isDataReceived = false;\n      }\n      else {\n        isDataReceived = true;\n      }\n    }\n    else {\n      isDataReceived = false;\n    }\n    if (!isDataReceived) break;\n    receivedData = FUN_08001c08();\n    (&DAT_20000132)[receivedBytes] = receivedData;\n    receivedBytes = receivedBytes + 1;\n  }\n  FUN_08002f0a(&DAT_200003d4,0x77,numBytes + 2U & 0xff,&DAT_20000130);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001c18": "process_i2_c_data_08001c18",
                "param_1": "deviceAddress",
                "param_2": "statusFlag",
                "param_3": "numBytes",
                "param_4": "configFlag",
                "uVar1": "receivedData",
                "iVar2": "receivedBytes",
                "iVar3": "i",
                "bVar4": "isDataReceived"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_080022f8"
            ],
            "called": [
                "FUN_08002f14",
                "FUN_08002f0a",
                "FUN_0800270c",
                "FUN_08002a58",
                "FUN_08001bf8",
                "FUN_08002c14",
                "FUN_08002a30",
                "FUN_08001c08"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001cd0": {
            "entrypoint": "0x08001cd0",
            "current_name": "process_command_08001cd0",
            "code": "\nvoid processCommand_08001cd0(undefined4 commandType,int length,byte *data,undefined4 param_4)\n\n{\n  byte byte1;\n  byte byte2;\n  byte byte3;\n  undefined4 result;\n  byte byte4;\n  char charVar;\n  int intVar1;\n  int intVar2;\n  uint uintVar1;\n  uint uintVar2;\n  int intVar3;\n  bool boolVar;\n  \n  switch(commandType) {\n  case 0x69:\n    FUN_08002f1e(&DAT_200003d4,0xf0);\n    FUN_08002f1e(&DAT_200003d4,0x6a);\n    for (uintVar1 = 0; uintVar1 < 0x3c; uintVar1 = uintVar1 + 1 & 0xff) {\n      uintVar2 = uintVar1 - 0x2e & 0xff;\n      if (uintVar2 < 0xe) {\n        if (uintVar1 < 0x3c) {\n          intVar1 = (int)(char)(&DAT_0800a908)[uintVar1];\n        }\n        else {\n          intVar1 = -1;\n        }\n        intVar1 = FUN_080036ac(intVar1);\n        if (intVar1 == 0) {\n          uintVar2 = 0x7f;\n        }\n        else {\n          if (uintVar1 < 0x3c) {\n            intVar1 = (int)(char)(&DAT_0800a908)[uintVar1];\n          }\n          else {\n            intVar1 = -1;\n          }\n          intVar1 = FUN_080036ac(intVar1);\n          if (intVar1 == 1) {\n            uintVar2 = 0x7f;\n          }\n        }\n      }\n      else {\n        uintVar2 = 0x7f;\n      }\n      FUN_08002f1e(&DAT_200003d4,uintVar2);\n    }\n    FUN_08002f1e(&DAT_200003d4,0xf7);\n    break;\n  case 0x6b:\n    FUN_08002f1e(&DAT_200003d4,0xf0);\n    FUN_08002f1e(&DAT_200003d4,0x6c);\n    for (uintVar1 = 0; uintVar1 < 0x3c; uintVar1 = uintVar1 + 1 & 0xff) {\n      if (uintVar1 < 0x3c) {\n        if ((&DAT_0800a908)[uintVar1] == -1) {\n          boolVar = false;\n        }\n        else {\n          intVar1 = FUN_080036ac();\n          if (intVar1 == 0) {\n            boolVar = false;\n          }\n          else {\n            intVar1 = FUN_080036ac((int)(char)(&DAT_0800a908)[uintVar1]);\n            if (intVar1 == 1) {\n              boolVar = false;\n            }\n            else {\n              boolVar = true;\n            }\n          }\n        }\n      }\n      else {\n        boolVar = false;\n      }\n      if (boolVar) {\n        FUN_08002f1e(&DAT_200003d4,0);\n        FUN_08002f1e(&DAT_200003d4,1);\n        FUN_08002f1e(&DAT_200003d4,0xb);\n        FUN_08002f1e(&DAT_200003d4,1);\n        FUN_08002f1e(&DAT_200003d4,1);\n        FUN_08002f1e(&DAT_200003d4,1);\n      }\n      if ((uintVar1 - 0x2e & 0xff) < 0xe) {\n        if (uintVar1 < 0x3c) {\n          intVar1 = (int)(char)(&DAT_0800a908)[uintVar1];\n        }\n        else {\n          intVar1 = -1;\n        }\n        intVar1 = FUN_080036ac(intVar1);\n        if (intVar1 == 0) {\n          boolVar = false;\n        }\n        else {\n          if (uintVar1 < 0x3c) {\n            intVar1 = (int)(char)(&DAT_0800a908)[uintVar1];\n          }\n          else {\n            intVar1 = -1;\n          }\n          intVar1 = FUN_080036ac(intVar1);\n          if (intVar1 == 1) {\n            boolVar = false;\n          }\n          else {\n            boolVar = true;\n          }\n        }\n      }\n      else {\n        boolVar = false;\n      }\n      if (boolVar) {\n        FUN_08002f1e(&DAT_200003d4,2);\n        FUN_08002f1e(&DAT_200003d4,10);\n      }\n      if (uintVar1 < 0x3c) {\n        if ((&DAT_0800a908)[uintVar1] == -1) {\n          intVar1 = 0;\n        }\n        else {\n          intVar1 = FUN_080036ac();\n          if (intVar1 == 0) {\n            intVar1 = 0;\n          }\n          else {\n            intVar1 = FUN_080036ac((int)(char)(&DAT_0800a908)[uintVar1]);\n            if (intVar1 == 1) {\n              intVar1 = 0;\n            }\n            else {\n              intVar1 = FUN_0800738a((int)(char)(&DAT_0800a908)[uintVar1],&DAT_0800a6cc);\n            }\n          }\n        }\n      }\n      else {\n        intVar1 = 0;\n      }\n      if (intVar1 != 0) {\n        FUN_08002f1e(&DAT_200003d4,3);\n        FUN_08002f1e(&DAT_200003d4,8);\n      }\n      if (uintVar1 < 0x3c) {\n        if ((&DAT_0800a908)[uintVar1] == -1) {\n          boolVar = false;\n        }\n        else {\n          intVar1 = FUN_080036ac();\n          if (intVar1 == 0) {\n            boolVar = false;\n          }\n          else {\n            intVar1 = FUN_080036ac((int)(char)(&DAT_0800a908)[uintVar1]);\n            if (intVar1 == 1) {\n              boolVar = false;\n            }\n            else {\n              boolVar = true;\n            }\n          }\n        }\n      }\n      else {\n        boolVar = false;\n      }\n      if (boolVar) {\n        FUN_08002f1e(&DAT_200003d4,4);\n        FUN_08002f1e(&DAT_200003d4,0xe);\n      }\n      if (uintVar1 < 0x3c) {\n        if ((&DAT_0800a908)[uintVar1] == -1) {\n          intVar1 = 0;\n        }\n        else {\n          intVar1 = FUN_080036ac();\n          if (intVar1 == 0) {\n            intVar1 = 0;\n          }\n          else {\n            intVar1 = FUN_080036ac((int)(char)(&DAT_0800a908)[uintVar1]);\n            if (intVar1 == 1) {\n              intVar1 = 0;\n            }\n            else {\n              intVar1 = FUN_0800738a((int)(char)(&DAT_0800a908)[uintVar1],&DAT_0800a69c);\n              if (intVar1 == 0) {\n                intVar1 = FUN_0800738a((int)(char)(&DAT_0800a908)[uintVar1],&DAT_0800a66c);\n              }\n            }\n          }\n        }\n      }\n      else {\n        intVar1 = 0;\n      }\n      if (intVar1 != 0) {\n        FUN_08002f1e(&DAT_200003d4,6);\n        FUN_08002f1e(&DAT_200003d4,1);\n      }\n      FUN_08002f1e(&DAT_200003d4,0x7f);\n    }\n    FUN_08002f1e(&DAT_200003d4,0xf7);\n    return;\n  case 0x6d:\n    if (length != 0) {\n      byte1 = *data;\n      FUN_08002f1e(&DAT_200003d4,0xf0);\n      FUN_08002f1e(&DAT_200003d4,0x6e);\n      FUN_08002f1e(&DAT_200003d4,byte1);\n      if (byte1 < 0x3c) {\n        result = FUN_08002fa0(&DAT_200003d4,byte1);\n        FUN_08002f1e(&DAT_200003d4,result);\n        uintVar1 = FUN_08002fba(&DAT_200003d4,byte1);\n        FUN_08002f1e(&DAT_200003d4,uintVar1 & 0x7f);\n        uintVar1 = FUN_08002fba(&DAT_200003d4,byte1);\n        if ((uintVar1 & 0xff80) != 0) {\n          intVar1 = FUN_08002fba(&DAT_200003d4,byte1);\n          FUN_08002f1e(&DAT_200003d4,(uint)(intVar1 << 0x12) >> 0x19);\n        }\n        uintVar1 = FUN_08002fba(&DAT_200003d4,byte1);\n        if ((uintVar1 & 0xc000) != 0) {\n          intVar1 = FUN_08002fba(&DAT_200003d4,byte1);\n          FUN_08002f1e(&DAT_200003d4,(uint)(intVar1 << 0xb) >> 0x19);\n        }\n      }\n      FUN_08002f1e(&DAT_200003d4,0xf7);\n      return;\n    }\n    break;\n  case 0x6f:\n    if (1 < length) {\n      uintVar1 = (uint)data[1];\n      if (2 < length) {\n        uintVar1 = uintVar1 | (uint)data[2] << 7;\n      }\n      if (3 < length) {\n        uintVar1 = uintVar1 | (uint)data[3] << 0xe;\n      }\n      FUN_08000214(*data,uintVar1);\n      return;\n    }\n    break;\n  case 0x70:\n    if (4 < length) {\n      uintVar1 = (uint)*data;\n      byte1 = data[1];\n      byte4 = data[2];\n      byte2 = data[3];\n      byte3 = data[4];\n      if (uintVar1 < 0x3c) {\n        if ((&DAT_0800a908)[uintVar1] == -1) {\n          boolVar = false;\n        }\n        else {\n          intVar1 = FUN_080036ac();\n          if (intVar1 == 0) {\n            boolVar = false;\n          }\n          else {\n            intVar1 = FUN_080036ac((int)(char)(&DAT_0800a908)[uintVar1]);\n            if (intVar1 == 1) {\n              boolVar = false;\n            }\n            else {\n              boolVar = true;\n            }\n          }\n        }\n      }\n      else {\n        boolVar = false;\n      }\n      if (boolVar) {\n        if ((byte)(&DAT_200001f0)[uintVar1] < 0xc) {\n          intVar1 = FUN_080026f8(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[uintVar1] * 3);\n        }\n        else {\n          intVar1 = 0;\n        }\n        if (intVar1 != 0) {\n          FUN_08000588(uintVar1);\n        }\n        FUN_08000500(uintVar1,(uint)byte1 + (uint)byte4 * 0x80,(uint)byte2 + (uint)byte3 * 0x80);\n        FUN_080005f8(uintVar1,4);\n        return;\n      }\n    }\n    break;\n  case 0x76:\n    byte1 = data[1];\n    byte4 = byte1 & 0x18;\n    if ((byte1 & 0x20) != 0) {\n      FUN_08002f14(&DAT_200003d4,\"10-bit addressing not supported\",byte4,byte1,param_4);\n      return;\n    }\n    byte2 = *data;\n    boolVar = (byte1 & 0x40) == 0;\n    if (byte4 < 0x19) {\n      switch(byte4) {\n      case 0:\n        FUN_08002a30(&DAT_20000314,byte2);\n        for (uintVar1 = 2; (int)uintVar1 < length; uintVar1 = uintVar1 + 2 & 0xff) {\n          FUN_08001bf8(data[uintVar1 + 1] * -0x80 + data[uintVar1]);\n        }\n        FUN_08002ac0(&DAT_20000314);\n        return;\n      case 8:\n        if (length == 6) {\n          intVar1 = (uint)data[2] + (uint)data[3] * 0x80;\n          charVar = data[4] + data[5] * -0x80;\n        }\n        else {\n          charVar = data[2] + data[3] * -0x80;\n          intVar1 = -1;\n        }\n        FUN_08001c18(byte2,intVar1,charVar);\n        return;\n      case 0x10:\n        if (DAT_20000004 + 1 < 8) {\n          if (length == 6) {\n            intVar1 = (uint)data[2] + (uint)data[3] * 0x80;\n            charVar = data[4] + data[5] * -0x80;\n          }\n          else {\n            charVar = data[2] + data[3] * -0x80;\n            intVar1 = -1;\n          }\n          DAT_20000004 = DAT_20000004 + '\\x01';\n          intVar2 = (int)DAT_20000004;\n          intVar3 = intVar2 * 0xc;\n          (&DAT_20000188)[intVar3] = byte2;\n          (&DAT_2000018c)[intVar2 * 3] = intVar1;\n          (&DAT_20000190)[intVar3] = charVar;\n          (&DAT_20000191)[intVar3] = boolVar;\n          return;\n        }\n        FUN_08002f14(&DAT_200003d4,\"too many queries\",(int)DAT_20000004,boolVar,param_4);\n        return;\n      case 0x18:\n        if (DAT_20000004 < 1) {\n          DAT_20000004 = 0xff;\n          return;\n        }\n      }\n      for (uintVar1 = 0; intVar1 = DAT_20000004 + 1, (int)uintVar1 < intVar1; uintVar1 = uintVar1 + 1 & 0xff) {\n        if (byte2 == (&DAT_20000188)[uintVar1 * 0xc]) goto LAB_08001e66;\n      }\n      uintVar1 = 0;\nLAB_08001e66:\n      for (; (int)uintVar1 < intVar1; uintVar1 = uintVar1 + 1 & 0xff) {\n        if (uintVar1 < 8) {\n          intVar2 = (uintVar1 + 1) * 0xc;\n          intVar3 = uintVar1 * 0xc;\n          (&DAT_20000188)[intVar3] = (&DAT_20000188)[intVar2];\n          (&DAT_2000018c)[uintVar1 * 3] = (&DAT_2000018c)[(uintVar1 + 1) * 3];\n          (&DAT_20000190)[intVar3] = (&DAT_20000190)[intVar2];\n          (&DAT_20000191)[intVar3] = (&DAT_20000191)[intVar2];\n        }\n      }\n      DAT_20000004 = DAT_20000004 + -1;\n      return;\n    }\n    break;\n  case 0x78:\n    intVar1 = (uint)*data + (uint)data[1] * 0x80;\n    if ((1 < length) && (intVar1 != 0)) {\n      DAT_2000012c = intVar1;\n    }\n    if (DAT_20000170 == '\\0') {\n      FUN_08000a64();\n      return;\n    }\n    break;\n  case 0x7a:\n    if ((1 < length) &&\n       (DAT_20000008 = (uint)*data + (uint)data[1] * 0x80, DAT_20000008 == 0)) {\n      DAT_20000008 = 1;\n      return;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001cd0": "process_command_08001cd0",
                "param_1": "commandType",
                "param_2": "length",
                "param_3": "data",
                "bVar1": "byte1",
                "bVar2": "byte2",
                "bVar3": "byte3",
                "uVar4": "result",
                "bVar5": "byte4",
                "cVar6": "charVar",
                "iVar7": "intVar1",
                "iVar8": "intVar2",
                "uVar9": "uintVar1",
                "uVar10": "uintVar2",
                "iVar11": "intVar3",
                "bVar12": "boolVar"
            },
            "calling": [],
            "called": [
                "FUN_08002f1e",
                "FUN_08002f14",
                "FUN_080036ac",
                "FUN_08001bf8",
                "FUN_0800738a",
                "FUN_08002ac0",
                "FUN_08001c18",
                "FUN_08002fba",
                "FUN_08002a30",
                "FUN_080005f8",
                "FUN_08000588",
                "FUN_08002fa0",
                "FUN_08000a64",
                "FUN_08000500",
                "FUN_08000214",
                "FUN_080026f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080022f8": {
            "entrypoint": "0x080022f8",
            "current_name": "process_data_080022f8",
            "code": "\nvoid processData_080022f8(void)\n\n{\n  bool bVar1;\n  int result;\n  undefined4 value;\n  uint outerLoopIndex;\n  uint innerLoopIndex;\n  \n  FUN_08000ef8();\n  while (result = FUN_08002ec4(&DAT_200003d4), result != 0) {\n    FUN_08002ed2(&DAT_200003d4);\n  }\n  DAT_20000118 = FUN_08008abc();\n  if (DAT_20000008 < (uint)(DAT_20000118 - DAT_2000017c)) {\n    DAT_2000017c = DAT_2000017c + DAT_20000008;\n    for (outerLoopIndex = 0; outerLoopIndex < 0x3c; outerLoopIndex = outerLoopIndex + 1 & 0xff) {\n      innerLoopIndex = outerLoopIndex - 0x2e & 0xff;\n      if (innerLoopIndex < 0xe) {\n        if (outerLoopIndex < 0x3c) {\n          result = (int)(char)(&DAT_0800a908)[outerLoopIndex];\n        }\n        else {\n          result = -1;\n        }\n        result = FUN_080036ac(result);\n        if (result == 0) {\n          bVar1 = false;\n        }\n        else {\n          if (outerLoopIndex < 0x3c) {\n            result = (int)(char)(&DAT_0800a908)[outerLoopIndex];\n          }\n          else {\n            result = -1;\n          }\n          result = FUN_080036ac(result);\n          if (result == 1) {\n            bVar1 = false;\n          }\n          else {\n            result = FUN_08002fa0(&DAT_200003d4,outerLoopIndex);\n            if (result == 2) {\n              bVar1 = true;\n            }\n            else {\n              bVar1 = false;\n            }\n          }\n        }\n      }\n      else {\n        bVar1 = false;\n      }\n      if ((bVar1) && ((DAT_20000114 >> innerLoopIndex & 1U) != 0)) {\n        value = FUN_08008880(innerLoopIndex);\n        FUN_08002ef2(&DAT_200003d4,innerLoopIndex,value);\n      }\n    }\n    if (-1 < DAT_20000004) {\n      for (outerLoopIndex = 0; (int)outerLoopIndex < DAT_20000004 + 1; outerLoopIndex = outerLoopIndex + 1 & 0xff) {\n        result = outerLoopIndex * 0xc;\n        FUN_08001c18((&DAT_20000188)[result],(&DAT_2000018c)[outerLoopIndex * 3],(&DAT_20000190)[result],\n                     (&DAT_20000191)[result]);\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080022f8": "process_data_080022f8",
                "iVar2": "result",
                "uVar3": "value",
                "uVar4": "outerLoopIndex",
                "uVar5": "innerLoopIndex"
            },
            "calling": [
                "FUN_08008f1c"
            ],
            "called": [
                "FUN_08002ed2",
                "FUN_08008abc",
                "FUN_08002fa0",
                "FUN_08008880",
                "FUN_080036ac",
                "FUN_08002ef2",
                "FUN_08001c18",
                "FUN_08002ec4",
                "FUN_08000ef8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002400": {
            "entrypoint": "0x08002400",
            "current_name": "check_bit_08002400",
            "code": "\nundefined4 check_bit_08002400(int input_value)\n\n{\n  uint count;\n  \n  count = 0;\n  while( true ) {\n    if (0xb < count) {\n      return 0;\n    }\n    if (((&DAT_20000258)[(input_value * 0xc + count) * 8] & 0x40) != 0) break;\n    count = count + 1 & 0xff;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08002400": "check_bit_08002400",
                "param_1": "input_value",
                "uVar1": "count"
            },
            "calling": [
                "FUN_08002644",
                "FUN_080025ac"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800242c": {
            "entrypoint": "0x0800242c",
            "current_name": "initialize_connection_0800242c",
            "code": "\nvoid initializeConnection_0800242c(undefined4 socket,undefined4 timeout,undefined4 bufferSize,undefined4 callback)\n\n{\n  FUN_08007648(socket,60000,0x5dc,&responseBuffer,callback);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800242c": "initialize_connection_0800242c",
                "param_1": "socket",
                "param_2": "timeout",
                "param_3": "bufferSize",
                "param_4": "callback",
                "LAB_08002444_1": "responseBuffer"
            },
            "calling": [
                "FUN_080025ac"
            ],
            "called": [
                "FUN_08007648"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002578": {
            "entrypoint": "0x08002578",
            "current_name": "initialize_system_08002578",
            "code": "\nvoid initializeSystem_08002578(void)\n\n{\n  FUN_080076e0();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002578": "initialize_system_08002578"
            },
            "calling": [
                "FUN_08002644"
            ],
            "called": [
                "FUN_080076e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002580": {
            "entrypoint": "0x08002580",
            "current_name": "set_default_value_08002580",
            "code": "\nvoid setDefaultValue_08002580(byte *result)\n\n{\n  char nextValue;\n  uint counter;\n  \n  counter = (uint)DAT_20000250;\n  if (0xb < counter) {\n    *result = 0xff;\n    return;\n  }\n  nextValue = DAT_20000250 + 1;\n  *result = DAT_20000250;\n  DAT_20000250 = nextValue;\n  *(undefined4 *)(&DAT_2000025c + counter * 8) = 0x5dc;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002580": "set_default_value_08002580",
                "param_1": "result",
                "cVar1": "nextValue",
                "uVar2": "counter"
            },
            "calling": [
                "FUN_080004d4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080025ac": {
            "entrypoint": "0x080025ac",
            "current_name": "process_data_080025ac",
            "code": "\nbyte processData_080025ac(byte *data,uint value,int offset1,int offset2)\n\n{\n  uint result1;\n  uint result2;\n  uint result3;\n  int tempOffset;\n  \n  if (*data < 0xc) {\n    FUN_08008990(value,1,offset1,*data,offset2);\n    result2 = (uint)*data;\n    result1 = (byte)(&DAT_20000258)[result2 * 8] & 0xffffffc0 | value & 0x3f;\n    (&DAT_20000258)[result2 * 8] = (char)result1;\n    tempOffset = -offset1 + 0x220;\n    if (tempOffset < 0) {\n      tempOffset = -offset1 + 0x223;\n    }\n    data[1] = (byte)((uint)(tempOffset << 0x16) >> 0x18);\n    tempOffset = -offset2 + 0x960;\n    if (tempOffset < 0) {\n      tempOffset = -offset2 + 0x963;\n    }\n    data[2] = (byte)((uint)(tempOffset << 0x16) >> 0x18);\n    result3 = *data / 0xc;\n    tempOffset = FUN_08002400(result3,result1,result2,(uint)*data * -0x55555555);\n    if (tempOffset == 0) {\n      DAT_200002fc = (undefined)result3;\n      FUN_0800242c();\n    }\n    (&DAT_20000258)[(uint)*data * 8] = (&DAT_20000258)[(uint)*data * 8] | 0x40;\n  }\n  return *data;\n}\n\n",
            "renaming": {
                "FUN_080025ac": "process_data_080025ac",
                "param_1": "data",
                "param_2": "value",
                "param_3": "offset1",
                "param_4": "offset2",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "result3",
                "iVar4": "tempOffset"
            },
            "calling": [
                "FUN_08002634",
                "FUN_08000500"
            ],
            "called": [
                "FUN_08008990",
                "FUN_0800242c",
                "FUN_08002400"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002634": {
            "entrypoint": "0x08002634",
            "current_name": "initialize_graphics_08002634",
            "code": "\nvoid initializeGraphics_08002634(undefined4 windowHandle,undefined4 deviceContext,undefined4 width,undefined4 height)\n\n{\n  FUN_080025ac(windowHandle,deviceContext,0x220,0x960,height);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002634": "initialize_graphics_08002634",
                "param_1": "windowHandle",
                "param_2": "deviceContext",
                "param_3": "width",
                "param_4": "height"
            },
            "calling": [
                "FUN_08000500"
            ],
            "called": [
                "FUN_080025ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002644": {
            "entrypoint": "0x08002644",
            "current_name": "update_and_call_function_08002644",
            "code": "\nvoid updateAndCallFunction_08002644(byte *data,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  byte oldValue;\n  uint index;\n  int result;\n  \n  index = (uint)*data;\n  oldValue = (&DAT_20000258)[index * 8];\n  (&DAT_20000258)[index * 8] = oldValue & 0xbf;\n  result = FUN_08002400(index / 0xc,param2,oldValue & 0xbf,index * -0x55555555,param4);\n  if (result == 0) {\n    FUN_08002578(&DAT_200002b8);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002644": "update_and_call_function_08002644",
                "param_1": "data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "bVar1": "oldValue",
                "uVar2": "index",
                "iVar3": "result"
            },
            "calling": [
                "FUN_08000588"
            ],
            "called": [
                "FUN_08002400",
                "FUN_08002578"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800267c": {
            "entrypoint": "0x0800267c",
            "current_name": "update_data_value_0800267c",
            "code": "\nvoid updateDataValue_0800267c(byte *data,int value)\n\n{\n  int temp1;\n  \n  if (*data < 0xc) {\n    temp1 = (0x88 - (char)data[1]) * 4;\n    if ((temp1 - value == 0 || temp1 < value) &&\n       (temp1 = (600 - (char)data[2]) * 4,\n       value == temp1 || value + (600 - (char)data[2]) * -4 < 0 != SBORROW4(value,temp1)))\n    {\n      temp1 = value;\n    }\n    *(int *)(&DAT_2000025c + (uint)*data * 8) = temp1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800267c": "update_data_value_0800267c",
                "param_1": "data",
                "param_2": "value",
                "iVar1": "temp1"
            },
            "calling": [
                "FUN_080026b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080026b0": {
            "entrypoint": "0x080026b0",
            "current_name": "adjust_param_080026b0",
            "code": "\nvoid adjustParam_080026b0(int input1,int input2)\n\n{\n  if (input2 < 0x220) {\n    if (input2 < 0) {\n      input2 = 0;\n    }\n    else if (0xb4 < input2) {\n      input2 = 0xb4;\n    }\n    input2 = FUN_08008ef4(input2,0,0xb4,(0x88 - *(char *)(input1 + 1)) * 4,\n                           (600 - *(char *)(input1 + 2)) * 4);\n  }\n  FUN_0800267c(input1,input2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080026b0": "adjust_param_080026b0",
                "param_1": "input1",
                "param_2": "input2"
            },
            "calling": [
                "FUN_0800021a"
            ],
            "called": [
                "FUN_08008ef4",
                "FUN_0800267c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080026f8": {
            "entrypoint": "0x080026f8",
            "current_name": "get_bit_from_data_080026f8",
            "code": "\nuint getBitFromData_080026f8(byte *data)\n\n{\n  return ((uint)(byte)(&DAT_20000258)[(uint)*data * 8] << 0x19) >> 0x1f;\n}\n\n",
            "renaming": {
                "FUN_080026f8": "get_bit_from_data_080026f8",
                "param_1": "data"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800270c": {
            "entrypoint": "0x0800270c",
            "current_name": "calculate_difference_0800270c",
            "code": "\nint calculate_difference_0800270c(void)\n\n{\n  return (uint)DAT_200003b7 - (uint)DAT_200003b5;\n}\n\n",
            "renaming": {
                "FUN_0800270c": "calculate_difference_0800270c"
            },
            "calling": [
                "FUN_08001c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002720": {
            "entrypoint": "0x08002720",
            "current_name": "read_next_byte_08002720",
            "code": "\nuint read_next_byte_08002720(void)\n\n{\n  uint index;\n  \n  index = (uint)DAT_200003b5;\n  if (index < DAT_200003b7) {\n    DAT_200003b5 = DAT_200003b5 + 1;\n    return (uint)*(byte *)(DAT_200003c8 + index);\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08002720": "read_next_byte_08002720",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08001c08"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080027f0": {
            "entrypoint": "0x080027f0",
            "current_name": "process_data_080027f0",
            "code": "\nuint process_data_080027f0(int input_offset,undefined4 data,uint value)\n\n{\n  int result;\n  uint new_value;\n  \n  if (DAT_200003b4 == '\\0') {\n    result = FUN_08007ede(input_offset + 0x14,data,value & 0xffff);\n    if (result == 0) {\n      return value;\n    }\n    return 0;\n  }\n  new_value = DAT_200003b8 + value;\n  if (DAT_200003c5 < new_value) {\n    if (new_value < 0x20) {\n      new_value = 0x20;\n    }\n    DAT_200003cc = FUN_08009908(DAT_200003cc,new_value);\n    if (DAT_200003cc == 0) {\n      DAT_200003c5 = 0;\n    }\n    else {\n      DAT_200003c5 = (byte)new_value;\n    }\n  }\n  if (DAT_200003cc == 0) {\n    *(undefined4 *)(input_offset + 4) = 1;\n    return 0;\n  }\n  FUN_080091b0((uint)DAT_200003b6 + DAT_200003cc,data,value);\n  DAT_200003b6 = DAT_200003b6 + (char)value;\n  DAT_200003b8 = DAT_200003b6;\n  return value;\n}\n\n",
            "renaming": {
                "FUN_080027f0": "process_data_080027f0",
                "param_1": "input_offset",
                "param_2": "data",
                "param_3": "value",
                "iVar1": "result",
                "uVar2": "new_value"
            },
            "calling": [],
            "called": [
                "FUN_080091b0",
                "FUN_08009908",
                "FUN_08007ede"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800288c": {
            "entrypoint": "0x0800288c",
            "current_name": "process_data_0800288c",
            "code": "\nundefined4 processData_0800288c(int dataAddress,undefined data)\n\n{\n  undefined4 result;\n  int status;\n  uint newSize;\n  undefined newData;\n  \n  newData = data;\n  if (DAT_200003b4 == '\\0') {\n    status = FUN_08007ede(dataAddress + 0x14,&newData,1);\n    if (status == 0) {\n      result = 1;\n    }\n    else {\n      result = 0;\n    }\n  }\n  else {\n    newSize = DAT_200003b8 + 1;\n    if (DAT_200003c5 < newSize) {\n      if (newSize < 0x20) {\n        newSize = 0x20;\n      }\n      DAT_200003cc = FUN_08009908(DAT_200003cc,newSize);\n      if (DAT_200003cc == 0) {\n        DAT_200003c5 = 0;\n      }\n      else {\n        DAT_200003c5 = (byte)newSize;\n      }\n    }\n    if (DAT_200003cc == 0) {\n      *(undefined4 *)(dataAddress + 4) = 1;\n      result = 0;\n    }\n    else {\n      *(undefined *)(DAT_200003cc + (uint)DAT_200003b6) = newData;\n      DAT_200003b6 = DAT_200003b6 + 1;\n      result = 1;\n      DAT_200003b8 = DAT_200003b6;\n    }\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_0800288c": "process_data_0800288c",
                "param_1": "dataAddress",
                "param_2": "data",
                "uVar1": "result",
                "iVar2": "status",
                "uVar3": "newSize",
                "local_11": "newData"
            },
            "calling": [
                "FUN_08001bf8"
            ],
            "called": [
                "FUN_08009908",
                "FUN_08007ede"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800291c": {
            "entrypoint": "0x0800291c",
            "current_name": "initialize_param_0800291c",
            "code": "\nvoid initializeParam_0800291c(undefined4 *paramArray)\n\n{\n  paramArray[1] = 0;\n  paramArray[2] = 1000;\n  *paramArray = &PTR_FUN_0800288c_1_0800a5a0;\n  *(undefined *)(paramArray + 0x1b) = 0x19;\n  *(undefined *)((int)paramArray + 0x6d) = 0x18;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800291c": "initialize_param_0800291c",
                "param_1": "paramArray"
            },
            "calling": [
                "FUN_08002948"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002948": {
            "entrypoint": "0x08002948",
            "current_name": "check_param_and_call_func_08002948",
            "code": "\nvoid checkParamAndCallFunc_08002948(int param1,int param2)\n\n{\n  if (param1 != 1) {\n    return;\n  }\n  if (param2 == 0xffff) {\n    FUN_0800291c(&DAT_20000314);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002948": "check_param_and_call_func_08002948",
                "param_1": "param1",
                "param_2": "param2"
            },
            "calling": [
                "FUN_08002c1e"
            ],
            "called": [
                "FUN_0800291c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002968": {
            "entrypoint": "0x08002968",
            "current_name": "initialize_parameters_08002968",
            "code": "\nvoid initializeParameters_08002968(int param1,uint param2)\n\n{\n  int shiftedParam;\n  int outputAddress;\n  \n  DAT_200003b5 = 0;\n  DAT_200003b7 = 0;\n  if (DAT_200003c8 != 0) {\n    FUN_080091c6(DAT_200003c8,0,DAT_200003c4);\n  }\n  DAT_200003b6 = 0;\n  DAT_200003b8 = 0;\n  if (DAT_200003cc != 0) {\n    FUN_080091c6(DAT_200003cc,0,DAT_200003c5);\n  }\n  DAT_200003b4 = 0;\n  shiftedParam = (param2 & 0x7f) << 1;\n  *(char *)(param1 + 0x10) = (char)shiftedParam;\n  if (param2 == 0x33) {\n    *(undefined *)(param1 + 0x11) = 1;\n  }\n  else {\n    *(undefined *)(param1 + 0x11) = 0;\n  }\n  outputAddress = param1 + 0x14;\n  FUN_080077b0(outputAddress,100000,0x4000,shiftedParam,*(undefined *)(param1 + 0x11));\n  if (*(char *)(param1 + 0x11) == '\\0') {\n    FUN_08007f8e(outputAddress,&LAB_08002774_1);\n    FUN_08007f7c(outputAddress,&LAB_08002b00_1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002968": "initialize_parameters_08002968",
                "param_1": "param1",
                "param_2": "param2",
                "iVar1": "shiftedParam",
                "iVar2": "outputAddress"
            },
            "calling": [
                "FUN_08002a1c"
            ],
            "called": [
                "FUN_080077b0",
                "FUN_08007f8e",
                "FUN_080091c6",
                "FUN_08007f7c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a1c": {
            "entrypoint": "0x08002a1c",
            "current_name": "execute_function_08002a1c",
            "code": "\nvoid execute_function_08002a1c(undefined4 arg_1,undefined arg_2,undefined4 arg_3,undefined4 arg_4)\n\n{\n  FUN_08002968(arg_1,arg_2,arg_3,arg_4,arg_4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002a1c": "execute_function_08002a1c",
                "param_1": "arg_1",
                "param_2": "arg_2",
                "param_3": "arg_3",
                "param_4": "arg_4"
            },
            "calling": [
                "FUN_08002a26"
            ],
            "called": [
                "FUN_08002968"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a26": {
            "entrypoint": "0x08002a26",
            "current_name": "initiate_process_08002a26",
            "code": "\nvoid initiateProcess_08002a26(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  FUN_08002a1c(input1,0x33,input3,input4,input4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002a26": "initiate_process_08002a26",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4"
            },
            "calling": [
                "FUN_08000a64"
            ],
            "called": [
                "FUN_08002a1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a30": {
            "entrypoint": "0x08002a30",
            "current_name": "initialize_data_08002a30",
            "code": "\nvoid initializeData_08002a30(undefined4 param,int intValue)\n\n{\n  DAT_200003b4 = 1;\n  DAT_200003d0 = (char)(intValue << 1);\n  DAT_200003b6 = 0;\n  DAT_200003b8 = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002a30": "initialize_data_08002a30",
                "param_1": "param",
                "param_2": "intValue"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_08002b68",
                "FUN_08001c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a58": {
            "entrypoint": "0x08002a58",
            "current_name": "check_status_08002a58",
            "code": "\nundefined4 checkStatus_08002a58(int input)\n\n{\n  int result;\n  undefined4 status;\n  \n  if (*(char *)(input + 0x11) == '\\0') {\n    status = 4;\n  }\n  else {\n    result = FUN_08007e74(input + 0x14,DAT_200003d0,DAT_200003cc,DAT_200003b8);\n    if (result == 0) {\n      status = 0;\n    }\n    else if (result == 1) {\n      status = 1;\n    }\n    else {\n      status = 4;\n    }\n    if (DAT_200003cc != 0) {\n      FUN_080091c6(DAT_200003cc,0,DAT_200003c5);\n    }\n    DAT_200003b6 = 0;\n    DAT_200003b8 = 0;\n    DAT_200003b4 = 0;\n  }\n  return status;\n}\n\n",
            "renaming": {
                "FUN_08002a58": "check_status_08002a58",
                "param_1": "input",
                "iVar1": "result",
                "uVar2": "status"
            },
            "calling": [
                "FUN_08002b68",
                "FUN_08002ac0",
                "FUN_08001c18"
            ],
            "called": [
                "FUN_080091c6",
                "FUN_08007e74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ac0": {
            "entrypoint": "0x08002ac0",
            "current_name": "initialize_function_08002ac0",
            "code": "\nvoid initializeFunction_08002ac0(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  FUN_08002a58(input1,1,input3,input4,input4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ac0": "initialize_function_08002ac0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [
                "FUN_08002a58"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002acc": {
            "entrypoint": "0x08002acc",
            "current_name": "update_data_08002acc",
            "code": "\nvoid updateData_08002acc(uint dataSize,undefined4 var2,undefined4 var3,undefined4 var4)\n\n{\n  if (DAT_200003c4 < dataSize) {\n    if (dataSize < 0x20) {\n      dataSize = 0x20;\n    }\n    DAT_200003c8 = FUN_08009908(DAT_200003c8,dataSize,var3,(uint)DAT_200003c4,var4);\n    if (DAT_200003c8 == 0) {\n      DAT_200003c4 = 0;\n    }\n    else {\n      DAT_200003c4 = (byte)dataSize;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002acc": "update_data_08002acc",
                "param_1": "dataSize",
                "param_2": "var2",
                "param_3": "var3",
                "param_4": "var4"
            },
            "calling": [
                "FUN_08002b68"
            ],
            "called": [
                "FUN_08009908"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002b68": {
            "entrypoint": "0x08002b68",
            "current_name": "execute_function_08002b68",
            "code": "\nundefined4\nexecute_function_08002b68(undefined4 *array,uint size,undefined4 data,uint value,byte flag)\n\n{\n  int result;\n  uint flag_value;\n  uint value_copy;\n  \n  flag_value = (uint)flag;\n  if (*(char *)((int)array + 0x11) == '\\0') {\n    return 0;\n  }\n  value_copy = value;\n  FUN_08002acc(data);\n  if (DAT_200003c8 != 0) {\n    if (flag_value != 0) {\n      FUN_08002a30(array,size);\n      if (3 < flag_value) {\n        flag_value = 3;\n      }\n      while( true ) {\n        if (flag_value == 0) break;\n        (**(code **)*array)(array,value >> ((flag_value - 1 & 0x1f) << 3) & 0xff);\n        flag_value = flag_value - 1 & 0xff;\n      }\n      FUN_08002a58(array,0);\n    }\n    result = FUN_08007f0e(array + 5,(size & 0x7f) << 1,DAT_200003c8,data,value_copy);\n    if (result != 0) {\n      data = 0;\n    }\n    DAT_200003b5 = 0;\n    DAT_200003b7 = (char)data;\n    return data;\n  }\n  array[1] = 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002b68": "execute_function_08002b68",
                "param_1": "array",
                "param_2": "size",
                "param_3": "data",
                "param_4": "value",
                "param_5": "flag",
                "uVar2": "flag_value",
                "uVar3": "value_copy",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08002c00"
            ],
            "called": [
                "FUN_08007f0e",
                "FUN_08002a58",
                "FUN_08002acc",
                "FUN_08002a30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c00": {
            "entrypoint": "0x08002c00",
            "current_name": "initialize_machinery_08002c00",
            "code": "\nvoid initialize_machinery_08002c00(void)\n\n{\n  FUN_08002b68();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c00": "initialize_machinery_08002c00"
            },
            "calling": [
                "FUN_08002c14"
            ],
            "called": [
                "FUN_08002b68"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c14": {
            "entrypoint": "0x08002c14",
            "current_name": "initialize_08002c14",
            "code": "\nvoid initialize_08002c14(void)\n\n{\n  FUN_08002c00();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c14": "initialize_08002c14"
            },
            "calling": [
                "FUN_08001c18"
            ],
            "called": [
                "FUN_08002c00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c1e": {
            "entrypoint": "0x08002c1e",
            "current_name": "execute_function_08002c1e",
            "code": "\nvoid execute_function_08002c1e(undefined4 argument_1,undefined4 argument_2,undefined4 argument_3,undefined4 argument_4)\n\n{\n  FUN_08002948(1,0xffff,argument_3,argument_4,argument_4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c1e": "execute_function_08002c1e",
                "param_1": "argument_1",
                "param_2": "argument_2",
                "param_3": "argument_3",
                "param_4": "argument_4"
            },
            "calling": [],
            "called": [
                "FUN_08002948"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c2c": {
            "entrypoint": "0x08002c2c",
            "current_name": "process_callback_08002c2c",
            "code": "\nvoid processCallback_08002c2c(undefined4 callbackParam1,undefined4 callbackParam2,undefined4 callbackParam3,undefined4 callbackParam4)\n\n{\n  if (DAT_200005d4 != (code *)0x0) {\n    (*DAT_200005d4)(callbackParam2,callbackParam3,callbackParam3,DAT_200005d4,callbackParam4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c2c": "process_callback_08002c2c",
                "param_1": "callbackParam1",
                "param_2": "callbackParam2",
                "param_3": "callbackParam3",
                "param_4": "callbackParam4"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ce0": {
            "entrypoint": "0x08002ce0",
            "current_name": "initialize_memory_08002ce0",
            "code": "\nint initializeMemory_08002ce0(int baseAddress)\n\n{\n  int offset;\n  \n  FUN_0800314e(baseAddress + 0x40);\n  offset = baseAddress + 0x44;\n  FUN_080032bc(offset,baseAddress,0x40);\n  *(undefined *)(baseAddress + 0xc4) = 0;\n  *(undefined4 *)(baseAddress + 200) = 0;\n  *(undefined *)(baseAddress + 0x1f8) = 0;\n  FUN_08003306(offset,0xe0,FUN_08002c2c + 1,0);\n  FUN_08003306(offset,0x90,&LAB_08002c40_1,0);\n  FUN_08003306(offset,0xc0,&LAB_08002c7c_1,0);\n  FUN_08003306(offset,0xd0,&LAB_08002c90_1,0);\n  FUN_08003306(offset,0xf4,&LAB_08002c54_1,0);\n  FUN_08003306(offset,0xf5,&LAB_08002c68_1,0);\n  FUN_08003366(offset,0x71,&LAB_08002ca4_1,0);\n  FUN_08003370(offset,0xf0,&LAB_08002cb8_1,0);\n  FUN_08003346(offset,0x79,&LAB_08002e1a_1,baseAddress);\n  FUN_08003350(offset,0xf9,&LAB_08002dea_1,baseAddress);\n  FUN_08003350(offset,0xff,&LAB_08002cd0_1,0);\n  return baseAddress;\n}\n\n",
            "renaming": {
                "FUN_08002ce0": "initialize_memory_08002ce0",
                "param_1": "baseAddress",
                "iVar1": "offset"
            },
            "calling": [
                "FUN_08002dbc"
            ],
            "called": [
                "FUN_08003350",
                "FUN_08003366",
                "FUN_08003306",
                "FUN_0800314e",
                "FUN_080032bc",
                "FUN_08003346",
                "FUN_08003370"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002dbc": {
            "entrypoint": "0x08002dbc",
            "current_name": "check_parameters_08002dbc",
            "code": "\nvoid checkParameters_08002dbc(int status,int value)\n\n{\n  if (status != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    FUN_08002ce0(&DAT_200003d4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002dbc": "check_parameters_08002dbc",
                "param_1": "status",
                "param_2": "value"
            },
            "calling": [],
            "called": [
                "FUN_08002ce0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ddc": {
            "entrypoint": "0x08002ddc",
            "current_name": "initialize_device_08002ddc",
            "code": "\nvoid initializeDevice_08002ddc(int deviceAddress,undefined4 param1,undefined4 param2,undefined4 param3)\n\n{\n  FUN_0800322c(deviceAddress + 0x40,2,5,param3,param3);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ddc": "initialize_device_08002ddc",
                "param_1": "deviceAddress",
                "param_2": "param1",
                "param_3": "param2",
                "param_4": "param3"
            },
            "calling": [
                "FUN_08002e26"
            ],
            "called": [
                "FUN_0800322c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002df6": {
            "entrypoint": "0x08002df6",
            "current_name": "process_data_08002df6",
            "code": "\nvoid processData_08002df6(int inputData)\n\n{\n  undefined *dataPointer;\n  \n  if (*(byte *)(inputData + 0xc4) == 0) {\n    return;\n  }\n  dataPointer = *(undefined **)(inputData + 200);\n  FUN_080031ce(inputData + 0x40,*dataPointer,dataPointer[1],*(byte *)(inputData + 0xc4) - 2,dataPointer + 2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002df6": "process_data_08002df6",
                "param_1": "inputData",
                "puVar1": "dataPointer"
            },
            "calling": [
                "FUN_08002e26"
            ],
            "called": [
                "FUN_080031ce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002e26": {
            "entrypoint": "0x08002e26",
            "current_name": "set_param_and_invoke_functions_08002e26",
            "code": "\nvoid set_param_and_invoke_functions_08002e26(int base_address,undefined4 value)\n\n{\n  *(undefined4 *)(base_address + 0xc0) = value;\n  FUN_08003154(base_address + 0x40);\n  FUN_08002ddc(base_address);\n  FUN_08002df6(base_address);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002e26": "set_param_and_invoke_functions_08002e26",
                "param_1": "base_address",
                "param_2": "value"
            },
            "calling": [
                "FUN_08003048"
            ],
            "called": [
                "FUN_08002ddc",
                "FUN_08002df6",
                "FUN_08003154"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002e44": {
            "entrypoint": "0x08002e44",
            "current_name": "improve_code_08002e44",
            "code": "\nvoid improve_code_08002e44(int func_param_1,int func_param_2,undefined func_param_3,undefined func_param_4)\n\n{\n  byte byte_var;\n  char char_var;\n  int int_var_1;\n  int int_var_2;\n  undefined *ptr_var;\n  \n  int_var_1 = FUN_080099a4(func_param_2,\".cpp\");\n  int_var_2 = FUN_0800997e(func_param_2,0x2f);\n  if (int_var_2 == 0) {\n    int_var_2 = FUN_0800997e(func_param_2,0x5c);\n  }\n  if (int_var_2 != 0) {\n    func_param_2 = int_var_2 + 1;\n  }\n  if (int_var_1 == 0) {\n    char_var = FUN_08000178(func_param_2);\n    *(char *)(func_param_1 + 0xc4) = char_var + '\\x02';\n  }\n  else {\n    *(char *)(func_param_1 + 0xc4) = ((char)int_var_1 - (char)func_param_2) + '\\x02';\n  }\n  FUN_080091a0(*(undefined4 *)(func_param_1 + 200));\n  byte_var = *(byte *)(func_param_1 + 0xc4);\n  ptr_var = (undefined *)FUN_08009190(byte_var + 1);\n  *(undefined **)(func_param_1 + 200) = ptr_var;\n  ptr_var[byte_var] = 0;\n  *ptr_var = func_param_3;\n  ptr_var[1] = func_param_4;\n  FUN_08009954(ptr_var + 2,func_param_2,*(byte *)(func_param_1 + 0xc4) - 2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002e44": "improve_code_08002e44",
                "param_1": "func_param_1",
                "param_2": "func_param_2",
                "param_3": "func_param_3",
                "param_4": "func_param_4",
                "bVar1": "byte_var",
                "cVar2": "char_var",
                "iVar3": "int_var_1",
                "iVar4": "int_var_2",
                "puVar5": "ptr_var"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_0800997e",
                "FUN_08009954",
                "FUN_080099a4",
                "FUN_08000178",
                "FUN_080091a0",
                "FUN_08009190"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ec4": {
            "entrypoint": "0x08002ec4",
            "current_name": "execute_function_08002ec4",
            "code": "\nvoid executeFunction_08002ec4(int functionPointer)\n\n{\n  (**(code **)(**(int **)(functionPointer + 0xc0) + 8))();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ec4": "execute_function_08002ec4",
                "param_1": "functionPointer"
            },
            "calling": [
                "FUN_080022f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ed2": {
            "entrypoint": "0x08002ed2",
            "current_name": "execute_function_08002ed2",
            "code": "\nvoid executeFunction_08002ed2(int functionPointer)\n\n{\n  uint result;\n  \n  result = (**(code **)(**(int **)(functionPointer + 0xc0) + 0xc))();\n  if (result != 0xffffffff) {\n    FUN_08003474(functionPointer + 0x44,result & 0xff);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ed2": "execute_function_08002ed2",
                "param_1": "functionPointer",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080022f8"
            ],
            "called": [
                "FUN_08003474"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ef2": {
            "entrypoint": "0x08002ef2",
            "current_name": "copy_data_to_buffer_08002ef2",
            "code": "\nvoid copy_data_to_buffer_08002ef2(int source_ptr,undefined4 param2_value,undefined2 param3_value,undefined4 param4_value)\n\n{\n  FUN_08003158(source_ptr + 0x40,param2_value,param3_value,param4_value,param4_value);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ef2": "copy_data_to_buffer_08002ef2",
                "param_1": "source_ptr",
                "param_2": "param2_value",
                "param_3": "param3_value",
                "param_4": "param4_value"
            },
            "calling": [
                "FUN_080022f8",
                "FUN_08000488"
            ],
            "called": [
                "FUN_08003158"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002efe": {
            "entrypoint": "0x08002efe",
            "current_name": "copy_and_append_08002efe",
            "code": "\nvoid copy_and_append_08002efe(int src_ptr,undefined4 src_length,undefined2 dest_ptr,undefined4 dest_length)\n\n{\n  FUN_0800319e(src_ptr + 0x40,src_length,dest_ptr,dest_length,dest_length);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002efe": "copy_and_append_08002efe",
                "param_1": "src_ptr",
                "param_2": "src_length",
                "param_3": "dest_ptr",
                "param_4": "dest_length"
            },
            "calling": [
                "FUN_08000be8"
            ],
            "called": [
                "FUN_0800319e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f0a": {
            "entrypoint": "0x08002f0a",
            "current_name": "initialize_data_08002f0a",
            "code": "\nvoid initializeData_08002f0a(int inputValue)\n\n{\n  FUN_0800325a(inputValue + 0x40);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f0a": "initialize_data_08002f0a",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08001c18"
            ],
            "called": [
                "FUN_0800325a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f14": {
            "entrypoint": "0x08002f14",
            "current_name": "initialize_memory_08002f14",
            "code": "\nvoid initializeMemory_08002f14(int startingAddress)\n\n{\n  FUN_080032a2(startingAddress + 0x40);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f14": "initialize_memory_08002f14",
                "param_1": "startingAddress"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_08001c18",
                "FUN_08000500",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_080032a2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f1e": {
            "entrypoint": "0x08002f1e",
            "current_name": "execute_function_08002f1e",
            "code": "\nvoid executeFunction_08002f1e(int functionPointer)\n\n{\n  (**(code **)**(undefined4 **)(functionPointer + 0xc0))();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f1e": "execute_function_08002f1e",
                "param_1": "functionPointer"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f2c": {
            "entrypoint": "0x08002f2c",
            "current_name": "update_variable_08002f2c",
            "code": "\nvoid update_variable_08002f2c(undefined4 param_1,uint value,undefined4 new_value)\n\n{\n  undefined4 temp_value;\n  \n  if (value == 0xd0) {\n    DAT_200005f0 = new_value;\n    return;\n  }\n  if (0xd0 < value) {\n    if (value == 0xf4) {\n      DAT_200005e0 = new_value;\n      return;\n    }\n    temp_value = new_value;\n    if ((value != 0xf5) && (temp_value = DAT_200005e4, value == 0xe0)) {\n      DAT_200005d4 = new_value;\n      return;\n    }\n    DAT_200005e4 = temp_value;\n    return;\n  }\n  if (value == 0x90) {\n    DAT_200005dc = new_value;\n    return;\n  }\n  if (value != 0xc0) {\n    return;\n  }\n  DAT_200005ec = new_value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f2c": "update_variable_08002f2c",
                "param_2": "value",
                "param_3": "new_value",
                "uVar1": "temp_value"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f84": {
            "entrypoint": "0x08002f84",
            "current_name": "set_param_if_equal_08002f84",
            "code": "\nvoid setParamIfEqual_08002f84(undefined4 result,int value,undefined4 newValue)\n\n{\n  if (value == 0xff) {\n    DAT_200005e8 = newValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f84": "set_param_if_equal_08002f84",
                "param_1": "result",
                "param_2": "value",
                "param_3": "newValue"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f94": {
            "entrypoint": "0x08002f94",
            "current_name": "initialize_data_08002f94",
            "code": "\nvoid initializeData_08002f94(undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  DAT_200005d0 = input3;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f94": "initialize_data_08002f94",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fa0": {
            "entrypoint": "0x08002fa0",
            "current_name": "get_target_byte_08002fa0",
            "code": "\nundefined getTargetByte_08002fa0(int offset,int pointer)\n\n{\n  return *(undefined *)(pointer + offset + 0xcc);\n}\n\n",
            "renaming": {
                "FUN_08002fa0": "get_target_byte_08002fa0",
                "param_1": "offset",
                "param_2": "pointer"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_08001cd0",
                "FUN_080022f8",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fa8": {
            "entrypoint": "0x08002fa8",
            "current_name": "update_char_in_memory_08002fa8",
            "code": "\nvoid updateCharInMemory_08002fa8(int memoryOffset,int index,undefined newValue)\n\n{\n  if (*(char *)(memoryOffset + index + 0xcc) != '\\x7f') {\n    *(undefined *)(memoryOffset + index + 0xcc) = newValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002fa8": "update_char_in_memory_08002fa8",
                "param_1": "memoryOffset",
                "param_2": "index",
                "param_3": "newValue"
            },
            "calling": [
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fba": {
            "entrypoint": "0x08002fba",
            "current_name": "get_value_at_index_08002fba",
            "code": "\nundefined4 get_value_at_index_08002fba(int array_address,int index)\n\n{\n  return *(undefined4 *)(array_address + (index + 0x42) * 4);\n}\n\n",
            "renaming": {
                "FUN_08002fba": "get_value_at_index_08002fba",
                "param_1": "array_address",
                "param_2": "index"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fc2": {
            "entrypoint": "0x08002fc2",
            "current_name": "store_value_at_index_08002fc2",
            "code": "\nvoid storeValueAtIndex_08002fc2(int array,int index,undefined4 value)\n\n{\n  *(undefined4 *)(array + (index + 0x42) * 4) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002fc2": "store_value_at_index_08002fc2",
                "param_1": "array",
                "param_2": "index",
                "param_3": "value"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fca": {
            "entrypoint": "0x08002fca",
            "current_name": "execute_operations_08002fca",
            "code": "\nvoid executeOperations_08002fca(undefined4 arg1,undefined4 arg2,int iterations,undefined4 arg4,\n                 undefined4 arg5)\n\n{\n  uint iterationCount;\n  \n  for (iterationCount = 0; (int)iterationCount < iterations; iterationCount = iterationCount + 1 & 0xff) {\n    FUNC_08008ac4(arg5);\n    FUN_08008a24(arg2,1);\n    FUNC_08008ac4(arg4);\n    FUN_08008a24(arg2,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002fca": "execute_operations_08002fca",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "iterations",
                "param_4": "arg4",
                "param_5": "arg5",
                "uVar1": "iterationCount"
            },
            "calling": [
                "FUN_08003002"
            ],
            "called": [
                "FUN_08008ac4",
                "FUN_08008a24"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003002": {
            "entrypoint": "0x08003002",
            "current_name": "check_and_perform_actions_08003002",
            "code": "\nvoid checkAndPerformActions_08003002(int param)\n\n{\n  if (*(char *)(param + 0x1f8) != '\\0') {\n    return;\n  }\n  FUN_08008990(0xd,1);\n  FUN_08002fca(param,0xd,2,0x28,0xd2);\n  FUNC_08008ac4(0xfa);\n  FUN_08002fca(param,0xd,5,0x28,0xd2);\n  FUNC_08008ac4(0x7d);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003002": "check_and_perform_actions_08003002",
                "param_1": "param"
            },
            "calling": [
                "FUN_08003048"
            ],
            "called": [
                "FUN_08008990",
                "FUN_08008ac4",
                "FUN_08002fca"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003048": {
            "entrypoint": "0x08003048",
            "current_name": "initialize_data_08003048",
            "code": "\nvoid initializeData_08003048(undefined4 firstParameter,undefined4 secondParameter,undefined4 thirdParameter,undefined4 fourthParameter)\n\n{\n  FUN_08008c44(&DAT_20000700,secondParameter,6,fourthParameter,fourthParameter);\n  FUN_08003002(firstParameter);\n  FUN_08002e26(firstParameter,&DAT_20000700);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003048": "initialize_data_08003048",
                "param_1": "firstParameter",
                "param_2": "secondParameter",
                "param_3": "thirdParameter",
                "param_4": "fourthParameter"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08003002",
                "FUN_08002e26",
                "FUN_08008c44"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800307a": {
            "entrypoint": "0x0800307a",
            "current_name": "decompress_data_0800307a",
            "code": "\nvoid decompress_data_0800307a(undefined4 *output_buffer,uint input_size,byte *compressed_data,uint max_output_size)\n\n{\n  uint current_byte;\n  uint bit_offset;\n  uint output_size;\n  uint input_offset;\n  \n  current_byte = (uint)*compressed_data;\n  if (max_output_size == 0) {\n    max_output_size = 0xffffffff;\n  }\n  input_offset = 0;\n  bit_offset = 0;\n  output_size = 0;\n  while ((input_offset < input_size && (output_size < max_output_size))) {\n    (***(code ***)(undefined4 *)*output_buffer)\n              ((undefined4 *)*output_buffer,((uint)compressed_data[input_offset] << (bit_offset & 0xff) | current_byte) & 0x7f);\n    current_byte = (int)(uint)compressed_data[input_offset] >> (7 - bit_offset & 0xff) & 0xff;\n    bit_offset = bit_offset + 1;\n    while ((output_size = output_size + 1, 6 < bit_offset && (output_size < max_output_size))) {\n      (***(code ***)(undefined4 *)*output_buffer)((undefined4 *)*output_buffer,current_byte & 0x7f);\n      current_byte = current_byte >> 7;\n      bit_offset = bit_offset - 7;\n    }\n    input_offset = input_offset + 1;\n  }\n  if ((bit_offset != 0) && (output_size < max_output_size)) {\n    (***(code ***)(undefined4 *)*output_buffer)((undefined4 *)*output_buffer,(1 << (bit_offset & 0xff)) - 1U & current_byte)\n    ;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800307a": "decompress_data_0800307a",
                "param_1": "output_buffer",
                "param_2": "input_size",
                "param_3": "compressed_data",
                "param_4": "max_output_size",
                "uVar1": "current_byte",
                "uVar2": "bit_offset",
                "uVar3": "output_size",
                "uVar4": "input_offset"
            },
            "calling": [
                "FUN_08003158",
                "FUN_080031ce",
                "FUN_08003106",
                "FUN_0800319e",
                "FUN_0800325a"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003106": {
            "entrypoint": "0x08003106",
            "current_name": "execute_function_08003106",
            "code": "\nvoid executeFunction_08003106(undefined4 *functionPointer,undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  undefined4 *pointer;\n  \n  pointer = (undefined4 *)*functionPointer;\n  if (pointer != (undefined4 *)0x0) {\n    (**(code **)*pointer)(pointer,0xf0);\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,0x6f);\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,arg1);\n    FUN_0800307a(functionPointer,arg2,arg3,arg2);\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,0xf7);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003106": "execute_function_08003106",
                "param_1": "functionPointer",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3",
                "puVar1": "pointer"
            },
            "calling": [
                "FUN_08003158"
            ],
            "called": [
                "FUN_0800307a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800314e": {
            "entrypoint": "0x0800314e",
            "current_name": "initialize_variable_0800314e",
            "code": "\nvoid initializeVariable_0800314e(undefined4 *result)\n\n{\n  *result = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800314e": "initialize_variable_0800314e",
                "param_1": "result"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003154": {
            "entrypoint": "0x08003154",
            "current_name": "copy_value_to_pointer_08003154",
            "code": "\nvoid copyValueToPointer_08003154(undefined4 *destination,undefined4 value)\n\n{\n  *destination = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003154": "copy_value_to_pointer_08003154",
                "param_1": "destination",
                "param_2": "value"
            },
            "calling": [
                "FUN_08002e26"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003158": {
            "entrypoint": "0x08003158",
            "current_name": "execute_operation_08003158",
            "code": "\nvoid executeOperation_08003158(undefined4 *inputArray,uint arrayLength,ushort value)\n\n{\n  undefined4 *pointer;\n  ushort tempValue;\n  \n  pointer = (undefined4 *)*inputArray;\n  if (pointer != (undefined4 *)0x0) {\n    tempValue = value;\n    if (((int)arrayLength < 0x10) && (value < 0x4000)) {\n      (**(code **)*pointer)(pointer,arrayLength | 0xe0);\n      FUN_0800307a(inputArray,2,&tempValue);\n    }\n    else {\n      FUN_08003106(inputArray,arrayLength,2,&tempValue);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003158": "execute_operation_08003158",
                "param_1": "inputArray",
                "param_2": "arrayLength",
                "param_3": "value",
                "puVar1": "pointer",
                "local_a": "tempValue"
            },
            "calling": [
                "FUN_08002ef2"
            ],
            "called": [
                "FUN_0800307a",
                "FUN_08003106"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800319e": {
            "entrypoint": "0x0800319e",
            "current_name": "execute_function_with_params_0800319e",
            "code": "\nvoid executeFunctionWithParams_0800319e(undefined4 *functionPtr,uint flags,undefined2 param)\n\n{\n  undefined4 *ptrToFunctionPtr;\n  undefined2 localParam;\n  \n  ptrToFunctionPtr = (undefined4 *)*functionPtr;\n  if (ptrToFunctionPtr != (undefined4 *)0x0) {\n    localParam = param;\n    (**(code **)*ptrToFunctionPtr)(ptrToFunctionPtr,flags & 0xf | 0x90);\n    FUN_0800307a(functionPtr,2,&localParam);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800319e": "execute_function_with_params_0800319e",
                "param_1": "functionPtr",
                "param_2": "flags",
                "param_3": "param",
                "puVar1": "ptrToFunctionPtr",
                "local_a": "localParam"
            },
            "calling": [
                "FUN_08002efe"
            ],
            "called": [
                "FUN_0800307a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080031ce": {
            "entrypoint": "0x080031ce",
            "current_name": "execute_function_080031ce",
            "code": "\nvoid execute_function_080031ce(undefined4 *function_pointer,undefined4 input_param_1,undefined4 input_param_2,uint loop_length,int loop_offset\n                 )\n\n{\n  undefined4 *pointer;\n  uint index;\n  \n  pointer = (undefined4 *)*function_pointer;\n  if (pointer != (undefined4 *)0x0) {\n    (**(code **)*pointer)(pointer,0xf0,input_param_2,*(code **)*pointer,loop_length);\n    (***(code ***)(undefined4 *)*function_pointer)((undefined4 *)*function_pointer,0x79);\n    (***(code ***)(undefined4 *)*function_pointer)((undefined4 *)*function_pointer,input_param_1);\n    (***(code ***)(undefined4 *)*function_pointer)((undefined4 *)*function_pointer,input_param_2);\n    for (index = 0; index < loop_length; index = index + 1) {\n      FUN_0800307a(function_pointer,1,loop_offset + index,0);\n    }\n    (***(code ***)(undefined4 *)*function_pointer)((undefined4 *)*function_pointer,0xf7);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080031ce": "execute_function_080031ce",
                "param_1": "function_pointer",
                "param_2": "input_param_1",
                "param_3": "input_param_2",
                "param_4": "loop_length",
                "param_5": "loop_offset",
                "puVar1": "pointer",
                "uVar2": "index"
            },
            "calling": [
                "FUN_08002df6"
            ],
            "called": [
                "FUN_0800307a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800322c": {
            "entrypoint": "0x0800322c",
            "current_name": "execute_function_0800322c",
            "code": "\nvoid executeFunction_0800322c(undefined4 *functionPointer,undefined4 param2,undefined4 param3)\n\n{\n  undefined4 *pointer;\n  \n  pointer = (undefined4 *)*functionPointer;\n  if (pointer != (undefined4 *)0x0) {\n    (**(code **)*pointer)(pointer,0xf9);\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,param2);\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,param3);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800322c": "execute_function_0800322c",
                "param_1": "functionPointer",
                "param_2": "param2",
                "param_3": "param3",
                "puVar1": "pointer"
            },
            "calling": [
                "FUN_08002ddc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800325a": {
            "entrypoint": "0x0800325a",
            "current_name": "execute_function_0800325a",
            "code": "\nvoid execute_function_0800325a(undefined4 *function_pointer,undefined4 param_two,uint loop_iterations,int param_four)\n\n{\n  undefined4 *pointer_to_function;\n  uint loop_counter;\n  \n  pointer_to_function = (undefined4 *)*function_pointer;\n  if (pointer_to_function != (undefined4 *)0x0) {\n    (**(code **)*pointer_to_function)(pointer_to_function,0xf0);\n    (***(code ***)(undefined4 *)*function_pointer)((undefined4 *)*function_pointer,param_two);\n    for (loop_counter = 0; loop_counter < loop_iterations; loop_counter = loop_counter + 1) {\n      FUN_0800307a(function_pointer,1,param_four + loop_counter,0);\n    }\n    (***(code ***)(undefined4 *)*function_pointer)((undefined4 *)*function_pointer,0xf7);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800325a": "execute_function_0800325a",
                "param_1": "function_pointer",
                "param_2": "param_two",
                "param_3": "loop_iterations",
                "param_4": "param_four",
                "puVar1": "pointer_to_function",
                "uVar2": "loop_counter"
            },
            "calling": [
                "FUN_08002f0a",
                "FUN_080032a2"
            ],
            "called": [
                "FUN_0800307a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080032a2": {
            "entrypoint": "0x080032a2",
            "current_name": "send_data_080032a2",
            "code": "\nvoid sendData_080032a2(undefined4 dest,undefined4 source,undefined4 unused1,undefined4 unused2)\n\n{\n  undefined4 result;\n  \n  result = FUN_08000178(source);\n  FUN_0800325a(dest,0x71,result,source,unused2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080032a2": "send_data_080032a2",
                "param_1": "dest",
                "param_2": "source",
                "param_3": "unused1",
                "param_4": "unused2",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08002f14"
            ],
            "called": [
                "FUN_08000178",
                "FUN_0800325a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080032bc": {
            "entrypoint": "0x080032bc",
            "current_name": "initialize_memory_080032bc",
            "code": "\nvoid initializeMemory_080032bc(int memoryAddress,int value,undefined4 extraData)\n\n{\n  *(int *)(memoryAddress + 4) = value;\n  *(undefined4 *)(memoryAddress + 8) = extraData;\n  *(undefined *)(memoryAddress + 0xc) = 0;\n  *(undefined *)(memoryAddress + 0xd) = 0;\n  *(undefined4 *)(memoryAddress + 0x10) = 0;\n  *(undefined *)(memoryAddress + 0x14) = 0;\n  *(undefined4 *)(memoryAddress + 0x18) = 0;\n  *(undefined4 *)(memoryAddress + 0x1c) = 0;\n  *(undefined4 *)(memoryAddress + 0x20) = 0;\n  *(undefined4 *)(memoryAddress + 0x24) = 0;\n  *(undefined4 *)(memoryAddress + 0x28) = 0;\n  *(undefined4 *)(memoryAddress + 0x2c) = 0;\n  *(undefined4 *)(memoryAddress + 0x30) = 0;\n  *(undefined4 *)(memoryAddress + 0x34) = 0;\n  *(undefined4 *)(memoryAddress + 0x38) = 0;\n  *(undefined4 *)(memoryAddress + 0x3c) = 0;\n  *(undefined4 *)(memoryAddress + 0x40) = 0;\n  *(undefined4 *)(memoryAddress + 0x44) = 0;\n  *(undefined4 *)(memoryAddress + 0x48) = 0;\n  *(undefined4 *)(memoryAddress + 0x4c) = 0;\n  *(undefined4 *)(memoryAddress + 0x50) = 0;\n  *(undefined4 *)(memoryAddress + 0x54) = 0;\n  *(undefined4 *)(memoryAddress + 0x58) = 0;\n  *(undefined4 *)(memoryAddress + 0x5c) = 0;\n  *(undefined4 *)(memoryAddress + 0x60) = 0;\n  *(undefined4 *)(memoryAddress + 100) = 0;\n  *(undefined4 *)(memoryAddress + 0x68) = 0;\n  *(undefined4 *)(memoryAddress + 0x6c) = 0;\n  *(undefined4 *)(memoryAddress + 0x70) = 0;\n  *(undefined4 *)(memoryAddress + 0x74) = 0;\n  *(undefined4 *)(memoryAddress + 0x78) = 0;\n  *(bool *)memoryAddress = value == 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080032bc": "initialize_memory_080032bc",
                "param_1": "memoryAddress",
                "param_2": "value",
                "param_3": "extraData"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003306": {
            "entrypoint": "0x08003306",
            "current_name": "update_params_08003306",
            "code": "\nvoid updateParams_08003306(int funcBase,uint paramValue,undefined4 newValue1,undefined4 newValue2)\n\n{\n  if (paramValue == 0xd0) {\n    *(undefined4 *)(funcBase + 0x58) = newValue1;\n    *(undefined4 *)(funcBase + 0x28) = newValue2;\n    return;\n  }\n  if (0xd0 < paramValue) {\n    if (paramValue == 0xf4) {\n      *(undefined4 *)(funcBase + 0x5c) = newValue1;\n      *(undefined4 *)(funcBase + 0x2c) = newValue2;\n      return;\n    }\n    if (paramValue == 0xf5) {\n      *(undefined4 *)(funcBase + 0x60) = newValue1;\n      *(undefined4 *)(funcBase + 0x30) = newValue2;\n    }\n    else if (paramValue == 0xe0) {\n      *(undefined4 *)(funcBase + 0x4c) = newValue1;\n      *(undefined4 *)(funcBase + 0x1c) = newValue2;\n      return;\n    }\n    return;\n  }\n  if (paramValue == 0x90) {\n    *(undefined4 *)(funcBase + 0x50) = newValue1;\n    *(undefined4 *)(funcBase + 0x20) = newValue2;\n    return;\n  }\n  if (paramValue == 0xc0) {\n    *(undefined4 *)(funcBase + 0x54) = newValue1;\n    *(undefined4 *)(funcBase + 0x24) = newValue2;\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003306": "update_params_08003306",
                "param_1": "funcBase",
                "param_2": "paramValue",
                "param_3": "newValue1",
                "param_4": "newValue2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003346": {
            "entrypoint": "0x08003346",
            "current_name": "update_data_08003346",
            "code": "\nvoid updateData_08003346(int dataAddress,int value,undefined4 newValue1,undefined4 newValue2)\n\n{\n  if (value == 0x79) {\n    *(undefined4 *)(dataAddress + 0x70) = newValue1;\n    *(undefined4 *)(dataAddress + 0x34) = newValue2;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003346": "update_data_08003346",
                "param_1": "dataAddress",
                "param_2": "value",
                "param_3": "newValue1",
                "param_4": "newValue2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003350": {
            "entrypoint": "0x08003350",
            "current_name": "update_param_08003350",
            "code": "\nvoid updateParam_08003350(int ptr,int value,undefined4 newValue1,undefined4 newValue2)\n\n{\n  if (value == 0xf9) {\n    *(undefined4 *)(ptr + 0x74) = newValue1;\n    *(undefined4 *)(ptr + 0x38) = newValue2;\n    return;\n  }\n  if (value != 0xff) {\n    return;\n  }\n  *(undefined4 *)(ptr + 0x78) = newValue1;\n  *(undefined4 *)(ptr + 0x48) = newValue2;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003350": "update_param_08003350",
                "param_1": "ptr",
                "param_2": "value",
                "param_3": "newValue1",
                "param_4": "newValue2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003366": {
            "entrypoint": "0x08003366",
            "current_name": "update_params_08003366",
            "code": "\nvoid updateParams_08003366(int objPtr,int value,undefined4 newVal1,undefined4 newVal2)\n\n{\n  if (value == 0x71) {\n    *(undefined4 *)(objPtr + 0x68) = newVal1;\n    *(undefined4 *)(objPtr + 0x40) = newVal2;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003366": "update_params_08003366",
                "param_1": "objPtr",
                "param_2": "value",
                "param_3": "newVal1",
                "param_4": "newVal2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003370": {
            "entrypoint": "0x08003370",
            "current_name": "set_params_08003370",
            "code": "\nvoid setParams_08003370(int baseAddress,undefined4 unusedParam,undefined4 newValue1,undefined4 newValue2)\n\n{\n  *(undefined4 *)(baseAddress + 0x6c) = newValue1;\n  *(undefined4 *)(baseAddress + 0x44) = newValue2;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003370": "set_params_08003370",
                "param_1": "baseAddress",
                "param_2": "unusedParam",
                "param_3": "newValue1",
                "param_4": "newValue2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003376": {
            "entrypoint": "0x08003376",
            "current_name": "update_data_08003376",
            "code": "\nvoid updateData_08003376(undefined *dataStruct,undefined newValue,uint index)\n\n{\n  bool isIndexValid;\n  \n  if (index < *(uint *)(dataStruct + 8)) {\n    isIndexValid = false;\n  }\n  else {\n    isIndexValid = true;\n    if (*(code **)(dataStruct + 100) != (code *)0x0) {\n      *dataStruct = 1;\n      (**(code **)(dataStruct + 100))(*(undefined4 *)(dataStruct + 0x3c));\n      if (index < *(uint *)(dataStruct + 8)) {\n        isIndexValid = false;\n      }\n      else {\n        isIndexValid = true;\n      }\n    }\n  }\n  if (!isIndexValid) {\n    *(undefined *)(*(int *)(dataStruct + 4) + index) = newValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003376": "update_data_08003376",
                "param_1": "dataStruct",
                "param_2": "newValue",
                "param_3": "index",
                "bVar1": "isIndexValid"
            },
            "calling": [
                "FUN_08003474",
                "FUN_080033cc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080033a8": {
            "entrypoint": "0x080033a8",
            "current_name": "copy_and_shift_bits_080033a8",
            "code": "\nvoid copyAndShiftBits_080033a8(undefined4 srcParam,uint length,int destParam)\n\n{\n  byte currentByte;\n  int destIndex;\n  uint srcIndex;\n  \n  destIndex = 0;\n  for (srcIndex = 0; srcIndex < length; srcIndex = srcIndex + 2) {\n    currentByte = *(byte *)(destParam + srcIndex);\n    *(byte *)(destParam + destIndex) = currentByte;\n    *(byte *)(destParam + destIndex) = *(char *)(destParam + srcIndex + 1) << 7 | currentByte;\n    destIndex = destIndex + 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080033a8": "copy_and_shift_bits_080033a8",
                "param_1": "srcParam",
                "param_2": "length",
                "param_3": "destParam",
                "bVar1": "currentByte",
                "iVar2": "destIndex",
                "uVar3": "srcIndex"
            },
            "calling": [
                "FUN_080033cc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080033cc": {
            "entrypoint": "0x080033cc",
            "current_name": "process_input_080033cc",
            "code": "\nvoid processInput_080033cc(int inputStruct,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  char firstChar;\n  int calculatedValue;\n  char *inputString;\n  \n  inputString = *(char **)(inputStruct + 4);\n  firstChar = *inputString;\n  if (firstChar == 'q') {\n    if (*(int *)(inputStruct + 0x68) != 0) {\n      calculatedValue = FUN_080033a8(inputStruct,*(int *)(inputStruct + 0x18) + -1,inputString + 1,inputString,param4);\n      FUN_08003376(inputStruct,0,calculatedValue + 1);\n      (**(code **)(inputStruct + 0x68))(*(undefined4 *)(inputStruct + 0x40),*(int *)(inputStruct + 4) + 1);\n      return;\n    }\n  }\n  else if (firstChar == 'y') {\n    if (*(code **)(inputStruct + 0x70) != (code *)0x0) {\n      if (*(uint *)(inputStruct + 0x18) < 3) {\n        (**(code **)(inputStruct + 0x70))(*(undefined4 *)(inputStruct + 0x34),0,0);\n        return;\n      }\n      calculatedValue = FUN_080033a8(inputStruct,*(uint *)(inputStruct + 0x18) - 3,inputString + 3,inputString,param4);\n      FUN_08003376(inputStruct,0,calculatedValue + 3);\n      calculatedValue = *(int *)(inputStruct + 4);\n      (**(code **)(inputStruct + 0x70))\n                (*(undefined4 *)(inputStruct + 0x34),*(undefined *)(calculatedValue + 1),*(undefined *)(calculatedValue + 2)\n                 ,calculatedValue + 3);\n      return;\n    }\n  }\n  else if (*(code **)(inputStruct + 0x6c) != (code *)0x0) {\n    (**(code **)(inputStruct + 0x6c))\n              (*(undefined4 *)(inputStruct + 0x44),firstChar,*(int *)(inputStruct + 0x18) + -1,inputString + 1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080033cc": "process_input_080033cc",
                "param_1": "inputStruct",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "cVar1": "firstChar",
                "iVar2": "calculatedValue",
                "pcVar3": "inputString"
            },
            "calling": [
                "FUN_08003474"
            ],
            "called": [
                "FUN_08003376",
                "FUN_080033a8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800344a": {
            "entrypoint": "0x0800344a",
            "current_name": "initialize_data_0800344a",
            "code": "\nvoid initializeData_0800344a(int dataPointer)\n\n{\n  uint index;\n  \n  *(undefined4 *)(dataPointer + 0x10) = 0;\n  *(undefined *)(dataPointer + 0xc) = 0;\n  *(undefined *)(dataPointer + 0xd) = 0;\n  for (index = 0; index < *(uint *)(dataPointer + 8); index = index + 1) {\n    *(undefined *)(*(int *)(dataPointer + 4) + index) = 0;\n  }\n  *(undefined *)(dataPointer + 0x14) = 0;\n  *(undefined4 *)(dataPointer + 0x18) = 0;\n  if (*(code **)(dataPointer + 0x78) != (code *)0x0) {\n    (**(code **)(dataPointer + 0x78))(*(undefined4 *)(dataPointer + 0x48));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800344a": "initialize_data_0800344a",
                "param_1": "dataPointer",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08003474"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003474": {
            "entrypoint": "0x08003474",
            "current_name": "process_data_08003474",
            "code": "\nvoid processData_08003474(int data,uint value)\n\n{\n  byte byteValue;\n  \n  if (*(char *)(data + 0x14) != '\\0') {\n    if (value != 0xf7) {\n      FUN_08003376(data,value,*(undefined4 *)(data + 0x18));\n      *(int *)(data + 0x18) = *(int *)(data + 0x18) + 1;\n      return;\n    }\n    *(undefined *)(data + 0x14) = 0;\n    FUN_080033cc();\n    return;\n  }\n  if ((*(int *)(data + 0x10) == 0) || (0x7f < (int)value)) {\n    if ((int)value < 0xf0) {\n      *(byte *)(data + 0xd) = (byte)value & 0xf;\n      value = value & 0xf0;\n    }\n    if (value == 0xf0) {\n      *(undefined *)(data + 0x14) = 1;\n      *(undefined4 *)(data + 0x18) = 0;\n      return;\n    }\n    if (value < 0xf1) {\n      if (value != 0xc0) {\n        if (value < 0xc1) {\n          if (value != 0x90) {\n            return;\n          }\n        }\n        else {\n          if (value == 0xd0) goto LAB_0800359c;\n          if (value != 0xe0) {\n            return;\n          }\n        }\nLAB_08003586:\n        *(undefined4 *)(data + 0x10) = 2;\n        *(char *)(data + 0xc) = (char)value;\n        return;\n      }\nLAB_0800359c:\n      *(undefined4 *)(data + 0x10) = 1;\n      *(char *)(data + 0xc) = (char)value;\n      return;\n    }\n    if (value != 0xf9) {\n      if (0xf9 < value) {\n        if (value == 0xff) {\n          FUN_0800344a(data);\n          return;\n        }\n        return;\n      }\n      if (1 < value - 0xf4) {\n        return;\n      }\n      goto LAB_08003586;\n    }\n    if (*(code **)(data + 0x74) != (code *)0x0) {\n      (**(code **)(data + 0x74))(*(undefined4 *)(data + 0x38));\n    }\n  }\n  else {\n    *(int *)(data + 0x10) = *(int *)(data + 0x10) + -1;\n    FUN_08003376();\n    if ((*(int *)(data + 0x10) == 0) && (byteValue = *(byte *)(data + 0xc), byteValue != 0)) {\n      if (byteValue == 0xd0) {\n        if (*(code **)(data + 0x58) != (code *)0x0) {\n          (**(code **)(data + 0x58))\n                    (*(undefined4 *)(data + 0x28),*(undefined *)(data + 0xd),\n                     **(undefined **)(data + 4));\n        }\n      }\n      else if (byteValue < 0xd1) {\n        if (byteValue == 0x90) {\n          if (*(code **)(data + 0x50) != (code *)0x0) {\n            (**(code **)(data + 0x50))\n                      (*(undefined4 *)(data + 0x20),*(undefined *)(data + 0xd),\n                       (uint)(*(byte **)(data + 4))[1] + (uint)**(byte **)(data + 4) * 0x80);\n          }\n        }\n        else if ((byteValue == 0xc0) && (*(code **)(data + 0x54) != (code *)0x0)) {\n          (**(code **)(data + 0x54))\n                    (*(undefined4 *)(data + 0x24),*(undefined *)(data + 0xd),\n                     **(undefined **)(data + 4));\n        }\n      }\n      else if (byteValue == 0xf4) {\n        if (*(code **)(data + 0x5c) != (code *)0x0) {\n          (**(code **)(data + 0x5c))\n                    (*(undefined4 *)(data + 0x2c),(*(undefined **)(data + 4))[1],\n                     **(undefined **)(data + 4));\n        }\n      }\n      else if (byteValue == 0xf5) {\n        if (*(code **)(data + 0x60) != (code *)0x0) {\n          (**(code **)(data + 0x60))\n                    (*(undefined4 *)(data + 0x30),(*(undefined **)(data + 4))[1],\n                     **(undefined **)(data + 4));\n        }\n      }\n      else if ((byteValue == 0xe0) && (*(code **)(data + 0x4c) != (code *)0x0)) {\n        (**(code **)(data + 0x4c))\n                  (*(undefined4 *)(data + 0x1c),*(undefined *)(data + 0xd),\n                   (uint)(*(byte **)(data + 4))[1] + (uint)**(byte **)(data + 4) * 0x80);\n      }\n      *(undefined *)(data + 0xc) = 0;\n      return;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003474": "process_data_08003474",
                "param_1": "data",
                "param_2": "value",
                "bVar1": "byteValue"
            },
            "calling": [
                "FUN_08002ed2"
            ],
            "called": [
                "FUN_08003376",
                "FUN_080033cc",
                "FUN_0800344a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080035b8": {
            "entrypoint": "0x080035b8",
            "current_name": "initialize_hardware_080035b8",
            "code": "\nvoid initializeHardware_080035b8(void)\n\n{\n  int result;\n  uint timestamp;\n  undefined4 configArray [2];\n  undefined4 tempVar1;\n  undefined4 tempVar2;\n  undefined4 tempVar3;\n  undefined4 tempVar4;\n  undefined4 tempVar5;\n  undefined4 tempVar6;\n  undefined4 hardwareArray [4];\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  undefined4 value4;\n  undefined4 memAddress1;\n  \n  hardwareArray[0] = 2;\n  value1 = 1;\n  value2 = 0x10;\n  value3 = 2;\n  value4 = 0;\n  memAddress1 = 0x380000;\n  result = FUN_08005460(hardwareArray);\n  if (result != 0) {\n    FUN_080073e8(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x88);\n  }\n  tempVar2 = 0xf;\n  tempVar3 = 2;\n  tempVar4 = 0;\n  tempVar5 = 0x400;\n  tempVar6 = 0;\n  result = FUN_080058ac(&tempVar2);\n  if (result != 0) {\n    FUN_080073e8(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x95);\n  }\n  configArray[0] = 2;\n  tempVar1 = 0x8000;\n  result = FUN_08005aa4(configArray);\n  if (result != 0) {\n    FUN_080073e8(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x9c);\n  }\n  timestamp = FUN_08005a1c();\n  FUN_08003fd8(timestamp / 1000);\n  FUN_08004024(4);\n  FUN_08003f30(0xffffffff,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080035b8": "initialize_hardware_080035b8",
                "local_54": "configArray",
                "local_4c": "tempVar1",
                "local_44": "tempVar2",
                "local_40": "tempVar3",
                "local_3c": "tempVar4",
                "local_38": "tempVar5",
                "local_34": "tempVar6",
                "local_30": "hardwareArray",
                "local_20": "value1",
                "local_1c": "value2",
                "local_14": "value3",
                "local_10": "value4",
                "local_c": "memAddress1",
                "iVar1": "result",
                "uVar2": "timestamp"
            },
            "calling": [
                "FUN_080072fa"
            ],
            "called": [
                "FUN_08005a1c",
                "FUN_08005aa4",
                "FUN_08004024",
                "FUN_08003fd8",
                "FUN_08003f30",
                "FUN_08005460",
                "FUN_080073e8",
                "FUN_080058ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "entry": {
            "entrypoint": "0x08003658",
            "current_name": "entry",
            "code": "\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined4 *)(iVar1 + 0x20000000) < &DAT_200000f4; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x800ac18);\n  }\n  for (puVar2 = &DAT_200000f4; puVar2 < &DAT_20000a3c; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  FUN_080073ec();\n  FUN_08009148();\n  UNRECOVERED_JUMPTABLE = (code *)0x800368a;\n  FUN_08008f1c();\n                    /* WARNING: Could not recover jumptable at 0x0800368a. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "renaming": {},
            "calling": [],
            "called": [
                "FUN_080073ec",
                "FUN_08009148",
                "FUN_08008f1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036a2": {
            "entrypoint": "0x080036a2",
            "current_name": "initialize_application_080036a2",
            "code": "\nvoid initialize_application_080036a2(void)\n\n{\n  FUN_080072fa();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080036a2": "initialize_application_080036a2"
            },
            "calling": [
                "FUN_08008f0e"
            ],
            "called": [
                "FUN_080072fa"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036ac": {
            "entrypoint": "0x080036ac",
            "current_name": "find_character_index_080036ac",
            "code": "\nuint find_character_index_080036ac(int input_char)\n\n{\n  uint index;\n  \n  if ((uint)(input_char << 0x18) >> 0x1c < 5) {\n    for (index = 0; (index < 0x3c && (input_char != (char)(&DAT_0800a908)[index])); index = index + 1)\n    {\n    }\n  }\n  else {\n    index = 0xffffffff;\n  }\n  return index;\n}\n\n",
            "renaming": {
                "FUN_080036ac": "find_character_index_080036ac",
                "param_1": "input_char",
                "uVar1": "index"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_08001cd0",
                "FUN_08000aec",
                "FUN_080022f8",
                "FUN_08000a64",
                "FUN_08000ef8",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036d4": {
            "entrypoint": "0x080036d4",
            "current_name": "FUNC_080036d4",
            "code": "\nvoid FUNC_080036d4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080036d4": "FUNC_080036d4"
            },
            "calling": [
                "FUN_08003724"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080036d8": {
            "entrypoint": "0x080036d8",
            "current_name": "initialize_application_080036d8",
            "code": "\nundefined4 initializeApplication_080036d8(uint inputParameter)\n\n{\n  int result;\n  \n  result = FUN_08003fd8(DAT_20000018 / (1000 / DAT_2000000c));\n  if (result != 0) {\n    return 1;\n  }\n  if (0xf < inputParameter) {\n    return 1;\n  }\n  FUN_08003f30(0xffffffff,inputParameter,0);\n  DAT_20000010 = inputParameter;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080036d8": "initialize_application_080036d8",
                "param_1": "inputParameter",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08003724",
                "FUN_080058d2"
            ],
            "called": [
                "FUN_08003fd8",
                "FUN_08003f30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003724": {
            "entrypoint": "0x08003724",
            "current_name": "initialize_system_08003724",
            "code": "\n\n\nundefined4 initializeSystem_08003724(void)\n\n{\n  _DAT_40022000 = _DAT_40022000 | 0x10;\n  FUN_08003f0c(3);\n  FUN_080036d8(0xf);\n  FUNC_080036d4();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003724": "initialize_system_08003724"
            },
            "calling": [
                "FUN_080072fa"
            ],
            "called": [
                "FUN_080036d4",
                "FUN_080036d8",
                "FUN_08003f0c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003748": {
            "entrypoint": "0x08003748",
            "current_name": "addition_operation_08003748",
            "code": "\nvoid additionOperation_08003748(void)\n\n{\n  DAT_20000a34 = (uint)DAT_2000000c + DAT_20000a34;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003748": "addition_operation_08003748"
            },
            "calling": [
                "FUN_08007246"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003760": {
            "entrypoint": "0x08003760",
            "current_name": "get_data_08003760",
            "code": "\nundefined4 get_data_08003760(void)\n\n{\n  return DAT_20000a34;\n}\n\n",
            "renaming": {
                "FUN_08003760": "get_data_08003760"
            },
            "calling": [
                "FUN_080066e8",
                "FUN_080067ac",
                "FUN_0800376c",
                "FUN_08003b8c",
                "FUN_080058d2",
                "FUN_08007e74",
                "FUN_08008500",
                "FUN_08005aa4",
                "FUN_08007f0e",
                "FUN_0800723c",
                "FUN_08003a20",
                "FUN_08003e20",
                "FUN_08005460"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800376c": {
            "entrypoint": "0x0800376c",
            "current_name": "check_access_0800376c",
            "code": "\nundefined4 checkAccess_0800376c(uint **permission,uint timeout)\n\n{\n  int iVar1;\n  uint randomSeed;\n  int threshold;\n  undefined4 result;\n  uint *permissionFlags;\n  uint calculationResult;\n  uint counter;\n  \n  counter = 0;\n  iVar1 = FUN_08003760();\n  calculationResult = DAT_20000018;\n  permissionFlags = *permission;\n  if ((permissionFlags[2] & 0x100) == 0) {\n    if (((permissionFlags[1] & 0x100) == 0) && ((permissionFlags[0xb] & 0xf00000) == 0)) {\n      do {\n        if ((**permission & 2) != 0) goto LAB_0800387e;\n      } while ((timeout == 0xffffffff) ||\n              ((timeout != 0 && (threshold = FUN_08003760(), (uint)(threshold - iVar1) <= timeout))));\n      permission[10] = (uint *)((uint)permission[10] | 4);\n      *(undefined *)(permission + 9) = 0;\n      result = 3;\n    }\n    else {\n      randomSeed = FUN_08005bb8(2);\n      permissionFlags = *permission;\n      if (((permissionFlags[4] & 0x24924924) == 0) && ((permissionFlags[3] & 0x924924) == 0)) {\n        if ((permissionFlags[4] & 0x12492492) == 0) {\n          if ((permissionFlags[3] & 0x492492) == 0) {\n            threshold = 0x14;\n          }\n          else {\n            threshold = 0x29;\n          }\n        }\n        else {\n          threshold = 0x29;\n        }\n      }\n      else if (((permissionFlags[4] & 0x12492492) == 0) && ((permissionFlags[3] & 0x492492) == 0)) {\n        threshold = 0x54;\n      }\n      else if ((permissionFlags[4] & 0x249249) == 0) {\n        if ((permissionFlags[3] & 0x249249) == 0) {\n          threshold = 0x54;\n        }\n        else {\n          threshold = 0xfc;\n        }\n      }\n      else {\n        threshold = 0xfc;\n      }\n      calculationResult = (calculationResult / randomSeed) * threshold;\n      for (; counter <= calculationResult && calculationResult - counter != 0; counter = counter + 1) {\n        if ((timeout != 0xffffffff) &&\n           ((timeout == 0 || (threshold = FUN_08003760(), timeout < (uint)(threshold - iVar1))))) {\n          permission[10] = (uint *)((uint)permission[10] | 4);\n          *(undefined *)(permission + 9) = 0;\n          return 3;\n        }\n      }\nLAB_0800387e:\n      **permission = 0xffffffed;\n      permission[10] = (uint *)((uint)permission[10] | 0x200);\n      if (((*permission)[2] & 0xe0000) == 0xe0000) {\n        if (permission[3] == (uint *)0x0) {\n          permission[10] = (uint *)((uint)permission[10] & 0xfffffeff);\n          if (((uint)permission[10] & 0x1000) == 0) {\n            permission[10] = (uint *)((uint)permission[10] | 1);\n            result = 0;\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        result = 0;\n      }\n    }\n  }\n  else {\n    permission[10] = (uint *)((uint)permission[10] | 0x20);\n    *(undefined *)(permission + 9) = 0;\n    result = 1;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_0800376c": "check_access_0800376c",
                "param_1": "permission",
                "param_2": "timeout",
                "uVar2": "randomSeed",
                "iVar3": "threshold",
                "uVar4": "result",
                "puVar5": "permissionFlags",
                "uVar6": "calculationResult",
                "local_1c": "counter"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08005bb8",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080038dc": {
            "entrypoint": "0x080038dc",
            "current_name": "retrieve_value_080038dc",
            "code": "\nundefined4 retrieveValue_080038dc(int *inputList)\n\n{\n  return *(undefined4 *)(*inputList + 0x4c);\n}\n\n",
            "renaming": {
                "FUN_080038dc": "retrieve_value_080038dc",
                "param_1": "inputList"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080038e4": {
            "entrypoint": "0x080038e4",
            "current_name": "update_config_080038e4",
            "code": "\nundefined4 updateConfig_080038e4(int *config,uint *values)\n\n{\n  undefined4 result;\n  uint index;\n  int count;\n  \n  if (*(char *)(config + 9) == '\\x01') {\n    result = 2;\n  }\n  else {\n    *(undefined *)(config + 9) = 1;\n    index = values[1];\n    if (index < 7) {\n      index = index * 5 - 5;\n      *(uint *)(*config + 0x34) =\n           *values << (index & 0xff) | *(uint *)(*config + 0x34) & ~(0x1f << (index & 0xff));\n    }\n    else if (index < 0xd) {\n      index = index * 5 - 0x23;\n      *(uint *)(*config + 0x30) =\n           *values << (index & 0xff) | *(uint *)(*config + 0x30) & ~(0x1f << (index & 0xff));\n    }\n    else {\n      index = index * 5 - 0x41;\n      *(uint *)(*config + 0x2c) =\n           *values << (index & 0xff) | *(uint *)(*config + 0x2c) & ~(0x1f << (index & 0xff));\n    }\n    index = *values;\n    if (index < 10) {\n      *(uint *)(*config + 0x10) =\n           values[2] << (index * 3 & 0xff) |\n           *(uint *)(*config + 0x10) & ~(7 << (index * 3 & 0xff));\n    }\n    else {\n      index = index * 3 - 0x1e;\n      *(uint *)(*config + 0xc) =\n           values[2] << (index & 0xff) | *(uint *)(*config + 0xc) & ~(7 << (index & 0xff));\n    }\n    if (*values - 0x10 < 2) {\n      if (*config == 0x40012400) {\n        if ((uRam40012408 & 0x800000) == 0) {\n          uRam40012408 = uRam40012408 | 0x800000;\n          if (*values == 0x10) {\n            for (count = (DAT_20000018 / 1000000) * 10; count != 0; count = count + -1) {\n            }\n            result = 0;\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        config[10] = config[10] | 0x20;\n        result = 1;\n      }\n    }\n    else {\n      result = 0;\n    }\n    *(undefined *)(config + 9) = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080038e4": "update_config_080038e4",
                "param_1": "config",
                "param_2": "values",
                "uVar1": "result",
                "uVar2": "index",
                "local_c": "count"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a1c": {
            "entrypoint": "0x08003a1c",
            "current_name": "get_pointer_value_08003a1c",
            "code": "\nundefined4 getPointerValue_08003a1c(int pointerAddress)\n\n{\n  return *(undefined4 *)(pointerAddress + 0x28);\n}\n\n",
            "renaming": {
                "FUN_08003a1c": "get_pointer_value_08003a1c",
                "param_1": "pointerAddress"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a20": {
            "entrypoint": "0x08003a20",
            "current_name": "mark_as_checked_08003a20",
            "code": "\nundefined4 markAsChecked_08003a20(int *data,undefined4 value)\n\n{\n  int result;\n  undefined4 returnValue;\n  int ptrData;\n  uint delay;\n  \n  ptrData = *data;\n  if ((*(uint *)(ptrData + 8) & 1) == 0) {\n    *(uint *)(ptrData + 8) = *(uint *)(ptrData + 8) | 1;\n    for (delay = DAT_20000018 / 1000000; delay != 0; delay = delay - 1) {\n    }\n    ptrData = FUN_08003760(data,value,DAT_20000018 * 0x431bde83);\n    do {\n      if ((*(uint *)(*data + 8) & 1) != 0) {\n        return 0;\n      }\n      result = FUN_08003760();\n    } while ((uint)(result - ptrData) < 3);\n    data[10] = data[10] | 0x10;\n    data[0xb] = data[0xb] | 1;\n    *(undefined *)(data + 9) = 0;\n    returnValue = 1;\n  }\n  else {\n    returnValue = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08003a20": "mark_as_checked_08003a20",
                "param_1": "data",
                "param_2": "value",
                "iVar1": "result",
                "iVar3": "ptrData",
                "uVar2": "returnValue",
                "local_14": "delay"
            },
            "calling": [
                "FUN_08003e20",
                "FUN_08003aa0"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003aa0": {
            "entrypoint": "0x08003aa0",
            "current_name": "initialize_data_08003aa0",
            "code": "\n\n\nint initializeData_08003aa0(int *data)\n\n{\n  int result;\n  undefined4 *dataPtr;\n  int value;\n  \n  if (*(char *)(data + 9) != '\\x01') {\n    *(undefined *)(data + 9) = 1;\n    result = FUN_08003a20();\n    if (result == 0) {\n      value = value & constantMask1 | 0x100;\n      dataPtr = (undefined4 *)*data;\n      if ((dataPtr == (undefined4 *)0x40012800) && ((_DAT_40012404 & 0xf0000) != 0)) {\n        value = value | 0x100000;\n        if ((_DAT_40012404 & 0x400) != 0) {\n          value = value & 0xffffcfffU | 0x1000;\n        }\n      }\n      else {\n        value = value & 0xffefffff;\n        if ((dataPtr[1] & 0x400) != 0) {\n          value = value & 0xffffcfffU | 0x1000;\n        }\n      }\n      if ((value & constantMask5) == 0) {\n        value2 = 0;\n      }\n      else {\n        value2 = value2 & 0xfffffff9;\n      }\n      *(undefined *)(data + 9) = 0;\n      *dataPtr = 0xfffffffd;\n      value = *data;\n      if (((*(uint *)(value + 8) & 0xe0000) == 0xe0000) &&\n         ((value != 0x40012800 || ((_DAT_40012404 & 0xf0000) == 0)))) {\n        *(uint *)(value + 8) = *(uint *)(value + 8) | 0x500000;\n      }\n      else {\n        *(uint *)(value + 8) = *(uint *)(value + 8) | 0x100000;\n      }\n    }\n    else {\n      *(undefined *)(data + 9) = 0;\n    }\n    return result;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08003aa0": "initialize_data_08003aa0",
                "param_1": "data",
                "iVar1": "result",
                "puVar2": "dataPtr",
                "iVar3": "value",
                "param_1[10]": "value",
                "param_1[0xb]": "value2",
                "0xfffffcfeU": "constantMask1",
                "0x1000U": "constantMask5"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08003a20"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003b8c": {
            "entrypoint": "0x08003b8c",
            "current_name": "check_and_modify_flags_08003b8c",
            "code": "\nundefined4 checkAndModifyFlags_08003b8c(int *inputArray)\n\n{\n  int firstResult;\n  int flagValue;\n  \n  flagValue = *inputArray;\n  if ((*(uint *)(flagValue + 8) & 1) == 0) {\n    return 0;\n  }\n  *(uint *)(flagValue + 8) = *(uint *)(flagValue + 8) & 0xfffffffe;\n  flagValue = FUN_08003760();\n  do {\n    if ((*(uint *)(*inputArray + 8) & 1) == 0) {\n      return 0;\n    }\n    firstResult = FUN_08003760();\n  } while ((uint)(firstResult - flagValue) < 3);\n  inputArray[10] = inputArray[10] | 0x10;\n  inputArray[0xb] = inputArray[0xb] | 1;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08003b8c": "check_and_modify_flags_08003b8c",
                "param_1": "inputArray",
                "iVar1": "firstResult",
                "iVar2": "flagValue"
            },
            "calling": [
                "FUN_08003bd8",
                "FUN_08003ce8",
                "FUN_08003e20",
                "FUN_08003de4"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003bd8": {
            "entrypoint": "0x08003bd8",
            "current_name": "check_status_08003bd8",
            "code": "\nundefined4 checkStatus_08003bd8(int *data)\n\n{\n  int status;\n  uint flag1;\n  uint flag2;\n  \n  if (data == (int *)0x0) {\n    return 1;\n  }\n  if (data[10] == 0) {\n    data[0xb] = 0;\n    *(undefined *)(data + 9) = 0;\n    FUN_08006ca8();\n  }\n  status = FUN_08003b8c(data);\n  if (((data[10] & 0x10U) == 0) && (status == 0)) {\n    data[10] = data[10] & 0xffffeefdU | 2;\n    flag1 = data[1] | data[7] | data[3] << 1;\n    if (data[2] == 0x100) {\n      flag2 = 0x100;\n    }\n    else {\n      flag2 = 0;\n      if (data[2] == 1) {\n        flag2 = 0x100;\n      }\n    }\n    if (data[5] == 1) {\n      if (data[3] == 0) {\n        flag2 = flag2 | (data[6] + -1) * 0x2000 | 0x800;\n      }\n      else {\n        data[10] = data[10] | 0x20;\n        data[0xb] = data[0xb] | 1;\n      }\n    }\n    *(uint *)(*data + 4) = flag2 | *(uint *)(*data + 4) & 0xffff16ff;\n    *(uint *)(*data + 8) = *(uint *)(*data + 8) & 0xffe1f7fd | flag1;\n    if ((data[2] == 0x100) || (data[2] == 1)) {\n      flag2 = (data[4] + -1) * 0x100000;\n    }\n    else {\n      flag2 = 0;\n    }\n    *(uint *)(*data + 0x2c) = flag2 | *(uint *)(*data + 0x2c) & 0xff0fffff;\n    if (flag1 != (*(uint *)(*data + 8) & 0xff1f0efe)) {\n      data[10] = data[10] & 0xffffffedU | 0x10;\n      data[0xb] = data[0xb] | 1;\n      return 1;\n    }\n    data[0xb] = 0;\n    data[10] = data[10] & 0xfffffffcU | 1;\n    return 0;\n  }\n  data[10] = data[10] | 0x10;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08003bd8": "check_status_08003bd8",
                "param_1": "data",
                "iVar1": "status",
                "uVar2": "flag1",
                "uVar3": "flag2"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08006ca8",
                "FUN_08003b8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ce8": {
            "entrypoint": "0x08003ce8",
            "current_name": "disable_memory_protection_08003ce8",
            "code": "\nint disableMemoryProtection_08003ce8(int *memoryRegion)\n\n{\n  int result;\n  \n  if (memoryRegion == (int *)0x0) {\n    result = 1;\n  }\n  else {\n    memoryRegion[10] = memoryRegion[10] | 2;\n    result = FUN_08003b8c();\n    if (result == 0) {\n      *(undefined4 *)*memoryRegion = 0xffffffe0;\n      *(uint *)(*memoryRegion + 4) = *(uint *)(*memoryRegion + 4) & 0xff3f0000;\n      *(uint *)(*memoryRegion + 8) = *(uint *)(*memoryRegion + 8) & 0xff0106f0;\n      *(uint *)(*memoryRegion + 0xc) = *(uint *)(*memoryRegion + 0xc) & 0xff000000;\n      *(uint *)(*memoryRegion + 0x10) = *(uint *)(*memoryRegion + 0x10) & 0xc0000000;\n      *(uint *)(*memoryRegion + 0x14) = *(uint *)(*memoryRegion + 0x14) & 0xfffff000;\n      *(uint *)(*memoryRegion + 0x18) = *(uint *)(*memoryRegion + 0x18) & 0xfffff000;\n      *(uint *)(*memoryRegion + 0x1c) = *(uint *)(*memoryRegion + 0x1c) & 0xfffff000;\n      *(uint *)(*memoryRegion + 0x20) = *(uint *)(*memoryRegion + 0x20) & 0xfffff000;\n      *(uint *)(*memoryRegion + 0x24) = *(uint *)(*memoryRegion + 0x24) & 0xfffff000;\n      *(uint *)(*memoryRegion + 0x28) = *(uint *)(*memoryRegion + 0x28) & 0xfffff000;\n      *(uint *)(*memoryRegion + 0x2c) = *(uint *)(*memoryRegion + 0x2c) & 0xff000000;\n      *(uint *)(*memoryRegion + 0x2c) = *(uint *)(*memoryRegion + 0x2c) & 0xff000000;\n      *(uint *)(*memoryRegion + 0x30) = *(uint *)(*memoryRegion + 0x30) & 0xc0000000;\n      *(uint *)(*memoryRegion + 0x34) = *(uint *)(*memoryRegion + 0x34) & 0xc0000000;\n      *(uint *)(*memoryRegion + 0x38) = *(uint *)(*memoryRegion + 0x38) & 0xffc00000;\n      *(uint *)(*memoryRegion + 0x38) = *(uint *)(*memoryRegion + 0x38) & 0xffc00000;\n      FUN_08006d24(memoryRegion);\n      memoryRegion[0xb] = 0;\n      memoryRegion[10] = 0;\n    }\n    *(undefined *)(memoryRegion + 9) = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08003ce8": "disable_memory_protection_08003ce8",
                "param_1": "memoryRegion",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08006d24",
                "FUN_08003b8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003de4": {
            "entrypoint": "0x08003de4",
            "current_name": "update_flag_and_return_value_08003de4",
            "code": "\nint updateFlagAndReturnValue_08003de4(int flagValue)\n\n{\n  int returnValue;\n  \n  if (*(char *)(flagValue + 0x24) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(flagValue + 0x24) = 1;\n  returnValue = FUN_08003b8c();\n  if (returnValue == 0) {\n    *(uint *)(flagValue + 0x28) = *(uint *)(flagValue + 0x28) & 0xffffeefe | 1;\n  }\n  *(undefined *)(flagValue + 0x24) = 0;\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08003de4": "update_flag_and_return_value_08003de4",
                "param_1": "flagValue",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08003b8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003e20": {
            "entrypoint": "0x08003e20",
            "current_name": "check_and_update_data_08003e20",
            "code": "\nint check_and_update_data_08003e20(int *data_pointer)\n\n{\n  uint constant_value;\n  int status;\n  uint result;\n  int initial_counter;\n  int current_counter;\n  int loop_counter;\n  \n  if (*(char *)(data_pointer + 9) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(data_pointer + 9) = 1;\n  status = FUN_08003b8c();\n  if (status == 0) {\n    data_pointer[10] = data_pointer[10] & 0xffffeefdU | 2;\n    constant_value = DAT_20000018;\n    result = FUN_08005bb8(2);\n    for (loop_counter = constant_value / result << 1; loop_counter != 0; loop_counter = loop_counter + -1) {\n    }\n    FUN_08003a20(data_pointer);\n    *(uint *)(*data_pointer + 8) = *(uint *)(*data_pointer + 8) | 8;\n    initial_counter = FUN_08003760();\n    while (current_counter = *data_pointer, (*(uint *)(current_counter + 8) & 8) != 0) {\n      current_counter = FUN_08003760();\n      if (10 < (uint)(current_counter - initial_counter)) {\n        data_pointer[10] = data_pointer[10] & 0xffffffedU | 0x10;\n        *(undefined *)(data_pointer + 9) = 0;\n        return 1;\n      }\n    }\n    *(uint *)(current_counter + 8) = *(uint *)(current_counter + 8) | 4;\n    initial_counter = FUN_08003760();\n    while ((*(uint *)(*data_pointer + 8) & 4) != 0) {\n      current_counter = FUN_08003760();\n      if (10 < (uint)(current_counter - initial_counter)) {\n        data_pointer[10] = data_pointer[10] & 0xffffffedU | 0x10;\n        *(undefined *)(data_pointer + 9) = 0;\n        return 1;\n      }\n    }\n    data_pointer[10] = data_pointer[10] & 0xfffffffcU | 1;\n  }\n  *(undefined *)(data_pointer + 9) = 0;\n  return status;\n}\n\n",
            "renaming": {
                "FUN_08003e20": "check_and_update_data_08003e20",
                "param_1": "data_pointer",
                "uVar1": "constant_value",
                "uVar3": "result",
                "iVar2": "status",
                "iVar4": "initial_counter",
                "iVar5": "current_counter",
                "local_14": "loop_counter"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08003a20",
                "FUN_08003b8c",
                "FUN_08005bb8",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f0c": {
            "entrypoint": "0x08003f0c",
            "current_name": "update_configuration_08003f0c",
            "code": "\n\n\nvoid updateConfiguration_08003f0c(uint inputValue)\n\n{\n  _DAT_e000ed0c = (inputValue & 7) << 8 | _DAT_e000ed0c & 0xf8ff | 0x5fa0000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f0c": "update_configuration_08003f0c",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08008f0e",
                "FUN_08003724"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f30": {
            "entrypoint": "0x08003f30",
            "current_name": "write_data_to_memory_08003f30",
            "code": "\n\n\nvoid write_data_to_memory_08003f30(uint memory_address,uint bitmask,uint value)\n\n{\n  uint shift_right_amount;\n  uint shift_left_amount;\n  \n  shift_right_amount = (uint)(_DAT_e000ed0c << 0x15) >> 0x1d;\n  shift_left_amount = 7 - shift_right_amount;\n  if (3 < shift_left_amount) {\n    shift_left_amount = 4;\n  }\n  if (shift_right_amount + 4 < 7) {\n    shift_right_amount = 0;\n  }\n  else {\n    shift_right_amount = shift_right_amount - 3;\n  }\n  shift_right_amount = (bitmask & (1 << (shift_left_amount & 0xff)) - 1U) << (shift_right_amount & 0xff) |\n          (1 << (shift_right_amount & 0xff)) - 1U & value;\n  if ((int)memory_address < 0) {\n    *(char *)((memory_address & 0xf) + 0xe000ed14) = (char)(shift_right_amount << 4);\n  }\n  else {\n    *(char *)(memory_address + 0xe000e400) = (char)(shift_right_amount << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f30": "write_data_to_memory_08003f30",
                "param_1": "memory_address",
                "param_2": "bitmask",
                "param_3": "value",
                "uVar1": "shift_right_amount",
                "uVar2": "shift_left_amount"
            },
            "calling": [
                "FUN_08007648",
                "FUN_080077b0",
                "FUN_08008694",
                "FUN_080036d8",
                "FUN_080035b8",
                "FUN_0800863c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f94": {
            "entrypoint": "0x08003f94",
            "current_name": "set_bit_08003f94",
            "code": "\nvoid setBit_08003f94(uint bitIndex)\n\n{\n  if (-1 < (int)bitIndex) {\n    *(int *)((bitIndex >> 5) * 4 + -0x1fff1f00) = 1 << (bitIndex & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f94": "set_bit_08003f94",
                "param_1": "bitIndex"
            },
            "calling": [
                "FUN_08007648",
                "FUN_080077b0",
                "FUN_08008694",
                "FUN_0800863c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003fb0": {
            "entrypoint": "0x08003fb0",
            "current_name": "set_bit_in_memory_08003fb0",
            "code": "\nvoid setBitInMemory_08003fb0(uint bitPosition)\n\n{\n  if (-1 < (int)bitPosition) {\n    *(int *)(((bitPosition >> 5) + 0x20) * 4 + -0x1fff1f00) = 1 << (bitPosition & 0x1f);\n    dataSyncBarrier(0xf);\n    instructionSyncBarrier(0xf);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003fb0": "set_bit_in_memory_08003fb0",
                "param_1": "bitPosition",
                "DataSynchronizationBarrier": "dataSyncBarrier",
                "InstructionSynchronizationBarrier": "instructionSyncBarrier"
            },
            "calling": [
                "FUN_080076e0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003fd8": {
            "entrypoint": "0x08003fd8",
            "current_name": "set_param_values_08003fd8",
            "code": "\n\n\nundefined4 set_param_values_08003fd8(int value)\n\n{\n  if (value - 1U < 0x1000000) {\n    _DAT_e000e014 = value - 1U;\n    DAT_e000ed23 = 0xf0;\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08003fd8": "set_param_values_08003fd8",
                "param_1": "value"
            },
            "calling": [
                "FUN_080036d8",
                "FUN_080035b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004004": {
            "entrypoint": "0x08004004",
            "current_name": "set_bit_in_array_08004004",
            "code": "\nvoid setBitInArray_08004004(uint index)\n\n{\n  if (-1 < (int)index) {\n    *(int *)(((index >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (index & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004004": "set_bit_in_array_08004004",
                "param_1": "index"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004024": {
            "entrypoint": "0x08004024",
            "current_name": "set_flag_based_on_value_08004024",
            "code": "\n\n\nvoid setFlagBasedOnValue_08004024(int value)\n\n{\n  if (value != 4) {\n    _DAT_e000e010 = _DAT_e000e010 & 0xfffffffb;\n    return;\n  }\n  _DAT_e000e010 = _DAT_e000e010 | 4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004024": "set_flag_based_on_value_08004024",
                "param_1": "value"
            },
            "calling": [
                "FUN_080035b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004044": {
            "entrypoint": "0x08004044",
            "current_name": "FUNC_08004044",
            "code": "\nvoid FUNC_08004044(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004044": "FUNC_08004044"
            },
            "calling": [
                "FUN_08004046"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004046": {
            "entrypoint": "0x08004046",
            "current_name": "initialize_system_08004046",
            "code": "\nvoid initializeSystem_08004046(void)\n\n{\n  FUNC_08004044();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004046": "initialize_system_08004046"
            },
            "calling": [
                "FUN_08007246"
            ],
            "called": [
                "FUN_08004044"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004050": {
            "entrypoint": "0x08004050",
            "current_name": "apply_configuration_08004050",
            "code": "\n\n\nundefined4 applyConfiguration_08004050(uint **config)\n\n{\n  uint *currentConfig;\n  \n  if (*(char *)((int)config + 0x21) != '\\x02') {\n    config[0xe] = (uint *)0x4;\n    return 1;\n  }\n  **config = **config & 0xfffffff1;\n  **config = **config & 0xfffffffe;\n  currentConfig = *config;\n  if (currentConfig == (uint *)0x40020008) {\n    _DAT_40020004 = 1;\n  }\n  else if (currentConfig == (uint *)0x4002001c) {\n    _DAT_40020004 = 0x10;\n  }\n  else if (currentConfig == (uint *)0x40020030) {\n    _DAT_40020004 = 0x100;\n  }\n  else if (currentConfig == (uint *)0x40020044) {\n    _DAT_40020004 = 0x1000;\n  }\n  else if (currentConfig == (uint *)0x40020058) {\n    _DAT_40020004 = 0x10000;\n  }\n  else if (currentConfig == (uint *)0x4002006c) {\n    _DAT_40020004 = 0x100000;\n  }\n  else {\n    _DAT_40020004 = 0x1000000;\n  }\n  *(undefined *)((int)config + 0x21) = 1;\n  *(undefined *)(config + 8) = 0;\n  if (config[0xd] != (uint *)0x0) {\n    (*(code *)config[0xd])();\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004050": "apply_configuration_08004050",
                "param_1": "config",
                "puVar1": "currentConfig"
            },
            "calling": [
                "FUN_080069ec",
                "FUN_08004f3c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040e8": {
            "entrypoint": "0x080040e8",
            "current_name": "update_bits_080040e8",
            "code": "\n\n\nvoid updateBits_080040e8(uint *bitsToUpdate,uint *targetBits)\n\n{\n  uint *bitsPtr;\n  uint bitMask;\n  uint targetBit;\n  uint bitIndex;\n  uint operation;\n  uint newValue;\n  int bitPosition;\n  int registerIndex;\n  \n  newValue = 0;\n  bitIndex = 0;\n  do {\n    if (0xf < bitIndex) {\n      return;\n    }\n    bitMask = 1 << (bitIndex & 0xff);\n    targetBit = *targetBits & bitMask;\n    if (bitMask == targetBit) {\n      operation = targetBits[1];\n      if (operation == 0x12) {\n        newValue = targetBits[3] + 0xc;\n      }\n      else if (operation < 0x13) {\n        if (operation == 2) {\n          newValue = targetBits[3] + 8;\n        }\n        else if (operation < 3) {\n          if (operation == 0) goto LAB_0800423a;\n          if (operation == 1) {\n            newValue = targetBits[3];\n          }\n        }\n        else if (operation == 3) {\n          newValue = 0;\n        }\n        else if (operation == 0x11) {\n          newValue = targetBits[3] + 4;\n        }\n      }\n      else if (operation == 0x10210000) {\nLAB_0800423a:\n        if (targetBits[2] == 0) {\n          newValue = 4;\n        }\n        else if (targetBits[2] == 1) {\n          bitsToUpdate[4] = bitMask;\n          newValue = 8;\n        }\n        else {\n          bitsToUpdate[5] = bitMask;\n          newValue = 8;\n        }\n      }\n      else if (operation < 0x10210001) {\n        if ((operation == 0x10110000) || (operation == 0x10120000)) goto LAB_0800423a;\n      }\n      else if ((operation == 0x10310000) || ((operation == 0x10320000 || (operation == 0x10220000))))\n      goto LAB_0800423a;\n      bitMask = bitIndex;\n      bitsPtr = bitsToUpdate;\n      if (0xff < targetBit) {\n        bitMask = bitIndex - 8;\n        bitsPtr = bitsToUpdate + 1;\n      }\n      *bitsPtr = *bitsPtr & ~(0xf << (bitMask << 2 & 0xff)) | newValue << (bitMask << 2 & 0xff);\n      if ((targetBits[1] & 0x10000000) != 0) {\n        _DAT_40021018 = _DAT_40021018 | 1;\n        bitPosition = (bitIndex & 3) << 2;\n        if (bitsToUpdate == (uint *)0x40010800) {\n          registerIndex = 0;\n        }\n        else if (bitsToUpdate == (uint *)0x40010c00) {\n          registerIndex = 1;\n        }\n        else if (bitsToUpdate == (uint *)0x40011000) {\n          registerIndex = 2;\n        }\n        else if (bitsToUpdate == (uint *)0x40011400) {\n          registerIndex = 3;\n        }\n        else {\n          registerIndex = 4;\n        }\n        *(uint *)(((bitIndex >> 2) + 2) * 4 + 0x40010000) =\n             *(uint *)(((bitIndex >> 2) + 2) * 4 + 0x40010000) & ~(0xf << bitPosition) | registerIndex << bitPosition;\n        if ((targetBits[1] & 0x10000) == 0) {\n          _DAT_40010400 = _DAT_40010400 & ~targetBit;\n        }\n        else {\n          _DAT_40010400 = _DAT_40010400 | targetBit;\n        }\n        if ((targetBits[1] & 0x20000) == 0) {\n          _DAT_40010404 = _DAT_40010404 & ~targetBit;\n        }\n        else {\n          _DAT_40010404 = _DAT_40010404 | targetBit;\n        }\n        if ((targetBits[1] & 0x100000) == 0) {\n          _DAT_40010408 = _DAT_40010408 & ~targetBit;\n        }\n        else {\n          _DAT_40010408 = _DAT_40010408 | targetBit;\n        }\n        if ((targetBits[1] & 0x200000) == 0) {\n          _DAT_4001040c = _DAT_4001040c & ~targetBit;\n        }\n        else {\n          _DAT_4001040c = targetBit | _DAT_4001040c;\n        }\n      }\n    }\n    bitIndex = bitIndex + 1;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080040e8": "update_bits_080040e8",
                "param_1": "bitsToUpdate",
                "param_2": "targetBits",
                "puVar1": "bitsPtr",
                "uVar2": "bitMask",
                "uVar3": "targetBit",
                "uVar4": "bitIndex",
                "uVar5": "operation",
                "uVar6": "newValue",
                "iVar7": "bitPosition",
                "iVar8": "registerIndex"
            },
            "calling": [
                "FUN_08006ca8",
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08006e68",
                "FUN_08007258"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080042d4": {
            "entrypoint": "0x080042d4",
            "current_name": "check_bit_080042d4",
            "code": "\nundefined4 check_bit_080042d4(int input,uint mask)\n\n{\n  if ((mask & *(uint *)(input + 8)) == 0) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080042d4": "check_bit_080042d4",
                "param_1": "input",
                "param_2": "mask"
            },
            "calling": [
                "FUN_080072f0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080042e2": {
            "entrypoint": "0x080042e2",
            "current_name": "set_param_value_080042e2",
            "code": "\nvoid setParamValue_080042e2(int objectAddress,int paramValue,int conditionalFlag)\n\n{\n  if (conditionalFlag == 0) {\n    *(int *)(objectAddress + 0x10) = paramValue << 0x10;\n    return;\n  }\n  *(int *)(objectAddress + 0x10) = paramValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080042e2": "set_param_value_080042e2",
                "param_1": "objectAddress",
                "param_2": "paramValue",
                "param_3": "conditionalFlag"
            },
            "calling": [
                "FUN_080072d8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080042f0": {
            "entrypoint": "0x080042f0",
            "current_name": "check_and_update_param_080042f0",
            "code": "\n\n\nvoid checkAndUpdateParam_080042f0(uint parameter)\n\n{\n  if ((_DAT_40010414 & parameter) != 0) {\n    _DAT_40010414 = parameter;\n    FUN_08009094();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080042f0": "check_and_update_param_080042f0",
                "param_1": "parameter"
            },
            "calling": [],
            "called": [
                "FUN_08009094"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800430c": {
            "entrypoint": "0x0800430c",
            "current_name": "set_permission_flag_0800430c",
            "code": "\nundefined4 setPermissionFlag_0800430c(int *p_data)\n\n{\n  if (*(char *)((int)p_data + 0x3e) == '@') {\n    if (p_data[20] == 0) {\n      *(uint *)(*p_data + 0x10) = p_data[17] & 0xfe;\n    }\n    else {\n      *(uint *)(*p_data + 0x10) = p_data[17] & 0xffU | 1;\n    }\n  }\n  else if (p_data[4] == 0x4000) {\n    if (*(char *)((int)p_data + 0x3d) == '!') {\n      *(uint *)(*p_data + 0x10) = p_data[17] & 0xfe;\n    }\n    else {\n      *(uint *)(*p_data + 0x10) = p_data[17] & 0xffU | 1;\n    }\n  }\n  else if (p_data[20] == 0) {\n    *(uint *)(*p_data + 0x10) = (uint)(p_data[17] << 0x10) >> 0x17 & 6 | 0xf0;\n  }\n  else if (p_data[20] == 1) {\n    *(uint *)(*p_data + 0x10) = (uint)(p_data[17] << 0x10) >> 0x17 & 6 | 0xf1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800430c": "set_permission_flag_0800430c",
                "param_1": "p_data",
                "param_1[0x14]": "p_data[20]",
                "param_1[0x11]": "p_data[17]"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004396": {
            "entrypoint": "0x08004396",
            "current_name": "set_byte_value_from_param_array_08004396",
            "code": "\nundefined4 setByteValueFromParamArray_08004396(int *paramArray)\n\n{\n  *(uint *)(*paramArray + 0x10) = sourceValue & 0xff;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004396": "set_byte_value_from_param_array_08004396",
                "param_1": "paramArray",
                "param_1[0x11]": "sourceValue"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080043a2": {
            "entrypoint": "0x080043a2",
            "current_name": "process_flags_080043a2",
            "code": "\nundefined4 processFlags_080043a2(uint **flags)\n\n{\n  uint *flagPtr;\n  \n  flagPtr = flags[0xb];\n  if ((*(char *)((int)flags + 0x3d) == '\\\"') &&\n     ((flags[0x14] != (uint *)0x0 || (*(char *)((int)flags + 0x3e) != '@')))) {\n    if ((flags[0x14] == (uint *)0x0) && (flags[4] == (uint *)0xc000)) {\n      **flags = **flags | 0x100;\n      flags[0x14] = (uint *)((int)flags[0x14] + 1);\n    }\n    else {\n      if (*(short *)((int)flags + 0x2a) == 0) {\n        **flags = **flags | 0x200;\n      }\n      else if (*(short *)((int)flags + 0x2a) == 1) {\n        if (flagPtr == (uint *)0xffff0000) {\n          **flags = **flags & 0xfffffbff;\n          flagPtr = *flags;\n          if ((flagPtr[1] & 0x800) == 0) {\n            *flagPtr = *flagPtr | 0x200;\n          }\n          else {\n            *flagPtr = *flagPtr & 0xfffffbff;\n          }\n        }\n        else if (((flagPtr == (uint *)0x4) || (flagPtr == (uint *)0x8)) ||\n                (flags[0xc] == (uint *)0x12)) {\n          **flags = **flags & 0xfffffbff;\n          **flags = **flags | 0x200;\n        }\n        else if (flags[0xb] == (uint *)0x2) {\n          **flags = **flags | 0x400;\n        }\n        else {\n          **flags = **flags & 0xfffffbff;\n        }\n      }\n      else if (*(short *)((int)flags + 0x2a) == 2) {\n        if (flags[0xb] == (uint *)0x2) {\n          **flags = **flags | 0x400;\n        }\n        else {\n          **flags = **flags | 0x800;\n          **flags = **flags & 0xfffffbff;\n        }\n        flagPtr = *flags;\n        if ((flagPtr[1] & 0x800) != 0) {\n          flagPtr[1] = flagPtr[1] | 0x1000;\n        }\n      }\n      else {\n        **flags = **flags | 0x400;\n        flagPtr = *flags;\n        if ((flagPtr[1] & 0x800) != 0) {\n          flagPtr[1] = flagPtr[1] | 0x1000;\n        }\n      }\n      flags[0x14] = (uint *)0x0;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080043a2": "process_flags_080043a2",
                "param_1": "flags",
                "puVar1": "flagPtr"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800457c": {
            "entrypoint": "0x0800457c",
            "current_name": "process_data_0800457c",
            "code": "\nundefined4 processData_0800457c(int *data)\n\n{\n  byte *bytePointer;\n  \n  if (*(short *)((int)data + 0x2a) != 0) {\n    bytePointer = (byte *)data[9];\n    data[9] = (int)(bytePointer + 1);\n    *(uint *)(*data + 0x10) = (uint)*bytePointer;\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800457c": "process_data_0800457c",
                "param_1": "data",
                "pbVar1": "bytePointer"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800459c": {
            "entrypoint": "0x0800459c",
            "current_name": "update_param_0800459c",
            "code": "\nundefined4 updateParam_0800459c(int *param)\n\n{\n  undefined *ptrToData;\n  \n  if (*(short *)((int)param + 0x2a) != 0) {\n    ptrToData = (undefined *)param[9];\n    param[9] = (int)(ptrToData + 1);\n    *ptrToData = (char)*(undefined4 *)(*param + 0x10);\n    *(short *)((int)param + 0x2a) = *(short *)((int)param + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800459c": "update_param_0800459c",
                "param_1": "param",
                "puVar1": "ptrToData"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080045bc": {
            "entrypoint": "0x080045bc",
            "current_name": "FUNC_080045bc",
            "code": "\nvoid FUNC_080045bc(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080045bc": "FUNC_080045bc"
            },
            "calling": [
                "FUN_080045c0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080045c0": {
            "entrypoint": "0x080045c0",
            "current_name": "improve_code_080045c0",
            "code": "\nundefined4 improve_code_080045c0(uint **param)\n\n{\n  bool is_less_than_threshold;\n  uint calculated_value;\n  uint *pointer_to_value;\n  uint modified_value;\n  \n  if (param == (uint **)0x0) {\n    return 1;\n  }\n  if (*(char *)((int)param + 0x3d) == '\\0') {\n    *(undefined *)(param + 0xf) = 0;\n    FUNC_080045bc();\n  }\n  *(undefined *)((int)param + 0x3d) = 0x24;\n  **param = **param & 0xfffffffe;\n  calculated_value = FUN_08005a28();\n  if (param[1] < (uint *)0x186a1) {\n    if (calculated_value < 2000000) {\n      is_less_than_threshold = true;\n    }\n    else {\n      is_less_than_threshold = false;\n    }\n  }\n  else {\n    is_less_than_threshold = calculated_value < 4000000;\n  }\n  if (is_less_than_threshold) {\n    return 1;\n  }\n  modified_value = calculated_value / 1000000;\n  (*param)[1] = modified_value;\n  if ((uint *)0x186a0 < param[1]) {\n    modified_value = (modified_value * 300) / 1000;\n  }\n  (*param)[8] = modified_value + 1;\n  pointer_to_value = param[1];\n  if (pointer_to_value < (uint *)0x186a1) {\n    calculated_value = (calculated_value - 1) / (uint)((int)pointer_to_value << 1) + 1 & 0xfff;\n    if (calculated_value < 4) {\n      calculated_value = 4;\n    }\n  }\n  else {\n    if (param[2] == (uint *)0x0) {\n      modified_value = (calculated_value - 1) / (uint)((int)pointer_to_value * 3);\n    }\n    else {\n      modified_value = (calculated_value - 1) / (uint)((int)pointer_to_value * 0x19);\n    }\n    if ((modified_value + 1 & 0xfff) == 0) {\n      calculated_value = 1;\n    }\n    else if (param[2] == (uint *)0x0) {\n      calculated_value = (calculated_value - 1) / (uint)((int)pointer_to_value * 3) + 1 & 0xfff | 0x8000;\n    }\n    else {\n      calculated_value = (calculated_value - 1) / (uint)((int)pointer_to_value * 0x19) + 1 & 0xfff | 0xc000;\n    }\n  }\n  (*param)[7] = calculated_value;\n  **param = (uint)param[7] | (uint)param[8];\n  (*param)[2] = (uint)param[4] | (uint)param[3];\n  (*param)[3] = (uint)param[5] | (uint)param[6];\n  **param = **param | 1;\n  param[0x10] = (uint *)0x0;\n  *(undefined *)((int)param + 0x3d) = 0x20;\n  param[0xc] = (uint *)0x0;\n  *(undefined *)((int)param + 0x3e) = 0;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080045c0": "improve_code_080045c0",
                "param_1": "param",
                "bVar1": "is_less_than_threshold",
                "uVar2": "calculated_value",
                "puVar3": "pointer_to_value",
                "uVar4": "modified_value"
            },
            "calling": [
                "FUN_080077b0"
            ],
            "called": [
                "FUN_080045bc",
                "FUN_08005a28"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004728": {
            "entrypoint": "0x08004728",
            "current_name": "process_data_08004728",
            "code": "\nundefined4 processData_08004728(uint **paramArray,uint *inputParam1,uint *inputParam2,undefined2 inputParam3)\n\n{\n  undefined4 returnValue;\n  uint *ptrVar;\n  int loopCounter;\n  \n  if (*(char *)((int)paramArray + 0x3d) == ' ') {\n    loopCounter = (DAT_20000018 / 25000) * 0x19;\n    do {\n      if (loopCounter == 0) {\n        paramArray[0xc] = (uint *)0x0;\n        *(undefined *)((int)paramArray + 0x3d) = 0x20;\n        *(undefined *)(paramArray + 0xf) = 0;\n        return 3;\n      }\n      ptrVar = *paramArray;\n      loopCounter = loopCounter + -1;\n    } while ((ptrVar[6] & 2) != 0);\n    if (*(char *)(paramArray + 0xf) == '\\x01') {\n      returnValue = 2;\n    }\n    else {\n      *(undefined *)(paramArray + 0xf) = 1;\n      if ((*ptrVar & 1) == 0) {\n        *ptrVar = *ptrVar | 1;\n      }\n      **paramArray = **paramArray & 0xfffff7ff;\n      *(undefined *)((int)paramArray + 0x3d) = 0x21;\n      *(undefined *)((int)paramArray + 0x3e) = 0x10;\n      returnValue = 0;\n      paramArray[0x10] = (uint *)0x0;\n      paramArray[9] = inputParam2;\n      *(undefined2 *)((int)paramArray + 0x2a) = inputParam3;\n      paramArray[0xb] = (uint *)0xffff0000;\n      *(undefined2 *)(paramArray + 10) = *(undefined2 *)((int)paramArray + 0x2a);\n      paramArray[0x11] = inputParam1;\n      **paramArray = **paramArray | 0x100;\n      *(undefined *)(paramArray + 0xf) = 0;\n      (*paramArray)[1] = (*paramArray)[1] | 0x700;\n    }\n  }\n  else {\n    returnValue = 2;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08004728": "process_data_08004728",
                "param_1": "paramArray",
                "param_2": "inputParam1",
                "param_3": "inputParam2",
                "param_4": "inputParam3",
                "uVar1": "returnValue",
                "puVar2": "ptrVar",
                "local_c": "loopCounter"
            },
            "calling": [
                "FUN_08007e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047f4": {
            "entrypoint": "0x080047f4",
            "current_name": "process_params_080047f4",
            "code": "\nundefined4 processParams_080047f4(uint **ppParams,uint *pInput1,uint *pInput2,undefined2 param4)\n\n{\n  undefined4 result;\n  uint *pTemp;\n  int counter;\n  \n  if (*(char *)((int)ppParams + 0x3d) == ' ') {\n    counter = (DAT_20000018 / 25000) * 0x19;\n    do {\n      if (counter == 0) {\n        ppParams[0xc] = (uint *)0x0;\n        *(undefined *)((int)ppParams + 0x3d) = 0x20;\n        *(undefined *)(ppParams + 0xf) = 0;\n        return 3;\n      }\n      pTemp = *ppParams;\n      counter = counter + -1;\n    } while ((pTemp[6] & 2) != 0);\n    if (*(char *)(ppParams + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(ppParams + 0xf) = 1;\n      if ((*pTemp & 1) == 0) {\n        *pTemp = *pTemp | 1;\n      }\n      **ppParams = **ppParams & 0xfffff7ff;\n      *(undefined *)((int)ppParams + 0x3d) = 0x22;\n      *(undefined *)((int)ppParams + 0x3e) = 0x10;\n      result = 0;\n      ppParams[0x10] = (uint *)0x0;\n      ppParams[9] = pInput2;\n      *(undefined2 *)((int)ppParams + 0x2a) = param4;\n      ppParams[0xb] = (uint *)0xffff0000;\n      *(undefined2 *)(ppParams + 10) = *(undefined2 *)((int)ppParams + 0x2a);\n      ppParams[0x11] = pInput1;\n      **ppParams = **ppParams | 0x400;\n      **ppParams = **ppParams | 0x100;\n      *(undefined *)(ppParams + 0xf) = 0;\n      (*ppParams)[1] = (*ppParams)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080047f4": "process_params_080047f4",
                "param_1": "ppParams",
                "param_2": "pInput1",
                "param_3": "pInput2",
                "param_4": "param4",
                "uVar1": "result",
                "puVar2": "pTemp",
                "local_c": "counter"
            },
            "calling": [
                "FUN_08007f0e"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080048c8": {
            "entrypoint": "0x080048c8",
            "current_name": "process_param_080048c8",
            "code": "\nundefined4 processParam_080048c8(uint **paramPtr,uint *dataPtr,int size,uint *resultPtr)\n\n{\n  undefined4 returnValue;\n  uint *ptrVar;\n  \n  if (*(char *)((int)paramPtr + 0x3d) == '(') {\n    if (dataPtr == (uint *)0x0) {\n      returnValue = 1;\n    }\n    else if (size == 0) {\n      returnValue = 1;\n    }\n    else if (*(char *)(paramPtr + 0xf) == '\\x01') {\n      returnValue = 2;\n    }\n    else {\n      *(undefined *)(paramPtr + 0xf) = 1;\n      ptrVar = *paramPtr;\n      if ((*ptrVar & 1) == 0) {\n        *ptrVar = *ptrVar | 1;\n      }\n      **paramPtr = **paramPtr & 0xfffff7ff;\n      *(undefined *)((int)paramPtr + 0x3d) = 0x29;\n      *(undefined *)((int)paramPtr + 0x3e) = 0x20;\n      returnValue = 0;\n      paramPtr[0x10] = (uint *)0x0;\n      paramPtr[9] = dataPtr;\n      *(short *)((int)paramPtr + 0x2a) = (short)size;\n      paramPtr[0xb] = resultPtr;\n      *(undefined2 *)(paramPtr + 10) = *(undefined2 *)((int)paramPtr + 0x2a);\n      *(undefined *)(paramPtr + 0xf) = 0;\n      (*paramPtr)[1] = (*paramPtr)[1] | 0x700;\n    }\n  }\n  else {\n    returnValue = 2;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_080048c8": "process_param_080048c8",
                "param_1": "paramPtr",
                "param_2": "dataPtr",
                "param_3": "size",
                "param_4": "resultPtr",
                "uVar1": "returnValue",
                "puVar2": "ptrVar"
            },
            "calling": [
                "FUN_08007fa0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004954": {
            "entrypoint": "0x08004954",
            "current_name": "validate_inputs_08004954",
            "code": "\nundefined4 validate_inputs_08004954(uint **input_array,uint *param_ptr,int param_value,uint *output_ptr)\n\n{\n  undefined4 result;\n  uint *temp_ptr;\n  \n  if (*(char *)((int)input_array + 0x3d) == '(') {\n    if (param_ptr == (uint *)0x0) {\n      result = 1;\n    }\n    else if (param_value == 0) {\n      result = 1;\n    }\n    else if (*(char *)(input_array + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(input_array + 0xf) = 1;\n      temp_ptr = *input_array;\n      if ((*temp_ptr & 1) == 0) {\n        *temp_ptr = *temp_ptr | 1;\n      }\n      **input_array = **input_array & 0xfffff7ff;\n      *(undefined *)((int)input_array + 0x3d) = 0x2a;\n      *(undefined *)((int)input_array + 0x3e) = 0x20;\n      result = 0;\n      input_array[0x10] = (uint *)0x0;\n      input_array[9] = param_ptr;\n      *(short *)((int)input_array + 0x2a) = (short)param_value;\n      input_array[0xb] = output_ptr;\n      *(undefined2 *)(input_array + 10) = *(undefined2 *)((int)input_array + 0x2a);\n      *(undefined *)(input_array + 0xf) = 0;\n      (*input_array)[1] = (*input_array)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08004954": "validate_inputs_08004954",
                "param_1": "input_array",
                "param_2": "param_ptr",
                "param_3": "param_value",
                "param_4": "output_ptr",
                "uVar1": "result",
                "puVar2": "temp_ptr"
            },
            "calling": [
                "FUN_08007fa0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080049e0": {
            "entrypoint": "0x080049e0",
            "current_name": "initialize_flags_080049e0",
            "code": "\nundefined4 initializeFlags_080049e0(uint **flags)\n\n{\n  uint *currentFlag;\n  \n  if (*(char *)((int)flags + 0x3d) != ' ') {\n    return 2;\n  }\n  *(undefined *)((int)flags + 0x3d) = 0x28;\n  currentFlag = *flags;\n  if ((*currentFlag & 1) == 0) {\n    *currentFlag = *currentFlag | 1;\n  }\n  **flags = **flags | 0x400;\n  (*flags)[1] = (*flags)[1] | 0x300;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080049e0": "initialize_flags_080049e0",
                "param_1": "flags",
                "puVar1": "currentFlag"
            },
            "calling": [
                "FUN_08008020",
                "FUN_08007f8e",
                "FUN_08007ff0",
                "FUN_08007f7c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a1e": {
            "entrypoint": "0x08004a1e",
            "current_name": "FUNC_08004a1e",
            "code": "\nvoid FUNC_08004a1e(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a1e": "FUNC_08004a1e"
            },
            "calling": [
                "FUN_08004b82",
                "FUN_08004ccc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004a20": {
            "entrypoint": "0x08004a20",
            "current_name": "FUNC_08004a20",
            "code": "\nvoid FUNC_08004a20(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a20": "FUNC_08004a20"
            },
            "calling": [
                "FUN_08004e3c",
                "FUN_08004d6c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004a22": {
            "entrypoint": "0x08004a22",
            "current_name": "FUNC_08004a22",
            "code": "\nvoid FUNC_08004a22(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a22": "FUNC_08004a22"
            },
            "calling": [
                "FUN_08004aec",
                "FUN_08004a24"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004a24": {
            "entrypoint": "0x08004a24",
            "current_name": "process_data_08004a24",
            "code": "\nundefined4 processData_08004a24(int *data)\n\n{\n  char character;\n  byte *bytePointer;\n  \n  character = *(char *)((int)data + 0x3d);\n  if (*(short *)((int)data + 0x2a) != 0) {\n    bytePointer = (byte *)data[9];\n    data[9] = (int)(bytePointer + 1);\n    *(uint *)(*data + 0x10) = (uint)*bytePointer;\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    if ((*(short *)((int)data + 0x2a) == 0) && (character == ')')) {\n      *(uint *)(*data + 4) = *(uint *)(*data + 4) & 0xfffffbff;\n      data[0xc] = 0x21;\n      *(undefined *)((int)data + 0x3d) = 0x28;\n      FUNC_08004a22();\n    }\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004a24": "process_data_08004a24",
                "param_1": "data",
                "cVar1": "character",
                "pbVar2": "bytePointer"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a22"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a74": {
            "entrypoint": "0x08004a74",
            "current_name": "FUNC_08004a74",
            "code": "\nvoid FUNC_08004a74(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a74": "FUNC_08004a74"
            },
            "calling": [
                "FUN_08004a76",
                "FUN_08005084"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004a76": {
            "entrypoint": "0x08004a76",
            "current_name": "process_data_08004a76",
            "code": "\nundefined4 processData_08004a76(int *data)\n\n{\n  char charValue;\n  undefined *buffer;\n  \n  charValue = *(char *)((int)data + 0x3d);\n  if (*(short *)((int)data + 0x2a) != 0) {\n    buffer = (undefined *)data[9];\n    data[9] = (int)(buffer + 1);\n    *buffer = (char)*(undefined4 *)(*data + 0x10);\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    if ((*(short *)((int)data + 0x2a) == 0) && (charValue == '*')) {\n      *(uint *)(*data + 4) = *(uint *)(*data + 4) & 0xfffffbff;\n      value2 = 0x22;\n      *(undefined *)((int)data + 0x3d) = 0x28;\n      FUNC_08004a74();\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004a76": "process_data_08004a76",
                "param_1": "data",
                "cVar1": "charValue",
                "puVar2": "buffer",
                "param_1[0xc]": "value2"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ac2": {
            "entrypoint": "0x08004ac2",
            "current_name": "extract_data_and_call_function_08004ac2",
            "code": "\nundefined4 extractDataAndCallFunction_08004ac2(int *dataPointer,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined2 extractedValue;\n  uint flags;\n  \n  flags = *(uint *)(*dataPointer + 0x18);\n  if ((flags & 0x80) == 0) {\n    extractedValue = *(undefined2 *)(dataPointer + 3);\n  }\n  else {\n    extractedValue = *(undefined2 *)(dataPointer + 6);\n  }\n  FUN_08007fa0(dataPointer,(*(uint *)(*dataPointer + 0x18) & 4) == 0,extractedValue,flags,param4);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004ac2": "extract_data_and_call_function_08004ac2",
                "param_1": "dataPointer",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "extractedValue",
                "uVar2": "flags"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08007fa0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004aec": {
            "entrypoint": "0x08004aec",
            "current_name": "handle_param_08004aec",
            "code": "\nundefined4 handleParam_08004aec(uint **paramList)\n\n{\n  if (((paramVal1 == (uint *)0x4) || (paramVal1 == (uint *)0x8)) &&\n     (*(char *)((int)paramList + 0x3d) == '(')) {\n    paramVal1 = (uint *)0xffff0000;\n    (*paramList)[1] = (*paramList)[1] & 0xfffff8ff;\n    (*paramList)[5] = 0xfffffbff;\n    **paramList = **paramList & 0xfffffbff;\n    paramVal2 = (uint *)0x0;\n    *(undefined *)((int)paramList + 0x3d) = 0x20;\n    *(undefined *)((int)paramList + 0x3e) = 0;\n    FUN_08007ff0();\n  }\n  else if (*(char *)((int)paramList + 0x3d) == '!') {\n    paramVal1 = (uint *)0xffff0000;\n    paramVal2 = (uint *)0x21;\n    *(undefined *)((int)paramList + 0x3d) = 0x20;\n    *(undefined *)((int)paramList + 0x3e) = 0;\n    (*paramList)[1] = (*paramList)[1] & 0xfffff8ff;\n    (*paramList)[5] = 0xfffffbff;\n    **paramList = **paramList & 0xfffffbff;\n    FUNC_08004a22();\n  }\n  else {\n    (*paramList)[5] = 0xfffffbff;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004aec": "handle_param_08004aec",
                "param_1": "paramList",
                "param_1[0xb]": "paramVal1",
                "param_1[0xc]": "paramVal2"
            },
            "calling": [
                "FUN_080052f0"
            ],
            "called": [
                "FUN_08007ff0",
                "FUN_08004a22"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b80": {
            "entrypoint": "0x08004b80",
            "current_name": "FUNC_08004b80",
            "code": "\nvoid FUNC_08004b80(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b80": "FUNC_08004b80"
            },
            "calling": [
                "FUN_08004b82",
                "FUN_08004ccc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004b82": {
            "entrypoint": "0x08004b82",
            "current_name": "parse_command_08004b82",
            "code": "\nundefined4 parseCommand_08004b82(uint **command)\n\n{\n  char firstChar;\n  uint *pointer;\n  \n  firstChar = *(char *)((int)command + 0x3d);\n  pointer = command[11];\n  if ((*(short *)(command + 10) == 0) && (firstChar == '!')) {\n    if ((pointer == (uint *)0x4) || ((pointer == (uint *)0x8 || (pointer == (uint *)0xffff0000)))) {\n      (*command)[1] = (*command)[1] & 0xfffff8ff;\n      **command = **command | 0x200;\n      command[12] = (uint *)0x0;\n      *(undefined *)((int)command + 0x3d) = 0x20;\n      if (*(char *)((int)command + 0x3e) == '@') {\n        *(undefined *)((int)command + 0x3e) = 0;\n        FUNC_08004b80();\n      }\n      else {\n        *(undefined *)((int)command + 0x3e) = 0;\n        FUNC_08004a1e();\n      }\n    }\n    else {\n      (*command)[1] = (*command)[1] & 0xfffff8ff;\n      command[12] = (uint *)0x11;\n      *(undefined *)((int)command + 0x3e) = 0;\n      *(undefined *)((int)command + 0x3d) = 0x20;\n      FUNC_08004a1e();\n    }\n  }\n  else if ((firstChar == '!') || ((*(char *)((int)command + 0x3e) == '@' && (firstChar == '\\\"')))) {\n    if (*(short *)((int)command + 0x2a) == 0) {\n      (*command)[1] = (*command)[1] & 0xfffffbff;\n    }\n    else if (*(char *)((int)command + 0x3e) == '@') {\n      if (command[20] == (uint *)0x0) {\n        if (command[0x13] == (uint *)0x1) {\n          (*command)[4] = (uint)command[0x12] & 0xff;\n          command[20] = (uint *)((int)command[20] + 2);\n        }\n        else {\n          (*command)[4] = (uint)((int)command[0x12] << 0x10) >> 0x18;\n          command[20] = (uint *)((int)command[20] + 1);\n        }\n      }\n      else if (command[20] == (uint *)0x1) {\n        (*command)[4] = (uint)command[0x12] & 0xff;\n        command[20] = (uint *)((int)command[20] + 1);\n      }\n      else if (command[20] == (uint *)0x2) {\n        if (*(char *)((int)command + 0x3d) == '\\\"') {\n          **command = **command | 0x100;\n        }\n        else if (*(char *)((int)command + 0x3d) == '!') {\n          pointer = command[9];\n          command[9] = (uint *)((int)pointer + 1);\n          (*command)[4] = (uint)*(byte *)pointer;\n          *(short *)((int)command + 0x2a) = *(short *)((int)command + 0x2a) + -1;\n        }\n      }\n    }\n    else {\n      pointer = command[9];\n      command[9] = (uint *)((int)pointer + 1);\n      (*command)[4] = (uint)*(byte *)pointer;\n      *(short *)((int)command + 0x2a) = *(short *)((int)command + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004b82": "parse_command_08004b82",
                "param_1": "command",
                "cVar1": "firstChar",
                "puVar2": "pointer",
                "param_1[0xb]": "command[11]",
                "param_1[0xc]": "command[12]",
                "param_1[0x14]": "command[20]"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a1e",
                "FUN_08004b80"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ccc": {
            "entrypoint": "0x08004ccc",
            "current_name": "process_param_08004ccc",
            "code": "\nundefined4 processParam_08004ccc(uint **paramArray)\n\n{\n  uint *ptr;\n  \n  ptr = paramArray[0xb];\n  if (*(char *)((int)paramArray + 0x3d) == '!') {\n    if (*(short *)((int)paramArray + 0x2a) == 0) {\n      if (((ptr == (uint *)0x4) || (ptr == (uint *)0x8)) || (ptr == (uint *)0xffff0000)) {\n        (*paramArray)[1] = (*paramArray)[1] & 0xfffff8ff;\n        **paramArray = **paramArray | 0x200;\n        value3 = (uint *)0x0;\n        *(undefined *)((int)paramArray + 0x3d) = 0x20;\n        if (*(char *)((int)paramArray + 0x3e) == '@') {\n          *(undefined *)((int)paramArray + 0x3e) = 0;\n          FUNC_08004b80();\n        }\n        else {\n          *(undefined *)((int)paramArray + 0x3e) = 0;\n          FUNC_08004a1e();\n        }\n      }\n      else {\n        (*paramArray)[1] = (*paramArray)[1] & 0xfffff8ff;\n        value3 = (uint *)0x11;\n        *(undefined *)((int)paramArray + 0x3e) = 0;\n        *(undefined *)((int)paramArray + 0x3d) = 0x20;\n        FUNC_08004a1e();\n      }\n    }\n    else {\n      ptr = paramArray[9];\n      paramArray[9] = (uint *)((int)ptr + 1);\n      (*paramArray)[4] = (uint)*(byte *)ptr;\n      *(short *)((int)paramArray + 0x2a) = *(short *)((int)paramArray + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004ccc": "process_param_08004ccc",
                "param_1": "paramArray",
                "puVar1": "ptr",
                "param_1[0xc]": "value3"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a1e",
                "FUN_08004b80"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d6a": {
            "entrypoint": "0x08004d6a",
            "current_name": "FUNC_08004d6a",
            "code": "\nvoid FUNC_08004d6a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d6a": "FUNC_08004d6a"
            },
            "calling": [
                "FUN_08004e3c",
                "FUN_08004d6c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004d6c": {
            "entrypoint": "0x08004d6c",
            "current_name": "process_param_08004d6c",
            "code": "\nundefined4 processParam_08004d6c(uint **inputParams)\n\n{\n  uint *tempPtr;\n  \n  if (*(char *)((int)inputParams + 0x3d) == '\\\"') {\n    if (*(ushort *)((int)inputParams + 0x2a) < 4) {\n      if (*(ushort *)((int)inputParams + 0x2a) - 2 < 2) {\n        if (inputParams[0xb] == (uint *)0x2) {\n          **inputParams = **inputParams | 0x400;\n        }\n        else {\n          **inputParams = **inputParams & 0xfffffbff;\n          **inputParams = **inputParams | 0x800;\n        }\n        (*inputParams)[1] = (*inputParams)[1] & 0xfffffbff;\n      }\n      else {\n        if (inputParams[0xb] == (uint *)0x2) {\n          **inputParams = **inputParams | 0x400;\n        }\n        else {\n          **inputParams = **inputParams & 0xfffffbff;\n        }\n        (*inputParams)[1] = (*inputParams)[1] & 0xfffff8ff;\n        tempPtr = inputParams[9];\n        inputParams[9] = (uint *)((int)tempPtr + 1);\n        *(char *)tempPtr = (char)(*inputParams)[4];\n        *(short *)((int)inputParams + 0x2a) = *(short *)((int)inputParams + 0x2a) + -1;\n        *(undefined *)((int)inputParams + 0x3d) = 0x20;\n        inputParams[0xc] = (uint *)0x0;\n        if (*(char *)((int)inputParams + 0x3e) == '@') {\n          *(undefined *)((int)inputParams + 0x3e) = 0;\n          FUNC_08004d6a();\n        }\n        else {\n          *(undefined *)((int)inputParams + 0x3e) = 0;\n          FUNC_08004a20();\n        }\n      }\n    }\n    else {\n      tempPtr = inputParams[9];\n      inputParams[9] = (uint *)((int)tempPtr + 1);\n      *(char *)tempPtr = (char)(*inputParams)[4];\n      *(short *)((int)inputParams + 0x2a) = *(short *)((int)inputParams + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004d6c": "process_param_08004d6c",
                "param_1": "inputParams",
                "puVar1": "tempPtr"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004d6a",
                "FUN_08004a20"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e3c": {
            "entrypoint": "0x08004e3c",
            "current_name": "process_data_08004e3c",
            "code": "\nundefined4 processData_08004e3c(uint **functionParameters)\n\n{\n  uint *valuePointer;\n  \n  valuePointer = valuePointer[11];\n  if (*(short *)((int)functionParameters + 0x2a) == 3) {\n    if (((valuePointer == (uint *)0x4) || (valuePointer == (uint *)0x8)) || (valuePointer == (uint *)0xffff0000)) {\n      **functionParameters = **functionParameters & 0xfffffbff;\n    }\n    valuePointer = valuePointer[9];\n    valuePointer[9] = (uint *)((int)valuePointer + 1);\n    *(char *)valuePointer = (char)(*functionParameters)[4];\n    *(short *)((int)functionParameters + 0x2a) = *(short *)((int)functionParameters + 0x2a) + -1;\n  }\n  else if (*(short *)((int)functionParameters + 0x2a) == 2) {\n    if (((valuePointer == (uint *)0x4) || (valuePointer == (uint *)0x8)) || (valuePointer == (uint *)0xffff0000)) {\n      (*functionParameters)[1] = (*functionParameters)[1] & 0xfffffcff;\n      **functionParameters = **functionParameters | 0x200;\n    }\n    else {\n      if (valuePointer == (uint *)0x2) {\n        **functionParameters = **functionParameters | 0x400;\n      }\n      else {\n        **functionParameters = **functionParameters & 0xfffffbff;\n      }\n      (*functionParameters)[1] = (*functionParameters)[1] & 0xfffffcff;\n    }\n    valuePointer = valuePointer[9];\n    valuePointer[9] = (uint *)((int)valuePointer + 1);\n    *(char *)valuePointer = (char)(*functionParameters)[4];\n    *(short *)((int)functionParameters + 0x2a) = *(short *)((int)functionParameters + 0x2a) + -1;\n    valuePointer = valuePointer[9];\n    valuePointer[9] = (uint *)((int)valuePointer + 1);\n    *(char *)valuePointer = (char)(*functionParameters)[4];\n    *(short *)((int)functionParameters + 0x2a) = *(short *)((int)functionParameters + 0x2a) + -1;\n    *(undefined *)((int)functionParameters + 0x3d) = 0x20;\n    valuePointer[12] = (uint *)0x0;\n    if (*(char *)((int)functionParameters + 0x3e) == '@') {\n      *(undefined *)((int)functionParameters + 0x3e) = 0;\n      FUNC_08004d6a();\n    }\n    else {\n      *(undefined *)((int)functionParameters + 0x3e) = 0;\n      FUNC_08004a20();\n    }\n  }\n  else {\n    valuePointer = valuePointer[9];\n    valuePointer[9] = (uint *)((int)valuePointer + 1);\n    *(char *)valuePointer = (char)(*functionParameters)[4];\n    *(short *)((int)functionParameters + 0x2a) = *(short *)((int)functionParameters + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004e3c": "process_data_08004e3c",
                "param_1": "functionParameters",
                "puVar1": "valuePointer",
                "param_1[0xb]": "valuePointer[11]",
                "param_1[9]": "valuePointer[9]",
                "param_1[0xc]": "valuePointer[12]"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004d6a",
                "FUN_08004a20"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004f3a": {
            "entrypoint": "0x08004f3a",
            "current_name": "FUNC_08004f3a",
            "code": "\nvoid FUNC_08004f3a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004f3a": "FUNC_08004f3a"
            },
            "calling": [
                "FUN_08004f3c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004f3c": {
            "entrypoint": "0x08004f3c",
            "current_name": "process_data_08004f3c",
            "code": "\nvoid processData_08004f3c(uint **inputData)\n\n{\n  int result;\n  uint *tempPtr1;\n  uint *tempPtr2;\n  \n  if (*(byte *)((int)inputData + 0x3d) - 0x29 < 2) {\n    inputData[0xc] = (uint *)0x0;\n    *(undefined *)((int)inputData + 0x3d) = 0x28;\n  }\n  else {\n    if ((*(char *)((int)inputData + 0x3d) != '`') && (((*inputData)[1] & 0x800) == 0)) {\n      *(undefined *)((int)inputData + 0x3d) = 0x20;\n    }\n    inputData[0xc] = (uint *)0x0;\n    *(undefined *)((int)inputData + 0x3e) = 0;\n  }\n  **inputData = **inputData & 0xfffff7ff;\n  tempPtr2 = *inputData;\n  if ((tempPtr2[1] & 0x800) == 0) {\n    if (*(char *)((int)inputData + 0x3d) == '`') {\n      *(undefined *)((int)inputData + 0x3d) = 0x20;\n      inputData[0x10] = (uint *)0x0;\n      if ((tempPtr2[5] & 0x40) != 0) {\n        tempPtr1 = inputData[9];\n        inputData[9] = (uint *)((int)tempPtr1 + 1);\n        *(char *)tempPtr1 = (char)tempPtr2[4];\n      }\n      **inputData = **inputData & 0xfffffffe;\n      FUNC_08004f3a(inputData);\n    }\n    else {\n      if ((tempPtr2[5] & 0x40) != 0) {\n        tempPtr1 = inputData[9];\n        inputData[9] = (uint *)((int)tempPtr1 + 1);\n        *(char *)tempPtr1 = (char)tempPtr2[4];\n      }\n      FUN_08008020(inputData);\n    }\n  }\n  else {\n    tempPtr2[1] = tempPtr2[1] & 0xfffff7ff;\n    if (*(char *)((int)inputData[0xd] + 0x21) == '\\x01') {\n      inputData[0xe][0xd] = (uint)&LAB_080053cc_1;\n      result = FUN_08004050(inputData[0xe]);\n      if (result != 0) {\n        if (((*inputData)[5] & 0x40) != 0) {\n          tempPtr2 = inputData[9];\n          inputData[9] = (uint *)((int)tempPtr2 + 1);\n          *(char *)tempPtr2 = (char)(*inputData)[4];\n        }\n        **inputData = **inputData & 0xfffffffe;\n        *(undefined *)((int)inputData + 0x3d) = 0x20;\n        (*(code *)inputData[0xe][0xd])();\n      }\n    }\n    else {\n      inputData[0xd][0xd] = (uint)&LAB_080053cc_1;\n      result = FUN_08004050(inputData[0xd]);\n      if (result != 0) {\n        **inputData = **inputData & 0xfffffffe;\n        *(undefined *)((int)inputData + 0x3d) = 0x20;\n        (*(code *)inputData[0xd][0xd])();\n      }\n    }\n  }\n  if ((*(char *)((int)inputData + 0x3d) == '(') && (((uint)inputData[0x10] & 4) != 0)) {\n    inputData[0xb] = (uint *)0xffff0000;\n    inputData[0xc] = (uint *)0x0;\n    *(undefined *)((int)inputData + 0x3d) = 0x20;\n    *(undefined *)((int)inputData + 0x3e) = 0;\n    FUN_08007ff0(inputData);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004f3c": "process_data_08004f3c",
                "param_1": "inputData",
                "iVar1": "result",
                "puVar2": "tempPtr1",
                "puVar3": "tempPtr2"
            },
            "calling": [
                "FUN_080052f0",
                "FUN_08005084"
            ],
            "called": [
                "FUN_08008020",
                "FUN_08004050",
                "FUN_08004f3a",
                "FUN_08007ff0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005084": {
            "entrypoint": "0x08005084",
            "current_name": "process_data_08005084",
            "code": "\nundefined4 processData_08005084(uint **data)\n\n{\n  char character;\n  uint *ptr1;\n  uint *ptr2;\n  \n  character = *(char *)((int)data + 0x3d);\n  (*data)[1] = (*data)[1] & 0xfffff8ff;\n  **data = **data | 1;\n  **data = **data & 0xfffffbff;\n  ptr1 = *data;\n  if ((ptr1[1] & 0x800) != 0) {\n    if ((*(char *)((int)data + 0x3d) == '\\\"') || (*(char *)((int)data + 0x3d) == '*')) {\n      *(short *)((int)data + 0x2a) = (short)*(undefined4 *)(*data[0xe] + 4);\n    }\n    else {\n      *(short *)((int)data + 0x2a) = (short)*(undefined4 *)(*data[0xd] + 4);\n    }\n  }\n  if (*(short *)((int)data + 0x2a) != 0) {\n    if ((ptr1[5] & 4) != 0) {\n      ptr2 = data[9];\n      data[9] = (uint *)((int)ptr2 + 1);\n      *(char *)ptr2 = (char)ptr1[4];\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n    if (((*data)[5] & 0x40) != 0) {\n      ptr1 = data[9];\n      data[9] = (uint *)((int)ptr1 + 1);\n      *(char *)ptr1 = (char)(*data)[4];\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n    data[0x10] = (uint *)((uint)data[0x10] | 4);\n  }\n  if (data[0x10] == (uint *)0x0) {\n    if (((character == '(') || (character == '*')) || (character == ')')) {\n      data[0xb] = (uint *)0xffff0000;\n      data[0xc] = (uint *)0x0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUN_08007ff0();\n    }\n    else if ((data[0xc] == (uint *)0x22) || (character == '\\\"')) {\n      data[0xc] = (uint *)0x0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUNC_08004a74();\n    }\n  }\n  else {\n    FUN_08004f3c();\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005084": "process_data_08005084",
                "param_1": "data",
                "cVar1": "character",
                "puVar2": "ptr1",
                "puVar3": "ptr2"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a74",
                "FUN_08007ff0",
                "FUN_08004f3c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005188": {
            "entrypoint": "0x08005188",
            "current_name": "process_data_08005188",
            "code": "\nvoid processData_08005188(int *data)\n\n{\n  int ptr;\n  uint flag1;\n  uint flag2;\n  uint flag3;\n  \n  ptr = *data;\n  flag3 = *(uint *)(ptr + 0x18);\n  flag1 = *(uint *)(ptr + 0x14);\n  flag2 = *(uint *)(ptr + 4);\n  if ((*(char *)((int)data + 0x3e) == '\\x10') || (*(char *)((int)data + 0x3e) == '@')) {\n    if (((flag1 & 0x10001) == 0) || ((flag2 & 0x200) == 0)) {\n      if (((flag1 & 0x10008) == 0) || ((flag2 & 0x200) == 0)) {\n        if (((flag1 & 0x10002) != 0) && ((flag2 & 0x200) != 0)) {\n          FUN_080043a2(data);\n        }\n      }\n      else {\n        FUN_08004396(data);\n      }\n    }\n    else {\n      FUN_0800430c(data);\n    }\n    if ((flag3 & 0x100004) == 0) {\n      if ((((flag1 & 0x10040) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_08004d6c(data);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_08004e3c(data);\n        return;\n      }\n    }\n    else {\n      if ((((flag1 & 0x10080) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_08004b82(data);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_08004ccc(data);\n        return;\n      }\n    }\n  }\n  else {\n    if (((flag1 & 0x10002) != 0) && ((flag2 & 0x200) != 0)) {\n      FUN_08004ac2();\n      return;\n    }\n    if (((flag1 & 0x10010) != 0) && ((flag2 & 0x200) != 0)) {\n      FUN_08005084(data);\n      return;\n    }\n    if ((flag3 & 0x100004) == 0) {\n      if ((((flag1 & 0x10040) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_08004a76(data);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_0800459c(data);\n      }\n    }\n    else {\n      if ((((flag1 & 0x10080) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_08004a24(data);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_0800457c(data);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005188": "process_data_08005188",
                "param_1": "data",
                "iVar1": "ptr",
                "uVar2": "flag1",
                "uVar3": "flag2",
                "uVar4": "flag3"
            },
            "calling": [],
            "called": [
                "FUN_08004e3c",
                "FUN_08004ccc",
                "FUN_08004396",
                "FUN_08004ac2",
                "FUN_08004a76",
                "FUN_0800459c",
                "FUN_0800457c",
                "FUN_080043a2",
                "FUN_08005084",
                "FUN_0800430c",
                "FUN_08004a24",
                "FUN_08004b82",
                "FUN_08004d6c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080052f0": {
            "entrypoint": "0x080052f0",
            "current_name": "update_permissions_080052f0",
            "code": "\nvoid updatePermissions_080052f0(uint **data)\n\n{\n  char charVar1;\n  uint *pointerVar2;\n  uint value1;\n  uint value2;\n  \n  pointerVar2 = *data;\n  value1 = pointerVar2[5];\n  value2 = pointerVar2[1];\n  if (((value1 & 0x10100) != 0) && ((value2 & 0x100) != 0)) {\n    data[0x10] = (uint *)((uint)data[0x10] | 1);\n    pointerVar2[5] = 0xfffffeff;\n    **data = **data | 0x8000;\n  }\n  if (((value1 & 0x10200) != 0) && ((value2 & 0x100) != 0)) {\n    data[0x10] = (uint *)((uint)data[0x10] | 2);\n    (*data)[5] = 0xfffffdff;\n  }\n  if (((value1 & 0x10400) != 0) && ((value2 & 0x100) != 0)) {\n    charVar1 = *(char *)((int)data + 0x3d);\n    if (((*(char *)((int)data + 0x3e) == ' ') && (*(short *)((int)data + 0x2a) == 0)) &&\n       (((charVar1 == '!' || (charVar1 == ')')) || ((charVar1 == '(' && (data[0xc] == (uint *)0x21)))))) {\n      FUN_08004aec(data);\n    }\n    else {\n      data[0x10] = (uint *)((uint)data[0x10] | 4);\n      if (*(char *)((int)data + 0x3e) == '\\x10') {\n        **data = **data | 0x200;\n      }\n      (*data)[5] = 0xfffffbff;\n    }\n  }\n  if (((value1 & 0x10800) != 0) && ((value2 & 0x100) != 0)) {\n    data[0x10] = (uint *)((uint)data[0x10] | 8);\n    (*data)[5] = 0xfffff7ff;\n  }\n  if (data[0x10] != (uint *)0x0) {\n    FUN_08004f3c(data);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080052f0": "update_permissions_080052f0",
                "param_1": "data",
                "cVar1": "charVar1",
                "puVar2": "pointerVar2",
                "uVar3": "value1",
                "uVar4": "value2"
            },
            "calling": [],
            "called": [
                "FUN_08004aec",
                "FUN_08004f3c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800542a": {
            "entrypoint": "0x0800542a",
            "current_name": "get_value_from_offset_0800542a",
            "code": "\nundefined get_value_from_offset_0800542a(int base_address)\n\n{\n  return *(undefined *)(base_address + 0x3d);\n}\n\n",
            "renaming": {
                "FUN_0800542a": "get_value_from_offset_0800542a",
                "param_1": "base_address"
            },
            "calling": [
                "FUN_08007f0e",
                "FUN_08007e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005430": {
            "entrypoint": "0x08005430",
            "current_name": "get_value_at_offset_08005430",
            "code": "\nundefined4 get_value_at_offset_08005430(int input_address)\n\n{\n  return *(undefined4 *)(input_address + 0x40);\n}\n\n",
            "renaming": {
                "FUN_08005430": "get_value_at_offset_08005430",
                "param_1": "input_address"
            },
            "calling": [
                "FUN_08007f0e",
                "FUN_08007e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005434": {
            "entrypoint": "0x08005434",
            "current_name": "delay_function_08005434",
            "code": "\nvoid delayFunction_08005434(int inputValue)\n\n{\n  bool isNonZero;\n  int calculatedValue;\n  \n  calculatedValue = inputValue * (DAT_20000018 / 8000);\n  do {\n    isNonZero = calculatedValue != 0;\n    calculatedValue = calculatedValue + -1;\n  } while (isNonZero);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005434": "delay_function_08005434",
                "param_1": "inputValue",
                "local_4": "calculatedValue",
                "bVar1": "isNonZero"
            },
            "calling": [
                "FUN_08005460"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005460": {
            "entrypoint": "0x08005460",
            "current_name": "handle_flags_08005460",
            "code": "\n\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nundefined4 handle_flags_08005460(uint *flags)\n\n{\n  int start_time;\n  int current_time;\n  undefined4 result;\n  uint value;\n  bool is_flag;\n  \n  if ((*flags & 1) != 0) {\n    if (((_DAT_40021004 & 0xc) == 4) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) != 0)))) {\n      if (((_DAT_40021000 & 0x20000) != 0) && (flags[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      value = flags[1];\n      if (value == 0x10000) {\n        _DAT_40021000 = _DAT_40021000 | 0x10000;\n      }\n      else if (value == 0) {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      else if (value == 0x50000) {\n        _DAT_40021000 = _DAT_40021000 | 0x50000;\n      }\n      else {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      if (flags[1] == 0) {\n        start_time = FUN_08003760();\n        while ((_DAT_40021000 & 0x20000) != 0) {\n          current_time = FUN_08003760();\n          if (100 < (uint)(current_time - start_time)) {\n            return 3;\n          }\n        }\n      }\n      else {\n        start_time = FUN_08003760();\n        while ((_DAT_40021000 & 0x20000) == 0) {\n          current_time = FUN_08003760();\n          if (100 < (uint)(current_time - start_time)) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*flags & 2) != 0) {\n    if (((_DAT_40021004 & 0xc) == 0) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) == 0)))) {\n      if (((_DAT_40021000 & 2) != 0) && (flags[4] != 1)) {\n        return 1;\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | flags[5] << 3;\n    }\n    else if (flags[4] == 0) {\n      _DAT_42420000 = 0;\n      start_time = FUN_08003760();\n      while ((_DAT_40021000 & 2) != 0) {\n        current_time = FUN_08003760();\n        if (2 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420000 = 1;\n      start_time = FUN_08003760();\n      while ((_DAT_40021000 & 2) == 0) {\n        current_time = FUN_08003760();\n        if (2 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | flags[5] << 3;\n    }\n  }\n  if ((*flags & 8) != 0) {\n    if (flags[6] == 0) {\n      _DAT_42420480 = 0;\n      start_time = FUN_08003760();\n      while ((_DAT_40021024 & 2) != 0) {\n        current_time = FUN_08003760();\n        if (2 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420480 = 1;\n      start_time = FUN_08003760();\n      while ((_DAT_40021024 & 2) == 0) {\n        current_time = FUN_08003760();\n        if (2 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n      FUN_08005434(1);\n    }\n  }\n  if ((*flags & 4) != 0) {\n    is_flag = (_DAT_4002101c & 0x10000000) == 0;\n    if (is_flag) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      start_time = FUN_08003760();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        current_time = FUN_08003760();\n        if (100 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    value = flags[3];\n    if (value == 1) {\n      _DAT_40021020 = _DAT_40021020 | 1;\n    }\n    else if (value == 0) {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    else if (value == 5) {\n      _DAT_40021020 = _DAT_40021020 | 5;\n    }\n    else {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    if (flags[3] == 0) {\n      start_time = FUN_08003760();\n      while ((_DAT_40021020 & 2) != 0) {\n        current_time = FUN_08003760();\n        if (5000 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      start_time = FUN_08003760();\n      while ((_DAT_40021020 & 2) == 0) {\n        current_time = FUN_08003760();\n        if (5000 < (uint)(current_time - start_time)) {\n          return 3;\n        }\n      }\n    }\n    if (is_flag) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if (flags[7] == 0) {\n    result = 0;\n  }\n  else if ((_DAT_40021004 & 0xc) == 8) {\n    result = 1;\n  }\n  else if (flags[7] == 2) {\n    _DAT_42420060 = 0;\n    start_time = FUN_08003760();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        if (flags[8] == 0x10000) {\n          _DAT_40021004 = _DAT_40021004 & 0xfffdffff | flags[2];\n        }\n        _DAT_40021004 = _DAT_40021004 & 0xffc2ffff | flags[8] | flags[9];\n        _DAT_42420060 = 1;\n        start_time = FUN_08003760();\n        do {\n          if ((_DAT_40021000 & 0x2000000) != 0) {\n            return 0;\n          }\n          current_time = FUN_08003760();\n        } while ((uint)(current_time - start_time) < 3);\n        return 3;\n      }\n      current_time = FUN_08003760();\n    } while ((uint)(current_time - start_time) < 3);\n    result = 3;\n  }\n  else {\n    _DAT_42420060 = 0;\n    start_time = FUN_08003760();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        return 0;\n      }\n      current_time = FUN_08003760();\n    } while ((uint)(current_time - start_time) < 3);\n    result = 3;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005460": "handle_flags_08005460",
                "param_1": "flags",
                "iVar1": "start_time",
                "iVar2": "current_time",
                "uVar3": "result",
                "uVar4": "value",
                "bVar5": "is_flag"
            },
            "calling": [
                "FUN_080035b8"
            ],
            "called": [
                "FUN_08005434",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005840": {
            "entrypoint": "0x08005840",
            "current_name": "calculate_value_08005840",
            "code": "\n\n\nuint calculateValue_08005840(void)\n\n{\n  uint uVar1;\n  undefined2 entryFlag;\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  undefined4 value4;\n  \n  value4 = 0x10100f0e;\n  value3 = 0xd0c0b0a;\n  value2 = 0x9080706;\n  value1 = 0x5040302;\n  entryFlag = 0x201;\n  if ((_DAT_40021004 & 0xc) == 8) {\n    uVar1 = (uint)*(byte *)((int)&value1 + ((_DAT_40021004 << 10) >> 0x1c));\n    if ((_DAT_40021004 & 0x10000) == 0) {\n      uVar1 = uVar1 * 4000000;\n    }\n    else {\n      uVar1 = (uVar1 * 8000000) /\n              (uint)*(byte *)((int)&entryFlag - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n    }\n  }\n  else {\n    uVar1 = 8000000;\n  }\n  return uVar1;\n}\n\n",
            "renaming": {
                "FUN_08005840": "calculate_value_08005840",
                "local_1c": "entryFlag",
                "uStack_18": "value1",
                "uStack_14": "value2",
                "uStack_10": "value3",
                "uStack_c": "value4"
            },
            "calling": [
                "FUN_080058d2"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058ac": {
            "entrypoint": "0x080058ac",
            "current_name": "initialize_communication_080058ac",
            "code": "\n\n\nundefined4 initializeCommunication_080058ac(uint *settings,uint bufferSize)\n\n{\n  int startTime;\n  int currentTime;\n  uint communicationState;\n  \n  if ((_DAT_40022000 & 7) < bufferSize) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | bufferSize;\n    if (bufferSize != (bufferSize & 7)) {\n      return 1;\n    }\n  }\n  if ((*settings & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | settings[2];\n  }\n  if ((*settings & 1) != 0) {\n    communicationState = settings[1];\n    if (communicationState == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((communicationState != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = communicationState | _DAT_40021004 & 0xfffffffc;\n    startTime = FUN_08003760();\n    if (settings[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else if (settings[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (bufferSize < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | bufferSize;\n    if (bufferSize != (bufferSize & 7)) {\n      return 1;\n    }\n  }\n  if ((*settings & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | settings[3];\n  }\n  if ((*settings & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | settings[4] << 3;\n  }\n  communicationState = FUN_08005840();\n  DAT_20000018 = communicationState >> (&DAT_0800a944)[(_DAT_40021004 << 0x18) >> 0x1c];\n  FUN_080036d8(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080058ac": "initialize_communication_080058ac",
                "param_1": "settings",
                "param_2": "bufferSize",
                "iVar1": "startTime",
                "iVar2": "currentTime",
                "uVar3": "communicationState"
            },
            "calling": [
                "FUN_080035b8"
            ],
            "called": [
                "FUN_080058d2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058d2": {
            "entrypoint": "0x080058d2",
            "current_name": "verify_and_set_settings_080058d2",
            "code": "\n\n\nundefined4 verifyAndSetSettings_080058d2(uint *settingsFlags,uint maxValue)\n\n{\n  int startTime;\n  int currentTime;\n  uint value;\n  \n  if ((*settingsFlags & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | settingsFlags[2];\n  }\n  if ((*settingsFlags & 1) != 0) {\n    value = settingsFlags[1];\n    if (value == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((value != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = value | _DAT_40021004 & 0xfffffffc;\n    startTime = FUN_08003760();\n    if (settingsFlags[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else if (settingsFlags[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (maxValue < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | maxValue;\n    if (maxValue != (maxValue & 7)) {\n      return 1;\n    }\n  }\n  if ((*settingsFlags & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | settingsFlags[3];\n  }\n  if ((*settingsFlags & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | settingsFlags[4] << 3;\n  }\n  value = FUN_08005840();\n  DAT_20000018 = value >> (&DAT_0800a944)[(_DAT_40021004 << 0x18) >> 0x1c];\n  FUN_080036d8(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080058d2": "verify_and_set_settings_080058d2",
                "param_1": "settingsFlags",
                "param_2": "maxValue",
                "uVar3": "value",
                "iVar1": "startTime",
                "iVar2": "currentTime"
            },
            "calling": [
                "FUN_080058ac"
            ],
            "called": [
                "FUN_080036d8",
                "FUN_08003760",
                "FUN_08005840"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a1c": {
            "entrypoint": "0x08005a1c",
            "current_name": "get_data_value_08005a1c",
            "code": "\nundefined4 get_data_value_08005a1c(void)\n\n{\n  return DAT_20000018;\n}\n\n",
            "renaming": {
                "FUN_08005a1c": "get_data_value_08005a1c"
            },
            "calling": [
                "FUN_08005a28",
                "FUN_08005a48",
                "FUN_080035b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a28": {
            "entrypoint": "0x08005a28",
            "current_name": "shifted_value_after_modification_08005a28",
            "code": "\n\n\nuint shiftedValueAfterModification_08005a28(void)\n\n{\n  uint uVar1;\n  \n  uVar1 = FUN_08005a1c();\n  return uVar1 >> (&DAT_0800a954)[(uint)(_DAT_40021004 << 0x15) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_08005a28": "shifted_value_after_modification_08005a28"
            },
            "calling": [
                "FUN_080045c0",
                "FUN_08006538",
                "FUN_080075dc"
            ],
            "called": [
                "FUN_08005a1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a48": {
            "entrypoint": "0x08005a48",
            "current_name": "calculate_shifted_value_08005a48",
            "code": "\n\n\nuint calculate_shifted_value_08005a48(void)\n\n{\n  uint result;\n  \n  result = FUN_08005a1c();\n  return result >> (&DAT_0800a954)[(uint)(_DAT_40021004 << 0x12) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_08005a48": "calculate_shifted_value_08005a48",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08006538",
                "FUN_08005bb8",
                "FUN_080075dc"
            ],
            "called": [
                "FUN_08005a1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a68": {
            "entrypoint": "0x08005a68",
            "current_name": "initialize_data_08005a68",
            "code": "\n\n\nvoid initializeData_08005a68(undefined4 *outputArray,uint *inputArray)\n\n{\n  *outputArray = 0xf;\n  outputArray[1] = _DAT_40021004 & 3;\n  outputArray[2] = _DAT_40021004 & 0xf0;\n  outputArray[3] = _DAT_40021004 & 0x700;\n  outputArray[4] = _DAT_40021004 >> 3 & 0x700;\n  *inputArray = _DAT_40022000 & 7;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a68": "initialize_data_08005a68",
                "param_1": "outputArray",
                "param_2": "inputArray"
            },
            "calling": [
                "FUN_080075dc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005aa4": {
            "entrypoint": "0x08005aa4",
            "current_name": "initialize_flags_08005aa4",
            "code": "\n\n\nundefined4 initializeFlags_08005aa4(uint *flags)\n\n{\n  uint temp1;\n  uint temp2;\n  int counter1;\n  int counter2;\n  bool isFlagSet;\n  \n  if ((*flags & 1) != 0) {\n    isFlagSet = (_DAT_4002101c & 0x10000000) == 0;\n    if (isFlagSet) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      counter1 = FUN_08003760();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        counter2 = FUN_08003760();\n        if (100 < (uint)(counter2 - counter1)) {\n          return 3;\n        }\n      }\n    }\n    if (((_DAT_40021020 & 0x300) != 0) && ((_DAT_40021020 & 0x300) != (flags[1] & 0x300))) {\n      temp2 = _DAT_40021020 & 0xfffffcff;\n      _DAT_42420440 = 0;\n      temp1 = _DAT_40021020 & 1;\n      _DAT_40021020 = temp2;\n      if (temp1 != 0) {\n        counter1 = FUN_08003760();\n        while ((_DAT_40021020 & 2) == 0) {\n          counter2 = FUN_08003760();\n          if (5000 < (uint)(counter2 - counter1)) {\n            return 3;\n          }\n        }\n      }\n    }\n    _DAT_40021020 = _DAT_40021020 & 0xfffffcff | flags[1];\n    if (isFlagSet) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if ((*flags & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffff3fff | flags[2];\n  }\n  if ((*flags & 0x10) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffbfffff | flags[3];\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005aa4": "initialize_flags_08005aa4",
                "param_1": "flags",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "iVar3": "counter1",
                "iVar4": "counter2",
                "bVar5": "isFlagSet"
            },
            "calling": [
                "FUN_080035b8"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005bb8": {
            "entrypoint": "0x08005bb8",
            "current_name": "calculate_parameter_08005bb8",
            "code": "\n\n\nuint calculateParameter_08005bb8(int inputValue)\n\n{\n  uint result;\n  undefined2 someValue;\n  undefined4 constant1;\n  undefined4 constant2;\n  undefined4 constant3;\n  undefined4 constant4;\n  \n  constant4 = 0x10100f0e;\n  constant3 = 0xd0c0b0a;\n  constant2 = 0x9080706;\n  constant1 = 0x5040302;\n  someValue = 0x201;\n  if (inputValue == 2) {\n    result = FUN_08005a48();\n    result = result / ((((_DAT_40021004 << 0x10) >> 0x1e) + 1) * 2);\n  }\n  else if (inputValue == 0x10) {\n    if ((_DAT_40021000 & 0x1000000) == 0) {\n      result = 0;\n    }\n    else {\n      if ((_DAT_40021004 & 0x10000) == 0) {\n        result = 4000000;\n      }\n      else {\n        result = 8000000 / *(byte *)((int)&someValue - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n      }\n      result = result * *(byte *)((int)&constant1 + ((_DAT_40021004 << 10) >> 0x1c));\n      if ((_DAT_40021004 & 0x400000) == 0) {\n        result = (result * 2) / 3;\n      }\n    }\n  }\n  else if (inputValue == 1) {\n    if ((_DAT_40021020 & 0x302) == 0x102) {\n      result = 0x8000;\n    }\n    else if (((_DAT_40021020 & 0x300) == 0x200) && ((_DAT_40021024 & 2) != 0)) {\n      result = 32000;\n    }\n    else if ((_DAT_40021020 & 0x300) == 0x300) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        result = 0;\n      }\n      else {\n        result = 0xf424;\n      }\n    }\n    else {\n      result = 0;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005bb8": "calculate_parameter_08005bb8",
                "param_1": "inputValue",
                "uVar1": "result",
                "local_24": "someValue",
                "uStack_20": "constant1",
                "uStack_1c": "constant2",
                "uStack_18": "constant3",
                "uStack_14": "constant4"
            },
            "calling": [
                "FUN_0800376c",
                "FUN_08003e20"
            ],
            "called": [
                "FUN_08005a48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cb4": {
            "entrypoint": "0x08005cb4",
            "current_name": "check_and_update_param_08005cb4",
            "code": "\n\n\nvoid checkAndUpdateParam_08005cb4(uint **param)\n\n{\n  if (((**param & 2) != 0) && (((*param)[1] & 2) != 0)) {\n    FUN_080073c0();\n    (*param)[1] = 0xfffffffd;\n  }\n  _DAT_40010414 = 0x20000;\n  *(undefined *)((int)param + 0x11) = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005cb4": "check_and_update_param_08005cb4",
                "param_1": "param"
            },
            "calling": [],
            "called": [
                "FUN_080073c0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cec": {
            "entrypoint": "0x08005cec",
            "current_name": "update_parameters_08005cec",
            "code": "\nvoid updateParameters_08005cec(int functionAddress,uint *parameters)\n\n{\n  uint modifiedValue1;\n  uint modifiedValue2;\n  uint parameterValue;\n  \n  *(uint *)(functionAddress + 0x20) = *(uint *)(functionAddress + 0x20) & 0xfffffffe;\n  modifiedValue2 = *(uint *)(functionAddress + 4);\n  parameterValue = *parameters;\n  modifiedValue1 = *(uint *)(functionAddress + 0x20) & 0xfffffffd | parameters[2];\n  if (functionAddress == 0x40012c00) {\n    modifiedValue1 = (modifiedValue1 & 0xfffffff7 | parameters[3]) & 0xfffffffb;\n    modifiedValue2 = modifiedValue2 & 0xfffffcff | parameters[5] | parameters[6];\n  }\n  *(uint *)(functionAddress + 4) = modifiedValue2;\n  *(uint *)(functionAddress + 0x18) = *(uint *)(functionAddress + 0x18) & 0xffffff8c | parameterValue;\n  *(uint *)(functionAddress + 0x34) = parameters[1];\n  *(uint *)(functionAddress + 0x20) = modifiedValue1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005cec": "update_parameters_08005cec",
                "param_1": "functionAddress",
                "param_2": "parameters",
                "uVar1": "modifiedValue1",
                "uVar2": "modifiedValue2",
                "uVar3": "parameterValue"
            },
            "calling": [
                "FUN_08006186",
                "FUN_08006128"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005d48": {
            "entrypoint": "0x08005d48",
            "current_name": "apply_parameters_08005d48",
            "code": "\nvoid applyParameters_08005d48(int address,uint *parameters)\n\n{\n  uint modifiedFlags;\n  uint originalAddressValue;\n  uint parameterValue;\n  \n  *(uint *)(address + 0x20) = *(uint *)(address + 0x20) & 0xfffffeff;\n  originalAddressValue = *(uint *)(address + 4);\n  parameterValue = *parameters;\n  modifiedFlags = *(uint *)(address + 0x20) & 0xfffffdff | parameters[2] << 8;\n  if (address == 0x40012c00) {\n    modifiedFlags = (modifiedFlags & 0xfffff7ff | parameters[3] << 8) & 0xfffffbff;\n    originalAddressValue = originalAddressValue & 0xffffcfff | parameters[5] << 4 | parameters[6] << 4;\n  }\n  *(uint *)(address + 4) = originalAddressValue;\n  *(uint *)(address + 0x1c) = *(uint *)(address + 0x1c) & 0xffffff8c | parameterValue;\n  *(uint *)(address + 0x3c) = parameters[1];\n  *(uint *)(address + 0x20) = modifiedFlags;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005d48": "apply_parameters_08005d48",
                "param_1": "address",
                "param_2": "parameters",
                "uVar1": "modifiedFlags",
                "uVar2": "originalAddressValue",
                "uVar3": "parameterValue"
            },
            "calling": [
                "FUN_08006186",
                "FUN_08006128"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005dac": {
            "entrypoint": "0x08005dac",
            "current_name": "update_memory_values_08005dac",
            "code": "\nvoid updateMemoryValues_08005dac(int memoryAddress,int *valuesArray)\n\n{\n  uint tempValue1;\n  int tempValue2;\n  int tempValue3;\n  \n  *(uint *)(memoryAddress + 0x20) = *(uint *)(memoryAddress + 0x20) & 0xffffefff;\n  tempValue1 = *(uint *)(memoryAddress + 4);\n  tempValue2 = *valuesArray;\n  tempValue3 = valuesArray[2];\n  if (memoryAddress == 0x40012c00) {\n    tempValue1 = tempValue1 & 0xffffbfff | valuesArray[5] << 6;\n  }\n  *(uint *)(memoryAddress + 4) = tempValue1;\n  *(uint *)(memoryAddress + 0x1c) = *(uint *)(memoryAddress + 0x1c) & 0xffff8cff | tempValue2 << 8;\n  *(int *)(memoryAddress + 0x40) = valuesArray[1];\n  *(uint *)(memoryAddress + 0x20) = *(uint *)(memoryAddress + 0x20) & 0xffffdfff | tempValue3 << 0xc;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005dac": "update_memory_values_08005dac",
                "param_1": "memoryAddress",
                "param_2": "valuesArray",
                "uVar1": "tempValue1",
                "iVar2": "tempValue2",
                "iVar3": "tempValue3"
            },
            "calling": [
                "FUN_08006186",
                "FUN_08006128"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005df4": {
            "entrypoint": "0x08005df4",
            "current_name": "set_flag_and_clear_bits_08005df4",
            "code": "\nvoid setFlagAndClearBits_08005df4(uint **parameter)\n\n{\n  uint *pointerVar;\n  \n  *(undefined *)((int)parameter + 0x3d) = 2;\n  pointerVar = *parameter;\n  if ((pointerVar[8] & 0x1111) == 0) {\n    if ((pointerVar[8] & 0x444) == 0) {\n      *pointerVar = *pointerVar & 0xfffffffe;\n    }\n  }\n  FUN_08007710(parameter);\n  *(undefined *)((int)parameter + 0x3d) = 0;\n  *(undefined *)(parameter + 0xf) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005df4": "set_flag_and_clear_bits_08005df4",
                "param_1": "parameter",
                "puVar1": "pointerVar"
            },
            "calling": [
                "FUN_080076e0"
            ],
            "called": [
                "FUN_08007710"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005e2e": {
            "entrypoint": "0x08005e2e",
            "current_name": "update_param_one_08005e2e",
            "code": "\nvoid updateParamOne_08005e2e(uint **paramOne)\n\n{\n  uint *pointerVar1;\n  \n  *(undefined *)((int)paramOne + 0x3d) = 2;\n  pointerVar1 = *paramOne;\n  if ((pointerVar1[8] & 0x1111) == 0) {\n    if ((pointerVar1[8] & 0x444) == 0) {\n      *pointerVar1 = *pointerVar1 & 0xfffffffe;\n    }\n  }\n  FUN_08007110(paramOne);\n  *(undefined *)((int)paramOne + 0x3d) = 0;\n  *(undefined *)(paramOne + 0xf) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e2e": "update_param_one_08005e2e",
                "param_1": "paramOne",
                "puVar1": "pointerVar1"
            },
            "calling": [
                "FUN_080071e4"
            ],
            "called": [
                "FUN_08007110"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005e68": {
            "entrypoint": "0x08005e68",
            "current_name": "FUNC_08005e68",
            "code": "\nvoid FUNC_08005e68(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e68": "FUNC_08005e68"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005e6a": {
            "entrypoint": "0x08005e6a",
            "current_name": "FUNC_08005e6a",
            "code": "\nvoid FUNC_08005e6a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e6a": "FUNC_08005e6a"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005e6c": {
            "entrypoint": "0x08005e6c",
            "current_name": "FUNC_08005e6c",
            "code": "\nvoid FUNC_08005e6c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e6c": "FUNC_08005e6c"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005e6e": {
            "entrypoint": "0x08005e6e",
            "current_name": "process_flags_08005e6e",
            "code": "\nvoid processFlags_08005e6e(int *flags)\n\n{\n  int value;\n  \n  value = *flags;\n  if (((*(uint *)(value + 0x10) & 2) != 0) && ((*(uint *)(value + 0xc) & 2) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffd;\n    *(undefined *)(flags + 7) = 1;\n    if ((*(uint *)(*flags + 0x18) & 3) == 0) {\n      FUN_0800771c();\n      FUNC_08005e6a(flags);\n    }\n    else {\n      FUNC_08005e68();\n    }\n    *(undefined *)(flags + 7) = 0;\n  }\n  value = *flags;\n  if (((*(uint *)(value + 0x10) & 4) != 0) && ((*(uint *)(value + 0xc) & 4) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffb;\n    *(undefined *)(flags + 7) = 2;\n    if ((*(uint *)(*flags + 0x18) & 0x300) == 0) {\n      FUN_0800771c(flags);\n      FUNC_08005e6a(flags);\n    }\n    else {\n      FUNC_08005e68(flags);\n    }\n    *(undefined *)(flags + 7) = 0;\n  }\n  value = *flags;\n  if (((*(uint *)(value + 0x10) & 8) != 0) && ((*(uint *)(value + 0xc) & 8) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffff7;\n    *(undefined *)(flags + 7) = 4;\n    if ((*(uint *)(*flags + 0x1c) & 3) == 0) {\n      FUN_0800771c(flags);\n      FUNC_08005e6a(flags);\n    }\n    else {\n      FUNC_08005e68(flags);\n    }\n    *(undefined *)(flags + 7) = 0;\n  }\n  value = *flags;\n  if (((*(uint *)(value + 0x10) & 0x10) != 0) && ((*(uint *)(value + 0xc) & 0x10) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffef;\n    *(undefined *)(flags + 7) = 8;\n    if ((*(uint *)(*flags + 0x1c) & 0x300) == 0) {\n      FUN_0800771c(flags);\n      FUNC_08005e6a(flags);\n    }\n    else {\n      FUNC_08005e68(flags);\n    }\n    *(undefined *)(flags + 7) = 0;\n  }\n  value = *flags;\n  if (((*(uint *)(value + 0x10) & 1) != 0) && ((*(uint *)(value + 0xc) & 1) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffe;\n    FUN_08007736(flags);\n  }\n  value = *flags;\n  if (((*(uint *)(value + 0x10) & 0x80) != 0) && ((*(uint *)(value + 0xc) & 0x80) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffff7f;\n    FUNC_080064ae(flags);\n  }\n  value = *flags;\n  if (((*(uint *)(value + 0x10) & 0x40) != 0) && ((*(uint *)(value + 0xc) & 0x40) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffbf;\n    FUNC_08005e6c(flags);\n  }\n  value = *flags;\n  if (((*(uint *)(value + 0x10) & 0x20) != 0) && ((*(uint *)(value + 0xc) & 0x20) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffdf;\n    FUNC_080064ac(flags);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e6e": "process_flags_08005e6e",
                "param_1": "flags",
                "iVar1": "value"
            },
            "calling": [],
            "called": [
                "FUN_0800771c",
                "FUN_08005e6a",
                "FUN_08005e6c",
                "FUN_080064ae",
                "FUN_08005e68",
                "FUN_080064ac",
                "FUN_08007736"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005fe8": {
            "entrypoint": "0x08005fe8",
            "current_name": "update_memory_08005fe8",
            "code": "\nvoid updateMemory_08005fe8(uint *memory,uint *new_values)\n\n{\n  uint original_value;\n  \n  original_value = *memory;\n  if ((((memory == (uint *)0x40012c00) || (memory == (uint *)0x40000000)) ||\n      (memory == (uint *)0x40000400)) || (memory == (uint *)0x40000800)) {\n    original_value = original_value & 0xffffff8f | new_values[1];\n  }\n  if (((memory == (uint *)0x40012c00) || (memory == (uint *)0x40000000)) ||\n     ((memory == (uint *)0x40000400 || (memory == (uint *)0x40000800)))) {\n    original_value = original_value & 0xfffffcff | new_values[3];\n  }\n  *memory = original_value & 0xffffff7f | new_values[5];\n  memory[0xb] = new_values[2];\n  memory[10] = *new_values;\n  if (memory == (uint *)0x40012c00) {\n    special_value = new_values[4];\n  }\n  memory[5] = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005fe8": "update_memory_08005fe8",
                "param_1": "memory",
                "param_2": "new_values",
                "uVar1": "original_value",
                "uRam40012c30": "special_value"
            },
            "calling": [
                "FUN_08006092",
                "FUN_08006060"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006060": {
            "entrypoint": "0x08006060",
            "current_name": "check_and_process_data_08006060",
            "code": "\nundefined4 checkAndProcessData_08006060(undefined4 *dataPtr)\n\n{\n  if (dataPtr != (undefined4 *)0x0) {\n    if (*(char *)((int)dataPtr + 0x3d) == '\\0') {\n      *(undefined *)(dataPtr + 0xf) = 0;\n      FUN_08007708();\n    }\n    *(undefined *)((int)dataPtr + 0x3d) = 2;\n    FUN_08005fe8(*dataPtr,dataPtr + 1);\n    *(undefined *)((int)dataPtr + 0x3d) = 1;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08006060": "check_and_process_data_08006060",
                "param_1": "dataPtr"
            },
            "calling": [
                "FUN_08007648"
            ],
            "called": [
                "FUN_08007708",
                "FUN_08005fe8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006092": {
            "entrypoint": "0x08006092",
            "current_name": "validate_and_process_data_08006092",
            "code": "\nundefined4 validate_and_process_data_08006092(undefined4 *data_ptr)\n\n{\n  if (data_ptr != (undefined4 *)0x0) {\n    if (*(char *)((int)data_ptr + 0x3d) == '\\0') {\n      *(undefined *)(data_ptr + 0xf) = 0;\n      FUN_08006e68();\n    }\n    *(undefined *)((int)data_ptr + 0x3d) = 2;\n    FUN_08005fe8(*data_ptr,data_ptr + 1);\n    *(undefined *)((int)data_ptr + 0x3d) = 1;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08006092": "validate_and_process_data_08006092",
                "param_1": "data_ptr"
            },
            "calling": [
                "FUN_08007118"
            ],
            "called": [
                "FUN_08006e68",
                "FUN_08005fe8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080060c4": {
            "entrypoint": "0x080060c4",
            "current_name": "update_param1_080060c4",
            "code": "\nvoid updateParam1_080060c4(int paramBase,int *paramArray)\n\n{\n  uint modifiedUVar1;\n  uint modifiedUVar2;\n  int modifiediVar3;\n  \n  *(uint *)(paramBase + 0x20) = *(uint *)(paramBase + 0x20) & 0xffffffef;\n  modifiedUVar2 = *(uint *)(paramBase + 4);\n  modifiediVar3 = *paramArray;\n  modifiedUVar1 = *(uint *)(paramBase + 0x20) & 0xffffffdf | paramArray[2] << 4;\n  if (paramBase == 0x40012c00) {\n    modifiedUVar1 = (modifiedUVar1 & 0xffffff7f | paramArray[3] << 4) & 0xffffffbf;\n    modifiedUVar2 = modifiedUVar2 & 0xfffff3ff | paramArray[5] << 2 | paramArray[6] << 2;\n  }\n  *(uint *)(paramBase + 4) = modifiedUVar2;\n  *(uint *)(paramBase + 0x18) = *(uint *)(paramBase + 0x18) & 0xffff8cff | modifiediVar3 << 8;\n  *(int *)(paramBase + 0x38) = paramArray[1];\n  *(uint *)(paramBase + 0x20) = modifiedUVar1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080060c4": "update_param1_080060c4",
                "param_1": "paramBase",
                "param_2": "paramArray",
                "uVar1": "modifiedUVar1",
                "uVar2": "modifiedUVar2",
                "iVar3": "modifiediVar3"
            },
            "calling": [
                "FUN_08006186",
                "FUN_08006128"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006128": {
            "entrypoint": "0x08006128",
            "current_name": "execute_function_08006128",
            "code": "\nundefined4 executeFunction_08006128(undefined4 *functionParams,undefined4 param2,undefined4 param3)\n\n{\n  if (*(char *)(functionParams + 0xf) != '\\x01') {\n    *(undefined *)(functionParams + 0xf) = 1;\n    *(undefined *)((int)functionParams + 0x3d) = 2;\n    switch(param3) {\n    case 0:\n      FUN_08005cec(*functionParams);\n      break;\n    case 4:\n      FUN_080060c4(*functionParams);\n      break;\n    case 8:\n      FUN_08005d48(*functionParams);\n      break;\n    case 0xc:\n      FUN_08005dac(*functionParams);\n    }\n    *(undefined *)((int)functionParams + 0x3d) = 1;\n    *(undefined *)(functionParams + 0xf) = 0;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08006128": "execute_function_08006128",
                "param_1": "functionParams",
                "param_2": "param2",
                "param_3": "param3"
            },
            "calling": [
                "FUN_08007648"
            ],
            "called": [
                "FUN_08005d48",
                "FUN_08005dac",
                "FUN_080060c4",
                "FUN_08005cec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006186": {
            "entrypoint": "0x08006186",
            "current_name": "update_parameters_08006186",
            "code": "\nundefined4 updateParameters_08006186(int *paramArray,int dataOffset,undefined4 caseValue)\n\n{\n  if (*(char *)(paramArray + 0xf) != '\\x01') {\n    *(undefined *)(paramArray + 0xf) = 1;\n    *(undefined *)((int)paramArray + 0x3d) = 2;\n    switch(caseValue) {\n    case 0:\n      FUN_08005cec(*paramArray);\n      *(uint *)(*paramArray + 0x18) = *(uint *)(*paramArray + 0x18) | 8;\n      *(uint *)(*paramArray + 0x18) = *(uint *)(*paramArray + 0x18) & 0xfffffffb;\n      *(uint *)(*paramArray + 0x18) = *(uint *)(*paramArray + 0x18) | *(uint *)(dataOffset + 0x10);\n      break;\n    case 4:\n      FUN_080060c4(*paramArray);\n      *(uint *)(*paramArray + 0x18) = *(uint *)(*paramArray + 0x18) | 0x800;\n      *(uint *)(*paramArray + 0x18) = *(uint *)(*paramArray + 0x18) & 0xfffffbff;\n      *(uint *)(*paramArray + 0x18) = *(uint *)(*paramArray + 0x18) | *(int *)(dataOffset + 0x10) << 8;\n      break;\n    case 8:\n      FUN_08005d48(*paramArray);\n      *(uint *)(*paramArray + 0x1c) = *(uint *)(*paramArray + 0x1c) | 8;\n      *(uint *)(*paramArray + 0x1c) = *(uint *)(*paramArray + 0x1c) & 0xfffffffb;\n      *(uint *)(*paramArray + 0x1c) = *(uint *)(*paramArray + 0x1c) | *(uint *)(dataOffset + 0x10);\n      break;\n    case 0xc:\n      FUN_08005dac(*paramArray);\n      *(uint *)(*paramArray + 0x1c) = *(uint *)(*paramArray + 0x1c) | 0x800;\n      *(uint *)(*paramArray + 0x1c) = *(uint *)(*paramArray + 0x1c) & 0xfffffbff;\n      *(uint *)(*paramArray + 0x1c) = *(uint *)(*paramArray + 0x1c) | *(int *)(dataOffset + 0x10) << 8;\n    }\n    *(undefined *)((int)paramArray + 0x3d) = 1;\n    *(undefined *)(paramArray + 0xf) = 0;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08006186": "update_parameters_08006186",
                "param_1": "paramArray",
                "param_2": "dataOffset",
                "param_3": "caseValue"
            },
            "calling": [
                "FUN_08007118"
            ],
            "called": [
                "FUN_08005d48",
                "FUN_08005dac",
                "FUN_080060c4",
                "FUN_08005cec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006262": {
            "entrypoint": "0x08006262",
            "current_name": "update_bitwise_value_08006262",
            "code": "\nvoid updateBitwiseValue_08006262(int baseAddress,uint bitPosition,int newValue)\n\n{\n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) & ~(1 << (bitPosition & 0xff));\n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) | newValue << (bitPosition & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006262": "update_bitwise_value_08006262",
                "param_1": "baseAddress",
                "param_2": "bitPosition",
                "param_3": "newValue"
            },
            "calling": [
                "FUN_080063c0",
                "FUN_08006280",
                "FUN_080062f4",
                "FUN_08006390"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006280": {
            "entrypoint": "0x08006280",
            "current_name": "update_permissions_08006280",
            "code": "\nundefined4 updatePermissions_08006280(uint **ptrArray,undefined4 flag)\n\n{\n  switch(flag) {\n  case 0:\n    (*ptrArray)[3] = (*ptrArray)[3] | 2;\n    break;\n  case 4:\n    (*ptrArray)[3] = (*ptrArray)[3] | 4;\n    break;\n  case 8:\n    (*ptrArray)[3] = (*ptrArray)[3] | 8;\n    break;\n  case 0xc:\n    (*ptrArray)[3] = (*ptrArray)[3] | 0x10;\n  }\n  FUN_08006262(*ptrArray,flag,1);\n  if (*ptrArray == (uint *)0x40012c00) {\n    memoryValue = memoryValue | 0x8000;\n  }\n  **ptrArray = **ptrArray | 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006280": "update_permissions_08006280",
                "param_1": "ptrArray",
                "param_2": "flag",
                "uRam40012c44": "memoryValue"
            },
            "calling": [
                "FUN_08007648"
            ],
            "called": [
                "FUN_08006262"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080062f4": {
            "entrypoint": "0x080062f4",
            "current_name": "update_permission_flags_080062f4",
            "code": "\nundefined4 updatePermissionFlags_080062f4(uint **permissionFlags,undefined4 permissionCode)\n\n{\n  uint *tempPtr;\n  \n  switch(permissionCode) {\n  case 0:\n    (*permissionFlags)[3] = (*permissionFlags)[3] & 0xfffffffd;\n    break;\n  case 4:\n    (*permissionFlags)[3] = (*permissionFlags)[3] & 0xfffffffb;\n    break;\n  case 8:\n    (*permissionFlags)[3] = (*permissionFlags)[3] & 0xfffffff7;\n    break;\n  case 0xc:\n    (*permissionFlags)[3] = (*permissionFlags)[3] & 0xffffffef;\n  }\n  FUN_08006262(*permissionFlags,permissionCode,0);\n  if (((*permissionFlags == (uint *)0x40012c00) && ((uRam40012c20 & 0x1111) == 0)) &&\n     ((uRam40012c20 & 0x444) == 0)) {\n    uRam40012c44 = uRam40012c44 & 0xffff7fff;\n  }\n  tempPtr = *permissionFlags;\n  if (((tempPtr[8] & 0x1111) == 0) && ((tempPtr[8] & 0x444) == 0)) {\n    *tempPtr = *tempPtr & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080062f4": "update_permission_flags_080062f4",
                "param_1": "permissionFlags",
                "param_2": "permissionCode",
                "puVar1": "tempPtr"
            },
            "calling": [
                "FUN_080076e0"
            ],
            "called": [
                "FUN_08006262"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006390": {
            "entrypoint": "0x08006390",
            "current_name": "update_flag_and_value_08006390",
            "code": "\nundefined4 updateFlagAndValue_08006390(uint **ptrToUintPtr,undefined4 valueToSet)\n\n{\n  FUN_08006262(*ptrToUintPtr,valueToSet,1);\n  if (*ptrToUintPtr == (uint *)0x40012c00) {\n    dataFlag = dataFlag | 0x8000;\n  }\n  **ptrToUintPtr = **ptrToUintPtr | 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006390": "update_flag_and_value_08006390",
                "param_1": "ptrToUintPtr",
                "param_2": "valueToSet",
                "uRam40012c44": "dataFlag"
            },
            "calling": [
                "FUN_08007118"
            ],
            "called": [
                "FUN_08006262"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080063c0": {
            "entrypoint": "0x080063c0",
            "current_name": "update_memory_status_080063c0",
            "code": "\nundefined4 updateMemoryStatus_080063c0(uint **memoryArray,undefined4 status)\n\n{\n  uint *currentPtr;\n  \n  FUN_08006262(*memoryArray,status,0);\n  if (((*memoryArray == (uint *)0x40012c00) && ((memoryValue1 & 0x1111) == 0)) &&\n     ((memoryValue1 & 0x444) == 0)) {\n    memoryValue2 = memoryValue2 & 0xffff7fff;\n  }\n  currentPtr = *memoryArray;\n  if (((currentPtr[8] & 0x1111) == 0) && ((currentPtr[8] & 0x444) == 0)) {\n    *currentPtr = *currentPtr & 0xfffffffe;\n  }\n  *(undefined *)((int)memoryArray + 0x3d) = 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080063c0": "update_memory_status_080063c0",
                "param_1": "memoryArray",
                "param_2": "status",
                "puVar1": "currentPtr",
                "uRam40012c20": "memoryValue1",
                "uRam40012c44": "memoryValue2"
            },
            "calling": [
                "FUN_080071e4"
            ],
            "called": [
                "FUN_08006262"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006420": {
            "entrypoint": "0x08006420",
            "current_name": "update_memory_08006420",
            "code": "\nvoid updateMemory_08006420(int memoryAddress,uint bitPosition,int data)\n\n{\n  *(uint *)(memoryAddress + 0x20) = *(uint *)(memoryAddress + 0x20) & ~(4 << (bitPosition & 0xff));\n  *(uint *)(memoryAddress + 0x20) = *(uint *)(memoryAddress + 0x20) | data << (bitPosition & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006420": "update_memory_08006420",
                "param_1": "memoryAddress",
                "param_2": "bitPosition",
                "param_3": "data"
            },
            "calling": [
                "FUN_0800643c",
                "FUN_08006460"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800643c": {
            "entrypoint": "0x0800643c",
            "current_name": "set_flag_and_enable_0800643c",
            "code": "\nundefined4 setFlagAndEnable_0800643c(uint **inputData,undefined4 flag)\n\n{\n  FUN_08006420(*inputData,flag,4);\n  (*inputData)[0x11] = (*inputData)[0x11] | 0x8000;\n  **inputData = **inputData | 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800643c": "set_flag_and_enable_0800643c",
                "param_1": "inputData",
                "param_2": "flag"
            },
            "calling": [
                "FUN_08007118"
            ],
            "called": [
                "FUN_08006420"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006460": {
            "entrypoint": "0x08006460",
            "current_name": "update_flags_and_values_08006460",
            "code": "\nundefined4 updateFlagsAndValues_08006460(uint **parameterArray,undefined4 flag)\n\n{\n  uint *pointer1;\n  \n  FUN_08006420(*parameterArray,flag,0);\n  pointer1 = *parameterArray;\n  if (((pointer1[8] & 0x1111) == 0) && ((pointer1[8] & 0x444) == 0)) {\n    pointer1[0x11] = pointer1[0x11] & 0xffff7fff;\n  }\n  pointer1 = *parameterArray;\n  if (((pointer1[8] & 0x1111) == 0) && ((pointer1[8] & 0x444) == 0)) {\n    *pointer1 = *pointer1 & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006460": "update_flags_and_values_08006460",
                "param_1": "parameterArray",
                "param_2": "flag",
                "puVar1": "pointer1"
            },
            "calling": [
                "FUN_080071e4"
            ],
            "called": [
                "FUN_08006420"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080064ac": {
            "entrypoint": "0x080064ac",
            "current_name": "FUNC_080064ac",
            "code": "\nvoid FUNC_080064ac(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080064ac": "FUNC_080064ac"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080064ae": {
            "entrypoint": "0x080064ae",
            "current_name": "FUNC_080064ae",
            "code": "\nvoid FUNC_080064ae(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080064ae": "FUNC_080064ae"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080064b0": {
            "entrypoint": "0x080064b0",
            "current_name": "clear_flags_080064b0",
            "code": "\nvoid clearFlags_080064b0(int *ptr)\n\n{\n  *(uint *)(*ptr + 0xc) = *(uint *)(*ptr + 0xc) & 0xfffffedf;\n  *(uint *)(*ptr + 0x14) = *(uint *)(*ptr + 0x14) & 0xfffffffe;\n  *(undefined *)(ptr_int + 0x3a) = 0x20;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080064b0": "clear_flags_080064b0",
                "param_1": "ptr",
                "(int)param_1": "ptr_int"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080064cc": {
            "entrypoint": "0x080064cc",
            "current_name": "process_data_080064cc",
            "code": "\nundefined4 processData_080064cc(int *data)\n\n{\n  short count;\n  byte *bytePtr;\n  \n  if (*(char *)((int)data + 0x39) != '!') {\n    return 2;\n  }\n  if (data[2] == 0x1000) {\n    *(uint *)(*data + 4) = *(ushort *)data[8] & 0x1ff;\n    if (data[4] == 0) {\n      data[8] = data[8] + 2;\n    }\n    else {\n      data[8] = data[8] + 1;\n    }\n  }\n  else {\n    bytePtr = (byte *)data[8];\n    data[8] = (int)(bytePtr + 1);\n    *(uint *)(*data + 4) = (uint)*bytePtr;\n  }\n  count = *(short *)((int)data + 0x26) + -1;\n  *(short *)((int)data + 0x26) = count;\n  if (count == 0) {\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xffffff7f;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) | 0x40;\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080064cc": "process_data_080064cc",
                "param_1": "data",
                "sVar1": "count",
                "pbVar2": "bytePtr"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006538": {
            "entrypoint": "0x08006538",
            "current_name": "calculate_new_values_08006538",
            "code": "\nvoid calculateNewValues_08006538(int *inputParams)\n\n{\n  int value1;\n  int value2;\n  int value3;\n  int value4;\n  int value5;\n  int value6;\n  int value7;\n  int value8;\n  int value9;\n  int value10;\n  \n  *(uint *)(*inputParams + 0x10) = *(uint *)(*inputParams + 0x10) & 0xffffcfff | inputParams[3];\n  *(uint *)(*inputParams + 0xc) =\n       inputParams[2] | inputParams[4] | inputParams[5] | *(uint *)(*inputParams + 0xc) & 0xffffe9f3;\n  *(uint *)(*inputParams + 0x14) = *(uint *)(*inputParams + 0x14) & 0xfffffcff | inputParams[6];\n  value10 = *inputParams;\n  if (value10 != 0x40013800) {\n    value1 = FUN_08005a28();\n    value6 = inputParams[1];\n    value2 = FUN_08005a28();\n    value7 = inputParams[1];\n    value3 = FUN_08005a28();\n    value8 = inputParams[1];\n    value4 = FUN_08005a28();\n    value9 = inputParams[1];\n    value5 = FUN_08005a28();\n    *(uint *)(value10 + 8) =\n         ((uint)((int)((ulonglong)\n                       (((uint)(value4 * 0x19) / (uint)(value9 << 2) +\n                        (int)(((ulonglong)(uint)(value5 * 0x19) / (ulonglong)(uint)(inputParams[1] << 2))\n                             / 100) * -100) * 0x10 + 0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n         ((((uint)(value2 * 0x19) / (uint)(value7 << 2) +\n           (int)(((ulonglong)(uint)(value3 * 0x19) / (ulonglong)(uint)(value8 << 2)) / 100) * -100) *\n           0x10 + 0x32) / 100 & 0xf0) +\n         (int)(((ulonglong)(uint)(value1 * 0x19) / (ulonglong)(uint)(value6 << 2)) / 100) * 0x10;\n    return;\n  }\n  value10 = FUN_08005a48();\n  value5 = inputParams[1];\n  value1 = FUN_08005a48();\n  value6 = inputParams[1];\n  value2 = FUN_08005a48();\n  value7 = inputParams[1];\n  value3 = FUN_08005a48();\n  value8 = inputParams[1];\n  value4 = FUN_08005a48();\n  iRam40013808 = ((uint)((int)((ulonglong)\n                               (((uint)(value3 * 0x19) / (uint)(value8 << 2) +\n                                (int)(((ulonglong)(uint)(value4 * 0x19) /\n                                      (ulonglong)(uint)(inputParams[1] << 2)) / 100) * -100) * 0x10 +\n                               0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n                 ((((uint)(value1 * 0x19) / (uint)(value6 << 2) +\n                   (int)(((ulonglong)(uint)(value2 * 0x19) / (ulonglong)(uint)(value7 << 2)) / 100) *\n                   -100) * 0x10 + 0x32) / 100 & 0xf0) +\n                 (int)(((ulonglong)(uint)(value10 * 0x19) / (ulonglong)(uint)(value5 << 2)) / 100) *\n                 0x10;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006538": "calculate_new_values_08006538",
                "param_1": "inputParams",
                "iVar1": "value1",
                "iVar2": "value2",
                "iVar3": "value3",
                "iVar4": "value4",
                "iVar5": "value5",
                "iVar6": "value6",
                "iVar7": "value7",
                "iVar8": "value8",
                "iVar9": "value9",
                "iVar10": "value10"
            },
            "calling": [
                "FUN_0800674e"
            ],
            "called": [
                "FUN_08005a28",
                "FUN_08005a48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080066e8": {
            "entrypoint": "0x080066e8",
            "current_name": "check_validity_and_set_flags_080066e8",
            "code": "\nundefined4 checkValidityAndSetFlags_080066e8(uint **pointerArray,uint bitMask,uint isEqual,int comparisonValue,uint threshold)\n\n{\n  int result;\n  \n  do {\n    if (((bitMask & ~**pointerArray) == 0) != isEqual) {\n      return 0;\n    }\n  } while ((threshold == 0xffffffff) ||\n          ((threshold != 0 && (result = FUN_08003760(), (uint)(result - comparisonValue) <= threshold))));\n  (*pointerArray)[3] = (*pointerArray)[3] & 0xfffffe5f;\n  (*pointerArray)[5] = (*pointerArray)[5] & 0xfffffffe;\n  *(undefined *)((int)pointerArray + 0x39) = 0x20;\n  *(undefined *)((int)pointerArray + 0x3a) = 0x20;\n  *(undefined *)(pointerArray + 0xe) = 0;\n  return 3;\n}\n\n",
            "renaming": {
                "FUN_080066e8": "check_validity_and_set_flags_080066e8",
                "param_1": "pointerArray",
                "param_2": "bitMask",
                "param_3": "isEqual",
                "param_4": "comparisonValue",
                "param_5": "threshold",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080067ac"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800674c": {
            "entrypoint": "0x0800674c",
            "current_name": "FUNC_0800674c",
            "code": "\nvoid FUNC_0800674c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800674c": "FUNC_0800674c"
            },
            "calling": [
                "FUN_0800674e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800674e": {
            "entrypoint": "0x0800674e",
            "current_name": "initialize_data_0800674e",
            "code": "\nundefined4 initializeData_0800674e(int *dataPtr)\n\n{\n  if (dataPtr != (int *)0x0) {\n    if (*(char *)((int)dataPtr + 0x39) == '\\0') {\n      *(undefined *)(dataPtr + 0xe) = 0;\n      FUNC_0800674c();\n    }\n    *(undefined *)((int)dataPtr + 0x39) = 0x24;\n    *(uint *)(*dataPtr + 0xc) = *(uint *)(*dataPtr + 0xc) & 0xffffdfff;\n    FUN_08006538(dataPtr);\n    *(uint *)(*dataPtr + 0x10) = *(uint *)(*dataPtr + 0x10) & 0xffffb7ff;\n    *(uint *)(*dataPtr + 0x14) = *(uint *)(*dataPtr + 0x14) & 0xffffffd5;\n    *(uint *)(*dataPtr + 0xc) = *(uint *)(*dataPtr + 0xc) | 0x2000;\n    counter = 0;\n    *(undefined *)((int)dataPtr + 0x39) = 0x20;\n    *(undefined *)((int)dataPtr + 0x3a) = 0x20;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800674e": "initialize_data_0800674e",
                "param_1": "dataPtr",
                "param_1[0xf]": "counter"
            },
            "calling": [
                "FUN_08008078"
            ],
            "called": [
                "FUN_0800674c",
                "FUN_08006538"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080067ac": {
            "entrypoint": "0x080067ac",
            "current_name": "process_data_080067ac",
            "code": "\nundefined4 processData_080067ac(int *inputArray,ushort *inputString,int stringLength,undefined4 paramValue)\n\n{\n  int returnValue;\n  undefined4 result;\n  \n  if (*(char *)((int)inputArray + 0x39) == ' ') {\n    if (inputString == (ushort *)0x0) {\n      result = 1;\n    }\n    else if (stringLength == 0) {\n      result = 1;\n    }\n    else if (*(char *)(inputArray + 0xe) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(inputArray + 0xe) = 1;\n      inputArray[0xf] = 0;\n      *(undefined *)((int)inputArray + 0x39) = 0x21;\n      result = FUN_08003760();\n      *(short *)(inputArray + 9) = (short)stringLength;\n      *(short *)((int)inputArray + 0x26) = (short)stringLength;\n      while (*(short *)((int)inputArray + 0x26) != 0) {\n        *(short *)((int)inputArray + 0x26) = *(short *)((int)inputArray + 0x26) + -1;\n        if (inputArray[2] == 0x1000) {\n          returnValue = FUN_080066e8(inputArray,0x80,0,result,paramValue);\n          if (returnValue != 0) {\n            return 3;\n          }\n          *(uint *)(*inputArray + 4) = *inputString & 0x1ff;\n          if (inputArray[4] == 0) {\n            inputString = inputString + 1;\n          }\n          else {\n            inputString = (ushort *)((int)inputString + 1);\n          }\n        }\n        else {\n          returnValue = FUN_080066e8(inputArray,0x80,0,result,paramValue);\n          if (returnValue != 0) {\n            return 3;\n          }\n          *(uint *)(*inputArray + 4) = (uint)*(byte *)inputString;\n          inputString = (ushort *)((int)inputString + 1);\n        }\n      }\n      returnValue = FUN_080066e8(inputArray,0x40,0,result,paramValue);\n      if (returnValue == 0) {\n        *(undefined *)((int)inputArray + 0x39) = 0x20;\n        *(undefined *)(inputArray + 0xe) = 0;\n        result = 0;\n      }\n      else {\n        result = 3;\n      }\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080067ac": "process_data_080067ac",
                "param_1": "inputArray",
                "param_2": "inputString",
                "param_3": "stringLength",
                "param_4": "paramValue",
                "iVar1": "returnValue",
                "uVar2": "result"
            },
            "calling": [
                "FUN_08008500"
            ],
            "called": [
                "FUN_080066e8",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800688e": {
            "entrypoint": "0x0800688e",
            "current_name": "validate_input_0800688e",
            "code": "\nresult validate_input_0800688e(int *input_data,int value1,int value2)\n\n{\n  if (*(character *)((int)input_data + 0x39) != ' ') {\n    return 2;\n  }\n  if (value1 == 0) {\n    return 1;\n  }\n  if (value2 == 0) {\n    return 1;\n  }\n  if (*(character *)(input_data + 0xe) != '\\x01') {\n    input_data[8] = value1;\n    *(short_value *)(input_data + 9) = (short_value)value2;\n    *(short_value *)((int)input_data + 0x26) = (short_value)value2;\n    input_data[0xf] = 0;\n    *(undefined *)((int)input_data + 0x39) = 0x21;\n    *(undefined *)(input_data + 0xe) = 0;\n    *(unsigned_integer *)(*input_data + 0xc) = *(unsigned_integer *)(*input_data + 0xc) | 0x80;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_0800688e": "validate_input_0800688e",
                "param_1": "input_data",
                "param_2": "value1",
                "param_3": "value2",
                "char": "character",
                "short": "short_value",
                "undefined4": "result",
                "uint": "unsigned_integer"
            },
            "calling": [
                "FUN_08008694",
                "FUN_08008730"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080068d6": {
            "entrypoint": "0x080068d6",
            "current_name": "validate_input_080068d6",
            "code": "\nundefined4 validate_input_080068d6(int *input_array,int value_1,int value_2)\n\n{\n  if (*(char *)((int)input_array + 0x3a) != ' ') {\n    return 2;\n  }\n  if (value_1 == 0) {\n    return 1;\n  }\n  if (value_2 == 0) {\n    return 1;\n  }\n  if (*(char *)(input_array + 0xe) != '\\x01') {\n    input_array[10] = value_1;\n    *(short *)(input_array + 0xb) = (short)value_2;\n    *(short *)((int)input_array + 0x2e) = (short)value_2;\n    input_array[15] = 0;\n    *(undefined *)((int)input_array + 0x3a) = 0x22;\n    *(undefined *)(input_array + 0xe) = 0;\n    *(uint *)(*input_array + 0xc) = *(uint *)(*input_array + 0xc) | 0x100;\n    *(uint *)(*input_array + 0x14) = *(uint *)(*input_array + 0x14) | 1;\n    *(uint *)(*input_array + 0xc) = *(uint *)(*input_array + 0xc) | 0x20;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_080068d6": "validate_input_080068d6",
                "param_1": "input_array",
                "param_2": "value_1",
                "param_3": "value_2",
                "param_1[10]": "input_array[10]",
                "param_1[0xf]": "input_array[15]"
            },
            "calling": [
                "FUN_08008600",
                "FUN_0800863c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006932": {
            "entrypoint": "0x08006932",
            "current_name": "update_status_08006932",
            "code": "\nundefined4 updateStatus_08006932(int *statusPtr)\n\n{\n  *(uint *)(*statusPtr + 0xc) = *(uint *)(*statusPtr + 0xc) & 0xffffffbf;\n  *(undefined *)((int)statusPtr + 0x39) = 0x20;\n  FUN_08008730();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006932": "update_status_08006932",
                "param_1": "statusPtr"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [
                "FUN_08008730"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800694c": {
            "entrypoint": "0x0800694c",
            "current_name": "process_data_0800694c",
            "code": "\nundefined4 processData_0800694c(int *data)\n\n{\n  byte *bytePtr;\n  short counter;\n  undefined *bytePtr2;\n  \n  if (*(char *)((int)data + 0x3a) != '\\\"') {\n    return 2;\n  }\n  if (data[2] == 0x1000) {\n    if (data[4] == 0) {\n      *(ushort *)data[10] = (ushort)((uint)(*(int *)(*data + 4) << 0x17) >> 0x17);\n      data[10] = data[10] + 2;\n    }\n    else {\n      *(ushort *)data[10] = (ushort)*(undefined4 *)(*data + 4) & 0xff;\n      data[10] = data[10] + 1;\n    }\n  }\n  else if (data[4] == 0) {\n    bytePtr2 = (undefined *)data[10];\n    data[10] = (int)(bytePtr2 + 1);\n    *bytePtr2 = (char)*(undefined4 *)(*data + 4);\n  }\n  else {\n    bytePtr = (byte *)data[10];\n    data[10] = (int)(bytePtr + 1);\n    *bytePtr = (byte)*(undefined4 *)(*data + 4) & 0x7f;\n  }\n  counter = *(short *)((int)data + 0x2e) + -1;\n  *(short *)((int)data + 0x2e) = counter;\n  if (counter != 0) {\n    return 0;\n  }\n  *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xffffffdf;\n  *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xfffffeff;\n  *(uint *)(*data + 0x14) = *(uint *)(*data + 0x14) & 0xfffffffe;\n  *(undefined *)((int)data + 0x3a) = 0x20;\n  FUN_0800870c();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800694c": "process_data_0800694c",
                "param_1": "data",
                "pbVar1": "bytePtr",
                "sVar2": "counter",
                "puVar3": "bytePtr2"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [
                "FUN_0800870c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080069ec": {
            "entrypoint": "0x080069ec",
            "current_name": "check_and_handle_conditions_080069ec",
            "code": "\nvoid checkAndHandleConditions_080069ec(uint **inputParams)\n\n{\n  int returnValue;\n  uint value2;\n  uint *pointerToValue1;\n  uint value3;\n  uint value1;\n  \n  pointerToValue1 = *inputParams;\n  value1 = *pointerToValue1;\n  value2 = pointerToValue1[3];\n  if ((((value1 & 0xf) == 0) && ((value1 & 0x20) != 0)) && ((value2 & 0x20) != 0)) {\n    FUN_0800694c(inputParams);\n    return;\n  }\n  if (((value1 & 0xf) == 0) || ((value3 = pointerToValue1[5] & 1, value3 == 0 && ((value2 & 0x120) == 0)))) {\n    if (((value1 & 0x80) != 0) && ((value2 & 0x80) != 0)) {\n      FUN_080064cc(inputParams);\n      return;\n    }\n    if (((value1 & 0x40) != 0) && ((value2 & 0x40) != 0)) {\n      FUN_08006932(inputParams);\n    }\n  }\n  else {\n    if (((value1 & 1) != 0) && ((value2 & 0x100) != 0)) {\n      inputParams[0xf] = (uint *)((uint)inputParams[0xf] | 1);\n    }\n    if (((value1 & 4) != 0) && (value3 != 0)) {\n      inputParams[0xf] = (uint *)((uint)inputParams[0xf] | 2);\n    }\n    if (((value1 & 2) != 0) && (value3 != 0)) {\n      inputParams[0xf] = (uint *)((uint)inputParams[0xf] | 4);\n    }\n    if (((value1 & 8) != 0) && (value3 != 0)) {\n      inputParams[0xf] = (uint *)((uint)inputParams[0xf] | 8);\n    }\n    if (inputParams[0xf] != (uint *)0x0) {\n      if (((value1 & 0x20) != 0) && ((value2 & 0x20) != 0)) {\n        FUN_0800694c(inputParams);\n      }\n      if ((((uint)inputParams[0xf] & 8) == 0) && (((*inputParams)[5] & 0x40) == 0)) {\n        FUNC_0800877c(inputParams);\n        inputParams[0xf] = (uint *)0x0;\n        return;\n      }\n      FUN_080064b0(inputParams);\n      pointerToValue1 = *inputParams;\n      if ((pointerToValue1[5] & 0x40) == 0) {\n        FUNC_0800877c(inputParams);\n        return;\n      }\n      pointerToValue1[5] = pointerToValue1[5] & 0xffffffbf;\n      if (inputParams[0xd] == (uint *)0x0) {\n        FUNC_0800877c(inputParams);\n        return;\n      }\n      inputParams[0xd][0xd] = (uint)&LAB_08006b0c_1;\n      returnValue = FUN_08004050(inputParams[0xd]);\n      if (returnValue != 0) {\n        (*(code *)inputParams[0xd][0xd])();\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080069ec": "check_and_handle_conditions_080069ec",
                "param_1": "inputParams",
                "iVar1": "returnValue",
                "uVar2": "value2",
                "puVar3": "pointerToValue1",
                "uVar4": "value3",
                "uVar5": "value1"
            },
            "calling": [],
            "called": [
                "FUN_0800877c",
                "FUN_080064b0",
                "FUN_08004050",
                "FUN_08006932",
                "FUN_0800694c",
                "FUN_080064cc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b1c": {
            "entrypoint": "0x08006b1c",
            "current_name": "combine_bytes_08006b1c",
            "code": "\nbyte combineBytes_08006b1c(int address)\n\n{\n  return *(byte *)(address + 0x3a) | *(byte *)(address + 0x39);\n}\n\n",
            "renaming": {
                "FUN_08006b1c": "combine_bytes_08006b1c",
                "param_1": "address"
            },
            "calling": [
                "FUN_080085b8",
                "FUN_080085dc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b28": {
            "entrypoint": "0x08006b28",
            "current_name": "get_bit_value_08006b28",
            "code": "\nuint get_bit_value_08006b28(uint input_value,int base_address)\n\n{\n  return *(uint *)(base_address + ((input_value << 0x18) >> 0x1c) * 4) >> (input_value & 0xf) & 1;\n}\n\n",
            "renaming": {
                "FUN_08006b28": "get_bit_value_08006b28",
                "param_1": "input_value",
                "param_2": "base_address"
            },
            "calling": [
                "FUN_08008990",
                "FUN_08008a24",
                "FUN_080088e0",
                "FUN_08008a6c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b3e": {
            "entrypoint": "0x08006b3e",
            "current_name": "update_bit_08006b3e",
            "code": "\nvoid updateBit_08006b3e(uint data,int array)\n\n{\n  uint index;\n  \n  index = (data << 0x18) >> 0x1c;\n  *(uint *)(array + index * 4) = *(uint *)(array + index * 4) | 1 << (data & 0xf);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006b3e": "update_bit_08006b3e",
                "param_1": "data",
                "param_2": "array",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08008990",
                "FUN_080088e0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b5c": {
            "entrypoint": "0x08006b5c",
            "current_name": "update_bit_value_08006b5c",
            "code": "\nvoid updateBitValue_08006b5c(uint bitPosition,int dataAddress)\n\n{\n  uint shiftedBits;\n  \n  shiftedBits = (bitPosition << 0x18) >> 0x1c;\n  *(uint *)(dataAddress + shiftedBits * 4) = *(uint *)(dataAddress + shiftedBits * 4) & ~(1 << (bitPosition & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006b5c": "update_bit_value_08006b5c",
                "param_1": "bitPosition",
                "param_2": "dataAddress",
                "uVar1": "shiftedBits"
            },
            "calling": [
                "FUN_08008990"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b7c": {
            "entrypoint": "0x08006b7c",
            "current_name": "get_memory_address_08006b7c",
            "code": "\nundefined4 getMemoryAddress_08006b7c(undefined4 index)\n\n{\n  switch(index) {\n  case 0:\n    return 0x40010800;\n  case 1:\n    return 0x40010c00;\n  case 2:\n    return 0x40011000;\n  case 3:\n    return 0x40011400;\n  case 4:\n    return 0x40011800;\n  default:\n    return 0;\n  }\n}\n\n",
            "renaming": {
                "FUN_08006b7c": "get_memory_address_08006b7c",
                "param_1": "index"
            },
            "calling": [
                "FUN_08008a24",
                "FUN_08008a6c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006bb8": {
            "entrypoint": "0x08006bb8",
            "current_name": "set_flag_and_return_value_08006bb8",
            "code": "\n\n\nundefined4 setFlagAndReturnValue_08006bb8(undefined4 flag)\n\n{\n  undefined4 returnValue;\n  \n  switch(flag) {\n  case 0:\n    _DAT_40021018 = _DAT_40021018 | 4;\n    returnValue = 0x40010800;\n    break;\n  case 1:\n    _DAT_40021018 = _DAT_40021018 | 8;\n    returnValue = 0x40010c00;\n    break;\n  case 2:\n    _DAT_40021018 = _DAT_40021018 | 0x10;\n    returnValue = 0x40011000;\n    break;\n  case 3:\n    _DAT_40021018 = _DAT_40021018 | 0x20;\n    returnValue = 0x40011400;\n    break;\n  case 4:\n    _DAT_40021018 = _DAT_40021018 | 0x40;\n    returnValue = 0x40011800;\n    break;\n  default:\n    returnValue = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08006bb8": "set_flag_and_return_value_08006bb8",
                "param_1": "flag",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08006ca8",
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08006e68",
                "FUN_08007258"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c60": {
            "entrypoint": "0x08006c60",
            "current_name": "calculate_threshold_08006c60",
            "code": "\nuint calculateThreshold_08006c60(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  int result;\n  uint threshold;\n  \n  result = FUN_08007376(input1,&DAT_0800a5b8,input3,input4,input4);\n  threshold = (uint)(result << 0xc) >> 0x1b;\n  if (0x10 < threshold - 1) {\n    threshold = 0;\n  }\n  return threshold;\n}\n\n",
            "renaming": {
                "FUN_08006c60": "calculate_threshold_08006c60",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "result",
                "uVar2": "threshold"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08007376"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c7c": {
            "entrypoint": "0x08006c7c",
            "current_name": "calculate_return_value_08006c7c",
            "code": "\nundefined4 calculateReturnValue_08006c7c(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  int result;\n  uint shiftedValue;\n  \n  result = FUN_08007376(input1,&DAT_0800a6cc,input3,input4,input4);\n  shiftedValue = (uint)(result << 0xc) >> 0x1b;\n  if (shiftedValue == 3) {\n    return 8;\n  }\n  if (shiftedValue != 4) {\n    if (shiftedValue != 2) {\n      return 0;\n    }\n    return 4;\n  }\n  return 0xc;\n}\n\n",
            "renaming": {
                "FUN_08006c7c": "calculate_return_value_08006c7c",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "result",
                "uVar2": "shiftedValue"
            },
            "calling": [
                "FUN_080071e4",
                "FUN_08007118"
            ],
            "called": [
                "FUN_08007376"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ca8": {
            "entrypoint": "0x08006ca8",
            "current_name": "initialize_flag_08006ca8",
            "code": "\n\n\nvoid initializeFlag_08006ca8(int *flagPointer,undefined4 newValue)\n\n{\n  undefined4 result;\n  uint modifiedFlag;\n  int flagValue;\n  uint bitMask;\n  undefined4 loopCount;\n  undefined4 tempValue;\n  \n  flagValue = *flagPointer;\n  if (flagValue == 0x40012400) {\n    modifiedFlag = _DAT_40021018 | 0x200;\n    flagValue = 0x200;\n    _DAT_40021018 = modifiedFlag;\n  }\n  else {\n    modifiedFlag = 0x40012800;\n    if (flagValue == 0x40012800) {\n      modifiedFlag = _DAT_40021018 | 0x400;\n      flagValue = 0x400;\n      _DAT_40021018 = modifiedFlag;\n    }\n  }\n  result = FUN_08006bb8((uint)((int)(char)DAT_20000014 << 0x18) >> 0x1c,newValue,modifiedFlag,flagValue);\n  bitMask = 1 << (DAT_20000014 & 0xf) & 0xffff;\n  loopCount = 3;\n  tempValue = 0;\n  FUN_080040e8(result,&bitMask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006ca8": "initialize_flag_08006ca8",
                "param_1": "flagPointer",
                "param_2": "newValue",
                "uVar1": "result",
                "uVar2": "modifiedFlag",
                "iVar3": "flagValue",
                "local_18": "bitMask",
                "local_14": "loopCount",
                "local_10": "tempValue"
            },
            "calling": [
                "FUN_08003bd8"
            ],
            "called": [
                "FUN_08006bb8",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d24": {
            "entrypoint": "0x08006d24",
            "current_name": "update_data_08006d24",
            "code": "\n\n\nvoid updateData_08006d24(int *data)\n\n{\n  if (*data != 0x40012400) {\n    if (*data == 0x40012800) {\n      _DAT_4002100c = _DAT_4002100c & 0xfffffbff;\n      _DAT_40021018 = _DAT_40021018 & 0xfffffbff;\n    }\n    return;\n  }\n  _DAT_4002100c = _DAT_4002100c & 0xfffffdff;\n  _DAT_40021018 = _DAT_40021018 & 0xfffffdff;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d24": "update_data_08006d24",
                "param_1": "data"
            },
            "calling": [
                "FUN_08003ce8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d80": {
            "entrypoint": "0x08006d80",
            "current_name": "process_binary_data_08006d80",
            "code": "\nundefined2 processBinaryData_08006d80(undefined4 inputData)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined2 result;\n  uint errorCode;\n  undefined4 flag1;\n  undefined4 flag2;\n  int tempVar;\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  undefined4 temp4;\n  undefined4 temp5;\n  undefined4 temp6;\n  undefined4 temp7;\n  undefined4 temp8;\n  \n  FUN_080091c6(&tempVar,0,0x30);\n  errorCode = 0;\n  flag1 = 0;\n  flag2 = 0;\n  result = 0;\n  tempVar = FUN_08007320(inputData,&DAT_0800a5b8);\n  if (tempVar == 0) {\n    result = 0;\n  }\n  else {\n    temp1 = 0;\n    temp2 = 0;\n    temp3 = 0;\n    temp5 = 0;\n    temp7 = 0xe0000;\n    temp8 = 0;\n    temp4 = 1;\n    temp6 = 0;\n    DAT_20000014 = (undefined)inputData;\n    iVar1 = FUN_08003bd8(&tempVar);\n    if (iVar1 == 0) {\n      errorCode = FUN_08006c60(inputData);\n      if (errorCode < 0x12) {\n        flag1 = 1;\n        flag2 = 2;\n        iVar1 = FUN_080038e4(&tempVar,&errorCode);\n        if (iVar1 == 0) {\n          iVar1 = FUN_08003e20(&tempVar);\n          if (iVar1 == 0) {\n            iVar1 = FUN_08003aa0(&tempVar);\n            if (iVar1 == 0) {\n              iVar1 = FUN_0800376c(&tempVar,10);\n              if (iVar1 == 0) {\n                uVar2 = FUN_08003a1c(&tempVar);\n                if ((uVar2 & 0x200) != 0) {\n                  result = FUN_080038dc(&tempVar);\n                }\n                iVar1 = FUN_08003de4(&tempVar);\n                if (iVar1 == 0) {\n                  iVar1 = FUN_08003ce8(&tempVar);\n                  if (iVar1 != 0) {\n                    result = 0;\n                  }\n                }\n                else {\n                  result = 0;\n                }\n              }\n              else {\n                result = 0;\n              }\n            }\n            else {\n              result = 0;\n            }\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        result = 0;\n      }\n    }\n    else {\n      result = 0;\n    }\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08006d80": "process_binary_data_08006d80",
                "param_1": "inputData",
                "local_46": "result",
                "local_44": "errorCode",
                "local_40": "flag1",
                "local_3c": "flag2",
                "local_38": "tempVar",
                "local_34": "temp1",
                "local_30": "temp2",
                "local_2c": "temp3",
                "local_28": "temp4",
                "local_24": "temp5",
                "local_20": "temp6",
                "local_1c": "temp7",
                "local_10": "temp8"
            },
            "calling": [
                "FUN_08008880"
            ],
            "called": [
                "FUN_080038dc",
                "FUN_08003bd8",
                "FUN_080038e4",
                "FUN_08003a1c",
                "FUN_08006c60",
                "FUN_080091c6",
                "FUN_0800376c",
                "FUN_08003ce8",
                "FUN_08003e20",
                "FUN_08003aa0",
                "FUN_08003de4",
                "FUN_08007320"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e68": {
            "entrypoint": "0x08006e68",
            "current_name": "initialize_hardware_08006e68",
            "code": "\n\n\nvoid initializeHardware_08006e68(undefined4 config)\n\n{\n  int flag;\n  undefined4 shiftedData;\n  uint bitMask;\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  \n  flag = FUN_08007376((int)(char)DAT_20000014,&DAT_0800a6cc);\n  FUN_08007438(config);\n  shiftedData = FUN_08006bb8((uint)((int)(char)DAT_20000014 << 0x18) >> 0x1c);\n  value1 = 2;\n  value2 = 0;\n  value3 = 3;\n  _DAT_40021018 = _DAT_40021018 | 1;\n  switch((uint)(flag << 0x11) >> 0x19) {\n  case 1:\n    _DAT_40010004 = _DAT_40010004 | 0x7000001;\n    break;\n  case 2:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n    break;\n  case 3:\n    _DAT_40010004 = _DAT_40010004 | 0x7000002;\n    break;\n  case 4:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n    break;\n  case 5:\n    _DAT_40010004 = _DAT_40010004 | 0x7000004;\n    break;\n  case 6:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n    break;\n  case 7:\n    _DAT_40010004 = _DAT_40010004 | 0x7000008;\n    break;\n  case 8:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n    break;\n  case 9:\n    _DAT_40010004 = _DAT_40010004 | 0x7000030;\n    break;\n  case 10:\n    _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n    break;\n  case 0xb:\n    _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n    break;\n  case 0xc:\n    _DAT_40010004 = _DAT_40010004 | 0x70000c0;\n    break;\n  case 0xd:\n    _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n    break;\n  case 0xe:\n    _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n    break;\n  case 0xf:\n    _DAT_40010004 = _DAT_40010004 | 0x7000300;\n    break;\n  case 0x10:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n    break;\n  case 0x11:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n    break;\n  case 0x12:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n    break;\n  case 0x13:\n    _DAT_40010004 = _DAT_40010004 | 0x7000c00;\n    break;\n  case 0x14:\n    _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n    break;\n  case 0x15:\n    _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n    break;\n  case 0x16:\n    _DAT_40010004 = _DAT_40010004 | 0x7001000;\n    break;\n  case 0x17:\n    _DAT_40010004 = _DAT_40010004 & 0xffffefff | 0x7000000;\n    break;\n  case 0x1b:\n    _DAT_40010004 = _DAT_40010004 | 0x7008000;\n    break;\n  case 0x1c:\n    _DAT_40010004 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n    break;\n  case 0x21:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff;\n    break;\n  case 0x22:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n    break;\n  case 0x23:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n    break;\n  case 0x24:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n  }\n  bitMask = 1 << (DAT_20000014 & 0xf) & 0xffff;\n  FUN_080040e8(shiftedData,&bitMask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006e68": "initialize_hardware_08006e68",
                "param_1": "config",
                "iVar1": "flag",
                "uVar2": "shiftedData",
                "local_20": "bitMask",
                "local_1c": "value1",
                "local_18": "value2",
                "local_14": "value3"
            },
            "calling": [
                "FUN_08006092"
            ],
            "called": [
                "FUN_08007438",
                "FUN_08007376",
                "FUN_08006bb8",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007110": {
            "entrypoint": "0x08007110",
            "current_name": "initialize_08007110",
            "code": "\nvoid initialize_08007110(void)\n\n{\n  FUN_080074e0();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007110": "initialize_08007110"
            },
            "calling": [
                "FUN_08005e2e"
            ],
            "called": [
                "FUN_080074e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007118": {
            "entrypoint": "0x08007118",
            "current_name": "extract_and_process_data_08007118",
            "code": "\nvoid extract_and_process_data_08007118(undefined4 input_val,uint divider,int count,undefined4 output_val,char flag)\n\n{\n  uint quotient;\n  int result;\n  int status;\n  undefined4 local_var1;\n  undefined4 local_var2;\n  undefined4 local_var3;\n  undefined4 local_var4;\n  undefined4 local_var5;\n  undefined4 local_var6;\n  undefined4 local_var7;\n  int buffer;\n  int calculated_value;\n  undefined4 local_var8;\n  int local_var9;\n  undefined4 local_var10;\n  undefined4 local_var11;\n  undefined local_flag;\n  \n  FUN_080091c6(&buffer,0,0x40);\n  local_var1 = 0;\n  local_var2 = 0;\n  local_var3 = 0;\n  local_var4 = 0;\n  local_var5 = 0;\n  local_var6 = 0;\n  local_var7 = 0;\n  buffer = FUN_08007320(input_val,&DAT_0800a6cc);\n  if (buffer != 0) {\n    quotient = FUN_080075dc();\n    calculated_value = quotient / divider - 1;\n    local_var9 = count + -1;\n    local_var10 = 0;\n    local_var8 = 0;\n    local_var11 = 0;\n    local_flag = 0;\n    if (flag == '\\x01') {\n      DAT_20000014 = (undefined)input_val;\n      result = FUN_08006092(&buffer);\n      if (result != 0) {\n        return;\n      }\n    }\n    result = FUN_08006c7c(input_val);\n    if ((((result == 0) || (result == 4)) || (result == 8)) || ((result == 0xc || (result == 0x18)))) {\n      local_var1 = 0x60;\n      local_var3 = 0;\n      local_var5 = 0;\n      local_var4 = 0;\n      local_var7 = 0;\n      local_var6 = 0;\n      local_var2 = output_val;\n      status = FUN_08006186(&buffer,&local_var1,result);\n      if (status == 0) {\n        quotient = FUN_08007376(input_val,&DAT_0800a6cc);\n        if ((quotient & 0x100000) == 0) {\n          FUN_08006390(&buffer,result);\n        }\n        else {\n          FUN_0800643c(&buffer,result);\n        }\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007118": "extract_and_process_data_08007118",
                "param_1": "input_val",
                "param_2": "divider",
                "param_3": "count",
                "param_4": "output_val",
                "param_5": "flag",
                "uVar1": "quotient",
                "iVar2": "result",
                "iVar3": "status",
                "local_74": "local_var1",
                "local_70": "local_var2",
                "local_6c": "local_var3",
                "local_68": "local_var4",
                "local_64": "local_var5",
                "local_60": "local_var6",
                "local_5c": "local_var7",
                "local_58": "buffer",
                "local_54": "calculated_value",
                "local_50": "local_var8",
                "local_4c": "local_var9",
                "local_48": "local_var10",
                "local_44": "local_var11",
                "local_1b": "local_flag"
            },
            "calling": [
                "FUN_080088e0"
            ],
            "called": [
                "FUN_08006092",
                "FUN_08006186",
                "FUN_0800643c",
                "FUN_08006c7c",
                "FUN_080091c6",
                "FUN_08007376",
                "FUN_080075dc",
                "FUN_08006390",
                "FUN_08007320"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080071e4": {
            "entrypoint": "0x080071e4",
            "current_name": "process_binary_080071e4",
            "code": "\nvoid processBinary_080071e4(undefined4 binaryData)\n\n{\n  int result;\n  uint flags;\n  int buffer [17];\n  \n  buffer[0] = FUN_08007320(binaryData,&DAT_0800a6cc);\n  if ((buffer[0] != 0) &&\n     ((((result = FUN_08006c7c(binaryData), result == 0 || (result == 4)) || (result == 8)) ||\n      ((result == 0xc || (result == 0x18)))))) {\n    flags = FUN_08007376(binaryData,&DAT_0800a6cc);\n    if ((flags & 0x100000) == 0) {\n      FUN_080063c0(buffer,result);\n    }\n    else {\n      FUN_08006460(buffer,result);\n    }\n    FUN_08005e2e(buffer);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080071e4": "process_binary_080071e4",
                "param_1": "binaryData",
                "iVar1": "result",
                "uVar2": "flags",
                "local_50": "buffer"
            },
            "calling": [
                "FUN_08008990"
            ],
            "called": [
                "FUN_08005e2e",
                "FUN_080063c0",
                "FUN_08006c7c",
                "FUN_08006460",
                "FUN_08007376",
                "FUN_08007320"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800723c": {
            "entrypoint": "0x0800723c",
            "current_name": "initialize_and_execute_0800723c",
            "code": "\nvoid initialize_and_execute_0800723c(void)\n\n{\n  FUN_08003760();\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800723c": "initialize_and_execute_0800723c"
            },
            "calling": [
                "FUN_08008abc"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007244": {
            "entrypoint": "0x08007244",
            "current_name": "FUNC_08007244",
            "code": "\nvoid FUNC_08007244(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007244": "FUNC_08007244"
            },
            "calling": [
                "FUN_08007246"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08007246": {
            "entrypoint": "0x08007246",
            "current_name": "run_application_08007246",
            "code": "\nvoid run_application_08007246(void)\n\n{\n  FUN_08003748();\n  FUN_08004046();\n  FUNC_08007244();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007246": "run_application_08007246"
            },
            "calling": [],
            "called": [
                "FUN_08007244",
                "FUN_08004046",
                "FUN_08003748"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007258": {
            "entrypoint": "0x08007258",
            "current_name": "initialize_peripheral_08007258",
            "code": "\n\n\nvoid initializePeripheral_08007258(uint inputConfig,undefined4 param2,undefined4 param3)\n\n{\n  undefined4 initializedValue;\n  uint bitMask;\n  undefined4 param2Copy;\n  undefined4 param3Copy;\n  undefined4 constantValue;\n  \n  initializedValue = FUN_08006bb8((inputConfig << 0x18) >> 0x1c);\n  bitMask = 1 << (inputConfig & 0xf) & 0xffff;\n  constantValue = 3;\n  _DAT_40021018 = _DAT_40021018 | 1;\n  if ((inputConfig - 0xd & 0xff) < 2) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n  }\n  if (((inputConfig == 0xf) || (inputConfig == 0x13)) || (inputConfig == 0x14)) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n  }\n  param2Copy = param2;\n  param3Copy = param3;\n  FUN_080040e8(initializedValue,&bitMask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007258": "initialize_peripheral_08007258",
                "param_1": "inputConfig",
                "param_2": "param2",
                "param_3": "param3",
                "uVar1": "initializedValue",
                "local_20": "bitMask",
                "local_1c": "param2Copy",
                "local_18": "param3Copy",
                "local_14": "constantValue"
            },
            "calling": [
                "FUN_08008990"
            ],
            "called": [
                "FUN_08006bb8",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080072d8": {
            "entrypoint": "0x080072d8",
            "current_name": "process_parameter_080072d8",
            "code": "\nvoid processParameter_080072d8(undefined4 param,undefined2 flag,int status,undefined4 data)\n\n{\n  if (status == 0) {\n    FUN_080042e2(param,flag,0,data,data);\n    return;\n  }\n  FUN_080042e2(param,flag,1,data,data);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080072d8": "process_parameter_080072d8",
                "param_1": "param",
                "param_2": "flag",
                "param_3": "status",
                "param_4": "data"
            },
            "calling": [
                "FUN_08008a24"
            ],
            "called": [
                "FUN_080042e2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080072f0": {
            "entrypoint": "0x080072f0",
            "current_name": "run_code_080072f0",
            "code": "\nvoid runCode_080072f0(undefined4 ptr1,undefined2 param2,undefined4 ptr3,undefined4 ptr4)\n\n{\n  FUN_080042d4(ptr1,param2,ptr3,ptr4,ptr4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080072f0": "run_code_080072f0",
                "param_1": "ptr1",
                "param_2": "param2",
                "param_3": "ptr3",
                "param_4": "ptr4"
            },
            "calling": [
                "FUN_08008a6c"
            ],
            "called": [
                "FUN_080042d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080072fa": {
            "entrypoint": "0x080072fa",
            "current_name": "initialize_application_080072fa",
            "code": "\nvoid initializeApplication_080072fa(void)\n\n{\n  FUN_08003724();\n  FUN_080035b8();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080072fa": "initialize_application_080072fa"
            },
            "calling": [
                "FUN_080036a2"
            ],
            "called": [
                "FUN_08003724",
                "FUN_080035b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007306": {
            "entrypoint": "0x08007306",
            "current_name": "find_index_of_char_08007306",
            "code": "\nundefined4 find_index_of_char_08007306(int target_char,char *string_array)\n\n{\n  while( true ) {\n    if (*string_array == -1) {\n      return 0;\n    }\n    if (*string_array == target_char) break;\n    string_array = string_array + 0xc;\n  }\n  return *(undefined4 *)(string_array + 4);\n}\n\n",
            "renaming": {
                "FUN_08007306": "find_index_of_char_08007306",
                "param_1": "target_char",
                "param_2": "string_array"
            },
            "calling": [
                "FUN_08007306",
                "FUN_08007320"
            ],
            "called": [
                "FUN_08007306"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007320": {
            "entrypoint": "0x08007320",
            "current_name": "check_param_08007320",
            "code": "\nundefined4 checkParam_08007320(int input)\n\n{\n  undefined4 result;\n  \n  if (input != -1) {\n    result = FUN_08007306();\n    return result;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007320": "check_param_08007320",
                "param_1": "input",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08008078",
                "FUN_080084b0",
                "FUN_080077b0",
                "FUN_080071e4",
                "FUN_08007118",
                "FUN_08006d80",
                "FUN_08008500"
            ],
            "called": [
                "FUN_08007306"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007332": {
            "entrypoint": "0x08007332",
            "current_name": "find_character_by_id_08007332",
            "code": "\nint find_character_by_id_08007332(int character_id,char *characters)\n\n{\n  while( true ) {\n    if (*(int *)(characters + 4) == 0) {\n      return -1;\n    }\n    if (*(int *)(characters + 4) == character_id) break;\n    characters = characters + 0xc;\n  }\n  return (int)*characters;\n}\n\n",
            "renaming": {
                "FUN_08007332": "find_character_by_id_08007332",
                "param_1": "character_id",
                "param_2": "characters"
            },
            "calling": [
                "FUN_0800734a",
                "FUN_08007332"
            ],
            "called": [
                "FUN_08007332"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800734a": {
            "entrypoint": "0x0800734a",
            "current_name": "check_validity_0800734a",
            "code": "\nundefined4 checkValidity_0800734a(int input)\n\n{\n  undefined4 result;\n  \n  if (input != 0) {\n    result = FUN_08007332();\n    return result;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800734a": "check_validity_0800734a",
                "param_1": "input",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080084b0",
                "FUN_08008d30"
            ],
            "called": [
                "FUN_08007332"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800735a": {
            "entrypoint": "0x0800735a",
            "current_name": "find_value_in_array_0800735a",
            "code": "\nundefined4 find_value_in_array_0800735a(int value,char *array)\n\n{\n  while( true ) {\n    if (*array == -1) {\n      return 0xffffffff;\n    }\n    if (*array == value) break;\n    array = array + 0xc;\n  }\n  return *(undefined4 *)(array + 8);\n}\n\n",
            "renaming": {
                "FUN_0800735a": "find_value_in_array_0800735a",
                "param_1": "value",
                "param_2": "array"
            },
            "calling": [
                "FUN_0800735a",
                "FUN_08007376"
            ],
            "called": [
                "FUN_0800735a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007376": {
            "entrypoint": "0x08007376",
            "current_name": "check_value_08007376",
            "code": "\nundefined4 checkValue_08007376(int value)\n\n{\n  undefined4 result;\n  \n  if (value == -1) {\n    return 0xffffffff;\n  }\n  result = FUN_0800735a();\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08007376": "check_value_08007376",
                "param_1": "value",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08006e68",
                "FUN_08006c60",
                "FUN_080071e4",
                "FUN_08006c7c",
                "FUN_08007118"
            ],
            "called": [
                "FUN_0800735a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800738a": {
            "entrypoint": "0x0800738a",
            "current_name": "find_value_in_list_0800738a",
            "code": "\nundefined4 find_value_in_list_0800738a(int value_to_find,char *list)\n\n{\n  if (value_to_find == -1) {\n    return 0;\n  }\n  while( true ) {\n    if (*list == -1) {\n      return 0;\n    }\n    if (value_to_find == *list) break;\n    list = list + 0xc;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800738a": "find_value_in_list_0800738a",
                "param_1": "value_to_find",
                "param_2": "list"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_08001cd0",
                "FUN_08008990",
                "FUN_08000a64",
                "FUN_080088e0",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073ae": {
            "entrypoint": "0x080073ae",
            "current_name": "compare_and_return_smaller_080073ae",
            "code": "\nint compare_and_return_smaller_080073ae(int value_1,int value_2)\n\n{\n  if (value_1 != value_2) {\n    if (value_1 == 0) {\n      return value_2;\n    }\n    if (value_2 == 0) {\n      return value_1;\n    }\n    value_1 = 0;\n  }\n  return value_1;\n}\n\n",
            "renaming": {
                "FUN_080073ae": "compare_and_return_smaller_080073ae",
                "param_1": "value_1",
                "param_2": "value_2"
            },
            "calling": [
                "FUN_08008078",
                "FUN_080077b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073c0": {
            "entrypoint": "0x080073c0",
            "current_name": "execute_callback_function_080073c0",
            "code": "\nvoid execute_callback_function_080073c0(void)\n\n{\n  if (DAT_200005f4 != (code *)0x0) {\n    (*DAT_200005f4)(DAT_2000060c);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080073c0": "execute_callback_function_080073c0"
            },
            "calling": [
                "FUN_08005cb4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073e8": {
            "entrypoint": "0x080073e8",
            "current_name": "infinite_loop_080073e8",
            "code": "\nvoid infiniteLoop_080073e8(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080073e8": "infinite_loop_080073e8"
            },
            "calling": [
                "FUN_080035b8",
                "FUN_080073e8"
            ],
            "called": [
                "FUN_080073e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073ec": {
            "entrypoint": "0x080073ec",
            "current_name": "initialize_hardware_080073ec",
            "code": "\n\n\nvoid initializeHardware_080073ec(void)\n\n{\n  _DAT_40021000 = _DAT_40021000 & 0xfef2ffff | 1;\n  _DAT_40021004 = _DAT_40021004 & 0xf8800000;\n  _DAT_40021008 = 0x9f0000;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080073ec": "initialize_hardware_080073ec"
            },
            "calling": [
                "entry"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007438": {
            "entrypoint": "0x08007438",
            "current_name": "update_memory_regions_08007438",
            "code": "\n\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nvoid updateMemoryRegions_08007438(int *memoryAddress)\n\n{\n  if (*memoryAddress == 0x40012c00) {\n    _DAT_40021018 = _DAT_40021018 | 0x800;\n    DAT_20000610 = memoryAddress;\n  }\n  if (*memoryAddress == 0x40000000) {\n    _DAT_4002101c = _DAT_4002101c | 1;\n    DAT_20000614 = memoryAddress;\n  }\n  if (*memoryAddress == 0x40000400) {\n    _DAT_4002101c = _DAT_4002101c | 2;\n    DAT_20000618 = memoryAddress;\n  }\n  if (*memoryAddress == 0x40000800) {\n    _DAT_4002101c = _DAT_4002101c | 4;\n    DAT_2000061c = memoryAddress;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007438": "update_memory_regions_08007438",
                "param_1": "memoryAddress"
            },
            "calling": [
                "FUN_08006e68",
                "FUN_08007708"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080074e0": {
            "entrypoint": "0x080074e0",
            "current_name": "update_data_registers_080074e0",
            "code": "\n\n\nvoid updateDataRegisters_080074e0(int *dataPointer)\n\n{\n  if (*dataPointer == 0x40012c00) {\n    _DAT_40021018 = _DAT_40021018 & 0xfffff7ff;\n  }\n  if (*dataPointer == 0x40000000) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffe;\n  }\n  if (*dataPointer == 0x40000400) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffd;\n  }\n  if (*dataPointer == 0x40000800) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffb;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080074e0": "update_data_registers_080074e0",
                "param_1": "dataPointer"
            },
            "calling": [
                "FUN_08007710",
                "FUN_08007110"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007544": {
            "entrypoint": "0x08007544",
            "current_name": "get_timer_ir_qn_08007544",
            "code": "\nundefined4 getTimerIRQn_08007544(uint timerIRQn)\n\n{\n  if (timerIRQn == 0xffffffff) {\n    return 0;\n  }\n  if (timerIRQn == 0x40000400) {\n    return 0x1d;\n  }\n  if (timerIRQn < 0x40000401) {\n    if (timerIRQn == 0x40000000) {\n      return 0x1c;\n    }\n  }\n  else {\n    if (timerIRQn == 0x40000800) {\n      return 0x1e;\n    }\n    if (timerIRQn == 0x40012c00) {\n      return 0x19;\n    }\n  }\n  FUN_080098d8(\"TIM: Unknown timer IRQn\");\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007544": "get_timer_ir_qn_08007544",
                "param_1": "timerIRQn"
            },
            "calling": [
                "FUN_080076e0",
                "FUN_08007648"
            ],
            "called": [
                "FUN_080098d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007594": {
            "entrypoint": "0x08007594",
            "current_name": "check_timer_instance_08007594",
            "code": "\nundefined4 checkTimerInstance_08007594(uint instance)\n\n{\n  if (instance == 0xffffffff) {\n    return 0;\n  }\n  if (instance == 0x40000400) {\n    return 1;\n  }\n  if (instance < 0x40000401) {\n    if (instance == 0x40000000) {\n      return 1;\n    }\n  }\n  else {\n    if (instance == 0x40000800) {\n      return 1;\n    }\n    if (instance == 0x40012c00) {\n      return 2;\n    }\n  }\n  FUN_080098d8(\"TIM: Unknown timer instance\");\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007594": "check_timer_instance_08007594",
                "param_1": "instance"
            },
            "calling": [
                "FUN_080075dc"
            ],
            "called": [
                "FUN_080098d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080075dc": {
            "entrypoint": "0x080075dc",
            "current_name": "determine_clock_shift_080075dc",
            "code": "\nint determineClockShift_080075dc(undefined4 source)\n\n{\n  uint clockShift;\n  int result;\n  uint clockSource;\n  undefined4 temp_1;\n  undefined4 temp_2;\n  undefined4 temp_3;\n  undefined4 temp_4;\n  uint temp_5;\n  uint temp_6;\n  \n  temp_2 = 0;\n  temp_3 = 0;\n  temp_4 = 0;\n  temp_5 = 0;\n  temp_6 = 0;\n  temp_1 = 0;\n  FUN_08005a68(&temp_2,&temp_1);\n  result = FUN_08007594(source);\n  clockShift = temp_6;\n  clockSource = temp_5;\n  if (result == 1) {\n    result = FUN_08005a28();\n  }\n  else if (result == 2) {\n    result = FUN_08005a48();\n    clockSource = clockShift;\n  }\n  else {\n    FUN_080098d8(\"TIM: Unknown clock source\");\n    result = 0;\n    clockSource = 0;\n  }\n  if (clockSource != 0x500) {\n    if (clockSource < 0x501) {\n      if (clockSource != 0x400) {\n        return result;\n      }\n    }\n    else if ((clockSource != 0x600) && (clockSource != 0x700)) {\n      return result;\n    }\n  }\n  return result << 1;\n}\n\n",
            "renaming": {
                "FUN_080075dc": "determine_clock_shift_080075dc",
                "param_1": "source",
                "uVar1": "clockShift",
                "iVar2": "result",
                "uVar3": "clockSource",
                "local_20": "temp_1",
                "local_1c": "temp_2",
                "local_18": "temp_3",
                "local_14": "temp_4",
                "local_10": "temp_5",
                "local_c": "temp_6"
            },
            "calling": [
                "FUN_08007648",
                "FUN_08007118"
            ],
            "called": [
                "FUN_08005a28",
                "FUN_08005a48",
                "FUN_080098d8",
                "FUN_08007594",
                "FUN_08005a68"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007648": {
            "entrypoint": "0x08007648",
            "current_name": "initialize_settings_08007648",
            "code": "\nvoid initializeSettings_08007648(undefined4 *settings,undefined4 value1,undefined4 value2,undefined4 value3)\n\n{\n  char character;\n  uint result;\n  int status;\n  undefined4 *nextParam;\n  undefined4 localVar1;\n  undefined4 localVar2;\n  undefined4 localVar3;\n  undefined4 localVar4;\n  undefined4 localVar5;\n  undefined4 localVar6;\n  undefined4 localVar7;\n  \n  localVar1 = 0;\n  localVar2 = 0;\n  localVar3 = 0;\n  localVar4 = 0;\n  localVar5 = 0;\n  localVar6 = 0;\n  localVar7 = 0;\n  nextParam = settings + 1;\n  *settings = 0x40000000;\n  settings[1] = 0x40000000;\n  settings[4] = value1;\n  result = FUN_080075dc();\n  settings[2] = result / 1000000 - 1;\n  settings[5] = 0;\n  settings[3] = 0;\n  settings[6] = 0;\n  settings[0x13] = value3;\n  localVar1 = 0;\n  localVar3 = 0;\n  localVar5 = 0;\n  localVar4 = 0;\n  localVar6 = 0;\n  localVar7 = 0;\n  localVar2 = value2;\n  character = FUN_08007544(*settings);\n  FUN_08003f30((int)character,0xe,0);\n  character = FUN_08007544(*settings);\n  FUN_08003f94((int)character);\n  status = FUN_08006060(nextParam);\n  if ((status == 0) && (status = FUN_08006128(nextParam,&localVar1,0), status == 0)) {\n    FUN_08006280(nextParam,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007648": "initialize_settings_08007648",
                "param_1": "settings",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "cVar1": "character",
                "uVar2": "result",
                "iVar3": "status",
                "puVar4": "nextParam",
                "local_34": "localVar1",
                "local_30": "localVar2",
                "local_2c": "localVar3",
                "local_28": "localVar4",
                "local_24": "localVar5",
                "local_20": "localVar6",
                "local_1c": "localVar7"
            },
            "calling": [
                "FUN_0800242c"
            ],
            "called": [
                "FUN_08007544",
                "FUN_08006280",
                "FUN_08003f30",
                "FUN_08006060",
                "FUN_08003f94",
                "FUN_080075dc",
                "FUN_08006128"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080076e0": {
            "entrypoint": "0x080076e0",
            "current_name": "initialize_data_080076e0",
            "code": "\nvoid initializeData_080076e0(undefined4 *dataPointer)\n\n{\n  char result;\n  int errorFlag;\n  \n  dataPointer[0x13] = 0;\n  result = FUN_08007544(*dataPointer);\n  FUN_08003fb0((int)result);\n  errorFlag = FUN_08005df4(dataPointer + 1);\n  if (errorFlag == 0) {\n    FUN_080062f4(dataPointer + 1,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080076e0": "initialize_data_080076e0",
                "param_1": "dataPointer",
                "cVar1": "result",
                "iVar2": "errorFlag"
            },
            "calling": [
                "FUN_08002578"
            ],
            "called": [
                "FUN_08003fb0",
                "FUN_08007544",
                "FUN_08005df4",
                "FUN_080062f4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007708": {
            "entrypoint": "0x08007708",
            "current_name": "initialize_application_08007708",
            "code": "\nvoid initialize_application_08007708(void)\n\n{\n  FUN_08007438();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007708": "initialize_application_08007708"
            },
            "calling": [
                "FUN_08006060"
            ],
            "called": [
                "FUN_08007438"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007710": {
            "entrypoint": "0x08007710",
            "current_name": "initialize_application_08007710",
            "code": "\nvoid initialize_application_08007710(void)\n\n{\n  FUN_080074e0();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007710": "initialize_application_08007710"
            },
            "calling": [
                "FUN_08005df4"
            ],
            "called": [
                "FUN_080074e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007718": {
            "entrypoint": "0x08007718",
            "current_name": "subtract_four_08007718",
            "code": "\nint subtractFour_08007718(int input)\n\n{\n  return input + -4;\n}\n\n",
            "renaming": {
                "FUN_08007718": "subtract_four_08007718",
                "param_1": "input"
            },
            "calling": [
                "FUN_0800771c",
                "FUN_08007736"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800771c": {
            "entrypoint": "0x0800771c",
            "current_name": "execute_if_condition_met_0800771c",
            "code": "\nvoid executeIfConditionMet_0800771c(int inputParameter)\n\n{\n  int functionPointer;\n  \n  functionPointer = FUN_08007718();\n  if ((*(function **)(functionPointer + 0x4c) != (function *)0x0) && (*(char *)(inputParameter + 0x1c) == '\\x01')) {\n    (**(function **)(functionPointer + 0x4c))(functionPointer,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800771c": "execute_if_condition_met_0800771c",
                "param_1": "inputParameter",
                "iVar1": "functionPointer",
                "code": "function"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [
                "FUN_08007718"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007736": {
            "entrypoint": "0x08007736",
            "current_name": "execute_registered_function_08007736",
            "code": "\nvoid executeRegisteredFunction_08007736(void)\n\n{\n  int functionPointer;\n  \n  functionPointer = FUN_08007718();\n  if (*(code **)(functionPointer + 0x48) != (code *)0x0) {\n    (**(code **)(functionPointer + 0x48))();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007736": "execute_registered_function_08007736",
                "iVar1": "functionPointer"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [
                "FUN_08007718"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007744": {
            "entrypoint": "0x08007744",
            "current_name": "get_pointer_value_08007744",
            "code": "\nundefined4 getPointerValue_08007744(int input_ptr)\n\n{\n  return *(undefined4 *)(*(int *)(input_ptr + 4) + 0x24);\n}\n\n",
            "renaming": {
                "FUN_08007744": "get_pointer_value_08007744",
                "param_1": "input_ptr"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800774a": {
            "entrypoint": "0x0800774a",
            "current_name": "set_param_value_0800774a",
            "code": "\nvoid setParamValue_0800774a(int arg1,undefined4 arg2)\n\n{\n  *(undefined4 *)(*(int *)(arg1 + 4) + 0x24) = arg2;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800774a": "set_param_value_0800774a",
                "param_1": "arg1",
                "param_2": "arg2"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007750": {
            "entrypoint": "0x08007750",
            "current_name": "write_value_to_memory_location_08007750",
            "code": "\nvoid writeValueToMemoryLocation_08007750(int memoryLocationPointer,int index,undefined4 value)\n\n{\n  *(undefined4 *)(*(int *)(memoryLocationPointer + 4) + 0x34 + index * 4) = value;\n  void;\n}\n\n",
            "renaming": {
                "FUN_08007750": "write_value_to_memory_location_08007750",
                "param_1": "memoryLocationPointer",
                "param_2": "index",
                "param_3": "value",
                "return": "void"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080077b0": {
            "entrypoint": "0x080077b0",
            "current_name": "initialize_i2_c_peripheral_080077b0",
            "code": "\n\n\nvoid initializeI2CPeripheral_080077b0(int *peripheral,int pin1,int pin2,int pin3,undefined undefinedParam)\n\n{\n  int pin1Peripheral;\n  int pin2Peripheral;\n  undefined4 pin3Peripheral;\n  uint pin1Function;\n  uint pin2Function;\n  int *data;\n  uint pin1BitMask;\n  uint pin2LocalVar;\n  uint pin3LocalVar;\n  undefined4 localVar;\n  \n  if (peripheral != (int *)0x0) {\n    data = peripheral + 1;\n    pin1Peripheral = FUN_08007320((int)*(char *)(peripheral + 0x16),&DAT_0800a69c);\n    pin2Peripheral = FUN_08007320((int)*(char *)((int)peripheral + 0x59),&DAT_0800a66c);\n    if ((pin1Peripheral == 0) || (pin2Peripheral == 0)) {\n      FUN_080098d8(\"ERROR: at least one I2C pin has no peripheral\\n\");\n    }\n    else {\n      pin1Peripheral = FUN_080073ae(pin1Peripheral,pin2Peripheral);\n      *peripheral = pin1Peripheral;\n      if (pin1Peripheral == 0) {\n        FUN_080098d8(\"ERROR: I2C pins mismatch\\n\");\n      }\n      else {\n        if (pin1Peripheral == 0x40005400) {\n          _DAT_4002101c = _DAT_4002101c | 0x200000;\n          _DAT_40021010 = _DAT_40021010 & 0xffdfffff;\n          *(undefined *)((int)peripheral + 0x5a) = 0x1f;\n          *(undefined *)((int)peripheral + 0x5b) = 0x20;\n          DAT_20000668 = data;\n        }\n        if (*peripheral == 0x40005800) {\n          _DAT_4002101c = _DAT_4002101c | 0x400000;\n          _DAT_40021010 = _DAT_40021010 & 0xffbfffff;\n          *(undefined *)((int)peripheral + 0x5a) = 0x21;\n          *(undefined *)((int)peripheral + 0x5b) = 0x22;\n          DAT_2000066c = data;\n        }\n        pin3Peripheral = FUN_08006bb8((uint)((int)*(char *)((int)peripheral + 0x59) << 0x18) >> 0x1c);\n        pin1BitMask = 1 << ((int)*(char *)((int)peripheral + 0x59) & 0xfU) & 0xffff;\n        pin1Function = FUN_08007376((int)*(char *)((int)peripheral + 0x59),&DAT_0800a66c);\n        pin2Function = FUN_08007376((int)*(char *)((int)peripheral + 0x59),&DAT_0800a66c);\n        pin2LocalVar = (pin1Function >> 3 & 1) << 4 | pin2Function & 7;\n        localVar = 3;\n        pin1Peripheral = FUN_08007376((int)*(char *)((int)peripheral + 0x59),&DAT_0800a66c);\n        pin3LocalVar = (uint)(pin1Peripheral << 0x1a) >> 0x1e;\n        pin1Peripheral = FUN_08007376((int)*(char *)((int)peripheral + 0x59),&DAT_0800a66c);\n        _DAT_40021018 = _DAT_40021018 | 1;\n        pin2Function = 1;\n        pin1Function = _DAT_40021018;\n        switch((uint)(pin1Peripheral << 0x11) >> 0x19) {\n        case 1:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 | 0x7000001;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 2:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 3:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 | 0x7000002;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 4:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 5:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 | 0x7000004;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 6:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 7:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 | 0x7000008;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 8:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 9:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 | 0x7000030;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 10:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 0xb:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 0xc:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 | 0x70000c0;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 0xd:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 0xe:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 0xf:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 | 0x7000300;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 0x10:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 0x11:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 0x12:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 0x13:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 | 0x7000c00;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 0x14:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 0x15:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 0x16:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 | 0x7001000;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 0x17:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 & 0xffffefff | 0x7000000;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 0x1b:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 | 0x7008000;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 0x1c:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 0x21:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 & 0xf8ffffff;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 0x22:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 0x23:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 0x24:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n          _DAT_40010004 = pin2Function;\n        }\n        FUN_080040e8(pin3Peripheral,&pin1BitMask,pin1Function,pin2Function);\n        pin3Peripheral = FUN_08006bb8((uint)((int)*(char *)(peripheral + 0x16) << 0x18) >> 0x1c);\n        pin1BitMask = 1 << ((int)*(char *)(peripheral + 0x16) & 0xfU) & 0xffff;\n        pin1Function = FUN_08007376((int)*(char *)(peripheral + 0x16),&DAT_0800a69c);\n        pin2Function = FUN_08007376((int)*(char *)(peripheral + 0x16),&DAT_0800a69c);\n        pin2LocalVar = (pin1Function >> 3 & 1) << 4 | pin2Function & 7;\n        localVar = 3;\n        pin1Peripheral = FUN_08007376((int)*(char *)(peripheral + 0x16),&DAT_0800a69c);\n        pin3LocalVar = (uint)(pin1Peripheral << 0x1a) >> 0x1e;\n        pin1Peripheral = FUN_08007376((int)*(char *)(peripheral + 0x16),&DAT_0800a69c);\n        _DAT_40021018 = _DAT_40021018 | 1;\n        pin2Function = 1;\n        pin1Function = _DAT_40021018;\n        switch((uint)(pin1Peripheral << 0x11) >> 0x19) {\n        case 1:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 | 0x7000001;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 2:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 3:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 | 0x7000002;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 4:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 5:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 | 0x7000004;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 6:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 7:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 | 0x7000008;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 8:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 9:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 | 0x7000030;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 10:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 0xb:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 0xc:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 | 0x70000c0;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 0xd:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 0xe:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 0xf:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 | 0x7000300;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 0x10:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 0x11:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 0x12:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 0x13:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 | 0x7000c00;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 0x14:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 0x15:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 0x16:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 | 0x7001000;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 0x17:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 & 0xffffefff | 0x7000000;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 0x1b:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 | 0x7008000;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 0x1c:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 0x21:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 & 0xf8ffffff;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 0x22:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 0x23:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          _DAT_40010004 = pin2Function;\n          break;\n        case 0x24:\n          pin1Function = 0x40010000;\n          pin2Function = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n          _DAT_40010004 = pin2Function;\n        }\n        FUN_080040e8(pin3Peripheral,&pin1BitMask,pin1Function,pin2Function);\n        peripheral[1] = *peripheral;\n        peripheral[2] = pin1;\n        peripheral[3] = 0;\n        peripheral[4] = pin3;\n        peripheral[7] = 0xff;\n        peripheral[5] = pin2;\n        peripheral[6] = 0;\n        peripheral[8] = 0;\n        peripheral[9] = 0;\n        *(undefined *)((int)peripheral + 0x41) = 0;\n        FUN_08003f30((int)*(char *)((int)peripheral + 0x5a),0,1);\n        FUN_08003f94((int)*(char *)((int)peripheral + 0x5a));\n        FUN_08003f30((int)*(char *)((int)peripheral + 0x5b),0,1);\n        FUN_08003f94((int)*(char *)((int)peripheral + 0x5b));\n        FUN_080045c0(data);\n        *(undefined *)((int)peripheral + 0x5d) = undefinedParam;\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080077b0": "initialize_i2_c_peripheral_080077b0",
                "param_1": "peripheral",
                "param_2": "pin1",
                "param_3": "pin2",
                "param_4": "pin3",
                "param_5": "undefinedParam",
                "iVar1": "pin1Peripheral",
                "iVar2": "pin2Peripheral",
                "uVar3": "pin3Peripheral",
                "uVar4": "pin1Function",
                "uVar5": "pin2Function",
                "piVar6": "data",
                "local_38": "pin1BitMask",
                "local_34": "pin2LocalVar",
                "local_30": "pin3LocalVar",
                "local_2c": "localVar"
            },
            "calling": [
                "FUN_08002968"
            ],
            "called": [
                "FUN_080045c0",
                "FUN_080098d8",
                "FUN_080073ae",
                "FUN_08003f30",
                "FUN_08003f94",
                "FUN_08006bb8",
                "FUN_08007376",
                "FUN_08007320",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e74": {
            "entrypoint": "0x08007e74",
            "current_name": "check_validity_08007e74",
            "code": "\nint checkValidity_08007e74(int input,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int initialValue;\n  int result;\n  uint difference;\n  int status;\n  int tempVar;\n  undefined4 tempParam4;\n  \n  tempParam4 = param4;\n  initialValue = FUN_08003760();\n  difference = 0;\n  status = 2;\n  do {\n    tempVar = input + 4;\n    result = FUN_08004728(tempVar,param2,param3,param4,tempParam4);\n    if (result == 0) {\n      status = 0;\n      while ((result = FUN_0800542a(tempVar), result != 0x20 && (status == 0))) {\n        result = FUN_08003760();\n        difference = result - initialValue;\n        if (difference < 0x65) {\n          result = FUN_08005430(tempVar);\n          if (result != 0) {\n            status = 2;\n          }\n        }\n        else {\n          status = 1;\n        }\n      }\n    }\n    result = FUN_08005430(tempVar);\n  } while ((result == 4) && (difference < 100));\n  return status;\n}\n\n",
            "renaming": {
                "FUN_08007e74": "check_validity_08007e74",
                "param_1": "input",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "initialValue",
                "iVar2": "result",
                "uVar3": "difference",
                "iVar4": "status",
                "iVar5": "tempVar",
                "uVar6": "tempParam4"
            },
            "calling": [
                "FUN_08002a58"
            ],
            "called": [
                "FUN_08004728",
                "FUN_0800542a",
                "FUN_08005430",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007ede": {
            "entrypoint": "0x08007ede",
            "current_name": "copy_from_source_to_destination_08007ede",
            "code": "\nundefined4 copyFromSourceToDestination_08007ede(int destination,int source,uint length)\n\n{\n  uint index;\n  \n  if (0x20 < length) {\n    return 2;\n  }\n  for (index = 0; index < length; index = index + 1 & 0xff) {\n    *(undefined *)(destination + index + 0x68) = *(undefined *)(source + index);\n    *(char *)(destination + 0x88) = *(char *)(destination + 0x88) + '\\x01';\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007ede": "copy_from_source_to_destination_08007ede",
                "param_1": "destination",
                "param_2": "source",
                "param_3": "length",
                "uVar1": "index"
            },
            "calling": [
                "FUN_080027f0",
                "FUN_0800288c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f0e": {
            "entrypoint": "0x08007f0e",
            "current_name": "check_validity_08007f0e",
            "code": "\nint checkValidity_08007f0e(int data,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int initialValue;\n  int result;\n  uint difference;\n  int status;\n  int temp;\n  undefined4 temp2;\n  \n  temp2 = param4;\n  initialValue = FUN_08003760();\n  difference = 0;\n  status = 2;\n  do {\n    temp = data + 4;\n    result = FUN_080047f4(temp,param2,param3,param4,temp2);\n    if (result == 0) {\n      status = 0;\n      while ((result = FUN_0800542a(temp), result != 0x20 && (status == 0))) {\n        result = FUN_08003760();\n        difference = result - initialValue;\n        if (difference < 0x65) {\n          result = FUN_08005430(temp);\n          if (result != 0) {\n            status = 2;\n          }\n        }\n        else {\n          status = 1;\n        }\n      }\n    }\n    result = FUN_08005430(temp);\n  } while ((result == 4) && (difference < 100));\n  return status;\n}\n\n",
            "renaming": {
                "FUN_08007f0e": "check_validity_08007f0e",
                "param_1": "data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "initialValue",
                "iVar2": "result",
                "uVar3": "difference",
                "iVar4": "status",
                "iVar5": "temp",
                "uVar6": "temp2"
            },
            "calling": [
                "FUN_08002b68"
            ],
            "called": [
                "FUN_080047f4",
                "FUN_0800542a",
                "FUN_08005430",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f78": {
            "entrypoint": "0x08007f78",
            "current_name": "subtract_four_08007f78",
            "code": "\nint subtractFour_08007f78(int input)\n\n{\n  return input + -4;\n}\n\n",
            "renaming": {
                "FUN_08007f78": "subtract_four_08007f78",
                "param_1": "input"
            },
            "calling": [
                "FUN_08008020",
                "FUN_08007fa0",
                "FUN_08007ff0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f7c": {
            "entrypoint": "0x08007f7c",
            "current_name": "update_data_and_trigger_event_08007f7c",
            "code": "\nvoid updateDataAndTriggerEvent_08007f7c(int data,int value)\n\n{\n  if (data != 0) {\n    if (value != 0) {\n      *(int *)(data + 0x60) = value;\n      FUN_080049e0(data + 4);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007f7c": "update_data_and_trigger_event_08007f7c",
                "param_1": "data",
                "param_2": "value"
            },
            "calling": [
                "FUN_08002968"
            ],
            "called": [
                "FUN_080049e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f8e": {
            "entrypoint": "0x08007f8e",
            "current_name": "update_param_and_call_function_08007f8e",
            "code": "\nvoid updateParamAndCallFunction_08007f8e(int inputValue,int newValue)\n\n{\n  if (inputValue != 0) {\n    if (newValue != 0) {\n      *(int *)(inputValue + 100) = newValue;\n      FUN_080049e0(inputValue + 4);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007f8e": "update_param_and_call_function_08007f8e",
                "param_1": "inputValue",
                "param_2": "newValue"
            },
            "calling": [
                "FUN_08002968"
            ],
            "called": [
                "FUN_080049e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007fa0": {
            "entrypoint": "0x08007fa0",
            "current_name": "process_input_08007fa0",
            "code": "\nvoid processInput_08007fa0(int input,int flag,int comparisonValue,undefined4 param)\n\n{\n  int result;\n  \n  result = FUN_08007f78();\n  if (comparisonValue == *(int *)(input + 0xc)) {\n    if (flag == 0) {\n      *(undefined *)(result + 0x88) = 0;\n      *(undefined *)(result + 0x5c) = 0;\n      if (*(code **)(result + 100) != (code *)0x0) {\n        (**(code **)(result + 100))();\n      }\n      FUN_080048c8(input,result + 0x68,*(undefined *)(result + 0x88),8);\n      return;\n    }\n    *(undefined *)(result + 0x5c) = 1;\n    FUN_08004954(input,result + 0x68,0x20,8,param);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007fa0": "process_input_08007fa0",
                "param_1": "input",
                "param_2": "flag",
                "param_3": "comparisonValue",
                "param_4": "param",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08004ac2"
            ],
            "called": [
                "FUN_08004954",
                "FUN_08007f78",
                "FUN_080048c8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007ff0": {
            "entrypoint": "0x08007ff0",
            "current_name": "execute_function_08007ff0",
            "code": "\nvoid executeFunction_08007ff0(undefined4 param)\n\n{\n  int address;\n  \n  address = FUN_08007f78();\n  if (((*(code **)(address + 0x60) != (code *)0x0) && (*(char *)(address + 0x5c) == '\\x01')) &&\n     (*(char *)(address + 0x2c) != ' ')) {\n    (**(code **)(address + 0x60))(address + 0x68);\n  }\n  FUN_080049e0(param);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007ff0": "execute_function_08007ff0",
                "param_1": "param",
                "iVar1": "address"
            },
            "calling": [
                "FUN_08004aec",
                "FUN_08004f3c",
                "FUN_08005084"
            ],
            "called": [
                "FUN_08007f78",
                "FUN_080049e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008020": {
            "entrypoint": "0x08008020",
            "current_name": "check_and_call_function_08008020",
            "code": "\nvoid checkAndCallFunction_08008020(undefined4 inputValue)\n\n{\n  int returnValue;\n  \n  returnValue = FUN_08007f78();\n  if (*(char *)(returnValue + 0x5d) == '\\0') {\n    FUN_080049e0(inputValue);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008020": "check_and_call_function_08008020",
                "param_1": "inputValue",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08004f3c"
            ],
            "called": [
                "FUN_08007f78",
                "FUN_080049e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008078": {
            "entrypoint": "0x08008078",
            "current_name": "initialize_uart_pin_08008078",
            "code": "\n\n\nvoid initializeUARTPin_08008078(int *pinConfiguration)\n\n{\n  int uartPin1;\n  int uartPin2;\n  undefined4 uartBaudRate;\n  uint uartPinConfig;\n  uint uartPinMask;\n  uint uartPinConfig1;\n  uint uartPinConfig2;\n  undefined4 uartDataBits;\n  \n  if (pinConfiguration != (int *)0x0) {\n    uartPin1 = FUN_08007320((int)*(char *)(pinConfiguration + 0x16),&DAT_0800a864);\n    uartPin2 = FUN_08007320((int)*(char *)((int)pinConfiguration + 0x59),&DAT_0800a81c);\n    if ((uartPin2 == 0) || (uartPin1 == 0)) {\n      FUN_080098d8(\"ERROR: at least one UART pin has no peripheral\\n\",uartPin2);\n    }\n    else {\n      uartPin1 = FUN_080073ae(uartPin1);\n      *pinConfiguration = uartPin1;\n      if (uartPin1 == 0) {\n        FUN_080098d8(\"ERROR: U(S)ART pins mismatch\\n\");\n      }\n      else {\n        if (uartPin1 == 0x40013800) {\n          _DAT_4002100c = _DAT_4002100c & 0xffffbfff;\n          _DAT_40021018 = _DAT_40021018 | 0x4000;\n          *(undefined *)(pinConfiguration + 0x11) = 0;\n          *(undefined *)((int)pinConfiguration + 0x5a) = 0x25;\n        }\n        else if (uartPin1 == 0x40004400) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffdffff;\n          _DAT_4002101c = _DAT_4002101c | 0x20000;\n          *(undefined *)(pinConfiguration + 0x11) = 1;\n          *(undefined *)((int)pinConfiguration + 0x5a) = 0x26;\n        }\n        else if (uartPin1 == 0x40004800) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffbffff;\n          _DAT_4002101c = _DAT_4002101c | 0x40000;\n          *(undefined *)(pinConfiguration + 0x11) = 2;\n          *(undefined *)((int)pinConfiguration + 0x5a) = 0x27;\n        }\n        uartBaudRate = FUN_08006bb8((uint)((int)*(char *)((int)pinConfiguration + 0x59) << 0x18) >> 0x1c);\n        uartPinConfig = FUN_08007376((int)*(char *)((int)pinConfiguration + 0x59),&DAT_0800a81c);\n        uartPinMask = 1 << (*(byte *)((int)pinConfiguration + 0x59) & 0xf) & 0xffff;\n        uartPinConfig1 = (uartPinConfig >> 3 & 1) << 4 | uartPinConfig & 7;\n        uartPinConfig2 = (uartPinConfig << 0x1a) >> 0x1e;\n        _DAT_40021018 = _DAT_40021018 | 1;\n        switch((uartPinConfig << 0x11) >> 0x19) {\n        case 1:\n          _DAT_40010004 = _DAT_40010004 | 0x7000001;\n          break;\n        case 2:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          break;\n        case 3:\n          _DAT_40010004 = _DAT_40010004 | 0x7000002;\n          break;\n        case 4:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          break;\n        case 5:\n          _DAT_40010004 = _DAT_40010004 | 0x7000004;\n          break;\n        case 6:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          break;\n        case 7:\n          _DAT_40010004 = _DAT_40010004 | 0x7000008;\n          break;\n        case 8:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          break;\n        case 9:\n          _DAT_40010004 = _DAT_40010004 | 0x7000030;\n          break;\n        case 10:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          break;\n        case 0xb:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          break;\n        case 0xc:\n          _DAT_40010004 = _DAT_40010004 | 0x70000c0;\n          break;\n        case 0xd:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          break;\n        case 0xe:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          break;\n        case 0xf:\n          _DAT_40010004 = _DAT_40010004 | 0x7000300;\n          break;\n        case 0x10:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          break;\n        case 0x11:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          break;\n        case 0x12:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          break;\n        case 0x13:\n          _DAT_40010004 = _DAT_40010004 | 0x7000c00;\n          break;\n        case 0x14:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          break;\n        case 0x15:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          break;\n        case 0x16:\n          _DAT_40010004 = _DAT_40010004 | 0x7001000;\n          break;\n        case 0x17:\n          _DAT_40010004 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          break;\n        case 0x1b:\n          _DAT_40010004 = _DAT_40010004 | 0x7008000;\n          break;\n        case 0x1c:\n          _DAT_40010004 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          break;\n        case 0x21:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff;\n          break;\n        case 0x22:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          break;\n        case 0x23:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          break;\n        case 0x24:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n        }\n        uartDataBits = 3;\n        FUN_080040e8(uartBaudRate,&uartPinMask);\n        uartBaudRate = FUN_08006bb8((uint)((int)*(char *)(pinConfiguration + 0x16) << 0x18) >> 0x1c);\n        uartPinConfig = FUN_08007376((int)*(char *)(pinConfiguration + 0x16),&DAT_0800a864);\n        uartPinMask = 1 << (*(byte *)(pinConfiguration + 0x16) & 0xf) & 0xffff;\n        uartPinConfig1 = (uartPinConfig >> 3 & 1) << 4 | uartPinConfig & 7;\n        uartPinConfig2 = (uartPinConfig << 0x1a) >> 0x1e;\n        FUN_080040e8(uartBaudRate,&uartPinMask);\n        (&DAT_200006c0)[*(byte *)(pinConfiguration + 0x11)] = pinConfiguration + 1;\n        pinConfiguration[1] = *pinConfiguration;\n        pinConfiguration[2] = param1_0x12;\n        pinConfiguration[3] = param1_0x13;\n        pinConfiguration[4] = param1_0x14;\n        pinConfiguration[5] = param1_0x15;\n        pinConfiguration[6] = 0xc;\n        pinConfiguration[7] = 0;\n        pinConfiguration[8] = 0;\n        FUN_0800674e(pinConfiguration + 1);\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008078": "initialize_uart_pin_08008078",
                "param_1": "pinConfiguration",
                "iVar1": "uartPin1",
                "iVar2": "uartPin2",
                "uVar3": "uartBaudRate",
                "uVar4": "uartPinConfig",
                "local_20": "uartPinMask",
                "local_1c": "uartPinConfig1",
                "local_18": "uartPinConfig2",
                "local_14": "uartDataBits",
                "param_1[0x12]": "param1_0x12",
                "param_1[0x13]": "param1_0x13",
                "param_1[0x14]": "param1_0x14",
                "param_1[0x15]": "param1_0x15"
            },
            "calling": [
                "FUN_080084b0",
                "FUN_08008c44"
            ],
            "called": [
                "FUN_080073ae",
                "FUN_080098d8",
                "FUN_0800674e",
                "FUN_08006bb8",
                "FUN_08007376",
                "FUN_08007320",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080084b0": {
            "entrypoint": "0x080084b0",
            "current_name": "initialize_data_080084b0",
            "code": "\nvoid initializeData_080084b0(void)\n\n{\n  int result1;\n  undefined4 result2;\n  \n  result1 = FUN_08007320(2,&DAT_0800a864);\n  if (result1 != 0) {\n    result2 = FUN_08007320(2,&DAT_0800a864);\n    DAT_20000075 = FUN_0800734a(result2,&DAT_0800a81c);\n    DAT_20000074 = 2;\n    DAT_20000064 = 0x2580;\n    DAT_20000070 = 0;\n    DAT_20000068 = 0;\n    DAT_2000006c = 0;\n    FUN_08008078(&DAT_2000001c);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080084b0": "initialize_data_080084b0",
                "iVar1": "result1",
                "uVar2": "result2"
            },
            "calling": [
                "FUN_08008500"
            ],
            "called": [
                "FUN_08008078",
                "FUN_0800734a",
                "FUN_08007320"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008500": {
            "entrypoint": "0x08008500",
            "current_name": "check_network_08008500",
            "code": "\nuint check_network_08008500(undefined4 status,uint timeout)\n\n{\n  int start_time;\n  int current_time;\n  uint index;\n  \n  start_time = FUN_08003760();\n  current_time = FUN_08007320(2,&DAT_0800a864);\n  if (current_time == 0) {\n    return 0;\n  }\n  for (index = 0;\n      (index < 5 &&\n      (((&DAT_200006c0)[index] == 0 ||\n       (current_time = FUN_08007320(2,&DAT_0800a864), *(int *)(&DAT_200006c0)[index] != current_time))));\n      index = index + 1 & 0xff) {\n  }\n  if (4 < index) {\n    if ((4 < DAT_20000060) && (FUN_080084b0(), 4 < DAT_20000060)) {\n      return 0;\n    }\n    index = (uint)DAT_20000060;\n  }\n  do {\n    current_time = FUN_080067ac((&DAT_200006c0)[index],status,timeout & 0xffff,1000);\n    if (current_time == 0) {\n      return timeout;\n    }\n    current_time = FUN_08003760();\n  } while ((uint)(current_time - start_time) < 1000);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008500": "check_network_08008500",
                "param_1": "status",
                "param_2": "timeout",
                "iVar1": "start_time",
                "iVar2": "current_time",
                "uVar3": "index"
            },
            "calling": [
                "FUN_0800885c"
            ],
            "called": [
                "FUN_080084b0",
                "FUN_080067ac",
                "FUN_08007320",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080085b8": {
            "entrypoint": "0x080085b8",
            "current_name": "is_flag_set_080085b8",
            "code": "\nbool isFlagSet_080085b8(int input)\n\n{\n  uint result;\n  \n  result = FUN_08006b1c((&DAT_200006c0)[*(byte *)(input + 0x44)]);\n  return (result & 0x22) == 0x22;\n}\n\n",
            "renaming": {
                "FUN_080085b8": "is_flag_set_080085b8",
                "param_1": "input",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08008600",
                "FUN_0800863c"
            ],
            "called": [
                "FUN_08006b1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080085dc": {
            "entrypoint": "0x080085dc",
            "current_name": "is_valid_character_080085dc",
            "code": "\nbool isValidCharacter_080085dc(int character)\n\n{\n  uint result;\n  \n  result = FUN_08006b1c((&DAT_200006c0)[*(byte *)(character + 0x44)]);\n  return (result & 0x21) == 0x21;\n}\n\n",
            "renaming": {
                "FUN_080085dc": "is_valid_character_080085dc",
                "param_1": "character",
                "uVar1": "result"
            },
            "calling": [],
            "called": [
                "FUN_08006b1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008600": {
            "entrypoint": "0x08008600",
            "current_name": "extract_data_from_binary_08008600",
            "code": "\nundefined4 extractDataFromBinary_08008600(int binaryData,undefined *extractedData,undefined4 value1,undefined4 value2)\n\n{\n  int result;\n  \n  if (binaryData == 0) {\n    return 0xffffffff;\n  }\n  result = FUN_080085b8();\n  if (result == 0) {\n    *extractedData = *(undefined *)(binaryData + 0x45);\n    FUN_080068d6((&DAT_200006c0)[*(byte *)(binaryData + 0x44)],binaryData + 0x45,1,&DAT_200006c0,value2);\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008600": "extract_data_from_binary_08008600",
                "param_1": "binaryData",
                "param_2": "extractedData",
                "param_3": "value1",
                "param_4": "value2",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08008b66"
            ],
            "called": [
                "FUN_080085b8",
                "FUN_080068d6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800863c": {
            "entrypoint": "0x0800863c",
            "current_name": "update_data_0800863c",
            "code": "\nvoid updateData_0800863c(int inputData,undefined4 newValue,undefined4 unused1,undefined4 unused2)\n\n{\n  int result;\n  uint index;\n  \n  if (inputData != 0) {\n    result = FUN_080085b8();\n    if (result == 0) {\n      index = (uint)*(byte *)(inputData + 0x44);\n      *(undefined4 *)(&DAT_20000670 + index * 4) = newValue;\n      *(int *)(&DAT_20000684 + index * 4) = inputData;\n      FUN_08003f30((int)*(char *)(inputData + 0x5a),0,1,index,unused2);\n      FUN_08003f94((int)*(char *)(inputData + 0x5a));\n      FUN_080068d6((&DAT_200006c0)[*(byte *)(inputData + 0x44)],inputData + 0x45,1);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800863c": "update_data_0800863c",
                "param_1": "inputData",
                "param_2": "newValue",
                "param_3": "unused1",
                "param_4": "unused2",
                "iVar1": "result",
                "uVar2": "index"
            },
            "calling": [
                "FUN_08008c44"
            ],
            "called": [
                "FUN_080085b8",
                "FUN_08003f30",
                "FUN_08003f94",
                "FUN_080068d6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008694": {
            "entrypoint": "0x08008694",
            "current_name": "update_parameter_08008694",
            "code": "\nvoid updateParameter_08008694(int param,undefined4 value)\n\n{\n  byte byteValue;\n  \n  if (param != 0) {\n    byteValue = *(byte *)(param + 0x44);\n    *(undefined4 *)(&DAT_20000698 + (uint)byteValue * 4) = value;\n    *(int *)(&DAT_200006ac + (uint)byteValue * 4) = param;\n    FUN_08003f30((int)*(char *)(param + 0x5a),0,2);\n    FUN_08003f94((int)*(char *)(param + 0x5a));\n    FUN_0800688e((&DAT_200006c0)[*(byte *)(param + 0x44)],\n                 *(int *)(param + 100) + (uint)*(ushort *)(param + 0x6a),1);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008694": "update_parameter_08008694",
                "param_1": "param",
                "param_2": "value",
                "bVar1": "byteValue"
            },
            "calling": [],
            "called": [
                "FUN_08003f30",
                "FUN_08003f94",
                "FUN_0800688e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080086e8": {
            "entrypoint": "0x080086e8",
            "current_name": "find_matching_index_080086e8",
            "code": "\nuint find_matching_index_080086e8(int value)\n\n{\n  uint index;\n  \n  if (value == 0) {\n    index = 5;\n  }\n  else {\n    index = 0;\n    while( true ) {\n      if (4 < index) {\n        return index;\n      }\n      if (value == (&DAT_200006c0)[index]) break;\n      index = index + 1 & 0xff;\n    }\n  }\n  return index;\n}\n\n",
            "renaming": {
                "FUN_080086e8": "find_matching_index_080086e8",
                "param_1": "value",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08008730",
                "FUN_0800870c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800870c": {
            "entrypoint": "0x0800870c",
            "current_name": "execute_selected_function_0800870c",
            "code": "\nvoid executeSelectedFunction_0800870c(void)\n\n{\n  uint functionIndex;\n  \n  functionIndex = FUN_080086e8();\n  if (functionIndex < 5) {\n    (**(functionPointer **)(&DAT_20000670 + functionIndex * 4))(*(undefined4 *)(&DAT_20000684 + functionIndex * 4));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800870c": "execute_selected_function_0800870c",
                "uVar1": "functionIndex",
                "code": "functionPointer"
            },
            "calling": [
                "FUN_0800694c"
            ],
            "called": [
                "FUN_080086e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008730": {
            "entrypoint": "0x08008730",
            "current_name": "execute_function_08008730",
            "code": "\nvoid executeFunction_08008730(void)\n\n{\n  uint randomIndex;\n  int returnValue;\n  int functionPointer;\n  \n  randomIndex = FUN_080086e8();\n  functionPointer = *(int *)(&DAT_200006ac + randomIndex * 4);\n  if ((randomIndex < 5) && (returnValue = (**(code **)(&DAT_20000698 + randomIndex * 4))(functionPointer), returnValue != -1)) {\n    FUN_0800688e((&DAT_200006c0)[*(byte *)(functionPointer + 0x44)],\n                 *(int *)(functionPointer + 100) + (uint)*(ushort *)(functionPointer + 0x6a),1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008730": "execute_function_08008730",
                "uVar1": "randomIndex",
                "iVar2": "returnValue",
                "iVar3": "functionPointer"
            },
            "calling": [
                "FUN_08006932"
            ],
            "called": [
                "FUN_080086e8",
                "FUN_0800688e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800877c": {
            "entrypoint": "0x0800877c",
            "current_name": "FUNC_0800877c",
            "code": "\nvoid FUNC_0800877c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800877c": "FUNC_0800877c"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008804": {
            "entrypoint": "0x08008804",
            "current_name": "allocate_memory_08008804",
            "code": "\nundefined * allocateMemory_08008804(int size)\n\n{\n  undefined *allocatedMemory;\n  \n  if (DAT_200006d4 == (undefined *)0x0) {\n    DAT_200006d4 = &DAT_20000a3c;\n  }\n  allocatedMemory = DAT_200006d4;\n  if (DAT_200006d4 + size <= stackMemory) {\n    DAT_200006d4 = DAT_200006d4 + size;\n    return allocatedMemory;\n  }\n  DAT_20000a38 = 0xc;\n  return (undefined *)0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008804": "allocate_memory_08008804",
                "param_1": "size",
                "puVar1": "allocatedMemory",
                "&stack0x00000000": "stackMemory"
            },
            "calling": [
                "FUN_08009918"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008840": {
            "entrypoint": "0x08008840",
            "current_name": "get_error_code_08008840",
            "code": "\nundefined4 get_error_code_08008840(void)\n\n{\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008840": "get_error_code_08008840"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008846": {
            "entrypoint": "0x08008846",
            "current_name": "set_memory_flag_08008846",
            "code": "\nundefined4 setMemoryFlag_08008846(undefined4 memory_address,int memory_offset)\n\n{\n  *(undefined4 *)(memory_offset + 4) = 0x2000;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008846": "set_memory_flag_08008846",
                "param_1": "memory_address",
                "param_2": "memory_offset"
            },
            "calling": [
                "FUN_0800a0ec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008850": {
            "entrypoint": "0x08008850",
            "current_name": "check_if_valid_08008850",
            "code": "\nundefined4 check_if_valid_08008850(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08008850": "check_if_valid_08008850"
            },
            "calling": [
                "FUN_0800a110"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008854": {
            "entrypoint": "0x08008854",
            "current_name": "initialize_08008854",
            "code": "\nundefined4 initialize_08008854(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008854": "initialize_08008854"
            },
            "calling": [
                "FUN_0800a130"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008858": {
            "entrypoint": "0x08008858",
            "current_name": "clear_memory_08008858",
            "code": "\nundefined4 clearMemory_08008858(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008858": "clear_memory_08008858"
            },
            "calling": [
                "FUN_0800a168"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800885c": {
            "entrypoint": "0x0800885c",
            "current_name": "initialize_parameters_0800885c",
            "code": "\nvoid initializeParameters_0800885c(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  FUN_08008500(param_2,param_3,param_3,param_4,param_4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800885c": "initialize_parameters_0800885c"
            },
            "calling": [
                "FUN_0800a042"
            ],
            "called": [
                "FUN_08008500"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008868": {
            "entrypoint": "0x08008868",
            "current_name": "infinite_loop_08008868",
            "code": "\nvoid infiniteLoop_08008868(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08008868": "infinite_loop_08008868"
            },
            "calling": [
                "FUN_08008868",
                "FUN_08009b5c"
            ],
            "called": [
                "FUN_08008868"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800886c": {
            "entrypoint": "0x0800886c",
            "current_name": "initialize_data_0800886c",
            "code": "\nundefined4 initializeData_0800886c(void)\n\n{\n  DAT_20000a38 = 0x16;\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800886c": "initialize_data_0800886c"
            },
            "calling": [
                "FUN_08009fe8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800887c": {
            "entrypoint": "0x0800887c",
            "current_name": "check_success_0800887c",
            "code": "\nundefined4 check_success_0800887c(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800887c": "check_success_0800887c"
            },
            "calling": [
                "thunk_FUN_0800887c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008880": {
            "entrypoint": "0x08008880",
            "current_name": "process_data_08008880",
            "code": "\nuint processData_08008880(uint inputValue)\n\n{\n  bool isSmallRange;\n  char resultChar;\n  uint finalResult;\n  \n  if (inputValue < 0xe) {\n    if (inputValue + 0x2e < 0x3c) {\n      isSmallRange = true;\n    }\n    else {\n      isSmallRange = false;\n    }\n  }\n  else {\n    isSmallRange = inputValue < 0x3c;\n  }\n  if (isSmallRange) {\n    if (inputValue < 0xe) {\n      inputValue = inputValue + 0x2e;\n    }\n    resultChar = (&DAT_0800a908)[inputValue];\n  }\n  else {\n    resultChar = -1;\n  }\n  if (resultChar == -1) {\n    finalResult = 0;\n  }\n  else {\n    finalResult = FUN_08006d80();\n    if (DAT_20000088 != 0xc) {\n      if (DAT_20000088 < 0xc) {\n        return finalResult >> (0xc - DAT_20000088 & 0xff);\n      }\n      return finalResult << (DAT_20000088 - 0xc & 0xff);\n    }\n  }\n  return finalResult;\n}\n\n",
            "renaming": {
                "FUN_08008880": "process_data_08008880",
                "param_1": "inputValue",
                "bVar1": "isSmallRange",
                "cVar2": "resultChar",
                "uVar3": "finalResult"
            },
            "calling": [
                "FUN_080022f8",
                "FUN_08000488"
            ],
            "called": [
                "FUN_08006d80"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080088e0": {
            "entrypoint": "0x080088e0",
            "current_name": "process_data_080088e0",
            "code": "\nvoid processData_080088e0(uint index,uint value)\n\n{\n  int result;\n  int lookupResult;\n  \n  if (index < 0x3c) {\n    lookupResult = (int)(char)(&DAT_0800a908)[index];\n  }\n  else {\n    lookupResult = -1;\n  }\n  if (lookupResult != -1) {\n    result = FUN_0800738a(lookupResult,&DAT_0800a6cc);\n    if (result == 0) {\n      FUN_08008990(index,1);\n      if (DAT_2000008c != 8) {\n        if (DAT_2000008c < 9) {\n          value = value << (8 - DAT_2000008c & 0xff);\n        }\n        else {\n          value = value >> (DAT_2000008c - 8 & 0xff);\n        }\n      }\n      if (value < 0x80) {\n        FUN_08008a24(index,0);\n      }\n      else {\n        FUN_08008a24(index,1);\n      }\n    }\n    else {\n      result = FUN_08006b28(lookupResult,&DAT_200006d8);\n      if (result == 0) {\n        FUN_08006b3e(lookupResult,&DAT_200006d8);\n      }\n      if (DAT_2000008c != 8) {\n        if (DAT_2000008c < 9) {\n          value = value << (8 - DAT_2000008c & 0xff);\n        }\n        else {\n          value = value >> (DAT_2000008c - 8 & 0xff);\n        }\n      }\n      FUN_08007118(lookupResult,0x3e418,0xff,value,result == 0);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080088e0": "process_data_080088e0",
                "param_1": "index",
                "param_2": "value",
                "iVar1": "result",
                "iVar2": "lookupResult"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08008990",
                "FUN_08008a24",
                "FUN_08007118",
                "FUN_0800738a",
                "FUN_08006b3e",
                "FUN_08006b28"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008990": {
            "entrypoint": "0x08008990",
            "current_name": "execute_operation_08008990",
            "code": "\nvoid executeOperation_08008990(uint operationIndex,undefined4 mode,undefined4 value,undefined1 *data)\n\n{\n  int result;\n  undefined1 *lookupTable;\n  int lookupIndex;\n  \n  if (operationIndex < 0x3c) {\n    lookupIndex = (int)(char)(&DAT_0800a908)[operationIndex];\n    lookupTable = &DAT_0800a908;\n  }\n  else {\n    lookupIndex = -1;\n    lookupTable = data;\n  }\n  if (lookupIndex != -1) {\n    result = FUN_08006b28(lookupIndex,&DAT_200006d8,value,lookupTable,data);\n    if (result != 0) {\n      result = FUN_0800738a(lookupIndex,&DAT_0800a6cc);\n      if (result != 0) {\n        FUN_080071e4(lookupIndex);\n      }\n      FUN_08006b5c(lookupIndex,&DAT_200006d8);\n    }\n    switch(mode) {\n    case 0:\n      FUN_08007258(lookupIndex,0);\n      break;\n    case 1:\n      FUN_08007258(lookupIndex,1,0);\n      break;\n    case 2:\n      FUN_08007258(lookupIndex,0,1);\n      break;\n    case 3:\n      FUN_08007258(lookupIndex,0,2);\n    }\n    FUN_08006b3e(lookupIndex,&DAT_200006ec);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008990": "execute_operation_08008990",
                "param_1": "operationIndex",
                "param_2": "mode",
                "param_3": "value",
                "param_4": "data",
                "iVar1": "result",
                "puVar2": "lookupTable",
                "iVar3": "lookupIndex"
            },
            "calling": [
                "FUN_08003002",
                "FUN_080088e0",
                "FUN_080025ac",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08006b5c",
                "FUN_080071e4",
                "FUN_08007258",
                "FUN_0800738a",
                "FUN_08006b3e",
                "FUN_08006b28"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008a24": {
            "entrypoint": "0x08008a24",
            "current_name": "process_data_08008a24",
            "code": "\nvoid processData_08008a24(uint index,undefined4 param2,undefined4 param3,undefined1 *data)\n\n{\n  int result;\n  undefined4 shiftedValue;\n  undefined1 *pointer;\n  uint value;\n  \n  if (index < 0x3c) {\n    value = (uint)(char)(&DAT_0800a908)[index];\n    pointer = &DAT_0800a908;\n  }\n  else {\n    value = 0xffffffff;\n    pointer = data;\n  }\n  if ((value != 0xffffffff) &&\n     (result = FUN_08006b28(value,&DAT_200006ec,param3,pointer,data), result != 0)) {\n    shiftedValue = FUN_08006b7c((value << 0x18) >> 0x1c);\n    FUN_080072d8(shiftedValue,1 << (value & 0xf) & 0xffff,param2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008a24": "process_data_08008a24",
                "param_1": "index",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "data",
                "iVar1": "result",
                "uVar2": "shiftedValue",
                "puVar3": "pointer",
                "uVar4": "value"
            },
            "calling": [
                "FUN_08002fca",
                "FUN_080088e0",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08006b7c",
                "FUN_08006b28",
                "FUN_080072d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008a6c": {
            "entrypoint": "0x08008a6c",
            "current_name": "check_and_convert_index_08008a6c",
            "code": "\nchar check_and_convert_index_08008a6c(uint index)\n\n{\n  char result;\n  int conversion_result;\n  undefined4 shifted_value;\n  uint lookup_index;\n  \n  if (index < 0x3c) {\n    lookup_index = (uint)(char)(&DAT_0800a908)[index];\n  }\n  else {\n    lookup_index = 0xffffffff;\n  }\n  if (lookup_index == 0xffffffff) {\n    result = '\\0';\n  }\n  else {\n    conversion_result = FUN_08006b28(lookup_index,&DAT_200006ec);\n    if (conversion_result == 0) {\n      result = '\\0';\n    }\n    else {\n      shifted_value = FUN_08006b7c((lookup_index << 0x18) >> 0x1c);\n      result = FUN_080072f0(shifted_value,1 << (lookup_index & 0xf) & 0xffff);\n    }\n  }\n  if (result != '\\0') {\n    result = '\\x01';\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08008a6c": "check_and_convert_index_08008a6c",
                "param_1": "index",
                "cVar1": "result",
                "iVar2": "conversion_result",
                "uVar3": "shifted_value",
                "uVar4": "lookup_index"
            },
            "calling": [
                "FUN_08000ef8"
            ],
            "called": [
                "FUN_08006b7c",
                "FUN_08006b28",
                "FUN_080072f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008abc": {
            "entrypoint": "0x08008abc",
            "current_name": "initialize_system_08008abc",
            "code": "\nvoid initialize_system_08008abc(void)\n\n{\n  FUN_0800723c();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008abc": "initialize_system_08008abc"
            },
            "calling": [
                "FUN_080022f8"
            ],
            "called": [
                "FUN_0800723c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008ac4": {
            "entrypoint": "0x08008ac4",
            "current_name": "FUNC_08008ac4",
            "code": "\nvoid FUNC_08008ac4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008ac4": "FUNC_08008ac4"
            },
            "calling": [
                "FUN_08003002",
                "FUN_08002fca"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008afa": {
            "entrypoint": "0x08008afa",
            "current_name": "calculate_result_08008afa",
            "code": "\nushort calculate_result_08008afa(int input_value)\n\n{\n  return (*(short *)(input_value + 0x134) + 0x40) - *(short *)(input_value + 0x136) & 0x3f;\n}\n\n",
            "renaming": {
                "FUN_08008afa": "calculate_result_08008afa",
                "param_1": "input_value"
            },
            "calling": [
                "FUN_08008bf4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b66": {
            "entrypoint": "0x08008b66",
            "current_name": "update_data_08008b66",
            "code": "\nvoid updateData_08008b66(int data)\n\n{\n  int result;\n  ushort currentValue;\n  undefined newValue;\n  \n  result = FUN_08008600(data,&newValue);\n  if ((result == 0) &&\n     (currentValue = *(short *)(data + 0x60) + 1U & 0x3f, currentValue != *(ushort *)(data + 0x62))) {\n    *(undefined *)(*(int *)(data + 0x5c) + (uint)*(ushort *)(data + 0x60)) = newValue;\n    *(ushort *)(data + 0x60) = currentValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008b66": "update_data_08008b66",
                "param_1": "data",
                "iVar1": "result",
                "uVar2": "currentValue",
                "local_9": "newValue"
            },
            "calling": [],
            "called": [
                "FUN_08008600"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008bf4": {
            "entrypoint": "0x08008bf4",
            "current_name": "FUNC_08008bf4",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08008bfa) */\n/* WARNING: Removing unreachable block (ram,0x08008c0c) */\n/* WARNING: Removing unreachable block (ram,0x08008c02) */\n/* WARNING: Removing unreachable block (ram,0x08008c14) */\n\nvoid FUNC_08008bf4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008bf4": "FUNC_08008bf4"
            },
            "calling": [
                "FUN_08008f1c"
            ],
            "called": [
                "FUN_08008afa"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008c20": {
            "entrypoint": "0x08008c20",
            "current_name": "initialize_data_08008c20",
            "code": "\nvoid initializeData_08008c20(int dataAddress)\n\n{\n  *(int *)(dataAddress + 0x130) = dataAddress + 0x11;\n  *(undefined2 *)(dataAddress + 0x134) = 0;\n  *(undefined2 *)(dataAddress + 0x136) = 0;\n  *(int *)(dataAddress + 0x138) = dataAddress + 0x51;\n  *(undefined2 *)(dataAddress + 0x13c) = 0;\n  *(undefined2 *)(dataAddress + 0x13e) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008c20": "initialize_data_08008c20",
                "param_1": "dataAddress"
            },
            "calling": [
                "FUN_08008d30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008c44": {
            "entrypoint": "0x08008c44",
            "current_name": "configure_serial_08008c44",
            "code": "\nvoid configureSerial_08008c44(int serialPort,undefined4 baudRate,byte configByte)\n\n{\n  uint errorCode;\n  byte configMask;\n  int configFlag;\n  code *jumpTable;\n  \n  *(undefined4 *)(serialPort + 0x11c) = baudRate;\n  *(byte *)(serialPort + 0x140) = configByte;\n  configMask = configByte & 7;\n  if (configMask == 4) {\n    configFlag = 7;\n  }\n  else if (configMask == 6) {\n    configFlag = 8;\n  }\n  else if (configMask == 2) {\n    configFlag = 6;\n  }\n  else {\n    configFlag = 0;\n  }\n  if ((configByte & 0x30) == 0x30) {\n    *(undefined4 *)(serialPort + 0x128) = 0x600;\n    configFlag = configFlag + 1;\n  }\n  else if ((configByte & 0x20) == 0) {\n    *(undefined4 *)(serialPort + 0x128) = 0;\n  }\n  else {\n    *(undefined4 *)(serialPort + 0x128) = 0x400;\n    configFlag = configFlag + 1;\n  }\n  if ((configByte & 8) == 0) {\n    *(undefined4 *)(serialPort + 0x124) = 0;\n  }\n  else {\n    *(undefined4 *)(serialPort + 0x124) = 0x2000;\n  }\n  if (configFlag == 8) {\n    *(undefined4 *)(serialPort + 0x120) = 0;\n  }\n  else if (configFlag == 9) {\n    *(undefined4 *)(serialPort + 0x120) = 0x1000;\n  }\n  else {\n    configFlag = 0;\n  }\n  if (configFlag != 0) {\n    FUN_08008078(serialPort + 0xd4);\n    FUN_0800863c(serialPort + 0xd4,0x8008b67);\n    return;\n  }\n  jumpTable = (code *)0x8008cee;\n  FUN_080090cc(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/cores/arduino/HardwareSerial.cpp\"\n               ,299,\"void HardwareSerial::begin(long unsigned int, byte)\",\"databits!=0\");\n  if (errorCode < 0x3c) {\n    uRam0000012d = (&DAT_0800a908)[errorCode];\n  }\n  else {\n    uRam0000012d = 0xff;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08008d0c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)(0,errorCode,&stack0x00000148);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008c44": "configure_serial_08008c44",
                "param_1": "serialPort",
                "param_2": "baudRate",
                "param_3": "configByte",
                "extraout_r1": "errorCode",
                "bVar1": "configMask",
                "iVar2": "configFlag",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_08003048"
            ],
            "called": [
                "FUN_08008078",
                "FUN_080090cc",
                "FUN_0800863c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008d00": {
            "entrypoint": "0x08008d00",
            "current_name": "set_byte_value_08008d00",
            "code": "\nvoid setByteValue_08008d00(int memoryAddress,uint valueIndex)\n\n{\n  undefined byteValue;\n  code *jumpTable;\n  \n  if (valueIndex < 0x3c) {\n    byteValue = (&DAT_0800a908)[valueIndex];\n  }\n  else {\n    byteValue = 0xff;\n  }\n  *(undefined *)(memoryAddress + 0x12d) = byteValue;\n                    /* WARNING: Could not recover jumptable at 0x08008d0c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008d00": "set_byte_value_08008d00",
                "param_1": "memoryAddress",
                "param_2": "valueIndex",
                "uVar1": "byteValue",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_08008d30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008d18": {
            "entrypoint": "0x08008d18",
            "current_name": "update_param_value_08008d18",
            "code": "\nvoid updateParamValue_08008d18(int baseAddress,uint index)\n\n{\n  undefined value;\n  \n  if (index < 0x3c) {\n    value = (&DAT_0800a908)[index];\n  }\n  else {\n    value = 0xff;\n  }\n  *(undefined *)(baseAddress + 300) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008d18": "update_param_value_08008d18",
                "param_1": "baseAddress",
                "param_2": "index",
                "uVar1": "value"
            },
            "calling": [
                "FUN_08008d30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008d30": {
            "entrypoint": "0x08008d30",
            "current_name": "initialize_parameters_08008d30",
            "code": "\nundefined4 *\ninitializeParameters_08008d30(undefined4 *parameters,undefined4 inputData,undefined4 otherParam,undefined4 additionalParam)\n\n{\n  undefined result;\n  \n  parameters[1] = 0;\n  parameters[2] = 1000;\n  *parameters = &PTR_LAB_08008ba4_1_0800aab8;\n  if (parameters == (undefined4 *)&DAT_20000700) {\n    FUN_08008d00(&DAT_20000700,0,otherParam,&DAT_20000700,additionalParam);\n    FUN_08008d18(&DAT_20000700,1);\n  }\n  else {\n    result = FUN_0800734a(inputData,&DAT_0800a81c);\n    *(undefined *)((int)parameters + 0x12d) = result;\n    result = FUN_0800734a(inputData,&DAT_0800a864);\n    *(undefined *)(parameters + 0x4b) = result;\n  }\n  FUN_08008c20(parameters);\n  return parameters;\n}\n\n",
            "renaming": {
                "FUN_08008d30": "initialize_parameters_08008d30",
                "param_1": "parameters",
                "param_2": "inputData",
                "param_3": "otherParam",
                "param_4": "additionalParam",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08008d8c"
            ],
            "called": [
                "FUN_08008d18",
                "FUN_08008d00",
                "FUN_08008c20",
                "FUN_0800734a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008d8c": {
            "entrypoint": "0x08008d8c",
            "current_name": "check_param_and_execute_08008d8c",
            "code": "\nvoid check_param_and_execute_08008d8c(int status_code,int special_value,undefined4 arg1,undefined4 arg2)\n\n{\n  if (status_code != 1) {\n    return;\n  }\n  if (special_value == 0xffff) {\n    FUN_08008d30(&DAT_20000700,0x40004400,arg1,0xffff,arg2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008d8c": "check_param_and_execute_08008d8c",
                "param_1": "status_code",
                "param_2": "special_value",
                "param_3": "arg1",
                "param_4": "arg2"
            },
            "calling": [],
            "called": [
                "FUN_08008d30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008df8": {
            "entrypoint": "0x08008df8",
            "current_name": "initialize_data_08008df8",
            "code": "\nvoid initializeData_08008df8(undefined4 *data,undefined value1,undefined value2,undefined value3,\n                 undefined value4)\n\n{\n  *data = &DAT_0800ab0c;\n  *(undefined *)(data + 1) = value1;\n  *(undefined *)((int)data + 5) = value2;\n  *(undefined *)((int)data + 6) = value3;\n  *(undefined *)((int)data + 7) = value4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008df8": "initialize_data_08008df8",
                "param_1": "data",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "value4"
            },
            "calling": [
                "FUN_08008e14"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008e14": {
            "entrypoint": "0x08008e14",
            "current_name": "check_parameters_08008e14",
            "code": "\nvoid check_parameters_08008e14(int param_name1,int param_name2)\n\n{\n  if ((param_name1 == 1) && (param_name2 == 0xffff)) {\n    FUN_08008df8(&DAT_20000844,0,0,0,0);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008e14": "check_parameters_08008e14",
                "param_1": "param_name1",
                "param_2": "param_name2"
            },
            "calling": [],
            "called": [
                "FUN_08008df8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008ef4": {
            "entrypoint": "0x08008ef4",
            "current_name": "calculate_linear_interpolation_08008ef4",
            "code": "\nint calculate_linear_interpolation_08008ef4(int first_value,int first_input,int second_input,int min_output,int max_output)\n\n{\n  return (uint)((max_output - min_output) * (first_value - first_input)) / (uint)(second_input - first_input) + min_output;\n}\n\n",
            "renaming": {
                "FUN_08008ef4": "calculate_linear_interpolation_08008ef4",
                "param_1": "first_value",
                "param_2": "first_input",
                "param_3": "second_input",
                "param_4": "min_output",
                "param_5": "max_output"
            },
            "calling": [
                "FUN_080026b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008f0c": {
            "entrypoint": "0x08008f0c",
            "current_name": "FUNC_08008f0c",
            "code": "\nvoid FUNC_08008f0c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008f0c": "FUNC_08008f0c"
            },
            "calling": [
                "FUN_08008f1c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008f0e": {
            "entrypoint": "0x08008f0e",
            "current_name": "initialize_application_08008f0e",
            "code": "\nvoid initializeApplication_08008f0e(void)\n\n{\n  FUN_08003f0c(3);\n  FUN_080036a2();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008f0e": "initialize_application_08008f0e"
            },
            "calling": [
                "FUN_08009148"
            ],
            "called": [
                "FUN_080036a2",
                "FUN_08003f0c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008f1c": {
            "entrypoint": "0x08008f1c",
            "current_name": "execute_main_loop_08008f1c",
            "code": "\nvoid execute_main_loop_08008f1c(void)\n\n{\n  FUNC_08008f0c();\n  FUN_08001b48();\n  do {\n    FUN_080022f8();\n    FUNC_08008bf4();\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08008f1c": "execute_main_loop_08008f1c"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_080022f8",
                "FUN_08008f0c",
                "FUN_08008bf4",
                "FUN_08001b48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008f3c": {
            "entrypoint": "0x08008f3c",
            "current_name": "count_set_bits_08008f3c",
            "code": "\nchar countSetBits_08008f3c(uint number)\n\n{\n  char count;\n  \n  count = '\\0';\n  for (; number != 1; number = number >> 1) {\n    count = count + '\\x01';\n  }\n  return count;\n}\n\n",
            "renaming": {
                "FUN_08008f3c": "count_set_bits_08008f3c",
                "param_1": "number",
                "cVar1": "count"
            },
            "calling": [
                "FUN_08009094"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008f78": {
            "entrypoint": "0x08008f78",
            "current_name": "initialize_parameters_08008f78",
            "code": "\nvoid initializeParameters_08008f78(int inputFlag,int errorCode,undefined4 param3,undefined4 param4)\n\n{\n  if (inputFlag != 1) {\n    return;\n  }\n  if (errorCode == 0xffff) {\n    DAT_2000084c = 6;\n    DAT_20000858 = 0;\n    DAT_20000860 = 7;\n    DAT_2000086c = 0;\n    DAT_20000874 = 8;\n    DAT_20000880 = 0;\n    DAT_20000888 = 9;\n    DAT_20000894 = 0;\n    DAT_2000089c = 10;\n    DAT_200008a8 = 0;\n    DAT_200008b0 = 0x17;\n    DAT_200008bc = 0;\n    DAT_200008c4 = 0x17;\n    DAT_200008d0 = 0;\n    DAT_200008d8 = 0x17;\n    DAT_200008e4 = 0;\n    DAT_200008ec = 0x17;\n    DAT_200008f8 = 0;\n    DAT_20000900 = 0x17;\n    DAT_2000090c = 0;\n    DAT_20000914 = 0x28;\n    DAT_20000920 = 0;\n    DAT_20000928 = 0x28;\n    DAT_20000934 = 0;\n    DAT_2000093c = 0x28;\n    DAT_20000948 = 0;\n    DAT_20000950 = 0x28;\n    DAT_2000095c = 0;\n    DAT_20000964 = 0x28;\n    DAT_20000970 = 0;\n    DAT_20000978 = 0x28;\n    DAT_20000984 = 0;\n    FUN_080090c2(0,&LAB_08008f50_1,&DAT_20000000,&DAT_2000084c,param4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008f78": "initialize_parameters_08008f78",
                "param_1": "inputFlag",
                "param_2": "errorCode",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [],
            "called": [
                "FUN_080090c2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009084": {
            "entrypoint": "0x08009084",
            "current_name": "execute_algorithm_08009084",
            "code": "\nvoid executeAlgorithm_08009084(int input_param)\n\n{\n  int index;\n  \n  if (*(int *)(input_param + 8) != 0) {\n    (**(code **)(input_param + 0xc))();\n    return;\n  }\n  FUN_0800a18c();\n  index = FUN_08008f3c();\n  if ((&DAT_20000858)[index * 5] != 0) {\n    executeAlgorithm_08009084();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009084": "execute_algorithm_08009084",
                "param_1": "input_param",
                "iVar1": "index"
            },
            "calling": [
                "FUN_08009094"
            ],
            "called": [
                "FUN_0800a18c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009094": {
            "entrypoint": "0x08009094",
            "current_name": "check_and_update_data_08009094",
            "code": "\nvoid checkAndUpdateData_08009094(void)\n\n{\n  int index;\n  \n  index = FUN_08008f3c();\n  if ((&DAT_20000858)[index * 5] != 0) {\n    FUN_08009084();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009094": "check_and_update_data_08009094",
                "iVar1": "index"
            },
            "calling": [
                "FUN_080042f0"
            ],
            "called": [
                "FUN_08008f3c",
                "FUN_08009084"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080090c2": {
            "entrypoint": "0x080090c2",
            "current_name": "process_data_080090c2",
            "code": "\nvoid processData_080090c2(undefined4 destination,undefined4 source)\n\n{\n  FUN_08009108(source,destination);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080090c2": "process_data_080090c2",
                "param_1": "destination",
                "param_2": "source"
            },
            "calling": [
                "FUN_08008f78"
            ],
            "called": [
                "FUN_08009108"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080090cc": {
            "entrypoint": "0x080090cc",
            "current_name": "assertion_failed_080090cc",
            "code": "\nvoid assertionFailed_080090cc(undefined4 file,undefined4 lineNumber,char *message,undefined4 function)\n\n{\n  undefined4 ptr;\n  char *commaFunction;\n  undefined8 result;\n  undefined4 paramFunction;\n  \n  ptr = *(undefined4 *)(DAT_20000090 + 0xc);\n  paramFunction = function;\n  if (message == (char *)0x0) goto LAB_080090f0;\n  commaFunction = \", function: \";\n  do {\n    FUN_08009124(ptr,\"assertion \\\"%s\\\" failed: file \\\"%s\\\", line %d%s%s\\n\",function,file,lineNumber\n                 ,commaFunction,message,paramFunction);\n    result = FUN_08009b5c();\n    lineNumber = (undefined4)((ulonglong)result >> 0x20);\n    ptr = (undefined4)result;\nLAB_080090f0:\n    message = \"\";\n    commaFunction = message;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080090cc": "assertion_failed_080090cc",
                "param_1": "file",
                "param_2": "lineNumber",
                "param_3": "message",
                "param_4": "function",
                "uVar1": "ptr",
                "pcVar2": "commaFunction",
                "uVar3": "result",
                "uVar4": "paramFunction"
            },
            "calling": [
                "FUN_08008c44"
            ],
            "called": [
                "FUN_08009b5c",
                "FUN_08009124"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009108": {
            "entrypoint": "0x08009108",
            "current_name": "shift_unsigned_long_long_08009108",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08009110) */\n\nlonglong shiftUnsignedLongLong_08009108(undefined4 param1,uint param2)\n\n{\n  return (ulonglong)param2 << 0x20;\n}\n\n",
            "renaming": {
                "FUN_08009108": "shift_unsigned_long_long_08009108",
                "param_1": "param1",
                "param_2": "param2"
            },
            "calling": [
                "FUN_080090c2"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009124": {
            "entrypoint": "0x08009124",
            "current_name": "initialize_stack_08009124",
            "code": "\nvoid initializeStack_08009124(undefined4 param1,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined4 stackParameter1;\n  undefined4 stackParameter2;\n  \n  stackParameter1 = param3;\n  stackParameter2 = param4;\n  FUN_0800937c(DAT_20000090,param1,param2,&stackParameter1,param1,&stackParameter1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009124": "initialize_stack_08009124",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uStack_8": "stackParameter1",
                "uStack_4": "stackParameter2"
            },
            "calling": [
                "FUN_080090cc"
            ],
            "called": [
                "FUN_0800937c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009148": {
            "entrypoint": "0x08009148",
            "current_name": "execute_code_blocks_08009148",
            "code": "\nvoid executeCodeBlocks_08009148(void)\n\n{\n  int index;\n  \n  for (index = 0; index != 0; index = index + 1) {\n    (*(code *)(&DAT_0800abe4)[index])();\n  }\n  FUNC_0800a424();\n  for (index = 0; index != 0xc; index = index + 1) {\n    (*(code *)(&DAT_0800abe4)[index])();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009148": "execute_code_blocks_08009148",
                "iVar1": "index"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_0800a424",
                "FUN_08008f0e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009190": {
            "entrypoint": "0x08009190",
            "current_name": "initialize_data_08009190",
            "code": "\nvoid initializeData_08009190(undefined4 input)\n\n{\n  FUN_08009270(DAT_20000090,input);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009190": "initialize_data_08009190",
                "param_1": "input"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [
                "FUN_08009270"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091a0": {
            "entrypoint": "0x080091a0",
            "current_name": "initialize_data_080091a0",
            "code": "\nvoid initializeData_080091a0(undefined4 data)\n\n{\n  FUN_080091d8(DAT_20000090,data);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091a0": "initialize_data_080091a0",
                "param_1": "data"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [
                "FUN_080091d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091b0": {
            "entrypoint": "0x080091b0",
            "current_name": "copy_buffer_080091b0",
            "code": "\nvoid copy_buffer_080091b0(int destination_address,undefined *source_buffer,int buffer_size)\n\n{\n  undefined *end_of_source;\n  undefined *end_of_destination;\n  \n  end_of_destination = (undefined *)(destination_address + -1);\n  end_of_source = source_buffer + buffer_size;\n  for (; source_buffer != end_of_source; source_buffer = source_buffer + 1) {\n    end_of_destination = end_of_destination + 1;\n    *end_of_destination = *source_buffer;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091b0": "copy_buffer_080091b0",
                "param_1": "destination_address",
                "param_2": "source_buffer",
                "param_3": "buffer_size",
                "puVar1": "end_of_source",
                "puVar2": "end_of_destination"
            },
            "calling": [
                "FUN_080027f0",
                "FUN_08009908"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091c6": {
            "entrypoint": "0x080091c6",
            "current_name": "fill_memory_with_080091c6",
            "code": "\nvoid fillMemoryWith_080091c6(undefined *memory,undefined value,int length)\n\n{\n  undefined *endMemory;\n  \n  endMemory = memory + length;\n  for (; memory != endMemory; memory = memory + 1) {\n    *memory = value;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091c6": "fill_memory_with_080091c6",
                "param_1": "memory",
                "param_2": "value",
                "param_3": "length",
                "puVar1": "endMemory"
            },
            "calling": [
                "FUN_08002a58",
                "FUN_08009cdc",
                "FUN_08002968",
                "FUN_08007118",
                "FUN_08009db0",
                "FUN_08009d24",
                "FUN_08006d80"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091d8": {
            "entrypoint": "0x080091d8",
            "current_name": "update_data_structure_080091d8",
            "code": "\nvoid updateDataStructure_080091d8(undefined4 *result,int size,undefined4 arg3,undefined4 arg4)\n\n{\n  int **tmp;\n  int **prevNode;\n  int **currNode;\n  int *nodeSize;\n  int **prevPtr;\n  int **newNode;\n  \n  if (size == 0) {\n    return;\n  }\n  newNode = (int **)(size + -4);\n  if (*(int *)(size + -4) < 0) {\n    newNode = (int **)((int)newNode + *(int *)(size + -4));\n  }\n  FUNC_08009f48();\n  currNode = (int **)&DAT_2000098c;\n  if (DAT_2000098c == (int **)0x0) {\n    newNode[1] = (int *)0x0;\n    prevNode = tmp;\n    DAT_2000098c = newNode;\n  }\n  else {\n    currNode = DAT_2000098c;\n    if (newNode < DAT_2000098c) {\n      prevNode = (int **)*newNode;\n      currNode = (int **)((int)newNode + (int)prevNode);\n      if (DAT_2000098c == currNode) {\n        nodeSize = *DAT_2000098c;\n        DAT_2000098c = (int **)DAT_2000098c[1];\n        currNode = (int **)((int)nodeSize + (int)prevNode);\n        *newNode = (int *)currNode;\n      }\n      newNode[1] = (int *)DAT_2000098c;\n      DAT_2000098c = newNode;\n    }\n    else {\n      do {\n        prevPtr = currNode;\n        currNode = (int **)prevPtr[1];\n        if (currNode == (int **)0x0) break;\n      } while (currNode <= newNode);\n      prevNode = (int **)*prevPtr;\n      if ((int **)((int)prevPtr + (int)prevNode) == newNode) {\n        prevNode = (int **)((int)prevNode + (int)*newNode);\n        *prevPtr = (int *)prevNode;\n        if (currNode == (int **)((int)prevPtr + (int)prevNode)) {\n          nodeSize = *currNode;\n          currNode = (int **)currNode[1];\n          prevNode = (int **)((int)prevNode + (int)nodeSize);\n          *prevPtr = (int *)prevNode;\n          prevPtr[1] = (int *)currNode;\n        }\n      }\n      else if (newNode < (int **)((int)prevPtr + (int)prevNode)) {\n        *result = 0xc;\n      }\n      else {\n        prevNode = (int **)((int)newNode + (int)*newNode);\n        if (currNode == prevNode) {\n          nodeSize = *currNode;\n          currNode = (int **)currNode[1];\n          prevNode = (int **)((int)nodeSize + (int)*newNode);\n          *newNode = (int *)prevNode;\n        }\n        newNode[1] = (int *)currNode;\n        prevPtr[1] = (int *)newNode;\n      }\n    }\n  }\n  FUNC_08009f4a(result,prevNode,currNode,arg4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091d8": "update_data_structure_080091d8",
                "param_1": "result",
                "param_2": "size",
                "param_3": "arg3",
                "param_4": "arg4",
                "extraout_r1": "tmp",
                "ppiVar1": "prevNode",
                "ppiVar2": "currNode",
                "piVar3": "nodeSize",
                "ppiVar4": "prevPtr",
                "ppiVar5": "newNode"
            },
            "calling": [
                "FUN_08009b5c",
                "FUN_08009908",
                "FUN_080091a0",
                "FUN_08009a80"
            ],
            "called": [
                "FUN_08009f4a",
                "FUN_08009f48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009270": {
            "entrypoint": "0x08009270",
            "current_name": "allocate_memory_08009270",
            "code": "\nuint allocate_memory_08009270(undefined4 *buffer,uint size)\n\n{\n  uint *current_block;\n  int block_size;\n  uint *next_block;\n  uint block_diff;\n  uint *previous_block;\n  uint new_size;\n  \n  new_size = (size + 3 & 0xfffffffc) + 8;\n  if (new_size < 0xc) {\n    new_size = 0xc;\n  }\n  if (((int)new_size < 0) || (new_size < size)) {\n    *buffer = 0xc;\n  }\n  else {\n    FUNC_08009f48();\n    current_block = DAT_2000098c;\n    previous_block = DAT_2000098c;\n    while (next_block = current_block, next_block != (uint *)0x0) {\n      block_diff = *next_block - new_size;\n      if (-1 < (int)block_diff) {\n        if (block_diff < 0xc) {\n          if (previous_block == next_block) {\n            current_block = (uint *)previous_block[1];\n            DAT_2000098c = current_block;\n          }\n          else {\n            current_block = (uint *)next_block[1];\n          }\n          if (previous_block != next_block) {\n            previous_block[1] = (uint)current_block;\n            previous_block = next_block;\n          }\n        }\n        else {\n          *next_block = block_diff;\n          *(uint *)((int)next_block + block_diff) = new_size;\n          previous_block = (uint *)((int)next_block + block_diff);\n        }\n        goto LAB_080092d4;\n      }\n      previous_block = next_block;\n      current_block = (uint *)next_block[1];\n    }\n    if (DAT_20000990 == 0) {\n      DAT_20000990 = FUN_08009918(buffer);\n    }\n    current_block = (uint *)FUN_08009918(buffer,new_size);\n    if ((current_block != (uint *)0xffffffff) &&\n       ((previous_block = (uint *)((int)current_block + 3U & 0xfffffffc), current_block == previous_block ||\n        (block_size = FUN_08009918(buffer,(int)previous_block - (int)current_block), block_size != -1)))) {\n      *previous_block = new_size;\nLAB_080092d4:\n      FUNC_08009f4a(buffer);\n      new_size = (int)previous_block + 0xbU & 0xfffffff8;\n      block_size = new_size - (int)(previous_block + 1);\n      if (block_size != 0) {\n        *(int *)((int)previous_block + block_size) = -block_size;\n        return new_size;\n      }\n      return new_size;\n    }\n    *buffer = 0xc;\n    FUNC_08009f4a(buffer);\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08009270": "allocate_memory_08009270",
                "param_1": "buffer",
                "param_2": "size",
                "puVar1": "current_block",
                "iVar2": "block_size",
                "puVar3": "next_block",
                "uVar4": "block_diff",
                "puVar5": "previous_block",
                "uVar6": "new_size"
            },
            "calling": [
                "FUN_08009908",
                "FUN_08009eac",
                "FUN_08009190",
                "FUN_08009d24"
            ],
            "called": [
                "FUN_08009f4a",
                "FUN_08009f48",
                "FUN_08009918"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800932c": {
            "entrypoint": "0x0800932c",
            "current_name": "process_input_0800932c",
            "code": "\nuint processInput_0800932c(int inputStruct,byte byteValue,byte **bytePointer)\n\n{\n  int tempVar1;\n  byte *tempVar2;\n  byte *tempVar3;\n  uint returnValue;\n  \n  tempVar2 = bytePointer[2] + -1;\n  bytePointer[2] = tempVar2;\n  if ((-1 < (int)tempVar2) ||\n     (((int)bytePointer[6] <= (int)tempVar2 && (tempVar2 = (byte *)(uint)byteValue, tempVar2 != (byte *)0xa))))\n  {\n    tempVar2 = *bytePointer;\n    *bytePointer = tempVar2 + 1;\n    *tempVar2 = byteValue;\n    return (uint)byteValue;\n  }\n  if ((inputStruct != 0) && (*(int *)(inputStruct + 0x18) == 0)) {\n    FUN_08009d50();\n  }\n  if (bytePointer == (byte **)&DAT_0800aba4) {\n    bytePointer = *(byte ***)(inputStruct + 4);\n  }\n  else if (bytePointer == (byte **)&DAT_0800abc4) {\n    bytePointer = *(byte ***)(inputStruct + 8);\n  }\n  else if (bytePointer == (byte **)&DAT_0800ab84) {\n    bytePointer = *(byte ***)(inputStruct + 0xc);\n  }\n  bytePointer[2] = bytePointer[6];\n  tempVar3 = (byte *)(uint)*(ushort *)(bytePointer + 3);\n  tempVar1 = (int)tempVar3 << 0x1c;\n  if (((tempVar1 < 0) && (tempVar3 = bytePointer[4], tempVar3 != (byte *)0x0)) ||\n     (tempVar1 = FUN_08009a80(inputStruct,bytePointer,tempVar1,tempVar3,tempVar2), tempVar1 == 0)) {\n    returnValue = (uint)byteValue;\n    tempVar1 = (int)*bytePointer - (int)bytePointer[4];\n    if ((tempVar1 < (int)bytePointer[5]) || (tempVar1 = FUN_08009c7c(inputStruct,bytePointer), tempVar1 == 0)) {\n      bytePointer[2] = bytePointer[2] + -1;\n      tempVar2 = *bytePointer;\n      *bytePointer = tempVar2 + 1;\n      *tempVar2 = byteValue;\n      if ((byte *)(tempVar1 + 1) != bytePointer[5]) {\n        if (-1 < (int)((uint)*(ushort *)(bytePointer + 3) << 0x1f)) {\n          return returnValue;\n        }\n        if (returnValue != 10) {\n          return returnValue;\n        }\n      }\n      tempVar1 = FUN_08009c7c(inputStruct,bytePointer);\n      if (tempVar1 == 0) {\n        return returnValue;\n      }\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800932c": "process_input_0800932c",
                "param_1": "inputStruct",
                "param_2": "byteValue",
                "param_3": "bytePointer",
                "iVar1": "tempVar1",
                "pbVar2": "tempVar2",
                "pbVar3": "tempVar3",
                "uVar4": "returnValue"
            },
            "calling": [
                "FUN_08009358"
            ],
            "called": [
                "FUN_08009c7c",
                "FUN_08009a80",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009358": {
            "entrypoint": "0x08009358",
            "current_name": "process_data_08009358",
            "code": "\nint processData_08009358(undefined4 arg1,undefined4 arg2,undefined *buffer,int length)\n\n{\n  int result;\n  undefined *endPtr;\n  int remainingLength;\n  \n  endPtr = buffer + length;\n  remainingLength = length;\n  do {\n    if (buffer == endPtr) {\n      return 0;\n    }\n    result = FUN_0800932c(arg1,*buffer,arg2,length,remainingLength);\n    length = result + 1;\n    buffer = buffer + 1;\n  } while (length != 0);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009358": "process_data_08009358",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "buffer",
                "param_4": "length",
                "puVar2": "endPtr",
                "iVar3": "remainingLength",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800937c"
            ],
            "called": [
                "FUN_0800932c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800937c": {
            "entrypoint": "0x0800937c",
            "current_name": "parse_format_string_0800937c",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08009550) */\n\nint parseFormatString_0800937c(int formatString,undefined4 *flags,byte *str,int *argList)\n\n{\n  int result;\n  int *count;\n  bool isNumeric;\n  byte *ptr;\n  byte *ptr2;\n  int remainingArgs;\n  int temp;\n  int *currentArg;\n  uint fieldWidth;\n  int precision;\n  undefined4 datatype;\n  int numericArg;\n  int totalLength;\n  byte formatChar;\n  undefined SPACE;\n  undefined PLUS;\n  undefined signFlag;\n  undefined4 paddingChar;\n  \n  currentArg = argList;\n  if ((formatString != 0) && (*(int *)(formatString + 0x18) == 0)) {\n    FUN_08009d50();\n  }\n  if (flags == &DAT_0800aba4) {\n    flags = *(undefined4 **)(formatString + 4);\n  }\n  else if (flags == (undefined4 *)&DAT_0800abc4) {\n    flags = *(undefined4 **)(formatString + 8);\n  }\n  else if (flags == (undefined4 *)&DAT_0800ab84) {\n    flags = *(undefined4 **)(formatString + 0xc);\n  }\n  if (((-1 < (int)((uint)*(ushort *)(flags + 3) << 0x1c)) || (flags[4] == 0)) &&\n     (temp = FUN_08009a80(formatString,flags), temp != 0)) {\n    return -1;\n  }\n  totalLength = 0;\n  SPACE = 0x20;\n  PLUS = 0x30;\n  ptr = str;\nLAB_080093be:\n  ptr2 = ptr;\n  if (*ptr2 != 0) goto LAB_08009474;\n  goto LAB_080093c8;\nLAB_08009474:\n  ptr = ptr2 + 1;\n  if (*ptr2 != 0x25) goto LAB_080093be;\nLAB_080093c8:\n  temp = (int)ptr2 - (int)str;\n  if (temp != 0) {\n    result = FUN_08009358(formatString,flags,str,temp);\n    if (result == -1) {\nLAB_08009568:\n      if ((int)((uint)*(ushort *)(flags + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return totalLength;\n    }\n    totalLength = totalLength + temp;\n  }\n  if (*ptr2 == 0) goto LAB_08009568;\n  fieldWidth = 0;\n  numericArg = 0;\n  precision = -1;\n  datatype = 0;\n  signFlag = 0;\n  paddingChar = 0;\n  ptr = ptr2 + 1;\n  while( true ) {\n    temp = FUN_08009f2c(\"#-0+ \",*ptr);\n    str = ptr + 1;\n    if (temp == 0) break;\n    fieldWidth = 1 << (temp + 0xf7ff54b0U & 0xff) | fieldWidth;\n    ptr = str;\n  }\n  if ((int)(fieldWidth << 0x1b) < 0) {\n    signFlag = 0x20;\n  }\n  if ((int)(fieldWidth << 0x1c) < 0) {\n    signFlag = 0x2b;\n  }\n  if (*ptr == 0x2a) {\n    count = currentArg + 1;\n    temp = *currentArg;\n    currentArg = count;\n    if (temp < 0) {\n      numericArg = -temp;\n      fieldWidth = fieldWidth | 2;\n      goto LAB_080094a6;\n    }\n  }\n  else {\n    isNumeric = false;\n    temp = numericArg;\n    str = ptr;\n    while( true ) {\n      if (9 < *str - 0x30) break;\n      temp = temp * 10 + (*str - 0x30);\n      isNumeric = true;\n      str = str + 1;\n    }\n    if (!isNumeric) goto LAB_080094a6;\n  }\n  numericArg = temp;\nLAB_080094a6:\n  if (*str == 0x2e) {\n    if (str[1] == 0x2a) {\n      str = str + 2;\n      count = currentArg + 1;\n      precision = *currentArg;\n      currentArg = count;\n      if (precision < 0) {\n        precision = -1;\n      }\n    }\n    else {\n      isNumeric = false;\n      temp = 0;\n      precision = 0;\n      while( true ) {\n        str = str + 1;\n        if (9 < *str - 0x30) break;\n        temp = temp * 10 + (*str - 0x30);\n        isNumeric = true;\n      }\n      if (isNumeric) {\n        precision = temp;\n      }\n    }\n  }\n  temp = FUN_08009f2c(&DAT_0800ab56,*str,3);\n  if (temp != 0) {\n    str = str + 1;\n    fieldWidth = fieldWidth | 0x40 << (temp + 0xf7ff54aaU & 0xff);\n  }\n  formatChar = *str;\n  str = str + 1;\n  temp = FUN_08009f2c(\"efgEFG\",formatChar,6);\n  if (temp == 0) {\n    remainingArgs = FUN_08009698(formatString,&fieldWidth,flags,0x8009359,&currentArg);\n    if (remainingArgs == -1) goto LAB_08009568;\n  }\n  else {\n    currentArg = (int *)(((int)currentArg + 7U & 0xfffffff8) + 8);\n  }\n  totalLength = totalLength + remainingArgs;\n  ptr = str;\n  goto LAB_080093be;\n}\n\n",
            "renaming": {
                "FUN_0800937c": "parse_format_string_0800937c",
                "param_1": "formatString",
                "param_2": "flags",
                "param_3": "str",
                "param_4": "argList",
                "iVar1": "result",
                "piVar2": "count",
                "bVar3": "isNumeric",
                "pbVar4": "ptr",
                "pbVar5": "ptr2",
                "unaff_r9": "remainingArgs",
                "iVar6": "temp",
                "local_8c": "currentArg",
                "local_88": "fieldWidth",
                "local_84": "precision",
                "local_80": "datatype",
                "local_7c": "numericArg",
                "local_74": "totalLength",
                "local_70": "formatChar",
                "local_6f": "SPACE",
                "local_6e": "PLUS",
                "local_45": "signFlag",
                "local_30": "paddingChar"
            },
            "calling": [
                "FUN_080098d8",
                "FUN_08009124"
            ],
            "called": [
                "FUN_08009f2c",
                "FUN_08009358",
                "FUN_08009698",
                "FUN_08009a80",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080095a8": {
            "entrypoint": "0x080095a8",
            "current_name": "calculate_output_size_080095a8",
            "code": "\nundefined4\ncalculateOutputSize_080095a8(undefined4 inputParam,uint *inputArray,uint *outputArray,undefined4 param4,code *processData)\n\n{\n  int loopCounter;\n  int processResult;\n  uint maxSize;\n  uint tempSize;\n  bool isTrue;\n  \n  maxSize = inputArray[4];\n  if ((int)inputArray[4] < (int)inputArray[2]) {\n    maxSize = inputArray[2];\n  }\n  *outputArray = maxSize;\n  if (*(char *)((int)inputArray + 0x43) != '\\0') {\n    *outputArray = maxSize + 1;\n  }\n  if ((int)(*inputArray << 0x1a) < 0) {\n    *outputArray = *outputArray + 2;\n  }\n  if ((*inputArray & 6) == 0) {\n    for (loopCounter = 0; loopCounter < (int)(inputArray[3] - *outputArray); loopCounter = loopCounter + 1) {\n      processResult = (*processData)(inputParam,param4,(int)inputArray + 0x19,1);\n      if (processResult == -1) {\n        return 0xffffffff;\n      }\n    }\n  }\n  maxSize = (uint)*(byte *)((int)inputArray + 0x43);\n  if (maxSize != 0) {\n    maxSize = 1;\n  }\n  tempSize = maxSize;\n  if ((int)(*inputArray << 0x1a) < 0) {\n    *(undefined *)((int)inputArray + maxSize + 0x43) = 0x30;\n    tempSize = maxSize + 2;\n    *(undefined *)((int)inputArray + maxSize + 0x44) = *(undefined *)((int)inputArray + 0x45);\n  }\n  loopCounter = (*processData)(inputParam,param4,(int)inputArray + 0x43,tempSize);\n  if (loopCounter != -1) {\n    maxSize = inputArray[3];\n    isTrue = (*inputArray & 6) != 4;\n    if (isTrue) {\n      maxSize = 0;\n    }\n    tempSize = 0;\n    if (!isTrue) {\n      maxSize = maxSize - *outputArray;\n    }\n    if (!isTrue) {\n      maxSize = maxSize & ~((int)maxSize >> 0x1f);\n    }\n    if ((int)inputArray[4] < (int)inputArray[2]) {\n      maxSize = maxSize + (inputArray[2] - inputArray[4]);\n    }\n    while( true ) {\n      if (maxSize == tempSize) {\n        return 0;\n      }\n      loopCounter = (*processData)(inputParam,param4,(int)inputArray + 0x1a,1);\n      if (loopCounter == -1) break;\n      tempSize = tempSize + 1;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080095a8": "calculate_output_size_080095a8",
                "param_1": "inputParam",
                "param_2": "inputArray",
                "param_3": "outputArray",
                "param_4": "param4",
                "param_5": "processData",
                "iVar1": "loopCounter",
                "iVar2": "processResult",
                "uVar3": "maxSize",
                "uVar4": "tempSize",
                "bVar5": "isTrue"
            },
            "calling": [
                "FUN_08009698"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009698": {
            "entrypoint": "0x08009698",
            "current_name": "format_and_output_08009698",
            "code": "\nuint format_and_output_08009698(undefined4 input_value,uint *output_value,undefined4 param_length,code *output_function,uint **param_buffer)\n\n{\n  byte byte_value;\n  int i;\n  uint *ptr_value;\n  int j;\n  char *hex_digits;\n  uint base;\n  uint **ppuVar7;\n  char **ppcVar8;\n  uint num_value;\n  uint temp_value;\n  char *output_ptr;\n  char *format_ptr;\n  uint local_variables [2];\n  \n  byte_value = *(byte *)(output_value + 6);\n  format_ptr = (char *)((int)output_value + 0x43);\n  if (byte_value != 0x6e) {\n    if (byte_value < 0x6f) {\n      if (byte_value != 99) {\n        if (byte_value < 100) {\n          if (byte_value == 0) goto LAB_08009852;\n          if (byte_value != 0x58) goto LAB_080096c8;\n          *(undefined *)((int)output_value + 0x45) = 0x58;\n          hex_digits = \"0123456789ABCDEF\";\nLAB_080097e2:\n          base = *output_value;\n          ptr_value = *param_buffer;\n          *param_buffer = ptr_value + 1;\n          if (((base & 0x80) == 0) && ((int)(base << 0x19) < 0)) {\n            num_value = (uint)*(ushort *)ptr_value;\n          }\n          else {\n            num_value = *ptr_value;\n          }\n          if ((int)(base << 0x1f) < 0) {\n            *output_value = base | 0x20;\n          }\n          if (num_value == 0) {\n            *output_value = *output_value & 0xffffffdf;\n          }\n          base = 0x10;\nLAB_08009778:\n          *(undefined *)((int)output_value + 0x43) = 0;\n        }\n        else {\n          if ((byte_value != 100) && (byte_value != 0x69)) goto LAB_080096c8;\n          num_value = *output_value;\n          ptr_value = *param_buffer;\n          if ((num_value & 0x80) == 0) {\n            *param_buffer = ptr_value + 1;\n            if ((num_value & 0x40) == 0) goto LAB_080096e8;\n            num_value = (uint)(short)*(ushort *)ptr_value;\n          }\n          else {\n            *param_buffer = ptr_value + 1;\nLAB_080096e8:\n            num_value = *ptr_value;\n          }\n          if ((int)num_value < 0) {\n            num_value = -num_value;\n            *(undefined *)((int)output_value + 0x43) = 0x2d;\n          }\n          hex_digits = \"0123456789ABCDEF\";\n          base = 10;\n        }\n        temp_value = output_value[1];\n        output_value[2] = temp_value;\n        output_ptr = format_ptr;\n        if ((int)temp_value < 0) {\n          if (num_value != 0) goto LAB_08009816;\nLAB_080098c4:\n          *(char *)((int)output_value + 0x42) = *hex_digits;\n          output_ptr = (char *)((int)output_value + 0x42);\n        }\n        else {\n          *output_value = *output_value & 0xfffffffb;\n          if (num_value == 0) {\n            if (temp_value != 0) goto LAB_080098c4;\n          }\n          else {\nLAB_08009816:\n            do {\n              temp_value = num_value / base;\n              output_ptr = output_ptr + -1;\n              *output_ptr = hex_digits[num_value - base * temp_value];\n              num_value = temp_value;\n            } while (temp_value != 0);\n          }\n        }\n        if (((base == 8) && ((int)(*output_value << 0x1f) < 0)) && ((int)output_value[1] <= (int)output_value[4]))\n        {\n          output_ptr[-1] = '0';\n          output_ptr = output_ptr + -1;\n        }\n        output_value[4] = (int)format_ptr - (int)output_ptr;\n        format_ptr = output_ptr;\n        goto LAB_080097be;\n      }\n      ptr_value = *param_buffer;\n      *param_buffer = ptr_value + 1;\n      *(char *)((int)output_value + 0x42) = (char)*ptr_value;\nLAB_08009728:\n      format_ptr = (char *)((int)output_value + 0x42);\n      num_value = 1;\n    }\n    else {\n      if (byte_value != 0x73) {\n        if (byte_value < 0x74) {\n          if (byte_value == 0x6f) {\nLAB_0800974e:\n            num_value = *output_value;\n            ptr_value = *param_buffer;\n            if ((num_value & 0x80) == 0) {\n              *param_buffer = ptr_value + 1;\n              if ((num_value & 0x40) == 0) goto LAB_0800975c;\n              num_value = (uint)*(ushort *)ptr_value;\n            }\n            else {\n              *param_buffer = ptr_value + 1;\nLAB_0800975c:\n              num_value = *ptr_value;\n            }\n            if (byte_value == 0x6f) {\n              base = 8;\n            }\n            else {\n              base = 10;\n            }\n            hex_digits = \"0123456789ABCDEF\";\n            goto LAB_08009778;\n          }\n          if (byte_value == 0x70) {\n            *output_value = *output_value | 0x20;\nLAB_0800970e:\n            hex_digits = \"0123456789abcdef\";\n            *(undefined *)((int)output_value + 0x45) = 0x78;\n            goto LAB_080097e2;\n          }\n        }\n        else {\n          if (byte_value == 0x75) goto LAB_0800974e;\n          if (byte_value == 0x78) goto LAB_0800970e;\n        }\nLAB_080096c8:\n        *(byte *)((int)output_value + 0x42) = byte_value;\n        goto LAB_08009728;\n      }\n      ppcVar8 = (char **)*param_buffer;\n      *param_buffer = (uint *)(ppcVar8 + 1);\n      format_ptr = *ppcVar8;\n      i = FUN_08009f2c(format_ptr,0,output_value[1]);\n      if (i != 0) {\n        output_value[1] = i - (int)format_ptr;\n      }\n      num_value = output_value[1];\n    }\n    output_value[4] = num_value;\n    *(undefined *)((int)output_value + 0x43) = 0;\n    goto LAB_080097be;\n  }\n  num_value = *output_value;\n  ppuVar7 = (uint **)*param_buffer;\n  base = output_value[5];\n  if ((num_value & 0x80) == 0) {\n    *param_buffer = (uint *)(ppuVar7 + 1);\n    ptr_value = *ppuVar7;\n    if ((num_value & 0x40) == 0) goto LAB_0800983e;\n    *(short *)ptr_value = (short)base;\n  }\n  else {\n    *param_buffer = (uint *)(ppuVar7 + 1);\n    ptr_value = *ppuVar7;\nLAB_0800983e:\n    *ptr_value = base;\n  }\nLAB_08009852:\n  output_value[4] = 0;\nLAB_080097be:\n  i = FUN_080095a8(input_value,output_value,local_variables,param_length,output_function);\n  if ((i == -1) || (i = (*output_function)(input_value,param_length,format_ptr,output_value[4]), i == -1)) {\nLAB_080097d2:\n    num_value = 0xffffffff;\n  }\n  else {\n    if ((int)(*output_value << 0x1e) < 0) {\n      for (i = 0; i < (int)(output_value[3] - local_variables[0]); i = i + 1) {\n        j = (*output_function)(input_value,param_length,(int)output_value + 0x19,1);\n        if (j == -1) goto LAB_080097d2;\n      }\n    }\n    num_value = output_value[3];\n    if ((int)output_value[3] < (int)local_variables[0]) {\n      num_value = local_variables[0];\n    }\n  }\n  return num_value;\n}\n\n",
            "renaming": {
                "FUN_08009698": "format_and_output_08009698",
                "param_1": "input_value",
                "param_2": "output_value",
                "param_3": "param_length",
                "param_4": "output_function",
                "param_5": "param_buffer",
                "bVar1": "byte_value",
                "iVar2": "i",
                "puVar3": "ptr_value",
                "iVar4": "j",
                "pcVar5": "hex_digits",
                "uVar6": "base",
                "uVar9": "num_value",
                "uVar10": "temp_value",
                "pcVar11": "output_ptr",
                "pcVar12": "format_ptr",
                "local_24": "local_variables"
            },
            "calling": [
                "FUN_0800937c"
            ],
            "called": [
                "FUN_08009f2c",
                "FUN_080095a8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080098d8": {
            "entrypoint": "0x080098d8",
            "current_name": "initialize_function_080098d8",
            "code": "\nvoid initializeFunction_080098d8(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  int dataPointer;\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  undefined4 temp4;\n  \n  dataPointer = DAT_20000090;\n  temp1 = input1;\n  temp2 = input2;\n  temp3 = input3;\n  temp4 = input4;\n  if ((DAT_20000090 != 0) && (*(int *)(DAT_20000090 + 0x18) == 0)) {\n    FUN_08009d50(DAT_20000090);\n  }\n  FUN_0800937c(dataPointer,*(undefined4 *)(dataPointer + 8),input1,&temp2,temp1,&temp2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080098d8": "initialize_function_080098d8",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "dataPointer",
                "uVar2": "temp1",
                "uStack_c": "temp2",
                "uStack_8": "temp3",
                "uStack_4": "temp4"
            },
            "calling": [
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08007544",
                "FUN_08007594",
                "FUN_080075dc"
            ],
            "called": [
                "FUN_0800937c",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009908": {
            "entrypoint": "0x08009908",
            "current_name": "validate_and_process_data_08009908",
            "code": "\nint validate_and_process_data_08009908(int data_length,uint max_length)\n\n{\n  undefined4 constant_value;\n  int result;\n  uint data_check;\n  \n  constant_value = DAT_20000090;\n  if (data_length != 0) {\n    if (max_length == 0) {\n      FUN_080091d8();\n      result = 0;\n    }\n    else {\n      data_check = FUN_0800a154();\n      result = data_length;\n      if ((data_check < max_length) && (result = FUN_08009270(constant_value,max_length), result != 0)) {\n        FUN_080091b0(result,data_length,max_length);\n        FUN_080091d8(constant_value,data_length);\n      }\n    }\n    return result;\n  }\n  result = FUN_08009270(DAT_20000090,max_length,max_length,&DAT_20000090);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009908": "validate_and_process_data_08009908",
                "param_1": "data_length",
                "param_2": "max_length",
                "uVar1": "constant_value",
                "iVar2": "result",
                "uVar3": "data_check"
            },
            "calling": [
                "FUN_080027f0",
                "FUN_08002acc",
                "FUN_0800288c"
            ],
            "called": [
                "FUN_080091d8",
                "FUN_0800a154",
                "FUN_080091b0",
                "FUN_08009270"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009918": {
            "entrypoint": "0x08009918",
            "current_name": "update_parameter_if_needed_08009918",
            "code": "\nvoid updateParameterIfNeeded_08009918(int *result,undefined4 input)\n\n{\n  int returnValue;\n  \n  DAT_20000a38 = 0;\n  returnValue = FUN_08008804(input);\n  if ((returnValue == -1) && (DAT_20000a38 != 0)) {\n    *result = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009918": "update_parameter_if_needed_08009918",
                "param_1": "result",
                "param_2": "input",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08009270"
            ],
            "called": [
                "FUN_08008804"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009938": {
            "entrypoint": "0x08009938",
            "current_name": "find_character_08009938",
            "code": "\nchar * find_character_08009938(char *string,char character)\n\n{\n  char *current_char;\n  \n  do {\n    current_char = string;\n    if (*current_char == '\\0') {\n      if (character != '\\0') {\n        current_char = (char *)0x0;\n      }\n      return current_char;\n    }\n    string = current_char + 1;\n  } while (character != *current_char);\n  return current_char;\n}\n\n",
            "renaming": {
                "FUN_08009938": "find_character_08009938",
                "param_1": "string",
                "param_2": "character",
                "pcVar1": "current_char"
            },
            "calling": [
                "FUN_0800997e"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009954": {
            "entrypoint": "0x08009954",
            "current_name": "copy_string_with_padding_08009954",
            "code": "\nvoid copyStringWithPadding_08009954(char *destination,char *source,int length)\n\n{\n  char currentChar;\n  int remainingLength;\n  char *destinationPointer;\n  \n  do {\n    destinationPointer = destination;\n    remainingLength = length;\n    if (remainingLength == 0) {\n      return;\n    }\n    currentChar = *source;\n    destination = destinationPointer + 1;\n    *destinationPointer = currentChar;\n    source = source + 1;\n    length = remainingLength + -1;\n  } while (currentChar != '\\0');\n  for (; destination != destinationPointer + remainingLength; destination = destination + 1) {\n    *destination = '\\0';\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009954": "copy_string_with_padding_08009954",
                "param_1": "destination",
                "param_2": "source",
                "param_3": "length",
                "cVar1": "currentChar",
                "iVar2": "remainingLength",
                "pcVar3": "destinationPointer"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800997e": {
            "entrypoint": "0x0800997e",
            "current_name": "find_last_occurrence_0800997e",
            "code": "\nint find_last_occurrence_0800997e(int start_index,int length,undefined4 param_3,undefined4 param_4)\n\n{\n  int last_occurrence;\n  int previous_occurrence;\n  \n  if (length != 0) {\n    previous_occurrence = 0;\n    while (last_occurrence = FUN_08009938(start_index,length,param_3,start_index,param_4), last_occurrence != 0) {\n      start_index = last_occurrence + 1;\n      previous_occurrence = last_occurrence;\n    }\n    return previous_occurrence;\n  }\n  previous_occurrence = FUN_08009938();\n  return previous_occurrence;\n}\n\n",
            "renaming": {
                "FUN_0800997e": "find_last_occurrence_0800997e",
                "param_1": "start_index",
                "param_2": "length",
                "iVar1": "last_occurrence",
                "iVar2": "previous_occurrence"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [
                "FUN_08009938"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080099a4": {
            "entrypoint": "0x080099a4",
            "current_name": "find_substring_080099a4",
            "code": "\nchar * find_substring_080099a4(char *string,char *substring)\n\n{\n  char *current_char;\n  char *temp_char1;\n  char *temp_char2;\n  \n  if (*string == '\\0') {\n    if (*substring != '\\0') {\n      string = (char *)0x0;\n    }\n    return string;\n  }\n  do {\n    current_char = string;\n    if (*current_char == '\\0') {\n      return (char *)0x0;\n    }\n    temp_char2 = substring + -1;\n    temp_char1 = current_char + -1;\n    do {\n      temp_char2 = temp_char2 + 1;\n      if (*temp_char2 == '\\0') {\n        return current_char;\n      }\n      temp_char1 = temp_char1 + 1;\n      string = current_char + 1;\n    } while (*temp_char1 == *temp_char2);\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080099a4": "find_substring_080099a4",
                "param_1": "string",
                "param_2": "substring",
                "pcVar1": "current_char",
                "pcVar2": "temp_char1",
                "pcVar3": "temp_char2"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009a80": {
            "entrypoint": "0x08009a80",
            "current_name": "process_data_08009a80",
            "code": "\nuint process_data_08009a80(undefined4 *output_param,undefined4 *input_param)\n\n{\n  int data_address;\n  uint result;\n  ushort flags;\n  \n  data_address = DAT_20000090;\n  if ((DAT_20000090 != 0) && (*(int *)(DAT_20000090 + 0x18) == 0)) {\n    FUN_08009d50(DAT_20000090);\n  }\n  if (input_param == &DAT_0800aba4) {\n    input_param = *(undefined4 **)(data_address + 4);\n  }\n  else if (input_param == (undefined4 *)&DAT_0800abc4) {\n    input_param = *(undefined4 **)(data_address + 8);\n  }\n  else if (input_param == (undefined4 *)&DAT_0800ab84) {\n    input_param = *(undefined4 **)(data_address + 0xc);\n  }\n  flags = *(ushort *)(input_param + 3);\n  result = (uint)flags;\n  if (-1 < (int)(result << 0x1c)) {\n    if (-1 < (int)(result << 0x1b)) {\n      *output_param = 9;\n      goto LAB_08009ab0;\n    }\n    if ((int)(result << 0x1d) < 0) {\n      if ((undefined4 *)input_param[0xd] != (undefined4 *)0x0) {\n        if ((undefined4 *)input_param[0xd] != input_param + 0x11) {\n          FUN_080091d8(output_param);\n        }\n        input_param[0xd] = 0;\n      }\n      *(ushort *)(input_param + 3) = *(ushort *)(input_param + 3) & 0xffdb;\n      input_param[1] = 0;\n      *input_param = input_param[4];\n    }\n    *(ushort *)(input_param + 3) = *(ushort *)(input_param + 3) | 8;\n  }\n  if ((input_param[4] == 0) && ((*(ushort *)(input_param + 3) & 0x280) != 0x200)) {\n    FUN_08009eac(output_param,input_param);\n  }\n  flags = *(ushort *)(input_param + 3);\n  result = flags & 1;\n  if ((flags & 1) == 0) {\n    if (-1 < (int)((uint)flags << 0x1e)) {\n      result = input_param[5];\n    }\n    input_param[2] = result;\n  }\n  else {\n    input_param[2] = 0;\n    input_param[6] = -input_param[5];\n  }\n  if (input_param[4] == 0) {\n    flags = *(ushort *)(input_param + 3);\n    result = (int)(short)flags & 0x80;\n    if (result != 0) {\nLAB_08009ab0:\n      *(ushort *)(input_param + 3) = flags | 0x40;\n      return 0xffffffff;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009a80": "process_data_08009a80",
                "param_1": "output_param",
                "param_2": "input_param",
                "iVar1": "data_address",
                "uVar2": "result",
                "uVar3": "flags"
            },
            "calling": [
                "FUN_0800937c",
                "FUN_0800932c"
            ],
            "called": [
                "FUN_080091d8",
                "FUN_08009eac",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009b5c": {
            "entrypoint": "0x08009b5c",
            "current_name": "process_data_08009b5c",
            "code": "\nvoid processData_08009b5c(void)\n\n{\n  uint *pointer1;\n  int var2;\n  int *dataPointer1;\n  int *dataPointer2;\n  uint uintValue;\n  ushort ushortValue;\n  int var7;\n  code *functionPointer;\n  int var9;\n  uint uintValue2;\n  code *jumptable;\n  bool boolValue;\n  undefined8 returnValue;\n  \n  FUN_08009fe8(6);\n  jumptable = (code *)0x8009b6b;\n  returnValue = FUN_08008868(1);\n  dataPointer1 = (int *)((ulonglong)returnValue >> 0x20);\n  pointer1 = (uint *)returnValue;\n  ushortValue = *(ushort *)(dataPointer1 + 3);\n  uintValue = (uint)ushortValue;\n  if ((int)(uintValue << 0x1c) < 0) {\n    var2 = dataPointer1[4];\n    if (var2 != 0) {\n      var7 = uintValue << 0x1e;\n      boolValue = var7 != 0;\n      if (boolValue) {\n        var7 = 0;\n      }\n      var9 = *dataPointer1;\n      if (!boolValue) {\n        var7 = dataPointer1[5];\n      }\n      *dataPointer1 = var2;\n      dataPointer1[2] = var7;\n      for (var9 = var9 - var2; 0 < var9; var9 = var9 - var7) {\n        var7 = (*(code *)dataPointer1[10])(pointer1,dataPointer1[8],var2,var9);\n        if (var7 < 1) {\n          ushortValue = *(ushort *)(dataPointer1 + 3);\n          goto LAB_08009c62;\n        }\n        var2 = var2 + var7;\n      }\n    }\n  }\n  else if (((0 < dataPointer1[1]) || (0 < dataPointer1[0x10])) &&\n          (functionPointer = (code *)dataPointer1[0xb], functionPointer != (code *)0x0)) {\n    uintValue2 = *pointer1;\n    *pointer1 = 0;\n    if ((ushortValue & 0x1000) == 0) {\n      var2 = (*functionPointer)(pointer1,dataPointer1[8],uintValue & 0x1000,1);\n      if ((var2 == -1) && (uintValue = *pointer1, uintValue != 0)) {\n        if ((uintValue != 0x1d) && (uintValue != 0x16)) {\n          *(ushort *)(dataPointer1 + 3) = *(ushort *)(dataPointer1 + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c2c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          (*jumptable)();\n          return;\n        }\n        *pointer1 = uintValue2;\n        goto LAB_08009b86;\n      }\n    }\n    else {\n      var2 = dataPointer1[0x15];\n    }\n    if (((int)((uint)*(ushort *)(dataPointer1 + 3) << 0x1d) < 0) &&\n       (var2 = var2 - dataPointer1[1], dataPointer1[0xd] != 0)) {\n      var2 = var2 - dataPointer1[0x10];\n    }\n    var2 = (*(code *)dataPointer1[0xb])(pointer1,dataPointer1[8],var2,0);\n    ushortValue = *(ushort *)(dataPointer1 + 3);\n    if ((var2 == -1) &&\n       ((0x1d < *pointer1 || (-1 < (int)((0x20400001U >> (*pointer1 & 0xff)) << 0x1f))))) {\nLAB_08009c62:\n      *(ushort *)(dataPointer1 + 3) = ushortValue | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c6c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jumptable)(0xffffffff);\n      return;\n    }\n    dataPointer1[1] = 0;\n    *dataPointer1 = dataPointer1[4];\n    if (((int)((uint)ushortValue << 0x13) < 0) && ((var2 != -1 || (*pointer1 == 0)))) {\n      dataPointer1[0x15] = var2;\n    }\n    dataPointer2 = (int *)dataPointer1[0xd];\n    *pointer1 = uintValue2;\n    if (dataPointer2 != (int *)0x0) {\n      if (dataPointer2 != dataPointer1 + 0x11) {\n        FUN_080091d8(pointer1);\n      }\n      dataPointer1[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08009c02. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jumptable)();\n      return;\n    }\n  }\nLAB_08009b86:\n                    /* WARNING: Could not recover jumptable at 0x08009b88. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumptable)(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009b5c": "process_data_08009b5c",
                "piVar3": "dataPointer1",
                "puVar1": "pointer1",
                "uVar6": "ushortValue",
                "uVar5": "uintValue",
                "iVar2": "var2",
                "iVar7": "var7",
                "piVar4": "dataPointer2",
                "iVar9": "var9",
                "uVar10": "uintValue2",
                "bVar11": "boolValue",
                "pcVar8": "functionPointer",
                "UNRECOVERED_JUMPTABLE_00": "jumptable",
                "uVar12": "returnValue"
            },
            "calling": [
                "FUN_080090cc",
                "FUN_0800a18c"
            ],
            "called": [
                "FUN_080091d8",
                "FUN_08008868",
                "FUN_08009fe8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009c7c": {
            "entrypoint": "0x08009c7c",
            "current_name": "process_data_08009c7c",
            "code": "\nundefined4 processData_08009c7c(uint *dataBuffer,int *paramConfig)\n\n{\n  undefined4 returnValue;\n  int length;\n  int *tempPtr;\n  uint tempValue;\n  ushort flag;\n  int tempVar;\n  undefined4 unaff_r4;\n  undefined4 unaff_r5;\n  code *callback;\n  int remainingLength;\n  uint temp1;\n  code *jumpTable;\n  bool isZero;\n  \n  if (paramConfig[4] != 0) {\n    if ((dataBuffer != (uint *)0x0) && (paramConfig[6] == 0)) {\n      FUN_08009d50();\n    }\n    if (paramConfig == &DAT_0800aba4) {\n      paramConfig = (int *)dataBuffer[1];\n    }\n    else if (paramConfig == (int *)&DAT_0800abc4) {\n      paramConfig = (int *)dataBuffer[2];\n    }\n    else if (paramConfig == (int *)&DAT_0800ab84) {\n      paramConfig = (int *)dataBuffer[3];\n    }\n    if (*(short *)(paramConfig + 3) != 0) {\n      flag = *(ushort *)(paramConfig + 3);\n      tempValue = (uint)flag;\n      if ((int)(tempValue << 0x1c) < 0) {\n        length = paramConfig[4];\n        if (length != 0) {\n          tempVar = tempValue << 0x1e;\n          isZero = tempVar != 0;\n          if (isZero) {\n            tempVar = 0;\n          }\n          remainingLength = *paramConfig;\n          if (!isZero) {\n            tempVar = paramConfig[5];\n          }\n          *paramConfig = length;\n          paramConfig[2] = tempVar;\n          for (remainingLength = remainingLength - length; 0 < remainingLength; remainingLength = remainingLength - tempVar) {\n            tempVar = (*(code *)paramConfig[10])(dataBuffer,paramConfig[8],length,remainingLength,unaff_r4,unaff_r5);\n            if (tempVar < 1) {\n              flag = *(ushort *)(paramConfig + 3);\n              goto LAB_08009c62;\n            }\n            length = length + tempVar;\n          }\n        }\n      }\n      else if (((0 < paramConfig[1]) || (0 < paramConfig[0x10])) &&\n              (callback = (code *)paramConfig[0xb], callback != (code *)0x0)) {\n        temp1 = *dataBuffer;\n        *dataBuffer = 0;\n        if ((flag & 0x1000) == 0) {\n          length = (*callback)(dataBuffer,paramConfig[8],tempValue & 0x1000,1);\n          if ((length == -1) && (tempValue = *dataBuffer, tempValue != 0)) {\n            if ((tempValue != 0x1d) && (tempValue != 0x16)) {\n              *(ushort *)(paramConfig + 3) = *(ushort *)(paramConfig + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c2c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n              returnValue = (*jumpTable)();\n              return returnValue;\n            }\n            *dataBuffer = temp1;\n            goto LAB_08009b86;\n          }\n        }\n        else {\n          length = paramConfig[0x15];\n        }\n        if (((int)((uint)*(ushort *)(paramConfig + 3) << 0x1d) < 0) &&\n           (length = length - paramConfig[1], paramConfig[0xd] != 0)) {\n          length = length - paramConfig[0x10];\n        }\n        length = (*(code *)paramConfig[0xb])(dataBuffer,paramConfig[8],length,0);\n        flag = *(ushort *)(paramConfig + 3);\n        if ((length == -1) &&\n           ((0x1d < *dataBuffer || (-1 < (int)((0x20400001U >> (*dataBuffer & 0xff)) << 0x1f))))) {\nLAB_08009c62:\n          *(ushort *)(paramConfig + 3) = flag | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c6c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          returnValue = (*jumpTable)(0xffffffff);\n          return returnValue;\n        }\n        paramConfig[1] = 0;\n        *paramConfig = paramConfig[4];\n        if (((int)((uint)flag << 0x13) < 0) && ((length != -1 || (*dataBuffer == 0)))) {\n          paramConfig[0x15] = length;\n        }\n        tempPtr = (int *)paramConfig[0xd];\n        *dataBuffer = temp1;\n        if (tempPtr != (int *)0x0) {\n          if (tempPtr != paramConfig + 0x11) {\n            FUN_080091d8(dataBuffer);\n          }\n          paramConfig[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08009c02. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          returnValue = (*jumpTable)();\n          return returnValue;\n        }\n      }\nLAB_08009b86:\n                    /* WARNING: Could not recover jumptable at 0x08009b88. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      returnValue = (*jumpTable)(0);\n      return returnValue;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08009c7c": "process_data_08009c7c",
                "param_1": "dataBuffer",
                "param_2": "paramConfig",
                "uVar1": "returnValue",
                "iVar2": "length",
                "piVar3": "tempPtr",
                "uVar4": "tempValue",
                "uVar5": "flag",
                "iVar6": "tempVar",
                "pcVar7": "callback",
                "iVar8": "remainingLength",
                "uVar9": "temp1",
                "bVar10": "isZero",
                "UNRECOVERED_JUMPTABLE_00": "jumpTable",
                "param_2[4]": "paramConfig[4]",
                "param_1[6]": "paramConfig[6]"
            },
            "calling": [
                "FUN_0800932c"
            ],
            "called": [
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009cdc": {
            "entrypoint": "0x08009cdc",
            "current_name": "initialize_data_structure_08009cdc",
            "code": "\nvoid initializeDataStructure_08009cdc(undefined4 *dataStructure,undefined2 value1,undefined2 value2)\n\n{\n  *dataStructure = 0;\n  dataStructure[1] = 0;\n  dataStructure[2] = 0;\n  *(undefined2 *)(dataStructure + 3) = value1;\n  dataStructure[0x19] = 0;\n  *(undefined2 *)((int)dataStructure + 0xe) = value2;\n  dataStructure[4] = 0;\n  dataStructure[5] = 0;\n  dataStructure[6] = 0;\n  FUN_080091c6(dataStructure + 0x17,0,8);\n  dataStructure[8] = dataStructure;\n  dataStructure[9] = 0x800a021;\n  dataStructure[10] = 0x800a043;\n  dataStructure[0xb] = 0x800a07b;\n  dataStructure[0xc] = &LAB_0800a09e_1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009cdc": "initialize_data_structure_08009cdc",
                "param_1": "dataStructure",
                "param_2": "value1",
                "param_3": "value2"
            },
            "calling": [
                "FUN_08009d50"
            ],
            "called": [
                "FUN_080091c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009d24": {
            "entrypoint": "0x08009d24",
            "current_name": "initialize_data_structure_08009d24",
            "code": "\nundefined4 * initializeDataStructure_08009d24(undefined4 inputData,int size)\n\n{\n  undefined4 *dataPtr;\n  int offset;\n  \n  offset = (size + -1) * 0x68;\n  dataPtr = (undefined4 *)FUN_08009270(inputData,offset + 0x74);\n  if (dataPtr != (undefined4 *)0x0) {\n    *dataPtr = 0;\n    dataPtr[1] = size;\n    dataPtr[2] = dataPtr + 3;\n    FUN_080091c6(dataPtr + 3,0,offset + 0x68);\n  }\n  return dataPtr;\n}\n\n",
            "renaming": {
                "FUN_08009d24": "initialize_data_structure_08009d24",
                "param_1": "inputData",
                "param_2": "size",
                "puVar1": "dataPtr",
                "iVar2": "offset"
            },
            "calling": [
                "FUN_08009db0"
            ],
            "called": [
                "FUN_080091c6",
                "FUN_08009270"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009d50": {
            "entrypoint": "0x08009d50",
            "current_name": "initialize_data_08009d50",
            "code": "\nvoid initializeData_08009d50(undefined4 *dataPtr)\n\n{\n  undefined4 result;\n  undefined4 *pointer;\n  \n  if (dataPtr[6] == 0) {\n    dataPtr[0x12] = 0;\n    dataPtr[0x13] = 0;\n    dataPtr[0x14] = 0;\n    pointer = &DAT_20000094;\n    dataPtr[10] = &LAB_08009cd0_1;\n    if (dataPtr == &DAT_20000094) {\n      pointer = (undefined4 *)0x1;\n    }\n    if (dataPtr == &DAT_20000094) {\n      dataPtr[6] = pointer;\n    }\n    result = FUN_08009db0();\n    dataPtr[1] = result;\n    result = FUN_08009db0(dataPtr);\n    dataPtr[2] = result;\n    result = FUN_08009db0(dataPtr);\n    dataPtr[3] = result;\n    FUN_08009cdc(dataPtr[1],4,0);\n    FUN_08009cdc(dataPtr[2],9,1);\n    FUN_08009cdc(dataPtr[3],0x12,2);\n    dataPtr[6] = 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009d50": "initialize_data_08009d50",
                "param_1": "dataPtr",
                "uVar1": "result",
                "puVar2": "pointer"
            },
            "calling": [
                "FUN_08009c7c",
                "FUN_080098d8",
                "FUN_0800937c",
                "FUN_0800932c",
                "FUN_08009db0",
                "FUN_08009a80"
            ],
            "called": [
                "FUN_08009cdc",
                "FUN_08009db0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009db0": {
            "entrypoint": "0x08009db0",
            "current_name": "initialize_data_08009db0",
            "code": "\nint * initializeData_08009db0(undefined4 *errorCode,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int *innerLoopIndex;\n  int *dataPointer;\n  int **dataListPointer;\n  \n  if (DAT_200000ac == 0) {\n    FUN_08009d50(&DAT_20000094);\n  }\n  dataListPointer = (int **)&DAT_200000dc;\n  do {\n    dataPointer = dataListPointer[2];\n    innerLoopIndex = dataListPointer[1];\n    while (innerLoopIndex = (int *)((int)innerLoopIndex + -1), -1 < (int)innerLoopIndex) {\n      if (*(short *)(dataPointer + 3) == 0) {\n        *(undefined2 *)((int)dataPointer + 0xe) = 0xffff;\n        dataPointer[0x19] = 0;\n        *(undefined2 *)(dataPointer + 3) = 1;\n        *dataPointer = 0;\n        dataPointer[2] = 0;\n        dataPointer[1] = 0;\n        dataPointer[4] = 0;\n        dataPointer[5] = 0;\n        dataPointer[6] = 0;\n        FUN_080091c6(dataPointer + 0x17,0,8,1,param4);\n        dataPointer[0xd] = 0;\n        dataPointer[0xe] = 0;\n        dataPointer[0x12] = 0;\n        dataPointer[0x13] = 0;\n        return dataPointer;\n      }\n      dataPointer = dataPointer + 0x1a;\n    }\n    if (*dataListPointer == (int *)0x0) {\n      innerLoopIndex = (int *)FUN_08009d24(errorCode,4);\n      *dataListPointer = innerLoopIndex;\n      if (innerLoopIndex == (int *)0x0) {\n        *errorCode = 0xc;\n        return (int *)0x0;\n      }\n    }\n    dataListPointer = (int **)*dataListPointer;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08009db0": "initialize_data_08009db0",
                "param_1": "errorCode",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "piVar1": "innerLoopIndex",
                "piVar2": "dataPointer",
                "ppiVar3": "dataListPointer"
            },
            "calling": [
                "FUN_08009d50"
            ],
            "called": [
                "FUN_080091c6",
                "FUN_08009d24",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009e64": {
            "entrypoint": "0x08009e64",
            "current_name": "check_file_permissions_08009e64",
            "code": "\nundefined4 check_file_permissions_08009e64(undefined4 file_descriptor,int file_header,undefined4 *output_value,uint *output_flag)\n\n{\n  int result;\n  undefined4 permission_flag;\n  undefined temp_array [4];\n  uint file_permissions;\n  \n  if ((*(short *)(file_header + 0xe) < 0) ||\n     (result = FUN_0800a0ec(file_descriptor,(int)*(short *)(file_header + 0xe),temp_array), result < 0)) {\n    *output_flag = 0;\n    if ((int)((uint)*(ushort *)(file_header + 0xc) << 0x18) < 0) {\n      permission_flag = 0x40;\n      goto LAB_08009ea4;\n    }\n  }\n  else {\n    *output_flag = (uint)((file_permissions & 0xf000) == 0x2000);\n  }\n  permission_flag = 0x400;\nLAB_08009ea4:\n  *output_value = permission_flag;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08009e64": "check_file_permissions_08009e64",
                "param_1": "file_descriptor",
                "param_2": "file_header",
                "param_3": "output_value",
                "param_4": "output_flag",
                "iVar1": "result",
                "uVar2": "permission_flag",
                "auStack_4c": "temp_array",
                "local_48": "file_permissions"
            },
            "calling": [
                "FUN_08009eac"
            ],
            "called": [
                "FUN_0800a0ec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009eac": {
            "entrypoint": "0x08009eac",
            "current_name": "process_params_08009eac",
            "code": "\nvoid processParams_08009eac(int inputParam,int *paramArray)\n\n{\n  ushort resultVar;\n  int returnValue;\n  int localVar1;\n  int *localVar2;\n  \n  if (-1 < (int)((uint)*(ushort *)(paramArray + 3) << 0x1e)) {\n    localVar1 = inputParam;\n    localVar2 = paramArray;\n    resultVar = FUN_08009e64(inputParam,paramArray,&localVar1,&localVar2);\n    returnValue = FUN_08009270(inputParam,localVar1);\n    if (returnValue != 0) {\n      *(undefined **)(inputParam + 0x28) = &LAB_08009cd0_1;\n      *paramArray = returnValue;\n      *(ushort *)(paramArray + 3) = *(ushort *)(paramArray + 3) | 0x80;\n      paramArray[4] = returnValue;\n      paramArray[5] = localVar1;\n      if ((localVar2 != (int *)0x0) &&\n         (returnValue = FUN_0800a110(inputParam,(int)*(short *)((int)paramArray + 0xe)), returnValue != 0)) {\n        *(ushort *)(paramArray + 3) = *(ushort *)(paramArray + 3) & 0xfffc | 1;\n      }\n      *(ushort *)(paramArray + 3) = resultVar | *(ushort *)(paramArray + 3);\n      return;\n    }\n    if ((int)(short)*(ushort *)(paramArray + 3) << 0x16 < 0) {\n      return;\n    }\n    *(ushort *)(paramArray + 3) = *(ushort *)(paramArray + 3) & 0xfffc | 2;\n  }\n  *paramArray = (int)paramArray + 0x47;\n  paramArray[4] = (int)paramArray + 0x47;\n  paramArray[5] = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009eac": "process_params_08009eac",
                "param_1": "inputParam",
                "param_2": "paramArray",
                "uVar1": "resultVar",
                "iVar2": "returnValue",
                "local_18": "localVar1",
                "local_14": "localVar2"
            },
            "calling": [
                "FUN_08009a80"
            ],
            "called": [
                "FUN_08009270",
                "FUN_0800a110",
                "FUN_08009e64"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009f2c": {
            "entrypoint": "0x08009f2c",
            "current_name": "find_character_08009f2c",
            "code": "\nchar * find_character_08009f2c(char *string,char target,int length)\n\n{\n  char *current_char;\n  char *next_char;\n  \n  current_char = string;\n  do {\n    next_char = current_char;\n    if (next_char == string + length) {\n      return (char *)0x0;\n    }\n    current_char = next_char + 1;\n  } while (*next_char != target);\n  return next_char;\n}\n\n",
            "renaming": {
                "FUN_08009f2c": "find_character_08009f2c",
                "param_1": "string",
                "param_2": "target",
                "param_3": "length",
                "pcVar1": "current_char",
                "pcVar2": "next_char"
            },
            "calling": [
                "FUN_0800937c",
                "FUN_08009698"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009f48": {
            "entrypoint": "0x08009f48",
            "current_name": "FUNC_08009f48",
            "code": "\nvoid FUNC_08009f48(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009f48": "FUNC_08009f48"
            },
            "calling": [
                "FUN_080091d8",
                "FUN_08009270"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08009f4a": {
            "entrypoint": "0x08009f4a",
            "current_name": "FUNC_08009f4a",
            "code": "\nvoid FUNC_08009f4a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009f4a": "FUNC_08009f4a"
            },
            "calling": [
                "FUN_080091d8",
                "FUN_08009270"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08009fe8": {
            "entrypoint": "0x08009fe8",
            "current_name": "execute_function_08009fe8",
            "code": "\nint executeFunction_08009fe8(uint functionIndex)\n\n{\n  int *functionTable;\n  undefined4 result;\n  int functionOffset;\n  code *functionPointer;\n  undefined4 unaff_r4;\n  undefined4 unaff_r5;\n  undefined4 in_lr;\n  undefined4 *functionTablePtr;\n  \n  functionTable = DAT_20000090;\n  functionTablePtr = &DAT_20000090;\n  if (0x1f < functionIndex) {\n    *DAT_20000090 = 0x16;\n    return -1;\n  }\n  functionOffset = DAT_20000090[0x11];\n  if ((functionOffset != 0) && (functionPointer = *(code **)(functionOffset + functionIndex * 4), functionPointer != (code *)0x0)) {\n    if (functionPointer != (code *)0x1) {\n      if (functionPointer == (code *)0xffffffff) {\n        *DAT_20000090 = 0x16;\n        return 1;\n      }\n      *(undefined4 *)(functionOffset + functionIndex * 4) = 0;\n      (*functionPointer)(functionIndex);\n    }\n    return 0;\n  }\n  result = thunk_FUN_0800887c(DAT_20000090);\n  DAT_20000a38 = 0;\n  functionOffset = FUN_0800886c(result,functionIndex,functionIndex,0,functionTablePtr,unaff_r4,unaff_r5,in_lr);\n  if ((functionOffset == -1) && (DAT_20000a38 != 0)) {\n    *functionTable = DAT_20000a38;\n  }\n  return functionOffset;\n}\n\n",
            "renaming": {
                "FUN_08009fe8": "execute_function_08009fe8",
                "param_1": "functionIndex",
                "piVar1": "functionTable",
                "uVar2": "result",
                "iVar3": "functionOffset",
                "pcVar4": "functionPointer",
                "puVar5": "functionTablePtr"
            },
            "calling": [
                "FUN_08009b5c"
            ],
            "called": [
                "thunk_FUN_0800887c",
                "FUN_0800886c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_0800887c": {
            "entrypoint": "0x0800a01c",
            "current_name": "initialize_thunk_0800887c",
            "code": "\nvoid initialize_thunk_0800887c(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "thunk_FUN_0800887c": "initialize_thunk_0800887c",
                "undefined4": "void"
            },
            "calling": [
                "FUN_08009fe8"
            ],
            "called": [
                "FUN_0800887c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a020": {
            "entrypoint": "0x0800a020",
            "current_name": "update_data_0800a020",
            "code": "\nvoid updateData_0800a020(undefined4 dataPointer,int dataOffset)\n\n{\n  int result;\n  uint newValue;\n  bool positiveResult;\n  \n  result = FUN_0800a168(dataPointer,(int)*(short *)(dataOffset + 0xe));\n  positiveResult = -1 < result;\n  if (positiveResult) {\n    newValue = *(int *)(dataOffset + 0x54) + result;\n  }\n  else {\n    newValue = *(ushort *)(dataOffset + 0xc) & 0xffffefff;\n  }\n  if (positiveResult) {\n    *(uint *)(dataOffset + 0x54) = newValue;\n  }\n  if (!positiveResult) {\n    *(short *)(dataOffset + 0xc) = (short)newValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a020": "update_data_0800a020",
                "param_1": "dataPointer",
                "param_2": "dataOffset",
                "iVar1": "result",
                "uVar2": "newValue",
                "bVar3": "positiveResult"
            },
            "calling": [],
            "called": [
                "FUN_0800a168"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a042": {
            "entrypoint": "0x0800a042",
            "current_name": "process_data_0800a042",
            "code": "\nvoid processData_0800a042(int *outputBuffer,int inputBuffer,undefined4 paramA,undefined4 paramB)\n\n{\n  int returnValue;\n  undefined4 unusedVar1;\n  undefined4 unusedVar2;\n  undefined4 unusedVar3;\n  \n  if ((int)((uint)*(ushort *)(inputBuffer + 0xc) << 0x17) < 0) {\n    FUN_0800a130(outputBuffer,(int)*(short *)(inputBuffer + 0xe),0,2);\n  }\n  *(ushort *)(inputBuffer + 0xc) = *(ushort *)(inputBuffer + 0xc) & 0xefff;\n  DAT_20000a38 = 0;\n  returnValue = FUN_0800885c((int)*(short *)(inputBuffer + 0xe),paramA,paramB,paramB,paramB,unusedVar1,\n                       unusedVar2,unusedVar3);\n  if ((returnValue == -1) && (DAT_20000a38 != 0)) {\n    *outputBuffer = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a042": "process_data_0800a042",
                "param_1": "outputBuffer",
                "param_2": "inputBuffer",
                "param_3": "paramA",
                "param_4": "paramB",
                "iVar1": "returnValue",
                "unaff_r4": "unusedVar1",
                "unaff_r5": "unusedVar2",
                "in_lr": "unusedVar3"
            },
            "calling": [],
            "called": [
                "FUN_0800885c",
                "FUN_0800a130"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a07a": {
            "entrypoint": "0x0800a07a",
            "current_name": "update_flags_0800a07a",
            "code": "\nvoid updateFlags_0800a07a(undefined4 arg1,int arg2)\n\n{\n  int returnValue;\n  ushort modifiedValue;\n  bool isNegative;\n  \n  returnValue = FUN_0800a130(arg1,(int)*(short *)(arg2 + 0xe));\n  isNegative = returnValue == -1;\n  if (isNegative) {\n    modifiedValue = *(ushort *)(arg2 + 0xc) & 0xefff;\n  }\n  else {\n    *(int *)(arg2 + 0x54) = returnValue;\n    modifiedValue = *(ushort *)(arg2 + 0xc) | 0x1000;\n  }\n  if (isNegative) {\n    *(ushort *)(arg2 + 0xc) = modifiedValue;\n  }\n  if (!isNegative) {\n    *(ushort *)(arg2 + 0xc) = modifiedValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a07a": "update_flags_0800a07a",
                "param_1": "arg1",
                "param_2": "arg2",
                "iVar1": "returnValue",
                "uVar2": "modifiedValue",
                "bVar3": "isNegative"
            },
            "calling": [],
            "called": [
                "FUN_0800a130"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a0ec": {
            "entrypoint": "0x0800a0ec",
            "current_name": "update_param_with_value_0800a0ec",
            "code": "\nvoid updateParamWithValue_0800a0ec(int *outputParam,undefined4 inputParam1,undefined4 inputParam2,undefined4 inputParam3)\n\n{\n  int result;\n  \n  DAT_20000a38 = 0;\n  result = FUN_08008846(inputParam1,inputParam2,inputParam2,0,inputParam3);\n  if ((result == -1) && (DAT_20000a38 != 0)) {\n    *outputParam = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a0ec": "update_param_with_value_0800a0ec",
                "param_1": "outputParam",
                "param_2": "inputParam1",
                "param_3": "inputParam2",
                "param_4": "inputParam3",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08009e64"
            ],
            "called": [
                "FUN_08008846"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a110": {
            "entrypoint": "0x0800a110",
            "current_name": "initialize_and_assign_0800a110",
            "code": "\nvoid initializeAndAssign_0800a110(int *output,undefined4 input)\n\n{\n  int result;\n  \n  DAT_20000a38 = 0;\n  result = FUN_08008850(input);\n  if ((result == -1) && (DAT_20000a38 != 0)) {\n    *output = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a110": "initialize_and_assign_0800a110",
                "param_1": "output",
                "param_2": "input",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08009eac"
            ],
            "called": [
                "FUN_08008850"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a130": {
            "entrypoint": "0x0800a130",
            "current_name": "process_data_0800a130",
            "code": "\nvoid processData_0800a130(int *output,undefined4 data1,undefined4 data2,undefined4 data3)\n\n{\n  int result;\n  \n  DAT_20000a38 = 0;\n  result = FUN_08008854(data1,data2,data3,data3,data3);\n  if ((result == -1) && (DAT_20000a38 != 0)) {\n    *output = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a130": "process_data_0800a130",
                "param_1": "output",
                "param_2": "data1",
                "param_3": "data2",
                "param_4": "data3",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800a07a",
                "FUN_0800a042"
            ],
            "called": [
                "FUN_08008854"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a154": {
            "entrypoint": "0x0800a154",
            "current_name": "calculate_sum_0800a154",
            "code": "\nint calculateSum_0800a154(undefined4 result,int array)\n\n{\n  int index;\n  \n  index = *(int *)(array + -4) + -4;\n  if (*(int *)(array + -4) < 0) {\n    index = index + *(int *)(array + index);\n  }\n  return index;\n}\n\n",
            "renaming": {
                "FUN_0800a154": "calculate_sum_0800a154",
                "param_1": "result",
                "param_2": "array",
                "iVar1": "index"
            },
            "calling": [
                "FUN_08009908"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a168": {
            "entrypoint": "0x0800a168",
            "current_name": "update_param_if_negative_0800a168",
            "code": "\nvoid updateParamIfNegative_0800a168(int *output,undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  int iVar1;\n  \n  DAT_20000a38 = 0;\n  iVar1 = FUN_08008858(input1,input2,input3,input3,input3);\n  if ((iVar1 == -1) && (DAT_20000a38 != 0)) {\n    *output = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a168": "update_param_if_negative_0800a168",
                "param_1": "output",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "input3"
            },
            "calling": [
                "FUN_0800a020"
            ],
            "called": [
                "FUN_08008858"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a18c": {
            "entrypoint": "0x0800a18c",
            "current_name": "update_flags_and_call_function_0800a18c",
            "code": "\nvoid updateFlagsAndCallFunction_0800a18c(void)\n\n{\n  code *functionPointer;\n  \n  functionPointer = updateFlagsAndCallFunction_0800a18c;\n  FUN_08009b5c();\n  if (-1 < DAT_200009c0 << 0x1f) {\n    DAT_200009c0 = 1;\n  }\n  if (-1 < DAT_200009bc << 0x1f) {\n    DAT_200009bc = 1;\n  }\n  if (-1 < DAT_200009b8 << 0x1f) {\n    DAT_200009b8 = 1;\n  }\n  if (-1 < DAT_200009b4 << 0x1f) {\n    DAT_200009b4 = 1;\n  }\n  if (-1 < DAT_200009b0 << 0x1f) {\n    DAT_200009b0 = 1;\n  }\n  if (-1 < DAT_200009ac << 0x1f) {\n    DAT_200009ac = 1;\n  }\n  if (-1 < DAT_200009a8 << 0x1f) {\n    DAT_200009a8 = 1;\n  }\n  if (-1 < DAT_200009a4 << 0x1f) {\n    DAT_200009a4 = 1;\n  }\n  if (-1 < DAT_200009a0 << 0x1f) {\n    DAT_200009a0 = 1;\n  }\n  if (-1 < DAT_2000099c << 0x1f) {\n    DAT_2000099c = 1;\n  }\n  if (-1 < DAT_20000998 << 0x1f) {\n    DAT_20000998 = 1;\n  }\n  if (-1 < DAT_20000994 << 0x1f) {\n    DAT_20000994 = 1;\n  }\n                    /* WARNING: Could not recover jumptable at 0x0800a224. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*functionPointer)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a18c": "update_flags_and_call_function_0800a18c",
                "UNRECOVERED_JUMPTABLE": "functionPointer"
            },
            "calling": [
                "FUN_08009084"
            ],
            "called": [
                "FUN_08009b5c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a424": {
            "entrypoint": "0x0800a424",
            "current_name": "FUNC_0800a424",
            "code": "\nvoid FUNC_0800a424(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a424": "FUNC_0800a424"
            },
            "calling": [
                "FUN_08009148",
                "FUN_0800010c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800a430": {
            "entrypoint": "0x0800a430",
            "current_name": "FUNC_0800a430",
            "code": "\nvoid FUNC_0800a430(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a430": "FUNC_0800a430"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        }
    },
    "used_tokens": 212000,
    "layers": [
        [
            "FUN_0800010c",
            "FUN_08000178",
            "FUN_08000188",
            "FUN_0800018c",
            "FUN_08000214",
            "FUN_0800021a",
            "FUN_08000488",
            "FUN_080004d4",
            "FUN_08000500",
            "FUN_08000588",
            "FUN_080005e0",
            "FUN_080005f8",
            "FUN_08000a64",
            "FUN_08000aec",
            "FUN_08000be8",
            "FUN_08000ef8",
            "FUN_08001b48",
            "FUN_08001bf8",
            "FUN_08001c08",
            "FUN_08001c18",
            "FUN_08001cd0",
            "FUN_080022f8",
            "FUN_08002400",
            "FUN_0800242c",
            "FUN_08002578",
            "FUN_08002580",
            "FUN_080025ac",
            "FUN_08002634",
            "FUN_08002644",
            "FUN_0800267c",
            "FUN_080026b0",
            "FUN_080026f8",
            "FUN_0800270c",
            "FUN_08002720",
            "FUN_080027f0",
            "FUN_0800288c",
            "FUN_0800291c",
            "FUN_08002948",
            "FUN_08002968",
            "FUN_08002a1c",
            "FUN_08002a26",
            "FUN_08002a30",
            "FUN_08002a58",
            "FUN_08002ac0",
            "FUN_08002acc",
            "FUN_08002b68",
            "FUN_08002c00",
            "FUN_08002c14",
            "FUN_08002c1e",
            "FUN_08002c2c",
            "FUN_08002ce0",
            "FUN_08002dbc",
            "FUN_08002ddc",
            "FUN_08002df6",
            "FUN_08002e26",
            "FUN_08002e44",
            "FUN_08002ec4",
            "FUN_08002ed2",
            "FUN_08002ef2",
            "FUN_08002efe",
            "FUN_08002f0a",
            "FUN_08002f14",
            "FUN_08002f1e",
            "FUN_08002f2c",
            "FUN_08002f84",
            "FUN_08002f94",
            "FUN_08002fa0",
            "FUN_08002fa8",
            "FUN_08002fba",
            "FUN_08002fc2",
            "FUN_08002fca",
            "FUN_08003002",
            "FUN_08003048",
            "FUN_0800307a",
            "FUN_08003106",
            "FUN_0800314e",
            "FUN_08003154",
            "FUN_08003158",
            "FUN_0800319e",
            "FUN_080031ce",
            "FUN_0800322c",
            "FUN_0800325a",
            "FUN_080032a2",
            "FUN_080032bc",
            "FUN_08003306",
            "FUN_08003346",
            "FUN_08003350",
            "FUN_08003366",
            "FUN_08003370",
            "FUN_08003376",
            "FUN_080033a8",
            "FUN_080033cc",
            "FUN_0800344a",
            "FUN_08003474",
            "FUN_080035b8",
            "FUN_080036a2",
            "FUN_080036ac",
            "FUN_080036d8",
            "FUN_08003724",
            "FUN_08003748",
            "FUN_08003760",
            "FUN_0800376c",
            "FUN_080038dc",
            "FUN_080038e4",
            "FUN_08003a1c",
            "FUN_08003a20",
            "FUN_08003aa0",
            "FUN_08003b8c",
            "FUN_08003bd8",
            "FUN_08003ce8",
            "FUN_08003de4",
            "FUN_08003e20",
            "FUN_08003f0c",
            "FUN_08003f30",
            "FUN_08003f94",
            "FUN_08003fb0",
            "FUN_08003fd8",
            "FUN_08004004",
            "FUN_08004024",
            "FUN_08004046",
            "FUN_08004050",
            "FUN_080040e8",
            "FUN_080042d4",
            "FUN_080042e2",
            "FUN_080042f0",
            "FUN_0800430c",
            "FUN_08004396",
            "FUN_080043a2",
            "FUN_0800457c",
            "FUN_0800459c",
            "FUN_080045c0",
            "FUN_08004728",
            "FUN_080047f4",
            "FUN_080048c8",
            "FUN_08004954",
            "FUN_080049e0",
            "FUN_08004a24",
            "FUN_08004a76",
            "FUN_08004ac2",
            "FUN_08004aec",
            "FUN_08004b82",
            "FUN_08004ccc",
            "FUN_08004d6c",
            "FUN_08004e3c",
            "FUN_08004f3c",
            "FUN_08005084",
            "FUN_08005188",
            "FUN_080052f0",
            "FUN_0800542a",
            "FUN_08005430",
            "FUN_08005434",
            "FUN_08005460",
            "FUN_08005840",
            "FUN_080058ac",
            "FUN_080058d2",
            "FUN_08005a1c",
            "FUN_08005a28",
            "FUN_08005a48",
            "FUN_08005a68",
            "FUN_08005aa4",
            "FUN_08005bb8",
            "FUN_08005cb4",
            "FUN_08005cec",
            "FUN_08005d48",
            "FUN_08005dac",
            "FUN_08005df4",
            "FUN_08005e2e",
            "FUN_08005e6e",
            "FUN_08005fe8",
            "FUN_08006060",
            "FUN_08006092",
            "FUN_080060c4",
            "FUN_08006128",
            "FUN_08006186",
            "FUN_08006262",
            "FUN_08006280",
            "FUN_080062f4",
            "FUN_08006390",
            "FUN_080063c0",
            "FUN_08006420",
            "FUN_0800643c",
            "FUN_08006460",
            "FUN_080064b0",
            "FUN_080064cc",
            "FUN_08006538",
            "FUN_080066e8",
            "FUN_0800674e",
            "FUN_080067ac",
            "FUN_0800688e",
            "FUN_080068d6",
            "FUN_08006932",
            "FUN_0800694c",
            "FUN_080069ec",
            "FUN_08006b1c",
            "FUN_08006b28",
            "FUN_08006b3e",
            "FUN_08006b5c",
            "FUN_08006b7c",
            "FUN_08006bb8",
            "FUN_08006c60",
            "FUN_08006c7c",
            "FUN_08006ca8",
            "FUN_08006d24",
            "FUN_08006d80",
            "FUN_08006e68",
            "FUN_08007110",
            "FUN_08007118",
            "FUN_080071e4",
            "FUN_0800723c",
            "FUN_08007246",
            "FUN_08007258",
            "FUN_080072d8",
            "FUN_080072f0",
            "FUN_080072fa",
            "FUN_08007306",
            "FUN_08007320",
            "FUN_08007332",
            "FUN_0800734a",
            "FUN_0800735a",
            "FUN_08007376",
            "FUN_0800738a",
            "FUN_080073ae",
            "FUN_080073c0",
            "FUN_080073e8",
            "FUN_080073ec",
            "FUN_08007438",
            "FUN_080074e0",
            "FUN_08007544",
            "FUN_08007594",
            "FUN_080075dc",
            "FUN_08007648",
            "FUN_080076e0",
            "FUN_08007708",
            "FUN_08007710",
            "FUN_08007718",
            "FUN_0800771c",
            "FUN_08007736",
            "FUN_08007744",
            "FUN_0800774a",
            "FUN_08007750",
            "FUN_080077b0",
            "FUN_08007e74",
            "FUN_08007ede",
            "FUN_08007f0e",
            "FUN_08007f78",
            "FUN_08007f7c",
            "FUN_08007f8e",
            "FUN_08007fa0",
            "FUN_08007ff0",
            "FUN_08008020",
            "FUN_08008078",
            "FUN_080084b0",
            "FUN_08008500",
            "FUN_080085b8",
            "FUN_080085dc",
            "FUN_08008600",
            "FUN_0800863c",
            "FUN_08008694",
            "FUN_080086e8",
            "FUN_0800870c",
            "FUN_08008730",
            "FUN_08008804",
            "FUN_08008840",
            "FUN_08008846",
            "FUN_08008850",
            "FUN_08008854",
            "FUN_08008858",
            "FUN_0800885c",
            "FUN_08008868",
            "FUN_0800886c",
            "FUN_0800887c",
            "FUN_08008880",
            "FUN_080088e0",
            "FUN_08008990",
            "FUN_08008a24",
            "FUN_08008a6c",
            "FUN_08008abc",
            "FUN_08008afa",
            "FUN_08008b66",
            "FUN_08008c20",
            "FUN_08008c44",
            "FUN_08008d00",
            "FUN_08008d18",
            "FUN_08008d30",
            "FUN_08008d8c",
            "FUN_08008df8",
            "FUN_08008e14",
            "FUN_08008ef4",
            "FUN_08008f0e",
            "FUN_08008f1c",
            "FUN_08008f3c",
            "FUN_08008f78",
            "FUN_08009084",
            "FUN_08009094",
            "FUN_080090c2",
            "FUN_080090cc",
            "FUN_08009108",
            "FUN_08009124",
            "FUN_08009148",
            "FUN_08009190",
            "FUN_080091a0",
            "FUN_080091b0",
            "FUN_080091c6",
            "FUN_080091d8",
            "FUN_08009270",
            "FUN_0800932c",
            "FUN_08009358",
            "FUN_0800937c",
            "FUN_080095a8",
            "FUN_08009698",
            "FUN_080098d8",
            "FUN_08009908",
            "FUN_08009918",
            "FUN_08009938",
            "FUN_08009954",
            "FUN_0800997e",
            "FUN_080099a4",
            "FUN_08009a80",
            "FUN_08009b5c",
            "FUN_08009c7c",
            "FUN_08009cdc",
            "FUN_08009d24",
            "FUN_08009d50",
            "FUN_08009db0",
            "FUN_08009e64",
            "FUN_08009eac",
            "FUN_08009f2c",
            "FUN_08009fe8",
            "thunk_FUN_0800887c",
            "FUN_0800a020",
            "FUN_0800a042",
            "FUN_0800a07a",
            "FUN_0800a0ec",
            "FUN_0800a110",
            "FUN_0800a130",
            "FUN_0800a154",
            "FUN_0800a168",
            "FUN_0800a18c"
        ]
    ],
    "locked_functions": []
}