{
    "functions": {
        "FUN_08000110": {
            "entrypoint": "0x08000110",
            "current_name": "initialize_flag_08000110",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800011c) */\n\nundefined4 initializeFlag_08000110(undefined4 input)\n\n{\n  if ((char)DAT_20000228 == '\\0') {\n    DAT_20000228._0_1_ = '\\x01';\n  }\n  return input;\n}\n\n",
            "renaming": {
                "FUN_08000110": "initialize_flag_08000110",
                "param_1": "input"
            },
            "calling": [],
            "called": [
                "FUN_080072d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000134": {
            "entrypoint": "0x08000134",
            "current_name": "concatenate_44_08000134",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800013a) */\n\nundefined8 concatenate_44_08000134(undefined4 first_param,undefined4 second_param)\n\n{\n  return CONCAT44(second_param,first_param);\n}\n\n",
            "renaming": {
                "FUN_08000134": "concatenate_44_08000134",
                "param_1": "first_param",
                "param_2": "second_param"
            },
            "calling": [
                "FUN_08004fb4"
            ],
            "called": [
                "FUN_080072d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000150": {
            "entrypoint": "0x08000150",
            "current_name": "find_end_of_string_08000150",
            "code": "\nchar * find_end_of_string_08000150(char *string)\n\n{\n  char current_char;\n  char *next_char;\n  char *current_ptr;\n  \n  current_ptr = string;\n  do {\n    next_char = current_ptr + 1;\n    current_char = *current_ptr;\n    current_ptr = next_char;\n  } while (current_char != '\\0');\n  return next_char + (-1 - (int)string);\n}\n\n",
            "renaming": {
                "FUN_08000150": "find_end_of_string_08000150",
                "param_1": "string",
                "cVar1": "current_char",
                "pcVar2": "next_char",
                "pcVar3": "current_ptr"
            },
            "calling": [
                "FUN_08004c8c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000168": {
            "entrypoint": "0x08000168",
            "current_name": "calculate_bitwise_operations_08000168",
            "code": "\nulonglong calculateBitwiseOperations_08000168(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int temp1;\n  byte temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  uint temp7;\n  int temp8;\n  uint temp9;\n  uint temp10;\n  uint temp11;\n  uint temp12;\n  bool condition1;\n  bool condition2;\n  bool condition3;\n  \n  temp6 = input4 ^ 0x80000000;\n  temp9 = input2 << 1;\n  input4 = input4 << 1;\n  condition1 = ((input2 ^ temp6) & 0x7fffffff) == 0;\n  condition2 = condition1 && input1 == input3;\n  if (!condition1 || input1 != input3) {\n    condition2 = (temp9 | input1) == 0;\n  }\n  if (!condition2) {\n    condition2 = (input4 | input3) == 0;\n  }\n  temp8 = (int)temp9 >> 0x15;\n  if (!condition2) {\n    condition2 = temp8 == -1;\n  }\n  temp1 = (int)input4 >> 0x15;\n  if (!condition2) {\n    condition2 = temp1 == -1;\n  }\n  if (condition2) {\n    if (temp8 == -1 || temp1 == -1) {\n      temp9 = temp6;\n      temp11 = input3;\n      if (temp8 == -1) {\n        temp9 = input2;\n        temp11 = input1;\n      }\n      if (temp8 != -1 || temp1 != -1) {\n        input3 = temp11;\n        temp6 = temp9;\n      }\n      condition2 = (temp11 | temp9 << 0xc) == 0;\n      if (condition2) {\n        condition2 = (input3 | temp6 << 0xc) == 0;\n      }\n      if (condition2) {\n        condition2 = temp9 == temp6;\n      }\n      if (!condition2) {\n        temp9 = temp9 | 0x80000;\n      }\n      return CONCAT44(temp9,temp11);\n    }\n    if (((input2 ^ temp6) & 0x7fffffff) != 0 || input1 != input3) {\n      if ((temp9 | input1) == 0) {\n        input1 = input3;\n        input2 = temp6;\n      }\n      return CONCAT44(input2,input1);\n    }\n    if (input2 != temp6) {\n      return 0;\n    }\n    if (temp9 >> 0x15 == 0) {\n      condition2 = (input1 & 0x80000000) != 0;\n      temp6 = input2 * 2 + (uint)condition2;\n      if (CARRY4(input2,input2) || CARRY4(input2 * 2,(uint)condition2)) {\n        temp6 = temp6 | 0x80000000;\n      }\n      return CONCAT44(temp6,input1 << 1);\n    }\n    if (temp9 < 0xffc00000) {\n      return CONCAT44(input2 + 0x100000,input1);\n    }\n    input2 = input2 & 0x80000000;\nLAB_080003ac:\n    return (ulonglong)(input2 | 0x7ff00000) << 0x20;\n  }\n  temp9 = temp9 >> 0x15;\n  input4 = input4 >> 0x15;\n  temp11 = input4 - temp9;\n  condition2 = temp11 != 0;\n  if (input4 < temp9) {\n    temp11 = -temp11;\n  }\n  temp10 = input1;\n  temp7 = input2;\n  if (condition2 && temp9 <= input4) {\n    temp9 = temp9 + temp11;\n    temp10 = input3;\n    temp7 = temp6;\n    input3 = input1;\n    temp6 = input2;\n  }\n  if (0x36 < temp11) {\n    return CONCAT44(temp7,temp10);\n  }\n  temp4 = temp7 & 0xfffff | 0x100000;\n  if ((temp7 & 0x80000000) != 0) {\n    condition2 = temp10 != 0;\n    temp10 = -temp10;\n    temp4 = -temp4 - (uint)condition2;\n  }\n  temp7 = temp6 & 0xfffff | 0x100000;\n  if ((temp6 & 0x80000000) != 0) {\n    condition2 = input3 != 0;\n    input3 = -input3;\n    temp7 = -temp7 - (uint)condition2;\n  }\n  if (temp9 == temp11) {\n    temp7 = temp7 ^ 0x100000;\n    if (temp9 == 0) {\n      temp4 = temp4 ^ 0x100000;\n      temp9 = 1;\n    }\n    else {\n      temp11 = temp11 - 1;\n    }\n  }\n  temp6 = -temp11 + 0x20;\n  if ((int)temp11 < 0x21) {\n    temp12 = input3 << (temp6 & 0xff);\n    input3 = input3 >> (temp11 & 0xff);\n    temp3 = temp10 + input3;\n    temp5 = temp7 << (temp6 & 0xff);\n    temp6 = temp3 + temp5;\n    temp4 = temp4 + CARRY4(temp10,input3) + ((int)temp7 >> (temp11 & 0xff)) +\n            (uint)CARRY4(temp3,temp5);\n  }\n  else {\n    temp12 = temp7 << (-temp11 + 0x40 & 0xff);\n    if (input3 != 0) {\n      temp12 = temp12 | 2;\n    }\n    temp7 = (int)temp7 >> (temp11 - 0x20 & 0xff);\n    temp6 = temp10 + temp7;\n    temp4 = temp4 + ((int)temp7 >> 0x1f) + (uint)CARRY4(temp10,temp7);\n  }\n  input2 = temp4 & 0x80000000;\n  temp11 = temp4;\n  if ((int)temp4 < 0) {\n    condition2 = temp12 == 0;\n    temp12 = -temp12;\n    temp11 = -temp6;\n    temp6 = -(uint)!condition2 - temp6;\n    temp11 = -(uint)(condition2 <= temp11) - temp4;\n  }\n  if (0xfffff < temp11) {\n    temp10 = temp9 - 1;\n    if (0x1fffff < temp11) {\n      temp10 = temp11 & 1;\n      temp11 = temp11 >> 1;\n      temp2 = (byte)temp6;\n      temp6 = (uint)(temp10 != 0) << 0x1f | temp6 >> 1;\n      temp12 = (uint)(temp2 & 1) << 0x1f | temp12 >> 1;\n      temp10 = temp9;\n      if (0xffbfffff < temp9 * 0x200000) goto LAB_080003ac;\n    }\nLAB_08000278:\n    condition2 = 0x7fffffff < temp12;\n    if (temp12 == 0x80000000) {\n      condition2 = (temp6 & 1) != 0;\n    }\n    return CONCAT44(temp11 + temp10 * 0x100000 + (uint)CARRY4(temp6,(uint)condition2) | input2,\n                    temp6 + condition2);\n  }\n  condition1 = (temp12 & 0x80000000) != 0;\n  temp12 = temp12 << 1;\n  temp10 = temp6 * 2;\n  condition2 = CARRY4(temp6,temp6);\n  temp6 = temp6 * 2 + (uint)condition1;\n  temp11 = temp11 * 2 + (uint)(condition2 || CARRY4(temp10,(uint)condition1));\n  temp10 = temp9 - 2;\n  if ((temp11 & 0x100000) != 0) goto LAB_08000278;\n  temp7 = temp6;\n  temp9 = temp11;\n  if (temp11 == 0) {\n    temp7 = 0;\n    temp9 = temp6;\n  }\n  temp8 = LZCOUNT(temp9);\n  if (temp11 == 0) {\n    temp8 = temp8 + 0x20;\n  }\n  temp11 = temp8 - 0xb;\n  condition3 = SBORROW4(temp11,0x20);\n  temp6 = temp8 - 0x2b;\n  condition2 = (int)temp6 < 0;\n  condition1 = temp6 == 0;\n  if ((int)temp11 < 0x20) {\n    condition3 = SCARRY4(temp6,0xc);\n    temp8 = temp8 + -0x1f;\n    condition2 = temp8 < 0;\n    condition1 = temp8 == 0;\n    temp6 = temp11;\n    if (!condition1 && condition2 == condition3) {\n      temp7 = temp9 << (temp11 & 0xff);\n      temp9 = temp9 >> (0xcU - temp8 & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (condition1 || condition2 != condition3) {\n    temp12 = 0x20 - temp6;\n  }\n  temp9 = temp9 << (temp6 & 0xff);\n  if (condition1 || condition2 != condition3) {\n    temp9 = temp9 | temp7 >> (temp12 & 0xff);\n  }\n  if (condition1 || condition2 != condition3) {\n    temp7 = temp7 << (temp6 & 0xff);\n  }\nLAB_080002f0:\n  if ((int)temp11 <= (int)temp10) {\n    return CONCAT44(temp9 + (temp10 - temp11) * 0x100000 | input2,temp7);\n  }\n  temp6 = ~(temp10 - temp11);\n  if ((int)temp6 < 0x1f) {\n    temp8 = temp6 - 0x13;\n    if (temp8 != 0 && temp8 < 0 == SCARRY4(temp6 - 0x1f,0xc)) {\n      return CONCAT44(temp4,temp7 >> (0x20 - (0xcU - temp8) & 0xff) | temp9 << (0xcU - temp8 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    temp6 = temp6 + 1;\n    return CONCAT44(input2 | temp9 >> (temp6 & 0xff),\n                    temp7 >> (temp6 & 0xff) | temp9 << (0x20 - temp6 & 0xff));\n  }\n  return CONCAT44(temp4,temp9 >> (temp6 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_08000168": "calculate_bitwise_operations_08000168",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "temp1",
                "bVar2": "temp2",
                "uVar3": "temp3",
                "uVar4": "temp4",
                "uVar5": "temp5",
                "uVar6": "temp6",
                "uVar7": "temp7",
                "iVar8": "temp8",
                "uVar9": "temp9",
                "uVar10": "temp10",
                "uVar11": "temp11",
                "uVar12": "temp12",
                "bVar13": "condition1",
                "bVar14": "condition2",
                "bVar15": "condition3"
            },
            "calling": [
                "FUN_08006d68",
                "FUN_08005c70",
                "FUN_080070b0",
                "FUN_08006c0c",
                "FUN_0800411c",
                "FUN_08006228",
                "FUN_08006070"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800016c": {
            "entrypoint": "0x0800016c",
            "current_name": "calculate_0800016c",
            "code": "\nulonglong calculate_0800016c(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int temp1;\n  byte temp2;\n  uint mask1;\n  uint mask2;\n  uint var1;\n  int var2;\n  uint var3;\n  uint var4;\n  uint var5;\n  uint var6;\n  uint var7;\n  uint var8;\n  bool bool1;\n  bool bool2;\n  bool bool3;\n  \n  var3 = input2 << 1;\n  var5 = input4 << 1;\n  bool1 = ((input2 ^ input4) & 0x7fffffff) == 0;\n  bool2 = bool1 && input1 == input3;\n  if (!bool1 || input1 != input3) {\n    bool2 = (var3 | input1) == 0;\n  }\n  if (!bool2) {\n    bool2 = (var5 | input3) == 0;\n  }\n  var2 = (int)var3 >> 0x15;\n  if (!bool2) {\n    bool2 = var2 == -1;\n  }\n  temp1 = (int)var5 >> 0x15;\n  if (!bool2) {\n    bool2 = temp1 == -1;\n  }\n  if (bool2) {\n    if (var2 == -1 || temp1 == -1) {\n      var5 = input4;\n      var3 = input3;\n      if (var2 == -1) {\n        var5 = input2;\n        var3 = input1;\n      }\n      if (var2 != -1 || temp1 != -1) {\n        input3 = var3;\n        input4 = var5;\n      }\n      bool2 = (var3 | var5 << 0xc) == 0;\n      if (bool2) {\n        bool2 = (input3 | input4 << 0xc) == 0;\n      }\n      if (bool2) {\n        bool2 = var5 == input4;\n      }\n      if (!bool2) {\n        var5 = var5 | 0x80000;\n      }\n      return CONCAT44(var5,var3);\n    }\n    if (((input2 ^ input4) & 0x7fffffff) != 0 || input1 != input3) {\n      if ((var3 | input1) == 0) {\n        input1 = input3;\n        input2 = input4;\n      }\n      return CONCAT44(input2,input1);\n    }\n    if (input2 != input4) {\n      return 0;\n    }\n    if (var3 >> 0x15 == 0) {\n      bool2 = (input1 & 0x80000000) != 0;\n      var5 = input2 * 2 + (uint)bool2;\n      if (CARRY4(input2,input2) || CARRY4(input2 * 2,(uint)bool2)) {\n        var5 = var5 | 0x80000000;\n      }\n      return CONCAT44(var5,input1 << 1);\n    }\n    if (var3 < 0xffc00000) {\n      return CONCAT44(input2 + 0x100000,input1);\n    }\n    input2 = input2 & 0x80000000;\nLAB_080003ac:\n    return (ulonglong)(input2 | 0x7ff00000) << 0x20;\n  }\n  var3 = var3 >> 0x15;\n  var5 = var5 >> 0x15;\n  var6 = var5 - var3;\n  bool2 = var6 != 0;\n  if (var5 < var3) {\n    var6 = -var6;\n  }\n  var4 = input1;\n  var1 = input2;\n  if (bool2 && var3 <= var5) {\n    var3 = var3 + var6;\n    var4 = input3;\n    var1 = input4;\n    input3 = input1;\n    input4 = input2;\n  }\n  if (0x36 < var6) {\n    return CONCAT44(var1,var4);\n  }\n  var5 = var1 & 0xfffff | 0x100000;\n  if ((var1 & 0x80000000) != 0) {\n    bool2 = var4 != 0;\n    var4 = -var4;\n    var5 = -var5 - (uint)bool2;\n  }\n  var1 = input4 & 0xfffff | 0x100000;\n  if ((input4 & 0x80000000) != 0) {\n    bool2 = input3 != 0;\n    input3 = -input3;\n    var1 = -var1 - (uint)bool2;\n  }\n  if (var3 == var6) {\n    var1 = var1 ^ 0x100000;\n    if (var3 == 0) {\n      var5 = var5 ^ 0x100000;\n      var3 = 1;\n    }\n    else {\n      var6 = var6 - 1;\n    }\n  }\n  var8 = -var6 + 0x20;\n  if ((int)var6 < 0x21) {\n    var7 = input3 << (var8 & 0xff);\n    input3 = input3 >> (var6 & 0xff);\n    mask1 = var4 + input3;\n    mask2 = var1 << (var8 & 0xff);\n    var8 = mask1 + mask2;\n    var5 = var5 + CARRY4(var4,input3) + ((int)var1 >> (var6 & 0xff)) +\n            (uint)CARRY4(mask1,mask2);\n  }\n  else {\n    var7 = var1 << (-var6 + 0x40 & 0xff);\n    if (input3 != 0) {\n      var7 = var7 | 2;\n    }\n    var1 = (int)var1 >> (var6 - 0x20 & 0xff);\n    var8 = var4 + var1;\n    var5 = var5 + ((int)var1 >> 0x1f) + (uint)CARRY4(var4,var1);\n  }\n  input2 = var5 & 0x80000000;\n  var6 = var5;\n  if ((int)var5 < 0) {\n    bool2 = var7 == 0;\n    var7 = -var7;\n    var6 = -var8;\n    var8 = -(uint)!bool2 - var8;\n    var6 = -(uint)(bool2 <= var6) - var5;\n  }\n  if (0xfffff < var6) {\n    var4 = var3 - 1;\n    if (0x1fffff < var6) {\n      var5 = var6 & 1;\n      var6 = var6 >> 1;\n      temp2 = (byte)var8;\n      var8 = (uint)(var5 != 0) << 0x1f | var8 >> 1;\n      var7 = (uint)(temp2 & 1) << 0x1f | var7 >> 1;\n      var4 = var3;\n      if (0xffbfffff < var3 * 0x200000) goto LAB_080003ac;\n    }\nLAB_08000278:\n    bool2 = 0x7fffffff < var7;\n    if (var7 == 0x80000000) {\n      bool2 = (var8 & 1) != 0;\n    }\n    return CONCAT44(var6 + var4 * 0x100000 + (uint)CARRY4(var8,(uint)bool2) | input2,\n                    var8 + bool2);\n  }\n  bool1 = (var7 & 0x80000000) != 0;\n  var7 = var7 << 1;\n  var4 = var8 * 2;\n  bool2 = CARRY4(var8,var8);\n  var8 = var8 * 2 + (uint)bool1;\n  var6 = var6 * 2 + (uint)(bool2 || CARRY4(var4,(uint)bool1));\n  var4 = var3 - 2;\n  if ((var6 & 0x100000) != 0) goto LAB_08000278;\n  var1 = var8;\n  var3 = var6;\n  if (var6 == 0) {\n    var1 = 0;\n    var3 = var8;\n  }\n  var2 = LZCOUNT(var3);\n  if (var6 == 0) {\n    var2 = var2 + 0x20;\n  }\n  var8 = var2 - 0xb;\n  bool3 = SBORROW4(var8,0x20);\n  var6 = var2 - 0x2b;\n  bool2 = (int)var6 < 0;\n  bool1 = var6 == 0;\n  if ((int)var8 < 0x20) {\n    bool3 = SCARRY4(var6,0xc);\n    var2 = var2 + -0x1f;\n    bool2 = var2 < 0;\n    bool1 = var2 == 0;\n    var6 = var8;\n    if (!bool1 && bool2 == bool3) {\n      var1 = var3 << (var8 & 0xff);\n      var3 = var3 >> (0xcU - var2 & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (bool1 || bool2 != bool3) {\n    var7 = 0x20 - var6;\n  }\n  var3 = var3 << (var6 & 0xff);\n  if (bool1 || bool2 != bool3) {\n    var3 = var3 | var1 >> (var7 & 0xff);\n  }\n  if (bool1 || bool2 != bool3) {\n    var1 = var1 << (var6 & 0xff);\n  }\nLAB_080002f0:\n  if ((int)var8 <= (int)var4) {\n    return CONCAT44(var3 + (var4 - var8) * 0x100000 | input2,var1);\n  }\n  var6 = ~(var4 - var8);\n  if ((int)var6 < 0x1f) {\n    var2 = var6 - 0x13;\n    if (var2 != 0 && var2 < 0 == SCARRY4(var6 - 0x1f,0xc)) {\n      return CONCAT44(var5,var1 >> (0x20 - (0xcU - var2) & 0xff) | var3 << (0xcU - var2 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    var6 = var6 + 1;\n    return CONCAT44(input2 | var3 >> (var6 & 0xff),\n                    var1 >> (var6 & 0xff) | var3 << (0x20 - var6 & 0xff));\n  }\n  return CONCAT44(var5,var3 >> (var6 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800016c": "calculate_0800016c",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "temp1",
                "bVar2": "temp2",
                "uVar3": "mask1",
                "uVar4": "mask2",
                "uVar5": "var1",
                "iVar6": "var2",
                "uVar7": "var3",
                "uVar8": "var4",
                "uVar9": "var5",
                "uVar10": "var6",
                "uVar11": "var7",
                "uVar12": "var8",
                "bVar13": "bool1",
                "bVar14": "bool2",
                "bVar15": "bool3"
            },
            "calling": [
                "FUN_080071c0",
                "FUN_08006d68",
                "FUN_08005c70",
                "FUN_080070b0",
                "FUN_08006c0c",
                "FUN_08006228",
                "FUN_08006070"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000404": {
            "entrypoint": "0x08000404",
            "current_name": "reverse_bits_08000404",
            "code": "\nulonglong reverseBits_08000404(uint input)\n\n{\n  uint count;\n  uint absInput;\n  uint shiftAmount;\n  int leadingZeros;\n  uint finalShiftAmount;\n  uint signBit;\n  uint mask;\n  bool shouldShift;\n  bool isEqualZero;\n  bool isCarrySet;\n  \n  if (input == 0) {\n    return 0;\n  }\n  signBit = input & 0x80000000;\n  absInput = input;\n  if ((int)signBit < 0) {\n    absInput = -input;\n  }\n  count = 0;\n  leadingZeros = LZCOUNT(absInput);\n  finalShiftAmount = leadingZeros + 0x15;\n  isCarrySet = SBORROW4(finalShiftAmount,0x20);\n  shiftAmount = leadingZeros - 0xb;\n  shouldShift = (int)shiftAmount < 0;\n  isEqualZero = shiftAmount == 0;\n  if (finalShiftAmount < 0x20) {\n    isCarrySet = SCARRY4(shiftAmount,0xc);\n    shouldShift = false;\n    isEqualZero = leadingZeros + 1 == 0;\n    shiftAmount = finalShiftAmount;\n    if (!isEqualZero && isCarrySet == false) {\n      count = absInput << finalShiftAmount;\n      absInput = absInput >> (0xcU - (leadingZeros + 1) & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (isEqualZero || shouldShift != isCarrySet) {\n    mask = 0x20 - shiftAmount;\n  }\n  absInput = absInput << (shiftAmount & 0xff);\n  if (isEqualZero || shouldShift != isCarrySet) {\n    absInput = absInput | 0U >> (mask & 0xff);\n  }\n  if (isEqualZero || shouldShift != isCarrySet) {\n    count = 0 << (shiftAmount & 0xff);\n  }\nLAB_080002f0:\n  if (finalShiftAmount < 0x433) {\n    return CONCAT44(absInput + (0x432 - finalShiftAmount) * 0x100000 | signBit,count);\n  }\n  shiftAmount = ~(0x432 - finalShiftAmount);\n  if (0x1e < (int)shiftAmount) {\n    return CONCAT44(input,absInput >> (shiftAmount - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  leadingZeros = shiftAmount - 0x13;\n  if (leadingZeros == 0 || leadingZeros < 0 != SCARRY4(shiftAmount - 0x1f,0xc)) {\n    shiftAmount = shiftAmount + 1;\n    return CONCAT44(signBit | absInput >> (shiftAmount & 0xff),\n                    count >> (shiftAmount & 0xff) | absInput << (0x20 - shiftAmount & 0xff));\n  }\n  return CONCAT44(input,count >> (0x20 - (0xcU - leadingZeros) & 0xff) | absInput << (0xcU - leadingZeros & 0xff))\n         & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_08000404": "reverse_bits_08000404",
                "param_1": "input",
                "uVar1": "count",
                "uVar2": "absInput",
                "uVar3": "shiftAmount",
                "iVar4": "leadingZeros",
                "uVar5": "finalShiftAmount",
                "uVar6": "signBit",
                "in_r12": "mask",
                "bVar7": "shouldShift",
                "bVar8": "isEqualZero",
                "bVar9": "isCarrySet"
            },
            "calling": [
                "FUN_08006228"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000428": {
            "entrypoint": "0x08000428",
            "current_name": "reverse_bits_08000428",
            "code": "\nulonglong reverseBits_08000428(uint input,undefined4 var1,undefined4 var2,uint var3)\n\n{\n  uint bit31;\n  uint var4;\n  uint result_sub;\n  uint var6;\n  uint var7;\n  int var8;\n  uint var9;\n  uint bit24;\n  bool var10;\n  bool var11;\n  bool var12;\n  \n  var7 = input << 1;\n  var11 = var7 == 0;\n  bit31 = (uint)((input & 0x80000000) != 0) << 0x1f;\n  var6 = (uint)((int)var7 >> 3) >> 1;\n  result_sub = bit31 | var6;\n  input = input << 0x1d;\n  if (!var11) {\n    var3 = var7 & 0xff000000;\n    var11 = var3 == 0;\n  }\n  if (!var11) {\n    var11 = var3 == 0xff000000;\n  }\n  if (!var11) {\n    return CONCAT44(result_sub,input) ^ 0x3800000000000000;\n  }\n  if (var7 == 0 || var3 == 0xff000000) {\n    return CONCAT44(result_sub,input);\n  }\n  var4 = input;\n  var7 = var6;\n  if (var6 == 0) {\n    var4 = 0;\n    var7 = input;\n  }\n  var8 = LZCOUNT(var7);\n  if (var6 == 0) {\n    var8 = var8 + 0x20;\n  }\n  var9 = var8 - 0xb;\n  var12 = SBORROW4(var9,0x20);\n  var6 = var8 - 0x2b;\n  var11 = (int)var6 < 0;\n  var10 = var6 == 0;\n  if ((int)var9 < 0x20) {\n    var12 = SCARRY4(var6,0xc);\n    var8 = var8 + -0x1f;\n    var11 = var8 < 0;\n    var10 = var8 == 0;\n    var6 = var9;\n    if (!var10 && var11 == var12) {\n      var4 = var7 << (var9 & 0xff);\n      var7 = var7 >> (0xcU - var8 & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (var10 || var11 != var12) {\n    bit24 = 0x20 - var6;\n  }\n  var7 = var7 << (var6 & 0xff);\n  if (var10 || var11 != var12) {\n    var7 = var7 | var4 >> (bit24 & 0xff);\n  }\n  if (var10 || var11 != var12) {\n    var4 = var4 << (var6 & 0xff);\n  }\nLAB_080002f0:\n  if ((int)var9 < 0x381) {\n    return CONCAT44(var7 + (0x380 - var9) * 0x100000 | bit31,var4);\n  }\n  var6 = ~(0x380 - var9);\n  if ((int)var6 < 0x1f) {\n    var8 = var6 - 0x13;\n    if (var8 != 0 && var8 < 0 == SCARRY4(var6 - 0x1f,0xc)) {\n      return CONCAT44(result_sub,var4 >> (0x20 - (0xcU - var8) & 0xff) | var7 << (0xcU - var8 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    var6 = var6 + 1;\n    return CONCAT44(bit31 | var7 >> (var6 & 0xff),\n                    var4 >> (var6 & 0xff) | var7 << (0x20 - var6 & 0xff));\n  }\n  return CONCAT44(result_sub,var7 >> (var6 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_08000428": "reverse_bits_08000428",
                "param_1": "input",
                "param_2": "var1",
                "param_3": "var2",
                "param_4": "var3",
                "uVar1": "bit31",
                "uVar2": "var4",
                "uVar3": "result_sub",
                "uVar4": "var6",
                "uVar5": "var7",
                "iVar6": "var8",
                "uVar7": "var9",
                "in_r12": "bit24",
                "bVar8": "var10",
                "bVar9": "var11",
                "bVar10": "var12"
            },
            "calling": [
                "FUN_0800411c",
                "FUN_08003330"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080004d0": {
            "entrypoint": "0x080004d0",
            "current_name": "calculate_floating_point_080004d0",
            "code": "\nulonglong calculateFloatingPoint_080004d0(undefined4 input1,uint input2,uint input3,uint input4)\n\n{\n  ulonglong result1;\n  longlong result2;\n  uint var1;\n  uint var2;\n  int var3;\n  uint var4;\n  uint var5;\n  uint var6;\n  uint var7;\n  bool flag1;\n  bool flag2;\n  bool flag3;\n  ulonglong var8;\n  \n  var8 = CONCAT44(input2,input1);\n  var6 = 0x7ff;\n  var2 = input2 >> 0x14 & 0x7ff;\n  flag1 = var2 == 0;\n  if (!flag1) {\n    var5 = input4 >> 0x14 & 0x7ff;\n    flag1 = var5 == 0;\n  }\n  if (!flag1) {\n    flag1 = var2 == 0x7ff;\n  }\n  if (!flag1) {\n    flag1 = var5 == 0x7ff;\n  }\n  if (flag1) {\n    var8 = FUN_080006ac();\n  }\n  var1 = (uint)(var8 >> 0x20);\n  var3 = var2 + var5;\n  var2 = var1 ^ input4;\n  var1 = var1 & ~(var6 << 0x15);\n  input4 = input4 & ~(var6 << 0x15);\n  flag1 = ((uint)var8 | var1 << 0xc) == 0;\n  if (!flag1) {\n    flag1 = (input3 | input4 << 0xc) == 0;\n  }\n  var1 = var1 | 0x100000;\n  input4 = input4 | 0x100000;\n  if (flag1) {\n    input3 = (uint)var8 | input3;\n    input4 = (var2 & 0x80000000 | var1) ^ input4;\n    var2 = var6 >> 1;\n    flag3 = SBORROW4(var3,var2);\n    var4 = var3 - var2;\n    flag1 = var4 == 0;\n    var1 = var4;\n    if (!flag1 && (int)var2 <= var3) {\n      flag3 = SBORROW4(var6,var4);\n      var1 = var6 - var4;\n      flag1 = var6 == var4;\n    }\n    if (!flag1 && (int)var1 < 0 == flag3) {\n      input4 = input4 | var4 * 0x100000;\n    }\n    if (!flag1 && (int)var1 < 0 == flag3) {\n      return CONCAT44(input4,input3);\n    }\n    input4 = input4 | 0x100000;\n    var6 = 0;\n    flag3 = SBORROW4(var4,1);\n    var4 = var4 - 1;\n    flag1 = var4 == 0;\n    var2 = var4;\n  }\n  else {\n    result1 = (var8 & 0xffffffff) * (ulonglong)input3;\n    var8 = (var8 & 0xffffffff) * (ulonglong)input4 +\n             (ulonglong)var1 * (ulonglong)input3 + (result1 >> 0x20);\n    var7 = (uint)var8;\n    result2 = (ulonglong)var1 * (ulonglong)input4 + (var8 >> 0x20);\n    var6 = (uint)result2;\n    var1 = (uint)((ulonglong)result2 >> 0x20);\n    if ((int)result1 != 0) {\n      var7 = var7 | 1;\n    }\n    var4 = (var3 + -0x3ff) - (uint)(var1 < 0x200);\n    if (var1 < 0x200) {\n      flag1 = (var7 & 0x80000000) != 0;\n      var7 = var7 << 1;\n      result2 = CONCAT44(var1 * 2 + (uint)(CARRY4(var6,var6) || CARRY4(var6 * 2,(uint)flag1)),\n                       var6 * 2 + (uint)flag1);\n    }\n    input4 = var2 & 0x80000000 | (int)((ulonglong)result2 >> 0x20) << 0xb | (uint)result2 >> 0x15;\n    input3 = (uint)result2 << 0xb | var7 >> 0x15;\n    var6 = var7 * 0x800;\n    flag2 = 0xfc < var4;\n    flag3 = SBORROW4(var4,0xfd);\n    var1 = var4 - 0xfd;\n    flag1 = var1 == 0;\n    var2 = var1;\n    if (flag2 && !flag1) {\n      flag2 = 0x6ff < var1;\n      flag3 = SBORROW4(var1,0x700);\n      var2 = var4 - 0x7fd;\n      flag1 = var1 == 0x700;\n    }\n    if (!flag2 || flag1) {\n      flag1 = 0x7fffffff < var6;\n      if (var6 == 0x80000000) {\n        flag1 = (var7 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(input4 + var4 * 0x100000 + (uint)CARRY4(input3,(uint)flag1),input3 + flag1\n                     );\n    }\n  }\n  if (!flag1 && (int)var2 < 0 == flag3) {\n    return (ulonglong)(input4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  flag2 = SCARRY4(var4,0x36);\n  flag1 = (int)(var4 + 0x36) < 0;\n  flag3 = var4 == 0xffffffca;\n  if (flag3 || flag1 != flag2) {\n    input3 = 0;\n  }\n  if (flag3 || flag1 != flag2) {\n    input4 = input4 & 0x80000000;\n  }\n  if (flag3 || flag1 != flag2) {\n    return CONCAT44(input4,input3);\n  }\n  var2 = -var4;\n  var1 = var2 - 0x20;\n  if (0x1f < (int)var2) {\n    var4 = input3 >> (var1 & 0xff) | input4 << (0x20 - var1 & 0xff);\n    var2 = (input4 >> (var1 & 0xff) & ~((input4 & 0x80000000) >> (var1 & 0xff))) -\n            ((int)var4 >> 0x1f);\n    if ((var6 | input3 << (0x20 - var1 & 0xff) | var4 << 1) == 0) {\n      var2 = var2 & ~(var4 >> 0x1f);\n    }\n    return CONCAT44(input4,var2) & 0x80000000ffffffff;\n  }\n  var3 = var2 - 0x14;\n  if (var3 == 0 || var3 < 0 != SCARRY4(var1,0xc)) {\n    var7 = input3 << (var4 + 0x20 & 0xff);\n    var1 = input3 >> (var2 & 0xff) | input4 << (var4 + 0x20 & 0xff);\n    var4 = var1 + -((int)var7 >> 0x1f);\n    if ((var6 | var7 << 1) == 0) {\n      var4 = var4 & ~(var7 >> 0x1f);\n    }\n    return CONCAT44((input4 & 0x80000000) +\n                    ((input4 & 0x7fffffff) >> (var2 & 0xff)) +\n                    (uint)CARRY4(var1,-((int)var7 >> 0x1f)),var4);\n  }\n  var2 = 0xc - var3;\n  var4 = input3 << (var2 & 0xff);\n  var2 = input3 >> (0x20 - var2 & 0xff) | input4 << (var2 & 0xff);\n  var1 = var2 + -((int)var4 >> 0x1f);\n  if ((var6 | var4 << 1) == 0) {\n    var1 = var1 & ~(var4 >> 0x1f);\n  }\n  return CONCAT44((input4 & 0x80000000) + (uint)CARRY4(var2,-((int)var4 >> 0x1f)),var1);\n}\n\n",
            "renaming": {
                "FUN_080004d0": "calculate_floating_point_080004d0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result1",
                "lVar2": "result2",
                "uVar3": "var1",
                "uVar4": "var2",
                "iVar5": "var3",
                "uVar6": "var4",
                "unaff_r5": "var5",
                "uVar7": "var6",
                "uVar8": "var7",
                "bVar9": "flag1",
                "bVar10": "flag2",
                "bVar11": "flag3",
                "uVar12": "var8"
            },
            "calling": [
                "FUN_080071c0",
                "FUN_08006d68",
                "FUN_08005c70",
                "FUN_08005900",
                "FUN_08006c0c",
                "FUN_0800411c",
                "FUN_08006228",
                "FUN_08003330"
            ],
            "called": [
                "FUN_080006ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080006ac": {
            "entrypoint": "0x080006ac",
            "current_name": "calculate_hash_080006ac",
            "code": "\nulonglong calculate_hash_080006ac(uint input_1,uint input_2,uint input_3,uint input_4)\n\n{\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  bool is_zero;\n  \n  temp3 = temp5 & input_4 >> 0x14;\n  if (temp2 != temp5 && temp3 != temp5) {\n    is_zero = (input_1 | input_2 << 1) == 0;\n    if (!is_zero) {\n      is_zero = (input_3 | input_4 << 1) == 0;\n    }\n    if (is_zero) {\n      return (ulonglong)((input_2 ^ input_4) & 0x80000000) << 0x20;\n    }\n    if (temp2 == 0) {\n      temp4 = input_2 & 0x80000000;\n      do {\n        temp1 = input_1 & 0x80000000;\n        input_1 = input_1 << 1;\n        input_2 = input_2 * 2 + (uint)(temp1 != 0);\n      } while ((input_2 & 0x100000) == 0);\n      input_2 = input_2 | temp4;\n      if (temp3 != 0) {\n        return CONCAT44(input_2,input_1);\n      }\n    }\n    do {\n      temp3 = input_3 & 0x80000000;\n      input_3 = input_3 << 1;\n      input_4 = input_4 * 2 + (uint)(temp3 != 0);\n    } while ((input_4 & 0x100000) == 0);\n    return CONCAT44(input_2,input_1);\n  }\n  is_zero = (input_1 | input_2 << 1) == 0;\n  if (is_zero) {\n    input_2 = input_4;\n    input_1 = input_3;\n  }\n  if (!is_zero) {\n    is_zero = (input_3 | input_4 << 1) == 0;\n  }\n  temp4 = input_2;\n  if (((!is_zero) && ((temp2 != temp5 || ((input_1 | input_2 << 0xc) == 0)))) &&\n     ((temp3 != temp5 || (input_1 = input_3, temp4 = input_4, (input_3 | input_4 << 0xc) == 0)))) {\n    return (ulonglong)((input_2 ^ input_4) & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  return CONCAT44(temp4,input_1) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_080006ac": "calculate_hash_080006ac",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "temp1",
                "unaff_r4": "temp2",
                "uVar2": "temp3",
                "uVar3": "temp4",
                "in_r12": "temp5",
                "bVar4": "is_zero"
            },
            "calling": [
                "FUN_080004d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000724": {
            "entrypoint": "0x08000724",
            "current_name": "calculate_floating_point_08000724",
            "code": "\nulonglong calculateFloatingPoint_08000724(undefined4 value1,uint value2,uint value3,uint value4)\n\n{\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  uint temp7;\n  int temp8;\n  uint temp9;\n  uint temp10;\n  uint temp11;\n  uint temp12;\n  uint temp13;\n  uint temp14;\n  bool check1;\n  bool check2;\n  bool check3;\n  undefined8 result;\n  \n  result = CONCAT44(value2,value1);\n  temp14 = 0x7ff;\n  temp7 = value2 >> 0x14 & 0x7ff;\n  check1 = temp7 == 0;\n  if (!check1) {\n    temp10 = value4 >> 0x14 & 0x7ff;\n    check1 = temp10 == 0;\n  }\n  if (!check1) {\n    check1 = temp7 == 0x7ff;\n  }\n  if (!check1) {\n    check1 = temp10 == 0x7ff;\n  }\n  if (check1) {\n    result = FUN_08000892();\n  }\n  temp9 = (uint)((ulonglong)result >> 0x20);\n  temp12 = (uint)result;\n  temp8 = temp7 - temp10;\n  if ((value3 | value4 << 0xc) == 0) {\n    temp7 = (temp9 ^ value4) & 0x80000000 | temp9 & 0xfffff;\n    check3 = SCARRY4(temp8,temp14 >> 1);\n    temp9 = temp8 + (temp14 >> 1);\n    check1 = (int)temp9 < 0;\n    check2 = temp9 == 0;\n    if (!check2 && check1 == check3) {\n      check3 = SBORROW4(temp14,temp9);\n      check1 = (int)(temp14 - temp9) < 0;\n      check2 = temp14 == temp9;\n    }\n    if (!check2 && check1 == check3) {\n      temp7 = temp7 | temp9 * 0x100000;\n    }\n    if (!check2 && check1 == check3) {\n      return CONCAT44(temp7,temp12);\n    }\n    temp7 = temp7 | 0x100000;\n    temp14 = 0;\n    check2 = SBORROW4(temp9,1);\n    temp9 = temp9 - 1;\n    check1 = temp9 == 0;\n    temp3 = temp9;\n  }\n  else {\n    temp3 = (value4 << 0xc) >> 4 | 0x10000000 | value3 >> 0x18;\n    temp14 = value3 << 8;\n    temp11 = (temp9 << 0xc) >> 4 | 0x10000000 | temp12 >> 0x18;\n    temp12 = temp12 * 0x100;\n    temp7 = (temp9 ^ value4) & 0x80000000;\n    check1 = temp3 <= temp11;\n    if (temp11 == temp3) {\n      check1 = temp14 <= temp12;\n    }\n    temp8 = temp8 + (uint)check1;\n    temp9 = temp8 + 0x3fd;\n    if (check1 == false) {\n      temp3 = temp3 >> 1;\n      temp14 = (uint)((value3 >> 0x18 & 1) != 0) << 0x1f | temp14 >> 1;\n    }\n    temp13 = temp12 - temp14;\n    temp11 = (temp11 - temp3) - (uint)(temp12 < temp14);\n    temp4 = temp3 >> 1;\n    temp1 = (uint)((temp3 & 1) != 0) << 0x1f | temp14 >> 1;\n    temp12 = 0x100000;\n    temp3 = 0x80000;\n    while( true ) {\n      check1 = temp1 <= temp13;\n      if (temp4 < temp11 || temp11 - temp4 < (uint)check1) {\n        temp13 = temp13 - temp1;\n        temp12 = temp12 | temp3;\n        temp11 = (temp11 - temp4) - (uint)!check1;\n      }\n      temp5 = temp4 >> 1;\n      temp1 = (uint)((temp4 & 1) != 0) << 0x1f | temp1 >> 1;\n      check2 = temp1 <= temp13;\n      check1 = temp11 - temp5 < (uint)check2;\n      temp14 = temp11;\n      if (temp5 < temp11 || check1) {\n        temp13 = temp13 - temp1;\n        temp14 = (temp11 - temp5) - (uint)!check2;\n      }\n      if (temp5 < temp11 || check1) {\n        temp12 = temp12 | temp3 >> 1;\n      }\n      temp11 = temp4 >> 2;\n      temp2 = (uint)((temp5 & 1) != 0) << 0x1f | temp1 >> 1;\n      check2 = temp2 <= temp13;\n      check1 = temp14 - temp11 < (uint)check2;\n      temp5 = temp14;\n      if (temp11 < temp14 || check1) {\n        temp13 = temp13 - temp2;\n        temp5 = (temp14 - temp11) - (uint)!check2;\n      }\n      if (temp11 < temp14 || check1) {\n        temp12 = temp12 | temp3 >> 2;\n      }\n      temp6 = temp4 >> 3;\n      temp1 = (uint)((temp11 & 1) != 0) << 0x1f | temp2 >> 1;\n      check2 = temp1 <= temp13;\n      check1 = temp5 - temp6 < (uint)check2;\n      temp11 = temp5;\n      if (temp6 < temp5 || check1) {\n        temp13 = temp13 - temp1;\n        temp11 = (temp5 - temp6) - (uint)!check2;\n      }\n      if (temp6 < temp5 || check1) {\n        temp12 = temp12 | temp3 >> 3;\n      }\n      temp14 = temp11 | temp13;\n      if (temp14 == 0) break;\n      temp11 = temp11 << 4 | temp13 >> 0x1c;\n      temp13 = temp13 << 4;\n      temp4 = temp4 & 0xfffffff8 | temp1 >> 0x1d;\n      temp1 = (temp2 >> 1) << 3;\n      temp3 = temp3 >> 4;\n      if (temp3 == 0) {\n        temp6 = temp4;\n        if ((temp7 & 0x100000) != 0) goto LAB_08000842;\n        temp7 = temp7 | temp12;\n        temp12 = 0;\n        temp3 = 0x80000000;\n      }\n    }\n    if ((temp7 & 0x100000) == 0) {\n      temp7 = temp7 | temp12;\n      temp12 = 0;\n    }\nLAB_08000842:\n    check3 = 0xfc < temp9;\n    check2 = SBORROW4(temp9,0xfd);\n    temp4 = temp8 + 0x300;\n    check1 = temp4 == 0;\n    temp3 = temp4;\n    if (check3 && !check1) {\n      check3 = 0x6ff < temp4;\n      check2 = SBORROW4(temp4,0x700);\n      temp3 = temp8 - 0x400;\n      check1 = temp4 == 0x700;\n    }\n    if (!check3 || check1) {\n      check1 = temp6 <= temp11;\n      if (temp11 == temp6) {\n        check1 = temp1 <= temp13;\n      }\n      if (temp11 == temp6 && temp13 == temp1) {\n        check1 = (temp12 & 1) != 0;\n      }\n      return CONCAT44(temp7 + temp9 * 0x100000 + (uint)CARRY4(temp12,(uint)check1),temp12 + check1);\n    }\n  }\n  if (!check1 && (int)temp3 < 0 == check2) {\n    return (ulonglong)(temp7 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  check3 = SCARRY4(temp9,0x36);\n  check1 = (int)(temp9 + 0x36) < 0;\n  check2 = temp9 == 0xffffffca;\n  if (check2 || check1 != check3) {\n    temp12 = 0;\n  }\n  if (check2 || check1 != check3) {\n    temp7 = temp7 & 0x80000000;\n  }\n  if (check2 || check1 != check3) {\n    return CONCAT44(temp7,temp12);\n  }\n  temp3 = -temp9;\n  temp11 = temp3 - 0x20;\n  if (0x1f < (int)temp3) {\n    temp3 = temp12 >> (temp11 & 0xff) | temp7 << (0x20 - temp11 & 0xff);\n    temp9 = (temp7 >> (temp11 & 0xff) & ~((temp7 & 0x80000000) >> (temp11 & 0xff))) -\n            ((int)temp3 >> 0x1f);\n    if ((temp14 | temp12 << (0x20 - temp11 & 0xff) | temp3 << 1) == 0) {\n      temp9 = temp9 & ~(temp3 >> 0x1f);\n    }\n    return CONCAT44(temp7,temp9) & 0x80000000ffffffff;\n  }\n  temp8 = temp3 - 0x14;\n  if (temp8 != 0 && temp8 < 0 == SCARRY4(temp11,0xc)) {\n    temp9 = 0xc - temp8;\n    temp3 = temp12 << (temp9 & 0xff);\n    temp12 = temp12 >> (0x20 - temp9 & 0xff) | temp7 << (temp9 & 0xff);\n    temp9 = temp12 + -((int)temp3 >> 0x1f);\n    if ((temp14 | temp3 << 1) == 0) {\n      temp9 = temp9 & ~(temp3 >> 0x1f);\n    }\n    return CONCAT44((temp7 & 0x80000000) + (uint)CARRY4(temp12,-((int)temp3 >> 0x1f)),temp9);\n  }\n  temp11 = temp12 << (temp9 + 0x20 & 0xff);\n  temp12 = temp12 >> (temp3 & 0xff) | temp7 << (temp9 + 0x20 & 0xff);\n  temp9 = temp12 + -((int)temp11 >> 0x1f);\n  if ((temp14 | temp11 << 1) == 0) {\n    temp9 = temp9 & ~(temp11 >> 0x1f);\n  }\n  return CONCAT44((temp7 & 0x80000000) +\n                  ((temp7 & 0x7fffffff) >> (temp3 & 0xff)) +\n                  (uint)CARRY4(temp12,-((int)temp11 >> 0x1f)),temp9);\n}\n\n",
            "renaming": {
                "FUN_08000724": "calculate_floating_point_08000724",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "uVar3": "temp3",
                "uVar4": "temp4",
                "uVar5": "temp5",
                "uVar6": "temp6",
                "uVar7": "temp7",
                "iVar8": "temp8",
                "uVar9": "temp9",
                "unaff_r5": "temp10",
                "uVar10": "temp11",
                "uVar11": "temp12",
                "uVar12": "temp13",
                "uVar13": "temp14",
                "bVar14": "check1",
                "bVar15": "check2",
                "bVar16": "check3",
                "uVar17": "result"
            },
            "calling": [
                "FUN_08006d68",
                "FUN_08005c70",
                "FUN_08005900",
                "FUN_08006c0c",
                "FUN_08005bc8",
                "FUN_08006228",
                "FUN_08003330",
                "FUN_08006070"
            ],
            "called": [
                "FUN_08000892"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000892": {
            "entrypoint": "0x08000892",
            "current_name": "check_floating_point_bits_08000892",
            "code": "\nulonglong checkFloatingPointBits_08000892(uint value1,uint value2,uint value3,uint value4)\n\n{\n  uint bit1;\n  uint bit2;\n  uint bit3;\n  uint bit4;\n  uint bit5;\n  bool isZero;\n  \n  bit3 = bit5 & value4 >> 0x14;\n  bit4 = value2;\n  if (bit2 != bit5 || bit3 != bit5) {\n    if (bit2 == bit5) {\n      if (((value1 | value2 << 0xc) == 0) && (value1 = value3, bit4 = value4, bit3 != bit5)\n         ) {\nLAB_08000704:\n        return (ulonglong)((value2 ^ value4) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n    }\n    else if (bit3 == bit5) {\n      value1 = value3;\n      bit4 = value4;\n      if ((value3 | value4 << 0xc) == 0) {\nLAB_080006c8:\n        return (ulonglong)((value2 ^ value4) & 0x80000000) << 0x20;\n      }\n    }\n    else {\n      isZero = (value1 | value2 << 1) == 0;\n      if (!isZero) {\n        isZero = (value3 | value4 << 1) == 0;\n      }\n      if (!isZero) {\n        if (bit2 == 0) {\n          bit4 = value2 & 0x80000000;\n          do {\n            bit1 = value1 & 0x80000000;\n            value1 = value1 << 1;\n            value2 = value2 * 2 + (uint)(bit1 != 0);\n          } while ((value2 & 0x100000) == 0);\n          value2 = value2 | bit4;\n          if (bit3 != 0) {\n            return CONCAT44(value2,value1);\n          }\n        }\n        do {\n          bit4 = value3 & 0x80000000;\n          value3 = value3 << 1;\n          value4 = value4 * 2 + (uint)(bit4 != 0);\n        } while ((value4 & 0x100000) == 0);\n        return CONCAT44(value2,value1);\n      }\n      if ((value1 | value2 << 1) != 0) goto LAB_08000704;\n      if ((value3 | value4 << 1) != 0) goto LAB_080006c8;\n    }\n  }\n  return CONCAT44(bit4,value1) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_08000892": "check_floating_point_bits_08000892",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4",
                "uVar1": "bit1",
                "unaff_r4": "bit2",
                "uVar2": "bit3",
                "uVar3": "bit4",
                "in_r12": "bit5",
                "bVar4": "isZero"
            },
            "calling": [
                "FUN_08000724"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000904": {
            "entrypoint": "0x08000904",
            "current_name": "check_equality_and_bounds_08000904",
            "code": "\nuint checkEqualityAndBounds_08000904(uint input1,uint input2,uint input3,uint input4)\n\n{\n  uint xorResult;\n  bool isEqual;\n  bool isLessOrEqual;\n  \n  if (((int)(input2 << 1) >> 0x15 == -1 || (int)(input4 << 1) >> 0x15 == -1) &&\n     ((((int)(input2 << 1) >> 0x15 == -1 && ((input1 | input2 << 0xc) != 0)) ||\n      (((int)(input4 << 1) >> 0x15 == -1 && ((input3 | input4 << 0xc) != 0)))))) {\n    result 1;\n  }\n  isEqual = (input1 | input2 << 1) == 0;\n  if (isEqual) {\n    isEqual = (input3 | input4 << 1) == 0;\n  }\n  if (!isEqual) {\n    isEqual = input2 == input4;\n  }\n  if (isEqual) {\n    isEqual = input1 == input3;\n  }\n  if (!isEqual) {\n    xorResult = input2 ^ input4;\n    isEqual = xorResult == 0;\n    if (-1 < (int)xorResult) {\n      isEqual = input2 == input4;\n    }\n    isLessOrEqual = -1 < (int)xorResult && input4 <= input2;\n    if (isEqual) {\n      isLessOrEqual = input3 <= input1;\n    }\n    input4 = (int)input4 >> 0x1f;\n    if (!isLessOrEqual) {\n      input4 = ~input4;\n    }\n    result input4 | 1;\n  }\n  result 0;\n}\n\n",
            "renaming": {
                "FUN_08000904": "check_equality_and_bounds_08000904",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "xorResult",
                "bVar2": "isEqual",
                "bVar3": "isLessOrEqual",
                "return": "result"
            },
            "calling": [
                "FUN_08000990"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000980": {
            "entrypoint": "0x08000980",
            "current_name": "initialize_function_08000980",
            "code": "\nvoid initializeFunction_08000980(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  FUN_08000990(arg3,arg4,arg1,arg2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000980": "initialize_function_08000980",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "calling": [
                "FUN_080009f0"
            ],
            "called": [
                "FUN_08000990"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000990": {
            "entrypoint": "0x08000990",
            "current_name": "initialize_param_08000990",
            "code": "\nundefined4 initializeParam_08000990(undefined4 param)\n\n{\n  FUN_08000904();\n  return param;\n}\n\n",
            "renaming": {
                "FUN_08000990": "initialize_param_08000990",
                "param_1": "param"
            },
            "calling": [
                "FUN_08000980",
                "FUN_080009c8",
                "FUN_080009a0",
                "FUN_080009b4"
            ],
            "called": [
                "FUN_08000904"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009a0": {
            "entrypoint": "0x080009a0",
            "current_name": "is_non_zero_value_080009a0",
            "code": "\nbool isNonZeroValue_080009a0(void)\n\n{\n  char inputChar;\n  \n  FUN_08000990();\n  return inputChar != '\\0';\n}\n\n",
            "renaming": {
                "FUN_080009a0": "is_non_zero_value_080009a0",
                "in_ZR": "inputChar"
            },
            "calling": [
                "FUN_08005900"
            ],
            "called": [
                "FUN_08000990"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009b4": {
            "entrypoint": "0x080009b4",
            "current_name": "is_null_value_080009b4",
            "code": "\nbool is_null_value_080009b4(void)\n\n{\n  char input_char;\n  \n  FUN_08000990();\n  return input_char == '\\0';\n}\n\n",
            "renaming": {
                "FUN_080009b4": "is_null_value_080009b4",
                "in_CY": "input_char"
            },
            "calling": [
                "FUN_08005900",
                "FUN_08005bc8"
            ],
            "called": [
                "FUN_08000990"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009c8": {
            "entrypoint": "0x080009c8",
            "current_name": "check_cy_and_zr_080009c8",
            "code": "\nbool check_CY_and_ZR_080009c8(void)\n\n{\n  undefined zero_flag;\n  undefined carry_flag;\n  \n  FUN_08000990();\n  return !(bool)carry_flag || (bool)zero_flag;\n}\n\n",
            "renaming": {
                "FUN_080009c8": "check_cy_and_zr_080009c8",
                "in_CY": "carry_flag",
                "in_ZR": "zero_flag"
            },
            "calling": [
                "FUN_08006228"
            ],
            "called": [
                "FUN_08000990"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009f0": {
            "entrypoint": "0x080009f0",
            "current_name": "check_if_null_terminated_080009f0",
            "code": "\nbool check_if_null_terminated_080009f0(void)\n\n{\n  char input_character;\n  \n  FUN_08000980();\n  return input_character == '\\0';\n}\n\n",
            "renaming": {
                "FUN_080009f0": "check_if_null_terminated_080009f0",
                "in_CY": "input_character"
            },
            "calling": [
                "FUN_08006d68",
                "FUN_08005c70",
                "FUN_08005854",
                "FUN_08006228"
            ],
            "called": [
                "FUN_08000980"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a04": {
            "entrypoint": "0x08000a04",
            "current_name": "check_conditions_08000a04",
            "code": "\nundefined4 check_conditions_08000a04(uint input_1,int input_2,uint input_3,int input_4)\n\n{\n  if ((((input_2 << 1) >> 0x15 != -1) || ((input_1 | input_2 << 0xc) == 0)) &&\n     (((input_4 << 1) >> 0x15 != -1 || ((input_3 | input_4 << 0xc) == 0)))) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08000a04": "check_conditions_08000a04",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4"
            },
            "calling": [
                "FUN_08005900",
                "FUN_08005854",
                "FUN_08005bc8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a30": {
            "entrypoint": "0x08000a30",
            "current_name": "calculate_floating_point_08000a30",
            "code": "\nuint calculateFloatingPoint_08000a30(uint exponent,uint mantissa)\n\n{\n  uint result;\n  uint temp1;\n  uint temp2;\n  uint overflowCheck;\n  bool isZero;\n  bool isInRange;\n  \n  temp1 = mantissa * 2;\n  isInRange = temp1 < 0x70000000;\n  temp2 = temp1 + 0x90000000;\n  result = temp2;\n  if (!isInRange) {\n    overflowCheck = temp1 + 0x8fe00000;\n    result = overflowCheck;\n  }\n  isZero = result == 0;\n  if (!isInRange && temp2 >= 0x200000) {\n    isZero = overflowCheck == 0x1fc00000;\n  }\n  if (((isInRange || temp2 < 0x200000) || 0x1fc00000 < overflowCheck) || isZero) {\n    if ((mantissa & 0x40000000) != 0) {\n      if (((int)temp1 >> 0x15 == -1) && ((exponent | mantissa << 0xc) != 0)) {\n        return 0x7fc00000;\n      }\n      return mantissa & 0x80000000 | 0x7f800000;\n    }\n    if ((int)(temp1 + 0x92e00000) < 0 != SCARRY4(temp2,0x2e00000)) {\n      return mantissa & 0x80000000;\n    }\n    temp1 = 0x18 - (temp1 + 0x92e00000 >> 0x15);\n    result = exponent >> (temp1 & 0xff);\n    if (exponent << (0x20 - temp1 & 0xff) != 0) {\n      result = result | 1;\n    }\n    temp2 = mantissa & 0x1fffff | 0x100000;\n    exponent = result | temp2 << (0x20 - temp1 & 0xff);\n    temp2 = (temp2 >> (temp1 & 0xff)) << 1;\n  }\n  result = (mantissa & 0x80000000 | exponent >> 0x1d) + temp2 * 4 + (uint)(0x7fffffff < exponent * 8);\n  if (exponent * 8 == 0x80000000) {\n    result = result & 0xfffffffe;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08000a30": "calculate_floating_point_08000a30",
                "param_1": "exponent",
                "param_2": "mantissa",
                "uVar1": "result",
                "uVar2": "temp1",
                "uVar3": "temp2",
                "in_r12": "overflowCheck",
                "bVar4": "isZero",
                "bVar5": "isInRange"
            },
            "calling": [
                "FUN_0800411c",
                "FUN_08003330"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000ad8": {
            "entrypoint": "0x08000ad8",
            "current_name": "calculate_new_value_08000ad8",
            "code": "\nuint calculate_new_value_08000ad8(uint input_value,uint mask,undefined4 constant,uint shift_amount)\n\n{\n  int shifted_value;\n  int shifted_value2;\n  uint masked_value;\n  uint shifted_masked_value;\n  uint left_shifted_value;\n  uint result_value;\n  uint difference;\n  bool is_condition_true;\n  \n  masked_value = mask ^ 0x80000000;\n  left_shifted_value = input_value << 1;\n  is_condition_true = left_shifted_value == 0;\n  if (!is_condition_true) {\n    shift_amount = mask << 1;\n    is_condition_true = shift_amount == 0;\n  }\n  if (!is_condition_true) {\n    is_condition_true = left_shifted_value == shift_amount;\n  }\n  shifted_value = (int)left_shifted_value >> 0x18;\n  if (!is_condition_true) {\n    is_condition_true = shifted_value == -1;\n  }\n  if (!is_condition_true) {\n    is_condition_true = (int)shift_amount >> 0x18 == -1;\n  }\n  if (is_condition_true) {\n    shifted_value2 = (int)(mask << 1) >> 0x18;\n    if (shifted_value == -1 || shifted_value2 == -1) {\n      left_shifted_value = masked_value;\n      if (shifted_value == -1) {\n        left_shifted_value = input_value;\n      }\n      if (shifted_value != -1 || shifted_value2 != -1) {\n        masked_value = left_shifted_value;\n      }\n      is_condition_true = (left_shifted_value & 0x7fffff) == 0;\n      if (is_condition_true) {\n        is_condition_true = (masked_value & 0x7fffff) == 0;\n      }\n      if (is_condition_true) {\n        is_condition_true = left_shifted_value == masked_value;\n      }\n      if (!is_condition_true) {\n        left_shifted_value = left_shifted_value | 0x400000;\n      }\n      return left_shifted_value;\n    }\n    if (((input_value ^ masked_value) & 0x7fffffff) != 0) {\n      if (left_shifted_value == 0) {\n        input_value = masked_value;\n      }\n      return input_value;\n    }\n    if (input_value != masked_value) {\n      return 0;\n    }\n    if ((left_shifted_value & 0xff000000) == 0) {\n      masked_value = input_value << 1;\n      if ((input_value & 0x80000000) != 0) {\n        masked_value = masked_value | 0x80000000;\n      }\n      return masked_value;\n    }\n    if (left_shifted_value < 0xfe000000) {\n      return input_value + 0x800000;\n    }\n    input_value = input_value & 0x80000000;\nLAB_08000c12:\n    return input_value | 0x7f800000;\n  }\n  left_shifted_value = left_shifted_value >> 0x18;\n  shift_amount = shift_amount >> 0x18;\n  difference = shift_amount - left_shifted_value;\n  is_condition_true = difference != 0;\n  result_value = left_shifted_value;\n  if (is_condition_true && left_shifted_value <= shift_amount) {\n    result_value = left_shifted_value + difference;\n  }\n  if (is_condition_true && left_shifted_value <= shift_amount) {\n    masked_value = masked_value ^ input_value;\n  }\n  if (is_condition_true && left_shifted_value <= shift_amount) {\n    input_value = input_value ^ masked_value;\n  }\n  if (is_condition_true && left_shifted_value <= shift_amount) {\n    masked_value = masked_value ^ input_value;\n  }\n  if (shift_amount < left_shifted_value) {\n    difference = -difference;\n  }\n  if (0x19 < difference) {\n    return input_value;\n  }\n  left_shifted_value = input_value & 0xffffff | 0x800000;\n  if ((input_value & 0x80000000) != 0) {\n    left_shifted_value = -left_shifted_value;\n  }\n  shifted_masked_value = masked_value & 0xffffff | 0x800000;\n  if ((masked_value & 0x80000000) != 0) {\n    shifted_masked_value = -shifted_masked_value;\n  }\n  if (result_value == difference) {\n    shifted_masked_value = shifted_masked_value ^ 0x800000;\n    if (result_value == 0) {\n      left_shifted_value = left_shifted_value ^ 0x800000;\n      result_value = 1;\n    }\n    else {\n      difference = difference - 1;\n    }\n  }\n  left_shifted_value = left_shifted_value + ((int)shifted_masked_value >> (difference & 0xff));\n  shifted_masked_value = shifted_masked_value << (0x20 - difference & 0xff);\n  input_value = left_shifted_value & 0x80000000;\n  if ((int)left_shifted_value < 0) {\n    is_condition_true = shifted_masked_value != 0;\n    shifted_masked_value = -shifted_masked_value;\n    left_shifted_value = -left_shifted_value - (uint)is_condition_true;\n  }\n  if (left_shifted_value < 0x800000) {\n    masked_value = shifted_masked_value & 0x80000000;\n    shifted_masked_value = shifted_masked_value << 1;\n    left_shifted_value = left_shifted_value * 2 + (uint)(masked_value != 0);\n    masked_value = result_value - 2;\n    if ((left_shifted_value & 0x800000) == 0) {\n      difference = LZCOUNT(left_shifted_value) - 8;\n      left_shifted_value = left_shifted_value << (difference & 0xff);\n      if ((int)masked_value < (int)difference) {\n        left_shifted_value = left_shifted_value >> (-(masked_value - difference) & 0xff);\n      }\n      else {\n        left_shifted_value = left_shifted_value + (masked_value - difference) * 0x800000;\n      }\n      return left_shifted_value | input_value;\n    }\n  }\n  else {\n    masked_value = result_value - 1;\n    if (0xffffff < left_shifted_value) {\n      masked_value = left_shifted_value & 1;\n      left_shifted_value = left_shifted_value >> 1;\n      shifted_masked_value = (uint)(masked_value != 0) << 0x1f | shifted_masked_value >> 1;\n      masked_value = result_value;\n      if (0xfd < result_value) goto LAB_08000c12;\n    }\n  }\n  left_shifted_value = left_shifted_value + masked_value * 0x800000 + (uint)(0x7fffffff < shifted_masked_value);\n  if (shifted_masked_value == 0x80000000) {\n    left_shifted_value = left_shifted_value & 0xfffffffe;\n  }\n  return left_shifted_value | input_value;\n}\n\n",
            "renaming": {
                "FUN_08000ad8": "calculate_new_value_08000ad8",
                "param_1": "input_value",
                "param_2": "mask",
                "param_3": "constant",
                "param_4": "shift_amount",
                "iVar1": "shifted_value",
                "iVar2": "shifted_value2",
                "uVar3": "masked_value",
                "uVar4": "shifted_masked_value",
                "uVar5": "left_shifted_value",
                "uVar6": "result_value",
                "uVar7": "difference",
                "bVar8": "is_condition_true"
            },
            "calling": [
                "FUN_0800426c",
                "FUN_08002ee8",
                "FUN_08002d88",
                "FUN_08003330",
                "FUN_0800483c",
                "FUN_08002bf0",
                "FUN_08002ec0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000adc": {
            "entrypoint": "0x08000adc",
            "current_name": "calculate_float_08000adc",
            "code": "\nuint calculateFloat_08000adc(uint value1,uint value2,undefined4 value3,uint value4)\n\n{\n  int shiftCount1;\n  int shiftCount2;\n  uint mantissa1;\n  uint mantissa2;\n  uint exponent1;\n  uint exponent2;\n  bool isZero;\n  \n  mantissa2 = value1 << 1;\n  isZero = mantissa2 == 0;\n  if (!isZero) {\n    value4 = value2 << 1;\n    isZero = value4 == 0;\n  }\n  if (!isZero) {\n    isZero = mantissa2 == value4;\n  }\n  shiftCount1 = (int)mantissa2 >> 0x18;\n  if (!isZero) {\n    isZero = shiftCount1 == -1;\n  }\n  if (!isZero) {\n    isZero = (int)value4 >> 0x18 == -1;\n  }\n  if (isZero) {\n    shiftCount2 = (int)(value2 << 1) >> 0x18;\n    if (shiftCount1 == -1 || shiftCount2 == -1) {\n      mantissa2 = value2;\n      if (shiftCount1 == -1) {\n        mantissa2 = value1;\n      }\n      if (shiftCount1 != -1 || shiftCount2 != -1) {\n        value2 = mantissa2;\n      }\n      isZero = (mantissa2 & 0x7fffff) == 0;\n      if (isZero) {\n        isZero = (value2 & 0x7fffff) == 0;\n      }\n      if (isZero) {\n        isZero = mantissa2 == value2;\n      }\n      if (!isZero) {\n        mantissa2 = mantissa2 | 0x400000;\n      }\n      return mantissa2;\n    }\n    if (((value1 ^ value2) & 0x7fffffff) != 0) {\n      if (mantissa2 == 0) {\n        value1 = value2;\n      }\n      return value1;\n    }\n    if (value1 != value2) {\n      return 0;\n    }\n    if ((mantissa2 & 0xff000000) == 0) {\n      mantissa2 = value1 << 1;\n      if ((value1 & 0x80000000) != 0) {\n        mantissa2 = mantissa2 | 0x80000000;\n      }\n      return mantissa2;\n    }\n    if (mantissa2 < 0xfe000000) {\n      return value1 + 0x800000;\n    }\n    value1 = value1 & 0x80000000;\nLAB_08000c12:\n    return value1 | 0x7f800000;\n  }\n  mantissa2 = mantissa2 >> 0x18;\n  value4 = value4 >> 0x18;\n  exponent2 = value4 - mantissa2;\n  isZero = exponent2 != 0;\n  exponent1 = mantissa2;\n  if (isZero && mantissa2 <= value4) {\n    exponent1 = mantissa2 + exponent2;\n  }\n  if (isZero && mantissa2 <= value4) {\n    value2 = value2 ^ value1;\n  }\n  if (isZero && mantissa2 <= value4) {\n    value1 = value1 ^ value2;\n  }\n  if (isZero && mantissa2 <= value4) {\n    value2 = value2 ^ value1;\n  }\n  if (value4 < mantissa2) {\n    exponent2 = -exponent2;\n  }\n  if (0x19 < exponent2) {\n    return value1;\n  }\n  mantissa2 = value1 & 0xffffff | 0x800000;\n  if ((value1 & 0x80000000) != 0) {\n    mantissa2 = -mantissa2;\n  }\n  mantissa1 = value2 & 0xffffff | 0x800000;\n  if ((value2 & 0x80000000) != 0) {\n    mantissa1 = -mantissa1;\n  }\n  if (exponent1 == exponent2) {\n    mantissa1 = mantissa1 ^ 0x800000;\n    if (exponent1 == 0) {\n      mantissa2 = mantissa2 ^ 0x800000;\n      exponent1 = 1;\n    }\n    else {\n      exponent2 = exponent2 - 1;\n    }\n  }\n  mantissa2 = mantissa2 + ((int)mantissa1 >> (exponent2 & 0xff));\n  mantissa1 = mantissa1 << (0x20 - exponent2 & 0xff);\n  value1 = mantissa2 & 0x80000000;\n  if ((int)mantissa2 < 0) {\n    isZero = mantissa1 != 0;\n    mantissa1 = -mantissa1;\n    mantissa2 = -mantissa2 - (uint)isZero;\n  }\n  if (mantissa2 < 0x800000) {\n    exponent2 = mantissa1 & 0x80000000;\n    mantissa1 = mantissa1 << 1;\n    mantissa2 = mantissa2 * 2 + (uint)(exponent2 != 0);\n    exponent2 = exponent1 - 2;\n    if ((mantissa2 & 0x800000) == 0) {\n      exponent1 = LZCOUNT(mantissa2) - 8;\n      mantissa2 = mantissa2 << (exponent1 & 0xff);\n      if ((int)exponent2 < (int)exponent1) {\n        mantissa2 = mantissa2 >> (-(exponent2 - exponent1) & 0xff);\n      }\n      else {\n        mantissa2 = mantissa2 + (exponent2 - exponent1) * 0x800000;\n      }\n      return mantissa2 | value1;\n    }\n  }\n  else {\n    exponent2 = exponent1 - 1;\n    if (0xffffff < mantissa2) {\n      exponent2 = mantissa2 & 1;\n      mantissa2 = mantissa2 >> 1;\n      mantissa1 = (uint)(exponent2 != 0) << 0x1f | mantissa1 >> 1;\n      exponent2 = exponent1;\n      if (0xfd < exponent1) goto LAB_08000c12;\n    }\n  }\n  mantissa2 = mantissa2 + exponent2 * 0x800000 + (uint)(0x7fffffff < mantissa1);\n  if (mantissa1 == 0x80000000) {\n    mantissa2 = mantissa2 & 0xfffffffe;\n  }\n  return mantissa2 | value1;\n}\n\n",
            "renaming": {
                "FUN_08000adc": "calculate_float_08000adc",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4",
                "iVar1": "shiftCount1",
                "iVar2": "shiftCount2",
                "uVar3": "mantissa1",
                "uVar4": "mantissa2",
                "uVar5": "exponent1",
                "uVar6": "exponent2",
                "bVar7": "isZero"
            },
            "calling": [
                "FUN_0800426c",
                "FUN_08004a84",
                "FUN_08002ee8",
                "FUN_0800411c",
                "FUN_08002cb0",
                "FUN_08003330",
                "FUN_0800483c",
                "FUN_08002ec0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000c3c": {
            "entrypoint": "0x08000c3c",
            "current_name": "count_bits_08000c3c",
            "code": "\nuint countBits_08000c3c(uint number)\n\n{\n  uint bitCount;\n  uint shiftedNumber;\n  int shiftedConstant;\n  uint result;\n  \n  if (number == 0) {\n    return 0;\n  }\n  bitCount = LZCOUNT(number);\n  shiftedNumber = bitCount - 8;\n  shiftedConstant = shiftedNumber * -0x800000 + 0x4a800000;\n  if (7 < bitCount) {\n    result = 0 << (shiftedNumber & 0xff);\n    bitCount = shiftedConstant + (number << (shiftedNumber & 0xff)) +\n            (0U >> (0x20 - shiftedNumber & 0xff)) + (uint)(0x7fffffff < result);\n    if (result == 0x80000000) {\n      bitCount = bitCount & 0xfffffffe;\n    }\n    return bitCount;\n  }\n  shiftedNumber = number << bitCount + 0x18;\n  bitCount = shiftedConstant + ((number >> (0x20 - (bitCount + 0x18) & 0xff)) - ((int)shiftedNumber >> 0x1f));\n  if ((shiftedNumber & 0x7fffffff) == 0) {\n    bitCount = bitCount & ~(shiftedNumber >> 0x1f);\n  }\n  return bitCount;\n}\n\n",
            "renaming": {
                "FUN_08000c3c": "count_bits_08000c3c",
                "param_1": "number",
                "uVar1": "bitCount",
                "uVar2": "shiftedNumber",
                "iVar3": "shiftedConstant",
                "uVar4": "result"
            },
            "calling": [
                "FUN_08002f28"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000c44": {
            "entrypoint": "0x08000c44",
            "current_name": "calculate_shifted_sum_08000c44",
            "code": "\nuint calculate_shifted_sum_08000c44(uint input_number)\n\n{\n  uint leading_zeros;\n  uint shift_count;\n  uint is_negative;\n  int intermediate_sum;\n  \n  is_negative = input_number & 0x80000000;\n  if ((int)is_negative < 0) {\n    input_number = -input_number;\n  }\n  if (input_number == 0) {\n    return 0;\n  }\n  leading_zeros = LZCOUNT(input_number);\n  shift_count = leading_zeros - 8;\n  intermediate_sum = ((is_negative | 0x4b000000) - 0x800000) + shift_count * -0x800000;\n  if (7 < leading_zeros) {\n    leading_zeros = 0 << (shift_count & 0xff);\n    is_negative = intermediate_sum + (input_number << (shift_count & 0xff)) +\n            (0U >> (0x20 - shift_count & 0xff)) + (uint)(0x7fffffff < leading_zeros);\n    if (leading_zeros == 0x80000000) {\n      is_negative = is_negative & 0xfffffffe;\n    }\n    return is_negative;\n  }\n  shift_count = input_number << leading_zeros + 0x18;\n  is_negative = intermediate_sum + ((input_number >> (0x20 - (leading_zeros + 0x18) & 0xff)) - ((int)shift_count >> 0x1f));\n  if ((shift_count & 0x7fffffff) == 0) {\n    is_negative = is_negative & ~(shift_count >> 0x1f);\n  }\n  return is_negative;\n}\n\n",
            "renaming": {
                "FUN_08000c44": "calculate_shifted_sum_08000c44",
                "param_1": "input_number",
                "uVar1": "leading_zeros",
                "uVar2": "shift_count",
                "uVar3": "is_negative",
                "iVar4": "intermediate_sum"
            },
            "calling": [
                "FUN_08002b48",
                "FUN_0800411c",
                "FUN_08002d88",
                "FUN_08002cb0",
                "FUN_0800483c",
                "FUN_08002bf0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000cec": {
            "entrypoint": "0x08000cec",
            "current_name": "floating_point_calculation_08000cec",
            "code": "\nuint floatingPointCalculation_08000cec(uint x,uint y,undefined4 z,uint w)\n\n{\n  longlong tempVar1;\n  uint result;\n  uint shift1;\n  int sum;\n  int shiftedSum;\n  uint productLow;\n  int shiftedDiff;\n  uint bitwiseResult;\n  bool flag1;\n  bool flag2;\n  \n  shift1 = x >> 0x17 & 0xff;\n  flag1 = shift1 == 0;\n  if (!flag1) {\n    w = y >> 0x17 & 0xff;\n    flag1 = w == 0;\n  }\n  if (!flag1) {\n    flag1 = shift1 == 0xff;\n  }\n  if (!flag1) {\n    flag1 = w == 0xff;\n  }\n  if (flag1) {\n    w = y >> 0x17 & 0xff;\n    if (shift1 == 0xff || w == 0xff) {\n      flag1 = x == 0 || x == 0x80000000;\n      result = y;\n      if (x != 0 && x != 0x80000000) {\n        flag1 = y == 0;\n        result = x;\n      }\n      if (!flag1) {\n        flag1 = y == 0x80000000;\n      }\n      bitwiseResult = result;\n      if (((flag1) || ((shift1 == 0xff && ((result & 0x7fffff) != 0)))) ||\n         ((w == 0xff && (bitwiseResult = y, (y & 0x7fffff) != 0)))) {\n        return bitwiseResult | 0x7fc00000;\n      }\n      result = result ^ y;\n      goto LAB_08000e3c;\n    }\n    flag1 = (x & 0x7fffffff) == 0;\n    if (!flag1) {\n      flag1 = (y & 0x7fffffff) == 0;\n    }\n    if (flag1) {\n      return (x ^ y) & 0x80000000;\n    }\n    flag1 = shift1 == 0;\n    result = x & 0x80000000;\n    while( true ) {\n      if (flag1) {\n        x = x << 1;\n        flag1 = (x & 0x800000) == 0;\n      }\n      if (!flag1) break;\n      shift1 = shift1 - 1;\n    }\n    x = x | result;\n    flag1 = w == 0;\n    result = y & 0x80000000;\n    while( true ) {\n      if (flag1) {\n        y = y << 1;\n        flag1 = (y & 0x800000) == 0;\n      }\n      if (!flag1) break;\n      w = w - 1;\n    }\n    y = y | result;\n  }\n  sum = shift1 + w;\n  bitwiseResult = x ^ y;\n  shift1 = x << 9;\n  flag1 = shift1 == 0;\n  if (!flag1) {\n    y = y << 9;\n    flag1 = y == 0;\n  }\n  if (flag1) {\n    if (shift1 == 0) {\n      y = y << 9;\n    }\n    result = bitwiseResult & 0x80000000 | x & 0x7fffff | y >> 9;\n    flag2 = SBORROW4(sum,0x7f);\n    shiftedSum = sum + -0x7f;\n    flag1 = shiftedSum == 0;\n    shiftedDiff = shiftedSum;\n    if (!flag1 && 0x7e < sum) {\n      flag2 = SBORROW4(0xff,shiftedSum);\n      shiftedDiff = 0xff - shiftedSum;\n      flag1 = shiftedSum == 0xff;\n    }\n    if (!flag1 && shiftedDiff < 0 == flag2) {\n      result = result | shiftedSum * 0x800000;\n    }\n    if (!flag1 && shiftedDiff < 0 == flag2) {\n      return result;\n    }\n    result = result | 0x800000;\n    productLow = 0;\n    flag2 = SBORROW4(shiftedSum,1);\n    bitwiseResult = sum - 0x80;\n    flag1 = bitwiseResult == 0;\n    shift1 = bitwiseResult;\n  }\n  else {\n    tempVar1 = (ulonglong)(shift1 >> 5 | 0x8000000) * (ulonglong)(y >> 5 | 0x8000000);\n    productLow = (uint)tempVar1;\n    result = (uint)((ulonglong)tempVar1 >> 0x20);\n    flag1 = result < 0x800000;\n    if (flag1) {\n      result = result << 1;\n    }\n    if (flag1) {\n      result = result | productLow >> 0x1f;\n      productLow = productLow << 1;\n    }\n    result = bitwiseResult & 0x80000000 | result;\n    bitwiseResult = (sum + -0x7f) - (uint)flag1;\n    flag2 = SBORROW4(bitwiseResult,0xfd);\n    flag1 = bitwiseResult == 0xfd;\n    shift1 = bitwiseResult - 0xfd;\n    if (bitwiseResult < 0xfe) {\n      result = result + bitwiseResult * 0x800000 + (uint)(0x7fffffff < productLow);\n      if (productLow == 0x80000000) {\n        result = result & 0xfffffffe;\n      }\n      return result;\n    }\n  }\n  if (flag1 || (int)shift1 < 0 != flag2) {\n    flag1 = (int)(bitwiseResult + 0x19) < 0;\n    if (bitwiseResult == 0xffffffe7 || flag1 != SCARRY4(bitwiseResult,0x19)) {\n      result = result & 0x80000000;\n    }\n    if (bitwiseResult != 0xffffffe7 && flag1 == SCARRY4(bitwiseResult,0x19)) {\n      shift1 = (result << 1) >> (-bitwiseResult & 0xff);\n      bitwiseResult = result << (bitwiseResult + 0x20 & 0xff);\n      shift1 = ((uint)((result & 0x80000000) != 0) << 0x1f | shift1 >> 1) + (uint)((byte)shift1 & 1);\n      if ((productLow | bitwiseResult << 1) == 0) {\n        shift1 = shift1 & ~(bitwiseResult >> 0x1f);\n      }\n      return shift1;\n    }\n    return result;\n  }\nLAB_08000e3c:\n  return result & 0x80000000 | 0x7f800000;\n}\n\n",
            "renaming": {
                "FUN_08000cec": "floating_point_calculation_08000cec",
                "param_1": "x",
                "param_2": "y",
                "param_3": "z",
                "param_4": "w",
                "lVar1": "tempVar1",
                "uVar2": "result",
                "uVar3": "shift1",
                "iVar4": "sum",
                "iVar5": "shiftedSum",
                "uVar6": "productLow",
                "iVar7": "shiftedDiff",
                "uVar8": "bitwiseResult",
                "bVar9": "flag1",
                "bVar10": "flag2"
            },
            "calling": [
                "FUN_08004a30",
                "FUN_08002b48",
                "FUN_08004a84",
                "FUN_08002d88",
                "FUN_08002cb0",
                "FUN_08003330",
                "FUN_0800483c",
                "FUN_08002f28",
                "FUN_08002bf0",
                "FUN_08002ec0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000e54": {
            "entrypoint": "0x08000e54",
            "current_name": "float_to_fixed_conversion_08000e54",
            "code": "\nuint floatToFixedConversion_08000e54(uint inputFloat,uint inputFloat2,undefined4 undefinedValue,uint roundingMode)\n\n{\n  uint shiftedFloat2;\n  uint shiftedFloat1;\n  int shiftDifference;\n  uint roundingOffset;\n  int threshold;\n  uint outputFloat;\n  bool isZero;\n  bool carryFlag;\n  bool overflowFlag;\n  \n  shiftedFloat1 = inputFloat >> 0x17 & 0xff;\n  isZero = shiftedFloat1 == 0;\n  if (!isZero) {\n    roundingMode = inputFloat2 >> 0x17 & 0xff;\n    isZero = roundingMode == 0;\n  }\n  if (!isZero) {\n    isZero = shiftedFloat1 == 0xff;\n  }\n  if (!isZero) {\n    isZero = roundingMode == 0xff;\n  }\n  if (isZero) {\n    roundingMode = inputFloat2 >> 0x17 & 0xff;\n    outputFloat = inputFloat;\n    if (shiftedFloat1 == 0xff) {\n      if (((inputFloat & 0x7fffff) != 0) || (outputFloat = inputFloat2, roundingMode == 0xff)) {\nLAB_08000e4a:\n        return outputFloat | 0x7fc00000;\n      }\n    }\n    else {\n      if (roundingMode == 0xff) {\n        outputFloat = inputFloat2;\n        if ((inputFloat2 & 0x7fffff) == 0) {\nLAB_08000e00:\n          return (inputFloat ^ inputFloat2) & 0x80000000;\n        }\n        goto LAB_08000e4a;\n      }\n      isZero = (inputFloat & 0x7fffffff) == 0;\n      if (!isZero) {\n        isZero = (inputFloat2 & 0x7fffffff) == 0;\n      }\n      if (!isZero) {\n        isZero = shiftedFloat1 == 0;\n        outputFloat = inputFloat & 0x80000000;\n        while( true ) {\n          if (isZero) {\n            inputFloat = inputFloat << 1;\n            isZero = (inputFloat & 0x800000) == 0;\n          }\n          if (!isZero) break;\n          shiftedFloat1 = shiftedFloat1 - 1;\n        }\n        inputFloat = inputFloat | outputFloat;\n        isZero = roundingMode == 0;\n        outputFloat = inputFloat2 & 0x80000000;\n        while( true ) {\n          if (isZero) {\n            inputFloat2 = inputFloat2 << 1;\n            isZero = (inputFloat2 & 0x800000) == 0;\n          }\n          if (!isZero) break;\n          roundingMode = roundingMode - 1;\n        }\n        inputFloat2 = inputFloat2 | outputFloat;\n        goto LAB_08000e6c;\n      }\n      if ((inputFloat & 0x7fffffff) == 0) {\n        if ((inputFloat2 & 0x7fffffff) != 0) goto LAB_08000e00;\n        goto LAB_08000e4a;\n      }\n    }\n    inputFloat = inputFloat ^ inputFloat2;\n  }\n  else {\nLAB_08000e6c:\n    shiftDifference = shiftedFloat1 - roundingMode;\n    if (inputFloat2 << 9 == 0) {\n      inputFloat = (inputFloat ^ inputFloat2) & 0x80000000 | inputFloat & 0x7fffff;\n      overflowFlag = SCARRY4(shiftDifference,0x7f);\n      threshold = shiftDifference + 0x7f;\n      isZero = threshold < 0;\n      carryFlag = threshold == 0;\n      if (!carryFlag && isZero == overflowFlag) {\n        overflowFlag = SBORROW4(0xff,threshold);\n        isZero = 0xff - threshold < 0;\n        carryFlag = threshold == 0xff;\n      }\n      if (!carryFlag && isZero == overflowFlag) {\n        inputFloat = inputFloat | threshold * 0x800000;\n      }\n      if (!carryFlag && isZero == overflowFlag) {\n        return inputFloat;\n      }\n      inputFloat = inputFloat | 0x800000;\n      shiftedFloat1 = 0;\n      carryFlag = SBORROW4(threshold,1);\n      roundingOffset = shiftDifference + 0x7e;\n      isZero = roundingOffset == 0;\n      outputFloat = roundingOffset;\n    }\n    else {\n      shiftedFloat2 = (inputFloat2 << 9) >> 4 | 0x10000000;\n      shiftedFloat1 = (inputFloat << 9) >> 4 | 0x10000000;\n      inputFloat = (inputFloat ^ inputFloat2) & 0x80000000;\n      isZero = shiftedFloat2 <= shiftedFloat1;\n      if (!isZero) {\n        shiftedFloat1 = shiftedFloat1 << 1;\n      }\n      roundingOffset = shiftDifference + 0x7d + (uint)isZero;\n      outputFloat = 0x800000;\n      do {\n        if (shiftedFloat2 <= shiftedFloat1) {\n          shiftedFloat1 = shiftedFloat1 - shiftedFloat2;\n          inputFloat = inputFloat | outputFloat;\n        }\n        isZero = shiftedFloat2 >> 1 <= shiftedFloat1;\n        if (isZero) {\n          shiftedFloat1 = shiftedFloat1 - (shiftedFloat2 >> 1);\n        }\n        if (isZero) {\n          inputFloat = inputFloat | outputFloat >> 1;\n        }\n        isZero = shiftedFloat2 >> 2 <= shiftedFloat1;\n        if (isZero) {\n          shiftedFloat1 = shiftedFloat1 - (shiftedFloat2 >> 2);\n        }\n        if (isZero) {\n          inputFloat = inputFloat | outputFloat >> 2;\n        }\n        isZero = shiftedFloat2 >> 3 <= shiftedFloat1;\n        if (isZero) {\n          shiftedFloat1 = shiftedFloat1 - (shiftedFloat2 >> 3);\n        }\n        if (isZero) {\n          inputFloat = inputFloat | outputFloat >> 3;\n        }\n        shiftedFloat1 = shiftedFloat1 * 0x10;\n        isZero = shiftedFloat1 == 0;\n        if (!isZero) {\n          outputFloat = outputFloat >> 4;\n          isZero = outputFloat == 0;\n        }\n      } while (!isZero);\n      carryFlag = SBORROW4(roundingOffset,0xfd);\n      isZero = roundingOffset == 0xfd;\n      outputFloat = roundingOffset - 0xfd;\n      if (roundingOffset < 0xfe) {\n        inputFloat = inputFloat + roundingOffset * 0x800000 + (uint)(shiftedFloat2 <= shiftedFloat1);\n        if (shiftedFloat1 - shiftedFloat2 == 0) {\n          inputFloat = inputFloat & 0xfffffffe;\n        }\n        return inputFloat;\n      }\n    }\n    if (isZero || (int)outputFloat < 0 != carryFlag) {\n      isZero = (int)(roundingOffset + 0x19) < 0;\n      if (roundingOffset == 0xffffffe7 || isZero != SCARRY4(roundingOffset,0x19)) {\n        inputFloat = inputFloat & 0x80000000;\n      }\n      if (roundingOffset == 0xffffffe7 || isZero != SCARRY4(roundingOffset,0x19)) {\n        return inputFloat;\n      }\n      outputFloat = (inputFloat << 1) >> (-roundingOffset & 0xff);\n      roundingOffset = inputFloat << (roundingOffset + 0x20 & 0xff);\n      outputFloat = ((uint)((inputFloat & 0x80000000) != 0) << 0x1f | outputFloat >> 1) + (uint)((byte)outputFloat & 1);\n      if ((shiftedFloat1 | roundingOffset << 1) == 0) {\n        outputFloat = outputFloat & ~(roundingOffset >> 0x1f);\n      }\n      return outputFloat;\n    }\n  }\n  return inputFloat & 0x80000000 | 0x7f800000;\n}\n\n",
            "renaming": {
                "FUN_08000e54": "float_to_fixed_conversion_08000e54",
                "param_1": "inputFloat",
                "param_2": "inputFloat2",
                "param_3": "undefinedValue",
                "param_4": "roundingMode",
                "uVar1": "shiftedFloat2",
                "uVar2": "shiftedFloat1",
                "iVar3": "shiftDifference",
                "uVar4": "roundingOffset",
                "iVar5": "threshold",
                "uVar6": "outputFloat",
                "bVar7": "isZero",
                "bVar8": "carryFlag",
                "bVar9": "overflowFlag"
            },
            "calling": [
                "FUN_0800411c",
                "FUN_08003330",
                "FUN_0800483c",
                "FUN_08002f28"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000f9c": {
            "entrypoint": "0x08000f9c",
            "current_name": "check_overflow_08000f9c",
            "code": "\nuint check_overflow_08000f9c(uint input_1,uint input_2)\n\n{\n  bool is_overflow;\n  uint double_input_1;\n  uint double_input_2;\n  uint combined_inputs;\n  bool is_zero;\n  \n  double_input_1 = input_1 * 2;\n  double_input_2 = input_2 * 2;\n  if (((int)double_input_1 >> 0x18 == -1 || (int)double_input_2 >> 0x18 == -1) &&\n     ((((int)double_input_1 >> 0x18 == -1 && ((input_1 & 0x7fffff) != 0)) ||\n      (((int)double_input_2 >> 0x18 == -1 && ((input_2 & 0x7fffff) != 0)))))) {\n    result 1;\n  }\n  combined_inputs = double_input_1 | input_2 & 0x7fffffff;\n  is_zero = combined_inputs == 0;\n  if (!is_zero) {\n    combined_inputs = input_1 ^ input_2;\n    is_zero = combined_inputs == 0;\n  }\n  is_overflow = -1 < (int)combined_inputs;\n  if (is_overflow) {\n    input_1 = double_input_1 + input_2 * -2;\n    is_zero = input_1 == 0;\n  }\n  if ((is_overflow && double_input_2 <= double_input_1) && !is_zero) {\n    input_1 = (int)input_2 >> 0x1f;\n  }\n  if (!is_overflow || double_input_2 > double_input_1) {\n    input_1 = ~((int)input_2 >> 0x1f);\n  }\n  if (!is_zero) {\n    input_1 = input_1 | 1;\n  }\n  result input_1;\n}\n\n",
            "renaming": {
                "FUN_08000f9c": "check_overflow_08000f9c",
                "param_1": "input_1",
                "param_2": "input_2",
                "bVar1": "is_overflow",
                "uVar2": "double_input_1",
                "uVar3": "double_input_2",
                "uVar4": "combined_inputs",
                "bVar5": "is_zero",
                "return": "result"
            },
            "calling": [
                "FUN_08001004"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000ffc": {
            "entrypoint": "0x08000ffc",
            "current_name": "copy_data_from_source_to_destination_08000ffc",
            "code": "\nvoid copyDataFromSourceToDestination_08000ffc(undefined4 destination,undefined4 source)\n\n{\n  FUN_08001004(source,destination);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000ffc": "copy_data_from_source_to_destination_08000ffc",
                "param_1": "destination",
                "param_2": "source"
            },
            "calling": [
                "FUN_08001050",
                "FUN_08001064"
            ],
            "called": [
                "FUN_08001004"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001004": {
            "entrypoint": "0x08001004",
            "current_name": "concatenate_params_08001004",
            "code": "\nundefined8 concatenateParams_08001004(undefined4 firstParam,undefined4 secondParam)\n\n{\n  FUN_08000f9c();\n  return CONCAT44(secondParam,firstParam);\n}\n\n",
            "renaming": {
                "FUN_08001004": "concatenate_params_08001004",
                "param_1": "firstParam",
                "param_2": "secondParam"
            },
            "calling": [
                "FUN_08001014",
                "FUN_08001028",
                "FUN_08000ffc"
            ],
            "called": [
                "FUN_08000f9c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001014": {
            "entrypoint": "0x08001014",
            "current_name": "check_if_initialized_08001014",
            "code": "\nbool check_if_initialized_08001014(void)\n\n{\n  char is_initialized;\n  \n  FUN_08001004();\n  return is_initialized != '\\0';\n}\n\n",
            "renaming": {
                "FUN_08001014": "check_if_initialized_08001014",
                "in_ZR": "is_initialized"
            },
            "calling": [
                "FUN_08003330"
            ],
            "called": [
                "FUN_08001004"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001028": {
            "entrypoint": "0x08001028",
            "current_name": "check_if_null_terminated_08001028",
            "code": "\nbool check_if_null_terminated_08001028(void)\n\n{\n  char input_character;\n  \n  FUN_08001004();\n  return input_character == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08001028": "check_if_null_terminated_08001028",
                "in_CY": "input_character"
            },
            "calling": [
                "FUN_08004a84",
                "FUN_08002ee8",
                "FUN_0800483c"
            ],
            "called": [
                "FUN_08001004"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001050": {
            "entrypoint": "0x08001050",
            "current_name": "check_carry_and_zero_08001050",
            "code": "\nbool check_Carry_and_Zero_08001050(void)\n\n{\n  undefined is_Zero_Flag_Set;\n  undefined is_Carry_Flag_Set;\n  \n  FUN_08000ffc();\n  return !(bool)is_Carry_Flag_Set || (bool)is_Zero_Flag_Set;\n}\n\n",
            "renaming": {
                "FUN_08001050": "check_carry_and_zero_08001050",
                "in_ZR": "is_Zero_Flag_Set",
                "in_CY": "is_Carry_Flag_Set"
            },
            "calling": [
                "FUN_08002ee8"
            ],
            "called": [
                "FUN_08000ffc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001064": {
            "entrypoint": "0x08001064",
            "current_name": "is_null_terminated_08001064",
            "code": "\nbool is_null_terminated_08001064(void)\n\n{\n  char input_char;\n  \n  FUN_08000ffc();\n  return input_char == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08001064": "is_null_terminated_08001064",
                "in_CY": "input_char"
            },
            "calling": [
                "FUN_08004a84",
                "FUN_0800483c"
            ],
            "called": [
                "FUN_08000ffc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001078": {
            "entrypoint": "0x08001078",
            "current_name": "extract_signed_int_08001078",
            "code": "\nuint extractSignedInt_08001078(uint input)\n\n{\n  uint shifted;\n  uint difference;\n  \n  if (input << 1 < 0x7f000000) {\n    return 0;\n  }\n  shifted = (input << 1) >> 0x18;\n  difference = 0x9e - shifted;\n  if (shifted < 0x9f && difference != 0) {\n    shifted = (input << 8 | 0x80000000) >> (difference & 0xff);\n    if ((input & 0x80000000) != 0) {\n      shifted = -shifted;\n    }\n    return shifted;\n  }\n  if ((difference == 0xffffff9f) && ((input & 0x7fffff) != 0)) {\n    return 0;\n  }\n  input = input & 0x80000000;\n  if (input == 0) {\n    input = 0x7fffffff;\n  }\n  return input;\n}\n\n",
            "renaming": {
                "FUN_08001078": "extract_signed_int_08001078",
                "param_1": "input",
                "uVar1": "shifted",
                "uVar2": "difference"
            },
            "calling": [
                "FUN_0800426c",
                "FUN_0800411c",
                "FUN_08002f28"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080010c4": {
            "entrypoint": "0x080010c4",
            "current_name": "check_parameter_080010c4",
            "code": "\nuint check_parameter_080010c4(uint input_parameter)\n\n{\n  uint result;\n  \n  if (((input_parameter & 0x80000000) != 0) || (input_parameter << 1 < 0x7f000000)) {\n    return 0;\n  }\n  result = 0x9e - ((input_parameter << 1) >> 0x18);\n  if (-1 < (int)result) {\n    return (input_parameter << 8 | 0x80000000) >> (result & 0xff);\n  }\n  if ((result == 0xffffff9f) && ((input_parameter & 0x7fffff) != 0)) {\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080010c4": "check_parameter_080010c4",
                "param_1": "input_parameter",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08004a84"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001104": {
            "entrypoint": "0x08001104",
            "current_name": "initialize_and_print_08001104",
            "code": "\nundefined4 initializeAndPrint_08001104(undefined4 input)\n\n{\n  uint timeInMilliseconds;\n  \n  timeInMilliseconds = FUN_08002214();\n  FUN_08001214(timeInMilliseconds / 1000);\n  FUN_08001194(0xffffffff,input,0);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001104": "initialize_and_print_08001104",
                "param_1": "input",
                "uVar1": "timeInMilliseconds"
            },
            "calling": [
                "FUN_0800209c",
                "FUN_08001128"
            ],
            "called": [
                "FUN_08002214",
                "FUN_08001194",
                "FUN_08001214"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001128": {
            "entrypoint": "0x08001128",
            "current_name": "set_flag_and_call_functions_08001128",
            "code": "\n\n\nundefined4 setFlagAndCallFunctions_08001128(void)\n\n{\n  _DAT_40022000 = _DAT_40022000 | 0x10;\n  FUN_08001170(3);\n  FUN_08001104(0);\n  FUN_08004ccc();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001128": "set_flag_and_call_functions_08001128"
            },
            "calling": [
                "FUN_0800458c"
            ],
            "called": [
                "FUN_08001170",
                "FUN_08001104",
                "FUN_08004ccc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800114c": {
            "entrypoint": "0x0800114c",
            "current_name": "increment_data_counter_0800114c",
            "code": "\nvoid incrementDataCounter_0800114c(void)\n\n{\n  DAT_20000244 = DAT_20000244 + 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800114c": "increment_data_counter_0800114c"
            },
            "calling": [
                "FUN_080041ae"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800115c": {
            "entrypoint": "0x0800115c",
            "current_name": "get_data_0800115c",
            "code": "\nundefined4 get_data_0800115c(void)\n\n{\n  return DAT_20000244;\n}\n\n",
            "renaming": {
                "FUN_0800115c": "get_data_0800115c"
            },
            "calling": [
                "FUN_08001530",
                "thunk_FUN_0800115c",
                "FUN_08001b58",
                "FUN_08004c18",
                "FUN_0800209c",
                "FUN_08001828",
                "FUN_08001938",
                "FUN_080014e2",
                "thunk_FUN_0800115c",
                "FUN_080015e8",
                "FUN_080016f4",
                "FUN_08001460"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001168": {
            "entrypoint": "0x08001168",
            "current_name": "FUNC_08001168",
            "code": "\nvoid FUNC_08001168(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001168": "FUNC_08001168"
            },
            "calling": [
                "FUN_08001b58",
                "thunk_FUN_08001168"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08001170": {
            "entrypoint": "0x08001170",
            "current_name": "configure_memory_access_08001170",
            "code": "\n\n\nvoid configure_memory_access_08001170(uint access_level)\n\n{\n  _DAT_e000ed0c = _DAT_e000ed0c & 0xf8ff | 0x5fa0000 | (access_level & 7) << 8;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001170": "configure_memory_access_08001170",
                "param_1": "access_level"
            },
            "calling": [
                "FUN_08001128",
                "FUN_08004ccc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001194": {
            "entrypoint": "0x08001194",
            "current_name": "update_memory_08001194",
            "code": "\n\n\nvoid updateMemory_08001194(uint address,uint data,uint flags)\n\n{\n  undefined shiftedData;\n  uint shiftAmount;\n  uint tempShiftAmount;\n  uint adjustedShiftAmount;\n  \n  tempShiftAmount = (uint)(_DAT_e000ed0c << 0x15) >> 0x1d;\n  shiftAmount = 7 - tempShiftAmount;\n  adjustedShiftAmount = tempShiftAmount + 4;\n  if (3 < shiftAmount) {\n    shiftAmount = 4;\n  }\n  if (adjustedShiftAmount < 7) {\n    tempShiftAmount = 0;\n  }\n  shiftAmount = (1 << (shiftAmount & 0xff)) - 1;\n  if (6 < adjustedShiftAmount) {\n    tempShiftAmount = tempShiftAmount - 3;\n  }\n  shiftedData = (undefined)\n          ((flags & (1 << (tempShiftAmount & 0xff)) - 1U | (data & shiftAmount) << (tempShiftAmount & 0xff)) << 4);\n  if (-1 < (int)address) {\n    tempShiftAmount = address + 0xe000e100;\n  }\n  else {\n    shiftAmount = 0xe000ed14;\n    tempShiftAmount = address & 0xf;\n  }\n  if (-1 < (int)address) {\n    *(undefined *)(tempShiftAmount + 0x300) = shiftedData;\n  }\n  else {\n    *(undefined *)(shiftAmount + tempShiftAmount) = shiftedData;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001194": "update_memory_08001194",
                "param_1": "address",
                "param_2": "data",
                "param_3": "flags",
                "uVar1": "shiftedData",
                "uVar2": "shiftAmount",
                "uVar3": "tempShiftAmount",
                "uVar4": "adjustedShiftAmount"
            },
            "calling": [
                "FUN_08004e7c",
                "FUN_08001104",
                "FUN_08004514",
                "FUN_08004ccc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080011fc": {
            "entrypoint": "0x080011fc",
            "current_name": "set_bit_at_index_080011fc",
            "code": "\nvoid setBitAtIndex_080011fc(uint index)\n\n{\n  *(int *)((index >> 5) * 4 + -0x1fff1f00) = 1 << (index & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080011fc": "set_bit_at_index_080011fc",
                "param_1": "index"
            },
            "calling": [
                "FUN_08004e7c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001214": {
            "entrypoint": "0x08001214",
            "current_name": "initialize_data_08001214",
            "code": "\n\n\nundefined4 initializeData_08001214(int input)\n\n{\n  if (input - 1U < 0x1000000) {\n    _DAT_e000e014 = input - 1U;\n    DAT_e000ed23 = 0xf0;\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08001214": "initialize_data_08001214",
                "param_1": "input"
            },
            "calling": [
                "FUN_08001104",
                "FUN_08004514"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001240": {
            "entrypoint": "0x08001240",
            "current_name": "set_flag_08001240",
            "code": "\n\n\nvoid setFlag_08001240(int flagValue)\n\n{\n  if (flagValue == 4) {\n    _DAT_e000e010 = _DAT_e000e010 | 4;\n  }\n  else {\n    _DAT_e000e010 = _DAT_e000e010 & 0xfffffffb;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001240": "set_flag_08001240",
                "param_1": "flagValue"
            },
            "calling": [
                "FUN_08004514"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001258": {
            "entrypoint": "0x08001258",
            "current_name": "FUNC_08001258",
            "code": "\nvoid FUNC_08001258(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001258": "FUNC_08001258"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08001264": {
            "entrypoint": "0x08001264",
            "current_name": "update_configuration_08001264",
            "code": "\n\n\nvoid updateConfiguration_08001264(uint *address,uint *configData)\n\n{\n  uint newValue;\n  uint bitMask;\n  uint dataType;\n  int index;\n  uint bitIndex;\n  uint bitValue;\n  uint specialDataType;\n  uint *pointer;\n  int offset;\n  \n  newValue = 0;\n  bitIndex = 0;\n  do {\n    bitValue = 1 << (bitIndex & 0xff);\n    bitMask = bitValue & *configData;\n    if (bitValue == bitMask) {\n      dataType = configData[1];\n      if (dataType == 0x12) {\n        newValue = configData[3] + 0xc;\n      }\n      else if (dataType < 0x13) {\n        if (dataType == 2) {\n          newValue = configData[3] + 8;\n        }\n        else if (dataType < 3) {\n          if (dataType == 0) goto LAB_080013be;\n          if (dataType == 1) {\n            newValue = configData[3];\n          }\n        }\n        else if (dataType == 3) {\n          newValue = 0;\n        }\n        else if (dataType == 0x11) {\n          newValue = configData[3] + 4;\n        }\n      }\n      else {\n        if (dataType != 0x10210000) {\n          if (dataType < 0x10210001) {\n            if (dataType != 0x10110000) {\n              specialDataType = 0x10120000;\nLAB_080013b8:\n              if (dataType != specialDataType) goto LAB_080012a8;\n            }\n          }\n          else if ((dataType != 0x10310000) && (dataType != 0x10320000)) {\n            specialDataType = 0x10220000;\n            goto LAB_080013b8;\n          }\n        }\nLAB_080013be:\n        newValue = configData[2];\n        if (newValue == 0) {\n          newValue = 4;\n        }\n        else {\n          if (newValue == 1) {\n            address[4] = bitValue;\n          }\n          if (newValue != 1) {\n            address[5] = bitValue;\n          }\n          newValue = 8;\n        }\n      }\nLAB_080012a8:\n      if (bitMask < 0x100) {\n        bitValue = *address;\n        dataType = bitIndex << 2;\n        pointer = address;\n      }\n      else {\n        bitValue = address[1];\n        dataType = (bitIndex + 0x3ffffff8) * 4;\n      }\n      if (0xff < bitMask) {\n        pointer = address + 1;\n      }\n      *pointer = bitValue & ~(0xf << (dataType & 0xff)) | newValue << (dataType & 0xff);\n      pointer = (uint *)configData[1];\n      if (((uint)pointer & 0x10000000) != 0) {\n        _DAT_40021018 = _DAT_40021018 | 1;\n        offset = (bitIndex & 3) << 2;\n        if (address == (uint *)0x40010800) {\n          index = 0;\n        }\n        else if (address == (uint *)0x40010c00) {\n          index = 1;\n        }\n        else if (address == (uint *)0x40011000) {\n          index = 2;\n        }\n        else if (address == (uint *)0x40011400) {\n          index = 3;\n        }\n        else {\n          index = 4;\n        }\n        *(uint *)((bitIndex & 0xfffffffc) + 0x40010008) =\n             index << offset | *(uint *)((bitIndex & 0xfffffffc) + 0x40010008) & ~(0xf << offset);\n        if (((uint)pointer & 0x10000) == 0) {\n          _DAT_40010400 = _DAT_40010400 & ~bitMask;\n        }\n        else {\n          _DAT_40010400 = _DAT_40010400 | bitMask;\n        }\n        if (((uint)pointer & 0x20000) == 0) {\n          _DAT_40010404 = _DAT_40010404 & ~bitMask;\n        }\n        else {\n          _DAT_40010404 = _DAT_40010404 | bitMask;\n        }\n        if (((uint)pointer & 0x100000) == 0) {\n          _DAT_40010408 = _DAT_40010408 & ~bitMask;\n        }\n        else {\n          _DAT_40010408 = _DAT_40010408 | bitMask;\n        }\n        if (((uint)pointer & 0x200000) == 0) {\n          _DAT_4001040c = _DAT_4001040c & ~bitMask;\n        }\n        else {\n          _DAT_4001040c = bitMask | _DAT_4001040c;\n        }\n      }\n    }\n    bitIndex = bitIndex + 1;\n    if (bitIndex == 0x10) {\n      return;\n    }\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08001264": "update_configuration_08001264",
                "param_1": "address",
                "param_2": "configData",
                "uVar1": "newValue",
                "uVar2": "bitMask",
                "uVar3": "dataType",
                "iVar4": "index",
                "uVar5": "bitIndex",
                "uVar6": "bitValue",
                "uVar7": "specialDataType",
                "unaff_r10": "pointer",
                "iVar8": "offset"
            },
            "calling": [
                "FUN_08004e14",
                "FUN_08004e7c",
                "FUN_08004d48",
                "FUN_0800458c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001424": {
            "entrypoint": "0x08001424",
            "current_name": "set_param_value_08001424",
            "code": "\nvoid setParamValue_08001424(int objectAddress,int value,int flag)\n\n{\n  if (flag == 0) {\n    value = value << 0x10;\n  }\n  *(int *)(objectAddress + 0x10) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001424": "set_param_value_08001424",
                "param_1": "objectAddress",
                "param_2": "value",
                "param_3": "flag"
            },
            "calling": [
                "FUN_08004490",
                "FUN_08003f3c",
                "FUN_0800458c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800142e": {
            "entrypoint": "0x0800142e",
            "current_name": "update_param_bitwise_xor_0800142e",
            "code": "\nvoid updateParamBitwiseXOR_0800142e(int paramPtr,uint paramValue)\n\n{\n  *(uint *)(paramPtr + 0xc) = paramValue ^ *(uint *)(paramPtr + 0xc);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800142e": "update_param_bitwise_xor_0800142e",
                "param_1": "paramPtr",
                "param_2": "paramValue"
            },
            "calling": [
                "FUN_08004490"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001436": {
            "entrypoint": "0x08001436",
            "current_name": "check_flag_status_08001436",
            "code": "\nundefined4 checkFlagStatus_08001436(int *flagPointer)\n\n{\n  int flagValue;\n  \n  flagValue = *flagPointer;\n  if ((*(uint *)(flagValue + 0x14) & 0x400) != 0) {\n    *(uint *)(flagValue + 0x14) = *(uint *)(flagValue + 0x14) & 0xfffffbff;\n    errorCode = 4;\n    *(undefined *)((int)flagPointer + 0x35) = 0x20;\n    *(undefined *)(flagPointer + 0xd) = 0;\n    return 1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001436": "check_flag_status_08001436",
                "param_1": "flagPointer",
                "iVar1": "flagValue",
                "param_1[0xe]": "errorCode"
            },
            "calling": [
                "FUN_080014e2"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001460": {
            "entrypoint": "0x08001460",
            "current_name": "check_param_validity_08001460",
            "code": "\nundefined4 checkParamValidity_08001460(uint **paramArray,uint paramValue,uint timeout)\n\n{\n  int result;\n  int currentResult;\n  uint value;\n  uint *ptr;\n  \n  result = FUN_0800115c();\n  do {\n    ptr = *paramArray;\n    if ((paramValue << 8) >> 0x18 == 1) {\n      value = ptr[5];\n    }\n    else {\n      value = ptr[6];\n    }\n    if ((paramValue & 0xffff & ~value) == 0) {\n      return 0;\n    }\n    if ((int)(ptr[5] << 0x15) < 0) {\n      *ptr = *ptr | 0x200;\n      ptr[5] = ptr[5] & 0xfffffbff;\n      paramArray[0xe] = (uint *)0x4;\n      *(undefined *)((int)paramArray + 0x35) = 0x20;\n      *(undefined *)(paramArray + 0xd) = 0;\n      return 1;\n    }\n  } while ((timeout == 0xffffffff) ||\n          ((timeout != 0 && (currentResult = FUN_0800115c(), (uint)(currentResult - result) <= timeout))));\n  *(undefined *)((int)paramArray + 0x35) = 0x20;\n  *(undefined *)(paramArray + 0xd) = 0;\n  return 3;\n}\n\n",
            "renaming": {
                "FUN_08001460": "check_param_validity_08001460",
                "param_1": "paramArray",
                "param_2": "paramValue",
                "param_3": "timeout",
                "iVar1": "result",
                "iVar2": "currentResult",
                "uVar3": "value",
                "puVar4": "ptr"
            },
            "calling": [
                "FUN_08001530",
                "FUN_080015e8"
            ],
            "called": [
                "FUN_0800115c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080014e2": {
            "entrypoint": "0x080014e2",
            "current_name": "check_validity_080014e2",
            "code": "\nundefined4 checkValidity_080014e2(int *ptrArray,uint numElements)\n\n{\n  int initialValue;\n  int returnValue;\n  \n  initialValue = FUN_0800115c();\n  while( true ) {\n    if (*(int *)(*ptrArray + 0x14) << 0x18 < 0) {\n      return 0;\n    }\n    returnValue = FUN_08001436(ptrArray);\n    if (returnValue != 0) break;\n    if ((numElements != 0xffffffff) &&\n       ((numElements == 0 || (returnValue = FUN_0800115c(), numElements < (uint)(returnValue - initialValue))))) {\n      ptrArray[0xe] = ptrArray[0xe] | 0x20;\n      *(undefined *)((int)ptrArray + 0x35) = 0x20;\n      *(undefined *)(ptrArray + 0xd) = 0;\n      return 3;\n    }\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080014e2": "check_validity_080014e2",
                "param_1": "ptrArray",
                "param_2": "numElements",
                "iVar1": "initialValue",
                "iVar2": "returnValue"
            },
            "calling": [
                "FUN_08001530",
                "FUN_08001828",
                "FUN_080015e8"
            ],
            "called": [
                "FUN_0800115c",
                "FUN_08001436"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001530": {
            "entrypoint": "0x08001530",
            "current_name": "process_data_08001530",
            "code": "\nundefined4 processData_08001530(uint **data,uint value1,uint value2,int flag,uint param)\n\n{\n  int result1;\n  int result2;\n  uint *ptr;\n  uint **ptr_ptr;\n  uint temp1;\n  uint temp2;\n  \n  **data = **data | 0x100;\n  ptr_ptr = data;\n  temp1 = value1;\n  temp2 = value2;\n  result1 = FUN_0800115c();\n  do {\n    ptr = *data;\n    do {\n      if ((int)(ptr[5] << 0x1f) < 0) {\n        ptr[4] = value1 & 0xfe;\n        result1 = FUN_08001460(data,0x10002,param,ptr,ptr_ptr,temp1,temp2);\n        if (result1 == 0) {\n          result1 = FUN_080014e2(data,param,(*data)[5],(*data)[6]);\n          if (result1 == 0) {\n            ptr = *data;\n            if (flag == 1) {\nLAB_080015ca:\n              ptr[4] = value2 & 0xff;\n              return 0;\n            }\n            ptr[4] = value2 >> 8;\n            result1 = FUN_080014e2(data,param);\n            if (result1 == 0) {\n              ptr = *data;\n              goto LAB_080015ca;\n            }\n          }\n          if (data[0xe] != (uint *)0x4) {\n            return 3;\n          }\n          **data = **data | 0x200;\n        }\n        else if (data[0xe] != (uint *)0x4) {\n          return 3;\n        }\n        return 1;\n      }\n    } while (param == 0xffffffff);\n    if ((param == 0) || (result2 = FUN_0800115c(), param < (uint)(result2 - result1))) {\n      *(undefined *)((int)data + 0x35) = 0x20;\n      *(undefined *)(data + 0xd) = 0;\n      return 3;\n    }\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08001530": "process_data_08001530",
                "param_1": "data",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "flag",
                "param_5": "param",
                "iVar1": "result1",
                "iVar2": "result2",
                "puVar3": "ptr",
                "ppuVar4": "ptr_ptr",
                "uVar5": "temp1",
                "uVar6": "temp2"
            },
            "calling": [
                "FUN_08001828"
            ],
            "called": [
                "FUN_080014e2",
                "FUN_0800115c",
                "FUN_08001460"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080015e8": {
            "entrypoint": "0x080015e8",
            "current_name": "update_status_080015e8",
            "code": "\nundefined4 updateStatus_080015e8(uint **ptrList,uint value1,uint value2,int flag,uint limit)\n\n{\n  int result1;\n  int result2;\n  uint *ptr;\n  uint **ptrPtr;\n  uint val1;\n  uint val2;\n  \n  ptr = *ptrList;\n  *ptr = *ptr | 0x400;\n  *ptr = *ptr | 0x100;\n  ptrPtr = ptrList;\n  val1 = value1;\n  val2 = value2;\n  result1 = FUN_0800115c();\nLAB_0800160e:\n  ptr = *ptrList;\n  while (-1 < (int)(ptr[5] << 0x1f)) {\n    if (limit != 0xffffffff) goto code_r0x08001658;\n  }\n  ptr[4] = value1 & 0xfe;\n  result1 = FUN_08001460(ptrList,0x10002,limit,ptr,ptrPtr,val1,val2);\n  if (result1 != 0) goto LAB_080016ba;\n  result1 = FUN_080014e2(ptrList,limit,(*ptrList)[5],(*ptrList)[6]);\n  if (result1 == 0) {\n    ptr = *ptrList;\n    if (flag != 1) {\n      ptr[4] = value2 >> 8;\n      result1 = FUN_080014e2(ptrList,limit);\n      if (result1 != 0) goto LAB_08001642;\n      ptr = *ptrList;\n    }\n    ptr[4] = value2 & 0xff;\n    result1 = FUN_080014e2(ptrList,limit);\n    if (result1 == 0) {\n      **ptrList = **ptrList | 0x100;\n      result1 = FUN_0800115c();\n      do {\n        do {\n          if ((int)((*ptrList)[5] << 0x1f) < 0) {\n            (*ptrList)[4] = value1 & 0xff | 1;\n            result1 = FUN_08001460(ptrList,0x10002,limit);\n            if (result1 == 0) {\n              return 0;\n            }\nLAB_080016ba:\n            if (ptrList[0xe] != (uint *)0x4) {\n              return 3;\n            }\n            return 1;\n          }\n        } while (limit == 0xffffffff);\n      } while ((limit != 0) && (result2 = FUN_0800115c(), (uint)(result2 - result1) <= limit));\nLAB_0800165a:\n      *(undefined *)((int)ptrList + 0x35) = 0x20;\n      *(undefined *)(ptrList + 0xd) = 0;\n      return 3;\n    }\n  }\nLAB_08001642:\n  if (ptrList[0xe] == (uint *)0x4) {\n    **ptrList = **ptrList | 0x200;\n    return 1;\n  }\n  return 3;\ncode_r0x08001658:\n  if ((limit == 0) || (result2 = FUN_0800115c(), limit < (uint)(result2 - result1)))\n  goto LAB_0800165a;\n  goto LAB_0800160e;\n}\n\n",
            "renaming": {
                "FUN_080015e8": "update_status_080015e8",
                "param_1": "ptrList",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "flag",
                "param_5": "limit",
                "iVar1": "result1",
                "iVar2": "result2",
                "puVar3": "ptr",
                "ppuVar4": "ptrPtr",
                "uVar5": "val1",
                "uVar6": "val2"
            },
            "calling": [
                "FUN_08001938"
            ],
            "called": [
                "FUN_0800115c",
                "FUN_080014e2",
                "FUN_08001460"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080016f4": {
            "entrypoint": "0x080016f4",
            "current_name": "check_validity_and_flag_080016f4",
            "code": "\nundefined4 checkValidityAndFlag_080016f4(int *dataPointer,uint dataSize)\n\n{\n  int initialValue;\n  int currentValue;\n  \n  initialValue = FUN_0800115c();\n  while( true ) {\n    currentValue = *dataPointer;\n    if ((*(uint *)(currentValue + 0x14) & 0x40) != 0) {\n      return 0;\n    }\n    if (*(int *)(currentValue + 0x14) << 0x1b < 0) break;\n    if ((dataSize == 0) || (currentValue = FUN_0800115c(), dataSize < (uint)(currentValue - initialValue))) {\n      dataPointer[0xe] = dataPointer[0xe] | 0x20;\n      *(undefined *)((int)dataPointer + 0x35) = 0x20;\n      *(undefined *)(dataPointer + 0xd) = 0;\n      return 3;\n    }\n  }\n  *(uint *)(currentValue + 0x14) = *(uint *)(currentValue + 0x14) & 0xffffffef;\n  dataPointer[0xe] = 0;\n  *(undefined *)(dataPointer + 0xd) = 0;\n  *(undefined *)((int)dataPointer + 0x35) = 0x20;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080016f4": "check_validity_and_flag_080016f4",
                "param_1": "dataPointer",
                "param_2": "dataSize",
                "iVar1": "initialValue",
                "iVar2": "currentValue"
            },
            "calling": [
                "FUN_08001938"
            ],
            "called": [
                "FUN_0800115c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001754": {
            "entrypoint": "0x08001754",
            "current_name": "initialize_data_08001754",
            "code": "\nundefined4 initializeData_08001754(uint **dataPtr)\n\n{\n  uint quotient;\n  uint remainder;\n  uint *ptrA;\n  uint *ptrB;\n  uint *ptrC;\n  uint tempValue;\n  undefined8 result;\n  \n  if (dataPtr != (uint **)0x0) {\n    if (*(char *)((int)dataPtr + 0x35) == '\\0') {\n      *(undefined *)(dataPtr + 0xd) = 0;\n      FUN_08004d48();\n    }\n    *(undefined *)((int)dataPtr + 0x35) = 0x24;\n    **dataPtr = **dataPtr & 0xfffffffe;\n    result = FUN_08002220();\n    remainder = (uint)((ulonglong)result >> 0x20);\n    quotient = (uint)result;\n    ptrB = dataPtr[1];\n    tempValue = quotient / 1000000;\n    if ((uint *)0x186a0 < ptrB) {\n      remainder = 300;\n    }\n    ptrA = *dataPtr;\n    if ((uint *)0x186a0 < ptrB) {\n      remainder = tempValue * remainder;\n    }\n    ptrA[1] = tempValue;\n    if ((uint *)0x186a0 < ptrB) {\n      tempValue = remainder / 1000;\n    }\n    ptrA[8] = tempValue + 1;\n    if (ptrB < (uint *)0x186a1) {\n      quotient = quotient / (uint)((int)ptrB << 1);\n      if ((quotient & 0xfff) < 4) {\n        quotient = 4;\n      }\n    }\n    else {\n      if (dataPtr[2] == (uint *)0x0) {\n        quotient = quotient / (uint)((int)ptrB * 3) | 0x8000;\n      }\n      else {\n        quotient = quotient / (uint)((int)ptrB * 0x19) | 0xc000;\n      }\n      if ((quotient & 0xfff) == 0) {\n        quotient = 1;\n      }\n    }\n    ptrB = dataPtr[8];\n    ptrC = dataPtr[7];\n    ptrA[7] = quotient;\n    *ptrA = (uint)ptrC | (uint)ptrB;\n    ptrA[2] = (uint)dataPtr[4] | (uint)dataPtr[3];\n    ptrA[3] = (uint)dataPtr[5] | (uint)dataPtr[6];\n    *ptrA = *ptrA | 1;\n    dataPtr[0xe] = (uint *)0x0;\n    *(undefined *)((int)dataPtr + 0x35) = 0x20;\n    *(undefined *)((int)dataPtr + 0x36) = 0;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08001754": "initialize_data_08001754",
                "param_1": "dataPtr",
                "uVar1": "quotient",
                "uVar2": "remainder",
                "puVar3": "ptrA",
                "puVar4": "ptrB",
                "puVar5": "ptrC",
                "uVar6": "tempValue",
                "uVar7": "result"
            },
            "calling": [
                "FUN_0800458c"
            ],
            "called": [
                "FUN_08002220",
                "FUN_08004d48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001828": {
            "entrypoint": "0x08001828",
            "current_name": "process_data_08001828",
            "code": "\nundefined4\nprocessData_08001828(uint **data,undefined4 arg2,undefined4 arg3,undefined4 arg4,byte *input,\n            short inputSize,undefined4 arg7)\n\n{\n  int startValue;\n  int endValue;\n  uint *ptr;\n  uint tempVar;\n  \n  if (*(char *)((int)data + 0x35) == ' ') {\n    if (input == (byte *)0x0) {\n      return 1;\n    }\n    if (inputSize == 0) {\n      return 1;\n    }\n    startValue = FUN_0800115c();\n    do {\n      ptr = *data;\n      if ((~ptr[6] & 2) != 0) {\n        if (*(char *)(data + 0xd) == '\\x01') {\n          return 2;\n        }\n        tempVar = *ptr;\n        *(undefined *)(data + 0xd) = 1;\n        *ptr = tempVar & 0xfffff7ff;\n        *(undefined *)((int)data + 0x35) = 0x21;\n        *(undefined *)((int)data + 0x36) = 0x40;\n        data[0xe] = (uint *)0x0;\n        startValue = FUN_08001530(data,arg2,arg3,arg4,arg7);\n        if (startValue != 0) {\n          *(undefined *)(data + 0xd) = 0;\n          if (data[0xe] == (uint *)0x4) {\n            return 1;\n          }\n          return 3;\n        }\n        goto LAB_080018e2;\n      }\n      endValue = FUN_0800115c();\n    } while ((uint)(endValue - startValue) < 0x2711);\n    *(undefined *)(data + 0xd) = 0;\n    *(undefined *)((int)data + 0x35) = 0x20;\n  }\n  return 2;\n  while (inputSize != 0) {\nLAB_080018e2:\n    startValue = FUN_080014e2(data,arg7);\n    if (startValue != 0) goto LAB_080018ee;\n    ptr = *data;\n    ptr[4] = (uint)*input;\n    if ((int)(ptr[5] << 0x1d) < 0) {\n      if ((short)(inputSize + -1) == 0) break;\n      inputSize = inputSize + -2;\n      ptr[4] = (uint)input[1];\n      input = input + 2;\n    }\n    else {\n      input = input + 1;\n      inputSize = inputSize + -1;\n    }\n  }\n  startValue = FUN_080014e2(data,arg7);\n  if (startValue == 0) {\n    **data = **data | 0x200;\n    *(undefined *)(data + 0xd) = 0;\n    *(undefined *)((int)data + 0x35) = 0x20;\n    *(undefined *)((int)data + 0x36) = 0;\n    return 0;\n  }\nLAB_080018ee:\n  if (data[0xe] == (uint *)0x4) {\n    **data = **data | 0x200;\n    return 1;\n  }\n  return 3;\n}\n\n",
            "renaming": {
                "FUN_08001828": "process_data_08001828",
                "param_1": "data",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "param_5": "input",
                "param_6": "inputSize",
                "param_7": "arg7",
                "iVar1": "startValue",
                "iVar2": "endValue",
                "puVar3": "ptr",
                "uVar4": "tempVar"
            },
            "calling": [
                "FUN_0800403c"
            ],
            "called": [
                "FUN_08001530",
                "FUN_0800115c",
                "FUN_080014e2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001938": {
            "entrypoint": "0x08001938",
            "current_name": "execute_operation_08001938",
            "code": "\nundefined4\nexecuteOperation_08001938(uint **operationParams,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n            undefined *result,ushort operationType,uint timeout)\n\n{\n  undefined *ptr1;\n  int startTime;\n  int currentTime;\n  uint *currentPtr;\n  uint var5;\n  undefined *ptr2;\n  bool isNegative;\n  \n  if (*(char *)((int)operationParams + 0x35) != ' ') {\n    return 2;\n  }\n  if (result == (undefined *)0x0) {\n    return 1;\n  }\n  if (operationType == 0) {\n    return 1;\n  }\n  startTime = FUN_0800115c();\n  while (currentPtr = *operationParams, (~currentPtr[6] & 2) == 0) {\n    currentTime = FUN_0800115c();\n    if (10000 < (uint)(currentTime - startTime)) {\n      *(undefined *)(operationParams + 0xd) = 0;\n      *(undefined *)((int)operationParams + 0x35) = 0x20;\n      return 2;\n    }\n  }\n  if (*(char *)(operationParams + 0xd) == '\\x01') {\n    return 2;\n  }\n  var5 = *currentPtr;\n  *(undefined *)(operationParams + 0xd) = 1;\n  *currentPtr = var5 & 0xfffff7ff;\n  *(undefined *)((int)operationParams + 0x35) = 0x22;\n  *(undefined *)((int)operationParams + 0x36) = 0x40;\n  operationParams[0xe] = (uint *)0x0;\n  startTime = FUN_080015e8(operationParams,param_2,param_3,param_4,timeout);\n  if (startTime != 0) {\n    *(undefined *)(operationParams + 0xd) = 0;\n    if (operationParams[0xe] == (uint *)0x4) {\n      return 1;\n    }\n    return 3;\n  }\n  currentPtr = *operationParams;\n  var5 = *currentPtr;\n  if (operationType == 1) {\n    *currentPtr = var5 & 0xfffffbff;\n    disableIRQ();\n    **operationParams = **operationParams | 0x200;\n    enableIRQ();\n    startTime = FUN_080016f4(operationParams,timeout);\n    if (startTime == 0) {\n      *result = (char)(*operationParams)[4];\nLAB_08001ab8:\n      *(undefined *)((int)operationParams + 0x35) = 0x20;\n      *(undefined *)((int)operationParams + 0x36) = 0;\n      *(undefined *)(operationParams + 0xd) = 0;\n      return 0;\n    }\nLAB_08001a18:\n    if (operationParams[0xe] != (uint *)0x20) {\n      return 1;\n    }\n    return 3;\n  }\n  if (operationType == 2) {\n    *currentPtr = var5 | 0x800;\n    disableIRQ();\n    **operationParams = **operationParams & 0xfffffbff;\n    enableIRQ();\n  }\n  else {\n    *currentPtr = var5 | 0x400;\n    while (3 < operationType) {\n      startTime = FUN_080016f4(operationParams,timeout);\n      if (startTime != 0) goto LAB_08001a18;\n      *result = (char)(*operationParams)[4];\n      currentPtr = *operationParams;\n      isNegative = (int)(currentPtr[5] << 0x1d) < 0;\n      if (isNegative) {\n        currentPtr = (uint *)currentPtr[4];\n        ptr2 = result + 2;\n        operationType = operationType - 2;\n      }\n      else {\n        ptr2 = result + 1;\n        operationType = operationType - 1;\n      }\n      ptr1 = result + 1;\n      result = ptr2;\n      if (isNegative) {\n        *ptr1 = (char)currentPtr;\n      }\n    }\n    if (operationType != 2) {\n      startTime = FUN_0800115c();\n      do {\n        currentPtr = *operationParams;\n        do {\n          if ((int)(currentPtr[5] << 0x1d) < 0) {\n            *currentPtr = *currentPtr & 0xfffffbff;\n            disableIRQ();\n            *result = (char)(*operationParams)[4];\n            startTime = FUN_0800115c();\n            goto label4;\n          }\n        } while (timeout == 0xffffffff);\n      } while ((timeout != 0) && (currentTime = FUN_0800115c(), (uint)(currentTime - startTime) <= timeout));\n      goto label3;\n    }\n  }\n  startTime = FUN_0800115c();\n  do {\n    do {\n      if ((int)((*operationParams)[5] << 0x1d) < 0) {\n        disableIRQ();\n        currentPtr = *operationParams;\n        *currentPtr = *currentPtr | 0x200;\n        *result = (char)currentPtr[4];\n        enableIRQ();\n        result[1] = (char)(*operationParams)[4];\n        goto LAB_08001ab8;\n      }\n    } while (timeout == 0xffffffff);\n  } while ((timeout != 0) && (currentTime = FUN_0800115c(), (uint)(currentTime - startTime) <= timeout));\nlabel3:\n  *(undefined *)((int)operationParams + 0x35) = 0x20;\n  *(undefined *)(operationParams + 0xd) = 0;\n  return 3;\nlabel4:\n  do {\n    currentPtr = *operationParams;\n    do {\n      if ((int)(currentPtr[5] << 0x1d) < 0) {\n        *currentPtr = *currentPtr | 0x200;\n        result[1] = (char)currentPtr[4];\n        enableIRQ();\n        result[2] = (char)(*operationParams)[4];\n        goto LAB_08001ab8;\n      }\n    } while (timeout == 0xffffffff);\n  } while ((timeout != 0) && (currentTime = FUN_0800115c(), (uint)(currentTime - startTime) <= timeout));\n  goto label3;\n}\n\n",
            "renaming": {
                "FUN_08001938": "execute_operation_08001938",
                "param_1": "operationParams",
                "param_5": "result",
                "param_6": "operationType",
                "param_7": "timeout",
                "puVar1": "ptr1",
                "iVar2": "startTime",
                "iVar3": "currentTime",
                "puVar4": "currentPtr",
                "uVar5": "var5",
                "puVar6": "ptr2",
                "bVar7": "isNegative",
                "LAB_08001afa": "label3",
                "LAB_08001b3a": "label4",
                "disableIRQinterrupts": "disableIRQ",
                "enableIRQinterrupts": "enableIRQ"
            },
            "calling": [
                "FUN_0800407c",
                "FUN_080040b8"
            ],
            "called": [
                "FUN_0800115c",
                "FUN_080016f4",
                "FUN_080015e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001b58": {
            "entrypoint": "0x08001b58",
            "current_name": "check_configuration_08001b58",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08001eec) */\n/* WARNING: Removing unreachable block (ram,0x08001ee8) */\n\n\nundefined4 check_configuration_08001b58(int *config_values)\n\n{\n  int value_1;\n  int value_2;\n  \n  if (*config_values << 0x1f < 0) {\n    if (((_DAT_40021004 & 0xc) == 4) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((int)(_DAT_40021004 << 0xf) < 0)))) {\n      if (((int)((_DAT_40021000 >> 0x11) << 0x1f) < 0) && (config_value_1 == 0)) {\n        return 1;\n      }\n    }\n    else {\n      value_1 = config_value_1;\n      if (value_1 == 0x10000) {\nLAB_08001c1e:\n        _DAT_40021000 = _DAT_40021000 | 0x10000;\n      }\n      else {\n        if (value_1 == 0) {\n          _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n          value_1 = FUN_0800115c();\n          while ((int)((_DAT_40021000 >> 0x11) << 0x1f) < 0) {\n            value_2 = FUN_0800115c();\n            if (100 < (uint)(value_2 - value_1)) {\n              return 3;\n            }\n          }\n          goto LAB_08001b64;\n        }\n        if (value_1 == 0x50000) {\n          _DAT_40021000 = _DAT_40021000 | 0x40000;\n          goto LAB_08001c1e;\n        }\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      value_1 = FUN_0800115c();\n      while (-1 < (int)((_DAT_40021000 >> 0x11) << 0x1f)) {\n        value_2 = FUN_0800115c();\n        if (100 < (uint)(value_2 - value_1)) {\n          return 3;\n        }\n      }\n    }\n  }\nLAB_08001b64:\n  if (*config_values << 0x1e < 0) {\n    if (((_DAT_40021004 & 0xc) == 0) ||\n       (((_DAT_40021004 & 0xc) == 8 && (-1 < (int)(_DAT_40021004 << 0xf))))) {\n      if (((int)((_DAT_40021000 >> 1) << 0x1f) < 0) && (config_value_2 != 1)) {\n        return 1;\n      }\n    }\n    else {\n      variable_1 = config_value_2;\n      if (variable_1 == 0) {\n        value_1 = FUN_0800115c();\n        while ((int)((_DAT_40021000 >> 1) << 0x1f) < 0) {\n          value_2 = FUN_0800115c();\n          if (2 < (uint)(value_2 - value_1)) {\n            return 3;\n          }\n        }\n        goto LAB_08001b6c;\n      }\n      variable_1 = 1;\n      value_1 = FUN_0800115c();\n      while (-1 < (int)((_DAT_40021000 >> 1) << 0x1f)) {\n        value_2 = FUN_0800115c();\n        if (2 < (uint)(value_2 - value_1)) {\n          return 3;\n        }\n      }\n    }\n    _DAT_40021000 = config_value_3 << 3 | _DAT_40021000 & 0xffffff07;\n  }\nLAB_08001b6c:\n  if (*config_values << 0x1c < 0) {\n    variable_2 = config_value_4;\n    if (variable_2 == 0) {\n      value_1 = FUN_0800115c();\n      while ((int)((_DAT_40021024 >> 1) << 0x1f) < 0) {\n        value_2 = FUN_0800115c();\n        if (2 < (uint)(value_2 - value_1)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      variable_2 = 1;\n      value_1 = FUN_0800115c();\n      while (-1 < (int)((_DAT_40021024 >> 1) << 0x1f)) {\n        value_2 = FUN_0800115c();\n        if (2 < (uint)(value_2 - value_1)) {\n          return 3;\n        }\n      }\n      FUNC_08001168(1);\n    }\n  }\n  if (-1 < *config_values << 0x1d) goto LAB_08001bc2;\n  _DAT_4002101c = _DAT_4002101c | 0x10000000;\n  _DAT_40007000 = _DAT_40007000 | 0x100;\n  value_1 = FUN_0800115c();\n  while (-1 < (int)(_DAT_40007000 << 0x17)) {\n    value_2 = FUN_0800115c();\n    if (100 < (uint)(value_2 - value_1)) {\n      return 3;\n    }\n  }\n  value_1 = config_value_5;\n  if (value_1 == 1) {\nLAB_08001e1a:\n    _DAT_40021020 = _DAT_40021020 | 1;\n  }\n  else {\n    if (value_1 == 0) {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n      value_1 = FUN_0800115c();\n      while ((int)((_DAT_40021020 >> 1) << 0x1f) < 0) {\n        value_2 = FUN_0800115c();\n        if (5000 < (uint)(value_2 - value_1)) {\n          return 3;\n        }\n      }\n      goto LAB_08001bc2;\n    }\n    if (value_1 == 5) {\n      _DAT_40021020 = _DAT_40021020 | 4;\n      goto LAB_08001e1a;\n    }\n    _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n  }\n  value_1 = FUN_0800115c();\n  while (-1 < (int)((_DAT_40021020 >> 1) << 0x1f)) {\n    value_2 = FUN_0800115c();\n    if (5000 < (uint)(value_2 - value_1)) {\n      return 3;\n    }\n  }\nLAB_08001bc2:\n  if (config_value_6 == 0) {\n    return 0;\n  }\n  if ((_DAT_40021004 & 0xc) != 8) {\n    if (config_value_6 != 2) {\n      variable_3 = 0;\n      value_1 = FUN_0800115c();\n      do {\n        if (-1 < (int)((_DAT_40021000 >> 0x19) << 0x1f)) {\n          return 0;\n        }\n        value_2 = FUN_0800115c();\n      } while ((uint)(value_2 - value_1) < 3);\n      return 3;\n    }\n    variable_3 = 0;\n    value_1 = FUN_0800115c();\n    do {\n      if (-1 < (int)((_DAT_40021000 >> 0x19) << 0x1f)) {\n        if (config_value_7 == 0x10000) {\n          _DAT_40021004 = _DAT_40021004 & 0xfffdffff | config_values[2];\n        }\n        _DAT_40021004 = config_value_7 | config_value_8 | _DAT_40021004 & 0xffc2ffff;\n        variable_3 = 1;\n        value_1 = FUN_0800115c();\n        do {\n          if ((int)((_DAT_40021000 >> 0x19) << 0x1f) < 0) {\n            return 0;\n          }\n          value_2 = FUN_0800115c();\n        } while ((uint)(value_2 - value_1) < 3);\n        return 3;\n      }\n      value_2 = FUN_0800115c();\n    } while ((uint)(value_2 - value_1) < 3);\n    return 3;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08001b58": "check_configuration_08001b58",
                "param_1": "config_values",
                "iVar1": "value_1",
                "iVar2": "value_2",
                "param_1[1]": "config_value_1",
                "param_1[4]": "config_value_2",
                "param_1[5]": "config_value_3",
                "param_1[6]": "config_value_4",
                "param_1[3]": "config_value_5",
                "param_1[7]": "config_value_6",
                "param_1[8]": "config_value_7",
                "param_1[9]": "config_value_8",
                "iRam42420000": "variable_1",
                "iRam42420480": "variable_2",
                "uRam42420060": "variable_3"
            },
            "calling": [
                "FUN_08004514"
            ],
            "called": [
                "FUN_0800115c",
                "FUN_08001168"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002008": {
            "entrypoint": "0x08002008",
            "current_name": "calculate_mpu9250_clock_frequency_08002008",
            "code": "\n\n\nint calculateMPU9250ClockFrequency_08002008(void)\n\n{\n  undefined4 value1;\n  int clockFrequency;\n  undefined4 value2;\n  undefined4 *ptr_source;\n  uint calculatedFrequency;\n  undefined4 *ptr_destination;\n  byte byteArray [4];\n  undefined4 dataArray [5];\n  \n  ptr_source = &DAT_080072f0;\n  ptr_destination = dataArray;\n  do {\n    value1 = *ptr_source;\n    value2 = ptr_source[1];\n    ptr_source = ptr_source + 2;\n    *ptr_destination = value1;\n    ptr_destination[1] = value2;\n    ptr_destination = ptr_destination + 2;\n  } while (ptr_source != (undefined4 *)\"../Src/MPU9250.c\");\n  byteArray[0] = 1;\n  byteArray[1] = 2;\n  if ((_DAT_40021004 & 0xc) == 8) {\n    if ((int)(_DAT_40021004 << 0xf) < 0) {\n      calculatedFrequency = 8000000 / byteArray[(_DAT_40021004 & 0x20000) >> 0x11];\n    }\n    else {\n      calculatedFrequency = 4000000;\n    }\n    clockFrequency = calculatedFrequency * *(byte *)((int)dataArray + ((_DAT_40021004 & 0x3c0000) >> 0x12));\n  }\n  else {\n    clockFrequency = 8000000;\n  }\n  return clockFrequency;\n}\n\n",
            "renaming": {
                "FUN_08002008": "calculate_mpu9250_clock_frequency_08002008",
                "uVar1": "value1",
                "iVar2": "clockFrequency",
                "uVar3": "value2",
                "puVar4": "ptr_source",
                "uVar5": "calculatedFrequency",
                "puVar6": "ptr_destination",
                "local_24": "byteArray",
                "local_20": "dataArray"
            },
            "calling": [
                "FUN_0800209c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800209c": {
            "entrypoint": "0x0800209c",
            "current_name": "check_and_process_data_0800209c",
            "code": "\n\n\nundefined4 check_and_process_data_0800209c(uint *data,uint size)\n\n{\n  char condition1;\n  char condition2;\n  int flag1;\n  uint flag2;\n  int tempVar1;\n  uint tempVar2;\n  \n  if ((size <= (_DAT_40022000 & 7)) ||\n     (_DAT_40022000 = _DAT_40022000 & 0xfffffff8 | size, size == (size & 7))) {\n    if ((int)(*data << 0x1e) < 0) {\n      _DAT_40021004 = _DAT_40021004 & 0xffffff0f | data[2];\n    }\n    flag1 = *data << 0x1f;\n    if (-1 < flag1) {\nLAB_080020ba:\n      if ((size < (_DAT_40022000 & 7)) &&\n         (_DAT_40022000 = _DAT_40022000 & 0xfffffff8 | size, size != (size & 7))) {\n        return 1;\n      }\n      if ((*data & 4) != 0) {\n        _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | data[3];\n      }\n      if ((int)(*data << 0x1c) < 0) {\n        _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | data[4] << 3;\n      }\n      flag2 = FUN_08002008();\n      DAT_200001bc = flag2 >> (&DAT_08007361)[(_DAT_40021004 & 0xf0) >> 4];\n      FUN_08001104(0);\n      return 0;\n    }\n    flag2 = data[1];\n    if (flag2 == 1) {\n      condition2 = '\\x01';\n      condition1 = '\\0';\n    }\n    else {\n      tempVar2 = _DAT_40021000;\n      if (flag2 == 2) goto LAB_08002176;\n      condition2 = '\\0';\n      condition1 = '\\x01';\n    }\n    tempVar2 = (_DAT_40021000 >>\n            (LZCOUNT((uint)(byte)(condition1 << 6) << 0x18 | (uint)(byte)(condition2 << 6) << 8) & 0x1fU)) <<\n            0x1f;\n    if ((int)tempVar2 < 0) {\nLAB_08002176:\n      _DAT_40021004 = _DAT_40021004 & 0xfffffffc | flag2;\n      flag1 = FUN_0800115c(flag1,tempVar2);\n      if (data[1] == 1) {\n        do {\n          if ((_DAT_40021004 & 0xc) == 4) goto LAB_080020ba;\n          tempVar1 = FUN_0800115c();\n        } while ((uint)(tempVar1 - flag1) < 0x1389);\n      }\n      else if (data[1] == 2) {\n        do {\n          if ((_DAT_40021004 & 0xc) == 8) goto LAB_080020ba;\n          tempVar1 = FUN_0800115c();\n        } while ((uint)(tempVar1 - flag1) < 0x1389);\n      }\n      else {\n        do {\n          if ((_DAT_40021004 & 0xc) == 0) goto LAB_080020ba;\n          tempVar1 = FUN_0800115c();\n        } while ((uint)(tempVar1 - flag1) < 0x1389);\n      }\n      return 3;\n    }\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800209c": "check_and_process_data_0800209c",
                "param_1": "data",
                "param_2": "size",
                "cVar1": "condition1",
                "cVar2": "condition2",
                "iVar3": "flag1",
                "uVar4": "flag2",
                "iVar5": "tempVar1",
                "uVar6": "tempVar2"
            },
            "calling": [
                "FUN_08004514"
            ],
            "called": [
                "FUN_08001104",
                "FUN_0800115c",
                "FUN_08002008"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002214": {
            "entrypoint": "0x08002214",
            "current_name": "get_data_value_08002214",
            "code": "\nundefined4 get_data_value_08002214(void)\n\n{\n  return DAT_200001bc;\n}\n\n",
            "renaming": {
                "FUN_08002214": "get_data_value_08002214"
            },
            "calling": [
                "FUN_08001104",
                "FUN_08004514"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002220": {
            "entrypoint": "0x08002220",
            "current_name": "extracted_data_08002220",
            "code": "\n\n\nuint extractedData_08002220(void)\n\n{\n  return DAT_200001bc >> (&DAT_08007371)[(_DAT_40021004 & 0x700) >> 8];\n}\n\n",
            "renaming": {
                "FUN_08002220": "extracted_data_08002220"
            },
            "calling": [
                "FUN_08001754",
                "FUN_080025e8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002250": {
            "entrypoint": "0x08002250",
            "current_name": "get_shifted_data_08002250",
            "code": "\n\n\nuint get_shifted_data_08002250(void)\n\n{\n  return DAT_200001bc >> (&DAT_08007371)[(_DAT_40021004 & 0x3800) >> 0xb];\n}\n\n",
            "renaming": {
                "FUN_08002250": "get_shifted_data_08002250"
            },
            "calling": [
                "FUN_080025e8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002280": {
            "entrypoint": "0x08002280",
            "current_name": "update_params_08002280",
            "code": "\nvoid updateParams_08002280(int baseAddress,uint *paramsArray)\n\n{\n  uint updatedVar1;\n  uint updatedVar2;\n  uint updatedVar3;\n  \n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) & 0xfffffffe;\n  updatedVar2 = *(uint *)(baseAddress + 4);\n  updatedVar3 = *paramsArray;\n  updatedVar1 = *(uint *)(baseAddress + 0x20) & 0xfffffffd | paramsArray[2];\n  if (baseAddress == 0x40012c00) {\n    updatedVar1 = (updatedVar1 & 0xfffffff7 | paramsArray[3]) & 0xfffffffb;\n    updatedVar2 = updatedVar2 & 0xfffffcff | paramsArray[5] | paramsArray[6];\n  }\n  *(uint *)(baseAddress + 4) = updatedVar2;\n  *(uint *)(baseAddress + 0x18) = *(uint *)(baseAddress + 0x18) & 0xffffff8c | updatedVar3;\n  *(uint *)(baseAddress + 0x34) = paramsArray[1];\n  *(uint *)(baseAddress + 0x20) = updatedVar1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002280": "update_params_08002280",
                "param_1": "baseAddress",
                "param_2": "paramsArray",
                "uVar1": "updatedVar1",
                "uVar2": "updatedVar2",
                "uVar3": "updatedVar3"
            },
            "calling": [
                "FUN_0800245c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080022d0": {
            "entrypoint": "0x080022d0",
            "current_name": "update_memory_080022d0",
            "code": "\nvoid updateMemory_080022d0(int baseAddress,uint *data)\n\n{\n  uint updatedValue1;\n  uint updatedValue2;\n  uint updatedValue3;\n  \n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) & 0xfffffeff;\n  updatedValue2 = *(uint *)(baseAddress + 4);\n  updatedValue3 = *data;\n  updatedValue1 = *(uint *)(baseAddress + 0x20) & 0xfffffdff | data[2] << 8;\n  if (baseAddress == 0x40012c00) {\n    updatedValue1 = (updatedValue1 & 0xfffff7ff | data[3] << 8) & 0xfffffbff;\n    updatedValue2 = updatedValue2 & 0xffffcfff | (data[5] | data[6]) << 4;\n  }\n  *(uint *)(baseAddress + 4) = updatedValue2;\n  *(uint *)(baseAddress + 0x1c) = *(uint *)(baseAddress + 0x1c) & 0xffffff8c | updatedValue3;\n  *(uint *)(baseAddress + 0x3c) = data[1];\n  *(uint *)(baseAddress + 0x20) = updatedValue1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080022d0": "update_memory_080022d0",
                "param_1": "baseAddress",
                "param_2": "data",
                "uVar1": "updatedValue1",
                "uVar2": "updatedValue2",
                "uVar3": "updatedValue3"
            },
            "calling": [
                "FUN_0800245c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002324": {
            "entrypoint": "0x08002324",
            "current_name": "update_parameters_08002324",
            "code": "\nvoid updateParameters_08002324(int param1,int *param2)\n\n{\n  uint updatedVar1;\n  int updatedVar2;\n  int updatedVar3;\n  int updatedVar4;\n  \n  *(uint *)(param1 + 0x20) = *(uint *)(param1 + 0x20) & 0xffffefff;\n  updatedVar1 = *(uint *)(param1 + 4);\n  updatedVar2 = *param2;\n  updatedVar3 = param2[2];\n  updatedVar4 = 0x40012c00;\n  if (param1 == 0x40012c00) {\n    updatedVar4 = param2[5];\n    updatedVar1 = updatedVar1 & 0xffffbfff;\n  }\n  if (param1 == 0x40012c00) {\n    updatedVar1 = updatedVar1 | updatedVar4 << 6;\n  }\n  *(uint *)(param1 + 4) = updatedVar1;\n  *(uint *)(param1 + 0x1c) = *(uint *)(param1 + 0x1c) & 0xffff8cff | updatedVar2 << 8;\n  *(int *)(param1 + 0x40) = param2[1];\n  *(uint *)(param1 + 0x20) = *(uint *)(param1 + 0x20) & 0xffffdfff | updatedVar3 << 0xc;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002324": "update_parameters_08002324",
                "param_1": "param1",
                "param_2": "param2",
                "uVar1": "updatedVar1",
                "iVar2": "updatedVar2",
                "iVar3": "updatedVar3",
                "iVar4": "updatedVar4"
            },
            "calling": [
                "FUN_0800245c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002368": {
            "entrypoint": "0x08002368",
            "current_name": "update_memory_08002368",
            "code": "\nvoid updateMemory_08002368(uint *memoryBlock,uint *dataBlock)\n\n{\n  uint updatedValue;\n  \n  updatedValue = *memoryBlock;\n  if (((((memoryBlock == (uint *)0x40012c00) || (memoryBlock == (uint *)0x40000000)) ||\n       (memoryBlock == (uint *)0x40000400)) || (memoryBlock == (uint *)0x40000800)) &&\n     (((updatedValue = updatedValue & 0xffffff8f | dataBlock[1], memoryBlock == (uint *)0x40012c00 ||\n       (memoryBlock == (uint *)0x40000000)) ||\n      ((memoryBlock == (uint *)0x40000400 || (memoryBlock == (uint *)0x40000800)))))) {\n    updatedValue = updatedValue & 0xfffffcff | dataBlock[3];\n  }\n  *memoryBlock = updatedValue;\n  memoryBlock[0xb] = dataBlock[2];\n  memoryBlock[10] = *dataBlock;\n  updatedValue = 0x40012c00;\n  if (memoryBlock == (uint *)0x40012c00) {\n    updatedValue = dataBlock[4];\n  }\n  if (memoryBlock == (uint *)0x40012c00) {\n    memoryBlock[0xc] = updatedValue;\n  }\n  memoryBlock[5] = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002368": "update_memory_08002368",
                "param_1": "memoryBlock",
                "param_2": "dataBlock",
                "uVar1": "updatedValue"
            },
            "calling": [
                "FUN_080023d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080023d0": {
            "entrypoint": "0x080023d0",
            "current_name": "process_data_080023d0",
            "code": "\nundefined4 processData_080023d0(undefined4 *data)\n\n{\n  if (data != (undefined4 *)0x0) {\n    if (*(char *)((int)data + 0x39) == '\\0') {\n      *(undefined *)(data + 0xe) = 0;\n      FUN_08004d8c();\n    }\n    *(undefined *)((int)data + 0x39) = 2;\n    FUN_08002368(*data,data + 1);\n    *(undefined *)((int)data + 0x39) = 1;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080023d0": "process_data_080023d0",
                "param_1": "data"
            },
            "calling": [
                "FUN_0800458c"
            ],
            "called": [
                "FUN_08002368",
                "FUN_08004d8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002404": {
            "entrypoint": "0x08002404",
            "current_name": "update_parameters_08002404",
            "code": "\nvoid updateParameters_08002404(int parameter1,int *parameter2)\n\n{\n  uint updatedValue1;\n  uint updatedValue2;\n  int inputValue;\n  \n  *(uint *)(parameter1 + 0x20) = *(uint *)(parameter1 + 0x20) & 0xffffffef;\n  updatedValue2 = *(uint *)(parameter1 + 4);\n  inputValue = *parameter2;\n  updatedValue1 = *(uint *)(parameter1 + 0x20) & 0xffffffdf | param2Value2 << 4;\n  if (parameter1 == 0x40012c00) {\n    updatedValue1 = (updatedValue1 & 0xffffff7f | param2Value3 << 4) & 0xffffffbf;\n    updatedValue2 = updatedValue2 & 0xfffff3ff | (param2Value5 | param2Value6) << 2;\n  }\n  *(uint *)(parameter1 + 4) = updatedValue2;\n  *(uint *)(parameter1 + 0x18) = *(uint *)(parameter1 + 0x18) & 0xffff8cff | inputValue << 8;\n  *(int *)(parameter1 + 0x38) = parameter2[1];\n  *(uint *)(parameter1 + 0x20) = updatedValue1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002404": "update_parameters_08002404",
                "param_1": "parameter1",
                "param_2": "parameter2",
                "uVar1": "updatedValue1",
                "uVar2": "updatedValue2",
                "iVar3": "inputValue",
                "param_2[2]": "param2Value2",
                "param_2[3]": "param2Value3",
                "param_2[5]": "param2Value5",
                "param_2[6]": "param2Value6"
            },
            "calling": [
                "FUN_0800245c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800245c": {
            "entrypoint": "0x0800245c",
            "current_name": "update_and_set_flags_0800245c",
            "code": "\nvoid updateAndSetFlags_0800245c(int *ptrArray,undefined4 param2,undefined4 param3)\n\n{\n  int temp1;\n  int temp2;\n  int temp3;\n  int temp4;\n  int var1;\n  uint var2;\n  int var3;\n  \n  if (*(char *)(ptrArray + 0xe) == '\\x01') {\n    return;\n  }\n  *(undefined *)((int)ptrArray + 0x39) = 2;\n  *(undefined *)(ptrArray + 0xe) = 1;\n  switch(param3) {\n  case 0:\n    FUN_08002280(*ptrArray);\n    var3 = *ptrArray;\n    var2 = *(uint *)(temp1 + 0x10);\n    *(uint *)(var3 + 0x18) = *(uint *)(var3 + 0x18) | 8;\n    *(uint *)(var3 + 0x18) = *(uint *)(var3 + 0x18) & 0xfffffffb;\n    var2 = *(uint *)(var3 + 0x18) | var2;\n    break;\n  default:\n    goto switchD_0800247a_caseD_1;\n  case 4:\n    FUN_08002404(*ptrArray);\n    var3 = *ptrArray;\n    var1 = *(int *)(temp2 + 0x10);\n    *(uint *)(var3 + 0x18) = *(uint *)(var3 + 0x18) | 0x800;\n    *(uint *)(var3 + 0x18) = *(uint *)(var3 + 0x18) & 0xfffffbff;\n    var2 = *(uint *)(var3 + 0x18) | var1 << 8;\n    break;\n  case 8:\n    FUN_080022d0(*ptrArray);\n    var3 = *ptrArray;\n    var2 = *(uint *)(temp3 + 0x10);\n    *(uint *)(var3 + 0x1c) = *(uint *)(var3 + 0x1c) | 8;\n    *(uint *)(var3 + 0x1c) = *(uint *)(var3 + 0x1c) & 0xfffffffb;\n    var2 = *(uint *)(var3 + 0x1c) | var2;\n    goto LAB_080024fa;\n  case 0xc:\n    FUN_08002324(*ptrArray);\n    var3 = *ptrArray;\n    var1 = *(int *)(temp4 + 0x10);\n    *(uint *)(var3 + 0x1c) = *(uint *)(var3 + 0x1c) | 0x800;\n    *(uint *)(var3 + 0x1c) = *(uint *)(var3 + 0x1c) & 0xfffffbff;\n    var2 = *(uint *)(var3 + 0x1c) | var1 << 8;\nLAB_080024fa:\n    *(uint *)(var3 + 0x1c) = var2;\n    goto switchD_0800247a_caseD_1;\n  }\n  *(uint *)(var3 + 0x18) = var2;\nswitchD_0800247a_caseD_1:\n  *(undefined *)((int)ptrArray + 0x39) = 1;\n  *(undefined *)(ptrArray + 0xe) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800245c": "update_and_set_flags_0800245c",
                "param_1": "ptrArray",
                "param_2": "param2",
                "param_3": "param3",
                "extraout_r1": "temp1",
                "extraout_r1_00": "temp2",
                "extraout_r1_01": "temp3",
                "extraout_r1_02": "temp4",
                "iVar1": "var1",
                "uVar2": "var2",
                "iVar3": "var3"
            },
            "calling": [
                "FUN_0800458c"
            ],
            "called": [
                "FUN_080022d0",
                "FUN_08002324",
                "FUN_08002404",
                "FUN_08002280"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002520": {
            "entrypoint": "0x08002520",
            "current_name": "update_bit_value_08002520",
            "code": "\nvoid updateBitValue_08002520(int dataAddress,uint bitPosition,int newValue)\n\n{\n  *(uint *)(dataAddress + 0x20) = *(uint *)(dataAddress + 0x20) & ~(1 << (bitPosition & 0xff));\n  *(uint *)(dataAddress + 0x20) = newValue << (bitPosition & 0xff) | *(uint *)(dataAddress + 0x20);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002520": "update_bit_value_08002520",
                "param_1": "dataAddress",
                "param_2": "bitPosition",
                "param_3": "newValue"
            },
            "calling": [
                "FUN_08002538"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002538": {
            "entrypoint": "0x08002538",
            "current_name": "initialize_data_08002538",
            "code": "\nundefined4 initializeData_08002538(uint **data,undefined4 value)\n\n{\n  uint newValue;\n  uint *pointer;\n  \n  FUN_08002520(*data,value,1);\n  pointer = *data;\n  newValue = 0x40012c00;\n  if (pointer == (uint *)0x40012c00) {\n    newValue = uRam40012c44 | 0x8000;\n  }\n  if (pointer == (uint *)0x40012c00) {\n    pointer[0x11] = newValue;\n  }\n  *pointer = *pointer | 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002538": "initialize_data_08002538",
                "param_1": "data",
                "param_2": "value",
                "puVar2": "pointer",
                "uVar1": "newValue"
            },
            "calling": [
                "FUN_08003ff4"
            ],
            "called": [
                "FUN_08002520"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002564": {
            "entrypoint": "0x08002564",
            "current_name": "validate_and_update_08002564",
            "code": "\nundefined4 validate_and_update_08002564(int *array,uint *data_array)\n\n{\n  undefined4 result;\n  \n  result = 2;\n  if (*(char *)(array + 0xe) != '\\x01') {\n    *(undefined *)((int)array + 0x39) = 2;\n    *(uint *)(*array + 0x44) =\n         *data_array | data_array[1] | data_array[2] | data_array[3] | data_array[4] | data_array[5] | data_array[6];\n    *(undefined *)((int)array + 0x39) = 1;\n    result = 0;\n    *(undefined *)(array + 0xe) = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002564": "validate_and_update_08002564",
                "param_1": "array",
                "param_2": "data_array",
                "uVar1": "result"
            },
            "calling": [
                "FUN_0800458c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080025a4": {
            "entrypoint": "0x080025a4",
            "current_name": "set_flags_and_reset_state_080025a4",
            "code": "\nundefined4 setFlagsAndResetState_080025a4(int *inputArray,uint *inputValues)\n\n{\n  uint value1;\n  undefined4 result;\n  int arrayPointer;\n  uint value0;\n  \n  result = 2;\n  if (*(char *)(inputArray + 0xe) != '\\x01') {\n    *(undefined *)((int)inputArray + 0x39) = 2;\n    arrayPointer = *inputArray;\n    value0 = *inputValues;\n    value1 = inputValues[1];\n    *(uint *)(arrayPointer + 4) = *(uint *)(arrayPointer + 4) & 0xffffff8f;\n    *(uint *)(arrayPointer + 4) = *(uint *)(arrayPointer + 4) | value0;\n    *(uint *)(arrayPointer + 8) = *(uint *)(arrayPointer + 8) & 0xffffff7f;\n    *(uint *)(arrayPointer + 8) = *(uint *)(arrayPointer + 8) | value1;\n    *(undefined *)((int)inputArray + 0x39) = 1;\n    result = 0;\n    *(undefined *)(inputArray + 0xe) = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080025a4": "set_flags_and_reset_state_080025a4",
                "param_1": "inputArray",
                "param_2": "inputValues",
                "uVar1": "value1",
                "uVar2": "result",
                "iVar3": "arrayPointer",
                "uVar4": "value0"
            },
            "calling": [
                "FUN_0800458c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080025e8": {
            "entrypoint": "0x080025e8",
            "current_name": "update_configuration_080025e8",
            "code": "\nvoid updateConfiguration_080025e8(int *configParams)\n\n{\n  int randomValue1;\n  int randomValue2;\n  uint updatedValue;\n  int modifiedValue1;\n  int param1Value;\n  int configAddress;\n  \n  configAddress = *configParams;\n  updatedValue = configParams[4];\n  *(uint *)(configAddress + 0x10) = *(uint *)(configAddress + 0x10) & 0xffffcfff | configParams[3];\n  *(uint *)(configAddress + 0xc) = configParams[2] | updatedValue | configParams[5] | *(uint *)(configAddress + 0xc) & 0xffffe9f3;\n  *(uint *)(configAddress + 0x14) = *(uint *)(configAddress + 0x14) & 0xfffffcff | configParams[6];\n  if (configAddress == 0x40013800) {\n    randomValue1 = FUN_08002250();\n    modifiedValue1 = (int)(((ulonglong)(uint)(randomValue1 * 0x19) / (ulonglong)(uint)(configParams[1] << 2)) / 100);\n    randomValue1 = FUN_08002250();\n    param1Value = configParams[1];\n    randomValue2 = FUN_08002250();\n    randomValue2 = (uint)(randomValue1 * 0x19) / (uint)(param1Value << 2) +\n            (int)(((ulonglong)(uint)(randomValue2 * 0x19) / (ulonglong)(uint)(configParams[1] << 2)) / 100) *\n            -100;\n    randomValue1 = FUN_08002250();\n    updatedValue = (uint)(randomValue1 * 0x19) / (uint)(configParams[1] << 2);\n    randomValue1 = FUN_08002250();\n  }\n  else {\n    randomValue1 = FUN_08002220();\n    modifiedValue1 = (int)(((ulonglong)(uint)(randomValue1 * 0x19) / (ulonglong)(uint)(configParams[1] << 2)) / 100);\n    randomValue1 = FUN_08002220();\n    param1Value = configParams[1];\n    randomValue2 = FUN_08002220();\n    randomValue2 = (uint)(randomValue1 * 0x19) / (uint)(param1Value << 2) +\n            (int)(((ulonglong)(uint)(randomValue2 * 0x19) / (ulonglong)(uint)(configParams[1] << 2)) / 100) *\n            -100;\n    randomValue1 = FUN_08002220();\n    updatedValue = (uint)(randomValue1 * 0x19) / (uint)(configParams[1] << 2);\n    randomValue1 = FUN_08002220();\n  }\n  *(uint *)(configAddress + 8) =\n       (((updatedValue + (int)(((ulonglong)(uint)(randomValue1 * 0x19) / (ulonglong)(uint)(configParams[1] << 2)) / 100\n                       ) * -100) * 0x10 + 0x32) / 100 & 0xf | (randomValue2 * 0x10 + 0x32U) / 100 & 0xf0) +\n       modifiedValue1 * 0x10;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080025e8": "update_configuration_080025e8",
                "param_1": "configParams",
                "iVar1": "randomValue1",
                "iVar2": "randomValue2",
                "uVar3": "updatedValue",
                "iVar4": "modifiedValue1",
                "iVar5": "param1Value",
                "iVar6": "configAddress"
            },
            "calling": [
                "FUN_08002724"
            ],
            "called": [
                "FUN_08002220",
                "FUN_08002250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002724": {
            "entrypoint": "0x08002724",
            "current_name": "initialize_parameter_08002724",
            "code": "\nundefined4 initializeParameter_08002724(int *parameter)\n\n{\n  int index;\n  \n  if (parameter != (int *)0x0) {\n    if (*(char *)((int)parameter + 0x39) == '\\0') {\n      *(undefined *)(parameter + 0xe) = 0;\n      FUN_08004e7c();\n    }\n    *(undefined *)((int)parameter + 0x39) = 2;\n    *(uint *)(*parameter + 0xc) = *(uint *)(*parameter + 0xc) & 0xffffdfff;\n    FUN_080025e8(parameter);\n    index = *parameter;\n    *(uint *)(index + 0x10) = *(uint *)(index + 0x10) & 0xffffb7ff;\n    *(uint *)(index + 0x14) = *(uint *)(index + 0x14) & 0xffffffd5;\n    *(uint *)(index + 0xc) = *(uint *)(index + 0xc) | 0x2000;\n    flag2 = 0;\n    *(undefined *)((int)parameter + 0x39) = 1;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08002724": "initialize_parameter_08002724",
                "param_1": "parameter",
                "iVar1": "index",
                "param_1[0xf]": "flag2"
            },
            "calling": [
                "FUN_0800458c"
            ],
            "called": [
                "FUN_08004e7c",
                "FUN_080025e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800290a": {
            "entrypoint": "0x0800290a",
            "current_name": "FUNC_0800290a",
            "code": "\nvoid FUNC_0800290a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800290a": "FUNC_0800290a"
            },
            "calling": [
                "FUN_0800299a"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800290c": {
            "entrypoint": "0x0800290c",
            "current_name": "process_data_0800290c",
            "code": "\nundefined4 processData_0800290c(int *data)\n\n{\n  byte byteValue;\n  int ptrData;\n  uint intValue;\n  undefined4 tempValue;\n  short shortValue;\n  ushort *ptr1;\n  ushort *ptr2;\n  bool isConditionMet;\n  \n  if ((*(byte *)((int)data + 0x39) & 0xef) != 0x22) {\n    return 2;\n  }\n  ptrData = *data;\n  ptr1 = (ushort *)data[10];\n  if (data[2] == 0x1000) {\n    if (data[4] == 0) {\n      ptr2 = ptr1 + 1;\n      *ptr1 = (ushort)((uint)(*(int *)(ptrData + 4) << 0x17) >> 0x17);\n    }\n    else {\n      ptr2 = (ushort *)((int)ptr1 + 1);\n      *ptr1 = (ushort)*(int *)(ptrData + 4) & 0xff;\n    }\n    data[10] = (int)ptr2;\n  }\n  else {\n    if (data[4] == 0) {\n      byteValue = (byte)*(undefined4 *)(ptrData + 4);\n      data[10] = (int)ptr1 + 1;\n    }\n    else {\n      tempValue = *(undefined4 *)(ptrData + 4);\n      data[10] = (int)ptr1 + 1;\n      byteValue = (byte)tempValue & 0x7f;\n    }\n    *(byte *)ptr1 = byteValue;\n  }\n  shortValue = *(short *)((int)data + 0x2e) + -1;\n  *(short *)((int)data + 0x2e) = shortValue;\n  if (shortValue == 0) {\n    ptrData = *data;\n    *(uint *)(ptrData + 0xc) = *(uint *)(ptrData + 0xc) & 0xffffffdf;\n    isConditionMet = *(char *)((int)data + 0x39) != '2';\n    if (isConditionMet) {\n      intValue = *(uint *)(ptrData + 0xc) & 0xfffffeff;\n    }\n    else {\n      ptrData = 0x12;\n      intValue = 0x32;\n    }\n    if (isConditionMet) {\n      *(uint *)(ptrData + 0xc) = intValue;\n      intValue = *(uint *)(ptrData + 0x14) & 0xfffffffe;\n    }\n    if (isConditionMet) {\n      *(uint *)(ptrData + 0x14) = intValue;\n      ptrData = 1;\n    }\n    *(char *)((int)data + 0x39) = (char)ptrData;\n    FUN_08004c30();\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800290c": "process_data_0800290c",
                "param_1": "data",
                "bVar1": "byteValue",
                "iVar2": "ptrData",
                "uVar3": "intValue",
                "uVar4": "tempValue",
                "sVar5": "shortValue",
                "puVar6": "ptr1",
                "puVar7": "ptr2",
                "bVar8": "isConditionMet"
            },
            "calling": [
                "FUN_0800299a"
            ],
            "called": [
                "FUN_08004c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002998": {
            "entrypoint": "0x08002998",
            "current_name": "FUNC_08002998",
            "code": "\nvoid FUNC_08002998(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002998": "FUNC_08002998"
            },
            "calling": [
                "FUN_0800299a"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800299a": {
            "entrypoint": "0x0800299a",
            "current_name": "process_data_0800299a",
            "code": "\nvoid processData_0800299a(uint **data)\n\n{\n  uint temp1;\n  short counter;\n  uint value1;\n  uint *ptr1;\n  undefined flag;\n  uint *ptr2;\n  uint flag2;\n  bool flag3;\n  \n  ptr2 = *data;\n  value1 = *ptr2;\n  temp1 = ptr2[3];\n  if ((value1 & 0xf) == 0) {\n    if (((int)(value1 << 0x1a) < 0) && ((int)(temp1 << 0x1a) < 0)) {\n      FUN_0800290c();\n      return;\n    }\n  }\n  else {\n    flag2 = ptr2[5] & 1;\n    if ((flag2 != 0) || ((temp1 & 0x120) != 0)) {\n      ptr2 = (uint *)(value1 << 0x1f);\n      if ((int)ptr2 < 0) {\n        flag3 = (int)(temp1 << 0x17) < 0;\n        if (flag3) {\n          ptr2 = (uint *)((uint)data[0xf] | 1);\n        }\n        if (flag3) {\n          data[0xf] = ptr2;\n        }\n      }\n      if (((int)(value1 << 0x1d) < 0) && (flag2 != 0)) {\n        data[0xf] = (uint *)((uint)data[0xf] | 2);\n      }\n      if (((int)(value1 << 0x1e) < 0) && (flag2 != 0)) {\n        data[0xf] = (uint *)((uint)data[0xf] | 4);\n      }\n      if (((int)(value1 << 0x1c) < 0) && (flag2 != 0)) {\n        data[0xf] = (uint *)((uint)data[0xf] | 8);\n      }\n      if (data[0xf] == (uint *)0x0) {\n        return;\n      }\n      if (((int)(value1 << 0x1a) < 0) && ((int)(temp1 << 0x1a) < 0)) {\n        FUN_0800290c(data);\n      }\n      ptr2 = *data;\n      if ((-1 < (int)data[0xf] << 0x1c) && ((ptr2[5] & 0x40) == 0)) {\n        FUNC_08002998(data);\n        data[0xf] = (uint *)0x0;\n        return;\n      }\n      ptr2[3] = ptr2[3] & 0xfffffedf;\n      ptr2[5] = ptr2[5] & 0xfffffffe;\n      *(undefined *)((int)data + 0x39) = 1;\n      FUNC_08002998(data);\n      return;\n    }\n  }\n  if (((int)(value1 << 0x18) < 0) && ((int)(temp1 << 0x18) < 0)) {\n    if ((*(byte *)((int)data + 0x39) & 0xdf) == 0x12) {\n      ptr1 = data[8];\n      if (data[2] == (uint *)0x1000) {\n        ptr2[1] = *(ushort *)ptr1 & 0x1ff;\n        if (data[4] == (uint *)0x0) {\n          ptr1 = (uint *)((int)ptr1 + 2);\n        }\n        else {\n          ptr1 = (uint *)((int)ptr1 + 1);\n        }\n        data[8] = ptr1;\n      }\n      else {\n        data[8] = (uint *)((int)ptr1 + 1);\n        ptr2[1] = (uint)*(byte *)ptr1;\n      }\n      counter = *(short *)((int)data + 0x26) + -1;\n      *(short *)((int)data + 0x26) = counter;\n      if (counter == 0) {\n        ptr2[3] = ptr2[3] & 0xffffff7f;\n        ptr2[3] = ptr2[3] | 0x40;\n        return;\n      }\n    }\n  }\n  else if (((int)(value1 << 0x19) < 0) && ((int)(temp1 << 0x19) < 0)) {\n    ptr2[3] = ptr2[3] & 0xffffffbf;\n    if (*(char *)((int)data + 0x39) == '2') {\n      flag = 0x22;\n    }\n    else {\n      flag = 1;\n    }\n    *(undefined *)((int)data + 0x39) = flag;\n    FUNC_0800290a(data);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800299a": "process_data_0800299a",
                "param_1": "data",
                "uVar1": "temp1",
                "sVar2": "counter",
                "uVar3": "value1",
                "puVar4": "ptr1",
                "uVar5": "flag",
                "puVar6": "ptr2",
                "uVar7": "flag2",
                "bVar8": "flag3"
            },
            "calling": [],
            "called": [
                "FUN_08002998",
                "FUN_0800290a",
                "FUN_0800290c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ad0": {
            "entrypoint": "0x08002ad0",
            "current_name": "initialize_mpu9250_08002ad0",
            "code": "\nvoid initializeMPU9250_08002ad0(void)\n\n{\n  FUN_0800407c(0xd0,0x75,\"../Src/MPU9250.c\",0x3b);\n  FUN_0800403c(0xd0,0x6b,0x80,1);\n  FUN_0800403c(0xd0,0x6b,1);\n  FUN_0800403c(0xd0,0x6c,0,1);\n  FUN_0800403c(0xd0,0x19,0,1);\n  FUN_0800403c(0xd0,0x1d,3,1);\n  FUN_0800403c(0xd0,0x1a,3,1);\n  FUN_0800403c(0xd0,0x1b,0x10,1);\n  FUN_0800403c(0xd0,0x1c,8,1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ad0": "initialize_mpu9250_08002ad0"
            },
            "calling": [
                "FUN_08002ea0"
            ],
            "called": [
                "FUN_0800407c",
                "FUN_0800403c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002b48": {
            "entrypoint": "0x08002b48",
            "current_name": "initialize_mpu9250_08002b48",
            "code": "\nvoid initializeMPU9250_08002b48(void)\n\n{\n  undefined4 uVar1;\n  uint inputValue;\n  int localVar1;\n  int localVar2;\n  undefined4 tempVar1;\n  undefined4 tempVar2;\n  \n  tempVar1 = 0;\n  tempVar2 = inputValue & 0xffff0000;\n  FUN_080040e8(0xd0,0x3b,&tempVar1,6,\"../Src/MPU9250.c\",0x58);\n  DAT_200002f6 = CONCAT11(tempVar1._2_1_,tempVar1._3_1_);\n  DAT_200002f4 = CONCAT11((undefined)tempVar1,tempVar1._1_1_);\n  DAT_200002f8 = CONCAT11((undefined)tempVar2,tempVar2._1_1_);\n  localVar2 = (int)DAT_200002f6;\n  localVar1 = (int)DAT_200002f8;\n  uVar1 = FUN_08000c44();\n  uVar1 = FUN_08000cec(uVar1,0x40800000);\n  DAT_200002d0 = FUN_08000cec(uVar1,0x38000000);\n  uVar1 = FUN_08000c44(localVar2);\n  uVar1 = FUN_08000cec(uVar1,0x40800000);\n  DAT_200002d4 = FUN_08000cec(uVar1,0x38000000);\n  uVar1 = FUN_08000c44(localVar1);\n  uVar1 = FUN_08000cec(uVar1,0x40800000);\n  DAT_200002d8 = FUN_08000cec(uVar1,0x38000000);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002b48": "initialize_mpu9250_08002b48",
                "in_r3": "inputValue",
                "iVar2": "localVar1",
                "iVar3": "localVar2",
                "local_18": "tempVar1",
                "local_14": "tempVar2"
            },
            "calling": [
                "FUN_08002f28"
            ],
            "called": [
                "FUN_08000c44",
                "FUN_08000cec",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002bf0": {
            "entrypoint": "0x08002bf0",
            "current_name": "initialize_mpu9250_08002bf0",
            "code": "\nvoid initializeMPU9250_08002bf0(void)\n\n{\n  undefined4 uVar1;\n  int convertedConcatData2;\n  int convertedConcatData1;\n  undefined4 data1;\n  undefined2 data2;\n  \n  data1 = 0;\n  data2 = 0;\n  FUN_080040e8(0xd0,0x43,&data1,6,\"../Src/MPU9250.c\",0x7b);\n  DAT_200002c0 = CONCAT11(data1._2_1_,data1._3_1_);\n  DAT_200002be = CONCAT11((undefined)data1,data1._1_1_);\n  DAT_200002c2 = CONCAT11((undefined)data2,data2._1_1_);\n  convertedConcatData1 = (int)DAT_200002c0;\n  convertedConcatData2 = (int)DAT_200002c2;\n  uVar1 = FUN_08000c44();\n  uVar1 = FUN_08000cec(uVar1,0x447a0000);\n  uVar1 = FUN_08000cec(uVar1,0x38000000);\n  DAT_200002c4 = FUN_08000ad8(uVar1,DAT_20000000);\n  uVar1 = FUN_08000c44(convertedConcatData1);\n  uVar1 = FUN_08000cec(uVar1,0x447a0000);\n  uVar1 = FUN_08000cec(uVar1,0x38000000);\n  DAT_200002c8 = FUN_08000ad8(uVar1,DAT_20000004);\n  uVar1 = FUN_08000c44(convertedConcatData2);\n  uVar1 = FUN_08000cec(uVar1,0x447a0000);\n  uVar1 = FUN_08000cec(uVar1,0x38000000);\n  DAT_200002cc = FUN_08000ad8(uVar1,DAT_20000008);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002bf0": "initialize_mpu9250_08002bf0",
                "local_20": "data1",
                "local_1c": "data2",
                "iVar3": "convertedConcatData1",
                "iVar2": "convertedConcatData2"
            },
            "calling": [
                "FUN_08002f28"
            ],
            "called": [
                "FUN_08000ad8",
                "FUN_08000c44",
                "FUN_08000cec",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002cb0": {
            "entrypoint": "0x08002cb0",
            "current_name": "initialize_mpu9250_08002cb0",
            "code": "\nvoid initializeMPU9250_08002cb0(undefined4 param1,undefined4 param2,undefined4 param3,uint param4)\n\n{\n  undefined4 result;\n  uint param4Copy;\n  \n  param4Copy = param4;\n  FUN_0800403c(0xd0,0x37,0x22,1,param1,param2,param3);\n  FUN_0800403c(0xd0,0x6a,1);\n  FUN_0800407c(0x18,0,\"../Src/MPU9250.c\",0xad);\n  FUN_0800403c(0x18,0xb,1);\n  FUN_0800403c(0x18,10,0,1);\n  FUN_0800403c(0x18,10,0xf,1);\n  FUN_080040e8(0x18,0x10,&param4Copy,3,\"../Src/MPU9250.c\",0xb6);\n  result = FUN_08000c44((param4Copy & 0xff) - 0x80);\n  result = FUN_08000cec(result,0x3b800000);\n  DAT_200002e8 = FUN_08000adc(result,0x3f800000);\n  result = FUN_08000c44((param4Copy >> 8 & 0xff) - 0x80);\n  result = FUN_08000cec(result,0x3b800000);\n  DAT_200002ec = FUN_08000adc(result,0x3f800000);\n  result = FUN_08000c44((param4Copy >> 0x10 & 0xff) - 0x80);\n  result = FUN_08000cec(result,0x3b800000);\n  DAT_200002f0 = FUN_08000adc(result,0x3f800000);\n  FUN_0800403c(0x18,10,0,1);\n  FUN_0800403c(0x18,10,0x16,1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002cb0": "initialize_mpu9250_08002cb0",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "result",
                "local_c": "param4Copy"
            },
            "calling": [
                "FUN_08002ea0"
            ],
            "called": [
                "FUN_0800407c",
                "FUN_0800403c",
                "FUN_08000c44",
                "FUN_08000cec",
                "FUN_080040e8",
                "FUN_08000adc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002d88": {
            "entrypoint": "0x08002d88",
            "current_name": "initialize_sensor_08002d88",
            "code": "\nvoid initializeSensor_08002d88(undefined4 sensorType,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int result;\n  undefined4 var1;\n  undefined4 var2;\n  int var3;\n  undefined2 var4;\n  undefined var5;\n  undefined var6;\n  undefined var7;\n  undefined var8;\n  byte var9;\n  undefined var10;\n  \n  var10 = (undefined)((uint)param4 >> 0x18);\n  var4 = 0;\n  var5 = 0;\n  var6 = 0;\n  var7 = 0;\n  var8 = 0;\n  var9 = 0;\n  result = FUN_0800407c(0x18,2,\"../Src/MPU9250.c\",0xd7,sensorType,param2);\n  if (result << 0x1f < 0) {\n    FUN_080040e8(0x18,3,&var4,7,\"../Src/MPU9250.c\",0xda);\n    var2 = DAT_2000001c;\n    if ((int)((uint)var9 << 0x1c) < 0) {\n      DAT_200013b9._2_2_ = DAT_200013b9._2_2_ + 1;\n    }\n    else {\n      DAT_200002ba = CONCAT11(var6,var5);\n      DAT_200002bc = CONCAT11(var8,var7);\n      var3 = (int)DAT_200002ba;\n      result = (int)DAT_200002bc;\n      DAT_200002b8 = var4;\n      var1 = FUN_08000c44();\n      var1 = FUN_08000cec(var1,var2);\n      var1 = FUN_08000cec(var1,DAT_200002e8);\n      var1 = FUN_08000ad8(var1,DAT_20000020);\n      DAT_200002dc = FUN_08000cec(var1,DAT_2000002c);\n      var1 = FUN_08000c44(var3);\n      var1 = FUN_08000cec(var1,var2);\n      var1 = FUN_08000cec(var1,DAT_200002ec);\n      var1 = FUN_08000ad8(var1,DAT_20000024);\n      DAT_200002e0 = FUN_08000cec(var1,DAT_20000030);\n      var1 = FUN_08000c44(result);\n      var2 = FUN_08000cec(var1,var2);\n      var2 = FUN_08000cec(var2,DAT_200002f0);\n      var2 = FUN_08000ad8(var2,DAT_20000028);\n      DAT_200002e4 = FUN_08000cec(var2,DAT_20000034);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002d88": "initialize_sensor_08002d88",
                "param_1": "sensorType",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "result",
                "uVar2": "var1",
                "uVar3": "var2",
                "iVar4": "var3",
                "local_28": "var4",
                "uStack_26": "var5",
                "uStack_25": "var6",
                "local_24": "var7",
                "local_23": "var8",
                "local_22": "var9",
                "uStack_21": "var10"
            },
            "calling": [
                "FUN_08002f28"
            ],
            "called": [
                "FUN_0800407c",
                "FUN_08000ad8",
                "FUN_08000c44",
                "FUN_08000cec",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ea0": {
            "entrypoint": "0x08002ea0",
            "current_name": "initialize_application_08002ea0",
            "code": "\nvoid initializeApplication_08002ea0(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  undefined4 returnValue;\n  \n  FUN_08002ad0();\n  FUN_08002cb0();\n  FUN_08003314(0x3f19999a);\n  FUN_08003320(0,returnValue,arg3,arg4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ea0": "initialize_application_08002ea0",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "extraout_r1": "returnValue"
            },
            "calling": [
                "FUN_08004194"
            ],
            "called": [
                "FUN_08002ad0",
                "FUN_08002cb0",
                "FUN_08003320",
                "FUN_08003314"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ec0": {
            "entrypoint": "0x08002ec0",
            "current_name": "calculate_combined_value_08002ec0",
            "code": "\nvoid calculateCombinedValue_08002ec0(void)\n\n{\n  undefined4 result1;\n  undefined4 constant;\n  undefined4 initialValue;\n  \n  constant = DAT_2000024c;\n  initialValue = DAT_20000010;\n  result1 = FUN_08000ad8(0x3f800000,DAT_20000010);\n  constant = FUN_08000cec(result1,constant);\n  initialValue = FUN_08000cec(initialValue,DAT_2000000c);\n  DAT_2000000c = FUN_08000adc(initialValue,constant);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ec0": "calculate_combined_value_08002ec0",
                "uVar1": "result1",
                "uVar2": "constant",
                "uVar3": "initialValue"
            },
            "calling": [
                "FUN_08004a84",
                "FUN_08002f28"
            ],
            "called": [
                "FUN_08000ad8",
                "FUN_08000cec",
                "FUN_08000adc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ed4": {
            "entrypoint": "0x08002ed4",
            "current_name": "calculate_and_update_ram_value_08002ed4",
            "code": "\nvoid calculateAndUpdateRamValue_08002ed4(void)\n\n{\n  undefined4 result2;\n  undefined4 initialValue;\n  undefined4 value1;\n  \n  initialValue = DAT_20000248;\n  value1 = endValue;\n  result2 = FUN_08000ad8(0x3f800000,endValue);\n  initialValue = FUN_08000cec(result2,initialValue);\n  value1 = FUN_08000cec(value1,value2);\n  value2 = FUN_08000adc(value1,initialValue);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ed4": "calculate_and_update_ram_value_08002ed4",
                "uVar1": "result2",
                "uVar2": "initialValue",
                "uVar3": "value1",
                "uRam20000018": "endValue",
                "uRam20000014": "value2"
            },
            "calling": [
                "FUN_08004a84",
                "FUN_08002f28"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ee8": {
            "entrypoint": "0x08002ee8",
            "current_name": "initialize_connection_08002ee8",
            "code": "\nvoid initializeConnection_08002ee8(void)\n\n{\n  undefined4 connection;\n  int status;\n  \n  connection = DAT_20000250;\n  status = FUN_08001050(DAT_20000250,0xc3340000);\n  if ((status != 0) && (status = FUN_08001028(connection,0x42b40000), status != 0)) {\n    FUN_08000adc(connection,0x42b40000);\n    return;\n  }\n  FUN_08000ad8(connection,0x43870000);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ee8": "initialize_connection_08002ee8",
                "uVar1": "connection",
                "iVar2": "status"
            },
            "calling": [
                "FUN_08004a84",
                "FUN_08002f28"
            ],
            "called": [
                "FUN_08000ad8",
                "FUN_08001050",
                "FUN_08001028",
                "FUN_08000adc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f28": {
            "entrypoint": "0x08002f28",
            "current_name": "initialize_system_08002f28",
            "code": "\n\n\nvoid initializeSystem_08002f28(void)\n\n{\n  undefined4 returnValue;\n  \n  FUN_08002b48();\n  FUN_08002bf0();\n  FUN_08002d88();\n  DAT_20000258 = thunk_FUN_0800115c();\n  returnValue = FUN_08000c3c(DAT_20000258 - DAT_20000254);\n  FUN_08000e54(returnValue,0x447a0000);\n  FUN_08003320();\n  DAT_20000254 = DAT_20000258;\n  FUNC_08003330(DAT_200002d4 + -0x80000000,DAT_200002d0 + -0x80000000,DAT_200002d8,DAT_200002c8,\n               DAT_200002c4,DAT_200002cc + -0x80000000,DAT_200002dc,DAT_200002e0,DAT_200002e4,\n               &DAT_20000248);\n  _DAT_2000142a = (undefined2)((uint)(int)DAT_200002f4 / 100);\n  _DAT_2000142e = (undefined2)((uint)(int)DAT_200002f8 / 100);\n  DAT_2000142c = (undefined2)((uint)(int)DAT_200002f6 / 100);\n  DAT_20001430 = DAT_200002be;\n  _DAT_20001432 = DAT_200002c0;\n  DAT_20001434 = DAT_200002c2;\n  _DAT_20001436 = DAT_200002b8;\n  DAT_20001438 = DAT_200002ba;\n  DAT_2000143a = DAT_200002bc;\n  returnValue = FUN_08002ed4();\n  FUN_08000cec(returnValue,0x41200000);\n  DAT_20001395._0_2_ = FUN_08001078();\n  returnValue = FUN_08002ec0();\n  FUN_08000cec(returnValue,0x41200000);\n  DAT_20001395._2_2_ = FUN_08001078();\n  FUN_08002ee8();\n  DAT_20001399 = FUN_08001078();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f28": "initialize_system_08002f28",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_08000e54",
                "FUN_08000c3c",
                "FUN_08002ee8",
                "FUN_08000cec",
                "FUN_08003320",
                "FUN_08002bf0",
                "FUN_08002ed4",
                "FUN_08002b48",
                "thunk_FUN_0800115c",
                "FUN_08002d88",
                "FUN_08003330",
                "FUN_08001078",
                "FUN_08002ec0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003034": {
            "entrypoint": "0x08003034",
            "current_name": "get_combined_value_08003034",
            "code": "\nuint getCombinedValue_08003034(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  undefined4 combinedValue;\n  \n  combinedValue = input4;\n  FUN_080040b8(0xee,0,&combinedValue,3,\"../Src/MS5611.c\",0x8c,input3);\n  return (uint)CONCAT12((undefined)combinedValue,CONCAT11(combinedValue._1_1_,combinedValue._2_1_));\n}\n\n",
            "renaming": {
                "FUN_08003034": "get_combined_value_08003034",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "local_c": "combinedValue"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_080040b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003068": {
            "entrypoint": "0x08003068",
            "current_name": "get_data_value_08003068",
            "code": "\nundefined4 get_data_value_08003068(void)\n\n{\n  return DAT_200002fc;\n}\n\n",
            "renaming": {
                "FUN_08003068": "get_data_value_08003068"
            },
            "calling": [
                "FUN_08004a30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003298": {
            "entrypoint": "0x08003298",
            "current_name": "initialize_sensor_08003298",
            "code": "\nvoid initializeSensor_08003298(void)\n\n{\n  int counter;\n  undefined byte1;\n  undefined byte2;\n  \n  counter = 0;\n  FUN_0800403c(0xee,0x1e,1);\n  thunk_FUNC_08001168(10);\n  DAT_20000038 = 8;\n  do {\n    byte1 = 0;\n    byte2 = 0;\n    FUN_080040e8(0xee,counter + 0xa0U & 0xffff,&byte1,2,\"../Src/MS5611.c\",0x7c);\n    *(ushort *)((int)&DAT_2000025c + counter) = CONCAT11(byte1,byte2);\n    counter = counter + 2;\n  } while (counter != 0x10);\n  counter = 0;\n  do {\n    (&DAT_20000300)[counter] = 0;\n    counter = counter + 1;\n  } while (counter != 0x14);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003298": "initialize_sensor_08003298",
                "iVar1": "counter",
                "local_1c": "byte1",
                "local_1b": "byte2"
            },
            "calling": [
                "FUN_08004194"
            ],
            "called": [
                "FUN_0800403c",
                "thunk_FUN_08001168",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003314": {
            "entrypoint": "0x08003314",
            "current_name": "initialize_data_08003314",
            "code": "\nvoid initializeData_08003314(undefined4 inputData)\n\n{\n  DAT_2000035c = inputData;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003314": "initialize_data_08003314",
                "param_1": "inputData"
            },
            "calling": [
                "FUN_08002ea0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003320": {
            "entrypoint": "0x08003320",
            "current_name": "store_parameter_08003320",
            "code": "\nvoid storeParameter_08003320(undefined4 value)\n\n{\n  DAT_20000360 = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003320": "store_parameter_08003320",
                "param_1": "value"
            },
            "calling": [
                "FUN_08002ea0",
                "FUN_08002f28"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003330": {
            "entrypoint": "0x08003330",
            "current_name": "FUNC_08003330",
            "code": "\nvoid FUNC_08003330(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                 undefined4 param_5,undefined4 param_6,undefined4 param_7,undefined4 param_8,\n                 undefined4 param_9,undefined4 *param_10)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  int iVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  int iVar8;\n  undefined4 uVar9;\n  undefined4 uVar10;\n  undefined4 uVar11;\n  undefined4 uVar12;\n  undefined4 uVar13;\n  undefined4 uVar14;\n  undefined4 uVar15;\n  undefined4 uVar16;\n  undefined4 uVar17;\n  undefined4 uVar18;\n  int iVar19;\n  undefined4 uVar20;\n  undefined4 uVar21;\n  undefined4 uVar22;\n  undefined4 uVar23;\n  undefined4 uVar24;\n  undefined4 uVar25;\n  int iVar26;\n  undefined4 uVar27;\n  undefined4 uVar28;\n  undefined4 uVar29;\n  int iVar30;\n  undefined8 uVar31;\n  undefined8 uVar32;\n  \n  uVar29 = DAT_20000048;\n  uVar28 = DAT_20000044;\n  iVar30 = DAT_20000040;\n  uVar27 = DAT_2000003c;\n  uVar1 = FUN_08000cec(param_1,param_1);\n  uVar2 = FUN_08000cec(param_2);\n  uVar1 = FUN_08000adc(uVar1,uVar2);\n  uVar2 = FUN_08000cec(param_3);\n  FUN_08000adc(uVar1,uVar2);\n  FUN_08000428();\n  FUN_08005bc8();\n  uVar1 = FUN_08000a30();\n  iVar3 = FUN_08001014(uVar1,0);\n  if (iVar3 == 0) {\n    uVar2 = FUN_08000cec(param_7);\n    uVar4 = FUN_08000cec(param_8);\n    uVar2 = FUN_08000adc(uVar2,uVar4);\n    uVar4 = FUN_08000cec(param_9);\n    FUN_08000adc(uVar2,uVar4);\n    FUN_08000428();\n    FUN_08005bc8();\n    uVar2 = FUN_08000a30();\n    iVar3 = FUN_08001014(uVar2,0);\n    if (iVar3 == 0) {\n      uVar31 = FUN_08000428(param_4);\n      FUN_080004d0((int)uVar31,(int)((ulonglong)uVar31 >> 0x20),0xa2529d39,0x3f91df46);\n      uVar4 = FUN_08000a30();\n      uVar31 = FUN_08000428(param_5);\n      FUN_080004d0((int)uVar31,(int)((ulonglong)uVar31 >> 0x20),0xa2529d39,0x3f91df46);\n      uVar5 = FUN_08000a30();\n      uVar31 = FUN_08000428(param_6);\n      FUN_080004d0((int)uVar31,(int)((ulonglong)uVar31 >> 0x20),0xa2529d39,0x3f91df46);\n      uVar6 = FUN_08000a30();\n      iVar3 = FUN_08000adc(uVar27);\n      uVar7 = FUN_08000adc(iVar30);\n      iVar8 = FUN_08000adc(uVar28,uVar28);\n      uVar9 = FUN_08000adc(uVar29,uVar29);\n      uVar10 = FUN_08000cec(uVar27);\n      uVar11 = FUN_08000cec(uVar27,iVar30);\n      uVar12 = FUN_08000cec(uVar27,uVar28);\n      uVar13 = FUN_08000cec(iVar30);\n      uVar14 = FUN_08000cec(iVar30,uVar29);\n      uVar15 = FUN_08000cec(uVar28,uVar28);\n      uVar16 = FUN_08000cec(uVar29,uVar29);\n      uVar1 = FUN_08000e54(0x3f800000,uVar1);\n      uVar2 = FUN_08000e54(0x3f800000,uVar2);\n      uVar17 = FUN_08000cec(param_7,uVar2);\n      uVar18 = FUN_08000cec(param_8,uVar2);\n      uVar2 = FUN_08000cec(param_9,uVar2);\n      iVar19 = FUN_08000cec(iVar3,uVar17);\n      uVar20 = FUN_08000cec(iVar3,uVar18);\n      uVar21 = FUN_08000cec(iVar3,uVar2);\n      uVar22 = FUN_08000cec(uVar7,uVar17);\n      uVar23 = FUN_08000cec(uVar10,uVar17);\n      uVar24 = FUN_08000cec(uVar29,uVar20);\n      uVar23 = FUN_08000ad8(uVar23,uVar24);\n      uVar24 = FUN_08000cec(uVar28,uVar21);\n      uVar23 = FUN_08000adc(uVar23,uVar24);\n      uVar24 = FUN_08000cec(uVar13,uVar17);\n      uVar23 = FUN_08000adc(uVar23,uVar24);\n      uVar24 = FUN_08000cec(uVar7,uVar18);\n      uVar24 = FUN_08000cec(uVar24,uVar28);\n      uVar23 = FUN_08000adc(uVar23,uVar24);\n      uVar24 = FUN_08000cec(uVar7,uVar2);\n      uVar24 = FUN_08000cec(uVar24,uVar29);\n      uVar23 = FUN_08000adc(uVar23,uVar24);\n      uVar24 = FUN_08000cec(uVar15,uVar17);\n      uVar23 = FUN_08000ad8(uVar23,uVar24);\n      uVar24 = FUN_08000cec(uVar16,uVar17);\n      uVar23 = FUN_08000ad8(uVar23,uVar24);\n      uVar24 = FUN_08000cec(uVar29,iVar19);\n      uVar25 = FUN_08000cec(uVar10,uVar18);\n      uVar24 = FUN_08000adc(uVar24,uVar25);\n      uVar21 = FUN_08000cec(iVar30,uVar21);\n      uVar21 = FUN_08000ad8(uVar24,uVar21);\n      uVar24 = FUN_08000cec(uVar28,uVar22);\n      uVar21 = FUN_08000adc(uVar21,uVar24);\n      uVar24 = FUN_08000cec(uVar13,uVar18);\n      uVar21 = FUN_08000ad8(uVar21,uVar24);\n      uVar24 = FUN_08000cec(uVar15,uVar18);\n      uVar21 = FUN_08000adc(uVar21,uVar24);\n      uVar24 = FUN_08000cec(iVar8,uVar2);\n      uVar24 = FUN_08000cec(uVar24,uVar29);\n      uVar21 = FUN_08000adc(uVar21,uVar24);\n      uVar24 = FUN_08000cec(uVar16,uVar18);\n      uVar21 = FUN_08000ad8(uVar21,uVar24);\n      uVar23 = FUN_08000cec(uVar23,uVar23);\n      uVar21 = FUN_08000cec(uVar21,uVar21);\n      FUN_08000adc(uVar23,uVar21);\n      FUN_08000428();\n      FUN_08005bc8();\n      iVar26 = FUN_08000a30();\n      uVar21 = FUN_08000cec(iVar19 + -0x80000000,uVar28);\n      uVar20 = FUN_08000cec(iVar30,uVar20);\n      uVar20 = FUN_08000adc(uVar21,uVar20);\n      uVar10 = FUN_08000cec(uVar10,uVar2);\n      uVar10 = FUN_08000adc(uVar20,uVar10);\n      uVar20 = FUN_08000cec(uVar29,uVar22);\n      uVar10 = FUN_08000adc(uVar10,uVar20);\n      uVar20 = FUN_08000cec(uVar13,uVar2);\n      uVar10 = FUN_08000ad8(uVar10,uVar20);\n      uVar20 = FUN_08000cec(iVar8,uVar18);\n      uVar20 = FUN_08000cec(uVar20,uVar29);\n      uVar10 = FUN_08000adc(uVar10,uVar20);\n      uVar20 = FUN_08000cec(uVar15,uVar2);\n      uVar10 = FUN_08000ad8(uVar10,uVar20);\n      uVar20 = FUN_08000cec(uVar16,uVar2);\n      uVar10 = FUN_08000adc(uVar10,uVar20);\n      uVar20 = FUN_08000adc(uVar10,uVar10);\n      uVar21 = FUN_08000adc(uVar14);\n      uVar22 = FUN_08000cec(uVar28,iVar3);\n      uVar21 = FUN_08000ad8(uVar21,uVar22);\n      uVar22 = FUN_08000cec(param_1,uVar1);\n      uVar21 = FUN_08000ad8(uVar21,uVar22);\n      uVar22 = FUN_08000cec(uVar29,iVar8);\n      uVar23 = FUN_08000adc(uVar11);\n      uVar22 = FUN_08000adc(uVar22,uVar23);\n      uVar23 = FUN_08000cec(param_2,uVar1);\n      uVar22 = FUN_08000ad8(uVar22,uVar23);\n      uVar23 = FUN_08000cec(uVar28,uVar10);\n      uVar24 = FUN_08000ad8(0x3f000000,uVar15);\n      uVar16 = FUN_08000ad8(uVar24,uVar16);\n      uVar16 = FUN_08000cec(uVar16,iVar26);\n      uVar24 = FUN_08000ad8(uVar14,uVar12);\n      uVar24 = FUN_08000cec(uVar24,uVar10);\n      uVar16 = FUN_08000adc(uVar16,uVar24);\n      uVar16 = FUN_08000ad8(uVar16,uVar17);\n      uVar17 = FUN_08000cec(iVar30,uVar10);\n      uVar24 = FUN_08000cec(iVar30,uVar28);\n      uVar25 = FUN_08000cec(uVar27,uVar29);\n      uVar24 = FUN_08000ad8(uVar24,uVar25);\n      uVar24 = FUN_08000cec(uVar24,iVar26);\n      uVar25 = FUN_08000cec(uVar28,uVar29);\n      uVar11 = FUN_08000adc(uVar25,uVar11);\n      uVar11 = FUN_08000cec(uVar11,uVar10);\n      uVar11 = FUN_08000adc(uVar24,uVar11);\n      uVar11 = FUN_08000ad8(uVar11,uVar18);\n      uVar18 = FUN_08000cec(uVar28,iVar26);\n      uVar24 = FUN_08000ad8(0x3f000000,uVar13);\n      uVar24 = FUN_08000ad8(uVar24,uVar15);\n      uVar24 = FUN_08000cec(uVar24,uVar10);\n      uVar12 = FUN_08000adc(uVar12,uVar14);\n      uVar12 = FUN_08000cec(uVar12,iVar26);\n      uVar12 = FUN_08000adc(uVar24,uVar12);\n      uVar2 = FUN_08000ad8(uVar12,uVar2);\n      uVar12 = FUN_08000cec(iVar8 + -0x80000000,uVar21);\n      uVar14 = FUN_08000cec(uVar7,uVar22);\n      uVar12 = FUN_08000adc(uVar12,uVar14);\n      uVar14 = FUN_08000cec(uVar23,uVar16);\n      uVar12 = FUN_08000ad8(uVar12,uVar14);\n      uVar14 = FUN_08000cec(uVar29,iVar26 + -0x80000000);\n      uVar14 = FUN_08000adc(uVar14,uVar17);\n      uVar14 = FUN_08000cec(uVar14,uVar11);\n      uVar12 = FUN_08000adc(uVar12,uVar14);\n      uVar14 = FUN_08000cec(uVar18,uVar2);\n      uVar12 = FUN_08000adc(uVar12,uVar14);\n      uVar13 = FUN_08000adc(uVar13);\n      uVar13 = FUN_08000ad8(0x3f800000,uVar13);\n      uVar14 = FUN_08000adc(uVar15);\n      uVar13 = FUN_08000ad8(uVar13,uVar14);\n      uVar1 = FUN_08000cec(param_3,uVar1);\n      uVar1 = FUN_08000ad8(uVar13,uVar1);\n      uVar13 = FUN_08000cec(uVar29,uVar10);\n      uVar10 = FUN_08000cec(uVar27,uVar10);\n      uVar14 = FUN_08000cec(uVar9,uVar21);\n      uVar15 = FUN_08000cec(iVar3,uVar22);\n      uVar14 = FUN_08000adc(uVar14,uVar15);\n      uVar15 = FUN_08000cec(iVar30,0x40800000);\n      uVar15 = FUN_08000cec(uVar15,uVar1);\n      uVar14 = FUN_08000ad8(uVar14,uVar15);\n      uVar15 = FUN_08000cec(uVar16,uVar13);\n      uVar14 = FUN_08000adc(uVar14,uVar15);\n      uVar15 = FUN_08000adc(uVar18,uVar10);\n      uVar15 = FUN_08000cec(uVar15,uVar11);\n      uVar14 = FUN_08000adc(uVar14,uVar15);\n      uVar15 = FUN_08000cec(uVar29,iVar26);\n      uVar18 = FUN_08000cec(iVar30,uVar20);\n      uVar15 = FUN_08000ad8(uVar15,uVar18);\n      uVar15 = FUN_08000cec(uVar15,uVar2);\n      uVar14 = FUN_08000adc(uVar14,uVar15);\n      iVar19 = FUN_08000adc(iVar26,iVar26);\n      uVar15 = FUN_08000cec(iVar30,iVar26);\n      uVar18 = FUN_08000cec(iVar3 + -0x80000000,uVar21);\n      uVar9 = FUN_08000cec(uVar9,uVar22);\n      uVar9 = FUN_08000adc(uVar18,uVar9);\n      uVar18 = FUN_08000cec(uVar28,0x40800000);\n      uVar1 = FUN_08000cec(uVar18,uVar1);\n      uVar1 = FUN_08000ad8(uVar9,uVar1);\n      uVar9 = FUN_08000cec(uVar28,iVar19 + -0x80000000);\n      uVar9 = FUN_08000ad8(uVar9,uVar10);\n      uVar9 = FUN_08000cec(uVar9,uVar16);\n      uVar1 = FUN_08000adc(uVar1,uVar9);\n      uVar9 = FUN_08000adc(uVar13,uVar15);\n      uVar9 = FUN_08000cec(uVar9,uVar11);\n      uVar1 = FUN_08000adc(uVar1,uVar9);\n      uVar9 = FUN_08000cec(uVar27,iVar26);\n      uVar10 = FUN_08000cec(uVar28,uVar20);\n      uVar9 = FUN_08000ad8(uVar9,uVar10);\n      uVar9 = FUN_08000cec(uVar9,uVar2);\n      uVar9 = FUN_08000adc(uVar1,uVar9);\n      uVar1 = FUN_08000cec(uVar7,uVar21);\n      uVar7 = FUN_08000cec(iVar8,uVar22);\n      uVar1 = FUN_08000adc(uVar1,uVar7);\n      uVar7 = FUN_08000cec(uVar29,iVar19 + -0x80000000);\n      uVar7 = FUN_08000adc(uVar7,uVar17);\n      uVar7 = FUN_08000cec(uVar7,uVar16);\n      uVar1 = FUN_08000adc(uVar1,uVar7);\n      uVar7 = FUN_08000cec(uVar27,iVar26 + -0x80000000);\n      uVar7 = FUN_08000adc(uVar7,uVar23);\n      uVar7 = FUN_08000cec(uVar7,uVar11);\n      uVar1 = FUN_08000adc(uVar1,uVar7);\n      uVar2 = FUN_08000cec(uVar2,uVar15);\n      uVar7 = FUN_08000adc(uVar1,uVar2);\n      uVar1 = FUN_08000cec(uVar12);\n      uVar2 = FUN_08000cec(uVar14);\n      uVar1 = FUN_08000adc(uVar1,uVar2);\n      uVar2 = FUN_08000cec(uVar9,uVar9);\n      uVar1 = FUN_08000adc(uVar1,uVar2);\n      uVar2 = FUN_08000cec(uVar7,uVar7);\n      FUN_08000adc(uVar1,uVar2);\n      FUN_08000428();\n      FUN_08005bc8();\n      uVar1 = FUN_08000a30();\n      uVar10 = FUN_08000e54(0x3f800000,uVar1);\n      uVar1 = DAT_2000035c;\n      uVar2 = FUN_08000cec(iVar30 + -0x80000000,uVar4);\n      uVar11 = FUN_08000cec(uVar28,uVar5);\n      uVar2 = FUN_08000ad8(uVar2,uVar11);\n      uVar11 = FUN_08000cec(uVar29,uVar6);\n      uVar2 = FUN_08000ad8(uVar2,uVar11);\n      uVar11 = FUN_08000cec(uVar2,0x3f000000);\n      uVar12 = FUN_08000cec(uVar12,uVar10);\n      uVar2 = DAT_20000360;\n      uVar12 = FUN_08000cec(uVar12,uVar1);\n      uVar11 = FUN_08000ad8(uVar11,uVar12);\n      uVar2 = FUN_08000cec(uVar11,uVar2);\n      uVar11 = FUN_08000adc(uVar2,uVar27);\n      uVar12 = FUN_08000cec(uVar27,uVar4);\n      uVar13 = FUN_08000cec(uVar28,uVar6);\n      uVar2 = DAT_20000360;\n      uVar12 = FUN_08000adc(uVar12,uVar13);\n      uVar13 = FUN_08000cec(uVar29,uVar5);\n      uVar12 = FUN_08000ad8(uVar12,uVar13);\n      uVar12 = FUN_08000cec(uVar12,0x3f000000);\n      uVar13 = FUN_08000cec(uVar14,uVar10);\n      uVar13 = FUN_08000cec(uVar13,uVar1);\n      uVar12 = FUN_08000ad8(uVar12,uVar13);\n      uVar2 = FUN_08000cec(uVar12,uVar2);\n      uVar12 = FUN_08000adc(uVar2,iVar30);\n      uVar2 = DAT_20000360;\n      uVar13 = FUN_08000cec(uVar27,uVar5);\n      uVar14 = FUN_08000cec(iVar30,uVar6);\n      uVar13 = FUN_08000ad8(uVar13,uVar14);\n      uVar14 = FUN_08000cec(uVar29,uVar4);\n      uVar13 = FUN_08000adc(uVar13,uVar14);\n      uVar13 = FUN_08000cec(uVar13,0x3f000000);\n      uVar9 = FUN_08000cec(uVar9,uVar10);\n      uVar9 = FUN_08000cec(uVar9,uVar1);\n      uVar9 = FUN_08000ad8(uVar13,uVar9);\n      uVar2 = FUN_08000cec(uVar9,uVar2);\n      uVar2 = FUN_08000adc(uVar2,uVar28);\n      uVar27 = FUN_08000cec(uVar27,uVar6);\n      uVar5 = FUN_08000cec(iVar30,uVar5);\n      uVar27 = FUN_08000adc(uVar27,uVar5);\n      uVar28 = FUN_08000cec(uVar28,uVar4);\n      uVar27 = FUN_08000ad8(uVar27,uVar28);\n      uVar28 = FUN_08000cec(uVar27,0x3f000000);\n      uVar27 = FUN_08000cec(uVar7,uVar10);\n      uVar1 = FUN_08000cec(uVar27,uVar1);\n      uVar27 = DAT_20000360;\n      uVar28 = FUN_08000ad8(uVar28,uVar1);\n      uVar27 = FUN_08000cec(uVar28,uVar27);\n      uVar27 = FUN_08000adc(uVar27,uVar29);\n      uVar28 = FUN_08000cec(uVar11,uVar11);\n      uVar29 = FUN_08000cec(uVar12,uVar12);\n      uVar28 = FUN_08000adc(uVar28,uVar29);\n      uVar29 = FUN_08000cec(uVar2,uVar2);\n      uVar28 = FUN_08000adc(uVar28,uVar29);\n      uVar29 = FUN_08000cec(uVar27,uVar27);\n      FUN_08000adc(uVar28,uVar29);\n      FUN_08000428();\n      FUN_08005bc8();\n      uVar28 = FUN_08000a30();\n      uVar28 = FUN_08000e54(0x3f800000,uVar28);\n      uVar29 = FUN_08000cec(uVar11,uVar28);\n      DAT_2000003c = uVar29;\n      iVar30 = FUN_08000cec(uVar12,uVar28);\n      DAT_20000040 = iVar30;\n      uVar1 = FUN_08000cec(uVar2,uVar28);\n      DAT_20000044 = uVar1;\n      DAT_20000048 = FUN_08000cec(uVar27,uVar28);\n      uVar27 = FUN_08000cec(iVar30,DAT_20000048);\n      uVar28 = FUN_08000cec(uVar29,uVar1);\n      uVar27 = FUN_08000ad8(uVar27,uVar28);\n      FUN_08000adc(uVar27,uVar27);\n      FUN_08000428();\n      uVar31 = FUN_08005854();\n      uVar31 = FUN_080004d0((int)uVar31,(int)((ulonglong)uVar31 >> 0x20),0,0x40668000);\n      FUN_08000724((int)uVar31,(int)((ulonglong)uVar31 >> 0x20),0x54442d18,0x400921fb);\n      uVar27 = FUN_08000a30();\n      *param_10 = uVar27;\n      iVar30 = DAT_20000040;\n      uVar27 = DAT_2000003c;\n      uVar28 = FUN_08000cec(DAT_2000003c,DAT_2000003c);\n      uVar29 = FUN_08000cec(iVar30,iVar30);\n      uVar29 = FUN_08000ad8(uVar28,uVar29);\n      uVar28 = DAT_20000044;\n      uVar1 = FUN_08000cec(DAT_20000044,DAT_20000044);\n      uVar1 = FUN_08000ad8(uVar29,uVar1);\n      uVar29 = DAT_20000048;\n      uVar2 = FUN_08000cec(DAT_20000048,DAT_20000048);\n      FUN_08000adc(uVar1,uVar2);\n      uVar31 = FUN_08000428();\n      uVar27 = FUN_08000cec(uVar27,iVar30);\n      uVar28 = FUN_08000cec(uVar28,uVar29);\n      uVar27 = FUN_08000adc(uVar27,uVar28);\n      FUN_08000adc(uVar27,uVar27);\n      uVar32 = FUN_08000428();\n      uVar31 = thunk_FUN_08006070((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),(int)uVar31,\n                                  (int)((ulonglong)uVar31 >> 0x20));\n      uVar31 = FUN_080004d0((int)uVar31,(int)((ulonglong)uVar31 >> 0x20),0,0x40668000);\n      FUN_08000724((int)uVar31,(int)((ulonglong)uVar31 >> 0x20),0x54442d18,0x400921fb);\n      uVar27 = FUN_08000a30();\n      param_10[1] = uVar27;\n      iVar30 = DAT_20000040;\n      uVar27 = DAT_2000003c;\n      uVar28 = FUN_08000cec(DAT_2000003c,DAT_2000003c);\n      uVar29 = FUN_08000cec(iVar30,iVar30);\n      uVar29 = FUN_08000adc(uVar28,uVar29);\n      uVar28 = DAT_20000044;\n      uVar1 = FUN_08000cec(DAT_20000044,DAT_20000044);\n      uVar1 = FUN_08000ad8(uVar29,uVar1);\n      uVar29 = DAT_20000048;\n      uVar2 = FUN_08000cec(DAT_20000048,DAT_20000048);\n      FUN_08000ad8(uVar1,uVar2);\n      uVar31 = FUN_08000428();\n      uVar28 = FUN_08000cec(iVar30,uVar28);\n      uVar27 = FUN_08000cec(uVar27,uVar29);\n      uVar27 = FUN_08000adc(uVar28,uVar27);\n      FUN_08000adc(uVar27,uVar27);\n      uVar32 = FUN_08000428();\n      uVar31 = thunk_FUN_08006070((int)uVar32,(int)((ulonglong)uVar32 >> 0x20),(int)uVar31,\n                                  (int)((ulonglong)uVar31 >> 0x20));\n      uVar31 = FUN_080004d0((int)uVar31,(int)((ulonglong)uVar31 >> 0x20),0,0x40668000);\n      FUN_08000724((int)uVar31,(int)((ulonglong)uVar31 >> 0x20),0x54442d18,0x400921fb);\n      uVar27 = FUN_08000a30();\n      param_10[2] = uVar27;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003330": "FUNC_08003330"
            },
            "calling": [
                "FUN_08002f28"
            ],
            "called": [
                "FUN_08000ad8",
                "FUN_080004d0",
                "FUN_08001014",
                "FUN_08000e54",
                "thunk_FUN_08006070",
                "FUN_08000a30",
                "FUN_08005854",
                "FUN_08005bc8",
                "FUN_08000cec",
                "FUN_08000428",
                "FUN_08000724",
                "FUN_08000adc"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08003eb0": {
            "entrypoint": "0x08003eb0",
            "current_name": "shift_left_64_bit_08003eb0",
            "code": "\nlonglong shift_left_64_bit_08003eb0(uint input_value)\n\n{\n  if (DAT_20000280 == 0) {\n    perform_interrupt(0x3f);\n    return concatenate_64_bit(input_value,1);\n  }\n  return (ulonglong)input_value << 0x20;\n}\n\n",
            "renaming": {
                "FUN_08003eb0": "shift_left_64_bit_08003eb0",
                "param_1": "input_value",
                "software_interrupt": "perform_interrupt",
                "CONCAT44": "concatenate_64_bit"
            },
            "calling": [
                "FUN_080041ae"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ec8": {
            "entrypoint": "0x08003ec8",
            "current_name": "increment_and_store_value_08003ec8",
            "code": "\nundefined4 incrementAndStoreValue_08003ec8(int memoryAddress,undefined value)\n\n{\n  *(short *)(memoryAddress + 0x804) = *(short *)(memoryAddress + 0x804) + 1;\n  *(undefined *)(memoryAddress + (uint)*(ushort *)(memoryAddress + 0x802)) = value;\n  *(ushort *)(memoryAddress + 0x802) = *(short *)(memoryAddress + 0x802) + 1U & 0x7ff;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08003ec8": "increment_and_store_value_08003ec8",
                "param_1": "memoryAddress",
                "param_2": "value"
            },
            "calling": [
                "FUN_08004c30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f3c": {
            "entrypoint": "0x08003f3c",
            "current_name": "initialize_flags_08003f3c",
            "code": "\nvoid initializeFlags_08003f3c(int flag1,int flag2,int flag3)\n\n{\n  FUN_08001424(0x40011000,0x8000,flag1 == 0);\n  FUN_08001424(0x40011000,0x4000,flag2 == 0);\n  FUN_08001424(0x40011000,0x2000,flag3 == 0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f3c": "initialize_flags_08003f3c",
                "param_1": "flag1",
                "param_2": "flag2",
                "param_3": "flag3"
            },
            "calling": [
                "FUN_08004a84",
                "FUN_08004028"
            ],
            "called": [
                "FUN_08001424"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003fc4": {
            "entrypoint": "0x08003fc4",
            "current_name": "set_param_08003fc4",
            "code": "\nvoid setParam_08003fc4(undefined4 inputParam)\n\n{\n  *(undefined4 *)(DAT_200014c8 + 0x40) = inputParam;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003fc4": "set_param_08003fc4",
                "param_1": "inputParam"
            },
            "calling": [
                "FUN_0800426c",
                "FUN_080041c4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003fd0": {
            "entrypoint": "0x08003fd0",
            "current_name": "set_param_value_08003fd0",
            "code": "\nvoid setParamValue_08003fd0(undefined4 value)\n\n{\n  *(undefined4 *)(DAT_200014c8 + 0x3c) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003fd0": "set_param_value_08003fd0",
                "param_1": "value"
            },
            "calling": [
                "FUN_0800426c",
                "FUN_080041c4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003fdc": {
            "entrypoint": "0x08003fdc",
            "current_name": "set_memory_value_08003fdc",
            "code": "\nvoid setMemoryValue_08003fdc(undefined4 value)\n\n{\n  *(undefined4 *)(DAT_200015f8 + 0x38) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003fdc": "set_memory_value_08003fdc",
                "param_1": "value"
            },
            "calling": [
                "FUN_0800426c",
                "FUN_080041c4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003fe8": {
            "entrypoint": "0x08003fe8",
            "current_name": "set_param_value_08003fe8",
            "code": "\nvoid setParamValue_08003fe8(undefined4 value)\n\n{\n  *(undefined4 *)(DAT_20001540 + 0x3c) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003fe8": "set_param_value_08003fe8",
                "param_1": "value"
            },
            "calling": [
                "FUN_0800426c",
                "FUN_080041c4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ff4": {
            "entrypoint": "0x08003ff4",
            "current_name": "initialize_data_08003ff4",
            "code": "\nvoid initialize_data_08003ff4(void)\n\n{\n  FUN_08002538(&DAT_200015f8,4);\n  FUN_08002538(&DAT_20001540,8);\n  FUN_08002538(&DAT_200014c8,8);\n  FUN_08002538(&DAT_200014c8,0xc);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003ff4": "initialize_data_08003ff4"
            },
            "calling": [
                "FUN_08004028"
            ],
            "called": [
                "FUN_08002538"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004028": {
            "entrypoint": "0x08004028",
            "current_name": "perform_operations_08004028",
            "code": "\nvoid performOperations_08004028(void)\n\n{\n  int iterationCount;\n  \n  FUN_0800458c();\n  FUN_08003ff4();\n  iterationCount = 3;\n  do {\n    FUN_08003f3c(1,0);\n    thunk_FUNC_08001168(100);\n    FUN_08003f3c(0,1);\n    thunk_FUNC_08001168(100);\n    FUN_08003f3c(0,0,1);\n    thunk_FUNC_08001168(100);\n    iterationCount = iterationCount + -1;\n  } while (iterationCount != 0);\n  FUN_08003f3c(1,1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004028": "perform_operations_08004028",
                "iVar1": "iterationCount"
            },
            "calling": [
                "FUN_08004194"
            ],
            "called": [
                "FUN_08003ff4",
                "thunk_FUN_08001168",
                "FUN_08003f3c",
                "FUN_0800458c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800403c": {
            "entrypoint": "0x0800403c",
            "current_name": "execute_i2_c_transaction_0800403c",
            "code": "\nvoid executeI2CTransaction_0800403c(undefined4 dataArray,undefined4 size,undefined mode,int enableThreading)\n\n{\n  int transactionResult;\n  undefined localBuffer [8];\n  \n  localBuffer[0] = mode;\n  transactionResult = FUN_08001828(&DAT_20001504,dataArray,size,1,localBuffer,1,200);\n  if (transactionResult != 0) {\n    FUN_08004490(\"../Src/i2c.c\",0x1b);\n  }\n  if (enableThreading != 0) {\n    thunk_FUNC_08001168(0x32);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800403c": "execute_i2_c_transaction_0800403c",
                "param_1": "dataArray",
                "param_2": "size",
                "param_3": "mode",
                "param_4": "enableThreading",
                "iVar1": "transactionResult",
                "local_14": "localBuffer"
            },
            "calling": [
                "FUN_08002ad0",
                "FUN_0800411c",
                "FUN_08002cb0",
                "FUN_08003298"
            ],
            "called": [
                "FUN_08004490",
                "FUN_08001828",
                "thunk_FUN_08001168"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800407c": {
            "entrypoint": "0x0800407c",
            "current_name": "check_and_execute_function_0800407c",
            "code": "\nundefined check_and_execute_function_0800407c(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  int iVar1;\n  undefined result_buffer [8];\n  \n  result_buffer[0] = 0;\n  iVar1 = FUN_08001938(&DAT_20001504,arg1,arg2,1,result_buffer,1,200);\n  if (iVar1 != 0) {\n    FUN_08004490(arg3,arg4);\n  }\n  return result_buffer[0];\n}\n\n",
            "renaming": {
                "FUN_0800407c": "check_and_execute_function_0800407c",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "local_14": "result_buffer"
            },
            "calling": [
                "FUN_08002ad0",
                "FUN_08002d88",
                "FUN_08002cb0",
                "FUN_080040e8"
            ],
            "called": [
                "FUN_08004490",
                "FUN_08001938"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040b8": {
            "entrypoint": "0x080040b8",
            "current_name": "check_and_execute_function_080040b8",
            "code": "\nvoid checkAndExecuteFunction_080040b8(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4,\n                 undefined4 arg5,undefined4 arg6)\n\n{\n  int result;\n  \n  result = FUN_08001938(&DAT_20001504,arg1,arg2,1,arg3,arg4,200,arg4);\n  if (result != 0) {\n    FUN_08004490(arg5,arg6);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080040b8": "check_and_execute_function_080040b8",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "param_5": "arg5",
                "param_6": "arg6",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08003034"
            ],
            "called": [
                "FUN_08004490",
                "FUN_08001938"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040e8": {
            "entrypoint": "0x080040e8",
            "current_name": "copy_data_to_buffer_080040e8",
            "code": "\nvoid copyDataToBuffer_080040e8(undefined4 buffer,int index,int sourceData,int dataLength)\n\n{\n  undefined value;\n  int i;\n  undefined *bufferPtr;\n  int fileOffset;\n  \n  bufferPtr = (undefined *)(sourceData + -1);\n  fileOffset = dataLength;\n  for (i = 0; i < dataLength; i = i + 1) {\n    value = FUN_0800407c(buffer,index + i & 0xffff,\"../Src/i2c.c\",0x4c,fileOffset);\n    bufferPtr = bufferPtr + 1;\n    *bufferPtr = value;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080040e8": "copy_data_to_buffer_080040e8",
                "param_1": "buffer",
                "param_2": "index",
                "param_3": "sourceData",
                "param_4": "dataLength",
                "uVar1": "value",
                "iVar2": "i",
                "puVar3": "bufferPtr",
                "iVar4": "fileOffset"
            },
            "calling": [
                "FUN_08002b48",
                "FUN_08002d88",
                "FUN_08002cb0",
                "FUN_08003298",
                "FUN_08002bf0"
            ],
            "called": [
                "FUN_0800407c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800411c": {
            "entrypoint": "0x0800411c",
            "current_name": "initialize_components_0800411c",
            "code": "\nvoid initializeComponents_0800411c(void)\n\n{\n  undefined4 *ptr1;\n  longlong longValue;\n  uint var3;\n  uint var4;\n  uint var5;\n  undefined4 var6;\n  undefined4 var7;\n  int var8;\n  uint var9;\n  uint var10;\n  uint var11;\n  uint var12;\n  undefined4 *ptr2;\n  undefined4 unaff_var4;\n  int var14;\n  int var15;\n  bool boolVar;\n  undefined8 var17;\n  \n  var8 = thunk_FUN_0800115c();\n  if (1 < (uint)(var8 - DAT_2000028c)) {\n    DAT_2000028c = thunk_FUN_0800115c();\n    FUN_08002f28();\n  }\n  var8 = thunk_FUN_0800115c();\n  if (2 < (uint)(var8 - DAT_20000294)) {\n    DAT_20000294 = thunk_FUN_0800115c();\n    FUN_08004a84();\n  }\n  var8 = thunk_FUN_0800115c();\n  if (3 < (uint)(var8 - DAT_20000290)) {\n    DAT_20000290 = thunk_FUN_0800115c();\n    FUN_08004348();\n    FUN_08004384();\n    FUN_080043f0();\n    FUN_08004410();\n    FUN_08004434();\n    FUN_080043bc();\n    FUN_08004458();\n  }\n  if ((DAT_20000275 != '\\0') && (DAT_20000274 != '\\0')) {\n    var15 = DAT_20000270 + (uint)DAT_20000266 * -0x100;\n    var9 = (uint)((longlong)(int)(uint)DAT_20000268 * (longlong)var15) >> 0x17 |\n            (int)((ulonglong)((longlong)(int)(uint)DAT_20000268 * (longlong)var15) >> 0x20) << 9;\n    var10 = (uint)((longlong)(int)(uint)DAT_20000264 * (longlong)var15 >> 7);\n    var11 = var10 + (uint)DAT_20000260 * 0x10000;\n    var4 = (uint)((ulonglong)((longlong)(int)(uint)DAT_20000262 * (longlong)var15) >> 8);\n    var8 = var9 + 2000;\n    var5 = var4 + (uint)DAT_2000025e * 0x8000;\n    boolVar = (int)var9 < 0;\n    if (1999 < var8) {\n      var9 = 0;\n    }\n    var3 = var9;\n    if (boolVar != SBORROW4(var8,2000)) {\n      var14 = var9 * var9 * 5;\n      var9 = var14 >> 2;\n      var3 = var14 >> 1;\n    }\n    var12 = var11 - var3;\n    longValue = (ulonglong)(var5 - var9) * (ulonglong)DAT_2000026c;\n    var14 = DAT_2000026c *\n             ((((int)((longlong)(int)(uint)DAT_20000262 * (longlong)var15 >> 0x28) +\n               (uint)CARRY4(var4,(uint)DAT_2000025e * 0x8000)) - ((int)var9 >> 0x1f)) -\n             (uint)(var5 < var9)) + (int)((ulonglong)longValue >> 0x20);\n    var4 = (uint)longValue >> 0x15 | var14 * 0x800;\n    var6 = FUN_08000c44(var4 - var12 >> 0xf |\n                         (((var14 >> 0x15) -\n                          ((((int)((longlong)(int)(uint)DAT_20000264 * (longlong)var15 >> 0x27) +\n                            (uint)CARRY4(var10,(uint)DAT_20000260 * 0x10000)) -\n                           ((int)var3 >> 0x1f)) - (uint)(var11 < var3))) - (uint)(var4 < var12)\n                         ) * 0x20000);\n    var6 = FUN_08000e54(var6,0x42c80000);\n    DAT_20000354 = var6;\n    var7 = FUN_08000c44(var8);\n    DAT_20000358 = FUN_08000e54(var7,0x42c80000);\n    FUN_08000e54(var6,0x447d5000);\n    var17 = FUN_08000428();\n    var17 = FUN_08005900((int)var17,(int)((ulonglong)var17 >> 0x20),0x60000000,0x3fc85b95);\n    var17 = FUN_08000168(0,0x3ff00000,(int)var17,(int)((ulonglong)var17 >> 0x20));\n    FUN_080004d0((int)var17,(int)((ulonglong)var17 >> 0x20),0,0x40e5a540);\n    var6 = FUN_08000a30();\n    var7 = 0;\n    ptr2 = &DAT_20000300;\n    DAT_20000350 = var6;\n    do {\n      ptr1 = ptr2 + 1;\n      *ptr2 = *ptr1;\n      var7 = FUN_08000adc(var7);\n      ptr2 = ptr1;\n    } while (ptr1 != &DAT_2000034c);\n    DAT_2000034c = var6;\n    var6 = FUN_08000adc(var7,var6);\n    DAT_200002fc = FUN_08000e54(var6,0x41a00000);\n    var8 = FUN_08001078();\n    DAT_200014ab = var8 * 100;\n    DAT_20000275 = '\\0';\n    DAT_20000274 = '\\0';\n    FUN_0800403c(0xee,DAT_20000038 + 0x50,1);\n    DAT_2000027c = thunk_FUN_0800115c();\n  }\n  var8 = thunk_FUN_0800115c();\n  if (((10 < (uint)(var8 - DAT_2000027c)) && (DAT_20000275 == '\\0')) && (DAT_20000274 == '\\0')) {\n    DAT_20000270 = FUN_08003034();\n    DAT_20000275 = '\\x01';\n    FUN_0800403c(0xee,DAT_20000038 + 0x40,1,0,unaff_var4);\n    DAT_20000278 = thunk_FUN_0800115c();\n  }\n  var8 = thunk_FUN_0800115c();\n  if (((10 < (uint)(var8 - DAT_20000278)) && (DAT_20000275 != '\\0')) && (DAT_20000274 == '\\0')) {\n    DAT_2000026c = FUN_08003034();\n    DAT_20000274 = '\\x01';\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800411c": "initialize_components_0800411c",
                "puVar1": "ptr1",
                "lVar2": "longValue",
                "uVar3": "var3",
                "uVar4": "var4",
                "uVar5": "var5",
                "uVar6": "var6",
                "uVar7": "var7",
                "iVar8": "var8",
                "uVar9": "var9",
                "uVar10": "var10",
                "uVar11": "var11",
                "uVar12": "var12",
                "puVar13": "ptr2",
                "unaff_r4": "unaff_var4",
                "iVar14": "var14",
                "iVar15": "var15",
                "bVar16": "boolVar",
                "uVar17": "var17"
            },
            "calling": [
                "FUN_080041ae"
            ],
            "called": [
                "thunk_FUN_0800115c",
                "FUN_080004d0",
                "FUN_08000e54",
                "FUN_08003034",
                "FUN_08000a30",
                "FUN_08000c44",
                "FUN_08004410",
                "FUN_08005900",
                "FUN_08004348",
                "FUN_08000168",
                "FUN_08000428",
                "FUN_08002f28",
                "FUN_08004458",
                "FUN_080043bc",
                "FUN_08004384",
                "FUN_0800403c",
                "FUN_08004a84",
                "FUN_080043f0",
                "FUN_08004434",
                "FUN_08001078",
                "FUN_08000adc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004194": {
            "entrypoint": "0x08004194",
            "current_name": "initialize_settings_08004194",
            "code": "\nvoid initialize_settings_08004194(void)\n\n{\n  FUN_08004028();\n  FUN_08004c70();\n  FUN_08002ea0();\n  FUN_08003298();\n  DAT_200000f4 = 1;\n  DAT_20000150 = 1;\n  DAT_200001ac = 0xffffffff;\n  DAT_20000098 = 1;\n  DAT_200000c8 = 0x44bb8000;\n  DAT_20000124 = 0x44b54000;\n  DAT_20000180 = 0x44fa0000;\n  DAT_2000006c = 0;\n  DAT_200000ac = 0x408ccccd;\n  DAT_200000b0 = 0x3ca3d70a;\n  DAT_200000b4 = 0x438c0000;\n  DAT_200000b8 = 0x40900000;\n  DAT_200000bc = 0x3ca3d70a;\n  DAT_200000c0 = 0x43b40000;\n  DAT_20000108 = 0x40733333;\n  DAT_2000010c = 0x3ca3d70a;\n  DAT_20000110 = 0x43820000;\n  DAT_20000114 = 0x40733333;\n  DAT_20000118 = 0x3ca3d70a;\n  DAT_2000011c = 0x43a00000;\n  DAT_20000164 = 0x40400000;\n  DAT_20000168 = 0x3c23d70a;\n  DAT_2000016c = 0x438c0000;\n  DAT_20000170 = 0;\n  DAT_20000174 = 0;\n  DAT_20000178 = 0;\n  DAT_20000050 = 0x41200000;\n  DAT_20000054 = 0;\n  DAT_20000058 = 0;\n  DAT_2000005c = 0;\n  DAT_20000060 = 0;\n  DAT_20000064 = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004194": "initialize_settings_08004194"
            },
            "calling": [
                "FUN_080041ae"
            ],
            "called": [
                "FUN_08002ea0",
                "FUN_08004c70",
                "FUN_08004028",
                "FUN_08003298"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080041ae": {
            "entrypoint": "0x080041ae",
            "current_name": "run_infinite_loop_080041ae",
            "code": "\nvoid runInfiniteLoop_080041ae(void)\n\n{\n  FUN_08003eb0(0);\n  FUN_08004194();\n  do {\n    FUN_0800114c();\n    FUN_0800411c();\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080041ae": "run_infinite_loop_080041ae"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_08003eb0",
                "FUN_08004194",
                "FUN_0800411c",
                "FUN_0800114c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080041c4": {
            "entrypoint": "0x080041c4",
            "current_name": "initialize_080041c4",
            "code": "\nvoid initialize_080041c4(undefined4 param1,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined4 extra_result;\n  \n  FUN_08003fc4(0);\n  FUN_08003fd0(0);\n  FUN_08003fdc(0);\n  FUN_08003fe8(0,extra_result,param3,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080041c4": "initialize_080041c4",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "extraout_r1": "extra_result"
            },
            "calling": [
                "FUN_08004a84"
            ],
            "called": [
                "FUN_08003fe8",
                "FUN_08003fc4",
                "FUN_08003fdc",
                "FUN_08003fd0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800426c": {
            "entrypoint": "0x0800426c",
            "current_name": "calculate_and_set_values_0800426c",
            "code": "\n\n\nvoid calculate_and_set_values_0800426c(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  uint temp4;\n  uint result5;\n  uint result6;\n  uint result7;\n  \n  temp1 = FUN_08000ad8();\n  temp2 = FUN_08000adc(input1,input2);\n  temp3 = FUN_08000ad8(temp1,input3);\n  temp3 = FUN_08000adc(temp3,input4);\n  FUN_08000ad8(temp3,0x447a0000);\n  temp4 = FUN_08001078();\n  temp3 = FUN_08000ad8(temp2,input3);\n  temp3 = FUN_08000ad8(temp3,input4);\n  FUN_08000ad8(temp3,0x447a0000);\n  result5 = FUN_08001078();\n  temp1 = FUN_08000adc(temp1,input3);\n  temp1 = FUN_08000ad8(temp1,input4);\n  FUN_08000ad8(temp1,0x447a0000);\n  result6 = FUN_08001078();\n  temp1 = FUN_08000adc(input3,temp2);\n  temp1 = FUN_08000adc(temp1,input4);\n  FUN_08000ad8(temp1,0x447a0000);\n  result7 = FUN_08001078();\n  if (999 < (int)result7) {\n    result7 = 1000;\n  }\n  if (999 < (int)result6) {\n    result6 = 1000;\n  }\n  if (999 < (int)result5) {\n    result5 = 1000;\n  }\n  if (999 < (int)temp4) {\n    temp4 = 1000;\n  }\n  DAT_200002a0 = result5 & ~((int)result5 >> 0x1f);\n  DAT_200002a4 = temp4 & ~((int)temp4 >> 0x1f);\n  DAT_2000029c = result6 & ~((int)result6 >> 0x1f);\n  DAT_20000298 = result7 & ~((int)result7 >> 0x1f);\n  FUN_08003fc4();\n  FUN_08003fd0(DAT_2000029c);\n  FUN_08003fdc(DAT_200002a0);\n  FUN_08003fe8(DAT_200002a4);\n  _DAT_200013dd = (short)DAT_20000298 + 1000;\n  DAT_200013df = (short)DAT_2000029c + 1000;\n  _DAT_200013e1 = (short)DAT_200002a0 + 1000;\n  DAT_200013e3 = (short)DAT_200002a4 + 1000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800426c": "calculate_and_set_values_0800426c",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "uVar3": "temp3",
                "uVar4": "temp4",
                "uVar5": "result5",
                "uVar6": "result6",
                "uVar7": "result7"
            },
            "calling": [
                "FUN_08004a84"
            ],
            "called": [
                "FUN_08000ad8",
                "FUN_08003fe8",
                "FUN_08003fc4",
                "FUN_08003fdc",
                "FUN_08001078",
                "FUN_08000adc",
                "FUN_08003fd0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004300": {
            "entrypoint": "0x08004300",
            "current_name": "calculate_checksum_08004300",
            "code": "\nvoid calculate_checksum_08004300(uint input_value,byte *data_array,uint data_length)\n\n{\n  uint checksum;\n  byte *current_byte;\n  \n  FUN_08004c8c(&DAT_0800732e);\n  FUN_08004c18(data_length & 0xff);\n  checksum = data_length & 0xff ^ input_value;\n  FUN_08004c18(input_value);\n  for (current_byte = data_array; (int)current_byte - (int)data_array < (int)data_length; current_byte = current_byte + 1) {\n    FUN_08004c18(*current_byte);\n    checksum = checksum ^ *current_byte;\n  }\n  FUN_08004c18(checksum);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004300": "calculate_checksum_08004300",
                "param_1": "input_value",
                "param_2": "data_array",
                "param_3": "data_length",
                "uVar1": "checksum",
                "pbVar2": "current_byte"
            },
            "calling": [
                "FUN_08004458",
                "FUN_08004384",
                "FUN_080043bc",
                "FUN_08004410",
                "FUN_08004348",
                "FUN_080043f0",
                "FUN_08004434"
            ],
            "called": [
                "FUN_08004c18",
                "FUN_08004c8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004348": {
            "entrypoint": "0x08004348",
            "current_name": "initialize_data_08004348",
            "code": "\n\n\nvoid initializeData_08004348(undefined4 arg1,uint arg2,undefined4 arg3)\n\n{\n  undefined4 baseAddress;\n  uint maskedArg2;\n  undefined4 arg3Copy;\n  \n  _DAT_20001423 = 0x40003e9;\n  _DAT_20001427 = 0;\n  DAT_20001429 = 0;\n  baseAddress = 0x40003e9;\n  maskedArg2 = arg2 & 0xff000000;\n  arg3Copy = arg3;\n  FUN_08004300(100,&baseAddress,7);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004348": "initialize_data_08004348",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "local_10": "baseAddress",
                "local_c": "maskedArg2",
                "uStack_8": "arg3Copy"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_08004300"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004384": {
            "entrypoint": "0x08004384",
            "current_name": "initialize_data_08004384",
            "code": "\n\n\nvoid initializeData_08004384(undefined4 arg1,undefined4 arg2,undefined4 arg3,uint arg4)\n\n{\n  undefined4 variable1;\n  undefined4 variable2;\n  uint variable3;\n  \n  _DAT_200013bd = 0x2a0007;\n  variable1 = DAT_200013b9;\n  variable2 = 0x2a0007;\n  _DAT_200013c1 = 0;\n  DAT_200013c3 = 0;\n  variable3 = arg4 & 0xff000000;\n  FUN_08004300(0x65,&variable1,0xb,0,arg1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004384": "initialize_data_08004384",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "local_14": "variable1",
                "uStack_10": "variable2",
                "local_c": "variable3"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_08004300"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080043bc": {
            "entrypoint": "0x080043bc",
            "current_name": "copy_data_and_call_function_080043bc",
            "code": "\nvoid copyDataAndCallFunction_080043bc(void)\n\n{\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 *destinationPointer;\n  undefined4 *sourcePointer;\n  undefined4 copiedData [2];\n  undefined2 temporaryData [6];\n  \n  sourcePointer = (undefined4 *)&DAT_2000142a;\n  destinationPointer = copiedData;\n  do {\n    value1 = *sourcePointer;\n    value2 = sourcePointer[1];\n    sourcePointer = sourcePointer + 2;\n    *destinationPointer = value1;\n    destinationPointer[1] = value2;\n    destinationPointer = destinationPointer + 2;\n  } while (sourcePointer != (undefined4 *)&DAT_2000143a);\n  *(undefined2 *)destinationPointer = DAT_2000143a;\n  FUN_08004300(0x66,copiedData,0x12);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080043bc": "copy_data_and_call_function_080043bc",
                "puVar4": "sourcePointer",
                "puVar3": "destinationPointer",
                "local_24": "copiedData",
                "local_1c": "temporaryData",
                "uVar1": "value1",
                "uVar2": "value2"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_08004300"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080043f0": {
            "entrypoint": "0x080043f0",
            "current_name": "initialize_data_080043f0",
            "code": "\n\n\nvoid initializeData_080043f0(undefined4 parameter1,undefined4 parameter2,undefined4 parameter3)\n\n{\n  undefined4 dataElement1;\n  undefined4 dataElement2;\n  undefined4 dataArray [2];\n  \n  dataElement1 = _DAT_200013dd;\n  dataElement2 = _DAT_200013e1;\n  dataArray[0] = parameter3;\n  FUN_08004300(0x68,&dataElement1,8,dataArray);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080043f0": "initialize_data_080043f0",
                "param_1": "parameter1",
                "param_2": "parameter2",
                "param_3": "parameter3",
                "local_10": "dataElement1",
                "uStack_c": "dataElement2",
                "auStack_8": "dataArray"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_08004300"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004410": {
            "entrypoint": "0x08004410",
            "current_name": "initialize_data_08004410",
            "code": "\nvoid initializeData_08004410(undefined4 unusedParameter1,undefined4 unusedParameter2,undefined4 unusedParameter3)\n\n{\n  undefined4 constantValue;\n  undefined4 concatenatedValue;\n  undefined4 stackVariable;\n  \n  constantValue = DAT_20001395;\n  concatenatedValue = CONCAT22((short)((uint)unusedParameter2 >> 0x10),DAT_20001399);\n  stackVariable = unusedParameter3;\n  FUN_08004300(0x6c,&constantValue,6);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004410": "initialize_data_08004410",
                "param_1": "unusedParameter1",
                "param_2": "unusedParameter2",
                "param_3": "unusedParameter3",
                "local_10": "constantValue",
                "local_c": "concatenatedValue",
                "uStack_8": "stackVariable"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_08004300"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004434": {
            "entrypoint": "0x08004434",
            "current_name": "initialize_data_08004434",
            "code": "\nvoid initializeData_08004434(undefined4 unusedParam1,undefined4 inputParam,undefined4 outputParam)\n\n{\n  undefined4 data;\n  undefined4 concatenatedValue;\n  undefined4 stackVariable;\n  \n  data = DAT_200014ab;\n  concatenatedValue = CONCAT22((short)((uint)inputParam >> 0x10),DAT_200014af);\n  stackVariable = outputParam;\n  FUN_08004300(0x6d,&data,6);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004434": "initialize_data_08004434",
                "param_1": "unusedParam1",
                "param_2": "inputParam",
                "param_3": "outputParam",
                "local_10": "data",
                "local_c": "concatenatedValue",
                "uStack_8": "stackVariable"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_08004300"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004458": {
            "entrypoint": "0x08004458",
            "current_name": "rearrange_data_and_call_function_08004458",
            "code": "\nvoid rearrangeDataAndCallFunction_08004458(void)\n\n{\n  undefined4 *destinationArray;\n  undefined4 *sourceArray;\n  undefined4 tempVariable;\n  undefined4 *destinationPtr;\n  undefined4 *sourcePtr;\n  undefined4 tempArray [3];\n  undefined2 tempArray2 [10];\n  \n  destinationArray = tempArray;\n  sourceArray = &DAT_2000139b;\n  do {\n    sourcePtr = sourceArray;\n    destinationPtr = destinationArray;\n    tempVariable = sourcePtr[1];\n    *destinationPtr = *sourcePtr;\n    destinationPtr[1] = tempVariable;\n    destinationArray = destinationPtr + 2;\n    sourceArray = sourcePtr + 2;\n  } while (sourcePtr + 2 != (undefined4 *)0x200013b3);\n  destinationPtr[2] = uRam200013b3;\n  *(undefined2 *)(destinationPtr + 3) = *(undefined2 *)(sourcePtr + 3);\n  FUN_08004300(0x70,tempArray,0x1e);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004458": "rearrange_data_and_call_function_08004458",
                "puVar1": "destinationArray",
                "puVar2": "sourceArray",
                "uVar3": "tempVariable",
                "puVar4": "destinationPtr",
                "puVar5": "sourcePtr",
                "local_30": "tempArray",
                "local_24": "tempArray2"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_08004300"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004490": {
            "entrypoint": "0x08004490",
            "current_name": "handle_error_08004490",
            "code": "\nvoid handleError_08004490(undefined4 errorDescription,undefined4 lineNumber)\n\n{\n  FUN_08001424(0x40011000,0x4000,1);\n  FUN_08001424(0x40011000,0x8000,0);\n  FUN_08001424(0x40011000,0x2000,0);\n  do {\n    FUN_0800142e(0x40011000,0x4000);\n    FUN_0800142e(0x40011000,0x8000);\n    FUN_0800142e(0x40011000,0x2000);\n    FUN_08004c8c(\"Error with \");\n    FUN_08004c8c(errorDescription);\n    FUN_08004c8c(\" at line: \");\n    FUN_08004cac(lineNumber);\n    FUN_08004c18(10);\n    thunk_FUNC_08001168(500);\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08004490": "handle_error_08004490",
                "param_1": "errorDescription",
                "param_2": "lineNumber"
            },
            "calling": [
                "FUN_0800407c",
                "FUN_0800403c",
                "FUN_08004514",
                "FUN_080040b8",
                "FUN_0800458c"
            ],
            "called": [
                "FUN_08004cac",
                "FUN_08004c18",
                "FUN_0800142e",
                "thunk_FUN_08001168",
                "FUN_08001424",
                "FUN_08004c8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004514": {
            "entrypoint": "0x08004514",
            "current_name": "initialize_peripheral_system_08004514",
            "code": "\nvoid initializePeripheralSystem_08004514(void)\n\n{\n  int status;\n  uint currentValue;\n  undefined4 fileIndex;\n  int counter;\n  undefined4 flag1;\n  int value1;\n  int value2;\n  undefined4 value3;\n  int value4;\n  undefined4 parameters [4];\n  undefined4 parameter1;\n  undefined4 parameter2;\n  undefined4 parameter3;\n  undefined4 parameter4;\n  undefined4 parameter5;\n  \n  parameter1 = 1;\n  parameter2 = 0x10;\n  counter = 2;\n  parameter4 = 0;\n  parameters[0] = 2;\n  parameter3 = 2;\n  parameter5 = 0x380000;\n  status = FUN_08001b58(parameters);\n  if (status == 0) goto LAB_08004540;\n  fileIndex = 0x3c;\n  while( true ) {\n    status = FUN_08004490(\"../Src/peripherals.c\",fileIndex);\nLAB_08004540:\n    flag1 = 0xf;\n    value3 = 0x400;\n    value1 = counter;\n    value2 = status;\n    value4 = status;\n    counter = FUN_0800209c(&flag1,counter);\n    if (counter == 0) break;\n    fileIndex = 0x49;\n  }\n  currentValue = FUN_08002214();\n  FUN_08001214(currentValue / 1000);\n  FUN_08001240(4);\n  FUN_08001194(0xffffffff,0,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004514": "initialize_peripheral_system_08004514",
                "iVar1": "status",
                "uVar2": "currentValue",
                "uVar3": "fileIndex",
                "iVar4": "counter",
                "local_44": "flag1",
                "local_40": "value1",
                "local_3c": "value2",
                "local_38": "value3",
                "local_34": "value4",
                "local_30": "parameters",
                "local_20": "parameter1",
                "local_1c": "parameter2",
                "local_14": "parameter3",
                "local_10": "parameter4",
                "local_c": "parameter5"
            },
            "calling": [
                "FUN_0800458c"
            ],
            "called": [
                "FUN_08002214",
                "FUN_08001b58",
                "FUN_08004490",
                "FUN_0800209c",
                "FUN_08001194",
                "FUN_08001214",
                "FUN_08001240"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800458c": {
            "entrypoint": "0x0800458c",
            "current_name": "initialize_peripheral_0800458c",
            "code": "\n\n\nvoid initializePeripheral_0800458c(void)\n\n{\n  int result;\n  undefined4 constant;\n  int counter;\n  int var1;\n  int var2;\n  int var3;\n  int var4;\n  int var5;\n  int var6;\n  int var7;\n  int var8;\n  int var9;\n  int var10;\n  int var11;\n  int var12;\n  int var13;\n  undefined4 var14;\n  int var15;\n  \n  FUN_08001128();\n  FUN_08004514();\n  counter = 2;\n  _DAT_40021018 = _DAT_40021018 | 0x1c;\n  FUN_08001424(0x40011000,0xe000,0,_DAT_40021018 & 8);\n  FUN_08001424(0x40010800,0x20,0);\n  var9 = 0xe000;\n  var10 = 1;\n  var12 = 2;\n  FUN_08001264(0x40011000,&var9);\n  var9 = 0x20;\n  var10 = 1;\n  var12 = 2;\n  FUN_08001264(0x40010800,&var9);\n  DAT_20001504 = 0x40005400;\n  DAT_20001508 = 400000;\n  DAT_20001514 = 0x4000;\n  DAT_2000150c = 0;\n  DAT_20001510 = 0;\n  DAT_20001518 = 0;\n  DAT_2000151c = 0;\n  DAT_20001520 = 0;\n  DAT_20001524 = 0;\n  result = FUN_08001754();\n  if (result == 0) goto LAB_0800463a;\n  constant = 0x6b;\n  while( true ) {\n    while( true ) {\n      while( true ) {\n        while( true ) {\n          while( true ) {\n            while( true ) {\n              while( true ) {\n                while( true ) {\n                  while( true ) {\n                    while( true ) {\n                      while( true ) {\n                        while( true ) {\n                          while( true ) {\n                            while( true ) {\n                              while( true ) {\n                                while( true ) {\n                                  result = FUN_08004490(\"../Src/peripherals.c\",constant);\nLAB_0800463a:\n                                  DAT_2000157c = 0x40013800;\n                                  DAT_20001580 = 0x1c200;\n                                  DAT_20001590 = 0xc;\n                                  DAT_20001584 = result;\n                                  DAT_20001588 = result;\n                                  DAT_2000158c = result;\n                                  DAT_20001594 = result;\n                                  DAT_20001598 = result;\n                                  result = FUN_08002724(&DAT_2000157c);\n                                  if (result == 0) break;\n                                  constant = 0x151;\n                                }\n                                DAT_200015bc = 0x40012c00;\n                                DAT_200015c8 = 1000;\n                                DAT_200015c0 = counter;\n                                DAT_200015c4 = result;\n                                DAT_200015cc = result;\n                                DAT_200015d0 = result;\n                                result = FUN_080023d0(&DAT_200015bc);\n                                if (result == 0) break;\n                                constant = 0x88;\n                              }\n                              var1 = result;\n                              var2 = result;\n                              result = FUN_080025a4(&DAT_200015bc,&var1);\n                              if (result == 0) break;\n                              constant = 0x8f;\n                            }\n                            var3 = 0x60;\n                            var4 = result;\n                            var5 = result;\n                            var6 = result;\n                            var7 = result;\n                            var8 = result;\n                            result = FUN_0800245c(&DAT_200015bc,&var3,0xc);\n                            if (result == 0) break;\n                            constant = 0x9a;\n                          }\n                          var14 = 0x2000;\n                          var9 = result;\n                          var10 = result;\n                          var11 = result;\n                          var12 = result;\n                          var13 = result;\n                          var15 = result;\n                          result = FUN_08002564(&DAT_200015bc,&var9);\n                          if (result == 0) break;\n                          constant = 0xa6;\n                        }\n                        FUN_08004e14(&DAT_200015bc);\n                        DAT_200015f8 = 0x40000000;\n                        DAT_20001604 = 1000;\n                        DAT_200015fc = counter;\n                        DAT_20001600 = result;\n                        DAT_20001608 = result;\n                        result = FUN_080023d0(&DAT_200015f8);\n                        if (result == 0) break;\n                        constant = 0xc3;\n                      }\n                      var3 = result;\n                      var4 = result;\n                      result = FUN_080025a4(&DAT_200015f8,&var3);\n                      if (result == 0) break;\n                      constant = 0xca;\n                    }\n                    var9 = 0x60;\n                    var10 = result;\n                    var11 = result;\n                    var13 = result;\n                    result = FUN_0800245c(&DAT_200015f8,&var9,4);\n                    if (result == 0) break;\n                    constant = 0xd3;\n                  }\n                  FUN_08004e14(&DAT_200015f8);\n                  DAT_2000154c = 1000;\n                  DAT_20001540 = 0x40000400;\n                  DAT_20001544 = counter;\n                  DAT_20001548 = result;\n                  DAT_20001550 = result;\n                  result = FUN_080023d0();\n                  if (result == 0) break;\n                  constant = 0xf0;\n                }\n                var3 = 0;\n                var4 = 0;\n                result = FUN_080025a4(&DAT_20001540,&var3);\n                if (result == 0) break;\n                constant = 0xf7;\n              }\n              var9 = 0x60;\n              var10 = result;\n              var11 = result;\n              var13 = result;\n              result = FUN_0800245c(&DAT_20001540,&var9,8);\n              if (result == 0) break;\n              constant = 0x100;\n            }\n            counter = FUN_0800245c(&DAT_20001540,&var9,0xc);\n            if (counter == 0) break;\n            constant = 0x105;\n          }\n          FUN_08004e14(&DAT_20001540);\n          DAT_200014c8 = 0x40000800;\n          DAT_200014cc = 2;\n          DAT_200014d4 = 1000;\n          DAT_200014d0 = counter;\n          DAT_200014d8 = counter;\n          result = FUN_080023d0(&DAT_200014c8);\n          if (result == 0) break;\n          constant = 0x122;\n        }\n        var3 = result;\n        var4 = result;\n        result = FUN_080025a4(&DAT_200014c8,&var3);\n        if (result == 0) break;\n        constant = 0x129;\n      }\n      var9 = 0x60;\n      var10 = result;\n      var11 = result;\n      var13 = result;\n      result = FUN_0800245c(&DAT_200014c8,&var9,8);\n      if (result == 0) break;\n      constant = 0x132;\n    }\n    result = FUN_0800245c(&DAT_200014c8,&var9,0xc);\n    if (result == 0) break;\n    constant = 0x137;\n  }\n  FUN_08004e14(&DAT_200014c8);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800458c": "initialize_peripheral_0800458c",
                "iVar1": "result",
                "uVar2": "constant",
                "iVar3": "counter",
                "local_58": "var1",
                "local_54": "var2",
                "local_50": "var3",
                "local_4c": "var4",
                "local_48": "var5",
                "local_40": "var6",
                "local_3c": "var7",
                "local_38": "var8",
                "local_34": "var9",
                "local_30": "var10",
                "local_2c": "var11",
                "local_28": "var12",
                "local_24": "var13",
                "local_20": "var14",
                "local_1c": "var15"
            },
            "calling": [
                "FUN_08004028"
            ],
            "called": [
                "FUN_08002564",
                "FUN_08001264",
                "FUN_08004e14",
                "FUN_08001754",
                "FUN_08004490",
                "FUN_0800245c",
                "FUN_08004514",
                "FUN_080023d0",
                "FUN_08001128",
                "FUN_08001424",
                "FUN_080025a4",
                "FUN_08002724"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800483c": {
            "entrypoint": "0x0800483c",
            "current_name": "extract_data_0800483c",
            "code": "\nvoid extractData_0800483c(int *data)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  int value1;\n  int value2;\n  int value3;\n  \n  value2 = data[0xc];\n  result1 = FUN_08000adc(data[7],data[9]);\n  value2 = FUN_08000ad8(result1,value2);\n  data[10] = value2;\n  if (*data == 3) {\n    value2 = FUN_08001064(data[10],0);\n    if (value2 == 0) {\n      value2 = FUN_08001028(data[10],0xc3340000);\n    }\n    else {\n      value2 = FUN_08001064(data[10],0x43340000);\n    }\n    if (value2 != 0) {\n      value3 = data[10];\n      result1 = FUN_08000cec(data[10],0x43b40000);\n      value2 = FUN_08001064(data[10],0);\n      value1 = data[10];\n      if (value2 == 0) {\n        value1 = value1 + -0x80000000;\n      }\n      result1 = FUN_08000e54(result1,value1);\n      value2 = FUN_08000ad8(value3,result1);\n      data[10] = value2;\n    }\n  }\n  value3 = data[2];\n  value1 = data[3];\n  value2 = FUN_08000cec(data[1],data[10]);\n  data[0xe] = value2;\n  value2 = FUN_08000adc(data[10],data[0xf]);\n  data[0xf] = value2;\n  value2 = FUN_08001028(data[0xf],0xc3fa0000);\n  if (value2 == 0) {\n    value2 = FUN_08001064(data[0xf],0x43fa0000);\n    if (value2 == 0) {\n      value2 = data[0xf];\n    }\n    else {\n      value2 = 0x43fa0000;\n    }\n  }\n  else {\n    value2 = -0x3c060000;\n  }\n  data[0xf] = value2;\n  value2 = FUN_08000ad8(data[0xc],data[0xd]);\n  data[0x10] = value2;\n  value2 = data[0xe];\n  result1 = FUN_08000cec(value3,data[0xf]);\n  result1 = FUN_08000adc(result1,value2);\n  result2 = FUN_08000cec(value1,data[0x10]);\n  value2 = FUN_08000ad8(result1,result2);\n  data[0x12] = value2;\n  result1 = FUN_08000c44(data[0x13]);\n  value2 = FUN_08001028(data[0x12],0xc3fa0000);\n  if (value2 == 0) {\n    value2 = FUN_08001064(data[0x12],0x43fa0000);\n    if (value2 == 0) {\n      value2 = data[0x12];\n    }\n    else {\n      value2 = 0x43fa0000;\n    }\n  }\n  else {\n    value2 = -0x3c060000;\n  }\n  value2 = FUN_08000cec(value2,result1);\n  data[0x12] = value2;\n  data[0xd] = data[0xc];\n  data[0xb] = data[10];\n  data[0x15] = data[0x14];\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800483c": "extract_data_0800483c",
                "param_1": "data",
                "uVar1": "result1",
                "uVar2": "result2",
                "iVar3": "value1",
                "iVar4": "value2",
                "iVar5": "value3"
            },
            "calling": [
                "FUN_08004a84"
            ],
            "called": [
                "FUN_08000ad8",
                "FUN_08000e54",
                "FUN_08001028",
                "FUN_08000c44",
                "FUN_08001064",
                "FUN_08000cec",
                "FUN_08000adc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a30": {
            "entrypoint": "0x08004a30",
            "current_name": "initialize_data_08004a30",
            "code": "\nvoid initializeData_08004a30(void)\n\n{\n  undefined4 result;\n  \n  if (DAT_20000285 != '\\0') {\n    if (DAT_200002a8 == '\\0') {\n      result = FUN_08003068();\n      DAT_20000068 = FUN_08000cec(result,0x42c80000);\n      DAT_200002a8 = '\\x01';\n    }\n    else {\n      result = FUN_08003068();\n      DAT_2000007c = FUN_08000cec(result,0x42c80000);\n    }\n  }\n  if (DAT_20000285 == '\\0') {\n    if (DAT_200002a8 != '\\0') {\n      DAT_200002a8 = DAT_20000285;\n    }\n    DAT_20000094 = DAT_20000288;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a30": "initialize_data_08004a30",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08004a84"
            ],
            "called": [
                "FUN_08003068",
                "FUN_08000cec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a84": {
            "entrypoint": "0x08004a84",
            "current_name": "initialize_application_08004a84",
            "code": "\nvoid initializeApplication_08004a84(void)\n\n{\n  int result;\n  \n  DAT_200000d8 = FUN_08002ec0();\n  DAT_20000134 = FUN_08002ed4();\n  DAT_20000190 = FUN_08002ee8();\n  FUN_08004a30();\n  result = FUN_08001064(DAT_200000d8,0);\n  if (result == 0) {\n    result = FUN_08001028(DAT_200000d8,0xc2a00000);\n  }\n  else {\n    result = FUN_08001064(DAT_200000d8,0x42a00000);\n  }\n  if (result == 0) {\n    result = FUN_08001064(DAT_20000134,0);\n    if (result == 0) {\n      result = FUN_08001028(DAT_20000134,0xc2a00000);\n    }\n    else {\n      result = FUN_08001064(DAT_20000134,0x42a00000);\n    }\n    if (result == 0) {\n      FUN_08003f3c(1,1);\n      FUN_0800483c(&DAT_200000a8);\n      FUN_0800483c(&DAT_20000104);\n      FUN_0800483c(&DAT_20000160);\n      if (DAT_20000285 != '\\0') {\n        FUN_0800483c(&DAT_2000004c);\n        FUN_08000adc(DAT_20000094,0x44bb8000);\n      }\n      DAT_20000094 = DAT_20000288;\n      if (DAT_20000284 == '\\0') {\n        FUN_080041c4();\n      }\n      else {\n        FUN_0800426c(DAT_20000288,DAT_200000f0,DAT_2000014c,DAT_200001a8);\n      }\n      FUN_08000cec(DAT_200000ac,0x437f0000);\n      DAT_2000139b._3_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_200000b0,0x437f0000);\n      DAT_2000139f._0_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_20000108,0x437f0000);\n      DAT_2000139b._0_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_2000010c,0x437f0000);\n      DAT_2000139b._1_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_20000110,0x437f0000);\n      DAT_2000139b._2_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_20000164,0x437f0000);\n      DAT_2000139f._2_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_20000168,0x437f0000);\n      DAT_2000139f._3_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_2000016c,0x437f0000);\n      DAT_200013a3._0_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_20000050,0x437f0000);\n      DAT_200013a3._1_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_20000054,0x437f0000);\n      DAT_200013a3._2_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_20000058,0x437f0000);\n      DAT_200013a3._3_1_ = FUN_080010c4();\n      return;\n    }\n  }\n  FUN_080041c4();\n  FUN_08003f3c(0,1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a84": "initialize_application_08004a84",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_08001028",
                "FUN_08002ee8",
                "FUN_080041c4",
                "FUN_0800483c",
                "FUN_08000cec",
                "FUN_08002ed4",
                "FUN_08004a30",
                "FUN_0800426c",
                "FUN_08001064",
                "FUN_080010c4",
                "FUN_08003f3c",
                "FUN_08000adc",
                "FUN_08002ec0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c18": {
            "entrypoint": "0x08004c18",
            "current_name": "extract_data_08004c18",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800289e) */\n\nundefined4 extractData_08004c18(undefined data)\n\n{\n  int *ptrVar1;\n  int index1;\n  int index2;\n  ushort *ptrVar4;\n  \n  DAT_20001636._0_1_ = data;\n  ptrVar4 = &DAT_20001636;\n  if (((DAT_200015b5 != '\\x01') && (DAT_200015b5 != '\\\"')) || (DAT_200015b4 == '\\x01')) {\n    return 2;\n  }\n  DAT_200015b4 = 1;\n  DAT_200015b8 = 0;\n  DAT_200015a0 = 1;\n  if (DAT_200015b5 == '\\\"') {\n    DAT_200015b5 = '2';\n  }\n  else {\n    DAT_200015b5 = '\\x12';\n  }\n  DAT_200015a2 = 1;\nLAB_080027c4:\n  do {\n    if (DAT_200015a2 == 0) {\n      index1 = FUN_0800115c();\n      do {\n        if (*DAT_2000157c << 0x19 < 0) {\n          if (DAT_200015b5 == '2') {\n            DAT_200015b5 = 0x22;\n          }\n          else {\n            DAT_200015b5 = 1;\n          }\n          DAT_200015b4 = 0;\n          return 0;\n        }\n        index2 = FUN_0800115c();\n      } while ((uint)(index2 - index1) < 6);\nLAB_0800281c:\n      ptrVar1 = DAT_2000157c;\n      DAT_2000157c[3] = DAT_2000157c[3] & 0xffffff7f;\n      ptrVar1[3] = ptrVar1[3] & 0xffffffdf;\n      ptrVar1[3] = ptrVar1[3] & 0xfffffeff;\n      ptrVar1[5] = ptrVar1[5] & 0xfffffffe;\n      DAT_200015b5 = 1;\n      DAT_200015b4 = 0;\n      return 3;\n    }\n    DAT_200015a2 = DAT_200015a2 + -1;\n    if (DAT_20001584 == 0x1000) {\n      index1 = FUN_0800115c();\n      while (-1 < *DAT_2000157c << 0x18) {\n        index2 = FUN_0800115c();\n        if (5 < (uint)(index2 - index1)) goto LAB_0800281c;\n      }\n      DAT_2000157c[1] = *ptrVar4 & 0x1ff;\n      if (DAT_2000158c == 0) {\n        ptrVar4 = ptrVar4 + 1;\n        goto LAB_080027c4;\n      }\n    }\n    else {\n      index1 = FUN_0800115c();\n      while (-1 < *DAT_2000157c << 0x18) {\n        index2 = FUN_0800115c();\n        if (5 < (uint)(index2 - index1)) goto LAB_0800281c;\n      }\n      DAT_2000157c[1] = (uint)*(byte *)ptrVar4;\n    }\n    ptrVar4 = (ushort *)((int)ptrVar4 + 1);\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08004c18": "extract_data_08004c18",
                "param_1": "data",
                "piVar1": "ptrVar1",
                "iVar2": "index1",
                "iVar3": "index2",
                "puVar4": "ptrVar4"
            },
            "calling": [
                "FUN_08004490",
                "FUN_08004300",
                "FUN_08004c8c"
            ],
            "called": [
                "FUN_0800115c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c30": {
            "entrypoint": "0x08004c30",
            "current_name": "validate_param_ptr_08004c30",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08002902) */\n\nint * validate_param_ptr_08004c30(int *param_ptr)\n\n{\n  int result;\n  \n  if (*param_ptr != 0x40013800) {\n    return param_ptr;\n  }\n  FUN_08003ec8(&DAT_20000364,DAT_20001634);\n  result = DAT_2000157c;\n  if (((DAT_200015b5 == '\\x01') || (DAT_200015b5 == '\\x12')) && (DAT_200015b4 != '\\x01')) {\n    DAT_200015b8 = 0;\n    DAT_200015a8 = 1;\n    DAT_200015aa = 1;\n    DAT_200015b4 = 0;\n    if (DAT_200015b5 == '\\x12') {\n      DAT_200015b5 = 0x32;\n    }\n    else {\n      DAT_200015b5 = 0x22;\n    }\n    DAT_200015a4 = &DAT_20001634;\n    *(uint *)(DAT_2000157c + 0xc) = *(uint *)(DAT_2000157c + 0xc) | 0x100;\n    *(uint *)(result + 0x14) = *(uint *)(result + 0x14) | 1;\n    *(uint *)(result + 0xc) = *(uint *)(result + 0xc) | 0x20;\n    return (int *)0x0;\n  }\n  return (int *)0x2;\n}\n\n",
            "renaming": {
                "FUN_08004c30": "validate_param_ptr_08004c30",
                "param_1": "param_ptr",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800290c"
            ],
            "called": [
                "FUN_08003ec8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c64": {
            "entrypoint": "0x08004c64",
            "current_name": "initialize_data_08004c64",
            "code": "\nvoid initializeData_08004c64(void)\n\n{\n  int counter;\n  \n  counter = 0;\n  DAT_20000b64 = 0;\n  DAT_20000b66 = 0;\n  DAT_20000b68 = 0;\n  do {\n    (&DAT_20000364)[counter] = 0;\n    counter = counter + 1;\n  } while (counter != 0x800);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c64": "initialize_data_08004c64",
                "iVar1": "counter"
            },
            "calling": [
                "FUN_08004c70"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c70": {
            "entrypoint": "0x08004c70",
            "current_name": "initialize_flags_08004c70",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08002902) */\n\nundefined4 initializeFlags_08004c70(void)\n\n{\n  int tempVar;\n  \n  FUN_08004c64();\n  tempVar = DAT_2000157c;\n  if (((DAT_200015b5 == '\\x01') || (DAT_200015b5 == '\\x12')) && (DAT_200015b4 != '\\x01')) {\n    DAT_200015b8 = 0;\n    DAT_200015a8 = 1;\n    DAT_200015aa = 1;\n    DAT_200015b4 = 0;\n    if (DAT_200015b5 == '\\x12') {\n      DAT_200015b5 = 0x32;\n    }\n    else {\n      DAT_200015b5 = 0x22;\n    }\n    DAT_200015a4 = &DAT_20001634;\n    *(uint *)(DAT_2000157c + 0xc) = *(uint *)(DAT_2000157c + 0xc) | 0x100;\n    *(uint *)(tempVar + 0x14) = *(uint *)(tempVar + 0x14) | 1;\n    *(uint *)(tempVar + 0xc) = *(uint *)(tempVar + 0xc) | 0x20;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08004c70": "initialize_flags_08004c70",
                "iVar1": "tempVar"
            },
            "calling": [
                "FUN_08004194"
            ],
            "called": [
                "FUN_08004c64"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c8c": {
            "entrypoint": "0x08004c8c",
            "current_name": "process_data_08004c8c",
            "code": "\nvoid process_data_08004c8c(undefined *param_1)\n\n{\n  uint comparison_result;\n  undefined *current_ptr;\n  \n  current_ptr = param_1;\n  while( true ) {\n    comparison_result = FUN_08000150(param_1);\n    if (comparison_result <= (uint)((int)current_ptr - (int)param_1)) break;\n    FUN_08004c18(*current_ptr);\n    current_ptr = current_ptr + 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c8c": "process_data_08004c8c",
                "puVar2": "current_ptr",
                "uVar1": "comparison_result"
            },
            "calling": [
                "FUN_08004cac",
                "FUN_08004490",
                "FUN_08004300"
            ],
            "called": [
                "FUN_08000150",
                "FUN_08004c18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004cac": {
            "entrypoint": "0x08004cac",
            "current_name": "initialize_data_08004cac",
            "code": "\nvoid initializeData_08004cac(undefined4 data)\n\n{\n  FUN_08004ffc(&DAT_20001636,&DAT_0800735e,data);\n  FUN_08004c8c(&DAT_20001636);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004cac": "initialize_data_08004cac",
                "param_1": "data"
            },
            "calling": [
                "FUN_08004490"
            ],
            "called": [
                "FUN_08004ffc",
                "FUN_08004c8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ccc": {
            "entrypoint": "0x08004ccc",
            "current_name": "initialize_data_08004ccc",
            "code": "\n\n\nvoid initializeData_08004ccc(undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  _DAT_40021018 = _DAT_40021018 | 1;\n  FUN_08001170(3,arg2,_DAT_40021018,1,arg1,1,arg3);\n  FUN_08001194(0xfffffff4,0);\n  FUN_08001194(0xfffffff5,0);\n  FUN_08001194(0xfffffff6,0);\n  FUN_08001194(0xfffffffb,0);\n  FUN_08001194(0xfffffffc,0);\n  FUN_08001194(0xfffffffe,0);\n  FUN_08001194(0xffffffff,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004ccc": "initialize_data_08004ccc",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3"
            },
            "calling": [
                "FUN_08001128"
            ],
            "called": [
                "FUN_08001170",
                "FUN_08001194"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d48": {
            "entrypoint": "0x08004d48",
            "current_name": "process_param_08004d48",
            "code": "\n\n\nvoid processParam_08004d48(int *inputArray,undefined4 paramValue)\n\n{\n  undefined4 constant1;\n  undefined4 constant2;\n  \n  if (*inputArray == 0x40005400) {\n    constant1 = 0xc0;\n    constant2 = 0x12;\n    FUN_08001264(0x40010c00,&constant1,0x40005400,3,inputArray,paramValue);\n    _DAT_4002101c = _DAT_4002101c | 0x200000;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d48": "process_param_08004d48",
                "param_1": "inputArray",
                "param_2": "paramValue",
                "local_18": "constant1",
                "local_14": "constant2"
            },
            "calling": [
                "FUN_08001754"
            ],
            "called": [
                "FUN_08001264"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d8c": {
            "entrypoint": "0x08004d8c",
            "current_name": "set_flags_based_on_value_08004d8c",
            "code": "\n\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nvoid setFlagsBasedOnValue_08004d8c(int *value)\n\n{\n  int valueToCheck;\n  \n  valueToCheck = *value;\n  if (valueToCheck == 0x40012c00) {\n    _DAT_40021018 = _DAT_40021018 | 0x800;\n  }\n  else if (valueToCheck == 0x40000000) {\n    _DAT_4002101c = _DAT_4002101c | 1;\n  }\n  else if (valueToCheck == 0x40000400) {\n    _DAT_4002101c = _DAT_4002101c | 2;\n  }\n  else if (valueToCheck == 0x40000800) {\n    _DAT_4002101c = _DAT_4002101c | 4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d8c": "set_flags_based_on_value_08004d8c",
                "param_1": "value",
                "iVar1": "valueToCheck"
            },
            "calling": [
                "FUN_080023d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e14": {
            "entrypoint": "0x08004e14",
            "current_name": "initialize_config_08004e14",
            "code": "\nvoid initializeConfig_08004e14(int *config,undefined4 param2,undefined4 param3)\n\n{\n  undefined4 constantValue;\n  int configValue;\n  undefined4 configOption;\n  undefined4 localVariable1;\n  undefined4 localVariable2;\n  undefined4 localVariable3;\n  \n  configValue = *config;\n  if (configValue == 0x40012c00) {\n    configOption = 0x800;\n  }\n  else {\n    if (configValue != 0x40000000) {\n      if (configValue == 0x40000400) {\n        configOption = 3;\n      }\n      else {\n        if (configValue != 0x40000800) {\n          return;\n        }\n        configOption = 0x300;\n      }\n      constantValue = 0x40010c00;\n      goto LAB_08004e2e;\n    }\n    configOption = 2;\n  }\n  constantValue = 0x40010800;\nLAB_08004e2e:\n  localVariable3 = 2;\n  localVariable1 = 2;\n  localVariable2 = param3;\n  FUN_08001264(constantValue,&configOption);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004e14": "initialize_config_08004e14",
                "param_1": "config",
                "param_2": "param2",
                "param_3": "param3",
                "iVar2": "configValue",
                "local_18": "configOption",
                "local_14": "localVariable1",
                "uStack_10": "localVariable2",
                "local_c": "localVariable3",
                "uVar1": "constantValue"
            },
            "calling": [
                "FUN_0800458c"
            ],
            "called": [
                "FUN_08001264"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e7c": {
            "entrypoint": "0x08004e7c",
            "current_name": "update_flags_and_values_08004e7c",
            "code": "\n\n\nvoid updateFlagsAndValues_08004e7c(int *pointer)\n\n{\n  undefined4 flagValue1;\n  undefined4 flagValue2;\n  undefined4 flagValue3;\n  undefined4 flagValue4;\n  \n  if (*pointer == 0x40013800) {\n    _DAT_40021018 = _DAT_40021018 | 0x4000;\n    flagValue1 = 0x200;\n    flagValue2 = 2;\n    flagValue4 = 3;\n    FUN_08001264(0x40010800,&flagValue1);\n    flagValue1 = 0x400;\n    flagValue2 = 0;\n    flagValue3 = 0;\n    FUN_08001264(0x40010800,&flagValue1);\n    FUN_08001194(0x25,0,0);\n    FUN_080011fc(0x25);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004e7c": "update_flags_and_values_08004e7c",
                "param_1": "pointer",
                "local_18": "flagValue1",
                "local_14": "flagValue2",
                "local_10": "flagValue3",
                "local_c": "flagValue4"
            },
            "calling": [
                "FUN_08002724"
            ],
            "called": [
                "FUN_08001264",
                "FUN_08001194",
                "FUN_080011fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004f10": {
            "entrypoint": "0x08004f10",
            "current_name": "initialize_device_configuration_08004f10",
            "code": "\n\n\nvoid initializeDeviceConfiguration_08004f10(void)\n\n{\n  _DAT_40021000 = _DAT_40021000 & 0xfef2ffff | 1;\n  _DAT_40021004 = _DAT_40021004 & 0xf8800000;\n  _DAT_40021008 = 0x9f0000;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004f10": "initialize_device_configuration_08004f10"
            },
            "calling": [
                "entry"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_0800115c": {
            "entrypoint": "0x08004f60",
            "current_name": "get_data_value_thunk_0800115c",
            "code": "\nundefined4 get_data_value_thunk_0800115c(void)\n\n{\n  return DAT_20000244;\n}\n\n",
            "renaming": {
                "thunk_FUN_0800115c": "get_data_value_thunk_0800115c"
            },
            "calling": [
                "FUN_08002f28"
            ],
            "called": [
                "FUN_0800115c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_08001168": {
            "entrypoint": "0x08004f64",
            "current_name": "thunk_FUNC_08001168",
            "code": "\nvoid thunk_FUNC_08001168(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "thunk_FUN_08001168": "thunk_FUNC_08001168"
            },
            "calling": [
                "FUN_0800403c",
                "FUN_08004490",
                "FUN_08004028",
                "FUN_08003298"
            ],
            "called": [
                "FUN_08001168"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "entry": {
            "entrypoint": "0x08004f68",
            "current_name": "entry",
            "code": "\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined4 *)(iVar1 + 0x20000000) < &DAT_20000228; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x8007448);\n  }\n  for (puVar2 = &DAT_20000228; puVar2 < &DAT_200016a0; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  FUN_08004f10();\n  FUN_08004fb4();\n  UNRECOVERED_JUMPTABLE = (code *)0x8004f9a;\n  FUN_080041ae();\n                    /* WARNING: Could not recover jumptable at 0x08004f9a. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "renaming": {},
            "calling": [],
            "called": [
                "FUN_08004f10",
                "FUN_08004fb4",
                "FUN_080041ae"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004fb4": {
            "entrypoint": "0x08004fb4",
            "current_name": "execute_functions_sequentially_08004fb4",
            "code": "\nvoid executeFunctionsSequentially_08004fb4(void)\n\n{\n  int loopIndex;\n  \n  for (loopIndex = 0; loopIndex != 0; loopIndex = loopIndex + 1) {\n    (*(functionPointerArray *)(&DAT_08007440)[loopIndex])();\n  }\n  FUNC_080072d4();\n  for (loopIndex = 0; loopIndex != 1; loopIndex = loopIndex + 1) {\n    (*(functionPointerArray *)(&DAT_08007440)[loopIndex])();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004fb4": "execute_functions_sequentially_08004fb4",
                "iVar1": "loopIndex",
                "code": "functionPointerArray"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_08000134",
                "FUN_080072d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ffc": {
            "entrypoint": "0x08004ffc",
            "current_name": "initialize_function_08004ffc",
            "code": "\nvoid initializeFunction_08004ffc(undefined *inputPointer,undefined4 value1,undefined4 value2,undefined4 value3)\n\n{\n  undefined *local_78 [2];\n  undefined4 localValue1;\n  undefined2 localSize;\n  undefined2 localValue2;\n  undefined *localPointer;\n  undefined4 localValue3;\n  undefined4 localValue4;\n  undefined4 localValue5;\n  undefined4 localValue6;\n  \n  localSize = 0x208;\n  localValue1 = 0x7fffffff;\n  localValue3 = 0x7fffffff;\n  localValue2 = 0xffff;\n  localInputPointer = inputPointer;\n  localPointer = inputPointer;\n  localValue4 = value1;\n  localValue5 = value2;\n  localValue6 = value3;\n  FUN_080050fc(DAT_200001c0,local_78,value1);\n  *localInputPointer = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004ffc": "initialize_function_08004ffc",
                "param_1": "inputPointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "local_78[0]": "localInputPointer",
                "local_70": "localValue1",
                "local_6c": "localSize",
                "local_68": "localPointer",
                "local_6a": "localValue2",
                "local_64": "localValue3",
                "uStack_c": "localValue4",
                "uStack_8": "localValue5",
                "uStack_4": "localValue6"
            },
            "calling": [
                "FUN_08004cac"
            ],
            "called": [
                "FUN_080050fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005044": {
            "entrypoint": "0x08005044",
            "current_name": "update_data_array_08005044",
            "code": "\nundefined4 updateDataArray_08005044(undefined4 *dataPointer,int *dataArray,undefined4 value,uint index)\n\n{\n  int result;\n  uint updatedIndex;\n  uint arrayElement;\n  int difference;\n  \n  arrayElement = dataArray[2];\n  if ((arrayElement <= index) && ((*(ushort *)(dataArray + 3) & 0x480) != 0)) {\n    difference = *dataArray - dataArray[4];\n    arrayElement = (uint)(dataArray[5] * 3) / 2;\n    updatedIndex = index + 1 + difference;\n    if (arrayElement < updatedIndex) {\n      arrayElement = updatedIndex;\n    }\n    if ((int)((uint)*(ushort *)(dataArray + 3) << 0x15) < 0) {\n      result = FUN_08005714(dataPointer,arrayElement);\n      if (result == 0) {\nLAB_0800508a:\n        *dataPointer = 0xc;\n        *(ushort *)(dataArray + 3) = *(ushort *)(dataArray + 3) | 0x40;\n        return 0xffffffff;\n      }\n      FUN_08005630(result,dataArray[4],difference);\n      *(ushort *)(dataArray + 3) = *(ushort *)(dataArray + 3) & 0xfb7f | 0x80;\n    }\n    else {\n      result = FUN_080057d0(dataPointer,dataArray[4],arrayElement);\n      if (result == 0) {\n        FUN_0800567c(dataPointer,dataArray[4]);\n        goto LAB_0800508a;\n      }\n    }\n    dataArray[4] = result;\n    *dataArray = result + difference;\n    dataArray[5] = arrayElement;\n    dataArray[2] = arrayElement - difference;\n    arrayElement = index;\n  }\n  if (index <= arrayElement) {\n    arrayElement = index;\n  }\n  FUN_08005646(*dataArray,value,arrayElement);\n  dataArray[2] = dataArray[2] - arrayElement;\n  *dataArray = arrayElement + *dataArray;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005044": "update_data_array_08005044",
                "param_1": "dataPointer",
                "param_2": "dataArray",
                "param_3": "value",
                "param_4": "index",
                "iVar1": "result",
                "uVar2": "updatedIndex",
                "uVar3": "arrayElement",
                "iVar4": "difference"
            },
            "calling": [
                "FUN_080050fc"
            ],
            "called": [
                "FUN_0800567c",
                "FUN_08005714",
                "FUN_080057d0",
                "FUN_08005646",
                "FUN_08005630"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080050fc": {
            "entrypoint": "0x080050fc",
            "current_name": "parse_input_080050fc",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08005294) */\n\nint parse_input_080050fc(undefined4 *result,int *flags,byte *input,int *param_4)\n\n{\n  int returnValue;\n  int parseResult;\n  int *ptr;\n  bool foundNumber;\n  byte *currentChar;\n  byte *previousChar;\n  int unaff_r9;\n  int *param_4_new;\n  uint flagBits;\n  int width;\n  undefined4 index;\n  int precision;\n  int totalParsed;\n  byte specifier;\n  undefined format1;\n  undefined format2;\n  undefined specialFlag;\n  undefined4 specialStruct;\n  \n  param_4_new = param_4;\n  if (((int)((uint)*(ushort *)(flags + 3) << 0x18) < 0) && (flags[4] == 0)) {\n    returnValue = FUN_08005714(result,0x40);\n    *flags = returnValue;\n    flags[4] = returnValue;\n    if (returnValue == 0) {\n      *result = 0xc;\n      return -1;\n    }\n    flags[5] = 0x40;\n  }\n  totalParsed = 0;\n  format1 = 0x20;\n  format2 = 0x30;\n  currentChar = input;\nLAB_08005146:\n  previousChar = currentChar;\n  if (*previousChar != 0) goto LAB_080051ca;\n  goto LAB_08005150;\nLAB_080051ca:\n  currentChar = previousChar + 1;\n  if (*previousChar != 0x25) goto LAB_08005146;\nLAB_08005150:\n  returnValue = (int)previousChar - (int)input;\n  if (returnValue != 0) {\n    parseResult = FUN_08005044(result,flags,input,returnValue);\n    if (parseResult == -1) {\nLAB_080052ac:\n      if ((int)((uint)*(ushort *)(flags + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return totalParsed;\n    }\n    totalParsed = totalParsed + returnValue;\n  }\n  if (*previousChar == 0) goto LAB_080052ac;\n  flagBits = 0;\n  precision = 0;\n  width = -1;\n  index = 0;\n  specialFlag = 0;\n  specialStruct = 0;\n  currentChar = previousChar + 1;\n  while( true ) {\n    returnValue = FUN_08005614(&DAT_08007379,*currentChar);\n    input = currentChar + 1;\n    if (returnValue == 0) break;\n    flagBits = 1 << (returnValue + 0xf7ff8c87U & 0xff) | flagBits;\n    currentChar = input;\n  }\n  if ((int)(flagBits << 0x1b) < 0) {\n    specialFlag = 0x20;\n  }\n  if ((int)(flagBits << 0x1c) < 0) {\n    specialFlag = 0x2b;\n  }\n  if (*currentChar == 0x2a) {\n    ptr = param_4_new + 1;\n    returnValue = *param_4_new;\n    param_4_new = ptr;\n    if (returnValue < 0) {\n      precision = -returnValue;\n      flagBits = flagBits | 2;\n      goto LAB_080051fc;\n    }\n  }\n  else {\n    foundNumber = false;\n    returnValue = precision;\n    input = currentChar;\n    while( true ) {\n      if (9 < *input - 0x30) break;\n      returnValue = returnValue * 10 + (*input - 0x30);\n      foundNumber = true;\n      input = input + 1;\n    }\n    if (!foundNumber) goto LAB_080051fc;\n  }\n  precision = returnValue;\nLAB_080051fc:\n  if (*input == 0x2e) {\n    if (input[1] == 0x2a) {\n      input = input + 2;\n      ptr = param_4_new + 1;\n      width = *param_4_new;\n      param_4_new = ptr;\n      if (width < 0) {\n        width = -1;\n      }\n    }\n    else {\n      foundNumber = false;\n      returnValue = 0;\n      width = 0;\n      while( true ) {\n        input = input + 1;\n        if (9 < *input - 0x30) break;\n        returnValue = returnValue * 10 + (*input - 0x30);\n        foundNumber = true;\n      }\n      if (foundNumber) {\n        width = returnValue;\n      }\n    }\n  }\n  returnValue = FUN_08005614(&DAT_0800737f,*input,3);\n  if (returnValue != 0) {\n    input = input + 1;\n    flagBits = flagBits | 0x40 << (returnValue + 0xf7ff8c81U & 0xff);\n  }\n  specifier = *input;\n  input = input + 1;\n  returnValue = FUN_08005614(\"efgEFG\",specifier,6);\n  if (returnValue == 0) {\n    unaff_r9 = FUN_080053d4(result,&flagBits,flags,0x8005045,&param_4_new);\n    if (unaff_r9 == -1) goto LAB_080052ac;\n  }\n  else {\n    param_4_new = (int *)(((int)param_4_new + 7U & 0xfffffff8) + 8);\n  }\n  totalParsed = totalParsed + unaff_r9;\n  currentChar = input;\n  goto LAB_08005146;\n}\n\n",
            "renaming": {
                "FUN_080050fc": "parse_input_080050fc",
                "param_1": "result",
                "param_2": "flags",
                "param_3": "input",
                "iVar1": "returnValue",
                "iVar2": "parseResult",
                "piVar3": "ptr",
                "bVar4": "foundNumber",
                "pbVar5": "currentChar",
                "pbVar6": "previousChar",
                "local_8c": "param_4_new",
                "local_88": "flagBits",
                "local_84": "width",
                "local_80": "index",
                "local_7c": "precision",
                "local_74": "totalParsed",
                "local_70": "specifier",
                "local_6f": "format1",
                "local_6e": "format2",
                "local_45": "specialFlag",
                "local_30": "specialStruct"
            },
            "calling": [
                "FUN_08004ffc"
            ],
            "called": [
                "FUN_08005044",
                "FUN_080053d4",
                "FUN_08005714",
                "FUN_08005614"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080052e4": {
            "entrypoint": "0x080052e4",
            "current_name": "decode_and_update_parameters_080052e4",
            "code": "\nundefined4\ndecode_and_update_parameters_080052e4(undefined4 param_1,uint *input_parameters,uint *output_length,undefined4 param_4,code *callback_function)\n\n{\n  int iteration_count;\n  int callback_result;\n  uint max_length;\n  uint var_1;\n  bool condition_check;\n  \n  max_length = input_parameters[4];\n  if ((int)input_parameters[4] < (int)input_parameters[2]) {\n    max_length = input_parameters[2];\n  }\n  *output_length = max_length;\n  if (*(char *)((int)input_parameters + 0x43) != '\\0') {\n    *output_length = max_length + 1;\n  }\n  if ((int)(*input_parameters << 0x1a) < 0) {\n    *output_length = *output_length + 2;\n  }\n  if ((*input_parameters & 6) == 0) {\n    for (iteration_count = 0; iteration_count < (int)(input_parameters[3] - *output_length); iteration_count = iteration_count + 1) {\n      callback_result = (*callback_function)(param_1,param_4,(int)input_parameters + 0x19,1);\n      if (callback_result == -1) {\n        return 0xffffffff;\n      }\n    }\n  }\n  max_length = (uint)*(byte *)((int)input_parameters + 0x43);\n  if (max_length != 0) {\n    max_length = 1;\n  }\n  var_1 = max_length;\n  if ((int)(*input_parameters << 0x1a) < 0) {\n    *(undefined *)((int)input_parameters + max_length + 0x43) = 0x30;\n    var_1 = max_length + 2;\n    *(undefined *)((int)input_parameters + max_length + 0x44) = *(undefined *)((int)input_parameters + 0x45);\n  }\n  iteration_count = (*callback_function)(param_1,param_4,(int)input_parameters + 0x43,var_1);\n  if (iteration_count != -1) {\n    max_length = input_parameters[3];\n    condition_check = (*input_parameters & 6) != 4;\n    if (condition_check) {\n      max_length = 0;\n    }\n    var_1 = 0;\n    if (!condition_check) {\n      max_length = max_length - *output_length;\n    }\n    if (!condition_check) {\n      max_length = max_length & ~((int)max_length >> 0x1f);\n    }\n    if ((int)input_parameters[4] < (int)input_parameters[2]) {\n      max_length = max_length + (input_parameters[2] - input_parameters[4]);\n    }\n    while( true ) {\n      if (max_length == var_1) {\n        return 0;\n      }\n      iteration_count = (*callback_function)(param_1,param_4,(int)input_parameters + 0x1a,1);\n      if (iteration_count == -1) break;\n      var_1 = var_1 + 1;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080052e4": "decode_and_update_parameters_080052e4",
                "param_2": "input_parameters",
                "param_3": "output_length",
                "param_5": "callback_function",
                "iVar1": "iteration_count",
                "iVar2": "callback_result",
                "uVar3": "max_length",
                "uVar4": "var_1",
                "bVar5": "condition_check"
            },
            "calling": [
                "FUN_080053d4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080053d4": {
            "entrypoint": "0x080053d4",
            "current_name": "decode_and_process_080053d4",
            "code": "\nuint decode_and_process_080053d4(undefined4 param1,uint *param2,undefined4 param3,code *param4,uint **param5)\n\n{\n  byte byteValue;\n  int index;\n  uint *ptr;\n  int tempIndex;\n  char *hexChars;\n  uint base;\n  uint **ppuVar7;\n  char **ppcVar8;\n  uint decodedValue;\n  uint secondValue;\n  char *destPtr;\n  char *charPtr;\n  uint localArray [2];\n  \n  byteValue = *(byte *)(param2 + 6);\n  charPtr = (char *)((int)param2 + 0x43);\n  if (byteValue != 0x6e) {\n    if (byteValue < 0x6f) {\n      if (byteValue != 99) {\n        if (byteValue < 100) {\n          if (byteValue == 0) goto LAB_0800558e;\n          if (byteValue != 0x58) goto LAB_08005404;\n          *(undefined *)((int)param2 + 0x45) = 0x58;\n          hexChars = \"0123456789ABCDEF\";\nLAB_0800551e:\n          base = *param2;\n          ptr = *param5;\n          *param5 = ptr + 1;\n          if (((base & 0x80) == 0) && ((int)(base << 0x19) < 0)) {\n            decodedValue = (uint)*(ushort *)ptr;\n          }\n          else {\n            decodedValue = *ptr;\n          }\n          if ((int)(base << 0x1f) < 0) {\n            *param2 = base | 0x20;\n          }\n          if (decodedValue == 0) {\n            *param2 = *param2 & 0xffffffdf;\n          }\n          base = 0x10;\nLAB_080054b4:\n          *(undefined *)((int)param2 + 0x43) = 0;\n        }\n        else {\n          if ((byteValue != 100) && (byteValue != 0x69)) goto LAB_08005404;\n          decodedValue = *param2;\n          ptr = *param5;\n          if ((decodedValue & 0x80) == 0) {\n            *param5 = ptr + 1;\n            if ((decodedValue & 0x40) == 0) goto LAB_08005424;\n            decodedValue = (uint)(short)*(ushort *)ptr;\n          }\n          else {\n            *param5 = ptr + 1;\nLAB_08005424:\n            decodedValue = *ptr;\n          }\n          if ((int)decodedValue < 0) {\n            decodedValue = -decodedValue;\n            *(undefined *)((int)param2 + 0x43) = 0x2d;\n          }\n          hexChars = \"0123456789ABCDEF\";\n          base = 10;\n        }\n        secondValue = param2[1];\n        param2[2] = secondValue;\n        destPtr = charPtr;\n        if ((int)secondValue < 0) {\n          if (decodedValue != 0) goto LAB_08005552;\nLAB_08005600:\n          *(char *)((int)param2 + 0x42) = *hexChars;\n          destPtr = (char *)((int)param2 + 0x42);\n        }\n        else {\n          *param2 = *param2 & 0xfffffffb;\n          if (decodedValue == 0) {\n            if (secondValue != 0) goto LAB_08005600;\n          }\n          else {\nLAB_08005552:\n            do {\n              secondValue = decodedValue / base;\n              destPtr = destPtr + -1;\n              *destPtr = hexChars[decodedValue - base * secondValue];\n              decodedValue = secondValue;\n            } while (secondValue != 0);\n          }\n        }\n        if (((base == 8) && ((int)(*param2 << 0x1f) < 0)) && ((int)param2[1] <= (int)param2[4]))\n        {\n          destPtr[-1] = '0';\n          destPtr = destPtr + -1;\n        }\n        param2[4] = (int)charPtr - (int)destPtr;\n        charPtr = destPtr;\n        goto LAB_080054fa;\n      }\n      ptr = *param5;\n      *param5 = ptr + 1;\n      *(char *)((int)param2 + 0x42) = (char)*ptr;\nLAB_08005464:\n      charPtr = (char *)((int)param2 + 0x42);\n      decodedValue = 1;\n    }\n    else {\n      if (byteValue != 0x73) {\n        if (byteValue < 0x74) {\n          if (byteValue == 0x6f) {\nLAB_0800548a:\n            decodedValue = *param2;\n            ptr = *param5;\n            if ((decodedValue & 0x80) == 0) {\n              *param5 = ptr + 1;\n              if ((decodedValue & 0x40) == 0) goto LAB_08005498;\n              decodedValue = (uint)*(ushort *)ptr;\n            }\n            else {\n              *param5 = ptr + 1;\nLAB_08005498:\n              decodedValue = *ptr;\n            }\n            if (byteValue == 0x6f) {\n              base = 8;\n            }\n            else {\n              base = 10;\n            }\n            hexChars = \"0123456789ABCDEF\";\n            goto LAB_080054b4;\n          }\n          if (byteValue == 0x70) {\n            *param2 = *param2 | 0x20;\nLAB_0800544a:\n            hexChars = \"0123456789abcdef\";\n            *(undefined *)((int)param2 + 0x45) = 0x78;\n            goto LAB_0800551e;\n          }\n        }\n        else {\n          if (byteValue == 0x75) goto LAB_0800548a;\n          if (byteValue == 0x78) goto LAB_0800544a;\n        }\nLAB_08005404:\n        *(byte *)((int)param2 + 0x42) = byteValue;\n        goto LAB_08005464;\n      }\n      ppcVar8 = (char **)*param5;\n      *param5 = (uint *)(ppcVar8 + 1);\n      charPtr = *ppcVar8;\n      index = FUN_08005614(charPtr,0,param2[1]);\n      if (index != 0) {\n        param2[1] = index - (int)charPtr;\n      }\n      decodedValue = param2[1];\n    }\n    param2[4] = decodedValue;\n    *(undefined *)((int)param2 + 0x43) = 0;\n    goto LAB_080054fa;\n  }\n  decodedValue = *param2;\n  ppuVar7 = (uint **)*param5;\n  base = param2[5];\n  if ((decodedValue & 0x80) == 0) {\n    *param5 = (uint *)(ppuVar7 + 1);\n    ptr = *ppuVar7;\n    if ((decodedValue & 0x40) == 0) goto LAB_0800557a;\n    *(short *)ptr = (short)base;\n  }\n  else {\n    *param5 = (uint *)(ppuVar7 + 1);\n    ptr = *ppuVar7;\nLAB_0800557a:\n    *ptr = base;\n  }\nLAB_0800558e:\n  param2[4] = 0;\nLAB_080054fa:\n  index = FUN_080052e4(param1,param2,localArray,param3,param4);\n  if ((index == -1) || (index = (*param4)(param1,param3,charPtr,param2[4]), index == -1)) {\nLAB_0800550e:\n    decodedValue = 0xffffffff;\n  }\n  else {\n    if ((int)(*param2 << 0x1e) < 0) {\n      for (index = 0; index < (int)(param2[3] - localArray[0]); index = index + 1) {\n        tempIndex = (*param4)(param1,param3,(int)param2 + 0x19,1);\n        if (tempIndex == -1) goto LAB_0800550e;\n      }\n    }\n    decodedValue = param2[3];\n    if ((int)param2[3] < (int)localArray[0]) {\n      decodedValue = localArray[0];\n    }\n  }\n  return decodedValue;\n}\n\n",
            "renaming": {
                "FUN_080053d4": "decode_and_process_080053d4",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "bVar1": "byteValue",
                "iVar2": "index",
                "puVar3": "ptr",
                "iVar4": "tempIndex",
                "pcVar5": "hexChars",
                "uVar6": "base",
                "uVar9": "decodedValue",
                "uVar10": "secondValue",
                "pcVar11": "destPtr",
                "pcVar12": "charPtr",
                "local_24": "localArray"
            },
            "calling": [
                "FUN_080050fc"
            ],
            "called": [
                "FUN_080052e4",
                "FUN_08005614"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005614": {
            "entrypoint": "0x08005614",
            "current_name": "find_char_in_string_08005614",
            "code": "\nchar * find_char_in_string_08005614(char *string,char target_char,int string_length)\n\n{\n  char *current_char;\n  char *next_char;\n  \n  current_char = string;\n  do {\n    next_char = current_char;\n    if (next_char == string + string_length) {\n      return (char *)0x0;\n    }\n    current_char = next_char + 1;\n  } while (*next_char != target_char);\n  return next_char;\n}\n\n",
            "renaming": {
                "FUN_08005614": "find_char_in_string_08005614",
                "param_1": "string",
                "param_2": "target_char",
                "param_3": "string_length",
                "pcVar1": "current_char",
                "pcVar2": "next_char"
            },
            "calling": [
                "FUN_080053d4",
                "FUN_080050fc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005630": {
            "entrypoint": "0x08005630",
            "current_name": "copy_from_one_array_to_another_08005630",
            "code": "\nvoid copyFromOneArrayToAnother_08005630(int destIndex,undefined *sourceArray,int arrayLength)\n\n{\n  undefined *destPtr;\n  undefined *sourcePtr;\n  \n  sourcePtr = (undefined *)(destIndex + -1);\n  destPtr = sourceArray + arrayLength;\n  for (; sourceArray != destPtr; sourceArray = sourceArray + 1) {\n    sourcePtr = sourcePtr + 1;\n    *sourcePtr = *sourceArray;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005630": "copy_from_one_array_to_another_08005630",
                "param_1": "destIndex",
                "param_2": "sourceArray",
                "param_3": "arrayLength",
                "puVar1": "destPtr",
                "puVar2": "sourcePtr"
            },
            "calling": [
                "FUN_08005044",
                "FUN_080057d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005646": {
            "entrypoint": "0x08005646",
            "current_name": "copy_and_reverse_08005646",
            "code": "\nvoid copyAndReverse_08005646(undefined *destination,undefined *source,int size)\n\n{\n  undefined *endPtr;\n  \n  endPtr = source + size;\n  if ((source < destination) && (destination < endPtr)) {\n    destination = destination + size;\n    size = size - (int)endPtr;\n    while (endPtr + size != (undefined *)0x0) {\n      endPtr = endPtr + -1;\n      destination = destination + -1;\n      *destination = *endPtr;\n    }\n    return;\n  }\n  destination = destination + -1;\n  for (; source != endPtr; source = source + 1) {\n    destination = destination + 1;\n    *destination = *source;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005646": "copy_and_reverse_08005646",
                "param_1": "destination",
                "param_2": "source",
                "param_3": "size",
                "puVar1": "endPtr"
            },
            "calling": [
                "FUN_08005044"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800567c": {
            "entrypoint": "0x0800567c",
            "current_name": "append_to_linked_list_0800567c",
            "code": "\nvoid appendToLinkedList_0800567c(undefined4 *list,int size,undefined4 value1,undefined4 value2)\n\n{\n  int **temp;\n  int **current;\n  int **next;\n  int *offset;\n  int **prev;\n  int **newNode;\n  \n  if (size == 0) {\n    return;\n  }\n  newNode = (int **)(size + -4);\n  if (*(int *)(size + -4) < 0) {\n    newNode = (int **)((int)newNode + *(int *)(size + -4));\n  }\n  FUNC_0800583c();\n  next = (int **)&DAT_200002ac;\n  if (DAT_200002ac == (int **)0x0) {\n    newNode[1] = (int *)0x0;\n    current = temp;\n    DAT_200002ac = newNode;\n  }\n  else {\n    next = DAT_200002ac;\n    if (newNode < DAT_200002ac) {\n      current = (int **)*newNode;\n      next = (int **)((int)newNode + (int)current);\n      if (DAT_200002ac == next) {\n        offset = *DAT_200002ac;\n        DAT_200002ac = (int **)DAT_200002ac[1];\n        next = (int **)((int)offset + (int)current);\n        *newNode = (int *)next;\n      }\n      newNode[1] = (int *)DAT_200002ac;\n      DAT_200002ac = newNode;\n    }\n    else {\n      do {\n        prev = next;\n        next = (int **)prev[1];\n        if (next == (int **)0x0) break;\n      } while (next <= newNode);\n      current = (int **)*prev;\n      if ((int **)((int)prev + (int)current) == newNode) {\n        current = (int **)((int)current + (int)*newNode);\n        *prev = (int *)current;\n        if (next == (int **)((int)prev + (int)current)) {\n          offset = *next;\n          next = (int **)next[1];\n          current = (int **)((int)current + (int)offset);\n          *prev = (int *)current;\n          prev[1] = (int *)next;\n        }\n      }\n      else if (newNode < (int **)((int)prev + (int)current)) {\n        *list = 0xc;\n      }\n      else {\n        current = (int **)((int)newNode + (int)*newNode);\n        if (next == current) {\n          offset = *next;\n          next = (int **)next[1];\n          current = (int **)((int)offset + (int)*newNode);\n          *newNode = (int *)current;\n        }\n        newNode[1] = (int *)next;\n        prev[1] = (int *)newNode;\n      }\n    }\n  }\n  FUNC_0800583e(list,current,next,value2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800567c": "append_to_linked_list_0800567c",
                "param_1": "list",
                "param_2": "size",
                "param_3": "value1",
                "param_4": "value2",
                "extraout_r1": "temp",
                "ppiVar1": "current",
                "ppiVar2": "next",
                "piVar3": "offset",
                "ppiVar4": "prev",
                "ppiVar5": "newNode"
            },
            "calling": [
                "FUN_08005044",
                "FUN_080057d0"
            ],
            "called": [
                "FUN_0800583c",
                "FUN_0800583e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005714": {
            "entrypoint": "0x08005714",
            "current_name": "allocate_memory_08005714",
            "code": "\nuint allocate_memory_08005714(undefined4 *output,uint size)\n\n{\n  uint *current_block;\n  int remaining_space;\n  uint *next_block;\n  uint block_difference;\n  uint *previous_block;\n  uint new_block_size;\n  \n  new_block_size = (size + 3 & 0xfffffffc) + 8;\n  if (new_block_size < 0xc) {\n    new_block_size = 0xc;\n  }\n  if (((int)new_block_size < 0) || (new_block_size < size)) {\n    *output = 0xc;\n  }\n  else {\n    FUNC_0800583c();\n    current_block = DAT_200002ac;\n    previous_block = DAT_200002ac;\n    while (next_block = current_block, next_block != (uint *)0x0) {\n      block_difference = *next_block - new_block_size;\n      if (-1 < (int)block_difference) {\n        if (block_difference < 0xc) {\n          if (previous_block == next_block) {\n            current_block = (uint *)previous_block[1];\n            DAT_200002ac = current_block;\n          }\n          else {\n            current_block = (uint *)next_block[1];\n          }\n          if (previous_block != next_block) {\n            previous_block[1] = (uint)current_block;\n            previous_block = next_block;\n          }\n        }\n        else {\n          *next_block = block_difference;\n          *(uint *)((int)next_block + block_difference) = new_block_size;\n          previous_block = (uint *)((int)next_block + block_difference);\n        }\n        goto LAB_08005778;\n      }\n      previous_block = next_block;\n      current_block = (uint *)next_block[1];\n    }\n    if (DAT_200002b0 == 0) {\n      DAT_200002b0 = FUN_0800581c(output);\n    }\n    current_block = (uint *)FUN_0800581c(output,new_block_size);\n    if ((current_block != (uint *)0xffffffff) &&\n       ((previous_block = (uint *)((int)current_block + 3U & 0xfffffffc), current_block == previous_block ||\n        (remaining_space = FUN_0800581c(output,(int)previous_block - (int)current_block), remaining_space != -1)))) {\n      *previous_block = new_block_size;\nLAB_08005778:\n      FUNC_0800583e(output);\n      new_block_size = (int)previous_block + 0xbU & 0xfffffff8;\n      remaining_space = new_block_size - (int)(previous_block + 1);\n      if (remaining_space != 0) {\n        *(int *)((int)previous_block + remaining_space) = -remaining_space;\n        return new_block_size;\n      }\n      return new_block_size;\n    }\n    *output = 0xc;\n    FUNC_0800583e(output);\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005714": "allocate_memory_08005714",
                "param_1": "output",
                "param_2": "size",
                "puVar1": "current_block",
                "iVar2": "remaining_space",
                "puVar3": "next_block",
                "uVar4": "block_difference",
                "puVar5": "previous_block",
                "uVar6": "new_block_size"
            },
            "calling": [
                "FUN_08005044",
                "FUN_080050fc",
                "FUN_080057d0"
            ],
            "called": [
                "FUN_0800583c",
                "FUN_0800581c",
                "FUN_0800583e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080057d0": {
            "entrypoint": "0x080057d0",
            "current_name": "process_data_080057d0",
            "code": "\nint processData_080057d0(undefined4 input,int size,uint limit,undefined4 extra)\n\n{\n  int result;\n  uint randomValue;\n  \n  if (size != 0) {\n    if (limit == 0) {\n      FUN_0800567c();\n      result = 0;\n    }\n    else {\n      randomValue = FUN_08005840();\n      result = size;\n      if ((randomValue < limit) && (result = FUN_08005714(input,limit), result != 0)) {\n        FUN_08005630(result,size,limit);\n        FUN_0800567c(input,size);\n      }\n    }\n    return result;\n  }\n  result = FUN_08005714(input,limit,limit,extra);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080057d0": "process_data_080057d0",
                "param_1": "input",
                "param_2": "size",
                "param_3": "limit",
                "param_4": "extra",
                "iVar1": "result",
                "uVar2": "randomValue"
            },
            "calling": [
                "FUN_08005044"
            ],
            "called": [
                "FUN_0800567c",
                "FUN_08005714",
                "FUN_08005840",
                "FUN_08005630"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800581c": {
            "entrypoint": "0x0800581c",
            "current_name": "check_and_assign_error_0800581c",
            "code": "\nvoid checkAndAssignError_0800581c(int *errorCode,undefined4 inputData)\n\n{\n  int result;\n  \n  DAT_2000169c = 0;\n  result = FUN_080072b8(inputData);\n  if ((result == -1) && (DAT_2000169c != 0)) {\n    *errorCode = DAT_2000169c;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800581c": "check_and_assign_error_0800581c",
                "param_1": "errorCode",
                "param_2": "inputData",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08005714"
            ],
            "called": [
                "FUN_080072b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800583c": {
            "entrypoint": "0x0800583c",
            "current_name": "FUNC_0800583c",
            "code": "\nvoid FUNC_0800583c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800583c": "FUNC_0800583c"
            },
            "calling": [
                "FUN_0800567c",
                "FUN_08005714"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800583e": {
            "entrypoint": "0x0800583e",
            "current_name": "FUNC_0800583e",
            "code": "\nvoid FUNC_0800583e(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800583e": "FUNC_0800583e"
            },
            "calling": [
                "FUN_0800567c",
                "FUN_08005714"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005840": {
            "entrypoint": "0x08005840",
            "current_name": "calculate_sum_08005840",
            "code": "\nint calculateSum_08005840(undefined4 param1,int param2)\n\n{\n  int sum;\n  \n  sum = *(int *)(param2 + -4) + -4;\n  if (*(int *)(param2 + -4) < 0) {\n    sum = sum + *(int *)(param2 + sum);\n  }\n  return sum;\n}\n\n",
            "renaming": {
                "FUN_08005840": "calculate_sum_08005840",
                "param_1": "param1",
                "param_2": "param2",
                "iVar1": "sum"
            },
            "calling": [
                "FUN_080057d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005854": {
            "entrypoint": "0x08005854",
            "current_name": "process_data_08005854",
            "code": "\nundefined8 processData_08005854(undefined4 input1,undefined4 input2)\n\n{\n  int result;\n  undefined4 *pointerVar;\n  int *integerVar;\n  undefined8 returnValue;\n  undefined8 processedData;\n  undefined4 flag;\n  undefined *dataPtr;\n  undefined4 input1_cpy;\n  undefined4 input2_cpy;\n  undefined4 input1_cpy2;\n  undefined4 input2_cpy2;\n  undefined8 processedDataPtr;\n  int errorCode;\n  \n  returnValue = FUN_08005c70();\n  if (DAT_20000224 == -1) {\n    return returnValue;\n  }\n  errorCode = FUN_08000a04(input1,input2,input1,input2);\n  if (errorCode != 0) {\n    return returnValue;\n  }\n  processedData = FUNC_0800708c(input1,input2);\n  result = FUN_080009f0((int)processedData,(int)((ulonglong)processedData >> 0x20),0,0x3ff00000);\n  if (result == 0) {\n    return returnValue;\n  }\n  flag = 1;\n  dataPtr = &DAT_080073ac;\n  input1_cpy = input1;\n  input2_cpy = input2;\n  input1_cpy2 = input1;\n  input2_cpy2 = input2;\n  processedDataPtr = FUN_080070a4(&DAT_0800737e);\n  if (DAT_20000224 != '\\x02') {\n    result = FUN_0800709e(&flag);\n    if (result != 0) goto LAB_080058d0;\n  }\n  pointerVar = (undefined4 *)FUN_080072ac();\n  *pointerVar = 0x21;\nLAB_080058d0:\n  if (errorCode != 0) {\n    integerVar = (int *)FUN_080072ac();\n    *integerVar = errorCode;\n  }\n  return processedDataPtr;\n}\n\n",
            "renaming": {
                "FUN_08005854": "process_data_08005854",
                "param_1": "input1",
                "param_2": "input2",
                "iVar1": "result",
                "puVar2": "pointerVar",
                "piVar3": "integerVar",
                "uVar4": "returnValue",
                "uVar5": "processedData",
                "local_48": "flag",
                "local_44": "dataPtr",
                "local_40": "input1_cpy",
                "uStack_3c": "input2_cpy",
                "local_38": "input1_cpy2",
                "uStack_34": "input2_cpy2",
                "local_30": "processedDataPtr",
                "local_28": "errorCode"
            },
            "calling": [
                "FUN_08003330"
            ],
            "called": [
                "FUN_0800708c",
                "FUN_080072ac",
                "FUN_080070a4",
                "FUN_08005c70",
                "FUN_080009f0",
                "FUN_0800709e",
                "FUN_08000a04"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_08006070": {
            "entrypoint": "0x080058fc",
            "current_name": "calculate_result_thunk_08006070",
            "code": "\nundefined8 calculateResult_thunk_08006070(uint input1,uint input2,uint input3,uint input4)\n\n{\n  undefined4 temp1;\n  uint temp2;\n  uint temp3;\n  int temp4;\n  uint temp5;\n  undefined8 result;\n  undefined8 temp7;\n  \n  temp5 = input4 & 0x7fffffff;\n  if ((0x7ff00000 < (temp5 | (-input3 | input3) >> 0x1f)) ||\n     (temp3 = input2 & 0x7fffffff, 0x7ff00000 < (temp3 | (-input1 | input1) >> 0x1f))) {\n    result = FUN_0800016c(input1,input2,input3,input4,input4);\n    return result;\n  }\n  if ((input4 + 0xc0100000 | input3) == 0) {\n    result = FUN_08006d68();\n    return result;\n  }\n  temp2 = (int)input4 >> 0x1e & 2U | input2 >> 0x1f;\n  if ((input1 | temp3) == 0) {\n    if (temp2 == 2) {\n      return 0x400921fb54442d18;\n    }\n    if (temp2 != 3) {\n      return CONCAT44(input2,input1);\n    }\nLAB_0800613e:\n    result = 0xc00921fb54442d18;\n  }\n  else {\n    if ((input3 | temp5) != 0) {\n      if (temp5 == 0x7ff00000) {\n        if (temp3 == 0x7ff00000) {\n          if (temp2 == 2) {\n            return 0x4002d97c7f3321d2;\n          }\n          if (temp2 == 3) {\n            return 0xc002d97c7f3321d2;\n          }\n          if (temp2 != 1) {\n            return 0x3fe921fb54442d18;\n          }\n          return 0xbfe921fb54442d18;\n        }\n        if (temp2 == 2) {\n          return 0x400921fb54442d18;\n        }\n        if (temp2 != 3) {\n          if (temp2 != 1) {\n            return 0;\n          }\n          return 0x8000000000000000;\n        }\n        goto LAB_0800613e;\n      }\n      if (temp3 != 0x7ff00000) {\n        temp4 = (int)(temp3 - temp5) >> 0x14;\n        if (temp4 < 0x3d) {\n          if (((int)input4 < 0) && (temp4 + 0x3c < 0 != SCARRY4(temp4,0x3c))) {\n            result = 0;\n          }\n          else {\n            FUN_08000724(input1,input2);\n            FUNC_0800708c();\n            result = FUN_08006d68();\n          }\n        }\n        else {\n          result = 0x3ff921fb54442d18;\n        }\n        temp4 = (int)((ulonglong)result >> 0x20);\n        temp1 = (undefined4)result;\n        if (temp2 == 1) {\n          return CONCAT44(temp4 + -0x80000000,temp1);\n        }\n        if (temp2 == 2) {\n          temp7 = FUN_08000168(temp1,temp4,0x33145c07,0x3ca1a626);\n          result = 0x400921fb54442d18;\n        }\n        else {\n          if (temp2 == 0) {\n            return result;\n          }\n          result = FUN_08000168(temp1,temp4,0x33145c07,0x3ca1a626);\n          temp7 = 0x400921fb54442d18;\n        }\n        result = FUN_08000168((int)result,(int)((ulonglong)result >> 0x20),(int)temp7,\n                             (int)((ulonglong)temp7 >> 0x20));\n        return result;\n      }\n    }\n    if ((int)input2 < 0) {\n      result = 0xbff921fb54442d18;\n    }\n    else {\n      result = 0x3ff921fb54442d18;\n    }\n  }\n  return result;\n}\n\n",
            "renaming": {
                "thunk_FUN_08006070": "calculate_result_thunk_08006070",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "uVar3": "temp3",
                "iVar4": "temp4",
                "uVar5": "temp5",
                "uVar6": "result",
                "uVar7": "temp7"
            },
            "calling": [
                "FUN_08003330"
            ],
            "called": [
                "FUN_08006070"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005900": {
            "entrypoint": "0x08005900",
            "current_name": "process_data_08005900",
            "code": "\nundefined8 processData_08005900(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  char flag;\n  int result;\n  int *pointer1;\n  undefined4 *pointer2;\n  int iVar5;\n  undefined4 highBits;\n  undefined4 lowBits;\n  undefined8 returnValue;\n  undefined8 tempValue;\n  undefined4 status;\n  undefined *message;\n  undefined4 param1;\n  undefined4 param2;\n  undefined4 param3;\n  undefined4 param4;\n  undefined8 output;\n  int value;\n  \n  returnValue = FUN_08006228();\n  flag = DAT_20000224;\n  highBits = (undefined4)((ulonglong)returnValue >> 0x20);\n  lowBits = (undefined4)returnValue;\n  if (DAT_20000224 == -1) {\n    return returnValue;\n  }\n  result = FUN_08000a04(input3,input4,input3,input4);\n  if (result != 0) {\n    return returnValue;\n  }\n  result = FUN_08000a04(input1,input2,input1,input2);\n  param1 = input1;\n  param2 = input2;\n  param3 = input3;\n  param4 = input4;\n  if (result == 0) {\n    result = FUN_080009a0(input1,input2,0,0);\n    if (result != 0) {\n      result = FUN_080009a0(input3,input4,0,0);\n      if (result != 0) {\n        status = 1;\n        message = &DAT_080073b1;\n        output = 0;\n        value = 0;\n        if (flag != '\\0') {\n          output = 0x3ff0000000000000;\n          goto LAB_080059d0;\n        }\n        goto LAB_08005978;\n      }\n      result = FUN_08007092(input3,input4);\n      if (result == 0) {\n        return returnValue;\n      }\n      result = FUN_080009b4(input3,input4,0,0);\n      if (result == 0) {\n        return returnValue;\n      }\n      status = 1;\n      message = &DAT_080073b1;\n      value = 0;\n      if (DAT_20000224 == '\\0') goto LAB_08005a22;\n      output = 0xfff0000000000000;\n      value = 0;\n      flag = DAT_20000224;\nLAB_08005a32:\n      if (flag != '\\x02') goto LAB_08005978;\n      goto LAB_08005a34;\n    }\n    result = FUN_08007092(lowBits,highBits);\n    if (((result != 0) || (iVar5 = FUN_08007092(input1,input2), iVar5 == 0)) ||\n       (iVar5 = FUN_08007092(input3,input4), iVar5 == 0)) {\n      result = FUN_080009a0(lowBits,highBits,0,0);\n      if (result == 0) {\n        return returnValue;\n      }\n      result = FUN_08007092(input1,input2);\n      if (result == 0) {\n        return returnValue;\n      }\n      result = FUN_08007092(input3,input4);\n      if (result == 0) {\n        return returnValue;\n      }\n      status = 4;\n      message = &DAT_080073b1;\n      value = 0;\n      output._0_4_ = 0;\n      output._4_4_ = 0;\n      goto LAB_08005afa;\n    }\n    value = FUN_08000a04(lowBits,highBits);\n    flag = DAT_20000224;\n    if (value != 0) {\n      message = &DAT_080073b1;\n      status = 1;\n      value = result;\n      if (DAT_20000224 != '\\0') {\n        output = FUN_08000724(0,0,0,0);\n        goto LAB_08005a32;\n      }\nLAB_08005a22:\n      message = &DAT_080073b1;\n      status = 1;\n      output = 0;\n      goto LAB_08005978;\n    }\n    message = &DAT_080073b1;\n    status = 3;\n    if (DAT_20000224 == '\\0') {\n      output._0_4_ = 0xe0000000;\n      output._4_4_ = 0x47efffff;\n      result = FUN_080009b4(input1,input2,0,0);\n      if (result != 0) {\n        returnValue = FUN_080004d0(input3,input4,0,0x3fe00000);\n        tempValue = FUN_080070b0();\n        result = FUN_080009a0((int)returnValue,(int)((ulonglong)returnValue >> 0x20),(int)tempValue,\n                             (int)((ulonglong)tempValue >> 0x20));\n        if (result == 0) {\n          output._0_4_ = 0xe0000000;\n          output._4_4_ = 0xc7efffff;\n        }\n        goto LAB_08005afa;\n      }\nLAB_08005b98:\n      result = FUN_0800709e(&status);\n      if (result != 0) goto LAB_080059d0;\n    }\n    else {\n      output._0_4_ = 0;\n      output._4_4_ = 0x7ff00000;\n      result = FUN_080009b4(input1,input2,0,0);\n      if (result != 0) {\n        returnValue = FUN_080004d0(input3,input4,0,0x3fe00000);\n        tempValue = FUN_080070b0();\n        result = FUN_080009a0((int)returnValue,(int)((ulonglong)returnValue >> 0x20),(int)tempValue,\n                             (int)((ulonglong)tempValue >> 0x20));\n        if (result == 0) {\n          output._0_4_ = 0;\n          output._4_4_ = 0xfff00000;\n        }\n      }\nLAB_08005afa:\n      if (DAT_20000224 != '\\x02') goto LAB_08005b98;\n    }\n    pointer2 = (undefined4 *)FUN_080072ac();\n    lowBits = 0x22;\n  }\n  else {\n    result = FUN_080009a0(input3,input4,0,0);\n    if (result == 0) {\n      return returnValue;\n    }\n    status = 1;\n    message = &DAT_080073b1;\n    output = 0x3ff0000000000000;\n    value = 0;\n    if (flag == '\\x02') {\n      return 0x3ff0000000000000;\n    }\nLAB_08005978:\n    result = FUN_0800709e(&status);\n    if (result != 0) goto LAB_080059d0;\nLAB_08005a34:\n    pointer2 = (undefined4 *)FUN_080072ac();\n    lowBits = 0x21;\n  }\n  *pointer2 = lowBits;\nLAB_080059d0:\n  if (value != 0) {\n    pointer1 = (int *)FUN_080072ac();\n    *pointer1 = value;\n  }\n  return output;\n}\n\n",
            "renaming": {
                "FUN_08005900": "process_data_08005900",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "cVar1": "flag",
                "iVar2": "result",
                "piVar3": "pointer1",
                "puVar4": "pointer2",
                "uVar6": "highBits",
                "uVar7": "lowBits",
                "uVar8": "returnValue",
                "uVar9": "tempValue",
                "local_50": "status",
                "local_4c": "message",
                "local_48": "param1",
                "uStack_44": "param2",
                "local_40": "param3",
                "uStack_3c": "param4",
                "local_38": "output",
                "local_30": "value"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_080004d0",
                "FUN_08007092",
                "FUN_080072ac",
                "FUN_080070b0",
                "FUN_08006228",
                "FUN_080009a0",
                "FUN_08000724",
                "FUN_080009b4",
                "FUN_0800709e",
                "FUN_08000a04"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005bc8": {
            "entrypoint": "0x08005bc8",
            "current_name": "analyze_binary_08005bc8",
            "code": "\nundefined8 analyze_binary_08005bc8(undefined4 input_param_1,undefined4 input_param_2)\n\n{\n  char flag;\n  int result;\n  int *ptr_result;\n  undefined4 *ptr_data;\n  undefined8 return_value;\n  undefined4 count;\n  undefined *message;\n  undefined4 param_1;\n  undefined4 param_2;\n  undefined4 param_1;\n  undefined4 param_2;\n  undefined8 output_value;\n  int temp_variable;\n  \n  return_value = FUN_08006c0c();\n  flag = DAT_20000224;\n  if (DAT_20000224 == -1) {\n    return return_value;\n  }\n  temp_variable = FUN_08000a04(input_param_1,input_param_2,input_param_1,input_param_2);\n  if (temp_variable != 0) {\n    return return_value;\n  }\n  result = FUN_080009b4(input_param_1,input_param_2,0,0);\n  if (result == 0) {\n    return return_value;\n  }\n  count = 1;\n  message = &DAT_080073b5;\n  param_1 = input_param_1;\n  param_2 = input_param_2;\n  param_1 = input_param_1;\n  param_2 = input_param_2;\n  if (flag == '\\0') {\n    output_value = 0;\nLAB_08005c26:\n    result = FUN_0800709e(&count);\n    if (result != 0) goto LAB_08005c2e;\n  }\n  else {\n    output_value = FUN_08000724(0,0,0,0);\n    if (flag != '\\x02') goto LAB_08005c26;\n  }\n  ptr_data = (undefined4 *)FUN_080072ac();\n  *ptr_data = 0x21;\nLAB_08005c2e:\n  if (temp_variable != 0) {\n    ptr_result = (int *)FUN_080072ac();\n    *ptr_result = temp_variable;\n  }\n  return output_value;\n}\n\n",
            "renaming": {
                "FUN_08005bc8": "analyze_binary_08005bc8",
                "param_1": "input_param_1",
                "param_2": "input_param_2",
                "cVar1": "flag",
                "iVar2": "result",
                "piVar3": "ptr_result",
                "puVar4": "ptr_data",
                "uVar5": "return_value",
                "local_50": "count",
                "local_4c": "message",
                "local_48": "param_1",
                "uStack_44": "param_2",
                "local_40": "param_1",
                "uStack_3c": "param_2",
                "local_38": "output_value",
                "local_30": "temp_variable"
            },
            "calling": [
                "FUN_08003330"
            ],
            "called": [
                "FUN_080072ac",
                "FUN_08006c0c",
                "FUN_08000724",
                "FUN_080009b4",
                "FUN_0800709e",
                "FUN_08000a04"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c70": {
            "entrypoint": "0x08005c70",
            "current_name": "calculate_value_08005c70",
            "code": "\nundefined8 calculateValue_08005c70(uint inputValue1,uint inputValue2)\n\n{\n  int result;\n  undefined4 tempVar1;\n  undefined4 tempVar2;\n  undefined4 tempVar3;\n  undefined4 tempVar4;\n  undefined4 tempVar5;\n  undefined4 tempVar6;\n  uint maskedValue;\n  undefined8 outputValue1;\n  undefined8 outputValue2;\n  undefined8 outputValue3;\n  \n  outputValue1 = CONCAT44(inputValue2,inputValue1);\n  maskedValue = inputValue2 & 0x7fffffff;\n  if (maskedValue < 0x3ff00000) {\n    if (maskedValue < 0x3fe00000) {\n      if (0x3e3fffff < maskedValue) {\n        outputValue2 = FUN_080004d0(inputValue1,inputValue2,inputValue1,inputValue2);\n        tempVar6 = (undefined4)((ulonglong)outputValue2 >> 0x20);\n        tempVar5 = (undefined4)outputValue2;\n        outputValue2 = FUN_080004d0(tempVar5,tempVar6,0xdfdf709,0x3f023de1);\n        outputValue2 = FUN_0800016c((int)outputValue2,(int)((ulonglong)outputValue2 >> 0x20),0x7501b288,0x3f49efe0);\n        outputValue2 = FUN_080004d0((int)outputValue2,(int)((ulonglong)outputValue2 >> 0x20),tempVar5,tempVar6);\n        outputValue2 = FUN_08000168((int)outputValue2,(int)((ulonglong)outputValue2 >> 0x20),0xb5688f3b,0x3fa48228);\n        outputValue2 = FUN_080004d0((int)outputValue2,(int)((ulonglong)outputValue2 >> 0x20),tempVar5,tempVar6);\n        outputValue2 = FUN_0800016c((int)outputValue2,(int)((ulonglong)outputValue2 >> 0x20),0xe884455,0x3fc9c155);\n        outputValue2 = FUN_080004d0((int)outputValue2,(int)((ulonglong)outputValue2 >> 0x20),tempVar5,tempVar6);\n        outputValue2 = FUN_08000168((int)outputValue2,(int)((ulonglong)outputValue2 >> 0x20),0x3eb6f7d,0x3fd4d612);\n        outputValue2 = FUN_080004d0((int)outputValue2,(int)((ulonglong)outputValue2 >> 0x20),tempVar5,tempVar6);\n        outputValue2 = FUN_0800016c((int)outputValue2,(int)((ulonglong)outputValue2 >> 0x20),0x55555555,0x3fc55555);\n        outputValue2 = FUN_080004d0((int)outputValue2,(int)((ulonglong)outputValue2 >> 0x20),tempVar5,tempVar6);\n        outputValue3 = FUN_080004d0(tempVar5,tempVar6,0xb12e9282,0x3fb3b8c5);\n        outputValue3 = FUN_08000168((int)outputValue3,(int)((ulonglong)outputValue3 >> 0x20),0x1b8d0159,0x3fe6066c);\n        outputValue3 = FUN_080004d0((int)outputValue3,(int)((ulonglong)outputValue3 >> 0x20),tempVar5,tempVar6);\n        outputValue3 = FUN_0800016c((int)outputValue3,(int)((ulonglong)outputValue3 >> 0x20),0x9c598ac8,0x40002ae5);\n        outputValue3 = FUN_080004d0((int)outputValue3,(int)((ulonglong)outputValue3 >> 0x20),tempVar5,tempVar6);\n        outputValue3 = FUN_08000168((int)outputValue3,(int)((ulonglong)outputValue3 >> 0x20),0x1c8a2d4b,0x40033a27);\n        outputValue3 = FUN_080004d0((int)outputValue3,(int)((ulonglong)outputValue3 >> 0x20),tempVar5,tempVar6);\n        outputValue3 = FUN_0800016c((int)outputValue3,(int)((ulonglong)outputValue3 >> 0x20),0,0x3ff00000);\n        outputValue2 = FUN_08000724((int)outputValue2,(int)((ulonglong)outputValue2 >> 0x20),(int)outputValue3,\n                              (int)((ulonglong)outputValue3 >> 0x20));\n        outputValue2 = FUN_080004d0((int)outputValue2,(int)((ulonglong)outputValue2 >> 0x20),inputValue1,inputValue2);\n        goto LAB_08005cba;\n      }\n      outputValue2 = FUN_0800016c(inputValue1,inputValue2,0x8800759c,0x7e37e43c);\n      result = FUN_080009f0((int)outputValue2,(int)((ulonglong)outputValue2 >> 0x20),0,0x3ff00000);\n      if (result != 0) {\n        return outputValue1;\n      }\n    }\n    outputValue1 = FUNC_0800708c(inputValue1,inputValue2);\n    outputValue1 = FUN_08000168(0,0x3ff00000,(int)outputValue1,(int)((ulonglong)outputValue1 >> 0x20));\n    outputValue1 = FUN_080004d0((int)outputValue1,(int)((ulonglong)outputValue1 >> 0x20),0,0x3fe00000);\n    tempVar1 = (undefined4)((ulonglong)outputValue1 >> 0x20);\n    tempVar5 = (undefined4)outputValue1;\n    outputValue1 = FUN_080004d0(tempVar5,tempVar1,0xdfdf709,0x3f023de1);\n    outputValue1 = FUN_0800016c((int)outputValue1,(int)((ulonglong)outputValue1 >> 0x20),0x7501b288,0x3f49efe0);\n    outputValue1 = FUN_080004d0((int)outputValue1,(int)((ulonglong)outputValue1 >> 0x20),tempVar5,tempVar1);\n    outputValue1 = FUN_08000168((int)outputValue1,(int)((ulonglong)outputValue1 >> 0x20),0xb5688f3b,0x3fa48228);\n    outputValue1 = FUN_080004d0((int)outputValue1,(int)((ulonglong)outputValue1 >> 0x20),tempVar5,tempVar1);\n    outputValue1 = FUN_0800016c((int)outputValue1,(int)((ulonglong)outputValue1 >> 0x20),0xe884455,0x3fc9c155);\n    outputValue1 = FUN_080004d0((int)outputValue1,(int)((ulonglong)outputValue1 >> 0x20),tempVar5,tempVar1);\n    outputValue1 = FUN_08000168((int)outputValue1,(int)((ulonglong)outputValue1 >> 0x20),0x3eb6f7d,0x3fd4d612);\n    outputValue1 = FUN_080004d0((int)outputValue1,(int)((ulonglong)outputValue1 >> 0x20),tempVar5,tempVar1);\n    outputValue1 = FUN_0800016c((int)outputValue1,(int)((ulonglong)outputValue1 >> 0x20),0x55555555,0x3fc55555);\n    outputValue1 = FUN_080004d0((int)outputValue1,(int)((ulonglong)outputValue1 >> 0x20),tempVar5,tempVar1);\n    tempVar2 = (undefined4)((ulonglong)outputValue1 >> 0x20);\n    outputValue2 = FUN_080004d0(tempVar5,tempVar1,0xb12e9282,0x3fb3b8c5);\n    outputValue2 = FUN_08000168((int)outputValue2,(int)((ulonglong)outputValue2 >> 0x20),0x1b8d0159,0x3fe6066c);\n    outputValue2 = FUN_080004d0((int)outputValue2,(int)((ulonglong)outputValue2 >> 0x20),tempVar5,tempVar1);\n    outputValue2 = FUN_0800016c((int)outputValue2,(int)((ulonglong)outputValue2 >> 0x20),0x9c598ac8,0x40002ae5);\n    outputValue2 = FUN_080004d0((int)outputValue2,(int)((ulonglong)outputValue2 >> 0x20),tempVar5,tempVar1);\n    outputValue2 = FUN_08000168((int)outputValue2,(int)((ulonglong)outputValue2 >> 0x20),0x1c8a2d4b,0x40033a27);\n    outputValue2 = FUN_080004d0((int)outputValue2,(int)((ulonglong)outputValue2 >> 0x20),tempVar5,tempVar1);\n    outputValue2 = FUN_0800016c((int)outputValue2,(int)((ulonglong)outputValue2 >> 0x20),0,0x3ff00000);\n    tempVar3 = (undefined4)((ulonglong)outputValue2 >> 0x20);\n    outputValue3 = FUN_08006c0c(tempVar5,tempVar1);\n    tempVar4 = (undefined4)((ulonglong)outputValue3 >> 0x20);\n    tempVar6 = (undefined4)outputValue3;\n    if (maskedValue < 0x3fef3333) {\n      outputValue1 = FUN_08000724((int)outputValue1,tempVar2,(int)outputValue2,tempVar3);\n      outputValue2 = FUN_0800016c(tempVar6,tempVar4,tempVar6,tempVar4);\n      outputValue1 = FUN_080004d0((int)outputValue1,(int)((ulonglong)outputValue1 >> 0x20),(int)outputValue2,\n                           (int)((ulonglong)outputValue2 >> 0x20));\n      outputValue2 = FUN_080004d0(0,tempVar4,0,tempVar4);\n      outputValue2 = FUN_08000168(tempVar5,tempVar1,(int)outputValue2,(int)((ulonglong)outputValue2 >> 0x20));\n      outputValue3 = FUN_0800016c(tempVar6,tempVar4,0,tempVar4);\n      outputValue2 = FUN_08000724((int)outputValue2,(int)((ulonglong)outputValue2 >> 0x20),(int)outputValue3,\n                            (int)((ulonglong)outputValue3 >> 0x20));\n      tempVar5 = (undefined4)((ulonglong)outputValue2 >> 0x20);\n      outputValue2 = FUN_0800016c((int)outputValue2,tempVar5,(int)outputValue2,tempVar5);\n      outputValue2 = FUN_08000168(0x33145c07,0x3c91a626,(int)outputValue2,(int)((ulonglong)outputValue2 >> 0x20));\n      outputValue1 = FUN_08000168((int)outputValue1,(int)((ulonglong)outputValue1 >> 0x20),(int)outputValue2,\n                           (int)((ulonglong)outputValue2 >> 0x20));\n      outputValue2 = FUN_0800016c(0,tempVar4,0,tempVar4);\n      outputValue2 = FUN_08000168(0x54442d18,0x3fe921fb,(int)outputValue2,(int)((ulonglong)outputValue2 >> 0x20));\n      outputValue1 = FUN_08000168((int)outputValue1,(int)((ulonglong)outputValue1 >> 0x20),(int)outputValue2,\n                           (int)((ulonglong)outputValue2 >> 0x20));\n      tempVar5 = 0x3fe921fb;\n    }\n    else {\n      outputValue1 = FUN_08000724((int)outputValue1,tempVar2,(int)outputValue2,tempVar3);\n      outputValue1 = FUN_080004d0((int)outputValue1,(int)((ulonglong)outputValue1 >> 0x20),tempVar6,tempVar4);\n      outputValue1 = FUN_0800016c((int)outputValue1,(int)((ulonglong)outputValue1 >> 0x20),tempVar6,tempVar4);\n      tempVar5 = (undefined4)((ulonglong)outputValue1 >> 0x20);\n      outputValue1 = FUN_0800016c((int)outputValue1,tempVar5,(int)outputValue1,tempVar5);\n      outputValue1 = FUN_08000168((int)outputValue1,(int)((ulonglong)outputValue1 >> 0x20),0x33145c07,0x3c91a626);\n      tempVar5 = 0x3ff921fb;\n    }\n    outputValue1 = FUN_08000168(0x54442d18,tempVar5,(int)outputValue1,(int)((ulonglong)outputValue1 >> 0x20));\n    if ((int)inputValue2 < 1) {\n      outputValue1 = CONCAT44((int)((ulonglong)outputValue1 >> 0x20) + -0x80000000,(int)outputValue1);\n    }\n  }\n  else {\n    if ((maskedValue + 0xc0100000 | inputValue1) != 0) {\n      outputValue1 = FUN_08000168(inputValue1,inputValue2,inputValue1,inputValue2);\n      tempVar5 = (undefined4)((ulonglong)outputValue1 >> 0x20);\n      outputValue1 = FUN_08000724((int)outputValue1,tempVar5,(int)outputValue1,tempVar5);\n      return outputValue1;\n    }\n    outputValue1 = FUN_080004d0(inputValue1,inputValue2,0x54442d18,0x3ff921fb);\n    outputValue2 = FUN_080004d0(inputValue1,inputValue2,0x33145c07,0x3c91a626);\nLAB_08005cba:\n    outputValue1 = FUN_0800016c((int)outputValue1,(int)((ulonglong)outputValue1 >> 0x20),(int)outputValue2,\n                         (int)((ulonglong)outputValue2 >> 0x20));\n  }\n  return outputValue1;\n}\n\n",
            "renaming": {
                "FUN_08005c70": "calculate_value_08005c70",
                "param_1": "inputValue1",
                "param_2": "inputValue2",
                "iVar1": "result",
                "uVar2": "tempVar1",
                "uVar3": "tempVar2",
                "uVar4": "tempVar3",
                "uVar5": "tempVar4",
                "uVar6": "tempVar5",
                "uVar7": "tempVar6",
                "uVar8": "maskedValue",
                "uVar9": "outputValue1",
                "uVar10": "outputValue2",
                "uVar11": "outputValue3"
            },
            "calling": [
                "FUN_08005854"
            ],
            "called": [
                "FUN_080004d0",
                "FUN_0800708c",
                "FUN_08006c0c",
                "FUN_08000168",
                "FUN_080009f0",
                "FUN_08000724",
                "FUN_0800016c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006070": {
            "entrypoint": "0x08006070",
            "current_name": "calculate_floating_point_08006070",
            "code": "\nundefined8 calculateFloatingPoint_08006070(uint value1,uint value2,uint value3,uint value4)\n\n{\n  undefined4 result1;\n  uint result2;\n  uint result3;\n  int result4;\n  uint result5;\n  undefined8 finalResult;\n  undefined8 tempResult;\n  \n  result5 = value4 & 0x7fffffff;\n  if ((0x7ff00000 < (result5 | (-value3 | value3) >> 0x1f)) ||\n     (result3 = value2 & 0x7fffffff, 0x7ff00000 < (result3 | (-value1 | value1) >> 0x1f))) {\n    finalResult = FUN_0800016c(value1,value2,value3,value4,value4);\n    return finalResult;\n  }\n  if ((value4 + 0xc0100000 | value3) == 0) {\n    finalResult = FUN_08006d68();\n    return finalResult;\n  }\n  result2 = (int)value4 >> 0x1e & 2U | value2 >> 0x1f;\n  if ((value1 | result3) == 0) {\n    if (result2 == 2) {\n      return 0x400921fb54442d18;\n    }\n    if (result2 != 3) {\n      return CONCAT44(value2,value1);\n    }\nLAB_0800613e:\n    finalResult = 0xc00921fb54442d18;\n  }\n  else {\n    if ((value3 | result5) != 0) {\n      if (result5 == 0x7ff00000) {\n        if (result3 == 0x7ff00000) {\n          if (result2 == 2) {\n            return 0x4002d97c7f3321d2;\n          }\n          if (result2 == 3) {\n            return 0xc002d97c7f3321d2;\n          }\n          if (result2 != 1) {\n            return 0x3fe921fb54442d18;\n          }\n          return 0xbfe921fb54442d18;\n        }\n        if (result2 == 2) {\n          return 0x400921fb54442d18;\n        }\n        if (result2 != 3) {\n          if (result2 != 1) {\n            return 0;\n          }\n          return 0x8000000000000000;\n        }\n        goto LAB_0800613e;\n      }\n      if (result3 != 0x7ff00000) {\n        result4 = (int)(result3 - result5) >> 0x14;\n        if (result4 < 0x3d) {\n          if (((int)value4 < 0) && (result4 + 0x3c < 0 != SCARRY4(result4,0x3c))) {\n            finalResult = 0;\n          }\n          else {\n            FUN_08000724(value1,value2);\n            FUNC_0800708c();\n            finalResult = FUN_08006d68();\n          }\n        }\n        else {\n          finalResult = 0x3ff921fb54442d18;\n        }\n        result4 = (int)((ulonglong)finalResult >> 0x20);\n        result1 = (undefined4)finalResult;\n        if (result2 == 1) {\n          return CONCAT44(result4 + -0x80000000,result1);\n        }\n        if (result2 == 2) {\n          tempResult = FUN_08000168(result1,result4,0x33145c07,0x3ca1a626);\n          finalResult = 0x400921fb54442d18;\n        }\n        else {\n          if (result2 == 0) {\n            return finalResult;\n          }\n          finalResult = FUN_08000168(result1,result4,0x33145c07,0x3ca1a626);\n          tempResult = 0x400921fb54442d18;\n        }\n        finalResult = FUN_08000168((int)finalResult,(int)((ulonglong)finalResult >> 0x20),(int)tempResult,\n                             (int)((ulonglong)tempResult >> 0x20));\n        return finalResult;\n      }\n    }\n    if ((int)value2 < 0) {\n      finalResult = 0xbff921fb54442d18;\n    }\n    else {\n      finalResult = 0x3ff921fb54442d18;\n    }\n  }\n  return finalResult;\n}\n\n",
            "renaming": {
                "FUN_08006070": "calculate_floating_point_08006070",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "result3",
                "iVar4": "result4",
                "uVar5": "result5",
                "uVar6": "finalResult",
                "uVar7": "tempResult"
            },
            "calling": [
                "thunk_FUN_08006070"
            ],
            "called": [
                "FUN_0800708c",
                "FUN_08006d68",
                "FUN_08000168",
                "FUN_08000724",
                "FUN_0800016c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006228": {
            "entrypoint": "0x08006228",
            "current_name": "compute_floating_point_08006228",
            "code": "\nuint computeFloatingPoint_08006228(uint significand1,uint exponent1,uint significand2,uint exponent2)\n\n{\n  undefined4 result1;\n  uint result2;\n  uint overflow;\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 overflow1;\n  undefined4 overflow2;\n  uint precisionLoss;\n  undefined4 overflow3;\n  int shiftAmount;\n  int index;\n  undefined4 tableElement1;\n  uint uVar8;\n  undefined4 tableElement2;\n  int iVar10;\n  uint result;\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined8 result;\n  undefined8 combined1;\n  undefined8 combined2;\n  undefined8 result;\n  longlong combined;\n  ulonglong combined1;\n  undefined8 combined2;\n  uint precision;\n  undefined4 temp1;\n  undefined4 temp2;\n  int shiftOffset;\n  \n  combined1 = CONCAT44(exponent1,significand1);\n  result = exponent2 & 0x7fffffff;\n  if ((result | significand2) == 0) {\n    return 0;\n  }\n  uVar8 = exponent1 & 0x7fffffff;\n  if (uVar8 < 0x7ff00001) {\n    if (uVar8 == 0x7ff00000) {\n      if (significand1 == 0) {\n        if (0x7ff00000 < result) goto LAB_08006278;\nLAB_08006262:\n        if ((result != 0x7ff00000) || (significand2 == 0)) {\n          if (-1 < (int)exponent1) goto LAB_0800632a;\n          if (result < 0x43400000) {\n            if (result < 0x3ff00000) {\nLAB_0800632a:\n              precision = 0;\n              goto LAB_080062ba;\n            }\n            shiftAmount = ((int)result >> 0x14) + -0x3ff;\n            if (0x14 < shiftAmount) {\n              result2 = significand2 >> (0x34U - shiftAmount & 0xff);\n              if (significand2 == result2 << (0x34U - shiftAmount & 0xff)) {\n                precision = 2 - (result2 & 1);\n                goto LAB_080062ba;\n              }\n              goto LAB_0800632a;\n            }\n            if (significand2 == 0) {\n              result2 = (int)result >> (0x14U - shiftAmount & 0xff);\n              if (result == result2 << (0x14U - shiftAmount & 0xff)) {\n                precision = 2 - (result2 & 1);\n              }\n              else {\n                precision = 0;\n              }\n              goto LAB_0800630c;\n            }\n            precision = 0;\n          }\n          else {\n            precision = 2;\nLAB_080062ba:\n            if (significand2 == 0) {\n              if (result == 0x7ff00000) {\n                if ((uVar8 + 0xc0100000 | significand1) == 0) {\n                  return 0;\n                }\n                if (0x3fefffff < uVar8) {\n                  if ((int)exponent2 < 0) {\n                    return 0;\n                  }\n                  return 0;\n                }\n                if (-1 < (int)exponent2) {\n                  return 0;\n                }\n                return 0;\n              }\nLAB_0800630c:\n              if (result == 0x3ff00000) {\n                if (-1 < (int)exponent2) {\n                  return significand1;\n                }\n                result = 0x3ff0000000000000;\n                goto LAB_08006320;\n              }\n              if (exponent2 == 0x40000000) goto LAB_0800634a;\n              if ((exponent2 == 0x3fe00000) && (-1 < (int)exponent1)) {\n                result = FUN_08006c0c(significand1,exponent1);\n                return result;\n              }\n            }\n          }\n          result = FUNC_0800708c(significand1,exponent1);\n          temp1 = (undefined4)((ulonglong)result >> 0x20);\n          result1 = (undefined4)result;\n          combined1 = CONCAT44(exponent1,result1) & 0x7fffffffffffffff;\n          if ((significand1 == 0) && ((uVar8 == 0 || ((exponent1 & 0x3fffffff) == 0x3ff00000)))) {\n            if ((int)exponent2 < 0) {\n              result = FUN_08000724(0,0x3ff00000,result1,temp1);\n            }\n            if (-1 < (int)exponent1) {\n              return (uint)result;\n            }\n            if ((precision | uVar8 + 0xc0100000) != 0) {\n              return (uint)result;\n            }\n          }\n          else {\n            result2 = 0xffffffff - ((int)exponent1 >> 0x1f);\n            result = combined1;\n            if ((precision | result2) != 0) {\n              if (result < 0x41e00001) {\n                shiftOffset = 0;\n                if (uVar8 < 0x100000) {\n                  combined1 = FUN_080004d0();\n                  shiftOffset = -0x35;\n                }\n                result = (uint)(combined1 >> 0x20);\n                result1 = (undefined4)combined1;\n                shiftOffset = ((int)result >> 0x14) + -0x3ff + shiftOffset;\n                result = result & 0xfffff;\n                uVar8 = result | 0x3ff00000;\n                if (result < 0x3988f) {\nLAB_08006628:\n                  shiftAmount = 0;\n                }\n                else {\n                  if (0xbb679 < result) {\n                    uVar8 = uVar8 - 0x100000;\n                    shiftOffset = shiftOffset + 1;\n                    goto LAB_08006628;\n                  }\n                  shiftAmount = 1;\n                }\n                index = shiftAmount * 8;\n                tableElement1 = (&DAT_080073c0)[shiftAmount * 2];\n                tableElement2 = (&DAT_080073c4)[shiftAmount * 2];\n                combined1 = FUN_08000168(result1,uVar8,tableElement1,tableElement2);\n                temp2 = (undefined4)((ulonglong)combined1 >> 0x20);\n                result = FUN_0800016c(result1,uVar8,tableElement1,tableElement2);\n                result = FUN_08000724(0,0x3ff00000,(int)result,(int)((ulonglong)result >> 0x20));\n                temp1 = (undefined4)((ulonglong)result >> 0x20);\n                combined2 = FUN_080004d0((int)combined1,temp2,(int)result,temp1);\n                temp2 = (undefined4)((ulonglong)combined2 >> 0x20);\n                temp1 = (undefined4)combined2;\n                combined2 = FUN_080004d0(0,temp2);\n                combined1 = FUN_08000168((int)combined1,temp2,(int)combined2,\n                                      (int)((ulonglong)combined2 >> 0x20));\n                combined2 = FUN_08000168(0,((int)uVar8 >> 1 | 0x20000000U) + 0x80000 + shiftAmount * 0x40000,\n                                      tableElement1,tableElement2);\n                combined2 = FUN_08000168(result1,uVar8,(int)combined2,(int)((ulonglong)combined2 >> 0x20));\n                combined2 = FUN_080004d0((int)combined2,(int)((ulonglong)combined2 >> 0x20),0,temp2);\n                combined1 = FUN_08000168((int)combined1,(int)((ulonglong)combined1 >> 0x20),(int)combined2,\n                                      (int)((ulonglong)combined2 >> 0x20));\n                combined1 = FUN_080004d0((int)combined1,(int)((ulonglong)combined1 >> 0x20),(int)result,temp1\n                                     );\n                temp2 = (undefined4)((ulonglong)combined1 >> 0x20);\n                result = FUN_080004d0(temp1,temp2);\n                temp1 = (undefined4)((ulonglong)result >> 0x20);\n                result1 = (undefined4)result;\n                result = FUN_080004d0(result1,temp1,0x4a454eef,0x3fca7e28);\n                result = FUN_0800016c((int)result,(int)((ulonglong)result >> 0x20),0x93c9db65,\n                                      0x3fcd864a);\n                result = FUN_080004d0((int)result,(int)((ulonglong)result >> 0x20),result1,temp1);\n                result = FUN_0800016c((int)result,(int)((ulonglong)result >> 0x20),0xa91d4101,\n                                      0x3fd17460);\n                result = FUN_080004d0((int)result,(int)((ulonglong)result >> 0x20),result1,temp1);\n                result = FUN_0800016c((int)result,(int)((ulonglong)result >> 0x20),0x518f264d,\n                                      0x3fd55555);\n                result = FUN_080004d0((int)result,(int)((ulonglong)result >> 0x20),result1,temp1);\n                result = FUN_0800016c((int)result,(int)((ulonglong)result >> 0x20),0xdb6fabff,\n                                      0x3fdb6db6);\n                result = FUN_080004d0((int)result,(int)((ulonglong)result >> 0x20),result1,temp1);\n                result = FUN_0800016c((int)result,(int)((ulonglong)result >> 0x20),0x33333303,\n                                      0x3fe33333);\n                combined2 = FUN_080004d0(result1,temp1,result1,temp1);\n                result = FUN_080004d0((int)result,(int)((ulonglong)result >> 0x20),(int)combined2,\n                                      (int)((ulonglong)combined2 >> 0x20));\n                combined2 = FUN_0800016c(temp1,temp2,0,temp2);\n                combined2 = FUN_080004d0((int)combined2,(int)((ulonglong)combined2 >> 0x20),(int)combined1,\n                                      temp2);\n                result = FUN_0800016c((int)combined2,(int)((ulonglong)combined2 >> 0x20),(int)result,\n                                      (int)((ulonglong)result >> 0x20));\n                result1 = (undefined4)((ulonglong)result >> 0x20);\n                combined2 = FUN_080004d0(0,temp2,0,temp2);\n                temp1 = (undefined4)((ulonglong)combined2 >> 0x20);\n                result = FUN_0800016c((int)combined2,temp1,0,0x40080000);\n                FUN_0800016c((int)result,(int)((ulonglong)result >> 0x20),(int)result,result1);\n                result = FUN_080004d0(0,temp2,0,overflow1);\n                tableElement1 = (undefined4)((ulonglong)result >> 0x20);\n                combined2 = FUN_08000168(0,overflow1,0,0x40080000);\n                combined2 = FUN_08000168((int)combined2,(int)((ulonglong)combined2 >> 0x20),(int)combined2,temp1\n                                     );\n                result = FUN_08000168((int)result,result1,(int)combined2,(int)((ulonglong)combined2 >> 0x20)\n                                     );\n                result = FUN_080004d0((int)result,(int)((ulonglong)result >> 0x20),temp1,temp2);\n                combined1 = FUN_080004d0((int)combined1,temp2,0,overflow1);\n                result = FUN_0800016c((int)result,(int)((ulonglong)result >> 0x20),(int)combined1,\n                                      (int)((ulonglong)combined1 >> 0x20));\n                result1 = (undefined4)((ulonglong)result >> 0x20);\n                FUN_0800016c((int)result,tableElement1,(int)result,result1);\n                combined1 = FUN_080004d0(0,overflow2,0xe0000000,0x3feec709);\n                combined2 = FUN_08000168(0,overflow2,(int)result,tableElement1);\n                result = FUN_08000168((int)result,result1,(int)combined2,(int)((ulonglong)combined2 >> 0x20)\n                                     );\n                result = FUN_080004d0((int)result,(int)((ulonglong)result >> 0x20),0xdc3a03fd,\n                                      0x3feec709);\n                combined2 = FUN_080004d0(0,overflow2,0x145b01f5,0xbe3e2fe0);\n                result = FUN_0800016c((int)result,(int)((ulonglong)result >> 0x20),(int)combined2,\n                                      (int)((ulonglong)combined2 >> 0x20));\n                result = FUN_0800016c((int)result,(int)((ulonglong)result >> 0x20),\n                                      *(undefined4 *)(&DAT_080073e0 + index),\n                                      *(undefined4 *)(&DAT_080073e4 + index));\n                combined2 = FUN_08000404(shiftOffset);\n                result1 = (undefined4)((ulonglong)combined2 >> 0x20);\n                temp1 = *(undefined4 *)(&DAT_080073d0 + index);\n                temp2 = *(undefined4 *)(&DAT_080073d4 + index);\n                result = FUN_0800016c((int)combined1,(int)((ulonglong)combined1 >> 0x20),(int)result,\n                                      (int)((ulonglong)result >> 0x20));\n                result = FUN_0800016c((int)result,(int)((ulonglong)result >> 0x20),temp1,temp2);\n                FUN_0800016c((int)result,(int)((ulonglong)result >> 0x20),(int)combined2,result1);\n                combined2 = FUN_08000168(0,precisionLoss,(int)combined2,result1);\n                combined = FUN_08000168((int)combined2,(int)((ulonglong)combined2 >> 0x20),temp1,temp2);\n                result = precisionLoss;\n              }\n              else {\n                if (0x43f00000 < result) {\n                  if (uVar8 < 0x3ff00000) goto LAB_080063fa;\nLAB_08006418:\n                  if ((int)exponent2 < 1) {\n                    return 0;\n                  }\nLAB_08006400:\n                  significand1 = 0x8800759c;\n                  exponent1 = 0x7e37e43c;\n                  combined1 = 0x7e37e43c8800759c;\n                  goto LAB_0800634a;\n                }\n                if (uVar8 < 0x3fefffff) {\nLAB_080063fa:\n                  if (-1 < (int)exponent2) {\n                    return 0;\n                  }\n                  goto LAB_08006400;\n                }\n                if (0x3ff00000 < uVar8) goto LAB_08006418;\n                combined1 = FUN_08000168(result1,temp1,0,0x3ff00000);\n                temp1 = (undefined4)((ulonglong)combined1 >> 0x20);\n                result1 = (undefined4)combined1;\n                combined1 = FUN_080004d0(result1,temp1,0x60000000,0x3ff71547);\n                result = FUN_080004d0(result1,temp1,0xf85ddf44,0x3e54ae0b);\n                combined2 = FUN_080004d0(result1,temp1,0,0x3fd00000);\n                combined2 = FUN_08000168(0x55555555,0x3fd55555,(int)combined2,\n                                      (int)((ulonglong)combined2 >> 0x20));\n                combined2 = FUN_080004d0((int)combined2,(int)((ulonglong)combined2 >> 0x20),result1,temp1);\n                combined2 = FUN_08000168(0,0x3fe00000,(int)combined2,(int)((ulonglong)combined2 >> 0x20));\n                result = FUN_080004d0(result1,temp1,result1,temp1);\n                combined2 = FUN_080004d0((int)combined2,(int)((ulonglong)combined2 >> 0x20),(int)result,\n                                      (int)((ulonglong)result >> 0x20));\n                combined2 = FUN_080004d0((int)combined2,(int)((ulonglong)combined2 >> 0x20),0x652b82fe,\n                                      0x3ff71547);\n                result = FUN_08000168((int)result,(int)((ulonglong)result >> 0x20),(int)combined2,\n                                      (int)((ulonglong)combined2 >> 0x20));\n                FUN_0800016c((int)combined1,(int)((ulonglong)combined1 >> 0x20),(int)result,\n                             (int)((ulonglong)result >> 0x20));\n                combined = (ulonglong)overflow << 0x20;\n                result = overflow;\n              }\n              combined1 = FUN_08000168((int)combined,(int)((ulonglong)combined >> 0x20),(int)combined1,\n                                    (int)((ulonglong)combined1 >> 0x20));\n              combined1 = FUN_08000168((int)result,(int)((ulonglong)result >> 0x20),(int)combined1,\n                                    (int)((ulonglong)combined1 >> 0x20));\n              if ((precision - 1 | result2) == 0) {\n                exponent1 = 0xbff00000;\n              }\n              else {\n                exponent1 = 0x3ff00000;\n              }\n              precision = 0;\n              result = FUN_08000168(significand2,exponent2,0,exponent2);\n              result = FUN_080004d0((int)result,(int)((ulonglong)result >> 0x20),0,result);\n              combined1 = FUN_080004d0((int)combined1,(int)((ulonglong)combined1 >> 0x20),significand2,exponent2);\n              combined1 = FUN_0800016c((int)result,(int)((ulonglong)result >> 0x20),(int)combined1,\n                                    (int)((ulonglong)combined1 >> 0x20));\n              temp2 = (undefined4)((ulonglong)combined1 >> 0x20);\n              result1 = (undefined4)combined1;\n              combined1 = FUN_080004d0(0,result,0,exponent2);\n              temp1 = (undefined4)((ulonglong)combined1 >> 0x20);\n              temp1 = (undefined4)combined1;\n              combined = FUN_0800016c(result1,temp2,temp1,temp1);\n              uVar8 = (uint)((ulonglong)combined >> 0x20);\n              result = (uint)combined;\n              if (0x408fffffffffffff < combined) {\n                if ((uVar8 + 0xbf700000 | result) == 0) {\n                  result = FUN_0800016c(result1,temp2,0x652b82fe,0x3c971547);\n                  combined2 = FUN_08000168(result,uVar8,temp1,temp1);\n                  shiftAmount = FUN_080009f0((int)result,(int)((ulonglong)result >> 0x20),(int)combined2,\n                                       (int)((ulonglong)combined2 >> 0x20));\n                  if (shiftAmount == 0) goto LAB_08006968;\n                }\n                combined1 = FUN_080004d0(0,exponent1,0x8800759c,0x7e37e43c);\n                significand1 = 0x8800759c;\n                exponent1 = 0x7e37e43c;\n                goto LAB_0800634a;\n              }\n              if ((uVar8 & 0x7fffffff) < 0x4090cc00) {\nLAB_08006968:\n                if ((uVar8 & 0x7fffffff) < 0x3fe00001) {\n                  shiftAmount = 0;\n                }\n                else {\n                  uVar8 = (0x100000 >> (((int)(uVar8 & 0x7fffffff) >> 0x14) - 0x3feU & 0xff)) +\n                          uVar8;\n                  result = (uVar8 * 2 >> 0x15) - 0x3ff;\n                  shiftAmount = (int)(uVar8 & 0xfffff | 0x100000) >> (0x14 - result & 0xff);\n                  if (combined < 0) {\n                    shiftAmount = -shiftAmount;\n                  }\n                  combined1 = FUN_08000168(temp1,temp1,0,uVar8 & ~(0xfffff >> (result & 0xff)));\n                }\n                temp2 = (undefined4)((ulonglong)combined1 >> 0x20);\n                temp1 = (undefined4)combined1;\n                FUN_0800016c(temp1,temp2,result1,temp2);\n                combined1 = FUN_080004d0(0,overflow3,0,0x3fe62e43);\n                temp1 = (undefined4)((ulonglong)combined1 >> 0x20);\n                result = FUN_08000168(0,overflow3,temp1,temp2);\n                result = FUN_08000168(result1,temp2,(int)result,(int)((ulonglong)result >> 0x20));\n                result = FUN_080004d0((int)result,(int)((ulonglong)result >> 0x20),0xfefa39ef,\n                                      0x3fe62e42);\n                combined2 = FUN_080004d0(0,overflow3,0xca86c39,0xbe205c61);\n                result = FUN_0800016c((int)result,(int)((ulonglong)result >> 0x20),(int)combined2,\n                                      (int)((ulonglong)combined2 >> 0x20));\n                temp2 = (undefined4)((ulonglong)result >> 0x20);\n                combined2 = FUN_0800016c((int)combined1,temp1,(int)result,temp2);\n                temp1 = (undefined4)((ulonglong)combined2 >> 0x20);\n                result1 = (undefined4)combined2;\n                combined1 = FUN_08000168(result1,temp1,(int)combined1,temp1);\n                combined1 = FUN_08000168((int)result,temp2,(int)combined1,\n                                      (int)((ulonglong)combined1 >> 0x20));\n                temp2 = (undefined4)((ulonglong)combined1 >> 0x20);\n                result = FUN_080004d0(result1,temp1,result1,temp1);\n                temp2 = (undefined4)((ulonglong)result >> 0x20);\n                temp1 = (undefined4)result;\n                result = FUN_080004d0(temp1,temp2,0x72bea4d0,0x3e663769);\n                result = FUN_08000168((int)result,(int)((ulonglong)result >> 0x20),0xc5d26bf1,\n                                      0x3ebbbd41);\n                result = FUN_080004d0((int)result,(int)((ulonglong)result >> 0x20),temp1,temp2);\n                result = FUN_0800016c((int)result,(int)((ulonglong)result >> 0x20),0xaf25de2c,\n                                      0x3f11566a);\n                result = FUN_080004d0((int)result,(int)((ulonglong)result >> 0x20),temp1,temp2);\n                result = FUN_08000168((int)result,(int)((ulonglong)result >> 0x20),0x16bebd93,\n                                      0x3f66c16c);\n                result = FUN_080004d0((int)result,(int)((ulonglong)result >> 0x20),temp1,temp2);\n                result = FUN_0800016c((int)result,(int)((ulonglong)result >> 0x20),0x5555553e,\n                                      0x3fc55555);\n                result = FUN_080004d0((int)result,(int)((ulonglong)result >> 0x20),temp1,temp2);\n                result = FUN_08000168(result1,temp1,(int)result,(int)((ulonglong)result >> 0x20));\n                temp1 = (undefined4)((ulonglong)result >> 0x20);\n                combined2 = FUN_080004d0(result1,temp1,(int)result,temp1);\n                result = FUN_08000168((int)result,temp1,0,0x40000000);\n                result = FUN_08000724((int)combined2,(int)((ulonglong)combined2 >> 0x20),(int)result,\n                                      (int)((ulonglong)result >> 0x20));\n                combined2 = FUN_080004d0(result1,temp1,(int)combined1,temp2);\n                combined1 = FUN_0800016c((int)combined2,(int)((ulonglong)combined2 >> 0x20),(int)combined1,\n                                      temp2);\n                combined1 = FUN_08000168((int)result,(int)((ulonglong)result >> 0x20),(int)combined1,\n                                      (int)((ulonglong)combined1 >> 0x20));\n                combined1 = FUN_08000168((int)combined1,(int)((ulonglong)combined1 >> 0x20),result1,temp1);\n                result = FUN_08000168(0,0x3ff00000,(int)combined1,(int)((ulonglong)combined1 >> 0x20));\n                index = (int)((ulonglong)result >> 0x20);\n                iVar10 = index + shiftAmount * 0x100000;\n                combined1 = CONCAT44(iVar10,(int)result);\n                significand1 = precision;\n                if (iVar10 < 0x100000) {\n                  combined1 = FUN_080071c0((int)result,index,shiftAmount);\n                }\n              }\n              else {\n                if ((uVar8 + 0x3f6f3400 | result) == 0) {\n                  result = FUN_08000168(result,uVar8,temp1,temp1);\n                  shiftAmount = FUN_080009c8(result1,temp2,(int)result,(int)((ulonglong)result >> 0x20));\n                  if (shiftAmount == 0) goto LAB_08006968;\n                }\n                combined1 = FUN_080004d0(0,exponent1,0xc2f8f359,0x1a56e1f);\n                significand1 = 0xc2f8f359;\n                exponent1 = 0x1a56e1f;\n              }\nLAB_0800634a:\n              result = FUN_080004d0((int)combined1,(int)((ulonglong)combined1 >> 0x20),significand1,exponent1);\n              return result;\n            }\n          }\n          result1 = (undefined4)((ulonglong)result >> 0x20);\n          result = FUN_08000168((int)result,result1,(int)result,result1);\n          combined1 = result;\nLAB_08006320:\n          result = FUN_08000724((int)result,(int)((ulonglong)result >> 0x20),(int)combined1,\n                                (int)((ulonglong)combined1 >> 0x20));\n          return result;\n        }\n      }\n    }\n    else if (result < 0x7ff00001) goto LAB_08006262;\n  }\n  if ((uVar8 + 0xc0100000 | significand1) == 0) {\n    return 0;\n  }\nLAB_08006278:\n  result = FUN_080070a4(&DAT_0800737e);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08006228": "compute_floating_point_08006228",
                "param_1": "significand1",
                "param_2": "exponent1",
                "param_3": "significand2",
                "param_4": "exponent2",
                "uVar1": "result1",
                "uVar2": "result2",
                "extraout_r1": "overflow",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "extraout_r1_00": "overflow1",
                "extraout_r1_01": "overflow2",
                "extraout_r1_02": "precisionLoss",
                "extraout_r1_03": "overflow3",
                "iVar5": "shiftAmount",
                "iVar6": "index",
                "uVar7": "tableElement1",
                "uVar9": "tableElement2",
                "uVar11": "result",
                "uVar12": "temp1",
                "uVar13": "temp2",
                "uVar14": "result",
                "uVar19": "combined1",
                "uVar20": "combined2",
                "local_70": "precision",
                "local_68": "temp1",
                "local_64": "temp2",
                "local_54": "shiftOffset",
                "uVar15": "combined1",
                "uVar16": "combined2",
                "uVar17": "result",
                "lVar18": "combined"
            },
            "calling": [
                "FUN_08005900"
            ],
            "called": [
                "FUN_080071c0",
                "FUN_080004d0",
                "FUN_0800708c",
                "FUN_080070a4",
                "FUN_080009c8",
                "FUN_08006c0c",
                "FUN_08000168",
                "FUN_080009f0",
                "FUN_08000724",
                "FUN_0800016c",
                "FUN_08000404"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c0c": {
            "entrypoint": "0x08006c0c",
            "current_name": "calculate_float_08006c0c",
            "code": "\nundefined8 calculate_float_08006c0c(uint input_1,uint input_2)\n\n{\n  undefined4 result;\n  uint temp_1;\n  int temp_2;\n  int temp_3;\n  uint temp_4;\n  uint temp_5;\n  int temp_6;\n  uint temp_7;\n  uint temp_8;\n  int temp_9;\n  uint temp_10;\n  undefined8 final_result;\n  \n  if ((~input_2 & 0x7ff00000) == 0) {\n    final_result = FUN_080004d0(input_1,input_2,input_1,input_2);\n    final_result = FUN_0800016c(input_1,input_2,(int)final_result,(int)((ulonglong)final_result >> 0x20));\n    return final_result;\n  }\n  if ((int)input_2 < 1) {\n    if ((input_2 & 0x7fffffff | input_1) == 0) {\n      return CONCAT44(input_2,input_1);\n    }\n    if (input_2 != 0) {\n      final_result = FUN_08000168(input_1,input_2,input_1,input_2);\n      result = (undefined4)((ulonglong)final_result >> 0x20);\n      final_result = FUN_08000724((int)final_result,result,(int)final_result,result);\n      return final_result;\n    }\n  }\n  temp_2 = (int)input_2 >> 0x14;\n  if (temp_2 == 0) {\n    while (input_2 == 0) {\n      temp_2 = temp_2 + -0x15;\n      input_2 = input_1 >> 0xb;\n      input_1 = input_1 << 0x15;\n    }\n    temp_1 = 0;\n    for (; -1 < (int)(input_2 << 0xb); input_2 = input_2 << 1) {\n      temp_1 = temp_1 + 1;\n    }\n    temp_2 = temp_2 - (temp_1 - 1);\n    input_2 = input_2 | input_1 >> (0x20 - temp_1 & 0xff);\n    input_1 = input_1 << (temp_1 & 0xff);\n  }\n  temp_6 = 0;\n  temp_1 = input_2 & 0xfffff | 0x100000;\n  if ((temp_2 + -0x3ff) * -0x80000000 < 0) {\n    temp_1 = temp_1 * 2 - ((int)input_1 >> 0x1f);\n    input_1 = input_1 << 1;\n  }\n  temp_1 = temp_1 * 2 - ((int)input_1 >> 0x1f);\n  temp_3 = 0x16;\n  temp_4 = 0;\n  temp_7 = 0x200000;\n  input_1 = input_1 << 1;\n  do {\n    temp_9 = temp_4 + temp_7;\n    if (temp_9 <= (int)temp_1) {\n      temp_1 = temp_1 - temp_9;\n      temp_4 = temp_9 + temp_7;\n      temp_6 = temp_6 + temp_7;\n    }\n    temp_3 = temp_3 + -1;\n    temp_1 = temp_1 * 2 - ((int)input_1 >> 0x1f);\n    temp_7 = temp_7 >> 1;\n    input_1 = input_1 << 1;\n  } while (temp_3 != 0);\n  temp_9 = 0x20;\n  temp_8 = 0x80000000;\n  temp_7 = 0;\n  temp_3 = 0;\n  do {\n    temp_10 = temp_8 + temp_3;\n    temp_5 = temp_4;\n    if (((int)temp_4 < (int)temp_1) || ((temp_1 == temp_4 && (temp_10 <= input_1)))) {\n      temp_3 = temp_10 + temp_8;\n      if (((int)temp_10 < 0) && (-1 < temp_3)) {\n        temp_5 = temp_4 + 1;\n      }\n      temp_1 = temp_1 - temp_4;\n      if (input_1 < temp_10) {\n        temp_1 = temp_1 - 1;\n      }\n      input_1 = input_1 - temp_10;\n      temp_7 = temp_7 + temp_8;\n    }\n    temp_1 = temp_1 * 2 - ((int)input_1 >> 0x1f);\n    temp_9 = temp_9 + -1;\n    input_1 = input_1 << 1;\n    temp_8 = temp_8 >> 1;\n    temp_4 = temp_5;\n  } while (temp_9 != 0);\n  if ((input_1 | temp_1) != 0) {\n    if (temp_7 == 0xffffffff) {\n      temp_6 = temp_6 + 1;\n      temp_7 = 0;\n    }\n    else {\n      temp_7 = temp_7 + 1 & 0xfffffffe;\n    }\n  }\n  temp_7 = temp_7 >> 1;\n  if (temp_6 << 0x1f < 0) {\n    temp_7 = temp_7 | 0x80000000;\n  }\n  return CONCAT44((temp_6 >> 1) + 0x3fe00000 + (temp_2 + -0x3ff >> 1) * 0x100000,temp_7);\n}\n\n",
            "renaming": {
                "FUN_08006c0c": "calculate_float_08006c0c",
                "param_1": "input_1",
                "param_2": "input_2",
                "uVar1": "result",
                "uVar2": "temp_1",
                "iVar3": "temp_2",
                "iVar4": "temp_3",
                "uVar5": "temp_4",
                "uVar6": "temp_5",
                "iVar7": "temp_6",
                "uVar8": "temp_7",
                "uVar9": "temp_8",
                "iVar10": "temp_9",
                "uVar11": "temp_10",
                "uVar12": "final_result"
            },
            "calling": [
                "FUN_08005c70",
                "FUN_08005bc8",
                "FUN_08006228"
            ],
            "called": [
                "FUN_080004d0",
                "FUN_08000168",
                "FUN_08000724",
                "FUN_0800016c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d68": {
            "entrypoint": "0x08006d68",
            "current_name": "calculate_some_value_08006d68",
            "code": "\nundefined8 calculate_some_value_08006d68(int input_1,uint input_2,undefined4 constant_1,undefined4 constant_2)\n\n{\n  int result;\n  undefined4 temp_1;\n  undefined4 temp_2;\n  undefined4 temp_3;\n  undefined4 temp_4;\n  undefined4 temp_5;\n  undefined4 temp_6;\n  uint temp_7;\n  undefined8 final_result_1;\n  undefined8 final_result_2;\n  \n  final_result_1 = CONCAT44(input_2,input_1);\n  temp_7 = input_2 & 0x7fffffff;\n  if (temp_7 < 0x44100000) {\n    if (temp_7 < 0x3fdc0000) {\n      if (temp_7 < 0x3e200000) {\n        final_result_2 = FUN_0800016c(input_1,input_2,0x8800759c,0x7e37e43c,constant_2);\n        result = FUN_080009f0((int)final_result_2,(int)((ulonglong)final_result_2 >> 0x20),0,0x3ff00000);\n        if (result != 0) {\n          return final_result_1;\n        }\n      }\n      result = -1;\n    }\n    else {\n      final_result_1 = FUNC_0800708c();\n      temp_2 = (undefined4)((ulonglong)final_result_1 >> 0x20);\n      temp_1 = (undefined4)final_result_1;\n      if (temp_7 < 0x3ff30000) {\n        if (temp_7 < 0x3fe60000) {\n          final_result_1 = FUN_0800016c(temp_1,temp_2,temp_1,temp_2);\n          final_result_1 = FUN_08000168((int)final_result_1,(int)((ulonglong)final_result_1 >> 0x20),0,0x3ff00000);\n          final_result_2 = FUN_0800016c(temp_1,temp_2,0,0x40000000);\n          final_result_1 = FUN_08000724((int)final_result_1,(int)((ulonglong)final_result_1 >> 0x20),(int)final_result_2,\n                               (int)((ulonglong)final_result_2 >> 0x20));\n          result = 0;\n        }\n        else {\n          final_result_1 = FUN_08000168(temp_1,temp_2,0,0x3ff00000);\n          final_result_2 = FUN_0800016c(temp_1,temp_2,0,0x3ff00000);\n          final_result_1 = FUN_08000724((int)final_result_1,(int)((ulonglong)final_result_1 >> 0x20),(int)final_result_2,\n                               (int)((ulonglong)final_result_2 >> 0x20));\n          result = 1;\n        }\n      }\n      else if (temp_7 < 0x40038000) {\n        final_result_1 = FUN_08000168(temp_1,temp_2,0,0x3ff80000);\n        final_result_2 = FUN_080004d0(temp_1,temp_2,0,0x3ff80000);\n        final_result_2 = FUN_0800016c((int)final_result_2,(int)((ulonglong)final_result_2 >> 0x20),0,0x3ff00000);\n        final_result_1 = FUN_08000724((int)final_result_1,(int)((ulonglong)final_result_1 >> 0x20),(int)final_result_2,\n                             (int)((ulonglong)final_result_2 >> 0x20));\n        result = 2;\n      }\n      else {\n        final_result_1 = FUN_08000724(0,0xbff00000,temp_1,temp_2);\n        result = 3;\n      }\n    }\n    temp_6 = (undefined4)((ulonglong)final_result_1 >> 0x20);\n    temp_5 = (undefined4)final_result_1;\n    final_result_1 = FUN_080004d0(temp_5,temp_6,temp_5,temp_6);\n    temp_3 = (undefined4)((ulonglong)final_result_1 >> 0x20);\n    temp_1 = (undefined4)final_result_1;\n    final_result_1 = FUN_080004d0(temp_1,temp_3,temp_1,temp_3);\n    temp_4 = (undefined4)((ulonglong)final_result_1 >> 0x20);\n    temp_2 = (undefined4)final_result_1;\n    final_result_1 = FUN_080004d0(temp_2,temp_4,0xe322da11,0x3f90ad3a);\n    final_result_1 = FUN_0800016c((int)final_result_1,(int)((ulonglong)final_result_1 >> 0x20),0x24760deb,0x3fa97b4b);\n    final_result_1 = FUN_080004d0((int)final_result_1,(int)((ulonglong)final_result_1 >> 0x20),temp_2,temp_4);\n    final_result_1 = FUN_0800016c((int)final_result_1,(int)((ulonglong)final_result_1 >> 0x20),0xa0d03d51,0x3fb10d66);\n    final_result_1 = FUN_080004d0((int)final_result_1,(int)((ulonglong)final_result_1 >> 0x20),temp_2,temp_4);\n    final_result_1 = FUN_0800016c((int)final_result_1,(int)((ulonglong)final_result_1 >> 0x20),0xc54c206e,0x3fb745cd);\n    final_result_1 = FUN_080004d0((int)final_result_1,(int)((ulonglong)final_result_1 >> 0x20),temp_2,temp_4);\n    final_result_1 = FUN_0800016c((int)final_result_1,(int)((ulonglong)final_result_1 >> 0x20),0x920083ff,0x3fc24924);\n    final_result_1 = FUN_080004d0((int)final_result_1,(int)((ulonglong)final_result_1 >> 0x20),temp_2,temp_4);\n    final_result_1 = FUN_0800016c((int)final_result_1,(int)((ulonglong)final_result_1 >> 0x20),0x5555550d,0x3fd55555);\n    final_result_1 = FUN_080004d0((int)final_result_1,(int)((ulonglong)final_result_1 >> 0x20),temp_1,temp_3);\n    temp_1 = (undefined4)((ulonglong)final_result_1 >> 0x20);\n    final_result_2 = FUN_080004d0(temp_2,temp_4,0x2c6a6c2f,0xbfa2b444);\n    final_result_2 = FUN_08000168((int)final_result_2,(int)((ulonglong)final_result_2 >> 0x20),0x52defd9a,0x3fadde2d);\n    final_result_2 = FUN_080004d0((int)final_result_2,(int)((ulonglong)final_result_2 >> 0x20),temp_2,temp_4);\n    final_result_2 = FUN_08000168((int)final_result_2,(int)((ulonglong)final_result_2 >> 0x20),0xaf749a6d,0x3fb3b0f2);\n    final_result_2 = FUN_080004d0((int)final_result_2,(int)((ulonglong)final_result_2 >> 0x20),temp_2,temp_4);\n    final_result_2 = FUN_08000168((int)final_result_2,(int)((ulonglong)final_result_2 >> 0x20),0xfe231671,0x3fbc71c6);\n    final_result_2 = FUN_080004d0((int)final_result_2,(int)((ulonglong)final_result_2 >> 0x20),temp_2,temp_4);\n    final_result_2 = FUN_08000168((int)final_result_2,(int)((ulonglong)final_result_2 >> 0x20),0x9998ebc4,0x3fc99999);\n    final_result_2 = FUN_080004d0((int)final_result_2,(int)((ulonglong)final_result_2 >> 0x20),temp_2,temp_4);\n    temp_2 = (undefined4)((ulonglong)final_result_2 >> 0x20);\n    if (result == -1) {\n      final_result_1 = FUN_0800016c((int)final_result_1,temp_1,(int)final_result_2,temp_2);\n      final_result_1 = FUN_080004d0((int)final_result_1,(int)((ulonglong)final_result_1 >> 0x20),temp_5,temp_6);\n      final_result_1 = FUN_08000168(temp_5,temp_6,(int)final_result_1,(int)((ulonglong)final_result_1 >> 0x20));\n    }\n    else {\n      final_result_1 = FUN_0800016c((int)final_result_1,temp_1,(int)final_result_2,temp_2);\n      final_result_1 = FUN_080004d0((int)final_result_1,(int)((ulonglong)final_result_1 >> 0x20),temp_5,temp_6);\n      result = result * 8;\n      final_result_1 = FUN_08000168((int)final_result_1,(int)((ulonglong)final_result_1 >> 0x20),\n                           *(undefined4 *)(&UNK_08007410 + result),\n                           *(undefined4 *)(&UNK_08007414 + result));\n      final_result_1 = FUN_08000168((int)final_result_1,(int)((ulonglong)final_result_1 >> 0x20),temp_5,temp_6);\n      final_result_1 = FUN_08000168(*(undefined4 *)(&UNK_080073f0 + result),\n                           *(undefined4 *)(&UNK_080073f4 + result),(int)final_result_1,\n                           (int)((ulonglong)final_result_1 >> 0x20));\n      if ((int)input_2 < 0) {\n        final_result_1 = CONCAT44((int)((ulonglong)final_result_1 >> 0x20) + -0x80000000,(int)final_result_1);\n      }\n    }\n  }\n  else if ((temp_7 < 0x7ff00001) && ((temp_7 != 0x7ff00000 || (input_1 == 0)))) {\n    if ((int)input_2 < 1) {\n      final_result_1 = 0xbff921fb54442d18;\n    }\n    else {\n      final_result_1 = 0x3ff921fb54442d18;\n    }\n  }\n  else {\n    final_result_1 = FUN_0800016c(input_1,input_2,input_1,input_2,constant_2);\n  }\n  return final_result_1;\n}\n\n",
            "renaming": {
                "FUN_08006d68": "calculate_some_value_08006d68",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "constant_1",
                "param_4": "constant_2",
                "iVar1": "result",
                "uVar2": "temp_1",
                "uVar3": "temp_2",
                "uVar4": "temp_3",
                "uVar5": "temp_4",
                "uVar6": "temp_5",
                "uVar7": "temp_6",
                "uVar8": "temp_7",
                "uVar9": "final_result_1",
                "uVar10": "final_result_2"
            },
            "calling": [
                "FUN_08006070"
            ],
            "called": [
                "FUN_080004d0",
                "FUN_0800708c",
                "FUN_08000168",
                "FUN_080009f0",
                "FUN_08000724",
                "FUN_0800016c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800708c": {
            "entrypoint": "0x0800708c",
            "current_name": "FUNC_0800708c",
            "code": "\nvoid FUNC_0800708c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800708c": "FUNC_0800708c"
            },
            "calling": [
                "FUN_08006d68",
                "FUN_08005c70",
                "FUN_08005854",
                "FUN_08006228",
                "FUN_08006070"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08007092": {
            "entrypoint": "0x08007092",
            "current_name": "get_high_bit_count_08007092",
            "code": "\nuint getHighBitCount_08007092(undefined4 value,uint mask)\n\n{\n  return (mask | 0x80000000) + 0x100000 >> 0x1f;\n}\n\n",
            "renaming": {
                "FUN_08007092": "get_high_bit_count_08007092",
                "param_1": "value",
                "param_2": "mask"
            },
            "calling": [
                "FUN_08005900"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800709e": {
            "entrypoint": "0x0800709e",
            "current_name": "initialize_application_0800709e",
            "code": "\nvoid initializeApplication_0800709e(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800709e": "initialize_application_0800709e",
                "undefined4": "void"
            },
            "calling": [
                "FUN_08005900",
                "FUN_08005854",
                "FUN_08005bc8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080070a4": {
            "entrypoint": "0x080070a4",
            "current_name": "get_infinity_080070a4",
            "code": "\ndouble getInfinity_080070a4(void)\n\n{\n  return 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_080070a4": "get_infinity_080070a4",
                "undefined8": "double"
            },
            "calling": [
                "FUN_08005854",
                "FUN_08006228"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080070b0": {
            "entrypoint": "0x080070b0",
            "current_name": "calculate_double_precision_080070b0",
            "code": "\nundefined8 calculateDoublePrecision_080070b0(uint input1,uint input2,undefined4 input3)\n\n{\n  int index;\n  undefined4 var2;\n  uint var3;\n  undefined4 var4;\n  uint var5;\n  uint var6;\n  uint var7;\n  undefined8 result;\n  \n  var7 = (input2 << 1) >> 0x15;\n  var6 = var7 - 0x3ff;\n  var3 = input2;\n  if ((int)var6 < 0x14) {\n    if ((int)var6 < 0) {\n      if ((input2 & 0x7fffffff | input1) == 0) {\n        return CONCAT44(input2,input1);\n      }\n      var3 = input2 & 0xfffff | input1;\n      index = ((int)input2 >> 0x1f) * -8;\n      var2 = *(undefined4 *)(&DAT_08007430 + index);\n      var4 = *(undefined4 *)(&DAT_08007434 + index);\n      result = FUN_0800016c(input1,(-var3 | var3) >> 0xc & 0x80000 | input2 & 0xfffe0000,var2,\n                           var4,input1,input2,input3);\n      result = FUN_08000168((int)result,(int)((ulonglong)result >> 0x20),var2,var4);\n      return CONCAT44((uint)((ulonglong)result >> 0x20) & 0x7fffffff | input2 & 0x80000000,\n                      (int)result);\n    }\n    var7 = 0xfffff >> (var6 & 0xff);\n    if ((input2 & var7 | input1) == 0) {\n      return CONCAT44(input2,input1);\n    }\n    var7 = var7 >> 1;\n    var5 = input2 & var7 | input1;\n    if (var5 != 0) {\n      if (var6 == 0x13) {\n        var5 = 0x80000000;\n      }\n      else {\n        var5 = 0;\n      }\n      var3 = 0x40000 >> (var6 & 0xff) | input2 & ~var7;\n    }\n  }\n  else {\n    if (0x33 < (int)var6) {\n      if (var6 != 0x400) {\n        return CONCAT44(input2,input1);\n      }\n      result = FUN_0800016c();\n      return result;\n    }\n    var7 = var7 - 0x413;\n    var6 = 0xffffffff >> (var7 & 0xff);\n    if ((input1 & var6) == 0) {\n      return CONCAT44(input2,input1);\n    }\n    var6 = var6 >> 1;\n    var5 = input1;\n    if ((input1 & var6) != 0) {\n      var5 = 0x40000000 >> (var7 & 0xff) | input1 & ~var6;\n    }\n  }\n  index = ((int)input2 >> 0x1f) * -8;\n  var2 = *(undefined4 *)(&DAT_08007430 + index);\n  var4 = *(undefined4 *)(&DAT_08007434 + index);\n  result = FUN_0800016c(var5,var3,var2,var4,input1,input2,input3);\n  result = FUN_08000168((int)result,(int)((ulonglong)result >> 0x20),var2,var4);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080070b0": "calculate_double_precision_080070b0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "uVar2": "var2",
                "uVar3": "var3",
                "uVar4": "var4",
                "uVar5": "var5",
                "uVar6": "var6",
                "uVar7": "var7",
                "uVar8": "result",
                "iVar1": "index"
            },
            "calling": [
                "FUN_08005900"
            ],
            "called": [
                "FUN_08000168",
                "FUN_0800016c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080071c0": {
            "entrypoint": "0x080071c0",
            "current_name": "calculate_floating_point_080071c0",
            "code": "\nundefined8 calculateFloatingPoint_080071c0(uint numberPart1,uint numberPart2,int exponentModifier,undefined4 parameter4)\n\n{\n  uint shiftedValue;\n  undefined4 constant1;\n  int modifiedExponent;\n  undefined4 constant2;\n  uint numberPartHigh;\n  undefined8 resultValue;\n  \n  resultValue = CONCAT44(numberPart2,numberPart1);\n  shiftedValue = (numberPart2 << 1) >> 0x15;\n  if (shiftedValue == 0) {\n    if ((numberPart2 & 0x7fffffff | numberPart1) == 0) {\n      return resultValue;\n    }\n    resultValue = FUN_080004d0(numberPart1,numberPart2,0,0x43500000);\n    if (-0xc351 < exponentModifier) {\n      shiftedValue = ((uint)((int)((ulonglong)resultValue >> 0x20) << 1) >> 0x15) - 0x36;\n      goto LAB_08007210;\n    }\nLAB_080071ec:\n    constant1 = 0xc2f8f359;\n    constant2 = 0x1a56e1f;\n  }\n  else {\n    if (shiftedValue == 0x7ff) {\n      resultValue = FUN_0800016c(numberPart1,numberPart2,numberPart1,numberPart2,parameter4);\n      return resultValue;\n    }\nLAB_08007210:\n    numberPartHigh = (uint)((ulonglong)resultValue >> 0x20);\n    constant1 = (undefined4)resultValue;\n    modifiedExponent = shiftedValue + exponentModifier;\n    if (modifiedExponent < 0x7ff) {\n      if (0 < modifiedExponent) {\n        return CONCAT44(numberPartHigh & 0x800fffff | modifiedExponent * 0x100000,constant1);\n      }\n      if (modifiedExponent + 0x35 < 0 == SCARRY4(modifiedExponent,0x35)) {\n        resultValue = CONCAT44(numberPartHigh & 0x800fffff | (modifiedExponent + 0x36) * 0x100000,constant1);\n        constant1 = 0;\n        constant2 = 0x3c900000;\n        goto LAB_0800722e;\n      }\n      if (exponentModifier < 0xc351) {\n        resultValue = FUNC_0800729c(0xc2f8f359,0x1a56e1f,constant1,numberPartHigh);\n        goto LAB_080071ec;\n      }\n    }\n    resultValue = FUNC_0800729c(0x8800759c,0x7e37e43c,constant1,numberPartHigh);\n    constant1 = 0x8800759c;\n    constant2 = 0x7e37e43c;\n  }\nLAB_0800722e:\n  resultValue = FUN_080004d0((int)resultValue,(int)((ulonglong)resultValue >> 0x20),constant1,constant2);\n  return resultValue;\n}\n\n",
            "renaming": {
                "FUN_080071c0": "calculate_floating_point_080071c0",
                "param_1": "numberPart1",
                "param_2": "numberPart2",
                "param_3": "exponentModifier",
                "param_4": "parameter4",
                "uVar1": "shiftedValue",
                "uVar2": "constant1",
                "iVar3": "modifiedExponent",
                "uVar4": "constant2",
                "uVar5": "numberPartHigh",
                "uVar6": "resultValue"
            },
            "calling": [
                "FUN_08006228"
            ],
            "called": [
                "FUN_080004d0",
                "FUN_0800016c",
                "FUN_0800729c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800729c": {
            "entrypoint": "0x0800729c",
            "current_name": "FUNC_0800729c",
            "code": "\nvoid FUNC_0800729c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800729c": "FUNC_0800729c"
            },
            "calling": [
                "FUN_080071c0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080072ac": {
            "entrypoint": "0x080072ac",
            "current_name": "get_global_constant_080072ac",
            "code": "\nundefined4 get_global_constant_080072ac(void)\n\n{\n  return DAT_200001c0;\n}\n\n",
            "renaming": {
                "FUN_080072ac": "get_global_constant_080072ac"
            },
            "calling": [
                "FUN_08005900",
                "FUN_08005854",
                "FUN_08005bc8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080072b8": {
            "entrypoint": "0x080072b8",
            "current_name": "update_pointer_080072b8",
            "code": "\nvoid updatePointer_080072b8(int amount)\n\n{\n  if (DAT_200002b4 == (undefined *)0x0) {\n    DAT_200002b4 = &DAT_200016a0;\n  }\n  DAT_200002b4 = DAT_200002b4 + amount;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080072b8": "update_pointer_080072b8",
                "param_1": "amount"
            },
            "calling": [
                "FUN_0800581c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080072d4": {
            "entrypoint": "0x080072d4",
            "current_name": "FUNC_080072d4",
            "code": "\nvoid FUNC_080072d4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080072d4": "FUNC_080072d4"
            },
            "calling": [
                "FUN_08000134",
                "FUN_08004fb4",
                "FUN_08000110"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080072e0": {
            "entrypoint": "0x080072e0",
            "current_name": "FUNC_080072e0",
            "code": "\nvoid FUNC_080072e0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080072e0": "FUNC_080072e0"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        }
    },
    "used_tokens": 157801,
    "layers": [
        [
            "FUN_08000110",
            "FUN_08000134",
            "FUN_08000150",
            "FUN_08000168",
            "FUN_0800016c",
            "FUN_08000404",
            "FUN_08000428",
            "FUN_080004d0",
            "FUN_080006ac",
            "FUN_08000724",
            "FUN_08000892",
            "FUN_08000904",
            "FUN_08000980",
            "FUN_08000990",
            "FUN_080009a0",
            "FUN_080009b4",
            "FUN_080009c8",
            "FUN_080009f0",
            "FUN_08000a04",
            "FUN_08000a30",
            "FUN_08000ad8",
            "FUN_08000adc",
            "FUN_08000c3c",
            "FUN_08000c44",
            "FUN_08000cec",
            "FUN_08000e54",
            "FUN_08000f9c",
            "FUN_08000ffc",
            "FUN_08001004",
            "FUN_08001014",
            "FUN_08001028",
            "FUN_08001050",
            "FUN_08001064",
            "FUN_08001078",
            "FUN_080010c4",
            "FUN_08001104",
            "FUN_08001128",
            "FUN_0800114c",
            "FUN_0800115c",
            "FUN_08001170",
            "FUN_08001194",
            "FUN_080011fc",
            "FUN_08001214",
            "FUN_08001240",
            "FUN_08001264",
            "FUN_08001424",
            "FUN_0800142e",
            "FUN_08001436",
            "FUN_08001460",
            "FUN_080014e2",
            "FUN_08001530",
            "FUN_080015e8",
            "FUN_080016f4",
            "FUN_08001754",
            "FUN_08001828",
            "FUN_08001938",
            "FUN_08001b58",
            "FUN_08002008",
            "FUN_0800209c",
            "FUN_08002214",
            "FUN_08002220",
            "FUN_08002250",
            "FUN_08002280",
            "FUN_080022d0",
            "FUN_08002324",
            "FUN_08002368",
            "FUN_080023d0",
            "FUN_08002404",
            "FUN_0800245c",
            "FUN_08002520",
            "FUN_08002538",
            "FUN_08002564",
            "FUN_080025a4",
            "FUN_080025e8",
            "FUN_08002724",
            "FUN_0800290c",
            "FUN_0800299a",
            "FUN_08002ad0",
            "FUN_08002b48",
            "FUN_08002bf0",
            "FUN_08002cb0",
            "FUN_08002d88",
            "FUN_08002ea0",
            "FUN_08002ec0",
            "FUN_08002ed4",
            "FUN_08002ee8",
            "FUN_08002f28",
            "FUN_08003034",
            "FUN_08003068",
            "FUN_08003298",
            "FUN_08003314",
            "FUN_08003320",
            "FUN_08003330",
            "FUN_08003eb0",
            "FUN_08003ec8",
            "FUN_08003f3c",
            "FUN_08003fc4",
            "FUN_08003fd0",
            "FUN_08003fdc",
            "FUN_08003fe8",
            "FUN_08003ff4",
            "FUN_08004028",
            "FUN_0800403c",
            "FUN_0800407c",
            "FUN_080040b8",
            "FUN_080040e8",
            "FUN_0800411c",
            "FUN_08004194",
            "FUN_080041ae",
            "FUN_080041c4",
            "FUN_0800426c",
            "FUN_08004300",
            "FUN_08004348",
            "FUN_08004384",
            "FUN_080043bc",
            "FUN_080043f0",
            "FUN_08004410",
            "FUN_08004434",
            "FUN_08004458",
            "FUN_08004490",
            "FUN_08004514",
            "FUN_0800458c",
            "FUN_0800483c",
            "FUN_08004a30",
            "FUN_08004a84",
            "FUN_08004c18",
            "FUN_08004c30",
            "FUN_08004c64",
            "FUN_08004c70",
            "FUN_08004c8c",
            "FUN_08004cac",
            "FUN_08004ccc",
            "FUN_08004d48",
            "FUN_08004d8c",
            "FUN_08004e14",
            "FUN_08004e7c",
            "FUN_08004f10",
            "thunk_FUN_0800115c",
            "FUN_08004fb4",
            "FUN_08004ffc",
            "FUN_08005044",
            "FUN_080050fc",
            "FUN_080052e4",
            "FUN_080053d4",
            "FUN_08005614",
            "FUN_08005630",
            "FUN_08005646",
            "FUN_0800567c",
            "FUN_08005714",
            "FUN_080057d0",
            "FUN_0800581c",
            "FUN_08005840",
            "FUN_08005854",
            "thunk_FUN_08006070",
            "FUN_08005900",
            "FUN_08005bc8",
            "FUN_08005c70",
            "FUN_08006070",
            "FUN_08006228",
            "FUN_08006c0c",
            "FUN_08006d68",
            "FUN_08007092",
            "FUN_0800709e",
            "FUN_080070a4",
            "FUN_080070b0",
            "FUN_080071c0",
            "FUN_080072ac",
            "FUN_080072b8"
        ]
    ],
    "locked_functions": []
}