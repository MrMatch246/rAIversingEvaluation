{
    "functions": {
        "FUN_0800010c": {
            "entrypoint": "0x0800010c",
            "current_name": "initialize_flag_0800010c",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08000118) */\n\nundefined4 initializeFlag_0800010c(undefined4 value)\n\n{\n  if ((char)DAT_200000f4 == '\\0') {\n    DAT_200000f4._0_1_ = '\\x01';\n  }\n  return value;\n}\n\n",
            "renaming": {
                "FUN_0800010c": "initialize_flag_0800010c",
                "param_1": "value"
            },
            "calling": [],
            "called": [
                "FUN_0800a424"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000178": {
            "entrypoint": "0x08000178",
            "current_name": "find_end_of_string_08000178",
            "code": "\nchar * find_end_of_string_08000178(char *input_string)\n\n{\n  char current_character;\n  char *next_character;\n  char *current_position;\n  \n  current_position = input_string;\n  do {\n    next_character = current_position + 1;\n    current_character = *current_position;\n    current_position = next_character;\n  } while (current_character != '\\0');\n  return next_character + (-1 - (int)input_string);\n}\n\n",
            "renaming": {
                "FUN_08000178": "find_end_of_string_08000178",
                "param_1": "input_string",
                "cVar1": "current_character",
                "pcVar2": "next_character",
                "pcVar3": "current_position"
            },
            "calling": [
                "FUN_08002e44",
                "FUN_080032a2"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000188": {
            "entrypoint": "0x08000188",
            "current_name": "execute_software_interrupt_08000188",
            "code": "\nvoid executeSoftwareInterrupt_08000188(void)\n\n{\n  software_interrupt(0x3f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000188": "execute_software_interrupt_08000188"
            },
            "calling": [
                "FUN_0800018c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800018c": {
            "entrypoint": "0x0800018c",
            "current_name": "check_and_execute_function_0800018c",
            "code": "\nundefined4 check_and_execute_function_0800018c(undefined4 input_1,undefined4 input_2,undefined4 input_3,undefined4 input_4)\n\n{\n  undefined4 result;\n  \n  if (DAT_20000110 != 0) {\n    return 0;\n  }\n  result = FUN_08000188(1,input_1,0,0,input_4);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_0800018c": "check_and_execute_function_0800018c",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08000188"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000214": {
            "entrypoint": "0x08000214",
            "current_name": "process_data_08000214",
            "code": "\nvoid processData_08000214(uint input,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  bool shouldProcess;\n  int result;\n  \n  if (0x3b < (int)input) {\n    return;\n  }\n  result = FUN_08002fa0(&DAT_200003d4,input,param3,param4,param4);\n  if (result == 3) {\n    if (input < 0x3c) {\n      if ((&DAT_0800a908)[input] == -1) {\n        result = 0;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          result = 0;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[input]);\n          if (result == 1) {\n            result = 0;\n          }\n          else {\n            result = FUN_0800738a((int)(char)(&DAT_0800a908)[input],&DAT_0800a6cc);\n          }\n        }\n      }\n    }\n    else {\n      result = 0;\n    }\n    if (result != 0) {\n      FUN_080088e0(input,param2);\n    }\n    FUN_08002fc2(&DAT_200003d4,input,param2);\n  }\n  else if (result == 4) {\n    if (input < 0x3c) {\n      if ((&DAT_0800a908)[input] == -1) {\n        shouldProcess = false;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          shouldProcess = false;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[input]);\n          if (result == 1) {\n            shouldProcess = false;\n          }\n          else {\n            shouldProcess = true;\n          }\n        }\n      }\n    }\n    else {\n      shouldProcess = false;\n    }\n    if (shouldProcess) {\n      FUN_080026b0(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[input] * 3,param2);\n    }\n    FUN_08002fc2(&DAT_200003d4,input,param2);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000214": "process_data_08000214",
                "param_1": "input",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "bVar1": "shouldProcess",
                "iVar2": "result"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [
                "FUN_0800021a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800021a": {
            "entrypoint": "0x0800021a",
            "current_name": "process_data_0800021a",
            "code": "\nvoid processData_0800021a(uint value,undefined4 param1,undefined4 param2,undefined4 param3)\n\n{\n  bool isConditionMet;\n  int result;\n  \n  result = FUN_08002fa0(&DAT_200003d4,value,param2,param3,param3);\n  if (result == 3) {\n    if (value < 0x3c) {\n      if ((&DAT_0800a908)[value] == -1) {\n        result = 0;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          result = 0;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[value]);\n          if (result == 1) {\n            result = 0;\n          }\n          else {\n            result = FUN_0800738a((int)(char)(&DAT_0800a908)[value],&DAT_0800a6cc);\n          }\n        }\n      }\n    }\n    else {\n      result = 0;\n    }\n    if (result != 0) {\n      FUN_080088e0(value,param1);\n    }\n    FUN_08002fc2(&DAT_200003d4,value,param1);\n  }\n  else if (result == 4) {\n    if (value < 0x3c) {\n      if ((&DAT_0800a908)[value] == -1) {\n        isConditionMet = false;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          isConditionMet = false;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[value]);\n          if (result == 1) {\n            isConditionMet = false;\n          }\n          else {\n            isConditionMet = true;\n          }\n        }\n      }\n    }\n    else {\n      isConditionMet = false;\n    }\n    if (isConditionMet) {\n      FUN_080026b0(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[value] * 3,param1);\n    }\n    FUN_08002fc2(&DAT_200003d4,value,param1);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800021a": "process_data_0800021a",
                "param_1": "value",
                "param_2": "param1",
                "param_3": "param2",
                "param_4": "param3",
                "bVar1": "isConditionMet",
                "iVar2": "result"
            },
            "calling": [
                "FUN_08000214"
            ],
            "called": [
                "FUN_080026b0",
                "FUN_08002fa0",
                "FUN_080036ac",
                "FUN_08002fc2",
                "FUN_0800738a",
                "FUN_080088e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000488": {
            "entrypoint": "0x08000488",
            "current_name": "update_data_08000488",
            "code": "\nvoid updateData_08000488(uint index,int flag)\n\n{\n  undefined4 result;\n  \n  if ((int)index < 0xe) {\n    if (flag == 0) {\n      DAT_20000114 = DAT_20000114 & ~(1 << (index & 0xff));\n      return;\n    }\n    DAT_20000114 = 1 << (index & 0xff) | DAT_20000114;\n    if (DAT_20000171 == '\\0') {\n      result = FUN_08008880();\n      FUN_08002ef2(&DAT_200003d4,index,result);\n      return;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000488": "update_data_08000488",
                "param_1": "index",
                "param_2": "flag",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08008880",
                "FUN_08002ef2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080004d4": {
            "entrypoint": "0x080004d4",
            "current_name": "iterate_and_call_function_080004d4",
            "code": "\nvoid iterateAndCallFunction_080004d4(int status,int code)\n\n{\n  int loopCounter;\n  undefined *dataPointer;\n  \n  if (status != 1) {\n    return;\n  }\n  if (code == 0xffff) {\n    dataPointer = &DAT_2000022c;\n    for (loopCounter = 0xb; -1 < loopCounter; loopCounter = loopCounter + -1) {\n      FUN_08002580(dataPointer);\n      dataPointer = dataPointer + 3;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080004d4": "iterate_and_call_function_080004d4",
                "param_1": "status",
                "param_2": "code",
                "iVar1": "loopCounter",
                "puVar2": "dataPointer"
            },
            "calling": [],
            "called": [
                "FUN_08002580"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000500": {
            "entrypoint": "0x08000500",
            "current_name": "attach_servo_08000500",
            "code": "\nvoid attachServo_08000500(int servoIndex,int param2Value,int param3Value,undefined4 unusedParameter)\n\n{\n  if (0xb < DAT_200001ed) {\n    FUN_08002f14(&DAT_200003d4,\"Max servos attached\",param3Value,unusedParameter,unusedParameter);\n    return;\n  }\n  if (DAT_2000011c == 0) {\n    (&DAT_200001f0)[servoIndex] = DAT_200001ed;\n    DAT_200001ed = DAT_200001ed + 1;\n  }\n  else {\n    (&DAT_200001f0)[servoIndex] = (&DAT_2000011f)[DAT_2000011c];\n    DAT_2000011c = DAT_2000011c - 1;\n  }\n  if ((0 < param2Value) && (0 < param3Value)) {\n    FUN_080025ac(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[servoIndex] * 3,servoIndex,param2Value,param3Value);\n    return;\n  }\n  FUN_08002634(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[servoIndex] * 3,servoIndex);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000500": "attach_servo_08000500",
                "param_1": "servoIndex",
                "param_2": "param2Value",
                "param_3": "param3Value",
                "param_4": "unusedParameter"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08002634",
                "FUN_08002f14",
                "FUN_080025ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000588": {
            "entrypoint": "0x08000588",
            "current_name": "update_array_element_08000588",
            "code": "\nvoid updateArrayElement_08000588(int index)\n\n{\n  FUN_08002644(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[index] * 3);\n  if (((&DAT_200001f0)[index] == DAT_200001ed) && (DAT_200001ed != '\\0')) {\n    DAT_200001ed = DAT_200001ed + -1;\n  }\n  else if (DAT_200001ed != '\\0') {\n    DAT_2000011c = DAT_2000011c + 1;\n    (&DAT_2000011f)[DAT_2000011c] = (&DAT_200001f0)[index];\n  }\n  (&DAT_200001f0)[index] = 0xff;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000588": "update_array_element_08000588",
                "param_1": "index"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08002644"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080005e0": {
            "entrypoint": "0x080005e0",
            "current_name": "initialize_data_080005e0",
            "code": "\nvoid initializeData_080005e0(void)\n\n{\n  DAT_20000170 = 0;\n  DAT_20000004 = 0xff;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080005e0": "initialize_data_080005e0"
            },
            "calling": [
                "FUN_08000aec",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080005f8": {
            "entrypoint": "0x080005f8",
            "current_name": "pin_mode_control_080005f8",
            "code": "\nvoid pinModeControl_080005f8(uint pinNum,int mode)\n\n{\n  int result;\n  char specialCase;\n  bool isAllowed;\n  uint shiftedNum;\n  \n  result = FUN_08002fa0(&DAT_200003d4,pinNum);\n  if (result != 0x7f) {\n    result = FUN_08002fa0(&DAT_200003d4,pinNum);\n    if (result == 6) {\n      if (DAT_20000170 == '\\0') {\n        specialCase = '\\0';\n      }\n      else {\n        specialCase = DAT_20000170;\n        if (mode == 6) {\n          specialCase = '\\0';\n        }\n      }\n    }\n    else {\n      specialCase = '\\0';\n    }\n    if (specialCase != '\\0') {\n      FUN_080005e0();\n    }\n    if (pinNum < 0x3c) {\n      if ((&DAT_0800a908)[pinNum] == -1) {\n        isAllowed = false;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          isAllowed = false;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNum]);\n          if (result == 1) {\n            isAllowed = false;\n          }\n          else if (mode == 4) {\n            isAllowed = false;\n          }\n          else {\n            isAllowed = true;\n          }\n        }\n      }\n    }\n    else {\n      isAllowed = false;\n    }\n    if (isAllowed) {\n      if ((byte)(&DAT_200001f0)[pinNum] < 0xc) {\n        result = FUN_080026f8(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[pinNum] * 3);\n      }\n      else {\n        result = 0;\n      }\n      if (result != 0) {\n        FUN_08000588(pinNum);\n      }\n    }\n    shiftedNum = pinNum - 0x2e & 0xff;\n    if (shiftedNum < 0xe) {\n      if (pinNum < 0x3c) {\n        result = (int)(char)(&DAT_0800a908)[pinNum];\n      }\n      else {\n        result = -1;\n      }\n      result = FUN_080036ac(result);\n      if (result == 0) {\n        isAllowed = false;\n      }\n      else {\n        if (pinNum < 0x3c) {\n          result = (int)(char)(&DAT_0800a908)[pinNum];\n        }\n        else {\n          result = -1;\n        }\n        result = FUN_080036ac(result);\n        if (result == 1) {\n          isAllowed = false;\n        }\n        else {\n          isAllowed = true;\n        }\n      }\n    }\n    else {\n      isAllowed = false;\n    }\n    if (isAllowed) {\n      FUN_08000488(shiftedNum,mode == 2);\n    }\n    if (pinNum < 0x3c) {\n      if ((&DAT_0800a908)[pinNum] == -1) {\n        isAllowed = false;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          isAllowed = false;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNum]);\n          if (result == 1) {\n            isAllowed = false;\n          }\n          else {\n            isAllowed = true;\n          }\n        }\n      }\n    }\n    else {\n      isAllowed = false;\n    }\n    if (isAllowed) {\n      if ((mode == 0) || (mode == 0xb)) {\n        (&DAT_20000174)[pinNum >> 3] = (&DAT_20000174)[pinNum >> 3] | (byte)(1 << (pinNum & 7));\n      }\n      else {\n        (&DAT_20000174)[pinNum >> 3] = (&DAT_20000174)[pinNum >> 3] & ~(byte)(1 << (pinNum & 7));\n      }\n    }\n    FUN_08002fc2(&DAT_200003d4,pinNum,0);\n    switch(mode) {\n    case 0:\n      if (pinNum < 0x3c) {\n        if ((&DAT_0800a908)[pinNum] == -1) {\n          isAllowed = false;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            isAllowed = false;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNum]);\n            if (result == 1) {\n              isAllowed = false;\n            }\n            else {\n              isAllowed = true;\n            }\n          }\n        }\n      }\n      else {\n        isAllowed = false;\n      }\n      if (isAllowed) {\n        FUN_08008990(pinNum,0);\n        FUN_08002fa8(&DAT_200003d4,pinNum,0);\n        return;\n      }\n      break;\n    case 1:\n      if (pinNum < 0x3c) {\n        if ((&DAT_0800a908)[pinNum] == -1) {\n          isAllowed = false;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            isAllowed = false;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNum]);\n            if (result == 1) {\n              isAllowed = false;\n            }\n            else {\n              isAllowed = true;\n            }\n          }\n        }\n      }\n      else {\n        isAllowed = false;\n      }\n      if (isAllowed) {\n        result = FUN_08002fa0(&DAT_200003d4,pinNum);\n        if (result == 3) {\n          FUN_08008a24(pinNum,0);\n        }\n        FUN_08008990(pinNum,1);\n        FUN_08002fa8(&DAT_200003d4,pinNum,1);\n        return;\n      }\n      break;\n    case 2:\n      if (shiftedNum < 0xe) {\n        if (pinNum < 0x3c) {\n          result = (int)(char)(&DAT_0800a908)[pinNum];\n        }\n        else {\n          result = -1;\n        }\n        result = FUN_080036ac(result);\n        if (result == 0) {\n          isAllowed = false;\n        }\n        else {\n          if (pinNum < 0x3c) {\n            result = (int)(char)(&DAT_0800a908)[pinNum];\n          }\n          else {\n            result = -1;\n          }\n          result = FUN_080036ac(result);\n          if (result == 1) {\n            isAllowed = false;\n          }\n          else {\n            isAllowed = true;\n          }\n        }\n      }\n      else {\n        isAllowed = false;\n      }\n      if (isAllowed) {\n        if (pinNum < 0x3c) {\n          if ((&DAT_0800a908)[pinNum] == -1) {\n            isAllowed = false;\n          }\n          else {\n            result = FUN_080036ac();\n            if (result == 0) {\n              isAllowed = false;\n            }\n            else {\n              result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNum]);\n              if (result == 1) {\n                isAllowed = false;\n              }\n            }\n          }\n        }\n        else {\n          isAllowed = false;\n        }\n        if (isAllowed) {\n          FUN_08008990(pinNum,0);\n        }\n        FUN_08002fa8(&DAT_200003d4,pinNum,2);\n        return;\n      }\n      break;\n    case 3:\n      if (pinNum < 0x3c) {\n        if ((&DAT_0800a908)[pinNum] == -1) {\n          result = 0;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            result = 0;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNum]);\n            if (result == 1) {\n              result = 0;\n            }\n            else {\n              result = FUN_0800738a((int)(char)(&DAT_0800a908)[pinNum],&DAT_0800a6cc);\n            }\n          }\n        }\n      }\n      else {\n        result = 0;\n      }\n      if (result != 0) {\n        FUN_08008990(pinNum,1);\n        FUN_080088e0(pinNum,0);\n        FUN_08002fa8(&DAT_200003d4,pinNum,3);\n        return;\n      }\n      break;\n    case 4:\n      if (pinNum < 0x3c) {\n        if ((&DAT_0800a908)[pinNum] == -1) {\n          isAllowed = false;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            isAllowed = false;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNum]);\n            if (result == 1) {\n              isAllowed = false;\n            }\n            else {\n              isAllowed = true;\n            }\n          }\n        }\n      }\n      else {\n        isAllowed = false;\n      }\n      if (isAllowed) {\n        FUN_08002fa8(&DAT_200003d4,pinNum,4);\n        if (((byte)(&DAT_200001f0)[pinNum] != 0xff) &&\n           (result = FUN_080026f8(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[pinNum] * 3),\n           result != 0)) {\n          isAllowed = false;\n        }\n        if (isAllowed) {\n          FUN_08000500(pinNum,0xffffffff);\n          return;\n        }\n      }\n      break;\n    default:\n      FUN_08002f14(&DAT_200003d4,\"Unknown pin mode\");\n      break;\n    case 6:\n      if (pinNum < 0x3c) {\n        if ((&DAT_0800a908)[pinNum] == -1) {\n          result = 0;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            result = 0;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNum]);\n            if (result == 1) {\n              result = 0;\n            }\n            else {\n              result = FUN_0800738a((int)(char)(&DAT_0800a908)[pinNum],&DAT_0800a69c);\n              if (result == 0) {\n                result = FUN_0800738a((int)(char)(&DAT_0800a908)[pinNum],&DAT_0800a66c);\n              }\n            }\n          }\n        }\n      }\n      else {\n        result = 0;\n      }\n      if (result != 0) {\n        FUN_08002fa8(&DAT_200003d4,pinNum,6);\n        return;\n      }\n      break;\n    case 10:\n      break;\n    case 0xb:\n      if (pinNum < 0x3c) {\n        if ((&DAT_0800a908)[pinNum] == -1) {\n          isAllowed = false;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            isAllowed = false;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinNum]);\n            if (result == 1) {\n              isAllowed = false;\n            }\n            else {\n              isAllowed = true;\n            }\n          }\n        }\n      }\n      else {\n        isAllowed = false;\n      }\n      if (isAllowed) {\n        FUN_08008990(pinNum,2);\n        FUN_08002fa8(&DAT_200003d4,pinNum,0xb);\n        FUN_08002fc2(&DAT_200003d4,pinNum,1);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080005f8": "pin_mode_control_080005f8",
                "param_1": "pinNum",
                "param_2": "mode",
                "iVar1": "result",
                "cVar2": "specialCase",
                "bVar3": "isAllowed",
                "uVar4": "shiftedNum"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_08000aec",
                "FUN_08000a64"
            ],
            "called": [
                "FUN_08002f14",
                "FUN_08008990",
                "FUN_080036ac",
                "FUN_080005e0",
                "FUN_08002fc2",
                "FUN_0800738a",
                "FUN_080088e0",
                "FUN_08000488",
                "FUN_08000588",
                "FUN_08002fa0",
                "FUN_08008a24",
                "FUN_08002fa8",
                "FUN_08000500",
                "FUN_080026f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a64": {
            "entrypoint": "0x08000a64",
            "current_name": "process_data_08000a64",
            "code": "\nvoid processData_08000a64(void)\n\n{\n  int result;\n  uint index;\n  \n  for (index = 0; index < 0x3c; index = index + 1 & 0xff) {\n    if (index < 0x3c) {\n      if ((&DAT_0800a908)[index] == -1) {\n        result = 0;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          result = 0;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[index]);\n          if (result == 1) {\n            result = 0;\n          }\n          else {\n            result = FUN_0800738a((int)(char)(&DAT_0800a908)[index],&DAT_0800a69c);\n            if (result == 0) {\n              result = FUN_0800738a((int)(char)(&DAT_0800a908)[index],&DAT_0800a66c);\n            }\n          }\n        }\n      }\n    }\n    else {\n      result = 0;\n    }\n    if (result != 0) {\n      FUN_080005f8(index,6);\n    }\n  }\n  DAT_20000170 = 1;\n  FUN_08002a26(&DAT_20000314);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000a64": "process_data_08000a64",
                "iVar1": "result",
                "uVar2": "index"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [
                "FUN_080036ac",
                "FUN_08002a26",
                "FUN_0800738a",
                "FUN_080005f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000aec": {
            "entrypoint": "0x08000aec",
            "current_name": "initialize_data_08000aec",
            "code": "\nvoid initializeData_08000aec(void)\n\n{\n  bool bVar1;\n  int iVar2;\n  uint uVar3;\n  \n  DAT_20000171 = 1;\n  if (DAT_20000170 != '\\0') {\n    FUN_080005e0();\n  }\n  for (uVar3 = 0; uVar3 < 5; uVar3 = uVar3 + 1 & 0xff) {\n    (&DAT_200001e8)[uVar3] = 0;\n    (&DAT_20000174)[uVar3] = 0;\n    (&DAT_20000180)[uVar3] = 0;\n  }\n  for (uVar3 = 0; uVar3 < 0x3c; uVar3 = uVar3 + 1 & 0xff) {\n    if ((uVar3 - 0x2e & 0xff) < 0xe) {\n      if (uVar3 < 0x3c) {\n        iVar2 = (int)(char)(&DAT_0800a908)[uVar3];\n      }\n      else {\n        iVar2 = -1;\n      }\n      iVar2 = FUN_080036ac(iVar2);\n      if (iVar2 == 0) {\n        bVar1 = false;\n      }\n      else {\n        if (uVar3 < 0x3c) {\n          iVar2 = (int)(char)(&DAT_0800a908)[uVar3];\n        }\n        else {\n          iVar2 = -1;\n        }\n        iVar2 = FUN_080036ac(iVar2);\n        if (iVar2 == 1) {\n          bVar1 = false;\n        }\n        else {\n          bVar1 = true;\n        }\n      }\n    }\n    else {\n      bVar1 = false;\n    }\n    if (bVar1) {\n      FUN_080005f8(uVar3,2);\n    }\n    else {\n      if ((((uVar3 < 0x3c) && ((&DAT_0800a908)[uVar3] != -1)) &&\n          (iVar2 = FUN_080036ac(), iVar2 != 0)) &&\n         (iVar2 = FUN_080036ac((int)(char)(&DAT_0800a908)[uVar3]), iVar2 != 1)) {\n        bVar1 = true;\n      }\n      if (bVar1) {\n        FUN_080005f8(uVar3,1);\n      }\n    }\n    (&DAT_200001f0)[uVar3] = 0xff;\n  }\n  DAT_20000114 = 0;\n  DAT_2000011c = 0;\n  DAT_200001ed = 0;\n  DAT_20000171 = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000aec": "initialize_data_08000aec"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_080036ac",
                "FUN_080005e0",
                "FUN_080005f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000be8": {
            "entrypoint": "0x08000be8",
            "current_name": "process_data_08000be8",
            "code": "\nvoid processData_08000be8(int index,uint mask,int check,undefined4 param)\n\n{\n  undefined1 *dataPtr1;\n  undefined1 *dataPtr2;\n  \n  dataPtr1 = &DAT_20000174;\n  dataPtr2 = (undefined1 *)((byte)(&DAT_20000174)[index] & mask);\n  if ((check != 0) ||\n     (dataPtr1 = (undefined1 *)(uint)(byte)(&DAT_20000180)[index], dataPtr2 != dataPtr1)) {\n    FUN_08002efe(&DAT_200003d4,index,dataPtr2,dataPtr1,param);\n    (&DAT_20000180)[index] = (char)dataPtr2;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000be8": "process_data_08000be8",
                "param_1": "index",
                "param_2": "mask",
                "param_3": "check",
                "param_4": "param",
                "puVar1": "dataPtr1",
                "puVar2": "dataPtr2"
            },
            "calling": [
                "FUN_08000ef8"
            ],
            "called": [
                "FUN_08002efe"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000ef8": {
            "entrypoint": "0x08000ef8",
            "current_name": "configure_feature_set_08000ef8",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08001ade) */\n/* WARNING: Removing unreachable block (ram,0x08001a4a) */\n/* WARNING: Removing unreachable block (ram,0x080019b6) */\n/* WARNING: Removing unreachable block (ram,0x08001912) */\n/* WARNING: Removing unreachable block (ram,0x08001866) */\n/* WARNING: Removing unreachable block (ram,0x080017d2) */\n/* WARNING: Removing unreachable block (ram,0x0800173e) */\n/* WARNING: Removing unreachable block (ram,0x0800169a) */\n/* WARNING: Removing unreachable block (ram,0x080015ee) */\n/* WARNING: Removing unreachable block (ram,0x0800155a) */\n/* WARNING: Removing unreachable block (ram,0x08001490) */\n/* WARNING: Removing unreachable block (ram,0x080014a2) */\n/* WARNING: Removing unreachable block (ram,0x080014e4) */\n/* WARNING: Removing unreachable block (ram,0x080014b0) */\n/* WARNING: Removing unreachable block (ram,0x080014ba) */\n/* WARNING: Removing unreachable block (ram,0x080014e8) */\n/* WARNING: Removing unreachable block (ram,0x080014c2) */\n/* WARNING: Removing unreachable block (ram,0x080014b6) */\n/* WARNING: Removing unreachable block (ram,0x08001496) */\n/* WARNING: Removing unreachable block (ram,0x08001430) */\n/* WARNING: Removing unreachable block (ram,0x08001376) */\n/* WARNING: Removing unreachable block (ram,0x080012e2) */\n/* WARNING: Removing unreachable block (ram,0x0800124e) */\n/* WARNING: Removing unreachable block (ram,0x080011b8) */\n/* WARNING: Removing unreachable block (ram,0x08001100) */\n/* WARNING: Removing unreachable block (ram,0x0800106c) */\n/* WARNING: Removing unreachable block (ram,0x08000fd8) */\n/* WARNING: Removing unreachable block (ram,0x08000f42) */\n/* WARNING: Removing unreachable block (ram,0x08000f8e) */\n/* WARNING: Removing unreachable block (ram,0x08001022) */\n/* WARNING: Removing unreachable block (ram,0x080010b6) */\n/* WARNING: Removing unreachable block (ram,0x0800114a) */\n/* WARNING: Removing unreachable block (ram,0x08001204) */\n/* WARNING: Removing unreachable block (ram,0x08001298) */\n/* WARNING: Removing unreachable block (ram,0x0800132c) */\n/* WARNING: Removing unreachable block (ram,0x080013c0) */\n/* WARNING: Removing unreachable block (ram,0x0800147c) */\n/* WARNING: Removing unreachable block (ram,0x08001510) */\n/* WARNING: Removing unreachable block (ram,0x080015a4) */\n/* WARNING: Removing unreachable block (ram,0x08001638) */\n/* WARNING: Removing unreachable block (ram,0x080016f4) */\n/* WARNING: Removing unreachable block (ram,0x08001788) */\n/* WARNING: Removing unreachable block (ram,0x0800181c) */\n/* WARNING: Removing unreachable block (ram,0x080018b0) */\n/* WARNING: Removing unreachable block (ram,0x0800196c) */\n/* WARNING: Removing unreachable block (ram,0x08001a00) */\n/* WARNING: Removing unreachable block (ram,0x08001a94) */\n/* WARNING: Removing unreachable block (ram,0x08001b28) */\n/* WARNING: Removing unreachable block (ram,0x080014ca) */\n\nvoid configureFeatureSet_08000ef8(void)\n\n{\n  byte featureSetByte;\n  int result;\n  bool hasFeature;\n  byte updatedFeatureSet;\n  \n  featureSetByte = DAT_20000174;\n  if (DAT_200001e8 != '\\0') {\n    result = FUN_080036ac();\n    if (result == 0) {\n      updatedFeatureSet = 0;\n    }\n    else {\n      result = FUN_080036ac(3);\n      if (result == 1) {\n        updatedFeatureSet = 0;\n      }\n      else if ((featureSetByte & 1) == 0) {\n        updatedFeatureSet = 0;\n      }\n      else {\n        result = FUN_08008a6c(0);\n        if (result == 0) {\n          updatedFeatureSet = 0;\n        }\n        else {\n          updatedFeatureSet = 1;\n        }\n      }\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasFeature = false;\n    }\n    else {\n      result = FUN_080036ac(2);\n      if (result == 1) {\n        hasFeature = false;\n      }\n      else if ((featureSetByte & 2) == 0) {\n        hasFeature = false;\n      }\n      else {\n        result = FUN_08008a6c(1);\n        if (result == 0) {\n          hasFeature = false;\n        }\n        else {\n          hasFeature = true;\n        }\n      }\n    }\n    if (hasFeature) {\n      updatedFeatureSet = updatedFeatureSet | 2;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasFeature = false;\n    }\n    else {\n      result = FUN_080036ac(10);\n      if (result == 1) {\n        hasFeature = false;\n      }\n      else if ((featureSetByte & 4) == 0) {\n        hasFeature = false;\n      }\n      else {\n        result = FUN_08008a6c(2);\n        if (result == 0) {\n          hasFeature = false;\n        }\n        else {\n          hasFeature = true;\n        }\n      }\n    }\n    if (hasFeature) {\n      updatedFeatureSet = updatedFeatureSet | 4;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasFeature = false;\n    }\n    else {\n      result = FUN_080036ac(0x13);\n      if (result == 1) {\n        hasFeature = false;\n      }\n      else if ((featureSetByte & 8) == 0) {\n        hasFeature = false;\n      }\n      else {\n        result = FUN_08008a6c(3);\n        if (result == 0) {\n          hasFeature = false;\n        }\n        else {\n          hasFeature = true;\n        }\n      }\n    }\n    if (hasFeature) {\n      updatedFeatureSet = updatedFeatureSet | 8;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasFeature = false;\n    }\n    else {\n      result = FUN_080036ac(0x15);\n      if (result == 1) {\n        hasFeature = false;\n      }\n      else if ((featureSetByte & 0x10) == 0) {\n        hasFeature = false;\n      }\n      else {\n        result = FUN_08008a6c(4);\n        if (result == 0) {\n          hasFeature = false;\n        }\n        else {\n          hasFeature = true;\n        }\n      }\n    }\n    if (hasFeature) {\n      updatedFeatureSet = updatedFeatureSet | 0x10;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasFeature = false;\n    }\n    else {\n      result = FUN_080036ac(0x14);\n      if (result == 1) {\n        hasFeature = false;\n      }\n      else if ((featureSetByte & 0x20) == 0) {\n        hasFeature = false;\n      }\n      else {\n        result = FUN_08008a6c(5);\n        if (result == 0) {\n          hasFeature = false;\n        }\n        else {\n          hasFeature = true;\n        }\n      }\n    }\n    if (hasFeature) {\n      updatedFeatureSet = updatedFeatureSet | 0x20;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasFeature = false;\n    }\n    else {\n      result = FUN_080036ac(0x1a);\n      if (result == 1) {\n        hasFeature = false;\n      }\n      else if ((featureSetByte & 0x40) == 0) {\n        hasFeature = false;\n      }\n      else {\n        result = FUN_08008a6c(6);\n        if (result == 0) {\n          hasFeature = false;\n        }\n        else {\n          hasFeature = true;\n        }\n      }\n    }\n    if (hasFeature) {\n      updatedFeatureSet = updatedFeatureSet | 0x40;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasFeature = false;\n    }\n    else {\n      result = FUN_080036ac(8);\n      if (result == 1) {\n        hasFeature = false;\n      }\n      else if ((featureSetByte & 0x80) == 0) {\n        hasFeature = false;\n      }\n      else {\n        result = FUN_08008a6c(7);\n        if (result == 0) {\n          hasFeature = false;\n        }\n        else {\n          hasFeature = true;\n        }\n      }\n    }\n    if (hasFeature) {\n      updatedFeatureSet = updatedFeatureSet | 0x80;\n    }\n    FUN_08000be8(0,updatedFeatureSet);\n  }\n  featureSetByte = DAT_20000175;\n  if (DAT_200001e9 != '\\0') {\n    result = FUN_080036ac();\n    if (result == 0) {\n      updatedFeatureSet = 0;\n    }\n    else {\n      result = FUN_080036ac(9);\n      if (result == 1) {\n        updatedFeatureSet = 0;\n      }\n      else if ((featureSetByte & 1) == 0) {\n        updatedFeatureSet = 0;\n      }\n      else {\n        result = FUN_08008a6c(8);\n        if (result == 0) {\n          updatedFeatureSet = 0;\n        }\n        else {\n          updatedFeatureSet = 1;\n        }\n      }\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasFeature = false;\n    }\n    else {\n      result = FUN_080036ac(0x27);\n      if (result == 1) {\n        hasFeature = false;\n      }\n      else if ((featureSetByte & 2) == 0) {\n        hasFeature = false;\n      }\n      else {\n        result = FUN_08008a6c(9);\n        if (result == 0) {\n          hasFeature = false;\n        }\n        else {\n          hasFeature = true;\n        }\n      }\n    }\n    if (hasFeature) {\n      updatedFeatureSet = updatedFeatureSet | 2;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasFeature = false;\n    }\n    else {\n      result = FUN_080036ac(0x16);\n      if (result == 1) {\n        hasFeature = false;\n      }\n      else if ((featureSetByte & 4) == 0) {\n        hasFeature = false;\n      }\n      else {\n        result = FUN_08008a6c(10);\n        if (result == 0) {\n          hasFeature = false;\n        }\n        else {\n          hasFeature = true;\n        }\n      }\n    }\n    if (hasFeature) {\n      updatedFeatureSet = updatedFeatureSet | 4;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasFeature = false;\n    }\n    else {\n      result = FUN_080036ac(7);\n      if (result == 1) {\n        hasFeature = false;\n      }\n      else if ((featureSetByte & 8) == 0) {\n        hasFeature = false;\n      }\n      else {\n        result = FUN_08008a6c(0xb);\n        if (result == 0) {\n          hasFeature = false;\n        }\n        else {\n          hasFeature = true;\n        }\n      }\n    }\n    if (hasFeature) {\n      updatedFeatureSet = updatedFeatureSet | 8;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasFeature = false;\n    }\n    else {\n      result = FUN_080036ac(6);\n      if (result == 1) {\n        hasFeature = false;\n      }\n      else if ((featureSetByte & 0x10) == 0) {\n        hasFeature = false;\n      }\n      else {\n        result = FUN_08008a6c(0xc);\n        if (result == 0) {\n          hasFeature = false;\n        }\n        else {\n          hasFeature = true;\n        }\n      }\n    }\n    if (hasFeature) {\n      updatedFeatureSet = updatedFeatureSet | 0x10;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasFeature = false;\n    }\n    else {\n      result = FUN_080036ac(5);\n      if (result == 1) {\n        hasFeature = false;\n      }\n      else if ((featureSetByte & 0x20) == 0) {\n        hasFeature = false;\n      }\n      else {\n        result = FUN_08008a6c(0xd);\n        if (result == 0) {\n          hasFeature = false;\n        }\n        else {\n          hasFeature = true;\n        }\n      }\n    }\n    if (hasFeature) {\n      updatedFeatureSet = updatedFeatureSet | 0x20;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasFeature = false;\n    }\n    else {\n      result = FUN_080036ac(0x19);\n      if (result == 1) {\n        hasFeature = false;\n      }\n      else if ((featureSetByte & 0x40) == 0) {\n        hasFeature = false;\n      }\n      else {\n        result = FUN_08008a6c(0xe);\n        if (result == 0) {\n          hasFeature = false;\n        }\n        else {\n          hasFeature = true;\n        }\n      }\n    }\n    if (hasFeature) {\n      updatedFeatureSet = updatedFeatureSet | 0x40;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasFeature = false;\n    }\n    else {\n      result = FUN_080036ac(0x18);\n      if (result == 1) {\n        hasFeature = false;\n      }\n      else if ((featureSetByte & 0x80) == 0) {\n        hasFeature = false;\n      }\n      else {\n        result = FUN_08008a6c(0xf);\n        if (result == 0) {\n          hasFeature = false;\n        }\n        else {\n          hasFeature = true;\n        }\n      }\n    }\n    if (hasFeature) {\n      updatedFeatureSet = updatedFeatureSet | 0x80;\n    }\n    FUN_08000be8(1,updatedFeatureSet,0);\n  }\n  featureSetByte = DAT_20000176;\n  if (DAT_200001ea != '\\0') {\n    result = FUN_080036ac();\n    if (result == 0) {\n      updatedFeatureSet = 0;\n    }\n    else {\n      result = FUN_080036ac(0x2a);\n      if (result == 1) {\n        updatedFeatureSet = 0;\n      }\n      else if ((featureSetByte & 1) == 0) {\n        updatedFeatureSet = 0;\n      }\n      else {\n        result = FUN_08008a6c(0x10);\n        if (result == 0) {\n          updatedFeatureSet = 0;\n        }\n        else {\n          updatedFeatureSet = 1;\n        }\n      }\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasFeature = false;\n    }\n    else {\n      result = FUN_080036ac(0x2c);\n      if (result == 1) {\n        hasFeature = false;\n      }\n      else if ((featureSetByte & 2) == 0) {\n        hasFeature = false;\n      }\n      else {\n        result = FUN_08008a6c(0x11);\n        if (result == 0) {\n          hasFeature = false;\n        }\n        else {\n          hasFeature = true;\n        }\n      }\n    }\n    if (hasFeature) {\n      updatedFeatureSet = updatedFeatureSet | 2;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasFeature = false;\n    }\n    else {\n      result = FUN_080036ac(0xd);\n      if (result == 1) {\n        hasFeature = false;\n      }\n      else if ((featureSetByte & 8) == 0) {\n        hasFeature = false;\n      }\n      else {\n        result = FUN_08008a6c(0x13);\n        if (result == 0) {\n          hasFeature = false;\n        }\n        else {\n          hasFeature = true;\n        }\n      }\n    }\n    if (hasFeature) {\n      updatedFeatureSet = updatedFeatureSet | 8;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasFeature = false;\n    }\n    else {\n      result = FUN_080036ac(0xe);\n      if (result == 1) {\n        hasFeature = false;\n      }\n      else if ((featureSetByte & 0x10) == 0) {\n        hasFeature = false;\n      }\n      else {\n        result = FUN_08008a6c(0x14);\n        if (result == 0) {\n          hasFeature = false;\n        }\n        else {\n          hasFeature = true;\n        }\n      }\n    }\n    if (hasFeature) {\n      updatedFeatureSet = updatedFeatureSet | 0x10;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasFeature = false;\n    }\n    else {\n      result = FUN_080036ac(0xf);\n      if (result == 1) {\n        hasFeature = false;\n      }\n      else if ((featureSetByte & 0x20) == 0) {\n        hasFeature = false;\n      }\n      else {\n        result = FUN_08008a6c(0x15);\n        if (result == 0) {\n          hasFeature = false;\n        }\n        else {\n          hasFeature = true;\n        }\n      }\n    }\n    if (hasFeature) {\n      updatedFeatureSet = updatedFeatureSet | 0x20;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasFeature = false;\n    }\n    else {\n      result = FUN_080036ac(0x17);\n      if (result == 1) {\n        hasFeature = false;\n      }\n      else if ((featureSetByte & 0x40) == 0) {\n        hasFeature = false;\n      }\n      else {\n        result = FUN_08008a6c(0x16);\n        if (result == 0) {\n          hasFeature = false;\n        }\n        else {\n          hasFeature = true;\n        }\n      }\n    }\n    if (hasFeature) {\n      updatedFeatureSet = updatedFeatureSet | 0x40;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasFeature = false;\n    }\n    else {\n      result = FUN_080036ac(0x2d);\n      if (result == 1) {\n        hasFeature = false;\n      }\n      else if ((featureSetByte & 0x80) == 0) {\n        hasFeature = false;\n      }\n      else {\n        result = FUN_08008a6c(0x17);\n        if (result == 0) {\n          hasFeature = false;\n        }\n        else {\n          hasFeature = true;\n        }\n      }\n    }\n    if (hasFeature) {\n      updatedFeatureSet = updatedFeatureSet | 0x80;\n    }\n    FUN_08000be8(2,updatedFeatureSet,0);\n  }\n  featureSetByte = DAT_20000177;\n  if (DAT_200001eb != '\\0') {\n    result = FUN_080036ac();\n    if (result == 0) {\n      updatedFeatureSet = 0;\n    }\n    else {\n      result = FUN_080036ac(0x2e);\n      if (result == 1) {\n        updatedFeatureSet = 0;\n      }\n      else if ((featureSetByte & 1) == 0) {\n        updatedFeatureSet = 0;\n      }\n      else {\n        result = FUN_08008a6c(0x18);\n        if (result == 0) {\n          updatedFeatureSet = 0;\n        }\n        else {\n          updatedFeatureSet = 1;\n        }\n      }\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasFeature = false;\n    }\n    else {\n      result = FUN_080036ac(0x2f);\n      if (result == 1) {\n        hasFeature = false;\n      }\n      else if ((featureSetByte & 2) == 0) {\n        hasFeature = false;\n      }\n      else {\n        result = FUN_08008a6c(0x19);\n        if (result == 0) {\n          hasFeature = false;\n        }\n        else {\n          hasFeature = true;\n        }\n      }\n    }\n    if (hasFeature) {\n      updatedFeatureSet = updatedFeatureSet | 2;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasFeature = false;\n    }\n    else {\n      result = FUN_080036ac(0x30);\n      if (result == 1) {\n        hasFeature = false;\n      }\n      else if ((featureSetByte & 4) == 0) {\n        hasFeature = false;\n      }\n      else {\n        result = FUN_08008a6c(0x1a);\n        if (result == 0) {\n          hasFeature = false;\n        }\n        else {\n          hasFeature = true;\n        }\n      }\n    }\n    if (hasFeature) {\n      updatedFeatureSet = updatedFeatureSet | 4;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasFeature = false;\n    }\n    else {\n      result = FUN_080036ac(0x31);\n      if (result == 1) {\n        hasFeature = false;\n      }\n      else if ((featureSetByte & 8) == 0) {\n        hasFeature = false;\n      }\n      else {\n        result = FUN_08008a6c(0x1b);\n        if (result == 0) {\n          hasFeature = false;\n        }\n        else {\n          hasFeature = true;\n        }\n      }\n    }\n    if (hasFeature) {\n      updatedFeatureSet = updatedFeatureSet | 8;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasFeature = false;\n    }\n    else {\n      result = FUN_080036ac(0x22);\n      if (result == 1) {\n        hasFeature = false;\n      }\n      else if ((featureSetByte & 0x10) == 0) {\n        hasFeature = false;\n      }\n      else {\n        result = FUN_08008a6c(0x1c);\n        if (result == 0) {\n          hasFeature = false;\n        }\n        else {\n          hasFeature = true;\n        }\n      }\n    }\n    if (hasFeature) {\n      updatedFeatureSet = updatedFeatureSet | 0x10;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasFeature = false;\n    }\n    else {\n      result = FUN_080036ac(0x23);\n      if (result == 1) {\n        hasFeature = false;\n      }\n      else if ((featureSetByte & 0x20) == 0) {\n        hasFeature = false;\n      }\n      else {\n        result = FUN_08008a6c(0x1d);\n        if (result == 0) {\n          hasFeature = false;\n        }\n        else {\n          hasFeature = true;\n        }\n      }\n    }\n    if (hasFeature) {\n      updatedFeatureSet = updatedFeatureSet | 0x20;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasFeature = false;\n    }\n    else {\n      result = FUN_080036ac(0x2b);\n      if (result == 1) {\n        hasFeature = false;\n      }\n      else if ((featureSetByte & 0x40) == 0) {\n        hasFeature = false;\n      }\n      else {\n        result = FUN_08008a6c(0x1e);\n        if (result == 0) {\n          hasFeature = false;\n        }\n        else {\n          hasFeature = true;\n        }\n      }\n    }\n    if (hasFeature) {\n      updatedFeatureSet = updatedFeatureSet | 0x40;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasFeature = false;\n    }\n    else {\n      result = FUN_080036ac(0x32);\n      if (result == 1) {\n        hasFeature = false;\n      }\n      else if ((featureSetByte & 0x80) == 0) {\n        hasFeature = false;\n      }\n      else {\n        result = FUN_08008a6c(0x1f);\n        if (result == 0) {\n          hasFeature = false;\n        }\n        else {\n          hasFeature = true;\n        }\n      }\n    }\n    if (hasFeature) {\n      updatedFeatureSet = updatedFeatureSet | 0x80;\n    }\n    FUN_08000be8(3,updatedFeatureSet,0);\n  }\n  featureSetByte = DAT_20000178;\n  if (DAT_200001ec != '\\0') {\n    result = FUN_080036ac();\n    if (result == 0) {\n      updatedFeatureSet = 0;\n    }\n    else {\n      result = FUN_080036ac(0x29);\n      if (result == 1) {\n        updatedFeatureSet = 0;\n      }\n      else if ((featureSetByte & 1) == 0) {\n        updatedFeatureSet = 0;\n      }\n      else {\n        result = FUN_08008a6c(0x20);\n        if (result == 0) {\n          updatedFeatureSet = 0;\n        }\n        else {\n          updatedFeatureSet = 1;\n        }\n      }\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasFeature = false;\n    }\n    else {\n      result = FUN_080036ac(0x28);\n      if (result == 1) {\n        hasFeature = false;\n      }\n      else if ((featureSetByte & 2) == 0) {\n        hasFeature = false;\n      }\n      else {\n        result = FUN_08008a6c(0x21);\n        if (result == 0) {\n          hasFeature = false;\n        }\n        else {\n          hasFeature = true;\n        }\n      }\n    }\n    if (hasFeature) {\n      updatedFeatureSet = updatedFeatureSet | 2;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasFeature = false;\n    }\n    else {\n      result = FUN_080036ac(0x26);\n      if (result == 1) {\n        hasFeature = false;\n      }\n      else if ((featureSetByte & 4) == 0) {\n        hasFeature = false;\n      }\n      else {\n        result = FUN_08008a6c(0x22);\n        if (result == 0) {\n          hasFeature = false;\n        }\n        else {\n          hasFeature = true;\n        }\n      }\n    }\n    if (hasFeature) {\n      updatedFeatureSet = updatedFeatureSet | 4;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasFeature = false;\n    }\n    else {\n      result = FUN_080036ac(0x25);\n      if (result == 1) {\n        hasFeature = false;\n      }\n      else if ((featureSetByte & 8) == 0) {\n        hasFeature = false;\n      }\n      else {\n        result = FUN_08008a6c(0x23);\n        if (result == 0) {\n          hasFeature = false;\n        }\n        else {\n          hasFeature = true;\n        }\n      }\n    }\n    if (hasFeature) {\n      updatedFeatureSet = updatedFeatureSet | 8;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasFeature = false;\n    }\n    else {\n      result = FUN_080036ac(0xc);\n      if (result == 1) {\n        hasFeature = false;\n      }\n      else if ((featureSetByte & 0x10) == 0) {\n        hasFeature = false;\n      }\n      else {\n        result = FUN_08008a6c(0x24);\n        if (result == 0) {\n          hasFeature = false;\n        }\n        else {\n          hasFeature = true;\n        }\n      }\n    }\n    if (hasFeature) {\n      updatedFeatureSet = updatedFeatureSet | 0x10;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasFeature = false;\n    }\n    else {\n      result = FUN_080036ac(0xb);\n      if (result == 1) {\n        hasFeature = false;\n      }\n      else if ((featureSetByte & 0x20) == 0) {\n        hasFeature = false;\n      }\n      else {\n        result = FUN_08008a6c(0x25);\n        if (result == 0) {\n          hasFeature = false;\n        }\n        else {\n          hasFeature = true;\n        }\n      }\n    }\n    if (hasFeature) {\n      updatedFeatureSet = updatedFeatureSet | 0x20;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasFeature = false;\n    }\n    else {\n      result = FUN_080036ac(0x1c);\n      if (result == 1) {\n        hasFeature = false;\n      }\n      else if ((featureSetByte & 0x40) == 0) {\n        hasFeature = false;\n      }\n      else {\n        result = FUN_08008a6c(0x26);\n        if (result == 0) {\n          hasFeature = false;\n        }\n        else {\n          hasFeature = true;\n        }\n      }\n    }\n    if (hasFeature) {\n      updatedFeatureSet = updatedFeatureSet | 0x40;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      hasFeature = false;\n    }\n    else {\n      result = FUN_080036ac(0x1b);\n      if (result == 1) {\n        hasFeature = false;\n      }\n      else if ((featureSetByte & 0x80) == 0) {\n        hasFeature = false;\n      }\n      else {\n        result = FUN_08008a6c(0x27);\n        if (result == 0) {\n          hasFeature = false;\n        }\n        else {\n          hasFeature = true;\n        }\n      }\n    }\n    if (hasFeature) {\n      updatedFeatureSet = updatedFeatureSet | 0x80;\n    }\n    FUN_08000be8(4,updatedFeatureSet,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000ef8": "configure_feature_set_08000ef8",
                "bVar1": "featureSetByte",
                "iVar2": "result",
                "bVar3": "hasFeature",
                "bVar4": "updatedFeatureSet"
            },
            "calling": [
                "FUN_080022f8"
            ],
            "called": [
                "FUN_08000be8",
                "FUN_080036ac",
                "FUN_08008a6c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001b48": {
            "entrypoint": "0x08001b48",
            "current_name": "initialize_gateway_08001b48",
            "code": "\nvoid initializeGateway_08001b48(void)\n\n{\n  FUN_08002e44(&DAT_200003d4,\"/home/bo/p2im/p2im-real_firmware_scratch/Gateway/StandardFirmata.ino\",\n               2,5);\n  FUN_08002f2c(&DAT_200003d4,0xe0,0x8000215);\n  FUN_08002f2c(&DAT_200003d4,0x90,&label1);\n  FUN_08002f2c(&DAT_200003d4,0xc0,0x8000489);\n  FUN_08002f2c(&DAT_200003d4,0xd0,&label2);\n  FUN_08002f2c(&DAT_200003d4,0xf4,0x80005f9);\n  FUN_08002f2c(&DAT_200003d4,0xf5,&label3);\n  FUN_08002f94(&DAT_200003d4,0xf0,0x8001cd1);\n  FUN_08002f84(&DAT_200003d4,0xff,0x8000aed);\n  FUN_08003048(&DAT_200003d4,0xe100);\n  FUN_08000aec();\n  FUN_0800018c(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001b48": "initialize_gateway_08001b48",
                "LAB_080002ec_1": "label1",
                "LAB_08000c18_1": "label2",
                "LAB_080001a8_1": "label3"
            },
            "calling": [
                "FUN_08008f1c"
            ],
            "called": [
                "FUN_08002f84",
                "FUN_08000aec",
                "FUN_08003048",
                "FUN_08002f94",
                "FUN_08002f2c",
                "FUN_08002e44",
                "FUN_0800018c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001bf8": {
            "entrypoint": "0x08001bf8",
            "current_name": "initialize_data_08001bf8",
            "code": "\nvoid initialize_data_08001bf8(undefined4 data_ptr_1,undefined4 data_ptr_2,undefined4 data_ptr_3,undefined4 data_ptr_4)\n\n{\n  FUN_0800288c(&DAT_20000314,data_ptr_1,data_ptr_3,data_ptr_4,data_ptr_4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001bf8": "initialize_data_08001bf8",
                "param_1": "data_ptr_1",
                "param_2": "data_ptr_2",
                "param_3": "data_ptr_3",
                "param_4": "data_ptr_4"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_08001c18"
            ],
            "called": [
                "FUN_0800288c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c08": {
            "entrypoint": "0x08001c08",
            "current_name": "extract_data_08001c08",
            "code": "\nundefined extractData_08001c08(void)\n\n{\n  undefined result;\n  \n  result = FUN_08002720(&DAT_20000314);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08001c08": "extract_data_08001c08",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08001c18"
            ],
            "called": [
                "FUN_08002720"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c18": {
            "entrypoint": "0x08001c18",
            "current_name": "receive_data_08001c18",
            "code": "\nvoid receiveData_08001c18(undefined4 deviceAddress,uint registerAddress,int numBytes,undefined4 data)\n\n{\n  undefined receivedByte;\n  int byteCount;\n  int currentByte;\n  bool isBytesAvailable;\n  \n  if (registerAddress == 0xffffffff) {\n    registerAddress = 0;\n  }\n  else {\n    FUN_08002a30(&DAT_20000314,deviceAddress);\n    FUN_08001bf8(registerAddress & 0xff);\n    FUN_08002a58(&DAT_20000314,data);\n  }\n  FUN_08002c14(&DAT_20000314,deviceAddress,numBytes);\n  byteCount = FUN_0800270c(&DAT_20000314);\n  if (numBytes < byteCount) {\n    FUN_08002f14(&DAT_200003d4,\"I2C: Too many bytes received\");\n  }\n  else {\n    byteCount = FUN_0800270c(&DAT_20000314);\n    if (byteCount < numBytes) {\n      FUN_08002f14(&DAT_200003d4,\"I2C: Too few bytes received\");\n    }\n  }\n  DAT_20000130 = (undefined)deviceAddress;\n  DAT_20000131 = (undefined)registerAddress;\n  byteCount = 0;\n  while( true ) {\n    if (byteCount < numBytes) {\n      currentByte = FUN_0800270c(&DAT_20000314);\n      if (currentByte == 0) {\n        isBytesAvailable = false;\n      }\n      else {\n        isBytesAvailable = true;\n      }\n    }\n    else {\n      isBytesAvailable = false;\n    }\n    if (!isBytesAvailable) break;\n    receivedByte = FUN_08001c08();\n    (&DAT_20000132)[byteCount] = receivedByte;\n    byteCount = byteCount + 1;\n  }\n  FUN_08002f0a(&DAT_200003d4,0x77,numBytes + 2U & 0xff,&DAT_20000130);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001c18": "receive_data_08001c18",
                "param_1": "deviceAddress",
                "param_2": "registerAddress",
                "param_3": "numBytes",
                "param_4": "data",
                "uVar1": "receivedByte",
                "iVar2": "byteCount",
                "iVar3": "currentByte",
                "bVar4": "isBytesAvailable"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_080022f8"
            ],
            "called": [
                "FUN_08002f14",
                "FUN_08002f0a",
                "FUN_0800270c",
                "FUN_08002a58",
                "FUN_08001bf8",
                "FUN_08002c14",
                "FUN_08002a30",
                "FUN_08001c08"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001cd0": {
            "entrypoint": "0x08001cd0",
            "current_name": "process_data_08001cd0",
            "code": "\nvoid processData_08001cd0(undefined4 inputType,int dataLength,byte *data,undefined4 param)\n\n{\n  byte byte1;\n  byte byte2;\n  byte byte3;\n  undefined4 result;\n  byte byte4;\n  char char1;\n  int index;\n  int tempIndex;\n  uint tempVar1;\n  uint tempVar2;\n  int tempVar3;\n  bool flag;\n  \n  switch(inputType) {\n  case 0x69:\n    FUN_08002f1e(&DAT_200003d4,0xf0);\n    FUN_08002f1e(&DAT_200003d4,0x6a);\n    for (tempVar1 = 0; tempVar1 < 0x3c; tempVar1 = tempVar1 + 1 & 0xff) {\n      tempVar2 = tempVar1 - 0x2e & 0xff;\n      if (tempVar2 < 0xe) {\n        if (tempVar1 < 0x3c) {\n          index = (int)(char)(&DAT_0800a908)[tempVar1];\n        }\n        else {\n          index = -1;\n        }\n        index = FUN_080036ac(index);\n        if (index == 0) {\n          tempVar2 = 0x7f;\n        }\n        else {\n          if (tempVar1 < 0x3c) {\n            index = (int)(char)(&DAT_0800a908)[tempVar1];\n          }\n          else {\n            index = -1;\n          }\n          index = FUN_080036ac(index);\n          if (index == 1) {\n            tempVar2 = 0x7f;\n          }\n        }\n      }\n      else {\n        tempVar2 = 0x7f;\n      }\n      FUN_08002f1e(&DAT_200003d4,tempVar2);\n    }\n    FUN_08002f1e(&DAT_200003d4,0xf7);\n    break;\n  case 0x6b:\n    FUN_08002f1e(&DAT_200003d4,0xf0);\n    FUN_08002f1e(&DAT_200003d4,0x6c);\n    for (tempVar1 = 0; tempVar1 < 0x3c; tempVar1 = tempVar1 + 1 & 0xff) {\n      if (tempVar1 < 0x3c) {\n        if ((&DAT_0800a908)[tempVar1] == -1) {\n          flag = false;\n        }\n        else {\n          index = FUN_080036ac();\n          if (index == 0) {\n            flag = false;\n          }\n          else {\n            index = FUN_080036ac((int)(char)(&DAT_0800a908)[tempVar1]);\n            if (index == 1) {\n              flag = false;\n            }\n            else {\n              flag = true;\n            }\n          }\n        }\n      }\n      else {\n        flag = false;\n      }\n      if (flag) {\n        FUN_08002f1e(&DAT_200003d4,0);\n        FUN_08002f1e(&DAT_200003d4,1);\n        FUN_08002f1e(&DAT_200003d4,0xb);\n        FUN_08002f1e(&DAT_200003d4,1);\n        FUN_08002f1e(&DAT_200003d4,1);\n        FUN_08002f1e(&DAT_200003d4,1);\n      }\n      if ((tempVar1 - 0x2e & 0xff) < 0xe) {\n        if (tempVar1 < 0x3c) {\n          index = (int)(char)(&DAT_0800a908)[tempVar1];\n        }\n        else {\n          index = -1;\n        }\n        index = FUN_080036ac(index);\n        if (index == 0) {\n          flag = false;\n        }\n        else {\n          if (tempVar1 < 0x3c) {\n            index = (int)(char)(&DAT_0800a908)[tempVar1];\n          }\n          else {\n            index = -1;\n          }\n          index = FUN_080036ac(index);\n          if (index == 1) {\n            flag = false;\n          }\n          else {\n            flag = true;\n          }\n        }\n      }\n      else {\n        flag = false;\n      }\n      if (flag) {\n        FUN_08002f1e(&DAT_200003d4,2);\n        FUN_08002f1e(&DAT_200003d4,10);\n      }\n      if (tempVar1 < 0x3c) {\n        if ((&DAT_0800a908)[tempVar1] == -1) {\n          index = 0;\n        }\n        else {\n          index = FUN_080036ac();\n          if (index == 0) {\n            index = 0;\n          }\n          else {\n            index = FUN_080036ac((int)(char)(&DAT_0800a908)[tempVar1]);\n            if (index == 1) {\n              index = 0;\n            }\n            else {\n              index = FUN_0800738a((int)(char)(&DAT_0800a908)[tempVar1],&DAT_0800a6cc);\n            }\n          }\n        }\n      }\n      else {\n        index = 0;\n      }\n      if (index != 0) {\n        FUN_08002f1e(&DAT_200003d4,3);\n        FUN_08002f1e(&DAT_200003d4,8);\n      }\n      if (tempVar1 < 0x3c) {\n        if ((&DAT_0800a908)[tempVar1] == -1) {\n          flag = false;\n        }\n        else {\n          index = FUN_080036ac();\n          if (index == 0) {\n            flag = false;\n          }\n          else {\n            index = FUN_080036ac((int)(char)(&DAT_0800a908)[tempVar1]);\n            if (index == 1) {\n              flag = false;\n            }\n            else {\n              flag = true;\n            }\n          }\n        }\n      }\n      else {\n        flag = false;\n      }\n      if (flag) {\n        FUN_08002f1e(&DAT_200003d4,4);\n        FUN_08002f1e(&DAT_200003d4,0xe);\n      }\n      if (tempVar1 < 0x3c) {\n        if ((&DAT_0800a908)[tempVar1] == -1) {\n          index = 0;\n        }\n        else {\n          index = FUN_080036ac();\n          if (index == 0) {\n            index = 0;\n          }\n          else {\n            index = FUN_080036ac((int)(char)(&DAT_0800a908)[tempVar1]);\n            if (index == 1) {\n              index = 0;\n            }\n            else {\n              index = FUN_0800738a((int)(char)(&DAT_0800a908)[tempVar1],&DAT_0800a69c);\n              if (index == 0) {\n                index = FUN_0800738a((int)(char)(&DAT_0800a908)[tempVar1],&DAT_0800a66c);\n              }\n            }\n          }\n        }\n      }\n      else {\n        index = 0;\n      }\n      if (index != 0) {\n        FUN_08002f1e(&DAT_200003d4,6);\n        FUN_08002f1e(&DAT_200003d4,1);\n      }\n      FUN_08002f1e(&DAT_200003d4,0x7f);\n    }\n    FUN_08002f1e(&DAT_200003d4,0xf7);\n    return;\n  case 0x6d:\n    if (dataLength != 0) {\n      byte1 = *data;\n      FUN_08002f1e(&DAT_200003d4,0xf0);\n      FUN_08002f1e(&DAT_200003d4,0x6e);\n      FUN_08002f1e(&DAT_200003d4,byte1);\n      if (byte1 < 0x3c) {\n        result = FUN_08002fa0(&DAT_200003d4,byte1);\n        FUN_08002f1e(&DAT_200003d4,result);\n        tempVar1 = FUN_08002fba(&DAT_200003d4,byte1);\n        FUN_08002f1e(&DAT_200003d4,tempVar1 & 0x7f);\n        tempVar1 = FUN_08002fba(&DAT_200003d4,byte1);\n        if ((tempVar1 & 0xff80) != 0) {\n          index = FUN_08002fba(&DAT_200003d4,byte1);\n          FUN_08002f1e(&DAT_200003d4,(uint)(index << 0x12) >> 0x19);\n        }\n        tempVar1 = FUN_08002fba(&DAT_200003d4,byte1);\n        if ((tempVar1 & 0xc000) != 0) {\n          index = FUN_08002fba(&DAT_200003d4,byte1);\n          FUN_08002f1e(&DAT_200003d4,(uint)(index << 0xb) >> 0x19);\n        }\n      }\n      FUN_08002f1e(&DAT_200003d4,0xf7);\n      return;\n    }\n    break;\n  case 0x6f:\n    if (1 < dataLength) {\n      tempVar1 = (uint)data[1];\n      if (2 < dataLength) {\n        tempVar1 = tempVar1 | (uint)data[2] << 7;\n      }\n      if (3 < dataLength) {\n        tempVar1 = tempVar1 | (uint)data[3] << 0xe;\n      }\n      FUN_08000214(*data,tempVar1);\n      return;\n    }\n    break;\n  case 0x70:\n    if (4 < dataLength) {\n      tempVar1 = (uint)*data;\n      byte1 = data[1];\n      byte4 = data[2];\n      byte2 = data[3];\n      byte3 = data[4];\n      if (tempVar1 < 0x3c) {\n        if ((&DAT_0800a908)[tempVar1] == -1) {\n          flag = false;\n        }\n        else {\n          index = FUN_080036ac();\n          if (index == 0) {\n            flag = false;\n          }\n          else {\n            index = FUN_080036ac((int)(char)(&DAT_0800a908)[tempVar1]);\n            if (index == 1) {\n              flag = false;\n            }\n            else {\n              flag = true;\n            }\n          }\n        }\n      }\n      else {\n        flag = false;\n      }\n      if (flag) {\n        if ((byte)(&DAT_200001f0)[tempVar1] < 0xc) {\n          index = FUN_080026f8(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[tempVar1] * 3);\n        }\n        else {\n          index = 0;\n        }\n        if (index != 0) {\n          FUN_08000588(tempVar1);\n        }\n        FUN_08000500(tempVar1,(uint)byte1 + (uint)byte4 * 0x80,(uint)byte2 + (uint)byte3 * 0x80);\n        FUN_080005f8(tempVar1,4);\n        return;\n      }\n    }\n    break;\n  case 0x76:\n    byte1 = data[1];\n    byte4 = byte1 & 0x18;\n    if ((byte1 & 0x20) != 0) {\n      FUN_08002f14(&DAT_200003d4,\"10-bit addressing not supported\",byte4,byte1,param);\n      return;\n    }\n    byte2 = *data;\n    flag = (byte1 & 0x40) == 0;\n    if (byte4 < 0x19) {\n      switch(byte4) {\n      case 0:\n        FUN_08002a30(&DAT_20000314,byte2);\n        for (tempVar1 = 2; (int)tempVar1 < dataLength; tempVar1 = tempVar1 + 2 & 0xff) {\n          FUN_08001bf8(data[tempVar1 + 1] * -0x80 + data[tempVar1]);\n        }\n        FUN_08002ac0(&DAT_20000314);\n        return;\n      case 8:\n        if (dataLength == 6) {\n          index = (uint)data[2] + (uint)data[3] * 0x80;\n          char1 = data[4] + data[5] * -0x80;\n        }\n        else {\n          char1 = data[2] + data[3] * -0x80;\n          index = -1;\n        }\n        FUN_08001c18(byte2,index,char1);\n        return;\n      case 0x10:\n        if (DAT_20000004 + 1 < 8) {\n          if (dataLength == 6) {\n            index = (uint)data[2] + (uint)data[3] * 0x80;\n            char1 = data[4] + data[5] * -0x80;\n          }\n          else {\n            char1 = data[2] + data[3] * -0x80;\n            index = -1;\n          }\n          DAT_20000004 = DAT_20000004 + '\\x01';\n          tempIndex = (int)DAT_20000004;\n          tempVar3 = tempIndex * 0xc;\n          (&DAT_20000188)[tempVar3] = byte2;\n          (&DAT_2000018c)[tempIndex * 3] = index;\n          (&DAT_20000190)[tempVar3] = char1;\n          (&DAT_20000191)[tempVar3] = flag;\n          return;\n        }\n        FUN_08002f14(&DAT_200003d4,\"too many queries\",(int)DAT_20000004,flag,param);\n        return;\n      case 0x18:\n        if (DAT_20000004 < 1) {\n          DAT_20000004 = 0xff;\n          return;\n        }\n      }\n      for (tempVar1 = 0; index = DAT_20000004 + 1, (int)tempVar1 < index; tempVar1 = tempVar1 + 1 & 0xff) {\n        if (byte2 == (&DAT_20000188)[tempVar1 * 0xc]) goto LAB_08001e66;\n      }\n      tempVar1 = 0;\nLAB_08001e66:\n      for (; (int)tempVar1 < index; tempVar1 = tempVar1 + 1 & 0xff) {\n        if (tempVar1 < 8) {\n          tempIndex = (tempVar1 + 1) * 0xc;\n          tempVar3 = tempVar1 * 0xc;\n          (&DAT_20000188)[tempVar3] = (&DAT_20000188)[tempIndex];\n          (&DAT_2000018c)[tempVar1 * 3] = (&DAT_2000018c)[(tempVar1 + 1) * 3];\n          (&DAT_20000190)[tempVar3] = (&DAT_20000190)[tempIndex];\n          (&DAT_20000191)[tempVar3] = (&DAT_20000191)[tempIndex];\n        }\n      }\n      DAT_20000004 = DAT_20000004 + -1;\n      return;\n    }\n    break;\n  case 0x78:\n    index = (uint)*data + (uint)data[1] * 0x80;\n    if ((1 < dataLength) && (index != 0)) {\n      DAT_2000012c = index;\n    }\n    if (DAT_20000170 == '\\0') {\n      FUN_08000a64();\n      return;\n    }\n    break;\n  case 0x7a:\n    if ((1 < dataLength) &&\n       (DAT_20000008 = (uint)*data + (uint)data[1] * 0x80, DAT_20000008 == 0)) {\n      DAT_20000008 = 1;\n      return;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001cd0": "process_data_08001cd0",
                "param_1": "inputType",
                "param_2": "dataLength",
                "param_3": "data",
                "param_4": "param",
                "bVar1": "byte1",
                "bVar2": "byte2",
                "bVar3": "byte3",
                "uVar4": "result",
                "bVar5": "byte4",
                "cVar6": "char1",
                "iVar7": "index",
                "iVar8": "tempIndex",
                "uVar9": "tempVar1",
                "uVar10": "tempVar2",
                "iVar11": "tempVar3",
                "bVar12": "flag"
            },
            "calling": [],
            "called": [
                "FUN_08002f1e",
                "FUN_08002f14",
                "FUN_080036ac",
                "FUN_08001bf8",
                "FUN_0800738a",
                "FUN_08002ac0",
                "FUN_08001c18",
                "FUN_08002fba",
                "FUN_08002a30",
                "FUN_080005f8",
                "FUN_08000588",
                "FUN_08002fa0",
                "FUN_08000a64",
                "FUN_08000500",
                "FUN_08000214",
                "FUN_080026f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080022f8": {
            "entrypoint": "0x080022f8",
            "current_name": "process_data_080022f8",
            "code": "\nvoid processData_080022f8(void)\n\n{\n  bool bVar1;\n  int iVar2;\n  undefined4 uVar3;\n  uint uVar4;\n  uint uVar5;\n  \n  FUN_08000ef8();\n  while (iVar2 = FUN_08002ec4(&DAT_200003d4), iVar2 != 0) {\n    FUN_08002ed2(&DAT_200003d4);\n  }\n  DAT_20000118 = FUN_08008abc();\n  if (DAT_20000008 < (uint)(DAT_20000118 - DAT_2000017c)) {\n    DAT_2000017c = DAT_2000017c + DAT_20000008;\n    for (uVar4 = 0; uVar4 < 0x3c; uVar4 = uVar4 + 1 & 0xff) {\n      uVar5 = uVar4 - 0x2e & 0xff;\n      if (uVar5 < 0xe) {\n        if (uVar4 < 0x3c) {\n          iVar2 = (int)(char)(&DAT_0800a908)[uVar4];\n        }\n        else {\n          iVar2 = -1;\n        }\n        iVar2 = FUN_080036ac(iVar2);\n        if (iVar2 == 0) {\n          bVar1 = false;\n        }\n        else {\n          if (uVar4 < 0x3c) {\n            iVar2 = (int)(char)(&DAT_0800a908)[uVar4];\n          }\n          else {\n            iVar2 = -1;\n          }\n          iVar2 = FUN_080036ac(iVar2);\n          if (iVar2 == 1) {\n            bVar1 = false;\n          }\n          else {\n            iVar2 = FUN_08002fa0(&DAT_200003d4,uVar4);\n            if (iVar2 == 2) {\n              bVar1 = true;\n            }\n            else {\n              bVar1 = false;\n            }\n          }\n        }\n      }\n      else {\n        bVar1 = false;\n      }\n      if ((bVar1) && ((DAT_20000114 >> uVar5 & 1U) != 0)) {\n        uVar3 = FUN_08008880(uVar5);\n        FUN_08002ef2(&DAT_200003d4,uVar5,uVar3);\n      }\n    }\n    if (-1 < DAT_20000004) {\n      for (uVar4 = 0; (int)uVar4 < DAT_20000004 + 1; uVar4 = uVar4 + 1 & 0xff) {\n        iVar2 = uVar4 * 0xc;\n        FUN_08001c18((&DAT_20000188)[iVar2],(&DAT_2000018c)[uVar4 * 3],(&DAT_20000190)[iVar2],\n                     (&DAT_20000191)[iVar2]);\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080022f8": "process_data_080022f8"
            },
            "calling": [
                "FUN_08008f1c"
            ],
            "called": [
                "FUN_08002ed2",
                "FUN_08008abc",
                "FUN_08002fa0",
                "FUN_08008880",
                "FUN_080036ac",
                "FUN_08002ef2",
                "FUN_08001c18",
                "FUN_08002ec4",
                "FUN_08000ef8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002400": {
            "entrypoint": "0x08002400",
            "current_name": "check_validity_08002400",
            "code": "\nundefined4 check_validity_08002400(int input_value)\n\n{\n  uint counter;\n  \n  counter = 0;\n  while( true ) {\n    if (0xb < counter) {\n      return 0;\n    }\n    if (((&DAT_20000258)[(input_value * 0xc + counter) * 8] & 0x40) != 0) break;\n    counter = counter + 1 & 0xff;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08002400": "check_validity_08002400",
                "param_1": "input_value",
                "uVar1": "counter"
            },
            "calling": [
                "FUN_08002644",
                "FUN_080025ac"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800242c": {
            "entrypoint": "0x0800242c",
            "current_name": "initialize_connection_0800242c",
            "code": "\nvoid initializeConnection_0800242c(undefined4 connectionId,undefined4 portNumber,undefined4 timeout,undefined4 config)\n\n{\n  FUN_08007648(connectionId,60000,0x5dc,&errorHandling,config);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800242c": "initialize_connection_0800242c",
                "param_1": "connectionId",
                "param_2": "portNumber",
                "param_3": "timeout",
                "param_4": "config",
                "LAB_08002444_1": "errorHandling"
            },
            "calling": [
                "FUN_080025ac"
            ],
            "called": [
                "FUN_08007648"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002578": {
            "entrypoint": "0x08002578",
            "current_name": "initialize_08002578",
            "code": "\nvoid initialize_08002578(void)\n\n{\n  FUN_080076e0();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002578": "initialize_08002578"
            },
            "calling": [
                "FUN_08002644"
            ],
            "called": [
                "FUN_080076e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002580": {
            "entrypoint": "0x08002580",
            "current_name": "initialize_value_08002580",
            "code": "\nvoid initializeValue_08002580(byte *outputBuffer)\n\n{\n  char nextIndex;\n  uint dataIndex;\n  \n  dataIndex = (uint)DAT_20000250;\n  if (0xb < dataIndex) {\n    *outputBuffer = 0xff;\n    return;\n  }\n  nextIndex = DAT_20000250 + 1;\n  *outputBuffer = DAT_20000250;\n  DAT_20000250 = nextIndex;\n  *(undefined4 *)(&DAT_2000025c + dataIndex * 8) = 0x5dc;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002580": "initialize_value_08002580",
                "param_1": "outputBuffer",
                "cVar1": "nextIndex",
                "uVar2": "dataIndex"
            },
            "calling": [
                "FUN_080004d4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080025ac": {
            "entrypoint": "0x080025ac",
            "current_name": "update_data_080025ac",
            "code": "\nbyte update_data_080025ac(byte *data,uint value,int offset1,int offset2)\n\n{\n  uint mask;\n  uint index;\n  uint division;\n  int temp;\n  \n  if (*data < 0xc) {\n    FUN_08008990(value,1,offset1,*data,offset2);\n    index = (uint)*data;\n    mask = (byte)(&DAT_20000258)[index * 8] & 0xffffffc0 | value & 0x3f;\n    (&DAT_20000258)[index * 8] = (char)mask;\n    temp = -offset1 + 0x220;\n    if (temp < 0) {\n      temp = -offset1 + 0x223;\n    }\n    data[1] = (byte)((uint)(temp << 0x16) >> 0x18);\n    temp = -offset2 + 0x960;\n    if (temp < 0) {\n      temp = -offset2 + 0x963;\n    }\n    data[2] = (byte)((uint)(temp << 0x16) >> 0x18);\n    division = *data / 0xc;\n    temp = FUN_08002400(division,mask,index,(uint)*data * -0x55555555);\n    if (temp == 0) {\n      DAT_200002fc = (undefined)division;\n      FUN_0800242c();\n    }\n    (&DAT_20000258)[(uint)*data * 8] = (&DAT_20000258)[(uint)*data * 8] | 0x40;\n  }\n  return *data;\n}\n\n",
            "renaming": {
                "FUN_080025ac": "update_data_080025ac",
                "param_1": "data",
                "param_2": "value",
                "param_3": "offset1",
                "param_4": "offset2",
                "uVar1": "mask",
                "uVar2": "index",
                "uVar3": "division",
                "iVar4": "temp"
            },
            "calling": [
                "FUN_08002634",
                "FUN_08000500"
            ],
            "called": [
                "FUN_08008990",
                "FUN_0800242c",
                "FUN_08002400"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002634": {
            "entrypoint": "0x08002634",
            "current_name": "initialize_graphics_08002634",
            "code": "\nvoid initializeGraphics_08002634(undefined4 screenWidth,undefined4 screenHeight,undefined4 bufferSize,undefined4 screenBuffer)\n\n{\n  FUN_080025ac(screenWidth,screenHeight,0x220,0x960,screenBuffer);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002634": "initialize_graphics_08002634",
                "param_1": "screenWidth",
                "param_2": "screenHeight",
                "param_3": "bufferSize",
                "param_4": "screenBuffer"
            },
            "calling": [
                "FUN_08000500"
            ],
            "called": [
                "FUN_080025ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002644": {
            "entrypoint": "0x08002644",
            "current_name": "update_data_and_invoke_function_08002644",
            "code": "\nvoid updateDataAndInvokeFunction_08002644(byte *data,undefined4 paramA,undefined4 paramB,undefined4 paramC)\n\n{\n  byte currentValue;\n  uint dataValue;\n  int result;\n  \n  dataValue = (uint)*data;\n  currentValue = (&DAT_20000258)[dataValue * 8];\n  (&DAT_20000258)[dataValue * 8] = currentValue & 0xbf;\n  result = FUN_08002400(dataValue / 0xc,paramA,currentValue & 0xbf,dataValue * -0x55555555,paramC);\n  if (result == 0) {\n    FUN_08002578(&DAT_200002b8);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002644": "update_data_and_invoke_function_08002644",
                "param_1": "data",
                "param_2": "paramA",
                "param_3": "paramB",
                "param_4": "paramC",
                "bVar1": "currentValue",
                "uVar2": "dataValue",
                "iVar3": "result"
            },
            "calling": [
                "FUN_08000588"
            ],
            "called": [
                "FUN_08002400",
                "FUN_08002578"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800267c": {
            "entrypoint": "0x0800267c",
            "current_name": "update_data_0800267c",
            "code": "\nvoid updateData_0800267c(byte *data,int value)\n\n{\n  int index;\n  \n  if (*data < 0xc) {\n    index = (0x88 - (char)data[1]) * 4;\n    if ((index - value == 0 || index < value) &&\n       (index = (600 - (char)data[2]) * 4,\n       value == index || value + (600 - (char)data[2]) * -4 < 0 != SBORROW4(value,index)))\n    {\n      index = value;\n    }\n    *(int *)(&DAT_2000025c + (uint)*data * 8) = index;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800267c": "update_data_0800267c",
                "param_1": "data",
                "param_2": "value",
                "iVar1": "index"
            },
            "calling": [
                "FUN_080026b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080026b0": {
            "entrypoint": "0x080026b0",
            "current_name": "process_data_080026b0",
            "code": "\nvoid process_data_080026b0(int data_ptr,int value)\n\n{\n  if (value < 0x220) {\n    if (value < 0) {\n      value = 0;\n    }\n    else if (0xb4 < value) {\n      value = 0xb4;\n    }\n    value = FUN_08008ef4(value,0,0xb4,(0x88 - *(char *)(data_ptr + 1)) * 4,\n                           (600 - *(char *)(data_ptr + 2)) * 4);\n  }\n  FUN_0800267c(data_ptr,value);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080026b0": "process_data_080026b0",
                "param_1": "data_ptr",
                "param_2": "value"
            },
            "calling": [
                "FUN_0800021a"
            ],
            "called": [
                "FUN_08008ef4",
                "FUN_0800267c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080026f8": {
            "entrypoint": "0x080026f8",
            "current_name": "extracted_byte_080026f8",
            "code": "\nuint extractedByte_080026f8(byte *inputByte)\n\n{\n  return ((uint)(byte)(&DAT_20000258)[(uint)*inputByte * 8] << 0x19) >> 0x1f;\n}\n\n",
            "renaming": {
                "FUN_080026f8": "extracted_byte_080026f8",
                "param_1": "inputByte"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800270c": {
            "entrypoint": "0x0800270c",
            "current_name": "calculate_data_difference_0800270c",
            "code": "\nint calculate_data_difference_0800270c(void)\n\n{\n  return (uint)DAT_200003b7 - (uint)DAT_200003b5;\n}\n\n",
            "renaming": {
                "FUN_0800270c": "calculate_data_difference_0800270c"
            },
            "calling": [
                "FUN_08001c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002720": {
            "entrypoint": "0x08002720",
            "current_name": "get_next_byte_08002720",
            "code": "\nuint get_next_byte_08002720(void)\n\n{\n  uint currentIndex;\n  \n  currentIndex = (uint)DAT_200003b5;\n  if (currentIndex < DAT_200003b7) {\n    DAT_200003b5 = DAT_200003b5 + 1;\n    return (uint)*(byte *)(DAT_200003c8 + currentIndex);\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08002720": "get_next_byte_08002720",
                "uVar1": "currentIndex"
            },
            "calling": [
                "FUN_08001c08"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080027f0": {
            "entrypoint": "0x080027f0",
            "current_name": "process_data_080027f0",
            "code": "\nuint process_data_080027f0(int input_addr,undefined4 input_val,uint input_len)\n\n{\n  int result;\n  uint updated_len;\n  \n  if (DAT_200003b4 == '\\0') {\n    result = FUN_08007ede(input_addr + 0x14,input_val,input_len & 0xffff);\n    if (result == 0) {\n      return input_len;\n    }\n    return 0;\n  }\n  updated_len = DAT_200003b8 + input_len;\n  if (DAT_200003c5 < updated_len) {\n    if (updated_len < 0x20) {\n      updated_len = 0x20;\n    }\n    DAT_200003cc = FUN_08009908(DAT_200003cc,updated_len);\n    if (DAT_200003cc == 0) {\n      DAT_200003c5 = 0;\n    }\n    else {\n      DAT_200003c5 = (byte)updated_len;\n    }\n  }\n  if (DAT_200003cc == 0) {\n    *(undefined4 *)(input_addr + 4) = 1;\n    return 0;\n  }\n  FUN_080091b0((uint)DAT_200003b6 + DAT_200003cc,input_val,input_len);\n  DAT_200003b6 = DAT_200003b6 + (char)input_len;\n  DAT_200003b8 = DAT_200003b6;\n  return input_len;\n}\n\n",
            "renaming": {
                "FUN_080027f0": "process_data_080027f0",
                "param_1": "input_addr",
                "param_2": "input_val",
                "param_3": "input_len",
                "iVar1": "result",
                "uVar2": "updated_len"
            },
            "calling": [],
            "called": [
                "FUN_080091b0",
                "FUN_08009908",
                "FUN_08007ede"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800288c": {
            "entrypoint": "0x0800288c",
            "current_name": "handle_data_0800288c",
            "code": "\nundefined4 handleData_0800288c(int dataBuffer,undefined data)\n\n{\n  undefined4 isSuccess;\n  int result;\n  uint newSize;\n  undefined newData;\n  \n  newData = data;\n  if (DAT_200003b4 == '\\0') {\n    result = FUN_08007ede(dataBuffer + 0x14,&newData,1);\n    if (result == 0) {\n      isSuccess = 1;\n    }\n    else {\n      isSuccess = 0;\n    }\n  }\n  else {\n    newSize = DAT_200003b8 + 1;\n    if (DAT_200003c5 < newSize) {\n      if (newSize < 0x20) {\n        newSize = 0x20;\n      }\n      DAT_200003cc = FUN_08009908(DAT_200003cc,newSize);\n      if (DAT_200003cc == 0) {\n        DAT_200003c5 = 0;\n      }\n      else {\n        DAT_200003c5 = (byte)newSize;\n      }\n    }\n    if (DAT_200003cc == 0) {\n      *(undefined4 *)(dataBuffer + 4) = 1;\n      isSuccess = 0;\n    }\n    else {\n      *(undefined *)(DAT_200003cc + (uint)DAT_200003b6) = newData;\n      DAT_200003b6 = DAT_200003b6 + 1;\n      isSuccess = 1;\n      DAT_200003b8 = DAT_200003b6;\n    }\n  }\n  return isSuccess;\n}\n\n",
            "renaming": {
                "FUN_0800288c": "handle_data_0800288c",
                "param_1": "dataBuffer",
                "param_2": "data",
                "uVar1": "isSuccess",
                "iVar2": "result",
                "uVar3": "newSize",
                "local_11": "newData"
            },
            "calling": [
                "FUN_08001bf8"
            ],
            "called": [
                "FUN_08009908",
                "FUN_08007ede"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800291c": {
            "entrypoint": "0x0800291c",
            "current_name": "initialize_function_0800291c",
            "code": "\nvoid initialize_function_0800291c(undefined4 *function_parameters)\n\n{\n  initialized_variable_1 = 0;\n  initialized_variable_2 = 1000;\n  *function_parameters = &PTR_FUN_0800288c_1_0800a5a0;\n  *(undefined *)(function_parameters + 0x1b) = 0x19;\n  *(undefined *)((int)function_parameters + 0x6d) = 0x18;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800291c": "initialize_function_0800291c",
                "param_1": "function_parameters",
                "param_1[1]": "initialized_variable_1",
                "param_1[2]": "initialized_variable_2"
            },
            "calling": [
                "FUN_08002948"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002948": {
            "entrypoint": "0x08002948",
            "current_name": "check_param_08002948",
            "code": "\nvoid checkParam_08002948(int input1,int input2)\n\n{\n  if (input1 != 1) {\n    return;\n  }\n  if (input2 == 0xffff) {\n    FUN_0800291c(&DAT_20000314);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002948": "check_param_08002948",
                "param_1": "input1",
                "param_2": "input2"
            },
            "calling": [
                "FUN_08002c1e"
            ],
            "called": [
                "FUN_0800291c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002968": {
            "entrypoint": "0x08002968",
            "current_name": "initialize_function_08002968",
            "code": "\nvoid initializeFunction_08002968(int functionPointer,uint flags)\n\n{\n  int shiftedFlags;\n  int memAddress;\n  \n  DAT_200003b5 = 0;\n  DAT_200003b7 = 0;\n  if (DAT_200003c8 != 0) {\n    FUN_080091c6(DAT_200003c8,0,DAT_200003c4);\n  }\n  DAT_200003b6 = 0;\n  DAT_200003b8 = 0;\n  if (DAT_200003cc != 0) {\n    FUN_080091c6(DAT_200003cc,0,DAT_200003c5);\n  }\n  DAT_200003b4 = 0;\n  shiftedFlags = (flags & 0x7f) << 1;\n  *(char *)(functionPointer + 0x10) = (char)shiftedFlags;\n  if (flags == 0x33) {\n    *(undefined *)(functionPointer + 0x11) = 1;\n  }\n  else {\n    *(undefined *)(functionPointer + 0x11) = 0;\n  }\n  memAddress = functionPointer + 0x14;\n  FUN_080077b0(memAddress,100000,0x4000,shiftedFlags,*(undefined *)(functionPointer + 0x11));\n  if (*(char *)(functionPointer + 0x11) == '\\0') {\n    FUN_08007f8e(memAddress,&LAB_08002774_1);\n    FUN_08007f7c(memAddress,&LAB_08002b00_1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002968": "initialize_function_08002968",
                "param_1": "functionPointer",
                "param_2": "flags",
                "iVar1": "shiftedFlags",
                "iVar2": "memAddress"
            },
            "calling": [
                "FUN_08002a1c"
            ],
            "called": [
                "FUN_080077b0",
                "FUN_08007f8e",
                "FUN_080091c6",
                "FUN_08007f7c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a1c": {
            "entrypoint": "0x08002a1c",
            "current_name": "execute_function_08002a1c",
            "code": "\nvoid executeFunction_08002a1c(undefined4 arg1,undefined arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  FUN_08002968(arg1,arg2,arg3,arg4,arg4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002a1c": "execute_function_08002a1c",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "calling": [
                "FUN_08002a26"
            ],
            "called": [
                "FUN_08002968"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a26": {
            "entrypoint": "0x08002a26",
            "current_name": "initialize_function_08002a26",
            "code": "\nvoid initializeFunction_08002a26(undefined4 param1,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  FUN_08002a1c(param1,0x33,param3,param4,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002a26": "initialize_function_08002a26",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [
                "FUN_08000a64"
            ],
            "called": [
                "FUN_08002a1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a30": {
            "entrypoint": "0x08002a30",
            "current_name": "initialize_data_08002a30",
            "code": "\nvoid initializeData_08002a30(undefined4 param,int value)\n\n{\n  DAT_200003b4 = 1;\n  DAT_200003d0 = (char)(value << 1);\n  DAT_200003b6 = 0;\n  DAT_200003b8 = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002a30": "initialize_data_08002a30",
                "param_1": "param",
                "param_2": "value"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_08002b68",
                "FUN_08001c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a58": {
            "entrypoint": "0x08002a58",
            "current_name": "check_data_validity_08002a58",
            "code": "\nundefined4 checkDataValidity_08002a58(int pointer)\n\n{\n  int result;\n  undefined4 errorCode;\n  \n  if (*(char *)(pointer + 0x11) == '\\0') {\n    errorCode = 4;\n  }\n  else {\n    result = FUN_08007e74(pointer + 0x14,DAT_200003d0,DAT_200003cc,DAT_200003b8);\n    if (result == 0) {\n      errorCode = 0;\n    }\n    else if (result == 1) {\n      errorCode = 1;\n    }\n    else {\n      errorCode = 4;\n    }\n    if (DAT_200003cc != 0) {\n      FUN_080091c6(DAT_200003cc,0,DAT_200003c5);\n    }\n    DAT_200003b6 = 0;\n    DAT_200003b8 = 0;\n    DAT_200003b4 = 0;\n  }\n  return errorCode;\n}\n\n",
            "renaming": {
                "FUN_08002a58": "check_data_validity_08002a58",
                "param_1": "pointer",
                "iVar1": "result",
                "uVar2": "errorCode"
            },
            "calling": [
                "FUN_08002b68",
                "FUN_08002ac0",
                "FUN_08001c18"
            ],
            "called": [
                "FUN_080091c6",
                "FUN_08007e74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ac0": {
            "entrypoint": "0x08002ac0",
            "current_name": "execute_function_08002ac0",
            "code": "\nvoid executeFunction_08002ac0(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  FUN_08002a58(arg1,1,arg3,arg4,arg4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ac0": "execute_function_08002ac0",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [
                "FUN_08002a58"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002acc": {
            "entrypoint": "0x08002acc",
            "current_name": "limit_param_value_08002acc",
            "code": "\nvoid limitParamValue_08002acc(uint inputValue,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  if (DAT_200003c4 < inputValue) {\n    if (inputValue < 0x20) {\n      inputValue = 0x20;\n    }\n    DAT_200003c8 = FUN_08009908(DAT_200003c8,inputValue,param3,(uint)DAT_200003c4,param4);\n    if (DAT_200003c8 == 0) {\n      DAT_200003c4 = 0;\n    }\n    else {\n      DAT_200003c4 = (byte)inputValue;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002acc": "limit_param_value_08002acc",
                "param_1": "inputValue",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [
                "FUN_08002b68"
            ],
            "called": [
                "FUN_08009908"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002b68": {
            "entrypoint": "0x08002b68",
            "current_name": "process_data_08002b68",
            "code": "\nundefined4\nprocess_data_08002b68(undefined4 *data_buffer,uint buffer_size,undefined4 param_a,uint param_b,byte flag)\n\n{\n  int result;\n  uint flag_uint;\n  uint param_b_uint;\n  \n  flag_uint = (uint)flag;\n  if (*(char *)((int)data_buffer + 0x11) == '\\0') {\n    return 0;\n  }\n  param_b_uint = param_b;\n  FUN_08002acc(param_a);\n  if (DAT_200003c8 != 0) {\n    if (flag_uint != 0) {\n      FUN_08002a30(data_buffer,buffer_size);\n      if (3 < flag_uint) {\n        flag_uint = 3;\n      }\n      while( true ) {\n        if (flag_uint == 0) break;\n        (**(code **)*data_buffer)(data_buffer,param_b >> ((flag_uint - 1 & 0x1f) << 3) & 0xff);\n        flag_uint = flag_uint - 1 & 0xff;\n      }\n      FUN_08002a58(data_buffer,0);\n    }\n    result = FUN_08007f0e(data_buffer + 5,(buffer_size & 0x7f) << 1,DAT_200003c8,param_a,param_b_uint);\n    if (result != 0) {\n      param_a = 0;\n    }\n    DAT_200003b5 = 0;\n    DAT_200003b7 = (char)param_a;\n    return param_a;\n  }\n  data_buffer[1] = 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002b68": "process_data_08002b68",
                "param_1": "data_buffer",
                "param_2": "buffer_size",
                "param_3": "param_a",
                "param_4": "param_b",
                "param_5": "flag",
                "iVar1": "result",
                "uVar2": "flag_uint",
                "uVar3": "param_b_uint"
            },
            "calling": [
                "FUN_08002c00"
            ],
            "called": [
                "FUN_08007f0e",
                "FUN_08002a58",
                "FUN_08002acc",
                "FUN_08002a30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c00": {
            "entrypoint": "0x08002c00",
            "current_name": "initialize_system_08002c00",
            "code": "\nvoid initialize_system_08002c00(void)\n\n{\n  FUN_08002b68();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c00": "initialize_system_08002c00"
            },
            "calling": [
                "FUN_08002c14"
            ],
            "called": [
                "FUN_08002b68"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c14": {
            "entrypoint": "0x08002c14",
            "current_name": "initialize_application_08002c14",
            "code": "\nvoid initializeApplication_08002c14(void)\n\n{\n  FUN_08002c00();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c14": "initialize_application_08002c14"
            },
            "calling": [
                "FUN_08001c18"
            ],
            "called": [
                "FUN_08002c00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c1e": {
            "entrypoint": "0x08002c1e",
            "current_name": "initialize_connection_08002c1e",
            "code": "\nvoid initializeConnection_08002c1e(undefined4 connectionType,undefined4 maxConnections,undefined4 connectionConfig,undefined4 connectionData)\n\n{\n  FUN_08002948(1,0xffff,connectionConfig,connectionData,connectionData);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c1e": "initialize_connection_08002c1e",
                "param_1": "connectionType",
                "param_2": "maxConnections",
                "param_3": "connectionConfig",
                "param_4": "connectionData"
            },
            "calling": [],
            "called": [
                "FUN_08002948"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c2c": {
            "entrypoint": "0x08002c2c",
            "current_name": "execute_callback_08002c2c",
            "code": "\nvoid executeCallback_08002c2c(undefined4 unusedParameter,undefined4 inputParam1,undefined4 inputParam2,undefined4 inputParam3)\n\n{\n  if (DAT_200005d4 != (code *)0x0) {\n    (*DAT_200005d4)(inputParam1,inputParam2,inputParam2,DAT_200005d4,inputParam3);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c2c": "execute_callback_08002c2c",
                "param_1": "unusedParameter",
                "param_2": "inputParam1",
                "param_3": "inputParam2",
                "param_4": "inputParam3"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ce0": {
            "entrypoint": "0x08002ce0",
            "current_name": "initialize_function_08002ce0",
            "code": "\nint initializeFunction_08002ce0(int input)\n\n{\n  int offset;\n  \n  FUN_0800314e(input + 0x40);\n  offset = input + 0x44;\n  FUN_080032bc(offset,input,0x40);\n  *(undefined *)(input + 0xc4) = 0;\n  *(undefined4 *)(input + 200) = 0;\n  *(undefined *)(input + 0x1f8) = 0;\n  FUN_08003306(offset,0xe0,FUN_08002c2c + 1,0);\n  FUN_08003306(offset,0x90,&LAB_08002c40_1,0);\n  FUN_08003306(offset,0xc0,&LAB_08002c7c_1,0);\n  FUN_08003306(offset,0xd0,&LAB_08002c90_1,0);\n  FUN_08003306(offset,0xf4,&LAB_08002c54_1,0);\n  FUN_08003306(offset,0xf5,&LAB_08002c68_1,0);\n  FUN_08003366(offset,0x71,&LAB_08002ca4_1,0);\n  FUN_08003370(offset,0xf0,&LAB_08002cb8_1,0);\n  FUN_08003346(offset,0x79,&LAB_08002e1a_1,input);\n  FUN_08003350(offset,0xf9,&LAB_08002dea_1,input);\n  FUN_08003350(offset,0xff,&LAB_08002cd0_1,0);\n  return input;\n}\n\n",
            "renaming": {
                "FUN_08002ce0": "initialize_function_08002ce0",
                "param_1": "input",
                "iVar1": "offset"
            },
            "calling": [
                "FUN_08002dbc"
            ],
            "called": [
                "FUN_08003350",
                "FUN_08003366",
                "FUN_08003306",
                "FUN_0800314e",
                "FUN_080032bc",
                "FUN_08003346",
                "FUN_08003370"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002dbc": {
            "entrypoint": "0x08002dbc",
            "current_name": "check_parameter_08002dbc",
            "code": "\nvoid checkParameter_08002dbc(int parameter1,int parameter2)\n\n{\n  if (parameter1 != 1) {\n    return;\n  }\n  if (parameter2 == 0xffff) {\n    FUN_08002ce0(&DAT_200003d4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002dbc": "check_parameter_08002dbc",
                "param_1": "parameter1",
                "param_2": "parameter2"
            },
            "calling": [],
            "called": [
                "FUN_08002ce0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ddc": {
            "entrypoint": "0x08002ddc",
            "current_name": "initialize_data_08002ddc",
            "code": "\nvoid initializeData_08002ddc(int dataPointer,undefined4 paramA,undefined4 paramB,undefined4 paramC)\n\n{\n  FUN_0800322c(dataPointer + 0x40,2,5,paramC,paramC);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ddc": "initialize_data_08002ddc",
                "param_1": "dataPointer",
                "param_2": "paramA",
                "param_3": "paramB",
                "param_4": "paramC"
            },
            "calling": [
                "FUN_08002e26"
            ],
            "called": [
                "FUN_0800322c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002df6": {
            "entrypoint": "0x08002df6",
            "current_name": "process_data_08002df6",
            "code": "\nvoid processData_08002df6(int inputData)\n\n{\n  undefined *dataPtr;\n  \n  if (*(byte *)(inputData + 0xc4) == 0) {\n    return;\n  }\n  dataPtr = *(undefined **)(inputData + 200);\n  FUN_080031ce(inputData + 0x40,*dataPtr,dataPtr[1],*(byte *)(inputData + 0xc4) - 2,dataPtr + 2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002df6": "process_data_08002df6",
                "param_1": "inputData",
                "puVar1": "dataPtr"
            },
            "calling": [
                "FUN_08002e26"
            ],
            "called": [
                "FUN_080031ce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002e26": {
            "entrypoint": "0x08002e26",
            "current_name": "update_parameter_08002e26",
            "code": "\nvoid updateParameter_08002e26(int baseAddress,undefined4 newParameterValue)\n\n{\n  *(undefined4 *)(baseAddress + 0xc0) = newParameterValue;\n  FUN_08003154(baseAddress + 0x40);\n  FUN_08002ddc(baseAddress);\n  FUN_08002df6(baseAddress);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002e26": "update_parameter_08002e26",
                "param_1": "baseAddress",
                "param_2": "newParameterValue"
            },
            "calling": [
                "FUN_08003048"
            ],
            "called": [
                "FUN_08002ddc",
                "FUN_08002df6",
                "FUN_08003154"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002e44": {
            "entrypoint": "0x08002e44",
            "current_name": "update_file_path_08002e44",
            "code": "\nvoid updateFilePath_08002e44(int result,int filePath,undefined undefinedParam1,undefined undefinedParam2)\n\n{\n  byte nextBufferChar;\n  char charResult;\n  int fileResult;\n  int slashIndex;\n  undefined *newFilePath;\n  \n  fileResult = FUN_080099a4(filePath,\".cpp\");\n  slashIndex = FUN_0800997e(filePath,0x2f);\n  if (slashIndex == 0) {\n    slashIndex = FUN_0800997e(filePath,0x5c);\n  }\n  if (slashIndex != 0) {\n    filePath = slashIndex + 1;\n  }\n  if (fileResult == 0) {\n    charResult = FUN_08000178(filePath);\n    *(char *)(result + 0xc4) = charResult + '\\x02';\n  }\n  else {\n    *(char *)(result + 0xc4) = ((char)fileResult - (char)filePath) + '\\x02';\n  }\n  FUN_080091a0(*(undefined4 *)(result + 200));\n  nextBufferChar = *(byte *)(result + 0xc4);\n  newFilePath = (undefined *)FUN_08009190(nextBufferChar + 1);\n  *(undefined **)(result + 200) = newFilePath;\n  newFilePath[nextBufferChar] = 0;\n  *newFilePath = undefinedParam1;\n  newFilePath[1] = undefinedParam2;\n  FUN_08009954(newFilePath + 2,filePath,*(byte *)(result + 0xc4) - 2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002e44": "update_file_path_08002e44",
                "param_1": "result",
                "param_2": "filePath",
                "param_3": "undefinedParam1",
                "param_4": "undefinedParam2",
                "bVar1": "nextBufferChar",
                "cVar2": "charResult",
                "iVar3": "fileResult",
                "iVar4": "slashIndex",
                "puVar5": "newFilePath"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_0800997e",
                "FUN_08009954",
                "FUN_080099a4",
                "FUN_08000178",
                "FUN_080091a0",
                "FUN_08009190"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ec4": {
            "entrypoint": "0x08002ec4",
            "current_name": "execute_callback_08002ec4",
            "code": "\nvoid executeCallback_08002ec4(int callbackManager)\n\n{\n  (**(code **)(**(int **)(callbackManager + 0xc0) + 8))();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ec4": "execute_callback_08002ec4",
                "param_1": "callbackManager"
            },
            "calling": [
                "FUN_080022f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ed2": {
            "entrypoint": "0x08002ed2",
            "current_name": "execute_and_process_result_08002ed2",
            "code": "\nvoid executeAndProcessResult_08002ed2(int data)\n\n{\n  uint result;\n  \n  result = (**(code **)(**(int **)(data + 0xc0) + 0xc))();\n  if (result != 0xffffffff) {\n    FUN_08003474(data + 0x44,result & 0xff);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ed2": "execute_and_process_result_08002ed2",
                "param_1": "data",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080022f8"
            ],
            "called": [
                "FUN_08003474"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ef2": {
            "entrypoint": "0x08002ef2",
            "current_name": "initialize_function_08002ef2",
            "code": "\nvoid initializeFunction_08002ef2(int inputParam,undefined4 unusedParam,undefined2 shortParam,undefined4 unusedParam2)\n\n{\n  FUN_08003158(inputParam + 0x40,unusedParam,shortParam,unusedParam2,unusedParam2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ef2": "initialize_function_08002ef2",
                "param_1": "inputParam",
                "param_2": "unusedParam",
                "param_3": "shortParam",
                "param_4": "unusedParam2"
            },
            "calling": [
                "FUN_080022f8",
                "FUN_08000488"
            ],
            "called": [
                "FUN_08003158"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002efe": {
            "entrypoint": "0x08002efe",
            "current_name": "initialize_data_08002efe",
            "code": "\nvoid initializeData_08002efe(int dataAddress,undefined4 param2,undefined2 param3,undefined4 param4)\n\n{\n  FUN_0800319e(dataAddress + 0x40,param2,param3,param4,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002efe": "initialize_data_08002efe",
                "param_1": "dataAddress",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [
                "FUN_08000be8"
            ],
            "called": [
                "FUN_0800319e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f0a": {
            "entrypoint": "0x08002f0a",
            "current_name": "execute_function_08002f0a",
            "code": "\nvoid executeFunction_08002f0a(int input)\n\n{\n  FUN_0800325a(input + 0x40);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f0a": "execute_function_08002f0a",
                "param_1": "input"
            },
            "calling": [
                "FUN_08001c18"
            ],
            "called": [
                "FUN_0800325a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f14": {
            "entrypoint": "0x08002f14",
            "current_name": "initialize_data_08002f14",
            "code": "\nvoid initializeData_08002f14(int dataPointer)\n\n{\n  FUN_080032a2(dataPointer + 0x40);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f14": "initialize_data_08002f14",
                "param_1": "dataPointer"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_08001c18",
                "FUN_08000500",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_080032a2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f1e": {
            "entrypoint": "0x08002f1e",
            "current_name": "execute_function_08002f1e",
            "code": "\nvoid executeFunction_08002f1e(int functionPointer)\n\n{\n  (**(code **)**(undefined4 **)(functionPointer + 0xc0))();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f1e": "execute_function_08002f1e",
                "param_1": "functionPointer"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f2c": {
            "entrypoint": "0x08002f2c",
            "current_name": "update_parameter_value_08002f2c",
            "code": "\nvoid updateParameterValue_08002f2c(undefined4 pointer,uint value,undefined4 newValue)\n\n{\n  undefined4 tempValue;\n  \n  if (value == 0xd0) {\n    DAT_200005f0 = newValue;\n    return;\n  }\n  if (0xd0 < value) {\n    if (value == 0xf4) {\n      DAT_200005e0 = newValue;\n      return;\n    }\n    tempValue = newValue;\n    if ((value != 0xf5) && (tempValue = DAT_200005e4, value == 0xe0)) {\n      DAT_200005d4 = newValue;\n      return;\n    }\n    DAT_200005e4 = tempValue;\n    return;\n  }\n  if (value == 0x90) {\n    DAT_200005dc = newValue;\n    return;\n  }\n  if (value != 0xc0) {\n    return;\n  }\n  DAT_200005ec = newValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f2c": "update_parameter_value_08002f2c",
                "param_1": "pointer",
                "param_2": "value",
                "param_3": "newValue",
                "uVar1": "tempValue"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f84": {
            "entrypoint": "0x08002f84",
            "current_name": "update_data_08002f84",
            "code": "\nvoid updateData_08002f84(undefined4 data_ptr,int value,undefined4 new_data)\n\n{\n  if (value == 0xff) {\n    DAT_200005e8 = new_data;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f84": "update_data_08002f84",
                "param_1": "data_ptr",
                "param_2": "value",
                "param_3": "new_data"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f94": {
            "entrypoint": "0x08002f94",
            "current_name": "update_data_storage_08002f94",
            "code": "\nvoid update_data_storage_08002f94(undefined4 source_data,undefined4 target_data,undefined4 data_to_update)\n\n{\n  DAT_200005d0 = data_to_update;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f94": "update_data_storage_08002f94",
                "param_1": "source_data",
                "param_2": "target_data",
                "param_3": "data_to_update"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fa0": {
            "entrypoint": "0x08002fa0",
            "current_name": "get_byte_from_offset_08002fa0",
            "code": "\nundefined getByteFromOffset_08002fa0(int offset,int baseAddress)\n\n{\n  return *(undefined *)(baseAddress + offset + 0xcc);\n}\n\n",
            "renaming": {
                "FUN_08002fa0": "get_byte_from_offset_08002fa0",
                "param_1": "offset",
                "param_2": "baseAddress"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_08001cd0",
                "FUN_080022f8",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fa8": {
            "entrypoint": "0x08002fa8",
            "current_name": "set_param_value_if_not_magic_number_08002fa8",
            "code": "\nvoid setParamValueIfNotMagicNumber_08002fa8(int baseAddress,int offset,undefined newValue)\n\n{\n  if (*(char *)(baseAddress + offset + 0xcc) != '\\x7f') {\n    *(undefined *)(baseAddress + offset + 0xcc) = newValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002fa8": "set_param_value_if_not_magic_number_08002fa8",
                "param_1": "baseAddress",
                "param_2": "offset",
                "param_3": "newValue"
            },
            "calling": [
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fba": {
            "entrypoint": "0x08002fba",
            "current_name": "get_memory_value_08002fba",
            "code": "\nundefined4 getMemoryValue_08002fba(int baseAddress,int offset)\n\n{\n  return *(undefined4 *)(baseAddress + (offset + 0x42) * 4);\n}\n\n",
            "renaming": {
                "FUN_08002fba": "get_memory_value_08002fba",
                "param_1": "baseAddress",
                "param_2": "offset"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fc2": {
            "entrypoint": "0x08002fc2",
            "current_name": "store_value_in_array_08002fc2",
            "code": "\nvoid storeValueInArray_08002fc2(int arrayBase,int indexOffset,undefined4 value)\n\n{\n  *(undefined4 *)(arrayBase + (indexOffset + 0x42) * 4) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002fc2": "store_value_in_array_08002fc2",
                "param_1": "arrayBase",
                "param_2": "indexOffset",
                "param_3": "value"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fca": {
            "entrypoint": "0x08002fca",
            "current_name": "perform_action_08002fca",
            "code": "\nvoid performAction_08002fca(undefined4 actionParam1,undefined4 actionParam2,int actionCount,undefined4 actionParam3,\n                 undefined4 actionParam4)\n\n{\n  uint actionIndex;\n  \n  for (actionIndex = 0; (int)actionIndex < actionCount; actionIndex = actionIndex + 1 & 0xff) {\n    FUNC_08008ac4(actionParam4);\n    FUN_08008a24(actionParam2,1);\n    FUNC_08008ac4(actionParam3);\n    FUN_08008a24(actionParam2,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002fca": "perform_action_08002fca",
                "param_1": "actionParam1",
                "param_2": "actionParam2",
                "param_3": "actionCount",
                "param_4": "actionParam3",
                "param_5": "actionParam4",
                "uVar1": "actionIndex"
            },
            "calling": [
                "FUN_08003002"
            ],
            "called": [
                "FUN_08008ac4",
                "FUN_08008a24"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003002": {
            "entrypoint": "0x08003002",
            "current_name": "check_and_execute_actions_08003002",
            "code": "\nvoid checkAndExecuteActions_08003002(int ptr)\n\n{\n  if (*(char *)(ptr + 0x1f8) != '\\0') {\n    return;\n  }\n  FUN_08008990(0xd,1);\n  FUN_08002fca(ptr,0xd,2,0x28,0xd2);\n  FUNC_08008ac4(0xfa);\n  FUN_08002fca(ptr,0xd,5,0x28,0xd2);\n  FUNC_08008ac4(0x7d);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003002": "check_and_execute_actions_08003002",
                "param_1": "ptr"
            },
            "calling": [
                "FUN_08003048"
            ],
            "called": [
                "FUN_08008990",
                "FUN_08008ac4",
                "FUN_08002fca"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003048": {
            "entrypoint": "0x08003048",
            "current_name": "initialize_data_08003048",
            "code": "\nvoid initializeData_08003048(undefined4 dataParam1,undefined4 dataParam2,undefined4 dataParam3,undefined4 dataParam4)\n\n{\n  FUN_08008c44(&DAT_20000700,dataParam2,6,dataParam4,dataParam4);\n  FUN_08003002(dataParam1);\n  FUN_08002e26(dataParam1,&DAT_20000700);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003048": "initialize_data_08003048",
                "param_1": "dataParam1",
                "param_2": "dataParam2",
                "param_3": "dataParam3",
                "param_4": "dataParam4"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08003002",
                "FUN_08002e26",
                "FUN_08008c44"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800307a": {
            "entrypoint": "0x0800307a",
            "current_name": "decode_data_0800307a",
            "code": "\nvoid decodeData_0800307a(undefined4 *funcPointer,uint inputSize,byte *inputData,uint outputSize)\n\n{\n  uint currentByte;\n  uint bitOffset;\n  uint processedBytes;\n  uint iterCount;\n  \n  currentByte = (uint)*inputData;\n  if (outputSize == 0) {\n    outputSize = 0xffffffff;\n  }\n  iterCount = 0;\n  bitOffset = 0;\n  processedBytes = 0;\n  while ((iterCount < inputSize && (processedBytes < outputSize))) {\n    (***(code ***)(undefined4 *)*funcPointer)\n              ((undefined4 *)*funcPointer,((uint)inputData[iterCount] << (bitOffset & 0xff) | currentByte) & 0x7f);\n    currentByte = (int)(uint)inputData[iterCount] >> (7 - bitOffset & 0xff) & 0xff;\n    bitOffset = bitOffset + 1;\n    while ((processedBytes = processedBytes + 1, 6 < bitOffset && (processedBytes < outputSize))) {\n      (***(code ***)(undefined4 *)*funcPointer)((undefined4 *)*funcPointer,currentByte & 0x7f);\n      currentByte = currentByte >> 7;\n      bitOffset = bitOffset - 7;\n    }\n    iterCount = iterCount + 1;\n  }\n  if ((bitOffset != 0) && (processedBytes < outputSize)) {\n    (***(code ***)(undefined4 *)*funcPointer)((undefined4 *)*funcPointer,(1 << (bitOffset & 0xff)) - 1U & currentByte)\n    ;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800307a": "decode_data_0800307a",
                "param_1": "funcPointer",
                "param_2": "inputSize",
                "param_3": "inputData",
                "param_4": "outputSize",
                "uVar1": "currentByte",
                "uVar2": "bitOffset",
                "uVar3": "processedBytes",
                "uVar4": "iterCount"
            },
            "calling": [
                "FUN_08003158",
                "FUN_080031ce",
                "FUN_08003106",
                "FUN_0800319e",
                "FUN_0800325a"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003106": {
            "entrypoint": "0x08003106",
            "current_name": "execute_function_08003106",
            "code": "\nvoid execute_function_08003106(undefined4 *function_ptr,undefined4 param_2_value,undefined4 param_3_value,undefined4 param_4_value)\n\n{\n  undefined4 *function_ptr_value;\n  \n  function_ptr_value = (undefined4 *)*function_ptr;\n  if (function_ptr_value != (undefined4 *)0x0) {\n    (**(code **)*function_ptr_value)(function_ptr_value,0xf0);\n    (***(code ***)(undefined4 *)*function_ptr)((undefined4 *)*function_ptr,0x6f);\n    (***(code ***)(undefined4 *)*function_ptr)((undefined4 *)*function_ptr,param_2_value);\n    FUN_0800307a(function_ptr,param_3_value,param_4_value,param_3_value);\n    (***(code ***)(undefined4 *)*function_ptr)((undefined4 *)*function_ptr,0xf7);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003106": "execute_function_08003106",
                "param_1": "function_ptr",
                "param_2": "param_2_value",
                "param_3": "param_3_value",
                "param_4": "param_4_value",
                "puVar1": "function_ptr_value"
            },
            "calling": [
                "FUN_08003158"
            ],
            "called": [
                "FUN_0800307a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800314e": {
            "entrypoint": "0x0800314e",
            "current_name": "initialize_pointer_0800314e",
            "code": "\nvoid initializePointer_0800314e(undefined4 *targetPointer)\n\n{\n  *targetPointer = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800314e": "initialize_pointer_0800314e",
                "param_1": "targetPointer"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003154": {
            "entrypoint": "0x08003154",
            "current_name": "copy_value_to_pointer_08003154",
            "code": "\nvoid copyValueToPointer_08003154(undefined4 *destinationPointer,undefined4 value)\n\n{\n  *destinationPointer = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003154": "copy_value_to_pointer_08003154",
                "param_1": "destinationPointer",
                "param_2": "value"
            },
            "calling": [
                "FUN_08002e26"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003158": {
            "entrypoint": "0x08003158",
            "current_name": "execute_function_08003158",
            "code": "\nvoid executeFunction_08003158(undefined4 *functionPointer,uint flag,ushort value)\n\n{\n  undefined4 *pointer;\n  ushort inputValue;\n  \n  pointer = (undefined4 *)*functionPointer;\n  if (pointer != (undefined4 *)0x0) {\n    inputValue = value;\n    if (((int)flag < 0x10) && (value < 0x4000)) {\n      (**(code **)*pointer)(pointer,flag | 0xe0);\n      FUN_0800307a(functionPointer,2,&inputValue);\n    }\n    else {\n      FUN_08003106(functionPointer,flag,2,&inputValue);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003158": "execute_function_08003158",
                "param_1": "functionPointer",
                "param_2": "flag",
                "param_3": "value",
                "puVar1": "pointer",
                "local_a": "inputValue"
            },
            "calling": [
                "FUN_08002ef2"
            ],
            "called": [
                "FUN_0800307a",
                "FUN_08003106"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800319e": {
            "entrypoint": "0x0800319e",
            "current_name": "execute_function_and_store_result_0800319e",
            "code": "\nvoid executeFunctionAndStoreResult_0800319e(undefined4 *dataPointer,uint flags,undefined2 constant)\n\n{\n  undefined4 *functionPointer;\n  undefined2 constant2;\n  \n  functionPointer = (undefined4 *)*dataPointer;\n  if (functionPointer != (undefined4 *)0x0) {\n    constant2 = constant;\n    (**(code **)*functionPointer)(functionPointer,flags & 0xf | 0x90);\n    FUN_0800307a(dataPointer,2,&constant2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800319e": "execute_function_and_store_result_0800319e",
                "param_1": "dataPointer",
                "param_2": "flags",
                "param_3": "constant",
                "puVar1": "functionPointer",
                "local_a": "constant2"
            },
            "calling": [
                "FUN_08002efe"
            ],
            "called": [
                "FUN_0800307a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080031ce": {
            "entrypoint": "0x080031ce",
            "current_name": "execute_function_080031ce",
            "code": "\nvoid executeFunction_080031ce(undefined4 *functionPointer,undefined4 param2,undefined4 param3,uint loopCount,int initialValue\n                 )\n\n{\n  undefined4 *ptrToFunction;\n  uint loopIndex;\n  \n  ptrToFunction = (undefined4 *)*functionPointer;\n  if (ptrToFunction != (undefined4 *)0x0) {\n    (**(code **)*ptrToFunction)(ptrToFunction,0xf0,param3,*(code **)*ptrToFunction,loopCount);\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,0x79);\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,param2);\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,param3);\n    for (loopIndex = 0; loopIndex < loopCount; loopIndex = loopIndex + 1) {\n      FUN_0800307a(functionPointer,1,initialValue + loopIndex,0);\n    }\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,0xf7);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080031ce": "execute_function_080031ce",
                "param_1": "functionPointer",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "loopCount",
                "param_5": "initialValue",
                "puVar1": "ptrToFunction",
                "uVar2": "loopIndex"
            },
            "calling": [
                "FUN_08002df6"
            ],
            "called": [
                "FUN_0800307a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800322c": {
            "entrypoint": "0x0800322c",
            "current_name": "execute_function_0800322c",
            "code": "\nvoid executeFunction_0800322c(undefined4 *functionPointer,undefined4 param_2,undefined4 param_3)\n\n{\n  undefined4 *function;\n  \n  function = (undefined4 *)*functionPointer;\n  if (function != (undefined4 *)0x0) {\n    (**(code **)*function)(function,0xf9);\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,param_2);\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,param_3);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800322c": "execute_function_0800322c",
                "param_1": "functionPointer",
                "puVar1": "function"
            },
            "calling": [
                "FUN_08002ddc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800325a": {
            "entrypoint": "0x0800325a",
            "current_name": "execute_function_0800325a",
            "code": "\nvoid executeFunction_0800325a(undefined4 *functionPointer,undefined4 arg1,uint numIterations,int startValue)\n\n{\n  undefined4 *ptrToFunction;\n  uint iterationCount;\n  \n  ptrToFunction = (undefined4 *)*functionPointer;\n  if (ptrToFunction != (undefined4 *)0x0) {\n    (**(code **)*ptrToFunction)(ptrToFunction,0xf0);\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,arg1);\n    for (iterationCount = 0; iterationCount < numIterations; iterationCount = iterationCount + 1) {\n      FUN_0800307a(functionPointer,1,startValue + iterationCount,0);\n    }\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,0xf7);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800325a": "execute_function_0800325a",
                "param_1": "functionPointer",
                "param_2": "arg1",
                "param_3": "numIterations",
                "param_4": "startValue",
                "puVar1": "ptrToFunction",
                "uVar2": "iterationCount"
            },
            "calling": [
                "FUN_08002f0a",
                "FUN_080032a2"
            ],
            "called": [
                "FUN_0800307a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080032a2": {
            "entrypoint": "0x080032a2",
            "current_name": "send_command_080032a2",
            "code": "\nvoid sendCommand_080032a2(undefined4 commandBuffer,undefined4 param1,undefined4 param2,undefined4 param3)\n\n{\n  undefined4 result;\n  \n  result = FUN_08000178(param1);\n  FUN_0800325a(commandBuffer,0x71,result,param1,param3);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080032a2": "send_command_080032a2",
                "param_1": "commandBuffer",
                "param_2": "param1",
                "param_3": "param2",
                "param_4": "param3",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08002f14"
            ],
            "called": [
                "FUN_08000178",
                "FUN_0800325a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080032bc": {
            "entrypoint": "0x080032bc",
            "current_name": "initialize_data_struct_080032bc",
            "code": "\nvoid initializeDataStruct_080032bc(int dataStruct,int value,undefined4 param)\n\n{\n  *(int *)(dataStruct + 4) = value;\n  *(undefined4 *)(dataStruct + 8) = param;\n  *(undefined *)(dataStruct + 0xc) = 0;\n  *(undefined *)(dataStruct + 0xd) = 0;\n  *(undefined4 *)(dataStruct + 0x10) = 0;\n  *(undefined *)(dataStruct + 0x14) = 0;\n  *(undefined4 *)(dataStruct + 0x18) = 0;\n  *(undefined4 *)(dataStruct + 0x1c) = 0;\n  *(undefined4 *)(dataStruct + 0x20) = 0;\n  *(undefined4 *)(dataStruct + 0x24) = 0;\n  *(undefined4 *)(dataStruct + 0x28) = 0;\n  *(undefined4 *)(dataStruct + 0x2c) = 0;\n  *(undefined4 *)(dataStruct + 0x30) = 0;\n  *(undefined4 *)(dataStruct + 0x34) = 0;\n  *(undefined4 *)(dataStruct + 0x38) = 0;\n  *(undefined4 *)(dataStruct + 0x3c) = 0;\n  *(undefined4 *)(dataStruct + 0x40) = 0;\n  *(undefined4 *)(dataStruct + 0x44) = 0;\n  *(undefined4 *)(dataStruct + 0x48) = 0;\n  *(undefined4 *)(dataStruct + 0x4c) = 0;\n  *(undefined4 *)(dataStruct + 0x50) = 0;\n  *(undefined4 *)(dataStruct + 0x54) = 0;\n  *(undefined4 *)(dataStruct + 0x58) = 0;\n  *(undefined4 *)(dataStruct + 0x5c) = 0;\n  *(undefined4 *)(dataStruct + 0x60) = 0;\n  *(undefined4 *)(dataStruct + 100) = 0;\n  *(undefined4 *)(dataStruct + 0x68) = 0;\n  *(undefined4 *)(dataStruct + 0x6c) = 0;\n  *(undefined4 *)(dataStruct + 0x70) = 0;\n  *(undefined4 *)(dataStruct + 0x74) = 0;\n  *(undefined4 *)(dataStruct + 0x78) = 0;\n  *(bool *)dataStruct = value == 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080032bc": "initialize_data_struct_080032bc",
                "param_1": "dataStruct",
                "param_2": "value",
                "param_3": "param"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003306": {
            "entrypoint": "0x08003306",
            "current_name": "update_parameters_08003306",
            "code": "\nvoid updateParameters_08003306(int ptr,uint value,undefined4 data1,undefined4 data2)\n\n{\n  if (value == 0xd0) {\n    *(undefined4 *)(ptr + 0x58) = data1;\n    *(undefined4 *)(ptr + 0x28) = data2;\n    return;\n  }\n  if (0xd0 < value) {\n    if (value == 0xf4) {\n      *(undefined4 *)(ptr + 0x5c) = data1;\n      *(undefined4 *)(ptr + 0x2c) = data2;\n      return;\n    }\n    if (value == 0xf5) {\n      *(undefined4 *)(ptr + 0x60) = data1;\n      *(undefined4 *)(ptr + 0x30) = data2;\n    }\n    else if (value == 0xe0) {\n      *(undefined4 *)(ptr + 0x4c) = data1;\n      *(undefined4 *)(ptr + 0x1c) = data2;\n      return;\n    }\n    return;\n  }\n  if (value == 0x90) {\n    *(undefined4 *)(ptr + 0x50) = data1;\n    *(undefined4 *)(ptr + 0x20) = data2;\n    return;\n  }\n  if (value == 0xc0) {\n    *(undefined4 *)(ptr + 0x54) = data1;\n    *(undefined4 *)(ptr + 0x24) = data2;\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003306": "update_parameters_08003306",
                "param_1": "ptr",
                "param_2": "value",
                "param_3": "data1",
                "param_4": "data2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003346": {
            "entrypoint": "0x08003346",
            "current_name": "update_data_08003346",
            "code": "\nvoid updateData_08003346(int dataAddress,int value,undefined4 newValue1,undefined4 newValue2)\n\n{\n  if (value == 0x79) {\n    *(undefined4 *)(dataAddress + 0x70) = newValue1;\n    *(undefined4 *)(dataAddress + 0x34) = newValue2;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003346": "update_data_08003346",
                "param_1": "dataAddress",
                "param_2": "value",
                "param_3": "newValue1",
                "param_4": "newValue2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003350": {
            "entrypoint": "0x08003350",
            "current_name": "update_parameters_08003350",
            "code": "\nvoid updateParameters_08003350(int ptr_struct,int param_value,undefined4 new_value_1,undefined4 new_value_2)\n\n{\n  if (param_value == 0xf9) {\n    *(undefined4 *)(ptr_struct + 0x74) = new_value_1;\n    *(undefined4 *)(ptr_struct + 0x38) = new_value_2;\n    return;\n  }\n  if (param_value != 0xff) {\n    return;\n  }\n  *(undefined4 *)(ptr_struct + 0x78) = new_value_1;\n  *(undefined4 *)(ptr_struct + 0x48) = new_value_2;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003350": "update_parameters_08003350",
                "param_1": "ptr_struct",
                "param_2": "param_value",
                "param_3": "new_value_1",
                "param_4": "new_value_2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003366": {
            "entrypoint": "0x08003366",
            "current_name": "store_params_if_param2_equal_to113_08003366",
            "code": "\nvoid storeParamsIfParam2EqualTo113_08003366(int objAddress,int paramValue,undefined4 valueToStore1,undefined4 valueToStore2)\n\n{\n  if (paramValue == 0x71) {\n    *(undefined4 *)(objAddress + 0x68) = valueToStore1;\n    *(undefined4 *)(objAddress + 0x40) = valueToStore2;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003366": "store_params_if_param2_equal_to113_08003366",
                "param_1": "objAddress",
                "param_2": "paramValue",
                "param_3": "valueToStore1",
                "param_4": "valueToStore2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003370": {
            "entrypoint": "0x08003370",
            "current_name": "update_settings_08003370",
            "code": "\nvoid updateSettings_08003370(int objectAddress,undefined4 unusedParam1,undefined4 newValue1,undefined4 newValue2)\n\n{\n  *(undefined4 *)(objectAddress + 0x6c) = newValue1;\n  *(undefined4 *)(objectAddress + 0x44) = newValue2;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003370": "update_settings_08003370",
                "param_1": "objectAddress",
                "param_2": "unusedParam1",
                "param_3": "newValue1",
                "param_4": "newValue2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003376": {
            "entrypoint": "0x08003376",
            "current_name": "update_data_08003376",
            "code": "\nvoid updateData_08003376(undefined *dataPtr,undefined newData,uint newValue)\n\n{\n  bool isValueUpdated;\n  \n  if (newValue < *(uint *)(dataPtr + 8)) {\n    isValueUpdated = false;\n  }\n  else {\n    isValueUpdated = true;\n    if (*(code **)(dataPtr + 100) != (code *)0x0) {\n      *dataPtr = 1;\n      (**(code **)(dataPtr + 100))(*(undefined4 *)(dataPtr + 0x3c));\n      if (newValue < *(uint *)(dataPtr + 8)) {\n        isValueUpdated = false;\n      }\n      else {\n        isValueUpdated = true;\n      }\n    }\n  }\n  if (!isValueUpdated) {\n    *(undefined *)(*(int *)(dataPtr + 4) + newValue) = newData;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003376": "update_data_08003376",
                "param_1": "dataPtr",
                "param_2": "newData",
                "param_3": "newValue",
                "bVar1": "isValueUpdated"
            },
            "calling": [
                "FUN_08003474",
                "FUN_080033cc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080033a8": {
            "entrypoint": "0x080033a8",
            "current_name": "copy_and_shift_bits_080033a8",
            "code": "\nvoid copyAndShiftBits_080033a8(undefined4 sourceSize,uint numElements,int destination)\n\n{\n  byte currentByte;\n  int destinationIndex;\n  uint sourceIndex;\n  \n  destinationIndex = 0;\n  for (sourceIndex = 0; sourceIndex < numElements; sourceIndex = sourceIndex + 2) {\n    currentByte = *(byte *)(destination + sourceIndex);\n    *(byte *)(destination + destinationIndex) = currentByte;\n    *(byte *)(destination + destinationIndex) = *(char *)(destination + sourceIndex + 1) << 7 | currentByte;\n    destinationIndex = destinationIndex + 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080033a8": "copy_and_shift_bits_080033a8",
                "param_1": "sourceSize",
                "param_2": "numElements",
                "param_3": "destination",
                "bVar1": "currentByte",
                "iVar2": "destinationIndex",
                "uVar3": "sourceIndex"
            },
            "calling": [
                "FUN_080033cc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080033cc": {
            "entrypoint": "0x080033cc",
            "current_name": "process_data_080033cc",
            "code": "\nvoid processData_080033cc(int data_ptr,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  char first_char;\n  int counter;\n  char *char_ptr;\n  \n  char_ptr = *(char **)(data_ptr + 4);\n  first_char = *char_ptr;\n  if (first_char == 'q') {\n    if (*(int *)(data_ptr + 0x68) != 0) {\n      counter = FUN_080033a8(data_ptr,*(int *)(data_ptr + 0x18) + -1,char_ptr + 1,char_ptr,param4);\n      FUN_08003376(data_ptr,0,counter + 1);\n      (**(code **)(data_ptr + 0x68))(*(undefined4 *)(data_ptr + 0x40),*(int *)(data_ptr + 4) + 1);\n      return;\n    }\n  }\n  else if (first_char == 'y') {\n    if (*(code **)(data_ptr + 0x70) != (code *)0x0) {\n      if (*(uint *)(data_ptr + 0x18) < 3) {\n        (**(code **)(data_ptr + 0x70))(*(undefined4 *)(data_ptr + 0x34),0,0);\n        return;\n      }\n      counter = FUN_080033a8(data_ptr,*(uint *)(data_ptr + 0x18) - 3,char_ptr + 3,char_ptr,param4);\n      FUN_08003376(data_ptr,0,counter + 3);\n      counter = *(int *)(data_ptr + 4);\n      (**(code **)(data_ptr + 0x70))\n                (*(undefined4 *)(data_ptr + 0x34),*(undefined *)(counter + 1),*(undefined *)(counter + 2)\n                 ,counter + 3);\n      return;\n    }\n  }\n  else if (*(code **)(data_ptr + 0x6c) != (code *)0x0) {\n    (**(code **)(data_ptr + 0x6c))\n              (*(undefined4 *)(data_ptr + 0x44),first_char,*(int *)(data_ptr + 0x18) + -1,char_ptr + 1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080033cc": "process_data_080033cc",
                "param_1": "data_ptr",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "cVar1": "first_char",
                "iVar2": "counter",
                "pcVar3": "char_ptr"
            },
            "calling": [
                "FUN_08003474"
            ],
            "called": [
                "FUN_08003376",
                "FUN_080033a8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800344a": {
            "entrypoint": "0x0800344a",
            "current_name": "initialize_data_0800344a",
            "code": "\nvoid initializeData_0800344a(int dataAddress)\n\n{\n  uint index;\n  \n  *(undefined4 *)(dataAddress + 0x10) = 0;\n  *(undefined *)(dataAddress + 0xc) = 0;\n  *(undefined *)(dataAddress + 0xd) = 0;\n  for (index = 0; index < *(uint *)(dataAddress + 8); index = index + 1) {\n    *(undefined *)(*(int *)(dataAddress + 4) + index) = 0;\n  }\n  *(undefined *)(dataAddress + 0x14) = 0;\n  *(undefined4 *)(dataAddress + 0x18) = 0;\n  if (*(code **)(dataAddress + 0x78) != (code *)0x0) {\n    (**(code **)(dataAddress + 0x78))(*(undefined4 *)(dataAddress + 0x48));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800344a": "initialize_data_0800344a",
                "param_1": "dataAddress",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08003474"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003474": {
            "entrypoint": "0x08003474",
            "current_name": "process_input_08003474",
            "code": "\nvoid processInput_08003474(int inputBuffer,uint inputValue)\n\n{\n  byte byteValue;\n  \n  if (*(char *)(inputBuffer + 0x14) != '\\0') {\n    if (inputValue != 0xf7) {\n      FUN_08003376(inputBuffer,inputValue,*(undefined4 *)(inputBuffer + 0x18));\n      *(int *)(inputBuffer + 0x18) = *(int *)(inputBuffer + 0x18) + 1;\n      return;\n    }\n    *(undefined *)(inputBuffer + 0x14) = 0;\n    FUN_080033cc();\n    return;\n  }\n  if ((*(int *)(inputBuffer + 0x10) == 0) || (0x7f < (int)inputValue)) {\n    if ((int)inputValue < 0xf0) {\n      *(byte *)(inputBuffer + 0xd) = (byte)inputValue & 0xf;\n      inputValue = inputValue & 0xf0;\n    }\n    if (inputValue == 0xf0) {\n      *(undefined *)(inputBuffer + 0x14) = 1;\n      *(undefined4 *)(inputBuffer + 0x18) = 0;\n      return;\n    }\n    if (inputValue < 0xf1) {\n      if (inputValue != 0xc0) {\n        if (inputValue < 0xc1) {\n          if (inputValue != 0x90) {\n            return;\n          }\n        }\n        else {\n          if (inputValue == 0xd0) goto LAB_0800359c;\n          if (inputValue != 0xe0) {\n            return;\n          }\n        }\nLAB_08003586:\n        *(undefined4 *)(inputBuffer + 0x10) = 2;\n        *(char *)(inputBuffer + 0xc) = (char)inputValue;\n        return;\n      }\nLAB_0800359c:\n      *(undefined4 *)(inputBuffer + 0x10) = 1;\n      *(char *)(inputBuffer + 0xc) = (char)inputValue;\n      return;\n    }\n    if (inputValue != 0xf9) {\n      if (0xf9 < inputValue) {\n        if (inputValue == 0xff) {\n          FUN_0800344a(inputBuffer);\n          return;\n        }\n        return;\n      }\n      if (1 < inputValue - 0xf4) {\n        return;\n      }\n      goto LAB_08003586;\n    }\n    if (*(code **)(inputBuffer + 0x74) != (code *)0x0) {\n      (**(code **)(inputBuffer + 0x74))(*(undefined4 *)(inputBuffer + 0x38));\n    }\n  }\n  else {\n    *(int *)(inputBuffer + 0x10) = *(int *)(inputBuffer + 0x10) + -1;\n    FUN_08003376();\n    if ((*(int *)(inputBuffer + 0x10) == 0) && (byteValue = *(byte *)(inputBuffer + 0xc), byteValue != 0)) {\n      if (byteValue == 0xd0) {\n        if (*(code **)(inputBuffer + 0x58) != (code *)0x0) {\n          (**(code **)(inputBuffer + 0x58))\n                    (*(undefined4 *)(inputBuffer + 0x28),*(undefined *)(inputBuffer + 0xd),\n                     **(undefined **)(inputBuffer + 4));\n        }\n      }\n      else if (byteValue < 0xd1) {\n        if (byteValue == 0x90) {\n          if (*(code **)(inputBuffer + 0x50) != (code *)0x0) {\n            (**(code **)(inputBuffer + 0x50))\n                      (*(undefined4 *)(inputBuffer + 0x20),*(undefined *)(inputBuffer + 0xd),\n                       (uint)(*(byte **)(inputBuffer + 4))[1] + (uint)**(byte **)(inputBuffer + 4) * 0x80);\n          }\n        }\n        else if ((byteValue == 0xc0) && (*(code **)(inputBuffer + 0x54) != (code *)0x0)) {\n          (**(code **)(inputBuffer + 0x54))\n                    (*(undefined4 *)(inputBuffer + 0x24),*(undefined *)(inputBuffer + 0xd),\n                     **(undefined **)(inputBuffer + 4));\n        }\n      }\n      else if (byteValue == 0xf4) {\n        if (*(code **)(inputBuffer + 0x5c) != (code *)0x0) {\n          (**(code **)(inputBuffer + 0x5c))\n                    (*(undefined4 *)(inputBuffer + 0x2c),(*(undefined **)(inputBuffer + 4))[1],\n                     **(undefined **)(inputBuffer + 4));\n        }\n      }\n      else if (byteValue == 0xf5) {\n        if (*(code **)(inputBuffer + 0x60) != (code *)0x0) {\n          (**(code **)(inputBuffer + 0x60))\n                    (*(undefined4 *)(inputBuffer + 0x30),(*(undefined **)(inputBuffer + 4))[1],\n                     **(undefined **)(inputBuffer + 4));\n        }\n      }\n      else if ((byteValue == 0xe0) && (*(code **)(inputBuffer + 0x4c) != (code *)0x0)) {\n        (**(code **)(inputBuffer + 0x4c))\n                  (*(undefined4 *)(inputBuffer + 0x1c),*(undefined *)(inputBuffer + 0xd),\n                   (uint)(*(byte **)(inputBuffer + 4))[1] + (uint)**(byte **)(inputBuffer + 4) * 0x80);\n      }\n      *(undefined *)(inputBuffer + 0xc) = 0;\n      return;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003474": "process_input_08003474",
                "param_1": "inputBuffer",
                "param_2": "inputValue",
                "bVar1": "byteValue"
            },
            "calling": [
                "FUN_08002ed2"
            ],
            "called": [
                "FUN_08003376",
                "FUN_080033cc",
                "FUN_0800344a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080035b8": {
            "entrypoint": "0x080035b8",
            "current_name": "initialize_components_080035b8",
            "code": "\nvoid initializeComponents_080035b8(void)\n\n{\n  int result;\n  uint timeValue;\n  undefined4 componentFlags2 [2];\n  undefined4 constantValue2;\n  undefined4 component3;\n  undefined4 component4;\n  undefined4 component5;\n  undefined4 component6;\n  undefined4 component7;\n  undefined4 componentFlags [4];\n  undefined4 deviceFlag;\n  undefined4 bufferSize;\n  undefined4 component1;\n  undefined4 component2;\n  undefined4 constantValue;\n  \n  componentFlags[0] = 2;\n  deviceFlag = 1;\n  bufferSize = 0x10;\n  component1 = 2;\n  component2 = 0;\n  constantValue = 0x380000;\n  result = FUN_08005460(componentFlags);\n  if (result != 0) {\n    FUN_080073e8(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x88);\n  }\n  component3 = 0xf;\n  component4 = 2;\n  component5 = 0;\n  component6 = 0x400;\n  component7 = 0;\n  result = FUN_080058ac(&component3);\n  if (result != 0) {\n    FUN_080073e8(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x95);\n  }\n  componentFlags2[0] = 2;\n  constantValue2 = 0x8000;\n  result = FUN_08005aa4(componentFlags2);\n  if (result != 0) {\n    FUN_080073e8(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x9c);\n  }\n  timeValue = FUN_08005a1c();\n  FUN_08003fd8(timeValue / 1000);\n  FUN_08004024(4);\n  FUN_08003f30(0xffffffff,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080035b8": "initialize_components_080035b8",
                "local_30": "componentFlags",
                "local_20": "deviceFlag",
                "local_1c": "bufferSize",
                "local_14": "component1",
                "local_10": "component2",
                "local_c": "constantValue",
                "iVar1": "result",
                "local_44": "component3",
                "local_40": "component4",
                "local_3c": "component5",
                "local_38": "component6",
                "local_34": "component7",
                "local_54": "componentFlags2",
                "local_4c": "constantValue2",
                "uVar2": "timeValue"
            },
            "calling": [
                "FUN_080072fa"
            ],
            "called": [
                "FUN_08005a1c",
                "FUN_08005aa4",
                "FUN_08004024",
                "FUN_08003fd8",
                "FUN_08003f30",
                "FUN_08005460",
                "FUN_080073e8",
                "FUN_080058ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "entry": {
            "entrypoint": "0x08003658",
            "current_name": "entry",
            "code": "\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined4 *)(iVar1 + 0x20000000) < &DAT_200000f4; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x800ac18);\n  }\n  for (puVar2 = &DAT_200000f4; puVar2 < &DAT_20000a3c; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  FUN_080073ec();\n  FUN_08009148();\n  UNRECOVERED_JUMPTABLE = (code *)0x800368a;\n  FUN_08008f1c();\n                    /* WARNING: Could not recover jumptable at 0x0800368a. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "renaming": {},
            "calling": [],
            "called": [
                "FUN_080073ec",
                "FUN_08009148",
                "FUN_08008f1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036a2": {
            "entrypoint": "0x080036a2",
            "current_name": "initialize_application_080036a2",
            "code": "\nvoid initialize_application_080036a2(void)\n\n{\n  FUN_080072fa();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080036a2": "initialize_application_080036a2"
            },
            "calling": [
                "FUN_08008f0e"
            ],
            "called": [
                "FUN_080072fa"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036ac": {
            "entrypoint": "0x080036ac",
            "current_name": "check_range_and_find_value_080036ac",
            "code": "\nuint checkRangeAndFindValue_080036ac(int input_value)\n\n{\n  uint index;\n  \n  if ((uint)(input_value << 0x18) >> 0x1c < 5) {\n    for (index = 0; (index < 0x3c && (input_value != (char)(&DAT_0800a908)[index])); index = index + 1)\n    {\n    }\n  }\n  else {\n    index = 0xffffffff;\n  }\n  return index;\n}\n\n",
            "renaming": {
                "FUN_080036ac": "check_range_and_find_value_080036ac",
                "param_1": "input_value",
                "uVar1": "index"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_08001cd0",
                "FUN_08000aec",
                "FUN_080022f8",
                "FUN_08000a64",
                "FUN_08000ef8",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036d4": {
            "entrypoint": "0x080036d4",
            "current_name": "FUNC_080036d4",
            "code": "\nvoid FUNC_080036d4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080036d4": "FUNC_080036d4"
            },
            "calling": [
                "FUN_08003724"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080036d8": {
            "entrypoint": "0x080036d8",
            "current_name": "initialize_data_080036d8",
            "code": "\nundefined4 initializeData_080036d8(uint inputValue)\n\n{\n  int result;\n  \n  result = FUN_08003fd8(DAT_20000018 / (1000 / DAT_2000000c));\n  if (result != 0) {\n    return 1;\n  }\n  if (0xf < inputValue) {\n    return 1;\n  }\n  FUN_08003f30(0xffffffff,inputValue,0);\n  DAT_20000010 = inputValue;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080036d8": "initialize_data_080036d8",
                "param_1": "inputValue",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08003724",
                "FUN_080058d2"
            ],
            "called": [
                "FUN_08003fd8",
                "FUN_08003f30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003724": {
            "entrypoint": "0x08003724",
            "current_name": "enable_io_functionality_08003724",
            "code": "\n\n\nundefined4 enableIOFunctionality_08003724(void)\n\n{\n  _DAT_40022000 = _DAT_40022000 | 0x10;\n  FUN_08003f0c(3);\n  FUN_080036d8(0xf);\n  FUNC_080036d4();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003724": "enable_io_functionality_08003724"
            },
            "calling": [
                "FUN_080072fa"
            ],
            "called": [
                "FUN_080036d4",
                "FUN_080036d8",
                "FUN_08003f0c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003748": {
            "entrypoint": "0x08003748",
            "current_name": "accumulate_integer_with_offset_08003748",
            "code": "\nvoid accumulateIntegerWithOffset_08003748(void)\n\n{\n  DAT_20000a34 = (uint)DAT_2000000c + DAT_20000a34;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003748": "accumulate_integer_with_offset_08003748"
            },
            "calling": [
                "FUN_08007246"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003760": {
            "entrypoint": "0x08003760",
            "current_name": "get_data_value_08003760",
            "code": "\nundefined4 get_data_value_08003760(void)\n\n{\n  return DAT_20000a34;\n}\n\n",
            "renaming": {
                "FUN_08003760": "get_data_value_08003760"
            },
            "calling": [
                "FUN_080066e8",
                "FUN_080067ac",
                "FUN_0800376c",
                "FUN_08003b8c",
                "FUN_080058d2",
                "FUN_08007e74",
                "FUN_08008500",
                "FUN_08005aa4",
                "FUN_08007f0e",
                "FUN_0800723c",
                "FUN_08003a20",
                "FUN_08003e20",
                "FUN_08005460"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800376c": {
            "entrypoint": "0x0800376c",
            "current_name": "execute_task_0800376c",
            "code": "\nundefined4 executeTask_0800376c(uint **taskParameters,uint limit)\n\n{\n  int initialValue;\n  uint constantValue;\n  int tempValue;\n  undefined4 result;\n  uint *dataPointer;\n  uint calculationResult;\n  uint counter;\n  \n  counter = 0;\n  initialValue = FUN_08003760();\n  calculationResult = DAT_20000018;\n  dataPointer = *taskParameters;\n  if ((dataPointer[2] & 0x100) == 0) {\n    if (((dataPointer[1] & 0x100) == 0) && ((dataPointer[0xb] & 0xf00000) == 0)) {\n      do {\n        if ((**taskParameters & 2) != 0) goto LAB_0800387e;\n      } while ((limit == 0xffffffff) ||\n              ((limit != 0 && (tempValue = FUN_08003760(), (uint)(tempValue - initialValue) <= limit))));\n      taskParameters[10] = (uint *)((uint)taskParameters[10] | 4);\n      *(undefined *)(taskParameters + 9) = 0;\n      result = 3;\n    }\n    else {\n      constantValue = FUN_08005bb8(2);\n      dataPointer = *taskParameters;\n      if (((dataPointer[4] & 0x24924924) == 0) && ((dataPointer[3] & 0x924924) == 0)) {\n        if ((dataPointer[4] & 0x12492492) == 0) {\n          if ((dataPointer[3] & 0x492492) == 0) {\n            tempValue = 0x14;\n          }\n          else {\n            tempValue = 0x29;\n          }\n        }\n        else {\n          tempValue = 0x29;\n        }\n      }\n      else if (((dataPointer[4] & 0x12492492) == 0) && ((dataPointer[3] & 0x492492) == 0)) {\n        tempValue = 0x54;\n      }\n      else if ((dataPointer[4] & 0x249249) == 0) {\n        if ((dataPointer[3] & 0x249249) == 0) {\n          tempValue = 0x54;\n        }\n        else {\n          tempValue = 0xfc;\n        }\n      }\n      else {\n        tempValue = 0xfc;\n      }\n      calculationResult = (calculationResult / constantValue) * tempValue;\n      for (; counter <= calculationResult && calculationResult - counter != 0; counter = counter + 1) {\n        if ((limit != 0xffffffff) &&\n           ((limit == 0 || (tempValue = FUN_08003760(), limit < (uint)(tempValue - initialValue))))) {\n          taskParameters[10] = (uint *)((uint)taskParameters[10] | 4);\n          *(undefined *)(taskParameters + 9) = 0;\n          return 3;\n        }\n      }\nLAB_0800387e:\n      **taskParameters = 0xffffffed;\n      taskParameters[10] = (uint *)((uint)taskParameters[10] | 0x200);\n      if (((*taskParameters)[2] & 0xe0000) == 0xe0000) {\n        if (taskParameters[3] == (uint *)0x0) {\n          taskParameters[10] = (uint *)((uint)taskParameters[10] & 0xfffffeff);\n          if (((uint)taskParameters[10] & 0x1000) == 0) {\n            taskParameters[10] = (uint *)((uint)taskParameters[10] | 1);\n            result = 0;\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        result = 0;\n      }\n    }\n  }\n  else {\n    taskParameters[10] = (uint *)((uint)taskParameters[10] | 0x20);\n    *(undefined *)(taskParameters + 9) = 0;\n    result = 1;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_0800376c": "execute_task_0800376c",
                "param_1": "taskParameters",
                "param_2": "limit",
                "iVar1": "initialValue",
                "uVar2": "constantValue",
                "iVar3": "tempValue",
                "uVar4": "result",
                "puVar5": "dataPointer",
                "uVar6": "calculationResult",
                "local_1c": "counter"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08005bb8",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080038dc": {
            "entrypoint": "0x080038dc",
            "current_name": "get_offset_value_080038dc",
            "code": "\nundefined4 getOffsetValue_080038dc(int *offsetPointer)\n\n{\n  return *(undefined4 *)(*offsetPointer + 0x4c);\n}\n\n",
            "renaming": {
                "FUN_080038dc": "get_offset_value_080038dc",
                "param_1": "offsetPointer"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080038e4": {
            "entrypoint": "0x080038e4",
            "current_name": "set_configuration_values_080038e4",
            "code": "\nundefined4 setConfigurationValues_080038e4(int *configParams,uint *values)\n\n{\n  undefined4 result;\n  uint shiftValue;\n  int counter;\n  \n  if (*(char *)(configParams + 9) == '\\x01') {\n    result = 2;\n  }\n  else {\n    *(undefined *)(configParams + 9) = 1;\n    shiftValue = values[1];\n    if (shiftValue < 7) {\n      shiftValue = shiftValue * 5 - 5;\n      *(uint *)(*configParams + 0x34) =\n           *values << (shiftValue & 0xff) | *(uint *)(*configParams + 0x34) & ~(0x1f << (shiftValue & 0xff));\n    }\n    else if (shiftValue < 0xd) {\n      shiftValue = shiftValue * 5 - 0x23;\n      *(uint *)(*configParams + 0x30) =\n           *values << (shiftValue & 0xff) | *(uint *)(*configParams + 0x30) & ~(0x1f << (shiftValue & 0xff));\n    }\n    else {\n      shiftValue = shiftValue * 5 - 0x41;\n      *(uint *)(*configParams + 0x2c) =\n           *values << (shiftValue & 0xff) | *(uint *)(*configParams + 0x2c) & ~(0x1f << (shiftValue & 0xff));\n    }\n    shiftValue = *values;\n    if (shiftValue < 10) {\n      *(uint *)(*configParams + 0x10) =\n           values[2] << (shiftValue * 3 & 0xff) |\n           *(uint *)(*configParams + 0x10) & ~(7 << (shiftValue * 3 & 0xff));\n    }\n    else {\n      shiftValue = shiftValue * 3 - 0x1e;\n      *(uint *)(*configParams + 0xc) =\n           values[2] << (shiftValue & 0xff) | *(uint *)(*configParams + 0xc) & ~(7 << (shiftValue & 0xff));\n    }\n    if (*values - 0x10 < 2) {\n      if (*configParams == 0x40012400) {\n        if ((uRam40012408 & 0x800000) == 0) {\n          uRam40012408 = uRam40012408 | 0x800000;\n          if (*values == 0x10) {\n            for (counter = (DAT_20000018 / 1000000) * 10; counter != 0; counter = counter + -1) {\n            }\n            result = 0;\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        configParams[10] = configParams[10] | 0x20;\n        result = 1;\n      }\n    }\n    else {\n      result = 0;\n    }\n    *(undefined *)(configParams + 9) = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080038e4": "set_configuration_values_080038e4",
                "param_1": "configParams",
                "param_2": "values",
                "uVar1": "result",
                "uVar2": "shiftValue",
                "local_c": "counter"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a1c": {
            "entrypoint": "0x08003a1c",
            "current_name": "get_value_at_offset_08003a1c",
            "code": "\nundefined4 get_value_at_offset_08003a1c(int input_address)\n\n{\n  return *(undefined4 *)(input_address + 0x28);\n}\n\n",
            "renaming": {
                "FUN_08003a1c": "get_value_at_offset_08003a1c",
                "param_1": "input_address"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a20": {
            "entrypoint": "0x08003a20",
            "current_name": "mark_resource_as_processed_08003a20",
            "code": "\nundefined4 markResourceAsProcessed_08003a20(int *resource,undefined4 status)\n\n{\n  int result;\n  undefined4 returnValue;\n  int resourceData;\n  uint delay;\n  \n  resourceData = *resource;\n  if ((*(uint *)(resourceData + 8) & 1) == 0) {\n    *(uint *)(resourceData + 8) = *(uint *)(resourceData + 8) | 1;\n    for (delay = DAT_20000018 / 1000000; delay != 0; delay = delay - 1) {\n    }\n    resourceData = FUN_08003760(resource,status,DAT_20000018 * 0x431bde83);\n    do {\n      if ((*(uint *)(*resource + 8) & 1) != 0) {\n        return 0;\n      }\n      result = FUN_08003760();\n    } while ((uint)(result - resourceData) < 3);\n    resource[10] = resource[10] | 0x10;\n    resource[0xb] = resource[0xb] | 1;\n    *(undefined *)(resource + 9) = 0;\n    returnValue = 1;\n  }\n  else {\n    returnValue = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08003a20": "mark_resource_as_processed_08003a20",
                "param_1": "resource",
                "param_2": "status",
                "iVar1": "result",
                "iVar3": "resourceData",
                "uVar2": "returnValue",
                "local_14": "delay"
            },
            "calling": [
                "FUN_08003e20",
                "FUN_08003aa0"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003aa0": {
            "entrypoint": "0x08003aa0",
            "current_name": "initialize_flags_08003aa0",
            "code": "\n\n\nint initializeFlags_08003aa0(int *flags)\n\n{\n  int result;\n  undefined4 *baseAddress;\n  int address;\n  \n  if (*(char *)(flags + 9) != '\\x01') {\n    *(undefined *)(flags + 9) = 1;\n    result = FUN_08003a20();\n    if (result == 0) {\n      flags[10] = flags[10] & 0xfffffcfeU | 0x100;\n      baseAddress = (undefined4 *)*flags;\n      if ((baseAddress == (undefined4 *)0x40012800) && ((_DAT_40012404 & 0xf0000) != 0)) {\n        flags[10] = flags[10] | 0x100000;\n        if ((_DAT_40012404 & 0x400) != 0) {\n          flags[10] = flags[10] & 0xffffcfffU | 0x1000;\n        }\n      }\n      else {\n        flags[10] = flags[10] & 0xffefffff;\n        if ((baseAddress[1] & 0x400) != 0) {\n          flags[10] = flags[10] & 0xffffcfffU | 0x1000;\n        }\n      }\n      if ((flags[10] & 0x1000U) == 0) {\n        flags[0xb] = 0;\n      }\n      else {\n        flags[0xb] = flags[0xb] & 0xfffffff9;\n      }\n      *(undefined *)(flags + 9) = 0;\n      *baseAddress = 0xfffffffd;\n      address = *flags;\n      if (((*(uint *)(address + 8) & 0xe0000) == 0xe0000) &&\n         ((address != 0x40012800 || ((_DAT_40012404 & 0xf0000) == 0)))) {\n        *(uint *)(address + 8) = *(uint *)(address + 8) | 0x500000;\n      }\n      else {\n        *(uint *)(address + 8) = *(uint *)(address + 8) | 0x100000;\n      }\n    }\n    else {\n      *(undefined *)(flags + 9) = 0;\n    }\n    return result;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08003aa0": "initialize_flags_08003aa0",
                "param_1": "flags",
                "iVar1": "result",
                "puVar2": "baseAddress",
                "iVar3": "address"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08003a20"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003b8c": {
            "entrypoint": "0x08003b8c",
            "current_name": "check_and_update_flags_08003b8c",
            "code": "\nundefined4 checkAndUpdateFlags_08003b8c(int *pointer)\n\n{\n  int result1;\n  int value;\n  \n  value = *pointer;\n  if ((*(uint *)(value + 8) & 1) == 0) {\n    return 0;\n  }\n  *(uint *)(value + 8) = *(uint *)(value + 8) & 0xfffffffe;\n  value = FUN_08003760();\n  do {\n    if ((*(uint *)(*pointer + 8) & 1) == 0) {\n      return 0;\n    }\n    result1 = FUN_08003760();\n  } while ((uint)(result1 - value) < 3);\n  flag1 = flag1 | 0x10;\n  flag2 = flag2 | 1;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08003b8c": "check_and_update_flags_08003b8c",
                "param_1": "pointer",
                "iVar1": "result1",
                "iVar2": "value",
                "param_1[10]": "flag1",
                "param_1[0xb]": "flag2"
            },
            "calling": [
                "FUN_08003bd8",
                "FUN_08003ce8",
                "FUN_08003e20",
                "FUN_08003de4"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003bd8": {
            "entrypoint": "0x08003bd8",
            "current_name": "validate_configuration_08003bd8",
            "code": "\nundefined4 validate_configuration_08003bd8(int *config)\n\n{\n  int result;\n  uint mask1;\n  uint mask2;\n  \n  if (config == (int *)0x0) {\n    return 1;\n  }\n  if (config[10] == 0) {\n    config[0xb] = 0;\n    *(undefined *)(config + 9) = 0;\n    FUN_08006ca8();\n  }\n  result = FUN_08003b8c(config);\n  if (((config[10] & 0x10U) == 0) && (result == 0)) {\n    config[10] = config[10] & 0xffffeefdU | 2;\n    mask1 = config[1] | config[7] | config[3] << 1;\n    if (config[2] == 0x100) {\n      mask2 = 0x100;\n    }\n    else {\n      mask2 = 0;\n      if (config[2] == 1) {\n        mask2 = 0x100;\n      }\n    }\n    if (config[5] == 1) {\n      if (config[3] == 0) {\n        mask2 = mask2 | (config[6] + -1) * 0x2000 | 0x800;\n      }\n      else {\n        config[10] = config[10] | 0x20;\n        config[0xb] = config[0xb] | 1;\n      }\n    }\n    *(uint *)(*config + 4) = mask2 | *(uint *)(*config + 4) & 0xffff16ff;\n    *(uint *)(*config + 8) = *(uint *)(*config + 8) & 0xffe1f7fd | mask1;\n    if ((config[2] == 0x100) || (config[2] == 1)) {\n      mask2 = (config[4] + -1) * 0x100000;\n    }\n    else {\n      mask2 = 0;\n    }\n    *(uint *)(*config + 0x2c) = mask2 | *(uint *)(*config + 0x2c) & 0xff0fffff;\n    if (mask1 != (*(uint *)(*config + 8) & 0xff1f0efe)) {\n      config[10] = config[10] & 0xffffffedU | 0x10;\n      config[0xb] = config[0xb] | 1;\n      return 1;\n    }\n    config[0xb] = 0;\n    config[10] = config[10] & 0xfffffffcU | 1;\n    return 0;\n  }\n  config[10] = config[10] | 0x10;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08003bd8": "validate_configuration_08003bd8",
                "param_1": "config",
                "iVar1": "result",
                "uVar2": "mask1",
                "uVar3": "mask2"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08006ca8",
                "FUN_08003b8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ce8": {
            "entrypoint": "0x08003ce8",
            "current_name": "set_memory_attributes_08003ce8",
            "code": "\nint setMemoryAttributes_08003ce8(int *memoryBlock)\n\n{\n  int result;\n  \n  if (memoryBlock == (int *)0x0) {\n    result = 1;\n  }\n  else {\n    memoryBlock[10] = memoryBlock[10] | 2;\n    result = FUN_08003b8c();\n    if (result == 0) {\n      *(undefined4 *)*memoryBlock = 0xffffffe0;\n      *(uint *)(*memoryBlock + 4) = *(uint *)(*memoryBlock + 4) & 0xff3f0000;\n      *(uint *)(*memoryBlock + 8) = *(uint *)(*memoryBlock + 8) & 0xff0106f0;\n      *(uint *)(*memoryBlock + 0xc) = *(uint *)(*memoryBlock + 0xc) & 0xff000000;\n      *(uint *)(*memoryBlock + 0x10) = *(uint *)(*memoryBlock + 0x10) & 0xc0000000;\n      *(uint *)(*memoryBlock + 0x14) = *(uint *)(*memoryBlock + 0x14) & 0xfffff000;\n      *(uint *)(*memoryBlock + 0x18) = *(uint *)(*memoryBlock + 0x18) & 0xfffff000;\n      *(uint *)(*memoryBlock + 0x1c) = *(uint *)(*memoryBlock + 0x1c) & 0xfffff000;\n      *(uint *)(*memoryBlock + 0x20) = *(uint *)(*memoryBlock + 0x20) & 0xfffff000;\n      *(uint *)(*memoryBlock + 0x24) = *(uint *)(*memoryBlock + 0x24) & 0xfffff000;\n      *(uint *)(*memoryBlock + 0x28) = *(uint *)(*memoryBlock + 0x28) & 0xfffff000;\n      *(uint *)(*memoryBlock + 0x2c) = *(uint *)(*memoryBlock + 0x2c) & 0xff000000;\n      *(uint *)(*memoryBlock + 0x2c) = *(uint *)(*memoryBlock + 0x2c) & 0xff000000;\n      *(uint *)(*memoryBlock + 0x30) = *(uint *)(*memoryBlock + 0x30) & 0xc0000000;\n      *(uint *)(*memoryBlock + 0x34) = *(uint *)(*memoryBlock + 0x34) & 0xc0000000;\n      *(uint *)(*memoryBlock + 0x38) = *(uint *)(*memoryBlock + 0x38) & 0xffc00000;\n      *(uint *)(*memoryBlock + 0x38) = *(uint *)(*memoryBlock + 0x38) & 0xffc00000;\n      FUN_08006d24(memoryBlock);\n      memoryBlock[0xb] = 0;\n      memoryBlock[10] = 0;\n    }\n    *(undefined *)(memoryBlock + 9) = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08003ce8": "set_memory_attributes_08003ce8",
                "param_1": "memoryBlock",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08006d24",
                "FUN_08003b8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003de4": {
            "entrypoint": "0x08003de4",
            "current_name": "check_and_modify_flags_08003de4",
            "code": "\nint checkAndModifyFlags_08003de4(int inputValue)\n\n{\n  int returnValue;\n  \n  if (*(char *)(inputValue + 0x24) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(inputValue + 0x24) = 1;\n  returnValue = FUN_08003b8c();\n  if (returnValue == 0) {\n    *(uint *)(inputValue + 0x28) = *(uint *)(inputValue + 0x28) & 0xffffeefe | 1;\n  }\n  *(undefined *)(inputValue + 0x24) = 0;\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08003de4": "check_and_modify_flags_08003de4",
                "param_1": "inputValue",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08003b8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003e20": {
            "entrypoint": "0x08003e20",
            "current_name": "check_and_update_status_08003e20",
            "code": "\nint check_and_update_status_08003e20(int *function_data)\n\n{\n  uint division_factor;\n  int result;\n  uint multiplication_factor;\n  int initial_value;\n  int current_value;\n  int counter;\n  \n  if (*(char *)(function_data + 9) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(function_data + 9) = 1;\n  result = FUN_08003b8c();\n  if (result == 0) {\n    function_data[10] = function_data[10] & 0xffffeefdU | 2;\n    division_factor = DAT_20000018;\n    multiplication_factor = FUN_08005bb8(2);\n    for (counter = division_factor / multiplication_factor << 1; counter != 0; counter = counter + -1) {\n    }\n    FUN_08003a20(function_data);\n    *(uint *)(*function_data + 8) = *(uint *)(*function_data + 8) | 8;\n    initial_value = FUN_08003760();\n    while (current_value = *function_data, (*(uint *)(current_value + 8) & 8) != 0) {\n      current_value = FUN_08003760();\n      if (10 < (uint)(current_value - initial_value)) {\n        function_data[10] = function_data[10] & 0xffffffedU | 0x10;\n        *(undefined *)(function_data + 9) = 0;\n        return 1;\n      }\n    }\n    *(uint *)(current_value + 8) = *(uint *)(current_value + 8) | 4;\n    initial_value = FUN_08003760();\n    while ((*(uint *)(*function_data + 8) & 4) != 0) {\n      current_value = FUN_08003760();\n      if (10 < (uint)(current_value - initial_value)) {\n        function_data[10] = function_data[10] & 0xffffffedU | 0x10;\n        *(undefined *)(function_data + 9) = 0;\n        return 1;\n      }\n    }\n    function_data[10] = function_data[10] & 0xfffffffcU | 1;\n  }\n  *(undefined *)(function_data + 9) = 0;\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08003e20": "check_and_update_status_08003e20",
                "param_1": "function_data",
                "uVar1": "division_factor",
                "iVar2": "result",
                "uVar3": "multiplication_factor",
                "iVar4": "initial_value",
                "iVar5": "current_value",
                "local_14": "counter"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08003a20",
                "FUN_08003b8c",
                "FUN_08005bb8",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f0c": {
            "entrypoint": "0x08003f0c",
            "current_name": "update_register_value_08003f0c",
            "code": "\n\n\nvoid updateRegisterValue_08003f0c(uint inputValue)\n\n{\n  _DAT_e000ed0c = (inputValue & 7) << 8 | _DAT_e000ed0c & 0xf8ff | 0x5fa0000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f0c": "update_register_value_08003f0c",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08008f0e",
                "FUN_08003724"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f30": {
            "entrypoint": "0x08003f30",
            "current_name": "apply_bit_mask_08003f30",
            "code": "\n\n\nvoid applyBitMask_08003f30(uint address,uint bitMask1,uint bitMask2)\n\n{\n  uint shiftedBits;\n  uint remainingBits;\n  \n  shiftedBits = (uint)(_DAT_e000ed0c << 0x15) >> 0x1d;\n  remainingBits = 7 - shiftedBits;\n  if (3 < remainingBits) {\n    remainingBits = 4;\n  }\n  if (shiftedBits + 4 < 7) {\n    shiftedBits = 0;\n  }\n  else {\n    shiftedBits = shiftedBits - 3;\n  }\n  shiftedBits = (bitMask1 & (1 << (remainingBits & 0xff)) - 1U) << (shiftedBits & 0xff) |\n          (1 << (shiftedBits & 0xff)) - 1U & bitMask2;\n  if ((int)address < 0) {\n    *(char *)((address & 0xf) + 0xe000ed14) = (char)(shiftedBits << 4);\n  }\n  else {\n    *(char *)(address + 0xe000e400) = (char)(shiftedBits << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f30": "apply_bit_mask_08003f30",
                "param_1": "address",
                "param_2": "bitMask1",
                "param_3": "bitMask2",
                "uVar1": "shiftedBits",
                "uVar2": "remainingBits"
            },
            "calling": [
                "FUN_08007648",
                "FUN_080077b0",
                "FUN_08008694",
                "FUN_080036d8",
                "FUN_080035b8",
                "FUN_0800863c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f94": {
            "entrypoint": "0x08003f94",
            "current_name": "set_bit_in_array_08003f94",
            "code": "\nvoid setBitInArray_08003f94(uint bitIndex)\n\n{\n  if (-1 < (int)bitIndex) {\n    *(int *)((bitIndex >> 5) * 4 + -0x1fff1f00) = 1 << (bitIndex & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f94": "set_bit_in_array_08003f94",
                "param_1": "bitIndex"
            },
            "calling": [
                "FUN_08007648",
                "FUN_080077b0",
                "FUN_08008694",
                "FUN_0800863c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003fb0": {
            "entrypoint": "0x08003fb0",
            "current_name": "set_bit_08003fb0",
            "code": "\nvoid setBit_08003fb0(uint bitIndex)\n\n{\n  if (-1 < (int)bitIndex) {\n    *(int *)(((bitIndex >> 5) + 0x20) * 4 + -0x1fff1f00) = 1 << (bitIndex & 0x1f);\n    syncData(0xf);\n    syncInstructions(0xf);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003fb0": "set_bit_08003fb0",
                "param_1": "bitIndex",
                "DataSynchronizationBarrier": "syncData",
                "InstructionSynchronizationBarrier": "syncInstructions"
            },
            "calling": [
                "FUN_080076e0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003fd8": {
            "entrypoint": "0x08003fd8",
            "current_name": "set_values_08003fd8",
            "code": "\n\n\nundefined4 set_values_08003fd8(int input_value)\n\n{\n  if (input_value - 1U < 0x1000000) {\n    _DAT_e000e014 = input_value - 1U;\n    DAT_e000ed23 = 0xf0;\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08003fd8": "set_values_08003fd8",
                "param_1": "input_value"
            },
            "calling": [
                "FUN_080036d8",
                "FUN_080035b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004004": {
            "entrypoint": "0x08004004",
            "current_name": "set_bit_in_array_08004004",
            "code": "\nvoid setBitInArray_08004004(uint bitIndex)\n\n{\n  if (-1 < (int)bitIndex) {\n    *(int *)(((bitIndex >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (bitIndex & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004004": "set_bit_in_array_08004004",
                "param_1": "bitIndex"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004024": {
            "entrypoint": "0x08004024",
            "current_name": "update_flag_08004024",
            "code": "\n\n\nvoid updateFlag_08004024(int input)\n\n{\n  if (input != 4) {\n    _DAT_e000e010 = _DAT_e000e010 & 0xfffffffb;\n    return;\n  }\n  _DAT_e000e010 = _DAT_e000e010 | 4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004024": "update_flag_08004024",
                "param_1": "input"
            },
            "calling": [
                "FUN_080035b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004044": {
            "entrypoint": "0x08004044",
            "current_name": "FUNC_08004044",
            "code": "\nvoid FUNC_08004044(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004044": "FUNC_08004044"
            },
            "calling": [
                "FUN_08004046"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004046": {
            "entrypoint": "0x08004046",
            "current_name": "initialize_08004046",
            "code": "\nvoid initialize_08004046(void)\n\n{\n  FUNC_08004044();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004046": "initialize_08004046"
            },
            "calling": [
                "FUN_08007246"
            ],
            "called": [
                "FUN_08004044"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004050": {
            "entrypoint": "0x08004050",
            "current_name": "update_data_08004050",
            "code": "\n\n\nundefined4 updateData_08004050(uint **data)\n\n{\n  uint *value;\n  \n  if (*(char *)((int)data + 0x21) != '\\x02') {\n    data[0xe] = (uint *)0x4;\n    return 1;\n  }\n  **data = **data & 0xfffffff1;\n  **data = **data & 0xfffffffe;\n  value = *data;\n  if (value == (uint *)0x40020008) {\n    _DAT_40020004 = 1;\n  }\n  else if (value == (uint *)0x4002001c) {\n    _DAT_40020004 = 0x10;\n  }\n  else if (value == (uint *)0x40020030) {\n    _DAT_40020004 = 0x100;\n  }\n  else if (value == (uint *)0x40020044) {\n    _DAT_40020004 = 0x1000;\n  }\n  else if (value == (uint *)0x40020058) {\n    _DAT_40020004 = 0x10000;\n  }\n  else if (value == (uint *)0x4002006c) {\n    _DAT_40020004 = 0x100000;\n  }\n  else {\n    _DAT_40020004 = 0x1000000;\n  }\n  *(undefined *)((int)data + 0x21) = 1;\n  *(undefined *)(data + 8) = 0;\n  if (data[0xd] != (uint *)0x0) {\n    (*(code *)data[0xd])();\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004050": "update_data_08004050",
                "param_1": "data",
                "puVar1": "value"
            },
            "calling": [
                "FUN_080069ec",
                "FUN_08004f3c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040e8": {
            "entrypoint": "0x080040e8",
            "current_name": "update_bits_080040e8",
            "code": "\n\n\nvoid updateBits_080040e8(uint *bitsToUpdate,uint *bitmask)\n\n{\n  uint *bitsToUpdatePtr;\n  uint bit;\n  uint bitmaskResult;\n  uint index;\n  uint value;\n  uint updatedBits;\n  int bitIndex;\n  int portIndex;\n  \n  updatedBits = 0;\n  index = 0;\n  do {\n    if (0xf < index) {\n      return;\n    }\n    bit = 1 << (index & 0xff);\n    bitmaskResult = *bitmask & bit;\n    if (bit == bitmaskResult) {\n      value = bitmask[1];\n      if (value == 0x12) {\n        updatedBits = bitmask[3] + 0xc;\n      }\n      else if (value < 0x13) {\n        if (value == 2) {\n          updatedBits = bitmask[3] + 8;\n        }\n        else if (value < 3) {\n          if (value == 0) goto LAB_0800423a;\n          if (value == 1) {\n            updatedBits = bitmask[3];\n          }\n        }\n        else if (value == 3) {\n          updatedBits = 0;\n        }\n        else if (value == 0x11) {\n          updatedBits = bitmask[3] + 4;\n        }\n      }\n      else if (value == 0x10210000) {\nLAB_0800423a:\n        if (bitmask[2] == 0) {\n          updatedBits = 4;\n        }\n        else if (bitmask[2] == 1) {\n          bitsToUpdate[4] = bit;\n          updatedBits = 8;\n        }\n        else {\n          bitsToUpdate[5] = bit;\n          updatedBits = 8;\n        }\n      }\n      else if (value < 0x10210001) {\n        if ((value == 0x10110000) || (value == 0x10120000)) goto LAB_0800423a;\n      }\n      else if ((value == 0x10310000) || ((value == 0x10320000 || (value == 0x10220000))))\n      goto LAB_0800423a;\n      bit = index;\n      bitsToUpdatePtr = bitsToUpdate;\n      if (0xff < bitmaskResult) {\n        bit = index - 8;\n        bitsToUpdatePtr = bitsToUpdate + 1;\n      }\n      *bitsToUpdatePtr = *bitsToUpdatePtr & ~(0xf << (bit << 2 & 0xff)) | updatedBits << (bit << 2 & 0xff);\n      if ((bitmask[1] & 0x10000000) != 0) {\n        _DAT_40021018 = _DAT_40021018 | 1;\n        bitIndex = (index & 3) << 2;\n        if (bitsToUpdate == (uint *)0x40010800) {\n          portIndex = 0;\n        }\n        else if (bitsToUpdate == (uint *)0x40010c00) {\n          portIndex = 1;\n        }\n        else if (bitsToUpdate == (uint *)0x40011000) {\n          portIndex = 2;\n        }\n        else if (bitsToUpdate == (uint *)0x40011400) {\n          portIndex = 3;\n        }\n        else {\n          portIndex = 4;\n        }\n        *(uint *)(((index >> 2) + 2) * 4 + 0x40010000) =\n             *(uint *)(((index >> 2) + 2) * 4 + 0x40010000) & ~(0xf << bitIndex) | portIndex << bitIndex;\n        if ((bitmask[1] & 0x10000) == 0) {\n          _DAT_40010400 = _DAT_40010400 & ~bitmaskResult;\n        }\n        else {\n          _DAT_40010400 = _DAT_40010400 | bitmaskResult;\n        }\n        if ((bitmask[1] & 0x20000) == 0) {\n          _DAT_40010404 = _DAT_40010404 & ~bitmaskResult;\n        }\n        else {\n          _DAT_40010404 = _DAT_40010404 | bitmaskResult;\n        }\n        if ((bitmask[1] & 0x100000) == 0) {\n          _DAT_40010408 = _DAT_40010408 & ~bitmaskResult;\n        }\n        else {\n          _DAT_40010408 = _DAT_40010408 | bitmaskResult;\n        }\n        if ((bitmask[1] & 0x200000) == 0) {\n          _DAT_4001040c = _DAT_4001040c & ~bitmaskResult;\n        }\n        else {\n          _DAT_4001040c = bitmaskResult | _DAT_4001040c;\n        }\n      }\n    }\n    index = index + 1;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080040e8": "update_bits_080040e8",
                "param_1": "bitsToUpdate",
                "param_2": "bitmask",
                "puVar1": "bitsToUpdatePtr",
                "uVar2": "bit",
                "uVar3": "bitmaskResult",
                "uVar4": "index",
                "uVar5": "value",
                "uVar6": "updatedBits",
                "iVar7": "bitIndex",
                "iVar8": "portIndex"
            },
            "calling": [
                "FUN_08006ca8",
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08006e68",
                "FUN_08007258"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080042d4": {
            "entrypoint": "0x080042d4",
            "current_name": "check_bit_080042d4",
            "code": "\nundefined4 check_bit_080042d4(int data_ptr,uint flags)\n\n{\n  if ((flags & *(uint *)(data_ptr + 8)) == 0) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080042d4": "check_bit_080042d4",
                "param_1": "data_ptr",
                "param_2": "flags"
            },
            "calling": [
                "FUN_080072f0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080042e2": {
            "entrypoint": "0x080042e2",
            "current_name": "set_param_value_080042e2",
            "code": "\nvoid setParamValue_080042e2(int objPtr,int value,int isShifted)\n\n{\n  if (isShifted == 0) {\n    *(int *)(objPtr + 0x10) = value << 0x10;\n    return;\n  }\n  *(int *)(objPtr + 0x10) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080042e2": "set_param_value_080042e2",
                "param_1": "objPtr",
                "param_2": "value",
                "param_3": "isShifted"
            },
            "calling": [
                "FUN_080072d8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080042f0": {
            "entrypoint": "0x080042f0",
            "current_name": "update_variable_and_call_function_080042f0",
            "code": "\n\n\nvoid update_variable_and_call_function_080042f0(uint input_value)\n\n{\n  if ((_DAT_40010414 & input_value) != 0) {\n    _DAT_40010414 = input_value;\n    FUN_08009094();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080042f0": "update_variable_and_call_function_080042f0",
                "param_1": "input_value"
            },
            "calling": [],
            "called": [
                "FUN_08009094"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800430c": {
            "entrypoint": "0x0800430c",
            "current_name": "handle_param_0800430c",
            "code": "\nundefined4 handle_param_0800430c(int *param_array)\n\n{\n  if (*(char *)((int)param_array + 0x3e) == '@') {\n    if (condition1 == 0) {\n      *(uint *)(*param_array + 0x10) = value & 0xfe;\n    }\n    else {\n      *(uint *)(*param_array + 0x10) = value & 0xffU | 1;\n    }\n  }\n  else if (condition2 == 0x4000) {\n    if (*(char *)((int)param_array + 0x3d) == '!') {\n      *(uint *)(*param_array + 0x10) = value & 0xfe;\n    }\n    else {\n      *(uint *)(*param_array + 0x10) = value & 0xffU | 1;\n    }\n  }\n  else if (condition1 == 0) {\n    *(uint *)(*param_array + 0x10) = (uint)(value << 0x10) >> 0x17 & 6 | 0xf0;\n  }\n  else if (condition1 == 1) {\n    *(uint *)(*param_array + 0x10) = (uint)(value << 0x10) >> 0x17 & 6 | 0xf1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800430c": "handle_param_0800430c",
                "param_1": "param_array",
                "param_1[0x14]": "condition1",
                "param_1[0x11]": "value",
                "param_1[4]": "condition2"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004396": {
            "entrypoint": "0x08004396",
            "current_name": "store_value_in_memory_08004396",
            "code": "\nundefined4 storeValueInMemory_08004396(int *sourceArray)\n\n{\n  *(uint *)(*sourceArray + 0x10) = sourceArray[0x11] & 0xff;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004396": "store_value_in_memory_08004396",
                "param_1": "sourceArray"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080043a2": {
            "entrypoint": "0x080043a2",
            "current_name": "update_flags_080043a2",
            "code": "\nundefined4 updateFlags_080043a2(uint **parameters)\n\n{\n  uint *ptrVar1;\n  \n  ptrVar1 = parameters[0xb];\n  if ((*(char *)((int)parameters + 0x3d) == '\\\"') &&\n     ((parameters[0x14] != (uint *)0x0 || (*(char *)((int)parameters + 0x3e) != '@')))) {\n    if ((parameters[0x14] == (uint *)0x0) && (parameters[4] == (uint *)0xc000)) {\n      **parameters = **parameters | 0x100;\n      parameters[0x14] = (uint *)((int)parameters[0x14] + 1);\n    }\n    else {\n      if (*(short *)((int)parameters + 0x2a) == 0) {\n        **parameters = **parameters | 0x200;\n      }\n      else if (*(short *)((int)parameters + 0x2a) == 1) {\n        if (ptrVar1 == (uint *)0xffff0000) {\n          **parameters = **parameters & 0xfffffbff;\n          ptrVar1 = *parameters;\n          if ((ptrVar1[1] & 0x800) == 0) {\n            *ptrVar1 = *ptrVar1 | 0x200;\n          }\n          else {\n            *ptrVar1 = *ptrVar1 & 0xfffffbff;\n          }\n        }\n        else if (((ptrVar1 == (uint *)0x4) || (ptrVar1 == (uint *)0x8)) ||\n                (parameters[0xc] == (uint *)0x12)) {\n          **parameters = **parameters & 0xfffffbff;\n          **parameters = **parameters | 0x200;\n        }\n        else if (parameters[0xb] == (uint *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters & 0xfffffbff;\n        }\n      }\n      else if (*(short *)((int)parameters + 0x2a) == 2) {\n        if (parameters[0xb] == (uint *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters | 0x800;\n          **parameters = **parameters & 0xfffffbff;\n        }\n        ptrVar1 = *parameters;\n        if ((ptrVar1[1] & 0x800) != 0) {\n          ptrVar1[1] = ptrVar1[1] | 0x1000;\n        }\n      }\n      else {\n        **parameters = **parameters | 0x400;\n        ptrVar1 = *parameters;\n        if ((ptrVar1[1] & 0x800) != 0) {\n          ptrVar1[1] = ptrVar1[1] | 0x1000;\n        }\n      }\n      parameters[0x14] = (uint *)0x0;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080043a2": "update_flags_080043a2",
                "param_1": "parameters",
                "puVar1": "ptrVar1"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800457c": {
            "entrypoint": "0x0800457c",
            "current_name": "update_param_0800457c",
            "code": "\nundefined4 updateParam_0800457c(int *paramArray)\n\n{\n  byte *bytePointer;\n  \n  if (*(short *)((int)paramArray + 0x2a) != 0) {\n    bytePointer = (byte *)arrayElement;\n    arrayElement = (int)(bytePointer + 1);\n    *(uint *)(*paramArray + 0x10) = (uint)*bytePointer;\n    *(short *)((int)paramArray + 0x2a) = *(short *)((int)paramArray + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800457c": "update_param_0800457c",
                "param_1": "paramArray",
                "pbVar1": "bytePointer",
                "param_1[9]": "arrayElement"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800459c": {
            "entrypoint": "0x0800459c",
            "current_name": "update_parameter_0800459c",
            "code": "\nundefined4 updateParameter_0800459c(int *parameter)\n\n{\n  undefined *pointer;\n  \n  if (*(short *)((int)parameter + 0x2a) != 0) {\n    pointer = (undefined *)ptr;\n    ptr = (int)(pointer + 1);\n    *pointer = (char)*(undefined4 *)(*parameter + 0x10);\n    *(short *)((int)parameter + 0x2a) = *(short *)((int)parameter + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800459c": "update_parameter_0800459c",
                "param_1": "parameter",
                "puVar1": "pointer",
                "param_1[9]": "ptr"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080045bc": {
            "entrypoint": "0x080045bc",
            "current_name": "FUNC_080045bc",
            "code": "\nvoid FUNC_080045bc(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080045bc": "FUNC_080045bc"
            },
            "calling": [
                "FUN_080045c0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080045c0": {
            "entrypoint": "0x080045c0",
            "current_name": "calculate_values_080045c0",
            "code": "\nundefined4 calculateValues_080045c0(uint **inputParams)\n\n{\n  bool isConditionMet;\n  uint result1;\n  uint *result2;\n  uint result3;\n  \n  if (inputParams == (uint **)0x0) {\n    return 1;\n  }\n  if (*(char *)((int)inputParams + 0x3d) == '\\0') {\n    *(undefined *)(inputParams + 0xf) = 0;\n    FUNC_080045bc();\n  }\n  *(undefined *)((int)inputParams + 0x3d) = 0x24;\n  **inputParams = **inputParams & 0xfffffffe;\n  result1 = FUN_08005a28();\n  if (inputParams[1] < (uint *)0x186a1) {\n    if (result1 < 2000000) {\n      isConditionMet = true;\n    }\n    else {\n      isConditionMet = false;\n    }\n  }\n  else {\n    isConditionMet = result1 < 4000000;\n  }\n  if (isConditionMet) {\n    return 1;\n  }\n  result3 = result1 / 1000000;\n  (*inputParams)[1] = result3;\n  if ((uint *)0x186a0 < inputParams[1]) {\n    result3 = (result3 * 300) / 1000;\n  }\n  (*inputParams)[8] = result3 + 1;\n  result2 = inputParams[1];\n  if (result2 < (uint *)0x186a1) {\n    result1 = (result1 - 1) / (uint)((int)result2 << 1) + 1 & 0xfff;\n    if (result1 < 4) {\n      result1 = 4;\n    }\n  }\n  else {\n    if (inputParams[2] == (uint *)0x0) {\n      result3 = (result1 - 1) / (uint)((int)result2 * 3);\n    }\n    else {\n      result3 = (result1 - 1) / (uint)((int)result2 * 0x19);\n    }\n    if ((result3 + 1 & 0xfff) == 0) {\n      result1 = 1;\n    }\n    else if (inputParams[2] == (uint *)0x0) {\n      result1 = (result1 - 1) / (uint)((int)result2 * 3) + 1 & 0xfff | 0x8000;\n    }\n    else {\n      result1 = (result1 - 1) / (uint)((int)result2 * 0x19) + 1 & 0xfff | 0xc000;\n    }\n  }\n  (*inputParams)[7] = result1;\n  **inputParams = (uint)inputParams[7] | (uint)inputParams[8];\n  (*inputParams)[2] = (uint)inputParams[4] | (uint)inputParams[3];\n  (*inputParams)[3] = (uint)inputParams[5] | (uint)inputParams[6];\n  **inputParams = **inputParams | 1;\n  inputParams[0x10] = (uint *)0x0;\n  *(undefined *)((int)inputParams + 0x3d) = 0x20;\n  inputParams[0xc] = (uint *)0x0;\n  *(undefined *)((int)inputParams + 0x3e) = 0;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080045c0": "calculate_values_080045c0",
                "param_1": "inputParams",
                "bVar1": "isConditionMet",
                "uVar2": "result1",
                "puVar3": "result2",
                "uVar4": "result3"
            },
            "calling": [
                "FUN_080077b0"
            ],
            "called": [
                "FUN_080045bc",
                "FUN_08005a28"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004728": {
            "entrypoint": "0x08004728",
            "current_name": "check_and_update_flags_08004728",
            "code": "\nundefined4 checkAndUpdateFlags_08004728(uint **addressPtr,uint *dataPtr,uint *bufferPtr,undefined2 option)\n\n{\n  undefined4 returnValue;\n  uint *pointerValue;\n  int counter;\n  \n  if (*(char *)((int)addressPtr + 0x3d) == ' ') {\n    counter = (DAT_20000018 / 25000) * 0x19;\n    do {\n      if (counter == 0) {\n        addressPtr[0xc] = (uint *)0x0;\n        *(undefined *)((int)addressPtr + 0x3d) = 0x20;\n        *(undefined *)(addressPtr + 0xf) = 0;\n        return 3;\n      }\n      pointerValue = *addressPtr;\n      counter = counter + -1;\n    } while ((pointerValue[6] & 2) != 0);\n    if (*(char *)(addressPtr + 0xf) == '\\x01') {\n      returnValue = 2;\n    }\n    else {\n      *(undefined *)(addressPtr + 0xf) = 1;\n      if ((*pointerValue & 1) == 0) {\n        *pointerValue = *pointerValue | 1;\n      }\n      **addressPtr = **addressPtr & 0xfffff7ff;\n      *(undefined *)((int)addressPtr + 0x3d) = 0x21;\n      *(undefined *)((int)addressPtr + 0x3e) = 0x10;\n      returnValue = 0;\n      addressPtr[0x10] = (uint *)0x0;\n      addressPtr[9] = bufferPtr;\n      *(undefined2 *)((int)addressPtr + 0x2a) = option;\n      addressPtr[0xb] = (uint *)0xffff0000;\n      *(undefined2 *)(addressPtr + 10) = *(undefined2 *)((int)addressPtr + 0x2a);\n      addressPtr[0x11] = dataPtr;\n      **addressPtr = **addressPtr | 0x100;\n      *(undefined *)(addressPtr + 0xf) = 0;\n      (*addressPtr)[1] = (*addressPtr)[1] | 0x700;\n    }\n  }\n  else {\n    returnValue = 2;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08004728": "check_and_update_flags_08004728",
                "param_1": "addressPtr",
                "param_2": "dataPtr",
                "param_3": "bufferPtr",
                "param_4": "option",
                "uVar1": "returnValue",
                "puVar2": "pointerValue",
                "local_c": "counter"
            },
            "calling": [
                "FUN_08007e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047f4": {
            "entrypoint": "0x080047f4",
            "current_name": "process_param_080047f4",
            "code": "\nundefined4 process_param_080047f4(uint **param_list,uint *buffer1,uint *buffer2,undefined2 param_4)\n\n{\n  undefined4 result;\n  uint *ptr;\n  int counter;\n  \n  if (*(char *)((int)param_list + 0x3d) == ' ') {\n    counter = (DAT_20000018 / 25000) * 0x19;\n    do {\n      if (counter == 0) {\n        param_list[0xc] = (uint *)0x0;\n        *(undefined *)((int)param_list + 0x3d) = 0x20;\n        *(undefined *)(param_list + 0xf) = 0;\n        return 3;\n      }\n      ptr = *param_list;\n      counter = counter + -1;\n    } while ((ptr[6] & 2) != 0);\n    if (*(char *)(param_list + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(param_list + 0xf) = 1;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **param_list = **param_list & 0xfffff7ff;\n      *(undefined *)((int)param_list + 0x3d) = 0x22;\n      *(undefined *)((int)param_list + 0x3e) = 0x10;\n      result = 0;\n      param_list[0x10] = (uint *)0x0;\n      param_list[9] = buffer2;\n      *(undefined2 *)((int)param_list + 0x2a) = param_4;\n      param_list[0xb] = (uint *)0xffff0000;\n      *(undefined2 *)(param_list + 10) = *(undefined2 *)((int)param_list + 0x2a);\n      param_list[0x11] = buffer1;\n      **param_list = **param_list | 0x400;\n      **param_list = **param_list | 0x100;\n      *(undefined *)(param_list + 0xf) = 0;\n      (*param_list)[1] = (*param_list)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080047f4": "process_param_080047f4",
                "param_1": "param_list",
                "param_2": "buffer1",
                "param_3": "buffer2",
                "uVar1": "result",
                "puVar2": "ptr",
                "local_c": "counter"
            },
            "calling": [
                "FUN_08007f0e"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080048c8": {
            "entrypoint": "0x080048c8",
            "current_name": "validate_input_080048c8",
            "code": "\nundefined4 validateInput_080048c8(uint **input_array,uint *param_ptr,int param_size,uint *param_ptr2)\n\n{\n  undefined4 result;\n  uint *ptr;\n  \n  if (*(char *)((int)input_array + 0x3d) == '(') {\n    if (param_ptr == (uint *)0x0) {\n      result = 1;\n    }\n    else if (param_size == 0) {\n      result = 1;\n    }\n    else if (*(char *)(input_array + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(input_array + 0xf) = 1;\n      ptr = *input_array;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **input_array = **input_array & 0xfffff7ff;\n      *(undefined *)((int)input_array + 0x3d) = 0x29;\n      *(undefined *)((int)input_array + 0x3e) = 0x20;\n      result = 0;\n      input_array[0x10] = (uint *)0x0;\n      input_array[9] = param_ptr;\n      *(short *)((int)input_array + 0x2a) = (short)param_size;\n      input_array[0xb] = param_ptr2;\n      *(undefined2 *)(input_array + 10) = *(undefined2 *)((int)input_array + 0x2a);\n      *(undefined *)(input_array + 0xf) = 0;\n      (*input_array)[1] = (*input_array)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080048c8": "validate_input_080048c8",
                "param_1": "input_array",
                "param_2": "param_ptr",
                "param_3": "param_size",
                "param_4": "param_ptr2",
                "uVar1": "result",
                "puVar2": "ptr"
            },
            "calling": [
                "FUN_08007fa0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004954": {
            "entrypoint": "0x08004954",
            "current_name": "check_validity_and_initialize_08004954",
            "code": "\nundefined4 checkValidityAndInitialize_08004954(uint **pointerArray,uint *valuePointer,int size,uint *dataPointer)\n\n{\n  undefined4 result;\n  uint *pointer;\n  \n  if (*(char *)((int)pointerArray + 0x3d) == '(') {\n    if (valuePointer == (uint *)0x0) {\n      result = 1;\n    }\n    else if (size == 0) {\n      result = 1;\n    }\n    else if (*(char *)(pointerArray + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(pointerArray + 0xf) = 1;\n      pointer = *pointerArray;\n      if ((*pointer & 1) == 0) {\n        *pointer = *pointer | 1;\n      }\n      **pointerArray = **pointerArray & 0xfffff7ff;\n      *(undefined *)((int)pointerArray + 0x3d) = 0x2a;\n      *(undefined *)((int)pointerArray + 0x3e) = 0x20;\n      result = 0;\n      arrayPointer = (uint *)0x0;\n      dataArray = valuePointer;\n      *(short *)((int)pointerArray + 0x2a) = (short)size;\n      pointerArray = dataPointer;\n      *(undefined2 *)(pointerArray + 10) = *(undefined2 *)((int)pointerArray + 0x2a);\n      *(undefined *)(pointerArray + 0xf) = 0;\n      (*pointerArray)[1] = (*pointerArray)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08004954": "check_validity_and_initialize_08004954",
                "param_1": "pointerArray",
                "param_2": "valuePointer",
                "param_3": "size",
                "param_4": "dataPointer",
                "uVar1": "result",
                "puVar2": "pointer",
                "param_1[0x10]": "arrayPointer",
                "param_1[9]": "dataArray",
                "param_1[0xb]": "pointerArray"
            },
            "calling": [
                "FUN_08007fa0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080049e0": {
            "entrypoint": "0x080049e0",
            "current_name": "initialize_data_080049e0",
            "code": "\nundefined4 initializeData_080049e0(uint **data)\n\n{\n  uint *ptr;\n  \n  if (*(char *)((int)data + 0x3d) != ' ') {\n    return 2;\n  }\n  *(undefined *)((int)data + 0x3d) = 0x28;\n  ptr = *data;\n  if ((*ptr & 1) == 0) {\n    *ptr = *ptr | 1;\n  }\n  **data = **data | 0x400;\n  (*data)[1] = (*data)[1] | 0x300;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080049e0": "initialize_data_080049e0",
                "param_1": "data",
                "puVar1": "ptr"
            },
            "calling": [
                "FUN_08008020",
                "FUN_08007f8e",
                "FUN_08007ff0",
                "FUN_08007f7c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a1e": {
            "entrypoint": "0x08004a1e",
            "current_name": "FUNC_08004a1e",
            "code": "\nvoid FUNC_08004a1e(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a1e": "FUNC_08004a1e"
            },
            "calling": [
                "FUN_08004b82",
                "FUN_08004ccc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004a20": {
            "entrypoint": "0x08004a20",
            "current_name": "FUNC_08004a20",
            "code": "\nvoid FUNC_08004a20(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a20": "FUNC_08004a20"
            },
            "calling": [
                "FUN_08004e3c",
                "FUN_08004d6c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004a22": {
            "entrypoint": "0x08004a22",
            "current_name": "FUNC_08004a22",
            "code": "\nvoid FUNC_08004a22(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a22": "FUNC_08004a22"
            },
            "calling": [
                "FUN_08004aec",
                "FUN_08004a24"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004a24": {
            "entrypoint": "0x08004a24",
            "current_name": "decode_and_handle_data_08004a24",
            "code": "\nundefined4 decode_and_handle_data_08004a24(int *data_ptr)\n\n{\n  char data_char;\n  byte *byte_ptr;\n  \n  data_char = *(char *)((int)data_ptr + 0x3d);\n  if (*(short *)((int)data_ptr + 0x2a) != 0) {\n    byte_ptr = (byte *)byte_array;\n    byte_array = (int)(byte_ptr + 1);\n    *(uint *)(*data_ptr + 0x10) = (uint)*byte_ptr;\n    *(short *)((int)data_ptr + 0x2a) = *(short *)((int)data_ptr + 0x2a) + -1;\n    if ((*(short *)((int)data_ptr + 0x2a) == 0) && (data_char == ')')) {\n      *(uint *)(*data_ptr + 4) = *(uint *)(*data_ptr + 4) & 0xfffffbff;\n      value = 0x21;\n      *(undefined *)((int)data_ptr + 0x3d) = 0x28;\n      FUNC_08004a22();\n    }\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004a24": "decode_and_handle_data_08004a24",
                "param_1": "data_ptr",
                "cVar1": "data_char",
                "pbVar2": "byte_ptr",
                "param_1[9]": "byte_array",
                "param_1[0xc]": "value"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a22"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a74": {
            "entrypoint": "0x08004a74",
            "current_name": "FUNC_08004a74",
            "code": "\nvoid FUNC_08004a74(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a74": "FUNC_08004a74"
            },
            "calling": [
                "FUN_08004a76",
                "FUN_08005084"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004a76": {
            "entrypoint": "0x08004a76",
            "current_name": "update_data_08004a76",
            "code": "\nundefined4 updateData_08004a76(int *data)\n\n{\n  char firstChar;\n  undefined *puVar2;\n  \n  firstChar = *(char *)((int)data + 0x3d);\n  if (*(short *)((int)data + 0x2a) != 0) {\n    puVar2 = (undefined *)puVar2;\n    puVar2 = (int)(puVar2 + 1);\n    *puVar2 = (char)*(undefined4 *)(*data + 0x10);\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    if ((*(short *)((int)data + 0x2a) == 0) && (firstChar == '*')) {\n      *(uint *)(*data + 4) = *(uint *)(*data + 4) & 0xfffffbff;\n      newValue = 0x22;\n      *(undefined *)((int)data + 0x3d) = 0x28;\n      FUNC_08004a74();\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004a76": "update_data_08004a76",
                "param_1": "data",
                "cVar1": "firstChar",
                "param_1[9]": "puVar2",
                "param_1[0xc]": "newValue"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ac2": {
            "entrypoint": "0x08004ac2",
            "current_name": "process_flag_08004ac2",
            "code": "\nundefined4 processFlag_08004ac2(int *input,undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  undefined2 result;\n  uint flag;\n  \n  flag = *(uint *)(*input + 0x18);\n  if ((flag & 0x80) == 0) {\n    result = *(undefined2 *)(input + 3);\n  }\n  else {\n    result = *(undefined2 *)(input + 6);\n  }\n  FUN_08007fa0(input,(*(uint *)(*input + 0x18) & 4) == 0,result,flag,arg3);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004ac2": "process_flag_08004ac2",
                "param_1": "input",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3",
                "uVar1": "result",
                "uVar2": "flag"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08007fa0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004aec": {
            "entrypoint": "0x08004aec",
            "current_name": "process_param_08004aec",
            "code": "\nundefined4 processParam_08004aec(uint **parameters)\n\n{\n  if (((parameters[11] == (uint *)0x4) || (parameters[11] == (uint *)0x8)) &&\n     (*(char *)((int)parameters + 0x3d) == '(')) {\n    parameters[11] = (uint *)0xffff0000;\n    (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n    (*parameters)[5] = 0xfffffbff;\n    **parameters = **parameters & 0xfffffbff;\n    parameters[12] = (uint *)0x0;\n    *(undefined *)((int)parameters + 0x3d) = 0x20;\n    *(undefined *)((int)parameters + 0x3e) = 0;\n    FUN_08007ff0();\n  }\n  else if (*(char *)((int)parameters + 0x3d) == '!') {\n    parameters[11] = (uint *)0xffff0000;\n    parameters[12] = (uint *)0x21;\n    *(undefined *)((int)parameters + 0x3d) = 0x20;\n    *(undefined *)((int)parameters + 0x3e) = 0;\n    (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n    (*parameters)[5] = 0xfffffbff;\n    **parameters = **parameters & 0xfffffbff;\n    FUNC_08004a22();\n  }\n  else {\n    (*parameters)[5] = 0xfffffbff;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004aec": "process_param_08004aec",
                "param_1": "parameters",
                "param_1[0xb]": "parameters[11]",
                "param_1[0xc]": "parameters[12]"
            },
            "calling": [
                "FUN_080052f0"
            ],
            "called": [
                "FUN_08007ff0",
                "FUN_08004a22"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b80": {
            "entrypoint": "0x08004b80",
            "current_name": "FUNC_08004b80",
            "code": "\nvoid FUNC_08004b80(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b80": "FUNC_08004b80"
            },
            "calling": [
                "FUN_08004b82",
                "FUN_08004ccc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004b82": {
            "entrypoint": "0x08004b82",
            "current_name": "update_data_08004b82",
            "code": "\nundefined4 updateData_08004b82(uint **data)\n\n{\n  char char1;\n  uint *pointer;\n  \n  char1 = *(char *)((int)data + 0x3d);\n  pointer = data[0xb];\n  if ((*(short *)(data + 10) == 0) && (char1 == '!')) {\n    if ((pointer == (uint *)0x4) || ((pointer == (uint *)0x8 || (pointer == (uint *)0xffff0000)))) {\n      (*data)[1] = (*data)[1] & 0xfffff8ff;\n      **data = **data | 0x200;\n      data[0xc] = (uint *)0x0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      if (*(char *)((int)data + 0x3e) == '@') {\n        *(undefined *)((int)data + 0x3e) = 0;\n        FUNC_08004b80();\n      }\n      else {\n        *(undefined *)((int)data + 0x3e) = 0;\n        FUNC_08004a1e();\n      }\n    }\n    else {\n      (*data)[1] = (*data)[1] & 0xfffff8ff;\n      data[0xc] = (uint *)0x11;\n      *(undefined *)((int)data + 0x3e) = 0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      FUNC_08004a1e();\n    }\n  }\n  else if ((char1 == '!') || ((*(char *)((int)data + 0x3e) == '@' && (char1 == '\\\"')))) {\n    if (*(short *)((int)data + 0x2a) == 0) {\n      (*data)[1] = (*data)[1] & 0xfffffbff;\n    }\n    else if (*(char *)((int)data + 0x3e) == '@') {\n      if (data[0x14] == (uint *)0x0) {\n        if (data[0x13] == (uint *)0x1) {\n          (*data)[4] = (uint)data[0x12] & 0xff;\n          data[0x14] = (uint *)((int)data[0x14] + 2);\n        }\n        else {\n          (*data)[4] = (uint)((int)data[0x12] << 0x10) >> 0x18;\n          data[0x14] = (uint *)((int)data[0x14] + 1);\n        }\n      }\n      else if (data[0x14] == (uint *)0x1) {\n        (*data)[4] = (uint)data[0x12] & 0xff;\n        data[0x14] = (uint *)((int)data[0x14] + 1);\n      }\n      else if (data[0x14] == (uint *)0x2) {\n        if (*(char *)((int)data + 0x3d) == '\\\"') {\n          **data = **data | 0x100;\n        }\n        else if (*(char *)((int)data + 0x3d) == '!') {\n          pointer = data[9];\n          data[9] = (uint *)((int)pointer + 1);\n          (*data)[4] = (uint)*(byte *)pointer;\n          *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n        }\n      }\n    }\n    else {\n      pointer = data[9];\n      data[9] = (uint *)((int)pointer + 1);\n      (*data)[4] = (uint)*(byte *)pointer;\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004b82": "update_data_08004b82",
                "param_1": "data",
                "cVar1": "char1",
                "puVar2": "pointer"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a1e",
                "FUN_08004b80"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ccc": {
            "entrypoint": "0x08004ccc",
            "current_name": "process_parameter_08004ccc",
            "code": "\nundefined4 process_parameter_08004ccc(uint **parameters)\n\n{\n  uint *pointer;\n  \n  pointer = parameters[0xb];\n  if (*(char *)((int)parameters + 0x3d) == '!') {\n    if (*(short *)((int)parameters + 0x2a) == 0) {\n      if (((pointer == (uint *)0x4) || (pointer == (uint *)0x8)) || (pointer == (uint *)0xffff0000)) {\n        (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n        **parameters = **parameters | 0x200;\n        pointer_value = (uint *)0x0;\n        *(undefined *)((int)parameters + 0x3d) = 0x20;\n        if (*(char *)((int)parameters + 0x3e) == '@') {\n          *(undefined *)((int)parameters + 0x3e) = 0;\n          FUNC_08004b80();\n        }\n        else {\n          *(undefined *)((int)parameters + 0x3e) = 0;\n          FUNC_08004a1e();\n        }\n      }\n      else {\n        (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n        pointer_value = (uint *)0x11;\n        *(undefined *)((int)parameters + 0x3e) = 0;\n        *(undefined *)((int)parameters + 0x3d) = 0x20;\n        FUNC_08004a1e();\n      }\n    }\n    else {\n      pointer = pointer_value_2;\n      pointer_value_2 = (uint *)((int)pointer + 1);\n      (*parameters)[4] = (uint)*(byte *)pointer;\n      *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004ccc": "process_parameter_08004ccc",
                "param_1": "parameters",
                "puVar1": "pointer",
                "param_1[0xc]": "pointer_value",
                "param_1[9]": "pointer_value_2"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a1e",
                "FUN_08004b80"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d6a": {
            "entrypoint": "0x08004d6a",
            "current_name": "FUNC_08004d6a",
            "code": "\nvoid FUNC_08004d6a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d6a": "FUNC_08004d6a"
            },
            "calling": [
                "FUN_08004e3c",
                "FUN_08004d6c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004d6c": {
            "entrypoint": "0x08004d6c",
            "current_name": "update_flags_and_values_08004d6c",
            "code": "\nundefined4 updateFlagsAndValues_08004d6c(uint **param)\n\n{\n  uint *tempPointer;\n  \n  if (*(char *)((int)param + 0x3d) == '\\\"') {\n    if (*(ushort *)((int)param + 0x2a) < 4) {\n      if (*(ushort *)((int)param + 0x2a) - 2 < 2) {\n        if (param[11] == (uint *)0x2) {\n          **param = **param | 0x400;\n        }\n        else {\n          **param = **param & 0xfffffbff;\n          **param = **param | 0x800;\n        }\n        (*param)[1] = (*param)[1] & 0xfffffbff;\n      }\n      else {\n        if (param[11] == (uint *)0x2) {\n          **param = **param | 0x400;\n        }\n        else {\n          **param = **param & 0xfffffbff;\n        }\n        (*param)[1] = (*param)[1] & 0xfffff8ff;\n        tempPointer = param[9];\n        param[9] = (uint *)((int)tempPointer + 1);\n        *(char *)tempPointer = (char)(*param)[4];\n        *(short *)((int)param + 0x2a) = *(short *)((int)param + 0x2a) + -1;\n        *(undefined *)((int)param + 0x3d) = 0x20;\n        param[0xc] = (uint *)0x0;\n        if (*(char *)((int)param + 0x3e) == '@') {\n          *(undefined *)((int)param + 0x3e) = 0;\n          FUNC_08004d6a();\n        }\n        else {\n          *(undefined *)((int)param + 0x3e) = 0;\n          FUNC_08004a20();\n        }\n      }\n    }\n    else {\n      tempPointer = param[9];\n      param[9] = (uint *)((int)tempPointer + 1);\n      *(char *)tempPointer = (char)(*param)[4];\n      *(short *)((int)param + 0x2a) = *(short *)((int)param + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004d6c": "update_flags_and_values_08004d6c",
                "param_1": "param",
                "puVar1": "tempPointer",
                "param_1[0xb]": "param[11]",
                "param_1[9]": "param[9]"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004d6a",
                "FUN_08004a20"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e3c": {
            "entrypoint": "0x08004e3c",
            "current_name": "process_data_08004e3c",
            "code": "\nundefined4 processData_08004e3c(uint **data)\n\n{\n  uint *value;\n  \n  value = data[0xb];\n  if (*(short *)((int)data + 0x2a) == 3) {\n    if (((value == (uint *)0x4) || (value == (uint *)0x8)) || (value == (uint *)0xffff0000)) {\n      **data = **data & 0xfffffbff;\n    }\n    value = data[9];\n    data[9] = (uint *)((int)value + 1);\n    *(char *)value = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  else if (*(short *)((int)data + 0x2a) == 2) {\n    if (((value == (uint *)0x4) || (value == (uint *)0x8)) || (value == (uint *)0xffff0000)) {\n      (*data)[1] = (*data)[1] & 0xfffffcff;\n      **data = **data | 0x200;\n    }\n    else {\n      if (value == (uint *)0x2) {\n        **data = **data | 0x400;\n      }\n      else {\n        **data = **data & 0xfffffbff;\n      }\n      (*data)[1] = (*data)[1] & 0xfffffcff;\n    }\n    value = data[9];\n    data[9] = (uint *)((int)value + 1);\n    *(char *)value = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    value = data[9];\n    data[9] = (uint *)((int)value + 1);\n    *(char *)value = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    *(undefined *)((int)data + 0x3d) = 0x20;\n    data[0xc] = (uint *)0x0;\n    if (*(char *)((int)data + 0x3e) == '@') {\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUNC_08004d6a();\n    }\n    else {\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUNC_08004a20();\n    }\n  }\n  else {\n    value = data[9];\n    data[9] = (uint *)((int)value + 1);\n    *(char *)value = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004e3c": "process_data_08004e3c",
                "param_1": "data",
                "puVar1": "value"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004d6a",
                "FUN_08004a20"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004f3a": {
            "entrypoint": "0x08004f3a",
            "current_name": "FUNC_08004f3a",
            "code": "\nvoid FUNC_08004f3a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004f3a": "FUNC_08004f3a"
            },
            "calling": [
                "FUN_08004f3c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004f3c": {
            "entrypoint": "0x08004f3c",
            "current_name": "process_input_08004f3c",
            "code": "\nvoid processInput_08004f3c(uint **input)\n\n{\n  int result;\n  uint *ptrVar1;\n  uint *ptrVar2;\n  \n  if (*(byte *)((int)input + 0x3d) - 0x29 < 2) {\n    input[0xc] = (uint *)0x0;\n    *(undefined *)((int)input + 0x3d) = 0x28;\n  }\n  else {\n    if ((*(char *)((int)input + 0x3d) != '`') && (((*input)[1] & 0x800) == 0)) {\n      *(undefined *)((int)input + 0x3d) = 0x20;\n    }\n    input[0xc] = (uint *)0x0;\n    *(undefined *)((int)input + 0x3e) = 0;\n  }\n  **input = **input & 0xfffff7ff;\n  ptrVar2 = *input;\n  if ((ptrVar2[1] & 0x800) == 0) {\n    if (*(char *)((int)input + 0x3d) == '`') {\n      *(undefined *)((int)input + 0x3d) = 0x20;\n      input[0x10] = (uint *)0x0;\n      if ((ptrVar2[5] & 0x40) != 0) {\n        ptrVar1 = input[9];\n        input[9] = (uint *)((int)ptrVar1 + 1);\n        *(char *)ptrVar1 = (char)ptrVar2[4];\n      }\n      **input = **input & 0xfffffffe;\n      FUNC_08004f3a(input);\n    }\n    else {\n      if ((ptrVar2[5] & 0x40) != 0) {\n        ptrVar1 = input[9];\n        input[9] = (uint *)((int)ptrVar1 + 1);\n        *(char *)ptrVar1 = (char)ptrVar2[4];\n      }\n      FUN_08008020(input);\n    }\n  }\n  else {\n    ptrVar2[1] = ptrVar2[1] & 0xfffff7ff;\n    if (*(char *)((int)input[0xd] + 0x21) == '\\x01') {\n      input[0xe][0xd] = (uint)&LAB_080053cc_1;\n      result = FUN_08004050(input[0xe]);\n      if (result != 0) {\n        if (((*input)[5] & 0x40) != 0) {\n          ptrVar2 = input[9];\n          input[9] = (uint *)((int)ptrVar2 + 1);\n          *(char *)ptrVar2 = (char)(*input)[4];\n        }\n        **input = **input & 0xfffffffe;\n        *(undefined *)((int)input + 0x3d) = 0x20;\n        (*(code *)input[0xe][0xd])();\n      }\n    }\n    else {\n      input[0xd][0xd] = (uint)&LAB_080053cc_1;\n      result = FUN_08004050(input[0xd]);\n      if (result != 0) {\n        **input = **input & 0xfffffffe;\n        *(undefined *)((int)input + 0x3d) = 0x20;\n        (*(code *)input[0xd][0xd])();\n      }\n    }\n  }\n  if ((*(char *)((int)input + 0x3d) == '(') && (((uint)input[0x10] & 4) != 0)) {\n    input[0xb] = (uint *)0xffff0000;\n    input[0xc] = (uint *)0x0;\n    *(undefined *)((int)input + 0x3d) = 0x20;\n    *(undefined *)((int)input + 0x3e) = 0;\n    FUN_08007ff0(input);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004f3c": "process_input_08004f3c",
                "param_1": "input",
                "iVar1": "result",
                "puVar2": "ptrVar1",
                "puVar3": "ptrVar2"
            },
            "calling": [
                "FUN_080052f0",
                "FUN_08005084"
            ],
            "called": [
                "FUN_08008020",
                "FUN_08004050",
                "FUN_08004f3a",
                "FUN_08007ff0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005084": {
            "entrypoint": "0x08005084",
            "current_name": "process_data_08005084",
            "code": "\nundefined4 processData_08005084(uint **data)\n\n{\n  char character;\n  uint *ptrVar1;\n  uint *ptrVar2;\n  \n  character = *(char *)((int)data + 0x3d);\n  (*data)[1] = (*data)[1] & 0xfffff8ff;\n  **data = **data | 1;\n  **data = **data & 0xfffffbff;\n  ptrVar1 = *data;\n  if ((ptrVar1[1] & 0x800) != 0) {\n    if ((*(char *)((int)data + 0x3d) == '\\\"') || (*(char *)((int)data + 0x3d) == '*')) {\n      *(short *)((int)data + 0x2a) = (short)*(undefined4 *)(*data[0xe] + 4);\n    }\n    else {\n      *(short *)((int)data + 0x2a) = (short)*(undefined4 *)(*data[0xd] + 4);\n    }\n  }\n  if (*(short *)((int)data + 0x2a) != 0) {\n    if ((ptrVar1[5] & 4) != 0) {\n      ptrVar2 = data[9];\n      data[9] = (uint *)((int)ptrVar2 + 1);\n      *(char *)ptrVar2 = (char)ptrVar1[4];\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n    if (((*data)[5] & 0x40) != 0) {\n      ptrVar1 = data[9];\n      data[9] = (uint *)((int)ptrVar1 + 1);\n      *(char *)ptrVar1 = (char)(*data)[4];\n      *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    }\n    data[0x10] = (uint *)((uint)data[0x10] | 4);\n  }\n  if (data[0x10] == (uint *)0x0) {\n    if (((character == '(') || (character == '*')) || (character == ')')) {\n      data[0xb] = (uint *)0xffff0000;\n      data[0xc] = (uint *)0x0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUN_08007ff0();\n    }\n    else if ((data[0xc] == (uint *)0x22) || (character == '\\\"')) {\n      data[0xc] = (uint *)0x0;\n      *(undefined *)((int)data + 0x3d) = 0x20;\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUNC_08004a74();\n    }\n  }\n  else {\n    FUN_08004f3c();\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005084": "process_data_08005084",
                "param_1": "data",
                "cVar1": "character",
                "puVar2": "ptrVar1",
                "puVar3": "ptrVar2"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a74",
                "FUN_08007ff0",
                "FUN_08004f3c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005188": {
            "entrypoint": "0x08005188",
            "current_name": "process_data_08005188",
            "code": "\nvoid processData_08005188(int *data)\n\n{\n  int ptr;\n  uint flags1;\n  uint flags2;\n  uint flags3;\n  \n  ptr = *data;\n  flags3 = *(uint *)(ptr + 0x18);\n  flags1 = *(uint *)(ptr + 0x14);\n  flags2 = *(uint *)(ptr + 4);\n  if ((*(char *)((int)data + 0x3e) == '\\x10') || (*(char *)((int)data + 0x3e) == '@')) {\n    if (((flags1 & 0x10001) == 0) || ((flags2 & 0x200) == 0)) {\n      if (((flags1 & 0x10008) == 0) || ((flags2 & 0x200) == 0)) {\n        if (((flags1 & 0x10002) != 0) && ((flags2 & 0x200) != 0)) {\n          FUN_080043a2(data);\n        }\n      }\n      else {\n        FUN_08004396(data);\n      }\n    }\n    else {\n      FUN_0800430c(data);\n    }\n    if ((flags3 & 0x100004) == 0) {\n      if ((((flags1 & 0x10040) != 0) && ((flags2 & 0x400) != 0)) && ((flags1 & 0x10004) == 0)) {\n        FUN_08004d6c(data);\n        return;\n      }\n      if (((flags1 & 0x10004) != 0) && ((flags2 & 0x200) != 0)) {\n        FUN_08004e3c(data);\n        return;\n      }\n    }\n    else {\n      if ((((flags1 & 0x10080) != 0) && ((flags2 & 0x400) != 0)) && ((flags1 & 0x10004) == 0)) {\n        FUN_08004b82(data);\n        return;\n      }\n      if (((flags1 & 0x10004) != 0) && ((flags2 & 0x200) != 0)) {\n        FUN_08004ccc(data);\n        return;\n      }\n    }\n  }\n  else {\n    if (((flags1 & 0x10002) != 0) && ((flags2 & 0x200) != 0)) {\n      FUN_08004ac2();\n      return;\n    }\n    if (((flags1 & 0x10010) != 0) && ((flags2 & 0x200) != 0)) {\n      FUN_08005084(data);\n      return;\n    }\n    if ((flags3 & 0x100004) == 0) {\n      if ((((flags1 & 0x10040) != 0) && ((flags2 & 0x400) != 0)) && ((flags1 & 0x10004) == 0)) {\n        FUN_08004a76(data);\n        return;\n      }\n      if (((flags1 & 0x10004) != 0) && ((flags2 & 0x200) != 0)) {\n        FUN_0800459c(data);\n      }\n    }\n    else {\n      if ((((flags1 & 0x10080) != 0) && ((flags2 & 0x400) != 0)) && ((flags1 & 0x10004) == 0)) {\n        FUN_08004a24(data);\n        return;\n      }\n      if (((flags1 & 0x10004) != 0) && ((flags2 & 0x200) != 0)) {\n        FUN_0800457c(data);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005188": "process_data_08005188",
                "param_1": "data",
                "iVar1": "ptr",
                "uVar2": "flags1",
                "uVar3": "flags2",
                "uVar4": "flags3"
            },
            "calling": [],
            "called": [
                "FUN_08004e3c",
                "FUN_08004ccc",
                "FUN_08004396",
                "FUN_08004ac2",
                "FUN_08004a76",
                "FUN_0800459c",
                "FUN_0800457c",
                "FUN_080043a2",
                "FUN_08005084",
                "FUN_0800430c",
                "FUN_08004a24",
                "FUN_08004b82",
                "FUN_08004d6c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080052f0": {
            "entrypoint": "0x080052f0",
            "current_name": "process_flags_080052f0",
            "code": "\nvoid processFlags_080052f0(uint **flags_ptr)\n\n{\n  char character;\n  uint *ptr;\n  uint flag;\n  uint value;\n  \n  ptr = *flags_ptr;\n  flag = ptr[5];\n  value = ptr[1];\n  if (((flag & 0x10100) != 0) && ((value & 0x100) != 0)) {\n    flags_ptr[0x10] = (uint *)((uint)flags_ptr[0x10] | 1);\n    ptr[5] = 0xfffffeff;\n    **flags_ptr = **flags_ptr | 0x8000;\n  }\n  if (((flag & 0x10200) != 0) && ((value & 0x100) != 0)) {\n    flags_ptr[0x10] = (uint *)((uint)flags_ptr[0x10] | 2);\n    (*flags_ptr)[5] = 0xfffffdff;\n  }\n  if (((flag & 0x10400) != 0) && ((value & 0x100) != 0)) {\n    character = *(char *)((int)flags_ptr + 0x3d);\n    if (((*(char *)((int)flags_ptr + 0x3e) == ' ') && (*(short *)((int)flags_ptr + 0x2a) == 0)) &&\n       (((character == '!' || (character == ')')) || ((character == '(' && (flags_ptr[0xc] == (uint *)0x21)))))) {\n      FUN_08004aec(flags_ptr);\n    }\n    else {\n      flags_ptr[0x10] = (uint *)((uint)flags_ptr[0x10] | 4);\n      if (*(char *)((int)flags_ptr + 0x3e) == '\\x10') {\n        **flags_ptr = **flags_ptr | 0x200;\n      }\n      (*flags_ptr)[5] = 0xfffffbff;\n    }\n  }\n  if (((flag & 0x10800) != 0) && ((value & 0x100) != 0)) {\n    flags_ptr[0x10] = (uint *)((uint)flags_ptr[0x10] | 8);\n    (*flags_ptr)[5] = 0xfffff7ff;\n  }\n  if (flags_ptr[0x10] != (uint *)0x0) {\n    FUN_08004f3c(flags_ptr);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080052f0": "process_flags_080052f0",
                "param_1": "flags_ptr",
                "cVar1": "character",
                "puVar2": "ptr",
                "uVar3": "flag",
                "uVar4": "value"
            },
            "calling": [],
            "called": [
                "FUN_08004aec",
                "FUN_08004f3c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800542a": {
            "entrypoint": "0x0800542a",
            "current_name": "get_value_at_index_0800542a",
            "code": "\nundefined getValueAtIndex_0800542a(int index)\n\n{\n  return *(undefined *)(index + 0x3d);\n}\n\n",
            "renaming": {
                "FUN_0800542a": "get_value_at_index_0800542a",
                "param_1": "index"
            },
            "calling": [
                "FUN_08007f0e",
                "FUN_08007e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005430": {
            "entrypoint": "0x08005430",
            "current_name": "get_data_value_08005430",
            "code": "\nundefined4 get_data_value_08005430(int data_ptr)\n\n{\n  return *(undefined4 *)(data_ptr + 0x40);\n}\n\n",
            "renaming": {
                "FUN_08005430": "get_data_value_08005430",
                "param_1": "data_ptr"
            },
            "calling": [
                "FUN_08007f0e",
                "FUN_08007e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005434": {
            "entrypoint": "0x08005434",
            "current_name": "delay_function_08005434",
            "code": "\nvoid delayFunction_08005434(int input)\n\n{\n  bool isDelayComplete;\n  int delayCount;\n  \n  delayCount = input * (DAT_20000018 / 8000);\n  do {\n    isDelayComplete = delayCount != 0;\n    delayCount = delayCount + -1;\n  } while (isDelayComplete);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005434": "delay_function_08005434",
                "param_1": "input",
                "local_4": "delayCount",
                "bVar1": "isDelayComplete"
            },
            "calling": [
                "FUN_08005460"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005460": {
            "entrypoint": "0x08005460",
            "current_name": "check_conditions_08005460",
            "code": "\n\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nundefined4 checkConditions_08005460(uint *flags)\n\n{\n  int startTime;\n  int currentTime;\n  undefined4 result;\n  uint param_1[1];\n  bool checkFlag;\n  \n  if ((*flags & 1) != 0) {\n    if (((_DAT_40021004 & 0xc) == 4) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) != 0)))) {\n      if (((_DAT_40021000 & 0x20000) != 0) && (flags[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      param_1[1] = flags[1];\n      if (param_1[1] == 0x10000) {\n        _DAT_40021000 = _DAT_40021000 | 0x10000;\n      }\n      else if (param_1[1] == 0) {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      else if (param_1[1] == 0x50000) {\n        _DAT_40021000 = _DAT_40021000 | 0x50000;\n      }\n      else {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      if (flags[1] == 0) {\n        startTime = FUN_08003760();\n        while ((_DAT_40021000 & 0x20000) != 0) {\n          currentTime = FUN_08003760();\n          if (100 < (uint)(currentTime - startTime)) {\n            return 3;\n          }\n        }\n      }\n      else {\n        startTime = FUN_08003760();\n        while ((_DAT_40021000 & 0x20000) == 0) {\n          currentTime = FUN_08003760();\n          if (100 < (uint)(currentTime - startTime)) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*flags & 2) != 0) {\n    if (((_DAT_40021004 & 0xc) == 0) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) == 0)))) {\n      if (((_DAT_40021000 & 2) != 0) && (flags[4] != 1)) {\n        return 1;\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | flags[5] << 3;\n    }\n    else if (flags[4] == 0) {\n      _DAT_42420000 = 0;\n      startTime = FUN_08003760();\n      while ((_DAT_40021000 & 2) != 0) {\n        currentTime = FUN_08003760();\n        if (2 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420000 = 1;\n      startTime = FUN_08003760();\n      while ((_DAT_40021000 & 2) == 0) {\n        currentTime = FUN_08003760();\n        if (2 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | flags[5] << 3;\n    }\n  }\n  if ((*flags & 8) != 0) {\n    if (flags[6] == 0) {\n      _DAT_42420480 = 0;\n      startTime = FUN_08003760();\n      while ((_DAT_40021024 & 2) != 0) {\n        currentTime = FUN_08003760();\n        if (2 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420480 = 1;\n      startTime = FUN_08003760();\n      while ((_DAT_40021024 & 2) == 0) {\n        currentTime = FUN_08003760();\n        if (2 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n      FUN_08005434(1);\n    }\n  }\n  if ((*flags & 4) != 0) {\n    checkFlag = (_DAT_4002101c & 0x10000000) == 0;\n    if (checkFlag) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      startTime = FUN_08003760();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        currentTime = FUN_08003760();\n        if (100 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    param_1[1] = flags[3];\n    if (param_1[1] == 1) {\n      _DAT_40021020 = _DAT_40021020 | 1;\n    }\n    else if (param_1[1] == 0) {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    else if (param_1[1] == 5) {\n      _DAT_40021020 = _DAT_40021020 | 5;\n    }\n    else {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    if (flags[3] == 0) {\n      startTime = FUN_08003760();\n      while ((_DAT_40021020 & 2) != 0) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      startTime = FUN_08003760();\n      while ((_DAT_40021020 & 2) == 0) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    if (checkFlag) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if (flags[7] == 0) {\n    result = 0;\n  }\n  else if ((_DAT_40021004 & 0xc) == 8) {\n    result = 1;\n  }\n  else if (flags[7] == 2) {\n    _DAT_42420060 = 0;\n    startTime = FUN_08003760();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        if (flags[8] == 0x10000) {\n          _DAT_40021004 = _DAT_40021004 & 0xfffdffff | flags[2];\n        }\n        _DAT_40021004 = _DAT_40021004 & 0xffc2ffff | flags[8] | flags[9];\n        _DAT_42420060 = 1;\n        startTime = FUN_08003760();\n        do {\n          if ((_DAT_40021000 & 0x2000000) != 0) {\n            return 0;\n          }\n          currentTime = FUN_08003760();\n        } while ((uint)(currentTime - startTime) < 3);\n        return 3;\n      }\n      currentTime = FUN_08003760();\n    } while ((uint)(currentTime - startTime) < 3);\n    result = 3;\n  }\n  else {\n    _DAT_42420060 = 0;\n    startTime = FUN_08003760();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        return 0;\n      }\n      currentTime = FUN_08003760();\n    } while ((uint)(currentTime - startTime) < 3);\n    result = 3;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005460": "check_conditions_08005460",
                "param_1": "flags",
                "iVar1": "startTime",
                "iVar2": "currentTime",
                "uVar3": "result",
                "uVar4": "param_1[1]",
                "bVar5": "checkFlag"
            },
            "calling": [
                "FUN_080035b8"
            ],
            "called": [
                "FUN_08005434",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005840": {
            "entrypoint": "0x08005840",
            "current_name": "calculate_delay_08005840",
            "code": "\n\n\nuint calculateDelay_08005840(void)\n\n{\n  uint uVar1;\n  undefined2 delayFlag;\n  undefined4 configVar1;\n  undefined4 configVar2;\n  undefined4 configVar3;\n  undefined4 configVar4;\n  \n  configVar4 = 0x10100f0e;\n  configVar3 = 0xd0c0b0a;\n  configVar2 = 0x9080706;\n  configVar1 = 0x5040302;\n  delayFlag = 0x201;\n  if ((_DAT_40021004 & 0xc) == 8) {\n    uVar1 = (uint)*(byte *)((int)&configVar1 + ((_DAT_40021004 << 10) >> 0x1c));\n    if ((_DAT_40021004 & 0x10000) == 0) {\n      uVar1 = uVar1 * 4000000;\n    }\n    else {\n      uVar1 = (uVar1 * 8000000) /\n              (uint)*(byte *)((int)&delayFlag - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n    }\n  }\n  else {\n    uVar1 = 8000000;\n  }\n  return uVar1;\n}\n\n",
            "renaming": {
                "FUN_08005840": "calculate_delay_08005840",
                "local_1c": "delayFlag",
                "uStack_18": "configVar1",
                "uStack_14": "configVar2",
                "uStack_10": "configVar3",
                "uStack_c": "configVar4"
            },
            "calling": [
                "FUN_080058d2"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058ac": {
            "entrypoint": "0x080058ac",
            "current_name": "update_configuration_080058ac",
            "code": "\n\n\nundefined4 updateConfiguration_080058ac(uint *configuration,uint param)\n\n{\n  int timeoutStart;\n  int timeoutCurrent;\n  uint returnValue;\n  \n  if ((_DAT_40022000 & 7) < param) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | param;\n    if (param != (param & 7)) {\n      return 1;\n    }\n  }\n  if ((*configuration & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | configuration[2];\n  }\n  if ((*configuration & 1) != 0) {\n    returnValue = configuration[1];\n    if (returnValue == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((returnValue != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = returnValue | _DAT_40021004 & 0xfffffffc;\n    timeoutStart = FUN_08003760();\n    if (configuration[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        timeoutCurrent = FUN_08003760();\n        if (5000 < (uint)(timeoutCurrent - timeoutStart)) {\n          return 3;\n        }\n      }\n    }\n    else if (configuration[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        timeoutCurrent = FUN_08003760();\n        if (5000 < (uint)(timeoutCurrent - timeoutStart)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        timeoutCurrent = FUN_08003760();\n        if (5000 < (uint)(timeoutCurrent - timeoutStart)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (param < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | param;\n    if (param != (param & 7)) {\n      return 1;\n    }\n  }\n  if ((*configuration & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | configuration[3];\n  }\n  if ((*configuration & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | configuration[4] << 3;\n  }\n  returnValue = FUN_08005840();\n  DAT_20000018 = returnValue >> (&DAT_0800a944)[(_DAT_40021004 << 0x18) >> 0x1c];\n  FUN_080036d8(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080058ac": "update_configuration_080058ac",
                "param_1": "configuration",
                "param_2": "param",
                "iVar1": "timeoutStart",
                "iVar2": "timeoutCurrent",
                "uVar3": "returnValue"
            },
            "calling": [
                "FUN_080035b8"
            ],
            "called": [
                "FUN_080058d2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058d2": {
            "entrypoint": "0x080058d2",
            "current_name": "update_config_080058d2",
            "code": "\n\n\nundefined4 updateConfig_080058d2(uint *configFlags,uint value)\n\n{\n  int startTime;\n  int currentTime;\n  uint tempValue;\n  \n  if ((*configFlags & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | configFlags[2];\n  }\n  if ((*configFlags & 1) != 0) {\n    tempValue = configFlags[1];\n    if (tempValue == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((tempValue != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = tempValue | _DAT_40021004 & 0xfffffffc;\n    startTime = FUN_08003760();\n    if (configFlags[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else if (configFlags[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (value < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | value;\n    if (value != (value & 7)) {\n      return 1;\n    }\n  }\n  if ((*configFlags & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | configFlags[3];\n  }\n  if ((*configFlags & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | configFlags[4] << 3;\n  }\n  tempValue = FUN_08005840();\n  DAT_20000018 = tempValue >> (&DAT_0800a944)[(_DAT_40021004 << 0x18) >> 0x1c];\n  FUN_080036d8(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080058d2": "update_config_080058d2",
                "param_1": "configFlags",
                "param_2": "value",
                "iVar1": "startTime",
                "iVar2": "currentTime",
                "uVar3": "tempValue"
            },
            "calling": [
                "FUN_080058ac"
            ],
            "called": [
                "FUN_080036d8",
                "FUN_08003760",
                "FUN_08005840"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a1c": {
            "entrypoint": "0x08005a1c",
            "current_name": "get_global_data_08005a1c",
            "code": "\nundefined4 getGlobalData_08005a1c(void)\n\n{\n  return DAT_20000018;\n}\n\n",
            "renaming": {
                "FUN_08005a1c": "get_global_data_08005a1c"
            },
            "calling": [
                "FUN_08005a28",
                "FUN_08005a48",
                "FUN_080035b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a28": {
            "entrypoint": "0x08005a28",
            "current_name": "shifted_value_08005a28",
            "code": "\n\n\nuint shiftedValue_08005a28(void)\n\n{\n  uint result;\n  \n  result = FUN_08005a1c();\n  return result >> (&DAT_0800a954)[(uint)(_DAT_40021004 << 0x15) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_08005a28": "shifted_value_08005a28",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080045c0",
                "FUN_08006538",
                "FUN_080075dc"
            ],
            "called": [
                "FUN_08005a1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a48": {
            "entrypoint": "0x08005a48",
            "current_name": "calculate_shifted_result_08005a48",
            "code": "\n\n\nuint calculate_shifted_result_08005a48(void)\n\n{\n  uint result;\n  \n  result = FUN_08005a1c();\n  return result >> (&DAT_0800a954)[(uint)(_DAT_40021004 << 0x12) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_08005a48": "calculate_shifted_result_08005a48",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08006538",
                "FUN_08005bb8",
                "FUN_080075dc"
            ],
            "called": [
                "FUN_08005a1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a68": {
            "entrypoint": "0x08005a68",
            "current_name": "initialize_data_08005a68",
            "code": "\n\n\nvoid initializeData_08005a68(undefined4 *outputValues,uint *inputValues)\n\n{\n  *outputValues = 0xf;\n  outputValues[1] = _DAT_40021004 & 3;\n  outputValues[2] = _DAT_40021004 & 0xf0;\n  outputValues[3] = _DAT_40021004 & 0x700;\n  outputValues[4] = _DAT_40021004 >> 3 & 0x700;\n  *inputValues = _DAT_40022000 & 7;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a68": "initialize_data_08005a68",
                "param_1": "outputValues",
                "param_2": "inputValues"
            },
            "calling": [
                "FUN_080075dc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005aa4": {
            "entrypoint": "0x08005aa4",
            "current_name": "configure_hardware_08005aa4",
            "code": "\n\n\nundefined4 configureHardware_08005aa4(uint *config)\n\n{\n  uint tempVar1;\n  uint tempVar2;\n  int initialValue;\n  int currentValue;\n  bool isBitSet;\n  \n  if ((*config & 1) != 0) {\n    isBitSet = (_DAT_4002101c & 0x10000000) == 0;\n    if (isBitSet) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      initialValue = FUN_08003760();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        currentValue = FUN_08003760();\n        if (100 < (uint)(currentValue - initialValue)) {\n          return 3;\n        }\n      }\n    }\n    if (((_DAT_40021020 & 0x300) != 0) && ((_DAT_40021020 & 0x300) != (config[1] & 0x300))) {\n      tempVar2 = _DAT_40021020 & 0xfffffcff;\n      _DAT_42420440 = 0;\n      tempVar1 = _DAT_40021020 & 1;\n      _DAT_40021020 = tempVar2;\n      if (tempVar1 != 0) {\n        initialValue = FUN_08003760();\n        while ((_DAT_40021020 & 2) == 0) {\n          currentValue = FUN_08003760();\n          if (5000 < (uint)(currentValue - initialValue)) {\n            return 3;\n          }\n        }\n      }\n    }\n    _DAT_40021020 = _DAT_40021020 & 0xfffffcff | config[1];\n    if (isBitSet) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if ((*config & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffff3fff | config[2];\n  }\n  if ((*config & 0x10) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffbfffff | config[3];\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005aa4": "configure_hardware_08005aa4",
                "param_1": "config",
                "uVar1": "tempVar1",
                "uVar2": "tempVar2",
                "iVar3": "initialValue",
                "iVar4": "currentValue",
                "bVar5": "isBitSet"
            },
            "calling": [
                "FUN_080035b8"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005bb8": {
            "entrypoint": "0x08005bb8",
            "current_name": "calculate_value_08005bb8",
            "code": "\n\n\nuint calculateValue_08005bb8(int input)\n\n{\n  uint result;\n  undefined2 multiplier;\n  undefined4 constant_a;\n  undefined4 constant_b;\n  undefined4 constant_c;\n  undefined4 constant_d;\n  \n  constant_d = 0x10100f0e;\n  constant_c = 0xd0c0b0a;\n  constant_b = 0x9080706;\n  constant_a = 0x5040302;\n  multiplier = 0x201;\n  if (input == 2) {\n    result = FUN_08005a48();\n    result = result / ((((_DAT_40021004 << 0x10) >> 0x1e) + 1) * 2);\n  }\n  else if (input == 0x10) {\n    if ((_DAT_40021000 & 0x1000000) == 0) {\n      result = 0;\n    }\n    else {\n      if ((_DAT_40021004 & 0x10000) == 0) {\n        result = 4000000;\n      }\n      else {\n        result = 8000000 / *(byte *)((int)&multiplier - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n      }\n      result = result * *(byte *)((int)&constant_a + ((_DAT_40021004 << 10) >> 0x1c));\n      if ((_DAT_40021004 & 0x400000) == 0) {\n        result = (result * 2) / 3;\n      }\n    }\n  }\n  else if (input == 1) {\n    if ((_DAT_40021020 & 0x302) == 0x102) {\n      result = 0x8000;\n    }\n    else if (((_DAT_40021020 & 0x300) == 0x200) && ((_DAT_40021024 & 2) != 0)) {\n      result = 32000;\n    }\n    else if ((_DAT_40021020 & 0x300) == 0x300) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        result = 0;\n      }\n      else {\n        result = 0xf424;\n      }\n    }\n    else {\n      result = 0;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005bb8": "calculate_value_08005bb8",
                "param_1": "input",
                "uVar1": "result",
                "local_24": "multiplier",
                "uStack_20": "constant_a",
                "uStack_1c": "constant_b",
                "uStack_18": "constant_c",
                "uStack_14": "constant_d"
            },
            "calling": [
                "FUN_0800376c",
                "FUN_08003e20"
            ],
            "called": [
                "FUN_08005a48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cb4": {
            "entrypoint": "0x08005cb4",
            "current_name": "initialize_flags_08005cb4",
            "code": "\n\n\nvoid initializeFlags_08005cb4(uint **flags)\n\n{\n  if (((**flags & 2) != 0) && (((*flags)[1] & 2) != 0)) {\n    FUN_080073c0();\n    (*flags)[1] = 0xfffffffd;\n  }\n  _DAT_40010414 = 0x20000;\n  *(symbol *)((int)flags + 0x11) = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005cb4": "initialize_flags_08005cb4",
                "param_1": "flags",
                "undefined": "symbol"
            },
            "calling": [],
            "called": [
                "FUN_080073c0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cec": {
            "entrypoint": "0x08005cec",
            "current_name": "update_parameters_08005cec",
            "code": "\nvoid updateParameters_08005cec(int paramAddress,uint *paramValues)\n\n{\n  uint updatedValue1;\n  uint updatedValue2;\n  uint updatedValue3;\n  \n  *(uint *)(paramAddress + 0x20) = *(uint *)(paramAddress + 0x20) & 0xfffffffe;\n  updatedValue2 = *(uint *)(paramAddress + 4);\n  updatedValue3 = *paramValues;\n  updatedValue1 = *(uint *)(paramAddress + 0x20) & 0xfffffffd | paramValues[2];\n  if (paramAddress == 0x40012c00) {\n    updatedValue1 = (updatedValue1 & 0xfffffff7 | paramValues[3]) & 0xfffffffb;\n    updatedValue2 = updatedValue2 & 0xfffffcff | paramValues[5] | paramValues[6];\n  }\n  *(uint *)(paramAddress + 4) = updatedValue2;\n  *(uint *)(paramAddress + 0x18) = *(uint *)(paramAddress + 0x18) & 0xffffff8c | updatedValue3;\n  *(uint *)(paramAddress + 0x34) = paramValues[1];\n  *(uint *)(paramAddress + 0x20) = updatedValue1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005cec": "update_parameters_08005cec",
                "param_1": "paramAddress",
                "param_2": "paramValues",
                "uVar1": "updatedValue1",
                "uVar2": "updatedValue2",
                "uVar3": "updatedValue3"
            },
            "calling": [
                "FUN_08006186",
                "FUN_08006128"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005d48": {
            "entrypoint": "0x08005d48",
            "current_name": "update_data_08005d48",
            "code": "\nvoid updateData_08005d48(int dataAddress,uint *dataArray)\n\n{\n  uint newDataValue1;\n  uint modifiedValue1;\n  uint originalValue1;\n  \n  *(uint *)(dataAddress + 0x20) = *(uint *)(dataAddress + 0x20) & 0xfffffeff;\n  modifiedValue1 = *(uint *)(dataAddress + 4);\n  originalValue1 = *dataArray;\n  newDataValue1 = *(uint *)(dataAddress + 0x20) & 0xfffffdff | dataArray[2] << 8;\n  if (dataAddress == 0x40012c00) {\n    newDataValue1 = (newDataValue1 & 0xfffff7ff | dataArray[3] << 8) & 0xfffffbff;\n    modifiedValue1 = modifiedValue1 & 0xffffcfff | dataArray[5] << 4 | dataArray[6] << 4;\n  }\n  *(uint *)(dataAddress + 4) = modifiedValue1;\n  *(uint *)(dataAddress + 0x1c) = *(uint *)(dataAddress + 0x1c) & 0xffffff8c | originalValue1;\n  *(uint *)(dataAddress + 0x3c) = dataArray[1];\n  *(uint *)(dataAddress + 0x20) = newDataValue1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005d48": "update_data_08005d48",
                "param_1": "dataAddress",
                "param_2": "dataArray",
                "uVar1": "newDataValue1",
                "uVar2": "modifiedValue1",
                "uVar3": "originalValue1"
            },
            "calling": [
                "FUN_08006186",
                "FUN_08006128"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005dac": {
            "entrypoint": "0x08005dac",
            "current_name": "update_registers_08005dac",
            "code": "\nvoid updateRegisters_08005dac(int registerBase,int *registerValues)\n\n{\n  uint registerValue1;\n  int registerValue2;\n  int registerValue3;\n  \n  *(uint *)(registerBase + 0x20) = *(uint *)(registerBase + 0x20) & 0xffffefff;\n  registerValue1 = *(uint *)(registerBase + 4);\n  registerValue2 = *registerValues;\n  registerValue3 = registerValues[2];\n  if (registerBase == 0x40012c00) {\n    registerValue1 = registerValue1 & 0xffffbfff | registerValues[5] << 6;\n  }\n  *(uint *)(registerBase + 4) = registerValue1;\n  *(uint *)(registerBase + 0x1c) = *(uint *)(registerBase + 0x1c) & 0xffff8cff | registerValue2 << 8;\n  *(int *)(registerBase + 0x40) = registerValues[1];\n  *(uint *)(registerBase + 0x20) = *(uint *)(registerBase + 0x20) & 0xffffdfff | registerValue3 << 0xc;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005dac": "update_registers_08005dac",
                "param_1": "registerBase",
                "param_2": "registerValues",
                "uVar1": "registerValue1",
                "iVar2": "registerValue2",
                "iVar3": "registerValue3"
            },
            "calling": [
                "FUN_08006186",
                "FUN_08006128"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005df4": {
            "entrypoint": "0x08005df4",
            "current_name": "update_param_08005df4",
            "code": "\nvoid updateParam_08005df4(uint **param)\n\n{\n  uint *ptr;\n  \n  *(undefined *)((int)param + 0x3d) = 2;\n  ptr = *param;\n  if ((ptr[8] & 0x1111) == 0) {\n    if ((ptr[8] & 0x444) == 0) {\n      *ptr = *ptr & 0xfffffffe;\n    }\n  }\n  FUN_08007710(param);\n  *(undefined *)((int)param + 0x3d) = 0;\n  *(undefined *)(param + 0xf) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005df4": "update_param_08005df4",
                "param_1": "param",
                "puVar1": "ptr"
            },
            "calling": [
                "FUN_080076e0"
            ],
            "called": [
                "FUN_08007710"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005e2e": {
            "entrypoint": "0x08005e2e",
            "current_name": "update_and_reset_08005e2e",
            "code": "\nvoid updateAndReset_08005e2e(uint **input)\n\n{\n  uint *ptr;\n  \n  *(undefined *)((int)input + 0x3d) = 2;\n  ptr = *input;\n  if ((ptr[8] & 0x1111) == 0) {\n    if ((ptr[8] & 0x444) == 0) {\n      *ptr = *ptr & 0xfffffffe;\n    }\n  }\n  FUN_08007110(input);\n  *(undefined *)((int)input + 0x3d) = 0;\n  *(undefined *)(input + 0xf) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e2e": "update_and_reset_08005e2e",
                "param_1": "input",
                "puVar1": "ptr"
            },
            "calling": [
                "FUN_080071e4"
            ],
            "called": [
                "FUN_08007110"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005e68": {
            "entrypoint": "0x08005e68",
            "current_name": "FUNC_08005e68",
            "code": "\nvoid FUNC_08005e68(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e68": "FUNC_08005e68"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005e6a": {
            "entrypoint": "0x08005e6a",
            "current_name": "FUNC_08005e6a",
            "code": "\nvoid FUNC_08005e6a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e6a": "FUNC_08005e6a"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005e6c": {
            "entrypoint": "0x08005e6c",
            "current_name": "FUNC_08005e6c",
            "code": "\nvoid FUNC_08005e6c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e6c": "FUNC_08005e6c"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005e6e": {
            "entrypoint": "0x08005e6e",
            "current_name": "update_flags_and_call_functions_08005e6e",
            "code": "\nvoid updateFlagsAndCallFunctions_08005e6e(int *param)\n\n{\n  int value;\n  \n  value = *param;\n  if (((*(uint *)(value + 0x10) & 2) != 0) && ((*(uint *)(value + 0xc) & 2) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffd;\n    *(undefined *)(param + 7) = 1;\n    if ((*(uint *)(*param + 0x18) & 3) == 0) {\n      FUN_0800771c();\n      FUNC_08005e6a(param);\n    }\n    else {\n      FUNC_08005e68();\n    }\n    *(undefined *)(param + 7) = 0;\n  }\n  value = *param;\n  if (((*(uint *)(value + 0x10) & 4) != 0) && ((*(uint *)(value + 0xc) & 4) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffb;\n    *(undefined *)(param + 7) = 2;\n    if ((*(uint *)(*param + 0x18) & 0x300) == 0) {\n      FUN_0800771c(param);\n      FUNC_08005e6a(param);\n    }\n    else {\n      FUNC_08005e68(param);\n    }\n    *(undefined *)(param + 7) = 0;\n  }\n  value = *param;\n  if (((*(uint *)(value + 0x10) & 8) != 0) && ((*(uint *)(value + 0xc) & 8) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffff7;\n    *(undefined *)(param + 7) = 4;\n    if ((*(uint *)(*param + 0x1c) & 3) == 0) {\n      FUN_0800771c(param);\n      FUNC_08005e6a(param);\n    }\n    else {\n      FUNC_08005e68(param);\n    }\n    *(undefined *)(param + 7) = 0;\n  }\n  value = *param;\n  if (((*(uint *)(value + 0x10) & 0x10) != 0) && ((*(uint *)(value + 0xc) & 0x10) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffef;\n    *(undefined *)(param + 7) = 8;\n    if ((*(uint *)(*param + 0x1c) & 0x300) == 0) {\n      FUN_0800771c(param);\n      FUNC_08005e6a(param);\n    }\n    else {\n      FUNC_08005e68(param);\n    }\n    *(undefined *)(param + 7) = 0;\n  }\n  value = *param;\n  if (((*(uint *)(value + 0x10) & 1) != 0) && ((*(uint *)(value + 0xc) & 1) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xfffffffe;\n    FUN_08007736(param);\n  }\n  value = *param;\n  if (((*(uint *)(value + 0x10) & 0x80) != 0) && ((*(uint *)(value + 0xc) & 0x80) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffff7f;\n    FUNC_080064ae(param);\n  }\n  value = *param;\n  if (((*(uint *)(value + 0x10) & 0x40) != 0) && ((*(uint *)(value + 0xc) & 0x40) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffbf;\n    FUNC_08005e6c(param);\n  }\n  value = *param;\n  if (((*(uint *)(value + 0x10) & 0x20) != 0) && ((*(uint *)(value + 0xc) & 0x20) != 0)) {\n    *(undefined4 *)(value + 0x10) = 0xffffffdf;\n    FUNC_080064ac(param);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e6e": "update_flags_and_call_functions_08005e6e",
                "param_1": "param",
                "iVar1": "value"
            },
            "calling": [],
            "called": [
                "FUN_0800771c",
                "FUN_08005e6a",
                "FUN_08005e6c",
                "FUN_080064ae",
                "FUN_08005e68",
                "FUN_080064ac",
                "FUN_08007736"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005fe8": {
            "entrypoint": "0x08005fe8",
            "current_name": "update_parameters_08005fe8",
            "code": "\nvoid updateParameters_08005fe8(uint *currentParams,uint *newParams)\n\n{\n  uint updatedVar1;\n  \n  updatedVar1 = *currentParams;\n  if ((((currentParams == (uint *)0x40012c00) || (currentParams == (uint *)0x40000000)) ||\n      (currentParams == (uint *)0x40000400)) || (currentParams == (uint *)0x40000800)) {\n    updatedVar1 = updatedVar1 & 0xffffff8f | newParams[1];\n  }\n  if (((currentParams == (uint *)0x40012c00) || (currentParams == (uint *)0x40000000)) ||\n     ((currentParams == (uint *)0x40000400 || (currentParams == (uint *)0x40000800)))) {\n    updatedVar1 = updatedVar1 & 0xfffffcff | newParams[3];\n  }\n  *currentParams = updatedVar1 & 0xffffff7f | newParams[5];\n  currentParams[0xb] = newParams[2];\n  currentParams[10] = *newParams;\n  if (currentParams == (uint *)0x40012c00) {\n    uRam40012c30 = newParams[4];\n  }\n  currentParams[5] = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005fe8": "update_parameters_08005fe8",
                "param_1": "currentParams",
                "param_2": "newParams",
                "uVar1": "updatedVar1"
            },
            "calling": [
                "FUN_08006092",
                "FUN_08006060"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006060": {
            "entrypoint": "0x08006060",
            "current_name": "update_param_08006060",
            "code": "\nundefined4 updateParam_08006060(undefined4 *paramPtr)\n\n{\n  if (paramPtr != (undefined4 *)0x0) {\n    if (*(char *)((int)paramPtr + 0x3d) == '\\0') {\n      *(undefined *)(paramPtr + 0xf) = 0;\n      FUN_08007708();\n    }\n    *(undefined *)((int)paramPtr + 0x3d) = 2;\n    FUN_08005fe8(*paramPtr,paramPtr + 1);\n    *(undefined *)((int)paramPtr + 0x3d) = 1;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08006060": "update_param_08006060",
                "param_1": "paramPtr"
            },
            "calling": [
                "FUN_08007648"
            ],
            "called": [
                "FUN_08007708",
                "FUN_08005fe8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006092": {
            "entrypoint": "0x08006092",
            "current_name": "process_data_08006092",
            "code": "\nundefined4 processData_08006092(undefined4 *data)\n\n{\n  if (data != (undefined4 *)0x0) {\n    if (*(char *)((int)data + 0x3d) == '\\0') {\n      *(undefined *)(data + 0xf) = 0;\n      FUN_08006e68();\n    }\n    *(undefined *)((int)data + 0x3d) = 2;\n    FUN_08005fe8(*data,data + 1);\n    *(undefined *)((int)data + 0x3d) = 1;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08006092": "process_data_08006092",
                "param_1": "data"
            },
            "calling": [
                "FUN_08007118"
            ],
            "called": [
                "FUN_08006e68",
                "FUN_08005fe8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080060c4": {
            "entrypoint": "0x080060c4",
            "current_name": "update_values_080060c4",
            "code": "\nvoid updateValues_080060c4(int baseAddress,int *inputArray)\n\n{\n  uint newValue1;\n  uint newValue2;\n  int valueToUpdate;\n  \n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) & 0xffffffef;\n  newValue2 = *(uint *)(baseAddress + 4);\n  valueToUpdate = *inputArray;\n  newValue1 = *(uint *)(baseAddress + 0x20) & 0xffffffdf | inputArray[2] << 4;\n  if (baseAddress == 0x40012c00) {\n    newValue1 = (newValue1 & 0xffffff7f | inputArray[3] << 4) & 0xffffffbf;\n    newValue2 = newValue2 & 0xfffff3ff | inputArray[5] << 2 | inputArray[6] << 2;\n  }\n  *(uint *)(baseAddress + 4) = newValue2;\n  *(uint *)(baseAddress + 0x18) = *(uint *)(baseAddress + 0x18) & 0xffff8cff | valueToUpdate << 8;\n  *(int *)(baseAddress + 0x38) = inputArray[1];\n  *(uint *)(baseAddress + 0x20) = newValue1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080060c4": "update_values_080060c4",
                "param_1": "baseAddress",
                "param_2": "inputArray",
                "uVar1": "newValue1",
                "uVar2": "newValue2",
                "iVar3": "valueToUpdate"
            },
            "calling": [
                "FUN_08006186",
                "FUN_08006128"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006128": {
            "entrypoint": "0x08006128",
            "current_name": "perform_action_08006128",
            "code": "\nundefined4 performAction_08006128(undefined4 *array,undefined4 value,undefined4 actionType)\n\n{\n  if (*(char *)(array + 0xf) != '\\x01') {\n    *(undefined *)(array + 0xf) = 1;\n    *(undefined *)((int)array + 0x3d) = 2;\n    switch(actionType) {\n    case 0:\n      FUN_08005cec(*array);\n      break;\n    case 4:\n      FUN_080060c4(*array);\n      break;\n    case 8:\n      FUN_08005d48(*array);\n      break;\n    case 0xc:\n      FUN_08005dac(*array);\n    }\n    *(undefined *)((int)array + 0x3d) = 1;\n    *(undefined *)(array + 0xf) = 0;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08006128": "perform_action_08006128",
                "param_1": "array",
                "param_2": "value",
                "param_3": "actionType"
            },
            "calling": [
                "FUN_08007648"
            ],
            "called": [
                "FUN_08005d48",
                "FUN_08005dac",
                "FUN_080060c4",
                "FUN_08005cec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006186": {
            "entrypoint": "0x08006186",
            "current_name": "handle_param_08006186",
            "code": "\nundefined4 handleParam_08006186(int *paramArray,int data,undefined4 option)\n\n{\n  if (*(char *)(paramArray + 0xf) != '\\x01') {\n    *(undefined *)(paramArray + 0xf) = 1;\n    *(undefined *)((int)paramArray + 0x3d) = 2;\n    switch(option) {\n    case 0:\n      FUN_08005cec(*paramArray);\n      *(uint *)(*paramArray + 0x18) = *(uint *)(*paramArray + 0x18) | 8;\n      *(uint *)(*paramArray + 0x18) = *(uint *)(*paramArray + 0x18) & 0xfffffffb;\n      *(uint *)(*paramArray + 0x18) = *(uint *)(*paramArray + 0x18) | *(uint *)(data + 0x10);\n      break;\n    case 4:\n      FUN_080060c4(*paramArray);\n      *(uint *)(*paramArray + 0x18) = *(uint *)(*paramArray + 0x18) | 0x800;\n      *(uint *)(*paramArray + 0x18) = *(uint *)(*paramArray + 0x18) & 0xfffffbff;\n      *(uint *)(*paramArray + 0x18) = *(uint *)(*paramArray + 0x18) | *(int *)(data + 0x10) << 8;\n      break;\n    case 8:\n      FUN_08005d48(*paramArray);\n      *(uint *)(*paramArray + 0x1c) = *(uint *)(*paramArray + 0x1c) | 8;\n      *(uint *)(*paramArray + 0x1c) = *(uint *)(*paramArray + 0x1c) & 0xfffffffb;\n      *(uint *)(*paramArray + 0x1c) = *(uint *)(*paramArray + 0x1c) | *(uint *)(data + 0x10);\n      break;\n    case 0xc:\n      FUN_08005dac(*paramArray);\n      *(uint *)(*paramArray + 0x1c) = *(uint *)(*paramArray + 0x1c) | 0x800;\n      *(uint *)(*paramArray + 0x1c) = *(uint *)(*paramArray + 0x1c) & 0xfffffbff;\n      *(uint *)(*paramArray + 0x1c) = *(uint *)(*paramArray + 0x1c) | *(int *)(data + 0x10) << 8;\n    }\n    *(undefined *)((int)paramArray + 0x3d) = 1;\n    *(undefined *)(paramArray + 0xf) = 0;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08006186": "handle_param_08006186",
                "param_1": "paramArray",
                "param_2": "data",
                "param_3": "option"
            },
            "calling": [
                "FUN_08007118"
            ],
            "called": [
                "FUN_08005d48",
                "FUN_08005dac",
                "FUN_080060c4",
                "FUN_08005cec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006262": {
            "entrypoint": "0x08006262",
            "current_name": "update_bit_value_08006262",
            "code": "\nvoid updateBitValue_08006262(int ptr,uint bitIndex,int newValue)\n\n{\n  *(uint *)(ptr + 0x20) = *(uint *)(ptr + 0x20) & ~(1 << (bitIndex & 0xff));\n  *(uint *)(ptr + 0x20) = *(uint *)(ptr + 0x20) | newValue << (bitIndex & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006262": "update_bit_value_08006262",
                "param_1": "ptr",
                "param_2": "bitIndex",
                "param_3": "newValue"
            },
            "calling": [
                "FUN_080063c0",
                "FUN_08006280",
                "FUN_080062f4",
                "FUN_08006390"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006280": {
            "entrypoint": "0x08006280",
            "current_name": "update_permissions_08006280",
            "code": "\nundefined4 updatePermissions_08006280(uint **permissionTable,undefined4 permissionFlag)\n\n{\n  switch(permissionFlag) {\n  case 0:\n    (*permissionTable)[3] = (*permissionTable)[3] | 2;\n    break;\n  case 4:\n    (*permissionTable)[3] = (*permissionTable)[3] | 4;\n    break;\n  case 8:\n    (*permissionTable)[3] = (*permissionTable)[3] | 8;\n    break;\n  case 0xc:\n    (*permissionTable)[3] = (*permissionTable)[3] | 0x10;\n  }\n  FUN_08006262(*permissionTable,permissionFlag,1);\n  if (*permissionTable == (uint *)0x40012c00) {\n    flagVariable = flagVariable | 0x8000;\n  }\n  **permissionTable = **permissionTable | 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006280": "update_permissions_08006280",
                "param_1": "permissionTable",
                "param_2": "permissionFlag",
                "uRam40012c44": "flagVariable"
            },
            "calling": [
                "FUN_08007648"
            ],
            "called": [
                "FUN_08006262"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080062f4": {
            "entrypoint": "0x080062f4",
            "current_name": "apply_mask_and_check_080062f4",
            "code": "\nundefined4 applyMaskAndCheck_080062f4(uint **dataPointer,undefined4 maskValue)\n\n{\n  uint *tempPointer;\n  \n  switch(maskValue) {\n  case 0:\n    (*dataPointer)[3] = (*dataPointer)[3] & 0xfffffffd;\n    break;\n  case 4:\n    (*dataPointer)[3] = (*dataPointer)[3] & 0xfffffffb;\n    break;\n  case 8:\n    (*dataPointer)[3] = (*dataPointer)[3] & 0xfffffff7;\n    break;\n  case 0xc:\n    (*dataPointer)[3] = (*dataPointer)[3] & 0xffffffef;\n  }\n  FUN_08006262(*dataPointer,maskValue,0);\n  if (((*dataPointer == (uint *)0x40012c00) && ((uRam40012c20 & 0x1111) == 0)) &&\n     ((uRam40012c20 & 0x444) == 0)) {\n    uRam40012c44 = uRam40012c44 & 0xffff7fff;\n  }\n  tempPointer = *dataPointer;\n  if (((tempPointer[8] & 0x1111) == 0) && ((tempPointer[8] & 0x444) == 0)) {\n    *tempPointer = *tempPointer & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080062f4": "apply_mask_and_check_080062f4",
                "param_1": "dataPointer",
                "param_2": "maskValue",
                "puVar1": "tempPointer"
            },
            "calling": [
                "FUN_080076e0"
            ],
            "called": [
                "FUN_08006262"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006390": {
            "entrypoint": "0x08006390",
            "current_name": "set_flag_and_update_value_08006390",
            "code": "\nundefined4 setFlagAndUpdateValue_08006390(uint **pointer,undefined4 value)\n\n{\n  FUN_08006262(*pointer,value,1);\n  if (*pointer == (uint *)0x40012c00) {\n    data_register = data_register | 0x8000;\n  }\n  **pointer = **pointer | 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006390": "set_flag_and_update_value_08006390",
                "param_1": "pointer",
                "param_2": "value",
                "uRam40012c44": "data_register"
            },
            "calling": [
                "FUN_08007118"
            ],
            "called": [
                "FUN_08006262"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080063c0": {
            "entrypoint": "0x080063c0",
            "current_name": "check_and_update_values_080063c0",
            "code": "\nundefined4 check_and_update_values_080063c0(uint **input_ptr,undefined4 input_value)\n\n{\n  uint *ptr1;\n  \n  FUN_08006262(*input_ptr,input_value,0);\n  if (((*input_ptr == (uint *)0x40012c00) && ((memory_value1 & 0x1111) == 0)) &&\n     ((memory_value1 & 0x444) == 0)) {\n    memory_value2 = memory_value2 & 0xffff7fff;\n  }\n  ptr1 = *input_ptr;\n  if (((ptr1[8] & 0x1111) == 0) && ((ptr1[8] & 0x444) == 0)) {\n    *ptr1 = *ptr1 & 0xfffffffe;\n  }\n  *(undefined *)((int)input_ptr + 0x3d) = 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080063c0": "check_and_update_values_080063c0",
                "param_1": "input_ptr",
                "param_2": "input_value",
                "puVar1": "ptr1",
                "uRam40012c20": "memory_value1",
                "uRam40012c44": "memory_value2"
            },
            "calling": [
                "FUN_080071e4"
            ],
            "called": [
                "FUN_08006262"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006420": {
            "entrypoint": "0x08006420",
            "current_name": "update_value_with_param_08006420",
            "code": "\nvoid updateValueWithParam_08006420(int baseAddress,uint bitOffset,int newBits)\n\n{\n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) & ~(4 << (bitOffset & 0xff));\n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) | newBits << (bitOffset & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006420": "update_value_with_param_08006420",
                "param_1": "baseAddress",
                "param_2": "bitOffset",
                "param_3": "newBits"
            },
            "calling": [
                "FUN_0800643c",
                "FUN_08006460"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800643c": {
            "entrypoint": "0x0800643c",
            "current_name": "set_flags_and_values_0800643c",
            "code": "\nundefined4 setFlagsAndValues_0800643c(uint **arrayPtr,undefined4 value)\n\n{\n  FUN_08006420(*arrayPtr,value,4);\n  (*arrayPtr)[0x11] = (*arrayPtr)[0x11] | 0x8000;\n  **arrayPtr = **arrayPtr | 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800643c": "set_flags_and_values_0800643c",
                "param_1": "arrayPtr",
                "param_2": "value"
            },
            "calling": [
                "FUN_08007118"
            ],
            "called": [
                "FUN_08006420"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006460": {
            "entrypoint": "0x08006460",
            "current_name": "update_flags_and_values_08006460",
            "code": "\nundefined4 updateFlagsAndValues_08006460(uint **data,undefined4 value)\n\n{\n  uint *tempPtr;\n  \n  FUN_08006420(*data,value,0);\n  tempPtr = *data;\n  if (((tempPtr[8] & 0x1111) == 0) && ((tempPtr[8] & 0x444) == 0)) {\n    tempPtr[0x11] = tempPtr[0x11] & 0xffff7fff;\n  }\n  tempPtr = *data;\n  if (((tempPtr[8] & 0x1111) == 0) && ((tempPtr[8] & 0x444) == 0)) {\n    *tempPtr = *tempPtr & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006460": "update_flags_and_values_08006460",
                "param_1": "data",
                "param_2": "value",
                "puVar1": "tempPtr"
            },
            "calling": [
                "FUN_080071e4"
            ],
            "called": [
                "FUN_08006420"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080064ac": {
            "entrypoint": "0x080064ac",
            "current_name": "FUNC_080064ac",
            "code": "\nvoid FUNC_080064ac(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080064ac": "FUNC_080064ac"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080064ae": {
            "entrypoint": "0x080064ae",
            "current_name": "FUNC_080064ae",
            "code": "\nvoid FUNC_080064ae(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080064ae": "FUNC_080064ae"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080064b0": {
            "entrypoint": "0x080064b0",
            "current_name": "set_flags_and_value_080064b0",
            "code": "\nvoid setFlagsAndValue_080064b0(int *pointer)\n\n{\n  *(uint *)(*pointer + 0xc) = *(uint *)(*pointer + 0xc) & 0xfffffedf;\n  *(uint *)(*pointer + 0x14) = *(uint *)(*pointer + 0x14) & 0xfffffffe;\n  *(undefined *)((int)pointer + 0x3a) = 0x20;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080064b0": "set_flags_and_value_080064b0",
                "param_1": "pointer"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080064cc": {
            "entrypoint": "0x080064cc",
            "current_name": "process_data_080064cc",
            "code": "\nundefined4 processData_080064cc(int *data)\n\n{\n  short remainingCount;\n  byte *bytePointer;\n  \n  if (*(char *)((int)data + 0x39) != '!') {\n    return 2;\n  }\n  if (data[2] == 0x1000) {\n    *(uint *)(*data + 4) = *(ushort *)data[8] & 0x1ff;\n    if (data[4] == 0) {\n      data[8] = data[8] + 2;\n    }\n    else {\n      data[8] = data[8] + 1;\n    }\n  }\n  else {\n    bytePointer = (byte *)data[8];\n    data[8] = (int)(bytePointer + 1);\n    *(uint *)(*data + 4) = (uint)*bytePointer;\n  }\n  remainingCount = *(short *)((int)data + 0x26) + -1;\n  *(short *)((int)data + 0x26) = remainingCount;\n  if (remainingCount == 0) {\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xffffff7f;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) | 0x40;\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080064cc": "process_data_080064cc",
                "param_1": "data",
                "sVar1": "remainingCount",
                "pbVar2": "bytePointer"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006538": {
            "entrypoint": "0x08006538",
            "current_name": "update_config_08006538",
            "code": "\nvoid updateConfig_08006538(int *config)\n\n{\n  int var1;\n  int var2;\n  int var3;\n  int var4;\n  int var5;\n  int var6;\n  int var7;\n  int var8;\n  int var9;\n  int var10;\n  \n  *(uint *)(*config + 0x10) = *(uint *)(*config + 0x10) & 0xffffcfff | config[3];\n  *(uint *)(*config + 0xc) =\n       config[2] | config[4] | config[5] | *(uint *)(*config + 0xc) & 0xffffe9f3;\n  *(uint *)(*config + 0x14) = *(uint *)(*config + 0x14) & 0xfffffcff | config[6];\n  var10 = *config;\n  if (var10 != 0x40013800) {\n    var1 = FUN_08005a28();\n    var6 = config[1];\n    var2 = FUN_08005a28();\n    var7 = config[1];\n    var3 = FUN_08005a28();\n    var8 = config[1];\n    var4 = FUN_08005a28();\n    var9 = config[1];\n    var5 = FUN_08005a28();\n    *(uint *)(var10 + 8) =\n         ((uint)((int)((ulonglong)\n                       (((uint)(var4 * 0x19) / (uint)(var9 << 2) +\n                        (int)(((ulonglong)(uint)(var5 * 0x19) / (ulonglong)(uint)(config[1] << 2))\n                             / 100) * -100) * 0x10 + 0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n         ((((uint)(var2 * 0x19) / (uint)(var7 << 2) +\n           (int)(((ulonglong)(uint)(var3 * 0x19) / (ulonglong)(uint)(var8 << 2)) / 100) * -100) *\n           0x10 + 0x32) / 100 & 0xf0) +\n         (int)(((ulonglong)(uint)(var1 * 0x19) / (ulonglong)(uint)(var6 << 2)) / 100) * 0x10;\n    return;\n  }\n  var10 = FUN_08005a48();\n  var5 = config[1];\n  var1 = FUN_08005a48();\n  var6 = config[1];\n  var2 = FUN_08005a48();\n  var7 = config[1];\n  var3 = FUN_08005a48();\n  var8 = config[1];\n  var4 = FUN_08005a48();\n  iRam40013808 = ((uint)((int)((ulonglong)\n                               (((uint)(var3 * 0x19) / (uint)(var8 << 2) +\n                                (int)(((ulonglong)(uint)(var4 * 0x19) /\n                                      (ulonglong)(uint)(config[1] << 2)) / 100) * -100) * 0x10 +\n                               0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n                 ((((uint)(var1 * 0x19) / (uint)(var6 << 2) +\n                   (int)(((ulonglong)(uint)(var2 * 0x19) / (ulonglong)(uint)(var7 << 2)) / 100) *\n                   -100) * 0x10 + 0x32) / 100 & 0xf0) +\n                 (int)(((ulonglong)(uint)(var10 * 0x19) / (ulonglong)(uint)(var5 << 2)) / 100) *\n                 0x10;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006538": "update_config_08006538",
                "param_1": "config",
                "iVar1": "var1",
                "iVar2": "var2",
                "iVar3": "var3",
                "iVar4": "var4",
                "iVar5": "var5",
                "iVar6": "var6",
                "iVar7": "var7",
                "iVar8": "var8",
                "iVar9": "var9",
                "iVar10": "var10"
            },
            "calling": [
                "FUN_0800674e"
            ],
            "called": [
                "FUN_08005a28",
                "FUN_08005a48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080066e8": {
            "entrypoint": "0x080066e8",
            "current_name": "check_condition_080066e8",
            "code": "\nundefined4 checkCondition_080066e8(uint **inputArrayPtr,uint mask,uint expectedResult,int value,uint maxDifference)\n\n{\n  int result;\n  \n  do {\n    if (((mask & ~**inputArrayPtr) == 0) != expectedResult) {\n      return 0;\n    }\n  } while ((maxDifference == 0xffffffff) ||\n          ((maxDifference != 0 && (result = FUN_08003760(), (uint)(result - value) <= maxDifference))));\n  (*inputArrayPtr)[3] = (*inputArrayPtr)[3] & 0xfffffe5f;\n  (*inputArrayPtr)[5] = (*inputArrayPtr)[5] & 0xfffffffe;\n  *(undefined *)((int)inputArrayPtr + 0x39) = 0x20;\n  *(undefined *)((int)inputArrayPtr + 0x3a) = 0x20;\n  *(undefined *)(inputArrayPtr + 0xe) = 0;\n  return 3;\n}\n\n",
            "renaming": {
                "FUN_080066e8": "check_condition_080066e8",
                "param_1": "inputArrayPtr",
                "param_2": "mask",
                "param_3": "expectedResult",
                "param_4": "value",
                "param_5": "maxDifference",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080067ac"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800674c": {
            "entrypoint": "0x0800674c",
            "current_name": "FUNC_0800674c",
            "code": "\nvoid FUNC_0800674c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800674c": "FUNC_0800674c"
            },
            "calling": [
                "FUN_0800674e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800674e": {
            "entrypoint": "0x0800674e",
            "current_name": "initialize_data_0800674e",
            "code": "\nundefined4 initializeData_0800674e(int *dataPtr)\n\n{\n  if (dataPtr != (int *)0x0) {\n    if (*(char *)((int)dataPtr + 0x39) == '\\0') {\n      *(undefined *)(dataPtr + 0xe) = 0;\n      FUNC_0800674c();\n    }\n    *(undefined *)((int)dataPtr + 0x39) = 0x24;\n    *(uint *)(*dataPtr + 0xc) = *(uint *)(*dataPtr + 0xc) & 0xffffdfff;\n    FUN_08006538(dataPtr);\n    *(uint *)(*dataPtr + 0x10) = *(uint *)(*dataPtr + 0x10) & 0xffffb7ff;\n    *(uint *)(*dataPtr + 0x14) = *(uint *)(*dataPtr + 0x14) & 0xffffffd5;\n    *(uint *)(*dataPtr + 0xc) = *(uint *)(*dataPtr + 0xc) | 0x2000;\n    counter = 0;\n    *(undefined *)((int)dataPtr + 0x39) = 0x20;\n    *(undefined *)((int)dataPtr + 0x3a) = 0x20;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800674e": "initialize_data_0800674e",
                "param_1": "dataPtr",
                "param_1[0xf]": "counter"
            },
            "calling": [
                "FUN_08008078"
            ],
            "called": [
                "FUN_0800674c",
                "FUN_08006538"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080067ac": {
            "entrypoint": "0x080067ac",
            "current_name": "FUNC_080067ac",
            "code": "\nundefined4 FUNC_080067ac(int *param_1,ushort *param_2,int param_3,undefined4 param_4)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  \n  if (*(char *)((int)param_1 + 0x39) == ' ') {\n    if (param_2 == (ushort *)0x0) {\n      uVar2 = 1;\n    }\n    else if (param_3 == 0) {\n      uVar2 = 1;\n    }\n    else if (*(char *)(param_1 + 0xe) == '\\x01') {\n      uVar2 = 2;\n    }\n    else {\n      *(undefined *)(param_1 + 0xe) = 1;\n      param_1[0xf] = 0;\n      *(undefined *)((int)param_1 + 0x39) = 0x21;\n      uVar2 = FUN_08003760();\n      *(short *)(param_1 + 9) = (short)param_3;\n      *(short *)((int)param_1 + 0x26) = (short)param_3;\n      while (*(short *)((int)param_1 + 0x26) != 0) {\n        *(short *)((int)param_1 + 0x26) = *(short *)((int)param_1 + 0x26) + -1;\n        if (param_1[2] == 0x1000) {\n          iVar1 = FUN_080066e8(param_1,0x80,0,uVar2,param_4);\n          if (iVar1 != 0) {\n            return 3;\n          }\n          *(uint *)(*param_1 + 4) = *param_2 & 0x1ff;\n          if (param_1[4] == 0) {\n            param_2 = param_2 + 1;\n          }\n          else {\n            param_2 = (ushort *)((int)param_2 + 1);\n          }\n        }\n        else {\n          iVar1 = FUN_080066e8(param_1,0x80,0,uVar2,param_4);\n          if (iVar1 != 0) {\n            return 3;\n          }\n          *(uint *)(*param_1 + 4) = (uint)*(byte *)param_2;\n          param_2 = (ushort *)((int)param_2 + 1);\n        }\n      }\n      iVar1 = FUN_080066e8(param_1,0x40,0,uVar2,param_4);\n      if (iVar1 == 0) {\n        *(undefined *)((int)param_1 + 0x39) = 0x20;\n        *(undefined *)(param_1 + 0xe) = 0;\n        uVar2 = 0;\n      }\n      else {\n        uVar2 = 3;\n      }\n    }\n  }\n  else {\n    uVar2 = 2;\n  }\n  return uVar2;\n}\n\n",
            "renaming": {
                "FUN_080067ac": "FUNC_080067ac"
            },
            "calling": [
                "FUN_08008500"
            ],
            "called": [
                "FUN_080066e8",
                "FUN_08003760"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800688e": {
            "entrypoint": "0x0800688e",
            "current_name": "update_data_0800688e",
            "code": "\nundefined4 updateData_0800688e(int *data,int value1,int value2)\n\n{\n  if (*(char *)((int)data + 0x39) != ' ') {\n    return 2;\n  }\n  if (value1 == 0) {\n    return 1;\n  }\n  if (value2 == 0) {\n    return 1;\n  }\n  if (*(char *)(data + 0xe) != '\\x01') {\n    data_value1 = value1;\n    *(short *)(data + 9) = (short)value2;\n    *(short *)((int)data + 0x26) = (short)value2;\n    data_value4 = 0;\n    *(undefined *)((int)data + 0x39) = 0x21;\n    *(undefined *)(data + 0xe) = 0;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) | 0x80;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_0800688e": "update_data_0800688e",
                "param_1": "data",
                "param_2": "value1",
                "param_3": "value2",
                "param_1[8]": "data_value1",
                "param_1[0xf]": "data_value4"
            },
            "calling": [
                "FUN_08008694",
                "FUN_08008730"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080068d6": {
            "entrypoint": "0x080068d6",
            "current_name": "check_space_and_set_values_080068d6",
            "code": "\nundefined4 checkSpaceAndSetValues_080068d6(int *ptrArray,int value1,int value2)\n\n{\n  if (*(char *)((int)ptrArray + 0x3a) != ' ') {\n    return 2;\n  }\n  if (value1 == 0) {\n    return 1;\n  }\n  if (value2 == 0) {\n    return 1;\n  }\n  if (*(char *)(ptrArray + 0xe) != '\\x01') {\n    ptrArray[10] = value1;\n    *(short *)(ptrArray + 0xb) = (short)value2;\n    *(short *)((int)ptrArray + 0x2e) = (short)value2;\n    ptrArray[0xf] = 0;\n    *(undefined *)((int)ptrArray + 0x3a) = 0x22;\n    *(undefined *)(ptrArray + 0xe) = 0;\n    *(uint *)(*ptrArray + 0xc) = *(uint *)(*ptrArray + 0xc) | 0x100;\n    *(uint *)(*ptrArray + 0x14) = *(uint *)(*ptrArray + 0x14) | 1;\n    *(uint *)(*ptrArray + 0xc) = *(uint *)(*ptrArray + 0xc) | 0x20;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_080068d6": "check_space_and_set_values_080068d6",
                "param_1": "ptrArray",
                "param_2": "value1",
                "param_3": "value2",
                "param_1[10]": "ptrArray[10]",
                "param_1[0xf]": "ptrArray[0xf]"
            },
            "calling": [
                "FUN_08008600",
                "FUN_0800863c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006932": {
            "entrypoint": "0x08006932",
            "current_name": "reset_flags_08006932",
            "code": "\nundefined4 resetFlags_08006932(int *ptr)\n\n{\n  *(uint *)(*ptr + 0xc) = *(uint *)(*ptr + 0xc) & 0xffffffbf;\n  *(undefined *)((int)ptr + 0x39) = 0x20;\n  FUN_08008730();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006932": "reset_flags_08006932",
                "param_1": "ptr"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [
                "FUN_08008730"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800694c": {
            "entrypoint": "0x0800694c",
            "current_name": "process_data_0800694c",
            "code": "\nundefined4 processData_0800694c(int *data)\n\n{\n  byte *bytePtr;\n  short count;\n  undefined *undefinedPtr;\n  \n  if (*(char *)((int)data + 0x3a) != '\\\"') {\n    return 2;\n  }\n  if (data[2] == 0x1000) {\n    if (data[4] == 0) {\n      *(ushort *)data[10] = (ushort)((uint)(*(int *)(*data + 4) << 0x17) >> 0x17);\n      data[10] = data[10] + 2;\n    }\n    else {\n      *(ushort *)data[10] = (ushort)*(undefined4 *)(*data + 4) & 0xff;\n      data[10] = data[10] + 1;\n    }\n  }\n  else if (data[4] == 0) {\n    undefinedPtr = (undefined *)data[10];\n    data[10] = (int)(undefinedPtr + 1);\n    *undefinedPtr = (char)*(undefined4 *)(*data + 4);\n  }\n  else {\n    bytePtr = (byte *)data[10];\n    data[10] = (int)(bytePtr + 1);\n    *bytePtr = (byte)*(undefined4 *)(*data + 4) & 0x7f;\n  }\n  count = *(short *)((int)data + 0x2e) + -1;\n  *(short *)((int)data + 0x2e) = count;\n  if (count != 0) {\n    return 0;\n  }\n  *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xffffffdf;\n  *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xfffffeff;\n  *(uint *)(*data + 0x14) = *(uint *)(*data + 0x14) & 0xfffffffe;\n  *(undefined *)((int)data + 0x3a) = 0x20;\n  FUN_0800870c();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800694c": "process_data_0800694c",
                "param_1": "data",
                "pbVar1": "bytePtr",
                "sVar2": "count",
                "puVar3": "undefinedPtr"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [
                "FUN_0800870c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080069ec": {
            "entrypoint": "0x080069ec",
            "current_name": "check_and_execute_actions_080069ec",
            "code": "\nvoid checkAndExecuteActions_080069ec(uint **parameters)\n\n{\n  int result;\n  uint value1;\n  uint *pointer;\n  uint value2;\n  uint value3;\n  \n  pointer = *parameters;\n  value3 = *pointer;\n  value1 = pointer[3];\n  if ((((value3 & 0xf) == 0) && ((value3 & 0x20) != 0)) && ((value1 & 0x20) != 0)) {\n    FUN_0800694c(parameters);\n    return;\n  }\n  if (((value3 & 0xf) == 0) || ((value2 = pointer[5] & 1, value2 == 0 && ((value1 & 0x120) == 0)))) {\n    if (((value3 & 0x80) != 0) && ((value1 & 0x80) != 0)) {\n      FUN_080064cc(parameters);\n      return;\n    }\n    if (((value3 & 0x40) != 0) && ((value1 & 0x40) != 0)) {\n      FUN_08006932(parameters);\n    }\n  }\n  else {\n    if (((value3 & 1) != 0) && ((value1 & 0x100) != 0)) {\n      parameters[0xf] = (uint *)((uint)parameters[0xf] | 1);\n    }\n    if (((value3 & 4) != 0) && (value2 != 0)) {\n      parameters[0xf] = (uint *)((uint)parameters[0xf] | 2);\n    }\n    if (((value3 & 2) != 0) && (value2 != 0)) {\n      parameters[0xf] = (uint *)((uint)parameters[0xf] | 4);\n    }\n    if (((value3 & 8) != 0) && (value2 != 0)) {\n      parameters[0xf] = (uint *)((uint)parameters[0xf] | 8);\n    }\n    if (parameters[0xf] != (uint *)0x0) {\n      if (((value3 & 0x20) != 0) && ((value1 & 0x20) != 0)) {\n        FUN_0800694c(parameters);\n      }\n      if ((((uint)parameters[0xf] & 8) == 0) && (((*parameters)[5] & 0x40) == 0)) {\n        FUNC_0800877c(parameters);\n        parameters[0xf] = (uint *)0x0;\n        return;\n      }\n      FUN_080064b0(parameters);\n      pointer = *parameters;\n      if ((pointer[5] & 0x40) == 0) {\n        FUNC_0800877c(parameters);\n        return;\n      }\n      pointer[5] = pointer[5] & 0xffffffbf;\n      if (parameters[0xd] == (uint *)0x0) {\n        FUNC_0800877c(parameters);\n        return;\n      }\n      parameters[0xd][0xd] = (uint)&LAB_08006b0c_1;\n      result = FUN_08004050(parameters[0xd]);\n      if (result != 0) {\n        (*(code *)parameters[0xd][0xd])();\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080069ec": "check_and_execute_actions_080069ec",
                "param_1": "parameters",
                "iVar1": "result",
                "uVar2": "value1",
                "puVar3": "pointer",
                "uVar4": "value2",
                "uVar5": "value3"
            },
            "calling": [],
            "called": [
                "FUN_0800877c",
                "FUN_080064b0",
                "FUN_08004050",
                "FUN_08006932",
                "FUN_0800694c",
                "FUN_080064cc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b1c": {
            "entrypoint": "0x08006b1c",
            "current_name": "combine_bytes_08006b1c",
            "code": "\nbyte combineBytes_08006b1c(int input)\n\n{\n  return *(byte *)(input + 0x3a) | *(byte *)(input + 0x39);\n}\n\n",
            "renaming": {
                "FUN_08006b1c": "combine_bytes_08006b1c",
                "param_1": "input"
            },
            "calling": [
                "FUN_080085b8",
                "FUN_080085dc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b28": {
            "entrypoint": "0x08006b28",
            "current_name": "check_bit_value_08006b28",
            "code": "\nuint checkBitValue_08006b28(uint inputValue,int arrayAddress)\n\n{\n  return *(uint *)(arrayAddress + ((inputValue << 0x18) >> 0x1c) * 4) >> (inputValue & 0xf) & 1;\n}\n\n",
            "renaming": {
                "FUN_08006b28": "check_bit_value_08006b28",
                "param_1": "inputValue",
                "param_2": "arrayAddress"
            },
            "calling": [
                "FUN_08008990",
                "FUN_08008a24",
                "FUN_080088e0",
                "FUN_08008a6c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b3e": {
            "entrypoint": "0x08006b3e",
            "current_name": "update_bit_08006b3e",
            "code": "\nvoid updateBit_08006b3e(uint value,int array)\n\n{\n  uint index;\n  \n  index = (value << 0x18) >> 0x1c;\n  *(uint *)(array + index * 4) = *(uint *)(array + index * 4) | 1 << (value & 0xf);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006b3e": "update_bit_08006b3e",
                "param_1": "value",
                "param_2": "array",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08008990",
                "FUN_080088e0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b5c": {
            "entrypoint": "0x08006b5c",
            "current_name": "update_bit_08006b5c",
            "code": "\nvoid updateBit_08006b5c(uint bitIndex,int array)\n\n{\n  uint offset;\n  \n  offset = (bitIndex << 0x18) >> 0x1c;\n  *(uint *)(array + offset * 4) = *(uint *)(array + offset * 4) & ~(1 << (bitIndex & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006b5c": "update_bit_08006b5c",
                "param_1": "bitIndex",
                "param_2": "array",
                "uVar1": "offset"
            },
            "calling": [
                "FUN_08008990"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b7c": {
            "entrypoint": "0x08006b7c",
            "current_name": "get_memory_address_08006b7c",
            "code": "\nundefined4 getMemoryAddress_08006b7c(undefined4 input)\n\n{\n  switch(input) {\n  case 0:\n    return 0x40010800;\n  case 1:\n    return 0x40010c00;\n  case 2:\n    return 0x40011000;\n  case 3:\n    return 0x40011400;\n  case 4:\n    return 0x40011800;\n  default:\n    return 0;\n  }\n}\n\n",
            "renaming": {
                "FUN_08006b7c": "get_memory_address_08006b7c",
                "param_1": "input"
            },
            "calling": [
                "FUN_08008a24",
                "FUN_08008a6c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006bb8": {
            "entrypoint": "0x08006bb8",
            "current_name": "set_register_value_08006bb8",
            "code": "\n\n\nundefined4 set_register_value_08006bb8(undefined4 register_index)\n\n{\n  undefined4 new_register_value;\n  \n  switch(register_index) {\n  case 0:\n    _DAT_40021018 = _DAT_40021018 | 4;\n    new_register_value = 0x40010800;\n    break;\n  case 1:\n    _DAT_40021018 = _DAT_40021018 | 8;\n    new_register_value = 0x40010c00;\n    break;\n  case 2:\n    _DAT_40021018 = _DAT_40021018 | 0x10;\n    new_register_value = 0x40011000;\n    break;\n  case 3:\n    _DAT_40021018 = _DAT_40021018 | 0x20;\n    new_register_value = 0x40011400;\n    break;\n  case 4:\n    _DAT_40021018 = _DAT_40021018 | 0x40;\n    new_register_value = 0x40011800;\n    break;\n  default:\n    new_register_value = 0;\n  }\n  return new_register_value;\n}\n\n",
            "renaming": {
                "FUN_08006bb8": "set_register_value_08006bb8",
                "param_1": "register_index",
                "uVar1": "new_register_value"
            },
            "calling": [
                "FUN_08006ca8",
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08006e68",
                "FUN_08007258"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c60": {
            "entrypoint": "0x08006c60",
            "current_name": "validate_param_08006c60",
            "code": "\nuint validate_param_08006c60(undefined4 input_param1,undefined4 input_param2,undefined4 input_param3,undefined4 input_param4)\n\n{\n  int result;\n  uint shifted_value;\n  \n  result = FUN_08007376(input_param1,&DAT_0800a5b8,input_param3,input_param4,input_param4);\n  shifted_value = (uint)(result << 0xc) >> 0x1b;\n  if (0x10 < shifted_value - 1) {\n    shifted_value = 0;\n  }\n  return shifted_value;\n}\n\n",
            "renaming": {
                "FUN_08006c60": "validate_param_08006c60",
                "param_1": "input_param1",
                "param_2": "input_param2",
                "param_3": "input_param3",
                "param_4": "input_param4",
                "iVar1": "result",
                "uVar2": "shifted_value"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08007376"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c7c": {
            "entrypoint": "0x08006c7c",
            "current_name": "check_bitwise_shift_08006c7c",
            "code": "\nundefined4 check_bitwise_shift_08006c7c(undefined4 input_parameter1,undefined4 input_parameter2,undefined4 input_parameter3,undefined4 input_parameter4)\n\n{\n  int result;\n  uint shifted_result;\n  \n  result = FUN_08007376(input_parameter1,&DAT_0800a6cc,input_parameter3,input_parameter4,input_parameter4);\n  shifted_result = (uint)(result << 0xc) >> 0x1b;\n  if (shifted_result == 3) {\n    return 8;\n  }\n  if (shifted_result != 4) {\n    if (shifted_result != 2) {\n      return 0;\n    }\n    return 4;\n  }\n  return 0xc;\n}\n\n",
            "renaming": {
                "FUN_08006c7c": "check_bitwise_shift_08006c7c",
                "param_1": "input_parameter1",
                "param_2": "input_parameter2",
                "param_3": "input_parameter3",
                "param_4": "input_parameter4",
                "iVar1": "result",
                "uVar2": "shifted_result"
            },
            "calling": [
                "FUN_080071e4",
                "FUN_08007118"
            ],
            "called": [
                "FUN_08007376"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ca8": {
            "entrypoint": "0x08006ca8",
            "current_name": "update_status_08006ca8",
            "code": "\n\n\nvoid updateStatus_08006ca8(int *dataPtr,undefined4 dataSize)\n\n{\n  undefined4 result;\n  uint flag;\n  int value;\n  uint bitMask;\n  undefined4 constant1;\n  undefined4 constant2;\n  \n  value = *dataPtr;\n  if (value == 0x40012400) {\n    flag = _DAT_40021018 | 0x200;\n    value = 0x200;\n    _DAT_40021018 = flag;\n  }\n  else {\n    flag = 0x40012800;\n    if (value == 0x40012800) {\n      flag = _DAT_40021018 | 0x400;\n      value = 0x400;\n      _DAT_40021018 = flag;\n    }\n  }\n  result = FUN_08006bb8((uint)((int)(char)DAT_20000014 << 0x18) >> 0x1c,dataSize,flag,value);\n  bitMask = 1 << (DAT_20000014 & 0xf) & 0xffff;\n  constant1 = 3;\n  constant2 = 0;\n  FUN_080040e8(result,&bitMask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006ca8": "update_status_08006ca8",
                "param_1": "dataPtr",
                "param_2": "dataSize",
                "iVar3": "value",
                "uVar1": "result",
                "uVar2": "flag",
                "local_18": "bitMask",
                "local_14": "constant1",
                "local_10": "constant2"
            },
            "calling": [
                "FUN_08003bd8"
            ],
            "called": [
                "FUN_08006bb8",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d24": {
            "entrypoint": "0x08006d24",
            "current_name": "update_permissions_08006d24",
            "code": "\n\n\nvoid updatePermissions_08006d24(int *permissions)\n\n{\n  if (*permissions != 0x40012400) {\n    if (*permissions == 0x40012800) {\n      _DAT_4002100c = _DAT_4002100c & 0xfffffbff;\n      _DAT_40021018 = _DAT_40021018 & 0xfffffbff;\n    }\n    return;\n  }\n  _DAT_4002100c = _DAT_4002100c & 0xfffffdff;\n  _DAT_40021018 = _DAT_40021018 & 0xfffffdff;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d24": "update_permissions_08006d24",
                "param_1": "permissions"
            },
            "calling": [
                "FUN_08003ce8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d80": {
            "entrypoint": "0x08006d80",
            "current_name": "check_and_process_data_08006d80",
            "code": "\nundefined2 check_and_process_data_08006d80(undefined4 input_data)\n\n{\n  int result;\n  uint flags;\n  undefined2 processed_data;\n  uint data_length;\n  undefined4 is_valid;\n  undefined4 flag_value;\n  int temp_variable_1;\n  undefined4 temp_variable_2;\n  undefined4 temp_variable_3;\n  undefined4 temp_variable_4;\n  undefined4 temp_variable_5;\n  undefined4 temp_variable_6;\n  undefined4 temp_variable_7;\n  undefined4 constant_value;\n  undefined4 temp_variable_8;\n  \n  FUN_080091c6(&temp_variable_1,0,0x30);\n  data_length = 0;\n  is_valid = 0;\n  flag_value = 0;\n  processed_data = 0;\n  temp_variable_1 = FUN_08007320(input_data,&DAT_0800a5b8);\n  if (temp_variable_1 == 0) {\n    processed_data = 0;\n  }\n  else {\n    temp_variable_2 = 0;\n    temp_variable_3 = 0;\n    temp_variable_4 = 0;\n    temp_variable_6 = 0;\n    constant_value = 0xe0000;\n    temp_variable_8 = 0;\n    temp_variable_5 = 1;\n    temp_variable_7 = 0;\n    DAT_20000014 = (undefined)input_data;\n    result = FUN_08003bd8(&temp_variable_1);\n    if (result == 0) {\n      data_length = FUN_08006c60(input_data);\n      if (data_length < 0x12) {\n        is_valid = 1;\n        flag_value = 2;\n        result = FUN_080038e4(&temp_variable_1,&data_length);\n        if (result == 0) {\n          result = FUN_08003e20(&temp_variable_1);\n          if (result == 0) {\n            result = FUN_08003aa0(&temp_variable_1);\n            if (result == 0) {\n              result = FUN_0800376c(&temp_variable_1,10);\n              if (result == 0) {\n                flags = FUN_08003a1c(&temp_variable_1);\n                if ((flags & 0x200) != 0) {\n                  processed_data = FUN_080038dc(&temp_variable_1);\n                }\n                result = FUN_08003de4(&temp_variable_1);\n                if (result == 0) {\n                  result = FUN_08003ce8(&temp_variable_1);\n                  if (result != 0) {\n                    processed_data = 0;\n                  }\n                }\n                else {\n                  processed_data = 0;\n                }\n              }\n              else {\n                processed_data = 0;\n              }\n            }\n            else {\n              processed_data = 0;\n            }\n          }\n          else {\n            processed_data = 0;\n          }\n        }\n        else {\n          processed_data = 0;\n        }\n      }\n      else {\n        processed_data = 0;\n      }\n    }\n    else {\n      processed_data = 0;\n    }\n  }\n  return processed_data;\n}\n\n",
            "renaming": {
                "FUN_08006d80": "check_and_process_data_08006d80",
                "param_1": "input_data",
                "iVar1": "result",
                "uVar2": "flags",
                "local_46": "processed_data",
                "local_44": "data_length",
                "local_40": "is_valid",
                "local_3c": "flag_value",
                "local_38": "temp_variable_1",
                "local_34": "temp_variable_2",
                "local_30": "temp_variable_3",
                "local_2c": "temp_variable_4",
                "local_28": "temp_variable_5",
                "local_24": "temp_variable_6",
                "local_20": "temp_variable_7",
                "local_1c": "constant_value",
                "local_10": "temp_variable_8"
            },
            "calling": [
                "FUN_08008880"
            ],
            "called": [
                "FUN_080038dc",
                "FUN_08003bd8",
                "FUN_080038e4",
                "FUN_08003a1c",
                "FUN_08006c60",
                "FUN_080091c6",
                "FUN_0800376c",
                "FUN_08003ce8",
                "FUN_08003e20",
                "FUN_08003aa0",
                "FUN_08003de4",
                "FUN_08007320"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e68": {
            "entrypoint": "0x08006e68",
            "current_name": "configure_hardware_08006e68",
            "code": "\n\n\nvoid configureHardware_08006e68(undefined4 config)\n\n{\n  int status;\n  undefined4 transformedConfig;\n  uint bitmask;\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  \n  status = FUN_08007376((int)(char)DAT_20000014,&DAT_0800a6cc);\n  FUN_08007438(config);\n  transformedConfig = FUN_08006bb8((uint)((int)(char)DAT_20000014 << 0x18) >> 0x1c);\n  value1 = 2;\n  value2 = 0;\n  value3 = 3;\n  _DAT_40021018 = _DAT_40021018 | 1;\n  switch((uint)(status << 0x11) >> 0x19) {\n  case 1:\n    _DAT_40010004 = _DAT_40010004 | 0x7000001;\n    break;\n  case 2:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n    break;\n  case 3:\n    _DAT_40010004 = _DAT_40010004 | 0x7000002;\n    break;\n  case 4:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n    break;\n  case 5:\n    _DAT_40010004 = _DAT_40010004 | 0x7000004;\n    break;\n  case 6:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n    break;\n  case 7:\n    _DAT_40010004 = _DAT_40010004 | 0x7000008;\n    break;\n  case 8:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n    break;\n  case 9:\n    _DAT_40010004 = _DAT_40010004 | 0x7000030;\n    break;\n  case 10:\n    _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n    break;\n  case 0xb:\n    _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n    break;\n  case 0xc:\n    _DAT_40010004 = _DAT_40010004 | 0x70000c0;\n    break;\n  case 0xd:\n    _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n    break;\n  case 0xe:\n    _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n    break;\n  case 0xf:\n    _DAT_40010004 = _DAT_40010004 | 0x7000300;\n    break;\n  case 0x10:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n    break;\n  case 0x11:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n    break;\n  case 0x12:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n    break;\n  case 0x13:\n    _DAT_40010004 = _DAT_40010004 | 0x7000c00;\n    break;\n  case 0x14:\n    _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n    break;\n  case 0x15:\n    _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n    break;\n  case 0x16:\n    _DAT_40010004 = _DAT_40010004 | 0x7001000;\n    break;\n  case 0x17:\n    _DAT_40010004 = _DAT_40010004 & 0xffffefff | 0x7000000;\n    break;\n  case 0x1b:\n    _DAT_40010004 = _DAT_40010004 | 0x7008000;\n    break;\n  case 0x1c:\n    _DAT_40010004 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n    break;\n  case 0x21:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff;\n    break;\n  case 0x22:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n    break;\n  case 0x23:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n    break;\n  case 0x24:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n  }\n  bitmask = 1 << (DAT_20000014 & 0xf) & 0xffff;\n  FUN_080040e8(transformedConfig,&bitmask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006e68": "configure_hardware_08006e68",
                "param_1": "config",
                "iVar1": "status",
                "uVar2": "transformedConfig",
                "local_20": "bitmask",
                "local_1c": "value1",
                "local_18": "value2",
                "local_14": "value3"
            },
            "calling": [
                "FUN_08006092"
            ],
            "called": [
                "FUN_08007438",
                "FUN_08007376",
                "FUN_08006bb8",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007110": {
            "entrypoint": "0x08007110",
            "current_name": "execute_binary_function_08007110",
            "code": "\nvoid execute_binary_function_08007110(void)\n\n{\n  FUN_080074e0();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007110": "execute_binary_function_08007110"
            },
            "calling": [
                "FUN_08005e2e"
            ],
            "called": [
                "FUN_080074e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007118": {
            "entrypoint": "0x08007118",
            "current_name": "extract_and_process_data_08007118",
            "code": "\nvoid extract_and_process_data_08007118(undefined4 input_value,uint divisor,int offset,undefined4 target_value,char flag)\n\n{\n  uint div_result;\n  int result;\n  int success;\n  undefined4 size1;\n  undefined4 zero1;\n  undefined4 zero2;\n  undefined4 zero3;\n  undefined4 zero4;\n  undefined4 zero5;\n  undefined4 zero6;\n  int buffer;\n  int computed_value;\n  undefined4 zero7;\n  int computed_offset;\n  undefined4 zero8;\n  undefined4 zero9;\n  undefined zero10;\n  \n  FUN_080091c6(&buffer,0,0x40);\n  size1 = 0;\n  zero1 = 0;\n  zero2 = 0;\n  zero3 = 0;\n  zero4 = 0;\n  zero5 = 0;\n  zero6 = 0;\n  buffer = FUN_08007320(input_value,&DAT_0800a6cc);\n  if (buffer != 0) {\n    div_result = FUN_080075dc();\n    computed_value = div_result / divisor - 1;\n    computed_offset = offset + -1;\n    zero8 = 0;\n    zero7 = 0;\n    zero9 = 0;\n    zero10 = 0;\n    if (flag == '\\x01') {\n      DAT_20000014 = (undefined)input_value;\n      result = FUN_08006092(&buffer);\n      if (result != 0) {\n        return;\n      }\n    }\n    result = FUN_08006c7c(input_value);\n    if ((((result == 0) || (result == 4)) || (result == 8)) || ((result == 0xc || (result == 0x18)))) {\n      size1 = 0x60;\n      zero2 = 0;\n      zero4 = 0;\n      zero3 = 0;\n      zero6 = 0;\n      zero5 = 0;\n      zero1 = target_value;\n      success = FUN_08006186(&buffer,&size1,result);\n      if (success == 0) {\n        div_result = FUN_08007376(input_value,&DAT_0800a6cc);\n        if ((div_result & 0x100000) == 0) {\n          FUN_08006390(&buffer,result);\n        }\n        else {\n          FUN_0800643c(&buffer,result);\n        }\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007118": "extract_and_process_data_08007118",
                "param_1": "input_value",
                "param_2": "divisor",
                "param_3": "offset",
                "param_4": "target_value",
                "param_5": "flag",
                "uVar1": "div_result",
                "iVar2": "result",
                "iVar3": "success",
                "local_74": "size1",
                "local_70": "zero1",
                "local_6c": "zero2",
                "local_68": "zero3",
                "local_64": "zero4",
                "local_60": "zero5",
                "local_5c": "zero6",
                "local_58": "buffer",
                "local_54": "computed_value",
                "local_50": "zero7",
                "local_4c": "computed_offset",
                "local_48": "zero8",
                "local_44": "zero9",
                "local_1b": "zero10"
            },
            "calling": [
                "FUN_080088e0"
            ],
            "called": [
                "FUN_08006092",
                "FUN_08006186",
                "FUN_0800643c",
                "FUN_08006c7c",
                "FUN_080091c6",
                "FUN_08007376",
                "FUN_080075dc",
                "FUN_08006390",
                "FUN_08007320"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080071e4": {
            "entrypoint": "0x080071e4",
            "current_name": "process_data_080071e4",
            "code": "\nvoid processData_080071e4(undefined4 data)\n\n{\n  int result;\n  uint flags;\n  int array [17];\n  \n  array[0] = FUN_08007320(data,&DAT_0800a6cc);\n  if ((array[0] != 0) &&\n     ((((result = FUN_08006c7c(data), result == 0 || (result == 4)) || (result == 8)) ||\n      ((result == 0xc || (result == 0x18)))))) {\n    flags = FUN_08007376(data,&DAT_0800a6cc);\n    if ((flags & 0x100000) == 0) {\n      FUN_080063c0(array,result);\n    }\n    else {\n      FUN_08006460(array,result);\n    }\n    FUN_08005e2e(array);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080071e4": "process_data_080071e4",
                "param_1": "data",
                "iVar1": "result",
                "uVar2": "flags",
                "local_50": "array"
            },
            "calling": [
                "FUN_08008990"
            ],
            "called": [
                "FUN_08005e2e",
                "FUN_080063c0",
                "FUN_08006c7c",
                "FUN_08006460",
                "FUN_08007376",
                "FUN_08007320"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800723c": {
            "entrypoint": "0x0800723c",
            "current_name": "initialize_0800723c",
            "code": "\nvoid initialize_0800723c(void)\n\n{\n  FUN_08003760();\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800723c": "initialize_0800723c"
            },
            "calling": [
                "FUN_08008abc"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007244": {
            "entrypoint": "0x08007244",
            "current_name": "FUNC_08007244",
            "code": "\nvoid FUNC_08007244(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007244": "FUNC_08007244"
            },
            "calling": [
                "FUN_08007246"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08007246": {
            "entrypoint": "0x08007246",
            "current_name": "initialize_system_08007246",
            "code": "\nvoid initializeSystem_08007246(void)\n\n{\n  FUN_08003748();\n  FUN_08004046();\n  FUNC_08007244();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007246": "initialize_system_08007246"
            },
            "calling": [],
            "called": [
                "FUN_08007244",
                "FUN_08004046",
                "FUN_08003748"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007258": {
            "entrypoint": "0x08007258",
            "current_name": "configure_peripheral_08007258",
            "code": "\n\n\nvoid configurePeripheral_08007258(uint config,undefined4 param2,undefined4 param3)\n\n{\n  undefined4 shiftedValue;\n  uint bitMask;\n  undefined4 localParam2;\n  undefined4 localParam3;\n  undefined4 constantValue;\n  \n  shiftedValue = FUN_08006bb8((config << 0x18) >> 0x1c);\n  bitMask = 1 << (config & 0xf) & 0xffff;\n  constantValue = 3;\n  _DAT_40021018 = _DAT_40021018 | 1;\n  if ((config - 0xd & 0xff) < 2) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n  }\n  if (((config == 0xf) || (config == 0x13)) || (config == 0x14)) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n  }\n  localParam2 = param2;\n  localParam3 = param3;\n  FUN_080040e8(shiftedValue,&bitMask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007258": "configure_peripheral_08007258",
                "param_1": "config",
                "param_2": "param2",
                "param_3": "param3",
                "uVar1": "shiftedValue",
                "local_20": "bitMask",
                "local_1c": "localParam2",
                "local_18": "localParam3",
                "local_14": "constantValue"
            },
            "calling": [
                "FUN_08008990"
            ],
            "called": [
                "FUN_08006bb8",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080072d8": {
            "entrypoint": "0x080072d8",
            "current_name": "handle_param_080072d8",
            "code": "\nvoid handleParam_080072d8(undefined4 input1,undefined2 input2,int flag,undefined4 data)\n\n{\n  if (flag == 0) {\n    FUN_080042e2(input1,input2,0,data,data);\n    return;\n  }\n  FUN_080042e2(input1,input2,1,data,data);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080072d8": "handle_param_080072d8",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "flag",
                "param_4": "data"
            },
            "calling": [
                "FUN_08008a24"
            ],
            "called": [
                "FUN_080042e2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080072f0": {
            "entrypoint": "0x080072f0",
            "current_name": "execute_function_080072f0",
            "code": "\nvoid executeFunction_080072f0(undefined4 arg1,undefined2 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  FUN_080042d4(arg1,arg2,arg3,arg4,arg4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080072f0": "execute_function_080072f0",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "calling": [
                "FUN_08008a6c"
            ],
            "called": [
                "FUN_080042d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080072fa": {
            "entrypoint": "0x080072fa",
            "current_name": "initialize_program_080072fa",
            "code": "\nvoid initialize_program_080072fa(void)\n\n{\n  FUN_08003724();\n  FUN_080035b8();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080072fa": "initialize_program_080072fa"
            },
            "calling": [
                "FUN_080036a2"
            ],
            "called": [
                "FUN_08003724",
                "FUN_080035b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007306": {
            "entrypoint": "0x08007306",
            "current_name": "find_value_in_array_08007306",
            "code": "\nundefined4 find_value_in_array_08007306(int value_to_find,char *array)\n\n{\n  while( true ) {\n    if (*array == -1) {\n      return 0;\n    }\n    if (*array == value_to_find) break;\n    array = array + 0xc;\n  }\n  return *(undefined4 *)(array + 4);\n}\n\n",
            "renaming": {
                "FUN_08007306": "find_value_in_array_08007306",
                "param_1": "value_to_find",
                "param_2": "array"
            },
            "calling": [
                "FUN_08007306",
                "FUN_08007320"
            ],
            "called": [
                "FUN_08007306"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007320": {
            "entrypoint": "0x08007320",
            "current_name": "check_if_valid_parameter_08007320",
            "code": "\nundefined4 checkIfValidParameter_08007320(int inputParam)\n\n{\n  undefined4 returnValue;\n  \n  if (inputParam != -1) {\n    returnValue = FUN_08007306();\n    return returnValue;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007320": "check_if_valid_parameter_08007320",
                "param_1": "inputParam",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08008078",
                "FUN_080084b0",
                "FUN_080077b0",
                "FUN_080071e4",
                "FUN_08007118",
                "FUN_08006d80",
                "FUN_08008500"
            ],
            "called": [
                "FUN_08007306"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007332": {
            "entrypoint": "0x08007332",
            "current_name": "find_index_08007332",
            "code": "\nint find_index_08007332(int target,char *array)\n\n{\n  while( true ) {\n    if (*(int *)(array + 4) == 0) {\n      return -1;\n    }\n    if (*(int *)(array + 4) == target) break;\n    array = array + 0xc;\n  }\n  return (int)*array;\n}\n\n",
            "renaming": {
                "FUN_08007332": "find_index_08007332",
                "param_1": "target",
                "param_2": "array"
            },
            "calling": [
                "FUN_0800734a",
                "FUN_08007332"
            ],
            "called": [
                "FUN_08007332"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800734a": {
            "entrypoint": "0x0800734a",
            "current_name": "check_if_non_zero_return_0800734a",
            "code": "\nundefined4 checkIfNonZeroReturn_0800734a(int input)\n\n{\n  undefined4 returnValue;\n  \n  if (input != 0) {\n    returnValue = FUN_08007332();\n    return returnValue;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800734a": "check_if_non_zero_return_0800734a",
                "param_1": "input",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_080084b0",
                "FUN_08008d30"
            ],
            "called": [
                "FUN_08007332"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800735a": {
            "entrypoint": "0x0800735a",
            "current_name": "find_value_index_0800735a",
            "code": "\nundefined4 find_value_index_0800735a(int value,char *array_ptr)\n\n{\n  while( true ) {\n    if (*array_ptr == -1) {\n      return 0xffffffff;\n    }\n    if (*array_ptr == value) break;\n    array_ptr = array_ptr + 0xc;\n  }\n  return *(undefined4 *)(array_ptr + 8);\n}\n\n",
            "renaming": {
                "FUN_0800735a": "find_value_index_0800735a",
                "param_1": "value",
                "param_2": "array_ptr"
            },
            "calling": [
                "FUN_0800735a",
                "FUN_08007376"
            ],
            "called": [
                "FUN_0800735a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007376": {
            "entrypoint": "0x08007376",
            "current_name": "check_return_value_08007376",
            "code": "\nundefined4 checkReturnValue_08007376(int inputValue)\n\n{\n  undefined4 returnValue;\n  \n  if (inputValue == -1) {\n    return 0xffffffff;\n  }\n  returnValue = FUN_0800735a();\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08007376": "check_return_value_08007376",
                "param_1": "inputValue",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08006e68",
                "FUN_08006c60",
                "FUN_080071e4",
                "FUN_08006c7c",
                "FUN_08007118"
            ],
            "called": [
                "FUN_0800735a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800738a": {
            "entrypoint": "0x0800738a",
            "current_name": "check_value_in_list_0800738a",
            "code": "\nundefined4 check_value_in_list_0800738a(int value,char *list_of_values)\n\n{\n  if (value == -1) {\n    return 0;\n  }\n  while( true ) {\n    if (*list_of_values == -1) {\n      return 0;\n    }\n    if (value == *list_of_values) break;\n    list_of_values = list_of_values + 0xc;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800738a": "check_value_in_list_0800738a",
                "param_1": "value",
                "param_2": "list_of_values"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_08001cd0",
                "FUN_08008990",
                "FUN_08000a64",
                "FUN_080088e0",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073ae": {
            "entrypoint": "0x080073ae",
            "current_name": "compare_and_return_smaller_080073ae",
            "code": "\nint compareAndReturnSmaller_080073ae(int firstNumber,int secondNumber)\n\n{\n  if (firstNumber != secondNumber) {\n    if (firstNumber == 0) {\n      return secondNumber;\n    }\n    if (secondNumber == 0) {\n      return firstNumber;\n    }\n    firstNumber = 0;\n  }\n  return firstNumber;\n}\n\n",
            "renaming": {
                "FUN_080073ae": "compare_and_return_smaller_080073ae",
                "param_1": "firstNumber",
                "param_2": "secondNumber"
            },
            "calling": [
                "FUN_08008078",
                "FUN_080077b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073c0": {
            "entrypoint": "0x080073c0",
            "current_name": "execute_callback_080073c0",
            "code": "\nvoid executeCallback_080073c0(void)\n\n{\n  if (DAT_200005f4 != (code *)0x0) {\n    (*DAT_200005f4)(DAT_2000060c);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080073c0": "execute_callback_080073c0"
            },
            "calling": [
                "FUN_08005cb4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073e8": {
            "entrypoint": "0x080073e8",
            "current_name": "infinite_loop_080073e8",
            "code": "\nvoid infiniteLoop_080073e8(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080073e8": "infinite_loop_080073e8"
            },
            "calling": [
                "FUN_080035b8",
                "FUN_080073e8"
            ],
            "called": [
                "FUN_080073e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073ec": {
            "entrypoint": "0x080073ec",
            "current_name": "initialize_device_080073ec",
            "code": "\n\n\nvoid initializeDevice_080073ec(void)\n\n{\n  _DAT_40021000 = _DAT_40021000 & 0xfef2ffff | 1;\n  _DAT_40021004 = _DAT_40021004 & 0xf8800000;\n  _DAT_40021008 = 0x9f0000;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080073ec": "initialize_device_080073ec"
            },
            "calling": [
                "entry"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007438": {
            "entrypoint": "0x08007438",
            "current_name": "update_memory_and_data_08007438",
            "code": "\n\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nvoid updateMemoryAndData_08007438(int *param_1)\n\n{\n  if (*param_1 == 0x40012c00) {\n    _DAT_40021018 = _DAT_40021018 | 0x800;\n    DAT_20000610 = param_1;\n  }\n  if (*param_1 == 0x40000000) {\n    _DAT_4002101c = _DAT_4002101c | 1;\n    DAT_20000614 = param_1;\n  }\n  if (*param_1 == 0x40000400) {\n    _DAT_4002101c = _DAT_4002101c | 2;\n    DAT_20000618 = param_1;\n  }\n  if (*param_1 == 0x40000800) {\n    _DAT_4002101c = _DAT_4002101c | 4;\n    DAT_2000061c = param_1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007438": "update_memory_and_data_08007438"
            },
            "calling": [
                "FUN_08006e68",
                "FUN_08007708"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080074e0": {
            "entrypoint": "0x080074e0",
            "current_name": "update_memory_registers_080074e0",
            "code": "\n\n\nvoid updateMemoryRegisters_080074e0(int *memoryAddress)\n\n{\n  if (*memoryAddress == 0x40012c00) {\n    _DAT_40021018 = _DAT_40021018 & 0xfffff7ff;\n  }\n  if (*memoryAddress == 0x40000000) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffe;\n  }\n  if (*memoryAddress == 0x40000400) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffd;\n  }\n  if (*memoryAddress == 0x40000800) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffb;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080074e0": "update_memory_registers_080074e0",
                "param_1": "memoryAddress"
            },
            "calling": [
                "FUN_08007710",
                "FUN_08007110"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007544": {
            "entrypoint": "0x08007544",
            "current_name": "check_irq_priority_08007544",
            "code": "\nundefined4 checkIRQPriority_08007544(uint irqPriority)\n\n{\n  if (irqPriority == 0xffffffff) {\n    return 0;\n  }\n  if (irqPriority == 0x40000400) {\n    return 0x1d;\n  }\n  if (irqPriority < 0x40000401) {\n    if (irqPriority == 0x40000000) {\n      return 0x1c;\n    }\n  }\n  else {\n    if (irqPriority == 0x40000800) {\n      return 0x1e;\n    }\n    if (irqPriority == 0x40012c00) {\n      return 0x19;\n    }\n  }\n  FUN_080098d8(\"TIM: Unknown timer IRQn\");\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007544": "check_irq_priority_08007544",
                "param_1": "irqPriority"
            },
            "calling": [
                "FUN_080076e0",
                "FUN_08007648"
            ],
            "called": [
                "FUN_080098d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007594": {
            "entrypoint": "0x08007594",
            "current_name": "check_timer_instance_08007594",
            "code": "\nundefined4 checkTimerInstance_08007594(uint timerInstance)\n\n{\n  if (timerInstance == 0xffffffff) {\n    return 0;\n  }\n  if (timerInstance == 0x40000400) {\n    return 1;\n  }\n  if (timerInstance < 0x40000401) {\n    if (timerInstance == 0x40000000) {\n      return 1;\n    }\n  }\n  else {\n    if (timerInstance == 0x40000800) {\n      return 1;\n    }\n    if (timerInstance == 0x40012c00) {\n      return 2;\n    }\n  }\n  FUN_080098d8(\"TIM: Unknown timer instance\");\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007594": "check_timer_instance_08007594",
                "param_1": "timerInstance"
            },
            "calling": [
                "FUN_080075dc"
            ],
            "called": [
                "FUN_080098d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080075dc": {
            "entrypoint": "0x080075dc",
            "current_name": "check_clock_source_080075dc",
            "code": "\nint checkClockSource_080075dc(undefined4 source)\n\n{\n  uint previousClockSource;\n  int result;\n  uint currentClockSource;\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  undefined4 temp4;\n  uint temp5;\n  uint temp6;\n  \n  temp2 = 0;\n  temp3 = 0;\n  temp4 = 0;\n  temp5 = 0;\n  temp6 = 0;\n  temp1 = 0;\n  FUN_08005a68(&temp2,&temp1);\n  result = FUN_08007594(source);\n  previousClockSource = temp6;\n  currentClockSource = temp5;\n  if (result == 1) {\n    result = FUN_08005a28();\n  }\n  else if (result == 2) {\n    result = FUN_08005a48();\n    currentClockSource = previousClockSource;\n  }\n  else {\n    FUN_080098d8(\"TIM: Unknown clock source\");\n    result = 0;\n    currentClockSource = 0;\n  }\n  if (currentClockSource != 0x500) {\n    if (currentClockSource < 0x501) {\n      if (currentClockSource != 0x400) {\n        return result;\n      }\n    }\n    else if ((currentClockSource != 0x600) && (currentClockSource != 0x700)) {\n      return result;\n    }\n  }\n  return result << 1;\n}\n\n",
            "renaming": {
                "FUN_080075dc": "check_clock_source_080075dc",
                "param_1": "source",
                "uVar1": "previousClockSource",
                "iVar2": "result",
                "uVar3": "currentClockSource",
                "local_20": "temp1",
                "local_1c": "temp2",
                "local_18": "temp3",
                "local_14": "temp4",
                "local_10": "temp5",
                "local_c": "temp6"
            },
            "calling": [
                "FUN_08007648",
                "FUN_08007118"
            ],
            "called": [
                "FUN_08005a28",
                "FUN_08005a48",
                "FUN_080098d8",
                "FUN_08007594",
                "FUN_08005a68"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007648": {
            "entrypoint": "0x08007648",
            "current_name": "initialize_settings_08007648",
            "code": "\nvoid initializeSettings_08007648(undefined4 *settings,undefined4 value1,undefined4 value2,undefined4 value3)\n\n{\n  char character;\n  uint result;\n  int status;\n  undefined4 *nextSetting;\n  undefined4 localVar1;\n  undefined4 localVar2;\n  undefined4 localVar3;\n  undefined4 localVar4;\n  undefined4 localVar5;\n  undefined4 localVar6;\n  undefined4 localVar7;\n  \n  localVar1 = 0;\n  localVar2 = 0;\n  localVar3 = 0;\n  localVar4 = 0;\n  localVar5 = 0;\n  localVar6 = 0;\n  localVar7 = 0;\n  nextSetting = settings + 1;\n  *settings = 0x40000000;\n  settings[1] = 0x40000000;\n  settings[4] = value1;\n  result = FUN_080075dc();\n  settings[2] = result / 1000000 - 1;\n  settings[5] = 0;\n  settings[3] = 0;\n  settings[6] = 0;\n  settings[0x13] = value3;\n  localVar1 = 0;\n  localVar3 = 0;\n  localVar5 = 0;\n  localVar4 = 0;\n  localVar6 = 0;\n  localVar7 = 0;\n  localVar2 = value2;\n  character = FUN_08007544(*settings);\n  FUN_08003f30((int)character,0xe,0);\n  character = FUN_08007544(*settings);\n  FUN_08003f94((int)character);\n  status = FUN_08006060(nextSetting);\n  if ((status == 0) && (status = FUN_08006128(nextSetting,&localVar1,0), status == 0)) {\n    FUN_08006280(nextSetting,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007648": "initialize_settings_08007648",
                "param_1": "settings",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "cVar1": "character",
                "uVar2": "result",
                "iVar3": "status",
                "puVar4": "nextSetting",
                "local_34": "localVar1",
                "local_30": "localVar2",
                "local_2c": "localVar3",
                "local_28": "localVar4",
                "local_24": "localVar5",
                "local_20": "localVar6",
                "local_1c": "localVar7"
            },
            "calling": [
                "FUN_0800242c"
            ],
            "called": [
                "FUN_08007544",
                "FUN_08006280",
                "FUN_08003f30",
                "FUN_08006060",
                "FUN_08003f94",
                "FUN_080075dc",
                "FUN_08006128"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080076e0": {
            "entrypoint": "0x080076e0",
            "current_name": "initialize_data_080076e0",
            "code": "\nvoid initializeData_080076e0(undefined4 *param_1)\n\n{\n  char result;\n  int status;\n  \n  param_1[0x13] = 0;\n  result = FUN_08007544(*param_1);\n  FUN_08003fb0((int)result);\n  status = FUN_08005df4(param_1 + 1);\n  if (status == 0) {\n    FUN_080062f4(param_1 + 1,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080076e0": "initialize_data_080076e0",
                "cVar1": "result",
                "iVar2": "status"
            },
            "calling": [
                "FUN_08002578"
            ],
            "called": [
                "FUN_08003fb0",
                "FUN_08007544",
                "FUN_08005df4",
                "FUN_080062f4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007708": {
            "entrypoint": "0x08007708",
            "current_name": "execute_initialization_08007708",
            "code": "\nvoid executeInitialization_08007708(void)\n\n{\n  FUN_08007438();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007708": "execute_initialization_08007708"
            },
            "calling": [
                "FUN_08006060"
            ],
            "called": [
                "FUN_08007438"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007710": {
            "entrypoint": "0x08007710",
            "current_name": "initialize_application_08007710",
            "code": "\nvoid initializeApplication_08007710(void)\n\n{\n  FUN_080074e0();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007710": "initialize_application_08007710"
            },
            "calling": [
                "FUN_08005df4"
            ],
            "called": [
                "FUN_080074e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007718": {
            "entrypoint": "0x08007718",
            "current_name": "subtract_four_from_param_08007718",
            "code": "\nint subtract_four_from_param_08007718(int input_num)\n\n{\n  return input_num + -4;\n}\n\n",
            "renaming": {
                "FUN_08007718": "subtract_four_from_param_08007718",
                "param_1": "input_num"
            },
            "calling": [
                "FUN_0800771c",
                "FUN_08007736"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800771c": {
            "entrypoint": "0x0800771c",
            "current_name": "execute_function_if_condition_met_0800771c",
            "code": "\nvoid executeFunctionIfConditionMet_0800771c(int argument)\n\n{\n  int functionReturn;\n  \n  functionReturn = FUN_08007718();\n  if ((*(functionPointer **)(functionReturn + 0x4c) != (functionPointer *)0x0) && (*(char *)(argument + 0x1c) == '\\x01')) {\n    (**(functionPointer **)(functionReturn + 0x4c))(functionReturn,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800771c": "execute_function_if_condition_met_0800771c",
                "param_1": "argument",
                "iVar1": "functionReturn",
                "code": "functionPointer"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [
                "FUN_08007718"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007736": {
            "entrypoint": "0x08007736",
            "current_name": "execute_function_08007736",
            "code": "\nvoid executeFunction_08007736(void)\n\n{\n  int result;\n  \n  result = FUN_08007718();\n  if (*(function **)(result + 0x48) != (function *)0x0) {\n    (**(function **)(result + 0x48))();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007736": "execute_function_08007736",
                "iVar1": "result",
                "code": "function"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [
                "FUN_08007718"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007744": {
            "entrypoint": "0x08007744",
            "current_name": "get_pointer_from_offset_08007744",
            "code": "\nundefined4 getPointerFromOffset_08007744(int offset)\n\n{\n  return *(undefined4 *)(*(int *)(offset + 4) + 0x24);\n}\n\n",
            "renaming": {
                "FUN_08007744": "get_pointer_from_offset_08007744",
                "param_1": "offset"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800774a": {
            "entrypoint": "0x0800774a",
            "current_name": "set_param_value_0800774a",
            "code": "\nvoid setParamValue_0800774a(int funcPointer,undefined4 newValue)\n\n{\n  *(undefined4 *)(*(int *)(funcPointer + 4) + 0x24) = newValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800774a": "set_param_value_0800774a",
                "param_1": "funcPointer",
                "param_2": "newValue"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007750": {
            "entrypoint": "0x08007750",
            "current_name": "set_param_value_08007750",
            "code": "\nvoid setParamValue_08007750(int targetObject,int paramIndex,undefined4 newValue)\n\n{\n  *(undefined4 *)(*(int *)(targetObject + 4) + 0x34 + paramIndex * 4) = newValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007750": "set_param_value_08007750",
                "param_1": "targetObject",
                "param_2": "paramIndex",
                "param_3": "newValue"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080077b0": {
            "entrypoint": "0x080077b0",
            "current_name": "initialize_i2_c_080077b0",
            "code": "\n\n\nvoid initializeI2C_080077b0(int *i2cConfig,int param2,int param3,int param4,undefined param5)\n\n{\n  int pin1Periph;\n  int pin2Periph;\n  undefined4 bitValue;\n  uint tempVar1;\n  uint tempVar2;\n  int *ptrVar;\n  uint pin1Mask;\n  uint combinedMask;\n  uint shiftedVal;\n  undefined4 constant3;\n  \n  if (i2cConfig != (int *)0x0) {\n    ptrVar = i2cConfig + 1;\n    pin1Periph = FUN_08007320((int)*(char *)(i2cConfig + 0x16),&DAT_0800a69c);\n    pin2Periph = FUN_08007320((int)*(char *)((int)i2cConfig + 0x59),&DAT_0800a66c);\n    if ((pin1Periph == 0) || (pin2Periph == 0)) {\n      FUN_080098d8(\"ERROR: at least one I2C pin has no peripheral\\n\");\n    }\n    else {\n      pin1Periph = FUN_080073ae(pin1Periph,pin2Periph);\n      *i2cConfig = pin1Periph;\n      if (pin1Periph == 0) {\n        FUN_080098d8(\"ERROR: I2C pins mismatch\\n\");\n      }\n      else {\n        if (pin1Periph == 0x40005400) {\n          _DAT_4002101c = _DAT_4002101c | 0x200000;\n          _DAT_40021010 = _DAT_40021010 & 0xffdfffff;\n          *(undefined *)((int)i2cConfig + 0x5a) = 0x1f;\n          *(undefined *)((int)i2cConfig + 0x5b) = 0x20;\n          DAT_20000668 = ptrVar;\n        }\n        if (*i2cConfig == 0x40005800) {\n          _DAT_4002101c = _DAT_4002101c | 0x400000;\n          _DAT_40021010 = _DAT_40021010 & 0xffbfffff;\n          *(undefined *)((int)i2cConfig + 0x5a) = 0x21;\n          *(undefined *)((int)i2cConfig + 0x5b) = 0x22;\n          DAT_2000066c = ptrVar;\n        }\n        bitValue = FUN_08006bb8((uint)((int)*(char *)((int)i2cConfig + 0x59) << 0x18) >> 0x1c);\n        pin1Mask = 1 << ((int)*(char *)((int)i2cConfig + 0x59) & 0xfU) & 0xffff;\n        tempVar1 = FUN_08007376((int)*(char *)((int)i2cConfig + 0x59),&DAT_0800a66c);\n        tempVar2 = FUN_08007376((int)*(char *)((int)i2cConfig + 0x59),&DAT_0800a66c);\n        combinedMask = (tempVar1 >> 3 & 1) << 4 | tempVar2 & 7;\n        constant3 = 3;\n        pin1Periph = FUN_08007376((int)*(char *)((int)i2cConfig + 0x59),&DAT_0800a66c);\n        shiftedVal = (uint)(pin1Periph << 0x1a) >> 0x1e;\n        pin1Periph = FUN_08007376((int)*(char *)((int)i2cConfig + 0x59),&DAT_0800a66c);\n        _DAT_40021018 = _DAT_40021018 | 1;\n        tempVar2 = 1;\n        tempVar1 = _DAT_40021018;\n        switch((uint)(pin1Periph << 0x11) >> 0x19) {\n        case 1:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000001;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 2:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 3:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000002;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 4:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 5:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000004;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 6:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 7:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000008;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 8:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 9:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000030;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 10:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0xb:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0xc:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x70000c0;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0xd:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0xe:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0xf:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000300;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x10:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x11:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x12:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x13:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000c00;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x14:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x15:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x16:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7001000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x17:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x1b:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7008000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x1c:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x21:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xf8ffffff;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x22:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x23:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x24:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n          _DAT_40010004 = tempVar2;\n        }\n        FUN_080040e8(bitValue,&pin1Mask,tempVar1,tempVar2);\n        bitValue = FUN_08006bb8((uint)((int)*(char *)(i2cConfig + 0x16) << 0x18) >> 0x1c);\n        pin1Mask = 1 << ((int)*(char *)(i2cConfig + 0x16) & 0xfU) & 0xffff;\n        tempVar1 = FUN_08007376((int)*(char *)(i2cConfig + 0x16),&DAT_0800a69c);\n        tempVar2 = FUN_08007376((int)*(char *)(i2cConfig + 0x16),&DAT_0800a69c);\n        combinedMask = (tempVar1 >> 3 & 1) << 4 | tempVar2 & 7;\n        constant3 = 3;\n        pin1Periph = FUN_08007376((int)*(char *)(i2cConfig + 0x16),&DAT_0800a69c);\n        shiftedVal = (uint)(pin1Periph << 0x1a) >> 0x1e;\n        pin1Periph = FUN_08007376((int)*(char *)(i2cConfig + 0x16),&DAT_0800a69c);\n        _DAT_40021018 = _DAT_40021018 | 1;\n        tempVar2 = 1;\n        tempVar1 = _DAT_40021018;\n        switch((uint)(pin1Periph << 0x11) >> 0x19) {\n        case 1:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000001;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 2:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 3:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000002;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 4:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 5:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000004;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 6:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 7:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000008;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 8:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 9:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000030;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 10:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0xb:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0xc:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x70000c0;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0xd:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0xe:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0xf:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000300;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x10:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x11:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x12:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x13:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7000c00;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x14:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x15:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x16:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7001000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x17:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x1b:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 | 0x7008000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x1c:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x21:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xf8ffffff;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x22:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x23:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          _DAT_40010004 = tempVar2;\n          break;\n        case 0x24:\n          tempVar1 = 0x40010000;\n          tempVar2 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n          _DAT_40010004 = tempVar2;\n        }\n        FUN_080040e8(bitValue,&pin1Mask,tempVar1,tempVar2);\n        i2cConfig[1] = *i2cConfig;\n        i2cConfig[2] = param2;\n        i2cConfig[3] = 0;\n        i2cConfig[4] = param4;\n        i2cConfig[7] = 0xff;\n        i2cConfig[5] = param3;\n        i2cConfig[6] = 0;\n        i2cConfig[8] = 0;\n        i2cConfig[9] = 0;\n        *(undefined *)((int)i2cConfig + 0x41) = 0;\n        FUN_08003f30((int)*(char *)((int)i2cConfig + 0x5a),0,1);\n        FUN_08003f94((int)*(char *)((int)i2cConfig + 0x5a));\n        FUN_08003f30((int)*(char *)((int)i2cConfig + 0x5b),0,1);\n        FUN_08003f94((int)*(char *)((int)i2cConfig + 0x5b));\n        FUN_080045c0(ptrVar);\n        *(undefined *)((int)i2cConfig + 0x5d) = param5;\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080077b0": "initialize_i2_c_080077b0",
                "param_1": "i2cConfig",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "iVar1": "pin1Periph",
                "iVar2": "pin2Periph",
                "uVar3": "bitValue",
                "uVar4": "tempVar1",
                "uVar5": "tempVar2",
                "piVar6": "ptrVar",
                "local_38": "pin1Mask",
                "local_34": "combinedMask",
                "local_30": "shiftedVal",
                "local_2c": "constant3"
            },
            "calling": [
                "FUN_08002968"
            ],
            "called": [
                "FUN_080045c0",
                "FUN_080098d8",
                "FUN_080073ae",
                "FUN_08003f30",
                "FUN_08003f94",
                "FUN_08006bb8",
                "FUN_08007376",
                "FUN_08007320",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e74": {
            "entrypoint": "0x08007e74",
            "current_name": "process_data_08007e74",
            "code": "\nint process_data_08007e74(int data,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int initialValue;\n  int result;\n  uint difference;\n  int status;\n  int tempVar;\n  undefined4 param4_copy;\n  \n  param4_copy = param4;\n  initialValue = FUN_08003760();\n  difference = 0;\n  status = 2;\n  do {\n    tempVar = data + 4;\n    result = FUN_08004728(tempVar,param2,param3,param4,param4_copy);\n    if (result == 0) {\n      status = 0;\n      while ((result = FUN_0800542a(tempVar), result != 0x20 && (status == 0))) {\n        result = FUN_08003760();\n        difference = result - initialValue;\n        if (difference < 0x65) {\n          result = FUN_08005430(tempVar);\n          if (result != 0) {\n            status = 2;\n          }\n        }\n        else {\n          status = 1;\n        }\n      }\n    }\n    result = FUN_08005430(tempVar);\n  } while ((result == 4) && (difference < 100));\n  return status;\n}\n\n",
            "renaming": {
                "FUN_08007e74": "process_data_08007e74",
                "param_1": "data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "initialValue",
                "iVar2": "result",
                "uVar3": "difference",
                "iVar4": "status",
                "iVar5": "tempVar",
                "uVar6": "param4_copy"
            },
            "calling": [
                "FUN_08002a58"
            ],
            "called": [
                "FUN_08004728",
                "FUN_0800542a",
                "FUN_08005430",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007ede": {
            "entrypoint": "0x08007ede",
            "current_name": "copy_data_from_buffer_08007ede",
            "code": "\nundefined4 copyDataFromBuffer_08007ede(int destination,int source,uint length)\n\n{\n  uint index;\n  \n  if (0x20 < length) {\n    return 2;\n  }\n  for (index = 0; index < length; index = index + 1 & 0xff) {\n    *(undefined *)(destination + index + 0x68) = *(undefined *)(source + index);\n    *(char *)(destination + 0x88) = *(char *)(destination + 0x88) + '\\x01';\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007ede": "copy_data_from_buffer_08007ede",
                "param_1": "destination",
                "param_2": "source",
                "param_3": "length",
                "uVar1": "index"
            },
            "calling": [
                "FUN_080027f0",
                "FUN_0800288c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f0e": {
            "entrypoint": "0x08007f0e",
            "current_name": "process_data_08007f0e",
            "code": "\nint processData_08007f0e(int input_param,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int initialValue;\n  int result;\n  uint difference;\n  int status;\n  int tempVar;\n  undefined4 tempParam;\n  \n  tempParam = param4;\n  initialValue = FUN_08003760();\n  difference = 0;\n  status = 2;\n  do {\n    tempVar = input_param + 4;\n    result = FUN_080047f4(tempVar,param2,param3,param4,tempParam);\n    if (result == 0) {\n      status = 0;\n      while ((result = FUN_0800542a(tempVar), result != 0x20 && (status == 0))) {\n        result = FUN_08003760();\n        difference = result - initialValue;\n        if (difference < 0x65) {\n          result = FUN_08005430(tempVar);\n          if (result != 0) {\n            status = 2;\n          }\n        }\n        else {\n          status = 1;\n        }\n      }\n    }\n    result = FUN_08005430(tempVar);\n  } while ((result == 4) && (difference < 100));\n  return status;\n}\n\n",
            "renaming": {
                "FUN_08007f0e": "process_data_08007f0e",
                "param_1": "input_param",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "initialValue",
                "iVar2": "result",
                "uVar3": "difference",
                "iVar4": "status",
                "iVar5": "tempVar",
                "uVar6": "tempParam"
            },
            "calling": [
                "FUN_08002b68"
            ],
            "called": [
                "FUN_080047f4",
                "FUN_0800542a",
                "FUN_08005430",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f78": {
            "entrypoint": "0x08007f78",
            "current_name": "subtract_four_08007f78",
            "code": "\nint subtract_four_08007f78(int original_value)\n\n{\n  return original_value + -4;\n}\n\n",
            "renaming": {
                "FUN_08007f78": "subtract_four_08007f78",
                "param_1": "original_value"
            },
            "calling": [
                "FUN_08008020",
                "FUN_08007fa0",
                "FUN_08007ff0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f7c": {
            "entrypoint": "0x08007f7c",
            "current_name": "update_param_with_value_08007f7c",
            "code": "\nvoid update_param_with_value_08007f7c(int input_address,int param_value)\n\n{\n  if (input_address != 0) {\n    if (param_value != 0) {\n      *(int *)(input_address + 0x60) = param_value;\n      FUN_080049e0(input_address + 4);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007f7c": "update_param_with_value_08007f7c",
                "param_1": "input_address",
                "param_2": "param_value"
            },
            "calling": [
                "FUN_08002968"
            ],
            "called": [
                "FUN_080049e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f8e": {
            "entrypoint": "0x08007f8e",
            "current_name": "update_param_and_call_function_08007f8e",
            "code": "\nvoid update_param_and_call_function_08007f8e(int original_param,int new_value)\n\n{\n  if (original_param != 0) {\n    if (new_value != 0) {\n      *(int *)(original_param + 100) = new_value;\n      FUN_080049e0(original_param + 4);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007f8e": "update_param_and_call_function_08007f8e",
                "param_1": "original_param",
                "param_2": "new_value"
            },
            "calling": [
                "FUN_08002968"
            ],
            "called": [
                "FUN_080049e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007fa0": {
            "entrypoint": "0x08007fa0",
            "current_name": "process_data_08007fa0",
            "code": "\nvoid processData_08007fa0(int inputPtr,int flag,int constant,undefined4 codePtr)\n\n{\n  int result;\n  \n  result = FUN_08007f78();\n  if (constant == *(int *)(inputPtr + 0xc)) {\n    if (flag == 0) {\n      *(undefined *)(result + 0x88) = 0;\n      *(undefined *)(result + 0x5c) = 0;\n      if (*(code **)(result + 100) != (code *)0x0) {\n        (**(code **)(result + 100))();\n      }\n      FUN_080048c8(inputPtr,result + 0x68,*(undefined *)(result + 0x88),8);\n      return;\n    }\n    *(undefined *)(result + 0x5c) = 1;\n    FUN_08004954(inputPtr,result + 0x68,0x20,8,codePtr);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007fa0": "process_data_08007fa0",
                "param_1": "inputPtr",
                "param_2": "flag",
                "param_3": "constant",
                "param_4": "codePtr",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08004ac2"
            ],
            "called": [
                "FUN_08004954",
                "FUN_08007f78",
                "FUN_080048c8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007ff0": {
            "entrypoint": "0x08007ff0",
            "current_name": "execute_conditional_code_08007ff0",
            "code": "\nvoid executeConditionalCode_08007ff0(undefined4 inputParameter)\n\n{\n  int returnValue;\n  \n  returnValue = FUN_08007f78();\n  if (((*(functionPointer **)(returnValue + 0x60) != (functionPointer *)0x0) && (*(char *)(returnValue + 0x5c) == '\\x01')) &&\n     (*(char *)(returnValue + 0x2c) != ' ')) {\n    (**(functionPointer **)(returnValue + 0x60))(returnValue + 0x68);\n  }\n  FUN_080049e0(inputParameter);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007ff0": "execute_conditional_code_08007ff0",
                "param_1": "inputParameter",
                "iVar1": "returnValue",
                "code": "functionPointer"
            },
            "calling": [
                "FUN_08004aec",
                "FUN_08004f3c",
                "FUN_08005084"
            ],
            "called": [
                "FUN_08007f78",
                "FUN_080049e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008020": {
            "entrypoint": "0x08008020",
            "current_name": "check_and_execute_function_08008020",
            "code": "\nvoid checkAndExecuteFunction_08008020(undefined4 inputParam)\n\n{\n  int result;\n  \n  result = FUN_08007f78();\n  if (*(char *)(result + 0x5d) == '\\0') {\n    FUN_080049e0(inputParam);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008020": "check_and_execute_function_08008020",
                "param_1": "inputParam",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08004f3c"
            ],
            "called": [
                "FUN_08007f78",
                "FUN_080049e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008078": {
            "entrypoint": "0x08008078",
            "current_name": "configure_uart_pins_08008078",
            "code": "\n\n\nvoid configureUARTPins_08008078(int *uartConfigPtr)\n\n{\n  int uart1Peripheral;\n  int uart2Peripheral;\n  undefined4 uartPinConfig1;\n  uint uartPinConfig2;\n  uint uartPin1Mask;\n  uint uartPin1Config;\n  uint uartPin1AltConfig;\n  undefined4 uartPin2Mask;\n  \n  if (uartConfigPtr != (int *)0x0) {\n    uart1Peripheral = FUN_08007320((int)*(char *)(uartConfigPtr + 0x16),&DAT_0800a864);\n    uart2Peripheral = FUN_08007320((int)*(char *)((int)uartConfigPtr + 0x59),&DAT_0800a81c);\n    if ((uart2Peripheral == 0) || (uart1Peripheral == 0)) {\n      FUN_080098d8(\"ERROR: at least one UART pin has no peripheral\\n\",uart2Peripheral);\n    }\n    else {\n      uart1Peripheral = FUN_080073ae(uart1Peripheral);\n      *uartConfigPtr = uart1Peripheral;\n      if (uart1Peripheral == 0) {\n        FUN_080098d8(\"ERROR: U(S)ART pins mismatch\\n\");\n      }\n      else {\n        if (uart1Peripheral == 0x40013800) {\n          _DAT_4002100c = _DAT_4002100c & 0xffffbfff;\n          _DAT_40021018 = _DAT_40021018 | 0x4000;\n          *(undefined *)(uartConfigPtr + 0x11) = 0;\n          *(undefined *)((int)uartConfigPtr + 0x5a) = 0x25;\n        }\n        else if (uart1Peripheral == 0x40004400) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffdffff;\n          _DAT_4002101c = _DAT_4002101c | 0x20000;\n          *(undefined *)(uartConfigPtr + 0x11) = 1;\n          *(undefined *)((int)uartConfigPtr + 0x5a) = 0x26;\n        }\n        else if (uart1Peripheral == 0x40004800) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffbffff;\n          _DAT_4002101c = _DAT_4002101c | 0x40000;\n          *(undefined *)(uartConfigPtr + 0x11) = 2;\n          *(undefined *)((int)uartConfigPtr + 0x5a) = 0x27;\n        }\n        uartPinConfig1 = FUN_08006bb8((uint)((int)*(char *)((int)uartConfigPtr + 0x59) << 0x18) >> 0x1c);\n        uartPinConfig2 = FUN_08007376((int)*(char *)((int)uartConfigPtr + 0x59),&DAT_0800a81c);\n        uartPin1Mask = 1 << (*(byte *)((int)uartConfigPtr + 0x59) & 0xf) & 0xffff;\n        uartPin1Config = (uartPinConfig2 >> 3 & 1) << 4 | uartPinConfig2 & 7;\n        uartPin1AltConfig = (uartPinConfig2 << 0x1a) >> 0x1e;\n        _DAT_40021018 = _DAT_40021018 | 1;\n        switch((uartPinConfig2 << 0x11) >> 0x19) {\n        case 1:\n          _DAT_40010004 = _DAT_40010004 | 0x7000001;\n          break;\n        case 2:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          break;\n        case 3:\n          _DAT_40010004 = _DAT_40010004 | 0x7000002;\n          break;\n        case 4:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          break;\n        case 5:\n          _DAT_40010004 = _DAT_40010004 | 0x7000004;\n          break;\n        case 6:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          break;\n        case 7:\n          _DAT_40010004 = _DAT_40010004 | 0x7000008;\n          break;\n        case 8:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          break;\n        case 9:\n          _DAT_40010004 = _DAT_40010004 | 0x7000030;\n          break;\n        case 10:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          break;\n        case 0xb:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          break;\n        case 0xc:\n          _DAT_40010004 = _DAT_40010004 | 0x70000c0;\n          break;\n        case 0xd:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          break;\n        case 0xe:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          break;\n        case 0xf:\n          _DAT_40010004 = _DAT_40010004 | 0x7000300;\n          break;\n        case 0x10:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          break;\n        case 0x11:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          break;\n        case 0x12:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          break;\n        case 0x13:\n          _DAT_40010004 = _DAT_40010004 | 0x7000c00;\n          break;\n        case 0x14:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          break;\n        case 0x15:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          break;\n        case 0x16:\n          _DAT_40010004 = _DAT_40010004 | 0x7001000;\n          break;\n        case 0x17:\n          _DAT_40010004 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          break;\n        case 0x1b:\n          _DAT_40010004 = _DAT_40010004 | 0x7008000;\n          break;\n        case 0x1c:\n          _DAT_40010004 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          break;\n        case 0x21:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff;\n          break;\n        case 0x22:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          break;\n        case 0x23:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          break;\n        case 0x24:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n        }\n        uartPin2Mask = 3;\n        FUN_080040e8(uartPinConfig1,&uartPin1Mask);\n        uartPinConfig1 = FUN_08006bb8((uint)((int)*(char *)(uartConfigPtr + 0x16) << 0x18) >> 0x1c);\n        uartPinConfig2 = FUN_08007376((int)*(char *)(uartConfigPtr + 0x16),&DAT_0800a864);\n        uartPin1Mask = 1 << (*(byte *)(uartConfigPtr + 0x16) & 0xf) & 0xffff;\n        uartPin1Config = (uartPinConfig2 >> 3 & 1) << 4 | uartPinConfig2 & 7;\n        uartPin1AltConfig = (uartPinConfig2 << 0x1a) >> 0x1e;\n        FUN_080040e8(uartPinConfig1,&uartPin1Mask);\n        (&DAT_200006c0)[*(byte *)(uartConfigPtr + 0x11)] = uartConfigPtr + 1;\n        uartConfigPtr[1] = *uartConfigPtr;\n        uartConfigPtr[2] = uartConfigPtr[0x12];\n        uartConfigPtr[3] = uartConfigPtr[0x13];\n        uartConfigPtr[4] = uartConfigPtr[0x14];\n        uartConfigPtr[5] = uartConfigPtr[0x15];\n        uartConfigPtr[6] = 0xc;\n        uartConfigPtr[7] = 0;\n        uartConfigPtr[8] = 0;\n        FUN_0800674e(uartConfigPtr + 1);\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008078": "configure_uart_pins_08008078",
                "param_1": "uartConfigPtr",
                "iVar1": "uart1Peripheral",
                "iVar2": "uart2Peripheral",
                "uVar3": "uartPinConfig1",
                "uVar4": "uartPinConfig2",
                "local_20": "uartPin1Mask",
                "local_1c": "uartPin1Config",
                "local_18": "uartPin1AltConfig",
                "local_14": "uartPin2Mask"
            },
            "calling": [
                "FUN_080084b0",
                "FUN_08008c44"
            ],
            "called": [
                "FUN_080073ae",
                "FUN_080098d8",
                "FUN_0800674e",
                "FUN_08006bb8",
                "FUN_08007376",
                "FUN_08007320",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080084b0": {
            "entrypoint": "0x080084b0",
            "current_name": "initialize_data_080084b0",
            "code": "\nvoid initializeData_080084b0(void)\n\n{\n  int result1;\n  undefined4 result2;\n  \n  result1 = FUN_08007320(2,&DAT_0800a864);\n  if (result1 != 0) {\n    result2 = FUN_08007320(2,&DAT_0800a864);\n    DAT_20000075 = FUN_0800734a(result2,&DAT_0800a81c);\n    DAT_20000074 = 2;\n    DAT_20000064 = 0x2580;\n    DAT_20000070 = 0;\n    DAT_20000068 = 0;\n    DAT_2000006c = 0;\n    FUN_08008078(&DAT_2000001c);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080084b0": "initialize_data_080084b0",
                "iVar1": "result1",
                "uVar2": "result2"
            },
            "calling": [
                "FUN_08008500"
            ],
            "called": [
                "FUN_08008078",
                "FUN_0800734a",
                "FUN_08007320"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008500": {
            "entrypoint": "0x08008500",
            "current_name": "perform_operation_08008500",
            "code": "\nuint perform_operation_08008500(undefined4 input_value,uint flags)\n\n{\n  int initial_value;\n  int result;\n  uint counter;\n  \n  initial_value = FUN_08003760();\n  result = FUN_08007320(2,&DAT_0800a864);\n  if (result == 0) {\n    return 0;\n  }\n  for (counter = 0;\n      (counter < 5 &&\n      (((&DAT_200006c0)[counter] == 0 ||\n       (result = FUN_08007320(2,&DAT_0800a864), *(int *)(&DAT_200006c0)[counter] != result))));\n      counter = counter + 1 & 0xff) {\n  }\n  if (4 < counter) {\n    if ((4 < DAT_20000060) && (FUN_080084b0(), 4 < DAT_20000060)) {\n      return 0;\n    }\n    counter = (uint)DAT_20000060;\n  }\n  do {\n    result = FUN_080067ac((&DAT_200006c0)[counter],input_value,flags & 0xffff,1000);\n    if (result == 0) {\n      return flags;\n    }\n    result = FUN_08003760();\n  } while ((uint)(result - initial_value) < 1000);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008500": "perform_operation_08008500",
                "param_1": "input_value",
                "param_2": "flags",
                "iVar1": "initial_value",
                "iVar2": "result",
                "uVar3": "counter"
            },
            "calling": [
                "FUN_0800885c"
            ],
            "called": [
                "FUN_080084b0",
                "FUN_080067ac",
                "FUN_08007320",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080085b8": {
            "entrypoint": "0x080085b8",
            "current_name": "is_bit_combination_valid_080085b8",
            "code": "\nbool isBitCombinationValid_080085b8(int input)\n\n{\n  uint value;\n  \n  value = FUN_08006b1c((&DAT_200006c0)[*(byte *)(input + 0x44)]);\n  return (value & 0x22) == 0x22;\n}\n\n",
            "renaming": {
                "FUN_080085b8": "is_bit_combination_valid_080085b8",
                "param_1": "input",
                "uVar1": "value"
            },
            "calling": [
                "FUN_08008600",
                "FUN_0800863c"
            ],
            "called": [
                "FUN_08006b1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080085dc": {
            "entrypoint": "0x080085dc",
            "current_name": "check_flag_conditions_080085dc",
            "code": "\nbool check_flag_conditions_080085dc(int input_value)\n\n{\n  uint flag_value;\n  \n  flag_value = FUN_08006b1c((&DAT_200006c0)[*(byte *)(input_value + 0x44)]);\n  return (flag_value & 0x21) == 0x21;\n}\n\n",
            "renaming": {
                "FUN_080085dc": "check_flag_conditions_080085dc",
                "param_1": "input_value",
                "uVar1": "flag_value"
            },
            "calling": [],
            "called": [
                "FUN_08006b1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008600": {
            "entrypoint": "0x08008600",
            "current_name": "extract_data_08008600",
            "code": "\nundefined4 extractData_08008600(int input,undefined *output,undefined4 sizeOfOutput,undefined4 additionalParameter)\n\n{\n  int result;\n  \n  if (input == 0) {\n    return 0xffffffff;\n  }\n  result = FUN_080085b8();\n  if (result == 0) {\n    *output = *(undefined *)(input + 0x45);\n    FUN_080068d6((&DAT_200006c0)[*(byte *)(input + 0x44)],input + 0x45,1,&DAT_200006c0,additionalParameter);\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008600": "extract_data_08008600",
                "param_1": "input",
                "param_2": "output",
                "param_3": "sizeOfOutput",
                "param_4": "additionalParameter",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08008b66"
            ],
            "called": [
                "FUN_080085b8",
                "FUN_080068d6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800863c": {
            "entrypoint": "0x0800863c",
            "current_name": "update_and_process_data_0800863c",
            "code": "\nvoid updateAndProcessData_0800863c(int dataPtr,undefined4 value1,undefined4 value2,undefined4 value3)\n\n{\n  int result;\n  uint index;\n  \n  if (dataPtr != 0) {\n    result = FUN_080085b8();\n    if (result == 0) {\n      index = (uint)*(byte *)(dataPtr + 0x44);\n      *(undefined4 *)(&DAT_20000670 + index * 4) = value1;\n      *(int *)(&DAT_20000684 + index * 4) = dataPtr;\n      FUN_08003f30((int)*(char *)(dataPtr + 0x5a),0,1,index,value3);\n      FUN_08003f94((int)*(char *)(dataPtr + 0x5a));\n      FUN_080068d6((&DAT_200006c0)[*(byte *)(dataPtr + 0x44)],dataPtr + 0x45,1);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800863c": "update_and_process_data_0800863c",
                "param_1": "dataPtr",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "iVar1": "result",
                "uVar2": "index"
            },
            "calling": [
                "FUN_08008c44"
            ],
            "called": [
                "FUN_080085b8",
                "FUN_08003f30",
                "FUN_08003f94",
                "FUN_080068d6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008694": {
            "entrypoint": "0x08008694",
            "current_name": "update_data_08008694",
            "code": "\nvoid updateData_08008694(int dataPointer,undefined4 newValue)\n\n{\n  byte byteValue;\n  \n  if (dataPointer != 0) {\n    byteValue = *(byte *)(dataPointer + 0x44);\n    *(undefined4 *)(&DAT_20000698 + (uint)byteValue * 4) = newValue;\n    *(int *)(&DAT_200006ac + (uint)byteValue * 4) = dataPointer;\n    FUN_08003f30((int)*(char *)(dataPointer + 0x5a),0,2);\n    FUN_08003f94((int)*(char *)(dataPointer + 0x5a));\n    FUN_0800688e((&DAT_200006c0)[*(byte *)(dataPointer + 0x44)],\n                 *(int *)(dataPointer + 100) + (uint)*(ushort *)(dataPointer + 0x6a),1);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008694": "update_data_08008694",
                "param_1": "dataPointer",
                "param_2": "newValue",
                "bVar1": "byteValue"
            },
            "calling": [],
            "called": [
                "FUN_08003f30",
                "FUN_08003f94",
                "FUN_0800688e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080086e8": {
            "entrypoint": "0x080086e8",
            "current_name": "find_value_index_080086e8",
            "code": "\nuint find_value_index_080086e8(int value)\n\n{\n  uint index;\n  \n  if (value == 0) {\n    index = 5;\n  }\n  else {\n    index = 0;\n    while( true ) {\n      if (4 < index) {\n        return index;\n      }\n      if (value == (&DAT_200006c0)[index]) break;\n      index = index + 1 & 0xff;\n    }\n  }\n  return index;\n}\n\n",
            "renaming": {
                "FUN_080086e8": "find_value_index_080086e8",
                "param_1": "value",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08008730",
                "FUN_0800870c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800870c": {
            "entrypoint": "0x0800870c",
            "current_name": "execute_next_operation_0800870c",
            "code": "\nvoid executeNextOperation_0800870c(void)\n\n{\n  uint operationIndex;\n  \n  operationIndex = FUN_080086e8();\n  if (operationIndex < 5) {\n    (**(code **)(&DAT_20000670 + operationIndex * 4))(*(undefined4 *)(&DAT_20000684 + operationIndex * 4));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800870c": "execute_next_operation_0800870c",
                "uVar1": "operationIndex"
            },
            "calling": [
                "FUN_0800694c"
            ],
            "called": [
                "FUN_080086e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008730": {
            "entrypoint": "0x08008730",
            "current_name": "execute_function_08008730",
            "code": "\nvoid executeFunction_08008730(void)\n\n{\n  uint randomIndex;\n  int returnValue;\n  int functionPointer;\n  \n  randomIndex = FUN_080086e8();\n  functionPointer = *(int *)(&DAT_200006ac + randomIndex * 4);\n  if ((randomIndex < 5) && (returnValue = (**(code **)(&DAT_20000698 + randomIndex * 4))(functionPointer), returnValue != -1)) {\n    FUN_0800688e((&DAT_200006c0)[*(byte *)(functionPointer + 0x44)],\n                 *(int *)(functionPointer + 100) + (uint)*(ushort *)(functionPointer + 0x6a),1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008730": "execute_function_08008730",
                "uVar1": "randomIndex",
                "iVar2": "returnValue",
                "iVar3": "functionPointer"
            },
            "calling": [
                "FUN_08006932"
            ],
            "called": [
                "FUN_080086e8",
                "FUN_0800688e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800877c": {
            "entrypoint": "0x0800877c",
            "current_name": "FUNC_0800877c",
            "code": "\nvoid FUNC_0800877c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800877c": "FUNC_0800877c"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008804": {
            "entrypoint": "0x08008804",
            "current_name": "allocate_memory_08008804",
            "code": "\nundefined * allocateMemory_08008804(int numBytes)\n\n{\n  undefined *allocatedMemory;\n  \n  if (DAT_200006d4 == (undefined *)0x0) {\n    DAT_200006d4 = &DAT_20000a3c;\n  }\n  allocatedMemory = DAT_200006d4;\n  if (DAT_200006d4 + numBytes <= stackEnd) {\n    DAT_200006d4 = DAT_200006d4 + numBytes;\n    return allocatedMemory;\n  }\n  DAT_20000a38 = 0xc;\n  return (undefined *)0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008804": "allocate_memory_08008804",
                "param_1": "numBytes",
                "puVar1": "allocatedMemory",
                "&stack0x00000000": "stackEnd"
            },
            "calling": [
                "FUN_08009918"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008840": {
            "entrypoint": "0x08008840",
            "current_name": "get_negative_one_08008840",
            "code": "\nint getNegativeOne_08008840(void)\n\n{\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008840": "get_negative_one_08008840",
                "undefined4": "int"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008846": {
            "entrypoint": "0x08008846",
            "current_name": "set_memory_page_size_08008846",
            "code": "\nundefined4 setMemoryPageSize_08008846(undefined4 param1,int memoryAddress)\n\n{\n  *(undefined4 *)(memoryAddress + 4) = 0x2000;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008846": "set_memory_page_size_08008846",
                "param_1": "param1",
                "param_2": "memoryAddress"
            },
            "calling": [
                "FUN_0800a0ec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008850": {
            "entrypoint": "0x08008850",
            "current_name": "initialize_application_08008850",
            "code": "\nundefined4 initializeApplication_08008850(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08008850": "initialize_application_08008850"
            },
            "calling": [
                "FUN_0800a110"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008854": {
            "entrypoint": "0x08008854",
            "current_name": "get_default_value_08008854",
            "code": "\nint getDefaultValue_08008854(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008854": "get_default_value_08008854",
                "undefined4": "int"
            },
            "calling": [
                "FUN_0800a130"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008858": {
            "entrypoint": "0x08008858",
            "current_name": "initialize_08008858",
            "code": "\nvoid initialize_08008858(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008858": "initialize_08008858",
                "undefined4": "void"
            },
            "calling": [
                "FUN_0800a168"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800885c": {
            "entrypoint": "0x0800885c",
            "current_name": "execute_function_0800885c",
            "code": "\nvoid executeFunction_0800885c(undefined4 unusedParam,undefined4 inputParam1,undefined4 inputParam2,undefined4 inputParam3)\n\n{\n  FUN_08008500(inputParam1,inputParam2,inputParam2,inputParam3,inputParam3);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800885c": "execute_function_0800885c",
                "param_1": "unusedParam",
                "param_2": "inputParam1",
                "param_3": "inputParam2",
                "param_4": "inputParam3"
            },
            "calling": [
                "FUN_0800a042"
            ],
            "called": [
                "FUN_08008500"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008868": {
            "entrypoint": "0x08008868",
            "current_name": "infinite_loop_08008868",
            "code": "\nvoid infiniteLoop_08008868(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08008868": "infinite_loop_08008868"
            },
            "calling": [
                "FUN_08008868",
                "FUN_08009b5c"
            ],
            "called": [
                "FUN_08008868"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800886c": {
            "entrypoint": "0x0800886c",
            "current_name": "set_initial_value_0800886c",
            "code": "\nundefined4 setInitialValue_0800886c(void)\n\n{\n  DAT_20000a38 = 0x16;\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800886c": "set_initial_value_0800886c"
            },
            "calling": [
                "FUN_08009fe8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800887c": {
            "entrypoint": "0x0800887c",
            "current_name": "check_success_0800887c",
            "code": "\nint check_success_0800887c(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800887c": "check_success_0800887c",
                "undefined4": "int"
            },
            "calling": [
                "thunk_FUN_0800887c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008880": {
            "entrypoint": "0x08008880",
            "current_name": "decode_value_08008880",
            "code": "\nuint decode_value_08008880(uint input_value)\n\n{\n  bool is_less_than_0x3c;\n  char result_char;\n  uint output_value;\n  \n  if (input_value < 0xe) {\n    if (input_value + 0x2e < 0x3c) {\n      is_less_than_0x3c = true;\n    }\n    else {\n      is_less_than_0x3c = false;\n    }\n  }\n  else {\n    is_less_than_0x3c = input_value < 0x3c;\n  }\n  if (is_less_than_0x3c) {\n    if (input_value < 0xe) {\n      input_value = input_value + 0x2e;\n    }\n    result_char = (&DAT_0800a908)[input_value];\n  }\n  else {\n    result_char = -1;\n  }\n  if (result_char == -1) {\n    output_value = 0;\n  }\n  else {\n    output_value = FUN_08006d80();\n    if (DAT_20000088 != 0xc) {\n      if (DAT_20000088 < 0xc) {\n        return output_value >> (0xc - DAT_20000088 & 0xff);\n      }\n      return output_value << (DAT_20000088 - 0xc & 0xff);\n    }\n  }\n  return output_value;\n}\n\n",
            "renaming": {
                "FUN_08008880": "decode_value_08008880",
                "param_1": "input_value",
                "bVar1": "is_less_than_0x3c",
                "cVar2": "result_char",
                "uVar3": "output_value"
            },
            "calling": [
                "FUN_080022f8",
                "FUN_08000488"
            ],
            "called": [
                "FUN_08006d80"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080088e0": {
            "entrypoint": "0x080088e0",
            "current_name": "translate_character_080088e0",
            "code": "\nvoid translateCharacter_080088e0(uint characterIndex,uint characterCode)\n\n{\n  int translationResult;\n  int translationIndex;\n  \n  if (characterIndex < 0x3c) {\n    translationIndex = (int)(char)(&DAT_0800a908)[characterIndex];\n  }\n  else {\n    translationIndex = -1;\n  }\n  if (translationIndex != -1) {\n    translationResult = FUN_0800738a(translationIndex,&DAT_0800a6cc);\n    if (translationResult == 0) {\n      FUN_08008990(characterIndex,1);\n      if (DAT_2000008c != 8) {\n        if (DAT_2000008c < 9) {\n          characterCode = characterCode << (8 - DAT_2000008c & 0xff);\n        }\n        else {\n          characterCode = characterCode >> (DAT_2000008c - 8 & 0xff);\n        }\n      }\n      if (characterCode < 0x80) {\n        FUN_08008a24(characterIndex,0);\n      }\n      else {\n        FUN_08008a24(characterIndex,1);\n      }\n    }\n    else {\n      translationResult = FUN_08006b28(translationIndex,&DAT_200006d8);\n      if (translationResult == 0) {\n        FUN_08006b3e(translationIndex,&DAT_200006d8);\n      }\n      if (DAT_2000008c != 8) {\n        if (DAT_2000008c < 9) {\n          characterCode = characterCode << (8 - DAT_2000008c & 0xff);\n        }\n        else {\n          characterCode = characterCode >> (DAT_2000008c - 8 & 0xff);\n        }\n      }\n      FUN_08007118(translationIndex,0x3e418,0xff,characterCode,translationResult == 0);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080088e0": "translate_character_080088e0",
                "param_1": "characterIndex",
                "param_2": "characterCode",
                "iVar1": "translationResult",
                "iVar2": "translationIndex"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08008990",
                "FUN_08008a24",
                "FUN_08007118",
                "FUN_0800738a",
                "FUN_08006b3e",
                "FUN_08006b28"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008990": {
            "entrypoint": "0x08008990",
            "current_name": "process_data_08008990",
            "code": "\nvoid processData_08008990(uint index,undefined4 option,undefined4 param3,undefined1 *data_ptr)\n\n{\n  int result;\n  undefined1 *lookup_array;\n  int value;\n  \n  if (index < 0x3c) {\n    value = (int)(char)(&DAT_0800a908)[index];\n    lookup_array = &DAT_0800a908;\n  }\n  else {\n    value = -1;\n    lookup_array = data_ptr;\n  }\n  if (value != -1) {\n    result = FUN_08006b28(value,&DAT_200006d8,param3,lookup_array,data_ptr);\n    if (result != 0) {\n      result = FUN_0800738a(value,&DAT_0800a6cc);\n      if (result != 0) {\n        FUN_080071e4(value);\n      }\n      FUN_08006b5c(value,&DAT_200006d8);\n    }\n    switch(option) {\n    case 0:\n      FUN_08007258(value,0);\n      break;\n    case 1:\n      FUN_08007258(value,1,0);\n      break;\n    case 2:\n      FUN_08007258(value,0,1);\n      break;\n    case 3:\n      FUN_08007258(value,0,2);\n    }\n    FUN_08006b3e(value,&DAT_200006ec);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008990": "process_data_08008990",
                "param_1": "index",
                "param_2": "option",
                "param_3": "param3",
                "param_4": "data_ptr",
                "iVar1": "result",
                "puVar2": "lookup_array",
                "iVar3": "value"
            },
            "calling": [
                "FUN_08003002",
                "FUN_080088e0",
                "FUN_080025ac",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08006b5c",
                "FUN_080071e4",
                "FUN_08007258",
                "FUN_0800738a",
                "FUN_08006b3e",
                "FUN_08006b28"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008a24": {
            "entrypoint": "0x08008a24",
            "current_name": "process_data_08008a24",
            "code": "\nvoid process_data_08008a24(uint index,undefined4 value_1,undefined4 value_2,undefined1 *data)\n\n{\n  int result;\n  undefined4 mask;\n  undefined1 *ptr;\n  uint lookup;\n  \n  if (index < 0x3c) {\n    lookup = (uint)(char)(&DAT_0800a908)[index];\n    ptr = &DAT_0800a908;\n  }\n  else {\n    lookup = 0xffffffff;\n    ptr = data;\n  }\n  if ((lookup != 0xffffffff) &&\n     (result = FUN_08006b28(lookup,&DAT_200006ec,value_2,ptr,data), result != 0)) {\n    mask = FUN_08006b7c((lookup << 0x18) >> 0x1c);\n    FUN_080072d8(mask,1 << (lookup & 0xf) & 0xffff,value_1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008a24": "process_data_08008a24",
                "param_1": "index",
                "param_2": "value_1",
                "param_3": "value_2",
                "param_4": "data",
                "iVar1": "result",
                "uVar2": "mask",
                "puVar3": "ptr",
                "uVar4": "lookup"
            },
            "calling": [
                "FUN_08002fca",
                "FUN_080088e0",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08006b7c",
                "FUN_08006b28",
                "FUN_080072d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008a6c": {
            "entrypoint": "0x08008a6c",
            "current_name": "check_value_validity_08008a6c",
            "code": "\nchar checkValueValidity_08008a6c(uint value)\n\n{\n  char isValid;\n  int result;\n  undefined4 shiftedValue;\n  uint lookupValue;\n  \n  if (value < 0x3c) {\n    lookupValue = (uint)(char)(&DAT_0800a908)[value];\n  }\n  else {\n    lookupValue = 0xffffffff;\n  }\n  if (lookupValue == 0xffffffff) {\n    isValid = '\\0';\n  }\n  else {\n    result = FUN_08006b28(lookupValue,&DAT_200006ec);\n    if (result == 0) {\n      isValid = '\\0';\n    }\n    else {\n      shiftedValue = FUN_08006b7c((lookupValue << 0x18) >> 0x1c);\n      isValid = FUN_080072f0(shiftedValue,1 << (lookupValue & 0xf) & 0xffff);\n    }\n  }\n  if (isValid != '\\0') {\n    isValid = '\\x01';\n  }\n  return isValid;\n}\n\n",
            "renaming": {
                "FUN_08008a6c": "check_value_validity_08008a6c",
                "param_1": "value",
                "cVar1": "isValid",
                "iVar2": "result",
                "uVar3": "shiftedValue",
                "uVar4": "lookupValue"
            },
            "calling": [
                "FUN_08000ef8"
            ],
            "called": [
                "FUN_08006b7c",
                "FUN_08006b28",
                "FUN_080072f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008abc": {
            "entrypoint": "0x08008abc",
            "current_name": "initialize_system_08008abc",
            "code": "\nvoid initialize_system_08008abc(void)\n\n{\n  FUN_0800723c();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008abc": "initialize_system_08008abc"
            },
            "calling": [
                "FUN_080022f8"
            ],
            "called": [
                "FUN_0800723c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008ac4": {
            "entrypoint": "0x08008ac4",
            "current_name": "FUNC_08008ac4",
            "code": "\nvoid FUNC_08008ac4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008ac4": "FUNC_08008ac4"
            },
            "calling": [
                "FUN_08003002",
                "FUN_08002fca"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008afa": {
            "entrypoint": "0x08008afa",
            "current_name": "calculate_offset_08008afa",
            "code": "\nushort calculate_offset_08008afa(int offset_ptr)\n\n{\n  return (*(short *)(offset_ptr + 0x134) + 0x40) - *(short *)(offset_ptr + 0x136) & 0x3f;\n}\n\n",
            "renaming": {
                "FUN_08008afa": "calculate_offset_08008afa",
                "param_1": "offset_ptr"
            },
            "calling": [
                "FUN_08008bf4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b66": {
            "entrypoint": "0x08008b66",
            "current_name": "update_data_08008b66",
            "code": "\nvoid updateData_08008b66(int dataAddress)\n\n{\n  int result;\n  ushort newIndex;\n  undefined newValue;\n  \n  result = FUN_08008600(dataAddress,&newValue);\n  if ((result == 0) &&\n     (newIndex = *(short *)(dataAddress + 0x60) + 1U & 0x3f, newIndex != *(ushort *)(dataAddress + 0x62))) {\n    *(undefined *)(*(int *)(dataAddress + 0x5c) + (uint)*(ushort *)(dataAddress + 0x60)) = newValue;\n    *(ushort *)(dataAddress + 0x60) = newIndex;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008b66": "update_data_08008b66",
                "param_1": "dataAddress",
                "iVar1": "result",
                "uVar2": "newIndex",
                "local_9": "newValue"
            },
            "calling": [],
            "called": [
                "FUN_08008600"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008bf4": {
            "entrypoint": "0x08008bf4",
            "current_name": "FUNC_08008bf4",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08008bfa) */\n/* WARNING: Removing unreachable block (ram,0x08008c0c) */\n/* WARNING: Removing unreachable block (ram,0x08008c02) */\n/* WARNING: Removing unreachable block (ram,0x08008c14) */\n\nvoid FUNC_08008bf4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008bf4": "FUNC_08008bf4"
            },
            "calling": [
                "FUN_08008f1c"
            ],
            "called": [
                "FUN_08008afa"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008c20": {
            "entrypoint": "0x08008c20",
            "current_name": "initialize_data_08008c20",
            "code": "\nvoid initializeData_08008c20(int data)\n\n{\n  *(int *)(data + 0x130) = data + 0x11;\n  *(undefined2 *)(data + 0x134) = 0;\n  *(undefined2 *)(data + 0x136) = 0;\n  *(int *)(data + 0x138) = data + 0x51;\n  *(undefined2 *)(data + 0x13c) = 0;\n  *(undefined2 *)(data + 0x13e) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008c20": "initialize_data_08008c20",
                "param_1": "data"
            },
            "calling": [
                "FUN_08008d30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008c44": {
            "entrypoint": "0x08008c44",
            "current_name": "initialize_serial_settings_08008c44",
            "code": "\nvoid initializeSerialSettings_08008c44(int serialPort,undefined4 baudRate,byte settings)\n\n{\n  uint bitMask;\n  byte bitValue;\n  int numSettings;\n  code *jumpTable;\n  \n  *(undefined4 *)(serialPort + 0x11c) = baudRate;\n  *(byte *)(serialPort + 0x140) = settings;\n  bitValue = settings & 7;\n  if (bitValue == 4) {\n    numSettings = 7;\n  }\n  else if (bitValue == 6) {\n    numSettings = 8;\n  }\n  else if (bitValue == 2) {\n    numSettings = 6;\n  }\n  else {\n    numSettings = 0;\n  }\n  if ((settings & 0x30) == 0x30) {\n    *(undefined4 *)(serialPort + 0x128) = 0x600;\n    numSettings = numSettings + 1;\n  }\n  else if ((settings & 0x20) == 0) {\n    *(undefined4 *)(serialPort + 0x128) = 0;\n  }\n  else {\n    *(undefined4 *)(serialPort + 0x128) = 0x400;\n    numSettings = numSettings + 1;\n  }\n  if ((settings & 8) == 0) {\n    *(undefined4 *)(serialPort + 0x124) = 0;\n  }\n  else {\n    *(undefined4 *)(serialPort + 0x124) = 0x2000;\n  }\n  if (numSettings == 8) {\n    *(undefined4 *)(serialPort + 0x120) = 0;\n  }\n  else if (numSettings == 9) {\n    *(undefined4 *)(serialPort + 0x120) = 0x1000;\n  }\n  else {\n    numSettings = 0;\n  }\n  if (numSettings != 0) {\n    FUN_08008078(serialPort + 0xd4);\n    FUN_0800863c(serialPort + 0xd4,0x8008b67);\n    return;\n  }\n  jumpTable = (code *)0x8008cee;\n  FUN_080090cc(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/cores/arduino/HardwareSerial.cpp\"\n               ,299,\"void HardwareSerial::begin(long unsigned int, byte)\",\"databits!=0\");\n  if (bitMask < 0x3c) {\n    uRam0000012d = (&DAT_0800a908)[bitMask];\n  }\n  else {\n    uRam0000012d = 0xff;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08008d0c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)(0,bitMask,&stack0x00000148);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008c44": "initialize_serial_settings_08008c44",
                "param_1": "serialPort",
                "param_2": "baudRate",
                "param_3": "settings",
                "extraout_r1": "bitMask",
                "bVar1": "bitValue",
                "iVar2": "numSettings",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_08003048"
            ],
            "called": [
                "FUN_08008078",
                "FUN_080090cc",
                "FUN_0800863c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008d00": {
            "entrypoint": "0x08008d00",
            "current_name": "set_byte_value_08008d00",
            "code": "\nvoid setByteValue_08008d00(int baseAddress,uint valueIndex)\n\n{\n  undefined byteValue;\n  code *jumpTable;\n  \n  if (valueIndex < 0x3c) {\n    byteValue = (&DAT_0800a908)[valueIndex];\n  }\n  else {\n    byteValue = 0xff;\n  }\n  *(undefined *)(baseAddress + 0x12d) = byteValue;\n                    /* WARNING: Could not recover jumptable at 0x08008d0c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008d00": "set_byte_value_08008d00",
                "param_1": "baseAddress",
                "param_2": "valueIndex",
                "uVar1": "byteValue",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_08008d30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008d18": {
            "entrypoint": "0x08008d18",
            "current_name": "set_byte_value_08008d18",
            "code": "\nvoid setByteValue_08008d18(int address,uint index)\n\n{\n  undefined value;\n  \n  if (index < 0x3c) {\n    value = (&DAT_0800a908)[index];\n  }\n  else {\n    value = 0xff;\n  }\n  *(undefined *)(address + 300) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008d18": "set_byte_value_08008d18",
                "param_1": "address",
                "param_2": "index",
                "uVar1": "value"
            },
            "calling": [
                "FUN_08008d30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008d30": {
            "entrypoint": "0x08008d30",
            "current_name": "initialize_data_08008d30",
            "code": "\nundefined4 *\ninitializeData_08008d30(undefined4 *data,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined result;\n  \n  data[1] = 0;\n  data[2] = 1000;\n  *data = &PTR_LAB_08008ba4_1_0800aab8;\n  if (data == (undefined4 *)&DAT_20000700) {\n    FUN_08008d00(&DAT_20000700,0,param3,&DAT_20000700,param4);\n    FUN_08008d18(&DAT_20000700,1);\n  }\n  else {\n    result = FUN_0800734a(param2,&DAT_0800a81c);\n    *(undefined *)((int)data + 0x12d) = result;\n    result = FUN_0800734a(param2,&DAT_0800a864);\n    *(undefined *)(data + 0x4b) = result;\n  }\n  FUN_08008c20(data);\n  return data;\n}\n\n",
            "renaming": {
                "FUN_08008d30": "initialize_data_08008d30",
                "param_1": "data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08008d8c"
            ],
            "called": [
                "FUN_08008d18",
                "FUN_08008d00",
                "FUN_08008c20",
                "FUN_0800734a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008d8c": {
            "entrypoint": "0x08008d8c",
            "current_name": "check_param_08008d8c",
            "code": "\nvoid checkParam_08008d8c(int inputParam1,int inputParam2,undefined4 param3,undefined4 param4)\n\n{\n  if (inputParam1 != 1) {\n    return;\n  }\n  if (inputParam2 == 0xffff) {\n    FUN_08008d30(&DAT_20000700,0x40004400,param3,0xffff,param4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008d8c": "check_param_08008d8c",
                "param_1": "inputParam1",
                "param_2": "inputParam2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [],
            "called": [
                "FUN_08008d30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008df8": {
            "entrypoint": "0x08008df8",
            "current_name": "initialize_data_08008df8",
            "code": "\nvoid initializeData_08008df8(undefined4 *dataPointer,undefined value1,undefined value2,undefined value3,\n                 undefined value4)\n\n{\n  *dataPointer = &DAT_0800ab0c;\n  *(undefined *)(dataPointer + 1) = value1;\n  *(undefined *)((int)dataPointer + 5) = value2;\n  *(undefined *)((int)dataPointer + 6) = value3;\n  *(undefined *)((int)dataPointer + 7) = value4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008df8": "initialize_data_08008df8",
                "param_1": "dataPointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "value4"
            },
            "calling": [
                "FUN_08008e14"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008e14": {
            "entrypoint": "0x08008e14",
            "current_name": "handle_special_case_08008e14",
            "code": "\nvoid handle_special_case_08008e14(int input_condition,int input_value)\n\n{\n  if ((input_condition == 1) && (input_value == 0xffff)) {\n    FUN_08008df8(&DAT_20000844,0,0,0,0);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008e14": "handle_special_case_08008e14",
                "param_1": "input_condition",
                "param_2": "input_value"
            },
            "calling": [],
            "called": [
                "FUN_08008df8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008ef4": {
            "entrypoint": "0x08008ef4",
            "current_name": "calculate_interpolation_08008ef4",
            "code": "\nint calculateInterpolation_08008ef4(int startValue,int startRange,int endRange,int startRangeOutput,int endRangeOutput)\n\n{\n  return (uint)((endRangeOutput - startRangeOutput) * (startValue - startRange)) / (uint)(endRange - startRange) + startRangeOutput;\n}\n\n",
            "renaming": {
                "FUN_08008ef4": "calculate_interpolation_08008ef4",
                "param_1": "startValue",
                "param_2": "startRange",
                "param_3": "endRange",
                "param_4": "startRangeOutput",
                "param_5": "endRangeOutput"
            },
            "calling": [
                "FUN_080026b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008f0c": {
            "entrypoint": "0x08008f0c",
            "current_name": "FUNC_08008f0c",
            "code": "\nvoid FUNC_08008f0c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008f0c": "FUNC_08008f0c"
            },
            "calling": [
                "FUN_08008f1c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008f0e": {
            "entrypoint": "0x08008f0e",
            "current_name": "initialize_application_08008f0e",
            "code": "\nvoid initializeApplication_08008f0e(void)\n\n{\n  FUN_08003f0c(3);\n  FUN_080036a2();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008f0e": "initialize_application_08008f0e"
            },
            "calling": [
                "FUN_08009148"
            ],
            "called": [
                "FUN_080036a2",
                "FUN_08003f0c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008f1c": {
            "entrypoint": "0x08008f1c",
            "current_name": "continuous_execution_08008f1c",
            "code": "\nvoid continuousExecution_08008f1c(void)\n\n{\n  FUNC_08008f0c();\n  FUN_08001b48();\n  do {\n    FUN_080022f8();\n    FUNC_08008bf4();\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08008f1c": "continuous_execution_08008f1c"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_080022f8",
                "FUN_08008f0c",
                "FUN_08008bf4",
                "FUN_08001b48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008f3c": {
            "entrypoint": "0x08008f3c",
            "current_name": "count_set_bits_08008f3c",
            "code": "\nchar count_set_bits_08008f3c(uint number)\n\n{\n  char bit_count;\n  \n  bit_count = '\\0';\n  for (; number != 1; number = number >> 1) {\n    bit_count = bit_count + '\\x01';\n  }\n  return bit_count;\n}\n\n",
            "renaming": {
                "FUN_08008f3c": "count_set_bits_08008f3c",
                "param_1": "number",
                "cVar1": "bit_count"
            },
            "calling": [
                "FUN_08009094"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008f78": {
            "entrypoint": "0x08008f78",
            "current_name": "initialize_parameters_08008f78",
            "code": "\nvoid initializeParameters_08008f78(int flag,int value,undefined4 param3,undefined4 param4)\n\n{\n  if (flag != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    DAT_2000084c = 6;\n    DAT_20000858 = 0;\n    DAT_20000860 = 7;\n    DAT_2000086c = 0;\n    DAT_20000874 = 8;\n    DAT_20000880 = 0;\n    DAT_20000888 = 9;\n    DAT_20000894 = 0;\n    DAT_2000089c = 10;\n    DAT_200008a8 = 0;\n    DAT_200008b0 = 0x17;\n    DAT_200008bc = 0;\n    DAT_200008c4 = 0x17;\n    DAT_200008d0 = 0;\n    DAT_200008d8 = 0x17;\n    DAT_200008e4 = 0;\n    DAT_200008ec = 0x17;\n    DAT_200008f8 = 0;\n    DAT_20000900 = 0x17;\n    DAT_2000090c = 0;\n    DAT_20000914 = 0x28;\n    DAT_20000920 = 0;\n    DAT_20000928 = 0x28;\n    DAT_20000934 = 0;\n    DAT_2000093c = 0x28;\n    DAT_20000948 = 0;\n    DAT_20000950 = 0x28;\n    DAT_2000095c = 0;\n    DAT_20000964 = 0x28;\n    DAT_20000970 = 0;\n    DAT_20000978 = 0x28;\n    DAT_20000984 = 0;\n    FUN_080090c2(0,ptr1,&DAT_20000000,&DAT_2000084c,param4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008f78": "initialize_parameters_08008f78",
                "param_1": "flag",
                "param_2": "value",
                "param_3": "param3",
                "param_4": "param4",
                "&LAB_08008f50_1": "ptr1"
            },
            "calling": [],
            "called": [
                "FUN_080090c2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009084": {
            "entrypoint": "0x08009084",
            "current_name": "check_and_execute_function_08009084",
            "code": "\nvoid checkAndExecuteFunction_08009084(int input_ptr)\n\n{\n  int result_index;\n  \n  if (*(int *)(input_ptr + 8) != 0) {\n    (**(code **)(input_ptr + 0xc))();\n    return;\n  }\n  FUN_0800a18c();\n  result_index = FUN_08008f3c();\n  if ((&DAT_20000858)[result_index * 5] != 0) {\n    checkAndExecuteFunction_08009084();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009084": "check_and_execute_function_08009084",
                "param_1": "input_ptr",
                "iVar1": "result_index"
            },
            "calling": [
                "FUN_08009094"
            ],
            "called": [
                "FUN_0800a18c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009094": {
            "entrypoint": "0x08009094",
            "current_name": "check_and_execute_function_08009094",
            "code": "\nvoid checkAndExecuteFunction_08009094(void)\n\n{\n  int index;\n  \n  index = FUN_08008f3c();\n  if ((&DAT_20000858)[index * 5] != 0) {\n    FUN_08009084();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009094": "check_and_execute_function_08009094",
                "iVar1": "index"
            },
            "calling": [
                "FUN_080042f0"
            ],
            "called": [
                "FUN_08008f3c",
                "FUN_08009084"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080090c2": {
            "entrypoint": "0x080090c2",
            "current_name": "copy_params_080090c2",
            "code": "\nvoid copyParams_080090c2(undefined4 destination,undefined4 source)\n\n{\n  FUN_08009108(source,destination);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080090c2": "copy_params_080090c2",
                "param_1": "destination",
                "param_2": "source"
            },
            "calling": [
                "FUN_08008f78"
            ],
            "called": [
                "FUN_08009108"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080090cc": {
            "entrypoint": "0x080090cc",
            "current_name": "assertion_failed_080090cc",
            "code": "\nvoid assertionFailed_080090cc(undefined4 file,undefined4 line,char *message,undefined4 function)\n\n{\n  undefined4 ptr_offset;\n  char *additionalInfo;\n  undefined8 result;\n  undefined4 ptr_param4;\n  \n  ptr_offset = *(undefined4 *)(DAT_20000090 + 0xc);\n  ptr_param4 = function;\n  if (message == (char *)0x0) goto LAB_080090f0;\n  additionalInfo = \", function: \";\n  do {\n    FUN_08009124(ptr_offset,\"assertion \\\"%s\\\" failed: file \\\"%s\\\", line %d%s%s\\n\",function,file,line\n                 ,additionalInfo,message,ptr_param4);\n    result = FUN_08009b5c();\n    line = (undefined4)((ulonglong)result >> 0x20);\n    ptr_offset = (undefined4)result;\nLAB_080090f0:\n    message = \"\";\n    additionalInfo = message;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080090cc": "assertion_failed_080090cc",
                "param_1": "file",
                "param_2": "line",
                "param_3": "message",
                "param_4": "function",
                "uVar1": "ptr_offset",
                "pcVar2": "additionalInfo",
                "uVar3": "result",
                "uVar4": "ptr_param4"
            },
            "calling": [
                "FUN_08008c44"
            ],
            "called": [
                "FUN_08009b5c",
                "FUN_08009124"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009108": {
            "entrypoint": "0x08009108",
            "current_name": "shift_left_by32_bits_08009108",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08009110) */\n\nlonglong shiftLeftBy32Bits_08009108(undefined4 input1,uint input2)\n\n{\n  return (ulonglong)input2 << 0x20;\n}\n\n",
            "renaming": {
                "FUN_08009108": "shift_left_by32_bits_08009108",
                "param_1": "input1",
                "param_2": "input2"
            },
            "calling": [
                "FUN_080090c2"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009124": {
            "entrypoint": "0x08009124",
            "current_name": "execute_function_08009124",
            "code": "\nvoid executeFunction_08009124(undefined4 input1,undefined4 input2,undefined4 output1,undefined4 output2)\n\n{\n  undefined4 tempOutput1;\n  undefined4 tempOutput2;\n  \n  tempOutput1 = output1;\n  tempOutput2 = output2;\n  FUN_0800937c(DAT_20000090,input1,input2,&tempOutput1,input1,&tempOutput1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009124": "execute_function_08009124",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "output1",
                "param_4": "output2",
                "uStack_8": "tempOutput1",
                "uStack_4": "tempOutput2"
            },
            "calling": [
                "FUN_080090cc"
            ],
            "called": [
                "FUN_0800937c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009148": {
            "entrypoint": "0x08009148",
            "current_name": "execute_functions_08009148",
            "code": "\nvoid execute_Functions_08009148(void)\n\n{\n  int index;\n  \n  for (index = 0; index != 0; index = index + 1) {\n    (*(code *)(&DAT_0800abe4)[index])();\n  }\n  FUNC_0800a424();\n  for (index = 0; index != 0xc; index = index + 1) {\n    (*(code *)(&DAT_0800abe4)[index])();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009148": "execute_functions_08009148",
                "iVar1": "index"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_0800a424",
                "FUN_08008f0e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009190": {
            "entrypoint": "0x08009190",
            "current_name": "initialize_data_08009190",
            "code": "\nvoid initializeData_08009190(undefined4 inputValue)\n\n{\n  FUN_08009270(DAT_20000090,inputValue);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009190": "initialize_data_08009190",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [
                "FUN_08009270"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091a0": {
            "entrypoint": "0x080091a0",
            "current_name": "initialize_data_080091a0",
            "code": "\nvoid initializeData_080091a0(undefined4 inputData)\n\n{\n  FUN_080091d8(DAT_20000090,inputData);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091a0": "initialize_data_080091a0",
                "param_1": "inputData"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [
                "FUN_080091d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091b0": {
            "entrypoint": "0x080091b0",
            "current_name": "copy_data_080091b0",
            "code": "\nvoid copyData_080091b0(int dataDestAddr,undefined *dataSrc,int dataSize)\n\n{\n  undefined *destPtr;\n  undefined *srcPtr;\n  \n  srcPtr = (undefined *)(dataDestAddr + -1);\n  destPtr = dataSrc + dataSize;\n  for (; dataSrc != destPtr; dataSrc = dataSrc + 1) {\n    srcPtr = srcPtr + 1;\n    *srcPtr = *dataSrc;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091b0": "copy_data_080091b0",
                "param_1": "dataDestAddr",
                "param_2": "dataSrc",
                "param_3": "dataSize",
                "puVar1": "destPtr",
                "puVar2": "srcPtr"
            },
            "calling": [
                "FUN_080027f0",
                "FUN_08009908"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091c6": {
            "entrypoint": "0x080091c6",
            "current_name": "set_memory_block_080091c6",
            "code": "\nvoid setMemoryBlock_080091c6(undefined *destination,undefined value,int size)\n\n{\n  undefined *endAddress;\n  \n  endAddress = destination + size;\n  for (; destination != endAddress; destination = destination + 1) {\n    *destination = value;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091c6": "set_memory_block_080091c6",
                "param_1": "destination",
                "param_2": "value",
                "param_3": "size",
                "puVar1": "endAddress"
            },
            "calling": [
                "FUN_08002a58",
                "FUN_08009cdc",
                "FUN_08002968",
                "FUN_08007118",
                "FUN_08009db0",
                "FUN_08009d24",
                "FUN_08006d80"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091d8": {
            "entrypoint": "0x080091d8",
            "current_name": "reorganize_data_080091d8",
            "code": "\nvoid reorganizeData_080091d8(undefined4 *result,int size,undefined4 value1,undefined4 value2)\n\n{\n  int **temp1;\n  int **temp2;\n  int **temp3;\n  int *temp4;\n  int **temp5;\n  int **temp6;\n  \n  if (size == 0) {\n    return;\n  }\n  temp6 = (int **)(size + -4);\n  if (*(int *)(size + -4) < 0) {\n    temp6 = (int **)((int)temp6 + *(int *)(size + -4));\n  }\n  FUNC_08009f48();\n  temp3 = (int **)&DAT_2000098c;\n  if (DAT_2000098c == (int **)0x0) {\n    temp6[1] = (int *)0x0;\n    temp2 = temp1;\n    DAT_2000098c = temp6;\n  }\n  else {\n    temp3 = DAT_2000098c;\n    if (temp6 < DAT_2000098c) {\n      temp2 = (int **)*temp6;\n      temp3 = (int **)((int)temp6 + (int)temp2);\n      if (DAT_2000098c == temp3) {\n        temp4 = *DAT_2000098c;\n        DAT_2000098c = (int **)DAT_2000098c[1];\n        temp3 = (int **)((int)temp4 + (int)temp2);\n        *temp6 = (int *)temp3;\n      }\n      temp6[1] = (int *)DAT_2000098c;\n      DAT_2000098c = temp6;\n    }\n    else {\n      do {\n        temp5 = temp3;\n        temp3 = (int **)temp5[1];\n        if (temp3 == (int **)0x0) break;\n      } while (temp3 <= temp6);\n      temp2 = (int **)*temp5;\n      if ((int **)((int)temp5 + (int)temp2) == temp6) {\n        temp2 = (int **)((int)temp2 + (int)*temp6);\n        *temp5 = (int *)temp2;\n        if (temp3 == (int **)((int)temp5 + (int)temp2)) {\n          temp4 = *temp3;\n          temp3 = (int **)temp3[1];\n          temp2 = (int **)((int)temp2 + (int)temp4);\n          *temp5 = (int *)temp2;\n          temp5[1] = (int *)temp3;\n        }\n      }\n      else if (temp6 < (int **)((int)temp5 + (int)temp2)) {\n        *result = 0xc;\n      }\n      else {\n        temp2 = (int **)((int)temp6 + (int)*temp6);\n        if (temp3 == temp2) {\n          temp4 = *temp3;\n          temp3 = (int **)temp3[1];\n          temp2 = (int **)((int)temp4 + (int)*temp6);\n          *temp6 = (int *)temp2;\n        }\n        temp6[1] = (int *)temp3;\n        temp5[1] = (int *)temp6;\n      }\n    }\n  }\n  FUNC_08009f4a(result,temp2,temp3,value2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091d8": "reorganize_data_080091d8",
                "param_1": "result",
                "param_2": "size",
                "param_3": "value1",
                "param_4": "value2",
                "extraout_r1": "temp1",
                "ppiVar1": "temp2",
                "ppiVar2": "temp3",
                "piVar3": "temp4",
                "ppiVar4": "temp5",
                "ppiVar5": "temp6"
            },
            "calling": [
                "FUN_08009b5c",
                "FUN_08009908",
                "FUN_080091a0",
                "FUN_08009a80"
            ],
            "called": [
                "FUN_08009f4a",
                "FUN_08009f48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009270": {
            "entrypoint": "0x08009270",
            "current_name": "allocate_memory_08009270",
            "code": "\nuint allocate_memory_08009270(undefined4 *output_ptr,uint size)\n\n{\n  uint *current_ptr;\n  int offset;\n  uint *previous_ptr;\n  uint offset_difference;\n  uint *last_assigned_ptr;\n  uint allocation_size;\n  \n  allocation_size = (size + 3 & 0xfffffffc) + 8;\n  if (allocation_size < 0xc) {\n    allocation_size = 0xc;\n  }\n  if (((int)allocation_size < 0) || (allocation_size < size)) {\n    *output_ptr = 0xc;\n  }\n  else {\n    FUNC_08009f48();\n    current_ptr = DAT_2000098c;\n    last_assigned_ptr = DAT_2000098c;\n    while (previous_ptr = current_ptr, previous_ptr != (uint *)0x0) {\n      offset_difference = *previous_ptr - allocation_size;\n      if (-1 < (int)offset_difference) {\n        if (offset_difference < 0xc) {\n          if (last_assigned_ptr == previous_ptr) {\n            current_ptr = (uint *)last_assigned_ptr[1];\n            DAT_2000098c = current_ptr;\n          }\n          else {\n            current_ptr = (uint *)previous_ptr[1];\n          }\n          if (last_assigned_ptr != previous_ptr) {\n            last_assigned_ptr[1] = (uint)current_ptr;\n            last_assigned_ptr = previous_ptr;\n          }\n        }\n        else {\n          *previous_ptr = offset_difference;\n          *(uint *)((int)previous_ptr + offset_difference) = allocation_size;\n          last_assigned_ptr = (uint *)((int)previous_ptr + offset_difference);\n        }\n        goto LAB_080092d4;\n      }\n      last_assigned_ptr = previous_ptr;\n      current_ptr = (uint *)previous_ptr[1];\n    }\n    if (DAT_20000990 == 0) {\n      DAT_20000990 = FUN_08009918(output_ptr);\n    }\n    current_ptr = (uint *)FUN_08009918(output_ptr,allocation_size);\n    if ((current_ptr != (uint *)0xffffffff) &&\n       ((last_assigned_ptr = (uint *)((int)current_ptr + 3U & 0xfffffffc), current_ptr == last_assigned_ptr ||\n        (offset = FUN_08009918(output_ptr,(int)last_assigned_ptr - (int)current_ptr), offset != -1)))) {\n      *last_assigned_ptr = allocation_size;\nLAB_080092d4:\n      FUNC_08009f4a(output_ptr);\n      allocation_size = (int)last_assigned_ptr + 0xbU & 0xfffffff8;\n      offset = allocation_size - (int)(last_assigned_ptr + 1);\n      if (offset != 0) {\n        *(int *)((int)last_assigned_ptr + offset) = -offset;\n        return allocation_size;\n      }\n      return allocation_size;\n    }\n    *output_ptr = 0xc;\n    FUNC_08009f4a(output_ptr);\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08009270": "allocate_memory_08009270",
                "param_1": "output_ptr",
                "param_2": "size",
                "puVar1": "current_ptr",
                "iVar2": "offset",
                "puVar3": "previous_ptr",
                "uVar4": "offset_difference",
                "puVar5": "last_assigned_ptr",
                "uVar6": "allocation_size"
            },
            "calling": [
                "FUN_08009908",
                "FUN_08009eac",
                "FUN_08009190",
                "FUN_08009d24"
            ],
            "called": [
                "FUN_08009f4a",
                "FUN_08009f48",
                "FUN_08009918"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800932c": {
            "entrypoint": "0x0800932c",
            "current_name": "process_input_0800932c",
            "code": "\nuint process_input_0800932c(int input_param,byte input_byte,byte **input_ptr)\n\n{\n  int temp_var1;\n  byte *temp_ptr1;\n  byte *temp_ptr2;\n  uint result;\n  \n  temp_ptr1 = input_ptr[2] + -1;\n  input_ptr[2] = temp_ptr1;\n  if ((-1 < (int)temp_ptr1) ||\n     (((int)input_ptr[6] <= (int)temp_ptr1 && (temp_ptr1 = (byte *)(uint)input_byte, temp_ptr1 != (byte *)0xa))))\n  {\n    temp_ptr1 = *input_ptr;\n    *input_ptr = temp_ptr1 + 1;\n    *temp_ptr1 = input_byte;\n    return (uint)input_byte;\n  }\n  if ((input_param != 0) && (*(int *)(input_param + 0x18) == 0)) {\n    FUN_08009d50();\n  }\n  if (input_ptr == (byte **)&DAT_0800aba4) {\n    input_ptr = *(byte ***)(input_param + 4);\n  }\n  else if (input_ptr == (byte **)&DAT_0800abc4) {\n    input_ptr = *(byte ***)(input_param + 8);\n  }\n  else if (input_ptr == (byte **)&DAT_0800ab84) {\n    input_ptr = *(byte ***)(input_param + 0xc);\n  }\n  input_ptr[2] = input_ptr[6];\n  temp_ptr2 = (byte *)(uint)*(ushort *)(input_ptr + 3);\n  temp_var1 = (int)temp_ptr2 << 0x1c;\n  if (((temp_var1 < 0) && (temp_ptr2 = input_ptr[4], temp_ptr2 != (byte *)0x0)) ||\n     (temp_var1 = FUN_08009a80(input_param,input_ptr,temp_var1,temp_ptr2,temp_ptr1), temp_var1 == 0)) {\n    result = (uint)input_byte;\n    temp_var1 = (int)*input_ptr - (int)input_ptr[4];\n    if ((temp_var1 < (int)input_ptr[5]) || (temp_var1 = FUN_08009c7c(input_param,input_ptr), temp_var1 == 0)) {\n      input_ptr[2] = input_ptr[2] + -1;\n      temp_ptr1 = *input_ptr;\n      *input_ptr = temp_ptr1 + 1;\n      *temp_ptr1 = input_byte;\n      if ((byte *)(temp_var1 + 1) != input_ptr[5]) {\n        if (-1 < (int)((uint)*(ushort *)(input_ptr + 3) << 0x1f)) {\n          return result;\n        }\n        if (result != 10) {\n          return result;\n        }\n      }\n      temp_var1 = FUN_08009c7c(input_param,input_ptr);\n      if (temp_var1 == 0) {\n        return result;\n      }\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800932c": "process_input_0800932c",
                "param_1": "input_param",
                "param_2": "input_byte",
                "param_3": "input_ptr",
                "iVar1": "temp_var1",
                "pbVar2": "temp_ptr1",
                "pbVar3": "temp_ptr2",
                "uVar4": "result"
            },
            "calling": [
                "FUN_08009358"
            ],
            "called": [
                "FUN_08009c7c",
                "FUN_08009a80",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009358": {
            "entrypoint": "0x08009358",
            "current_name": "iterate_and_process_08009358",
            "code": "\nint iterateAndProcess_08009358(undefined4 value1,undefined4 value2,undefined *array,int arrayLength)\n\n{\n  int result;\n  undefined *endPointer;\n  int currentPosition;\n  \n  endPointer = array + arrayLength;\n  currentPosition = arrayLength;\n  do {\n    if (array == endPointer) {\n      return 0;\n    }\n    result = FUN_0800932c(value1,*array,value2,arrayLength,currentPosition);\n    arrayLength = result + 1;\n    array = array + 1;\n  } while (arrayLength != 0);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009358": "iterate_and_process_08009358",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "array",
                "param_4": "arrayLength",
                "iVar1": "result",
                "puVar2": "endPointer",
                "iVar3": "currentPosition"
            },
            "calling": [
                "FUN_0800937c"
            ],
            "called": [
                "FUN_0800932c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800937c": {
            "entrypoint": "0x0800937c",
            "current_name": "decode_and_process_data_0800937c",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08009550) */\n\nint decode_and_process_data_0800937c(int data_ptr,undefined4 *data_header,byte *data_buffer,int *result_ptr)\n\n{\n  int result;\n  int *result_ptr_temp;\n  bool is_number;\n  byte *current_byte;\n  byte *next_byte;\n  int result_temp;\n  int value;\n  int *result_ptr;\n  uint options;\n  int precision;\n  undefined4 alignment;\n  int width;\n  int total_count;\n  byte conversion_specifier;\n  undefined space_flag;\n  undefined zero_padding_flag;\n  undefined sign_flag;\n  undefined4 length_modifier;\n  \n  result_ptr = result_ptr;\n  if ((data_ptr != 0) && (*(int *)(data_ptr + 0x18) == 0)) {\n    FUN_08009d50();\n  }\n  if (data_header == &DAT_0800aba4) {\n    data_header = *(undefined4 **)(data_ptr + 4);\n  }\n  else if (data_header == (undefined4 *)&DAT_0800abc4) {\n    data_header = *(undefined4 **)(data_ptr + 8);\n  }\n  else if (data_header == (undefined4 *)&DAT_0800ab84) {\n    data_header = *(undefined4 **)(data_ptr + 0xc);\n  }\n  if (((-1 < (int)((uint)*(ushort *)(data_header + 3) << 0x1c)) || (data_header[4] == 0)) &&\n     (value = FUN_08009a80(data_ptr,data_header), value != 0)) {\n    return -1;\n  }\n  total_count = 0;\n  space_flag = 0x20;\n  zero_padding_flag = 0x30;\n  current_byte = data_buffer;\nLAB_080093be:\n  next_byte = current_byte;\n  if (*next_byte != 0) goto LAB_08009474;\n  goto LAB_080093c8;\nLAB_08009474:\n  current_byte = next_byte + 1;\n  if (*next_byte != 0x25) goto LAB_080093be;\nLAB_080093c8:\n  value = (int)next_byte - (int)data_buffer;\n  if (value != 0) {\n    result = FUN_08009358(data_ptr,data_header,data_buffer,value);\n    if (result == -1) {\nLAB_08009568:\n      if ((int)((uint)*(ushort *)(data_header + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return total_count;\n    }\n    total_count = total_count + value;\n  }\n  if (*next_byte == 0) goto LAB_08009568;\n  options = 0;\n  width = 0;\n  precision = -1;\n  alignment = 0;\n  sign_flag = 0;\n  length_modifier = 0;\n  current_byte = next_byte + 1;\n  while( true ) {\n    value = FUN_08009f2c(\"#-0+ \",*current_byte);\n    data_buffer = current_byte + 1;\n    if (value == 0) break;\n    options = 1 << (value + 0xf7ff54b0U & 0xff) | options;\n    current_byte = data_buffer;\n  }\n  if ((int)(options << 0x1b) < 0) {\n    sign_flag = 0x20;\n  }\n  if ((int)(options << 0x1c) < 0) {\n    sign_flag = 0x2b;\n  }\n  if (*current_byte == 0x2a) {\n    result_ptr_temp = result_ptr + 1;\n    value = *result_ptr;\n    result_ptr = result_ptr_temp;\n    if (value < 0) {\n      width = -value;\n      options = options | 2;\n      goto LAB_080094a6;\n    }\n  }\n  else {\n    is_number = false;\n    value = width;\n    data_buffer = current_byte;\n    while( true ) {\n      if (9 < *data_buffer - 0x30) break;\n      value = value * 10 + (*data_buffer - 0x30);\n      is_number = true;\n      data_buffer = data_buffer + 1;\n    }\n    if (!is_number) goto LAB_080094a6;\n  }\n  width = value;\nLAB_080094a6:\n  if (*data_buffer == 0x2e) {\n    if (data_buffer[1] == 0x2a) {\n      data_buffer = data_buffer + 2;\n      result_ptr_temp = result_ptr + 1;\n      precision = *result_ptr;\n      result_ptr = result_ptr_temp;\n      if (precision < 0) {\n        precision = -1;\n      }\n    }\n    else {\n      is_number = false;\n      value = 0;\n      precision = 0;\n      while( true ) {\n        data_buffer = data_buffer + 1;\n        if (9 < *data_buffer - 0x30) break;\n        value = value * 10 + (*data_buffer - 0x30);\n        is_number = true;\n      }\n      if (is_number) {\n        precision = value;\n      }\n    }\n  }\n  value = FUN_08009f2c(&DAT_0800ab56,*data_buffer,3);\n  if (value != 0) {\n    data_buffer = data_buffer + 1;\n    options = options | 0x40 << (value + 0xf7ff54aaU & 0xff);\n  }\n  conversion_specifier = *data_buffer;\n  data_buffer = data_buffer + 1;\n  value = FUN_08009f2c(\"efgEFG\",conversion_specifier,6);\n  if (value == 0) {\n    result_temp = FUN_08009698(data_ptr,&options,data_header,0x8009359,&result_ptr);\n    if (result_temp == -1) goto LAB_08009568;\n  }\n  else {\n    result_ptr = (int *)(((int)result_ptr + 7U & 0xfffffff8) + 8);\n  }\n  total_count = total_count + result_temp;\n  current_byte = data_buffer;\n  goto LAB_080093be;\n}\n\n",
            "renaming": {
                "FUN_0800937c": "decode_and_process_data_0800937c",
                "param_1": "data_ptr",
                "param_2": "data_header",
                "param_3": "data_buffer",
                "param_4": "result_ptr",
                "iVar1": "result",
                "piVar2": "result_ptr_temp",
                "bVar3": "is_number",
                "pbVar4": "current_byte",
                "pbVar5": "next_byte",
                "unaff_r9": "result_temp",
                "iVar6": "value",
                "local_8c": "result_ptr",
                "local_88": "options",
                "local_84": "precision",
                "local_80": "alignment",
                "local_7c": "width",
                "local_74": "total_count",
                "local_70": "conversion_specifier",
                "local_6f": "space_flag",
                "local_6e": "zero_padding_flag",
                "local_45": "sign_flag",
                "local_30": "length_modifier"
            },
            "calling": [
                "FUN_080098d8",
                "FUN_08009124"
            ],
            "called": [
                "FUN_08009f2c",
                "FUN_08009358",
                "FUN_08009698",
                "FUN_08009a80",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080095a8": {
            "entrypoint": "0x080095a8",
            "current_name": "process_data_080095a8",
            "code": "\nundefined4\nprocessData_080095a8(undefined4 input_data,uint *array,uint *output_length,undefined4 output_data,code *callback)\n\n{\n  int index;\n  int result;\n  uint max_length;\n  uint temp_var;\n  bool flag;\n  \n  max_length = array[4];\n  if ((int)array[4] < (int)array[2]) {\n    max_length = array[2];\n  }\n  *output_length = max_length;\n  if (*(char *)((int)array + 0x43) != '\\0') {\n    *output_length = max_length + 1;\n  }\n  if ((int)(*array << 0x1a) < 0) {\n    *output_length = *output_length + 2;\n  }\n  if ((*array & 6) == 0) {\n    for (index = 0; index < (int)(array[3] - *output_length); index = index + 1) {\n      result = (*callback)(input_data,output_data,(int)array + 0x19,1);\n      if (result == -1) {\n        return 0xffffffff;\n      }\n    }\n  }\n  max_length = (uint)*(byte *)((int)array + 0x43);\n  if (max_length != 0) {\n    max_length = 1;\n  }\n  temp_var = max_length;\n  if ((int)(*array << 0x1a) < 0) {\n    *(undefined *)((int)array + max_length + 0x43) = 0x30;\n    temp_var = max_length + 2;\n    *(undefined *)((int)array + max_length + 0x44) = *(undefined *)((int)array + 0x45);\n  }\n  index = (*callback)(input_data,output_data,(int)array + 0x43,temp_var);\n  if (index != -1) {\n    max_length = array[3];\n    flag = (*array & 6) != 4;\n    if (flag) {\n      max_length = 0;\n    }\n    temp_var = 0;\n    if (!flag) {\n      max_length = max_length - *output_length;\n    }\n    if (!flag) {\n      max_length = max_length & ~((int)max_length >> 0x1f);\n    }\n    if ((int)array[4] < (int)array[2]) {\n      max_length = max_length + (array[2] - array[4]);\n    }\n    while( true ) {\n      if (max_length == temp_var) {\n        return 0;\n      }\n      index = (*callback)(input_data,output_data,(int)array + 0x1a,1);\n      if (index == -1) break;\n      temp_var = temp_var + 1;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080095a8": "process_data_080095a8",
                "param_1": "input_data",
                "param_2": "array",
                "param_3": "output_length",
                "param_4": "output_data",
                "param_5": "callback",
                "iVar1": "index",
                "iVar2": "result",
                "uVar3": "max_length",
                "uVar4": "temp_var",
                "bVar5": "flag"
            },
            "calling": [
                "FUN_08009698"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009698": {
            "entrypoint": "0x08009698",
            "current_name": "parse_and_format_number_08009698",
            "code": "\nuint parseAndFormatNumber_08009698(undefined4 input_type,uint *number,undefined4 format,code *print_function,uint **print_buffer)\n\n{\n  byte first_byte;\n  int index;\n  uint *ptr;\n  int result;\n  char *hex_chars;\n  uint base;\n  uint **print_buffer_ptr;\n  char **char_buffer_ptr;\n  uint num;\n  uint length;\n  char *formatted_number;\n  char *temp_buffer;\n  uint temp_array [2];\n  \n  first_byte = *(byte *)(number + 6);\n  temp_buffer = (char *)((int)number + 0x43);\n  if (first_byte != 0x6e) {\n    if (first_byte < 0x6f) {\n      if (first_byte != 99) {\n        if (first_byte < 100) {\n          if (first_byte == 0) goto LAB_08009852;\n          if (first_byte != 0x58) goto LAB_080096c8;\n          *(undefined *)((int)number + 0x45) = 0x58;\n          hex_chars = \"0123456789ABCDEF\";\nLAB_080097e2:\n          base = *number;\n          ptr = *print_buffer;\n          *print_buffer = ptr + 1;\n          if (((base & 0x80) == 0) && ((int)(base << 0x19) < 0)) {\n            num = (uint)*(ushort *)ptr;\n          }\n          else {\n            num = *ptr;\n          }\n          if ((int)(base << 0x1f) < 0) {\n            *number = base | 0x20;\n          }\n          if (num == 0) {\n            *number = *number & 0xffffffdf;\n          }\n          base = 0x10;\nLAB_08009778:\n          *(undefined *)((int)number + 0x43) = 0;\n        }\n        else {\n          if ((first_byte != 100) && (first_byte != 0x69)) goto LAB_080096c8;\n          num = *number;\n          ptr = *print_buffer;\n          if ((num & 0x80) == 0) {\n            *print_buffer = ptr + 1;\n            if ((num & 0x40) == 0) goto LAB_080096e8;\n            num = (uint)(short)*(ushort *)ptr;\n          }\n          else {\n            *print_buffer = ptr + 1;\nLAB_080096e8:\n            num = *ptr;\n          }\n          if ((int)num < 0) {\n            num = -num;\n            *(undefined *)((int)number + 0x43) = 0x2d;\n          }\n          hex_chars = \"0123456789ABCDEF\";\n          base = 10;\n        }\n        length = number[1];\n        number[2] = length;\n        formatted_number = temp_buffer;\n        if ((int)length < 0) {\n          if (num != 0) goto LAB_08009816;\nLAB_080098c4:\n          *(char *)((int)number + 0x42) = *hex_chars;\n          formatted_number = (char *)((int)number + 0x42);\n        }\n        else {\n          *number = *number & 0xfffffffb;\n          if (num == 0) {\n            if (length != 0) goto LAB_080098c4;\n          }\n          else {\nLAB_08009816:\n            do {\n              length = num / base;\n              formatted_number = formatted_number + -1;\n              *formatted_number = hex_chars[num - base * length];\n              num = length;\n            } while (length != 0);\n          }\n        }\n        if (((base == 8) && ((int)(*number << 0x1f) < 0)) && ((int)number[1] <= (int)number[4]))\n        {\n          formatted_number[-1] = '0';\n          formatted_number = formatted_number + -1;\n        }\n        number[4] = (int)temp_buffer - (int)formatted_number;\n        temp_buffer = formatted_number;\n        goto LAB_080097be;\n      }\n      ptr = *print_buffer;\n      *print_buffer = ptr + 1;\n      *(char *)((int)number + 0x42) = (char)*ptr;\nLAB_08009728:\n      temp_buffer = (char *)((int)number + 0x42);\n      num = 1;\n    }\n    else {\n      if (first_byte != 0x73) {\n        if (first_byte < 0x74) {\n          if (first_byte == 0x6f) {\nLAB_0800974e:\n            num = *number;\n            ptr = *print_buffer;\n            if ((num & 0x80) == 0) {\n              *print_buffer = ptr + 1;\n              if ((num & 0x40) == 0) goto LAB_0800975c;\n              num = (uint)*(ushort *)ptr;\n            }\n            else {\n              *print_buffer = ptr + 1;\nLAB_0800975c:\n              num = *ptr;\n            }\n            if (first_byte == 0x6f) {\n              base = 8;\n            }\n            else {\n              base = 10;\n            }\n            hex_chars = \"0123456789ABCDEF\";\n            goto LAB_08009778;\n          }\n          if (first_byte == 0x70) {\n            *number = *number | 0x20;\nLAB_0800970e:\n            hex_chars = \"0123456789abcdef\";\n            *(undefined *)((int)number + 0x45) = 0x78;\n            goto LAB_080097e2;\n          }\n        }\n        else {\n          if (first_byte == 0x75) goto LAB_0800974e;\n          if (first_byte == 0x78) goto LAB_0800970e;\n        }\nLAB_080096c8:\n        *(byte *)((int)number + 0x42) = first_byte;\n        goto LAB_08009728;\n      }\n      char_buffer_ptr = (char **)*print_buffer;\n      *print_buffer = (uint *)(char_buffer_ptr + 1);\n      temp_buffer = *char_buffer_ptr;\n      index = FUN_08009f2c(temp_buffer,0,number[1]);\n      if (index != 0) {\n        number[1] = index - (int)temp_buffer;\n      }\n      num = number[1];\n    }\n    number[4] = num;\n    *(undefined *)((int)number + 0x43) = 0;\n    goto LAB_080097be;\n  }\n  num = *number;\n  print_buffer_ptr = (uint **)*print_buffer;\n  base = number[5];\n  if ((num & 0x80) == 0) {\n    *print_buffer = (uint *)(print_buffer_ptr + 1);\n    ptr = *print_buffer_ptr;\n    if ((num & 0x40) == 0) goto LAB_0800983e;\n    *(short *)ptr = (short)base;\n  }\n  else {\n    *print_buffer = (uint *)(print_buffer_ptr + 1);\n    ptr = *print_buffer_ptr;\nLAB_0800983e:\n    *ptr = base;\n  }\nLAB_08009852:\n  number[4] = 0;\nLAB_080097be:\n  index = FUN_080095a8(input_type,number,temp_array,format,print_function);\n  if ((index == -1) || (index = (*print_function)(input_type,format,temp_buffer,number[4]), index == -1)) {\nLAB_080097d2:\n    num = 0xffffffff;\n  }\n  else {\n    if ((int)(*number << 0x1e) < 0) {\n      for (index = 0; index < (int)(number[3] - temp_array[0]); index = index + 1) {\n        result = (*print_function)(input_type,format,(int)number + 0x19,1);\n        if (result == -1) goto LAB_080097d2;\n      }\n    }\n    num = number[3];\n    if ((int)number[3] < (int)temp_array[0]) {\n      num = temp_array[0];\n    }\n  }\n  return num;\n}\n\n",
            "renaming": {
                "FUN_08009698": "parse_and_format_number_08009698",
                "param_1": "input_type",
                "param_2": "number",
                "param_3": "format",
                "param_4": "print_function",
                "param_5": "print_buffer",
                "bVar1": "first_byte",
                "iVar2": "index",
                "puVar3": "ptr",
                "iVar4": "result",
                "pcVar5": "hex_chars",
                "uVar6": "base",
                "uVar9": "num",
                "uVar10": "length",
                "pcVar11": "formatted_number",
                "pcVar12": "temp_buffer",
                "local_24": "temp_array",
                "ppuVar7": "print_buffer_ptr",
                "ppcVar8": "char_buffer_ptr"
            },
            "calling": [
                "FUN_0800937c"
            ],
            "called": [
                "FUN_08009f2c",
                "FUN_080095a8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080098d8": {
            "entrypoint": "0x080098d8",
            "current_name": "initialize_function_080098d8",
            "code": "\nvoid initializeFunction_080098d8(undefined4 param1,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int dataPointer;\n  undefined4 param1Copy;\n  undefined4 param2Copy;\n  undefined4 param3Copy;\n  undefined4 param4Copy;\n  \n  dataPointer = DAT_20000090;\n  param1Copy = param1;\n  param2Copy = param2;\n  param3Copy = param3;\n  param4Copy = param4;\n  if ((DAT_20000090 != 0) && (*(int *)(DAT_20000090 + 0x18) == 0)) {\n    FUN_08009d50(DAT_20000090);\n  }\n  FUN_0800937c(dataPointer,*(undefined4 *)(dataPointer + 8),param1,&param2Copy,param1Copy,&param2Copy);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080098d8": "initialize_function_080098d8",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "dataPointer",
                "uVar2": "param1Copy",
                "uStack_c": "param2Copy",
                "uStack_8": "param3Copy",
                "uStack_4": "param4Copy"
            },
            "calling": [
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08007544",
                "FUN_08007594",
                "FUN_080075dc"
            ],
            "called": [
                "FUN_0800937c",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009908": {
            "entrypoint": "0x08009908",
            "current_name": "validate_input_08009908",
            "code": "\nint validate_input_08009908(int data_length,uint key_length)\n\n{\n  undefined4 data_ptr;\n  int result;\n  uint comparison_result;\n  \n  data_ptr = DAT_20000090;\n  if (data_length != 0) {\n    if (key_length == 0) {\n      FUN_080091d8();\n      result = 0;\n    }\n    else {\n      comparison_result = FUN_0800a154();\n      result = data_length;\n      if ((comparison_result < key_length) && (result = FUN_08009270(data_ptr,key_length), result != 0)) {\n        FUN_080091b0(result,data_length,key_length);\n        FUN_080091d8(data_ptr,data_length);\n      }\n    }\n    return result;\n  }\n  result = FUN_08009270(DAT_20000090,key_length,key_length,&DAT_20000090);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009908": "validate_input_08009908",
                "param_1": "data_length",
                "param_2": "key_length",
                "uVar1": "data_ptr",
                "iVar2": "result",
                "uVar3": "comparison_result"
            },
            "calling": [
                "FUN_080027f0",
                "FUN_08002acc",
                "FUN_0800288c"
            ],
            "called": [
                "FUN_080091d8",
                "FUN_0800a154",
                "FUN_080091b0",
                "FUN_08009270"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009918": {
            "entrypoint": "0x08009918",
            "current_name": "check_and_assign_value_08009918",
            "code": "\nvoid checkAndAssignValue_08009918(int *outputValue,undefined4 inputValue)\n\n{\n  int result;\n  \n  DAT_20000a38 = 0;\n  result = FUN_08008804(inputValue);\n  if ((result == -1) && (DAT_20000a38 != 0)) {\n    *outputValue = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009918": "check_and_assign_value_08009918",
                "param_1": "outputValue",
                "param_2": "inputValue",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08009270"
            ],
            "called": [
                "FUN_08008804"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009938": {
            "entrypoint": "0x08009938",
            "current_name": "find_char_in_string_08009938",
            "code": "\nchar * find_char_in_string_08009938(char *string,char character)\n\n{\n  char *current_char;\n  \n  do {\n    current_char = string;\n    if (*current_char == '\\0') {\n      if (character != '\\0') {\n        current_char = (char *)0x0;\n      }\n      return current_char;\n    }\n    string = current_char + 1;\n  } while (character != *current_char);\n  return current_char;\n}\n\n",
            "renaming": {
                "FUN_08009938": "find_char_in_string_08009938",
                "param_1": "string",
                "param_2": "character",
                "pcVar1": "current_char"
            },
            "calling": [
                "FUN_0800997e"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009954": {
            "entrypoint": "0x08009954",
            "current_name": "copy_string_08009954",
            "code": "\nvoid copyString_08009954(char *destination,char *source,int size)\n\n{\n  char currentCharacter;\n  int remainingSize;\n  char *destPtr;\n  \n  do {\n    destPtr = destination;\n    remainingSize = size;\n    if (remainingSize == 0) {\n      return;\n    }\n    currentCharacter = *source;\n    destination = destPtr + 1;\n    *destPtr = currentCharacter;\n    source = source + 1;\n    size = remainingSize + -1;\n  } while (currentCharacter != '\\0');\n  for (; destination != destPtr + remainingSize; destination = destination + 1) {\n    *destination = '\\0';\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009954": "copy_string_08009954",
                "param_1": "destination",
                "param_2": "source",
                "param_3": "size",
                "cVar1": "currentCharacter",
                "iVar2": "remainingSize",
                "pcVar3": "destPtr"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800997e": {
            "entrypoint": "0x0800997e",
            "current_name": "find_last_match_index_0800997e",
            "code": "\nint find_last_match_index_0800997e(int array,int length,undefined4 param_3,undefined4 param_4)\n\n{\n  int current_index;\n  int last_match_index;\n  \n  if (length != 0) {\n    last_match_index = 0;\n    while (current_index = FUN_08009938(array,length,param_3,array,param_4), current_index != 0) {\n      array = current_index + 1;\n      last_match_index = current_index;\n    }\n    return last_match_index;\n  }\n  last_match_index = FUN_08009938();\n  return last_match_index;\n}\n\n",
            "renaming": {
                "FUN_0800997e": "find_last_match_index_0800997e",
                "param_1": "array",
                "param_2": "length",
                "iVar1": "current_index",
                "iVar2": "last_match_index"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [
                "FUN_08009938"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080099a4": {
            "entrypoint": "0x080099a4",
            "current_name": "find_substring_080099a4",
            "code": "\nchar * find_substring_080099a4(char *source_string,char *search_string)\n\n{\n  char *current_source_char;\n  char *current_search_char;\n  char *next_search_char;\n  \n  if (*source_string == '\\0') {\n    if (*search_string != '\\0') {\n      source_string = (char *)0x0;\n    }\n    return source_string;\n  }\n  do {\n    current_source_char = source_string;\n    if (*current_source_char == '\\0') {\n      return (char *)0x0;\n    }\n    next_search_char = search_string + -1;\n    current_search_char = current_source_char + -1;\n    do {\n      next_search_char = next_search_char + 1;\n      if (*next_search_char == '\\0') {\n        return current_source_char;\n      }\n      current_search_char = current_search_char + 1;\n      source_string = current_source_char + 1;\n    } while (*current_search_char == *next_search_char);\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080099a4": "find_substring_080099a4",
                "param_1": "source_string",
                "param_2": "search_string",
                "pcVar1": "current_source_char",
                "pcVar2": "current_search_char",
                "pcVar3": "next_search_char"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009a80": {
            "entrypoint": "0x08009a80",
            "current_name": "update_data_08009a80",
            "code": "\nuint updateData_08009a80(undefined4 *outputData,undefined4 *inputData)\n\n{\n  int globalVariable;\n  uint result;\n  ushort inputValue;\n  \n  globalVariable = DAT_20000090;\n  if ((DAT_20000090 != 0) && (*(int *)(DAT_20000090 + 0x18) == 0)) {\n    FUN_08009d50(DAT_20000090);\n  }\n  if (inputData == &DAT_0800aba4) {\n    inputData = *(undefined4 **)(globalVariable + 4);\n  }\n  else if (inputData == (undefined4 *)&DAT_0800abc4) {\n    inputData = *(undefined4 **)(globalVariable + 8);\n  }\n  else if (inputData == (undefined4 *)&DAT_0800ab84) {\n    inputData = *(undefined4 **)(globalVariable + 0xc);\n  }\n  inputValue = *(ushort *)(inputData + 3);\n  result = (uint)inputValue;\n  if (-1 < (int)(result << 0x1c)) {\n    if (-1 < (int)(result << 0x1b)) {\n      *outputData = 9;\n      goto LAB_08009ab0;\n    }\n    if ((int)(result << 0x1d) < 0) {\n      if ((undefined4 *)inputData[0xd] != (undefined4 *)0x0) {\n        if ((undefined4 *)inputData[0xd] != inputData + 0x11) {\n          FUN_080091d8(outputData);\n        }\n        inputData[0xd] = 0;\n      }\n      *(ushort *)(inputData + 3) = *(ushort *)(inputData + 3) & 0xffdb;\n      inputData[1] = 0;\n      *inputData = inputData[4];\n    }\n    *(ushort *)(inputData + 3) = *(ushort *)(inputData + 3) | 8;\n  }\n  if ((inputData[4] == 0) && ((*(ushort *)(inputData + 3) & 0x280) != 0x200)) {\n    FUN_08009eac(outputData,inputData);\n  }\n  inputValue = *(ushort *)(inputData + 3);\n  result = inputValue & 1;\n  if ((inputValue & 1) == 0) {\n    if (-1 < (int)((uint)inputValue << 0x1e)) {\n      result = inputData[5];\n    }\n    inputData[2] = result;\n  }\n  else {\n    inputData[2] = 0;\n    inputData[6] = -inputData[5];\n  }\n  if (inputData[4] == 0) {\n    inputValue = *(ushort *)(inputData + 3);\n    result = (int)(short)inputValue & 0x80;\n    if (result != 0) {\nLAB_08009ab0:\n      *(ushort *)(inputData + 3) = inputValue | 0x40;\n      return 0xffffffff;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009a80": "update_data_08009a80",
                "param_1": "outputData",
                "param_2": "inputData",
                "iVar1": "globalVariable",
                "uVar2": "result",
                "uVar3": "inputValue"
            },
            "calling": [
                "FUN_0800937c",
                "FUN_0800932c"
            ],
            "called": [
                "FUN_080091d8",
                "FUN_08009eac",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009b5c": {
            "entrypoint": "0x08009b5c",
            "current_name": "validate_and_process_data_08009b5c",
            "code": "\nvoid validate_and_process_data_08009b5c(void)\n\n{\n  uint *uint_ptr;\n  int value1;\n  int *data_ptr;\n  int *pvalue4;\n  uint flags_as_uint;\n  ushort flags;\n  int value2;\n  code *pcVar8;\n  int value3;\n  uint uVar10;\n  code *jump_table;\n  bool is_valid;\n  undefined8 result;\n  \n  FUN_08009fe8(6);\n  jump_table = (code *)0x8009b6b;\n  result = FUN_08008868(1);\n  data_ptr = (int *)((ulonglong)result >> 0x20);\n  uint_ptr = (uint *)result;\n  flags = *(ushort *)(data_ptr + 3);\n  flags_as_uint = (uint)flags;\n  if ((int)(flags_as_uint << 0x1c) < 0) {\n    value1 = data_ptr[4];\n    if (value1 != 0) {\n      value2 = flags_as_uint << 0x1e;\n      is_valid = value2 != 0;\n      if (is_valid) {\n        value2 = 0;\n      }\n      value3 = *data_ptr;\n      if (!is_valid) {\n        value2 = data_ptr[5];\n      }\n      *data_ptr = value1;\n      data_ptr[2] = value2;\n      for (value3 = value3 - value1; 0 < value3; value3 = value3 - value2) {\n        value2 = (*(code *)data_ptr[10])(uint_ptr,data_ptr[8],value1,value3);\n        if (value2 < 1) {\n          flags = *(ushort *)(data_ptr + 3);\n          goto LAB_08009c62;\n        }\n        value1 = value1 + value2;\n      }\n    }\n  }\n  else if (((0 < data_ptr[1]) || (0 < data_ptr[0x10])) &&\n          (pcVar8 = (code *)data_ptr[0xb], pcVar8 != (code *)0x0)) {\n    uVar10 = *uint_ptr;\n    *uint_ptr = 0;\n    if ((flags & 0x1000) == 0) {\n      value1 = (*pcVar8)(uint_ptr,data_ptr[8],flags_as_uint & 0x1000,1);\n      if ((value1 == -1) && (flags_as_uint = *uint_ptr, flags_as_uint != 0)) {\n        if ((flags_as_uint != 0x1d) && (flags_as_uint != 0x16)) {\n          *(ushort *)(data_ptr + 3) = *(ushort *)(data_ptr + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c2c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          (*jump_table)();\n          return;\n        }\n        *uint_ptr = uVar10;\n        goto LAB_08009b86;\n      }\n    }\n    else {\n      value1 = data_ptr[0x15];\n    }\n    if (((int)((uint)*(ushort *)(data_ptr + 3) << 0x1d) < 0) &&\n       (value1 = value1 - data_ptr[1], data_ptr[0xd] != 0)) {\n      value1 = value1 - data_ptr[0x10];\n    }\n    value1 = (*(code *)data_ptr[0xb])(uint_ptr,data_ptr[8],value1,0);\n    flags = *(ushort *)(data_ptr + 3);\n    if ((value1 == -1) &&\n       ((0x1d < *uint_ptr || (-1 < (int)((0x20400001U >> (*uint_ptr & 0xff)) << 0x1f))))) {\nLAB_08009c62:\n      *(ushort *)(data_ptr + 3) = flags | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c6c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jump_table)(0xffffffff);\n      return;\n    }\n    data_ptr[1] = 0;\n    *data_ptr = data_ptr[4];\n    if (((int)((uint)flags << 0x13) < 0) && ((value1 != -1 || (*uint_ptr == 0)))) {\n      data_ptr[0x15] = value1;\n    }\n    pvalue4 = (int *)data_ptr[0xd];\n    *uint_ptr = uVar10;\n    if (pvalue4 != (int *)0x0) {\n      if (pvalue4 != data_ptr + 0x11) {\n        FUN_080091d8(uint_ptr);\n      }\n      data_ptr[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08009c02. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jump_table)();\n      return;\n    }\n  }\nLAB_08009b86:\n                    /* WARNING: Could not recover jumptable at 0x08009b88. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_table)(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009b5c": "validate_and_process_data_08009b5c",
                "uVar12": "result",
                "piVar3": "data_ptr",
                "puVar1": "uint_ptr",
                "uVar6": "flags",
                "uVar5": "flags_as_uint",
                "iVar2": "value1",
                "iVar7": "value2",
                "iVar9": "value3",
                "iVar4": "value4",
                "UNRECOVERED_JUMPTABLE_00": "jump_table",
                "bVar11": "is_valid"
            },
            "calling": [
                "FUN_080090cc",
                "FUN_0800a18c"
            ],
            "called": [
                "FUN_080091d8",
                "FUN_08008868",
                "FUN_08009fe8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009c7c": {
            "entrypoint": "0x08009c7c",
            "current_name": "process_data_08009c7c",
            "code": "\nundefined4 processData_08009c7c(uint *dataBuffer,int *commandBuffer)\n\n{\n  undefined4 returnValue;\n  int commandLength;\n  int *tempPointer;\n  uint tempValue1;\n  ushort tempValue2;\n  int tempValue3;\n  undefined4 unaffected_r4;\n  undefined4 unaffected_r5;\n  code *functionPointer;\n  int tempValue4;\n  uint tempValue5;\n  code *unrecoveredJumpTable;\n  bool bVar10;\n  \n  if (commandBuffer[4] != 0) {\n    if ((dataBuffer != (uint *)0x0) && (dataBuffer[6] == 0)) {\n      FUN_08009d50();\n    }\n    if (commandBuffer == &DAT_0800aba4) {\n      commandBuffer = (int *)dataBuffer[1];\n    }\n    else if (commandBuffer == (int *)&DAT_0800abc4) {\n      commandBuffer = (int *)dataBuffer[2];\n    }\n    else if (commandBuffer == (int *)&DAT_0800ab84) {\n      commandBuffer = (int *)dataBuffer[3];\n    }\n    if (*(short *)(commandBuffer + 3) != 0) {\n      tempValue2 = *(ushort *)(commandBuffer + 3);\n      tempValue1 = (uint)tempValue2;\n      if ((int)(tempValue1 << 0x1c) < 0) {\n        commandLength = commandBuffer[4];\n        if (commandLength != 0) {\n          tempValue3 = tempValue1 << 0x1e;\n          bVar10 = tempValue3 != 0;\n          if (bVar10) {\n            tempValue3 = 0;\n          }\n          tempValue4 = *commandBuffer;\n          if (!bVar10) {\n            tempValue3 = commandBuffer[5];\n          }\n          *commandBuffer = commandLength;\n          commandBuffer[2] = tempValue3;\n          for (tempValue4 = tempValue4 - commandLength; 0 < tempValue4; tempValue4 = tempValue4 - tempValue3) {\n            tempValue3 = (*(code *)commandBuffer[10])(dataBuffer,commandBuffer[8],commandLength,tempValue4,unaffected_r4,unaffected_r5);\n            if (tempValue3 < 1) {\n              tempValue2 = *(ushort *)(commandBuffer + 3);\n              goto LAB_08009c62;\n            }\n            commandLength = commandLength + tempValue3;\n          }\n        }\n      }\n      else if (((0 < commandBuffer[1]) || (0 < commandBuffer[0x10])) &&\n              (functionPointer = (code *)commandBuffer[0xb], functionPointer != (code *)0x0)) {\n        tempValue5 = *dataBuffer;\n        *dataBuffer = 0;\n        if ((tempValue2 & 0x1000) == 0) {\n          commandLength = (*functionPointer)(dataBuffer,commandBuffer[8],tempValue1 & 0x1000,1);\n          if ((commandLength == -1) && (tempValue1 = *dataBuffer, tempValue1 != 0)) {\n            if ((tempValue1 != 0x1d) && (tempValue1 != 0x16)) {\n              *(ushort *)(commandBuffer + 3) = *(ushort *)(commandBuffer + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c2c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n              returnValue = (*unrecoveredJumpTable)();\n              return returnValue;\n            }\n            *dataBuffer = tempValue5;\n            goto LAB_08009b86;\n          }\n        }\n        else {\n          commandLength = commandBuffer[0x15];\n        }\n        if (((int)((uint)*(ushort *)(commandBuffer + 3) << 0x1d) < 0) &&\n           (commandLength = commandLength - commandBuffer[1], commandBuffer[0xd] != 0)) {\n          commandLength = commandLength - commandBuffer[0x10];\n        }\n        commandLength = (*(code *)commandBuffer[0xb])(dataBuffer,commandBuffer[8],commandLength,0);\n        tempValue2 = *(ushort *)(commandBuffer + 3);\n        if ((commandLength == -1) &&\n           ((0x1d < *dataBuffer || (-1 < (int)((0x20400001U >> (*dataBuffer & 0xff)) << 0x1f))))) {\nLAB_08009c62:\n          *(ushort *)(commandBuffer + 3) = tempValue2 | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c6c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          returnValue = (*unrecoveredJumpTable)(0xffffffff);\n          return returnValue;\n        }\n        commandBuffer[1] = 0;\n        *commandBuffer = commandBuffer[4];\n        if (((int)((uint)tempValue2 << 0x13) < 0) && ((commandLength != -1 || (*dataBuffer == 0)))) {\n          commandBuffer[0x15] = commandLength;\n        }\n        tempPointer = (int *)commandBuffer[0xd];\n        *dataBuffer = tempValue5;\n        if (tempPointer != (int *)0x0) {\n          if (tempPointer != commandBuffer + 0x11) {\n            FUN_080091d8(dataBuffer);\n          }\n          commandBuffer[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08009c02. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          returnValue = (*unrecoveredJumpTable)();\n          return returnValue;\n        }\n      }\nLAB_08009b86:\n                    /* WARNING: Could not recover jumptable at 0x08009b88. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      returnValue = (*unrecoveredJumpTable)(0);\n      return returnValue;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08009c7c": "process_data_08009c7c",
                "param_1": "dataBuffer",
                "param_2": "commandBuffer",
                "uVar1": "returnValue",
                "iVar2": "commandLength",
                "piVar3": "tempPointer",
                "uVar4": "tempValue1",
                "uVar5": "tempValue2",
                "iVar6": "tempValue3",
                "unaff_r4": "unaffected_r4",
                "unaff_r5": "unaffected_r5",
                "pcVar7": "functionPointer",
                "iVar8": "tempValue4",
                "uVar9": "tempValue5",
                "UNRECOVERED_JUMPTABLE_00": "unrecoveredJumpTable"
            },
            "calling": [
                "FUN_0800932c"
            ],
            "called": [
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009cdc": {
            "entrypoint": "0x08009cdc",
            "current_name": "initialize_struct_08009cdc",
            "code": "\nvoid initializeStruct_08009cdc(undefined4 *structPtr,undefined2 value1,undefined2 value2)\n\n{\n  *structPtr = 0;\n  structPtr[1] = 0;\n  structPtr[2] = 0;\n  *(undefined2 *)(structPtr + 3) = value1;\n  structPtr[0x19] = 0;\n  *(undefined2 *)((int)structPtr + 0xe) = value2;\n  structPtr[4] = 0;\n  structPtr[5] = 0;\n  structPtr[6] = 0;\n  FUN_080091c6(structPtr + 0x17,0,8);\n  structPtr[8] = structPtr;\n  structPtr[9] = 0x800a021;\n  structPtr[10] = 0x800a043;\n  structPtr[0xb] = 0x800a07b;\n  structPtr[0xc] = &LAB_0800a09e_1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009cdc": "initialize_struct_08009cdc",
                "param_1": "structPtr",
                "param_2": "value1",
                "param_3": "value2"
            },
            "calling": [
                "FUN_08009d50"
            ],
            "called": [
                "FUN_080091c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009d24": {
            "entrypoint": "0x08009d24",
            "current_name": "initialize_data_structure_08009d24",
            "code": "\nundefined4 * initializeDataStructure_08009d24(undefined4 inputData,int count)\n\n{\n  undefined4 *dataPointer;\n  int offset;\n  \n  offset = (count + -1) * 0x68;\n  dataPointer = (undefined4 *)FUN_08009270(inputData,offset + 0x74);\n  if (dataPointer != (undefined4 *)0x0) {\n    *dataPointer = 0;\n    dataPointer[1] = count;\n    dataPointer[2] = dataPointer + 3;\n    FUN_080091c6(dataPointer + 3,0,offset + 0x68);\n  }\n  return dataPointer;\n}\n\n",
            "renaming": {
                "FUN_08009d24": "initialize_data_structure_08009d24",
                "param_1": "inputData",
                "param_2": "count",
                "puVar1": "dataPointer",
                "iVar2": "offset"
            },
            "calling": [
                "FUN_08009db0"
            ],
            "called": [
                "FUN_080091c6",
                "FUN_08009270"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009d50": {
            "entrypoint": "0x08009d50",
            "current_name": "initialize_data_08009d50",
            "code": "\nvoid initializeData_08009d50(undefined4 *data)\n\n{\n  undefined4 result;\n  undefined4 *tempPtr;\n  \n  if (data[6] == 0) {\n    data[0x12] = 0;\n    data[0x13] = 0;\n    data[0x14] = 0;\n    tempPtr = &DAT_20000094;\n    data[10] = &LAB_08009cd0_1;\n    if (data == &DAT_20000094) {\n      tempPtr = (undefined4 *)0x1;\n    }\n    if (data == &DAT_20000094) {\n      data[6] = tempPtr;\n    }\n    result = FUN_08009db0();\n    data[1] = result;\n    result = FUN_08009db0(data);\n    data[2] = result;\n    result = FUN_08009db0(data);\n    data[3] = result;\n    FUN_08009cdc(data[1],4,0);\n    FUN_08009cdc(data[2],9,1);\n    FUN_08009cdc(data[3],0x12,2);\n    data[6] = 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009d50": "initialize_data_08009d50",
                "param_1": "data",
                "uVar1": "result",
                "puVar2": "tempPtr"
            },
            "calling": [
                "FUN_08009c7c",
                "FUN_080098d8",
                "FUN_0800937c",
                "FUN_0800932c",
                "FUN_08009db0",
                "FUN_08009a80"
            ],
            "called": [
                "FUN_08009cdc",
                "FUN_08009db0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009db0": {
            "entrypoint": "0x08009db0",
            "current_name": "initialize_data_structures_08009db0",
            "code": "\nint * initializeDataStructures_08009db0(undefined4 *ptrError,undefined4 val2,undefined4 val3,undefined4 val4)\n\n{\n  int *currentElement;\n  int *currentArray;\n  int **ppArrayOfArrays;\n  \n  if (DAT_200000ac == 0) {\n    FUN_08009d50(&DAT_20000094);\n  }\n  ppArrayOfArrays = (int **)&DAT_200000dc;\n  do {\n    currentArray = ppArrayOfArrays[2];\n    currentElement = ppArrayOfArrays[1];\n    while (currentElement = (int *)((int)currentElement + -1), -1 < (int)currentElement) {\n      if (*(short *)(currentArray + 3) == 0) {\n        *(undefined2 *)((int)currentArray + 0xe) = 0xffff;\n        currentArray[0x19] = 0;\n        *(undefined2 *)(currentArray + 3) = 1;\n        *currentArray = 0;\n        currentArray[2] = 0;\n        currentArray[1] = 0;\n        currentArray[4] = 0;\n        currentArray[5] = 0;\n        currentArray[6] = 0;\n        FUN_080091c6(currentArray + 0x17,0,8,1,val4);\n        currentArray[0xd] = 0;\n        currentArray[0xe] = 0;\n        currentArray[0x12] = 0;\n        currentArray[0x13] = 0;\n        return currentArray;\n      }\n      currentArray = currentArray + 0x1a;\n    }\n    if (*ppArrayOfArrays == (int *)0x0) {\n      currentElement = (int *)FUN_08009d24(ptrError,4);\n      *ppArrayOfArrays = currentElement;\n      if (currentElement == (int *)0x0) {\n        *ptrError = 0xc;\n        return (int *)0x0;\n      }\n    }\n    ppArrayOfArrays = (int **)*ppArrayOfArrays;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08009db0": "initialize_data_structures_08009db0",
                "param_1": "ptrError",
                "param_2": "val2",
                "param_3": "val3",
                "param_4": "val4",
                "piVar1": "currentElement",
                "piVar2": "currentArray",
                "ppiVar3": "ppArrayOfArrays"
            },
            "calling": [
                "FUN_08009d50"
            ],
            "called": [
                "FUN_080091c6",
                "FUN_08009d24",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009e64": {
            "entrypoint": "0x08009e64",
            "current_name": "check_file_permissions_08009e64",
            "code": "\nundefined4 checkFilePermissions_08009e64(undefined4 param1,int param2,undefined4 *outputFlags,uint *outputResult)\n\n{\n  int result;\n  undefined4 flags;\n  undefined localBuffer [4];\n  uint filePermissions;\n  \n  if ((*(short *)(param2 + 0xe) < 0) ||\n     (result = FUN_0800a0ec(param1,(int)*(short *)(param2 + 0xe),localBuffer), result < 0)) {\n    *outputResult = 0;\n    if ((int)((uint)*(ushort *)(param2 + 0xc) << 0x18) < 0) {\n      flags = 0x40;\n      goto LAB_08009ea4;\n    }\n  }\n  else {\n    *outputResult = (uint)((filePermissions & 0xf000) == 0x2000);\n  }\n  flags = 0x400;\nLAB_08009ea4:\n  *outputFlags = flags;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08009e64": "check_file_permissions_08009e64",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "outputFlags",
                "param_4": "outputResult",
                "iVar1": "result",
                "uVar2": "flags",
                "auStack_4c": "localBuffer",
                "local_48": "filePermissions"
            },
            "calling": [
                "FUN_08009eac"
            ],
            "called": [
                "FUN_0800a0ec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009eac": {
            "entrypoint": "0x08009eac",
            "current_name": "process_data_08009eac",
            "code": "\nvoid processData_08009eac(int inputValue,int *outputArray)\n\n{\n  ushort result1;\n  int result2;\n  int tempValue1;\n  int *tempValue2;\n  \n  if (-1 < (int)((uint)*(ushort *)(outputArray + 3) << 0x1e)) {\n    tempValue1 = inputValue;\n    tempValue2 = outputArray;\n    result1 = FUN_08009e64(inputValue,outputArray,&tempValue1,&tempValue2);\n    result2 = FUN_08009270(inputValue,tempValue1);\n    if (result2 != 0) {\n      *(undefined **)(inputValue + 0x28) = &LAB_08009cd0_1;\n      *outputArray = result2;\n      *(ushort *)(outputArray + 3) = *(ushort *)(outputArray + 3) | 0x80;\n      outputArray[4] = result2;\n      outputArray[5] = tempValue1;\n      if ((tempValue2 != (int *)0x0) &&\n         (result2 = FUN_0800a110(inputValue,(int)*(short *)((int)outputArray + 0xe)), result2 != 0)) {\n        *(ushort *)(outputArray + 3) = *(ushort *)(outputArray + 3) & 0xfffc | 1;\n      }\n      *(ushort *)(outputArray + 3) = result1 | *(ushort *)(outputArray + 3);\n      return;\n    }\n    if ((int)(short)*(ushort *)(outputArray + 3) << 0x16 < 0) {\n      return;\n    }\n    *(ushort *)(outputArray + 3) = *(ushort *)(outputArray + 3) & 0xfffc | 2;\n  }\n  *outputArray = (int)outputArray + 0x47;\n  outputArray[4] = (int)outputArray + 0x47;\n  outputArray[5] = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009eac": "process_data_08009eac",
                "param_1": "inputValue",
                "param_2": "outputArray",
                "uVar1": "result1",
                "iVar2": "result2",
                "local_18": "tempValue1",
                "local_14": "tempValue2"
            },
            "calling": [
                "FUN_08009a80"
            ],
            "called": [
                "FUN_08009270",
                "FUN_0800a110",
                "FUN_08009e64"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009f2c": {
            "entrypoint": "0x08009f2c",
            "current_name": "find_character_08009f2c",
            "code": "\nchar * find_character_08009f2c(char *input_string,char target_character,int string_length)\n\n{\n  char *current_char_ptr;\n  char *next_char_ptr;\n  \n  current_char_ptr = input_string;\n  do {\n    next_char_ptr = current_char_ptr;\n    if (next_char_ptr == input_string + string_length) {\n      return (char *)0x0;\n    }\n    current_char_ptr = next_char_ptr + 1;\n  } while (*next_char_ptr != target_character);\n  return next_char_ptr;\n}\n\n",
            "renaming": {
                "FUN_08009f2c": "find_character_08009f2c",
                "param_1": "input_string",
                "param_2": "target_character",
                "param_3": "string_length",
                "pcVar1": "current_char_ptr",
                "pcVar2": "next_char_ptr"
            },
            "calling": [
                "FUN_0800937c",
                "FUN_08009698"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009f48": {
            "entrypoint": "0x08009f48",
            "current_name": "FUNC_08009f48",
            "code": "\nvoid FUNC_08009f48(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009f48": "FUNC_08009f48"
            },
            "calling": [
                "FUN_080091d8",
                "FUN_08009270"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08009f4a": {
            "entrypoint": "0x08009f4a",
            "current_name": "FUNC_08009f4a",
            "code": "\nvoid FUNC_08009f4a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009f4a": "FUNC_08009f4a"
            },
            "calling": [
                "FUN_080091d8",
                "FUN_08009270"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08009fe8": {
            "entrypoint": "0x08009fe8",
            "current_name": "execute_function_08009fe8",
            "code": "\nint executeFunction_08009fe8(uint functionIndex)\n\n{\n  int *dataPointer1;\n  undefined4 thunkReturnValue;\n  int dataValue;\n  code *functionPointer;\n  undefined4 dataPointer2;\n  undefined4 dataPointer3;\n  undefined4 returnAddress;\n  undefined4 *dataPointer4;\n  \n  dataPointer1 = DAT_20000090;\n  dataPointer4 = &DAT_20000090;\n  if (0x1f < functionIndex) {\n    *DAT_20000090 = 0x16;\n    return -1;\n  }\n  dataValue = DAT_20000090[0x11];\n  if ((dataValue != 0) && (functionPointer = *(code **)(dataValue + functionIndex * 4), functionPointer != (code *)0x0)) {\n    if (functionPointer != (code *)0x1) {\n      if (functionPointer == (code *)0xffffffff) {\n        *DAT_20000090 = 0x16;\n        return 1;\n      }\n      *(undefined4 *)(dataValue + functionIndex * 4) = 0;\n      (*functionPointer)(functionIndex);\n    }\n    return 0;\n  }\n  thunkReturnValue = thunk_FUN_0800887c(DAT_20000090);\n  DAT_20000a38 = 0;\n  dataValue = FUN_0800886c(thunkReturnValue,functionIndex,functionIndex,0,dataPointer4,dataPointer2,dataPointer3,returnAddress);\n  if ((dataValue == -1) && (DAT_20000a38 != 0)) {\n    *dataPointer1 = DAT_20000a38;\n  }\n  return dataValue;\n}\n\n",
            "renaming": {
                "FUN_08009fe8": "execute_function_08009fe8",
                "param_1": "functionIndex",
                "piVar1": "dataPointer1",
                "uVar2": "thunkReturnValue",
                "iVar3": "dataValue",
                "pcVar4": "functionPointer",
                "unaff_r4": "dataPointer2",
                "unaff_r5": "dataPointer3",
                "in_lr": "returnAddress",
                "puVar5": "dataPointer4"
            },
            "calling": [
                "FUN_08009b5c"
            ],
            "called": [
                "thunk_FUN_0800887c",
                "FUN_0800886c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_0800887c": {
            "entrypoint": "0x0800a01c",
            "current_name": "get_return_value_thunk_0800887c",
            "code": "\nundefined4 getReturnValue_thunk_0800887c(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "thunk_FUN_0800887c": "get_return_value_thunk_0800887c"
            },
            "calling": [
                "FUN_08009fe8"
            ],
            "called": [
                "FUN_0800887c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a020": {
            "entrypoint": "0x0800a020",
            "current_name": "update_value_0800a020",
            "code": "\nvoid updateValue_0800a020(undefined4 data,int ptr)\n\n{\n  int result;\n  uint newValue;\n  bool isPositive;\n  \n  result = FUN_0800a168(data,(int)*(short *)(ptr + 0xe));\n  isPositive = -1 < result;\n  if (isPositive) {\n    newValue = *(int *)(ptr + 0x54) + result;\n  }\n  else {\n    newValue = *(ushort *)(ptr + 0xc) & 0xffffefff;\n  }\n  if (isPositive) {\n    *(uint *)(ptr + 0x54) = newValue;\n  }\n  if (!isPositive) {\n    *(short *)(ptr + 0xc) = (short)newValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a020": "update_value_0800a020",
                "param_1": "data",
                "param_2": "ptr",
                "iVar1": "result",
                "uVar2": "newValue",
                "bVar3": "isPositive"
            },
            "calling": [],
            "called": [
                "FUN_0800a168"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a042": {
            "entrypoint": "0x0800a042",
            "current_name": "process_data_0800a042",
            "code": "\nvoid processData_0800a042(int *outputArray,int inputArray,undefined4 paramA,undefined4 paramB)\n\n{\n  int returnValue;\n  undefined4 unusedVar1;\n  undefined4 unusedVar2;\n  undefined4 unusedVar3;\n  \n  if ((int)((uint)*(ushort *)(inputArray + 0xc) << 0x17) < 0) {\n    FUN_0800a130(outputArray,(int)*(short *)(inputArray + 0xe),0,2);\n  }\n  *(ushort *)(inputArray + 0xc) = *(ushort *)(inputArray + 0xc) & 0xefff;\n  DAT_20000a38 = 0;\n  returnValue = FUN_0800885c((int)*(short *)(inputArray + 0xe),paramA,paramB,paramB,paramB,unusedVar1,\n                       unusedVar2,unusedVar3);\n  if ((returnValue == -1) && (DAT_20000a38 != 0)) {\n    *outputArray = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a042": "process_data_0800a042",
                "param_1": "outputArray",
                "param_2": "inputArray",
                "param_3": "paramA",
                "param_4": "paramB",
                "iVar1": "returnValue",
                "unaff_r4": "unusedVar1",
                "unaff_r5": "unusedVar2",
                "in_lr": "unusedVar3"
            },
            "calling": [],
            "called": [
                "FUN_0800885c",
                "FUN_0800a130"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a07a": {
            "entrypoint": "0x0800a07a",
            "current_name": "update_data_0800a07a",
            "code": "\nvoid updateData_0800a07a(undefined4 data,int ptr)\n\n{\n  int result;\n  ushort updatedValue;\n  bool isError;\n  \n  result = FUN_0800a130(data,(int)*(short *)(ptr + 0xe));\n  isError = result == -1;\n  if (isError) {\n    updatedValue = *(ushort *)(ptr + 0xc) & 0xefff;\n  }\n  else {\n    *(int *)(ptr + 0x54) = result;\n    updatedValue = *(ushort *)(ptr + 0xc) | 0x1000;\n  }\n  if (isError) {\n    *(ushort *)(ptr + 0xc) = updatedValue;\n  }\n  if (!isError) {\n    *(ushort *)(ptr + 0xc) = updatedValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a07a": "update_data_0800a07a",
                "param_1": "data",
                "param_2": "ptr",
                "iVar1": "result",
                "uVar2": "updatedValue",
                "bVar3": "isError"
            },
            "calling": [],
            "called": [
                "FUN_0800a130"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a0ec": {
            "entrypoint": "0x0800a0ec",
            "current_name": "process_and_store_result_0800a0ec",
            "code": "\nvoid processAndStoreResult_0800a0ec(int *resultPointer,undefined4 paramA,undefined4 paramB,undefined4 paramC)\n\n{\n  int returnCode;\n  \n  DAT_20000a38 = 0;\n  returnCode = FUN_08008846(paramA,paramB,paramB,0,paramC);\n  if ((returnCode == -1) && (DAT_20000a38 != 0)) {\n    *resultPointer = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a0ec": "process_and_store_result_0800a0ec",
                "param_1": "resultPointer",
                "param_2": "paramA",
                "param_3": "paramB",
                "param_4": "paramC",
                "iVar1": "returnCode"
            },
            "calling": [
                "FUN_08009e64"
            ],
            "called": [
                "FUN_08008846"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a110": {
            "entrypoint": "0x0800a110",
            "current_name": "check_and_assign_value_0800a110",
            "code": "\nvoid checkAndAssignValue_0800a110(int *outputPointer,undefined4 inputValue)\n\n{\n  int result;\n  \n  DAT_20000a38 = 0;\n  result = FUN_08008850(inputValue);\n  if ((result == -1) && (DAT_20000a38 != 0)) {\n    *outputPointer = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a110": "check_and_assign_value_0800a110",
                "param_1": "outputPointer",
                "param_2": "inputValue",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08009eac"
            ],
            "called": [
                "FUN_08008850"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a130": {
            "entrypoint": "0x0800a130",
            "current_name": "update_param_if_error_0800a130",
            "code": "\nvoid updateParamIfError_0800a130(int *result,undefined4 value1,undefined4 value2,undefined4 value3)\n\n{\n  int errorCode;\n  \n  DAT_20000a38 = 0;\n  errorCode = FUN_08008854(value1,value2,value3,value3,value3);\n  if ((errorCode == -1) && (DAT_20000a38 != 0)) {\n    *result = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a130": "update_param_if_error_0800a130",
                "param_1": "result",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "iVar1": "errorCode"
            },
            "calling": [
                "FUN_0800a07a",
                "FUN_0800a042"
            ],
            "called": [
                "FUN_08008854"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a154": {
            "entrypoint": "0x0800a154",
            "current_name": "calculate_result_0800a154",
            "code": "\nint calculateResult_0800a154(undefined4 param1,int input)\n\n{\n  int result;\n  \n  result = *(int *)(input + -4) + -4;\n  if (*(int *)(input + -4) < 0) {\n    result = result + *(int *)(input + result);\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_0800a154": "calculate_result_0800a154",
                "param_1": "param1",
                "param_2": "input",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08009908"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a168": {
            "entrypoint": "0x0800a168",
            "current_name": "set_return_value_if_error_0800a168",
            "code": "\nvoid setReturnValueIfError_0800a168(int *outputPointer,undefined4 inputParameter1,undefined4 inputParameter2,undefined4 inputParameter3)\n\n{\n  int returnValue;\n  \n  DAT_20000a38 = 0;\n  returnValue = FUN_08008858(inputParameter1,inputParameter2,inputParameter3,inputParameter3,inputParameter3);\n  if ((returnValue == -1) && (DAT_20000a38 != 0)) {\n    *outputPointer = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a168": "set_return_value_if_error_0800a168",
                "param_1": "outputPointer",
                "param_2": "inputParameter1",
                "param_3": "inputParameter2",
                "param_4": "inputParameter3",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_0800a020"
            ],
            "called": [
                "FUN_08008858"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a18c": {
            "entrypoint": "0x0800a18c",
            "current_name": "initialize_variables_0800a18c",
            "code": "\nvoid initializeVariables_0800a18c(void)\n\n{\n  code *jumptable;\n  \n  jumptable = initializeVariables_0800a18c;\n  FUN_08009b5c();\n  if (-1 < DAT_200009c0 << 0x1f) {\n    DAT_200009c0 = 1;\n  }\n  if (-1 < DAT_200009bc << 0x1f) {\n    DAT_200009bc = 1;\n  }\n  if (-1 < DAT_200009b8 << 0x1f) {\n    DAT_200009b8 = 1;\n  }\n  if (-1 < DAT_200009b4 << 0x1f) {\n    DAT_200009b4 = 1;\n  }\n  if (-1 < DAT_200009b0 << 0x1f) {\n    DAT_200009b0 = 1;\n  }\n  if (-1 < DAT_200009ac << 0x1f) {\n    DAT_200009ac = 1;\n  }\n  if (-1 < DAT_200009a8 << 0x1f) {\n    DAT_200009a8 = 1;\n  }\n  if (-1 < DAT_200009a4 << 0x1f) {\n    DAT_200009a4 = 1;\n  }\n  if (-1 < DAT_200009a0 << 0x1f) {\n    DAT_200009a0 = 1;\n  }\n  if (-1 < DAT_2000099c << 0x1f) {\n    DAT_2000099c = 1;\n  }\n  if (-1 < DAT_20000998 << 0x1f) {\n    DAT_20000998 = 1;\n  }\n  if (-1 < DAT_20000994 << 0x1f) {\n    DAT_20000994 = 1;\n  }\n                    /* WARNING: Could not recover jumptable at 0x0800a224. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumptable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a18c": "initialize_variables_0800a18c",
                "UNRECOVERED_JUMPTABLE": "jumptable"
            },
            "calling": [
                "FUN_08009084"
            ],
            "called": [
                "FUN_08009b5c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a424": {
            "entrypoint": "0x0800a424",
            "current_name": "FUNC_0800a424",
            "code": "\nvoid FUNC_0800a424(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a424": "FUNC_0800a424"
            },
            "calling": [
                "FUN_08009148",
                "FUN_0800010c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800a430": {
            "entrypoint": "0x0800a430",
            "current_name": "FUNC_0800a430",
            "code": "\nvoid FUNC_0800a430(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a430": "FUNC_0800a430"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        }
    },
    "used_tokens": 211356,
    "layers": [
        [
            "FUN_0800010c",
            "FUN_08000178",
            "FUN_08000188",
            "FUN_0800018c",
            "FUN_08000214",
            "FUN_0800021a",
            "FUN_08000488",
            "FUN_080004d4",
            "FUN_08000500",
            "FUN_08000588",
            "FUN_080005e0",
            "FUN_080005f8",
            "FUN_08000a64",
            "FUN_08000aec",
            "FUN_08000be8",
            "FUN_08000ef8",
            "FUN_08001b48",
            "FUN_08001bf8",
            "FUN_08001c08",
            "FUN_08001c18",
            "FUN_08001cd0",
            "FUN_080022f8",
            "FUN_08002400",
            "FUN_0800242c",
            "FUN_08002578",
            "FUN_08002580",
            "FUN_080025ac",
            "FUN_08002634",
            "FUN_08002644",
            "FUN_0800267c",
            "FUN_080026b0",
            "FUN_080026f8",
            "FUN_0800270c",
            "FUN_08002720",
            "FUN_080027f0",
            "FUN_0800288c",
            "FUN_0800291c",
            "FUN_08002948",
            "FUN_08002968",
            "FUN_08002a1c",
            "FUN_08002a26",
            "FUN_08002a30",
            "FUN_08002a58",
            "FUN_08002ac0",
            "FUN_08002acc",
            "FUN_08002b68",
            "FUN_08002c00",
            "FUN_08002c14",
            "FUN_08002c1e",
            "FUN_08002c2c",
            "FUN_08002ce0",
            "FUN_08002dbc",
            "FUN_08002ddc",
            "FUN_08002df6",
            "FUN_08002e26",
            "FUN_08002e44",
            "FUN_08002ec4",
            "FUN_08002ed2",
            "FUN_08002ef2",
            "FUN_08002efe",
            "FUN_08002f0a",
            "FUN_08002f14",
            "FUN_08002f1e",
            "FUN_08002f2c",
            "FUN_08002f84",
            "FUN_08002f94",
            "FUN_08002fa0",
            "FUN_08002fa8",
            "FUN_08002fba",
            "FUN_08002fc2",
            "FUN_08002fca",
            "FUN_08003002",
            "FUN_08003048",
            "FUN_0800307a",
            "FUN_08003106",
            "FUN_0800314e",
            "FUN_08003154",
            "FUN_08003158",
            "FUN_0800319e",
            "FUN_080031ce",
            "FUN_0800322c",
            "FUN_0800325a",
            "FUN_080032a2",
            "FUN_080032bc",
            "FUN_08003306",
            "FUN_08003346",
            "FUN_08003350",
            "FUN_08003366",
            "FUN_08003370",
            "FUN_08003376",
            "FUN_080033a8",
            "FUN_080033cc",
            "FUN_0800344a",
            "FUN_08003474",
            "FUN_080035b8",
            "FUN_080036a2",
            "FUN_080036ac",
            "FUN_080036d8",
            "FUN_08003724",
            "FUN_08003748",
            "FUN_08003760",
            "FUN_0800376c",
            "FUN_080038dc",
            "FUN_080038e4",
            "FUN_08003a1c",
            "FUN_08003a20",
            "FUN_08003aa0",
            "FUN_08003b8c",
            "FUN_08003bd8",
            "FUN_08003ce8",
            "FUN_08003de4",
            "FUN_08003e20",
            "FUN_08003f0c",
            "FUN_08003f30",
            "FUN_08003f94",
            "FUN_08003fb0",
            "FUN_08003fd8",
            "FUN_08004004",
            "FUN_08004024",
            "FUN_08004046",
            "FUN_08004050",
            "FUN_080040e8",
            "FUN_080042d4",
            "FUN_080042e2",
            "FUN_080042f0",
            "FUN_0800430c",
            "FUN_08004396",
            "FUN_080043a2",
            "FUN_0800457c",
            "FUN_0800459c",
            "FUN_080045c0",
            "FUN_08004728",
            "FUN_080047f4",
            "FUN_080048c8",
            "FUN_08004954",
            "FUN_080049e0",
            "FUN_08004a24",
            "FUN_08004a76",
            "FUN_08004ac2",
            "FUN_08004aec",
            "FUN_08004b82",
            "FUN_08004ccc",
            "FUN_08004d6c",
            "FUN_08004e3c",
            "FUN_08004f3c",
            "FUN_08005084",
            "FUN_08005188",
            "FUN_080052f0",
            "FUN_0800542a",
            "FUN_08005430",
            "FUN_08005434",
            "FUN_08005460",
            "FUN_08005840",
            "FUN_080058ac",
            "FUN_080058d2",
            "FUN_08005a1c",
            "FUN_08005a28",
            "FUN_08005a48",
            "FUN_08005a68",
            "FUN_08005aa4",
            "FUN_08005bb8",
            "FUN_08005cb4",
            "FUN_08005cec",
            "FUN_08005d48",
            "FUN_08005dac",
            "FUN_08005df4",
            "FUN_08005e2e",
            "FUN_08005e6e",
            "FUN_08005fe8",
            "FUN_08006060",
            "FUN_08006092",
            "FUN_080060c4",
            "FUN_08006128",
            "FUN_08006186",
            "FUN_08006262",
            "FUN_08006280",
            "FUN_080062f4",
            "FUN_08006390",
            "FUN_080063c0",
            "FUN_08006420",
            "FUN_0800643c",
            "FUN_08006460",
            "FUN_080064b0",
            "FUN_080064cc",
            "FUN_08006538",
            "FUN_080066e8",
            "FUN_0800674e",
            "FUN_080067ac",
            "FUN_0800688e",
            "FUN_080068d6",
            "FUN_08006932",
            "FUN_0800694c",
            "FUN_080069ec",
            "FUN_08006b1c",
            "FUN_08006b28",
            "FUN_08006b3e",
            "FUN_08006b5c",
            "FUN_08006b7c",
            "FUN_08006bb8",
            "FUN_08006c60",
            "FUN_08006c7c",
            "FUN_08006ca8",
            "FUN_08006d24",
            "FUN_08006d80",
            "FUN_08006e68",
            "FUN_08007110",
            "FUN_08007118",
            "FUN_080071e4",
            "FUN_0800723c",
            "FUN_08007246",
            "FUN_08007258",
            "FUN_080072d8",
            "FUN_080072f0",
            "FUN_080072fa",
            "FUN_08007306",
            "FUN_08007320",
            "FUN_08007332",
            "FUN_0800734a",
            "FUN_0800735a",
            "FUN_08007376",
            "FUN_0800738a",
            "FUN_080073ae",
            "FUN_080073c0",
            "FUN_080073e8",
            "FUN_080073ec",
            "FUN_08007438",
            "FUN_080074e0",
            "FUN_08007544",
            "FUN_08007594",
            "FUN_080075dc",
            "FUN_08007648",
            "FUN_080076e0",
            "FUN_08007708",
            "FUN_08007710",
            "FUN_08007718",
            "FUN_0800771c",
            "FUN_08007736",
            "FUN_08007744",
            "FUN_0800774a",
            "FUN_08007750",
            "FUN_080077b0",
            "FUN_08007e74",
            "FUN_08007ede",
            "FUN_08007f0e",
            "FUN_08007f78",
            "FUN_08007f7c",
            "FUN_08007f8e",
            "FUN_08007fa0",
            "FUN_08007ff0",
            "FUN_08008020",
            "FUN_08008078",
            "FUN_080084b0",
            "FUN_08008500",
            "FUN_080085b8",
            "FUN_080085dc",
            "FUN_08008600",
            "FUN_0800863c",
            "FUN_08008694",
            "FUN_080086e8",
            "FUN_0800870c",
            "FUN_08008730",
            "FUN_08008804",
            "FUN_08008840",
            "FUN_08008846",
            "FUN_08008850",
            "FUN_08008854",
            "FUN_08008858",
            "FUN_0800885c",
            "FUN_08008868",
            "FUN_0800886c",
            "FUN_0800887c",
            "FUN_08008880",
            "FUN_080088e0",
            "FUN_08008990",
            "FUN_08008a24",
            "FUN_08008a6c",
            "FUN_08008abc",
            "FUN_08008afa",
            "FUN_08008b66",
            "FUN_08008c20",
            "FUN_08008c44",
            "FUN_08008d00",
            "FUN_08008d18",
            "FUN_08008d30",
            "FUN_08008d8c",
            "FUN_08008df8",
            "FUN_08008e14",
            "FUN_08008ef4",
            "FUN_08008f0e",
            "FUN_08008f1c",
            "FUN_08008f3c",
            "FUN_08008f78",
            "FUN_08009084",
            "FUN_08009094",
            "FUN_080090c2",
            "FUN_080090cc",
            "FUN_08009108",
            "FUN_08009124",
            "FUN_08009148",
            "FUN_08009190",
            "FUN_080091a0",
            "FUN_080091b0",
            "FUN_080091c6",
            "FUN_080091d8",
            "FUN_08009270",
            "FUN_0800932c",
            "FUN_08009358",
            "FUN_0800937c",
            "FUN_080095a8",
            "FUN_08009698",
            "FUN_080098d8",
            "FUN_08009908",
            "FUN_08009918",
            "FUN_08009938",
            "FUN_08009954",
            "FUN_0800997e",
            "FUN_080099a4",
            "FUN_08009a80",
            "FUN_08009b5c",
            "FUN_08009c7c",
            "FUN_08009cdc",
            "FUN_08009d24",
            "FUN_08009d50",
            "FUN_08009db0",
            "FUN_08009e64",
            "FUN_08009eac",
            "FUN_08009f2c",
            "FUN_08009fe8",
            "thunk_FUN_0800887c",
            "FUN_0800a020",
            "FUN_0800a042",
            "FUN_0800a07a",
            "FUN_0800a0ec",
            "FUN_0800a110",
            "FUN_0800a130",
            "FUN_0800a154",
            "FUN_0800a168",
            "FUN_0800a18c"
        ]
    ],
    "locked_functions": []
}