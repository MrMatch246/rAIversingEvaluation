{
    "functions": {
        "FUN_0800010c": {
            "entrypoint": "0x0800010c",
            "current_name": "initialize_flag_0800010c",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08000118) */\n\nundefined4 initializeFlag_0800010c(undefined4 inputParam)\n\n{\n  if ((char)DAT_20000160 == '\\0') {\n    DAT_20000160._0_1_ = '\\x01';\n  }\n  return inputParam;\n}\n\n",
            "renaming": {
                "FUN_0800010c": "initialize_flag_0800010c",
                "param_1": "inputParam"
            },
            "calling": [],
            "called": [
                "FUN_08007328"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000178": {
            "entrypoint": "0x08000178",
            "current_name": "find_string_length_08000178",
            "code": "\nchar * find_string_length_08000178(char *str)\n\n{\n  char character;\n  char *next_char;\n  char *current_char;\n  \n  current_char = str;\n  do {\n    next_char = current_char + 1;\n    character = *current_char;\n    current_char = next_char;\n  } while (character != '\\0');\n  return next_char + (-1 - (int)str);\n}\n\n",
            "renaming": {
                "FUN_08000178": "find_string_length_08000178",
                "param_1": "str",
                "pcVar2": "next_char",
                "pcVar3": "current_char",
                "cVar1": "character"
            },
            "calling": [
                "FUN_08005ce8",
                "FUN_08005c96"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000190": {
            "entrypoint": "0x08000190",
            "current_name": "perform_calculation_08000190",
            "code": "\nulonglong performCalculation_08000190(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int shift1;\n  byte carry1;\n  uint temp1;\n  uint uVar4;\n  uint temp2;\n  uint result1;\n  uint result2;\n  int shift2;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool condition1;\n  bool condition2;\n  bool condition3;\n  \n  result1 = input4 ^ 0x80000000;\n  uVar9 = input2 << 1;\n  input4 = input4 << 1;\n  condition1 = ((input2 ^ result1) & 0x7fffffff) == 0;\n  condition2 = condition1 && input1 == input3;\n  if (!condition1 || input1 != input3) {\n    condition2 = (uVar9 | input1) == 0;\n  }\n  if (!condition2) {\n    condition2 = (input4 | input3) == 0;\n  }\n  shift2 = (int)uVar9 >> 0x15;\n  if (!condition2) {\n    condition2 = shift2 == -1;\n  }\n  shift1 = (int)input4 >> 0x15;\n  if (!condition2) {\n    condition2 = shift1 == -1;\n  }\n  if (condition2) {\n    if (shift2 == -1 || shift1 == -1) {\n      uVar9 = result1;\n      uVar11 = input3;\n      if (shift2 == -1) {\n        uVar9 = input2;\n        uVar11 = input1;\n      }\n      if (shift2 != -1 || shift1 != -1) {\n        input3 = uVar11;\n        result1 = uVar9;\n      }\n      condition2 = (uVar11 | uVar9 << 0xc) == 0;\n      if (condition2) {\n        condition2 = (input3 | result1 << 0xc) == 0;\n      }\n      if (condition2) {\n        condition2 = uVar9 == result1;\n      }\n      if (!condition2) {\n        uVar9 = uVar9 | 0x80000;\n      }\n      return CONCAT44(uVar9,uVar11);\n    }\n    if (((input2 ^ result1) & 0x7fffffff) != 0 || input1 != input3) {\n      if ((uVar9 | input1) == 0) {\n        input1 = input3;\n        input2 = result1;\n      }\n      return CONCAT44(input2,input1);\n    }\n    if (input2 != result1) {\n      return 0;\n    }\n    if (uVar9 >> 0x15 == 0) {\n      condition2 = (input1 & 0x80000000) != 0;\n      result1 = input2 * 2 + (uint)condition2;\n      if (CARRY4(input2,input2) || CARRY4(input2 * 2,(uint)condition2)) {\n        result1 = result1 | 0x80000000;\n      }\n      return CONCAT44(result1,input1 << 1);\n    }\n    if (uVar9 < 0xffc00000) {\n      return CONCAT44(input2 + 0x100000,input1);\n    }\n    input2 = input2 & 0x80000000;\nLAB_080003d4:\n    return (ulonglong)(input2 | 0x7ff00000) << 0x20;\n  }\n  uVar9 = uVar9 >> 0x15;\n  input4 = input4 >> 0x15;\n  uVar11 = input4 - uVar9;\n  condition2 = uVar11 != 0;\n  if (input4 < uVar9) {\n    uVar11 = -uVar11;\n  }\n  uVar10 = input1;\n  result2 = input2;\n  if (condition2 && uVar9 <= input4) {\n    uVar9 = uVar9 + uVar11;\n    uVar10 = input3;\n    result2 = result1;\n    input3 = input1;\n    result1 = input2;\n  }\n  if (0x36 < uVar11) {\n    return CONCAT44(result2,uVar10);\n  }\n  uVar4 = result2 & 0xfffff | 0x100000;\n  if ((result2 & 0x80000000) != 0) {\n    condition2 = uVar10 != 0;\n    uVar10 = -uVar10;\n    uVar4 = -uVar4 - (uint)condition2;\n  }\n  result2 = result1 & 0xfffff | 0x100000;\n  if ((result1 & 0x80000000) != 0) {\n    condition2 = input3 != 0;\n    input3 = -input3;\n    result2 = -result2 - (uint)condition2;\n  }\n  if (uVar9 == uVar11) {\n    result2 = result2 ^ 0x100000;\n    if (uVar9 == 0) {\n      uVar4 = uVar4 ^ 0x100000;\n      uVar9 = 1;\n    }\n    else {\n      uVar11 = uVar11 - 1;\n    }\n  }\n  result1 = -uVar11 + 0x20;\n  if ((int)uVar11 < 0x21) {\n    uVar12 = input3 << (result1 & 0xff);\n    input3 = input3 >> (uVar11 & 0xff);\n    temp1 = uVar10 + input3;\n    temp2 = result2 << (result1 & 0xff);\n    result1 = temp1 + temp2;\n    uVar4 = uVar4 + CARRY4(uVar10,input3) + ((int)result2 >> (uVar11 & 0xff)) +\n            (uint)CARRY4(temp1,temp2);\n  }\n  else {\n    uVar12 = result2 << (-uVar11 + 0x40 & 0xff);\n    if (input3 != 0) {\n      uVar12 = uVar12 | 2;\n    }\n    result2 = (int)result2 >> (uVar11 - 0x20 & 0xff);\n    result1 = uVar10 + result2;\n    uVar4 = uVar4 + ((int)result2 >> 0x1f) + (uint)CARRY4(uVar10,result2);\n  }\n  input2 = uVar4 & 0x80000000;\n  uVar11 = uVar4;\n  if ((int)uVar4 < 0) {\n    condition2 = uVar12 == 0;\n    uVar12 = -uVar12;\n    uVar11 = -result1;\n    result1 = -(uint)!condition2 - result1;\n    uVar11 = -(uint)(condition2 <= uVar11) - uVar4;\n  }\n  if (0xfffff < uVar11) {\n    uVar10 = uVar9 - 1;\n    if (0x1fffff < uVar11) {\n      uVar10 = uVar11 & 1;\n      uVar11 = uVar11 >> 1;\n      carry1 = (byte)result1;\n      result1 = (uint)(uVar10 != 0) << 0x1f | result1 >> 1;\n      uVar12 = (uint)(carry1 & 1) << 0x1f | uVar12 >> 1;\n      uVar10 = uVar9;\n      if (0xffbfffff < uVar9 * 0x200000) goto LAB_080003d4;\n    }\nLAB_080002a0:\n    condition2 = 0x7fffffff < uVar12;\n    if (uVar12 == 0x80000000) {\n      condition2 = (result1 & 1) != 0;\n    }\n    return CONCAT44(uVar11 + uVar10 * 0x100000 + (uint)CARRY4(result1,(uint)condition2) | input2,\n                    result1 + condition2);\n  }\n  condition1 = (uVar12 & 0x80000000) != 0;\n  uVar12 = uVar12 << 1;\n  uVar10 = result1 * 2;\n  condition2 = CARRY4(result1,result1);\n  result1 = result1 * 2 + (uint)condition1;\n  uVar11 = uVar11 * 2 + (uint)(condition2 || CARRY4(uVar10,(uint)condition1));\n  uVar10 = uVar9 - 2;\n  if ((uVar11 & 0x100000) != 0) goto LAB_080002a0;\n  result2 = result1;\n  uVar9 = uVar11;\n  if (uVar11 == 0) {\n    result2 = 0;\n    uVar9 = result1;\n  }\n  shift2 = LZCOUNT(uVar9);\n  if (uVar11 == 0) {\n    shift2 = shift2 + 0x20;\n  }\n  uVar11 = shift2 - 0xb;\n  condition3 = SBORROW4(uVar11,0x20);\n  result1 = shift2 - 0x2b;\n  condition2 = (int)result1 < 0;\n  condition1 = result1 == 0;\n  if ((int)uVar11 < 0x20) {\n    condition3 = SCARRY4(result1,0xc);\n    shift2 = shift2 + -0x1f;\n    condition2 = shift2 < 0;\n    condition1 = shift2 == 0;\n    result1 = uVar11;\n    if (!condition1 && condition2 == condition3) {\n      result2 = uVar9 << (uVar11 & 0xff);\n      uVar9 = uVar9 >> (0xcU - shift2 & 0xff);\n      goto LAB_08000318;\n    }\n  }\n  if (condition1 || condition2 != condition3) {\n    uVar12 = 0x20 - result1;\n  }\n  uVar9 = uVar9 << (result1 & 0xff);\n  if (condition1 || condition2 != condition3) {\n    uVar9 = uVar9 | result2 >> (uVar12 & 0xff);\n  }\n  if (condition1 || condition2 != condition3) {\n    result2 = result2 << (result1 & 0xff);\n  }\nLAB_08000318:\n  if ((int)uVar11 <= (int)uVar10) {\n    return CONCAT44(uVar9 + (uVar10 - uVar11) * 0x100000 | input2,result2);\n  }\n  result1 = ~(uVar10 - uVar11);\n  if ((int)result1 < 0x1f) {\n    shift2 = result1 - 0x13;\n    if (shift2 != 0 && shift2 < 0 == SCARRY4(result1 - 0x1f,0xc)) {\n      return CONCAT44(uVar4,result2 >> (0x20 - (0xcU - shift2) & 0xff) | uVar9 << (0xcU - shift2 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    result1 = result1 + 1;\n    return CONCAT44(input2 | uVar9 >> (result1 & 0xff),\n                    result2 >> (result1 & 0xff) | uVar9 << (0x20 - result1 & 0xff));\n  }\n  return CONCAT44(uVar4,uVar9 >> (result1 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_08000190": "perform_calculation_08000190",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "shift1",
                "bVar2": "carry1",
                "uVar3": "temp1",
                "uVar5": "temp2",
                "uVar6": "result1",
                "uVar7": "result2",
                "iVar8": "shift2",
                "bVar13": "condition1",
                "bVar14": "condition2",
                "bVar15": "condition3"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08001814",
                "FUN_080016b4",
                "FUN_08001a66"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000194": {
            "entrypoint": "0x08000194",
            "current_name": "calculate_64bit_integer_08000194",
            "code": "\nulonglong calculate_64bit_integer_08000194(uint operand_1,uint operand_2,uint operand_3,uint operand_4)\n\n{\n  int count_1;\n  byte carry_1;\n  uint result_1;\n  uint carry_2;\n  uint result_2;\n  int count_2;\n  uint temp_1;\n  uint temp_2;\n  uint temp_3;\n  uint temp_4;\n  uint temp_5;\n  uint temp_6;\n  bool carry_3;\n  bool condition_1;\n  bool condition_2;\n  \n  temp_1 = operand_2 << 1;\n  temp_3 = operand_4 << 1;\n  carry_3 = ((operand_2 ^ operand_4) & 0x7fffffff) == 0;\n  condition_1 = carry_3 && operand_1 == operand_3;\n  if (!carry_3 || operand_1 != operand_3) {\n    condition_1 = (temp_1 | operand_1) == 0;\n  }\n  if (!condition_1) {\n    condition_1 = (temp_3 | operand_3) == 0;\n  }\n  count_2 = (int)temp_1 >> 0x15;\n  if (!condition_1) {\n    condition_1 = count_2 == -1;\n  }\n  count_1 = (int)temp_3 >> 0x15;\n  if (!condition_1) {\n    condition_1 = count_1 == -1;\n  }\n  if (condition_1) {\n    if (count_2 == -1 || count_1 == -1) {\n      temp_3 = operand_4;\n      temp_1 = operand_3;\n      if (count_2 == -1) {\n        temp_3 = operand_2;\n        temp_1 = operand_1;\n      }\n      if (count_2 != -1 || count_1 != -1) {\n        operand_3 = temp_1;\n        operand_4 = temp_3;\n      }\n      condition_1 = (temp_1 | temp_3 << 0xc) == 0;\n      if (condition_1) {\n        condition_1 = (operand_3 | operand_4 << 0xc) == 0;\n      }\n      if (condition_1) {\n        condition_1 = temp_3 == operand_4;\n      }\n      if (!condition_1) {\n        temp_3 = temp_3 | 0x80000;\n      }\n      return CONCAT44(temp_3,temp_1);\n    }\n    if (((operand_2 ^ operand_4) & 0x7fffffff) != 0 || operand_1 != operand_3) {\n      if ((temp_1 | operand_1) == 0) {\n        operand_1 = operand_3;\n        operand_2 = operand_4;\n      }\n      return CONCAT44(operand_2,operand_1);\n    }\n    if (operand_2 != operand_4) {\n      return 0;\n    }\n    if (temp_1 >> 0x15 == 0) {\n      condition_1 = (operand_1 & 0x80000000) != 0;\n      temp_3 = operand_2 * 2 + (uint)condition_1;\n      if (CARRY4(operand_2,operand_2) || CARRY4(operand_2 * 2,(uint)condition_1)) {\n        temp_3 = temp_3 | 0x80000000;\n      }\n      return CONCAT44(temp_3,operand_1 << 1);\n    }\n    if (temp_1 < 0xffc00000) {\n      return CONCAT44(operand_2 + 0x100000,operand_1);\n    }\n    operand_2 = operand_2 & 0x80000000;\nLAB_080003d4:\n    return (ulonglong)(operand_2 | 0x7ff00000) << 0x20;\n  }\n  temp_1 = temp_1 >> 0x15;\n  temp_3 = temp_3 >> 0x15;\n  temp_4 = temp_3 - temp_1;\n  condition_1 = temp_4 != 0;\n  if (temp_3 < temp_1) {\n    temp_4 = -temp_4;\n  }\n  temp_2 = operand_1;\n  result_2 = operand_2;\n  if (condition_1 && temp_1 <= temp_3) {\n    temp_1 = temp_1 + temp_4;\n    temp_2 = operand_3;\n    result_2 = operand_4;\n    operand_3 = operand_1;\n    operand_4 = operand_2;\n  }\n  if (0x36 < temp_4) {\n    return CONCAT44(result_2,temp_2);\n  }\n  temp_3 = result_2 & 0xfffff | 0x100000;\n  if ((result_2 & 0x80000000) != 0) {\n    condition_1 = temp_2 != 0;\n    temp_2 = -temp_2;\n    temp_3 = -temp_3 - (uint)condition_1;\n  }\n  result_2 = operand_4 & 0xfffff | 0x100000;\n  if ((operand_4 & 0x80000000) != 0) {\n    condition_1 = operand_3 != 0;\n    operand_3 = -operand_3;\n    result_2 = -result_2 - (uint)condition_1;\n  }\n  if (temp_1 == temp_4) {\n    result_2 = result_2 ^ 0x100000;\n    if (temp_1 == 0) {\n      temp_3 = temp_3 ^ 0x100000;\n      temp_1 = 1;\n    }\n    else {\n      temp_4 = temp_4 - 1;\n    }\n  }\n  temp_6 = -temp_4 + 0x20;\n  if ((int)temp_4 < 0x21) {\n    temp_5 = operand_3 << (temp_6 & 0xff);\n    operand_3 = operand_3 >> (temp_4 & 0xff);\n    result_1 = temp_2 + operand_3;\n    carry_2 = result_2 << (temp_6 & 0xff);\n    temp_6 = result_1 + carry_2;\n    temp_3 = temp_3 + CARRY4(temp_2,operand_3) + ((int)result_2 >> (temp_4 & 0xff)) +\n            (uint)CARRY4(result_1,carry_2);\n  }\n  else {\n    temp_5 = result_2 << (-temp_4 + 0x40 & 0xff);\n    if (operand_3 != 0) {\n      temp_5 = temp_5 | 2;\n    }\n    result_2 = (int)result_2 >> (temp_4 - 0x20 & 0xff);\n    temp_6 = temp_2 + result_2;\n    temp_3 = temp_3 + ((int)result_2 >> 0x1f) + (uint)CARRY4(temp_2,result_2);\n  }\n  operand_2 = temp_3 & 0x80000000;\n  temp_4 = temp_3;\n  if ((int)temp_3 < 0) {\n    condition_1 = temp_5 == 0;\n    temp_5 = -temp_5;\n    temp_4 = -temp_6;\n    temp_6 = -(uint)!condition_1 - temp_6;\n    temp_4 = -(uint)(condition_1 <= temp_4) - temp_3;\n  }\n  if (0xfffff < temp_4) {\n    temp_2 = temp_1 - 1;\n    if (0x1fffff < temp_4) {\n      temp_3 = temp_4 & 1;\n      temp_4 = temp_4 >> 1;\n      carry_1 = (byte)temp_6;\n      temp_6 = (uint)(temp_3 != 0) << 0x1f | temp_6 >> 1;\n      temp_5 = (uint)(carry_1 & 1) << 0x1f | temp_5 >> 1;\n      temp_2 = temp_1;\n      if (0xffbfffff < temp_1 * 0x200000) goto LAB_080003d4;\n    }\nLAB_080002a0:\n    condition_1 = 0x7fffffff < temp_5;\n    if (temp_5 == 0x80000000) {\n      condition_1 = (temp_6 & 1) != 0;\n    }\n    return CONCAT44(temp_4 + temp_2 * 0x100000 + (uint)CARRY4(temp_6,(uint)condition_1) | operand_2,\n                    temp_6 + condition_1);\n  }\n  carry_3 = (temp_5 & 0x80000000) != 0;\n  temp_5 = temp_5 << 1;\n  temp_2 = temp_6 * 2;\n  condition_1 = CARRY4(temp_6,temp_6);\n  temp_6 = temp_6 * 2 + (uint)carry_3;\n  temp_4 = temp_4 * 2 + (uint)(condition_1 || CARRY4(temp_2,(uint)carry_3));\n  temp_2 = temp_1 - 2;\n  if ((temp_4 & 0x100000) != 0) goto LAB_080002a0;\n  result_2 = temp_6;\n  temp_1 = temp_4;\n  if (temp_4 == 0) {\n    result_2 = 0;\n    temp_1 = temp_6;\n  }\n  count_2 = LZCOUNT(temp_1);\n  if (temp_4 == 0) {\n    count_2 = count_2 + 0x20;\n  }\n  temp_6 = count_2 - 0xb;\n  condition_2 = SBORROW4(temp_6,0x20);\n  temp_4 = count_2 - 0x2b;\n  condition_1 = (int)temp_4 < 0;\n  carry_3 = temp_4 == 0;\n  if ((int)temp_6 < 0x20) {\n    condition_2 = SCARRY4(temp_4,0xc);\n    count_2 = count_2 + -0x1f;\n    condition_1 = count_2 < 0;\n    carry_3 = count_2 == 0;\n    temp_4 = temp_6;\n    if (!carry_3 && condition_1 == condition_2) {\n      result_2 = temp_1 << (temp_6 & 0xff);\n      temp_1 = temp_1 >> (0xcU - count_2 & 0xff);\n      goto LAB_08000318;\n    }\n  }\n  if (carry_3 || condition_1 != condition_2) {\n    temp_5 = 0x20 - temp_4;\n  }\n  temp_1 = temp_1 << (temp_4 & 0xff);\n  if (carry_3 || condition_1 != condition_2) {\n    temp_1 = temp_1 | result_2 >> (temp_5 & 0xff);\n  }\n  if (carry_3 || condition_1 != condition_2) {\n    result_2 = result_2 << (temp_4 & 0xff);\n  }\nLAB_08000318:\n  if ((int)temp_6 <= (int)temp_2) {\n    return CONCAT44(temp_1 + (temp_2 - temp_6) * 0x100000 | operand_2,result_2);\n  }\n  temp_4 = ~(temp_2 - temp_6);\n  if ((int)temp_4 < 0x1f) {\n    count_2 = temp_4 - 0x13;\n    if (count_2 != 0 && count_2 < 0 == SCARRY4(temp_4 - 0x1f,0xc)) {\n      return CONCAT44(temp_3,result_2 >> (0x20 - (0xcU - count_2) & 0xff) | temp_1 << (0xcU - count_2 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    temp_4 = temp_4 + 1;\n    return CONCAT44(operand_2 | temp_1 >> (temp_4 & 0xff),\n                    result_2 >> (temp_4 & 0xff) | temp_1 << (0x20 - temp_4 & 0xff));\n  }\n  return CONCAT44(temp_3,temp_1 >> (temp_4 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_08000194": "calculate_64bit_integer_08000194",
                "param_1": "operand_1",
                "param_2": "operand_2",
                "param_3": "operand_3",
                "param_4": "operand_4",
                "iVar1": "count_1",
                "bVar2": "carry_1",
                "uVar3": "result_1",
                "uVar4": "carry_2",
                "uVar5": "result_2",
                "iVar6": "count_2",
                "uVar7": "temp_1",
                "uVar8": "temp_2",
                "uVar9": "temp_3",
                "uVar10": "temp_4",
                "uVar11": "temp_5",
                "uVar12": "temp_6",
                "bVar13": "carry_3",
                "bVar14": "condition_1",
                "bVar15": "condition_2"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_080015f8",
                "FUN_08000cd0",
                "FUN_080016b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800040c": {
            "entrypoint": "0x0800040c",
            "current_name": "shift_and_combine_0800040c",
            "code": "\nulonglong shiftAndCombine_0800040c(uint input)\n\n{\n  uint shiftedResult;\n  uint shiftAmount;\n  int leadingZeros;\n  uint totalBits;\n  uint shiftedMask;\n  bool isNegativeShift;\n  bool isZeroShift;\n  bool isCarry;\n  \n  if (input == 0) {\n    return 0;\n  }\n  shiftedResult = 0;\n  leadingZeros = LZCOUNT(input);\n  totalBits = leadingZeros + 0x15;\n  isCarry = SBORROW4(totalBits,0x20);\n  shiftAmount = leadingZeros - 0xb;\n  isNegativeShift = (int)shiftAmount < 0;\n  isZeroShift = shiftAmount == 0;\n  if (totalBits < 0x20) {\n    isCarry = SCARRY4(shiftAmount,0xc);\n    isNegativeShift = false;\n    isZeroShift = leadingZeros + 1 == 0;\n    shiftAmount = totalBits;\n    if (!isZeroShift && isCarry == false) {\n      shiftedResult = input << totalBits;\n      input = input >> (0xcU - (leadingZeros + 1) & 0xff);\n      goto LAB_08000318;\n    }\n  }\n  if (isZeroShift || isNegativeShift != isCarry) {\n    shiftedMask = 0x20 - shiftAmount;\n  }\n  input = input << (shiftAmount & 0xff);\n  if (isZeroShift || isNegativeShift != isCarry) {\n    input = input | 0U >> (shiftedMask & 0xff);\n  }\n  if (isZeroShift || isNegativeShift != isCarry) {\n    shiftedResult = 0 << (shiftAmount & 0xff);\n  }\nLAB_08000318:\n  if (totalBits < 0x433) {\n    return CONCAT44(input + (0x432 - totalBits) * 0x100000,shiftedResult);\n  }\n  shiftAmount = ~(0x432 - totalBits);\n  if (0x1e < (int)shiftAmount) {\n    return (ulonglong)(input >> (shiftAmount - 0x1f & 0xff));\n  }\n  leadingZeros = shiftAmount - 0x13;\n  if (leadingZeros == 0 || leadingZeros < 0 != SCARRY4(shiftAmount - 0x1f,0xc)) {\n    shiftAmount = shiftAmount + 1;\n    return CONCAT44(input >> (shiftAmount & 0xff),\n                    shiftedResult >> (shiftAmount & 0xff) | input << (0x20 - shiftAmount & 0xff));\n  }\n  return (ulonglong)(shiftedResult >> (0x20 - (0xcU - leadingZeros) & 0xff) | input << (0xcU - leadingZeros & 0xff));\n}\n\n",
            "renaming": {
                "FUN_0800040c": "shift_and_combine_0800040c",
                "param_1": "input",
                "uVar1": "shiftedResult",
                "uVar2": "shiftAmount",
                "iVar3": "leadingZeros",
                "uVar4": "totalBits",
                "in_r12": "shiftedMask",
                "bVar5": "isNegativeShift",
                "bVar6": "isZeroShift",
                "bVar7": "isCarry"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_080015f8",
                "FUN_08000cd0",
                "FUN_08001814",
                "FUN_08001918"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800042c": {
            "entrypoint": "0x0800042c",
            "current_name": "reverse_and_shift_0800042c",
            "code": "\nulonglong reverse_and_shift_0800042c(uint input_value)\n\n{\n  uint shift_amount;\n  uint abs_value;\n  uint shifted_value;\n  int leading_zeros;\n  uint temp_value;\n  uint sign_bit;\n  uint bit_mask;\n  bool is_negative;\n  bool is_zero;\n  bool carry;\n  \n  if (input_value == 0) {\n    return 0;\n  }\n  sign_bit = input_value & 0x80000000;\n  abs_value = input_value;\n  if ((int)sign_bit < 0) {\n    abs_value = -input_value;\n  }\n  shift_amount = 0;\n  leading_zeros = count_leading_zeros(abs_value);\n  temp_value = leading_zeros + 0x15;\n  carry = SBORROW4(temp_value,0x20);\n  shifted_value = leading_zeros - 0xb;\n  is_negative = (int)shifted_value < 0;\n  is_zero = shifted_value == 0;\n  if (temp_value < 0x20) {\n    carry = SCARRY4(shifted_value,0xc);\n    is_negative = false;\n    is_zero = leading_zeros + 1 == 0;\n    shifted_value = temp_value;\n    if (!is_zero && carry == false) {\n      shift_amount = abs_value << temp_value;\n      abs_value = abs_value >> (0xcU - (leading_zeros + 1) & 0xff);\n      goto LAB_08000318;\n    }\n  }\n  if (is_zero || is_negative != carry) {\n    bit_mask = 0x20 - shifted_value;\n  }\n  abs_value = abs_value << (shifted_value & 0xff);\n  if (is_zero || is_negative != carry) {\n    abs_value = abs_value | 0U >> (bit_mask & 0xff);\n  }\n  if (is_zero || is_negative != carry) {\n    shift_amount = 0 << (shifted_value & 0xff);\n  }\nLAB_08000318:\n  if (temp_value < 0x433) {\n    return CONCAT44(abs_value + (0x432 - temp_value) * 0x100000 | sign_bit,shift_amount);\n  }\n  shifted_value = ~(0x432 - temp_value);\n  if (0x1e < (int)shifted_value) {\n    return CONCAT44(input_value,abs_value >> (shifted_value - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  leading_zeros = shifted_value - 0x13;\n  if (leading_zeros == 0 || leading_zeros < 0 != SCARRY4(shifted_value - 0x1f,0xc)) {\n    shifted_value = shifted_value + 1;\n    return CONCAT44(sign_bit | abs_value >> (shifted_value & 0xff),\n                    shift_amount >> (shifted_value & 0xff) | abs_value << (0x20 - shifted_value & 0xff));\n  }\n  return CONCAT44(input_value,shift_amount >> (0x20 - (0xcU - leading_zeros) & 0xff) | abs_value << (0xcU - leading_zeros & 0xff))\n         & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800042c": "reverse_and_shift_0800042c",
                "param_1": "input_value",
                "uVar1": "shift_amount",
                "uVar2": "abs_value",
                "uVar3": "shifted_value",
                "iVar4": "leading_zeros",
                "uVar5": "temp_value",
                "uVar6": "sign_bit",
                "in_r12": "bit_mask",
                "bVar7": "is_negative",
                "bVar8": "is_zero",
                "bVar9": "carry",
                "LZCOUNT": "count_leading_zeros"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0",
                "FUN_08001918"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080004f8": {
            "entrypoint": "0x080004f8",
            "current_name": "calculate_product_080004f8",
            "code": "\nulonglong calculateProduct_080004f8(undefined4 num1,uint num2,uint num3,uint num4)\n\n{\n  ulonglong productResult;\n  longlong tempResult;\n  uint num3Shifted;\n  uint num4Shifted;\n  int sum;\n  uint difference;\n  uint unaff_r5;\n  uint carry;\n  uint temp;\n  bool isZero;\n  bool isNegative;\n  bool isOverflow;\n  ulonglong num1num2;\n  \n  num1num2 = CONCAT44(num2,num1);\n  carry = 0x7ff;\n  num4Shifted = num2 >> 0x14 & 0x7ff;\n  isZero = num4Shifted == 0;\n  if (!isZero) {\n    unaff_r5 = num4 >> 0x14 & 0x7ff;\n    isZero = unaff_r5 == 0;\n  }\n  if (!isZero) {\n    isZero = num4Shifted == 0x7ff;\n  }\n  if (!isZero) {\n    isZero = unaff_r5 == 0x7ff;\n  }\n  if (isZero) {\n    num1num2 = FUN_080006d4();\n  }\n  num3Shifted = (uint)(num1num2 >> 0x20);\n  sum = num4Shifted + unaff_r5;\n  num4Shifted = num3Shifted ^ num4;\n  num3Shifted = num3Shifted & ~(carry << 0x15);\n  num4 = num4 & ~(carry << 0x15);\n  isZero = ((uint)num1num2 | num3Shifted << 0xc) == 0;\n  if (!isZero) {\n    isZero = (num3 | num4 << 0xc) == 0;\n  }\n  num3Shifted = num3Shifted | 0x100000;\n  num4 = num4 | 0x100000;\n  if (isZero) {\n    num3 = (uint)num1num2 | num3;\n    num4 = (num4Shifted & 0x80000000 | num3Shifted) ^ num4;\n    num4Shifted = carry >> 1;\n    isOverflow = SBORROW4(sum,num4Shifted);\n    difference = sum - num4Shifted;\n    isZero = difference == 0;\n    num3Shifted = difference;\n    if (!isZero && (int)num4Shifted <= sum) {\n      isOverflow = SBORROW4(carry,difference);\n      num3Shifted = carry - difference;\n      isZero = carry == difference;\n    }\n    if (!isZero && (int)num3Shifted < 0 == isOverflow) {\n      num4 = num4 | difference * 0x100000;\n    }\n    if (!isZero && (int)num3Shifted < 0 == isOverflow) {\n      return CONCAT44(num4,num3);\n    }\n    num4 = num4 | 0x100000;\n    carry = 0;\n    isOverflow = SBORROW4(difference,1);\n    difference = difference - 1;\n    isZero = difference == 0;\n    num4Shifted = difference;\n  }\n  else {\n    productResult = (num1num2 & 0xffffffff) * (ulonglong)num3;\n    num1num2 = (num1num2 & 0xffffffff) * (ulonglong)num4 +\n             (ulonglong)num3Shifted * (ulonglong)num3 + (productResult >> 0x20);\n    temp = (uint)num1num2;\n    tempResult = (ulonglong)num3Shifted * (ulonglong)num4 + (num1num2 >> 0x20);\n    carry = (uint)tempResult;\n    num3Shifted = (uint)((ulonglong)tempResult >> 0x20);\n    if ((int)productResult != 0) {\n      temp = temp | 1;\n    }\n    difference = (sum + -0x3ff) - (uint)(num3Shifted < 0x200);\n    if (num3Shifted < 0x200) {\n      isZero = (temp & 0x80000000) != 0;\n      temp = temp << 1;\n      tempResult = CONCAT44(num3Shifted * 2 + (uint)(CARRY4(carry,carry) || CARRY4(carry * 2,(uint)isZero)),\n                       carry * 2 + (uint)isZero);\n    }\n    num4 = num4Shifted & 0x80000000 | (int)((ulonglong)tempResult >> 0x20) << 0xb | (uint)tempResult >> 0x15;\n    num3 = (uint)tempResult << 0xb | temp >> 0x15;\n    carry = temp * 0x800;\n    isNegative = 0xfc < difference;\n    isOverflow = SBORROW4(difference,0xfd);\n    num3Shifted = difference - 0xfd;\n    isZero = num3Shifted == 0;\n    num4Shifted = num3Shifted;\n    if (isNegative && !isZero) {\n      isNegative = 0x6ff < num3Shifted;\n      isOverflow = SBORROW4(num3Shifted,0x700);\n      num4Shifted = difference - 0x7fd;\n      isZero = num3Shifted == 0x700;\n    }\n    if (!isNegative || isZero) {\n      isZero = 0x7fffffff < carry;\n      if (carry == 0x80000000) {\n        isZero = (temp >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(num4 + difference * 0x100000 + (uint)CARRY4(num3,(uint)isZero),num3 + isZero\n                     );\n    }\n  }\n  if (!isZero && (int)num4Shifted < 0 == isOverflow) {\n    return (ulonglong)(num4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  isNegative = SCARRY4(difference,0x36);\n  isZero = (int)(difference + 0x36) < 0;\n  isOverflow = difference == 0xffffffca;\n  if (isOverflow || isZero != isNegative) {\n    num3 = 0;\n  }\n  if (isOverflow || isZero != isNegative) {\n    num4 = num4 & 0x80000000;\n  }\n  if (isOverflow || isZero != isNegative) {\n    return CONCAT44(num4,num3);\n  }\n  num4Shifted = -difference;\n  num3Shifted = num4Shifted - 0x20;\n  if (0x1f < (int)num4Shifted) {\n    difference = num3 >> (num3Shifted & 0xff) | num4 << (0x20 - num3Shifted & 0xff);\n    num4Shifted = (num4 >> (num3Shifted & 0xff) & ~((num4 & 0x80000000) >> (num3Shifted & 0xff))) -\n            ((int)difference >> 0x1f);\n    if ((carry | num3 << (0x20 - num3Shifted & 0xff) | difference << 1) == 0) {\n      num4Shifted = num4Shifted & ~(difference >> 0x1f);\n    }\n    return CONCAT44(num4,num4Shifted) & 0x80000000ffffffff;\n  }\n  sum = num4Shifted - 0x14;\n  if (sum == 0 || sum < 0 != SCARRY4(num3Shifted,0xc)) {\n    temp = num3 << (difference + 0x20 & 0xff);\n    num3Shifted = num3 >> (num4Shifted & 0xff) | num4 << (difference + 0x20 & 0xff);\n    difference = num3Shifted + -((int)temp >> 0x1f);\n    if ((carry | temp << 1) == 0) {\n      difference = difference & ~(temp >> 0x1f);\n    }\n    return CONCAT44((num4 & 0x80000000) +\n                    ((num4 & 0x7fffffff) >> (num4Shifted & 0xff)) +\n                    (uint)CARRY4(num3Shifted,-((int)temp >> 0x1f)),difference);\n  }\n  num4Shifted = 0xc - sum;\n  difference = num3 << (num4Shifted & 0xff);\n  num4Shifted = num3 >> (0x20 - num4Shifted & 0xff) | num4 << (num4Shifted & 0xff);\n  num3Shifted = num4Shifted + -((int)difference >> 0x1f);\n  if ((carry | difference << 1) == 0) {\n    num3Shifted = num3Shifted & ~(difference >> 0x1f);\n  }\n  return CONCAT44((num4 & 0x80000000) + (uint)CARRY4(num4Shifted,-((int)difference >> 0x1f)),num3Shifted);\n}\n\n",
            "renaming": {
                "FUN_080004f8": "calculate_product_080004f8",
                "param_1": "num1",
                "param_2": "num2",
                "param_3": "num3",
                "param_4": "num4",
                "uVar1": "productResult",
                "lVar2": "tempResult",
                "uVar3": "num3Shifted",
                "uVar4": "num4Shifted",
                "iVar5": "sum",
                "uVar6": "difference",
                "uVar7": "carry",
                "uVar8": "temp",
                "bVar9": "isZero",
                "bVar10": "isNegative",
                "bVar11": "isOverflow",
                "uVar12": "num1num2"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_080015f8",
                "FUN_08001814",
                "FUN_08001918",
                "FUN_080016b4"
            ],
            "called": [
                "FUN_080006d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080006d4": {
            "entrypoint": "0x080006d4",
            "current_name": "calculate_bitwise_result_080006d4",
            "code": "\nulonglong calculate_bitwise_result_080006d4(uint input_1,uint input_2,uint input_3,uint input_4)\n\n{\n  uint bit_1;\n  uint bit_2;\n  uint bit_3;\n  uint bit_4;\n  uint bit_5;\n  bool is_zero;\n  \n  bit_3 = bit_5 & input_4 >> 0x14;\n  if (bit_2 != bit_5 && bit_3 != bit_5) {\n    is_zero = (input_1 | input_2 << 1) == 0;\n    if (!is_zero) {\n      is_zero = (input_3 | input_4 << 1) == 0;\n    }\n    if (is_zero) {\n      return (ulonglong)((input_2 ^ input_4) & 0x80000000) << 0x20;\n    }\n    if (bit_2 == 0) {\n      bit_4 = input_2 & 0x80000000;\n      do {\n        bit_1 = input_1 & 0x80000000;\n        input_1 = input_1 << 1;\n        input_2 = input_2 * 2 + (uint)(bit_1 != 0);\n      } while ((input_2 & 0x100000) == 0);\n      input_2 = input_2 | bit_4;\n      if (bit_3 != 0) {\n        return CONCAT44(input_2,input_1);\n      }\n    }\n    do {\n      bit_3 = input_3 & 0x80000000;\n      input_3 = input_3 << 1;\n      input_4 = input_4 * 2 + (uint)(bit_3 != 0);\n    } while ((input_4 & 0x100000) == 0);\n    return CONCAT44(input_2,input_1);\n  }\n  is_zero = (input_1 | input_2 << 1) == 0;\n  if (is_zero) {\n    input_2 = input_4;\n    input_1 = input_3;\n  }\n  if (!is_zero) {\n    is_zero = (input_3 | input_4 << 1) == 0;\n  }\n  bit_4 = input_2;\n  if (((!is_zero) && ((bit_2 != bit_5 || ((input_1 | input_2 << 0xc) == 0)))) &&\n     ((bit_3 != bit_5 || (input_1 = input_3, bit_4 = input_4, (input_3 | input_4 << 0xc) == 0)))) {\n    return (ulonglong)((input_2 ^ input_4) & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  return CONCAT44(bit_4,input_1) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_080006d4": "calculate_bitwise_result_080006d4",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "bit_1",
                "unaff_r4": "bit_2",
                "uVar2": "bit_3",
                "uVar3": "bit_4",
                "in_r12": "bit_5",
                "bVar4": "is_zero"
            },
            "calling": [
                "FUN_080004f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800074c": {
            "entrypoint": "0x0800074c",
            "current_name": "calculate_floating_point_0800074c",
            "code": "\nulonglong calculateFloatingPoint_0800074c(undefined4 input1,uint input2,uint input3,uint input4)\n\n{\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  uint temp7;\n  int difference;\n  uint temp9;\n  uint unaff_r5;\n  uint temp10;\n  uint result;\n  uint differenceShifted;\n  uint constant;\n  bool flag1;\n  bool flag2;\n  bool flag3;\n  undefined8 output;\n  \n  output = CONCAT44(input2,input1);\n  constant = 0x7ff;\n  temp7 = input2 >> 0x14 & 0x7ff;\n  flag1 = temp7 == 0;\n  if (!flag1) {\n    unaff_r5 = input4 >> 0x14 & 0x7ff;\n    flag1 = unaff_r5 == 0;\n  }\n  if (!flag1) {\n    flag1 = temp7 == 0x7ff;\n  }\n  if (!flag1) {\n    flag1 = unaff_r5 == 0x7ff;\n  }\n  if (flag1) {\n    output = FUN_080008ba();\n  }\n  temp9 = (uint)((ulonglong)output >> 0x20);\n  result = (uint)output;\n  difference = temp7 - unaff_r5;\n  if ((input3 | input4 << 0xc) == 0) {\n    temp7 = (temp9 ^ input4) & 0x80000000 | temp9 & 0xfffff;\n    flag3 = SCARRY4(difference,constant >> 1);\n    temp9 = difference + (constant >> 1);\n    flag1 = (int)temp9 < 0;\n    flag2 = temp9 == 0;\n    if (!flag2 && flag1 == flag3) {\n      flag3 = SBORROW4(constant,temp9);\n      flag1 = (int)(constant - temp9) < 0;\n      flag2 = constant == temp9;\n    }\n    if (!flag2 && flag1 == flag3) {\n      temp7 = temp7 | temp9 * 0x100000;\n    }\n    if (!flag2 && flag1 == flag3) {\n      return CONCAT44(temp7,result);\n    }\n    temp7 = temp7 | 0x100000;\n    constant = 0;\n    flag2 = SBORROW4(temp9,1);\n    temp9 = temp9 - 1;\n    flag1 = temp9 == 0;\n    temp3 = temp9;\n  }\n  else {\n    temp3 = (input4 << 0xc) >> 4 | 0x10000000 | input3 >> 0x18;\n    constant = input3 << 8;\n    temp10 = (temp9 << 0xc) >> 4 | 0x10000000 | result >> 0x18;\n    result = result * 0x100;\n    temp7 = (temp9 ^ input4) & 0x80000000;\n    flag1 = temp3 <= temp10;\n    if (temp10 == temp3) {\n      flag1 = constant <= result;\n    }\n    difference = difference + (uint)flag1;\n    temp9 = difference + 0x3fd;\n    if (flag1 == false) {\n      temp3 = temp3 >> 1;\n      constant = (uint)((input3 >> 0x18 & 1) != 0) << 0x1f | constant >> 1;\n    }\n    differenceShifted = result - constant;\n    temp10 = (temp10 - temp3) - (uint)(result < constant);\n    temp4 = temp3 >> 1;\n    temp1 = (uint)((temp3 & 1) != 0) << 0x1f | constant >> 1;\n    result = 0x100000;\n    temp3 = 0x80000;\n    while( true ) {\n      flag1 = temp1 <= differenceShifted;\n      if (temp4 < temp10 || temp10 - temp4 < (uint)flag1) {\n        differenceShifted = differenceShifted - temp1;\n        result = result | temp3;\n        temp10 = (temp10 - temp4) - (uint)!flag1;\n      }\n      temp5 = temp4 >> 1;\n      temp1 = (uint)((temp4 & 1) != 0) << 0x1f | temp1 >> 1;\n      flag2 = temp1 <= differenceShifted;\n      flag1 = temp10 - temp5 < (uint)flag2;\n      constant = temp10;\n      if (temp5 < temp10 || flag1) {\n        differenceShifted = differenceShifted - temp1;\n        constant = (temp10 - temp5) - (uint)!flag2;\n      }\n      if (temp5 < temp10 || flag1) {\n        result = result | temp3 >> 1;\n      }\n      temp10 = temp4 >> 2;\n      temp2 = (uint)((temp5 & 1) != 0) << 0x1f | temp1 >> 1;\n      flag2 = temp2 <= differenceShifted;\n      flag1 = constant - temp10 < (uint)flag2;\n      temp5 = constant;\n      if (temp10 < constant || flag1) {\n        differenceShifted = differenceShifted - temp2;\n        temp5 = (constant - temp10) - (uint)!flag2;\n      }\n      if (temp10 < constant || flag1) {\n        result = result | temp3 >> 2;\n      }\n      temp6 = temp4 >> 3;\n      temp1 = (uint)((temp10 & 1) != 0) << 0x1f | temp2 >> 1;\n      flag2 = temp1 <= differenceShifted;\n      flag1 = temp5 - temp6 < (uint)flag2;\n      temp10 = temp5;\n      if (temp6 < temp5 || flag1) {\n        differenceShifted = differenceShifted - temp1;\n        temp10 = (temp5 - temp6) - (uint)!flag2;\n      }\n      if (temp6 < temp5 || flag1) {\n        result = result | temp3 >> 3;\n      }\n      constant = temp10 | differenceShifted;\n      if (constant == 0) break;\n      temp10 = temp10 << 4 | differenceShifted >> 0x1c;\n      differenceShifted = differenceShifted << 4;\n      temp4 = temp4 & 0xfffffff8 | temp1 >> 0x1d;\n      temp1 = (temp2 >> 1) << 3;\n      temp3 = temp3 >> 4;\n      if (temp3 == 0) {\n        temp6 = temp4;\n        if ((temp7 & 0x100000) != 0) goto LAB_0800086a;\n        temp7 = temp7 | result;\n        result = 0;\n        temp3 = 0x80000000;\n      }\n    }\n    if ((temp7 & 0x100000) == 0) {\n      temp7 = temp7 | result;\n      result = 0;\n    }\nLAB_0800086a:\n    flag3 = 0xfc < temp9;\n    flag2 = SBORROW4(temp9,0xfd);\n    temp4 = difference + 0x300;\n    flag1 = temp4 == 0;\n    temp3 = temp4;\n    if (flag3 && !flag1) {\n      flag3 = 0x6ff < temp4;\n      flag2 = SBORROW4(temp4,0x700);\n      temp3 = difference - 0x400;\n      flag1 = temp4 == 0x700;\n    }\n    if (!flag3 || flag1) {\n      flag1 = temp6 <= temp10;\n      if (temp10 == temp6) {\n        flag1 = temp1 <= differenceShifted;\n      }\n      if (temp10 == temp6 && differenceShifted == temp1) {\n        flag1 = (result & 1) != 0;\n      }\n      return CONCAT44(temp7 + temp9 * 0x100000 + (uint)CARRY4(result,(uint)flag1),result + flag1);\n    }\n  }\n  if (!flag1 && (int)temp3 < 0 == flag2) {\n    return (ulonglong)(temp7 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  flag3 = SCARRY4(temp9,0x36);\n  flag1 = (int)(temp9 + 0x36) < 0;\n  flag2 = temp9 == 0xffffffca;\n  if (flag2 || flag1 != flag3) {\n    result = 0;\n  }\n  if (flag2 || flag1 != flag3) {\n    temp7 = temp7 & 0x80000000;\n  }\n  if (flag2 || flag1 != flag3) {\n    return CONCAT44(temp7,result);\n  }\n  temp3 = -temp9;\n  temp10 = temp3 - 0x20;\n  if (0x1f < (int)temp3) {\n    temp3 = result >> (temp10 & 0xff) | temp7 << (0x20 - temp10 & 0xff);\n    temp9 = (temp7 >> (temp10 & 0xff) & ~((temp7 & 0x80000000) >> (temp10 & 0xff))) -\n            ((int)temp3 >> 0x1f);\n    if ((constant | result << (0x20 - temp10 & 0xff) | temp3 << 1) == 0) {\n      temp9 = temp9 & ~(temp3 >> 0x1f);\n    }\n    return CONCAT44(temp7,temp9) & 0x80000000ffffffff;\n  }\n  difference = temp3 - 0x14;\n  if (difference != 0 && difference < 0 == SCARRY4(temp10,0xc)) {\n    temp9 = 0xc - difference;\n    temp3 = result << (temp9 & 0xff);\n    result = result >> (0x20 - temp9 & 0xff) | temp7 << (temp9 & 0xff);\n    temp9 = result + -((int)temp3 >> 0x1f);\n    if ((constant | temp3 << 1) == 0) {\n      temp9 = temp9 & ~(temp3 >> 0x1f);\n    }\n    return CONCAT44((temp7 & 0x80000000) + (uint)CARRY4(result,-((int)temp3 >> 0x1f)),temp9);\n  }\n  temp10 = result << (temp9 + 0x20 & 0xff);\n  result = result >> (temp3 & 0xff) | temp7 << (temp9 + 0x20 & 0xff);\n  temp9 = result + -((int)temp10 >> 0x1f);\n  if ((constant | temp10 << 1) == 0) {\n    temp9 = temp9 & ~(temp10 >> 0x1f);\n  }\n  return CONCAT44((temp7 & 0x80000000) +\n                  ((temp7 & 0x7fffffff) >> (temp3 & 0xff)) +\n                  (uint)CARRY4(result,-((int)temp10 >> 0x1f)),temp9);\n}\n\n",
            "renaming": {
                "FUN_0800074c": "calculate_floating_point_0800074c",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "uVar3": "temp3",
                "uVar4": "temp4",
                "uVar5": "temp5",
                "uVar6": "temp6",
                "uVar7": "temp7",
                "iVar8": "difference",
                "uVar9": "temp9",
                "uVar10": "temp10",
                "uVar11": "result",
                "uVar12": "differenceShifted",
                "uVar13": "constant",
                "bVar14": "flag1",
                "bVar15": "flag2",
                "bVar16": "flag3",
                "uVar17": "output"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_080015f8",
                "FUN_08001814",
                "FUN_08001918"
            ],
            "called": [
                "FUN_080008ba"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080008ba": {
            "entrypoint": "0x080008ba",
            "current_name": "calculate_floating_point_080008ba",
            "code": "\nulonglong calculateFloatingPoint_080008ba(uint integerPart1,uint fractionPart1,uint integerPart2,uint fractionPart2)\n\n{\n  uint tempVar1;\n  uint savedVar1;\n  uint tempVar2;\n  uint tempVar3;\n  uint savedVar2;\n  bool isZero;\n  \n  tempVar2 = savedVar2 & fractionPart2 >> 0x14;\n  tempVar3 = fractionPart1;\n  if (savedVar1 != savedVar2 || tempVar2 != savedVar2) {\n    if (savedVar1 == savedVar2) {\n      if (((integerPart1 | fractionPart1 << 0xc) == 0) && (integerPart1 = integerPart2, tempVar3 = fractionPart2, tempVar2 != savedVar2)\n         ) {\nLAB_0800072c:\n        return (ulonglong)((fractionPart1 ^ fractionPart2) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n    }\n    else if (tempVar2 == savedVar2) {\n      integerPart1 = integerPart2;\n      tempVar3 = fractionPart2;\n      if ((integerPart2 | fractionPart2 << 0xc) == 0) {\nLAB_080006f0:\n        return (ulonglong)((fractionPart1 ^ fractionPart2) & 0x80000000) << 0x20;\n      }\n    }\n    else {\n      isZero = (integerPart1 | fractionPart1 << 1) == 0;\n      if (!isZero) {\n        isZero = (integerPart2 | fractionPart2 << 1) == 0;\n      }\n      if (!isZero) {\n        if (savedVar1 == 0) {\n          tempVar3 = fractionPart1 & 0x80000000;\n          do {\n            tempVar1 = integerPart1 & 0x80000000;\n            integerPart1 = integerPart1 << 1;\n            fractionPart1 = fractionPart1 * 2 + (uint)(tempVar1 != 0);\n          } while ((fractionPart1 & 0x100000) == 0);\n          fractionPart1 = fractionPart1 | tempVar3;\n          if (tempVar2 != 0) {\n            return CONCAT44(fractionPart1,integerPart1);\n          }\n        }\n        do {\n          tempVar3 = integerPart2 & 0x80000000;\n          integerPart2 = integerPart2 << 1;\n          fractionPart2 = fractionPart2 * 2 + (uint)(tempVar3 != 0);\n        } while ((fractionPart2 & 0x100000) == 0);\n        return CONCAT44(fractionPart1,integerPart1);\n      }\n      if ((integerPart1 | fractionPart1 << 1) != 0) goto LAB_0800072c;\n      if ((integerPart2 | fractionPart2 << 1) != 0) goto LAB_080006f0;\n    }\n  }\n  return CONCAT44(tempVar3,integerPart1) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_080008ba": "calculate_floating_point_080008ba",
                "param_1": "integerPart1",
                "param_2": "fractionPart1",
                "param_3": "integerPart2",
                "param_4": "fractionPart2",
                "uVar1": "tempVar1",
                "unaff_r4": "savedVar1",
                "uVar2": "tempVar2",
                "uVar3": "tempVar3",
                "in_r12": "savedVar2",
                "bVar4": "isZero"
            },
            "calling": [
                "FUN_0800074c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800092c": {
            "entrypoint": "0x0800092c",
            "current_name": "check_parameters_0800092c",
            "code": "\nuint check_parameters_0800092c(uint value1,uint value2,uint value3,uint value4)\n\n{\n  uint result;\n  bool isZero;\n  bool isGreater;\n  \n  if (((int)(value2 << 1) >> 0x15 == -1 || (int)(value4 << 1) >> 0x15 == -1) &&\n     ((((int)(value2 << 1) >> 0x15 == -1 && ((value1 | value2 << 0xc) != 0)) ||\n      (((int)(value4 << 1) >> 0x15 == -1 && ((value3 | value4 << 0xc) != 0)))))) {\n    return 1;\n  }\n  isZero = (value1 | value2 << 1) == 0;\n  if (isZero) {\n    isZero = (value3 | value4 << 1) == 0;\n  }\n  if (!isZero) {\n    isZero = value2 == value4;\n  }\n  if (isZero) {\n    isZero = value1 == value3;\n  }\n  if (!isZero) {\n    result = value2 ^ value4;\n    isZero = result == 0;\n    if (-1 < (int)result) {\n      isZero = value2 == value4;\n    }\n    isGreater = -1 < (int)result && value4 <= value2;\n    if (isZero) {\n      isGreater = value3 <= value1;\n    }\n    value4 = (int)value4 >> 0x1f;\n    if (!isGreater) {\n      value4 = ~value4;\n    }\n    return value4 | 1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800092c": "check_parameters_0800092c",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4",
                "uVar1": "result",
                "bVar2": "isZero",
                "bVar3": "isGreater"
            },
            "calling": [
                "FUN_080009b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009a8": {
            "entrypoint": "0x080009a8",
            "current_name": "execute_function_080009a8",
            "code": "\nvoid executeFunction_080009a8(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  FUN_080009b8(arg3,arg4,arg1,arg2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080009a8": "execute_function_080009a8",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "calling": [
                "FUN_08000a18",
                "FUN_08000a04"
            ],
            "called": [
                "FUN_080009b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009b8": {
            "entrypoint": "0x080009b8",
            "current_name": "initialize_system_080009b8",
            "code": "\nundefined4 initializeSystem_080009b8(undefined4 inputParameter)\n\n{\n  FUN_0800092c();\n  return inputParameter;\n}\n\n",
            "renaming": {
                "FUN_080009b8": "initialize_system_080009b8",
                "param_1": "inputParameter"
            },
            "calling": [
                "FUN_080009c8",
                "FUN_080009f0",
                "FUN_080009dc",
                "FUN_080009a8"
            ],
            "called": [
                "FUN_0800092c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009c8": {
            "entrypoint": "0x080009c8",
            "current_name": "check_if_data_present_080009c8",
            "code": "\nbool check_if_data_present_080009c8(void)\n\n{\n  char input_char;\n  \n  FUN_080009b8();\n  return input_char != '\\0';\n}\n\n",
            "renaming": {
                "FUN_080009c8": "check_if_data_present_080009c8",
                "in_ZR": "input_char"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080009b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009dc": {
            "entrypoint": "0x080009dc",
            "current_name": "is_input_empty_080009dc",
            "code": "\nbool is_input_empty_080009dc(void)\n\n{\n  char input_character;\n  \n  FUN_080009b8();\n  return input_character == '\\0';\n}\n\n",
            "renaming": {
                "FUN_080009dc": "is_input_empty_080009dc",
                "in_CY": "input_character"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0",
                "FUN_080019f6",
                "FUN_08001814",
                "FUN_080016b4",
                "FUN_08001960"
            ],
            "called": [
                "FUN_080009b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009f0": {
            "entrypoint": "0x080009f0",
            "current_name": "check_condition_080009f0",
            "code": "\nbool check_condition_080009f0(void)\n\n{\n  undefined zero_flag;\n  undefined carry_flag;\n  \n  FUN_080009b8();\n  return !(bool)carry_flag || (bool)zero_flag;\n}\n\n",
            "renaming": {
                "FUN_080009f0": "check_condition_080009f0",
                "in_ZR": "zero_flag",
                "in_CY": "carry_flag"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080009b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a04": {
            "entrypoint": "0x08000a04",
            "current_name": "check_cy_and_zr_08000a04",
            "code": "\nbool check_CY_and_ZR_08000a04(void)\n\n{\n  undefined zero_result_flag;\n  undefined carry_flag;\n  \n  FUN_080009a8();\n  return !(bool)carry_flag || (bool)zero_result_flag;\n}\n\n",
            "renaming": {
                "FUN_08000a04": "check_cy_and_zr_08000a04",
                "in_ZR": "zero_result_flag",
                "in_CY": "carry_flag"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08001960"
            ],
            "called": [
                "FUN_080009a8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a18": {
            "entrypoint": "0x08000a18",
            "current_name": "check_if_null_character_08000a18",
            "code": "\nbool checkIfNullCharacter_08000a18(void)\n\n{\n  char inputCharacter;\n  \n  FUN_080009a8();\n  return inputCharacter == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08000a18": "check_if_null_character_08000a18",
                "in_CY": "inputCharacter"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_080019f6",
                "FUN_08000cd0",
                "FUN_080016b4",
                "FUN_08001960"
            ],
            "called": [
                "FUN_080009a8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a2c": {
            "entrypoint": "0x08000a2c",
            "current_name": "check_conditions_08000a2c",
            "code": "\nundefined4 check_conditions_08000a2c(uint value1,int value2,uint value3,int value4)\n\n{\n  if ((((value2 << 1) >> 0x15 != -1) || ((value1 | value2 << 0xc) == 0)) &&\n     (((value4 << 1) >> 0x15 != -1 || ((value3 | value4 << 0xc) == 0)))) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08000a2c": "check_conditions_08000a2c",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4"
            },
            "calling": [
                "FUN_08005da8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a58": {
            "entrypoint": "0x08000a58",
            "current_name": "calculate_value_08000a58",
            "code": "\nuint calculateValue_08000a58(uint input1,uint tempParam2)\n\n{\n  uint result;\n  int multipliedValue;\n  uint shift;\n  \n  multipliedValue = tempParam2 * 2 + 0x200000;\n  if (tempParam2 * 2 < 0xffe00000) {\n    if (-1 < multipliedValue) {\n      return 0;\n    }\n    result = multipliedValue >> 0x15;\n    shift = -result - 0x3e1;\n    if (result < 0xfffffc20 && shift != 0) {\n      result = (tempParam2 << 0xb | 0x80000000 | input1 >> 0x15) >> (shift & 0xff);\n      if ((tempParam2 & 0x80000000) != 0) {\n        result = -result;\n      }\n      return result;\n    }\n  }\n  else if ((input1 | tempParam2 << 0xc) != 0) {\n    return 0;\n  }\n  tempParam2 = tempParam2 & 0x80000000;\n  if (tempParam2 == 0) {\n    tempParam2 = 0x7fffffff;\n  }\n  return tempParam2;\n}\n\n",
            "renaming": {
                "FUN_08000a58": "calculate_value_08000a58",
                "param_1": "input1",
                "param_2": "tempParam2",
                "uVar1": "result",
                "iVar2": "multipliedValue",
                "uVar3": "shift"
            },
            "calling": [
                "FUN_08005da8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000aa8": {
            "entrypoint": "0x08000aa8",
            "current_name": "calculate_result_08000aa8",
            "code": "\nuint calculateResult_08000aa8(uint inputValue,uint shiftValue)\n\n{\n  int shiftedValue;\n  uint result;\n  \n  if ((shiftValue & 0x80000000) != 0) {\n    return 0;\n  }\n  shiftedValue = shiftValue * 2 + 0x200000;\n  if (shiftValue * 2 < 0xffe00000) {\n    if (-1 < shiftedValue) {\n      return 0;\n    }\n    result = -(shiftedValue >> 0x15) - 0x3e1;\n    if (-1 < (int)result) {\n      return (shiftValue << 0xb | 0x80000000 | inputValue >> 0x15) >> (result & 0xff);\n    }\n  }\n  else if ((inputValue | shiftValue << 0xc) != 0) {\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08000aa8": "calculate_result_08000aa8",
                "param_1": "inputValue",
                "param_2": "shiftValue",
                "iVar1": "shiftedValue",
                "uVar2": "result"
            },
            "calling": [
                "FUN_08005da8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000ae8": {
            "entrypoint": "0x08000ae8",
            "current_name": "execute_software_interrupt_08000ae8",
            "code": "\nvoid executeSoftwareInterrupt_08000ae8(void)\n\n{\n  software_interrupt(0x3f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000ae8": "execute_software_interrupt_08000ae8"
            },
            "calling": [
                "FUN_08000aec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000aec": {
            "entrypoint": "0x08000aec",
            "current_name": "execute_function_08000aec",
            "code": "\nundefined4 executeFunction_08000aec(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  undefined4 result;\n  \n  if (DAT_2000017c != 0) {\n    return 0;\n  }\n  result = FUN_08000ae8(1,input1,0,0,input4);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08000aec": "execute_function_08000aec",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08000ae8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000b08": {
            "entrypoint": "0x08000b08",
            "current_name": "execute_main_logic_08000b08",
            "code": "\nvoid executeMainLogic_08000b08(int condition1,int condition2)\n\n{\n  if ((condition1 == 1) && (condition2 == 0xffff)) {\n    FUN_08001b18(&DAT_200001c0,&DAT_20000188,&DAT_200001b8,&DAT_20000240,DAT_20000020,DAT_20000024,\n                 DAT_20000018,DAT_2000001c,DAT_20000010,DAT_20000014,0);\n    FUN_08001510(&DAT_20000194,DAT_2000005c,DAT_20000038,DAT_20000028,DAT_2000002c,DAT_20000030,\n                 DAT_20000034);\n    FUN_0800157c(&DAT_2000024c,DAT_20000074,DAT_20000070,DAT_2000006c);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000b08": "execute_main_logic_08000b08",
                "param_1": "condition1",
                "param_2": "condition2"
            },
            "calling": [],
            "called": [
                "FUN_08001510",
                "FUN_0800157c",
                "FUN_08001b18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000bcc": {
            "entrypoint": "0x08000bcc",
            "current_name": "initialize_oven_controller_08000bcc",
            "code": "\nvoid initializeOvenController_08000bcc(void)\n\n{\n  FUN_08005848(DAT_20000064,0);\n  FUN_080057b4(DAT_20000064,1);\n  FUN_08005848(DAT_20000004,0);\n  FUN_080057b4(DAT_20000004,1);\n  FUN_08005848(DAT_20000060,0);\n  FUN_080057b4(DAT_20000060,1);\n  FUN_08005848(DAT_20000004,1);\n  FUN_080013a4(&DAT_20000194,8,2,0);\n  FUN_08001550(&DAT_20000194,0,&DAT_20000008);\n  FUN_0800135a(&DAT_20000194);\n  FUN_08005c96(&DAT_20000194,\"Reflow\");\n  FUN_08001366(&DAT_20000194,0,1);\n  FUN_08005c96(&DAT_20000194,\"Oven 1.2\");\n  FUN_08005848(DAT_20000004,0);\n  FUNC_080058e8(0x9c4);\n  FUN_0800135a(&DAT_20000194);\n  FUN_08005a68(&DAT_2000036c,0xe100,6);\n  FUN_08005848(DAT_20000060,1);\n  DAT_20000258 = 2000;\n  DAT_200001b0 = FUN_080058e0();\n  DAT_200001b4 = FUN_080058e0();\n  FUN_08000aec(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000bcc": "initialize_oven_controller_08000bcc"
            },
            "calling": [
                "FUN_08005f6c"
            ],
            "called": [
                "FUN_080058e8",
                "FUN_08005a68",
                "FUN_08001550",
                "FUN_0800135a",
                "FUN_08000aec",
                "FUN_08005848",
                "FUN_08005c96",
                "FUN_080013a4",
                "FUN_080057b4",
                "FUN_08001366",
                "FUN_080058e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000cd0": {
            "entrypoint": "0x08000cd0",
            "current_name": "execute_task_08000cd0",
            "code": "\nvoid executeTask_08000cd0(void)\n\n{\n  uint result;\n  undefined4 temp1;\n  int status;\n  undefined4 temp2;\n  undefined4 extraVar1;\n  undefined4 extraVar2;\n  undefined4 extraVar3;\n  undefined8 temp3;\n  \n  result = FUN_080058e0();\n  if (DAT_200001b4 < result) {\n    DAT_200001b4 = DAT_200001b4 + 1000;\n    temp3 = FUN_080015f8(&DAT_2000024c,0);\n    temp2 = (undefined4)((ulonglong)temp3 >> 0x20);\n    temp1 = (undefined4)temp3;\n    DAT_20000188 = temp1;\n    DAT_2000018c = temp2;\n    status = FUN_080009c8(temp1,temp2,0,0x40c38800);\n    if (((status != 0) || (status = FUN_080009c8(temp1,temp2,0,0x40c38880), status != 0)) ||\n       (status = FUN_080009c8(temp1,temp2,0,0x40c38900), status != 0)) {\n      DAT_20000238 = 7;\n      DAT_20000239 = '\\0';\n    }\n  }\n  result = FUN_080058e0();\n  temp1 = DAT_20000060;\n  if (DAT_200001b0 < result) {\n    DAT_200001b0 = DAT_200001b0 + 1000;\n    if (DAT_20000239 == '\\x01') {\n      status = FUN_08005890(DAT_20000060);\n      FUN_08005848(temp1,status == 0);\n      DAT_20000250 = DAT_20000250 + 1;\n      FUN_08005d82(&DAT_2000036c,DAT_20000250,10);\n      FUN_08005c96(&DAT_2000036c,&DAT_08007368);\n      FUN_08005f2c(&DAT_2000036c,extraVar1,DAT_20000240,DAT_20000244,2);\n      FUN_08005c96(&DAT_2000036c,&DAT_08007368);\n      FUN_08005f2c(&DAT_2000036c,extraVar2,DAT_20000188,DAT_2000018c,2);\n      FUN_08005c96(&DAT_2000036c,&DAT_08007368);\n      FUN_08005f40(&DAT_2000036c,extraVar3,DAT_200001b8,DAT_200001bc,2);\n    }\n    else {\n      FUN_08005848(DAT_20000060,1);\n    }\n    FUN_0800135a(&DAT_20000194);\n    FUN_08005c96(&DAT_20000194,(&PTR_s_Ready_2000003c)[DAT_20000238]);\n    FUN_08001366(&DAT_20000194,0,1);\n    if (DAT_20000238 == 7) {\n      FUN_08005c96(&DAT_20000194,\"TC Error!\");\n    }\n    else {\n      FUN_08005f2c(&DAT_20000194,2,DAT_20000188,DAT_2000018c,2);\n      FUN_0800134e(&DAT_20000194,0);\n      FUN_08005c96(&DAT_20000194,&DAT_08007378);\n    }\n  }\n  temp2 = DAT_2000018c;\n  temp1 = DAT_20000188;\n  switch(DAT_20000238) {\n  case 0:\n    status = FUN_08000a04(DAT_20000188,DAT_2000018c,0,0x40490000);\n    if (status == 0) {\n      if (DAT_20000248 == '\\x01') {\n        FUN_08005cd4(&DAT_2000036c,\"Time Setpoint Input Output\");\n        DAT_20000250 = 0;\n        DAT_2000025c = FUN_080058e0();\n        DAT_20000240 = 0;\n        DAT_20000244 = 0x4062c000;\n        temp3 = FUN_0800042c(DAT_20000258);\n        FUN_08001960(&DAT_200001c0,(int)((ulonglong)temp3 >> 0x20),0,0,temp3);\n        FUN_08001918(&DAT_200001c0,1000);\n        FUN_08001a44(&DAT_200001c0,1);\n        DAT_20000238 = 1;\n      }\n    }\n    else {\n      DAT_20000238 = 6;\n    }\n    break;\n  case 1:\n    DAT_20000239 = '\\x01';\n    status = FUN_08000a04(DAT_20000188,DAT_2000018c,0,0x4062c000);\n    if (status != 0) {\n      temp3 = FUN_080058e0();\n      DAT_20000254 = (int)temp3 + 9000;\n      FUN_080018f8(&DAT_200001c0,(int)((ulonglong)temp3 >> 0x20),0,0x4072c000,0x9999999a,0x3fa99999,\n                   0,0x406f4000);\n      DAT_20000240 = 0;\n      DAT_20000244 = 0x40636000;\n      DAT_20000238 = 2;\n    }\n    break;\n  case 2:\n    result = FUN_080058e0();\n    if (DAT_20000254 < result) {\n      status = FUN_080058e0();\n      DAT_20000254 = status + 9000;\n      temp3 = FUN_08000194(DAT_20000240,DAT_20000244,0,0x40140000);\n      DAT_20000244 = (undefined4)((ulonglong)temp3 >> 0x20);\n      DAT_20000240 = (undefined4)temp3;\n      temp3 = FUN_08000a18(DAT_20000240,DAT_20000244,0,0x40690000);\n      if ((int)temp3 != 0) {\n        FUN_080018f8(&DAT_200001c0,(int)((ulonglong)temp3 >> 0x20),0,0x4072c000,0x9999999a,\n                     0x3fa99999,0,0x4075e000);\n        DAT_20000240 = 0;\n        DAT_20000244 = 0x406f4000;\n        DAT_20000238 = 3;\n      }\n    }\n    break;\n  case 3:\n    temp3 = FUN_08000a04(DAT_20000188,DAT_2000018c,0,0x406ea000);\n    if ((int)temp3 != 0) {\n      FUN_080018f8(&DAT_200001c0,(int)((ulonglong)temp3 >> 0x20),0,0x4072c000,0x9999999a,0x3fa99999,\n                   0,0x4075e000);\n      DAT_20000240 = 0;\n      DAT_20000244 = 0x40590000;\n      DAT_20000238 = 4;\n    }\n    break;\n  case 4:\n    status = FUN_080009f0(DAT_20000188,DAT_2000018c,0,0x40590000);\n    if (status != 0) {\n      status = FUN_080058e0();\n      DAT_20000180 = status + 1000;\n      FUN_08005848(DAT_20000004,1);\n      DAT_20000239 = '\\0';\n      DAT_20000238 = 5;\n    }\n    break;\n  case 5:\n    result = FUN_080058e0();\n    if (DAT_20000180 < result) {\n      FUN_08005848(DAT_20000004,0);\n      DAT_20000238 = 0;\n    }\n    break;\n  case 6:\n    status = FUN_080009dc(DAT_20000188,DAT_2000018c,0,0x40490000);\n    if (status != 0) {\n      DAT_20000238 = 0;\n    }\n    break;\n  case 7:\n    status = FUN_080009c8(DAT_20000188,DAT_2000018c,0,0x40c38800);\n    if (((status == 0) && (status = FUN_080009c8(temp1,temp2,0,0x40c38880), status == 0)) &&\n       (status = FUN_080009c8(temp1,temp2,0,0x40c38900), status == 0)) {\n      DAT_20000238 = 0;\n    }\n    else {\n      DAT_20000238 = 7;\n    }\n  }\n  if ((DAT_20000248 == '\\x01') && (DAT_20000239 == '\\x01')) {\n    DAT_20000239 = '\\0';\n    DAT_20000238 = 0;\n  }\n  if (DAT_20000184 == '\\x01') {\n    status = FUN_08005754(DAT_20000068);\n    if (status == 0) {\n      status = FUN_080058e0();\n      if (0x32 < (uint)(status - DAT_20000190)) {\n        DAT_20000184 = '\\x02';\n      }\n    }\n    else {\n      DAT_20000184 = '\\0';\n    }\n  }\n  else if (DAT_20000184 == '\\0') {\n    DAT_20000248 = '\\0';\n    status = FUN_08005754(DAT_20000068);\n    if (status == 0) {\n      DAT_20000190 = FUN_080058e0();\n      DAT_20000184 = '\\x01';\n    }\n  }\n  else if ((DAT_20000184 == '\\x02') && (status = FUN_08005754(DAT_20000068), status != 0)) {\n    DAT_20000248 = '\\x01';\n    DAT_20000184 = '\\0';\n  }\n  if (DAT_20000239 == '\\x01') {\n    status = FUN_080058e0();\n    FUN_080016b4(&DAT_200001c0);\n    if (DAT_20000258 < (uint)(status - DAT_2000025c)) {\n      DAT_2000025c = DAT_2000025c + DAT_20000258;\n    }\n    temp3 = FUN_0800040c(status - DAT_2000025c);\n    status = FUN_080009dc((int)temp3,(int)((ulonglong)temp3 >> 0x20),DAT_200001b8,DAT_200001bc);\n    if (status == 0) {\n      FUN_08005848(DAT_20000064,0);\n    }\n    else {\n      FUN_08005848(DAT_20000064,1);\n    }\n  }\n  else {\n    FUN_08005848(DAT_20000064,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000cd0": "execute_task_08000cd0",
                "uVar1": "result",
                "uVar2": "temp1",
                "iVar3": "status",
                "uVar4": "temp2",
                "extraout_r1": "extraVar1",
                "extraout_r1_00": "extraVar2",
                "extraout_r1_01": "extraVar3",
                "uVar5": "temp3"
            },
            "calling": [
                "FUN_08005f6c"
            ],
            "called": [
                "FUN_08005f2c",
                "FUN_080009c8",
                "FUN_080015f8",
                "FUN_080018f8",
                "FUN_08005c96",
                "FUN_0800042c",
                "FUN_080016b4",
                "FUN_08005890",
                "FUN_080058e0",
                "FUN_08000194",
                "FUN_08005cd4",
                "FUN_08005848",
                "FUN_08005d82",
                "FUN_08001918",
                "FUN_08001366",
                "FUN_08000a18",
                "FUN_0800040c",
                "FUN_08005754",
                "FUN_08001a44",
                "FUN_08000a04",
                "FUN_080009f0",
                "FUN_080009dc",
                "FUN_0800134e",
                "FUN_0800135a",
                "FUN_08005f40",
                "FUN_08001960"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001294": {
            "entrypoint": "0x08001294",
            "current_name": "set_parameters_08001294",
            "code": "\nvoid setParameters_08001294(int objectAddress,undefined value1,undefined value2,undefined value3,\n                 undefined value4)\n\n{\n  *(undefined *)(objectAddress + 0x18) = value1;\n  *(undefined *)(objectAddress + 0x19) = value2;\n  *(undefined *)(objectAddress + 0x1a) = value3;\n  *(undefined *)(objectAddress + 0x1b) = value4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001294": "set_parameters_08001294",
                "param_1": "objectAddress",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "value4"
            },
            "calling": [
                "FUN_080013a4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080012a2": {
            "entrypoint": "0x080012a2",
            "current_name": "execute_function_three_times_080012a2",
            "code": "\nvoid executeFunctionThreeTimes_080012a2(int functionParameter)\n\n{\n  FUN_08005848(*(undefined *)(functionParameter + 10),0);\n  FUN_08005848(*(undefined *)(functionParameter + 10),1);\n  FUN_08005848(*(undefined *)(functionParameter + 10),0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080012a2": "execute_function_three_times_080012a2",
                "param_1": "functionParameter"
            },
            "calling": [
                "FUN_080012c0",
                "FUN_080012e8"
            ],
            "called": [
                "FUN_08005848"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080012c0": {
            "entrypoint": "0x080012c0",
            "current_name": "process_data_080012c0",
            "code": "\nvoid processData_080012c0(int dataAddress,int inputValue)\n\n{\n  uint iterationIndex;\n  \n  for (iterationIndex = 0; (int)iterationIndex < 4; iterationIndex = iterationIndex + 1) {\n    FUN_08005848(*(undefined *)(dataAddress + iterationIndex + 0xb),inputValue >> (iterationIndex & 0xff) & 1);\n  }\n  FUN_080012a2(dataAddress);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080012c0": "process_data_080012c0",
                "param_1": "dataAddress",
                "param_2": "inputValue",
                "uVar1": "iterationIndex"
            },
            "calling": [
                "FUN_08001310",
                "FUN_080013a4"
            ],
            "called": [
                "FUN_080012a2",
                "FUN_08005848"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080012e8": {
            "entrypoint": "0x080012e8",
            "current_name": "process_data_080012e8",
            "code": "\nvoid processData_080012e8(int dataPointer,int bitMask)\n\n{\n  uint counter;\n  \n  for (counter = 0; (int)counter < 8; counter = counter + 1) {\n    FUN_08005848(*(undefined *)(dataPointer + counter + 0xb),bitMask >> (counter & 0xff) & 1);\n  }\n  FUN_080012a2(dataPointer);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080012e8": "process_data_080012e8",
                "param_1": "dataPointer",
                "param_2": "bitMask",
                "uVar1": "counter"
            },
            "calling": [
                "FUN_08001310"
            ],
            "called": [
                "FUN_080012a2",
                "FUN_08005848"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001310": {
            "entrypoint": "0x08001310",
            "current_name": "execute_function_08001310",
            "code": "\nvoid executeFunction_08001310(int functionPointer,uint parameter,undefined4 arg1,undefined4 arg2)\n\n{\n  FUN_08005848(*(undefined *)(functionPointer + 8),arg1,arg1,arg2,arg2);\n  if (*(char *)(functionPointer + 9) != -1) {\n    FUN_08005848(*(char *)(functionPointer + 9),0);\n  }\n  if ((*(byte *)(functionPointer + 0x13) & 0x10) == 0) {\n    FUN_080012c0(functionPointer,parameter >> 4);\n    FUN_080012c0(functionPointer,parameter);\n    return;\n  }\n  FUN_080012e8(functionPointer,parameter);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001310": "execute_function_08001310",
                "param_1": "functionPointer",
                "param_2": "parameter",
                "param_3": "arg1",
                "param_4": "arg2"
            },
            "calling": [
                "FUN_0800138e",
                "FUN_0800134e",
                "FUN_08001550",
                "FUN_0800135a",
                "FUN_080013a4",
                "FUN_08001366"
            ],
            "called": [
                "FUN_08005848",
                "FUN_080012c0",
                "FUN_080012e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800134e": {
            "entrypoint": "0x0800134e",
            "current_name": "initialize_0800134e",
            "code": "\nundefined4 initialize_0800134e(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  FUN_08001310(arg1,arg2,1,arg4,arg4);\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800134e": "initialize_0800134e",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800135a": {
            "entrypoint": "0x0800135a",
            "current_name": "initialize_data_0800135a",
            "code": "\nvoid initializeData_0800135a(undefined4 dataPointer,undefined4 param1,undefined4 param2,undefined4 param3)\n\n{\n  FUN_08001310(dataPointer,1,0,param3,param3);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800135a": "initialize_data_0800135a",
                "param_1": "dataPointer",
                "param_2": "param1",
                "param_3": "param2",
                "param_4": "param3"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08000bcc",
                "FUN_080013a4"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001366": {
            "entrypoint": "0x08001366",
            "current_name": "process_function_08001366",
            "code": "\nvoid processFunction_08001366(int inputParam1,char inputParam2,uint inputParam3,undefined4 inputParam4)\n\n{\n  char charValue;\n  \n  if (3 < inputParam3) {\n    inputParam3 = 3;\n  }\n  if ((int)(uint)*(byte *)(inputParam1 + 0x17) <= (int)inputParam3) {\n    inputParam3 = *(byte *)(inputParam1 + 0x17) - 1 & 0xff;\n  }\n  charValue = *(char *)(inputParam3 + inputParam1 + 0x18);\n  FUN_08001310(inputParam1,inputParam2 + charValue | 0x80,0,charValue,inputParam4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001366": "process_function_08001366",
                "param_1": "inputParam1",
                "param_2": "inputParam2",
                "param_3": "inputParam3",
                "param_4": "inputParam4",
                "cVar1": "charValue"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800138e": {
            "entrypoint": "0x0800138e",
            "current_name": "update_flag_and_call_function_0800138e",
            "code": "\nvoid updateFlagAndCallFunction_0800138e(int dataAddress,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  byte originalFlag;\n  \n  originalFlag = *(byte *)(dataAddress + 0x14);\n  *(byte *)(dataAddress + 0x14) = originalFlag | 4;\n  FUN_08001310(dataAddress,originalFlag | 0xc,0,param4,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800138e": "update_flag_and_call_function_0800138e",
                "param_1": "dataAddress",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "bVar1": "originalFlag"
            },
            "calling": [
                "FUN_080013a4"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080013a4": {
            "entrypoint": "0x080013a4",
            "current_name": "process_data_080013a4",
            "code": "\nvoid processData_080013a4(int data,int size,int flag,int condition)\n\n{\n  int blockSize;\n  int counter;\n  \n  if (1 < flag) {\n    *(byte *)(data + 0x13) = *(byte *)(data + 0x13) | 8;\n  }\n  *(char *)(data + 0x17) = (char)flag;\n  FUN_08001294(data,0,0x40,size,size + 0x40);\n  if ((condition != 0) && (flag == 1)) {\n    *(byte *)(data + 0x13) = *(byte *)(data + 0x13) | 4;\n  }\n  FUN_080057b4(*(undefined *)(data + 8),1);\n  if (*(char *)(data + 9) != -1) {\n    FUN_080057b4(*(char *)(data + 9),1);\n  }\n  FUN_080057b4(*(undefined *)(data + 10),1);\n  counter = 0;\n  while( true ) {\n    if ((*(byte *)(data + 0x13) & 0x10) == 0) {\n      blockSize = 4;\n    }\n    else {\n      blockSize = 8;\n    }\n    if (blockSize <= counter) break;\n    FUN_080057b4(*(undefined *)(data + counter + 0xb),1);\n    counter = counter + 1;\n  }\n  FUN_08005848(*(undefined *)(data + 8),0);\n  FUN_08005848(*(undefined *)(data + 10),0);\n  if (*(char *)(data + 9) != -1) {\n    FUN_08005848(*(char *)(data + 9),0);\n  }\n  if ((*(byte *)(data + 0x13) & 0x10) == 0) {\n    FUN_080012c0(data,3);\n    FUN_080012c0(data,3);\n    FUN_080012c0(data,3);\n    FUN_080012c0(data,2);\n  }\n  else {\n    FUN_08001310(data,*(byte *)(data + 0x13) | 0x20,0);\n    FUN_08001310(data,*(byte *)(data + 0x13) | 0x20,0);\n    FUN_08001310(data,*(byte *)(data + 0x13) | 0x20,0);\n  }\n  FUN_08001310(data,*(byte *)(data + 0x13) | 0x20,0);\n  *(undefined *)(data + 0x14) = 4;\n  FUN_0800138e(data);\n  FUN_0800135a(data);\n  *(undefined *)(data + 0x15) = 2;\n  FUN_08001310(data,6,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080013a4": "process_data_080013a4",
                "param_1": "data",
                "param_2": "size",
                "param_3": "flag",
                "param_4": "condition",
                "iVar1": "blockSize",
                "iVar2": "counter"
            },
            "calling": [
                "FUN_080014ba",
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_0800138e",
                "FUN_08001310",
                "FUN_0800135a",
                "FUN_08005848",
                "FUN_080012c0",
                "FUN_080057b4",
                "FUN_08001294"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080014ba": {
            "entrypoint": "0x080014ba",
            "current_name": "assign_params_and_call_function_080014ba",
            "code": "\nvoid assignParamsAndCallFunction_080014ba(int functionPointer,int flag,undefined param3,undefined4 param4,undefined param5,\n                 undefined param6,undefined param7,undefined param8,undefined param9,\n                 undefined param10,undefined param11,undefined param12,undefined param13)\n\n{\n  *(undefined *)(functionPointer + 8) = param3;\n  *(char *)(functionPointer + 9) = (char)param4;\n  *(undefined *)(functionPointer + 10) = param5;\n  *(undefined *)(functionPointer + 0xb) = param6;\n  *(undefined *)(functionPointer + 0xc) = param7;\n  *(undefined *)(functionPointer + 0xd) = param8;\n  *(undefined *)(functionPointer + 0xe) = param9;\n  *(undefined *)(functionPointer + 0xf) = param10;\n  *(undefined *)(functionPointer + 0x10) = param11;\n  *(undefined *)(functionPointer + 0x11) = param12;\n  *(undefined *)(functionPointer + 0x12) = param13;\n  if (flag == 0) {\n    *(undefined *)(functionPointer + 0x13) = 0x10;\n  }\n  else {\n    *(undefined *)(functionPointer + 0x13) = 0;\n  }\n  FUN_080013a4(functionPointer,0x10,1,0,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080014ba": "assign_params_and_call_function_080014ba",
                "param_1": "functionPointer",
                "param_2": "flag",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "param_6": "param6",
                "param_7": "param7",
                "param_8": "param8",
                "param_9": "param9",
                "param_10": "param10",
                "param_11": "param11",
                "param_12": "param12",
                "param_13": "param13"
            },
            "calling": [
                "FUN_08001510"
            ],
            "called": [
                "FUN_080013a4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001510": {
            "entrypoint": "0x08001510",
            "current_name": "initialize_function_08001510",
            "code": "\nundefined4 *\ninitializeFunction_08001510(undefined4 *arrayPointer,undefined4 value1,undefined4 value2,undefined4 value3,\n            undefined parameter5,undefined parameter6,undefined parameter7)\n\n{\n  arrayPointer[1] = 0;\n  *arrayPointer = &PTR_FUN_0800134e_1_080073f8;\n  FUN_080014ba(arrayPointer,1,value1,0xff,value2,value3,parameter5,parameter6,parameter7,0,0,0,0);\n  return arrayPointer;\n}\n\n",
            "renaming": {
                "FUN_08001510": "initialize_function_08001510",
                "param_1": "arrayPointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "parameter5",
                "param_6": "parameter6",
                "param_7": "parameter7"
            },
            "calling": [
                "FUN_08000b08"
            ],
            "called": [
                "FUN_080014ba"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001550": {
            "entrypoint": "0x08001550",
            "current_name": "process_data_08001550",
            "code": "\nvoid process_data_08001550(undefined4 *data_array,uint data_length,int data_offset)\n\n{\n  int index;\n  \n  FUN_08001310(data_array,(data_length & 7) << 3 | 0x40,0);\n  for (index = 0; index < 8; index = index + 1) {\n    (**(code **)*data_array)(data_array,*(undefined *)(data_offset + index));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001550": "process_data_08001550",
                "param_1": "data_array",
                "param_2": "data_length",
                "param_3": "data_offset",
                "iVar1": "index"
            },
            "calling": [
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08001310"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800157c": {
            "entrypoint": "0x0800157c",
            "current_name": "update_data_0800157c",
            "code": "\nundefined * updateData_0800157c(undefined *dataPointer,undefined4 newValue,undefined value1,undefined value2)\n\n{\n  *dataPointer = (char)newValue;\n  dataPointer[1] = value1;\n  dataPointer[2] = value2;\n  FUN_080057b4(newValue,0);\n  FUN_080057b4(dataPointer[1],1);\n  FUN_080057b4(dataPointer[2],1);\n  FUN_08005848(dataPointer[1],1);\n  FUN_08005848(dataPointer[2],0);\n  return dataPointer;\n}\n\n",
            "renaming": {
                "FUN_0800157c": "update_data_0800157c",
                "param_1": "dataPointer",
                "param_2": "newValue",
                "param_3": "value1",
                "param_4": "value2"
            },
            "calling": [
                "FUN_08000b08"
            ],
            "called": [
                "FUN_08005848",
                "FUN_080057b4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080015b2": {
            "entrypoint": "0x080015b2",
            "current_name": "check_bits_set_080015b2",
            "code": "\nuint check_bits_set_080015b2(undefined *input_array)\n\n{\n  int result;\n  uint bit_position;\n  uint bitmask;\n  \n  FUN_08005848(input_array[1],0);\n  bitmask = 0;\n  for (bit_position = 0x1f; -1 < (int)bit_position; bit_position = bit_position - 1) {\n    FUN_08005848(input_array[2],1);\n    result = FUN_08005890(*input_array);\n    if (result != 0) {\n      bitmask = bitmask | 1 << (bit_position & 0xff);\n    }\n    FUN_08005848(input_array[2],0);\n  }\n  FUN_08005848(input_array[1],1);\n  return bitmask;\n}\n\n",
            "renaming": {
                "FUN_080015b2": "check_bits_set_080015b2",
                "param_1": "input_array",
                "iVar1": "result",
                "uVar2": "bit_position",
                "uVar3": "bitmask"
            },
            "calling": [
                "FUN_080015f8"
            ],
            "called": [
                "FUN_08005848",
                "FUN_08005890"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080015f8": {
            "entrypoint": "0x080015f8",
            "current_name": "calculate_result_080015f8",
            "code": "\nundefined8 calculate_result_080015f8(undefined4 input_1,int input_2,undefined4 input_3,undefined4 input_4)\n\n{\n  uint status;\n  undefined8 result;\n  \n  status = FUN_080015b2();\n  if ((status & 0x10000) == 0) {\n    status = status >> 0x12;\n    result = FUN_0800040c(status & 0x1fff);\n    if ((status & 0x2000) != 0) {\n      result = FUN_0800040c(~status & 0x1fff);\n      result = FUN_08000194((int)result,(int)((ulonglong)result >> 0x20),0,0x3ff00000,input_4);\n      result = CONCAT44((int)((ulonglong)result >> 0x20) + -0x80000000,(int)result);\n    }\n    result = FUN_080004f8((int)result,(int)((ulonglong)result >> 0x20),0,0x3fd00000);\n    if (input_2 == 1) {\n      result = FUN_080004f8((int)result,(int)((ulonglong)result >> 0x20),0,0x40220000);\n      result = FUN_0800074c((int)result,(int)((ulonglong)result >> 0x20),0,0x40140000);\n      result = FUN_08000194((int)result,(int)((ulonglong)result >> 0x20),0,0x40400000);\n      return result;\n    }\n  }\n  else {\n    status = status & 7;\n    if (status == 2) {\n      return 0x40c3888000000000;\n    }\n    if (status == 4) {\n      return 0x40c3890000000000;\n    }\n    if (status != 1) {\n      return 0;\n    }\n    result = 0x40c3880000000000;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080015f8": "calculate_result_080015f8",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "status",
                "uVar2": "result"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080004f8",
                "FUN_08000194",
                "FUN_0800040c",
                "FUN_080015b2",
                "FUN_0800074c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080016b4": {
            "entrypoint": "0x080016b4",
            "current_name": "process_data_080016b4",
            "code": "\nchar processData_080016b4(int data)\n\n{\n  char flag;\n  int value1;\n  int value2;\n  undefined4 result1;\n  undefined4 result2;\n  undefined4 result3;\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  undefined4 temp4;\n  char flag1;\n  undefined4 arg1;\n  undefined4 arg2;\n  undefined4 arg3;\n  undefined8 arg4;\n  undefined8 arg5;\n  undefined8 arg6;\n  undefined8 arg7;\n  undefined4 temp5;\n  undefined4 temp6;\n  \n  flag1 = *(char *)(data + 0x70);\n  if (flag1 != '\\0') {\n    value1 = FUN_080058e0();\n    if ((uint)(value1 - *(int *)(data + 0x44)) < *(uint *)(data + 0x58)) {\n      flag1 = '\\0';\n    }\n    else {\n      result2 = **(undefined4 **)(data + 0x38);\n      temp2 = (*(undefined4 **)(data + 0x38))[1];\n      arg4 = FUN_08000190(**(undefined4 **)(data + 0x40),(*(undefined4 **)(data + 0x40))[1])\n      ;\n      arg3 = (undefined4)((ulonglong)arg4 >> 0x20);\n      arg5 = FUN_08000190(result2,temp2,*(undefined4 *)(data + 0x50),\n                            *(undefined4 *)(data + 0x54));\n      result1 = (undefined4)((ulonglong)arg5 >> 0x20);\n      arg6 = FUN_080004f8((int)arg4,arg3,*(undefined4 *)(data + 0x20),\n                            *(undefined4 *)(data + 0x24));\n      arg6 = FUN_08000194((int)arg6,(int)((ulonglong)arg6 >> 0x20),\n                            *(undefined4 *)(data + 0x48),*(undefined4 *)(data + 0x4c));\n      *(undefined8 *)(data + 0x48) = arg6;\n      flag = *(char *)(data + 0x71);\n      if (flag == '\\0') {\n        arg7 = FUN_080004f8((int)arg5,result1,*(undefined4 *)(data + 0x18),\n                              *(undefined4 *)(data + 0x1c));\n        arg6 = FUN_08000190((int)arg6,(int)((ulonglong)arg6 >> 0x20),(int)arg7,\n                              (int)((ulonglong)arg7 >> 0x20));\n        *(undefined8 *)(data + 0x48) = arg6;\n      }\n      result3 = *(undefined4 *)(data + 0x48);\n      temp3 = *(undefined4 *)(data + 0x4c);\n      arg1 = *(undefined4 *)(undefined8 *)(data + 0x68);\n      arg2 = *(undefined4 *)(data + 0x6c);\n      arg6 = *(undefined8 *)(data + 0x68);\n      value2 = FUN_08000a18(result3,temp3,arg1,arg2);\n      if (value2 == 0) {\n        temp1 = *(undefined4 *)(data + 0x60);\n        temp4 = *(undefined4 *)(data + 100);\n        value2 = FUN_080009dc(result3,temp3);\n        if (value2 != 0) {\n          *(undefined4 *)(data + 0x48) = temp1;\n          *(undefined4 *)(data + 0x4c) = temp4;\n        }\n      }\n      else {\n        *(undefined4 *)(data + 0x48) = arg1;\n        *(undefined4 *)(data + 0x4c) = arg2;\n      }\n      if (flag == '\\0') {\n        arg4 = 0;\n      }\n      else {\n        arg4 = FUN_080004f8((int)arg4,arg3,*(undefined4 *)(data + 0x18),\n                              *(undefined4 *)(data + 0x1c));\n      }\n      temp6 = (undefined4)((ulonglong)arg4 >> 0x20);\n      temp5 = (undefined4)arg4;\n      arg3 = *(undefined4 *)(data + 0x48);\n      result3 = *(undefined4 *)(data + 0x4c);\n      arg4 = FUN_080004f8((int)arg5,result1,*(undefined4 *)(data + 0x28),\n                            *(undefined4 *)(data + 0x2c));\n      arg4 = FUN_08000190(arg3,result3,(int)arg4,(int)((ulonglong)arg4 >> 0x20));\n      arg4 = FUN_08000194(temp5,temp6,(int)arg4,(int)((ulonglong)arg4 >> 0x20));\n      arg3 = (undefined4)((ulonglong)arg4 >> 0x20);\n      value2 = FUN_080009dc(arg1,arg2,(int)arg4,arg3);\n      if (value2 == 0) {\n        arg6 = *(undefined8 *)(data + 0x60);\n        value2 = FUN_080009dc((int)arg4,arg3,*(undefined4 *)(undefined8 *)(data + 0x60),\n                             *(undefined4 *)(data + 100));\n        if (value2 == 0) {\n          arg6 = arg4;\n        }\n      }\n      **(undefined8 **)(data + 0x3c) = arg6;\n      *(undefined4 *)(data + 0x50) = result2;\n      *(undefined4 *)(data + 0x54) = temp2;\n      *(int *)(data + 0x44) = value1;\n    }\n  }\n  return flag1;\n}\n\n",
            "renaming": {
                "FUN_080016b4": "process_data_080016b4",
                "param_1": "data",
                "cVar1": "flag",
                "iVar2": "value1",
                "iVar3": "value2",
                "uVar4": "result1",
                "uVar5": "result2",
                "uVar6": "result3",
                "uVar7": "temp1",
                "uVar8": "temp2",
                "uVar9": "temp3",
                "uVar10": "temp4",
                "uVar12": "arg1",
                "uVar13": "arg2",
                "uVar14": "arg3",
                "uVar15": "arg4",
                "uVar16": "arg5",
                "uVar17": "arg6",
                "uVar18": "arg7",
                "local_38": "temp5",
                "uStack_34": "temp6"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08000a18",
                "FUN_08000194",
                "FUN_08000190",
                "FUN_080004f8",
                "FUN_080009dc",
                "FUN_080058e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001814": {
            "entrypoint": "0x08001814",
            "current_name": "initialize_params_08001814",
            "code": "\nvoid initializeParams_08001814(undefined4 *params,undefined4 param2,undefined4 input1,undefined4 input2,\n                 undefined4 input3,undefined4 input4,undefined4 input5,undefined4 input6,\n                 int flag)\n\n{\n  int result;\n  undefined4 temp;\n  undefined temp2;\n  bool isFlagOne;\n  undefined8 temp3;\n  undefined8 temp4;\n  undefined8 temp5;\n  \n  result = FUN_080009dc(input1,input2,0,0);\n  if (((result == 0) && (result = FUN_080009dc(input3,input4,0,0), result == 0)) &&\n     (result = FUN_080009dc(input5,input6,0,0), result == 0)) {\n    params[0xd] = flag;\n    isFlagOne = flag != 1;\n    if (isFlagOne) {\n      flag = 0;\n    }\n    temp2 = (undefined)flag;\n    if (!isFlagOne) {\n      temp2 = 1;\n    }\n    *(undefined *)((int)params + 0x71) = temp2;\n    *params = input1;\n    params[1] = input2;\n    params[2] = input3;\n    params[3] = input4;\n    params[4] = input5;\n    params[5] = input6;\n    temp3 = FUN_0800040c(params[0x16]);\n    temp3 = FUN_0800074c((int)temp3,(int)((ulonglong)temp3 >> 0x20),0,0x408f4000);\n    temp = (undefined4)((ulonglong)temp3 >> 0x20);\n    params[6] = input1;\n    params[7] = input2;\n    temp4 = FUN_080004f8(input3,input4,(int)temp3,temp);\n    *(undefined8 *)(params + 8) = temp4;\n    temp3 = FUN_0800074c(input5,input6,(int)temp3,temp);\n    *(undefined8 *)(params + 10) = temp3;\n    if (params[0xc] == 1) {\n      temp5 = FUN_08000190(0,0,input1,input2);\n      *(undefined8 *)(params + 6) = temp5;\n      temp4 = FUN_08000190(0,0,(int)temp4,(int)((ulonglong)temp4 >> 0x20));\n      *(undefined8 *)(params + 8) = temp4;\n      temp3 = FUN_08000190(0,0,(int)temp3,(int)((ulonglong)temp3 >> 0x20));\n      *(undefined8 *)(params + 10) = temp3;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001814": "initialize_params_08001814",
                "param_1": "params",
                "param_2": "param2",
                "param_3": "input1",
                "param_4": "input2",
                "param_5": "input3",
                "param_6": "input4",
                "param_7": "input5",
                "param_8": "input6",
                "param_9": "flag",
                "iVar1": "result",
                "uVar2": "temp",
                "uVar3": "temp2",
                "bVar4": "isFlagOne",
                "uVar5": "temp3",
                "uVar6": "temp4",
                "uVar7": "temp5"
            },
            "calling": [
                "FUN_080018f8",
                "FUN_08001ab0"
            ],
            "called": [
                "FUN_08000190",
                "FUN_080004f8",
                "FUN_080009dc",
                "FUN_0800040c",
                "FUN_0800074c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080018f8": {
            "entrypoint": "0x080018f8",
            "current_name": "initialize_application_080018f8",
            "code": "\nvoid initializeApplication_080018f8(void)\n\n{\n  FUN_08001814();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080018f8": "initialize_application_080018f8"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08001814"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001918": {
            "entrypoint": "0x08001918",
            "current_name": "update_data_08001918",
            "code": "\nvoid updateData_08001918(int dataAddress,int numElements,undefined4 param3,undefined4 param4)\n\n{\n  undefined4 result;\n  undefined8 ptr1;\n  undefined8 ptr2;\n  \n  if (0 < numElements) {\n    ptr1 = FUN_0800042c(numElements);\n    ptr2 = FUN_0800040c(*(undefined4 *)(dataAddress + 0x58));\n    ptr1 = FUN_0800074c((int)ptr1,(int)((ulonglong)ptr1 >> 0x20),(int)ptr2,\n                         (int)((ulonglong)ptr2 >> 0x20),param4);\n    result = (undefined4)((ulonglong)ptr1 >> 0x20);\n    ptr2 = FUN_080004f8((int)ptr1,result,*(undefined4 *)(dataAddress + 0x20),\n                         *(undefined4 *)(dataAddress + 0x24));\n    *(undefined8 *)(dataAddress + 0x20) = ptr2;\n    ptr1 = FUN_0800074c(*(undefined4 *)(dataAddress + 0x28),*(undefined4 *)(dataAddress + 0x2c),(int)ptr1,\n                         result);\n    *(undefined8 *)(dataAddress + 0x28) = ptr1;\n    *(int *)(dataAddress + 0x58) = numElements;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001918": "update_data_08001918",
                "param_1": "dataAddress",
                "param_2": "numElements",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "result",
                "uVar2": "ptr1",
                "uVar3": "ptr2"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080004f8",
                "FUN_0800040c",
                "FUN_0800042c",
                "FUN_0800074c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001960": {
            "entrypoint": "0x08001960",
            "current_name": "update_parameters_08001960",
            "code": "\nvoid updateParameters_08001960(int context,undefined4 param2,undefined4 newParam1,undefined4 newParam2,\n                 undefined4 newParam3,undefined4 newParam4)\n\n{\n  int status;\n  undefined4 *dataPointer;\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  undefined4 value4;\n  \n  status = FUN_08000a04(newParam1,newParam2,newParam3,newParam4,newParam2);\n  if (status == 0) {\n    *(undefined4 *)(context + 0x60) = newParam1;\n    *(undefined4 *)(context + 100) = newParam2;\n    *(undefined4 *)(context + 0x68) = newParam3;\n    *(undefined4 *)(context + 0x6c) = newParam4;\n    if (*(char *)(context + 0x70) != '\\0') {\n      dataPointer = *(undefined4 **)(context + 0x3c);\n      value1 = *dataPointer;\n      value3 = dataPointer[1];\n      status = FUN_080009dc(newParam3,newParam4,value1,value3);\n      if (status == 0) {\n        status = FUN_08000a18(newParam1,newParam2,value1,value3);\n        if (status != 0) {\n          *dataPointer = newParam1;\n          dataPointer[1] = newParam2;\n        }\n      }\n      else {\n        *dataPointer = newParam3;\n        dataPointer[1] = newParam4;\n      }\n      value1 = *(undefined4 *)(context + 0x48);\n      value3 = *(undefined4 *)(context + 0x4c);\n      value2 = *(undefined4 *)(context + 0x68);\n      value4 = *(undefined4 *)(context + 0x6c);\n      status = FUN_08000a18(value1,value3,value2,value4);\n      if (status != 0) {\n        *(undefined4 *)(context + 0x48) = value2;\n        *(undefined4 *)(context + 0x4c) = value4;\n        return;\n      }\n      value2 = *(undefined4 *)(context + 0x60);\n      value4 = *(undefined4 *)(context + 100);\n      status = FUN_080009dc(value1,value3,value2,value4);\n      if (status != 0) {\n        *(undefined4 *)(context + 0x48) = value2;\n        *(undefined4 *)(context + 0x4c) = value4;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001960": "update_parameters_08001960",
                "param_1": "context",
                "param_2": "param2",
                "param_3": "newParam1",
                "param_4": "newParam2",
                "param_5": "newParam3",
                "param_6": "newParam4",
                "iVar1": "status",
                "puVar2": "dataPointer",
                "uVar3": "value1",
                "uVar4": "value2",
                "uVar5": "value3",
                "uVar6": "value4"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08001ab0"
            ],
            "called": [
                "FUN_08000a18",
                "FUN_08000a04",
                "FUN_080009dc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080019f6": {
            "entrypoint": "0x080019f6",
            "current_name": "update_data_080019f6",
            "code": "\nvoid updateData_080019f6(int baseAddress)\n\n{\n  int result;\n  undefined4 firstValue;\n  undefined4 ptr1;\n  undefined4 ptr2;\n  undefined4 secondValue;\n  \n  ptr1 = **(undefined4 **)(baseAddress + 0x3c);\n  ptr2 = (*(undefined4 **)(baseAddress + 0x3c))[1];\n  *(undefined4 *)(baseAddress + 0x48) = ptr1;\n  *(undefined4 *)(baseAddress + 0x4c) = ptr2;\n  firstValue = (*(undefined4 **)(baseAddress + 0x38))[1];\n  *(undefined4 *)(baseAddress + 0x50) = **(undefined4 **)(baseAddress + 0x38);\n  *(undefined4 *)(baseAddress + 0x54) = firstValue;\n  firstValue = *(undefined4 *)(baseAddress + 0x68);\n  secondValue = *(undefined4 *)(baseAddress + 0x6c);\n  result = FUN_08000a18(ptr1,ptr2,firstValue,secondValue);\n  if (result == 0) {\n    firstValue = *(undefined4 *)(baseAddress + 0x60);\n    secondValue = *(undefined4 *)(baseAddress + 100);\n    result = FUN_080009dc(ptr1,ptr2,firstValue,secondValue);\n    if (result != 0) {\n      *(undefined4 *)(baseAddress + 0x48) = firstValue;\n      *(undefined4 *)(baseAddress + 0x4c) = secondValue;\n    }\n    return;\n  }\n  *(undefined4 *)(baseAddress + 0x48) = firstValue;\n  *(undefined4 *)(baseAddress + 0x4c) = secondValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080019f6": "update_data_080019f6",
                "param_1": "baseAddress",
                "iVar1": "result",
                "uVar2": "firstValue",
                "uVar3": "ptr1",
                "uVar4": "ptr2",
                "uVar5": "secondValue"
            },
            "calling": [
                "FUN_08001a44"
            ],
            "called": [
                "FUN_08000a18",
                "FUN_080009dc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001a44": {
            "entrypoint": "0x08001a44",
            "current_name": "set_flag_if_param_is_one_08001a44",
            "code": "\nvoid setFlagIfParamIsOne_08001a44(int dataAddress,int flagValue)\n\n{\n  undefined newFlagValue;\n  \n  if (flagValue == 1) {\n    newFlagValue = 1;\n    if (*(char *)(dataAddress + 0x70) == '\\0') {\n      FUN_080019f6();\n    }\n  }\n  else {\n    newFlagValue = 0;\n  }\n  *(undefined *)(dataAddress + 0x70) = newFlagValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001a44": "set_flag_if_param_is_one_08001a44",
                "param_1": "dataAddress",
                "param_2": "flagValue",
                "uVar1": "newFlagValue"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_080019f6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001a66": {
            "entrypoint": "0x08001a66",
            "current_name": "update_parameters_08001a66",
            "code": "\nvoid updateParameters_08001a66(int ptr_param_1,int param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  undefined8 result;\n  \n  if ((*(char *)(ptr_param_1 + 0x70) != '\\0') && (*(int *)(ptr_param_1 + 0x30) != param_2)) {\n    result = FUN_08000190(0,0,*(undefined4 *)(ptr_param_1 + 0x18),*(undefined4 *)(ptr_param_1 + 0x1c),param_4\n                        );\n    *(undefined8 *)(ptr_param_1 + 0x18) = result;\n    result = FUN_08000190(0,0,*(undefined4 *)(ptr_param_1 + 0x20),*(undefined4 *)(ptr_param_1 + 0x24));\n    *(undefined8 *)(ptr_param_1 + 0x20) = result;\n    result = FUN_08000190(0,0,*(undefined4 *)(ptr_param_1 + 0x28),*(undefined4 *)(ptr_param_1 + 0x2c));\n    *(undefined8 *)(ptr_param_1 + 0x28) = result;\n  }\n  *(int *)(ptr_param_1 + 0x30) = param_2;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001a66": "update_parameters_08001a66",
                "param_1": "ptr_param_1",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08001ab0"
            ],
            "called": [
                "FUN_08000190"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001ab0": {
            "entrypoint": "0x08001ab0",
            "current_name": "initialize_data_08001ab0",
            "code": "\nint initializeData_08001ab0(int dataStruct,undefined4 param2,undefined4 param3,undefined4 param4,\n                undefined4 param5,undefined4 param6,undefined4 param7,undefined4 param8,\n                undefined4 param9,undefined4 param10,undefined4 param11,undefined4 param12)\n\n{\n  int result;\n  undefined4 extraResult;\n  \n  *(undefined4 *)(dataStruct + 0x3c) = param3;\n  *(undefined4 *)(dataStruct + 0x38) = param2;\n  *(undefined4 *)(dataStruct + 0x40) = param4;\n  *(undefined *)(dataStruct + 0x70) = 0;\n  FUN_08001960(dataStruct,param2,0,0,0,0x406fe000);\n  *(undefined4 *)(dataStruct + 0x58) = 100;\n  FUN_08001a66(dataStruct,param12);\n  FUN_08001814(dataStruct,extraResult,param5,param6,param7,param8,param9,param10,param11);\n  result = FUN_080058e0();\n  *(int *)(dataStruct + 0x44) = result - *(int *)(dataStruct + 0x58);\n  return dataStruct;\n}\n\n",
            "renaming": {
                "FUN_08001ab0": "initialize_data_08001ab0",
                "param_1": "dataStruct",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "param5",
                "param_6": "param6",
                "param_7": "param7",
                "param_8": "param8",
                "param_9": "param9",
                "param_10": "param10",
                "param_11": "param11",
                "param_12": "param12",
                "iVar1": "result",
                "extraout_r1": "extraResult"
            },
            "calling": [
                "FUN_08001b18"
            ],
            "called": [
                "FUN_08001814",
                "FUN_08001960",
                "FUN_080058e0",
                "FUN_08001a66"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001b18": {
            "entrypoint": "0x08001b18",
            "current_name": "initialize_08001b18",
            "code": "\nundefined4 initialize_08001b18(undefined4 input_parameter)\n\n{\n  FUN_08001ab0();\n  return input_parameter;\n}\n\n",
            "renaming": {
                "FUN_08001b18": "initialize_08001b18",
                "param_1": "input_parameter"
            },
            "calling": [
                "FUN_08000b08"
            ],
            "called": [
                "FUN_08001ab0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001b48": {
            "entrypoint": "0x08001b48",
            "current_name": "initialize_hardware_08001b48",
            "code": "\nvoid initializeHardware_08001b48(void)\n\n{\n  int result;\n  uint value7;\n  undefined4 array [2];\n  undefined4 value6;\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  undefined4 value4;\n  undefined4 value5;\n  undefined4 dataArray [4];\n  undefined4 constantValue1;\n  undefined4 constantValue2;\n  undefined4 constantValue3;\n  undefined4 constantValue4;\n  undefined4 constantValue5;\n  \n  dataArray[0] = 2;\n  constantValue1 = 1;\n  constantValue2 = 0x10;\n  constantValue3 = 2;\n  constantValue4 = 0;\n  constantValue5 = 0x380000;\n  result = FUN_08003688(dataArray);\n  if (result != 0) {\n    FUN_08004d40(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x88);\n  }\n  value1 = 0xf;\n  value2 = 2;\n  value3 = 0;\n  value4 = 0x400;\n  value5 = 0;\n  result = FUN_08003ad4(&value1);\n  if (result != 0) {\n    FUN_08004d40(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x95);\n  }\n  array[0] = 2;\n  value6 = 0x8000;\n  result = FUN_08003c90(array);\n  if (result != 0) {\n    FUN_08004d40(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x9c);\n  }\n  value7 = FUN_08003c44();\n  FUN_08002514(value7 / 1000);\n  FUN_08002560(4);\n  FUN_08002494(0xffffffff,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001b48": "initialize_hardware_08001b48",
                "local_30": "dataArray",
                "local_20": "constantValue1",
                "local_1c": "constantValue2",
                "local_14": "constantValue3",
                "local_10": "constantValue4",
                "local_c": "constantValue5",
                "iVar1": "result",
                "local_44": "value1",
                "local_40": "value2",
                "local_3c": "value3",
                "local_38": "value4",
                "local_34": "value5",
                "local_54": "array",
                "local_4c": "value6",
                "uVar2": "value7"
            },
            "calling": [
                "FUN_08004c52"
            ],
            "called": [
                "FUN_08002494",
                "FUN_08003c90",
                "FUN_08002560",
                "FUN_08002514",
                "FUN_08004d40",
                "FUN_08003c44",
                "FUN_08003ad4",
                "FUN_08003688"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "entry": {
            "entrypoint": "0x08001be8",
            "current_name": "entry",
            "code": "\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined *)(iVar1 + 0x20000000) < &DAT_2000015c; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x8007970);\n  }\n  for (puVar2 = &DAT_20000160; puVar2 < &DAT_200006a8; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  FUN_08004d44();\n  FUN_08006198();\n  UNRECOVERED_JUMPTABLE = (code *)0x8001c1a;\n  FUN_08005f6c();\n                    /* WARNING: Could not recover jumptable at 0x08001c1a. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "renaming": {},
            "calling": [],
            "called": [
                "FUN_08006198",
                "FUN_08004d44",
                "FUN_08005f6c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c32": {
            "entrypoint": "0x08001c32",
            "current_name": "initialize_application_08001c32",
            "code": "\nvoid initialize_application_08001c32(void)\n\n{\n  FUN_08004c52();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001c32": "initialize_application_08001c32"
            },
            "calling": [
                "FUN_08005f5e"
            ],
            "called": [
                "FUN_08004c52"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c3a": {
            "entrypoint": "0x08001c3a",
            "current_name": "FUNC_08001c3a",
            "code": "\nvoid FUNC_08001c3a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001c3a": "FUNC_08001c3a"
            },
            "calling": [
                "FUN_08001c88"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08001c3c": {
            "entrypoint": "0x08001c3c",
            "current_name": "initialize_data_08001c3c",
            "code": "\nundefined4 initializeData_08001c3c(uint inputValue)\n\n{\n  int result;\n  \n  result = FUN_08002514(DAT_20000084 / (1000 / DAT_20000078));\n  if (result != 0) {\n    return 1;\n  }\n  if (0xf < inputValue) {\n    return 1;\n  }\n  FUN_08002494(0xffffffff,inputValue,0);\n  DAT_2000007c = inputValue;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001c3c": "initialize_data_08001c3c",
                "param_1": "inputValue",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08003afa",
                "FUN_08001c88"
            ],
            "called": [
                "FUN_08002494",
                "FUN_08002514"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c88": {
            "entrypoint": "0x08001c88",
            "current_name": "set_flags_and_call_functions_08001c88",
            "code": "\n\n\nundefined4 setFlagsAndCallFunctions_08001c88(void)\n\n{\n  _DAT_40022000 = _DAT_40022000 | 0x10;\n  FUN_08002470(3);\n  FUN_08001c3c(0xf);\n  FUNC_08001c3a();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001c88": "set_flags_and_call_functions_08001c88"
            },
            "calling": [
                "FUN_08004c52"
            ],
            "called": [
                "FUN_08001c3c",
                "FUN_08001c3a",
                "FUN_08002470"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001cac": {
            "entrypoint": "0x08001cac",
            "current_name": "addition_08001cac",
            "code": "\nvoid addition_08001cac(void)\n\n{\n  DAT_200006a0 = (uint)DAT_20000078 + DAT_200006a0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001cac": "addition_08001cac"
            },
            "calling": [
                "FUN_08004b9e"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001cc4": {
            "entrypoint": "0x08001cc4",
            "current_name": "get_global_variable_08001cc4",
            "code": "\nundefined4 get_global_variable_08001cc4(void)\n\n{\n  return DAT_200006a0;\n}\n\n",
            "renaming": {
                "FUN_08001cc4": "get_global_variable_08001cc4"
            },
            "calling": [
                "FUN_08004478",
                "FUN_08002384",
                "FUN_080053d4",
                "FUN_08003afa",
                "FUN_08003c90",
                "FUN_08001cd0",
                "FUN_08001f84",
                "FUN_080043b4",
                "FUN_080020f0",
                "FUN_08004b94",
                "FUN_08003688"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001cd0": {
            "entrypoint": "0x08001cd0",
            "current_name": "calculate_execution_time_08001cd0",
            "code": "\nundefined4 calculateExecutionTime_08001cd0(uint **executionData,uint maxExecutionTime)\n\n{\n  int initialTime;\n  uint randomValue;\n  int multiplier;\n  undefined4 result;\n  uint *dataPtr;\n  uint calculationResult;\n  uint counter;\n  \n  counter = 0;\n  initialTime = FUN_08001cc4();\n  calculationResult = DAT_20000084;\n  dataPtr = *executionData;\n  if ((dataPtr[2] & 0x100) == 0) {\n    if (((dataPtr[1] & 0x100) == 0) && ((dataPtr[0xb] & 0xf00000) == 0)) {\n      do {\n        if ((**executionData & 2) != 0) goto LAB_08001de2;\n      } while ((maxExecutionTime == 0xffffffff) ||\n              ((maxExecutionTime != 0 && (multiplier = FUN_08001cc4(), (uint)(multiplier - initialTime) <= maxExecutionTime))));\n      executionData[10] = (uint *)((uint)executionData[10] | 4);\n      *(undefined *)(executionData + 9) = 0;\n      result = 3;\n    }\n    else {\n      randomValue = FUN_08003da4(2);\n      dataPtr = *executionData;\n      if (((dataPtr[4] & 0x24924924) == 0) && ((dataPtr[3] & 0x924924) == 0)) {\n        if ((dataPtr[4] & 0x12492492) == 0) {\n          if ((dataPtr[3] & 0x492492) == 0) {\n            multiplier = 0x14;\n          }\n          else {\n            multiplier = 0x29;\n          }\n        }\n        else {\n          multiplier = 0x29;\n        }\n      }\n      else if (((dataPtr[4] & 0x12492492) == 0) && ((dataPtr[3] & 0x492492) == 0)) {\n        multiplier = 0x54;\n      }\n      else if ((dataPtr[4] & 0x249249) == 0) {\n        if ((dataPtr[3] & 0x249249) == 0) {\n          multiplier = 0x54;\n        }\n        else {\n          multiplier = 0xfc;\n        }\n      }\n      else {\n        multiplier = 0xfc;\n      }\n      calculationResult = (calculationResult / randomValue) * multiplier;\n      for (; counter <= calculationResult && calculationResult - counter != 0; counter = counter + 1) {\n        if ((maxExecutionTime != 0xffffffff) &&\n           ((maxExecutionTime == 0 || (multiplier = FUN_08001cc4(), maxExecutionTime < (uint)(multiplier - initialTime))))) {\n          executionData[10] = (uint *)((uint)executionData[10] | 4);\n          *(undefined *)(executionData + 9) = 0;\n          return 3;\n        }\n      }\nLAB_08001de2:\n      **executionData = 0xffffffed;\n      executionData[10] = (uint *)((uint)executionData[10] | 0x200);\n      if (((*executionData)[2] & 0xe0000) == 0xe0000) {\n        if (executionData[3] == (uint *)0x0) {\n          executionData[10] = (uint *)((uint)executionData[10] & 0xfffffeff);\n          if (((uint)executionData[10] & 0x1000) == 0) {\n            executionData[10] = (uint *)((uint)executionData[10] | 1);\n            result = 0;\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        result = 0;\n      }\n    }\n  }\n  else {\n    executionData[10] = (uint *)((uint)executionData[10] | 0x20);\n    *(undefined *)(executionData + 9) = 0;\n    result = 1;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08001cd0": "calculate_execution_time_08001cd0",
                "param_1": "executionData",
                "param_2": "maxExecutionTime",
                "iVar1": "initialTime",
                "uVar2": "randomValue",
                "iVar3": "multiplier",
                "uVar4": "result",
                "puVar5": "dataPtr",
                "uVar6": "calculationResult",
                "local_1c": "counter"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08003da4",
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001e40": {
            "entrypoint": "0x08001e40",
            "current_name": "get_fourth_element_08001e40",
            "code": "\nundefined4 getFourthElement_08001e40(int *array)\n\n{\n  return *(undefined4 *)(*array + 0x4c);\n}\n\n",
            "renaming": {
                "FUN_08001e40": "get_fourth_element_08001e40",
                "param_1": "array"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001e48": {
            "entrypoint": "0x08001e48",
            "current_name": "update_configuration_08001e48",
            "code": "\nundefined4 updateConfiguration_08001e48(int *configArray,uint *settingsArray)\n\n{\n  undefined4 returnValue;\n  uint shiftValue;\n  int delayCounter;\n  \n  if (*(char *)(configArray + 9) == '\\x01') {\n    returnValue = 2;\n  }\n  else {\n    *(undefined *)(configArray + 9) = 1;\n    shiftValue = settingsArray[1];\n    if (shiftValue < 7) {\n      shiftValue = shiftValue * 5 - 5;\n      *(uint *)(*configArray + 0x34) =\n           *settingsArray << (shiftValue & 0xff) | *(uint *)(*configArray + 0x34) & ~(0x1f << (shiftValue & 0xff));\n    }\n    else if (shiftValue < 0xd) {\n      shiftValue = shiftValue * 5 - 0x23;\n      *(uint *)(*configArray + 0x30) =\n           *settingsArray << (shiftValue & 0xff) | *(uint *)(*configArray + 0x30) & ~(0x1f << (shiftValue & 0xff));\n    }\n    else {\n      shiftValue = shiftValue * 5 - 0x41;\n      *(uint *)(*configArray + 0x2c) =\n           *settingsArray << (shiftValue & 0xff) | *(uint *)(*configArray + 0x2c) & ~(0x1f << (shiftValue & 0xff));\n    }\n    shiftValue = *settingsArray;\n    if (shiftValue < 10) {\n      *(uint *)(*configArray + 0x10) =\n           settingsArray[2] << (shiftValue * 3 & 0xff) |\n           *(uint *)(*configArray + 0x10) & ~(7 << (shiftValue * 3 & 0xff));\n    }\n    else {\n      shiftValue = shiftValue * 3 - 0x1e;\n      *(uint *)(*configArray + 0xc) =\n           settingsArray[2] << (shiftValue & 0xff) | *(uint *)(*configArray + 0xc) & ~(7 << (shiftValue & 0xff));\n    }\n    if (*settingsArray - 0x10 < 2) {\n      if (*configArray == 0x40012400) {\n        if ((uRam40012408 & 0x800000) == 0) {\n          uRam40012408 = uRam40012408 | 0x800000;\n          if (*settingsArray == 0x10) {\n            for (delayCounter = (DAT_20000084 / 1000000) * 10; delayCounter != 0; delayCounter = delayCounter + -1) {\n            }\n            returnValue = 0;\n          }\n          else {\n            returnValue = 0;\n          }\n        }\n        else {\n          returnValue = 0;\n        }\n      }\n      else {\n        configArray[10] = configArray[10] | 0x20;\n        returnValue = 1;\n      }\n    }\n    else {\n      returnValue = 0;\n    }\n    *(undefined *)(configArray + 9) = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08001e48": "update_configuration_08001e48",
                "param_1": "configArray",
                "param_2": "settingsArray",
                "uVar1": "returnValue",
                "uVar2": "shiftValue",
                "local_c": "delayCounter"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001f80": {
            "entrypoint": "0x08001f80",
            "current_name": "get_pointer_from_offset_08001f80",
            "code": "\nundefined4 getPointerFromOffset_08001f80(int baseAddress)\n\n{\n  return *(undefined4 *)(baseAddress + 0x28);\n}\n\n",
            "renaming": {
                "FUN_08001f80": "get_pointer_from_offset_08001f80",
                "param_1": "baseAddress"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001f84": {
            "entrypoint": "0x08001f84",
            "current_name": "enable_feature_08001f84",
            "code": "\nundefined4 enableFeature_08001f84(int *featureData,undefined4 param)\n\n{\n  int result;\n  undefined4 returnValue;\n  int featureValue;\n  uint loopCounter;\n  \n  featureValue = *featureData;\n  if ((*(uint *)(featureValue + 8) & 1) == 0) {\n    *(uint *)(featureValue + 8) = *(uint *)(featureValue + 8) | 1;\n    for (loopCounter = DAT_20000084 / 1000000; loopCounter != 0; loopCounter = loopCounter - 1) {\n    }\n    featureValue = FUN_08001cc4(featureData,param,DAT_20000084 * 0x431bde83);\n    do {\n      if ((*(uint *)(*featureData + 8) & 1) != 0) {\n        return 0;\n      }\n      result = FUN_08001cc4();\n    } while ((uint)(result - featureValue) < 3);\n    featureData[10] = featureData[10] | 0x10;\n    featureData[0xb] = featureData[0xb] | 1;\n    *(undefined *)(featureData + 9) = 0;\n    returnValue = 1;\n  }\n  else {\n    returnValue = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08001f84": "enable_feature_08001f84",
                "param_1": "featureData",
                "param_2": "param",
                "iVar1": "result",
                "iVar3": "featureValue",
                "uVar2": "returnValue",
                "local_14": "loopCounter"
            },
            "calling": [
                "FUN_08002384",
                "FUN_08002004"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002004": {
            "entrypoint": "0x08002004",
            "current_name": "initialize_function_08002004",
            "code": "\n\n\nint initializeFunction_08002004(int *functionParams)\n\n{\n  int returnValue;\n  undefined4 *ptrVar;\n  int iVar3;\n  \n  if (*(char *)(functionParams + 9) != '\\x01') {\n    *(undefined *)(functionParams + 9) = 1;\n    returnValue = FUN_08001f84();\n    if (returnValue == 0) {\n      functionParams[10] = functionParams[10] & 0xfffffcfeU | 0x100;\n      ptrVar = (undefined4 *)*functionParams;\n      if ((ptrVar == (undefined4 *)0x40012800) && ((_DAT_40012404 & 0xf0000) != 0)) {\n        functionParams[10] = functionParams[10] | 0x100000;\n        if ((_DAT_40012404 & 0x400) != 0) {\n          functionParams[10] = functionParams[10] & 0xffffcfffU | 0x1000;\n        }\n      }\n      else {\n        functionParams[10] = functionParams[10] & 0xffefffff;\n        if ((ptrVar[1] & 0x400) != 0) {\n          functionParams[10] = functionParams[10] & 0xffffcfffU | 0x1000;\n        }\n      }\n      if ((functionParams[10] & 0x1000U) == 0) {\n        functionParams[0xb] = 0;\n      }\n      else {\n        functionParams[0xb] = functionParams[0xb] & 0xfffffff9;\n      }\n      *(undefined *)(functionParams + 9) = 0;\n      *ptrVar = 0xfffffffd;\n      iVar3 = *functionParams;\n      if (((*(uint *)(iVar3 + 8) & 0xe0000) == 0xe0000) &&\n         ((iVar3 != 0x40012800 || ((_DAT_40012404 & 0xf0000) == 0)))) {\n        *(uint *)(iVar3 + 8) = *(uint *)(iVar3 + 8) | 0x500000;\n      }\n      else {\n        *(uint *)(iVar3 + 8) = *(uint *)(iVar3 + 8) | 0x100000;\n      }\n    }\n    else {\n      *(undefined *)(functionParams + 9) = 0;\n    }\n    return returnValue;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08002004": "initialize_function_08002004",
                "param_1": "functionParams",
                "iVar1": "returnValue",
                "puVar2": "ptrVar"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08001f84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080020f0": {
            "entrypoint": "0x080020f0",
            "current_name": "update_flags_and_values_080020f0",
            "code": "\nundefined4 updateFlagsAndValues_080020f0(int *array)\n\n{\n  int counter;\n  int value;\n  \n  value = *array;\n  if ((*(uint *)(value + 8) & 1) == 0) {\n    return 0;\n  }\n  *(uint *)(value + 8) = *(uint *)(value + 8) & 0xfffffffe;\n  value = FUN_08001cc4();\n  do {\n    if ((*(uint *)(*array + 8) & 1) == 0) {\n      return 0;\n    }\n    counter = FUN_08001cc4();\n  } while ((uint)(counter - value) < 3);\n  array[10] = array[10] | 0x10;\n  array[11] = array[11] | 1;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080020f0": "update_flags_and_values_080020f0",
                "param_1": "array",
                "iVar1": "counter",
                "iVar2": "value",
                "param_1[10]": "array[10]",
                "param_1[0xb]": "array[11]"
            },
            "calling": [
                "FUN_0800213c",
                "FUN_08002384",
                "FUN_08002348",
                "FUN_0800224c"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800213c": {
            "entrypoint": "0x0800213c",
            "current_name": "initialize_device_0800213c",
            "code": "\nundefined4 initializeDevice_0800213c(int *device)\n\n{\n  int result;\n  uint flags;\n  uint configFlags;\n  \n  if (device == (int *)0x0) {\n    return 1;\n  }\n  if (device[10] == 0) {\n    device[0xb] = 0;\n    *(undefined *)(device + 9) = 0;\n    FUN_08004974();\n  }\n  result = FUN_080020f0(device);\n  if (((device[10] & 0x10U) == 0) && (result == 0)) {\n    device[10] = device[10] & 0xffffeefdU | 2;\n    flags = device[1] | device[7] | device[3] << 1;\n    if (device[2] == 0x100) {\n      configFlags = 0x100;\n    }\n    else {\n      configFlags = 0;\n      if (device[2] == 1) {\n        configFlags = 0x100;\n      }\n    }\n    if (device[5] == 1) {\n      if (device[3] == 0) {\n        configFlags = configFlags | (device[6] + -1) * 0x2000 | 0x800;\n      }\n      else {\n        device[10] = device[10] | 0x20;\n        device[0xb] = device[0xb] | 1;\n      }\n    }\n    *(uint *)(*device + 4) = configFlags | *(uint *)(*device + 4) & 0xffff16ff;\n    *(uint *)(*device + 8) = *(uint *)(*device + 8) & 0xffe1f7fd | flags;\n    if ((device[2] == 0x100) || (device[2] == 1)) {\n      configFlags = (device[4] + -1) * 0x100000;\n    }\n    else {\n      configFlags = 0;\n    }\n    *(uint *)(*device + 0x2c) = configFlags | *(uint *)(*device + 0x2c) & 0xff0fffff;\n    if (flags != (*(uint *)(*device + 8) & 0xff1f0efe)) {\n      device[10] = device[10] & 0xffffffedU | 0x10;\n      device[0xb] = device[0xb] | 1;\n      return 1;\n    }\n    device[0xb] = 0;\n    device[10] = device[10] & 0xfffffffcU | 1;\n    return 0;\n  }\n  device[10] = device[10] | 0x10;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800213c": "initialize_device_0800213c",
                "param_1": "device",
                "iVar1": "result",
                "uVar2": "flags",
                "uVar3": "configFlags"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08004974",
                "FUN_080020f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800224c": {
            "entrypoint": "0x0800224c",
            "current_name": "initialize_memory_0800224c",
            "code": "\nint initializeMemory_0800224c(int *memoryPtr)\n\n{\n  int returnValue;\n  \n  if (memoryPtr == (int *)0x0) {\n    returnValue = 1;\n  }\n  else {\n    memoryPtr[10] = memoryPtr[10] | 2;\n    returnValue = FUN_080020f0();\n    if (returnValue == 0) {\n      *(undefined4 *)*memoryPtr = 0xffffffe0;\n      *(uint *)(*memoryPtr + 4) = *(uint *)(*memoryPtr + 4) & 0xff3f0000;\n      *(uint *)(*memoryPtr + 8) = *(uint *)(*memoryPtr + 8) & 0xff0106f0;\n      *(uint *)(*memoryPtr + 0xc) = *(uint *)(*memoryPtr + 0xc) & 0xff000000;\n      *(uint *)(*memoryPtr + 0x10) = *(uint *)(*memoryPtr + 0x10) & 0xc0000000;\n      *(uint *)(*memoryPtr + 0x14) = *(uint *)(*memoryPtr + 0x14) & 0xfffff000;\n      *(uint *)(*memoryPtr + 0x18) = *(uint *)(*memoryPtr + 0x18) & 0xfffff000;\n      *(uint *)(*memoryPtr + 0x1c) = *(uint *)(*memoryPtr + 0x1c) & 0xfffff000;\n      *(uint *)(*memoryPtr + 0x20) = *(uint *)(*memoryPtr + 0x20) & 0xfffff000;\n      *(uint *)(*memoryPtr + 0x24) = *(uint *)(*memoryPtr + 0x24) & 0xfffff000;\n      *(uint *)(*memoryPtr + 0x28) = *(uint *)(*memoryPtr + 0x28) & 0xfffff000;\n      *(uint *)(*memoryPtr + 0x2c) = *(uint *)(*memoryPtr + 0x2c) & 0xff000000;\n      *(uint *)(*memoryPtr + 0x2c) = *(uint *)(*memoryPtr + 0x2c) & 0xff000000;\n      *(uint *)(*memoryPtr + 0x30) = *(uint *)(*memoryPtr + 0x30) & 0xc0000000;\n      *(uint *)(*memoryPtr + 0x34) = *(uint *)(*memoryPtr + 0x34) & 0xc0000000;\n      *(uint *)(*memoryPtr + 0x38) = *(uint *)(*memoryPtr + 0x38) & 0xffc00000;\n      *(uint *)(*memoryPtr + 0x38) = *(uint *)(*memoryPtr + 0x38) & 0xffc00000;\n      FUN_080049f0(memoryPtr);\n      memoryPtr[0xb] = 0;\n      memoryPtr[10] = 0;\n    }\n    *(undefined *)(memoryPtr + 9) = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_0800224c": "initialize_memory_0800224c",
                "param_1": "memoryPtr",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_080020f0",
                "FUN_080049f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002348": {
            "entrypoint": "0x08002348",
            "current_name": "check_and_update_status_08002348",
            "code": "\nint checkAndUpdateStatus_08002348(int status)\n\n{\n  int result;\n  \n  if (*(char *)(status + 0x24) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(status + 0x24) = 1;\n  result = FUN_080020f0();\n  if (result == 0) {\n    *(uint *)(status + 0x28) = *(uint *)(status + 0x28) & 0xffffeefe | 1;\n  }\n  *(undefined *)(status + 0x24) = 0;\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002348": "check_and_update_status_08002348",
                "param_1": "status",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_080020f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002384": {
            "entrypoint": "0x08002384",
            "current_name": "check_and_update_data_08002384",
            "code": "\nint check_and_update_data_08002384(int *data)\n\n{\n  uint division_result;\n  int result;\n  uint division_factor;\n  int temp1;\n  int temp2;\n  int loop_count;\n  \n  if (*(char *)(data + 9) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(data + 9) = 1;\n  result = FUN_080020f0();\n  if (result == 0) {\n    data[10] = data[10] & 0xffffeefdU | 2;\n    division_result = DAT_20000084;\n    division_factor = FUN_08003da4(2);\n    for (loop_count = division_result / division_factor << 1; loop_count != 0; loop_count = loop_count + -1) {\n    }\n    FUN_08001f84(data);\n    *(uint *)(*data + 8) = *(uint *)(*data + 8) | 8;\n    temp1 = FUN_08001cc4();\n    while (temp2 = *data, (*(uint *)(temp2 + 8) & 8) != 0) {\n      temp2 = FUN_08001cc4();\n      if (10 < (uint)(temp2 - temp1)) {\n        data[10] = data[10] & 0xffffffedU | 0x10;\n        *(undefined *)(data + 9) = 0;\n        return 1;\n      }\n    }\n    *(uint *)(temp2 + 8) = *(uint *)(temp2 + 8) | 4;\n    temp1 = FUN_08001cc4();\n    while ((*(uint *)(*data + 8) & 4) != 0) {\n      temp2 = FUN_08001cc4();\n      if (10 < (uint)(temp2 - temp1)) {\n        data[10] = data[10] & 0xffffffedU | 0x10;\n        *(undefined *)(data + 9) = 0;\n        return 1;\n      }\n    }\n    data[10] = data[10] & 0xfffffffcU | 1;\n  }\n  *(undefined *)(data + 9) = 0;\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002384": "check_and_update_data_08002384",
                "param_1": "data",
                "uVar1": "division_result",
                "iVar2": "result",
                "uVar3": "division_factor",
                "iVar4": "temp1",
                "iVar5": "temp2",
                "local_14": "loop_count"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08003da4",
                "FUN_08001cc4",
                "FUN_08001f84",
                "FUN_080020f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002470": {
            "entrypoint": "0x08002470",
            "current_name": "update_settings_08002470",
            "code": "\n\n\nvoid updateSettings_08002470(uint inputValue)\n\n{\n  _DAT_e000ed0c = (inputValue & 7) << 8 | _DAT_e000ed0c & 0xf8ff | 0x5fa0000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002470": "update_settings_08002470",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08005f5e",
                "FUN_08001c88"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002494": {
            "entrypoint": "0x08002494",
            "current_name": "set_bits_08002494",
            "code": "\n\n\nvoid setBits_08002494(uint inputIndex,uint mask,uint data)\n\n{\n  uint maskedValue;\n  uint bitPosition;\n  \n  maskedValue = (uint)(_DAT_e000ed0c << 0x15) >> 0x1d;\n  bitPosition = 7 - maskedValue;\n  if (3 < bitPosition) {\n    bitPosition = 4;\n  }\n  if (maskedValue + 4 < 7) {\n    maskedValue = 0;\n  }\n  else {\n    maskedValue = maskedValue - 3;\n  }\n  maskedValue = (mask & (1 << (bitPosition & 0xff)) - 1U) << (maskedValue & 0xff) |\n          (1 << (maskedValue & 0xff)) - 1U & data;\n  if ((int)inputIndex < 0) {\n    *(char *)((inputIndex & 0xf) + 0xe000ed14) = (char)(maskedValue << 4);\n  }\n  else {\n    *(char *)(inputIndex + 0xe000e400) = (char)(maskedValue << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002494": "set_bits_08002494",
                "param_1": "inputIndex",
                "param_2": "mask",
                "param_3": "data",
                "uVar1": "maskedValue",
                "uVar2": "bitPosition"
            },
            "calling": [
                "FUN_08005510",
                "FUN_08001b48",
                "FUN_08001c3c",
                "FUN_08005568"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080024f8": {
            "entrypoint": "0x080024f8",
            "current_name": "FUNC_080024f8",
            "code": "\nvoid FUNC_080024f8(uint param_1)\n\n{\n  if (-1 < (int)param_1) {\n    *(int *)((param_1 >> 5) * 4 + -0x1fff1f00) = 1 << (param_1 & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080024f8": "FUNC_080024f8"
            },
            "calling": [
                "FUN_08005510",
                "FUN_08005568"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002514": {
            "entrypoint": "0x08002514",
            "current_name": "initialize_memory_08002514",
            "code": "\n\n\nundefined4 initializeMemory_08002514(int inputValue)\n\n{\n  if (inputValue - 1U < 0x1000000) {\n    _DAT_e000e014 = inputValue - 1U;\n    DAT_e000ed23 = 0xf0;\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08002514": "initialize_memory_08002514",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08001b48",
                "FUN_08001c3c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002540": {
            "entrypoint": "0x08002540",
            "current_name": "set_bit_in_array_08002540",
            "code": "\nvoid setBitInArray_08002540(uint index)\n\n{\n  if (-1 < (int)index) {\n    *(int *)(((index >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (index & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002540": "set_bit_in_array_08002540",
                "param_1": "index"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002560": {
            "entrypoint": "0x08002560",
            "current_name": "set_e000e010_bit_08002560",
            "code": "\n\n\nvoid set_e000e010_bit_08002560(int input_param)\n\n{\n  if (input_param != 4) {\n    _DAT_e000e010 = _DAT_e000e010 & 0xfffffffb;\n    return;\n  }\n  _DAT_e000e010 = _DAT_e000e010 | 4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002560": "set_e000e010_bit_08002560",
                "param_1": "input_param"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002580": {
            "entrypoint": "0x08002580",
            "current_name": "FUNC_08002580",
            "code": "\nvoid FUNC_08002580(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002580": "FUNC_08002580"
            },
            "calling": [
                "FUN_08002582"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002582": {
            "entrypoint": "0x08002582",
            "current_name": "initialize_08002582",
            "code": "\nvoid initialize_08002582(void)\n\n{\n  FUNC_08002580();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002582": "initialize_08002582"
            },
            "calling": [
                "FUN_08004b9e"
            ],
            "called": [
                "FUN_08002580"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800258c": {
            "entrypoint": "0x0800258c",
            "current_name": "initialize_data_0800258c",
            "code": "\n\n\nundefined4 initializeData_0800258c(uint **dataPointer)\n\n{\n  uint *currentValue;\n  \n  if (*(char *)((int)dataPointer + 0x21) != '\\x02') {\n    dataPointer[0xe] = (uint *)0x4;\n    return 1;\n  }\n  **dataPointer = **dataPointer & 0xfffffff1;\n  **dataPointer = **dataPointer & 0xfffffffe;\n  currentValue = *dataPointer;\n  if (currentValue == (uint *)0x40020008) {\n    _DAT_40020004 = 1;\n  }\n  else if (currentValue == (uint *)0x4002001c) {\n    _DAT_40020004 = 0x10;\n  }\n  else if (currentValue == (uint *)0x40020030) {\n    _DAT_40020004 = 0x100;\n  }\n  else if (currentValue == (uint *)0x40020044) {\n    _DAT_40020004 = 0x1000;\n  }\n  else if (currentValue == (uint *)0x40020058) {\n    _DAT_40020004 = 0x10000;\n  }\n  else if (currentValue == (uint *)0x4002006c) {\n    _DAT_40020004 = 0x100000;\n  }\n  else {\n    _DAT_40020004 = 0x1000000;\n  }\n  *(undefined *)((int)dataPointer + 0x21) = 1;\n  *(undefined *)(dataPointer + 8) = 0;\n  if (dataPointer[0xd] != (uint *)0x0) {\n    (*(code *)dataPointer[0xd])();\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800258c": "initialize_data_0800258c",
                "param_1": "dataPointer",
                "puVar1": "currentValue"
            },
            "calling": [
                "FUN_0800316c",
                "FUN_080046b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002624": {
            "entrypoint": "0x08002624",
            "current_name": "update_registers_08002624",
            "code": "\n\n\nvoid updateRegisters_08002624(uint *registerSettings,uint *controlBits)\n\n{\n  uint *registerPtr;\n  uint bitMask;\n  uint controlBitsMasked;\n  uint bitCount;\n  uint opcode;\n  uint registerValue;\n  int shiftValue;\n  int registerIndex;\n  \n  registerValue = 0;\n  bitCount = 0;\n  do {\n    if (0xf < bitCount) {\n      return;\n    }\n    bitMask = 1 << (bitCount & 0xff);\n    controlBitsMasked = *controlBits & bitMask;\n    if (bitMask == controlBitsMasked) {\n      opcode = controlBits[1];\n      if (opcode == 0x12) {\n        registerValue = controlBits[3] + 0xc;\n      }\n      else if (opcode < 0x13) {\n        if (opcode == 2) {\n          registerValue = controlBits[3] + 8;\n        }\n        else if (opcode < 3) {\n          if (opcode == 0) goto LAB_08002776;\n          if (opcode == 1) {\n            registerValue = controlBits[3];\n          }\n        }\n        else if (opcode == 3) {\n          registerValue = 0;\n        }\n        else if (opcode == 0x11) {\n          registerValue = controlBits[3] + 4;\n        }\n      }\n      else if (opcode == 0x10210000) {\nLAB_08002776:\n        if (controlBits[2] == 0) {\n          registerValue = 4;\n        }\n        else if (controlBits[2] == 1) {\n          registerSettings[4] = bitMask;\n          registerValue = 8;\n        }\n        else {\n          registerSettings[5] = bitMask;\n          registerValue = 8;\n        }\n      }\n      else if (opcode < 0x10210001) {\n        if ((opcode == 0x10110000) || (opcode == 0x10120000)) goto LAB_08002776;\n      }\n      else if ((opcode == 0x10310000) || ((opcode == 0x10320000 || (opcode == 0x10220000))))\n      goto LAB_08002776;\n      bitMask = bitCount;\n      registerPtr = registerSettings;\n      if (0xff < controlBitsMasked) {\n        bitMask = bitCount - 8;\n        registerPtr = registerSettings + 1;\n      }\n      *registerPtr = *registerPtr & ~(0xf << (bitMask << 2 & 0xff)) | registerValue << (bitMask << 2 & 0xff);\n      if ((controlBits[1] & 0x10000000) != 0) {\n        _DAT_40021018 = _DAT_40021018 | 1;\n        shiftValue = (bitCount & 3) << 2;\n        if (registerSettings == (uint *)0x40010800) {\n          registerIndex = 0;\n        }\n        else if (registerSettings == (uint *)0x40010c00) {\n          registerIndex = 1;\n        }\n        else if (registerSettings == (uint *)0x40011000) {\n          registerIndex = 2;\n        }\n        else if (registerSettings == (uint *)0x40011400) {\n          registerIndex = 3;\n        }\n        else {\n          registerIndex = 4;\n        }\n        *(uint *)(((bitCount >> 2) + 2) * 4 + 0x40010000) =\n             *(uint *)(((bitCount >> 2) + 2) * 4 + 0x40010000) & ~(0xf << shiftValue) | registerIndex << shiftValue;\n        if ((controlBits[1] & 0x10000) == 0) {\n          _DAT_40010400 = _DAT_40010400 & ~controlBitsMasked;\n        }\n        else {\n          _DAT_40010400 = _DAT_40010400 | controlBitsMasked;\n        }\n        if ((controlBits[1] & 0x20000) == 0) {\n          _DAT_40010404 = _DAT_40010404 & ~controlBitsMasked;\n        }\n        else {\n          _DAT_40010404 = _DAT_40010404 | controlBitsMasked;\n        }\n        if ((controlBits[1] & 0x100000) == 0) {\n          _DAT_40010408 = _DAT_40010408 & ~controlBitsMasked;\n        }\n        else {\n          _DAT_40010408 = _DAT_40010408 | controlBitsMasked;\n        }\n        if ((controlBits[1] & 0x200000) == 0) {\n          _DAT_4001040c = _DAT_4001040c & ~controlBitsMasked;\n        }\n        else {\n          _DAT_4001040c = controlBitsMasked | _DAT_4001040c;\n        }\n      }\n    }\n    bitCount = bitCount + 1;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08002624": "update_registers_08002624",
                "param_1": "registerSettings",
                "param_2": "controlBits",
                "puVar1": "registerPtr",
                "uVar2": "bitMask",
                "uVar3": "controlBitsMasked",
                "uVar4": "bitCount",
                "uVar5": "opcode",
                "uVar6": "registerValue",
                "iVar7": "shiftValue",
                "iVar8": "registerIndex"
            },
            "calling": [
                "FUN_08004bb0",
                "FUN_08004974",
                "FUN_08004f4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002810": {
            "entrypoint": "0x08002810",
            "current_name": "check_mask_and_value_08002810",
            "code": "\nundefined4 check_mask_and_value_08002810(int data_address,uint value)\n\n{\n  if ((value & *(uint *)(data_address + 8)) == 0) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08002810": "check_mask_and_value_08002810",
                "param_1": "data_address",
                "param_2": "value"
            },
            "calling": [
                "FUN_08004c48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800281e": {
            "entrypoint": "0x0800281e",
            "current_name": "set_param_value_0800281e",
            "code": "\nvoid setParamValue_0800281e(int objectAddress,int paramValue,int isShifted)\n\n{\n  if (isShifted == 0) {\n    *(int *)(objectAddress + 0x10) = paramValue << 0x10;\n    return;\n  }\n  *(int *)(objectAddress + 0x10) = paramValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800281e": "set_param_value_0800281e",
                "param_1": "objectAddress",
                "param_2": "paramValue",
                "param_3": "isShifted"
            },
            "calling": [
                "FUN_08004c30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800282c": {
            "entrypoint": "0x0800282c",
            "current_name": "update_data_if_necessary_0800282c",
            "code": "\n\n\nvoid updateDataIfNecessary_0800282c(uint dataToUpdate)\n\n{\n  if ((_DAT_40010414 & dataToUpdate) != 0) {\n    _DAT_40010414 = dataToUpdate;\n    FUN_080060e4();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800282c": "update_data_if_necessary_0800282c",
                "param_1": "dataToUpdate"
            },
            "calling": [],
            "called": [
                "FUN_080060e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002848": {
            "entrypoint": "0x08002848",
            "current_name": "update_status_08002848",
            "code": "\nundefined4 updateStatus_08002848(int *statusPtr)\n\n{\n  if (*(char *)((int)statusPtr + 0x3e) == '@') {\n    if (condition == 0) {\n      *(uint *)(*statusPtr + 0x10) = value & 0xfe;\n    }\n    else {\n      *(uint *)(*statusPtr + 0x10) = value & 0xffU | 1;\n    }\n  }\n  else if (statusPtr[4] == 0x4000) {\n    if (*(char *)((int)statusPtr + 0x3d) == '!') {\n      *(uint *)(*statusPtr + 0x10) = value & 0xfe;\n    }\n    else {\n      *(uint *)(*statusPtr + 0x10) = value & 0xffU | 1;\n    }\n  }\n  else if (condition == 0) {\n    *(uint *)(*statusPtr + 0x10) = (uint)(value << 0x10) >> 0x17 & 6 | 0xf0;\n  }\n  else if (condition == 1) {\n    *(uint *)(*statusPtr + 0x10) = (uint)(value << 0x10) >> 0x17 & 6 | 0xf1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002848": "update_status_08002848",
                "param_1": "statusPtr",
                "param_1[0x14]": "condition",
                "param_1[0x11]": "value"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080028d2": {
            "entrypoint": "0x080028d2",
            "current_name": "update_value_in_memory_080028d2",
            "code": "\nundefined4 updateValueInMemory_080028d2(int *memoryAddress)\n\n{\n  *(uint *)(*memoryAddress + 0x10) = sourceValue & 0xff;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080028d2": "update_value_in_memory_080028d2",
                "param_1": "memoryAddress",
                "param_1[0x11]": "sourceValue"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080028de": {
            "entrypoint": "0x080028de",
            "current_name": "update_flags_080028de",
            "code": "\nundefined4 updateFlags_080028de(uint **params)\n\n{\n  uint *ptrVar1;\n  \n  ptrVar1 = params[0xb];\n  if ((*(char *)((int)params + 0x3d) == '\\\"') &&\n     ((params[0x14] != (uint *)0x0 || (*(char *)((int)params + 0x3e) != '@')))) {\n    if ((params[0x14] == (uint *)0x0) && (params[4] == (uint *)0xc000)) {\n      **params = **params | 0x100;\n      params[0x14] = (uint *)((int)params[0x14] + 1);\n    }\n    else {\n      if (*(short *)((int)params + 0x2a) == 0) {\n        **params = **params | 0x200;\n      }\n      else if (*(short *)((int)params + 0x2a) == 1) {\n        if (ptrVar1 == (uint *)0xffff0000) {\n          **params = **params & 0xfffffbff;\n          ptrVar1 = *params;\n          if ((ptrVar1[1] & 0x800) == 0) {\n            *ptrVar1 = *ptrVar1 | 0x200;\n          }\n          else {\n            *ptrVar1 = *ptrVar1 & 0xfffffbff;\n          }\n        }\n        else if (((ptrVar1 == (uint *)0x4) || (ptrVar1 == (uint *)0x8)) ||\n                (params[0xc] == (uint *)0x12)) {\n          **params = **params & 0xfffffbff;\n          **params = **params | 0x200;\n        }\n        else if (params[0xb] == (uint *)0x2) {\n          **params = **params | 0x400;\n        }\n        else {\n          **params = **params & 0xfffffbff;\n        }\n      }\n      else if (*(short *)((int)params + 0x2a) == 2) {\n        if (params[0xb] == (uint *)0x2) {\n          **params = **params | 0x400;\n        }\n        else {\n          **params = **params | 0x800;\n          **params = **params & 0xfffffbff;\n        }\n        ptrVar1 = *params;\n        if ((ptrVar1[1] & 0x800) != 0) {\n          ptrVar1[1] = ptrVar1[1] | 0x1000;\n        }\n      }\n      else {\n        **params = **params | 0x400;\n        ptrVar1 = *params;\n        if ((ptrVar1[1] & 0x800) != 0) {\n          ptrVar1[1] = ptrVar1[1] | 0x1000;\n        }\n      }\n      params[0x14] = (uint *)0x0;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080028de": "update_flags_080028de",
                "param_1": "params",
                "puVar1": "ptrVar1"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ab8": {
            "entrypoint": "0x08002ab8",
            "current_name": "update_data_08002ab8",
            "code": "\nundefined4 updateData_08002ab8(int *dataPointer)\n\n{\n  byte *bytePointer;\n  \n  if (*(short *)((int)dataPointer + 0x2a) != 0) {\n    bytePointer = (byte *)dataPointer[9];\n    dataPointer[9] = (int)(bytePointer + 1);\n    *(uint *)(*dataPointer + 0x10) = (uint)*bytePointer;\n    *(short *)((int)dataPointer + 0x2a) = *(short *)((int)dataPointer + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002ab8": "update_data_08002ab8",
                "param_1": "dataPointer",
                "pbVar1": "bytePointer"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ad8": {
            "entrypoint": "0x08002ad8",
            "current_name": "update_and_decrement_08002ad8",
            "code": "\nundefined4 updateAndDecrement_08002ad8(int *arr)\n\n{\n  undefined *ptr;\n  \n  if (*(short *)((int)arr + 0x2a) != 0) {\n    ptr = (undefined *)arr[9];\n    arr[9] = (int)(ptr + 1);\n    *ptr = (char)*(undefined4 *)(*arr + 0x10);\n    *(short *)((int)arr + 0x2a) = *(short *)((int)arr + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002ad8": "update_and_decrement_08002ad8",
                "param_1": "arr",
                "puVar1": "ptr"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002af8": {
            "entrypoint": "0x08002af8",
            "current_name": "process_input_08002af8",
            "code": "\nundefined4 processInput_08002af8(uint **inputPtr,uint *dataPtr,int size,uint *outputPtr)\n\n{\n  undefined4 result;\n  uint *ptr;\n  \n  if (*(char *)((int)inputPtr + 0x3d) == '(') {\n    if (dataPtr == (uint *)0x0) {\n      result = 1;\n    }\n    else if (size == 0) {\n      result = 1;\n    }\n    else if (*(char *)(inputPtr + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(inputPtr + 0xf) = 1;\n      ptr = *inputPtr;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **inputPtr = **inputPtr & 0xfffff7ff;\n      *(undefined *)((int)inputPtr + 0x3d) = 0x29;\n      *(undefined *)((int)inputPtr + 0x3e) = 0x20;\n      result = 0;\n      tempPtr = (uint *)0x0;\n      dataPtr = dataPtr;\n      *(short *)((int)inputPtr + 0x2a) = (short)size;\n      outputPtr = outputPtr;\n      *(undefined2 *)(inputPtr + 10) = *(undefined2 *)((int)inputPtr + 0x2a);\n      *(undefined *)(inputPtr + 0xf) = 0;\n      (*inputPtr)[1] = (*inputPtr)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002af8": "process_input_08002af8",
                "param_1": "inputPtr",
                "param_2": "dataPtr",
                "param_3": "size",
                "param_4": "outputPtr",
                "uVar1": "result",
                "puVar2": "ptr",
                "param_1[0x10]": "tempPtr",
                "param_1[9]": "dataPtr",
                "param_1[0xb]": "outputPtr"
            },
            "calling": [
                "FUN_08004e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002b84": {
            "entrypoint": "0x08002b84",
            "current_name": "update_parameter_08002b84",
            "code": "\nundefined4 updateParameter_08002b84(uint **parameterArray,uint *inputArray,int inputSize,uint *outputArray)\n\n{\n  undefined4 result;\n  uint *pointerVar;\n  \n  if (*(char *)((int)parameterArray + 0x3d) == '(') {\n    if (inputArray == (uint *)0x0) {\n      result = 1;\n    }\n    else if (inputSize == 0) {\n      result = 1;\n    }\n    else if (*(char *)(parameterArray + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(parameterArray + 0xf) = 1;\n      pointerVar = *parameterArray;\n      if ((*pointerVar & 1) == 0) {\n        *pointerVar = *pointerVar | 1;\n      }\n      **parameterArray = **parameterArray & 0xfffff7ff;\n      *(undefined *)((int)parameterArray + 0x3d) = 0x2a;\n      *(undefined *)((int)parameterArray + 0x3e) = 0x20;\n      result = 0;\n      var1 = (uint *)0x0;\n      var2 = inputArray;\n      *(short *)((int)parameterArray + 0x2a) = (short)inputSize;\n      var3 = outputArray;\n      *(undefined2 *)(parameterArray + 10) = *(undefined2 *)((int)parameterArray + 0x2a);\n      *(undefined *)(parameterArray + 0xf) = 0;\n      (*parameterArray)[1] = (*parameterArray)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002b84": "update_parameter_08002b84",
                "param_1": "parameterArray",
                "param_2": "inputArray",
                "param_3": "inputSize",
                "param_4": "outputArray",
                "uVar1": "result",
                "puVar2": "pointerVar",
                "param_1[0x10]": "var1",
                "param_1[9]": "var2",
                "param_1[0xb]": "var3"
            },
            "calling": [
                "FUN_08004e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c10": {
            "entrypoint": "0x08002c10",
            "current_name": "initialize_parameters_08002c10",
            "code": "\nundefined4 initializeParameters_08002c10(uint **parameter)\n\n{\n  uint *pointerToParameter;\n  \n  if (*(char *)((int)parameter + 0x3d) != ' ') {\n    return 2;\n  }\n  *(undefined *)((int)parameter + 0x3d) = 0x28;\n  pointerToParameter = *parameter;\n  if ((*pointerToParameter & 1) == 0) {\n    *pointerToParameter = *pointerToParameter | 1;\n  }\n  **parameter = **parameter | 0x400;\n  (*parameter)[1] = (*parameter)[1] | 0x300;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002c10": "initialize_parameters_08002c10",
                "param_1": "parameter",
                "puVar1": "pointerToParameter"
            },
            "calling": [
                "FUN_08004ec4",
                "FUN_08004ef4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c4e": {
            "entrypoint": "0x08002c4e",
            "current_name": "FUNC_08002c4e",
            "code": "\nvoid FUNC_08002c4e(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c4e": "FUNC_08002c4e"
            },
            "calling": [
                "FUN_08002db2",
                "FUN_08002efc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002c50": {
            "entrypoint": "0x08002c50",
            "current_name": "FUNC_08002c50",
            "code": "\nvoid FUNC_08002c50(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c50": "FUNC_08002c50"
            },
            "calling": [
                "FUN_0800306c",
                "FUN_08002f9c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002c52": {
            "entrypoint": "0x08002c52",
            "current_name": "FUNC_08002c52",
            "code": "\nvoid FUNC_08002c52(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c52": "FUNC_08002c52"
            },
            "calling": [
                "FUN_08002c54",
                "FUN_08002d1c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002c54": {
            "entrypoint": "0x08002c54",
            "current_name": "update_and_check_value_08002c54",
            "code": "\nundefined4 updateAndCheckValue_08002c54(int *inputArray)\n\n{\n  char characterValue;\n  byte *bytePointer;\n  \n  characterValue = *(char *)((int)inputArray + 0x3d);\n  if (*(short *)((int)inputArray + 0x2a) != 0) {\n    bytePointer = (byte *)inputArray[9];\n    inputArray[9] = (int)(bytePointer + 1);\n    *(uint *)(*inputArray + 0x10) = (uint)*bytePointer;\n    *(short *)((int)inputArray + 0x2a) = *(short *)((int)inputArray + 0x2a) + -1;\n    if ((*(short *)((int)inputArray + 0x2a) == 0) && (characterValue == ')')) {\n      *(uint *)(*inputArray + 4) = *(uint *)(*inputArray + 4) & 0xfffffbff;\n      inputArray[0xc] = 0x21;\n      *(undefined *)((int)inputArray + 0x3d) = 0x28;\n      FUNC_08002c52();\n    }\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002c54": "update_and_check_value_08002c54",
                "param_1": "inputArray",
                "cVar1": "characterValue",
                "pbVar2": "bytePointer"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002c52"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ca4": {
            "entrypoint": "0x08002ca4",
            "current_name": "FUNC_08002ca4",
            "code": "\nvoid FUNC_08002ca4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ca4": "FUNC_08002ca4"
            },
            "calling": [
                "FUN_08002ca6",
                "FUN_080032b4"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002ca6": {
            "entrypoint": "0x08002ca6",
            "current_name": "update_data_08002ca6",
            "code": "\nundefined4 updateData_08002ca6(int *data)\n\n{\n  char charValue;\n  undefined *pointer;\n  \n  charValue = *(char *)((int)data + 0x3d);\n  if (*(short *)((int)data + 0x2a) != 0) {\n    pointer = (undefined *)data[9];\n    data[9] = (int)(pointer + 1);\n    *pointer = (char)*(undefined4 *)(*data + 0x10);\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    if ((*(short *)((int)data + 0x2a) == 0) && (charValue == '*')) {\n      *(uint *)(*data + 4) = *(uint *)(*data + 4) & 0xfffffbff;\n      data[0xc] = 0x22;\n      *(undefined *)((int)data + 0x3d) = 0x28;\n      FUNC_08002ca4();\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002ca6": "update_data_08002ca6",
                "param_1": "data",
                "cVar1": "charValue",
                "puVar2": "pointer",
                "param_1[9]": "data[9]"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002ca4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002cf2": {
            "entrypoint": "0x08002cf2",
            "current_name": "process_data_08002cf2",
            "code": "\nundefined4 processData_08002cf2(int *dataPointer,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined2 resultValue;\n  uint flagValue;\n  \n  flagValue = *(uint *)(*dataPointer + 0x18);\n  if ((flagValue & 0x80) == 0) {\n    resultValue = *(undefined2 *)(dataPointer + 3);\n  }\n  else {\n    resultValue = *(undefined2 *)(dataPointer + 6);\n  }\n  FUN_08004e74(dataPointer,(*(uint *)(*dataPointer + 0x18) & 4) == 0,resultValue,flagValue,param4);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002cf2": "process_data_08002cf2",
                "param_1": "dataPointer",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "resultValue",
                "uVar2": "flagValue"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08004e74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002d1c": {
            "entrypoint": "0x08002d1c",
            "current_name": "adjust_flags_and_values_08002d1c",
            "code": "\nundefined4 adjustFlagsAndValues_08002d1c(uint **param)\n\n{\n  if (((param[11] == (uint *)0x4) || (param[11] == (uint *)0x8)) &&\n     (*(char *)((int)param + 0x3d) == '(')) {\n    param[11] = (uint *)0xffff0000;\n    (*param)[1] = (*param)[1] & 0xfffff8ff;\n    (*param)[5] = 0xfffffbff;\n    **param = **param & 0xfffffbff;\n    param[12] = (uint *)0x0;\n    *(undefined *)((int)param + 0x3d) = 0x20;\n    *(undefined *)((int)param + 0x3e) = 0;\n    FUN_08004ec4();\n  }\n  else if (*(char *)((int)param + 0x3d) == '!') {\n    param[11] = (uint *)0xffff0000;\n    param[12] = (uint *)0x21;\n    *(undefined *)((int)param + 0x3d) = 0x20;\n    *(undefined *)((int)param + 0x3e) = 0;\n    (*param)[1] = (*param)[1] & 0xfffff8ff;\n    (*param)[5] = 0xfffffbff;\n    **param = **param & 0xfffffbff;\n    FUNC_08002c52();\n  }\n  else {\n    (*param)[5] = 0xfffffbff;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002d1c": "adjust_flags_and_values_08002d1c",
                "param_1": "param",
                "param_1[0xb]": "param[11]",
                "param_1[0xc]": "param[12]"
            },
            "calling": [
                "FUN_08003520"
            ],
            "called": [
                "FUN_08004ec4",
                "FUN_08002c52"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002db0": {
            "entrypoint": "0x08002db0",
            "current_name": "FUNC_08002db0",
            "code": "\nvoid FUNC_08002db0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002db0": "FUNC_08002db0"
            },
            "calling": [
                "FUN_08002db2",
                "FUN_08002efc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002db2": {
            "entrypoint": "0x08002db2",
            "current_name": "process_input_08002db2",
            "code": "\nundefined4 process_input_08002db2(uint **input_data)\n\n{\n  char char_value;\n  uint *pointer_value;\n  \n  char_value = *(char *)((int)input_data + 0x3d);\n  pointer_value = input_data[11];\n  if ((*(short *)(input_data + 10) == 0) && (char_value == '!')) {\n    if ((pointer_value == (uint *)0x4) || ((pointer_value == (uint *)0x8 || (pointer_value == (uint *)0xffff0000)))) {\n      (*input_data)[1] = (*input_data)[1] & 0xfffff8ff;\n      **input_data = **input_data | 0x200;\n      input_data[12] = (uint *)0x0;\n      *(undefined *)((int)input_data + 0x3d) = 0x20;\n      if (*(char *)((int)input_data + 0x3e) == '@') {\n        *(undefined *)((int)input_data + 0x3e) = 0;\n        FUNC_08002db0();\n      }\n      else {\n        *(undefined *)((int)input_data + 0x3e) = 0;\n        FUNC_08002c4e();\n      }\n    }\n    else {\n      (*input_data)[1] = (*input_data)[1] & 0xfffff8ff;\n      input_data[12] = (uint *)0x11;\n      *(undefined *)((int)input_data + 0x3e) = 0;\n      *(undefined *)((int)input_data + 0x3d) = 0x20;\n      FUNC_08002c4e();\n    }\n  }\n  else if ((char_value == '!') || ((*(char *)((int)input_data + 0x3e) == '@' && (char_value == '\\\"')))) {\n    if (*(short *)((int)input_data + 0x2a) == 0) {\n      (*input_data)[1] = (*input_data)[1] & 0xfffffbff;\n    }\n    else if (*(char *)((int)input_data + 0x3e) == '@') {\n      if (input_data[20] == (uint *)0x0) {\n        if (input_data[0x13] == (uint *)0x1) {\n          (*input_data)[4] = (uint)input_data[18] & 0xff;\n          input_data[20] = (uint *)((int)input_data[20] + 2);\n        }\n        else {\n          (*input_data)[4] = (uint)((int)input_data[0x12] << 0x10) >> 0x18;\n          input_data[20] = (uint *)((int)input_data[20] + 1);\n        }\n      }\n      else if (input_data[20] == (uint *)0x1) {\n        (*input_data)[4] = (uint)input_data[18] & 0xff;\n        input_data[20] = (uint *)((int)input_data[20] + 1);\n      }\n      else if (input_data[20] == (uint *)0x2) {\n        if (*(char *)((int)input_data + 0x3d) == '\\\"') {\n          **input_data = **input_data | 0x100;\n        }\n        else if (*(char *)((int)input_data + 0x3d) == '!') {\n          pointer_value = input_data[9];\n          input_data[9] = (uint *)((int)pointer_value + 1);\n          (*input_data)[4] = (uint)*(byte *)pointer_value;\n          *(short *)((int)input_data + 0x2a) = *(short *)((int)input_data + 0x2a) + -1;\n        }\n      }\n    }\n    else {\n      pointer_value = input_data[9];\n      input_data[9] = (uint *)((int)pointer_value + 1);\n      (*input_data)[4] = (uint)*(byte *)pointer_value;\n      *(short *)((int)input_data + 0x2a) = *(short *)((int)input_data + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002db2": "process_input_08002db2",
                "param_1": "input_data",
                "cVar1": "char_value",
                "puVar2": "pointer_value",
                "param_1[0xb]": "input_data[11]",
                "param_1[0xc]": "input_data[12]",
                "param_1[0x14]": "input_data[20]",
                "(uint)param_1[0x12]": "(uint)input_data[18]"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002db0",
                "FUN_08002c4e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002efc": {
            "entrypoint": "0x08002efc",
            "current_name": "process_input_08002efc",
            "code": "\nundefined4 processInput_08002efc(uint **inputArray)\n\n{\n  uint *tempVar1;\n  \n  tempVar1 = inputArray[0xb];\n  if (*(char *)((int)inputArray + 0x3d) == '!') {\n    if (*(short *)((int)inputArray + 0x2a) == 0) {\n      if (((tempVar1 == (uint *)0x4) || (tempVar1 == (uint *)0x8)) || (tempVar1 == (uint *)0xffff0000)) {\n        (*inputArray)[1] = (*inputArray)[1] & 0xfffff8ff;\n        **inputArray = **inputArray | 0x200;\n        inputArray[0xc] = (uint *)0x0;\n        *(undefined *)((int)inputArray + 0x3d) = 0x20;\n        if (*(char *)((int)inputArray + 0x3e) == '@') {\n          *(undefined *)((int)inputArray + 0x3e) = 0;\n          FUNC_08002db0();\n        }\n        else {\n          *(undefined *)((int)inputArray + 0x3e) = 0;\n          FUNC_08002c4e();\n        }\n      }\n      else {\n        (*inputArray)[1] = (*inputArray)[1] & 0xfffff8ff;\n        inputArray[0xc] = (uint *)0x11;\n        *(undefined *)((int)inputArray + 0x3e) = 0;\n        *(undefined *)((int)inputArray + 0x3d) = 0x20;\n        FUNC_08002c4e();\n      }\n    }\n    else {\n      tempVar1 = inputArray[9];\n      inputArray[9] = (uint *)((int)tempVar1 + 1);\n      (*inputArray)[4] = (uint)*(byte *)tempVar1;\n      *(short *)((int)inputArray + 0x2a) = *(short *)((int)inputArray + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002efc": "process_input_08002efc",
                "param_1": "inputArray",
                "puVar1": "tempVar1"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002db0",
                "FUN_08002c4e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f9a": {
            "entrypoint": "0x08002f9a",
            "current_name": "FUNC_08002f9a",
            "code": "\nvoid FUNC_08002f9a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f9a": "FUNC_08002f9a"
            },
            "calling": [
                "FUN_0800306c",
                "FUN_08002f9c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002f9c": {
            "entrypoint": "0x08002f9c",
            "current_name": "process_string_08002f9c",
            "code": "\nundefined4 processString_08002f9c(uint **stringPtr)\n\n{\n  uint *charPtr;\n  \n  if (*(char *)((int)stringPtr + 0x3d) == '\\\"') {\n    if (*(ushort *)((int)stringPtr + 0x2a) < 4) {\n      if (*(ushort *)((int)stringPtr + 0x2a) - 2 < 2) {\n        if (stringPtr[0xb] == (uint *)0x2) {\n          **stringPtr = **stringPtr | 0x400;\n        }\n        else {\n          **stringPtr = **stringPtr & 0xfffffbff;\n          **stringPtr = **stringPtr | 0x800;\n        }\n        (*stringPtr)[1] = (*stringPtr)[1] & 0xfffffbff;\n      }\n      else {\n        if (stringPtr[0xb] == (uint *)0x2) {\n          **stringPtr = **stringPtr | 0x400;\n        }\n        else {\n          **stringPtr = **stringPtr & 0xfffffbff;\n        }\n        (*stringPtr)[1] = (*stringPtr)[1] & 0xfffff8ff;\n        charPtr = stringPtr[9];\n        stringPtr[9] = (uint *)((int)charPtr + 1);\n        *(char *)charPtr = (char)(*stringPtr)[4];\n        *(short *)((int)stringPtr + 0x2a) = *(short *)((int)stringPtr + 0x2a) + -1;\n        *(undefined *)((int)stringPtr + 0x3d) = 0x20;\n        stringPtr[0xc] = (uint *)0x0;\n        if (*(char *)((int)stringPtr + 0x3e) == '@') {\n          *(undefined *)((int)stringPtr + 0x3e) = 0;\n          FUNC_08002f9a();\n        }\n        else {\n          *(undefined *)((int)stringPtr + 0x3e) = 0;\n          FUNC_08002c50();\n        }\n      }\n    }\n    else {\n      charPtr = stringPtr[9];\n      stringPtr[9] = (uint *)((int)charPtr + 1);\n      *(char *)charPtr = (char)(*stringPtr)[4];\n      *(short *)((int)stringPtr + 0x2a) = *(short *)((int)stringPtr + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002f9c": "process_string_08002f9c",
                "param_1": "stringPtr",
                "puVar1": "charPtr"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002f9a",
                "FUN_08002c50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800306c": {
            "entrypoint": "0x0800306c",
            "current_name": "process_data_0800306c",
            "code": "\nundefined4 processData_0800306c(uint **input)\n\n{\n  uint *ptrValue;\n  \n  ptrValue = ptrArg1;\n  if (*(short *)((int)input + 0x2a) == 3) {\n    if (((ptrValue == (uint *)0x4) || (ptrValue == (uint *)0x8)) || (ptrValue == (uint *)0xffff0000)) {\n      **input = **input & 0xfffffbff;\n    }\n    ptrValue = ptrArg2;\n    ptrArg2 = (uint *)((int)ptrValue + 1);\n    *(char *)ptrValue = (char)(*input)[4];\n    *(short *)((int)input + 0x2a) = *(short *)((int)input + 0x2a) + -1;\n  }\n  else if (*(short *)((int)input + 0x2a) == 2) {\n    if (((ptrValue == (uint *)0x4) || (ptrValue == (uint *)0x8)) || (ptrValue == (uint *)0xffff0000)) {\n      (*input)[1] = (*input)[1] & 0xfffffcff;\n      **input = **input | 0x200;\n    }\n    else {\n      if (ptrValue == (uint *)0x2) {\n        **input = **input | 0x400;\n      }\n      else {\n        **input = **input & 0xfffffbff;\n      }\n      (*input)[1] = (*input)[1] & 0xfffffcff;\n    }\n    ptrValue = ptrArg2;\n    ptrArg2 = (uint *)((int)ptrValue + 1);\n    *(char *)ptrValue = (char)(*input)[4];\n    *(short *)((int)input + 0x2a) = *(short *)((int)input + 0x2a) + -1;\n    ptrValue = ptrArg2;\n    ptrArg2 = (uint *)((int)ptrValue + 1);\n    *(char *)ptrValue = (char)(*input)[4];\n    *(short *)((int)input + 0x2a) = *(short *)((int)input + 0x2a) + -1;\n    *(undefined *)((int)input + 0x3d) = 0x20;\n    input[0xc] = (uint *)0x0;\n    if (*(char *)((int)input + 0x3e) == '@') {\n      *(undefined *)((int)input + 0x3e) = 0;\n      FUNC_08002f9a();\n    }\n    else {\n      *(undefined *)((int)input + 0x3e) = 0;\n      FUNC_08002c50();\n    }\n  }\n  else {\n    ptrValue = ptrArg2;\n    ptrArg2 = (uint *)((int)ptrValue + 1);\n    *(char *)ptrValue = (char)(*input)[4];\n    *(short *)((int)input + 0x2a) = *(short *)((int)input + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800306c": "process_data_0800306c",
                "param_1": "input",
                "puVar1": "ptrValue",
                "param_1[0xb]": "ptrArg1",
                "param_1[9]": "ptrArg2"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_08002f9a",
                "FUN_08002c50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800316a": {
            "entrypoint": "0x0800316a",
            "current_name": "FUNC_0800316a",
            "code": "\nvoid FUNC_0800316a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800316a": "FUNC_0800316a"
            },
            "calling": [
                "FUN_0800316c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800316c": {
            "entrypoint": "0x0800316c",
            "current_name": "process_input_0800316c",
            "code": "\nvoid processInput_0800316c(uint **input)\n\n{\n  int result;\n  uint *nextChar;\n  uint *currentChar;\n  \n  if (*(byte *)((int)input + 0x3d) - 0x29 < 2) {\n    input[0xc] = (uint *)0x0;\n    *(undefined *)((int)input + 0x3d) = 0x28;\n  }\n  else {\n    if ((*(char *)((int)input + 0x3d) != '`') && (((*input)[1] & 0x800) == 0)) {\n      *(undefined *)((int)input + 0x3d) = 0x20;\n    }\n    input[0xc] = (uint *)0x0;\n    *(undefined *)((int)input + 0x3e) = 0;\n  }\n  **input = **input & 0xfffff7ff;\n  currentChar = *input;\n  if ((currentChar[1] & 0x800) == 0) {\n    if (*(char *)((int)input + 0x3d) == '`') {\n      *(undefined *)((int)input + 0x3d) = 0x20;\n      input[0x10] = (uint *)0x0;\n      if ((currentChar[5] & 0x40) != 0) {\n        nextChar = input[9];\n        input[9] = (uint *)((int)nextChar + 1);\n        *(char *)nextChar = (char)currentChar[4];\n      }\n      **input = **input & 0xfffffffe;\n      FUNC_0800316a(input);\n    }\n    else {\n      if ((currentChar[5] & 0x40) != 0) {\n        nextChar = input[9];\n        input[9] = (uint *)((int)nextChar + 1);\n        *(char *)nextChar = (char)currentChar[4];\n      }\n      FUN_08004ef4(input);\n    }\n  }\n  else {\n    currentChar[1] = currentChar[1] & 0xfffff7ff;\n    if (*(char *)((int)input[0xd] + 0x21) == '\\x01') {\n      input[0xe][0xd] = (uint)&LAB_080035fc_1;\n      result = FUN_0800258c(input[0xe]);\n      if (result != 0) {\n        if (((*input)[5] & 0x40) != 0) {\n          currentChar = input[9];\n          input[9] = (uint *)((int)currentChar + 1);\n          *(char *)currentChar = (char)(*input)[4];\n        }\n        **input = **input & 0xfffffffe;\n        *(undefined *)((int)input + 0x3d) = 0x20;\n        (*(code *)input[0xe][0xd])();\n      }\n    }\n    else {\n      input[0xd][0xd] = (uint)&LAB_080035fc_1;\n      result = FUN_0800258c(input[0xd]);\n      if (result != 0) {\n        **input = **input & 0xfffffffe;\n        *(undefined *)((int)input + 0x3d) = 0x20;\n        (*(code *)input[0xd][0xd])();\n      }\n    }\n  }\n  if ((*(char *)((int)input + 0x3d) == '(') && (((uint)input[0x10] & 4) != 0)) {\n    input[0xb] = (uint *)0xffff0000;\n    input[0xc] = (uint *)0x0;\n    *(undefined *)((int)input + 0x3d) = 0x20;\n    *(undefined *)((int)input + 0x3e) = 0;\n    FUN_08004ec4(input);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800316c": "process_input_0800316c",
                "param_1": "input",
                "iVar1": "result",
                "puVar2": "nextChar",
                "puVar3": "currentChar"
            },
            "calling": [
                "FUN_08003520",
                "FUN_080032b4"
            ],
            "called": [
                "FUN_08004ec4",
                "FUN_0800258c",
                "FUN_0800316a",
                "FUN_08004ef4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080032b4": {
            "entrypoint": "0x080032b4",
            "current_name": "modify_param_array_080032b4",
            "code": "\nundefined4 modifyParamArray_080032b4(uint **paramArray)\n\n{\n  char charValue;\n  uint *ptrVar2;\n  uint *ptrVar3;\n  \n  charValue = *(char *)((int)paramArray + 0x3d);\n  (*paramArray)[1] = (*paramArray)[1] & 0xfffff8ff;\n  **paramArray = **paramArray | 1;\n  **paramArray = **paramArray & 0xfffffbff;\n  ptrVar2 = *paramArray;\n  if ((ptrVar2[1] & 0x800) != 0) {\n    if ((*(char *)((int)paramArray + 0x3d) == '\\\"') || (*(char *)((int)paramArray + 0x3d) == '*')) {\n      *(short *)((int)paramArray + 0x2a) = (short)*(undefined4 *)(*paramArray[0xe] + 4);\n    }\n    else {\n      *(short *)((int)paramArray + 0x2a) = (short)*(undefined4 *)(*paramArray[0xd] + 4);\n    }\n  }\n  if (*(short *)((int)paramArray + 0x2a) != 0) {\n    if ((ptrVar2[5] & 4) != 0) {\n      ptrVar3 = paramArray[9];\n      paramArray[9] = (uint *)((int)ptrVar3 + 1);\n      *(char *)ptrVar3 = (char)ptrVar2[4];\n      *(short *)((int)paramArray + 0x2a) = *(short *)((int)paramArray + 0x2a) + -1;\n    }\n    if (((*paramArray)[5] & 0x40) != 0) {\n      ptrVar2 = paramArray[9];\n      paramArray[9] = (uint *)((int)ptrVar2 + 1);\n      *(char *)ptrVar2 = (char)(*paramArray)[4];\n      *(short *)((int)paramArray + 0x2a) = *(short *)((int)paramArray + 0x2a) + -1;\n    }\n    paramArray[0x10] = (uint *)((uint)paramArray[0x10] | 4);\n  }\n  if (paramArray[0x10] == (uint *)0x0) {\n    if (((charValue == '(') || (charValue == '*')) || (charValue == ')')) {\n      paramArray[0xb] = (uint *)0xffff0000;\n      paramArray[0xc] = (uint *)0x0;\n      *(undefined *)((int)paramArray + 0x3d) = 0x20;\n      *(undefined *)((int)paramArray + 0x3e) = 0;\n      FUN_08004ec4();\n    }\n    else if ((paramArray[0xc] == (uint *)0x22) || (charValue == '\\\"')) {\n      paramArray[0xc] = (uint *)0x0;\n      *(undefined *)((int)paramArray + 0x3d) = 0x20;\n      *(undefined *)((int)paramArray + 0x3e) = 0;\n      FUNC_08002ca4();\n    }\n  }\n  else {\n    FUN_0800316c();\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080032b4": "modify_param_array_080032b4",
                "param_1": "paramArray",
                "cVar1": "charValue",
                "puVar2": "ptrVar2",
                "puVar3": "ptrVar3"
            },
            "calling": [
                "FUN_080033b8"
            ],
            "called": [
                "FUN_0800316c",
                "FUN_08004ec4",
                "FUN_08002ca4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080033b8": {
            "entrypoint": "0x080033b8",
            "current_name": "handle_input_080033b8",
            "code": "\nvoid handleInput_080033b8(int *inputArray)\n\n{\n  int arrayPointer;\n  uint firstValue;\n  uint secondValue;\n  uint thirdValue;\n  \n  arrayPointer = *inputArray;\n  thirdValue = *(uint *)(arrayPointer + 0x18);\n  firstValue = *(uint *)(arrayPointer + 0x14);\n  secondValue = *(uint *)(arrayPointer + 4);\n  if ((*(char *)((int)inputArray + 0x3e) == '\\x10') || (*(char *)((int)inputArray + 0x3e) == '@')) {\n    if (((firstValue & 0x10001) == 0) || ((secondValue & 0x200) == 0)) {\n      if (((firstValue & 0x10008) == 0) || ((secondValue & 0x200) == 0)) {\n        if (((firstValue & 0x10002) != 0) && ((secondValue & 0x200) != 0)) {\n          FUN_080028de(inputArray);\n        }\n      }\n      else {\n        FUN_080028d2(inputArray);\n      }\n    }\n    else {\n      FUN_08002848(inputArray);\n    }\n    if ((thirdValue & 0x100004) == 0) {\n      if ((((firstValue & 0x10040) != 0) && ((secondValue & 0x400) != 0)) && ((firstValue & 0x10004) == 0)) {\n        FUN_08002f9c(inputArray);\n        return;\n      }\n      if (((firstValue & 0x10004) != 0) && ((secondValue & 0x200) != 0)) {\n        FUN_0800306c(inputArray);\n        return;\n      }\n    }\n    else {\n      if ((((firstValue & 0x10080) != 0) && ((secondValue & 0x400) != 0)) && ((firstValue & 0x10004) == 0)) {\n        FUN_08002db2(inputArray);\n        return;\n      }\n      if (((firstValue & 0x10004) != 0) && ((secondValue & 0x200) != 0)) {\n        FUN_08002efc(inputArray);\n        return;\n      }\n    }\n  }\n  else {\n    if (((firstValue & 0x10002) != 0) && ((secondValue & 0x200) != 0)) {\n      FUN_08002cf2();\n      return;\n    }\n    if (((firstValue & 0x10010) != 0) && ((secondValue & 0x200) != 0)) {\n      FUN_080032b4(inputArray);\n      return;\n    }\n    if ((thirdValue & 0x100004) == 0) {\n      if ((((firstValue & 0x10040) != 0) && ((secondValue & 0x400) != 0)) && ((firstValue & 0x10004) == 0)) {\n        FUN_08002ca6(inputArray);\n        return;\n      }\n      if (((firstValue & 0x10004) != 0) && ((secondValue & 0x200) != 0)) {\n        FUN_08002ad8(inputArray);\n      }\n    }\n    else {\n      if ((((firstValue & 0x10080) != 0) && ((secondValue & 0x400) != 0)) && ((firstValue & 0x10004) == 0)) {\n        FUN_08002c54(inputArray);\n        return;\n      }\n      if (((firstValue & 0x10004) != 0) && ((secondValue & 0x200) != 0)) {\n        FUN_08002ab8(inputArray);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080033b8": "handle_input_080033b8",
                "param_1": "inputArray",
                "iVar1": "arrayPointer",
                "uVar2": "firstValue",
                "uVar3": "secondValue",
                "uVar4": "thirdValue"
            },
            "calling": [],
            "called": [
                "FUN_0800306c",
                "FUN_08002848",
                "FUN_08002ca6",
                "FUN_080028d2",
                "FUN_08002c54",
                "FUN_08002db2",
                "FUN_08002f9c",
                "FUN_080028de",
                "FUN_08002ab8",
                "FUN_08002ad8",
                "FUN_08002efc",
                "FUN_080032b4",
                "FUN_08002cf2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003520": {
            "entrypoint": "0x08003520",
            "current_name": "update_flags_08003520",
            "code": "\nvoid updateFlags_08003520(uint **input)\n\n{\n  char character;\n  uint *ptr;\n  uint flag1;\n  uint flag2;\n  \n  ptr = *input;\n  flag1 = ptr[5];\n  flag2 = ptr[1];\n  if (((flag1 & 0x10100) != 0) && ((flag2 & 0x100) != 0)) {\n    input[0x10] = (uint *)((uint)input[0x10] | 1);\n    ptr[5] = 0xfffffeff;\n    **input = **input | 0x8000;\n  }\n  if (((flag1 & 0x10200) != 0) && ((flag2 & 0x100) != 0)) {\n    input[0x10] = (uint *)((uint)input[0x10] | 2);\n    (*input)[5] = 0xfffffdff;\n  }\n  if (((flag1 & 0x10400) != 0) && ((flag2 & 0x100) != 0)) {\n    character = *(char *)((int)input + 0x3d);\n    if (((*(char *)((int)input + 0x3e) == ' ') && (*(short *)((int)input + 0x2a) == 0)) &&\n       (((character == '!' || (character == ')')) || ((character == '(' && (input[0xc] == (uint *)0x21)))))) {\n      FUN_08002d1c(input);\n    }\n    else {\n      input[0x10] = (uint *)((uint)input[0x10] | 4);\n      if (*(char *)((int)input + 0x3e) == '\\x10') {\n        **input = **input | 0x200;\n      }\n      (*input)[5] = 0xfffffbff;\n    }\n  }\n  if (((flag1 & 0x10800) != 0) && ((flag2 & 0x100) != 0)) {\n    input[0x10] = (uint *)((uint)input[0x10] | 8);\n    (*input)[5] = 0xfffff7ff;\n  }\n  if (input[0x10] != (uint *)0x0) {\n    FUN_0800316c(input);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003520": "update_flags_08003520",
                "param_1": "input",
                "cVar1": "character",
                "puVar2": "ptr",
                "uVar3": "flag1",
                "uVar4": "flag2"
            },
            "calling": [],
            "called": [
                "FUN_0800316c",
                "FUN_08002d1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800365c": {
            "entrypoint": "0x0800365c",
            "current_name": "delay_operation_0800365c",
            "code": "\nvoid delayOperation_0800365c(int inputValue)\n\n{\n  bool isDelayRequired;\n  int calculatedDelay;\n  \n  calculatedDelay = inputValue * (DAT_20000084 / 8000);\n  do {\n    isDelayRequired = calculatedDelay != 0;\n    calculatedDelay = calculatedDelay + -1;\n  } while (isDelayRequired);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800365c": "delay_operation_0800365c",
                "param_1": "inputValue",
                "local_4": "calculatedDelay",
                "bVar1": "isDelayRequired"
            },
            "calling": [
                "FUN_08003688"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003688": {
            "entrypoint": "0x08003688",
            "current_name": "check_hardware_status_08003688",
            "code": "\n\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nundefined4 checkHardwareStatus_08003688(uint *hardwareParams)\n\n{\n  int startTime;\n  int endTime;\n  undefined4 errorCode;\n  uint value;\n  bool isFalse;\n  \n  if ((*hardwareParams & 1) != 0) {\n    if (((_DAT_40021004 & 0xc) == 4) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) != 0)))) {\n      if (((_DAT_40021000 & 0x20000) != 0) && (hardwareParams[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      value = hardwareParams[1];\n      if (value == 0x10000) {\n        _DAT_40021000 = _DAT_40021000 | 0x10000;\n      }\n      else if (value == 0) {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      else if (value == 0x50000) {\n        _DAT_40021000 = _DAT_40021000 | 0x50000;\n      }\n      else {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      if (hardwareParams[1] == 0) {\n        startTime = FUN_08001cc4();\n        while ((_DAT_40021000 & 0x20000) != 0) {\n          endTime = FUN_08001cc4();\n          if (100 < (uint)(endTime - startTime)) {\n            return 3;\n          }\n        }\n      }\n      else {\n        startTime = FUN_08001cc4();\n        while ((_DAT_40021000 & 0x20000) == 0) {\n          endTime = FUN_08001cc4();\n          if (100 < (uint)(endTime - startTime)) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*hardwareParams & 2) != 0) {\n    if (((_DAT_40021004 & 0xc) == 0) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) == 0)))) {\n      if (((_DAT_40021000 & 2) != 0) && (hardwareParams[4] != 1)) {\n        return 1;\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | hardwareParams[5] << 3;\n    }\n    else if (hardwareParams[4] == 0) {\n      _DAT_42420000 = 0;\n      startTime = FUN_08001cc4();\n      while ((_DAT_40021000 & 2) != 0) {\n        endTime = FUN_08001cc4();\n        if (2 < (uint)(endTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420000 = 1;\n      startTime = FUN_08001cc4();\n      while ((_DAT_40021000 & 2) == 0) {\n        endTime = FUN_08001cc4();\n        if (2 < (uint)(endTime - startTime)) {\n          return 3;\n        }\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | hardwareParams[5] << 3;\n    }\n  }\n  if ((*hardwareParams & 8) != 0) {\n    if (hardwareParams[6] == 0) {\n      _DAT_42420480 = 0;\n      startTime = FUN_08001cc4();\n      while ((_DAT_40021024 & 2) != 0) {\n        endTime = FUN_08001cc4();\n        if (2 < (uint)(endTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420480 = 1;\n      startTime = FUN_08001cc4();\n      while ((_DAT_40021024 & 2) == 0) {\n        endTime = FUN_08001cc4();\n        if (2 < (uint)(endTime - startTime)) {\n          return 3;\n        }\n      }\n      FUN_0800365c(1);\n    }\n  }\n  if ((*hardwareParams & 4) != 0) {\n    isFalse = (_DAT_4002101c & 0x10000000) == 0;\n    if (isFalse) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      startTime = FUN_08001cc4();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        endTime = FUN_08001cc4();\n        if (100 < (uint)(endTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    value = hardwareParams[3];\n    if (value == 1) {\n      _DAT_40021020 = _DAT_40021020 | 1;\n    }\n    else if (value == 0) {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    else if (value == 5) {\n      _DAT_40021020 = _DAT_40021020 | 5;\n    }\n    else {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    if (hardwareParams[3] == 0) {\n      startTime = FUN_08001cc4();\n      while ((_DAT_40021020 & 2) != 0) {\n        endTime = FUN_08001cc4();\n        if (5000 < (uint)(endTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      startTime = FUN_08001cc4();\n      while ((_DAT_40021020 & 2) == 0) {\n        endTime = FUN_08001cc4();\n        if (5000 < (uint)(endTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    if (isFalse) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if (hardwareParams[7] == 0) {\n    errorCode = 0;\n  }\n  else if ((_DAT_40021004 & 0xc) == 8) {\n    errorCode = 1;\n  }\n  else if (hardwareParams[7] == 2) {\n    _DAT_42420060 = 0;\n    startTime = FUN_08001cc4();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        if (hardwareParams[8] == 0x10000) {\n          _DAT_40021004 = _DAT_40021004 & 0xfffdffff | hardwareParams[2];\n        }\n        _DAT_40021004 = _DAT_40021004 & 0xffc2ffff | hardwareParams[8] | hardwareParams[9];\n        _DAT_42420060 = 1;\n        startTime = FUN_08001cc4();\n        do {\n          if ((_DAT_40021000 & 0x2000000) != 0) {\n            return 0;\n          }\n          endTime = FUN_08001cc4();\n        } while ((uint)(endTime - startTime) < 3);\n        return 3;\n      }\n      endTime = FUN_08001cc4();\n    } while ((uint)(endTime - startTime) < 3);\n    errorCode = 3;\n  }\n  else {\n    _DAT_42420060 = 0;\n    startTime = FUN_08001cc4();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        return 0;\n      }\n      endTime = FUN_08001cc4();\n    } while ((uint)(endTime - startTime) < 3);\n    errorCode = 3;\n  }\n  return errorCode;\n}\n\n",
            "renaming": {
                "FUN_08003688": "check_hardware_status_08003688",
                "param_1": "hardwareParams",
                "iVar1": "startTime",
                "iVar2": "endTime",
                "uVar3": "errorCode",
                "uVar4": "value",
                "bVar5": "isFalse"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08001cc4",
                "FUN_0800365c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a68": {
            "entrypoint": "0x08003a68",
            "current_name": "calculate_clock_signal_delay_08003a68",
            "code": "\n\n\nuint calculateClockSignalDelay_08003a68(void)\n\n{\n  uint delayValue;\n  undefined2 clockSpeed;\n  undefined4 constant1;\n  undefined4 constant2;\n  undefined4 constant3;\n  undefined4 constant4;\n  \n  constant4 = 0x10100f0e;\n  constant3 = 0xd0c0b0a;\n  constant2 = 0x9080706;\n  constant1 = 0x5040302;\n  clockSpeed = 0x201;\n  if ((_DAT_40021004 & 0xc) == 8) {\n    delayValue = (uint)*(byte *)((int)&constant1 + ((_DAT_40021004 << 10) >> 0x1c));\n    if ((_DAT_40021004 & 0x10000) == 0) {\n      delayValue = delayValue * 4000000;\n    }\n    else {\n      delayValue = (delayValue * 8000000) /\n              (uint)*(byte *)((int)&clockSpeed - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n    }\n  }\n  else {\n    delayValue = 8000000;\n  }\n  return delayValue;\n}\n\n",
            "renaming": {
                "FUN_08003a68": "calculate_clock_signal_delay_08003a68",
                "uVar1": "delayValue",
                "local_1c": "clockSpeed",
                "uStack_18": "constant1",
                "uStack_14": "constant2",
                "uStack_10": "constant3",
                "uStack_c": "constant4"
            },
            "calling": [
                "FUN_08003afa"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ad4": {
            "entrypoint": "0x08003ad4",
            "current_name": "initialize_system_08003ad4",
            "code": "\n\n\nundefined4 initializeSystem_08003ad4(uint *flags,uint size)\n\n{\n  int startTime;\n  int currentTime;\n  uint tempValue;\n  \n  if ((_DAT_40022000 & 7) < size) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | size;\n    if (size != (size & 7)) {\n      return 1;\n    }\n  }\n  if ((*flags & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | flags[2];\n  }\n  if ((*flags & 1) != 0) {\n    tempValue = flags[1];\n    if (tempValue == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((tempValue != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = tempValue | _DAT_40021004 & 0xfffffffc;\n    startTime = FUN_08001cc4();\n    if (flags[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        currentTime = FUN_08001cc4();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else if (flags[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        currentTime = FUN_08001cc4();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        currentTime = FUN_08001cc4();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (size < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | size;\n    if (size != (size & 7)) {\n      return 1;\n    }\n  }\n  if ((*flags & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | flags[3];\n  }\n  if ((*flags & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | flags[4] << 3;\n  }\n  tempValue = FUN_08003a68();\n  DAT_20000084 = tempValue >> (&DAT_0800772c)[(_DAT_40021004 << 0x18) >> 0x1c];\n  FUN_08001c3c(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003ad4": "initialize_system_08003ad4",
                "param_1": "flags",
                "param_2": "size",
                "uVar3": "tempValue",
                "iVar1": "startTime",
                "iVar2": "currentTime"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08003afa"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003afa": {
            "entrypoint": "0x08003afa",
            "current_name": "initialize_system_08003afa",
            "code": "\n\n\nundefined4 initializeSystem_08003afa(uint *flags,uint numFlags)\n\n{\n  int initialTime;\n  int currentTime;\n  uint tempValue;\n  \n  if ((*flags & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | flags[2];\n  }\n  if ((*flags & 1) != 0) {\n    tempValue = flags[1];\n    if (tempValue == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((tempValue != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = tempValue | _DAT_40021004 & 0xfffffffc;\n    initialTime = FUN_08001cc4();\n    if (flags[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        currentTime = FUN_08001cc4();\n        if (5000 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n    }\n    else if (flags[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        currentTime = FUN_08001cc4();\n        if (5000 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        currentTime = FUN_08001cc4();\n        if (5000 < (uint)(currentTime - initialTime)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (numFlags < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | numFlags;\n    if (numFlags != (numFlags & 7)) {\n      return 1;\n    }\n  }\n  if ((*flags & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | flags[3];\n  }\n  if ((*flags & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | flags[4] << 3;\n  }\n  tempValue = FUN_08003a68();\n  DAT_20000084 = tempValue >> (&DAT_0800772c)[(_DAT_40021004 << 0x18) >> 0x1c];\n  FUN_08001c3c(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003afa": "initialize_system_08003afa",
                "param_1": "flags",
                "param_2": "numFlags",
                "iVar1": "initialTime",
                "iVar2": "currentTime",
                "uVar3": "tempValue"
            },
            "calling": [
                "FUN_08003ad4"
            ],
            "called": [
                "FUN_08003a68",
                "FUN_08001c3c",
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003c44": {
            "entrypoint": "0x08003c44",
            "current_name": "get_data_offset_08003c44",
            "code": "\nundefined4 get_data_offset_08003c44(void)\n\n{\n  return DAT_20000084;\n}\n\n",
            "renaming": {
                "FUN_08003c44": "get_data_offset_08003c44"
            },
            "calling": [
                "FUN_08001b48",
                "FUN_08003c50",
                "FUN_08003c70"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003c50": {
            "entrypoint": "0x08003c50",
            "current_name": "shift_value_from_data_08003c50",
            "code": "\n\n\nuint shiftValueFromData_08003c50(void)\n\n{\n  uint result;\n  \n  result = FUN_08003c44();\n  return result >> (&DAT_0800773c)[(uint)(_DAT_40021004 << 0x15) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_08003c50": "shift_value_from_data_08003c50",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08004204"
            ],
            "called": [
                "FUN_08003c44"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003c70": {
            "entrypoint": "0x08003c70",
            "current_name": "extracted_value_08003c70",
            "code": "\n\n\nuint extractedValue_08003c70(void)\n\n{\n  uint result;\n  \n  result = FUN_08003c44();\n  return result >> (&DAT_0800773c)[(uint)(_DAT_40021004 << 0x12) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_08003c70": "extracted_value_08003c70",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08003da4",
                "FUN_08004204"
            ],
            "called": [
                "FUN_08003c44"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003c90": {
            "entrypoint": "0x08003c90",
            "current_name": "initialize_device_settings_08003c90",
            "code": "\n\n\nundefined4 initializeDeviceSettings_08003c90(uint *deviceSettings)\n\n{\n  uint tempFlag;\n  uint tempValue;\n  int startTime;\n  int currentTime;\n  bool isConditionMet;\n  \n  if ((*deviceSettings & 1) != 0) {\n    isConditionMet = (_DAT_4002101c & 0x10000000) == 0;\n    if (isConditionMet) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      startTime = FUN_08001cc4();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        currentTime = FUN_08001cc4();\n        if (100 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    if (((_DAT_40021020 & 0x300) != 0) && ((_DAT_40021020 & 0x300) != (deviceSettings[1] & 0x300))) {\n      tempValue = _DAT_40021020 & 0xfffffcff;\n      _DAT_42420440 = 0;\n      tempFlag = _DAT_40021020 & 1;\n      _DAT_40021020 = tempValue;\n      if (tempFlag != 0) {\n        startTime = FUN_08001cc4();\n        while ((_DAT_40021020 & 2) == 0) {\n          currentTime = FUN_08001cc4();\n          if (5000 < (uint)(currentTime - startTime)) {\n            return 3;\n          }\n        }\n      }\n    }\n    _DAT_40021020 = _DAT_40021020 & 0xfffffcff | deviceSettings[1];\n    if (isConditionMet) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if ((*deviceSettings & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffff3fff | deviceSettings[2];\n  }\n  if ((*deviceSettings & 0x10) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffbfffff | deviceSettings[3];\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003c90": "initialize_device_settings_08003c90",
                "param_1": "deviceSettings",
                "uVar1": "tempFlag",
                "uVar2": "tempValue",
                "iVar3": "startTime",
                "iVar4": "currentTime",
                "bVar5": "isConditionMet"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003da4": {
            "entrypoint": "0x08003da4",
            "current_name": "calculate_delay_08003da4",
            "code": "\n\n\nuint calculateDelay_08003da4(int inputValue)\n\n{\n  uint delayTime;\n  undefined2 constantValue;\n  undefined4 maskValue;\n  undefined4 offsetValue;\n  undefined4 checkValue;\n  undefined4 divisionFactor;\n  \n  divisionFactor = 0x10100f0e;\n  checkValue = 0xd0c0b0a;\n  offsetValue = 0x9080706;\n  maskValue = 0x5040302;\n  constantValue = 0x201;\n  if (inputValue == 2) {\n    delayTime = FUN_08003c70();\n    delayTime = delayTime / ((((_DAT_40021004 << 0x10) >> 0x1e) + 1) * 2);\n  }\n  else if (inputValue == 0x10) {\n    if ((_DAT_40021000 & 0x1000000) == 0) {\n      delayTime = 0;\n    }\n    else {\n      if ((_DAT_40021004 & 0x10000) == 0) {\n        delayTime = 4000000;\n      }\n      else {\n        delayTime = 8000000 / *(byte *)((int)&constantValue - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n      }\n      delayTime = delayTime * *(byte *)((int)&maskValue + ((_DAT_40021004 << 10) >> 0x1c));\n      if ((_DAT_40021004 & 0x400000) == 0) {\n        delayTime = (delayTime * 2) / 3;\n      }\n    }\n  }\n  else if (inputValue == 1) {\n    if ((_DAT_40021020 & 0x302) == 0x102) {\n      delayTime = 0x8000;\n    }\n    else if (((_DAT_40021020 & 0x300) == 0x200) && ((_DAT_40021024 & 2) != 0)) {\n      delayTime = 32000;\n    }\n    else if ((_DAT_40021020 & 0x300) == 0x300) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        delayTime = 0;\n      }\n      else {\n        delayTime = 0xf424;\n      }\n    }\n    else {\n      delayTime = 0;\n    }\n  }\n  else {\n    delayTime = 0;\n  }\n  return delayTime;\n}\n\n",
            "renaming": {
                "FUN_08003da4": "calculate_delay_08003da4",
                "param_1": "inputValue",
                "uVar1": "delayTime",
                "local_24": "constantValue",
                "uStack_20": "maskValue",
                "uStack_1c": "offsetValue",
                "uStack_18": "checkValue",
                "uStack_14": "divisionFactor"
            },
            "calling": [
                "FUN_08002384",
                "FUN_08001cd0"
            ],
            "called": [
                "FUN_08003c70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ea0": {
            "entrypoint": "0x08003ea0",
            "current_name": "initialize_data_08003ea0",
            "code": "\n\n\nvoid initializeData_08003ea0(uint **dataPtr)\n\n{\n  if (((**dataPtr & 2) != 0) && (((*dataPtr)[1] & 2) != 0)) {\n    FUN_08004d18();\n    (*dataPtr)[1] = 0xfffffffd;\n  }\n  _DAT_40010414 = 0x20000;\n  *(undefined *)((int)dataPtr + 0x11) = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003ea0": "initialize_data_08003ea0",
                "param_1": "dataPtr"
            },
            "calling": [],
            "called": [
                "FUN_08004d18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ed8": {
            "entrypoint": "0x08003ed8",
            "current_name": "update_data_08003ed8",
            "code": "\nvoid updateData_08003ed8(uint **dataPtr)\n\n{\n  uint *ptr;\n  \n  *(undefined *)((int)dataPtr + 0x3d) = 2;\n  ptr = *dataPtr;\n  if ((ptr[8] & 0x1111) == 0) {\n    if ((ptr[8] & 0x444) == 0) {\n      *ptr = *ptr & 0xfffffffe;\n    }\n  }\n  FUN_08004b34(dataPtr);\n  *(undefined *)((int)dataPtr + 0x3d) = 0;\n  *(undefined *)(dataPtr + 0xf) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003ed8": "update_data_08003ed8",
                "param_1": "dataPtr",
                "puVar1": "ptr"
            },
            "calling": [
                "FUN_08004b3c"
            ],
            "called": [
                "FUN_08004b34"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f12": {
            "entrypoint": "0x08003f12",
            "current_name": "FUNC_08003f12",
            "code": "\nvoid FUNC_08003f12(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f12": "FUNC_08003f12"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08003f14": {
            "entrypoint": "0x08003f14",
            "current_name": "FUNC_08003f14",
            "code": "\nvoid FUNC_08003f14(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f14": "FUNC_08003f14"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08003f16": {
            "entrypoint": "0x08003f16",
            "current_name": "FUNC_08003f16",
            "code": "\nvoid FUNC_08003f16(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f16": "FUNC_08003f16"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08003f18": {
            "entrypoint": "0x08003f18",
            "current_name": "process_flags_08003f18",
            "code": "\nvoid processFlags_08003f18(int *inputArray)\n\n{\n  int currentValue;\n  \n  currentValue = *inputArray;\n  if (((*(uint *)(currentValue + 0x10) & 2) != 0) && ((*(uint *)(currentValue + 0xc) & 2) != 0)) {\n    *(undefined4 *)(currentValue + 0x10) = 0xfffffffd;\n    *(undefined *)(inputArray + 7) = 1;\n    if ((*(uint *)(*inputArray + 0x18) & 3) == 0) {\n      FUN_08004df8();\n      FUNC_08003f14(inputArray);\n    }\n    else {\n      FUNC_08003f12();\n    }\n    *(undefined *)(inputArray + 7) = 0;\n  }\n  currentValue = *inputArray;\n  if (((*(uint *)(currentValue + 0x10) & 4) != 0) && ((*(uint *)(currentValue + 0xc) & 4) != 0)) {\n    *(undefined4 *)(currentValue + 0x10) = 0xfffffffb;\n    *(undefined *)(inputArray + 7) = 2;\n    if ((*(uint *)(*inputArray + 0x18) & 0x300) == 0) {\n      FUN_08004df8(inputArray);\n      FUNC_08003f14(inputArray);\n    }\n    else {\n      FUNC_08003f12(inputArray);\n    }\n    *(undefined *)(inputArray + 7) = 0;\n  }\n  currentValue = *inputArray;\n  if (((*(uint *)(currentValue + 0x10) & 8) != 0) && ((*(uint *)(currentValue + 0xc) & 8) != 0)) {\n    *(undefined4 *)(currentValue + 0x10) = 0xfffffff7;\n    *(undefined *)(inputArray + 7) = 4;\n    if ((*(uint *)(*inputArray + 0x1c) & 3) == 0) {\n      FUN_08004df8(inputArray);\n      FUNC_08003f14(inputArray);\n    }\n    else {\n      FUNC_08003f12(inputArray);\n    }\n    *(undefined *)(inputArray + 7) = 0;\n  }\n  currentValue = *inputArray;\n  if (((*(uint *)(currentValue + 0x10) & 0x10) != 0) && ((*(uint *)(currentValue + 0xc) & 0x10) != 0)) {\n    *(undefined4 *)(currentValue + 0x10) = 0xffffffef;\n    *(undefined *)(inputArray + 7) = 8;\n    if ((*(uint *)(*inputArray + 0x1c) & 0x300) == 0) {\n      FUN_08004df8(inputArray);\n      FUNC_08003f14(inputArray);\n    }\n    else {\n      FUNC_08003f12(inputArray);\n    }\n    *(undefined *)(inputArray + 7) = 0;\n  }\n  currentValue = *inputArray;\n  if (((*(uint *)(currentValue + 0x10) & 1) != 0) && ((*(uint *)(currentValue + 0xc) & 1) != 0)) {\n    *(undefined4 *)(currentValue + 0x10) = 0xfffffffe;\n    FUN_08004e12(inputArray);\n  }\n  currentValue = *inputArray;\n  if (((*(uint *)(currentValue + 0x10) & 0x80) != 0) && ((*(uint *)(currentValue + 0xc) & 0x80) != 0)) {\n    *(undefined4 *)(currentValue + 0x10) = 0xffffff7f;\n    FUNC_0800417a(inputArray);\n  }\n  currentValue = *inputArray;\n  if (((*(uint *)(currentValue + 0x10) & 0x40) != 0) && ((*(uint *)(currentValue + 0xc) & 0x40) != 0)) {\n    *(undefined4 *)(currentValue + 0x10) = 0xffffffbf;\n    FUNC_08003f16(inputArray);\n  }\n  currentValue = *inputArray;\n  if (((*(uint *)(currentValue + 0x10) & 0x20) != 0) && ((*(uint *)(currentValue + 0xc) & 0x20) != 0)) {\n    *(undefined4 *)(currentValue + 0x10) = 0xffffffdf;\n    FUNC_08004178(inputArray);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f18": "process_flags_08003f18",
                "param_1": "inputArray",
                "iVar1": "currentValue"
            },
            "calling": [
                "FUN_08004e20"
            ],
            "called": [
                "FUN_08003f14",
                "FUN_08004178",
                "FUN_08004e12",
                "FUN_0800417a",
                "FUN_08003f12",
                "FUN_08004df8",
                "FUN_08003f16"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004092": {
            "entrypoint": "0x08004092",
            "current_name": "set_bit_value_08004092",
            "code": "\nvoid setBitValue_08004092(int data,uint bitIndex,int bitValue)\n\n{\n  *(uint *)(data + 0x20) = *(uint *)(data + 0x20) & ~(1 << (bitIndex & 0xff));\n  *(uint *)(data + 0x20) = *(uint *)(data + 0x20) | bitValue << (bitIndex & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004092": "set_bit_value_08004092",
                "param_1": "data",
                "param_2": "bitIndex",
                "param_3": "bitValue"
            },
            "calling": [
                "FUN_080040b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040b0": {
            "entrypoint": "0x080040b0",
            "current_name": "check_and_modify_values_080040b0",
            "code": "\nundefined4 check_and_modify_values_080040b0(uint **pointer_array,undefined4 value)\n\n{\n  uint *current_pointer;\n  \n  FUN_08004092(*pointer_array,value,0);\n  if (((*pointer_array == (uint *)0x40012c00) && ((memory_value_1 & 0x1111) == 0)) &&\n     ((memory_value_1 & 0x444) == 0)) {\n    memory_value_2 = memory_value_2 & 0xffff7fff;\n  }\n  current_pointer = *pointer_array;\n  if (((current_pointer[8] & 0x1111) == 0) && ((current_pointer[8] & 0x444) == 0)) {\n    *current_pointer = *current_pointer & 0xfffffffe;\n  }\n  *(undefined *)((int)pointer_array + 0x3d) = 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080040b0": "check_and_modify_values_080040b0",
                "param_1": "pointer_array",
                "param_2": "value",
                "puVar1": "current_pointer",
                "uRam40012c20": "memory_value_1",
                "uRam40012c44": "memory_value_2"
            },
            "calling": [
                "FUN_08004b3c"
            ],
            "called": [
                "FUN_08004092"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004110": {
            "entrypoint": "0x08004110",
            "current_name": "update_value_08004110",
            "code": "\nvoid updateValue_08004110(int baseAddress,uint bitOffset,int newValue)\n\n{\n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) & ~(4 << (bitOffset & 0xff));\n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) | newValue << (bitOffset & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004110": "update_value_08004110",
                "param_1": "baseAddress",
                "param_2": "bitOffset",
                "param_3": "newValue"
            },
            "calling": [
                "FUN_0800412c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800412c": {
            "entrypoint": "0x0800412c",
            "current_name": "update_flags_and_values_0800412c",
            "code": "\nundefined4 updateFlagsAndValues_0800412c(uint **arrayPointer,undefined4 valueToUpdate)\n\n{\n  uint *tempPointer;\n  \n  FUN_08004110(*arrayPointer,valueToUpdate,0);\n  tempPointer = *arrayPointer;\n  if (((tempPointer[8] & 0x1111) == 0) && ((tempPointer[8] & 0x444) == 0)) {\n    tempPointer[0x11] = tempPointer[0x11] & 0xffff7fff;\n  }\n  tempPointer = *arrayPointer;\n  if (((tempPointer[8] & 0x1111) == 0) && ((tempPointer[8] & 0x444) == 0)) {\n    *tempPointer = *tempPointer & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800412c": "update_flags_and_values_0800412c",
                "param_1": "arrayPointer",
                "param_2": "valueToUpdate",
                "puVar1": "tempPointer"
            },
            "calling": [
                "FUN_08004b3c"
            ],
            "called": [
                "FUN_08004110"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004178": {
            "entrypoint": "0x08004178",
            "current_name": "FUNC_08004178",
            "code": "\nvoid FUNC_08004178(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004178": "FUNC_08004178"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800417a": {
            "entrypoint": "0x0800417a",
            "current_name": "FUNC_0800417a",
            "code": "\nvoid FUNC_0800417a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800417a": "FUNC_0800417a"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800417c": {
            "entrypoint": "0x0800417c",
            "current_name": "clear_flags_0800417c",
            "code": "\nvoid clearFlags_0800417c(int *arrayPtr)\n\n{\n  *(uint *)(*arrayPtr + 0xc) = *(uint *)(*arrayPtr + 0xc) & 0xfffffedf;\n  *(uint *)(*arrayPtr + 0x14) = *(uint *)(*arrayPtr + 0x14) & 0xfffffffe;\n  *(flags *)((int)arrayPtr + 0x3a) = 0x20;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800417c": "clear_flags_0800417c",
                "param_1": "arrayPtr",
                "undefined": "flags"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004198": {
            "entrypoint": "0x08004198",
            "current_name": "parse_data_08004198",
            "code": "\nundefined4 parse_data_08004198(int *data_ptr)\n\n{\n  short count;\n  byte *byte_ptr;\n  \n  if (*(char *)((int)data_ptr + 0x39) != '!') {\n    return 2;\n  }\n  if (data_ptr[2] == 0x1000) {\n    *(uint *)(*data_ptr + 4) = *(ushort *)data_ptr[8] & 0x1ff;\n    if (data_ptr[4] == 0) {\n      data_ptr[8] = data_ptr[8] + 2;\n    }\n    else {\n      data_ptr[8] = data_ptr[8] + 1;\n    }\n  }\n  else {\n    byte_ptr = (byte *)data_ptr[8];\n    data_ptr[8] = (int)(byte_ptr + 1);\n    *(uint *)(*data_ptr + 4) = (uint)*byte_ptr;\n  }\n  count = *(short *)((int)data_ptr + 0x26) + -1;\n  *(short *)((int)data_ptr + 0x26) = count;\n  if (count == 0) {\n    *(uint *)(*data_ptr + 0xc) = *(uint *)(*data_ptr + 0xc) & 0xffffff7f;\n    *(uint *)(*data_ptr + 0xc) = *(uint *)(*data_ptr + 0xc) | 0x40;\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004198": "parse_data_08004198",
                "param_1": "data_ptr",
                "sVar1": "count",
                "pbVar2": "byte_ptr"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004204": {
            "entrypoint": "0x08004204",
            "current_name": "calculate_score_08004204",
            "code": "\nvoid calculateScore_08004204(int *inputData)\n\n{\n  int result1;\n  int result2;\n  int result3;\n  int result4;\n  int result5;\n  int result6;\n  int result7;\n  int result8;\n  int result9;\n  int result10;\n  \n  *(uint *)(*inputData + 0x10) = *(uint *)(*inputData + 0x10) & 0xffffcfff | inputData[3];\n  *(uint *)(*inputData + 0xc) =\n       inputData[2] | inputData[4] | inputData[5] | *(uint *)(*inputData + 0xc) & 0xffffe9f3;\n  *(uint *)(*inputData + 0x14) = *(uint *)(*inputData + 0x14) & 0xfffffcff | inputData[6];\n  result10 = *inputData;\n  if (result10 != 0x40013800) {\n    result1 = FUN_08003c50();\n    result6 = inputData[1];\n    result2 = FUN_08003c50();\n    result7 = inputData[1];\n    result3 = FUN_08003c50();\n    result8 = inputData[1];\n    result4 = FUN_08003c50();\n    result9 = inputData[1];\n    result5 = FUN_08003c50();\n    *(uint *)(result10 + 8) =\n         ((uint)((int)((ulonglong)\n                       (((uint)(result4 * 0x19) / (uint)(result9 << 2) +\n                        (int)(((ulonglong)(uint)(result5 * 0x19) / (ulonglong)(uint)(inputData[1] << 2))\n                             / 100) * -100) * 0x10 + 0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n         ((((uint)(result2 * 0x19) / (uint)(result7 << 2) +\n           (int)(((ulonglong)(uint)(result3 * 0x19) / (ulonglong)(uint)(result8 << 2)) / 100) * -100) *\n           0x10 + 0x32) / 100 & 0xf0) +\n         (int)(((ulonglong)(uint)(result1 * 0x19) / (ulonglong)(uint)(result6 << 2)) / 100) * 0x10;\n    return;\n  }\n  result10 = FUN_08003c70();\n  result5 = inputData[1];\n  result1 = FUN_08003c70();\n  result6 = inputData[1];\n  result2 = FUN_08003c70();\n  result7 = inputData[1];\n  result3 = FUN_08003c70();\n  result8 = inputData[1];\n  result4 = FUN_08003c70();\n  finalScore = ((uint)((int)((ulonglong)\n                               (((uint)(result3 * 0x19) / (uint)(result8 << 2) +\n                                (int)(((ulonglong)(uint)(result4 * 0x19) /\n                                      (ulonglong)(uint)(inputData[1] << 2)) / 100) * -100) * 0x10 +\n                               0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n                 ((((uint)(result1 * 0x19) / (uint)(result6 << 2) +\n                   (int)(((ulonglong)(uint)(result2 * 0x19) / (ulonglong)(uint)(result7 << 2)) / 100) *\n                   -100) * 0x10 + 0x32) / 100 & 0xf0) +\n                 (int)(((ulonglong)(uint)(result10 * 0x19) / (ulonglong)(uint)(result5 << 2)) / 100) *\n                 0x10;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004204": "calculate_score_08004204",
                "param_1": "inputData",
                "iVar1": "result1",
                "iVar2": "result2",
                "iVar3": "result3",
                "iVar4": "result4",
                "iVar5": "result5",
                "iVar6": "result6",
                "iVar7": "result7",
                "iVar8": "result8",
                "iVar9": "result9",
                "iVar10": "result10",
                "iRam40013808": "finalScore"
            },
            "calling": [
                "FUN_0800441a"
            ],
            "called": [
                "FUN_08003c50",
                "FUN_08003c70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080043b4": {
            "entrypoint": "0x080043b4",
            "current_name": "check_parameter_080043b4",
            "code": "\nundefined4 checkParameter_080043b4(uint **parameterArray,uint flag,uint condition,int value,uint limit)\n\n{\n  int result;\n  \n  do {\n    if (((flag & ~**parameterArray) == 0) != condition) {\n      return 0;\n    }\n  } while ((limit == 0xffffffff) ||\n          ((limit != 0 && (result = FUN_08001cc4(), (uint)(result - value) <= limit))));\n  (*parameterArray)[3] = (*parameterArray)[3] & 0xfffffe5f;\n  (*parameterArray)[5] = (*parameterArray)[5] & 0xfffffffe;\n  *(undefined *)((int)parameterArray + 0x39) = 0x20;\n  *(undefined *)((int)parameterArray + 0x3a) = 0x20;\n  *(undefined *)(parameterArray + 0xe) = 0;\n  return 3;\n}\n\n",
            "renaming": {
                "FUN_080043b4": "check_parameter_080043b4",
                "param_1": "parameterArray",
                "param_2": "flag",
                "param_3": "condition",
                "param_4": "value",
                "param_5": "limit",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08004478"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004418": {
            "entrypoint": "0x08004418",
            "current_name": "FUNC_08004418",
            "code": "\nvoid FUNC_08004418(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004418": "FUNC_08004418"
            },
            "calling": [
                "FUN_0800441a"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800441a": {
            "entrypoint": "0x0800441a",
            "current_name": "initialize_data_0800441a",
            "code": "\nundefined4 initializeData_0800441a(int *dataPointer)\n\n{\n  if (dataPointer != (int *)0x0) {\n    if (*(char *)((int)dataPointer + 0x39) == '\\0') {\n      *(undefined *)(dataPointer + 0xe) = 0;\n      FUNC_08004418();\n    }\n    *(undefined *)((int)dataPointer + 0x39) = 0x24;\n    *(uint *)(*dataPointer + 0xc) = *(uint *)(*dataPointer + 0xc) & 0xffffdfff;\n    FUN_08004204(dataPointer);\n    *(uint *)(*dataPointer + 0x10) = *(uint *)(*dataPointer + 0x10) & 0xffffb7ff;\n    *(uint *)(*dataPointer + 0x14) = *(uint *)(*dataPointer + 0x14) & 0xffffffd5;\n    *(uint *)(*dataPointer + 0xc) = *(uint *)(*dataPointer + 0xc) | 0x2000;\n    dataValue5 = 0;\n    *(undefined *)((int)dataPointer + 0x39) = 0x20;\n    *(undefined *)((int)dataPointer + 0x3a) = 0x20;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800441a": "initialize_data_0800441a",
                "param_1": "dataPointer",
                "param_1[0xf]": "dataValue5"
            },
            "calling": [
                "FUN_08004f4c"
            ],
            "called": [
                "FUN_08004204",
                "FUN_08004418"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004478": {
            "entrypoint": "0x08004478",
            "current_name": "process_data_08004478",
            "code": "\nundefined4 processData_08004478(int *buffer,ushort *data,int length,undefined4 param)\n\n{\n  int result;\n  undefined4 status;\n  \n  if (*(char *)((int)buffer + 0x39) == ' ') {\n    if (data == (ushort *)0x0) {\n      status = 1;\n    }\n    else if (length == 0) {\n      status = 1;\n    }\n    else if (*(char *)(buffer + 0xe) == '\\x01') {\n      status = 2;\n    }\n    else {\n      *(undefined *)(buffer + 0xe) = 1;\n      buffer[0xf] = 0;\n      *(undefined *)((int)buffer + 0x39) = 0x21;\n      status = FUN_08001cc4();\n      *(short *)(buffer + 9) = (short)length;\n      *(short *)((int)buffer + 0x26) = (short)length;\n      while (*(short *)((int)buffer + 0x26) != 0) {\n        *(short *)((int)buffer + 0x26) = *(short *)((int)buffer + 0x26) + -1;\n        if (buffer[2] == 0x1000) {\n          result = FUN_080043b4(buffer,0x80,0,status,param);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*buffer + 4) = *data & 0x1ff;\n          if (buffer[4] == 0) {\n            data = data + 1;\n          }\n          else {\n            data = (ushort *)((int)data + 1);\n          }\n        }\n        else {\n          result = FUN_080043b4(buffer,0x80,0,status,param);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*buffer + 4) = (uint)*(byte *)data;\n          data = (ushort *)((int)data + 1);\n        }\n      }\n      result = FUN_080043b4(buffer,0x40,0,status,param);\n      if (result == 0) {\n        *(undefined *)((int)buffer + 0x39) = 0x20;\n        *(undefined *)(buffer + 0xe) = 0;\n        status = 0;\n      }\n      else {\n        status = 3;\n      }\n    }\n  }\n  else {\n    status = 2;\n  }\n  return status;\n}\n\n",
            "renaming": {
                "FUN_08004478": "process_data_08004478",
                "param_1": "buffer",
                "param_2": "data",
                "param_3": "length",
                "param_4": "param",
                "iVar1": "result",
                "uVar2": "status"
            },
            "calling": [
                "FUN_080053d4"
            ],
            "called": [
                "FUN_08001cc4",
                "FUN_080043b4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800455a": {
            "entrypoint": "0x0800455a",
            "current_name": "validate_input_0800455a",
            "code": "\nundefined4 validateInput_0800455a(int *inputArray,int value1,int value2)\n\n{\n  if (*(char *)((int)inputArray + 0x39) != ' ') {\n    return 2;\n  }\n  if (value1 == 0) {\n    return 1;\n  }\n  if (value2 == 0) {\n    return 1;\n  }\n  if (*(char *)(inputArray + 0xe) != '\\x01') {\n    inputArray[8] = value1;\n    *(short *)(inputArray + 9) = (short)value2;\n    *(short *)((int)inputArray + 0x26) = (short)value2;\n    count = 0;\n    *(undefined *)((int)inputArray + 0x39) = 0x21;\n    *(undefined *)(inputArray + 0xe) = 0;\n    *(uint *)(*inputArray + 0xc) = *(uint *)(*inputArray + 0xc) | 0x80;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_0800455a": "validate_input_0800455a",
                "param_1": "inputArray",
                "param_2": "value1",
                "param_3": "value2",
                "param_1[0xf]": "count"
            },
            "calling": [
                "FUN_08005604",
                "FUN_08005568"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080045a2": {
            "entrypoint": "0x080045a2",
            "current_name": "check_parameters_080045a2",
            "code": "\nundefined4 check_parameters_080045a2(int *input_array,int length_value,int short_value)\n\n{\n  if (*(char *)((int)input_array + 0x3a) != ' ') {\n    return 2;\n  }\n  if (length_value == 0) {\n    return 1;\n  }\n  if (short_value == 0) {\n    return 1;\n  }\n  if (*(char *)(input_array + 0xe) != '\\x01') {\n    array_element_10 = length_value;\n    *(short *)(input_array + 0xb) = (short)short_value;\n    *(short *)((int)input_array + 0x2e) = (short)short_value;\n    array_element_0xf = 0;\n    *(undefined *)((int)input_array + 0x3a) = 0x22;\n    *(undefined *)(input_array + 0xe) = 0;\n    *(uint *)(*input_array + 0xc) = *(uint *)(*input_array + 0xc) | 0x100;\n    *(uint *)(*input_array + 0x14) = *(uint *)(*input_array + 0x14) | 1;\n    *(uint *)(*input_array + 0xc) = *(uint *)(*input_array + 0xc) | 0x20;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_080045a2": "check_parameters_080045a2",
                "param_1": "input_array",
                "param_2": "length_value",
                "param_3": "short_value",
                "param_1[10]": "array_element_10",
                "param_1[0xf]": "array_element_0xf"
            },
            "calling": [
                "FUN_08005510",
                "FUN_080054d4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080045fe": {
            "entrypoint": "0x080045fe",
            "current_name": "update_and_set_flag_080045fe",
            "code": "\nundefined4 updateAndSetFlag_080045fe(int *inputPtr)\n\n{\n  *(uint *)(*inputPtr + 0xc) = *(uint *)(*inputPtr + 0xc) & 0xffffffbf;\n  *(undefined *)((int)inputPtr + 0x39) = 0x20;\n  FUN_08005604();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080045fe": "update_and_set_flag_080045fe",
                "param_1": "inputPtr"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [
                "FUN_08005604"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004618": {
            "entrypoint": "0x08004618",
            "current_name": "process_binary_data_08004618",
            "code": "\nundefined4 processBinaryData_08004618(int *inputData)\n\n{\n  byte *bytePointer;\n  short counter;\n  undefined *undefinedPointer;\n  \n  if (*(char *)((int)inputData + 0x3a) != '\\\"') {\n    return 2;\n  }\n  if (inputData[2] == 0x1000) {\n    if (inputData[4] == 0) {\n      *(ushort *)inputData[10] = (ushort)((uint)(*(int *)(*inputData + 4) << 0x17) >> 0x17);\n      inputData[10] = inputData[10] + 2;\n    }\n    else {\n      *(ushort *)inputData[10] = (ushort)*(undefined4 *)(*inputData + 4) & 0xff;\n      inputData[10] = inputData[10] + 1;\n    }\n  }\n  else if (inputData[4] == 0) {\n    undefinedPointer = (undefined *)inputData[10];\n    inputData[10] = (int)(undefinedPointer + 1);\n    *undefinedPointer = (char)*(undefined4 *)(*inputData + 4);\n  }\n  else {\n    bytePointer = (byte *)inputData[10];\n    inputData[10] = (int)(bytePointer + 1);\n    *bytePointer = (byte)*(undefined4 *)(*inputData + 4) & 0x7f;\n  }\n  counter = *(short *)((int)inputData + 0x2e) + -1;\n  *(short *)((int)inputData + 0x2e) = counter;\n  if (counter != 0) {\n    return 0;\n  }\n  *(uint *)(*inputData + 0xc) = *(uint *)(*inputData + 0xc) & 0xffffffdf;\n  *(uint *)(*inputData + 0xc) = *(uint *)(*inputData + 0xc) & 0xfffffeff;\n  *(uint *)(*inputData + 0x14) = *(uint *)(*inputData + 0x14) & 0xfffffffe;\n  *(undefined *)((int)inputData + 0x3a) = 0x20;\n  FUN_080055e0();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004618": "process_binary_data_08004618",
                "param_1": "inputData",
                "pbVar1": "bytePointer",
                "sVar2": "counter",
                "puVar3": "undefinedPointer"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [
                "FUN_080055e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080046b8": {
            "entrypoint": "0x080046b8",
            "current_name": "process_flags_080046b8",
            "code": "\nvoid processFlags_080046b8(uint **flags)\n\n{\n  int result;\n  uint flag;\n  uint *ptr;\n  uint flag2;\n  uint flag1;\n  \n  ptr = *flags;\n  flag1 = *ptr;\n  flag = ptr[3];\n  if ((((flag1 & 0xf) == 0) && ((flag1 & 0x20) != 0)) && ((flag & 0x20) != 0)) {\n    FUN_08004618(flags);\n    return;\n  }\n  if (((flag1 & 0xf) == 0) || ((flag2 = ptr[5] & 1, flag2 == 0 && ((flag & 0x120) == 0)))) {\n    if (((flag1 & 0x80) != 0) && ((flag & 0x80) != 0)) {\n      FUN_08004198(flags);\n      return;\n    }\n    if (((flag1 & 0x40) != 0) && ((flag & 0x40) != 0)) {\n      FUN_080045fe(flags);\n    }\n  }\n  else {\n    if (((flag1 & 1) != 0) && ((flag & 0x100) != 0)) {\n      flagArray = (uint *)((uint)flagArray | 1);\n    }\n    if (((flag1 & 4) != 0) && (flag2 != 0)) {\n      flagArray = (uint *)((uint)flagArray | 2);\n    }\n    if (((flag1 & 2) != 0) && (flag2 != 0)) {\n      flagArray = (uint *)((uint)flagArray | 4);\n    }\n    if (((flag1 & 8) != 0) && (flag2 != 0)) {\n      flagArray = (uint *)((uint)flagArray | 8);\n    }\n    if (flagArray != (uint *)0x0) {\n      if (((flag1 & 0x20) != 0) && ((flag & 0x20) != 0)) {\n        FUN_08004618(flags);\n      }\n      if ((((uint)flagArray & 8) == 0) && (((*flags)[5] & 0x40) == 0)) {\n        FUNC_08005650(flags);\n        flagArray = (uint *)0x0;\n        return;\n      }\n      FUN_0800417c(flags);\n      ptr = *flags;\n      if ((ptr[5] & 0x40) == 0) {\n        FUNC_08005650(flags);\n        return;\n      }\n      ptr[5] = ptr[5] & 0xffffffbf;\n      if (dataArray == (uint *)0x0) {\n        FUNC_08005650(flags);\n        return;\n      }\n      dataArray[0xd] = (uint)&label;\n      result = FUN_0800258c(dataArray);\n      if (result != 0) {\n        (*(code *)dataArray[0xd])();\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080046b8": "process_flags_080046b8",
                "param_1": "flags",
                "iVar1": "result",
                "uVar2": "flag",
                "puVar3": "ptr",
                "uVar4": "flag2",
                "uVar5": "flag1",
                "param_1[0xf]": "flagArray",
                "param_1[0xd]": "dataArray",
                "LAB_080047d8_1": "label"
            },
            "calling": [],
            "called": [
                "FUN_08004198",
                "FUN_080045fe",
                "FUN_08004618",
                "FUN_0800258c",
                "FUN_08005650",
                "FUN_0800417c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047e8": {
            "entrypoint": "0x080047e8",
            "current_name": "combine_bytes_080047e8",
            "code": "\nbyte combineBytes_080047e8(int address)\n\n{\n  return *(byte *)(address + 0x3a) | *(byte *)(address + 0x39);\n}\n\n",
            "renaming": {
                "FUN_080047e8": "combine_bytes_080047e8",
                "param_1": "address"
            },
            "calling": [
                "FUN_080054b0",
                "FUN_0800548c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047f4": {
            "entrypoint": "0x080047f4",
            "current_name": "bitwise_check_080047f4",
            "code": "\nuint bitwise_check_080047f4(uint value,int ptr_array)\n\n{\n  return *(uint *)(ptr_array + ((value << 0x18) >> 0x1c) * 4) >> (value & 0xf) & 1;\n}\n\n",
            "renaming": {
                "FUN_080047f4": "bitwise_check_080047f4",
                "param_1": "value",
                "param_2": "ptr_array"
            },
            "calling": [
                "FUN_08005848",
                "FUN_080057b4",
                "FUN_08005890"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800480a": {
            "entrypoint": "0x0800480a",
            "current_name": "set_bit_0800480a",
            "code": "\nvoid setBit_0800480a(uint value,int array)\n\n{\n  uint shiftedIndex;\n  \n  shiftedIndex = (value << 0x18) >> 0x1c;\n  *(uint *)(array + shiftedIndex * 4) = *(uint *)(array + shiftedIndex * 4) | 1 << (value & 0xf);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800480a": "set_bit_0800480a",
                "param_1": "value",
                "param_2": "array",
                "uVar1": "shiftedIndex"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004828": {
            "entrypoint": "0x08004828",
            "current_name": "clear_bit_in_array_08004828",
            "code": "\nvoid clearBitInArray_08004828(uint bitPosition,int array)\n\n{\n  uint uVar1;\n  \n  uVar1 = (bitPosition << 0x18) >> 0x1c;\n  *(uint *)(array + uVar1 * 4) = *(uint *)(array + uVar1 * 4) & ~(1 << (bitPosition & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004828": "clear_bit_in_array_08004828",
                "param_1": "bitPosition",
                "param_2": "array"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004848": {
            "entrypoint": "0x08004848",
            "current_name": "get_value_from_param_08004848",
            "code": "\nundefined4 getValueFromParam_08004848(undefined4 input)\n\n{\n  switch(input) {\n  case 0:\n    return 0x40010800;\n  case 1:\n    return 0x40010c00;\n  case 2:\n    return 0x40011000;\n  case 3:\n    return 0x40011400;\n  case 4:\n    return 0x40011800;\n  default:\n    return 0;\n  }\n}\n\n",
            "renaming": {
                "FUN_08004848": "get_value_from_param_08004848",
                "param_1": "input"
            },
            "calling": [
                "FUN_08005848",
                "FUN_08005890"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004884": {
            "entrypoint": "0x08004884",
            "current_name": "map_parameter_value_08004884",
            "code": "\n\n\nundefined4 mapParameterValue_08004884(undefined4 param)\n\n{\n  undefined4 result;\n  \n  switch(param) {\n  case 0:\n    _DAT_40021018 = _DAT_40021018 | 4;\n    result = 0x40010800;\n    break;\n  case 1:\n    _DAT_40021018 = _DAT_40021018 | 8;\n    result = 0x40010c00;\n    break;\n  case 2:\n    _DAT_40021018 = _DAT_40021018 | 0x10;\n    result = 0x40011000;\n    break;\n  case 3:\n    _DAT_40021018 = _DAT_40021018 | 0x20;\n    result = 0x40011400;\n    break;\n  case 4:\n    _DAT_40021018 = _DAT_40021018 | 0x40;\n    result = 0x40011800;\n    break;\n  default:\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08004884": "map_parameter_value_08004884",
                "param_1": "param",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08004bb0",
                "FUN_08004974",
                "FUN_08004f4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800492c": {
            "entrypoint": "0x0800492c",
            "current_name": "calculate_result_0800492c",
            "code": "\nuint calculateResult_0800492c(undefined4 input1,undefined4 input2,undefined4 param3,undefined4 param4)\n\n{\n  int result;\n  uint shiftedResult;\n  \n  result = FUN_08004cce(input1,&DAT_08007400,param3,param4,param4);\n  shiftedResult = (uint)(result << 0xc) >> 0x1b;\n  if (0x10 < shiftedResult - 1) {\n    shiftedResult = 0;\n  }\n  return shiftedResult;\n}\n\n",
            "renaming": {
                "FUN_0800492c": "calculate_result_0800492c",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "result",
                "uVar2": "shiftedResult"
            },
            "calling": [
                "FUN_08004a4c"
            ],
            "called": [
                "FUN_08004cce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004948": {
            "entrypoint": "0x08004948",
            "current_name": "get_return_value_08004948",
            "code": "\nundefined4 getReturnValue_08004948(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  int result;\n  uint shiftedValue;\n  \n  result = FUN_08004cce(input1,&DAT_080074b4,input3,input4,input4);\n  shiftedValue = (uint)(result << 0xc) >> 0x1b;\n  if (shiftedValue == 3) {\n    return 8;\n  }\n  if (shiftedValue != 4) {\n    if (shiftedValue != 2) {\n      return 0;\n    }\n    return 4;\n  }\n  return 0xc;\n}\n\n",
            "renaming": {
                "FUN_08004948": "get_return_value_08004948",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "result",
                "uVar2": "shiftedValue"
            },
            "calling": [
                "FUN_08004b3c"
            ],
            "called": [
                "FUN_08004cce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004974": {
            "entrypoint": "0x08004974",
            "current_name": "initialize_flag_08004974",
            "code": "\n\n\nvoid initializeFlag_08004974(int *flagPointer,undefined4 param)\n\n{\n  undefined4 result;\n  uint flagValue;\n  int flag;\n  uint bitmask;\n  undefined4 someValue;\n  undefined4 anotherValue;\n  \n  flag = *flagPointer;\n  if (flag == 0x40012400) {\n    flagValue = _DAT_40021018 | 0x200;\n    flag = 0x200;\n    _DAT_40021018 = flagValue;\n  }\n  else {\n    flagValue = 0x40012800;\n    if (flag == 0x40012800) {\n      flagValue = _DAT_40021018 | 0x400;\n      flag = 0x400;\n      _DAT_40021018 = flagValue;\n    }\n  }\n  result = FUN_08004884((uint)((int)(char)DAT_20000080 << 0x18) >> 0x1c,param,flagValue,flag);\n  bitmask = 1 << (DAT_20000080 & 0xf) & 0xffff;\n  someValue = 3;\n  anotherValue = 0;\n  FUN_08002624(result,&bitmask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004974": "initialize_flag_08004974",
                "param_1": "flagPointer",
                "param_2": "param",
                "uVar1": "result",
                "uVar2": "flagValue",
                "iVar3": "flag",
                "local_18": "bitmask",
                "local_14": "someValue",
                "local_10": "anotherValue"
            },
            "calling": [
                "FUN_0800213c"
            ],
            "called": [
                "FUN_08002624",
                "FUN_08004884"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080049f0": {
            "entrypoint": "0x080049f0",
            "current_name": "update_control_registers_080049f0",
            "code": "\n\n\nvoid updateControlRegisters_080049f0(int *registerValue)\n\n{\n  if (*registerValue != 0x40012400) {\n    if (*registerValue == 0x40012800) {\n      _DAT_4002100c = _DAT_4002100c & 0xfffffbff;\n      _DAT_40021018 = _DAT_40021018 & 0xfffffbff;\n    }\n    return;\n  }\n  _DAT_4002100c = _DAT_4002100c & 0xfffffdff;\n  _DAT_40021018 = _DAT_40021018 & 0xfffffdff;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080049f0": "update_control_registers_080049f0",
                "param_1": "registerValue"
            },
            "calling": [
                "FUN_0800224c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a4c": {
            "entrypoint": "0x08004a4c",
            "current_name": "validate_and_extract_data_08004a4c",
            "code": "\nundefined2 validate_and_extract_data_08004a4c(undefined4 input_data)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined2 extracted_data;\n  uint data_length;\n  undefined4 successful_extraction;\n  undefined4 local_3c;\n  int buffer;\n  undefined4 var1;\n  undefined4 var2;\n  undefined4 var3;\n  undefined4 var4;\n  undefined4 var5;\n  undefined4 var6;\n  undefined4 var7;\n  undefined4 var8;\n  \n  FUN_080061e0(&buffer,0,0x30);\n  data_length = 0;\n  successful_extraction = 0;\n  local_3c = 0;\n  extracted_data = 0;\n  buffer = FUN_08004c78(input_data,&DAT_08007400);\n  if (buffer == 0) {\n    extracted_data = 0;\n  }\n  else {\n    var1 = 0;\n    var2 = 0;\n    var3 = 0;\n    var5 = 0;\n    var7 = 0xe0000;\n    var8 = 0;\n    var4 = 1;\n    var6 = 0;\n    DAT_20000080 = (undefined)input_data;\n    iVar1 = FUN_0800213c(&buffer);\n    if (iVar1 == 0) {\n      data_length = FUN_0800492c(input_data);\n      if (data_length < 0x12) {\n        successful_extraction = 1;\n        local_3c = 2;\n        iVar1 = FUN_08001e48(&buffer,&data_length);\n        if (iVar1 == 0) {\n          iVar1 = FUN_08002384(&buffer);\n          if (iVar1 == 0) {\n            iVar1 = FUN_08002004(&buffer);\n            if (iVar1 == 0) {\n              iVar1 = FUN_08001cd0(&buffer,10);\n              if (iVar1 == 0) {\n                uVar2 = FUN_08001f80(&buffer);\n                if ((uVar2 & 0x200) != 0) {\n                  extracted_data = FUN_08001e40(&buffer);\n                }\n                iVar1 = FUN_08002348(&buffer);\n                if (iVar1 == 0) {\n                  iVar1 = FUN_0800224c(&buffer);\n                  if (iVar1 != 0) {\n                    extracted_data = 0;\n                  }\n                }\n                else {\n                  extracted_data = 0;\n                }\n              }\n              else {\n                extracted_data = 0;\n              }\n            }\n            else {\n              extracted_data = 0;\n            }\n          }\n          else {\n            extracted_data = 0;\n          }\n        }\n        else {\n          extracted_data = 0;\n        }\n      }\n      else {\n        extracted_data = 0;\n      }\n    }\n    else {\n      extracted_data = 0;\n    }\n  }\n  return extracted_data;\n}\n\n",
            "renaming": {
                "FUN_08004a4c": "validate_and_extract_data_08004a4c",
                "param_1": "input_data",
                "local_44": "data_length",
                "local_40": "successful_extraction",
                "local_46": "extracted_data",
                "local_38": "buffer",
                "local_34": "var1",
                "local_30": "var2",
                "local_2c": "var3",
                "local_28": "var4",
                "local_24": "var5",
                "local_20": "var6",
                "local_1c": "var7",
                "local_10": "var8"
            },
            "calling": [
                "FUN_08005754"
            ],
            "called": [
                "FUN_0800213c",
                "FUN_08001f80",
                "FUN_08004c78",
                "FUN_08002384",
                "FUN_08002348",
                "FUN_08002004",
                "FUN_08001e40",
                "FUN_08001e48",
                "FUN_0800224c",
                "FUN_08001cd0",
                "FUN_080061e0",
                "FUN_0800492c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b34": {
            "entrypoint": "0x08004b34",
            "current_name": "initialize_application_08004b34",
            "code": "\nvoid initializeApplication_08004b34(void)\n\n{\n  FUN_08004d90();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b34": "initialize_application_08004b34"
            },
            "calling": [
                "FUN_08003ed8"
            ],
            "called": [
                "FUN_08004d90"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b3c": {
            "entrypoint": "0x08004b3c",
            "current_name": "process_data_08004b3c",
            "code": "\nvoid processData_08004b3c(undefined4 input)\n\n{\n  int result;\n  uint flags;\n  int dataArray [17];\n  \n  dataArray[0] = FUN_08004c78(input,&DAT_080074b4);\n  if ((dataArray[0] != 0) &&\n     ((((result = FUN_08004948(input), result == 0 || (result == 4)) || (result == 8)) ||\n      ((result == 0xc || (result == 0x18)))))) {\n    flags = FUN_08004cce(input,&DAT_080074b4);\n    if ((flags & 0x100000) == 0) {\n      FUN_080040b0(dataArray,result);\n    }\n    else {\n      FUN_0800412c(dataArray,result);\n    }\n    FUN_08003ed8(dataArray);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b3c": "process_data_08004b3c",
                "param_1": "input",
                "iVar1": "result",
                "uVar2": "flags",
                "local_50": "dataArray"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [
                "FUN_0800412c",
                "FUN_08004c78",
                "FUN_080040b0",
                "FUN_08004948",
                "FUN_08003ed8",
                "FUN_08004cce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b94": {
            "entrypoint": "0x08004b94",
            "current_name": "initialize_program_08004b94",
            "code": "\nvoid initialize_program_08004b94(void)\n\n{\n  FUN_08001cc4();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b94": "initialize_program_08004b94"
            },
            "calling": [
                "FUN_080058e0"
            ],
            "called": [
                "FUN_08001cc4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b9c": {
            "entrypoint": "0x08004b9c",
            "current_name": "FUNC_08004b9c",
            "code": "\nvoid FUNC_08004b9c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b9c": "FUNC_08004b9c"
            },
            "calling": [
                "FUN_08004b9e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004b9e": {
            "entrypoint": "0x08004b9e",
            "current_name": "initialize_system_08004b9e",
            "code": "\nvoid initialize_system_08004b9e(void)\n\n{\n  FUN_08001cac();\n  FUN_08002582();\n  FUNC_08004b9c();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b9e": "initialize_system_08004b9e"
            },
            "calling": [],
            "called": [
                "FUN_08001cac",
                "FUN_08002582",
                "FUN_08004b9c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004bb0": {
            "entrypoint": "0x08004bb0",
            "current_name": "configure_device_08004bb0",
            "code": "\n\n\nvoid configure_device_08004bb0(uint device_id,undefined4 config_param_1,undefined4 config_param_2)\n\n{\n  undefined4 translated_device_id;\n  uint bitmask;\n  undefined4 config_param_1_copy;\n  undefined4 config_param_2_copy;\n  undefined4 constant_value;\n  \n  translated_device_id = FUN_08004884((device_id << 0x18) >> 0x1c);\n  bitmask = 1 << (device_id & 0xf) & 0xffff;\n  constant_value = 3;\n  _DAT_40021018 = _DAT_40021018 | 1;\n  if ((device_id - 0xd & 0xff) < 2) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n  }\n  if (((device_id == 0xf) || (device_id == 0x13)) || (device_id == 0x14)) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n  }\n  config_param_1_copy = config_param_1;\n  config_param_2_copy = config_param_2;\n  FUN_08002624(translated_device_id,&bitmask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004bb0": "configure_device_08004bb0",
                "param_1": "device_id",
                "param_2": "config_param_1",
                "param_3": "config_param_2",
                "uVar1": "translated_device_id",
                "local_20": "bitmask",
                "local_1c": "config_param_1_copy",
                "local_18": "config_param_2_copy",
                "local_14": "constant_value"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [
                "FUN_08002624",
                "FUN_08004884"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c30": {
            "entrypoint": "0x08004c30",
            "current_name": "initialize_function_08004c30",
            "code": "\nvoid initializeFunction_08004c30(undefined4 ptrToData,undefined2 dataSize,int condition,undefined4 additionalData)\n\n{\n  if (condition == 0) {\n    FUN_0800281e(ptrToData,dataSize,0,additionalData,additionalData);\n    return;\n  }\n  FUN_0800281e(ptrToData,dataSize,1,additionalData,additionalData);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c30": "initialize_function_08004c30",
                "param_1": "ptrToData",
                "param_2": "dataSize",
                "param_3": "condition",
                "param_4": "additionalData"
            },
            "calling": [
                "FUN_08005848"
            ],
            "called": [
                "FUN_0800281e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c48": {
            "entrypoint": "0x08004c48",
            "current_name": "initialize_function_08004c48",
            "code": "\nvoid initializeFunction_08004c48(undefined4 input1,undefined2 input2,undefined4 input3,undefined4 input4)\n\n{\n  FUN_08002810(input1,input2,input3,input4,input4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c48": "initialize_function_08004c48",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4"
            },
            "calling": [
                "FUN_08005890"
            ],
            "called": [
                "FUN_08002810"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c52": {
            "entrypoint": "0x08004c52",
            "current_name": "initialize_system_08004c52",
            "code": "\nvoid initializeSystem_08004c52(void)\n\n{\n  FUN_08001c88();\n  FUN_08001b48();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c52": "initialize_system_08004c52"
            },
            "calling": [
                "FUN_08001c32"
            ],
            "called": [
                "FUN_08001b48",
                "FUN_08001c88"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c5e": {
            "entrypoint": "0x08004c5e",
            "current_name": "find_next_match_08004c5e",
            "code": "\nundefined4 find_next_match_08004c5e(int target_value,char *input_array)\n\n{\n  while( true ) {\n    if (*input_array == -1) {\n      return 0;\n    }\n    if (*input_array == target_value) break;\n    input_array = input_array + 0xc;\n  }\n  return *(undefined4 *)(input_array + 4);\n}\n\n",
            "renaming": {
                "FUN_08004c5e": "find_next_match_08004c5e",
                "param_1": "target_value",
                "param_2": "input_array"
            },
            "calling": [
                "FUN_08004c78",
                "FUN_08004c5e"
            ],
            "called": [
                "FUN_08004c5e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c78": {
            "entrypoint": "0x08004c78",
            "current_name": "check_valid_parameter_08004c78",
            "code": "\nundefined4 checkValidParameter_08004c78(int parameter)\n\n{\n  undefined4 result;\n  \n  if (parameter != -1) {\n    result = FUN_08004c5e();\n    return result;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004c78": "check_valid_parameter_08004c78",
                "param_1": "parameter",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080053d4",
                "FUN_08004f4c",
                "FUN_08004a4c",
                "FUN_08004b3c",
                "FUN_08005384"
            ],
            "called": [
                "FUN_08004c5e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c8a": {
            "entrypoint": "0x08004c8a",
            "current_name": "find_index_in_array_08004c8a",
            "code": "\nint find_index_in_array_08004c8a(int value,char *array)\n\n{\n  while( true ) {\n    if (*(int *)(array + 4) == 0) {\n      return -1;\n    }\n    if (*(int *)(array + 4) == value) break;\n    array = array + 0xc;\n  }\n  return (int)*array;\n}\n\n",
            "renaming": {
                "FUN_08004c8a": "find_index_in_array_08004c8a",
                "param_1": "value",
                "param_2": "array"
            },
            "calling": [
                "FUN_08004ca2",
                "FUN_08004c8a"
            ],
            "called": [
                "FUN_08004c8a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ca2": {
            "entrypoint": "0x08004ca2",
            "current_name": "check_param_08004ca2",
            "code": "\nundefined4 checkParam_08004ca2(int input)\n\n{\n  undefined4 result;\n  \n  if (input != 0) {\n    result = FUN_08004c8a();\n    return result;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08004ca2": "check_param_08004ca2",
                "param_1": "input",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08005b54",
                "FUN_08005384"
            ],
            "called": [
                "FUN_08004c8a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004cb2": {
            "entrypoint": "0x08004cb2",
            "current_name": "find_value_by_key_08004cb2",
            "code": "\nundefined4 find_value_by_key_08004cb2(int key,char *data)\n\n{\n  while( true ) {\n    if (*data == -1) {\n      return 0xffffffff;\n    }\n    if (*data == key) break;\n    data = data + 0xc;\n  }\n  return *(undefined4 *)(data + 8);\n}\n\n",
            "renaming": {
                "FUN_08004cb2": "find_value_by_key_08004cb2",
                "param_1": "key",
                "param_2": "data"
            },
            "calling": [
                "FUN_08004cb2",
                "FUN_08004cce"
            ],
            "called": [
                "FUN_08004cb2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004cce": {
            "entrypoint": "0x08004cce",
            "current_name": "check_and_return_value_08004cce",
            "code": "\nundefined4 checkAndReturnValue_08004cce(int input)\n\n{\n  undefined4 result;\n  \n  if (input == -1) {\n    return 0xffffffff;\n  }\n  result = FUN_08004cb2();\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08004cce": "check_and_return_value_08004cce",
                "param_1": "input",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08004948",
                "FUN_08004f4c",
                "FUN_08004b3c",
                "FUN_0800492c"
            ],
            "called": [
                "FUN_08004cb2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ce2": {
            "entrypoint": "0x08004ce2",
            "current_name": "check_value_08004ce2",
            "code": "\nundefined4 check_value_08004ce2(int value_to_check,char *array_of_values)\n\n{\n  if (value_to_check == -1) {\n    return 0;\n  }\n  while( true ) {\n    if (*array_of_values == -1) {\n      return 0;\n    }\n    if (value_to_check == *array_of_values) break;\n    array_of_values = array_of_values + 0xc;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08004ce2": "check_value_08004ce2",
                "param_1": "value_to_check",
                "param_2": "array_of_values"
            },
            "calling": [
                "FUN_080057b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d06": {
            "entrypoint": "0x08004d06",
            "current_name": "check_and_return_non_zero_08004d06",
            "code": "\nint check_and_return_non_zero_08004d06(int value_1,int value_2)\n\n{\n  if (value_1 != value_2) {\n    if (value_1 == 0) {\n      return value_2;\n    }\n    if (value_2 == 0) {\n      return value_1;\n    }\n    value_1 = 0;\n  }\n  return value_1;\n}\n\n",
            "renaming": {
                "FUN_08004d06": "check_and_return_non_zero_08004d06",
                "param_1": "value_1",
                "param_2": "value_2"
            },
            "calling": [
                "FUN_08004f4c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d18": {
            "entrypoint": "0x08004d18",
            "current_name": "execute_callback_function_08004d18",
            "code": "\nvoid executeCallbackFunction_08004d18(void)\n\n{\n  if (DAT_20000260 != (functionPointer *)0x0) {\n    (*DAT_20000260)(DAT_20000278);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d18": "execute_callback_function_08004d18",
                "code": "functionPointer"
            },
            "calling": [
                "FUN_08003ea0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d40": {
            "entrypoint": "0x08004d40",
            "current_name": "infinite_loop_08004d40",
            "code": "\nvoid infiniteLoop_08004d40(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08004d40": "infinite_loop_08004d40"
            },
            "calling": [
                "FUN_08001b48",
                "FUN_08004d40"
            ],
            "called": [
                "FUN_08004d40"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d44": {
            "entrypoint": "0x08004d44",
            "current_name": "initialize_system_08004d44",
            "code": "\n\n\nvoid initializeSystem_08004d44(void)\n\n{\n  _DAT_40021000 = _DAT_40021000 & 0xfef2ffff | 1;\n  _DAT_40021004 = _DAT_40021004 & 0xf8800000;\n  _DAT_40021008 = 0x9f0000;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d44": "initialize_system_08004d44"
            },
            "calling": [
                "entry"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d90": {
            "entrypoint": "0x08004d90",
            "current_name": "update_flags_based_on_input_08004d90",
            "code": "\n\n\nvoid updateFlagsBasedOnInput_08004d90(int *inputPtr)\n\n{\n  if (*inputPtr == 0x40012c00) {\n    _DAT_40021018 = _DAT_40021018 & 0xfffff7ff;\n  }\n  if (*inputPtr == 0x40000000) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffe;\n  }\n  if (*inputPtr == 0x40000400) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffd;\n  }\n  if (*inputPtr == 0x40000800) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffb;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d90": "update_flags_based_on_input_08004d90",
                "param_1": "inputPtr"
            },
            "calling": [
                "FUN_08004b34"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004df4": {
            "entrypoint": "0x08004df4",
            "current_name": "subtract_four_from_input_08004df4",
            "code": "\nint subtractFourFromInput_08004df4(int input)\n\n{\n  return input + -4;\n}\n\n",
            "renaming": {
                "FUN_08004df4": "subtract_four_from_input_08004df4",
                "param_1": "input"
            },
            "calling": [
                "FUN_08004e12",
                "FUN_08004df8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004df8": {
            "entrypoint": "0x08004df8",
            "current_name": "execute_callback_if_enabled_08004df8",
            "code": "\nvoid executeCallbackIfEnabled_08004df8(int callbackParam)\n\n{\n  int callbackResult;\n  \n  callbackResult = FUN_08004df4();\n  if ((*(code **)(callbackResult + 0x4c) != (code *)0x0) && (*(char *)(callbackParam + 0x1c) == '\\x01')) {\n    (**(code **)(callbackResult + 0x4c))(callbackResult,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004df8": "execute_callback_if_enabled_08004df8",
                "param_1": "callbackParam",
                "iVar1": "callbackResult"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [
                "FUN_08004df4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e12": {
            "entrypoint": "0x08004e12",
            "current_name": "execute_function_08004e12",
            "code": "\nvoid executeFunction_08004e12(void)\n\n{\n  int returnValue;\n  \n  returnValue = FUN_08004df4();\n  if (*(code **)(returnValue + 0x48) != (code *)0x0) {\n    (**(code **)(returnValue + 0x48))();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004e12": "execute_function_08004e12",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08003f18"
            ],
            "called": [
                "FUN_08004df4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e20": {
            "entrypoint": "0x08004e20",
            "current_name": "check_and_call_function_08004e20",
            "code": "\nvoid checkAndCallFunction_08004e20(void)\n\n{\n  if (DAT_2000027c != 0) {\n    FUN_08003f18();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004e20": "check_and_call_function_08004e20"
            },
            "calling": [],
            "called": [
                "FUN_08003f18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e70": {
            "entrypoint": "0x08004e70",
            "current_name": "subtract_four_08004e70",
            "code": "\nint subtractFour_08004e70(int num)\n\n{\n  return num + -4;\n}\n\n",
            "renaming": {
                "FUN_08004e70": "subtract_four_08004e70",
                "param_1": "num"
            },
            "calling": [
                "FUN_08004e74",
                "FUN_08004ec4",
                "FUN_08004ef4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e74": {
            "entrypoint": "0x08004e74",
            "current_name": "update_data_08004e74",
            "code": "\nvoid updateData_08004e74(int input,int flag,int value,undefined4 param)\n\n{\n  int result;\n  \n  result = FUN_08004e70();\n  if (value == *(int *)(input + 0xc)) {\n    if (flag == 0) {\n      *(undefined *)(result + 0x88) = 0;\n      *(undefined *)(result + 0x5c) = 0;\n      if (*(code **)(result + 100) != (code *)0x0) {\n        (**(code **)(result + 100))();\n      }\n      FUN_08002af8(input,result + 0x68,*(undefined *)(result + 0x88),8);\n      return;\n    }\n    *(undefined *)(result + 0x5c) = 1;\n    FUN_08002b84(input,result + 0x68,0x20,8,param);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004e74": "update_data_08004e74",
                "param_1": "input",
                "param_2": "flag",
                "param_3": "value",
                "param_4": "param",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08002cf2"
            ],
            "called": [
                "FUN_08002af8",
                "FUN_08004e70",
                "FUN_08002b84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ec4": {
            "entrypoint": "0x08004ec4",
            "current_name": "process_binary_08004ec4",
            "code": "\nvoid processBinary_08004ec4(undefined4 input)\n\n{\n  int returnValue;\n  \n  returnValue = FUN_08004e70();\n  if (((*(code **)(returnValue + 0x60) != (code *)0x0) && (*(char *)(returnValue + 0x5c) == '\\x01')) &&\n     (*(char *)(returnValue + 0x2c) != ' ')) {\n    (**(code **)(returnValue + 0x60))(returnValue + 0x68);\n  }\n  FUN_08002c10(input);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004ec4": "process_binary_08004ec4",
                "param_1": "input",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_0800316c",
                "FUN_080032b4",
                "FUN_08002d1c"
            ],
            "called": [
                "FUN_08004e70",
                "FUN_08002c10"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ef4": {
            "entrypoint": "0x08004ef4",
            "current_name": "check_and_execute_08004ef4",
            "code": "\nvoid checkAndExecute_08004ef4(undefined4 inputParam)\n\n{\n  int result;\n  \n  result = FUN_08004e70();\n  if (*(char *)(result + 0x5d) == '\\0') {\n    FUN_08002c10(inputParam);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004ef4": "check_and_execute_08004ef4",
                "param_1": "inputParam",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800316c"
            ],
            "called": [
                "FUN_08004e70",
                "FUN_08002c10"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004f4c": {
            "entrypoint": "0x08004f4c",
            "current_name": "configure_uart_pins_08004f4c",
            "code": "\n\n\nvoid configureUARTPins_08004f4c(int *pinConfig)\n\n{\n  int pinConfigUART;\n  int pinConfigPeripheral;\n  undefined4 uartConfig;\n  uint peripheralConfig;\n  uint uartPinMask;\n  uint pinConfigMask;\n  uint configShift;\n  undefined4 configValue;\n  \n  if (pinConfig != (int *)0x0) {\n    pinConfigUART = FUN_08004c78((int)*(char *)(pinConfig + 0x16),&DAT_0800764c);\n    pinConfigPeripheral = FUN_08004c78((int)*(char *)((int)pinConfig + 0x59),&DAT_08007604);\n    if ((pinConfigPeripheral == 0) || (pinConfigUART == 0)) {\n      FUN_080068f0(\"ERROR: at least one UART pin has no peripheral\\n\",pinConfigPeripheral);\n    }\n    else {\n      pinConfigUART = FUN_08004d06(pinConfigUART);\n      *pinConfig = pinConfigUART;\n      if (pinConfigUART == 0) {\n        FUN_080068f0(\"ERROR: U(S)ART pins mismatch\\n\");\n      }\n      else {\n        if (pinConfigUART == 0x40013800) {\n          _DAT_4002100c = _DAT_4002100c & 0xffffbfff;\n          _DAT_40021018 = _DAT_40021018 | 0x4000;\n          *(undefined *)(pinConfig + 0x11) = 0;\n          *(undefined *)((int)pinConfig + 0x5a) = 0x25;\n        }\n        else if (pinConfigUART == 0x40004400) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffdffff;\n          _DAT_4002101c = _DAT_4002101c | 0x20000;\n          *(undefined *)(pinConfig + 0x11) = 1;\n          *(undefined *)((int)pinConfig + 0x5a) = 0x26;\n        }\n        else if (pinConfigUART == 0x40004800) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffbffff;\n          _DAT_4002101c = _DAT_4002101c | 0x40000;\n          *(undefined *)(pinConfig + 0x11) = 2;\n          *(undefined *)((int)pinConfig + 0x5a) = 0x27;\n        }\n        uartConfig = FUN_08004884((uint)((int)*(char *)((int)pinConfig + 0x59) << 0x18) >> 0x1c);\n        peripheralConfig = FUN_08004cce((int)*(char *)((int)pinConfig + 0x59),&DAT_08007604);\n        uartPinMask = 1 << (*(byte *)((int)pinConfig + 0x59) & 0xf) & 0xffff;\n        pinConfigMask = (peripheralConfig >> 3 & 1) << 4 | peripheralConfig & 7;\n        configShift = (peripheralConfig << 0x1a) >> 0x1e;\n        _DAT_40021018 = _DAT_40021018 | 1;\n        switch((peripheralConfig << 0x11) >> 0x19) {\n        case 1:\n          _DAT_40010004 = _DAT_40010004 | 0x7000001;\n          break;\n        case 2:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          break;\n        case 3:\n          _DAT_40010004 = _DAT_40010004 | 0x7000002;\n          break;\n        case 4:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          break;\n        case 5:\n          _DAT_40010004 = _DAT_40010004 | 0x7000004;\n          break;\n        case 6:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          break;\n        case 7:\n          _DAT_40010004 = _DAT_40010004 | 0x7000008;\n          break;\n        case 8:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          break;\n        case 9:\n          _DAT_40010004 = _DAT_40010004 | 0x7000030;\n          break;\n        case 10:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          break;\n        case 0xb:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          break;\n        case 0xc:\n          _DAT_40010004 = _DAT_40010004 | 0x70000c0;\n          break;\n        case 0xd:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          break;\n        case 0xe:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          break;\n        case 0xf:\n          _DAT_40010004 = _DAT_40010004 | 0x7000300;\n          break;\n        case 0x10:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          break;\n        case 0x11:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          break;\n        case 0x12:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          break;\n        case 0x13:\n          _DAT_40010004 = _DAT_40010004 | 0x7000c00;\n          break;\n        case 0x14:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          break;\n        case 0x15:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          break;\n        case 0x16:\n          _DAT_40010004 = _DAT_40010004 | 0x7001000;\n          break;\n        case 0x17:\n          _DAT_40010004 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          break;\n        case 0x1b:\n          _DAT_40010004 = _DAT_40010004 | 0x7008000;\n          break;\n        case 0x1c:\n          _DAT_40010004 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          break;\n        case 0x21:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff;\n          break;\n        case 0x22:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          break;\n        case 0x23:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          break;\n        case 0x24:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n        }\n        configValue = 3;\n        FUN_08002624(uartConfig,&uartPinMask);\n        uartConfig = FUN_08004884((uint)((int)*(char *)(pinConfig + 0x16) << 0x18) >> 0x1c);\n        peripheralConfig = FUN_08004cce((int)*(char *)(pinConfig + 0x16),&DAT_0800764c);\n        uartPinMask = 1 << (*(byte *)(pinConfig + 0x16) & 0xf) & 0xffff;\n        pinConfigMask = (peripheralConfig >> 3 & 1) << 4 | peripheralConfig & 7;\n        configShift = (peripheralConfig << 0x1a) >> 0x1e;\n        FUN_08002624(uartConfig,&uartPinMask);\n        (&DAT_2000032c)[*(byte *)(pinConfig + 0x11)] = pinConfig + 1;\n        pinConfig[1] = *pinConfig;\n        pinConfig[2] = pinConfig[0x12];\n        pinConfig[3] = pinConfig[0x13];\n        pinConfig[4] = pinConfig[0x14];\n        pinConfig[5] = pinConfig[0x15];\n        pinConfig[6] = 0xc;\n        pinConfig[7] = 0;\n        pinConfig[8] = 0;\n        FUN_0800441a(pinConfig + 1);\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004f4c": "configure_uart_pins_08004f4c",
                "param_1": "pinConfig",
                "iVar1": "pinConfigUART",
                "iVar2": "pinConfigPeripheral",
                "uVar3": "uartConfig",
                "uVar4": "peripheralConfig",
                "local_20": "uartPinMask",
                "local_1c": "pinConfigMask",
                "local_18": "configShift",
                "local_14": "configValue"
            },
            "calling": [
                "FUN_08005a68",
                "FUN_08005384"
            ],
            "called": [
                "FUN_08002624",
                "FUN_08004c78",
                "FUN_08004d06",
                "FUN_08004884",
                "FUN_080068f0",
                "FUN_08004cce",
                "FUN_0800441a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005384": {
            "entrypoint": "0x08005384",
            "current_name": "initialize_data_08005384",
            "code": "\nvoid initializeData_08005384(void)\n\n{\n  int result;\n  undefined4 secondResult;\n  \n  result = FUN_08004c78(2,&DAT_0800764c);\n  if (result != 0) {\n    secondResult = FUN_08004c78(2,&DAT_0800764c);\n    DAT_200000e1 = FUN_08004ca2(secondResult,&DAT_08007604);\n    DAT_200000e0 = 2;\n    DAT_200000d0 = 0x2580;\n    DAT_200000dc = 0;\n    DAT_200000d4 = 0;\n    DAT_200000d8 = 0;\n    FUN_08004f4c(&DAT_20000088);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005384": "initialize_data_08005384",
                "iVar1": "result",
                "uVar2": "secondResult"
            },
            "calling": [
                "FUN_080053d4"
            ],
            "called": [
                "FUN_08004c78",
                "FUN_08004ca2",
                "FUN_08004f4c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080053d4": {
            "entrypoint": "0x080053d4",
            "current_name": "check_conditions_080053d4",
            "code": "\nuint check_conditions_080053d4(undefined4 input_value,uint flag_value)\n\n{\n  int first_value;\n  int second_value;\n  uint loop_counter;\n  \n  first_value = FUN_08001cc4();\n  second_value = FUN_08004c78(2,&DAT_0800764c);\n  if (second_value == 0) {\n    return 0;\n  }\n  for (loop_counter = 0;\n      (loop_counter < 5 &&\n      (((&DAT_2000032c)[loop_counter] == 0 ||\n       (second_value = FUN_08004c78(2,&DAT_0800764c), *(int *)(&DAT_2000032c)[loop_counter] != second_value))));\n      loop_counter = loop_counter + 1 & 0xff) {\n  }\n  if (4 < loop_counter) {\n    if ((4 < DAT_200000cc) && (FUN_08005384(), 4 < DAT_200000cc)) {\n      return 0;\n    }\n    loop_counter = (uint)DAT_200000cc;\n  }\n  do {\n    second_value = FUN_08004478((&DAT_2000032c)[loop_counter],input_value,flag_value & 0xffff,1000);\n    if (second_value == 0) {\n      return flag_value;\n    }\n    second_value = FUN_08001cc4();\n  } while ((uint)(second_value - first_value) < 1000);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080053d4": "check_conditions_080053d4",
                "param_1": "input_value",
                "param_2": "flag_value",
                "iVar1": "first_value",
                "iVar2": "second_value",
                "uVar3": "loop_counter"
            },
            "calling": [
                "FUN_08005730"
            ],
            "called": [
                "FUN_08004c78",
                "FUN_08004478",
                "FUN_08001cc4",
                "FUN_08005384"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800548c": {
            "entrypoint": "0x0800548c",
            "current_name": "is_code_valid_0800548c",
            "code": "\nbool isCodeValid_0800548c(int input)\n\n{\n  uint codeValue;\n  \n  codeValue = FUN_080047e8((&DAT_2000032c)[*(byte *)(input + 0x44)]);\n  return (codeValue & 0x22) == 0x22;\n}\n\n",
            "renaming": {
                "FUN_0800548c": "is_code_valid_0800548c",
                "param_1": "input",
                "uVar1": "codeValue"
            },
            "calling": [
                "FUN_08005510",
                "FUN_080054d4"
            ],
            "called": [
                "FUN_080047e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080054b0": {
            "entrypoint": "0x080054b0",
            "current_name": "is_bit_pattern_valid_080054b0",
            "code": "\nbool isBitPatternValid_080054b0(int input)\n\n{\n  uint result;\n  \n  result = FUN_080047e8((&DAT_2000032c)[*(byte *)(input + 0x44)]);\n  return (result & 0x21) == 0x21;\n}\n\n",
            "renaming": {
                "FUN_080054b0": "is_bit_pattern_valid_080054b0",
                "param_1": "input",
                "uVar1": "result"
            },
            "calling": [],
            "called": [
                "FUN_080047e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080054d4": {
            "entrypoint": "0x080054d4",
            "current_name": "extract_and_process_data_080054d4",
            "code": "\nundefined4 extract_and_process_data_080054d4(int input_data,undefined *output_data,undefined4 param_3,undefined4 param_4)\n\n{\n  int result;\n  \n  if (input_data == 0) {\n    return 0xffffffff;\n  }\n  result = FUN_0800548c();\n  if (result == 0) {\n    *output_data = *(undefined *)(input_data + 0x45);\n    FUN_080045a2((&DAT_2000032c)[*(byte *)(input_data + 0x44)],input_data + 0x45,1,&DAT_2000032c,param_4);\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080054d4": "extract_and_process_data_080054d4",
                "param_1": "input_data",
                "param_2": "output_data",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800598a"
            ],
            "called": [
                "FUN_080045a2",
                "FUN_0800548c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005510": {
            "entrypoint": "0x08005510",
            "current_name": "update_data_08005510",
            "code": "\nvoid updateData_08005510(int dataPtr,undefined4 newValue,undefined4 unusedParam,undefined4 additionalParam)\n\n{\n  int result;\n  uint index;\n  \n  if (dataPtr != 0) {\n    result = FUN_0800548c();\n    if (result == 0) {\n      index = (uint)*(byte *)(dataPtr + 0x44);\n      *(undefined4 *)(&DAT_200002dc + index * 4) = newValue;\n      *(int *)(&DAT_200002f0 + index * 4) = dataPtr;\n      FUN_08002494((int)*(char *)(dataPtr + 0x5a),0,1,index,additionalParam);\n      FUN_080024f8((int)*(char *)(dataPtr + 0x5a));\n      FUN_080045a2((&DAT_2000032c)[*(byte *)(dataPtr + 0x44)],dataPtr + 0x45,1);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005510": "update_data_08005510",
                "param_1": "dataPtr",
                "param_2": "newValue",
                "param_3": "unusedParam",
                "param_4": "additionalParam",
                "iVar1": "result",
                "uVar2": "index"
            },
            "calling": [
                "FUN_08005a68"
            ],
            "called": [
                "FUN_080045a2",
                "FUN_08002494",
                "FUN_0800548c",
                "FUN_080024f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005568": {
            "entrypoint": "0x08005568",
            "current_name": "update_data_08005568",
            "code": "\nvoid updateData_08005568(int dataPtr,undefined4 newValue)\n\n{\n  byte byteValue;\n  \n  if (dataPtr != 0) {\n    byteValue = *(byte *)(dataPtr + 0x44);\n    *(undefined4 *)(&DAT_20000304 + (uint)byteValue * 4) = newValue;\n    *(int *)(&DAT_20000318 + (uint)byteValue * 4) = dataPtr;\n    FUN_08002494((int)*(char *)(dataPtr + 0x5a),0,2);\n    FUN_080024f8((int)*(char *)(dataPtr + 0x5a));\n    FUN_0800455a((&DAT_2000032c)[*(byte *)(dataPtr + 0x44)],\n                 *(int *)(dataPtr + 100) + (uint)*(ushort *)(dataPtr + 0x6a),1);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005568": "update_data_08005568",
                "param_1": "dataPtr",
                "param_2": "newValue",
                "bVar1": "byteValue"
            },
            "calling": [],
            "called": [
                "FUN_08002494",
                "FUN_080024f8",
                "FUN_0800455a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080055bc": {
            "entrypoint": "0x080055bc",
            "current_name": "find_match_index_080055bc",
            "code": "\nuint find_match_index_080055bc(int input_value)\n\n{\n  uint match_index;\n  \n  if (input_value == 0) {\n    match_index = 5;\n  }\n  else {\n    match_index = 0;\n    while( true ) {\n      if (4 < match_index) {\n        return match_index;\n      }\n      if (input_value == (&DAT_2000032c)[match_index]) break;\n      match_index = match_index + 1 & 0xff;\n    }\n  }\n  return match_index;\n}\n\n",
            "renaming": {
                "FUN_080055bc": "find_match_index_080055bc",
                "param_1": "input_value",
                "uVar1": "match_index"
            },
            "calling": [
                "FUN_08005604",
                "FUN_080055e0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080055e0": {
            "entrypoint": "0x080055e0",
            "current_name": "execute_function_080055e0",
            "code": "\nvoid executeFunction_080055e0(void)\n\n{\n  uint returnValue;\n  \n  returnValue = FUN_080055bc();\n  if (returnValue < 5) {\n    (**(code **)(&DAT_200002dc + returnValue * 4))(*(undefined4 *)(&DAT_200002f0 + returnValue * 4));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080055e0": "execute_function_080055e0",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08004618"
            ],
            "called": [
                "FUN_080055bc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005604": {
            "entrypoint": "0x08005604",
            "current_name": "execute_task_08005604",
            "code": "\nvoid executeTask_08005604(void)\n\n{\n  uint returnValue;\n  int result;\n  int dataPointer;\n  \n  returnValue = FUN_080055bc();\n  dataPointer = *(int *)(&DAT_20000318 + returnValue * 4);\n  if ((returnValue < 5) && (result = (**(code **)(&DAT_20000304 + returnValue * 4))(dataPointer), result != -1)) {\n    FUN_0800455a((&DAT_2000032c)[*(byte *)(dataPointer + 0x44)],\n                 *(int *)(dataPointer + 100) + (uint)*(ushort *)(dataPointer + 0x6a),1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005604": "execute_task_08005604",
                "uVar1": "returnValue",
                "iVar2": "result",
                "iVar3": "dataPointer"
            },
            "calling": [
                "FUN_080045fe"
            ],
            "called": [
                "FUN_080055bc",
                "FUN_0800455a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005650": {
            "entrypoint": "0x08005650",
            "current_name": "FUNC_08005650",
            "code": "\nvoid FUNC_08005650(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005650": "FUNC_08005650"
            },
            "calling": [
                "FUN_080046b8"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080056d8": {
            "entrypoint": "0x080056d8",
            "current_name": "allocate_memory_080056d8",
            "code": "\nundefined * allocateMemory_080056d8(int size)\n\n{\n  undefined *allocatedMemory;\n  \n  if (DAT_20000340 == (undefined *)0x0) {\n    DAT_20000340 = &DAT_200006a8;\n  }\n  allocatedMemory = DAT_20000340;\n  if (DAT_20000340 + size <= stackPointer) {\n    DAT_20000340 = DAT_20000340 + size;\n    return allocatedMemory;\n  }\n  DAT_200006a4 = 0xc;\n  return (undefined *)0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080056d8": "allocate_memory_080056d8",
                "param_1": "size",
                "puVar1": "allocatedMemory",
                "&stack0x00000000": "stackPointer"
            },
            "calling": [
                "FUN_08006920"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005714": {
            "entrypoint": "0x08005714",
            "current_name": "get_default_value_08005714",
            "code": "\nuint32_t get_default_value_08005714(void)\n\n{\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08005714": "get_default_value_08005714",
                "undefined4": "uint32_t"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800571a": {
            "entrypoint": "0x0800571a",
            "current_name": "initialize_memory_0800571a",
            "code": "\nundefined4 initializeMemory_0800571a(undefined4 unusedParameter,int memoryAddress)\n\n{\n  *(undefined4 *)(memoryAddress + 4) = 0x2000;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800571a": "initialize_memory_0800571a",
                "param_1": "unusedParameter",
                "param_2": "memoryAddress"
            },
            "calling": [
                "FUN_08007004"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005724": {
            "entrypoint": "0x08005724",
            "current_name": "initialize_flag_08005724",
            "code": "\nint initializeFlag_08005724(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08005724": "initialize_flag_08005724",
                "undefined4": "int"
            },
            "calling": [
                "FUN_08007028"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005728": {
            "entrypoint": "0x08005728",
            "current_name": "initialize_application_08005728",
            "code": "\nvoid initialize_application_08005728(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005728": "initialize_application_08005728",
                "undefined4": "void"
            },
            "calling": [
                "FUN_08007048"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800572c": {
            "entrypoint": "0x0800572c",
            "current_name": "initialize_program_0800572c",
            "code": "\nundefined4 initializeProgram_0800572c(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800572c": "initialize_program_0800572c"
            },
            "calling": [
                "FUN_0800706c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005730": {
            "entrypoint": "0x08005730",
            "current_name": "initialize_parameters_08005730",
            "code": "\nvoid initializeParameters_08005730(undefined4 param1,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  FUN_080053d4(param2,param3,param3,param4,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005730": "initialize_parameters_08005730",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [
                "FUN_08006f5a"
            ],
            "called": [
                "FUN_080053d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800573c": {
            "entrypoint": "0x0800573c",
            "current_name": "infinite_loop_0800573c",
            "code": "\nvoid infiniteLoop_0800573c(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_0800573c": "infinite_loop_0800573c"
            },
            "calling": [
                "FUN_0800573c",
                "FUN_08006ac0"
            ],
            "called": [
                "FUN_0800573c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005740": {
            "entrypoint": "0x08005740",
            "current_name": "initialize_value_08005740",
            "code": "\nundefined4 initializeValue_08005740(void)\n\n{\n  DAT_200006a4 = 0x16;\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08005740": "initialize_value_08005740"
            },
            "calling": [
                "FUN_08006f00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005750": {
            "entrypoint": "0x08005750",
            "current_name": "check_if_one_08005750",
            "code": "\nint checkIfOne_08005750(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08005750": "check_if_one_08005750",
                "undefined4": "int"
            },
            "calling": [
                "thunk_FUN_08005750"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005754": {
            "entrypoint": "0x08005754",
            "current_name": "process_data_08005754",
            "code": "\nuint processData_08005754(uint inputValue)\n\n{\n  bool isWithinRange;\n  char charValue;\n  uint result;\n  \n  if (inputValue < 0xe) {\n    if (inputValue + 0x2e < 0x3c) {\n      isWithinRange = true;\n    }\n    else {\n      isWithinRange = false;\n    }\n  }\n  else {\n    isWithinRange = inputValue < 0x3c;\n  }\n  if (isWithinRange) {\n    if (inputValue < 0xe) {\n      inputValue = inputValue + 0x2e;\n    }\n    charValue = (&DAT_080076f0)[inputValue];\n  }\n  else {\n    charValue = -1;\n  }\n  if (charValue == -1) {\n    result = 0;\n  }\n  else {\n    result = FUN_08004a4c();\n    if (DAT_200000f4 != 0xc) {\n      if (DAT_200000f4 < 0xc) {\n        return result >> (0xc - DAT_200000f4 & 0xff);\n      }\n      return result << (DAT_200000f4 - 0xc & 0xff);\n    }\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005754": "process_data_08005754",
                "param_1": "inputValue",
                "bVar1": "isWithinRange",
                "cVar2": "charValue",
                "uVar3": "result"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08004a4c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080057b4": {
            "entrypoint": "0x080057b4",
            "current_name": "process_data_080057b4",
            "code": "\nvoid processData_080057b4(uint inputValue,undefined4 mode,undefined4 param1,undefined *param2)\n\n{\n  int result;\n  undefined *ptr;\n  int index;\n  \n  if (inputValue < 0x3c) {\n    index = (int)(char)(&DAT_080076f0)[inputValue];\n    ptr = &DAT_080076f0;\n  }\n  else {\n    index = -1;\n    ptr = param2;\n  }\n  if (index != -1) {\n    result = FUN_080047f4(index,&DAT_20000344,param1,ptr,param2);\n    if (result != 0) {\n      result = FUN_08004ce2(index,&DAT_080074b4);\n      if (result != 0) {\n        FUN_08004b3c(index);\n      }\n      FUN_08004828(index,&DAT_20000344);\n    }\n    switch(mode) {\n    case 0:\n      FUN_08004bb0(index,0);\n      break;\n    case 1:\n      FUN_08004bb0(index,1,0);\n      break;\n    case 2:\n      FUN_08004bb0(index,0,1);\n      break;\n    case 3:\n      FUN_08004bb0(index,0,2);\n    }\n    FUN_0800480a(index,&DAT_20000358);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080057b4": "process_data_080057b4",
                "param_1": "inputValue",
                "param_2": "mode",
                "param_3": "param1",
                "param_4": "param2",
                "iVar1": "result",
                "iVar3": "index",
                "puVar2": "ptr"
            },
            "calling": [
                "FUN_08000bcc",
                "FUN_0800157c",
                "FUN_080013a4"
            ],
            "called": [
                "FUN_08004bb0",
                "FUN_080047f4",
                "FUN_0800480a",
                "FUN_08004b3c",
                "FUN_08004828",
                "FUN_08004ce2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005848": {
            "entrypoint": "0x08005848",
            "current_name": "process_data_08005848",
            "code": "\nvoid processData_08005848(uint index,undefined4 arg1,undefined4 arg2,undefined *data)\n\n{\n  int result;\n  undefined4 transformedValue;\n  undefined *pointerToData;\n  uint value;\n  \n  if (index < 0x3c) {\n    value = (uint)(char)(&DAT_080076f0)[index];\n    pointerToData = &DAT_080076f0;\n  }\n  else {\n    value = 0xffffffff;\n    pointerToData = data;\n  }\n  if ((value != 0xffffffff) &&\n     (result = FUN_080047f4(value,&DAT_20000358,arg2,pointerToData,data), result != 0)) {\n    transformedValue = FUN_08004848((value << 0x18) >> 0x1c);\n    FUN_08004c30(transformedValue,1 << (value & 0xf) & 0xffff,arg1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005848": "process_data_08005848",
                "param_1": "index",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "data",
                "iVar1": "result",
                "uVar2": "transformedValue",
                "puVar3": "pointerToData",
                "uVar4": "value"
            },
            "calling": [
                "FUN_08001310",
                "FUN_08000cd0",
                "FUN_080012a2",
                "FUN_08000bcc",
                "FUN_080015b2",
                "FUN_080012c0",
                "FUN_0800157c",
                "FUN_080013a4",
                "FUN_080012e8"
            ],
            "called": [
                "FUN_08004848",
                "FUN_08004c30",
                "FUN_080047f4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005890": {
            "entrypoint": "0x08005890",
            "current_name": "check_and_convert_value_08005890",
            "code": "\nchar check_and_convert_value_08005890(uint value)\n\n{\n  char result;\n  int conversion_result;\n  undefined4 shifted_value;\n  uint lookup_result;\n  \n  if (value < 0x3c) {\n    lookup_result = (uint)(char)(&DAT_080076f0)[value];\n  }\n  else {\n    lookup_result = 0xffffffff;\n  }\n  if (lookup_result == 0xffffffff) {\n    result = '\\0';\n  }\n  else {\n    conversion_result = FUN_080047f4(lookup_result,&DAT_20000358);\n    if (conversion_result == 0) {\n      result = '\\0';\n    }\n    else {\n      shifted_value = FUN_08004848((lookup_result << 0x18) >> 0x1c);\n      result = FUN_08004c48(shifted_value,1 << (lookup_result & 0xf) & 0xffff);\n    }\n  }\n  if (result != '\\0') {\n    result = '\\x01';\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005890": "check_and_convert_value_08005890",
                "param_1": "value",
                "cVar1": "result",
                "iVar2": "conversion_result",
                "uVar3": "shifted_value",
                "uVar4": "lookup_result"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_080015b2"
            ],
            "called": [
                "FUN_08004848",
                "FUN_080047f4",
                "FUN_08004c48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058e0": {
            "entrypoint": "0x080058e0",
            "current_name": "initialize_application_080058e0",
            "code": "\nvoid initialize_application_080058e0(void)\n\n{\n  FUN_08004b94();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080058e0": "initialize_application_080058e0"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08000bcc",
                "FUN_08001ab0",
                "FUN_080016b4"
            ],
            "called": [
                "FUN_08004b94"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058e8": {
            "entrypoint": "0x080058e8",
            "current_name": "FUNC_080058e8",
            "code": "\nvoid FUNC_080058e8(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080058e8": "FUNC_080058e8"
            },
            "calling": [
                "FUN_08000bcc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800591e": {
            "entrypoint": "0x0800591e",
            "current_name": "calculate_offset_0800591e",
            "code": "\nushort calculateOffset_0800591e(int baseAddress)\n\n{\n  return (*(short *)(baseAddress + 0x134) + 0x40) - *(short *)(baseAddress + 0x136) & 0x3f;\n}\n\n",
            "renaming": {
                "FUN_0800591e": "calculate_offset_0800591e",
                "param_1": "baseAddress"
            },
            "calling": [
                "FUN_08005a18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800598a": {
            "entrypoint": "0x0800598a",
            "current_name": "update_data_0800598a",
            "code": "\nvoid updateData_0800598a(int data)\n\n{\n  int result;\n  ushort newValue;\n  undefined valueToUpdate;\n  \n  result = FUN_080054d4(data,&valueToUpdate);\n  if ((result == 0) &&\n     (newValue = *(short *)(data + 0x60) + 1U & 0x3f, newValue != *(ushort *)(data + 0x62))) {\n    *(undefined *)(*(int *)(data + 0x5c) + (uint)*(ushort *)(data + 0x60)) = valueToUpdate;\n    *(ushort *)(data + 0x60) = newValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800598a": "update_data_0800598a",
                "param_1": "data",
                "iVar1": "result",
                "uVar2": "newValue",
                "local_9": "valueToUpdate"
            },
            "calling": [],
            "called": [
                "FUN_080054d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a18": {
            "entrypoint": "0x08005a18",
            "current_name": "FUNC_08005a18",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08005a1e) */\n/* WARNING: Removing unreachable block (ram,0x08005a30) */\n/* WARNING: Removing unreachable block (ram,0x08005a26) */\n/* WARNING: Removing unreachable block (ram,0x08005a38) */\n\nvoid FUNC_08005a18(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a18": "FUNC_08005a18"
            },
            "calling": [
                "FUN_08005f6c"
            ],
            "called": [
                "FUN_0800591e"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005a44": {
            "entrypoint": "0x08005a44",
            "current_name": "initialize_parameters_08005a44",
            "code": "\nvoid initializeParameters_08005a44(int baseAddress)\n\n{\n  *(int *)(baseAddress + 0x130) = baseAddress + 0x11;\n  *(undefined2 *)(baseAddress + 0x134) = 0;\n  *(undefined2 *)(baseAddress + 0x136) = 0;\n  *(int *)(baseAddress + 0x138) = baseAddress + 0x51;\n  *(undefined2 *)(baseAddress + 0x13c) = 0;\n  *(undefined2 *)(baseAddress + 0x13e) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a44": "initialize_parameters_08005a44",
                "param_1": "baseAddress"
            },
            "calling": [
                "FUN_08005b54"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a68": {
            "entrypoint": "0x08005a68",
            "current_name": "initialize_serial_communication_08005a68",
            "code": "\nvoid initializeSerialCommunication_08005a68(int serialPort,undefined4 baudRate,byte configByte)\n\n{\n  uint extraOutput;\n  char *logMessage;\n  byte configBits;\n  int configValue;\n  byte *bytePointer;\n  char tempChar;\n  int unaffected;\n  code *unrecoveredJumpTable;\n  \n  *(undefined4 *)(serialPort + 0x11c) = baudRate;\n  *(byte *)(serialPort + 0x140) = configByte;\n  configBits = configByte & 7;\n  if (configBits == 4) {\n    configValue = 7;\n  }\n  else if (configBits == 6) {\n    configValue = 8;\n  }\n  else if (configBits == 2) {\n    configValue = 6;\n  }\n  else {\n    configValue = 0;\n  }\n  if ((configByte & 0x30) == 0x30) {\n    *(undefined4 *)(serialPort + 0x128) = 0x600;\n    configValue = configValue + 1;\n  }\n  else if ((configByte & 0x20) == 0) {\n    *(undefined4 *)(serialPort + 0x128) = 0;\n  }\n  else {\n    *(undefined4 *)(serialPort + 0x128) = 0x400;\n    configValue = configValue + 1;\n  }\n  if ((configByte & 8) == 0) {\n    *(undefined4 *)(serialPort + 0x124) = 0;\n  }\n  else {\n    *(undefined4 *)(serialPort + 0x124) = 0x2000;\n  }\n  if (configValue == 8) {\n    *(undefined4 *)(serialPort + 0x120) = 0;\n  }\n  else if (configValue == 9) {\n    *(undefined4 *)(serialPort + 0x120) = 0x1000;\n  }\n  else {\n    configValue = 0;\n  }\n  if (configValue != 0) {\n    FUN_08004f4c(serialPort + 0xd4);\n    FUN_08005510(serialPort + 0xd4,0x800598b);\n    return;\n  }\n  logMessage = \"void HardwareSerial::begin(long unsigned int, byte)\";\n  unrecoveredJumpTable = (code *)0x8005b12;\n  FUN_0800611c(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/cores/arduino/HardwareSerial.cpp\"\n               ,299,\"void HardwareSerial::begin(long unsigned int, byte)\",\"databits!=0\");\n  bytePointer = *(byte **)(extraOutput + unaffected);\n  logMessage[0x1e] = tempChar;\n  *(undefined *)(*bytePointer + 0x1e) = 0;\n  if (extraOutput < 0x3c) {\n    uRam0000012d = (&DAT_080076f0)[extraOutput];\n  }\n  else {\n    uRam0000012d = 0xff;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08005b30. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*unrecoveredJumpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a68": "initialize_serial_communication_08005a68",
                "param_1": "serialPort",
                "param_2": "baudRate",
                "param_3": "configByte",
                "extraout_r1": "extraOutput",
                "pcVar1": "logMessage",
                "bVar2": "configBits",
                "iVar3": "configValue",
                "pbVar4": "bytePointer",
                "unaff_r4": "tempChar",
                "unaff_r6": "unaffected",
                "UNRECOVERED_JUMPTABLE": "unrecoveredJumpTable"
            },
            "calling": [
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08005510",
                "FUN_08004f4c",
                "FUN_0800611c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005b24": {
            "entrypoint": "0x08005b24",
            "current_name": "set_byte_by_jump_table_08005b24",
            "code": "\nvoid setByteByJumpTable_08005b24(int baseAddress,uint index)\n\n{\n  undefined byteValue;\n  code *jumpTableFunction;\n  \n  if (index < 0x3c) {\n    byteValue = (&DAT_080076f0)[index];\n  }\n  else {\n    byteValue = 0xff;\n  }\n  *(undefined *)(baseAddress + 0x12d) = byteValue;\n                    /* WARNING: Could not recover jumptable at 0x08005b30. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTableFunction)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005b24": "set_byte_by_jump_table_08005b24",
                "param_1": "baseAddress",
                "param_2": "index",
                "uVar1": "byteValue",
                "UNRECOVERED_JUMPTABLE": "jumpTableFunction"
            },
            "calling": [
                "FUN_08005b54"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005b3c": {
            "entrypoint": "0x08005b3c",
            "current_name": "update_value_08005b3c",
            "code": "\nvoid updateValue_08005b3c(int baseAddress,uint index)\n\n{\n  undefined valueToUpdate;\n  \n  if (index < 0x3c) {\n    valueToUpdate = (&DAT_080076f0)[index];\n  }\n  else {\n    valueToUpdate = 0xff;\n  }\n  *(undefined *)(baseAddress + 300) = valueToUpdate;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005b3c": "update_value_08005b3c",
                "param_1": "baseAddress",
                "param_2": "index",
                "uVar1": "valueToUpdate"
            },
            "calling": [
                "FUN_08005b54"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005b54": {
            "entrypoint": "0x08005b54",
            "current_name": "initialize_data_08005b54",
            "code": "\nundefined4 *\ninitializeData_08005b54(undefined4 *data,undefined4 value,undefined4 paramA,undefined4 paramB)\n\n{\n  undefined result;\n  \n  data[1] = 0;\n  data[2] = 1000;\n  *data = &PTR_LAB_080059c8_1_08007804;\n  if (data == (undefined4 *)&DAT_2000036c) {\n    FUN_08005b24(&DAT_2000036c,0,paramA,&DAT_2000036c,paramB);\n    FUN_08005b3c(&DAT_2000036c,1);\n  }\n  else {\n    result = FUN_08004ca2(value,&DAT_08007604);\n    *(undefined *)((int)data + 0x12d) = result;\n    result = FUN_08004ca2(value,&DAT_0800764c);\n    *(undefined *)(data + 0x4b) = result;\n  }\n  FUN_08005a44(data);\n  return data;\n}\n\n",
            "renaming": {
                "FUN_08005b54": "initialize_data_08005b54",
                "param_1": "data",
                "param_2": "value",
                "param_3": "paramA",
                "param_4": "paramB",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08005bb0"
            ],
            "called": [
                "FUN_08004ca2",
                "FUN_08005a44",
                "FUN_08005b3c",
                "FUN_08005b24"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005bb0": {
            "entrypoint": "0x08005bb0",
            "current_name": "check_and_execute_08005bb0",
            "code": "\nvoid check_and_execute_08005bb0(int input_condition,int special_value,undefined4 data_1,undefined4 data_2)\n\n{\n  if (input_condition != 1) {\n    return;\n  }\n  if (special_value == 0xffff) {\n    FUN_08005b54(&DAT_2000036c,0x40004400,data_1,0xffff,data_2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005bb0": "check_and_execute_08005bb0",
                "param_1": "input_condition",
                "param_2": "special_value",
                "param_3": "data_1",
                "param_4": "data_2"
            },
            "calling": [],
            "called": [
                "FUN_08005b54"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c1c": {
            "entrypoint": "0x08005c1c",
            "current_name": "initialize_data_08005c1c",
            "code": "\nvoid initializeData_08005c1c(undefined4 *dataPointer,undefined value1,undefined value2,undefined value3,\n                 undefined value4)\n\n{\n  *dataPointer = &DAT_08007858;\n  *(undefined *)(dataPointer + 1) = value1;\n  *(undefined *)((int)dataPointer + 5) = value2;\n  *(undefined *)((int)dataPointer + 6) = value3;\n  *(undefined *)((int)dataPointer + 7) = value4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005c1c": "initialize_data_08005c1c",
                "param_1": "dataPointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "value4"
            },
            "calling": [
                "FUN_08005c38"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c38": {
            "entrypoint": "0x08005c38",
            "current_name": "check_params_08005c38",
            "code": "\nvoid checkParams_08005c38(int value1,int value2)\n\n{\n  if ((value1 == 1) && (value2 == 0xffff)) {\n    FUN_08005c1c(&DAT_200004b0,0,0,0,0);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005c38": "check_params_08005c38",
                "param_1": "value1",
                "param_2": "value2"
            },
            "calling": [],
            "called": [
                "FUN_08005c1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c96": {
            "entrypoint": "0x08005c96",
            "current_name": "execute_function_08005c96",
            "code": "\nundefined4 executeFunction_08005c96(int *functionPtr,int functionArg,undefined4 arg1,undefined4 arg2)\n\n{\n  undefined4 result;\n  \n  if (functionArg != 0) {\n    result = FUN_08000178(functionArg);\n    result = (**(code **)(*functionPtr + 4))(functionPtr,functionArg,result,*(code **)(*functionPtr + 4),arg2);\n    return result;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005c96": "execute_function_08005c96",
                "param_1": "functionPtr",
                "param_2": "functionArg",
                "param_3": "arg1",
                "param_4": "arg2",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0",
                "FUN_08005cd4",
                "FUN_08000bcc"
            ],
            "called": [
                "FUN_08000178"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cb6": {
            "entrypoint": "0x08005cb6",
            "current_name": "execute_function_08005cb6",
            "code": "\nvoid execute_function_08005cb6(undefined4 *function_pointer)\n\n{\n  (**(code **)*function_pointer)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005cb6": "execute_function_08005cb6",
                "param_1": "function_pointer"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08005d42"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cc0": {
            "entrypoint": "0x08005cc0",
            "current_name": "execute_code_08005cc0",
            "code": "\nvoid executeCode_08005cc0(int *codePointer,undefined4 argument1,undefined4 argument2,undefined4 argument3)\n\n{\n  (**(code **)(*codePointer + 4))(codePointer,&DAT_0800786c,2,*(code **)(*codePointer + 4),argument3);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005cc0": "execute_code_08005cc0",
                "param_1": "codePointer",
                "param_2": "argument1",
                "param_3": "argument2",
                "param_4": "argument3"
            },
            "calling": [
                "FUN_08005cd4",
                "FUN_08005f40"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cd4": {
            "entrypoint": "0x08005cd4",
            "current_name": "calculate_sum_08005cd4",
            "code": "\nint calculateSum_08005cd4(undefined4 input)\n\n{\n  int result1;\n  int result2;\n  \n  result1 = FUN_08005c96();\n  result2 = FUN_08005cc0(input);\n  return result2 + result1;\n}\n\n",
            "renaming": {
                "FUN_08005cd4": "calculate_sum_08005cd4",
                "param_1": "input",
                "iVar1": "result1",
                "iVar2": "result2"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08005cc0",
                "FUN_08005c96"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005ce8": {
            "entrypoint": "0x08005ce8",
            "current_name": "convert_decimal_to_base_n_08005ce8",
            "code": "\nundefined4 convertDecimalToBaseN_08005ce8(int *inputPointer,uint decimalNumber,uint base)\n\n{\n  char remainderChar;\n  undefined4 result;\n  uint remainder;\n  uint quotient;\n  char *outputPointer;\n  char outputBuffer [9];\n  \n  outputBuffer[1] = 0;\n  if ((int)base < 2) {\n    base = 10;\n  }\n  outputPointer = outputBuffer + 1;\n  do {\n    quotient = decimalNumber / base;\n    remainder = (decimalNumber & 0xff) - (quotient * base & 0xff) & 0xff;\n    outputPointer = outputPointer + -1;\n    remainderChar = (char)remainder;\n    if (remainder < 10) {\n      remainderChar = remainderChar + '0';\n    }\n    else {\n      remainderChar = remainderChar + '7';\n    }\n    *outputPointer = remainderChar;\n    decimalNumber = quotient;\n  } while (quotient != 0);\n  if (outputPointer == (char *)0x0) {\n    result = 0;\n  }\n  else {\n    result = FUN_08000178(outputPointer);\n    result = (**(code **)(*inputPointer + 4))(inputPointer,outputPointer,result);\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005ce8": "convert_decimal_to_base_n_08005ce8",
                "param_1": "inputPointer",
                "param_2": "decimalNumber",
                "param_3": "base",
                "cVar1": "remainderChar",
                "uVar2": "result",
                "uVar3": "remainder",
                "uVar4": "quotient",
                "pcVar5": "outputPointer",
                "local_15": "outputBuffer"
            },
            "calling": [
                "FUN_08005d8a",
                "FUN_08005d42"
            ],
            "called": [
                "FUN_08000178"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005d42": {
            "entrypoint": "0x08005d42",
            "current_name": "process_param_08005d42",
            "code": "\nint processParam_08005d42(undefined4 *ptr,uint value,uint length)\n\n{\n  int result;\n  int returnValue;\n  \n  if (length == 0) {\n    result = (**(code **)*ptr)(ptr,value & 0xff);\n    return result;\n  }\n  if (length != 10) {\n    result = FUN_08005ce8(ptr,value,length & 0xff);\n    return result;\n  }\n  if (-1 < (int)value) {\n    result = FUN_08005ce8(ptr,value,10);\n    return result;\n  }\n  result = FUN_08005cb6(ptr,0x2d);\n  returnValue = FUN_08005ce8(ptr,-value,10);\n  return returnValue + result;\n}\n\n",
            "renaming": {
                "FUN_08005d42": "process_param_08005d42",
                "param_1": "ptr",
                "param_2": "value",
                "param_3": "length",
                "iVar1": "result",
                "iVar2": "returnValue"
            },
            "calling": [
                "FUN_08005d82"
            ],
            "called": [
                "FUN_08005cb6",
                "FUN_08005ce8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005d82": {
            "entrypoint": "0x08005d82",
            "current_name": "execute_initialization_08005d82",
            "code": "\nvoid executeInitialization_08005d82(void)\n\n{\n  FUN_08005d42();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005d82": "execute_initialization_08005d82"
            },
            "calling": [
                "FUN_08005da8",
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08005d42"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005d8a": {
            "entrypoint": "0x08005d8a",
            "current_name": "process_data_08005d8a",
            "code": "\nvoid processData_08005d8a(undefined4 *buffer,uint size,uint flag,undefined4 callback)\n\n{\n  if (flag != 0) {\n    FUN_08005ce8(buffer,size,flag & 0xff);\n    return;\n  }\n  (**(code **)*buffer)(buffer,size & 0xff,0,*(code **)*buffer,callback);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005d8a": "process_data_08005d8a",
                "param_1": "buffer",
                "param_2": "size",
                "param_3": "flag",
                "param_4": "callback"
            },
            "calling": [
                "FUN_08005da8"
            ],
            "called": [
                "FUN_08005ce8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005da8": {
            "entrypoint": "0x08005da8",
            "current_name": "calculate_result_08005da8",
            "code": "\nint calculateResult_08005da8(undefined4 input1,undefined4 input2,undefined4 input3,uint input4,byte input5)\n\n{\n  int result;\n  undefined4 tempVar;\n  int tempVar2;\n  byte counter;\n  undefined8 tempVar3;\n  undefined8 tempVar4;\n  \n  result = FUN_08000a2c(input3,input4,input3,input4);\n  if (result == 0) {\n    result = FUN_08000a2c(input3,input4 & 0x7fffffff,0xffffffff,0x7fefffff);\n    if ((result == 0) &&\n       (result = FUN_080009f0(input3,input4 & 0x7fffffff,0xffffffff,0x7fefffff), result == 0)) {\n      result = FUN_08005c96(input1,&DAT_08007860);\n    }\n    else {\n      result = FUN_08000a18(input3,input4,0xe0000000,0x41efffff);\n      if (result == 0) {\n        result = FUN_080009dc(input3,input4,0xe0000000,0xc1efffff);\n        if (result == 0) {\n          result = FUN_080009dc(input3,input4,0,0);\n          if (result == 0) {\n            result = 0;\n          }\n          else {\n            result = FUN_08005cb6(input1,0x2d);\n            input4 = input4 + 0x80000000;\n          }\n          tempVar3 = 0x3fe0000000000000;\n          for (counter = 0; tempVar = (undefined4)((ulonglong)tempVar3 >> 0x20), counter < input5;\n              counter = counter + 1) {\n            tempVar3 = FUN_0800074c((int)tempVar3,tempVar,0,0x40240000);\n          }\n          tempVar3 = FUN_08000194(input3,input4,(int)tempVar3,tempVar);\n          tempVar = FUN_08000aa8();\n          tempVar4 = FUN_0800040c();\n          tempVar3 = FUN_08000190((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20),(int)tempVar4,\n                               (int)((ulonglong)tempVar4 >> 0x20));\n          tempVar2 = FUN_08005d8a(input1,tempVar,10);\n          result = result + tempVar2;\n          if (input5 != 0) {\n            tempVar2 = FUN_08005c96(input1,&DAT_08007868);\n            result = result + tempVar2;\n          }\n          while (input5 != 0) {\n            tempVar3 = FUN_080004f8((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20),0,0x40240000);\n            tempVar = FUN_08000a58();\n            tempVar2 = FUN_08005d82(input1,tempVar,10);\n            result = result + tempVar2;\n            tempVar4 = FUN_0800042c(tempVar);\n            tempVar3 = FUN_08000190((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20),(int)tempVar4,\n                                 (int)((ulonglong)tempVar4 >> 0x20));\n            input5 = input5 - 1;\n          }\n        }\n        else {\n          result = FUN_08005c96(input1,&DAT_08007864);\n        }\n      }\n      else {\n        result = FUN_08005c96(input1,&DAT_08007864);\n      }\n    }\n  }\n  else {\n    result = FUN_08005c96(input1,&DAT_0800785c);\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005da8": "calculate_result_08005da8",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "param_5": "input5",
                "iVar1": "result",
                "uVar2": "tempVar",
                "iVar3": "tempVar2",
                "bVar4": "counter",
                "uVar5": "tempVar3",
                "uVar6": "tempVar4"
            },
            "calling": [
                "FUN_08005f2c"
            ],
            "called": [
                "FUN_08000a18",
                "FUN_08000aa8",
                "FUN_0800040c",
                "FUN_08005c96",
                "FUN_0800042c",
                "FUN_0800074c",
                "FUN_08000190",
                "FUN_08000194",
                "FUN_080004f8",
                "FUN_080009f0",
                "FUN_080009dc",
                "FUN_08005cb6",
                "FUN_08000a58",
                "FUN_08005d82",
                "FUN_08000a2c",
                "FUN_08005d8a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f2c": {
            "entrypoint": "0x08005f2c",
            "current_name": "initialize_application_08005f2c",
            "code": "\nvoid initialize_application_08005f2c(void)\n\n{\n  FUN_08005da8();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005f2c": "initialize_application_08005f2c"
            },
            "calling": [
                "FUN_08000cd0",
                "FUN_08005f40"
            ],
            "called": [
                "FUN_08005da8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f40": {
            "entrypoint": "0x08005f40",
            "current_name": "calculate_sum_08005f40",
            "code": "\nint calculateSum_08005f40(undefined4 input)\n\n{\n  int result1;\n  int result2;\n  \n  result1 = FUN_08005f2c();\n  result2 = FUN_08005cc0(input);\n  return result2 + result1;\n}\n\n",
            "renaming": {
                "FUN_08005f40": "calculate_sum_08005f40",
                "param_1": "input",
                "iVar1": "result1",
                "iVar2": "result2"
            },
            "calling": [
                "FUN_08000cd0"
            ],
            "called": [
                "FUN_08005f2c",
                "FUN_08005cc0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f5c": {
            "entrypoint": "0x08005f5c",
            "current_name": "FUNC_08005f5c",
            "code": "\nvoid FUNC_08005f5c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005f5c": "FUNC_08005f5c"
            },
            "calling": [
                "FUN_08005f6c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005f5e": {
            "entrypoint": "0x08005f5e",
            "current_name": "initialize_application_08005f5e",
            "code": "\nvoid initializeApplication_08005f5e(void)\n\n{\n  FUN_08002470(3);\n  FUN_08001c32();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005f5e": "initialize_application_08005f5e"
            },
            "calling": [
                "FUN_08006198"
            ],
            "called": [
                "FUN_08001c32",
                "FUN_08002470"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f6c": {
            "entrypoint": "0x08005f6c",
            "current_name": "execute_loop_08005f6c",
            "code": "\nvoid execute_loop_08005f6c(void)\n\n{\n  FUNC_08005f5c();\n  FUN_08000bcc();\n  do {\n    FUN_08000cd0();\n    FUNC_08005a18();\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08005f6c": "execute_loop_08005f6c"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_08000cd0",
                "FUN_08000bcc",
                "FUN_08005f5c",
                "FUN_08005a18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005f8c": {
            "entrypoint": "0x08005f8c",
            "current_name": "count_set_bits_08005f8c",
            "code": "\nchar countSetBits_08005f8c(uint input)\n\n{\n  char bitCount;\n  \n  bitCount = '\\0';\n  for (; input != 1; input = input >> 1) {\n    bitCount = bitCount + '\\x01';\n  }\n  return bitCount;\n}\n\n",
            "renaming": {
                "FUN_08005f8c": "count_set_bits_08005f8c",
                "param_1": "input",
                "cVar1": "bitCount"
            },
            "calling": [
                "FUN_080060e4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005fc8": {
            "entrypoint": "0x08005fc8",
            "current_name": "initialize_parameters_08005fc8",
            "code": "\nvoid initializeParameters_08005fc8(int flag,int value,undefined4 unused1,undefined4 unused2)\n\n{\n  if (flag != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    DAT_200004b8 = 6;\n    DAT_200004c4 = 0;\n    DAT_200004cc = 7;\n    DAT_200004d8 = 0;\n    DAT_200004e0 = 8;\n    DAT_200004ec = 0;\n    DAT_200004f4 = 9;\n    DAT_20000500 = 0;\n    DAT_20000508 = 10;\n    DAT_20000514 = 0;\n    DAT_2000051c = 0x17;\n    DAT_20000528 = 0;\n    DAT_20000530 = 0x17;\n    DAT_2000053c = 0;\n    DAT_20000544 = 0x17;\n    DAT_20000550 = 0;\n    DAT_20000558 = 0x17;\n    DAT_20000564 = 0;\n    DAT_2000056c = 0x17;\n    DAT_20000578 = 0;\n    DAT_20000580 = 0x28;\n    DAT_2000058c = 0;\n    DAT_20000594 = 0x28;\n    DAT_200005a0 = 0;\n    DAT_200005a8 = 0x28;\n    DAT_200005b4 = 0;\n    DAT_200005bc = 0x28;\n    DAT_200005c8 = 0;\n    DAT_200005d0 = 0x28;\n    DAT_200005dc = 0;\n    DAT_200005e4 = 0x28;\n    DAT_200005f0 = 0;\n    FUN_08006112(0,&label,&DAT_20000000,&DAT_200004b8,unused2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005fc8": "initialize_parameters_08005fc8",
                "param_1": "flag",
                "param_2": "value",
                "param_3": "unused1",
                "param_4": "unused2",
                "LAB_08005fa0_1": "label"
            },
            "calling": [],
            "called": [
                "FUN_08006112"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080060d4": {
            "entrypoint": "0x080060d4",
            "current_name": "execute_logic_080060d4",
            "code": "\nvoid executeLogic_080060d4(int inputParam)\n\n{\n  int index;\n  \n  if (*(int *)(inputParam + 8) != 0) {\n    (**(code **)(inputParam + 0xc))();\n    return;\n  }\n  FUN_08007090();\n  index = FUN_08005f8c();\n  if ((&DAT_200004c4)[index * 5] != 0) {\n    executeLogic_080060d4();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080060d4": "execute_logic_080060d4",
                "param_1": "inputParam",
                "iVar1": "index"
            },
            "calling": [
                "FUN_080060e4"
            ],
            "called": [
                "FUN_08007090"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080060e4": {
            "entrypoint": "0x080060e4",
            "current_name": "check_and_execute_function_080060e4",
            "code": "\nvoid checkAndExecuteFunction_080060e4(void)\n\n{\n  int index;\n  \n  index = FUN_08005f8c();\n  if ((&DAT_200004c4)[index * 5] != 0) {\n    FUN_080060d4();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080060e4": "check_and_execute_function_080060e4",
                "iVar1": "index"
            },
            "calling": [
                "FUN_0800282c"
            ],
            "called": [
                "FUN_08005f8c",
                "FUN_080060d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006112": {
            "entrypoint": "0x08006112",
            "current_name": "call_and_return_08006112",
            "code": "\nvoid callAndReturn_08006112(undefined4 arg1,undefined4 arg2)\n\n{\n  FUN_08006158(arg2,arg1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006112": "call_and_return_08006112",
                "param_1": "arg1",
                "param_2": "arg2"
            },
            "calling": [
                "FUN_08005fc8"
            ],
            "called": [
                "FUN_08006158"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800611c": {
            "entrypoint": "0x0800611c",
            "current_name": "assertion_failed_error_0800611c",
            "code": "\nvoid assertionFailedError_0800611c(undefined4 assertion,undefined4 file,char *functionName,undefined4 line)\n\n{\n  undefined4 ptr;\n  char *additionalInfo;\n  undefined8 result;\n  undefined4 ptr2;\n  \n  ptr = *(undefined4 *)(DAT_200000f8 + 0xc);\n  ptr2 = line;\n  if (functionName == (char *)0x0) goto LAB_08006140;\n  additionalInfo = \", function: \";\n  do {\n    FUN_08006174(ptr,\"assertion \\\"%s\\\" failed: file \\\"%s\\\", line %d%s%s\\n\",line,assertion,file\n                 ,additionalInfo,functionName,ptr2);\n    result = FUN_08006ac0();\n    file = (undefined4)((ulonglong)result >> 0x20);\n    ptr = (undefined4)result;\nLAB_08006140:\n    functionName = \"\";\n    additionalInfo = functionName;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_0800611c": "assertion_failed_error_0800611c",
                "param_1": "assertion",
                "param_2": "file",
                "param_3": "functionName",
                "param_4": "line",
                "uVar1": "ptr",
                "pcVar2": "additionalInfo",
                "uVar3": "result",
                "uVar4": "ptr2"
            },
            "calling": [
                "FUN_08005a68"
            ],
            "called": [
                "FUN_08006174",
                "FUN_08006ac0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006158": {
            "entrypoint": "0x08006158",
            "current_name": "shift_integer_left_08006158",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08006160) */\n\nlonglong shiftIntegerLeft_08006158(undefined4 param,uint value)\n\n{\n  return (ulonglong)value << 0x20;\n}\n\n",
            "renaming": {
                "FUN_08006158": "shift_integer_left_08006158",
                "param_1": "param",
                "param_2": "value"
            },
            "calling": [
                "FUN_08006112"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006174": {
            "entrypoint": "0x08006174",
            "current_name": "initialize_variables_08006174",
            "code": "\nvoid initializeVariables_08006174(undefined4 inputParam1,undefined4 inputParam2,undefined4 stackVar1,undefined4 stackVar2)\n\n{\n  undefined4 stackVar3;\n  undefined4 stackVar4;\n  \n  stackVar3 = stackVar1;\n  stackVar4 = stackVar2;\n  FUN_08006394(DAT_200000f8,inputParam1,inputParam2,&stackVar3,inputParam1,&stackVar3);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006174": "initialize_variables_08006174",
                "param_1": "inputParam1",
                "param_2": "inputParam2",
                "param_3": "stackVar1",
                "param_4": "stackVar2",
                "uStack_8": "stackVar3",
                "uStack_4": "stackVar4"
            },
            "calling": [
                "FUN_0800611c"
            ],
            "called": [
                "FUN_08006394"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006198": {
            "entrypoint": "0x08006198",
            "current_name": "execute_functions_08006198",
            "code": "\nvoid executeFunctions_08006198(void)\n\n{\n  int index;\n  \n  for (index = 0; index != 0; index = index + 1) {\n    (*(code *)(&DAT_08007944)[index])();\n  }\n  FUNC_08007328();\n  for (index = 0; index != 10; index = index + 1) {\n    (*(code *)(&DAT_08007944)[index])();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006198": "execute_functions_08006198",
                "iVar1": "index"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_08005f5e",
                "FUN_08007328"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080061e0": {
            "entrypoint": "0x080061e0",
            "current_name": "fill_memory_080061e0",
            "code": "\nvoid fillMemory_080061e0(undefined *memory,undefined value,int size)\n\n{\n  undefined *endAddr;\n  \n  endAddr = memory + size;\n  for (; memory != endAddr; memory = memory + 1) {\n    *memory = value;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080061e0": "fill_memory_080061e0",
                "param_1": "memory",
                "param_2": "value",
                "param_3": "size",
                "puVar1": "endAddr"
            },
            "calling": [
                "FUN_08006c40",
                "FUN_08006c88",
                "FUN_08004a4c",
                "FUN_08006d14"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080061f0": {
            "entrypoint": "0x080061f0",
            "current_name": "update_data_080061f0",
            "code": "\nvoid updateData_080061f0(undefined4 *dataPointer,int dataSize,undefined4 param3,undefined4 param4)\n\n{\n  int **extraOutput1;\n  int **pointer1;\n  int **pointer2;\n  int *pointer3;\n  int **pointer4;\n  int **pointer5;\n  \n  if (dataSize == 0) {\n    return;\n  }\n  pointer5 = (int **)(dataSize + -4);\n  if (*(int *)(dataSize + -4) < 0) {\n    pointer5 = (int **)((int)pointer5 + *(int *)(dataSize + -4));\n  }\n  FUNC_08006eac();\n  pointer2 = (int **)&DAT_200005f8;\n  if (DAT_200005f8 == (int **)0x0) {\n    pointer5[1] = (int *)0x0;\n    pointer1 = extraOutput1;\n    DAT_200005f8 = pointer5;\n  }\n  else {\n    pointer2 = DAT_200005f8;\n    if (pointer5 < DAT_200005f8) {\n      pointer1 = (int **)*pointer5;\n      pointer2 = (int **)((int)pointer5 + (int)pointer1);\n      if (DAT_200005f8 == pointer2) {\n        pointer3 = *DAT_200005f8;\n        DAT_200005f8 = (int **)DAT_200005f8[1];\n        pointer2 = (int **)((int)pointer3 + (int)pointer1);\n        *pointer5 = (int *)pointer2;\n      }\n      pointer5[1] = (int *)DAT_200005f8;\n      DAT_200005f8 = pointer5;\n    }\n    else {\n      do {\n        pointer4 = pointer2;\n        pointer2 = (int **)pointer4[1];\n        if (pointer2 == (int **)0x0) break;\n      } while (pointer2 <= pointer5);\n      pointer1 = (int **)*pointer4;\n      if ((int **)((int)pointer4 + (int)pointer1) == pointer5) {\n        pointer1 = (int **)((int)pointer1 + (int)*pointer5);\n        *pointer4 = (int *)pointer1;\n        if (pointer2 == (int **)((int)pointer4 + (int)pointer1)) {\n          pointer3 = *pointer2;\n          pointer2 = (int **)pointer2[1];\n          pointer1 = (int **)((int)pointer1 + (int)pointer3);\n          *pointer4 = (int *)pointer1;\n          pointer4[1] = (int *)pointer2;\n        }\n      }\n      else if (pointer5 < (int **)((int)pointer4 + (int)pointer1)) {\n        *dataPointer = 0xc;\n      }\n      else {\n        pointer1 = (int **)((int)pointer5 + (int)*pointer5);\n        if (pointer2 == pointer1) {\n          pointer3 = *pointer2;\n          pointer2 = (int **)pointer2[1];\n          pointer1 = (int **)((int)pointer3 + (int)*pointer5);\n          *pointer5 = (int *)pointer1;\n        }\n        pointer5[1] = (int *)pointer2;\n        pointer4[1] = (int *)pointer5;\n      }\n    }\n  }\n  FUNC_08006eae(dataPointer,pointer1,pointer2,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080061f0": "update_data_080061f0",
                "param_1": "dataPointer",
                "param_2": "dataSize",
                "param_3": "param3",
                "param_4": "param4",
                "extraout_r1": "extraOutput1",
                "ppiVar1": "pointer1",
                "ppiVar2": "pointer2",
                "piVar3": "pointer3",
                "ppiVar4": "pointer4",
                "ppiVar5": "pointer5"
            },
            "calling": [
                "FUN_080069e4",
                "FUN_08006ac0"
            ],
            "called": [
                "FUN_08006eac",
                "FUN_08006eae"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006288": {
            "entrypoint": "0x08006288",
            "current_name": "allocate_memory_08006288",
            "code": "\nuint allocate_memory_08006288(undefined4 *output_address,uint size)\n\n{\n  uint *current_block;\n  int offset;\n  uint *previous_block;\n  uint block_difference;\n  uint *previous_block_next;\n  uint allocated_size;\n  \n  allocated_size = (size + 3 & 0xfffffffc) + 8;\n  if (allocated_size < 0xc) {\n    allocated_size = 0xc;\n  }\n  if (((int)allocated_size < 0) || (allocated_size < size)) {\n    *output_address = 0xc;\n  }\n  else {\n    FUNC_08006eac();\n    current_block = DAT_200005f8;\n    previous_block_next = DAT_200005f8;\n    while (previous_block = current_block, previous_block != (uint *)0x0) {\n      block_difference = *previous_block - allocated_size;\n      if (-1 < (int)block_difference) {\n        if (block_difference < 0xc) {\n          if (previous_block_next == previous_block) {\n            current_block = (uint *)previous_block_next[1];\n            DAT_200005f8 = current_block;\n          }\n          else {\n            current_block = (uint *)previous_block[1];\n          }\n          if (previous_block_next != previous_block) {\n            previous_block_next[1] = (uint)current_block;\n            previous_block_next = previous_block;\n          }\n        }\n        else {\n          *previous_block = block_difference;\n          *(uint *)((int)previous_block + block_difference) = allocated_size;\n          previous_block_next = (uint *)((int)previous_block + block_difference);\n        }\n        goto LAB_080062ec;\n      }\n      previous_block_next = previous_block;\n      current_block = (uint *)previous_block[1];\n    }\n    if (DAT_200005fc == 0) {\n      DAT_200005fc = FUN_08006920(output_address);\n    }\n    current_block = (uint *)FUN_08006920(output_address,allocated_size);\n    if ((current_block != (uint *)0xffffffff) &&\n       ((previous_block_next = (uint *)((int)current_block + 3U & 0xfffffffc), current_block == previous_block_next ||\n        (offset = FUN_08006920(output_address,(int)previous_block_next - (int)current_block), offset != -1)))) {\n      *previous_block_next = allocated_size;\nLAB_080062ec:\n      FUNC_08006eae(output_address);\n      allocated_size = (int)previous_block_next + 0xbU & 0xfffffff8;\n      offset = allocated_size - (int)(previous_block_next + 1);\n      if (offset != 0) {\n        *(int *)((int)previous_block_next + offset) = -offset;\n        return allocated_size;\n      }\n      return allocated_size;\n    }\n    *output_address = 0xc;\n    FUNC_08006eae(output_address);\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006288": "allocate_memory_08006288",
                "param_1": "output_address",
                "param_2": "size",
                "puVar1": "current_block",
                "iVar2": "offset",
                "puVar3": "previous_block",
                "uVar4": "block_difference",
                "puVar5": "previous_block_next",
                "uVar6": "allocated_size"
            },
            "calling": [
                "FUN_08006e10",
                "FUN_08006c88"
            ],
            "called": [
                "FUN_08006920",
                "FUN_08006eac",
                "FUN_08006eae"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006344": {
            "entrypoint": "0x08006344",
            "current_name": "process_input_08006344",
            "code": "\nuint processInput_08006344(int input,byte value,byte **data)\n\n{\n  int tempVar;\n  byte *lastElement;\n  byte *pbVar3;\n  uint returnValue;\n  \n  lastElement = data[2] + -1;\n  data[2] = lastElement;\n  if ((-1 < (int)lastElement) ||\n     (((int)data[6] <= (int)lastElement && (lastElement = (byte *)(uint)value, lastElement != (byte *)0xa))))\n  {\n    lastElement = *data;\n    *data = lastElement + 1;\n    *lastElement = value;\n    return (uint)value;\n  }\n  if ((input != 0) && (*(int *)(input + 0x18) == 0)) {\n    FUN_08006cb4();\n  }\n  if (data == (byte **)&DAT_08007904) {\n    data = *(byte ***)(input + 4);\n  }\n  else if (data == (byte **)&DAT_08007924) {\n    data = *(byte ***)(input + 8);\n  }\n  else if (data == (byte **)&DAT_080078e4) {\n    data = *(byte ***)(input + 0xc);\n  }\n  data[2] = data[6];\n  pbVar3 = (byte *)(uint)*(ushort *)(data + 3);\n  tempVar = (int)pbVar3 << 0x1c;\n  if (((tempVar < 0) && (pbVar3 = data[4], pbVar3 != (byte *)0x0)) ||\n     (tempVar = FUN_080069e4(input,data,tempVar,pbVar3,lastElement), tempVar == 0)) {\n    returnValue = (uint)value;\n    tempVar = (int)*data - (int)data[4];\n    if ((tempVar < (int)data[5]) || (tempVar = FUN_08006be0(input,data), tempVar == 0)) {\n      data[2] = data[2] + -1;\n      lastElement = *data;\n      *data = lastElement + 1;\n      *lastElement = value;\n      if ((byte *)(tempVar + 1) != data[5]) {\n        if (-1 < (int)((uint)*(ushort *)(data + 3) << 0x1f)) {\n          return returnValue;\n        }\n        if (returnValue != 10) {\n          return returnValue;\n        }\n      }\n      tempVar = FUN_08006be0(input,data);\n      if (tempVar == 0) {\n        return returnValue;\n      }\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08006344": "process_input_08006344",
                "param_1": "input",
                "param_2": "value",
                "param_3": "data",
                "iVar1": "tempVar",
                "pbVar2": "lastElement",
                "uVar4": "returnValue"
            },
            "calling": [
                "FUN_08006370"
            ],
            "called": [
                "FUN_08006be0",
                "FUN_08006cb4",
                "FUN_080069e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006370": {
            "entrypoint": "0x08006370",
            "current_name": "process_data_08006370",
            "code": "\nint processData_08006370(undefined4 arg1,undefined4 arg2,undefined *data,int length)\n\n{\n  int result;\n  undefined *endPtr;\n  int currentLength;\n  \n  endPtr = data + length;\n  currentLength = length;\n  do {\n    if (data == endPtr) {\n      return 0;\n    }\n    result = FUN_08006344(arg1,*data,arg2,length,currentLength);\n    length = result + 1;\n    data = data + 1;\n  } while (length != 0);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08006370": "process_data_08006370",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "data",
                "param_4": "length",
                "iVar1": "result",
                "puVar2": "endPtr",
                "iVar3": "currentLength"
            },
            "calling": [
                "FUN_08006394"
            ],
            "called": [
                "FUN_08006344"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006394": {
            "entrypoint": "0x08006394",
            "current_name": "parse_and_process_format_string_08006394",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08006568) */\n\nint parse_and_process_format_string_08006394(int fmt_str_ptr,undefined4 *arg_ptr,byte *format_str,int *bytes_written)\n\n{\n  int result;\n  int *bytes_written_ptr;\n  bool is_digit;\n  byte *current_char_ptr;\n  byte *next_char_ptr;\n  int partial_result;\n  int temp_var;\n  int *bytes_written_ptr;\n  uint flags;\n  int width;\n  undefined4 precision;\n  int num_width;\n  int total_bytes;\n  byte conversion_specifier;\n  undefined space_flag;\n  undefined plus_flag;\n  undefined base_prefix_flag;\n  undefined4 U_var;\n  \n  bytes_written_ptr = bytes_written;\n  if ((fmt_str_ptr != 0) && (*(int *)(fmt_str_ptr + 0x18) == 0)) {\n    FUN_08006cb4();\n  }\n  if (arg_ptr == &DAT_08007904) {\n    arg_ptr = *(undefined4 **)(fmt_str_ptr + 4);\n  }\n  else if (arg_ptr == (undefined4 *)&DAT_08007924) {\n    arg_ptr = *(undefined4 **)(fmt_str_ptr + 8);\n  }\n  else if (arg_ptr == (undefined4 *)&DAT_080078e4) {\n    arg_ptr = *(undefined4 **)(fmt_str_ptr + 0xc);\n  }\n  if (((-1 < (int)((uint)*(ushort *)(arg_ptr + 3) << 0x1c)) || (arg_ptr[4] == 0)) &&\n     (temp_var = FUN_080069e4(fmt_str_ptr,arg_ptr), temp_var != 0)) {\n    return -1;\n  }\n  total_bytes = 0;\n  space_flag = 0x20;\n  plus_flag = 0x30;\n  current_char_ptr = format_str;\nLAB_080063d6:\n  next_char_ptr = current_char_ptr;\n  if (*next_char_ptr != 0) goto LAB_0800648c;\n  goto LAB_080063e0;\nLAB_0800648c:\n  current_char_ptr = next_char_ptr + 1;\n  if (*next_char_ptr != 0x25) goto LAB_080063d6;\nLAB_080063e0:\n  temp_var = (int)next_char_ptr - (int)format_str;\n  if (temp_var != 0) {\n    result = FUN_08006370(fmt_str_ptr,arg_ptr,format_str,temp_var);\n    if (result == -1) {\nLAB_08006580:\n      if ((int)((uint)*(ushort *)(arg_ptr + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return total_bytes;\n    }\n    total_bytes = total_bytes + temp_var;\n  }\n  if (*next_char_ptr == 0) goto LAB_08006580;\n  flags = 0;\n  num_width = 0;\n  width = -1;\n  precision = 0;\n  base_prefix_flag = 0;\n  U_var = 0;\n  current_char_ptr = next_char_ptr + 1;\n  while( true ) {\n    temp_var = FUN_08006e90(\"#-0+ \",*current_char_ptr);\n    format_str = current_char_ptr + 1;\n    if (temp_var == 0) break;\n    flags = 1 << (temp_var + 0xf7ff8750U & 0xff) | flags;\n    current_char_ptr = format_str;\n  }\n  if ((int)(flags << 0x1b) < 0) {\n    base_prefix_flag = 0x20;\n  }\n  if ((int)(flags << 0x1c) < 0) {\n    base_prefix_flag = 0x2b;\n  }\n  if (*current_char_ptr == 0x2a) {\n    bytes_written_ptr = bytes_written_ptr + 1;\n    temp_var = *bytes_written_ptr;\n    bytes_written_ptr = bytes_written_ptr;\n    if (temp_var < 0) {\n      num_width = -temp_var;\n      flags = flags | 2;\n      goto LAB_080064be;\n    }\n  }\n  else {\n    is_digit = false;\n    temp_var = num_width;\n    format_str = current_char_ptr;\n    while( true ) {\n      if (9 < *format_str - 0x30) break;\n      temp_var = temp_var * 10 + (*format_str - 0x30);\n      is_digit = true;\n      format_str = format_str + 1;\n    }\n    if (!is_digit) goto LAB_080064be;\n  }\n  num_width = temp_var;\nLAB_080064be:\n  if (*format_str == 0x2e) {\n    if (format_str[1] == 0x2a) {\n      format_str = format_str + 2;\n      bytes_written_ptr = bytes_written_ptr + 1;\n      width = *bytes_written_ptr;\n      bytes_written_ptr = bytes_written_ptr;\n      if (width < 0) {\n        width = -1;\n      }\n    }\n    else {\n      is_digit = false;\n      temp_var = 0;\n      width = 0;\n      while( true ) {\n        format_str = format_str + 1;\n        if (9 < *format_str - 0x30) break;\n        temp_var = temp_var * 10 + (*format_str - 0x30);\n        is_digit = true;\n      }\n      if (is_digit) {\n        width = temp_var;\n      }\n    }\n  }\n  temp_var = FUN_08006e90(&DAT_080078b6,*format_str,3);\n  if (temp_var != 0) {\n    format_str = format_str + 1;\n    flags = flags | 0x40 << (temp_var + 0xf7ff874aU & 0xff);\n  }\n  conversion_specifier = *format_str;\n  format_str = format_str + 1;\n  temp_var = FUN_08006e90(\"efgEFG\",conversion_specifier,6);\n  if (temp_var == 0) {\n    partial_result = FUN_080066b0(fmt_str_ptr,&flags,arg_ptr,0x8006371,&bytes_written_ptr);\n    if (partial_result == -1) goto LAB_08006580;\n  }\n  else {\n    bytes_written_ptr = (int *)(((int)bytes_written_ptr + 7U & 0xfffffff8) + 8);\n  }\n  total_bytes = total_bytes + partial_result;\n  current_char_ptr = format_str;\n  goto LAB_080063d6;\n}\n\n",
            "renaming": {
                "FUN_08006394": "parse_and_process_format_string_08006394",
                "param_1": "fmt_str_ptr",
                "param_2": "arg_ptr",
                "param_3": "format_str",
                "param_4": "bytes_written",
                "iVar1": "result",
                "piVar2": "bytes_written_ptr",
                "bVar3": "is_digit",
                "pbVar4": "current_char_ptr",
                "pbVar5": "next_char_ptr",
                "unaff_r9": "partial_result",
                "iVar6": "temp_var",
                "local_8c": "bytes_written_ptr",
                "local_88": "flags",
                "local_84": "width",
                "local_80": "precision",
                "local_7c": "num_width",
                "local_74": "total_bytes",
                "local_70": "conversion_specifier",
                "local_6f": "space_flag",
                "local_6e": "plus_flag",
                "local_45": "base_prefix_flag",
                "local_30": "U_var"
            },
            "calling": [
                "FUN_08006174",
                "FUN_080068f0"
            ],
            "called": [
                "FUN_080066b0",
                "FUN_08006cb4",
                "FUN_08006e90",
                "FUN_080069e4",
                "FUN_08006370"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080065c0": {
            "entrypoint": "0x080065c0",
            "current_name": "process_data_080065c0",
            "code": "\nundefined4\nprocessData_080065c0(undefined4 input,uint *array,uint *output,undefined4 flag,code *callback)\n\n{\n  int index;\n  int result;\n  uint maxValue;\n  uint count;\n  bool isTrue;\n  \n  maxValue = array[4];\n  if ((int)array[4] < (int)array[2]) {\n    maxValue = array[2];\n  }\n  *output = maxValue;\n  if (*(char *)((int)array + 0x43) != '\\0') {\n    *output = maxValue + 1;\n  }\n  if ((int)(*array << 0x1a) < 0) {\n    *output = *output + 2;\n  }\n  if ((*array & 6) == 0) {\n    for (index = 0; index < (int)(array[3] - *output); index = index + 1) {\n      result = (*callback)(input,flag,(int)array + 0x19,1);\n      if (result == -1) {\n        return 0xffffffff;\n      }\n    }\n  }\n  maxValue = (uint)*(byte *)((int)array + 0x43);\n  if (maxValue != 0) {\n    maxValue = 1;\n  }\n  count = maxValue;\n  if ((int)(*array << 0x1a) < 0) {\n    *(undefined *)((int)array + maxValue + 0x43) = 0x30;\n    count = maxValue + 2;\n    *(undefined *)((int)array + maxValue + 0x44) = *(undefined *)((int)array + 0x45);\n  }\n  index = (*callback)(input,flag,(int)array + 0x43,count);\n  if (index != -1) {\n    maxValue = array[3];\n    isTrue = (*array & 6) != 4;\n    if (isTrue) {\n      maxValue = 0;\n    }\n    count = 0;\n    if (!isTrue) {\n      maxValue = maxValue - *output;\n    }\n    if (!isTrue) {\n      maxValue = maxValue & ~((int)maxValue >> 0x1f);\n    }\n    if ((int)array[4] < (int)array[2]) {\n      maxValue = maxValue + (array[2] - array[4]);\n    }\n    while( true ) {\n      if (maxValue == count) {\n        return 0;\n      }\n      index = (*callback)(input,flag,(int)array + 0x1a,1);\n      if (index == -1) break;\n      count = count + 1;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080065c0": "process_data_080065c0",
                "param_1": "input",
                "param_2": "array",
                "param_3": "output",
                "param_4": "flag",
                "param_5": "callback",
                "iVar1": "index",
                "iVar2": "result",
                "uVar3": "maxValue",
                "uVar4": "count",
                "bVar5": "isTrue"
            },
            "calling": [
                "FUN_080066b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080066b0": {
            "entrypoint": "0x080066b0",
            "current_name": "convert_number_to_string_080066b0",
            "code": "\nuint convertNumberToString_080066b0(undefined4 input,uint *number,undefined4 length,code *transform,uint **count)\n\n{\n  byte byteVal;\n  int index;\n  uint *pointer;\n  int innerIndex;\n  char *hexDigits;\n  uint tempVal;\n  uint **ppuVar7;\n  char **ppcVar8;\n  uint value;\n  uint tempVal2;\n  char *output;\n  char *start;\n  uint outputLength [2];\n  \n  byteVal = *(byte *)(number + 6);\n  start = (char *)((int)number + 0x43);\n  if (byteVal != 0x6e) {\n    if (byteVal < 0x6f) {\n      if (byteVal != 99) {\n        if (byteVal < 100) {\n          if (byteVal == 0) goto LAB_0800686a;\n          if (byteVal != 0x58) goto LAB_080066e0;\n          *(undefined *)((int)number + 0x45) = 0x58;\n          hexDigits = \"0123456789ABCDEF\";\nLAB_080067fa:\n          tempVal = *number;\n          pointer = *count;\n          *count = pointer + 1;\n          if (((tempVal & 0x80) == 0) && ((int)(tempVal << 0x19) < 0)) {\n            value = (uint)*(ushort *)pointer;\n          }\n          else {\n            value = *pointer;\n          }\n          if ((int)(tempVal << 0x1f) < 0) {\n            *number = tempVal | 0x20;\n          }\n          if (value == 0) {\n            *number = *number & 0xffffffdf;\n          }\n          tempVal = 0x10;\nLAB_08006790:\n          *(undefined *)((int)number + 0x43) = 0;\n        }\n        else {\n          if ((byteVal != 100) && (byteVal != 0x69)) goto LAB_080066e0;\n          value = *number;\n          pointer = *count;\n          if ((value & 0x80) == 0) {\n            *count = pointer + 1;\n            if ((value & 0x40) == 0) goto LAB_08006700;\n            value = (uint)(short)*(ushort *)pointer;\n          }\n          else {\n            *count = pointer + 1;\nLAB_08006700:\n            value = *pointer;\n          }\n          if ((int)value < 0) {\n            value = -value;\n            *(undefined *)((int)number + 0x43) = 0x2d;\n          }\n          hexDigits = \"0123456789ABCDEF\";\n          tempVal = 10;\n        }\n        tempVal2 = number[1];\n        number[2] = tempVal2;\n        output = start;\n        if ((int)tempVal2 < 0) {\n          if (value != 0) goto LAB_0800682e;\nLAB_080068dc:\n          *(char *)((int)number + 0x42) = *hexDigits;\n          output = (char *)((int)number + 0x42);\n        }\n        else {\n          *number = *number & 0xfffffffb;\n          if (value == 0) {\n            if (tempVal2 != 0) goto LAB_080068dc;\n          }\n          else {\nLAB_0800682e:\n            do {\n              tempVal2 = value / tempVal;\n              output = output + -1;\n              *output = hexDigits[value - tempVal * tempVal2];\n              value = tempVal2;\n            } while (tempVal2 != 0);\n          }\n        }\n        if (((tempVal == 8) && ((int)(*number << 0x1f) < 0)) && ((int)number[1] <= (int)number[4]))\n        {\n          output[-1] = '0';\n          output = output + -1;\n        }\n        number[4] = (int)start - (int)output;\n        start = output;\n        goto LAB_080067d6;\n      }\n      pointer = *count;\n      *count = pointer + 1;\n      *(char *)((int)number + 0x42) = (char)*pointer;\nLAB_08006740:\n      start = (char *)((int)number + 0x42);\n      value = 1;\n    }\n    else {\n      if (byteVal != 0x73) {\n        if (byteVal < 0x74) {\n          if (byteVal == 0x6f) {\nLAB_08006766:\n            value = *number;\n            pointer = *count;\n            if ((value & 0x80) == 0) {\n              *count = pointer + 1;\n              if ((value & 0x40) == 0) goto LAB_08006774;\n              value = (uint)*(ushort *)pointer;\n            }\n            else {\n              *count = pointer + 1;\nLAB_08006774:\n              value = *pointer;\n            }\n            if (byteVal == 0x6f) {\n              tempVal = 8;\n            }\n            else {\n              tempVal = 10;\n            }\n            hexDigits = \"0123456789ABCDEF\";\n            goto LAB_08006790;\n          }\n          if (byteVal == 0x70) {\n            *number = *number | 0x20;\nLAB_08006726:\n            hexDigits = \"0123456789abcdef\";\n            *(undefined *)((int)number + 0x45) = 0x78;\n            goto LAB_080067fa;\n          }\n        }\n        else {\n          if (byteVal == 0x75) goto LAB_08006766;\n          if (byteVal == 0x78) goto LAB_08006726;\n        }\nLAB_080066e0:\n        *(byte *)((int)number + 0x42) = byteVal;\n        goto LAB_08006740;\n      }\n      ppcVar8 = (char **)*count;\n      *count = (uint *)(ppcVar8 + 1);\n      start = *ppcVar8;\n      index = FUN_08006e90(start,0,number[1]);\n      if (index != 0) {\n        number[1] = index - (int)start;\n      }\n      value = number[1];\n    }\n    number[4] = value;\n    *(undefined *)((int)number + 0x43) = 0;\n    goto LAB_080067d6;\n  }\n  value = *number;\n  ppuVar7 = (uint **)*count;\n  tempVal = number[5];\n  if ((value & 0x80) == 0) {\n    *count = (uint *)(ppuVar7 + 1);\n    pointer = *ppuVar7;\n    if ((value & 0x40) == 0) goto LAB_08006856;\n    *(short *)pointer = (short)tempVal;\n  }\n  else {\n    *count = (uint *)(ppuVar7 + 1);\n    pointer = *ppuVar7;\nLAB_08006856:\n    *pointer = tempVal;\n  }\nLAB_0800686a:\n  number[4] = 0;\nLAB_080067d6:\n  index = FUN_080065c0(input,number,outputLength,length,transform);\n  if ((index == -1) || (index = (*transform)(input,length,start,number[4]), index == -1)) {\nLAB_080067ea:\n    value = 0xffffffff;\n  }\n  else {\n    if ((int)(*number << 0x1e) < 0) {\n      for (index = 0; index < (int)(number[3] - outputLength[0]); index = index + 1) {\n        innerIndex = (*transform)(input,length,(int)number + 0x19,1);\n        if (innerIndex == -1) goto LAB_080067ea;\n      }\n    }\n    value = number[3];\n    if ((int)number[3] < (int)outputLength[0]) {\n      value = outputLength[0];\n    }\n  }\n  return value;\n}\n\n",
            "renaming": {
                "FUN_080066b0": "convert_number_to_string_080066b0",
                "param_1": "input",
                "param_2": "number",
                "param_3": "length",
                "param_4": "transform",
                "param_5": "count",
                "bVar1": "byteVal",
                "iVar2": "index",
                "puVar3": "pointer",
                "iVar4": "innerIndex",
                "pcVar5": "hexDigits",
                "uVar6": "tempVal",
                "uVar9": "value",
                "uVar10": "tempVal2",
                "pcVar11": "output",
                "pcVar12": "start",
                "local_24": "outputLength"
            },
            "calling": [
                "FUN_08006394"
            ],
            "called": [
                "FUN_080065c0",
                "FUN_08006e90"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080068f0": {
            "entrypoint": "0x080068f0",
            "current_name": "initialize_data_080068f0",
            "code": "\nvoid initializeData_080068f0(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  int dataPointer;\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  undefined4 value4;\n  \n  dataPointer = DAT_200000f8;\n  value1 = input1;\n  value2 = input2;\n  value3 = input3;\n  value4 = input4;\n  if ((DAT_200000f8 != 0) && (*(int *)(DAT_200000f8 + 0x18) == 0)) {\n    FUN_08006cb4(DAT_200000f8);\n  }\n  FUN_08006394(dataPointer,*(undefined4 *)(dataPointer + 8),input1,&value2,value1,&value2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080068f0": "initialize_data_080068f0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "dataPointer",
                "uVar2": "value1",
                "uStack_c": "value2",
                "uStack_8": "value3",
                "uStack_4": "value4"
            },
            "calling": [
                "FUN_08004f4c"
            ],
            "called": [
                "FUN_08006cb4",
                "FUN_08006394"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006920": {
            "entrypoint": "0x08006920",
            "current_name": "process_and_store_result_08006920",
            "code": "\nvoid process_and_store_result_08006920(int *result_ptr,undefined4 input_value)\n\n{\n  int result;\n  \n  DAT_200006a4 = 0;\n  result = FUN_080056d8(input_value);\n  if ((result == -1) && (DAT_200006a4 != 0)) {\n    *result_ptr = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006920": "process_and_store_result_08006920",
                "param_1": "result_ptr",
                "param_2": "input_value",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08006288"
            ],
            "called": [
                "FUN_080056d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080069e4": {
            "entrypoint": "0x080069e4",
            "current_name": "update_data_080069e4",
            "code": "\nuint updateData_080069e4(undefined4 *outputData,undefined4 *inputData)\n\n{\n  int baseAddress;\n  uint returnValue;\n  ushort inputValue;\n  \n  baseAddress = DAT_200000f8;\n  if ((DAT_200000f8 != 0) && (*(int *)(DAT_200000f8 + 0x18) == 0)) {\n    FUN_08006cb4(DAT_200000f8);\n  }\n  if (inputData == &DAT_08007904) {\n    inputData = *(undefined4 **)(baseAddress + 4);\n  }\n  else if (inputData == (undefined4 *)&DAT_08007924) {\n    inputData = *(undefined4 **)(baseAddress + 8);\n  }\n  else if (inputData == (undefined4 *)&DAT_080078e4) {\n    inputData = *(undefined4 **)(baseAddress + 0xc);\n  }\n  inputValue = *(ushort *)(inputData + 3);\n  returnValue = (uint)inputValue;\n  if (-1 < (int)(returnValue << 0x1c)) {\n    if (-1 < (int)(returnValue << 0x1b)) {\n      *outputData = 9;\n      goto LAB_08006a14;\n    }\n    if ((int)(returnValue << 0x1d) < 0) {\n      if ((undefined4 *)inputData[0xd] != (undefined4 *)0x0) {\n        if ((undefined4 *)inputData[0xd] != inputData + 0x11) {\n          FUN_080061f0(outputData);\n        }\n        inputData[0xd] = 0;\n      }\n      *(ushort *)(inputData + 3) = *(ushort *)(inputData + 3) & 0xffdb;\n      inputData[1] = 0;\n      *inputData = inputData[4];\n    }\n    *(ushort *)(inputData + 3) = *(ushort *)(inputData + 3) | 8;\n  }\n  if ((inputData[4] == 0) && ((*(ushort *)(inputData + 3) & 0x280) != 0x200)) {\n    FUN_08006e10(outputData,inputData);\n  }\n  inputValue = *(ushort *)(inputData + 3);\n  returnValue = inputValue & 1;\n  if ((inputValue & 1) == 0) {\n    if (-1 < (int)((uint)inputValue << 0x1e)) {\n      returnValue = inputData[5];\n    }\n    inputData[2] = returnValue;\n  }\n  else {\n    inputData[2] = 0;\n    inputData[6] = -inputData[5];\n  }\n  if (inputData[4] == 0) {\n    inputValue = *(ushort *)(inputData + 3);\n    returnValue = (int)(short)inputValue & 0x80;\n    if (returnValue != 0) {\nLAB_08006a14:\n      *(ushort *)(inputData + 3) = inputValue | 0x40;\n      return 0xffffffff;\n    }\n  }\n  else {\n    returnValue = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_080069e4": "update_data_080069e4",
                "param_1": "outputData",
                "param_2": "inputData",
                "iVar1": "baseAddress",
                "uVar2": "returnValue",
                "uVar3": "inputValue"
            },
            "calling": [
                "FUN_08006344",
                "FUN_08006394"
            ],
            "called": [
                "FUN_08006e10",
                "FUN_08006cb4",
                "FUN_080061f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ac0": {
            "entrypoint": "0x08006ac0",
            "current_name": "extract_and_process_data_08006ac0",
            "code": "\nvoid extract_and_process_data_08006ac0(void)\n\n{\n  uint *data_ptr;\n  int offset;\n  int *array_ptr;\n  int *temp_array_ptr;\n  uint data_value;\n  ushort data_flags;\n  int temp_offset;\n  code *function_ptr;\n  int temp_value;\n  uint temp_data_value;\n  code *jump_table_func;\n  bool is_temp_set;\n  undefined8 return_value;\n  \n  FUN_08006f00(6);\n  jump_table_func = (code *)0x8006acf;\n  return_value = FUN_0800573c(1);\n  array_ptr = (int *)((ulonglong)return_value >> 0x20);\n  data_ptr = (uint *)return_value;\n  data_flags = *(ushort *)(array_ptr + 3);\n  data_value = (uint)data_flags;\n  if ((int)(data_value << 0x1c) < 0) {\n    offset = array_ptr[4];\n    if (offset != 0) {\n      temp_offset = data_value << 0x1e;\n      is_temp_set = temp_offset != 0;\n      if (is_temp_set) {\n        temp_offset = 0;\n      }\n      temp_value = *array_ptr;\n      if (!is_temp_set) {\n        temp_offset = array_ptr[5];\n      }\n      *array_ptr = offset;\n      array_ptr[2] = temp_offset;\n      for (temp_value = temp_value - offset; 0 < temp_value; temp_value = temp_value - temp_offset) {\n        temp_offset = (*(code *)array_ptr[10])(data_ptr,array_ptr[8],offset,temp_value);\n        if (temp_offset < 1) {\n          data_flags = *(ushort *)(array_ptr + 3);\n          goto LAB_08006bc6;\n        }\n        offset = offset + temp_offset;\n      }\n    }\n  }\n  else if (((0 < array_ptr[1]) || (0 < array_ptr[0x10])) &&\n          (function_ptr = (code *)array_ptr[0xb], function_ptr != (code *)0x0)) {\n    temp_data_value = *data_ptr;\n    *data_ptr = 0;\n    if ((data_flags & 0x1000) == 0) {\n      offset = (*function_ptr)(data_ptr,array_ptr[8],data_value & 0x1000,1);\n      if ((offset == -1) && (data_value = *data_ptr, data_value != 0)) {\n        if ((data_value != 0x1d) && (data_value != 0x16)) {\n          *(ushort *)(array_ptr + 3) = *(ushort *)(array_ptr + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006b90. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          (*jump_table_func)();\n          return;\n        }\n        *data_ptr = temp_data_value;\n        goto LAB_08006aea;\n      }\n    }\n    else {\n      offset = array_ptr[0x15];\n    }\n    if (((int)((uint)*(ushort *)(array_ptr + 3) << 0x1d) < 0) &&\n       (offset = offset - array_ptr[1], array_ptr[0xd] != 0)) {\n      offset = offset - array_ptr[0x10];\n    }\n    offset = (*(code *)array_ptr[0xb])(data_ptr,array_ptr[8],offset,0);\n    data_flags = *(ushort *)(array_ptr + 3);\n    if ((offset == -1) &&\n       ((0x1d < *data_ptr || (-1 < (int)((0x20400001U >> (*data_ptr & 0xff)) << 0x1f))))) {\nLAB_08006bc6:\n      *(ushort *)(array_ptr + 3) = data_flags | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006bd0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jump_table_func)(0xffffffff);\n      return;\n    }\n    array_ptr[1] = 0;\n    *array_ptr = array_ptr[4];\n    if (((int)((uint)data_flags << 0x13) < 0) && ((offset != -1 || (*data_ptr == 0)))) {\n      array_ptr[0x15] = offset;\n    }\n    temp_array_ptr = (int *)array_ptr[0xd];\n    *data_ptr = temp_data_value;\n    if (temp_array_ptr != (int *)0x0) {\n      if (temp_array_ptr != array_ptr + 0x11) {\n        FUN_080061f0(data_ptr);\n      }\n      array_ptr[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08006b66. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jump_table_func)();\n      return;\n    }\n  }\nLAB_08006aea:\n                    /* WARNING: Could not recover jumptable at 0x08006aec. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jump_table_func)(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006ac0": "extract_and_process_data_08006ac0",
                "puVar1": "data_ptr",
                "iVar2": "offset",
                "piVar3": "array_ptr",
                "piVar4": "temp_array_ptr",
                "uVar5": "data_value",
                "uVar6": "data_flags",
                "iVar7": "temp_offset",
                "pcVar8": "function_ptr",
                "iVar9": "temp_value",
                "uVar10": "temp_data_value",
                "bVar11": "is_temp_set",
                "UNRECOVERED_JUMPTABLE_00": "jump_table_func",
                "uVar12": "return_value"
            },
            "calling": [
                "FUN_08007090",
                "FUN_0800611c"
            ],
            "called": [
                "FUN_0800573c",
                "FUN_080061f0",
                "FUN_08006f00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006be0": {
            "entrypoint": "0x08006be0",
            "current_name": "process_data_08006be0",
            "code": "\nundefined4 processData_08006be0(uint *arrayPtr,int *infoPtr)\n\n{\n  undefined4 result;\n  int count;\n  int *ptr;\n  uint uVar4;\n  ushort uVar5;\n  int iVar6;\n  undefined4 var1;\n  undefined4 var2;\n  code *functionPtr;\n  int iVar8;\n  uint uVar9;\n  code *jumpTable;\n  bool flag;\n  \n  if (infoPtr[4] != 0) {\n    if ((arrayPtr != (uint *)0x0) && (arrayPtr[6] == 0)) {\n      FUN_08006cb4();\n    }\n    if (infoPtr == &DAT_08007904) {\n      infoPtr = (int *)arrayPtr[1];\n    }\n    else if (infoPtr == (int *)&DAT_08007924) {\n      infoPtr = (int *)arrayPtr[2];\n    }\n    else if (infoPtr == (int *)&DAT_080078e4) {\n      infoPtr = (int *)arrayPtr[3];\n    }\n    if (*(short *)(infoPtr + 3) != 0) {\n      uVar5 = *(ushort *)(infoPtr + 3);\n      uVar4 = (uint)uVar5;\n      if ((int)(uVar4 << 0x1c) < 0) {\n        count = infoPtr[4];\n        if (count != 0) {\n          iVar6 = uVar4 << 0x1e;\n          flag = iVar6 != 0;\n          if (flag) {\n            iVar6 = 0;\n          }\n          iVar8 = *infoPtr;\n          if (!flag) {\n            iVar6 = infoPtr[5];\n          }\n          *infoPtr = count;\n          infoPtr[2] = iVar6;\n          for (iVar8 = iVar8 - count; 0 < iVar8; iVar8 = iVar8 - iVar6) {\n            iVar6 = (*(code *)infoPtr[10])(arrayPtr,infoPtr[8],count,iVar8,var1,var2);\n            if (iVar6 < 1) {\n              uVar5 = *(ushort *)(infoPtr + 3);\n              goto LAB_08006bc6;\n            }\n            count = count + iVar6;\n          }\n        }\n      }\n      else if (((0 < infoPtr[1]) || (0 < infoPtr[0x10])) &&\n              (functionPtr = (code *)infoPtr[0xb], functionPtr != (code *)0x0)) {\n        uVar9 = *arrayPtr;\n        *arrayPtr = 0;\n        if ((uVar5 & 0x1000) == 0) {\n          count = (*functionPtr)(arrayPtr,infoPtr[8],uVar4 & 0x1000,1);\n          if ((count == -1) && (uVar4 = *arrayPtr, uVar4 != 0)) {\n            if ((uVar4 != 0x1d) && (uVar4 != 0x16)) {\n              *(ushort *)(infoPtr + 3) = *(ushort *)(infoPtr + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006b90. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n              result = (*jumpTable)();\n              return result;\n            }\n            *arrayPtr = uVar9;\n            goto LAB_08006aea;\n          }\n        }\n        else {\n          count = infoPtr[0x15];\n        }\n        if (((int)((uint)*(ushort *)(infoPtr + 3) << 0x1d) < 0) &&\n           (count = count - infoPtr[1], infoPtr[0xd] != 0)) {\n          count = count - infoPtr[0x10];\n        }\n        count = (*(code *)infoPtr[0xb])(arrayPtr,infoPtr[8],count,0);\n        uVar5 = *(ushort *)(infoPtr + 3);\n        if ((count == -1) &&\n           ((0x1d < *arrayPtr || (-1 < (int)((0x20400001U >> (*arrayPtr & 0xff)) << 0x1f))))) {\nLAB_08006bc6:\n          *(ushort *)(infoPtr + 3) = uVar5 | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08006bd0. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          result = (*jumpTable)(0xffffffff);\n          return result;\n        }\n        infoPtr[1] = 0;\n        *infoPtr = infoPtr[4];\n        if (((int)((uint)uVar5 << 0x13) < 0) && ((count != -1 || (*arrayPtr == 0)))) {\n          infoPtr[0x15] = count;\n        }\n        ptr = (int *)infoPtr[0xd];\n        *arrayPtr = uVar9;\n        if (ptr != (int *)0x0) {\n          if (ptr != infoPtr + 0x11) {\n            FUN_080061f0(arrayPtr);\n          }\n          infoPtr[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08006b66. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          result = (*jumpTable)();\n          return result;\n        }\n      }\nLAB_08006aea:\n                    /* WARNING: Could not recover jumptable at 0x08006aec. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      result = (*jumpTable)(0);\n      return result;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006be0": "process_data_08006be0",
                "param_1": "arrayPtr",
                "param_2": "infoPtr",
                "uVar1": "result",
                "iVar2": "count",
                "piVar3": "ptr",
                "unaff_r4": "var1",
                "unaff_r5": "var2",
                "pcVar7": "functionPtr",
                "UNRECOVERED_JUMPTABLE_00": "jumpTable",
                "bVar10": "flag"
            },
            "calling": [
                "FUN_08006344"
            ],
            "called": [
                "FUN_08006cb4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c40": {
            "entrypoint": "0x08006c40",
            "current_name": "initialize_parameters_08006c40",
            "code": "\nvoid initializeParameters_08006c40(undefined4 *parameters,undefined2 value1,undefined2 value2)\n\n{\n  *parameters = 0;\n  parameters[1] = 0;\n  parameters[2] = 0;\n  *(undefined2 *)(parameters + 3) = value1;\n  parameters[25] = 0;\n  *(undefined2 *)((int)parameters + 0xe) = value2;\n  parameters[4] = 0;\n  parameters[5] = 0;\n  parameters[6] = 0;\n  FUN_080061e0(parameters + 0x17,0,8);\n  parameters[8] = parameters;\n  parameters[9] = 0x8006f39;\n  parameters[10] = 0x8006f5b;\n  parameters[11] = 0x8006f93;\n  parameters[12] = label;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006c40": "initialize_parameters_08006c40",
                "param_1": "parameters",
                "param_2": "value1",
                "param_3": "value2",
                "param_1[1]": "parameters[1]",
                "param_1[2]": "parameters[2]",
                "param_1[0x19]": "parameters[25]",
                "param_1[4]": "parameters[4]",
                "param_1[5]": "parameters[5]",
                "param_1[6]": "parameters[6]",
                "param_1[8]": "parameters[8]",
                "param_1[9]": "parameters[9]",
                "param_1[10]": "parameters[10]",
                "param_1[0xb]": "parameters[11]",
                "param_1[0xc]": "parameters[12]",
                "&LAB_08006fb6_1": "label"
            },
            "calling": [
                "FUN_08006cb4"
            ],
            "called": [
                "FUN_080061e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c88": {
            "entrypoint": "0x08006c88",
            "current_name": "initialize_data_structure_08006c88",
            "code": "\nundefined4 * initializeDataStructure_08006c88(undefined4 input,int size)\n\n{\n  undefined4 *ptr_to_data;\n  int offset;\n  \n  offset = (size + -1) * 0x68;\n  ptr_to_data = (undefined4 *)FUN_08006288(input,offset + 0x74);\n  if (ptr_to_data != (undefined4 *)0x0) {\n    *ptr_to_data = 0;\n    ptr_to_data[1] = size;\n    ptr_to_data[2] = ptr_to_data + 3;\n    FUN_080061e0(ptr_to_data + 3,0,offset + 0x68);\n  }\n  return ptr_to_data;\n}\n\n",
            "renaming": {
                "FUN_08006c88": "initialize_data_structure_08006c88",
                "param_1": "input",
                "param_2": "size",
                "puVar1": "ptr_to_data",
                "iVar2": "offset"
            },
            "calling": [
                "FUN_08006d14"
            ],
            "called": [
                "FUN_08006288",
                "FUN_080061e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006cb4": {
            "entrypoint": "0x08006cb4",
            "current_name": "initialize_data_08006cb4",
            "code": "\nvoid initializeData_08006cb4(undefined4 *data)\n\n{\n  undefined4 result;\n  undefined4 *pointer;\n  \n  if (data[6] == 0) {\n    data[0x12] = 0;\n    data[0x13] = 0;\n    data[0x14] = 0;\n    pointer = &DAT_200000fc;\n    data[10] = &label;\n    if (data == &DAT_200000fc) {\n      pointer = (undefined4 *)0x1;\n    }\n    if (data == &DAT_200000fc) {\n      data[6] = pointer;\n    }\n    result = FUN_08006d14();\n    data[1] = result;\n    result = FUN_08006d14(data);\n    data[2] = result;\n    result = FUN_08006d14(data);\n    data[3] = result;\n    FUN_08006c40(data[1],4,0);\n    FUN_08006c40(data[2],9,1);\n    FUN_08006c40(data[3],0x12,2);\n    data[6] = 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006cb4": "initialize_data_08006cb4",
                "param_1": "data",
                "uVar1": "result",
                "puVar2": "pointer",
                "LAB_08006c34_1": "label"
            },
            "calling": [
                "FUN_08006be0",
                "FUN_080069e4",
                "FUN_08006344",
                "FUN_080068f0",
                "FUN_08006394",
                "FUN_08006d14"
            ],
            "called": [
                "FUN_08006c40",
                "FUN_08006d14"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d14": {
            "entrypoint": "0x08006d14",
            "current_name": "process_data_08006d14",
            "code": "\nint * processData_08006d14(undefined4 *output,undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  int *currentIndex;\n  int *currentData;\n  int **pDataList;\n  \n  if (DAT_20000114 == 0) {\n    FUN_08006cb4(&DAT_200000fc);\n  }\n  pDataList = (int **)&DAT_20000144;\n  do {\n    currentData = pDataList[2];\n    currentIndex = pDataList[1];\n    while (currentIndex = (int *)((int)currentIndex + -1), -1 < (int)currentIndex) {\n      if (*(short *)(currentData + 3) == 0) {\n        *(undefined2 *)((int)currentData + 0xe) = 0xffff;\n        currentData[0x19] = 0;\n        *(undefined2 *)(currentData + 3) = 1;\n        *currentData = 0;\n        currentData[2] = 0;\n        currentData[1] = 0;\n        currentData[4] = 0;\n        currentData[5] = 0;\n        currentData[6] = 0;\n        FUN_080061e0(currentData + 0x17,0,8,1,input3);\n        currentData[0xd] = 0;\n        currentData[0xe] = 0;\n        currentData[0x12] = 0;\n        currentData[0x13] = 0;\n        return currentData;\n      }\n      currentData = currentData + 0x1a;\n    }\n    if (*pDataList == (int *)0x0) {\n      currentIndex = (int *)FUN_08006c88(output,4);\n      *pDataList = currentIndex;\n      if (currentIndex == (int *)0x0) {\n        *output = 0xc;\n        return (int *)0x0;\n      }\n    }\n    pDataList = (int **)*pDataList;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08006d14": "process_data_08006d14",
                "param_1": "output",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "input3",
                "piVar1": "currentIndex",
                "piVar2": "currentData",
                "ppiVar3": "pDataList"
            },
            "calling": [
                "FUN_08006cb4"
            ],
            "called": [
                "FUN_08006cb4",
                "FUN_08006c88",
                "FUN_080061e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006dc8": {
            "entrypoint": "0x08006dc8",
            "current_name": "check_file_type_08006dc8",
            "code": "\nundefined4 checkFileType_08006dc8(undefined4 fileName,int headerAddr,undefined4 *fileType,uint *isExecutable)\n\n{\n  int result;\n  undefined4 fileTypeValue;\n  undefined tempBuffer [4];\n  uint fileHeader;\n  \n  if ((*(short *)(headerAddr + 0xe) < 0) ||\n     (result = FUN_08007004(fileName,(int)*(short *)(headerAddr + 0xe),tempBuffer), result < 0)) {\n    *isExecutable = 0;\n    if ((int)((uint)*(ushort *)(headerAddr + 0xc) << 0x18) < 0) {\n      fileTypeValue = 0x40;\n      goto LAB_08006e08;\n    }\n  }\n  else {\n    *isExecutable = (uint)((fileHeader & 0xf000) == 0x2000);\n  }\n  fileTypeValue = 0x400;\nLAB_08006e08:\n  *fileType = fileTypeValue;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006dc8": "check_file_type_08006dc8",
                "param_1": "fileName",
                "param_2": "headerAddr",
                "param_3": "fileType",
                "param_4": "isExecutable",
                "iVar1": "result",
                "uVar2": "fileTypeValue",
                "auStack_4c": "tempBuffer",
                "local_48": "fileHeader"
            },
            "calling": [
                "FUN_08006e10"
            ],
            "called": [
                "FUN_08007004"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e10": {
            "entrypoint": "0x08006e10",
            "current_name": "process_data_08006e10",
            "code": "\nvoid processData_08006e10(int inputValue,int *dataArray)\n\n{\n  ushort updatedValue;\n  int result;\n  int temp1;\n  int *temp2;\n  \n  if (-1 < (int)((uint)*(ushort *)(dataArray + 3) << 0x1e)) {\n    temp1 = inputValue;\n    temp2 = dataArray;\n    updatedValue = FUN_08006dc8(inputValue,dataArray,&temp1,&temp2);\n    result = FUN_08006288(inputValue,temp1);\n    if (result != 0) {\n      *(undefined **)(inputValue + 0x28) = &LAB_08006c34_1;\n      *dataArray = result;\n      *(ushort *)(dataArray + 3) = *(ushort *)(dataArray + 3) | 0x80;\n      dataArray[4] = result;\n      dataArray[5] = temp1;\n      if ((temp2 != (int *)0x0) &&\n         (result = FUN_08007028(inputValue,(int)*(short *)((int)dataArray + 0xe)), result != 0)) {\n        *(ushort *)(dataArray + 3) = *(ushort *)(dataArray + 3) & 0xfffc | 1;\n      }\n      *(ushort *)(dataArray + 3) = updatedValue | *(ushort *)(dataArray + 3);\n      return;\n    }\n    if ((int)(short)*(ushort *)(dataArray + 3) << 0x16 < 0) {\n      return;\n    }\n    *(ushort *)(dataArray + 3) = *(ushort *)(dataArray + 3) & 0xfffc | 2;\n  }\n  *dataArray = (int)dataArray + 0x47;\n  dataArray[4] = (int)dataArray + 0x47;\n  dataArray[5] = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006e10": "process_data_08006e10",
                "param_1": "inputValue",
                "param_2": "dataArray",
                "uVar1": "updatedValue",
                "iVar2": "result",
                "local_18": "temp1",
                "local_14": "temp2"
            },
            "calling": [
                "FUN_080069e4"
            ],
            "called": [
                "FUN_08007028",
                "FUN_08006288",
                "FUN_08006dc8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e90": {
            "entrypoint": "0x08006e90",
            "current_name": "find_first_occurrence_08006e90",
            "code": "\nchar * findFirstOccurrence_08006e90(char *string,char targetChar,int length)\n\n{\n  char *currentCharPtr;\n  char *nextCharPtr;\n  \n  currentCharPtr = string;\n  do {\n    nextCharPtr = currentCharPtr;\n    if (nextCharPtr == string + length) {\n      return (char *)0x0;\n    }\n    currentCharPtr = nextCharPtr + 1;\n  } while (*nextCharPtr != targetChar);\n  return nextCharPtr;\n}\n\n",
            "renaming": {
                "FUN_08006e90": "find_first_occurrence_08006e90",
                "param_1": "string",
                "param_2": "targetChar",
                "param_3": "length",
                "pcVar1": "currentCharPtr",
                "pcVar2": "nextCharPtr"
            },
            "calling": [
                "FUN_080066b0",
                "FUN_08006394"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006eac": {
            "entrypoint": "0x08006eac",
            "current_name": "FUNC_08006eac",
            "code": "\nvoid FUNC_08006eac(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006eac": "FUNC_08006eac"
            },
            "calling": [
                "FUN_080061f0",
                "FUN_08006288"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08006eae": {
            "entrypoint": "0x08006eae",
            "current_name": "FUNC_08006eae",
            "code": "\nvoid FUNC_08006eae(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006eae": "FUNC_08006eae"
            },
            "calling": [
                "FUN_08006288",
                "FUN_080061f0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08006f00": {
            "entrypoint": "0x08006f00",
            "current_name": "execute_function_08006f00",
            "code": "\nint executeFunction_08006f00(uint index)\n\n{\n  int *functionArray;\n  undefined4 result;\n  int currentFunction;\n  code *targetFunction;\n  undefined4 unused1;\n  undefined4 unused2;\n  undefined4 unused3;\n  undefined4 *functionArrayPtr;\n  \n  functionArray = DAT_200000f8;\n  functionArrayPtr = &DAT_200000f8;\n  if (0x1f < index) {\n    *DAT_200000f8 = 0x16;\n    return -1;\n  }\n  currentFunction = DAT_200000f8[0x11];\n  if ((currentFunction != 0) && (targetFunction = *(code **)(currentFunction + index * 4), targetFunction != (code *)0x0)) {\n    if (targetFunction != (code *)0x1) {\n      if (targetFunction == (code *)0xffffffff) {\n        *DAT_200000f8 = 0x16;\n        return 1;\n      }\n      *(undefined4 *)(currentFunction + index * 4) = 0;\n      (*targetFunction)(index);\n    }\n    return 0;\n  }\n  result = thunk_FUN_08005750(DAT_200000f8);\n  DAT_200006a4 = 0;\n  currentFunction = FUN_08005740(result,index,index,0,functionArrayPtr,unused1,unused2,unused3);\n  if ((currentFunction == -1) && (DAT_200006a4 != 0)) {\n    *functionArray = DAT_200006a4;\n  }\n  return currentFunction;\n}\n\n",
            "renaming": {
                "FUN_08006f00": "execute_function_08006f00",
                "param_1": "index",
                "piVar1": "functionArray",
                "uVar2": "result",
                "iVar3": "currentFunction",
                "pcVar4": "targetFunction",
                "unaff_r4": "unused1",
                "unaff_r5": "unused2",
                "in_lr": "unused3",
                "puVar5": "functionArrayPtr"
            },
            "calling": [
                "FUN_08006ac0"
            ],
            "called": [
                "FUN_08005740",
                "thunk_FUN_08005750"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_08005750": {
            "entrypoint": "0x08006f34",
            "current_name": "get_return_value_thunk_08005750",
            "code": "\nundefined4 getReturnValue_thunk_08005750(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "thunk_FUN_08005750": "get_return_value_thunk_08005750"
            },
            "calling": [
                "FUN_08006f00"
            ],
            "called": [
                "FUN_08005750"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006f38": {
            "entrypoint": "0x08006f38",
            "current_name": "update_value_08006f38",
            "code": "\nvoid updateValue_08006f38(undefined4 param1,int param2)\n\n{\n  int result;\n  uint updatedValue;\n  bool isPositive;\n  \n  result = FUN_0800706c(param1,(int)*(short *)(param2 + 0xe));\n  isPositive = -1 < result;\n  if (isPositive) {\n    updatedValue = *(int *)(param2 + 0x54) + result;\n  }\n  else {\n    updatedValue = *(ushort *)(param2 + 0xc) & 0xffffefff;\n  }\n  if (isPositive) {\n    *(uint *)(param2 + 0x54) = updatedValue;\n  }\n  if (!isPositive) {\n    *(short *)(param2 + 0xc) = (short)updatedValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006f38": "update_value_08006f38",
                "param_1": "param1",
                "param_2": "param2",
                "iVar1": "result",
                "uVar2": "updatedValue",
                "bVar3": "isPositive"
            },
            "calling": [],
            "called": [
                "FUN_0800706c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006f5a": {
            "entrypoint": "0x08006f5a",
            "current_name": "update_data_08006f5a",
            "code": "\nvoid updateData_08006f5a(int *output,int input,undefined4 value1,undefined4 value2)\n\n{\n  int result;\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  \n  if ((int)((uint)*(ushort *)(input + 0xc) << 0x17) < 0) {\n    FUN_08007048(output,(int)*(short *)(input + 0xe),0,2);\n  }\n  *(ushort *)(input + 0xc) = *(ushort *)(input + 0xc) & 0xefff;\n  DAT_200006a4 = 0;\n  result = FUN_08005730((int)*(short *)(input + 0xe),value1,value2,value2,value2,temp1,\n                       temp2,temp3);\n  if ((result == -1) && (DAT_200006a4 != 0)) {\n    *output = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006f5a": "update_data_08006f5a",
                "param_1": "output",
                "param_2": "input",
                "param_3": "value1",
                "param_4": "value2",
                "iVar1": "result",
                "unaff_r4": "temp1",
                "unaff_r5": "temp2",
                "in_lr": "temp3"
            },
            "calling": [],
            "called": [
                "FUN_08007048",
                "FUN_08005730"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006f92": {
            "entrypoint": "0x08006f92",
            "current_name": "update_status_08006f92",
            "code": "\nvoid updateStatus_08006f92(undefined4 status,int data)\n\n{\n  int result;\n  ushort flags;\n  bool isError;\n  \n  result = FUN_08007048(status,(int)*(short *)(data + 0xe));\n  isError = result == -1;\n  if (isError) {\n    flags = *(ushort *)(data + 0xc) & 0xefff;\n  }\n  else {\n    *(int *)(data + 0x54) = result;\n    flags = *(ushort *)(data + 0xc) | 0x1000;\n  }\n  if (isError) {\n    *(ushort *)(data + 0xc) = flags;\n  }\n  if (!isError) {\n    *(ushort *)(data + 0xc) = flags;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006f92": "update_status_08006f92",
                "param_1": "status",
                "param_2": "data",
                "iVar1": "result",
                "uVar2": "flags",
                "bVar3": "isError"
            },
            "calling": [],
            "called": [
                "FUN_08007048"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007004": {
            "entrypoint": "0x08007004",
            "current_name": "update_param_value_08007004",
            "code": "\nvoid updateParamValue_08007004(int *output,undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  int returnValue;\n  \n  DAT_200006a4 = 0;\n  returnValue = FUN_0800571a(input1,input2,input2,0,input3);\n  if ((returnValue == -1) && (DAT_200006a4 != 0)) {\n    *output = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007004": "update_param_value_08007004",
                "param_1": "output",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "input3",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08006dc8"
            ],
            "called": [
                "FUN_0800571a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007028": {
            "entrypoint": "0x08007028",
            "current_name": "initialize_result_08007028",
            "code": "\nvoid initializeResult_08007028(int *resultPointer,undefined4 inputValue)\n\n{\n  int status;\n  \n  DAT_200006a4 = 0;\n  status = FUN_08005724(inputValue);\n  if ((status == -1) && (DAT_200006a4 != 0)) {\n    *resultPointer = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007028": "initialize_result_08007028",
                "param_1": "resultPointer",
                "param_2": "inputValue",
                "iVar1": "status"
            },
            "calling": [
                "FUN_08006e10"
            ],
            "called": [
                "FUN_08005724"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007048": {
            "entrypoint": "0x08007048",
            "current_name": "check_error_and_assign_08007048",
            "code": "\nvoid checkErrorAndAssign_08007048(int *result,undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  int returnValue;\n  \n  DAT_200006a4 = 0;\n  returnValue = FUN_08005728(arg1,arg2,arg3,arg3,arg3);\n  if ((returnValue == -1) && (DAT_200006a4 != 0)) {\n    *result = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007048": "check_error_and_assign_08007048",
                "param_1": "result",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08006f5a",
                "FUN_08006f92"
            ],
            "called": [
                "FUN_08005728"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800706c": {
            "entrypoint": "0x0800706c",
            "current_name": "check_and_update_result_0800706c",
            "code": "\nvoid checkAndUpdateResult_0800706c(int *result,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int status;\n  \n  DAT_200006a4 = 0;\n  status = FUN_0800572c(param_2,param_3,param_4,param_4,param_4);\n  if ((status == -1) && (DAT_200006a4 != 0)) {\n    *result = DAT_200006a4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800706c": "check_and_update_result_0800706c",
                "param_1": "result",
                "iVar1": "status"
            },
            "calling": [
                "FUN_08006f38"
            ],
            "called": [
                "FUN_0800572c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007090": {
            "entrypoint": "0x08007090",
            "current_name": "initialize_data_08007090",
            "code": "\nvoid initializeData_08007090(void)\n\n{\n  code *functionPointer;\n  \n  functionPointer = initializeData_08007090;\n  FUN_08006ac0();\n  if (-1 < DAT_2000062c << 0x1f) {\n    DAT_2000062c = 1;\n  }\n  if (-1 < DAT_20000628 << 0x1f) {\n    DAT_20000628 = 1;\n  }\n  if (-1 < DAT_20000624 << 0x1f) {\n    DAT_20000624 = 1;\n  }\n  if (-1 < DAT_20000620 << 0x1f) {\n    DAT_20000620 = 1;\n  }\n  if (-1 < DAT_2000061c << 0x1f) {\n    DAT_2000061c = 1;\n  }\n  if (-1 < DAT_20000618 << 0x1f) {\n    DAT_20000618 = 1;\n  }\n  if (-1 < DAT_20000614 << 0x1f) {\n    DAT_20000614 = 1;\n  }\n  if (-1 < DAT_20000610 << 0x1f) {\n    DAT_20000610 = 1;\n  }\n  if (-1 < DAT_2000060c << 0x1f) {\n    DAT_2000060c = 1;\n  }\n  if (-1 < DAT_20000608 << 0x1f) {\n    DAT_20000608 = 1;\n  }\n  if (-1 < DAT_20000604 << 0x1f) {\n    DAT_20000604 = 1;\n  }\n  if (-1 < DAT_20000600 << 0x1f) {\n    DAT_20000600 = 1;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08007128. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*functionPointer)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007090": "initialize_data_08007090",
                "UNRECOVERED_JUMPTABLE": "functionPointer"
            },
            "calling": [
                "FUN_080060d4"
            ],
            "called": [
                "FUN_08006ac0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007328": {
            "entrypoint": "0x08007328",
            "current_name": "FUNC_08007328",
            "code": "\nvoid FUNC_08007328(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007328": "FUNC_08007328"
            },
            "calling": [
                "FUN_08006198",
                "FUN_0800010c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08007334": {
            "entrypoint": "0x08007334",
            "current_name": "FUNC_08007334",
            "code": "\nvoid FUNC_08007334(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007334": "FUNC_08007334"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        }
    },
    "used_tokens": 190944,
    "layers": [
        [
            "FUN_0800010c",
            "FUN_08000178",
            "FUN_08000190",
            "FUN_08000194",
            "FUN_0800040c",
            "FUN_0800042c",
            "FUN_080004f8",
            "FUN_080006d4",
            "FUN_0800074c",
            "FUN_080008ba",
            "FUN_0800092c",
            "FUN_080009a8",
            "FUN_080009b8",
            "FUN_080009c8",
            "FUN_080009dc",
            "FUN_080009f0",
            "FUN_08000a04",
            "FUN_08000a18",
            "FUN_08000a2c",
            "FUN_08000a58",
            "FUN_08000aa8",
            "FUN_08000ae8",
            "FUN_08000aec",
            "FUN_08000b08",
            "FUN_08000bcc",
            "FUN_08000cd0",
            "FUN_08001294",
            "FUN_080012a2",
            "FUN_080012c0",
            "FUN_080012e8",
            "FUN_08001310",
            "FUN_0800134e",
            "FUN_0800135a",
            "FUN_08001366",
            "FUN_0800138e",
            "FUN_080013a4",
            "FUN_080014ba",
            "FUN_08001510",
            "FUN_08001550",
            "FUN_0800157c",
            "FUN_080015b2",
            "FUN_080015f8",
            "FUN_080016b4",
            "FUN_08001814",
            "FUN_080018f8",
            "FUN_08001918",
            "FUN_08001960",
            "FUN_080019f6",
            "FUN_08001a44",
            "FUN_08001a66",
            "FUN_08001ab0",
            "FUN_08001b18",
            "FUN_08001b48",
            "FUN_08001c32",
            "FUN_08001c3c",
            "FUN_08001c88",
            "FUN_08001cac",
            "FUN_08001cc4",
            "FUN_08001cd0",
            "FUN_08001e40",
            "FUN_08001e48",
            "FUN_08001f80",
            "FUN_08001f84",
            "FUN_08002004",
            "FUN_080020f0",
            "FUN_0800213c",
            "FUN_0800224c",
            "FUN_08002348",
            "FUN_08002384",
            "FUN_08002470",
            "FUN_08002494",
            "FUN_080024f8",
            "FUN_08002514",
            "FUN_08002540",
            "FUN_08002560",
            "FUN_08002582",
            "FUN_0800258c",
            "FUN_08002624",
            "FUN_08002810",
            "FUN_0800281e",
            "FUN_0800282c",
            "FUN_08002848",
            "FUN_080028d2",
            "FUN_080028de",
            "FUN_08002ab8",
            "FUN_08002ad8",
            "FUN_08002af8",
            "FUN_08002b84",
            "FUN_08002c10",
            "FUN_08002c54",
            "FUN_08002ca6",
            "FUN_08002cf2",
            "FUN_08002d1c",
            "FUN_08002db2",
            "FUN_08002efc",
            "FUN_08002f9c",
            "FUN_0800306c",
            "FUN_0800316c",
            "FUN_080032b4",
            "FUN_080033b8",
            "FUN_08003520",
            "FUN_0800365c",
            "FUN_08003688",
            "FUN_08003a68",
            "FUN_08003ad4",
            "FUN_08003afa",
            "FUN_08003c44",
            "FUN_08003c50",
            "FUN_08003c70",
            "FUN_08003c90",
            "FUN_08003da4",
            "FUN_08003ea0",
            "FUN_08003ed8",
            "FUN_08003f18",
            "FUN_08004092",
            "FUN_080040b0",
            "FUN_08004110",
            "FUN_0800412c",
            "FUN_0800417c",
            "FUN_08004198",
            "FUN_08004204",
            "FUN_080043b4",
            "FUN_0800441a",
            "FUN_08004478",
            "FUN_0800455a",
            "FUN_080045a2",
            "FUN_080045fe",
            "FUN_08004618",
            "FUN_080046b8",
            "FUN_080047e8",
            "FUN_080047f4",
            "FUN_0800480a",
            "FUN_08004828",
            "FUN_08004848",
            "FUN_08004884",
            "FUN_0800492c",
            "FUN_08004948",
            "FUN_08004974",
            "FUN_080049f0",
            "FUN_08004a4c",
            "FUN_08004b34",
            "FUN_08004b3c",
            "FUN_08004b94",
            "FUN_08004b9e",
            "FUN_08004bb0",
            "FUN_08004c30",
            "FUN_08004c48",
            "FUN_08004c52",
            "FUN_08004c5e",
            "FUN_08004c78",
            "FUN_08004c8a",
            "FUN_08004ca2",
            "FUN_08004cb2",
            "FUN_08004cce",
            "FUN_08004ce2",
            "FUN_08004d06",
            "FUN_08004d18",
            "FUN_08004d40",
            "FUN_08004d44",
            "FUN_08004d90",
            "FUN_08004df4",
            "FUN_08004df8",
            "FUN_08004e12",
            "FUN_08004e20",
            "FUN_08004e70",
            "FUN_08004e74",
            "FUN_08004ec4",
            "FUN_08004ef4",
            "FUN_08004f4c",
            "FUN_08005384",
            "FUN_080053d4",
            "FUN_0800548c",
            "FUN_080054b0",
            "FUN_080054d4",
            "FUN_08005510",
            "FUN_08005568",
            "FUN_080055bc",
            "FUN_080055e0",
            "FUN_08005604",
            "FUN_080056d8",
            "FUN_08005714",
            "FUN_0800571a",
            "FUN_08005724",
            "FUN_08005728",
            "FUN_0800572c",
            "FUN_08005730",
            "FUN_0800573c",
            "FUN_08005740",
            "FUN_08005750",
            "FUN_08005754",
            "FUN_080057b4",
            "FUN_08005848",
            "FUN_08005890",
            "FUN_080058e0",
            "FUN_0800591e",
            "FUN_0800598a",
            "FUN_08005a44",
            "FUN_08005a68",
            "FUN_08005b24",
            "FUN_08005b3c",
            "FUN_08005b54",
            "FUN_08005bb0",
            "FUN_08005c1c",
            "FUN_08005c38",
            "FUN_08005c96",
            "FUN_08005cb6",
            "FUN_08005cc0",
            "FUN_08005cd4",
            "FUN_08005ce8",
            "FUN_08005d42",
            "FUN_08005d82",
            "FUN_08005d8a",
            "FUN_08005da8",
            "FUN_08005f2c",
            "FUN_08005f40",
            "FUN_08005f5e",
            "FUN_08005f6c",
            "FUN_08005f8c",
            "FUN_08005fc8",
            "FUN_080060d4",
            "FUN_080060e4",
            "FUN_08006112",
            "FUN_0800611c",
            "FUN_08006158",
            "FUN_08006174",
            "FUN_08006198",
            "FUN_080061e0",
            "FUN_080061f0",
            "FUN_08006288",
            "FUN_08006344",
            "FUN_08006370",
            "FUN_08006394",
            "FUN_080065c0",
            "FUN_080066b0",
            "FUN_080068f0",
            "FUN_08006920",
            "FUN_080069e4",
            "FUN_08006ac0",
            "FUN_08006be0",
            "FUN_08006c40",
            "FUN_08006c88",
            "FUN_08006cb4",
            "FUN_08006d14",
            "FUN_08006dc8",
            "FUN_08006e10",
            "FUN_08006e90",
            "FUN_08006f00",
            "thunk_FUN_08005750",
            "FUN_08006f38",
            "FUN_08006f5a",
            "FUN_08006f92",
            "FUN_08007004",
            "FUN_08007028",
            "FUN_08007048",
            "FUN_0800706c",
            "FUN_08007090"
        ]
    ],
    "locked_functions": []
}