{
    "functions": {
        "FUN_08000110": {
            "entrypoint": "0x08000110",
            "current_name": "initialize_flag_08000110",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800011c) */\n\nundefined4 initializeFlag_08000110(undefined4 input)\n\n{\n  if ((char)DAT_20000228 == '\\0') {\n    DAT_20000228._0_1_ = '\\x01';\n  }\n  return input;\n}\n\n",
            "renaming": {
                "FUN_08000110": "initialize_flag_08000110",
                "param_1": "input"
            },
            "calling": [],
            "called": [
                "FUN_080072d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000134": {
            "entrypoint": "0x08000134",
            "current_name": "concatenate_param_08000134",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800013a) */\n\nundefined8 concatenate_param_08000134(undefined4 input_1,undefined4 input_2)\n\n{\n  return CONCAT44(input_2,input_1);\n}\n\n",
            "renaming": {
                "FUN_08000134": "concatenate_param_08000134",
                "param_1": "input_1",
                "param_2": "input_2"
            },
            "calling": [
                "FUN_08004fb4"
            ],
            "called": [
                "FUN_080072d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000150": {
            "entrypoint": "0x08000150",
            "current_name": "find_last_character_index_08000150",
            "code": "\nchar * find_last_character_index_08000150(char *string)\n\n{\n  char current_char;\n  char *next_character;\n  char *current_character;\n  \n  current_character = string;\n  do {\n    next_character = current_character + 1;\n    current_char = *current_character;\n    current_character = next_character;\n  } while (current_char != '\\0');\n  return next_character + (-1 - (int)string);\n}\n\n",
            "renaming": {
                "FUN_08000150": "find_last_character_index_08000150",
                "param_1": "string",
                "pcVar3": "current_character",
                "pcVar2": "next_character",
                "cVar1": "current_char"
            },
            "calling": [
                "FUN_08004c8c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000168": {
            "entrypoint": "0x08000168",
            "current_name": "calculate_result_08000168",
            "code": "\nulonglong calculateResult_08000168(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int shiftCount1;\n  byte carryFlag;\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint result1;\n  uint result2;\n  int shiftCount2;\n  uint temp4;\n  uint temp5;\n  uint result3;\n  uint result4;\n  bool condition1;\n  bool condition2;\n  bool condition3;\n  \n  result1 = input4 ^ 0x80000000;\n  temp4 = input2 << 1;\n  input4 = input4 << 1;\n  condition1 = ((input2 ^ result1) & 0x7fffffff) == 0;\n  condition2 = condition1 && input1 == input3;\n  if (!condition1 || input1 != input3) {\n    condition2 = (temp4 | input1) == 0;\n  }\n  if (!condition2) {\n    condition2 = (input4 | input3) == 0;\n  }\n  shiftCount2 = (int)temp4 >> 0x15;\n  if (!condition2) {\n    condition2 = shiftCount2 == -1;\n  }\n  shiftCount1 = (int)input4 >> 0x15;\n  if (!condition2) {\n    condition2 = shiftCount1 == -1;\n  }\n  if (condition2) {\n    if (shiftCount2 == -1 || shiftCount1 == -1) {\n      temp4 = result1;\n      result3 = input3;\n      if (shiftCount2 == -1) {\n        temp4 = input2;\n        result3 = input1;\n      }\n      if (shiftCount2 != -1 || shiftCount1 != -1) {\n        input3 = result3;\n        result1 = temp4;\n      }\n      condition2 = (result3 | temp4 << 0xc) == 0;\n      if (condition2) {\n        condition2 = (input3 | result1 << 0xc) == 0;\n      }\n      if (condition2) {\n        condition2 = temp4 == result1;\n      }\n      if (!condition2) {\n        temp4 = temp4 | 0x80000;\n      }\n      return CONCAT44(temp4,result3);\n    }\n    if (((input2 ^ result1) & 0x7fffffff) != 0 || input1 != input3) {\n      if ((temp4 | input1) == 0) {\n        input1 = input3;\n        input2 = result1;\n      }\n      return CONCAT44(input2,input1);\n    }\n    if (input2 != result1) {\n      return 0;\n    }\n    if (temp4 >> 0x15 == 0) {\n      condition2 = (input1 & 0x80000000) != 0;\n      result1 = input2 * 2 + (uint)condition2;\n      if (CARRY4(input2,input2) || CARRY4(input2 * 2,(uint)condition2)) {\n        result1 = result1 | 0x80000000;\n      }\n      return CONCAT44(result1,input1 << 1);\n    }\n    if (temp4 < 0xffc00000) {\n      return CONCAT44(input2 + 0x100000,input1);\n    }\n    input2 = input2 & 0x80000000;\nLAB_080003ac:\n    return (ulonglong)(input2 | 0x7ff00000) << 0x20;\n  }\n  temp4 = temp4 >> 0x15;\n  input4 = input4 >> 0x15;\n  result3 = input4 - temp4;\n  condition2 = result3 != 0;\n  if (input4 < temp4) {\n    result3 = -result3;\n  }\n  temp5 = input1;\n  result2 = input2;\n  if (condition2 && temp4 <= input4) {\n    temp4 = temp4 + result3;\n    temp5 = input3;\n    result2 = result1;\n    input3 = input1;\n    result1 = input2;\n  }\n  if (0x36 < result3) {\n    return CONCAT44(result2,temp5);\n  }\n  temp2 = result2 & 0xfffff | 0x100000;\n  if ((result2 & 0x80000000) != 0) {\n    condition2 = temp5 != 0;\n    temp5 = -temp5;\n    temp2 = -temp2 - (uint)condition2;\n  }\n  result2 = result1 & 0xfffff | 0x100000;\n  if ((result1 & 0x80000000) != 0) {\n    condition2 = input3 != 0;\n    input3 = -input3;\n    result2 = -result2 - (uint)condition2;\n  }\n  if (temp4 == result3) {\n    result2 = result2 ^ 0x100000;\n    if (temp4 == 0) {\n      temp2 = temp2 ^ 0x100000;\n      temp4 = 1;\n    }\n    else {\n      result3 = result3 - 1;\n    }\n  }\n  result1 = -result3 + 0x20;\n  if ((int)result3 < 0x21) {\n    result4 = input3 << (result1 & 0xff);\n    input3 = input3 >> (result3 & 0xff);\n    temp1 = temp5 + input3;\n    temp3 = result2 << (result1 & 0xff);\n    result1 = temp1 + temp3;\n    temp2 = temp2 + CARRY4(temp5,input3) + ((int)result2 >> (result3 & 0xff)) +\n            (uint)CARRY4(temp1,temp3);\n  }\n  else {\n    result4 = result2 << (-result3 + 0x40 & 0xff);\n    if (input3 != 0) {\n      result4 = result4 | 2;\n    }\n    result2 = (int)result2 >> (result3 - 0x20 & 0xff);\n    result1 = temp5 + result2;\n    temp2 = temp2 + ((int)result2 >> 0x1f) + (uint)CARRY4(temp5,result2);\n  }\n  input2 = temp2 & 0x80000000;\n  result3 = temp2;\n  if ((int)temp2 < 0) {\n    condition2 = result4 == 0;\n    result4 = -result4;\n    result3 = -result1;\n    result1 = -(uint)!condition2 - result1;\n    result3 = -(uint)(condition2 <= result3) - temp2;\n  }\n  if (0xfffff < result3) {\n    temp5 = temp4 - 1;\n    if (0x1fffff < result3) {\n      temp5 = result3 & 1;\n      result3 = result3 >> 1;\n      carryFlag = (byte)result1;\n      result1 = (uint)(temp5 != 0) << 0x1f | result1 >> 1;\n      result4 = (uint)(carryFlag & 1) << 0x1f | result4 >> 1;\n      temp5 = temp4;\n      if (0xffbfffff < temp4 * 0x200000) goto LAB_080003ac;\n    }\nLAB_08000278:\n    condition2 = 0x7fffffff < result4;\n    if (result4 == 0x80000000) {\n      condition2 = (result1 & 1) != 0;\n    }\n    return CONCAT44(result3 + temp5 * 0x100000 + (uint)CARRY4(result1,(uint)condition2) | input2,\n                    result1 + condition2);\n  }\n  condition1 = (result4 & 0x80000000) != 0;\n  result4 = result4 << 1;\n  temp5 = result1 * 2;\n  condition2 = CARRY4(result1,result1);\n  result1 = result1 * 2 + (uint)condition1;\n  result3 = result3 * 2 + (uint)(condition2 || CARRY4(temp5,(uint)condition1));\n  temp5 = temp4 - 2;\n  if ((result3 & 0x100000) != 0) goto LAB_08000278;\n  result2 = result1;\n  temp4 = result3;\n  if (result3 == 0) {\n    result2 = 0;\n    temp4 = result1;\n  }\n  shiftCount2 = LZCOUNT(temp4);\n  if (result3 == 0) {\n    shiftCount2 = shiftCount2 + 0x20;\n  }\n  result3 = shiftCount2 - 0xb;\n  condition3 = SBORROW4(result3,0x20);\n  result1 = shiftCount2 - 0x2b;\n  condition2 = (int)result1 < 0;\n  condition1 = result1 == 0;\n  if ((int)result3 < 0x20) {\n    condition3 = SCARRY4(result1,0xc);\n    shiftCount2 = shiftCount2 + -0x1f;\n    condition2 = shiftCount2 < 0;\n    condition1 = shiftCount2 == 0;\n    result1 = result3;\n    if (!condition1 && condition2 == condition3) {\n      result2 = temp4 << (result3 & 0xff);\n      temp4 = temp4 >> (0xcU - shiftCount2 & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (condition1 || condition2 != condition3) {\n    result4 = 0x20 - result1;\n  }\n  temp4 = temp4 << (result1 & 0xff);\n  if (condition1 || condition2 != condition3) {\n    temp4 = temp4 | result2 >> (result4 & 0xff);\n  }\n  if (condition1 || condition2 != condition3) {\n    result2 = result2 << (result1 & 0xff);\n  }\nLAB_080002f0:\n  if ((int)result3 <= (int)temp5) {\n    return CONCAT44(temp4 + (temp5 - result3) * 0x100000 | input2,result2);\n  }\n  result1 = ~(temp5 - result3);\n  if ((int)result1 < 0x1f) {\n    shiftCount2 = result1 - 0x13;\n    if (shiftCount2 != 0 && shiftCount2 < 0 == SCARRY4(result1 - 0x1f,0xc)) {\n      return CONCAT44(temp2,result2 >> (0x20 - (0xcU - shiftCount2) & 0xff) | temp4 << (0xcU - shiftCount2 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    result1 = result1 + 1;\n    return CONCAT44(input2 | temp4 >> (result1 & 0xff),\n                    result2 >> (result1 & 0xff) | temp4 << (0x20 - result1 & 0xff));\n  }\n  return CONCAT44(temp2,temp4 >> (result1 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_08000168": "calculate_result_08000168",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "shiftCount1",
                "bVar2": "carryFlag",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "uVar5": "temp3",
                "uVar6": "result1",
                "uVar7": "result2",
                "iVar8": "shiftCount2",
                "uVar9": "temp4",
                "uVar10": "temp5",
                "uVar11": "result3",
                "uVar12": "result4",
                "bVar13": "condition1",
                "bVar14": "condition2",
                "bVar15": "condition3"
            },
            "calling": [
                "FUN_08006d68",
                "FUN_08005c70",
                "FUN_080070b0",
                "FUN_08006c0c",
                "FUN_0800411c",
                "FUN_08006228",
                "FUN_08006070"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800016c": {
            "entrypoint": "0x0800016c",
            "current_name": "reverse_bits_0800016c",
            "code": "\nulonglong reverseBits_0800016c(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int shift1;\n  byte carryBit;\n  uint result1;\n  uint temp1;\n  uint result2;\n  int shift2;\n  uint shiftedInput2;\n  uint shiftedInput1;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  bool bVar13;\n  bool bVar14;\n  bool bVar15;\n  \n  shiftedInput2 = input2 << 1;\n  uVar9 = input4 << 1;\n  bVar13 = ((input2 ^ input4) & 0x7fffffff) == 0;\n  bVar14 = bVar13 && input1 == input3;\n  if (!bVar13 || input1 != input3) {\n    bVar14 = (shiftedInput2 | input1) == 0;\n  }\n  if (!bVar14) {\n    bVar14 = (uVar9 | input3) == 0;\n  }\n  shift2 = (int)shiftedInput2 >> 0x15;\n  if (!bVar14) {\n    bVar14 = shift2 == -1;\n  }\n  shift1 = (int)uVar9 >> 0x15;\n  if (!bVar14) {\n    bVar14 = shift1 == -1;\n  }\n  if (bVar14) {\n    if (shift2 == -1 || shift1 == -1) {\n      uVar9 = input4;\n      shiftedInput2 = input3;\n      if (shift2 == -1) {\n        uVar9 = input2;\n        shiftedInput2 = input1;\n      }\n      if (shift2 != -1 || shift1 != -1) {\n        input3 = shiftedInput2;\n        input4 = uVar9;\n      }\n      bVar14 = (shiftedInput2 | uVar9 << 0xc) == 0;\n      if (bVar14) {\n        bVar14 = (input3 | input4 << 0xc) == 0;\n      }\n      if (bVar14) {\n        bVar14 = uVar9 == input4;\n      }\n      if (!bVar14) {\n        uVar9 = uVar9 | 0x80000;\n      }\n      return CONCAT44(uVar9,shiftedInput2);\n    }\n    if (((input2 ^ input4) & 0x7fffffff) != 0 || input1 != input3) {\n      if ((shiftedInput2 | input1) == 0) {\n        input1 = input3;\n        input2 = input4;\n      }\n      return CONCAT44(input2,input1);\n    }\n    if (input2 != input4) {\n      return 0;\n    }\n    if (shiftedInput2 >> 0x15 == 0) {\n      bVar14 = (input1 & 0x80000000) != 0;\n      uVar9 = input2 * 2 + (uint)bVar14;\n      if (CARRY4(input2,input2) || CARRY4(input2 * 2,(uint)bVar14)) {\n        uVar9 = uVar9 | 0x80000000;\n      }\n      return CONCAT44(uVar9,input1 << 1);\n    }\n    if (shiftedInput2 < 0xffc00000) {\n      return CONCAT44(input2 + 0x100000,input1);\n    }\n    input2 = input2 & 0x80000000;\nLAB_080003ac:\n    return (ulonglong)(input2 | 0x7ff00000) << 0x20;\n  }\n  shiftedInput2 = shiftedInput2 >> 0x15;\n  uVar9 = uVar9 >> 0x15;\n  uVar10 = uVar9 - shiftedInput2;\n  bVar14 = uVar10 != 0;\n  if (uVar9 < shiftedInput2) {\n    uVar10 = -uVar10;\n  }\n  shiftedInput1 = input1;\n  result2 = input2;\n  if (bVar14 && shiftedInput2 <= uVar9) {\n    shiftedInput2 = shiftedInput2 + uVar10;\n    shiftedInput1 = input3;\n    result2 = input4;\n    input3 = input1;\n    input4 = input2;\n  }\n  if (0x36 < uVar10) {\n    return CONCAT44(result2,shiftedInput1);\n  }\n  uVar9 = result2 & 0xfffff | 0x100000;\n  if ((result2 & 0x80000000) != 0) {\n    bVar14 = shiftedInput1 != 0;\n    shiftedInput1 = -shiftedInput1;\n    uVar9 = -uVar9 - (uint)bVar14;\n  }\n  result2 = input4 & 0xfffff | 0x100000;\n  if ((input4 & 0x80000000) != 0) {\n    bVar14 = input3 != 0;\n    input3 = -input3;\n    result2 = -result2 - (uint)bVar14;\n  }\n  if (shiftedInput2 == uVar10) {\n    result2 = result2 ^ 0x100000;\n    if (shiftedInput2 == 0) {\n      uVar9 = uVar9 ^ 0x100000;\n      shiftedInput2 = 1;\n    }\n    else {\n      uVar10 = uVar10 - 1;\n    }\n  }\n  uVar12 = -uVar10 + 0x20;\n  if ((int)uVar10 < 0x21) {\n    uVar11 = input3 << (uVar12 & 0xff);\n    input3 = input3 >> (uVar10 & 0xff);\n    result1 = shiftedInput1 + input3;\n    temp1 = result2 << (uVar12 & 0xff);\n    uVar12 = result1 + temp1;\n    uVar9 = uVar9 + CARRY4(shiftedInput1,input3) + ((int)result2 >> (uVar10 & 0xff)) +\n            (uint)CARRY4(result1,temp1);\n  }\n  else {\n    uVar11 = result2 << (-uVar10 + 0x40 & 0xff);\n    if (input3 != 0) {\n      uVar11 = uVar11 | 2;\n    }\n    result2 = (int)result2 >> (uVar10 - 0x20 & 0xff);\n    uVar12 = shiftedInput1 + result2;\n    uVar9 = uVar9 + ((int)result2 >> 0x1f) + (uint)CARRY4(shiftedInput1,result2);\n  }\n  input2 = uVar9 & 0x80000000;\n  uVar10 = uVar9;\n  if ((int)uVar9 < 0) {\n    bVar14 = uVar11 == 0;\n    uVar11 = -uVar11;\n    uVar10 = -uVar12;\n    uVar12 = -(uint)!bVar14 - uVar12;\n    uVar10 = -(uint)(bVar14 <= uVar10) - uVar9;\n  }\n  if (0xfffff < uVar10) {\n    shiftedInput1 = shiftedInput2 - 1;\n    if (0x1fffff < uVar10) {\n      uVar9 = uVar10 & 1;\n      uVar10 = uVar10 >> 1;\n      carryBit = (byte)uVar12;\n      uVar12 = (uint)(uVar9 != 0) << 0x1f | uVar12 >> 1;\n      uVar11 = (uint)(carryBit & 1) << 0x1f | uVar11 >> 1;\n      shiftedInput1 = shiftedInput2;\n      if (0xffbfffff < shiftedInput2 * 0x200000) goto LAB_080003ac;\n    }\nLAB_08000278:\n    bVar14 = 0x7fffffff < uVar11;\n    if (uVar11 == 0x80000000) {\n      bVar14 = (uVar12 & 1) != 0;\n    }\n    return CONCAT44(uVar10 + shiftedInput1 * 0x100000 + (uint)CARRY4(uVar12,(uint)bVar14) | input2,\n                    uVar12 + bVar14);\n  }\n  bVar13 = (uVar11 & 0x80000000) != 0;\n  uVar11 = uVar11 << 1;\n  shiftedInput1 = uVar12 * 2;\n  bVar14 = CARRY4(uVar12,uVar12);\n  uVar12 = uVar12 * 2 + (uint)bVar13;\n  uVar10 = uVar10 * 2 + (uint)(bVar14 || CARRY4(shiftedInput1,(uint)bVar13));\n  shiftedInput1 = shiftedInput2 - 2;\n  if ((uVar10 & 0x100000) != 0) goto LAB_08000278;\n  result2 = uVar12;\n  shiftedInput2 = uVar10;\n  if (uVar10 == 0) {\n    result2 = 0;\n    shiftedInput2 = uVar12;\n  }\n  shift2 = LZCOUNT(shiftedInput2);\n  if (uVar10 == 0) {\n    shift2 = shift2 + 0x20;\n  }\n  uVar12 = shift2 - 0xb;\n  bVar15 = SBORROW4(uVar12,0x20);\n  uVar10 = shift2 - 0x2b;\n  bVar14 = (int)uVar10 < 0;\n  bVar13 = uVar10 == 0;\n  if ((int)uVar12 < 0x20) {\n    bVar15 = SCARRY4(uVar10,0xc);\n    shift2 = shift2 + -0x1f;\n    bVar14 = shift2 < 0;\n    bVar13 = shift2 == 0;\n    uVar10 = uVar12;\n    if (!bVar13 && bVar14 == bVar15) {\n      result2 = shiftedInput2 << (uVar12 & 0xff);\n      shiftedInput2 = shiftedInput2 >> (0xcU - shift2 & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    uVar11 = 0x20 - uVar10;\n  }\n  shiftedInput2 = shiftedInput2 << (uVar10 & 0xff);\n  if (bVar13 || bVar14 != bVar15) {\n    shiftedInput2 = shiftedInput2 | result2 >> (uVar11 & 0xff);\n  }\n  if (bVar13 || bVar14 != bVar15) {\n    result2 = result2 << (uVar10 & 0xff);\n  }\nLAB_080002f0:\n  if ((int)uVar12 <= (int)shiftedInput1) {\n    return CONCAT44(shiftedInput2 + (shiftedInput1 - uVar12) * 0x100000 | input2,result2);\n  }\n  uVar10 = ~(shiftedInput1 - uVar12);\n  if ((int)uVar10 < 0x1f) {\n    shift2 = uVar10 - 0x13;\n    if (shift2 != 0 && shift2 < 0 == SCARRY4(uVar10 - 0x1f,0xc)) {\n      return CONCAT44(uVar9,result2 >> (0x20 - (0xcU - shift2) & 0xff) | shiftedInput2 << (0xcU - shift2 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    uVar10 = uVar10 + 1;\n    return CONCAT44(input2 | shiftedInput2 >> (uVar10 & 0xff),\n                    result2 >> (uVar10 & 0xff) | shiftedInput2 << (0x20 - uVar10 & 0xff));\n  }\n  return CONCAT44(uVar9,shiftedInput2 >> (uVar10 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800016c": "reverse_bits_0800016c",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "shift1",
                "bVar2": "carryBit",
                "uVar3": "result1",
                "uVar4": "temp1",
                "uVar5": "result2",
                "iVar6": "shift2",
                "uVar7": "shiftedInput2",
                "uVar8": "shiftedInput1"
            },
            "calling": [
                "FUN_080071c0",
                "FUN_08006d68",
                "FUN_08005c70",
                "FUN_080070b0",
                "FUN_08006c0c",
                "FUN_08006228",
                "FUN_08006070"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000404": {
            "entrypoint": "0x08000404",
            "current_name": "decode_unsigned_long_long_08000404",
            "code": "\nulonglong decode_unsigned_long_long_08000404(uint input_value)\n\n{\n  uint bit_count;\n  uint abs_value;\n  uint shift_amount;\n  int leading_zeros;\n  uint shift_value;\n  uint sign_bit;\n  uint remaining_bits;\n  bool is_negative;\n  bool is_zero;\n  bool overflowed;\n  \n  if (input_value == 0) {\n    return 0;\n  }\n  sign_bit = input_value & 0x80000000;\n  abs_value = input_value;\n  if ((int)sign_bit < 0) {\n    abs_value = -input_value;\n  }\n  bit_count = 0;\n  leading_zeros = LZCOUNT(abs_value);\n  shift_value = leading_zeros + 0x15;\n  overflowed = SBORROW4(shift_value,0x20);\n  shift_amount = leading_zeros - 0xb;\n  is_negative = (int)shift_amount < 0;\n  is_zero = shift_amount == 0;\n  if (shift_value < 0x20) {\n    overflowed = SCARRY4(shift_amount,0xc);\n    is_negative = false;\n    is_zero = leading_zeros + 1 == 0;\n    shift_amount = shift_value;\n    if (!is_zero && overflowed == false) {\n      bit_count = abs_value << shift_value;\n      abs_value = abs_value >> (0xcU - (leading_zeros + 1) & 0xff);\n      goto continue_execution;\n    }\n  }\n  if (is_zero || is_negative != overflowed) {\n    remaining_bits = 0x20 - shift_amount;\n  }\n  abs_value = abs_value << (shift_amount & 0xff);\n  if (is_zero || is_negative != overflowed) {\n    abs_value = abs_value | 0U >> (remaining_bits & 0xff);\n  }\n  if (is_zero || is_negative != overflowed) {\n    bit_count = 0 << (shift_amount & 0xff);\n  }\ncontinue_execution:\n  if (shift_value < 0x433) {\n    return CONCAT44(abs_value + (0x432 - shift_value) * 0x100000 | sign_bit,bit_count);\n  }\n  shift_amount = ~(0x432 - shift_value);\n  if (0x1e < (int)shift_amount) {\n    return CONCAT44(input_value,abs_value >> (shift_amount - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  leading_zeros = shift_amount - 0x13;\n  if (leading_zeros == 0 || leading_zeros < 0 != SCARRY4(shift_amount - 0x1f,0xc)) {\n    shift_amount = shift_amount + 1;\n    return CONCAT44(sign_bit | abs_value >> (shift_amount & 0xff),\n                    bit_count >> (shift_amount & 0xff) | abs_value << (0x20 - shift_amount & 0xff));\n  }\n  return CONCAT44(input_value,bit_count >> (0x20 - (0xcU - leading_zeros) & 0xff) | abs_value << (0xcU - leading_zeros & 0xff))\n         & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_08000404": "decode_unsigned_long_long_08000404",
                "param_1": "input_value",
                "uVar1": "bit_count",
                "uVar2": "abs_value",
                "uVar3": "shift_amount",
                "iVar4": "leading_zeros",
                "uVar5": "shift_value",
                "uVar6": "sign_bit",
                "in_r12": "remaining_bits",
                "bVar7": "is_negative",
                "bVar8": "is_zero",
                "bVar9": "overflowed",
                "LAB_080002f0": "continue_execution"
            },
            "calling": [
                "FUN_08006228"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000428": {
            "entrypoint": "0x08000428",
            "current_name": "reverse_bits_08000428",
            "code": "\nulonglong reverseBits_08000428(uint input,undefined4 unused1,undefined4 unused2,uint unused3)\n\n{\n  uint mask;\n  uint temp1;\n  uint result;\n  uint shift;\n  uint inputShifted;\n  int count;\n  uint normalizedCount;\n  uint remainder;\n  bool isNegativeCount;\n  bool isEdgeCase;\n  bool isOverflow;\n  \n  inputShifted = input << 1;\n  isEdgeCase = inputShifted == 0;\n  mask = (uint)((input & 0x80000000) != 0) << 0x1f;\n  shift = (uint)((int)inputShifted >> 3) >> 1;\n  result = mask | shift;\n  input = input << 0x1d;\n  if (!isEdgeCase) {\n    unused3 = inputShifted & 0xff000000;\n    isEdgeCase = unused3 == 0;\n  }\n  if (!isEdgeCase) {\n    isEdgeCase = unused3 == 0xff000000;\n  }\n  if (!isEdgeCase) {\n    return CONCAT44(result,input) ^ 0x3800000000000000;\n  }\n  if (inputShifted == 0 || unused3 == 0xff000000) {\n    return CONCAT44(result,input);\n  }\n  temp1 = input;\n  inputShifted = shift;\n  if (shift == 0) {\n    temp1 = 0;\n    inputShifted = input;\n  }\n  count = LZCOUNT(inputShifted);\n  if (shift == 0) {\n    count = count + 0x20;\n  }\n  normalizedCount = count - 0xb;\n  isOverflow = SBORROW4(normalizedCount,0x20);\n  shift = count - 0x2b;\n  isEdgeCase = (int)shift < 0;\n  isNegativeCount = shift == 0;\n  if ((int)normalizedCount < 0x20) {\n    isOverflow = SCARRY4(shift,0xc);\n    count = count + -0x1f;\n    isEdgeCase = count < 0;\n    isNegativeCount = count == 0;\n    shift = normalizedCount;\n    if (!isNegativeCount && isEdgeCase == isOverflow) {\n      temp1 = inputShifted << (normalizedCount & 0xff);\n      inputShifted = inputShifted >> (0xcU - count & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (isNegativeCount || isEdgeCase != isOverflow) {\n    remainder = 0x20 - shift;\n  }\n  inputShifted = inputShifted << (shift & 0xff);\n  if (isNegativeCount || isEdgeCase != isOverflow) {\n    inputShifted = inputShifted | temp1 >> (remainder & 0xff);\n  }\n  if (isNegativeCount || isEdgeCase != isOverflow) {\n    temp1 = temp1 << (shift & 0xff);\n  }\nLAB_080002f0:\n  if ((int)normalizedCount < 0x381) {\n    return CONCAT44(inputShifted + (0x380 - normalizedCount) * 0x100000 | mask,temp1);\n  }\n  shift = ~(0x380 - normalizedCount);\n  if ((int)shift < 0x1f) {\n    count = shift - 0x13;\n    if (count != 0 && count < 0 == SCARRY4(shift - 0x1f,0xc)) {\n      return CONCAT44(result,temp1 >> (0x20 - (0xcU - count) & 0xff) | inputShifted << (0xcU - count & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    shift = shift + 1;\n    return CONCAT44(mask | inputShifted >> (shift & 0xff),\n                    temp1 >> (shift & 0xff) | inputShifted << (0x20 - shift & 0xff));\n  }\n  return CONCAT44(result,inputShifted >> (shift - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_08000428": "reverse_bits_08000428",
                "param_1": "input",
                "param_2": "unused1",
                "param_3": "unused2",
                "param_4": "unused3",
                "uVar1": "mask",
                "uVar2": "temp1",
                "uVar3": "result",
                "uVar4": "shift",
                "uVar5": "inputShifted",
                "iVar6": "count",
                "uVar7": "normalizedCount",
                "in_r12": "remainder",
                "bVar8": "isNegativeCount",
                "bVar9": "isEdgeCase",
                "bVar10": "isOverflow"
            },
            "calling": [
                "FUN_0800411c",
                "FUN_08003330"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080004d0": {
            "entrypoint": "0x080004d0",
            "current_name": "calculate_sum_080004d0",
            "code": "\nulonglong calculateSum_080004d0(undefined4 input1,uint input2,uint input3,uint input4)\n\n{\n  ulonglong result1;\n  longlong result2;\n  uint temp1;\n  uint temp2;\n  int temp3;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  uint temp7;\n  bool flag1;\n  bool flag2;\n  bool flag3;\n  ulonglong combinedInputs;\n  \n  combinedInputs = CONCAT44(input2,input1);\n  temp6 = 0x7ff;\n  temp2 = input2 >> 0x14 & 0x7ff;\n  flag1 = temp2 == 0;\n  if (!flag1) {\n    temp5 = input4 >> 0x14 & 0x7ff;\n    flag1 = temp5 == 0;\n  }\n  if (!flag1) {\n    flag1 = temp2 == 0x7ff;\n  }\n  if (!flag1) {\n    flag1 = temp5 == 0x7ff;\n  }\n  if (flag1) {\n    combinedInputs = FUN_080006ac();\n  }\n  temp1 = (uint)(combinedInputs >> 0x20);\n  temp3 = temp2 + temp5;\n  temp2 = temp1 ^ input4;\n  temp1 = temp1 & ~(temp6 << 0x15);\n  input4 = input4 & ~(temp6 << 0x15);\n  flag1 = ((uint)combinedInputs | temp1 << 0xc) == 0;\n  if (!flag1) {\n    flag1 = (input3 | input4 << 0xc) == 0;\n  }\n  temp1 = temp1 | 0x100000;\n  input4 = input4 | 0x100000;\n  if (flag1) {\n    input3 = (uint)combinedInputs | input3;\n    input4 = (temp2 & 0x80000000 | temp1) ^ input4;\n    temp2 = temp6 >> 1;\n    flag3 = SBORROW4(temp3,temp2);\n    temp4 = temp3 - temp2;\n    flag1 = temp4 == 0;\n    temp1 = temp4;\n    if (!flag1 && (int)temp2 <= temp3) {\n      flag3 = SBORROW4(temp6,temp4);\n      temp1 = temp6 - temp4;\n      flag1 = temp6 == temp4;\n    }\n    if (!flag1 && (int)temp1 < 0 == flag3) {\n      input4 = input4 | temp4 * 0x100000;\n    }\n    if (!flag1 && (int)temp1 < 0 == flag3) {\n      return CONCAT44(input4,input3);\n    }\n    input4 = input4 | 0x100000;\n    temp6 = 0;\n    flag3 = SBORROW4(temp4,1);\n    temp4 = temp4 - 1;\n    flag1 = temp4 == 0;\n    temp2 = temp4;\n  }\n  else {\n    result1 = (combinedInputs & 0xffffffff) * (ulonglong)input3;\n    combinedInputs = (combinedInputs & 0xffffffff) * (ulonglong)input4 +\n             (ulonglong)temp1 * (ulonglong)input3 + (result1 >> 0x20);\n    temp7 = (uint)combinedInputs;\n    result2 = (ulonglong)temp1 * (ulonglong)input4 + (combinedInputs >> 0x20);\n    temp6 = (uint)result2;\n    temp1 = (uint)((ulonglong)result2 >> 0x20);\n    if ((int)result1 != 0) {\n      temp7 = temp7 | 1;\n    }\n    temp4 = (temp3 + -0x3ff) - (uint)(temp1 < 0x200);\n    if (temp1 < 0x200) {\n      flag1 = (temp7 & 0x80000000) != 0;\n      temp7 = temp7 << 1;\n      result2 = CONCAT44(temp1 * 2 + (uint)(CARRY4(temp6,temp6) || CARRY4(temp6 * 2,(uint)flag1)),\n                       temp6 * 2 + (uint)flag1);\n    }\n    input4 = temp2 & 0x80000000 | (int)((ulonglong)result2 >> 0x20) << 0xb | (uint)result2 >> 0x15;\n    input3 = (uint)result2 << 0xb | temp7 >> 0x15;\n    temp6 = temp7 * 0x800;\n    flag2 = 0xfc < temp4;\n    flag3 = SBORROW4(temp4,0xfd);\n    temp1 = temp4 - 0xfd;\n    flag1 = temp1 == 0;\n    temp2 = temp1;\n    if (flag2 && !flag1) {\n      flag2 = 0x6ff < temp1;\n      flag3 = SBORROW4(temp1,0x700);\n      temp2 = temp4 - 0x7fd;\n      flag1 = temp1 == 0x700;\n    }\n    if (!flag2 || flag1) {\n      flag1 = 0x7fffffff < temp6;\n      if (temp6 == 0x80000000) {\n        flag1 = (temp7 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(input4 + temp4 * 0x100000 + (uint)CARRY4(input3,(uint)flag1),input3 + flag1\n                     );\n    }\n  }\n  if (!flag1 && (int)temp2 < 0 == flag3) {\n    return (ulonglong)(input4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  flag2 = SCARRY4(temp4,0x36);\n  flag1 = (int)(temp4 + 0x36) < 0;\n  flag3 = temp4 == 0xffffffca;\n  if (flag3 || flag1 != flag2) {\n    input3 = 0;\n  }\n  if (flag3 || flag1 != flag2) {\n    input4 = input4 & 0x80000000;\n  }\n  if (flag3 || flag1 != flag2) {\n    return CONCAT44(input4,input3);\n  }\n  temp2 = -temp4;\n  temp1 = temp2 - 0x20;\n  if (0x1f < (int)temp2) {\n    temp4 = input3 >> (temp1 & 0xff) | input4 << (0x20 - temp1 & 0xff);\n    temp2 = (input4 >> (temp1 & 0xff) & ~((input4 & 0x80000000) >> (temp1 & 0xff))) -\n            ((int)temp4 >> 0x1f);\n    if ((temp6 | input3 << (0x20 - temp1 & 0xff) | temp4 << 1) == 0) {\n      temp2 = temp2 & ~(temp4 >> 0x1f);\n    }\n    return CONCAT44(input4,temp2) & 0x80000000ffffffff;\n  }\n  temp3 = temp2 - 0x14;\n  if (temp3 == 0 || temp3 < 0 != SCARRY4(temp1,0xc)) {\n    temp7 = input3 << (temp4 + 0x20 & 0xff);\n    temp1 = input3 >> (temp2 & 0xff) | input4 << (temp4 + 0x20 & 0xff);\n    temp4 = temp1 + -((int)temp7 >> 0x1f);\n    if ((temp6 | temp7 << 1) == 0) {\n      temp4 = temp4 & ~(temp7 >> 0x1f);\n    }\n    return CONCAT44((input4 & 0x80000000) +\n                    ((input4 & 0x7fffffff) >> (temp2 & 0xff)) +\n                    (uint)CARRY4(temp1,-((int)temp7 >> 0x1f)),temp4);\n  }\n  temp2 = 0xc - temp3;\n  temp4 = input3 << (temp2 & 0xff);\n  temp2 = input3 >> (0x20 - temp2 & 0xff) | input4 << (temp2 & 0xff);\n  temp1 = temp2 + -((int)temp4 >> 0x1f);\n  if ((temp6 | temp4 << 1) == 0) {\n    temp1 = temp1 & ~(temp4 >> 0x1f);\n  }\n  return CONCAT44((input4 & 0x80000000) + (uint)CARRY4(temp2,-((int)temp4 >> 0x1f)),temp1);\n}\n\n",
            "renaming": {
                "FUN_080004d0": "calculate_sum_080004d0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result1",
                "lVar2": "result2",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "iVar5": "temp3",
                "uVar6": "temp4",
                "unaff_r5": "temp5",
                "uVar7": "temp6",
                "uVar8": "temp7",
                "bVar9": "flag1",
                "bVar10": "flag2",
                "bVar11": "flag3",
                "uVar12": "combinedInputs"
            },
            "calling": [
                "FUN_080071c0",
                "FUN_08006d68",
                "FUN_08005c70",
                "FUN_08005900",
                "FUN_08006c0c",
                "FUN_0800411c",
                "FUN_08006228",
                "FUN_08003330"
            ],
            "called": [
                "FUN_080006ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080006ac": {
            "entrypoint": "0x080006ac",
            "current_name": "calculate_result_080006ac",
            "code": "\nulonglong calculate_result_080006ac(uint input_1,uint input_2,uint input_3,uint input_4)\n\n{\n  uint shifted_input_1;\n  uint temp_1;\n  uint temp_2;\n  uint temp_3;\n  uint mask;\n  bool bVar4;\n  \n  temp_2 = mask & input_4 >> 0x14;\n  if (temp_1 != mask && temp_2 != mask) {\n    bVar4 = (input_1 | input_2 << 1) == 0;\n    if (!bVar4) {\n      bVar4 = (input_3 | input_4 << 1) == 0;\n    }\n    if (bVar4) {\n      return (ulonglong)((input_2 ^ input_4) & 0x80000000) << 0x20;\n    }\n    if (temp_1 == 0) {\n      temp_3 = input_2 & 0x80000000;\n      do {\n        shifted_input_1 = input_1 & 0x80000000;\n        input_1 = input_1 << 1;\n        input_2 = input_2 * 2 + (uint)(shifted_input_1 != 0);\n      } while ((input_2 & 0x100000) == 0);\n      input_2 = input_2 | temp_3;\n      if (temp_2 != 0) {\n        return CONCAT44(input_2,input_1);\n      }\n    }\n    do {\n      temp_2 = input_3 & 0x80000000;\n      input_3 = input_3 << 1;\n      input_4 = input_4 * 2 + (uint)(temp_2 != 0);\n    } while ((input_4 & 0x100000) == 0);\n    return CONCAT44(input_2,input_1);\n  }\n  bVar4 = (input_1 | input_2 << 1) == 0;\n  if (bVar4) {\n    input_2 = input_4;\n    input_1 = input_3;\n  }\n  if (!bVar4) {\n    bVar4 = (input_3 | input_4 << 1) == 0;\n  }\n  temp_3 = input_2;\n  if (((!bVar4) && ((temp_1 != mask || ((input_1 | input_2 << 0xc) == 0)))) &&\n     ((temp_2 != mask || (input_1 = input_3, temp_3 = input_4, (input_3 | input_4 << 0xc) == 0)))) {\n    return (ulonglong)((input_2 ^ input_4) & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  return CONCAT44(temp_3,input_1) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_080006ac": "calculate_result_080006ac",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "shifted_input_1",
                "unaff_r4": "temp_1",
                "uVar2": "temp_2",
                "uVar3": "temp_3",
                "in_r12": "mask"
            },
            "calling": [
                "FUN_080004d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000724": {
            "entrypoint": "0x08000724",
            "current_name": "FUNC_08000724",
            "code": "\nulonglong FUNC_08000724(undefined4 param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  uint uVar6;\n  uint uVar7;\n  int iVar8;\n  uint uVar9;\n  uint unaff_r5;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  uint uVar13;\n  bool bVar14;\n  bool bVar15;\n  bool bVar16;\n  undefined8 uVar17;\n  \n  uVar17 = CONCAT44(param_2,param_1);\n  uVar13 = 0x7ff;\n  uVar7 = param_2 >> 0x14 & 0x7ff;\n  bVar14 = uVar7 == 0;\n  if (!bVar14) {\n    unaff_r5 = param_4 >> 0x14 & 0x7ff;\n    bVar14 = unaff_r5 == 0;\n  }\n  if (!bVar14) {\n    bVar14 = uVar7 == 0x7ff;\n  }\n  if (!bVar14) {\n    bVar14 = unaff_r5 == 0x7ff;\n  }\n  if (bVar14) {\n    uVar17 = FUN_08000892();\n  }\n  uVar9 = (uint)((ulonglong)uVar17 >> 0x20);\n  uVar11 = (uint)uVar17;\n  iVar8 = uVar7 - unaff_r5;\n  if ((param_3 | param_4 << 0xc) == 0) {\n    uVar7 = (uVar9 ^ param_4) & 0x80000000 | uVar9 & 0xfffff;\n    bVar16 = SCARRY4(iVar8,uVar13 >> 1);\n    uVar9 = iVar8 + (uVar13 >> 1);\n    bVar14 = (int)uVar9 < 0;\n    bVar15 = uVar9 == 0;\n    if (!bVar15 && bVar14 == bVar16) {\n      bVar16 = SBORROW4(uVar13,uVar9);\n      bVar14 = (int)(uVar13 - uVar9) < 0;\n      bVar15 = uVar13 == uVar9;\n    }\n    if (!bVar15 && bVar14 == bVar16) {\n      uVar7 = uVar7 | uVar9 * 0x100000;\n    }\n    if (!bVar15 && bVar14 == bVar16) {\n      return CONCAT44(uVar7,uVar11);\n    }\n    uVar7 = uVar7 | 0x100000;\n    uVar13 = 0;\n    bVar15 = SBORROW4(uVar9,1);\n    uVar9 = uVar9 - 1;\n    bVar14 = uVar9 == 0;\n    uVar3 = uVar9;\n  }\n  else {\n    uVar3 = (param_4 << 0xc) >> 4 | 0x10000000 | param_3 >> 0x18;\n    uVar13 = param_3 << 8;\n    uVar10 = (uVar9 << 0xc) >> 4 | 0x10000000 | uVar11 >> 0x18;\n    uVar11 = uVar11 * 0x100;\n    uVar7 = (uVar9 ^ param_4) & 0x80000000;\n    bVar14 = uVar3 <= uVar10;\n    if (uVar10 == uVar3) {\n      bVar14 = uVar13 <= uVar11;\n    }\n    iVar8 = iVar8 + (uint)bVar14;\n    uVar9 = iVar8 + 0x3fd;\n    if (bVar14 == false) {\n      uVar3 = uVar3 >> 1;\n      uVar13 = (uint)((param_3 >> 0x18 & 1) != 0) << 0x1f | uVar13 >> 1;\n    }\n    uVar12 = uVar11 - uVar13;\n    uVar10 = (uVar10 - uVar3) - (uint)(uVar11 < uVar13);\n    uVar4 = uVar3 >> 1;\n    uVar1 = (uint)((uVar3 & 1) != 0) << 0x1f | uVar13 >> 1;\n    uVar11 = 0x100000;\n    uVar3 = 0x80000;\n    while( true ) {\n      bVar14 = uVar1 <= uVar12;\n      if (uVar4 < uVar10 || uVar10 - uVar4 < (uint)bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar11 = uVar11 | uVar3;\n        uVar10 = (uVar10 - uVar4) - (uint)!bVar14;\n      }\n      uVar5 = uVar4 >> 1;\n      uVar1 = (uint)((uVar4 & 1) != 0) << 0x1f | uVar1 >> 1;\n      bVar15 = uVar1 <= uVar12;\n      bVar14 = uVar10 - uVar5 < (uint)bVar15;\n      uVar13 = uVar10;\n      if (uVar5 < uVar10 || bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar13 = (uVar10 - uVar5) - (uint)!bVar15;\n      }\n      if (uVar5 < uVar10 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 1;\n      }\n      uVar10 = uVar4 >> 2;\n      uVar2 = (uint)((uVar5 & 1) != 0) << 0x1f | uVar1 >> 1;\n      bVar15 = uVar2 <= uVar12;\n      bVar14 = uVar13 - uVar10 < (uint)bVar15;\n      uVar5 = uVar13;\n      if (uVar10 < uVar13 || bVar14) {\n        uVar12 = uVar12 - uVar2;\n        uVar5 = (uVar13 - uVar10) - (uint)!bVar15;\n      }\n      if (uVar10 < uVar13 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 2;\n      }\n      uVar6 = uVar4 >> 3;\n      uVar1 = (uint)((uVar10 & 1) != 0) << 0x1f | uVar2 >> 1;\n      bVar15 = uVar1 <= uVar12;\n      bVar14 = uVar5 - uVar6 < (uint)bVar15;\n      uVar10 = uVar5;\n      if (uVar6 < uVar5 || bVar14) {\n        uVar12 = uVar12 - uVar1;\n        uVar10 = (uVar5 - uVar6) - (uint)!bVar15;\n      }\n      if (uVar6 < uVar5 || bVar14) {\n        uVar11 = uVar11 | uVar3 >> 3;\n      }\n      uVar13 = uVar10 | uVar12;\n      if (uVar13 == 0) break;\n      uVar10 = uVar10 << 4 | uVar12 >> 0x1c;\n      uVar12 = uVar12 << 4;\n      uVar4 = uVar4 & 0xfffffff8 | uVar1 >> 0x1d;\n      uVar1 = (uVar2 >> 1) << 3;\n      uVar3 = uVar3 >> 4;\n      if (uVar3 == 0) {\n        uVar6 = uVar4;\n        if ((uVar7 & 0x100000) != 0) goto LAB_08000842;\n        uVar7 = uVar7 | uVar11;\n        uVar11 = 0;\n        uVar3 = 0x80000000;\n      }\n    }\n    if ((uVar7 & 0x100000) == 0) {\n      uVar7 = uVar7 | uVar11;\n      uVar11 = 0;\n    }\nLAB_08000842:\n    bVar16 = 0xfc < uVar9;\n    bVar15 = SBORROW4(uVar9,0xfd);\n    uVar4 = iVar8 + 0x300;\n    bVar14 = uVar4 == 0;\n    uVar3 = uVar4;\n    if (bVar16 && !bVar14) {\n      bVar16 = 0x6ff < uVar4;\n      bVar15 = SBORROW4(uVar4,0x700);\n      uVar3 = iVar8 - 0x400;\n      bVar14 = uVar4 == 0x700;\n    }\n    if (!bVar16 || bVar14) {\n      bVar14 = uVar6 <= uVar10;\n      if (uVar10 == uVar6) {\n        bVar14 = uVar1 <= uVar12;\n      }\n      if (uVar10 == uVar6 && uVar12 == uVar1) {\n        bVar14 = (uVar11 & 1) != 0;\n      }\n      return CONCAT44(uVar7 + uVar9 * 0x100000 + (uint)CARRY4(uVar11,(uint)bVar14),uVar11 + bVar14);\n    }\n  }\n  if (!bVar14 && (int)uVar3 < 0 == bVar15) {\n    return (ulonglong)(uVar7 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  bVar16 = SCARRY4(uVar9,0x36);\n  bVar14 = (int)(uVar9 + 0x36) < 0;\n  bVar15 = uVar9 == 0xffffffca;\n  if (bVar15 || bVar14 != bVar16) {\n    uVar11 = 0;\n  }\n  if (bVar15 || bVar14 != bVar16) {\n    uVar7 = uVar7 & 0x80000000;\n  }\n  if (bVar15 || bVar14 != bVar16) {\n    return CONCAT44(uVar7,uVar11);\n  }\n  uVar3 = -uVar9;\n  uVar10 = uVar3 - 0x20;\n  if (0x1f < (int)uVar3) {\n    uVar3 = uVar11 >> (uVar10 & 0xff) | uVar7 << (0x20 - uVar10 & 0xff);\n    uVar9 = (uVar7 >> (uVar10 & 0xff) & ~((uVar7 & 0x80000000) >> (uVar10 & 0xff))) -\n            ((int)uVar3 >> 0x1f);\n    if ((uVar13 | uVar11 << (0x20 - uVar10 & 0xff) | uVar3 << 1) == 0) {\n      uVar9 = uVar9 & ~(uVar3 >> 0x1f);\n    }\n    return CONCAT44(uVar7,uVar9) & 0x80000000ffffffff;\n  }\n  iVar8 = uVar3 - 0x14;\n  if (iVar8 != 0 && iVar8 < 0 == SCARRY4(uVar10,0xc)) {\n    uVar9 = 0xc - iVar8;\n    uVar3 = uVar11 << (uVar9 & 0xff);\n    uVar11 = uVar11 >> (0x20 - uVar9 & 0xff) | uVar7 << (uVar9 & 0xff);\n    uVar9 = uVar11 + -((int)uVar3 >> 0x1f);\n    if ((uVar13 | uVar3 << 1) == 0) {\n      uVar9 = uVar9 & ~(uVar3 >> 0x1f);\n    }\n    return CONCAT44((uVar7 & 0x80000000) + (uint)CARRY4(uVar11,-((int)uVar3 >> 0x1f)),uVar9);\n  }\n  uVar10 = uVar11 << (uVar9 + 0x20 & 0xff);\n  uVar11 = uVar11 >> (uVar3 & 0xff) | uVar7 << (uVar9 + 0x20 & 0xff);\n  uVar9 = uVar11 + -((int)uVar10 >> 0x1f);\n  if ((uVar13 | uVar10 << 1) == 0) {\n    uVar9 = uVar9 & ~(uVar10 >> 0x1f);\n  }\n  return CONCAT44((uVar7 & 0x80000000) +\n                  ((uVar7 & 0x7fffffff) >> (uVar3 & 0xff)) +\n                  (uint)CARRY4(uVar11,-((int)uVar10 >> 0x1f)),uVar9);\n}\n\n",
            "renaming": {
                "FUN_08000724": "FUNC_08000724"
            },
            "calling": [
                "FUN_08006d68",
                "FUN_08005c70",
                "FUN_08005900",
                "FUN_08006c0c",
                "FUN_08005bc8",
                "FUN_08006228",
                "FUN_08003330",
                "FUN_08006070"
            ],
            "called": [
                "FUN_08000892"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08000892": {
            "entrypoint": "0x08000892",
            "current_name": "calculate_floating_point_value_08000892",
            "code": "\nulonglong calculateFloatingPointValue_08000892(uint input1,uint input2,uint input3,uint input4)\n\n{\n  uint bit1;\n  uint bit2;\n  uint bit3;\n  uint bit4;\n  uint bit5;\n  bool isZero;\n  \n  bit3 = bit5 & input4 >> 0x14;\n  bit4 = input2;\n  if (bit2 != bit5 || bit3 != bit5) {\n    if (bit2 == bit5) {\n      if (((input1 | input2 << 0xc) == 0) && (input1 = input3, bit4 = input4, bit3 != bit5)\n         ) {\nLAB_08000704:\n        return (ulonglong)((input2 ^ input4) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n    }\n    else if (bit3 == bit5) {\n      input1 = input3;\n      bit4 = input4;\n      if ((input3 | input4 << 0xc) == 0) {\nLAB_080006c8:\n        return (ulonglong)((input2 ^ input4) & 0x80000000) << 0x20;\n      }\n    }\n    else {\n      isZero = (input1 | input2 << 1) == 0;\n      if (!isZero) {\n        isZero = (input3 | input4 << 1) == 0;\n      }\n      if (!isZero) {\n        if (bit2 == 0) {\n          bit4 = input2 & 0x80000000;\n          do {\n            bit1 = input1 & 0x80000000;\n            input1 = input1 << 1;\n            input2 = input2 * 2 + (uint)(bit1 != 0);\n          } while ((input2 & 0x100000) == 0);\n          input2 = input2 | bit4;\n          if (bit3 != 0) {\n            return CONCAT44(input2,input1);\n          }\n        }\n        do {\n          bit4 = input3 & 0x80000000;\n          input3 = input3 << 1;\n          input4 = input4 * 2 + (uint)(bit4 != 0);\n        } while ((input4 & 0x100000) == 0);\n        return CONCAT44(input2,input1);\n      }\n      if ((input1 | input2 << 1) != 0) goto LAB_08000704;\n      if ((input3 | input4 << 1) != 0) goto LAB_080006c8;\n    }\n  }\n  return CONCAT44(bit4,input1) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_08000892": "calculate_floating_point_value_08000892",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "bit1",
                "unaff_r4": "bit2",
                "uVar2": "bit3",
                "uVar3": "bit4",
                "in_r12": "bit5",
                "bVar4": "isZero"
            },
            "calling": [
                "FUN_08000724"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000904": {
            "entrypoint": "0x08000904",
            "current_name": "check_if_parameters_match_08000904",
            "code": "\nuint check_if_parameters_match_08000904(uint first_value,uint second_value,uint third_value,uint fourth_value)\n\n{\n  uint xor_result;\n  bool are_values_zero;\n  bool is_xor_result_negative;\n  \n  if (((int)(second_value << 1) >> 0x15 == -1 || (int)(fourth_value << 1) >> 0x15 == -1) &&\n     ((((int)(second_value << 1) >> 0x15 == -1 && ((first_value | second_value << 0xc) != 0)) ||\n      (((int)(fourth_value << 1) >> 0x15 == -1 && ((third_value | fourth_value << 0xc) != 0)))))) {\n    return 1;\n  }\n  are_values_zero = (first_value | second_value << 1) == 0;\n  if (are_values_zero) {\n    are_values_zero = (third_value | fourth_value << 1) == 0;\n  }\n  if (!are_values_zero) {\n    are_values_zero = second_value == fourth_value;\n  }\n  if (are_values_zero) {\n    are_values_zero = first_value == third_value;\n  }\n  if (!are_values_zero) {\n    xor_result = second_value ^ fourth_value;\n    are_values_zero = xor_result == 0;\n    if (-1 < (int)xor_result) {\n      are_values_zero = second_value == fourth_value;\n    }\n    is_xor_result_negative = -1 < (int)xor_result && fourth_value <= second_value;\n    if (are_values_zero) {\n      is_xor_result_negative = third_value <= first_value;\n    }\n    fourth_value = (int)fourth_value >> 0x1f;\n    if (!is_xor_result_negative) {\n      fourth_value = ~fourth_value;\n    }\n    return fourth_value | 1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08000904": "check_if_parameters_match_08000904",
                "param_1": "first_value",
                "param_2": "second_value",
                "param_3": "third_value",
                "param_4": "fourth_value",
                "uVar1": "xor_result",
                "bVar2": "are_values_zero",
                "bVar3": "is_xor_result_negative"
            },
            "calling": [
                "FUN_08000990"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000980": {
            "entrypoint": "0x08000980",
            "current_name": "run_function_08000980",
            "code": "\nvoid runFunction_08000980(undefined4 input1,undefined4 input2,undefined4 param1,undefined4 param2)\n\n{\n  FUN_08000990(param1,param2,input1,input2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000980": "run_function_08000980",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "param1",
                "param_4": "param2"
            },
            "calling": [
                "FUN_080009f0"
            ],
            "called": [
                "FUN_08000990"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000990": {
            "entrypoint": "0x08000990",
            "current_name": "initialize_08000990",
            "code": "\nundefined4 initialize_08000990(undefined4 input_parameter)\n\n{\n  FUN_08000904();\n  return input_parameter;\n}\n\n",
            "renaming": {
                "FUN_08000990": "initialize_08000990",
                "param_1": "input_parameter"
            },
            "calling": [
                "FUN_08000980",
                "FUN_080009c8",
                "FUN_080009a0",
                "FUN_080009b4"
            ],
            "called": [
                "FUN_08000904"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009a0": {
            "entrypoint": "0x080009a0",
            "current_name": "check_if_initialization_successful_080009a0",
            "code": "\nbool checkIfInitializationSuccessful_080009a0(void)\n\n{\n  char isInitialized;\n  \n  FUN_08000990();\n  return isInitialized != '\\0';\n}\n\n",
            "renaming": {
                "FUN_080009a0": "check_if_initialization_successful_080009a0",
                "in_ZR": "isInitialized"
            },
            "calling": [
                "FUN_08005900"
            ],
            "called": [
                "FUN_08000990"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009b4": {
            "entrypoint": "0x080009b4",
            "current_name": "is_end_of_string_080009b4",
            "code": "\nbool is_end_of_string_080009b4(void)\n\n{\n  char current_character;\n  \n  FUN_08000990();\n  return current_character == '\\0';\n}\n\n",
            "renaming": {
                "FUN_080009b4": "is_end_of_string_080009b4",
                "in_CY": "current_character"
            },
            "calling": [
                "FUN_08005900",
                "FUN_08005bc8"
            ],
            "called": [
                "FUN_08000990"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009c8": {
            "entrypoint": "0x080009c8",
            "current_name": "check_cy_and_zr_flags_080009c8",
            "code": "\nbool check_CY_and_ZR_flags_080009c8(void)\n\n{\n  undefined zero_flag;\n  undefined carry_flag;\n  \n  FUN_08000990();\n  return !(bool)carry_flag || (bool)zero_flag;\n}\n\n",
            "renaming": {
                "FUN_080009c8": "check_cy_and_zr_flags_080009c8",
                "in_ZR": "zero_flag",
                "in_CY": "carry_flag"
            },
            "calling": [
                "FUN_08006228"
            ],
            "called": [
                "FUN_08000990"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009f0": {
            "entrypoint": "0x080009f0",
            "current_name": "check_if_empty_080009f0",
            "code": "\nbool check_if_empty_080009f0(void)\n\n{\n  char input_character;\n  \n  FUN_08000980();\n  return input_character == '\\0';\n}\n\n",
            "renaming": {
                "FUN_080009f0": "check_if_empty_080009f0",
                "in_CY": "input_character"
            },
            "calling": [
                "FUN_08006d68",
                "FUN_08005c70",
                "FUN_08005854",
                "FUN_08006228"
            ],
            "called": [
                "FUN_08000980"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a04": {
            "entrypoint": "0x08000a04",
            "current_name": "check_parameters_08000a04",
            "code": "\nundefined4 checkParameters_08000a04(uint input1,int input2,uint input3,int input4)\n\n{\n  if ((((input2 << 1) >> 0x15 != -1) || ((input1 | input2 << 0xc) == 0)) &&\n     (((input4 << 1) >> 0x15 != -1 || ((input3 | input4 << 0xc) == 0)))) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08000a04": "check_parameters_08000a04",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4"
            },
            "calling": [
                "FUN_08005900",
                "FUN_08005854",
                "FUN_08005bc8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a30": {
            "entrypoint": "0x08000a30",
            "current_name": "calculate_float_08000a30",
            "code": "\nuint calculateFloat_08000a30(uint inputFloat,uint multiplier)\n\n{\n  uint result;\n  uint twiceMultiplier;\n  uint adjustedMultiplier;\n  uint adjustedMultiplier2;\n  bool isZero;\n  bool isLessThan;\n  \n  twiceMultiplier = multiplier * 2;\n  isLessThan = twiceMultiplier < 0x70000000;\n  adjustedMultiplier = twiceMultiplier + 0x90000000;\n  result = adjustedMultiplier;\n  if (!isLessThan) {\n    adjustedMultiplier2 = twiceMultiplier + 0x8fe00000;\n    result = adjustedMultiplier2;\n  }\n  isZero = result == 0;\n  if (!isLessThan && adjustedMultiplier >= 0x200000) {\n    isZero = adjustedMultiplier2 == 0x1fc00000;\n  }\n  if (((isLessThan || adjustedMultiplier < 0x200000) || 0x1fc00000 < adjustedMultiplier2) || isZero) {\n    if ((multiplier & 0x40000000) != 0) {\n      if (((int)twiceMultiplier >> 0x15 == -1) && ((inputFloat | multiplier << 0xc) != 0)) {\n        return 0x7fc00000;\n      }\n      return multiplier & 0x80000000 | 0x7f800000;\n    }\n    if ((int)(twiceMultiplier + 0x92e00000) < 0 != SCARRY4(adjustedMultiplier,0x2e00000)) {\n      return multiplier & 0x80000000;\n    }\n    twiceMultiplier = 0x18 - (twiceMultiplier + 0x92e00000 >> 0x15);\n    result = inputFloat >> (twiceMultiplier & 0xff);\n    if (inputFloat << (0x20 - twiceMultiplier & 0xff) != 0) {\n      result = result | 1;\n    }\n    adjustedMultiplier = multiplier & 0x1fffff | 0x100000;\n    inputFloat = result | adjustedMultiplier << (0x20 - twiceMultiplier & 0xff);\n    adjustedMultiplier = (adjustedMultiplier >> (twiceMultiplier & 0xff)) << 1;\n  }\n  result = (multiplier & 0x80000000 | inputFloat >> 0x1d) + adjustedMultiplier * 4 + (uint)(0x7fffffff < inputFloat * 8);\n  if (inputFloat * 8 == 0x80000000) {\n    result = result & 0xfffffffe;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08000a30": "calculate_float_08000a30",
                "param_1": "inputFloat",
                "param_2": "multiplier",
                "uVar1": "result",
                "uVar2": "twiceMultiplier",
                "uVar3": "adjustedMultiplier",
                "in_r12": "adjustedMultiplier2",
                "bVar4": "isZero",
                "bVar5": "isLessThan"
            },
            "calling": [
                "FUN_0800411c",
                "FUN_08003330"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000ad8": {
            "entrypoint": "0x08000ad8",
            "current_name": "calculate_improved_08000ad8",
            "code": "\nuint calculateImproved_08000ad8(uint input1,uint input2,undefined4 input3,uint input4)\n\n{\n  int shiftedInput1;\n  int shiftedInput2;\n  uint temp1;\n  uint temp2;\n  uint shiftedTemp1;\n  uint shiftedTemp2;\n  uint difference;\n  bool isMatch;\n  \n  temp1 = input2 ^ 0x80000000;\n  shiftedTemp1 = input1 << 1;\n  isMatch = shiftedTemp1 == 0;\n  if (!isMatch) {\n    input4 = input2 << 1;\n    isMatch = input4 == 0;\n  }\n  if (!isMatch) {\n    isMatch = shiftedTemp1 == input4;\n  }\n  shiftedInput1 = (int)shiftedTemp1 >> 0x18;\n  if (!isMatch) {\n    isMatch = shiftedInput1 == -1;\n  }\n  if (!isMatch) {\n    isMatch = (int)input4 >> 0x18 == -1;\n  }\n  if (isMatch) {\n    shiftedInput2 = (int)(input2 << 1) >> 0x18;\n    if (shiftedInput1 == -1 || shiftedInput2 == -1) {\n      shiftedTemp1 = temp1;\n      if (shiftedInput1 == -1) {\n        shiftedTemp1 = input1;\n      }\n      if (shiftedInput1 != -1 || shiftedInput2 != -1) {\n        temp1 = shiftedTemp1;\n      }\n      isMatch = (shiftedTemp1 & 0x7fffff) == 0;\n      if (isMatch) {\n        isMatch = (temp1 & 0x7fffff) == 0;\n      }\n      if (isMatch) {\n        isMatch = shiftedTemp1 == temp1;\n      }\n      if (!isMatch) {\n        shiftedTemp1 = shiftedTemp1 | 0x400000;\n      }\n      return shiftedTemp1;\n    }\n    if (((input1 ^ temp1) & 0x7fffffff) != 0) {\n      if (shiftedTemp1 == 0) {\n        input1 = temp1;\n      }\n      return input1;\n    }\n    if (input1 != temp1) {\n      return 0;\n    }\n    if ((shiftedTemp1 & 0xff000000) == 0) {\n      temp1 = input1 << 1;\n      if ((input1 & 0x80000000) != 0) {\n        temp1 = temp1 | 0x80000000;\n      }\n      return temp1;\n    }\n    if (shiftedTemp1 < 0xfe000000) {\n      return input1 + 0x800000;\n    }\n    input1 = input1 & 0x80000000;\nLAB_08000c12:\n    return input1 | 0x7f800000;\n  }\n  shiftedTemp1 = shiftedTemp1 >> 0x18;\n  input4 = input4 >> 0x18;\n  difference = input4 - shiftedTemp1;\n  isMatch = difference != 0;\n  shiftedTemp2 = shiftedTemp1;\n  if (isMatch && shiftedTemp1 <= input4) {\n    shiftedTemp2 = shiftedTemp1 + difference;\n  }\n  if (isMatch && shiftedTemp1 <= input4) {\n    temp1 = temp1 ^ input1;\n  }\n  if (isMatch && shiftedTemp1 <= input4) {\n    input1 = input1 ^ temp1;\n  }\n  if (isMatch && shiftedTemp1 <= input4) {\n    temp1 = temp1 ^ input1;\n  }\n  if (input4 < shiftedTemp1) {\n    difference = -difference;\n  }\n  if (0x19 < difference) {\n    return input1;\n  }\n  shiftedTemp1 = input1 & 0xffffff | 0x800000;\n  if ((input1 & 0x80000000) != 0) {\n    shiftedTemp1 = -shiftedTemp1;\n  }\n  temp2 = temp1 & 0xffffff | 0x800000;\n  if ((temp1 & 0x80000000) != 0) {\n    temp2 = -temp2;\n  }\n  if (shiftedTemp2 == difference) {\n    temp2 = temp2 ^ 0x800000;\n    if (shiftedTemp2 == 0) {\n      shiftedTemp1 = shiftedTemp1 ^ 0x800000;\n      shiftedTemp2 = 1;\n    }\n    else {\n      difference = difference - 1;\n    }\n  }\n  shiftedTemp1 = shiftedTemp1 + ((int)temp2 >> (difference & 0xff));\n  temp2 = temp2 << (0x20 - difference & 0xff);\n  input1 = shiftedTemp1 & 0x80000000;\n  if ((int)shiftedTemp1 < 0) {\n    isMatch = temp2 != 0;\n    temp2 = -temp2;\n    shiftedTemp1 = -shiftedTemp1 - (uint)isMatch;\n  }\n  if (shiftedTemp1 < 0x800000) {\n    temp1 = temp2 & 0x80000000;\n    temp2 = temp2 << 1;\n    shiftedTemp1 = shiftedTemp1 * 2 + (uint)(temp1 != 0);\n    temp1 = shiftedTemp2 - 2;\n    if ((shiftedTemp1 & 0x800000) == 0) {\n      difference = LZCOUNT(shiftedTemp1) - 8;\n      shiftedTemp1 = shiftedTemp1 << (difference & 0xff);\n      if ((int)temp1 < (int)difference) {\n        shiftedTemp1 = shiftedTemp1 >> (-(temp1 - difference) & 0xff);\n      }\n      else {\n        shiftedTemp1 = shiftedTemp1 + (temp1 - difference) * 0x800000;\n      }\n      return shiftedTemp1 | input1;\n    }\n  }\n  else {\n    temp1 = shiftedTemp2 - 1;\n    if (0xffffff < shiftedTemp1) {\n      temp1 = shiftedTemp1 & 1;\n      shiftedTemp1 = shiftedTemp1 >> 1;\n      temp2 = (uint)(temp1 != 0) << 0x1f | temp2 >> 1;\n      temp1 = shiftedTemp2;\n      if (0xfd < shiftedTemp2) goto LAB_08000c12;\n    }\n  }\n  shiftedTemp1 = shiftedTemp1 + temp1 * 0x800000 + (uint)(0x7fffffff < temp2);\n  if (temp2 == 0x80000000) {\n    shiftedTemp1 = shiftedTemp1 & 0xfffffffe;\n  }\n  return shiftedTemp1 | input1;\n}\n\n",
            "renaming": {
                "FUN_08000ad8": "calculate_improved_08000ad8",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "shiftedInput1",
                "iVar2": "shiftedInput2",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "uVar5": "shiftedTemp1",
                "uVar6": "shiftedTemp2",
                "uVar7": "difference",
                "bVar8": "isMatch"
            },
            "calling": [
                "FUN_0800426c",
                "FUN_08002ee8",
                "FUN_08002d88",
                "FUN_08003330",
                "FUN_0800483c",
                "FUN_08002bf0",
                "FUN_08002ec0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000adc": {
            "entrypoint": "0x08000adc",
            "current_name": "calculate_floating_point_08000adc",
            "code": "\nuint calculateFloatingPoint_08000adc(uint exponent1,uint exponent2,undefined4 bits1,uint bits2)\n\n{\n  int shiftedExp1;\n  int shiftedExp2;\n  uint fraction1;\n  uint fraction2;\n  uint leadingBitCount;\n  uint difference;\n  bool isConditionMet;\n  \n  fraction2 = exponent1 << 1;\n  isConditionMet = fraction2 == 0;\n  if (!isConditionMet) {\n    bits2 = exponent2 << 1;\n    isConditionMet = bits2 == 0;\n  }\n  if (!isConditionMet) {\n    isConditionMet = fraction2 == bits2;\n  }\n  shiftedExp1 = (int)fraction2 >> 0x18;\n  if (!isConditionMet) {\n    isConditionMet = shiftedExp1 == -1;\n  }\n  if (!isConditionMet) {\n    isConditionMet = (int)bits2 >> 0x18 == -1;\n  }\n  if (isConditionMet) {\n    shiftedExp2 = (int)(exponent2 << 1) >> 0x18;\n    if (shiftedExp1 == -1 || shiftedExp2 == -1) {\n      fraction2 = exponent2;\n      if (shiftedExp1 == -1) {\n        fraction2 = exponent1;\n      }\n      if (shiftedExp1 != -1 || shiftedExp2 != -1) {\n        exponent2 = fraction2;\n      }\n      isConditionMet = (fraction2 & 0x7fffff) == 0;\n      if (isConditionMet) {\n        isConditionMet = (exponent2 & 0x7fffff) == 0;\n      }\n      if (isConditionMet) {\n        isConditionMet = fraction2 == exponent2;\n      }\n      if (!isConditionMet) {\n        fraction2 = fraction2 | 0x400000;\n      }\n      return fraction2;\n    }\n    if (((exponent1 ^ exponent2) & 0x7fffffff) != 0) {\n      if (fraction2 == 0) {\n        exponent1 = exponent2;\n      }\n      return exponent1;\n    }\n    if (exponent1 != exponent2) {\n      return 0;\n    }\n    if ((fraction2 & 0xff000000) == 0) {\n      fraction2 = exponent1 << 1;\n      if ((exponent1 & 0x80000000) != 0) {\n        fraction2 = fraction2 | 0x80000000;\n      }\n      return fraction2;\n    }\n    if (fraction2 < 0xfe000000) {\n      return exponent1 + 0x800000;\n    }\n    exponent1 = exponent1 & 0x80000000;\nLAB_08000c12:\n    return exponent1 | 0x7f800000;\n  }\n  fraction2 = fraction2 >> 0x18;\n  bits2 = bits2 >> 0x18;\n  difference = bits2 - fraction2;\n  isConditionMet = difference != 0;\n  leadingBitCount = fraction2;\n  if (isConditionMet && fraction2 <= bits2) {\n    leadingBitCount = fraction2 + difference;\n  }\n  if (isConditionMet && fraction2 <= bits2) {\n    exponent2 = exponent2 ^ exponent1;\n  }\n  if (isConditionMet && fraction2 <= bits2) {\n    exponent1 = exponent1 ^ exponent2;\n  }\n  if (isConditionMet && fraction2 <= bits2) {\n    exponent2 = exponent2 ^ exponent1;\n  }\n  if (bits2 < fraction2) {\n    difference = -difference;\n  }\n  if (0x19 < difference) {\n    return exponent1;\n  }\n  fraction2 = exponent1 & 0xffffff | 0x800000;\n  if ((exponent1 & 0x80000000) != 0) {\n    fraction2 = -fraction2;\n  }\n  fraction1 = exponent2 & 0xffffff | 0x800000;\n  if ((exponent2 & 0x80000000) != 0) {\n    fraction1 = -fraction1;\n  }\n  if (leadingBitCount == difference) {\n    fraction1 = fraction1 ^ 0x800000;\n    if (leadingBitCount == 0) {\n      fraction2 = fraction2 ^ 0x800000;\n      leadingBitCount = 1;\n    }\n    else {\n      difference = difference - 1;\n    }\n  }\n  fraction2 = fraction2 + ((int)fraction1 >> (difference & 0xff));\n  fraction1 = fraction1 << (0x20 - difference & 0xff);\n  exponent1 = fraction2 & 0x80000000;\n  if ((int)fraction2 < 0) {\n    isConditionMet = fraction1 != 0;\n    fraction1 = -fraction1;\n    fraction2 = -fraction2 - (uint)isConditionMet;\n  }\n  if (fraction2 < 0x800000) {\n    difference = fraction1 & 0x80000000;\n    fraction1 = fraction1 << 1;\n    fraction2 = fraction2 * 2 + (uint)(difference != 0);\n    difference = leadingBitCount - 2;\n    if ((fraction2 & 0x800000) == 0) {\n      leadingBitCount = LZCOUNT(fraction2) - 8;\n      fraction2 = fraction2 << (leadingBitCount & 0xff);\n      if ((int)difference < (int)leadingBitCount) {\n        fraction2 = fraction2 >> (-(difference - leadingBitCount) & 0xff);\n      }\n      else {\n        fraction2 = fraction2 + (difference - leadingBitCount) * 0x800000;\n      }\n      return fraction2 | exponent1;\n    }\n  }\n  else {\n    difference = leadingBitCount - 1;\n    if (0xffffff < fraction2) {\n      difference = fraction2 & 1;\n      fraction2 = fraction2 >> 1;\n      fraction1 = (uint)(difference != 0) << 0x1f | fraction1 >> 1;\n      difference = leadingBitCount;\n      if (0xfd < leadingBitCount) goto LAB_08000c12;\n    }\n  }\n  fraction2 = fraction2 + difference * 0x800000 + (uint)(0x7fffffff < fraction1);\n  if (fraction1 == 0x80000000) {\n    fraction2 = fraction2 & 0xfffffffe;\n  }\n  return fraction2 | exponent1;\n}\n\n",
            "renaming": {
                "FUN_08000adc": "calculate_floating_point_08000adc",
                "param_1": "exponent1",
                "param_2": "exponent2",
                "param_3": "bits1",
                "param_4": "bits2",
                "iVar1": "shiftedExp1",
                "iVar2": "shiftedExp2",
                "uVar3": "fraction1",
                "uVar4": "fraction2",
                "uVar5": "leadingBitCount",
                "uVar6": "difference",
                "bVar7": "isConditionMet"
            },
            "calling": [
                "FUN_0800426c",
                "FUN_08004a84",
                "FUN_08002ee8",
                "FUN_0800411c",
                "FUN_08002cb0",
                "FUN_08003330",
                "FUN_0800483c",
                "FUN_08002ec0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000c3c": {
            "entrypoint": "0x08000c3c",
            "current_name": "calculate_hash_08000c3c",
            "code": "\nuint calculateHash_08000c3c(uint inputValue)\n\n{\n  uint leadingZeroBits;\n  uint shiftAmount;\n  int constant;\n  uint tempValue;\n  \n  if (inputValue == 0) {\n    return 0;\n  }\n  leadingZeroBits = LZCOUNT(inputValue);\n  shiftAmount = leadingZeroBits - 8;\n  constant = shiftAmount * -0x800000 + 0x4a800000;\n  if (7 < leadingZeroBits) {\n    tempValue = 0 << (shiftAmount & 0xff);\n    leadingZeroBits = constant + (inputValue << (shiftAmount & 0xff)) +\n            (0U >> (0x20 - shiftAmount & 0xff)) + (uint)(0x7fffffff < tempValue);\n    if (tempValue == 0x80000000) {\n      leadingZeroBits = leadingZeroBits & 0xfffffffe;\n    }\n    return leadingZeroBits;\n  }\n  shiftAmount = inputValue << leadingZeroBits + 0x18;\n  leadingZeroBits = constant + ((inputValue >> (0x20 - (leadingZeroBits + 0x18) & 0xff)) - ((int)shiftAmount >> 0x1f));\n  if ((shiftAmount & 0x7fffffff) == 0) {\n    leadingZeroBits = leadingZeroBits & ~(shiftAmount >> 0x1f);\n  }\n  return leadingZeroBits;\n}\n\n",
            "renaming": {
                "FUN_08000c3c": "calculate_hash_08000c3c",
                "param_1": "inputValue",
                "uVar1": "leadingZeroBits",
                "uVar2": "shiftAmount",
                "iVar3": "constant",
                "uVar4": "tempValue"
            },
            "calling": [
                "FUN_08002f28"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000c44": {
            "entrypoint": "0x08000c44",
            "current_name": "calculate_intermediate_value_08000c44",
            "code": "\nuint calculateIntermediateValue_08000c44(uint inputValue)\n\n{\n  uint leadingZeros;\n  uint shiftAmount;\n  uint signBit;\n  int intermediateResult;\n  \n  signBit = inputValue & 0x80000000;\n  if ((int)signBit < 0) {\n    inputValue = -inputValue;\n  }\n  if (inputValue == 0) {\n    return 0;\n  }\n  leadingZeros = LZCOUNT(inputValue);\n  shiftAmount = leadingZeros - 8;\n  intermediateResult = ((signBit | 0x4b000000) - 0x800000) + shiftAmount * -0x800000;\n  if (7 < leadingZeros) {\n    leadingZeros = 0 << (shiftAmount & 0xff);\n    signBit = intermediateResult + (inputValue << (shiftAmount & 0xff)) +\n            (0U >> (0x20 - shiftAmount & 0xff)) + (uint)(0x7fffffff < leadingZeros);\n    if (leadingZeros == 0x80000000) {\n      signBit = signBit & 0xfffffffe;\n    }\n    return signBit;\n  }\n  shiftAmount = inputValue << leadingZeros + 0x18;\n  signBit = intermediateResult + ((inputValue >> (0x20 - (leadingZeros + 0x18) & 0xff)) - ((int)shiftAmount >> 0x1f));\n  if ((shiftAmount & 0x7fffffff) == 0) {\n    signBit = signBit & ~(shiftAmount >> 0x1f);\n  }\n  return signBit;\n}\n\n",
            "renaming": {
                "FUN_08000c44": "calculate_intermediate_value_08000c44",
                "param_1": "inputValue",
                "uVar1": "leadingZeros",
                "uVar2": "shiftAmount",
                "uVar3": "signBit",
                "iVar4": "intermediateResult"
            },
            "calling": [
                "FUN_08002b48",
                "FUN_0800411c",
                "FUN_08002d88",
                "FUN_08002cb0",
                "FUN_0800483c",
                "FUN_08002bf0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000cec": {
            "entrypoint": "0x08000cec",
            "current_name": "calculate_floating_point_08000cec",
            "code": "\nuint calculateFloatingPoint_08000cec(uint firstValue,uint secondValue,undefined4 thirdValue,uint fourthValue)\n\n{\n  longlong product;\n  uint result;\n  uint firstValueBits;\n  int sum;\n  int diff;\n  uint productLower;\n  int tempDiff;\n  uint finalResult;\n  bool isZero;\n  bool isNegative;\n  \n  firstValueBits = firstValue >> 0x17 & 0xff;\n  isZero = firstValueBits == 0;\n  if (!isZero) {\n    fourthValue = secondValue >> 0x17 & 0xff;\n    isZero = fourthValue == 0;\n  }\n  if (!isZero) {\n    isZero = firstValueBits == 0xff;\n  }\n  if (!isZero) {\n    isZero = fourthValue == 0xff;\n  }\n  if (isZero) {\n    fourthValue = secondValue >> 0x17 & 0xff;\n    if (firstValueBits == 0xff || fourthValue == 0xff) {\n      isZero = firstValue == 0 || firstValue == 0x80000000;\n      result = secondValue;\n      if (firstValue != 0 && firstValue != 0x80000000) {\n        isZero = secondValue == 0;\n        result = firstValue;\n      }\n      if (!isZero) {\n        isZero = secondValue == 0x80000000;\n      }\n      finalResult = result;\n      if (((isZero) || ((firstValueBits == 0xff && ((result & 0x7fffff) != 0)))) ||\n         ((fourthValue == 0xff && (finalResult = secondValue, (secondValue & 0x7fffff) != 0)))) {\n        return finalResult | 0x7fc00000;\n      }\n      result = result ^ secondValue;\n      goto LAB_08000e3c;\n    }\n    isZero = (firstValue & 0x7fffffff) == 0;\n    if (!isZero) {\n      isZero = (secondValue & 0x7fffffff) == 0;\n    }\n    if (isZero) {\n      return (firstValue ^ secondValue) & 0x80000000;\n    }\n    isZero = firstValueBits == 0;\n    result = firstValue & 0x80000000;\n    while( true ) {\n      if (isZero) {\n        firstValue = firstValue << 1;\n        isZero = (firstValue & 0x800000) == 0;\n      }\n      if (!isZero) break;\n      firstValueBits = firstValueBits - 1;\n    }\n    firstValue = firstValue | result;\n    isZero = fourthValue == 0;\n    result = secondValue & 0x80000000;\n    while( true ) {\n      if (isZero) {\n        secondValue = secondValue << 1;\n        isZero = (secondValue & 0x800000) == 0;\n      }\n      if (!isZero) break;\n      fourthValue = fourthValue - 1;\n    }\n    secondValue = secondValue | result;\n  }\n  sum = firstValueBits + fourthValue;\n  finalResult = firstValue ^ secondValue;\n  firstValueBits = firstValue << 9;\n  isZero = firstValueBits == 0;\n  if (!isZero) {\n    secondValue = secondValue << 9;\n    isZero = secondValue == 0;\n  }\n  if (isZero) {\n    if (firstValueBits == 0) {\n      secondValue = secondValue << 9;\n    }\n    result = finalResult & 0x80000000 | firstValue & 0x7fffff | secondValue >> 9;\n    isNegative = SBORROW4(sum,0x7f);\n    diff = sum + -0x7f;\n    isZero = diff == 0;\n    tempDiff = diff;\n    if (!isZero && 0x7e < sum) {\n      isNegative = SBORROW4(0xff,diff);\n      tempDiff = 0xff - diff;\n      isZero = diff == 0xff;\n    }\n    if (!isZero && tempDiff < 0 == isNegative) {\n      result = result | diff * 0x800000;\n    }\n    if (!isZero && tempDiff < 0 == isNegative) {\n      return result;\n    }\n    result = result | 0x800000;\n    productLower = 0;\n    isNegative = SBORROW4(diff,1);\n    finalResult = sum - 0x80;\n    isZero = finalResult == 0;\n    firstValueBits = finalResult;\n  }\n  else {\n    product = (ulonglong)(firstValueBits >> 5 | 0x8000000) * (ulonglong)(secondValue >> 5 | 0x8000000);\n    productLower = (uint)product;\n    result = (uint)((ulonglong)product >> 0x20);\n    isZero = result < 0x800000;\n    if (isZero) {\n      result = result << 1;\n    }\n    if (isZero) {\n      result = result | productLower >> 0x1f;\n      productLower = productLower << 1;\n    }\n    result = finalResult & 0x80000000 | result;\n    finalResult = (sum + -0x7f) - (uint)isZero;\n    isNegative = SBORROW4(finalResult,0xfd);\n    isZero = finalResult == 0xfd;\n    firstValueBits = finalResult - 0xfd;\n    if (finalResult < 0xfe) {\n      result = result + finalResult * 0x800000 + (uint)(0x7fffffff < productLower);\n      if (productLower == 0x80000000) {\n        result = result & 0xfffffffe;\n      }\n      return result;\n    }\n  }\n  if (isZero || (int)firstValueBits < 0 != isNegative) {\n    isZero = (int)(finalResult + 0x19) < 0;\n    if (finalResult == 0xffffffe7 || isZero != SCARRY4(finalResult,0x19)) {\n      result = result & 0x80000000;\n    }\n    if (finalResult != 0xffffffe7 && isZero == SCARRY4(finalResult,0x19)) {\n      firstValueBits = (result << 1) >> (-finalResult & 0xff);\n      finalResult = result << (finalResult + 0x20 & 0xff);\n      firstValueBits = ((uint)((result & 0x80000000) != 0) << 0x1f | firstValueBits >> 1) + (uint)((byte)firstValueBits & 1);\n      if ((productLower | finalResult << 1) == 0) {\n        firstValueBits = firstValueBits & ~(finalResult >> 0x1f);\n      }\n      return firstValueBits;\n    }\n    return result;\n  }\nLAB_08000e3c:\n  return result & 0x80000000 | 0x7f800000;\n}\n\n",
            "renaming": {
                "FUN_08000cec": "calculate_floating_point_08000cec",
                "param_1": "firstValue",
                "param_2": "secondValue",
                "param_3": "thirdValue",
                "param_4": "fourthValue",
                "lVar1": "product",
                "uVar2": "result",
                "uVar3": "firstValueBits",
                "iVar4": "sum",
                "iVar5": "diff",
                "uVar6": "productLower",
                "iVar7": "tempDiff",
                "uVar8": "finalResult",
                "bVar9": "isZero",
                "bVar10": "isNegative"
            },
            "calling": [
                "FUN_08004a30",
                "FUN_08002b48",
                "FUN_08004a84",
                "FUN_08002d88",
                "FUN_08002cb0",
                "FUN_08003330",
                "FUN_0800483c",
                "FUN_08002f28",
                "FUN_08002bf0",
                "FUN_08002ec0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000e54": {
            "entrypoint": "0x08000e54",
            "current_name": "calculate_floating_point_08000e54",
            "code": "\nuint calculateFloatingPoint_08000e54(uint num1,uint num2,undefined4 bits,uint exponent)\n\n{\n  uint normalizedNum1;\n  uint normalizedNum2;\n  int exponentDiff;\n  uint tempExponent;\n  int adjustedExponent;\n  uint result;\n  bool condition;\n  bool tempCondition;\n  bool tempCondition2;\n  \n  normalizedNum2 = num1 >> 0x17 & 0xff;\n  condition = normalizedNum2 == 0;\n  if (!condition) {\n    exponent = num2 >> 0x17 & 0xff;\n    condition = exponent == 0;\n  }\n  if (!condition) {\n    condition = normalizedNum2 == 0xff;\n  }\n  if (!condition) {\n    condition = exponent == 0xff;\n  }\n  if (condition) {\n    exponent = num2 >> 0x17 & 0xff;\n    result = num1;\n    if (normalizedNum2 == 0xff) {\n      if (((num1 & 0x7fffff) != 0) || (result = num2, exponent == 0xff)) {\nLAB_08000e4a:\n        return result | 0x7fc00000;\n      }\n    }\n    else {\n      if (exponent == 0xff) {\n        result = num2;\n        if ((num2 & 0x7fffff) == 0) {\nLAB_08000e00:\n          return (num1 ^ num2) & 0x80000000;\n        }\n        goto LAB_08000e4a;\n      }\n      condition = (num1 & 0x7fffffff) == 0;\n      if (!condition) {\n        condition = (num2 & 0x7fffffff) == 0;\n      }\n      if (!condition) {\n        condition = normalizedNum2 == 0;\n        result = num1 & 0x80000000;\n        while( true ) {\n          if (condition) {\n            num1 = num1 << 1;\n            condition = (num1 & 0x800000) == 0;\n          }\n          if (!condition) break;\n          normalizedNum2 = normalizedNum2 - 1;\n        }\n        num1 = num1 | result;\n        condition = exponent == 0;\n        result = num2 & 0x80000000;\n        while( true ) {\n          if (condition) {\n            num2 = num2 << 1;\n            condition = (num2 & 0x800000) == 0;\n          }\n          if (!condition) break;\n          exponent = exponent - 1;\n        }\n        num2 = num2 | result;\n        goto LAB_08000e6c;\n      }\n      if ((num1 & 0x7fffffff) == 0) {\n        if ((num2 & 0x7fffffff) != 0) goto LAB_08000e00;\n        goto LAB_08000e4a;\n      }\n    }\n    num1 = num1 ^ num2;\n  }\n  else {\nLAB_08000e6c:\n    exponentDiff = normalizedNum2 - exponent;\n    if (num2 << 9 == 0) {\n      num1 = (num1 ^ num2) & 0x80000000 | num1 & 0x7fffff;\n      tempCondition2 = SCARRY4(exponentDiff,0x7f);\n      adjustedExponent = exponentDiff + 0x7f;\n      condition = adjustedExponent < 0;\n      tempCondition = adjustedExponent == 0;\n      if (!tempCondition && condition == tempCondition2) {\n        tempCondition2 = SBORROW4(0xff,adjustedExponent);\n        condition = 0xff - adjustedExponent < 0;\n        tempCondition = adjustedExponent == 0xff;\n      }\n      if (!tempCondition && condition == tempCondition2) {\n        num1 = num1 | adjustedExponent * 0x800000;\n      }\n      if (!tempCondition && condition == tempCondition2) {\n        return num1;\n      }\n      num1 = num1 | 0x800000;\n      normalizedNum2 = 0;\n      tempCondition = SBORROW4(adjustedExponent,1);\n      tempExponent = exponentDiff + 0x7e;\n      condition = tempExponent == 0;\n      result = tempExponent;\n    }\n    else {\n      normalizedNum1 = (num2 << 9) >> 4 | 0x10000000;\n      normalizedNum2 = (num1 << 9) >> 4 | 0x10000000;\n      num1 = (num1 ^ num2) & 0x80000000;\n      condition = normalizedNum1 <= normalizedNum2;\n      if (!condition) {\n        normalizedNum2 = normalizedNum2 << 1;\n      }\n      tempExponent = exponentDiff + 0x7d + (uint)condition;\n      result = 0x800000;\n      do {\n        if (normalizedNum1 <= normalizedNum2) {\n          normalizedNum2 = normalizedNum2 - normalizedNum1;\n          num1 = num1 | result;\n        }\n        condition = normalizedNum1 >> 1 <= normalizedNum2;\n        if (condition) {\n          normalizedNum2 = normalizedNum2 - (normalizedNum1 >> 1);\n        }\n        if (condition) {\n          num1 = num1 | result >> 1;\n        }\n        condition = normalizedNum1 >> 2 <= normalizedNum2;\n        if (condition) {\n          normalizedNum2 = normalizedNum2 - (normalizedNum1 >> 2);\n        }\n        if (condition) {\n          num1 = num1 | result >> 2;\n        }\n        condition = normalizedNum1 >> 3 <= normalizedNum2;\n        if (condition) {\n          normalizedNum2 = normalizedNum2 - (normalizedNum1 >> 3);\n        }\n        if (condition) {\n          num1 = num1 | result >> 3;\n        }\n        normalizedNum2 = normalizedNum2 * 0x10;\n        condition = normalizedNum2 == 0;\n        if (!condition) {\n          result = result >> 4;\n          condition = result == 0;\n        }\n      } while (!condition);\n      tempCondition = SBORROW4(tempExponent,0xfd);\n      condition = tempExponent == 0xfd;\n      result = tempExponent - 0xfd;\n      if (tempExponent < 0xfe) {\n        num1 = num1 + tempExponent * 0x800000 + (uint)(normalizedNum1 <= normalizedNum2);\n        if (normalizedNum2 - normalizedNum1 == 0) {\n          num1 = num1 & 0xfffffffe;\n        }\n        return num1;\n      }\n    }\n    if (condition || (int)result < 0 != tempCondition) {\n      condition = (int)(tempExponent + 0x19) < 0;\n      if (tempExponent == 0xffffffe7 || condition != SCARRY4(tempExponent,0x19)) {\n        num1 = num1 & 0x80000000;\n      }\n      if (tempExponent == 0xffffffe7 || condition != SCARRY4(tempExponent,0x19)) {\n        return num1;\n      }\n      result = (num1 << 1) >> (-tempExponent & 0xff);\n      tempExponent = num1 << (tempExponent + 0x20 & 0xff);\n      result = ((uint)((num1 & 0x80000000) != 0) << 0x1f | result >> 1) + (uint)((byte)result & 1);\n      if ((normalizedNum2 | tempExponent << 1) == 0) {\n        result = result & ~(tempExponent >> 0x1f);\n      }\n      return result;\n    }\n  }\n  return num1 & 0x80000000 | 0x7f800000;\n}\n\n",
            "renaming": {
                "FUN_08000e54": "calculate_floating_point_08000e54",
                "param_1": "num1",
                "param_2": "num2",
                "param_3": "bits",
                "param_4": "exponent",
                "uVar1": "normalizedNum1",
                "uVar2": "normalizedNum2",
                "iVar3": "exponentDiff",
                "uVar4": "tempExponent",
                "iVar5": "adjustedExponent",
                "uVar6": "result",
                "bVar7": "condition",
                "bVar8": "tempCondition",
                "bVar9": "tempCondition2"
            },
            "calling": [
                "FUN_0800411c",
                "FUN_08003330",
                "FUN_0800483c",
                "FUN_08002f28"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000f9c": {
            "entrypoint": "0x08000f9c",
            "current_name": "calculate_param_result_08000f9c",
            "code": "\nuint calculate_param_result_08000f9c(uint input_1,uint input_2)\n\n{\n  bool is_negative;\n  uint double_input_1;\n  uint double_input_2;\n  uint combined_inputs;\n  bool is_combined_zero;\n  \n  double_input_1 = input_1 * 2;\n  double_input_2 = input_2 * 2;\n  if (((int)double_input_1 >> 0x18 == -1 || (int)double_input_2 >> 0x18 == -1) &&\n     ((((int)double_input_1 >> 0x18 == -1 && ((input_1 & 0x7fffff) != 0)) ||\n      (((int)double_input_2 >> 0x18 == -1 && ((input_2 & 0x7fffff) != 0)))))) {\n    result 1;\n  }\n  combined_inputs = double_input_1 | input_2 & 0x7fffffff;\n  is_combined_zero = combined_inputs == 0;\n  if (!is_combined_zero) {\n    combined_inputs = input_1 ^ input_2;\n    is_combined_zero = combined_inputs == 0;\n  }\n  is_negative = -1 < (int)combined_inputs;\n  if (is_negative) {\n    input_1 = double_input_1 + input_2 * -2;\n    is_combined_zero = input_1 == 0;\n  }\n  if ((is_negative && double_input_2 <= double_input_1) && !is_combined_zero) {\n    input_1 = (int)input_2 >> 0x1f;\n  }\n  if (!is_negative || double_input_2 > double_input_1) {\n    input_1 = ~((int)input_2 >> 0x1f);\n  }\n  if (!is_combined_zero) {\n    input_1 = input_1 | 1;\n  }\n  result input_1;\n}\n\n",
            "renaming": {
                "FUN_08000f9c": "calculate_param_result_08000f9c",
                "param_1": "input_1",
                "param_2": "input_2",
                "bVar1": "is_negative",
                "uVar2": "double_input_1",
                "uVar3": "double_input_2",
                "uVar4": "combined_inputs",
                "bVar5": "is_combined_zero",
                "return": "result"
            },
            "calling": [
                "FUN_08001004"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000ffc": {
            "entrypoint": "0x08000ffc",
            "current_name": "initialize_08000ffc",
            "code": "\nvoid initialize_08000ffc(undefined4 destination,undefined4 source)\n\n{\n  FUN_08001004(source,destination);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000ffc": "initialize_08000ffc",
                "param_1": "destination",
                "param_2": "source"
            },
            "calling": [
                "FUN_08001050",
                "FUN_08001064"
            ],
            "called": [
                "FUN_08001004"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001004": {
            "entrypoint": "0x08001004",
            "current_name": "concatenate_parameters_08001004",
            "code": "\nundefined8 concatenate_parameters_08001004(undefined4 first_parameter,undefined4 second_parameter)\n\n{\n  FUN_08000f9c();\n  return CONCAT44(second_parameter,first_parameter);\n}\n\n",
            "renaming": {
                "FUN_08001004": "concatenate_parameters_08001004",
                "param_1": "first_parameter",
                "param_2": "second_parameter"
            },
            "calling": [
                "FUN_08001014",
                "FUN_08001028",
                "FUN_08000ffc"
            ],
            "called": [
                "FUN_08000f9c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001014": {
            "entrypoint": "0x08001014",
            "current_name": "check_for_null_termination_08001014",
            "code": "\nbool check_for_null_termination_08001014(void)\n\n{\n  char input_character;\n  \n  FUN_08001004();\n  return input_character != '\\0';\n}\n\n",
            "renaming": {
                "FUN_08001014": "check_for_null_termination_08001014",
                "in_ZR": "input_character"
            },
            "calling": [
                "FUN_08003330"
            ],
            "called": [
                "FUN_08001004"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001028": {
            "entrypoint": "0x08001028",
            "current_name": "check_input_string_08001028",
            "code": "\nbool check_input_string_08001028(void)\n\n{\n  char input_char;\n  \n  FUN_08001004();\n  return input_char == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08001028": "check_input_string_08001028",
                "in_CY": "input_char"
            },
            "calling": [
                "FUN_08004a84",
                "FUN_08002ee8",
                "FUN_0800483c"
            ],
            "called": [
                "FUN_08001004"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001050": {
            "entrypoint": "0x08001050",
            "current_name": "check_carry_and_zero_08001050",
            "code": "\nbool check_carry_and_zero_08001050(void)\n\n{\n  undefined zero_flag;\n  undefined carry_flag;\n  \n  FUN_08000ffc();\n  return !(bool)carry_flag || (bool)zero_flag;\n}\n\n",
            "renaming": {
                "FUN_08001050": "check_carry_and_zero_08001050",
                "in_CY": "carry_flag",
                "in_ZR": "zero_flag"
            },
            "calling": [
                "FUN_08002ee8"
            ],
            "called": [
                "FUN_08000ffc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001064": {
            "entrypoint": "0x08001064",
            "current_name": "is_null_terminated_08001064",
            "code": "\nbool is_null_terminated_08001064(void)\n\n{\n  char input_character;\n  \n  FUN_08000ffc();\n  return input_character == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08001064": "is_null_terminated_08001064",
                "in_CY": "input_character"
            },
            "calling": [
                "FUN_08004a84",
                "FUN_0800483c"
            ],
            "called": [
                "FUN_08000ffc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001078": {
            "entrypoint": "0x08001078",
            "current_name": "binary_to_signed_int_08001078",
            "code": "\nuint binaryToSignedInt_08001078(uint input_value)\n\n{\n  uint shifted_bits;\n  uint shifted_bits_difference;\n  \n  if (input_value << 1 < 0x7f000000) {\n    return 0;\n  }\n  shifted_bits = (input_value << 1) >> 0x18;\n  shifted_bits_difference = 0x9e - shifted_bits;\n  if (shifted_bits < 0x9f && shifted_bits_difference != 0) {\n    shifted_bits = (input_value << 8 | 0x80000000) >> (shifted_bits_difference & 0xff);\n    if ((input_value & 0x80000000) != 0) {\n      shifted_bits = -shifted_bits;\n    }\n    return shifted_bits;\n  }\n  if ((shifted_bits_difference == 0xffffff9f) && ((input_value & 0x7fffff) != 0)) {\n    return 0;\n  }\n  input_value = input_value & 0x80000000;\n  if (input_value == 0) {\n    input_value = 0x7fffffff;\n  }\n  return input_value;\n}\n\n",
            "renaming": {
                "FUN_08001078": "binary_to_signed_int_08001078",
                "param_1": "input_value",
                "uVar1": "shifted_bits",
                "uVar2": "shifted_bits_difference"
            },
            "calling": [
                "FUN_0800426c",
                "FUN_0800411c",
                "FUN_08002f28"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080010c4": {
            "entrypoint": "0x080010c4",
            "current_name": "check_parameter_validity_080010c4",
            "code": "\nuint checkParameterValidity_080010c4(uint inputValue)\n\n{\n  uint shiftAmount;\n  \n  if (((inputValue & 0x80000000) != 0) || (inputValue << 1 < 0x7f000000)) {\n    return 0;\n  }\n  shiftAmount = 0x9e - ((inputValue << 1) >> 0x18);\n  if (-1 < (int)shiftAmount) {\n    return (inputValue << 8 | 0x80000000) >> (shiftAmount & 0xff);\n  }\n  if ((shiftAmount == 0xffffff9f) && ((inputValue & 0x7fffff) != 0)) {\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080010c4": "check_parameter_validity_080010c4",
                "param_1": "inputValue",
                "uVar1": "shiftAmount"
            },
            "calling": [
                "FUN_08004a84"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001104": {
            "entrypoint": "0x08001104",
            "current_name": "initialize_application_08001104",
            "code": "\nundefined4 initializeApplication_08001104(undefined4 inputParameter)\n\n{\n  uint currentTime;\n  \n  currentTime = FUN_08002214();\n  FUN_08001214(currentTime / 1000);\n  FUN_08001194(0xffffffff,inputParameter,0);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001104": "initialize_application_08001104",
                "param_1": "inputParameter",
                "uVar1": "currentTime"
            },
            "calling": [
                "FUN_0800209c",
                "FUN_08001128"
            ],
            "called": [
                "FUN_08002214",
                "FUN_08001194",
                "FUN_08001214"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001128": {
            "entrypoint": "0x08001128",
            "current_name": "initialize_system_08001128",
            "code": "\n\n\nundefined4 initializeSystem_08001128(void)\n\n{\n  _DAT_40022000 = _DAT_40022000 | 0x10;\n  FUN_08001170(3);\n  FUN_08001104(0);\n  FUN_08004ccc();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001128": "initialize_system_08001128"
            },
            "calling": [
                "FUN_0800458c"
            ],
            "called": [
                "FUN_08001170",
                "FUN_08001104",
                "FUN_08004ccc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800114c": {
            "entrypoint": "0x0800114c",
            "current_name": "increment_counter_0800114c",
            "code": "\nvoid incrementCounter_0800114c(void)\n\n{\n  DAT_20000244 = DAT_20000244 + 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800114c": "increment_counter_0800114c"
            },
            "calling": [
                "FUN_080041ae"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800115c": {
            "entrypoint": "0x0800115c",
            "current_name": "get_global_variable_value_0800115c",
            "code": "\nundefined4 get_global_variable_value_0800115c(void)\n\n{\n  return DAT_20000244;\n}\n\n",
            "renaming": {
                "FUN_0800115c": "get_global_variable_value_0800115c"
            },
            "calling": [
                "FUN_08001530",
                "thunk_FUN_0800115c",
                "FUN_08001b58",
                "FUN_08004c18",
                "FUN_0800209c",
                "FUN_08001828",
                "FUN_08001938",
                "FUN_080014e2",
                "thunk_FUN_0800115c",
                "FUN_080015e8",
                "FUN_080016f4",
                "FUN_08001460"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001168": {
            "entrypoint": "0x08001168",
            "current_name": "FUNC_08001168",
            "code": "\nvoid FUNC_08001168(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001168": "FUNC_08001168"
            },
            "calling": [
                "FUN_08001b58",
                "thunk_FUN_08001168"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08001170": {
            "entrypoint": "0x08001170",
            "current_name": "set_control_bitmask_08001170",
            "code": "\n\n\nvoid setControlBitmask_08001170(uint inputValue)\n\n{\n  _DAT_e000ed0c = _DAT_e000ed0c & 0xf8ff | 0x5fa0000 | (inputValue & 7) << 8;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001170": "set_control_bitmask_08001170",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08001128",
                "FUN_08004ccc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001194": {
            "entrypoint": "0x08001194",
            "current_name": "update_memory_08001194",
            "code": "\n\n\nvoid updateMemory_08001194(uint address,uint data1,uint data2)\n\n{\n  undefined updatedValue;\n  uint shiftAmount;\n  uint offset;\n  uint shiftedOffset;\n  \n  offset = (uint)(_DAT_e000ed0c << 0x15) >> 0x1d;\n  shiftAmount = 7 - offset;\n  shiftedOffset = offset + 4;\n  if (3 < shiftAmount) {\n    shiftAmount = 4;\n  }\n  if (shiftedOffset < 7) {\n    offset = 0;\n  }\n  shiftAmount = (1 << (shiftAmount & 0xff)) - 1;\n  if (6 < shiftedOffset) {\n    offset = offset - 3;\n  }\n  updatedValue = (undefined)\n          ((data2 & (1 << (offset & 0xff)) - 1U | (data1 & shiftAmount) << (offset & 0xff)) << 4);\n  if (-1 < (int)address) {\n    offset = address + 0xe000e100;\n  }\n  else {\n    shiftAmount = 0xe000ed14;\n    offset = address & 0xf;\n  }\n  if (-1 < (int)address) {\n    *(undefined *)(offset + 0x300) = updatedValue;\n  }\n  else {\n    *(undefined *)(shiftAmount + offset) = updatedValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001194": "update_memory_08001194",
                "param_1": "address",
                "param_2": "data1",
                "param_3": "data2",
                "uVar1": "updatedValue",
                "uVar2": "shiftAmount",
                "uVar3": "offset",
                "uVar4": "shiftedOffset"
            },
            "calling": [
                "FUN_08004e7c",
                "FUN_08001104",
                "FUN_08004514",
                "FUN_08004ccc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080011fc": {
            "entrypoint": "0x080011fc",
            "current_name": "set_bit_in_array_080011fc",
            "code": "\nvoid setBitInArray_080011fc(uint index)\n\n{\n  *(int *)((index >> 5) * 4 + -0x1fff1f00) = 1 << (index & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080011fc": "set_bit_in_array_080011fc",
                "param_1": "index"
            },
            "calling": [
                "FUN_08004e7c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001214": {
            "entrypoint": "0x08001214",
            "current_name": "initialize_values_and_check_08001214",
            "code": "\n\n\nundefined4 initializeValuesAndCheck_08001214(int inputValue)\n\n{\n  if (inputValue - 1U < 0x1000000) {\n    _DAT_e000e014 = inputValue - 1U;\n    DAT_e000ed23 = 0xf0;\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08001214": "initialize_values_and_check_08001214",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08001104",
                "FUN_08004514"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001240": {
            "entrypoint": "0x08001240",
            "current_name": "set_flag_08001240",
            "code": "\n\n\nvoid setFlag_08001240(int flagValue)\n\n{\n  if (flagValue == 4) {\n    _DAT_e000e010 = _DAT_e000e010 | 4;\n  }\n  else {\n    _DAT_e000e010 = _DAT_e000e010 & 0xfffffffb;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001240": "set_flag_08001240",
                "param_1": "flagValue"
            },
            "calling": [
                "FUN_08004514"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001258": {
            "entrypoint": "0x08001258",
            "current_name": "FUNC_08001258",
            "code": "\nvoid FUNC_08001258(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001258": "FUNC_08001258"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08001264": {
            "entrypoint": "0x08001264",
            "current_name": "process_parameters_08001264",
            "code": "\n\n\nvoid processParameters_08001264(uint *outputParameters,uint *inputParameters)\n\n{\n  uint outputValue;\n  uint bitMask;\n  uint parameter;\n  int index;\n  uint i;\n  uint shiftedMask;\n  uint specificParameter;\n  uint *outputPtr;\n  int bitOffset;\n  \n  outputValue = 0;\n  i = 0;\n  do {\n    shiftedMask = 1 << (i & 0xff);\n    bitMask = shiftedMask & *inputParameters;\n    if (shiftedMask == bitMask) {\n      parameter = inputParameters[1];\n      if (parameter == 0x12) {\n        outputValue = inputParameters[3] + 0xc;\n      }\n      else if (parameter < 0x13) {\n        if (parameter == 2) {\n          outputValue = inputParameters[3] + 8;\n        }\n        else if (parameter < 3) {\n          if (parameter == 0) goto LAB_080013be;\n          if (parameter == 1) {\n            outputValue = inputParameters[3];\n          }\n        }\n        else if (parameter == 3) {\n          outputValue = 0;\n        }\n        else if (parameter == 0x11) {\n          outputValue = inputParameters[3] + 4;\n        }\n      }\n      else {\n        if (parameter != 0x10210000) {\n          if (parameter < 0x10210001) {\n            if (parameter != 0x10110000) {\n              specificParameter = 0x10120000;\nLAB_080013b8:\n              if (parameter != specificParameter) goto LAB_080012a8;\n            }\n          }\n          else if ((parameter != 0x10310000) && (parameter != 0x10320000)) {\n            specificParameter = 0x10220000;\n            goto LAB_080013b8;\n          }\n        }\nLAB_080013be:\n        outputValue = inputParameters[2];\n        if (outputValue == 0) {\n          outputValue = 4;\n        }\n        else {\n          if (outputValue == 1) {\n            outputParameters[4] = shiftedMask;\n          }\n          if (outputValue != 1) {\n            outputParameters[5] = shiftedMask;\n          }\n          outputValue = 8;\n        }\n      }\nLAB_080012a8:\n      if (bitMask < 0x100) {\n        shiftedMask = *outputParameters;\n        parameter = i << 2;\n        outputPtr = outputParameters;\n      }\n      else {\n        shiftedMask = outputParameters[1];\n        parameter = (i + 0x3ffffff8) * 4;\n      }\n      if (0xff < bitMask) {\n        outputPtr = outputParameters + 1;\n      }\n      *outputPtr = shiftedMask & ~(0xf << (parameter & 0xff)) | outputValue << (parameter & 0xff);\n      outputPtr = (uint *)inputParameters[1];\n      if (((uint)outputPtr & 0x10000000) != 0) {\n        _DAT_40021018 = _DAT_40021018 | 1;\n        bitOffset = (i & 3) << 2;\n        if (outputParameters == (uint *)0x40010800) {\n          index = 0;\n        }\n        else if (outputParameters == (uint *)0x40010c00) {\n          index = 1;\n        }\n        else if (outputParameters == (uint *)0x40011000) {\n          index = 2;\n        }\n        else if (outputParameters == (uint *)0x40011400) {\n          index = 3;\n        }\n        else {\n          index = 4;\n        }\n        *(uint *)((i & 0xfffffffc) + 0x40010008) =\n             index << bitOffset | *(uint *)((i & 0xfffffffc) + 0x40010008) & ~(0xf << bitOffset);\n        if (((uint)outputPtr & 0x10000) == 0) {\n          _DAT_40010400 = _DAT_40010400 & ~bitMask;\n        }\n        else {\n          _DAT_40010400 = _DAT_40010400 | bitMask;\n        }\n        if (((uint)outputPtr & 0x20000) == 0) {\n          _DAT_40010404 = _DAT_40010404 & ~bitMask;\n        }\n        else {\n          _DAT_40010404 = _DAT_40010404 | bitMask;\n        }\n        if (((uint)outputPtr & 0x100000) == 0) {\n          _DAT_40010408 = _DAT_40010408 & ~bitMask;\n        }\n        else {\n          _DAT_40010408 = _DAT_40010408 | bitMask;\n        }\n        if (((uint)outputPtr & 0x200000) == 0) {\n          _DAT_4001040c = _DAT_4001040c & ~bitMask;\n        }\n        else {\n          _DAT_4001040c = bitMask | _DAT_4001040c;\n        }\n      }\n    }\n    i = i + 1;\n    if (i == 0x10) {\n      return;\n    }\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08001264": "process_parameters_08001264",
                "param_1": "outputParameters",
                "param_2": "inputParameters",
                "uVar1": "outputValue",
                "uVar2": "bitMask",
                "uVar3": "parameter",
                "iVar4": "index",
                "uVar5": "i",
                "uVar6": "shiftedMask",
                "uVar7": "specificParameter",
                "unaff_r10": "outputPtr",
                "iVar8": "bitOffset"
            },
            "calling": [
                "FUN_08004e14",
                "FUN_08004e7c",
                "FUN_08004d48",
                "FUN_0800458c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001424": {
            "entrypoint": "0x08001424",
            "current_name": "set_param_08001424",
            "code": "\nvoid set_param_08001424(int base_address,int value,int is_shift)\n\n{\n  if (is_shift == 0) {\n    value = value << 0x10;\n  }\n  *(int *)(base_address + 0x10) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001424": "set_param_08001424",
                "param_1": "base_address",
                "param_2": "value",
                "param_3": "is_shift"
            },
            "calling": [
                "FUN_08004490",
                "FUN_08003f3c",
                "FUN_0800458c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800142e": {
            "entrypoint": "0x0800142e",
            "current_name": "xor_param_with_global_0800142e",
            "code": "\nvoid xor_param_with_global_0800142e(int ptr_to_data,uint input_value)\n\n{\n  *(uint *)(ptr_to_data + 0xc) = input_value ^ *(uint *)(ptr_to_data + 0xc);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800142e": "xor_param_with_global_0800142e",
                "param_1": "ptr_to_data",
                "param_2": "input_value"
            },
            "calling": [
                "FUN_08004490"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001436": {
            "entrypoint": "0x08001436",
            "current_name": "update_flag_and_values_08001436",
            "code": "\nundefined4 updateFlagAndValues_08001436(int *data)\n\n{\n  int value;\n  \n  value = *data;\n  if ((*(uint *)(value + 0x14) & 0x400) != 0) {\n    *(uint *)(value + 0x14) = *(uint *)(value + 0x14) & 0xfffffbff;\n    errorCode = 4;\n    *(undefined *)((int)data + 0x35) = 0x20;\n    *(undefined *)(data + 0xd) = 0;\n    return 1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001436": "update_flag_and_values_08001436",
                "param_1": "data",
                "iVar1": "value",
                "param_1[0xe]": "errorCode"
            },
            "calling": [
                "FUN_080014e2"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001460": {
            "entrypoint": "0x08001460",
            "current_name": "validate_permissions_08001460",
            "code": "\nundefined4 validate_permissions_08001460(uint **param_arr,uint permission_flag,uint time_limit)\n\n{\n  int start_time;\n  int current_time;\n  uint access_rights;\n  uint *ptr;\n  \n  start_time = FUN_0800115c();\n  do {\n    ptr = *param_arr;\n    if ((permission_flag << 8) >> 0x18 == 1) {\n      access_rights = ptr[5];\n    }\n    else {\n      access_rights = ptr[6];\n    }\n    if ((permission_flag & 0xffff & ~access_rights) == 0) {\n      return 0;\n    }\n    if ((int)(ptr[5] << 0x15) < 0) {\n      *ptr = *ptr | 0x200;\n      ptr[5] = ptr[5] & 0xfffffbff;\n      param_arr[0xe] = (uint *)0x4;\n      *(undefined *)((int)param_arr + 0x35) = 0x20;\n      *(undefined *)(param_arr + 0xd) = 0;\n      return 1;\n    }\n  } while ((time_limit == 0xffffffff) ||\n          ((time_limit != 0 && (current_time = FUN_0800115c(), (uint)(current_time - start_time) <= time_limit))));\n  *(undefined *)((int)param_arr + 0x35) = 0x20;\n  *(undefined *)(param_arr + 0xd) = 0;\n  return 3;\n}\n\n",
            "renaming": {
                "FUN_08001460": "validate_permissions_08001460",
                "param_1": "param_arr",
                "param_2": "permission_flag",
                "param_3": "time_limit",
                "iVar1": "start_time",
                "iVar2": "current_time",
                "uVar3": "access_rights",
                "puVar4": "ptr",
                "param_1[0xe]": "param_arr[0xe]"
            },
            "calling": [
                "FUN_08001530",
                "FUN_080015e8"
            ],
            "called": [
                "FUN_0800115c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080014e2": {
            "entrypoint": "0x080014e2",
            "current_name": "check_validity_080014e2",
            "code": "\nundefined4 checkValidity_080014e2(int *inputArray,uint value)\n\n{\n  int result1;\n  int result2;\n  \n  result1 = FUN_0800115c();\n  while( true ) {\n    if (*(int *)(*inputArray + 0x14) << 0x18 < 0) {\n      return 0;\n    }\n    result2 = FUN_08001436(inputArray);\n    if (result2 != 0) break;\n    if ((value != 0xffffffff) &&\n       ((value == 0 || (result2 = FUN_0800115c(), value < (uint)(result2 - result1))))) {\n      inputArray[0xe] = inputArray[0xe] | 0x20;\n      *(undefined *)((int)inputArray + 0x35) = 0x20;\n      *(undefined *)(inputArray + 0xd) = 0;\n      return 3;\n    }\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080014e2": "check_validity_080014e2",
                "param_1": "inputArray",
                "param_2": "value",
                "iVar1": "result1",
                "iVar2": "result2"
            },
            "calling": [
                "FUN_08001530",
                "FUN_08001828",
                "FUN_080015e8"
            ],
            "called": [
                "FUN_0800115c",
                "FUN_08001436"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001530": {
            "entrypoint": "0x08001530",
            "current_name": "set_flags_and_process_data_08001530",
            "code": "\nundefined4 setFlagsAndProcessData_08001530(uint **dataPointer,uint value1,uint value2,int condition,uint flag)\n\n{\n  int result;\n  int tempResult;\n  uint *currentData;\n  uint **currentDataPointer;\n  uint newValue1;\n  uint newValue2;\n  \n  **dataPointer = **dataPointer | 0x100;\n  currentDataPointer = dataPointer;\n  newValue1 = value1;\n  newValue2 = value2;\n  result = FUN_0800115c();\n  do {\n    currentData = *dataPointer;\n    do {\n      if ((int)(currentData[5] << 0x1f) < 0) {\n        currentData[4] = value1 & 0xfe;\n        result = FUN_08001460(dataPointer,0x10002,flag,currentData,currentDataPointer,newValue1,newValue2);\n        if (result == 0) {\n          result = FUN_080014e2(dataPointer,flag,(*dataPointer)[5],(*dataPointer)[6]);\n          if (result == 0) {\n            currentData = *dataPointer;\n            if (condition == 1) {\nLAB_080015ca:\n              currentData[4] = value2 & 0xff;\n              return 0;\n            }\n            currentData[4] = value2 >> 8;\n            result = FUN_080014e2(dataPointer,flag);\n            if (result == 0) {\n              currentData = *dataPointer;\n              goto LAB_080015ca;\n            }\n          }\n          if (dataPointer[0xe] != (uint *)0x4) {\n            return 3;\n          }\n          **dataPointer = **dataPointer | 0x200;\n        }\n        else if (dataPointer[0xe] != (uint *)0x4) {\n          return 3;\n        }\n        return 1;\n      }\n    } while (flag == 0xffffffff);\n    if ((flag == 0) || (tempResult = FUN_0800115c(), flag < (uint)(tempResult - result))) {\n      *(undefined *)((int)dataPointer + 0x35) = 0x20;\n      *(undefined *)(dataPointer + 0xd) = 0;\n      return 3;\n    }\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08001530": "set_flags_and_process_data_08001530",
                "param_1": "dataPointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "condition",
                "param_5": "flag",
                "iVar1": "result",
                "iVar2": "tempResult",
                "puVar3": "currentData",
                "ppuVar4": "currentDataPointer",
                "uVar5": "newValue1",
                "uVar6": "newValue2"
            },
            "calling": [
                "FUN_08001828"
            ],
            "called": [
                "FUN_080014e2",
                "FUN_0800115c",
                "FUN_08001460"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080015e8": {
            "entrypoint": "0x080015e8",
            "current_name": "set_flags_and_execute_080015e8",
            "code": "\nundefined4 setFlagsAndExecute_080015e8(uint **ptrArray,uint value1,uint value2,int condition,uint threshold)\n\n{\n  int result;\n  int tempResult;\n  uint *ptr;\n  uint **ptrOfPtr;\n  uint var1;\n  uint var2;\n  \n  ptr = *ptrArray;\n  *ptr = *ptr | 0x400;\n  *ptr = *ptr | 0x100;\n  ptrOfPtr = ptrArray;\n  var1 = value1;\n  var2 = value2;\n  result = FUN_0800115c();\nLAB_0800160e:\n  ptr = *ptrArray;\n  while (-1 < (int)(ptr[5] << 0x1f)) {\n    if (threshold != 0xffffffff) goto code_r0x08001658;\n  }\n  ptr[4] = value1 & 0xfe;\n  result = FUN_08001460(ptrArray,0x10002,threshold,ptr,ptrOfPtr,var1,var2);\n  if (result != 0) goto LAB_080016ba;\n  result = FUN_080014e2(ptrArray,threshold,(*ptrArray)[5],(*ptrArray)[6]);\n  if (result == 0) {\n    ptr = *ptrArray;\n    if (condition != 1) {\n      ptr[4] = value2 >> 8;\n      result = FUN_080014e2(ptrArray,threshold);\n      if (result != 0) goto LAB_08001642;\n      ptr = *ptrArray;\n    }\n    ptr[4] = value2 & 0xff;\n    result = FUN_080014e2(ptrArray,threshold);\n    if (result == 0) {\n      **ptrArray = **ptrArray | 0x100;\n      result = FUN_0800115c();\n      do {\n        do {\n          if ((int)((*ptrArray)[5] << 0x1f) < 0) {\n            (*ptrArray)[4] = value1 & 0xff | 1;\n            result = FUN_08001460(ptrArray,0x10002,threshold);\n            if (result == 0) {\n              return 0;\n            }\nLAB_080016ba:\n            if (ptrArray[0xe] != (uint *)0x4) {\n              return 3;\n            }\n            return 1;\n          }\n        } while (threshold == 0xffffffff);\n      } while ((threshold != 0) && (tempResult = FUN_0800115c(), (uint)(tempResult - result) <= threshold));\nLAB_0800165a:\n      *(undefined *)((int)ptrArray + 0x35) = 0x20;\n      *(undefined *)(ptrArray + 0xd) = 0;\n      return 3;\n    }\n  }\nLAB_08001642:\n  if (ptrArray[0xe] == (uint *)0x4) {\n    **ptrArray = **ptrArray | 0x200;\n    return 1;\n  }\n  return 3;\ncode_r0x08001658:\n  if ((threshold == 0) || (tempResult = FUN_0800115c(), threshold < (uint)(tempResult - result)))\n  goto LAB_0800165a;\n  goto LAB_0800160e;\n}\n\n",
            "renaming": {
                "FUN_080015e8": "set_flags_and_execute_080015e8",
                "param_1": "ptrArray",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "condition",
                "param_5": "threshold",
                "iVar1": "result",
                "iVar2": "tempResult",
                "puVar3": "ptr",
                "ppuVar4": "ptrOfPtr",
                "uVar5": "var1",
                "uVar6": "var2"
            },
            "calling": [
                "FUN_08001938"
            ],
            "called": [
                "FUN_0800115c",
                "FUN_080014e2",
                "FUN_08001460"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080016f4": {
            "entrypoint": "0x080016f4",
            "current_name": "check_data_validity_080016f4",
            "code": "\nundefined4 checkDataValidity_080016f4(int *dataStructPtr,uint bufferSize)\n\n{\n  int initialValue;\n  int currentValue;\n  \n  initialValue = FUN_0800115c();\n  while( true ) {\n    currentValue = *dataStructPtr;\n    if ((*(uint *)(currentValue + 0x14) & 0x40) != 0) {\n      return 0;\n    }\n    if (*(int *)(currentValue + 0x14) << 0x1b < 0) break;\n    if ((bufferSize == 0) || (currentValue = FUN_0800115c(), bufferSize < (uint)(currentValue - initialValue))) {\n      dataStructPtr[0xe] = dataStructPtr[0xe] | 0x20;\n      *(undefined *)((int)dataStructPtr + 0x35) = 0x20;\n      *(undefined *)(dataStructPtr + 0xd) = 0;\n      return 3;\n    }\n  }\n  *(uint *)(currentValue + 0x14) = *(uint *)(currentValue + 0x14) & 0xffffffef;\n  dataStructPtr[0xe] = 0;\n  *(undefined *)(dataStructPtr + 0xd) = 0;\n  *(undefined *)((int)dataStructPtr + 0x35) = 0x20;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080016f4": "check_data_validity_080016f4",
                "param_1": "dataStructPtr",
                "param_2": "bufferSize",
                "iVar1": "initialValue",
                "iVar2": "currentValue"
            },
            "calling": [
                "FUN_08001938"
            ],
            "called": [
                "FUN_0800115c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001754": {
            "entrypoint": "0x08001754",
            "current_name": "initialize_parameters_08001754",
            "code": "\nundefined4 initializeParameters_08001754(uint **parameters)\n\n{\n  uint dividend1;\n  uint dividend2;\n  uint *value1Ptr;\n  uint *param1Ptr;\n  uint *parameterPtr3;\n  uint quotient;\n  undefined8 result;\n  \n  if (parameters != (uint **)0x0) {\n    if (*(char *)((int)parameters + 0x35) == '\\0') {\n      *(undefined *)(parameters + 0xd) = 0;\n      FUN_08004d48();\n    }\n    *(undefined *)((int)parameters + 0x35) = 0x24;\n    **parameters = **parameters & 0xfffffffe;\n    result = FUN_08002220();\n    dividend2 = (uint)((ulonglong)result >> 0x20);\n    dividend1 = (uint)result;\n    param1Ptr = parameters[1];\n    quotient = dividend1 / 1000000;\n    if ((uint *)0x186a0 < param1Ptr) {\n      dividend2 = 300;\n    }\n    value1Ptr = *parameters;\n    if ((uint *)0x186a0 < param1Ptr) {\n      dividend2 = quotient * dividend2;\n    }\n    value2 = quotient;\n    if ((uint *)0x186a0 < param1Ptr) {\n      quotient = dividend2 / 1000;\n    }\n    value3 = quotient + 1;\n    if (param1Ptr < (uint *)0x186a1) {\n      dividend1 = dividend1 / (uint)((int)param1Ptr << 1);\n      if ((dividend1 & 0xfff) < 4) {\n        dividend1 = 4;\n      }\n    }\n    else {\n      if (parameters[2] == (uint *)0x0) {\n        dividend1 = dividend1 / (uint)((int)param1Ptr * 3) | 0x8000;\n      }\n      else {\n        dividend1 = dividend1 / (uint)((int)param1Ptr * 0x19) | 0xc000;\n      }\n      if ((dividend1 & 0xfff) == 0) {\n        dividend1 = 1;\n      }\n    }\n    param1Ptr = parameters[8];\n    parameterPtr3 = parameters[7];\n    value4 = dividend1;\n    *value1Ptr = (uint)parameterPtr3 | (uint)param1Ptr;\n    value6 = (uint)parameters[4] | (uint)parameters[3];\n    value7 = (uint)parameters[5] | (uint)parameters[6];\n    *value1Ptr = *value1Ptr | 1;\n    value8 = (uint *)0x0;\n    *(undefined *)((int)parameters + 0x35) = 0x20;\n    *(undefined *)((int)parameters + 0x36) = 0;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08001754": "initialize_parameters_08001754",
                "param_1": "parameters",
                "uVar1": "dividend1",
                "uVar2": "dividend2",
                "puVar3": "value1Ptr",
                "puVar4": "param1Ptr",
                "puVar5": "parameterPtr3",
                "uVar6": "quotient",
                "uVar7": "result",
                "puVar3[1]": "value2",
                "puVar3[8]": "value3",
                "puVar3[7]": "value4",
                "puVar3[2]": "value6",
                "puVar3[3]": "value7",
                "param_1[0xe]": "value8"
            },
            "calling": [
                "FUN_0800458c"
            ],
            "called": [
                "FUN_08002220",
                "FUN_08004d48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001828": {
            "entrypoint": "0x08001828",
            "current_name": "process_data_08001828",
            "code": "\nundefined4\nprocessData_08001828(uint **data,undefined4 param2,undefined4 param3,undefined4 param4,byte *buffer,\n            short bufferLength,undefined4 param7)\n\n{\n  int counter1;\n  int counter2;\n  uint *pointer;\n  uint value;\n  \n  if (*(char *)((int)data + 0x35) == ' ') {\n    if (buffer == (byte *)0x0) {\n      return 1;\n    }\n    if (bufferLength == 0) {\n      return 1;\n    }\n    counter1 = FUN_0800115c();\n    do {\n      pointer = *data;\n      if ((~pointer[6] & 2) != 0) {\n        if (*(char *)(data + 0xd) == '\\x01') {\n          return 2;\n        }\n        value = *pointer;\n        *(undefined *)(data + 0xd) = 1;\n        *pointer = value & 0xfffff7ff;\n        *(undefined *)((int)data + 0x35) = 0x21;\n        *(undefined *)((int)data + 0x36) = 0x40;\n        data[0xe] = (uint *)0x0;\n        counter1 = FUN_08001530(data,param2,param3,param4,param7);\n        if (counter1 != 0) {\n          *(undefined *)(data + 0xd) = 0;\n          if (data[0xe] == (uint *)0x4) {\n            return 1;\n          }\n          return 3;\n        }\n        goto loop1;\n      }\n      counter2 = FUN_0800115c();\n    } while ((uint)(counter2 - counter1) < 0x2711);\n    *(undefined *)(data + 0xd) = 0;\n    *(undefined *)((int)data + 0x35) = 0x20;\n  }\n  return 2;\n  while (bufferLength != 0) {\nloop1:\n    counter1 = FUN_080014e2(data,param7);\n    if (counter1 != 0) goto loop2;\n    pointer = *data;\n    pointer[4] = (uint)*buffer;\n    if ((int)(pointer[5] << 0x1d) < 0) {\n      if ((short)(bufferLength + -1) == 0) break;\n      bufferLength = bufferLength + -2;\n      pointer[4] = (uint)buffer[1];\n      buffer = buffer + 2;\n    }\n    else {\n      buffer = buffer + 1;\n      bufferLength = bufferLength + -1;\n    }\n  }\n  counter1 = FUN_080014e2(data,param7);\n  if (counter1 == 0) {\n    **data = **data | 0x200;\n    *(undefined *)(data + 0xd) = 0;\n    *(undefined *)((int)data + 0x35) = 0x20;\n    *(undefined *)((int)data + 0x36) = 0;\n    return 0;\n  }\nloop2:\n  if (data[0xe] == (uint *)0x4) {\n    **data = **data | 0x200;\n    return 1;\n  }\n  return 3;\n}\n\n",
            "renaming": {
                "FUN_08001828": "process_data_08001828",
                "param_1": "data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "buffer",
                "param_6": "bufferLength",
                "param_7": "param7",
                "iVar1": "counter1",
                "iVar2": "counter2",
                "puVar3": "pointer",
                "uVar4": "value",
                "LAB_080018e2": "loop1",
                "LAB_080018ee": "loop2"
            },
            "calling": [
                "FUN_0800403c"
            ],
            "called": [
                "FUN_08001530",
                "FUN_0800115c",
                "FUN_080014e2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001938": {
            "entrypoint": "0x08001938",
            "current_name": "validate_input_08001938",
            "code": "\nundefined4\nvalidateInput_08001938(uint **input,undefined4 param2,undefined4 param3,undefined4 param4,\n            undefined *output,ushort input_length,uint timeout)\n\n{\n  undefined *ptr;\n  int start_time;\n  int current_time;\n  uint *ptr;\n  uint value;\n  undefined *ptr;\n  bool flag;\n  \n  if (*(char *)((int)input + 0x35) != ' ') {\n    return 2;\n  }\n  if (output == (undefined *)0x0) {\n    return 1;\n  }\n  if (input_length == 0) {\n    return 1;\n  }\n  start_time = FUN_0800115c();\n  while (ptr = *input, (~ptr[6] & 2) == 0) {\n    current_time = FUN_0800115c();\n    if (10000 < (uint)(current_time - start_time)) {\n      *(undefined *)(input + 0xd) = 0;\n      *(undefined *)((int)input + 0x35) = 0x20;\n      return 2;\n    }\n  }\n  if (*(char *)(input + 0xd) == '\\x01') {\n    return 2;\n  }\n  value = *ptr;\n  *(undefined *)(input + 0xd) = 1;\n  *ptr = value & 0xfffff7ff;\n  *(undefined *)((int)input + 0x35) = 0x22;\n  *(undefined *)((int)input + 0x36) = 0x40;\n  input[0xe] = (uint *)0x0;\n  start_time = FUN_080015e8(input,param2,param3,param4,timeout);\n  if (start_time != 0) {\n    *(undefined *)(input + 0xd) = 0;\n    if (input[0xe] == (uint *)0x4) {\n      return 1;\n    }\n    return 3;\n  }\n  ptr = *input;\n  value = *ptr;\n  if (input_length == 1) {\n    *ptr = value & 0xfffffbff;\n    disableIRQinterrupts();\n    **input = **input | 0x200;\n    enableIRQinterrupts();\n    start_time = FUN_080016f4(input,timeout);\n    if (start_time == 0) {\n      *output = (char)(*input)[4];\nLAB_08001ab8:\n      *(undefined *)((int)input + 0x35) = 0x20;\n      *(undefined *)((int)input + 0x36) = 0;\n      *(undefined *)(input + 0xd) = 0;\n      return 0;\n    }\nLAB_08001a18:\n    if (input[0xe] != (uint *)0x20) {\n      return 1;\n    }\n    return 3;\n  }\n  if (input_length == 2) {\n    *ptr = value | 0x800;\n    disableIRQinterrupts();\n    **input = **input & 0xfffffbff;\n    enableIRQinterrupts();\n  }\n  else {\n    *ptr = value | 0x400;\n    while (3 < input_length) {\n      start_time = FUN_080016f4(input,timeout);\n      if (start_time != 0) goto LAB_08001a18;\n      *output = (char)(*input)[4];\n      ptr = *input;\n      flag = (int)(ptr[5] << 0x1d) < 0;\n      if (flag) {\n        ptr = (uint *)ptr[4];\n        ptr = output + 2;\n        input_length = input_length - 2;\n      }\n      else {\n        ptr = output + 1;\n        input_length = input_length - 1;\n      }\n      ptr = output + 1;\n      output = ptr;\n      if (flag) {\n        *ptr = (char)ptr;\n      }\n    }\n    if (input_length != 2) {\n      start_time = FUN_0800115c();\n      do {\n        ptr = *input;\n        do {\n          if ((int)(ptr[5] << 0x1d) < 0) {\n            *ptr = *ptr & 0xfffffbff;\n            disableIRQinterrupts();\n            *output = (char)(*input)[4];\n            start_time = FUN_0800115c();\n            goto LAB_08001b3a;\n          }\n        } while (timeout == 0xffffffff);\n      } while ((timeout != 0) && (current_time = FUN_0800115c(), (uint)(current_time - start_time) <= timeout));\n      goto LAB_08001afa;\n    }\n  }\n  start_time = FUN_0800115c();\n  do {\n    do {\n      if ((int)((*input)[5] << 0x1d) < 0) {\n        disableIRQinterrupts();\n        ptr = *input;\n        *ptr = *ptr | 0x200;\n        *output = (char)ptr[4];\n        enableIRQinterrupts();\n        output[1] = (char)(*input)[4];\n        goto LAB_08001ab8;\n      }\n    } while (timeout == 0xffffffff);\n  } while ((timeout != 0) && (current_time = FUN_0800115c(), (uint)(current_time - start_time) <= timeout));\nLAB_08001afa:\n  *(undefined *)((int)input + 0x35) = 0x20;\n  *(undefined *)(input + 0xd) = 0;\n  return 3;\nLAB_08001b3a:\n  do {\n    ptr = *input;\n    do {\n      if ((int)(ptr[5] << 0x1d) < 0) {\n        *ptr = *ptr | 0x200;\n        output[1] = (char)ptr[4];\n        enableIRQinterrupts();\n        output[2] = (char)(*input)[4];\n        goto LAB_08001ab8;\n      }\n    } while (timeout == 0xffffffff);\n  } while ((timeout != 0) && (current_time = FUN_0800115c(), (uint)(current_time - start_time) <= timeout));\n  goto LAB_08001afa;\n}\n\n",
            "renaming": {
                "FUN_08001938": "validate_input_08001938",
                "param_1": "input",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "output",
                "param_6": "input_length",
                "param_7": "timeout",
                "puVar1": "ptr",
                "iVar2": "start_time",
                "iVar3": "current_time",
                "puVar4": "ptr",
                "uVar5": "value",
                "puVar6": "ptr",
                "bVar7": "flag"
            },
            "calling": [
                "FUN_0800407c",
                "FUN_080040b8"
            ],
            "called": [
                "FUN_0800115c",
                "FUN_080016f4",
                "FUN_080015e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001b58": {
            "entrypoint": "0x08001b58",
            "current_name": "check_configuration_08001b58",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08001eec) */\n/* WARNING: Removing unreachable block (ram,0x08001ee8) */\n\n\nundefined4 check_configuration_08001b58(int *config_params)\n\n{\n  int temp_var1;\n  int temp_var2;\n  \n  if (*config_params << 0x1f < 0) {\n    if (((_DAT_40021004 & 0xc) == 4) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((int)(_DAT_40021004 << 0xf) < 0)))) {\n      if (((int)((_DAT_40021000 >> 0x11) << 0x1f) < 0) && (config_params[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      temp_var1 = config_params[1];\n      if (temp_var1 == 0x10000) {\nLAB_08001c1e:\n        _DAT_40021000 = _DAT_40021000 | 0x10000;\n      }\n      else {\n        if (temp_var1 == 0) {\n          _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n          temp_var1 = FUN_0800115c();\n          while ((int)((_DAT_40021000 >> 0x11) << 0x1f) < 0) {\n            temp_var2 = FUN_0800115c();\n            if (100 < (uint)(temp_var2 - temp_var1)) {\n              return 3;\n            }\n          }\n          goto LAB_08001b64;\n        }\n        if (temp_var1 == 0x50000) {\n          _DAT_40021000 = _DAT_40021000 | 0x40000;\n          goto LAB_08001c1e;\n        }\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      temp_var1 = FUN_0800115c();\n      while (-1 < (int)((_DAT_40021000 >> 0x11) << 0x1f)) {\n        temp_var2 = FUN_0800115c();\n        if (100 < (uint)(temp_var2 - temp_var1)) {\n          return 3;\n        }\n      }\n    }\n  }\nLAB_08001b64:\n  if (*config_params << 0x1e < 0) {\n    if (((_DAT_40021004 & 0xc) == 0) ||\n       (((_DAT_40021004 & 0xc) == 8 && (-1 < (int)(_DAT_40021004 << 0xf))))) {\n      if (((int)((_DAT_40021000 >> 1) << 0x1f) < 0) && (config_params[4] != 1)) {\n        return 1;\n      }\n    }\n    else {\n      flag1 = config_params[4];\n      if (flag1 == 0) {\n        temp_var1 = FUN_0800115c();\n        while ((int)((_DAT_40021000 >> 1) << 0x1f) < 0) {\n          temp_var2 = FUN_0800115c();\n          if (2 < (uint)(temp_var2 - temp_var1)) {\n            return 3;\n          }\n        }\n        goto LAB_08001b6c;\n      }\n      flag1 = 1;\n      temp_var1 = FUN_0800115c();\n      while (-1 < (int)((_DAT_40021000 >> 1) << 0x1f)) {\n        temp_var2 = FUN_0800115c();\n        if (2 < (uint)(temp_var2 - temp_var1)) {\n          return 3;\n        }\n      }\n    }\n    _DAT_40021000 = config_params[5] << 3 | _DAT_40021000 & 0xffffff07;\n  }\nLAB_08001b6c:\n  if (*config_params << 0x1c < 0) {\n    flag3 = config_params[6];\n    if (flag3 == 0) {\n      temp_var1 = FUN_0800115c();\n      while ((int)((_DAT_40021024 >> 1) << 0x1f) < 0) {\n        temp_var2 = FUN_0800115c();\n        if (2 < (uint)(temp_var2 - temp_var1)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      flag3 = 1;\n      temp_var1 = FUN_0800115c();\n      while (-1 < (int)((_DAT_40021024 >> 1) << 0x1f)) {\n        temp_var2 = FUN_0800115c();\n        if (2 < (uint)(temp_var2 - temp_var1)) {\n          return 3;\n        }\n      }\n      FUNC_08001168(1);\n    }\n  }\n  if (-1 < *config_params << 0x1d) goto LAB_08001bc2;\n  _DAT_4002101c = _DAT_4002101c | 0x10000000;\n  _DAT_40007000 = _DAT_40007000 | 0x100;\n  temp_var1 = FUN_0800115c();\n  while (-1 < (int)(_DAT_40007000 << 0x17)) {\n    temp_var2 = FUN_0800115c();\n    if (100 < (uint)(temp_var2 - temp_var1)) {\n      return 3;\n    }\n  }\n  temp_var1 = config_params[3];\n  if (temp_var1 == 1) {\nLAB_08001e1a:\n    _DAT_40021020 = _DAT_40021020 | 1;\n  }\n  else {\n    if (temp_var1 == 0) {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n      temp_var1 = FUN_0800115c();\n      while ((int)((_DAT_40021020 >> 1) << 0x1f) < 0) {\n        temp_var2 = FUN_0800115c();\n        if (5000 < (uint)(temp_var2 - temp_var1)) {\n          return 3;\n        }\n      }\n      goto LAB_08001bc2;\n    }\n    if (temp_var1 == 5) {\n      _DAT_40021020 = _DAT_40021020 | 4;\n      goto LAB_08001e1a;\n    }\n    _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n  }\n  temp_var1 = FUN_0800115c();\n  while (-1 < (int)((_DAT_40021020 >> 1) << 0x1f)) {\n    temp_var2 = FUN_0800115c();\n    if (5000 < (uint)(temp_var2 - temp_var1)) {\n      return 3;\n    }\n  }\nLAB_08001bc2:\n  if (config_params[7] == 0) {\n    return 0;\n  }\n  if ((_DAT_40021004 & 0xc) != 8) {\n    if (config_params[7] != 2) {\n      uRam42420060 = 0;\n      temp_var1 = FUN_0800115c();\n      do {\n        if (-1 < (int)((_DAT_40021000 >> 0x19) << 0x1f)) {\n          return 0;\n        }\n        temp_var2 = FUN_0800115c();\n      } while ((uint)(temp_var2 - temp_var1) < 3);\n      return 3;\n    }\n    uRam42420060 = 0;\n    temp_var1 = FUN_0800115c();\n    do {\n      if (-1 < (int)((_DAT_40021000 >> 0x19) << 0x1f)) {\n        if (config_params[8] == 0x10000) {\n          _DAT_40021004 = _DAT_40021004 & 0xfffdffff | config_params[2];\n        }\n        _DAT_40021004 = config_params[8] | config_params[9] | _DAT_40021004 & 0xffc2ffff;\n        uRam42420060 = 1;\n        temp_var1 = FUN_0800115c();\n        do {\n          if ((int)((_DAT_40021000 >> 0x19) << 0x1f) < 0) {\n            return 0;\n          }\n          temp_var2 = FUN_0800115c();\n        } while ((uint)(temp_var2 - temp_var1) < 3);\n        return 3;\n      }\n      temp_var2 = FUN_0800115c();\n    } while ((uint)(temp_var2 - temp_var1) < 3);\n    return 3;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08001b58": "check_configuration_08001b58",
                "param_1": "config_params",
                "iVar1": "temp_var1",
                "iVar2": "temp_var2",
                "iRam42420000": "flag1",
                "iRam42420480": "flag3"
            },
            "calling": [
                "FUN_08004514"
            ],
            "called": [
                "FUN_0800115c",
                "FUN_08001168"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002008": {
            "entrypoint": "0x08002008",
            "current_name": "calculate_var2_08002008",
            "code": "\n\n\nint calculateVar2_08002008(void)\n\n{\n  undefined4 value1;\n  int result;\n  undefined4 value2;\n  undefined4 *dataPointer1;\n  uint value3;\n  undefined4 *dataPointer2;\n  byte byteArray [4];\n  undefined4 array [5];\n  \n  dataPointer1 = &DAT_080072f0;\n  dataPointer2 = array;\n  do {\n    value1 = *dataPointer1;\n    value2 = dataPointer1[1];\n    dataPointer1 = dataPointer1 + 2;\n    *dataPointer2 = value1;\n    dataPointer2[1] = value2;\n    dataPointer2 = dataPointer2 + 2;\n  } while (dataPointer1 != (undefined4 *)\"../Src/MPU9250.c\");\n  byteArray[0] = 1;\n  byteArray[1] = 2;\n  if ((_DAT_40021004 & 0xc) == 8) {\n    if ((int)(_DAT_40021004 << 0xf) < 0) {\n      value3 = 8000000 / byteArray[(_DAT_40021004 & 0x20000) >> 0x11];\n    }\n    else {\n      value3 = 4000000;\n    }\n    result = value3 * *(byte *)((int)array + ((_DAT_40021004 & 0x3c0000) >> 0x12));\n  }\n  else {\n    result = 8000000;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002008": "calculate_var2_08002008",
                "uVar1": "value1",
                "iVar2": "result",
                "uVar3": "value2",
                "puVar4": "dataPointer1",
                "uVar5": "value3",
                "puVar6": "dataPointer2",
                "local_24": "byteArray",
                "local_20": "array"
            },
            "calling": [
                "FUN_0800209c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800209c": {
            "entrypoint": "0x0800209c",
            "current_name": "validate_and_adjust_param_0800209c",
            "code": "\n\n\nundefined4 validate_and_adjust_param_0800209c(uint *input_array,uint input_length)\n\n{\n  char flag_1;\n  char flag_2;\n  int temp_variable_1;\n  uint temp_variable_2;\n  int temp_variable_3;\n  uint temp_variable_4;\n  \n  if ((input_length <= (_DAT_40022000 & 7)) ||\n     (_DAT_40022000 = _DAT_40022000 & 0xfffffff8 | input_length, input_length == (input_length & 7))) {\n    if ((int)(*input_array << 0x1e) < 0) {\n      _DAT_40021004 = _DAT_40021004 & 0xffffff0f | input_array[2];\n    }\n    temp_variable_1 = *input_array << 0x1f;\n    if (-1 < temp_variable_1) {\nLAB_080020ba:\n      if ((input_length < (_DAT_40022000 & 7)) &&\n         (_DAT_40022000 = _DAT_40022000 & 0xfffffff8 | input_length, input_length != (input_length & 7))) {\n        return 1;\n      }\n      if ((*input_array & 4) != 0) {\n        _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | input_array[3];\n      }\n      if ((int)(*input_array << 0x1c) < 0) {\n        _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | input_array[4] << 3;\n      }\n      temp_variable_2 = FUN_08002008();\n      DAT_200001bc = temp_variable_2 >> (&DAT_08007361)[(_DAT_40021004 & 0xf0) >> 4];\n      FUN_08001104(0);\n      return 0;\n    }\n    temp_variable_2 = input_array[1];\n    if (temp_variable_2 == 1) {\n      flag_2 = '\\x01';\n      flag_1 = '\\0';\n    }\n    else {\n      temp_variable_4 = _DAT_40021000;\n      if (temp_variable_2 == 2) goto LAB_08002176;\n      flag_2 = '\\0';\n      flag_1 = '\\x01';\n    }\n    temp_variable_4 = (_DAT_40021000 >>\n            (leading_zeros_count((uint)(byte)(flag_1 << 6) << 0x18 | (uint)(byte)(flag_2 << 6) << 8) & 0x1fU)) <<\n            0x1f;\n    if ((int)temp_variable_4 < 0) {\nLAB_08002176:\n      _DAT_40021004 = _DAT_40021004 & 0xfffffffc | temp_variable_2;\n      temp_variable_1 = FUN_0800115c(temp_variable_1,temp_variable_4);\n      if (input_array[1] == 1) {\n        do {\n          if ((_DAT_40021004 & 0xc) == 4) goto LAB_080020ba;\n          temp_variable_3 = FUN_0800115c();\n        } while ((uint)(temp_variable_3 - temp_variable_1) < 0x1389);\n      }\n      else if (input_array[1] == 2) {\n        do {\n          if ((_DAT_40021004 & 0xc) == 8) goto LAB_080020ba;\n          temp_variable_3 = FUN_0800115c();\n        } while ((uint)(temp_variable_3 - temp_variable_1) < 0x1389);\n      }\n      else {\n        do {\n          if ((_DAT_40021004 & 0xc) == 0) goto LAB_080020ba;\n          temp_variable_3 = FUN_0800115c();\n        } while ((uint)(temp_variable_3 - temp_variable_1) < 0x1389);\n      }\n      return 3;\n    }\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800209c": "validate_and_adjust_param_0800209c",
                "param_1": "input_array",
                "param_2": "input_length",
                "LZCOUNT": "leading_zeros_count",
                "cVar1": "flag_1",
                "cVar2": "flag_2",
                "iVar3": "temp_variable_1",
                "uVar4": "temp_variable_2",
                "iVar5": "temp_variable_3",
                "uVar6": "temp_variable_4"
            },
            "calling": [
                "FUN_08004514"
            ],
            "called": [
                "FUN_08001104",
                "FUN_0800115c",
                "FUN_08002008"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002214": {
            "entrypoint": "0x08002214",
            "current_name": "get_data_08002214",
            "code": "\nundefined4 get_data_08002214(void)\n\n{\n  return DAT_200001bc;\n}\n\n",
            "renaming": {
                "FUN_08002214": "get_data_08002214"
            },
            "calling": [
                "FUN_08001104",
                "FUN_08004514"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002220": {
            "entrypoint": "0x08002220",
            "current_name": "get_shifted_value_08002220",
            "code": "\n\n\nuint get_shifted_value_08002220(void)\n\n{\n  return DAT_200001bc >> (&DAT_08007371)[(_DAT_40021004 & 0x700) >> 8];\n}\n\n",
            "renaming": {
                "FUN_08002220": "get_shifted_value_08002220"
            },
            "calling": [
                "FUN_08001754",
                "FUN_080025e8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002250": {
            "entrypoint": "0x08002250",
            "current_name": "extracted_value_from_binary_08002250",
            "code": "\n\n\nuint extractedValueFromBinary_08002250(void)\n\n{\n  return DAT_200001bc >> (&DAT_08007371)[(_DAT_40021004 & 0x3800) >> 0xb];\n}\n\n",
            "renaming": {
                "FUN_08002250": "extracted_value_from_binary_08002250"
            },
            "calling": [
                "FUN_080025e8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002280": {
            "entrypoint": "0x08002280",
            "current_name": "update_registers_08002280",
            "code": "\nvoid updateRegisters_08002280(int baseAddress,uint *values)\n\n{\n  uint updatedRegister1;\n  uint updatedRegister2;\n  uint updatedRegister3;\n  \n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) & 0xfffffffe;\n  updatedRegister2 = *(uint *)(baseAddress + 4);\n  updatedRegister3 = *values;\n  updatedRegister1 = *(uint *)(baseAddress + 0x20) & 0xfffffffd | values[2];\n  if (baseAddress == 0x40012c00) {\n    updatedRegister1 = (updatedRegister1 & 0xfffffff7 | values[3]) & 0xfffffffb;\n    updatedRegister2 = updatedRegister2 & 0xfffffcff | values[5] | values[6];\n  }\n  *(uint *)(baseAddress + 4) = updatedRegister2;\n  *(uint *)(baseAddress + 0x18) = *(uint *)(baseAddress + 0x18) & 0xffffff8c | updatedRegister3;\n  *(uint *)(baseAddress + 0x34) = values[1];\n  *(uint *)(baseAddress + 0x20) = updatedRegister1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002280": "update_registers_08002280",
                "param_1": "baseAddress",
                "param_2": "values",
                "uVar1": "updatedRegister1",
                "uVar2": "updatedRegister2",
                "uVar3": "updatedRegister3"
            },
            "calling": [
                "FUN_0800245c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080022d0": {
            "entrypoint": "0x080022d0",
            "current_name": "update_registers_080022d0",
            "code": "\nvoid updateRegisters_080022d0(int registerAddress,uint *registerValues)\n\n{\n  uint updatedRegister1;\n  uint updatedRegister2;\n  uint updatedRegister3;\n  \n  *(uint *)(registerAddress + 0x20) = *(uint *)(registerAddress + 0x20) & 0xfffffeff;\n  updatedRegister2 = *(uint *)(registerAddress + 4);\n  updatedRegister3 = *registerValues;\n  updatedRegister1 = *(uint *)(registerAddress + 0x20) & 0xfffffdff | registerValues[2] << 8;\n  if (registerAddress == 0x40012c00) {\n    updatedRegister1 = (updatedRegister1 & 0xfffff7ff | registerValues[3] << 8) & 0xfffffbff;\n    updatedRegister2 = updatedRegister2 & 0xffffcfff | (registerValues[5] | registerValues[6]) << 4;\n  }\n  *(uint *)(registerAddress + 4) = updatedRegister2;\n  *(uint *)(registerAddress + 0x1c) = *(uint *)(registerAddress + 0x1c) & 0xffffff8c | updatedRegister3;\n  *(uint *)(registerAddress + 0x3c) = registerValues[1];\n  *(uint *)(registerAddress + 0x20) = updatedRegister1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080022d0": "update_registers_080022d0",
                "param_1": "registerAddress",
                "param_2": "registerValues",
                "uVar1": "updatedRegister1",
                "uVar2": "updatedRegister2",
                "uVar3": "updatedRegister3"
            },
            "calling": [
                "FUN_0800245c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002324": {
            "entrypoint": "0x08002324",
            "current_name": "update_memory_values_08002324",
            "code": "\nvoid updateMemoryValues_08002324(int memoryAddress,int *paramArray)\n\n{\n  uint value1;\n  int value2;\n  int value3;\n  int constantValue;\n  \n  *(uint *)(memoryAddress + 0x20) = *(uint *)(memoryAddress + 0x20) & 0xffffefff;\n  value1 = *(uint *)(memoryAddress + 4);\n  value2 = *paramArray;\n  value3 = paramArray[2];\n  constantValue = 0x40012c00;\n  if (memoryAddress == 0x40012c00) {\n    constantValue = paramArray[5];\n    value1 = value1 & 0xffffbfff;\n  }\n  if (memoryAddress == 0x40012c00) {\n    value1 = value1 | constantValue << 6;\n  }\n  *(uint *)(memoryAddress + 4) = value1;\n  *(uint *)(memoryAddress + 0x1c) = *(uint *)(memoryAddress + 0x1c) & 0xffff8cff | value2 << 8;\n  *(int *)(memoryAddress + 0x40) = paramArray[1];\n  *(uint *)(memoryAddress + 0x20) = *(uint *)(memoryAddress + 0x20) & 0xffffdfff | value3 << 0xc;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002324": "update_memory_values_08002324",
                "param_1": "memoryAddress",
                "param_2": "paramArray",
                "uVar1": "value1",
                "iVar2": "value2",
                "iVar3": "value3",
                "iVar4": "constantValue",
                "param_2[2]": "paramArray[2]",
                "param_2[5]": "paramArray[5]",
                "param_2[1]": "paramArray[1]"
            },
            "calling": [
                "FUN_0800245c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002368": {
            "entrypoint": "0x08002368",
            "current_name": "update_memory_contents_08002368",
            "code": "\nvoid updateMemoryContents_08002368(uint *memoryBlock1,uint *memoryBlock2)\n\n{\n  uint updatedValue;\n  \n  updatedValue = *memoryBlock1;\n  if (((((memoryBlock1 == (uint *)0x40012c00) || (memoryBlock1 == (uint *)0x40000000)) ||\n       (memoryBlock1 == (uint *)0x40000400)) || (memoryBlock1 == (uint *)0x40000800)) &&\n     (((updatedValue = updatedValue & 0xffffff8f | memoryBlock2[1], memoryBlock1 == (uint *)0x40012c00 ||\n       (memoryBlock1 == (uint *)0x40000000)) ||\n      ((memoryBlock1 == (uint *)0x40000400 || (memoryBlock1 == (uint *)0x40000800)))))) {\n    updatedValue = updatedValue & 0xfffffcff | memoryBlock2[3];\n  }\n  *memoryBlock1 = updatedValue;\n  memoryBlock1[0xb] = memoryBlock2[2];\n  memoryBlock1[10] = *memoryBlock2;\n  updatedValue = 0x40012c00;\n  if (memoryBlock1 == (uint *)0x40012c00) {\n    updatedValue = memoryBlock2[4];\n  }\n  if (memoryBlock1 == (uint *)0x40012c00) {\n    memoryBlock1[0xc] = updatedValue;\n  }\n  memoryBlock1[5] = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002368": "update_memory_contents_08002368",
                "param_1": "memoryBlock1",
                "param_2": "memoryBlock2",
                "uVar1": "updatedValue"
            },
            "calling": [
                "FUN_080023d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080023d0": {
            "entrypoint": "0x080023d0",
            "current_name": "validate_and_process_param_080023d0",
            "code": "\nundefined4 validate_and_process_param_080023d0(undefined4 *param)\n\n{\n  if (param != (undefined4 *)0x0) {\n    if (*(char *)((int)param + 0x39) == '\\0') {\n      *(undefined *)(param + 0xe) = 0;\n      FUN_08004d8c();\n    }\n    *(undefined *)((int)param + 0x39) = 2;\n    FUN_08002368(*param,param + 1);\n    *(undefined *)((int)param + 0x39) = 1;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080023d0": "validate_and_process_param_080023d0",
                "param_1": "param"
            },
            "calling": [
                "FUN_0800458c"
            ],
            "called": [
                "FUN_08002368",
                "FUN_08004d8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002404": {
            "entrypoint": "0x08002404",
            "current_name": "update_param_08002404",
            "code": "\nvoid updateParam_08002404(int paramAddr,int *paramData)\n\n{\n  uint updatedVal1;\n  uint updatedVal2;\n  int inputVal;\n  \n  *(uint *)(paramAddr + 0x20) = *(uint *)(paramAddr + 0x20) & 0xffffffef;\n  updatedVal2 = *(uint *)(paramAddr + 4);\n  inputVal = *paramData;\n  updatedVal1 = *(uint *)(paramAddr + 0x20) & 0xffffffdf | paramData2 << 4;\n  if (paramAddr == 0x40012c00) {\n    updatedVal1 = (updatedVal1 & 0xffffff7f | paramData3 << 4) & 0xffffffbf;\n    updatedVal2 = updatedVal2 & 0xfffff3ff | (paramData5 | paramData6) << 2;\n  }\n  *(uint *)(paramAddr + 4) = updatedVal2;\n  *(uint *)(paramAddr + 0x18) = *(uint *)(paramAddr + 0x18) & 0xffff8cff | inputVal << 8;\n  *(int *)(paramAddr + 0x38) = paramData[1];\n  *(uint *)(paramAddr + 0x20) = updatedVal1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002404": "update_param_08002404",
                "param_1": "paramAddr",
                "param_2": "paramData",
                "uVar1": "updatedVal1",
                "uVar2": "updatedVal2",
                "iVar3": "inputVal",
                "param_2[2]": "paramData2",
                "param_2[3]": "paramData3",
                "param_2[5]": "paramData5",
                "param_2[6]": "paramData6"
            },
            "calling": [
                "FUN_0800245c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800245c": {
            "entrypoint": "0x0800245c",
            "current_name": "initialize_flags_0800245c",
            "code": "\nvoid initializeFlags_0800245c(int *data,undefined4 size,undefined4 option)\n\n{\n  int index1;\n  int index2;\n  int index3;\n  int index4;\n  int value;\n  uint flags1;\n  int ptr;\n  \n  if (*(char *)(data + 0xe) == '\\x01') {\n    return;\n  }\n  *(undefined *)((int)data + 0x39) = 2;\n  *(undefined *)(data + 0xe) = 1;\n  switch(option) {\n  case 0:\n    FUN_08002280(*data);\n    ptr = *data;\n    flags1 = *(uint *)(index1 + 0x10);\n    *(uint *)(ptr + 0x18) = *(uint *)(ptr + 0x18) | 8;\n    *(uint *)(ptr + 0x18) = *(uint *)(ptr + 0x18) & 0xfffffffb;\n    flags1 = *(uint *)(ptr + 0x18) | flags1;\n    break;\n  default:\n    goto defaultCase;\n  case 4:\n    FUN_08002404(*data);\n    ptr = *data;\n    value = *(int *)(index2 + 0x10);\n    *(uint *)(ptr + 0x18) = *(uint *)(ptr + 0x18) | 0x800;\n    *(uint *)(ptr + 0x18) = *(uint *)(ptr + 0x18) & 0xfffffbff;\n    flags1 = *(uint *)(ptr + 0x18) | value << 8;\n    break;\n  case 8:\n    FUN_080022d0(*data);\n    ptr = *data;\n    flags1 = *(uint *)(index3 + 0x10);\n    *(uint *)(ptr + 0x1c) = *(uint *)(ptr + 0x1c) | 8;\n    *(uint *)(ptr + 0x1c) = *(uint *)(ptr + 0x1c) & 0xfffffffb;\n    flags1 = *(uint *)(ptr + 0x1c) | flags1;\n    goto LAB_080024fa;\n  case 0xc:\n    FUN_08002324(*data);\n    ptr = *data;\n    value = *(int *)(index4 + 0x10);\n    *(uint *)(ptr + 0x1c) = *(uint *)(ptr + 0x1c) | 0x800;\n    *(uint *)(ptr + 0x1c) = *(uint *)(ptr + 0x1c) & 0xfffffbff;\n    flags1 = *(uint *)(ptr + 0x1c) | value << 8;\nLAB_080024fa:\n    *(uint *)(ptr + 0x1c) = flags1;\n    goto defaultCase;\n  }\n  *(uint *)(ptr + 0x18) = flags1;\ndefaultCase:\n  *(undefined *)((int)data + 0x39) = 1;\n  *(undefined *)(data + 0xe) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800245c": "initialize_flags_0800245c",
                "param_1": "data",
                "param_2": "size",
                "param_3": "option",
                "extraout_r1": "index1",
                "extraout_r1_00": "index2",
                "extraout_r1_01": "index3",
                "extraout_r1_02": "index4",
                "iVar1": "value",
                "uVar2": "flags1",
                "iVar3": "ptr",
                "switchD_0800247a_caseD_1": "defaultCase"
            },
            "calling": [
                "FUN_0800458c"
            ],
            "called": [
                "FUN_080022d0",
                "FUN_08002324",
                "FUN_08002404",
                "FUN_08002280"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002520": {
            "entrypoint": "0x08002520",
            "current_name": "update_bit_value_08002520",
            "code": "\nvoid updateBitValue_08002520(int ptr_array,uint bit_position,int new_bit_value)\n\n{\n  *(uint *)(ptr_array + 0x20) = *(uint *)(ptr_array + 0x20) & ~(1 << (bit_position & 0xff));\n  *(uint *)(ptr_array + 0x20) = new_bit_value << (bit_position & 0xff) | *(uint *)(ptr_array + 0x20);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002520": "update_bit_value_08002520",
                "param_1": "ptr_array",
                "param_2": "bit_position",
                "param_3": "new_bit_value"
            },
            "calling": [
                "FUN_08002538"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002538": {
            "entrypoint": "0x08002538",
            "current_name": "initialize_memory_08002538",
            "code": "\nundefined4 initializeMemory_08002538(uint **memoryPtr,undefined4 value)\n\n{\n  uint defaultValue;\n  uint *ptr;\n  \n  FUN_08002520(*memoryPtr,value,1);\n  ptr = *memoryPtr;\n  defaultValue = 0x40012c00;\n  if (ptr == (uint *)0x40012c00) {\n    defaultValue = memoryStatus | 0x8000;\n  }\n  if (ptr == (uint *)0x40012c00) {\n    ptr[0x11] = defaultValue;\n  }\n  *ptr = *ptr | 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002538": "initialize_memory_08002538",
                "param_1": "memoryPtr",
                "param_2": "value",
                "uVar1": "defaultValue",
                "puVar2": "ptr",
                "uRam40012c44": "memoryStatus"
            },
            "calling": [
                "FUN_08003ff4"
            ],
            "called": [
                "FUN_08002520"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002564": {
            "entrypoint": "0x08002564",
            "current_name": "validate_and_set_bitmask_08002564",
            "code": "\nundefined4 validate_and_set_bitmask_08002564(int *input_array,uint *bitmask_array)\n\n{\n  undefined4 result;\n  \n  result = 2;\n  if (*(char *)(input_array + 0xe) != '\\x01') {\n    *(undefined *)((int)input_array + 0x39) = 2;\n    *(uint *)(*input_array + 0x44) =\n         *bitmask_array | bitmask_array[1] | bitmask_array[2] | bitmask_array[3] | bitmask_array[4] | bitmask_array[5] | bitmask_array[6];\n    *(undefined *)((int)input_array + 0x39) = 1;\n    result = 0;\n    *(undefined *)(input_array + 0xe) = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002564": "validate_and_set_bitmask_08002564",
                "param_1": "input_array",
                "param_2": "bitmask_array",
                "uVar1": "result"
            },
            "calling": [
                "FUN_0800458c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080025a4": {
            "entrypoint": "0x080025a4",
            "current_name": "update_configuration_080025a4",
            "code": "\nundefined4 updateConfiguration_080025a4(int *configPtr,uint *dataPtr)\n\n{\n  uint dataPtrSecondValue;\n  undefined4 returnValue;\n  int configValue;\n  uint dataPtrFirstValue;\n  \n  returnValue = 2;\n  if (*(char *)(configPtr + 0xe) != '\\x01') {\n    *(undefined *)((int)configPtr + 0x39) = 2;\n    configValue = *configPtr;\n    dataPtrFirstValue = *dataPtr;\n    dataPtrSecondValue = dataPtr[1];\n    *(uint *)(configValue + 4) = *(uint *)(configValue + 4) & 0xffffff8f;\n    *(uint *)(configValue + 4) = *(uint *)(configValue + 4) | dataPtrFirstValue;\n    *(uint *)(configValue + 8) = *(uint *)(configValue + 8) & 0xffffff7f;\n    *(uint *)(configValue + 8) = *(uint *)(configValue + 8) | dataPtrSecondValue;\n    *(undefined *)((int)configPtr + 0x39) = 1;\n    returnValue = 0;\n    *(undefined *)(configPtr + 0xe) = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_080025a4": "update_configuration_080025a4",
                "param_1": "configPtr",
                "param_2": "dataPtr",
                "uVar1": "dataPtrSecondValue",
                "uVar2": "returnValue",
                "iVar3": "configValue",
                "uVar4": "dataPtrFirstValue"
            },
            "calling": [
                "FUN_0800458c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080025e8": {
            "entrypoint": "0x080025e8",
            "current_name": "update_configuration_080025e8",
            "code": "\nvoid updateConfiguration_080025e8(int *configuration)\n\n{\n  int randomValue1;\n  int randomValue2;\n  uint mask;\n  int computedValue1;\n  int param1Copy;\n  int baseAddress;\n  \n  baseAddress = *configuration;\n  mask = configuration[4];\n  *(uint *)(baseAddress + 0x10) = *(uint *)(baseAddress + 0x10) & 0xffffcfff | configuration[3];\n  *(uint *)(baseAddress + 0xc) = configuration[2] | mask | configuration[5] | *(uint *)(baseAddress + 0xc) & 0xffffe9f3;\n  *(uint *)(baseAddress + 0x14) = *(uint *)(baseAddress + 0x14) & 0xfffffcff | configuration[6];\n  if (baseAddress == 0x40013800) {\n    randomValue1 = FUN_08002250();\n    computedValue1 = (int)(((ulonglong)(uint)(randomValue1 * 0x19) / (ulonglong)(uint)(configuration[1] << 2)) / 100);\n    randomValue1 = FUN_08002250();\n    param1Copy = configuration[1];\n    randomValue2 = FUN_08002250();\n    randomValue2 = (uint)(randomValue1 * 0x19) / (uint)(param1Copy << 2) +\n            (int)(((ulonglong)(uint)(randomValue2 * 0x19) / (ulonglong)(uint)(configuration[1] << 2)) / 100) *\n            -100;\n    randomValue1 = FUN_08002250();\n    mask = (uint)(randomValue1 * 0x19) / (uint)(configuration[1] << 2);\n    randomValue1 = FUN_08002250();\n  }\n  else {\n    randomValue1 = FUN_08002220();\n    computedValue1 = (int)(((ulonglong)(uint)(randomValue1 * 0x19) / (ulonglong)(uint)(configuration[1] << 2)) / 100);\n    randomValue1 = FUN_08002220();\n    param1Copy = configuration[1];\n    randomValue2 = FUN_08002220();\n    randomValue2 = (uint)(randomValue1 * 0x19) / (uint)(param1Copy << 2) +\n            (int)(((ulonglong)(uint)(randomValue2 * 0x19) / (ulonglong)(uint)(configuration[1] << 2)) / 100) *\n            -100;\n    randomValue1 = FUN_08002220();\n    mask = (uint)(randomValue1 * 0x19) / (uint)(configuration[1] << 2);\n    randomValue1 = FUN_08002220();\n  }\n  *(uint *)(baseAddress + 8) =\n       (((mask + (int)(((ulonglong)(uint)(randomValue1 * 0x19) / (ulonglong)(uint)(configuration[1] << 2)) / 100\n                       ) * -100) * 0x10 + 0x32) / 100 & 0xf | (randomValue2 * 0x10 + 0x32U) / 100 & 0xf0) +\n       computedValue1 * 0x10;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080025e8": "update_configuration_080025e8",
                "param_1": "configuration",
                "iVar1": "randomValue1",
                "iVar2": "randomValue2",
                "uVar3": "mask",
                "iVar4": "computedValue1",
                "iVar5": "param1Copy",
                "iVar6": "baseAddress"
            },
            "calling": [
                "FUN_08002724"
            ],
            "called": [
                "FUN_08002220",
                "FUN_08002250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002724": {
            "entrypoint": "0x08002724",
            "current_name": "initialize_param_08002724",
            "code": "\nundefined4 initializeParam_08002724(int *param)\n\n{\n  int var1;\n  \n  if (param != (int *)0x0) {\n    if (*(char *)((int)param + 0x39) == '\\0') {\n      *(undefined *)(param + 0xe) = 0;\n      FUN_08004e7c();\n    }\n    *(undefined *)((int)param + 0x39) = 2;\n    *(uint *)(*param + 0xc) = *(uint *)(*param + 0xc) & 0xffffdfff;\n    FUN_080025e8(param);\n    var1 = *param;\n    *(uint *)(var1 + 0x10) = *(uint *)(var1 + 0x10) & 0xffffb7ff;\n    *(uint *)(var1 + 0x14) = *(uint *)(var1 + 0x14) & 0xffffffd5;\n    *(uint *)(var1 + 0xc) = *(uint *)(var1 + 0xc) | 0x2000;\n    param[0xf] = 0;\n    *(undefined *)((int)param + 0x39) = 1;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08002724": "initialize_param_08002724",
                "param_1": "param",
                "iVar1": "var1"
            },
            "calling": [
                "FUN_0800458c"
            ],
            "called": [
                "FUN_08004e7c",
                "FUN_080025e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800290a": {
            "entrypoint": "0x0800290a",
            "current_name": "FUNC_0800290a",
            "code": "\nvoid FUNC_0800290a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800290a": "FUNC_0800290a"
            },
            "calling": [
                "FUN_0800299a"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800290c": {
            "entrypoint": "0x0800290c",
            "current_name": "parse_data_0800290c",
            "code": "\nundefined4 parseData_0800290c(int *data)\n\n{\n  byte flag;\n  int ptr;\n  uint value;\n  undefined4 uValue;\n  short count;\n  ushort *ptr1;\n  ushort *ptr2;\n  bool isFlag2;\n  \n  if ((*(byte *)((int)data + 0x39) & 0xef) != 0x22) {\n    return 2;\n  }\n  ptr = *data;\n  ptr1 = (ushort *)data[10];\n  if (data[2] == 0x1000) {\n    if (data[4] == 0) {\n      ptr2 = ptr1 + 1;\n      *ptr1 = (ushort)((uint)(*(int *)(ptr + 4) << 0x17) >> 0x17);\n    }\n    else {\n      ptr2 = (ushort *)((int)ptr1 + 1);\n      *ptr1 = (ushort)*(int *)(ptr + 4) & 0xff;\n    }\n    data[10] = (int)ptr2;\n  }\n  else {\n    if (data[4] == 0) {\n      flag = (byte)*(undefined4 *)(ptr + 4);\n      data[10] = (int)ptr1 + 1;\n    }\n    else {\n      uValue = *(undefined4 *)(ptr + 4);\n      data[10] = (int)ptr1 + 1;\n      flag = (byte)uValue & 0x7f;\n    }\n    *(byte *)ptr1 = flag;\n  }\n  count = *(short *)((int)data + 0x2e) + -1;\n  *(short *)((int)data + 0x2e) = count;\n  if (count == 0) {\n    ptr = *data;\n    *(uint *)(ptr + 0xc) = *(uint *)(ptr + 0xc) & 0xffffffdf;\n    isFlag2 = *(char *)((int)data + 0x39) != '2';\n    if (isFlag2) {\n      value = *(uint *)(ptr + 0xc) & 0xfffffeff;\n    }\n    else {\n      ptr = 0x12;\n      value = 0x32;\n    }\n    if (isFlag2) {\n      *(uint *)(ptr + 0xc) = value;\n      value = *(uint *)(ptr + 0x14) & 0xfffffffe;\n    }\n    if (isFlag2) {\n      *(uint *)(ptr + 0x14) = value;\n      ptr = 1;\n    }\n    *(char *)((int)data + 0x39) = (char)ptr;\n    FUN_08004c30();\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800290c": "parse_data_0800290c",
                "param_1": "data",
                "bVar1": "flag",
                "iVar2": "ptr",
                "uVar3": "value",
                "uVar4": "uValue",
                "sVar5": "count",
                "puVar6": "ptr1",
                "puVar7": "ptr2",
                "bVar8": "isFlag2"
            },
            "calling": [
                "FUN_0800299a"
            ],
            "called": [
                "FUN_08004c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002998": {
            "entrypoint": "0x08002998",
            "current_name": "FUNC_08002998",
            "code": "\nvoid FUNC_08002998(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002998": "FUNC_08002998"
            },
            "calling": [
                "FUN_0800299a"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800299a": {
            "entrypoint": "0x0800299a",
            "current_name": "process_data_0800299a",
            "code": "\nvoid processData_0800299a(uint **data)\n\n{\n  uint var1;\n  short var2;\n  uint var3;\n  uint *var4;\n  undefined var5;\n  uint *var6;\n  uint var7;\n  bool var8;\n  \n  var6 = *data;\n  var3 = *var6;\n  var1 = var6[3];\n  if ((var3 & 0xf) == 0) {\n    if (((int)(var3 << 0x1a) < 0) && ((int)(var1 << 0x1a) < 0)) {\n      FUN_0800290c();\n      return;\n    }\n  }\n  else {\n    var7 = var6[5] & 1;\n    if ((var7 != 0) || ((var1 & 0x120) != 0)) {\n      var6 = (uint *)(var3 << 0x1f);\n      if ((int)var6 < 0) {\n        var8 = (int)(var1 << 0x17) < 0;\n        if (var8) {\n          var6 = (uint *)((uint)data[0xf] | 1);\n        }\n        if (var8) {\n          data[0xf] = var6;\n        }\n      }\n      if (((int)(var3 << 0x1d) < 0) && (var7 != 0)) {\n        data[0xf] = (uint *)((uint)data[0xf] | 2);\n      }\n      if (((int)(var3 << 0x1e) < 0) && (var7 != 0)) {\n        data[0xf] = (uint *)((uint)data[0xf] | 4);\n      }\n      if (((int)(var3 << 0x1c) < 0) && (var7 != 0)) {\n        data[0xf] = (uint *)((uint)data[0xf] | 8);\n      }\n      if (data[0xf] == (uint *)0x0) {\n        return;\n      }\n      if (((int)(var3 << 0x1a) < 0) && ((int)(var1 << 0x1a) < 0)) {\n        FUN_0800290c(data);\n      }\n      var6 = *data;\n      if ((-1 < (int)data[0xf] << 0x1c) && ((var6[5] & 0x40) == 0)) {\n        FUNC_08002998(data);\n        data[0xf] = (uint *)0x0;\n        return;\n      }\n      var6[3] = var6[3] & 0xfffffedf;\n      var6[5] = var6[5] & 0xfffffffe;\n      *(undefined *)((int)data + 0x39) = 1;\n      FUNC_08002998(data);\n      return;\n    }\n  }\n  if (((int)(var3 << 0x18) < 0) && ((int)(var1 << 0x18) < 0)) {\n    if ((*(byte *)((int)data + 0x39) & 0xdf) == 0x12) {\n      var4 = data[8];\n      if (data[2] == (uint *)0x1000) {\n        var6[1] = *(ushort *)var4 & 0x1ff;\n        if (data[4] == (uint *)0x0) {\n          var4 = (uint *)((int)var4 + 2);\n        }\n        else {\n          var4 = (uint *)((int)var4 + 1);\n        }\n        data[8] = var4;\n      }\n      else {\n        data[8] = (uint *)((int)var4 + 1);\n        var6[1] = (uint)*(byte *)var4;\n      }\n      var2 = *(short *)((int)data + 0x26) + -1;\n      *(short *)((int)data + 0x26) = var2;\n      if (var2 == 0) {\n        var6[3] = var6[3] & 0xffffff7f;\n        var6[3] = var6[3] | 0x40;\n        return;\n      }\n    }\n  }\n  else if (((int)(var3 << 0x19) < 0) && ((int)(var1 << 0x19) < 0)) {\n    var6[3] = var6[3] & 0xffffffbf;\n    if (*(char *)((int)data + 0x39) == '2') {\n      var5 = 0x22;\n    }\n    else {\n      var5 = 1;\n    }\n    *(undefined *)((int)data + 0x39) = var5;\n    FUNC_0800290a(data);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800299a": "process_data_0800299a",
                "param_1": "data",
                "uVar1": "var1",
                "sVar2": "var2",
                "uVar3": "var3",
                "puVar4": "var4",
                "uVar5": "var5",
                "puVar6": "var6",
                "uVar7": "var7",
                "bVar8": "var8"
            },
            "calling": [],
            "called": [
                "FUN_08002998",
                "FUN_0800290a",
                "FUN_0800290c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ad0": {
            "entrypoint": "0x08002ad0",
            "current_name": "initialize_mpu9250_08002ad0",
            "code": "\nvoid initializeMPU9250_08002ad0(void)\n\n{\n  FUN_0800407c(0xd0,0x75,\"../Src/MPU9250.c\",0x3b);\n  FUN_0800403c(0xd0,0x6b,0x80,1);\n  FUN_0800403c(0xd0,0x6b,1);\n  FUN_0800403c(0xd0,0x6c,0,1);\n  FUN_0800403c(0xd0,0x19,0,1);\n  FUN_0800403c(0xd0,0x1d,3,1);\n  FUN_0800403c(0xd0,0x1a,3,1);\n  FUN_0800403c(0xd0,0x1b,0x10,1);\n  FUN_0800403c(0xd0,0x1c,8,1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ad0": "initialize_mpu9250_08002ad0"
            },
            "calling": [
                "FUN_08002ea0"
            ],
            "called": [
                "FUN_0800407c",
                "FUN_0800403c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002b48": {
            "entrypoint": "0x08002b48",
            "current_name": "initialize_mpu9250_08002b48",
            "code": "\nvoid initializeMPU9250_08002b48(void)\n\n{\n  undefined4 returnValue;\n  uint inputValue;\n  int tempVar1;\n  int tempVar2;\n  undefined4 result1;\n  undefined4 result2;\n  \n  result1 = 0;\n  result2 = inputValue & 0xffff0000;\n  FUN_080040e8(0xd0,0x3b,&result1,6,\"../Src/MPU9250.c\",0x58);\n  DAT_200002f6 = CONCAT11(result1._2_1_,result1._3_1_);\n  DAT_200002f4 = CONCAT11((undefined)result1,result1._1_1_);\n  DAT_200002f8 = CONCAT11((undefined)result2,result2._1_1_);\n  tempVar2 = (int)DAT_200002f6;\n  tempVar1 = (int)DAT_200002f8;\n  returnValue = FUN_08000c44();\n  returnValue = FUN_08000cec(returnValue,0x40800000);\n  DAT_200002d0 = FUN_08000cec(returnValue,0x38000000);\n  returnValue = FUN_08000c44(tempVar2);\n  returnValue = FUN_08000cec(returnValue,0x40800000);\n  DAT_200002d4 = FUN_08000cec(returnValue,0x38000000);\n  returnValue = FUN_08000c44(tempVar1);\n  returnValue = FUN_08000cec(returnValue,0x40800000);\n  DAT_200002d8 = FUN_08000cec(returnValue,0x38000000);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002b48": "initialize_mpu9250_08002b48",
                "in_r3": "inputValue",
                "iVar2": "tempVar1",
                "iVar3": "tempVar2",
                "local_18": "result1",
                "local_14": "result2",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08002f28"
            ],
            "called": [
                "FUN_08000c44",
                "FUN_08000cec",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002bf0": {
            "entrypoint": "0x08002bf0",
            "current_name": "initialize_mpu9250_08002bf0",
            "code": "\nvoid initializeMPU9250_08002bf0(void)\n\n{\n  undefined4 result;\n  int numericValue2;\n  int numericValue1;\n  undefined4 registerValue;\n  undefined2 version;\n  \n  registerValue = 0;\n  version = 0;\n  FUN_080040e8(0xd0,0x43,&registerValue,6,\"../Src/MPU9250.c\",0x7b);\n  DAT_200002c0 = CONCAT11(registerValue._2_1_,registerValue._3_1_);\n  DAT_200002be = CONCAT11((undefined)registerValue,registerValue._1_1_);\n  DAT_200002c2 = CONCAT11((undefined)version,version._1_1_);\n  numericValue1 = (int)DAT_200002c0;\n  numericValue2 = (int)DAT_200002c2;\n  result = FUN_08000c44();\n  result = FUN_08000cec(result,0x447a0000);\n  result = FUN_08000cec(result,0x38000000);\n  DAT_200002c4 = FUN_08000ad8(result,DAT_20000000);\n  result = FUN_08000c44(numericValue1);\n  result = FUN_08000cec(result,0x447a0000);\n  result = FUN_08000cec(result,0x38000000);\n  DAT_200002c8 = FUN_08000ad8(result,DAT_20000004);\n  result = FUN_08000c44(numericValue2);\n  result = FUN_08000cec(result,0x447a0000);\n  result = FUN_08000cec(result,0x38000000);\n  DAT_200002cc = FUN_08000ad8(result,DAT_20000008);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002bf0": "initialize_mpu9250_08002bf0",
                "local_20": "registerValue",
                "local_1c": "version",
                "iVar3": "numericValue1",
                "iVar2": "numericValue2",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08002f28"
            ],
            "called": [
                "FUN_08000ad8",
                "FUN_08000c44",
                "FUN_08000cec",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002cb0": {
            "entrypoint": "0x08002cb0",
            "current_name": "initialize_mpu9250_08002cb0",
            "code": "\nvoid initializeMPU9250_08002cb0(undefined4 param_1,undefined4 param_2,undefined4 param_3,uint initialValue)\n\n{\n  undefined4 result;\n  uint value;\n  \n  value = initialValue;\n  FUN_0800403c(0xd0,0x37,0x22,1,param_1,param_2,param_3);\n  FUN_0800403c(0xd0,0x6a,1);\n  FUN_0800407c(0x18,0,\"../Src/MPU9250.c\",0xad);\n  FUN_0800403c(0x18,0xb,1);\n  FUN_0800403c(0x18,10,0,1);\n  FUN_0800403c(0x18,10,0xf,1);\n  FUN_080040e8(0x18,0x10,&value,3,\"../Src/MPU9250.c\",0xb6);\n  result = FUN_08000c44((value & 0xff) - 0x80);\n  result = FUN_08000cec(result,0x3b800000);\n  DAT_200002e8 = FUN_08000adc(result,0x3f800000);\n  result = FUN_08000c44((value >> 8 & 0xff) - 0x80);\n  result = FUN_08000cec(result,0x3b800000);\n  DAT_200002ec = FUN_08000adc(result,0x3f800000);\n  result = FUN_08000c44((value >> 0x10 & 0xff) - 0x80);\n  result = FUN_08000cec(result,0x3b800000);\n  DAT_200002f0 = FUN_08000adc(result,0x3f800000);\n  FUN_0800403c(0x18,10,0,1);\n  FUN_0800403c(0x18,10,0x16,1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002cb0": "initialize_mpu9250_08002cb0",
                "param_4": "initialValue",
                "uVar1": "result",
                "local_c": "value"
            },
            "calling": [
                "FUN_08002ea0"
            ],
            "called": [
                "FUN_0800407c",
                "FUN_0800403c",
                "FUN_08000c44",
                "FUN_08000cec",
                "FUN_080040e8",
                "FUN_08000adc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002d88": {
            "entrypoint": "0x08002d88",
            "current_name": "initialize_mpu9250_08002d88",
            "code": "\nvoid initializeMPU9250_08002d88(undefined4 param1,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int status;\n  undefined4 result;\n  undefined4 temp;\n  int temp2;\n  undefined2 value1;\n  undefined value2;\n  undefined value3;\n  undefined value4;\n  undefined value5;\n  byte value6;\n  undefined uStack_21;\n  \n  uStack_21 = (undefined)((uint)param4 >> 0x18);\n  value1 = 0;\n  value2 = 0;\n  value3 = 0;\n  value4 = 0;\n  value5 = 0;\n  value6 = 0;\n  status = FUN_0800407c(0x18,2,\"../Src/MPU9250.c\",0xd7,param1,param2);\n  if (status << 0x1f < 0) {\n    FUN_080040e8(0x18,3,&value1,7,\"../Src/MPU9250.c\",0xda);\n    temp = DAT_2000001c;\n    if ((int)((uint)value6 << 0x1c) < 0) {\n      DAT_200013b9._2_2_ = DAT_200013b9._2_2_ + 1;\n    }\n    else {\n      DAT_200002ba = CONCAT11(value3,value2);\n      DAT_200002bc = CONCAT11(value5,value4);\n      temp2 = (int)DAT_200002ba;\n      status = (int)DAT_200002bc;\n      DAT_200002b8 = value1;\n      result = FUN_08000c44();\n      result = FUN_08000cec(result,temp);\n      result = FUN_08000cec(result,DAT_200002e8);\n      result = FUN_08000ad8(result,DAT_20000020);\n      DAT_200002dc = FUN_08000cec(result,DAT_2000002c);\n      result = FUN_08000c44(temp2);\n      result = FUN_08000cec(result,temp);\n      result = FUN_08000cec(result,DAT_200002ec);\n      result = FUN_08000ad8(result,DAT_20000024);\n      DAT_200002e0 = FUN_08000cec(result,DAT_20000030);\n      result = FUN_08000c44(status);\n      temp = FUN_08000cec(result,temp);\n      temp = FUN_08000cec(temp,DAT_200002f0);\n      temp = FUN_08000ad8(temp,DAT_20000028);\n      DAT_200002e4 = FUN_08000cec(temp,DAT_20000034);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002d88": "initialize_mpu9250_08002d88",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "status",
                "uVar2": "result",
                "uVar3": "temp",
                "iVar4": "temp2",
                "local_28": "value1",
                "uStack_26": "value2",
                "uStack_25": "value3",
                "local_24": "value4",
                "local_23": "value5",
                "local_22": "value6"
            },
            "calling": [
                "FUN_08002f28"
            ],
            "called": [
                "FUN_0800407c",
                "FUN_08000ad8",
                "FUN_08000c44",
                "FUN_08000cec",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ea0": {
            "entrypoint": "0x08002ea0",
            "current_name": "initialize_08002ea0",
            "code": "\nvoid initialize_08002ea0(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  undefined4 extra_output;\n  \n  FUN_08002ad0();\n  FUN_08002cb0();\n  FUN_08003314(0x3f19999a);\n  FUN_08003320(0,extra_output,arg3,arg4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ea0": "initialize_08002ea0",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "extraout_r1": "extra_output"
            },
            "calling": [
                "FUN_08004194"
            ],
            "called": [
                "FUN_08002ad0",
                "FUN_08002cb0",
                "FUN_08003320",
                "FUN_08003314"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ec0": {
            "entrypoint": "0x08002ec0",
            "current_name": "calculate_result_08002ec0",
            "code": "\nvoid calculateResult_08002ec0(void)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  \n  uVar2 = DAT_2000024c;\n  uVar3 = DAT_20000010;\n  uVar1 = FUN_08000ad8(0x3f800000,DAT_20000010);\n  uVar2 = FUN_08000cec(uVar1,uVar2);\n  uVar3 = FUN_08000cec(uVar3,DAT_2000000c);\n  DAT_2000000c = FUN_08000adc(uVar3,uVar2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ec0": "calculate_result_08002ec0"
            },
            "calling": [
                "FUN_08004a84",
                "FUN_08002f28"
            ],
            "called": [
                "FUN_08000ad8",
                "FUN_08000cec",
                "FUN_08000adc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ed4": {
            "entrypoint": "0x08002ed4",
            "current_name": "calculate_and_update_data_08002ed4",
            "code": "\nvoid calculateAndUpdateData_08002ed4(void)\n\n{\n  undefined4 result;\n  undefined4 constant;\n  undefined4 inputData;\n  \n  constant = DAT_20000248;\n  inputData = uRam20000018;\n  result = FUN_08000ad8(0x3f800000,uRam20000018);\n  constant = FUN_08000cec(result,constant);\n  inputData = FUN_08000cec(inputData,uRam20000014);\n  uRam20000014 = FUN_08000adc(inputData,constant);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ed4": "calculate_and_update_data_08002ed4",
                "uVar1": "result",
                "uVar2": "constant",
                "uVar3": "inputData"
            },
            "calling": [
                "FUN_08004a84",
                "FUN_08002f28"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ee8": {
            "entrypoint": "0x08002ee8",
            "current_name": "initialize_connection_08002ee8",
            "code": "\nvoid initializeConnection_08002ee8(void)\n\n{\n  undefined4 dataAddress;\n  int result;\n  \n  dataAddress = DAT_20000250;\n  result = FUN_08001050(DAT_20000250,0xc3340000);\n  if ((result != 0) && (result = FUN_08001028(dataAddress,0x42b40000), result != 0)) {\n    FUN_08000adc(dataAddress,0x42b40000);\n    return;\n  }\n  FUN_08000ad8(dataAddress,0x43870000);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ee8": "initialize_connection_08002ee8",
                "uVar1": "dataAddress",
                "iVar2": "result"
            },
            "calling": [
                "FUN_08004a84",
                "FUN_08002f28"
            ],
            "called": [
                "FUN_08000ad8",
                "FUN_08001050",
                "FUN_08001028",
                "FUN_08000adc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f28": {
            "entrypoint": "0x08002f28",
            "current_name": "initialize_system_08002f28",
            "code": "\n\n\nvoid initializeSystem_08002f28(void)\n\n{\n  undefined4 result;\n  \n  FUN_08002b48();\n  FUN_08002bf0();\n  FUN_08002d88();\n  DAT_20000258 = thunk_FUN_0800115c();\n  result = FUN_08000c3c(DAT_20000258 - DAT_20000254);\n  FUN_08000e54(result,0x447a0000);\n  FUN_08003320();\n  DAT_20000254 = DAT_20000258;\n  FUN_08003330(DAT_200002d4 + -0x80000000,DAT_200002d0 + -0x80000000,DAT_200002d8,DAT_200002c8,\n               DAT_200002c4,DAT_200002cc + -0x80000000,DAT_200002dc,DAT_200002e0,DAT_200002e4,\n               &DAT_20000248);\n  _DAT_2000142a = (undefined2)((uint)(int)DAT_200002f4 / 100);\n  _DAT_2000142e = (undefined2)((uint)(int)DAT_200002f8 / 100);\n  DAT_2000142c = (undefined2)((uint)(int)DAT_200002f6 / 100);\n  DAT_20001430 = DAT_200002be;\n  _DAT_20001432 = DAT_200002c0;\n  DAT_20001434 = DAT_200002c2;\n  _DAT_20001436 = DAT_200002b8;\n  DAT_20001438 = DAT_200002ba;\n  DAT_2000143a = DAT_200002bc;\n  result = FUN_08002ed4();\n  FUN_08000cec(result,0x41200000);\n  DAT_20001395._0_2_ = FUN_08001078();\n  result = FUN_08002ec0();\n  FUN_08000cec(result,0x41200000);\n  DAT_20001395._2_2_ = FUN_08001078();\n  FUN_08002ee8();\n  DAT_20001399 = FUN_08001078();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f28": "initialize_system_08002f28",
                "uVar1": "result"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_08000e54",
                "FUN_08000c3c",
                "FUN_08002ee8",
                "FUN_08000cec",
                "FUN_08003320",
                "FUN_08002bf0",
                "FUN_08002ed4",
                "FUN_08002b48",
                "thunk_FUN_0800115c",
                "FUN_08002d88",
                "FUN_08003330",
                "FUN_08001078",
                "FUN_08002ec0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003034": {
            "entrypoint": "0x08003034",
            "current_name": "convert_to_uint_08003034",
            "code": "\nuint convertToUint_08003034(undefined4 value1,undefined4 value2,undefined4 value3,undefined4 value4)\n\n{\n  undefined4 convertedValue;\n  \n  convertedValue = value4;\n  FUN_080040b8(0xee,0,&convertedValue,3,\"../Src/MS5611.c\",0x8c,value3);\n  return (uint)CONCAT12((undefined)convertedValue,CONCAT11(convertedValue._1_1_,convertedValue._2_1_));\n}\n\n",
            "renaming": {
                "FUN_08003034": "convert_to_uint_08003034",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4",
                "local_c": "convertedValue"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_080040b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003068": {
            "entrypoint": "0x08003068",
            "current_name": "get_data_value_08003068",
            "code": "\nundefined4 get_data_value_08003068(void)\n\n{\n  return DAT_200002fc;\n}\n\n",
            "renaming": {
                "FUN_08003068": "get_data_value_08003068"
            },
            "calling": [
                "FUN_08004a30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003298": {
            "entrypoint": "0x08003298",
            "current_name": "initialize_sensor_08003298",
            "code": "\nvoid initializeSensor_08003298(void)\n\n{\n  int index;\n  undefined byte1;\n  undefined byte2;\n  \n  index = 0;\n  FUN_0800403c(0xee,0x1e,1);\n  thunk_FUNC_08001168(10);\n  DAT_20000038 = 8;\n  do {\n    byte1 = 0;\n    byte2 = 0;\n    FUN_080040e8(0xee,index + 0xa0U & 0xffff,&byte1,2,\"../Src/MS5611.c\",0x7c);\n    *(ushort *)((int)&DAT_2000025c + index) = CONCAT11(byte1,byte2);\n    index = index + 2;\n  } while (index != 0x10);\n  index = 0;\n  do {\n    (&DAT_20000300)[index] = 0;\n    index = index + 1;\n  } while (index != 0x14);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003298": "initialize_sensor_08003298",
                "local_1c": "byte1",
                "local_1b": "byte2",
                "iVar1": "index"
            },
            "calling": [
                "FUN_08004194"
            ],
            "called": [
                "FUN_0800403c",
                "thunk_FUN_08001168",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003314": {
            "entrypoint": "0x08003314",
            "current_name": "initialize_data_08003314",
            "code": "\nvoid initializeData_08003314(undefined4 inputData)\n\n{\n  DAT_2000035c = inputData;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003314": "initialize_data_08003314",
                "param_1": "inputData"
            },
            "calling": [
                "FUN_08002ea0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003320": {
            "entrypoint": "0x08003320",
            "current_name": "initialize_data_08003320",
            "code": "\nvoid initializeData_08003320(undefined4 inputValue)\n\n{\n  DAT_20000360 = inputValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003320": "initialize_data_08003320",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08002ea0",
                "FUN_08002f28"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003330": {
            "entrypoint": "0x08003330",
            "current_name": "process_data_08003330",
            "code": "\nvoid processData_08003330(undefined4 input_param1,undefined4 input_param2,undefined4 input_param3,undefined4 output_param1,\n                 undefined4 output_param2,undefined4 output_param3,undefined4 config_param1,undefined4 config_param2,\n                 undefined4 config_param3,undefined4 *result_params)\n\n{\n  undefined4 value1;\n  undefined4 value2;\n  int returnValue1;\n  undefined4 value3;\n  undefined4 value4;\n  undefined4 value5;\n  undefined4 value6;\n  int returnValue2;\n  undefined4 value7;\n  undefined4 value8;\n  undefined4 value9;\n  undefined4 value10;\n  undefined4 value11;\n  undefined4 value12;\n  undefined4 value13;\n  undefined4 value14;\n  undefined4 value15;\n  undefined4 value16;\n  int returnValue3;\n  undefined4 value17;\n  undefined4 value18;\n  undefined4 value19;\n  undefined4 value20;\n  undefined4 value21;\n  undefined4 value22;\n  int returnValue4;\n  undefined4 data1;\n  undefined4 data2;\n  undefined4 data3;\n  int data4;\n  undefined8 temp1;\n  undefined8 temp2;\n  \n  data3 = DAT_20000048;\n  data2 = DAT_20000044;\n  data4 = DAT_20000040;\n  data1 = DAT_2000003c;\n  value1 = FUN_08000cec(input_param1,input_param1);\n  value2 = FUN_08000cec(input_param2);\n  value1 = FUN_08000adc(value1,value2);\n  value2 = FUN_08000cec(input_param3);\n  FUN_08000adc(value1,value2);\n  FUN_08000428();\n  FUN_08005bc8();\n  value1 = FUN_08000a30();\n  returnValue1 = FUN_08001014(value1,0);\n  if (returnValue1 == 0) {\n    value2 = FUN_08000cec(config_param1);\n    value3 = FUN_08000cec(config_param2);\n    value2 = FUN_08000adc(value2,value3);\n    value3 = FUN_08000cec(config_param3);\n    FUN_08000adc(value2,value3);\n    FUN_08000428();\n    FUN_08005bc8();\n    value2 = FUN_08000a30();\n    returnValue1 = FUN_08001014(value2,0);\n    if (returnValue1 == 0) {\n      temp1 = FUN_08000428(output_param1);\n      FUN_080004d0((int)temp1,(int)((ulonglong)temp1 >> 0x20),0xa2529d39,0x3f91df46);\n      value3 = FUN_08000a30();\n      temp1 = FUN_08000428(output_param2);\n      FUN_080004d0((int)temp1,(int)((ulonglong)temp1 >> 0x20),0xa2529d39,0x3f91df46);\n      value4 = FUN_08000a30();\n      temp1 = FUN_08000428(output_param3);\n      FUN_080004d0((int)temp1,(int)((ulonglong)temp1 >> 0x20),0xa2529d39,0x3f91df46);\n      value5 = FUN_08000a30();\n      returnValue1 = FUN_08000adc(data1);\n      value6 = FUN_08000adc(data4);\n      returnValue2 = FUN_08000adc(data2,data2);\n      value7 = FUN_08000adc(data3,data3);\n      value8 = FUN_08000cec(data1);\n      value9 = FUN_08000cec(data1,data4);\n      value10 = FUN_08000cec(data1,data2);\n      value11 = FUN_08000cec(data4);\n      value12 = FUN_08000cec(data4,data3);\n      value13 = FUN_08000cec(data2,data2);\n      value14 = FUN_08000cec(data3,data3);\n      value1 = FUN_08000e54(0x3f800000,value1);\n      value2 = FUN_08000e54(0x3f800000,value2);\n      value15 = FUN_08000cec(config_param1,value2);\n      value16 = FUN_08000cec(config_param2,value2);\n      value2 = FUN_08000cec(config_param3,value2);\n      returnValue3 = FUN_08000cec(returnValue1,value15);\n      value17 = FUN_08000cec(returnValue1,value16);\n      value18 = FUN_08000cec(returnValue1,value2);\n      value19 = FUN_08000cec(value6,value15);\n      value20 = FUN_08000cec(value8,value15);\n      value21 = FUN_08000cec(data3,value17);\n      value20 = FUN_08000ad8(value20,value21);\n      value21 = FUN_08000cec(data2,value18);\n      value20 = FUN_08000adc(value20,value21);\n      value21 = FUN_08000cec(value11,value15);\n      value20 = FUN_08000adc(value20,value21);\n      value21 = FUN_08000cec(value6,value16);\n      value21 = FUN_08000cec(value21,data2);\n      value20 = FUN_08000adc(value20,value21);\n      value21 = FUN_08000cec(value6,value2);\n      value21 = FUN_08000cec(value21,data3);\n      value20 = FUN_08000adc(value20,value21);\n      value21 = FUN_08000cec(value13,value15);\n      value20 = FUN_08000ad8(value20,value21);\n      value21 = FUN_08000cec(value14,value15);\n      value20 = FUN_08000ad8(value20,value21);\n      value21 = FUN_08000cec(data3,returnValue3);\n      value22 = FUN_08000cec(value8,value16);\n      value21 = FUN_08000adc(value21,value22);\n      value18 = FUN_08000cec(data4,value18);\n      value18 = FUN_08000ad8(value21,value18);\n      value21 = FUN_08000cec(data2,value19);\n      value18 = FUN_08000adc(value18,value21);\n      value21 = FUN_08000cec(value11,value16);\n      value18 = FUN_08000ad8(value18,value21);\n      value21 = FUN_08000cec(value13,value16);\n      value18 = FUN_08000adc(value18,value21);\n      value21 = FUN_08000cec(returnValue2,value2);\n      value21 = FUN_08000cec(value21,data3);\n      value18 = FUN_08000adc(value18,value21);\n      value21 = FUN_08000cec(value14,value16);\n      value18 = FUN_08000ad8(value18,value21);\n      value20 = FUN_08000cec(value20,value20);\n      value18 = FUN_08000cec(value18,value18);\n      FUN_08000adc(value20,value18);\n      FUN_08000428();\n      FUN_08005bc8();\n      returnValue4 = FUN_08000a30();\n      value18 = FUN_08000cec(returnValue3 + -0x80000000,data2);\n      value17 = FUN_08000cec(data4,value17);\n      value17 = FUN_08000adc(value18,value17);\n      value8 = FUN_08000cec(value8,value2);\n      value8 = FUN_08000adc(value17,value8);\n      value17 = FUN_08000cec(data3,value19);\n      value8 = FUN_08000adc(value8,value17);\n      value17 = FUN_08000cec(value11,value2);\n      value8 = FUN_08000ad8(value8,value17);\n      value17 = FUN_08000cec(returnValue2,value16);\n      value17 = FUN_08000cec(value17,data3);\n      value8 = FUN_08000adc(value8,value17);\n      value17 = FUN_08000cec(value13,value2);\n      value8 = FUN_08000ad8(value8,value17);\n      value17 = FUN_08000cec(value14,value2);\n      value8 = FUN_08000adc(value8,value17);\n      value17 = FUN_08000adc(value8,value8);\n      value18 = FUN_08000adc(value12);\n      value19 = FUN_08000cec(data2,returnValue1);\n      value18 = FUN_08000ad8(value18,value19);\n      value19 = FUN_08000cec(input_param1,value1);\n      value18 = FUN_08000ad8(value18,value19);\n      value19 = FUN_08000cec(data3,returnValue2);\n      value20 = FUN_08000adc(value9);\n      value19 = FUN_08000adc(value19,value20);\n      value20 = FUN_08000cec(input_param2,value1);\n      value19 = FUN_08000ad8(value19,value20);\n      value20 = FUN_08000cec(data2,value8);\n      value21 = FUN_08000ad8(0x3f000000,value13);\n      value14 = FUN_08000ad8(value21,value14);\n      value14 = FUN_08000cec(value14,returnValue4);\n      value21 = FUN_08000ad8(value12,value10);\n      value21 = FUN_08000cec(value21,value8);\n      value14 = FUN_08000adc(value14,value21);\n      value14 = FUN_08000ad8(value14,value15);\n      value15 = FUN_08000cec(data4,value8);\n      value21 = FUN_08000cec(data4,data2);\n      value22 = FUN_08000cec(data1,data3);\n      value21 = FUN_08000ad8(value21,value22);\n      value21 = FUN_08000cec(value21,returnValue4);\n      value22 = FUN_08000cec(data2,data3);\n      value9 = FUN_08000adc(value22,value9);\n      value9 = FUN_08000cec(value9,value8);\n      value9 = FUN_08000adc(value21,value9);\n      value9 = FUN_08000ad8(value9,value16);\n      value16 = FUN_08000cec(data2,returnValue4);\n      value21 = FUN_08000ad8(0x3f000000,value11);\n      value21 = FUN_08000ad8(value21,value13);\n      value21 = FUN_08000cec(value21,value8);\n      value10 = FUN_08000adc(value10,value12);\n      value10 = FUN_08000cec(value10,returnValue4);\n      value10 = FUN_08000adc(value21,value10);\n      value2 = FUN_08000ad8(value10,value2);\n      value10 = FUN_08000cec(returnValue2 + -0x80000000,value18);\n      value12 = FUN_08000cec(value6,value19);\n      value10 = FUN_08000adc(value10,value12);\n      value12 = FUN_08000cec(value20,value14);\n      value10 = FUN_08000ad8(value10,value12);\n      value12 = FUN_08000cec(data3,returnValue4 + -0x80000000);\n      value12 = FUN_08000adc(value12,value15);\n      value12 = FUN_08000cec(value12,value9);\n      value10 = FUN_08000adc(value10,value12);\n      value12 = FUN_08000cec(value16,value2);\n      value10 = FUN_08000adc(value10,value12);\n      value11 = FUN_08000adc(value11);\n      value11 = FUN_08000ad8(0x3f800000,value11);\n      value12 = FUN_08000adc(value13);\n      value11 = FUN_08000ad8(value11,value12);\n      value1 = FUN_08000cec(input_param3,value1);\n      value1 = FUN_08000ad8(value11,value1);\n      value11 = FUN_08000cec(data3,value8);\n      value8 = FUN_08000cec(data1,value8);\n      value12 = FUN_08000cec(value7,value18);\n      value13 = FUN_08000cec(returnValue1,value19);\n      value12 = FUN_08000adc(value12,value13);\n      value13 = FUN_08000cec(data4,0x40800000);\n      value13 = FUN_08000cec(value13,value1);\n      value12 = FUN_08000ad8(value12,value13);\n      value13 = FUN_08000cec(value14,value11);\n      value12 = FUN_08000adc(value12,value13);\n      value13 = FUN_08000adc(value16,value8);\n      value13 = FUN_08000cec(value13,value9);\n      value12 = FUN_08000adc(value12,value13);\n      value13 = FUN_08000cec(data3,returnValue4);\n      value16 = FUN_08000cec(data4,value17);\n      value13 = FUN_08000ad8(value13,value16);\n      value13 = FUN_08000cec(value13,value2);\n      value12 = FUN_08000adc(value12,value13);\n      returnValue3 = FUN_08000adc(returnValue4,returnValue4);\n      value13 = FUN_08000cec(data4,returnValue4);\n      value16 = FUN_08000cec(returnValue1 + -0x80000000,value18);\n      value7 = FUN_08000cec(value7,value19);\n      value7 = FUN_08000adc(value16,value7);\n      value16 = FUN_08000cec(data2,0x40800000);\n      value1 = FUN_08000cec(value16,value1);\n      value1 = FUN_08000ad8(value7,value1);\n      value7 = FUN_08000cec(data2,returnValue3 + -0x80000000);\n      value7 = FUN_08000ad8(value7,value8);\n      value7 = FUN_08000cec(value7,value14);\n      value1 = FUN_08000adc(value1,value7);\n      value7 = FUN_08000adc(value11,value13);\n      value7 = FUN_08000cec(value7,value9);\n      value1 = FUN_08000adc(value1,value7);\n      value7 = FUN_08000cec(data1,returnValue4);\n      value8 = FUN_08000cec(data2,value17);\n      value7 = FUN_08000ad8(value7,value8);\n      value7 = FUN_08000cec(value7,value2);\n      value7 = FUN_08000adc(value1,value7);\n      value1 = FUN_08000cec(value6,value18);\n      value6 = FUN_08000cec(returnValue2,value19);\n      value1 = FUN_08000adc(value1,value6);\n      value6 = FUN_08000cec(data3,returnValue3 + -0x80000000);\n      value6 = FUN_08000adc(value6,value15);\n      value6 = FUN_08000cec(value6,value14);\n      value1 = FUN_08000adc(value1,value6);\n      value6 = FUN_08000cec(data1,returnValue4 + -0x80000000);\n      value6 = FUN_08000adc(value6,value20);\n      value6 = FUN_08000cec(value6,value9);\n      value1 = FUN_08000adc(value1,value6);\n      value2 = FUN_08000cec(value2,value13);\n      value6 = FUN_08000adc(value1,value2);\n      value1 = FUN_08000cec(value10);\n      value2 = FUN_08000cec(value12);\n      value1 = FUN_08000adc(value1,value2);\n      value2 = FUN_08000cec(value7,value7);\n      value1 = FUN_08000adc(value1,value2);\n      value2 = FUN_08000cec(value6,value6);\n      FUN_08000adc(value1,value2);\n      FUN_08000428();\n      FUN_08005bc8();\n      value1 = FUN_08000a30();\n      value8 = FUN_08000e54(0x3f800000,value1);\n      value1 = DAT_2000035c;\n      value2 = FUN_08000cec(data4 + -0x80000000,value3);\n      value9 = FUN_08000cec(data2,value4);\n      value2 = FUN_08000ad8(value2,value9);\n      value9 = FUN_08000cec(data3,value5);\n      value2 = FUN_08000ad8(value2,value9);\n      value9 = FUN_08000cec(value2,0x3f000000);\n      value10 = FUN_08000cec(value10,value8);\n      value2 = DAT_20000360;\n      value10 = FUN_08000cec(value10,value1);\n      value9 = FUN_08000ad8(value9,value10);\n      value2 = FUN_08000cec(value9,value2);\n      value9 = FUN_08000adc(value2,data1);\n      value10 = FUN_08000cec(data1,value3);\n      value11 = FUN_08000cec(data2,value5);\n      value2 = DAT_20000360;\n      value10 = FUN_08000adc(value10,value11);\n      value11 = FUN_08000cec(data3,value4);\n      value10 = FUN_08000ad8(value10,value11);\n      value10 = FUN_08000cec(value10,0x3f000000);\n      value11 = FUN_08000cec(value12,value8);\n      value11 = FUN_08000cec(value11,value1);\n      value10 = FUN_08000ad8(value10,value11);\n      value2 = FUN_08000cec(value10,value2);\n      value10 = FUN_08000adc(value2,data4);\n      value2 = DAT_20000360;\n      value11 = FUN_08000cec(data1,value4);\n      value12 = FUN_08000cec(data4,value5);\n      value11 = FUN_08000ad8(value11,value12);\n      value12 = FUN_08000cec(data3,value3);\n      value11 = FUN_08000adc(value11,value12);\n      value11 = FUN_08000cec(value11,0x3f000000);\n      value7 = FUN_08000cec(value7,value8);\n      value7 = FUN_08000cec(value7,value1);\n      value7 = FUN_08000ad8(value11,value7);\n      value2 = FUN_08000cec(value7,value2);\n      value2 = FUN_08000adc(value2,data2);\n      data1 = FUN_08000cec(data1,value5);\n      value4 = FUN_08000cec(data4,value4);\n      data1 = FUN_08000adc(data1,value4);\n      data2 = FUN_08000cec(data2,value3);\n      data1 = FUN_08000ad8(data1,data2);\n      data2 = FUN_08000cec(data1,0x3f000000);\n      data1 = FUN_08000cec(value6,value8);\n      value1 = FUN_08000cec(data1,value1);\n      data1 = DAT_20000360;\n      data2 = FUN_08000ad8(data2,value1);\n      data1 = FUN_08000cec(data2,data1);\n      data1 = FUN_08000adc(data1,data3);\n      data2 = FUN_08000cec(value9,value9);\n      data3 = FUN_08000cec(value10,value10);\n      data2 = FUN_08000adc(data2,data3);\n      data3 = FUN_08000cec(value2,value2);\n      data2 = FUN_08000adc(data2,data3);\n      data3 = FUN_08000cec(data1,data1);\n      FUN_08000adc(data2,data3);\n      FUN_08000428();\n      FUN_08005bc8();\n      data2 = FUN_08000a30();\n      data2 = FUN_08000e54(0x3f800000,data2);\n      data3 = FUN_08000cec(value9,data2);\n      DAT_2000003c = data3;\n      data4 = FUN_08000cec(value10,data2);\n      DAT_20000040 = data4;\n      value1 = FUN_08000cec(value2,data2);\n      DAT_20000044 = value1;\n      DAT_20000048 = FUN_08000cec(data1,data2);\n      data1 = FUN_08000cec(data4,DAT_20000048);\n      data2 = FUN_08000cec(data3,value1);\n      data1 = FUN_08000ad8(data1,data2);\n      FUN_08000adc(data1,data1);\n      FUN_08000428();\n      temp1 = FUN_08005854();\n      temp1 = FUN_080004d0((int)temp1,(int)((ulonglong)temp1 >> 0x20),0,0x40668000);\n      FUN_08000724((int)temp1,(int)((ulonglong)temp1 >> 0x20),0x54442d18,0x400921fb);\n      data1 = FUN_08000a30();\n      *result_params = data1;\n      data4 = DAT_20000040;\n      data1 = DAT_2000003c;\n      data2 = FUN_08000cec(DAT_2000003c,DAT_2000003c);\n      data3 = FUN_08000cec(data4,data4);\n      data3 = FUN_08000ad8(data2,data3);\n      data2 = DAT_20000044;\n      value1 = FUN_08000cec(DAT_20000044,DAT_20000044);\n      value1 = FUN_08000ad8(data3,value1);\n      data3 = DAT_20000048;\n      value2 = FUN_08000cec(DAT_20000048,DAT_20000048);\n      FUN_08000adc(value1,value2);\n      temp1 = FUN_08000428();\n      data1 = FUN_08000cec(data1,data4);\n      data2 = FUN_08000cec(data2,data3);\n      data1 = FUN_08000adc(data1,data2);\n      FUN_08000adc(data1,data1);\n      temp2 = FUN_08000428();\n      temp1 = thunk_FUN_08006070((int)temp2,(int)((ulonglong)temp2 >> 0x20),(int)temp1,\n                                  (int)((ulonglong)temp1 >> 0x20));\n      temp1 = FUN_080004d0((int)temp1,(int)((ulonglong)temp1 >> 0x20),0,0x40668000);\n      FUN_08000724((int)temp1,(int)((ulonglong)temp1 >> 0x20),0x54442d18,0x400921fb);\n      data1 = FUN_08000a30();\n      result_params[1] = data1;\n      data4 = DAT_20000040;\n      data1 = DAT_2000003c;\n      data2 = FUN_08000cec(DAT_2000003c,DAT_2000003c);\n      data3 = FUN_08000cec(data4,data4);\n      data3 = FUN_08000adc(data2,data3);\n      data2 = DAT_20000044;\n      value1 = FUN_08000cec(DAT_20000044,DAT_20000044);\n      value1 = FUN_08000ad8(data3,value1);\n      data3 = DAT_20000048;\n      value2 = FUN_08000cec(DAT_20000048,DAT_20000048);\n      FUN_08000ad8(value1,value2);\n      temp1 = FUN_08000428();\n      data2 = FUN_08000cec(data4,data2);\n      data1 = FUN_08000cec(data1,data3);\n      data1 = FUN_08000adc(data2,data1);\n      FUN_08000adc(data1,data1);\n      temp2 = FUN_08000428();\n      temp1 = thunk_FUN_08006070((int)temp2,(int)((ulonglong)temp2 >> 0x20),(int)temp1,\n                                  (int)((ulonglong)temp1 >> 0x20));\n      temp1 = FUN_080004d0((int)temp1,(int)((ulonglong)temp1 >> 0x20),0,0x40668000);\n      FUN_08000724((int)temp1,(int)((ulonglong)temp1 >> 0x20),0x54442d18,0x400921fb);\n      data1 = FUN_08000a30();\n      result_params[2] = data1;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003330": "process_data_08003330",
                "param_1": "input_param1",
                "param_2": "input_param2",
                "param_3": "input_param3",
                "param_4": "output_param1",
                "param_5": "output_param2",
                "param_6": "output_param3",
                "param_7": "config_param1",
                "param_8": "config_param2",
                "param_9": "config_param3",
                "param_10": "result_params",
                "uVar1": "value1",
                "uVar2": "value2",
                "iVar3": "returnValue1",
                "uVar4": "value3",
                "uVar5": "value4",
                "uVar6": "value5",
                "uVar7": "value6",
                "iVar8": "returnValue2",
                "uVar9": "value7",
                "uVar10": "value8",
                "uVar11": "value9",
                "uVar12": "value10",
                "uVar13": "value11",
                "uVar14": "value12",
                "uVar15": "value13",
                "uVar16": "value14",
                "uVar17": "value15",
                "uVar18": "value16",
                "iVar19": "returnValue3",
                "uVar20": "value17",
                "uVar21": "value18",
                "uVar22": "value19",
                "uVar23": "value20",
                "uVar24": "value21",
                "uVar25": "value22",
                "iVar26": "returnValue4",
                "uVar27": "data1",
                "uVar28": "data2",
                "uVar29": "data3",
                "iVar30": "data4",
                "uVar31": "temp1",
                "uVar32": "temp2"
            },
            "calling": [
                "FUN_08002f28"
            ],
            "called": [
                "FUN_08000ad8",
                "FUN_080004d0",
                "FUN_08001014",
                "FUN_08000e54",
                "thunk_FUN_08006070",
                "FUN_08000a30",
                "FUN_08005854",
                "FUN_08005bc8",
                "FUN_08000cec",
                "FUN_08000428",
                "FUN_08000724",
                "FUN_08000adc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003eb0": {
            "entrypoint": "0x08003eb0",
            "current_name": "shift_left_param_1_08003eb0",
            "code": "\nlonglong shift_left_param_1_08003eb0(uint input_value)\n\n{\n  if (DAT_20000280 == 0) {\n    raise_exception(0x3f);\n    return concat_value(input_value,1);\n  }\n  return (ulonglong)input_value << 0x20;\n}\n\n",
            "renaming": {
                "FUN_08003eb0": "shift_left_param_1_08003eb0",
                "param_1": "input_value",
                "software_interrupt": "raise_exception",
                "CONCAT44": "concat_value"
            },
            "calling": [
                "FUN_080041ae"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ec8": {
            "entrypoint": "0x08003ec8",
            "current_name": "increment_and_store_08003ec8",
            "code": "\nundefined4 incrementAndStore_08003ec8(int baseAddress,undefined data)\n\n{\n  *(short *)(baseAddress + 0x804) = *(short *)(baseAddress + 0x804) + 1;\n  *(undefined *)(baseAddress + (uint)*(ushort *)(baseAddress + 0x802)) = data;\n  *(ushort *)(baseAddress + 0x802) = *(short *)(baseAddress + 0x802) + 1U & 0x7ff;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08003ec8": "increment_and_store_08003ec8",
                "param_1": "baseAddress",
                "param_2": "data"
            },
            "calling": [
                "FUN_08004c30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f3c": {
            "entrypoint": "0x08003f3c",
            "current_name": "initialize_memory_08003f3c",
            "code": "\nvoid initializeMemory_08003f3c(int flag1,int flag2,int flag3)\n\n{\n  FUN_08001424(0x40011000,0x8000,flag1 == 0);\n  FUN_08001424(0x40011000,0x4000,flag2 == 0);\n  FUN_08001424(0x40011000,0x2000,flag3 == 0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f3c": "initialize_memory_08003f3c",
                "param_1": "flag1",
                "param_2": "flag2",
                "param_3": "flag3"
            },
            "calling": [
                "FUN_08004a84",
                "FUN_08004028"
            ],
            "called": [
                "FUN_08001424"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003fc4": {
            "entrypoint": "0x08003fc4",
            "current_name": "set_memory_value_08003fc4",
            "code": "\nvoid setMemoryValue_08003fc4(undefined4 value)\n\n{\n  *(undefined4 *)(DAT_200014c8 + 0x40) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003fc4": "set_memory_value_08003fc4",
                "param_1": "value"
            },
            "calling": [
                "FUN_0800426c",
                "FUN_080041c4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003fd0": {
            "entrypoint": "0x08003fd0",
            "current_name": "set_param_08003fd0",
            "code": "\nvoid setParam_08003fd0(undefined4 newValue)\n\n{\n  *(undefined4 *)(DAT_200014c8 + 0x3c) = newValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003fd0": "set_param_08003fd0",
                "param_1": "newValue"
            },
            "calling": [
                "FUN_0800426c",
                "FUN_080041c4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003fdc": {
            "entrypoint": "0x08003fdc",
            "current_name": "store_parameter_value_08003fdc",
            "code": "\nvoid storeParameterValue_08003fdc(undefined4 value)\n\n{\n  *(undefined4 *)(DAT_200015f8 + 0x38) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003fdc": "store_parameter_value_08003fdc",
                "param_1": "value"
            },
            "calling": [
                "FUN_0800426c",
                "FUN_080041c4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003fe8": {
            "entrypoint": "0x08003fe8",
            "current_name": "set_memory_address_to_value_08003fe8",
            "code": "\nvoid setMemoryAddressToValue_08003fe8(undefined4 newValue)\n\n{\n  *(undefined4 *)(DAT_20001540 + 0x3c) = newValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003fe8": "set_memory_address_to_value_08003fe8",
                "param_1": "newValue"
            },
            "calling": [
                "FUN_0800426c",
                "FUN_080041c4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ff4": {
            "entrypoint": "0x08003ff4",
            "current_name": "initialize_data_08003ff4",
            "code": "\nvoid initializeData_08003ff4(void)\n\n{\n  FUN_08002538(&DAT_200015f8,4);\n  FUN_08002538(&DAT_20001540,8);\n  FUN_08002538(&DAT_200014c8,8);\n  FUN_08002538(&DAT_200014c8,0xc);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003ff4": "initialize_data_08003ff4"
            },
            "calling": [
                "FUN_08004028"
            ],
            "called": [
                "FUN_08002538"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004028": {
            "entrypoint": "0x08004028",
            "current_name": "perform_operation_08004028",
            "code": "\nvoid performOperation_08004028(void)\n\n{\n  int iterationCount;\n  \n  FUN_0800458c();\n  FUN_08003ff4();\n  iterationCount = 3;\n  do {\n    FUN_08003f3c(1,0);\n    thunk_FUNC_08001168(100);\n    FUN_08003f3c(0,1);\n    thunk_FUNC_08001168(100);\n    FUN_08003f3c(0,0,1);\n    thunk_FUNC_08001168(100);\n    iterationCount = iterationCount + -1;\n  } while (iterationCount != 0);\n  FUN_08003f3c(1,1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004028": "perform_operation_08004028",
                "iVar1": "iterationCount"
            },
            "calling": [
                "FUN_08004194"
            ],
            "called": [
                "FUN_08003ff4",
                "thunk_FUN_08001168",
                "FUN_08003f3c",
                "FUN_0800458c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800403c": {
            "entrypoint": "0x0800403c",
            "current_name": "initialize_i2_c_0800403c",
            "code": "\nvoid initializeI2C_0800403c(undefined4 parameter1,undefined4 parameter2,undefined parameter3,int parameter4)\n\n{\n  int returnValue;\n  undefined buffer [8];\n  \n  buffer[0] = parameter3;\n  returnValue = FUN_08001828(&DAT_20001504,parameter1,parameter2,1,buffer,1,200);\n  if (returnValue != 0) {\n    FUN_08004490(\"../Src/i2c.c\",0x1b);\n  }\n  if (parameter4 != 0) {\n    thunk_FUNC_08001168(0x32);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800403c": "initialize_i2_c_0800403c",
                "param_1": "parameter1",
                "param_2": "parameter2",
                "param_3": "parameter3",
                "param_4": "parameter4",
                "iVar1": "returnValue",
                "local_14": "buffer"
            },
            "calling": [
                "FUN_08002ad0",
                "FUN_0800411c",
                "FUN_08002cb0",
                "FUN_08003298"
            ],
            "called": [
                "FUN_08004490",
                "FUN_08001828",
                "thunk_FUN_08001168"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800407c": {
            "entrypoint": "0x0800407c",
            "current_name": "check_and_execute_function_0800407c",
            "code": "\nundefined checkAndExecuteFunction_0800407c(undefined4 dataPtr,undefined4 paramPtr,undefined4 outputPtr,undefined4 errorPtr)\n\n{\n  int result;\n  undefined flag [8];\n  \n  flag[0] = 0;\n  result = FUN_08001938(&DAT_20001504,dataPtr,paramPtr,1,flag,1,200);\n  if (result != 0) {\n    FUN_08004490(outputPtr,errorPtr);\n  }\n  return flag[0];\n}\n\n",
            "renaming": {
                "FUN_0800407c": "check_and_execute_function_0800407c",
                "param_1": "dataPtr",
                "param_2": "paramPtr",
                "param_3": "outputPtr",
                "param_4": "errorPtr",
                "iVar1": "result",
                "local_14": "flag"
            },
            "calling": [
                "FUN_08002ad0",
                "FUN_08002d88",
                "FUN_08002cb0",
                "FUN_080040e8"
            ],
            "called": [
                "FUN_08004490",
                "FUN_08001938"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040b8": {
            "entrypoint": "0x080040b8",
            "current_name": "check_and_perform_action_080040b8",
            "code": "\nvoid checkAndPerformAction_080040b8(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4,\n                 undefined4 actionInput1,undefined4 actionInput2)\n\n{\n  int result;\n  \n  result = FUN_08001938(&DAT_20001504,input1,input2,1,input3,input4,200,input4);\n  if (result != 0) {\n    FUN_08004490(actionInput1,actionInput2);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080040b8": "check_and_perform_action_080040b8",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "param_5": "actionInput1",
                "param_6": "actionInput2",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08003034"
            ],
            "called": [
                "FUN_08004490",
                "FUN_08001938"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040e8": {
            "entrypoint": "0x080040e8",
            "current_name": "copy_data_080040e8",
            "code": "\nvoid copyData_080040e8(undefined4 sourceArray,int startIndex,int destinationArray,int length)\n\n{\n  undefined copiedValue;\n  int currentIndex;\n  undefined *destinationPtr;\n  int fileOffset;\n  \n  destinationPtr = (undefined *)(destinationArray + -1);\n  fileOffset = length;\n  for (currentIndex = 0; currentIndex < length; currentIndex = currentIndex + 1) {\n    copiedValue = FUN_0800407c(sourceArray,startIndex + currentIndex & 0xffff,\"../Src/i2c.c\",0x4c,fileOffset);\n    destinationPtr = destinationPtr + 1;\n    *destinationPtr = copiedValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080040e8": "copy_data_080040e8",
                "param_1": "sourceArray",
                "param_2": "startIndex",
                "param_3": "destinationArray",
                "param_4": "length",
                "uVar1": "copiedValue",
                "iVar2": "currentIndex",
                "puVar3": "destinationPtr",
                "iVar4": "fileOffset"
            },
            "calling": [
                "FUN_08002b48",
                "FUN_08002d88",
                "FUN_08002cb0",
                "FUN_08003298",
                "FUN_08002bf0"
            ],
            "called": [
                "FUN_0800407c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800411c": {
            "entrypoint": "0x0800411c",
            "current_name": "calculate_and_set_values_0800411c",
            "code": "\nvoid calculateAndSetValues_0800411c(void)\n\n{\n  undefined4 *pointer1;\n  longlong longLongVar;\n  uint var3;\n  uint var4;\n  uint var5;\n  undefined4 var6;\n  undefined4 var7;\n  int var8;\n  uint var9;\n  uint var10;\n  uint var11;\n  uint var12;\n  undefined4 *pointer2;\n  undefined4 unaff_var4;\n  int var14;\n  int var15;\n  bool boolVar;\n  undefined8 var17;\n  \n  var8 = thunk_FUN_0800115c();\n  if (1 < (uint)(var8 - DAT_2000028c)) {\n    DAT_2000028c = thunk_FUN_0800115c();\n    FUN_08002f28();\n  }\n  var8 = thunk_FUN_0800115c();\n  if (2 < (uint)(var8 - DAT_20000294)) {\n    DAT_20000294 = thunk_FUN_0800115c();\n    FUN_08004a84();\n  }\n  var8 = thunk_FUN_0800115c();\n  if (3 < (uint)(var8 - DAT_20000290)) {\n    DAT_20000290 = thunk_FUN_0800115c();\n    FUN_08004348();\n    FUN_08004384();\n    FUN_080043f0();\n    FUN_08004410();\n    FUN_08004434();\n    FUN_080043bc();\n    FUN_08004458();\n  }\n  if ((DAT_20000275 != '\\0') && (DAT_20000274 != '\\0')) {\n    var15 = DAT_20000270 + (uint)DAT_20000266 * -0x100;\n    var9 = (uint)((longlong)(int)(uint)DAT_20000268 * (longlong)var15) >> 0x17 |\n            (int)((ulonglong)((longlong)(int)(uint)DAT_20000268 * (longlong)var15) >> 0x20) << 9;\n    var10 = (uint)((longlong)(int)(uint)DAT_20000264 * (longlong)var15 >> 7);\n    var11 = var10 + (uint)DAT_20000260 * 0x10000;\n    var4 = (uint)((ulonglong)((longlong)(int)(uint)DAT_20000262 * (longlong)var15) >> 8);\n    var8 = var9 + 2000;\n    var5 = var4 + (uint)DAT_2000025e * 0x8000;\n    boolVar = (int)var9 < 0;\n    if (1999 < var8) {\n      var9 = 0;\n    }\n    var3 = var9;\n    if (boolVar != SBORROW4(var8,2000)) {\n      var14 = var9 * var9 * 5;\n      var9 = var14 >> 2;\n      var3 = var14 >> 1;\n    }\n    var12 = var11 - var3;\n    longLongVar = (ulonglong)(var5 - var9) * (ulonglong)DAT_2000026c;\n    var14 = DAT_2000026c *\n             ((((int)((longlong)(int)(uint)DAT_20000262 * (longlong)var15 >> 0x28) +\n               (uint)CARRY4(var4,(uint)DAT_2000025e * 0x8000)) - ((int)var9 >> 0x1f)) -\n             (uint)(var5 < var9)) + (int)((ulonglong)longLongVar >> 0x20);\n    var4 = (uint)longLongVar >> 0x15 | var14 * 0x800;\n    var6 = FUN_08000c44(var4 - var12 >> 0xf |\n                         (((var14 >> 0x15) -\n                          ((((int)((longlong)(int)(uint)DAT_20000264 * (longlong)var15 >> 0x27) +\n                            (uint)CARRY4(var10,(uint)DAT_20000260 * 0x10000)) -\n                           ((int)var3 >> 0x1f)) - (uint)(var11 < var3))) - (uint)(var4 < var12)\n                         ) * 0x20000);\n    var6 = FUN_08000e54(var6,0x42c80000);\n    DAT_20000354 = var6;\n    var7 = FUN_08000c44(var8);\n    DAT_20000358 = FUN_08000e54(var7,0x42c80000);\n    FUN_08000e54(var6,0x447d5000);\n    var17 = FUN_08000428();\n    var17 = FUN_08005900((int)var17,(int)((ulonglong)var17 >> 0x20),0x60000000,0x3fc85b95);\n    var17 = FUN_08000168(0,0x3ff00000,(int)var17,(int)((ulonglong)var17 >> 0x20));\n    FUN_080004d0((int)var17,(int)((ulonglong)var17 >> 0x20),0,0x40e5a540);\n    var6 = FUN_08000a30();\n    var7 = 0;\n    pointer2 = &DAT_20000300;\n    DAT_20000350 = var6;\n    do {\n      pointer1 = pointer2 + 1;\n      *pointer2 = *pointer1;\n      var7 = FUN_08000adc(var7);\n      pointer2 = pointer1;\n    } while (pointer1 != &DAT_2000034c);\n    DAT_2000034c = var6;\n    var6 = FUN_08000adc(var7,var6);\n    DAT_200002fc = FUN_08000e54(var6,0x41a00000);\n    var8 = FUN_08001078();\n    DAT_200014ab = var8 * 100;\n    DAT_20000275 = '\\0';\n    DAT_20000274 = '\\0';\n    FUN_0800403c(0xee,DAT_20000038 + 0x50,1);\n    DAT_2000027c = thunk_FUN_0800115c();\n  }\n  var8 = thunk_FUN_0800115c();\n  if (((10 < (uint)(var8 - DAT_2000027c)) && (DAT_20000275 == '\\0')) && (DAT_20000274 == '\\0')) {\n    DAT_20000270 = FUN_08003034();\n    DAT_20000275 = '\\x01';\n    FUN_0800403c(0xee,DAT_20000038 + 0x40,1,0,unaff_var4);\n    DAT_20000278 = thunk_FUN_0800115c();\n  }\n  var8 = thunk_FUN_0800115c();\n  if (((10 < (uint)(var8 - DAT_20000278)) && (DAT_20000275 != '\\0')) && (DAT_20000274 == '\\0')) {\n    DAT_2000026c = FUN_08003034();\n    DAT_20000274 = '\\x01';\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800411c": "calculate_and_set_values_0800411c",
                "puVar1": "pointer1",
                "lVar2": "longLongVar",
                "uVar3": "var3",
                "uVar4": "var4",
                "uVar5": "var5",
                "uVar6": "var6",
                "uVar7": "var7",
                "iVar8": "var8",
                "uVar9": "var9",
                "uVar10": "var10",
                "uVar11": "var11",
                "uVar12": "var12",
                "puVar13": "pointer2",
                "unaff_r4": "unaff_var4",
                "iVar14": "var14",
                "iVar15": "var15",
                "bVar16": "boolVar",
                "uVar17": "var17"
            },
            "calling": [
                "FUN_080041ae"
            ],
            "called": [
                "thunk_FUN_0800115c",
                "FUN_080004d0",
                "FUN_08000e54",
                "FUN_08003034",
                "FUN_08000a30",
                "FUN_08000c44",
                "FUN_08004410",
                "FUN_08005900",
                "FUN_08004348",
                "FUN_08000168",
                "FUN_08000428",
                "FUN_08002f28",
                "FUN_08004458",
                "FUN_080043bc",
                "FUN_08004384",
                "FUN_0800403c",
                "FUN_08004a84",
                "FUN_080043f0",
                "FUN_08004434",
                "FUN_08001078",
                "FUN_08000adc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004194": {
            "entrypoint": "0x08004194",
            "current_name": "initialize_system_08004194",
            "code": "\nvoid initializeSystem_08004194(void)\n\n{\n  FUN_08004028();\n  FUN_08004c70();\n  FUN_08002ea0();\n  FUN_08003298();\n  DAT_200000f4 = 1;\n  DAT_20000150 = 1;\n  DAT_200001ac = 0xffffffff;\n  DAT_20000098 = 1;\n  DAT_200000c8 = 0x44bb8000;\n  DAT_20000124 = 0x44b54000;\n  DAT_20000180 = 0x44fa0000;\n  DAT_2000006c = 0;\n  DAT_200000ac = 0x408ccccd;\n  DAT_200000b0 = 0x3ca3d70a;\n  DAT_200000b4 = 0x438c0000;\n  DAT_200000b8 = 0x40900000;\n  DAT_200000bc = 0x3ca3d70a;\n  DAT_200000c0 = 0x43b40000;\n  DAT_20000108 = 0x40733333;\n  DAT_2000010c = 0x3ca3d70a;\n  DAT_20000110 = 0x43820000;\n  DAT_20000114 = 0x40733333;\n  DAT_20000118 = 0x3ca3d70a;\n  DAT_2000011c = 0x43a00000;\n  DAT_20000164 = 0x40400000;\n  DAT_20000168 = 0x3c23d70a;\n  DAT_2000016c = 0x438c0000;\n  DAT_20000170 = 0;\n  DAT_20000174 = 0;\n  DAT_20000178 = 0;\n  DAT_20000050 = 0x41200000;\n  DAT_20000054 = 0;\n  DAT_20000058 = 0;\n  DAT_2000005c = 0;\n  DAT_20000060 = 0;\n  DAT_20000064 = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004194": "initialize_system_08004194"
            },
            "calling": [
                "FUN_080041ae"
            ],
            "called": [
                "FUN_08002ea0",
                "FUN_08004c70",
                "FUN_08004028",
                "FUN_08003298"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080041ae": {
            "entrypoint": "0x080041ae",
            "current_name": "process_loop_080041ae",
            "code": "\nvoid processLoop_080041ae(void)\n\n{\n  FUN_08003eb0(0);\n  FUN_08004194();\n  do {\n    FUN_0800114c();\n    FUN_0800411c();\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080041ae": "process_loop_080041ae"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_08003eb0",
                "FUN_08004194",
                "FUN_0800411c",
                "FUN_0800114c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080041c4": {
            "entrypoint": "0x080041c4",
            "current_name": "initialize_080041c4",
            "code": "\nvoid initialize_080041c4(undefined4 param1,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined4 extraout1;\n  \n  FUN_08003fc4(0);\n  FUN_08003fd0(0);\n  FUN_08003fdc(0);\n  FUN_08003fe8(0,extraout1,param3,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080041c4": "initialize_080041c4",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "extraout_r1": "extraout1"
            },
            "calling": [
                "FUN_08004a84"
            ],
            "called": [
                "FUN_08003fe8",
                "FUN_08003fc4",
                "FUN_08003fdc",
                "FUN_08003fd0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800426c": {
            "entrypoint": "0x0800426c",
            "current_name": "calculate_threshold_values_0800426c",
            "code": "\n\n\nvoid calculateThresholdValues_0800426c(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  undefined4 output1;\n  undefined4 output2;\n  undefined4 intermediate;\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint temp4;\n  \n  output1 = FUN_08000ad8();\n  output2 = FUN_08000adc(input1,input2);\n  intermediate = FUN_08000ad8(output1,input3);\n  intermediate = FUN_08000adc(intermediate,input4);\n  FUN_08000ad8(intermediate,0x447a0000);\n  temp1 = FUN_08001078();\n  intermediate = FUN_08000ad8(output2,input3);\n  intermediate = FUN_08000ad8(intermediate,input4);\n  FUN_08000ad8(intermediate,0x447a0000);\n  temp2 = FUN_08001078();\n  output1 = FUN_08000adc(output1,input3);\n  output1 = FUN_08000ad8(output1,input4);\n  FUN_08000ad8(output1,0x447a0000);\n  temp3 = FUN_08001078();\n  output1 = FUN_08000adc(input3,output2);\n  output1 = FUN_08000adc(output1,input4);\n  FUN_08000ad8(output1,0x447a0000);\n  temp4 = FUN_08001078();\n  if (999 < (int)temp4) {\n    temp4 = 1000;\n  }\n  if (999 < (int)temp3) {\n    temp3 = 1000;\n  }\n  if (999 < (int)temp2) {\n    temp2 = 1000;\n  }\n  if (999 < (int)temp1) {\n    temp1 = 1000;\n  }\n  DAT_200002a0 = temp2 & ~((int)temp2 >> 0x1f);\n  DAT_200002a4 = temp1 & ~((int)temp1 >> 0x1f);\n  DAT_2000029c = temp3 & ~((int)temp3 >> 0x1f);\n  DAT_20000298 = temp4 & ~((int)temp4 >> 0x1f);\n  FUN_08003fc4();\n  FUN_08003fd0(DAT_2000029c);\n  FUN_08003fdc(DAT_200002a0);\n  FUN_08003fe8(DAT_200002a4);\n  _DAT_200013dd = (short)DAT_20000298 + 1000;\n  DAT_200013df = (short)DAT_2000029c + 1000;\n  _DAT_200013e1 = (short)DAT_200002a0 + 1000;\n  DAT_200013e3 = (short)DAT_200002a4 + 1000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800426c": "calculate_threshold_values_0800426c",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "output1",
                "uVar2": "output2",
                "uVar3": "intermediate",
                "uVar4": "temp1",
                "uVar5": "temp2",
                "uVar6": "temp3",
                "uVar7": "temp4"
            },
            "calling": [
                "FUN_08004a84"
            ],
            "called": [
                "FUN_08000ad8",
                "FUN_08003fe8",
                "FUN_08003fc4",
                "FUN_08003fdc",
                "FUN_08001078",
                "FUN_08000adc",
                "FUN_08003fd0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004300": {
            "entrypoint": "0x08004300",
            "current_name": "compute_checksum_08004300",
            "code": "\nvoid computeChecksum_08004300(uint inputValue,byte *data,uint dataLength)\n\n{\n  uint checksum;\n  byte *currentByte;\n  \n  FUN_08004c8c(&DAT_0800732e);\n  FUN_08004c18(dataLength & 0xff);\n  checksum = dataLength & 0xff ^ inputValue;\n  FUN_08004c18(inputValue);\n  for (currentByte = data; (int)currentByte - (int)data < (int)dataLength; currentByte = currentByte + 1) {\n    FUN_08004c18(*currentByte);\n    checksum = checksum ^ *currentByte;\n  }\n  FUN_08004c18(checksum);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004300": "compute_checksum_08004300",
                "param_1": "inputValue",
                "param_2": "data",
                "param_3": "dataLength",
                "uVar1": "checksum",
                "pbVar2": "currentByte"
            },
            "calling": [
                "FUN_08004458",
                "FUN_08004384",
                "FUN_080043bc",
                "FUN_08004410",
                "FUN_08004348",
                "FUN_080043f0",
                "FUN_08004434"
            ],
            "called": [
                "FUN_08004c18",
                "FUN_08004c8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004348": {
            "entrypoint": "0x08004348",
            "current_name": "initialize_data_08004348",
            "code": "\n\n\nvoid initializeData_08004348(undefined4 param1,uint param2,undefined4 param3)\n\n{\n  undefined4 dataAddress;\n  uint maskedParam2;\n  undefined4 param3Copy;\n  \n  _DAT_20001423 = 0x40003e9;\n  _DAT_20001427 = 0;\n  DAT_20001429 = 0;\n  dataAddress = 0x40003e9;\n  maskedParam2 = param2 & 0xff000000;\n  param3Copy = param3;\n  FUN_08004300(100,&dataAddress,7);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004348": "initialize_data_08004348",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "local_10": "dataAddress",
                "local_c": "maskedParam2",
                "uStack_8": "param3Copy"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_08004300"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004384": {
            "entrypoint": "0x08004384",
            "current_name": "initialize_data_08004384",
            "code": "\n\n\nvoid initializeData_08004384(undefined4 arg1,undefined4 arg2,undefined4 arg3,uint arg4)\n\n{\n  undefined4 dataPointer;\n  undefined4 stackValue;\n  uint maskedArg4;\n  \n  _DAT_200013bd = 0x2a0007;\n  dataPointer = DAT_200013b9;\n  stackValue = 0x2a0007;\n  _DAT_200013c1 = 0;\n  DAT_200013c3 = 0;\n  maskedArg4 = arg4 & 0xff000000;\n  FUN_08004300(0x65,&dataPointer,0xb,0,arg1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004384": "initialize_data_08004384",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "local_14": "dataPointer",
                "uStack_10": "stackValue",
                "local_c": "maskedArg4"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_08004300"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080043bc": {
            "entrypoint": "0x080043bc",
            "current_name": "copy_and_invoke_function_080043bc",
            "code": "\nvoid copyAndInvokeFunction_080043bc(void)\n\n{\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 *destinationPointer;\n  undefined4 *sourcePointer;\n  undefined4 copiedValues [2];\n  undefined2 copyBuffer [6];\n  \n  sourcePointer = (undefined4 *)&DAT_2000142a;\n  destinationPointer = copiedValues;\n  do {\n    value1 = *sourcePointer;\n    value2 = sourcePointer[1];\n    sourcePointer = sourcePointer + 2;\n    *destinationPointer = value1;\n    destinationPointer[1] = value2;\n    destinationPointer = destinationPointer + 2;\n  } while (sourcePointer != (undefined4 *)&DAT_2000143a);\n  *(undefined2 *)destinationPointer = DAT_2000143a;\n  FUN_08004300(0x66,copiedValues,0x12);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080043bc": "copy_and_invoke_function_080043bc",
                "local_24": "copiedValues",
                "local_1c": "copyBuffer",
                "puVar4": "sourcePointer",
                "puVar3": "destinationPointer",
                "uVar1": "value1",
                "uVar2": "value2"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_08004300"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080043f0": {
            "entrypoint": "0x080043f0",
            "current_name": "extract_and_process_data_080043f0",
            "code": "\n\n\nvoid extract_and_process_data_080043f0(undefined4 input_1,undefined4 input_2,undefined4 input_3)\n\n{\n  undefined4 extracted_data;\n  undefined4 data_length;\n  undefined4 data_buffer [2];\n  \n  extracted_data = _DAT_200013dd;\n  data_length = _DAT_200013e1;\n  data_buffer[0] = input_3;\n  FUN_08004300(0x68,&extracted_data,8,data_buffer);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080043f0": "extract_and_process_data_080043f0",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "local_10": "extracted_data",
                "uStack_c": "data_length",
                "auStack_8": "data_buffer"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_08004300"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004410": {
            "entrypoint": "0x08004410",
            "current_name": "initialize_data_08004410",
            "code": "\nvoid initializeData_08004410(undefined4 input_1,undefined4 input_2,undefined4 input_3)\n\n{\n  undefined4 initialValue;\n  undefined4 concatenatedValue;\n  undefined4 inputValue;\n  \n  initialValue = DAT_20001395;\n  concatenatedValue = CONCAT22((short)((uint)input_2 >> 0x10),DAT_20001399);\n  inputValue = input_3;\n  FUN_08004300(0x6c,&initialValue,6);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004410": "initialize_data_08004410",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "local_10": "initialValue",
                "local_c": "concatenatedValue",
                "uStack_8": "inputValue"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_08004300"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004434": {
            "entrypoint": "0x08004434",
            "current_name": "initialize_data_08004434",
            "code": "\nvoid initializeData_08004434(undefined4 inputParam1,undefined4 inputParam2,undefined4 inputParam3)\n\n{\n  undefined4 data1;\n  undefined4 data2;\n  undefined4 data3;\n  \n  data1 = DAT_200014ab;\n  data2 = CONCAT22((short)((uint)inputParam2 >> 0x10),DAT_200014af);\n  data3 = inputParam3;\n  FUN_08004300(0x6d,&data1,6);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004434": "initialize_data_08004434",
                "param_1": "inputParam1",
                "param_2": "inputParam2",
                "param_3": "inputParam3",
                "local_10": "data1",
                "local_c": "data2",
                "uStack_8": "data3"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_08004300"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004458": {
            "entrypoint": "0x08004458",
            "current_name": "copy_and_process_data_08004458",
            "code": "\nvoid copyAndProcessData_08004458(void)\n\n{\n  undefined4 *destPtr;\n  undefined4 *srcPtr;\n  undefined4 tempValue;\n  undefined4 *destPtr2;\n  undefined4 *srcPtr2;\n  undefined4 dataBuffer [3];\n  undefined2 indexBuffer [10];\n  \n  destPtr = dataBuffer;\n  srcPtr = &DAT_2000139b;\n  do {\n    srcPtr2 = srcPtr;\n    destPtr2 = destPtr;\n    tempValue = srcPtr2[1];\n    *destPtr2 = *srcPtr2;\n    destPtr2[1] = tempValue;\n    destPtr = destPtr2 + 2;\n    srcPtr = srcPtr2 + 2;\n  } while (srcPtr2 + 2 != (undefined4 *)0x200013b3);\n  destPtr2[2] = lastValue;\n  *(undefined2 *)(destPtr2 + 3) = *(undefined2 *)(srcPtr2 + 3);\n  FUN_08004300(0x70,dataBuffer,0x1e);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004458": "copy_and_process_data_08004458",
                "puVar1": "destPtr",
                "puVar2": "srcPtr",
                "uVar3": "tempValue",
                "puVar4": "destPtr2",
                "puVar5": "srcPtr2",
                "local_30": "dataBuffer",
                "local_24": "indexBuffer",
                "uRam200013b3": "lastValue"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_08004300"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004490": {
            "entrypoint": "0x08004490",
            "current_name": "handle_error_08004490",
            "code": "\nvoid handleError_08004490(undefined4 errorDescription,undefined4 lineNumber)\n\n{\n  FUN_08001424(0x40011000,0x4000,1);\n  FUN_08001424(0x40011000,0x8000,0);\n  FUN_08001424(0x40011000,0x2000,0);\n  do {\n    FUN_0800142e(0x40011000,0x4000);\n    FUN_0800142e(0x40011000,0x8000);\n    FUN_0800142e(0x40011000,0x2000);\n    FUN_08004c8c(\"Error with \");\n    FUN_08004c8c(errorDescription);\n    FUN_08004c8c(\" at line: \");\n    FUN_08004cac(lineNumber);\n    FUN_08004c18(10);\n    thunk_FUNC_08001168(500);\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08004490": "handle_error_08004490",
                "param_1": "errorDescription",
                "param_2": "lineNumber"
            },
            "calling": [
                "FUN_0800407c",
                "FUN_0800403c",
                "FUN_08004514",
                "FUN_080040b8",
                "FUN_0800458c"
            ],
            "called": [
                "FUN_08004cac",
                "FUN_08004c18",
                "FUN_0800142e",
                "thunk_FUN_08001168",
                "FUN_08001424",
                "FUN_08004c8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004514": {
            "entrypoint": "0x08004514",
            "current_name": "initialize_peripheral_manager_08004514",
            "code": "\nvoid initializePeripheralManager_08004514(void)\n\n{\n  int returnValue;\n  uint timeValue;\n  undefined4 fileSize;\n  int loopCounter;\n  undefined4 dataSize;\n  int loopVar1;\n  int loopVar2;\n  undefined4 bufferSize;\n  int fileSizeCopy;\n  undefined4 functionParameters [4];\n  undefined4 constant1;\n  undefined4 constant2;\n  undefined4 constant3;\n  undefined4 constant4;\n  undefined4 constant5;\n  \n  constant1 = 1;\n  constant2 = 0x10;\n  loopCounter = 2;\n  constant4 = 0;\n  functionParameters[0] = 2;\n  constant3 = 2;\n  constant5 = 0x380000;\n  returnValue = FUN_08001b58(functionParameters);\n  if (returnValue == 0) goto LAB_08004540;\n  fileSize = 0x3c;\n  while( true ) {\n    returnValue = FUN_08004490(\"../Src/peripherals.c\",fileSize);\nLAB_08004540:\n    dataSize = 0xf;\n    bufferSize = 0x400;\n    loopVar1 = loopCounter;\n    loopVar2 = returnValue;\n    fileSizeCopy = returnValue;\n    loopCounter = FUN_0800209c(&dataSize,loopCounter);\n    if (loopCounter == 0) break;\n    fileSize = 0x49;\n  }\n  timeValue = FUN_08002214();\n  FUN_08001214(timeValue / 1000);\n  FUN_08001240(4);\n  FUN_08001194(0xffffffff,0,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004514": "initialize_peripheral_manager_08004514",
                "iVar1": "returnValue",
                "uVar2": "timeValue",
                "uVar3": "fileSize",
                "iVar4": "loopCounter",
                "local_44": "dataSize",
                "local_40": "loopVar1",
                "local_3c": "loopVar2",
                "local_38": "bufferSize",
                "local_34": "fileSizeCopy",
                "local_30": "functionParameters",
                "local_20": "constant1",
                "local_1c": "constant2",
                "local_14": "constant3",
                "local_10": "constant4",
                "local_c": "constant5"
            },
            "calling": [
                "FUN_0800458c"
            ],
            "called": [
                "FUN_08002214",
                "FUN_08001b58",
                "FUN_08004490",
                "FUN_0800209c",
                "FUN_08001194",
                "FUN_08001214",
                "FUN_08001240"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800458c": {
            "entrypoint": "0x0800458c",
            "current_name": "initialize_peripheral_0800458c",
            "code": "\n\n\nvoid initializePeripheral_0800458c(void)\n\n{\n  int result;\n  undefined4 value;\n  int initialValue;\n  int variable1;\n  int variable2;\n  int variable3;\n  int variable4;\n  int variable5;\n  int variable6;\n  int variable7;\n  int variable8;\n  int variable9;\n  int variable10;\n  int variable11;\n  int variable12;\n  int variable13;\n  undefined4 variable14;\n  int variable15;\n  \n  FUN_08001128();\n  FUN_08004514();\n  initialValue = 2;\n  _DAT_40021018 = _DAT_40021018 | 0x1c;\n  FUN_08001424(0x40011000,0xe000,0,_DAT_40021018 & 8);\n  FUN_08001424(0x40010800,0x20,0);\n  variable9 = 0xe000;\n  variable10 = 1;\n  variable12 = 2;\n  FUN_08001264(0x40011000,&variable9);\n  variable9 = 0x20;\n  variable10 = 1;\n  variable12 = 2;\n  FUN_08001264(0x40010800,&variable9);\n  DAT_20001504 = 0x40005400;\n  DAT_20001508 = 400000;\n  DAT_20001514 = 0x4000;\n  DAT_2000150c = 0;\n  DAT_20001510 = 0;\n  DAT_20001518 = 0;\n  DAT_2000151c = 0;\n  DAT_20001520 = 0;\n  DAT_20001524 = 0;\n  result = FUN_08001754();\n  if (result == 0) goto LAB_0800463a;\n  value = 0x6b;\n  while( true ) {\n    while( true ) {\n      while( true ) {\n        while( true ) {\n          while( true ) {\n            while( true ) {\n              while( true ) {\n                while( true ) {\n                  while( true ) {\n                    while( true ) {\n                      while( true ) {\n                        while( true ) {\n                          while( true ) {\n                            while( true ) {\n                              while( true ) {\n                                while( true ) {\n                                  result = FUN_08004490(\"../Src/peripherals.c\",value);\nLAB_0800463a:\n                                  DAT_2000157c = 0x40013800;\n                                  DAT_20001580 = 0x1c200;\n                                  DAT_20001590 = 0xc;\n                                  DAT_20001584 = result;\n                                  DAT_20001588 = result;\n                                  DAT_2000158c = result;\n                                  DAT_20001594 = result;\n                                  DAT_20001598 = result;\n                                  result = FUN_08002724(&DAT_2000157c);\n                                  if (result == 0) break;\n                                  value = 0x151;\n                                }\n                                DAT_200015bc = 0x40012c00;\n                                DAT_200015c8 = 1000;\n                                DAT_200015c0 = initialValue;\n                                DAT_200015c4 = result;\n                                DAT_200015cc = result;\n                                DAT_200015d0 = result;\n                                result = FUN_080023d0(&DAT_200015bc);\n                                if (result == 0) break;\n                                value = 0x88;\n                              }\n                              variable1 = result;\n                              variable2 = result;\n                              result = FUN_080025a4(&DAT_200015bc,&variable1);\n                              if (result == 0) break;\n                              value = 0x8f;\n                            }\n                            variable3 = 0x60;\n                            variable4 = result;\n                            variable5 = result;\n                            variable6 = result;\n                            variable7 = result;\n                            variable8 = result;\n                            result = FUN_0800245c(&DAT_200015bc,&variable3,0xc);\n                            if (result == 0) break;\n                            value = 0x9a;\n                          }\n                          variable14 = 0x2000;\n                          variable9 = result;\n                          variable10 = result;\n                          variable11 = result;\n                          variable12 = result;\n                          variable13 = result;\n                          variable15 = result;\n                          result = FUN_08002564(&DAT_200015bc,&variable9);\n                          if (result == 0) break;\n                          value = 0xa6;\n                        }\n                        FUN_08004e14(&DAT_200015bc);\n                        DAT_200015f8 = 0x40000000;\n                        DAT_20001604 = 1000;\n                        DAT_200015fc = initialValue;\n                        DAT_20001600 = result;\n                        DAT_20001608 = result;\n                        result = FUN_080023d0(&DAT_200015f8);\n                        if (result == 0) break;\n                        value = 0xc3;\n                      }\n                      variable3 = result;\n                      variable4 = result;\n                      result = FUN_080025a4(&DAT_200015f8,&variable3);\n                      if (result == 0) break;\n                      value = 0xca;\n                    }\n                    variable9 = 0x60;\n                    variable10 = result;\n                    variable11 = result;\n                    variable13 = result;\n                    result = FUN_0800245c(&DAT_200015f8,&variable9,4);\n                    if (result == 0) break;\n                    value = 0xd3;\n                  }\n                  FUN_08004e14(&DAT_200015f8);\n                  DAT_2000154c = 1000;\n                  DAT_20001540 = 0x40000400;\n                  DAT_20001544 = initialValue;\n                  DAT_20001548 = result;\n                  DAT_20001550 = result;\n                  result = FUN_080023d0();\n                  if (result == 0) break;\n                  value = 0xf0;\n                }\n                variable3 = 0;\n                variable4 = 0;\n                result = FUN_080025a4(&DAT_20001540,&variable3);\n                if (result == 0) break;\n                value = 0xf7;\n              }\n              variable9 = 0x60;\n              variable10 = result;\n              variable11 = result;\n              variable13 = result;\n              result = FUN_0800245c(&DAT_20001540,&variable9,8);\n              if (result == 0) break;\n              value = 0x100;\n            }\n            initialValue = FUN_0800245c(&DAT_20001540,&variable9,0xc);\n            if (initialValue == 0) break;\n            value = 0x105;\n          }\n          FUN_08004e14(&DAT_20001540);\n          DAT_200014c8 = 0x40000800;\n          DAT_200014cc = 2;\n          DAT_200014d4 = 1000;\n          DAT_200014d0 = initialValue;\n          DAT_200014d8 = initialValue;\n          result = FUN_080023d0(&DAT_200014c8);\n          if (result == 0) break;\n          value = 0x122;\n        }\n        variable3 = result;\n        variable4 = result;\n        result = FUN_080025a4(&DAT_200014c8,&variable3);\n        if (result == 0) break;\n        value = 0x129;\n      }\n      variable9 = 0x60;\n      variable10 = result;\n      variable11 = result;\n      variable13 = result;\n      result = FUN_0800245c(&DAT_200014c8,&variable9,8);\n      if (result == 0) break;\n      value = 0x132;\n    }\n    result = FUN_0800245c(&DAT_200014c8,&variable9,0xc);\n    if (result == 0) break;\n    value = 0x137;\n  }\n  FUN_08004e14(&DAT_200014c8);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800458c": "initialize_peripheral_0800458c",
                "iVar1": "result",
                "uVar2": "value",
                "iVar3": "initialValue",
                "local_58": "variable1",
                "local_54": "variable2",
                "local_50": "variable3",
                "local_4c": "variable4",
                "local_48": "variable5",
                "local_40": "variable6",
                "local_3c": "variable7",
                "local_38": "variable8",
                "local_34": "variable9",
                "local_30": "variable10",
                "local_2c": "variable11",
                "local_28": "variable12",
                "local_24": "variable13",
                "local_20": "variable14",
                "local_1c": "variable15"
            },
            "calling": [
                "FUN_08004028"
            ],
            "called": [
                "FUN_08002564",
                "FUN_08001264",
                "FUN_08004e14",
                "FUN_08001754",
                "FUN_08004490",
                "FUN_0800245c",
                "FUN_08004514",
                "FUN_080023d0",
                "FUN_08001128",
                "FUN_08001424",
                "FUN_080025a4",
                "FUN_08002724"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800483c": {
            "entrypoint": "0x0800483c",
            "current_name": "calculate_new_values_0800483c",
            "code": "\nvoid calculateNewValues_0800483c(int *inputArray)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  int value1;\n  int value2;\n  int value3;\n  \n  value2 = inputArray[0xc];\n  result1 = FUN_08000adc(inputArray[7],inputArray[9]);\n  value2 = FUN_08000ad8(result1,value2);\n  inputArray[10] = value2;\n  if (*inputArray == 3) {\n    value2 = FUN_08001064(inputArray[10],0);\n    if (value2 == 0) {\n      value2 = FUN_08001028(inputArray[10],0xc3340000);\n    }\n    else {\n      value2 = FUN_08001064(inputArray[10],0x43340000);\n    }\n    if (value2 != 0) {\n      value3 = inputArray[10];\n      result1 = FUN_08000cec(inputArray[10],0x43b40000);\n      value2 = FUN_08001064(inputArray[10],0);\n      value1 = inputArray[10];\n      if (value2 == 0) {\n        value1 = value1 + -0x80000000;\n      }\n      result1 = FUN_08000e54(result1,value1);\n      value2 = FUN_08000ad8(value3,result1);\n      inputArray[10] = value2;\n    }\n  }\n  value3 = inputArray[2];\n  value1 = inputArray[3];\n  value2 = FUN_08000cec(inputArray[1],inputArray[10]);\n  inputArray[0xe] = value2;\n  value2 = FUN_08000adc(inputArray[10],inputArray[0xf]);\n  inputArray[0xf] = value2;\n  value2 = FUN_08001028(inputArray[0xf],0xc3fa0000);\n  if (value2 == 0) {\n    value2 = FUN_08001064(inputArray[0xf],0x43fa0000);\n    if (value2 == 0) {\n      value2 = inputArray[0xf];\n    }\n    else {\n      value2 = 0x43fa0000;\n    }\n  }\n  else {\n    value2 = -0x3c060000;\n  }\n  inputArray[0xf] = value2;\n  value2 = FUN_08000ad8(inputArray[0xc],inputArray[0xd]);\n  inputArray[0x10] = value2;\n  value2 = inputArray[0xe];\n  result1 = FUN_08000cec(value3,inputArray[0xf]);\n  result1 = FUN_08000adc(result1,value2);\n  result2 = FUN_08000cec(value1,inputArray[0x10]);\n  value2 = FUN_08000ad8(result1,result2);\n  inputArray[0x12] = value2;\n  result1 = FUN_08000c44(inputArray[0x13]);\n  value2 = FUN_08001028(inputArray[0x12],0xc3fa0000);\n  if (value2 == 0) {\n    value2 = FUN_08001064(inputArray[0x12],0x43fa0000);\n    if (value2 == 0) {\n      value2 = inputArray[0x12];\n    }\n    else {\n      value2 = 0x43fa0000;\n    }\n  }\n  else {\n    value2 = -0x3c060000;\n  }\n  value2 = FUN_08000cec(value2,result1);\n  inputArray[0x12] = value2;\n  inputArray[0xd] = inputArray[0xc];\n  inputArray[0xb] = inputArray[10];\n  inputArray[0x15] = inputArray[0x14];\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800483c": "calculate_new_values_0800483c",
                "param_1": "inputArray",
                "uVar1": "result1",
                "uVar2": "result2",
                "iVar3": "value1",
                "iVar4": "value2",
                "iVar5": "value3"
            },
            "calling": [
                "FUN_08004a84"
            ],
            "called": [
                "FUN_08000ad8",
                "FUN_08000e54",
                "FUN_08001028",
                "FUN_08000c44",
                "FUN_08001064",
                "FUN_08000cec",
                "FUN_08000adc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a30": {
            "entrypoint": "0x08004a30",
            "current_name": "initialize_data_08004a30",
            "code": "\nvoid initializeData_08004a30(void)\n\n{\n  undefined4 result;\n  \n  if (DAT_20000285 != '\\0') {\n    if (DAT_200002a8 == '\\0') {\n      result = FUN_08003068();\n      DAT_20000068 = FUN_08000cec(result,0x42c80000);\n      DAT_200002a8 = '\\x01';\n    }\n    else {\n      result = FUN_08003068();\n      DAT_2000007c = FUN_08000cec(result,0x42c80000);\n    }\n  }\n  if (DAT_20000285 == '\\0') {\n    if (DAT_200002a8 != '\\0') {\n      DAT_200002a8 = DAT_20000285;\n    }\n    DAT_20000094 = DAT_20000288;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a30": "initialize_data_08004a30",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08004a84"
            ],
            "called": [
                "FUN_08003068",
                "FUN_08000cec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a84": {
            "entrypoint": "0x08004a84",
            "current_name": "initialize_and_process_data_08004a84",
            "code": "\nvoid initializeAndProcessData_08004a84(void)\n\n{\n  int result;\n  \n  DAT_200000d8 = FUN_08002ec0();\n  DAT_20000134 = FUN_08002ed4();\n  DAT_20000190 = FUN_08002ee8();\n  FUN_08004a30();\n  result = FUN_08001064(DAT_200000d8,0);\n  if (result == 0) {\n    result = FUN_08001028(DAT_200000d8,0xc2a00000);\n  }\n  else {\n    result = FUN_08001064(DAT_200000d8,0x42a00000);\n  }\n  if (result == 0) {\n    result = FUN_08001064(DAT_20000134,0);\n    if (result == 0) {\n      result = FUN_08001028(DAT_20000134,0xc2a00000);\n    }\n    else {\n      result = FUN_08001064(DAT_20000134,0x42a00000);\n    }\n    if (result == 0) {\n      FUN_08003f3c(1,1);\n      FUN_0800483c(&DAT_200000a8);\n      FUN_0800483c(&DAT_20000104);\n      FUN_0800483c(&DAT_20000160);\n      if (DAT_20000285 != '\\0') {\n        FUN_0800483c(&DAT_2000004c);\n        FUN_08000adc(DAT_20000094,0x44bb8000);\n      }\n      DAT_20000094 = DAT_20000288;\n      if (DAT_20000284 == '\\0') {\n        FUN_080041c4();\n      }\n      else {\n        FUN_0800426c(DAT_20000288,DAT_200000f0,DAT_2000014c,DAT_200001a8);\n      }\n      FUN_08000cec(DAT_200000ac,0x437f0000);\n      DAT_2000139b._3_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_200000b0,0x437f0000);\n      DAT_2000139f._0_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_20000108,0x437f0000);\n      DAT_2000139b._0_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_2000010c,0x437f0000);\n      DAT_2000139b._1_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_20000110,0x437f0000);\n      DAT_2000139b._2_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_20000164,0x437f0000);\n      DAT_2000139f._2_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_20000168,0x437f0000);\n      DAT_2000139f._3_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_2000016c,0x437f0000);\n      DAT_200013a3._0_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_20000050,0x437f0000);\n      DAT_200013a3._1_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_20000054,0x437f0000);\n      DAT_200013a3._2_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_20000058,0x437f0000);\n      DAT_200013a3._3_1_ = FUN_080010c4();\n      return;\n    }\n  }\n  FUN_080041c4();\n  FUN_08003f3c(0,1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a84": "initialize_and_process_data_08004a84",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_08001028",
                "FUN_08002ee8",
                "FUN_080041c4",
                "FUN_0800483c",
                "FUN_08000cec",
                "FUN_08002ed4",
                "FUN_08004a30",
                "FUN_0800426c",
                "FUN_08001064",
                "FUN_080010c4",
                "FUN_08003f3c",
                "FUN_08000adc",
                "FUN_08002ec0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c18": {
            "entrypoint": "0x08004c18",
            "current_name": "process_binary_data_08004c18",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800289e) */\n\nundefined4 processBinaryData_08004c18(undefined inputData)\n\n{\n  int *ptrVariable1;\n  int tempVariable1;\n  int tempVariable2;\n  ushort *ptrVariable2;\n  \n  DAT_20001636._0_1_ = inputData;\n  ptrVariable2 = &DAT_20001636;\n  if (((DAT_200015b5 != '\\x01') && (DAT_200015b5 != '\\\"')) || (DAT_200015b4 == '\\x01')) {\n    return 2;\n  }\n  DAT_200015b4 = 1;\n  DAT_200015b8 = 0;\n  DAT_200015a0 = 1;\n  if (DAT_200015b5 == '\\\"') {\n    DAT_200015b5 = '2';\n  }\n  else {\n    DAT_200015b5 = '\\x12';\n  }\n  DAT_200015a2 = 1;\nLAB_080027c4:\n  do {\n    if (DAT_200015a2 == 0) {\n      tempVariable1 = FUN_0800115c();\n      do {\n        if (*DAT_2000157c << 0x19 < 0) {\n          if (DAT_200015b5 == '2') {\n            DAT_200015b5 = 0x22;\n          }\n          else {\n            DAT_200015b5 = 1;\n          }\n          DAT_200015b4 = 0;\n          return 0;\n        }\n        tempVariable2 = FUN_0800115c();\n      } while ((uint)(tempVariable2 - tempVariable1) < 6);\nLAB_0800281c:\n      ptrVariable1 = DAT_2000157c;\n      DAT_2000157c[3] = DAT_2000157c[3] & 0xffffff7f;\n      ptrVariable1[3] = ptrVariable1[3] & 0xffffffdf;\n      ptrVariable1[3] = ptrVariable1[3] & 0xfffffeff;\n      ptrVariable1[5] = ptrVariable1[5] & 0xfffffffe;\n      DAT_200015b5 = 1;\n      DAT_200015b4 = 0;\n      return 3;\n    }\n    DAT_200015a2 = DAT_200015a2 + -1;\n    if (DAT_20001584 == 0x1000) {\n      tempVariable1 = FUN_0800115c();\n      while (-1 < *DAT_2000157c << 0x18) {\n        tempVariable2 = FUN_0800115c();\n        if (5 < (uint)(tempVariable2 - tempVariable1)) goto LAB_0800281c;\n      }\n      DAT_2000157c[1] = *ptrVariable2 & 0x1ff;\n      if (DAT_2000158c == 0) {\n        ptrVariable2 = ptrVariable2 + 1;\n        goto LAB_080027c4;\n      }\n    }\n    else {\n      tempVariable1 = FUN_0800115c();\n      while (-1 < *DAT_2000157c << 0x18) {\n        tempVariable2 = FUN_0800115c();\n        if (5 < (uint)(tempVariable2 - tempVariable1)) goto LAB_0800281c;\n      }\n      DAT_2000157c[1] = (uint)*(byte *)ptrVariable2;\n    }\n    ptrVariable2 = (ushort *)((int)ptrVariable2 + 1);\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08004c18": "process_binary_data_08004c18",
                "param_1": "inputData",
                "piVar1": "ptrVariable1",
                "iVar2": "tempVariable1",
                "iVar3": "tempVariable2",
                "puVar4": "ptrVariable2"
            },
            "calling": [
                "FUN_08004490",
                "FUN_08004300",
                "FUN_08004c8c"
            ],
            "called": [
                "FUN_0800115c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c30": {
            "entrypoint": "0x08004c30",
            "current_name": "check_and_initialize_08004c30",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08002902) */\n\nint * checkAndInitialize_08004c30(int *inputArray)\n\n{\n  int result;\n  \n  if (*inputArray != 0x40013800) {\n    return inputArray;\n  }\n  FUN_08003ec8(&DAT_20000364,DAT_20001634);\n  result = DAT_2000157c;\n  if (((DAT_200015b5 == '\\x01') || (DAT_200015b5 == '\\x12')) && (DAT_200015b4 != '\\x01')) {\n    DAT_200015b8 = 0;\n    DAT_200015a8 = 1;\n    DAT_200015aa = 1;\n    DAT_200015b4 = 0;\n    if (DAT_200015b5 == '\\x12') {\n      DAT_200015b5 = 0x32;\n    }\n    else {\n      DAT_200015b5 = 0x22;\n    }\n    DAT_200015a4 = &DAT_20001634;\n    *(uint *)(DAT_2000157c + 0xc) = *(uint *)(DAT_2000157c + 0xc) | 0x100;\n    *(uint *)(result + 0x14) = *(uint *)(result + 0x14) | 1;\n    *(uint *)(result + 0xc) = *(uint *)(result + 0xc) | 0x20;\n    return (int *)0x0;\n  }\n  return (int *)0x2;\n}\n\n",
            "renaming": {
                "FUN_08004c30": "check_and_initialize_08004c30",
                "param_1": "inputArray",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800290c"
            ],
            "called": [
                "FUN_08003ec8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c64": {
            "entrypoint": "0x08004c64",
            "current_name": "initialize_data_08004c64",
            "code": "\nvoid initializeData_08004c64(void)\n\n{\n  int index;\n  \n  index = 0;\n  DAT_20000b64 = 0;\n  DAT_20000b66 = 0;\n  DAT_20000b68 = 0;\n  do {\n    (&DAT_20000364)[index] = 0;\n    index = index + 1;\n  } while (index != 0x800);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c64": "initialize_data_08004c64",
                "iVar1": "index"
            },
            "calling": [
                "FUN_08004c70"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c70": {
            "entrypoint": "0x08004c70",
            "current_name": "initialize_system_08004c70",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08002902) */\n\nundefined4 initializeSystem_08004c70(void)\n\n{\n  int variable1;\n  \n  FUN_08004c64();\n  variable1 = DAT_2000157c;\n  if (((DAT_200015b5 == '\\x01') || (DAT_200015b5 == '\\x12')) && (DAT_200015b4 != '\\x01')) {\n    DAT_200015b8 = 0;\n    DAT_200015a8 = 1;\n    DAT_200015aa = 1;\n    DAT_200015b4 = 0;\n    if (DAT_200015b5 == '\\x12') {\n      DAT_200015b5 = 0x32;\n    }\n    else {\n      DAT_200015b5 = 0x22;\n    }\n    DAT_200015a4 = &DAT_20001634;\n    *(uint *)(DAT_2000157c + 0xc) = *(uint *)(DAT_2000157c + 0xc) | 0x100;\n    *(uint *)(variable1 + 0x14) = *(uint *)(variable1 + 0x14) | 1;\n    *(uint *)(variable1 + 0xc) = *(uint *)(variable1 + 0xc) | 0x20;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08004c70": "initialize_system_08004c70",
                "iVar1": "variable1"
            },
            "calling": [
                "FUN_08004194"
            ],
            "called": [
                "FUN_08004c64"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c8c": {
            "entrypoint": "0x08004c8c",
            "current_name": "iterate_and_process_elements_08004c8c",
            "code": "\nvoid iterate_and_process_elements_08004c8c(undefined *input_array)\n\n{\n  uint result;\n  undefined *current_element;\n  \n  current_element = input_array;\n  while( true ) {\n    result = FUN_08000150(input_array);\n    if (result <= (uint)((int)current_element - (int)input_array)) break;\n    FUN_08004c18(*current_element);\n    current_element = current_element + 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c8c": "iterate_and_process_elements_08004c8c",
                "param_1": "input_array",
                "uVar1": "result",
                "puVar2": "current_element"
            },
            "calling": [
                "FUN_08004cac",
                "FUN_08004490",
                "FUN_08004300"
            ],
            "called": [
                "FUN_08000150",
                "FUN_08004c18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004cac": {
            "entrypoint": "0x08004cac",
            "current_name": "initialize_data_08004cac",
            "code": "\nvoid initializeData_08004cac(undefined4 sourceData)\n\n{\n  FUN_08004ffc(&DAT_20001636,&DAT_0800735e,sourceData);\n  FUN_08004c8c(&DAT_20001636);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004cac": "initialize_data_08004cac",
                "param_1": "sourceData"
            },
            "calling": [
                "FUN_08004490"
            ],
            "called": [
                "FUN_08004ffc",
                "FUN_08004c8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ccc": {
            "entrypoint": "0x08004ccc",
            "current_name": "initialize_data_08004ccc",
            "code": "\n\n\nvoid initializeData_08004ccc(undefined4 param1,undefined4 param2,undefined4 param3)\n\n{\n  _DAT_40021018 = _DAT_40021018 | 1;\n  FUN_08001170(3,param2,_DAT_40021018,1,param1,1,param3);\n  FUN_08001194(0xfffffff4,0);\n  FUN_08001194(0xfffffff5,0);\n  FUN_08001194(0xfffffff6,0);\n  FUN_08001194(0xfffffffb,0);\n  FUN_08001194(0xfffffffc,0);\n  FUN_08001194(0xfffffffe,0);\n  FUN_08001194(0xffffffff,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004ccc": "initialize_data_08004ccc",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3"
            },
            "calling": [
                "FUN_08001128"
            ],
            "called": [
                "FUN_08001170",
                "FUN_08001194"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d48": {
            "entrypoint": "0x08004d48",
            "current_name": "check_and_modify_data_08004d48",
            "code": "\n\n\nvoid checkAndModifyData_08004d48(int *dataPointer,undefined4 param)\n\n{\n  undefined4 value1;\n  undefined4 value2;\n  \n  if (*dataPointer == 0x40005400) {\n    value1 = 0xc0;\n    value2 = 0x12;\n    FUN_08001264(0x40010c00,&value1,0x40005400,3,dataPointer,param);\n    _DAT_4002101c = _DAT_4002101c | 0x200000;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d48": "check_and_modify_data_08004d48",
                "param_1": "dataPointer",
                "param_2": "param",
                "local_18": "value1",
                "local_14": "value2"
            },
            "calling": [
                "FUN_08001754"
            ],
            "called": [
                "FUN_08001264"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d8c": {
            "entrypoint": "0x08004d8c",
            "current_name": "set_control_bits_08004d8c",
            "code": "\n\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nvoid setControlBits_08004d8c(int *input)\n\n{\n  int value;\n  \n  value = *input;\n  if (value == 0x40012c00) {\n    _DAT_40021018 = _DAT_40021018 | 0x800;\n  }\n  else if (value == 0x40000000) {\n    _DAT_4002101c = _DAT_4002101c | 1;\n  }\n  else if (value == 0x40000400) {\n    _DAT_4002101c = _DAT_4002101c | 2;\n  }\n  else if (value == 0x40000800) {\n    _DAT_4002101c = _DAT_4002101c | 4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d8c": "set_control_bits_08004d8c",
                "param_1": "input",
                "iVar1": "value"
            },
            "calling": [
                "FUN_080023d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e14": {
            "entrypoint": "0x08004e14",
            "current_name": "process_data_08004e14",
            "code": "\nvoid process_data_08004e14(int *data_ptr,undefined4 value_1,undefined4 value_2)\n\n{\n  undefined4 constant_1;\n  int data_value;\n  undefined4 result;\n  undefined4 constant_2;\n  undefined4 input_arg;\n  undefined4 constant_3;\n  \n  data_value = *data_ptr;\n  if (data_value == 0x40012c00) {\n    result = 0x800;\n  }\n  else {\n    if (data_value != 0x40000000) {\n      if (data_value == 0x40000400) {\n        result = 3;\n      }\n      else {\n        if (data_value != 0x40000800) {\n          return;\n        }\n        result = 0x300;\n      }\n      constant_1 = 0x40010c00;\n      goto LAB_08004e2e;\n    }\n    result = 2;\n  }\n  constant_1 = 0x40010800;\nLAB_08004e2e:\n  constant_3 = 2;\n  constant_2 = 2;\n  input_arg = value_2;\n  FUN_08001264(constant_1,&result);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004e14": "process_data_08004e14",
                "param_1": "data_ptr",
                "param_2": "value_1",
                "param_3": "value_2",
                "uVar1": "constant_1",
                "iVar2": "data_value",
                "local_18": "result",
                "local_14": "constant_2",
                "uStack_10": "input_arg",
                "local_c": "constant_3"
            },
            "calling": [
                "FUN_0800458c"
            ],
            "called": [
                "FUN_08001264"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e7c": {
            "entrypoint": "0x08004e7c",
            "current_name": "initialize_function_08004e7c",
            "code": "\n\n\nvoid initializeFunction_08004e7c(int *inputParam)\n\n{\n  undefined4 memorySize;\n  undefined4 count;\n  undefined4 flag;\n  undefined4 temp;\n  \n  if (*inputParam == 0x40013800) {\n    _DAT_40021018 = _DAT_40021018 | 0x4000;\n    memorySize = 0x200;\n    count = 2;\n    temp = 3;\n    FUN_08001264(0x40010800,&memorySize);\n    memorySize = 0x400;\n    count = 0;\n    flag = 0;\n    FUN_08001264(0x40010800,&memorySize);\n    FUN_08001194(0x25,0,0);\n    FUN_080011fc(0x25);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004e7c": "initialize_function_08004e7c",
                "param_1": "inputParam",
                "local_18": "memorySize",
                "local_14": "count",
                "local_10": "flag",
                "local_c": "temp"
            },
            "calling": [
                "FUN_08002724"
            ],
            "called": [
                "FUN_08001264",
                "FUN_08001194",
                "FUN_080011fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004f10": {
            "entrypoint": "0x08004f10",
            "current_name": "initialize_memory_configuration_08004f10",
            "code": "\n\n\nvoid initializeMemoryConfiguration_08004f10(void)\n\n{\n  _DAT_40021000 = _DAT_40021000 & 0xfef2ffff | 1;\n  _DAT_40021004 = _DAT_40021004 & 0xf8800000;\n  _DAT_40021008 = 0x9f0000;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004f10": "initialize_memory_configuration_08004f10"
            },
            "calling": [
                "entry"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_0800115c": {
            "entrypoint": "0x08004f60",
            "current_name": "get_data_from_global_variable_thunk_0800115c",
            "code": "\nundefined4 get_data_from_global_variable_thunk_0800115c(void)\n\n{\n  return DAT_20000244;\n}\n\n",
            "renaming": {
                "thunk_FUN_0800115c": "get_data_from_global_variable_thunk_0800115c"
            },
            "calling": [
                "FUN_08002f28"
            ],
            "called": [
                "FUN_0800115c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_08001168": {
            "entrypoint": "0x08004f64",
            "current_name": "thunk_FUNC_08001168",
            "code": "\nvoid thunk_FUNC_08001168(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "thunk_FUN_08001168": "thunk_FUNC_08001168"
            },
            "calling": [
                "FUN_0800403c",
                "FUN_08004490",
                "FUN_08004028",
                "FUN_08003298"
            ],
            "called": [
                "FUN_08001168"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "entry": {
            "entrypoint": "0x08004f68",
            "current_name": "entry",
            "code": "\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined4 *)(iVar1 + 0x20000000) < &DAT_20000228; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x8007448);\n  }\n  for (puVar2 = &DAT_20000228; puVar2 < &DAT_200016a0; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  FUN_08004f10();\n  FUN_08004fb4();\n  UNRECOVERED_JUMPTABLE = (code *)0x8004f9a;\n  FUN_080041ae();\n                    /* WARNING: Could not recover jumptable at 0x08004f9a. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "renaming": {},
            "calling": [],
            "called": [
                "FUN_08004f10",
                "FUN_08004fb4",
                "FUN_080041ae"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004fb4": {
            "entrypoint": "0x08004fb4",
            "current_name": "execute_functions_08004fb4",
            "code": "\nvoid executeFunctions_08004fb4(void)\n\n{\n  int index;\n  \n  for (index = 0; index != 0; index = index + 1) {\n    (*(code *)(&DAT_08007440)[index])();\n  }\n  FUNC_080072d4();\n  for (index = 0; index != 1; index = index + 1) {\n    (*(code *)(&DAT_08007440)[index])();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004fb4": "execute_functions_08004fb4",
                "iVar1": "index"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_08000134",
                "FUN_080072d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ffc": {
            "entrypoint": "0x08004ffc",
            "current_name": "initialize_parameters_08004ffc",
            "code": "\nvoid initializeParameters_08004ffc(undefined *parameter,undefined4 param1,undefined4 param2,undefined4 param3)\n\n{\n  undefined *array [2];\n  undefined4 maxValue;\n  undefined2 size;\n  undefined2 defaultValue;\n  undefined *pointer;\n  undefined4 maxValueCopy;\n  undefined4 stackValue1;\n  undefined4 stackValue2;\n  undefined4 stackValue3;\n  \n  size = 0x208;\n  maxValue = 0x7fffffff;\n  maxValueCopy = 0x7fffffff;\n  defaultValue = 0xffff;\n  array[0] = parameter;\n  pointer = parameter;\n  stackValue1 = param1;\n  stackValue2 = param2;\n  stackValue3 = param3;\n  FUN_080050fc(DAT_200001c0,array,param1);\n  *array[0] = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004ffc": "initialize_parameters_08004ffc",
                "param_1": "parameter",
                "param_2": "param1",
                "param_3": "param2",
                "param_4": "param3",
                "local_78": "array",
                "local_70": "maxValue",
                "local_6c": "size",
                "local_6a": "defaultValue",
                "local_68": "pointer",
                "local_64": "maxValueCopy",
                "uStack_c": "stackValue1",
                "uStack_8": "stackValue2",
                "uStack_4": "stackValue3"
            },
            "calling": [
                "FUN_08004cac"
            ],
            "called": [
                "FUN_080050fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005044": {
            "entrypoint": "0x08005044",
            "current_name": "update_data_08005044",
            "code": "\nundefined4 updateData_08005044(undefined4 *output,int *input,undefined4 value,uint index)\n\n{\n  int result;\n  uint updatedIndex;\n  uint inputValue;\n  int offset;\n  \n  inputValue = input[2];\n  if ((inputValue <= index) && ((*(ushort *)(input + 3) & 0x480) != 0)) {\n    offset = *input - input[4];\n    inputValue = (uint)(input[5] * 3) / 2;\n    updatedIndex = index + 1 + offset;\n    if (inputValue < updatedIndex) {\n      inputValue = updatedIndex;\n    }\n    if ((int)((uint)*(ushort *)(input + 3) << 0x15) < 0) {\n      result = FUN_08005714(output,inputValue);\n      if (result == 0) {\nLAB_0800508a:\n        *output = 0xc;\n        *(ushort *)(input + 3) = *(ushort *)(input + 3) | 0x40;\n        return 0xffffffff;\n      }\n      FUN_08005630(result,input[4],offset);\n      *(ushort *)(input + 3) = *(ushort *)(input + 3) & 0xfb7f | 0x80;\n    }\n    else {\n      result = FUN_080057d0(output,input[4],inputValue);\n      if (result == 0) {\n        FUN_0800567c(output,input[4]);\n        goto LAB_0800508a;\n      }\n    }\n    input[4] = result;\n    *input = result + offset;\n    input[5] = inputValue;\n    input[2] = inputValue - offset;\n    inputValue = index;\n  }\n  if (index <= inputValue) {\n    inputValue = index;\n  }\n  FUN_08005646(*input,value,inputValue);\n  input[2] = input[2] - inputValue;\n  *input = inputValue + *input;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005044": "update_data_08005044",
                "param_1": "output",
                "param_2": "input",
                "param_3": "value",
                "param_4": "index",
                "iVar1": "result",
                "uVar2": "updatedIndex",
                "uVar3": "inputValue",
                "iVar4": "offset"
            },
            "calling": [
                "FUN_080050fc"
            ],
            "called": [
                "FUN_0800567c",
                "FUN_08005714",
                "FUN_080057d0",
                "FUN_08005646",
                "FUN_08005630"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080050fc": {
            "entrypoint": "0x080050fc",
            "current_name": "parse_string_and_convert_080050fc",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08005294) */\n\nint parse_string_and_convert_080050fc(undefined4 *output_buffer,int *input_buffer,byte *string,int *param_4)\n\n{\n  int result;\n  int status;\n  int *param_2_ptr;\n  bool is_number;\n  byte *string_ptr;\n  byte *current_char;\n  int unaff_r9;\n  int *param_4_ptr;\n  uint bit_flags;\n  int decimal_point;\n  undefined4 unused;\n  int value;\n  int total_length;\n  byte conversion;\n  undefined flag1;\n  undefined flag2;\n  undefined flag3;\n  undefined4 unused2;\n  \n  param_4_ptr = param_4;\n  if (((int)((uint)*(ushort *)(input_buffer + 3) << 0x18) < 0) && (input_buffer[4] == 0)) {\n    result = FUN_08005714(output_buffer,0x40);\n    *input_buffer = result;\n    input_buffer[4] = result;\n    if (result == 0) {\n      *output_buffer = 0xc;\n      return -1;\n    }\n    input_buffer[5] = 0x40;\n  }\n  total_length = 0;\n  flag1 = 0x20;\n  flag2 = 0x30;\n  string_ptr = string;\nLAB_08005146:\n  current_char = string_ptr;\n  if (*current_char != 0) goto LAB_080051ca;\n  goto LAB_08005150;\nLAB_080051ca:\n  string_ptr = current_char + 1;\n  if (*current_char != 0x25) goto LAB_08005146;\nLAB_08005150:\n  result = (int)current_char - (int)string;\n  if (result != 0) {\n    status = FUN_08005044(output_buffer,input_buffer,string,result);\n    if (status == -1) {\nLAB_080052ac:\n      if ((int)((uint)*(ushort *)(input_buffer + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return total_length;\n    }\n    total_length = total_length + result;\n  }\n  if (*current_char == 0) goto LAB_080052ac;\n  bit_flags = 0;\n  value = 0;\n  decimal_point = -1;\n  unused = 0;\n  flag3 = 0;\n  unused2 = 0;\n  string_ptr = current_char + 1;\n  while( true ) {\n    result = FUN_08005614(&DAT_08007379,*string_ptr);\n    string = string_ptr + 1;\n    if (result == 0) break;\n    bit_flags = 1 << (result + 0xf7ff8c87U & 0xff) | bit_flags;\n    string_ptr = string;\n  }\n  if ((int)(bit_flags << 0x1b) < 0) {\n    flag3 = 0x20;\n  }\n  if ((int)(bit_flags << 0x1c) < 0) {\n    flag3 = 0x2b;\n  }\n  if (*string_ptr == 0x2a) {\n    param_2_ptr = param_4_ptr + 1;\n    result = *param_4_ptr;\n    param_4_ptr = param_2_ptr;\n    if (result < 0) {\n      value = -result;\n      bit_flags = bit_flags | 2;\n      goto LAB_080051fc;\n    }\n  }\n  else {\n    is_number = false;\n    result = value;\n    string = string_ptr;\n    while( true ) {\n      if (9 < *string - 0x30) break;\n      result = result * 10 + (*string - 0x30);\n      is_number = true;\n      string = string + 1;\n    }\n    if (!is_number) goto LAB_080051fc;\n  }\n  value = result;\nLAB_080051fc:\n  if (*string == 0x2e) {\n    if (string[1] == 0x2a) {\n      string = string + 2;\n      param_2_ptr = param_4_ptr + 1;\n      decimal_point = *param_4_ptr;\n      param_4_ptr = param_2_ptr;\n      if (decimal_point < 0) {\n        decimal_point = -1;\n      }\n    }\n    else {\n      is_number = false;\n      result = 0;\n      decimal_point = 0;\n      while( true ) {\n        string = string + 1;\n        if (9 < *string - 0x30) break;\n        result = result * 10 + (*string - 0x30);\n        is_number = true;\n      }\n      if (is_number) {\n        decimal_point = result;\n      }\n    }\n  }\n  result = FUN_08005614(&DAT_0800737f,*string,3);\n  if (result != 0) {\n    string = string + 1;\n    bit_flags = bit_flags | 0x40 << (result + 0xf7ff8c81U & 0xff);\n  }\n  conversion = *string;\n  string = string + 1;\n  result = FUN_08005614(\"efgEFG\",conversion,6);\n  if (result == 0) {\n    unaff_r9 = FUN_080053d4(output_buffer,&bit_flags,input_buffer,0x8005045,&param_4_ptr);\n    if (unaff_r9 == -1) goto LAB_080052ac;\n  }\n  else {\n    param_4_ptr = (int *)(((int)param_4_ptr + 7U & 0xfffffff8) + 8);\n  }\n  total_length = total_length + unaff_r9;\n  string_ptr = string;\n  goto LAB_08005146;\n}\n\n",
            "renaming": {
                "FUN_080050fc": "parse_string_and_convert_080050fc",
                "param_1": "output_buffer",
                "param_2": "input_buffer",
                "param_3": "string",
                "iVar1": "result",
                "iVar2": "status",
                "piVar3": "param_2_ptr",
                "bVar4": "is_number",
                "pbVar5": "string_ptr",
                "pbVar6": "current_char",
                "local_8c": "param_4_ptr",
                "local_88": "bit_flags",
                "local_84": "decimal_point",
                "local_80": "unused",
                "local_7c": "value",
                "local_74": "total_length",
                "local_70": "conversion",
                "local_6f": "flag1",
                "local_6e": "flag2",
                "local_45": "flag3",
                "local_30": "unused2"
            },
            "calling": [
                "FUN_08004ffc"
            ],
            "called": [
                "FUN_08005044",
                "FUN_080053d4",
                "FUN_08005714",
                "FUN_08005614"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080052e4": {
            "entrypoint": "0x080052e4",
            "current_name": "calculate_required_length_080052e4",
            "code": "\nundefined4\ncalculateRequiredLength_080052e4(undefined4 input1,uint *input2,uint *output,undefined4 input3,code *callbackFunc)\n\n{\n  int counter1;\n  int returnValue;\n  uint maxLen;\n  uint offset;\n  bool isSpecialCase;\n  \n  maxLen = input2[4];\n  if ((int)input2[4] < (int)input2[2]) {\n    maxLen = input2[2];\n  }\n  *output = maxLen;\n  if (*(char *)((int)input2 + 0x43) != '\\0') {\n    *output = maxLen + 1;\n  }\n  if ((int)(*input2 << 0x1a) < 0) {\n    *output = *output + 2;\n  }\n  if ((*input2 & 6) == 0) {\n    for (counter1 = 0; counter1 < (int)(input2[3] - *output); counter1 = counter1 + 1) {\n      returnValue = (*callbackFunc)(input1,input3,(int)input2 + 0x19,1);\n      if (returnValue == -1) {\n        return 0xffffffff;\n      }\n    }\n  }\n  maxLen = (uint)*(byte *)((int)input2 + 0x43);\n  if (maxLen != 0) {\n    maxLen = 1;\n  }\n  offset = maxLen;\n  if ((int)(*input2 << 0x1a) < 0) {\n    *(undefined *)((int)input2 + maxLen + 0x43) = 0x30;\n    offset = maxLen + 2;\n    *(undefined *)((int)input2 + maxLen + 0x44) = *(undefined *)((int)input2 + 0x45);\n  }\n  counter1 = (*callbackFunc)(input1,input3,(int)input2 + 0x43,offset);\n  if (counter1 != -1) {\n    maxLen = input2[3];\n    isSpecialCase = (*input2 & 6) != 4;\n    if (isSpecialCase) {\n      maxLen = 0;\n    }\n    offset = 0;\n    if (!isSpecialCase) {\n      maxLen = maxLen - *output;\n    }\n    if (!isSpecialCase) {\n      maxLen = maxLen & ~((int)maxLen >> 0x1f);\n    }\n    if ((int)input2[4] < (int)input2[2]) {\n      maxLen = maxLen + (input2[2] - input2[4]);\n    }\n    while( true ) {\n      if (maxLen == offset) {\n        return 0;\n      }\n      counter1 = (*callbackFunc)(input1,input3,(int)input2 + 0x1a,1);\n      if (counter1 == -1) break;\n      offset = offset + 1;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080052e4": "calculate_required_length_080052e4",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "output",
                "param_4": "input3",
                "param_5": "callbackFunc",
                "iVar1": "counter1",
                "iVar2": "returnValue",
                "uVar3": "maxLen",
                "uVar4": "offset",
                "bVar5": "isSpecialCase"
            },
            "calling": [
                "FUN_080053d4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080053d4": {
            "entrypoint": "0x080053d4",
            "current_name": "convert_and_process_data_080053d4",
            "code": "\nuint convertAndProcessData_080053d4(undefined4 input_pointer,uint *data_pointer,undefined4 param_3,code *function_pointer,uint **output_data_pointer)\n\n{\n  byte byte_value;\n  int index;\n  uint *pointer_value;\n  int temp_index;\n  char *hexadecimal_characters;\n  uint value6;\n  uint **ppuVar7;\n  char **ppcVar8;\n  uint value9;\n  uint value10;\n  char *output_string_pointer;\n  char *input_string_pointer;\n  uint output_data_array [2];\n  \n  byte_value = *(byte *)(data_pointer + 6);\n  input_string_pointer = (char *)((int)data_pointer + 0x43);\n  if (byte_value != 0x6e) {\n    if (byte_value < 0x6f) {\n      if (byte_value != 99) {\n        if (byte_value < 100) {\n          if (byte_value == 0) goto LAB_0800558e;\n          if (byte_value != 0x58) goto LAB_08005404;\n          *(undefined *)((int)data_pointer + 0x45) = 0x58;\n          hexadecimal_characters = \"0123456789ABCDEF\";\nLAB_0800551e:\n          value6 = *data_pointer;\n          pointer_value = *output_data_pointer;\n          *output_data_pointer = pointer_value + 1;\n          if (((value6 & 0x80) == 0) && ((int)(value6 << 0x19) < 0)) {\n            value9 = (uint)*(ushort *)pointer_value;\n          }\n          else {\n            value9 = *pointer_value;\n          }\n          if ((int)(value6 << 0x1f) < 0) {\n            *data_pointer = value6 | 0x20;\n          }\n          if (value9 == 0) {\n            *data_pointer = *data_pointer & 0xffffffdf;\n          }\n          value6 = 0x10;\nLAB_080054b4:\n          *(undefined *)((int)data_pointer + 0x43) = 0;\n        }\n        else {\n          if ((byte_value != 100) && (byte_value != 0x69)) goto LAB_08005404;\n          value9 = *data_pointer;\n          pointer_value = *output_data_pointer;\n          if ((value9 & 0x80) == 0) {\n            *output_data_pointer = pointer_value + 1;\n            if ((value9 & 0x40) == 0) goto LAB_08005424;\n            value9 = (uint)(short)*(ushort *)pointer_value;\n          }\n          else {\n            *output_data_pointer = pointer_value + 1;\nLAB_08005424:\n            value9 = *pointer_value;\n          }\n          if ((int)value9 < 0) {\n            value9 = -value9;\n            *(undefined *)((int)data_pointer + 0x43) = 0x2d;\n          }\n          hexadecimal_characters = \"0123456789ABCDEF\";\n          value6 = 10;\n        }\n        value10 = data_pointer[1];\n        data_pointer[2] = value10;\n        output_string_pointer = input_string_pointer;\n        if ((int)value10 < 0) {\n          if (value9 != 0) goto LAB_08005552;\nLAB_08005600:\n          *(char *)((int)data_pointer + 0x42) = *hexadecimal_characters;\n          output_string_pointer = (char *)((int)data_pointer + 0x42);\n        }\n        else {\n          *data_pointer = *data_pointer & 0xfffffffb;\n          if (value9 == 0) {\n            if (value10 != 0) goto LAB_08005600;\n          }\n          else {\nLAB_08005552:\n            do {\n              value10 = value9 / value6;\n              output_string_pointer = output_string_pointer + -1;\n              *output_string_pointer = hexadecimal_characters[value9 - value6 * value10];\n              value9 = value10;\n            } while (value10 != 0);\n          }\n        }\n        if (((value6 == 8) && ((int)(*data_pointer << 0x1f) < 0)) && ((int)data_pointer[1] <= (int)data_pointer[4]))\n        {\n          output_string_pointer[-1] = '0';\n          output_string_pointer = output_string_pointer + -1;\n        }\n        data_pointer[4] = (int)input_string_pointer - (int)output_string_pointer;\n        input_string_pointer = output_string_pointer;\n        goto LAB_080054fa;\n      }\n      pointer_value = *output_data_pointer;\n      *output_data_pointer = pointer_value + 1;\n      *(char *)((int)data_pointer + 0x42) = (char)*pointer_value;\nLAB_08005464:\n      input_string_pointer = (char *)((int)data_pointer + 0x42);\n      value9 = 1;\n    }\n    else {\n      if (byte_value != 0x73) {\n        if (byte_value < 0x74) {\n          if (byte_value == 0x6f) {\nLAB_0800548a:\n            value9 = *data_pointer;\n            pointer_value = *output_data_pointer;\n            if ((value9 & 0x80) == 0) {\n              *output_data_pointer = pointer_value + 1;\n              if ((value9 & 0x40) == 0) goto LAB_08005498;\n              value9 = (uint)*(ushort *)pointer_value;\n            }\n            else {\n              *output_data_pointer = pointer_value + 1;\nLAB_08005498:\n              value9 = *pointer_value;\n            }\n            if (byte_value == 0x6f) {\n              value6 = 8;\n            }\n            else {\n              value6 = 10;\n            }\n            hexadecimal_characters = \"0123456789ABCDEF\";\n            goto LAB_080054b4;\n          }\n          if (byte_value == 0x70) {\n            *data_pointer = *data_pointer | 0x20;\nLAB_0800544a:\n            hexadecimal_characters = \"0123456789abcdef\";\n            *(undefined *)((int)data_pointer + 0x45) = 0x78;\n            goto LAB_0800551e;\n          }\n        }\n        else {\n          if (byte_value == 0x75) goto LAB_0800548a;\n          if (byte_value == 0x78) goto LAB_0800544a;\n        }\nLAB_08005404:\n        *(byte *)((int)data_pointer + 0x42) = byte_value;\n        goto LAB_08005464;\n      }\n      ppcVar8 = (char **)*output_data_pointer;\n      *output_data_pointer = (uint *)(ppcVar8 + 1);\n      input_string_pointer = *ppcVar8;\n      index = FUN_08005614(input_string_pointer,0,data_pointer[1]);\n      if (index != 0) {\n        data_pointer[1] = index - (int)input_string_pointer;\n      }\n      value9 = data_pointer[1];\n    }\n    data_pointer[4] = value9;\n    *(undefined *)((int)data_pointer + 0x43) = 0;\n    goto LAB_080054fa;\n  }\n  value9 = *data_pointer;\n  ppuVar7 = (uint **)*output_data_pointer;\n  value6 = data_pointer[5];\n  if ((value9 & 0x80) == 0) {\n    *output_data_pointer = (uint *)(ppuVar7 + 1);\n    pointer_value = *ppuVar7;\n    if ((value9 & 0x40) == 0) goto LAB_0800557a;\n    *(short *)pointer_value = (short)value6;\n  }\n  else {\n    *output_data_pointer = (uint *)(ppuVar7 + 1);\n    pointer_value = *ppuVar7;\nLAB_0800557a:\n    *pointer_value = value6;\n  }\nLAB_0800558e:\n  data_pointer[4] = 0;\nLAB_080054fa:\n  index = FUN_080052e4(input_pointer,data_pointer,output_data_array,param_3,function_pointer);\n  if ((index == -1) || (index = (*function_pointer)(input_pointer,param_3,input_string_pointer,data_pointer[4]), index == -1)) {\nLAB_0800550e:\n    value9 = 0xffffffff;\n  }\n  else {\n    if ((int)(*data_pointer << 0x1e) < 0) {\n      for (index = 0; index < (int)(data_pointer[3] - output_data_array[0]); index = index + 1) {\n        temp_index = (*function_pointer)(input_pointer,param_3,(int)data_pointer + 0x19,1);\n        if (temp_index == -1) goto LAB_0800550e;\n      }\n    }\n    value9 = data_pointer[3];\n    if ((int)data_pointer[3] < (int)output_data_array[0]) {\n      value9 = output_data_array[0];\n    }\n  }\n  return value9;\n}\n\n",
            "renaming": {
                "FUN_080053d4": "convert_and_process_data_080053d4",
                "param_1": "input_pointer",
                "param_2": "data_pointer",
                "param_4": "function_pointer",
                "param_5": "output_data_pointer",
                "bVar1": "byte_value",
                "iVar2": "index",
                "puVar3": "pointer_value",
                "iVar4": "temp_index",
                "pcVar5": "hexadecimal_characters",
                "uVar6": "value6",
                "uVar9": "value9",
                "uVar10": "value10",
                "pcVar11": "output_string_pointer",
                "pcVar12": "input_string_pointer",
                "local_24": "output_data_array"
            },
            "calling": [
                "FUN_080050fc"
            ],
            "called": [
                "FUN_080052e4",
                "FUN_08005614"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005614": {
            "entrypoint": "0x08005614",
            "current_name": "find_character_08005614",
            "code": "\nchar * find_character_08005614(char *string,char character,int length)\n\n{\n  char *current_char;\n  char *next_char;\n  \n  current_char = string;\n  do {\n    next_char = current_char;\n    if (next_char == string + length) {\n      return (char *)0x0;\n    }\n    current_char = next_char + 1;\n  } while (*next_char != character);\n  return next_char;\n}\n\n",
            "renaming": {
                "FUN_08005614": "find_character_08005614",
                "param_1": "string",
                "param_2": "character",
                "param_3": "length",
                "pcVar1": "current_char",
                "pcVar2": "next_char"
            },
            "calling": [
                "FUN_080053d4",
                "FUN_080050fc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005630": {
            "entrypoint": "0x08005630",
            "current_name": "copy_data_08005630",
            "code": "\nvoid copyData_08005630(int startAddress,undefined *sourceData,int size)\n\n{\n  undefined *destinationEnd;\n  undefined *destinationPtr;\n  \n  destinationPtr = (undefined *)(startAddress + -1);\n  destinationEnd = sourceData + size;\n  for (; sourceData != destinationEnd; sourceData = sourceData + 1) {\n    destinationPtr = destinationPtr + 1;\n    *destinationPtr = *sourceData;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005630": "copy_data_08005630",
                "param_1": "startAddress",
                "param_2": "sourceData",
                "param_3": "size",
                "puVar1": "destinationEnd",
                "puVar2": "destinationPtr"
            },
            "calling": [
                "FUN_08005044",
                "FUN_080057d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005646": {
            "entrypoint": "0x08005646",
            "current_name": "copy_and_reverse_08005646",
            "code": "\nvoid copyAndReverse_08005646(undefined *destination,undefined *source,int length)\n\n{\n  undefined *end;\n  \n  end = source + length;\n  if ((source < destination) && (destination < end)) {\n    destination = destination + length;\n    length = length - (int)end;\n    while (end + length != (undefined *)0x0) {\n      end = end + -1;\n      destination = destination + -1;\n      *destination = *end;\n    }\n    return;\n  }\n  destination = destination + -1;\n  for (; source != end; source = source + 1) {\n    destination = destination + 1;\n    *destination = *source;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005646": "copy_and_reverse_08005646",
                "param_1": "destination",
                "param_2": "source",
                "param_3": "length",
                "puVar1": "end"
            },
            "calling": [
                "FUN_08005044"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800567c": {
            "entrypoint": "0x0800567c",
            "current_name": "update_data_structure_0800567c",
            "code": "\nvoid updateDataStructure_0800567c(undefined4 *output,int size,undefined4 param3,undefined4 param4)\n\n{\n  int **temp1;\n  int **temp2;\n  int **temp3;\n  int *temp4;\n  int **temp5;\n  int **temp6;\n  \n  if (size == 0) {\n    return;\n  }\n  temp6 = (int **)(size + -4);\n  if (*(int *)(size + -4) < 0) {\n    temp6 = (int **)((int)temp6 + *(int *)(size + -4));\n  }\n  FUNC_0800583c();\n  temp3 = (int **)&DAT_200002ac;\n  if (DAT_200002ac == (int **)0x0) {\n    temp6[1] = (int *)0x0;\n    temp2 = temp1;\n    DAT_200002ac = temp6;\n  }\n  else {\n    temp3 = DAT_200002ac;\n    if (temp6 < DAT_200002ac) {\n      temp2 = (int **)*temp6;\n      temp3 = (int **)((int)temp6 + (int)temp2);\n      if (DAT_200002ac == temp3) {\n        temp4 = *DAT_200002ac;\n        DAT_200002ac = (int **)DAT_200002ac[1];\n        temp3 = (int **)((int)temp4 + (int)temp2);\n        *temp6 = (int *)temp3;\n      }\n      temp6[1] = (int *)DAT_200002ac;\n      DAT_200002ac = temp6;\n    }\n    else {\n      do {\n        temp5 = temp3;\n        temp3 = (int **)temp5[1];\n        if (temp3 == (int **)0x0) break;\n      } while (temp3 <= temp6);\n      temp2 = (int **)*temp5;\n      if ((int **)((int)temp5 + (int)temp2) == temp6) {\n        temp2 = (int **)((int)temp2 + (int)*temp6);\n        *temp5 = (int *)temp2;\n        if (temp3 == (int **)((int)temp5 + (int)temp2)) {\n          temp4 = *temp3;\n          temp3 = (int **)temp3[1];\n          temp2 = (int **)((int)temp2 + (int)temp4);\n          *temp5 = (int *)temp2;\n          temp5[1] = (int *)temp3;\n        }\n      }\n      else if (temp6 < (int **)((int)temp5 + (int)temp2)) {\n        *output = 0xc;\n      }\n      else {\n        temp2 = (int **)((int)temp6 + (int)*temp6);\n        if (temp3 == temp2) {\n          temp4 = *temp3;\n          temp3 = (int **)temp3[1];\n          temp2 = (int **)((int)temp4 + (int)*temp6);\n          *temp6 = (int *)temp2;\n        }\n        temp6[1] = (int *)temp3;\n        temp5[1] = (int *)temp6;\n      }\n    }\n  }\n  FUNC_0800583e(output,temp2,temp3,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800567c": "update_data_structure_0800567c",
                "param_1": "output",
                "param_2": "size",
                "param_3": "param3",
                "param_4": "param4",
                "extraout_r1": "temp1",
                "ppiVar1": "temp2",
                "ppiVar2": "temp3",
                "piVar3": "temp4",
                "ppiVar4": "temp5",
                "ppiVar5": "temp6"
            },
            "calling": [
                "FUN_08005044",
                "FUN_080057d0"
            ],
            "called": [
                "FUN_0800583c",
                "FUN_0800583e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005714": {
            "entrypoint": "0x08005714",
            "current_name": "resize_and_store_data_08005714",
            "code": "\nuint resizeAndStoreData_08005714(undefined4 *outputPtr,uint size)\n\n{\n  uint *currentPtr;\n  int difference;\n  uint *prevPtr;\n  uint diffSize;\n  uint *prevPtrNext;\n  uint adjustedSize;\n  \n  adjustedSize = (size + 3 & 0xfffffffc) + 8;\n  if (adjustedSize < 0xc) {\n    adjustedSize = 0xc;\n  }\n  if (((int)adjustedSize < 0) || (adjustedSize < size)) {\n    *outputPtr = 0xc;\n  }\n  else {\n    FUNC_0800583c();\n    currentPtr = DAT_200002ac;\n    prevPtrNext = DAT_200002ac;\n    while (prevPtr = currentPtr, prevPtr != (uint *)0x0) {\n      diffSize = *prevPtr - adjustedSize;\n      if (-1 < (int)diffSize) {\n        if (diffSize < 0xc) {\n          if (prevPtrNext == prevPtr) {\n            currentPtr = (uint *)prevPtrNext[1];\n            DAT_200002ac = currentPtr;\n          }\n          else {\n            currentPtr = (uint *)prevPtr[1];\n          }\n          if (prevPtrNext != prevPtr) {\n            prevPtrNext[1] = (uint)currentPtr;\n            prevPtrNext = prevPtr;\n          }\n        }\n        else {\n          *prevPtr = diffSize;\n          *(uint *)((int)prevPtr + diffSize) = adjustedSize;\n          prevPtrNext = (uint *)((int)prevPtr + diffSize);\n        }\n        goto LAB_08005778;\n      }\n      prevPtrNext = prevPtr;\n      currentPtr = (uint *)prevPtr[1];\n    }\n    if (DAT_200002b0 == 0) {\n      DAT_200002b0 = FUN_0800581c(outputPtr);\n    }\n    currentPtr = (uint *)FUN_0800581c(outputPtr,adjustedSize);\n    if ((currentPtr != (uint *)0xffffffff) &&\n       ((prevPtrNext = (uint *)((int)currentPtr + 3U & 0xfffffffc), currentPtr == prevPtrNext ||\n        (difference = FUN_0800581c(outputPtr,(int)prevPtrNext - (int)currentPtr), difference != -1)))) {\n      *prevPtrNext = adjustedSize;\nLAB_08005778:\n      FUNC_0800583e(outputPtr);\n      adjustedSize = (int)prevPtrNext + 0xbU & 0xfffffff8;\n      difference = adjustedSize - (int)(prevPtrNext + 1);\n      if (difference != 0) {\n        *(int *)((int)prevPtrNext + difference) = -difference;\n        return adjustedSize;\n      }\n      return adjustedSize;\n    }\n    *outputPtr = 0xc;\n    FUNC_0800583e(outputPtr);\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005714": "resize_and_store_data_08005714",
                "param_1": "outputPtr",
                "param_2": "size",
                "puVar1": "currentPtr",
                "iVar2": "difference",
                "puVar3": "prevPtr",
                "uVar4": "diffSize",
                "puVar5": "prevPtrNext",
                "uVar6": "adjustedSize"
            },
            "calling": [
                "FUN_08005044",
                "FUN_080050fc",
                "FUN_080057d0"
            ],
            "called": [
                "FUN_0800583c",
                "FUN_0800581c",
                "FUN_0800583e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080057d0": {
            "entrypoint": "0x080057d0",
            "current_name": "process_data_080057d0",
            "code": "\nint processData_080057d0(undefined4 input1,int size1,uint size2,undefined4 input2)\n\n{\n  int result;\n  uint value;\n  \n  if (size1 != 0) {\n    if (size2 == 0) {\n      FUN_0800567c();\n      result = 0;\n    }\n    else {\n      value = FUN_08005840();\n      result = size1;\n      if ((value < size2) && (result = FUN_08005714(input1,size2), result != 0)) {\n        FUN_08005630(result,size1,size2);\n        FUN_0800567c(input1,size1);\n      }\n    }\n    return result;\n  }\n  result = FUN_08005714(input1,size2,size2,input2);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080057d0": "process_data_080057d0",
                "param_1": "input1",
                "param_2": "size1",
                "param_3": "size2",
                "param_4": "input2",
                "iVar1": "result",
                "uVar2": "value"
            },
            "calling": [
                "FUN_08005044"
            ],
            "called": [
                "FUN_0800567c",
                "FUN_08005714",
                "FUN_08005840",
                "FUN_08005630"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800581c": {
            "entrypoint": "0x0800581c",
            "current_name": "find_error_and_set_param_0800581c",
            "code": "\nvoid findErrorAndSetParam_0800581c(int *resultParam,undefined4 inputParam)\n\n{\n  int returnValue;\n  \n  DAT_2000169c = 0;\n  returnValue = FUN_080072b8(inputParam);\n  if ((returnValue == -1) && (DAT_2000169c != 0)) {\n    *resultParam = DAT_2000169c;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800581c": "find_error_and_set_param_0800581c",
                "param_1": "resultParam",
                "param_2": "inputParam",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08005714"
            ],
            "called": [
                "FUN_080072b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800583c": {
            "entrypoint": "0x0800583c",
            "current_name": "FUNC_0800583c",
            "code": "\nvoid FUNC_0800583c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800583c": "FUNC_0800583c"
            },
            "calling": [
                "FUN_0800567c",
                "FUN_08005714"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800583e": {
            "entrypoint": "0x0800583e",
            "current_name": "FUNC_0800583e",
            "code": "\nvoid FUNC_0800583e(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800583e": "FUNC_0800583e"
            },
            "calling": [
                "FUN_0800567c",
                "FUN_08005714"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005840": {
            "entrypoint": "0x08005840",
            "current_name": "calculate_modified_value_08005840",
            "code": "\nint calculateModifiedValue_08005840(undefined4 param1,int param2)\n\n{\n  int modifiedValue;\n  \n  modifiedValue = *(int *)(param2 + -4) + -4;\n  if (*(int *)(param2 + -4) < 0) {\n    modifiedValue = modifiedValue + *(int *)(param2 + modifiedValue);\n  }\n  return modifiedValue;\n}\n\n",
            "renaming": {
                "FUN_08005840": "calculate_modified_value_08005840",
                "param_1": "param1",
                "param_2": "param2",
                "iVar1": "modifiedValue"
            },
            "calling": [
                "FUN_080057d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005854": {
            "entrypoint": "0x08005854",
            "current_name": "verify_and_initialize_08005854",
            "code": "\nundefined8 verify_and_initialize_08005854(undefined4 input_1,undefined4 input_2)\n\n{\n  int result;\n  undefined4 *ptr_value;\n  int *ptr_result;\n  undefined8 default_value;\n  undefined8 computed_value;\n  undefined4 flag;\n  undefined *ptr;\n  undefined4 input_1_copy;\n  undefined4 input_2_copy;\n  undefined4 input_1_copy_2;\n  undefined4 input_2_copy_2;\n  undefined8 output;\n  int result_copy;\n  \n  default_value = FUN_08005c70();\n  if (DAT_20000224 == -1) {\n    return default_value;\n  }\n  result_copy = FUN_08000a04(input_1,input_2,input_1,input_2);\n  if (result_copy != 0) {\n    return default_value;\n  }\n  computed_value = FUNC_0800708c(input_1,input_2);\n  result = FUN_080009f0((int)computed_value,(int)((ulonglong)computed_value >> 0x20),0,0x3ff00000);\n  if (result == 0) {\n    return default_value;\n  }\n  flag = 1;\n  ptr = &DAT_080073ac;\n  input_1_copy = input_1;\n  input_2_copy = input_2;\n  input_1_copy_2 = input_1;\n  input_2_copy_2 = input_2;\n  output = FUN_080070a4(&DAT_0800737e);\n  if (DAT_20000224 != '\\x02') {\n    result = FUN_0800709e(&flag);\n    if (result != 0) goto LAB_080058d0;\n  }\n  ptr_value = (undefined4 *)FUN_080072ac();\n  *ptr_value = 0x21;\nLAB_080058d0:\n  if (result_copy != 0) {\n    ptr_result = (int *)FUN_080072ac();\n    *ptr_result = result_copy;\n  }\n  return output;\n}\n\n",
            "renaming": {
                "FUN_08005854": "verify_and_initialize_08005854",
                "param_1": "input_1",
                "param_2": "input_2",
                "iVar1": "result",
                "puVar2": "ptr_value",
                "piVar3": "ptr_result",
                "uVar4": "default_value",
                "uVar5": "computed_value",
                "local_48": "flag",
                "local_44": "ptr",
                "local_40": "input_1_copy",
                "uStack_3c": "input_2_copy",
                "local_38": "input_1_copy_2",
                "uStack_34": "input_2_copy_2",
                "local_30": "output",
                "local_28": "result_copy"
            },
            "calling": [
                "FUN_08003330"
            ],
            "called": [
                "FUN_0800708c",
                "FUN_080072ac",
                "FUN_080070a4",
                "FUN_08005c70",
                "FUN_080009f0",
                "FUN_0800709e",
                "FUN_08000a04"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_08006070": {
            "entrypoint": "0x080058fc",
            "current_name": "calculate_double_precision_value_thunk_08006070",
            "code": "\nundefined8 calculate_double_precision_value_thunk_08006070(uint input_param_1,uint input_param_2,uint input_param_3,uint input_param_4)\n\n{\n  undefined4 temp_var_1;\n  uint temp_var_2;\n  uint temp_var_3;\n  int temp_var_4;\n  uint temp_var_5;\n  undefined8 result_1;\n  undefined8 result_2;\n  \n  temp_var_5 = input_param_4 & 0x7fffffff;\n  if ((0x7ff00000 < (temp_var_5 | (-input_param_3 | input_param_3) >> 0x1f)) ||\n     (temp_var_3 = input_param_2 & 0x7fffffff, 0x7ff00000 < (temp_var_3 | (-input_param_1 | input_param_1) >> 0x1f))) {\n    result_1 = FUN_0800016c(input_param_1,input_param_2,input_param_3,input_param_4,input_param_4);\n    return result_1;\n  }\n  if ((input_param_4 + 0xc0100000 | input_param_3) == 0) {\n    result_1 = FUN_08006d68();\n    return result_1;\n  }\n  temp_var_2 = (int)input_param_4 >> 0x1e & 2U | input_param_2 >> 0x1f;\n  if ((input_param_1 | temp_var_3) == 0) {\n    if (temp_var_2 == 2) {\n      return 0x400921fb54442d18;\n    }\n    if (temp_var_2 != 3) {\n      return CONCAT44(input_param_2,input_param_1);\n    }\nLAB_0800613e:\n    result_1 = 0xc00921fb54442d18;\n  }\n  else {\n    if ((input_param_3 | temp_var_5) != 0) {\n      if (temp_var_5 == 0x7ff00000) {\n        if (temp_var_3 == 0x7ff00000) {\n          if (temp_var_2 == 2) {\n            return 0x4002d97c7f3321d2;\n          }\n          if (temp_var_2 == 3) {\n            return 0xc002d97c7f3321d2;\n          }\n          if (temp_var_2 != 1) {\n            return 0x3fe921fb54442d18;\n          }\n          return 0xbfe921fb54442d18;\n        }\n        if (temp_var_2 == 2) {\n          return 0x400921fb54442d18;\n        }\n        if (temp_var_2 != 3) {\n          if (temp_var_2 != 1) {\n            return 0;\n          }\n          return 0x8000000000000000;\n        }\n        goto LAB_0800613e;\n      }\n      if (temp_var_3 != 0x7ff00000) {\n        temp_var_4 = (int)(temp_var_3 - temp_var_5) >> 0x14;\n        if (temp_var_4 < 0x3d) {\n          if (((int)input_param_4 < 0) && (temp_var_4 + 0x3c < 0 != SCARRY4(temp_var_4,0x3c))) {\n            result_1 = 0;\n          }\n          else {\n            FUN_08000724(input_param_1,input_param_2);\n            FUNC_0800708c();\n            result_1 = FUN_08006d68();\n          }\n        }\n        else {\n          result_1 = 0x3ff921fb54442d18;\n        }\n        temp_var_4 = (int)((ulonglong)result_1 >> 0x20);\n        temp_var_1 = (undefined4)result_1;\n        if (temp_var_2 == 1) {\n          return CONCAT44(temp_var_4 + -0x80000000,temp_var_1);\n        }\n        if (temp_var_2 == 2) {\n          result_2 = FUN_08000168(temp_var_1,temp_var_4,0x33145c07,0x3ca1a626);\n          result_1 = 0x400921fb54442d18;\n        }\n        else {\n          if (temp_var_2 == 0) {\n            return result_1;\n          }\n          result_1 = FUN_08000168(temp_var_1,temp_var_4,0x33145c07,0x3ca1a626);\n          result_2 = 0x400921fb54442d18;\n        }\n        result_1 = FUN_08000168((int)result_1,(int)((ulonglong)result_1 >> 0x20),(int)result_2,\n                             (int)((ulonglong)result_2 >> 0x20));\n        return result_1;\n      }\n    }\n    if ((int)input_param_2 < 0) {\n      result_1 = 0xbff921fb54442d18;\n    }\n    else {\n      result_1 = 0x3ff921fb54442d18;\n    }\n  }\n  return result_1;\n}\n\n",
            "renaming": {
                "thunk_FUN_08006070": "calculate_double_precision_value_thunk_08006070",
                "param_1": "input_param_1",
                "param_2": "input_param_2",
                "param_3": "input_param_3",
                "param_4": "input_param_4",
                "uVar1": "temp_var_1",
                "uVar2": "temp_var_2",
                "uVar3": "temp_var_3",
                "iVar4": "temp_var_4",
                "uVar5": "temp_var_5",
                "uVar6": "result_1",
                "uVar7": "result_2"
            },
            "calling": [
                "FUN_08003330"
            ],
            "called": [
                "FUN_08006070"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005900": {
            "entrypoint": "0x08005900",
            "current_name": "process_data_08005900",
            "code": "\nundefined8 processData_08005900(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  char flag;\n  int result;\n  int *ptrResult;\n  undefined4 *ptrFlag;\n  int tempResult;\n  undefined4 highInput;\n  undefined4 lowInput;\n  undefined8 returnValue;\n  undefined8 tempValue;\n  undefined4 condition1;\n  undefined *message;\n  undefined4 copyOfInput1;\n  undefined4 copyOfInput2;\n  undefined4 copyOfInput3;\n  undefined4 copyOfInput4;\n  undefined8 output;\n  int tempVar;\n  \n  returnValue = FUN_08006228();\n  flag = DAT_20000224;\n  highInput = (undefined4)((ulonglong)returnValue >> 0x20);\n  lowInput = (undefined4)returnValue;\n  if (DAT_20000224 == -1) {\n    return returnValue;\n  }\n  result = FUN_08000a04(input3,input4,input3,input4);\n  if (result != 0) {\n    return returnValue;\n  }\n  result = FUN_08000a04(input1,input2,input1,input2);\n  copyOfInput1 = input1;\n  copyOfInput2 = input2;\n  copyOfInput3 = input3;\n  copyOfInput4 = input4;\n  if (result == 0) {\n    result = FUN_080009a0(input1,input2,0,0);\n    if (result != 0) {\n      result = FUN_080009a0(input3,input4,0,0);\n      if (result != 0) {\n        condition1 = 1;\n        message = &DAT_080073b1;\n        output = 0;\n        tempVar = 0;\n        if (flag != '\\0') {\n          output = 0x3ff0000000000000;\n          goto LAB_080059d0;\n        }\n        goto LAB_08005978;\n      }\n      result = FUN_08007092(input3,input4);\n      if (result == 0) {\n        return returnValue;\n      }\n      result = FUN_080009b4(input3,input4,0,0);\n      if (result == 0) {\n        return returnValue;\n      }\n      condition1 = 1;\n      message = &DAT_080073b1;\n      tempVar = 0;\n      if (DAT_20000224 == '\\0') goto LAB_08005a22;\n      output = 0xfff0000000000000;\n      tempVar = 0;\n      flag = DAT_20000224;\nLAB_08005a32:\n      if (flag != '\\x02') goto LAB_08005978;\n      goto LAB_08005a34;\n    }\n    result = FUN_08007092(lowInput,highInput);\n    if (((result != 0) || (tempResult = FUN_08007092(input1,input2), tempResult == 0)) ||\n       (tempResult = FUN_08007092(input3,input4), tempResult == 0)) {\n      result = FUN_080009a0(lowInput,highInput,0,0);\n      if (result == 0) {\n        return returnValue;\n      }\n      result = FUN_08007092(input1,input2);\n      if (result == 0) {\n        return returnValue;\n      }\n      result = FUN_08007092(input3,input4);\n      if (result == 0) {\n        return returnValue;\n      }\n      condition1 = 4;\n      message = &DAT_080073b1;\n      tempVar = 0;\n      output._0_4_ = 0;\n      output._4_4_ = 0;\n      goto LAB_08005afa;\n    }\n    tempVar = FUN_08000a04(lowInput,highInput);\n    flag = DAT_20000224;\n    if (tempVar != 0) {\n      message = &DAT_080073b1;\n      condition1 = 1;\n      tempVar = result;\n      if (DAT_20000224 != '\\0') {\n        output = FUN_08000724(0,0,0,0);\n        goto LAB_08005a32;\n      }\nLAB_08005a22:\n      message = &DAT_080073b1;\n      condition1 = 1;\n      output = 0;\n      goto LAB_08005978;\n    }\n    message = &DAT_080073b1;\n    condition1 = 3;\n    if (DAT_20000224 == '\\0') {\n      output._0_4_ = 0xe0000000;\n      output._4_4_ = 0x47efffff;\n      result = FUN_080009b4(input1,input2,0,0);\n      if (result != 0) {\n        returnValue = FUN_080004d0(input3,input4,0,0x3fe00000);\n        tempValue = FUN_080070b0();\n        result = FUN_080009a0((int)returnValue,(int)((ulonglong)returnValue >> 0x20),(int)tempValue,\n                             (int)((ulonglong)tempValue >> 0x20));\n        if (result == 0) {\n          output._0_4_ = 0xe0000000;\n          output._4_4_ = 0xc7efffff;\n        }\n        goto LAB_08005afa;\n      }\nLAB_08005b98:\n      result = FUN_0800709e(&condition1);\n      if (result != 0) goto LAB_080059d0;\n    }\n    else {\n      output._0_4_ = 0;\n      output._4_4_ = 0x7ff00000;\n      result = FUN_080009b4(input1,input2,0,0);\n      if (result != 0) {\n        returnValue = FUN_080004d0(input3,input4,0,0x3fe00000);\n        tempValue = FUN_080070b0();\n        result = FUN_080009a0((int)returnValue,(int)((ulonglong)returnValue >> 0x20),(int)tempValue,\n                             (int)((ulonglong)tempValue >> 0x20));\n        if (result == 0) {\n          output._0_4_ = 0;\n          output._4_4_ = 0xfff00000;\n        }\n      }\nLAB_08005afa:\n      if (DAT_20000224 != '\\x02') goto LAB_08005b98;\n    }\n    ptrFlag = (undefined4 *)FUN_080072ac();\n    lowInput = 0x22;\n  }\n  else {\n    result = FUN_080009a0(input3,input4,0,0);\n    if (result == 0) {\n      return returnValue;\n    }\n    condition1 = 1;\n    message = &DAT_080073b1;\n    output = 0x3ff0000000000000;\n    tempVar = 0;\n    if (flag == '\\x02') {\n      return 0x3ff0000000000000;\n    }\nLAB_08005978:\n    result = FUN_0800709e(&condition1);\n    if (result != 0) goto LAB_080059d0;\nLAB_08005a34:\n    ptrFlag = (undefined4 *)FUN_080072ac();\n    lowInput = 0x21;\n  }\n  *ptrFlag = lowInput;\nLAB_080059d0:\n  if (tempVar != 0) {\n    ptrResult = (int *)FUN_080072ac();\n    *ptrResult = tempVar;\n  }\n  return output;\n}\n\n",
            "renaming": {
                "FUN_08005900": "process_data_08005900",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "cVar1": "flag",
                "iVar2": "result",
                "piVar3": "ptrResult",
                "puVar4": "ptrFlag",
                "iVar5": "tempResult",
                "uVar6": "highInput",
                "uVar7": "lowInput",
                "uVar8": "returnValue",
                "uVar9": "tempValue",
                "local_50": "condition1",
                "local_4c": "message",
                "local_48": "copyOfInput1",
                "uStack_44": "copyOfInput2",
                "local_40": "copyOfInput3",
                "uStack_3c": "copyOfInput4",
                "local_38": "output",
                "local_30": "tempVar"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_080004d0",
                "FUN_08007092",
                "FUN_080072ac",
                "FUN_080070b0",
                "FUN_08006228",
                "FUN_080009a0",
                "FUN_08000724",
                "FUN_080009b4",
                "FUN_0800709e",
                "FUN_08000a04"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005bc8": {
            "entrypoint": "0x08005bc8",
            "current_name": "execute_function_08005bc8",
            "code": "\nundefined8 execute_function_08005bc8(undefined4 input_1,undefined4 input_2)\n\n{\n  char flag;\n  int result;\n  int *output_ptr;\n  undefined4 *value_ptr;\n  undefined8 return_value;\n  undefined4 flag_1;\n  undefined *string_data;\n  undefined4 data_1;\n  undefined4 data_2;\n  undefined4 data_3;\n  undefined4 data_4;\n  undefined8 execution_result;\n  int flag_2;\n  \n  return_value = FUN_08006c0c();\n  flag = DAT_20000224;\n  if (DAT_20000224 == -1) {\n    return return_value;\n  }\n  flag_2 = FUN_08000a04(input_1,input_2,input_1,input_2);\n  if (flag_2 != 0) {\n    return return_value;\n  }\n  result = FUN_080009b4(input_1,input_2,0,0);\n  if (result == 0) {\n    return return_value;\n  }\n  flag_1 = 1;\n  string_data = &DAT_080073b5;\n  data_1 = input_1;\n  data_2 = input_2;\n  data_3 = input_1;\n  data_4 = input_2;\n  if (flag == '\\0') {\n    execution_result = 0;\nLAB_08005c26:\n    result = FUN_0800709e(&flag_1);\n    if (result != 0) goto LAB_08005c2e;\n  }\n  else {\n    execution_result = FUN_08000724(0,0,0,0);\n    if (flag != '\\x02') goto LAB_08005c26;\n  }\n  value_ptr = (undefined4 *)FUN_080072ac();\n  *value_ptr = 0x21;\nLAB_08005c2e:\n  if (flag_2 != 0) {\n    output_ptr = (int *)FUN_080072ac();\n    *output_ptr = flag_2;\n  }\n  return execution_result;\n}\n\n",
            "renaming": {
                "FUN_08005bc8": "execute_function_08005bc8",
                "param_1": "input_1",
                "param_2": "input_2",
                "cVar1": "flag",
                "iVar2": "result",
                "piVar3": "output_ptr",
                "puVar4": "value_ptr",
                "uVar5": "return_value",
                "local_50": "flag_1",
                "local_4c": "string_data",
                "local_48": "data_1",
                "uStack_44": "data_2",
                "local_40": "data_3",
                "uStack_3c": "data_4",
                "local_38": "execution_result",
                "local_30": "flag_2"
            },
            "calling": [
                "FUN_08003330"
            ],
            "called": [
                "FUN_080072ac",
                "FUN_08006c0c",
                "FUN_08000724",
                "FUN_080009b4",
                "FUN_0800709e",
                "FUN_08000a04"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c70": {
            "entrypoint": "0x08005c70",
            "current_name": "calculate_result_08005c70",
            "code": "\nundefined8 calculate_result_08005c70(uint input_1,uint input_2)\n\n{\n  int returnValue;\n  undefined4 temp_1;\n  undefined4 temp_2;\n  undefined4 temp_3;\n  undefined4 temp_4;\n  undefined4 temp_5;\n  undefined4 temp_6;\n  uint positive_input_2;\n  undefined8 result_1;\n  undefined8 result_2;\n  undefined8 result_3;\n  \n  result_1 = CONCAT44(input_2,input_1);\n  positive_input_2 = input_2 & 0x7fffffff;\n  if (positive_input_2 < 0x3ff00000) {\n    if (positive_input_2 < 0x3fe00000) {\n      if (0x3e3fffff < positive_input_2) {\n        result_2 = FUN_080004d0(input_1,input_2,input_1,input_2);\n        temp_6 = (undefined4)((ulonglong)result_2 >> 0x20);\n        temp_5 = (undefined4)result_2;\n        result_2 = FUN_080004d0(temp_5,temp_6,0xdfdf709,0x3f023de1);\n        result_2 = FUN_0800016c((int)result_2,(int)((ulonglong)result_2 >> 0x20),0x7501b288,0x3f49efe0);\n        result_2 = FUN_080004d0((int)result_2,(int)((ulonglong)result_2 >> 0x20),temp_5,temp_6);\n        result_2 = FUN_08000168((int)result_2,(int)((ulonglong)result_2 >> 0x20),0xb5688f3b,0x3fa48228);\n        result_2 = FUN_080004d0((int)result_2,(int)((ulonglong)result_2 >> 0x20),temp_5,temp_6);\n        result_2 = FUN_0800016c((int)result_2,(int)((ulonglong)result_2 >> 0x20),0xe884455,0x3fc9c155);\n        result_2 = FUN_080004d0((int)result_2,(int)((ulonglong)result_2 >> 0x20),temp_5,temp_6);\n        result_2 = FUN_08000168((int)result_2,(int)((ulonglong)result_2 >> 0x20),0x3eb6f7d,0x3fd4d612);\n        result_2 = FUN_080004d0((int)result_2,(int)((ulonglong)result_2 >> 0x20),temp_5,temp_6);\n        result_2 = FUN_0800016c((int)result_2,(int)((ulonglong)result_2 >> 0x20),0x55555555,0x3fc55555);\n        result_2 = FUN_080004d0((int)result_2,(int)((ulonglong)result_2 >> 0x20),temp_5,temp_6);\n        result_3 = FUN_080004d0(temp_5,temp_6,0xb12e9282,0x3fb3b8c5);\n        result_3 = FUN_08000168((int)result_3,(int)((ulonglong)result_3 >> 0x20),0x1b8d0159,0x3fe6066c);\n        result_3 = FUN_080004d0((int)result_3,(int)((ulonglong)result_3 >> 0x20),temp_5,temp_6);\n        result_3 = FUN_0800016c((int)result_3,(int)((ulonglong)result_3 >> 0x20),0x9c598ac8,0x40002ae5);\n        result_3 = FUN_080004d0((int)result_3,(int)((ulonglong)result_3 >> 0x20),temp_5,temp_6);\n        result_3 = FUN_08000168((int)result_3,(int)((ulonglong)result_3 >> 0x20),0x1c8a2d4b,0x40033a27);\n        result_3 = FUN_080004d0((int)result_3,(int)((ulonglong)result_3 >> 0x20),temp_5,temp_6);\n        result_3 = FUN_0800016c((int)result_3,(int)((ulonglong)result_3 >> 0x20),0,0x3ff00000);\n        result_2 = FUN_08000724((int)result_2,(int)((ulonglong)result_2 >> 0x20),(int)result_3,\n                              (int)((ulonglong)result_3 >> 0x20));\n        result_2 = FUN_080004d0((int)result_2,(int)((ulonglong)result_2 >> 0x20),input_1,input_2);\n        goto LAB_08005cba;\n      }\n      result_2 = FUN_0800016c(input_1,input_2,0x8800759c,0x7e37e43c);\n      returnValue = FUN_080009f0((int)result_2,(int)((ulonglong)result_2 >> 0x20),0,0x3ff00000);\n      if (returnValue != 0) {\n        return result_1;\n      }\n    }\n    result_1 = FUNC_0800708c(input_1,input_2);\n    result_1 = FUN_08000168(0,0x3ff00000,(int)result_1,(int)((ulonglong)result_1 >> 0x20));\n    result_1 = FUN_080004d0((int)result_1,(int)((ulonglong)result_1 >> 0x20),0,0x3fe00000);\n    temp_1 = (undefined4)((ulonglong)result_1 >> 0x20);\n    temp_5 = (undefined4)result_1;\n    result_1 = FUN_080004d0(temp_5,temp_1,0xdfdf709,0x3f023de1);\n    result_1 = FUN_0800016c((int)result_1,(int)((ulonglong)result_1 >> 0x20),0x7501b288,0x3f49efe0);\n    result_1 = FUN_080004d0((int)result_1,(int)((ulonglong)result_1 >> 0x20),temp_5,temp_1);\n    result_1 = FUN_08000168((int)result_1,(int)((ulonglong)result_1 >> 0x20),0xb5688f3b,0x3fa48228);\n    result_1 = FUN_080004d0((int)result_1,(int)((ulonglong)result_1 >> 0x20),temp_5,temp_1);\n    result_1 = FUN_0800016c((int)result_1,(int)((ulonglong)result_1 >> 0x20),0xe884455,0x3fc9c155);\n    result_1 = FUN_080004d0((int)result_1,(int)((ulonglong)result_1 >> 0x20),temp_5,temp_1);\n    result_1 = FUN_08000168((int)result_1,(int)((ulonglong)result_1 >> 0x20),0x3eb6f7d,0x3fd4d612);\n    result_1 = FUN_080004d0((int)result_1,(int)((ulonglong)result_1 >> 0x20),temp_5,temp_1);\n    result_1 = FUN_0800016c((int)result_1,(int)((ulonglong)result_1 >> 0x20),0x55555555,0x3fc55555);\n    result_1 = FUN_080004d0((int)result_1,(int)((ulonglong)result_1 >> 0x20),temp_5,temp_1);\n    temp_2 = (undefined4)((ulonglong)result_1 >> 0x20);\n    result_2 = FUN_080004d0(temp_5,temp_1,0xb12e9282,0x3fb3b8c5);\n    result_2 = FUN_08000168((int)result_2,(int)((ulonglong)result_2 >> 0x20),0x1b8d0159,0x3fe6066c);\n    result_2 = FUN_080004d0((int)result_2,(int)((ulonglong)result_2 >> 0x20),temp_5,temp_1);\n    result_2 = FUN_0800016c((int)result_2,(int)((ulonglong)result_2 >> 0x20),0x9c598ac8,0x40002ae5);\n    result_2 = FUN_080004d0((int)result_2,(int)((ulonglong)result_2 >> 0x20),temp_5,temp_1);\n    result_2 = FUN_08000168((int)result_2,(int)((ulonglong)result_2 >> 0x20),0x1c8a2d4b,0x40033a27);\n    result_2 = FUN_080004d0((int)result_2,(int)((ulonglong)result_2 >> 0x20),temp_5,temp_1);\n    result_2 = FUN_0800016c((int)result_2,(int)((ulonglong)result_2 >> 0x20),0,0x3ff00000);\n    temp_3 = (undefined4)((ulonglong)result_2 >> 0x20);\n    result_3 = FUN_08006c0c(temp_5,temp_1);\n    temp_4 = (undefined4)((ulonglong)result_3 >> 0x20);\n    temp_6 = (undefined4)result_3;\n    if (positive_input_2 < 0x3fef3333) {\n      result_1 = FUN_08000724((int)result_1,temp_2,(int)result_2,temp_3);\n      result_2 = FUN_0800016c(temp_6,temp_4,temp_6,temp_4);\n      result_1 = FUN_080004d0((int)result_1,(int)((ulonglong)result_1 >> 0x20),(int)result_2,\n                           (int)((ulonglong)result_2 >> 0x20));\n      result_2 = FUN_080004d0(0,temp_4,0,temp_4);\n      result_2 = FUN_08000168(temp_5,temp_1,(int)result_2,(int)((ulonglong)result_2 >> 0x20));\n      result_3 = FUN_0800016c(temp_6,temp_4,0,temp_4);\n      result_2 = FUN_08000724((int)result_2,(int)((ulonglong)result_2 >> 0x20),(int)result_3,\n                            (int)((ulonglong)result_3 >> 0x20));\n      temp_5 = (undefined4)((ulonglong)result_2 >> 0x20);\n      result_2 = FUN_0800016c((int)result_2,temp_5,(int)result_2,temp_5);\n      result_2 = FUN_08000168(0x33145c07,0x3c91a626,(int)result_2,(int)((ulonglong)result_2 >> 0x20));\n      result_1 = FUN_08000168((int)result_1,(int)((ulonglong)result_1 >> 0x20),(int)result_2,\n                           (int)((ulonglong)result_2 >> 0x20));\n      result_2 = FUN_0800016c(0,temp_4,0,temp_4);\n      result_2 = FUN_08000168(0x54442d18,0x3fe921fb,(int)result_2,(int)((ulonglong)result_2 >> 0x20));\n      result_1 = FUN_08000168((int)result_1,(int)((ulonglong)result_1 >> 0x20),(int)result_2,\n                           (int)((ulonglong)result_2 >> 0x20));\n      temp_5 = 0x3fe921fb;\n    }\n    else {\n      result_1 = FUN_08000724((int)result_1,temp_2,(int)result_2,temp_3);\n      result_1 = FUN_080004d0((int)result_1,(int)((ulonglong)result_1 >> 0x20),temp_6,temp_4);\n      result_1 = FUN_0800016c((int)result_1,(int)((ulonglong)result_1 >> 0x20),temp_6,temp_4);\n      temp_5 = (undefined4)((ulonglong)result_1 >> 0x20);\n      result_1 = FUN_0800016c((int)result_1,temp_5,(int)result_1,temp_5);\n      result_1 = FUN_08000168((int)result_1,(int)((ulonglong)result_1 >> 0x20),0x33145c07,0x3c91a626);\n      temp_5 = 0x3ff921fb;\n    }\n    result_1 = FUN_08000168(0x54442d18,temp_5,(int)result_1,(int)((ulonglong)result_1 >> 0x20));\n    if ((int)input_2 < 1) {\n      result_1 = CONCAT44((int)((ulonglong)result_1 >> 0x20) + -0x80000000,(int)result_1);\n    }\n  }\n  else {\n    if ((positive_input_2 + 0xc0100000 | input_1) != 0) {\n      result_1 = FUN_08000168(input_1,input_2,input_1,input_2);\n      temp_5 = (undefined4)((ulonglong)result_1 >> 0x20);\n      result_1 = FUN_08000724((int)result_1,temp_5,(int)result_1,temp_5);\n      return result_1;\n    }\n    result_1 = FUN_080004d0(input_1,input_2,0x54442d18,0x3ff921fb);\n    result_2 = FUN_080004d0(input_1,input_2,0x33145c07,0x3c91a626);\nLAB_08005cba:\n    result_1 = FUN_0800016c((int)result_1,(int)((ulonglong)result_1 >> 0x20),(int)result_2,\n                         (int)((ulonglong)result_2 >> 0x20));\n  }\n  return result_1;\n}\n\n",
            "renaming": {
                "FUN_08005c70": "calculate_result_08005c70",
                "param_1": "input_1",
                "param_2": "input_2",
                "iVar1": "returnValue",
                "uVar2": "temp_1",
                "uVar3": "temp_2",
                "uVar4": "temp_3",
                "uVar5": "temp_4",
                "uVar6": "temp_5",
                "uVar7": "temp_6",
                "uVar8": "positive_input_2",
                "uVar9": "result_1",
                "uVar10": "result_2",
                "uVar11": "result_3"
            },
            "calling": [
                "FUN_08005854"
            ],
            "called": [
                "FUN_080004d0",
                "FUN_0800708c",
                "FUN_08006c0c",
                "FUN_08000168",
                "FUN_080009f0",
                "FUN_08000724",
                "FUN_0800016c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006070": {
            "entrypoint": "0x08006070",
            "current_name": "calculate_float_value_08006070",
            "code": "\nundefined8 calculateFloatValue_08006070(uint value1,uint value2,uint value3,uint value4)\n\n{\n  undefined4 result1;\n  uint condition1;\n  uint result2;\n  int difference;\n  uint uVar5;\n  undefined8 finalResult1;\n  undefined8 finalResult2;\n  \n  uVar5 = value4 & 0x7fffffff;\n  if ((0x7ff00000 < (uVar5 | (-value3 | value3) >> 0x1f)) ||\n     (result2 = value2 & 0x7fffffff, 0x7ff00000 < (result2 | (-value1 | value1) >> 0x1f))) {\n    finalResult1 = FUN_0800016c(value1,value2,value3,value4,value4);\n    return finalResult1;\n  }\n  if ((value4 + 0xc0100000 | value3) == 0) {\n    finalResult1 = FUN_08006d68();\n    return finalResult1;\n  }\n  condition1 = (int)value4 >> 0x1e & 2U | value2 >> 0x1f;\n  if ((value1 | result2) == 0) {\n    if (condition1 == 2) {\n      return 0x400921fb54442d18;\n    }\n    if (condition1 != 3) {\n      return CONCAT44(value2,value1);\n    }\nLAB_0800613e:\n    finalResult1 = 0xc00921fb54442d18;\n  }\n  else {\n    if ((value3 | uVar5) != 0) {\n      if (uVar5 == 0x7ff00000) {\n        if (result2 == 0x7ff00000) {\n          if (condition1 == 2) {\n            return 0x4002d97c7f3321d2;\n          }\n          if (condition1 == 3) {\n            return 0xc002d97c7f3321d2;\n          }\n          if (condition1 != 1) {\n            return 0x3fe921fb54442d18;\n          }\n          return 0xbfe921fb54442d18;\n        }\n        if (condition1 == 2) {\n          return 0x400921fb54442d18;\n        }\n        if (condition1 != 3) {\n          if (condition1 != 1) {\n            return 0;\n          }\n          return 0x8000000000000000;\n        }\n        goto LAB_0800613e;\n      }\n      if (result2 != 0x7ff00000) {\n        difference = (int)(result2 - uVar5) >> 0x14;\n        if (difference < 0x3d) {\n          if (((int)value4 < 0) && (difference + 0x3c < 0 != SCARRY4(difference,0x3c))) {\n            finalResult1 = 0;\n          }\n          else {\n            FUN_08000724(value1,value2);\n            FUNC_0800708c();\n            finalResult1 = FUN_08006d68();\n          }\n        }\n        else {\n          finalResult1 = 0x3ff921fb54442d18;\n        }\n        difference = (int)((ulonglong)finalResult1 >> 0x20);\n        result1 = (undefined4)finalResult1;\n        if (condition1 == 1) {\n          return CONCAT44(difference + -0x80000000,result1);\n        }\n        if (condition1 == 2) {\n          finalResult2 = FUN_08000168(result1,difference,0x33145c07,0x3ca1a626);\n          finalResult1 = 0x400921fb54442d18;\n        }\n        else {\n          if (condition1 == 0) {\n            return finalResult1;\n          }\n          finalResult1 = FUN_08000168(result1,difference,0x33145c07,0x3ca1a626);\n          finalResult2 = 0x400921fb54442d18;\n        }\n        finalResult1 = FUN_08000168((int)finalResult1,(int)((ulonglong)finalResult1 >> 0x20),(int)finalResult2,\n                             (int)((ulonglong)finalResult2 >> 0x20));\n        return finalResult1;\n      }\n    }\n    if ((int)value2 < 0) {\n      finalResult1 = 0xbff921fb54442d18;\n    }\n    else {\n      finalResult1 = 0x3ff921fb54442d18;\n    }\n  }\n  return finalResult1;\n}\n\n",
            "renaming": {
                "FUN_08006070": "calculate_float_value_08006070",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4",
                "uVar1": "result1",
                "uVar2": "condition1",
                "uVar3": "result2",
                "iVar4": "difference",
                "uVar6": "finalResult1",
                "uVar7": "finalResult2"
            },
            "calling": [
                "thunk_FUN_08006070"
            ],
            "called": [
                "FUN_0800708c",
                "FUN_08006d68",
                "FUN_08000168",
                "FUN_08000724",
                "FUN_0800016c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006228": {
            "entrypoint": "0x08006228",
            "current_name": "calculate_float_08006228",
            "code": "\nuint calculateFloat_08006228(uint input1,uint input2,uint input3,uint input4)\n\n{\n  undefined4 result1;\n  uint result2;\n  uint result3;\n  undefined4 result4;\n  undefined4 result5;\n  undefined4 result6;\n  undefined4 result7;\n  uint result8;\n  undefined4 result9;\n  int variable1;\n  int variable2;\n  undefined4 variable3;\n  uint variable4;\n  undefined4 variable5;\n  int variable6;\n  uint variable7;\n  undefined4 variable8;\n  undefined4 variable9;\n  undefined8 variable10;\n  undefined8 variable11;\n  undefined8 variable12;\n  undefined8 variable13;\n  longlong variable14;\n  ulonglong variable15;\n  undefined8 variable16;\n  uint localVariable1;\n  undefined4 localVariable2;\n  undefined4 localVariable3;\n  int localVariable4;\n  \n  variable11 = CONCAT44(input2,input1);\n  variable7 = input4 & 0x7fffffff;\n  if ((variable7 | input3) == 0) {\n    return 0;\n  }\n  variable4 = input2 & 0x7fffffff;\n  if (variable4 < 0x7ff00001) {\n    if (variable4 == 0x7ff00000) {\n      if (input1 == 0) {\n        if (0x7ff00000 < variable7) goto LAB_08006278;\nLAB_08006262:\n        if ((variable7 != 0x7ff00000) || (input3 == 0)) {\n          if (-1 < (int)input2) goto LAB_0800632a;\n          if (variable7 < 0x43400000) {\n            if (variable7 < 0x3ff00000) {\nLAB_0800632a:\n              localVariable1 = 0;\n              goto LAB_080062ba;\n            }\n            variable1 = ((int)variable7 >> 0x14) + -0x3ff;\n            if (0x14 < variable1) {\n              result2 = input3 >> (0x34U - variable1 & 0xff);\n              if (input3 == result2 << (0x34U - variable1 & 0xff)) {\n                localVariable1 = 2 - (result2 & 1);\n                goto LAB_080062ba;\n              }\n              goto LAB_0800632a;\n            }\n            if (input3 == 0) {\n              result2 = (int)variable7 >> (0x14U - variable1 & 0xff);\n              if (variable7 == result2 << (0x14U - variable1 & 0xff)) {\n                localVariable1 = 2 - (result2 & 1);\n              }\n              else {\n                localVariable1 = 0;\n              }\n              goto LAB_0800630c;\n            }\n            localVariable1 = 0;\n          }\n          else {\n            localVariable1 = 2;\nLAB_080062ba:\n            if (input3 == 0) {\n              if (variable7 == 0x7ff00000) {\n                if ((variable4 + 0xc0100000 | input1) == 0) {\n                  return 0;\n                }\n                if (0x3fefffff < variable4) {\n                  if ((int)input4 < 0) {\n                    return 0;\n                  }\n                  return 0;\n                }\n                if (-1 < (int)input4) {\n                  return 0;\n                }\n                return 0;\n              }\nLAB_0800630c:\n              if (variable7 == 0x3ff00000) {\n                if (-1 < (int)input4) {\n                  return input1;\n                }\n                variable10 = 0x3ff0000000000000;\n                goto LAB_08006320;\n              }\n              if (input4 == 0x40000000) goto LAB_0800634a;\n              if ((input4 == 0x3fe00000) && (-1 < (int)input2)) {\n                variable7 = FUN_08006c0c(input1,input2);\n                return variable7;\n              }\n            }\n          }\n          variable10 = FUNC_0800708c(input1,input2);\n          variable8 = (undefined4)((ulonglong)variable10 >> 0x20);\n          result1 = (undefined4)variable10;\n          variable15 = CONCAT44(input2,result1) & 0x7fffffffffffffff;\n          if ((input1 == 0) && ((variable4 == 0 || ((input2 & 0x3fffffff) == 0x3ff00000)))) {\n            if ((int)input4 < 0) {\n              variable10 = FUN_08000724(0,0x3ff00000,result1,variable8);\n            }\n            if (-1 < (int)input2) {\n              return (uint)variable10;\n            }\n            if ((localVariable1 | variable4 + 0xc0100000) != 0) {\n              return (uint)variable10;\n            }\n          }\n          else {\n            result2 = 0xffffffff - ((int)input2 >> 0x1f);\n            variable10 = variable11;\n            if ((localVariable1 | result2) != 0) {\n              if (variable7 < 0x41e00001) {\n                localVariable4 = 0;\n                if (variable4 < 0x100000) {\n                  variable15 = FUN_080004d0();\n                  localVariable4 = -0x35;\n                }\n                variable7 = (uint)(variable15 >> 0x20);\n                result1 = (undefined4)variable15;\n                localVariable4 = ((int)variable7 >> 0x14) + -0x3ff + localVariable4;\n                variable7 = variable7 & 0xfffff;\n                variable4 = variable7 | 0x3ff00000;\n                if (variable7 < 0x3988f) {\nLAB_08006628:\n                  variable1 = 0;\n                }\n                else {\n                  if (0xbb679 < variable7) {\n                    variable4 = variable4 - 0x100000;\n                    localVariable4 = localVariable4 + 1;\n                    goto LAB_08006628;\n                  }\n                  variable1 = 1;\n                }\n                variable2 = variable1 * 8;\n                variable3 = (&DAT_080073c0)[variable1 * 2];\n                variable5 = (&DAT_080073c4)[variable1 * 2];\n                variable11 = FUN_08000168(result1,variable4,variable3,variable5);\n                variable9 = (undefined4)((ulonglong)variable11 >> 0x20);\n                variable10 = FUN_0800016c(result1,variable4,variable3,variable5);\n                variable10 = FUN_08000724(0,0x3ff00000,(int)variable10,(int)((ulonglong)variable10 >> 0x20));\n                result4 = (undefined4)((ulonglong)variable10 >> 0x20);\n                variable12 = FUN_080004d0((int)variable11,variable9,(int)variable10,result4);\n                result5 = (undefined4)((ulonglong)variable12 >> 0x20);\n                variable8 = (undefined4)variable12;\n                variable12 = FUN_080004d0(0,result5);\n                variable11 = FUN_08000168((int)variable11,variable9,(int)variable12,\n                                      (int)((ulonglong)variable12 >> 0x20));\n                variable12 = FUN_08000168(0,((int)variable4 >> 1 | 0x20000000U) + 0x80000 + variable1 * 0x40000,\n                                      variable3,variable5);\n                variable12 = FUN_08000168(result1,variable4,(int)variable12,(int)((ulonglong)variable12 >> 0x20));\n                variable12 = FUN_080004d0((int)variable12,(int)((ulonglong)variable12 >> 0x20),0,result5);\n                variable11 = FUN_08000168((int)variable11,(int)((ulonglong)variable11 >> 0x20),(int)variable12,\n                                      (int)((ulonglong)variable12 >> 0x20));\n                variable11 = FUN_080004d0((int)variable11,(int)((ulonglong)variable11 >> 0x20),(int)variable10,result4\n                                     );\n                variable9 = (undefined4)((ulonglong)variable11 >> 0x20);\n                variable10 = FUN_080004d0(variable8,result5);\n                result4 = (undefined4)((ulonglong)variable10 >> 0x20);\n                result1 = (undefined4)variable10;\n                variable10 = FUN_080004d0(result1,result4,0x4a454eef,0x3fca7e28);\n                variable10 = FUN_0800016c((int)variable10,(int)((ulonglong)variable10 >> 0x20),0x93c9db65,\n                                      0x3fcd864a);\n                variable10 = FUN_080004d0((int)variable10,(int)((ulonglong)variable10 >> 0x20),result1,result4);\n                variable10 = FUN_0800016c((int)variable10,(int)((ulonglong)variable10 >> 0x20),0xa91d4101,\n                                      0x3fd17460);\n                variable10 = FUN_080004d0((int)variable10,(int)((ulonglong)variable10 >> 0x20),result1,result4);\n                variable10 = FUN_0800016c((int)variable10,(int)((ulonglong)variable10 >> 0x20),0x518f264d,\n                                      0x3fd55555);\n                variable10 = FUN_080004d0((int)variable10,(int)((ulonglong)variable10 >> 0x20),result1,result4);\n                variable10 = FUN_0800016c((int)variable10,(int)((ulonglong)variable10 >> 0x20),0xdb6fabff,\n                                      0x3fdb6db6);\n                variable10 = FUN_080004d0((int)variable10,(int)((ulonglong)variable10 >> 0x20),result1,result4);\n                variable10 = FUN_0800016c((int)variable10,(int)((ulonglong)variable10 >> 0x20),0x33333303,\n                                      0x3fe33333);\n                variable12 = FUN_080004d0(result1,result4,result1,result4);\n                variable10 = FUN_080004d0((int)variable10,(int)((ulonglong)variable10 >> 0x20),(int)variable12,\n                                      (int)((ulonglong)variable12 >> 0x20));\n                variable12 = FUN_0800016c(variable8,result5,0,result5);\n                variable12 = FUN_080004d0((int)variable12,(int)((ulonglong)variable12 >> 0x20),(int)variable11,\n                                      variable9);\n                variable10 = FUN_0800016c((int)variable12,(int)((ulonglong)variable12 >> 0x20),(int)variable10,\n                                      (int)((ulonglong)variable10 >> 0x20));\n                result1 = (undefined4)((ulonglong)variable10 >> 0x20);\n                variable12 = FUN_080004d0(0,result5,0,result5);\n                result4 = (undefined4)((ulonglong)variable12 >> 0x20);\n                variable13 = FUN_0800016c((int)variable12,result4,0,0x40080000);\n                FUN_0800016c((int)variable13,(int)((ulonglong)variable13 >> 0x20),(int)variable10,result1);\n                variable13 = FUN_080004d0(0,result5,0,result6);\n                variable3 = (undefined4)((ulonglong)variable13 >> 0x20);\n                variable16 = FUN_08000168(0,result6,0,0x40080000);\n                variable12 = FUN_08000168((int)variable16,(int)((ulonglong)variable16 >> 0x20),(int)variable12,result4\n                                     );\n                variable10 = FUN_08000168((int)variable10,result1,(int)variable12,(int)((ulonglong)variable12 >> 0x20)\n                                     );\n                variable10 = FUN_080004d0((int)variable10,(int)((ulonglong)variable10 >> 0x20),variable8,result5);\n                variable11 = FUN_080004d0((int)variable11,variable9,0,result6);\n                variable10 = FUN_0800016c((int)variable10,(int)((ulonglong)variable10 >> 0x20),(int)variable11,\n                                      (int)((ulonglong)variable11 >> 0x20));\n                result1 = (undefined4)((ulonglong)variable10 >> 0x20);\n                FUN_0800016c((int)variable13,variable3,(int)variable10,result1);\n                variable11 = FUN_080004d0(0,result7,0xe0000000,0x3feec709);\n                variable12 = FUN_08000168(0,result7,(int)variable13,variable3);\n                variable10 = FUN_08000168((int)variable10,result1,(int)variable12,(int)((ulonglong)variable12 >> 0x20)\n                                     );\n                variable10 = FUN_080004d0((int)variable10,(int)((ulonglong)variable10 >> 0x20),0xdc3a03fd,\n                                      0x3feec709);\n                variable12 = FUN_080004d0(0,result7,0x145b01f5,0xbe3e2fe0);\n                variable10 = FUN_0800016c((int)variable10,(int)((ulonglong)variable10 >> 0x20),(int)variable12,\n                                      (int)((ulonglong)variable12 >> 0x20));\n                variable10 = FUN_0800016c((int)variable10,(int)((ulonglong)variable10 >> 0x20),\n                                      *(undefined4 *)(&DAT_080073e0 + variable2),\n                                      *(undefined4 *)(&DAT_080073e4 + variable2));\n                variable12 = FUN_08000404(localVariable4);\n                result1 = (undefined4)((ulonglong)variable12 >> 0x20);\n                variable8 = *(undefined4 *)(&DAT_080073d0 + variable2);\n                variable9 = *(undefined4 *)(&DAT_080073d4 + variable2);\n                variable13 = FUN_0800016c((int)variable11,(int)((ulonglong)variable11 >> 0x20),(int)variable10,\n                                      (int)((ulonglong)variable10 >> 0x20));\n                variable13 = FUN_0800016c((int)variable13,(int)((ulonglong)variable13 >> 0x20),variable8,variable9);\n                FUN_0800016c((int)variable13,(int)((ulonglong)variable13 >> 0x20),(int)variable12,result1);\n                variable12 = FUN_08000168(0,result8,(int)variable12,result1);\n                variable14 = FUN_08000168((int)variable12,(int)((ulonglong)variable12 >> 0x20),variable8,variable9);\n                variable7 = result8;\n              }\n              else {\n                if (0x43f00000 < variable7) {\n                  if (variable4 < 0x3ff00000) goto LAB_080063fa;\nLAB_08006418:\n                  if ((int)input4 < 1) {\n                    return 0;\n                  }\nLAB_08006400:\n                  input1 = 0x8800759c;\n                  input2 = 0x7e37e43c;\n                  variable11 = 0x7e37e43c8800759c;\n                  goto LAB_0800634a;\n                }\n                if (variable4 < 0x3fefffff) {\nLAB_080063fa:\n                  if (-1 < (int)input4) {\n                    return 0;\n                  }\n                  goto LAB_08006400;\n                }\n                if (0x3ff00000 < variable4) goto LAB_08006418;\n                variable11 = FUN_08000168(result1,variable8,0,0x3ff00000);\n                variable8 = (undefined4)((ulonglong)variable11 >> 0x20);\n                result1 = (undefined4)variable11;\n                variable11 = FUN_080004d0(result1,variable8,0x60000000,0x3ff71547);\n                variable10 = FUN_080004d0(result1,variable8,0xf85ddf44,0x3e54ae0b);\n                variable12 = FUN_080004d0(result1,variable8,0,0x3fd00000);\n                variable12 = FUN_08000168(0x55555555,0x3fd55555,(int)variable12,\n                                      (int)((ulonglong)variable12 >> 0x20));\n                variable12 = FUN_080004d0((int)variable12,(int)((ulonglong)variable12 >> 0x20),result1,variable8);\n                variable12 = FUN_08000168(0,0x3fe00000,(int)variable12,(int)((ulonglong)variable12 >> 0x20));\n                variable13 = FUN_080004d0(result1,variable8,result1,variable8);\n                variable12 = FUN_080004d0((int)variable12,(int)((ulonglong)variable12 >> 0x20),(int)variable13,\n                                      (int)((ulonglong)variable13 >> 0x20));\n                variable12 = FUN_080004d0((int)variable12,(int)((ulonglong)variable12 >> 0x20),0x652b82fe,\n                                      0x3ff71547);\n                variable10 = FUN_08000168((int)variable10,(int)((ulonglong)variable10 >> 0x20),(int)variable12,\n                                      (int)((ulonglong)variable12 >> 0x20));\n                FUN_0800016c((int)variable11,(int)((ulonglong)variable11 >> 0x20),(int)variable10,\n                             (int)((ulonglong)variable10 >> 0x20));\n                variable14 = (ulonglong)result3 << 0x20;\n                variable7 = result3;\n              }\n              variable11 = FUN_08000168((int)variable14,(int)((ulonglong)variable14 >> 0x20),(int)variable11,\n                                    (int)((ulonglong)variable11 >> 0x20));\n              variable11 = FUN_08000168((int)variable10,(int)((ulonglong)variable10 >> 0x20),(int)variable11,\n                                    (int)((ulonglong)variable11 >> 0x20));\n              if ((localVariable1 - 1 | result2) == 0) {\n                input2 = 0xbff00000;\n              }\n              else {\n                input2 = 0x3ff00000;\n              }\n              localVariable1 = 0;\n              variable10 = FUN_08000168(input3,input4,0,input4);\n              variable10 = FUN_080004d0((int)variable10,(int)((ulonglong)variable10 >> 0x20),0,variable7);\n              variable11 = FUN_080004d0((int)variable11,(int)((ulonglong)variable11 >> 0x20),input3,input4);\n              variable11 = FUN_0800016c((int)variable10,(int)((ulonglong)variable10 >> 0x20),(int)variable11,\n                                    (int)((ulonglong)variable11 >> 0x20));\n              variable9 = (undefined4)((ulonglong)variable11 >> 0x20);\n              result1 = (undefined4)variable11;\n              variable11 = FUN_080004d0(0,variable7,0,input4);\n              result4 = (undefined4)((ulonglong)variable11 >> 0x20);\n              variable8 = (undefined4)variable11;\n              variable14 = FUN_0800016c(result1,variable9,variable8,result4);\n              variable4 = (uint)((ulonglong)variable14 >> 0x20);\n              variable7 = (uint)variable14;\n              if (0x408fffffffffffff < variable14) {\n                if ((variable4 + 0xbf700000 | variable7) == 0) {\n                  variable10 = FUN_0800016c(result1,variable9,0x652b82fe,0x3c971547);\n                  variable12 = FUN_08000168(variable7,variable4,variable8,result4);\n                  variable1 = FUN_080009f0((int)variable10,(int)((ulonglong)variable10 >> 0x20),(int)variable12,\n                                       (int)((ulonglong)variable12 >> 0x20));\n                  if (variable1 == 0) goto LAB_08006968;\n                }\n                variable11 = FUN_080004d0(0,input2,0x8800759c,0x7e37e43c);\n                input1 = 0x8800759c;\n                input2 = 0x7e37e43c;\n                goto LAB_0800634a;\n              }\n              if ((variable4 & 0x7fffffff) < 0x4090cc00) {\nLAB_08006968:\n                if ((variable4 & 0x7fffffff) < 0x3fe00001) {\n                  variable1 = 0;\n                }\n                else {\n                  variable4 = (0x100000 >> (((int)(variable4 & 0x7fffffff) >> 0x14) - 0x3feU & 0xff)) +\n                          variable4;\n                  variable7 = (variable4 * 2 >> 0x15) - 0x3ff;\n                  variable1 = (int)(variable4 & 0xfffff | 0x100000) >> (0x14 - variable7 & 0xff);\n                  if (variable14 < 0) {\n                    variable1 = -variable1;\n                  }\n                  variable11 = FUN_08000168(variable8,result4,0,variable4 & ~(0xfffff >> (variable7 & 0xff)));\n                }\n                localVariable3 = (undefined4)((ulonglong)variable11 >> 0x20);\n                localVariable2 = (undefined4)variable11;\n                FUN_0800016c(localVariable2,localVariable3,result1,variable9);\n                variable11 = FUN_080004d0(0,result9,0,0x3fe62e43);\n                variable8 = (undefined4)((ulonglong)variable11 >> 0x20);\n                variable10 = FUN_08000168(0,result9,localVariable2,localVariable3);\n                variable10 = FUN_08000168(result1,variable9,(int)variable10,(int)((ulonglong)variable10 >> 0x20));\n                variable10 = FUN_080004d0((int)variable10,(int)((ulonglong)variable10 >> 0x20),0xfefa39ef,\n                                      0x3fe62e42);\n                variable12 = FUN_080004d0(0,result9,0xca86c39,0xbe205c61);\n                variable10 = FUN_0800016c((int)variable10,(int)((ulonglong)variable10 >> 0x20),(int)variable12,\n                                      (int)((ulonglong)variable12 >> 0x20));\n                variable9 = (undefined4)((ulonglong)variable10 >> 0x20);\n                variable12 = FUN_0800016c((int)variable11,variable8,(int)variable10,variable9);\n                result4 = (undefined4)((ulonglong)variable12 >> 0x20);\n                result1 = (undefined4)variable12;\n                variable11 = FUN_08000168(result1,result4,(int)variable11,variable8);\n                variable11 = FUN_08000168((int)variable10,variable9,(int)variable11,\n                                      (int)((ulonglong)variable11 >> 0x20));\n                variable9 = (undefined4)((ulonglong)variable11 >> 0x20);\n                variable10 = FUN_080004d0(result1,result4,result1,result4);\n                result5 = (undefined4)((ulonglong)variable10 >> 0x20);\n                variable8 = (undefined4)variable10;\n                variable10 = FUN_080004d0(variable8,result5,0x72bea4d0,0x3e663769);\n                variable10 = FUN_08000168((int)variable10,(int)((ulonglong)variable10 >> 0x20),0xc5d26bf1,\n                                      0x3ebbbd41);\n                variable10 = FUN_080004d0((int)variable10,(int)((ulonglong)variable10 >> 0x20),variable8,result5);\n                variable10 = FUN_0800016c((int)variable10,(int)((ulonglong)variable10 >> 0x20),0xaf25de2c,\n                                      0x3f11566a);\n                variable10 = FUN_080004d0((int)variable10,(int)((ulonglong)variable10 >> 0x20),variable8,result5);\n                variable10 = FUN_08000168((int)variable10,(int)((ulonglong)variable10 >> 0x20),0x16bebd93,\n                                      0x3f66c16c);\n                variable10 = FUN_080004d0((int)variable10,(int)((ulonglong)variable10 >> 0x20),variable8,result5);\n                variable10 = FUN_0800016c((int)variable10,(int)((ulonglong)variable10 >> 0x20),0x5555553e,\n                                      0x3fc55555);\n                variable10 = FUN_080004d0((int)variable10,(int)((ulonglong)variable10 >> 0x20),variable8,result5);\n                variable10 = FUN_08000168(result1,result4,(int)variable10,(int)((ulonglong)variable10 >> 0x20));\n                variable8 = (undefined4)((ulonglong)variable10 >> 0x20);\n                variable12 = FUN_080004d0(result1,result4,(int)variable10,variable8);\n                variable10 = FUN_08000168((int)variable10,variable8,0,0x40000000);\n                variable10 = FUN_08000724((int)variable12,(int)((ulonglong)variable12 >> 0x20),(int)variable10,\n                                      (int)((ulonglong)variable10 >> 0x20));\n                variable12 = FUN_080004d0(result1,result4,(int)variable11,variable9);\n                variable11 = FUN_0800016c((int)variable12,(int)((ulonglong)variable12 >> 0x20),(int)variable11,\n                                      variable9);\n                variable11 = FUN_08000168((int)variable10,(int)((ulonglong)variable10 >> 0x20),(int)variable11,\n                                      (int)((ulonglong)variable11 >> 0x20));\n                variable11 = FUN_08000168((int)variable11,(int)((ulonglong)variable11 >> 0x20),result1,result4);\n                variable10 = FUN_08000168(0,0x3ff00000,(int)variable11,(int)((ulonglong)variable11 >> 0x20));\n                variable2 = (int)((ulonglong)variable10 >> 0x20);\n                variable6 = variable2 + variable1 * 0x100000;\n                variable11 = CONCAT44(variable6,(int)variable10);\n                input1 = localVariable1;\n                if (variable6 < 0x100000) {\n                  variable11 = FUN_080071c0((int)variable10,variable2,variable1);\n                }\n              }\n              else {\n                if ((variable4 + 0x3f6f3400 | variable7) == 0) {\n                  variable10 = FUN_08000168(variable7,variable4,variable8,result4);\n                  variable1 = FUN_080009c8(result1,variable9,(int)variable10,(int)((ulonglong)variable10 >> 0x20));\n                  if (variable1 == 0) goto LAB_08006968;\n                }\n                variable11 = FUN_080004d0(0,input2,0xc2f8f359,0x1a56e1f);\n                input1 = 0xc2f8f359;\n                input2 = 0x1a56e1f;\n              }\nLAB_0800634a:\n              variable7 = FUN_080004d0((int)variable11,(int)((ulonglong)variable11 >> 0x20),input1,input2);\n              return variable7;\n            }\n          }\n          result1 = (undefined4)((ulonglong)variable10 >> 0x20);\n          variable10 = FUN_08000168((int)variable10,result1,(int)variable10,result1);\n          variable11 = variable10;\nLAB_08006320:\n          variable7 = FUN_08000724((int)variable10,(int)((ulonglong)variable10 >> 0x20),(int)variable11,\n                                (int)((ulonglong)variable11 >> 0x20));\n          return variable7;\n        }\n      }\n    }\n    else if (variable7 < 0x7ff00001) goto LAB_08006262;\n  }\n  if ((variable4 + 0xc0100000 | input1) == 0) {\n    return 0;\n  }\nLAB_08006278:\n  variable7 = FUN_080070a4(&DAT_0800737e);\n  return variable7;\n}\n\n",
            "renaming": {
                "FUN_08006228": "calculate_float_08006228",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result1",
                "uVar2": "result2",
                "extraout_r1": "result3",
                "uVar3": "result4",
                "uVar4": "result5",
                "extraout_r1_00": "result6",
                "extraout_r1_01": "result7",
                "extraout_r1_02": "result8",
                "extraout_r1_03": "result9",
                "iVar5": "variable1",
                "iVar6": "variable2",
                "uVar7": "variable3",
                "uVar8": "variable4",
                "uVar9": "variable5",
                "iVar10": "variable6",
                "uVar11": "variable7",
                "uVar12": "variable8",
                "uVar13": "variable9",
                "uVar14": "variable10",
                "uVar15": "variable11",
                "uVar16": "variable12",
                "uVar17": "variable13",
                "lVar18": "variable14",
                "uVar19": "variable15",
                "uVar20": "variable16",
                "local_70": "localVariable1",
                "local_68": "localVariable2",
                "local_64": "localVariable3",
                "local_54": "localVariable4"
            },
            "calling": [
                "FUN_08005900"
            ],
            "called": [
                "FUN_080071c0",
                "FUN_080004d0",
                "FUN_0800708c",
                "FUN_080070a4",
                "FUN_080009c8",
                "FUN_08006c0c",
                "FUN_08000168",
                "FUN_080009f0",
                "FUN_08000724",
                "FUN_0800016c",
                "FUN_08000404"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c0c": {
            "entrypoint": "0x08006c0c",
            "current_name": "calculate_floating_point_08006c0c",
            "code": "\nundefined8 calculateFloatingPoint_08006c0c(uint input1,uint input2)\n\n{\n  undefined4 temp1;\n  uint temp2;\n  int exponent;\n  int exponentTemp;\n  uint mantissa;\n  uint mantissaTemp;\n  int resultExponent;\n  uint resultMantissa;\n  uint mask;\n  int counter;\n  uint temp3;\n  undefined8 finalResult;\n  \n  if ((~input2 & 0x7ff00000) == 0) {\n    finalResult = FUN_080004d0(input1,input2,input1,input2);\n    finalResult = FUN_0800016c(input1,input2,(int)finalResult,(int)((ulonglong)finalResult >> 0x20));\n    return finalResult;\n  }\n  if ((int)input2 < 1) {\n    if ((input2 & 0x7fffffff | input1) == 0) {\n      return CONCAT44(input2,input1);\n    }\n    if (input2 != 0) {\n      finalResult = FUN_08000168(input1,input2,input1,input2);\n      temp1 = (undefined4)((ulonglong)finalResult >> 0x20);\n      finalResult = FUN_08000724((int)finalResult,temp1,(int)finalResult,temp1);\n      return finalResult;\n    }\n  }\n  exponent = (int)input2 >> 0x14;\n  if (exponent == 0) {\n    while (input2 == 0) {\n      exponent = exponent + -0x15;\n      input2 = input1 >> 0xb;\n      input1 = input1 << 0x15;\n    }\n    temp2 = 0;\n    for (; -1 < (int)(input2 << 0xb); input2 = input2 << 1) {\n      temp2 = temp2 + 1;\n    }\n    exponent = exponent - (temp2 - 1);\n    input2 = input2 | input1 >> (0x20 - temp2 & 0xff);\n    input1 = input1 << (temp2 & 0xff);\n  }\n  resultExponent = 0;\n  temp2 = input2 & 0xfffff | 0x100000;\n  if ((exponent + -0x3ff) * -0x80000000 < 0) {\n    temp2 = temp2 * 2 - ((int)input1 >> 0x1f);\n    input1 = input1 << 1;\n  }\n  temp2 = temp2 * 2 - ((int)input1 >> 0x1f);\n  exponentTemp = 0x16;\n  mantissa = 0;\n  resultMantissa = 0x200000;\n  input1 = input1 << 1;\n  do {\n    counter = mantissa + resultMantissa;\n    if (counter <= (int)temp2) {\n      temp2 = temp2 - counter;\n      mantissa = counter + resultMantissa;\n      resultExponent = resultExponent + resultMantissa;\n    }\n    exponentTemp = exponentTemp + -1;\n    temp2 = temp2 * 2 - ((int)input1 >> 0x1f);\n    resultMantissa = resultMantissa >> 1;\n    input1 = input1 << 1;\n  } while (exponentTemp != 0);\n  counter = 0x20;\n  mask = 0x80000000;\n  resultMantissa = 0;\n  exponentTemp = 0;\n  do {\n    temp3 = mask + exponentTemp;\n    mantissaTemp = mantissa;\n    if (((int)mantissa < (int)temp2) || ((temp2 == mantissa && (temp3 <= input1)))) {\n      exponentTemp = temp3 + mask;\n      if (((int)temp3 < 0) && (-1 < exponentTemp)) {\n        mantissaTemp = mantissa + 1;\n      }\n      temp2 = temp2 - mantissa;\n      if (input1 < temp3) {\n        temp2 = temp2 - 1;\n      }\n      input1 = input1 - temp3;\n      resultMantissa = resultMantissa + mask;\n    }\n    temp2 = temp2 * 2 - ((int)input1 >> 0x1f);\n    counter = counter + -1;\n    input1 = input1 << 1;\n    mask = mask >> 1;\n    mantissa = mantissaTemp;\n  } while (counter != 0);\n  if ((input1 | temp2) != 0) {\n    if (resultMantissa == 0xffffffff) {\n      resultExponent = resultExponent + 1;\n      resultMantissa = 0;\n    }\n    else {\n      resultMantissa = resultMantissa + 1 & 0xfffffffe;\n    }\n  }\n  resultMantissa = resultMantissa >> 1;\n  if (resultExponent << 0x1f < 0) {\n    resultMantissa = resultMantissa | 0x80000000;\n  }\n  return CONCAT44((resultExponent >> 1) + 0x3fe00000 + (exponent + -0x3ff >> 1) * 0x100000,resultMantissa);\n}\n\n",
            "renaming": {
                "FUN_08006c0c": "calculate_floating_point_08006c0c",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "iVar3": "exponent",
                "iVar4": "exponentTemp",
                "uVar5": "mantissa",
                "uVar6": "mantissaTemp",
                "iVar7": "resultExponent",
                "uVar8": "resultMantissa",
                "uVar9": "mask",
                "iVar10": "counter",
                "uVar11": "temp3",
                "uVar12": "finalResult"
            },
            "calling": [
                "FUN_08005c70",
                "FUN_08005bc8",
                "FUN_08006228"
            ],
            "called": [
                "FUN_080004d0",
                "FUN_08000168",
                "FUN_08000724",
                "FUN_0800016c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d68": {
            "entrypoint": "0x08006d68",
            "current_name": "perform_calculation_08006d68",
            "code": "\nundefined8 performCalculation_08006d68(int input1,uint input2,undefined4 value1,undefined4 value2)\n\n{\n  int result;\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  undefined4 temp4;\n  undefined4 temp5;\n  undefined4 temp6;\n  uint temp7;\n  undefined8 output1;\n  undefined8 output2;\n  \n  output1 = CONCAT44(input2,input1);\n  temp7 = input2 & 0x7fffffff;\n  if (temp7 < 0x44100000) {\n    if (temp7 < 0x3fdc0000) {\n      if (temp7 < 0x3e200000) {\n        output2 = FUN_0800016c(input1,input2,0x8800759c,0x7e37e43c,value2);\n        result = FUN_080009f0((int)output2,(int)((ulonglong)output2 >> 0x20),0,0x3ff00000);\n        if (result != 0) {\n          return output1;\n        }\n      }\n      result = -1;\n    }\n    else {\n      output1 = FUNC_0800708c();\n      temp2 = (undefined4)((ulonglong)output1 >> 0x20);\n      temp1 = (undefined4)output1;\n      if (temp7 < 0x3ff30000) {\n        if (temp7 < 0x3fe60000) {\n          output1 = FUN_0800016c(temp1,temp2,temp1,temp2);\n          output1 = FUN_08000168((int)output1,(int)((ulonglong)output1 >> 0x20),0,0x3ff00000);\n          output2 = FUN_0800016c(temp1,temp2,0,0x40000000);\n          output1 = FUN_08000724((int)output1,(int)((ulonglong)output1 >> 0x20),(int)output2,\n                               (int)((ulonglong)output2 >> 0x20));\n          result = 0;\n        }\n        else {\n          output1 = FUN_08000168(temp1,temp2,0,0x3ff00000);\n          output2 = FUN_0800016c(temp1,temp2,0,0x3ff00000);\n          output1 = FUN_08000724((int)output1,(int)((ulonglong)output1 >> 0x20),(int)output2,\n                               (int)((ulonglong)output2 >> 0x20));\n          result = 1;\n        }\n      }\n      else if (temp7 < 0x40038000) {\n        output1 = FUN_08000168(temp1,temp2,0,0x3ff80000);\n        output2 = FUN_080004d0(temp1,temp2,0,0x3ff80000);\n        output2 = FUN_0800016c((int)output2,(int)((ulonglong)output2 >> 0x20),0,0x3ff00000);\n        output1 = FUN_08000724((int)output1,(int)((ulonglong)output1 >> 0x20),(int)output2,\n                             (int)((ulonglong)output2 >> 0x20));\n        result = 2;\n      }\n      else {\n        output1 = FUN_08000724(0,0xbff00000,temp1,temp2);\n        result = 3;\n      }\n    }\n    temp6 = (undefined4)((ulonglong)output1 >> 0x20);\n    temp5 = (undefined4)output1;\n    output1 = FUN_080004d0(temp5,temp6,temp5,temp6);\n    temp3 = (undefined4)((ulonglong)output1 >> 0x20);\n    temp1 = (undefined4)output1;\n    output1 = FUN_080004d0(temp1,temp3,temp1,temp3);\n    temp4 = (undefined4)((ulonglong)output1 >> 0x20);\n    temp2 = (undefined4)output1;\n    output1 = FUN_080004d0(temp2,temp4,0xe322da11,0x3f90ad3a);\n    output1 = FUN_0800016c((int)output1,(int)((ulonglong)output1 >> 0x20),0x24760deb,0x3fa97b4b);\n    output1 = FUN_080004d0((int)output1,(int)((ulonglong)output1 >> 0x20),temp2,temp4);\n    output1 = FUN_0800016c((int)output1,(int)((ulonglong)output1 >> 0x20),0xa0d03d51,0x3fb10d66);\n    output1 = FUN_080004d0((int)output1,(int)((ulonglong)output1 >> 0x20),temp2,temp4);\n    output1 = FUN_0800016c((int)output1,(int)((ulonglong)output1 >> 0x20),0xc54c206e,0x3fb745cd);\n    output1 = FUN_080004d0((int)output1,(int)((ulonglong)output1 >> 0x20),temp2,temp4);\n    output1 = FUN_0800016c((int)output1,(int)((ulonglong)output1 >> 0x20),0x920083ff,0x3fc24924);\n    output1 = FUN_080004d0((int)output1,(int)((ulonglong)output1 >> 0x20),temp2,temp4);\n    output1 = FUN_0800016c((int)output1,(int)((ulonglong)output1 >> 0x20),0x5555550d,0x3fd55555);\n    output1 = FUN_080004d0((int)output1,(int)((ulonglong)output1 >> 0x20),temp1,temp3);\n    temp1 = (undefined4)((ulonglong)output1 >> 0x20);\n    output2 = FUN_080004d0(temp2,temp4,0x2c6a6c2f,0xbfa2b444);\n    output2 = FUN_08000168((int)output2,(int)((ulonglong)output2 >> 0x20),0x52defd9a,0x3fadde2d);\n    output2 = FUN_080004d0((int)output2,(int)((ulonglong)output2 >> 0x20),temp2,temp4);\n    output2 = FUN_08000168((int)output2,(int)((ulonglong)output2 >> 0x20),0xaf749a6d,0x3fb3b0f2);\n    output2 = FUN_080004d0((int)output2,(int)((ulonglong)output2 >> 0x20),temp2,temp4);\n    output2 = FUN_08000168((int)output2,(int)((ulonglong)output2 >> 0x20),0xfe231671,0x3fbc71c6);\n    output2 = FUN_080004d0((int)output2,(int)((ulonglong)output2 >> 0x20),temp2,temp4);\n    output2 = FUN_08000168((int)output2,(int)((ulonglong)output2 >> 0x20),0x9998ebc4,0x3fc99999);\n    output2 = FUN_080004d0((int)output2,(int)((ulonglong)output2 >> 0x20),temp2,temp4);\n    temp2 = (undefined4)((ulonglong)output2 >> 0x20);\n    if (result == -1) {\n      output1 = FUN_0800016c((int)output1,temp1,(int)output2,temp2);\n      output1 = FUN_080004d0((int)output1,(int)((ulonglong)output1 >> 0x20),temp5,temp6);\n      output1 = FUN_08000168(temp5,temp6,(int)output1,(int)((ulonglong)output1 >> 0x20));\n    }\n    else {\n      output1 = FUN_0800016c((int)output1,temp1,(int)output2,temp2);\n      output1 = FUN_080004d0((int)output1,(int)((ulonglong)output1 >> 0x20),temp5,temp6);\n      result = result * 8;\n      output1 = FUN_08000168((int)output1,(int)((ulonglong)output1 >> 0x20),\n                           *(undefined4 *)(&UNK_08007410 + result),\n                           *(undefined4 *)(&UNK_08007414 + result));\n      output1 = FUN_08000168((int)output1,(int)((ulonglong)output1 >> 0x20),temp5,temp6);\n      output1 = FUN_08000168(*(undefined4 *)(&UNK_080073f0 + result),\n                           *(undefined4 *)(&UNK_080073f4 + result),(int)output1,\n                           (int)((ulonglong)output1 >> 0x20));\n      if ((int)input2 < 0) {\n        output1 = CONCAT44((int)((ulonglong)output1 >> 0x20) + -0x80000000,(int)output1);\n      }\n    }\n  }\n  else if ((temp7 < 0x7ff00001) && ((temp7 != 0x7ff00000 || (input1 == 0)))) {\n    if ((int)input2 < 1) {\n      output1 = 0xbff921fb54442d18;\n    }\n    else {\n      output1 = 0x3ff921fb54442d18;\n    }\n  }\n  else {\n    output1 = FUN_0800016c(input1,input2,input1,input2,value2);\n  }\n  return output1;\n}\n\n",
            "renaming": {
                "FUN_08006d68": "perform_calculation_08006d68",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "value1",
                "param_4": "value2",
                "iVar1": "result",
                "uVar2": "temp1",
                "uVar3": "temp2",
                "uVar4": "temp3",
                "uVar5": "temp4",
                "uVar6": "temp5",
                "uVar7": "temp6",
                "uVar8": "temp7",
                "uVar9": "output1",
                "uVar10": "output2"
            },
            "calling": [
                "FUN_08006070"
            ],
            "called": [
                "FUN_080004d0",
                "FUN_0800708c",
                "FUN_08000168",
                "FUN_080009f0",
                "FUN_08000724",
                "FUN_0800016c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800708c": {
            "entrypoint": "0x0800708c",
            "current_name": "FUNC_0800708c",
            "code": "\nvoid FUNC_0800708c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800708c": "FUNC_0800708c"
            },
            "calling": [
                "FUN_08006d68",
                "FUN_08005c70",
                "FUN_08005854",
                "FUN_08006228",
                "FUN_08006070"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08007092": {
            "entrypoint": "0x08007092",
            "current_name": "set_most_significant_bit_to_one_08007092",
            "code": "\nuint setMostSignificantBitToOne_08007092(undefined4 input_1,uint input_2)\n\n{\n  return (input_2 | 0x80000000) + 0x100000 >> 0x1f;\n}\n\n",
            "renaming": {
                "FUN_08007092": "set_most_significant_bit_to_one_08007092",
                "param_1": "input_1",
                "param_2": "input_2"
            },
            "calling": [
                "FUN_08005900"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800709e": {
            "entrypoint": "0x0800709e",
            "current_name": "initialize_application_0800709e",
            "code": "\nvoid initializeApplication_0800709e(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800709e": "initialize_application_0800709e",
                "undefined4": "void"
            },
            "calling": [
                "FUN_08005900",
                "FUN_08005854",
                "FUN_08005bc8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080070a4": {
            "entrypoint": "0x080070a4",
            "current_name": "get_infinity_value_080070a4",
            "code": "\ndouble getInfinityValue_080070a4(void)\n\n{\n  return 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_080070a4": "get_infinity_value_080070a4",
                "undefined8": "double"
            },
            "calling": [
                "FUN_08005854",
                "FUN_08006228"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080070b0": {
            "entrypoint": "0x080070b0",
            "current_name": "extract_function_080070b0",
            "code": "\nundefined8 extractFunction_080070b0(uint input1,uint input2,undefined4 input3)\n\n{\n  int tempVar1;\n  undefined4 tempVar2;\n  uint tempVar3;\n  undefined4 tempVar4;\n  uint tempVar5;\n  uint tempVar6;\n  uint tempVar7;\n  undefined8 tempVar8;\n  \n  tempVar7 = (input2 << 1) >> 0x15;\n  tempVar6 = tempVar7 - 0x3ff;\n  tempVar3 = input2;\n  if ((int)tempVar6 < 0x14) {\n    if ((int)tempVar6 < 0) {\n      if ((input2 & 0x7fffffff | input1) == 0) {\n        return CONCAT44(input2,input1);\n      }\n      tempVar3 = input2 & 0xfffff | input1;\n      tempVar1 = ((int)input2 >> 0x1f) * -8;\n      tempVar2 = *(undefined4 *)(&DAT_08007430 + tempVar1);\n      tempVar4 = *(undefined4 *)(&DAT_08007434 + tempVar1);\n      tempVar8 = FUN_0800016c(input1,(-tempVar3 | tempVar3) >> 0xc & 0x80000 | input2 & 0xfffe0000,tempVar2,\n                           tempVar4,input1,input2,input3);\n      tempVar8 = FUN_08000168((int)tempVar8,(int)((ulonglong)tempVar8 >> 0x20),tempVar2,tempVar4);\n      return CONCAT44((uint)((ulonglong)tempVar8 >> 0x20) & 0x7fffffff | input2 & 0x80000000,\n                      (int)tempVar8);\n    }\n    tempVar7 = 0xfffff >> (tempVar6 & 0xff);\n    if ((input2 & tempVar7 | input1) == 0) {\n      return CONCAT44(input2,input1);\n    }\n    tempVar7 = tempVar7 >> 1;\n    tempVar5 = input2 & tempVar7 | input1;\n    if (tempVar5 != 0) {\n      if (tempVar6 == 0x13) {\n        tempVar5 = 0x80000000;\n      }\n      else {\n        tempVar5 = 0;\n      }\n      tempVar3 = 0x40000 >> (tempVar6 & 0xff) | input2 & ~tempVar7;\n    }\n  }\n  else {\n    if (0x33 < (int)tempVar6) {\n      if (tempVar6 != 0x400) {\n        return CONCAT44(input2,input1);\n      }\n      tempVar8 = FUN_0800016c();\n      return tempVar8;\n    }\n    tempVar7 = tempVar7 - 0x413;\n    tempVar6 = 0xffffffff >> (tempVar7 & 0xff);\n    if ((input1 & tempVar6) == 0) {\n      return CONCAT44(input2,input1);\n    }\n    tempVar6 = tempVar6 >> 1;\n    tempVar5 = input1;\n    if ((input1 & tempVar6) != 0) {\n      tempVar5 = 0x40000000 >> (tempVar7 & 0xff) | input1 & ~tempVar6;\n    }\n  }\n  tempVar1 = ((int)input2 >> 0x1f) * -8;\n  tempVar2 = *(undefined4 *)(&DAT_08007430 + tempVar1);\n  tempVar4 = *(undefined4 *)(&DAT_08007434 + tempVar1);\n  tempVar8 = FUN_0800016c(tempVar5,tempVar3,tempVar2,tempVar4,input1,input2,input3);\n  tempVar8 = FUN_08000168((int)tempVar8,(int)((ulonglong)tempVar8 >> 0x20),tempVar2,tempVar4);\n  return tempVar8;\n}\n\n",
            "renaming": {
                "FUN_080070b0": "extract_function_080070b0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "iVar1": "tempVar1",
                "uVar2": "tempVar2",
                "uVar3": "tempVar3",
                "uVar4": "tempVar4",
                "uVar5": "tempVar5",
                "uVar6": "tempVar6",
                "uVar7": "tempVar7",
                "uVar8": "tempVar8"
            },
            "calling": [
                "FUN_08005900"
            ],
            "called": [
                "FUN_08000168",
                "FUN_0800016c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080071c0": {
            "entrypoint": "0x080071c0",
            "current_name": "calculate_float_080071c0",
            "code": "\nundefined8 calculateFloat_080071c0(uint input1,uint input2,int offset,undefined4 constant)\n\n{\n  uint shiftedInput2;\n  undefined4 value1;\n  int newValue;\n  undefined4 value2;\n  uint upperInput1;\n  undefined8 result;\n  \n  result = CONCAT44(input2,input1);\n  shiftedInput2 = (input2 << 1) >> 0x15;\n  if (shiftedInput2 == 0) {\n    if ((input2 & 0x7fffffff | input1) == 0) {\n      return result;\n    }\n    result = FUN_080004d0(input1,input2,0,0x43500000);\n    if (-0xc351 < offset) {\n      shiftedInput2 = ((uint)((int)((ulonglong)result >> 0x20) << 1) >> 0x15) - 0x36;\n      goto LAB_08007210;\n    }\nLAB_080071ec:\n    value1 = 0xc2f8f359;\n    value2 = 0x1a56e1f;\n  }\n  else {\n    if (shiftedInput2 == 0x7ff) {\n      result = FUN_0800016c(input1,input2,input1,input2,constant);\n      return result;\n    }\nLAB_08007210:\n    upperInput1 = (uint)((ulonglong)result >> 0x20);\n    value1 = (undefined4)result;\n    newValue = shiftedInput2 + offset;\n    if (newValue < 0x7ff) {\n      if (0 < newValue) {\n        return CONCAT44(upperInput1 & 0x800fffff | newValue * 0x100000,value1);\n      }\n      if (newValue + 0x35 < 0 == SCARRY4(newValue,0x35)) {\n        result = CONCAT44(upperInput1 & 0x800fffff | (newValue + 0x36) * 0x100000,value1);\n        value1 = 0;\n        value2 = 0x3c900000;\n        goto LAB_0800722e;\n      }\n      if (offset < 0xc351) {\n        result = FUNC_0800729c(0xc2f8f359,0x1a56e1f,value1,upperInput1);\n        goto LAB_080071ec;\n      }\n    }\n    result = FUNC_0800729c(0x8800759c,0x7e37e43c,value1,upperInput1);\n    value1 = 0x8800759c;\n    value2 = 0x7e37e43c;\n  }\nLAB_0800722e:\n  result = FUN_080004d0((int)result,(int)((ulonglong)result >> 0x20),value1,value2);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080071c0": "calculate_float_080071c0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "offset",
                "param_4": "constant",
                "uVar1": "shiftedInput2",
                "uVar2": "value1",
                "iVar3": "newValue",
                "uVar4": "value2",
                "uVar5": "upperInput1",
                "uVar6": "result"
            },
            "calling": [
                "FUN_08006228"
            ],
            "called": [
                "FUN_080004d0",
                "FUN_0800016c",
                "FUN_0800729c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800729c": {
            "entrypoint": "0x0800729c",
            "current_name": "FUNC_0800729c",
            "code": "\nvoid FUNC_0800729c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800729c": "FUNC_0800729c"
            },
            "calling": [
                "FUN_080071c0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080072ac": {
            "entrypoint": "0x080072ac",
            "current_name": "get_data_value_080072ac",
            "code": "\nundefined4 get_data_value_080072ac(void)\n\n{\n  return DAT_200001c0;\n}\n\n",
            "renaming": {
                "FUN_080072ac": "get_data_value_080072ac"
            },
            "calling": [
                "FUN_08005900",
                "FUN_08005854",
                "FUN_08005bc8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080072b8": {
            "entrypoint": "0x080072b8",
            "current_name": "increment_pointer_080072b8",
            "code": "\nvoid incrementPointer_080072b8(int amount)\n\n{\n  if (DAT_200002b4 == (undefined *)0x0) {\n    DAT_200002b4 = &DAT_200016a0;\n  }\n  DAT_200002b4 = DAT_200002b4 + amount;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080072b8": "increment_pointer_080072b8",
                "param_1": "amount"
            },
            "calling": [
                "FUN_0800581c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080072d4": {
            "entrypoint": "0x080072d4",
            "current_name": "FUNC_080072d4",
            "code": "\nvoid FUNC_080072d4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080072d4": "FUNC_080072d4"
            },
            "calling": [
                "FUN_08000134",
                "FUN_08004fb4",
                "FUN_08000110"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080072e0": {
            "entrypoint": "0x080072e0",
            "current_name": "FUNC_080072e0",
            "code": "\nvoid FUNC_080072e0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080072e0": "FUNC_080072e0"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        }
    },
    "used_tokens": 151478,
    "layers": [
        [
            "FUN_08000110",
            "FUN_08000134",
            "FUN_08000150",
            "FUN_08000168",
            "FUN_0800016c",
            "FUN_08000404",
            "FUN_08000428",
            "FUN_080004d0",
            "FUN_080006ac",
            "FUN_08000724",
            "FUN_08000892",
            "FUN_08000904",
            "FUN_08000980",
            "FUN_08000990",
            "FUN_080009a0",
            "FUN_080009b4",
            "FUN_080009c8",
            "FUN_080009f0",
            "FUN_08000a04",
            "FUN_08000a30",
            "FUN_08000ad8",
            "FUN_08000adc",
            "FUN_08000c3c",
            "FUN_08000c44",
            "FUN_08000cec",
            "FUN_08000e54",
            "FUN_08000f9c",
            "FUN_08000ffc",
            "FUN_08001004",
            "FUN_08001014",
            "FUN_08001028",
            "FUN_08001050",
            "FUN_08001064",
            "FUN_08001078",
            "FUN_080010c4",
            "FUN_08001104",
            "FUN_08001128",
            "FUN_0800114c",
            "FUN_0800115c",
            "FUN_08001170",
            "FUN_08001194",
            "FUN_080011fc",
            "FUN_08001214",
            "FUN_08001240",
            "FUN_08001264",
            "FUN_08001424",
            "FUN_0800142e",
            "FUN_08001436",
            "FUN_08001460",
            "FUN_080014e2",
            "FUN_08001530",
            "FUN_080015e8",
            "FUN_080016f4",
            "FUN_08001754",
            "FUN_08001828",
            "FUN_08001938",
            "FUN_08001b58",
            "FUN_08002008",
            "FUN_0800209c",
            "FUN_08002214",
            "FUN_08002220",
            "FUN_08002250",
            "FUN_08002280",
            "FUN_080022d0",
            "FUN_08002324",
            "FUN_08002368",
            "FUN_080023d0",
            "FUN_08002404",
            "FUN_0800245c",
            "FUN_08002520",
            "FUN_08002538",
            "FUN_08002564",
            "FUN_080025a4",
            "FUN_080025e8",
            "FUN_08002724",
            "FUN_0800290c",
            "FUN_0800299a",
            "FUN_08002ad0",
            "FUN_08002b48",
            "FUN_08002bf0",
            "FUN_08002cb0",
            "FUN_08002d88",
            "FUN_08002ea0",
            "FUN_08002ec0",
            "FUN_08002ed4",
            "FUN_08002ee8",
            "FUN_08002f28",
            "FUN_08003034",
            "FUN_08003068",
            "FUN_08003298",
            "FUN_08003314",
            "FUN_08003320",
            "FUN_08003330",
            "FUN_08003eb0",
            "FUN_08003ec8",
            "FUN_08003f3c",
            "FUN_08003fc4",
            "FUN_08003fd0",
            "FUN_08003fdc",
            "FUN_08003fe8",
            "FUN_08003ff4",
            "FUN_08004028",
            "FUN_0800403c",
            "FUN_0800407c",
            "FUN_080040b8",
            "FUN_080040e8",
            "FUN_0800411c",
            "FUN_08004194",
            "FUN_080041ae",
            "FUN_080041c4",
            "FUN_0800426c",
            "FUN_08004300",
            "FUN_08004348",
            "FUN_08004384",
            "FUN_080043bc",
            "FUN_080043f0",
            "FUN_08004410",
            "FUN_08004434",
            "FUN_08004458",
            "FUN_08004490",
            "FUN_08004514",
            "FUN_0800458c",
            "FUN_0800483c",
            "FUN_08004a30",
            "FUN_08004a84",
            "FUN_08004c18",
            "FUN_08004c30",
            "FUN_08004c64",
            "FUN_08004c70",
            "FUN_08004c8c",
            "FUN_08004cac",
            "FUN_08004ccc",
            "FUN_08004d48",
            "FUN_08004d8c",
            "FUN_08004e14",
            "FUN_08004e7c",
            "FUN_08004f10",
            "thunk_FUN_0800115c",
            "FUN_08004fb4",
            "FUN_08004ffc",
            "FUN_08005044",
            "FUN_080050fc",
            "FUN_080052e4",
            "FUN_080053d4",
            "FUN_08005614",
            "FUN_08005630",
            "FUN_08005646",
            "FUN_0800567c",
            "FUN_08005714",
            "FUN_080057d0",
            "FUN_0800581c",
            "FUN_08005840",
            "FUN_08005854",
            "thunk_FUN_08006070",
            "FUN_08005900",
            "FUN_08005bc8",
            "FUN_08005c70",
            "FUN_08006070",
            "FUN_08006228",
            "FUN_08006c0c",
            "FUN_08006d68",
            "FUN_08007092",
            "FUN_0800709e",
            "FUN_080070a4",
            "FUN_080070b0",
            "FUN_080071c0",
            "FUN_080072ac",
            "FUN_080072b8"
        ]
    ],
    "locked_functions": []
}