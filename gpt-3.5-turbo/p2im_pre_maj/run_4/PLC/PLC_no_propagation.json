{
    "functions": {
        "FUN_080001ac": {
            "entrypoint": "0x080001ac",
            "current_name": "set_flag_if_not_set_080001ac",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x080001b8) */\n\nundefined4 setFlagIfNotSet_080001ac(undefined4 value)\n\n{\n  if ((char)DAT_20000104 == '\\0') {\n    DAT_20000104._0_1_ = '\\x01';\n  }\n  return value;\n}\n\n",
            "renaming": {
                "FUN_080001ac": "set_flag_if_not_set_080001ac",
                "param_1": "value"
            },
            "calling": [],
            "called": [
                "FUN_080059f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000230": {
            "entrypoint": "0x08000230",
            "current_name": "find_byte_sequence_08000230",
            "code": "\nbyte * find_byte_sequence_08000230(uint *data,uint byte_to_find,uint length)\n\n{\n  byte current_byte;\n  char is_zero;\n  char is_zero_8;\n  char is_zero_16;\n  char is_zero_24;\n  byte *next_byte;\n  uint *current_pointer;\n  byte *result;\n  uint data_alignment;\n  uint rounded_length;\n  uint temp_result;\n  uint temp_result_2;\n  bool current_byte3;\n  bool is_zero_temp_8;\n  bool is_zero_temp_16;\n  bool is_zero_temp_24;\n  \n  byte_to_find = byte_to_find & 0xff;\n  if ((int)length < 0x10) {\njoined_r0x08000290:\n    do {\n      if (length == 0) {\n        return (byte *)0x0;\n      }\n      current_pointer = (uint *)((int)data + 1);\n      current_byte = *(byte *)data;\n      length = length - 1;\n      data = current_pointer;\n    } while (current_byte != byte_to_find);\n  }\n  else {\n    data_alignment = (uint)data & 7;\n    while( true ) {\n      if (data_alignment == 0) {\n        data_alignment = byte_to_find | byte_to_find << 8;\n        data_alignment = data_alignment | data_alignment << 0x10;\n        rounded_length = length & 0xfffffff8;\n        do {\n          current_pointer = data + 2;\n          rounded_length = rounded_length - 8;\n          temp_result = *data ^ data_alignment;\n          temp_result_2 = data[1] ^ data_alignment;\n          is_zero = -((char)temp_result == '\\0');\n          is_zero_8 = -((char)(temp_result >> 8) == '\\0');\n          is_zero_16 = -((char)(temp_result >> 0x10) == '\\0');\n          is_zero_24 = -((char)(temp_result >> 0x18) == '\\0');\n          temp_result = CONCAT13(is_zero_24,CONCAT12(is_zero_16,CONCAT11(is_zero_8,is_zero)));\n          current_byte3 = (char)temp_result_2 != '\\0';\n          is_zero_temp_8 = (char)(temp_result_2 >> 8) != '\\0';\n          is_zero_temp_16 = (char)(temp_result_2 >> 0x10) != '\\0';\n          is_zero_temp_24 = (char)(temp_result_2 >> 0x18) != '\\0';\n          temp_result_2 = CONCAT13(is_zero_temp_24 * is_zero_24 - !is_zero_temp_24,\n                            CONCAT12(is_zero_temp_16 * is_zero_16 - !is_zero_temp_16,\n                                     CONCAT11(is_zero_temp_8 * is_zero_8 - !is_zero_temp_8,current_byte3 * is_zero - !current_byte3)));\n          if (temp_result_2 != 0) {\n            if (temp_result == 0) {\n              result = (byte *)((int)data + 5);\n              temp_result = temp_result_2;\n            }\n            else {\n              result = (byte *)((int)data + 1);\n            }\n            if ((temp_result & 1) == 0) {\n              current_byte3 = (temp_result & 0x100) == 0;\n              next_byte = result + 1;\n              if (current_byte3) {\n                current_byte3 = (temp_result & 0x18000) == 0;\n                next_byte = result + 2;\n              }\n              result = next_byte;\n              if (current_byte3) {\n                result = result + 1;\n              }\n            }\n            return result + -1;\n          }\n          data = current_pointer;\n        } while (rounded_length != 0);\n        length = length & 7;\n        goto joined_r0x08000290;\n      }\n      current_pointer = (uint *)((int)data + 1);\n      length = length - 1;\n      if (*(byte *)data == byte_to_find) break;\n      data_alignment = (uint)current_pointer & 7;\n      data = current_pointer;\n      if (length == 0) {\n        return (byte *)0x0;\n      }\n    }\n  }\n  return (byte *)((int)current_pointer + -1);\n}\n\n",
            "renaming": {
                "FUN_08000230": "find_byte_sequence_08000230",
                "param_1": "data",
                "param_2": "byte_to_find",
                "param_3": "length",
                "bVar1": "current_byte",
                "cVar2": "is_zero",
                "cVar3": "is_zero_8",
                "cVar4": "is_zero_16",
                "cVar5": "is_zero_24",
                "pbVar6": "next_byte",
                "puVar7": "current_pointer",
                "pbVar8": "result",
                "uVar9": "data_alignment",
                "uVar10": "rounded_length",
                "uVar11": "temp_result",
                "uVar12": "temp_result_2",
                "bVar14": "is_zero_temp_8",
                "bVar15": "is_zero_temp_16",
                "bVar16": "is_zero_temp_24"
            },
            "calling": [
                "FUN_08004a84",
                "FUN_08004d9c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080002d0": {
            "entrypoint": "0x080002d0",
            "current_name": "check_parameters_080002d0",
            "code": "\nundefined8 checkParameters_080002d0(int input1,int input2,int condition1,int condition2)\n\n{\n  undefined8 result;\n  \n  if ((condition2 == 0) && (condition1 == 0)) {\n    if (input2 != 0 || input1 != 0) {\n      input2 = -1;\n      input1 = -1;\n    }\n    return CONCAT44(input2,input1);\n  }\n  result = FUN_08000300();\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080002d0": "check_parameters_080002d0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "condition1",
                "param_4": "condition2",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080023b4"
            ],
            "called": [
                "FUN_08000300"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000300": {
            "entrypoint": "0x08000300",
            "current_name": "improved_division_algorithm_08000300",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x080005aa) */\n\nulonglong improved_division_algorithm_08000300(uint dividend,uint divisor,uint quotient,uint remainder,uint *result)\n\n{\n  ulonglong temp1;\n  uint temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  uint temp7;\n  uint temp8;\n  uint temp9;\n  int shift_count;\n  bool carry;\n  \n  if (remainder == 0) {\n    if (divisor < quotient) {\n      shift_count = LZCOUNT(quotient);\n      if (shift_count != 0) {\n        quotient = quotient << shift_count;\n        divisor = dividend >> (0x20U - shift_count & 0xff) | divisor << shift_count;\n        dividend = dividend << shift_count;\n      }\n      temp8 = quotient >> 0x10;\n      temp6 = divisor / temp8;\n      temp5 = dividend >> 0x10 | (divisor - temp8 * temp6) * 0x10000;\n      temp4 = temp6 * (quotient & 0xffff);\n      temp3 = temp6;\n      if (temp5 <= temp4 && temp4 - temp5 != 0) {\n        carry = CARRY4(temp5,quotient);\n        temp5 = temp5 + quotient;\n        temp3 = temp6 - 1;\n        if ((carry == false) && (temp5 <= temp4 && temp4 - temp5 != 0)) {\n          temp3 = temp6 - 2;\n          temp5 = temp5 + quotient;\n        }\n      }\n      temp6 = (temp5 - temp4) / temp8;\n      temp5 = dividend & 0xffff | ((temp5 - temp4) - temp8 * temp6) * 0x10000;\n      temp8 = temp6 * (quotient & 0xffff);\n      temp4 = temp6;\n      if (temp5 <= temp8 && temp8 - temp5 != 0) {\n        carry = CARRY4(temp5,quotient);\n        temp5 = temp5 + quotient;\n        temp4 = temp6 - 1;\n        if ((carry == false) && (temp5 <= temp8 && temp8 - temp5 != 0)) {\n          temp4 = temp6 - 2;\n          temp5 = temp5 + quotient;\n        }\n      }\n      temp5 = temp5 - temp8;\n      temp4 = temp4 | temp3 << 0x10;\n      temp3 = 0;\n    }\n    else {\n      if (quotient == 0) {\n        quotient = 1 / 0;\n      }\n      shift_count = LZCOUNT(quotient);\n      if (shift_count == 0) {\n        divisor = divisor - quotient;\n        temp5 = quotient >> 0x10;\n        temp9 = quotient & 0xffff;\n        temp3 = 1;\n      }\n      else {\n        quotient = quotient << shift_count;\n        temp5 = quotient >> 0x10;\n        temp4 = divisor >> (0x20U - shift_count & 0xff);\n        temp7 = dividend >> (0x20U - shift_count & 0xff) | divisor << shift_count;\n        temp3 = temp4 / temp5;\n        temp9 = quotient & 0xffff;\n        temp8 = temp7 >> 0x10 | (temp4 - temp5 * temp3) * 0x10000;\n        temp6 = temp3 * temp9;\n        dividend = dividend << shift_count;\n        temp4 = temp3;\n        if (temp8 <= temp6 && temp6 - temp8 != 0) {\n          carry = CARRY4(temp8,quotient);\n          temp8 = temp8 + quotient;\n          temp4 = temp3 - 1;\n          if ((carry == false) && (temp8 <= temp6 && temp6 - temp8 != 0)) {\n            temp4 = temp3 - 2;\n            temp8 = temp8 + quotient;\n          }\n        }\n        temp2 = (temp8 - temp6) / temp5;\n        divisor = temp7 & 0xffff | ((temp8 - temp6) - temp5 * temp2) * 0x10000;\n        temp6 = temp2 * temp9;\n        temp3 = temp2;\n        if (divisor <= temp6 && temp6 - divisor != 0) {\n          carry = CARRY4(divisor,quotient);\n          divisor = divisor + quotient;\n          temp3 = temp2 - 1;\n          if ((carry == false) && (divisor <= temp6 && temp6 - divisor != 0)) {\n            temp3 = temp2 - 2;\n            divisor = divisor + quotient;\n          }\n        }\n        divisor = divisor - temp6;\n        temp3 = temp3 | temp4 << 0x10;\n      }\n      temp7 = divisor / temp5;\n      temp8 = dividend >> 0x10 | (divisor - temp5 * temp7) * 0x10000;\n      temp4 = temp9 * temp7;\n      temp6 = temp7;\n      if (temp8 <= temp4 && temp4 - temp8 != 0) {\n        carry = CARRY4(temp8,quotient);\n        temp8 = temp8 + quotient;\n        temp6 = temp7 - 1;\n        if ((carry == false) && (temp8 <= temp4 && temp4 - temp8 != 0)) {\n          temp6 = temp7 - 2;\n          temp8 = temp8 + quotient;\n        }\n      }\n      temp7 = (temp8 - temp4) / temp5;\n      temp5 = dividend & 0xffff | ((temp8 - temp4) - temp5 * temp7) * 0x10000;\n      temp9 = temp9 * temp7;\n      temp4 = temp7;\n      if (temp5 <= temp9 && temp9 - temp5 != 0) {\n        carry = CARRY4(temp5,quotient);\n        temp5 = temp5 + quotient;\n        temp4 = temp7 - 1;\n        if ((carry == false) && (temp5 <= temp9 && temp9 - temp5 != 0)) {\n          temp4 = temp7 - 2;\n          temp5 = temp5 + quotient;\n        }\n      }\n      temp5 = temp5 - temp9;\n      temp4 = temp4 | temp6 << 0x10;\n    }\n    if (result != (uint *)0x0) {\n      *result = temp5 >> shift_count;\n      result[1] = 0;\n      return CONCAT44(temp3,temp4);\n    }\n  }\n  else if (divisor < remainder) {\n    if (result != (uint *)0x0) {\n      *result = dividend;\n      result[1] = divisor;\n      return 0;\n    }\n    temp4 = 0;\n    temp3 = 0;\n  }\n  else {\n    shift_count = LZCOUNT(remainder);\n    if (shift_count != 0) {\n      temp8 = 0x20 - shift_count;\n      temp3 = quotient >> (temp8 & 0xff) | remainder << shift_count;\n      temp9 = temp3 >> 0x10;\n      temp4 = divisor >> (temp8 & 0xff);\n      temp2 = dividend >> (temp8 & 0xff) | divisor << shift_count;\n      temp7 = temp4 / temp9;\n      temp6 = temp2 >> 0x10 | (temp4 - temp9 * temp7) * 0x10000;\n      temp5 = temp7 * (temp3 & 0xffff);\n      dividend = dividend << shift_count;\n      temp4 = temp7;\n      if (temp6 <= temp5 && temp5 - temp6 != 0) {\n        carry = CARRY4(temp6,temp3);\n        temp6 = temp6 + temp3;\n        temp4 = temp7 - 1;\n        if ((carry == false) && (temp6 <= temp5 && temp5 - temp6 != 0)) {\n          temp4 = temp7 - 2;\n          temp6 = temp6 + temp3;\n        }\n      }\n      temp7 = (temp6 - temp5) / temp9;\n      temp6 = temp2 & 0xffff | ((temp6 - temp5) - temp9 * temp7) * 0x10000;\n      temp9 = temp7 * (temp3 & 0xffff);\n      temp5 = temp7;\n      if (temp6 <= temp9 && temp9 - temp6 != 0) {\n        carry = CARRY4(temp6,temp3);\n        temp6 = temp6 + temp3;\n        temp5 = temp7 - 1;\n        if ((carry == false) && (temp6 <= temp9 && temp9 - temp6 != 0)) {\n          temp5 = temp7 - 2;\n          temp6 = temp6 + temp3;\n        }\n      }\n      temp5 = temp5 | temp4 << 0x10;\n      temp1 = (ulonglong)temp5 * (ulonglong)(quotient << shift_count);\n      if (CONCAT44(temp6 - temp9,dividend) < temp1) {\n        temp1 = temp1 - CONCAT44(temp3,quotient << shift_count);\n        temp5 = temp5 - 1;\n      }\n      if (result != (uint *)0x0) {\n        temp4 = ((temp6 - temp9) - (int)(temp1 >> 0x20)) - (uint)(dividend < (uint)temp1);\n        *result = temp4 << (temp8 & 0xff) | dividend - (uint)temp1 >> shift_count;\n        result[1] = temp4 >> shift_count;\n      }\n      return (ulonglong)temp5;\n    }\n    if ((remainder < divisor) || (quotient <= dividend)) {\n      carry = dividend < quotient;\n      dividend = dividend - quotient;\n      divisor = (divisor - remainder) - (uint)carry;\n      temp4 = 1;\n    }\n    else {\n      temp4 = 0;\n    }\n    temp3 = 0;\n    if (result != (uint *)0x0) {\n      *result = dividend;\n      result[1] = divisor;\n      return (ulonglong)temp4;\n    }\n  }\n  return CONCAT44(temp3,temp4);\n}\n\n",
            "renaming": {
                "FUN_08000300": "improved_division_algorithm_08000300",
                "param_1": "dividend",
                "param_2": "divisor",
                "param_3": "quotient",
                "param_4": "remainder",
                "param_5": "result",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "uVar3": "temp3",
                "uVar4": "temp4",
                "uVar5": "temp5",
                "uVar6": "temp6",
                "uVar7": "temp7",
                "uVar8": "temp8",
                "uVar9": "temp9",
                "iVar10": "shift_count",
                "bVar11": "carry"
            },
            "calling": [
                "FUN_080002d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080005e0": {
            "entrypoint": "0x080005e0",
            "current_name": "interrupt_system_call_080005e0",
            "code": "\nvoid interruptSystemCall_080005e0(void)\n\n{\n  software_interrupt(0x3f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080005e0": "interrupt_system_call_080005e0"
            },
            "calling": [
                "FUN_080005e4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080005e4": {
            "entrypoint": "0x080005e4",
            "current_name": "process_data_080005e4",
            "code": "\nundefined4 process_data_080005e4(undefined4 input,undefined4 output,undefined4 unused1,undefined4 unused2)\n\n{\n  undefined4 result;\n  \n  if (DAT_20000120 != 0) {\n    return 0;\n  }\n  result = FUN_080005e0(1,input,0,0,unused2);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080005e4": "process_data_080005e4",
                "param_1": "input",
                "param_2": "output",
                "param_3": "unused1",
                "param_4": "unused2",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08000c4c"
            ],
            "called": [
                "FUN_080005e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000600": {
            "entrypoint": "0x08000600",
            "current_name": "initialize_data_08000600",
            "code": "\nvoid initializeData_08000600(int **dataPointer,undefined4 param)\n\n{\n  char character;\n  int returnValue;\n  \n  character = *(char *)((int)dataPointer + 5);\n  if (character == '\\x02') {\n    *dataPointer = &DAT_20000338;\n  }\n  else if (character == '\\x03') {\n    *dataPointer = &DAT_20000338;\n  }\n  else if (character == '\\x01') {\n    *dataPointer = &DAT_20000338;\n  }\n  else {\n    *dataPointer = &DAT_20000338;\n  }\n  FUN_08004388(*dataPointer,param,6);\n  if (1 < *(byte *)((int)dataPointer + 6)) {\n    FUN_08004110(*(byte *)((int)dataPointer + 6),1);\n    FUN_080041bc(*(undefined *)((int)dataPointer + 6),0);\n  }\n  do {\n    returnValue = (**(code **)(**dataPointer + 0xc))();\n  } while (-1 < returnValue);\n  *(undefined *)((int)dataPointer + 0x49) = 0;\n  *(undefined *)((int)dataPointer + 0x4a) = 0;\n  *(undefined2 *)(dataPointer + 0x15) = 0;\n  *(undefined2 *)((int)dataPointer + 0x52) = 0;\n  *(undefined2 *)(dataPointer + 0x14) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000600": "initialize_data_08000600",
                "param_1": "dataPointer",
                "param_2": "param",
                "cVar1": "character",
                "iVar2": "returnValue"
            },
            "calling": [
                "FUN_08000c4c"
            ],
            "called": [
                "FUN_08004388",
                "FUN_08004110",
                "FUN_080041bc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800066c": {
            "entrypoint": "0x0800066c",
            "current_name": "initialize_data_0800066c",
            "code": "\nvoid initializeData_0800066c(int dataOffset,undefined value1,int value2,undefined value3)\n\n{\n  *(undefined *)(dataOffset + 4) = value1;\n  if (3 < value2) {\n    value2 = 0;\n  }\n  *(char *)(dataOffset + 5) = (char)value2;\n  *(undefined *)(dataOffset + 6) = value3;\n  *(undefined2 *)(dataOffset + 0x56) = 1000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800066c": "initialize_data_0800066c",
                "param_1": "dataOffset",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3"
            },
            "calling": [
                "FUN_08000682"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000682": {
            "entrypoint": "0x08000682",
            "current_name": "initialize_08000682",
            "code": "\nundefined4 initialize_08000682(undefined4 input_param)\n\n{\n  FUN_0800066c();\n  return input_param;\n}\n\n",
            "renaming": {
                "FUN_08000682": "initialize_08000682",
                "param_1": "input_param"
            },
            "calling": [
                "FUN_08000690"
            ],
            "called": [
                "FUN_0800066c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000690": {
            "entrypoint": "0x08000690",
            "current_name": "handle_param_08000690",
            "code": "\nvoid handle_param_08000690(int value_check,int special_value,undefined4 unused_param,undefined4 parameter)\n\n{\n  if (value_check != 1) {\n    return;\n  }\n  if (special_value == 0xffff) {\n    FUN_08000682(&DAT_20000124,1,0,0,parameter);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000690": "handle_param_08000690",
                "param_1": "value_check",
                "param_2": "special_value",
                "param_3": "unused_param",
                "param_4": "parameter"
            },
            "calling": [],
            "called": [
                "FUN_08000682"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080006b4": {
            "entrypoint": "0x080006b4",
            "current_name": "process_data_080006b4",
            "code": "\nint process_data_080006b4(int **data)\n\n{\n  bool isOverflow;\n  undefined byteValue;\n  int result;\n  byte currentByte;\n  \n  if (1 < *(byte *)((int)data + 6)) {\n    FUN_080041bc(*(byte *)((int)data + 6),0);\n  }\n  *(undefined *)((int)data + 0x49) = 0;\n  if (*(byte *)((int)data + 5) < 4) {\n    isOverflow = false;\n    while (result = (**(code **)(**data + 8))(), result != 0) {\n      currentByte = *(byte *)((int)data + 0x49);\n      byteValue = (**(code **)(**data + 0xc))();\n      *(undefined *)((int)data + currentByte + 9) = byteValue;\n      currentByte = *(char *)((int)data + 0x49) + 1;\n      *(byte *)((int)data + 0x49) = currentByte;\n      if (0x3f < currentByte) {\n        isOverflow = true;\n      }\n    }\n  }\n  else {\n    isOverflow = false;\n  }\n  *(short *)(data + 0x14) = *(short *)(data + 0x14) + 1;\n  if (isOverflow) {\n    *(short *)(data + 0x15) = *(short *)(data + 0x15) + 1;\n    return -3;\n  }\n  return (int)*(char *)((int)data + 0x49);\n}\n\n",
            "renaming": {
                "FUN_080006b4": "process_data_080006b4",
                "param_1": "data",
                "bVar1": "isOverflow",
                "uVar2": "byteValue",
                "iVar3": "result",
                "bVar4": "currentByte"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_080041bc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000728": {
            "entrypoint": "0x08000728",
            "current_name": "calculate_crc_08000728",
            "code": "\nuint calculate_CRC_08000728(int data_address,int data_length)\n\n{\n  byte bit_counter;\n  uint crc_value;\n  uint lsb;\n  uint i;\n  \n  crc_value = 0xffff;\n  for (i = 0; (int)i < data_length; i = i + 1 & 0xff) {\n    crc_value = crc_value ^ *(byte *)(data_address + i + 9);\n    for (bit_counter = 1; bit_counter < 9; bit_counter = bit_counter + 1) {\n      lsb = crc_value & 1;\n      crc_value = crc_value >> 1;\n      if (lsb != 0) {\n        crc_value = crc_value ^ 0xa001;\n      }\n    }\n  }\n  return (crc_value & 0xff) << 8 | crc_value >> 8;\n}\n\n",
            "renaming": {
                "FUN_08000728": "calculate_crc_08000728",
                "param_1": "data_address",
                "param_2": "data_length",
                "bVar1": "bit_counter",
                "uVar2": "crc_value",
                "uVar3": "lsb",
                "uVar4": "i"
            },
            "calling": [
                "FUN_0800076c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800076c": {
            "entrypoint": "0x0800076c",
            "current_name": "update_data_0800076c",
            "code": "\nvoid updateData_0800076c(int **data,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined2 result1;\n  int iteration;\n  uint index;\n  \n  index = (uint)*(byte *)((int)data + 0x49);\n  result1 = FUN_08000728(data,index,param3,param4,param4);\n  *(char *)((int)data + index + 9) = (char)((ushort)result1 >> 8);\n  index = index + 1 & 0xff;\n  *(char *)((int)data + index + 9) = (char)result1;\n  *(char *)((int)data + 0x49) = (char)index + '\\x01';\n  if (1 < *(byte *)((int)data + 6)) {\n    FUN_080041bc(*(byte *)((int)data + 6),1);\n  }\n  if (*(byte *)((int)data + 5) < 4) {\n    (**(code **)(**data + 4))(*data,(int)data + 9,*(undefined *)((int)data + 0x49));\n  }\n  if (1 < *(byte *)((int)data + 6)) {\n    FUN_080041bc(*(byte *)((int)data + 6),0);\n  }\n  if (*(byte *)((int)data + 5) < 4) {\n    do {\n      iteration = (**(code **)(**data + 0xc))();\n    } while (-1 < iteration);\n  }\n  *(undefined *)((int)data + 0x49) = 0;\n  iteration = FUN_08004204();\n  data[0x17] = (int *)(iteration + (uint)*(ushort *)((int)data + 0x56));\n  *(short *)((int)data + 0x52) = *(short *)((int)data + 0x52) + 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800076c": "update_data_0800076c",
                "param_1": "data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "result1",
                "iVar2": "iteration",
                "uVar3": "index"
            },
            "calling": [
                "FUN_08000a4e",
                "FUN_080008e2",
                "FUN_08000b04",
                "FUN_08000998",
                "FUN_08000b54",
                "FUN_08000a7a",
                "FUN_08000a00"
            ],
            "called": [
                "FUN_080041bc",
                "FUN_08004204",
                "FUN_08000728"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080007f0": {
            "entrypoint": "0x080007f0",
            "current_name": "check_conditions_080007f0",
            "code": "\nundefined4 check_conditions_080007f0(int data_address,undefined4 param2,uint param3,undefined4 param4)\n\n{\n  bool is_matched;\n  byte byte_value;\n  char char_value_1;\n  char char_value_2;\n  int result_1;\n  uint loop_count;\n  int result_2;\n  \n  loop_count = 0;\n  do {\n    if (7 < loop_count) {\n      is_matched = false;\nLAB_0800080a:\n      if (!is_matched) {\n        *(short *)(data_address + 0x54) = *(short *)(data_address + 0x54) + 1;\n        return 1;\n      }\n      result_2 = *(byte *)(data_address + 10) - 1;\n      switch(*(byte *)(data_address + 10)) {\n      case 1:\n      case 2:\n      case 0xf:\n        goto switchD_08000816_caseD_1;\n      case 3:\n      case 4:\n      case 0x10:\n        char_value_1 = FUN_08004640(*(undefined *)(data_address + 0xb),*(undefined *)(data_address + 0xc),param3,\n                             result_2,param4);\n        char_value_2 = FUN_08004640(*(undefined *)(data_address + 0xd),*(undefined *)(data_address + 0xe));\n        if (*(byte *)(data_address + 0x60) < (byte)(char_value_2 + char_value_1)) {\n          return 2;\n        }\n        return 0;\n      case 5:\n        result_2 = FUN_08004640(*(undefined *)(data_address + 0xb),*(undefined *)(data_address + 0xc),param3,\n                             result_2,param4);\n        if ((uint)*(byte *)(data_address + 0x60) < (uint)(result_2 << 0x14) >> 0x18) {\n          return 2;\n        }\n        return 0;\n      case 6:\n        byte_value = FUN_08004640(*(undefined *)(data_address + 0xb),*(undefined *)(data_address + 0xc),param3,\n                             result_2,param4);\n        if (*(byte *)(data_address + 0x60) < byte_value) {\n          return 2;\n        }\n        return 0;\n      default:\n        return 0;\n      }\n    }\n    param3 = (uint)*(byte *)(data_address + 10);\n    if ((byte)(&DAT_08005a10)[loop_count] == param3) {\n      is_matched = true;\n      goto LAB_0800080a;\n    }\n    loop_count = loop_count + 1 & 0xff;\n  } while( true );\nswitchD_08000816_caseD_1:\n  result_2 = FUN_08004640(*(undefined *)(data_address + 0xb),*(undefined *)(data_address + 0xc),param3,result_2,\n                       param4);\n  result_1 = FUN_08004640(*(undefined *)(data_address + 0xd),*(undefined *)(data_address + 0xe));\n  if ((uint)*(byte *)(data_address + 0x60) <\n      (((uint)(result_2 << 0xc) >> 0x10) + ((uint)(result_1 << 0xc) >> 0x10) & 0xff)) {\n    return 2;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080007f0": "check_conditions_080007f0",
                "param_1": "data_address",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "bVar1": "is_matched",
                "bVar2": "byte_value",
                "cVar3": "char_value_1",
                "cVar4": "char_value_2",
                "iVar5": "result_1",
                "uVar6": "loop_count",
                "iVar7": "result_2"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080008cc": {
            "entrypoint": "0x080008cc",
            "current_name": "copy_and_modify_data_080008cc",
            "code": "\nvoid copyAndModifyData_080008cc(int dataAddress,undefined newData)\n\n{\n  *(undefined *)(dataAddress + 9) = *(undefined *)(dataAddress + 4);\n  *(byte *)(dataAddress + 10) = *(byte *)(dataAddress + 10) ^ 0x80;\n  *(undefined *)(dataAddress + 0xb) = newData;\n  *(undefined *)(dataAddress + 0x49) = 3;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080008cc": "copy_and_modify_data_080008cc",
                "param_1": "dataAddress",
                "param_2": "newData"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080008e2": {
            "entrypoint": "0x080008e2",
            "current_name": "process_data_080008e2",
            "code": "\nint processData_080008e2(int dataPointer,int arrayPointer,undefined4 param3,undefined4 param4)\n\n{\n  int result1;\n  uint result2;\n  uint iterator;\n  uint bitIndex;\n  char bitValue;\n  int tempVar;\n  \n  result1 = FUN_08004640(*(undefined *)(dataPointer + 0xb),*(undefined *)(dataPointer + 0xc),param3,param4,\n                       param4);\n  result2 = FUN_08004640(*(undefined *)(dataPointer + 0xd),*(undefined *)(dataPointer + 0xe));\n  bitValue = (char)((result2 << 0x15) >> 0x18);\n  if ((result2 & 7) != 0) {\n    bitValue = bitValue + '\\x01';\n  }\n  *(char *)(dataPointer + 0xb) = bitValue;\n  *(undefined *)(dataPointer + 0x49) = 3;\n  bitIndex = 0;\n  for (iterator = 0; (int)iterator < (int)result2; iterator = iterator + 1 & 0xffff) {\n    if (((int)(uint)*(ushort *)(arrayPointer + ((iterator + result1) * 0x100000 >> 0x18) * 2) >>\n         (iterator + result1 & 0xf) & 1U) == 0) {\n      tempVar = (uint)*(byte *)(dataPointer + 0x49) + dataPointer;\n      *(byte *)(tempVar + 9) = *(byte *)(tempVar + 9) & ~(byte)(1 << bitIndex);\n    }\n    else {\n      tempVar = (uint)*(byte *)(dataPointer + 0x49) + dataPointer;\n      *(byte *)(tempVar + 9) = *(byte *)(tempVar + 9) | (byte)(1 << bitIndex);\n    }\n    bitIndex = bitIndex + 1 & 0xff;\n    if (7 < bitIndex) {\n      *(char *)(dataPointer + 0x49) = *(char *)(dataPointer + 0x49) + '\\x01';\n      bitIndex = 0;\n    }\n  }\n  if ((result2 & 7) != 0) {\n    *(char *)(dataPointer + 0x49) = *(char *)(dataPointer + 0x49) + '\\x01';\n  }\n  bitValue = *(char *)(dataPointer + 0x49);\n  FUN_0800076c(dataPointer);\n  return (int)(char)(bitValue + '\\x02');\n}\n\n",
            "renaming": {
                "FUN_080008e2": "process_data_080008e2",
                "param_1": "dataPointer",
                "param_2": "arrayPointer",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "result1",
                "uVar2": "result2",
                "uVar3": "iterator",
                "uVar4": "bitIndex",
                "cVar5": "bitValue",
                "iVar6": "tempVar"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800076c",
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000998": {
            "entrypoint": "0x08000998",
            "current_name": "extract_data_from_binary_08000998",
            "code": "\nint extract_data_from_binary_08000998(int binary_data_address,int input_data_address,undefined4 param_3,undefined4 param_4)\n\n{\n  byte byte_value_1;\n  char char_value;\n  byte result_1;\n  byte result_2;\n  uint loop_counter;\n  uint temp_counter;\n  \n  result_1 = FUN_08004640(*(undefined *)(binary_data_address + 0xb),*(undefined *)(binary_data_address + 0xc),param_3,param_4,\n                       param_4);\n  result_2 = FUN_08004640(*(undefined *)(binary_data_address + 0xd),*(undefined *)(binary_data_address + 0xe));\n  *(byte *)(binary_data_address + 0xb) = result_2 << 1;\n  *(undefined *)(binary_data_address + 0x49) = 3;\n  for (loop_counter = result_1_as_uint; loop_counter < result_1_as_uint + (uint)result_2; loop_counter = loop_counter + 1 & 0xff) {\n    byte_value_1 = *(byte *)(binary_data_address + 0x49);\n    *(char *)(binary_data_address + (uint)byte_value_1 + 9) = (char)((ushort)*(undefined2 *)(input_data_address + loop_counter * 2) >> 8)\n    ;\n    temp_counter = byte_value_1 + 1 & 0xff;\n    char_value = (char)temp_counter;\n    *(char *)(binary_data_address + 0x49) = char_value;\n    *(undefined *)(binary_data_address + temp_counter + 9) = *(undefined *)(input_data_address + loop_counter * 2);\n    *(char *)(binary_data_address + 0x49) = char_value + '\\x01';\n  }\n  char_value = *(char *)(binary_data_address + 0x49);\n  FUN_0800076c(binary_data_address);\n  return (int)(char)(char_value + '\\x02');\n}\n\n",
            "renaming": {
                "FUN_08000998": "extract_data_from_binary_08000998",
                "param_1": "binary_data_address",
                "param_2": "input_data_address",
                "bVar1": "byte_value_1",
                "cVar2": "char_value",
                "bVar3": "result_1",
                "bVar4": "result_2",
                "uVar5": "loop_counter",
                "uVar6": "temp_counter",
                "(uint)bVar3": "result_1_as_uint"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800076c",
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a00": {
            "entrypoint": "0x08000a00",
            "current_name": "update_data_08000a00",
            "code": "\nundefined4 updateData_08000a00(int dataPointer,int outputPointer,undefined4 param1,undefined4 param2)\n\n{\n  uint result;\n  uint shiftedResult;\n  \n  result = FUN_08004640(*(undefined *)(dataPointer + 0xb),*(undefined *)(dataPointer + 0xc),param1,param2,\n                       param2);\n  shiftedResult = (result << 0x14) >> 0x18;\n  if (*(char *)(dataPointer + 0xd) == -1) {\n    *(ushort *)(outputPointer + shiftedResult * 2) =\n         (ushort)(1 << (result & 0xf)) | *(ushort *)(outputPointer + shiftedResult * 2);\n  }\n  else {\n    *(ushort *)(outputPointer + shiftedResult * 2) =\n         *(ushort *)(outputPointer + shiftedResult * 2) & ~(ushort)(1 << (result & 0xf));\n  }\n  *(undefined *)(dataPointer + 0x49) = 6;\n  FUN_0800076c(dataPointer);\n  return 8;\n}\n\n",
            "renaming": {
                "FUN_08000a00": "update_data_08000a00",
                "param_1": "dataPointer",
                "param_2": "outputPointer",
                "param_3": "param1",
                "param_4": "param2",
                "uVar1": "result",
                "uVar2": "shiftedResult"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800076c",
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a4e": {
            "entrypoint": "0x08000a4e",
            "current_name": "update_and_return_08000a4e",
            "code": "\nundefined4 updateAndReturn_08000a4e(int input_address,int output_address)\n\n{\n  byte result_byte;\n  undefined2 result_value;\n  \n  result_byte = FUN_08004640(*(undefined *)(input_address + 0xb),*(undefined *)(input_address + 0xc));\n  result_value = FUN_08004640(*(undefined *)(input_address + 0xd),*(undefined *)(input_address + 0xe));\n  *(undefined2 *)(output_address + (uint)result_byte * 2) = result_value;\n  *(undefined *)(input_address + 0x49) = 6;\n  FUN_0800076c(input_address);\n  return 8;\n}\n\n",
            "renaming": {
                "FUN_08000a4e": "update_and_return_08000a4e",
                "param_1": "input_address",
                "param_2": "output_address",
                "bVar1": "result_byte",
                "uVar2": "result_value"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800076c",
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a7a": {
            "entrypoint": "0x08000a7a",
            "current_name": "update_bits_08000a7a",
            "code": "\nundefined4 updateBits_08000a7a(int dataPtr,int resultPtr,undefined4 paramA,undefined4 paramB)\n\n{\n  int func1Result;\n  int func2Result;\n  uint iterator;\n  uint bitIterator;\n  uint bitIndex;\n  uint byteIndex;\n  uint byteIterator;\n  \n  func1Result = FUN_08004640(*(undefined *)(dataPtr + 0xb),*(undefined *)(dataPtr + 0xc),paramA,paramB,\n                       paramB);\n  func2Result = FUN_08004640(*(undefined *)(dataPtr + 0xd),*(undefined *)(dataPtr + 0xe));\n  bitIterator = 0;\n  byteIterator = 7;\n  for (iterator = 0; (int)iterator < func2Result; iterator = iterator + 1 & 0xffff) {\n    byteIndex = (iterator + func1Result) * 0x100000 >> 0x18;\n    bitIndex = iterator + func1Result & 0xf;\n    if (((int)(uint)*(byte *)(dataPtr + byteIterator + 9) >> bitIterator & 1U) == 0) {\n      *(ushort *)(resultPtr + byteIndex * 2) = *(ushort *)(resultPtr + byteIndex * 2) & ~(ushort)(1 << bitIndex);\n    }\n    else {\n      *(ushort *)(resultPtr + byteIndex * 2) = (ushort)(1 << bitIndex) | *(ushort *)(resultPtr + byteIndex * 2);\n    }\n    bitIterator = bitIterator + 1 & 0xff;\n    if (7 < bitIterator) {\n      byteIterator = byteIterator + 1 & 0xff;\n      bitIterator = 0;\n    }\n  }\n  *(undefined *)(dataPtr + 0x49) = 6;\n  FUN_0800076c(dataPtr);\n  return 8;\n}\n\n",
            "renaming": {
                "FUN_08000a7a": "update_bits_08000a7a",
                "param_1": "dataPtr",
                "param_2": "resultPtr",
                "param_3": "paramA",
                "param_4": "paramB",
                "iVar1": "func1Result",
                "iVar2": "func2Result",
                "uVar3": "iterator",
                "uVar4": "bitIterator",
                "uVar5": "bitIndex",
                "uVar6": "byteIndex",
                "uVar7": "byteIterator"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800076c",
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000b04": {
            "entrypoint": "0x08000b04",
            "current_name": "process_data_08000b04",
            "code": "\nint process_data_08000b04(int data_ptr,int output_ptr)\n\n{\n  byte byte1;\n  byte byte2;\n  char char_var;\n  undefined2 result;\n  uint counter;\n  \n  byte1 = *(byte *)(data_ptr + 0xc);\n  byte2 = *(byte *)(data_ptr + 0xe);\n  *(undefined *)(data_ptr + 0xd) = 0;\n  *(byte *)(data_ptr + 0xe) = byte2;\n  *(undefined *)(data_ptr + 0x49) = 6;\n  for (counter = 0; counter < byte2; counter = counter + 1 & 0xff) {\n    result = FUN_08004640(*(undefined *)(counter * 2 + data_ptr + 0x10),\n                         *(undefined *)(data_ptr + (counter + 4) * 2 + 9));\n    *(undefined2 *)(output_ptr + (byte1 + counter) * 2) = result;\n  }\n  char_var = *(char *)(data_ptr + 0x49);\n  FUN_0800076c(data_ptr);\n  return (int)(char)(char_var + '\\x02');\n}\n\n",
            "renaming": {
                "FUN_08000b04": "process_data_08000b04",
                "param_1": "data_ptr",
                "param_2": "output_ptr",
                "bVar1": "byte1",
                "bVar2": "byte2",
                "cVar3": "char_var",
                "uVar4": "result",
                "uVar5": "counter"
            },
            "calling": [
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800076c",
                "FUN_08004640"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000b54": {
            "entrypoint": "0x08000b54",
            "current_name": "update_function_08000b54",
            "code": "\nint updateFunction_08000b54(int **paramArray,int *inputParam,undefined4 paramValue)\n\n{\n  byte resultByte;\n  int tempVar1;\n  uint resultUint;\n  int returnValue;\n  \n  paramArray[0x13] = inputParam;\n  *(char *)(paramArray + 0x18) = (char)paramValue;\n  if (*(byte *)((int)paramArray + 5) < 4) {\n    resultByte = (**(code **)(**paramArray + 8))();\n    resultUint = (uint)resultByte;\n  }\n  if (resultUint == 0) {\n    returnValue = 0;\n  }\n  else if ((int)resultUint < 8) {\n    returnValue = 0;\n  }\n  else {\n    returnValue = FUN_080006b4(paramArray);\n    *(char *)(paramArray + 2) = (char)returnValue;\n    if (*(char *)((int)paramArray + 9) == *(char *)(paramArray + 1)) {\n      tempVar1 = FUN_080007f0(paramArray);\n      if (tempVar1 < 1) {\n        tempVar1 = FUN_08004204();\n        paramArray[0x17] = (int *)((uint)*(ushort *)((int)paramArray + 0x56) + tempVar1);\n        *(undefined *)(paramArray + 2) = 0;\n        switch(*(undefined *)((int)paramArray + 10)) {\n        case 1:\n        case 2:\n          returnValue = FUN_080008e2(paramArray,inputParam,paramValue);\n          break;\n        case 3:\n        case 4:\n          returnValue = FUN_08000998(paramArray,inputParam,paramValue);\n          break;\n        case 5:\n          returnValue = FUN_08000a00(paramArray,inputParam,paramValue);\n          break;\n        case 6:\n          returnValue = FUN_08000a4e(paramArray,inputParam,paramValue);\n          break;\n        case 0xf:\n          returnValue = FUN_08000a7a(paramArray,inputParam,paramValue);\n          break;\n        case 0x10:\n          returnValue = FUN_08000b04(paramArray,inputParam,paramValue);\n        }\n      }\n      else {\n        if (tempVar1 != 0xff) {\n          FUN_080008cc(paramArray,tempVar1);\n          FUN_0800076c(paramArray);\n        }\n        *(char *)(paramArray + 2) = (char)tempVar1;\n        returnValue = (int)(char)tempVar1;\n      }\n    }\n    else {\n      returnValue = 0;\n    }\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08000b54": "update_function_08000b54",
                "param_1": "paramArray",
                "param_2": "inputParam",
                "param_3": "paramValue",
                "bVar1": "resultByte",
                "iVar2": "tempVar1",
                "unaff_r5": "resultUint",
                "iVar3": "returnValue"
            },
            "calling": [
                "FUN_08000c64"
            ],
            "called": [
                "FUN_08000a4e",
                "FUN_0800076c",
                "FUN_080008e2",
                "FUN_080008cc",
                "FUN_08000b04",
                "FUN_08000998",
                "FUN_08004204",
                "FUN_080007f0",
                "FUN_080006b4",
                "FUN_08000a7a",
                "FUN_08000a00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000c4c": {
            "entrypoint": "0x08000c4c",
            "current_name": "initialize_program_08000c4c",
            "code": "\nvoid initializeProgram_08000c4c(void)\n\n{\n  FUN_080005e4(0);\n  FUN_08000600(&DAT_20000124,0x4b00);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000c4c": "initialize_program_08000c4c"
            },
            "calling": [
                "FUN_08004658"
            ],
            "called": [
                "FUN_08000600",
                "FUN_080005e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000c64": {
            "entrypoint": "0x08000c64",
            "current_name": "initialize_data_08000c64",
            "code": "\nvoid initializeData_08000c64(void)\n\n{\n  undefined4 inputValue;\n  \n  FUN_08000b54(&DAT_20000124,&DAT_20000004,0x10,inputValue,inputValue);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000c64": "initialize_data_08000c64",
                "in_r3": "inputValue"
            },
            "calling": [
                "FUN_08004658"
            ],
            "called": [
                "FUN_08000b54"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000c8c": {
            "entrypoint": "0x08000c8c",
            "current_name": "initialize_system_08000c8c",
            "code": "\n\n\nvoid initializeSystem_08000c8c(void)\n\n{\n  uint uVar1;\n  undefined4 flag;\n  undefined4 value1;\n  undefined4 count1;\n  undefined4 value2;\n  undefined4 count2;\n  undefined4 value3;\n  undefined4 count3;\n  undefined4 value4;\n  undefined4 count4;\n  undefined4 value5;\n  undefined4 count5;\n  undefined4 value6;\n  undefined4 value7;\n  \n  _DAT_40023840 = _DAT_40023840 | 0x10000000;\n  _DAT_40007000 = _DAT_40007000 | 0xc000;\n  flag = 1;\n  value1 = 0x50000;\n  count1 = 2;\n  value2 = 0x400000;\n  count2 = 8;\n  value3 = 0x150;\n  count3 = 2;\n  value4 = 7;\n  FUN_0800201c(&flag);\n  FUN_08001f9c();\n  count4 = 0xf;\n  value5 = 2;\n  count5 = 0;\n  value6 = 0x1400;\n  value7 = 0x1000;\n  FUN_08002488(&count4,5);\n  uVar1 = FUN_080025e0();\n  FUN_08000ee0(uVar1 / 1000);\n  FUN_08000f2c(4);\n  FUN_08000e60(0xffffffff,0,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000c8c": "initialize_system_08000c8c",
                "local_54": "flag",
                "local_50": "value1",
                "local_3c": "count1",
                "local_38": "value2",
                "local_34": "count2",
                "local_30": "value3",
                "local_2c": "count3",
                "local_28": "value4",
                "local_24": "count4",
                "local_20": "value5",
                "local_1c": "count5",
                "local_18": "value6",
                "local_14": "value7"
            },
            "calling": [
                "FUN_080034ce"
            ],
            "called": [
                "FUN_08000f2c",
                "FUN_08000ee0",
                "FUN_080025e0",
                "FUN_08000e60",
                "FUN_08002488",
                "FUN_0800201c",
                "FUN_08001f9c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "entry": {
            "entrypoint": "0x08000d3c",
            "current_name": "entry",
            "code": "\n/* WARNING: This function may have set the stack pointer */\n\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined4 *)(iVar1 + 0x20000000) < &DAT_20000104; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x8006034);\n  }\n  for (puVar2 = &DAT_20000104; puVar2 < &DAT_20000678; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  FUN_080035bc();\n  FUN_08004884();\n  UNRECOVERED_JUMPTABLE = (code *)0x8000d72;\n  FUN_08004658();\n                    /* WARNING: Could not recover jumptable at 0x08000d72. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "renaming": {},
            "calling": [],
            "called": [
                "FUN_080035bc",
                "FUN_08004658",
                "FUN_08004884"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000d8e": {
            "entrypoint": "0x08000d8e",
            "current_name": "initialize_system_08000d8e",
            "code": "\nvoid initialize_system_08000d8e(void)\n\n{\n  FUN_080034ce();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000d8e": "initialize_system_08000d8e"
            },
            "calling": [
                "FUN_08004648"
            ],
            "called": [
                "FUN_080034ce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000d96": {
            "entrypoint": "0x08000d96",
            "current_name": "FUNC_08000d96",
            "code": "\nvoid FUNC_08000d96(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000d96": "FUNC_08000d96"
            },
            "calling": [
                "FUN_08000de4"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08000d98": {
            "entrypoint": "0x08000d98",
            "current_name": "validate_and_update_param_08000d98",
            "code": "\nundefined4 validateAndUpdateParam_08000d98(uint inputParam)\n\n{\n  int result;\n  \n  result = FUN_08000ee0(DAT_2000002c / (1000 / DAT_20000024));\n  if (result != 0) {\n    return 1;\n  }\n  if (0xf < inputParam) {\n    return 1;\n  }\n  FUN_08000e60(0xffffffff,inputParam,0);\n  DAT_20000028 = inputParam;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08000d98": "validate_and_update_param_08000d98",
                "param_1": "inputParam",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08002488",
                "FUN_08000de4"
            ],
            "called": [
                "FUN_08000ee0",
                "FUN_08000e60"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000de4": {
            "entrypoint": "0x08000de4",
            "current_name": "initialize_device_08000de4",
            "code": "\n\n\nundefined4 initializeDevice_08000de4(void)\n\n{\n  _DAT_40023c00 = _DAT_40023c00 | 0x700;\n  FUN_08000e3c(3);\n  FUN_08000d98(0xf);\n  FUNC_08000d96();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08000de4": "initialize_device_08000de4"
            },
            "calling": [
                "FUN_080034ce"
            ],
            "called": [
                "FUN_08000d98",
                "FUN_08000e3c",
                "FUN_08000d96"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000e18": {
            "entrypoint": "0x08000e18",
            "current_name": "update_data_08000e18",
            "code": "\nvoid updateData_08000e18(void)\n\n{\n  DAT_20000670 = (uint)DAT_20000024 + DAT_20000670;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000e18": "update_data_08000e18"
            },
            "calling": [
                "FUN_08003476"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000e30": {
            "entrypoint": "0x08000e30",
            "current_name": "get_global_data_08000e30",
            "code": "\nundefined4 get_global_data_08000e30(void)\n\n{\n  return DAT_20000670;\n}\n\n",
            "renaming": {
                "FUN_08000e30": "get_global_data_08000e30"
            },
            "calling": [
                "FUN_0800346c",
                "FUN_08003d18",
                "FUN_08002488",
                "FUN_0800201c",
                "FUN_08001f9c",
                "FUN_08002dd0",
                "FUN_08002d0c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000e3c": {
            "entrypoint": "0x08000e3c",
            "current_name": "update_register_value_08000e3c",
            "code": "\n\n\nvoid updateRegisterValue_08000e3c(uint inputValue)\n\n{\n  _DAT_e000ed0c = (inputValue & 7) << 8 | _DAT_e000ed0c & 0xf8ff | 0x5fa0000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000e3c": "update_register_value_08000e3c",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08004648",
                "FUN_08000de4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000e60": {
            "entrypoint": "0x08000e60",
            "current_name": "update_display_08000e60",
            "code": "\n\n\nvoid updateDisplay_08000e60(uint displayIndex,uint bitMask,uint newValue)\n\n{\n  uint shiftAmount;\n  uint shiftedBitCount;\n  \n  shiftAmount = (uint)(_DAT_e000ed0c << 0x15) >> 0x1d;\n  shiftedBitCount = 7 - shiftAmount;\n  if (3 < shiftedBitCount) {\n    shiftedBitCount = 4;\n  }\n  if (shiftAmount + 4 < 7) {\n    shiftAmount = 0;\n  }\n  else {\n    shiftAmount = shiftAmount - 3;\n  }\n  shiftAmount = (bitMask & (1 << (shiftedBitCount & 0xff)) - 1U) << (shiftAmount & 0xff) |\n          (1 << (shiftAmount & 0xff)) - 1U & newValue;\n  if ((int)displayIndex < 0) {\n    *(char *)((displayIndex & 0xf) + 0xe000ed14) = (char)(shiftAmount << 4);\n  }\n  else {\n    *(char *)(displayIndex + 0xe000e400) = (char)(shiftAmount << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000e60": "update_display_08000e60",
                "param_1": "displayIndex",
                "param_2": "bitMask",
                "param_3": "newValue",
                "uVar1": "shiftAmount",
                "uVar2": "shiftedBitCount"
            },
            "calling": [
                "FUN_08000d98",
                "FUN_08000c8c",
                "FUN_08003e54",
                "FUN_08003eac"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000ec4": {
            "entrypoint": "0x08000ec4",
            "current_name": "set_bit_in_array_08000ec4",
            "code": "\nvoid setBitInArray_08000ec4(uint index)\n\n{\n  if (-1 < (int)index) {\n    *(int *)((index >> 5) * 4 + -0x1fff1f00) = 1 << (index & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000ec4": "set_bit_in_array_08000ec4",
                "param_1": "index"
            },
            "calling": [
                "FUN_08003e54",
                "FUN_08003eac"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000ee0": {
            "entrypoint": "0x08000ee0",
            "current_name": "initialize_data_08000ee0",
            "code": "\n\n\nundefined4 initializeData_08000ee0(int inputValue)\n\n{\n  if (inputValue - 1U < 0x1000000) {\n    _DAT_e000e014 = inputValue - 1U;\n    DAT_e000ed23 = 0xf0;\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08000ee0": "initialize_data_08000ee0",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08000d98",
                "FUN_08000c8c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000f0c": {
            "entrypoint": "0x08000f0c",
            "current_name": "set_bit_in_array_08000f0c",
            "code": "\nvoid setBitInArray_08000f0c(uint index)\n\n{\n  if (-1 < (int)index) {\n    *(int *)(((index >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (index & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000f0c": "set_bit_in_array_08000f0c",
                "param_1": "index"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000f2c": {
            "entrypoint": "0x08000f2c",
            "current_name": "update_flag_08000f2c",
            "code": "\n\n\nvoid updateFlag_08000f2c(int flagValue)\n\n{\n  if (flagValue != 4) {\n    _DAT_e000e010 = _DAT_e000e010 & 0xfffffffb;\n    return;\n  }\n  _DAT_e000e010 = _DAT_e000e010 | 4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000f2c": "update_flag_08000f2c",
                "param_1": "flagValue"
            },
            "calling": [
                "FUN_08000c8c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000f4c": {
            "entrypoint": "0x08000f4c",
            "current_name": "FUNC_08000f4c",
            "code": "\nvoid FUNC_08000f4c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000f4c": "FUNC_08000f4c"
            },
            "calling": [
                "FUN_08000f4e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08000f4e": {
            "entrypoint": "0x08000f4e",
            "current_name": "initialize_08000f4e",
            "code": "\nvoid initialize_08000f4e(void)\n\n{\n  FUNC_08000f4c();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000f4e": "initialize_08000f4e"
            },
            "calling": [
                "FUN_08003476"
            ],
            "called": [
                "FUN_08000f4c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000f56": {
            "entrypoint": "0x08000f56",
            "current_name": "initialize_data_08000f56",
            "code": "\nundefined4 initializeData_08000f56(int dataAddress)\n\n{\n  if (dataAddress != 0) {\n    *(undefined *)(dataAddress + 4) = 2;\n    FUN_080033c8();\n    *(undefined4 *)(dataAddress + 0x10) = 0;\n    *(undefined *)(dataAddress + 4) = 0;\n    *(undefined *)(dataAddress + 5) = 0;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08000f56": "initialize_data_08000f56",
                "param_1": "dataAddress"
            },
            "calling": [
                "FUN_080033d8"
            ],
            "called": [
                "FUN_080033c8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000f72": {
            "entrypoint": "0x08000f72",
            "current_name": "clear_bit_and_set_flag_08000f72",
            "code": "\nundefined4 clearBitAndSetFlag_08000f72(uint **input_ptr,uint bit_position)\n\n{\n  **input_ptr = **input_ptr & ~(1 << (bit_position & 0xff));\n  *(undefined *)(input_ptr + 1) = 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08000f72": "clear_bit_and_set_flag_08000f72",
                "param_1": "input_ptr",
                "param_2": "bit_position"
            },
            "calling": [
                "FUN_080033d8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000f8c": {
            "entrypoint": "0x08000f8c",
            "current_name": "update_flag_and_value_08000f8c",
            "code": "\nundefined4 updateFlagAndValue_08000f8c(uint **arrayPointer)\n\n{\n  if (*(char *)((int)arrayPointer + 0x35) != '\\x02') {\n    arrayPointer[0x15] = (uint *)0x80;\n    return 1;\n  }\n  *(undefined *)((int)arrayPointer + 0x35) = 5;\n  **arrayPointer = **arrayPointer & 0xfffffffe;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08000f8c": "update_flag_and_value_08000f8c",
                "param_1": "arrayPointer"
            },
            "calling": [
                "FUN_08002ffc",
                "FUN_08001ab0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000fb4": {
            "entrypoint": "0x08000fb4",
            "current_name": "update_registers_08000fb4",
            "code": "\n\n\nvoid updateRegisters_08000fb4(uint *outputRegisters,uint *inputRegisters)\n\n{\n  uint tempVar1;\n  uint tempVar2;\n  uint loopVar;\n  uint andResult1;\n  uint andResult2;\n  int indexVar1;\n  uint shiftVar;\n  int indexVar2;\n  \n  for (loopVar = 0; loopVar < 0x10; loopVar = loopVar + 1) {\n    tempVar2 = 1 << (loopVar & 0xff);\n    andResult1 = tempVar2 & *inputRegisters;\n    tempVar1 = _DAT_40013c0c;\n    if (tempVar2 == andResult1) {\n      if ((inputRegisters[1] == 2) || (inputRegisters[1] == 0x12)) {\n        indexVar1 = (loopVar >> 3) + 8;\n        indexVar2 = (loopVar & 7) << 2;\n        outputRegisters[indexVar1] = outputRegisters[indexVar1] & ~(0xf << indexVar2) | inputRegisters[4] << indexVar2;\n      }\n      shiftVar = loopVar << 1;\n      tempVar1 = ~(3 << (shiftVar & 0xff));\n      *outputRegisters = *outputRegisters & tempVar1 | (inputRegisters[1] & 3) << (shiftVar & 0xff);\n      andResult2 = inputRegisters[1];\n      if (((andResult2 - 1 < 2) || (andResult2 == 0x11)) || (andResult2 == 0x12)) {\n        outputRegisters[2] = outputRegisters[2] & tempVar1 | inputRegisters[3] << (shiftVar & 0xff);\n        outputRegisters[1] = outputRegisters[1] & ~tempVar2 | ((inputRegisters[1] << 0x1b) >> 0x1f) << (loopVar & 0xff);\n      }\n      outputRegisters[3] = tempVar1 & outputRegisters[3] | inputRegisters[2] << (shiftVar & 0xff);\n      tempVar1 = _DAT_40013c0c;\n      if ((inputRegisters[1] & 0x10000000) != 0) {\n        _DAT_40023844 = _DAT_40023844 | 0x4000;\n        indexVar2 = (loopVar & 3) << 2;\n        if (outputRegisters == (uint *)0x40020000) {\n          indexVar1 = 0;\n        }\n        else if (outputRegisters == (uint *)0x40020400) {\n          indexVar1 = 1;\n        }\n        else if (outputRegisters == (uint *)0x40020800) {\n          indexVar1 = 2;\n        }\n        else if (outputRegisters == (uint *)0x40020c00) {\n          indexVar1 = 3;\n        }\n        else if (outputRegisters == (uint *)0x40021000) {\n          indexVar1 = 4;\n        }\n        else if (outputRegisters == (uint *)0x40021400) {\n          indexVar1 = 5;\n        }\n        else if (outputRegisters == (uint *)0x40021800) {\n          indexVar1 = 6;\n        }\n        else if (outputRegisters == (uint *)0x40021c00) {\n          indexVar1 = 7;\n        }\n        else if (outputRegisters == (uint *)0x40022000) {\n          indexVar1 = 8;\n        }\n        else if (outputRegisters == (uint *)0x40022400) {\n          indexVar1 = 9;\n        }\n        else {\n          indexVar1 = 10;\n        }\n        *(uint *)(((loopVar >> 2) + 2) * 4 + 0x40013800) =\n             *(uint *)(((loopVar >> 2) + 2) * 4 + 0x40013800) & ~(0xf << indexVar2) | indexVar1 << indexVar2;\n        tempVar1 = ~andResult1;\n        tempVar2 = _DAT_40013c00 & tempVar1;\n        if ((inputRegisters[1] & 0x10000) != 0) {\n          tempVar2 = andResult1 | _DAT_40013c00;\n        }\n        andResult2 = tempVar1 & _DAT_40013c04;\n        if ((inputRegisters[1] & 0x20000) != 0) {\n          andResult2 = andResult1 | _DAT_40013c04;\n        }\n        shiftVar = tempVar1 & _DAT_40013c08;\n        if ((inputRegisters[1] & 0x100000) != 0) {\n          shiftVar = andResult1 | _DAT_40013c08;\n        }\n        _DAT_40013c00 = tempVar2;\n        _DAT_40013c04 = andResult2;\n        _DAT_40013c08 = shiftVar;\n        tempVar1 = tempVar1 & _DAT_40013c0c;\n        if ((inputRegisters[1] & 0x200000) != 0) {\n          tempVar1 = andResult1 | _DAT_40013c0c;\n        }\n      }\n    }\n    _DAT_40013c0c = tempVar1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000fb4": "update_registers_08000fb4",
                "param_1": "outputRegisters",
                "param_2": "inputRegisters",
                "uVar1": "tempVar1",
                "uVar2": "tempVar2",
                "uVar3": "loopVar",
                "uVar4": "andResult1",
                "uVar5": "andResult2",
                "iVar6": "indexVar1",
                "uVar7": "shiftVar",
                "iVar8": "indexVar2"
            },
            "calling": [
                "FUN_08003486",
                "FUN_08003978"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001198": {
            "entrypoint": "0x08001198",
            "current_name": "set_param_value_08001198",
            "code": "\nvoid setParamValue_08001198(int objectAddress,int value,int shiftFlag)\n\n{\n  if (shiftFlag == 0) {\n    *(int *)(objectAddress + 0x18) = value << 0x10;\n    return;\n  }\n  *(int *)(objectAddress + 0x18) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001198": "set_param_value_08001198",
                "param_1": "objectAddress",
                "param_2": "value",
                "param_3": "shiftFlag"
            },
            "calling": [
                "FUN_080034b6"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080011a4": {
            "entrypoint": "0x080011a4",
            "current_name": "update_data_if_bit_set_080011a4",
            "code": "\n\n\nvoid update_data_if_bit_set_080011a4(uint data_to_update)\n\n{\n  if ((_DAT_40013c14 & data_to_update) != 0) {\n    _DAT_40013c14 = data_to_update;\n    FUN_080047d0();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080011a4": "update_data_if_bit_set_080011a4",
                "param_1": "data_to_update"
            },
            "calling": [],
            "called": [
                "FUN_080047d0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080011c0": {
            "entrypoint": "0x080011c0",
            "current_name": "update_flags_based_on_condition_080011c0",
            "code": "\nundefined4 updateFlagsBasedOnCondition_080011c0(int *parameters)\n\n{\n  if (*(char *)((int)parameters + 0x3e) == '@') {\n    if (condition_2 == 0) {\n      *(uint *)(*parameters + 0x10) = value & 0xfe;\n    }\n    else {\n      *(uint *)(*parameters + 0x10) = value & 0xffU | 1;\n    }\n  }\n  else if (parameters[4] == 0x4000) {\n    if (*(char *)((int)parameters + 0x3d) == '!') {\n      *(uint *)(*parameters + 0x10) = value & 0xfe;\n    }\n    else {\n      *(uint *)(*parameters + 0x10) = value & 0xffU | 1;\n    }\n  }\n  else if (condition_2 == 0) {\n    *(uint *)(*parameters + 0x10) = (uint)(value << 0x10) >> 0x17 & 6 | 0xf0;\n  }\n  else if (condition_2 == 1) {\n    *(uint *)(*parameters + 0x10) = (uint)(value << 0x10) >> 0x17 & 6 | 0xf1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080011c0": "update_flags_based_on_condition_080011c0",
                "param_1": "parameters",
                "param_1[0x14]": "condition_2",
                "param_1[0x11]": "value"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800124a": {
            "entrypoint": "0x0800124a",
            "current_name": "update_param_value_0800124a",
            "code": "\nundefined4 updateParamValue_0800124a(int *paramArray)\n\n{\n  *(uint *)(*paramArray + 0x10) = paramArray[0x11] & 0xff;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800124a": "update_param_value_0800124a",
                "param_1": "paramArray",
                "param_1[0x11]": "paramArray[0x11]"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001256": {
            "entrypoint": "0x08001256",
            "current_name": "update_status_flags_08001256",
            "code": "\nundefined4 updateStatusFlags_08001256(uint **arguments)\n\n{\n  uint *statusFlagPtr;\n  \n  statusFlagPtr = arguments[0xb];\n  if ((*(char *)((int)arguments + 0x3d) == '\\\"') &&\n     ((statusFlagPtr2 != (uint *)0x0 || (*(char *)((int)arguments + 0x3e) != '@')))) {\n    if ((statusFlagPtr2 == (uint *)0x0) && (initialValue == (uint *)0xc000)) {\n      **arguments = **arguments | 0x100;\n      statusFlagPtr2 = (uint *)((int)statusFlagPtr2 + 1);\n    }\n    else {\n      if (*(short *)((int)arguments + 0x2a) == 0) {\n        **arguments = **arguments | 0x200;\n      }\n      else if (*(short *)((int)arguments + 0x2a) == 1) {\n        if (statusFlagPtr == (uint *)0xffff0000) {\n          **arguments = **arguments & 0xfffffbff;\n          statusFlagPtr = *arguments;\n          if ((statusFlagPtr[1] & 0x800) == 0) {\n            *statusFlagPtr = *statusFlagPtr | 0x200;\n          }\n          else {\n            *statusFlagPtr = *statusFlagPtr & 0xfffffbff;\n          }\n        }\n        else if (((statusFlagPtr == (uint *)0x4) || (statusFlagPtr == (uint *)0x8)) ||\n                (arguments[0xc] == (uint *)0x12)) {\n          **arguments = **arguments & 0xfffffbff;\n          **arguments = **arguments | 0x200;\n        }\n        else if (arguments[0xb] == (uint *)0x2) {\n          **arguments = **arguments | 0x400;\n        }\n        else {\n          **arguments = **arguments & 0xfffffbff;\n        }\n      }\n      else if (*(short *)((int)arguments + 0x2a) == 2) {\n        if (arguments[0xb] == (uint *)0x2) {\n          **arguments = **arguments | 0x400;\n        }\n        else {\n          **arguments = **arguments & 0xfffffbff;\n          **arguments = **arguments | 0x800;\n        }\n        statusFlagPtr = *arguments;\n        if ((statusFlagPtr[1] & 0x800) != 0) {\n          statusFlagPtr[1] = statusFlagPtr[1] | 0x1000;\n        }\n      }\n      else {\n        **arguments = **arguments | 0x400;\n        statusFlagPtr = *arguments;\n        if ((statusFlagPtr[1] & 0x800) != 0) {\n          statusFlagPtr[1] = statusFlagPtr[1] | 0x1000;\n        }\n      }\n      statusFlagPtr2 = (uint *)0x0;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001256": "update_status_flags_08001256",
                "param_1": "arguments",
                "puVar1": "statusFlagPtr",
                "param_1[0x14]": "statusFlagPtr2",
                "param_1[4]": "initialValue"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001420": {
            "entrypoint": "0x08001420",
            "current_name": "update_byte_array_08001420",
            "code": "\nundefined4 updateByteArray_08001420(int *array)\n\n{\n  byte *bytePointer;\n  \n  if (*(short *)((int)array + 0x2a) != 0) {\n    bytePointer = (byte *)array[9];\n    array[9] = (int)(bytePointer + 1);\n    *(uint *)(*array + 0x10) = (uint)*bytePointer;\n    *(short *)((int)array + 0x2a) = *(short *)((int)array + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001420": "update_byte_array_08001420",
                "param_1": "array",
                "pbVar1": "bytePointer"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001440": {
            "entrypoint": "0x08001440",
            "current_name": "update_value_08001440",
            "code": "\nundefined4 updateValue_08001440(int *array)\n\n{\n  undefined *dataPtr;\n  \n  if (*(short *)((int)array + 0x2a) != 0) {\n    dataPtr = (undefined *)array[9];\n    array[9] = (int)(dataPtr + 1);\n    *dataPtr = (char)*(undefined4 *)(*array + 0x10);\n    *(short *)((int)array + 0x2a) = *(short *)((int)array + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001440": "update_value_08001440",
                "param_1": "array",
                "puVar1": "dataPtr"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001460": {
            "entrypoint": "0x08001460",
            "current_name": "process_param_08001460",
            "code": "\nundefined4 processParam_08001460(uint **paramArray,uint *sourcePtr,int count,uint *destPtr)\n\n{\n  undefined4 result;\n  uint *ptr;\n  \n  if (*(char *)((int)paramArray + 0x3d) == '(') {\n    if (sourcePtr == (uint *)0x0) {\n      result = 1;\n    }\n    else if (count == 0) {\n      result = 1;\n    }\n    else if (*(char *)(paramArray + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(paramArray + 0xf) = 1;\n      ptr = *paramArray;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **paramArray = **paramArray & 0xfffff7ff;\n      *(undefined *)((int)paramArray + 0x3d) = 0x29;\n      *(undefined *)((int)paramArray + 0x3e) = 0x20;\n      result = 0;\n      paramArray[0x10] = (uint *)0x0;\n      paramArray[9] = sourcePtr;\n      *(short *)((int)paramArray + 0x2a) = (short)count;\n      paramArray[0xb] = destPtr;\n      *(undefined2 *)(paramArray + 10) = *(undefined2 *)((int)paramArray + 0x2a);\n      *(undefined *)(paramArray + 0xf) = 0;\n      (*paramArray)[1] = (*paramArray)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08001460": "process_param_08001460",
                "param_1": "paramArray",
                "param_2": "sourcePtr",
                "param_3": "count",
                "param_4": "destPtr",
                "uVar1": "result",
                "puVar2": "ptr"
            },
            "calling": [
                "FUN_08003880"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080014ec": {
            "entrypoint": "0x080014ec",
            "current_name": "validate_parameters_080014ec",
            "code": "\nundefined4 validate_parameters_080014ec(uint **ptr_param1,uint *ptr_param2,int param3,uint *ptr_param4)\n\n{\n  undefined4 result;\n  uint *ptr_var2;\n  \n  if (*(char *)((int)ptr_param1 + 0x3d) == '(') {\n    if (ptr_param2 == (uint *)0x0) {\n      result = 1;\n    }\n    else if (param3 == 0) {\n      result = 1;\n    }\n    else if (*(char *)(ptr_param1 + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(ptr_param1 + 0xf) = 1;\n      ptr_var2 = *ptr_param1;\n      if ((*ptr_var2 & 1) == 0) {\n        *ptr_var2 = *ptr_var2 | 1;\n      }\n      **ptr_param1 = **ptr_param1 & 0xfffff7ff;\n      *(undefined *)((int)ptr_param1 + 0x3d) = 0x2a;\n      *(undefined *)((int)ptr_param1 + 0x3e) = 0x20;\n      result = 0;\n      ptr_param1[0x10] = (uint *)0x0;\n      ptr_param1[9] = ptr_param2;\n      *(short *)((int)ptr_param1 + 0x2a) = (short)param3;\n      ptr_param1[0xb] = ptr_param4;\n      *(undefined2 *)(ptr_param1 + 10) = *(undefined2 *)((int)ptr_param1 + 0x2a);\n      *(undefined *)(ptr_param1 + 0xf) = 0;\n      (*ptr_param1)[1] = (*ptr_param1)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080014ec": "validate_parameters_080014ec",
                "param_1": "ptr_param1",
                "param_2": "ptr_param2",
                "param_3": "param3",
                "param_4": "ptr_param4",
                "uVar1": "result",
                "puVar2": "ptr_var2"
            },
            "calling": [
                "FUN_08003880"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001578": {
            "entrypoint": "0x08001578",
            "current_name": "initialize_memory_08001578",
            "code": "\nundefined4 initializeMemory_08001578(uint **memory)\n\n{\n  uint *ptr;\n  \n  if (*(char *)((int)memory + 0x3d) != ' ') {\n    return 2;\n  }\n  *(undefined *)((int)memory + 0x3d) = 0x28;\n  ptr = *memory;\n  if ((*ptr & 1) == 0) {\n    *ptr = *ptr | 1;\n  }\n  **memory = **memory | 0x400;\n  (*memory)[1] = (*memory)[1] | 0x300;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001578": "initialize_memory_08001578",
                "param_1": "memory",
                "puVar1": "ptr"
            },
            "calling": [
                "FUN_080038d0",
                "FUN_08003900"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080015b6": {
            "entrypoint": "0x080015b6",
            "current_name": "FUNC_080015b6",
            "code": "\nvoid FUNC_080015b6(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080015b6": "FUNC_080015b6"
            },
            "calling": [
                "FUN_08001864",
                "FUN_0800171a"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080015b8": {
            "entrypoint": "0x080015b8",
            "current_name": "FUNC_080015b8",
            "code": "\nvoid FUNC_080015b8(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080015b8": "FUNC_080015b8"
            },
            "calling": [
                "FUN_08001904",
                "FUN_080019a0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080015ba": {
            "entrypoint": "0x080015ba",
            "current_name": "FUNC_080015ba",
            "code": "\nvoid FUNC_080015ba(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080015ba": "FUNC_080015ba"
            },
            "calling": [
                "FUN_080015bc",
                "FUN_08001684"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080015bc": {
            "entrypoint": "0x080015bc",
            "current_name": "update_data_080015bc",
            "code": "\nundefined4 updateData_080015bc(int *data)\n\n{\n  char charValue;\n  byte *bytePointer;\n  \n  charValue = *(char *)((int)data + 0x3d);\n  if (*(short *)((int)data + 0x2a) != 0) {\n    bytePointer = (byte *)data[9];\n    data[9] = (int)(bytePointer + 1);\n    *(uint *)(*data + 0x10) = (uint)*bytePointer;\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    if ((*(short *)((int)data + 0x2a) == 0) && (charValue == ')')) {\n      *(uint *)(*data + 4) = *(uint *)(*data + 4) & 0xfffffbff;\n      data[0xc] = 0x21;\n      *(undefined *)((int)data + 0x3d) = 0x28;\n      FUNC_080015ba();\n    }\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080015bc": "update_data_080015bc",
                "param_1": "data",
                "cVar1": "charValue",
                "pbVar2": "bytePointer"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_080015ba"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800160c": {
            "entrypoint": "0x0800160c",
            "current_name": "FUNC_0800160c",
            "code": "\nvoid FUNC_0800160c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800160c": "FUNC_0800160c"
            },
            "calling": [
                "FUN_0800160e",
                "FUN_08001bfc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800160e": {
            "entrypoint": "0x0800160e",
            "current_name": "process_param_0800160e",
            "code": "\nundefined4 processParam_0800160e(int *paramPtr)\n\n{\n  char character;\n  undefined *undefinedPtr;\n  \n  character = *(char *)((int)paramPtr + 0x3d);\n  if (*(short *)((int)paramPtr + 0x2a) != 0) {\n    undefinedPtr = (undefined *)paramPtr[9];\n    paramPtr[9] = (int)(undefinedPtr + 1);\n    *undefinedPtr = (char)*(undefined4 *)(*paramPtr + 0x10);\n    *(short *)((int)paramPtr + 0x2a) = *(short *)((int)paramPtr + 0x2a) + -1;\n    if ((*(short *)((int)paramPtr + 0x2a) == 0) && (character == '*')) {\n      *(uint *)(*paramPtr + 4) = *(uint *)(*paramPtr + 4) & 0xfffffbff;\n      valueC = 0x22;\n      *(undefined *)((int)paramPtr + 0x3d) = 0x28;\n      FUNC_0800160c();\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800160e": "process_param_0800160e",
                "param_1": "paramPtr",
                "cVar1": "character",
                "puVar2": "undefinedPtr",
                "param_1[0xc]": "valueC"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_0800160c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800165a": {
            "entrypoint": "0x0800165a",
            "current_name": "extracted_function_0800165a",
            "code": "\nundefined4 extracted_function_0800165a(int *input_pointer,undefined4 param_val_1,undefined4 param_val_2,undefined4 param_val_3)\n\n{\n  undefined2 selected_value;\n  uint flag_value;\n  \n  flag_value = *(uint *)(*input_pointer + 0x18);\n  if ((flag_value & 0x80) == 0) {\n    selected_value = *(undefined2 *)(input_pointer + 3);\n  }\n  else {\n    selected_value = *(undefined2 *)(input_pointer + 6);\n  }\n  FUN_08003880(input_pointer,(*(uint *)(*input_pointer + 0x18) & 4) == 0,selected_value,flag_value,param_val_3);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800165a": "extracted_function_0800165a",
                "param_1": "input_pointer",
                "param_2": "param_val_1",
                "param_3": "param_val_2",
                "param_4": "param_val_3",
                "uVar1": "selected_value",
                "uVar2": "flag_value"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_08003880"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001684": {
            "entrypoint": "0x08001684",
            "current_name": "update_parameter_flags_08001684",
            "code": "\nundefined4 updateParameterFlags_08001684(uint **parameters)\n\n{\n  if (((parameters[11] == (uint *)0x4) || (parameters[11] == (uint *)0x8)) &&\n     (*(char *)((int)parameters + 0x3d) == '(')) {\n    parameters[11] = (uint *)0xffff0000;\n    (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n    (*parameters)[5] = 0xfffffbff;\n    **parameters = **parameters & 0xfffffbff;\n    parameters[12] = (uint *)0x0;\n    *(undefined *)((int)parameters + 0x3d) = 0x20;\n    *(undefined *)((int)parameters + 0x3e) = 0;\n    FUN_080038d0();\n  }\n  else if (*(char *)((int)parameters + 0x3d) == '!') {\n    parameters[11] = (uint *)0xffff0000;\n    parameters[12] = (uint *)0x21;\n    *(undefined *)((int)parameters + 0x3d) = 0x20;\n    *(undefined *)((int)parameters + 0x3e) = 0;\n    (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n    (*parameters)[5] = 0xfffffbff;\n    **parameters = **parameters & 0xfffffbff;\n    FUNC_080015ba();\n  }\n  else {\n    (*parameters)[5] = 0xfffffbff;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001684": "update_parameter_flags_08001684",
                "param_1": "parameters",
                "param_1[0xb]": "parameters[11]",
                "param_1[0xc]": "parameters[12]"
            },
            "calling": [
                "FUN_08001e68"
            ],
            "called": [
                "FUN_080015ba",
                "FUN_080038d0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001718": {
            "entrypoint": "0x08001718",
            "current_name": "FUNC_08001718",
            "code": "\nvoid FUNC_08001718(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001718": "FUNC_08001718"
            },
            "calling": [
                "FUN_08001864",
                "FUN_0800171a"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800171a": {
            "entrypoint": "0x0800171a",
            "current_name": "process_binary_data_0800171a",
            "code": "\nundefined4 processBinaryData_0800171a(uint **binaryData)\n\n{\n  char binaryFlag;\n  uint *pointerVar;\n  \n  binaryFlag = *(char *)((int)binaryData + 0x3d);\n  pointerVar = binaryData[0xb];\n  if ((*(short *)(binaryData + 10) == 0) && (binaryFlag == '!')) {\n    if ((pointerVar == (uint *)0x4) || ((pointerVar == (uint *)0x8 || (pointerVar == (uint *)0xffff0000)))) {\n      (*binaryData)[1] = (*binaryData)[1] & 0xfffff8ff;\n      **binaryData = **binaryData | 0x200;\n      binaryData[0xc] = (uint *)0x0;\n      *(undefined *)((int)binaryData + 0x3d) = 0x20;\n      if (*(char *)((int)binaryData + 0x3e) == '@') {\n        *(undefined *)((int)binaryData + 0x3e) = 0;\n        FUNC_08001718();\n      }\n      else {\n        *(undefined *)((int)binaryData + 0x3e) = 0;\n        FUNC_080015b6();\n      }\n    }\n    else {\n      (*binaryData)[1] = (*binaryData)[1] & 0xfffff8ff;\n      binaryData[0xc] = (uint *)0x11;\n      *(undefined *)((int)binaryData + 0x3e) = 0;\n      *(undefined *)((int)binaryData + 0x3d) = 0x20;\n      FUNC_080015b6();\n    }\n  }\n  else if ((binaryFlag == '!') || ((*(char *)((int)binaryData + 0x3e) == '@' && (binaryFlag == '\\\"')))) {\n    if (*(short *)((int)binaryData + 0x2a) == 0) {\n      (*binaryData)[1] = (*binaryData)[1] & 0xfffffbff;\n    }\n    else if (*(char *)((int)binaryData + 0x3e) == '@') {\n      if (binaryData[0x14] == (uint *)0x0) {\n        if (binaryData[0x13] == (uint *)0x1) {\n          (*binaryData)[4] = (uint)binaryData[0x12] & 0xff;\n          binaryData[0x14] = (uint *)((int)binaryData[0x14] + 2);\n        }\n        else {\n          (*binaryData)[4] = (uint)((int)binaryData[0x12] << 0x10) >> 0x18;\n          binaryData[0x14] = (uint *)((int)binaryData[0x14] + 1);\n        }\n      }\n      else if (binaryData[0x14] == (uint *)0x1) {\n        (*binaryData)[4] = (uint)binaryData[0x12] & 0xff;\n        binaryData[0x14] = (uint *)((int)binaryData[0x14] + 1);\n      }\n      else if (binaryData[0x14] == (uint *)0x2) {\n        if (*(char *)((int)binaryData + 0x3d) == '\\\"') {\n          **binaryData = **binaryData | 0x100;\n        }\n        else if (*(char *)((int)binaryData + 0x3d) == '!') {\n          pointerVar = binaryData[9];\n          binaryData[9] = (uint *)((int)pointerVar + 1);\n          (*binaryData)[4] = (uint)*(byte *)pointerVar;\n          *(short *)((int)binaryData + 0x2a) = *(short *)((int)binaryData + 0x2a) + -1;\n        }\n      }\n    }\n    else {\n      pointerVar = binaryData[9];\n      binaryData[9] = (uint *)((int)pointerVar + 1);\n      (*binaryData)[4] = (uint)*(byte *)pointerVar;\n      *(short *)((int)binaryData + 0x2a) = *(short *)((int)binaryData + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800171a": "process_binary_data_0800171a",
                "param_1": "binaryData",
                "cVar1": "binaryFlag",
                "puVar2": "pointerVar"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_08001718",
                "FUN_080015b6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001864": {
            "entrypoint": "0x08001864",
            "current_name": "process_input_08001864",
            "code": "\nundefined4 processInput_08001864(uint **input)\n\n{\n  uint *ptr;\n  \n  ptr = input[0xb];\n  if (*(char *)((int)input + 0x3d) == exclamation) {\n    if (*(short *)((int)input + 0x2a) == 0) {\n      if (((ptr == (uint *)0x4) || (ptr == (uint *)0x8)) || (ptr == (uint *)0xffff0000)) {\n        (*input)[1] = (*input)[1] & 0xfffff8ff;\n        **input = **input | 0x200;\n        flag = (uint *)0x0;\n        *(undefined *)((int)input + 0x3d) = 0x20;\n        if (*(char *)((int)input + 0x3e) == atSign) {\n          *(undefined *)((int)input + 0x3e) = 0;\n          FUNC_08001718();\n        }\n        else {\n          *(undefined *)((int)input + 0x3e) = 0;\n          FUNC_080015b6();\n        }\n      }\n      else {\n        (*input)[1] = (*input)[1] & 0xfffff8ff;\n        flag = (uint *)0x11;\n        *(undefined *)((int)input + 0x3e) = 0;\n        *(undefined *)((int)input + 0x3d) = 0x20;\n        FUNC_080015b6();\n      }\n    }\n    else {\n      ptr = input[9];\n      input[9] = (uint *)((int)ptr + 1);\n      (*input)[4] = (uint)*(byte *)ptr;\n      *(short *)((int)input + 0x2a) = *(short *)((int)input + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001864": "process_input_08001864",
                "param_1": "input",
                "puVar1": "ptr",
                "param_1[0xc]": "flag",
                "'!'": "exclamation",
                "'@'": "atSign"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_08001718",
                "FUN_080015b6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001902": {
            "entrypoint": "0x08001902",
            "current_name": "FUNC_08001902",
            "code": "\nvoid FUNC_08001902(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001902": "FUNC_08001902"
            },
            "calling": [
                "FUN_08001904",
                "FUN_080019a0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08001904": {
            "entrypoint": "0x08001904",
            "current_name": "process_string_08001904",
            "code": "\nundefined4 processString_08001904(uint **stringPtr)\n\n{\n  uint *tempPtr;\n  \n  if (*(char *)((int)stringPtr + 0x3d) == '\\\"') {\n    if (*(ushort *)((int)stringPtr + 0x2a) < 4) {\n      if (*(ushort *)((int)stringPtr + 0x2a) < 2) {\n        **stringPtr = **stringPtr & 0xfffffbff;\n        (*stringPtr)[1] = (*stringPtr)[1] & 0xfffff8ff;\n        tempPtr = storagePtr;\n        storagePtr = (uint *)((int)tempPtr + 1);\n        *(char *)tempPtr = (char)(*stringPtr)[4];\n        *(short *)((int)stringPtr + 0x2a) = *(short *)((int)stringPtr + 0x2a) + -1;\n        *(undefined *)((int)stringPtr + 0x3d) = 0x20;\n        stringPtr[0xc] = (uint *)0x0;\n        if (*(char *)((int)stringPtr + 0x3e) == '@') {\n          *(undefined *)((int)stringPtr + 0x3e) = 0;\n          FUNC_08001902();\n        }\n        else {\n          *(undefined *)((int)stringPtr + 0x3e) = 0;\n          FUNC_080015b8();\n        }\n      }\n    }\n    else {\n      tempPtr = storagePtr;\n      storagePtr = (uint *)((int)tempPtr + 1);\n      *(char *)tempPtr = (char)(*stringPtr)[4];\n      *(short *)((int)stringPtr + 0x2a) = *(short *)((int)stringPtr + 0x2a) + -1;\n      if (*(short *)((int)stringPtr + 0x2a) == 3) {\n        (*stringPtr)[1] = (*stringPtr)[1] & 0xfffffbff;\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001904": "process_string_08001904",
                "param_1": "stringPtr",
                "puVar1": "tempPtr",
                "param_1[9]": "storagePtr"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_08001902",
                "FUN_080015b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080019a0": {
            "entrypoint": "0x080019a0",
            "current_name": "process_data_080019a0",
            "code": "\nundefined4 processData_080019a0(uint **data)\n\n{\n  uint *nextChar;\n  \n  if (*(short *)((int)data + 0x2a) == 4) {\n    (*data)[1] = (*data)[1] & 0xfffffbff;\n    nextChar = output;\n    output = (uint *)((int)nextChar + 1);\n    *(char *)nextChar = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  else if (*(short *)((int)data + 0x2a) == 3) {\n    (*data)[1] = (*data)[1] & 0xfffffbff;\n    **data = **data & 0xfffffbff;\n    nextChar = output;\n    output = (uint *)((int)nextChar + 1);\n    *(char *)nextChar = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  else if (*(short *)((int)data + 0x2a) == 2) {\n    if ((int)data[0xb] - 1U < 2) {\n      **data = **data & 0xfffffbff;\n      **data = **data | 0x100;\n    }\n    else {\n      **data = **data | 0x200;\n    }\n    nextChar = output;\n    output = (uint *)((int)nextChar + 1);\n    *(char *)nextChar = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    nextChar = output;\n    output = (uint *)((int)nextChar + 1);\n    *(char *)nextChar = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    (*data)[1] = (*data)[1] & 0xfffffcff;\n    *(undefined *)((int)data + 0x3d) = 0x20;\n    data[0xc] = (uint *)0x0;\n    if (*(char *)((int)data + 0x3e) == '@') {\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUNC_08001902();\n    }\n    else {\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUNC_080015b8();\n    }\n  }\n  else {\n    nextChar = output;\n    output = (uint *)((int)nextChar + 1);\n    *(char *)nextChar = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080019a0": "process_data_080019a0",
                "param_1": "data",
                "puVar1": "nextChar",
                "param_1[9]": "output"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_08001902",
                "FUN_080015b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001aac": {
            "entrypoint": "0x08001aac",
            "current_name": "FUNC_08001aac",
            "code": "\nvoid FUNC_08001aac(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001aac": "FUNC_08001aac"
            },
            "calling": [
                "FUN_08001ab0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08001ab0": {
            "entrypoint": "0x08001ab0",
            "current_name": "process_input_08001ab0",
            "code": "\nvoid processInput_08001ab0(uint **input)\n\n{\n  int result;\n  uint *ptr1;\n  uint *ptr2;\n  \n  if (*(byte *)((int)input + 0x3d) - 0x29 < 2) {\n    input[0xc] = (uint *)0x0;\n    *(undefined *)((int)input + 0x3d) = 0x28;\n  }\n  else {\n    if ((*(char *)((int)input + 0x3d) != '`') && (((*input)[1] & 0x800) == 0)) {\n      *(undefined *)((int)input + 0x3d) = 0x20;\n    }\n    input[0xc] = (uint *)0x0;\n    *(undefined *)((int)input + 0x3e) = 0;\n  }\n  **input = **input & 0xfffff7ff;\n  ptr2 = *input;\n  if ((ptr2[1] & 0x800) == 0) {\n    if (*(char *)((int)input + 0x3d) == '`') {\n      *(undefined *)((int)input + 0x3d) = 0x20;\n      input[0x10] = (uint *)0x0;\n      if ((ptr2[5] & 0x40) != 0) {\n        ptr1 = input[9];\n        input[9] = (uint *)((int)ptr1 + 1);\n        *(char *)ptr1 = (char)ptr2[4];\n      }\n      **input = **input & 0xfffffffe;\n      FUNC_08001aac(input);\n    }\n    else {\n      if ((ptr2[5] & 0x40) != 0) {\n        ptr1 = input[9];\n        input[9] = (uint *)((int)ptr1 + 1);\n        *(char *)ptr1 = (char)ptr2[4];\n      }\n      FUN_08003900(input);\n    }\n  }\n  else {\n    ptr2[1] = ptr2[1] & 0xfffff7ff;\n    if (*(char *)((int)input[0xd] + 0x35) == '\\x01') {\n      input[0xe][0x14] = (uint)&LAB_08001f3c_1;\n      result = FUN_08000f8c(input[0xe]);\n      if (result != 0) {\n        if (((*input)[5] & 0x40) != 0) {\n          ptr2 = input[9];\n          input[9] = (uint *)((int)ptr2 + 1);\n          *(char *)ptr2 = (char)(*input)[4];\n        }\n        **input = **input & 0xfffffffe;\n        *(undefined *)((int)input + 0x3d) = 0x20;\n        (*(code *)input[0xe][0x14])();\n      }\n    }\n    else {\n      input[0xd][0x14] = (uint)&LAB_08001f3c_1;\n      result = FUN_08000f8c(input[0xd]);\n      if (result != 0) {\n        **input = **input & 0xfffffffe;\n        *(undefined *)((int)input + 0x3d) = 0x20;\n        (*(code *)input[0xd][0x14])();\n      }\n    }\n  }\n  if ((*(char *)((int)input + 0x3d) == '(') && (((uint)input[0x10] & 4) != 0)) {\n    input[0xb] = (uint *)0xffff0000;\n    input[0xc] = (uint *)0x0;\n    *(undefined *)((int)input + 0x3d) = 0x20;\n    *(undefined *)((int)input + 0x3e) = 0;\n    FUN_080038d0(input);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001ab0": "process_input_08001ab0",
                "param_1": "input",
                "iVar1": "result",
                "puVar2": "ptr1",
                "puVar3": "ptr2"
            },
            "calling": [
                "FUN_08001e68",
                "FUN_08001bfc"
            ],
            "called": [
                "FUN_08001aac",
                "FUN_08000f8c",
                "FUN_080038d0",
                "FUN_08003900"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001bfc": {
            "entrypoint": "0x08001bfc",
            "current_name": "process_parameter_08001bfc",
            "code": "\nundefined4 processParameter_08001bfc(uint **parameter)\n\n{\n  char character;\n  uint *pointer1;\n  uint *pointer2;\n  \n  character = *(char *)((int)parameter + 0x3d);\n  (*parameter)[1] = (*parameter)[1] & 0xfffff8ff;\n  **parameter = **parameter | 1;\n  **parameter = **parameter & 0xfffffbff;\n  pointer1 = *parameter;\n  if ((pointer1[1] & 0x800) != 0) {\n    if ((*(char *)((int)parameter + 0x3d) == '\\\"') || (*(char *)((int)parameter + 0x3d) == '*')) {\n      *(short *)((int)parameter + 0x2a) = (short)*(undefined4 *)(*parameter[0xe] + 4);\n    }\n    else {\n      *(short *)((int)parameter + 0x2a) = (short)*(undefined4 *)(*parameter[0xd] + 4);\n    }\n  }\n  if (*(short *)((int)parameter + 0x2a) != 0) {\n    if ((pointer1[5] & 4) != 0) {\n      pointer2 = parameter[9];\n      parameter[9] = (uint *)((int)pointer2 + 1);\n      *(char *)pointer2 = (char)pointer1[4];\n      *(short *)((int)parameter + 0x2a) = *(short *)((int)parameter + 0x2a) + -1;\n    }\n    if (((*parameter)[5] & 0x40) != 0) {\n      pointer1 = parameter[9];\n      parameter[9] = (uint *)((int)pointer1 + 1);\n      *(char *)pointer1 = (char)(*parameter)[4];\n      *(short *)((int)parameter + 0x2a) = *(short *)((int)parameter + 0x2a) + -1;\n    }\n    parameter[0x10] = (uint *)((uint)parameter[0x10] | 4);\n  }\n  if (parameter[0x10] == (uint *)0x0) {\n    if (((character == '(') || (character == '*')) || (character == ')')) {\n      parameter[0xb] = (uint *)0xffff0000;\n      parameter[0xc] = (uint *)0x0;\n      *(undefined *)((int)parameter + 0x3d) = 0x20;\n      *(undefined *)((int)parameter + 0x3e) = 0;\n      FUN_080038d0();\n    }\n    else if ((parameter[0xc] == (uint *)0x22) || (character == '\\\"')) {\n      parameter[0xc] = (uint *)0x0;\n      *(undefined *)((int)parameter + 0x3d) = 0x20;\n      *(undefined *)((int)parameter + 0x3e) = 0;\n      FUNC_0800160c();\n    }\n  }\n  else {\n    FUN_08001ab0();\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001bfc": "process_parameter_08001bfc",
                "param_1": "parameter",
                "cVar1": "character",
                "puVar2": "pointer1",
                "puVar3": "pointer2"
            },
            "calling": [
                "FUN_08001d00"
            ],
            "called": [
                "FUN_08001ab0",
                "FUN_0800160c",
                "FUN_080038d0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001d00": {
            "entrypoint": "0x08001d00",
            "current_name": "process_data_08001d00",
            "code": "\nvoid processData_08001d00(int *data)\n\n{\n  int ptr;\n  uint value1;\n  uint value2;\n  uint value3;\n  \n  ptr = *data;\n  value3 = *(uint *)(ptr + 0x18);\n  value1 = *(uint *)(ptr + 0x14);\n  value2 = *(uint *)(ptr + 4);\n  if ((*(char *)((int)data + 0x3e) == '\\x10') || (*(char *)((int)data + 0x3e) == '@')) {\n    if (((value1 & 0x10001) == 0) || ((value2 & 0x200) == 0)) {\n      if (((value1 & 0x10008) == 0) || ((value2 & 0x200) == 0)) {\n        if (((value1 & 0x10002) != 0) && ((value2 & 0x200) != 0)) {\n          FUN_08001256(data);\n        }\n      }\n      else {\n        FUN_0800124a(data);\n      }\n    }\n    else {\n      FUN_080011c0(data);\n    }\n    if ((value3 & 0x100004) == 0) {\n      if ((((value1 & 0x10040) != 0) && ((value2 & 0x400) != 0)) && ((value1 & 0x10004) == 0)) {\n        FUN_08001904(data);\n        return;\n      }\n      if (((value1 & 0x10004) != 0) && ((value2 & 0x200) != 0)) {\n        FUN_080019a0(data);\n        return;\n      }\n    }\n    else {\n      if ((((value1 & 0x10080) != 0) && ((value2 & 0x400) != 0)) && ((value1 & 0x10004) == 0)) {\n        FUN_0800171a(data);\n        return;\n      }\n      if (((value1 & 0x10004) != 0) && ((value2 & 0x200) != 0)) {\n        FUN_08001864(data);\n        return;\n      }\n    }\n  }\n  else {\n    if (((value1 & 0x10002) != 0) && ((value2 & 0x200) != 0)) {\n      FUN_0800165a();\n      return;\n    }\n    if (((value1 & 0x10010) != 0) && ((value2 & 0x200) != 0)) {\n      FUN_08001bfc(data);\n      return;\n    }\n    if ((value3 & 0x100004) == 0) {\n      if ((((value1 & 0x10040) != 0) && ((value2 & 0x400) != 0)) && ((value1 & 0x10004) == 0)) {\n        FUN_0800160e(data);\n        return;\n      }\n      if (((value1 & 0x10004) != 0) && ((value2 & 0x200) != 0)) {\n        FUN_08001440(data);\n      }\n    }\n    else {\n      if ((((value1 & 0x10080) != 0) && ((value2 & 0x400) != 0)) && ((value1 & 0x10004) == 0)) {\n        FUN_080015bc(data);\n        return;\n      }\n      if (((value1 & 0x10004) != 0) && ((value2 & 0x200) != 0)) {\n        FUN_08001420(data);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001d00": "process_data_08001d00",
                "param_1": "data",
                "iVar1": "ptr",
                "uVar2": "value1",
                "uVar3": "value2",
                "uVar4": "value3"
            },
            "calling": [],
            "called": [
                "FUN_0800160e",
                "FUN_08001256",
                "FUN_080015bc",
                "FUN_08001440",
                "FUN_08001420",
                "FUN_08001904",
                "FUN_080011c0",
                "FUN_0800165a",
                "FUN_0800124a",
                "FUN_08001864",
                "FUN_08001bfc",
                "FUN_0800171a",
                "FUN_080019a0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001e68": {
            "entrypoint": "0x08001e68",
            "current_name": "set_flags_based_on_conditions_08001e68",
            "code": "\nvoid setFlagsBasedOnConditions_08001e68(uint **inputParams)\n\n{\n  char tempChar;\n  uint *inputPtr;\n  uint param5;\n  uint param1;\n  \n  inputPtr = *inputParams;\n  param5 = inputPtr[5];\n  param1 = inputPtr[1];\n  if (((param5 & 0x10100) != 0) && ((param1 & 0x100) != 0)) {\n    inputParams[0x10] = (uint *)((uint)inputParams[0x10] | 1);\n    inputPtr[5] = 0xfffffeff;\n  }\n  if (((param5 & 0x10200) != 0) && ((param1 & 0x100) != 0)) {\n    inputParams[0x10] = (uint *)((uint)inputParams[0x10] | 2);\n    (*inputParams)[5] = 0xfffffdff;\n  }\n  if (((param5 & 0x10400) != 0) && ((param1 & 0x100) != 0)) {\n    tempChar = *(char *)((int)inputParams + 0x3d);\n    if (((*(char *)((int)inputParams + 0x3e) == ' ') && (*(short *)((int)inputParams + 0x2a) == 0)) &&\n       (((tempChar == '!' || (tempChar == ')')) || ((tempChar == '(' && (inputParams[0xc] == (uint *)0x21)))))) {\n      FUN_08001684(inputParams);\n    }\n    else {\n      inputParams[0x10] = (uint *)((uint)inputParams[0x10] | 4);\n      if (*(char *)((int)inputParams + 0x3e) == '\\x10') {\n        **inputParams = **inputParams | 0x200;\n      }\n      (*inputParams)[5] = 0xfffffbff;\n    }\n  }\n  if (((param5 & 0x10800) != 0) && ((param1 & 0x100) != 0)) {\n    inputParams[0x10] = (uint *)((uint)inputParams[0x10] | 8);\n    (*inputParams)[5] = 0xfffff7ff;\n  }\n  if (inputParams[0x10] != (uint *)0x0) {\n    FUN_08001ab0(inputParams);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001e68": "set_flags_based_on_conditions_08001e68",
                "param_1": "inputParams",
                "cVar1": "tempChar",
                "puVar2": "inputPtr",
                "uVar3": "param5",
                "uVar4": "param1"
            },
            "calling": [],
            "called": [
                "FUN_08001684",
                "FUN_08001ab0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001f9c": {
            "entrypoint": "0x08001f9c",
            "current_name": "initialize_and_check_08001f9c",
            "code": "\n\n\nundefined4 initializeAndCheck_08001f9c(void)\n\n{\n  int initialValue;\n  int currentValue;\n  \n  _DAT_40023840 = _DAT_40023840 | 0x10000000;\n  _DAT_420e0040 = 1;\n  initialValue = FUN_08000e30();\n  do {\n    if ((_DAT_40007004 & 0x10000) != 0) {\n      _DAT_420e0044 = 1;\n      initialValue = FUN_08000e30();\n      do {\n        if ((_DAT_40007004 & 0x20000) != 0) {\n          return 0;\n        }\n        currentValue = FUN_08000e30();\n      } while ((uint)(currentValue - initialValue) < 0x3e9);\n      return 3;\n    }\n    currentValue = FUN_08000e30();\n  } while ((uint)(currentValue - initialValue) < 0x3e9);\n  return 3;\n}\n\n",
            "renaming": {
                "FUN_08001f9c": "initialize_and_check_08001f9c",
                "iVar1": "initialValue",
                "iVar2": "currentValue"
            },
            "calling": [
                "FUN_08000c8c"
            ],
            "called": [
                "FUN_08000e30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800201c": {
            "entrypoint": "0x0800201c",
            "current_name": "perform_operation_0800201c",
            "code": "\n\n\nundefined4 performOperation_0800201c(uint *parameters)\n\n{\n  int startValue;\n  int currentValue;\n  undefined4 result;\n  bool isBitClear;\n  \n  if (parameters == (uint *)0x0) {\n    return 1;\n  }\n  if ((*parameters & 1) != 0) {\n    if (((_DAT_40023808 & 0xc) == 4) ||\n       (((_DAT_40023808 & 0xc) == 8 && ((_DAT_40023804 & 0x400000) != 0)))) {\n      if (((_DAT_40023800 & 0x20000) != 0) && (parameters[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      if (parameters[1] == 0x10000) {\n        _DAT_40023800 = _DAT_40023800 | 0x10000;\n      }\n      else if (parameters[1] == 0x50000) {\n        _DAT_40023800 = _DAT_40023800 | 0x50000;\n      }\n      else {\n        _DAT_40023800 = _DAT_40023800 & 0xfffaffff;\n      }\n      if (parameters[1] == 0) {\n        startValue = FUN_08000e30();\n        while ((_DAT_40023800 & 0x20000) != 0) {\n          currentValue = FUN_08000e30();\n          if (100 < (uint)(currentValue - startValue)) {\n            return 3;\n          }\n        }\n      }\n      else {\n        startValue = FUN_08000e30();\n        while ((_DAT_40023800 & 0x20000) == 0) {\n          currentValue = FUN_08000e30();\n          if (100 < (uint)(currentValue - startValue)) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*parameters & 2) != 0) {\n    if (((_DAT_40023808 & 0xc) == 0) ||\n       (((_DAT_40023808 & 0xc) == 8 && ((_DAT_40023804 & 0x400000) == 0)))) {\n      if (((_DAT_40023800 & 2) != 0) && (parameters[3] != 1)) {\n        return 1;\n      }\n      _DAT_40023800 = _DAT_40023800 & 0xffffff07 | parameters[4] << 3;\n    }\n    else if (parameters[3] == 0) {\n      _DAT_42470000 = 0;\n      startValue = FUN_08000e30();\n      while ((_DAT_40023800 & 2) != 0) {\n        currentValue = FUN_08000e30();\n        if (2 < (uint)(currentValue - startValue)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470000 = 1;\n      startValue = FUN_08000e30();\n      while ((_DAT_40023800 & 2) == 0) {\n        currentValue = FUN_08000e30();\n        if (2 < (uint)(currentValue - startValue)) {\n          return 3;\n        }\n      }\n      _DAT_40023800 = _DAT_40023800 & 0xffffff07 | parameters[4] << 3;\n    }\n  }\n  if ((*parameters & 8) != 0) {\n    if (parameters[5] == 0) {\n      _DAT_42470e80 = 0;\n      startValue = FUN_08000e30();\n      while ((_DAT_40023874 & 2) != 0) {\n        currentValue = FUN_08000e30();\n        if (2 < (uint)(currentValue - startValue)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470e80 = 1;\n      startValue = FUN_08000e30();\n      while ((_DAT_40023874 & 2) == 0) {\n        currentValue = FUN_08000e30();\n        if (2 < (uint)(currentValue - startValue)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if ((*parameters & 4) != 0) {\n    isBitClear = (_DAT_40023840 & 0x10000000) == 0;\n    if (isBitClear) {\n      _DAT_40023840 = _DAT_40023840 | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      startValue = FUN_08000e30();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        currentValue = FUN_08000e30();\n        if (2 < (uint)(currentValue - startValue)) {\n          return 3;\n        }\n      }\n    }\n    if (parameters[2] == 1) {\n      _DAT_40023870 = _DAT_40023870 | 1;\n    }\n    else if (parameters[2] == 5) {\n      _DAT_40023870 = _DAT_40023870 | 5;\n    }\n    else {\n      _DAT_40023870 = _DAT_40023870 & 0xfffffffa;\n    }\n    if (parameters[2] == 0) {\n      startValue = FUN_08000e30();\n      while ((_DAT_40023870 & 2) != 0) {\n        currentValue = FUN_08000e30();\n        if (5000 < (uint)(currentValue - startValue)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      startValue = FUN_08000e30();\n      while ((_DAT_40023870 & 2) == 0) {\n        currentValue = FUN_08000e30();\n        if (5000 < (uint)(currentValue - startValue)) {\n          return 3;\n        }\n      }\n    }\n    if (isBitClear) {\n      _DAT_40023840 = _DAT_40023840 & 0xefffffff;\n    }\n  }\n  if (parameters[6] == 0) {\n    result = 0;\n  }\n  else if ((_DAT_40023808 & 0xc) == 8) {\n    result = 1;\n  }\n  else if (parameters[6] == 2) {\n    _DAT_42470060 = 0;\n    startValue = FUN_08000e30();\n    do {\n      if ((_DAT_40023800 & 0x2000000) == 0) {\n        _DAT_40023804 =\n             parameters[7] | parameters[8] | parameters[9] << 6 | ((parameters[10] >> 1) - 1) * 0x10000 |\n             parameters[0xb] << 0x18;\n        _DAT_42470060 = 1;\n        startValue = FUN_08000e30();\n        do {\n          if ((_DAT_40023800 & 0x2000000) != 0) {\n            return 0;\n          }\n          currentValue = FUN_08000e30();\n        } while ((uint)(currentValue - startValue) < 3);\n        return 3;\n      }\n      currentValue = FUN_08000e30();\n    } while ((uint)(currentValue - startValue) < 3);\n    result = 3;\n  }\n  else {\n    _DAT_42470060 = 0;\n    startValue = FUN_08000e30();\n    do {\n      if ((_DAT_40023800 & 0x2000000) == 0) {\n        return 0;\n      }\n      currentValue = FUN_08000e30();\n    } while ((uint)(currentValue - startValue) < 3);\n    result = 3;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_0800201c": "perform_operation_0800201c",
                "param_1": "parameters",
                "iVar1": "startValue",
                "iVar2": "currentValue",
                "uVar3": "result",
                "bVar4": "isBitClear"
            },
            "calling": [
                "FUN_08000c8c"
            ],
            "called": [
                "FUN_08000e30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080023b4": {
            "entrypoint": "0x080023b4",
            "current_name": "calculate_clock_speed_080023b4",
            "code": "\n\n\nuint calculateClockSpeed_080023b4(void)\n\n{\n  undefined4 input_r3;\n  uint clockSpeed;\n  \n  if ((_DAT_40023808 & 0xc) == 4) {\n    return 8000000;\n  }\n  if ((_DAT_40023808 & 0xc) != 8) {\n    return 16000000;\n  }\n  if ((_DAT_40023804 & 0x400000) == 0) {\n    clockSpeed = (_DAT_40023804 << 0x11) >> 0x17;\n    clockSpeed = FUN_080002d0(clockSpeed * 16000000,\n                         (((uint)(clockSpeed * 0x20 < clockSpeed) * -0x3f -\n                          (uint)(clockSpeed * 0x7c0 < clockSpeed * 0x1f)) * 8 +\n                         (uint)CARRY4(clockSpeed * 0x3d08,clockSpeed)) * 0x400 | clockSpeed * 0x3d09 >> 0x16,\n                         _DAT_40023804 & 0x3f,0,input_r3);\n  }\n  else {\n    clockSpeed = (_DAT_40023804 << 0x11) >> 0x17;\n    clockSpeed = FUN_080002d0(clockSpeed * 8000000,\n                         (((uint)(clockSpeed * 0x20 < clockSpeed) * -0x3f -\n                          (uint)(clockSpeed * 0x7c0 < clockSpeed * 0x1f)) * 8 +\n                         (uint)CARRY4(clockSpeed * 0x3d08,clockSpeed)) * 0x200,_DAT_40023804 & 0x3f,0,input_r3);\n  }\n  return clockSpeed / ((((_DAT_40023804 << 0xe) >> 0x1e) + 1) * 2);\n}\n\n",
            "renaming": {
                "FUN_080023b4": "calculate_clock_speed_080023b4",
                "in_r3": "input_r3",
                "uVar1": "clockSpeed"
            },
            "calling": [
                "FUN_08002488"
            ],
            "called": [
                "FUN_080002d0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002488": {
            "entrypoint": "0x08002488",
            "current_name": "configure_device_08002488",
            "code": "\n\n\nundefined4 configureDevice_08002488(uint *deviceSettings,uint settingCount)\n\n{\n  int initialTime;\n  int currentTime;\n  uint result;\n  \n  if (deviceSettings == (uint *)0x0) {\n    return 1;\n  }\n  if ((_DAT_40023c00 & 0xf) < settingCount) {\n    _DAT_40023c00 = CONCAT31(DAT_40023c00_1,(char)settingCount);\n    if (settingCount != (settingCount & 0xf)) {\n      return 1;\n    }\n  }\n  if ((*deviceSettings & 2) != 0) {\n    if ((*deviceSettings & 4) != 0) {\n      _DAT_40023808 = _DAT_40023808 | 0x1c00;\n    }\n    if ((*deviceSettings & 8) != 0) {\n      _DAT_40023808 = _DAT_40023808 | 0xe000;\n    }\n    _DAT_40023808 = _DAT_40023808 & 0xffffff0f | deviceSettings[2];\n  }\n  if ((*deviceSettings & 1) != 0) {\n    result = deviceSettings[1];\n    if (result == 1) {\n      if ((_DAT_40023800 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if (result - 2 < 2) {\n      if ((_DAT_40023800 & 0x2000000) == 0) {\n        return 1;\n      }\n    }\n    else if ((_DAT_40023800 & 2) == 0) {\n      return 1;\n    }\n    _DAT_40023808 = result | _DAT_40023808 & 0xfffffffc;\n    initialTime = FUN_08000e30();\n    while( true ) {\n      if ((_DAT_40023808 & 0xc) == deviceSettings[1] * 4) break;\n      currentTime = FUN_08000e30();\n      if (5000 < (uint)(currentTime - initialTime)) {\n        return 3;\n      }\n    }\n  }\n  if (settingCount < (_DAT_40023c00 & 0xf)) {\n    _DAT_40023c00 = CONCAT31(DAT_40023c00_1,(char)settingCount);\n    if (settingCount != (settingCount & 0xf)) {\n      return 1;\n    }\n  }\n  if ((*deviceSettings & 4) != 0) {\n    _DAT_40023808 = _DAT_40023808 & 0xffffe3ff | deviceSettings[3];\n  }\n  if ((*deviceSettings & 8) != 0) {\n    _DAT_40023808 = _DAT_40023808 & 0xffff1fff | deviceSettings[4] << 3;\n  }\n  result = FUN_080023b4();\n  DAT_2000002c = result >> (&DAT_08005dfc)[(_DAT_40023808 << 0x18) >> 0x1c];\n  FUN_08000d98(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002488": "configure_device_08002488",
                "param_1": "deviceSettings",
                "param_2": "settingCount",
                "iVar1": "initialTime",
                "iVar2": "currentTime",
                "uVar3": "result"
            },
            "calling": [
                "FUN_08000c8c"
            ],
            "called": [
                "FUN_080023b4",
                "FUN_08000e30",
                "FUN_08000d98"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080025e0": {
            "entrypoint": "0x080025e0",
            "current_name": "get_dat_value_080025e0",
            "code": "\nundefined4 get_dat_value_080025e0(void)\n\n{\n  return DAT_2000002c;\n}\n\n",
            "renaming": {
                "FUN_080025e0": "get_dat_value_080025e0"
            },
            "calling": [
                "FUN_080025ec",
                "FUN_0800260c",
                "FUN_08000c8c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080025ec": {
            "entrypoint": "0x080025ec",
            "current_name": "get_shifted_value_080025ec",
            "code": "\n\n\nuint getShiftedValue_080025ec(void)\n\n{\n  uint uVar1;\n  \n  uVar1 = FUN_080025e0();\n  return uVar1 >> (&DAT_08005e0c)[(uint)(_DAT_40023808 << 0x13) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_080025ec": "get_shifted_value_080025ec"
            },
            "calling": [
                "FUN_080029c8"
            ],
            "called": [
                "FUN_080025e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800260c": {
            "entrypoint": "0x0800260c",
            "current_name": "get_shifted_value_0800260c",
            "code": "\n\n\nuint get_shifted_value_0800260c(void)\n\n{\n  uint result;\n  \n  result = FUN_080025e0();\n  return result >> (&DAT_08005e0c)[(uint)(_DAT_40023808 << 0x10) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_0800260c": "get_shifted_value_0800260c",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080029c8"
            ],
            "called": [
                "FUN_080025e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800262c": {
            "entrypoint": "0x0800262c",
            "current_name": "check_and_update_flags_0800262c",
            "code": "\n\n\nvoid check_and_update_flags_0800262c(int *pointer)\n\n{\n  if (((*(uint *)(*pointer + 0xc) & 0x100) != 0) && ((*(uint *)(*pointer + 8) & 0x1000) != 0)) {\n    FUN_08003594();\n    *(uint *)(*pointer + 0xc) = *(uint *)(*pointer + 0xc) & 0xff | 0xfffffe7f;\n  }\n  if (((*(uint *)(*pointer + 0xc) & 0x200) != 0) && ((*(uint *)(*pointer + 8) & 0x2000) != 0)) {\n    FUNC_0800268c(pointer);\n    *(uint *)(*pointer + 0xc) = *(uint *)(*pointer + 0xc) & 0xff | 0xfffffd7f;\n  }\n  _DAT_40013c14 = 0x20000;\n  *(uninitialized *)((int)pointer + 0x1d) = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800262c": "check_and_update_flags_0800262c",
                "param_1": "pointer",
                "undefined": "uninitialized"
            },
            "calling": [],
            "called": [
                "FUN_0800268c",
                "FUN_08003594"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800268c": {
            "entrypoint": "0x0800268c",
            "current_name": "FUNC_0800268c",
            "code": "\nvoid FUNC_0800268c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800268c": "FUNC_0800268c"
            },
            "calling": [
                "FUN_0800262c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800268e": {
            "entrypoint": "0x0800268e",
            "current_name": "initialize_flags_0800268e",
            "code": "\nvoid initializeFlags_0800268e(uint **flags)\n\n{\n  uint *ptrFlags;\n  \n  *(undefined *)((int)flags + 0x39) = 2;\n  ptrFlags = *flags;\n  if ((ptrFlags[8] & 0x1111) == 0) {\n    if ((ptrFlags[8] & 0x444) == 0) {\n      *ptrFlags = *ptrFlags & 0xfffffffe;\n    }\n  }\n  FUN_0800340c(flags);\n  *(undefined *)((int)flags + 0x39) = 0;\n  *(undefined *)(flags + 0xe) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800268e": "initialize_flags_0800268e",
                "param_1": "flags",
                "puVar1": "ptrFlags"
            },
            "calling": [
                "FUN_08003414"
            ],
            "called": [
                "FUN_0800340c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080026c8": {
            "entrypoint": "0x080026c8",
            "current_name": "FUNC_080026c8",
            "code": "\nvoid FUNC_080026c8(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080026c8": "FUNC_080026c8"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080026ca": {
            "entrypoint": "0x080026ca",
            "current_name": "FUNC_080026ca",
            "code": "\nvoid FUNC_080026ca(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080026ca": "FUNC_080026ca"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080026cc": {
            "entrypoint": "0x080026cc",
            "current_name": "FUNC_080026cc",
            "code": "\nvoid FUNC_080026cc(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080026cc": "FUNC_080026cc"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080026ce": {
            "entrypoint": "0x080026ce",
            "current_name": "process_flags_080026ce",
            "code": "\nvoid processFlags_080026ce(int *param)\n\n{\n  int currentValue;\n  \n  currentValue = *param;\n  if (((*(uint *)(currentValue + 0x10) & 2) != 0) && ((*(uint *)(currentValue + 0xc) & 2) != 0)) {\n    *(undefined4 *)(currentValue + 0x10) = 0xfffffffd;\n    *(undefined *)(param + 6) = 1;\n    if ((*(uint *)(*param + 0x18) & 3) == 0) {\n      FUN_08003754();\n      FUNC_080026ca(param);\n    }\n    else {\n      FUNC_080026c8();\n    }\n    *(undefined *)(param + 6) = 0;\n  }\n  currentValue = *param;\n  if (((*(uint *)(currentValue + 0x10) & 4) != 0) && ((*(uint *)(currentValue + 0xc) & 4) != 0)) {\n    *(undefined4 *)(currentValue + 0x10) = 0xfffffffb;\n    *(undefined *)(param + 6) = 2;\n    if ((*(uint *)(*param + 0x18) & 0x300) == 0) {\n      FUN_08003754(param);\n      FUNC_080026ca(param);\n    }\n    else {\n      FUNC_080026c8(param);\n    }\n    *(undefined *)(param + 6) = 0;\n  }\n  currentValue = *param;\n  if (((*(uint *)(currentValue + 0x10) & 8) != 0) && ((*(uint *)(currentValue + 0xc) & 8) != 0)) {\n    *(undefined4 *)(currentValue + 0x10) = 0xfffffff7;\n    *(undefined *)(param + 6) = 4;\n    if ((*(uint *)(*param + 0x1c) & 3) == 0) {\n      FUN_08003754(param);\n      FUNC_080026ca(param);\n    }\n    else {\n      FUNC_080026c8(param);\n    }\n    *(undefined *)(param + 6) = 0;\n  }\n  currentValue = *param;\n  if (((*(uint *)(currentValue + 0x10) & 0x10) != 0) && ((*(uint *)(currentValue + 0xc) & 0x10) != 0)) {\n    *(undefined4 *)(currentValue + 0x10) = 0xffffffef;\n    *(undefined *)(param + 6) = 8;\n    if ((*(uint *)(*param + 0x1c) & 0x300) == 0) {\n      FUN_08003754(param);\n      FUNC_080026ca(param);\n    }\n    else {\n      FUNC_080026c8(param);\n    }\n    *(undefined *)(param + 6) = 0;\n  }\n  currentValue = *param;\n  if (((*(uint *)(currentValue + 0x10) & 1) != 0) && ((*(uint *)(currentValue + 0xc) & 1) != 0)) {\n    *(undefined4 *)(currentValue + 0x10) = 0xfffffffe;\n    FUN_0800376e(param);\n  }\n  currentValue = *param;\n  if (((*(uint *)(currentValue + 0x10) & 0x80) != 0) && ((*(uint *)(currentValue + 0xc) & 0x80) != 0)) {\n    *(undefined4 *)(currentValue + 0x10) = 0xffffff7f;\n    FUNC_0800293e(param);\n  }\n  currentValue = *param;\n  if (((*(uint *)(currentValue + 0x10) & 0x40) != 0) && ((*(uint *)(currentValue + 0xc) & 0x40) != 0)) {\n    *(undefined4 *)(currentValue + 0x10) = 0xffffffbf;\n    FUNC_080026cc(param);\n  }\n  currentValue = *param;\n  if (((*(uint *)(currentValue + 0x10) & 0x20) != 0) && ((*(uint *)(currentValue + 0xc) & 0x20) != 0)) {\n    *(undefined4 *)(currentValue + 0x10) = 0xffffffdf;\n    FUNC_0800293c(param);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080026ce": "process_flags_080026ce",
                "param_1": "param",
                "iVar1": "currentValue"
            },
            "calling": [
                "FUN_0800377c"
            ],
            "called": [
                "FUN_0800293c",
                "FUN_080026c8",
                "FUN_08003754",
                "FUN_080026ca",
                "FUN_0800293e",
                "FUN_0800376e",
                "FUN_080026cc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002848": {
            "entrypoint": "0x08002848",
            "current_name": "update_bits_08002848",
            "code": "\nvoid update_bits_08002848(int base_address,uint bit_position,int new_value)\n\n{\n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) & ~(1 << (bit_position & 0xff));\n  *(uint *)(base_address + 0x20) = *(uint *)(base_address + 0x20) | new_value << (bit_position & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002848": "update_bits_08002848",
                "param_1": "base_address",
                "param_2": "bit_position",
                "param_3": "new_value"
            },
            "calling": [
                "FUN_08002864"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002864": {
            "entrypoint": "0x08002864",
            "current_name": "update_flags_and_values_08002864",
            "code": "\nundefined4 updateFlagsAndValues_08002864(uint **input,undefined4 value)\n\n{\n  bool isSpecialAddress;\n  uint *addressPtr;\n  \n  FUN_08002848(*input,value,0);\n  addressPtr = *input;\n  if (addressPtr == (uint *)0x40010000) {\n    isSpecialAddress = true;\n  }\n  else if (addressPtr == (uint *)0x40010400) {\n    isSpecialAddress = true;\n  }\n  else {\n    isSpecialAddress = false;\n  }\n  if (((isSpecialAddress) && ((addressPtr[8] & 0x1111) == 0)) && ((addressPtr[8] & 0x444) == 0)) {\n    addressPtr[0x11] = addressPtr[0x11] & 0xffff7fff;\n  }\n  addressPtr = *input;\n  if (((addressPtr[8] & 0x1111) == 0) && ((addressPtr[8] & 0x444) == 0)) {\n    *addressPtr = *addressPtr & 0xfffffffe;\n  }\n  *(undefined *)((int)input + 0x39) = 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002864": "update_flags_and_values_08002864",
                "param_1": "input",
                "param_2": "value",
                "bVar1": "isSpecialAddress",
                "puVar2": "addressPtr"
            },
            "calling": [
                "FUN_08003414"
            ],
            "called": [
                "FUN_08002848"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080028d4": {
            "entrypoint": "0x080028d4",
            "current_name": "update_register_080028d4",
            "code": "\nvoid updateRegister_080028d4(int registerAddress,uint bitOffset,int value)\n\n{\n  *(uint *)(registerAddress + 0x20) = *(uint *)(registerAddress + 0x20) & ~(4 << (bitOffset & 0xff));\n  *(uint *)(registerAddress + 0x20) = *(uint *)(registerAddress + 0x20) | value << (bitOffset & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080028d4": "update_register_080028d4",
                "param_1": "registerAddress",
                "param_2": "bitOffset",
                "param_3": "value"
            },
            "calling": [
                "FUN_080028f0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080028f0": {
            "entrypoint": "0x080028f0",
            "current_name": "update_flags_if_zero_080028f0",
            "code": "\nundefined4 updateFlagsIfZero_080028f0(uint **dataPointer,undefined4 value)\n\n{\n  uint *ptr;\n  \n  FUN_080028d4(*dataPointer,value,0);\n  ptr = *dataPointer;\n  if (((flags & 0x1111) == 0) && ((flags & 0x444) == 0)) {\n    ptr[0x11] = ptr[0x11] & 0xffff7fff;\n  }\n  ptr = *dataPointer;\n  if (((flags & 0x1111) == 0) && ((flags & 0x444) == 0)) {\n    *ptr = *ptr & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080028f0": "update_flags_if_zero_080028f0",
                "param_1": "dataPointer",
                "param_2": "value",
                "puVar1": "ptr",
                "puVar1[8]": "flags"
            },
            "calling": [
                "FUN_08003414"
            ],
            "called": [
                "FUN_080028d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800293c": {
            "entrypoint": "0x0800293c",
            "current_name": "FUNC_0800293c",
            "code": "\nvoid FUNC_0800293c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800293c": "FUNC_0800293c"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800293e": {
            "entrypoint": "0x0800293e",
            "current_name": "FUNC_0800293e",
            "code": "\nvoid FUNC_0800293e(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800293e": "FUNC_0800293e"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002940": {
            "entrypoint": "0x08002940",
            "current_name": "clear_bits_and_set_flag_08002940",
            "code": "\nvoid clearBitsAndSetFlag_08002940(int *memoryLocations)\n\n{\n  *(uint *)(*memoryLocations + 0xc) = *(uint *)(*memoryLocations + 0xc) & 0xfffffedf;\n  *(uint *)(*memoryLocations + 0x14) = *(uint *)(*memoryLocations + 0x14) & 0xfffffffe;\n  *(undefined *)((int)memoryLocations + 0x3a) = 0x20;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002940": "clear_bits_and_set_flag_08002940",
                "param_1": "memoryLocations"
            },
            "calling": [
                "FUN_08002ffc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800295c": {
            "entrypoint": "0x0800295c",
            "current_name": "process_data_0800295c",
            "code": "\nundefined4 processData_0800295c(int *data)\n\n{\n  short value;\n  byte *bytePtr;\n  \n  if (*(char *)((int)data + 0x39) != '!') {\n    return 2;\n  }\n  if (data[2] == 0x1000) {\n    *(uint *)(*data + 4) = *(ushort *)data[8] & 0x1ff;\n    if (data[4] == 0) {\n      data[8] = data[8] + 2;\n    }\n    else {\n      data[8] = data[8] + 1;\n    }\n  }\n  else {\n    bytePtr = (byte *)data[8];\n    data[8] = (int)(bytePtr + 1);\n    *(uint *)(*data + 4) = (uint)*bytePtr;\n  }\n  value = *(short *)((int)data + 0x26) + -1;\n  *(short *)((int)data + 0x26) = value;\n  if (value == 0) {\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) & 0xffffff7f;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) | 0x40;\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800295c": "process_data_0800295c",
                "param_1": "data",
                "sVar1": "value",
                "pbVar2": "bytePtr"
            },
            "calling": [
                "FUN_08002ffc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080029c8": {
            "entrypoint": "0x080029c8",
            "current_name": "calculate_value_080029c8",
            "code": "\nvoid calculateValue_080029c8(int *parameters)\n\n{\n  int var1;\n  int var2;\n  int var3;\n  int var4;\n  int var5;\n  int var6;\n  int var7;\n  int var8;\n  int var9;\n  int var10;\n  \n  *(uint *)(*parameters + 0x10) = *(uint *)(*parameters + 0x10) & 0xffffcfff | parameters[3];\n  *(uint *)(*parameters + 0xc) =\n       *(uint *)(*parameters + 0xc) & 0xffff69f3 | parameters[2] | parameters[4] | parameters[5] | parameters[7];\n  *(uint *)(*parameters + 0x14) = *(uint *)(*parameters + 0x14) & 0xfffffcff | parameters[6];\n  if (parameters[7] == 0x8000) {\n    var10 = *parameters;\n    if ((var10 != 0x40011000) && (var10 != 0x40011400)) {\n      var1 = FUN_080025ec();\n      var6 = parameters[1];\n      var2 = FUN_080025ec();\n      var7 = parameters[1];\n      var3 = FUN_080025ec();\n      var8 = parameters[1];\n      var4 = FUN_080025ec();\n      var9 = parameters[1];\n      var5 = FUN_080025ec();\n      *(uint *)(var10 + 8) =\n           ((uint)((int)((ulonglong)\n                         (((uint)(var4 * 0x19) / (uint)(var9 << 1) +\n                          (int)(((ulonglong)(uint)(var5 * 0x19) /\n                                (ulonglong)(uint)(parameters[1] << 1)) / 100) * -100) * 8 + 0x32) *\n                         0x51eb851f >> 0x20) << 0x18) >> 0x1d) +\n           ((((uint)(var2 * 0x19) / (uint)(var7 << 1) +\n             (int)(((ulonglong)(uint)(var3 * 0x19) / (ulonglong)(uint)(var8 << 1)) / 100) * -100)\n             * 8 + 0x32) / 100 & 0xf8) * 2 +\n           (int)(((ulonglong)(uint)(var1 * 0x19) / (ulonglong)(uint)(var6 << 1)) / 100) * 0x10;\n      return;\n    }\n    var1 = FUN_0800260c();\n    var6 = parameters[1];\n    var2 = FUN_0800260c();\n    var7 = parameters[1];\n    var3 = FUN_0800260c();\n    var8 = parameters[1];\n    var4 = FUN_0800260c();\n    var9 = parameters[1];\n    var5 = FUN_0800260c();\n    *(uint *)(var10 + 8) =\n         ((uint)((int)((ulonglong)\n                       (((uint)(var4 * 0x19) / (uint)(var9 << 1) +\n                        (int)(((ulonglong)(uint)(var5 * 0x19) / (ulonglong)(uint)(parameters[1] << 1))\n                             / 100) * -100) * 8 + 0x32) * 0x51eb851f >> 0x20) << 0x18) >> 0x1d) +\n         ((((uint)(var2 * 0x19) / (uint)(var7 << 1) +\n           (int)(((ulonglong)(uint)(var3 * 0x19) / (ulonglong)(uint)(var8 << 1)) / 100) * -100) *\n           8 + 0x32) / 100 & 0xf8) * 2 +\n         (int)(((ulonglong)(uint)(var1 * 0x19) / (ulonglong)(uint)(var6 << 1)) / 100) * 0x10;\n    return;\n  }\n  var10 = *parameters;\n  if ((var10 != 0x40011000) && (var10 != 0x40011400)) {\n    var1 = FUN_080025ec();\n    var6 = parameters[1];\n    var2 = FUN_080025ec();\n    var7 = parameters[1];\n    var3 = FUN_080025ec();\n    var8 = parameters[1];\n    var4 = FUN_080025ec();\n    var9 = parameters[1];\n    var5 = FUN_080025ec();\n    *(uint *)(var10 + 8) =\n         ((uint)((int)((ulonglong)\n                       (((uint)(var4 * 0x19) / (uint)(var9 << 2) +\n                        (int)(((ulonglong)(uint)(var5 * 0x19) / (ulonglong)(uint)(parameters[1] << 2))\n                             / 100) * -100) * 0x10 + 0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n         ((((uint)(var2 * 0x19) / (uint)(var7 << 2) +\n           (int)(((ulonglong)(uint)(var3 * 0x19) / (ulonglong)(uint)(var8 << 2)) / 100) * -100) *\n           0x10 + 0x32) / 100 & 0xf0) +\n         (int)(((ulonglong)(uint)(var1 * 0x19) / (ulonglong)(uint)(var6 << 2)) / 100) * 0x10;\n    return;\n  }\n  var1 = FUN_0800260c();\n  var6 = parameters[1];\n  var2 = FUN_0800260c();\n  var7 = parameters[1];\n  var3 = FUN_0800260c();\n  var8 = parameters[1];\n  var4 = FUN_0800260c();\n  var9 = parameters[1];\n  var5 = FUN_0800260c();\n  *(uint *)(var10 + 8) =\n       ((uint)((int)((ulonglong)\n                     (((uint)(var4 * 0x19) / (uint)(var9 << 2) +\n                      (int)(((ulonglong)(uint)(var5 * 0x19) / (ulonglong)(uint)(parameters[1] << 2)) /\n                           100) * -100) * 0x10 + 0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n       ((((uint)(var2 * 0x19) / (uint)(var7 << 2) +\n         (int)(((ulonglong)(uint)(var3 * 0x19) / (ulonglong)(uint)(var8 << 2)) / 100) * -100) *\n         0x10 + 0x32) / 100 & 0xf0) +\n       (int)(((ulonglong)(uint)(var1 * 0x19) / (ulonglong)(uint)(var6 << 2)) / 100) * 0x10;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080029c8": "calculate_value_080029c8",
                "param_1": "parameters",
                "iVar1": "var1",
                "iVar2": "var2",
                "iVar3": "var3",
                "iVar4": "var4",
                "iVar5": "var5",
                "iVar6": "var6",
                "iVar7": "var7",
                "iVar8": "var8",
                "iVar9": "var9",
                "iVar10": "var10"
            },
            "calling": [
                "FUN_08002d72"
            ],
            "called": [
                "FUN_080025ec",
                "FUN_0800260c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002d0c": {
            "entrypoint": "0x08002d0c",
            "current_name": "check_condition_and_update_08002d0c",
            "code": "\nundefined4 check_condition_and_update_08002d0c(uint **param_array,uint value_1,uint condition,int value_2,uint value_3)\n\n{\n  int result;\n  \n  do {\n    if (((value_1 & ~**param_array) == 0) != condition) {\n      return 0;\n    }\n  } while ((value_3 == 0xffffffff) ||\n          ((value_3 != 0 && (result = FUN_08000e30(), (uint)(result - value_2) <= value_3))));\n  (*param_array)[3] = (*param_array)[3] & 0xfffffe5f;\n  (*param_array)[5] = (*param_array)[5] & 0xfffffffe;\n  *(undefined *)((int)param_array + 0x39) = 0x20;\n  *(undefined *)((int)param_array + 0x3a) = 0x20;\n  *(undefined *)(param_array + 0xe) = 0;\n  return 3;\n}\n\n",
            "renaming": {
                "FUN_08002d0c": "check_condition_and_update_08002d0c",
                "param_1": "param_array",
                "param_2": "value_1",
                "param_3": "condition",
                "param_4": "value_2",
                "param_5": "value_3",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08002dd0"
            ],
            "called": [
                "FUN_08000e30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002d70": {
            "entrypoint": "0x08002d70",
            "current_name": "FUNC_08002d70",
            "code": "\nvoid FUNC_08002d70(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002d70": "FUNC_08002d70"
            },
            "calling": [
                "FUN_08002d72"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002d72": {
            "entrypoint": "0x08002d72",
            "current_name": "validate_param_08002d72",
            "code": "\nundefined4 validate_param_08002d72(int *input)\n\n{\n  if (input != (int *)0x0) {\n    if (*(char *)((int)input + 0x39) == '\\0') {\n      *(undefined *)(input + 0xe) = 0;\n      FUNC_08002d70();\n    }\n    *(undefined *)((int)input + 0x39) = 0x24;\n    *(uint *)(*input + 0xc) = *(uint *)(*input + 0xc) & 0xffffdfff;\n    FUN_080029c8(input);\n    *(uint *)(*input + 0x10) = *(uint *)(*input + 0x10) & 0xffffb7ff;\n    *(uint *)(*input + 0x14) = *(uint *)(*input + 0x14) & 0xffffffd5;\n    *(uint *)(*input + 0xc) = *(uint *)(*input + 0xc) | 0x2000;\n    input[0xf] = 0;\n    *(undefined *)((int)input + 0x39) = 0x20;\n    *(undefined *)((int)input + 0x3a) = 0x20;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08002d72": "validate_param_08002d72",
                "param_1": "input"
            },
            "calling": [
                "FUN_08003978"
            ],
            "called": [
                "FUN_08002d70",
                "FUN_080029c8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002dd0": {
            "entrypoint": "0x08002dd0",
            "current_name": "process_data_08002dd0",
            "code": "\nundefined4 processData_08002dd0(int *dataBuffer,ushort *byteArray,int arrayLength,undefined4 additionalInfo)\n\n{\n  int result;\n  undefined4 returnValue;\n  \n  if (*(char *)((int)dataBuffer + 0x39) == ' ') {\n    if (byteArray == (ushort *)0x0) {\n      returnValue = 1;\n    }\n    else if (arrayLength == 0) {\n      returnValue = 1;\n    }\n    else if (*(char *)(dataBuffer + 0xe) == '\\x01') {\n      returnValue = 2;\n    }\n    else {\n      *(undefined *)(dataBuffer + 0xe) = 1;\n      dataBuffer[0xf] = 0;\n      *(undefined *)((int)dataBuffer + 0x39) = 0x21;\n      returnValue = FUN_08000e30();\n      *(short *)(dataBuffer + 9) = (short)arrayLength;\n      *(short *)((int)dataBuffer + 0x26) = (short)arrayLength;\n      while (*(short *)((int)dataBuffer + 0x26) != 0) {\n        *(short *)((int)dataBuffer + 0x26) = *(short *)((int)dataBuffer + 0x26) + -1;\n        if (dataBuffer[2] == 0x1000) {\n          result = FUN_08002d0c(dataBuffer,0x80,0,returnValue,additionalInfo);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*dataBuffer + 4) = *byteArray & 0x1ff;\n          if (dataBuffer[4] == 0) {\n            byteArray = byteArray + 1;\n          }\n          else {\n            byteArray = (ushort *)((int)byteArray + 1);\n          }\n        }\n        else {\n          result = FUN_08002d0c(dataBuffer,0x80,0,returnValue,additionalInfo);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*dataBuffer + 4) = (uint)*(byte *)byteArray;\n          byteArray = (ushort *)((int)byteArray + 1);\n        }\n      }\n      result = FUN_08002d0c(dataBuffer,0x40,0,returnValue,additionalInfo);\n      if (result == 0) {\n        *(undefined *)((int)dataBuffer + 0x39) = 0x20;\n        *(undefined *)(dataBuffer + 0xe) = 0;\n        returnValue = 0;\n      }\n      else {\n        returnValue = 3;\n      }\n    }\n  }\n  else {\n    returnValue = 2;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08002dd0": "process_data_08002dd0",
                "param_1": "dataBuffer",
                "param_2": "byteArray",
                "param_3": "arrayLength",
                "param_4": "additionalInfo",
                "iVar1": "result",
                "uVar2": "returnValue"
            },
            "calling": [
                "FUN_08003d18"
            ],
            "called": [
                "FUN_08000e30",
                "FUN_08002d0c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002eb2": {
            "entrypoint": "0x08002eb2",
            "current_name": "check_and_update_data_08002eb2",
            "code": "\nundefined4 check_and_update_data_08002eb2(int *data,int value1,int value2)\n\n{\n  if (*(char *)((int)data + 0x39) != ' ') {\n    return 2;\n  }\n  if (value1 == 0) {\n    return 1;\n  }\n  if (value2 == 0) {\n    return 1;\n  }\n  if (*(char *)(data + 0xe) != '\\x01') {\n    data_value1 = value1;\n    *(short *)(data + 9) = (short)value2;\n    *(short *)((int)data + 0x26) = (short)value2;\n    data_flag = 0;\n    *(undefined *)((int)data + 0x39) = 0x21;\n    *(undefined *)(data + 0xe) = 0;\n    *(uint *)(*data + 0xc) = *(uint *)(*data + 0xc) | 0x80;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08002eb2": "check_and_update_data_08002eb2",
                "param_1": "data",
                "param_2": "value1",
                "param_3": "value2",
                "param_1[8]": "data_value1",
                "param_1[0xf]": "data_flag"
            },
            "calling": [
                "FUN_08003eac",
                "FUN_08003f48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002efa": {
            "entrypoint": "0x08002efa",
            "current_name": "validate_input_08002efa",
            "code": "\nundefined4 validate_input_08002efa(int *input_array,int value_1,int value_2)\n\n{\n  if (*(char *)((int)input_array + 0x3a) != ' ') {\n    return 2;\n  }\n  if (value_1 == 0) {\n    return 1;\n  }\n  if (value_2 == 0) {\n    return 1;\n  }\n  if (*(char *)(input_array + 0xe) != '\\x01') {\n    input_array[10] = value_1;\n    *(short *)(input_array + 0xb) = (short)value_2;\n    *(short *)((int)input_array + 0x2e) = (short)value_2;\n    input_array[15] = 0;\n    *(undefined *)((int)input_array + 0x3a) = 0x22;\n    *(undefined *)(input_array + 0xe) = 0;\n    *(uint *)(*input_array + 0x14) = *(uint *)(*input_array + 0x14) | 1;\n    *(uint *)(*input_array + 0xc) = *(uint *)(*input_array + 0xc) | 0x120;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08002efa": "validate_input_08002efa",
                "param_1": "input_array",
                "param_2": "value_1",
                "param_3": "value_2",
                "param_1[10]": "input_array[10]",
                "param_1[0xf]": "input_array[15]"
            },
            "calling": [
                "FUN_08003e54",
                "FUN_08003e18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f4c": {
            "entrypoint": "0x08002f4c",
            "current_name": "clear_bit_and_set_space_char_08002f4c",
            "code": "\nundefined4 clearBitAndSetSpaceChar_08002f4c(int *paramArray)\n\n{\n  *(uint *)(*paramArray + 0xc) = *(uint *)(*paramArray + 0xc) & 0xffffffbf;\n  *(undefined *)((int)paramArray + 0x39) = 0x20;\n  FUN_08003f48();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002f4c": "clear_bit_and_set_space_char_08002f4c",
                "param_1": "paramArray"
            },
            "calling": [
                "FUN_08002ffc"
            ],
            "called": [
                "FUN_08003f48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f66": {
            "entrypoint": "0x08002f66",
            "current_name": "parse_string_08002f66",
            "code": "\nundefined4 parseString_08002f66(int *inputArray)\n\n{\n  byte *bytePointer;\n  short shortVar;\n  undefined *undefinedPointer;\n  \n  if (*(char *)((int)inputArray + 0x3a) != '\\\"') {\n    return 2;\n  }\n  if (inputArray[2] == 0x1000) {\n    if (inputArray[4] == 0) {\n      *(ushort *)inputArray[10] = (ushort)((uint)(*(int *)(*inputArray + 4) << 0x17) >> 0x17);\n      inputArray[10] = inputArray[10] + 2;\n    }\n    else {\n      *(ushort *)inputArray[10] = (ushort)*(undefined4 *)(*inputArray + 4) & 0xff;\n      inputArray[10] = inputArray[10] + 1;\n    }\n  }\n  else if (inputArray[4] == 0) {\n    undefinedPointer = (undefined *)inputArray[10];\n    inputArray[10] = (int)(undefinedPointer + 1);\n    *undefinedPointer = (char)*(undefined4 *)(*inputArray + 4);\n  }\n  else {\n    bytePointer = (byte *)inputArray[10];\n    inputArray[10] = (int)(bytePointer + 1);\n    *bytePointer = (byte)*(undefined4 *)(*inputArray + 4) & 0x7f;\n  }\n  shortVar = *(short *)((int)inputArray + 0x2e) + -1;\n  *(short *)((int)inputArray + 0x2e) = shortVar;\n  if (shortVar != 0) {\n    return 0;\n  }\n  *(uint *)(*inputArray + 0xc) = *(uint *)(*inputArray + 0xc) & 0xfffffedf;\n  *(uint *)(*inputArray + 0x14) = *(uint *)(*inputArray + 0x14) & 0xfffffffe;\n  *(undefined *)((int)inputArray + 0x3a) = 0x20;\n  FUN_08003f24();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002f66": "parse_string_08002f66",
                "param_1": "inputArray",
                "pbVar1": "bytePointer",
                "sVar2": "shortVar",
                "puVar3": "undefinedPointer"
            },
            "calling": [
                "FUN_08002ffc"
            ],
            "called": [
                "FUN_08003f24"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ffc": {
            "entrypoint": "0x08002ffc",
            "current_name": "check_and_update_flags_08002ffc",
            "code": "\nvoid check_and_update_flags_08002ffc(uint **function_inputs)\n\n{\n  int result;\n  uint flag_1;\n  uint *input;\n  uint flag_2;\n  uint flag_3;\n  \n  input = *function_inputs;\n  flag_3 = *input;\n  flag_1 = input[3];\n  if ((((flag_3 & 0xf) == 0) && ((flag_3 & 0x20) != 0)) && ((flag_1 & 0x20) != 0)) {\n    FUN_08002f66(function_inputs);\n    return;\n  }\n  if (((flag_3 & 0xf) == 0) || ((flag_2 = input[5] & 1, flag_2 == 0 && ((flag_1 & 0x120) == 0)))) {\n    if (((flag_3 & 0x80) != 0) && ((flag_1 & 0x80) != 0)) {\n      FUN_0800295c(function_inputs);\n      return;\n    }\n    if (((flag_3 & 0x40) != 0) && ((flag_1 & 0x40) != 0)) {\n      FUN_08002f4c(function_inputs);\n    }\n  }\n  else {\n    if (((flag_3 & 1) != 0) && ((flag_1 & 0x100) != 0)) {\n      output = (uint *)((uint)output | 1);\n    }\n    if (((flag_3 & 4) != 0) && (flag_2 != 0)) {\n      output = (uint *)((uint)output | 2);\n    }\n    if (((flag_3 & 2) != 0) && (flag_2 != 0)) {\n      output = (uint *)((uint)output | 4);\n    }\n    if (((flag_3 & 8) != 0) && (flag_2 != 0)) {\n      output = (uint *)((uint)output | 8);\n    }\n    if (output != (uint *)0x0) {\n      if (((flag_3 & 0x20) != 0) && ((flag_1 & 0x20) != 0)) {\n        FUN_08002f66(function_inputs);\n      }\n      if ((((uint)output & 8) == 0) && (((*function_inputs)[5] & 0x40) == 0)) {\n        FUNC_08003f94(function_inputs);\n        output = (uint *)0x0;\n        return;\n      }\n      FUN_08002940(function_inputs);\n      input = *function_inputs;\n      if ((input[5] & 0x40) == 0) {\n        FUNC_08003f94(function_inputs);\n        return;\n      }\n      input[5] = input[5] & 0xffffffbf;\n      if (another_input == (uint *)0x0) {\n        FUNC_08003f94(function_inputs);\n        return;\n      }\n      another_input[0x14] = (uint)&address_1;\n      result = FUN_08000f8c(another_input);\n      if (result != 0) {\n        (*(code *)another_input[0x14])();\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ffc": "check_and_update_flags_08002ffc",
                "param_1": "function_inputs",
                "iVar1": "result",
                "uVar2": "flag_1",
                "uVar4": "flag_2",
                "uVar5": "flag_3",
                "puVar3": "input",
                "param_1[0xf]": "output",
                "param_1[0xd]": "another_input",
                "LAB_0800311c_1": "address_1"
            },
            "calling": [],
            "called": [
                "FUN_08003f94",
                "FUN_0800295c",
                "FUN_08002940",
                "FUN_08002f4c",
                "FUN_08000f8c",
                "FUN_08002f66"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800312c": {
            "entrypoint": "0x0800312c",
            "current_name": "combine_bytes_0800312c",
            "code": "\nbyte combineBytes_0800312c(int input)\n\n{\n  return *(byte *)(input + 0x3a) | *(byte *)(input + 0x39);\n}\n\n",
            "renaming": {
                "FUN_0800312c": "combine_bytes_0800312c",
                "param_1": "input"
            },
            "calling": [
                "FUN_08003dd0",
                "FUN_08003df4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003138": {
            "entrypoint": "0x08003138",
            "current_name": "get_bit_08003138",
            "code": "\nuint getBit_08003138(uint value,int address)\n\n{\n  return *(uint *)(address + ((value << 0x18) >> 0x1c) * 4) >> (value & 0xf) & 1;\n}\n\n",
            "renaming": {
                "FUN_08003138": "get_bit_08003138",
                "param_1": "value",
                "param_2": "address"
            },
            "calling": [
                "FUN_08004110",
                "FUN_080041bc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800314e": {
            "entrypoint": "0x0800314e",
            "current_name": "set_bit_in_array_0800314e",
            "code": "\nvoid setBitInArray_0800314e(uint index,int array)\n\n{\n  uint shiftedIndex;\n  \n  shiftedIndex = (index << 0x18) >> 0x1c;\n  *(uint *)(array + shiftedIndex * 4) = *(uint *)(array + shiftedIndex * 4) | 1 << (index & 0xf);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800314e": "set_bit_in_array_0800314e",
                "param_1": "index",
                "param_2": "array",
                "uVar1": "shiftedIndex"
            },
            "calling": [
                "FUN_08004110"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800316c": {
            "entrypoint": "0x0800316c",
            "current_name": "clear_bit_in_array_with_offset_0800316c",
            "code": "\nvoid clearBitInArrayWithOffset_0800316c(uint bitPosition,int arrayAddress)\n\n{\n  uint byteShift;\n  \n  byteShift = (bitPosition << 0x18) >> 0x1c;\n  *(uint *)(arrayAddress + byteShift * 4) = *(uint *)(arrayAddress + byteShift * 4) & ~(1 << (bitPosition & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800316c": "clear_bit_in_array_with_offset_0800316c",
                "param_1": "bitPosition",
                "param_2": "arrayAddress",
                "uVar1": "byteShift"
            },
            "calling": [
                "FUN_08004110"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800318c": {
            "entrypoint": "0x0800318c",
            "current_name": "get_memory_address_0800318c",
            "code": "\nundefined4 getMemoryAddress_0800318c(undefined4 input)\n\n{\n  switch(input) {\n  case 0:\n    return 0x40020000;\n  case 1:\n    return 0x40020400;\n  case 2:\n    return 0x40020800;\n  case 3:\n    return 0x40020c00;\n  case 4:\n    return 0x40021000;\n  case 5:\n    return 0x40021400;\n  case 6:\n    return 0x40021800;\n  case 7:\n    return 0x40021c00;\n  case 8:\n    return 0x40022000;\n  case 9:\n    return 0x40022400;\n  case 10:\n    return 0x40022800;\n  default:\n    return 0;\n  }\n}\n\n",
            "renaming": {
                "FUN_0800318c": "get_memory_address_0800318c",
                "param_1": "input"
            },
            "calling": [
                "FUN_080041bc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080031fc": {
            "entrypoint": "0x080031fc",
            "current_name": "set_memory_addresses_080031fc",
            "code": "\n\n\nundefined4 setMemoryAddresses_080031fc(undefined4 input)\n\n{\n  undefined4 output;\n  \n  switch(input) {\n  case 0:\n    _DAT_40023830 = _DAT_40023830 | 1;\n    output = 0x40020000;\n    break;\n  case 1:\n    _DAT_40023830 = _DAT_40023830 | 2;\n    output = 0x40020400;\n    break;\n  case 2:\n    _DAT_40023830 = _DAT_40023830 | 4;\n    output = 0x40020800;\n    break;\n  case 3:\n    _DAT_40023830 = _DAT_40023830 | 8;\n    output = 0x40020c00;\n    break;\n  case 4:\n    _DAT_40023830 = _DAT_40023830 | 0x10;\n    output = 0x40021000;\n    break;\n  case 5:\n    _DAT_40023830 = _DAT_40023830 | 0x20;\n    output = 0x40021400;\n    break;\n  case 6:\n    _DAT_40023830 = _DAT_40023830 | 0x40;\n    output = 0x40021800;\n    break;\n  case 7:\n    _DAT_40023830 = _DAT_40023830 | 0x80;\n    output = 0x40021c00;\n    break;\n  case 8:\n    _DAT_40023830 = _DAT_40023830 | 0x100;\n    output = 0x40022000;\n    break;\n  case 9:\n    _DAT_40023830 = _DAT_40023830 | 0x200;\n    output = 0x40022400;\n    break;\n  case 10:\n    _DAT_40023830 = _DAT_40023830 | 0x400;\n    output = 0x40022800;\n    break;\n  default:\n    output = 0;\n  }\n  return output;\n}\n\n",
            "renaming": {
                "FUN_080031fc": "set_memory_addresses_080031fc",
                "param_1": "input",
                "uVar1": "output"
            },
            "calling": [
                "FUN_08003486",
                "FUN_08003978"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003380": {
            "entrypoint": "0x08003380",
            "current_name": "check_condition_08003380",
            "code": "\nundefined4 check_condition_08003380(undefined4 input_param,undefined4 value_param,undefined4 data_param,undefined4 index_param)\n\n{\n  int result;\n  \n  result = FUN_0800354a(input_param,&DAT_08005a18,data_param,index_param,index_param);\n  if ((uint)(result << 0xc) >> 0x1b != 2) {\n    return 0;\n  }\n  return 0x10;\n}\n\n",
            "renaming": {
                "FUN_08003380": "check_condition_08003380",
                "param_1": "input_param",
                "param_2": "value_param",
                "param_3": "data_param",
                "param_4": "index_param",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080033d8"
            ],
            "called": [
                "FUN_0800354a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800339c": {
            "entrypoint": "0x0800339c",
            "current_name": "determine_return_value_0800339c",
            "code": "\nundefined4 determineReturnValue_0800339c(undefined4 input_param,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int result;\n  uint shifted_bits;\n  \n  result = FUN_0800354a(input_param,&DAT_08005a3c,param_3,param_4,param_4);\n  shifted_bits = (uint)(result << 0xc) >> 0x1b;\n  if (shifted_bits == 3) {\n    return 8;\n  }\n  if (shifted_bits != 4) {\n    if (shifted_bits != 2) {\n      return 0;\n    }\n    return 4;\n  }\n  return 0xc;\n}\n\n",
            "renaming": {
                "FUN_0800339c": "determine_return_value_0800339c",
                "param_1": "input_param",
                "iVar1": "result",
                "uVar2": "shifted_bits"
            },
            "calling": [
                "FUN_08003414"
            ],
            "called": [
                "FUN_0800354a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080033c8": {
            "entrypoint": "0x080033c8",
            "current_name": "clear_flag_bits_080033c8",
            "code": "\n\n\nvoid clearFlagBits_080033c8(void)\n\n{\n  _DAT_40023840 = _DAT_40023840 & 0xdfffffff;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080033c8": "clear_flag_bits_080033c8"
            },
            "calling": [
                "FUN_08000f56"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080033d8": {
            "entrypoint": "0x080033d8",
            "current_name": "process_data_080033d8",
            "code": "\nvoid processData_080033d8(undefined4 inputData)\n\n{\n  int result;\n  int dataBuffer [5];\n  \n  dataBuffer[0] = FUN_080034f4(inputData,&DAT_08005a18);\n  if ((dataBuffer[0] != 0) && ((result = FUN_08003380(inputData), result == 0 || (result == 0x10)))) {\n    FUN_08000f72(dataBuffer,result);\n    FUN_08000f56(dataBuffer);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080033d8": "process_data_080033d8",
                "param_1": "inputData",
                "iVar1": "result",
                "local_1c": "dataBuffer"
            },
            "calling": [
                "FUN_08004110"
            ],
            "called": [
                "FUN_08000f56",
                "FUN_080034f4",
                "FUN_08003380",
                "FUN_08000f72"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800340c": {
            "entrypoint": "0x0800340c",
            "current_name": "initialize_0800340c",
            "code": "\nvoid initialize_0800340c(void)\n\n{\n  FUN_080035fc();\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800340c": "initialize_0800340c"
            },
            "calling": [
                "FUN_0800268e"
            ],
            "called": [
                "FUN_080035fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003414": {
            "entrypoint": "0x08003414",
            "current_name": "process_data_08003414",
            "code": "\nvoid processData_08003414(undefined4 inputData)\n\n{\n  int errorCode;\n  uint flag;\n  int resultArray [16];\n  \n  resultArray[0] = FUN_080034f4(inputData,&DAT_08005a3c);\n  if ((resultArray[0] != 0) &&\n     ((((errorCode = FUN_0800339c(inputData), errorCode == 0 || (errorCode == 4)) || (errorCode == 8)) ||\n      ((errorCode == 0xc || (errorCode == 0x18)))))) {\n    flag = FUN_0800354a(inputData,&DAT_08005a3c);\n    if ((flag & 0x100000) == 0) {\n      FUN_08002864(resultArray,errorCode);\n    }\n    else {\n      FUN_080028f0(resultArray,errorCode);\n    }\n    FUN_0800268e(resultArray);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003414": "process_data_08003414",
                "param_1": "inputData",
                "iVar1": "errorCode",
                "uVar2": "flag",
                "local_4c": "resultArray"
            },
            "calling": [
                "FUN_08004110"
            ],
            "called": [
                "FUN_0800339c",
                "FUN_080034f4",
                "FUN_08002864",
                "FUN_0800268e",
                "FUN_080028f0",
                "FUN_0800354a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800346c": {
            "entrypoint": "0x0800346c",
            "current_name": "initialize_application_0800346c",
            "code": "\nvoid initialize_application_0800346c(void)\n\n{\n  FUN_08000e30();\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800346c": "initialize_application_0800346c"
            },
            "calling": [
                "FUN_08004204"
            ],
            "called": [
                "FUN_08000e30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003474": {
            "entrypoint": "0x08003474",
            "current_name": "FUNC_08003474",
            "code": "\nvoid FUNC_08003474(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003474": "FUNC_08003474"
            },
            "calling": [
                "FUN_08003476"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08003476": {
            "entrypoint": "0x08003476",
            "current_name": "initialize_08003476",
            "code": "\nvoid initialize_08003476(void)\n\n{\n  FUN_08000e18();\n  FUN_08000f4e();\n  FUNC_08003474();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003476": "initialize_08003476"
            },
            "calling": [],
            "called": [
                "FUN_08003474",
                "FUN_08000f4e",
                "FUN_08000e18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003486": {
            "entrypoint": "0x08003486",
            "current_name": "initialize_flags_08003486",
            "code": "\nvoid initializeFlags_08003486(uint inputValue,undefined4 param2,undefined4 param3)\n\n{\n  undefined4 shiftedValue;\n  uint flagMask;\n  undefined4 param2Copy;\n  undefined4 param3Copy;\n  undefined4 flagValue;\n  \n  shiftedValue = FUN_080031fc((inputValue << 0x18) >> 0x1c);\n  flagMask = 1 << (inputValue & 0xf) & 0xffff;\n  flagValue = 2;\n  param2Copy = param2;\n  param3Copy = param3;\n  FUN_08000fb4(shiftedValue,&flagMask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003486": "initialize_flags_08003486",
                "param_1": "inputValue",
                "param_2": "param2",
                "param_3": "param3",
                "uVar1": "shiftedValue",
                "local_24": "flagMask",
                "local_20": "param2Copy",
                "local_1c": "param3Copy",
                "local_18": "flagValue"
            },
            "calling": [
                "FUN_08004110"
            ],
            "called": [
                "FUN_08000fb4",
                "FUN_080031fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080034b6": {
            "entrypoint": "0x080034b6",
            "current_name": "process_param_080034b6",
            "code": "\nvoid processParam_080034b6(undefined4 input1,undefined2 input2,int status,undefined4 data)\n\n{\n  if (status == 0) {\n    FUN_08001198(input1,input2,0,data,data);\n    return;\n  }\n  FUN_08001198(input1,input2,1,data,data);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080034b6": "process_param_080034b6",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "status",
                "param_4": "data"
            },
            "calling": [
                "FUN_080041bc"
            ],
            "called": [
                "FUN_08001198"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080034ce": {
            "entrypoint": "0x080034ce",
            "current_name": "initialize_main_080034ce",
            "code": "\nvoid initialize_main_080034ce(void)\n\n{\n  FUN_08000de4();\n  FUN_08000c8c();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080034ce": "initialize_main_080034ce"
            },
            "calling": [
                "FUN_08000d8e"
            ],
            "called": [
                "FUN_08000c8c",
                "FUN_08000de4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080034da": {
            "entrypoint": "0x080034da",
            "current_name": "find_value_index_080034da",
            "code": "\nundefined4 find_value_index_080034da(int value_to_find,short *array_of_values)\n\n{\n  while( true ) {\n    if (*array_of_values == -1) {\n      return 0;\n    }\n    if (*array_of_values == value_to_find) break;\n    array_of_values = array_of_values + 6;\n  }\n  return *(undefined4 *)(array_of_values + 2);\n}\n\n",
            "renaming": {
                "FUN_080034da": "find_value_index_080034da",
                "param_1": "value_to_find",
                "param_2": "array_of_values"
            },
            "calling": [
                "FUN_080034f4",
                "FUN_080034da"
            ],
            "called": [
                "FUN_080034da"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080034f4": {
            "entrypoint": "0x080034f4",
            "current_name": "check_parameter_080034f4",
            "code": "\nundefined4 checkParameter_080034f4(int input)\n\n{\n  undefined4 result;\n  \n  if (input != -1) {\n    result = FUN_080034da();\n    return result;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080034f4": "check_parameter_080034f4",
                "param_1": "input",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080033d8",
                "FUN_08003414",
                "FUN_08003d18",
                "FUN_08003978",
                "FUN_08003cc8"
            ],
            "called": [
                "FUN_080034da"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003506": {
            "entrypoint": "0x08003506",
            "current_name": "find_value_by_index_08003506",
            "code": "\nint findValueByIndex_08003506(int indexToFind,short *dataPointer)\n\n{\n  while( true ) {\n    if (*(int *)(dataPointer + 2) == 0) {\n      return -1;\n    }\n    if (*(int *)(dataPointer + 2) == indexToFind) break;\n    dataPointer = dataPointer + 6;\n  }\n  return (int)*dataPointer;\n}\n\n",
            "renaming": {
                "FUN_08003506": "find_value_by_index_08003506",
                "param_1": "indexToFind",
                "param_2": "dataPointer"
            },
            "calling": [
                "FUN_08003506",
                "FUN_0800351e"
            ],
            "called": [
                "FUN_08003506"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800351e": {
            "entrypoint": "0x0800351e",
            "current_name": "check_validity_0800351e",
            "code": "\nundefined4 checkValidity_0800351e(int inputValue)\n\n{\n  undefined4 returnValue;\n  \n  if (inputValue != 0) {\n    returnValue = FUN_08003506();\n    return returnValue;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800351e": "check_validity_0800351e",
                "param_1": "inputValue",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_0800447c",
                "FUN_08003cc8"
            ],
            "called": [
                "FUN_08003506"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800352e": {
            "entrypoint": "0x0800352e",
            "current_name": "find_value_index_0800352e",
            "code": "\nundefined4 find_value_index_0800352e(int target_value,short *array)\n\n{\n  while( true ) {\n    if (*array == -1) {\n      return 0xffffffff;\n    }\n    if (*array == target_value) break;\n    array = array + 6;\n  }\n  return *(undefined4 *)(array + 4);\n}\n\n",
            "renaming": {
                "FUN_0800352e": "find_value_index_0800352e",
                "param_1": "target_value",
                "param_2": "array"
            },
            "calling": [
                "FUN_0800352e",
                "FUN_0800354a"
            ],
            "called": [
                "FUN_0800352e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800354a": {
            "entrypoint": "0x0800354a",
            "current_name": "check_param_0800354a",
            "code": "\nundefined4 checkParam_0800354a(int inputParam)\n\n{\n  undefined4 result;\n  \n  if (inputParam == -1) {\n    return 0xffffffff;\n  }\n  result = FUN_0800352e();\n  return result;\n}\n\n",
            "renaming": {
                "FUN_0800354a": "check_param_0800354a",
                "param_1": "inputParam",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08003414",
                "FUN_0800339c",
                "FUN_08003380",
                "FUN_08003978"
            ],
            "called": [
                "FUN_0800352e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800355e": {
            "entrypoint": "0x0800355e",
            "current_name": "find_match_0800355e",
            "code": "\nundefined4 find_match_0800355e(int value,short *data_array)\n\n{\n  if (value == -1) {\n    return 0;\n  }\n  while( true ) {\n    if (*data_array == -1) {\n      return 0;\n    }\n    if (value == *data_array) break;\n    data_array = data_array + 6;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800355e": "find_match_0800355e",
                "param_1": "value",
                "param_2": "data_array"
            },
            "calling": [
                "FUN_08004110"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003582": {
            "entrypoint": "0x08003582",
            "current_name": "find_common_value_08003582",
            "code": "\nint find_common_value_08003582(int value1,int value2)\n\n{\n  if (value1 != value2) {\n    if (value1 == 0) {\n      return value2;\n    }\n    if (value2 == 0) {\n      return value1;\n    }\n    value1 = 0;\n  }\n  return value1;\n}\n\n",
            "renaming": {
                "FUN_08003582": "find_common_value_08003582",
                "param_1": "value1",
                "param_2": "value2"
            },
            "calling": [
                "FUN_08003978"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003594": {
            "entrypoint": "0x08003594",
            "current_name": "execute_callback_function_08003594",
            "code": "\nvoid execute_callback_function_08003594(void)\n\n{\n  if (DAT_20000188 != (code *)0x0) {\n    (*DAT_20000188)(DAT_200001ac);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003594": "execute_callback_function_08003594"
            },
            "calling": [
                "FUN_0800262c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080035bc": {
            "entrypoint": "0x080035bc",
            "current_name": "initialize_data_080035bc",
            "code": "\n\n\nvoid initializeData_080035bc(void)\n\n{\n  _DAT_40023808 = 0;\n  _DAT_40023804 = 0x24003010;\n  _DAT_40023800 = _DAT_40023800 & 0xfef2ffff | 1;\n  _DAT_4002380c = 0;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080035bc": "initialize_data_080035bc"
            },
            "calling": [
                "entry"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080035fc": {
            "entrypoint": "0x080035fc",
            "current_name": "apply_bitwise_operations_080035fc",
            "code": "\n\n\nvoid applyBitwiseOperations_080035fc(int *input)\n\n{\n  if (*input == 0x40010000) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffffffe;\n  }\n  if (*input == 0x40000000) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffffe;\n  }\n  if (*input == 0x40000400) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffffd;\n  }\n  if (*input == 0x40000800) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffffb;\n  }\n  if (*input == 0x40000c00) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffff7;\n  }\n  if (*input == 0x40001000) {\n    _DAT_40023840 = _DAT_40023840 & 0xffffffef;\n  }\n  if (*input == 0x40001400) {\n    _DAT_40023840 = _DAT_40023840 & 0xffffffdf;\n  }\n  if (*input == 0x40010400) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffffffd;\n  }\n  if (*input == 0x40014000) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffeffff;\n  }\n  if (*input == 0x40014400) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffdffff;\n  }\n  if (*input == 0x40014800) {\n    _DAT_40023844 = _DAT_40023844 & 0xfffbffff;\n  }\n  if (*input == 0x40001800) {\n    _DAT_40023840 = _DAT_40023840 & 0xffffffbf;\n  }\n  if (*input == 0x40001c00) {\n    _DAT_40023840 = _DAT_40023840 & 0xffffff7f;\n  }\n  if (*input == 0x40002000) {\n    _DAT_40023840 = _DAT_40023840 & 0xfffffeff;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080035fc": "apply_bitwise_operations_080035fc",
                "param_1": "input"
            },
            "calling": [
                "FUN_0800340c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003750": {
            "entrypoint": "0x08003750",
            "current_name": "subtract_four_08003750",
            "code": "\nint subtract_four_08003750(int input_value)\n\n{\n  return input_value + -4;\n}\n\n",
            "renaming": {
                "FUN_08003750": "subtract_four_08003750",
                "param_1": "input_value"
            },
            "calling": [
                "FUN_08003754",
                "FUN_0800376e"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003754": {
            "entrypoint": "0x08003754",
            "current_name": "execute_callbacks_08003754",
            "code": "\nvoid executeCallbacks_08003754(int callbackParam)\n\n{\n  int callbackHandler;\n  \n  callbackHandler = FUN_08003750();\n  if ((*(callbackFunction **)(callbackHandler + 0x48) != (callbackFunction *)0x0) && (*(char *)(callbackParam + 0x18) == '\\x01')) {\n    (**(callbackFunction **)(callbackHandler + 0x48))(callbackHandler,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003754": "execute_callbacks_08003754",
                "param_1": "callbackParam",
                "iVar1": "callbackHandler",
                "code": "callbackFunction"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [
                "FUN_08003750"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800376e": {
            "entrypoint": "0x0800376e",
            "current_name": "execute_callback_function_0800376e",
            "code": "\nvoid executeCallbackFunction_0800376e(void)\n\n{\n  int callbackFunctionAddress;\n  \n  callbackFunctionAddress = FUN_08003750();\n  if (*(code **)(callbackFunctionAddress + 0x44) != (code *)0x0) {\n    (**(code **)(callbackFunctionAddress + 0x44))();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800376e": "execute_callback_function_0800376e",
                "iVar1": "callbackFunctionAddress"
            },
            "calling": [
                "FUN_080026ce"
            ],
            "called": [
                "FUN_08003750"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800377c": {
            "entrypoint": "0x0800377c",
            "current_name": "check_and_call_functions_0800377c",
            "code": "\nvoid check_and_call_functions_0800377c(void)\n\n{\n  if (DAT_200001b0 != 0) {\n    FUN_080026ce();\n  }\n  if (DAT_200001d4 != 0) {\n    FUN_080026ce();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800377c": "check_and_call_functions_0800377c"
            },
            "calling": [],
            "called": [
                "FUN_080026ce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800387c": {
            "entrypoint": "0x0800387c",
            "current_name": "subtract_four_0800387c",
            "code": "\nint subtractFour_0800387c(int input)\n\n{\n  return input + -4;\n}\n\n",
            "renaming": {
                "FUN_0800387c": "subtract_four_0800387c",
                "param_1": "input"
            },
            "calling": [
                "FUN_08003880",
                "FUN_080038d0",
                "FUN_08003900"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003880": {
            "entrypoint": "0x08003880",
            "current_name": "process_params_08003880",
            "code": "\nvoid processParams_08003880(int inputAddress,int flag,int targetValue,undefined4 paramValue)\n\n{\n  int outputAddress;\n  \n  outputAddress = FUN_0800387c();\n  if (targetValue == *(int *)(inputAddress + 0xc)) {\n    if (flag == 0) {\n      *(undefined *)(outputAddress + 0x88) = 0;\n      *(undefined *)(outputAddress + 0x5e) = 0;\n      if (*(code **)(outputAddress + 100) != (code *)0x0) {\n        (**(code **)(outputAddress + 100))();\n      }\n      FUN_08001460(inputAddress,outputAddress + 0x68,*(undefined *)(outputAddress + 0x88),8);\n      return;\n    }\n    *(undefined *)(outputAddress + 0x5e) = 1;\n    FUN_080014ec(inputAddress,outputAddress + 0x68,0x20,8,paramValue);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003880": "process_params_08003880",
                "param_1": "inputAddress",
                "param_2": "flag",
                "param_3": "targetValue",
                "param_4": "paramValue",
                "iVar1": "outputAddress"
            },
            "calling": [
                "FUN_0800165a"
            ],
            "called": [
                "FUN_0800387c",
                "FUN_080014ec",
                "FUN_08001460"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080038d0": {
            "entrypoint": "0x080038d0",
            "current_name": "execute_function_if_condition_met_080038d0",
            "code": "\nvoid executeFunctionIfConditionMet_080038d0(undefined4 inputParameter)\n\n{\n  int functionResult;\n  \n  functionResult = FUN_0800387c();\n  if (((*(code **)(functionResult + 0x60) != (code *)0x0) && (*(char *)(functionResult + 0x5e) == '\\x01')) &&\n     (*(char *)(functionResult + 0x2c) != ' ')) {\n    (**(code **)(functionResult + 0x60))(functionResult + 0x68);\n  }\n  FUN_08001578(inputParameter);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080038d0": "execute_function_if_condition_met_080038d0",
                "param_1": "inputParameter",
                "iVar1": "functionResult"
            },
            "calling": [
                "FUN_08001684",
                "FUN_08001ab0",
                "FUN_08001bfc"
            ],
            "called": [
                "FUN_0800387c",
                "FUN_08001578"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003900": {
            "entrypoint": "0x08003900",
            "current_name": "check_and_call_function_08003900",
            "code": "\nvoid checkAndCallFunction_08003900(undefined4 inputParam)\n\n{\n  int returnValue;\n  \n  returnValue = FUN_0800387c();\n  if (*(char *)(returnValue + 0x5f) == '\\0') {\n    FUN_08001578(inputParam);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003900": "check_and_call_function_08003900",
                "param_1": "inputParam",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08001ab0"
            ],
            "called": [
                "FUN_0800387c",
                "FUN_08001578"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003978": {
            "entrypoint": "0x08003978",
            "current_name": "configure_uart_pins_08003978",
            "code": "\n\n\nvoid configureUARTPins_08003978(int *pinConfig)\n\n{\n  int uartPin1;\n  int uartPin2;\n  undefined4 pinConfiguration1;\n  uint pinConfiguration2;\n  uint uartPin1Bitmask;\n  uint uartPin1Configuration;\n  uint uartPin2Configuration;\n  undefined4 uartPin2Bitmask;\n  uint uartPin2Mode;\n  \n  if (pinConfig != (int *)0x0) {\n    uartPin1 = FUN_080034f4((int)*(short *)(pinConfig + 0x16),&DAT_08005ca0);\n    uartPin2 = FUN_080034f4((int)*(short *)((int)pinConfig + 0x5a),&DAT_08005c10);\n    if ((uartPin2 == 0) || (uartPin1 == 0)) {\n      FUN_08004fdc(\"ERROR: at least one UART pin has no peripheral\\n\",uartPin2);\n    }\n    else {\n      uartPin1 = FUN_08003582(uartPin1);\n      *pinConfig = uartPin1;\n      if (uartPin1 == 0) {\n        FUN_08004fdc(\"ERROR: U(S)ART pins mismatch\\n\");\n      }\n      else {\n        if (uartPin1 == 0x40011000) {\n          _DAT_40023824 = _DAT_40023824 & 0xffffffef;\n          _DAT_40023844 = _DAT_40023844 | 0x10;\n          *(undefined *)(pinConfig + 0x11) = 0;\n          *(undefined *)(pinConfig + 0x17) = 0x25;\n        }\n        else if (uartPin1 == 0x40004400) {\n          _DAT_40023820 = _DAT_40023820 & 0xfffdffff;\n          _DAT_40023840 = _DAT_40023840 | 0x20000;\n          *(undefined *)(pinConfig + 0x11) = 1;\n          *(undefined *)(pinConfig + 0x17) = 0x26;\n        }\n        else if (uartPin1 == 0x40004800) {\n          _DAT_40023820 = _DAT_40023820 & 0xfffbffff;\n          _DAT_40023840 = _DAT_40023840 | 0x40000;\n          *(undefined *)(pinConfig + 0x11) = 2;\n          *(undefined *)(pinConfig + 0x17) = 0x27;\n        }\n        else if (uartPin1 == 0x40004c00) {\n          _DAT_40023820 = _DAT_40023820 & 0xfff7ffff;\n          _DAT_40023840 = _DAT_40023840 | 0x80000;\n          *(undefined *)(pinConfig + 0x11) = 3;\n          *(undefined *)(pinConfig + 0x17) = 0x34;\n        }\n        else if (uartPin1 == 0x40005000) {\n          _DAT_40023820 = _DAT_40023820 & 0xffefffff;\n          _DAT_40023840 = _DAT_40023840 | 0x100000;\n          *(undefined *)(pinConfig + 0x11) = 4;\n          *(undefined *)(pinConfig + 0x17) = 0x35;\n        }\n        else if (uartPin1 == 0x40011400) {\n          _DAT_40023824 = _DAT_40023824 & 0xffffffdf;\n          _DAT_40023844 = _DAT_40023844 | 0x20;\n          *(undefined *)(pinConfig + 0x11) = 5;\n          *(undefined *)(pinConfig + 0x17) = 0x47;\n        }\n        else if (uartPin1 == 0x40007800) {\n          _DAT_40023820 = _DAT_40023820 & 0xbfffffff;\n          _DAT_40023840 = _DAT_40023840 | 0x40000000;\n          *(undefined *)(pinConfig + 0x11) = 6;\n          *(undefined *)(pinConfig + 0x17) = 0x52;\n        }\n        else if (uartPin1 == 0x40007c00) {\n          _DAT_40023820 = _DAT_40023820 & 0x7fffffff;\n          _DAT_40023840 = _DAT_40023840 | 0x80000000;\n          *(undefined *)(pinConfig + 0x11) = 7;\n          *(undefined *)(pinConfig + 0x17) = 0x53;\n        }\n        pinConfiguration1 = FUN_080031fc((uint)((int)*(short *)((int)pinConfig + 0x5a) << 0x18) >> 0x1c);\n        pinConfiguration2 = FUN_0800354a((int)*(short *)((int)pinConfig + 0x5a),&DAT_08005c10);\n        uartPin1Bitmask = 1 << (*(ushort *)((int)pinConfig + 0x5a) & 0xf) & 0xffff;\n        uartPin1Configuration = (pinConfiguration2 >> 3 & 1) << 4 | pinConfiguration2 & 7;\n        uartPin2Configuration = (pinConfiguration2 << 0x1a) >> 0x1e;\n        uartPin2Mode = (pinConfiguration2 << 0x11) >> 0x19;\n        uartPin2Bitmask = 3;\n        FUN_08000fb4(pinConfiguration1,&uartPin1Bitmask);\n        pinConfiguration1 = FUN_080031fc((uint)((int)*(short *)(pinConfig + 0x16) << 0x18) >> 0x1c);\n        pinConfiguration2 = FUN_0800354a((int)*(short *)(pinConfig + 0x16),&DAT_08005ca0);\n        uartPin1Bitmask = 1 << (*(ushort *)(pinConfig + 0x16) & 0xf) & 0xffff;\n        uartPin1Configuration = (pinConfiguration2 >> 3 & 1) << 4 | pinConfiguration2 & 7;\n        uartPin2Configuration = (pinConfiguration2 << 0x1a) >> 0x1e;\n        FUN_08000fb4(pinConfiguration1,&uartPin1Bitmask);\n        (&DAT_200002b4)[*(byte *)(pinConfig + 0x11)] = pinConfig + 1;\n        pinConfig[1] = *pinConfig;\n        pinConfig[2] = pinConfig[0x12];\n        pinConfig[3] = pinConfig[0x13];\n        pinConfig[4] = pinConfig[0x14];\n        pinConfig[5] = pinConfig[0x15];\n        pinConfig[6] = 0xc;\n        pinConfig[7] = 0;\n        pinConfig[8] = 0;\n        FUN_08002d72(pinConfig + 1);\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003978": "configure_uart_pins_08003978",
                "param_1": "pinConfig",
                "iVar1": "uartPin1",
                "iVar2": "uartPin2",
                "uVar3": "pinConfiguration1",
                "uVar4": "pinConfiguration2",
                "local_2c": "uartPin1Bitmask",
                "local_28": "uartPin1Configuration",
                "local_24": "uartPin2Configuration",
                "local_20": "uartPin2Bitmask",
                "local_1c": "uartPin2Mode"
            },
            "calling": [
                "FUN_08004388",
                "FUN_08003cc8"
            ],
            "called": [
                "FUN_080034f4",
                "FUN_08003582",
                "FUN_08002d72",
                "FUN_08000fb4",
                "FUN_08004fdc",
                "FUN_0800354a",
                "FUN_080031fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003cc8": {
            "entrypoint": "0x08003cc8",
            "current_name": "initialize_data_08003cc8",
            "code": "\nvoid initializeData_08003cc8(void)\n\n{\n  int result;\n  undefined4 temp;\n  \n  result = FUN_080034f4(0x38,&DAT_08005ca0);\n  if (result != 0) {\n    temp = FUN_080034f4(0x38,&DAT_08005ca0);\n    DAT_2000008a = FUN_0800351e(temp,&DAT_08005c10);\n    DAT_20000088 = 0x38;\n    DAT_20000078 = 0x2580;\n    DAT_20000084 = 0;\n    DAT_2000007c = 0;\n    DAT_20000080 = 0;\n    FUN_08003978(&DAT_20000030);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003cc8": "initialize_data_08003cc8",
                "iVar1": "result",
                "uVar2": "temp"
            },
            "calling": [
                "FUN_08003d18"
            ],
            "called": [
                "FUN_080034f4",
                "FUN_0800351e",
                "FUN_08003978"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003d18": {
            "entrypoint": "0x08003d18",
            "current_name": "process_data_08003d18",
            "code": "\nuint processData_08003d18(undefined4 input,uint value)\n\n{\n  int result1;\n  int result2;\n  uint counter;\n  \n  result1 = FUN_08000e30();\n  result2 = FUN_080034f4(0x38,&DAT_08005ca0);\n  if (result2 == 0) {\n    return 0;\n  }\n  for (counter = 0;\n      (counter < 10 &&\n      (((&DAT_200002b4)[counter] == 0 ||\n       (result2 = FUN_080034f4(0x38,&DAT_08005ca0), *(int *)(&DAT_200002b4)[counter] != result2))));\n      counter = counter + 1 & 0xff) {\n  }\n  if (9 < counter) {\n    if ((9 < DAT_20000074) && (FUN_08003cc8(), 9 < DAT_20000074)) {\n      return 0;\n    }\n    counter = (uint)DAT_20000074;\n  }\n  do {\n    result2 = FUN_08002dd0((&DAT_200002b4)[counter],input,value & 0xffff,1000);\n    if (result2 == 0) {\n      return value;\n    }\n    result2 = FUN_08000e30();\n  } while ((uint)(result2 - result1) < 1000);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003d18": "process_data_08003d18",
                "param_1": "input",
                "param_2": "value",
                "iVar1": "result1",
                "iVar2": "result2",
                "uVar3": "counter"
            },
            "calling": [
                "FUN_080040ec"
            ],
            "called": [
                "FUN_080034f4",
                "FUN_08000e30",
                "FUN_08003cc8",
                "FUN_08002dd0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003dd0": {
            "entrypoint": "0x08003dd0",
            "current_name": "is_bitwise_and_equal_08003dd0",
            "code": "\nbool is_bitwise_and_equal_08003dd0(int input_value)\n\n{\n  uint result;\n  \n  result = FUN_0800312c((&DAT_200002b4)[*(byte *)(input_value + 0x44)]);\n  return (result & 0x22) == 0x22;\n}\n\n",
            "renaming": {
                "FUN_08003dd0": "is_bitwise_and_equal_08003dd0",
                "param_1": "input_value",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08003e54",
                "FUN_08003e18"
            ],
            "called": [
                "FUN_0800312c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003df4": {
            "entrypoint": "0x08003df4",
            "current_name": "is_flag_set_08003df4",
            "code": "\nbool isFlagSet_08003df4(int flagValue)\n\n{\n  uint calculatedFlag;\n  \n  calculatedFlag = FUN_0800312c((&DAT_200002b4)[*(byte *)(flagValue + 0x44)]);\n  return (calculatedFlag & 0x21) == 0x21;\n}\n\n",
            "renaming": {
                "FUN_08003df4": "is_flag_set_08003df4",
                "param_1": "flagValue",
                "uVar1": "calculatedFlag"
            },
            "calling": [
                "FUN_080042e8"
            ],
            "called": [
                "FUN_0800312c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003e18": {
            "entrypoint": "0x08003e18",
            "current_name": "extract_data_from_binary_08003e18",
            "code": "\nundefined4 extractDataFromBinary_08003e18(int binaryAddress,undefined *outputData,undefined4 param1,undefined4 param2)\n\n{\n  int result;\n  \n  if (binaryAddress == 0) {\n    return 0xffffffff;\n  }\n  result = FUN_08003dd0();\n  if (result == 0) {\n    *outputData = *(undefined *)(binaryAddress + 0x45);\n    FUN_08002efa((&DAT_200002b4)[*(byte *)(binaryAddress + 0x44)],binaryAddress + 0x45,1,&DAT_200002b4,param2);\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08003e18": "extract_data_from_binary_08003e18",
                "param_1": "binaryAddress",
                "param_2": "outputData",
                "param_3": "param1",
                "param_4": "param2",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080042ac"
            ],
            "called": [
                "FUN_08002efa",
                "FUN_08003dd0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003e54": {
            "entrypoint": "0x08003e54",
            "current_name": "update_data_08003e54",
            "code": "\nvoid updateData_08003e54(int dataPointer,undefined4 newValue,undefined4 unused1,undefined4 unused2)\n\n{\n  int result;\n  uint index;\n  \n  if (dataPointer != 0) {\n    result = FUN_08003dd0();\n    if (result == 0) {\n      index = (uint)*(byte *)(dataPointer + 0x44);\n      *(undefined4 *)(&DAT_20000214 + index * 4) = newValue;\n      *(int *)(&DAT_2000023c + index * 4) = dataPointer;\n      FUN_08000e60((int)*(char *)(dataPointer + 0x5c),0,1,index,unused2);\n      FUN_08000ec4((int)*(char *)(dataPointer + 0x5c));\n      FUN_08002efa((&DAT_200002b4)[*(byte *)(dataPointer + 0x44)],dataPointer + 0x45,1);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003e54": "update_data_08003e54",
                "param_1": "dataPointer",
                "param_2": "newValue",
                "param_3": "unused1",
                "param_4": "unused2",
                "iVar1": "result",
                "uVar2": "index"
            },
            "calling": [
                "FUN_08004388"
            ],
            "called": [
                "FUN_08002efa",
                "FUN_08000e60",
                "FUN_08003dd0",
                "FUN_08000ec4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003eac": {
            "entrypoint": "0x08003eac",
            "current_name": "update_data_08003eac",
            "code": "\nvoid updateData_08003eac(int dataPtr,undefined4 newValue)\n\n{\n  byte byteValue;\n  \n  if (dataPtr != 0) {\n    byteValue = *(byte *)(dataPtr + 0x44);\n    *(undefined4 *)(&DAT_20000264 + (uint)byteValue * 4) = newValue;\n    *(int *)(&DAT_2000028c + (uint)byteValue * 4) = dataPtr;\n    FUN_08000e60((int)*(char *)(dataPtr + 0x5c),0,2);\n    FUN_08000ec4((int)*(char *)(dataPtr + 0x5c));\n    FUN_08002eb2((&DAT_200002b4)[*(byte *)(dataPtr + 0x44)],\n                 *(int *)(dataPtr + 0x68) + (uint)*(ushort *)(dataPtr + 0x6e),1);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003eac": "update_data_08003eac",
                "param_1": "dataPtr",
                "param_2": "newValue",
                "bVar1": "byteValue"
            },
            "calling": [
                "FUN_080042e8"
            ],
            "called": [
                "FUN_08000e60",
                "FUN_08000ec4",
                "FUN_08002eb2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f00": {
            "entrypoint": "0x08003f00",
            "current_name": "find_value_index_08003f00",
            "code": "\nuint find_value_index_08003f00(int value)\n\n{\n  uint index;\n  \n  if (value == 0) {\n    index = 10;\n  }\n  else {\n    index = 0;\n    while( true ) {\n      if (9 < index) {\n        return index;\n      }\n      if (value == (&DAT_200002b4)[index]) break;\n      index = index + 1 & 0xff;\n    }\n  }\n  return index;\n}\n\n",
            "renaming": {
                "FUN_08003f00": "find_value_index_08003f00",
                "param_1": "value",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08003f24",
                "FUN_08003f48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f24": {
            "entrypoint": "0x08003f24",
            "current_name": "execute_function_based_on_value_08003f24",
            "code": "\nvoid executeFunctionBasedOnValue_08003f24(void)\n\n{\n  uint returnValue;\n  \n  returnValue = FUN_08003f00();\n  if (returnValue < 10) {\n    (**(code **)(&DAT_20000214 + returnValue * 4))(*(undefined4 *)(&DAT_2000023c + returnValue * 4));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f24": "execute_function_based_on_value_08003f24",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08002f66"
            ],
            "called": [
                "FUN_08003f00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f48": {
            "entrypoint": "0x08003f48",
            "current_name": "execute_function_08003f48",
            "code": "\nvoid executeFunction_08003f48(void)\n\n{\n  uint result;\n  int functionResult;\n  int dataAddress;\n  \n  result = FUN_08003f00();\n  dataAddress = *(int *)(&DAT_2000028c + result * 4);\n  if ((result < 10) && (functionResult = (**(code **)(&DAT_20000264 + result * 4))(dataAddress), functionResult != -1)) {\n    FUN_08002eb2((&DAT_200002b4)[*(byte *)(dataAddress + 0x44)],\n                 *(int *)(dataAddress + 0x68) + (uint)*(ushort *)(dataAddress + 0x6e),1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f48": "execute_function_08003f48",
                "uVar1": "result",
                "iVar2": "functionResult",
                "iVar3": "dataAddress"
            },
            "calling": [
                "FUN_08002f4c"
            ],
            "called": [
                "FUN_08003f00",
                "FUN_08002eb2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f94": {
            "entrypoint": "0x08003f94",
            "current_name": "FUNC_08003f94",
            "code": "\nvoid FUNC_08003f94(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f94": "FUNC_08003f94"
            },
            "calling": [
                "FUN_08002ffc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004094": {
            "entrypoint": "0x08004094",
            "current_name": "get_memory_block_08004094",
            "code": "\nundefined * getMemoryBlock_08004094(int size)\n\n{\n  undefined *memoryBlock;\n  \n  if (DAT_200002dc == (undefined *)0x0) {\n    DAT_200002dc = &DAT_20000678;\n  }\n  memoryBlock = DAT_200002dc;\n  if (DAT_200002dc + size <= endOfStack) {\n    DAT_200002dc = DAT_200002dc + size;\n    return memoryBlock;\n  }\n  DAT_20000674 = 0xc;\n  return (undefined *)0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08004094": "get_memory_block_08004094",
                "param_1": "size",
                "puVar1": "memoryBlock",
                "&stack0x00000000": "endOfStack"
            },
            "calling": [
                "FUN_0800500c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040d0": {
            "entrypoint": "0x080040d0",
            "current_name": "get_error_code_080040d0",
            "code": "\nerror_code get_error_code_080040d0(void)\n\n{\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080040d0": "get_error_code_080040d0",
                "undefined4": "error_code"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040d6": {
            "entrypoint": "0x080040d6",
            "current_name": "set_memory_to2000_080040d6",
            "code": "\nundefined4 setMemoryTo2000_080040d6(undefined4 param1,int offset)\n\n{\n  *(undefined4 *)(offset + 4) = 0x2000;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080040d6": "set_memory_to2000_080040d6",
                "param_1": "param1",
                "param_2": "offset"
            },
            "calling": [
                "FUN_080056d4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040e0": {
            "entrypoint": "0x080040e0",
            "current_name": "check_success_080040e0",
            "code": "\nundefined4 check_success_080040e0(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080040e0": "check_success_080040e0"
            },
            "calling": [
                "FUN_080056f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040e4": {
            "entrypoint": "0x080040e4",
            "current_name": "initialize_080040e4",
            "code": "\nvoid initialize_080040e4(void)\n\n{\n  result 0;\n}\n\n",
            "renaming": {
                "FUN_080040e4": "initialize_080040e4",
                "undefined4": "void",
                "return": "result"
            },
            "calling": [
                "FUN_08005718"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040e8": {
            "entrypoint": "0x080040e8",
            "current_name": "initialize_program_080040e8",
            "code": "\nundefined4 initializeProgram_080040e8(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080040e8": "initialize_program_080040e8"
            },
            "calling": [
                "FUN_0800573c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040ec": {
            "entrypoint": "0x080040ec",
            "current_name": "call_function_with_params_080040ec",
            "code": "\nvoid callFunctionWithParams_080040ec(undefined4 param1,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  FUN_08003d18(param2,param3,param3,param4,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080040ec": "call_function_with_params_080040ec",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [
                "FUN_0800562a"
            ],
            "called": [
                "FUN_08003d18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040f8": {
            "entrypoint": "0x080040f8",
            "current_name": "infinite_loop_080040f8",
            "code": "\nvoid infiniteLoop_080040f8(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080040f8": "infinite_loop_080040f8"
            },
            "calling": [
                "FUN_080051ac",
                "FUN_080040f8"
            ],
            "called": [
                "FUN_080040f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040fc": {
            "entrypoint": "0x080040fc",
            "current_name": "initialize_data_080040fc",
            "code": "\nundefined4 initializeData_080040fc(void)\n\n{\n  DAT_20000674 = 0x16;\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080040fc": "initialize_data_080040fc"
            },
            "calling": [
                "FUN_080055d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800410c": {
            "entrypoint": "0x0800410c",
            "current_name": "check_result_0800410c",
            "code": "\nint check_result_0800410c(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800410c": "check_result_0800410c",
                "undefined4": "int"
            },
            "calling": [
                "thunk_FUN_0800410c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004110": {
            "entrypoint": "0x08004110",
            "current_name": "process_data_08004110",
            "code": "\nvoid processData_08004110(uint dataIndex,undefined4 option,undefined4 param3,undefined *buffer)\n\n{\n  int result;\n  undefined *pointer;\n  int value;\n  \n  if (dataIndex < 0x60) {\n    value = (int)*(short *)(&DAT_08005d3c + dataIndex * 2);\n    pointer = &DAT_08005d3c;\n  }\n  else {\n    value = -1;\n    pointer = buffer;\n  }\n  if (value != -1) {\n    result = FUN_08003138(value,&DAT_200002e0,param3,pointer,buffer);\n    if (result != 0) {\n      result = FUN_0800355e(value,&DAT_08005a18);\n      if (result == 0) {\n        result = FUN_0800355e(value,&DAT_08005a3c);\n        if (result != 0) {\n          FUN_08003414(value);\n        }\n      }\n      else {\n        FUN_080033d8(value);\n      }\n      FUN_0800316c(value,&DAT_200002e0);\n    }\n    switch(option) {\n    case 0:\n      FUN_08003486(value,0);\n      break;\n    case 1:\n      FUN_08003486(value,1,0);\n      break;\n    case 2:\n      FUN_08003486(value,0,1);\n      break;\n    case 3:\n      FUN_08003486(value,0,2);\n    }\n    FUN_0800314e(value,&DAT_2000030c);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004110": "process_data_08004110",
                "param_1": "dataIndex",
                "param_2": "option",
                "param_3": "param3",
                "param_4": "buffer",
                "iVar1": "result",
                "puVar2": "pointer",
                "iVar3": "value"
            },
            "calling": [
                "FUN_08000600"
            ],
            "called": [
                "FUN_0800314e",
                "FUN_080033d8",
                "FUN_08003138",
                "FUN_08003414",
                "FUN_0800355e",
                "FUN_08003486",
                "FUN_0800316c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080041bc": {
            "entrypoint": "0x080041bc",
            "current_name": "process_data_080041bc",
            "code": "\nvoid processData_080041bc(uint index,undefined4 value1,undefined4 value2,undefined *dataBuffer)\n\n{\n  int result;\n  undefined4 shiftedValue;\n  undefined *dataPointer;\n  uint data;\n  \n  if (index < 0x60) {\n    data = (uint)*(short *)(&DAT_08005d3c + index * 2);\n    dataPointer = &DAT_08005d3c;\n  }\n  else {\n    data = 0xffffffff;\n    dataPointer = dataBuffer;\n  }\n  if ((data != 0xffffffff) &&\n     (result = FUN_08003138(data,&DAT_2000030c,value2,dataPointer,dataBuffer), result != 0)) {\n    shiftedValue = FUN_0800318c((data << 0x18) >> 0x1c);\n    FUN_080034b6(shiftedValue,1 << (data & 0xf) & 0xffff,value1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080041bc": "process_data_080041bc",
                "param_1": "index",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "dataBuffer",
                "iVar1": "result",
                "uVar2": "shiftedValue",
                "puVar3": "dataPointer",
                "uVar4": "data"
            },
            "calling": [
                "FUN_0800076c",
                "FUN_08000600",
                "FUN_080006b4"
            ],
            "called": [
                "FUN_0800318c",
                "FUN_08003138",
                "FUN_080034b6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004204": {
            "entrypoint": "0x08004204",
            "current_name": "initialize_system_08004204",
            "code": "\nvoid initialize_system_08004204(void)\n\n{\n  FUN_0800346c();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004204": "initialize_system_08004204"
            },
            "calling": [
                "FUN_0800076c",
                "FUN_08000b54"
            ],
            "called": [
                "FUN_0800346c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004240": {
            "entrypoint": "0x08004240",
            "current_name": "calculate_checksum_08004240",
            "code": "\nushort calculateChecksum_08004240(int baseAddress)\n\n{\n  return (*(short *)(baseAddress + 0x138) + 0x40) - *(short *)(baseAddress + 0x13a) & 0x3f;\n}\n\n",
            "renaming": {
                "FUN_08004240": "calculate_checksum_08004240",
                "param_1": "baseAddress"
            },
            "calling": [
                "FUN_08004338"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080042ac": {
            "entrypoint": "0x080042ac",
            "current_name": "update_data_080042ac",
            "code": "\nvoid updateData_080042ac(int dataPtr)\n\n{\n  int result;\n  ushort newValue;\n  undefined newData;\n  \n  result = FUN_08003e18(dataPtr,&newData);\n  if ((result == 0) &&\n     (newValue = *(short *)(dataPtr + 100) + 1U & 0x3f, newValue != *(ushort *)(dataPtr + 0x66))) {\n    *(undefined *)(*(int *)(dataPtr + 0x60) + (uint)*(ushort *)(dataPtr + 100)) = newData;\n    *(ushort *)(dataPtr + 100) = newValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080042ac": "update_data_080042ac",
                "param_1": "dataPtr",
                "iVar1": "result",
                "uVar2": "newValue",
                "local_9": "newData"
            },
            "calling": [],
            "called": [
                "FUN_08003e18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080042e8": {
            "entrypoint": "0x080042e8",
            "current_name": "set_flag_and_store_data_080042e8",
            "code": "\nundefined4 setFlagAndStoreData_080042e8(int dataPointer,undefined dataValue)\n\n{\n  byte byteCounter;\n  byte modifiedCounter;\n  int counter;\n  \n  *(undefined *)(dataPointer + 0x10) = 1;\n  counter = *(ushort *)(dataPointer + 0x140) + 1;\n  byteCounter = (byte)counter;\n  modifiedCounter = byteCounter & 0x7f;\n  if (counter == 0) {\n    modifiedCounter = -(-byteCounter & 0x7f);\n  }\n  do {\n  } while (*(ushort *)(dataPointer + 0x142) == (ushort)modifiedCounter);\n  *(undefined *)(*(int *)(dataPointer + 0x13c) + (uint)*(ushort *)(dataPointer + 0x140)) = dataValue;\n  *(ushort *)(dataPointer + 0x140) = (ushort)modifiedCounter;\n  counter = FUN_08003df4(dataPointer + 0xd4);\n  if (counter == 0) {\n    FUN_08003eac(dataPointer + 0xd4,&LAB_0800420c_1);\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080042e8": "set_flag_and_store_data_080042e8",
                "param_1": "dataPointer",
                "param_2": "dataValue",
                "iVar3": "counter",
                "bVar1": "byteCounter",
                "bVar2": "modifiedCounter"
            },
            "calling": [],
            "called": [
                "FUN_08003eac",
                "FUN_08003df4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004338": {
            "entrypoint": "0x08004338",
            "current_name": "FUNC_08004338",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800433e) */\n/* WARNING: Removing unreachable block (ram,0x08004350) */\n/* WARNING: Removing unreachable block (ram,0x08004346) */\n/* WARNING: Removing unreachable block (ram,0x08004358) */\n\nvoid FUNC_08004338(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004338": "FUNC_08004338"
            },
            "calling": [
                "FUN_08004658"
            ],
            "called": [
                "FUN_08004240"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004364": {
            "entrypoint": "0x08004364",
            "current_name": "initialize_data_08004364",
            "code": "\nvoid initializeData_08004364(int dataAddress)\n\n{\n  *(int *)(dataAddress + 0x134) = dataAddress + 0x11;\n  *(undefined2 *)(dataAddress + 0x138) = 0;\n  *(undefined2 *)(dataAddress + 0x13a) = 0;\n  *(int *)(dataAddress + 0x13c) = dataAddress + 0x51;\n  *(undefined2 *)(dataAddress + 0x140) = 0;\n  *(undefined2 *)(dataAddress + 0x142) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004364": "initialize_data_08004364",
                "param_1": "dataAddress"
            },
            "calling": [
                "FUN_0800447c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004388": {
            "entrypoint": "0x08004388",
            "current_name": "initialize_serial_communication_08004388",
            "code": "\nvoid initializeSerialCommunication_08004388(int serialPort,undefined4 baudRate,byte configuration)\n\n{\n  uint bufferIndex;\n  byte configBits;\n  int configValue;\n  code *interruptHandler;\n  \n  *(undefined4 *)(serialPort + 0x11c) = baudRate;\n  *(byte *)(serialPort + 0x144) = configuration;\n  configBits = configuration & 7;\n  if (configBits == 4) {\n    configValue = 7;\n  }\n  else if (configBits == 6) {\n    configValue = 8;\n  }\n  else if (configBits == 2) {\n    configValue = 6;\n  }\n  else {\n    configValue = 0;\n  }\n  if ((configuration & 0x30) == 0x30) {\n    *(undefined4 *)(serialPort + 0x128) = 0x600;\n    configValue = configValue + 1;\n  }\n  else if ((configuration & 0x20) == 0) {\n    *(undefined4 *)(serialPort + 0x128) = 0;\n  }\n  else {\n    *(undefined4 *)(serialPort + 0x128) = 0x400;\n    configValue = configValue + 1;\n  }\n  if ((configuration & 8) == 0) {\n    *(undefined4 *)(serialPort + 0x124) = 0;\n  }\n  else {\n    *(undefined4 *)(serialPort + 0x124) = 0x2000;\n  }\n  if (configValue == 8) {\n    *(undefined4 *)(serialPort + 0x120) = 0;\n  }\n  else if (configValue == 9) {\n    *(undefined4 *)(serialPort + 0x120) = 0x1000;\n  }\n  else {\n    configValue = 0;\n  }\n  if (configValue != 0) {\n    FUN_08003978(serialPort + 0xd4);\n    FUN_08003e54(serialPort + 0xd4,0x80042ad);\n    return;\n  }\n  interruptHandler = (code *)0x8004432;\n  FUN_08004808(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/cores/arduino/HardwareSerial.cpp\"\n               ,299,\"void HardwareSerial::begin(long unsigned int, byte)\");\n  if (bufferIndex < 0x60) {\n    uRam0000012e = *(undefined2 *)(&DAT_08005d3c + bufferIndex * 2);\n  }\n  else {\n    uRam0000012e = 0xffff;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08004452. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*interruptHandler)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004388": "initialize_serial_communication_08004388",
                "param_1": "serialPort",
                "param_2": "baudRate",
                "param_3": "configuration",
                "extraout_r1": "bufferIndex",
                "bVar1": "configBits",
                "iVar2": "configValue",
                "UNRECOVERED_JUMPTABLE": "interruptHandler"
            },
            "calling": [
                "FUN_08000600"
            ],
            "called": [
                "FUN_08004808",
                "FUN_08003e54",
                "FUN_08003978"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004444": {
            "entrypoint": "0x08004444",
            "current_name": "set_threshold_value_08004444",
            "code": "\nvoid setThresholdValue_08004444(int baseAddress,uint index)\n\n{\n  undefined2 thresholdValue;\n  code *jumpTableFunc;\n  \n  if (index < 0x60) {\n    thresholdValue = *(undefined2 *)(&DAT_08005d3c + index * 2);\n  }\n  else {\n    thresholdValue = 0xffff;\n  }\n  *(undefined2 *)(baseAddress + 0x12e) = thresholdValue;\n                    /* WARNING: Could not recover jumptable at 0x08004452. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTableFunc)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004444": "set_threshold_value_08004444",
                "param_1": "baseAddress",
                "param_2": "index",
                "uVar1": "thresholdValue",
                "UNRECOVERED_JUMPTABLE": "jumpTableFunc"
            },
            "calling": [
                "FUN_0800447c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004460": {
            "entrypoint": "0x08004460",
            "current_name": "set_default_value_08004460",
            "code": "\nvoid setDefaultValue_08004460(int destinationAddress,uint index)\n\n{\n  undefined2 defaultValue;\n  \n  if (index < 0x60) {\n    defaultValue = *(undefined2 *)(&DAT_08005d3c + index * 2);\n  }\n  else {\n    defaultValue = 0xffff;\n  }\n  *(undefined2 *)(destinationAddress + 300) = defaultValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004460": "set_default_value_08004460",
                "param_1": "destinationAddress",
                "param_2": "index",
                "uVar1": "defaultValue"
            },
            "calling": [
                "FUN_0800447c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800447c": {
            "entrypoint": "0x0800447c",
            "current_name": "initialize_data_0800447c",
            "code": "\nundefined4 *\ninitialize_data_0800447c(undefined4 *data_array,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  undefined2 result;\n  \n  data_array[1] = 0;\n  data_array[2] = 1000;\n  *data_array = &PTR_FUN_080042e8_1_08005ed4;\n  if (data_array == &DAT_20000338) {\n    FUN_08004444(&DAT_20000338,0x4c,param_3,&DAT_20000338,param_4);\n    FUN_08004460(&DAT_20000338,0x4d);\n  }\n  else {\n    result = FUN_0800351e(param_2,&DAT_08005c10);\n    *(undefined2 *)((int)data_array + 0x12e) = result;\n    result = FUN_0800351e(param_2,&DAT_08005ca0);\n    *(undefined2 *)(data_array + 0x4b) = result;\n  }\n  FUN_08004364(data_array);\n  return data_array;\n}\n\n",
            "renaming": {
                "FUN_0800447c": "initialize_data_0800447c",
                "param_1": "data_array",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080044d8"
            ],
            "called": [
                "FUN_08004444",
                "FUN_08004364",
                "FUN_0800351e",
                "FUN_08004460"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080044d8": {
            "entrypoint": "0x080044d8",
            "current_name": "check_and_process_080044d8",
            "code": "\nvoid check_and_process_080044d8(int flag,int value,undefined4 arg1,undefined4 arg2)\n\n{\n  if (flag != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    FUN_0800447c(&DAT_20000338,0x40004800,arg1,0xffff,arg2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080044d8": "check_and_process_080044d8",
                "param_1": "flag",
                "param_2": "value",
                "param_3": "arg1",
                "param_4": "arg2"
            },
            "calling": [],
            "called": [
                "FUN_0800447c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004544": {
            "entrypoint": "0x08004544",
            "current_name": "initialize_data_08004544",
            "code": "\nvoid initializeData_08004544(undefined4 *outputPointer,undefined value1,undefined value2,undefined value3,\n                 undefined value4)\n\n{\n  *outputPointer = &DAT_08005f28;\n  *(undefined *)(outputPointer + 1) = value1;\n  *(undefined *)((int)outputPointer + 5) = value2;\n  *(undefined *)((int)outputPointer + 6) = value3;\n  *(undefined *)((int)outputPointer + 7) = value4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004544": "initialize_data_08004544",
                "param_1": "outputPointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "value4"
            },
            "calling": [
                "FUN_08004560"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004560": {
            "entrypoint": "0x08004560",
            "current_name": "check_parameters_08004560",
            "code": "\nvoid check_parameters_08004560(int first_parameter,int second_parameter)\n\n{\n  if ((first_parameter == 1) && (second_parameter == 0xffff)) {\n    FUN_08004544(&DAT_20000480,0,0,0,0);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004560": "check_parameters_08004560",
                "param_1": "first_parameter",
                "param_2": "second_parameter"
            },
            "calling": [],
            "called": [
                "FUN_08004544"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004640": {
            "entrypoint": "0x08004640",
            "current_name": "merge_params_08004640",
            "code": "\nuint mergeParams_08004640(int value1,uint value2)\n\n{\n  return value2 | value1 << 8;\n}\n\n",
            "renaming": {
                "FUN_08004640": "merge_params_08004640",
                "param_1": "value1",
                "param_2": "value2"
            },
            "calling": [
                "FUN_08000a4e",
                "FUN_080008e2",
                "FUN_08000b04",
                "FUN_08000998",
                "FUN_080007f0",
                "FUN_08000a7a",
                "FUN_08000a00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004646": {
            "entrypoint": "0x08004646",
            "current_name": "FUNC_08004646",
            "code": "\nvoid FUNC_08004646(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004646": "FUNC_08004646"
            },
            "calling": [
                "FUN_08004658"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004648": {
            "entrypoint": "0x08004648",
            "current_name": "initialize_08004648",
            "code": "\nvoid initialize_08004648(void)\n\n{\n  FUN_08000e3c(3);\n  FUN_08000d8e();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004648": "initialize_08004648"
            },
            "calling": [
                "FUN_08004884"
            ],
            "called": [
                "FUN_08000e3c",
                "FUN_08000d8e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004658": {
            "entrypoint": "0x08004658",
            "current_name": "execute_continuous_08004658",
            "code": "\nvoid executeContinuous_08004658(void)\n\n{\n  FUNC_08004646();\n  FUN_08000c4c();\n  do {\n    FUN_08000c64();\n    FUNC_08004338();\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08004658": "execute_continuous_08004658"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_08004338",
                "FUN_08000c64",
                "FUN_08000c4c",
                "FUN_08004646"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004678": {
            "entrypoint": "0x08004678",
            "current_name": "count_set_bits_08004678",
            "code": "\nchar count_set_bits_08004678(uint input_number)\n\n{\n  char bit_count;\n  \n  bit_count = '\\0';\n  for (; input_number != 1; input_number = input_number >> 1) {\n    bit_count = bit_count + '\\x01';\n  }\n  return bit_count;\n}\n\n",
            "renaming": {
                "FUN_08004678": "count_set_bits_08004678",
                "param_1": "input_number",
                "cVar1": "bit_count"
            },
            "calling": [
                "FUN_080047d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080046b4": {
            "entrypoint": "0x080046b4",
            "current_name": "initialize_parameters_080046b4",
            "code": "\nvoid initializeParameters_080046b4(int condition,int value,undefined4 unknown1,undefined4 unknown2)\n\n{\n  if (condition != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    DAT_20000488 = 6;\n    DAT_20000494 = 0;\n    DAT_2000049c = 7;\n    DAT_200004a8 = 0;\n    DAT_200004b0 = 8;\n    DAT_200004bc = 0;\n    DAT_200004c4 = 9;\n    DAT_200004d0 = 0;\n    DAT_200004d8 = 10;\n    DAT_200004e4 = 0;\n    DAT_200004ec = 0x17;\n    DAT_200004f8 = 0;\n    DAT_20000500 = 0x17;\n    DAT_2000050c = 0;\n    DAT_20000514 = 0x17;\n    DAT_20000520 = 0;\n    DAT_20000528 = 0x17;\n    DAT_20000534 = 0;\n    DAT_2000053c = 0x17;\n    DAT_20000548 = 0;\n    DAT_20000550 = 0x28;\n    DAT_2000055c = 0;\n    DAT_20000564 = 0x28;\n    DAT_20000570 = 0;\n    DAT_20000578 = 0x28;\n    DAT_20000584 = 0;\n    DAT_2000058c = 0x28;\n    DAT_20000598 = 0;\n    DAT_200005a0 = 0x28;\n    DAT_200005ac = 0;\n    DAT_200005b4 = 0x28;\n    DAT_200005c0 = 0;\n    FUN_080047fe(0,&unknownLabel,&DAT_20000000,&DAT_20000488,unknown2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080046b4": "initialize_parameters_080046b4",
                "param_1": "condition",
                "param_2": "value",
                "param_3": "unknown1",
                "param_4": "unknown2",
                "LAB_0800468c_1": "unknownLabel"
            },
            "calling": [],
            "called": [
                "FUN_080047fe"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047c0": {
            "entrypoint": "0x080047c0",
            "current_name": "execute_action_080047c0",
            "code": "\nvoid executeAction_080047c0(int action_param)\n\n{\n  int index;\n  \n  if (*(int *)(action_param + 8) != 0) {\n    (**(code **)(action_param + 0xc))();\n    return;\n  }\n  FUN_08005760();\n  index = FUN_08004678();\n  if ((&DAT_20000494)[index * 5] != 0) {\n    executeAction_080047c0();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080047c0": "execute_action_080047c0",
                "param_1": "action_param",
                "iVar1": "index"
            },
            "calling": [
                "FUN_080047d0"
            ],
            "called": [
                "FUN_08005760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047d0": {
            "entrypoint": "0x080047d0",
            "current_name": "check_and_execute_function_080047d0",
            "code": "\nvoid checkAndExecuteFunction_080047d0(void)\n\n{\n  int result;\n  \n  result = FUN_08004678();\n  if ((&DAT_20000494)[result * 5] != 0) {\n    FUN_080047c0();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080047d0": "check_and_execute_function_080047d0",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080011a4"
            ],
            "called": [
                "FUN_08004678",
                "FUN_080047c0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047fe": {
            "entrypoint": "0x080047fe",
            "current_name": "call_with_swapped_params_080047fe",
            "code": "\nvoid callWithSwappedParams_080047fe(undefined4 swappedParam1,undefined4 swappedParam2)\n\n{\n  FUN_08004844(swappedParam2,swappedParam1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080047fe": "call_with_swapped_params_080047fe",
                "param_1": "swappedParam1",
                "param_2": "swappedParam2"
            },
            "calling": [
                "FUN_080046b4"
            ],
            "called": [
                "FUN_08004844"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004808": {
            "entrypoint": "0x08004808",
            "current_name": "assertion_failure_08004808",
            "code": "\nvoid assertionFailure_08004808(undefined4 assertion,undefined4 file,char *line,undefined4 function)\n\n{\n  undefined4 assertionValue;\n  char *message;\n  undefined8 returnValue;\n  undefined4 extraData;\n  \n  assertionValue = *(undefined4 *)(DAT_200000a0 + 0xc);\n  extraData = function;\n  if (line == (char *)0x0) goto LAB_0800482c;\n  message = \", function: \";\n  do {\n    FUN_08004860(assertionValue,\"assertion \\\"%s\\\" failed: file \\\"%s\\\", line %d%s%s\\n\",function,assertion,file\n                 ,message,line,extraData);\n    returnValue = FUN_080051ac();\n    file = (undefined4)((ulonglong)returnValue >> 0x20);\n    assertionValue = (undefined4)returnValue;\nLAB_0800482c:\n    line = \"\";\n    message = line;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08004808": "assertion_failure_08004808",
                "param_1": "assertion",
                "param_2": "file",
                "param_3": "line",
                "param_4": "function",
                "uVar1": "assertionValue",
                "pcVar2": "message",
                "uVar3": "returnValue",
                "uVar4": "extraData"
            },
            "calling": [
                "FUN_08004388"
            ],
            "called": [
                "FUN_080051ac",
                "FUN_08004860"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004844": {
            "entrypoint": "0x08004844",
            "current_name": "left_shift_uint64_08004844",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800484c) */\n\nlonglong left_shift_uint64_08004844(undefined4 ptr_value,uint input_value)\n\n{\n  return (ulonglong)input_value << 0x20;\n}\n\n",
            "renaming": {
                "FUN_08004844": "left_shift_uint64_08004844",
                "param_1": "ptr_value",
                "param_2": "input_value"
            },
            "calling": [
                "FUN_080047fe"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004860": {
            "entrypoint": "0x08004860",
            "current_name": "execute_function_08004860",
            "code": "\nvoid executeFunction_08004860(undefined4 inputParam1,undefined4 inputParam2,undefined4 stackParam1,undefined4 stackParam2)\n\n{\n  undefined4 stackVar1;\n  undefined4 stackVar2;\n  \n  stackVar1 = stackParam1;\n  stackVar2 = stackParam2;\n  FUN_08004a84(DAT_200000a0,inputParam1,inputParam2,&stackVar1,inputParam1,&stackVar1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004860": "execute_function_08004860",
                "param_1": "inputParam1",
                "param_2": "inputParam2",
                "param_3": "stackParam1",
                "param_4": "stackParam2",
                "uStack_8": "stackVar1",
                "uStack_4": "stackVar2"
            },
            "calling": [
                "FUN_08004808"
            ],
            "called": [
                "FUN_08004a84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004884": {
            "entrypoint": "0x08004884",
            "current_name": "execute_functions_08004884",
            "code": "\nvoid executeFunctions_08004884(void)\n\n{\n  int index;\n  \n  for (index = 0; index != 0; index = index + 1) {\n    (*(functionPointer *)(&DAT_08006008)[index])();\n  }\n  FUNC_080059f8();\n  for (index = 0; index != 10; index = index + 1) {\n    (*(functionPointer *)(&DAT_08006008)[index])();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004884": "execute_functions_08004884",
                "iVar1": "index",
                "code": "functionPointer"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_08004648",
                "FUN_080059f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080048cc": {
            "entrypoint": "0x080048cc",
            "current_name": "memset_080048cc",
            "code": "\nvoid memset_080048cc(undefined *destination,undefined value,int size)\n\n{\n  undefined *end_address;\n  \n  end_address = destination + size;\n  for (; destination != end_address; destination = destination + 1) {\n    *destination = value;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080048cc": "memset_080048cc",
                "param_1": "destination",
                "param_2": "value",
                "param_3": "size",
                "puVar1": "end_address"
            },
            "calling": [
                "FUN_08005400",
                "FUN_08005374",
                "FUN_0800532c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080048dc": {
            "entrypoint": "0x080048dc",
            "current_name": "extract_and_update_data_080048dc",
            "code": "\nvoid extractAndUpdateData_080048dc(undefined4 *outputData,int inputSize,undefined4 param_3,undefined4 param_4)\n\n{\n  int *tempVar1;\n  int **tempPtr1;\n  int **tempPtr2;\n  int **currentPtr1;\n  int **currentPtr2;\n  int **updatedPtr1;\n  bool isConditionTrue;\n  \n  if (inputSize == 0) {\n    return;\n  }\n  updatedPtr1 = (int **)(inputSize + -4);\n  if (*(int *)(inputSize + -4) < 0) {\n    updatedPtr1 = (int **)((int)updatedPtr1 + *(int *)(inputSize + -4));\n  }\n  FUNC_0800557c();\n  currentPtr1 = (int **)&DAT_200005c8;\n  if (DAT_200005c8 == (int **)0x0) {\n    updatedPtr1[1] = (int *)0x0;\n    tempPtr2 = tempPtr1;\n    DAT_200005c8 = updatedPtr1;\n  }\n  else {\n    currentPtr1 = DAT_200005c8;\n    if (updatedPtr1 < DAT_200005c8) {\n      tempPtr2 = (int **)*updatedPtr1;\n      currentPtr1 = (int **)((int)updatedPtr1 + (int)tempPtr2);\n      isConditionTrue = DAT_200005c8 == currentPtr1;\n      if (isConditionTrue) {\n        currentPtr1 = (int **)*DAT_200005c8;\n        DAT_200005c8 = (int **)DAT_200005c8[1];\n      }\n      updatedPtr1[1] = (int *)DAT_200005c8;\n      DAT_200005c8 = updatedPtr1;\n      if (isConditionTrue) {\n        currentPtr1 = (int **)((int)currentPtr1 + (int)tempPtr2);\n        *updatedPtr1 = (int *)currentPtr1;\n      }\n    }\n    else {\n      do {\n        currentPtr2 = currentPtr1;\n        currentPtr1 = (int **)currentPtr2[1];\n        if (currentPtr1 == (int **)0x0) break;\n      } while (currentPtr1 <= updatedPtr1);\n      tempPtr2 = (int **)*currentPtr2;\n      if ((int **)((int)currentPtr2 + (int)tempPtr2) == updatedPtr1) {\n        tempPtr2 = (int **)((int)tempPtr2 + (int)*updatedPtr1);\n        *currentPtr2 = (int *)tempPtr2;\n        if (currentPtr1 == (int **)((int)currentPtr2 + (int)tempPtr2)) {\n          tempVar1 = *currentPtr1;\n          currentPtr1 = (int **)currentPtr1[1];\n          currentPtr2[1] = (int *)currentPtr1;\n          tempPtr2 = (int **)((int)tempPtr2 + (int)tempVar1);\n          *currentPtr2 = (int *)tempPtr2;\n        }\n      }\n      else if (updatedPtr1 < (int **)((int)currentPtr2 + (int)tempPtr2)) {\n        *outputData = 0xc;\n      }\n      else {\n        tempPtr2 = (int **)((int)updatedPtr1 + (int)*updatedPtr1);\n        isConditionTrue = currentPtr1 == tempPtr2;\n        if (isConditionTrue) {\n          tempPtr2 = (int **)*currentPtr1;\n          currentPtr1 = (int **)currentPtr1[1];\n        }\n        updatedPtr1[1] = (int *)currentPtr1;\n        if (isConditionTrue) {\n          tempPtr2 = (int **)((int)tempPtr2 + (int)*updatedPtr1);\n          *updatedPtr1 = (int *)tempPtr2;\n        }\n        currentPtr2[1] = (int *)updatedPtr1;\n      }\n    }\n  }\n  FUNC_0800557e(outputData,tempPtr2,currentPtr1,param_4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080048dc": "extract_and_update_data_080048dc",
                "param_1": "outputData",
                "param_2": "inputSize",
                "piVar1": "tempVar1",
                "extraout_r1": "tempPtr1",
                "ppiVar2": "tempPtr2",
                "ppiVar3": "currentPtr1",
                "ppiVar4": "currentPtr2",
                "ppiVar5": "updatedPtr1",
                "bVar6": "isConditionTrue"
            },
            "calling": [
                "FUN_080050d0",
                "FUN_080051ac"
            ],
            "called": [
                "FUN_0800557c",
                "FUN_0800557e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004978": {
            "entrypoint": "0x08004978",
            "current_name": "allocate_memory_block_08004978",
            "code": "\nuint allocateMemoryBlock_08004978(undefined4 *memBlock,uint size)\n\n{\n  uint *currentBlock;\n  int difference;\n  uint *previousBlock;\n  uint blockSizeDifference;\n  uint *lastBlock;\n  uint newBlockSize;\n  \n  newBlockSize = (size + 3 & 0xfffffffc) + 8;\n  if (newBlockSize < 0xc) {\n    newBlockSize = 0xc;\n  }\n  if (((int)newBlockSize < 0) || (newBlockSize < size)) {\n    *memBlock = 0xc;\n  }\n  else {\n    FUNC_0800557c();\n    currentBlock = DAT_200005c8;\n    lastBlock = DAT_200005c8;\n    while (previousBlock = currentBlock, previousBlock != (uint *)0x0) {\n      blockSizeDifference = *previousBlock - newBlockSize;\n      if (-1 < (int)blockSizeDifference) {\n        if (blockSizeDifference < 0xc) {\n          if (lastBlock == previousBlock) {\n            currentBlock = (uint *)lastBlock[1];\n          }\n          else {\n            currentBlock = (uint *)previousBlock[1];\n          }\n          if (lastBlock != previousBlock) {\n            lastBlock[1] = (uint)currentBlock;\n            lastBlock = previousBlock;\n            currentBlock = DAT_200005c8;\n          }\n        }\n        else {\n          *previousBlock = blockSizeDifference;\n          *(uint *)((int)previousBlock + blockSizeDifference) = newBlockSize;\n          lastBlock = (uint *)((int)previousBlock + blockSizeDifference);\n          currentBlock = DAT_200005c8;\n        }\n        goto LAB_080049dc;\n      }\n      lastBlock = previousBlock;\n      currentBlock = (uint *)previousBlock[1];\n    }\n    if (DAT_200005cc == 0) {\n      DAT_200005cc = FUN_0800500c(memBlock);\n    }\n    currentBlock = (uint *)FUN_0800500c(memBlock,newBlockSize);\n    if ((currentBlock != (uint *)0xffffffff) &&\n       ((lastBlock = (uint *)((int)currentBlock + 3U & 0xfffffffc), currentBlock == lastBlock ||\n        (difference = FUN_0800500c(memBlock,(int)lastBlock - (int)currentBlock), difference != -1)))) {\n      *lastBlock = newBlockSize;\n      currentBlock = DAT_200005c8;\nLAB_080049dc:\n      DAT_200005c8 = currentBlock;\n      FUNC_0800557e(memBlock);\n      newBlockSize = (int)lastBlock + 0xbU & 0xfffffff8;\n      difference = newBlockSize - (int)(lastBlock + 1);\n      if (difference != 0) {\n        *(int *)((int)lastBlock + difference) = -difference;\n        return newBlockSize;\n      }\n      return newBlockSize;\n    }\n    *memBlock = 0xc;\n    FUNC_0800557e(memBlock);\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004978": "allocate_memory_block_08004978",
                "param_1": "memBlock",
                "param_2": "size",
                "puVar1": "currentBlock",
                "iVar2": "difference",
                "puVar3": "previousBlock",
                "uVar4": "blockSizeDifference",
                "puVar5": "lastBlock",
                "uVar6": "newBlockSize"
            },
            "calling": [
                "FUN_080054fc",
                "FUN_08005374"
            ],
            "called": [
                "FUN_0800557c",
                "FUN_0800557e",
                "FUN_0800500c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a34": {
            "entrypoint": "0x08004a34",
            "current_name": "process_input_08004a34",
            "code": "\nuint processInput_08004a34(int data,byte inputByte,byte **inputBuffer)\n\n{\n  int tempVar1;\n  byte *tempVar2;\n  byte *tempVar3;\n  uint returnValue;\n  \n  tempVar2 = inputBuffer[2] + -1;\n  inputBuffer[2] = tempVar2;\n  if ((-1 < (int)tempVar2) ||\n     (((int)inputBuffer[6] <= (int)tempVar2 && (tempVar2 = (byte *)(uint)inputByte, tempVar2 != (byte *)0xa))))\n  {\n    tempVar2 = *inputBuffer;\n    *inputBuffer = tempVar2 + 1;\n    *tempVar2 = inputByte;\n    return (uint)inputByte;\n  }\n  if ((data != 0) && (*(int *)(data + 0x18) == 0)) {\n    FUN_080053a0();\n  }\n  if (inputBuffer == (byte **)&DAT_08005fc0) {\n    inputBuffer = *(byte ***)(data + 4);\n  }\n  else if (inputBuffer == (byte **)&DAT_08005fe0) {\n    inputBuffer = *(byte ***)(data + 8);\n  }\n  else if (inputBuffer == (byte **)&DAT_08005fa0) {\n    inputBuffer = *(byte ***)(data + 0xc);\n  }\n  inputBuffer[2] = inputBuffer[6];\n  tempVar3 = (byte *)(uint)*(ushort *)(inputBuffer + 3);\n  tempVar1 = (int)tempVar3 << 0x1c;\n  if (((tempVar1 < 0) && (tempVar3 = inputBuffer[4], tempVar3 != (byte *)0x0)) ||\n     (tempVar1 = FUN_080050d0(data,inputBuffer,tempVar1,tempVar3,tempVar2), tempVar1 == 0)) {\n    tempVar1 = (int)*inputBuffer - (int)inputBuffer[4];\n    returnValue = (uint)inputByte;\n    if ((tempVar1 < (int)inputBuffer[5]) || (tempVar1 = FUN_080052cc(data,inputBuffer), tempVar1 == 0)) {\n      inputBuffer[2] = inputBuffer[2] + -1;\n      tempVar2 = *inputBuffer;\n      *inputBuffer = tempVar2 + 1;\n      *tempVar2 = inputByte;\n      if ((byte *)(tempVar1 + 1) != inputBuffer[5]) {\n        if (-1 < (int)((uint)*(ushort *)(inputBuffer + 3) << 0x1f)) {\n          return returnValue;\n        }\n        if (returnValue != 10) {\n          return returnValue;\n        }\n      }\n      tempVar1 = FUN_080052cc(data,inputBuffer);\n      if (tempVar1 == 0) {\n        return returnValue;\n      }\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08004a34": "process_input_08004a34",
                "param_1": "data",
                "param_2": "inputByte",
                "param_3": "inputBuffer",
                "iVar1": "tempVar1",
                "pbVar2": "tempVar2",
                "pbVar3": "tempVar3",
                "uVar4": "returnValue"
            },
            "calling": [
                "FUN_08004a60"
            ],
            "called": [
                "FUN_080050d0",
                "FUN_080052cc",
                "FUN_080053a0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a60": {
            "entrypoint": "0x08004a60",
            "current_name": "process_data_08004a60",
            "code": "\nint process_data_08004a60(undefined4 input_1,undefined4 input_2,undefined *data_pointer,int length)\n\n{\n  int result;\n  undefined *end_pointer;\n  int current_length;\n  \n  end_pointer = data_pointer + length;\n  current_length = length;\n  do {\n    if (data_pointer == end_pointer) {\n      return 0;\n    }\n    result = FUN_08004a34(input_1,*data_pointer,input_2,length,current_length);\n    length = result + 1;\n    data_pointer = data_pointer + 1;\n  } while (length != 0);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08004a60": "process_data_08004a60",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "data_pointer",
                "param_4": "length",
                "iVar1": "result",
                "puVar2": "end_pointer",
                "iVar3": "current_length"
            },
            "calling": [
                "FUN_08004a84"
            ],
            "called": [
                "FUN_08004a34"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a84": {
            "entrypoint": "0x08004a84",
            "current_name": "parse_arguments_08004a84",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08004c58) */\n\nint parseArguments_08004a84(int param1,undefined4 *param2,byte *arguments,int *param4)\n\n{\n  int result;\n  int *ptr;\n  bool isDigit;\n  byte *currentChar;\n  byte *nextChar;\n  int returnValue;\n  int value;\n  int *localArray;\n  uint flags;\n  int precision;\n  undefined4 padding;\n  int width;\n  int totalLength;\n  byte specifier;\n  undefined spaceFlag;\n  undefined plusFlag;\n  undefined zeroFlag;\n  undefined4 lengthFlag;\n  \n  localArray = param4;\n  if ((param1 != 0) && (*(int *)(param1 + 0x18) == 0)) {\n    FUN_080053a0();\n  }\n  if (param2 == &DAT_08005fc0) {\n    param2 = *(undefined4 **)(param1 + 4);\n  }\n  else if (param2 == (undefined4 *)&DAT_08005fe0) {\n    param2 = *(undefined4 **)(param1 + 8);\n  }\n  else if (param2 == (undefined4 *)&DAT_08005fa0) {\n    param2 = *(undefined4 **)(param1 + 0xc);\n  }\n  if (((-1 < (int)((uint)*(ushort *)(param2 + 3) << 0x1c)) || (param2[4] == 0)) &&\n     (value = FUN_080050d0(param1,param2), value != 0)) {\n    return -1;\n  }\n  totalLength = 0;\n  spaceFlag = 0x20;\n  plusFlag = 0x30;\n  currentChar = arguments;\nLAB_08004ac6:\n  nextChar = currentChar;\n  if (*nextChar != 0) goto LAB_08004b7c;\n  goto LAB_08004ad0;\nLAB_08004b7c:\n  currentChar = nextChar + 1;\n  if (*nextChar != 0x25) goto LAB_08004ac6;\nLAB_08004ad0:\n  value = (int)nextChar - (int)arguments;\n  if (value != 0) {\n    result = FUN_08004a60(param1,param2,arguments,value);\n    if (result == -1) {\nLAB_08004c70:\n      if ((int)((uint)*(ushort *)(param2 + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return totalLength;\n    }\n    totalLength = totalLength + value;\n  }\n  if (*nextChar == 0) goto LAB_08004c70;\n  flags = 0;\n  width = 0;\n  precision = -1;\n  padding = 0;\n  zeroFlag = 0;\n  lengthFlag = 0;\n  currentChar = nextChar + 1;\n  while( true ) {\n    value = FUN_08000230(\"#-0+ \",*currentChar);\n    arguments = currentChar + 1;\n    if (value == 0) break;\n    flags = 1 << (value + 0xf7ffa094U & 0xff) | flags;\n    currentChar = arguments;\n  }\n  if ((int)(flags << 0x1b) < 0) {\n    zeroFlag = 0x20;\n  }\n  if ((int)(flags << 0x1c) < 0) {\n    zeroFlag = 0x2b;\n  }\n  if (*currentChar == 0x2a) {\n    ptr = localArray + 1;\n    value = *localArray;\n    localArray = ptr;\n    if (value < 0) {\n      width = -value;\n      flags = flags | 2;\n      goto LAB_08004bae;\n    }\n  }\n  else {\n    isDigit = false;\n    value = width;\n    arguments = currentChar;\n    while( true ) {\n      if (9 < *arguments - 0x30) break;\n      value = value * 10 + (*arguments - 0x30);\n      isDigit = true;\n      arguments = arguments + 1;\n    }\n    if (!isDigit) goto LAB_08004bae;\n  }\n  width = value;\nLAB_08004bae:\n  if (*arguments == 0x2e) {\n    if (arguments[1] == 0x2a) {\n      precision = *localArray;\n      if (precision < 0) {\n        precision = -1;\n      }\n      arguments = arguments + 2;\n      localArray = localArray + 1;\n    }\n    else {\n      isDigit = false;\n      precision = 0;\n      value = 0;\n      while( true ) {\n        arguments = arguments + 1;\n        if (9 < *arguments - 0x30) break;\n        value = value * 10 + (*arguments - 0x30);\n        isDigit = true;\n      }\n      if (isDigit) {\n        precision = value;\n      }\n    }\n  }\n  value = FUN_08000230(&DAT_08005f72,*arguments,3);\n  if (value != 0) {\n    flags = flags | 0x40 << (value + 0xf7ffa08eU & 0xff);\n    arguments = arguments + 1;\n  }\n  specifier = *arguments;\n  arguments = arguments + 1;\n  value = FUN_08000230(\"efgEFG\",specifier,6);\n  if (value == 0) {\n    returnValue = FUN_08004d9c(param1,&flags,param2,0x8004a61,&localArray);\n    if (returnValue == -1) goto LAB_08004c70;\n  }\n  else {\n    localArray = (int *)(((int)localArray + 7U & 0xfffffff8) + 8);\n  }\n  totalLength = totalLength + returnValue;\n  currentChar = arguments;\n  goto LAB_08004ac6;\n}\n\n",
            "renaming": {
                "FUN_08004a84": "parse_arguments_08004a84",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "arguments",
                "param_4": "param4",
                "iVar1": "result",
                "piVar2": "ptr",
                "bVar3": "isDigit",
                "pbVar4": "currentChar",
                "pbVar5": "nextChar",
                "unaff_r9": "returnValue",
                "iVar6": "value",
                "local_8c": "localArray",
                "local_88": "flags",
                "local_84": "precision",
                "local_80": "padding",
                "local_7c": "width",
                "local_74": "totalLength",
                "local_70": "specifier",
                "local_6f": "spaceFlag",
                "local_6e": "plusFlag",
                "local_45": "zeroFlag",
                "local_30": "lengthFlag"
            },
            "calling": [
                "FUN_08004860",
                "FUN_08004fdc"
            ],
            "called": [
                "FUN_080050d0",
                "FUN_08004a60",
                "FUN_08000230",
                "FUN_080053a0",
                "FUN_08004d9c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004cb0": {
            "entrypoint": "0x08004cb0",
            "current_name": "calculate_new_buffer_size_08004cb0",
            "code": "\nundefined4\ncalculateNewBufferSize_08004cb0(undefined4 param1,uint *buffer,uint *newBufferSize,undefined4 param4,code *callback)\n\n{\n  int iterationIndex;\n  int returnValue;\n  uint maxBufferSize;\n  uint iterationCount;\n  bool isFlagSet;\n  \n  maxBufferSize = buffer[4];\n  if ((int)buffer[4] < (int)buffer[2]) {\n    maxBufferSize = buffer[2];\n  }\n  *newBufferSize = maxBufferSize;\n  if (*(char *)((int)buffer + 0x43) != '\\0') {\n    *newBufferSize = maxBufferSize + 1;\n  }\n  if ((int)(*buffer << 0x1a) < 0) {\n    *newBufferSize = *newBufferSize + 2;\n  }\n  if ((*buffer & 6) == 0) {\n    for (iterationIndex = 0; iterationIndex < (int)(buffer[3] - *newBufferSize); iterationIndex = iterationIndex + 1) {\n      returnValue = (*callback)(param1,param4,(int)buffer + 0x19,1);\n      if (returnValue == -1) {\n        return 0xffffffff;\n      }\n    }\n  }\n  maxBufferSize = (uint)*(byte *)((int)buffer + 0x43);\n  if (maxBufferSize != 0) {\n    maxBufferSize = 1;\n  }\n  if ((int)(*buffer << 0x1a) < 0) {\n    *(undefined *)((int)buffer + maxBufferSize + 0x43) = 0x30;\n    *(undefined *)((int)buffer + maxBufferSize + 0x44) = *(undefined *)((int)buffer + 0x45);\n    maxBufferSize = maxBufferSize + 2;\n  }\n  iterationIndex = (*callback)(param1,param4,(int)buffer + 0x43,maxBufferSize);\n  if (iterationIndex != -1) {\n    maxBufferSize = buffer[3];\n    isFlagSet = (*buffer & 6) == 4;\n    if (isFlagSet) {\n      maxBufferSize = maxBufferSize - *newBufferSize;\n    }\n    if (isFlagSet) {\n      maxBufferSize = maxBufferSize & ~((int)maxBufferSize >> 0x1f);\n    }\n    else {\n      maxBufferSize = 0;\n    }\n    if ((int)buffer[4] < (int)buffer[2]) {\n      maxBufferSize = maxBufferSize + (buffer[2] - buffer[4]);\n    }\n    iterationCount = 0;\n    while( true ) {\n      if (maxBufferSize == iterationCount) {\n        return 0;\n      }\n      iterationIndex = (*callback)(param1,param4,(int)buffer + 0x1a,1);\n      if (iterationIndex == -1) break;\n      iterationCount = iterationCount + 1;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08004cb0": "calculate_new_buffer_size_08004cb0",
                "param_1": "param1",
                "param_2": "buffer",
                "param_3": "newBufferSize",
                "param_4": "param4",
                "param_5": "callback",
                "iVar1": "iterationIndex",
                "iVar2": "returnValue",
                "uVar3": "maxBufferSize",
                "uVar4": "iterationCount",
                "bVar5": "isFlagSet"
            },
            "calling": [
                "FUN_08004d9c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d9c": {
            "entrypoint": "0x08004d9c",
            "current_name": "decode_and_process_08004d9c",
            "code": "\nuint decode_and_process_08004d9c(undefined4 input_param,uint *data,undefined4 param,code *callback_func,uint **output_pointer)\n\n{\n  byte byte_val;\n  int index;\n  uint *ptr;\n  int result;\n  char *hex_string;\n  uint mask;\n  uint **double_ptr;\n  char **double_char_ptr;\n  uint value;\n  uint temp_value;\n  char *temp_char_ptr;\n  char *param_ptr;\n  uint local_array [2];\n  \n  byte_val = *(byte *)(data + 6);\n  param_ptr = (char *)((int)data + 0x43);\n  if (byte_val != 0x6e) {\n    if (byte_val < 0x6f) {\n      if (byte_val != 99) {\n        if (byte_val < 100) {\n          if (byte_val == 0) goto LAB_08004f56;\n          if (byte_val != 0x58) goto LAB_08004dcc;\n          *(undefined *)((int)data + 0x45) = 0x58;\n          hex_string = \"0123456789ABCDEF\";\nLAB_08004ee6:\n          mask = *data;\n          ptr = *output_pointer;\n          *output_pointer = ptr + 1;\n          if (((mask & 0x80) == 0) && ((int)(mask << 0x19) < 0)) {\n            value = (uint)*(ushort *)ptr;\n          }\n          else {\n            value = *ptr;\n          }\n          if ((int)(mask << 0x1f) < 0) {\n            *data = mask | 0x20;\n          }\n          if (value == 0) {\n            *data = *data & 0xffffffdf;\n          }\n          mask = 0x10;\nLAB_08004e7c:\n          *(undefined *)((int)data + 0x43) = 0;\n        }\n        else {\n          if ((byte_val != 100) && (byte_val != 0x69)) goto LAB_08004dcc;\n          value = *data;\n          ptr = *output_pointer;\n          if ((value & 0x80) == 0) {\n            *output_pointer = ptr + 1;\n            if ((value & 0x40) == 0) goto LAB_08004dec;\n            value = (uint)(short)*(ushort *)ptr;\n          }\n          else {\n            *output_pointer = ptr + 1;\nLAB_08004dec:\n            value = *ptr;\n          }\n          if ((int)value < 0) {\n            value = -value;\n            *(undefined *)((int)data + 0x43) = 0x2d;\n          }\n          hex_string = \"0123456789ABCDEF\";\n          mask = 10;\n        }\n        temp_value = data[1];\n        data[2] = temp_value;\n        temp_char_ptr = param_ptr;\n        if ((int)temp_value < 0) {\n          if (value != 0) goto LAB_08004f1a;\nLAB_08004fc8:\n          *(char *)((int)data + 0x42) = *hex_string;\n          temp_char_ptr = (char *)((int)data + 0x42);\n        }\n        else {\n          *data = *data & 0xfffffffb;\n          if (value == 0) {\n            if (temp_value != 0) goto LAB_08004fc8;\n          }\n          else {\nLAB_08004f1a:\n            do {\n              temp_value = value / mask;\n              temp_char_ptr = temp_char_ptr + -1;\n              *temp_char_ptr = hex_string[value - mask * temp_value];\n              value = temp_value;\n            } while (temp_value != 0);\n          }\n        }\n        if (((mask == 8) && ((int)(*data << 0x1f) < 0)) && ((int)data[1] <= (int)data[4]))\n        {\n          temp_char_ptr[-1] = '0';\n          temp_char_ptr = temp_char_ptr + -1;\n        }\n        data[4] = (int)param_ptr - (int)temp_char_ptr;\n        param_ptr = temp_char_ptr;\n        goto LAB_08004ec2;\n      }\n      ptr = *output_pointer;\n      *output_pointer = ptr + 1;\n      *(char *)((int)data + 0x42) = (char)*ptr;\nLAB_08004e2c:\n      param_ptr = (char *)((int)data + 0x42);\n      value = 1;\n    }\n    else {\n      if (byte_val != 0x73) {\n        if (byte_val < 0x74) {\n          if (byte_val == 0x6f) {\nLAB_08004e52:\n            value = *data;\n            ptr = *output_pointer;\n            if ((value & 0x80) == 0) {\n              *output_pointer = ptr + 1;\n              if ((value & 0x40) == 0) goto LAB_08004e60;\n              value = (uint)*(ushort *)ptr;\n            }\n            else {\n              *output_pointer = ptr + 1;\nLAB_08004e60:\n              value = *ptr;\n            }\n            hex_string = \"0123456789ABCDEF\";\n            if (byte_val == 0x6f) {\n              mask = 8;\n            }\n            else {\n              mask = 10;\n            }\n            goto LAB_08004e7c;\n          }\n          if (byte_val == 0x70) {\n            *data = *data | 0x20;\nLAB_08004e12:\n            *(undefined *)((int)data + 0x45) = 0x78;\n            hex_string = \"0123456789abcdef\";\n            goto LAB_08004ee6;\n          }\n        }\n        else {\n          if (byte_val == 0x75) goto LAB_08004e52;\n          if (byte_val == 0x78) goto LAB_08004e12;\n        }\nLAB_08004dcc:\n        *(byte *)((int)data + 0x42) = byte_val;\n        goto LAB_08004e2c;\n      }\n      double_char_ptr = (char **)*output_pointer;\n      *output_pointer = (uint *)(double_char_ptr + 1);\n      param_ptr = *double_char_ptr;\n      index = FUN_08000230(param_ptr,0,data[1]);\n      if (index != 0) {\n        data[1] = index - (int)param_ptr;\n      }\n      value = data[1];\n    }\n    data[4] = value;\n    *(undefined *)((int)data + 0x43) = 0;\n    goto LAB_08004ec2;\n  }\n  value = *data;\n  double_ptr = (uint **)*output_pointer;\n  mask = data[5];\n  if ((value & 0x80) == 0) {\n    *output_pointer = (uint *)(double_ptr + 1);\n    ptr = *double_ptr;\n    if ((value & 0x40) == 0) goto LAB_08004f42;\n    *(short *)ptr = (short)mask;\n  }\n  else {\n    *output_pointer = (uint *)(double_ptr + 1);\n    ptr = *double_ptr;\nLAB_08004f42:\n    *ptr = mask;\n  }\nLAB_08004f56:\n  data[4] = 0;\nLAB_08004ec2:\n  index = FUN_08004cb0(input_param,data,local_array,param,callback_func);\n  if ((index == -1) || (index = (*callback_func)(input_param,param,param_ptr,data[4]), index == -1)) {\nLAB_08004ed6:\n    value = 0xffffffff;\n  }\n  else {\n    if ((int)(*data << 0x1e) < 0) {\n      for (index = 0; index < (int)(data[3] - local_array[0]); index = index + 1) {\n        result = (*callback_func)(input_param,param,(int)data + 0x19,1);\n        if (result == -1) goto LAB_08004ed6;\n      }\n    }\n    value = data[3];\n    if ((int)data[3] < (int)local_array[0]) {\n      value = local_array[0];\n    }\n  }\n  return value;\n}\n\n",
            "renaming": {
                "FUN_08004d9c": "decode_and_process_08004d9c",
                "param_1": "input_param",
                "param_2": "data",
                "param_3": "param",
                "param_4": "callback_func",
                "param_5": "output_pointer",
                "bVar1": "byte_val",
                "iVar2": "index",
                "puVar3": "ptr",
                "iVar4": "result",
                "pcVar5": "hex_string",
                "uVar6": "mask",
                "ppuVar7": "double_ptr",
                "ppcVar8": "double_char_ptr",
                "uVar9": "value",
                "uVar10": "temp_value",
                "pcVar11": "temp_char_ptr",
                "pcVar12": "param_ptr",
                "local_24": "local_array"
            },
            "calling": [
                "FUN_08004a84"
            ],
            "called": [
                "FUN_08004cb0",
                "FUN_08000230"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004fdc": {
            "entrypoint": "0x08004fdc",
            "current_name": "initialize_and_call_function_08004fdc",
            "code": "\nvoid initializeAndCallFunction_08004fdc(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  int data;\n  undefined4 arg1_copy;\n  undefined4 arg2_copy;\n  undefined4 arg3_copy;\n  undefined4 arg4_copy;\n  \n  data = DAT_200000a0;\n  arg1_copy = arg1;\n  arg2_copy = arg2;\n  arg3_copy = arg3;\n  arg4_copy = arg4;\n  if ((DAT_200000a0 != 0) && (*(int *)(DAT_200000a0 + 0x18) == 0)) {\n    FUN_080053a0(DAT_200000a0);\n  }\n  FUN_08004a84(data,*(undefined4 *)(data + 8),arg1,&arg2_copy,arg1_copy,&arg2_copy);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004fdc": "initialize_and_call_function_08004fdc",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "iVar1": "data",
                "uVar2": "arg1_copy",
                "uStack_c": "arg2_copy",
                "uStack_8": "arg3_copy",
                "uStack_4": "arg4_copy"
            },
            "calling": [
                "FUN_08003978"
            ],
            "called": [
                "FUN_08004a84",
                "FUN_080053a0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800500c": {
            "entrypoint": "0x0800500c",
            "current_name": "update_param_value_0800500c",
            "code": "\nvoid updateParamValue_0800500c(int *outputParam,undefined4 inputValue)\n\n{\n  int result;\n  \n  DAT_20000674 = 0;\n  result = FUN_08004094(inputValue);\n  if ((result == -1) && (DAT_20000674 != 0)) {\n    *outputParam = DAT_20000674;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800500c": "update_param_value_0800500c",
                "param_1": "outputParam",
                "param_2": "inputValue",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08004978"
            ],
            "called": [
                "FUN_08004094"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080050d0": {
            "entrypoint": "0x080050d0",
            "current_name": "process_data_080050d0",
            "code": "\nuint process_data_080050d0(undefined4 *output_param,undefined4 *input_param)\n\n{\n  int data_ptr;\n  uint result;\n  ushort flags;\n  \n  data_ptr = DAT_200000a0;\n  if ((DAT_200000a0 != 0) && (*(int *)(DAT_200000a0 + 0x18) == 0)) {\n    FUN_080053a0(DAT_200000a0);\n  }\n  if (input_param == &DAT_08005fc0) {\n    input_param = *(undefined4 **)(data_ptr + 4);\n  }\n  else if (input_param == (undefined4 *)&DAT_08005fe0) {\n    input_param = *(undefined4 **)(data_ptr + 8);\n  }\n  else if (input_param == (undefined4 *)&DAT_08005fa0) {\n    input_param = *(undefined4 **)(data_ptr + 0xc);\n  }\n  flags = *(ushort *)(input_param + 3);\n  result = (uint)flags;\n  if (-1 < (int)(result << 0x1c)) {\n    if (-1 < (int)(result << 0x1b)) {\n      *output_param = 9;\n      goto LAB_08005100;\n    }\n    if ((int)(result << 0x1d) < 0) {\n      if ((undefined4 *)input_param[0xd] != (undefined4 *)0x0) {\n        if ((undefined4 *)input_param[0xd] != input_param + 0x11) {\n          FUN_080048dc(output_param);\n        }\n        input_param[0xd] = 0;\n      }\n      *(ushort *)(input_param + 3) = *(ushort *)(input_param + 3) & 0xffdb;\n      input_param[1] = 0;\n      *input_param = input_param[4];\n    }\n    *(ushort *)(input_param + 3) = *(ushort *)(input_param + 3) | 8;\n  }\n  if ((input_param[4] == 0) && ((*(ushort *)(input_param + 3) & 0x280) != 0x200)) {\n    FUN_080054fc(output_param,input_param);\n  }\n  flags = *(ushort *)(input_param + 3);\n  result = flags & 1;\n  if ((flags & 1) == 0) {\n    if (-1 < (int)((uint)flags << 0x1e)) {\n      result = input_param[5];\n    }\n    input_param[2] = result;\n  }\n  else {\n    input_param[2] = 0;\n    input_param[6] = -input_param[5];\n  }\n  if (input_param[4] == 0) {\n    flags = *(ushort *)(input_param + 3);\n    result = (int)(short)flags & 0x80;\n    if (result != 0) {\nLAB_08005100:\n      *(ushort *)(input_param + 3) = flags | 0x40;\n      return 0xffffffff;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080050d0": "process_data_080050d0",
                "param_1": "output_param",
                "param_2": "input_param",
                "iVar1": "data_ptr",
                "uVar2": "result",
                "uVar3": "flags"
            },
            "calling": [
                "FUN_08004a84",
                "FUN_08004a34"
            ],
            "called": [
                "FUN_080054fc",
                "FUN_080048dc",
                "FUN_080053a0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080051ac": {
            "entrypoint": "0x080051ac",
            "current_name": "process_data_080051ac",
            "code": "\nvoid processData_080051ac(void)\n\n{\n  uint *pointer1;\n  int variable1;\n  int *pointer2;\n  int *pointer3;\n  uint value1;\n  ushort value2;\n  int variable2;\n  code *function1;\n  int variable3;\n  uint value3;\n  code *jumpTable;\n  bool bool1;\n  undefined8 result;\n  \n  FUN_080055d0(6);\n  jumpTable = (code *)0x80051bb;\n  result = FUN_080040f8(1);\n  pointer2 = (int *)((ulonglong)result >> 0x20);\n  pointer1 = (uint *)result;\n  value2 = *(ushort *)(pointer2 + 3);\n  value1 = (uint)value2;\n  if ((int)(value1 << 0x1c) < 0) {\n    variable1 = pointer2[4];\n    if (variable1 != 0) {\n      variable2 = value1 << 0x1e;\n      bool1 = variable2 == 0;\n      variable3 = *pointer2;\n      if (bool1) {\n        variable2 = pointer2[5];\n      }\n      *pointer2 = variable1;\n      if (!bool1) {\n        variable2 = 0;\n      }\n      pointer2[2] = variable2;\n      for (variable3 = variable3 - variable1; 0 < variable3; variable3 = variable3 - variable2) {\n        variable2 = (*(code *)pointer2[10])(pointer1,pointer2[8],variable1,variable3);\n        if (variable2 < 1) {\n          value2 = *(ushort *)(pointer2 + 3);\n          goto LAB_080052b2;\n        }\n        variable1 = variable1 + variable2;\n      }\n    }\n  }\n  else if (((0 < pointer2[1]) || (0 < pointer2[0x10])) &&\n          (function1 = (code *)pointer2[0xb], function1 != (code *)0x0)) {\n    value3 = *pointer1;\n    *pointer1 = 0;\n    if ((value2 & 0x1000) == 0) {\n      variable1 = (*function1)(pointer1,pointer2[8],value1 & 0x1000,1);\n      if ((variable1 == -1) && (value1 = *pointer1, value1 != 0)) {\n        if ((value1 != 0x1d) && (value1 != 0x16)) {\n          *(ushort *)(pointer2 + 3) = *(ushort *)(pointer2 + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x0800527c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          (*jumpTable)();\n          return;\n        }\n        *pointer1 = value3;\n        goto LAB_080051d6;\n      }\n    }\n    else {\n      variable1 = pointer2[0x15];\n    }\n    if (((int)((uint)*(ushort *)(pointer2 + 3) << 0x1d) < 0) &&\n       (variable1 = variable1 - pointer2[1], pointer2[0xd] != 0)) {\n      variable1 = variable1 - pointer2[0x10];\n    }\n    variable1 = (*(code *)pointer2[0xb])(pointer1,pointer2[8],variable1,0);\n    value2 = *(ushort *)(pointer2 + 3);\n    if ((variable1 == -1) &&\n       ((0x1d < *pointer1 || (-1 < (int)((0x20400001U >> (*pointer1 & 0xff)) << 0x1f))))) {\nLAB_080052b2:\n      *(ushort *)(pointer2 + 3) = value2 | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x080052bc. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jumpTable)(0xffffffff);\n      return;\n    }\n    pointer2[1] = 0;\n    *pointer2 = pointer2[4];\n    if (((int)((uint)value2 << 0x13) < 0) && ((variable1 != -1 || (*pointer1 == 0)))) {\n      pointer2[0x15] = variable1;\n    }\n    pointer3 = (int *)pointer2[0xd];\n    *pointer1 = value3;\n    if (pointer3 != (int *)0x0) {\n      if (pointer3 != pointer2 + 0x11) {\n        FUN_080048dc(pointer1);\n      }\n      pointer2[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08005252. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jumpTable)();\n      return;\n    }\n  }\nLAB_080051d6:\n                    /* WARNING: Could not recover jumptable at 0x080051d8. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080051ac": "process_data_080051ac",
                "puVar1": "pointer1",
                "iVar2": "variable1",
                "piVar3": "pointer2",
                "piVar4": "pointer3",
                "uVar5": "value1",
                "uVar6": "value2",
                "iVar7": "variable2",
                "pcVar8": "function1",
                "iVar9": "variable3",
                "uVar10": "value3",
                "UNRECOVERED_JUMPTABLE_00": "jumpTable",
                "bVar11": "bool1",
                "uVar12": "result"
            },
            "calling": [
                "FUN_08004808",
                "FUN_08005760"
            ],
            "called": [
                "FUN_080048dc",
                "FUN_080040f8",
                "FUN_080055d0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080052cc": {
            "entrypoint": "0x080052cc",
            "current_name": "handle_function_080052cc",
            "code": "\nundefined4 handle_function_080052cc(uint *data_array,int *param_array)\n\n{\n  undefined4 result;\n  int index;\n  int *ptr;\n  uint value;\n  ushort flag;\n  int temp_var;\n  undefined4 unaff_param4;\n  undefined4 unaff_param5;\n  code *function_ptr;\n  int counter;\n  uint temp_value;\n  code *jump_table;\n  bool bVar10;\n  \n  if (param_array[4] != 0) {\n    if ((data_array != (uint *)0x0) && (data_array[6] == 0)) {\n      FUN_080053a0();\n    }\n    if (param_array == &DAT_08005fc0) {\n      param_array = (int *)data_array[1];\n    }\n    else if (param_array == (int *)&DAT_08005fe0) {\n      param_array = (int *)data_array[2];\n    }\n    else if (param_array == (int *)&DAT_08005fa0) {\n      param_array = (int *)data_array[3];\n    }\n    if (*(short *)(param_array + 3) != 0) {\n      flag = *(ushort *)(param_array + 3);\n      value = (uint)flag;\n      if ((int)(value << 0x1c) < 0) {\n        index = param_array[4];\n        if (index != 0) {\n          temp_var = value << 0x1e;\n          bVar10 = temp_var == 0;\n          counter = *param_array;\n          if (bVar10) {\n            temp_var = param_array[5];\n          }\n          *param_array = index;\n          if (!bVar10) {\n            temp_var = 0;\n          }\n          param_array[2] = temp_var;\n          for (counter = counter - index; 0 < counter; counter = counter - temp_var) {\n            temp_var = (*(code *)param_array[10])(data_array,param_array[8],index,counter,unaff_param4,unaff_param5);\n            if (temp_var < 1) {\n              flag = *(ushort *)(param_array + 3);\n              goto LAB_080052b2;\n            }\n            index = index + temp_var;\n          }\n        }\n      }\n      else if (((0 < param_array[1]) || (0 < param_array[0x10])) &&\n              (function_ptr = (code *)param_array[0xb], function_ptr != (code *)0x0)) {\n        temp_value = *data_array;\n        *data_array = 0;\n        if ((flag & 0x1000) == 0) {\n          index = (*function_ptr)(data_array,param_array[8],value & 0x1000,1);\n          if ((index == -1) && (value = *data_array, value != 0)) {\n            if ((value != 0x1d) && (value != 0x16)) {\n              *(ushort *)(param_array + 3) = *(ushort *)(param_array + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x0800527c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n              result = (*jump_table)();\n              return result;\n            }\n            *data_array = temp_value;\n            goto LAB_080051d6;\n          }\n        }\n        else {\n          index = param_array[0x15];\n        }\n        if (((int)((uint)*(ushort *)(param_array + 3) << 0x1d) < 0) &&\n           (index = index - param_array[1], param_array[0xd] != 0)) {\n          index = index - param_array[0x10];\n        }\n        index = (*(code *)param_array[0xb])(data_array,param_array[8],index,0);\n        flag = *(ushort *)(param_array + 3);\n        if ((index == -1) &&\n           ((0x1d < *data_array || (-1 < (int)((0x20400001U >> (*data_array & 0xff)) << 0x1f))))) {\nLAB_080052b2:\n          *(ushort *)(param_array + 3) = flag | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x080052bc. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          result = (*jump_table)(0xffffffff);\n          return result;\n        }\n        param_array[1] = 0;\n        *param_array = param_array[4];\n        if (((int)((uint)flag << 0x13) < 0) && ((index != -1 || (*data_array == 0)))) {\n          param_array[0x15] = index;\n        }\n        ptr = (int *)param_array[0xd];\n        *data_array = temp_value;\n        if (ptr != (int *)0x0) {\n          if (ptr != param_array + 0x11) {\n            FUN_080048dc(data_array);\n          }\n          param_array[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08005252. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          result = (*jump_table)();\n          return result;\n        }\n      }\nLAB_080051d6:\n                    /* WARNING: Could not recover jumptable at 0x080051d8. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      result = (*jump_table)(0);\n      return result;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080052cc": "handle_function_080052cc",
                "param_1": "data_array",
                "param_2": "param_array",
                "uVar1": "result",
                "iVar2": "index",
                "piVar3": "ptr",
                "uVar4": "value",
                "uVar5": "flag",
                "iVar6": "temp_var",
                "unaff_r4": "unaff_param4",
                "unaff_r5": "unaff_param5",
                "pcVar7": "function_ptr",
                "iVar8": "counter",
                "uVar9": "temp_value",
                "UNRECOVERED_JUMPTABLE_00": "jump_table"
            },
            "calling": [
                "FUN_08004a34"
            ],
            "called": [
                "FUN_080053a0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800532c": {
            "entrypoint": "0x0800532c",
            "current_name": "initialize_parameters_0800532c",
            "code": "\nvoid initializeParameters_0800532c(undefined4 *parameters,undefined2 value1,undefined2 value2)\n\n{\n  *parameters = 0;\n  parameters[1] = 0;\n  parameters[2] = 0;\n  *(undefined2 *)(parameters + 3) = value1;\n  parameters[0x19] = 0;\n  *(undefined2 *)((int)parameters + 0xe) = value2;\n  parameters[4] = 0;\n  parameters[5] = 0;\n  parameters[6] = 0;\n  FUN_080048cc(parameters + 0x17,0,8);\n  parameters[9] = 0x8005609;\n  parameters[10] = 0x800562b;\n  parameters[0xb] = 0x8005663;\n  parameters[8] = parameters;\n  parameters[0xc] = &LAB_08005686_1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800532c": "initialize_parameters_0800532c",
                "param_1": "parameters",
                "param_2": "value1",
                "param_3": "value2"
            },
            "calling": [
                "FUN_080053a0"
            ],
            "called": [
                "FUN_080048cc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005374": {
            "entrypoint": "0x08005374",
            "current_name": "initialize_array_08005374",
            "code": "\nundefined4 * initializeArray_08005374(undefined4 array,int size)\n\n{\n  undefined4 *result;\n  int index;\n  \n  index = (size + -1) * 0x68;\n  result = (undefined4 *)FUN_08004978(array,index + 0x74);\n  if (result != (undefined4 *)0x0) {\n    *result = 0;\n    result[1] = size;\n    result[2] = result + 3;\n    FUN_080048cc(result + 3,0,index + 0x68);\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005374": "initialize_array_08005374",
                "param_1": "array",
                "param_2": "size",
                "puVar1": "result",
                "iVar2": "index"
            },
            "calling": [
                "FUN_08005400"
            ],
            "called": [
                "FUN_080048cc",
                "FUN_08004978"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080053a0": {
            "entrypoint": "0x080053a0",
            "current_name": "initialize_data_080053a0",
            "code": "\nvoid initializeData_080053a0(undefined4 *data)\n\n{\n  undefined4 tempVar;\n  undefined4 *ptr;\n  \n  if (data[6] == 0) {\n    data[0x12] = 0;\n    data[0x13] = 0;\n    data[0x14] = 0;\n    ptr = &DAT_200000a4;\n    data[10] = &label1;\n    if (data == &DAT_200000a4) {\n      ptr = (undefined4 *)0x1;\n    }\n    if (data == &DAT_200000a4) {\n      data[6] = ptr;\n    }\n    tempVar = FUN_08005400();\n    data[1] = tempVar;\n    tempVar = FUN_08005400(data);\n    data[2] = tempVar;\n    tempVar = FUN_08005400(data);\n    data[3] = tempVar;\n    FUN_0800532c(data[1],4,0);\n    FUN_0800532c(data[2],9,1);\n    FUN_0800532c(data[3],0x12,2);\n    data[6] = 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080053a0": "initialize_data_080053a0",
                "param_1": "data",
                "uVar1": "tempVar",
                "puVar2": "ptr",
                "LAB_08005320_1": "label1"
            },
            "calling": [
                "FUN_080050d0",
                "FUN_08004a84",
                "FUN_080052cc",
                "FUN_08005400",
                "FUN_08004a34",
                "FUN_08004fdc"
            ],
            "called": [
                "FUN_08005400",
                "FUN_0800532c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005400": {
            "entrypoint": "0x08005400",
            "current_name": "initialize_and_check_data_08005400",
            "code": "\nint * initialize_and_check_data_08005400(undefined4 *output,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int *current_item;\n  int *next_item;\n  int **data_list;\n  \n  if (DAT_200000bc == 0) {\n    FUN_080053a0(&DAT_200000a4);\n  }\n  data_list = (int **)&DAT_200000ec;\n  do {\n    next_item = data_list[2];\n    current_item = data_list[1];\n    while (current_item = (int *)((int)current_item + -1), -1 < (int)current_item) {\n      if (*(short *)(next_item + 3) == 0) {\n        *(undefined2 *)((int)next_item + 0xe) = 0xffff;\n        *(undefined2 *)(next_item + 3) = 1;\n        next_item[0x19] = 0;\n        *next_item = 0;\n        next_item[2] = 0;\n        next_item[1] = 0;\n        next_item[4] = 0;\n        next_item[5] = 0;\n        next_item[6] = 0;\n        FUN_080048cc(next_item + 0x17,0,8,1,param_4);\n        next_item[0xd] = 0;\n        next_item[0xe] = 0;\n        next_item[0x12] = 0;\n        next_item[0x13] = 0;\n        return next_item;\n      }\n      next_item = next_item + 0x1a;\n    }\n    if (*data_list == (int *)0x0) {\n      current_item = (int *)FUN_08005374(output,4);\n      *data_list = current_item;\n      if (current_item == (int *)0x0) {\n        *output = 0xc;\n        return (int *)0x0;\n      }\n    }\n    data_list = (int **)*data_list;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08005400": "initialize_and_check_data_08005400",
                "param_1": "output",
                "piVar1": "current_item",
                "piVar2": "next_item",
                "ppiVar3": "data_list"
            },
            "calling": [
                "FUN_080053a0"
            ],
            "called": [
                "FUN_08005374",
                "FUN_080048cc",
                "FUN_080053a0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080054b4": {
            "entrypoint": "0x080054b4",
            "current_name": "check_and_set_permissions_080054b4",
            "code": "\nundefined4 check_and_set_permissions_080054b4(undefined4 value,int address,undefined4 *output,uint *result)\n\n{\n  int status;\n  undefined4 permission;\n  undefined temp_buffer [4];\n  uint flags;\n  \n  if ((*(short *)(address + 0xe) < 0) ||\n     (status = FUN_080056d4(value,(int)*(short *)(address + 0xe),temp_buffer), status < 0)) {\n    *result = 0;\n    if ((int)((uint)*(ushort *)(address + 0xc) << 0x18) < 0) {\n      permission = 0x40;\n      goto LAB_080054f4;\n    }\n  }\n  else {\n    *result = (uint)((flags & 0xf000) == 0x2000);\n  }\n  permission = 0x400;\nLAB_080054f4:\n  *output = permission;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080054b4": "check_and_set_permissions_080054b4",
                "param_1": "value",
                "param_2": "address",
                "param_3": "output",
                "param_4": "result",
                "auStack_4c": "temp_buffer",
                "local_48": "flags",
                "iVar1": "status",
                "uVar2": "permission"
            },
            "calling": [
                "FUN_080054fc"
            ],
            "called": [
                "FUN_080056d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080054fc": {
            "entrypoint": "0x080054fc",
            "current_name": "validate_and_process_data_080054fc",
            "code": "\nvoid validateAndProcessData_080054fc(int inputValue,int *dataBuffer)\n\n{\n  ushort resultFlag;\n  int checkFlag;\n  int tempValue1;\n  int *tempValue2;\n  \n  if (-1 < (int)((uint)*(ushort *)(dataBuffer + 3) << 0x1e)) {\n    tempValue1 = inputValue;\n    tempValue2 = dataBuffer;\n    resultFlag = FUN_080054b4(inputValue,dataBuffer,&tempValue1,&tempValue2);\n    checkFlag = FUN_08004978(inputValue,tempValue1);\n    if (checkFlag != 0) {\n      *(undefined **)(inputValue + 0x28) = &LAB_08005320_1;\n      *dataBuffer = checkFlag;\n      *(ushort *)(dataBuffer + 3) = *(ushort *)(dataBuffer + 3) | 0x80;\n      dataBuffer[5] = tempValue1;\n      dataBuffer[4] = checkFlag;\n      if ((tempValue2 != (int *)0x0) &&\n         (checkFlag = FUN_080056f8(inputValue,(int)*(short *)((int)dataBuffer + 0xe)), checkFlag != 0)) {\n        *(ushort *)(dataBuffer + 3) = *(ushort *)(dataBuffer + 3) & 0xfffc | 1;\n      }\n      *(ushort *)(dataBuffer + 3) = resultFlag | *(ushort *)(dataBuffer + 3);\n      return;\n    }\n    if ((int)(short)*(ushort *)(dataBuffer + 3) << 0x16 < 0) {\n      return;\n    }\n    *(ushort *)(dataBuffer + 3) = *(ushort *)(dataBuffer + 3) & 0xfffc | 2;\n  }\n  *dataBuffer = (int)dataBuffer + 0x47;\n  dataBuffer[4] = (int)dataBuffer + 0x47;\n  dataBuffer[5] = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080054fc": "validate_and_process_data_080054fc",
                "param_1": "inputValue",
                "param_2": "dataBuffer",
                "uVar1": "resultFlag",
                "iVar2": "checkFlag",
                "local_18": "tempValue1",
                "local_14": "tempValue2"
            },
            "calling": [
                "FUN_080050d0"
            ],
            "called": [
                "FUN_080054b4",
                "FUN_080056f8",
                "FUN_08004978"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800557c": {
            "entrypoint": "0x0800557c",
            "current_name": "FUNC_0800557c",
            "code": "\nvoid FUNC_0800557c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800557c": "FUNC_0800557c"
            },
            "calling": [
                "FUN_080048dc",
                "FUN_08004978"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800557e": {
            "entrypoint": "0x0800557e",
            "current_name": "FUNC_0800557e",
            "code": "\nvoid FUNC_0800557e(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800557e": "FUNC_0800557e"
            },
            "calling": [
                "FUN_080048dc",
                "FUN_08004978"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080055d0": {
            "entrypoint": "0x080055d0",
            "current_name": "perform_operation_080055d0",
            "code": "\nint performOperation_080055d0(uint input)\n\n{\n  int *data_ptr;\n  undefined4 result;\n  int index;\n  code *code_ptr;\n  undefined4 extra_param_1;\n  undefined4 extra_param_2;\n  undefined4 return_address;\n  undefined4 *data_ptr_ptr;\n  \n  data_ptr = DAT_200000a0;\n  data_ptr_ptr = &DAT_200000a0;\n  if (0x1f < input) {\n    *DAT_200000a0 = 0x16;\n    return -1;\n  }\n  index = DAT_200000a0[0x11];\n  if ((index != 0) && (code_ptr = *(code **)(index + input * 4), code_ptr != (code *)0x0)) {\n    if (code_ptr != (code *)0x1) {\n      if (code_ptr == (code *)0xffffffff) {\n        *DAT_200000a0 = 0x16;\n        return 1;\n      }\n      *(undefined4 *)(index + input * 4) = 0;\n      (*code_ptr)(input);\n    }\n    return 0;\n  }\n  result = thunk_FUN_0800410c(DAT_200000a0);\n  DAT_20000674 = 0;\n  index = FUN_080040fc(result,input,input,0,data_ptr_ptr,extra_param_1,extra_param_2,return_address);\n  if ((index == -1) && (DAT_20000674 != 0)) {\n    *data_ptr = DAT_20000674;\n  }\n  return index;\n}\n\n",
            "renaming": {
                "FUN_080055d0": "perform_operation_080055d0",
                "param_1": "input",
                "piVar1": "data_ptr",
                "uVar2": "result",
                "iVar3": "index",
                "pcVar4": "code_ptr",
                "unaff_r4": "extra_param_1",
                "unaff_r5": "extra_param_2",
                "in_lr": "return_address",
                "puVar5": "data_ptr_ptr"
            },
            "calling": [
                "FUN_080051ac"
            ],
            "called": [
                "FUN_080040fc",
                "thunk_FUN_0800410c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_0800410c": {
            "entrypoint": "0x08005604",
            "current_name": "get_true_value_thunk_0800410c",
            "code": "\nundefined4 get_true_value_thunk_0800410c(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "thunk_FUN_0800410c": "get_true_value_thunk_0800410c"
            },
            "calling": [
                "FUN_080055d0"
            ],
            "called": [
                "FUN_0800410c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005608": {
            "entrypoint": "0x08005608",
            "current_name": "update_value_08005608",
            "code": "\nvoid updateValue_08005608(undefined4 param1,int param2)\n\n{\n  int result;\n  uint newValue;\n  bool isPositive;\n  \n  result = FUN_0800573c(param1,(int)*(short *)(param2 + 0xe));\n  isPositive = -1 < result;\n  if (isPositive) {\n    newValue = *(int *)(param2 + 0x54) + result;\n  }\n  else {\n    newValue = *(ushort *)(param2 + 0xc) & 0xffffefff;\n  }\n  if (isPositive) {\n    *(uint *)(param2 + 0x54) = newValue;\n  }\n  if (!isPositive) {\n    *(short *)(param2 + 0xc) = (short)newValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005608": "update_value_08005608",
                "param_1": "param1",
                "param_2": "param2",
                "iVar1": "result",
                "uVar2": "newValue",
                "bVar3": "isPositive"
            },
            "calling": [],
            "called": [
                "FUN_0800573c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800562a": {
            "entrypoint": "0x0800562a",
            "current_name": "update_data_0800562a",
            "code": "\nvoid updateData_0800562a(int *outputArray,int inputArray,undefined4 param1,undefined4 param2)\n\n{\n  int result;\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  \n  if ((int)((uint)*(ushort *)(inputArray + 0xc) << 0x17) < 0) {\n    FUN_08005718(outputArray,(int)*(short *)(inputArray + 0xe),0,2);\n  }\n  *(ushort *)(inputArray + 0xc) = *(ushort *)(inputArray + 0xc) & 0xefff;\n  DAT_20000674 = 0;\n  result = FUN_080040ec((int)*(short *)(inputArray + 0xe),param1,param2,param2,param2,temp1,\n                       temp2,temp3);\n  if ((result == -1) && (DAT_20000674 != 0)) {\n    *outputArray = DAT_20000674;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800562a": "update_data_0800562a",
                "param_1": "outputArray",
                "param_2": "inputArray",
                "param_3": "param1",
                "param_4": "param2",
                "unaff_r4": "temp1",
                "unaff_r5": "temp2",
                "in_lr": "temp3",
                "iVar1": "result"
            },
            "calling": [],
            "called": [
                "FUN_08005718",
                "FUN_080040ec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005662": {
            "entrypoint": "0x08005662",
            "current_name": "update_status_08005662",
            "code": "\nvoid updateStatus_08005662(undefined4 data,int ptr)\n\n{\n  int result;\n  ushort status;\n  bool isError;\n  \n  result = FUN_08005718(data,(int)*(short *)(ptr + 0xe));\n  isError = result == -1;\n  if (isError) {\n    status = *(ushort *)(ptr + 0xc) & 0xefff;\n  }\n  else {\n    *(int *)(ptr + 0x54) = result;\n    status = *(ushort *)(ptr + 0xc) | 0x1000;\n  }\n  if (isError) {\n    *(ushort *)(ptr + 0xc) = status;\n  }\n  if (!isError) {\n    *(ushort *)(ptr + 0xc) = status;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005662": "update_status_08005662",
                "param_1": "data",
                "param_2": "ptr",
                "iVar1": "result",
                "uVar2": "status",
                "bVar3": "isError"
            },
            "calling": [],
            "called": [
                "FUN_08005718"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080056d4": {
            "entrypoint": "0x080056d4",
            "current_name": "process_function_080056d4",
            "code": "\nvoid processFunction_080056d4(int *outputParam,undefined4 inputParam1,undefined4 inputParam2,undefined4 inputParam3)\n\n{\n  int returnValue;\n  \n  DAT_20000674 = 0;\n  returnValue = FUN_080040d6(inputParam1,inputParam2,inputParam2,0,inputParam3);\n  if ((returnValue == -1) && (DAT_20000674 != 0)) {\n    *outputParam = DAT_20000674;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080056d4": "process_function_080056d4",
                "param_1": "outputParam",
                "param_2": "inputParam1",
                "param_3": "inputParam2",
                "param_4": "inputParam3",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_080054b4"
            ],
            "called": [
                "FUN_080040d6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080056f8": {
            "entrypoint": "0x080056f8",
            "current_name": "check_and_update_result_080056f8",
            "code": "\nvoid checkAndUpdateResult_080056f8(int *output,undefined4 input)\n\n{\n  int result;\n  \n  DAT_20000674 = 0;\n  result = FUN_080040e0(input);\n  if ((result == -1) && (DAT_20000674 != 0)) {\n    *output = DAT_20000674;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080056f8": "check_and_update_result_080056f8",
                "param_1": "output",
                "param_2": "input",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080054fc"
            ],
            "called": [
                "FUN_080040e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005718": {
            "entrypoint": "0x08005718",
            "current_name": "check_result_and_update_param_08005718",
            "code": "\nvoid checkResultAndUpdateParam_08005718(int *resultPointer,undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  int functionResult;\n  \n  DAT_20000674 = 0;\n  functionResult = FUN_080040e4(input1,input2,input3,input3,input3);\n  if ((functionResult == -1) && (DAT_20000674 != 0)) {\n    *resultPointer = DAT_20000674;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005718": "check_result_and_update_param_08005718",
                "param_1": "resultPointer",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "input3",
                "iVar1": "functionResult"
            },
            "calling": [
                "FUN_08005662",
                "FUN_0800562a"
            ],
            "called": [
                "FUN_080040e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800573c": {
            "entrypoint": "0x0800573c",
            "current_name": "check_result_and_assign_value_0800573c",
            "code": "\nvoid checkResultAndAssignValue_0800573c(int *result,undefined4 input_1,undefined4 input_2,undefined4 input_3)\n\n{\n  int returnValue;\n  \n  DAT_20000674 = 0;\n  returnValue = FUN_080040e8(input_1,input_2,input_3,input_3,input_3);\n  if ((returnValue == -1) && (DAT_20000674 != 0)) {\n    *result = DAT_20000674;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800573c": "check_result_and_assign_value_0800573c",
                "param_1": "result",
                "param_2": "input_1",
                "param_3": "input_2",
                "param_4": "input_3",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08005608"
            ],
            "called": [
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005760": {
            "entrypoint": "0x08005760",
            "current_name": "initialize_data_values_08005760",
            "code": "\nvoid initializeDataValues_08005760(void)\n\n{\n  code *jumpTable;\n  \n  jumpTable = initializeDataValues_08005760;\n  FUN_080051ac();\n  if (-1 < DAT_200005fc << 0x1f) {\n    DAT_200005fc = 1;\n  }\n  if (-1 < DAT_200005f8 << 0x1f) {\n    DAT_200005f8 = 1;\n  }\n  if (-1 < DAT_200005f4 << 0x1f) {\n    DAT_200005f4 = 1;\n  }\n  if (-1 < DAT_200005f0 << 0x1f) {\n    DAT_200005f0 = 1;\n  }\n  if (-1 < DAT_200005ec << 0x1f) {\n    DAT_200005ec = 1;\n  }\n  if (-1 < DAT_200005e8 << 0x1f) {\n    DAT_200005e8 = 1;\n  }\n  if (-1 < DAT_200005e4 << 0x1f) {\n    DAT_200005e4 = 1;\n  }\n  if (-1 < DAT_200005e0 << 0x1f) {\n    DAT_200005e0 = 1;\n  }\n  if (-1 < DAT_200005dc << 0x1f) {\n    DAT_200005dc = 1;\n  }\n  if (-1 < DAT_200005d8 << 0x1f) {\n    DAT_200005d8 = 1;\n  }\n  if (-1 < DAT_200005d4 << 0x1f) {\n    DAT_200005d4 = 1;\n  }\n  if (-1 < DAT_200005d0 << 0x1f) {\n    DAT_200005d0 = 1;\n  }\n                    /* WARNING: Could not recover jumptable at 0x080057f8. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005760": "initialize_data_values_08005760",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_080047c0"
            ],
            "called": [
                "FUN_080051ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080059f8": {
            "entrypoint": "0x080059f8",
            "current_name": "FUNC_080059f8",
            "code": "\nvoid FUNC_080059f8(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080059f8": "FUNC_080059f8"
            },
            "calling": [
                "FUN_080001ac",
                "FUN_08004884"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005a04": {
            "entrypoint": "0x08005a04",
            "current_name": "FUNC_08005a04",
            "code": "\nvoid FUNC_08005a04(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a04": "FUNC_08005a04"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        }
    },
    "used_tokens": 118232,
    "layers": [
        [
            "FUN_080001ac",
            "FUN_08000230",
            "FUN_080002d0",
            "FUN_08000300",
            "FUN_080005e0",
            "FUN_080005e4",
            "FUN_08000600",
            "FUN_0800066c",
            "FUN_08000682",
            "FUN_08000690",
            "FUN_080006b4",
            "FUN_08000728",
            "FUN_0800076c",
            "FUN_080007f0",
            "FUN_080008cc",
            "FUN_080008e2",
            "FUN_08000998",
            "FUN_08000a00",
            "FUN_08000a4e",
            "FUN_08000a7a",
            "FUN_08000b04",
            "FUN_08000b54",
            "FUN_08000c4c",
            "FUN_08000c64",
            "FUN_08000c8c",
            "FUN_08000d8e",
            "FUN_08000d98",
            "FUN_08000de4",
            "FUN_08000e18",
            "FUN_08000e30",
            "FUN_08000e3c",
            "FUN_08000e60",
            "FUN_08000ec4",
            "FUN_08000ee0",
            "FUN_08000f0c",
            "FUN_08000f2c",
            "FUN_08000f4e",
            "FUN_08000f56",
            "FUN_08000f72",
            "FUN_08000f8c",
            "FUN_08000fb4",
            "FUN_08001198",
            "FUN_080011a4",
            "FUN_080011c0",
            "FUN_0800124a",
            "FUN_08001256",
            "FUN_08001420",
            "FUN_08001440",
            "FUN_08001460",
            "FUN_080014ec",
            "FUN_08001578",
            "FUN_080015bc",
            "FUN_0800160e",
            "FUN_0800165a",
            "FUN_08001684",
            "FUN_0800171a",
            "FUN_08001864",
            "FUN_08001904",
            "FUN_080019a0",
            "FUN_08001ab0",
            "FUN_08001bfc",
            "FUN_08001d00",
            "FUN_08001e68",
            "FUN_08001f9c",
            "FUN_0800201c",
            "FUN_080023b4",
            "FUN_08002488",
            "FUN_080025e0",
            "FUN_080025ec",
            "FUN_0800260c",
            "FUN_0800262c",
            "FUN_0800268e",
            "FUN_080026ce",
            "FUN_08002848",
            "FUN_08002864",
            "FUN_080028d4",
            "FUN_080028f0",
            "FUN_08002940",
            "FUN_0800295c",
            "FUN_080029c8",
            "FUN_08002d0c",
            "FUN_08002d72",
            "FUN_08002dd0",
            "FUN_08002eb2",
            "FUN_08002efa",
            "FUN_08002f4c",
            "FUN_08002f66",
            "FUN_08002ffc",
            "FUN_0800312c",
            "FUN_08003138",
            "FUN_0800314e",
            "FUN_0800316c",
            "FUN_0800318c",
            "FUN_080031fc",
            "FUN_08003380",
            "FUN_0800339c",
            "FUN_080033c8",
            "FUN_080033d8",
            "FUN_0800340c",
            "FUN_08003414",
            "FUN_0800346c",
            "FUN_08003476",
            "FUN_08003486",
            "FUN_080034b6",
            "FUN_080034ce",
            "FUN_080034da",
            "FUN_080034f4",
            "FUN_08003506",
            "FUN_0800351e",
            "FUN_0800352e",
            "FUN_0800354a",
            "FUN_0800355e",
            "FUN_08003582",
            "FUN_08003594",
            "FUN_080035bc",
            "FUN_080035fc",
            "FUN_08003750",
            "FUN_08003754",
            "FUN_0800376e",
            "FUN_0800377c",
            "FUN_0800387c",
            "FUN_08003880",
            "FUN_080038d0",
            "FUN_08003900",
            "FUN_08003978",
            "FUN_08003cc8",
            "FUN_08003d18",
            "FUN_08003dd0",
            "FUN_08003df4",
            "FUN_08003e18",
            "FUN_08003e54",
            "FUN_08003eac",
            "FUN_08003f00",
            "FUN_08003f24",
            "FUN_08003f48",
            "FUN_08004094",
            "FUN_080040d0",
            "FUN_080040d6",
            "FUN_080040e0",
            "FUN_080040e4",
            "FUN_080040e8",
            "FUN_080040ec",
            "FUN_080040f8",
            "FUN_080040fc",
            "FUN_0800410c",
            "FUN_08004110",
            "FUN_080041bc",
            "FUN_08004204",
            "FUN_08004240",
            "FUN_080042ac",
            "FUN_080042e8",
            "FUN_08004364",
            "FUN_08004388",
            "FUN_08004444",
            "FUN_08004460",
            "FUN_0800447c",
            "FUN_080044d8",
            "FUN_08004544",
            "FUN_08004560",
            "FUN_08004640",
            "FUN_08004648",
            "FUN_08004658",
            "FUN_08004678",
            "FUN_080046b4",
            "FUN_080047c0",
            "FUN_080047d0",
            "FUN_080047fe",
            "FUN_08004808",
            "FUN_08004844",
            "FUN_08004860",
            "FUN_08004884",
            "FUN_080048cc",
            "FUN_080048dc",
            "FUN_08004978",
            "FUN_08004a34",
            "FUN_08004a60",
            "FUN_08004a84",
            "FUN_08004cb0",
            "FUN_08004d9c",
            "FUN_08004fdc",
            "FUN_0800500c",
            "FUN_080050d0",
            "FUN_080051ac",
            "FUN_080052cc",
            "FUN_0800532c",
            "FUN_08005374",
            "FUN_080053a0",
            "FUN_08005400",
            "FUN_080054b4",
            "FUN_080054fc",
            "FUN_080055d0",
            "thunk_FUN_0800410c",
            "FUN_08005608",
            "FUN_0800562a",
            "FUN_08005662",
            "FUN_080056d4",
            "FUN_080056f8",
            "FUN_08005718",
            "FUN_0800573c",
            "FUN_08005760"
        ]
    ],
    "locked_functions": []
}