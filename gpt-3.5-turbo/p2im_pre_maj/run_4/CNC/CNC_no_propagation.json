{
    "functions": {
        "FUN_08000188": {
            "entrypoint": "0x08000188",
            "current_name": "set_flag_if_not_set_08000188",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08000194) */\n\nundefined4 setFlagIfNotSet_08000188(undefined4 input)\n\n{\n  if ((char)DAT_2000044c == '\\0') {\n    DAT_2000044c._0_1_ = '\\x01';\n  }\n  return input;\n}\n\n",
            "renaming": {
                "FUN_08000188": "set_flag_if_not_set_08000188",
                "param_1": "input"
            },
            "calling": [],
            "called": [
                "FUN_0800b5b0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080001ac": {
            "entrypoint": "0x080001ac",
            "current_name": "combine_parameters_080001ac",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x080001b2) */\n\nundefined8 combineParameters_080001ac(undefined4 firstParam,undefined4 secondParam)\n\n{\n  return CONCAT44(secondParam,firstParam);\n}\n\n",
            "renaming": {
                "FUN_080001ac": "combine_parameters_080001ac",
                "param_1": "firstParam",
                "param_2": "secondParam"
            },
            "calling": [
                "FUN_0800b3e8"
            ],
            "called": [
                "FUN_0800b5b0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080001c8": {
            "entrypoint": "0x080001c8",
            "current_name": "FUNC_080001c8",
            "code": "\nvoid FUNC_080001c8(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001c8": "FUNC_080001c8"
            },
            "calling": [
                "FUN_08000220"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080001d4": {
            "entrypoint": "0x080001d4",
            "current_name": "FUNC_080001d4",
            "code": "\nvoid FUNC_080001d4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001d4": "FUNC_080001d4"
            },
            "calling": [
                "FUN_08000210"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080001e0": {
            "entrypoint": "0x080001e0",
            "current_name": "FUNC_080001e0",
            "code": "\nvoid FUNC_080001e0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001e0": "FUNC_080001e0"
            },
            "calling": [
                "FUN_08000220"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080001ec": {
            "entrypoint": "0x080001ec",
            "current_name": "FUNC_080001ec",
            "code": "\nvoid FUNC_080001ec(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001ec": "FUNC_080001ec"
            },
            "calling": [
                "FUN_08000210"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080001f8": {
            "entrypoint": "0x080001f8",
            "current_name": "initialize_data_080001f8",
            "code": "\nvoid initializeData_080001f8(void)\n\n{\n  DAT_20000468 = 0;\n  FUN_08000210();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001f8": "initialize_data_080001f8"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08000210"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000210": {
            "entrypoint": "0x08000210",
            "current_name": "initialize_system_08000210",
            "code": "\nvoid initialize_system_08000210(void)\n\n{\n  FUNC_080001ec();\n  FUNC_080001d4();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000210": "initialize_system_08000210"
            },
            "calling": [
                "FUN_08000220",
                "FUN_080025e8",
                "FUN_080001f8"
            ],
            "called": [
                "FUN_080001d4",
                "FUN_080001ec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000220": {
            "entrypoint": "0x08000220",
            "current_name": "update_state_08000220",
            "code": "\nvoid updateState_08000220(char newState)\n\n{\n  if (newState != DAT_20000468) {\n    FUN_08002fd4();\n    if (newState == '\\x01') {\n      FUNC_080001c8();\n      DAT_20000468 = newState;\n    }\n    else if (newState == '\\x02') {\n      FUNC_080001e0();\n      DAT_20000468 = newState;\n    }\n    else {\n      FUN_08000210();\n      DAT_20000468 = newState;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000220": "update_state_08000220",
                "param_1": "newState"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_080001e0",
                "FUN_08000210",
                "FUN_080001c8",
                "FUN_08002fd4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000268": {
            "entrypoint": "0x08000268",
            "current_name": "calculate_adjusted_value_08000268",
            "code": "\n\n\nint calculateAdjustedValue_08000268(void)\n\n{\n  int result;\n  \n  result = FUN_08005a84();\n  return (result + 1) * 1000 - _DAT_e000e018 / 0xa8;\n}\n\n",
            "renaming": {
                "FUN_08000268": "calculate_adjusted_value_08000268",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080002b6"
            ],
            "called": [
                "FUN_08005a84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080002a0": {
            "entrypoint": "0x080002a0",
            "current_name": "initialize_function_080002a0",
            "code": "\nvoid initializeFunction_080002a0(undefined4 arg)\n\n{\n  FUN_08005a98(arg);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080002a0": "initialize_function_080002a0",
                "param_1": "arg"
            },
            "calling": [
                "FUN_08002408"
            ],
            "called": [
                "FUN_08005a98"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080002b6": {
            "entrypoint": "0x080002b6",
            "current_name": "find_smallest_080002b6",
            "code": "\nvoid findSmallest_080002b6(uint input)\n\n{\n  uint upper;\n  uint lower;\n  bool isLowerOrEqual;\n  longlong result;\n  undefined8 temp;\n  \n  result = FUN_08000268();\n  lower = (uint)(result + (ulonglong)input >> 0x20);\n  do {\n    temp = FUN_08000268();\n    upper = (uint)((ulonglong)temp >> 0x20);\n    isLowerOrEqual = lower <= upper;\n    if (upper == lower) {\n      isLowerOrEqual = (uint)(result + (ulonglong)input) <= (uint)temp;\n    }\n  } while (!isLowerOrEqual);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080002b6": "find_smallest_080002b6",
                "param_1": "input",
                "uVar1": "upper",
                "uVar2": "lower",
                "bVar3": "isLowerOrEqual",
                "lVar4": "result",
                "uVar5": "temp"
            },
            "calling": [],
            "called": [
                "FUN_08000268"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080002f0": {
            "entrypoint": "0x080002f0",
            "current_name": "initialize_data_080002f0",
            "code": "\nvoid initializeData_080002f0(void)\n\n{\n  FUN_0800b430(&DAT_20000470,0xff,4);\n  DAT_2000046c = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080002f0": "initialize_data_080002f0"
            },
            "calling": [
                "FUN_08000374",
                "FUN_08000340",
                "FUN_080003ec",
                "FUN_08000310"
            ],
            "called": [
                "FUN_0800b430"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000310": {
            "entrypoint": "0x08000310",
            "current_name": "get_indexed_data_08000310",
            "code": "\nundefined getIndexedData_08000310(uint index)\n\n{\n  if (DAT_2000046c == 0) {\n    FUN_080002f0();\n  }\n  return (&DAT_20000470)[index & 0x3ff];\n}\n\n",
            "renaming": {
                "FUN_08000310": "get_indexed_data_08000310",
                "param_1": "index"
            },
            "calling": [
                "FUN_08004dd2",
                "FUN_080003ec"
            ],
            "called": [
                "FUN_080002f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000340": {
            "entrypoint": "0x08000340",
            "current_name": "store_data_08000340",
            "code": "\nvoid storeData_08000340(uint index,undefined data)\n\n{\n  if (DAT_2000046c == 0) {\n    FUN_080002f0();\n  }\n  (&DAT_20000470)[index & 0x3ff] = data;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000340": "store_data_08000340",
                "param_1": "index",
                "param_2": "data"
            },
            "calling": [
                "FUN_08000374",
                "FUN_08004c2a"
            ],
            "called": [
                "FUN_080002f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000374": {
            "entrypoint": "0x08000374",
            "current_name": "calculate_checksum_08000374",
            "code": "\nvoid calculate_checksum_08000374(int input_size,char *input_buffer,int buffer_size)\n\n{\n  int remaining_size;\n  char *current_byte;\n  int checksum;\n  char is_nonzero;\n  \n  is_nonzero = '\\0';\n  remaining_size = buffer_size;\n  current_byte = input_buffer;\n  checksum = input_size;\n  if (DAT_2000046c == 0) {\n    FUN_080002f0();\n    current_byte = input_buffer;\n    checksum = input_size;\n  }\n  for (; remaining_size != 0; remaining_size = remaining_size + -1) {\n    is_nonzero = (is_nonzero != '\\0') + *current_byte;\n    FUN_08000340(checksum,*current_byte);\n    current_byte = current_byte + 1;\n    checksum = checksum + 1;\n  }\n  FUN_08000340(checksum,is_nonzero);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000374": "calculate_checksum_08000374",
                "param_1": "input_size",
                "param_2": "input_buffer",
                "param_3": "buffer_size",
                "local_1c": "remaining_size",
                "local_18": "current_byte",
                "local_14": "checksum",
                "local_9": "is_nonzero"
            },
            "calling": [
                "FUN_08004bc0",
                "FUN_08004c2a",
                "FUN_08004bf4"
            ],
            "called": [
                "FUN_08000340",
                "FUN_080002f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080003ec": {
            "entrypoint": "0x080003ec",
            "current_name": "check_equality_080003ec",
            "code": "\nbool checkEquality_080003ec(char *inputString,int startIndex,int length)\n\n{\n  char currentValue;\n  uint expectedValue;\n  int remainingLength;\n  int currentIndex;\n  char *currentChar;\n  byte sum;\n  \n  sum = 0;\n  remainingLength = length;\n  currentIndex = startIndex;\n  currentChar = inputString;\n  if (DAT_2000046c == 0) {\n    FUN_080002f0();\n    currentIndex = startIndex;\n    currentChar = inputString;\n  }\n  for (; remainingLength != 0; remainingLength = remainingLength + -1) {\n    currentValue = FUN_08000310(currentIndex);\n    sum = currentValue + (sum != 0);\n    *currentChar = currentValue;\n    currentIndex = currentIndex + 1;\n    currentChar = currentChar + 1;\n  }\n  expectedValue = FUN_08000310(currentIndex);\n  return sum == expectedValue;\n}\n\n",
            "renaming": {
                "FUN_080003ec": "check_equality_080003ec",
                "param_1": "inputString",
                "param_2": "startIndex",
                "param_3": "length",
                "local_1c": "remainingLength",
                "local_18": "currentIndex",
                "local_14": "currentChar",
                "local_9": "sum",
                "cVar1": "currentValue",
                "uVar2": "expectedValue"
            },
            "calling": [
                "FUN_08004d7c",
                "FUN_08004dd2",
                "FUN_08004d2c"
            ],
            "called": [
                "FUN_08000310",
                "FUN_080002f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000478": {
            "entrypoint": "0x08000478",
            "current_name": "initialize_data_08000478",
            "code": "\nvoid initializeData_08000478(undefined data1,undefined data2,undefined data3)\n\n{\n  DAT_20000e89 = data1;\n  DAT_20000e8a = data2;\n  DAT_20000e8b = data3;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000478": "initialize_data_08000478",
                "param_1": "data1",
                "param_2": "data2",
                "param_3": "data3"
            },
            "calling": [
                "FUN_080004ac",
                "FUN_080005b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080004ac": {
            "entrypoint": "0x080004ac",
            "current_name": "initialize_data_080004ac",
            "code": "\nvoid initializeData_080004ac(void)\n\n{\n  int returnCode;\n  \n  FUN_0800b430(&DAT_20000e70,0,0x38);\n  DAT_20000e78 = DAT_20000ecc;\n  FUN_08000478(0,1,2);\n  DAT_20000e74 = 1;\n  returnCode = FUN_08004d7c(DAT_20000e8c,&DAT_20000e90);\n  if (returnCode == 0) {\n    FUN_08004030(10);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080004ac": "initialize_data_080004ac",
                "iVar1": "returnCode"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_0800b430",
                "FUN_08000478",
                "FUN_08004d7c",
                "FUN_08004030"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080004fc": {
            "entrypoint": "0x080004fc",
            "current_name": "initialize_data_080004fc",
            "code": "\nvoid initializeData_080004fc(undefined4 data1,undefined4 data2,undefined4 data3)\n\n{\n  undefined4 processedData;\n  \n  processedData = FUN_08008e44(data1);\n  DAT_20000e7c = FUN_08009054(processedData,DAT_20000ebc);\n  processedData = FUN_08008e44(data2);\n  DAT_20000e80 = FUN_08009054(processedData,DAT_20000ec0);\n  processedData = FUN_08008e44(data3);\n  DAT_20000e84 = FUN_08009054(processedData,DAT_20000ec4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080004fc": "initialize_data_080004fc",
                "param_1": "data1",
                "param_2": "data2",
                "param_3": "data3",
                "uVar1": "processedData"
            },
            "calling": [
                "FUN_0800283a"
            ],
            "called": [
                "FUN_08009054",
                "FUN_08008e44"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800056c": {
            "entrypoint": "0x0800056c",
            "current_name": "process_data_0800056c",
            "code": "\nundefined4 processData_0800056c(undefined4 input)\n\n{\n  undefined8 result;\n  \n  if (DAT_20000e73 != '\\0') {\n    result = FUN_08008590(input);\n    result = FUN_08008640((int)result,(int)((ulonglong)result >> 0x20),0x66666666,0x40396666);\n    input = FUN_08008c30((int)result,(int)((ulonglong)result >> 0x20));\n  }\n  return input;\n}\n\n",
            "renaming": {
                "FUN_0800056c": "process_data_0800056c",
                "param_1": "input",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08008640",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080005b4": {
            "entrypoint": "0x080005b4",
            "current_name": "process_data_080005b4",
            "code": "\nchar processData_080005b4(undefined4 input_data)\n\n{\n  int result;\n  undefined4 temp_var1;\n  char status;\n  uint temp_var2;\n  undefined4 temp_var3;\n  undefined8 temp_var4;\n  undefined8 temp_var5;\n  undefined8 temp_var6;\n  undefined4 array1 [4];\n  undefined4 temp_var7;\n  undefined4 temp_var8;\n  undefined4 temp_var9;\n  undefined4 temp_var10;\n  undefined4 temp_var11;\n  undefined4 array2 [6];\n  undefined4 temp_var12;\n  byte data;\n  undefined flag1;\n  undefined4 temp_var13;\n  undefined4 temp_var14;\n  undefined flag2;\n  uint temp_var15;\n  byte temp_var16;\n  byte temp_var17;\n  byte temp_var18;\n  byte temp_var19;\n  char flag3;\n  uint temp_var20;\n  undefined4 temp_var21;\n  sbyte temp_var22;\n  char temp_var23;\n  char temp_var24;\n  undefined4 temp_var25;\n  byte temp_var26;\n  ushort temp_var27;\n  uint temp_var28;\n  \n  if (DAT_20000ea9 == '\\x06') {\n    status = '\\f';\n  }\n  else {\n    flag1 = 0;\n    temp_var27 = 0;\n    temp_var26 = 0;\n    temp_var25 = 0xbf800000;\n    temp_var24 = '\\0';\n    temp_var23 = '\\0';\n    FUN_0800b430(array2 + 3,0,0xc);\n    FUN_0800b430(array2,0,0xc);\n    DAT_20000e70 = '\\0';\n    temp_var22 = 0;\n    while (result = FUN_0800184c(&data,array2 + 6,input_data,&flag1), result != 0) {\n      temp_var4 = FUN_08008590(temp_var12);\n      temp_var4 = FUN_08009798((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20));\n      temp_var28 = FUN_08008ba0((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20));\n      if (data == 0x47) {\n        switch(temp_var28) {\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n        case 0x50:\n          temp_var22 = 2;\n          break;\n        case 4:\n        case 10:\n        case 0x1c:\n        case 0x1e:\n        case 0x35:\n        case 0x5c:\n          temp_var22 = 1;\n          break;\n        case 0x11:\n        case 0x12:\n        case 0x13:\n          temp_var22 = 3;\n          break;\n        case 0x14:\n        case 0x15:\n          temp_var22 = 7;\n          break;\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n          temp_var22 = 9;\n          break;\n        case 0x5a:\n        case 0x5b:\n          temp_var22 = 4;\n          break;\n        case 0x5d:\n        case 0x5e:\n          temp_var22 = 6;\n        }\n        switch(temp_var28) {\n        case 0:\n          DAT_20000e71 = '\\0';\n          break;\n        case 1:\n          DAT_20000e71 = '\\x01';\n          break;\n        case 2:\n          DAT_20000e71 = '\\x02';\n          break;\n        case 3:\n          DAT_20000e71 = '\\x03';\n          break;\n        case 4:\n          temp_var23 = '\\x01';\n          break;\n        default:\n          DAT_20000e70 = '\\x03';\n          break;\n        case 10:\n          temp_var23 = '\\x02';\n          break;\n        case 0x11:\n          FUN_08000478(0,1,2);\n          break;\n        case 0x12:\n          FUN_08000478(2,0,1);\n          break;\n        case 0x13:\n          FUN_08000478(1,2,0);\n          break;\n        case 0x14:\n          DAT_20000e73 = 1;\n          break;\n        case 0x15:\n          DAT_20000e73 = 0;\n          break;\n        case 0x1c:\n        case 0x1e:\n          temp_var1 = FUN_08008eec(temp_var12,0x41200000);\n          temp_var4 = FUN_08008590(temp_var1);\n          temp_var4 = FUN_08009798((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20));\n          temp_var28 = FUN_08008ba0((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20));\n          switch(temp_var28) {\n          case 0x118:\n            temp_var23 = '\\x03';\n            break;\n          case 0x119:\n            temp_var23 = '\\x04';\n            break;\n          default:\n            DAT_20000e70 = '\\x03';\n            break;\n          case 300:\n            temp_var23 = '\\x05';\n            break;\n          case 0x12d:\n            temp_var23 = '\\x06';\n          }\n          break;\n        case 0x35:\n          temp_var24 = '\\x01';\n          break;\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n          DAT_20000e8c = (char)temp_var28 - 0x36;\n          break;\n        case 0x50:\n          DAT_20000e71 = '\\x04';\n          break;\n        case 0x5a:\n          DAT_20000e74 = '\\x01';\n          break;\n        case 0x5b:\n          DAT_20000e74 = '\\0';\n          break;\n        case 0x5c:\n          temp_var1 = FUN_08008eec(temp_var12,0x41200000);\n          temp_var4 = FUN_08008590(temp_var1);\n          temp_var4 = FUN_08009798((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20));\n          temp_var28 = FUN_08008ba0((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20));\n          if (temp_var28 == 0x398) {\n            temp_var23 = '\\a';\n          }\n          else if (temp_var28 == 0x399) {\n            temp_var23 = '\\b';\n          }\n          else {\n            DAT_20000e70 = '\\x03';\n          }\n          break;\n        case 0x5d:\n          DAT_20000e72 = '\\x01';\n          break;\n        case 0x5e:\n          DAT_20000e72 = '\\0';\n        }\n      }\n      else if (data == 0x4d) {\n        if (temp_var28 == 0x1e) {\nLAB_08000b96:\n          temp_var22 = 5;\n        }\n        else if ((int)temp_var28 < 0x1f) {\n          if ((int)temp_var28 < 3) {\n            if (-1 < (int)temp_var28) goto LAB_08000b96;\n          }\n          else if (temp_var28 - 3 < 3) {\n            temp_var22 = 8;\n          }\n        }\n        switch(temp_var28) {\n        case 0:\n          DAT_20000e75 = '\\x01';\n          break;\n        case 1:\n          break;\n        case 2:\n        case 0x1e:\n          DAT_20000e75 = '\\x02';\n          break;\n        case 3:\n          DAT_20000e76 = '\\x01';\n          break;\n        case 4:\n          DAT_20000e76 = -1;\n          break;\n        case 5:\n          DAT_20000e76 = '\\0';\n          break;\n        default:\n          DAT_20000e70 = '\\x03';\n          break;\n        case 7:\n          DAT_20000e77 = 2;\n          break;\n        case 8:\n          DAT_20000e77 = 1;\n          break;\n        case 9:\n          DAT_20000e77 = 0;\n        }\n      }\n      if (temp_var22 != 0) {\n        if (((int)(uint)temp_var27 >> temp_var22 & 1U) == 0) {\n          temp_var27 = temp_var27 | (ushort)(1 << temp_var22);\n        }\n        else {\n          DAT_20000e70 = '\\x05';\n        }\n        temp_var22 = 0;\n      }\n    }\n    status = DAT_20000e70;\n    if (DAT_20000e70 == '\\0') {\n      temp_var21 = 0;\n      temp_var20 = 0;\n      flag3 = '\\0';\n      flag1 = 0;\nswitchD_08000d18_caseD_47:\n      result = FUN_0800184c(&data,array2 + 6,input_data,&flag1);\n      if (result != 0) {\n        switch(data) {\n        case 0x46:\n          result = FUN_0800923c(temp_var12,0);\n          if (result != 0) {\n            DAT_20000e70 = '\\x06';\n          }\n          if (DAT_20000e72 == '\\0') {\n            DAT_20000e78 = FUN_0800056c(temp_var12);\n          }\n          else {\n            temp_var25 = FUN_0800056c(temp_var12);\n          }\n          break;\n        case 0x47:\n        case 0x4d:\n        case 0x4e:\n          break;\n        default:\n          DAT_20000e70 = '\\x03';\n          break;\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n          temp_var2 = (uint)data;\n          temp_var1 = FUN_0800056c(temp_var12);\n          array2[temp_var2 - 0x49] = temp_var1;\n          break;\n        case 0x4c:\n          temp_var4 = FUN_08008590(temp_var12);\n          temp_var4 = FUN_08009798((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20));\n          flag3 = FUN_08008bf0((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20));\n          break;\n        case 0x50:\n          temp_var21 = temp_var12;\n          break;\n        case 0x52:\n          temp_var20 = FUN_0800056c(temp_var12);\n          break;\n        case 0x53:\n          result = FUN_08009228(temp_var12,0);\n          if (result != 0) {\n            DAT_20000e70 = '\\x06';\n          }\n          break;\n        case 0x54:\n          result = FUN_08009228(temp_var12,0);\n          if (result != 0) {\n            DAT_20000e70 = '\\x06';\n          }\n          temp_var4 = FUN_08008590(temp_var12);\n          temp_var4 = FUN_08009798((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20));\n          DAT_20000e88 = FUN_08008bf0((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20));\n          break;\n        case 0x58:\n          array2[3] = FUN_0800056c(temp_var12);\n          temp_var26 = temp_var26 | 1;\n          break;\n        case 0x59:\n          array2[4] = FUN_0800056c(temp_var12);\n          temp_var26 = temp_var26 | 2;\n          break;\n        case 0x5a:\n          array2[5] = FUN_0800056c(temp_var12);\n          temp_var26 = temp_var26 | 4;\n        }\n        goto switchD_08000d18_caseD_47;\n      }\n      status = DAT_20000e70;\n      if (DAT_20000e70 == '\\0') {\n        if (DAT_20000ea9 != '\\a') {\n          FUN_0800525c((int)DAT_20000e76);\n          FUN_08000220(DAT_20000e77);\n        }\n        if ((temp_var27 & 0x200) != 0) {\n          result = FUN_08004d7c(DAT_20000e8c,&temp_var9);\n          if (result == 0) {\n            return '\\n';\n          }\n          DAT_20000e90 = temp_var9;\n          DAT_20000e94 = temp_var10;\n          DAT_20000e98 = temp_var11;\n        }\n        switch(temp_var23) {\n        case '\\x01':\n          result = FUN_08009228(temp_var21,0);\n          if (result == 0) {\n            if (DAT_20000ea9 != '\\a') {\n              FUN_08002408(temp_var21);\n            }\n          }\n          else {\n            DAT_20000e70 = '\\x06';\n          }\n          break;\n        case '\\x02':\n          temp_var4 = FUN_08008590(temp_var21);\n          temp_var4 = FUN_08009798((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20));\n          temp_var28 = FUN_08008ba0((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20));\n          if ((((flag3 == '\\x02') || (flag3 == '\\x14')) && (-1 < (int)temp_var28)) &&\n             ((int)temp_var28 < 7)) {\n            if ((temp_var26 == 0) && (flag3 == '\\x02')) {\n              DAT_20000e70 = '\\x06';\n            }\n            else {\n              if ((int)temp_var28 < 1) {\n                temp_var28 = (uint)DAT_20000e8c;\n              }\n              else {\n                temp_var28 = temp_var28 - 1;\n              }\n              result = FUN_08004d7c(temp_var28 & 0xff,array1);\n              if (result == 0) {\n                return '\\n';\n              }\n              for (temp_var19 = 0; temp_var19 < 3; temp_var19 = temp_var19 + 1) {\n                if (((int)(uint)temp_var26 >> temp_var19 & 1U) != 0) {\n                  if (flag3 == '\\x14') {\n                    temp_var2 = (uint)temp_var19;\n                    temp_var1 = FUN_08008cd8(*(undefined4 *)(&DAT_20000e74 + (temp_var19 + 2) * 4),\n                                         array2[temp_var19 + 3]);\n                    array1[temp_var2] = temp_var1;\n                  }\n                  else {\n                    array1[temp_var19] = array2[temp_var19 + 3];\n                  }\n                }\n              }\n              FUN_08004bf4(temp_var28 & 0xff,array1);\n              if (temp_var28 == DAT_20000e8c) {\n                DAT_20000e90 = array1[0];\n                DAT_20000e94 = array1[1];\n                DAT_20000e98 = array1[2];\n              }\n            }\n          }\n          else {\n            DAT_20000e70 = '\\x03';\n          }\n          temp_var26 = 0;\n          break;\n        case '\\x03':\n        case '\\x05':\n          if (temp_var26 != 0) {\n            for (temp_var18 = 0; temp_var18 < 3; temp_var18 = temp_var18 + 1) {\n              if (((int)(uint)temp_var26 >> temp_var18 & 1U) == 0) {\n                array2[temp_var18 + 3] = *(undefined4 *)(&DAT_20000e74 + (temp_var18 + 2) * 4);\n              }\n              else if (DAT_20000e74 == '\\0') {\n                temp_var2 = (uint)temp_var18;\n                temp_var1 = FUN_08008cdc(array2[temp_var18 + 3],\n                                     *(undefined4 *)(&DAT_20000e74 + (temp_var18 + 2) * 4));\n                array2[temp_var2 + 3] = temp_var1;\n              }\n              else {\n                temp_var3 = array2[temp_var18 + 3];\n                temp_var1 = FUN_08008cdc(*(undefined4 *)(&DAT_20000e70 + (temp_var18 + 8) * 4),\n                                     *(undefined4 *)(&DAT_20000e74 + (temp_var18 + 10) * 4));\n                temp_var2 = (uint)temp_var18;\n                temp_var1 = FUN_08008cdc(temp_var3,temp_var1);\n                array2[temp_var2 + 3] = temp_var1;\n              }\n            }\n            FUN_08001e98(array2[3],array2[4],array2[5],DAT_20000ed0,0);\n          }\n          if (temp_var23 == '\\x05') {\n            result = FUN_08004d7c(7,array1 + 3);\n            if (result == 0) {\n              return '\\n';\n            }\n          }\n          else {\n            result = FUN_08004d7c(6,array1 + 3);\n            if (result == 0) {\n              return '\\n';\n            }\n          }\n          FUN_08001e98(array1[3],temp_var7,temp_var8,DAT_20000ed0,0);\n          DAT_20000e7c = array1[3];\n          DAT_20000e80 = temp_var7;\n          DAT_20000e84 = temp_var8;\n          temp_var26 = 0;\n          break;\n        case '\\x04':\n        case '\\x06':\n          if (temp_var23 == '\\x06') {\n            FUN_08004bf4(7,&DAT_20000e7c);\n          }\n          else {\n            FUN_08004bf4(6,&DAT_20000e7c);\n          }\n          break;\n        case '\\a':\n          if (temp_var26 == 0) {\n            DAT_20000e70 = '\\x06';\n          }\n          else {\n            for (temp_var17 = 0; temp_var17 < 3; temp_var17 = temp_var17 + 1) {\n              if (((int)(uint)temp_var26 >> temp_var17 & 1U) != 0) {\n                temp_var1 = FUN_08008cd8(*(undefined4 *)(&DAT_20000e74 + (temp_var17 + 2) * 4),\n                                     *(undefined4 *)(&DAT_20000e70 + (temp_var17 + 8) * 4));\n                temp_var2 = (uint)temp_var17;\n                temp_var1 = FUN_08008cd8(temp_var1,array2[temp_var17 + 3]);\n                *(undefined4 *)(&DAT_20000e74 + (temp_var2 + 10) * 4) = temp_var1;\n              }\n            }\n          }\n          temp_var26 = 0;\n          break;\n        case '\\b':\n          FUN_0800b430(&DAT_20000e9c,0,0xc);\n        }\n        if (((temp_var27 & 4) != 0) || (temp_var26 != 0)) {\n          if ((DAT_20000e72 != '\\0') &&\n             ((result = FUN_08009228(temp_var25,0), result != 0 && (DAT_20000e71 != '\\x04')))) {\n            DAT_20000e70 = '\\x06';\n          }\n          if (((temp_var24 != '\\0') && (DAT_20000e71 != '\\0')) && (DAT_20000e71 != '\\x01')) {\n            DAT_20000e70 = '\\x06';\n          }\n          if (DAT_20000e70 != '\\0') {\n            return DAT_20000e70;\n          }\n          for (temp_var16 = 0; temp_var16 < 3; temp_var16 = temp_var16 + 1) {\n            if (((int)(uint)temp_var26 >> temp_var16 & 1U) == 0) {\n              array2[temp_var16 + 3] = *(undefined4 *)(&DAT_20000e74 + (temp_var16 + 2) * 4);\n            }\n            else if (temp_var24 == '\\0') {\n              if (DAT_20000e74 == '\\0') {\n                temp_var2 = (uint)temp_var16;\n                temp_var1 = FUN_08008cdc(array2[temp_var16 + 3],\n                                     *(undefined4 *)(&DAT_20000e74 + (temp_var16 + 2) * 4));\n                array2[temp_var2 + 3] = temp_var1;\n              }\n              else {\n                temp_var3 = array2[temp_var16 + 3];\n                temp_var1 = FUN_08008cdc(*(undefined4 *)(&DAT_20000e70 + (temp_var16 + 8) * 4),\n                                     *(undefined4 *)(&DAT_20000e74 + (temp_var16 + 10) * 4));\n                temp_var2 = (uint)temp_var16;\n                temp_var1 = FUN_08008cdc(temp_var3,temp_var1);\n                array2[temp_var2 + 3] = temp_var1;\n              }\n            }\n          }\n          switch(DAT_20000e71) {\n          case '\\0':\n            if (temp_var26 == 0) {\n              DAT_20000e70 = '\\x06';\n            }\n            else {\n              FUN_08001e98(array2[3],array2[4],array2[5],DAT_20000ed0,0);\n            }\n            break;\n          case '\\x01':\n            if (temp_var26 == 0) {\n              DAT_20000e70 = '\\x06';\n            }\n            else {\n              temp_var1 = temp_var25;\n              if (DAT_20000e72 == '\\0') {\n                temp_var1 = DAT_20000e78;\n              }\n              FUN_08001e98(array2[3],array2[4],array2[5],temp_var1,DAT_20000e72);\n            }\n            break;\n          case '\\x02':\n          case '\\x03':\n            temp_var26 = temp_var26 & ~(byte)(1 << DAT_20000e8b);\n            if ((temp_var26 == 0) ||\n               (((result = FUN_08009214(temp_var20,0), result != 0 &&\n                 (result = FUN_08009214(array2[DAT_20000e89],0), result != 0)) &&\n                (result = FUN_08009214(array2[DAT_20000e8a],0), result != 0)))) {\n              DAT_20000e70 = '\\x06';\n            }\n            else {\n              result = FUN_08009214(temp_var20,0);\n              if (result == 0) {\n                temp_var14 = FUN_08008cd8(array2[DAT_20000e89 + 3],\n                                        *(undefined4 *)(&DAT_20000e74 + (DAT_20000e89 + 2) * 4));\n                temp_var13 = FUN_08008cd8(array2[DAT_20000e8a + 3],\n                                        *(undefined4 *)(&DAT_20000e74 + (DAT_20000e8a + 2) * 4));\n                FUN_0800b430(array2,0,0xc);\n                temp_var1 = FUN_08008eec(temp_var20,0x40800000);\n                temp_var1 = FUN_08008eec(temp_var1,temp_var20);\n                temp_var3 = FUN_08008eec(temp_var14,temp_var14);\n                temp_var1 = FUN_08008cd8(temp_var1,temp_var3);\n                temp_var3 = FUN_08008eec(temp_var13,temp_var13);\n                temp_var15 = FUN_08008cd8(temp_var1,temp_var3);\n                result = FUN_08009228(temp_var15,0);\n                if (result != 0) {\n                  DAT_20000e70 = 4;\n                  return '\\x04';\n                }\n                temp_var4 = FUN_08008590(temp_var15);\n                temp_var4 = FUN_080098d0((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20));\n                temp_var5 = FUN_08008590(temp_var14);\n                temp_var6 = FUN_08008590(temp_var13);\n                temp_var5 = FUN_0800981c((int)temp_var5,(int)((ulonglong)temp_var5 >> 0x20),(int)temp_var6,\n                                     (int)((ulonglong)temp_var6 >> 0x20));\n                temp_var4 = FUN_08008894((int)temp_var4,(uint)((ulonglong)temp_var4 >> 0x20) ^ 0x80000000,\n                                     (int)temp_var5,(int)((ulonglong)temp_var5 >> 0x20));\n                temp_var15 = FUN_08008c30((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20));\n                if (DAT_20000e71 == '\\x03') {\n                  temp_var15 = temp_var15 ^ 0x80000000;\n                }\n                result = FUN_08009228(temp_var20,0);\n                if (result != 0) {\n                  temp_var15 = temp_var15 ^ 0x80000000;\n                  temp_var20 = temp_var20 ^ 0x80000000;\n                }\n                temp_var1 = FUN_08008eec(temp_var13,temp_var15);\n                temp_var1 = FUN_08008cd8(temp_var14,temp_var1);\n                temp_var2 = (uint)DAT_20000e89;\n                temp_var1 = FUN_08008eec(temp_var1,0x3f000000);\n                array2[temp_var2] = temp_var1;\n                temp_var1 = FUN_08008eec(temp_var14,temp_var15);\n                temp_var1 = FUN_08008cdc(temp_var1,temp_var13);\n                temp_var2 = (uint)DAT_20000e8a;\n                temp_var1 = FUN_08008eec(temp_var1,0x3f000000);\n                array2[temp_var2] = temp_var1;\n              }\n              else {\n                temp_var4 = FUN_08008590(array2[DAT_20000e89]);\n                temp_var5 = FUN_08008590(array2[DAT_20000e8a]);\n                temp_var4 = FUN_0800981c((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20),(int)temp_var5,\n                                     (int)((ulonglong)temp_var5 >> 0x20));\n                temp_var20 = FUN_08008c30((int)temp_var4,(int)((ulonglong)temp_var4 >> 0x20));\n              }\n              flag2 = DAT_20000e71 == '\\x02';\n              temp_var1 = temp_var25;\n              if (DAT_20000e72 == '\\0') {\n                temp_var1 = DAT_20000e78;\n              }\n              FUN_08001f00(&DAT_20000e7c,array2 + 3,array2,DAT_20000e89,DAT_20000e8a,\n                           DAT_20000e8b,temp_var1,DAT_20000e72,temp_var20,flag2);\n            }\n            break;\n          case '\\x04':\n            if (temp_var26 != 0) {\n              DAT_20000e70 = '\\x06';\n            }\n          }\n          if (DAT_20000e70 != '\\0') {\n            return DAT_20000e70;\n          }\n          DAT_20000e7c = array2[3];\n          DAT_20000e80 = array2[4];\n          DAT_20000e84 = array2[5];\n        }\n        status = DAT_20000e70;\n        if (DAT_20000e75 != '\\0') {\n          FUN_08002fd4();\n          DAT_20000eb8 = 0;\n          if (DAT_20000e75 == '\\x02') {\n            FUN_080025e8();\n            status = DAT_20000e70;\n          }\n          else {\n            DAT_20000e75 = '\\0';\n            status = DAT_20000e70;\n          }\n        }\n      }\n    }\n  }\n  return status;\n}\n\n",
            "renaming": {
                "FUN_080005b4": "process_data_080005b4",
                "param_1": "input_data",
                "iVar1": "result",
                "uVar2": "temp_var1",
                "cVar3": "status",
                "uVar4": "temp_var2",
                "uVar5": "temp_var3",
                "uVar6": "temp_var4",
                "uVar7": "temp_var5",
                "uVar8": "temp_var6",
                "local_94": "array1",
                "local_84": "temp_var7",
                "local_80": "temp_var8",
                "local_7c": "temp_var9",
                "uStack_78": "temp_var10",
                "uStack_74": "temp_var11",
                "auStack_70": "array2",
                "local_58": "temp_var12",
                "local_52": "data",
                "local_51": "flag1",
                "local_50": "temp_var13",
                "local_4c": "temp_var14",
                "local_45": "flag2",
                "local_44": "temp_var15",
                "local_3d": "temp_var16",
                "local_3c": "temp_var17",
                "local_3b": "temp_var18",
                "local_3a": "temp_var19",
                "local_39": "flag3",
                "local_38": "temp_var20",
                "local_34": "temp_var21",
                "local_2f": "temp_var22",
                "local_2e": "temp_var23",
                "local_2d": "temp_var24",
                "local_2c": "temp_var25",
                "local_27": "temp_var26",
                "local_26": "temp_var27",
                "local_24": "temp_var28"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080039bc"
            ],
            "called": [
                "FUN_08000478",
                "FUN_08009214",
                "FUN_0800923c",
                "FUN_08001f00",
                "FUN_08008bf0",
                "FUN_08004bf4",
                "FUN_08008590",
                "FUN_08009228",
                "FUN_0800184c",
                "FUN_08000220",
                "FUN_08008cdc",
                "FUN_08008cd8",
                "FUN_0800525c",
                "FUN_08009798",
                "FUN_080025e8",
                "FUN_08008ba0",
                "FUN_08002408",
                "FUN_08008894",
                "FUN_08002fd4",
                "FUN_0800b430",
                "FUN_08001e98",
                "FUN_080098d0",
                "FUN_08004d7c",
                "FUN_0800056c",
                "FUN_0800981c",
                "FUN_08008eec",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800184c": {
            "entrypoint": "0x0800184c",
            "current_name": "check_and_process_byte_0800184c",
            "code": "\nundefined4 check_and_process_byte_0800184c(byte *output_buffer,undefined4 context,int base_address,byte *byte_buffer)\n\n{\n  int result;\n  undefined4 success_status;\n  \n  if (*(char *)(base_address + (uint)*byte_buffer) == '\\0') {\n    success_status = 0;\n  }\n  else {\n    *output_buffer = *(byte *)(base_address + (uint)*byte_buffer);\n    if ((*output_buffer < 0x41) || (0x5a < *output_buffer)) {\n      DAT_20000e70 = 2;\n      success_status = 0;\n    }\n    else {\n      *byte_buffer = *byte_buffer + 1;\n      result = FUN_08002638(base_address,byte_buffer,context);\n      if (result == 0) {\n        DAT_20000e70 = 1;\n        success_status = 0;\n      }\n      else {\n        success_status = 1;\n      }\n    }\n  }\n  return success_status;\n}\n\n",
            "renaming": {
                "FUN_0800184c": "check_and_process_byte_0800184c",
                "param_1": "output_buffer",
                "param_2": "context",
                "param_3": "base_address",
                "param_4": "byte_buffer",
                "iVar1": "result",
                "uVar2": "success_status"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08002638"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080018cc": {
            "entrypoint": "0x080018cc",
            "current_name": "set_flag_bits_080018cc",
            "code": "\n\n\nvoid setFlagBits_080018cc(uint newFlag)\n\n{\n  _DAT_40021014 = newFlag | _DAT_40021014 & 0xfffffaaf;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080018cc": "set_flag_bits_080018cc",
                "param_1": "newFlag"
            },
            "calling": [
                "FUN_08001994"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080018fc": {
            "entrypoint": "0x080018fc",
            "current_name": "update_data_080018fc",
            "code": "\n\n\nvoid updateData_080018fc(uint inputValue)\n\n{\n  _DAT_40021014 = inputValue | _DAT_40021014 & 0xfffff55f;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080018fc": "update_data_080018fc",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08001994"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800192c": {
            "entrypoint": "0x0800192c",
            "current_name": "check_bit_and_set_0800192c",
            "code": "\nvoid checkBitAndSet_0800192c(void)\n\n{\n  DAT_20000e4c = (uint)((DAT_20000ee4 & 8) != 0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800192c": "check_bit_and_set_0800192c"
            },
            "calling": [
                "FUN_08004e30",
                "FUN_08001ddc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800195c": {
            "entrypoint": "0x0800195c",
            "current_name": "check_and_update_settings_0800195c",
            "code": "\nvoid checkAndUpdateSettings_0800195c(void)\n\n{\n  if ((DAT_20000ea9 != '\\x06') && ((DAT_20000eaa & 0x20) == 0)) {\n    FUN_080025e8();\n    DAT_20000eaa = DAT_20000eaa | 0x40;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800195c": "check_and_update_settings_0800195c"
            },
            "calling": [
                "FUN_080074c8"
            ],
            "called": [
                "FUN_080025e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001994": {
            "entrypoint": "0x08001994",
            "current_name": "process_data_08001994",
            "code": "\nvoid processData_08001994(byte flags,char param2,char param3,undefined4 data)\n\n{\n  undefined4 result1;\n  uint maxValue;\n  undefined8 result2;\n  undefined8 result3;\n  byte local_flag;\n  uint value1;\n  uint value2;\n  uint value3;\n  ushort value4;\n  uint value5;\n  int value6;\n  undefined4 valuePtr;\n  uint value7;\n  uint value8;\n  ushort value9;\n  uint value10;\n  uint value11;\n  int value12;\n  int value13;\n  int value14;\n  int value15;\n  ushort value16;\n  uint value17;\n  char local_char;\n  \n  local_char = '\\0';\n  FUN_0800b430(&value1,0,0xc);\n  if ((flags & 1) != 0) {\n    local_char = local_char + '\\x01';\n    result2 = FUN_08008590(DAT_20000ebc);\n    value1 = FUN_080095b8((int)result2,(int)((ulonglong)result2 >> 0x20));\n  }\n  if ((flags & 2) != 0) {\n    local_char = local_char + '\\x01';\n    result2 = FUN_08008590(DAT_20000ec0);\n    value2 = FUN_080095b8((int)result2,(int)((ulonglong)result2 >> 0x20));\n  }\n  if ((flags & 4) != 0) {\n    local_char = local_char + '\\x01';\n    result2 = FUN_08008590(DAT_20000ec4);\n    value3 = FUN_080095b8((int)result2,(int)((ulonglong)result2 >> 0x20));\n  }\n  maxValue = value3;\n  if (value3 < value2) {\n    maxValue = value2;\n  }\n  value7 = value1;\n  if (value1 < maxValue) {\n    value7 = maxValue;\n  }\n  result2 = FUN_0800854c(value7);\n  result3 = FUN_0800854c(local_char);\n  result3 = FUN_080098d0((int)result3,(int)((ulonglong)result3 >> 0x20));\n  result2 = FUN_08008894((int)result2,(int)((ulonglong)result2 >> 0x20),(int)result3,\n                       (int)((ulonglong)result3 >> 0x20));\n  valuePtr = FUN_08008c30((int)result2,(int)((ulonglong)result2 >> 0x20));\n  result1 = FUN_08008eec(DAT_20000edc,valuePtr);\n  result1 = FUN_08009054(result1,0x453b8000);\n  result2 = FUN_08008590(result1);\n  result2 = FUN_08009318((int)result2,(int)((ulonglong)result2 >> 0x20));\n  value6 = FUN_08008bf0((int)result2,(int)((ulonglong)result2 >> 0x20));\n  result2 = FUN_0800854c(local_char);\n  result2 = FUN_080098d0((int)result2,(int)((ulonglong)result2 >> 0x20));\n  result3 = FUN_08008590(data);\n  result2 = FUN_08008640((int)result2,(int)((ulonglong)result2 >> 0x20),(int)result3,\n                       (int)((ulonglong)result3 >> 0x20));\n  result1 = FUN_08008c30((int)result2,(int)((ulonglong)result2 >> 0x20));\n  result1 = FUN_08008eec(valuePtr,result1);\n  result1 = FUN_08009054(0x4c64e1c0,result1);\n  result2 = FUN_08008590(result1);\n  value5 = FUN_080095b8((int)result2,(int)((ulonglong)result2 >> 0x20));\n  value17 = 75000;\n  if (value5 < 75000) {\n    value17 = value5;\n  }\n  value4 = DAT_20000ed4;\n  value16 = DAT_20000ed6 ^ DAT_20000ee6 & 0xaa0;\n  if (param2 == '\\0') {\n    value16 = value16 ^ 0xaa0;\n  }\n  FUN_080018fc(value16);\n  FUN_080018cc(value4);\n  value13 = -(value7 >> 1);\n  value12 = value17 - DAT_20000ec9;\n  value11 = 0;\n  value10 = 10000;\n  local_flag = flags;\n  value14 = value13;\n  value15 = value13;\n  while( true ) {\n    value9 = value4;\n    value8 = FUN_080078f4();\n    if (param3 == '\\0') {\n      value8 = value8 ^ 0x1e;\n    }\n    if (((local_flag & 1) != 0) && (value15 = value15 + value1, 0 < value15)) {\n      if ((value8 & 0x10) == 0) {\n        local_flag = local_flag & 0xfe;\n      }\n      else {\n        value9 = value9 ^ 0x10;\n      }\n      value15 = value15 - value7;\n    }\n    if (((local_flag & 2) != 0) && (value14 = value14 + value2, 0 < value14)) {\n      if ((value8 & 8) == 0) {\n        local_flag = local_flag & 0xfd;\n      }\n      else {\n        value9 = value9 ^ 0x440;\n      }\n      value14 = value14 - value7;\n    }\n    if (((local_flag & 4) != 0) && (value13 = value13 + value3, 0 < value13)) {\n      if ((value8 & 4) == 0) {\n        local_flag = local_flag & 0xfb;\n      }\n      else {\n        value9 = value9 ^ 0x100;\n      }\n      value13 = value13 - value7;\n    }\n    if ((local_flag == 0) || ((DAT_20000eaa & 0x10) != 0)) break;\n    FUN_080018cc(value9);\n    FUNC_08002828(DAT_20000ec9);\n    FUN_080018cc(value4);\n    FUNC_08002828(value12);\n    if ((value5 < value17) && (value10 = value17 + value10, 20000 < value10)) {\n      value10 = value10 - 20000;\n      value11 = value6 + value11;\n      value17 = 60000000 / value11;\n      if (value17 < value5) {\n        value17 = value5;\n      }\n      value12 = value17 - DAT_20000ec9;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001994": "process_data_08001994",
                "param_1": "flags",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "data",
                "uVar1": "result1",
                "uVar2": "maxValue",
                "uVar3": "result2",
                "uVar4": "result3",
                "local_61": "local_flag",
                "local_5c": "value1",
                "local_58": "value2",
                "local_54": "value3",
                "local_4e": "value4",
                "local_4c": "value5",
                "local_48": "value6",
                "local_44": "valuePtr",
                "local_40": "value7",
                "local_3c": "value8",
                "local_36": "value9",
                "local_34": "value10",
                "local_30": "value11",
                "local_2c": "value12",
                "local_28": "value13",
                "local_24": "value14",
                "local_20": "value15",
                "local_1a": "value16",
                "local_18": "value17",
                "local_11": "local_char"
            },
            "calling": [
                "FUN_08001d4c"
            ],
            "called": [
                "FUN_080095b8",
                "FUN_08009054",
                "FUN_08009318",
                "FUN_0800854c",
                "FUN_080078f4",
                "FUN_08008894",
                "FUN_08008640",
                "FUN_08008bf0",
                "FUN_080018cc",
                "FUN_0800b430",
                "FUN_08008590",
                "FUN_080098d0",
                "FUN_080018fc",
                "FUN_08008eec",
                "FUN_08008c30",
                "FUN_08002828"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001d4c": {
            "entrypoint": "0x08001d4c",
            "current_name": "initialize_and_process_data_08001d4c",
            "code": "\nvoid initializeAndProcessData_08001d4c(void)\n\n{\n  char counter;\n  char flag;\n  \n  FUN_08005790();\n  FUN_08001994(4,1,0,DAT_20000eec);\n  FUN_08001994(3,1,0,DAT_20000eec);\n  FUNC_08002814(DAT_20000ef0);\n  flag = '\\x02';\n  while( true ) {\n    counter = flag + -1;\n    if (flag == '\\0') break;\n    FUN_08001994(7,0,1,DAT_20000ee8);\n    FUNC_08002814(DAT_20000ef0);\n    flag = counter;\n    if ('\\0' < counter) {\n      FUN_08001994(7,1,0,DAT_20000ee8);\n      FUNC_08002814(DAT_20000ef0);\n    }\n  }\n  FUN_080057e4();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001d4c": "initialize_and_process_data_08001d4c",
                "cVar1": "counter",
                "local_9": "flag"
            },
            "calling": [
                "FUN_080024c4"
            ],
            "called": [
                "FUN_08002814",
                "FUN_08005790",
                "FUN_080057e4",
                "FUN_08001994"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001ddc": {
            "entrypoint": "0x08001ddc",
            "current_name": "initialize_application_08001ddc",
            "code": "\nvoid initializeApplication_08001ddc(void)\n\n{\n  FUNC_08008244();\n  FUN_080051b4();\n  FUN_0800583c();\n  FUN_0800b430(&DAT_20000ea8,0,0x14);\n  DAT_20000ea8 = '\\x01';\n  DAT_20000ea9 = '\\x01';\n  do {\n    if (DAT_20000ea8 != '\\0') {\n      FUNC_080082ba();\n      FUN_08002f24();\n      FUN_080004ac();\n      FUN_080039a0();\n      FUN_08005238();\n      FUN_080001f8();\n      FUN_0800192c();\n      FUN_08005814();\n      FUN_0800283a();\n      DAT_20000ea8 = '\\0';\n      DAT_20000eaa = 0;\n      if ((DAT_20000ee4 & 2) != 0) {\n        DAT_20000eb8 = 1;\n      }\n      if ((DAT_20000ea9 == '\\x01') && ((DAT_20000ee4 & 0x10) != 0)) {\n        DAT_20000ea9 = '\\x06';\n      }\n      if (DAT_20000ea9 == '\\x06') {\n        FUN_080041a0(2);\n      }\n      else {\n        DAT_20000ea9 = '\\0';\n        FUN_080039bc();\n      }\n    }\n    FUN_08003a74();\n    FUN_08003f34();\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08001ddc": "initialize_application_08001ddc"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_08005814",
                "FUN_0800583c",
                "FUN_08005238",
                "FUN_08008244",
                "FUN_08003f34",
                "FUN_080039bc",
                "FUN_0800283a",
                "FUN_080082ba",
                "FUN_080051b4",
                "FUN_0800192c",
                "FUN_0800b430",
                "FUN_080039a0",
                "FUN_08003a74",
                "FUN_080004ac",
                "FUN_08002f24",
                "FUN_080001f8",
                "FUN_080041a0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001e98": {
            "entrypoint": "0x08001e98",
            "current_name": "check_and_process_function_08001e98",
            "code": "\nvoid checkAndProcessFunction_08001e98(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4,\n                 undefined arg5)\n\n{\n  int loopCounter;\n  \n  if (DAT_20000ea9 != '\\a') {\n    do {\n      FUN_08003a74();\n      if (DAT_20000ea8 != '\\0') {\n        return;\n      }\n      loopCounter = FUN_08002fac();\n    } while (loopCounter != 0);\n    FUN_08003004(arg1,arg2,arg3,arg4,arg5);\n    if (DAT_20000ea9 == '\\0') {\n      DAT_20000ea9 = '\\x02';\n    }\n    if (DAT_20000eb8 != '\\0') {\n      FUN_0800585c();\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001e98": "check_and_process_function_08001e98",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "param_5": "arg5",
                "iVar1": "loopCounter"
            },
            "calling": [
                "FUN_080005b4",
                "FUN_08001f00",
                "FUN_080024c4"
            ],
            "called": [
                "FUN_0800585c",
                "FUN_08003004",
                "FUN_08002fac",
                "FUN_08003a74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001f00": {
            "entrypoint": "0x08001f00",
            "current_name": "calculate_result_08001f00",
            "code": "\nvoid calculateResult_08001f00(int input1,undefined4 *inputArray,int input2,byte byte1,byte byte2,byte byte3\n                 ,undefined4 param1,char param2,undefined4 param3,char param4)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  int status;\n  uint temp1;\n  undefined8 temp2;\n  undefined8 temp3;\n  uint localResults [4];\n  undefined4 temp4;\n  undefined4 temp5;\n  undefined4 temp6;\n  undefined4 temp7;\n  undefined4 temp8;\n  undefined4 temp9;\n  ushort iterationCount;\n  undefined4 temp10;\n  undefined4 temp11;\n  undefined4 temp12;\n  uint temp13;\n  undefined4 temp14;\n  undefined4 temp15;\n  char counter;\n  ushort index;\n  undefined4 result;\n  uint temp;\n  uint temp16;\n  \n  temp15 = FUN_08008cdc(*(undefined4 *)((uint)byte1 * 4 + input1),\n                          *(undefined4 *)((uint)byte1 * 4 + input2));\n  temp14 = FUN_08008cdc(*(undefined4 *)((uint)byte2 * 4 + input1),\n                          *(undefined4 *)((uint)byte2 * 4 + input2));\n  temp13 = FUN_08008cd8(inputArray[byte3],*(undefined4 *)((uint)byte3 * 4 + input1));\n  temp16 = *(uint *)((uint)byte1 * 4 + input2) ^ 0x80000000;\n  temp = *(uint *)((uint)byte2 * 4 + input2) ^ 0x80000000;\n  temp12 = FUN_08008cd8(inputArray[byte1],temp15);\n  temp11 = FUN_08008cd8(inputArray[byte2],temp14);\n  result1 = FUN_08008eec(temp16,temp11);\n  result2 = FUN_08008eec(temp,temp12);\n  result1 = FUN_08008cd8(result1,result2);\n  temp2 = FUN_08008590(result1);\n  result1 = FUN_08008eec(temp16,temp12);\n  result2 = FUN_08008eec(temp,temp11);\n  result1 = FUN_08008cdc(result1,result2);\n  temp3 = FUN_08008590(result1);\n  temp2 = thunk_FUN_08009990((int)temp2,(int)((ulonglong)temp2 >> 0x20),(int)temp3,\n                             (int)((ulonglong)temp3 >> 0x20));\n  result = FUN_08008c30((int)temp2,(int)((ulonglong)temp2 >> 0x20));\n  if (param4 == '\\0') {\n    status = FUN_0800923c(result,0);\n    if (status != 0) {\n      temp2 = FUN_08008590(result);\n      temp2 = FUN_080082d4((int)temp2,(int)((ulonglong)temp2 >> 0x20),0x54442d18,0x401921fb);\n      result = FUN_08008c30((int)temp2,(int)((ulonglong)temp2 >> 0x20));\n    }\n  }\n  else {\n    status = FUN_08009250(result,0);\n    if (status != 0) {\n      temp2 = FUN_08008590(result);\n      temp2 = FUN_080082d0((int)temp2,(int)((ulonglong)temp2 >> 0x20),0x54442d18,0x401921fb);\n      result = FUN_08008c30((int)temp2,(int)((ulonglong)temp2 >> 0x20));\n    }\n  }\n  result1 = FUN_08008eec(result,param3);\n  temp2 = FUN_08008590(result1);\n  temp3 = FUN_08008590(temp13 & 0x7fffffff);\n  temp2 = FUN_0800981c((int)temp2,(int)((ulonglong)temp2 >> 0x20),(int)temp3,\n                       (int)((ulonglong)temp3 >> 0x20));\n  temp10 = FUN_08008c30((int)temp2,(int)((ulonglong)temp2 >> 0x20));\n  status = FUN_08009214(temp10,0);\n  if (status == 0) {\n    result1 = FUN_08009054(temp10,DAT_20000ed8);\n    temp2 = FUN_08008590(result1);\n    temp2 = FUN_080094c0((int)temp2,(int)((ulonglong)temp2 >> 0x20));\n    iterationCount = FUN_08008bf0((int)temp2,(int)((ulonglong)temp2 >> 0x20));\n    if (param2 != '\\0') {\n      result1 = FUN_08008e44(iterationCount);\n      param1 = FUN_08008eec(param1,result1);\n    }\n    result1 = FUN_08008e44(iterationCount);\n    temp9 = FUN_08009054(result,result1);\n    result1 = FUN_08008e44(iterationCount);\n    temp8 = FUN_08009054(temp13,result1);\n    temp2 = FUN_08008590(temp9);\n    temp2 = FUN_08008640((int)temp2,(int)((ulonglong)temp2 >> 0x20),0,0x3fe00000);\n    temp3 = FUN_08008590(temp9);\n    temp2 = FUN_08008640((int)temp2,(int)((ulonglong)temp2 >> 0x20),(int)temp3,\n                         (int)((ulonglong)temp3 >> 0x20));\n    temp2 = FUN_080082d0(0,0x3ff00000,(int)temp2,(int)((ulonglong)temp2 >> 0x20));\n    temp7 = FUN_08008c30((int)temp2,(int)((ulonglong)temp2 >> 0x20));\n    temp6 = temp9;\n    counter = '\\0';\n    localResults[byte3] = *(uint *)(input1 + (uint)byte3 * 4);\n    for (index = 1; index < iterationCount; index = index + 1) {\n      if ((int)counter < (int)(uint)DAT_20000efa) {\n        result1 = FUN_08008eec(temp16,temp6);\n        result2 = FUN_08008eec(temp,temp7);\n        localResults[3] = FUN_08008cdc(result1,result2);\n        result1 = FUN_08008eec(temp16,temp7);\n        result2 = FUN_08008eec(temp,temp6);\n        temp16 = FUN_08008cd8(result1,result2);\n        temp = localResults[3];\n        counter = counter + '\\x01';\n      }\n      else {\n        result1 = FUN_08008e44(index);\n        result1 = FUN_08008eec(result1,temp9);\n        temp2 = FUN_08008590(result1);\n        temp2 = FUN_08009410((int)temp2,(int)((ulonglong)temp2 >> 0x20));\n        temp5 = FUN_08008c30((int)temp2,(int)((ulonglong)temp2 >> 0x20));\n        result1 = FUN_08008e44(index);\n        result1 = FUN_08008eec(result1,temp9);\n        temp2 = FUN_08008590(result1);\n        temp2 = FUN_080096e8((int)temp2,(int)((ulonglong)temp2 >> 0x20));\n        temp4 = FUN_08008c30((int)temp2,(int)((ulonglong)temp2 >> 0x20));\n        result1 = FUN_08008eec(*(uint *)((uint)byte1 * 4 + input2) ^ 0x80000000,temp5);\n        result2 = FUN_08008eec(*(undefined4 *)((uint)byte2 * 4 + input2),temp4);\n        temp16 = FUN_08008cdc(result1,result2);\n        result1 = FUN_08008eec(*(uint *)((uint)byte1 * 4 + input2) ^ 0x80000000,temp4);\n        result2 = FUN_08008eec(*(undefined4 *)((uint)byte2 * 4 + input2),temp5);\n        temp = FUN_08008cd8(result1,result2);\n        counter = '\\0';\n      }\n      temp1 = FUN_08008cdc(temp15,temp16);\n      localResults[byte1] = temp1;\n      temp1 = FUN_08008cdc(temp14,temp);\n      localResults[byte2] = temp1;\n      temp1 = FUN_08008cdc(localResults[byte3],temp8);\n      localResults[byte3] = temp1;\n      FUN_08001e98(localResults[0],localResults[1],localResults[2],param1,param2);\n      if (DAT_20000ea8 != '\\0') {\n        return;\n      }\n    }\n    FUN_08001e98(*inputArray,inputArray[1],inputArray[2],param1,param2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001f00": "calculate_result_08001f00",
                "param_1": "input1",
                "param_2": "inputArray",
                "param_3": "input2",
                "param_4": "byte1",
                "param_5": "byte2",
                "param_6": "byte3",
                "param_7": "param1",
                "param_8": "param2",
                "param_9": "param3",
                "param_10": "param4",
                "uVar1": "result1",
                "uVar2": "result2",
                "iVar3": "status",
                "uVar4": "temp1",
                "uVar5": "temp2",
                "uVar6": "temp3",
                "local_6c": "localResults",
                "local_5c": "temp4",
                "local_58": "temp5",
                "local_54": "temp6",
                "local_50": "temp7",
                "local_4c": "temp8",
                "local_48": "temp9",
                "local_42": "iterationCount",
                "local_40": "temp10",
                "local_3c": "temp11",
                "local_38": "temp12",
                "local_34": "temp13",
                "local_30": "temp14",
                "local_2c": "temp15",
                "local_27": "counter",
                "local_26": "index",
                "local_24": "result",
                "local_20": "temp",
                "local_1c": "temp16"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08008cd8",
                "FUN_08008e44",
                "FUN_080096e8",
                "FUN_08009054",
                "FUN_08009214",
                "FUN_0800923c",
                "FUN_08008640",
                "FUN_08008bf0",
                "FUN_08008590",
                "FUN_080082d0",
                "FUN_080094c0",
                "FUN_08001e98",
                "FUN_08009410",
                "FUN_0800981c",
                "FUN_08008eec",
                "thunk_FUN_08009990",
                "FUN_08009250",
                "FUN_08008cdc",
                "FUN_08008c30",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002408": {
            "entrypoint": "0x08002408",
            "current_name": "extract_and_process_data_08002408",
            "code": "\nvoid extract_and_process_data_08002408(undefined4 input_data)\n\n{\n  undefined2 result_1;\n  undefined4 result_2;\n  undefined4 result_3;\n  undefined8 result_4;\n  ushort counter;\n  \n  result_2 = FUN_08008eec(input_data,0x41a00000);\n  result_4 = FUN_08008590(result_2);\n  result_4 = FUN_080094c0((int)result_4,(int)((ulonglong)result_4 >> 0x20));\n  counter = FUN_08008bf0((int)result_4,(int)((ulonglong)result_4 >> 0x20));\n  FUN_08002fd4();\n  result_2 = FUN_08008eec(input_data,0x447a0000);\n  result_3 = FUN_08008e44((uint)counter * 0x32);\n  result_2 = FUN_08008cd8(result_2,result_3);\n  result_4 = FUN_08008590(result_2);\n  result_4 = FUN_080094c0((int)result_4,(int)((ulonglong)result_4 >> 0x20));\n  result_1 = FUN_08008bf0((int)result_4,(int)((ulonglong)result_4 >> 0x20));\n  FUNC_08002814(result_1);\n  while ((counter != 0 && (FUN_08003a74(), DAT_20000ea8 == '\\0'))) {\n    FUN_080002a0(0x32);\n    counter = counter - 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002408": "extract_and_process_data_08002408",
                "param_1": "input_data",
                "uVar1": "result_1",
                "uVar2": "result_2",
                "uVar3": "result_3",
                "uVar4": "result_4",
                "local_12": "counter"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08008e44",
                "FUN_080094c0",
                "FUN_08008cd8",
                "FUN_080002a0",
                "FUN_08003a74",
                "FUN_08002814",
                "FUN_08008eec",
                "FUN_08008bf0",
                "FUN_08002fd4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080024c4": {
            "entrypoint": "0x080024c4",
            "current_name": "initialize_settings_080024c4",
            "code": "\nvoid initializeSettings_080024c4(void)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  char flag3;\n  char flag2;\n  char flag1;\n  \n  DAT_20000ea9 = 5;\n  DAT_20000e4c = 0;\n  FUN_08001d4c();\n  FUN_08003a74();\n  if (DAT_20000ea8 == '\\0') {\n    FUN_0800b430(&DAT_20000eac,0,0xc);\n    FUN_0800283a();\n    DAT_20000ea9 = 0;\n    if ((DAT_20000ee6 & 0x20) == 0) {\n      flag1 = -1;\n    }\n    else {\n      flag1 = '\\x01';\n    }\n    if ((DAT_20000ee6 & 0x80) == 0) {\n      flag2 = -1;\n    }\n    else {\n      flag2 = '\\x01';\n    }\n    if ((DAT_20000ee6 & 0x200) == 0) {\n      flag3 = -1;\n    }\n    else {\n      flag3 = '\\x01';\n    }\n    uVar1 = FUN_08008e44((int)flag1);\n    uVar1 = FUN_08008eec(uVar1,DAT_20000ef4);\n    uVar2 = FUN_08008e44((int)flag2);\n    uVar2 = FUN_08008eec(uVar2,DAT_20000ef4);\n    uVar3 = FUN_08008e44((int)flag3);\n    uVar3 = FUN_08008eec(uVar3,DAT_20000ef4);\n    FUN_08001e98(uVar1,uVar2,uVar3,DAT_20000eec,0);\n    FUN_0800585c();\n    FUN_08002fd4();\n    FUN_0800283a();\n    if ((DAT_20000ee4 & 8) != 0) {\n      DAT_20000e4c = 1;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080024c4": "initialize_settings_080024c4",
                "local_11": "flag1",
                "local_12": "flag2",
                "local_13": "flag3"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_0800b430",
                "FUN_0800585c",
                "FUN_08008e44",
                "FUN_08001e98",
                "FUN_08003a74",
                "FUN_08008eec",
                "FUN_08001d4c",
                "FUN_0800283a",
                "FUN_08002fd4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080025e8": {
            "entrypoint": "0x080025e8",
            "current_name": "initialize_flags_080025e8",
            "code": "\nvoid initializeFlags_080025e8(void)\n\n{\n  if ((DAT_20000eaa & 0x10) == 0) {\n    DAT_20000eaa = DAT_20000eaa | 0x10;\n    FUN_08005250();\n    FUN_08000210();\n    if (DAT_20000ea9 - 3 < 3) {\n      DAT_20000eaa = DAT_20000eaa | 0x20;\n      FUN_080057e4();\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080025e8": "initialize_flags_080025e8"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080005b4",
                "FUN_0800195c",
                "FUN_08005900",
                "FUN_08003a18"
            ],
            "called": [
                "FUN_08005250",
                "FUN_08000210",
                "FUN_080057e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002638": {
            "entrypoint": "0x08002638",
            "current_name": "parse_integer_08002638",
            "code": "\nundefined4 parseInteger_08002638(int startOffset,byte *byteArray,uint *result)\n\n{\n  byte digit;\n  bool isNegative;\n  bool isFractional;\n  int errorCode;\n  char *currentChar;\n  char *nextChar;\n  undefined4 returnValue;\n  undefined8 tempValue;\n  uint temp;\n  byte digitCount;\n  char decimalPlaces;\n  int parsedInteger;\n  char firstChar;\n  char *currentOffset;\n  \n  nextChar = (char *)(startOffset + (uint)*byteArray);\n  currentChar = nextChar + 1;\n  firstChar = *nextChar;\n  isNegative = false;\n  if (firstChar == '-') {\n    isNegative = true;\n    firstChar = *currentChar;\n    currentOffset = nextChar + 2;\n  }\n  else {\n    currentOffset = currentChar;\n    if (firstChar == '+') {\n      currentOffset = nextChar + 2;\n      firstChar = *currentChar;\n    }\n  }\n  parsedInteger = 0;\n  decimalPlaces = '\\0';\n  digitCount = 0;\n  isFractional = false;\n  do {\n    digit = firstChar - 0x30;\n    if (digit < 10) {\n      digitCount = digitCount + 1;\n      if (digitCount < 9) {\n        if (isFractional) {\n          decimalPlaces = decimalPlaces + -1;\n        }\n        parsedInteger = (uint)digit + parsedInteger * 10;\n      }\n      else if (!isFractional) {\n        decimalPlaces = decimalPlaces + '\\x01';\n      }\n    }\n    else {\n      if ((digit != 0xfe) || (isFractional)) {\n        if (digitCount == 0) {\n          returnValue = 0;\n        }\n        else {\n          temp = FUN_08008e3c(parsedInteger);\n          errorCode = FUN_08009214(temp,0);\n          if (errorCode == 0) {\n            for (; decimalPlaces < -1; decimalPlaces = decimalPlaces + '\\x02') {\n              tempValue = FUN_08008590(temp);\n              tempValue = FUN_08008640((int)tempValue,(int)((ulonglong)tempValue >> 0x20),0x47ae147b,0x3f847ae1)\n              ;\n              temp = FUN_08008c30((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n            }\n            if (decimalPlaces < '\\0') {\n              tempValue = FUN_08008590(temp);\n              tempValue = FUN_08008640((int)tempValue,(int)((ulonglong)tempValue >> 0x20),0x9999999a,0x3fb99999)\n              ;\n              temp = FUN_08008c30((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n            }\n            else {\n              for (; '\\0' < decimalPlaces; decimalPlaces = decimalPlaces + -1) {\n                temp = FUN_08008eec(temp,0x41200000);\n              }\n            }\n          }\n          if (isNegative) {\n            *result = temp ^ 0x80000000;\n          }\n          else {\n            *result = temp;\n          }\n          *byteArray = ((char)currentOffset - (char)startOffset) - 1;\n          returnValue = 1;\n        }\n        return returnValue;\n      }\n      isFractional = true;\n    }\n    firstChar = *currentOffset;\n    currentOffset = currentOffset + 1;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08002638": "parse_integer_08002638",
                "param_1": "startOffset",
                "param_2": "byteArray",
                "param_3": "result",
                "bVar1": "digit",
                "bVar2": "isNegative",
                "bVar3": "isFractional",
                "iVar4": "errorCode",
                "pcVar5": "currentChar",
                "pcVar6": "nextChar",
                "uVar7": "returnValue",
                "uVar8": "tempValue",
                "local_1c": "temp",
                "local_16": "digitCount",
                "local_15": "decimalPlaces",
                "local_14": "parsedInteger",
                "local_d": "firstChar",
                "local_c": "currentOffset"
            },
            "calling": [
                "FUN_0800184c",
                "FUN_08003b98"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08009214",
                "FUN_08008e3c",
                "FUN_08008eec",
                "FUN_08008640",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002814": {
            "entrypoint": "0x08002814",
            "current_name": "FUNC_08002814",
            "code": "\nvoid FUNC_08002814(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002814": "FUNC_08002814"
            },
            "calling": [
                "FUN_08001d4c",
                "FUN_08002408",
                "FUN_08004148"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002828": {
            "entrypoint": "0x08002828",
            "current_name": "FUNC_08002828",
            "code": "\nvoid FUNC_08002828(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002828": "FUNC_08002828"
            },
            "calling": [
                "FUN_08001994"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800283a": {
            "entrypoint": "0x0800283a",
            "current_name": "initialize_data_0800283a",
            "code": "\nvoid initializeData_0800283a(void)\n\n{\n  FUN_080035ec(DAT_20000eac,DAT_20000eb0,DAT_20000eb4);\n  FUN_080004fc(DAT_20000eac,DAT_20000eb0,DAT_20000eb4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800283a": "initialize_data_0800283a"
            },
            "calling": [
                "FUN_08001ddc",
                "FUN_080024c4"
            ],
            "called": [
                "FUN_080035ec",
                "FUN_080004fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002870": {
            "entrypoint": "0x08002870",
            "current_name": "increment_and_check_08002870",
            "code": "\nchar increment_and_check_08002870(char value)\n\n{\n  char result;\n  \n  result = value + '\\x01';\n  if (result == '\\x12') {\n    result = '\\0';\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002870": "increment_and_check_08002870",
                "param_1": "value",
                "local_9": "result"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08002ef0",
                "FUN_08002e08",
                "FUN_08002ba8",
                "FUN_08002f40"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002896": {
            "entrypoint": "0x08002896",
            "current_name": "decrement_and_set_default_value_08002896",
            "code": "\nchar decrementAndSetDefaultValue_08002896(char input)\n\n{\n  char result;\n  \n  result = input;\n  if (input == '\\0') {\n    result = '\\x12';\n  }\n  return result + -1;\n}\n\n",
            "renaming": {
                "FUN_08002896": "decrement_and_set_default_value_08002896",
                "param_1": "input",
                "local_9": "result"
            },
            "calling": [
                "FUN_08002a94"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080028bc": {
            "entrypoint": "0x080028bc",
            "current_name": "combine_and_process_data_080028bc",
            "code": "\nundefined4 combineAndProcessData_080028bc(undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  undefined4 combinedResult;\n  undefined4 processedResult;\n  \n  combinedResult = FUN_08008eec(input2,input2);\n  processedResult = FUN_08008eec(input1,input1);\n  combinedResult = FUN_08008cd8(combinedResult,processedResult);\n  processedResult = FUN_08008cdc(input3,input3);\n  combinedResult = FUN_08009054(combinedResult,processedResult);\n  return combinedResult;\n}\n\n",
            "renaming": {
                "FUN_080028bc": "combine_and_process_data_080028bc",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "uVar1": "combinedResult",
                "uVar2": "processedResult"
            },
            "calling": [
                "FUN_08002c18"
            ],
            "called": [
                "FUN_08009054",
                "FUN_08008cd8",
                "FUN_08008eec",
                "FUN_08008cdc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002908": {
            "entrypoint": "0x08002908",
            "current_name": "calculate_result_08002908",
            "code": "\nundefined4 calculate_result_08002908(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  \n  result1 = FUN_08008cdc(input3,input3);\n  result1 = FUN_08008eec(result1,input4);\n  result2 = FUN_08008eec(input1,input1);\n  result1 = FUN_08008cd8(result1,result2);\n  result2 = FUN_08008eec(input2,input2);\n  result1 = FUN_08008cdc(result1,result2);\n  result2 = FUN_08008eec(input3,0x40800000);\n  result1 = FUN_08009054(result1,result2);\n  return result1;\n}\n\n",
            "renaming": {
                "FUN_08002908": "calculate_result_08002908",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result1",
                "uVar2": "result2"
            },
            "calling": [
                "FUN_08002c18"
            ],
            "called": [
                "FUN_08008cd8",
                "FUN_08009054",
                "FUN_08008eec",
                "FUN_08008cdc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002978": {
            "entrypoint": "0x08002978",
            "current_name": "calculate_result_08002978",
            "code": "\nundefined4 calculateResult_08002978(undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  undefined8 finalResult;\n  \n  result1 = FUN_08008eec(input2,input2);\n  result2 = FUN_08008cdc(input1,input1);\n  result2 = FUN_08008eec(result2,input3);\n  result1 = FUN_08008cd8(result1,result2);\n  finalResult = FUN_08008590(result1);\n  finalResult = FUN_080098d0((int)finalResult,(int)((ulonglong)finalResult >> 0x20));\n  result1 = FUN_08008c30((int)finalResult,(int)((ulonglong)finalResult >> 0x20));\n  return result1;\n}\n\n",
            "renaming": {
                "FUN_08002978": "calculate_result_08002978",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "finalResult"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08002afc",
                "FUN_080029d8"
            ],
            "called": [
                "FUN_08008590",
                "FUN_080098d0",
                "FUN_08008cd8",
                "FUN_08008eec",
                "FUN_08008cdc",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080029d8": {
            "entrypoint": "0x080029d8",
            "current_name": "update_data_080029d8",
            "code": "\nvoid updateData_080029d8(undefined4 input,int data1,int data2)\n\n{\n  int result;\n  undefined4 tempVar1;\n  undefined4 tempVar2;\n  \n  if (((data1 != 0) && (data2 != 0)) &&\n     (result = FUN_08009214(*(undefined4 *)(data1 + 0x18),*(undefined4 *)(data1 + 0x1c)),\n     result == 0)) {\n    if ((*(char *)(data1 + 0x25) == '\\0') &&\n       (result = FUN_08009264(*(undefined4 *)(data1 + 0x1c),*(undefined4 *)(data2 + 0x18)),\n       result != 0)) {\n      tempVar2 = *(undefined4 *)(data1 + 0x1c);\n      tempVar1 = FUN_08002978(DAT_20000edc ^ 0x80000000,*(undefined4 *)(data2 + 0x18),\n                           *(undefined4 *)(data1 + 0x20));\n      result = FUN_08009228(tempVar2,tempVar1);\n      if (result == 0) {\n        tempVar1 = FUN_08002978(DAT_20000edc ^ 0x80000000,*(undefined4 *)(data2 + 0x18),\n                             *(undefined4 *)(data1 + 0x20));\n      }\n      else {\n        tempVar1 = *(undefined4 *)(data1 + 0x1c);\n      }\n      *(undefined4 *)(data1 + 0x18) = tempVar1;\n    }\n    else {\n      *(undefined4 *)(data1 + 0x18) = *(undefined4 *)(data1 + 0x1c);\n    }\n    *(undefined *)(data1 + 0x24) = 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080029d8": "update_data_080029d8",
                "param_1": "input",
                "param_2": "data1",
                "param_3": "data2",
                "iVar1": "result",
                "uVar2": "tempVar1",
                "uVar3": "tempVar2"
            },
            "calling": [
                "FUN_08002a94"
            ],
            "called": [
                "FUN_08009228",
                "FUN_08009214",
                "FUN_08009264",
                "FUN_08002978"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a94": {
            "entrypoint": "0x08002a94",
            "current_name": "extract_and_process_data_08002a94",
            "code": "\nvoid extractAndProcessData_08002a94(void)\n\n{\n  undefined *tempPointer;\n  undefined *previousBuffer;\n  undefined *currentBuffer;\n  byte currentByte;\n  \n  currentByte = DAT_20000cf0;\n  previousBuffer = (undefined *)0x0;\n  currentBuffer = (undefined *)0x0;\n  while (tempPointer = currentBuffer, currentByte != DAT_20000cf1) {\n    currentByte = FUN_08002896(currentByte);\n    currentBuffer = previousBuffer;\n    FUN_080029d8(&DAT_20000870 + (uint)currentByte * 0x40,previousBuffer,tempPointer);\n    previousBuffer = &DAT_20000870 + (uint)currentByte * 0x40;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002a94": "extract_and_process_data_08002a94",
                "local_9": "currentByte",
                "local_18": "previousBuffer",
                "local_14": "currentBuffer",
                "puVar1": "tempPointer"
            },
            "calling": [
                "FUN_08002edc"
            ],
            "called": [
                "FUN_08002896",
                "FUN_080029d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002afc": {
            "entrypoint": "0x08002afc",
            "current_name": "update_parameters_08002afc",
            "code": "\nvoid updateParameters_08002afc(int inputParam,int outputParam)\n\n{\n  int result;\n  undefined4 tempVar1;\n  undefined4 tempVar2;\n  \n  if (((inputParam != 0) && (*(char *)(inputParam + 0x25) == '\\0')) &&\n     (result = FUN_08009228(*(undefined4 *)(inputParam + 0x18),*(undefined4 *)(outputParam + 0x18)),\n     result != 0)) {\n    tempVar2 = *(undefined4 *)(outputParam + 0x18);\n    tempVar1 = FUN_08002978(DAT_20000edc ^ 0x80000000,*(undefined4 *)(inputParam + 0x18),\n                         *(undefined4 *)(inputParam + 0x20));\n    result = FUN_08009228(tempVar2,tempVar1);\n    if (result == 0) {\n      tempVar1 = FUN_08002978(DAT_20000edc ^ 0x80000000,*(undefined4 *)(inputParam + 0x18),\n                           *(undefined4 *)(inputParam + 0x20));\n    }\n    else {\n      tempVar1 = *(undefined4 *)(outputParam + 0x18);\n    }\n    result = FUN_08009214(tempVar1,*(undefined4 *)(outputParam + 0x18));\n    if (result == 0) {\n      *(undefined4 *)(outputParam + 0x18) = tempVar1;\n      *(undefined *)(outputParam + 0x24) = 1;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002afc": "update_parameters_08002afc",
                "param_1": "inputParam",
                "param_2": "outputParam",
                "iVar1": "result",
                "uVar2": "tempVar1",
                "uVar3": "tempVar2"
            },
            "calling": [
                "FUN_08002ba8"
            ],
            "called": [
                "FUN_08009228",
                "FUN_08009214",
                "FUN_08002978"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ba8": {
            "entrypoint": "0x08002ba8",
            "current_name": "extract_data_from_binary_08002ba8",
            "code": "\nvoid extractDataFromBinary_08002ba8(void)\n\n{\n  uint currentValue;\n  undefined *puVar2;\n  undefined *prevPointer;\n  undefined *currentPointer;\n  undefined *nextPointer;\n  byte currentByte;\n  \n  currentPointer = (undefined *)0x0;\n  nextPointer = (undefined *)0x0;\n  currentByte = DAT_20000cf1;\n  prevPointer = (undefined *)0x0;\n  while (puVar2 = currentPointer, currentByte != DAT_20000cf0) {\n    currentPointer = nextPointer;\n    currentValue = (uint)currentByte;\n    FUN_08002afc(puVar2,nextPointer,&DAT_20000870 + currentValue * 0x40);\n    currentByte = FUN_08002870(currentByte);\n    prevPointer = puVar2;\n    nextPointer = &DAT_20000870 + currentValue * 0x40;\n  }\n  FUN_08002afc(currentPointer,nextPointer,0,currentPointer,prevPointer);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ba8": "extract_data_from_binary_08002ba8",
                "local_14": "currentPointer",
                "local_10": "nextPointer",
                "local_9": "currentByte",
                "puVar3": "prevPointer",
                "uVar1": "currentValue"
            },
            "calling": [
                "FUN_08002edc"
            ],
            "called": [
                "FUN_08002afc",
                "FUN_08002870"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c18": {
            "entrypoint": "0x08002c18",
            "current_name": "calculate_memory_08002c18",
            "code": "\nvoid calculateMemory_08002c18(int functionPointer,undefined4 param2,undefined4 param3)\n\n{\n  undefined4 result1;\n  int result2;\n  undefined4 result3;\n  undefined4 result4;\n  undefined4 result5;\n  uint result6;\n  undefined8 result7;\n  int memoryOffset;\n  uint temporaryValue;\n  \n  result1 = FUN_08008e3c(*(undefined4 *)(functionPointer + 0x3c));\n  result1 = FUN_08008eec(result1,param2);\n  result7 = FUN_08008590(result1);\n  result7 = FUN_08009318((int)result7,(int)((ulonglong)result7 >> 0x20));\n  result1 = FUN_08008bf0((int)result7,(int)((ulonglong)result7 >> 0x20));\n  *(undefined4 *)(functionPointer + 0x28) = result1;\n  result1 = FUN_08008e3c(*(undefined4 *)(functionPointer + 0x3c));\n  result1 = FUN_08008eec(result1,param3);\n  result7 = FUN_08008590(result1);\n  result7 = FUN_08009318((int)result7,(int)((ulonglong)result7 >> 0x20));\n  result1 = FUN_08008bf0((int)result7,(int)((ulonglong)result7 >> 0x20));\n  *(undefined4 *)(functionPointer + 0x2c) = result1;\n  result7 = FUN_0800856c(*(int *)(functionPointer + 0x30) * 0x32);\n  result7 = FUN_08008640((int)result7,(int)((ulonglong)result7 >> 0x20),0,0x404e0000);\n  result2 = FUN_08008ba0((int)result7,(int)((ulonglong)result7 >> 0x20));\n  result1 = FUN_08008e3c(*(undefined4 *)(functionPointer + 0x28));\n  result3 = FUN_08008e3c(*(undefined4 *)(functionPointer + 0x3c));\n  result4 = FUN_08008e44(result2);\n  result1 = FUN_080028bc(result1,result3,result4);\n  result7 = FUN_08008590(result1);\n  result7 = FUN_08009318((int)result7,(int)((ulonglong)result7 >> 0x20));\n  temporaryValue = FUN_08008ba0((int)result7,(int)((ulonglong)result7 >> 0x20));\n  result1 = FUN_08008e3c(*(undefined4 *)(functionPointer + 0x3c));\n  result3 = FUN_08008e3c(*(undefined4 *)(functionPointer + 0x2c));\n  result4 = FUN_08008e44(-result2);\n  result1 = FUN_080028bc(result1,result3,result4);\n  result7 = FUN_08008590(result1);\n  result7 = FUN_080094c0((int)result7,(int)((ulonglong)result7 >> 0x20));\n  memoryOffset = FUN_08008ba0((int)result7,(int)((ulonglong)result7 >> 0x20));\n  memoryOffset = (*(int *)(functionPointer + 0x10) - temporaryValue) - memoryOffset;\n  if (memoryOffset < 0) {\n    result1 = FUN_08008e3c(*(undefined4 *)(functionPointer + 0x28));\n    result3 = FUN_08008e3c(*(undefined4 *)(functionPointer + 0x2c));\n    result4 = FUN_08008e44(result2);\n    result5 = FUN_08008e44(*(undefined4 *)(functionPointer + 0x10));\n    result1 = FUN_08002908(result1,result3,result4,result5);\n    result7 = FUN_08008590(result1);\n    result7 = FUN_08009318((int)result7,(int)((ulonglong)result7 >> 0x20));\n    result6 = FUN_08008ba0((int)result7,(int)((ulonglong)result7 >> 0x20));\n    result6 = result6 & ~((int)result6 >> 0x1f);\n    temporaryValue = *(uint *)(functionPointer + 0x10);\n    if ((int)result6 <= (int)*(uint *)(functionPointer + 0x10)) {\n      temporaryValue = result6;\n    }\n    memoryOffset = 0;\n  }\n  *(uint *)(functionPointer + 0x34) = temporaryValue;\n  *(uint *)(functionPointer + 0x38) = memoryOffset + temporaryValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c18": "calculate_memory_08002c18",
                "param_1": "functionPointer",
                "param_2": "param2",
                "param_3": "param3",
                "uVar1": "result1",
                "iVar2": "result2",
                "uVar3": "result3",
                "uVar4": "result4",
                "uVar5": "result5",
                "uVar6": "result6",
                "uVar7": "result7",
                "local_20": "memoryOffset",
                "local_1c": "temporaryValue"
            },
            "calling": [
                "FUN_08002e08"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08002908",
                "FUN_08008e44",
                "FUN_0800856c",
                "FUN_080094c0",
                "FUN_08008ba0",
                "FUN_08009318",
                "FUN_08008e3c",
                "FUN_08008eec",
                "FUN_080028bc",
                "FUN_08008640",
                "FUN_08008bf0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002e08": {
            "entrypoint": "0x08002e08",
            "current_name": "process_data_08002e08",
            "code": "\nvoid processData_08002e08(void)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  int index;\n  undefined *dataPtr;\n  byte currentByte;\n  \n  dataPtr = (undefined *)0x0;\n  currentByte = DAT_20000cf1;\n  while (currentByte != DAT_20000cf0) {\n    index = (uint)currentByte * 0x40;\n    if ((dataPtr != (undefined *)0x0) &&\n       ((dataPtr[0x24] != '\\0' || ((&DAT_20000894)[index] != '\\0')))) {\n      result1 = FUN_08009054(*(undefined4 *)(dataPtr + 0x18),*(undefined4 *)(dataPtr + 0x14));\n      result2 = FUN_08009054(*(undefined4 *)(&DAT_20000888 + index),*(undefined4 *)(dataPtr + 0x14));\n      FUN_08002c18(dataPtr,result1,result2);\n      dataPtr[0x24] = 0;\n    }\n    currentByte = FUN_08002870(currentByte);\n    dataPtr = &DAT_20000870 + index;\n  }\n  result1 = FUN_08009054(*(undefined4 *)(dataPtr + 0x18),*(undefined4 *)(dataPtr + 0x14));\n  result2 = FUN_08009054(0,*(undefined4 *)(dataPtr + 0x14));\n  FUN_08002c18(dataPtr,result1,result2);\n  dataPtr[0x24] = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002e08": "process_data_08002e08",
                "uVar1": "result1",
                "uVar2": "result2",
                "iVar3": "index",
                "local_18": "dataPtr",
                "local_11": "currentByte"
            },
            "calling": [
                "FUN_08002edc"
            ],
            "called": [
                "FUN_08009054",
                "FUN_08002870",
                "FUN_08002c18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002edc": {
            "entrypoint": "0x08002edc",
            "current_name": "initialize_components_08002edc",
            "code": "\nvoid initialize_components_08002edc(void)\n\n{\n  FUN_08002a94();\n  FUN_08002ba8();\n  FUN_08002e08();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002edc": "initialize_components_08002edc"
            },
            "calling": [
                "FUN_08003618",
                "FUN_08003004"
            ],
            "called": [
                "FUN_08002e08",
                "FUN_08002a94",
                "FUN_08002ba8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ef0": {
            "entrypoint": "0x08002ef0",
            "current_name": "initialize_data_08002ef0",
            "code": "\nvoid initializeData_08002ef0(void)\n\n{\n  DAT_20000cf1 = DAT_20000cf0;\n  DAT_20000cf2 = FUN_08002870(DAT_20000cf0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ef0": "initialize_data_08002ef0"
            },
            "calling": [
                "FUN_08002f24"
            ],
            "called": [
                "FUN_08002870"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f24": {
            "entrypoint": "0x08002f24",
            "current_name": "initialize_data_08002f24",
            "code": "\nvoid initializeData_08002f24(void)\n\n{\n  FUN_08002ef0();\n  FUN_0800b430(&DAT_20000cf4,0,0x1c);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f24": "initialize_data_08002f24"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_0800b430",
                "FUN_08002ef0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f40": {
            "entrypoint": "0x08002f40",
            "current_name": "check_and_update_data_08002f40",
            "code": "\nvoid checkAndUpdateData_08002f40(void)\n\n{\n  if (DAT_20000cf0 != DAT_20000cf1) {\n    DAT_20000cf1 = FUN_08002870(DAT_20000cf1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f40": "check_and_update_data_08002f40"
            },
            "calling": [
                "FUN_080053a0"
            ],
            "called": [
                "FUN_08002870"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f74": {
            "entrypoint": "0x08002f74",
            "current_name": "get_next_data_block_08002f74",
            "code": "\nundefined * get_next_data_block_08002f74(void)\n\n{\n  undefined *next_data_block;\n  \n  if (DAT_20000cf0 == DAT_20000cf1) {\n    next_data_block = (undefined *)0x0;\n  }\n  else {\n    next_data_block = &DAT_20000870 + (uint)DAT_20000cf1 * 0x40;\n  }\n  return next_data_block;\n}\n\n",
            "renaming": {
                "FUN_08002f74": "get_next_data_block_08002f74",
                "puVar1": "next_data_block"
            },
            "calling": [
                "FUN_080053a0",
                "FUN_08002fd4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fac": {
            "entrypoint": "0x08002fac",
            "current_name": "are_equal_08002fac",
            "code": "\nbool areEqual_08002fac(void)\n\n{\n  return DAT_20000cf1 == DAT_20000cf2;\n}\n\n",
            "renaming": {
                "FUN_08002fac": "are_equal_08002fac"
            },
            "calling": [
                "FUN_08001e98"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fd4": {
            "entrypoint": "0x08002fd4",
            "current_name": "process_loop_08002fd4",
            "code": "\nvoid processLoop_08002fd4(void)\n\n{\n  int iVar1;\n  \n  while ((iVar1 = FUN_08002f74(), iVar1 != 0 || (DAT_20000ea9 == '\\x03'))) {\n    FUN_08003a74();\n    if (DAT_20000ea8 != '\\0') {\n      return;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002fd4": "process_loop_08002fd4"
            },
            "calling": [
                "FUN_0800525c",
                "FUN_08000220",
                "FUN_080005b4",
                "FUN_08002408",
                "FUN_080024c4"
            ],
            "called": [
                "FUN_08003a74",
                "FUN_08002f74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003004": {
            "entrypoint": "0x08003004",
            "current_name": "calculate_quality_score_08003004",
            "code": "\nvoid calculateQualityScore_08003004(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4,\n                 char flag)\n\n{\n  undefined4 result1;\n  int quality1;\n  int quality2;\n  int quality3;\n  undefined4 result2;\n  undefined4 result3;\n  undefined4 result4;\n  undefined4 result5;\n  uint maximumQuality;\n  int offset;\n  ushort *pointer;\n  int absDifference;\n  uint maximumDifference;\n  undefined8 result6;\n  undefined8 result7;\n  undefined8 result8;\n  undefined4 qualityScore;\n  undefined4 adjustedInput;\n  \n  offset = (uint)DAT_20000cf0 * 0x40;\n  pointer = (ushort *)(&DAT_20000870 + offset);\n  result1 = FUN_08008eec(DAT_20000ebc,input1);\n  result6 = FUN_08008590(result1);\n  quality1 = FUN_080095b8((int)result6,(int)((ulonglong)result6 >> 0x20));\n  result1 = FUN_08008eec(DAT_20000ec0,input2);\n  result6 = FUN_08008590(result1);\n  quality2 = FUN_080095b8((int)result6,(int)((ulonglong)result6 >> 0x20));\n  result1 = FUN_08008eec(DAT_20000ec4,input3);\n  result6 = FUN_08008590(result1);\n  quality3 = FUN_080095b8((int)result6,(int)((ulonglong)result6 >> 0x20));\n  *pointer = 0;\n  if (quality1 < DAT_20000cf4) {\n    *pointer = *pointer | 0x20;\n  }\n  if (quality2 < DAT_20000cf8) {\n    *pointer = *pointer | 0x880;\n  }\n  if (quality3 < DAT_20000cfc) {\n    *pointer = *pointer | 0x200;\n  }\n  absDifference = quality1 - DAT_20000cf4;\n  if (absDifference < 0) {\n    absDifference = -absDifference;\n  }\n  *(int *)(&DAT_20000874 + offset) = absDifference;\n  absDifference = quality2 - DAT_20000cf8;\n  if (absDifference < 0) {\n    absDifference = -absDifference;\n  }\n  *(int *)(&DAT_20000878 + offset) = absDifference;\n  absDifference = quality3 - DAT_20000cfc;\n  if (absDifference < 0) {\n    absDifference = -absDifference;\n  }\n  *(int *)(&DAT_2000087c + offset) = absDifference;\n  maximumQuality = *(uint *)(&DAT_2000087c + offset);\n  if (*(uint *)(&DAT_2000087c + offset) < *(uint *)(&DAT_20000878 + offset)) {\n    maximumQuality = *(uint *)(&DAT_20000878 + offset);\n  }\n  maximumDifference = *(uint *)(&DAT_20000874 + offset);\n  if (*(uint *)(&DAT_20000874 + offset) < maximumQuality) {\n    maximumDifference = maximumQuality;\n  }\n  *(uint *)(&DAT_20000880 + offset) = maximumDifference;\n  if (*(int *)(&DAT_20000880 + offset) != 0) {\n    result1 = FUN_08008e44(quality1 - DAT_20000cf4);\n    result1 = FUN_08009054(result1,DAT_20000ebc);\n    result2 = FUN_08008e44(quality2 - DAT_20000cf8);\n    result2 = FUN_08009054(result2,DAT_20000ec0);\n    result3 = FUN_08008e44(quality3 - DAT_20000cfc);\n    result3 = FUN_08009054(result3,DAT_20000ec4);\n    result4 = FUN_08008eec(result1,result1);\n    result5 = FUN_08008eec(result2,result2);\n    result4 = FUN_08008cdc(result4,result5);\n    result5 = FUN_08008eec(result3,result3);\n    result4 = FUN_08008cdc(result4,result5);\n    result6 = FUN_08008590(result4);\n    result6 = FUN_080098d0((int)result6,(int)((ulonglong)result6 >> 0x20));\n    result4 = FUN_08008c30((int)result6,(int)((ulonglong)result6 >> 0x20));\n    *(undefined4 *)(&DAT_20000890 + offset) = result4;\n    result4 = FUN_08009054(0x3f800000,*(undefined4 *)(&DAT_20000890 + offset));\n    if (flag == '\\0') {\n      adjustedInput = FUN_08008eec(input4,result4);\n    }\n    else {\n      adjustedInput = FUN_08009054(0x3f800000,input4);\n    }\n    result5 = FUN_08008eec(*(undefined4 *)(&DAT_20000890 + offset),adjustedInput);\n    *(undefined4 *)(&DAT_20000884 + offset) = result5;\n    result5 = FUN_08008e44(*(undefined4 *)(&DAT_20000880 + offset));\n    result5 = FUN_08008eec(result5,adjustedInput);\n    result6 = FUN_08008590(result5);\n    result6 = FUN_08009318((int)result6,(int)((ulonglong)result6 >> 0x20));\n    result5 = FUN_08008bf0((int)result6,(int)((ulonglong)result6 >> 0x20));\n    *(undefined4 *)(&DAT_200008ac + offset) = result5;\n    result5 = FUN_08008e44(*(undefined4 *)(&DAT_20000880 + offset));\n    result5 = FUN_08008eec(result5,result4);\n    result5 = FUN_08008eec(result5,DAT_20000edc);\n    result5 = FUN_08009054(result5,0x453b8000);\n    result6 = FUN_08008590(result5);\n    result6 = FUN_08009318((int)result6,(int)((ulonglong)result6 >> 0x20));\n    result5 = FUN_08008ba0((int)result6,(int)((ulonglong)result6 >> 0x20));\n    *(undefined4 *)(&DAT_200008a0 + offset) = result5;\n    maximumQuality = FUN_08008eec(result1,result4);\n    result1 = FUN_08008eec(result2,result4);\n    result2 = FUN_08008eec(result3,result4);\n    qualityScore = 0;\n    if ((DAT_20000cf0 != DAT_20000cf1) && (absDifference = FUN_08009264(DAT_20000d0c,0), absDifference != 0)) {\n      result3 = FUN_08008eec(DAT_20000d00 ^ 0x80000000,maximumQuality);\n      result4 = FUN_08008eec(DAT_20000d04,result1);\n      result3 = FUN_08008cd8(result3,result4);\n      result4 = FUN_08008eec(DAT_20000d08,result2);\n      result3 = FUN_08008cd8(result3,result4);\n      result6 = FUN_08008590(result3);\n      absDifference = FUN_08008b24((int)result6,(int)((ulonglong)result6 >> 0x20),0x66666666,0x3fee6666);\n      if (absDifference != 0) {\n        absDifference = FUN_08009228(DAT_20000d0c,*(undefined4 *)(&DAT_20000884 + offset));\n        qualityScore = DAT_20000d0c;\n        if (absDifference == 0) {\n          qualityScore = *(undefined4 *)(&DAT_20000884 + offset);\n        }\n        result6 = FUN_08008590(result3);\n        absDifference = FUN_08008b60((int)result6,(int)((ulonglong)result6 >> 0x20),0x66666666,0xbfee6666);\n        if (absDifference != 0) {\n          result6 = FUN_08008590(result3);\n          result6 = FUN_080082d0(0,0x3ff00000,(int)result6,(int)((ulonglong)result6 >> 0x20));\n          result6 = FUN_08008640((int)result6,(int)((ulonglong)result6 >> 0x20),0,0x3fe00000);\n          result6 = FUN_080098d0((int)result6,(int)((ulonglong)result6 >> 0x20));\n          result3 = FUN_08008c30((int)result6,(int)((ulonglong)result6 >> 0x20));\n          result6 = FUN_08008590(qualityScore);\n          result4 = FUN_08008eec(DAT_20000edc,DAT_20000ee0);\n          result4 = FUN_08008eec(result4,result3);\n          result7 = FUN_08008590(result4);\n          result8 = FUN_08008590(result3);\n          result8 = FUN_080082d0(0,0x3ff00000,(int)result8,(int)((ulonglong)result8 >> 0x20));\n          result7 = FUN_08008894((int)result7,(int)((ulonglong)result7 >> 0x20),(int)result8,\n                                (int)((ulonglong)result8 >> 0x20));\n          result7 = FUN_080098d0((int)result7,(int)((ulonglong)result7 >> 0x20));\n          absDifference = FUN_08008b24((int)result6,(int)((ulonglong)result6 >> 0x20),(int)result7,\n                                (int)((ulonglong)result7 >> 0x20));\n          if (absDifference == 0) {\n            result4 = FUN_08008eec(DAT_20000edc,DAT_20000ee0);\n            result4 = FUN_08008eec(result4,result3);\n            result6 = FUN_08008590(result4);\n            result7 = FUN_08008590(result3);\n            result7 = FUN_080082d0(0,0x3ff00000,(int)result7,(int)((ulonglong)result7 >> 0x20));\n            result6 = FUN_08008894((int)result6,(int)((ulonglong)result6 >> 0x20),(int)result7,\n                                  (int)((ulonglong)result7 >> 0x20));\n            result6 = FUN_080098d0((int)result6,(int)((ulonglong)result6 >> 0x20));\n            qualityScore = FUN_08008c30((int)result6,(int)((ulonglong)result6 >> 0x20));\n          }\n        }\n      }\n    }\n    *(undefined4 *)(&DAT_2000088c + offset) = qualityScore;\n    result4 = FUN_08002978(DAT_20000edc ^ 0x80000000,0,*(undefined4 *)(&DAT_20000890 + offset));\n    absDifference = FUN_08009228(qualityScore,result4);\n    result3 = result4;\n    if (absDifference != 0) {\n      result3 = qualityScore;\n    }\n    *(undefined4 *)(&DAT_20000888 + offset) = result3;\n    absDifference = FUN_08009250(result4,*(undefined4 *)(&DAT_20000884 + offset));\n    if (absDifference == 0) {\n      (&DAT_20000895)[offset] = 0;\n    }\n    else {\n      (&DAT_20000895)[offset] = 1;\n    }\n    (&DAT_20000894)[offset] = 1;\n    DAT_20000d0c = *(undefined4 *)(&DAT_20000884 + offset);\n    DAT_20000cf0 = DAT_20000cf2;\n    DAT_20000d00 = maximumQuality;\n    DAT_20000d04 = result1;\n    DAT_20000d08 = result2;\n    DAT_20000cf2 = FUN_08002870(DAT_20000cf2);\n    DAT_20000cf4 = quality1;\n    DAT_20000cf8 = quality2;\n    DAT_20000cfc = quality3;\n    FUN_08002edc();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003004": "calculate_quality_score_08003004",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "param_5": "flag",
                "uVar1": "result1",
                "iVar2": "quality1",
                "iVar3": "quality2",
                "iVar4": "quality3",
                "uVar5": "result2",
                "uVar6": "result3",
                "uVar7": "result4",
                "uVar8": "result5",
                "uVar9": "maximumQuality",
                "iVar10": "offset",
                "puVar11": "pointer",
                "iVar12": "absDifference",
                "uVar13": "maximumDifference",
                "uVar14": "result6",
                "uVar15": "result7",
                "uVar16": "result8",
                "local_20": "qualityScore",
                "local_1c": "adjustedInput"
            },
            "calling": [
                "FUN_08001e98"
            ],
            "called": [
                "FUN_080095b8",
                "FUN_08009054",
                "FUN_08008e44",
                "FUN_08008cd8",
                "FUN_08009318",
                "FUN_08008ba0",
                "FUN_08002870",
                "FUN_08008b60",
                "FUN_08009264",
                "FUN_08008894",
                "FUN_08008640",
                "FUN_08008bf0",
                "FUN_08008b24",
                "FUN_08008590",
                "FUN_080082d0",
                "FUN_08009228",
                "FUN_080098d0",
                "FUN_08008eec",
                "FUN_08009250",
                "FUN_08002978",
                "FUN_08008cdc",
                "FUN_08008c30",
                "FUN_08002edc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080035ec": {
            "entrypoint": "0x080035ec",
            "current_name": "initialize_data_080035ec",
            "code": "\nvoid initializeData_080035ec(undefined4 data1,undefined4 data2,undefined4 data3)\n\n{\n  DAT_20000cf4 = data1;\n  DAT_20000cf8 = data2;\n  DAT_20000cfc = data3;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080035ec": "initialize_data_080035ec",
                "param_1": "data1",
                "param_2": "data2",
                "param_3": "data3"
            },
            "calling": [
                "FUN_0800283a"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003618": {
            "entrypoint": "0x08003618",
            "current_name": "update_data_08003618",
            "code": "\nvoid updateData_08003618(undefined4 inputValue)\n\n{\n  undefined4 result1;\n  int index;\n  undefined4 savedValue;\n  \n  index = (uint)DAT_20000cf1 * 0x40;\n  savedValue = *(undefined4 *)(&DAT_20000890 + index);\n  result1 = FUN_08008e44(inputValue);\n  result1 = FUN_08008eec(savedValue,result1);\n  savedValue = FUN_08008e44(*(undefined4 *)(&DAT_20000880 + index));\n  result1 = FUN_08009054(result1,savedValue);\n  *(undefined4 *)(&DAT_20000890 + index) = result1;\n  *(undefined4 *)(&DAT_20000880 + index) = inputValue;\n  *(undefined4 *)(&DAT_20000888 + index) = 0;\n  *(undefined4 *)(&DAT_2000088c + index) = 0;\n  (&DAT_20000895)[index] = 0;\n  (&DAT_20000894)[index] = 1;\n  FUN_08002edc();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003618": "update_data_08003618",
                "param_1": "inputValue",
                "uVar1": "result1",
                "iVar2": "index",
                "uVar3": "savedValue"
            },
            "calling": [
                "FUN_080058a0"
            ],
            "called": [
                "FUN_08009054",
                "FUN_08008e44",
                "FUN_08008eec",
                "FUN_08002edc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800369c": {
            "entrypoint": "0x0800369c",
            "current_name": "process_string_0800369c",
            "code": "\nvoid processString_0800369c(char *inputString)\n\n{\n  char *currentChar;\n  \n  currentChar = inputString;\n  while (*currentChar != '\\0') {\n    FUN_08008250(*currentChar);\n    currentChar = currentChar + 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800369c": "process_string_0800369c",
                "param_1": "inputString",
                "local_c": "currentChar"
            },
            "calling": [
                "FUN_08004900",
                "FUN_080039bc"
            ],
            "called": [
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036c6": {
            "entrypoint": "0x080036c6",
            "current_name": "print_characters_080036c6",
            "code": "\nvoid print_characters_080036c6(char *string)\n\n{\n  char *current_character;\n  \n  current_character = string;\n  while (*current_character != '\\0') {\n    FUN_08008250(*current_character);\n    current_character = current_character + 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080036c6": "print_characters_080036c6",
                "param_1": "string",
                "local_c": "current_character"
            },
            "calling": [
                "FUN_0800423c",
                "FUN_08004250",
                "FUN_08004940",
                "FUN_08004900",
                "FUN_080044e8",
                "FUN_08004228",
                "FUN_080046d0",
                "FUN_08004030",
                "FUN_080041a0",
                "FUN_08004148"
            ],
            "called": [
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036f0": {
            "entrypoint": "0x080036f0",
            "current_name": "print_binary_representation_080036f0",
            "code": "\nvoid printBinaryRepresentation_080036f0(uint number,int bitCount)\n\n{\n  undefined4 binaryDigit;\n  int iteration;\n  uint bitMask;\n  \n  bitMask = 1 << (bitCount - 1U & 0xff);\n  for (iteration = 0; iteration < bitCount; iteration = iteration + 1) {\n    if ((bitMask & number) == 0) {\n      binaryDigit = 0x30;\n    }\n    else {\n      binaryDigit = 0x31;\n    }\n    FUN_08008250(binaryDigit);\n    bitMask = bitMask >> 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080036f0": "print_binary_representation_080036f0",
                "param_1": "number",
                "param_2": "bitCount",
                "local_10": "iteration",
                "local_c": "bitMask",
                "uVar1": "binaryDigit"
            },
            "calling": [
                "FUN_08003740",
                "FUN_0800375c"
            ],
            "called": [
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003740": {
            "entrypoint": "0x08003740",
            "current_name": "initialize_data_08003740",
            "code": "\nvoid initializeData_08003740(undefined data)\n\n{\n  FUN_080036f0(data,8);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003740": "initialize_data_08003740",
                "param_1": "data"
            },
            "calling": [],
            "called": [
                "FUN_080036f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800375c": {
            "entrypoint": "0x0800375c",
            "current_name": "initialize_data_0800375c",
            "code": "\nvoid initialize_data_0800375c(undefined2 data)\n\n{\n  FUN_080036f0(data,0x10);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800375c": "initialize_data_0800375c",
                "param_1": "data"
            },
            "calling": [
                "FUN_08004250"
            ],
            "called": [
                "FUN_080036f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003778": {
            "entrypoint": "0x08003778",
            "current_name": "print_number_08003778",
            "code": "\nvoid printNumber_08003778(uint number)\n\n{\n  uint tempVar1;\n  uint numDigits;\n  char digitBuffer [12];\n  byte digitCount;\n  \n  digitCount = 0;\n  numDigits = number;\n  if (number == 0) {\n    FUN_08008250(0x30);\n  }\n  else {\n    for (; numDigits != 0; numDigits = numDigits / 10) {\n      tempVar1 = (uint)digitCount;\n      digitCount = digitCount + 1;\n      digitBuffer[tempVar1 + 1] = (char)(numDigits % 10) + '0';\n    }\n    for (; digitCount != 0; digitCount = digitCount - 1) {\n      FUN_08008250(digitBuffer[digitCount]);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003778": "print_number_08003778",
                "param_1": "number",
                "uVar1": "tempVar1",
                "local_1c": "numDigits",
                "acStack_15": "digitBuffer",
                "local_9": "digitCount"
            },
            "calling": [
                "FUN_080037fc"
            ],
            "called": [
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080037fc": {
            "entrypoint": "0x080037fc",
            "current_name": "print_absolute_value_080037fc",
            "code": "\nvoid printAbsoluteValue_080037fc(int inputNumber)\n\n{\n  int absoluteValue;\n  \n  absoluteValue = inputNumber;\n  if (inputNumber < 0) {\n    FUN_08008250(0x2d);\n    absoluteValue = -inputNumber;\n  }\n  FUN_08003778(absoluteValue);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080037fc": "print_absolute_value_080037fc",
                "param_1": "inputNumber",
                "local_c": "absoluteValue"
            },
            "calling": [
                "FUN_08004250",
                "FUN_08004900",
                "FUN_080046d0"
            ],
            "called": [
                "FUN_08003778",
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003826": {
            "entrypoint": "0x08003826",
            "current_name": "calculate_and_print_decimal_08003826",
            "code": "\nvoid calculateAndPrintDecimal_08003826(uint inputNumber)\n\n{\n  int isNegative;\n  undefined4 modifiedNumber;\n  byte digitChar;\n  uint digit;\n  uint number;\n  char decimalString [13];\n  uint tempNumber;\n  byte index;\n  byte loopCount;\n  \n  isNegative = FUN_08009228(inputNumber,0);\n  number = inputNumber;\n  if (isNegative != 0) {\n    FUN_08008250(0x2d);\n    number = inputNumber ^ 0x80000000;\n  }\n  for (loopCount = DAT_20000ef9; 1 < loopCount; loopCount = loopCount - 2) {\n    number = FUN_08008eec(number,0x42c80000);\n  }\n  if (loopCount != 0) {\n    number = FUN_08008eec(number,0x41200000);\n  }\n  modifiedNumber = FUN_08008cdc(number,0x3f000000);\n  index = 0;\n  tempNumber = FUN_08009278(modifiedNumber);\n  decimalString[DAT_20000ef9 + 1] = '.';\n  for (; tempNumber != 0; tempNumber = tempNumber / 10) {\n    if (index == DAT_20000ef9) {\n      index = index + 1;\n    }\n    digit = (uint)index;\n    index = index + 1;\n    decimalString[digit + 1] = (char)(tempNumber % 10) + '0';\n  }\n  while (index < DAT_20000ef9) {\n    digit = (uint)index;\n    index = index + 1;\n    decimalString[digit + 1] = '0';\n  }\n  if (index == DAT_20000ef9) {\n    digitChar = index + 1;\n    index = index + 2;\n    decimalString[digitChar + 1] = '0';\n  }\n  for (; index != 0; index = index - 1) {\n    FUN_08008250(decimalString[index]);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003826": "calculate_and_print_decimal_08003826",
                "param_1": "inputNumber",
                "iVar1": "isNegative",
                "uVar2": "modifiedNumber",
                "bVar3": "digitChar",
                "uVar4": "digit",
                "local_24": "number",
                "acStack_1d": "decimalString",
                "local_10": "tempNumber",
                "local_a": "index",
                "local_9": "loopCount"
            },
            "calling": [
                "FUN_08004250",
                "FUN_08004940",
                "FUN_080044e8",
                "FUN_080046d0"
            ],
            "called": [
                "FUN_08009228",
                "FUN_08009278",
                "FUN_08008eec",
                "FUN_08008cdc",
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003980": {
            "entrypoint": "0x08003980",
            "current_name": "initialize_data_08003980",
            "code": "\nvoid initializeData_08003980(void)\n\n{\n  DAT_20000e10 = 0;\n  DAT_20000e11 = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003980": "initialize_data_08003980"
            },
            "calling": [
                "FUN_080039a0",
                "FUN_08003f34"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080039a0": {
            "entrypoint": "0x080039a0",
            "current_name": "initialize_application_080039a0",
            "code": "\nvoid initializeApplication_080039a0(void)\n\n{\n  FUN_08003980();\n  FUN_08004228();\n  DAT_20000e50 = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080039a0": "initialize_application_080039a0"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08004228",
                "FUN_08003980"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080039bc": {
            "entrypoint": "0x080039bc",
            "current_name": "check_data_and_call_functions_080039bc",
            "code": "\nvoid checkDataAndCallFunctions_080039bc(void)\n\n{\n  int result;\n  undefined4 returnValue;\n  byte counter;\n  \n  for (counter = 0; counter < 2; counter = counter + 1) {\n    result = FUN_08004d2c(counter,&DAT_20000d10);\n    if (result == 0) {\n      FUN_08004030(10);\n    }\n    else if (DAT_20000d10 != '\\0') {\n      FUN_0800369c(&DAT_20000d10);\n      returnValue = FUN_080005b4(&DAT_20000d10);\n      FUN_08004030(returnValue);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080039bc": "check_data_and_call_functions_080039bc",
                "iVar1": "result",
                "uVar2": "returnValue",
                "local_9": "counter"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_0800369c",
                "FUN_080005b4",
                "FUN_08004030",
                "FUN_08004d2c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a18": {
            "entrypoint": "0x08003a18",
            "current_name": "set_access_permissions_08003a18",
            "code": "\nvoid setAccessPermissions_08003a18(uint permissions)\n\n{\n  if ((permissions & 0x80) == 0) {\n    if ((permissions & 0x40) == 0) {\n      if ((permissions & 0x20) != 0) {\n        DAT_20000eaa = DAT_20000eaa | 2;\n      }\n    }\n    else {\n      DAT_20000eaa = DAT_20000eaa | 8;\n    }\n  }\n  else {\n    FUN_080025e8();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003a18": "set_access_permissions_08003a18",
                "param_1": "permissions"
            },
            "calling": [
                "FUN_080074c8"
            ],
            "called": [
                "FUN_080025e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a74": {
            "entrypoint": "0x08003a74",
            "current_name": "process_data_08003a74",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08003ad2) */\n\nvoid processData_08003a74(void)\n\n{\n  byte bVar1;\n  \n  bVar1 = DAT_20000eaa;\n  if (DAT_20000eaa != 0) {\n    if ((DAT_20000eaa & 0x60) != 0) {\n      DAT_20000ea9 = 6;\n      if ((DAT_20000eaa & 0x40) != 0) {\n        FUN_08004148(0xffffffff);\n        FUN_080041a0(1);\n        do {\n        } while( true );\n      }\n      FUN_08004148(0xfffffffe);\n      DAT_20000eaa = DAT_20000eaa & 0x9f;\n    }\n    if ((bVar1 & 0x10) == 0) {\n      if ((bVar1 & 1) != 0) {\n        FUN_08004940();\n        DAT_20000eaa = DAT_20000eaa & 0xfe;\n      }\n      if ((bVar1 & 8) != 0) {\n        FUN_0800587c();\n        DAT_20000eaa = DAT_20000eaa & 0xf7;\n      }\n      if ((bVar1 & 4) != 0) {\n        FUN_080058a0();\n        DAT_20000eaa = DAT_20000eaa & 0xfb;\n      }\n      if ((bVar1 & 2) != 0) {\n        FUN_0800585c();\n        if ((DAT_20000ee4 & 2) != 0) {\n          DAT_20000eb8 = 1;\n        }\n        DAT_20000eaa = DAT_20000eaa & 0xfd;\n      }\n    }\n    else {\n      DAT_20000ea8 = 1;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003a74": "process_data_08003a74"
            },
            "calling": [
                "FUN_08001e98",
                "FUN_08002408",
                "FUN_08003f34",
                "FUN_08001ddc",
                "FUN_08002fd4",
                "FUN_080024c4"
            ],
            "called": [
                "FUN_080058a0",
                "FUN_0800585c",
                "FUN_08004940",
                "FUN_0800587c",
                "FUN_080041a0",
                "FUN_08004148"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003b98": {
            "entrypoint": "0x08003b98",
            "current_name": "process_input_08003b98",
            "code": "\nuint process_input_08003b98(char *input_string)\n\n{\n  byte first_char;\n  int result;\n  undefined4 temp_var_1;\n  uint temp_var_2;\n  undefined8 temp_var_3;\n  undefined4 param_2;\n  undefined4 param_3;\n  byte flag_1;\n  byte flag_2;\n  \n  if (*input_string != '$') {\n    temp_var_2 = FUN_080005b4(input_string);\n    return temp_var_2;\n  }\n  flag_1 = 1;\n  flag_2 = '\\0';\n  first_char = input_string[1];\n  if (first_char == 0) {\n    FUN_0800423c();\n    return 0;\n  }\n  if ((0x58 < first_char) || (first_char < 0x23)) goto switchD_08003bdc_caseD_25;\n  switch(first_char) {\n  case 0x23:\n    flag_1 = 2;\n    if (input_string[2] != '\\0') {\n      return 3;\n    }\n    FUN_080044e8();\n    break;\n  case 0x24:\n    flag_1 = 2;\n    if (input_string[2] != '\\0') {\n      return 3;\n    }\n    FUN_08004250();\n    break;\n  case 0x43:\n    flag_1 = 2;\n    if (input_string[2] != '\\0') {\n      return 3;\n    }\n    if (DAT_20000ea9 == '\\a') {\n      FUN_080025e8();\n      FUN_080041a0(5);\n    }\n    else {\n      if (DAT_20000ea9 != '\\0') {\n        return 0xb;\n      }\n      DAT_20000ea9 = '\\a';\n      FUN_080041a0(4);\n    }\n    break;\n  case 0x47:\n    flag_1 = 2;\n    if (input_string[2] != '\\0') {\n      return 3;\n    }\n    FUN_080046d0();\n    break;\n  case 0x48:\n    if ((DAT_20000ee4 & 0x10) == 0) {\n      return 7;\n    }\n    if ((DAT_20000ea9 != '\\0') && (DAT_20000ea9 != '\\x06')) {\n      return 0xb;\n    }\n    FUN_080024c4();\n    if (DAT_20000ea8 == '\\0') {\n      FUN_080039bc();\n    }\n    break;\n  case 0x4e:\n    flag_1 = 2;\n    if (input_string[2] == '\\0') {\n      for (flag_2 = 0; flag_2 < 2; flag_2 = flag_2 + 1) {\n        result = FUN_08004d2c(flag_2,input_string);\n        if (result == 0) {\n          FUN_08004030(10);\n        }\n        else {\n          FUN_08004900(flag_2,input_string);\n        }\n      }\n      return 0;\n    }\n    flag_2 = '\\x01';\n  default:\nswitchD_08003bdc_caseD_25:\n    result = FUN_08002638(input_string,&flag_1,&param_3);\n    if (result == 0) {\n      return 1;\n    }\n    first_char = flag_1 + 1;\n    if (input_string[flag_1] != '=') {\n      return 3;\n    }\n    flag_1 = first_char;\n    if (flag_2 == '\\0') {\n      result = FUN_08002638(input_string,&flag_1,&param_2);\n      if (result == 0) {\n        return 1;\n      }\n      if (input_string[flag_1] == '\\0') {\n        temp_var_1 = FUN_08009278(param_3);\n        temp_var_2 = FUN_08004e30(temp_var_1,param_2);\n        return temp_var_2;\n      }\n      return 3;\n    }\n    do {\n      input_string[(uint)flag_1 - (uint)first_char] = input_string[flag_1];\n      temp_var_2 = (uint)flag_1;\n      flag_1 = flag_1 + 1;\n    } while (input_string[temp_var_2] != '\\0');\n    flag_2 = first_char;\n    flag_2 = FUN_080005b4(input_string);\n    if (flag_2 != 0) {\n      return (uint)flag_2;\n    }\n    temp_var_3 = FUN_08008590(param_3);\n    temp_var_3 = FUN_08009798((int)temp_var_3,(int)((ulonglong)temp_var_3 >> 0x20));\n    flag_2 = FUN_08008bf0((int)temp_var_3,(int)((ulonglong)temp_var_3 >> 0x20));\n    FUN_08004bc0(flag_2,input_string);\n    break;\n  case 0x58:\n    flag_1 = 2;\n    if (input_string[2] != '\\0') {\n      return 3;\n    }\n    if (DAT_20000ea9 == '\\x06') {\n      FUN_080041a0(3);\n      DAT_20000ea9 = '\\0';\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003b98": "process_input_08003b98",
                "param_1": "input_string",
                "bVar1": "first_char",
                "iVar2": "result",
                "uVar3": "temp_var_1",
                "uVar4": "temp_var_2",
                "uVar5": "temp_var_3",
                "local_14": "param_2",
                "local_10": "param_3",
                "local_a": "flag_1",
                "local_9": "flag_2"
            },
            "calling": [
                "FUN_08003f34"
            ],
            "called": [
                "FUN_0800423c",
                "FUN_08004bc0",
                "FUN_08002638",
                "FUN_08009798",
                "FUN_08004900",
                "FUN_080025e8",
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_080046d0",
                "FUN_080039bc",
                "FUN_08008bf0",
                "FUN_08004d2c",
                "FUN_08008590",
                "FUN_08004250",
                "FUN_08009278",
                "FUN_080044e8",
                "FUN_08004030",
                "FUN_080041a0",
                "FUN_080024c4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f34": {
            "entrypoint": "0x08003f34",
            "current_name": "process_user_input_08003f34",
            "code": "\nvoid processUserInput_08003f34(void)\n\n{\n  byte inputByte;\n  undefined4 result;\n  uint index;\n  \n  while( true ) {\n    while( true ) {\n      inputByte = FUN_08008286();\n      if (inputByte == 0xff) {\n        return;\n      }\n      if ((inputByte == 10) || (inputByte == 0xd)) break;\n      if (DAT_20000e11 == '\\0') {\n        if ((0x20 < inputByte) && (inputByte != 0x2f)) {\n          if (inputByte == 0x28) {\n            DAT_20000e11 = '\\x01';\n          }\n          else if (DAT_20000e10 == 0xff) {\n            FUN_08004030(0xd);\n            FUN_08003980();\n          }\n          else if ((inputByte < 0x61) || (0x7a < inputByte)) {\n            index = (uint)DAT_20000e10;\n            DAT_20000e10 = DAT_20000e10 + 1;\n            (&DAT_20000d10)[index] = inputByte;\n          }\n          else {\n            index = (uint)DAT_20000e10;\n            DAT_20000e10 = DAT_20000e10 + 1;\n            (&DAT_20000d10)[index] = inputByte - 0x20;\n          }\n        }\n      }\n      else if (inputByte == 0x29) {\n        DAT_20000e11 = '\\0';\n      }\n    }\n    FUN_08003a74();\n    if (DAT_20000ea8 != '\\0') break;\n    if (DAT_20000e10 == 0) {\n      FUN_08004030(0);\n    }\n    else {\n      (&DAT_20000d10)[DAT_20000e10] = 0;\n      result = FUN_08003b98(&DAT_20000d10);\n      FUN_08004030(result);\n    }\n    FUN_08003980();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f34": "process_user_input_08003f34",
                "bVar1": "inputByte",
                "uVar2": "result",
                "uVar3": "index"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08003b98",
                "FUN_08003a74",
                "FUN_08008286",
                "FUN_08004030",
                "FUN_08003980"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004030": {
            "entrypoint": "0x08004030",
            "current_name": "display_error_message_08004030",
            "code": "\nvoid displayErrorMessage_08004030(char errorCode)\n\n{\n  if (errorCode == '\\0') {\n    FUN_080036c6(&DAT_0800b5c8);\n  }\n  else {\n    FUN_080036c6(\"error: \");\n    switch(errorCode) {\n    case '\\x01':\n      FUN_080036c6(\"Bad number format\");\n      break;\n    case '\\x02':\n      FUN_080036c6(\"Expected command letter\");\n      break;\n    case '\\x03':\n      FUN_080036c6(\"Unsupported statement\");\n      break;\n    case '\\x04':\n      FUN_080036c6(\"Invalid radius\");\n      break;\n    case '\\x05':\n      FUN_080036c6(\"Modal group violation\");\n      break;\n    case '\\x06':\n      FUN_080036c6(\"Invalid statement\");\n      break;\n    case '\\a':\n      FUN_080036c6(\"Setting disabled\");\n      break;\n    case '\\b':\n      FUN_080036c6(\"Value < 0.0\");\n      break;\n    case '\\t':\n      FUN_080036c6(\"Value < 3 usec\");\n      break;\n    case '\\n':\n      FUN_080036c6(\"EEPROM read fail. Using defaults\");\n      break;\n    case '\\v':\n      FUN_080036c6(\"Busy or queued\");\n      break;\n    case '\\f':\n      FUN_080036c6(\"Alarm lock\");\n      break;\n    case '\\r':\n      FUN_080036c6(\"Line overflow\");\n    }\n    FUN_080036c6(&DAT_0800b6d8);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004030": "display_error_message_08004030",
                "param_1": "errorCode"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080004ac",
                "FUN_080044e8",
                "FUN_08003f34",
                "FUN_080039bc",
                "FUN_080051b4"
            ],
            "called": [
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004148": {
            "entrypoint": "0x08004148",
            "current_name": "print_alarm_message_08004148",
            "code": "\nvoid printAlarmMessage_08004148(char errorCode)\n\n{\n  FUN_080036c6(\"ALARM: \");\n  if (errorCode == -2) {\n    FUN_080036c6(\"Abort during cycle\");\n  }\n  else if (errorCode == -1) {\n    FUN_080036c6(\"Hard limit\");\n  }\n  FUN_080036c6(\". MPos?\\r\\n\");\n  FUNC_08002814(500);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004148": "print_alarm_message_08004148",
                "param_1": "errorCode"
            },
            "calling": [
                "FUN_08003a74"
            ],
            "called": [
                "FUN_08002814",
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080041a0": {
            "entrypoint": "0x080041a0",
            "current_name": "display_message_080041a0",
            "code": "\nvoid displayMessage_080041a0(undefined messageType)\n\n{\n  FUN_080036c6(&DAT_0800b710);\n  switch(messageType) {\n  case 1:\n    FUN_080036c6(\"Reset to continue\");\n    break;\n  case 2:\n    FUN_080036c6(\"\\'$H\\'|\\'$X\\' to unlock\");\n    break;\n  case 3:\n    FUN_080036c6(\"Caution: Unlocked\");\n    break;\n  case 4:\n    FUN_080036c6(\"Enabled\");\n    break;\n  case 5:\n    FUN_080036c6(\"Disabled\");\n  }\n  FUN_080036c6(&DAT_0800b764);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080041a0": "display_message_080041a0",
                "param_1": "messageType"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_08003a74",
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004228": {
            "entrypoint": "0x08004228",
            "current_name": "print_initial_message_08004228",
            "code": "\nvoid printInitialMessage_08004228(void)\n\n{\n  FUN_080036c6(\"\\r\\nGrbl 0.8c [\\'$\\' for help]\\r\\n\");\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004228": "print_initial_message_08004228"
            },
            "calling": [
                "FUN_080039a0"
            ],
            "called": [
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800423c": {
            "entrypoint": "0x0800423c",
            "current_name": "print_grbl_command_menu_0800423c",
            "code": "\nvoid printGrblCommandMenu_0800423c(void)\n\n{\n  FUN_080036c6(\n              \"viewGrblSettings (view Grbl settings)\\r\\nviewParameters (view # parameters)\\r\\nviewParserState (view parser state)\\r\\nviewStartupBlocks (view startup blocks)\\r\\nsaveGrblSetting=value (save Grbl setting)\\r\\nsaveStartupBlock=line (save startup block)\\r\\ncheckGcodeMode (check gcode mode)\\r\\nkillAlarmLock (kill alarm lock)\\r\\nrunHomingCycle (run homing cycle)\\r\\ncycleStart (cycle start)\\r\\nfeedHold (feed hold)\\r\\n? (current status)\\r\\nresetGrbl (reset Grbl)\\r\\n\"\n              );\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800423c": "print_grbl_command_menu_0800423c",
                "$": "inputSymbol",
                "$$": "viewGrblSettings",
                "$#": "viewParameters",
                "$G": "viewParserState",
                "$N": "viewStartupBlocks",
                "$x": "saveGrblSetting",
                "$Nx": "saveStartupBlock",
                "$C": "checkGcodeMode",
                "$X": "killAlarmLock",
                "$H": "runHomingCycle",
                "~": "cycleStart",
                "!": "feedHold",
                "ctrl-x": "resetGrbl"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004250": {
            "entrypoint": "0x08004250",
            "current_name": "print_configurations_08004250",
            "code": "\nvoid printConfigurations_08004250(void)\n\n{\n  undefined4 acceleration;\n  \n  FUN_080036c6(&DAT_0800b8b8);\n  FUN_08003826(DAT_20000ebc);\n  FUN_080036c6(\" (x, step/mm)\\r\\n$1=\");\n  FUN_08003826(DAT_20000ec0);\n  FUN_080036c6(\" (y, step/mm)\\r\\n$2=\");\n  FUN_08003826(DAT_20000ec4);\n  FUN_080036c6(\" (z, step/mm)\\r\\n$3=\");\n  FUN_080037fc(DAT_20000ec9);\n  FUN_080036c6(\" (step pulse, usec)\\r\\n$4=\");\n  FUN_08003826(DAT_20000ecc);\n  FUN_080036c6(\" (default feed, mm/min)\\r\\n$5=\");\n  FUN_08003826(DAT_20000ed0);\n  FUN_080036c6(\" (default seek, mm/min)\\r\\n$6=\");\n  FUN_080037fc(DAT_20000ed4);\n  FUN_080036c6(\" (step port invert mask, int:\");\n  FUN_0800375c(DAT_20000ed4);\n  FUN_080036c6(\")\\r\\n$7=\");\n  FUN_080037fc(DAT_20000ef8);\n  FUN_080036c6(\" (step idle delay, msec)\\r\\n$8=\");\n  acceleration = FUN_08009054(DAT_20000edc,0x45610000);\n  FUN_08003826(acceleration);\n  FUN_080036c6(\" (acceleration, mm/sec^2)\\r\\n$9=\");\n  FUN_08003826(DAT_20000ee0);\n  FUN_080036c6(\" (junction deviation, mm)\\r\\n$10=\");\n  FUN_08003826(DAT_20000ed8);\n  FUN_080036c6(\" (arc, mm/segment)\\r\\n$11=\");\n  FUN_080037fc(DAT_20000efa);\n  FUN_080036c6(\" (n-arc correction, int)\\r\\n$12=\");\n  FUN_080037fc(DAT_20000ef9);\n  FUN_080036c6(\" (n-decimals, int)\\r\\n$13=\");\n  FUN_080037fc((DAT_20000ee4 & 1) != 0);\n  FUN_080036c6(\" (report inches, bool)\\r\\n$14=\");\n  FUN_080037fc((DAT_20000ee4 & 2) != 0);\n  FUN_080036c6(\" (auto start, bool)\\r\\n$15=\");\n  FUN_080037fc((DAT_20000ee4 & 4) != 0);\n  FUN_080036c6(\" (invert step enable, bool)\\r\\n$16=\");\n  FUN_080037fc((DAT_20000ee4 & 8) != 0);\n  FUN_080036c6(\" (hard limits, bool)\\r\\n$17=\");\n  FUN_080037fc((DAT_20000ee4 & 0x10) != 0);\n  FUN_080036c6(\" (homing cycle, bool)\\r\\n$18=\");\n  FUN_080037fc(DAT_20000ee6);\n  FUN_080036c6(\" (homing dir invert mask, int:\");\n  FUN_0800375c(DAT_20000ee6);\n  FUN_080036c6(\")\\r\\n$19=\");\n  FUN_08003826(DAT_20000ee8);\n  FUN_080036c6(\" (homing feed, mm/min)\\r\\n$20=\");\n  FUN_08003826(DAT_20000eec);\n  FUN_080036c6(\" (homing seek, mm/min)\\r\\n$21=\");\n  FUN_080037fc(DAT_20000ef0);\n  FUN_080036c6(\" (homing debounce, msec)\\r\\n$22=\");\n  FUN_08003826(DAT_20000ef4);\n  FUN_080036c6(\" (homing pull-off, mm)\\r\\n$23=\");\n  FUN_080037fc(DAT_20000ed6);\n  FUN_080036c6(\" (dir port invert mask, int:\");\n  FUN_0800375c(DAT_20000ed6);\n  FUN_080036c6(&DAT_0800bb94);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004250": "print_configurations_08004250",
                "uVar1": "acceleration"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080051b4"
            ],
            "called": [
                "FUN_08003826",
                "FUN_08009054",
                "FUN_080037fc",
                "FUN_080036c6",
                "FUN_0800375c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080044e8": {
            "entrypoint": "0x080044e8",
            "current_name": "process_data_080044e8",
            "code": "\nvoid processData_080044e8(void)\n\n{\n  int result;\n  undefined4 tempVar1;\n  undefined8 tempVar2;\n  undefined4 array [3];\n  byte index;\n  byte counter;\n  \n  counter = 0;\n  while( true ) {\n    if (7 < counter) {\n      FUN_080036c6(\"[G92:\");\n      for (index = 0; index < 3; index = index + 1) {\n        if ((DAT_20000ee4 & 1) == 0) {\n          FUN_08003826(*(undefined4 *)(&DAT_20000e74 + (index + 10) * 4));\n        }\n        else {\n          tempVar2 = FUN_08008590(*(undefined4 *)(&DAT_20000e74 + (index + 10) * 4));\n          tempVar2 = FUN_08008640((int)tempVar2,(int)((ulonglong)tempVar2 >> 0x20),0x57e16865,0x3fa42851);\n          tempVar1 = FUN_08008c30((int)tempVar2,(int)((ulonglong)tempVar2 >> 0x20));\n          FUN_08003826(tempVar1);\n        }\n        if (index < 2) {\n          FUN_080036c6(&DAT_0800bbbc);\n        }\n        else {\n          FUN_080036c6(&DAT_0800b764);\n        }\n      }\n      return;\n    }\n    result = FUN_08004d7c(counter,array);\n    if (result == 0) break;\n    FUN_080036c6(&DAT_0800bb98);\n    switch(counter) {\n    case 0:\n      FUN_080036c6(&DAT_0800bb9c);\n      break;\n    case 1:\n      FUN_080036c6(&DAT_0800bba0);\n      break;\n    case 2:\n      FUN_080036c6(&DAT_0800bba4);\n      break;\n    case 3:\n      FUN_080036c6(&DAT_0800bba8);\n      break;\n    case 4:\n      FUN_080036c6(&DAT_0800bbac);\n      break;\n    case 5:\n      FUN_080036c6(&DAT_0800bbb0);\n      break;\n    case 6:\n      FUN_080036c6(&DAT_0800bbb4);\n      break;\n    case 7:\n      FUN_080036c6(&DAT_0800bbb8);\n    }\n    for (index = 0; index < 3; index = index + 1) {\n      if ((DAT_20000ee4 & 1) == 0) {\n        FUN_08003826(array[index]);\n      }\n      else {\n        tempVar2 = FUN_08008590(array[index]);\n        tempVar2 = FUN_08008640((int)tempVar2,(int)((ulonglong)tempVar2 >> 0x20),0x57e16865,0x3fa42851);\n        tempVar1 = FUN_08008c30((int)tempVar2,(int)((ulonglong)tempVar2 >> 0x20));\n        FUN_08003826(tempVar1);\n      }\n      if (index < 2) {\n        FUN_080036c6(&DAT_0800bbbc);\n      }\n      else {\n        FUN_080036c6(&DAT_0800b764);\n      }\n    }\n    counter = counter + 1;\n  }\n  FUN_08004030(10);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080044e8": "process_data_080044e8",
                "auStack_18": "array",
                "local_a": "index",
                "local_9": "counter",
                "iVar1": "result",
                "uVar2": "tempVar1",
                "uVar3": "tempVar2"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08003826",
                "FUN_08004d7c",
                "FUN_08008640",
                "FUN_08004030",
                "FUN_080036c6",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080046d0": {
            "entrypoint": "0x080046d0",
            "current_name": "initialize_ui_080046d0",
            "code": "\nvoid initializeUI_080046d0(void)\n\n{\n  undefined4 returnValue;\n  undefined8 result;\n  \n  switch(DAT_20000e71) {\n  case 0:\n    FUN_080036c6(&DAT_0800bbc8);\n    break;\n  case 1:\n    FUN_080036c6(&DAT_0800bbcc);\n    break;\n  case 2:\n    FUN_080036c6(&DAT_0800bbd0);\n    break;\n  case 3:\n    FUN_080036c6(&DAT_0800bbd4);\n    break;\n  case 4:\n    FUN_080036c6(&DAT_0800bbd8);\n  }\n  FUN_080036c6(&DAT_0800bbe0);\n  FUN_080037fc(DAT_20000e8c + 0x36);\n  if (DAT_20000e89 == '\\0') {\n    if (DAT_20000e8a == '\\x01') {\n      FUN_080036c6(&DAT_0800bbe4);\n    }\n    else {\n      FUN_080036c6(&DAT_0800bbec);\n    }\n  }\n  else {\n    FUN_080036c6(&DAT_0800bbf4);\n  }\n  if (DAT_20000e73 == '\\0') {\n    FUN_080036c6(&DAT_0800bc04);\n  }\n  else {\n    FUN_080036c6(&DAT_0800bbfc);\n  }\n  if (DAT_20000e74 == '\\0') {\n    FUN_080036c6(&DAT_0800bc14);\n  }\n  else {\n    FUN_080036c6(&DAT_0800bc0c);\n  }\n  if (DAT_20000e72 == '\\0') {\n    FUN_080036c6(&DAT_0800bc24);\n  }\n  else {\n    FUN_080036c6(&DAT_0800bc1c);\n  }\n  if (DAT_20000e75 == 2) {\n    FUN_080036c6(&DAT_0800bc34);\n  }\n  else if (DAT_20000e75 < 3) {\n    if (DAT_20000e75 == 0) {\n      FUN_080036c6(&DAT_0800bc2c);\n    }\n    else if (DAT_20000e75 == 1) {\n      FUN_080036c6(&DAT_0800bc30);\n    }\n  }\n  if (DAT_20000e76 == '\\x01') {\n    FUN_080036c6(&DAT_0800bc38);\n  }\n  else if (DAT_20000e76 < '\\x02') {\n    if (DAT_20000e76 == -1) {\n      FUN_080036c6(&DAT_0800bc3c);\n    }\n    else if (DAT_20000e76 == '\\0') {\n      FUN_080036c6(&DAT_0800bc40);\n    }\n  }\n  if (DAT_20000e77 == 2) {\n    FUN_080036c6(&DAT_0800bc4c);\n  }\n  else if (DAT_20000e77 < 3) {\n    if (DAT_20000e77 == 0) {\n      FUN_080036c6(&DAT_0800bc44);\n    }\n    else if (DAT_20000e77 == 1) {\n      FUN_080036c6(&DAT_0800bc48);\n    }\n  }\n  FUN_080036c6(&DAT_0800bc50);\n  FUN_080037fc(DAT_20000e88);\n  FUN_080036c6(&DAT_0800bc54);\n  if (DAT_20000e73 == '\\0') {\n    FUN_08003826(DAT_20000e78);\n  }\n  else {\n    result = FUN_08008590(DAT_20000e78);\n    result = FUN_08008640((int)result,(int)((ulonglong)result >> 0x20),0x57e16865,0x3fa42851);\n    returnValue = FUN_08008c30((int)result,(int)((ulonglong)result >> 0x20));\n    FUN_08003826(returnValue);\n  }\n  FUN_080036c6(&DAT_0800b764);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080046d0": "initialize_ui_080046d0",
                "uVar1": "returnValue",
                "uVar2": "result"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08003826",
                "FUN_080037fc",
                "FUN_08008640",
                "FUN_080036c6",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004900": {
            "entrypoint": "0x08004900",
            "current_name": "initialize_08004900",
            "code": "\nvoid initialize_08004900(undefined data_struct,undefined4 value)\n\n{\n  FUN_080036c6(&DAT_0800bc58);\n  FUN_080037fc(data_struct);\n  FUN_080036c6(&DAT_0800bc5c);\n  FUN_0800369c(value);\n  FUN_080036c6(&DAT_0800b6d8);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004900": "initialize_08004900",
                "param_1": "data_struct",
                "param_2": "value"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_0800369c",
                "FUN_080037fc",
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004940": {
            "entrypoint": "0x08004940",
            "current_name": "print_status_08004940",
            "code": "\nvoid printStatus_08004940(void)\n\n{\n  undefined4 result1;\n  uint result2;\n  undefined4 result3;\n  undefined8 result4;\n  undefined8 result5;\n  undefined4 dataStack [6];\n  byte index;\n  \n  dataStack[3] = DAT_20000eac;\n  dataStack[4] = DAT_20000eb0;\n  dataStack[5] = DAT_20000eb4;\n  switch(DAT_20000ea9) {\n  case 0:\n    FUN_080036c6(\"<Idle\");\n    break;\n  case 2:\n    FUN_080036c6(\"<Queue\");\n    break;\n  case 3:\n    FUN_080036c6(&DAT_0800bc70);\n    break;\n  case 4:\n    FUN_080036c6(\"<Hold\");\n    break;\n  case 5:\n    FUN_080036c6(\"<Home\");\n    break;\n  case 6:\n    FUN_080036c6(\"<Alarm\");\n    break;\n  case 7:\n    FUN_080036c6(\"<Check\");\n  }\n  FUN_080036c6(\",MPos:\");\n  for (index = 0; index < 3; index = index + 1) {\n    result1 = FUN_08008e44(dataStack[index + 3]);\n    result2 = (uint)index;\n    result1 = FUN_08009054(result1,(&DAT_20000ebc)[index]);\n    dataStack[result2] = result1;\n    if ((DAT_20000ee4 & 1) != 0) {\n      result4 = FUN_08008590(dataStack[index]);\n      result4 = FUN_08008640((int)result4,(int)((ulonglong)result4 >> 0x20),0x57e16865,0x3fa42851);\n      result2 = (uint)index;\n      result1 = FUN_08008c30((int)result4,(int)((ulonglong)result4 >> 0x20));\n      dataStack[result2] = result1;\n    }\n    FUN_08003826(dataStack[index]);\n    FUN_080036c6(&DAT_0800bbbc);\n  }\n  FUN_080036c6(\"WPos:\");\n  for (index = 0; index < 3; index = index + 1) {\n    if ((DAT_20000ee4 & 1) == 0) {\n      result3 = dataStack[index];\n      result1 = FUN_08008cdc(*(undefined4 *)(&DAT_20000e70 + (index + 8) * 4),\n                           *(undefined4 *)(&DAT_20000e74 + (index + 10) * 4));\n      result2 = (uint)index;\n      result1 = FUN_08008cd8(result3,result1);\n      dataStack[result2] = result1;\n    }\n    else {\n      result4 = FUN_08008590(dataStack[index]);\n      result1 = FUN_08008cdc(*(undefined4 *)(&DAT_20000e70 + (index + 8) * 4),\n                           *(undefined4 *)(&DAT_20000e74 + (index + 10) * 4));\n      result5 = FUN_08008590(result1);\n      result5 = FUN_08008640((int)result5,(int)((ulonglong)result5 >> 0x20),0x57e16865,0x3fa42851);\n      result4 = FUN_080082d0((int)result4,(int)((ulonglong)result4 >> 0x20),(int)result5,\n                           (int)((ulonglong)result5 >> 0x20));\n      result2 = (uint)index;\n      result1 = FUN_08008c30((int)result4,(int)((ulonglong)result4 >> 0x20));\n      dataStack[result2] = result1;\n    }\n    FUN_08003826(dataStack[index]);\n    if (index < 2) {\n      FUN_080036c6(&DAT_0800bbbc);\n    }\n  }\n  FUN_080036c6(&DAT_0800bca8);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004940": "print_status_08004940",
                "auStack_2c": "dataStack",
                "local_11": "index",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "result3",
                "uVar4": "result4",
                "uVar5": "result5"
            },
            "calling": [
                "FUN_08003a74"
            ],
            "called": [
                "FUN_08008590",
                "FUN_080082d0",
                "FUN_08008cd8",
                "FUN_08003826",
                "FUN_08008e44",
                "FUN_08009054",
                "FUN_08008cdc",
                "FUN_08008640",
                "FUN_08008c30",
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004bc0": {
            "entrypoint": "0x08004bc0",
            "current_name": "initialize_memory_block_08004bc0",
            "code": "\nvoid initializeMemoryBlock_08004bc0(byte inputByte,undefined4 parameter)\n\n{\n  FUN_08000374((ushort)inputByte * 0x101 + 0x300,parameter,0x100);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004bc0": "initialize_memory_block_08004bc0",
                "param_1": "inputByte",
                "param_2": "parameter"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_08004d2c"
            ],
            "called": [
                "FUN_08000374"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004bf4": {
            "entrypoint": "0x08004bf4",
            "current_name": "perform_calculation_08004bf4",
            "code": "\nvoid performCalculation_08004bf4(byte inputByte,undefined4 inputParam)\n\n{\n  FUN_08000374((unsignedShort)inputByte * 0xd + 0x200,inputParam,0xc);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004bf4": "perform_calculation_08004bf4",
                "param_1": "inputByte",
                "param_2": "inputParam",
                "ushort": "unsignedShort"
            },
            "calling": [
                "FUN_08004d7c",
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08000374"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c2a": {
            "entrypoint": "0x08004c2a",
            "current_name": "initialize_data_08004c2a",
            "code": "\nvoid initializeData_08004c2a(void)\n\n{\n  FUN_08000340(0,5);\n  FUN_08000374(1,&DAT_20000ebc,0x40);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c2a": "initialize_data_08004c2a"
            },
            "calling": [
                "FUN_08004e30",
                "FUN_08004c48"
            ],
            "called": [
                "FUN_08000374",
                "FUN_08000340"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c48": {
            "entrypoint": "0x08004c48",
            "current_name": "initialize_data_08004c48",
            "code": "\nvoid initializeData_08004c48(char flag)\n\n{\n  if (flag != '\\0') {\n    DAT_20000ebc = 0x431d7af6;\n    DAT_20000ec0 = 0x431d7af6;\n    DAT_20000ec4 = 0x431d7af6;\n    DAT_20000ec9 = 10;\n    DAT_20000ecc = 0x437a0000;\n    DAT_20000ed0 = 0x43fa0000;\n    DAT_20000edc = 0x470ca000;\n    DAT_20000ed8 = 0x3dcccccd;\n    DAT_20000ed4 = 0;\n    DAT_20000ed6 = 0xa80;\n    DAT_20000ee0 = 0x3d4ccccd;\n  }\n  DAT_20000ee4 = 0x12;\n  DAT_20000ee6 = 0;\n  DAT_20000ee8 = 0x41c80000;\n  DAT_20000eec = 0x437a0000;\n  DAT_20000ef0 = 100;\n  DAT_20000ef4 = 0x3f800000;\n  DAT_20000ef8 = 0x19;\n  DAT_20000ef9 = 3;\n  DAT_20000efa = 0x19;\n  FUN_08004c2a();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c48": "initialize_data_08004c48",
                "param_1": "flag"
            },
            "calling": [
                "FUN_08004dd2",
                "FUN_080051b4"
            ],
            "called": [
                "FUN_08004c2a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d2c": {
            "entrypoint": "0x08004d2c",
            "current_name": "check_and_process_data_08004d2c",
            "code": "\nbool checkAndProcessData_08004d2c(byte dataByte,undefined *dataPtr)\n\n{\n  int result;\n  \n  result = FUN_080003ec(dataPtr,(ushort)dataByte * 0x101 + 0x300,0x100);\n  if (result == 0) {\n    *dataPtr = 0;\n    FUN_08004bc0(dataByte,dataPtr);\n  }\n  return result != 0;\n}\n\n",
            "renaming": {
                "FUN_08004d2c": "check_and_process_data_08004d2c",
                "param_1": "dataByte",
                "param_2": "dataPtr",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080039bc"
            ],
            "called": [
                "FUN_08004bc0",
                "FUN_080003ec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d7c": {
            "entrypoint": "0x08004d7c",
            "current_name": "check_and_initialize_data_08004d7c",
            "code": "\nbool checkAndInitializeData_08004d7c(byte inputByte,undefined4 inputValue)\n\n{\n  int result;\n  \n  result = FUN_080003ec(inputValue,(ushort)inputByte * 0xd + 0x200,0xc);\n  if (result == 0) {\n    FUN_0800b430(inputValue,0,0xc);\n    FUN_08004bf4(inputByte,inputValue);\n  }\n  return result != 0;\n}\n\n",
            "renaming": {
                "FUN_08004d7c": "check_and_initialize_data_08004d7c",
                "param_1": "inputByte",
                "param_2": "inputValue",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080004ac",
                "FUN_080005b4",
                "FUN_080044e8",
                "FUN_080051b4"
            ],
            "called": [
                "FUN_0800b430",
                "FUN_080003ec",
                "FUN_08004bf4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004dd2": {
            "entrypoint": "0x08004dd2",
            "current_name": "check_data_and_process_08004dd2",
            "code": "\nundefined4 check_data_and_process_08004dd2(void)\n\n{\n  byte data_status;\n  int result;\n  \n  data_status = FUN_08000310(0);\n  if (data_status == 5) {\n    result = FUN_080003ec(&DAT_20000ebc,1,0x40);\n    if (result == 0) {\n      return 0;\n    }\n  }\n  else {\n    if (4 < data_status) {\n      return 0;\n    }\n    result = FUN_080003ec(&DAT_20000ebc,1,0x28);\n    if (result == 0) {\n      return 0;\n    }\n    FUN_08004c48(0);\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08004dd2": "check_data_and_process_08004dd2",
                "bVar1": "data_status",
                "iVar2": "result"
            },
            "calling": [
                "FUN_080051b4"
            ],
            "called": [
                "FUN_080003ec",
                "FUN_08000310",
                "FUN_08004c48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e30": {
            "entrypoint": "0x08004e30",
            "current_name": "update_settings_08004e30",
            "code": "\nundefined4 updateSettings_08004e30(int settingID,uint newValue)\n\n{\n  undefined4 result;\n  int errorCode;\n  undefined8 tempValue;\n  \n  switch(settingID) {\n  case 0:\n  case 1:\n  case 2:\n    errorCode = FUN_0800923c(newValue,0);\n    if (errorCode != 0) {\n      return 8;\n    }\n    (&DAT_20000ebc)[settingID] = newValue;\n    break;\n  case 3:\n    errorCode = FUN_08009228(newValue,0x40400000);\n    if (errorCode != 0) {\n      return 9;\n    }\n    tempValue = FUN_08008590(newValue);\n    tempValue = FUN_08009654((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    DAT_20000ec9 = FUN_08008bf0((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    break;\n  case 4:\n    DAT_20000ecc = newValue;\n    break;\n  case 5:\n    DAT_20000ed0 = newValue;\n    break;\n  case 6:\n    tempValue = FUN_08008590(newValue);\n    tempValue = FUN_08009798((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    DAT_20000ed4 = FUN_08008bf0((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    break;\n  case 7:\n    tempValue = FUN_08008590(newValue);\n    tempValue = FUN_08009654((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    DAT_20000ef8 = FUN_08008bf0((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    break;\n  case 8:\n    result = FUN_08008eec(newValue,0x42700000);\n    DAT_20000edc = FUN_08008eec(result,0x42700000);\n    break;\n  case 9:\n    DAT_20000ee0 = newValue & 0x7fffffff;\n    break;\n  case 10:\n    DAT_20000ed8 = newValue;\n    break;\n  case 0xb:\n    tempValue = FUN_08008590(newValue);\n    tempValue = FUN_08009654((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    DAT_20000efa = FUN_08008bf0((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    break;\n  case 0xc:\n    tempValue = FUN_08008590(newValue);\n    tempValue = FUN_08009654((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    DAT_20000ef9 = FUN_08008bf0((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    break;\n  case 0xd:\n    errorCode = FUN_08009214(newValue,0);\n    if (errorCode == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 1;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xfe;\n    }\n    break;\n  case 0xe:\n    errorCode = FUN_08009214(newValue,0);\n    if (errorCode == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 2;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xfd;\n    }\n    break;\n  case 0xf:\n    errorCode = FUN_08009214(newValue,0);\n    if (errorCode == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 4;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xfb;\n    }\n    break;\n  case 0x10:\n    errorCode = FUN_08009214(newValue,0);\n    if (errorCode == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 8;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xf7;\n    }\n    FUN_0800192c();\n    break;\n  case 0x11:\n    errorCode = FUN_08009214(newValue,0);\n    if (errorCode == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 0x10;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xef;\n    }\n    break;\n  case 0x12:\n    tempValue = FUN_08008590(newValue);\n    tempValue = FUN_08009798((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    DAT_20000ee6 = FUN_08008bf0((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    break;\n  case 0x13:\n    DAT_20000ee8 = newValue;\n    break;\n  case 0x14:\n    DAT_20000eec = newValue;\n    break;\n  case 0x15:\n    tempValue = FUN_08008590(newValue);\n    tempValue = FUN_08009654((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    DAT_20000ef0 = FUN_08008bf0((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    break;\n  case 0x16:\n    DAT_20000ef4 = newValue;\n    break;\n  case 0x17:\n    tempValue = FUN_08008590(newValue);\n    tempValue = FUN_08009798((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    DAT_20000ed6 = FUN_08008bf0((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    break;\n  default:\n    return 6;\n  }\n  FUN_08004c2a();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004e30": "update_settings_08004e30",
                "param_1": "settingID",
                "param_2": "newValue",
                "uVar1": "result",
                "iVar2": "errorCode",
                "uVar3": "tempValue"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08009228",
                "FUN_08009798",
                "FUN_08009214",
                "FUN_08004c2a",
                "FUN_08008eec",
                "FUN_08009654",
                "FUN_0800923c",
                "FUN_08008bf0",
                "FUN_0800192c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080051b4": {
            "entrypoint": "0x080051b4",
            "current_name": "check_and_process_data_080051b4",
            "code": "\nvoid checkAndProcessData_080051b4(void)\n\n{\n  int iVar1;\n  undefined tempBuffer [15];\n  byte loopCounter;\n  \n  iVar1 = FUN_08004dd2();\n  if (iVar1 == 0) {\n    FUN_08004030(10);\n    FUN_08004c48(1);\n    FUN_08004250();\n  }\n  for (loopCounter = 0; loopCounter < 8; loopCounter = loopCounter + 1) {\n    iVar1 = FUN_08004d7c(loopCounter,tempBuffer);\n    if (iVar1 == 0) {\n      FUN_08004030(10);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080051b4": "check_and_process_data_080051b4",
                "auStack_18": "tempBuffer",
                "local_9": "loopCounter"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08004250",
                "FUN_08004d7c",
                "FUN_08004dd2",
                "FUN_08004030",
                "FUN_08004c48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005208": {
            "entrypoint": "0x08005208",
            "current_name": "FUNC_08005208",
            "code": "\nvoid FUNC_08005208(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005208": "FUNC_08005208"
            },
            "calling": [
                "FUN_0800525c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005214": {
            "entrypoint": "0x08005214",
            "current_name": "FUNC_08005214",
            "code": "\nvoid FUNC_08005214(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005214": "FUNC_08005214"
            },
            "calling": [
                "FUN_08005250"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005220": {
            "entrypoint": "0x08005220",
            "current_name": "FUNC_08005220",
            "code": "\nvoid FUNC_08005220(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005220": "FUNC_08005220"
            },
            "calling": [
                "FUN_0800525c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800522c": {
            "entrypoint": "0x0800522c",
            "current_name": "FUNC_0800522c",
            "code": "\nvoid FUNC_0800522c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800522c": "FUNC_0800522c"
            },
            "calling": [
                "FUN_0800525c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005238": {
            "entrypoint": "0x08005238",
            "current_name": "initialize_data_08005238",
            "code": "\nvoid initializeData_08005238(void)\n\n{\n  DAT_20000e12 = 0;\n  FUN_08005250();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005238": "initialize_data_08005238"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08005250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005250": {
            "entrypoint": "0x08005250",
            "current_name": "initialize_system_08005250",
            "code": "\nvoid initialize_system_08005250(void)\n\n{\n  FUNC_08005214();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005250": "initialize_system_08005250"
            },
            "calling": [
                "FUN_0800525c",
                "FUN_080025e8",
                "FUN_08005238"
            ],
            "called": [
                "FUN_08005214"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800525c": {
            "entrypoint": "0x0800525c",
            "current_name": "check_and_update_param_0800525c",
            "code": "\nvoid checkAndUpdateParam_0800525c(byte inputParam)\n\n{\n  if ((int)(char)inputParam != (uint)DAT_20000e12) {\n    FUN_08002fd4();\n    if (inputParam == 0) {\n      FUN_08005250();\n      DAT_20000e12 = inputParam;\n    }\n    else {\n      if ((char)inputParam < '\\x01') {\n        FUNC_0800522c();\n      }\n      else {\n        FUNC_08005220();\n      }\n      FUNC_08005208();\n      DAT_20000e12 = inputParam;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800525c": "check_and_update_param_0800525c",
                "param_1": "inputParam"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08005208",
                "FUN_0800522c",
                "FUN_08005250",
                "FUN_08005220",
                "FUN_08002fd4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080052ac": {
            "entrypoint": "0x080052ac",
            "current_name": "update_data_080052ac",
            "code": "\n\n\nvoid updateData_080052ac(uint newData)\n\n{\n  _DAT_40021014 = newData | _DAT_40021014 & 0xfffffaaf;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080052ac": "update_data_080052ac",
                "param_1": "newData"
            },
            "calling": [
                "FUN_0800583c",
                "FUN_08005778",
                "FUN_08005760"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080052dc": {
            "entrypoint": "0x080052dc",
            "current_name": "update_data_080052dc",
            "code": "\n\n\nvoid updateData_080052dc(uint newValue)\n\n{\n  _DAT_40021014 = newValue | _DAT_40021014 & 0xfffff55f;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080052dc": "update_data_080052dc",
                "param_1": "newValue"
            },
            "calling": [
                "FUN_080053a0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800530c": {
            "entrypoint": "0x0800530c",
            "current_name": "FUNC_0800530c",
            "code": "\nvoid FUNC_0800530c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800530c": "FUNC_0800530c"
            },
            "calling": [
                "FUN_080057e4"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005318": {
            "entrypoint": "0x08005318",
            "current_name": "FUNC_08005318",
            "code": "\nvoid FUNC_08005318(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005318": "FUNC_08005318"
            },
            "calling": [
                "FUN_08005790"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005324": {
            "entrypoint": "0x08005324",
            "current_name": "calculate_division_and_call_another_function_08005324",
            "code": "\nvoid calculateDivisionAndCallAnotherFunction_08005324(uint inputValue)\n\n{\n  uint adjustedValue;\n  \n  adjustedValue = inputValue;\n  if (inputValue < 800) {\n    adjustedValue = 800;\n  }\n  DAT_20000e28 = 1260000000 / adjustedValue;\n  FUN_08007bf0(DAT_20000e28);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005324": "calculate_division_and_call_another_function_08005324",
                "param_1": "inputValue",
                "local_14": "adjustedValue"
            },
            "calling": [
                "FUN_08005814",
                "FUN_080058a0",
                "FUN_080053a0"
            ],
            "called": [
                "FUN_08007bf0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005360": {
            "entrypoint": "0x08005360",
            "current_name": "update_counter_08005360",
            "code": "\nbool updateCounter_08005360(void)\n\n{\n  bool isExceededThreshold;\n  \n  DAT_20000e2c = DAT_20000e28 + DAT_20000e2c;\n  isExceededThreshold = 420000 < DAT_20000e2c;\n  if (isExceededThreshold) {\n    DAT_20000e2c = DAT_20000e2c - 420000;\n  }\n  return isExceededThreshold;\n}\n\n",
            "renaming": {
                "FUN_08005360": "update_counter_08005360",
                "bVar1": "isExceededThreshold"
            },
            "calling": [
                "FUN_080053a0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080053a0": {
            "entrypoint": "0x080053a0",
            "current_name": "update_data_values_080053a0",
            "code": "\nvoid updateDataValues_080053a0(void)\n\n{\n  int result;\n  \n  FUN_080052dc(DAT_20000e3e);\n  DAT_20000e40 = DAT_20000e3c;\n  if (DAT_20000e38 == (ushort *)0x0) {\n    DAT_20000e38 = (ushort *)FUN_08002f74();\n    if (DAT_20000e38 == (ushort *)0x0) {\n      FUN_080057e4();\n      DAT_20000eaa = DAT_20000eaa | 4;\n    }\n    else {\n      if (DAT_20000ea9 == '\\x03') {\n        DAT_20000e30 = *(uint *)(DAT_20000e38 + 0x14);\n        FUN_08005324(DAT_20000e30);\n        DAT_20000e2c = 210000;\n      }\n      DAT_20000e34 = (*(int *)(DAT_20000e38 + 0x18) >> 1) + *(int *)(DAT_20000e38 + 0x18);\n      DAT_20000e14 = -(*(int *)(DAT_20000e38 + 8) >> 1);\n      DAT_20000e20 = *(int *)(DAT_20000e38 + 8);\n      DAT_20000e24 = 0;\n      DAT_20000e18 = DAT_20000e14;\n      DAT_20000e1c = DAT_20000e14;\n    }\n  }\n  if (DAT_20000e38 != (ushort *)0x0) {\n    DAT_20000e3e = *DAT_20000e38;\n    DAT_20000e3c = 0;\n    DAT_20000e14 = *(int *)(DAT_20000e38 + 2) + DAT_20000e14;\n    if (0 < DAT_20000e14) {\n      DAT_20000e3c = 0x10;\n      DAT_20000e14 = DAT_20000e14 - DAT_20000e20;\n      if ((DAT_20000e3e & 0x20) == 0) {\n        DAT_20000eac = DAT_20000eac + 1;\n      }\n      else {\n        DAT_20000eac = DAT_20000eac + -1;\n      }\n    }\n    DAT_20000e18 = *(int *)(DAT_20000e38 + 4) + DAT_20000e18;\n    if (0 < DAT_20000e18) {\n      DAT_20000e3c = DAT_20000e3c | 0x440;\n      DAT_20000e18 = DAT_20000e18 - DAT_20000e20;\n      if ((DAT_20000e3e & 0x80) == 0) {\n        DAT_20000eb0 = DAT_20000eb0 + 1;\n      }\n      else {\n        DAT_20000eb0 = DAT_20000eb0 + -1;\n      }\n    }\n    DAT_20000e1c = *(int *)(DAT_20000e38 + 6) + DAT_20000e1c;\n    if (0 < DAT_20000e1c) {\n      DAT_20000e3c = DAT_20000e3c | 0x100;\n      DAT_20000e1c = DAT_20000e1c - DAT_20000e20;\n      if ((DAT_20000e3e & 0x200) == 0) {\n        DAT_20000eb4 = DAT_20000eb4 + 1;\n      }\n      else {\n        DAT_20000eb4 = DAT_20000eb4 + -1;\n      }\n    }\n    DAT_20000e24 = DAT_20000e24 + 1;\n    if (DAT_20000e24 < *(uint *)(DAT_20000e38 + 8)) {\n      if (DAT_20000ea9 == '\\x04') {\n        result = FUN_08005360();\n        if (result != 0) {\n          if (*(uint *)(DAT_20000e38 + 0x18) < DAT_20000e30) {\n            DAT_20000e30 = DAT_20000e30 - *(int *)(DAT_20000e38 + 0x18);\n            FUN_08005324(DAT_20000e30);\n          }\n          else {\n            FUN_080057e4();\n            DAT_20000eaa = DAT_20000eaa | 4;\n          }\n        }\n      }\n      else if (DAT_20000e24 < *(uint *)(DAT_20000e38 + 0x1a)) {\n        result = FUN_08005360();\n        if (result != 0) {\n          DAT_20000e30 = DAT_20000e30 + *(int *)(DAT_20000e38 + 0x18);\n          if (*(uint *)(DAT_20000e38 + 0x1e) <= DAT_20000e30) {\n            DAT_20000e30 = *(uint *)(DAT_20000e38 + 0x1e);\n          }\n          FUN_08005324(DAT_20000e30);\n        }\n      }\n      else if (DAT_20000e24 < *(uint *)(DAT_20000e38 + 0x1c)) {\n        if (DAT_20000e30 != *(uint *)(DAT_20000e38 + 0x1e)) {\n          DAT_20000e30 = *(uint *)(DAT_20000e38 + 0x1e);\n          FUN_08005324(DAT_20000e30);\n        }\n      }\n      else if (DAT_20000e24 == *(uint *)(DAT_20000e38 + 0x1c)) {\n        if (DAT_20000e30 == *(uint *)(DAT_20000e38 + 0x1e)) {\n          DAT_20000e2c = 210000;\n        }\n        else {\n          DAT_20000e2c = 420000 - DAT_20000e2c;\n        }\n      }\n      else {\n        result = FUN_08005360();\n        if (result != 0) {\n          if (DAT_20000e34 < DAT_20000e30) {\n            DAT_20000e30 = DAT_20000e30 - *(int *)(DAT_20000e38 + 0x18);\n          }\n          else {\n            DAT_20000e30 = DAT_20000e30 >> 1;\n          }\n          if (DAT_20000e30 < *(uint *)(DAT_20000e38 + 0x16)) {\n            DAT_20000e30 = *(uint *)(DAT_20000e38 + 0x16);\n          }\n          FUN_08005324(DAT_20000e30);\n        }\n      }\n    }\n    else {\n      DAT_20000e3c = 0;\n      DAT_20000e38 = (ushort *)0x0;\n      FUN_08002f40();\n    }\n  }\n  DAT_20000e3c = DAT_20000e3c ^ DAT_20000ed4;\n  DAT_20000e3e = DAT_20000e3e ^ DAT_20000ed6;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080053a0": "update_data_values_080053a0",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08007c7c"
            ],
            "called": [
                "FUN_080052dc",
                "FUN_080057e4",
                "FUN_08005324",
                "FUN_08002f40",
                "FUN_08005360",
                "FUN_08002f74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005760": {
            "entrypoint": "0x08005760",
            "current_name": "initialize_data_08005760",
            "code": "\nvoid initializeData_08005760(void)\n\n{\n  FUN_080052ac(DAT_20000ed4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005760": "initialize_data_08005760"
            },
            "calling": [
                "FUN_08007c7c"
            ],
            "called": [
                "FUN_080052ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005778": {
            "entrypoint": "0x08005778",
            "current_name": "initialize_data_08005778",
            "code": "\nvoid initializeData_08005778(void)\n\n{\n  FUN_080052ac(DAT_20000e40);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005778": "initialize_data_08005778"
            },
            "calling": [
                "FUN_08007c7c"
            ],
            "called": [
                "FUN_080052ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005790": {
            "entrypoint": "0x08005790",
            "current_name": "process_data_08005790",
            "code": "\nvoid processData_08005790(void)\n\n{\n  FUNC_08005318();\n  if (DAT_20000ea9 == '\\x03') {\n    DAT_20000e3c = DAT_20000ed4;\n    DAT_20000e3e = DAT_20000ed6;\n    FUN_08007c40(0x69);\n    FUN_08007c5e((DAT_20000ec9 + 5) * 0x15);\n    FUN_08007b70();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005790": "process_data_08005790"
            },
            "calling": [
                "FUN_0800585c",
                "FUN_0800583c",
                "FUN_08001d4c"
            ],
            "called": [
                "FUN_08007c5e",
                "FUN_08007c40",
                "FUN_08005318",
                "FUN_08007b70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080057e4": {
            "entrypoint": "0x080057e4",
            "current_name": "perform_task_080057e4",
            "code": "\nvoid performTask_080057e4(void)\n\n{\n  FUN_08007bc2();\n  if ((DAT_20000ef8 != -1) || ((DAT_20000eaa & 0x20) != 0)) {\n    FUNC_0800530c();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080057e4": "perform_task_080057e4"
            },
            "calling": [
                "FUN_080053a0",
                "FUN_0800583c",
                "FUN_080025e8",
                "FUN_08001d4c"
            ],
            "called": [
                "FUN_0800530c",
                "FUN_08007bc2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005814": {
            "entrypoint": "0x08005814",
            "current_name": "initialize_data_08005814",
            "code": "\nvoid initializeData_08005814(void)\n\n{\n  FUN_0800b430(&DAT_20000e14,0,0x24);\n  FUN_08005324(800);\n  DAT_20000e38 = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005814": "initialize_data_08005814"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_0800b430",
                "FUN_08005324"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800583c": {
            "entrypoint": "0x0800583c",
            "current_name": "initialize_program_0800583c",
            "code": "\nvoid initializeProgram_0800583c(void)\n\n{\n  FUN_080052ac(DAT_20000ed4);\n  FUN_08005790();\n  FUN_080057e4();\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800583c": "initialize_program_0800583c"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08005790",
                "FUN_080057e4",
                "FUN_080052ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800585c": {
            "entrypoint": "0x0800585c",
            "current_name": "update_status_and_call_function_0800585c",
            "code": "\nvoid updateStatusAndCallFunction_0800585c(void)\n\n{\n  if (DAT_20000ea9 == '\\x02') {\n    DAT_20000ea9 = '\\x03';\n    FUN_08005790();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800585c": "update_status_and_call_function_0800585c"
            },
            "calling": [
                "FUN_08001e98",
                "FUN_08003a74",
                "FUN_080024c4"
            ],
            "called": [
                "FUN_08005790"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800587c": {
            "entrypoint": "0x0800587c",
            "current_name": "update_status_0800587c",
            "code": "\nvoid updateStatus_0800587c(void)\n\n{\n  if (DAT_20000ea9 == '\\x03') {\n    DAT_20000ea9 = '\\x04';\n    DAT_20000eb8 = 0;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800587c": "update_status_0800587c"
            },
            "calling": [
                "FUN_08003a74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058a0": {
            "entrypoint": "0x080058a0",
            "current_name": "initialize_function_080058a0",
            "code": "\nvoid initializeFunction_080058a0(void)\n\n{\n  if (DAT_20000e38 == 0) {\n    DAT_20000ea9 = 0;\n  }\n  else {\n    FUN_08003618(*(int *)(DAT_20000e38 + 0x10) - DAT_20000e24);\n    DAT_20000e30 = 0;\n    FUN_08005324(0);\n    DAT_20000e2c = 210000;\n    DAT_20000e24 = 0;\n    DAT_20000ea9 = 2;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080058a0": "initialize_function_080058a0"
            },
            "calling": [
                "FUN_08003a74"
            ],
            "called": [
                "FUN_08003618",
                "FUN_08005324"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005900": {
            "entrypoint": "0x08005900",
            "current_name": "check_param_08005900",
            "code": "\nundefined4 check_param_08005900(byte input_byte)\n\n{\n  if (input_byte == 0x7e) {\n    DAT_20000eaa = DAT_20000eaa | 2;\n    return 1;\n  }\n  if (input_byte < 0x7f) {\n    if (input_byte == 0x3f) {\n      DAT_20000eaa = DAT_20000eaa | 1;\n      return 1;\n    }\n    if (input_byte < 0x40) {\n      if (input_byte == 0x18) {\n        FUN_080025e8();\n        return 1;\n      }\n      if (input_byte == 0x21) {\n        DAT_20000eaa = DAT_20000eaa | 8;\n        return 1;\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005900": "check_param_08005900",
                "param_1": "input_byte"
            },
            "calling": [
                "FUN_08008286"
            ],
            "called": [
                "FUN_080025e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800597c": {
            "entrypoint": "0x0800597c",
            "current_name": "send_software_interrupt_0800597c",
            "code": "\nvoid sendSoftwareInterrupt_0800597c(void)\n\n{\n  software_interrupt(0x3f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800597c": "send_software_interrupt_0800597c"
            },
            "calling": [
                "FUN_08005984"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005984": {
            "entrypoint": "0x08005984",
            "current_name": "initialize_data_08005984",
            "code": "\nundefined4 initializeData_08005984(undefined4 inputData)\n\n{\n  undefined4 returnValue;\n  \n  if (DAT_20000e44 == 0) {\n    returnValue = FUN_0800597c(1,inputData,0);\n  }\n  else {\n    returnValue = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08005984": "initialize_data_08005984",
                "param_1": "inputData",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_0800597c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080059b4": {
            "entrypoint": "0x080059b4",
            "current_name": "initialize_system_080059b4",
            "code": "\n\n\nundefined4 initializeSystem_080059b4(void)\n\n{\n  _DAT_40023c00 = _DAT_40023c00 | 0x700;\n  FUN_08006d72(16000);\n  FUN_08006ce0(3);\n  FUNC_08005a50();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080059b4": "initialize_system_080059b4"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_08005a50",
                "FUN_08006d72",
                "FUN_08006ce0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080059f8": {
            "entrypoint": "0x080059f8",
            "current_name": "initialize_data_080059f8",
            "code": "\n\n\nundefined4 initialize_data_080059f8(void)\n\n{\n  _DAT_40023820 = 0;\n  _DAT_40023824 = 0;\n  _DAT_40023810 = 0;\n  _DAT_40023814 = 0;\n  _DAT_40023818 = 0;\n  FUNC_08005a5c();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080059f8": "initialize_data_080059f8"
            },
            "calling": [],
            "called": [
                "FUN_08005a5c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a50": {
            "entrypoint": "0x08005a50",
            "current_name": "FUNC_08005a50",
            "code": "\nvoid FUNC_08005a50(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a50": "FUNC_08005a50"
            },
            "calling": [
                "FUN_080059b4"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005a5c": {
            "entrypoint": "0x08005a5c",
            "current_name": "FUNC_08005a5c",
            "code": "\nvoid FUNC_08005a5c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a5c": "FUNC_08005a5c"
            },
            "calling": [
                "FUN_080059f8"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005a68": {
            "entrypoint": "0x08005a68",
            "current_name": "increment_counter_08005a68",
            "code": "\nvoid incrementCounter_08005a68(void)\n\n{\n  DAT_20000e48 = DAT_20000e48 + 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a68": "increment_counter_08005a68"
            },
            "calling": [
                "FUN_08007756"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a84": {
            "entrypoint": "0x08005a84",
            "current_name": "get_data_value_08005a84",
            "code": "\nundefined4 get_data_value_08005a84(void)\n\n{\n  return DAT_20000e48;\n}\n\n",
            "renaming": {
                "FUN_08005a84": "get_data_value_08005a84"
            },
            "calling": [
                "FUN_08007756",
                "FUN_08000268",
                "FUN_0800618c",
                "FUN_08005a98",
                "FUN_08005cec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a98": {
            "entrypoint": "0x08005a98",
            "current_name": "check_threshold_08005a98",
            "code": "\nvoid checkThreshold_08005a98(int threshold)\n\n{\n  int randomValue1;\n  uint randomValue2;\n  \n  randomValue1 = FUN_08005a84();\n  do {\n    randomValue2 = FUN_08005a84();\n  } while (randomValue2 < (uint)(threshold + randomValue1));\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a98": "check_threshold_08005a98",
                "param_1": "threshold",
                "iVar1": "randomValue1",
                "uVar2": "randomValue2"
            },
            "calling": [
                "FUN_080002a0"
            ],
            "called": [
                "FUN_08005a84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005bdc": {
            "entrypoint": "0x08005bdc",
            "current_name": "write_to_memory_08005bdc",
            "code": "\nvoid writeToMemory_08005bdc(byte address,uint value)\n\n{\n  if ((char)address < '\\0') {\n    *(char *)((address & 0xf) + 0xe000ed14) = (char)((value & 0xff) << 4);\n  }\n  else {\n    *(char *)((char)address + -0x1fff1c00) = (char)((value & 0xff) << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005bdc": "write_to_memory_08005bdc",
                "param_1": "address",
                "param_2": "value"
            },
            "calling": [
                "FUN_08005c30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c30": {
            "entrypoint": "0x08005c30",
            "current_name": "check_and_set_params_08005c30",
            "code": "\n\n\nbool checkAndSetParams_08005c30(int inputValue)\n\n{\n  bool isValueValid;\n  \n  isValueValid = inputValue - 1U < 0x1000000;\n  if (isValueValid) {\n    _DAT_e000e014 = inputValue + -1;\n    FUN_08005bdc(0xffffffff,0xf);\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n  }\n  return !isValueValid;\n}\n\n",
            "renaming": {
                "FUN_08005c30": "check_and_set_params_08005c30",
                "param_1": "inputValue",
                "bVar1": "isValueValid"
            },
            "calling": [
                "FUN_0800618c"
            ],
            "called": [
                "FUN_08005bdc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cec": {
            "entrypoint": "0x08005cec",
            "current_name": "check_flags_08005cec",
            "code": "\n\n\nundefined4 checkFlags_08005cec(uint *flags)\n\n{\n  int tempVar1;\n  uint tempVar2;\n  \n  if ((*flags & 1) != 0) {\n    if (((_DAT_40023808 & 0xc) == 4) ||\n       (((_DAT_40023808 & 0xc) == 8 && ((_DAT_40023804 & 0x400000) == 0x400000)))) {\n      if (((_DAT_40023800 & 0x20000) != 0) && (flags[1] != 1)) {\n        return 1;\n      }\n    }\n    else {\n      _DAT_40023800 = (uint3)_DAT_40023800;\n      tempVar1 = FUN_08005a84();\n      while ((_DAT_40023800 & 0x20000) != 0) {\n        tempVar2 = FUN_08005a84();\n        if (tempVar1 + 5000U <= tempVar2) {\n          return 3;\n        }\n      }\n      _DAT_40023800 = CONCAT13(DAT_40023800_3,CONCAT12((char)flags[1],_DAT_40023800));\n      if (flags[1] == 1) {\n        tempVar1 = FUN_08005a84();\n        while ((_DAT_40023800 & 0x20000) == 0) {\n          tempVar2 = FUN_08005a84();\n          if (tempVar1 + 5000U <= tempVar2) {\n            return 3;\n          }\n        }\n      }\n      else {\n        tempVar1 = FUN_08005a84();\n        while ((_DAT_40023800 & 0x20000) != 0) {\n          tempVar2 = FUN_08005a84();\n          if (tempVar1 + 5000U <= tempVar2) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*flags & 2) != 0) {\n    if (((_DAT_40023808 & 0xc) == 0) ||\n       (((_DAT_40023808 & 0xc) == 8 && ((_DAT_40023804 & 0x400000) == 0)))) {\n      if (((_DAT_40023800 & 2) != 0) && (flags[3] != 1)) {\n        return 1;\n      }\n    }\n    else if (flags[3] == 0) {\n      _DAT_42470000 = 0;\n      tempVar1 = FUN_08005a84();\n      while ((_DAT_40023800 & 2) != 0) {\n        tempVar2 = FUN_08005a84();\n        if (tempVar1 + 100U <= tempVar2) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470000 = 1;\n      tempVar1 = FUN_08005a84();\n      while ((_DAT_40023800 & 2) == 0) {\n        tempVar2 = FUN_08005a84();\n        if (tempVar1 + 100U <= tempVar2) {\n          return 3;\n        }\n      }\n      _DAT_40023800 = flags[4] << 3 | _DAT_40023800 & 0xffffff07;\n    }\n  }\n  if ((*flags & 8) != 0) {\n    if (flags[5] == 0) {\n      _DAT_42470e80 = 0;\n      tempVar1 = FUN_08005a84();\n      while ((_DAT_40023874 & 2) != 0) {\n        tempVar2 = FUN_08005a84();\n        if (tempVar1 + 100U <= tempVar2) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470e80 = 1;\n      tempVar1 = FUN_08005a84();\n      while ((_DAT_40023874 & 2) == 0) {\n        tempVar2 = FUN_08005a84();\n        if (tempVar1 + 100U <= tempVar2) {\n          return 3;\n        }\n      }\n    }\n  }\n  if ((*flags & 4) != 0) {\n    _DAT_40023840 = _DAT_40023840 | 0x10000000;\n    _DAT_40007000 = _DAT_40007000 | 0x100;\n    tempVar1 = FUN_08005a84();\n    while ((_DAT_40007000 & 0x100) == 0) {\n      tempVar2 = FUN_08005a84();\n      if (tempVar1 + 100U <= tempVar2) {\n        return 3;\n      }\n    }\n    _DAT_40023870 = _DAT_40023870 & 0xffffff00;\n    tempVar1 = FUN_08005a84();\n    while ((_DAT_40023870 & 2) != 0) {\n      tempVar2 = FUN_08005a84();\n      if (tempVar1 + 5000U <= tempVar2) {\n        return 3;\n      }\n    }\n    _DAT_40023870 = CONCAT31(DAT_40023870_1,(char)flags[2]);\n    if (flags[2] == 1) {\n      tempVar1 = FUN_08005a84();\n      while ((_DAT_40023870 & 2) == 0) {\n        tempVar2 = FUN_08005a84();\n        if (tempVar1 + 5000U <= tempVar2) {\n          return 3;\n        }\n      }\n    }\n    else {\n      tempVar1 = FUN_08005a84();\n      while ((_DAT_40023870 & 2) != 0) {\n        tempVar2 = FUN_08005a84();\n        if (tempVar1 + 5000U <= tempVar2) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (flags[6] != 0) {\n    if ((_DAT_40023808 & 0xc) == 8) {\n      return 1;\n    }\n    if (flags[6] == 2) {\n      _DAT_42470060 = 0;\n      tempVar1 = FUN_08005a84();\n      while ((_DAT_40023800 & 0x2000000) != 0) {\n        tempVar2 = FUN_08005a84();\n        if (tempVar1 + 100U <= tempVar2) {\n          return 3;\n        }\n      }\n      _DAT_40023804 =\n           flags[0xb] << 0x18 |\n           flags[8] | flags[9] << 6 | ((flags[10] >> 1) - 1) * 0x10000 | flags[7] |\n           0x20000000;\n      _DAT_42470060 = 1;\n      tempVar1 = FUN_08005a84();\n      while ((_DAT_40023800 & 0x2000000) == 0) {\n        tempVar2 = FUN_08005a84();\n        if (tempVar1 + 100U <= tempVar2) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470060 = 0;\n      tempVar1 = FUN_08005a84();\n      while ((_DAT_40023800 & 0x2000000) != 0) {\n        tempVar2 = FUN_08005a84();\n        if (tempVar1 + 100U <= tempVar2) {\n          return 3;\n        }\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005cec": "check_flags_08005cec",
                "param_1": "flags",
                "iVar1": "tempVar1",
                "uVar2": "tempVar2"
            },
            "calling": [
                "FUN_08007436"
            ],
            "called": [
                "FUN_08005a84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800618c": {
            "entrypoint": "0x0800618c",
            "current_name": "check_and_update_parameters_0800618c",
            "code": "\n\n\nundefined4 check_and_update_parameters_0800618c(uint *param_array,uint param_length)\n\n{\n  int temp_variable;\n  uint loop_variable;\n  uint threshold;\n  undefined8 elapsed_time;\n  \n  if ((_DAT_40023c00 & 0xf) < param_length) {\n    _DAT_40023c00 = CONCAT31(DAT_40023c00_1,(char)param_length);\n    if (param_length != (param_length & 0xf)) {\n      return 1;\n    }\n    if ((*param_array & 1) != 0) {\n      if (param_array[1] == 1) {\n        if ((_DAT_40023800 & 0x20000) == 0) {\n          return 1;\n        }\n      }\n      else if ((param_array[1] != 2) && ((_DAT_40023800 & 2) == 0)) {\n        return 1;\n      }\n      _DAT_40023808 = param_array[1] | _DAT_40023808 & 0xfffffffc;\n      temp_variable = FUN_08005a84();\n      threshold = temp_variable + 5000;\n      if (param_array[1] == 1) {\n        while ((_DAT_40023808 & 0xc) != 4) {\n          loop_variable = FUN_08005a84();\n          if (threshold <= loop_variable) {\n            return 3;\n          }\n        }\n      }\n      else if (param_array[1] == 2) {\n        while ((_DAT_40023808 & 0xc) != 8) {\n          loop_variable = FUN_08005a84();\n          if (threshold <= loop_variable) {\n            return 3;\n          }\n        }\n      }\n      else {\n        while ((_DAT_40023808 & 0xc) != 0) {\n          loop_variable = FUN_08005a84();\n          if (threshold <= loop_variable) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  else {\n    if ((*param_array & 1) != 0) {\n      if (param_array[1] == 1) {\n        if ((_DAT_40023800 & 0x20000) == 0) {\n          return 1;\n        }\n      }\n      else if (param_array[1] == 2) {\n        if ((_DAT_40023800 & 0x2000000) == 0) {\n          return 1;\n        }\n      }\n      else if ((_DAT_40023800 & 2) == 0) {\n        return 1;\n      }\n      _DAT_40023808 = param_array[1] | _DAT_40023808 & 0xfffffffc;\n      temp_variable = FUN_08005a84();\n      threshold = temp_variable + 5000;\n      if (param_array[1] == 1) {\n        while ((_DAT_40023808 & 0xc) != 4) {\n          loop_variable = FUN_08005a84();\n          if (threshold <= loop_variable) {\n            return 3;\n          }\n        }\n      }\n      else if (param_array[1] == 2) {\n        while ((_DAT_40023808 & 0xc) != 8) {\n          loop_variable = FUN_08005a84();\n          if (threshold <= loop_variable) {\n            return 3;\n          }\n        }\n      }\n      else {\n        while ((_DAT_40023808 & 0xc) != 0) {\n          loop_variable = FUN_08005a84();\n          if (threshold <= loop_variable) {\n            return 3;\n          }\n        }\n      }\n    }\n    _DAT_40023c00 = CONCAT31(DAT_40023c00_1,(char)param_length);\n    if (param_length != (param_length & 0xf)) {\n      return 1;\n    }\n  }\n  if ((*param_array & 2) != 0) {\n    _DAT_40023808 = param_array[2] | _DAT_40023808 & 0xffffff0f;\n  }\n  if ((*param_array & 4) != 0) {\n    _DAT_40023808 = param_array[3] | _DAT_40023808 & 0xffffe3ff;\n  }\n  if ((*param_array & 8) != 0) {\n    _DAT_40023808 = param_array[4] << 3 | _DAT_40023808 & 0xffff1fff;\n  }\n  elapsed_time = FUN_08006628();\n  FUN_08005c30((uint)elapsed_time / 1000,(int)((ulonglong)elapsed_time >> 0x20),(uint)elapsed_time * 0x10624dd3);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800618c": "check_and_update_parameters_0800618c",
                "param_1": "param_array",
                "param_2": "param_length",
                "iVar1": "temp_variable",
                "uVar2": "loop_variable",
                "uVar3": "threshold",
                "uVar4": "elapsed_time"
            },
            "calling": [
                "FUN_08007436"
            ],
            "called": [
                "FUN_08005a84",
                "FUN_08006628",
                "FUN_08005c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800640c": {
            "entrypoint": "0x0800640c",
            "current_name": "configure_settings_0800640c",
            "code": "\n\n\nvoid configureSettings_0800640c(int option,uint value1,uint value2)\n\n{\n  undefined4 setting1;\n  undefined4 setting2;\n  undefined4 setting3;\n  undefined4 setting4;\n  undefined4 setting5;\n  \n  if (option == 0) {\n    _DAT_40023830 = _DAT_40023830 | 1;\n    setting1 = 0x100;\n    setting2 = 2;\n    setting4 = 3;\n    setting3 = 0;\n    setting5 = 0;\n    FUN_08006e88(0x40020000,&setting1);\n    _DAT_40023808 = value2 | value1 | _DAT_40023808 & 0xf89fffff;\n  }\n  else {\n    _DAT_40023830 = _DAT_40023830 | 4;\n    setting1 = 0x200;\n    setting2 = 2;\n    setting4 = 3;\n    setting3 = 0;\n    setting5 = 0;\n    FUN_08006e88(0x40020800,&setting1);\n    _DAT_40023808 = value1 | value2 << 3 | _DAT_40023808 & 0x7ffffff;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800640c": "configure_settings_0800640c",
                "param_1": "option",
                "param_2": "value1",
                "param_3": "value2",
                "local_1c": "setting1",
                "local_18": "setting2",
                "local_14": "setting3",
                "local_10": "setting4",
                "local_c": "setting5"
            },
            "calling": [],
            "called": [
                "FUN_08006e88"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080064ec": {
            "entrypoint": "0x080064ec",
            "current_name": "calculate_clock_frequency_080064ec",
            "code": "\n\n\nuint calculateClockFrequency_080064ec(void)\n\n{\n  uint clockConfig;\n  uint frequency;\n  \n  clockConfig = _DAT_40023808 & 0xc;\n  if (clockConfig == 8) {\n    if ((_DAT_40023804 & 0x400000) == 0) {\n      frequency = ((_DAT_40023804 & 0x7fc0) >> 6) * (16000000 / (_DAT_40023804 & 0x3f));\n    }\n    else {\n      frequency = ((_DAT_40023804 & 0x7fc0) >> 6) * (8000000 / (_DAT_40023804 & 0x3f));\n    }\n    return frequency / ((((_DAT_40023804 & 0x30000) >> 0x10) + 1) * 2);\n  }\n  if (clockConfig < 9) {\n    if (clockConfig == 0) {\n      return 16000000;\n    }\n    if (clockConfig == 4) {\n      return 8000000;\n    }\n  }\n  return 16000000;\n}\n\n",
            "renaming": {
                "FUN_080064ec": "calculate_clock_frequency_080064ec",
                "uVar1": "clockConfig",
                "local_c": "frequency"
            },
            "calling": [
                "FUN_08006628"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006628": {
            "entrypoint": "0x08006628",
            "current_name": "extract_and_shift_08006628",
            "code": "\n\n\nuint extract_and_shift_08006628(void)\n\n{\n  uint result;\n  \n  result = FUN_080064ec();\n  DAT_20000000 = result >> (&DAT_0800bcac)[(_DAT_40023808 & 0xf0) >> 4];\n  return result >> (&DAT_0800bcac)[(_DAT_40023808 & 0xf0) >> 4];\n}\n\n",
            "renaming": {
                "FUN_08006628": "extract_and_shift_08006628",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08006680",
                "FUN_080066cc",
                "FUN_0800618c"
            ],
            "called": [
                "FUN_080064ec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006680": {
            "entrypoint": "0x08006680",
            "current_name": "shift_result_based_on_condition_08006680",
            "code": "\n\n\nuint shift_result_based_on_condition_08006680(void)\n\n{\n  uint result;\n  \n  result = FUN_08006628();\n  return result >> (&DAT_0800bcac)[(_DAT_40023808 & 0x1c00) >> 10];\n}\n\n",
            "renaming": {
                "FUN_08006680": "shift_result_based_on_condition_08006680",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08007f54"
            ],
            "called": [
                "FUN_08006628"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080066cc": {
            "entrypoint": "0x080066cc",
            "current_name": "calculate_shifted_value_080066cc",
            "code": "\n\n\nuint calculateShiftedValue_080066cc(void)\n\n{\n  uint shiftedValue;\n  \n  shiftedValue = FUN_08006628();\n  return shiftedValue >> (&DAT_0800bcac)[(_DAT_40023808 & 0xe000) >> 0xd];\n}\n\n",
            "renaming": {
                "FUN_080066cc": "calculate_shifted_value_080066cc",
                "uVar1": "shiftedValue"
            },
            "calling": [
                "FUN_08007f54"
            ],
            "called": [
                "FUN_08006628"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006950": {
            "entrypoint": "0x08006950",
            "current_name": "set_memory_configuration_08006950",
            "code": "\n\n\nvoid setMemoryConfiguration_08006950(uint config)\n\n{\n  _DAT_e000ed0c = _DAT_e000ed0c & 0xf8ff | (config & 7) << 8 | 0x5fa0000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006950": "set_memory_configuration_08006950",
                "param_1": "config"
            },
            "calling": [
                "FUN_08006ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006998": {
            "entrypoint": "0x08006998",
            "current_name": "get_bits_from_data_register_08006998",
            "code": "\n\n\nuint getBitsFromDataRegister_08006998(void)\n\n{\n  return _DAT_e000ed0c >> 8 & 7;\n}\n\n",
            "renaming": {
                "FUN_08006998": "get_bits_from_data_register_08006998"
            },
            "calling": [
                "FUN_08006d8a",
                "FUN_08006cf6"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080069b4": {
            "entrypoint": "0x080069b4",
            "current_name": "set_bit_080069b4",
            "code": "\nvoid setBit_080069b4(byte byteToSet)\n\n{\n  *(int *)(((uint)(int)(char)byteToSet >> 5) * 4 + -0x1fff1f00) = 1 << (byteToSet & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080069b4": "set_bit_080069b4",
                "param_1": "byteToSet"
            },
            "calling": [
                "FUN_08006d2e"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080069e4": {
            "entrypoint": "0x080069e4",
            "current_name": "set_bit_in_array_080069e4",
            "code": "\nvoid setBitInArray_080069e4(byte byteValue)\n\n{\n  *(int *)((((uint)(int)(char)byteValue >> 5) + 0x20) * 4 + -0x1fff1f00) = 1 << (byteValue & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080069e4": "set_bit_in_array_080069e4",
                "param_1": "byteValue"
            },
            "calling": [
                "FUN_08006d4a"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006a18": {
            "entrypoint": "0x08006a18",
            "current_name": "is_bit_set_08006a18",
            "code": "\nbool isBitSet_08006a18(byte byteVal)\n\n{\n  return (*(uint *)((((uint)(int)(char)byteVal >> 5) + 0x40) * 4 + -0x1fff1f00) &\n         1 << (byteVal & 0x1f)) != 0;\n}\n\n",
            "renaming": {
                "FUN_08006a18": "is_bit_set_08006a18",
                "param_1": "byteVal"
            },
            "calling": [
                "FUN_08006de0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006a58": {
            "entrypoint": "0x08006a58",
            "current_name": "set_bit_08006a58",
            "code": "\nvoid setBit_08006a58(byte byteValue)\n\n{\n  *(int *)((((uint)(int)(char)byteValue >> 5) + 0x40) * 4 + -0x1fff1f00) = 1 << (byteValue & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006a58": "set_bit_08006a58",
                "param_1": "byteValue"
            },
            "calling": [
                "FUN_08006dc4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006a8c": {
            "entrypoint": "0x08006a8c",
            "current_name": "set_bit_at_index_08006a8c",
            "code": "\nvoid setBitAtIndex_08006a8c(byte inputByte)\n\n{\n  *(int *)((((uint)(int)(char)inputByte >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (inputByte & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006a8c": "set_bit_at_index_08006a8c",
                "param_1": "inputByte"
            },
            "calling": [
                "FUN_08006dfe"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ac0": {
            "entrypoint": "0x08006ac0",
            "current_name": "check_bit_set_08006ac0",
            "code": "\nbool checkBitSet_08006ac0(byte byteValue)\n\n{\n  return (*(uint *)((((uint)(int)(char)byteValue >> 5) + 0x80) * 4 + -0x1fff1f00) &\n         1 << (byteValue & 0x1f)) != 0;\n}\n\n",
            "renaming": {
                "FUN_08006ac0": "check_bit_set_08006ac0",
                "param_1": "byteValue"
            },
            "calling": [
                "FUN_08006e1a"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b00": {
            "entrypoint": "0x08006b00",
            "current_name": "write_value_to_memory_08006b00",
            "code": "\nvoid writeValueToMemory_08006b00(byte address,uint value)\n\n{\n  if ((char)address < '\\0') {\n    *(char *)((address & 0xf) + 0xe000ed14) = (char)((value & 0xff) << 4);\n  }\n  else {\n    *(char *)((char)address + -0x1fff1c00) = (char)((value & 0xff) << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006b00": "write_value_to_memory_08006b00",
                "param_1": "address",
                "param_2": "value"
            },
            "calling": [
                "FUN_08006c9c",
                "FUN_08006cf6"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b54": {
            "entrypoint": "0x08006b54",
            "current_name": "extract_nibble_08006b54",
            "code": "\nbyte extractNibble_08006b54(byte inputByte)\n\n{\n  byte outputNibble;\n  \n  if ((char)inputByte < '\\0') {\n    outputNibble = *(byte *)((inputByte & 0xf) + 0xe000ed14);\n  }\n  else {\n    outputNibble = *(byte *)((char)inputByte + -0x1fff1c00);\n  }\n  return outputNibble >> 4;\n}\n\n",
            "renaming": {
                "FUN_08006b54": "extract_nibble_08006b54",
                "param_1": "inputByte",
                "bVar1": "outputNibble"
            },
            "calling": [
                "FUN_08006d98"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ba0": {
            "entrypoint": "0x08006ba0",
            "current_name": "apply_bit_mask_08006ba0",
            "code": "\nuint applyBitMask_08006ba0(uint bitOffset,uint sourceValue,uint targetValue)\n\n{\n  uint bitCount;\n  \n  bitOffset = bitOffset & 7;\n  bitCount = 7 - bitOffset;\n  if (3 < bitCount) {\n    bitCount = 4;\n  }\n  if (bitOffset + 4 < 7) {\n    bitOffset = 0;\n  }\n  else {\n    bitOffset = bitOffset - 3;\n  }\n  return targetValue & (1 << (bitOffset & 0xff)) - 1U |\n         ((1 << (bitCount & 0xff)) - 1U & sourceValue) << (bitOffset & 0xff);\n}\n\n",
            "renaming": {
                "FUN_08006ba0": "apply_bit_mask_08006ba0",
                "param_1": "bitOffset",
                "param_2": "sourceValue",
                "param_3": "targetValue",
                "uVar1": "bitCount"
            },
            "calling": [
                "FUN_08006cf6"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c04": {
            "entrypoint": "0x08006c04",
            "current_name": "extract_bits_08006c04",
            "code": "\nvoid extractBits_08006c04(uint inputData,uint bitPosition,uint *outputData1,uint *outputData2)\n\n{\n  uint shiftAmount;\n  \n  bitPosition = bitPosition & 7;\n  shiftAmount = 7 - bitPosition;\n  if (3 < shiftAmount) {\n    shiftAmount = 4;\n  }\n  if (bitPosition + 4 < 7) {\n    bitPosition = 0;\n  }\n  else {\n    bitPosition = bitPosition - 3;\n  }\n  *outputData1 = (1 << (shiftAmount & 0xff)) - 1U & inputData >> (bitPosition & 0xff);\n  *outputData2 = (1 << (bitPosition & 0xff)) - 1U & inputData;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006c04": "extract_bits_08006c04",
                "param_1": "inputData",
                "param_2": "bitPosition",
                "param_3": "outputData1",
                "param_4": "outputData2",
                "uVar1": "shiftAmount"
            },
            "calling": [
                "FUN_08006d98"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c70": {
            "entrypoint": "0x08006c70",
            "current_name": "infinite_loop_08006c70",
            "code": "\nvoid infiniteLoop_08006c70(void)\n\n{\n  syncBarrier(0xf);\n  syncBarrier(0xf);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08006c70": "infinite_loop_08006c70",
                "DataSynchronizationBarrier": "syncBarrier"
            },
            "calling": [
                "FUN_08006d66"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c9c": {
            "entrypoint": "0x08006c9c",
            "current_name": "is_param_valid_08006c9c",
            "code": "\n\n\nbool isParamValid_08006c9c(int inputValue)\n\n{\n  bool isValid;\n  \n  isValid = inputValue - 1U < 0x1000000;\n  if (isValid) {\n    _DAT_e000e014 = inputValue + -1;\n    FUN_08006b00(0xffffffff,0xf);\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n  }\n  return !isValid;\n}\n\n",
            "renaming": {
                "FUN_08006c9c": "is_param_valid_08006c9c",
                "param_1": "inputValue",
                "bVar1": "isValid"
            },
            "calling": [
                "FUN_08006d72"
            ],
            "called": [
                "FUN_08006b00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ce0": {
            "entrypoint": "0x08006ce0",
            "current_name": "initialize_data_08006ce0",
            "code": "\nvoid initialize_data_08006ce0(undefined4 data)\n\n{\n  FUN_08006950(data);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006ce0": "initialize_data_08006ce0",
                "param_1": "data"
            },
            "calling": [
                "FUN_080059b4"
            ],
            "called": [
                "FUN_08006950"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006cf6": {
            "entrypoint": "0x08006cf6",
            "current_name": "process_data_08006cf6",
            "code": "\nvoid processData_08006cf6(char input,undefined4 paramA,undefined4 paramB)\n\n{\n  undefined4 result;\n  \n  result = FUN_08006998();\n  result = FUN_08006ba0(result,paramA,paramB);\n  FUN_08006b00((int)input,result);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006cf6": "process_data_08006cf6",
                "param_1": "input",
                "param_2": "paramA",
                "param_3": "paramB",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08007a70"
            ],
            "called": [
                "FUN_08006998",
                "FUN_08006b00",
                "FUN_08006ba0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d2e": {
            "entrypoint": "0x08006d2e",
            "current_name": "initialize_function_08006d2e",
            "code": "\nvoid initializeFunction_08006d2e(char inputParam)\n\n{\n  FUN_080069b4((int)inputParam);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d2e": "initialize_function_08006d2e",
                "param_1": "inputParam"
            },
            "calling": [],
            "called": [
                "FUN_080069b4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d4a": {
            "entrypoint": "0x08006d4a",
            "current_name": "initialize_data_08006d4a",
            "code": "\nvoid initializeData_08006d4a(char character)\n\n{\n  FUN_080069e4((int)character);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d4a": "initialize_data_08006d4a",
                "param_1": "character"
            },
            "calling": [],
            "called": [
                "FUN_080069e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d66": {
            "entrypoint": "0x08006d66",
            "current_name": "initialize_system_08006d66",
            "code": "\nvoid initialize_system_08006d66(void)\n\n{\n  FUN_08006c70();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d66": "initialize_system_08006d66"
            },
            "calling": [],
            "called": [
                "FUN_08006c70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d72": {
            "entrypoint": "0x08006d72",
            "current_name": "execute_function_08006d72",
            "code": "\nundefined4 executeFunction_08006d72(undefined4 input)\n\n{\n  undefined4 result;\n  \n  result = FUN_08006c9c(input);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08006d72": "execute_function_08006d72",
                "param_1": "input",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080059b4"
            ],
            "called": [
                "FUN_08006c9c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d8a": {
            "entrypoint": "0x08006d8a",
            "current_name": "execute_main_process_08006d8a",
            "code": "\nundefined4 executeMainProcess_08006d8a(void)\n\n{\n  undefined4 returnValue;\n  \n  returnValue = FUN_08006998();\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08006d8a": "execute_main_process_08006d8a",
                "uVar1": "returnValue"
            },
            "calling": [],
            "called": [
                "FUN_08006998"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d98": {
            "entrypoint": "0x08006d98",
            "current_name": "FUNC_08006d98",
            "code": "\nvoid FUNC_08006d98(char param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  undefined4 uVar1;\n  \n  uVar1 = FUN_08006b54((int)param_1);\n  FUN_08006c04(uVar1,param_2,param_3,param_4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d98": "FUNC_08006d98"
            },
            "calling": [],
            "called": [
                "FUN_08006b54",
                "FUN_08006c04"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08006dc4": {
            "entrypoint": "0x08006dc4",
            "current_name": "execute_function_08006dc4",
            "code": "\nvoid executeFunction_08006dc4(char input)\n\n{\n  FUN_08006a58((int)input);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006dc4": "execute_function_08006dc4",
                "param_1": "input"
            },
            "calling": [],
            "called": [
                "FUN_08006a58"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006de0": {
            "entrypoint": "0x08006de0",
            "current_name": "process_character_08006de0",
            "code": "\nundefined4 processCharacter_08006de0(char character)\n\n{\n  undefined4 result;\n  \n  result = FUN_08006a18((int)character);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08006de0": "process_character_08006de0",
                "param_1": "character",
                "uVar1": "result"
            },
            "calling": [],
            "called": [
                "FUN_08006a18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006dfe": {
            "entrypoint": "0x08006dfe",
            "current_name": "call_other_function_08006dfe",
            "code": "\nvoid callOtherFunction_08006dfe(char param)\n\n{\n  FUN_08006a8c((int)param);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006dfe": "call_other_function_08006dfe",
                "param_1": "param"
            },
            "calling": [],
            "called": [
                "FUN_08006a8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e1a": {
            "entrypoint": "0x08006e1a",
            "current_name": "convert_char_to_unsigned_int_08006e1a",
            "code": "\nundefined4 convertCharToUnsignedInt_08006e1a(char inputChar)\n\n{\n  undefined4 convertedValue;\n  \n  convertedValue = FUN_08006ac0((int)inputChar);\n  return convertedValue;\n}\n\n",
            "renaming": {
                "FUN_08006e1a": "convert_char_to_unsigned_int_08006e1a",
                "param_1": "inputChar",
                "uVar1": "convertedValue"
            },
            "calling": [],
            "called": [
                "FUN_08006ac0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e88": {
            "entrypoint": "0x08006e88",
            "current_name": "update_data_08006e88",
            "code": "\n\n\nvoid updateData_08006e88(uint *dataArray,uint *configArray)\n\n{\n  uint mask;\n  uint bit;\n  int index;\n  uint counter;\n  \n  for (counter = 0; counter < 0x10; counter = counter + 1) {\n    mask = 1 << (counter & 0xff);\n    bit = *configArray & mask;\n    if (bit == mask) {\n      if ((configArray[1] == 2) || (configArray[1] == 0x12)) {\n        mask = configArray[4];\n        dataArray[(counter >> 3) + 8] = dataArray[(counter >> 3) + 8] & ~(0xf << ((counter & 7) << 2));\n        dataArray[(counter >> 3) + 8] = dataArray[(counter >> 3) + 8] | mask << ((counter & 7) << 2);\n      }\n      *dataArray = *dataArray & ~(3 << ((counter & 0x7f) << 1));\n      *dataArray = *dataArray | (configArray[1] & 3) << ((counter & 0x7f) << 1);\n      if ((((configArray[1] == 1) || (configArray[1] == 2)) || (configArray[1] == 0x11)) || (configArray[1] == 0x12)\n         ) {\n        dataArray[2] = dataArray[2] & ~(3 << ((counter & 0x7f) << 1));\n        dataArray[2] = dataArray[2] | configArray[3] << ((counter & 0x7f) << 1);\n        dataArray[1] = dataArray[1] & ~(1 << (counter & 0xff));\n        dataArray[1] = dataArray[1] | (configArray[1] >> 4 & 1) << (counter & 0xff);\n      }\n      dataArray[3] = dataArray[3] & ~(3 << ((counter & 0x7f) << 1));\n      dataArray[3] = dataArray[3] | configArray[2] << ((counter & 0x7f) << 1);\n      if ((configArray[1] & 0x10000000) != 0) {\n        _DAT_40023844 = _DAT_40023844 | 0x4000;\n        *(uint *)(((counter >> 2) + 2) * 4 + 0x40013800) =\n             ~(0xf << ((counter & 3) << 2)) & *(uint *)(((counter >> 2) + 2) * 4 + 0x40013800);\n        if (dataArray == (uint *)0x40020000) {\n          index = 0;\n        }\n        else if (dataArray == (uint *)0x40020400) {\n          index = 1;\n        }\n        else if (dataArray == (uint *)0x40020800) {\n          index = 2;\n        }\n        else if (dataArray == (uint *)0x40020c00) {\n          index = 3;\n        }\n        else if (dataArray == (uint *)0x40021000) {\n          index = 4;\n        }\n        else if (dataArray == (uint *)0x40021400) {\n          index = 5;\n        }\n        else if (dataArray == (uint *)0x40021800) {\n          index = 6;\n        }\n        else if (dataArray == (uint *)0x40021c00) {\n          index = 7;\n        }\n        else if (dataArray == (uint *)0x40022000) {\n          index = 8;\n        }\n        else if (dataArray == (uint *)0x40022400) {\n          index = 9;\n        }\n        else {\n          index = 10;\n        }\n        *(uint *)(((counter >> 2) + 2) * 4 + 0x40013800) =\n             index << ((counter & 3) << 2) | *(uint *)(((counter >> 2) + 2) * 4 + 0x40013800);\n        _DAT_40013c00 = ~bit & _DAT_40013c00;\n        _DAT_40013c04 = ~bit & _DAT_40013c04;\n        if ((configArray[1] & 0x10000) != 0) {\n          _DAT_40013c00 = bit | _DAT_40013c00;\n        }\n        if ((configArray[1] & 0x20000) != 0) {\n          _DAT_40013c04 = bit | _DAT_40013c04;\n        }\n        _DAT_40013c08 = ~bit & _DAT_40013c08;\n        _DAT_40013c0c = ~bit & _DAT_40013c0c;\n        if ((configArray[1] & 0x100000) != 0) {\n          _DAT_40013c08 = bit | _DAT_40013c08;\n        }\n        if ((configArray[1] & 0x200000) != 0) {\n          _DAT_40013c0c = bit | _DAT_40013c0c;\n        }\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006e88": "update_data_08006e88",
                "param_1": "dataArray",
                "param_2": "configArray",
                "uVar1": "mask",
                "uVar2": "bit",
                "iVar3": "index",
                "local_c": "counter"
            },
            "calling": [
                "FUN_0800640c",
                "FUN_0800778c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800733e": {
            "entrypoint": "0x0800733e",
            "current_name": "set_destination_0800733e",
            "code": "\nvoid setDestination_0800733e(int address,undefined2 value,char flag)\n\n{\n  if (flag == '\\0') {\n    *(undefined2 *)(address + 0x1a) = value;\n  }\n  else {\n    *(undefined2 *)(address + 0x18) = value;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800733e": "set_destination_0800733e",
                "param_1": "address",
                "param_2": "value",
                "param_3": "flag"
            },
            "calling": [
                "FUN_0800778c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800738e": {
            "entrypoint": "0x0800738e",
            "current_name": "update_and_call_function_0800738e",
            "code": "\n\n\nvoid updateAndCallFunction_0800738e(ushort input)\n\n{\n  if ((input & _DAT_40013c14) != 0) {\n    _DAT_40013c14 = (uint)input;\n    FUNC_080073c0(input);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800738e": "update_and_call_function_0800738e",
                "param_1": "input"
            },
            "calling": [],
            "called": [
                "FUN_080073c0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073c0": {
            "entrypoint": "0x080073c0",
            "current_name": "FUNC_080073c0",
            "code": "\nvoid FUNC_080073c0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080073c0": "FUNC_080073c0"
            },
            "calling": [
                "FUN_0800738e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080073d4": {
            "entrypoint": "0x080073d4",
            "current_name": "update_memory_080073d4",
            "code": "\nvoid updateMemory_080073d4(uint value)\n\n{\n  *(Short *)((intValue >> 4) * 0x400 + 0x4002001a) = (Short)(1 << (value & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_080073d4": "update_memory_080073d4",
                "param_1": "value",
                "short": "Short",
                "(int)param_1": "intValue"
            },
            "calling": [
                "FUN_08007520"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007402": {
            "entrypoint": "0x08007402",
            "current_name": "set_bit_in_memory_08007402",
            "code": "\nvoid setBitInMemory_08007402(uint input)\n\n{\n  *(short *)(((int)input >> 4) * 0x400 + 0x40020018) = (short)(1 << (input & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007402": "set_bit_in_memory_08007402",
                "param_1": "input"
            },
            "calling": [
                "FUN_080074c8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007430": {
            "entrypoint": "0x08007430",
            "current_name": "run_infinite_loop_08007430",
            "code": "\nvoid runInfiniteLoop_08007430(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08007430": "run_infinite_loop_08007430"
            },
            "calling": [
                "FUN_08007436"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007436": {
            "entrypoint": "0x08007436",
            "current_name": "initialize_hardware_08007436",
            "code": "\n\n\nvoid initializeHardware_08007436(void)\n\n{\n  int iVar1;\n  undefined4 configValue1;\n  undefined4 configValue2;\n  undefined4 configValue3;\n  undefined4 configValue4;\n  undefined4 configValue5;\n  undefined4 configValue6;\n  undefined4 configValue7;\n  undefined4 configValue8;\n  undefined4 configValue9;\n  undefined4 configValue10;\n  undefined4 configValue11;\n  undefined4 configValue12;\n  undefined4 configValue13;\n  \n  _DAT_40023840 = _DAT_40023840 | 0x10000000;\n  _DAT_40007000 = _DAT_40007000 | 0xc000;\n  configValue1 = 1;\n  configValue2 = 1;\n  configValue3 = 2;\n  configValue4 = 0x400000;\n  configValue5 = 8;\n  configValue6 = 0x150;\n  configValue7 = 2;\n  configValue8 = 7;\n  iVar1 = FUN_08005cec(&configValue1);\n  if (iVar1 != 0) {\n    FUN_08007430();\n  }\n  configValue9 = 0xf;\n  configValue10 = 2;\n  configValue11 = 0;\n  configValue12 = 0x1400;\n  configValue13 = 0x1000;\n  iVar1 = FUN_0800618c(&configValue9,5);\n  if (iVar1 != 0) {\n    FUN_08007430();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007436": "initialize_hardware_08007436",
                "local_4c": "configValue1",
                "local_48": "configValue2",
                "local_34": "configValue3",
                "local_30": "configValue4",
                "local_2c": "configValue5",
                "local_28": "configValue6",
                "local_24": "configValue7",
                "local_20": "configValue8",
                "local_1c": "configValue9",
                "local_18": "configValue10",
                "local_14": "configValue11",
                "local_10": "configValue12",
                "local_c": "configValue13"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_0800618c",
                "FUN_08007430",
                "FUN_08005cec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080074c8": {
            "entrypoint": "0x080074c8",
            "current_name": "handle_flags_080074c8",
            "code": "\nvoid handleFlags_080074c8(uint flags)\n\n{\n  if ((flags & 1) != 0) {\n    FUN_08007402(0x3e);\n  }\n  if ((DAT_20000e4c != 0) && ((flags & 0x1e) != 0)) {\n    FUN_0800195c();\n  }\n  if ((DAT_20000e50 != 0) && ((flags & 0x80) != 0)) {\n    FUN_08003a18(flags);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080074c8": "handle_flags_080074c8",
                "param_1": "flags"
            },
            "calling": [
                "FUN_08007930"
            ],
            "called": [
                "FUN_0800195c",
                "FUN_08007402",
                "FUN_08003a18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007520": {
            "entrypoint": "0x08007520",
            "current_name": "check_and_call_function_08007520",
            "code": "\nvoid checkAndCallFunction_08007520(uint inputValue)\n\n{\n  if ((inputValue & 1) != 0) {\n    FUN_080073d4(0x3e);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007520": "check_and_call_function_08007520",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08007930"
            ],
            "called": [
                "FUN_080073d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007540": {
            "entrypoint": "0x08007540",
            "current_name": "initialize_system_08007540",
            "code": "\nundefined4 initialize_system_08007540(void)\n\n{\n  FUN_080059b4();\n  FUN_08007436();\n  FUN_0800778c();\n  FUN_08007e08();\n  FUN_080079c0();\n  FUN_08008190();\n  FUN_08005984(0);\n  FUN_08001ddc();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007540": "initialize_system_08007540"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_080059b4",
                "FUN_08007e08",
                "FUN_0800778c",
                "FUN_08005984",
                "FUN_08007436",
                "FUN_08008190",
                "FUN_080079c0",
                "FUN_08001ddc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800756c": {
            "entrypoint": "0x0800756c",
            "current_name": "initialize_system_0800756c",
            "code": "\n\n\nvoid initializeSystem_0800756c(void)\n\n{\n  _DAT_40023808 = 0;\n  _DAT_40023804 = 0x24003010;\n  _DAT_40023800 = _DAT_40023800 & 0xfef2ffff | 1;\n  _DAT_4002380c = 0;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800756c": "initialize_system_0800756c"
            },
            "calling": [
                "entry"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080076c8": {
            "entrypoint": "0x080076c8",
            "current_name": "update_bit_080076c8",
            "code": "\nvoid updateBit_080076c8(uint inputValue)\n\n{\n  *(uint *)(((int)inputValue >> 4) * 0x400 + 0x40020014) =\n       *(uint *)(((int)inputValue >> 4) * 0x400 + 0x40020014) ^ 1 << (inputValue & 0xf);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080076c8": "update_bit_080076c8",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08007756"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007756": {
            "entrypoint": "0x08007756",
            "current_name": "check_and_execute_actions_08007756",
            "code": "\nvoid checkAndExecuteActions_08007756(void)\n\n{\n  uint result;\n  \n  result = FUN_08005a84();\n  if ((result & 0x1ff) == 0) {\n    FUN_080076c8(0x3c);\n  }\n  if ((result & 0xf) == 0) {\n    FUN_08007930();\n  }\n  FUN_08005a68();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007756": "check_and_execute_actions_08007756",
                "uVar1": "result"
            },
            "calling": [],
            "called": [
                "FUN_08005a68",
                "FUN_08007930",
                "FUN_08005a84",
                "FUN_080076c8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800778c": {
            "entrypoint": "0x0800778c",
            "current_name": "set_device_permissions_0800778c",
            "code": "\n\n\nvoid set_device_permissions_0800778c(void)\n\n{\n  int offset;\n  int permission_mask;\n  undefined4 value_1;\n  undefined4 value_2;\n  undefined4 value_3;\n  undefined4 value_4;\n  uint *device_info;\n  uint index;\n  \n  for (index = 0; index < 0x11; index = index + 1) {\n    offset = index * 0x18;\n    device_info = (uint *)(&DAT_0800bcbc + offset);\n    _DAT_40023830 = _DAT_40023830 | 1 << (*device_info >> 4 & 0xff);\n    permission_mask = 1 << (*device_info & 0xf);\n    value_1 = *(undefined4 *)(&DAT_0800bcc0 + offset);\n    value_2 = *(undefined4 *)(&DAT_0800bcc4 + offset);\n    value_3 = *(undefined4 *)(&DAT_0800bcc8 + offset);\n    value_4 = *(undefined4 *)(&DAT_0800bccc + offset);\n    FUN_08006e88(((*device_info >> 4) + 0x100080) * 0x400,&permission_mask);\n    if (-1 < (int)device_info[5]) {\n      FUN_0800733e(((*device_info >> 4) + 0x100080) * 0x400,1 << (*device_info & 0xf) & 0xffff,\n                   device_info[5] & 0xff);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800778c": "set_device_permissions_0800778c",
                "iVar1": "offset",
                "local_24": "permission_mask",
                "local_20": "value_1",
                "local_1c": "value_2",
                "local_18": "value_3",
                "local_14": "value_4",
                "local_10": "device_info",
                "local_c": "index"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_08006e88",
                "FUN_0800733e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007854": {
            "entrypoint": "0x08007854",
            "current_name": "check_bit_value_08007854",
            "code": "\nunsigned_integer check_bit_value_08007854(unsigned_integer input_value)\n\n{\n  return *(unsigned_integer *)(((int)input_value >> 4) * 0x400 + 0x40020010) >> (input_value bitwise_and 0xf) bitwise_and 1;\n}\n\n",
            "renaming": {
                "FUN_08007854": "check_bit_value_08007854",
                "param_1": "input_value",
                "uint": "unsigned_integer",
                "&": "bitwise_and"
            },
            "calling": [
                "FUN_08007884"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007884": {
            "entrypoint": "0x08007884",
            "current_name": "combine_bits_08007884",
            "code": "\nuint combineBits_08007884(void)\n\n{\n  int bit0;\n  int bit1;\n  int bit2;\n  int bit3;\n  int bit4;\n  uint bit5;\n  \n  bit0 = FUN_08007854(0x36);\n  bit1 = FUN_08007854(0x37);\n  bit2 = FUN_08007854(0x38);\n  bit3 = FUN_08007854(0x39);\n  bit4 = FUN_08007854(0xf);\n  bit5 = FUN_08007854(0);\n  return bit5 | bit0 << 4 | bit1 << 3 | bit2 << 2 | bit3 << 1 | bit4 << 7;\n}\n\n",
            "renaming": {
                "FUN_08007884": "combine_bits_08007884",
                "iVar1": "bit0",
                "iVar2": "bit1",
                "iVar3": "bit2",
                "iVar4": "bit3",
                "iVar5": "bit4",
                "uVar6": "bit5"
            },
            "calling": [
                "FUN_08007930"
            ],
            "called": [
                "FUN_08007854"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080078f4": {
            "entrypoint": "0x080078f4",
            "current_name": "combine_values_080078f4",
            "code": "\nuint combineValues_080078f4(void)\n\n{\n  int index;\n  uint result;\n  \n  result = 0;\n  for (index = 0; index < 4; index = index + 1) {\n    result = *(uint *)(&DAT_20000e54 + index * 4) | result;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080078f4": "combine_values_080078f4",
                "local_10": "index",
                "local_c": "result"
            },
            "calling": [
                "FUN_08007930",
                "FUN_08001994"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007930": {
            "entrypoint": "0x08007930",
            "current_name": "update_data_08007930",
            "code": "\nvoid updateData_08007930(void)\n\n{\n  int index;\n  uint previousValue;\n  undefined4 newValue;\n  uint currentValue;\n  uint unprocessedChanges;\n  \n  index = DAT_20000e68;\n  previousValue = DAT_20000e64;\n  if (DAT_20000e6c != 0) {\n    newValue = FUN_08007884();\n    *(undefined4 *)(&DAT_20000e54 + index * 4) = newValue;\n    if (DAT_20000e68 == 3) {\n      DAT_20000e68 = 0;\n    }\n    else {\n      DAT_20000e68 = DAT_20000e68 + 1;\n    }\n    currentValue = FUN_080078f4();\n    previousValue = DAT_20000e64;\n    if (currentValue != DAT_20000e64) {\n      unprocessedChanges = ~currentValue & DAT_20000e64;\n      if ((~DAT_20000e64 & currentValue) != 0) {\n        FUN_080074c8(~DAT_20000e64 & currentValue);\n      }\n      previousValue = currentValue;\n      if (unprocessedChanges != 0) {\n        FUN_08007520(unprocessedChanges);\n      }\n    }\n  }\n  DAT_20000e64 = previousValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007930": "update_data_08007930",
                "iVar1": "index",
                "uVar2": "previousValue",
                "uVar3": "newValue",
                "uVar4": "currentValue",
                "uVar5": "unprocessedChanges"
            },
            "calling": [
                "FUN_08007756"
            ],
            "called": [
                "FUN_080074c8",
                "FUN_080078f4",
                "FUN_08007884",
                "FUN_08007520"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080079c0": {
            "entrypoint": "0x080079c0",
            "current_name": "initialize_data_080079c0",
            "code": "\nvoid initializeData_080079c0(void)\n\n{\n  FUN_0800b430(&DAT_20000e54,0,0x18);\n  DAT_20000e6c = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080079c0": "initialize_data_080079c0"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_0800b430"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080079e0": {
            "entrypoint": "0x080079e0",
            "current_name": "set_bit_080079e0",
            "code": "\nvoid setBit_080079e0(byte inputByte)\n\n{\n  *(int *)(((uint)(int)(char)inputByte >> 5) * 4 + -0x1fff1f00) = 1 << (inputByte & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080079e0": "set_bit_080079e0",
                "param_1": "inputByte"
            },
            "calling": [
                "FUN_08007a70"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007a10": {
            "entrypoint": "0x08007a10",
            "current_name": "update_flags_based_on_address_08007a10",
            "code": "\n\n\nvoid updateFlagsBasedOnAddress_08007a10(undefined *address)\n\n{\n  if (address == (undefined *)0x40000000) {\n    _DAT_40023840 = _DAT_40023840 | 1;\n  }\n  else if (address == (undefined *)0x40000400) {\n    _DAT_40023840 = _DAT_40023840 | 2;\n  }\n  else if (address == &DAT_40000800) {\n    _DAT_40023840 = _DAT_40023840 | 4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007a10": "update_flags_based_on_address_08007a10",
                "param_1": "address"
            },
            "calling": [
                "FUN_08007d08",
                "FUN_08007ad0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007a70": {
            "entrypoint": "0x08007a70",
            "current_name": "process_memory_region_08007a70",
            "code": "\nvoid processMemoryRegion_08007a70(undefined *memoryRegion,undefined4 param2,undefined4 param3)\n\n{\n  undefined regionCode;\n  \n  if (memoryRegion == (undefined *)0x40000000) {\n    regionCode = 0x1c;\n  }\n  else if (memoryRegion == (undefined *)0x40000400) {\n    regionCode = 0x1d;\n  }\n  else {\n    if (memoryRegion != &DAT_40000800) {\n      return;\n    }\n    regionCode = 0x1e;\n  }\n  FUN_08006cf6(regionCode,param2,param3);\n  FUN_080079e0(regionCode);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007a70": "process_memory_region_08007a70",
                "param_1": "memoryRegion",
                "param_2": "param2",
                "param_3": "param3",
                "local_c": "regionCode"
            },
            "calling": [
                "FUN_08007ad0"
            ],
            "called": [
                "FUN_080079e0",
                "FUN_08006cf6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007ad0": {
            "entrypoint": "0x08007ad0",
            "current_name": "initialize_memory_08007ad0",
            "code": "\n\n\nvoid initializeMemory_08007ad0(void)\n\n{\n  FUN_08007a10(0x40000000);\n  _DAT_40000000 = 0;\n  _DAT_40000004 = 0;\n  _DAT_40000008 = 0;\n  _DAT_4000000c = 0;\n  _DAT_40000010 = 0;\n  _DAT_40000018 = 0;\n  _DAT_4000001c = 0;\n  _DAT_40000020 = 0;\n  _DAT_40000024 = 0;\n  _DAT_40000028 = DAT_20000000 / 42000000 - 1;\n  _DAT_4000002c = 0;\n  _DAT_40000034 = 0;\n  _DAT_40000038 = 0;\n  _DAT_4000003c = 0;\n  _DAT_40000040 = 0;\n  _DAT_40000048 = 0;\n  _DAT_4000004c = 0;\n  FUN_08007a70(0x40000000,0,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007ad0": "initialize_memory_08007ad0"
            },
            "calling": [
                "FUN_08007e08"
            ],
            "called": [
                "FUN_08007a10",
                "FUN_08007a70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007b70": {
            "entrypoint": "0x08007b70",
            "current_name": "set_flags_08007b70",
            "code": "\n\n\nvoid setFlags_08007b70(void)\n\n{\n  uint flags;\n  \n  flags = 1;\n  if (_DAT_40000034 != 0) {\n    flags = 3;\n  }\n  if (_DAT_40000038 != 0) {\n    flags = flags | 4;\n  }\n  _DAT_4000000c = _DAT_4000000c | flags;\n  _DAT_40000000 = _DAT_40000000 | 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007b70": "set_flags_08007b70",
                "local_c": "flags"
            },
            "calling": [
                "FUN_08005790"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007bc2": {
            "entrypoint": "0x08007bc2",
            "current_name": "clear_flags_08007bc2",
            "code": "\n\n\nvoid clearFlags_08007bc2(void)\n\n{\n  _DAT_40000000 = _DAT_40000000 & 0xfffffffe;\n  _DAT_4000000c = _DAT_4000000c & 0xfffffff8;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007bc2": "clear_flags_08007bc2"
            },
            "calling": [
                "FUN_080057e4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007bf0": {
            "entrypoint": "0x08007bf0",
            "current_name": "update_data_08007bf0",
            "code": "\n\n\nvoid updateData_08007bf0(uint inputValue)\n\n{\n  _DAT_4000002c = inputValue;\n  if (inputValue <= _DAT_40000024) {\n    _DAT_40000024 = inputValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007bf0": "update_data_08007bf0",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08005324"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007c40": {
            "entrypoint": "0x08007c40",
            "current_name": "initialize_data_08007c40",
            "code": "\n\n\nvoid initializeData_08007c40(undefined4 dataValue)\n\n{\n  _DAT_40000034 = dataValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007c40": "initialize_data_08007c40",
                "param_1": "dataValue"
            },
            "calling": [
                "FUN_08005790"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007c5e": {
            "entrypoint": "0x08007c5e",
            "current_name": "store_parameter_value_08007c5e",
            "code": "\n\n\nvoid storeParameterValue_08007c5e(undefined4 parameter)\n\n{\n  _DAT_40000038 = parameter;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007c5e": "store_parameter_value_08007c5e",
                "param_1": "parameter"
            },
            "calling": [
                "FUN_08005790"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007c7c": {
            "entrypoint": "0x08007c7c",
            "current_name": "update_flags_and_execute_functions_08007c7c",
            "code": "\n\n\nvoid updateFlagsAndExecuteFunctions_08007c7c(void)\n\n{\n  if (((_DAT_40000010 & 2) != 0) && ((_DAT_4000000c & 2) != 0)) {\n    _DAT_40000010 = _DAT_40000010 & 0xfffffffd;\n    FUN_08005778();\n  }\n  if (((_DAT_40000010 & 4) != 0) && ((_DAT_4000000c & 4) != 0)) {\n    _DAT_40000010 = _DAT_40000010 & 0xfffffffb;\n    FUN_08005760();\n  }\n  if (((_DAT_40000010 & 1) != 0) && ((_DAT_4000000c & 1) != 0)) {\n    _DAT_40000010 = _DAT_40000010 & 0xfffffffe;\n    FUN_080053a0();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007c7c": "update_flags_and_execute_functions_08007c7c"
            },
            "calling": [],
            "called": [
                "FUN_080053a0",
                "FUN_08005778",
                "FUN_08005760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007d08": {
            "entrypoint": "0x08007d08",
            "current_name": "initialize_hardware_08007d08",
            "code": "\n\n\nvoid initializeHardware_08007d08(void)\n\n{\n  FUN_08007a10(&DAT_40000800);\n  _DAT_40000800 = 0x80;\n  _DAT_40000804 = 0;\n  _DAT_40000808 = 0;\n  _DAT_4000080c = 0;\n  _DAT_40000810 = 0;\n  _DAT_40000818 = 0x6800;\n  _DAT_4000081c = 0;\n  _DAT_40000820 = 0;\n  _DAT_40000824 = 0;\n  _DAT_40000828 = DAT_20000000 / 4800000 - 1;\n  _DAT_4000082c = 199;\n  _DAT_40000834 = 0;\n  _DAT_40000838 = 100;\n  _DAT_4000083c = 0;\n  _DAT_40000840 = 0;\n  _DAT_40000848 = 0;\n  _DAT_4000084c = 0;\n  _DAT_40000814 = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007d08": "initialize_hardware_08007d08"
            },
            "calling": [
                "FUN_08007e08"
            ],
            "called": [
                "FUN_08007a10"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007da8": {
            "entrypoint": "0x08007da8",
            "current_name": "set_flags_08007da8",
            "code": "\n\n\nvoid setFlags_08007da8(void)\n\n{\n  _DAT_40000820 = _DAT_40000820 | 0x10;\n  _DAT_40000800 = _DAT_40000800 | 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007da8": "set_flags_08007da8"
            },
            "calling": [
                "FUN_08007e08"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e08": {
            "entrypoint": "0x08007e08",
            "current_name": "initialize_system_08007e08",
            "code": "\nvoid initialize_system_08007e08(void)\n\n{\n  FUN_08007ad0();\n  FUN_08007d08();\n  FUN_08007da8();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007e08": "initialize_system_08007e08"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_08007d08",
                "FUN_08007da8",
                "FUN_08007ad0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e1c": {
            "entrypoint": "0x08007e1c",
            "current_name": "send_byte_to_device_08007e1c",
            "code": "\n\n\nvoid send_byte_to_device_08007e1c(byte byte_to_send)\n\n{\n  do {\n  } while ((_DAT_40004400 & 0x80) == 0);\n  _DAT_40004404 = (uint)byte_to_send;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007e1c": "send_byte_to_device_08007e1c",
                "param_1": "byte_to_send"
            },
            "calling": [
                "FUN_0800826a",
                "FUN_08008250"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e58": {
            "entrypoint": "0x08007e58",
            "current_name": "is_bit_set_08007e58",
            "code": "\n\n\nbool isBitSet_08007e58(void)\n\n{\n  return (_DAT_40004400 & 0x20) != 0;\n}\n\n",
            "renaming": {
                "FUN_08007e58": "is_bit_set_08007e58"
            },
            "calling": [
                "FUN_08008286"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e84": {
            "entrypoint": "0x08007e84",
            "current_name": "get_lowest_byte_08007e84",
            "code": "\n\n\nuint get_lowest_byte_08007e84(void)\n\n{\n  return _DAT_40004404 & 0xff;\n}\n\n",
            "renaming": {
                "FUN_08007e84": "get_lowest_byte_08007e84"
            },
            "calling": [
                "FUN_08008286"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007ea4": {
            "entrypoint": "0x08007ea4",
            "current_name": "set_memory_flag_08007ea4",
            "code": "\n\n\nvoid setMemoryFlag_08007ea4(undefined *memorySegment)\n\n{\n  if (memorySegment == (undefined *)0x40011000) {\n    _DAT_40023844 = _DAT_40023844 | 0x10;\n  }\n  else if (memorySegment == &DAT_40004400) {\n    _DAT_40023840 = _DAT_40023840 | 0x20000;\n  }\n  else if (memorySegment == (undefined *)0x40004800) {\n    _DAT_40023840 = _DAT_40023840 | 0x40000;\n  }\n  else if (memorySegment == (undefined *)0x40004c00) {\n    _DAT_40023840 = _DAT_40023840 | 0x80000;\n  }\n  else if (memorySegment == (undefined *)0x40005000) {\n    _DAT_40023840 = _DAT_40023840 | 0x100000;\n  }\n  else if (memorySegment == (undefined *)0x40011400) {\n    _DAT_40023844 = _DAT_40023844 | 0x20;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007ea4": "set_memory_flag_08007ea4",
                "param_1": "memorySegment"
            },
            "calling": [
                "FUN_08008190"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f54": {
            "entrypoint": "0x08007f54",
            "current_name": "calculate_value_08007f54",
            "code": "\nvoid calculateValue_08007f54(int inputAddr,int inputSize)\n\n{\n  ulonglong tempResult;\n  int tempValue1;\n  int tempValue2;\n  undefined8 randomValue;\n  \n  if ((*(uint *)(inputAddr + 0xc) & 0x8000) == 0) {\n    if ((inputAddr != 0x40011000) && (inputAddr != 0x40011400)) {\n      randomValue = FUN_08006680();\n      tempResult = (ulonglong)(uint)((int)randomValue * 0x19) / (ulonglong)(uint)(inputSize << 2);\n      tempValue1 = FUN_08006680((int)randomValue,(int)((ulonglong)randomValue >> 0x20),(int)(tempResult * 0x51eb851f));\n      tempValue2 = FUN_08006680();\n      *(uint *)(inputAddr + 8) =\n           (int)(tempResult / 100) << 4 |\n           (((uint)(tempValue1 * 0x19) / (uint)(inputSize << 2) +\n            (int)(((ulonglong)(uint)(tempValue2 * 0x19) / (ulonglong)(uint)(inputSize << 2)) / 100) * -100)\n            * 0x10 + 0x32) / 100 & 0xf;\n      return;\n    }\n    randomValue = FUN_080066cc();\n    tempResult = (ulonglong)(uint)((int)randomValue * 0x19) / (ulonglong)(uint)(inputSize << 2);\n    tempValue1 = FUN_080066cc((int)randomValue,(int)((ulonglong)randomValue >> 0x20),(int)(tempResult * 0x51eb851f));\n    tempValue2 = FUN_080066cc();\n    *(uint *)(inputAddr + 8) =\n         (int)(tempResult / 100) << 4 |\n         (((uint)(tempValue1 * 0x19) / (uint)(inputSize << 2) +\n          (int)(((ulonglong)(uint)(tempValue2 * 0x19) / (ulonglong)(uint)(inputSize << 2)) / 100) * -100) *\n          0x10 + 0x32) / 100 & 0xf;\n  }\n  else {\n    if ((inputAddr != 0x40011000) && (inputAddr != 0x40011400)) {\n      randomValue = FUN_08006680();\n      tempResult = (ulonglong)(uint)((int)randomValue * 0x19) / (ulonglong)(uint)(inputSize << 1);\n      tempValue1 = FUN_08006680((int)randomValue,(int)((ulonglong)randomValue >> 0x20),(int)(tempResult * 0x51eb851f));\n      tempValue2 = FUN_08006680();\n      *(uint *)(inputAddr + 8) =\n           (int)(tempResult / 100) << 4 |\n           (((uint)(tempValue1 * 0x19) / (uint)(inputSize << 1) +\n            (int)(((ulonglong)(uint)(tempValue2 * 0x19) / (ulonglong)(uint)(inputSize << 1)) / 100) * -100)\n            * 0x10 + 0x32) / 100 & 0xf;\n      return;\n    }\n    randomValue = FUN_080066cc();\n    tempResult = (ulonglong)(uint)((int)randomValue * 0x19) / (ulonglong)(uint)(inputSize << 1);\n    tempValue1 = FUN_080066cc((int)randomValue,(int)((ulonglong)randomValue >> 0x20),(int)(tempResult * 0x51eb851f));\n    tempValue2 = FUN_080066cc();\n    *(uint *)(inputAddr + 8) =\n         (int)(tempResult / 100) << 4 |\n         (((uint)(tempValue1 * 0x19) / (uint)(inputSize << 1) +\n          (int)(((ulonglong)(uint)(tempValue2 * 0x19) / (ulonglong)(uint)(inputSize << 1)) / 100) * -100) *\n          0x10 + 0x32) / 100 & 0xf;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007f54": "calculate_value_08007f54",
                "param_1": "inputAddr",
                "param_2": "inputSize",
                "uVar1": "tempResult",
                "iVar2": "tempValue1",
                "iVar3": "tempValue2",
                "uVar4": "randomValue"
            },
            "calling": [
                "FUN_08008190"
            ],
            "called": [
                "FUN_08006680",
                "FUN_080066cc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008190": {
            "entrypoint": "0x08008190",
            "current_name": "initialize_memory_08008190",
            "code": "\n\n\nvoid initializeMemory_08008190(void)\n\n{\n  FUN_08007ea4(&DAT_40004400);\n  _DAT_4000440c = _DAT_4000440c & 0xffff400c | 0xc;\n  _DAT_40004410 = _DAT_40004410 & 0xffff8090;\n  _DAT_40004414 = _DAT_40004414 & 0xfffff000;\n  _DAT_40004400 = _DAT_40004400 & 0xfffffc00;\n  FUN_08007f54(&DAT_40004400,0x1c200);\n  _DAT_4000440c = _DAT_4000440c | 0x2000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008190": "initialize_memory_08008190"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_08007ea4",
                "FUN_08007f54"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008244": {
            "entrypoint": "0x08008244",
            "current_name": "FUNC_08008244",
            "code": "\nvoid FUNC_08008244(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008244": "FUNC_08008244"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008250": {
            "entrypoint": "0x08008250",
            "current_name": "initialize_08008250",
            "code": "\nvoid initialize_08008250(undefined data)\n\n{\n  FUN_08007e1c(data);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008250": "initialize_08008250",
                "param_1": "data"
            },
            "calling": [
                "FUN_0800369c",
                "FUN_08003826",
                "FUN_080037fc",
                "FUN_080036f0",
                "FUN_08003778",
                "FUN_080036c6"
            ],
            "called": [
                "FUN_08007e1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800826a": {
            "entrypoint": "0x0800826a",
            "current_name": "initialize_application_0800826a",
            "code": "\nundefined4 initializeApplication_0800826a(undefined applicationData)\n\n{\n  FUN_08007e1c(applicationData);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800826a": "initialize_application_0800826a",
                "param_1": "applicationData"
            },
            "calling": [],
            "called": [
                "FUN_08007e1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008286": {
            "entrypoint": "0x08008286",
            "current_name": "check_result_08008286",
            "code": "\nundefined check_result_08008286(void)\n\n{\n  undefined result;\n  int returnValue;\n  \n  returnValue = FUN_08007e58();\n  if (returnValue != 0) {\n    result = FUN_08007e84();\n    returnValue = FUN_08005900(result);\n    if (returnValue == 0) {\n      return result;\n    }\n  }\n  return 0xff;\n}\n\n",
            "renaming": {
                "FUN_08008286": "check_result_08008286",
                "uVar1": "result",
                "iVar2": "returnValue"
            },
            "calling": [
                "FUN_08003f34"
            ],
            "called": [
                "FUN_08007e84",
                "FUN_08005900",
                "FUN_08007e58"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080082ba": {
            "entrypoint": "0x080082ba",
            "current_name": "FUNC_080082ba",
            "code": "\nvoid FUNC_080082ba(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080082ba": "FUNC_080082ba"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080082d0": {
            "entrypoint": "0x080082d0",
            "current_name": "calculate_080082d0",
            "code": "\nulonglong calculate_080082d0(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int shift1;\n  byte carry;\n  uint sum1;\n  uint result1;\n  uint sum2;\n  uint result2;\n  uint value1;\n  int shift2;\n  uint value2;\n  uint value3;\n  uint result3;\n  uint shift3;\n  bool flag1;\n  bool flag2;\n  bool flag3;\n  \n  result2 = input4 ^ 0x80000000;\n  value2 = input2 << 1;\n  input4 = input4 << 1;\n  flag1 = ((input2 ^ result2) & 0x7fffffff) == 0;\n  flag2 = flag1 && input1 == input3;\n  if (!flag1 || input1 != input3) {\n    flag2 = (value2 | input1) == 0;\n  }\n  if (!flag2) {\n    flag2 = (input4 | input3) == 0;\n  }\n  shift2 = (int)value2 >> 0x15;\n  if (!flag2) {\n    flag2 = shift2 == -1;\n  }\n  shift1 = (int)input4 >> 0x15;\n  if (!flag2) {\n    flag2 = shift1 == -1;\n  }\n  if (flag2) {\n    if (shift2 == -1 || shift1 == -1) {\n      value2 = result2;\n      result3 = input3;\n      if (shift2 == -1) {\n        value2 = input2;\n        result3 = input1;\n      }\n      if (shift2 != -1 || shift1 != -1) {\n        input3 = result3;\n        result2 = value2;\n      }\n      flag2 = (result3 | value2 << 0xc) == 0;\n      if (flag2) {\n        flag2 = (input3 | result2 << 0xc) == 0;\n      }\n      if (flag2) {\n        flag2 = value2 == result2;\n      }\n      if (!flag2) {\n        value2 = value2 | 0x80000;\n      }\n      return CONCAT44(value2,result3);\n    }\n    if (((input2 ^ result2) & 0x7fffffff) != 0 || input1 != input3) {\n      if ((value2 | input1) == 0) {\n        input1 = input3;\n        input2 = result2;\n      }\n      return CONCAT44(input2,input1);\n    }\n    if (input2 != result2) {\n      return 0;\n    }\n    if (value2 >> 0x15 == 0) {\n      flag2 = (input1 & 0x80000000) != 0;\n      result2 = input2 * 2 + (uint)flag2;\n      if (CARRY4(input2,input2) || CARRY4(input2 * 2,(uint)flag2)) {\n        result2 = result2 | 0x80000000;\n      }\n      return CONCAT44(result2,input1 << 1);\n    }\n    if (value2 < 0xffc00000) {\n      return CONCAT44(input2 + 0x100000,input1);\n    }\n    input2 = input2 & 0x80000000;\nLAB_08008514:\n    return (ulonglong)(input2 | 0x7ff00000) << 0x20;\n  }\n  value2 = value2 >> 0x15;\n  input4 = input4 >> 0x15;\n  result3 = input4 - value2;\n  flag2 = result3 != 0;\n  if (input4 < value2) {\n    result3 = -result3;\n  }\n  value3 = input1;\n  value1 = input2;\n  if (flag2 && value2 <= input4) {\n    value2 = value2 + result3;\n    value3 = input3;\n    value1 = result2;\n    input3 = input1;\n    result2 = input2;\n  }\n  if (0x36 < result3) {\n    return CONCAT44(value1,value3);\n  }\n  result1 = value1 & 0xfffff | 0x100000;\n  if ((value1 & 0x80000000) != 0) {\n    flag2 = value3 != 0;\n    value3 = -value3;\n    result1 = -result1 - (uint)flag2;\n  }\n  value1 = result2 & 0xfffff | 0x100000;\n  if ((result2 & 0x80000000) != 0) {\n    flag2 = input3 != 0;\n    input3 = -input3;\n    value1 = -value1 - (uint)flag2;\n  }\n  if (value2 == result3) {\n    value1 = value1 ^ 0x100000;\n    if (value2 == 0) {\n      result1 = result1 ^ 0x100000;\n      value2 = 1;\n    }\n    else {\n      result3 = result3 - 1;\n    }\n  }\n  result2 = -result3 + 0x20;\n  if ((int)result3 < 0x21) {\n    shift3 = input3 << (result2 & 0xff);\n    input3 = input3 >> (result3 & 0xff);\n    sum1 = value3 + input3;\n    sum2 = value1 << (result2 & 0xff);\n    result2 = sum1 + sum2;\n    result1 = result1 + CARRY4(value3,input3) + ((int)value1 >> (result3 & 0xff)) +\n            (uint)CARRY4(sum1,sum2);\n  }\n  else {\n    shift3 = value1 << (-result3 + 0x40 & 0xff);\n    if (input3 != 0) {\n      shift3 = shift3 | 2;\n    }\n    value1 = (int)value1 >> (result3 - 0x20 & 0xff);\n    result2 = value3 + value1;\n    result1 = result1 + ((int)value1 >> 0x1f) + (uint)CARRY4(value3,value1);\n  }\n  input2 = result1 & 0x80000000;\n  result3 = result1;\n  if ((int)result1 < 0) {\n    flag2 = shift3 == 0;\n    shift3 = -shift3;\n    result3 = -result2;\n    result2 = -(uint)!flag2 - result2;\n    result3 = -(uint)(flag2 <= result3) - result1;\n  }\n  if (0xfffff < result3) {\n    value3 = value2 - 1;\n    if (0x1fffff < result3) {\n      value3 = result3 & 1;\n      result3 = result3 >> 1;\n      carry = (byte)result2;\n      result2 = (uint)(value3 != 0) << 0x1f | result2 >> 1;\n      shift3 = (uint)(carry & 1) << 0x1f | shift3 >> 1;\n      value3 = value2;\n      if (0xffbfffff < value2 * 0x200000) goto LAB_08008514;\n    }\nLAB_080083e0:\n    flag2 = 0x7fffffff < shift3;\n    if (shift3 == 0x80000000) {\n      flag2 = (result2 & 1) != 0;\n    }\n    return CONCAT44(result3 + value3 * 0x100000 + (uint)CARRY4(result2,(uint)flag2) | input2,\n                    result2 + flag2);\n  }\n  flag1 = (shift3 & 0x80000000) != 0;\n  shift3 = shift3 << 1;\n  value3 = result2 * 2;\n  flag2 = CARRY4(result2,result2);\n  result2 = result2 * 2 + (uint)flag1;\n  result3 = result3 * 2 + (uint)(flag2 || CARRY4(value3,(uint)flag1));\n  value3 = value2 - 2;\n  if (value2 - 1 != 0 && 0xfffff < result3) goto LAB_080083e0;\n  value1 = result2;\n  value2 = result3;\n  if (result3 == 0) {\n    value1 = 0;\n    value2 = result2;\n  }\n  shift2 = LZCOUNT(value2);\n  if (result3 == 0) {\n    shift2 = shift2 + 0x20;\n  }\n  result3 = shift2 - 0xb;\n  flag3 = SBORROW4(result3,0x20);\n  result2 = shift2 - 0x2b;\n  flag2 = (int)result2 < 0;\n  flag1 = result2 == 0;\n  if ((int)result3 < 0x20) {\n    flag3 = SCARRY4(result2,0xc);\n    shift2 = shift2 + -0x1f;\n    flag2 = shift2 < 0;\n    flag1 = shift2 == 0;\n    result2 = result3;\n    if (!flag1 && flag2 == flag3) {\n      value1 = value2 << (result3 & 0xff);\n      value2 = value2 >> (0xcU - shift2 & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (flag1 || flag2 != flag3) {\n    shift3 = 0x20 - result2;\n  }\n  value2 = value2 << (result2 & 0xff);\n  if (flag1 || flag2 != flag3) {\n    value2 = value2 | value1 >> (shift3 & 0xff);\n  }\n  if (flag1 || flag2 != flag3) {\n    value1 = value1 << (result2 & 0xff);\n  }\nLAB_08008458:\n  if ((int)result3 <= (int)value3) {\n    return CONCAT44(value2 + (value3 - result3) * 0x100000 | input2,value1);\n  }\n  result2 = ~(value3 - result3);\n  if ((int)result2 < 0x1f) {\n    shift2 = result2 - 0x13;\n    if (shift2 != 0 && shift2 < 0 == SCARRY4(result2 - 0x1f,0xc)) {\n      return CONCAT44(result1,value1 >> (0x20 - (0xcU - shift2) & 0xff) | value2 << (0xcU - shift2 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    result2 = result2 + 1;\n    return CONCAT44(input2 | value2 >> (result2 & 0xff),\n                    value1 >> (result2 & 0xff) | value2 << (0x20 - result2 & 0xff));\n  }\n  return CONCAT44(result1,value2 >> (result2 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_080082d0": "calculate_080082d0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "shift1",
                "bVar2": "carry",
                "uVar3": "sum1",
                "uVar4": "result1",
                "uVar5": "sum2",
                "uVar6": "result2",
                "uVar7": "value1",
                "iVar8": "shift2",
                "uVar9": "value2",
                "uVar10": "value3",
                "uVar11": "result3",
                "uVar12": "shift3",
                "bVar13": "flag1",
                "bVar14": "flag2",
                "bVar15": "flag3"
            },
            "calling": [
                "FUN_08003004",
                "FUN_080096e8",
                "FUN_08009d78",
                "FUN_0800a5a0",
                "FUN_08001f00",
                "FUN_0800af78",
                "FUN_08004940",
                "FUN_0800a1bc",
                "FUN_08009410",
                "FUN_0800a348",
                "FUN_08009b24",
                "FUN_0800adf0",
                "FUN_08009990"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080082d4": {
            "entrypoint": "0x080082d4",
            "current_name": "calculate_combined_value_080082d4",
            "code": "\nulonglong calculate_combined_value_080082d4(uint input_1,uint input_2,uint input_3,uint input_4)\n\n{\n  int shift_amount_1;\n  byte carry1;\n  uint result_1;\n  uint shifted_input_1;\n  uint result_2;\n  int shift_amount_2;\n  uint shifted_input_2;\n  uint result_3;\n  uint shifted_input_3;\n  uint difference;\n  uint result_4;\n  uint result_5;\n  bool is_equal;\n  bool condition1;\n  bool condition2;\n  \n  shifted_input_2 = input_2 << 1;\n  shifted_input_3 = input_4 << 1;\n  is_equal = ((input_2 ^ input_4) & 0x7fffffff) == 0;\n  condition1 = is_equal && input_1 == input_3;\n  if (!is_equal || input_1 != input_3) {\n    condition1 = (shifted_input_2 | input_1) == 0;\n  }\n  if (!condition1) {\n    condition1 = (shifted_input_3 | input_3) == 0;\n  }\n  shift_amount_2 = (int)shifted_input_2 >> 0x15;\n  if (!condition1) {\n    condition1 = shift_amount_2 == -1;\n  }\n  shift_amount_1 = (int)shifted_input_3 >> 0x15;\n  if (!condition1) {\n    condition1 = shift_amount_1 == -1;\n  }\n  if (condition1) {\n    if (shift_amount_2 == -1 || shift_amount_1 == -1) {\n      shifted_input_3 = input_4;\n      shifted_input_2 = input_3;\n      if (shift_amount_2 == -1) {\n        shifted_input_3 = input_2;\n        shifted_input_2 = input_1;\n      }\n      if (shift_amount_2 != -1 || shift_amount_1 != -1) {\n        input_3 = shifted_input_2;\n        input_4 = shifted_input_3;\n      }\n      condition1 = (shifted_input_2 | shifted_input_3 << 0xc) == 0;\n      if (condition1) {\n        condition1 = (input_3 | input_4 << 0xc) == 0;\n      }\n      if (condition1) {\n        condition1 = shifted_input_3 == input_4;\n      }\n      if (!condition1) {\n        shifted_input_3 = shifted_input_3 | 0x80000;\n      }\n      return CONCAT44(shifted_input_3,shifted_input_2);\n    }\n    if (((input_2 ^ input_4) & 0x7fffffff) != 0 || input_1 != input_3) {\n      if ((shifted_input_2 | input_1) == 0) {\n        input_1 = input_3;\n        input_2 = input_4;\n      }\n      return CONCAT44(input_2,input_1);\n    }\n    if (input_2 != input_4) {\n      return 0;\n    }\n    if (shifted_input_2 >> 0x15 == 0) {\n      condition1 = (input_1 & 0x80000000) != 0;\n      shifted_input_3 = input_2 * 2 + (uint)condition1;\n      if (CARRY4(input_2,input_2) || CARRY4(input_2 * 2,(uint)condition1)) {\n        shifted_input_3 = shifted_input_3 | 0x80000000;\n      }\n      return CONCAT44(shifted_input_3,input_1 << 1);\n    }\n    if (shifted_input_2 < 0xffc00000) {\n      return CONCAT44(input_2 + 0x100000,input_1);\n    }\n    input_2 = input_2 & 0x80000000;\nLAB_08008514:\n    return (ulonglong)(input_2 | 0x7ff00000) << 0x20;\n  }\n  shifted_input_2 = shifted_input_2 >> 0x15;\n  shifted_input_3 = shifted_input_3 >> 0x15;\n  difference = shifted_input_3 - shifted_input_2;\n  condition1 = difference != 0;\n  if (shifted_input_3 < shifted_input_2) {\n    difference = -difference;\n  }\n  result_3 = input_1;\n  result_2 = input_2;\n  if (condition1 && shifted_input_2 <= shifted_input_3) {\n    shifted_input_2 = shifted_input_2 + difference;\n    result_3 = input_3;\n    result_2 = input_4;\n    input_3 = input_1;\n    input_4 = input_2;\n  }\n  if (0x36 < difference) {\n    return CONCAT44(result_2,result_3);\n  }\n  shifted_input_3 = result_2 & 0xfffff | 0x100000;\n  if ((result_2 & 0x80000000) != 0) {\n    condition1 = result_3 != 0;\n    result_3 = -result_3;\n    shifted_input_3 = -shifted_input_3 - (uint)condition1;\n  }\n  result_2 = input_4 & 0xfffff | 0x100000;\n  if ((input_4 & 0x80000000) != 0) {\n    condition1 = input_3 != 0;\n    input_3 = -input_3;\n    result_2 = -result_2 - (uint)condition1;\n  }\n  if (shifted_input_2 == difference) {\n    result_2 = result_2 ^ 0x100000;\n    if (shifted_input_2 == 0) {\n      shifted_input_3 = shifted_input_3 ^ 0x100000;\n      shifted_input_2 = 1;\n    }\n    else {\n      difference = difference - 1;\n    }\n  }\n  result_5 = -difference + 0x20;\n  if ((int)difference < 0x21) {\n    result_4 = input_3 << (result_5 & 0xff);\n    input_3 = input_3 >> (difference & 0xff);\n    result_1 = result_3 + input_3;\n    shifted_input_1 = result_2 << (result_5 & 0xff);\n    result_5 = result_1 + shifted_input_1;\n    shifted_input_3 = shifted_input_3 + CARRY4(result_3,input_3) + ((int)result_2 >> (difference & 0xff)) +\n            (uint)CARRY4(result_1,shifted_input_1);\n  }\n  else {\n    result_4 = result_2 << (-difference + 0x40 & 0xff);\n    if (input_3 != 0) {\n      result_4 = result_4 | 2;\n    }\n    result_2 = (int)result_2 >> (difference - 0x20 & 0xff);\n    result_5 = result_3 + result_2;\n    shifted_input_3 = shifted_input_3 + ((int)result_2 >> 0x1f) + (uint)CARRY4(result_3,result_2);\n  }\n  input_2 = shifted_input_3 & 0x80000000;\n  difference = shifted_input_3;\n  if ((int)shifted_input_3 < 0) {\n    condition1 = result_4 == 0;\n    result_4 = -result_4;\n    difference = -result_5;\n    result_5 = -(uint)!condition1 - result_5;\n    difference = -(uint)(condition1 <= difference) - shifted_input_3;\n  }\n  if (0xfffff < difference) {\n    result_3 = shifted_input_2 - 1;\n    if (0x1fffff < difference) {\n      shifted_input_3 = difference & 1;\n      difference = difference >> 1;\n      carry1 = (byte)result_5;\n      result_5 = (uint)(shifted_input_3 != 0) << 0x1f | result_5 >> 1;\n      result_4 = (uint)(carry1 & 1) << 0x1f | result_4 >> 1;\n      result_3 = shifted_input_2;\n      if (0xffbfffff < shifted_input_2 * 0x200000) goto LAB_08008514;\n    }\nLAB_080083e0:\n    condition1 = 0x7fffffff < result_4;\n    if (result_4 == 0x80000000) {\n      condition1 = (result_5 & 1) != 0;\n    }\n    return CONCAT44(difference + result_3 * 0x100000 + (uint)CARRY4(result_5,(uint)condition1) | input_2,\n                    result_5 + condition1);\n  }\n  is_equal = (result_4 & 0x80000000) != 0;\n  result_4 = result_4 << 1;\n  result_3 = result_5 * 2;\n  condition1 = CARRY4(result_5,result_5);\n  result_5 = result_5 * 2 + (uint)is_equal;\n  difference = difference * 2 + (uint)(condition1 || CARRY4(result_3,(uint)is_equal));\n  result_3 = shifted_input_2 - 2;\n  if (shifted_input_2 - 1 != 0 && 0xfffff < difference) goto LAB_080083e0;\n  result_2 = result_5;\n  shifted_input_2 = difference;\n  if (difference == 0) {\n    result_2 = 0;\n    shifted_input_2 = result_5;\n  }\n  shift_amount_2 = LZCOUNT(shifted_input_2);\n  if (difference == 0) {\n    shift_amount_2 = shift_amount_2 + 0x20;\n  }\n  result_5 = shift_amount_2 - 0xb;\n  condition2 = SBORROW4(result_5,0x20);\n  difference = shift_amount_2 - 0x2b;\n  condition1 = (int)difference < 0;\n  is_equal = difference == 0;\n  if ((int)result_5 < 0x20) {\n    condition2 = SCARRY4(difference,0xc);\n    shift_amount_2 = shift_amount_2 + -0x1f;\n    condition1 = shift_amount_2 < 0;\n    is_equal = shift_amount_2 == 0;\n    difference = result_5;\n    if (!is_equal && condition1 == condition2) {\n      result_2 = shifted_input_2 << (result_5 & 0xff);\n      shifted_input_2 = shifted_input_2 >> (0xcU - shift_amount_2 & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (is_equal || condition1 != condition2) {\n    result_4 = 0x20 - difference;\n  }\n  shifted_input_2 = shifted_input_2 << (difference & 0xff);\n  if (is_equal || condition1 != condition2) {\n    shifted_input_2 = shifted_input_2 | result_2 >> (result_4 & 0xff);\n  }\n  if (is_equal || condition1 != condition2) {\n    result_2 = result_2 << (difference & 0xff);\n  }\nLAB_08008458:\n  if ((int)result_5 <= (int)result_3) {\n    return CONCAT44(shifted_input_2 + (result_3 - result_5) * 0x100000 | input_2,result_2);\n  }\n  difference = ~(result_3 - result_5);\n  if ((int)difference < 0x1f) {\n    shift_amount_2 = difference - 0x13;\n    if (shift_amount_2 != 0 && shift_amount_2 < 0 == SCARRY4(difference - 0x1f,0xc)) {\n      return CONCAT44(shifted_input_3,result_2 >> (0x20 - (0xcU - shift_amount_2) & 0xff) | shifted_input_2 << (0xcU - shift_amount_2 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    difference = difference + 1;\n    return CONCAT44(input_2 | shifted_input_2 >> (difference & 0xff),\n                    result_2 >> (difference & 0xff) | shifted_input_2 << (0x20 - difference & 0xff));\n  }\n  return CONCAT44(shifted_input_3,shifted_input_2 >> (difference - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_080082d4": "calculate_combined_value_080082d4",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "iVar1": "shift_amount_1",
                "bVar2": "carry1",
                "uVar3": "result_1",
                "uVar4": "shifted_input_1",
                "uVar5": "result_2",
                "iVar6": "shift_amount_2",
                "uVar7": "shifted_input_2",
                "uVar8": "result_3",
                "uVar9": "shifted_input_3",
                "uVar10": "difference",
                "uVar11": "result_4",
                "uVar12": "result_5",
                "bVar13": "is_equal",
                "bVar14": "condition1",
                "bVar15": "condition2"
            },
            "calling": [
                "FUN_08009798",
                "FUN_08009d78",
                "FUN_0800a5a0",
                "FUN_08009318",
                "FUN_08009654",
                "FUN_08001f00",
                "FUN_0800af78",
                "FUN_0800b2e8",
                "FUN_080094c0",
                "FUN_0800a1bc",
                "FUN_0800a348",
                "FUN_08009b24",
                "FUN_0800adf0",
                "FUN_08009990"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800854c": {
            "entrypoint": "0x0800854c",
            "current_name": "bitwise_operation_0800854c",
            "code": "\nulonglong bitwiseOperation_0800854c(uint input)\n\n{\n  uint result;\n  uint shiftAmount;\n  int count;\n  uint adjustedCount;\n  uint remainingBits;\n  bool isNegative;\n  bool isZero;\n  bool isBorrow;\n  \n  if (input == 0) {\n    return 0;\n  }\n  result = 0;\n  count = LZCOUNT(input);\n  adjustedCount = count + 0x15;\n  isBorrow = SBORROW4(adjustedCount,0x20);\n  shiftAmount = count - 0xb;\n  isNegative = (int)shiftAmount < 0;\n  isZero = shiftAmount == 0;\n  if (adjustedCount < 0x20) {\n    isBorrow = SCARRY4(shiftAmount,0xc);\n    isNegative = false;\n    isZero = count + 1 == 0;\n    shiftAmount = adjustedCount;\n    if (!isZero && isBorrow == false) {\n      result = input << adjustedCount;\n      input = input >> (0xcU - (count + 1) & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (isZero || isNegative != isBorrow) {\n    remainingBits = 0x20 - shiftAmount;\n  }\n  input = input << (shiftAmount & 0xff);\n  if (isZero || isNegative != isBorrow) {\n    input = input | 0U >> (remainingBits & 0xff);\n  }\n  if (isZero || isNegative != isBorrow) {\n    result = 0 << (shiftAmount & 0xff);\n  }\nLAB_08008458:\n  if (adjustedCount < 0x433) {\n    return CONCAT44(input + (0x432 - adjustedCount) * 0x100000,result);\n  }\n  shiftAmount = ~(0x432 - adjustedCount);\n  if (0x1e < (int)shiftAmount) {\n    return (ulonglong)(input >> (shiftAmount - 0x1f & 0xff));\n  }\n  count = shiftAmount - 0x13;\n  if (count == 0 || count < 0 != SCARRY4(shiftAmount - 0x1f,0xc)) {\n    shiftAmount = shiftAmount + 1;\n    return CONCAT44(input >> (shiftAmount & 0xff),\n                    result >> (shiftAmount & 0xff) | input << (0x20 - shiftAmount & 0xff));\n  }\n  return (ulonglong)(result >> (0x20 - (0xcU - count) & 0xff) | input << (0xcU - count & 0xff));\n}\n\n",
            "renaming": {
                "FUN_0800854c": "bitwise_operation_0800854c",
                "param_1": "input",
                "uVar1": "result",
                "uVar2": "shiftAmount",
                "iVar3": "count",
                "uVar4": "adjustedCount",
                "bVar5": "isNegative",
                "bVar6": "isZero",
                "bVar7": "isBorrow",
                "in_r12": "remainingBits"
            },
            "calling": [
                "FUN_08001994"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800856c": {
            "entrypoint": "0x0800856c",
            "current_name": "bit_shift_and_combine_0800856c",
            "code": "\nulonglong bitShiftAndCombine_0800856c(uint inputValue)\n\n{\n  uint shiftedValue;\n  uint absValue;\n  uint shiftAmount;\n  int leadingZeros;\n  uint shiftedAmount;\n  uint signBit;\n  uint complement;\n  bool isNegative;\n  bool isZero;\n  bool overflow;\n  \n  if (inputValue == 0) {\n    return 0;\n  }\n  signBit = inputValue & 0x80000000;\n  absValue = inputValue;\n  if ((int)signBit < 0) {\n    absValue = -inputValue;\n  }\n  shiftedValue = 0;\n  leadingZeros = leadingZeroCount(absValue);\n  shiftedAmount = leadingZeros + 0x15;\n  overflow = signedBorrow4(shiftedAmount,0x20);\n  shiftAmount = leadingZeros - 0xb;\n  isNegative = (int)shiftAmount < 0;\n  isZero = shiftAmount == 0;\n  if (shiftedAmount < 0x20) {\n    overflow = signedCarry4(shiftAmount,0xc);\n    isNegative = false;\n    isZero = leadingZeros + 1 == 0;\n    shiftAmount = shiftedAmount;\n    if (!isZero && overflow == false) {\n      shiftedValue = absValue << shiftedAmount;\n      absValue = absValue >> (0xcU - (leadingZeros + 1) & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (isZero || isNegative != overflow) {\n    complement = 0x20 - shiftAmount;\n  }\n  absValue = absValue << (shiftAmount & 0xff);\n  if (isZero || isNegative != overflow) {\n    absValue = absValue | 0U >> (complement & 0xff);\n  }\n  if (isZero || isNegative != overflow) {\n    shiftedValue = 0 << (shiftAmount & 0xff);\n  }\nLAB_08008458:\n  if (shiftedAmount < 0x433) {\n    return CONCAT44(absValue + (0x432 - shiftedAmount) * 0x100000 | signBit,shiftedValue);\n  }\n  shiftAmount = ~(0x432 - shiftedAmount);\n  if (0x1e < (int)shiftAmount) {\n    return CONCAT44(inputValue,absValue >> (shiftAmount - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  leadingZeros = shiftAmount - 0x13;\n  if (leadingZeros == 0 || leadingZeros < 0 != signedCarry4(shiftAmount - 0x1f,0xc)) {\n    shiftAmount = shiftAmount + 1;\n    return CONCAT44(signBit | absValue >> (shiftAmount & 0xff),\n                    shiftedValue >> (shiftAmount & 0xff) | absValue << (0x20 - shiftAmount & 0xff));\n  }\n  return CONCAT44(inputValue,shiftedValue >> (0x20 - (0xcU - leadingZeros) & 0xff) | absValue << (0xcU - leadingZeros & 0xff))\n         & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800856c": "bit_shift_and_combine_0800856c",
                "param_1": "inputValue",
                "uVar1": "shiftedValue",
                "uVar2": "absValue",
                "uVar3": "shiftAmount",
                "iVar4": "leadingZeros",
                "uVar5": "shiftedAmount",
                "uVar6": "signBit",
                "in_r12": "complement",
                "bVar7": "isNegative",
                "bVar8": "isZero",
                "bVar9": "overflow",
                "LZCOUNT": "leadingZeroCount",
                "SBORROW4": "signedBorrow4",
                "SCARRY4": "signedCarry4"
            },
            "calling": [
                "FUN_08009d78",
                "FUN_0800a5a0",
                "FUN_08002c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008590": {
            "entrypoint": "0x08008590",
            "current_name": "calculate_shifted_value_08008590",
            "code": "\nulonglong calculateShiftedValue_08008590(uint input,undefined4 param2,undefined4 param3,uint param4)\n\n{\n  uint msbShifted;\n  uint shiftedValue;\n  uint result;\n  uint shiftAmount;\n  uint tempValue;\n  int lzcountResult;\n  uint uVar7;\n  uint in_r12;\n  bool bVar8;\n  bool bVar9;\n  bool bVar10;\n  \n  tempValue = input << 1;\n  bVar9 = tempValue == 0;\n  msbShifted = (uint)((input & 0x80000000) != 0) << 0x1f;\n  shiftAmount = (uint)((int)tempValue >> 3) >> 1;\n  result = msbShifted | shiftAmount;\n  input = input << 0x1d;\n  if (!bVar9) {\n    param4 = tempValue & 0xff000000;\n    bVar9 = param4 == 0;\n  }\n  if (!bVar9) {\n    bVar9 = param4 == 0xff000000;\n  }\n  if (!bVar9) {\n    return CONCAT44(result,input) ^ 0x3800000000000000;\n  }\n  if ((tempValue & 0xffffff) == 0) {\n    return CONCAT44(result,input);\n  }\n  if (param4 == 0xff000000) {\n    return CONCAT44(result,input) | 0x8000000000000;\n  }\n  shiftedValue = input;\n  tempValue = shiftAmount;\n  if (shiftAmount == 0) {\n    shiftedValue = 0;\n    tempValue = input;\n  }\n  lzcountResult = LZCOUNT(tempValue);\n  if (shiftAmount == 0) {\n    lzcountResult = lzcountResult + 0x20;\n  }\n  uVar7 = lzcountResult - 0xb;\n  bVar10 = SBORROW4(uVar7,0x20);\n  shiftAmount = lzcountResult - 0x2b;\n  bVar9 = (int)shiftAmount < 0;\n  bVar8 = shiftAmount == 0;\n  if ((int)uVar7 < 0x20) {\n    bVar10 = SCARRY4(shiftAmount,0xc);\n    lzcountResult = lzcountResult + -0x1f;\n    bVar9 = lzcountResult < 0;\n    bVar8 = lzcountResult == 0;\n    shiftAmount = uVar7;\n    if (!bVar8 && bVar9 == bVar10) {\n      shiftedValue = tempValue << (uVar7 & 0xff);\n      tempValue = tempValue >> (0xcU - lzcountResult & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (bVar8 || bVar9 != bVar10) {\n    in_r12 = 0x20 - shiftAmount;\n  }\n  tempValue = tempValue << (shiftAmount & 0xff);\n  if (bVar8 || bVar9 != bVar10) {\n    tempValue = tempValue | shiftedValue >> (in_r12 & 0xff);\n  }\n  if (bVar8 || bVar9 != bVar10) {\n    shiftedValue = shiftedValue << (shiftAmount & 0xff);\n  }\nLAB_08008458:\n  if ((int)uVar7 < 0x381) {\n    return CONCAT44(tempValue + (0x380 - uVar7) * 0x100000 | msbShifted,shiftedValue);\n  }\n  shiftAmount = ~(0x380 - uVar7);\n  if (0x1e < (int)shiftAmount) {\n    return CONCAT44(result,tempValue >> (shiftAmount - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  lzcountResult = shiftAmount - 0x13;\n  if (lzcountResult == 0 || lzcountResult < 0 != SCARRY4(shiftAmount - 0x1f,0xc)) {\n    shiftAmount = shiftAmount + 1;\n    return CONCAT44(msbShifted | tempValue >> (shiftAmount & 0xff),\n                    shiftedValue >> (shiftAmount & 0xff) | tempValue << (0x20 - shiftAmount & 0xff));\n  }\n  return CONCAT44(result,shiftedValue >> (0x20 - (0xcU - lzcountResult) & 0xff) | tempValue << (0xcU - lzcountResult & 0xff)) &\n         0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008590": "calculate_shifted_value_08008590",
                "param_1": "input",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "msbShifted",
                "uVar2": "shiftedValue",
                "uVar3": "result",
                "uVar4": "shiftAmount",
                "uVar5": "tempValue",
                "iVar6": "lzcountResult"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08002638",
                "FUN_080005b4",
                "FUN_08002408",
                "FUN_08004e30",
                "FUN_080046d0",
                "FUN_08001f00",
                "FUN_08003b98",
                "FUN_08004940",
                "FUN_0800056c",
                "FUN_080044e8",
                "FUN_08002978",
                "FUN_08001994",
                "FUN_08002c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008640": {
            "entrypoint": "0x08008640",
            "current_name": "calculate_floating_point_number_08008640",
            "code": "\nulonglong calculateFloatingPointNumber_08008640(undefined4 exponentBits,uint mantissaBits,uint floatingPointBits,uint signBit)\n\n{\n  ulonglong multiplicationResult;\n  longlong additionResult;\n  uint exponentBitsResult;\n  uint var1;\n  int var2;\n  uint var3;\n  uint var4;\n  uint carryBit;\n  uint var5;\n  bool isZero;\n  bool isNegative;\n  bool isNegOverflow;\n  ulonglong combinedBits;\n  \n  combinedBits = CONCAT44(mantissaBits,exponentBits);\n  carryBit = 0x7ff;\n  var1 = mantissaBits >> 0x14 & 0x7ff;\n  isZero = var1 == 0;\n  if (!isZero) {\n    var4 = signBit >> 0x14 & 0x7ff;\n    isZero = var4 == 0;\n  }\n  if (!isZero) {\n    isZero = var1 == 0x7ff;\n  }\n  if (!isZero) {\n    isZero = var4 == 0x7ff;\n  }\n  if (isZero) {\n    combinedBits = FUN_0800881c();\n  }\n  exponentBitsResult = (uint)(combinedBits >> 0x20);\n  var2 = var1 + var4;\n  var1 = exponentBitsResult ^ signBit;\n  exponentBitsResult = exponentBitsResult & ~(carryBit << 0x15);\n  signBit = signBit & ~(carryBit << 0x15);\n  isZero = ((uint)combinedBits | exponentBitsResult << 0xc) == 0;\n  if (!isZero) {\n    isZero = (floatingPointBits | signBit << 0xc) == 0;\n  }\n  exponentBitsResult = exponentBitsResult | 0x100000;\n  signBit = signBit | 0x100000;\n  if (isZero) {\n    floatingPointBits = (uint)combinedBits | floatingPointBits;\n    signBit = (var1 & 0x80000000 | exponentBitsResult) ^ signBit;\n    var1 = carryBit >> 1;\n    isNegOverflow = SBORROW4(var2,var1);\n    var3 = var2 - var1;\n    isZero = var3 == 0;\n    exponentBitsResult = var3;\n    if (!isZero && (int)var1 <= var2) {\n      isNegOverflow = SBORROW4(carryBit,var3);\n      exponentBitsResult = carryBit - var3;\n      isZero = carryBit == var3;\n    }\n    if (!isZero && (int)exponentBitsResult < 0 == isNegOverflow) {\n      signBit = signBit | var3 * 0x100000;\n    }\n    if (!isZero && (int)exponentBitsResult < 0 == isNegOverflow) {\n      return CONCAT44(signBit,floatingPointBits);\n    }\n    signBit = signBit | 0x100000;\n    carryBit = 0;\n    isNegOverflow = SBORROW4(var3,1);\n    var3 = var3 - 1;\n    isZero = var3 == 0;\n    var1 = var3;\n  }\n  else {\n    multiplicationResult = (combinedBits & 0xffffffff) * (ulonglong)floatingPointBits;\n    combinedBits = (combinedBits & 0xffffffff) * (ulonglong)signBit +\n             (ulonglong)exponentBitsResult * (ulonglong)floatingPointBits + (multiplicationResult >> 0x20);\n    var5 = (uint)combinedBits;\n    additionResult = (ulonglong)exponentBitsResult * (ulonglong)signBit + (combinedBits >> 0x20);\n    carryBit = (uint)additionResult;\n    exponentBitsResult = (uint)((ulonglong)additionResult >> 0x20);\n    if ((int)multiplicationResult != 0) {\n      var5 = var5 | 1;\n    }\n    var3 = (var2 + -0x3ff) - (uint)(exponentBitsResult < 0x200);\n    if (exponentBitsResult < 0x200) {\n      isZero = (var5 & 0x80000000) != 0;\n      var5 = var5 << 1;\n      additionResult = CONCAT44(exponentBitsResult * 2 + (uint)(CARRY4(carryBit,carryBit) || CARRY4(carryBit * 2,(uint)isZero)),\n                       carryBit * 2 + (uint)isZero);\n    }\n    signBit = var1 & 0x80000000 | (int)((ulonglong)additionResult >> 0x20) << 0xb | (uint)additionResult >> 0x15;\n    floatingPointBits = (uint)additionResult << 0xb | var5 >> 0x15;\n    carryBit = var5 * 0x800;\n    isNegative = 0xfc < var3;\n    isNegOverflow = SBORROW4(var3,0xfd);\n    exponentBitsResult = var3 - 0xfd;\n    isZero = exponentBitsResult == 0;\n    var1 = exponentBitsResult;\n    if (isNegative && !isZero) {\n      isNegative = 0x6ff < exponentBitsResult;\n      isNegOverflow = SBORROW4(exponentBitsResult,0x700);\n      var1 = var3 - 0x7fd;\n      isZero = exponentBitsResult == 0x700;\n    }\n    if (!isNegative || isZero) {\n      isZero = 0x7fffffff < carryBit;\n      if (carryBit == 0x80000000) {\n        isZero = (var5 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(signBit + var3 * 0x100000 + (uint)CARRY4(floatingPointBits,(uint)isZero),floatingPointBits + isZero\n                     );\n    }\n  }\n  if (!isZero && (int)var1 < 0 == isNegOverflow) {\n    return (ulonglong)(signBit & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  isNegative = SCARRY4(var3,0x36);\n  isZero = (int)(var3 + 0x36) < 0;\n  isNegOverflow = var3 == 0xffffffca;\n  if (isNegOverflow || isZero != isNegative) {\n    floatingPointBits = 0;\n  }\n  if (isNegOverflow || isZero != isNegative) {\n    signBit = signBit & 0x80000000;\n  }\n  if (isNegOverflow || isZero != isNegative) {\n    return CONCAT44(signBit,floatingPointBits);\n  }\n  var1 = -var3;\n  exponentBitsResult = var1 - 0x20;\n  if (0x1f < (int)var1) {\n    var3 = floatingPointBits >> (exponentBitsResult & 0xff) | signBit << (0x20 - exponentBitsResult & 0xff);\n    var1 = (signBit >> (exponentBitsResult & 0xff) & ~((signBit & 0x80000000) >> (exponentBitsResult & 0xff))) -\n            ((int)var3 >> 0x1f);\n    if ((carryBit | floatingPointBits << (0x20 - exponentBitsResult & 0xff) | var3 << 1) == 0) {\n      var1 = var1 & ~(var3 >> 0x1f);\n    }\n    return CONCAT44(signBit,var1) & 0x80000000ffffffff;\n  }\n  var2 = var1 - 0x14;\n  if (var2 == 0 || var2 < 0 != SCARRY4(exponentBitsResult,0xc)) {\n    var5 = floatingPointBits << (var3 + 0x20 & 0xff);\n    exponentBitsResult = floatingPointBits >> (var1 & 0xff) | signBit << (var3 + 0x20 & 0xff);\n    var3 = exponentBitsResult + -((int)var5 >> 0x1f);\n    if ((carryBit | var5 << 1) == 0) {\n      var3 = var3 & ~(var5 >> 0x1f);\n    }\n    return CONCAT44((signBit & 0x80000000) +\n                    ((signBit & 0x7fffffff) >> (var1 & 0xff)) +\n                    (uint)CARRY4(exponentBitsResult,-((int)var5 >> 0x1f)),var3);\n  }\n  var1 = 0xc - var2;\n  var3 = floatingPointBits << (var1 & 0xff);\n  var1 = floatingPointBits >> (0x20 - var1 & 0xff) | signBit << (var1 & 0xff);\n  exponentBitsResult = var1 + -((int)var3 >> 0x1f);\n  if ((carryBit | var3 << 1) == 0) {\n    exponentBitsResult = exponentBitsResult & ~(var3 >> 0x1f);\n  }\n  return CONCAT44((signBit & 0x80000000) + (uint)CARRY4(var1,-((int)var3 >> 0x1f)),exponentBitsResult);\n}\n\n",
            "renaming": {
                "FUN_08008640": "calculate_floating_point_number_08008640",
                "param_1": "exponentBits",
                "param_2": "mantissaBits",
                "param_3": "floatingPointBits",
                "param_4": "signBit",
                "uVar1": "multiplicationResult",
                "lVar2": "additionResult",
                "uVar3": "exponentBitsResult",
                "uVar4": "var1",
                "iVar5": "var2",
                "uVar6": "var3",
                "unaff_r5": "var4",
                "uVar7": "carryBit",
                "uVar8": "var5",
                "bVar9": "isZero",
                "bVar10": "isNegative",
                "bVar11": "isNegOverflow",
                "uVar12": "combinedBits"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08002638",
                "FUN_08009d78",
                "FUN_0800a5a0",
                "FUN_080046d0",
                "FUN_08001f00",
                "FUN_0800af78",
                "FUN_0800b2e8",
                "FUN_08004940",
                "FUN_0800a1bc",
                "FUN_0800a348",
                "FUN_0800056c",
                "FUN_080044e8",
                "FUN_08009b24",
                "FUN_08001994",
                "FUN_0800adf0",
                "FUN_08002c18"
            ],
            "called": [
                "FUN_0800881c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800881c": {
            "entrypoint": "0x0800881c",
            "current_name": "calculate_shifted_value_0800881c",
            "code": "\nulonglong calculate_shifted_value_0800881c(uint input_1,uint input_2,uint input_3,uint input_4)\n\n{\n  uint shifted_bit;\n  uint shifted_value;\n  uint masked_value;\n  uint result;\n  uint constant_value;\n  bool is_zero;\n  \n  masked_value = constant_value & input_4 >> 0x14;\n  if (shifted_value != constant_value && masked_value != constant_value) {\n    is_zero = (input_1 | input_2 << 1) == 0;\n    if (!is_zero) {\n      is_zero = (input_3 | input_4 << 1) == 0;\n    }\n    if (is_zero) {\n      return (ulonglong)((input_2 ^ input_4) & 0x80000000) << 0x20;\n    }\n    if (shifted_value == 0) {\n      result = input_2 & 0x80000000;\n      do {\n        shifted_bit = input_1 & 0x80000000;\n        input_1 = input_1 << 1;\n        input_2 = input_2 * 2 + (uint)(shifted_bit != 0);\n      } while ((input_2 & 0x100000) == 0);\n      input_2 = input_2 | result;\n      if (masked_value != 0) {\n        return CONCAT44(input_2,input_1);\n      }\n    }\n    do {\n      masked_value = input_3 & 0x80000000;\n      input_3 = input_3 << 1;\n      input_4 = input_4 * 2 + (uint)(masked_value != 0);\n    } while ((input_4 & 0x100000) == 0);\n    return CONCAT44(input_2,input_1);\n  }\n  is_zero = (input_1 | input_2 << 1) == 0;\n  if (is_zero) {\n    input_2 = input_4;\n    input_1 = input_3;\n  }\n  if (!is_zero) {\n    is_zero = (input_3 | input_4 << 1) == 0;\n  }\n  result = input_2;\n  if (((!is_zero) && ((shifted_value != constant_value || ((input_1 | input_2 << 0xc) == 0)))) &&\n     ((masked_value != constant_value || (input_1 = input_3, result = input_4, (input_3 | input_4 << 0xc) == 0)))) {\n    return (ulonglong)((input_2 ^ input_4) & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  return CONCAT44(result,input_1) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_0800881c": "calculate_shifted_value_0800881c",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "shifted_bit",
                "unaff_r4": "shifted_value",
                "uVar2": "masked_value",
                "uVar3": "result",
                "in_r12": "constant_value",
                "bVar4": "is_zero"
            },
            "calling": [
                "FUN_08008640"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008894": {
            "entrypoint": "0x08008894",
            "current_name": "calculate_floating_point_08008894",
            "code": "\nulonglong calculateFloatingPoint_08008894(undefined4 exponent,uint significand_high,uint significand_low,uint sign)\n\n{\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  uint temp7;\n  int difference;\n  uint exponent_diff;\n  uint sign_diff;\n  uint fixed_point_a;\n  uint fixed_point_b;\n  uint fixed_point_c;\n  uint fixed_point_d;\n  bool is_zero;\n  bool is_equal;\n  bool overflow_indication;\n  undefined8 result;\n  \n  result = CONCAT44(significand_high,exponent);\n  fixed_point_d = 0x7ff;\n  temp7 = significand_high >> 0x14 & 0x7ff;\n  is_zero = temp7 == 0;\n  if (!is_zero) {\n    sign_diff = sign >> 0x14 & 0x7ff;\n    is_zero = sign_diff == 0;\n  }\n  if (!is_zero) {\n    is_zero = temp7 == 0x7ff;\n  }\n  if (!is_zero) {\n    is_zero = sign_diff == 0x7ff;\n  }\n  if (is_zero) {\n    result = FUN_08008a02();\n  }\n  exponent_diff = (uint)((ulonglong)result >> 0x20);\n  fixed_point_b = (uint)result;\n  difference = temp7 - sign_diff;\n  if ((significand_low | sign << 0xc) == 0) {\n    temp7 = (exponent_diff ^ sign) & 0x80000000 | exponent_diff & 0xfffff;\n    overflow_indication = SCARRY4(difference,fixed_point_d >> 1);\n    exponent_diff = difference + (fixed_point_d >> 1);\n    is_zero = (int)exponent_diff < 0;\n    is_equal = exponent_diff == 0;\n    if (!is_equal && is_zero == overflow_indication) {\n      overflow_indication = SBORROW4(fixed_point_d,exponent_diff);\n      is_zero = (int)(fixed_point_d - exponent_diff) < 0;\n      is_equal = fixed_point_d == exponent_diff;\n    }\n    if (!is_equal && is_zero == overflow_indication) {\n      temp7 = temp7 | exponent_diff * 0x100000;\n    }\n    if (!is_equal && is_zero == overflow_indication) {\n      return CONCAT44(temp7,fixed_point_b);\n    }\n    temp7 = temp7 | 0x100000;\n    fixed_point_d = 0;\n    is_equal = SBORROW4(exponent_diff,1);\n    exponent_diff = exponent_diff - 1;\n    is_zero = exponent_diff == 0;\n    temp3 = exponent_diff;\n  }\n  else {\n    temp3 = (sign << 0xc) >> 4 | 0x10000000 | significand_low >> 0x18;\n    fixed_point_d = significand_low << 8;\n    fixed_point_a = (exponent_diff << 0xc) >> 4 | 0x10000000 | fixed_point_b >> 0x18;\n    fixed_point_b = fixed_point_b * 0x100;\n    temp7 = (exponent_diff ^ sign) & 0x80000000;\n    is_zero = temp3 <= fixed_point_a;\n    if (fixed_point_a == temp3) {\n      is_zero = fixed_point_d <= fixed_point_b;\n    }\n    difference = difference + (uint)is_zero;\n    exponent_diff = difference + 0x3fd;\n    if (is_zero == false) {\n      temp3 = temp3 >> 1;\n      fixed_point_d = (uint)((significand_low >> 0x18 & 1) != 0) << 0x1f | fixed_point_d >> 1;\n    }\n    fixed_point_c = fixed_point_b - fixed_point_d;\n    fixed_point_a = (fixed_point_a - temp3) - (uint)(fixed_point_b < fixed_point_d);\n    temp4 = temp3 >> 1;\n    temp1 = (uint)((temp3 & 1) != 0) << 0x1f | fixed_point_d >> 1;\n    fixed_point_b = 0x100000;\n    temp3 = 0x80000;\n    while( true ) {\n      is_zero = temp1 <= fixed_point_c;\n      if (temp4 < fixed_point_a || fixed_point_a - temp4 < (uint)is_zero) {\n        fixed_point_c = fixed_point_c - temp1;\n        fixed_point_b = fixed_point_b | temp3;\n        fixed_point_a = (fixed_point_a - temp4) - (uint)!is_zero;\n      }\n      temp5 = temp4 >> 1;\n      temp1 = (uint)((temp4 & 1) != 0) << 0x1f | temp1 >> 1;\n      is_equal = temp1 <= fixed_point_c;\n      is_zero = fixed_point_a - temp5 < (uint)is_equal;\n      fixed_point_d = fixed_point_a;\n      if (temp5 < fixed_point_a || is_zero) {\n        fixed_point_c = fixed_point_c - temp1;\n        fixed_point_d = (fixed_point_a - temp5) - (uint)!is_equal;\n      }\n      if (temp5 < fixed_point_a || is_zero) {\n        fixed_point_b = fixed_point_b | temp3 >> 1;\n      }\n      fixed_point_a = temp4 >> 2;\n      temp2 = (uint)((temp5 & 1) != 0) << 0x1f | temp1 >> 1;\n      is_equal = temp2 <= fixed_point_c;\n      is_zero = fixed_point_d - fixed_point_a < (uint)is_equal;\n      temp5 = fixed_point_d;\n      if (fixed_point_a < fixed_point_d || is_zero) {\n        fixed_point_c = fixed_point_c - temp2;\n        temp5 = (fixed_point_d - fixed_point_a) - (uint)!is_equal;\n      }\n      if (fixed_point_a < fixed_point_d || is_zero) {\n        fixed_point_b = fixed_point_b | temp3 >> 2;\n      }\n      temp6 = temp4 >> 3;\n      temp1 = (uint)((fixed_point_a & 1) != 0) << 0x1f | temp2 >> 1;\n      is_equal = temp1 <= fixed_point_c;\n      is_zero = temp5 - temp6 < (uint)is_equal;\n      fixed_point_a = temp5;\n      if (temp6 < temp5 || is_zero) {\n        fixed_point_c = fixed_point_c - temp1;\n        fixed_point_a = (temp5 - temp6) - (uint)!is_equal;\n      }\n      if (temp6 < temp5 || is_zero) {\n        fixed_point_b = fixed_point_b | temp3 >> 3;\n      }\n      fixed_point_d = fixed_point_a | fixed_point_c;\n      if (fixed_point_d == 0) break;\n      fixed_point_a = fixed_point_a << 4 | fixed_point_c >> 0x1c;\n      fixed_point_c = fixed_point_c << 4;\n      temp4 = temp4 & 0xfffffff8 | temp1 >> 0x1d;\n      temp1 = (temp2 >> 1) << 3;\n      temp3 = temp3 >> 4;\n      if (temp3 == 0) {\n        temp6 = temp4;\n        if ((temp7 & 0x100000) != 0) goto LAB_080089b2;\n        temp7 = temp7 | fixed_point_b;\n        fixed_point_b = 0;\n        temp3 = 0x80000000;\n      }\n    }\n    if ((temp7 & 0x100000) == 0) {\n      temp7 = temp7 | fixed_point_b;\n      fixed_point_b = 0;\n    }\nLAB_080089b2:\n    overflow_indication = 0xfc < exponent_diff;\n    is_equal = SBORROW4(exponent_diff,0xfd);\n    temp4 = difference + 0x300;\n    is_zero = temp4 == 0;\n    temp3 = temp4;\n    if (overflow_indication && !is_zero) {\n      overflow_indication = 0x6ff < temp4;\n      is_equal = SBORROW4(temp4,0x700);\n      temp3 = difference - 0x400;\n      is_zero = temp4 == 0x700;\n    }\n    if (!overflow_indication || is_zero) {\n      is_zero = temp6 <= fixed_point_a;\n      if (fixed_point_a == temp6) {\n        is_zero = temp1 <= fixed_point_c;\n      }\n      if (fixed_point_a == temp6 && fixed_point_c == temp1) {\n        is_zero = (fixed_point_b & 1) != 0;\n      }\n      return CONCAT44(temp7 + exponent_diff * 0x100000 + (uint)CARRY4(fixed_point_b,(uint)is_zero),fixed_point_b + is_zero);\n    }\n  }\n  if (!is_zero && (int)temp3 < 0 == is_equal) {\n    return (ulonglong)(temp7 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  overflow_indication = SCARRY4(exponent_diff,0x36);\n  is_zero = (int)(exponent_diff + 0x36) < 0;\n  is_equal = exponent_diff == 0xffffffca;\n  if (is_equal || is_zero != overflow_indication) {\n    fixed_point_b = 0;\n  }\n  if (is_equal || is_zero != overflow_indication) {\n    temp7 = temp7 & 0x80000000;\n  }\n  if (is_equal || is_zero != overflow_indication) {\n    return CONCAT44(temp7,fixed_point_b);\n  }\n  temp3 = -exponent_diff;\n  fixed_point_a = temp3 - 0x20;\n  if (0x1f < (int)temp3) {\n    temp3 = fixed_point_b >> (fixed_point_a & 0xff) | temp7 << (0x20 - fixed_point_a & 0xff);\n    exponent_diff = (temp7 >> (fixed_point_a & 0xff) & ~((temp7 & 0x80000000) >> (fixed_point_a & 0xff))) -\n            ((int)temp3 >> 0x1f);\n    if ((fixed_point_d | fixed_point_b << (0x20 - fixed_point_a & 0xff) | temp3 << 1) == 0) {\n      exponent_diff = exponent_diff & ~(temp3 >> 0x1f);\n    }\n    return CONCAT44(temp7,exponent_diff) & 0x80000000ffffffff;\n  }\n  difference = temp3 - 0x14;\n  if (difference != 0 && difference < 0 == SCARRY4(fixed_point_a,0xc)) {\n    exponent_diff = 0xc - difference;\n    temp3 = fixed_point_b << (exponent_diff & 0xff);\n    fixed_point_b = fixed_point_b >> (0x20 - exponent_diff & 0xff) | temp7 << (exponent_diff & 0xff);\n    exponent_diff = fixed_point_b + -((int)temp3 >> 0x1f);\n    if ((fixed_point_d | temp3 << 1) == 0) {\n      exponent_diff = exponent_diff & ~(temp3 >> 0x1f);\n    }\n    return CONCAT44((temp7 & 0x80000000) + (uint)CARRY4(fixed_point_b,-((int)temp3 >> 0x1f)),exponent_diff);\n  }\n  fixed_point_a = fixed_point_b << (exponent_diff + 0x20 & 0xff);\n  fixed_point_b = fixed_point_b >> (temp3 & 0xff) | temp7 << (exponent_diff + 0x20 & 0xff);\n  exponent_diff = fixed_point_b + -((int)fixed_point_a >> 0x1f);\n  if ((fixed_point_d | fixed_point_a << 1) == 0) {\n    exponent_diff = exponent_diff & ~(fixed_point_a >> 0x1f);\n  }\n  return CONCAT44((temp7 & 0x80000000) +\n                  ((temp7 & 0x7fffffff) >> (temp3 & 0xff)) +\n                  (uint)CARRY4(fixed_point_b,-((int)fixed_point_a >> 0x1f)),exponent_diff);\n}\n\n",
            "renaming": {
                "FUN_08008894": "calculate_floating_point_08008894",
                "param_1": "exponent",
                "param_2": "significand_high",
                "param_3": "significand_low",
                "param_4": "sign",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "uVar3": "temp3",
                "uVar4": "temp4",
                "uVar5": "temp5",
                "uVar6": "temp6",
                "uVar7": "temp7",
                "iVar8": "difference",
                "uVar9": "exponent_diff",
                "unaff_r5": "sign_diff",
                "uVar10": "fixed_point_a",
                "uVar11": "fixed_point_b",
                "uVar12": "fixed_point_c",
                "uVar13": "fixed_point_d",
                "bVar14": "is_zero",
                "bVar15": "is_equal",
                "bVar16": "overflow_indication",
                "uVar17": "result"
            },
            "calling": [
                "FUN_080098d0",
                "FUN_08003004",
                "FUN_0800a1bc",
                "FUN_080005b4",
                "FUN_08001994",
                "FUN_0800af78",
                "FUN_08009990"
            ],
            "called": [
                "FUN_08008a02"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008a02": {
            "entrypoint": "0x08008a02",
            "current_name": "extract_bits_08008a02",
            "code": "\nulonglong extractBits_08008a02(uint source,uint value,uint dest,uint mask)\n\n{\n  uint sourceBit;\n  uint maskCopy;\n  uint shiftedMask;\n  uint temp;\n  uint originalMask;\n  bool isZero;\n  \n  shiftedMask = originalMask & mask >> 0x14;\n  temp = value;\n  if (maskCopy != originalMask || shiftedMask != originalMask) {\n    if (maskCopy == originalMask) {\n      if (((source | value << 0xc) == 0) && (source = dest, temp = mask, shiftedMask != originalMask)\n         ) {\nLAB_08008874:\n        return (ulonglong)((value ^ mask) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n    }\n    else if (shiftedMask == originalMask) {\n      source = dest;\n      temp = mask;\n      if ((dest | mask << 0xc) == 0) {\nLAB_08008838:\n        return (ulonglong)((value ^ mask) & 0x80000000) << 0x20;\n      }\n    }\n    else {\n      isZero = (source | value << 1) == 0;\n      if (!isZero) {\n        isZero = (dest | mask << 1) == 0;\n      }\n      if (!isZero) {\n        if (maskCopy == 0) {\n          temp = value & 0x80000000;\n          do {\n            sourceBit = source & 0x80000000;\n            source = source << 1;\n            value = value * 2 + (uint)(sourceBit != 0);\n          } while ((value & 0x100000) == 0);\n          value = value | temp;\n          if (shiftedMask != 0) {\n            return CONCAT44(value,source);\n          }\n        }\n        do {\n          temp = dest & 0x80000000;\n          dest = dest << 1;\n          mask = mask * 2 + (uint)(temp != 0);\n        } while ((mask & 0x100000) == 0);\n        return CONCAT44(value,source);\n      }\n      if ((source | value << 1) != 0) goto LAB_08008874;\n      if ((dest | mask << 1) != 0) goto LAB_08008838;\n    }\n  }\n  return CONCAT44(temp,source) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_08008a02": "extract_bits_08008a02",
                "param_1": "source",
                "param_2": "value",
                "param_3": "dest",
                "param_4": "mask",
                "uVar1": "sourceBit",
                "unaff_r4": "maskCopy",
                "uVar2": "shiftedMask",
                "uVar3": "temp",
                "in_r12": "originalMask",
                "bVar4": "isZero"
            },
            "calling": [
                "FUN_08008894"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008a74": {
            "entrypoint": "0x08008a74",
            "current_name": "check_equality_08008a74",
            "code": "\nuint checkEquality_08008a74(uint value1,uint value2,uint value3,uint value4)\n\n{\n  uint temp;\n  bool isZero;\n  bool isPositive;\n  \n  if (((int)(value2 << 1) >> 0x15 == -1 || (int)(value4 << 1) >> 0x15 == -1) &&\n     ((((int)(value2 << 1) >> 0x15 == -1 && ((value1 | value2 << 0xc) != 0)) ||\n      (((int)(value4 << 1) >> 0x15 == -1 && ((value3 | value4 << 0xc) != 0)))))) {\n    return 1;\n  }\n  isZero = (value1 | value2 << 1) == 0;\n  if (isZero) {\n    isZero = (value3 | value4 << 1) == 0;\n  }\n  if (!isZero) {\n    isZero = value2 == value4;\n  }\n  if (isZero) {\n    isZero = value1 == value3;\n  }\n  if (!isZero) {\n    temp = value2 ^ value4;\n    isZero = temp == 0;\n    if (-1 < (int)temp) {\n      isZero = value2 == value4;\n    }\n    isPositive = -1 < (int)temp && value4 <= value2;\n    if (isZero) {\n      isPositive = value3 <= value1;\n    }\n    value4 = (int)value4 >> 0x1f;\n    if (!isPositive) {\n      value4 = ~value4;\n    }\n    return value4 | 1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008a74": "check_equality_08008a74",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4",
                "uVar1": "temp",
                "bVar2": "isZero",
                "bVar3": "isPositive"
            },
            "calling": [
                "FUN_08008b00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008af0": {
            "entrypoint": "0x08008af0",
            "current_name": "execute_function_08008af0",
            "code": "\nvoid executeFunction_08008af0(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  FUN_08008b00(arg3,arg4,arg1,arg2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008af0": "execute_function_08008af0",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "calling": [
                "FUN_08008b4c",
                "FUN_08008b60"
            ],
            "called": [
                "FUN_08008b00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b00": {
            "entrypoint": "0x08008b00",
            "current_name": "initialize_function_08008b00",
            "code": "\nundefined4 initializeFunction_08008b00(undefined4 input)\n\n{\n  FUN_08008a74();\n  return input;\n}\n\n",
            "renaming": {
                "FUN_08008b00": "initialize_function_08008b00",
                "param_1": "input"
            },
            "calling": [
                "FUN_08008b24",
                "FUN_08008b10",
                "FUN_08008af0"
            ],
            "called": [
                "FUN_08008a74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b10": {
            "entrypoint": "0x08008b10",
            "current_name": "check_if_valid_input_08008b10",
            "code": "\nbool checkIfValidInput_08008b10(void)\n\n{\n  char inputCharacter;\n  \n  FUN_08008b00();\n  return inputCharacter != '\\0';\n}\n\n",
            "renaming": {
                "FUN_08008b10": "check_if_valid_input_08008b10",
                "in_ZR": "inputCharacter"
            },
            "calling": [
                "FUN_08009d78",
                "FUN_0800a5a0"
            ],
            "called": [
                "FUN_08008b00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b24": {
            "entrypoint": "0x08008b24",
            "current_name": "check_if_string_empty_08008b24",
            "code": "\nbool check_if_string_empty_08008b24(void)\n\n{\n  char input_character;\n  \n  FUN_08008b00();\n  return input_character == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08008b24": "check_if_string_empty_08008b24",
                "in_CY": "input_character"
            },
            "calling": [
                "FUN_080098d0",
                "FUN_08003004",
                "FUN_08009b24"
            ],
            "called": [
                "FUN_08008b00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b4c": {
            "entrypoint": "0x08008b4c",
            "current_name": "check_if_zero_or_carry_08008b4c",
            "code": "\nbool check_if_zero_or_carry_08008b4c(void)\n\n{\n  undefined is_zero;\n  undefined has_carry;\n  \n  FUN_08008af0();\n  return !(bool)has_carry || (bool)is_zero;\n}\n\n",
            "renaming": {
                "FUN_08008b4c": "check_if_zero_or_carry_08008b4c",
                "in_ZR": "is_zero",
                "in_CY": "has_carry"
            },
            "calling": [
                "FUN_0800a5a0"
            ],
            "called": [
                "FUN_08008af0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b60": {
            "entrypoint": "0x08008b60",
            "current_name": "check_if_null_terminated_08008b60",
            "code": "\nbool checkIfNullTerminated_08008b60(void)\n\n{\n  char inputChar;\n  \n  FUN_08008af0();\n  return inputChar == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08008b60": "check_if_null_terminated_08008b60",
                "in_CY": "inputChar"
            },
            "calling": [
                "FUN_080094c0",
                "FUN_08003004",
                "FUN_08009318",
                "FUN_0800af78"
            ],
            "called": [
                "FUN_08008af0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b74": {
            "entrypoint": "0x08008b74",
            "current_name": "check_params_validity_08008b74",
            "code": "\nundefined4 check_params_validity_08008b74(uint input_1,int input_2,uint input_3,int input_4)\n\n{\n  if ((((input_2 << 1) >> 0x15 != -1) || ((input_1 | input_2 << 0xc) == 0)) &&\n     (((input_4 << 1) >> 0x15 != -1 || ((input_3 | input_4 << 0xc) == 0)))) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08008b74": "check_params_validity_08008b74",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4"
            },
            "calling": [
                "FUN_080098d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008ba0": {
            "entrypoint": "0x08008ba0",
            "current_name": "unshift_bits_08008ba0",
            "code": "\nuint unshift_bits_08008ba0(uint value,uint shift)\n\n{\n  uint result;\n  int shifted_value_times_two;\n  uint shifted_value_diff;\n  \n  shifted_value_times_two = shift * 2 + 0x200000;\n  if (shift * 2 < 0xffe00000) {\n    if (-1 < shifted_value_times_two) {\n      return 0;\n    }\n    result = shifted_value_times_two >> 0x15;\n    shifted_value_diff = -result - 0x3e1;\n    if (result < 0xfffffc20 && shifted_value_diff != 0) {\n      result = (shift << 0xb | 0x80000000 | value >> 0x15) >> (shifted_value_diff & 0xff);\n      if ((shift & 0x80000000) != 0) {\n        result = -result;\n      }\n      return result;\n    }\n  }\n  else if ((value | shift << 0xc) != 0) {\n    return 0;\n  }\n  shift = shift & 0x80000000;\n  if (shift == 0) {\n    shift = 0x7fffffff;\n  }\n  return shift;\n}\n\n",
            "renaming": {
                "FUN_08008ba0": "unshift_bits_08008ba0",
                "param_1": "value",
                "param_2": "shift",
                "uVar1": "result",
                "iVar2": "shifted_value_times_two",
                "uVar3": "shifted_value_diff"
            },
            "calling": [
                "FUN_080095b8",
                "FUN_08003004",
                "FUN_08009d78",
                "FUN_0800a348",
                "FUN_0800a5a0",
                "FUN_080005b4",
                "FUN_0800adf0",
                "FUN_08002c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008bf0": {
            "entrypoint": "0x08008bf0",
            "current_name": "compute_modified_value_08008bf0",
            "code": "\nuint computeModifiedValue_08008bf0(uint inputValue,uint multiplier)\n\n{\n  int tempValue;\n  uint shiftAmount;\n  \n  if ((multiplier & 0x80000000) != 0) {\n    return 0;\n  }\n  tempValue = multiplier * 2 + 0x200000;\n  if (multiplier * 2 < 0xffe00000) {\n    if (-1 < tempValue) {\n      return 0;\n    }\n    shiftAmount = -(tempValue >> 0x15) - 0x3e1;\n    if (-1 < (int)shiftAmount) {\n      return (multiplier << 0xb | 0x80000000 | inputValue >> 0x15) >> (shiftAmount & 0xff);\n    }\n  }\n  else if ((inputValue | multiplier << 0xc) != 0) {\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008bf0": "compute_modified_value_08008bf0",
                "param_1": "inputValue",
                "param_2": "multiplier",
                "iVar1": "tempValue",
                "uVar2": "shiftAmount"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_08003004",
                "FUN_08002408",
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_08001994",
                "FUN_08001f00",
                "FUN_08002c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008c30": {
            "entrypoint": "0x08008c30",
            "current_name": "calculate_float_value_08008c30",
            "code": "\nuint calculateFloatValue_08008c30(uint input1,uint input2)\n\n{\n  uint result;\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  bool isZero;\n  bool isLessThan;\n  \n  temp1 = input2 * 2;\n  isLessThan = temp1 < 0x70000000;\n  temp2 = temp1 + 0x90000000;\n  result = temp2;\n  if (!isLessThan) {\n    temp3 = temp1 + 0x8fe00000;\n    result = temp3;\n  }\n  isZero = result == 0;\n  if (!isLessThan && temp2 >= 0x200000) {\n    isZero = temp3 == 0x1fc00000;\n  }\n  if (((isLessThan || temp2 < 0x200000) || 0x1fc00000 < temp3) || isZero) {\n    if ((input2 & 0x40000000) != 0) {\n      if (((int)temp1 >> 0x15 == -1) && ((input1 | input2 << 0xc) != 0)) {\n        return 0x7fc00000;\n      }\n      return input2 & 0x80000000 | 0x7f800000;\n    }\n    if ((int)(temp1 + 0x92e00000) < 0 != isOverflow(temp2,0x2e00000)) {\n      return input2 & 0x80000000;\n    }\n    temp1 = 0x18 - (temp1 + 0x92e00000 >> 0x15);\n    result = input1 >> (temp1 & 0xff);\n    if (input1 << (0x20 - temp1 & 0xff) != 0) {\n      result = result | 1;\n    }\n    temp2 = input2 & 0x1fffff | 0x100000;\n    input1 = result | temp2 << (0x20 - temp1 & 0xff);\n    temp2 = (temp2 >> (temp1 & 0xff)) << 1;\n  }\n  result = (input2 & 0x80000000 | input1 >> 0x1d) + temp2 * 4 + (uint)(0x7fffffff < input1 * 8);\n  if (input1 * 8 == 0x80000000) {\n    result = result & 0xfffffffe;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08008c30": "calculate_float_value_08008c30",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "result",
                "uVar2": "temp1",
                "uVar3": "temp2",
                "in_r12": "temp3",
                "bVar4": "isZero",
                "bVar5": "isLessThan",
                "SCARRY4": "isOverflow"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08002638",
                "FUN_08004940",
                "FUN_0800056c",
                "FUN_080005b4",
                "FUN_080044e8",
                "FUN_080046d0",
                "FUN_08002978",
                "FUN_08001994",
                "FUN_08001f00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008cd8": {
            "entrypoint": "0x08008cd8",
            "current_name": "calculate_float_08008cd8",
            "code": "\nuint calculateFloat_08008cd8(uint x,uint y,undefined4 z,uint w)\n\n{\n  int leftShiftedX;\n  int leftShiftedY;\n  uint flippedY;\n  uint flippedX;\n  uint shiftedX;\n  uint shiftedY;\n  uint diff;\n  bool isEqual;\n  \n  flippedY = y ^ 0x80000000;\n  shiftedX = x << 1;\n  isEqual = shiftedX == 0;\n  if (!isEqual) {\n    w = y << 1;\n    isEqual = w == 0;\n  }\n  if (!isEqual) {\n    isEqual = shiftedX == w;\n  }\n  leftShiftedX = (int)shiftedX >> 0x18;\n  if (!isEqual) {\n    isEqual = leftShiftedX == -1;\n  }\n  if (!isEqual) {\n    isEqual = (int)w >> 0x18 == -1;\n  }\n  if (isEqual) {\n    leftShiftedY = (int)(y << 1) >> 0x18;\n    if (leftShiftedX == -1 || leftShiftedY == -1) {\n      shiftedX = flippedY;\n      if (leftShiftedX == -1) {\n        shiftedX = x;\n      }\n      if (leftShiftedX != -1 || leftShiftedY != -1) {\n        flippedY = shiftedX;\n      }\n      isEqual = (shiftedX & 0x7fffff) == 0;\n      if (isEqual) {\n        isEqual = (flippedY & 0x7fffff) == 0;\n      }\n      if (isEqual) {\n        isEqual = shiftedX == flippedY;\n      }\n      if (!isEqual) {\n        shiftedX = shiftedX | 0x400000;\n      }\n      return shiftedX;\n    }\n    if (((x ^ flippedY) & 0x7fffffff) != 0) {\n      if (shiftedX == 0) {\n        x = flippedY;\n      }\n      return x;\n    }\n    if (x != flippedY) {\n      return 0;\n    }\n    if ((shiftedX & 0xff000000) == 0) {\n      flippedY = x << 1;\n      if ((x & 0x80000000) != 0) {\n        flippedY = flippedY | 0x80000000;\n      }\n      return flippedY;\n    }\n    if (shiftedX < 0xfe000000) {\n      return x + 0x800000;\n    }\n    x = x & 0x80000000;\nLAB_08008e12:\n    return x | 0x7f800000;\n  }\n  shiftedX = shiftedX >> 0x18;\n  w = w >> 0x18;\n  diff = w - shiftedX;\n  isEqual = diff != 0;\n  shiftedY = shiftedX;\n  if (isEqual && shiftedX <= w) {\n    shiftedY = shiftedX + diff;\n  }\n  if (isEqual && shiftedX <= w) {\n    flippedY = flippedY ^ x;\n  }\n  if (isEqual && shiftedX <= w) {\n    x = x ^ flippedY;\n  }\n  if (isEqual && shiftedX <= w) {\n    flippedY = flippedY ^ x;\n  }\n  if (w < shiftedX) {\n    diff = -diff;\n  }\n  if (0x19 < diff) {\n    return x;\n  }\n  shiftedX = x & 0xffffff | 0x800000;\n  if ((x & 0x80000000) != 0) {\n    shiftedX = -shiftedX;\n  }\n  flippedX = flippedY & 0xffffff | 0x800000;\n  if ((flippedY & 0x80000000) != 0) {\n    flippedX = -flippedX;\n  }\n  if (shiftedY == diff) {\n    flippedX = flippedX ^ 0x800000;\n    if (shiftedY == 0) {\n      shiftedX = shiftedX ^ 0x800000;\n      shiftedY = 1;\n    }\n    else {\n      diff = diff - 1;\n    }\n  }\n  shiftedX = shiftedX + ((int)flippedX >> (diff & 0xff));\n  flippedX = flippedX << (0x20 - diff & 0xff);\n  x = shiftedX & 0x80000000;\n  if ((int)shiftedX < 0) {\n    isEqual = flippedX != 0;\n    flippedX = -flippedX;\n    shiftedX = -shiftedX - (uint)isEqual;\n  }\n  if (shiftedX < 0x800000) {\n    flippedY = flippedX & 0x80000000;\n    flippedX = flippedX << 1;\n    shiftedX = shiftedX * 2 + (uint)(flippedY != 0);\n    flippedY = shiftedY - 2;\n    if (shiftedY - 1 == 0 || shiftedX < 0x800000) {\n      diff = LZCOUNT(shiftedX) - 8;\n      shiftedX = shiftedX << (diff & 0xff);\n      if ((int)flippedY < (int)diff) {\n        shiftedX = shiftedX >> (-(flippedY - diff) & 0xff);\n      }\n      else {\n        shiftedX = shiftedX + (flippedY - diff) * 0x800000;\n      }\n      return shiftedX | x;\n    }\n  }\n  else {\n    flippedY = shiftedY - 1;\n    if (0xffffff < shiftedX) {\n      flippedY = shiftedX & 1;\n      shiftedX = shiftedX >> 1;\n      flippedX = (uint)(flippedY != 0) << 0x1f | flippedX >> 1;\n      flippedY = shiftedY;\n      if (0xfd < shiftedY) goto LAB_08008e12;\n    }\n  }\n  shiftedX = shiftedX + flippedY * 0x800000 + (uint)(0x7fffffff < flippedX);\n  if (flippedX == 0x80000000) {\n    shiftedX = shiftedX & 0xfffffffe;\n  }\n  return shiftedX | x;\n}\n\n",
            "renaming": {
                "FUN_08008cd8": "calculate_float_08008cd8",
                "param_1": "x",
                "param_2": "y",
                "param_3": "z",
                "param_4": "w",
                "iVar1": "leftShiftedX",
                "iVar2": "leftShiftedY",
                "uVar3": "flippedY",
                "uVar4": "flippedX",
                "uVar5": "shiftedX",
                "uVar6": "shiftedY",
                "uVar7": "diff",
                "bVar8": "isEqual"
            },
            "calling": [
                "FUN_08002908",
                "FUN_08003004",
                "FUN_08004940",
                "FUN_08002408",
                "FUN_080005b4",
                "FUN_08002978",
                "FUN_080028bc",
                "FUN_08001f00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008cdc": {
            "entrypoint": "0x08008cdc",
            "current_name": "calculate_float_08008cdc",
            "code": "\nuint calculateFloat_08008cdc(uint input1,uint input2,undefined4 param3,uint param4)\n\n{\n  int shiftCount1;\n  int shiftCount2;\n  uint tempVar1;\n  uint tempVar2;\n  uint tempVar3;\n  uint tempVar4;\n  bool isEqual;\n  \n  tempVar2 = input1 << 1;\n  isEqual = tempVar2 == 0;\n  if (!isEqual) {\n    param4 = input2 << 1;\n    isEqual = param4 == 0;\n  }\n  if (!isEqual) {\n    isEqual = tempVar2 == param4;\n  }\n  shiftCount1 = (int)tempVar2 >> 0x18;\n  if (!isEqual) {\n    isEqual = shiftCount1 == -1;\n  }\n  if (!isEqual) {\n    isEqual = (int)param4 >> 0x18 == -1;\n  }\n  if (isEqual) {\n    shiftCount2 = (int)(input2 << 1) >> 0x18;\n    if (shiftCount1 == -1 || shiftCount2 == -1) {\n      tempVar2 = input2;\n      if (shiftCount1 == -1) {\n        tempVar2 = input1;\n      }\n      if (shiftCount1 != -1 || shiftCount2 != -1) {\n        input2 = tempVar2;\n      }\n      isEqual = (tempVar2 & 0x7fffff) == 0;\n      if (isEqual) {\n        isEqual = (input2 & 0x7fffff) == 0;\n      }\n      if (isEqual) {\n        isEqual = tempVar2 == input2;\n      }\n      if (!isEqual) {\n        tempVar2 = tempVar2 | 0x400000;\n      }\n      return tempVar2;\n    }\n    if (((input1 ^ input2) & 0x7fffffff) != 0) {\n      if (tempVar2 == 0) {\n        input1 = input2;\n      }\n      return input1;\n    }\n    if (input1 != input2) {\n      return 0;\n    }\n    if ((tempVar2 & 0xff000000) == 0) {\n      tempVar2 = input1 << 1;\n      if ((input1 & 0x80000000) != 0) {\n        tempVar2 = tempVar2 | 0x80000000;\n      }\n      return tempVar2;\n    }\n    if (tempVar2 < 0xfe000000) {\n      return input1 + 0x800000;\n    }\n    input1 = input1 & 0x80000000;\nLAB_08008e12:\n    return input1 | 0x7f800000;\n  }\n  tempVar2 = tempVar2 >> 0x18;\n  param4 = param4 >> 0x18;\n  tempVar4 = param4 - tempVar2;\n  isEqual = tempVar4 != 0;\n  tempVar3 = tempVar2;\n  if (isEqual && tempVar2 <= param4) {\n    tempVar3 = tempVar2 + tempVar4;\n  }\n  if (isEqual && tempVar2 <= param4) {\n    input2 = input2 ^ input1;\n  }\n  if (isEqual && tempVar2 <= param4) {\n    input1 = input1 ^ input2;\n  }\n  if (isEqual && tempVar2 <= param4) {\n    input2 = input2 ^ input1;\n  }\n  if (param4 < tempVar2) {\n    tempVar4 = -tempVar4;\n  }\n  if (0x19 < tempVar4) {\n    return input1;\n  }\n  tempVar2 = input1 & 0xffffff | 0x800000;\n  if ((input1 & 0x80000000) != 0) {\n    tempVar2 = -tempVar2;\n  }\n  tempVar1 = input2 & 0xffffff | 0x800000;\n  if ((input2 & 0x80000000) != 0) {\n    tempVar1 = -tempVar1;\n  }\n  if (tempVar3 == tempVar4) {\n    tempVar1 = tempVar1 ^ 0x800000;\n    if (tempVar3 == 0) {\n      tempVar2 = tempVar2 ^ 0x800000;\n      tempVar3 = 1;\n    }\n    else {\n      tempVar4 = tempVar4 - 1;\n    }\n  }\n  tempVar2 = tempVar2 + ((int)tempVar1 >> (tempVar4 & 0xff));\n  tempVar1 = tempVar1 << (0x20 - tempVar4 & 0xff);\n  input1 = tempVar2 & 0x80000000;\n  if ((int)tempVar2 < 0) {\n    isEqual = tempVar1 != 0;\n    tempVar1 = -tempVar1;\n    tempVar2 = -tempVar2 - (uint)isEqual;\n  }\n  if (tempVar2 < 0x800000) {\n    tempVar4 = tempVar1 & 0x80000000;\n    tempVar1 = tempVar1 << 1;\n    tempVar2 = tempVar2 * 2 + (uint)(tempVar4 != 0);\n    tempVar4 = tempVar3 - 2;\n    if (tempVar3 - 1 == 0 || tempVar2 < 0x800000) {\n      tempVar3 = LZCOUNT(tempVar2) - 8;\n      tempVar2 = tempVar2 << (tempVar3 & 0xff);\n      if ((int)tempVar4 < (int)tempVar3) {\n        tempVar2 = tempVar2 >> (-(tempVar4 - tempVar3) & 0xff);\n      }\n      else {\n        tempVar2 = tempVar2 + (tempVar4 - tempVar3) * 0x800000;\n      }\n      return tempVar2 | input1;\n    }\n  }\n  else {\n    tempVar4 = tempVar3 - 1;\n    if (0xffffff < tempVar2) {\n      tempVar4 = tempVar2 & 1;\n      tempVar2 = tempVar2 >> 1;\n      tempVar1 = (uint)(tempVar4 != 0) << 0x1f | tempVar1 >> 1;\n      tempVar4 = tempVar3;\n      if (0xfd < tempVar3) goto LAB_08008e12;\n    }\n  }\n  tempVar2 = tempVar2 + tempVar4 * 0x800000 + (uint)(0x7fffffff < tempVar1);\n  if (tempVar1 == 0x80000000) {\n    tempVar2 = tempVar2 & 0xfffffffe;\n  }\n  return tempVar2 | input1;\n}\n\n",
            "renaming": {
                "FUN_08008cdc": "calculate_float_08008cdc",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "shiftCount1",
                "iVar2": "shiftCount2",
                "uVar3": "tempVar1",
                "uVar4": "tempVar2",
                "uVar5": "tempVar3",
                "uVar6": "tempVar4",
                "bVar7": "isEqual"
            },
            "calling": [
                "FUN_08002908",
                "FUN_08003826",
                "FUN_08003004",
                "FUN_08004940",
                "FUN_080005b4",
                "FUN_08002978",
                "FUN_080028bc",
                "FUN_08001f00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008e3c": {
            "entrypoint": "0x08008e3c",
            "current_name": "calculate_modified_value_08008e3c",
            "code": "\nuint calculateModifiedValue_08008e3c(uint inputValue)\n\n{\n  uint modifiedValue;\n  uint shiftAmount;\n  int baseValue;\n  uint maskValue;\n  \n  if (inputValue == 0) {\n    return 0;\n  }\n  modifiedValue = LZCOUNT(inputValue);\n  shiftAmount = modifiedValue - 8;\n  baseValue = shiftAmount * -0x800000 + 0x4a800000;\n  if (7 < modifiedValue) {\n    maskValue = 0 << (shiftAmount & 0xff);\n    modifiedValue = baseValue + (inputValue << (shiftAmount & 0xff)) +\n            (0U >> (0x20 - shiftAmount & 0xff)) + (uint)(0x7fffffff < maskValue);\n    if (maskValue == 0x80000000) {\n      modifiedValue = modifiedValue & 0xfffffffe;\n    }\n    return modifiedValue;\n  }\n  shiftAmount = inputValue << modifiedValue + 0x18;\n  modifiedValue = baseValue + ((inputValue >> (0x20 - (modifiedValue + 0x18) & 0xff)) - ((int)shiftAmount >> 0x1f));\n  if ((shiftAmount & 0x7fffffff) == 0) {\n    modifiedValue = modifiedValue & ~(shiftAmount >> 0x1f);\n  }\n  return modifiedValue;\n}\n\n",
            "renaming": {
                "FUN_08008e3c": "calculate_modified_value_08008e3c",
                "param_1": "inputValue",
                "uVar1": "modifiedValue",
                "uVar2": "shiftAmount",
                "iVar3": "baseValue",
                "uVar4": "maskValue"
            },
            "calling": [
                "FUN_08002638",
                "FUN_08002c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008e44": {
            "entrypoint": "0x08008e44",
            "current_name": "calculate_modified_value_08008e44",
            "code": "\nuint calculateModifiedValue_08008e44(uint inputValue)\n\n{\n  uint leadingZeroes;\n  uint shiftAmount;\n  uint isNegative;\n  int adjustedValue;\n  \n  isNegative = inputValue & 0x80000000;\n  if ((int)isNegative < 0) {\n    inputValue = -inputValue;\n  }\n  if (inputValue == 0) {\n    return 0;\n  }\n  leadingZeroes = countLeadingZeroes(inputValue);\n  shiftAmount = leadingZeroes - 8;\n  adjustedValue = ((isNegative | 0x4b000000) - 0x800000) + shiftAmount * -0x800000;\n  if (7 < leadingZeroes) {\n    leadingZeroes = 0 << (shiftAmount & 0xff);\n    isNegative = adjustedValue + (inputValue << (shiftAmount & 0xff)) +\n            (0U >> (0x20 - shiftAmount & 0xff)) + (uint)(0x7fffffff < leadingZeroes);\n    if (leadingZeroes == 0x80000000) {\n      isNegative = isNegative & 0xfffffffe;\n    }\n    return isNegative;\n  }\n  shiftAmount = inputValue << leadingZeroes + 0x18;\n  isNegative = adjustedValue + ((inputValue >> (0x20 - (leadingZeroes + 0x18) & 0xff)) - ((int)shiftAmount >> 0x1f));\n  if ((shiftAmount & 0x7fffffff) == 0) {\n    isNegative = isNegative & ~(shiftAmount >> 0x1f);\n  }\n  return isNegative;\n}\n\n",
            "renaming": {
                "FUN_08008e44": "calculate_modified_value_08008e44",
                "param_1": "inputValue",
                "uVar1": "leadingZeroes",
                "uVar2": "shiftAmount",
                "uVar3": "isNegative",
                "iVar4": "adjustedValue",
                "LZCOUNT": "countLeadingZeroes"
            },
            "calling": [
                "FUN_08003618",
                "FUN_08003004",
                "FUN_08004940",
                "FUN_08002408",
                "FUN_08001f00",
                "FUN_080004fc",
                "FUN_08002c18",
                "FUN_080024c4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008eec": {
            "entrypoint": "0x08008eec",
            "current_name": "perform_calculation_08008eec",
            "code": "\nuint performCalculation_08008eec(uint input1,uint input2,undefined4 input3,uint input4)\n\n{\n  longlong product;\n  uint result;\n  uint shift1;\n  int sum;\n  int difference;\n  uint temp1;\n  int temp2;\n  uint temp3;\n  bool condition1;\n  bool condition2;\n  \n  shift1 = input1 >> 0x17 & 0xff;\n  condition1 = shift1 == 0;\n  if (!condition1) {\n    input4 = input2 >> 0x17 & 0xff;\n    condition1 = input4 == 0;\n  }\n  if (!condition1) {\n    condition1 = shift1 == 0xff;\n  }\n  if (!condition1) {\n    condition1 = input4 == 0xff;\n  }\n  if (condition1) {\n    input4 = input2 >> 0x17 & 0xff;\n    if (shift1 == 0xff || input4 == 0xff) {\n      condition1 = input1 == 0 || input1 == 0x80000000;\n      result = input2;\n      if (input1 != 0 && input1 != 0x80000000) {\n        condition1 = input2 == 0;\n        result = input1;\n      }\n      if (!condition1) {\n        condition1 = input2 == 0x80000000;\n      }\n      temp3 = result;\n      if (((condition1) || ((shift1 == 0xff && ((result & 0x7fffff) != 0)))) ||\n         ((input4 == 0xff && (temp3 = input2, (input2 & 0x7fffff) != 0)))) {\n        return temp3 | 0x7fc00000;\n      }\n      result = result ^ input2;\n      goto LAB_0800903c;\n    }\n    condition1 = (input1 & 0x7fffffff) == 0;\n    if (!condition1) {\n      condition1 = (input2 & 0x7fffffff) == 0;\n    }\n    if (condition1) {\n      return (input1 ^ input2) & 0x80000000;\n    }\n    condition1 = shift1 == 0;\n    result = input1 & 0x80000000;\n    while( true ) {\n      if (condition1) {\n        input1 = input1 << 1;\n        condition1 = (input1 & 0x800000) == 0;\n      }\n      if (!condition1) break;\n      shift1 = shift1 - 1;\n    }\n    input1 = input1 | result;\n    condition1 = input4 == 0;\n    result = input2 & 0x80000000;\n    while( true ) {\n      if (condition1) {\n        input2 = input2 << 1;\n        condition1 = (input2 & 0x800000) == 0;\n      }\n      if (!condition1) break;\n      input4 = input4 - 1;\n    }\n    input2 = input2 | result;\n  }\n  sum = shift1 + input4;\n  temp3 = input1 ^ input2;\n  shift1 = input1 << 9;\n  condition1 = shift1 == 0;\n  if (!condition1) {\n    input2 = input2 << 9;\n    condition1 = input2 == 0;\n  }\n  if (condition1) {\n    if (shift1 == 0) {\n      input2 = input2 << 9;\n    }\n    result = temp3 & 0x80000000 | input1 & 0x7fffff | input2 >> 9;\n    condition2 = SBORROW4(sum,0x7f);\n    difference = sum + -0x7f;\n    condition1 = difference == 0;\n    temp2 = difference;\n    if (!condition1 && 0x7e < sum) {\n      condition2 = SBORROW4(0xff,difference);\n      temp2 = 0xff - difference;\n      condition1 = difference == 0xff;\n    }\n    if (!condition1 && temp2 < 0 == condition2) {\n      result = result | difference * 0x800000;\n    }\n    if (!condition1 && temp2 < 0 == condition2) {\n      return result;\n    }\n    result = result | 0x800000;\n    temp1 = 0;\n    condition2 = SBORROW4(difference,1);\n    temp3 = sum - 0x80;\n    condition1 = temp3 == 0;\n    shift1 = temp3;\n  }\n  else {\n    product = (ulonglong)(shift1 >> 5 | 0x8000000) * (ulonglong)(input2 >> 5 | 0x8000000);\n    temp1 = (uint)product;\n    result = (uint)((ulonglong)product >> 0x20);\n    condition1 = result < 0x800000;\n    if (condition1) {\n      result = result << 1;\n    }\n    if (condition1) {\n      result = result | temp1 >> 0x1f;\n      temp1 = temp1 << 1;\n    }\n    result = temp3 & 0x80000000 | result;\n    temp3 = (sum + -0x7f) - (uint)condition1;\n    condition2 = SBORROW4(temp3,0xfd);\n    condition1 = temp3 == 0xfd;\n    shift1 = temp3 - 0xfd;\n    if (temp3 < 0xfe) {\n      result = result + temp3 * 0x800000 + (uint)(0x7fffffff < temp1);\n      if (temp1 == 0x80000000) {\n        result = result & 0xfffffffe;\n      }\n      return result;\n    }\n  }\n  if (condition1 || (int)shift1 < 0 != condition2) {\n    condition1 = (int)(temp3 + 0x19) < 0;\n    if (temp3 == 0xffffffe7 || condition1 != SCARRY4(temp3,0x19)) {\n      result = result & 0x80000000;\n    }\n    if (temp3 != 0xffffffe7 && condition1 == SCARRY4(temp3,0x19)) {\n      shift1 = (result << 1) >> (-temp3 & 0xff);\n      temp3 = result << (temp3 + 0x20 & 0xff);\n      shift1 = ((uint)((result & 0x80000000) != 0) << 0x1f | shift1 >> 1) + (uint)((byte)shift1 & 1);\n      if ((temp1 | temp3 << 1) == 0) {\n        shift1 = shift1 & ~(temp3 >> 0x1f);\n      }\n      return shift1;\n    }\n    return result;\n  }\nLAB_0800903c:\n  return result & 0x80000000 | 0x7f800000;\n}\n\n",
            "renaming": {
                "FUN_08008eec": "perform_calculation_08008eec",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "lVar1": "product",
                "uVar2": "result",
                "uVar3": "shift1",
                "iVar4": "sum",
                "iVar5": "difference",
                "uVar6": "temp1",
                "iVar7": "temp2",
                "uVar8": "temp3",
                "bVar9": "condition1",
                "bVar10": "condition2"
            },
            "calling": [
                "FUN_08003618",
                "FUN_08003826",
                "FUN_08003004",
                "FUN_08002638",
                "FUN_08002408",
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_080028bc",
                "FUN_08001f00",
                "FUN_08002908",
                "FUN_08002978",
                "FUN_08001994",
                "FUN_08002c18",
                "FUN_080024c4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009054": {
            "entrypoint": "0x08009054",
            "current_name": "floating_point_calculation_08009054",
            "code": "\nuint floatingPointCalculation_08009054(uint input1,uint input2,undefined4 input3,uint input4)\n\n{\n  uint temp1;\n  uint temp2;\n  int temp3;\n  uint temp4;\n  int temp5;\n  uint temp6;\n  bool isZero1;\n  bool isZero2;\n  bool overflowFlag;\n  \n  temp2 = input1 >> 0x17 & 0xff;\n  isZero1 = temp2 == 0;\n  if (!isZero1) {\n    input4 = input2 >> 0x17 & 0xff;\n    isZero1 = input4 == 0;\n  }\n  if (!isZero1) {\n    isZero1 = temp2 == 0xff;\n  }\n  if (!isZero1) {\n    isZero1 = input4 == 0xff;\n  }\n  if (isZero1) {\n    input4 = input2 >> 0x17 & 0xff;\n    temp6 = input1;\n    if (temp2 == 0xff) {\n      if (((input1 & 0x7fffff) != 0) || (temp6 = input2, input4 == 0xff)) {\nLAB_0800904a:\n        return temp6 | 0x7fc00000;\n      }\n    }\n    else {\n      if (input4 == 0xff) {\n        temp6 = input2;\n        if ((input2 & 0x7fffff) == 0) {\nLAB_08009000:\n          return (input1 ^ input2) & 0x80000000;\n        }\n        goto LAB_0800904a;\n      }\n      isZero1 = (input1 & 0x7fffffff) == 0;\n      if (!isZero1) {\n        isZero1 = (input2 & 0x7fffffff) == 0;\n      }\n      if (!isZero1) {\n        isZero1 = temp2 == 0;\n        temp6 = input1 & 0x80000000;\n        while( true ) {\n          if (isZero1) {\n            input1 = input1 << 1;\n            isZero1 = (input1 & 0x800000) == 0;\n          }\n          if (!isZero1) break;\n          temp2 = temp2 - 1;\n        }\n        input1 = input1 | temp6;\n        isZero1 = input4 == 0;\n        temp6 = input2 & 0x80000000;\n        while( true ) {\n          if (isZero1) {\n            input2 = input2 << 1;\n            isZero1 = (input2 & 0x800000) == 0;\n          }\n          if (!isZero1) break;\n          input4 = input4 - 1;\n        }\n        input2 = input2 | temp6;\n        goto LAB_0800906c;\n      }\n      if ((input1 & 0x7fffffff) == 0) {\n        if ((input2 & 0x7fffffff) != 0) goto LAB_08009000;\n        goto LAB_0800904a;\n      }\n    }\n    input1 = input1 ^ input2;\n  }\n  else {\nLAB_0800906c:\n    temp3 = temp2 - input4;\n    if (input2 << 9 == 0) {\n      input1 = (input1 ^ input2) & 0x80000000 | input1 & 0x7fffff;\n      overflowFlag = SCARRY4(temp3,0x7f);\n      temp5 = temp3 + 0x7f;\n      isZero1 = temp5 < 0;\n      isZero2 = temp5 == 0;\n      if (!isZero2 && isZero1 == overflowFlag) {\n        overflowFlag = SBORROW4(0xff,temp5);\n        isZero1 = 0xff - temp5 < 0;\n        isZero2 = temp5 == 0xff;\n      }\n      if (!isZero2 && isZero1 == overflowFlag) {\n        input1 = input1 | temp5 * 0x800000;\n      }\n      if (!isZero2 && isZero1 == overflowFlag) {\n        return input1;\n      }\n      input1 = input1 | 0x800000;\n      temp2 = 0;\n      isZero2 = SBORROW4(temp5,1);\n      temp4 = temp3 + 0x7e;\n      isZero1 = temp4 == 0;\n      temp6 = temp4;\n    }\n    else {\n      temp1 = (input2 << 9) >> 4 | 0x10000000;\n      temp2 = (input1 << 9) >> 4 | 0x10000000;\n      input1 = (input1 ^ input2) & 0x80000000;\n      isZero1 = temp1 <= temp2;\n      if (!isZero1) {\n        temp2 = temp2 << 1;\n      }\n      temp4 = temp3 + 0x7d + (uint)isZero1;\n      temp6 = 0x800000;\n      do {\n        if (temp1 <= temp2) {\n          temp2 = temp2 - temp1;\n          input1 = input1 | temp6;\n        }\n        isZero1 = temp1 >> 1 <= temp2;\n        if (isZero1) {\n          temp2 = temp2 - (temp1 >> 1);\n        }\n        if (isZero1) {\n          input1 = input1 | temp6 >> 1;\n        }\n        isZero1 = temp1 >> 2 <= temp2;\n        if (isZero1) {\n          temp2 = temp2 - (temp1 >> 2);\n        }\n        if (isZero1) {\n          input1 = input1 | temp6 >> 2;\n        }\n        isZero1 = temp1 >> 3 <= temp2;\n        if (isZero1) {\n          temp2 = temp2 - (temp1 >> 3);\n        }\n        if (isZero1) {\n          input1 = input1 | temp6 >> 3;\n        }\n        temp2 = temp2 * 0x10;\n        isZero1 = temp2 == 0;\n        if (!isZero1) {\n          temp6 = temp6 >> 4;\n          isZero1 = temp6 == 0;\n        }\n      } while (!isZero1);\n      isZero2 = SBORROW4(temp4,0xfd);\n      isZero1 = temp4 == 0xfd;\n      temp6 = temp4 - 0xfd;\n      if (temp4 < 0xfe) {\n        input1 = input1 + temp4 * 0x800000 + (uint)(temp1 <= temp2);\n        if (temp2 - temp1 == 0) {\n          input1 = input1 & 0xfffffffe;\n        }\n        return input1;\n      }\n    }\n    if (isZero1 || (int)temp6 < 0 != isZero2) {\n      isZero1 = (int)(temp4 + 0x19) < 0;\n      if (temp4 == 0xffffffe7 || isZero1 != SCARRY4(temp4,0x19)) {\n        input1 = input1 & 0x80000000;\n      }\n      if (temp4 == 0xffffffe7 || isZero1 != SCARRY4(temp4,0x19)) {\n        return input1;\n      }\n      temp6 = (input1 << 1) >> (-temp4 & 0xff);\n      temp4 = input1 << (temp4 + 0x20 & 0xff);\n      temp6 = ((uint)((input1 & 0x80000000) != 0) << 0x1f | temp6 >> 1) + (uint)((byte)temp6 & 1);\n      if ((temp2 | temp4 << 1) == 0) {\n        temp6 = temp6 & ~(temp4 >> 0x1f);\n      }\n      return temp6;\n    }\n  }\n  return input1 & 0x80000000 | 0x7f800000;\n}\n\n",
            "renaming": {
                "FUN_08009054": "floating_point_calculation_08009054",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "iVar3": "temp3",
                "uVar4": "temp4",
                "iVar5": "temp5",
                "uVar6": "temp6",
                "bVar7": "isZero1",
                "bVar8": "isZero2",
                "bVar9": "overflowFlag"
            },
            "calling": [
                "FUN_08004250",
                "FUN_08003618",
                "FUN_08002908",
                "FUN_08003004",
                "FUN_08004940",
                "FUN_08002e08",
                "FUN_080028bc",
                "FUN_08001994",
                "FUN_08001f00",
                "FUN_080004fc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800919c": {
            "entrypoint": "0x0800919c",
            "current_name": "calculate_result_0800919c",
            "code": "\nuint calculate_result_0800919c(uint result,uint input2)\n\n{\n  bool isNegative;\n  uint double_input1;\n  uint double_input2;\n  uint combined_inputs;\n  bool isCombinedZero;\n  \n  double_input1 = result * 2;\n  double_input2 = input2 * 2;\n  if (((int)double_input1 >> 0x18 == -1 || (int)double_input2 >> 0x18 == -1) &&\n     ((((int)double_input1 >> 0x18 == -1 && ((result & 0x7fffff) != 0)) ||\n      (((int)double_input2 >> 0x18 == -1 && ((input2 & 0x7fffff) != 0)))))) {\n    return 1;\n  }\n  combined_inputs = double_input1 | input2 & 0x7fffffff;\n  isCombinedZero = combined_inputs == 0;\n  if (!isCombinedZero) {\n    combined_inputs = result ^ input2;\n    isCombinedZero = combined_inputs == 0;\n  }\n  isNegative = -1 < (int)combined_inputs;\n  if (isNegative) {\n    result = double_input1 + input2 * -2;\n    isCombinedZero = result == 0;\n  }\n  if ((isNegative && double_input2 <= double_input1) && !isCombinedZero) {\n    result = (int)input2 >> 0x1f;\n  }\n  if (!isNegative || double_input2 > double_input1) {\n    result = ~((int)input2 >> 0x1f);\n  }\n  if (!isCombinedZero) {\n    result = result | 1;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_0800919c": "calculate_result_0800919c",
                "param_1": "result",
                "param_2": "input2",
                "bVar1": "isNegative",
                "uVar2": "double_input1",
                "uVar3": "double_input2",
                "uVar4": "combined_inputs",
                "bVar5": "isCombinedZero"
            },
            "calling": [
                "FUN_08009204"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091fc": {
            "entrypoint": "0x080091fc",
            "current_name": "execute_function_080091fc",
            "code": "\nvoid executeFunction_080091fc(undefined4 inputParam,undefined4 outputParam)\n\n{\n  FUN_08009204(outputParam,inputParam);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091fc": "execute_function_080091fc",
                "param_1": "inputParam",
                "param_2": "outputParam"
            },
            "calling": [
                "FUN_08009250",
                "FUN_08009264"
            ],
            "called": [
                "FUN_08009204"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009204": {
            "entrypoint": "0x08009204",
            "current_name": "concatenate_and_return_08009204",
            "code": "\nundefined8 concatenate_and_return_08009204(undefined4 first_parameter,undefined4 second_parameter)\n\n{\n  FUN_0800919c();\n  return CONCAT44(second_parameter,first_parameter);\n}\n\n",
            "renaming": {
                "FUN_08009204": "concatenate_and_return_08009204",
                "param_1": "first_parameter",
                "param_2": "second_parameter"
            },
            "calling": [
                "FUN_08009228",
                "FUN_080091fc",
                "FUN_08009214",
                "FUN_0800923c"
            ],
            "called": [
                "FUN_0800919c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009214": {
            "entrypoint": "0x08009214",
            "current_name": "check_if_zero_byte_08009214",
            "code": "\nbool check_if_zero_byte_08009214(void)\n\n{\n  char input_character;\n  \n  FUN_08009204();\n  return input_character != '\\0';\n}\n\n",
            "renaming": {
                "FUN_08009214": "check_if_zero_byte_08009214",
                "in_ZR": "input_character"
            },
            "calling": [
                "FUN_08002638",
                "FUN_08002afc",
                "FUN_080029d8",
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_08001f00"
            ],
            "called": [
                "FUN_08009204"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009228": {
            "entrypoint": "0x08009228",
            "current_name": "is_string_empty_08009228",
            "code": "\nbool isStringEmpty_08009228(void)\n\n{\n  char inputCharacter;\n  \n  FUN_08009204();\n  return inputCharacter == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08009228": "is_string_empty_08009228",
                "in_CY": "inputCharacter"
            },
            "calling": [
                "FUN_08003826",
                "FUN_08003004",
                "FUN_08002afc",
                "FUN_080029d8",
                "FUN_080005b4",
                "FUN_08004e30"
            ],
            "called": [
                "FUN_08009204"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800923c": {
            "entrypoint": "0x0800923c",
            "current_name": "is_any_condition_true_0800923c",
            "code": "\nbool isAnyConditionTrue_0800923c(void)\n\n{\n  undefined isZeroFlagSet;\n  undefined isCarryFlagSet;\n  \n  FUN_08009204();\n  return !(bool)isCarryFlagSet || (bool)isZeroFlagSet;\n}\n\n",
            "renaming": {
                "FUN_0800923c": "is_any_condition_true_0800923c",
                "in_ZR": "isZeroFlagSet",
                "in_CY": "isCarryFlagSet"
            },
            "calling": [
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_08001f00"
            ],
            "called": [
                "FUN_08009204"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009250": {
            "entrypoint": "0x08009250",
            "current_name": "check_zero_or_carry_flags_08009250",
            "code": "\nbool check_zero_or_carry_flags_08009250(void)\n\n{\n  undefined is_zero_flag_set;\n  undefined is_carry_flag_set;\n  \n  FUN_080091fc();\n  return !(bool)is_carry_flag_set || (bool)is_zero_flag_set;\n}\n\n",
            "renaming": {
                "FUN_08009250": "check_zero_or_carry_flags_08009250",
                "in_ZR": "is_zero_flag_set",
                "in_CY": "is_carry_flag_set"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08001f00"
            ],
            "called": [
                "FUN_080091fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009264": {
            "entrypoint": "0x08009264",
            "current_name": "check_if_null_terminated_08009264",
            "code": "\nbool check_if_null_terminated_08009264(void)\n\n{\n  char input_character;\n  \n  FUN_080091fc();\n  return input_character == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08009264": "check_if_null_terminated_08009264",
                "in_CY": "input_character"
            },
            "calling": [
                "FUN_08003004",
                "FUN_080029d8"
            ],
            "called": [
                "FUN_080091fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009278": {
            "entrypoint": "0x08009278",
            "current_name": "descriptive_function_name_08009278",
            "code": "\nuint descriptive_function_name_08009278(uint input_value)\n\n{\n  uint shifted_value;\n  uint difference;\n  \n  if (input_value << 1 < 0x7f000000) {\n    return 0;\n  }\n  shifted_value = (input_value << 1) >> 0x18;\n  difference = 0x9e - shifted_value;\n  if (shifted_value < 0x9f && difference != 0) {\n    shifted_value = (input_value << 8 | 0x80000000) >> (difference & 0xff);\n    if ((input_value & 0x80000000) != 0) {\n      shifted_value = -shifted_value;\n    }\n    return shifted_value;\n  }\n  if ((difference == 0xffffff9f) && ((input_value & 0x7fffff) != 0)) {\n    return 0;\n  }\n  input_value = input_value & 0x80000000;\n  if (input_value == 0) {\n    input_value = 0x7fffffff;\n  }\n  return input_value;\n}\n\n",
            "renaming": {
                "FUN_08009278": "descriptive_function_name_08009278",
                "param_1": "input_value",
                "uVar1": "shifted_value",
                "uVar2": "difference"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_08003826"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "entry": {
            "entrypoint": "0x080092c4",
            "current_name": "entry",
            "code": "\n/* WARNING: This function may have set the stack pointer */\n\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined4 *)(iVar1 + 0x20000000) < &DAT_2000044c; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x800c0c0);\n  }\n  for (puVar2 = &DAT_2000044c; puVar2 < &DAT_20000f20; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  FUN_0800756c();\n  FUN_0800b3e8();\n  UNRECOVERED_JUMPTABLE = (code *)0x80092fa;\n  FUN_08007540();\n                    /* WARNING: Could not recover jumptable at 0x080092fa. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "renaming": {},
            "calling": [],
            "called": [
                "FUN_0800756c",
                "FUN_08007540",
                "FUN_0800b3e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009318": {
            "entrypoint": "0x08009318",
            "current_name": "get_floating_point_number_08009318",
            "code": "\nlonglong getFloatingPointNumber_08009318(uint input1,uint input2,undefined4 constant1,undefined4 constant2)\n\n{\n  int result1;\n  uint exponent;\n  uint mask;\n  bool carry;\n  undefined8 tempResult;\n  longlong finalResult;\n  \n  mask = (input2 << 1) >> 0x15;\n  exponent = mask - 0x3ff;\n  if ((int)exponent < 0x14) {\n    if ((int)exponent < 0) {\n      tempResult = FUN_080082d4(input1,input2,0x8800759c,0x7e37e43c,constant2);\n      result1 = FUN_08008b60((int)tempResult,(int)((ulonglong)tempResult >> 0x20),0,0);\n      finalResult = CONCAT44(input2,input1);\n      if (result1 != 0) {\n        if ((int)input2 < 0) {\n          finalResult = -0x8000000000000000;\n        }\n        else if ((input1 | input2) == 0) {\n          finalResult = 0;\n        }\n        else {\n          finalResult = 0x3ff0000000000000;\n        }\n      }\n    }\n    else {\n      mask = 0xfffff >> (exponent & 0xff);\n      finalResult = CONCAT44(input2,input1);\n      if ((input2 & mask | input1) != 0) {\n        tempResult = FUN_080082d4(input1,input2,0x8800759c,0x7e37e43c,constant2);\n        result1 = FUN_08008b60((int)tempResult,(int)((ulonglong)tempResult >> 0x20),0,0);\n        finalResult = CONCAT44(input2,input1);\n        if (result1 != 0) {\n          if (0 < (int)input2) {\n            input2 = input2 + (0x100000 >> (exponent & 0xff));\n          }\n          finalResult = (ulonglong)(input2 & ~mask) << 0x20;\n        }\n      }\n    }\n  }\n  else if ((int)exponent < 0x34) {\n    mask = 0xffffffff >> (mask - 0x413 & 0xff);\n    finalResult = CONCAT44(input2,input1);\n    if ((mask & input1) != 0) {\n      tempResult = FUN_080082d4(input1,input2,0x8800759c,0x7e37e43c,constant2);\n      result1 = FUN_08008b60((int)tempResult,(int)((ulonglong)tempResult >> 0x20),0,0);\n      finalResult = CONCAT44(input2,input1);\n      if (result1 != 0) {\n        if (0 < (int)input2) {\n          if (exponent == 0x14) {\n            input2 = input2 + 1;\n          }\n          else {\n            exponent = 1 << (0x34 - exponent & 0xff);\n            carry = CARRY4(exponent,input1);\n            input1 = exponent + input1;\n            if (carry != false) {\n              input2 = input2 + 1;\n            }\n          }\n        }\n        finalResult = CONCAT44(input2,input1 & ~mask);\n      }\n    }\n  }\n  else {\n    finalResult = CONCAT44(input2,input1);\n    if (exponent == 0x400) {\n      finalResult = FUN_080082d4();\n    }\n  }\n  return finalResult;\n}\n\n",
            "renaming": {
                "FUN_08009318": "get_floating_point_number_08009318",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "constant1",
                "param_4": "constant2",
                "iVar1": "result1",
                "uVar2": "exponent",
                "uVar3": "mask",
                "bVar4": "carry",
                "uVar5": "tempResult",
                "lVar6": "finalResult"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08001994",
                "FUN_08002c18"
            ],
            "called": [
                "FUN_08008b60",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009410": {
            "entrypoint": "0x08009410",
            "current_name": "process_floating_point_number_08009410",
            "code": "\nundefined4 processFloatingPointNumber_08009410(undefined4 inputValue,uint inputMask)\n\n{\n  undefined4 returnValue;\n  uint maskedValue;\n  undefined4 var1;\n  undefined4 var2;\n  undefined4 var3;\n  undefined4 var4;\n  \n  if (0x3fe921fb < (inputMask & 0x7fffffff)) {\n    if ((inputMask & 0x7fffffff) < 0x7ff00000) {\n      maskedValue = FUN_08009d78(inputValue,inputMask,&var1);\n      maskedValue = maskedValue & 3;\n      if (maskedValue == 1) {\n        returnValue = FUN_0800adf0(var1,var2,var3,var4,1);\n      }\n      else if (maskedValue == 2) {\n        returnValue = FUN_0800a348(var1,var2,var3,var4);\n      }\n      else if (maskedValue == 0) {\n        returnValue = FUN_0800a348(var1,var2,var3,var4);\n      }\n      else {\n        returnValue = FUN_0800adf0(var1,var2,var3,var4,1);\n      }\n    }\n    else {\n      returnValue = FUN_080082d0(inputValue,inputMask,inputValue,inputMask);\n    }\n    return returnValue;\n  }\n  returnValue = FUN_0800a348(inputValue,inputMask,0,0);\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08009410": "process_floating_point_number_08009410",
                "param_1": "inputValue",
                "param_2": "inputMask",
                "uVar1": "returnValue",
                "uVar2": "maskedValue",
                "local_28": "var1",
                "uStack_24": "var2",
                "local_20": "var3",
                "uStack_1c": "var4"
            },
            "calling": [
                "FUN_08001f00"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_0800a348",
                "FUN_08009d78",
                "FUN_0800adf0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080094c0": {
            "entrypoint": "0x080094c0",
            "current_name": "calculate_result_080094c0",
            "code": "\nlonglong calculateResult_080094c0(uint input1,uint input2,undefined4 param3,undefined4 param4)\n\n{\n  int result;\n  uint shiftAmount;\n  uint mask;\n  bool carryFlag;\n  undefined8 tempResult;\n  longlong finalResult;\n  \n  mask = (input2 << 1) >> 0x15;\n  shiftAmount = mask - 0x3ff;\n  if ((int)shiftAmount < 0x14) {\n    if ((int)shiftAmount < 0) {\n      tempResult = FUN_080082d4(input1,input2,0x8800759c,0x7e37e43c,param4);\n      result = FUN_08008b60((int)tempResult,(int)((ulonglong)tempResult >> 0x20),0,0);\n      finalResult = CONCAT44(input2,input1);\n      if (result != 0) {\n        if ((int)input2 < 0) {\n          if ((input1 | input2 & 0x7fffffff) != 0) {\n            input2 = 0xbff00000;\n          }\n          finalResult = (ulonglong)input2 << 0x20;\n        }\n        else {\n          finalResult = 0;\n        }\n      }\n    }\n    else {\n      mask = 0xfffff >> (shiftAmount & 0xff);\n      finalResult = CONCAT44(input2,input1);\n      if ((input2 & mask | input1) != 0) {\n        tempResult = FUN_080082d4(input1,input2,0x8800759c,0x7e37e43c,param4);\n        result = FUN_08008b60((int)tempResult,(int)((ulonglong)tempResult >> 0x20),0,0);\n        finalResult = CONCAT44(input2,input1);\n        if (result != 0) {\n          if ((int)input2 < 0) {\n            input2 = input2 + (0x100000 >> (shiftAmount & 0xff));\n          }\n          finalResult = (ulonglong)(input2 & ~mask) << 0x20;\n        }\n      }\n    }\n  }\n  else if ((int)shiftAmount < 0x34) {\n    mask = 0xffffffff >> (mask - 0x413 & 0xff);\n    finalResult = CONCAT44(input2,input1);\n    if ((mask & input1) != 0) {\n      tempResult = FUN_080082d4(input1,input2,0x8800759c,0x7e37e43c,param4);\n      result = FUN_08008b60((int)tempResult,(int)((ulonglong)tempResult >> 0x20),0,0);\n      finalResult = CONCAT44(input2,input1);\n      if (result != 0) {\n        if ((int)input2 < 0) {\n          if (shiftAmount == 0x14) {\n            input2 = input2 + 1;\n          }\n          else {\n            shiftAmount = 1 << (0x34 - shiftAmount & 0xff);\n            carryFlag = CARRY4(shiftAmount,input1);\n            input1 = shiftAmount + input1;\n            if (carryFlag != false) {\n              input2 = input2 + 1;\n            }\n          }\n        }\n        finalResult = CONCAT44(input2,input1 & ~mask);\n      }\n    }\n  }\n  else {\n    finalResult = CONCAT44(input2,input1);\n    if (shiftAmount == 0x400) {\n      finalResult = FUN_080082d4();\n    }\n  }\n  return finalResult;\n}\n\n",
            "renaming": {
                "FUN_080094c0": "calculate_result_080094c0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "result",
                "uVar2": "shiftAmount",
                "uVar3": "mask",
                "bVar4": "carryFlag",
                "uVar5": "tempResult",
                "lVar6": "finalResult"
            },
            "calling": [
                "FUN_0800a5a0",
                "FUN_08002408",
                "FUN_08001f00",
                "FUN_08002c18"
            ],
            "called": [
                "FUN_08008b60",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080095b8": {
            "entrypoint": "0x080095b8",
            "current_name": "calculate_product_080095b8",
            "code": "\nint calculateProduct_080095b8(uint input1,uint input2)\n\n{\n  uint mask;\n  uint shiftedBits;\n  uint result;\n  int sign;\n  uint exponent;\n  \n  shiftedBits = (input2 << 1) >> 0x15;\n  exponent = shiftedBits - 0x3ff;\n  if ((int)input2 < 0) {\n    sign = -1;\n  }\n  else {\n    sign = 1;\n  }\n  result = input2 & 0xfffff | 0x100000;\n  if ((int)exponent < 0x14) {\n    if ((int)exponent < 0) {\n      if (exponent != 0xffffffff) {\n        sign = 0;\n      }\n      return sign;\n    }\n    result = result + (0x80000 >> (exponent & 0xff)) >> (0x14 - exponent & 0xff);\n  }\n  else {\n    if (0x1e < exponent) {\n      sign = FUN_08008ba0();\n      return sign;\n    }\n    if ((int)exponent < 0x34) {\n      mask = 0x80000000 >> (shiftedBits - 0x413 & 0xff);\n      if (CARRY4(mask,input1) != false) {\n        result = result + 1;\n      }\n      result = result << (shiftedBits - 0x413 & 0xff);\n      if (exponent != 0x14) {\n        result = result | mask + input1 >> (0x34 - exponent & 0xff);\n      }\n    }\n    else {\n      result = result << (shiftedBits - 0x413 & 0xff) | input1 << (shiftedBits - 0x433 & 0xff);\n    }\n  }\n  return result * sign;\n}\n\n",
            "renaming": {
                "FUN_080095b8": "calculate_product_080095b8",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "mask",
                "uVar2": "shiftedBits",
                "uVar3": "result",
                "iVar4": "sign",
                "uVar5": "exponent"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08001994"
            ],
            "called": [
                "FUN_08008ba0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009654": {
            "entrypoint": "0x08009654",
            "current_name": "calculate_floating_point_08009654",
            "code": "\nlonglong calculateFloatingPoint_08009654(uint valueBitRepresentation,uint exponentBitRepresentation)\n\n{\n  uint exponentDifference;\n  uint shiftAmount;\n  longlong floatingPointRepresentation;\n  \n  floatingPointRepresentation = CONCAT44(exponentBitRepresentation,valueBitRepresentation);\n  shiftAmount = (exponentBitRepresentation << 1) >> 0x15;\n  exponentDifference = shiftAmount - 0x3ff;\n  if ((int)exponentDifference < 0x14) {\n    if ((int)exponentDifference < 0) {\n      exponentBitRepresentation = exponentBitRepresentation & 0x80000000;\n      if (exponentDifference == 0xffffffff) {\n        exponentBitRepresentation = exponentBitRepresentation | 0x3ff00000;\n      }\n      floatingPointRepresentation = (ulonglong)exponentBitRepresentation << 0x20;\n    }\n    else {\n      shiftAmount = 0xfffff >> (exponentDifference & 0xff);\n      floatingPointRepresentation = CONCAT44(exponentBitRepresentation,valueBitRepresentation);\n      if ((exponentBitRepresentation & shiftAmount | valueBitRepresentation) != 0) {\n        floatingPointRepresentation = (ulonglong)(exponentBitRepresentation + (0x80000 >> (exponentDifference & 0xff)) & ~shiftAmount) << 0x20;\n      }\n    }\n  }\n  else if ((int)exponentDifference < 0x34) {\n    shiftAmount = 0xffffffff >> (shiftAmount - 0x413 & 0xff);\n    if ((valueBitRepresentation & shiftAmount) != 0) {\n      exponentDifference = 1 << (0x33 - exponentDifference & 0xff);\n      if (hasCarry(valueBitRepresentation,exponentDifference) != false) {\n        exponentBitRepresentation = exponentBitRepresentation + 1;\n      }\n      floatingPointRepresentation = CONCAT44(exponentBitRepresentation,valueBitRepresentation + exponentDifference & ~shiftAmount);\n    }\n  }\n  else {\n    floatingPointRepresentation = CONCAT44(exponentBitRepresentation,valueBitRepresentation);\n    if (exponentDifference == 0x400) {\n      floatingPointRepresentation = FUN_080082d4();\n    }\n  }\n  return floatingPointRepresentation;\n}\n\n",
            "renaming": {
                "FUN_08009654": "calculate_floating_point_08009654",
                "param_1": "valueBitRepresentation",
                "param_2": "exponentBitRepresentation",
                "uVar1": "exponentDifference",
                "uVar2": "shiftAmount",
                "lVar3": "floatingPointRepresentation",
                "CARRY4": "hasCarry"
            },
            "calling": [
                "FUN_08004e30"
            ],
            "called": [
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080096e8": {
            "entrypoint": "0x080096e8",
            "current_name": "parse_float_080096e8",
            "code": "\nundefined4 parse_float_080096e8(undefined4 num_ptr,uint float_bits)\n\n{\n  undefined4 result;\n  uint bit_check;\n  undefined4 mantissa;\n  undefined4 exponent;\n  undefined4 fraction;\n  undefined4 temp;\n  \n  if (0x3fe921fb < (float_bits & 0x7fffffff)) {\n    if ((float_bits & 0x7fffffff) < 0x7ff00000) {\n      bit_check = FUN_08009d78(num_ptr,float_bits,&mantissa);\n      bit_check = bit_check & 3;\n      if (bit_check == 1) {\n        result = FUN_0800a348(mantissa,exponent,fraction,temp);\n      }\n      else if (bit_check == 2) {\n        result = FUN_0800adf0(mantissa,exponent,fraction,temp,1);\n      }\n      else if (bit_check == 0) {\n        result = FUN_0800adf0(mantissa,exponent,fraction,temp,1);\n      }\n      else {\n        result = FUN_0800a348(mantissa,exponent,fraction,temp);\n      }\n    }\n    else {\n      result = FUN_080082d0(num_ptr,float_bits,num_ptr,float_bits);\n    }\n    return result;\n  }\n  result = FUN_0800adf0(num_ptr,float_bits,0,0,0);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080096e8": "parse_float_080096e8",
                "param_1": "num_ptr",
                "param_2": "float_bits",
                "uVar1": "result",
                "uVar2": "bit_check",
                "local_28": "mantissa",
                "uStack_24": "exponent",
                "local_20": "fraction",
                "uStack_1c": "temp"
            },
            "calling": [
                "FUN_08001f00"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_0800a348",
                "FUN_08009d78",
                "FUN_0800adf0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009798": {
            "entrypoint": "0x08009798",
            "current_name": "extract_bits_08009798",
            "code": "\nlonglong extract_bits_08009798(uint bit_pattern,uint shift_count,undefined4 unused_param_1,undefined4 unused_param_2)\n\n{\n  uint shifted_val;\n  uint shifted_bits;\n  longlong result;\n  \n  shifted_bits = (shift_count << 1) >> 0x15;\n  shifted_val = shifted_bits - 0x3ff;\n  if ((int)shifted_val < 0x14) {\n    if ((int)shifted_val < 0) {\n      return ((ulonglong)shift_count & 0x80000000) << 0x20;\n    }\n    result = (ulonglong)(shift_count & ~(0xfffff >> (shifted_val & 0xff))) << 0x20;\n  }\n  else {\n    if ((int)shifted_val < 0x34) {\n      return CONCAT44(shift_count,bit_pattern & ~(0xffffffffU >> (shifted_bits - 0x413 & 0xff)));\n    }\n    if (shifted_val != 0x400) {\n      return CONCAT44(shift_count,bit_pattern);\n    }\n    result = FUN_080082d4(bit_pattern,shift_count,bit_pattern,shift_count,unused_param_2);\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009798": "extract_bits_08009798",
                "param_1": "bit_pattern",
                "param_2": "shift_count",
                "param_3": "unused_param_1",
                "param_4": "unused_param_2",
                "uVar1": "shifted_val",
                "uVar2": "shifted_bits",
                "lVar3": "result"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080005b4",
                "FUN_08004e30"
            ],
            "called": [
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_08009990": {
            "entrypoint": "0x08009818",
            "current_name": "calculate_result_thunk_08009990",
            "code": "\nuint calculate_result_thunk_08009990(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int difference;\n  undefined4 result_lower;\n  uint modifier;\n  uint modified_input4;\n  uint modified_input2;\n  undefined8 result;\n  \n  modified_input4 = input4 & 0x7fffffff;\n  if (((modified_input4 | (-input3 | input3) >> 0x1f) < 0x7ff00001) &&\n     (modified_input2 = input2 & 0x7fffffff, (modified_input2 | (-input1 | input1) >> 0x1f) < 0x7ff00001)) {\n    if ((input4 + 0xc0100000 | input3) == 0) {\n      modified_input4 = FUN_0800af78();\n      return modified_input4;\n    }\n    modifier = (int)input4 >> 0x1e & 2U | input2 >> 0x1f;\n    if ((modified_input2 | input1) == 0) {\n      if (modifier == 2) {\n        input1 = 0x54442d18;\n      }\n      else if (modifier == 3) {\n        input1 = 0x54442d18;\n      }\n    }\n    else {\n      if ((modified_input4 | input3) != 0) {\n        if (modified_input4 == 0x7ff00000) {\n          modifier = modifier - 1;\n          if (modified_input2 == 0x7ff00000) {\n            if (modifier < 3) {\n              return *(uint *)(&DAT_0800be68 + modifier * 8);\n            }\n            return 0x54442d18;\n          }\n          if (modifier < 3) {\n            return *(uint *)(&DAT_0800be80 + modifier * 8);\n          }\n          return 0;\n        }\n        if (modified_input2 != 0x7ff00000) {\n          difference = (int)(modified_input2 - modified_input4) >> 0x14;\n          if ((int)(modified_input2 - modified_input4) < 0x3d00000) {\n            if (((int)input4 < 0) && (difference + 0x3c < 0 != is_signed_overflow(difference,0x3c))) {\n              result = 0;\n            }\n            else {\n              FUN_08008894(input1,input2,input3,input4,input4);\n              FUNC_0800b2cc();\n              result = FUN_0800af78();\n            }\n          }\n          else {\n            result = 0x3ff921fb54442d18;\n          }\n          result_lower = (undefined4)((ulonglong)result >> 0x20);\n          modified_input4 = (uint)result;\n          if (modifier == 1) {\n            return modified_input4;\n          }\n          if (modifier == 2) {\n            result = FUN_080082d0(modified_input4,result_lower,0x33145c07,0x3ca1a626);\n            modified_input4 = FUN_080082d0(0x54442d18,0x400921fb,(int)result,(int)((ulonglong)result >> 0x20));\n            return modified_input4;\n          }\n          if (modifier == 0) {\n            return modified_input4;\n          }\n          result = FUN_080082d0(modified_input4,result_lower,0x33145c07,0x3ca1a626);\n          modified_input4 = FUN_080082d0((int)result,(int)((ulonglong)result >> 0x20),0x54442d18,0x400921fb);\n          return modified_input4;\n        }\n      }\n      if ((int)input2 < 0) {\n        input1 = 0x54442d18;\n      }\n      else {\n        input1 = 0x54442d18;\n      }\n    }\n  }\n  else {\n    input1 = FUN_080082d4(input3,input4,input1,input2);\n  }\n  return input1;\n}\n\n",
            "renaming": {
                "thunk_FUN_08009990": "calculate_result_thunk_08009990",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar4": "modified_input4",
                "uVar3": "modifier",
                "uVar5": "modified_input2",
                "uVar6": "result",
                "uVar2": "result_lower",
                "iVar1": "difference",
                "SCARRY4": "is_signed_overflow"
            },
            "calling": [
                "FUN_08001f00"
            ],
            "called": [
                "FUN_08009990"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800981c": {
            "entrypoint": "0x0800981c",
            "current_name": "calculate_hypotenuse_0800981c",
            "code": "\nundefined8 calculateHypotenuse_0800981c(undefined4 side1,undefined4 side2,undefined4 side3,undefined4 side4)\n\n{\n  int result;\n  undefined4 *ptr;\n  int *ptr2;\n  undefined8 returnValue;\n  undefined4 length;\n  char *str;\n  undefined4 side1;\n  undefined4 side2;\n  undefined4 side3;\n  undefined4 side4;\n  undefined4 condition1;\n  undefined4 condition2;\n  int error;\n  \n  returnValue = FUN_08009b24();\n  if (DAT_20000014 == -1) {\n    return returnValue;\n  }\n  error = FUN_0800b2d4();\n  if (error != 0) {\n    return returnValue;\n  }\n  result = FUN_0800b2d4(side1,side2);\n  if (result == 0) {\n    return returnValue;\n  }\n  result = FUN_0800b2d4(side3,side4);\n  if (result == 0) {\n    return returnValue;\n  }\n  length = 3;\n  str = \"hypot\";\n  side1 = side1;\n  side2 = side2;\n  side3 = side3;\n  side4 = side4;\n  if (DAT_20000014 == '\\0') {\n    condition1 = 0xe0000000;\n    condition2 = 0x47efffff;\nLAB_080098aa:\n    result = FUN_0800b2e0(&length);\n    if (result != 0) goto LAB_08009896;\n  }\n  else {\n    condition1 = 0;\n    condition2 = 0x7ff00000;\n    if (DAT_20000014 != '\\x02') goto LAB_080098aa;\n  }\n  ptr = (undefined4 *)FUN_0800b3dc();\n  *ptr = 0x22;\nLAB_08009896:\n  returnValue = CONCAT44(condition2,condition1);\n  if (error != 0) {\n    ptr2 = (int *)FUN_0800b3dc();\n    returnValue = CONCAT44(condition2,condition1);\n    *ptr2 = error;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_0800981c": "calculate_hypotenuse_0800981c",
                "param_1": "side1",
                "param_2": "side2",
                "param_3": "side3",
                "param_4": "side4",
                "iVar1": "result",
                "puVar2": "ptr",
                "piVar3": "ptr2",
                "uVar4": "returnValue",
                "local_50": "length",
                "pcStack_4c": "str",
                "local_48": "side1",
                "uStack_44": "side2",
                "local_40": "side3",
                "uStack_3c": "side4",
                "local_38": "condition1",
                "uStack_34": "condition2",
                "local_30": "error"
            },
            "calling": [
                "FUN_080005b4",
                "FUN_08001f00"
            ],
            "called": [
                "FUN_0800b2d4",
                "FUN_0800b3dc",
                "FUN_0800b2e0",
                "FUN_08009b24"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080098d0": {
            "entrypoint": "0x080098d0",
            "current_name": "execute_task_080098d0",
            "code": "\nundefined4 executeTask_080098d0(undefined4 input1,undefined4 input2)\n\n{\n  char flag;\n  undefined4 returnValue;\n  int result;\n  undefined4 *ptr;\n  int *intPtr;\n  undefined4 value1;\n  undefined *pointer;\n  undefined4 input1Copy;\n  undefined4 input2Copy;\n  undefined4 input1Copy2;\n  undefined4 input2Copy2;\n  undefined8 initializedValue;\n  int errorCode;\n  \n  returnValue = FUN_0800a1bc();\n  flag = DAT_20000014;\n  if (((DAT_20000014 == -1) ||\n      (errorCode = FUN_08008b74(input1,input2,input1,input2), errorCode != 0)) ||\n     (result = FUN_08008b24(input1,input2,0,0), result == 0)) {\n    return returnValue;\n  }\n  value1 = 1;\n  pointer = &DAT_0800be5c;\n  input1Copy = input1;\n  input2Copy = input2;\n  input1Copy2 = input1;\n  input2Copy2 = input2;\n  if (flag == '\\0') {\n    initializedValue = 0;\nLAB_0800996c:\n    result = FUN_0800b2e0(&value1);\n    if (result != 0) goto joined_r0x0800997a;\n  }\n  else {\n    initializedValue = FUN_08008894(0,0,0,0);\n    if (flag != '\\x02') goto LAB_0800996c;\n  }\n  ptr = (undefined4 *)FUN_0800b3dc();\n  *ptr = 0x21;\njoined_r0x0800997a:\n  if (errorCode != 0) {\n    intPtr = (int *)FUN_0800b3dc();\n    *intPtr = errorCode;\n  }\n  return (undefined4)initializedValue;\n}\n\n",
            "renaming": {
                "FUN_080098d0": "execute_task_080098d0",
                "param_1": "input1",
                "param_2": "input2",
                "cVar1": "flag",
                "uVar2": "returnValue",
                "iVar3": "result",
                "puVar4": "ptr",
                "piVar5": "intPtr",
                "local_50": "value1",
                "local_4c": "pointer",
                "local_48": "input1Copy",
                "uStack_44": "input2Copy",
                "local_40": "input1Copy2",
                "uStack_3c": "input2Copy2",
                "local_38": "initializedValue",
                "local_30": "errorCode"
            },
            "calling": [
                "FUN_08003004",
                "FUN_080005b4",
                "FUN_08002978",
                "FUN_08001994"
            ],
            "called": [
                "FUN_08008b24",
                "FUN_0800b3dc",
                "FUN_0800a1bc",
                "FUN_0800b2e0",
                "FUN_08008894",
                "FUN_08008b74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009990": {
            "entrypoint": "0x08009990",
            "current_name": "calculate_result_08009990",
            "code": "\nuint calculateResult_08009990(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int temp1;\n  undefined4 temp2;\n  uint flag;\n  uint adjustedInput4;\n  uint adjustedInput2;\n  undefined8 result;\n  \n  adjustedInput4 = input4 & 0x7fffffff;\n  if (((adjustedInput4 | (-input3 | input3) >> 0x1f) < 0x7ff00001) &&\n     (adjustedInput2 = input2 & 0x7fffffff, (adjustedInput2 | (-input1 | input1) >> 0x1f) < 0x7ff00001)) {\n    if ((input4 + 0xc0100000 | input3) == 0) {\n      adjustedInput4 = FUN_0800af78();\n      return adjustedInput4;\n    }\n    flag = (int)input4 >> 0x1e & 2U | input2 >> 0x1f;\n    if ((adjustedInput2 | input1) == 0) {\n      if (flag == 2) {\n        input1 = 0x54442d18;\n      }\n      else if (flag == 3) {\n        input1 = 0x54442d18;\n      }\n    }\n    else {\n      if ((adjustedInput4 | input3) != 0) {\n        if (adjustedInput4 == 0x7ff00000) {\n          flag = flag - 1;\n          if (adjustedInput2 == 0x7ff00000) {\n            if (flag < 3) {\n              return *(uint *)(&DAT_0800be68 + flag * 8);\n            }\n            return 0x54442d18;\n          }\n          if (flag < 3) {\n            return *(uint *)(&DAT_0800be80 + flag * 8);\n          }\n          return 0;\n        }\n        if (adjustedInput2 != 0x7ff00000) {\n          temp1 = (int)(adjustedInput2 - adjustedInput4) >> 0x14;\n          if ((int)(adjustedInput2 - adjustedInput4) < 0x3d00000) {\n            if (((int)input4 < 0) && (temp1 + 0x3c < 0 != SCARRY4(temp1,0x3c))) {\n              result = 0;\n            }\n            else {\n              FUN_08008894(input1,input2,input3,input4,input4);\n              FUNC_0800b2cc();\n              result = FUN_0800af78();\n            }\n          }\n          else {\n            result = 0x3ff921fb54442d18;\n          }\n          temp2 = (undefined4)((ulonglong)result >> 0x20);\n          adjustedInput4 = (uint)result;\n          if (flag == 1) {\n            return adjustedInput4;\n          }\n          if (flag == 2) {\n            result = FUN_080082d0(adjustedInput4,temp2,0x33145c07,0x3ca1a626);\n            adjustedInput4 = FUN_080082d0(0x54442d18,0x400921fb,(int)result,(int)((ulonglong)result >> 0x20));\n            return adjustedInput4;\n          }\n          if (flag == 0) {\n            return adjustedInput4;\n          }\n          result = FUN_080082d0(adjustedInput4,temp2,0x33145c07,0x3ca1a626);\n          adjustedInput4 = FUN_080082d0((int)result,(int)((ulonglong)result >> 0x20),0x54442d18,0x400921fb);\n          return adjustedInput4;\n        }\n      }\n      if ((int)input2 < 0) {\n        input1 = 0x54442d18;\n      }\n      else {\n        input1 = 0x54442d18;\n      }\n    }\n  }\n  else {\n    input1 = FUN_080082d4(input3,input4,input1,input2);\n  }\n  return input1;\n}\n\n",
            "renaming": {
                "FUN_08009990": "calculate_result_08009990",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "temp1",
                "uVar2": "temp2",
                "uVar3": "flag",
                "uVar4": "adjustedInput4",
                "uVar5": "adjustedInput2",
                "uVar6": "result"
            },
            "calling": [
                "thunk_FUN_08009990"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_0800b2cc",
                "FUN_08008894",
                "FUN_0800af78",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009b24": {
            "entrypoint": "0x08009b24",
            "current_name": "reverse_calculation_08009b24",
            "code": "\nuint reverseCalculation_08009b24(uint input1,uint input2,uint input3,uint input4)\n\n{\n  undefined4 result1;\n  int result2;\n  uint temp1;\n  int temp2;\n  undefined4 temp3;\n  int temp4;\n  uint temp5;\n  undefined4 temp6;\n  undefined4 temp7;\n  undefined8 temp8;\n  undefined8 temp9;\n  undefined8 temp10;\n  undefined8 temp11;\n  int localVar1;\n  \n  input2 = input2 & 0x7fffffff;\n  input4 = input4 & 0x7fffffff;\n  temp1 = input1;\n  temp5 = input2;\n  if (input2 < input4) {\n    temp1 = input3;\n    input3 = input1;\n    temp5 = input4;\n    input4 = input2;\n  }\n  if (0x3c00000 < (int)(temp5 - input4)) {\n    temp1 = FUN_080082d4(temp1,temp5,input3,input4);\n    return temp1;\n  }\n  if (temp5 < 0x5f300001) {\n    localVar1 = 0;\n  }\n  else {\n    if (0x7fefffff < temp5) {\n      if ((temp5 & 0xfffff | temp1) != 0) {\n        temp1 = FUN_080082d4(temp1,temp5,input3,input4);\n      }\n      if ((input4 ^ 0x7ff00000 | input3) != 0) {\n        return temp1;\n      }\n      return input3;\n    }\n    temp5 = temp5 + 0xda800000;\n    input4 = input4 + 0xda800000;\n    localVar1 = 600;\n  }\n  temp9 = CONCAT44(temp5,temp1);\n  temp8 = CONCAT44(input4,input3);\n  if ((int)input4 < 0x20b00000) {\n    if ((int)input4 < 0x100000) {\n      if ((input4 | input3) == 0) {\n        return temp1;\n      }\n      temp8 = FUN_08008640(input3,input4,0,0x7fd00000);\n      temp9 = FUN_08008640(temp1,temp5,0,0x7fd00000);\n      localVar1 = localVar1 + -0x3fe;\n    }\n    else {\n      temp5 = temp5 + 0x25800000;\n      temp9 = CONCAT44(temp5,temp1);\n      input4 = input4 + 0x25800000;\n      temp8 = CONCAT44(input4,input3);\n      localVar1 = localVar1 + -600;\n    }\n  }\n  temp7 = (undefined4)((ulonglong)temp9 >> 0x20);\n  temp6 = (undefined4)temp9;\n  temp4 = (int)((ulonglong)temp8 >> 0x20);\n  temp3 = (undefined4)temp8;\n  temp8 = FUN_080082d0(temp6,temp7,temp3,temp4);\n  temp2 = (int)((ulonglong)temp8 >> 0x20);\n  result1 = (undefined4)temp8;\n  result2 = FUN_08008b24(temp3,temp4,result1,temp2);\n  if (result2 == 0) {\n    temp8 = FUN_08008640(0,input4,0);\n    temp9 = FUN_08008640(result1,temp2 + -0x80000000,result1,temp2);\n    temp10 = FUN_080082d4(temp6,temp7,temp6,temp7);\n    temp10 = FUN_080082d0((int)temp10,(int)((ulonglong)temp10 >> 0x20),0,temp5 + 0x100000);\n    temp10 = FUN_08008640((int)temp10,(int)((ulonglong)temp10 >> 0x20),temp3,temp4);\n    temp11 = FUN_080082d0(temp3,temp4,0,input4);\n    temp11 = FUN_08008640((int)temp11,(int)((ulonglong)temp11 >> 0x20),0,temp5 + 0x100000);\n    temp10 = FUN_080082d4((int)temp10,(int)((ulonglong)temp10 >> 0x20),(int)temp11,\n                          (int)((ulonglong)temp11 >> 0x20));\n    temp9 = FUN_080082d0((int)temp9,(int)((ulonglong)temp9 >> 0x20),(int)temp10,\n                          (int)((ulonglong)temp10 >> 0x20));\n    FUN_080082d0((int)temp8,(int)((ulonglong)temp8 >> 0x20),(int)temp9,\n                 (int)((ulonglong)temp9 >> 0x20));\n    temp8 = FUN_0800a1bc();\n  }\n  else {\n    temp8 = FUN_08008640(0,temp5,0,temp5);\n    temp9 = FUN_08008640(temp3,temp4 + -0x80000000,temp3,temp4);\n    temp10 = FUN_080082d4(temp6,temp7,0,temp5);\n    temp11 = FUN_080082d0(temp6,temp7,0,temp5);\n    temp10 = FUN_08008640((int)temp10,(int)((ulonglong)temp10 >> 0x20),(int)temp11,\n                          (int)((ulonglong)temp11 >> 0x20));\n    temp9 = FUN_080082d0((int)temp9,(int)((ulonglong)temp9 >> 0x20),(int)temp10,\n                          (int)((ulonglong)temp10 >> 0x20));\n    FUN_080082d0((int)temp8,(int)((ulonglong)temp8 >> 0x20),(int)temp9,\n                 (int)((ulonglong)temp9 >> 0x20));\n    temp8 = FUN_0800a1bc();\n  }\n  temp1 = (uint)temp8;\n  if (localVar1 != 0) {\n    temp1 = FUN_08008640(temp1,(int)((ulonglong)temp8 >> 0x20),0,localVar1 * 0x100000 + 0x3ff00000);\n  }\n  return temp1;\n}\n\n",
            "renaming": {
                "FUN_08009b24": "reverse_calculation_08009b24",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result1",
                "iVar2": "result2",
                "uVar3": "temp1",
                "iVar4": "temp2",
                "uVar5": "temp3",
                "iVar6": "temp4",
                "uVar7": "temp5",
                "uVar8": "temp6",
                "uVar9": "temp7",
                "uVar10": "temp8",
                "uVar11": "temp9",
                "uVar12": "temp10",
                "uVar13": "temp11",
                "local_3c": "localVar1"
            },
            "calling": [
                "FUN_0800981c"
            ],
            "called": [
                "FUN_08008b24",
                "FUN_080082d0",
                "FUN_0800a1bc",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009d78": {
            "entrypoint": "0x08009d78",
            "current_name": "calculate_square_root_08009d78",
            "code": "\nint calculateSquareRoot_08009d78(undefined4 inputValue,uint size,undefined8 *resultArray)\n\n{\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  undefined4 temp4;\n  undefined4 temp5;\n  undefined4 temp6;\n  undefined4 temp7;\n  uint tempSize;\n  int errorCode;\n  undefined8 tempValue1;\n  undefined8 tempValue2;\n  undefined8 tempValue3;\n  undefined4 localVar1;\n  undefined4 localVar2;\n  undefined8 localVar3;\n  undefined8 localVar4;\n  undefined8 localVar5;\n  \n  tempSize = size & 0x7fffffff;\n  if (tempSize < 0x3fe921fc) {\n    *(undefined4 *)resultArray = inputValue;\n    *(uint *)((int)resultArray + 4) = size;\n    *(undefined4 *)(resultArray + 1) = 0;\n    *(undefined4 *)((int)resultArray + 0xc) = 0;\n    return 0;\n  }\n  if (tempSize < 0x4002d97c) {\n    if ((int)size < 1) {\n      tempValue1 = FUN_080082d4(inputValue,size,0x54400000,0x3ff921fb);\n      temp3 = (undefined4)((ulonglong)tempValue1 >> 0x20);\n      temp1 = (undefined4)tempValue1;\n      if (tempSize != 0x3ff921fb) {\n        tempValue1 = FUN_080082d4(temp1,temp3,0x1a626331,0x3dd0b461);\n        *resultArray = tempValue1;\n        tempValue1 = FUN_080082d0(temp1,temp3);\n        tempValue1 = FUN_080082d4((int)tempValue1,(int)((ulonglong)tempValue1 >> 0x20),0x1a626331,0x3dd0b461);\n        resultArray[1] = tempValue1;\n        return -1;\n      }\n      tempValue1 = FUN_080082d4(temp1,temp3,0x1a600000,0x3dd0b461);\n      temp1 = (undefined4)((ulonglong)tempValue1 >> 0x20);\n      tempValue2 = FUN_080082d4((int)tempValue1,temp1,0x2e037073,0x3ba3198a);\n      *resultArray = tempValue2;\n      tempValue1 = FUN_080082d0((int)tempValue1,temp1);\n      tempValue1 = FUN_080082d4((int)tempValue1,(int)((ulonglong)tempValue1 >> 0x20),0x2e037073,0x3ba3198a);\n      resultArray[1] = tempValue1;\n      return -1;\n    }\n    tempValue1 = FUN_080082d0();\n    temp3 = (undefined4)((ulonglong)tempValue1 >> 0x20);\n    temp1 = (undefined4)tempValue1;\n    if (tempSize != 0x3ff921fb) {\n      tempValue1 = FUN_080082d0(temp1,temp3,0x1a626331,0x3dd0b461);\n      *resultArray = tempValue1;\n      tempValue1 = FUN_080082d0(temp1,temp3);\n      tempValue1 = FUN_080082d0((int)tempValue1,(int)((ulonglong)tempValue1 >> 0x20),0x1a626331,0x3dd0b461);\n      resultArray[1] = tempValue1;\n      return 1;\n    }\n    tempValue1 = FUN_080082d0(temp1,temp3,0x1a600000,0x3dd0b461);\n    temp1 = (undefined4)((ulonglong)tempValue1 >> 0x20);\n    tempValue2 = FUN_080082d0((int)tempValue1,temp1,0x2e037073,0x3ba3198a);\n    *resultArray = tempValue2;\n    tempValue1 = FUN_080082d0((int)tempValue1,temp1);\n    tempValue1 = FUN_080082d0((int)tempValue1,(int)((ulonglong)tempValue1 >> 0x20),0x2e037073,0x3ba3198a);\n    resultArray[1] = tempValue1;\n    return 1;\n  }\n  if (0x413921fb < tempSize) {\n    if (0x7fefffff < tempSize) {\n      tempValue1 = FUN_080082d0(inputValue,size,inputValue,size);\n      resultArray[1] = tempValue1;\n      *resultArray = tempValue1;\n      return 0;\n    }\n    errorCode = ((int)tempSize >> 0x14) + -0x416;\n    FUN_08008ba0();\n    localVar3 = FUN_0800856c();\n    tempValue1 = FUN_080082d0(inputValue,tempSize + errorCode * -0x100000,(int)localVar3,\n                          (int)((ulonglong)localVar3 >> 0x20));\n    tempValue1 = FUN_08008640((int)tempValue1,(int)((ulonglong)tempValue1 >> 0x20),0,0x41700000);\n    FUN_08008ba0();\n    localVar4 = FUN_0800856c();\n    tempValue1 = FUN_080082d0((int)tempValue1,(int)((ulonglong)tempValue1 >> 0x20));\n    localVar5 = FUN_08008640((int)tempValue1,(int)((ulonglong)tempValue1 >> 0x20),0,0x41700000);\n    FUN_08008b10((int)localVar5,(int)((ulonglong)localVar5 >> 0x20),0,0);\n    errorCode = FUN_0800a5a0(&localVar3,resultArray,errorCode);\n    if (-1 < (int)size) {\n      return errorCode;\n    }\n    *(int *)((int)resultArray + 4) = *(int *)((int)resultArray + 4) + -0x80000000;\n    *(int *)((int)resultArray + 0xc) = *(int *)((int)resultArray + 0xc) + -0x80000000;\n    return -errorCode;\n  }\n  tempValue1 = FUNC_0800b2cc();\n  temp3 = (undefined4)((ulonglong)tempValue1 >> 0x20);\n  tempValue2 = FUN_08008640((int)tempValue1,temp3,0x6dc9c883,0x3fe45f30);\n  FUN_080082d4((int)tempValue2,(int)((ulonglong)tempValue2 >> 0x20),0,0x3fe00000);\n  errorCode = FUN_08008ba0();\n  tempValue2 = FUN_0800856c();\n  temp4 = (undefined4)((ulonglong)tempValue2 >> 0x20);\n  temp1 = (undefined4)tempValue2;\n  tempValue2 = FUN_08008640(temp1,temp4,0x54400000,0x3ff921fb);\n  tempValue1 = FUN_080082d0((int)tempValue1,temp3,(int)tempValue2,(int)((ulonglong)tempValue2 >> 0x20));\n  temp5 = (undefined4)((ulonglong)tempValue1 >> 0x20);\n  temp3 = (undefined4)tempValue1;\n  tempValue2 = FUN_08008640(temp1,temp4,0x1a626331,0x3dd0b461);\n  if ((0x1f < errorCode) || (*(uint *)(&DAT_0800be98 + (errorCode + -1) * 4) == tempSize)) {\n    tempValue3 = FUN_080082d0(temp3,temp5,(int)tempValue2,(int)((ulonglong)tempValue2 >> 0x20));\n    if ((int)((tempSize >> 0x14) - ((uint)((int)((ulonglong)tempValue3 >> 0x20) << 1) >> 0x15)) < 0x11)\n    goto LAB_0800a0ce;\n    tempValue2 = FUN_08008640(temp1,temp4,0x1a600000,0x3dd0b461);\n    temp6 = (undefined4)((ulonglong)tempValue2 >> 0x20);\n    tempValue1 = FUN_080082d0(temp3,temp5,(int)tempValue2,temp6);\n    temp7 = (undefined4)((ulonglong)tempValue1 >> 0x20);\n    temp2 = (undefined4)tempValue1;\n    tempValue3 = FUN_080082d0(temp3,temp5,temp2,temp7);\n    tempValue2 = FUN_080082d0((int)tempValue3,(int)((ulonglong)tempValue3 >> 0x20),(int)tempValue2,temp6);\n    tempValue3 = FUN_08008640(temp1,temp4,0x2e037073,0x3ba3198a);\n    tempValue2 = FUN_080082d0((int)tempValue3,(int)((ulonglong)tempValue3 >> 0x20),(int)tempValue2,\n                          (int)((ulonglong)tempValue2 >> 0x20));\n    tempValue3 = FUN_080082d0(temp2,temp7,(int)tempValue2,(int)((ulonglong)tempValue2 >> 0x20));\n    if ((int)(((int)tempSize >> 0x14) - ((uint)((int)((ulonglong)tempValue3 >> 0x20) << 1) >> 0x15)) < 0x32\n       ) goto LAB_0800a0ce;\n    tempValue2 = FUN_08008640(temp1,temp4,0x2e000000,0x3ba3198a);\n    temp3 = (undefined4)((ulonglong)tempValue2 >> 0x20);\n    tempValue1 = FUN_080082d0(temp2,temp7,(int)tempValue2,temp3);\n    tempValue3 = FUN_080082d0(temp2,temp7);\n    tempValue2 = FUN_080082d0((int)tempValue3,(int)((ulonglong)tempValue3 >> 0x20),(int)tempValue2,temp3);\n    tempValue3 = FUN_08008640(temp1,temp4,0x252049c1,0x397b839a);\n    tempValue2 = FUN_080082d0((int)tempValue3,(int)((ulonglong)tempValue3 >> 0x20),(int)tempValue2,\n                          (int)((ulonglong)tempValue2 >> 0x20));\n  }\n  tempValue3 = FUN_080082d0((int)tempValue1,(int)((ulonglong)tempValue1 >> 0x20),(int)tempValue2,\n                        (int)((ulonglong)tempValue2 >> 0x20));\nLAB_0800a0ce:\n  localVar2 = (undefined4)((ulonglong)tempValue1 >> 0x20);\n  localVar1 = (undefined4)tempValue1;\n  *resultArray = tempValue3;\n  tempValue1 = FUN_080082d0(localVar1,localVar2);\n  tempValue1 = FUN_080082d0((int)tempValue1,(int)((ulonglong)tempValue1 >> 0x20),(int)tempValue2,\n                        (int)((ulonglong)tempValue2 >> 0x20));\n  resultArray[1] = tempValue1;\n  if ((int)size < 0) {\n    *(int *)resultArray = (int)tempValue3;\n    *(int *)((int)resultArray + 4) = (int)((ulonglong)tempValue3 >> 0x20) + -0x80000000;\n    *(int *)(resultArray + 1) = (int)tempValue1;\n    *(int *)((int)resultArray + 0xc) = (int)((ulonglong)tempValue1 >> 0x20) + -0x80000000;\n    errorCode = -errorCode;\n  }\n  return errorCode;\n}\n\n",
            "renaming": {
                "FUN_08009d78": "calculate_square_root_08009d78",
                "param_1": "inputValue",
                "param_2": "size",
                "param_3": "resultArray",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "uVar3": "temp3",
                "uVar4": "temp4",
                "uVar5": "temp5",
                "uVar6": "temp6",
                "uVar7": "temp7",
                "uVar8": "tempSize",
                "iVar9": "errorCode",
                "uVar10": "tempValue1",
                "uVar11": "tempValue2",
                "uVar12": "tempValue3",
                "local_50": "localVar1",
                "uStack_4c": "localVar2",
                "local_40": "localVar3",
                "local_38": "localVar4",
                "local_30": "localVar5"
            },
            "calling": [
                "FUN_080096e8",
                "FUN_08009410"
            ],
            "called": [
                "FUN_08008b10",
                "FUN_080082d0",
                "FUN_0800b2cc",
                "FUN_0800856c",
                "FUN_0800a5a0",
                "FUN_08008ba0",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a1bc": {
            "entrypoint": "0x0800a1bc",
            "current_name": "compute_inverse_0800a1bc",
            "code": "\nuint computeInverse_0800a1bc(uint input1,uint input2)\n\n{\n  uint quotient;\n  int iteration;\n  uint temp1;\n  undefined4 temp2;\n  uint shiftCount;\n  uint mask;\n  uint remainder;\n  uint divisor;\n  uint temp3;\n  int counter;\n  uint result;\n  uint offset;\n  undefined8 funcResult;\n  \n  if ((~input2 & 0x7ff00000) == 0) {\n    funcResult = FUN_08008640(input1,input2,input1,input2);\n    remainder = FUN_080082d4((int)funcResult,(int)((ulonglong)funcResult >> 0x20),input1,input2);\n    return remainder;\n  }\n  if ((int)input2 < 1) {\n    if ((input2 & 0x7fffffff | input1) == 0) {\n      return input1;\n    }\n    if (input2 != 0) {\n      funcResult = FUN_080082d0(input1,input2,input1);\n      temp2 = (undefined4)((ulonglong)funcResult >> 0x20);\n      remainder = FUN_08008894((int)funcResult,temp2,(int)funcResult,temp2);\n      return remainder;\n    }\n    do {\n      temp3 = input1;\n      remainder = temp3 >> 0xb;\n      input2 = input2 - 0x15;\n      input1 = temp3 << 0x15;\n    } while (remainder == 0);\n    quotient = input2;\n    if (-1 < (int)temp3) goto LAB_0800a290;\n    offset = 0x20;\n    shiftCount = 0xffffffff;\n    temp3 = input1;\n  }\n  else {\n    quotient = (int)input2 >> 0x14;\n    remainder = input2;\n    temp3 = input1;\n    if (quotient != 0) goto LAB_0800a1da;\nLAB_0800a290:\n    temp3 = 0;\n    offset = remainder;\n    do {\n      shiftCount = temp3;\n      remainder = offset << 1;\n      counter = offset << 0xc;\n      temp3 = shiftCount + 1;\n      offset = remainder;\n    } while (-1 < counter);\n    offset = 0x20 - temp3;\n    input2 = quotient;\n    temp3 = input1 << (temp3 & 0xff);\n  }\n  remainder = input1 >> (offset & 0xff) | remainder;\n  quotient = input2 - shiftCount;\nLAB_0800a1da:\n  remainder = remainder & 0xfffff | 0x100000;\n  if (-1 < (int)(quotient << 0x1f)) {\n    remainder = remainder * 2 - ((int)temp3 >> 0x1f);\n    temp3 = temp3 << 1;\n  }\n  offset = 0;\n  remainder = remainder * 2 - ((int)temp3 >> 0x1f);\n  temp3 = temp3 << 1;\n  quotient = 0;\n  counter = 0x16;\n  shiftCount = 0x200000;\n  do {\n    iteration = quotient + shiftCount;\n    if (iteration <= (int)remainder) {\n      remainder = remainder - iteration;\n      quotient = iteration + shiftCount;\n      offset = offset + shiftCount;\n    }\n    counter = counter + -1;\n    remainder = remainder * 2 - ((int)temp3 >> 0x1f);\n    shiftCount = shiftCount >> 1;\n    temp3 = temp3 << 1;\n  } while (counter != 0);\n  iteration = 0x20;\n  mask = 0x80000000;\n  counter = 0;\n  shiftCount = 0;\n  do {\n    temp1 = mask + counter;\n    result = quotient;\n    if ((int)quotient < (int)remainder) {\n      if ((int)temp1 < 0) {\nLAB_0800a26a:\n        if (-1 < (int)(temp1 + mask)) {\n          result = quotient + 1;\n        }\n      }\n      divisor = remainder - quotient;\n      quotient = result;\n      if (temp3 < temp1) {\n        divisor = divisor - 1;\n      }\nLAB_0800a262:\n      counter = temp1 + mask;\n      temp3 = temp3 - temp1;\n      shiftCount = shiftCount + mask;\n      remainder = divisor;\n    }\n    else if ((remainder == quotient) && (temp1 <= temp3)) {\n      if ((int)temp1 < 0) goto LAB_0800a26a;\n      divisor = 0;\n      quotient = remainder;\n      goto LAB_0800a262;\n    }\n    iteration = iteration + -1;\n    mask = mask >> 1;\n    remainder = remainder * 2 - ((int)temp3 >> 0x1f);\n    temp3 = temp3 << 1;\n    if (iteration == 0) {\n      if ((remainder | temp3) == 0) {\n        shiftCount = shiftCount >> 1;\n      }\n      else if (shiftCount == 0xffffffff) {\n        offset = offset + 1;\n        shiftCount = 0;\n      }\n      else {\n        shiftCount = shiftCount + 1 >> 1;\n      }\n      if ((offset & 1) != 0) {\n        shiftCount = shiftCount | 0x80000000;\n      }\n      return shiftCount;\n    }\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_0800a1bc": "compute_inverse_0800a1bc",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "quotient",
                "iVar2": "iteration",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "uVar5": "shiftCount",
                "uVar6": "mask",
                "uVar7": "remainder",
                "uVar8": "divisor",
                "uVar9": "temp3",
                "iVar10": "counter",
                "uVar11": "result",
                "uVar12": "offset",
                "uVar13": "funcResult"
            },
            "calling": [
                "FUN_080098d0",
                "FUN_08009b24"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_08008894",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a348": {
            "entrypoint": "0x0800a348",
            "current_name": "calculate_result_0800a348",
            "code": "\nundefined4 calculateResult_0800a348(undefined4 input1,uint input2,undefined4 input3,undefined4 input4)\n\n{\n  int result;\n  undefined4 tempVar1;\n  undefined4 tempVar2;\n  uint absInput2;\n  undefined8 calculationResult1;\n  undefined8 calculationResult2;\n  undefined8 calculationResult3;\n  undefined4 tempVar3;\n  undefined4 tempVar4;\n  undefined4 tempVar5;\n  undefined4 tempVar6;\n  \n  absInput2 = input2 & 0x7fffffff;\n  if (absInput2 < 0x3e400000) {\n    result = FUN_08008ba0();\n    if (result == 0) {\n      return 0;\n    }\n    calculationResult1 = FUN_08008640(input1,input2,input1,input2);\n    tempVar2 = (undefined4)((ulonglong)calculationResult1 >> 0x20);\n    tempVar1 = (undefined4)calculationResult1;\n    calculationResult2 = FUN_08008640(tempVar1,tempVar2,0xbe8838d4,0xbda8fae9);\n    calculationResult2 = FUN_080082d4((int)calculationResult2,(int)((ulonglong)calculationResult2 >> 0x20),0xbdb4b1c4,0x3e21ee9e);\n    calculationResult2 = FUN_08008640((int)calculationResult2,(int)((ulonglong)calculationResult2 >> 0x20),tempVar1,tempVar2);\n    calculationResult2 = FUN_080082d0((int)calculationResult2,(int)((ulonglong)calculationResult2 >> 0x20),0x809c52ad,0x3e927e4f);\n    calculationResult2 = FUN_08008640((int)calculationResult2,(int)((ulonglong)calculationResult2 >> 0x20),tempVar1,tempVar2);\n    calculationResult2 = FUN_080082d4((int)calculationResult2,(int)((ulonglong)calculationResult2 >> 0x20),0x19cb1590,0x3efa01a0);\n    calculationResult2 = FUN_08008640((int)calculationResult2,(int)((ulonglong)calculationResult2 >> 0x20),tempVar1,tempVar2);\n    calculationResult2 = FUN_080082d0((int)calculationResult2,(int)((ulonglong)calculationResult2 >> 0x20),0x16c15177,0x3f56c16c);\n    calculationResult2 = FUN_08008640((int)calculationResult2,(int)((ulonglong)calculationResult2 >> 0x20),tempVar1,tempVar2);\n    calculationResult2 = FUN_080082d4((int)calculationResult2,(int)((ulonglong)calculationResult2 >> 0x20),0x5555554c,0x3fa55555);\n    calculationResult2 = FUN_08008640((int)calculationResult2,(int)((ulonglong)calculationResult2 >> 0x20),tempVar1,tempVar2);\n  }\n  else {\n    calculationResult1 = FUN_08008640(input1,input2,input1,input2);\n    tempVar2 = (undefined4)((ulonglong)calculationResult1 >> 0x20);\n    tempVar1 = (undefined4)calculationResult1;\n    calculationResult2 = FUN_08008640(tempVar1,tempVar2,0xbe8838d4,0xbda8fae9);\n    calculationResult2 = FUN_080082d4((int)calculationResult2,(int)((ulonglong)calculationResult2 >> 0x20),0xbdb4b1c4,0x3e21ee9e);\n    calculationResult2 = FUN_08008640((int)calculationResult2,(int)((ulonglong)calculationResult2 >> 0x20),tempVar1,tempVar2);\n    calculationResult2 = FUN_080082d0((int)calculationResult2,(int)((ulonglong)calculationResult2 >> 0x20),0x809c52ad,0x3e927e4f);\n    calculationResult2 = FUN_08008640((int)calculationResult2,(int)((ulonglong)calculationResult2 >> 0x20),tempVar1,tempVar2);\n    calculationResult2 = FUN_080082d4((int)calculationResult2,(int)((ulonglong)calculationResult2 >> 0x20),0x19cb1590,0x3efa01a0);\n    calculationResult2 = FUN_08008640((int)calculationResult2,(int)((ulonglong)calculationResult2 >> 0x20),tempVar1,tempVar2);\n    calculationResult2 = FUN_080082d0((int)calculationResult2,(int)((ulonglong)calculationResult2 >> 0x20),0x16c15177,0x3f56c16c);\n    calculationResult2 = FUN_08008640((int)calculationResult2,(int)((ulonglong)calculationResult2 >> 0x20),tempVar1,tempVar2);\n    calculationResult2 = FUN_080082d4((int)calculationResult2,(int)((ulonglong)calculationResult2 >> 0x20),0x5555554c,0x3fa55555);\n    calculationResult2 = FUN_08008640((int)calculationResult2,(int)((ulonglong)calculationResult2 >> 0x20),tempVar1,tempVar2);\n    if (0x3fd33332 < absInput2) {\n      if (absInput2 < 0x3fe90001) {\n        result = absInput2 - 0x200000;\n        calculationResult1 = FUN_080082d0(0,0x3ff00000,0,result);\n      }\n      else {\n        result = 0x3fd20000;\n        calculationResult1 = 0x3fe7000000000000;\n      }\n      tempVar6 = (undefined4)((ulonglong)calculationResult1 >> 0x20);\n      tempVar5 = (undefined4)calculationResult1;\n      calculationResult1 = FUN_08008640(tempVar1,tempVar2,0,0x3fe00000);\n      calculationResult1 = FUN_080082d0((int)calculationResult1,(int)((ulonglong)calculationResult1 >> 0x20),0,result);\n      calculationResult2 = FUN_08008640(tempVar1,tempVar2,(int)calculationResult2,(int)((ulonglong)calculationResult2 >> 0x20));\n      calculationResult3 = FUN_08008640(input1,input2,input3,input4);\n      calculationResult2 = FUN_080082d0((int)calculationResult2,(int)((ulonglong)calculationResult2 >> 0x20),(int)calculationResult3,\n                           (int)((ulonglong)calculationResult3 >> 0x20));\n      calculationResult1 = FUN_080082d0((int)calculationResult1,(int)((ulonglong)calculationResult1 >> 0x20),(int)calculationResult2,\n                           (int)((ulonglong)calculationResult2 >> 0x20));\n      tempVar1 = FUN_080082d0(tempVar5,tempVar6,(int)calculationResult1,(int)((ulonglong)calculationResult1 >> 0x20));\n      return tempVar1;\n    }\n  }\n  tempVar4 = (undefined4)((ulonglong)calculationResult2 >> 0x20);\n  tempVar3 = (undefined4)calculationResult2;\n  tempVar1 = (undefined4)((ulonglong)calculationResult1 >> 0x20);\n  calculationResult2 = FUN_08008640((int)calculationResult1,tempVar1,0,0x3fe00000);\n  calculationResult1 = FUN_08008640((int)calculationResult1,tempVar1,tempVar3,tempVar4);\n  calculationResult3 = FUN_08008640(input1,input2,input3,input4);\n  calculationResult1 = FUN_080082d0((int)calculationResult1,(int)((ulonglong)calculationResult1 >> 0x20),(int)calculationResult3,\n                       (int)((ulonglong)calculationResult3 >> 0x20));\n  calculationResult1 = FUN_080082d0((int)calculationResult2,(int)((ulonglong)calculationResult2 >> 0x20),(int)calculationResult1,\n                       (int)((ulonglong)calculationResult1 >> 0x20));\n  tempVar1 = FUN_080082d0(0,0x3ff00000,(int)calculationResult1,(int)((ulonglong)calculationResult1 >> 0x20));\n  return tempVar1;\n}\n\n",
            "renaming": {
                "FUN_0800a348": "calculate_result_0800a348",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "result",
                "uVar2": "tempVar1",
                "uVar3": "tempVar2",
                "uVar4": "absInput2",
                "uVar5": "calculationResult1",
                "uVar6": "calculationResult2",
                "uVar7": "calculationResult3",
                "local_30": "tempVar3",
                "uStack_2c": "tempVar4",
                "local_28": "tempVar5",
                "uStack_24": "tempVar6"
            },
            "calling": [
                "FUN_080096e8",
                "FUN_08009410"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_08008ba0",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a5a0": {
            "entrypoint": "0x0800a5a0",
            "current_name": "calculate_result_0800a5a0",
            "code": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nuint calculate_result_0800a5a0(int input_value,undefined8 *results_array,int array_length,int param4,int param5,int param6)\n\n{\n  undefined4 *ptr1;\n  uint return_value;\n  uint temp1;\n  int temp2;\n  uint *ptr2;\n  undefined4 temp3;\n  uint **ptrptr;\n  undefined4 temp4;\n  int temp5;\n  undefined4 *ptr3;\n  undefined4 temp6;\n  uint temp7;\n  uint *ptr4;\n  int temp8;\n  int temp9;\n  undefined8 *ptr16;\n  int temp10;\n  undefined4 *ptr5;\n  undefined8 *ptr19;\n  undefined4 temp11;\n  int temp12;\n  undefined8 *preturn_value2;\n  undefined4 *preturn_value3;\n  bool bVar24;\n  undefined8 temp13;\n  undefined8 temp14;\n  undefined8 temp15;\n  undefined8 *temp_array;\n  int temp16;\n  int temp17;\n  int temp18;\n  uint *results [2];\n  uint array [20];\n  undefined8 variable1;\n  undefined8 variable2;\n  int variable3 [38];\n  undefined8 variable4;\n  \n  temp9 = *(int *)(&DAT_0800c060 + param5 * 4);\n  temp5 = param4 + -1;\n  results[1] = (uint *)results_array;\n  if (array_length + 0x14 < 0 == SCARRY4(array_length,0x14)) {\n    temp18 = (array_length + -3) / 0x18;\n    temp17 = (temp18 + 1) * -0x18;\n  }\n  else {\n    temp17 = -0x18;\n    temp18 = 0;\n  }\n  temp17 = array_length + temp17;\n  temp10 = temp18 - temp5;\n  if (-1 < temp9 + temp5) {\n    temp12 = temp9 + temp5 + 1 + temp10;\n    ptr16 = &variable1;\n    do {\n      while (temp10 < 0) {\n        temp10 = temp10 + 1;\n        *(undefined4 *)ptr16 = 0;\n        *(undefined4 *)((int)ptr16 + 4) = 0;\n        ptr16 = ptr16 + 1;\n        if (temp10 == temp12) goto LAB_0800a626;\n      }\n      temp14 = FUN_0800856c(*(undefined4 *)(param6 + temp10 * 4));\n      temp10 = temp10 + 1;\n      *ptr16 = temp14;\n      ptr16 = ptr16 + 1;\n    } while (temp10 != temp12);\n  }\nLAB_0800a626:\n  ptr3 = (undefined4 *)(input_value + -8);\n  if (-1 < temp9) {\n    preturn_value2 = &variable1 + param4;\n    temp10 = temp5;\n    ptr16 = &variable4;\n    do {\n      if (temp5 < 0) {\n        temp14 = 0;\n      }\n      else {\n        temp14 = 0;\n        preturn_value3 = ptr3;\n        ptr19 = preturn_value2;\n        do {\n          ptr5 = preturn_value3 + 2;\n          temp13 = FUN_08008640(*ptr5,preturn_value3[3],*(undefined4 *)(ptr19 + -1),\n                                *(undefined4 *)((int)ptr19 + -4));\n          temp14 = FUN_080082d4((int)temp14,(int)((ulonglong)temp14 >> 0x20),(int)temp13,\n                                (int)((ulonglong)temp13 >> 0x20));\n          preturn_value3 = ptr5;\n          ptr19 = ptr19 + -1;\n        } while (ptr5 != ptr3 + param4 * 2);\n      }\n      temp10 = temp10 + 1;\n      *ptr16 = temp14;\n      preturn_value2 = preturn_value2 + 1;\n      ptr16 = ptr16 + 1;\n    } while (temp10 != temp9 + param4);\n  }\n  results[0] = array + temp9 + -1;\n  temp10 = temp9;\n  do {\n    temp14 = CONCAT44(*(undefined4 *)((int)&variable4 + temp10 * 8 + 4),\n                      *(undefined4 *)(&variable4 + temp10));\n    if (0 < temp10) {\n      ptr16 = &variable4 + temp10;\n      ptr2 = array;\n      do {\n        temp3 = (undefined4)((ulonglong)temp14 >> 0x20);\n        FUN_08008640((int)temp14,temp3,0,0x3e700000);\n        FUN_08008ba0();\n        temp13 = FUN_0800856c();\n        temp4 = (undefined4)((ulonglong)temp13 >> 0x20);\n        temp15 = FUN_08008640((int)temp13,temp4,0,0x41700000);\n        FUN_080082d0((int)temp14,temp3,(int)temp15,(int)((ulonglong)temp15 >> 0x20));\n        return_value = FUN_08008ba0();\n        preturn_value2 = ptr16 + -1;\n        temp3 = *(undefined4 *)preturn_value2;\n        temp6 = *(undefined4 *)((int)ptr16 + -4);\n        *ptr2 = return_value;\n        temp14 = FUN_080082d4((int)temp13,temp4,temp3,temp6);\n        ptr16 = preturn_value2;\n        ptr2 = ptr2 + 1;\n      } while (preturn_value2 != &variable4);\n    }\n    temp14 = FUN_0800b2e8((int)temp14,(int)((ulonglong)temp14 >> 0x20),temp17);\n    temp4 = (undefined4)((ulonglong)temp14 >> 0x20);\n    FUN_08008640((int)temp14,temp4,0,0x3fc00000);\n    temp13 = FUN_080094c0();\n    temp13 = FUN_08008640((int)temp13,(int)((ulonglong)temp13 >> 0x20),0,0x40200000);\n    temp14 = FUN_080082d0((int)temp14,temp4,(int)temp13,(int)((ulonglong)temp13 >> 0x20));\n    return_value = FUN_08008ba0();\n    temp13 = FUN_0800856c();\n    temp14 = FUN_080082d0((int)temp14,(int)((ulonglong)temp14 >> 0x20),(int)temp13,\n                          (int)((ulonglong)temp13 >> 0x20));\n    temp3 = (undefined4)((ulonglong)temp14 >> 0x20);\n    temp4 = (undefined4)temp14;\n    if (temp17 < 1) {\n      if (temp17 == 0) {\n        temp12 = (int)array[temp10 + -1] >> 0x17;\n        goto joined_r0x0800a8b8;\n      }\n      temp12 = FUN_08008b4c(temp4,temp3,0,0x3fe00000);\n      if (temp12 != 0) {\n        return_value = return_value + 1;\n        if (temp10 < 1) {\n          temp14 = FUN_080082d0(0,0x3ff00000,temp4,temp3);\n          temp12 = 2;\n          goto LAB_0800a7a4;\n        }\n        temp12 = 2;\n        goto LAB_0800a8c8;\n      }\n    }\n    else {\n      temp2 = (int)array[temp10 + -1] >> (0x18U - temp17 & 0xff);\n      temp7 = array[temp10 + -1] - (temp2 << (0x18U - temp17 & 0xff));\n      temp12 = (int)temp7 >> (0x17U - temp17 & 0xff);\n      array[temp10 + -1] = temp7;\n      return_value = return_value + temp2;\njoined_r0x0800a8b8:\n      if (0 < temp12) {\n        return_value = return_value + 1;\n        if (temp10 < 1) {\n          bVar24 = false;\n        }\n        else {\nLAB_0800a8c8:\n          if (array[0] == 0) {\n            bVar24 = false;\n            if (temp10 != 1) {\n              ptr2 = array;\n              temp2 = 1;\n              do {\n                ptr2 = ptr2 + 1;\n                if (*ptr2 != 0) {\n                  temp8 = temp2 + 1;\n                  temp7 = *ptr2;\n                  goto LAB_0800a8e2;\n                }\n                temp2 = temp2 + 1;\n              } while (temp2 != temp10);\n              bVar24 = false;\n            }\n          }\n          else {\n            temp8 = 1;\n            temp2 = 0;\n            temp7 = array[0];\nLAB_0800a8e2:\n            array[temp2] = 0x1000000 - temp7;\n            if (temp8 < temp10) {\n              temp7 = array[temp8];\n              ptr2 = array + temp8;\n              while( true ) {\n                ptr4 = ptr2 + 1;\n                *ptr2 = 0xffffff - temp7;\n                if (ptr4 == array + temp10) break;\n                temp7 = *ptr4;\n                ptr2 = ptr4;\n              }\n            }\n            bVar24 = true;\n          }\n        }\n        if (0 < temp17) {\n          if (temp17 == 1) {\n            array[temp10 + -1] = array[temp10 + -1] & 0x7fffff;\n          }\n          else if (temp17 == 2) {\n            array[temp10 + -1] = array[temp10 + -1] & 0x3fffff;\n          }\n        }\n        if (temp12 == 2) {\n          temp14 = FUN_080082d0(0,0x3ff00000,temp4,temp3);\n          if (bVar24) {\n            temp13 = FUN_0800b2e8(0,0x3ff00000,temp17);\n            temp14 = FUN_080082d0((int)temp14,(int)((ulonglong)temp14 >> 0x20),(int)temp13,\n                                  (int)((ulonglong)temp13 >> 0x20));\n          }\n        }\n      }\n    }\nLAB_0800a7a4:\n    temp4 = (undefined4)((ulonglong)temp14 >> 0x20);\n    temp2 = FUN_08008b10((int)temp14,temp4,0,0);\n    if (temp2 == 0) {\n      temp14 = FUN_0800b2e8((int)temp14,temp4,-temp17);\n      temp3 = (undefined4)((ulonglong)temp14 >> 0x20);\n      temp4 = (undefined4)temp14;\n      temp5 = FUN_08008b4c(temp4,temp3,0,0x41700000);\n      if (temp5 == 0) {\n        temp7 = FUN_08008ba0(temp4,temp3);\n        array[temp10] = temp7;\n        temp2 = temp10;\n      }\n      else {\n        FUN_08008640(temp4,temp3,0,0x3e700000);\n        temp7 = FUN_08008ba0();\n        temp14 = FUN_0800856c();\n        temp14 = FUN_08008640((int)temp14,(int)((ulonglong)temp14 >> 0x20),0,0x41700000);\n        FUN_080082d0(temp4,temp3,(int)temp14,(int)((ulonglong)temp14 >> 0x20));\n        temp1 = FUN_08008ba0();\n        temp17 = temp17 + 0x18;\n        array[temp10] = temp1;\n        array[temp10 + 1] = temp7;\n        temp2 = temp10 + 1;\n      }\n      goto LAB_0800a9f6;\n    }\n    temp2 = temp10 + -1;\n    if (temp9 <= temp2) {\n      temp7 = 0;\n      ptr2 = array + temp10 + 0x3fffffff;\n      do {\n        ptr4 = ptr2 + -1;\n        temp7 = temp7 | *ptr2;\n        ptr2 = ptr4;\n      } while (ptr4 != results[0]);\n      if (temp7 != 0) break;\n    }\n    if (array[temp9 + -1] == 0) {\n      temp16 = 1;\n      ptrptr = results + temp9;\n      do {\n        ptr2 = *ptrptr;\n        temp16 = temp16 + 1;\n        ptrptr = ptrptr + -1;\n      } while (ptr2 == (uint *)0x0);\n      temp16 = temp10 + temp16;\n    }\n    else {\n      temp16 = temp10 + 1;\n    }\n    temp12 = temp10 + 1;\n    preturn_value3 = (undefined4 *)(param6 + (temp12 + temp18 + 0x3fffffff) * 4);\n    ptr16 = &variable1 + temp10 + param4;\n    temp_array = &variable4 + temp12;\n    do {\n      preturn_value3 = preturn_value3 + 1;\n      temp14 = FUN_0800856c(*preturn_value3);\n      *ptr16 = temp14;\n      preturn_value2 = ptr16 + 1;\n      if (temp5 < 0) {\n        temp13 = 0;\n      }\n      else {\n        temp13 = 0;\n        ptr5 = ptr3;\n        while( true ) {\n          ptr16 = ptr16 + -1;\n          ptr1 = ptr5 + 2;\n          temp14 = FUN_08008640((int)temp14,(int)((ulonglong)temp14 >> 0x20),*ptr1,ptr5[3]);\n          temp13 = FUN_080082d4((int)temp13,(int)((ulonglong)temp13 >> 0x20),(int)temp14,\n                                (int)((ulonglong)temp14 >> 0x20));\n          if (ptr1 == ptr3 + param4 * 2) break;\n          temp14 = *ptr16;\n          ptr5 = ptr1;\n        }\n      }\n      *temp_array = temp13;\n      temp12 = temp12 + 1;\n      temp10 = temp16;\n      ptr16 = preturn_value2;\n      temp_array = temp_array + 1;\n    } while (temp12 <= temp16);\n  } while( true );\n  temp17 = temp17 + -0x18;\n  if (array[temp2] == 0) {\n    ptr2 = array + temp10 + 0x3ffffffe;\n    do {\n      temp7 = *ptr2;\n      temp2 = temp2 + -1;\n      temp17 = temp17 + -0x18;\n      ptr2 = ptr2 + -1;\n    } while (temp7 == 0);\n  }\nLAB_0800a9f6:\n  temp14 = FUN_0800b2e8(0,0x3ff00000,temp17);\n  if (temp2 < 0) {\n    if (2 < param5) {\n      if (param5 == 3) {\n        temp14 = 0;\nLAB_0800abe4:\n        if (temp12 == 0) {\n          *results[1] = (undefined4)variable2;\n          *(int *)((int)results[1] + 4) = variable2._4_4_;\n          *(undefined8 *)((int)results[1] + 0x10) = temp14;\n          *(int *)((int)results[1] + 8) = variable3[0];\n          *(int *)((int)results[1] + 0xc) = variable3[1];\n          return return_value & 7;\n        }\n        *(int *)((int)results[1] + 0x10) = (int)temp14;\n        *(int *)((int)results[1] + 8) = variable3[0];\n        *(int *)((int)results[1] + 0x14) = (int)((ulonglong)temp14 >> 0x20) + -0x80000000;\n        *(int *)((int)results[1] + 4) = variable2._4_4_ + -0x80000000;\n        *(int *)((int)results[1] + 0xc) = variable3[1] + -0x80000000;\n        *results[1] = (undefined4)variable2;\n        return return_value & 7;\n      }\n      goto LAB_0800ab0e;\n    }\n    if (param5 < 1) {\n      if (param5 != 0) goto LAB_0800ab0e;\n      temp14 = 0;\nLAB_0800aafc:\n      temp5 = (int)((ulonglong)temp14 >> 0x20);\n      if (temp12 != 0) {\n        temp5 = temp5 + -0x80000000;\n      }\n      *results[1] = (int)temp14;\n      *(int *)((int)results[1] + 4) = temp5;\nLAB_0800ab0e:\n      return return_value & 7;\n    }\n    temp14 = 0;\n  }\n  else {\n    preturn_value2 = &variable4 + temp2;\n    ptr2 = array + temp2 + 1;\n    ptr16 = &variable4 + temp2 + 1;\n    do {\n      temp4 = (undefined4)((ulonglong)temp14 >> 0x20);\n      ptr2 = ptr2 + -1;\n      temp13 = FUN_0800856c(*ptr2);\n      temp13 = FUN_08008640((int)temp13,(int)((ulonglong)temp13 >> 0x20),(int)temp14,temp4);\n      ptr16 = ptr16 + -1;\n      *ptr16 = temp13;\n      temp14 = FUN_08008640((int)temp14,temp4,0,0x3e700000);\n    } while (ptr2 != array);\n    temp5 = 0;\n    do {\n      if (temp9 < 0) {\n        temp14 = 0;\n      }\n      else {\n        temp4 = 0x40000000;\n        temp3 = 0x3ff921fb;\n        temp14 = 0;\n        temp10 = 0;\n        ptr16 = preturn_value2;\n        ptr3 = &DAT_0800c028;\n        while( true ) {\n          temp13 = FUN_08008640(*(undefined4 *)ptr16,*(undefined4 *)((int)ptr16 + 4),temp4,temp3\n                               );\n          temp14 = FUN_080082d4((int)temp14,(int)((ulonglong)temp14 >> 0x20),(int)temp13,\n                                (int)((ulonglong)temp13 >> 0x20));\n          temp10 = temp10 + 1;\n          if ((temp9 < temp10) || (temp5 < temp10)) break;\n          temp4 = *ptr3;\n          temp3 = ptr3[1];\n          ptr16 = ptr16 + 1;\n          ptr3 = ptr3 + 2;\n        }\n      }\n      bVar24 = temp5 != temp2;\n      *(int *)(&variable2 + temp5) = (int)temp14;\n      *(int *)((int)&variable2 + (temp5 * 2 + 1) * 4) = (int)((ulonglong)temp14 >> 0x20);\n      preturn_value2 = preturn_value2 + -1;\n      temp5 = temp5 + 1;\n    } while (bVar24);\n    if (2 < param5) {\n      if (param5 == 3) {\n        if (temp2 != 0) {\n          ptr16 = &variable2 + temp2;\n          temp14 = CONCAT44(*(undefined4 *)((int)&variable2 + (temp2 * 2 + 1) * 4),\n                            *(undefined4 *)ptr16);\n          do {\n            temp3 = (undefined4)((ulonglong)temp14 >> 0x20);\n            temp4 = (undefined4)temp14;\n            temp6 = *(undefined4 *)(ptr16 + -1);\n            temp11 = *(undefined4 *)((int)ptr16 + -4);\n            temp14 = FUN_080082d4(temp4,temp3,temp6,temp11);\n            temp13 = FUN_080082d0(temp6,temp11,(int)temp14,(int)((ulonglong)temp14 >> 0x20));\n            temp13 = FUN_080082d4((int)temp13,(int)((ulonglong)temp13 >> 0x20),temp4,temp3);\n            *ptr16 = temp13;\n            ptr16 = ptr16 + -1;\n            *ptr16 = temp14;\n          } while (&variable2 != ptr16);\n          if (1 < temp2) {\n            ptr16 = &variable2 + temp2;\n            temp14 = CONCAT44(*(undefined4 *)((int)&variable2 + (temp2 * 2 + 1) * 4),\n                              *(undefined4 *)ptr16);\n            do {\n              temp3 = (undefined4)((ulonglong)temp14 >> 0x20);\n              temp4 = (undefined4)temp14;\n              temp6 = *(undefined4 *)(ptr16 + -1);\n              temp11 = *(undefined4 *)((int)ptr16 + -4);\n              temp14 = FUN_080082d4(temp4,temp3,temp6,temp11);\n              temp13 = FUN_080082d0(temp6,temp11,(int)temp14,(int)((ulonglong)temp14 >> 0x20));\n              temp13 = FUN_080082d4((int)temp13,(int)((ulonglong)temp13 >> 0x20),temp4,temp3);\n              *ptr16 = temp13;\n              ptr16 = ptr16 + -1;\n              *ptr16 = temp14;\n            } while (&variable2 + 1 != ptr16);\n            temp14 = 0;\n            ptr16 = &variable2 + temp2 + 1;\n            do {\n              preturn_value2 = ptr16 + -1;\n              temp14 = FUN_080082d4((int)temp14,(int)((ulonglong)temp14 >> 0x20),\n                                    *(undefined4 *)preturn_value2,*(undefined4 *)((int)ptr16 + -4));\n              ptr16 = preturn_value2;\n            } while (&variable2 + 2 != preturn_value2);\n            goto LAB_0800abe4;\n          }\n        }\n        temp14 = 0;\n        goto LAB_0800abe4;\n      }\n      goto LAB_0800ab0e;\n    }\n    if (param5 < 1) {\n      if (param5 != 0) goto LAB_0800ab0e;\n      temp14 = 0;\n      ptr16 = &variable2 + temp2 + 1;\n      do {\n        preturn_value2 = ptr16 + -1;\n        temp14 = FUN_080082d4((int)temp14,(int)((ulonglong)temp14 >> 0x20),*(undefined4 *)preturn_value2,\n                              *(undefined4 *)((int)ptr16 + -4));\n        ptr16 = preturn_value2;\n      } while (&variable2 != preturn_value2);\n      goto LAB_0800aafc;\n    }\n    temp14 = 0;\n    ptr16 = &variable2 + temp2 + 1;\n    do {\n      preturn_value2 = ptr16 + -1;\n      temp14 = FUN_080082d4((int)temp14,(int)((ulonglong)temp14 >> 0x20),*(undefined4 *)preturn_value2,\n                            *(undefined4 *)((int)ptr16 + -4));\n      ptr16 = preturn_value2;\n    } while (&variable2 != preturn_value2);\n  }\n  temp5 = (int)((ulonglong)temp14 >> 0x20);\n  temp4 = (undefined4)temp14;\n  if (temp12 == 0) {\n    *(undefined8 *)results[1] = temp14;\n    temp14 = FUN_080082d0((undefined4)variable2,variable2._4_4_,temp4,temp5);\n    if (temp2 < 1) goto LAB_0800ad26;\nLAB_0800ad04:\n    temp5 = 1;\n    ptr16 = &variable2;\n    do {\n      temp14 = FUN_080082d4((int)temp14,(int)((ulonglong)temp14 >> 0x20),\n                            *(undefined4 *)(ptr16 + 1),*(undefined4 *)((int)ptr16 + 0xc));\n      temp5 = temp5 + 1;\n      ptr16 = ptr16 + 1;\n    } while (temp5 <= temp2);\n    if (temp12 == 0) goto LAB_0800ad26;\n  }\n  else {\n    *results[1] = temp4;\n    *(int *)((int)results[1] + 4) = temp5 + -0x80000000;\n    temp14 = FUN_080082d0((undefined4)variable2,variable2._4_4_,temp4,temp5);\n    if (0 < temp2) goto LAB_0800ad04;\n  }\n  temp14 = CONCAT44((int)((ulonglong)temp14 >> 0x20) + -0x80000000,(int)temp14);\nLAB_0800ad26:\n  *(undefined8 *)((int)results[1] + 8) = temp14;\n  return return_value & 7;\n}\n\n",
            "renaming": {
                "FUN_0800a5a0": "calculate_result_0800a5a0",
                "param_1": "input_value",
                "param_2": "results_array",
                "param_3": "array_length",
                "param_4": "param4",
                "param_5": "param5",
                "param_6": "param6",
                "puVar1": "ptr1",
                "uVar2": "return_value",
                "uVar3": "temp1",
                "iVar4": "temp2",
                "puVar5": "ptr2",
                "uVar6": "temp3",
                "ppuVar7": "ptrptr",
                "uVar8": "temp4",
                "iVar9": "temp5",
                "puVar10": "ptr3",
                "uVar11": "temp6",
                "uVar12": "temp7",
                "puVar13": "ptr4",
                "iVar14": "temp8",
                "iVar15": "temp9",
                "iVar17": "temp10",
                "puVar18": "ptr5",
                "uVar20": "temp11",
                "iVar21": "temp12",
                "uVar25": "temp13",
                "uVar26": "temp14",
                "uVar27": "temp15",
                "local_284": "temp_array",
                "local_280": "temp16",
                "local_270": "temp17",
                "local_26c": "temp18",
                "local_260": "results",
                "local_258": "array",
                "uStack_208": "variable1",
                "local_168": "variable2",
                "local_160": "variable3",
                "uStack_c8": "variable4"
            },
            "calling": [
                "FUN_08009d78"
            ],
            "called": [
                "FUN_0800b2e8",
                "FUN_08008b10",
                "FUN_080082d0",
                "FUN_0800856c",
                "FUN_080094c0",
                "FUN_08008b4c",
                "FUN_08008ba0",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800adf0": {
            "entrypoint": "0x0800adf0",
            "current_name": "optimize_computation_0800adf0",
            "code": "\nundefined4\noptimize_computation_0800adf0(undefined4 input,uint value,undefined4 param_1,undefined4 param_2,int is_reversed)\n\n{\n  int result;\n  undefined4 result_high;\n  undefined4 result_low;\n  undefined4 temp_high;\n  undefined4 temp_low;\n  undefined4 temp;\n  undefined8 temp1;\n  undefined8 temp2;\n  \n  if (((value & 0x7fffffff) < 0x3e400000) && (result = FUN_08008ba0(), result == 0)) {\n    return input;\n  }\n  temp1 = FUN_08008640(input,value,input);\n  temp_high = (undefined4)((ulonglong)temp1 >> 0x20);\n  result_low = (undefined4)temp1;\n  temp1 = FUN_08008640(input,value,result_low,temp_high);\n  temp_low = (undefined4)((ulonglong)temp1 >> 0x20);\n  result_high = (undefined4)temp1;\n  temp1 = FUN_08008640(result_low,temp_high,0x5acfd57c,0x3de5d93a);\n  temp1 = FUN_080082d0((int)temp1,(int)((ulonglong)temp1 >> 0x20),0x8a2b9ceb,0x3e5ae5e6);\n  temp1 = FUN_08008640((int)temp1,(int)((ulonglong)temp1 >> 0x20),result_low,temp_high);\n  temp1 = FUN_080082d4((int)temp1,(int)((ulonglong)temp1 >> 0x20),0x57b1fe7d,0x3ec71de3);\n  temp1 = FUN_08008640((int)temp1,(int)((ulonglong)temp1 >> 0x20),result_low,temp_high);\n  temp1 = FUN_080082d0((int)temp1,(int)((ulonglong)temp1 >> 0x20),0x19c161d5,0x3f2a01a0);\n  temp1 = FUN_08008640((int)temp1,(int)((ulonglong)temp1 >> 0x20),result_low,temp_high);\n  temp1 = FUN_080082d4((int)temp1,(int)((ulonglong)temp1 >> 0x20),0x1110f8a6,0x3f811111);\n  temp = (undefined4)((ulonglong)temp1 >> 0x20);\n  if (is_reversed != 0) {\n    temp2 = FUN_08008640(param_1,param_2,0,0x3fe00000);\n    temp1 = FUN_08008640(result_high,temp_low,(int)temp1,temp);\n    temp1 = FUN_080082d0((int)temp2,(int)((ulonglong)temp2 >> 0x20),(int)temp1,\n                         (int)((ulonglong)temp1 >> 0x20));\n    temp1 = FUN_08008640((int)temp1,(int)((ulonglong)temp1 >> 0x20),result_low,temp_high);\n    temp1 = FUN_080082d0((int)temp1,(int)((ulonglong)temp1 >> 0x20),param_1,param_2);\n    temp2 = FUN_08008640(result_high,temp_low,0x55555549,0x3fc55555);\n    temp1 = FUN_080082d4((int)temp1,(int)((ulonglong)temp1 >> 0x20),(int)temp2,\n                         (int)((ulonglong)temp2 >> 0x20));\n    result_low = FUN_080082d0(input,value,(int)temp1,(int)((ulonglong)temp1 >> 0x20));\n    return result_low;\n  }\n  temp1 = FUN_08008640(result_low,temp_high,(int)temp1,temp);\n  temp1 = FUN_080082d0((int)temp1,(int)((ulonglong)temp1 >> 0x20),0x55555549,0x3fc55555);\n  temp1 = FUN_08008640((int)temp1,(int)((ulonglong)temp1 >> 0x20),result_high,temp_low);\n  result_low = FUN_080082d4((int)temp1,(int)((ulonglong)temp1 >> 0x20),input,value);\n  return result_low;\n}\n\n",
            "renaming": {
                "FUN_0800adf0": "optimize_computation_0800adf0",
                "param_1": "input",
                "param_2": "value",
                "param_3": "param_1",
                "param_4": "param_2",
                "param_5": "is_reversed",
                "iVar1": "result",
                "uVar2": "result_high",
                "uVar3": "result_low",
                "uVar4": "temp_high",
                "uVar5": "temp_low",
                "uVar6": "temp",
                "uVar7": "temp1",
                "uVar8": "temp2"
            },
            "calling": [
                "FUN_080096e8",
                "FUN_08009410"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_08008ba0",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800af78": {
            "entrypoint": "0x0800af78",
            "current_name": "calculate_result_0800af78",
            "code": "\nint calculateResult_0800af78(int input1,uint input2)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  undefined4 result3;\n  undefined4 result4;\n  int output;\n  undefined4 result5;\n  uint temp;\n  undefined8 calculation1;\n  undefined8 calculation2;\n  undefined4 temp2;\n  \n  calculation1 = CONCAT44(input2,input1);\n  temp = input2 & 0x7fffffff;\n  if (temp < 0x44100000) {\n    if (temp < 0x3fdc0000) {\n      if (temp < 0x3e200000) {\n        calculation2 = FUN_080082d4(input1,input2,0x8800759c,0x7e37e43c);\n        output = FUN_08008b60((int)calculation2,(int)((ulonglong)calculation2 >> 0x20),0,0x3ff00000);\n        if (output != 0) {\n          return input1;\n        }\n      }\n      output = -1;\n    }\n    else {\n      calculation1 = FUNC_0800b2cc();\n      result4 = (undefined4)((ulonglong)calculation1 >> 0x20);\n      result1 = (undefined4)calculation1;\n      if (temp < 0x3ff30000) {\n        if (temp < 0x3fe60000) {\n          calculation1 = FUN_080082d4(result1,result4,result1,result4);\n          calculation1 = FUN_080082d0((int)calculation1,(int)((ulonglong)calculation1 >> 0x20),0,0x3ff00000);\n          calculation2 = FUN_080082d4(result1,result4,0,0x40000000);\n          calculation1 = FUN_08008894((int)calculation1,(int)((ulonglong)calculation1 >> 0x20),(int)calculation2,\n                               (int)((ulonglong)calculation2 >> 0x20));\n          output = 0;\n        }\n        else {\n          calculation1 = FUN_080082d0(result1,result4,0,0x3ff00000);\n          calculation2 = FUN_080082d4(result1,result4,0,0x3ff00000);\n          calculation1 = FUN_08008894((int)calculation1,(int)((ulonglong)calculation1 >> 0x20),(int)calculation2,\n                               (int)((ulonglong)calculation2 >> 0x20));\n          output = 1;\n        }\n      }\n      else if (temp < 0x40038000) {\n        calculation1 = FUN_080082d0(result1,result4,0,0x3ff80000);\n        calculation2 = FUN_08008640(result1,result4,0,0x3ff80000);\n        calculation2 = FUN_080082d4((int)calculation2,(int)((ulonglong)calculation2 >> 0x20),0,0x3ff00000);\n        calculation1 = FUN_08008894((int)calculation1,(int)((ulonglong)calculation1 >> 0x20),(int)calculation2,\n                             (int)((ulonglong)calculation2 >> 0x20));\n        output = 2;\n      }\n      else {\n        calculation1 = FUN_08008894(0,0xbff00000,result1,result4);\n        output = 3;\n      }\n    }\n    temp2 = (undefined4)((ulonglong)calculation1 >> 0x20);\n    result5 = (undefined4)calculation1;\n    calculation1 = FUN_08008640(result5,temp2,result5);\n    result2 = (undefined4)((ulonglong)calculation1 >> 0x20);\n    result1 = (undefined4)calculation1;\n    calculation1 = FUN_08008640(result1,result2,result1,result2);\n    result3 = (undefined4)((ulonglong)calculation1 >> 0x20);\n    result4 = (undefined4)calculation1;\n    calculation1 = FUN_08008640(result4,result3,0xe322da11,0x3f90ad3a);\n    calculation1 = FUN_080082d4((int)calculation1,(int)((ulonglong)calculation1 >> 0x20),0x24760deb,0x3fa97b4b);\n    calculation1 = FUN_08008640((int)calculation1,(int)((ulonglong)calculation1 >> 0x20),result4,result3);\n    calculation1 = FUN_080082d4((int)calculation1,(int)((ulonglong)calculation1 >> 0x20),0xa0d03d51,0x3fb10d66);\n    calculation1 = FUN_08008640((int)calculation1,(int)((ulonglong)calculation1 >> 0x20),result4,result3);\n    calculation1 = FUN_080082d4((int)calculation1,(int)((ulonglong)calculation1 >> 0x20),0xc54c206e,0x3fb745cd);\n    calculation1 = FUN_08008640((int)calculation1,(int)((ulonglong)calculation1 >> 0x20),result4,result3);\n    calculation1 = FUN_080082d4((int)calculation1,(int)((ulonglong)calculation1 >> 0x20),0x920083ff,0x3fc24924);\n    calculation1 = FUN_08008640((int)calculation1,(int)((ulonglong)calculation1 >> 0x20),result4,result3);\n    calculation1 = FUN_080082d4((int)calculation1,(int)((ulonglong)calculation1 >> 0x20),0x5555550d,0x3fd55555);\n    calculation1 = FUN_08008640((int)calculation1,(int)((ulonglong)calculation1 >> 0x20),result1,result2);\n    result1 = (undefined4)((ulonglong)calculation1 >> 0x20);\n    calculation2 = FUN_08008640(result4,result3,0x2c6a6c2f,0xbfa2b444);\n    calculation2 = FUN_080082d0((int)calculation2,(int)((ulonglong)calculation2 >> 0x20),0x52defd9a,0x3fadde2d);\n    calculation2 = FUN_08008640((int)calculation2,(int)((ulonglong)calculation2 >> 0x20),result4,result3);\n    calculation2 = FUN_080082d0((int)calculation2,(int)((ulonglong)calculation2 >> 0x20),0xaf749a6d,0x3fb3b0f2);\n    calculation2 = FUN_08008640((int)calculation2,(int)((ulonglong)calculation2 >> 0x20),result4,result3);\n    calculation2 = FUN_080082d0((int)calculation2,(int)((ulonglong)calculation2 >> 0x20),0xfe231671,0x3fbc71c6);\n    calculation2 = FUN_08008640((int)calculation2,(int)((ulonglong)calculation2 >> 0x20),result4,result3);\n    calculation2 = FUN_080082d0((int)calculation2,(int)((ulonglong)calculation2 >> 0x20),0x9998ebc4,0x3fc99999);\n    calculation2 = FUN_08008640((int)calculation2,(int)((ulonglong)calculation2 >> 0x20),result4,result3);\n    result4 = (undefined4)((ulonglong)calculation2 >> 0x20);\n    if (output == -1) {\n      calculation1 = FUN_080082d4((int)calculation1,result1,(int)calculation2,result4);\n      calculation1 = FUN_08008640((int)calculation1,(int)((ulonglong)calculation1 >> 0x20),result5,temp2);\n      output = FUN_080082d0(result5,temp2,(int)calculation1,(int)((ulonglong)calculation1 >> 0x20));\n      return output;\n    }\n    calculation1 = FUN_080082d4((int)calculation1,result1,(int)calculation2,result4);\n    calculation1 = FUN_08008640((int)calculation1,(int)((ulonglong)calculation1 >> 0x20),result5,temp2);\n    calculation1 = FUN_080082d0((int)calculation1,(int)((ulonglong)calculation1 >> 0x20),\n                         *(undefined4 *)(&UNK_0800c090 + output * 8),\n                         *(undefined4 *)(&UNK_0800c094 + output * 8));\n    calculation1 = FUN_080082d0((int)calculation1,(int)((ulonglong)calculation1 >> 0x20),result5,temp2);\n    output = FUN_080082d0(*(undefined4 *)(&UNK_0800c070 + output * 8),\n                         *(undefined4 *)(&UNK_0800c074 + output * 8),(int)calculation1,\n                         (int)((ulonglong)calculation1 >> 0x20));\n    if ((int)input2 < 0) {\n      return output;\n    }\n  }\n  else {\n    if ((0x7ff00000 < temp) || ((temp == 0x7ff00000 && (input1 != 0)))) {\n      output = FUN_080082d4(input1,input2,input1);\n      return output;\n    }\n    output = 0x54442d18;\n  }\n  return output;\n}\n\n",
            "renaming": {
                "FUN_0800af78": "calculate_result_0800af78",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "result3",
                "uVar4": "result4",
                "iVar5": "output",
                "uVar6": "result5",
                "uVar7": "temp",
                "uVar8": "calculation1",
                "uVar9": "calculation2",
                "local_2c": "temp2"
            },
            "calling": [
                "FUN_08009990"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_0800b2cc",
                "FUN_08008b60",
                "FUN_08008894",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b2cc": {
            "entrypoint": "0x0800b2cc",
            "current_name": "FUNC_0800b2cc",
            "code": "\nvoid FUNC_0800b2cc(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b2cc": "FUNC_0800b2cc"
            },
            "calling": [
                "FUN_08009d78",
                "FUN_0800af78",
                "FUN_08009990"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b2d4": {
            "entrypoint": "0x0800b2d4",
            "current_name": "extracted_function_0800b2d4",
            "code": "\nuint extractedFunction_0800b2d4(undefined4 param1,uint param2)\n\n{\n  return (param2 | 0x80000000) + 0x100000 >> 0x1f;\n}\n\n",
            "renaming": {
                "FUN_0800b2d4": "extracted_function_0800b2d4",
                "param_1": "param1",
                "param_2": "param2"
            },
            "calling": [
                "FUN_0800981c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b2e0": {
            "entrypoint": "0x0800b2e0",
            "current_name": "initialize_0800b2e0",
            "code": "\nint initialize_0800b2e0(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800b2e0": "initialize_0800b2e0",
                "undefined4": "int"
            },
            "calling": [
                "FUN_080098d0",
                "FUN_0800981c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b2e8": {
            "entrypoint": "0x0800b2e8",
            "current_name": "calculate_result_0800b2e8",
            "code": "\nuint calculateResult_0800b2e8(uint input1,uint input2,int modifier,undefined4 param4)\n\n{\n  uint shiftedValue;\n  int modifiedValue;\n  uint upperPart;\n  undefined8 concatenatedValue;\n  \n  concatenatedValue = CONCAT44(input2,input1);\n  shiftedValue = (input2 << 1) >> 0x15;\n  if (shiftedValue == 0) {\n    if ((input1 | input2 & 0x7fffffff) == 0) {\n      return input1;\n    }\n    concatenatedValue = FUN_08008640(input1,input2,0,0x43500000);\n    if (modifier < -50000) goto LAB_0800b34a;\n    shiftedValue = ((uint)((int)((ulonglong)concatenatedValue >> 0x20) << 1) >> 0x15) - 0x36;\n  }\n  else if (shiftedValue == 0x7ff) {\n    shiftedValue = FUN_080082d4(input1,input2,input1,input2,param4);\n    return shiftedValue;\n  }\n  upperPart = (uint)((ulonglong)concatenatedValue >> 0x20);\n  modifiedValue = shiftedValue + modifier;\n  if (modifiedValue < 0x7ff) {\n    if (0 < modifiedValue) {\n      return (uint)concatenatedValue;\n    }\n    if (modifiedValue + 0x35 < 0 == overflowCheck(modifiedValue,0x35)) {\n      shiftedValue = FUN_08008640((uint)concatenatedValue,upperPart & 0x800fffff | (modifiedValue + 0x36) * 0x100000,0,0x3c900000);\n      return shiftedValue;\n    }\n    if (modifier < 0xc351) {\n      concatenatedValue = CONCAT44(upperPart & 0x80000000 | 0x1a56e1f,0xc2f8f359);\nLAB_0800b34a:\n      shiftedValue = FUN_08008640((int)concatenatedValue,(int)((ulonglong)concatenatedValue >> 0x20),0xc2f8f359,0x1a56e1f);\n      return shiftedValue;\n    }\n  }\n  shiftedValue = FUN_08008640(0x8800759c,upperPart & 0x80000000 | 0x7e37e43c,0x8800759c,0x7e37e43c);\n  return shiftedValue;\n}\n\n",
            "renaming": {
                "FUN_0800b2e8": "calculate_result_0800b2e8",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "modifier",
                "param_4": "param4",
                "uVar1": "shiftedValue",
                "iVar2": "modifiedValue",
                "uVar3": "upperPart",
                "uVar4": "concatenatedValue",
                "SCARRY4": "overflowCheck"
            },
            "calling": [
                "FUN_0800a5a0"
            ],
            "called": [
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b3dc": {
            "entrypoint": "0x0800b3dc",
            "current_name": "get_global_data_0800b3dc",
            "code": "\nundefined4 getGlobalData_0800b3dc(void)\n\n{\n  return DAT_20000018;\n}\n\n",
            "renaming": {
                "FUN_0800b3dc": "get_global_data_0800b3dc"
            },
            "calling": [
                "FUN_080098d0",
                "FUN_0800981c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b3e8": {
            "entrypoint": "0x0800b3e8",
            "current_name": "execute_multiple_functions_0800b3e8",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800b3f4) */\n/* WARNING: Removing unreachable block (ram,0x0800b3f6) */\n\nvoid executeMultipleFunctions_0800b3e8(void)\n\n{\n  int counter;\n  code **functionPointers;\n  \n  FUNC_0800b5b0();\n  counter = 0;\n  functionPointers = (code **)&DAT_0800c0b4;\n  do {\n    counter = counter + 1;\n    (**functionPointers)();\n    functionPointers = functionPointers + 1;\n  } while (counter != 2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b3e8": "execute_multiple_functions_0800b3e8",
                "iVar1": "counter",
                "ppcVar2": "functionPointers"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_0800b5b0",
                "FUN_0800b4d0",
                "FUN_080001ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b430": {
            "entrypoint": "0x0800b430",
            "current_name": "fill_memory_0800b430",
            "code": "\nvoid fillMemory_0800b430(undefined4 *dest,undefined value,uint size)\n\n{\n  undefined4 *destPtr;\n  undefined4 *tempPtr;\n  uint remainingSize;\n  undefined4 newValue;\n  bool isLastIteration;\n  \n  if (((uint)dest & 3) != 0) {\n    remainingSize = size - 1;\n    destPtr = dest;\n    if (size == 0) {\n      return;\n    }\n    while( true ) {\n      dest = (undefined4 *)((int)destPtr + 1);\n      *(undefined *)destPtr = value;\n      size = remainingSize;\n      if (((uint)dest & 3) == 0) break;\n      isLastIteration = remainingSize == 0;\n      remainingSize = remainingSize - 1;\n      destPtr = dest;\n      if (isLastIteration) {\n        return;\n      }\n    }\n  }\n  if (3 < size) {\n    newValue = CONCAT22(CONCAT11(value,value),CONCAT11(value,value));\n    if (0xf < size) {\n      destPtr = dest + 4;\n      do {\n        destPtr[-4] = newValue;\n        destPtr[-3] = newValue;\n        destPtr[-2] = newValue;\n        destPtr[-1] = newValue;\n        destPtr = destPtr + 4;\n      } while (destPtr != (undefined4 *)((int)dest + (size - 0x10 & 0xfffffff0) + 0x20));\n      remainingSize = size & 0xc;\n      dest = dest + ((size - 0x10 >> 4) + 1) * 4;\n      size = size & 0xf;\n      if (remainingSize == 0) goto joined_r0x0800b4a8;\n    }\n    destPtr = (undefined4 *)((size - 4 & 0xfffffffc) + 4 + (int)dest);\n    do {\n      tempPtr = dest + 1;\n      *dest = newValue;\n      dest = tempPtr;\n    } while (destPtr != tempPtr);\n    size = size & 3;\n    dest = destPtr;\n  }\njoined_r0x0800b4a8:\n  if (size != 0) {\n    destPtr = dest;\n    do {\n      tempPtr = (undefined4 *)((int)destPtr + 1);\n      *(undefined *)destPtr = value;\n      destPtr = tempPtr;\n    } while ((undefined4 *)(size + (int)dest) != tempPtr);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b430": "fill_memory_0800b430",
                "param_1": "dest",
                "param_2": "value",
                "param_3": "size",
                "puVar1": "destPtr",
                "puVar2": "tempPtr",
                "uVar3": "remainingSize",
                "uVar4": "newValue",
                "bVar5": "isLastIteration"
            },
            "calling": [
                "FUN_08005814",
                "FUN_08004d7c",
                "FUN_080004ac",
                "FUN_080005b4",
                "FUN_08002f24",
                "FUN_08001994",
                "FUN_080002f0",
                "FUN_08001ddc",
                "FUN_080079c0",
                "FUN_080024c4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b4d0": {
            "entrypoint": "0x0800b4d0",
            "current_name": "FUNC_0800b4d0",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800b4d4) */\n\nvoid FUNC_0800b4d0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b4d0": "FUNC_0800b4d0"
            },
            "calling": [
                "FUN_0800b3e8"
            ],
            "called": [
                "FUN_0800b524"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b51c": {
            "entrypoint": "0x0800b51c",
            "current_name": "FUNC_0800b51c",
            "code": "\nvoid FUNC_0800b51c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b51c": "FUNC_0800b51c"
            },
            "calling": [
                "FUN_0800b524"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b520": {
            "entrypoint": "0x0800b520",
            "current_name": "FUNC_0800b520",
            "code": "\nvoid FUNC_0800b520(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b520": "FUNC_0800b520"
            },
            "calling": [
                "FUN_0800b524"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b524": {
            "entrypoint": "0x0800b524",
            "current_name": "update_registry_0800b524",
            "code": "\nundefined4 updateRegistry_0800b524(int valueType,undefined4 newValue,undefined4 oldValue,undefined4 flag)\n\n{\n  undefined *registryPointer;\n  undefined4 returnValue;\n  uint bitMask;\n  uint index;\n  \n  FUNC_0800b51c(DAT_20000448);\n  if (DAT_20000168 == (undefined *)0x0) {\n    DAT_20000168 = &DAT_2000016c;\n  }\n  registryPointer = DAT_20000168;\n  index = *(uint *)(DAT_20000168 + 4);\n  if ((int)index < 0x20) {\n    if (valueType != 0) {\n      *(undefined4 *)(DAT_20000168 + index * 4 + 0x88) = oldValue;\n      bitMask = 1 << (index & 0xff);\n      *(uint *)(registryPointer + 0x188) = *(uint *)(registryPointer + 0x188) | bitMask;\n      *(undefined4 *)(registryPointer + index * 4 + 0x108) = flag;\n      if (valueType == 2) {\n        *(uint *)(registryPointer + 0x18c) = bitMask | *(uint *)(registryPointer + 0x18c);\n      }\n    }\n    returnValue = DAT_20000448;\n    *(uint *)(registryPointer + 4) = index + 1;\n    *(undefined4 *)(registryPointer + (index + 2) * 4) = newValue;\n    FUNC_0800b520(returnValue);\n    returnValue = 0;\n  }\n  else {\n    FUNC_0800b520(DAT_20000448);\n    returnValue = 0xffffffff;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_0800b524": "update_registry_0800b524",
                "param_1": "valueType",
                "param_2": "newValue",
                "param_3": "oldValue",
                "param_4": "flag",
                "puVar1": "registryPointer",
                "uVar2": "returnValue",
                "uVar3": "bitMask",
                "uVar4": "index"
            },
            "calling": [
                "FUN_0800b4d0"
            ],
            "called": [
                "FUN_0800b51c",
                "FUN_0800b520"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b5b0": {
            "entrypoint": "0x0800b5b0",
            "current_name": "FUNC_0800b5b0",
            "code": "\nvoid FUNC_0800b5b0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b5b0": "FUNC_0800b5b0"
            },
            "calling": [
                "FUN_08000188",
                "FUN_080001ac",
                "FUN_0800b3e8"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b5bc": {
            "entrypoint": "0x0800b5bc",
            "current_name": "FUNC_0800b5bc",
            "code": "\nvoid FUNC_0800b5bc(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b5bc": "FUNC_0800b5bc"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        }
    },
    "used_tokens": 190934,
    "layers": [
        [
            "FUN_08000188",
            "FUN_080001ac",
            "FUN_080001f8",
            "FUN_08000210",
            "FUN_08000220",
            "FUN_08000268",
            "FUN_080002a0",
            "FUN_080002b6",
            "FUN_080002f0",
            "FUN_08000310",
            "FUN_08000340",
            "FUN_08000374",
            "FUN_080003ec",
            "FUN_08000478",
            "FUN_080004ac",
            "FUN_080004fc",
            "FUN_0800056c",
            "FUN_080005b4",
            "FUN_0800184c",
            "FUN_080018cc",
            "FUN_080018fc",
            "FUN_0800192c",
            "FUN_0800195c",
            "FUN_08001994",
            "FUN_08001d4c",
            "FUN_08001ddc",
            "FUN_08001e98",
            "FUN_08001f00",
            "FUN_08002408",
            "FUN_080024c4",
            "FUN_080025e8",
            "FUN_08002638",
            "FUN_0800283a",
            "FUN_08002870",
            "FUN_08002896",
            "FUN_080028bc",
            "FUN_08002908",
            "FUN_08002978",
            "FUN_080029d8",
            "FUN_08002a94",
            "FUN_08002afc",
            "FUN_08002ba8",
            "FUN_08002c18",
            "FUN_08002e08",
            "FUN_08002edc",
            "FUN_08002ef0",
            "FUN_08002f24",
            "FUN_08002f40",
            "FUN_08002f74",
            "FUN_08002fac",
            "FUN_08002fd4",
            "FUN_08003004",
            "FUN_080035ec",
            "FUN_08003618",
            "FUN_0800369c",
            "FUN_080036c6",
            "FUN_080036f0",
            "FUN_08003740",
            "FUN_0800375c",
            "FUN_08003778",
            "FUN_080037fc",
            "FUN_08003826",
            "FUN_08003980",
            "FUN_080039a0",
            "FUN_080039bc",
            "FUN_08003a18",
            "FUN_08003a74",
            "FUN_08003b98",
            "FUN_08003f34",
            "FUN_08004030",
            "FUN_08004148",
            "FUN_080041a0",
            "FUN_08004228",
            "FUN_0800423c",
            "FUN_08004250",
            "FUN_080044e8",
            "FUN_080046d0",
            "FUN_08004900",
            "FUN_08004940",
            "FUN_08004bc0",
            "FUN_08004bf4",
            "FUN_08004c2a",
            "FUN_08004c48",
            "FUN_08004d2c",
            "FUN_08004d7c",
            "FUN_08004dd2",
            "FUN_08004e30",
            "FUN_080051b4",
            "FUN_08005238",
            "FUN_08005250",
            "FUN_0800525c",
            "FUN_080052ac",
            "FUN_080052dc",
            "FUN_08005324",
            "FUN_08005360",
            "FUN_080053a0",
            "FUN_08005760",
            "FUN_08005778",
            "FUN_08005790",
            "FUN_080057e4",
            "FUN_08005814",
            "FUN_0800583c",
            "FUN_0800585c",
            "FUN_0800587c",
            "FUN_080058a0",
            "FUN_08005900",
            "FUN_0800597c",
            "FUN_08005984",
            "FUN_080059b4",
            "FUN_080059f8",
            "FUN_08005a68",
            "FUN_08005a84",
            "FUN_08005a98",
            "FUN_08005bdc",
            "FUN_08005c30",
            "FUN_08005cec",
            "FUN_0800618c",
            "FUN_0800640c",
            "FUN_080064ec",
            "FUN_08006628",
            "FUN_08006680",
            "FUN_080066cc",
            "FUN_08006950",
            "FUN_08006998",
            "FUN_080069b4",
            "FUN_080069e4",
            "FUN_08006a18",
            "FUN_08006a58",
            "FUN_08006a8c",
            "FUN_08006ac0",
            "FUN_08006b00",
            "FUN_08006b54",
            "FUN_08006ba0",
            "FUN_08006c04",
            "FUN_08006c70",
            "FUN_08006c9c",
            "FUN_08006ce0",
            "FUN_08006cf6",
            "FUN_08006d2e",
            "FUN_08006d4a",
            "FUN_08006d66",
            "FUN_08006d72",
            "FUN_08006d8a",
            "FUN_08006d98",
            "FUN_08006dc4",
            "FUN_08006de0",
            "FUN_08006dfe",
            "FUN_08006e1a",
            "FUN_08006e88",
            "FUN_0800733e",
            "FUN_0800738e",
            "FUN_080073d4",
            "FUN_08007402",
            "FUN_08007430",
            "FUN_08007436",
            "FUN_080074c8",
            "FUN_08007520",
            "FUN_08007540",
            "FUN_0800756c",
            "FUN_080076c8",
            "FUN_08007756",
            "FUN_0800778c",
            "FUN_08007854",
            "FUN_08007884",
            "FUN_080078f4",
            "FUN_08007930",
            "FUN_080079c0",
            "FUN_080079e0",
            "FUN_08007a10",
            "FUN_08007a70",
            "FUN_08007ad0",
            "FUN_08007b70",
            "FUN_08007bc2",
            "FUN_08007bf0",
            "FUN_08007c40",
            "FUN_08007c5e",
            "FUN_08007c7c",
            "FUN_08007d08",
            "FUN_08007da8",
            "FUN_08007e08",
            "FUN_08007e1c",
            "FUN_08007e58",
            "FUN_08007e84",
            "FUN_08007ea4",
            "FUN_08007f54",
            "FUN_08008190",
            "FUN_08008250",
            "FUN_0800826a",
            "FUN_08008286",
            "FUN_080082d0",
            "FUN_080082d4",
            "FUN_0800854c",
            "FUN_0800856c",
            "FUN_08008590",
            "FUN_08008640",
            "FUN_0800881c",
            "FUN_08008894",
            "FUN_08008a02",
            "FUN_08008a74",
            "FUN_08008af0",
            "FUN_08008b00",
            "FUN_08008b10",
            "FUN_08008b24",
            "FUN_08008b4c",
            "FUN_08008b60",
            "FUN_08008b74",
            "FUN_08008ba0",
            "FUN_08008bf0",
            "FUN_08008c30",
            "FUN_08008cd8",
            "FUN_08008cdc",
            "FUN_08008e3c",
            "FUN_08008e44",
            "FUN_08008eec",
            "FUN_08009054",
            "FUN_0800919c",
            "FUN_080091fc",
            "FUN_08009204",
            "FUN_08009214",
            "FUN_08009228",
            "FUN_0800923c",
            "FUN_08009250",
            "FUN_08009264",
            "FUN_08009278",
            "FUN_08009318",
            "FUN_08009410",
            "FUN_080094c0",
            "FUN_080095b8",
            "FUN_08009654",
            "FUN_080096e8",
            "FUN_08009798",
            "thunk_FUN_08009990",
            "FUN_0800981c",
            "FUN_080098d0",
            "FUN_08009990",
            "FUN_08009b24",
            "FUN_08009d78",
            "FUN_0800a1bc",
            "FUN_0800a348",
            "FUN_0800a5a0",
            "FUN_0800adf0",
            "FUN_0800af78",
            "FUN_0800b2d4",
            "FUN_0800b2e0",
            "FUN_0800b2e8",
            "FUN_0800b3dc",
            "FUN_0800b3e8",
            "FUN_0800b430",
            "FUN_0800b524"
        ]
    ],
    "locked_functions": []
}