{
    "functions": {
        "FUN_08000110": {
            "entrypoint": "0x08000110",
            "current_name": "initialize_flag_08000110",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800011c) */\n\nundefined4 initializeFlag_08000110(undefined4 inputValue)\n\n{\n  if ((char)DAT_20000228 == '\\0') {\n    DAT_20000228._0_1_ = '\\x01';\n  }\n  return inputValue;\n}\n\n",
            "renaming": {
                "FUN_08000110": "initialize_flag_08000110",
                "param_1": "inputValue"
            },
            "calling": [],
            "called": [
                "FUN_080072d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000134": {
            "entrypoint": "0x08000134",
            "current_name": "concatenate_four_bytes_08000134",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800013a) */\n\nundefined8 concatenate_four_bytes_08000134(undefined4 first_param,undefined4 second_param)\n\n{\n  return CONCAT44(second_param,first_param);\n}\n\n",
            "renaming": {
                "FUN_08000134": "concatenate_four_bytes_08000134",
                "param_1": "first_param",
                "param_2": "second_param"
            },
            "calling": [
                "FUN_08004fb4"
            ],
            "called": [
                "FUN_080072d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000150": {
            "entrypoint": "0x08000150",
            "current_name": "find_last_null_character_08000150",
            "code": "\nchar * find_last_null_character_08000150(char *string)\n\n{\n  char current_char;\n  char *next_char;\n  char *current_ptr;\n  \n  current_ptr = string;\n  do {\n    next_char = current_ptr + 1;\n    current_char = *current_ptr;\n    current_ptr = next_char;\n  } while (current_char != '\\0');\n  return next_char + (-1 - (int)string);\n}\n\n",
            "renaming": {
                "FUN_08000150": "find_last_null_character_08000150",
                "param_1": "string",
                "cVar1": "current_char",
                "pcVar2": "next_char",
                "pcVar3": "current_ptr"
            },
            "calling": [
                "FUN_08004c8c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000168": {
            "entrypoint": "0x08000168",
            "current_name": "calculate_result_08000168",
            "code": "\nulonglong calculate_result_08000168(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int temp1;\n  byte temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  uint temp7;\n  int temp8;\n  uint temp9;\n  uint temp10;\n  uint temp11;\n  uint temp12;\n  bool flag1;\n  bool flag2;\n  bool flag3;\n  \n  temp6 = input4 ^ 0x80000000;\n  temp9 = input2 << 1;\n  input4 = input4 << 1;\n  flag1 = ((input2 ^ temp6) & 0x7fffffff) == 0;\n  flag2 = flag1 && input1 == input3;\n  if (!flag1 || input1 != input3) {\n    flag2 = (temp9 | input1) == 0;\n  }\n  if (!flag2) {\n    flag2 = (input4 | input3) == 0;\n  }\n  temp8 = (int)temp9 >> 0x15;\n  if (!flag2) {\n    flag2 = temp8 == -1;\n  }\n  temp1 = (int)input4 >> 0x15;\n  if (!flag2) {\n    flag2 = temp1 == -1;\n  }\n  if (flag2) {\n    if (temp8 == -1 || temp1 == -1) {\n      temp9 = temp6;\n      temp11 = input3;\n      if (temp8 == -1) {\n        temp9 = input2;\n        temp11 = input1;\n      }\n      if (temp8 != -1 || temp1 != -1) {\n        input3 = temp11;\n        temp6 = temp9;\n      }\n      flag2 = (temp11 | temp9 << 0xc) == 0;\n      if (flag2) {\n        flag2 = (input3 | temp6 << 0xc) == 0;\n      }\n      if (flag2) {\n        flag2 = temp9 == temp6;\n      }\n      if (!flag2) {\n        temp9 = temp9 | 0x80000;\n      }\n      return CONCAT44(temp9,temp11);\n    }\n    if (((input2 ^ temp6) & 0x7fffffff) != 0 || input1 != input3) {\n      if ((temp9 | input1) == 0) {\n        input1 = input3;\n        input2 = temp6;\n      }\n      return CONCAT44(input2,input1);\n    }\n    if (input2 != temp6) {\n      return 0;\n    }\n    if (temp9 >> 0x15 == 0) {\n      flag2 = (input1 & 0x80000000) != 0;\n      temp6 = input2 * 2 + (uint)flag2;\n      if (CARRY4(input2,input2) || CARRY4(input2 * 2,(uint)flag2)) {\n        temp6 = temp6 | 0x80000000;\n      }\n      return CONCAT44(temp6,input1 << 1);\n    }\n    if (temp9 < 0xffc00000) {\n      return CONCAT44(input2 + 0x100000,input1);\n    }\n    input2 = input2 & 0x80000000;\nLAB_080003ac:\n    return (ulonglong)(input2 | 0x7ff00000) << 0x20;\n  }\n  temp9 = temp9 >> 0x15;\n  input4 = input4 >> 0x15;\n  temp11 = input4 - temp9;\n  flag2 = temp11 != 0;\n  if (input4 < temp9) {\n    temp11 = -temp11;\n  }\n  temp10 = input1;\n  temp7 = input2;\n  if (flag2 && temp9 <= input4) {\n    temp9 = temp9 + temp11;\n    temp10 = input3;\n    temp7 = temp6;\n    input3 = input1;\n    temp6 = input2;\n  }\n  if (0x36 < temp11) {\n    return CONCAT44(temp7,temp10);\n  }\n  temp4 = temp7 & 0xfffff | 0x100000;\n  if ((temp7 & 0x80000000) != 0) {\n    flag2 = temp10 != 0;\n    temp10 = -temp10;\n    temp4 = -temp4 - (uint)flag2;\n  }\n  temp7 = temp6 & 0xfffff | 0x100000;\n  if ((temp6 & 0x80000000) != 0) {\n    flag2 = input3 != 0;\n    input3 = -input3;\n    temp7 = -temp7 - (uint)flag2;\n  }\n  if (temp9 == temp11) {\n    temp7 = temp7 ^ 0x100000;\n    if (temp9 == 0) {\n      temp4 = temp4 ^ 0x100000;\n      temp9 = 1;\n    }\n    else {\n      temp11 = temp11 - 1;\n    }\n  }\n  temp6 = -temp11 + 0x20;\n  if ((int)temp11 < 0x21) {\n    temp12 = input3 << (temp6 & 0xff);\n    input3 = input3 >> (temp11 & 0xff);\n    temp3 = temp10 + input3;\n    temp5 = temp7 << (temp6 & 0xff);\n    temp6 = temp3 + temp5;\n    temp4 = temp4 + CARRY4(temp10,input3) + ((int)temp7 >> (temp11 & 0xff)) +\n            (uint)CARRY4(temp3,temp5);\n  }\n  else {\n    temp12 = temp7 << (-temp11 + 0x40 & 0xff);\n    if (input3 != 0) {\n      temp12 = temp12 | 2;\n    }\n    temp7 = (int)temp7 >> (temp11 - 0x20 & 0xff);\n    temp6 = temp10 + temp7;\n    temp4 = temp4 + ((int)temp7 >> 0x1f) + (uint)CARRY4(temp10,temp7);\n  }\n  input2 = temp4 & 0x80000000;\n  temp11 = temp4;\n  if ((int)temp4 < 0) {\n    flag2 = temp12 == 0;\n    temp12 = -temp12;\n    temp11 = -temp6;\n    temp6 = -(uint)!flag2 - temp6;\n    temp11 = -(uint)(flag2 <= temp11) - temp4;\n  }\n  if (0xfffff < temp11) {\n    temp10 = temp9 - 1;\n    if (0x1fffff < temp11) {\n      temp10 = temp11 & 1;\n      temp11 = temp11 >> 1;\n      temp2 = (byte)temp6;\n      temp6 = (uint)(temp10 != 0) << 0x1f | temp6 >> 1;\n      temp12 = (uint)(temp2 & 1) << 0x1f | temp12 >> 1;\n      temp10 = temp9;\n      if (0xffbfffff < temp9 * 0x200000) goto LAB_080003ac;\n    }\nLAB_08000278:\n    flag2 = 0x7fffffff < temp12;\n    if (temp12 == 0x80000000) {\n      flag2 = (temp6 & 1) != 0;\n    }\n    return CONCAT44(temp11 + temp10 * 0x100000 + (uint)CARRY4(temp6,(uint)flag2) | input2,\n                    temp6 + flag2);\n  }\n  flag1 = (temp12 & 0x80000000) != 0;\n  temp12 = temp12 << 1;\n  temp10 = temp6 * 2;\n  flag2 = CARRY4(temp6,temp6);\n  temp6 = temp6 * 2 + (uint)flag1;\n  temp11 = temp11 * 2 + (uint)(flag2 || CARRY4(temp10,(uint)flag1));\n  temp10 = temp9 - 2;\n  if ((temp11 & 0x100000) != 0) goto LAB_08000278;\n  temp7 = temp6;\n  temp9 = temp11;\n  if (temp11 == 0) {\n    temp7 = 0;\n    temp9 = temp6;\n  }\n  temp8 = LZCOUNT(temp9);\n  if (temp11 == 0) {\n    temp8 = temp8 + 0x20;\n  }\n  temp11 = temp8 - 0xb;\n  flag3 = SBORROW4(temp11,0x20);\n  temp6 = temp8 - 0x2b;\n  flag2 = (int)temp6 < 0;\n  flag1 = temp6 == 0;\n  if ((int)temp11 < 0x20) {\n    flag3 = SCARRY4(temp6,0xc);\n    temp8 = temp8 + -0x1f;\n    flag2 = temp8 < 0;\n    flag1 = temp8 == 0;\n    temp6 = temp11;\n    if (!flag1 && flag2 == flag3) {\n      temp7 = temp9 << (temp11 & 0xff);\n      temp9 = temp9 >> (0xcU - temp8 & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (flag1 || flag2 != flag3) {\n    temp12 = 0x20 - temp6;\n  }\n  temp9 = temp9 << (temp6 & 0xff);\n  if (flag1 || flag2 != flag3) {\n    temp9 = temp9 | temp7 >> (temp12 & 0xff);\n  }\n  if (flag1 || flag2 != flag3) {\n    temp7 = temp7 << (temp6 & 0xff);\n  }\nLAB_080002f0:\n  if ((int)temp11 <= (int)temp10) {\n    return CONCAT44(temp9 + (temp10 - temp11) * 0x100000 | input2,temp7);\n  }\n  temp6 = ~(temp10 - temp11);\n  if ((int)temp6 < 0x1f) {\n    temp8 = temp6 - 0x13;\n    if (temp8 != 0 && temp8 < 0 == SCARRY4(temp6 - 0x1f,0xc)) {\n      return CONCAT44(temp4,temp7 >> (0x20 - (0xcU - temp8) & 0xff) | temp9 << (0xcU - temp8 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    temp6 = temp6 + 1;\n    return CONCAT44(input2 | temp9 >> (temp6 & 0xff),\n                    temp7 >> (temp6 & 0xff) | temp9 << (0x20 - temp6 & 0xff));\n  }\n  return CONCAT44(temp4,temp9 >> (temp6 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_08000168": "calculate_result_08000168",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "temp1",
                "bVar2": "temp2",
                "uVar3": "temp3",
                "uVar4": "temp4",
                "uVar5": "temp5",
                "uVar6": "temp6",
                "uVar7": "temp7",
                "iVar8": "temp8",
                "uVar9": "temp9",
                "uVar10": "temp10",
                "uVar11": "temp11",
                "uVar12": "temp12",
                "bVar13": "flag1",
                "bVar14": "flag2",
                "bVar15": "flag3"
            },
            "calling": [
                "FUN_08006d68",
                "FUN_08005c70",
                "FUN_080070b0",
                "FUN_08006c0c",
                "FUN_0800411c",
                "FUN_08006228",
                "FUN_08006070"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800016c": {
            "entrypoint": "0x0800016c",
            "current_name": "calculate_combo_0800016c",
            "code": "\nulonglong calculateCombo_0800016c(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int shift1;\n  byte carry;\n  uint var3;\n  uint var4;\n  uint var5;\n  int shift2;\n  uint shiftedInput2;\n  uint var8;\n  uint shiftedInput4;\n  uint difference;\n  uint var11;\n  uint var12;\n  bool isZeroFlag;\n  bool isTrue;\n  bool booleanVar;\n  \n  shiftedInput2 = input2 << 1;\n  shiftedInput4 = input4 << 1;\n  isZeroFlag = ((input2 ^ input4) & 0x7fffffff) == 0;\n  isTrue = isZeroFlag && input1 == input3;\n  if (!isZeroFlag || input1 != input3) {\n    isTrue = (shiftedInput2 | input1) == 0;\n  }\n  if (!isTrue) {\n    isTrue = (shiftedInput4 | input3) == 0;\n  }\n  shift2 = (int)shiftedInput2 >> 0x15;\n  if (!isTrue) {\n    isTrue = shift2 == -1;\n  }\n  shift1 = (int)shiftedInput4 >> 0x15;\n  if (!isTrue) {\n    isTrue = shift1 == -1;\n  }\n  if (isTrue) {\n    if (shift2 == -1 || shift1 == -1) {\n      shiftedInput4 = input4;\n      shiftedInput2 = input3;\n      if (shift2 == -1) {\n        shiftedInput4 = input2;\n        shiftedInput2 = input1;\n      }\n      if (shift2 != -1 || shift1 != -1) {\n        input3 = shiftedInput2;\n        input4 = shiftedInput4;\n      }\n      isTrue = (shiftedInput2 | shiftedInput4 << 0xc) == 0;\n      if (isTrue) {\n        isTrue = (input3 | input4 << 0xc) == 0;\n      }\n      if (isTrue) {\n        isTrue = shiftedInput4 == input4;\n      }\n      if (!isTrue) {\n        shiftedInput4 = shiftedInput4 | 0x80000;\n      }\n      return CONCAT44(shiftedInput4,shiftedInput2);\n    }\n    if (((input2 ^ input4) & 0x7fffffff) != 0 || input1 != input3) {\n      if ((shiftedInput2 | input1) == 0) {\n        input1 = input3;\n        input2 = input4;\n      }\n      return CONCAT44(input2,input1);\n    }\n    if (input2 != input4) {\n      return 0;\n    }\n    if (shiftedInput2 >> 0x15 == 0) {\n      isTrue = (input1 & 0x80000000) != 0;\n      shiftedInput4 = input2 * 2 + (uint)isTrue;\n      if (CARRY4(input2,input2) || CARRY4(input2 * 2,(uint)isTrue)) {\n        shiftedInput4 = shiftedInput4 | 0x80000000;\n      }\n      return CONCAT44(shiftedInput4,input1 << 1);\n    }\n    if (shiftedInput2 < 0xffc00000) {\n      return CONCAT44(input2 + 0x100000,input1);\n    }\n    input2 = input2 & 0x80000000;\nLAB_080003ac:\n    return (ulonglong)(input2 | 0x7ff00000) << 0x20;\n  }\n  shiftedInput2 = shiftedInput2 >> 0x15;\n  shiftedInput4 = shiftedInput4 >> 0x15;\n  difference = shiftedInput4 - shiftedInput2;\n  isTrue = difference != 0;\n  if (shiftedInput4 < shiftedInput2) {\n    difference = -difference;\n  }\n  var8 = input1;\n  var5 = input2;\n  if (isTrue && shiftedInput2 <= shiftedInput4) {\n    shiftedInput2 = shiftedInput2 + difference;\n    var8 = input3;\n    var5 = input4;\n    input3 = input1;\n    input4 = input2;\n  }\n  if (0x36 < difference) {\n    return CONCAT44(var5,var8);\n  }\n  shiftedInput4 = var5 & 0xfffff | 0x100000;\n  if ((var5 & 0x80000000) != 0) {\n    isTrue = var8 != 0;\n    var8 = -var8;\n    shiftedInput4 = -shiftedInput4 - (uint)isTrue;\n  }\n  var5 = input4 & 0xfffff | 0x100000;\n  if ((input4 & 0x80000000) != 0) {\n    isTrue = input3 != 0;\n    input3 = -input3;\n    var5 = -var5 - (uint)isTrue;\n  }\n  if (shiftedInput2 == difference) {\n    var5 = var5 ^ 0x100000;\n    if (shiftedInput2 == 0) {\n      shiftedInput4 = shiftedInput4 ^ 0x100000;\n      shiftedInput2 = 1;\n    }\n    else {\n      difference = difference - 1;\n    }\n  }\n  var12 = -difference + 0x20;\n  if ((int)difference < 0x21) {\n    var11 = input3 << (var12 & 0xff);\n    input3 = input3 >> (difference & 0xff);\n    var3 = var8 + input3;\n    var4 = var5 << (var12 & 0xff);\n    var12 = var3 + var4;\n    shiftedInput4 = shiftedInput4 + CARRY4(var8,input3) + ((int)var5 >> (difference & 0xff)) +\n            (uint)CARRY4(var3,var4);\n  }\n  else {\n    var11 = var5 << (-difference + 0x40 & 0xff);\n    if (input3 != 0) {\n      var11 = var11 | 2;\n    }\n    var5 = (int)var5 >> (difference - 0x20 & 0xff);\n    var12 = var8 + var5;\n    shiftedInput4 = shiftedInput4 + ((int)var5 >> 0x1f) + (uint)CARRY4(var8,var5);\n  }\n  input2 = shiftedInput4 & 0x80000000;\n  difference = shiftedInput4;\n  if ((int)shiftedInput4 < 0) {\n    isTrue = var11 == 0;\n    var11 = -var11;\n    difference = -var12;\n    var12 = -(uint)!isTrue - var12;\n    difference = -(uint)(isTrue <= difference) - shiftedInput4;\n  }\n  if (0xfffff < difference) {\n    var8 = shiftedInput2 - 1;\n    if (0x1fffff < difference) {\n      shiftedInput4 = difference & 1;\n      difference = difference >> 1;\n      carry = (byte)var12;\n      var12 = (uint)(shiftedInput4 != 0) << 0x1f | var12 >> 1;\n      var11 = (uint)(carry & 1) << 0x1f | var11 >> 1;\n      var8 = shiftedInput2;\n      if (0xffbfffff < shiftedInput2 * 0x200000) goto LAB_080003ac;\n    }\nLAB_08000278:\n    isTrue = 0x7fffffff < var11;\n    if (var11 == 0x80000000) {\n      isTrue = (var12 & 1) != 0;\n    }\n    return CONCAT44(difference + var8 * 0x100000 + (uint)CARRY4(var12,(uint)isTrue) | input2,\n                    var12 + isTrue);\n  }\n  isZeroFlag = (var11 & 0x80000000) != 0;\n  var11 = var11 << 1;\n  var8 = var12 * 2;\n  isTrue = CARRY4(var12,var12);\n  var12 = var12 * 2 + (uint)isZeroFlag;\n  difference = difference * 2 + (uint)(isTrue || CARRY4(var8,(uint)isZeroFlag));\n  var8 = shiftedInput2 - 2;\n  if ((difference & 0x100000) != 0) goto LAB_08000278;\n  var5 = var12;\n  shiftedInput2 = difference;\n  if (difference == 0) {\n    var5 = 0;\n    shiftedInput2 = var12;\n  }\n  shift2 = LZCOUNT(shiftedInput2);\n  if (difference == 0) {\n    shift2 = shift2 + 0x20;\n  }\n  var12 = shift2 - 0xb;\n  booleanVar = SBORROW4(var12,0x20);\n  difference = shift2 - 0x2b;\n  isTrue = (int)difference < 0;\n  isZeroFlag = difference == 0;\n  if ((int)var12 < 0x20) {\n    booleanVar = SCARRY4(difference,0xc);\n    shift2 = shift2 + -0x1f;\n    isTrue = shift2 < 0;\n    isZeroFlag = shift2 == 0;\n    difference = var12;\n    if (!isZeroFlag && isTrue == booleanVar) {\n      var5 = shiftedInput2 << (var12 & 0xff);\n      shiftedInput2 = shiftedInput2 >> (0xcU - shift2 & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (isZeroFlag || isTrue != booleanVar) {\n    var11 = 0x20 - difference;\n  }\n  shiftedInput2 = shiftedInput2 << (difference & 0xff);\n  if (isZeroFlag || isTrue != booleanVar) {\n    shiftedInput2 = shiftedInput2 | var5 >> (var11 & 0xff);\n  }\n  if (isZeroFlag || isTrue != booleanVar) {\n    var5 = var5 << (difference & 0xff);\n  }\nLAB_080002f0:\n  if ((int)var12 <= (int)var8) {\n    return CONCAT44(shiftedInput2 + (var8 - var12) * 0x100000 | input2,var5);\n  }\n  difference = ~(var8 - var12);\n  if ((int)difference < 0x1f) {\n    shift2 = difference - 0x13;\n    if (shift2 != 0 && shift2 < 0 == SCARRY4(difference - 0x1f,0xc)) {\n      return CONCAT44(shiftedInput4,var5 >> (0x20 - (0xcU - shift2) & 0xff) | shiftedInput2 << (0xcU - shift2 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    difference = difference + 1;\n    return CONCAT44(input2 | shiftedInput2 >> (difference & 0xff),\n                    var5 >> (difference & 0xff) | shiftedInput2 << (0x20 - difference & 0xff));\n  }\n  return CONCAT44(shiftedInput4,shiftedInput2 >> (difference - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800016c": "calculate_combo_0800016c",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "shift1",
                "bVar2": "carry",
                "uVar3": "var3",
                "uVar4": "var4",
                "uVar5": "var5",
                "iVar6": "shift2",
                "uVar7": "shiftedInput2",
                "uVar8": "var8",
                "uVar9": "shiftedInput4",
                "uVar10": "difference",
                "uVar11": "var11",
                "uVar12": "var12",
                "bVar13": "isZeroFlag",
                "bVar14": "isTrue",
                "bVar15": "booleanVar"
            },
            "calling": [
                "FUN_080071c0",
                "FUN_08006d68",
                "FUN_08005c70",
                "FUN_080070b0",
                "FUN_08006c0c",
                "FUN_08006228",
                "FUN_08006070"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000404": {
            "entrypoint": "0x08000404",
            "current_name": "perform_shift_08000404",
            "code": "\nulonglong performShift_08000404(uint input)\n\n{\n  uint shiftCount;\n  uint absInput;\n  uint shiftAmount;\n  int leadingZeroes;\n  uint temp1;\n  uint signBit;\n  uint remainingBits;\n  bool negativeShift;\n  bool zeroShift;\n  bool overflow;\n  \n  if (input == 0) {\n    return 0;\n  }\n  signBit = input & 0x80000000;\n  absInput = input;\n  if ((int)signBit < 0) {\n    absInput = -input;\n  }\n  shiftCount = 0;\n  leadingZeroes = LZCOUNT(absInput);\n  temp1 = leadingZeroes + 0x15;\n  overflow = SBORROW4(temp1,0x20);\n  shiftAmount = leadingZeroes - 0xb;\n  negativeShift = (int)shiftAmount < 0;\n  zeroShift = shiftAmount == 0;\n  if (temp1 < 0x20) {\n    overflow = SCARRY4(shiftAmount,0xc);\n    negativeShift = false;\n    zeroShift = leadingZeroes + 1 == 0;\n    shiftAmount = temp1;\n    if (!zeroShift && overflow == false) {\n      shiftCount = absInput << temp1;\n      absInput = absInput >> (0xcU - (leadingZeroes + 1) & 0xff);\n      goto applyShift;\n    }\n  }\n  if (zeroShift || negativeShift != overflow) {\n    remainingBits = 0x20 - shiftAmount;\n  }\n  absInput = absInput << (shiftAmount & 0xff);\n  if (zeroShift || negativeShift != overflow) {\n    absInput = absInput | 0U >> (remainingBits & 0xff);\n  }\n  if (zeroShift || negativeShift != overflow) {\n    shiftCount = 0 << (shiftAmount & 0xff);\n  }\napplyShift:\n  if (temp1 < 0x433) {\n    return combineResult(absInput + (0x432 - temp1) * 0x100000 | signBit,shiftCount);\n  }\n  shiftAmount = ~(0x432 - temp1);\n  if (0x1e < (int)shiftAmount) {\n    return combineResult(input,absInput >> (shiftAmount - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  leadingZeroes = shiftAmount - 0x13;\n  if (leadingZeroes == 0 || leadingZeroes < 0 != SCARRY4(shiftAmount - 0x1f,0xc)) {\n    shiftAmount = shiftAmount + 1;\n    return combineResult(signBit | absInput >> (shiftAmount & 0xff),\n                    shiftCount >> (shiftAmount & 0xff) | absInput << (0x20 - shiftAmount & 0xff));\n  }\n  return combineResult(input,shiftCount >> (0x20 - (0xcU - leadingZeroes) & 0xff) | absInput << (0xcU - leadingZeroes & 0xff))\n         & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_08000404": "perform_shift_08000404",
                "param_1": "input",
                "uVar1": "shiftCount",
                "uVar2": "absInput",
                "uVar3": "shiftAmount",
                "iVar4": "leadingZeroes",
                "uVar5": "temp1",
                "uVar6": "signBit",
                "in_r12": "remainingBits",
                "bVar7": "negativeShift",
                "bVar8": "zeroShift",
                "bVar9": "overflow",
                "LAB_080002f0": "applyShift",
                "CONCAT44": "combineResult"
            },
            "calling": [
                "FUN_08006228"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000428": {
            "entrypoint": "0x08000428",
            "current_name": "perform_bit_manipulation_08000428",
            "code": "\nulonglong performBitManipulation_08000428(uint input,undefined4 value1,undefined4 value2,uint mask)\n\n{\n  uint bit31;\n  uint tempVar;\n  uint resultHigh;\n  uint shiftedInput;\n  uint tempShiftedInput;\n  int shiftAmount;\n  uint shiftedAmount;\n  uint shiftedInput2;\n  bool isShifted;\n  bool isZero;\n  bool isCarry;\n  \n  tempShiftedInput = input << 1;\n  isZero = tempShiftedInput == 0;\n  bit31 = (uint)((input & 0x80000000) != 0) << 0x1f;\n  shiftedInput = (uint)((int)tempShiftedInput >> 3) >> 1;\n  resultHigh = bit31 | shiftedInput;\n  input = input << 0x1d;\n  if (!isZero) {\n    mask = tempShiftedInput & 0xff000000;\n    isZero = mask == 0;\n  }\n  if (!isZero) {\n    isZero = mask == 0xff000000;\n  }\n  if (!isZero) {\n    return CONCAT44(resultHigh,input) ^ 0x3800000000000000;\n  }\n  if (tempShiftedInput == 0 || mask == 0xff000000) {\n    return CONCAT44(resultHigh,input);\n  }\n  tempVar = input;\n  tempShiftedInput = shiftedInput;\n  if (shiftedInput == 0) {\n    tempVar = 0;\n    tempShiftedInput = input;\n  }\n  shiftAmount = LZCOUNT(tempShiftedInput);\n  if (shiftedInput == 0) {\n    shiftAmount = shiftAmount + 0x20;\n  }\n  shiftedAmount = shiftAmount - 0xb;\n  isCarry = SBORROW4(shiftedAmount,0x20);\n  shiftedInput = shiftAmount - 0x2b;\n  isZero = (int)shiftedInput < 0;\n  isShifted = shiftedInput == 0;\n  if ((int)shiftedAmount < 0x20) {\n    isCarry = SCARRY4(shiftedInput,0xc);\n    shiftAmount = shiftAmount + -0x1f;\n    isZero = shiftAmount < 0;\n    isShifted = shiftAmount == 0;\n    shiftedInput = shiftedAmount;\n    if (!isShifted && isZero == isCarry) {\n      tempVar = tempShiftedInput << (shiftedAmount & 0xff);\n      tempShiftedInput = tempShiftedInput >> (0xcU - shiftAmount & 0xff);\n      goto LAB_080002f0;\n    }\n  }\n  if (isShifted || isZero != isCarry) {\n    shiftedInput2 = 0x20 - shiftedInput;\n  }\n  tempShiftedInput = tempShiftedInput << (shiftedInput & 0xff);\n  if (isShifted || isZero != isCarry) {\n    tempShiftedInput = tempShiftedInput | tempVar >> (shiftedInput2 & 0xff);\n  }\n  if (isShifted || isZero != isCarry) {\n    tempVar = tempVar << (shiftedInput & 0xff);\n  }\nLAB_080002f0:\n  if ((int)shiftedAmount < 0x381) {\n    return CONCAT44(tempShiftedInput + (0x380 - shiftedAmount) * 0x100000 | bit31,tempVar);\n  }\n  shiftedInput = ~(0x380 - shiftedAmount);\n  if ((int)shiftedInput < 0x1f) {\n    shiftAmount = shiftedInput - 0x13;\n    if (shiftAmount != 0 && shiftAmount < 0 == SCARRY4(shiftedInput - 0x1f,0xc)) {\n      return CONCAT44(resultHigh,tempVar >> (0x20 - (0xcU - shiftAmount) & 0xff) | tempShiftedInput << (0xcU - shiftAmount & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    shiftedInput = shiftedInput + 1;\n    return CONCAT44(bit31 | tempShiftedInput >> (shiftedInput & 0xff),\n                    tempVar >> (shiftedInput & 0xff) | tempShiftedInput << (0x20 - shiftedInput & 0xff));\n  }\n  return CONCAT44(resultHigh,tempShiftedInput >> (shiftedInput - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_08000428": "perform_bit_manipulation_08000428",
                "param_1": "input",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "mask",
                "uVar1": "bit31",
                "uVar2": "tempVar",
                "uVar3": "resultHigh",
                "uVar4": "shiftedInput",
                "uVar5": "tempShiftedInput",
                "iVar6": "shiftAmount",
                "uVar7": "shiftedAmount",
                "in_r12": "shiftedInput2",
                "bVar8": "isShifted",
                "bVar9": "isZero",
                "bVar10": "isCarry"
            },
            "calling": [
                "FUN_0800411c",
                "FUN_08003330"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080004d0": {
            "entrypoint": "0x080004d0",
            "current_name": "calculate_product_and_exponent_080004d0",
            "code": "\nulonglong calculateProductAndExponent_080004d0(undefined4 base,uint exponent,uint multiplier,uint addend)\n\n{\n  ulonglong product;\n  longlong temp;\n  uint uPartProduct;\n  uint uPartAddend;\n  int sum;\n  uint tempVar1;\n  uint uPartMultiplier;\n  uint tempVar2;\n  uint tempVar3;\n  bool isZero;\n  bool isGreaterThan;\n  bool isNegative;\n  ulonglong longlongParam;\n  \n  longlongParam = CONCAT44(exponent,base);\n  tempVar2 = 0x7ff;\n  uPartAddend = exponent >> 0x14 & 0x7ff;\n  isZero = uPartAddend == 0;\n  if (!isZero) {\n    uPartMultiplier = addend >> 0x14 & 0x7ff;\n    isZero = uPartMultiplier == 0;\n  }\n  if (!isZero) {\n    isZero = uPartAddend == 0x7ff;\n  }\n  if (!isZero) {\n    isZero = uPartMultiplier == 0x7ff;\n  }\n  if (isZero) {\n    longlongParam = FUN_080006ac();\n  }\n  uPartProduct = (uint)(longlongParam >> 0x20);\n  sum = uPartAddend + uPartMultiplier;\n  uPartAddend = uPartProduct ^ addend;\n  uPartProduct = uPartProduct & ~(tempVar2 << 0x15);\n  addend = addend & ~(tempVar2 << 0x15);\n  isZero = ((uint)longlongParam | uPartProduct << 0xc) == 0;\n  if (!isZero) {\n    isZero = (multiplier | addend << 0xc) == 0;\n  }\n  uPartProduct = uPartProduct | 0x100000;\n  addend = addend | 0x100000;\n  if (isZero) {\n    multiplier = (uint)longlongParam | multiplier;\n    addend = (uPartAddend & 0x80000000 | uPartProduct) ^ addend;\n    uPartAddend = tempVar2 >> 1;\n    isNegative = SBORROW4(sum,uPartAddend);\n    tempVar1 = sum - uPartAddend;\n    isZero = tempVar1 == 0;\n    uPartProduct = tempVar1;\n    if (!isZero && (int)uPartAddend <= sum) {\n      isNegative = SBORROW4(tempVar2,tempVar1);\n      uPartProduct = tempVar2 - tempVar1;\n      isZero = tempVar2 == tempVar1;\n    }\n    if (!isZero && (int)uPartProduct < 0 == isNegative) {\n      addend = addend | tempVar1 * 0x100000;\n    }\n    if (!isZero && (int)uPartProduct < 0 == isNegative) {\n      return CONCAT44(addend,multiplier);\n    }\n    addend = addend | 0x100000;\n    tempVar2 = 0;\n    isNegative = SBORROW4(tempVar1,1);\n    tempVar1 = tempVar1 - 1;\n    isZero = tempVar1 == 0;\n    uPartAddend = tempVar1;\n  }\n  else {\n    product = (longlongParam & 0xffffffff) * (ulonglong)multiplier;\n    longlongParam = (longlongParam & 0xffffffff) * (ulonglong)addend +\n             (ulonglong)uPartProduct * (ulonglong)multiplier + (product >> 0x20);\n    tempVar3 = (uint)longlongParam;\n    temp = (ulonglong)uPartProduct * (ulonglong)addend + (longlongParam >> 0x20);\n    tempVar2 = (uint)temp;\n    uPartProduct = (uint)((ulonglong)temp >> 0x20);\n    if ((int)product != 0) {\n      tempVar3 = tempVar3 | 1;\n    }\n    tempVar1 = (sum + -0x3ff) - (uint)(uPartProduct < 0x200);\n    if (uPartProduct < 0x200) {\n      isZero = (tempVar3 & 0x80000000) != 0;\n      tempVar3 = tempVar3 << 1;\n      temp = CONCAT44(uPartProduct * 2 + (uint)(CARRY4(tempVar2,tempVar2) || CARRY4(tempVar2 * 2,(uint)isZero)),\n                       tempVar2 * 2 + (uint)isZero);\n    }\n    addend = uPartAddend & 0x80000000 | (int)((ulonglong)temp >> 0x20) << 0xb | (uint)temp >> 0x15;\n    multiplier = (uint)temp << 0xb | tempVar3 >> 0x15;\n    tempVar2 = tempVar3 * 0x800;\n    isGreaterThan = 0xfc < tempVar1;\n    isNegative = SBORROW4(tempVar1,0xfd);\n    uPartProduct = tempVar1 - 0xfd;\n    isZero = uPartProduct == 0;\n    uPartAddend = uPartProduct;\n    if (isGreaterThan && !isZero) {\n      isGreaterThan = 0x6ff < uPartProduct;\n      isNegative = SBORROW4(uPartProduct,0x700);\n      uPartAddend = tempVar1 - 0x7fd;\n      isZero = uPartProduct == 0x700;\n    }\n    if (!isGreaterThan || isZero) {\n      isZero = 0x7fffffff < tempVar2;\n      if (tempVar2 == 0x80000000) {\n        isZero = (tempVar3 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(addend + tempVar1 * 0x100000 + (uint)CARRY4(multiplier,(uint)isZero),multiplier + isZero\n                     );\n    }\n  }\n  if (!isZero && (int)uPartAddend < 0 == isNegative) {\n    return (ulonglong)(addend & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  isGreaterThan = SCARRY4(tempVar1,0x36);\n  isZero = (int)(tempVar1 + 0x36) < 0;\n  isNegative = tempVar1 == 0xffffffca;\n  if (isNegative || isZero != isGreaterThan) {\n    multiplier = 0;\n  }\n  if (isNegative || isZero != isGreaterThan) {\n    addend = addend & 0x80000000;\n  }\n  if (isNegative || isZero != isGreaterThan) {\n    return CONCAT44(addend,multiplier);\n  }\n  uPartAddend = -tempVar1;\n  uPartProduct = uPartAddend - 0x20;\n  if (0x1f < (int)uPartAddend) {\n    tempVar1 = multiplier >> (uPartProduct & 0xff) | addend << (0x20 - uPartProduct & 0xff);\n    uPartAddend = (addend >> (uPartProduct & 0xff) & ~((addend & 0x80000000) >> (uPartProduct & 0xff))) -\n            ((int)tempVar1 >> 0x1f);\n    if ((tempVar2 | multiplier << (0x20 - uPartProduct & 0xff) | tempVar1 << 1) == 0) {\n      uPartAddend = uPartAddend & ~(tempVar1 >> 0x1f);\n    }\n    return CONCAT44(addend,uPartAddend) & 0x80000000ffffffff;\n  }\n  sum = uPartAddend - 0x14;\n  if (sum == 0 || sum < 0 != SCARRY4(uPartProduct,0xc)) {\n    tempVar3 = multiplier << (tempVar1 + 0x20 & 0xff);\n    uPartProduct = multiplier >> (uPartAddend & 0xff) | addend << (tempVar1 + 0x20 & 0xff);\n    tempVar1 = uPartProduct + -((int)tempVar3 >> 0x1f);\n    if ((tempVar2 | tempVar3 << 1) == 0) {\n      tempVar1 = tempVar1 & ~(tempVar3 >> 0x1f);\n    }\n    return CONCAT44((addend & 0x80000000) +\n                    ((addend & 0x7fffffff) >> (uPartAddend & 0xff)) +\n                    (uint)CARRY4(uPartProduct,-((int)tempVar3 >> 0x1f)),tempVar1);\n  }\n  uPartAddend = 0xc - sum;\n  tempVar1 = multiplier << (uPartAddend & 0xff);\n  uPartAddend = multiplier >> (0x20 - uPartAddend & 0xff) | addend << (uPartAddend & 0xff);\n  uPartProduct = uPartAddend + -((int)tempVar1 >> 0x1f);\n  if ((tempVar2 | tempVar1 << 1) == 0) {\n    uPartProduct = uPartProduct & ~(tempVar1 >> 0x1f);\n  }\n  return CONCAT44((addend & 0x80000000) + (uint)CARRY4(uPartAddend,-((int)tempVar1 >> 0x1f)),uPartProduct);\n}\n\n",
            "renaming": {
                "FUN_080004d0": "calculate_product_and_exponent_080004d0",
                "param_1": "base",
                "param_2": "exponent",
                "param_3": "multiplier",
                "param_4": "addend",
                "uVar1": "product",
                "lVar2": "temp",
                "uVar3": "uPartProduct",
                "uVar4": "uPartAddend",
                "iVar5": "sum",
                "uVar6": "tempVar1",
                "unaff_r5": "uPartMultiplier",
                "uVar7": "tempVar2",
                "uVar8": "tempVar3",
                "bVar9": "isZero",
                "bVar10": "isGreaterThan",
                "bVar11": "isNegative",
                "uVar12": "longlongParam"
            },
            "calling": [
                "FUN_080071c0",
                "FUN_08006d68",
                "FUN_08005c70",
                "FUN_08005900",
                "FUN_08006c0c",
                "FUN_0800411c",
                "FUN_08006228",
                "FUN_08003330"
            ],
            "called": [
                "FUN_080006ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080006ac": {
            "entrypoint": "0x080006ac",
            "current_name": "calculate_xor_difference_080006ac",
            "code": "\nulonglong calculate_xor_difference_080006ac(uint input_value_1,uint input_value_2,uint input_value_3,uint input_value_4)\n\n{\n  uint first_bit_input_value_1;\n  uint first_bit_input_value_2;\n  uint common_bit_result;\n  uint final_result;\n  uint constant;\n  bool is_zero;\n  \n  common_bit_result = constant & input_value_4 >> 0x14;\n  if (first_bit_input_value_2 != constant && common_bit_result != constant) {\n    is_zero = (input_value_1 | input_value_2 << 1) == 0;\n    if (!is_zero) {\n      is_zero = (input_value_3 | input_value_4 << 1) == 0;\n    }\n    if (is_zero) {\n      return (ulonglong)((input_value_2 ^ input_value_4) & 0x80000000) << 0x20;\n    }\n    if (first_bit_input_value_2 == 0) {\n      final_result = input_value_2 & 0x80000000;\n      do {\n        first_bit_input_value_1 = input_value_1 & 0x80000000;\n        input_value_1 = input_value_1 << 1;\n        input_value_2 = input_value_2 * 2 + (uint)(first_bit_input_value_1 != 0);\n      } while ((input_value_2 & 0x100000) == 0);\n      input_value_2 = input_value_2 | final_result;\n      if (common_bit_result != 0) {\n        return CONCAT44(input_value_2,input_value_1);\n      }\n    }\n    do {\n      common_bit_result = input_value_3 & 0x80000000;\n      input_value_3 = input_value_3 << 1;\n      input_value_4 = input_value_4 * 2 + (uint)(common_bit_result != 0);\n    } while ((input_value_4 & 0x100000) == 0);\n    return CONCAT44(input_value_2,input_value_1);\n  }\n  is_zero = (input_value_1 | input_value_2 << 1) == 0;\n  if (is_zero) {\n    input_value_2 = input_value_4;\n    input_value_1 = input_value_3;\n  }\n  if (!is_zero) {\n    is_zero = (input_value_3 | input_value_4 << 1) == 0;\n  }\n  final_result = input_value_2;\n  if (((!is_zero) && ((first_bit_input_value_2 != constant || ((input_value_1 | input_value_2 << 0xc) == 0)))) &&\n     ((common_bit_result != constant || (input_value_1 = input_value_3, final_result = input_value_4, (input_value_3 | input_value_4 << 0xc) == 0)))) {\n    return (ulonglong)((input_value_2 ^ input_value_4) & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  return CONCAT44(final_result,input_value_1) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_080006ac": "calculate_xor_difference_080006ac",
                "param_1": "input_value_1",
                "param_2": "input_value_2",
                "param_3": "input_value_3",
                "param_4": "input_value_4",
                "uVar1": "first_bit_input_value_1",
                "unaff_r4": "first_bit_input_value_2",
                "uVar2": "common_bit_result",
                "uVar3": "final_result",
                "in_r12": "constant",
                "bVar4": "is_zero"
            },
            "calling": [
                "FUN_080004d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000724": {
            "entrypoint": "0x08000724",
            "current_name": "calculate_floating_point_08000724",
            "code": "\nulonglong calculateFloatingPoint_08000724(undefined4 exponentBit,uint mantissaBits,uint combinedBits,uint signBit)\n\n{\n  uint exponentBits;\n  uint mantissaBits;\n  uint combinedBits;\n  uint signBit;\n  uint mantissaBits;\n  uint exponentBits;\n  uint exponentBits;\n  int exponentDifference;\n  uint exponentDifference;\n  uint signBit;\n  uint exponentBits;\n  uint mantissaBits;\n  uint exponentBits;\n  uint combinedBits;\n  bool isZero;\n  bool isEqual;\n  bool isOverflow;\n  undefined8 exponentBits7;\n  \n  exponentBits7 = CONCAT44(mantissaBits,exponentBit);\n  combinedBits = 0x7ff;\n  exponentBits = mantissaBits >> 0x14 & 0x7ff;\n  isZero = exponentBits == 0;\n  if (!isZero) {\n    signBit = signBit >> 0x14 & 0x7ff;\n    isZero = signBit == 0;\n  }\n  if (!isZero) {\n    isZero = exponentBits == 0x7ff;\n  }\n  if (!isZero) {\n    isZero = signBit == 0x7ff;\n  }\n  if (isZero) {\n    exponentBits7 = FUN_08000892();\n  }\n  exponentDifference = (uint)((ulonglong)exponentBits7 >> 0x20);\n  mantissaBits = (uint)exponentBits7;\n  exponentDifference = exponentBits - signBit;\n  if ((combinedBits | signBit << 0xc) == 0) {\n    exponentBits = (exponentDifference ^ signBit) & 0x80000000 | exponentDifference & 0xfffff;\n    isOverflow = SCARRY4(exponentDifference,combinedBits >> 1);\n    exponentDifference = exponentDifference + (combinedBits >> 1);\n    isZero = (int)exponentDifference < 0;\n    isEqual = exponentDifference == 0;\n    if (!isEqual && isZero == isOverflow) {\n      isOverflow = SBORROW4(combinedBits,exponentDifference);\n      isZero = (int)(combinedBits - exponentDifference) < 0;\n      isEqual = combinedBits == exponentDifference;\n    }\n    if (!isEqual && isZero == isOverflow) {\n      exponentBits = exponentBits | exponentDifference * 0x100000;\n    }\n    if (!isEqual && isZero == isOverflow) {\n      return CONCAT44(exponentBits,mantissaBits);\n    }\n    exponentBits = exponentBits | 0x100000;\n    combinedBits = 0;\n    isEqual = SBORROW4(exponentDifference,1);\n    exponentDifference = exponentDifference - 1;\n    isZero = exponentDifference == 0;\n    combinedBits = exponentDifference;\n  }\n  else {\n    combinedBits = (signBit << 0xc) >> 4 | 0x10000000 | combinedBits >> 0x18;\n    combinedBits = combinedBits << 8;\n    exponentBits = (exponentDifference << 0xc) >> 4 | 0x10000000 | mantissaBits >> 0x18;\n    mantissaBits = mantissaBits * 0x100;\n    exponentBits = (exponentDifference ^ signBit) & 0x80000000;\n    isZero = combinedBits <= exponentBits;\n    if (exponentBits == combinedBits) {\n      isZero = combinedBits <= mantissaBits;\n    }\n    exponentDifference = exponentDifference + (uint)isZero;\n    exponentDifference = exponentDifference + 0x3fd;\n    if (isZero == false) {\n      combinedBits = combinedBits >> 1;\n      combinedBits = (uint)((combinedBits >> 0x18 & 1) != 0) << 0x1f | combinedBits >> 1;\n    }\n    exponentBits = mantissaBits - combinedBits;\n    exponentBits = (exponentBits - combinedBits) - (uint)(mantissaBits < combinedBits);\n    signBit = combinedBits >> 1;\n    exponentBits = (uint)((combinedBits & 1) != 0) << 0x1f | combinedBits >> 1;\n    mantissaBits = 0x100000;\n    combinedBits = 0x80000;\n    while( true ) {\n      isZero = exponentBits <= exponentBits;\n      if (signBit < exponentBits || exponentBits - signBit < (uint)isZero) {\n        exponentBits = exponentBits - exponentBits;\n        mantissaBits = mantissaBits | combinedBits;\n        exponentBits = (exponentBits - signBit) - (uint)!isZero;\n      }\n      mantissaBits = signBit >> 1;\n      exponentBits = (uint)((signBit & 1) != 0) << 0x1f | exponentBits >> 1;\n      isEqual = exponentBits <= exponentBits;\n      isZero = exponentBits - mantissaBits < (uint)isEqual;\n      combinedBits = exponentBits;\n      if (mantissaBits < exponentBits || isZero) {\n        exponentBits = exponentBits - exponentBits;\n        combinedBits = (exponentBits - mantissaBits) - (uint)!isEqual;\n      }\n      if (mantissaBits < exponentBits || isZero) {\n        mantissaBits = mantissaBits | combinedBits >> 1;\n      }\n      exponentBits = signBit >> 2;\n      mantissaBits = (uint)((mantissaBits & 1) != 0) << 0x1f | exponentBits >> 1;\n      isEqual = mantissaBits <= exponentBits;\n      isZero = combinedBits - exponentBits < (uint)isEqual;\n      mantissaBits = combinedBits;\n      if (exponentBits < combinedBits || isZero) {\n        exponentBits = exponentBits - mantissaBits;\n        mantissaBits = (combinedBits - exponentBits) - (uint)!isEqual;\n      }\n      if (exponentBits < combinedBits || isZero) {\n        mantissaBits = mantissaBits | combinedBits >> 2;\n      }\n      exponentBits = signBit >> 3;\n      exponentBits = (uint)((exponentBits & 1) != 0) << 0x1f | mantissaBits >> 1;\n      isEqual = exponentBits <= exponentBits;\n      isZero = mantissaBits - exponentBits < (uint)isEqual;\n      exponentBits = mantissaBits;\n      if (exponentBits < mantissaBits || isZero) {\n        exponentBits = exponentBits - exponentBits;\n        exponentBits = (mantissaBits - exponentBits) - (uint)!isEqual;\n      }\n      if (exponentBits < mantissaBits || isZero) {\n        mantissaBits = mantissaBits | combinedBits >> 3;\n      }\n      combinedBits = exponentBits | exponentBits;\n      if (combinedBits == 0) break;\n      exponentBits = exponentBits << 4 | exponentBits >> 0x1c;\n      exponentBits = exponentBits << 4;\n      signBit = signBit & 0xfffffff8 | exponentBits >> 0x1d;\n      exponentBits = (mantissaBits >> 1) << 3;\n      combinedBits = combinedBits >> 4;\n      if (combinedBits == 0) {\n        exponentBits = signBit;\n        if ((exponentBits & 0x100000) != 0) goto LAB_08000842;\n        exponentBits = exponentBits | mantissaBits;\n        mantissaBits = 0;\n        combinedBits = 0x80000000;\n      }\n    }\n    if ((exponentBits & 0x100000) == 0) {\n      exponentBits = exponentBits | mantissaBits;\n      mantissaBits = 0;\n    }\nLAB_08000842:\n    isOverflow = 0xfc < exponentDifference;\n    isEqual = SBORROW4(exponentDifference,0xfd);\n    signBit = exponentDifference + 0x300;\n    isZero = signBit == 0;\n    combinedBits = signBit;\n    if (isOverflow && !isZero) {\n      isOverflow = 0x6ff < signBit;\n      isEqual = SBORROW4(signBit,0x700);\n      combinedBits = exponentDifference - 0x400;\n      isZero = signBit == 0x700;\n    }\n    if (!isOverflow || isZero) {\n      isZero = exponentBits <= exponentBits;\n      if (exponentBits == exponentBits) {\n        isZero = exponentBits <= exponentBits;\n      }\n      if (exponentBits == exponentBits && exponentBits == exponentBits) {\n        isZero = (mantissaBits & 1) != 0;\n      }\n      return CONCAT44(exponentBits + exponentDifference * 0x100000 + (uint)CARRY4(mantissaBits,(uint)isZero),mantissaBits + isZero);\n    }\n  }\n  if (!isZero && (int)combinedBits < 0 == isEqual) {\n    return (ulonglong)(exponentBits & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  isOverflow = SCARRY4(exponentDifference,0x36);\n  isZero = (int)(exponentDifference + 0x36) < 0;\n  isEqual = exponentDifference == 0xffffffca;\n  if (isEqual || isZero != isOverflow) {\n    mantissaBits = 0;\n  }\n  if (isEqual || isZero != isOverflow) {\n    exponentBits = exponentBits & 0x80000000;\n  }\n  if (isEqual || isZero != isOverflow) {\n    return CONCAT44(exponentBits,mantissaBits);\n  }\n  combinedBits = -exponentDifference;\n  exponentBits = combinedBits - 0x20;\n  if (0x1f < (int)combinedBits) {\n    combinedBits = mantissaBits >> (exponentBits & 0xff) | exponentBits << (0x20 - exponentBits & 0xff);\n    exponentDifference = (exponentBits >> (exponentBits & 0xff) & ~((exponentBits & 0x80000000) >> (exponentBits & 0xff))) -\n            ((int)combinedBits >> 0x1f);\n    if ((combinedBits | mantissaBits << (0x20 - exponentBits & 0xff) | combinedBits << 1) == 0) {\n      exponentDifference = exponentDifference & ~(combinedBits >> 0x1f);\n    }\n    return CONCAT44(exponentBits,exponentDifference) & 0x80000000ffffffff;\n  }\n  exponentDifference = combinedBits - 0x14;\n  if (exponentDifference != 0 && exponentDifference < 0 == SCARRY4(exponentBits,0xc)) {\n    exponentDifference = 0xc - exponentDifference;\n    combinedBits = mantissaBits << (exponentDifference & 0xff);\n    mantissaBits = mantissaBits >> (0x20 - exponentDifference & 0xff) | exponentBits << (exponentDifference & 0xff);\n    exponentDifference = mantissaBits + -((int)combinedBits >> 0x1f);\n    if ((combinedBits | combinedBits << 1) == 0) {\n      exponentDifference = exponentDifference & ~(combinedBits >> 0x1f);\n    }\n    return CONCAT44((exponentBits & 0x80000000) + (uint)CARRY4(mantissaBits,-((int)combinedBits >> 0x1f)),exponentDifference);\n  }\n  exponentBits = mantissaBits << (exponentDifference + 0x20 & 0xff);\n  mantissaBits = mantissaBits >> (combinedBits & 0xff) | exponentBits << (exponentDifference + 0x20 & 0xff);\n  exponentDifference = mantissaBits + -((int)exponentBits >> 0x1f);\n  if ((combinedBits | exponentBits << 1) == 0) {\n    exponentDifference = exponentDifference & ~(exponentBits >> 0x1f);\n  }\n  return CONCAT44((exponentBits & 0x80000000) +\n                  ((exponentBits & 0x7fffffff) >> (combinedBits & 0xff)) +\n                  (uint)CARRY4(mantissaBits,-((int)exponentBits >> 0x1f)),exponentDifference);\n}\n\n",
            "renaming": {
                "FUN_08000724": "calculate_floating_point_08000724",
                "param_1": "exponentBit",
                "param_2": "mantissaBits",
                "param_3": "combinedBits",
                "param_4": "signBit",
                "uVar1": "exponentBits",
                "uVar2": "mantissaBits",
                "uVar3": "combinedBits",
                "uVar4": "signBit",
                "uVar5": "mantissaBits",
                "uVar6": "exponentBits",
                "uVar7": "exponentBits",
                "iVar8": "exponentDifference",
                "uVar9": "exponentDifference",
                "unaff_r5": "signBit",
                "uVar10": "exponentBits",
                "uVar11": "mantissaBits",
                "uVar12": "exponentBits",
                "uVar13": "combinedBits",
                "bVar14": "isZero",
                "bVar15": "isEqual",
                "bVar16": "isOverflow"
            },
            "calling": [
                "FUN_08006d68",
                "FUN_08005c70",
                "FUN_08005900",
                "FUN_08006c0c",
                "FUN_08005bc8",
                "FUN_08006228",
                "FUN_08003330",
                "FUN_08006070"
            ],
            "called": [
                "FUN_08000892"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000892": {
            "entrypoint": "0x08000892",
            "current_name": "calculate_floating_point_value_08000892",
            "code": "\nulonglong calculateFloatingPointValue_08000892(uint fractionalPart,uint exponentPart,uint fractionalPart2,uint exponentPart2)\n\n{\n  uint fractionalPartMask;\n  uint exponentComparison;\n  uint shiftedExponent;\n  uint exponentValue;\n  uint baseExponent;\n  bool isZero;\n  \n  shiftedExponent = baseExponent & exponentPart2 >> 0x14;\n  exponentValue = exponentPart;\n  if (exponentComparison != baseExponent || shiftedExponent != baseExponent) {\n    if (exponentComparison == baseExponent) {\n      if (((fractionalPart | exponentPart << 0xc) == 0) && (fractionalPart = fractionalPart2, exponentValue = exponentPart2, shiftedExponent != baseExponent)\n         ) {\nLAB_08000704:\n        return (ulonglong)((exponentPart ^ exponentPart2) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n    }\n    else if (shiftedExponent == baseExponent) {\n      fractionalPart = fractionalPart2;\n      exponentValue = exponentPart2;\n      if ((fractionalPart2 | exponentPart2 << 0xc) == 0) {\nLAB_080006c8:\n        return (ulonglong)((exponentPart ^ exponentPart2) & 0x80000000) << 0x20;\n      }\n    }\n    else {\n      isZero = (fractionalPart | exponentPart << 1) == 0;\n      if (!isZero) {\n        isZero = (fractionalPart2 | exponentPart2 << 1) == 0;\n      }\n      if (!isZero) {\n        if (exponentComparison == 0) {\n          exponentValue = exponentPart & 0x80000000;\n          do {\n            fractionalPartMask = fractionalPart & 0x80000000;\n            fractionalPart = fractionalPart << 1;\n            exponentPart = exponentPart * 2 + (uint)(fractionalPartMask != 0);\n          } while ((exponentPart & 0x100000) == 0);\n          exponentPart = exponentPart | exponentValue;\n          if (shiftedExponent != 0) {\n            return CONCAT44(exponentPart,fractionalPart);\n          }\n        }\n        do {\n          exponentValue = fractionalPart2 & 0x80000000;\n          fractionalPart2 = fractionalPart2 << 1;\n          exponentPart2 = exponentPart2 * 2 + (uint)(exponentValue != 0);\n        } while ((exponentPart2 & 0x100000) == 0);\n        return CONCAT44(exponentPart,fractionalPart);\n      }\n      if ((fractionalPart | exponentPart << 1) != 0) goto LAB_08000704;\n      if ((fractionalPart2 | exponentPart2 << 1) != 0) goto LAB_080006c8;\n    }\n  }\n  return CONCAT44(exponentValue,fractionalPart) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_08000892": "calculate_floating_point_value_08000892",
                "param_1": "fractionalPart",
                "param_2": "exponentPart",
                "param_3": "fractionalPart2",
                "param_4": "exponentPart2",
                "uVar1": "fractionalPartMask",
                "unaff_r4": "exponentComparison",
                "uVar2": "shiftedExponent",
                "uVar3": "exponentValue",
                "in_r12": "baseExponent",
                "bVar4": "isZero"
            },
            "calling": [
                "FUN_08000724"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000904": {
            "entrypoint": "0x08000904",
            "current_name": "check_equality_08000904",
            "code": "\nuint checkEquality_08000904(uint value1,uint value2,uint value3,uint value4)\n\n{\n  uint result;\n  bool isEqual;\n  bool isSmallerOrEqual;\n  \n  if (((int)(value2 << 1) >> 0x15 == -1 || (int)(value4 << 1) >> 0x15 == -1) &&\n     ((((int)(value2 << 1) >> 0x15 == -1 && ((value1 | value2 << 0xc) != 0)) ||\n      (((int)(value4 << 1) >> 0x15 == -1 && ((value3 | value4 << 0xc) != 0)))))) {\n    return 1;\n  }\n  isEqual = (value1 | value2 << 1) == 0;\n  if (isEqual) {\n    isEqual = (value3 | value4 << 1) == 0;\n  }\n  if (!isEqual) {\n    isEqual = value2 == value4;\n  }\n  if (isEqual) {\n    isEqual = value1 == value3;\n  }\n  if (!isEqual) {\n    result = value2 ^ value4;\n    isEqual = result == 0;\n    if (-1 < (int)result) {\n      isEqual = value2 == value4;\n    }\n    isSmallerOrEqual = -1 < (int)result && value4 <= value2;\n    if (isEqual) {\n      isSmallerOrEqual = value3 <= value1;\n    }\n    value4 = (int)value4 >> 0x1f;\n    if (!isSmallerOrEqual) {\n      value4 = ~value4;\n    }\n    return value4 | 1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08000904": "check_equality_08000904",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "value4",
                "uVar1": "result",
                "bVar2": "isEqual",
                "bVar3": "isSmallerOrEqual"
            },
            "calling": [
                "FUN_08000990"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000980": {
            "entrypoint": "0x08000980",
            "current_name": "execute_function_08000980",
            "code": "\nvoid execute_function_08000980(undefined4 input_param1,undefined4 input_param2,undefined4 input_param3,undefined4 input_param4)\n\n{\n  FUN_08000990(input_param3,input_param4,input_param1,input_param2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000980": "execute_function_08000980",
                "param_1": "input_param1",
                "param_2": "input_param2",
                "param_3": "input_param3",
                "param_4": "input_param4"
            },
            "calling": [
                "FUN_080009f0"
            ],
            "called": [
                "FUN_08000990"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000990": {
            "entrypoint": "0x08000990",
            "current_name": "initialize_08000990",
            "code": "\nundefined4 initialize_08000990(undefined4 input_value)\n\n{\n  FUN_08000904();\n  return input_value;\n}\n\n",
            "renaming": {
                "FUN_08000990": "initialize_08000990",
                "param_1": "input_value"
            },
            "calling": [
                "FUN_08000980",
                "FUN_080009c8",
                "FUN_080009a0",
                "FUN_080009b4"
            ],
            "called": [
                "FUN_08000904"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009a0": {
            "entrypoint": "0x080009a0",
            "current_name": "is_zero_character_080009a0",
            "code": "\nbool isZeroCharacter_080009a0(void)\n\n{\n  char inputChar;\n  \n  FUN_08000990();\n  return inputChar != '\\0';\n}\n\n",
            "renaming": {
                "FUN_080009a0": "is_zero_character_080009a0",
                "in_ZR": "inputChar"
            },
            "calling": [
                "FUN_08005900"
            ],
            "called": [
                "FUN_08000990"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009b4": {
            "entrypoint": "0x080009b4",
            "current_name": "check_if_input_empty_080009b4",
            "code": "\nbool check_if_input_empty_080009b4(void)\n\n{\n  char input_character;\n  \n  FUN_08000990();\n  return input_character == '\\0';\n}\n\n",
            "renaming": {
                "FUN_080009b4": "check_if_input_empty_080009b4",
                "in_CY": "input_character"
            },
            "calling": [
                "FUN_08005900",
                "FUN_08005bc8"
            ],
            "called": [
                "FUN_08000990"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009c8": {
            "entrypoint": "0x080009c8",
            "current_name": "check_cy_and_zr_080009c8",
            "code": "\nbool check_CY_and_ZR_080009c8(void)\n\n{\n  undefined zero_flag;\n  undefined carry_flag;\n  \n  FUN_08000990();\n  return !(bool)carry_flag || (bool)zero_flag;\n}\n\n",
            "renaming": {
                "FUN_080009c8": "check_cy_and_zr_080009c8",
                "in_CY": "carry_flag",
                "in_ZR": "zero_flag"
            },
            "calling": [
                "FUN_08006228"
            ],
            "called": [
                "FUN_08000990"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080009f0": {
            "entrypoint": "0x080009f0",
            "current_name": "check_if_in_cy_is_null_080009f0",
            "code": "\nbool check_if_in_CY_is_null_080009f0(void)\n\n{\n  char input_char;\n  \n  FUN_08000980();\n  return input_char == '\\0';\n}\n\n",
            "renaming": {
                "FUN_080009f0": "check_if_in_cy_is_null_080009f0",
                "in_CY": "input_char"
            },
            "calling": [
                "FUN_08006d68",
                "FUN_08005c70",
                "FUN_08005854",
                "FUN_08006228"
            ],
            "called": [
                "FUN_08000980"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a04": {
            "entrypoint": "0x08000a04",
            "current_name": "check_params_08000a04",
            "code": "\nundefined4 checkParams_08000a04(uint num1,int num2,uint num3,int num4)\n\n{\n  if ((((num2 << 1) >> 0x15 != -1) || ((num1 | num2 << 0xc) == 0)) &&\n     (((num4 << 1) >> 0x15 != -1 || ((num3 | num4 << 0xc) == 0)))) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08000a04": "check_params_08000a04",
                "param_1": "num1",
                "param_2": "num2",
                "param_3": "num3",
                "param_4": "num4"
            },
            "calling": [
                "FUN_08005900",
                "FUN_08005854",
                "FUN_08005bc8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a30": {
            "entrypoint": "0x08000a30",
            "current_name": "improved_calculation_08000a30",
            "code": "\nuint improvedCalculation_08000a30(uint inputValue1,uint inputValue2)\n\n{\n  uint result1;\n  uint result2;\n  uint result3;\n  uint intermediateResult;\n  bool bVar4;\n  bool bVar5;\n  \n  result2 = inputValue2 * 2;\n  bVar5 = result2 < 0x70000000;\n  result3 = result2 + 0x90000000;\n  result1 = result3;\n  if (!bVar5) {\n    intermediateResult = result2 + 0x8fe00000;\n    result1 = intermediateResult;\n  }\n  bVar4 = result1 == 0;\n  if (!bVar5 && result3 >= 0x200000) {\n    bVar4 = intermediateResult == 0x1fc00000;\n  }\n  if (((bVar5 || result3 < 0x200000) || 0x1fc00000 < intermediateResult) || bVar4) {\n    if ((inputValue2 & 0x40000000) != 0) {\n      if (((int)result2 >> 0x15 == -1) && ((inputValue1 | inputValue2 << 0xc) != 0)) {\n        return 0x7fc00000;\n      }\n      return inputValue2 & 0x80000000 | 0x7f800000;\n    }\n    if ((int)(result2 + 0x92e00000) < 0 != SCARRY4(result3,0x2e00000)) {\n      return inputValue2 & 0x80000000;\n    }\n    result2 = 0x18 - (result2 + 0x92e00000 >> 0x15);\n    result1 = inputValue1 >> (result2 & 0xff);\n    if (inputValue1 << (0x20 - result2 & 0xff) != 0) {\n      result1 = result1 | 1;\n    }\n    result3 = inputValue2 & 0x1fffff | 0x100000;\n    inputValue1 = result1 | result3 << (0x20 - result2 & 0xff);\n    result3 = (result3 >> (result2 & 0xff)) << 1;\n  }\n  result1 = (inputValue2 & 0x80000000 | inputValue1 >> 0x1d) + result3 * 4 + (uint)(0x7fffffff < inputValue1 * 8);\n  if (inputValue1 * 8 == 0x80000000) {\n    result1 = result1 & 0xfffffffe;\n  }\n  return result1;\n}\n\n",
            "renaming": {
                "FUN_08000a30": "improved_calculation_08000a30",
                "param_1": "inputValue1",
                "param_2": "inputValue2",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "result3",
                "in_r12": "intermediateResult"
            },
            "calling": [
                "FUN_0800411c",
                "FUN_08003330"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000ad8": {
            "entrypoint": "0x08000ad8",
            "current_name": "calculate_floating_point_08000ad8",
            "code": "\nuint calculateFloatingPoint_08000ad8(uint inputValue,uint inputFlag,undefined4 tempVar,uint result)\n\n{\n  int firstHalf;\n  int secondHalf;\n  uint tempValue1;\n  uint tempValue2;\n  uint firstValue;\n  uint secondValue;\n  uint difference;\n  bool isEqual;\n  \n  tempValue1 = inputFlag ^ 0x80000000;\n  firstValue = inputValue << 1;\n  isEqual = firstValue == 0;\n  if (!isEqual) {\n    result = inputFlag << 1;\n    isEqual = result == 0;\n  }\n  if (!isEqual) {\n    isEqual = firstValue == result;\n  }\n  firstHalf = (int)firstValue >> 0x18;\n  if (!isEqual) {\n    isEqual = firstHalf == -1;\n  }\n  if (!isEqual) {\n    isEqual = (int)result >> 0x18 == -1;\n  }\n  if (isEqual) {\n    secondHalf = (int)(inputFlag << 1) >> 0x18;\n    if (firstHalf == -1 || secondHalf == -1) {\n      firstValue = tempValue1;\n      if (firstHalf == -1) {\n        firstValue = inputValue;\n      }\n      if (firstHalf != -1 || secondHalf != -1) {\n        tempValue1 = firstValue;\n      }\n      isEqual = (firstValue & 0x7fffff) == 0;\n      if (isEqual) {\n        isEqual = (tempValue1 & 0x7fffff) == 0;\n      }\n      if (isEqual) {\n        isEqual = firstValue == tempValue1;\n      }\n      if (!isEqual) {\n        firstValue = firstValue | 0x400000;\n      }\n      return firstValue;\n    }\n    if (((inputValue ^ tempValue1) & 0x7fffffff) != 0) {\n      if (firstValue == 0) {\n        inputValue = tempValue1;\n      }\n      return inputValue;\n    }\n    if (inputValue != tempValue1) {\n      return 0;\n    }\n    if ((firstValue & 0xff000000) == 0) {\n      tempValue1 = inputValue << 1;\n      if ((inputValue & 0x80000000) != 0) {\n        tempValue1 = tempValue1 | 0x80000000;\n      }\n      return tempValue1;\n    }\n    if (firstValue < 0xfe000000) {\n      return inputValue + 0x800000;\n    }\n    inputValue = inputValue & 0x80000000;\nLAB_08000c12:\n    return inputValue | 0x7f800000;\n  }\n  firstValue = firstValue >> 0x18;\n  result = result >> 0x18;\n  difference = result - firstValue;\n  isEqual = difference != 0;\n  secondValue = firstValue;\n  if (isEqual && firstValue <= result) {\n    secondValue = firstValue + difference;\n  }\n  if (isEqual && firstValue <= result) {\n    tempValue1 = tempValue1 ^ inputValue;\n  }\n  if (isEqual && firstValue <= result) {\n    inputValue = inputValue ^ tempValue1;\n  }\n  if (isEqual && firstValue <= result) {\n    tempValue1 = tempValue1 ^ inputValue;\n  }\n  if (result < firstValue) {\n    difference = -difference;\n  }\n  if (0x19 < difference) {\n    return inputValue;\n  }\n  firstValue = inputValue & 0xffffff | 0x800000;\n  if ((inputValue & 0x80000000) != 0) {\n    firstValue = -firstValue;\n  }\n  tempValue2 = tempValue1 & 0xffffff | 0x800000;\n  if ((tempValue1 & 0x80000000) != 0) {\n    tempValue2 = -tempValue2;\n  }\n  if (secondValue == difference) {\n    tempValue2 = tempValue2 ^ 0x800000;\n    if (secondValue == 0) {\n      firstValue = firstValue ^ 0x800000;\n      secondValue = 1;\n    }\n    else {\n      difference = difference - 1;\n    }\n  }\n  firstValue = firstValue + ((int)tempValue2 >> (difference & 0xff));\n  tempValue2 = tempValue2 << (0x20 - difference & 0xff);\n  inputValue = firstValue & 0x80000000;\n  if ((int)firstValue < 0) {\n    isEqual = tempValue2 != 0;\n    tempValue2 = -tempValue2;\n    firstValue = -firstValue - (uint)isEqual;\n  }\n  if (firstValue < 0x800000) {\n    tempValue1 = tempValue2 & 0x80000000;\n    tempValue2 = tempValue2 << 1;\n    firstValue = firstValue * 2 + (uint)(tempValue1 != 0);\n    tempValue1 = secondValue - 2;\n    if ((firstValue & 0x800000) == 0) {\n      difference = LZCOUNT(firstValue) - 8;\n      firstValue = firstValue << (difference & 0xff);\n      if ((int)tempValue1 < (int)difference) {\n        firstValue = firstValue >> (-(tempValue1 - difference) & 0xff);\n      }\n      else {\n        firstValue = firstValue + (tempValue1 - difference) * 0x800000;\n      }\n      return firstValue | inputValue;\n    }\n  }\n  else {\n    tempValue1 = secondValue - 1;\n    if (0xffffff < firstValue) {\n      tempValue1 = firstValue & 1;\n      firstValue = firstValue >> 1;\n      tempValue2 = (uint)(tempValue1 != 0) << 0x1f | tempValue2 >> 1;\n      tempValue1 = secondValue;\n      if (0xfd < secondValue) goto LAB_08000c12;\n    }\n  }\n  firstValue = firstValue + tempValue1 * 0x800000 + (uint)(0x7fffffff < tempValue2);\n  if (tempValue2 == 0x80000000) {\n    firstValue = firstValue & 0xfffffffe;\n  }\n  return firstValue | inputValue;\n}\n\n",
            "renaming": {
                "FUN_08000ad8": "calculate_floating_point_08000ad8",
                "param_1": "inputValue",
                "param_2": "inputFlag",
                "param_3": "tempVar",
                "param_4": "result",
                "iVar1": "firstHalf",
                "iVar2": "secondHalf",
                "uVar3": "tempValue1",
                "uVar4": "tempValue2",
                "uVar5": "firstValue",
                "uVar6": "secondValue",
                "uVar7": "difference",
                "bVar8": "isEqual"
            },
            "calling": [
                "FUN_0800426c",
                "FUN_08002ee8",
                "FUN_08002d88",
                "FUN_08003330",
                "FUN_0800483c",
                "FUN_08002bf0",
                "FUN_08002ec0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000adc": {
            "entrypoint": "0x08000adc",
            "current_name": "calculate_floating_point_08000adc",
            "code": "\nuint calculateFloatingPoint_08000adc(uint inputValue1,uint inputValue2,undefined4 roundingMode,uint precision)\n\n{\n  int sign1;\n  int sign2;\n  uint biasedExponent;\n  uint mantissa1;\n  uint mantissa2;\n  uint exponentDifference;\n  bool isZero;\n  \n  mantissa1 = inputValue1 << 1;\n  isZero = mantissa1 == 0;\n  if (!isZero) {\n    precision = inputValue2 << 1;\n    isZero = precision == 0;\n  }\n  if (!isZero) {\n    isZero = mantissa1 == precision;\n  }\n  sign1 = (int)mantissa1 >> 0x18;\n  if (!isZero) {\n    isZero = sign1 == -1;\n  }\n  if (!isZero) {\n    isZero = (int)precision >> 0x18 == -1;\n  }\n  if (isZero) {\n    sign2 = (int)(inputValue2 << 1) >> 0x18;\n    if (sign1 == -1 || sign2 == -1) {\n      mantissa1 = inputValue2;\n      if (sign1 == -1) {\n        mantissa1 = inputValue1;\n      }\n      if (sign1 != -1 || sign2 != -1) {\n        inputValue2 = mantissa1;\n      }\n      isZero = (mantissa1 & 0x7fffff) == 0;\n      if (isZero) {\n        isZero = (inputValue2 & 0x7fffff) == 0;\n      }\n      if (isZero) {\n        isZero = mantissa1 == inputValue2;\n      }\n      if (!isZero) {\n        mantissa1 = mantissa1 | 0x400000;\n      }\n      return mantissa1;\n    }\n    if (((inputValue1 ^ inputValue2) & 0x7fffffff) != 0) {\n      if (mantissa1 == 0) {\n        inputValue1 = inputValue2;\n      }\n      return inputValue1;\n    }\n    if (inputValue1 != inputValue2) {\n      return 0;\n    }\n    if ((mantissa1 & 0xff000000) == 0) {\n      mantissa1 = inputValue1 << 1;\n      if ((inputValue1 & 0x80000000) != 0) {\n        mantissa1 = mantissa1 | 0x80000000;\n      }\n      return mantissa1;\n    }\n    if (mantissa1 < 0xfe000000) {\n      return inputValue1 + 0x800000;\n    }\n    inputValue1 = inputValue1 & 0x80000000;\nLAB_08000c12:\n    return inputValue1 | 0x7f800000;\n  }\n  mantissa1 = mantissa1 >> 0x18;\n  precision = precision >> 0x18;\n  exponentDifference = precision - mantissa1;\n  isZero = exponentDifference != 0;\n  mantissa2 = mantissa1;\n  if (isZero && mantissa1 <= precision) {\n    mantissa2 = mantissa1 + exponentDifference;\n  }\n  if (isZero && mantissa1 <= precision) {\n    inputValue2 = inputValue2 ^ inputValue1;\n  }\n  if (isZero && mantissa1 <= precision) {\n    inputValue1 = inputValue1 ^ inputValue2;\n  }\n  if (isZero && mantissa1 <= precision) {\n    inputValue2 = inputValue2 ^ inputValue1;\n  }\n  if (precision < mantissa1) {\n    exponentDifference = -exponentDifference;\n  }\n  if (0x19 < exponentDifference) {\n    return inputValue1;\n  }\n  mantissa1 = inputValue1 & 0xffffff | 0x800000;\n  if ((inputValue1 & 0x80000000) != 0) {\n    mantissa1 = -mantissa1;\n  }\n  biasedExponent = inputValue2 & 0xffffff | 0x800000;\n  if ((inputValue2 & 0x80000000) != 0) {\n    biasedExponent = -biasedExponent;\n  }\n  if (mantissa2 == exponentDifference) {\n    biasedExponent = biasedExponent ^ 0x800000;\n    if (mantissa2 == 0) {\n      mantissa1 = mantissa1 ^ 0x800000;\n      mantissa2 = 1;\n    }\n    else {\n      exponentDifference = exponentDifference - 1;\n    }\n  }\n  mantissa1 = mantissa1 + ((int)biasedExponent >> (exponentDifference & 0xff));\n  biasedExponent = biasedExponent << (0x20 - exponentDifference & 0xff);\n  inputValue1 = mantissa1 & 0x80000000;\n  if ((int)mantissa1 < 0) {\n    isZero = biasedExponent != 0;\n    biasedExponent = -biasedExponent;\n    mantissa1 = -mantissa1 - (uint)isZero;\n  }\n  if (mantissa1 < 0x800000) {\n    exponentDifference = biasedExponent & 0x80000000;\n    biasedExponent = biasedExponent << 1;\n    mantissa1 = mantissa1 * 2 + (uint)(exponentDifference != 0);\n    exponentDifference = mantissa2 - 2;\n    if ((mantissa1 & 0x800000) == 0) {\n      mantissa2 = LZCOUNT(mantissa1) - 8;\n      mantissa1 = mantissa1 << (mantissa2 & 0xff);\n      if ((int)exponentDifference < (int)mantissa2) {\n        mantissa1 = mantissa1 >> (-(exponentDifference - mantissa2) & 0xff);\n      }\n      else {\n        mantissa1 = mantissa1 + (exponentDifference - mantissa2) * 0x800000;\n      }\n      return mantissa1 | inputValue1;\n    }\n  }\n  else {\n    exponentDifference = mantissa2 - 1;\n    if (0xffffff < mantissa1) {\n      exponentDifference = mantissa1 & 1;\n      mantissa1 = mantissa1 >> 1;\n      biasedExponent = (uint)(exponentDifference != 0) << 0x1f | biasedExponent >> 1;\n      exponentDifference = mantissa2;\n      if (0xfd < mantissa2) goto LAB_08000c12;\n    }\n  }\n  mantissa1 = mantissa1 + exponentDifference * 0x800000 + (uint)(0x7fffffff < biasedExponent);\n  if (biasedExponent == 0x80000000) {\n    mantissa1 = mantissa1 & 0xfffffffe;\n  }\n  return mantissa1 | inputValue1;\n}\n\n",
            "renaming": {
                "FUN_08000adc": "calculate_floating_point_08000adc",
                "param_1": "inputValue1",
                "param_2": "inputValue2",
                "param_3": "roundingMode",
                "param_4": "precision",
                "iVar1": "sign1",
                "iVar2": "sign2",
                "uVar3": "biasedExponent",
                "uVar4": "mantissa1",
                "uVar5": "mantissa2",
                "uVar6": "exponentDifference",
                "bVar7": "isZero"
            },
            "calling": [
                "FUN_0800426c",
                "FUN_08004a84",
                "FUN_08002ee8",
                "FUN_0800411c",
                "FUN_08002cb0",
                "FUN_08003330",
                "FUN_0800483c",
                "FUN_08002ec0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000c3c": {
            "entrypoint": "0x08000c3c",
            "current_name": "calculate_modified_value_08000c3c",
            "code": "\nuint calculateModifiedValue_08000c3c(uint inputValue)\n\n{\n  uint leadingZeroCount;\n  uint shiftAmount;\n  int intermediateValue;\n  uint shiftedFlag;\n  \n  if (inputValue == 0) {\n    return 0;\n  }\n  leadingZeroCount = LZCOUNT(inputValue);\n  shiftAmount = leadingZeroCount - 8;\n  intermediateValue = shiftAmount * -0x800000 + 0x4a800000;\n  if (7 < leadingZeroCount) {\n    shiftedFlag = 0 << (shiftAmount & 0xff);\n    leadingZeroCount = intermediateValue + (inputValue << (shiftAmount & 0xff)) +\n            (0U >> (0x20 - shiftAmount & 0xff)) + (uint)(0x7fffffff < shiftedFlag);\n    if (shiftedFlag == 0x80000000) {\n      leadingZeroCount = leadingZeroCount & 0xfffffffe;\n    }\n    return leadingZeroCount;\n  }\n  shiftAmount = inputValue << leadingZeroCount + 0x18;\n  leadingZeroCount = intermediateValue + ((inputValue >> (0x20 - (leadingZeroCount + 0x18) & 0xff)) - ((int)shiftAmount >> 0x1f));\n  if ((shiftAmount & 0x7fffffff) == 0) {\n    leadingZeroCount = leadingZeroCount & ~(shiftAmount >> 0x1f);\n  }\n  return leadingZeroCount;\n}\n\n",
            "renaming": {
                "FUN_08000c3c": "calculate_modified_value_08000c3c",
                "param_1": "inputValue",
                "uVar1": "leadingZeroCount",
                "uVar2": "shiftAmount",
                "iVar3": "intermediateValue",
                "uVar4": "shiftedFlag"
            },
            "calling": [
                "FUN_08002f28"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000c44": {
            "entrypoint": "0x08000c44",
            "current_name": "calculate_coefficient_08000c44",
            "code": "\nuint calculateCoefficient_08000c44(uint input)\n\n{\n  uint leadingZeros;\n  uint shiftAmount;\n  uint signBit;\n  int intermediateValue;\n  \n  signBit = input & 0x80000000;\n  if ((int)signBit < 0) {\n    input = -input;\n  }\n  if (input == 0) {\n    return 0;\n  }\n  leadingZeros = LZCOUNT(input);\n  shiftAmount = leadingZeros - 8;\n  intermediateValue = ((signBit | 0x4b000000) - 0x800000) + shiftAmount * -0x800000;\n  if (7 < leadingZeros) {\n    leadingZeros = 0 << (shiftAmount & 0xff);\n    signBit = intermediateValue + (input << (shiftAmount & 0xff)) +\n            (0U >> (0x20 - shiftAmount & 0xff)) + (uint)(0x7fffffff < leadingZeros);\n    if (leadingZeros == 0x80000000) {\n      signBit = signBit & 0xfffffffe;\n    }\n    return signBit;\n  }\n  shiftAmount = input << leadingZeros + 0x18;\n  signBit = intermediateValue + ((input >> (0x20 - (leadingZeros + 0x18) & 0xff)) - ((int)shiftAmount >> 0x1f));\n  if ((shiftAmount & 0x7fffffff) == 0) {\n    signBit = signBit & ~(shiftAmount >> 0x1f);\n  }\n  return signBit;\n}\n\n",
            "renaming": {
                "FUN_08000c44": "calculate_coefficient_08000c44",
                "param_1": "input",
                "uVar1": "leadingZeros",
                "uVar2": "shiftAmount",
                "uVar3": "signBit",
                "iVar4": "intermediateValue"
            },
            "calling": [
                "FUN_08002b48",
                "FUN_0800411c",
                "FUN_08002d88",
                "FUN_08002cb0",
                "FUN_0800483c",
                "FUN_08002bf0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000cec": {
            "entrypoint": "0x08000cec",
            "current_name": "calculate_float_from_integers_08000cec",
            "code": "\nuint calculateFloatFromIntegers_08000cec(uint firstIntParam,uint secondIntParam,undefined4 thirdIntParam,uint fourthIntParam)\n\n{\n  longlong resultValue;\n  uint finalFloat;\n  uint firstShiftedValue;\n  int sumOfShifts;\n  int normalizedSum;\n  uint shiftedResult;\n  int remainingShifts;\n  uint combinedResult;\n  bool isZeroOrNormalized;\n  bool isCarrySet;\n  \n  firstShiftedValue = firstIntParam >> 0x17 & 0xff;\n  isZeroOrNormalized = firstShiftedValue == 0;\n  if (!isZeroOrNormalized) {\n    fourthIntParam = secondIntParam >> 0x17 & 0xff;\n    isZeroOrNormalized = fourthIntParam == 0;\n  }\n  if (!isZeroOrNormalized) {\n    isZeroOrNormalized = firstShiftedValue == 0xff;\n  }\n  if (!isZeroOrNormalized) {\n    isZeroOrNormalized = fourthIntParam == 0xff;\n  }\n  if (isZeroOrNormalized) {\n    fourthIntParam = secondIntParam >> 0x17 & 0xff;\n    if (firstShiftedValue == 0xff || fourthIntParam == 0xff) {\n      isZeroOrNormalized = firstIntParam == 0 || firstIntParam == 0x80000000;\n      finalFloat = secondIntParam;\n      if (firstIntParam != 0 && firstIntParam != 0x80000000) {\n        isZeroOrNormalized = secondIntParam == 0;\n        finalFloat = firstIntParam;\n      }\n      if (!isZeroOrNormalized) {\n        isZeroOrNormalized = secondIntParam == 0x80000000;\n      }\n      combinedResult = finalFloat;\n      if (((isZeroOrNormalized) || ((firstShiftedValue == 0xff && ((finalFloat & 0x7fffff) != 0)))) ||\n         ((fourthIntParam == 0xff && (combinedResult = secondIntParam, (secondIntParam & 0x7fffff) != 0)))) {\n        return combinedResult | 0x7fc00000;\n      }\n      finalFloat = finalFloat ^ secondIntParam;\n      goto LAB_08000e3c;\n    }\n    isZeroOrNormalized = (firstIntParam & 0x7fffffff) == 0;\n    if (!isZeroOrNormalized) {\n      isZeroOrNormalized = (secondIntParam & 0x7fffffff) == 0;\n    }\n    if (isZeroOrNormalized) {\n      return (firstIntParam ^ secondIntParam) & 0x80000000;\n    }\n    isZeroOrNormalized = firstShiftedValue == 0;\n    finalFloat = firstIntParam & 0x80000000;\n    while( true ) {\n      if (isZeroOrNormalized) {\n        firstIntParam = firstIntParam << 1;\n        isZeroOrNormalized = (firstIntParam & 0x800000) == 0;\n      }\n      if (!isZeroOrNormalized) break;\n      firstShiftedValue = firstShiftedValue - 1;\n    }\n    firstIntParam = firstIntParam | finalFloat;\n    isZeroOrNormalized = fourthIntParam == 0;\n    finalFloat = secondIntParam & 0x80000000;\n    while( true ) {\n      if (isZeroOrNormalized) {\n        secondIntParam = secondIntParam << 1;\n        isZeroOrNormalized = (secondIntParam & 0x800000) == 0;\n      }\n      if (!isZeroOrNormalized) break;\n      fourthIntParam = fourthIntParam - 1;\n    }\n    secondIntParam = secondIntParam | finalFloat;\n  }\n  sumOfShifts = firstShiftedValue + fourthIntParam;\n  combinedResult = firstIntParam ^ secondIntParam;\n  firstShiftedValue = firstIntParam << 9;\n  isZeroOrNormalized = firstShiftedValue == 0;\n  if (!isZeroOrNormalized) {\n    secondIntParam = secondIntParam << 9;\n    isZeroOrNormalized = secondIntParam == 0;\n  }\n  if (isZeroOrNormalized) {\n    if (firstShiftedValue == 0) {\n      secondIntParam = secondIntParam << 9;\n    }\n    finalFloat = combinedResult & 0x80000000 | firstIntParam & 0x7fffff | secondIntParam >> 9;\n    isCarrySet = SBORROW4(sumOfShifts,0x7f);\n    normalizedSum = sumOfShifts + -0x7f;\n    isZeroOrNormalized = normalizedSum == 0;\n    remainingShifts = normalizedSum;\n    if (!isZeroOrNormalized && 0x7e < sumOfShifts) {\n      isCarrySet = SBORROW4(0xff,normalizedSum);\n      remainingShifts = 0xff - normalizedSum;\n      isZeroOrNormalized = normalizedSum == 0xff;\n    }\n    if (!isZeroOrNormalized && remainingShifts < 0 == isCarrySet) {\n      finalFloat = finalFloat | normalizedSum * 0x800000;\n    }\n    if (!isZeroOrNormalized && remainingShifts < 0 == isCarrySet) {\n      return finalFloat;\n    }\n    finalFloat = finalFloat | 0x800000;\n    shiftedResult = 0;\n    isCarrySet = SBORROW4(normalizedSum,1);\n    combinedResult = sumOfShifts - 0x80;\n    isZeroOrNormalized = combinedResult == 0;\n    firstShiftedValue = combinedResult;\n  }\n  else {\n    resultValue = (ulonglong)(firstShiftedValue >> 5 | 0x8000000) * (ulonglong)(secondIntParam >> 5 | 0x8000000);\n    shiftedResult = (uint)resultValue;\n    finalFloat = (uint)((ulonglong)resultValue >> 0x20);\n    isZeroOrNormalized = finalFloat < 0x800000;\n    if (isZeroOrNormalized) {\n      finalFloat = finalFloat << 1;\n    }\n    if (isZeroOrNormalized) {\n      finalFloat = finalFloat | shiftedResult >> 0x1f;\n      shiftedResult = shiftedResult << 1;\n    }\n    finalFloat = combinedResult & 0x80000000 | finalFloat;\n    combinedResult = (sumOfShifts + -0x7f) - (uint)isZeroOrNormalized;\n    isCarrySet = SBORROW4(combinedResult,0xfd);\n    isZeroOrNormalized = combinedResult == 0xfd;\n    firstShiftedValue = combinedResult - 0xfd;\n    if (combinedResult < 0xfe) {\n      finalFloat = finalFloat + combinedResult * 0x800000 + (uint)(0x7fffffff < shiftedResult);\n      if (shiftedResult == 0x80000000) {\n        finalFloat = finalFloat & 0xfffffffe;\n      }\n      return finalFloat;\n    }\n  }\n  if (isZeroOrNormalized || (int)firstShiftedValue < 0 != isCarrySet) {\n    isZeroOrNormalized = (int)(combinedResult + 0x19) < 0;\n    if (combinedResult == 0xffffffe7 || isZeroOrNormalized != SCARRY4(combinedResult,0x19)) {\n      finalFloat = finalFloat & 0x80000000;\n    }\n    if (combinedResult != 0xffffffe7 && isZeroOrNormalized == SCARRY4(combinedResult,0x19)) {\n      firstShiftedValue = (finalFloat << 1) >> (-combinedResult & 0xff);\n      combinedResult = finalFloat << (combinedResult + 0x20 & 0xff);\n      firstShiftedValue = ((uint)((finalFloat & 0x80000000) != 0) << 0x1f | firstShiftedValue >> 1) + (uint)((byte)firstShiftedValue & 1);\n      if ((shiftedResult | combinedResult << 1) == 0) {\n        firstShiftedValue = firstShiftedValue & ~(combinedResult >> 0x1f);\n      }\n      return firstShiftedValue;\n    }\n    return finalFloat;\n  }\nLAB_08000e3c:\n  return finalFloat & 0x80000000 | 0x7f800000;\n}\n\n",
            "renaming": {
                "FUN_08000cec": "calculate_float_from_integers_08000cec",
                "param_1": "firstIntParam",
                "param_2": "secondIntParam",
                "param_3": "thirdIntParam",
                "param_4": "fourthIntParam",
                "lVar1": "resultValue",
                "uVar2": "finalFloat",
                "uVar3": "firstShiftedValue",
                "iVar4": "sumOfShifts",
                "iVar5": "normalizedSum",
                "uVar6": "shiftedResult",
                "iVar7": "remainingShifts",
                "uVar8": "combinedResult",
                "bVar9": "isZeroOrNormalized",
                "bVar10": "isCarrySet"
            },
            "calling": [
                "FUN_08004a30",
                "FUN_08002b48",
                "FUN_08004a84",
                "FUN_08002d88",
                "FUN_08002cb0",
                "FUN_08003330",
                "FUN_0800483c",
                "FUN_08002f28",
                "FUN_08002bf0",
                "FUN_08002ec0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000e54": {
            "entrypoint": "0x08000e54",
            "current_name": "calculate_float_from_int_08000e54",
            "code": "\nuint calculateFloatFromInt_08000e54(uint integerPart,uint fractionPart,undefined4 param3,uint param4)\n\n{\n  uint shiftedFractionPart;\n  uint shiftedIntegerPart;\n  int difference;\n  uint value;\n  int sum;\n  uint result;\n  bool condition1;\n  bool condition2;\n  bool condition3;\n  \n  shiftedIntegerPart = integerPart >> 0x17 & 0xff;\n  condition1 = shiftedIntegerPart == 0;\n  if (!condition1) {\n    param4 = fractionPart >> 0x17 & 0xff;\n    condition1 = param4 == 0;\n  }\n  if (!condition1) {\n    condition1 = shiftedIntegerPart == 0xff;\n  }\n  if (!condition1) {\n    condition1 = param4 == 0xff;\n  }\n  if (condition1) {\n    param4 = fractionPart >> 0x17 & 0xff;\n    result = integerPart;\n    if (shiftedIntegerPart == 0xff) {\n      if (((integerPart & 0x7fffff) != 0) || (result = fractionPart, param4 == 0xff)) {\nLAB_08000e4a:\n        return result | 0x7fc00000;\n      }\n    }\n    else {\n      if (param4 == 0xff) {\n        result = fractionPart;\n        if ((fractionPart & 0x7fffff) == 0) {\nLAB_08000e00:\n          return (integerPart ^ fractionPart) & 0x80000000;\n        }\n        goto LAB_08000e4a;\n      }\n      condition1 = (integerPart & 0x7fffffff) == 0;\n      if (!condition1) {\n        condition1 = (fractionPart & 0x7fffffff) == 0;\n      }\n      if (!condition1) {\n        condition1 = shiftedIntegerPart == 0;\n        result = integerPart & 0x80000000;\n        while( true ) {\n          if (condition1) {\n            integerPart = integerPart << 1;\n            condition1 = (integerPart & 0x800000) == 0;\n          }\n          if (!condition1) break;\n          shiftedIntegerPart = shiftedIntegerPart - 1;\n        }\n        integerPart = integerPart | result;\n        condition1 = param4 == 0;\n        result = fractionPart & 0x80000000;\n        while( true ) {\n          if (condition1) {\n            fractionPart = fractionPart << 1;\n            condition1 = (fractionPart & 0x800000) == 0;\n          }\n          if (!condition1) break;\n          param4 = param4 - 1;\n        }\n        fractionPart = fractionPart | result;\n        goto LAB_08000e6c;\n      }\n      if ((integerPart & 0x7fffffff) == 0) {\n        if ((fractionPart & 0x7fffffff) != 0) goto LAB_08000e00;\n        goto LAB_08000e4a;\n      }\n    }\n    integerPart = integerPart ^ fractionPart;\n  }\n  else {\nLAB_08000e6c:\n    difference = shiftedIntegerPart - param4;\n    if (fractionPart << 9 == 0) {\n      integerPart = (integerPart ^ fractionPart) & 0x80000000 | integerPart & 0x7fffff;\n      condition3 = SCARRY4(difference,0x7f);\n      sum = difference + 0x7f;\n      condition1 = sum < 0;\n      condition2 = sum == 0;\n      if (!condition2 && condition1 == condition3) {\n        condition3 = SBORROW4(0xff,sum);\n        condition1 = 0xff - sum < 0;\n        condition2 = sum == 0xff;\n      }\n      if (!condition2 && condition1 == condition3) {\n        integerPart = integerPart | sum * 0x800000;\n      }\n      if (!condition2 && condition1 == condition3) {\n        return integerPart;\n      }\n      integerPart = integerPart | 0x800000;\n      shiftedIntegerPart = 0;\n      condition2 = SBORROW4(sum,1);\n      value = difference + 0x7e;\n      condition1 = value == 0;\n      result = value;\n    }\n    else {\n      shiftedFractionPart = (fractionPart << 9) >> 4 | 0x10000000;\n      shiftedIntegerPart = (integerPart << 9) >> 4 | 0x10000000;\n      integerPart = (integerPart ^ fractionPart) & 0x80000000;\n      condition1 = shiftedFractionPart <= shiftedIntegerPart;\n      if (!condition1) {\n        shiftedIntegerPart = shiftedIntegerPart << 1;\n      }\n      value = difference + 0x7d + (uint)condition1;\n      result = 0x800000;\n      do {\n        if (shiftedFractionPart <= shiftedIntegerPart) {\n          shiftedIntegerPart = shiftedIntegerPart - shiftedFractionPart;\n          integerPart = integerPart | result;\n        }\n        condition1 = shiftedFractionPart >> 1 <= shiftedIntegerPart;\n        if (condition1) {\n          shiftedIntegerPart = shiftedIntegerPart - (shiftedFractionPart >> 1);\n        }\n        if (condition1) {\n          integerPart = integerPart | result >> 1;\n        }\n        condition1 = shiftedFractionPart >> 2 <= shiftedIntegerPart;\n        if (condition1) {\n          shiftedIntegerPart = shiftedIntegerPart - (shiftedFractionPart >> 2);\n        }\n        if (condition1) {\n          integerPart = integerPart | result >> 2;\n        }\n        condition1 = shiftedFractionPart >> 3 <= shiftedIntegerPart;\n        if (condition1) {\n          shiftedIntegerPart = shiftedIntegerPart - (shiftedFractionPart >> 3);\n        }\n        if (condition1) {\n          integerPart = integerPart | result >> 3;\n        }\n        shiftedIntegerPart = shiftedIntegerPart * 0x10;\n        condition1 = shiftedIntegerPart == 0;\n        if (!condition1) {\n          result = result >> 4;\n          condition1 = result == 0;\n        }\n      } while (!condition1);\n      condition2 = SBORROW4(value,0xfd);\n      condition1 = value == 0xfd;\n      result = value - 0xfd;\n      if (value < 0xfe) {\n        integerPart = integerPart + value * 0x800000 + (uint)(shiftedFractionPart <= shiftedIntegerPart);\n        if (shiftedIntegerPart - shiftedFractionPart == 0) {\n          integerPart = integerPart & 0xfffffffe;\n        }\n        return integerPart;\n      }\n    }\n    if (condition1 || (int)result < 0 != condition2) {\n      condition1 = (int)(value + 0x19) < 0;\n      if (value == 0xffffffe7 || condition1 != SCARRY4(value,0x19)) {\n        integerPart = integerPart & 0x80000000;\n      }\n      if (value == 0xffffffe7 || condition1 != SCARRY4(value,0x19)) {\n        return integerPart;\n      }\n      result = (integerPart << 1) >> (-value & 0xff);\n      value = integerPart << (value + 0x20 & 0xff);\n      result = ((uint)((integerPart & 0x80000000) != 0) << 0x1f | result >> 1) + (uint)((byte)result & 1);\n      if ((shiftedIntegerPart | value << 1) == 0) {\n        result = result & ~(value >> 0x1f);\n      }\n      return result;\n    }\n  }\n  return integerPart & 0x80000000 | 0x7f800000;\n}\n\n",
            "renaming": {
                "FUN_08000e54": "calculate_float_from_int_08000e54",
                "param_1": "integerPart",
                "param_2": "fractionPart",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "shiftedFractionPart",
                "uVar2": "shiftedIntegerPart",
                "iVar3": "difference",
                "uVar4": "value",
                "iVar5": "sum",
                "uVar6": "result",
                "bVar7": "condition1",
                "bVar8": "condition2",
                "bVar9": "condition3"
            },
            "calling": [
                "FUN_0800411c",
                "FUN_08003330",
                "FUN_0800483c",
                "FUN_08002f28"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000f9c": {
            "entrypoint": "0x08000f9c",
            "current_name": "calculate_operation_result_08000f9c",
            "code": "\nuint calculate_operation_result_08000f9c(uint input_1,uint input_2)\n\n{\n  bool is_negative_result;\n  uint double_input_1;\n  uint double_input_2;\n  uint combined_inputs;\n  bool is_combined_zero;\n  \n  double_input_1 = input_1 * 2;\n  double_input_2 = input_2 * 2;\n  if (((int)double_input_1 >> 0x18 == -1 || (int)double_input_2 >> 0x18 == -1) &&\n     ((((int)double_input_1 >> 0x18 == -1 && ((input_1 & 0x7fffff) != 0)) ||\n      (((int)double_input_2 >> 0x18 == -1 && ((input_2 & 0x7fffff) != 0)))))) {\n    result 1;\n  }\n  combined_inputs = double_input_1 | input_2 & 0x7fffffff;\n  is_combined_zero = combined_inputs == 0;\n  if (!is_combined_zero) {\n    combined_inputs = input_1 ^ input_2;\n    is_combined_zero = combined_inputs == 0;\n  }\n  is_negative_result = -1 < (int)combined_inputs;\n  if (is_negative_result) {\n    input_1 = double_input_1 + input_2 * -2;\n    is_combined_zero = input_1 == 0;\n  }\n  if ((is_negative_result && double_input_2 <= double_input_1) && !is_combined_zero) {\n    input_1 = (int)input_2 >> 0x1f;\n  }\n  if (!is_negative_result || double_input_2 > double_input_1) {\n    input_1 = ~((int)input_2 >> 0x1f);\n  }\n  if (!is_combined_zero) {\n    input_1 = input_1 | 1;\n  }\n  result input_1;\n}\n\n",
            "renaming": {
                "FUN_08000f9c": "calculate_operation_result_08000f9c",
                "param_1": "input_1",
                "param_2": "input_2",
                "bVar1": "is_negative_result",
                "uVar2": "double_input_1",
                "uVar3": "double_input_2",
                "uVar4": "combined_inputs",
                "bVar5": "is_combined_zero",
                "return": "result"
            },
            "calling": [
                "FUN_08001004"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000ffc": {
            "entrypoint": "0x08000ffc",
            "current_name": "execute_function_08000ffc",
            "code": "\nvoid executeFunction_08000ffc(undefined4 inputParameter,undefined4 outputParameter)\n\n{\n  FUN_08001004(outputParameter,inputParameter);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000ffc": "execute_function_08000ffc",
                "param_1": "inputParameter",
                "param_2": "outputParameter"
            },
            "calling": [
                "FUN_08001050",
                "FUN_08001064"
            ],
            "called": [
                "FUN_08001004"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001004": {
            "entrypoint": "0x08001004",
            "current_name": "concatenate_params_08001004",
            "code": "\nundefined8 concatenateParams_08001004(undefined4 firstParam,undefined4 secondParam)\n\n{\n  FUN_08000f9c();\n  return CONCAT44(secondParam,firstParam);\n}\n\n",
            "renaming": {
                "FUN_08001004": "concatenate_params_08001004",
                "param_1": "firstParam",
                "param_2": "secondParam"
            },
            "calling": [
                "FUN_08001014",
                "FUN_08001028",
                "FUN_08000ffc"
            ],
            "called": [
                "FUN_08000f9c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001014": {
            "entrypoint": "0x08001014",
            "current_name": "is_nonzero_character_present_08001014",
            "code": "\nbool is_nonzero_character_present_08001014(void)\n\n{\n  char input_character;\n  \n  FUN_08001004();\n  return input_character != '\\0';\n}\n\n",
            "renaming": {
                "FUN_08001014": "is_nonzero_character_present_08001014",
                "in_ZR": "input_character"
            },
            "calling": [
                "FUN_08003330"
            ],
            "called": [
                "FUN_08001004"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001028": {
            "entrypoint": "0x08001028",
            "current_name": "is_string_empty_08001028",
            "code": "\nbool is_string_empty_08001028(void)\n\n{\n  char input_character;\n  \n  FUN_08001004();\n  return input_character == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08001028": "is_string_empty_08001028",
                "in_CY": "input_character"
            },
            "calling": [
                "FUN_08004a84",
                "FUN_08002ee8",
                "FUN_0800483c"
            ],
            "called": [
                "FUN_08001004"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001050": {
            "entrypoint": "0x08001050",
            "current_name": "check_cy_and_zr_08001050",
            "code": "\nbool check_CY_and_ZR_08001050(void)\n\n{\n  undefined zero_flag;\n  undefined carry_flag;\n  \n  FUN_08000ffc();\n  return !(bool)carry_flag || (bool)zero_flag;\n}\n\n",
            "renaming": {
                "FUN_08001050": "check_cy_and_zr_08001050",
                "in_CY": "carry_flag",
                "in_ZR": "zero_flag"
            },
            "calling": [
                "FUN_08002ee8"
            ],
            "called": [
                "FUN_08000ffc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001064": {
            "entrypoint": "0x08001064",
            "current_name": "is_null_terminated_08001064",
            "code": "\nbool is_null_terminated_08001064(void)\n\n{\n  char input_char;\n  \n  FUN_08000ffc();\n  return input_char == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08001064": "is_null_terminated_08001064",
                "in_CY": "input_char"
            },
            "calling": [
                "FUN_08004a84",
                "FUN_0800483c"
            ],
            "called": [
                "FUN_08000ffc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001078": {
            "entrypoint": "0x08001078",
            "current_name": "extract_and_convert_08001078",
            "code": "\nuint extract_and_convert_08001078(uint input)\n\n{\n  uint shifted_input;\n  uint shifted_difference;\n  \n  if (input << 1 < 0x7f000000) {\n    return 0;\n  }\n  shifted_input = (input << 1) >> 0x18;\n  shifted_difference = 0x9e - shifted_input;\n  if (shifted_input < 0x9f && shifted_difference != 0) {\n    shifted_input = (input << 8 | 0x80000000) >> (shifted_difference & 0xff);\n    if ((input & 0x80000000) != 0) {\n      shifted_input = -shifted_input;\n    }\n    return shifted_input;\n  }\n  if ((shifted_difference == 0xffffff9f) && ((input & 0x7fffff) != 0)) {\n    return 0;\n  }\n  input = input & 0x80000000;\n  if (input == 0) {\n    input = 0x7fffffff;\n  }\n  return input;\n}\n\n",
            "renaming": {
                "FUN_08001078": "extract_and_convert_08001078",
                "param_1": "input",
                "uVar1": "shifted_input",
                "uVar2": "shifted_difference"
            },
            "calling": [
                "FUN_0800426c",
                "FUN_0800411c",
                "FUN_08002f28"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080010c4": {
            "entrypoint": "0x080010c4",
            "current_name": "check_number_range_080010c4",
            "code": "\nuint check_number_range_080010c4(uint input_number)\n\n{\n  uint shifted_value;\n  \n  if (((input_number & 0x80000000) != 0) || (input_number << 1 < 0x7f000000)) {\n    return 0;\n  }\n  shifted_value = 0x9e - ((input_number << 1) >> 0x18);\n  if (-1 < (int)shifted_value) {\n    return (input_number << 8 | 0x80000000) >> (shifted_value & 0xff);\n  }\n  if ((shifted_value == 0xffffff9f) && ((input_number & 0x7fffff) != 0)) {\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080010c4": "check_number_range_080010c4",
                "param_1": "input_number",
                "uVar1": "shifted_value"
            },
            "calling": [
                "FUN_08004a84"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001104": {
            "entrypoint": "0x08001104",
            "current_name": "initialize_system_08001104",
            "code": "\nundefined4 initializeSystem_08001104(undefined4 inputData)\n\n{\n  uint currentTime;\n  \n  currentTime = FUN_08002214();\n  FUN_08001214(currentTime / 1000);\n  FUN_08001194(0xffffffff,inputData,0);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001104": "initialize_system_08001104",
                "param_1": "inputData",
                "uVar1": "currentTime"
            },
            "calling": [
                "FUN_0800209c",
                "FUN_08001128"
            ],
            "called": [
                "FUN_08002214",
                "FUN_08001194",
                "FUN_08001214"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001128": {
            "entrypoint": "0x08001128",
            "current_name": "initialize_memory_08001128",
            "code": "\n\n\nundefined4 initializeMemory_08001128(void)\n\n{\n  _DAT_40022000 = _DAT_40022000 | 0x10;\n  FUN_08001170(3);\n  FUN_08001104(0);\n  FUN_08004ccc();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001128": "initialize_memory_08001128"
            },
            "calling": [
                "FUN_0800458c"
            ],
            "called": [
                "FUN_08001170",
                "FUN_08001104",
                "FUN_08004ccc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800114c": {
            "entrypoint": "0x0800114c",
            "current_name": "increment_counter_0800114c",
            "code": "\nvoid incrementCounter_0800114c(void)\n\n{\n  DAT_20000244 = DAT_20000244 + 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800114c": "increment_counter_0800114c"
            },
            "calling": [
                "FUN_080041ae"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800115c": {
            "entrypoint": "0x0800115c",
            "current_name": "get_data_0800115c",
            "code": "\nundefined4 get_data_0800115c(void)\n\n{\n  return DAT_20000244;\n}\n\n",
            "renaming": {
                "FUN_0800115c": "get_data_0800115c"
            },
            "calling": [
                "FUN_08001530",
                "thunk_FUN_0800115c",
                "FUN_08001b58",
                "FUN_08004c18",
                "FUN_0800209c",
                "FUN_08001828",
                "FUN_08001938",
                "FUN_080014e2",
                "thunk_FUN_0800115c",
                "FUN_080015e8",
                "FUN_080016f4",
                "FUN_08001460"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001168": {
            "entrypoint": "0x08001168",
            "current_name": "FUNC_08001168",
            "code": "\nvoid FUNC_08001168(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001168": "FUNC_08001168"
            },
            "calling": [
                "FUN_08001b58",
                "thunk_FUN_08001168"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08001170": {
            "entrypoint": "0x08001170",
            "current_name": "configure_memory_protection_08001170",
            "code": "\n\n\nvoid configureMemoryProtection_08001170(uint inputValue)\n\n{\n  _DAT_e000ed0c = _DAT_e000ed0c & 0xf8ff | 0x5fa0000 | (inputValue & 7) << 8;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001170": "configure_memory_protection_08001170",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08001128",
                "FUN_08004ccc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001194": {
            "entrypoint": "0x08001194",
            "current_name": "update_memory_value_08001194",
            "code": "\n\n\nvoid updateMemoryValue_08001194(uint address,uint sourceData,uint destData)\n\n{\n  undefined shiftedData;\n  uint masksCount;\n  uint shiftAmount;\n  uint totalShift;\n  \n  shiftAmount = (uint)(_DAT_e000ed0c << 0x15) >> 0x1d;\n  masksCount = 7 - shiftAmount;\n  totalShift = shiftAmount + 4;\n  if (3 < masksCount) {\n    masksCount = 4;\n  }\n  if (totalShift < 7) {\n    shiftAmount = 0;\n  }\n  masksCount = (1 << (masksCount & 0xff)) - 1;\n  if (6 < totalShift) {\n    shiftAmount = shiftAmount - 3;\n  }\n  shiftedData = (undefined)\n          ((destData & (1 << (shiftAmount & 0xff)) - 1U | (sourceData & masksCount) << (shiftAmount & 0xff)) << 4);\n  if (-1 < (int)address) {\n    shiftAmount = address + 0xe000e100;\n  }\n  else {\n    masksCount = 0xe000ed14;\n    shiftAmount = address & 0xf;\n  }\n  if (-1 < (int)address) {\n    *(undefined *)(shiftAmount + 0x300) = shiftedData;\n  }\n  else {\n    *(undefined *)(masksCount + shiftAmount) = shiftedData;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001194": "update_memory_value_08001194",
                "param_1": "address",
                "param_2": "sourceData",
                "param_3": "destData",
                "uVar1": "shiftedData",
                "uVar2": "masksCount",
                "uVar3": "shiftAmount",
                "uVar4": "totalShift"
            },
            "calling": [
                "FUN_08004e7c",
                "FUN_08001104",
                "FUN_08004514",
                "FUN_08004ccc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080011fc": {
            "entrypoint": "0x080011fc",
            "current_name": "set_bit_in_array_080011fc",
            "code": "\nvoid setBitInArray_080011fc(uint bitIndex)\n\n{\n  *(int *)((bitIndex >> 5) * 4 + -0x1fff1f00) = 1 << (bitIndex & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080011fc": "set_bit_in_array_080011fc",
                "param_1": "bitIndex"
            },
            "calling": [
                "FUN_08004e7c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001214": {
            "entrypoint": "0x08001214",
            "current_name": "validate_and_set_value_08001214",
            "code": "\n\n\nundefined4 validate_and_set_value_08001214(int input_value)\n\n{\n  if (input_value - 1U < 0x1000000) {\n    _DAT_e000e014 = input_value - 1U;\n    DAT_e000ed23 = 0xf0;\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08001214": "validate_and_set_value_08001214",
                "param_1": "input_value"
            },
            "calling": [
                "FUN_08001104",
                "FUN_08004514"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001240": {
            "entrypoint": "0x08001240",
            "current_name": "update_flag_08001240",
            "code": "\n\n\nvoid updateFlag_08001240(int value)\n\n{\n  if (value == 4) {\n    _DAT_e000e010 = _DAT_e000e010 | 4;\n  }\n  else {\n    _DAT_e000e010 = _DAT_e000e010 & 0xfffffffb;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001240": "update_flag_08001240",
                "param_1": "value"
            },
            "calling": [
                "FUN_08004514"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001258": {
            "entrypoint": "0x08001258",
            "current_name": "FUNC_08001258",
            "code": "\nvoid FUNC_08001258(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001258": "FUNC_08001258"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08001264": {
            "entrypoint": "0x08001264",
            "current_name": "update_param_array_08001264",
            "code": "\n\n\nvoid updateParamArray_08001264(uint *oldParamArray,uint *newParamArray)\n\n{\n  uint updatedValue1;\n  uint updatedValue2;\n  uint updatedValue3;\n  int indexVar1;\n  uint iterationVar1;\n  uint tempVar1;\n  uint tempVar2;\n  uint *tempPointer1;\n  int indexVar2;\n  \n  updatedValue1 = 0;\n  iterationVar1 = 0;\n  do {\n    tempVar1 = 1 << (iterationVar1 & 0xff);\n    updatedValue2 = tempVar1 & *newParamArray;\n    if (tempVar1 == updatedValue2) {\n      updatedValue3 = newParamArray[1];\n      if (updatedValue3 == 0x12) {\n        updatedValue1 = newParamArray[3] + 0xc;\n      }\n      else if (updatedValue3 < 0x13) {\n        if (updatedValue3 == 2) {\n          updatedValue1 = newParamArray[3] + 8;\n        }\n        else if (updatedValue3 < 3) {\n          if (updatedValue3 == 0) goto LAB_080013be;\n          if (updatedValue3 == 1) {\n            updatedValue1 = newParamArray[3];\n          }\n        }\n        else if (updatedValue3 == 3) {\n          updatedValue1 = 0;\n        }\n        else if (updatedValue3 == 0x11) {\n          updatedValue1 = newParamArray[3] + 4;\n        }\n      }\n      else {\n        if (updatedValue3 != 0x10210000) {\n          if (updatedValue3 < 0x10210001) {\n            if (updatedValue3 != 0x10110000) {\n              tempVar2 = 0x10120000;\nLAB_080013b8:\n              if (updatedValue3 != tempVar2) goto LAB_080012a8;\n            }\n          }\n          else if ((updatedValue3 != 0x10310000) && (updatedValue3 != 0x10320000)) {\n            tempVar2 = 0x10220000;\n            goto LAB_080013b8;\n          }\n        }\nLAB_080013be:\n        updatedValue1 = newParamArray[2];\n        if (updatedValue1 == 0) {\n          updatedValue1 = 4;\n        }\n        else {\n          if (updatedValue1 == 1) {\n            oldParamArray[4] = tempVar1;\n          }\n          if (updatedValue1 != 1) {\n            oldParamArray[5] = tempVar1;\n          }\n          updatedValue1 = 8;\n        }\n      }\nLAB_080012a8:\n      if (updatedValue2 < 0x100) {\n        tempVar1 = *oldParamArray;\n        updatedValue3 = iterationVar1 << 2;\n        tempPointer1 = oldParamArray;\n      }\n      else {\n        tempVar1 = oldParamArray[1];\n        updatedValue3 = (iterationVar1 + 0x3ffffff8) * 4;\n      }\n      if (0xff < updatedValue2) {\n        tempPointer1 = oldParamArray + 1;\n      }\n      *tempPointer1 = tempVar1 & ~(0xf << (updatedValue3 & 0xff)) | updatedValue1 << (updatedValue3 & 0xff);\n      tempPointer1 = (uint *)newParamArray[1];\n      if (((uint)tempPointer1 & 0x10000000) != 0) {\n        _DAT_40021018 = _DAT_40021018 | 1;\n        indexVar2 = (iterationVar1 & 3) << 2;\n        if (oldParamArray == (uint *)0x40010800) {\n          indexVar1 = 0;\n        }\n        else if (oldParamArray == (uint *)0x40010c00) {\n          indexVar1 = 1;\n        }\n        else if (oldParamArray == (uint *)0x40011000) {\n          indexVar1 = 2;\n        }\n        else if (oldParamArray == (uint *)0x40011400) {\n          indexVar1 = 3;\n        }\n        else {\n          indexVar1 = 4;\n        }\n        *(uint *)((iterationVar1 & 0xfffffffc) + 0x40010008) =\n             indexVar1 << indexVar2 | *(uint *)((iterationVar1 & 0xfffffffc) + 0x40010008) & ~(0xf << indexVar2);\n        if (((uint)tempPointer1 & 0x10000) == 0) {\n          _DAT_40010400 = _DAT_40010400 & ~updatedValue2;\n        }\n        else {\n          _DAT_40010400 = _DAT_40010400 | updatedValue2;\n        }\n        if (((uint)tempPointer1 & 0x20000) == 0) {\n          _DAT_40010404 = _DAT_40010404 & ~updatedValue2;\n        }\n        else {\n          _DAT_40010404 = _DAT_40010404 | updatedValue2;\n        }\n        if (((uint)tempPointer1 & 0x100000) == 0) {\n          _DAT_40010408 = _DAT_40010408 & ~updatedValue2;\n        }\n        else {\n          _DAT_40010408 = _DAT_40010408 | updatedValue2;\n        }\n        if (((uint)tempPointer1 & 0x200000) == 0) {\n          _DAT_4001040c = _DAT_4001040c & ~updatedValue2;\n        }\n        else {\n          _DAT_4001040c = updatedValue2 | _DAT_4001040c;\n        }\n      }\n    }\n    iterationVar1 = iterationVar1 + 1;\n    if (iterationVar1 == 0x10) {\n      return;\n    }\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08001264": "update_param_array_08001264",
                "param_1": "oldParamArray",
                "param_2": "newParamArray",
                "uVar1": "updatedValue1",
                "uVar2": "updatedValue2",
                "uVar3": "updatedValue3",
                "iVar4": "indexVar1",
                "uVar5": "iterationVar1",
                "uVar6": "tempVar1",
                "uVar7": "tempVar2",
                "unaff_r10": "tempPointer1",
                "iVar8": "indexVar2"
            },
            "calling": [
                "FUN_08004e14",
                "FUN_08004e7c",
                "FUN_08004d48",
                "FUN_0800458c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001424": {
            "entrypoint": "0x08001424",
            "current_name": "set_param_08001424",
            "code": "\nvoid setParam_08001424(int baseAddress,int value,int flag)\n\n{\n  if (flag == 0) {\n    value = value << 0x10;\n  }\n  *(int *)(baseAddress + 0x10) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001424": "set_param_08001424",
                "param_1": "baseAddress",
                "param_2": "value",
                "param_3": "flag"
            },
            "calling": [
                "FUN_08004490",
                "FUN_08003f3c",
                "FUN_0800458c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800142e": {
            "entrypoint": "0x0800142e",
            "current_name": "xor_assign_0800142e",
            "code": "\nvoid xorAssign_0800142e(int baseAddress,uint value)\n\n{\n  *(uint *)(baseAddress + 0xc) = value ^ *(uint *)(baseAddress + 0xc);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800142e": "xor_assign_0800142e",
                "param_1": "baseAddress",
                "param_2": "value"
            },
            "calling": [
                "FUN_08004490"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001436": {
            "entrypoint": "0x08001436",
            "current_name": "check_flag_status_08001436",
            "code": "\nundefined4 checkFlagStatus_08001436(int *flagPtr)\n\n{\n  int flagValue;\n  \n  flagValue = *flagPtr;\n  if ((*(uint *)(flagValue + 0x14) & 0x400) != 0) {\n    *(uint *)(flagValue + 0x14) = *(uint *)(flagValue + 0x14) & 0xfffffbff;\n    flagPtr[0xe] = 4;\n    *(undefined *)((int)flagPtr + 0x35) = 0x20;\n    *(undefined *)(flagPtr + 0xd) = 0;\n    return 1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08001436": "check_flag_status_08001436",
                "param_1": "flagPtr",
                "iVar1": "flagValue"
            },
            "calling": [
                "FUN_080014e2"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001460": {
            "entrypoint": "0x08001460",
            "current_name": "check_parameter_validity_08001460",
            "code": "\nundefined4 checkParameterValidity_08001460(uint **arrayPointer,uint flag,uint timeLimit)\n\n{\n  int result;\n  int currentResult;\n  uint value;\n  uint *currentArray;\n  \n  result = FUN_0800115c();\n  do {\n    currentArray = *arrayPointer;\n    if ((flag << 8) >> 0x18 == 1) {\n      value = currentArray[5];\n    }\n    else {\n      value = currentArray[6];\n    }\n    if ((flag & 0xffff & ~value) == 0) {\n      return 0;\n    }\n    if ((int)(currentArray[5] << 0x15) < 0) {\n      *currentArray = *currentArray | 0x200;\n      currentArray[5] = currentArray[5] & 0xfffffbff;\n      arrayPointer[0xe] = (uint *)0x4;\n      *(undefined *)((int)arrayPointer + 0x35) = 0x20;\n      *(undefined *)(arrayPointer + 0xd) = 0;\n      return 1;\n    }\n  } while ((timeLimit == 0xffffffff) ||\n          ((timeLimit != 0 && (currentResult = FUN_0800115c(), (uint)(currentResult - result) <= timeLimit))));\n  *(undefined *)((int)arrayPointer + 0x35) = 0x20;\n  *(undefined *)(arrayPointer + 0xd) = 0;\n  return 3;\n}\n\n",
            "renaming": {
                "FUN_08001460": "check_parameter_validity_08001460",
                "param_1": "arrayPointer",
                "param_2": "flag",
                "param_3": "timeLimit",
                "iVar1": "result",
                "iVar2": "currentResult",
                "uVar3": "value",
                "puVar4": "currentArray"
            },
            "calling": [
                "FUN_08001530",
                "FUN_080015e8"
            ],
            "called": [
                "FUN_0800115c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080014e2": {
            "entrypoint": "0x080014e2",
            "current_name": "check_status_080014e2",
            "code": "\nundefined4 checkStatus_080014e2(int *arrayPointer,uint size)\n\n{\n  int initialValue;\n  int result;\n  \n  initialValue = FUN_0800115c();\n  while( true ) {\n    if (*(int *)(*arrayPointer + 0x14) << 0x18 < 0) {\n      return 0;\n    }\n    result = FUN_08001436(arrayPointer);\n    if (result != 0) break;\n    if ((size != 0xffffffff) &&\n       ((size == 0 || (result = FUN_0800115c(), size < (uint)(result - initialValue))))) {\n      arrayPointer[0xe] = arrayPointer[0xe] | 0x20;\n      *(undefined *)((int)arrayPointer + 0x35) = 0x20;\n      *(undefined *)(arrayPointer + 0xd) = 0;\n      return 3;\n    }\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080014e2": "check_status_080014e2",
                "param_1": "arrayPointer",
                "param_2": "size",
                "iVar1": "initialValue",
                "iVar2": "result"
            },
            "calling": [
                "FUN_08001530",
                "FUN_08001828",
                "FUN_080015e8"
            ],
            "called": [
                "FUN_0800115c",
                "FUN_08001436"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001530": {
            "entrypoint": "0x08001530",
            "current_name": "update_flags_and_execute_08001530",
            "code": "\nundefined4 updateFlagsAndExecute_08001530(uint **dataPtr,uint value1,uint value2,int condition,uint parameter)\n\n{\n  int startValue;\n  int endValue;\n  uint *currentPtr;\n  uint **dataPtrPtr;\n  uint value1Copy;\n  uint value2Copy;\n  \n  **dataPtr = **dataPtr | 0x100;\n  dataPtrPtr = dataPtr;\n  value1Copy = value1;\n  value2Copy = value2;\n  startValue = FUN_0800115c();\n  do {\n    currentPtr = *dataPtr;\n    do {\n      if ((int)(currentPtr[5] << 0x1f) < 0) {\n        currentPtr[4] = value1 & 0xfe;\n        startValue = FUN_08001460(dataPtr,0x10002,parameter,currentPtr,dataPtrPtr,value1Copy,value2Copy);\n        if (startValue == 0) {\n          startValue = FUN_080014e2(dataPtr,parameter,(*dataPtr)[5],(*dataPtr)[6]);\n          if (startValue == 0) {\n            currentPtr = *dataPtr;\n            if (condition == 1) {\nLAB_080015ca:\n              currentPtr[4] = value2 & 0xff;\n              return 0;\n            }\n            currentPtr[4] = value2 >> 8;\n            startValue = FUN_080014e2(dataPtr,parameter);\n            if (startValue == 0) {\n              currentPtr = *dataPtr;\n              goto LAB_080015ca;\n            }\n          }\n          if (dataPtr[0xe] != (uint *)0x4) {\n            return 3;\n          }\n          **dataPtr = **dataPtr | 0x200;\n        }\n        else if (dataPtr[0xe] != (uint *)0x4) {\n          return 3;\n        }\n        return 1;\n      }\n    } while (parameter == 0xffffffff);\n    if ((parameter == 0) || (endValue = FUN_0800115c(), parameter < (uint)(endValue - startValue))) {\n      *(undefined *)((int)dataPtr + 0x35) = 0x20;\n      *(undefined *)(dataPtr + 0xd) = 0;\n      return 3;\n    }\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08001530": "update_flags_and_execute_08001530",
                "param_1": "dataPtr",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "condition",
                "param_5": "parameter",
                "iVar1": "startValue",
                "iVar2": "endValue",
                "puVar3": "currentPtr",
                "ppuVar4": "dataPtrPtr",
                "uVar5": "value1Copy",
                "uVar6": "value2Copy"
            },
            "calling": [
                "FUN_08001828"
            ],
            "called": [
                "FUN_080014e2",
                "FUN_0800115c",
                "FUN_08001460"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080015e8": {
            "entrypoint": "0x080015e8",
            "current_name": "reverse_binary_080015e8",
            "code": "\nundefined4 reverseBinary_080015e8(uint **pointerArray,uint value1,uint value2,int condition,uint limit)\n\n{\n  int result1;\n  int result2;\n  uint *currentPointer;\n  uint **currentPointerArray;\n  uint valueTemp1;\n  uint valueTemp2;\n  \n  currentPointer = *pointerArray;\n  *currentPointer = *currentPointer | 0x400;\n  *currentPointer = *currentPointer | 0x100;\n  currentPointerArray = pointerArray;\n  valueTemp1 = value1;\n  valueTemp2 = value2;\n  result1 = FUN_0800115c();\nLAB_0800160e:\n  currentPointer = *pointerArray;\n  while (-1 < (int)(currentPointer[5] << 0x1f)) {\n    if (limit != 0xffffffff) goto code_r0x08001658;\n  }\n  currentPointer[4] = value1 & 0xfe;\n  result1 = FUN_08001460(pointerArray,0x10002,limit,currentPointer,currentPointerArray,valueTemp1,valueTemp2);\n  if (result1 != 0) goto LAB_080016ba;\n  result1 = FUN_080014e2(pointerArray,limit,(*pointerArray)[5],(*pointerArray)[6]);\n  if (result1 == 0) {\n    currentPointer = *pointerArray;\n    if (condition != 1) {\n      currentPointer[4] = value2 >> 8;\n      result1 = FUN_080014e2(pointerArray,limit);\n      if (result1 != 0) goto LAB_08001642;\n      currentPointer = *pointerArray;\n    }\n    currentPointer[4] = value2 & 0xff;\n    result1 = FUN_080014e2(pointerArray,limit);\n    if (result1 == 0) {\n      **pointerArray = **pointerArray | 0x100;\n      result1 = FUN_0800115c();\n      do {\n        do {\n          if ((int)((*pointerArray)[5] << 0x1f) < 0) {\n            (*pointerArray)[4] = value1 & 0xff | 1;\n            result1 = FUN_08001460(pointerArray,0x10002,limit);\n            if (result1 == 0) {\n              return 0;\n            }\nLAB_080016ba:\n            if (pointerArray[0xe] != (uint *)0x4) {\n              return 3;\n            }\n            return 1;\n          }\n        } while (limit == 0xffffffff);\n      } while ((limit != 0) && (result2 = FUN_0800115c(), (uint)(result2 - result1) <= limit));\nLAB_0800165a:\n      *(undefined *)((int)pointerArray + 0x35) = 0x20;\n      *(undefined *)(pointerArray + 0xd) = 0;\n      return 3;\n    }\n  }\nLAB_08001642:\n  if (pointerArray[0xe] == (uint *)0x4) {\n    **pointerArray = **pointerArray | 0x200;\n    return 1;\n  }\n  return 3;\ncode_r0x08001658:\n  if ((limit == 0) || (result2 = FUN_0800115c(), limit < (uint)(result2 - result1)))\n  goto LAB_0800165a;\n  goto LAB_0800160e;\n}\n\n",
            "renaming": {
                "FUN_080015e8": "reverse_binary_080015e8",
                "param_1": "pointerArray",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "condition",
                "param_5": "limit",
                "iVar1": "result1",
                "iVar2": "result2",
                "puVar3": "currentPointer",
                "ppuVar4": "currentPointerArray",
                "uVar5": "valueTemp1",
                "uVar6": "valueTemp2"
            },
            "calling": [
                "FUN_08001938"
            ],
            "called": [
                "FUN_0800115c",
                "FUN_080014e2",
                "FUN_08001460"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080016f4": {
            "entrypoint": "0x080016f4",
            "current_name": "check_validity_080016f4",
            "code": "\nundefined4 checkValidity_080016f4(int *data,uint length)\n\n{\n  int initialValue;\n  int currentValue;\n  \n  initialValue = FUN_0800115c();\n  while( true ) {\n    currentValue = *data;\n    if ((*(uint *)(currentValue + 0x14) & 0x40) != 0) {\n      return 0;\n    }\n    if (*(int *)(currentValue + 0x14) << 0x1b < 0) break;\n    if ((length == 0) || (currentValue = FUN_0800115c(), length < (uint)(currentValue - initialValue))) {\n      data[0xe] = data[0xe] | 0x20;\n      *(undefined *)((int)data + 0x35) = 0x20;\n      *(undefined *)(data + 0xd) = 0;\n      return 3;\n    }\n  }\n  *(uint *)(currentValue + 0x14) = *(uint *)(currentValue + 0x14) & 0xffffffef;\n  data[0xe] = 0;\n  *(undefined *)(data + 0xd) = 0;\n  *(undefined *)((int)data + 0x35) = 0x20;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080016f4": "check_validity_080016f4",
                "param_1": "data",
                "param_2": "length",
                "iVar1": "initialValue",
                "iVar2": "currentValue"
            },
            "calling": [
                "FUN_08001938"
            ],
            "called": [
                "FUN_0800115c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001754": {
            "entrypoint": "0x08001754",
            "current_name": "initialize_params_08001754",
            "code": "\nundefined4 initializeParams_08001754(uint **parameters)\n\n{\n  uint result1;\n  uint result2;\n  uint *ptr1;\n  uint *ptr2;\n  uint *ptr3;\n  uint temp1;\n  undefined8 temp2;\n  \n  if (parameters != (uint **)0x0) {\n    if (*(char *)((int)parameters + 0x35) == '\\0') {\n      *(undefined *)(parameters + 0xd) = 0;\n      FUN_08004d48();\n    }\n    *(undefined *)((int)parameters + 0x35) = 0x24;\n    **parameters = **parameters & 0xfffffffe;\n    temp2 = FUN_08002220();\n    result2 = (uint)((ulonglong)temp2 >> 0x20);\n    result1 = (uint)temp2;\n    ptr2 = parameters[1];\n    temp1 = result1 / 1000000;\n    if ((uint *)0x186a0 < ptr2) {\n      result2 = 300;\n    }\n    ptr1 = *parameters;\n    if ((uint *)0x186a0 < ptr2) {\n      result2 = temp1 * result2;\n    }\n    ptr1[1] = temp1;\n    if ((uint *)0x186a0 < ptr2) {\n      temp1 = result2 / 1000;\n    }\n    ptr1[8] = temp1 + 1;\n    if (ptr2 < (uint *)0x186a1) {\n      result1 = result1 / (uint)((int)ptr2 << 1);\n      if ((result1 & 0xfff) < 4) {\n        result1 = 4;\n      }\n    }\n    else {\n      if (parameters[2] == (uint *)0x0) {\n        result1 = result1 / (uint)((int)ptr2 * 3) | 0x8000;\n      }\n      else {\n        result1 = result1 / (uint)((int)ptr2 * 0x19) | 0xc000;\n      }\n      if ((result1 & 0xfff) == 0) {\n        result1 = 1;\n      }\n    }\n    ptr2 = parameters[8];\n    ptr3 = parameters[7];\n    ptr1[7] = result1;\n    *ptr1 = (uint)ptr3 | (uint)ptr2;\n    ptr1[2] = (uint)parameters[4] | (uint)parameters[3];\n    ptr1[3] = (uint)parameters[5] | (uint)parameters[6];\n    *ptr1 = *ptr1 | 1;\n    parameters[0xe] = (uint *)0x0;\n    *(undefined *)((int)parameters + 0x35) = 0x20;\n    *(undefined *)((int)parameters + 0x36) = 0;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08001754": "initialize_params_08001754",
                "param_1": "parameters",
                "uVar1": "result1",
                "uVar2": "result2",
                "puVar3": "ptr1",
                "puVar4": "ptr2",
                "puVar5": "ptr3",
                "uVar6": "temp1",
                "uVar7": "temp2"
            },
            "calling": [
                "FUN_0800458c"
            ],
            "called": [
                "FUN_08002220",
                "FUN_08004d48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001828": {
            "entrypoint": "0x08001828",
            "current_name": "process_data_08001828",
            "code": "\nundefined4\nprocessData_08001828(uint **data,undefined4 param2,undefined4 param3,undefined4 param4,byte *byteData,\n            short dataLength,undefined4 param7)\n\n{\n  int initialValue;\n  int currentValue;\n  uint *pointer;\n  uint tempVar;\n  \n  if (*(char *)((int)data + 0x35) == ' ') {\n    if (byteData == (byte *)0x0) {\n      return 1;\n    }\n    if (dataLength == 0) {\n      return 1;\n    }\n    initialValue = FUN_0800115c();\n    do {\n      pointer = *data;\n      if ((~pointer[6] & 2) != 0) {\n        if (*(char *)(data + 0xd) == '\\x01') {\n          return 2;\n        }\n        tempVar = *pointer;\n        *(undefined *)(data + 0xd) = 1;\n        *pointer = tempVar & 0xfffff7ff;\n        *(undefined *)((int)data + 0x35) = 0x21;\n        *(undefined *)((int)data + 0x36) = 0x40;\n        data[0xe] = (uint *)0x0;\n        initialValue = FUN_08001530(data,param2,param3,param4,param7);\n        if (initialValue != 0) {\n          *(undefined *)(data + 0xd) = 0;\n          if (data[0xe] == (uint *)0x4) {\n            return 1;\n          }\n          return 3;\n        }\n        goto LAB_080018e2;\n      }\n      currentValue = FUN_0800115c();\n    } while ((uint)(currentValue - initialValue) < 0x2711);\n    *(undefined *)(data + 0xd) = 0;\n    *(undefined *)((int)data + 0x35) = 0x20;\n  }\n  return 2;\n  while (dataLength != 0) {\nLAB_080018e2:\n    initialValue = FUN_080014e2(data,param7);\n    if (initialValue != 0) goto LAB_080018ee;\n    pointer = *data;\n    pointer[4] = (uint)*byteData;\n    if ((int)(pointer[5] << 0x1d) < 0) {\n      if ((short)(dataLength + -1) == 0) break;\n      dataLength = dataLength + -2;\n      pointer[4] = (uint)byteData[1];\n      byteData = byteData + 2;\n    }\n    else {\n      byteData = byteData + 1;\n      dataLength = dataLength + -1;\n    }\n  }\n  initialValue = FUN_080014e2(data,param7);\n  if (initialValue == 0) {\n    **data = **data | 0x200;\n    *(undefined *)(data + 0xd) = 0;\n    *(undefined *)((int)data + 0x35) = 0x20;\n    *(undefined *)((int)data + 0x36) = 0;\n    return 0;\n  }\nLAB_080018ee:\n  if (data[0xe] == (uint *)0x4) {\n    **data = **data | 0x200;\n    return 1;\n  }\n  return 3;\n}\n\n",
            "renaming": {
                "FUN_08001828": "process_data_08001828",
                "param_1": "data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "param_5": "byteData",
                "param_6": "dataLength",
                "param_7": "param7",
                "iVar1": "initialValue",
                "iVar2": "currentValue",
                "puVar3": "pointer",
                "uVar4": "tempVar"
            },
            "calling": [
                "FUN_0800403c"
            ],
            "called": [
                "FUN_08001530",
                "FUN_0800115c",
                "FUN_080014e2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001938": {
            "entrypoint": "0x08001938",
            "current_name": "process_data_08001938",
            "code": "\nundefined4\nprocessData_08001938(uint **data,undefined4 param1,undefined4 param2,undefined4 param3,\n            undefined *buffer,ushort length,uint timeout)\n\n{\n  undefined *ptr1;\n  int start_time;\n  int current_time;\n  uint *temp;\n  uint value;\n  undefined *ptr2;\n  bool condition;\n  \n  if (*(char *)((int)data + 0x35) != ' ') {\n    return 2;\n  }\n  if (buffer == (undefined *)0x0) {\n    return 1;\n  }\n  if (length == 0) {\n    return 1;\n  }\n  start_time = FUN_0800115c();\n  while (temp = *data, (~temp[6] & 2) == 0) {\n    current_time = FUN_0800115c();\n    if (10000 < (uint)(current_time - start_time)) {\n      *(undefined *)(data + 0xd) = 0;\n      *(undefined *)((int)data + 0x35) = 0x20;\n      return 2;\n    }\n  }\n  if (*(char *)(data + 0xd) == '\\x01') {\n    return 2;\n  }\n  value = *temp;\n  *(undefined *)(data + 0xd) = 1;\n  *temp = value & 0xfffff7ff;\n  *(undefined *)((int)data + 0x35) = 0x22;\n  *(undefined *)((int)data + 0x36) = 0x40;\n  data[0xe] = (uint *)0x0;\n  start_time = FUN_080015e8(data,param1,param2,param3,timeout);\n  if (start_time != 0) {\n    *(undefined *)(data + 0xd) = 0;\n    if (data[0xe] == (uint *)0x4) {\n      return 1;\n    }\n    return 3;\n  }\n  temp = *data;\n  value = *temp;\n  if (length == 1) {\n    *temp = value & 0xfffffbff;\n    disableIRQinterrupts();\n    **data = **data | 0x200;\n    enableIRQinterrupts();\n    start_time = FUN_080016f4(data,timeout);\n    if (start_time == 0) {\n      *buffer = (char)(*data)[4];\nLAB_08001ab8:\n      *(undefined *)((int)data + 0x35) = 0x20;\n      *(undefined *)((int)data + 0x36) = 0;\n      *(undefined *)(data + 0xd) = 0;\n      return 0;\n    }\nLAB_08001a18:\n    if (data[0xe] != (uint *)0x20) {\n      return 1;\n    }\n    return 3;\n  }\n  if (length == 2) {\n    *temp = value | 0x800;\n    disableIRQinterrupts();\n    **data = **data & 0xfffffbff;\n    enableIRQinterrupts();\n  }\n  else {\n    *temp = value | 0x400;\n    while (3 < length) {\n      start_time = FUN_080016f4(data,timeout);\n      if (start_time != 0) goto LAB_08001a18;\n      *buffer = (char)(*data)[4];\n      temp = *data;\n      condition = (int)(temp[5] << 0x1d) < 0;\n      if (condition) {\n        temp = (uint *)temp[4];\n        ptr2 = buffer + 2;\n        length = length - 2;\n      }\n      else {\n        ptr2 = buffer + 1;\n        length = length - 1;\n      }\n      ptr1 = buffer + 1;\n      buffer = ptr2;\n      if (condition) {\n        *ptr1 = (char)temp;\n      }\n    }\n    if (length != 2) {\n      start_time = FUN_0800115c();\n      do {\n        temp = *data;\n        do {\n          if ((int)(temp[5] << 0x1d) < 0) {\n            *temp = *temp & 0xfffffbff;\n            disableIRQinterrupts();\n            *buffer = (char)(*data)[4];\n            start_time = FUN_0800115c();\n            goto LAB_08001b3a;\n          }\n        } while (timeout == 0xffffffff);\n      } while ((timeout != 0) && (current_time = FUN_0800115c(), (uint)(current_time - start_time) <= timeout));\n      goto LAB_08001afa;\n    }\n  }\n  start_time = FUN_0800115c();\n  do {\n    do {\n      if ((int)((*data)[5] << 0x1d) < 0) {\n        disableIRQinterrupts();\n        temp = *data;\n        *temp = *temp | 0x200;\n        *buffer = (char)temp[4];\n        enableIRQinterrupts();\n        buffer[1] = (char)(*data)[4];\n        goto LAB_08001ab8;\n      }\n    } while (timeout == 0xffffffff);\n  } while ((timeout != 0) && (current_time = FUN_0800115c(), (uint)(current_time - start_time) <= timeout));\nLAB_08001afa:\n  *(undefined *)((int)data + 0x35) = 0x20;\n  *(undefined *)(data + 0xd) = 0;\n  return 3;\nLAB_08001b3a:\n  do {\n    temp = *data;\n    do {\n      if ((int)(temp[5] << 0x1d) < 0) {\n        *temp = *temp | 0x200;\n        buffer[1] = (char)temp[4];\n        enableIRQinterrupts();\n        buffer[2] = (char)(*data)[4];\n        goto LAB_08001ab8;\n      }\n    } while (timeout == 0xffffffff);\n  } while ((timeout != 0) && (current_time = FUN_0800115c(), (uint)(current_time - start_time) <= timeout));\n  goto LAB_08001afa;\n}\n\n",
            "renaming": {
                "FUN_08001938": "process_data_08001938",
                "param_1": "data",
                "param_2": "param1",
                "param_3": "param2",
                "param_4": "param3",
                "param_5": "buffer",
                "param_6": "length",
                "param_7": "timeout",
                "puVar1": "ptr1",
                "iVar2": "start_time",
                "iVar3": "current_time",
                "puVar4": "temp",
                "uVar5": "value",
                "puVar6": "ptr2",
                "bVar7": "condition"
            },
            "calling": [
                "FUN_0800407c",
                "FUN_080040b8"
            ],
            "called": [
                "FUN_0800115c",
                "FUN_080016f4",
                "FUN_080015e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001b58": {
            "entrypoint": "0x08001b58",
            "current_name": "check_conditions_08001b58",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08001eec) */\n/* WARNING: Removing unreachable block (ram,0x08001ee8) */\n\n\nundefined4 check_conditions_08001b58(int *input_parameters)\n\n{\n  int temp_var1;\n  int temp_var2;\n  \n  if (*input_parameters << 0x1f < 0) {\n    if (((_DAT_40021004 & 0xc) == 4) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((int)(_DAT_40021004 << 0xf) < 0)))) {\n      if (((int)((_DAT_40021000 >> 0x11) << 0x1f) < 0) && (input_parameters[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      temp_var1 = input_parameters[1];\n      if (temp_var1 == 0x10000) {\nLAB_08001c1e:\n        _DAT_40021000 = _DAT_40021000 | 0x10000;\n      }\n      else {\n        if (temp_var1 == 0) {\n          _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n          temp_var1 = FUN_0800115c();\n          while ((int)((_DAT_40021000 >> 0x11) << 0x1f) < 0) {\n            temp_var2 = FUN_0800115c();\n            if (100 < (uint)(temp_var2 - temp_var1)) {\n              return 3;\n            }\n          }\n          goto LAB_08001b64;\n        }\n        if (temp_var1 == 0x50000) {\n          _DAT_40021000 = _DAT_40021000 | 0x40000;\n          goto LAB_08001c1e;\n        }\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      temp_var1 = FUN_0800115c();\n      while (-1 < (int)((_DAT_40021000 >> 0x11) << 0x1f)) {\n        temp_var2 = FUN_0800115c();\n        if (100 < (uint)(temp_var2 - temp_var1)) {\n          return 3;\n        }\n      }\n    }\n  }\nLAB_08001b64:\n  if (*input_parameters << 0x1e < 0) {\n    if (((_DAT_40021004 & 0xc) == 0) ||\n       (((_DAT_40021004 & 0xc) == 8 && (-1 < (int)(_DAT_40021004 << 0xf))))) {\n      if (((int)((_DAT_40021000 >> 1) << 0x1f) < 0) && (input_parameters[4] != 1)) {\n        return 1;\n      }\n    }\n    else {\n      iRam42420000 = input_parameters[4];\n      if (iRam42420000 == 0) {\n        temp_var1 = FUN_0800115c();\n        while ((int)((_DAT_40021000 >> 1) << 0x1f) < 0) {\n          temp_var2 = FUN_0800115c();\n          if (2 < (uint)(temp_var2 - temp_var1)) {\n            return 3;\n          }\n        }\n        goto LAB_08001b6c;\n      }\n      iRam42420000 = 1;\n      temp_var1 = FUN_0800115c();\n      while (-1 < (int)((_DAT_40021000 >> 1) << 0x1f)) {\n        temp_var2 = FUN_0800115c();\n        if (2 < (uint)(temp_var2 - temp_var1)) {\n          return 3;\n        }\n      }\n    }\n    _DAT_40021000 = input_parameters[5] << 3 | _DAT_40021000 & 0xffffff07;\n  }\nLAB_08001b6c:\n  if (*input_parameters << 0x1c < 0) {\n    iRam42420480 = input_parameters[6];\n    if (iRam42420480 == 0) {\n      temp_var1 = FUN_0800115c();\n      while ((int)((_DAT_40021024 >> 1) << 0x1f) < 0) {\n        temp_var2 = FUN_0800115c();\n        if (2 < (uint)(temp_var2 - temp_var1)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      iRam42420480 = 1;\n      temp_var1 = FUN_0800115c();\n      while (-1 < (int)((_DAT_40021024 >> 1) << 0x1f)) {\n        temp_var2 = FUN_0800115c();\n        if (2 < (uint)(temp_var2 - temp_var1)) {\n          return 3;\n        }\n      }\n      FUNC_08001168(1);\n    }\n  }\n  if (-1 < *input_parameters << 0x1d) goto LAB_08001bc2;\n  _DAT_4002101c = _DAT_4002101c | 0x10000000;\n  _DAT_40007000 = _DAT_40007000 | 0x100;\n  temp_var1 = FUN_0800115c();\n  while (-1 < (int)(_DAT_40007000 << 0x17)) {\n    temp_var2 = FUN_0800115c();\n    if (100 < (uint)(temp_var2 - temp_var1)) {\n      return 3;\n    }\n  }\n  temp_var1 = input_parameters[3];\n  if (temp_var1 == 1) {\nLAB_08001e1a:\n    _DAT_40021020 = _DAT_40021020 | 1;\n  }\n  else {\n    if (temp_var1 == 0) {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n      temp_var1 = FUN_0800115c();\n      while ((int)((_DAT_40021020 >> 1) << 0x1f) < 0) {\n        temp_var2 = FUN_0800115c();\n        if (5000 < (uint)(temp_var2 - temp_var1)) {\n          return 3;\n        }\n      }\n      goto LAB_08001bc2;\n    }\n    if (temp_var1 == 5) {\n      _DAT_40021020 = _DAT_40021020 | 4;\n      goto LAB_08001e1a;\n    }\n    _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n  }\n  temp_var1 = FUN_0800115c();\n  while (-1 < (int)((_DAT_40021020 >> 1) << 0x1f)) {\n    temp_var2 = FUN_0800115c();\n    if (5000 < (uint)(temp_var2 - temp_var1)) {\n      return 3;\n    }\n  }\nLAB_08001bc2:\n  if (input_parameters[7] == 0) {\n    return 0;\n  }\n  if ((_DAT_40021004 & 0xc) != 8) {\n    if (input_parameters[7] != 2) {\n      uRam42420060 = 0;\n      temp_var1 = FUN_0800115c();\n      do {\n        if (-1 < (int)((_DAT_40021000 >> 0x19) << 0x1f)) {\n          return 0;\n        }\n        temp_var2 = FUN_0800115c();\n      } while ((uint)(temp_var2 - temp_var1) < 3);\n      return 3;\n    }\n    uRam42420060 = 0;\n    temp_var1 = FUN_0800115c();\n    do {\n      if (-1 < (int)((_DAT_40021000 >> 0x19) << 0x1f)) {\n        if (input_parameters[8] == 0x10000) {\n          _DAT_40021004 = _DAT_40021004 & 0xfffdffff | input_parameters[2];\n        }\n        _DAT_40021004 = input_parameters[8] | input_parameters[9] | _DAT_40021004 & 0xffc2ffff;\n        uRam42420060 = 1;\n        temp_var1 = FUN_0800115c();\n        do {\n          if ((int)((_DAT_40021000 >> 0x19) << 0x1f) < 0) {\n            return 0;\n          }\n          temp_var2 = FUN_0800115c();\n        } while ((uint)(temp_var2 - temp_var1) < 3);\n        return 3;\n      }\n      temp_var2 = FUN_0800115c();\n    } while ((uint)(temp_var2 - temp_var1) < 3);\n    return 3;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08001b58": "check_conditions_08001b58",
                "param_1": "input_parameters",
                "iVar1": "temp_var1",
                "iVar2": "temp_var2"
            },
            "calling": [
                "FUN_08004514"
            ],
            "called": [
                "FUN_0800115c",
                "FUN_08001168"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002008": {
            "entrypoint": "0x08002008",
            "current_name": "calculate_mpu9250_clock_frequency_08002008",
            "code": "\n\n\nint calculateMPU9250ClockFrequency_08002008(void)\n\n{\n  undefined4 tempVar1;\n  int result;\n  undefined4 tempVar3;\n  undefined4 *dataPtr;\n  uint clockFrequency;\n  undefined4 *destPtr;\n  byte buffer [4];\n  undefined4 dataArray [5];\n  \n  dataPtr = &DAT_080072f0;\n  destPtr = dataArray;\n  do {\n    tempVar1 = *dataPtr;\n    tempVar3 = dataPtr[1];\n    dataPtr = dataPtr + 2;\n    *destPtr = tempVar1;\n    destPtr[1] = tempVar3;\n    destPtr = destPtr + 2;\n  } while (dataPtr != (undefined4 *)\"../Src/MPU9250.c\");\n  buffer[0] = 1;\n  buffer[1] = 2;\n  if ((_DAT_40021004 & 0xc) == 8) {\n    if ((int)(_DAT_40021004 << 0xf) < 0) {\n      clockFrequency = 8000000 / buffer[(_DAT_40021004 & 0x20000) >> 0x11];\n    }\n    else {\n      clockFrequency = 4000000;\n    }\n    result = clockFrequency * *(byte *)((int)dataArray + ((_DAT_40021004 & 0x3c0000) >> 0x12));\n  }\n  else {\n    result = 8000000;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002008": "calculate_mpu9250_clock_frequency_08002008",
                "uVar1": "tempVar1",
                "iVar2": "result",
                "uVar3": "tempVar3",
                "puVar4": "dataPtr",
                "uVar5": "clockFrequency",
                "puVar6": "destPtr",
                "local_24": "buffer",
                "local_20": "dataArray"
            },
            "calling": [
                "FUN_0800209c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800209c": {
            "entrypoint": "0x0800209c",
            "current_name": "check_and_execute_task_0800209c",
            "code": "\n\n\nundefined4 check_and_execute_task_0800209c(uint *task_data,uint task_size)\n\n{\n  char task_completed;\n  char task_in_progress;\n  int task_flag;\n  uint task_type;\n  int task_result;\n  uint task_condition;\n  \n  if ((task_size <= (_DAT_40022000 & 7)) ||\n     (_DAT_40022000 = _DAT_40022000 & 0xfffffff8 | task_size, task_size == (task_size & 7))) {\n    if ((int)(*task_data << 0x1e) < 0) {\n      _DAT_40021004 = _DAT_40021004 & 0xffffff0f | task_data[2];\n    }\n    task_flag = *task_data << 0x1f;\n    if (-1 < task_flag) {\nLAB_080020ba:\n      if ((task_size < (_DAT_40022000 & 7)) &&\n         (_DAT_40022000 = _DAT_40022000 & 0xfffffff8 | task_size, task_size != (task_size & 7))) {\n        return 1;\n      }\n      if ((*task_data & 4) != 0) {\n        _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | task_data[3];\n      }\n      if ((int)(*task_data << 0x1c) < 0) {\n        _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | task_data[4] << 3;\n      }\n      task_type = FUN_08002008();\n      DAT_200001bc = task_type >> (&DAT_08007361)[(_DAT_40021004 & 0xf0) >> 4];\n      FUN_08001104(0);\n      return 0;\n    }\n    task_type = task_data[1];\n    if (task_type == 1) {\n      task_in_progress = '\\x01';\n      task_completed = '\\0';\n    }\n    else {\n      task_condition = _DAT_40021000;\n      if (task_type == 2) goto LAB_08002176;\n      task_in_progress = '\\0';\n      task_completed = '\\x01';\n    }\n    task_condition = (_DAT_40021000 >>\n            (LZCOUNT((uint)(byte)(task_completed << 6) << 0x18 | (uint)(byte)(task_in_progress << 6) << 8) & 0x1fU)) <<\n            0x1f;\n    if ((int)task_condition < 0) {\nLAB_08002176:\n      _DAT_40021004 = _DAT_40021004 & 0xfffffffc | task_type;\n      task_flag = FUN_0800115c(task_flag,task_condition);\n      if (task_data[1] == 1) {\n        do {\n          if ((_DAT_40021004 & 0xc) == 4) goto LAB_080020ba;\n          task_result = FUN_0800115c();\n        } while ((uint)(task_result - task_flag) < 0x1389);\n      }\n      else if (task_data[1] == 2) {\n        do {\n          if ((_DAT_40021004 & 0xc) == 8) goto LAB_080020ba;\n          task_result = FUN_0800115c();\n        } while ((uint)(task_result - task_flag) < 0x1389);\n      }\n      else {\n        do {\n          if ((_DAT_40021004 & 0xc) == 0) goto LAB_080020ba;\n          task_result = FUN_0800115c();\n        } while ((uint)(task_result - task_flag) < 0x1389);\n      }\n      return 3;\n    }\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800209c": "check_and_execute_task_0800209c",
                "param_1": "task_data",
                "param_2": "task_size",
                "cVar1": "task_completed",
                "cVar2": "task_in_progress",
                "iVar3": "task_flag",
                "uVar4": "task_type",
                "iVar5": "task_result",
                "uVar6": "task_condition"
            },
            "calling": [
                "FUN_08004514"
            ],
            "called": [
                "FUN_08001104",
                "FUN_0800115c",
                "FUN_08002008"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002214": {
            "entrypoint": "0x08002214",
            "current_name": "get_global_data_08002214",
            "code": "\nundefined4 getGlobalData_08002214(void)\n\n{\n  return DAT_200001bc;\n}\n\n",
            "renaming": {
                "FUN_08002214": "get_global_data_08002214"
            },
            "calling": [
                "FUN_08001104",
                "FUN_08004514"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002220": {
            "entrypoint": "0x08002220",
            "current_name": "get_shifted_data_08002220",
            "code": "\n\n\nuint getShiftedData_08002220(void)\n\n{\n  return DAT_200001bc >> (&DAT_08007371)[(_DAT_40021004 & 0x700) >> 8];\n}\n\n",
            "renaming": {
                "FUN_08002220": "get_shifted_data_08002220"
            },
            "calling": [
                "FUN_08001754",
                "FUN_080025e8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002250": {
            "entrypoint": "0x08002250",
            "current_name": "get_shifted_value_08002250",
            "code": "\n\n\nuint get_shifted_value_08002250(void)\n\n{\n  return DAT_200001bc >> (&DAT_08007371)[(_DAT_40021004 & 0x3800) >> 0xb];\n}\n\n",
            "renaming": {
                "FUN_08002250": "get_shifted_value_08002250"
            },
            "calling": [
                "FUN_080025e8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002280": {
            "entrypoint": "0x08002280",
            "current_name": "update_memory_state_08002280",
            "code": "\nvoid updateMemoryState_08002280(int memoryAddress,uint *data)\n\n{\n  uint updatedValue1;\n  uint updatedValue2;\n  uint updatedValue3;\n  \n  *(uint *)(memoryAddress + 0x20) = *(uint *)(memoryAddress + 0x20) & 0xfffffffe;\n  updatedValue2 = *(uint *)(memoryAddress + 4);\n  updatedValue3 = *data;\n  updatedValue1 = *(uint *)(memoryAddress + 0x20) & 0xfffffffd | data[2];\n  if (memoryAddress == 0x40012c00) {\n    updatedValue1 = (updatedValue1 & 0xfffffff7 | data[3]) & 0xfffffffb;\n    updatedValue2 = updatedValue2 & 0xfffffcff | data[5] | data[6];\n  }\n  *(uint *)(memoryAddress + 4) = updatedValue2;\n  *(uint *)(memoryAddress + 0x18) = *(uint *)(memoryAddress + 0x18) & 0xffffff8c | updatedValue3;\n  *(uint *)(memoryAddress + 0x34) = data[1];\n  *(uint *)(memoryAddress + 0x20) = updatedValue1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002280": "update_memory_state_08002280",
                "param_1": "memoryAddress",
                "param_2": "data",
                "uVar1": "updatedValue1",
                "uVar2": "updatedValue2",
                "uVar3": "updatedValue3"
            },
            "calling": [
                "FUN_0800245c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080022d0": {
            "entrypoint": "0x080022d0",
            "current_name": "update_registers_080022d0",
            "code": "\nvoid updateRegisters_080022d0(int baseAddress,uint *registers)\n\n{\n  uint updatedValue1;\n  uint updatedValue2;\n  uint selectedValue;\n  \n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) & 0xfffffeff;\n  updatedValue2 = *(uint *)(baseAddress + 4);\n  selectedValue = *registers;\n  updatedValue1 = *(uint *)(baseAddress + 0x20) & 0xfffffdff | registers[2] << 8;\n  if (baseAddress == 0x40012c00) {\n    updatedValue1 = (updatedValue1 & 0xfffff7ff | registers[3] << 8) & 0xfffffbff;\n    updatedValue2 = updatedValue2 & 0xffffcfff | (registers[5] | registers[6]) << 4;\n  }\n  *(uint *)(baseAddress + 4) = updatedValue2;\n  *(uint *)(baseAddress + 0x1c) = *(uint *)(baseAddress + 0x1c) & 0xffffff8c | selectedValue;\n  *(uint *)(baseAddress + 0x3c) = registers[1];\n  *(uint *)(baseAddress + 0x20) = updatedValue1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080022d0": "update_registers_080022d0",
                "param_1": "baseAddress",
                "param_2": "registers",
                "uVar1": "updatedValue1",
                "uVar2": "updatedValue2",
                "uVar3": "selectedValue"
            },
            "calling": [
                "FUN_0800245c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002324": {
            "entrypoint": "0x08002324",
            "current_name": "update_values_08002324",
            "code": "\nvoid updateValues_08002324(int baseAddress,int *parameters)\n\n{\n  uint firstValue;\n  int secondValue;\n  int thirdValue;\n  int fourthValue;\n  \n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) & 0xffffefff;\n  firstValue = *(uint *)(baseAddress + 4);\n  secondValue = *parameters;\n  thirdValue = parameters[2];\n  fourthValue = 0x40012c00;\n  if (baseAddress == 0x40012c00) {\n    fourthValue = parameters[5];\n    firstValue = firstValue & 0xffffbfff;\n  }\n  if (baseAddress == 0x40012c00) {\n    firstValue = firstValue | fourthValue << 6;\n  }\n  *(uint *)(baseAddress + 4) = firstValue;\n  *(uint *)(baseAddress + 0x1c) = *(uint *)(baseAddress + 0x1c) & 0xffff8cff | secondValue << 8;\n  *(int *)(baseAddress + 0x40) = parameters[1];\n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) & 0xffffdfff | thirdValue << 0xc;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002324": "update_values_08002324",
                "param_1": "baseAddress",
                "param_2": "parameters",
                "uVar1": "firstValue",
                "iVar2": "secondValue",
                "iVar3": "thirdValue",
                "iVar4": "fourthValue"
            },
            "calling": [
                "FUN_0800245c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002368": {
            "entrypoint": "0x08002368",
            "current_name": "update_memory_08002368",
            "code": "\nvoid updateMemory_08002368(uint *memoryPointer,uint *dataPointer)\n\n{\n  uint tempValue;\n  \n  tempValue = *memoryPointer;\n  if (((((memoryPointer == (uint *)0x40012c00) || (memoryPointer == (uint *)0x40000000)) ||\n       (memoryPointer == (uint *)0x40000400)) || (memoryPointer == (uint *)0x40000800)) &&\n     (((tempValue = tempValue & 0xffffff8f | dataPointer[1], memoryPointer == (uint *)0x40012c00 ||\n       (memoryPointer == (uint *)0x40000000)) ||\n      ((memoryPointer == (uint *)0x40000400 || (memoryPointer == (uint *)0x40000800)))))) {\n    tempValue = tempValue & 0xfffffcff | dataPointer[3];\n  }\n  *memoryPointer = tempValue;\n  memoryValueB = dataValue2;\n  memoryPointer[10] = *dataPointer;\n  tempValue = 0x40012c00;\n  if (memoryPointer == (uint *)0x40012c00) {\n    tempValue = dataValue4;\n  }\n  if (memoryPointer == (uint *)0x40012c00) {\n    memoryValueC = tempValue;\n  }\n  memoryPointer[5] = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002368": "update_memory_08002368",
                "param_1": "memoryPointer",
                "param_2": "dataPointer",
                "uVar1": "tempValue",
                "param_1[0xb]": "memoryValueB",
                "param_2[2]": "dataValue2",
                "param_2[4]": "dataValue4",
                "param_1[0xc]": "memoryValueC"
            },
            "calling": [
                "FUN_080023d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080023d0": {
            "entrypoint": "0x080023d0",
            "current_name": "validate_and_process_data_080023d0",
            "code": "\nundefined4 validate_and_process_data_080023d0(undefined4 *data_ptr)\n\n{\n  if (data_ptr != (undefined4 *)0x0) {\n    if (*(char *)((int)data_ptr + 0x39) == '\\0') {\n      *(undefined *)(data_ptr + 0xe) = 0;\n      FUN_08004d8c();\n    }\n    *(undefined *)((int)data_ptr + 0x39) = 2;\n    FUN_08002368(*data_ptr,data_ptr + 1);\n    *(undefined *)((int)data_ptr + 0x39) = 1;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080023d0": "validate_and_process_data_080023d0",
                "param_1": "data_ptr"
            },
            "calling": [
                "FUN_0800458c"
            ],
            "called": [
                "FUN_08002368",
                "FUN_08004d8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002404": {
            "entrypoint": "0x08002404",
            "current_name": "update_parameters_08002404",
            "code": "\nvoid updateParameters_08002404(int inputAddress,int *parameters)\n\n{\n  uint modifiedFlag1;\n  uint modifiedFlag2;\n  int inputValue;\n  \n  *(uint *)(inputAddress + 0x20) = *(uint *)(inputAddress + 0x20) & 0xffffffef;\n  modifiedFlag2 = *(uint *)(inputAddress + 4);\n  inputValue = *parameters;\n  modifiedFlag1 = *(uint *)(inputAddress + 0x20) & 0xffffffdf | paramValue2 << 4;\n  if (inputAddress == 0x40012c00) {\n    modifiedFlag1 = (modifiedFlag1 & 0xffffff7f | paramValue3 << 4) & 0xffffffbf;\n    modifiedFlag2 = modifiedFlag2 & 0xfffff3ff | (parameters[5] | parameters[6]) << 2;\n  }\n  *(uint *)(inputAddress + 4) = modifiedFlag2;\n  *(uint *)(inputAddress + 0x18) = *(uint *)(inputAddress + 0x18) & 0xffff8cff | inputValue << 8;\n  *(int *)(inputAddress + 0x38) = parameters[1];\n  *(uint *)(inputAddress + 0x20) = modifiedFlag1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002404": "update_parameters_08002404",
                "param_1": "inputAddress",
                "param_2": "parameters",
                "uVar1": "modifiedFlag1",
                "uVar2": "modifiedFlag2",
                "iVar3": "inputValue",
                "param_2[2]": "paramValue2",
                "param_2[3]": "paramValue3"
            },
            "calling": [
                "FUN_0800245c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800245c": {
            "entrypoint": "0x0800245c",
            "current_name": "update_permissions_0800245c",
            "code": "\nvoid updatePermissions_0800245c(int *paramPointer,undefined4 param2,undefined4 param3)\n\n{\n  int extraOut1;\n  int extraOut2;\n  int extraOut3;\n  int extraOut4;\n  int tempVar1;\n  uint updatedVar;\n  int tempVar2;\n  \n  if (*(char *)(paramPointer + 0xe) == '\\x01') {\n    return;\n  }\n  *(undefined *)((int)paramPointer + 0x39) = 2;\n  *(undefined *)(paramPointer + 0xe) = 1;\n  switch(param3) {\n  case 0:\n    FUN_08002280(*paramPointer);\n    tempVar2 = *paramPointer;\n    updatedVar = *(uint *)(extraOut1 + 0x10);\n    *(uint *)(tempVar2 + 0x18) = *(uint *)(tempVar2 + 0x18) | 8;\n    *(uint *)(tempVar2 + 0x18) = *(uint *)(tempVar2 + 0x18) & 0xfffffffb;\n    updatedVar = *(uint *)(tempVar2 + 0x18) | updatedVar;\n    break;\n  default:\n    goto switchD_0800247a_caseD_1;\n  case 4:\n    FUN_08002404(*paramPointer);\n    tempVar2 = *paramPointer;\n    tempVar1 = *(int *)(extraOut2 + 0x10);\n    *(uint *)(tempVar2 + 0x18) = *(uint *)(tempVar2 + 0x18) | 0x800;\n    *(uint *)(tempVar2 + 0x18) = *(uint *)(tempVar2 + 0x18) & 0xfffffbff;\n    updatedVar = *(uint *)(tempVar2 + 0x18) | tempVar1 << 8;\n    break;\n  case 8:\n    FUN_080022d0(*paramPointer);\n    tempVar2 = *paramPointer;\n    updatedVar = *(uint *)(extraOut3 + 0x10);\n    *(uint *)(tempVar2 + 0x1c) = *(uint *)(tempVar2 + 0x1c) | 8;\n    *(uint *)(tempVar2 + 0x1c) = *(uint *)(tempVar2 + 0x1c) & 0xfffffffb;\n    updatedVar = *(uint *)(tempVar2 + 0x1c) | updatedVar;\n    goto LAB_080024fa;\n  case 0xc:\n    FUN_08002324(*paramPointer);\n    tempVar2 = *paramPointer;\n    tempVar1 = *(int *)(extraOut4 + 0x10);\n    *(uint *)(tempVar2 + 0x1c) = *(uint *)(tempVar2 + 0x1c) | 0x800;\n    *(uint *)(tempVar2 + 0x1c) = *(uint *)(tempVar2 + 0x1c) & 0xfffffbff;\n    updatedVar = *(uint *)(tempVar2 + 0x1c) | tempVar1 << 8;\nLAB_080024fa:\n    *(uint *)(tempVar2 + 0x1c) = updatedVar;\n    goto switchD_0800247a_caseD_1;\n  }\n  *(uint *)(tempVar2 + 0x18) = updatedVar;\nswitchD_0800247a_caseD_1:\n  *(undefined *)((int)paramPointer + 0x39) = 1;\n  *(undefined *)(paramPointer + 0xe) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800245c": "update_permissions_0800245c",
                "param_1": "paramPointer",
                "param_2": "param2",
                "param_3": "param3",
                "extraout_r1": "extraOut1",
                "extraout_r1_00": "extraOut2",
                "extraout_r1_01": "extraOut3",
                "extraout_r1_02": "extraOut4",
                "iVar1": "tempVar1",
                "uVar2": "updatedVar",
                "iVar3": "tempVar2"
            },
            "calling": [
                "FUN_0800458c"
            ],
            "called": [
                "FUN_080022d0",
                "FUN_08002324",
                "FUN_08002404",
                "FUN_08002280"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002520": {
            "entrypoint": "0x08002520",
            "current_name": "update_bitwise_value_08002520",
            "code": "\nvoid updateBitwiseValue_08002520(int dataPointer,uint bitPosition,int newValue)\n\n{\n  *(uint *)(dataPointer + 0x20) = *(uint *)(dataPointer + 0x20) & ~(1 << (bitPosition & 0xff));\n  *(uint *)(dataPointer + 0x20) = newValue << (bitPosition & 0xff) | *(uint *)(dataPointer + 0x20);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002520": "update_bitwise_value_08002520",
                "param_1": "dataPointer",
                "param_2": "bitPosition",
                "param_3": "newValue"
            },
            "calling": [
                "FUN_08002538"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002538": {
            "entrypoint": "0x08002538",
            "current_name": "enable_feature_08002538",
            "code": "\nundefined4 enableFeature_08002538(uint **featureAddress,undefined4 featureValue)\n\n{\n  uint updatedValue;\n  uint *featurePointer;\n  \n  FUN_08002520(*featureAddress,featureValue,1);\n  featurePointer = *featureAddress;\n  updatedValue = 0x40012c00;\n  if (featurePointer == (uint *)0x40012c00) {\n    updatedValue = uRam40012c44 | 0x8000;\n  }\n  if (featurePointer == (uint *)0x40012c00) {\n    featurePointer[0x11] = updatedValue;\n  }\n  *featurePointer = *featurePointer | 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002538": "enable_feature_08002538",
                "param_1": "featureAddress",
                "param_2": "featureValue",
                "uVar1": "updatedValue",
                "puVar2": "featurePointer"
            },
            "calling": [
                "FUN_08003ff4"
            ],
            "called": [
                "FUN_08002520"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002564": {
            "entrypoint": "0x08002564",
            "current_name": "initialize_flags_08002564",
            "code": "\nundefined4 initializeFlags_08002564(int *flagArray,uint *dataArray)\n\n{\n  undefined4 returnValue;\n  \n  returnValue = 2;\n  if (*(char *)(flagArray + 0xe) != '\\x01') {\n    *(undefined *)((int)flagArray + 0x39) = 2;\n    *(uint *)(*flagArray + 0x44) =\n         *dataArray | dataArray[1] | dataArray[2] | dataArray[3] | dataArray[4] | dataArray[5] | dataArray[6];\n    *(undefined *)((int)flagArray + 0x39) = 1;\n    returnValue = 0;\n    *(undefined *)(flagArray + 0xe) = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08002564": "initialize_flags_08002564",
                "param_1": "flagArray",
                "param_2": "dataArray",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_0800458c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080025a4": {
            "entrypoint": "0x080025a4",
            "current_name": "update_flags_and_status_080025a4",
            "code": "\nundefined4 updateFlagsAndStatus_080025a4(int *flagArray,uint *statusArray)\n\n{\n  uint flag1;\n  undefined4 returnValue;\n  int baseAddress;\n  uint status1;\n  \n  returnValue = 2;\n  if (*(char *)(flagArray + 0xe) != '\\x01') {\n    *(undefined *)((int)flagArray + 0x39) = 2;\n    baseAddress = *flagArray;\n    status1 = *statusArray;\n    flag1 = statusArray[1];\n    *(uint *)(baseAddress + 4) = *(uint *)(baseAddress + 4) & 0xffffff8f;\n    *(uint *)(baseAddress + 4) = *(uint *)(baseAddress + 4) | status1;\n    *(uint *)(baseAddress + 8) = *(uint *)(baseAddress + 8) & 0xffffff7f;\n    *(uint *)(baseAddress + 8) = *(uint *)(baseAddress + 8) | flag1;\n    *(undefined *)((int)flagArray + 0x39) = 1;\n    returnValue = 0;\n    *(undefined *)(flagArray + 0xe) = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_080025a4": "update_flags_and_status_080025a4",
                "param_1": "flagArray",
                "param_2": "statusArray",
                "uVar1": "flag1",
                "uVar2": "returnValue",
                "iVar3": "baseAddress",
                "uVar4": "status1"
            },
            "calling": [
                "FUN_0800458c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080025e8": {
            "entrypoint": "0x080025e8",
            "current_name": "calculate_values_080025e8",
            "code": "\nvoid calculateValues_080025e8(int *inputArray)\n\n{\n  int randomValue1;\n  int randomValue2;\n  uint randomValue3;\n  int result1;\n  int result2;\n  int baseAddress;\n  \n  baseAddress = *inputArray;\n  randomValue3 = inputArray[4];\n  *(uint *)(baseAddress + 0x10) = *(uint *)(baseAddress + 0x10) & 0xffffcfff | inputArray[3];\n  *(uint *)(baseAddress + 0xc) = inputArray[2] | randomValue3 | inputArray[5] | *(uint *)(baseAddress + 0xc) & 0xffffe9f3;\n  *(uint *)(baseAddress + 0x14) = *(uint *)(baseAddress + 0x14) & 0xfffffcff | inputArray[6];\n  if (baseAddress == 0x40013800) {\n    randomValue1 = FUN_08002250();\n    result1 = (int)(((ulonglong)(uint)(randomValue1 * 0x19) / (ulonglong)(uint)(inputArray[1] << 2)) / 100);\n    randomValue1 = FUN_08002250();\n    result2 = inputArray[1];\n    randomValue2 = FUN_08002250();\n    randomValue2 = (uint)(randomValue1 * 0x19) / (uint)(result2 << 2) +\n            (int)(((ulonglong)(uint)(randomValue2 * 0x19) / (ulonglong)(uint)(inputArray[1] << 2)) / 100) *\n            -100;\n    randomValue1 = FUN_08002250();\n    randomValue3 = (uint)(randomValue1 * 0x19) / (uint)(inputArray[1] << 2);\n    randomValue1 = FUN_08002250();\n  }\n  else {\n    randomValue1 = FUN_08002220();\n    result1 = (int)(((ulonglong)(uint)(randomValue1 * 0x19) / (ulonglong)(uint)(inputArray[1] << 2)) / 100);\n    randomValue1 = FUN_08002220();\n    result2 = inputArray[1];\n    randomValue2 = FUN_08002220();\n    randomValue2 = (uint)(randomValue1 * 0x19) / (uint)(result2 << 2) +\n            (int)(((ulonglong)(uint)(randomValue2 * 0x19) / (ulonglong)(uint)(inputArray[1] << 2)) / 100) *\n            -100;\n    randomValue1 = FUN_08002220();\n    randomValue3 = (uint)(randomValue1 * 0x19) / (uint)(inputArray[1] << 2);\n    randomValue1 = FUN_08002220();\n  }\n  *(uint *)(baseAddress + 8) =\n       (((randomValue3 + (int)(((ulonglong)(uint)(randomValue1 * 0x19) / (ulonglong)(uint)(inputArray[1] << 2)) / 100\n                       ) * -100) * 0x10 + 0x32) / 100 & 0xf | (randomValue2 * 0x10 + 0x32U) / 100 & 0xf0) +\n       result1 * 0x10;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080025e8": "calculate_values_080025e8",
                "param_1": "inputArray",
                "iVar1": "randomValue1",
                "iVar2": "randomValue2",
                "uVar3": "randomValue3",
                "iVar4": "result1",
                "iVar5": "result2",
                "iVar6": "baseAddress"
            },
            "calling": [
                "FUN_08002724"
            ],
            "called": [
                "FUN_08002220",
                "FUN_08002250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002724": {
            "entrypoint": "0x08002724",
            "current_name": "initialize_parameters_08002724",
            "code": "\nundefined4 initializeParameters_08002724(int *parameters)\n\n{\n  int tempVariable;\n  \n  if (parameters != (int *)0x0) {\n    if (*(char *)((int)parameters + 0x39) == '\\0') {\n      *(undefined *)(parameters + 0xe) = 0;\n      FUN_08004e7c();\n    }\n    *(undefined *)((int)parameters + 0x39) = 2;\n    *(uint *)(*parameters + 0xc) = *(uint *)(*parameters + 0xc) & 0xffffdfff;\n    FUN_080025e8(parameters);\n    tempVariable = *parameters;\n    *(uint *)(tempVariable + 0x10) = *(uint *)(tempVariable + 0x10) & 0xffffb7ff;\n    *(uint *)(tempVariable + 0x14) = *(uint *)(tempVariable + 0x14) & 0xffffffd5;\n    *(uint *)(tempVariable + 0xc) = *(uint *)(tempVariable + 0xc) | 0x2000;\n    parameters[0xf] = 0;\n    *(undefined *)((int)parameters + 0x39) = 1;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08002724": "initialize_parameters_08002724",
                "param_1": "parameters",
                "iVar1": "tempVariable"
            },
            "calling": [
                "FUN_0800458c"
            ],
            "called": [
                "FUN_08004e7c",
                "FUN_080025e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800290a": {
            "entrypoint": "0x0800290a",
            "current_name": "FUNC_0800290a",
            "code": "\nvoid FUNC_0800290a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800290a": "FUNC_0800290a"
            },
            "calling": [
                "FUN_0800299a"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800290c": {
            "entrypoint": "0x0800290c",
            "current_name": "process_data_0800290c",
            "code": "\nundefined4 process_data_0800290c(int *data)\n\n{\n  byte byte_value;\n  int base_address;\n  uint modified_value;\n  undefined4 temp_value;\n  short count;\n  ushort *ushort_ptr;\n  ushort *modified_ushort_ptr;\n  bool is_true;\n  \n  if ((*(byte *)((int)data + 0x39) & 0xef) != 0x22) {\n    return 2;\n  }\n  base_address = *data;\n  ushort_ptr = (ushort *)data[10];\n  if (data[2] == 0x1000) {\n    if (data[4] == 0) {\n      modified_ushort_ptr = ushort_ptr + 1;\n      *ushort_ptr = (ushort)((uint)(*(int *)(base_address + 4) << 0x17) >> 0x17);\n    }\n    else {\n      modified_ushort_ptr = (ushort *)((int)ushort_ptr + 1);\n      *ushort_ptr = (ushort)*(int *)(base_address + 4) & 0xff;\n    }\n    data[10] = (int)modified_ushort_ptr;\n  }\n  else {\n    if (data[4] == 0) {\n      byte_value = (byte)*(undefined4 *)(base_address + 4);\n      data[10] = (int)ushort_ptr + 1;\n    }\n    else {\n      temp_value = *(undefined4 *)(base_address + 4);\n      data[10] = (int)ushort_ptr + 1;\n      byte_value = (byte)temp_value & 0x7f;\n    }\n    *(byte *)ushort_ptr = byte_value;\n  }\n  count = *(short *)((int)data + 0x2e) + -1;\n  *(short *)((int)data + 0x2e) = count;\n  if (count == 0) {\n    base_address = *data;\n    *(uint *)(base_address + 0xc) = *(uint *)(base_address + 0xc) & 0xffffffdf;\n    is_true = *(char *)((int)data + 0x39) != '2';\n    if (is_true) {\n      modified_value = *(uint *)(base_address + 0xc) & 0xfffffeff;\n    }\n    else {\n      base_address = 0x12;\n      modified_value = 0x32;\n    }\n    if (is_true) {\n      *(uint *)(base_address + 0xc) = modified_value;\n      modified_value = *(uint *)(base_address + 0x14) & 0xfffffffe;\n    }\n    if (is_true) {\n      *(uint *)(base_address + 0x14) = modified_value;\n      base_address = 1;\n    }\n    *(char *)((int)data + 0x39) = (char)base_address;\n    FUN_08004c30();\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800290c": "process_data_0800290c",
                "param_1": "data",
                "bVar1": "byte_value",
                "iVar2": "base_address",
                "uVar3": "modified_value",
                "uVar4": "temp_value",
                "sVar5": "count",
                "puVar6": "ushort_ptr",
                "puVar7": "modified_ushort_ptr",
                "bVar8": "is_true"
            },
            "calling": [
                "FUN_0800299a"
            ],
            "called": [
                "FUN_08004c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002998": {
            "entrypoint": "0x08002998",
            "current_name": "FUNC_08002998",
            "code": "\nvoid FUNC_08002998(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002998": "FUNC_08002998"
            },
            "calling": [
                "FUN_0800299a"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800299a": {
            "entrypoint": "0x0800299a",
            "current_name": "process_data_0800299a",
            "code": "\nvoid processData_0800299a(uint **data)\n\n{\n  uint value1;\n  short counter;\n  uint value2;\n  uint *ptr1;\n  undefined uValue;\n  uint *ptr2;\n  uint flag;\n  bool isNegative;\n  \n  ptr2 = *data;\n  value2 = *ptr2;\n  value1 = ptr2[3];\n  if ((value2 & 0xf) == 0) {\n    if (((int)(value2 << 0x1a) < 0) && ((int)(value1 << 0x1a) < 0)) {\n      FUN_0800290c();\n      return;\n    }\n  }\n  else {\n    flag = ptr2[5] & 1;\n    if ((flag != 0) || ((value1 & 0x120) != 0)) {\n      ptr2 = (uint *)(value2 << 0x1f);\n      if ((int)ptr2 < 0) {\n        isNegative = (int)(value1 << 0x17) < 0;\n        if (isNegative) {\n          ptr2 = (uint *)((uint)data[0xf] | 1);\n        }\n        if (isNegative) {\n          data[0xf] = ptr2;\n        }\n      }\n      if (((int)(value2 << 0x1d) < 0) && (flag != 0)) {\n        data[0xf] = (uint *)((uint)data[0xf] | 2);\n      }\n      if (((int)(value2 << 0x1e) < 0) && (flag != 0)) {\n        data[0xf] = (uint *)((uint)data[0xf] | 4);\n      }\n      if (((int)(value2 << 0x1c) < 0) && (flag != 0)) {\n        data[0xf] = (uint *)((uint)data[0xf] | 8);\n      }\n      if (data[0xf] == (uint *)0x0) {\n        return;\n      }\n      if (((int)(value2 << 0x1a) < 0) && ((int)(value1 << 0x1a) < 0)) {\n        FUN_0800290c(data);\n      }\n      ptr2 = *data;\n      if ((-1 < (int)data[0xf] << 0x1c) && ((ptr2[5] & 0x40) == 0)) {\n        FUNC_08002998(data);\n        data[0xf] = (uint *)0x0;\n        return;\n      }\n      ptr2[3] = ptr2[3] & 0xfffffedf;\n      ptr2[5] = ptr2[5] & 0xfffffffe;\n      *(undefined *)((int)data + 0x39) = 1;\n      FUNC_08002998(data);\n      return;\n    }\n  }\n  if (((int)(value2 << 0x18) < 0) && ((int)(value1 << 0x18) < 0)) {\n    if ((*(byte *)((int)data + 0x39) & 0xdf) == 0x12) {\n      ptr1 = data[8];\n      if (data[2] == (uint *)0x1000) {\n        ptr2[1] = *(ushort *)ptr1 & 0x1ff;\n        if (data[4] == (uint *)0x0) {\n          ptr1 = (uint *)((int)ptr1 + 2);\n        }\n        else {\n          ptr1 = (uint *)((int)ptr1 + 1);\n        }\n        data[8] = ptr1;\n      }\n      else {\n        data[8] = (uint *)((int)ptr1 + 1);\n        ptr2[1] = (uint)*(byte *)ptr1;\n      }\n      counter = *(short *)((int)data + 0x26) + -1;\n      *(short *)((int)data + 0x26) = counter;\n      if (counter == 0) {\n        ptr2[3] = ptr2[3] & 0xffffff7f;\n        ptr2[3] = ptr2[3] | 0x40;\n        return;\n      }\n    }\n  }\n  else if (((int)(value2 << 0x19) < 0) && ((int)(value1 << 0x19) < 0)) {\n    ptr2[3] = ptr2[3] & 0xffffffbf;\n    if (*(char *)((int)data + 0x39) == '2') {\n      uValue = 0x22;\n    }\n    else {\n      uValue = 1;\n    }\n    *(undefined *)((int)data + 0x39) = uValue;\n    FUNC_0800290a(data);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800299a": "process_data_0800299a",
                "param_1": "data",
                "uVar1": "value1",
                "sVar2": "counter",
                "uVar3": "value2",
                "puVar4": "ptr1",
                "uVar5": "uValue",
                "puVar6": "ptr2",
                "uVar7": "flag",
                "bVar8": "isNegative"
            },
            "calling": [],
            "called": [
                "FUN_08002998",
                "FUN_0800290a",
                "FUN_0800290c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ad0": {
            "entrypoint": "0x08002ad0",
            "current_name": "initialize_mpu9250_08002ad0",
            "code": "\nvoid initializeMPU9250_08002ad0(void)\n\n{\n  FUN_0800407c(0xd0,0x75,\"../Src/MPU9250.c\",0x3b);\n  FUN_0800403c(0xd0,0x6b,0x80,1);\n  FUN_0800403c(0xd0,0x6b,1);\n  FUN_0800403c(0xd0,0x6c,0,1);\n  FUN_0800403c(0xd0,0x19,0,1);\n  FUN_0800403c(0xd0,0x1d,3,1);\n  FUN_0800403c(0xd0,0x1a,3,1);\n  FUN_0800403c(0xd0,0x1b,0x10,1);\n  FUN_0800403c(0xd0,0x1c,8,1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ad0": "initialize_mpu9250_08002ad0"
            },
            "calling": [
                "FUN_08002ea0"
            ],
            "called": [
                "FUN_0800407c",
                "FUN_0800403c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002b48": {
            "entrypoint": "0x08002b48",
            "current_name": "initialize_mpu_08002b48",
            "code": "\nvoid initializeMPU_08002b48(void)\n\n{\n  undefined4 returnValue;\n  uint inputValue;\n  int tempVar1;\n  int tempVar2;\n  undefined4 result1;\n  undefined4 result2;\n  \n  result1 = 0;\n  result2 = inputValue & 0xffff0000;\n  FUN_080040e8(0xd0,0x3b,&result1,6,\"../Src/MPU9250.c\",0x58);\n  DAT_200002f6 = CONCAT11(result1._2_1_,result1._3_1_);\n  DAT_200002f4 = CONCAT11((undefined)result1,result1._1_1_);\n  DAT_200002f8 = CONCAT11((undefined)result2,result2._1_1_);\n  tempVar2 = (int)DAT_200002f6;\n  tempVar1 = (int)DAT_200002f8;\n  returnValue = FUN_08000c44();\n  returnValue = FUN_08000cec(returnValue,0x40800000);\n  DAT_200002d0 = FUN_08000cec(returnValue,0x38000000);\n  returnValue = FUN_08000c44(tempVar2);\n  returnValue = FUN_08000cec(returnValue,0x40800000);\n  DAT_200002d4 = FUN_08000cec(returnValue,0x38000000);\n  returnValue = FUN_08000c44(tempVar1);\n  returnValue = FUN_08000cec(returnValue,0x40800000);\n  DAT_200002d8 = FUN_08000cec(returnValue,0x38000000);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002b48": "initialize_mpu_08002b48",
                "in_r3": "inputValue",
                "iVar2": "tempVar1",
                "iVar3": "tempVar2",
                "local_18": "result1",
                "local_14": "result2",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08002f28"
            ],
            "called": [
                "FUN_08000c44",
                "FUN_08000cec",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002bf0": {
            "entrypoint": "0x08002bf0",
            "current_name": "initialize_mpu9250_08002bf0",
            "code": "\nvoid initializeMPU9250_08002bf0(void)\n\n{\n  undefined4 result;\n  int dataValueValue;\n  int dataBufferValue;\n  undefined4 dataBuffer;\n  undefined2 dataValue;\n  \n  dataBuffer = 0;\n  dataValue = 0;\n  FUN_080040e8(0xd0,0x43,&dataBuffer,6,\"../Src/MPU9250.c\",0x7b);\n  DAT_200002c0 = CONCAT11(dataBuffer._2_1_,dataBuffer._3_1_);\n  DAT_200002be = CONCAT11((undefined)dataBuffer,dataBuffer._1_1_);\n  DAT_200002c2 = CONCAT11((undefined)dataValue,dataValue._1_1_);\n  dataBufferValue = (int)DAT_200002c0;\n  dataValueValue = (int)DAT_200002c2;\n  result = FUN_08000c44();\n  result = FUN_08000cec(result,0x447a0000);\n  result = FUN_08000cec(result,0x38000000);\n  DAT_200002c4 = FUN_08000ad8(result,DAT_20000000);\n  result = FUN_08000c44(dataBufferValue);\n  result = FUN_08000cec(result,0x447a0000);\n  result = FUN_08000cec(result,0x38000000);\n  DAT_200002c8 = FUN_08000ad8(result,DAT_20000004);\n  result = FUN_08000c44(dataValueValue);\n  result = FUN_08000cec(result,0x447a0000);\n  result = FUN_08000cec(result,0x38000000);\n  DAT_200002cc = FUN_08000ad8(result,DAT_20000008);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002bf0": "initialize_mpu9250_08002bf0",
                "local_20": "dataBuffer",
                "local_1c": "dataValue",
                "iVar3": "dataBufferValue",
                "iVar2": "dataValueValue",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08002f28"
            ],
            "called": [
                "FUN_08000ad8",
                "FUN_08000c44",
                "FUN_08000cec",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002cb0": {
            "entrypoint": "0x08002cb0",
            "current_name": "initialize_mpu9250_08002cb0",
            "code": "\nvoid initializeMPU9250_08002cb0(undefined4 param1,undefined4 param2,undefined4 param3,uint param4)\n\n{\n  undefined4 value;\n  uint param4Modified;\n  \n  param4Modified = param4;\n  FUN_0800403c(0xd0,0x37,0x22,1,param1,param2,param3);\n  FUN_0800403c(0xd0,0x6a,1);\n  FUN_0800407c(0x18,0,\"../Src/MPU9250.c\",0xad);\n  FUN_0800403c(0x18,0xb,1);\n  FUN_0800403c(0x18,10,0,1);\n  FUN_0800403c(0x18,10,0xf,1);\n  FUN_080040e8(0x18,0x10,&param4Modified,3,\"../Src/MPU9250.c\",0xb6);\n  value = FUN_08000c44((param4Modified & 0xff) - 0x80);\n  value = FUN_08000cec(value,0x3b800000);\n  DAT_200002e8 = FUN_08000adc(value,0x3f800000);\n  value = FUN_08000c44((param4Modified >> 8 & 0xff) - 0x80);\n  value = FUN_08000cec(value,0x3b800000);\n  DAT_200002ec = FUN_08000adc(value,0x3f800000);\n  value = FUN_08000c44((param4Modified >> 0x10 & 0xff) - 0x80);\n  value = FUN_08000cec(value,0x3b800000);\n  DAT_200002f0 = FUN_08000adc(value,0x3f800000);\n  FUN_0800403c(0x18,10,0,1);\n  FUN_0800403c(0x18,10,0x16,1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002cb0": "initialize_mpu9250_08002cb0",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "value",
                "local_c": "param4Modified"
            },
            "calling": [
                "FUN_08002ea0"
            ],
            "called": [
                "FUN_0800407c",
                "FUN_0800403c",
                "FUN_08000c44",
                "FUN_08000cec",
                "FUN_080040e8",
                "FUN_08000adc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002d88": {
            "entrypoint": "0x08002d88",
            "current_name": "initialize_mpu9250_08002d88",
            "code": "\nvoid initializeMPU9250_08002d88(undefined4 param1,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int result1;\n  undefined4 result2;\n  undefined4 result3;\n  int result4;\n  undefined2 zero;\n  undefined zero1;\n  undefined zero2;\n  undefined zero3;\n  undefined zero4;\n  byte zero5;\n  undefined param4_high_byte;\n  \n  param4_high_byte = (undefined)((uint)param4 >> 0x18);\n  zero = 0;\n  zero1 = 0;\n  zero2 = 0;\n  zero3 = 0;\n  zero4 = 0;\n  zero5 = 0;\n  result1 = FUN_0800407c(0x18,2,\"../Src/MPU9250.c\",0xd7,param1,param2);\n  if (result1 << 0x1f < 0) {\n    FUN_080040e8(0x18,3,&zero,7,\"../Src/MPU9250.c\",0xda);\n    result3 = DAT_2000001c;\n    if ((int)((uint)zero5 << 0x1c) < 0) {\n      DAT_200013b9._2_2_ = DAT_200013b9._2_2_ + 1;\n    }\n    else {\n      DAT_200002ba = CONCAT11(zero2,zero1);\n      DAT_200002bc = CONCAT11(zero4,zero3);\n      result4 = (int)DAT_200002ba;\n      result1 = (int)DAT_200002bc;\n      DAT_200002b8 = zero;\n      result2 = FUN_08000c44();\n      result2 = FUN_08000cec(result2,result3);\n      result2 = FUN_08000cec(result2,DAT_200002e8);\n      result2 = FUN_08000ad8(result2,DAT_20000020);\n      DAT_200002dc = FUN_08000cec(result2,DAT_2000002c);\n      result2 = FUN_08000c44(result4);\n      result2 = FUN_08000cec(result2,result3);\n      result2 = FUN_08000cec(result2,DAT_200002ec);\n      result2 = FUN_08000ad8(result2,DAT_20000024);\n      DAT_200002e0 = FUN_08000cec(result2,DAT_20000030);\n      result2 = FUN_08000c44(result1);\n      result3 = FUN_08000cec(result2,result3);\n      result3 = FUN_08000cec(result3,DAT_200002f0);\n      result3 = FUN_08000ad8(result3,DAT_20000028);\n      DAT_200002e4 = FUN_08000cec(result3,DAT_20000034);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002d88": "initialize_mpu9250_08002d88",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uStack_21": "param4_high_byte",
                "local_28": "zero",
                "uStack_26": "zero1",
                "uStack_25": "zero2",
                "local_24": "zero3",
                "local_23": "zero4",
                "local_22": "zero5",
                "iVar1": "result1",
                "uVar2": "result2",
                "uVar3": "result3",
                "iVar4": "result4"
            },
            "calling": [
                "FUN_08002f28"
            ],
            "called": [
                "FUN_0800407c",
                "FUN_08000ad8",
                "FUN_08000c44",
                "FUN_08000cec",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ea0": {
            "entrypoint": "0x08002ea0",
            "current_name": "initialize_and_perform_operations_08002ea0",
            "code": "\nvoid initializeAndPerformOperations_08002ea0(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  undefined4 extra_return_value;\n  \n  FUN_08002ad0();\n  FUN_08002cb0();\n  FUN_08003314(0x3f19999a);\n  FUN_08003320(0,extra_return_value,arg3,arg4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ea0": "initialize_and_perform_operations_08002ea0",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "extraout_r1": "extra_return_value"
            },
            "calling": [
                "FUN_08004194"
            ],
            "called": [
                "FUN_08002ad0",
                "FUN_08002cb0",
                "FUN_08003320",
                "FUN_08003314"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ec0": {
            "entrypoint": "0x08002ec0",
            "current_name": "calculate_result_08002ec0",
            "code": "\nvoid calculateResult_08002ec0(void)\n\n{\n  undefined4 result1;\n  undefined4 constant1;\n  undefined4 constant2;\n  \n  constant1 = DAT_2000024c;\n  constant2 = DAT_20000010;\n  result1 = FUN_08000ad8(0x3f800000,DAT_20000010);\n  constant1 = FUN_08000cec(result1,constant1);\n  constant2 = FUN_08000cec(constant2,DAT_2000000c);\n  DAT_2000000c = FUN_08000adc(constant2,constant1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ec0": "calculate_result_08002ec0",
                "uVar1": "result1",
                "uVar2": "constant1",
                "uVar3": "constant2"
            },
            "calling": [
                "FUN_08004a84",
                "FUN_08002f28"
            ],
            "called": [
                "FUN_08000ad8",
                "FUN_08000cec",
                "FUN_08000adc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ed4": {
            "entrypoint": "0x08002ed4",
            "current_name": "calculate_result_08002ed4",
            "code": "\nvoid calculateResult_08002ed4(void)\n\n{\n  undefined4 result1;\n  undefined4 constant1;\n  undefined4 constant2;\n  \n  constant1 = DAT_20000248;\n  constant2 = uRam20000018;\n  result1 = FUN_08000ad8(0x3f800000,uRam20000018);\n  constant1 = FUN_08000cec(result1,constant1);\n  constant2 = FUN_08000cec(constant2,uRam20000014);\n  uRam20000014 = FUN_08000adc(constant2,constant1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ed4": "calculate_result_08002ed4",
                "uVar1": "result1",
                "uVar2": "constant1",
                "uVar3": "constant2"
            },
            "calling": [
                "FUN_08004a84",
                "FUN_08002f28"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ee8": {
            "entrypoint": "0x08002ee8",
            "current_name": "execute_system_operation_08002ee8",
            "code": "\nvoid executeSystemOperation_08002ee8(void)\n\n{\n  undefined4 dataValue;\n  int resultCode;\n  \n  dataValue = DAT_20000250;\n  resultCode = FUN_08001050(DAT_20000250,0xc3340000);\n  if ((resultCode != 0) && (resultCode = FUN_08001028(dataValue,0x42b40000), resultCode != 0)) {\n    FUN_08000adc(dataValue,0x42b40000);\n    return;\n  }\n  FUN_08000ad8(dataValue,0x43870000);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ee8": "execute_system_operation_08002ee8",
                "uVar1": "dataValue",
                "iVar2": "resultCode"
            },
            "calling": [
                "FUN_08004a84",
                "FUN_08002f28"
            ],
            "called": [
                "FUN_08000ad8",
                "FUN_08001050",
                "FUN_08001028",
                "FUN_08000adc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f28": {
            "entrypoint": "0x08002f28",
            "current_name": "initialize_system_08002f28",
            "code": "\n\n\nvoid initializeSystem_08002f28(void)\n\n{\n  undefined4 returnValue;\n  \n  FUN_08002b48();\n  FUN_08002bf0();\n  FUN_08002d88();\n  DAT_20000258 = thunk_FUN_0800115c();\n  returnValue = FUN_08000c3c(DAT_20000258 - DAT_20000254);\n  FUN_08000e54(returnValue,0x447a0000);\n  FUN_08003320();\n  DAT_20000254 = DAT_20000258;\n  FUN_08003330(DAT_200002d4 + -0x80000000,DAT_200002d0 + -0x80000000,DAT_200002d8,DAT_200002c8,\n               DAT_200002c4,DAT_200002cc + -0x80000000,DAT_200002dc,DAT_200002e0,DAT_200002e4,\n               &DAT_20000248);\n  _DAT_2000142a = (undefined2)((uint)(int)DAT_200002f4 / 100);\n  _DAT_2000142e = (undefined2)((uint)(int)DAT_200002f8 / 100);\n  DAT_2000142c = (undefined2)((uint)(int)DAT_200002f6 / 100);\n  DAT_20001430 = DAT_200002be;\n  _DAT_20001432 = DAT_200002c0;\n  DAT_20001434 = DAT_200002c2;\n  _DAT_20001436 = DAT_200002b8;\n  DAT_20001438 = DAT_200002ba;\n  DAT_2000143a = DAT_200002bc;\n  returnValue = FUN_08002ed4();\n  FUN_08000cec(returnValue,0x41200000);\n  DAT_20001395._0_2_ = FUN_08001078();\n  returnValue = FUN_08002ec0();\n  FUN_08000cec(returnValue,0x41200000);\n  DAT_20001395._2_2_ = FUN_08001078();\n  FUN_08002ee8();\n  DAT_20001399 = FUN_08001078();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f28": "initialize_system_08002f28",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_08000e54",
                "FUN_08000c3c",
                "FUN_08002ee8",
                "FUN_08000cec",
                "FUN_08003320",
                "FUN_08002bf0",
                "FUN_08002ed4",
                "FUN_08002b48",
                "thunk_FUN_0800115c",
                "FUN_08002d88",
                "FUN_08003330",
                "FUN_08001078",
                "FUN_08002ec0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003034": {
            "entrypoint": "0x08003034",
            "current_name": "retrieve_sensor_data_08003034",
            "code": "\nuint retrieveSensorData_08003034(undefined4 sensorAddress,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined4 sensorData;\n  \n  sensorData = param4;\n  FUN_080040b8(0xee,0,&sensorData,3,\"../Src/MS5611.c\",0x8c,param3);\n  return (uint)CONCAT12((undefined)sensorData,CONCAT11(sensorData._1_1_,sensorData._2_1_));\n}\n\n",
            "renaming": {
                "FUN_08003034": "retrieve_sensor_data_08003034",
                "param_1": "sensorAddress",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "local_c": "sensorData"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_080040b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003068": {
            "entrypoint": "0x08003068",
            "current_name": "get_data_08003068",
            "code": "\nundefined4 get_data_08003068(void)\n\n{\n  return DAT_200002fc;\n}\n\n",
            "renaming": {
                "FUN_08003068": "get_data_08003068"
            },
            "calling": [
                "FUN_08004a30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003298": {
            "entrypoint": "0x08003298",
            "current_name": "initialize_sensor_data_08003298",
            "code": "\nvoid initializeSensorData_08003298(void)\n\n{\n  int index;\n  undefined byte1;\n  undefined byte2;\n  \n  index = 0;\n  FUN_0800403c(0xee,0x1e,1);\n  thunk_FUNC_08001168(10);\n  DAT_20000038 = 8;\n  do {\n    byte1 = 0;\n    byte2 = 0;\n    FUN_080040e8(0xee,index + 0xa0U & 0xffff,&byte1,2,\"../Src/MS5611.c\",0x7c);\n    *(ushort *)((int)&DAT_2000025c + index) = CONCAT11(byte1,byte2);\n    index = index + 2;\n  } while (index != 0x10);\n  index = 0;\n  do {\n    (&DAT_20000300)[index] = 0;\n    index = index + 1;\n  } while (index != 0x14);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003298": "initialize_sensor_data_08003298",
                "local_1c": "byte1",
                "local_1b": "byte2",
                "iVar1": "index"
            },
            "calling": [
                "FUN_08004194"
            ],
            "called": [
                "FUN_0800403c",
                "thunk_FUN_08001168",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003314": {
            "entrypoint": "0x08003314",
            "current_name": "set_param_value_08003314",
            "code": "\nvoid setParamValue_08003314(undefined4 value)\n\n{\n  DAT_2000035c = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003314": "set_param_value_08003314",
                "param_1": "value"
            },
            "calling": [
                "FUN_08002ea0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003320": {
            "entrypoint": "0x08003320",
            "current_name": "initialize_data_08003320",
            "code": "\nvoid initializeData_08003320(undefined4 inputData)\n\n{\n  DAT_20000360 = inputData;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003320": "initialize_data_08003320",
                "param_1": "inputData"
            },
            "calling": [
                "FUN_08002ea0",
                "FUN_08002f28"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003330": {
            "entrypoint": "0x08003330",
            "current_name": "process_data_08003330",
            "code": "\nvoid processData_08003330(undefined4 value1,undefined4 value2,undefined4 value3,undefined4 ptr1,\n                 undefined4 ptr2,undefined4 ptr3,undefined4 value4,undefined4 value5,\n                 undefined4 value6,undefined4 *resultArray)\n\n{\n  undefined4 var1;\n  undefined4 var2;\n  int var3;\n  undefined4 var4;\n  undefined4 var5;\n  undefined4 var6;\n  undefined4 var7;\n  int var8;\n  undefined4 var9;\n  undefined4 var10;\n  undefined4 var11;\n  undefined4 var12;\n  undefined4 var13;\n  undefined4 var14;\n  undefined4 var15;\n  undefined4 var16;\n  undefined4 var17;\n  undefined4 var18;\n  int var19;\n  undefined4 var20;\n  undefined4 var21;\n  undefined4 var22;\n  undefined4 var23;\n  undefined4 var24;\n  undefined4 var25;\n  int var26;\n  undefined4 var27;\n  undefined4 var28;\n  undefined4 var29;\n  int var30;\n  undefined8 result1;\n  undefined8 result2;\n  \n  var29 = DAT_20000048;\n  var28 = DAT_20000044;\n  var30 = DAT_20000040;\n  var27 = DAT_2000003c;\n  var1 = FUN_08000cec(value1,value1);\n  var2 = FUN_08000cec(value2);\n  var1 = FUN_08000adc(var1,var2);\n  var2 = FUN_08000cec(value3);\n  FUN_08000adc(var1,var2);\n  FUN_08000428();\n  FUN_08005bc8();\n  var1 = FUN_08000a30();\n  var3 = FUN_08001014(var1,0);\n  if (var3 == 0) {\n    var2 = FUN_08000cec(value4);\n    var4 = FUN_08000cec(value5);\n    var2 = FUN_08000adc(var2,var4);\n    var4 = FUN_08000cec(value6);\n    FUN_08000adc(var2,var4);\n    FUN_08000428();\n    FUN_08005bc8();\n    var2 = FUN_08000a30();\n    var3 = FUN_08001014(var2,0);\n    if (var3 == 0) {\n      result1 = FUN_08000428(ptr1);\n      FUN_080004d0((int)result1,(int)((ulonglong)result1 >> 0x20),0xa2529d39,0x3f91df46);\n      var4 = FUN_08000a30();\n      result1 = FUN_08000428(ptr2);\n      FUN_080004d0((int)result1,(int)((ulonglong)result1 >> 0x20),0xa2529d39,0x3f91df46);\n      var5 = FUN_08000a30();\n      result1 = FUN_08000428(ptr3);\n      FUN_080004d0((int)result1,(int)((ulonglong)result1 >> 0x20),0xa2529d39,0x3f91df46);\n      var6 = FUN_08000a30();\n      var3 = FUN_08000adc(var27);\n      var7 = FUN_08000adc(var30);\n      var8 = FUN_08000adc(var28,var28);\n      var9 = FUN_08000adc(var29,var29);\n      var10 = FUN_08000cec(var27);\n      var11 = FUN_08000cec(var27,var30);\n      var12 = FUN_08000cec(var27,var28);\n      var13 = FUN_08000cec(var30);\n      var14 = FUN_08000cec(var30,var29);\n      var15 = FUN_08000cec(var28,var28);\n      var16 = FUN_08000cec(var29,var29);\n      var1 = FUN_08000e54(0x3f800000,var1);\n      var2 = FUN_08000e54(0x3f800000,var2);\n      var17 = FUN_08000cec(value4,var2);\n      var18 = FUN_08000cec(value5,var2);\n      var2 = FUN_08000cec(value6,var2);\n      var19 = FUN_08000cec(var3,var17);\n      var20 = FUN_08000cec(var3,var18);\n      var21 = FUN_08000cec(var3,var2);\n      var22 = FUN_08000cec(var7,var17);\n      var23 = FUN_08000cec(var10,var17);\n      var24 = FUN_08000cec(var29,var20);\n      var23 = FUN_08000ad8(var23,var24);\n      var24 = FUN_08000cec(var28,var21);\n      var23 = FUN_08000adc(var23,var24);\n      var24 = FUN_08000cec(var13,var17);\n      var23 = FUN_08000adc(var23,var24);\n      var24 = FUN_08000cec(var7,var18);\n      var24 = FUN_08000cec(var24,var28);\n      var23 = FUN_08000adc(var23,var24);\n      var24 = FUN_08000cec(var7,var2);\n      var24 = FUN_08000cec(var24,var29);\n      var23 = FUN_08000adc(var23,var24);\n      var24 = FUN_08000cec(var15,var17);\n      var23 = FUN_08000ad8(var23,var24);\n      var24 = FUN_08000cec(var16,var17);\n      var23 = FUN_08000ad8(var23,var24);\n      var24 = FUN_08000cec(var29,var19);\n      var25 = FUN_08000cec(var10,var18);\n      var24 = FUN_08000adc(var24,var25);\n      var21 = FUN_08000cec(var30,var21);\n      var21 = FUN_08000ad8(var24,var21);\n      var24 = FUN_08000cec(var28,var22);\n      var21 = FUN_08000adc(var21,var24);\n      var24 = FUN_08000cec(var13,var18);\n      var21 = FUN_08000ad8(var21,var24);\n      var24 = FUN_08000cec(var15,var18);\n      var21 = FUN_08000adc(var21,var24);\n      var24 = FUN_08000cec(var8,var2);\n      var24 = FUN_08000cec(var24,var29);\n      var21 = FUN_08000adc(var21,var24);\n      var24 = FUN_08000cec(var16,var18);\n      var21 = FUN_08000ad8(var21,var24);\n      var23 = FUN_08000cec(var23,var23);\n      var21 = FUN_08000cec(var21,var21);\n      FUN_08000adc(var23,var21);\n      FUN_08000428();\n      FUN_08005bc8();\n      var26 = FUN_08000a30();\n      var21 = FUN_08000cec(var19 + -0x80000000,var28);\n      var20 = FUN_08000cec(var30,var20);\n      var20 = FUN_08000adc(var21,var20);\n      var10 = FUN_08000cec(var10,var2);\n      var10 = FUN_08000adc(var20,var10);\n      var20 = FUN_08000cec(var29,var22);\n      var10 = FUN_08000adc(var10,var20);\n      var20 = FUN_08000cec(var13,var2);\n      var10 = FUN_08000ad8(var10,var20);\n      var20 = FUN_08000cec(var8,var18);\n      var20 = FUN_08000cec(var20,var29);\n      var10 = FUN_08000adc(var10,var20);\n      var20 = FUN_08000cec(var15,var2);\n      var10 = FUN_08000ad8(var10,var20);\n      var20 = FUN_08000cec(var16,var2);\n      var10 = FUN_08000adc(var10,var20);\n      var20 = FUN_08000adc(var10,var10);\n      var21 = FUN_08000adc(var14);\n      var22 = FUN_08000cec(var28,var3);\n      var21 = FUN_08000ad8(var21,var22);\n      var22 = FUN_08000cec(value1,var1);\n      var21 = FUN_08000ad8(var21,var22);\n      var22 = FUN_08000cec(var29,var8);\n      var23 = FUN_08000adc(var11);\n      var22 = FUN_08000adc(var22,var23);\n      var23 = FUN_08000cec(value2,var1);\n      var22 = FUN_08000ad8(var22,var23);\n      var23 = FUN_08000cec(var28,var10);\n      var24 = FUN_08000ad8(0x3f000000,var15);\n      var16 = FUN_08000ad8(var24,var16);\n      var16 = FUN_08000cec(var16,var26);\n      var24 = FUN_08000ad8(var14,var12);\n      var24 = FUN_08000cec(var24,var10);\n      var16 = FUN_08000adc(var16,var24);\n      var16 = FUN_08000ad8(var16,var17);\n      var17 = FUN_08000cec(var30,var10);\n      var24 = FUN_08000cec(var30,var28);\n      var25 = FUN_08000cec(var27,var29);\n      var24 = FUN_08000ad8(var24,var25);\n      var24 = FUN_08000cec(var24,var26);\n      var25 = FUN_08000cec(var28,var29);\n      var11 = FUN_08000adc(var25,var11);\n      var11 = FUN_08000cec(var11,var10);\n      var11 = FUN_08000adc(var24,var11);\n      var11 = FUN_08000ad8(var11,var18);\n      var18 = FUN_08000cec(var28,var26);\n      var24 = FUN_08000ad8(0x3f000000,var13);\n      var24 = FUN_08000ad8(var24,var15);\n      var24 = FUN_08000cec(var24,var10);\n      var12 = FUN_08000adc(var12,var14);\n      var12 = FUN_08000cec(var12,var26);\n      var12 = FUN_08000adc(var24,var12);\n      var2 = FUN_08000ad8(var12,var2);\n      var12 = FUN_08000cec(var8 + -0x80000000,var21);\n      var14 = FUN_08000cec(var7,var22);\n      var12 = FUN_08000adc(var12,var14);\n      var14 = FUN_08000cec(var23,var16);\n      var12 = FUN_08000ad8(var12,var14);\n      var14 = FUN_08000cec(var29,var26 + -0x80000000);\n      var14 = FUN_08000adc(var14,var17);\n      var14 = FUN_08000cec(var14,var11);\n      var12 = FUN_08000adc(var12,var14);\n      var14 = FUN_08000cec(var18,var2);\n      var12 = FUN_08000adc(var12,var14);\n      var13 = FUN_08000adc(var13);\n      var13 = FUN_08000ad8(0x3f800000,var13);\n      var14 = FUN_08000adc(var15);\n      var13 = FUN_08000ad8(var13,var14);\n      var1 = FUN_08000cec(value3,var1);\n      var1 = FUN_08000ad8(var13,var1);\n      var13 = FUN_08000cec(var29,var10);\n      var10 = FUN_08000cec(var27,var10);\n      var14 = FUN_08000cec(var9,var21);\n      var15 = FUN_08000cec(var3,var22);\n      var14 = FUN_08000adc(var14,var15);\n      var15 = FUN_08000cec(var30,0x40800000);\n      var15 = FUN_08000cec(var15,var1);\n      var14 = FUN_08000ad8(var14,var15);\n      var15 = FUN_08000cec(var16,var13);\n      var14 = FUN_08000adc(var14,var15);\n      var15 = FUN_08000adc(var18,var10);\n      var15 = FUN_08000cec(var15,var11);\n      var14 = FUN_08000adc(var14,var15);\n      var15 = FUN_08000cec(var29,var26);\n      var18 = FUN_08000cec(var30,var20);\n      var15 = FUN_08000ad8(var15,var18);\n      var15 = FUN_08000cec(var15,var2);\n      var14 = FUN_08000adc(var14,var15);\n      var19 = FUN_08000adc(var26,var26);\n      var15 = FUN_08000cec(var30,var26);\n      var18 = FUN_08000cec(var3 + -0x80000000,var21);\n      var9 = FUN_08000cec(var9,var22);\n      var9 = FUN_08000adc(var18,var9);\n      var18 = FUN_08000cec(var28,0x40800000);\n      var1 = FUN_08000cec(var18,var1);\n      var1 = FUN_08000ad8(var9,var1);\n      var9 = FUN_08000cec(var28,var19 + -0x80000000);\n      var9 = FUN_08000ad8(var9,var10);\n      var9 = FUN_08000cec(var9,var16);\n      var1 = FUN_08000adc(var1,var9);\n      var9 = FUN_08000adc(var13,var15);\n      var9 = FUN_08000cec(var9,var11);\n      var1 = FUN_08000adc(var1,var9);\n      var9 = FUN_08000cec(var27,var26);\n      var10 = FUN_08000cec(var28,var20);\n      var9 = FUN_08000ad8(var9,var10);\n      var9 = FUN_08000cec(var9,var2);\n      var9 = FUN_08000adc(var1,var9);\n      var1 = FUN_08000cec(var7,var21);\n      var7 = FUN_08000cec(var8,var22);\n      var1 = FUN_08000adc(var1,var7);\n      var7 = FUN_08000cec(var29,var19 + -0x80000000);\n      var7 = FUN_08000adc(var7,var17);\n      var7 = FUN_08000cec(var7,var16);\n      var1 = FUN_08000adc(var1,var7);\n      var7 = FUN_08000cec(var27,var26 + -0x80000000);\n      var7 = FUN_08000adc(var7,var23);\n      var7 = FUN_08000cec(var7,var11);\n      var1 = FUN_08000adc(var1,var7);\n      var2 = FUN_08000cec(var2,var15);\n      var7 = FUN_08000adc(var1,var2);\n      var1 = FUN_08000cec(var12);\n      var2 = FUN_08000cec(var14);\n      var1 = FUN_08000adc(var1,var2);\n      var2 = FUN_08000cec(var9,var9);\n      var1 = FUN_08000adc(var1,var2);\n      var2 = FUN_08000cec(var7,var7);\n      FUN_08000adc(var1,var2);\n      FUN_08000428();\n      FUN_08005bc8();\n      var1 = FUN_08000a30();\n      var10 = FUN_08000e54(0x3f800000,var1);\n      var1 = DAT_2000035c;\n      var2 = FUN_08000cec(var30 + -0x80000000,var4);\n      var11 = FUN_08000cec(var28,var5);\n      var2 = FUN_08000ad8(var2,var11);\n      var11 = FUN_08000cec(var29,var6);\n      var2 = FUN_08000ad8(var2,var11);\n      var11 = FUN_08000cec(var2,0x3f000000);\n      var12 = FUN_08000cec(var12,var10);\n      var2 = DAT_20000360;\n      var12 = FUN_08000cec(var12,var1);\n      var11 = FUN_08000ad8(var11,var12);\n      var2 = FUN_08000cec(var11,var2);\n      var11 = FUN_08000adc(var2,var27);\n      var12 = FUN_08000cec(var27,var4);\n      var13 = FUN_08000cec(var28,var6);\n      var2 = DAT_20000360;\n      var12 = FUN_08000adc(var12,var13);\n      var13 = FUN_08000cec(var29,var5);\n      var12 = FUN_08000ad8(var12,var13);\n      var12 = FUN_08000cec(var12,0x3f000000);\n      var13 = FUN_08000cec(var14,var10);\n      var13 = FUN_08000cec(var13,var1);\n      var12 = FUN_08000ad8(var12,var13);\n      var2 = FUN_08000cec(var12,var2);\n      var12 = FUN_08000adc(var2,var30);\n      var2 = DAT_20000360;\n      var13 = FUN_08000cec(var27,var5);\n      var14 = FUN_08000cec(var30,var6);\n      var13 = FUN_08000ad8(var13,var14);\n      var14 = FUN_08000cec(var29,var4);\n      var13 = FUN_08000adc(var13,var14);\n      var13 = FUN_08000cec(var13,0x3f000000);\n      var9 = FUN_08000cec(var9,var10);\n      var9 = FUN_08000cec(var9,var1);\n      var9 = FUN_08000ad8(var13,var9);\n      var2 = FUN_08000cec(var9,var2);\n      var2 = FUN_08000adc(var2,var28);\n      var27 = FUN_08000cec(var27,var6);\n      var5 = FUN_08000cec(var30,var5);\n      var27 = FUN_08000adc(var27,var5);\n      var28 = FUN_08000cec(var28,var4);\n      var27 = FUN_08000ad8(var27,var28);\n      var28 = FUN_08000cec(var27,0x3f000000);\n      var27 = FUN_08000cec(var7,var10);\n      var1 = FUN_08000cec(var27,var1);\n      var27 = DAT_20000360;\n      var28 = FUN_08000ad8(var28,var1);\n      var27 = FUN_08000cec(var28,var27);\n      var27 = FUN_08000adc(var27,var29);\n      var28 = FUN_08000cec(var11,var11);\n      var29 = FUN_08000cec(var12,var12);\n      var28 = FUN_08000adc(var28,var29);\n      var29 = FUN_08000cec(var2,var2);\n      var28 = FUN_08000adc(var28,var29);\n      var29 = FUN_08000cec(var27,var27);\n      FUN_08000adc(var28,var29);\n      FUN_08000428();\n      FUN_08005bc8();\n      var28 = FUN_08000a30();\n      var28 = FUN_08000e54(0x3f800000,var28);\n      var29 = FUN_08000cec(var11,var28);\n      DAT_2000003c = var29;\n      var30 = FUN_08000cec(var12,var28);\n      DAT_20000040 = var30;\n      var1 = FUN_08000cec(var2,var28);\n      DAT_20000044 = var1;\n      DAT_20000048 = FUN_08000cec(var27,var28);\n      var27 = FUN_08000cec(var30,DAT_20000048);\n      var28 = FUN_08000cec(var29,var1);\n      var27 = FUN_08000ad8(var27,var28);\n      FUN_08000adc(var27,var27);\n      FUN_08000428();\n      result1 = FUN_08005854();\n      result1 = FUN_080004d0((int)result1,(int)((ulonglong)result1 >> 0x20),0,0x40668000);\n      FUN_08000724((int)result1,(int)((ulonglong)result1 >> 0x20),0x54442d18,0x400921fb);\n      var27 = FUN_08000a30();\n      *resultArray = var27;\n      var30 = DAT_20000040;\n      var27 = DAT_2000003c;\n      var28 = FUN_08000cec(DAT_2000003c,DAT_2000003c);\n      var29 = FUN_08000cec(var30,var30);\n      var29 = FUN_08000ad8(var28,var29);\n      var28 = DAT_20000044;\n      var1 = FUN_08000cec(DAT_20000044,DAT_20000044);\n      var1 = FUN_08000ad8(var29,var1);\n      var29 = DAT_20000048;\n      var2 = FUN_08000cec(DAT_20000048,DAT_20000048);\n      FUN_08000adc(var1,var2);\n      result1 = FUN_08000428();\n      var27 = FUN_08000cec(var27,var30);\n      var28 = FUN_08000cec(var28,var29);\n      var27 = FUN_08000adc(var27,var28);\n      FUN_08000adc(var27,var27);\n      result2 = FUN_08000428();\n      result1 = thunk_FUN_08006070((int)result2,(int)((ulonglong)result2 >> 0x20),(int)result1,\n                                  (int)((ulonglong)result1 >> 0x20));\n      result1 = FUN_080004d0((int)result1,(int)((ulonglong)result1 >> 0x20),0,0x40668000);\n      FUN_08000724((int)result1,(int)((ulonglong)result1 >> 0x20),0x54442d18,0x400921fb);\n      var27 = FUN_08000a30();\n      resultArray[1] = var27;\n      var30 = DAT_20000040;\n      var27 = DAT_2000003c;\n      var28 = FUN_08000cec(DAT_2000003c,DAT_2000003c);\n      var29 = FUN_08000cec(var30,var30);\n      var29 = FUN_08000adc(var28,var29);\n      var28 = DAT_20000044;\n      var1 = FUN_08000cec(DAT_20000044,DAT_20000044);\n      var1 = FUN_08000ad8(var29,var1);\n      var29 = DAT_20000048;\n      var2 = FUN_08000cec(DAT_20000048,DAT_20000048);\n      FUN_08000ad8(var1,var2);\n      result1 = FUN_08000428();\n      var28 = FUN_08000cec(var30,var28);\n      var27 = FUN_08000cec(var27,var29);\n      var27 = FUN_08000adc(var28,var27);\n      FUN_08000adc(var27,var27);\n      result2 = FUN_08000428();\n      result1 = thunk_FUN_08006070((int)result2,(int)((ulonglong)result2 >> 0x20),(int)result1,\n                                  (int)((ulonglong)result1 >> 0x20));\n      result1 = FUN_080004d0((int)result1,(int)((ulonglong)result1 >> 0x20),0,0x40668000);\n      FUN_08000724((int)result1,(int)((ulonglong)result1 >> 0x20),0x54442d18,0x400921fb);\n      var27 = FUN_08000a30();\n      resultArray[2] = var27;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003330": "process_data_08003330",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3",
                "param_4": "ptr1",
                "param_5": "ptr2",
                "param_6": "ptr3",
                "param_7": "value4",
                "param_8": "value5",
                "param_9": "value6",
                "param_10": "resultArray",
                "uVar1": "var1",
                "uVar2": "var2",
                "iVar3": "var3",
                "uVar4": "var4",
                "uVar5": "var5",
                "uVar6": "var6",
                "uVar7": "var7",
                "iVar8": "var8",
                "uVar9": "var9",
                "uVar10": "var10",
                "uVar11": "var11",
                "uVar12": "var12",
                "uVar13": "var13",
                "uVar14": "var14",
                "uVar15": "var15",
                "uVar16": "var16",
                "uVar17": "var17",
                "uVar18": "var18",
                "iVar19": "var19",
                "uVar20": "var20",
                "uVar21": "var21",
                "uVar22": "var22",
                "uVar23": "var23",
                "uVar24": "var24",
                "uVar25": "var25",
                "iVar26": "var26",
                "uVar27": "var27",
                "uVar28": "var28",
                "uVar29": "var29",
                "iVar30": "var30",
                "uVar31": "result1",
                "uVar32": "result2"
            },
            "calling": [
                "FUN_08002f28"
            ],
            "called": [
                "FUN_08000ad8",
                "FUN_080004d0",
                "FUN_08001014",
                "FUN_08000e54",
                "thunk_FUN_08006070",
                "FUN_08000a30",
                "FUN_08005854",
                "FUN_08005bc8",
                "FUN_08000cec",
                "FUN_08000428",
                "FUN_08000724",
                "FUN_08000adc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003eb0": {
            "entrypoint": "0x08003eb0",
            "current_name": "shift_left_long_long_08003eb0",
            "code": "\nlonglong shiftLeftLongLong_08003eb0(uint input)\n\n{\n  if (DAT_20000280 == 0) {\n    triggerInterrupt(0x3f);\n    return concatenateLongLong(input,1);\n  }\n  return (ulonglong)input << 0x20;\n}\n\n",
            "renaming": {
                "FUN_08003eb0": "shift_left_long_long_08003eb0",
                "param_1": "input",
                "software_interrupt": "triggerInterrupt",
                "CONCAT44": "concatenateLongLong"
            },
            "calling": [
                "FUN_080041ae"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ec8": {
            "entrypoint": "0x08003ec8",
            "current_name": "increment_and_write_08003ec8",
            "code": "\nundefined4 incrementAndWrite_08003ec8(int baseAddress,undefined data)\n\n{\n  *(short *)(baseAddress + 0x804) = *(short *)(baseAddress + 0x804) + 1;\n  *(undefined *)(baseAddress + (uint)*(ushort *)(baseAddress + 0x802)) = data;\n  *(ushort *)(baseAddress + 0x802) = *(short *)(baseAddress + 0x802) + 1U & 0x7ff;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08003ec8": "increment_and_write_08003ec8",
                "param_1": "baseAddress",
                "param_2": "data"
            },
            "calling": [
                "FUN_08004c30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f3c": {
            "entrypoint": "0x08003f3c",
            "current_name": "check_and_set_flags_08003f3c",
            "code": "\nvoid checkAndSetFlags_08003f3c(int flag1,int flag2,int flag3)\n\n{\n  FUN_08001424(0x40011000,0x8000,flag1 == 0);\n  FUN_08001424(0x40011000,0x4000,flag2 == 0);\n  FUN_08001424(0x40011000,0x2000,flag3 == 0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f3c": "check_and_set_flags_08003f3c",
                "param_1": "flag1",
                "param_2": "flag2",
                "param_3": "flag3"
            },
            "calling": [
                "FUN_08004a84",
                "FUN_08004028"
            ],
            "called": [
                "FUN_08001424"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003fc4": {
            "entrypoint": "0x08003fc4",
            "current_name": "set_param_value_08003fc4",
            "code": "\nvoid setParamValue_08003fc4(undefined4 value)\n\n{\n  *(undefined4 *)(DAT_200014c8 + 0x40) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003fc4": "set_param_value_08003fc4",
                "param_1": "value"
            },
            "calling": [
                "FUN_0800426c",
                "FUN_080041c4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003fd0": {
            "entrypoint": "0x08003fd0",
            "current_name": "set_param_in_memory_08003fd0",
            "code": "\nvoid setParamInMemory_08003fd0(undefined4 newParam)\n\n{\n  *(undefined4 *)(DAT_200014c8 + 0x3c) = newParam;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003fd0": "set_param_in_memory_08003fd0",
                "param_1": "newParam"
            },
            "calling": [
                "FUN_0800426c",
                "FUN_080041c4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003fdc": {
            "entrypoint": "0x08003fdc",
            "current_name": "set_pointer_in_data_structure_08003fdc",
            "code": "\nvoid setPointerInDataStructure_08003fdc(undefined4 value)\n\n{\n  *(undefined4 *)(DAT_200015f8 + 0x38) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003fdc": "set_pointer_in_data_structure_08003fdc",
                "param_1": "value"
            },
            "calling": [
                "FUN_0800426c",
                "FUN_080041c4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003fe8": {
            "entrypoint": "0x08003fe8",
            "current_name": "set_global_data_value_08003fe8",
            "code": "\nvoid setGlobalDataValue_08003fe8(undefined4 newValue)\n\n{\n  *(undefined4 *)(DAT_20001540 + 0x3c) = newValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003fe8": "set_global_data_value_08003fe8",
                "param_1": "newValue"
            },
            "calling": [
                "FUN_0800426c",
                "FUN_080041c4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ff4": {
            "entrypoint": "0x08003ff4",
            "current_name": "initialize_data_08003ff4",
            "code": "\nvoid initializeData_08003ff4(void)\n\n{\n  FUN_08002538(&DAT_200015f8,4);\n  FUN_08002538(&DAT_20001540,8);\n  FUN_08002538(&DAT_200014c8,8);\n  FUN_08002538(&DAT_200014c8,0xc);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003ff4": "initialize_data_08003ff4"
            },
            "calling": [
                "FUN_08004028"
            ],
            "called": [
                "FUN_08002538"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004028": {
            "entrypoint": "0x08004028",
            "current_name": "execute_routine_08004028",
            "code": "\nvoid executeRoutine_08004028(void)\n\n{\n  int loopCounter;\n  \n  FUN_0800458c();\n  FUN_08003ff4();\n  loopCounter = 3;\n  do {\n    FUN_08003f3c(1,0);\n    thunk_FUNC_08001168(100);\n    FUN_08003f3c(0,1);\n    thunk_FUNC_08001168(100);\n    FUN_08003f3c(0,0,1);\n    thunk_FUNC_08001168(100);\n    loopCounter = loopCounter + -1;\n  } while (loopCounter != 0);\n  FUN_08003f3c(1,1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004028": "execute_routine_08004028",
                "iVar1": "loopCounter"
            },
            "calling": [
                "FUN_08004194"
            ],
            "called": [
                "FUN_08003ff4",
                "thunk_FUN_08001168",
                "FUN_08003f3c",
                "FUN_0800458c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800403c": {
            "entrypoint": "0x0800403c",
            "current_name": "initialize_i2_c_communication_0800403c",
            "code": "\nvoid initializeI2CCommunication_0800403c(undefined4 data1,undefined4 data2,undefined flag,int condition)\n\n{\n  int result;\n  undefined buffer [8];\n  \n  buffer[0] = flag;\n  result = FUN_08001828(&DAT_20001504,data1,data2,1,buffer,1,200);\n  if (result != 0) {\n    FUN_08004490(\"../Src/i2c.c\",0x1b);\n  }\n  if (condition != 0) {\n    thunk_FUNC_08001168(0x32);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800403c": "initialize_i2_c_communication_0800403c",
                "param_1": "data1",
                "param_2": "data2",
                "param_3": "flag",
                "param_4": "condition",
                "iVar1": "result",
                "local_14": "buffer"
            },
            "calling": [
                "FUN_08002ad0",
                "FUN_0800411c",
                "FUN_08002cb0",
                "FUN_08003298"
            ],
            "called": [
                "FUN_08004490",
                "FUN_08001828",
                "thunk_FUN_08001168"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800407c": {
            "entrypoint": "0x0800407c",
            "current_name": "check_and_execute_function_0800407c",
            "code": "\nundefined checkAndExecuteFunction_0800407c(undefined4 input1,undefined4 input2,undefined4 output1,undefined4 output2)\n\n{\n  int result;\n  undefined returnValue [8];\n  \n  returnValue[0] = 0;\n  result = FUN_08001938(&DAT_20001504,input1,input2,1,returnValue,1,200);\n  if (result != 0) {\n    FUN_08004490(output1,output2);\n  }\n  return returnValue[0];\n}\n\n",
            "renaming": {
                "FUN_0800407c": "check_and_execute_function_0800407c",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "output1",
                "param_4": "output2",
                "iVar1": "result",
                "local_14": "returnValue"
            },
            "calling": [
                "FUN_08002ad0",
                "FUN_08002d88",
                "FUN_08002cb0",
                "FUN_080040e8"
            ],
            "called": [
                "FUN_08004490",
                "FUN_08001938"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040b8": {
            "entrypoint": "0x080040b8",
            "current_name": "check_data_validity_080040b8",
            "code": "\nvoid checkDataValidity_080040b8(undefined4 dataPointer1,undefined4 dataPointer2,undefined4 param1,undefined4 param2,\n                 undefined4 result1,undefined4 result2)\n\n{\n  int functionStatus;\n  \n  functionStatus = FUN_08001938(&DAT_20001504,dataPointer1,dataPointer2,1,param1,param2,200,param2);\n  if (functionStatus != 0) {\n    FUN_08004490(result1,result2);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080040b8": "check_data_validity_080040b8",
                "param_1": "dataPointer1",
                "param_2": "dataPointer2",
                "param_3": "param1",
                "param_4": "param2",
                "param_5": "result1",
                "param_6": "result2",
                "iVar1": "functionStatus"
            },
            "calling": [
                "FUN_08003034"
            ],
            "called": [
                "FUN_08004490",
                "FUN_08001938"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040e8": {
            "entrypoint": "0x080040e8",
            "current_name": "copy_memory_data_080040e8",
            "code": "\nvoid copyMemoryData_080040e8(undefined4 destination,int source,int size,int count)\n\n{\n  undefined byte;\n  int index;\n  undefined *destPtr;\n  int currentIndex;\n  \n  destPtr = (undefined *)(size + -1);\n  currentIndex = count;\n  for (index = 0; index < count; index = index + 1) {\n    byte = FUN_0800407c(destination,source + index & 0xffff,\"../Src/i2c.c\",0x4c,currentIndex);\n    destPtr = destPtr + 1;\n    *destPtr = byte;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080040e8": "copy_memory_data_080040e8",
                "param_1": "destination",
                "param_2": "source",
                "param_3": "size",
                "param_4": "count",
                "uVar1": "byte",
                "iVar2": "index",
                "puVar3": "destPtr",
                "iVar4": "currentIndex"
            },
            "calling": [
                "FUN_08002b48",
                "FUN_08002d88",
                "FUN_08002cb0",
                "FUN_08003298",
                "FUN_08002bf0"
            ],
            "called": [
                "FUN_0800407c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800411c": {
            "entrypoint": "0x0800411c",
            "current_name": "process_data_0800411c",
            "code": "\nvoid processData_0800411c(void)\n\n{\n  undefined4 *ptr;\n  longlong tempValue;\n  uint var1;\n  uint var2;\n  uint var3;\n  undefined4 var4;\n  undefined4 var5;\n  int returnValue;\n  uint computedVar1;\n  uint computedVar2;\n  uint computedVar3;\n  uint computedVar4;\n  undefined4 *ptr2;\n  undefined4 intermediateVar;\n  int computedVar5;\n  int tempVar;\n  bool checkFlag;\n  undefined8 functionResult;\n  \n  returnValue = thunk_FUN_0800115c();\n  if (1 < (uint)(returnValue - DAT_2000028c)) {\n    DAT_2000028c = thunk_FUN_0800115c();\n    FUN_08002f28();\n  }\n  returnValue = thunk_FUN_0800115c();\n  if (2 < (uint)(returnValue - DAT_20000294)) {\n    DAT_20000294 = thunk_FUN_0800115c();\n    FUN_08004a84();\n  }\n  returnValue = thunk_FUN_0800115c();\n  if (3 < (uint)(returnValue - DAT_20000290)) {\n    DAT_20000290 = thunk_FUN_0800115c();\n    FUN_08004348();\n    FUN_08004384();\n    FUN_080043f0();\n    FUN_08004410();\n    FUN_08004434();\n    FUN_080043bc();\n    FUN_08004458();\n  }\n  if ((DAT_20000275 != '\\0') && (DAT_20000274 != '\\0')) {\n    tempVar = DAT_20000270 + (uint)DAT_20000266 * -0x100;\n    computedVar1 = (uint)((longlong)(int)(uint)DAT_20000268 * (longlong)tempVar) >> 0x17 |\n            (int)((ulonglong)((longlong)(int)(uint)DAT_20000268 * (longlong)tempVar) >> 0x20) << 9;\n    computedVar2 = (uint)((longlong)(int)(uint)DAT_20000264 * (longlong)tempVar >> 7);\n    computedVar3 = computedVar2 + (uint)DAT_20000260 * 0x10000;\n    var2 = (uint)((ulonglong)((longlong)(int)(uint)DAT_20000262 * (longlong)tempVar) >> 8);\n    returnValue = computedVar1 + 2000;\n    var3 = var2 + (uint)DAT_2000025e * 0x8000;\n    checkFlag = (int)computedVar1 < 0;\n    if (1999 < returnValue) {\n      computedVar1 = 0;\n    }\n    var1 = computedVar1;\n    if (checkFlag != SBORROW4(returnValue,2000)) {\n      computedVar5 = computedVar1 * computedVar1 * 5;\n      computedVar1 = computedVar5 >> 2;\n      var1 = computedVar5 >> 1;\n    }\n    computedVar4 = computedVar3 - var1;\n    tempValue = (ulonglong)(var3 - computedVar1) * (ulonglong)DAT_2000026c;\n    computedVar5 = DAT_2000026c *\n             ((((int)((longlong)(int)(uint)DAT_20000262 * (longlong)tempVar >> 0x28) +\n               (uint)CARRY4(var2,(uint)DAT_2000025e * 0x8000)) - ((int)computedVar1 >> 0x1f)) -\n             (uint)(var3 < computedVar1)) + (int)((ulonglong)tempValue >> 0x20);\n    var2 = (uint)tempValue >> 0x15 | computedVar5 * 0x800;\n    var4 = FUN_08000c44(var2 - computedVar4 >> 0xf |\n                         (((computedVar5 >> 0x15) -\n                          ((((int)((longlong)(int)(uint)DAT_20000264 * (longlong)tempVar >> 0x27) +\n                            (uint)CARRY4(computedVar2,(uint)DAT_20000260 * 0x10000)) -\n                           ((int)var1 >> 0x1f)) - (uint)(computedVar3 < var1))) - (uint)(var2 < computedVar4)\n                         ) * 0x20000);\n    var4 = FUN_08000e54(var4,0x42c80000);\n    DAT_20000354 = var4;\n    var5 = FUN_08000c44(returnValue);\n    DAT_20000358 = FUN_08000e54(var5,0x42c80000);\n    FUN_08000e54(var4,0x447d5000);\n    functionResult = FUN_08000428();\n    functionResult = FUN_08005900((int)functionResult,(int)((ulonglong)functionResult >> 0x20),0x60000000,0x3fc85b95);\n    functionResult = FUN_08000168(0,0x3ff00000,(int)functionResult,(int)((ulonglong)functionResult >> 0x20));\n    FUN_080004d0((int)functionResult,(int)((ulonglong)functionResult >> 0x20),0,0x40e5a540);\n    var4 = FUN_08000a30();\n    var5 = 0;\n    ptr2 = &DAT_20000300;\n    DAT_20000350 = var4;\n    do {\n      ptr = ptr2 + 1;\n      *ptr2 = *ptr;\n      var5 = FUN_08000adc(var5);\n      ptr2 = ptr;\n    } while (ptr != &DAT_2000034c);\n    DAT_2000034c = var4;\n    var4 = FUN_08000adc(var5,var4);\n    DAT_200002fc = FUN_08000e54(var4,0x41a00000);\n    returnValue = FUN_08001078();\n    DAT_200014ab = returnValue * 100;\n    DAT_20000275 = '\\0';\n    DAT_20000274 = '\\0';\n    FUN_0800403c(0xee,DAT_20000038 + 0x50,1);\n    DAT_2000027c = thunk_FUN_0800115c();\n  }\n  returnValue = thunk_FUN_0800115c();\n  if (((10 < (uint)(returnValue - DAT_2000027c)) && (DAT_20000275 == '\\0')) && (DAT_20000274 == '\\0')) {\n    DAT_20000270 = FUN_08003034();\n    DAT_20000275 = '\\x01';\n    FUN_0800403c(0xee,DAT_20000038 + 0x40,1,0,intermediateVar);\n    DAT_20000278 = thunk_FUN_0800115c();\n  }\n  returnValue = thunk_FUN_0800115c();\n  if (((10 < (uint)(returnValue - DAT_20000278)) && (DAT_20000275 != '\\0')) && (DAT_20000274 == '\\0')) {\n    DAT_2000026c = FUN_08003034();\n    DAT_20000274 = '\\x01';\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800411c": "process_data_0800411c",
                "puVar1": "ptr",
                "lVar2": "tempValue",
                "uVar3": "var1",
                "uVar4": "var2",
                "uVar5": "var3",
                "uVar6": "var4",
                "uVar7": "var5",
                "iVar8": "returnValue",
                "uVar9": "computedVar1",
                "uVar10": "computedVar2",
                "uVar11": "computedVar3",
                "uVar12": "computedVar4",
                "puVar13": "ptr2",
                "unaff_r4": "intermediateVar",
                "iVar14": "computedVar5",
                "iVar15": "tempVar",
                "bVar16": "checkFlag",
                "uVar17": "functionResult"
            },
            "calling": [
                "FUN_080041ae"
            ],
            "called": [
                "thunk_FUN_0800115c",
                "FUN_080004d0",
                "FUN_08000e54",
                "FUN_08003034",
                "FUN_08000a30",
                "FUN_08000c44",
                "FUN_08004410",
                "FUN_08005900",
                "FUN_08004348",
                "FUN_08000168",
                "FUN_08000428",
                "FUN_08002f28",
                "FUN_08004458",
                "FUN_080043bc",
                "FUN_08004384",
                "FUN_0800403c",
                "FUN_08004a84",
                "FUN_080043f0",
                "FUN_08004434",
                "FUN_08001078",
                "FUN_08000adc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004194": {
            "entrypoint": "0x08004194",
            "current_name": "initialize_system_08004194",
            "code": "\nvoid initialize_system_08004194(void)\n\n{\n  FUN_08004028();\n  FUN_08004c70();\n  FUN_08002ea0();\n  FUN_08003298();\n  DAT_200000f4 = 1;\n  DAT_20000150 = 1;\n  DAT_200001ac = 0xffffffff;\n  DAT_20000098 = 1;\n  DAT_200000c8 = 0x44bb8000;\n  DAT_20000124 = 0x44b54000;\n  DAT_20000180 = 0x44fa0000;\n  DAT_2000006c = 0;\n  DAT_200000ac = 0x408ccccd;\n  DAT_200000b0 = 0x3ca3d70a;\n  DAT_200000b4 = 0x438c0000;\n  DAT_200000b8 = 0x40900000;\n  DAT_200000bc = 0x3ca3d70a;\n  DAT_200000c0 = 0x43b40000;\n  DAT_20000108 = 0x40733333;\n  DAT_2000010c = 0x3ca3d70a;\n  DAT_20000110 = 0x43820000;\n  DAT_20000114 = 0x40733333;\n  DAT_20000118 = 0x3ca3d70a;\n  DAT_2000011c = 0x43a00000;\n  DAT_20000164 = 0x40400000;\n  DAT_20000168 = 0x3c23d70a;\n  DAT_2000016c = 0x438c0000;\n  DAT_20000170 = 0;\n  DAT_20000174 = 0;\n  DAT_20000178 = 0;\n  DAT_20000050 = 0x41200000;\n  DAT_20000054 = 0;\n  DAT_20000058 = 0;\n  DAT_2000005c = 0;\n  DAT_20000060 = 0;\n  DAT_20000064 = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004194": "initialize_system_08004194"
            },
            "calling": [
                "FUN_080041ae"
            ],
            "called": [
                "FUN_08002ea0",
                "FUN_08004c70",
                "FUN_08004028",
                "FUN_08003298"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080041ae": {
            "entrypoint": "0x080041ae",
            "current_name": "execute_application_080041ae",
            "code": "\nvoid executeApplication_080041ae(void)\n\n{\n  FUN_08003eb0(0);\n  FUN_08004194();\n  do {\n    FUN_0800114c();\n    FUN_0800411c();\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080041ae": "execute_application_080041ae"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_08003eb0",
                "FUN_08004194",
                "FUN_0800411c",
                "FUN_0800114c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080041c4": {
            "entrypoint": "0x080041c4",
            "current_name": "initialize_system_080041c4",
            "code": "\nvoid initializeSystem_080041c4(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  undefined4 extraOutput1;\n  \n  FUN_08003fc4(0);\n  FUN_08003fd0(0);\n  FUN_08003fdc(0);\n  FUN_08003fe8(0,extraOutput1,input3,input4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080041c4": "initialize_system_080041c4",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "extraout_r1": "extraOutput1"
            },
            "calling": [
                "FUN_08004a84"
            ],
            "called": [
                "FUN_08003fe8",
                "FUN_08003fc4",
                "FUN_08003fdc",
                "FUN_08003fd0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800426c": {
            "entrypoint": "0x0800426c",
            "current_name": "calculate_and_update_values_0800426c",
            "code": "\n\n\nvoid calculateAndUpdateValues_0800426c(undefined4 input_param1,undefined4 input_param2,undefined4 input_param3,undefined4 input_param4)\n\n{\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  uint value4;\n  uint value5;\n  uint value6;\n  uint value7;\n  \n  value1 = FUN_08000ad8();\n  value2 = FUN_08000adc(input_param1,input_param2);\n  value3 = FUN_08000ad8(value1,input_param3);\n  value3 = FUN_08000adc(value3,input_param4);\n  FUN_08000ad8(value3,0x447a0000);\n  value4 = FUN_08001078();\n  value3 = FUN_08000ad8(value2,input_param3);\n  value3 = FUN_08000ad8(value3,input_param4);\n  FUN_08000ad8(value3,0x447a0000);\n  value5 = FUN_08001078();\n  value1 = FUN_08000adc(value1,input_param3);\n  value1 = FUN_08000ad8(value1,input_param4);\n  FUN_08000ad8(value1,0x447a0000);\n  value6 = FUN_08001078();\n  value1 = FUN_08000adc(input_param3,value2);\n  value1 = FUN_08000adc(value1,input_param4);\n  FUN_08000ad8(value1,0x447a0000);\n  value7 = FUN_08001078();\n  if (999 < (int)value7) {\n    value7 = 1000;\n  }\n  if (999 < (int)value6) {\n    value6 = 1000;\n  }\n  if (999 < (int)value5) {\n    value5 = 1000;\n  }\n  if (999 < (int)value4) {\n    value4 = 1000;\n  }\n  DAT_200002a0 = value5 & ~((int)value5 >> 0x1f);\n  DAT_200002a4 = value4 & ~((int)value4 >> 0x1f);\n  DAT_2000029c = value6 & ~((int)value6 >> 0x1f);\n  DAT_20000298 = value7 & ~((int)value7 >> 0x1f);\n  FUN_08003fc4();\n  FUN_08003fd0(DAT_2000029c);\n  FUN_08003fdc(DAT_200002a0);\n  FUN_08003fe8(DAT_200002a4);\n  _DAT_200013dd = (short)DAT_20000298 + 1000;\n  DAT_200013df = (short)DAT_2000029c + 1000;\n  _DAT_200013e1 = (short)DAT_200002a0 + 1000;\n  DAT_200013e3 = (short)DAT_200002a4 + 1000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800426c": "calculate_and_update_values_0800426c",
                "param_1": "input_param1",
                "param_2": "input_param2",
                "param_3": "input_param3",
                "param_4": "input_param4",
                "uVar1": "value1",
                "uVar2": "value2",
                "uVar3": "value3",
                "uVar4": "value4",
                "uVar5": "value5",
                "uVar6": "value6",
                "uVar7": "value7"
            },
            "calling": [
                "FUN_08004a84"
            ],
            "called": [
                "FUN_08000ad8",
                "FUN_08003fe8",
                "FUN_08003fc4",
                "FUN_08003fdc",
                "FUN_08001078",
                "FUN_08000adc",
                "FUN_08003fd0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004300": {
            "entrypoint": "0x08004300",
            "current_name": "calculate_checksum_08004300",
            "code": "\nvoid calculate_checksum_08004300(uint input_value_1,byte *input_data,uint input_length)\n\n{\n  uint checksum;\n  byte *current_byte;\n  \n  FUN_08004c8c(&DAT_0800732e);\n  FUN_08004c18(input_length & 0xff);\n  checksum = input_length & 0xff ^ input_value_1;\n  FUN_08004c18(input_value_1);\n  for (current_byte = input_data; (int)current_byte - (int)input_data < (int)input_length; current_byte = current_byte + 1) {\n    FUN_08004c18(*current_byte);\n    checksum = checksum ^ *current_byte;\n  }\n  FUN_08004c18(checksum);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004300": "calculate_checksum_08004300",
                "param_1": "input_value_1",
                "param_2": "input_data",
                "param_3": "input_length",
                "uVar1": "checksum",
                "pbVar2": "current_byte"
            },
            "calling": [
                "FUN_08004458",
                "FUN_08004384",
                "FUN_080043bc",
                "FUN_08004410",
                "FUN_08004348",
                "FUN_080043f0",
                "FUN_08004434"
            ],
            "called": [
                "FUN_08004c18",
                "FUN_08004c8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004348": {
            "entrypoint": "0x08004348",
            "current_name": "initialize_data_08004348",
            "code": "\n\n\nvoid initializeData_08004348(undefined4 flag,uint data,undefined4 value)\n\n{\n  undefined4 defaultFlag;\n  uint maskedData;\n  undefined4 paramValue;\n  \n  _DAT_20001423 = 0x40003e9;\n  _DAT_20001427 = 0;\n  DAT_20001429 = 0;\n  defaultFlag = 0x40003e9;\n  maskedData = data & 0xff000000;\n  paramValue = value;\n  FUN_08004300(100,&defaultFlag,7);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004348": "initialize_data_08004348",
                "param_1": "flag",
                "param_2": "data",
                "param_3": "value",
                "local_10": "defaultFlag",
                "local_c": "maskedData",
                "uStack_8": "paramValue"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_08004300"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004384": {
            "entrypoint": "0x08004384",
            "current_name": "initialize_data_08004384",
            "code": "\n\n\nvoid initialize_data_08004384(undefined4 arg1,undefined4 arg2,undefined4 arg3,uint flags)\n\n{\n  undefined4 data_ptr;\n  undefined4 stack_data;\n  uint masked_flags;\n  \n  _DAT_200013bd = 0x2a0007;\n  data_ptr = DAT_200013b9;\n  stack_data = 0x2a0007;\n  _DAT_200013c1 = 0;\n  DAT_200013c3 = 0;\n  masked_flags = flags & 0xff000000;\n  FUN_08004300(0x65,&data_ptr,0xb,0,arg1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004384": "initialize_data_08004384",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "flags",
                "local_14": "data_ptr",
                "uStack_10": "stack_data",
                "local_c": "masked_flags"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_08004300"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080043bc": {
            "entrypoint": "0x080043bc",
            "current_name": "copy_data_to_buffer_080043bc",
            "code": "\nvoid copyDataToBuffer_080043bc(void)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  undefined4 *destinationPointer;\n  undefined4 *sourcePointer;\n  undefined4 buffer [2];\n  undefined2 temporaryBuffer [6];\n  \n  sourcePointer = (undefined4 *)&DAT_2000142a;\n  destinationPointer = buffer;\n  do {\n    uVar1 = *sourcePointer;\n    uVar2 = sourcePointer[1];\n    sourcePointer = sourcePointer + 2;\n    *destinationPointer = uVar1;\n    destinationPointer[1] = uVar2;\n    destinationPointer = destinationPointer + 2;\n  } while (sourcePointer != (undefined4 *)&DAT_2000143a);\n  *(undefined2 *)destinationPointer = DAT_2000143a;\n  FUN_08004300(0x66,buffer,0x12);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080043bc": "copy_data_to_buffer_080043bc",
                "puVar4": "sourcePointer",
                "puVar3": "destinationPointer",
                "local_24": "buffer",
                "local_1c": "temporaryBuffer"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_08004300"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080043f0": {
            "entrypoint": "0x080043f0",
            "current_name": "extract_and_print_data_080043f0",
            "code": "\n\n\nvoid extractAndPrintData_080043f0(undefined4 dataAddress,undefined4 configAddress,undefined4 paramAddress)\n\n{\n  undefined4 dataValue;\n  undefined4 configValue;\n  undefined4 paramArray [2];\n  \n  dataValue = _DAT_200013dd;\n  configValue = _DAT_200013e1;\n  paramArray[0] = paramAddress;\n  FUN_08004300(0x68,&dataValue,8,paramArray);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080043f0": "extract_and_print_data_080043f0",
                "param_1": "dataAddress",
                "param_2": "configAddress",
                "param_3": "paramAddress",
                "local_10": "dataValue",
                "uStack_c": "configValue",
                "auStack_8": "paramArray"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_08004300"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004410": {
            "entrypoint": "0x08004410",
            "current_name": "initialize_data_08004410",
            "code": "\nvoid initializeData_08004410(undefined4 dataStore,undefined4 inputValue,undefined4 outputValue)\n\n{\n  undefined4 dataAddress;\n  undefined4 combinedValue;\n  undefined4 stackValue;\n  \n  dataAddress = DAT_20001395;\n  combinedValue = CONCAT22((short)((uint)inputValue >> 0x10),DAT_20001399);\n  stackValue = outputValue;\n  FUN_08004300(0x6c,&dataAddress,6);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004410": "initialize_data_08004410",
                "param_1": "dataStore",
                "param_2": "inputValue",
                "param_3": "outputValue",
                "local_10": "dataAddress",
                "local_c": "combinedValue",
                "uStack_8": "stackValue"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_08004300"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004434": {
            "entrypoint": "0x08004434",
            "current_name": "initialize_08004434",
            "code": "\nvoid initialize_08004434(undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  undefined4 dataPtr;\n  undefined4 combinedVal;\n  undefined4 arg3Copy;\n  \n  dataPtr = DAT_200014ab;\n  combinedVal = CONCAT22((short)((uint)arg2 >> 0x10),DAT_200014af);\n  arg3Copy = arg3;\n  FUN_08004300(0x6d,&dataPtr,6);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004434": "initialize_08004434",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "local_10": "dataPtr",
                "local_c": "combinedVal",
                "uStack_8": "arg3Copy"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_08004300"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004458": {
            "entrypoint": "0x08004458",
            "current_name": "reorder_and_call_function_08004458",
            "code": "\nvoid reorderAndCallFunction_08004458(void)\n\n{\n  undefined4 *destinationArray;\n  undefined4 *sourceArray;\n  undefined4 tempValue;\n  undefined4 *currentDestination;\n  undefined4 *currentSource;\n  undefined4 temporaryArray [3];\n  undefined2 anotherTemporaryArray [10];\n  \n  destinationArray = temporaryArray;\n  sourceArray = &DAT_2000139b;\n  do {\n    currentSource = sourceArray;\n    currentDestination = destinationArray;\n    tempValue = currentSource[1];\n    *currentDestination = *currentSource;\n    currentDestination[1] = tempValue;\n    destinationArray = currentDestination + 2;\n    sourceArray = currentSource + 2;\n  } while (currentSource + 2 != (undefined4 *)0x200013b3);\n  currentDestination[2] = uRam200013b3;\n  *(undefined2 *)(currentDestination + 3) = *(undefined2 *)(currentSource + 3);\n  FUN_08004300(0x70,temporaryArray,0x1e);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004458": "reorder_and_call_function_08004458",
                "puVar1": "destinationArray",
                "puVar2": "sourceArray",
                "uVar3": "tempValue",
                "puVar4": "currentDestination",
                "puVar5": "currentSource",
                "local_30": "temporaryArray",
                "local_24": "anotherTemporaryArray"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_08004300"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004490": {
            "entrypoint": "0x08004490",
            "current_name": "error_handling_loop_08004490",
            "code": "\nvoid errorHandlingLoop_08004490(undefined4 errorMessage,undefined4 lineNumber)\n\n{\n  FUN_08001424(0x40011000,0x4000,1);\n  FUN_08001424(0x40011000,0x8000,0);\n  FUN_08001424(0x40011000,0x2000,0);\n  do {\n    FUN_0800142e(0x40011000,0x4000);\n    FUN_0800142e(0x40011000,0x8000);\n    FUN_0800142e(0x40011000,0x2000);\n    FUN_08004c8c(\"Error with \");\n    FUN_08004c8c(errorMessage);\n    FUN_08004c8c(\" at line: \");\n    FUN_08004cac(lineNumber);\n    FUN_08004c18(10);\n    thunk_FUNC_08001168(500);\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08004490": "error_handling_loop_08004490",
                "param_1": "errorMessage",
                "param_2": "lineNumber"
            },
            "calling": [
                "FUN_0800407c",
                "FUN_0800403c",
                "FUN_08004514",
                "FUN_080040b8",
                "FUN_0800458c"
            ],
            "called": [
                "FUN_08004cac",
                "FUN_08004c18",
                "FUN_0800142e",
                "thunk_FUN_08001168",
                "FUN_08001424",
                "FUN_08004c8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004514": {
            "entrypoint": "0x08004514",
            "current_name": "initialize_peripherals_08004514",
            "code": "\nvoid initializePeripherals_08004514(void)\n\n{\n  int returnValue;\n  uint milliseconds;\n  undefined4 fileIndex;\n  int counter;\n  undefined4 constant1;\n  int counter2;\n  int returnValue2;\n  undefined4 constant2;\n  int returnValue3;\n  undefined4 localArray [4];\n  undefined4 constant3;\n  undefined4 constant4;\n  undefined4 constant5;\n  undefined4 constant6;\n  undefined4 constant7;\n  \n  constant3 = 1;\n  constant4 = 0x10;\n  counter = 2;\n  constant6 = 0;\n  localArray[0] = 2;\n  constant5 = 2;\n  constant7 = 0x380000;\n  returnValue = FUN_08001b58(localArray);\n  if (returnValue == 0) goto LAB_08004540;\n  fileIndex = 0x3c;\n  while( true ) {\n    returnValue = FUN_08004490(\"../Src/peripherals.c\",fileIndex);\nLAB_08004540:\n    constant1 = 0xf;\n    constant2 = 0x400;\n    counter2 = counter;\n    returnValue2 = returnValue;\n    returnValue3 = returnValue;\n    counter = FUN_0800209c(&constant1,counter);\n    if (counter == 0) break;\n    fileIndex = 0x49;\n  }\n  milliseconds = FUN_08002214();\n  FUN_08001214(milliseconds / 1000);\n  FUN_08001240(4);\n  FUN_08001194(0xffffffff,0,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004514": "initialize_peripherals_08004514",
                "iVar1": "returnValue",
                "uVar2": "milliseconds",
                "uVar3": "fileIndex",
                "iVar4": "counter",
                "local_44": "constant1",
                "local_40": "counter2",
                "local_3c": "returnValue2",
                "local_38": "constant2",
                "local_34": "returnValue3",
                "local_30": "localArray",
                "local_20": "constant3",
                "local_1c": "constant4",
                "local_14": "constant5",
                "local_10": "constant6",
                "local_c": "constant7"
            },
            "calling": [
                "FUN_0800458c"
            ],
            "called": [
                "FUN_08002214",
                "FUN_08001b58",
                "FUN_08004490",
                "FUN_0800209c",
                "FUN_08001194",
                "FUN_08001214",
                "FUN_08001240"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800458c": {
            "entrypoint": "0x0800458c",
            "current_name": "initialize_system_0800458c",
            "code": "\n\n\nvoid initializeSystem_0800458c(void)\n\n{\n  int result;\n  undefined4 value;\n  int parameter;\n  int localVarA;\n  int localVarB;\n  int localVarC;\n  int localVarD;\n  int localVarE;\n  int localVarF;\n  int localVarG;\n  int localVarH;\n  int localVarI;\n  int localVarJ;\n  int localVarK;\n  int localVarL;\n  int localVarM;\n  undefined4 localVarN;\n  int localVarO;\n  \n  FUN_08001128();\n  FUN_08004514();\n  parameter = 2;\n  _DAT_40021018 = _DAT_40021018 | 0x1c;\n  FUN_08001424(0x40011000,0xe000,0,_DAT_40021018 & 8);\n  FUN_08001424(0x40010800,0x20,0);\n  localVarI = 0xe000;\n  localVarJ = 1;\n  localVarL = 2;\n  FUN_08001264(0x40011000,&localVarI);\n  localVarI = 0x20;\n  localVarJ = 1;\n  localVarL = 2;\n  FUN_08001264(0x40010800,&localVarI);\n  DAT_20001504 = 0x40005400;\n  DAT_20001508 = 400000;\n  DAT_20001514 = 0x4000;\n  DAT_2000150c = 0;\n  DAT_20001510 = 0;\n  DAT_20001518 = 0;\n  DAT_2000151c = 0;\n  DAT_20001520 = 0;\n  DAT_20001524 = 0;\n  result = FUN_08001754();\n  if (result == 0) goto LAB_0800463a;\n  value = 0x6b;\n  while( true ) {\n    while( true ) {\n      while( true ) {\n        while( true ) {\n          while( true ) {\n            while( true ) {\n              while( true ) {\n                while( true ) {\n                  while( true ) {\n                    while( true ) {\n                      while( true ) {\n                        while( true ) {\n                          while( true ) {\n                            while( true ) {\n                              while( true ) {\n                                while( true ) {\n                                  result = FUN_08004490(\"../Src/peripherals.c\",value);\nLAB_0800463a:\n                                  DAT_2000157c = 0x40013800;\n                                  DAT_20001580 = 0x1c200;\n                                  DAT_20001590 = 0xc;\n                                  DAT_20001584 = result;\n                                  DAT_20001588 = result;\n                                  DAT_2000158c = result;\n                                  DAT_20001594 = result;\n                                  DAT_20001598 = result;\n                                  result = FUN_08002724(&DAT_2000157c);\n                                  if (result == 0) break;\n                                  value = 0x151;\n                                }\n                                DAT_200015bc = 0x40012c00;\n                                DAT_200015c8 = 1000;\n                                DAT_200015c0 = parameter;\n                                DAT_200015c4 = result;\n                                DAT_200015cc = result;\n                                DAT_200015d0 = result;\n                                result = FUN_080023d0(&DAT_200015bc);\n                                if (result == 0) break;\n                                value = 0x88;\n                              }\n                              localVarA = result;\n                              localVarB = result;\n                              result = FUN_080025a4(&DAT_200015bc,&localVarA);\n                              if (result == 0) break;\n                              value = 0x8f;\n                            }\n                            localVarC = 0x60;\n                            localVarD = result;\n                            localVarE = result;\n                            localVarF = result;\n                            localVarG = result;\n                            localVarH = result;\n                            result = FUN_0800245c(&DAT_200015bc,&localVarC,0xc);\n                            if (result == 0) break;\n                            value = 0x9a;\n                          }\n                          localVarN = 0x2000;\n                          localVarI = result;\n                          localVarJ = result;\n                          localVarK = result;\n                          localVarL = result;\n                          localVarM = result;\n                          localVarO = result;\n                          result = FUN_08002564(&DAT_200015bc,&localVarI);\n                          if (result == 0) break;\n                          value = 0xa6;\n                        }\n                        FUN_08004e14(&DAT_200015bc);\n                        DAT_200015f8 = 0x40000000;\n                        DAT_20001604 = 1000;\n                        DAT_200015fc = parameter;\n                        DAT_20001600 = result;\n                        DAT_20001608 = result;\n                        result = FUN_080023d0(&DAT_200015f8);\n                        if (result == 0) break;\n                        value = 0xc3;\n                      }\n                      localVarC = result;\n                      localVarD = result;\n                      result = FUN_080025a4(&DAT_200015f8,&localVarC);\n                      if (result == 0) break;\n                      value = 0xca;\n                    }\n                    localVarI = 0x60;\n                    localVarJ = result;\n                    localVarK = result;\n                    localVarM = result;\n                    result = FUN_0800245c(&DAT_200015f8,&localVarI,4);\n                    if (result == 0) break;\n                    value = 0xd3;\n                  }\n                  FUN_08004e14(&DAT_200015f8);\n                  DAT_2000154c = 1000;\n                  DAT_20001540 = 0x40000400;\n                  DAT_20001544 = parameter;\n                  DAT_20001548 = result;\n                  DAT_20001550 = result;\n                  result = FUN_080023d0();\n                  if (result == 0) break;\n                  value = 0xf0;\n                }\n                localVarC = 0;\n                localVarD = 0;\n                result = FUN_080025a4(&DAT_20001540,&localVarC);\n                if (result == 0) break;\n                value = 0xf7;\n              }\n              localVarI = 0x60;\n              localVarJ = result;\n              localVarK = result;\n              localVarM = result;\n              result = FUN_0800245c(&DAT_20001540,&localVarI,8);\n              if (result == 0) break;\n              value = 0x100;\n            }\n            parameter = FUN_0800245c(&DAT_20001540,&localVarI,0xc);\n            if (parameter == 0) break;\n            value = 0x105;\n          }\n          FUN_08004e14(&DAT_20001540);\n          DAT_200014c8 = 0x40000800;\n          DAT_200014cc = 2;\n          DAT_200014d4 = 1000;\n          DAT_200014d0 = parameter;\n          DAT_200014d8 = parameter;\n          result = FUN_080023d0(&DAT_200014c8);\n          if (result == 0) break;\n          value = 0x122;\n        }\n        localVarC = result;\n        localVarD = result;\n        result = FUN_080025a4(&DAT_200014c8,&localVarC);\n        if (result == 0) break;\n        value = 0x129;\n      }\n      localVarI = 0x60;\n      localVarJ = result;\n      localVarK = result;\n      localVarM = result;\n      result = FUN_0800245c(&DAT_200014c8,&localVarI,8);\n      if (result == 0) break;\n      value = 0x132;\n    }\n    result = FUN_0800245c(&DAT_200014c8,&localVarI,0xc);\n    if (result == 0) break;\n    value = 0x137;\n  }\n  FUN_08004e14(&DAT_200014c8);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800458c": "initialize_system_0800458c",
                "iVar1": "result",
                "uVar2": "value",
                "iVar3": "parameter",
                "local_58": "localVarA",
                "local_54": "localVarB",
                "local_50": "localVarC",
                "local_4c": "localVarD",
                "local_48": "localVarE",
                "local_40": "localVarF",
                "local_3c": "localVarG",
                "local_38": "localVarH",
                "local_34": "localVarI",
                "local_30": "localVarJ",
                "local_2c": "localVarK",
                "local_28": "localVarL",
                "local_24": "localVarM",
                "local_20": "localVarN",
                "local_1c": "localVarO"
            },
            "calling": [
                "FUN_08004028"
            ],
            "called": [
                "FUN_08002564",
                "FUN_08001264",
                "FUN_08004e14",
                "FUN_08001754",
                "FUN_08004490",
                "FUN_0800245c",
                "FUN_08004514",
                "FUN_080023d0",
                "FUN_08001128",
                "FUN_08001424",
                "FUN_080025a4",
                "FUN_08002724"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800483c": {
            "entrypoint": "0x0800483c",
            "current_name": "process_data_0800483c",
            "code": "\nvoid processData_0800483c(int *data)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  int value1;\n  int value2;\n  int value3;\n  \n  value2 = data[0xc];\n  result1 = FUN_08000adc(data[7],data[9]);\n  value2 = FUN_08000ad8(result1,value2);\n  data[10] = value2;\n  if (*data == 3) {\n    value2 = FUN_08001064(data[10],0);\n    if (value2 == 0) {\n      value2 = FUN_08001028(data[10],0xc3340000);\n    }\n    else {\n      value2 = FUN_08001064(data[10],0x43340000);\n    }\n    if (value2 != 0) {\n      value3 = data[10];\n      result1 = FUN_08000cec(data[10],0x43b40000);\n      value2 = FUN_08001064(data[10],0);\n      value1 = data[10];\n      if (value2 == 0) {\n        value1 = value1 + -0x80000000;\n      }\n      result1 = FUN_08000e54(result1,value1);\n      value2 = FUN_08000ad8(value3,result1);\n      data[10] = value2;\n    }\n  }\n  value3 = data[2];\n  value1 = data[3];\n  value2 = FUN_08000cec(data[1],data[10]);\n  data[0xe] = value2;\n  value2 = FUN_08000adc(data[10],data[0xf]);\n  data[0xf] = value2;\n  value2 = FUN_08001028(data[0xf],0xc3fa0000);\n  if (value2 == 0) {\n    value2 = FUN_08001064(data[0xf],0x43fa0000);\n    if (value2 == 0) {\n      value2 = data[0xf];\n    }\n    else {\n      value2 = 0x43fa0000;\n    }\n  }\n  else {\n    value2 = -0x3c060000;\n  }\n  data[0xf] = value2;\n  value2 = FUN_08000ad8(data[0xc],data[0xd]);\n  data[0x10] = value2;\n  value2 = data[0xe];\n  result1 = FUN_08000cec(value3,data[0xf]);\n  result1 = FUN_08000adc(result1,value2);\n  result2 = FUN_08000cec(value1,data[0x10]);\n  value2 = FUN_08000ad8(result1,result2);\n  data[0x12] = value2;\n  result1 = FUN_08000c44(data[0x13]);\n  value2 = FUN_08001028(data[0x12],0xc3fa0000);\n  if (value2 == 0) {\n    value2 = FUN_08001064(data[0x12],0x43fa0000);\n    if (value2 == 0) {\n      value2 = data[0x12];\n    }\n    else {\n      value2 = 0x43fa0000;\n    }\n  }\n  else {\n    value2 = -0x3c060000;\n  }\n  value2 = FUN_08000cec(value2,result1);\n  data[0x12] = value2;\n  data[0xd] = data[0xc];\n  data[0xb] = data[10];\n  data[0x15] = data[0x14];\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800483c": "process_data_0800483c",
                "param_1": "data",
                "uVar1": "result1",
                "uVar2": "result2",
                "iVar3": "value1",
                "iVar4": "value2",
                "iVar5": "value3"
            },
            "calling": [
                "FUN_08004a84"
            ],
            "called": [
                "FUN_08000ad8",
                "FUN_08000e54",
                "FUN_08001028",
                "FUN_08000c44",
                "FUN_08001064",
                "FUN_08000cec",
                "FUN_08000adc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a30": {
            "entrypoint": "0x08004a30",
            "current_name": "initialize_data_08004a30",
            "code": "\nvoid initializeData_08004a30(void)\n\n{\n  undefined4 result;\n  \n  if (DAT_20000285 != '\\0') {\n    if (DAT_200002a8 == '\\0') {\n      result = FUN_08003068();\n      DAT_20000068 = FUN_08000cec(result,0x42c80000);\n      DAT_200002a8 = '\\x01';\n    }\n    else {\n      result = FUN_08003068();\n      DAT_2000007c = FUN_08000cec(result,0x42c80000);\n    }\n  }\n  if (DAT_20000285 == '\\0') {\n    if (DAT_200002a8 != '\\0') {\n      DAT_200002a8 = DAT_20000285;\n    }\n    DAT_20000094 = DAT_20000288;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a30": "initialize_data_08004a30",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08004a84"
            ],
            "called": [
                "FUN_08003068",
                "FUN_08000cec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a84": {
            "entrypoint": "0x08004a84",
            "current_name": "initialize_system_08004a84",
            "code": "\nvoid initializeSystem_08004a84(void)\n\n{\n  int iVar1;\n  \n  DAT_200000d8 = FUN_08002ec0();\n  DAT_20000134 = FUN_08002ed4();\n  DAT_20000190 = FUN_08002ee8();\n  FUN_08004a30();\n  iVar1 = FUN_08001064(DAT_200000d8,0);\n  if (iVar1 == 0) {\n    iVar1 = FUN_08001028(DAT_200000d8,0xc2a00000);\n  }\n  else {\n    iVar1 = FUN_08001064(DAT_200000d8,0x42a00000);\n  }\n  if (iVar1 == 0) {\n    iVar1 = FUN_08001064(DAT_20000134,0);\n    if (iVar1 == 0) {\n      iVar1 = FUN_08001028(DAT_20000134,0xc2a00000);\n    }\n    else {\n      iVar1 = FUN_08001064(DAT_20000134,0x42a00000);\n    }\n    if (iVar1 == 0) {\n      FUN_08003f3c(1,1);\n      FUN_0800483c(&DAT_200000a8);\n      FUN_0800483c(&DAT_20000104);\n      FUN_0800483c(&DAT_20000160);\n      if (DAT_20000285 != '\\0') {\n        FUN_0800483c(&DAT_2000004c);\n        FUN_08000adc(DAT_20000094,0x44bb8000);\n      }\n      DAT_20000094 = DAT_20000288;\n      if (DAT_20000284 == '\\0') {\n        FUN_080041c4();\n      }\n      else {\n        FUN_0800426c(DAT_20000288,DAT_200000f0,DAT_2000014c,DAT_200001a8);\n      }\n      FUN_08000cec(DAT_200000ac,0x437f0000);\n      DAT_2000139b._3_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_200000b0,0x437f0000);\n      DAT_2000139f._0_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_20000108,0x437f0000);\n      DAT_2000139b._0_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_2000010c,0x437f0000);\n      DAT_2000139b._1_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_20000110,0x437f0000);\n      DAT_2000139b._2_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_20000164,0x437f0000);\n      DAT_2000139f._2_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_20000168,0x437f0000);\n      DAT_2000139f._3_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_2000016c,0x437f0000);\n      DAT_200013a3._0_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_20000050,0x437f0000);\n      DAT_200013a3._1_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_20000054,0x437f0000);\n      DAT_200013a3._2_1_ = FUN_080010c4();\n      FUN_08000cec(DAT_20000058,0x437f0000);\n      DAT_200013a3._3_1_ = FUN_080010c4();\n      return;\n    }\n  }\n  FUN_080041c4();\n  FUN_08003f3c(0,1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a84": "initialize_system_08004a84"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_08001028",
                "FUN_08002ee8",
                "FUN_080041c4",
                "FUN_0800483c",
                "FUN_08000cec",
                "FUN_08002ed4",
                "FUN_08004a30",
                "FUN_0800426c",
                "FUN_08001064",
                "FUN_080010c4",
                "FUN_08003f3c",
                "FUN_08000adc",
                "FUN_08002ec0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c18": {
            "entrypoint": "0x08004c18",
            "current_name": "process_data_08004c18",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800289e) */\n\nundefined4 processData_08004c18(undefined input)\n\n{\n  int *ptr;\n  int var1;\n  int var2;\n  ushort *ptr2;\n  \n  DAT_20001636._0_1_ = input;\n  ptr2 = &DAT_20001636;\n  if (((DAT_200015b5 != '\\x01') && (DAT_200015b5 != '\\\"')) || (DAT_200015b4 == '\\x01')) {\n    return 2;\n  }\n  DAT_200015b4 = 1;\n  DAT_200015b8 = 0;\n  DAT_200015a0 = 1;\n  if (DAT_200015b5 == '\\\"') {\n    DAT_200015b5 = '2';\n  }\n  else {\n    DAT_200015b5 = '\\x12';\n  }\n  DAT_200015a2 = 1;\nLAB_080027c4:\n  do {\n    if (DAT_200015a2 == 0) {\n      var1 = FUN_0800115c();\n      do {\n        if (*DAT_2000157c << 0x19 < 0) {\n          if (DAT_200015b5 == '2') {\n            DAT_200015b5 = 0x22;\n          }\n          else {\n            DAT_200015b5 = 1;\n          }\n          DAT_200015b4 = 0;\n          return 0;\n        }\n        var2 = FUN_0800115c();\n      } while ((uint)(var2 - var1) < 6);\nLAB_0800281c:\n      ptr = DAT_2000157c;\n      DAT_2000157c[3] = DAT_2000157c[3] & 0xffffff7f;\n      ptr[3] = ptr[3] & 0xffffffdf;\n      ptr[3] = ptr[3] & 0xfffffeff;\n      ptr[5] = ptr[5] & 0xfffffffe;\n      DAT_200015b5 = 1;\n      DAT_200015b4 = 0;\n      return 3;\n    }\n    DAT_200015a2 = DAT_200015a2 + -1;\n    if (DAT_20001584 == 0x1000) {\n      var1 = FUN_0800115c();\n      while (-1 < *DAT_2000157c << 0x18) {\n        var2 = FUN_0800115c();\n        if (5 < (uint)(var2 - var1)) goto LAB_0800281c;\n      }\n      DAT_2000157c[1] = *ptr2 & 0x1ff;\n      if (DAT_2000158c == 0) {\n        ptr2 = ptr2 + 1;\n        goto LAB_080027c4;\n      }\n    }\n    else {\n      var1 = FUN_0800115c();\n      while (-1 < *DAT_2000157c << 0x18) {\n        var2 = FUN_0800115c();\n        if (5 < (uint)(var2 - var1)) goto LAB_0800281c;\n      }\n      DAT_2000157c[1] = (uint)*(byte *)ptr2;\n    }\n    ptr2 = (ushort *)((int)ptr2 + 1);\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08004c18": "process_data_08004c18",
                "param_1": "input",
                "piVar1": "ptr",
                "iVar2": "var1",
                "iVar3": "var2",
                "puVar4": "ptr2"
            },
            "calling": [
                "FUN_08004490",
                "FUN_08004300",
                "FUN_08004c8c"
            ],
            "called": [
                "FUN_0800115c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c30": {
            "entrypoint": "0x08004c30",
            "current_name": "verify_and_initialize_data_08004c30",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08002902) */\n\nint * verify_and_initialize_data_08004c30(int *data)\n\n{\n  int result;\n  \n  if (*data != 0x40013800) {\n    return data;\n  }\n  FUN_08003ec8(&DAT_20000364,DAT_20001634);\n  result = DAT_2000157c;\n  if (((DAT_200015b5 == '\\x01') || (DAT_200015b5 == '\\x12')) && (DAT_200015b4 != '\\x01')) {\n    DAT_200015b8 = 0;\n    DAT_200015a8 = 1;\n    DAT_200015aa = 1;\n    DAT_200015b4 = 0;\n    if (DAT_200015b5 == '\\x12') {\n      DAT_200015b5 = 0x32;\n    }\n    else {\n      DAT_200015b5 = 0x22;\n    }\n    DAT_200015a4 = &DAT_20001634;\n    *(uint *)(DAT_2000157c + 0xc) = *(uint *)(DAT_2000157c + 0xc) | 0x100;\n    *(uint *)(result + 0x14) = *(uint *)(result + 0x14) | 1;\n    *(uint *)(result + 0xc) = *(uint *)(result + 0xc) | 0x20;\n    return (int *)0x0;\n  }\n  return (int *)0x2;\n}\n\n",
            "renaming": {
                "FUN_08004c30": "verify_and_initialize_data_08004c30",
                "param_1": "data",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800290c"
            ],
            "called": [
                "FUN_08003ec8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c64": {
            "entrypoint": "0x08004c64",
            "current_name": "initialize_data_08004c64",
            "code": "\nvoid initializeData_08004c64(void)\n\n{\n  int count;\n  \n  count = 0;\n  DAT_20000b64 = 0;\n  DAT_20000b66 = 0;\n  DAT_20000b68 = 0;\n  do {\n    (&DAT_20000364)[count] = 0;\n    count = count + 1;\n  } while (count != 0x800);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c64": "initialize_data_08004c64",
                "iVar1": "count"
            },
            "calling": [
                "FUN_08004c70"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c70": {
            "entrypoint": "0x08004c70",
            "current_name": "initialize_data_08004c70",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08002902) */\n\nundefined4 initializeData_08004c70(void)\n\n{\n  int dataPointer;\n  \n  FUN_08004c64();\n  dataPointer = DAT_2000157c;\n  if (((DAT_200015b5 == '\\x01') || (DAT_200015b5 == '\\x12')) && (DAT_200015b4 != '\\x01')) {\n    DAT_200015b8 = 0;\n    DAT_200015a8 = 1;\n    DAT_200015aa = 1;\n    DAT_200015b4 = 0;\n    if (DAT_200015b5 == '\\x12') {\n      DAT_200015b5 = 0x32;\n    }\n    else {\n      DAT_200015b5 = 0x22;\n    }\n    DAT_200015a4 = &DAT_20001634;\n    *(uint *)(DAT_2000157c + 0xc) = *(uint *)(DAT_2000157c + 0xc) | 0x100;\n    *(uint *)(dataPointer + 0x14) = *(uint *)(dataPointer + 0x14) | 1;\n    *(uint *)(dataPointer + 0xc) = *(uint *)(dataPointer + 0xc) | 0x20;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08004c70": "initialize_data_08004c70",
                "iVar1": "dataPointer"
            },
            "calling": [
                "FUN_08004194"
            ],
            "called": [
                "FUN_08004c64"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c8c": {
            "entrypoint": "0x08004c8c",
            "current_name": "iterate_and_process_08004c8c",
            "code": "\nvoid iterate_and_process_08004c8c(undefined *data_array)\n\n{\n  uint result;\n  undefined *current_element;\n  \n  current_element = data_array;\n  while( true ) {\n    result = FUN_08000150(data_array);\n    if (result <= (uint)((int)current_element - (int)data_array)) break;\n    FUN_08004c18(*current_element);\n    current_element = current_element + 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c8c": "iterate_and_process_08004c8c",
                "param_1": "data_array",
                "uVar1": "result",
                "puVar2": "current_element"
            },
            "calling": [
                "FUN_08004cac",
                "FUN_08004490",
                "FUN_08004300"
            ],
            "called": [
                "FUN_08000150",
                "FUN_08004c18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004cac": {
            "entrypoint": "0x08004cac",
            "current_name": "initialize_data_08004cac",
            "code": "\nvoid initializeData_08004cac(undefined4 dataPtr)\n\n{\n  FUN_08004ffc(&DAT_20001636,&DAT_0800735e,dataPtr);\n  FUN_08004c8c(&DAT_20001636);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004cac": "initialize_data_08004cac",
                "param_1": "dataPtr"
            },
            "calling": [
                "FUN_08004490"
            ],
            "called": [
                "FUN_08004ffc",
                "FUN_08004c8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ccc": {
            "entrypoint": "0x08004ccc",
            "current_name": "set_flag_and_call_functions_08004ccc",
            "code": "\n\n\nvoid setFlagAndCallFunctions_08004ccc(undefined4 flag1,undefined4 param2,undefined4 param3)\n\n{\n  _DAT_40021018 = _DAT_40021018 | 1;\n  FUN_08001170(3,param2,_DAT_40021018,1,flag1,1,param3);\n  FUN_08001194(0xfffffff4,0);\n  FUN_08001194(0xfffffff5,0);\n  FUN_08001194(0xfffffff6,0);\n  FUN_08001194(0xfffffffb,0);\n  FUN_08001194(0xfffffffc,0);\n  FUN_08001194(0xfffffffe,0);\n  FUN_08001194(0xffffffff,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004ccc": "set_flag_and_call_functions_08004ccc",
                "param_1": "flag1",
                "param_2": "param2",
                "param_3": "param3"
            },
            "calling": [
                "FUN_08001128"
            ],
            "called": [
                "FUN_08001170",
                "FUN_08001194"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d48": {
            "entrypoint": "0x08004d48",
            "current_name": "check_and_update_data_08004d48",
            "code": "\n\n\nvoid checkAndUpdateData_08004d48(int *dataPointer,undefined4 paramValue)\n\n{\n  undefined4 constantValue1;\n  undefined4 constantValue2;\n  \n  if (*dataPointer == 0x40005400) {\n    constantValue1 = 0xc0;\n    constantValue2 = 0x12;\n    FUN_08001264(0x40010c00,&constantValue1,0x40005400,3,dataPointer,paramValue);\n    _DAT_4002101c = _DAT_4002101c | 0x200000;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d48": "check_and_update_data_08004d48",
                "param_1": "dataPointer",
                "param_2": "paramValue",
                "local_18": "constantValue1",
                "local_14": "constantValue2"
            },
            "calling": [
                "FUN_08001754"
            ],
            "called": [
                "FUN_08001264"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d8c": {
            "entrypoint": "0x08004d8c",
            "current_name": "update_flags_08004d8c",
            "code": "\n\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nvoid updateFlags_08004d8c(int *value)\n\n{\n  int inputValue;\n  \n  inputValue = *value;\n  if (inputValue == 0x40012c00) {\n    _DAT_40021018 = _DAT_40021018 | 0x800;\n  }\n  else if (inputValue == 0x40000000) {\n    _DAT_4002101c = _DAT_4002101c | 1;\n  }\n  else if (inputValue == 0x40000400) {\n    _DAT_4002101c = _DAT_4002101c | 2;\n  }\n  else if (inputValue == 0x40000800) {\n    _DAT_4002101c = _DAT_4002101c | 4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d8c": "update_flags_08004d8c",
                "param_1": "value",
                "iVar1": "inputValue"
            },
            "calling": [
                "FUN_080023d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e14": {
            "entrypoint": "0x08004e14",
            "current_name": "initialize_value_08004e14",
            "code": "\nvoid initializeValue_08004e14(int *valuePointer,undefined4 param2,undefined4 param3)\n\n{\n  undefined4 constant1;\n  int value;\n  undefined4 newValue;\n  undefined4 constant2;\n  undefined4 constant3;\n  undefined4 constant4;\n  \n  value = *valuePointer;\n  if (value == 0x40012c00) {\n    newValue = 0x800;\n  }\n  else {\n    if (value != 0x40000000) {\n      if (value == 0x40000400) {\n        newValue = 3;\n      }\n      else {\n        if (value != 0x40000800) {\n          return;\n        }\n        newValue = 0x300;\n      }\n      constant1 = 0x40010c00;\n      goto LAB_08004e2e;\n    }\n    newValue = 2;\n  }\n  constant1 = 0x40010800;\nLAB_08004e2e:\n  constant4 = 2;\n  constant2 = 2;\n  constant3 = param3;\n  FUN_08001264(constant1,&newValue);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004e14": "initialize_value_08004e14",
                "param_1": "valuePointer",
                "param_2": "param2",
                "param_3": "param3",
                "uVar1": "constant1",
                "iVar2": "value",
                "local_18": "newValue",
                "local_14": "constant2",
                "uStack_10": "constant3",
                "local_c": "constant4"
            },
            "calling": [
                "FUN_0800458c"
            ],
            "called": [
                "FUN_08001264"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e7c": {
            "entrypoint": "0x08004e7c",
            "current_name": "initialize_system_08004e7c",
            "code": "\n\n\nvoid initializeSystem_08004e7c(int *systemConfig)\n\n{\n  undefined4 size;\n  undefined4 count;\n  undefined4 value;\n  undefined4 offset;\n  \n  if (*systemConfig == 0x40013800) {\n    _DAT_40021018 = _DAT_40021018 | 0x4000;\n    size = 0x200;\n    count = 2;\n    offset = 3;\n    FUN_08001264(0x40010800,&size);\n    size = 0x400;\n    count = 0;\n    value = 0;\n    FUN_08001264(0x40010800,&size);\n    FUN_08001194(0x25,0,0);\n    FUN_080011fc(0x25);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004e7c": "initialize_system_08004e7c",
                "param_1": "systemConfig",
                "local_18": "size",
                "local_14": "count",
                "local_10": "value",
                "local_c": "offset"
            },
            "calling": [
                "FUN_08002724"
            ],
            "called": [
                "FUN_08001264",
                "FUN_08001194",
                "FUN_080011fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004f10": {
            "entrypoint": "0x08004f10",
            "current_name": "initialize_system_08004f10",
            "code": "\n\n\nvoid initializeSystem_08004f10(void)\n\n{\n  _DAT_40021000 = _DAT_40021000 & 0xfef2ffff | 1;\n  _DAT_40021004 = _DAT_40021004 & 0xf8800000;\n  _DAT_40021008 = 0x9f0000;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004f10": "initialize_system_08004f10"
            },
            "calling": [
                "entry"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_0800115c": {
            "entrypoint": "0x08004f60",
            "current_name": "get_data_value_thunk_0800115c",
            "code": "\nundefined4 get_data_value_thunk_0800115c(void)\n\n{\n  return DAT_20000244;\n}\n\n",
            "renaming": {
                "thunk_FUN_0800115c": "get_data_value_thunk_0800115c"
            },
            "calling": [
                "FUN_08002f28"
            ],
            "called": [
                "FUN_0800115c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_08001168": {
            "entrypoint": "0x08004f64",
            "current_name": "thunk_FUNC_08001168",
            "code": "\nvoid thunk_FUNC_08001168(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "thunk_FUN_08001168": "thunk_FUNC_08001168"
            },
            "calling": [
                "FUN_0800403c",
                "FUN_08004490",
                "FUN_08004028",
                "FUN_08003298"
            ],
            "called": [
                "FUN_08001168"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "entry": {
            "entrypoint": "0x08004f68",
            "current_name": "entry",
            "code": "\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined4 *)(iVar1 + 0x20000000) < &DAT_20000228; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x8007448);\n  }\n  for (puVar2 = &DAT_20000228; puVar2 < &DAT_200016a0; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  FUN_08004f10();\n  FUN_08004fb4();\n  UNRECOVERED_JUMPTABLE = (code *)0x8004f9a;\n  FUN_080041ae();\n                    /* WARNING: Could not recover jumptable at 0x08004f9a. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "renaming": {},
            "calling": [],
            "called": [
                "FUN_08004f10",
                "FUN_08004fb4",
                "FUN_080041ae"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004fb4": {
            "entrypoint": "0x08004fb4",
            "current_name": "execute_functions_08004fb4",
            "code": "\nvoid executeFunctions_08004fb4(void)\n\n{\n  int loopIndex;\n  \n  for (loopIndex = 0; loopIndex != 0; loopIndex = loopIndex + 1) {\n    (*(code *)(&DAT_08007440)[loopIndex])();\n  }\n  FUNC_080072d4();\n  for (loopIndex = 0; loopIndex != 1; loopIndex = loopIndex + 1) {\n    (*(code *)(&DAT_08007440)[loopIndex])();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004fb4": "execute_functions_08004fb4",
                "iVar1": "loopIndex"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_08000134",
                "FUN_080072d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ffc": {
            "entrypoint": "0x08004ffc",
            "current_name": "initialize_function_08004ffc",
            "code": "\nvoid initializeFunction_08004ffc(undefined *pointer,undefined4 value1,undefined4 value2,undefined4 value3)\n\n{\n  undefined *pointerArray [2];\n  undefined4 maxValue1;\n  undefined2 constant1;\n  undefined2 constant2;\n  undefined *pointer2;\n  undefined4 maxValue2;\n  undefined4 stackVal1;\n  undefined4 stackVal2;\n  undefined4 stackVal3;\n  \n  constant1 = 0x208;\n  maxValue1 = 0x7fffffff;\n  maxValue2 = 0x7fffffff;\n  constant2 = 0xffff;\n  pointerArray[0] = pointer;\n  pointer2 = pointer;\n  stackVal1 = value1;\n  stackVal2 = value2;\n  stackVal3 = value3;\n  FUN_080050fc(DAT_200001c0,pointerArray,value1);\n  *pointerArray[0] = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004ffc": "initialize_function_08004ffc",
                "param_1": "pointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "local_78": "pointerArray",
                "local_70": "maxValue1",
                "local_6c": "constant1",
                "local_6a": "constant2",
                "local_68": "pointer2",
                "local_64": "maxValue2",
                "uStack_c": "stackVal1",
                "uStack_8": "stackVal2",
                "uStack_4": "stackVal3"
            },
            "calling": [
                "FUN_08004cac"
            ],
            "called": [
                "FUN_080050fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005044": {
            "entrypoint": "0x08005044",
            "current_name": "update_data_08005044",
            "code": "\nundefined4 updateData_08005044(undefined4 *outputArray,int *inputArray,undefined4 inputValue,uint inputSize)\n\n{\n  int returnValue;\n  uint updatedSize;\n  uint originalSize;\n  int offset;\n  \n  originalSize = inputArray[2];\n  if ((originalSize <= inputSize) && ((*(ushort *)(inputArray + 3) & 0x480) != 0)) {\n    offset = *inputArray - inputArray[4];\n    originalSize = (uint)(inputArray[5] * 3) / 2;\n    updatedSize = inputSize + 1 + offset;\n    if (originalSize < updatedSize) {\n      originalSize = updatedSize;\n    }\n    if ((int)((uint)*(ushort *)(inputArray + 3) << 0x15) < 0) {\n      returnValue = FUN_08005714(outputArray,originalSize);\n      if (returnValue == 0) {\nLAB_0800508a:\n        *outputArray = 0xc;\n        *(ushort *)(inputArray + 3) = *(ushort *)(inputArray + 3) | 0x40;\n        return 0xffffffff;\n      }\n      FUN_08005630(returnValue,inputArray[4],offset);\n      *(ushort *)(inputArray + 3) = *(ushort *)(inputArray + 3) & 0xfb7f | 0x80;\n    }\n    else {\n      returnValue = FUN_080057d0(outputArray,inputArray[4],originalSize);\n      if (returnValue == 0) {\n        FUN_0800567c(outputArray,inputArray[4]);\n        goto LAB_0800508a;\n      }\n    }\n    inputArray[4] = returnValue;\n    *inputArray = returnValue + offset;\n    inputArray[5] = originalSize;\n    inputArray[2] = originalSize - offset;\n    originalSize = inputSize;\n  }\n  if (inputSize <= originalSize) {\n    originalSize = inputSize;\n  }\n  FUN_08005646(*inputArray,inputValue,originalSize);\n  inputArray[2] = inputArray[2] - originalSize;\n  *inputArray = originalSize + *inputArray;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005044": "update_data_08005044",
                "param_1": "outputArray",
                "param_2": "inputArray",
                "param_3": "inputValue",
                "param_4": "inputSize",
                "iVar1": "returnValue",
                "uVar2": "updatedSize",
                "uVar3": "originalSize",
                "iVar4": "offset"
            },
            "calling": [
                "FUN_080050fc"
            ],
            "called": [
                "FUN_0800567c",
                "FUN_08005714",
                "FUN_080057d0",
                "FUN_08005646",
                "FUN_08005630"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080050fc": {
            "entrypoint": "0x080050fc",
            "current_name": "parse_data_080050fc",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08005294) */\n\nint parse_data_080050fc(undefined4 *output_buffer,int *input_buffer,byte *data,int *aux_buffer)\n\n{\n  int result;\n  int status;\n  int *ptr_buffer;\n  bool is_numeric;\n  byte *ptr_data;\n  byte *ptr_data_end;\n  int additional_status;\n  int *aux_buffer_ptr;\n  uint flags;\n  int precision;\n  undefined4 padding;\n  int width;\n  int total_length;\n  byte specifier;\n  undefined hex_upper;\n  undefined hex_lower;\n  undefined sign;\n  undefined4 conversion_flags;\n  \n  aux_buffer_ptr = aux_buffer;\n  if (((int)((uint)*(ushort *)(input_buffer + 3) << 0x18) < 0) && (input_buffer[4] == 0)) {\n    result = FUN_08005714(output_buffer,0x40);\n    *input_buffer = result;\n    input_buffer[4] = result;\n    if (result == 0) {\n      *output_buffer = 0xc;\n      return -1;\n    }\n    input_buffer[5] = 0x40;\n  }\n  total_length = 0;\n  hex_upper = 0x20;\n  hex_lower = 0x30;\n  ptr_data = data;\nLAB_08005146:\n  ptr_data_end = ptr_data;\n  if (*ptr_data_end != 0) goto LAB_080051ca;\n  goto LAB_08005150;\nLAB_080051ca:\n  ptr_data = ptr_data_end + 1;\n  if (*ptr_data_end != 0x25) goto LAB_08005146;\nLAB_08005150:\n  result = (int)ptr_data_end - (int)data;\n  if (result != 0) {\n    status = FUN_08005044(output_buffer,input_buffer,data,result);\n    if (status == -1) {\nLAB_080052ac:\n      if ((int)((uint)*(ushort *)(input_buffer + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return total_length;\n    }\n    total_length = total_length + result;\n  }\n  if (*ptr_data_end == 0) goto LAB_080052ac;\n  flags = 0;\n  width = 0;\n  precision = -1;\n  padding = 0;\n  sign = 0;\n  conversion_flags = 0;\n  ptr_data = ptr_data_end + 1;\n  while( true ) {\n    result = FUN_08005614(&DAT_08007379,*ptr_data);\n    data = ptr_data + 1;\n    if (result == 0) break;\n    flags = 1 << (result + 0xf7ff8c87U & 0xff) | flags;\n    ptr_data = data;\n  }\n  if ((int)(flags << 0x1b) < 0) {\n    sign = 0x20;\n  }\n  if ((int)(flags << 0x1c) < 0) {\n    sign = 0x2b;\n  }\n  if (*ptr_data == 0x2a) {\n    ptr_buffer = aux_buffer_ptr + 1;\n    result = *aux_buffer_ptr;\n    aux_buffer_ptr = ptr_buffer;\n    if (result < 0) {\n      width = -result;\n      flags = flags | 2;\n      goto LAB_080051fc;\n    }\n  }\n  else {\n    is_numeric = false;\n    result = width;\n    data = ptr_data;\n    while( true ) {\n      if (9 < *data - 0x30) break;\n      result = result * 10 + (*data - 0x30);\n      is_numeric = true;\n      data = data + 1;\n    }\n    if (!is_numeric) goto LAB_080051fc;\n  }\n  width = result;\nLAB_080051fc:\n  if (*data == 0x2e) {\n    if (data[1] == 0x2a) {\n      data = data + 2;\n      ptr_buffer = aux_buffer_ptr + 1;\n      precision = *aux_buffer_ptr;\n      aux_buffer_ptr = ptr_buffer;\n      if (precision < 0) {\n        precision = -1;\n      }\n    }\n    else {\n      is_numeric = false;\n      result = 0;\n      precision = 0;\n      while( true ) {\n        data = data + 1;\n        if (9 < *data - 0x30) break;\n        result = result * 10 + (*data - 0x30);\n        is_numeric = true;\n      }\n      if (is_numeric) {\n        precision = result;\n      }\n    }\n  }\n  result = FUN_08005614(&DAT_0800737f,*data,3);\n  if (result != 0) {\n    data = data + 1;\n    flags = flags | 0x40 << (result + 0xf7ff8c81U & 0xff);\n  }\n  specifier = *data;\n  data = data + 1;\n  result = FUN_08005614(\"efgEFG\",specifier,6);\n  if (result == 0) {\n    additional_status = FUN_080053d4(output_buffer,&flags,input_buffer,0x8005045,&aux_buffer_ptr);\n    if (additional_status == -1) goto LAB_080052ac;\n  }\n  else {\n    aux_buffer_ptr = (int *)(((int)aux_buffer_ptr + 7U & 0xfffffff8) + 8);\n  }\n  total_length = total_length + additional_status;\n  ptr_data = data;\n  goto LAB_08005146;\n}\n\n",
            "renaming": {
                "FUN_080050fc": "parse_data_080050fc",
                "param_1": "output_buffer",
                "param_2": "input_buffer",
                "param_3": "data",
                "param_4": "aux_buffer",
                "iVar1": "result",
                "iVar2": "status",
                "piVar3": "ptr_buffer",
                "bVar4": "is_numeric",
                "pbVar5": "ptr_data",
                "pbVar6": "ptr_data_end",
                "unaff_r9": "additional_status",
                "local_8c": "aux_buffer_ptr",
                "local_88": "flags",
                "local_84": "precision",
                "local_80": "padding",
                "local_7c": "width",
                "local_74": "total_length",
                "local_70": "specifier",
                "local_6f": "hex_upper",
                "local_6e": "hex_lower",
                "local_45": "sign",
                "local_30": "conversion_flags"
            },
            "calling": [
                "FUN_08004ffc"
            ],
            "called": [
                "FUN_08005044",
                "FUN_080053d4",
                "FUN_08005714",
                "FUN_08005614"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080052e4": {
            "entrypoint": "0x080052e4",
            "current_name": "decode_and_process_data_080052e4",
            "code": "\nundefined4\ndecode_and_process_data_080052e4(undefined4 input1,uint *data,uint *output,undefined4 input2,code *callback_function)\n\n{\n  int iteration;\n  int result;\n  uint max_value;\n  uint increment;\n  bool is_condition_met;\n  \n  max_value = data[4];\n  if ((int)data[4] < (int)data[2]) {\n    max_value = data[2];\n  }\n  *output = max_value;\n  if (*(char *)((int)data + 0x43) != '\\0') {\n    *output = max_value + 1;\n  }\n  if ((int)(*data << 0x1a) < 0) {\n    *output = *output + 2;\n  }\n  if ((*data & 6) == 0) {\n    for (iteration = 0; iteration < (int)(data[3] - *output); iteration = iteration + 1) {\n      result = (*callback_function)(input1,input2,(int)data + 0x19,1);\n      if (result == -1) {\n        return 0xffffffff;\n      }\n    }\n  }\n  max_value = (uint)*(byte *)((int)data + 0x43);\n  if (max_value != 0) {\n    max_value = 1;\n  }\n  increment = max_value;\n  if ((int)(*data << 0x1a) < 0) {\n    *(undefined *)((int)data + max_value + 0x43) = 0x30;\n    increment = max_value + 2;\n    *(undefined *)((int)data + max_value + 0x44) = *(undefined *)((int)data + 0x45);\n  }\n  iteration = (*callback_function)(input1,input2,(int)data + 0x43,increment);\n  if (iteration != -1) {\n    max_value = data[3];\n    is_condition_met = (*data & 6) != 4;\n    if (is_condition_met) {\n      max_value = 0;\n    }\n    increment = 0;\n    if (!is_condition_met) {\n      max_value = max_value - *output;\n    }\n    if (!is_condition_met) {\n      max_value = max_value & ~((int)max_value >> 0x1f);\n    }\n    if ((int)data[4] < (int)data[2]) {\n      max_value = max_value + (data[2] - data[4]);\n    }\n    while( true ) {\n      if (max_value == increment) {\n        return 0;\n      }\n      iteration = (*callback_function)(input1,input2,(int)data + 0x1a,1);\n      if (iteration == -1) break;\n      increment = increment + 1;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080052e4": "decode_and_process_data_080052e4",
                "param_1": "input1",
                "param_2": "data",
                "param_3": "output",
                "param_4": "input2",
                "param_5": "callback_function",
                "iVar1": "iteration",
                "iVar2": "result",
                "uVar3": "max_value",
                "uVar4": "increment",
                "bVar5": "is_condition_met"
            },
            "calling": [
                "FUN_080053d4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080053d4": {
            "entrypoint": "0x080053d4",
            "current_name": "convert_value_080053d4",
            "code": "\nuint convertValue_080053d4(undefined4 input_data,uint *input_array,undefined4 param_3,code *callback_func,uint **output_data)\n\n{\n  byte first_element;\n  int index_1;\n  uint *ptr_value;\n  int index_2;\n  char *char_ptr;\n  uint value_1;\n  uint **ppuVar7;\n  char **ppcVar8;\n  uint value_2;\n  uint value_3;\n  char *char_ptr_2;\n  char *char_ptr_3;\n  uint local_24 [2];\n  \n  first_element = *(byte *)(input_array + 6);\n  char_ptr_3 = (char *)((int)input_array + 0x43);\n  if (first_element != 0x6e) {\n    if (first_element < 0x6f) {\n      if (first_element != 99) {\n        if (first_element < 100) {\n          if (first_element == 0) goto LAB_0800558e;\n          if (first_element != 0x58) goto LAB_08005404;\n          *(undefined *)((int)input_array + 0x45) = 0x58;\n          char_ptr = \"0123456789ABCDEF\";\nLAB_0800551e:\n          value_1 = *input_array;\n          ptr_value = *output_data;\n          *output_data = ptr_value + 1;\n          if (((value_1 & 0x80) == 0) && ((int)(value_1 << 0x19) < 0)) {\n            value_2 = (uint)*(ushort *)ptr_value;\n          }\n          else {\n            value_2 = *ptr_value;\n          }\n          if ((int)(value_1 << 0x1f) < 0) {\n            *input_array = value_1 | 0x20;\n          }\n          if (value_2 == 0) {\n            *input_array = *input_array & 0xffffffdf;\n          }\n          value_1 = 0x10;\nLAB_080054b4:\n          *(undefined *)((int)input_array + 0x43) = 0;\n        }\n        else {\n          if ((first_element != 100) && (first_element != 0x69)) goto LAB_08005404;\n          value_2 = *input_array;\n          ptr_value = *output_data;\n          if ((value_2 & 0x80) == 0) {\n            *output_data = ptr_value + 1;\n            if ((value_2 & 0x40) == 0) goto LAB_08005424;\n            value_2 = (uint)(short)*(ushort *)ptr_value;\n          }\n          else {\n            *output_data = ptr_value + 1;\nLAB_08005424:\n            value_2 = *ptr_value;\n          }\n          if ((int)value_2 < 0) {\n            value_2 = -value_2;\n            *(undefined *)((int)input_array + 0x43) = 0x2d;\n          }\n          char_ptr = \"0123456789ABCDEF\";\n          value_1 = 10;\n        }\n        value_3 = input_array[1];\n        input_array[2] = value_3;\n        char_ptr_2 = char_ptr_3;\n        if ((int)value_3 < 0) {\n          if (value_2 != 0) goto LAB_08005552;\nLAB_08005600:\n          *(char *)((int)input_array + 0x42) = *char_ptr;\n          char_ptr_2 = (char *)((int)input_array + 0x42);\n        }\n        else {\n          *input_array = *input_array & 0xfffffffb;\n          if (value_2 == 0) {\n            if (value_3 != 0) goto LAB_08005600;\n          }\n          else {\nLAB_08005552:\n            do {\n              value_3 = value_2 / value_1;\n              char_ptr_2 = char_ptr_2 + -1;\n              *char_ptr_2 = char_ptr[value_2 - value_1 * value_3];\n              value_2 = value_3;\n            } while (value_3 != 0);\n          }\n        }\n        if (((value_1 == 8) && ((int)(*input_array << 0x1f) < 0)) && ((int)input_array[1] <= (int)input_array[4]))\n        {\n          char_ptr_2[-1] = '0';\n          char_ptr_2 = char_ptr_2 + -1;\n        }\n        input_array[4] = (int)char_ptr_3 - (int)char_ptr_2;\n        char_ptr_3 = char_ptr_2;\n        goto LAB_080054fa;\n      }\n      ptr_value = *output_data;\n      *output_data = ptr_value + 1;\n      *(char *)((int)input_array + 0x42) = (char)*ptr_value;\nLAB_08005464:\n      char_ptr_3 = (char *)((int)input_array + 0x42);\n      value_2 = 1;\n    }\n    else {\n      if (first_element != 0x73) {\n        if (first_element < 0x74) {\n          if (first_element == 0x6f) {\nLAB_0800548a:\n            value_2 = *input_array;\n            ptr_value = *output_data;\n            if ((value_2 & 0x80) == 0) {\n              *output_data = ptr_value + 1;\n              if ((value_2 & 0x40) == 0) goto LAB_08005498;\n              value_2 = (uint)*(ushort *)ptr_value;\n            }\n            else {\n              *output_data = ptr_value + 1;\nLAB_08005498:\n              value_2 = *ptr_value;\n            }\n            if (first_element == 0x6f) {\n              value_1 = 8;\n            }\n            else {\n              value_1 = 10;\n            }\n            char_ptr = \"0123456789ABCDEF\";\n            goto LAB_080054b4;\n          }\n          if (first_element == 0x70) {\n            *input_array = *input_array | 0x20;\nLAB_0800544a:\n            char_ptr = \"0123456789abcdef\";\n            *(undefined *)((int)input_array + 0x45) = 0x78;\n            goto LAB_0800551e;\n          }\n        }\n        else {\n          if (first_element == 0x75) goto LAB_0800548a;\n          if (first_element == 0x78) goto LAB_0800544a;\n        }\nLAB_08005404:\n        *(byte *)((int)input_array + 0x42) = first_element;\n        goto LAB_08005464;\n      }\n      ppcVar8 = (char **)*output_data;\n      *output_data = (uint *)(ppcVar8 + 1);\n      char_ptr_3 = *ppcVar8;\n      index_1 = FUN_08005614(char_ptr_3,0,input_array[1]);\n      if (index_1 != 0) {\n        input_array[1] = index_1 - (int)char_ptr_3;\n      }\n      value_2 = input_array[1];\n    }\n    input_array[4] = value_2;\n    *(undefined *)((int)input_array + 0x43) = 0;\n    goto LAB_080054fa;\n  }\n  value_2 = *input_array;\n  ppuVar7 = (uint **)*output_data;\n  value_1 = input_array[5];\n  if ((value_2 & 0x80) == 0) {\n    *output_data = (uint *)(ppuVar7 + 1);\n    ptr_value = *ppuVar7;\n    if ((value_2 & 0x40) == 0) goto LAB_0800557a;\n    *(short *)ptr_value = (short)value_1;\n  }\n  else {\n    *output_data = (uint *)(ppuVar7 + 1);\n    ptr_value = *ppuVar7;\nLAB_0800557a:\n    *ptr_value = value_1;\n  }\nLAB_0800558e:\n  input_array[4] = 0;\nLAB_080054fa:\n  index_1 = FUN_080052e4(input_data,input_array,local_24,param_3,callback_func);\n  if ((index_1 == -1) || (index_1 = (*callback_func)(input_data,param_3,char_ptr_3,input_array[4]), index_1 == -1)) {\nLAB_0800550e:\n    value_2 = 0xffffffff;\n  }\n  else {\n    if ((int)(*input_array << 0x1e) < 0) {\n      for (index_1 = 0; index_1 < (int)(input_array[3] - local_24[0]); index_1 = index_1 + 1) {\n        index_2 = (*callback_func)(input_data,param_3,(int)input_array + 0x19,1);\n        if (index_2 == -1) goto LAB_0800550e;\n      }\n    }\n    value_2 = input_array[3];\n    if ((int)input_array[3] < (int)local_24[0]) {\n      value_2 = local_24[0];\n    }\n  }\n  return value_2;\n}\n\n",
            "renaming": {
                "FUN_080053d4": "convert_value_080053d4",
                "param_1": "input_data",
                "param_2": "input_array",
                "param_4": "callback_func",
                "param_5": "output_data",
                "bVar1": "first_element",
                "iVar2": "index_1",
                "puVar3": "ptr_value",
                "iVar4": "index_2",
                "pcVar5": "char_ptr",
                "uVar6": "value_1",
                "uVar9": "value_2",
                "uVar10": "value_3",
                "pcVar11": "char_ptr_2",
                "pcVar12": "char_ptr_3"
            },
            "calling": [
                "FUN_080050fc"
            ],
            "called": [
                "FUN_080052e4",
                "FUN_08005614"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005614": {
            "entrypoint": "0x08005614",
            "current_name": "find_char_pointer_08005614",
            "code": "\nchar * find_char_pointer_08005614(char *str,char target_char,int str_length)\n\n{\n  char *current_ptr;\n  char *next_ptr;\n  \n  current_ptr = str;\n  do {\n    next_ptr = current_ptr;\n    if (next_ptr == str + str_length) {\n      return (char *)0x0;\n    }\n    current_ptr = next_ptr + 1;\n  } while (*next_ptr != target_char);\n  return next_ptr;\n}\n\n",
            "renaming": {
                "FUN_08005614": "find_char_pointer_08005614",
                "param_1": "str",
                "param_2": "target_char",
                "param_3": "str_length",
                "pcVar1": "current_ptr",
                "pcVar2": "next_ptr"
            },
            "calling": [
                "FUN_080053d4",
                "FUN_080050fc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005630": {
            "entrypoint": "0x08005630",
            "current_name": "copy_bytes_08005630",
            "code": "\nvoid copyBytes_08005630(int dstOffset,undefined *srcBytes,int numBytes)\n\n{\n  undefined *dstEnd;\n  undefined *dstPtr;\n  \n  dstPtr = (undefined *)(dstOffset + -1);\n  dstEnd = srcBytes + numBytes;\n  for (; srcBytes != dstEnd; srcBytes = srcBytes + 1) {\n    dstPtr = dstPtr + 1;\n    *dstPtr = *srcBytes;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005630": "copy_bytes_08005630",
                "param_1": "dstOffset",
                "param_2": "srcBytes",
                "param_3": "numBytes",
                "puVar1": "dstEnd",
                "puVar2": "dstPtr"
            },
            "calling": [
                "FUN_08005044",
                "FUN_080057d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005646": {
            "entrypoint": "0x08005646",
            "current_name": "copy_overlapping_memory_08005646",
            "code": "\nvoid copyOverlappingMemory_08005646(undefined *destination,undefined *source,int length)\n\n{\n  undefined *destEnd;\n  \n  destEnd = source + length;\n  if ((source < destination) && (destination < destEnd)) {\n    destination = destination + length;\n    length = length - (int)destEnd;\n    while (destEnd + length != (undefined *)0x0) {\n      destEnd = destEnd + -1;\n      destination = destination + -1;\n      *destination = *destEnd;\n    }\n    return;\n  }\n  destination = destination + -1;\n  for (; source != destEnd; source = source + 1) {\n    destination = destination + 1;\n    *destination = *source;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005646": "copy_overlapping_memory_08005646",
                "param_1": "destination",
                "param_2": "source",
                "param_3": "length",
                "puVar1": "destEnd"
            },
            "calling": [
                "FUN_08005044"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800567c": {
            "entrypoint": "0x0800567c",
            "current_name": "update_data_structure_0800567c",
            "code": "\nvoid updateDataStructure_0800567c(undefined4 *outputBuffer,int size,undefined4 param3,undefined4 param4)\n\n{\n  int **temporaryVar1;\n  int **tempPtr1;\n  int **tempPtr2;\n  int *tempVar3;\n  int **tempPtr4;\n  int **tempPtr5;\n  \n  if (size == 0) {\n    return;\n  }\n  tempPtr5 = (int **)(size + -4);\n  if (*(int *)(size + -4) < 0) {\n    tempPtr5 = (int **)((int)tempPtr5 + *(int *)(size + -4));\n  }\n  FUNC_0800583c();\n  tempPtr2 = (int **)&DAT_200002ac;\n  if (DAT_200002ac == (int **)0x0) {\n    tempPtr5[1] = (int *)0x0;\n    tempPtr1 = temporaryVar1;\n    DAT_200002ac = tempPtr5;\n  }\n  else {\n    tempPtr2 = DAT_200002ac;\n    if (tempPtr5 < DAT_200002ac) {\n      tempPtr1 = (int **)*tempPtr5;\n      tempPtr2 = (int **)((int)tempPtr5 + (int)tempPtr1);\n      if (DAT_200002ac == tempPtr2) {\n        tempVar3 = *DAT_200002ac;\n        DAT_200002ac = (int **)DAT_200002ac[1];\n        tempPtr2 = (int **)((int)tempVar3 + (int)tempPtr1);\n        *tempPtr5 = (int *)tempPtr2;\n      }\n      tempPtr5[1] = (int *)DAT_200002ac;\n      DAT_200002ac = tempPtr5;\n    }\n    else {\n      do {\n        tempPtr4 = tempPtr2;\n        tempPtr2 = (int **)tempPtr4[1];\n        if (tempPtr2 == (int **)0x0) break;\n      } while (tempPtr2 <= tempPtr5);\n      tempPtr1 = (int **)*tempPtr4;\n      if ((int **)((int)tempPtr4 + (int)tempPtr1) == tempPtr5) {\n        tempPtr1 = (int **)((int)tempPtr1 + (int)*tempPtr5);\n        *tempPtr4 = (int *)tempPtr1;\n        if (tempPtr2 == (int **)((int)tempPtr4 + (int)tempPtr1)) {\n          tempVar3 = *tempPtr2;\n          tempPtr2 = (int **)tempPtr2[1];\n          tempPtr1 = (int **)((int)tempPtr1 + (int)tempVar3);\n          *tempPtr4 = (int *)tempPtr1;\n          tempPtr4[1] = (int *)tempPtr2;\n        }\n      }\n      else if (tempPtr5 < (int **)((int)tempPtr4 + (int)tempPtr1)) {\n        *outputBuffer = 0xc;\n      }\n      else {\n        tempPtr1 = (int **)((int)tempPtr5 + (int)*tempPtr5);\n        if (tempPtr2 == tempPtr1) {\n          tempVar3 = *tempPtr2;\n          tempPtr2 = (int **)tempPtr2[1];\n          tempPtr1 = (int **)((int)tempVar3 + (int)*tempPtr5);\n          *tempPtr5 = (int *)tempPtr1;\n        }\n        tempPtr5[1] = (int *)tempPtr2;\n        tempPtr4[1] = (int *)tempPtr5;\n      }\n    }\n  }\n  FUNC_0800583e(outputBuffer,tempPtr1,tempPtr2,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800567c": "update_data_structure_0800567c",
                "param_1": "outputBuffer",
                "param_2": "size",
                "param_3": "param3",
                "param_4": "param4",
                "extraout_r1": "temporaryVar1",
                "ppiVar1": "tempPtr1",
                "ppiVar2": "tempPtr2",
                "piVar3": "tempVar3",
                "ppiVar4": "tempPtr4",
                "ppiVar5": "tempPtr5"
            },
            "calling": [
                "FUN_08005044",
                "FUN_080057d0"
            ],
            "called": [
                "FUN_0800583c",
                "FUN_0800583e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005714": {
            "entrypoint": "0x08005714",
            "current_name": "allocate_memory_block_08005714",
            "code": "\nuint allocate_memory_block_08005714(undefined4 *memory_block_pointer,uint requested_size)\n\n{\n  uint *current_block;\n  int difference;\n  uint *previous_block;\n  uint block_difference;\n  uint *previous_block_next;\n  uint allocated_size;\n  \n  allocated_size = (requested_size + 3 & 0xfffffffc) + 8;\n  if (allocated_size < 0xc) {\n    allocated_size = 0xc;\n  }\n  if (((int)allocated_size < 0) || (allocated_size < requested_size)) {\n    *memory_block_pointer = 0xc;\n  }\n  else {\n    FUNC_0800583c();\n    current_block = DAT_200002ac;\n    previous_block_next = DAT_200002ac;\n    while (previous_block = current_block, previous_block != (uint *)0x0) {\n      block_difference = *previous_block - allocated_size;\n      if (-1 < (int)block_difference) {\n        if (block_difference < 0xc) {\n          if (previous_block_next == previous_block) {\n            current_block = (uint *)previous_block_next[1];\n            DAT_200002ac = current_block;\n          }\n          else {\n            current_block = (uint *)previous_block[1];\n          }\n          if (previous_block_next != previous_block) {\n            previous_block_next[1] = (uint)current_block;\n            previous_block_next = previous_block;\n          }\n        }\n        else {\n          *previous_block = block_difference;\n          *(uint *)((int)previous_block + block_difference) = allocated_size;\n          previous_block_next = (uint *)((int)previous_block + block_difference);\n        }\n        goto LAB_08005778;\n      }\n      previous_block_next = previous_block;\n      current_block = (uint *)previous_block[1];\n    }\n    if (DAT_200002b0 == 0) {\n      DAT_200002b0 = FUN_0800581c(memory_block_pointer);\n    }\n    current_block = (uint *)FUN_0800581c(memory_block_pointer,allocated_size);\n    if ((current_block != (uint *)0xffffffff) &&\n       ((previous_block_next = (uint *)((int)current_block + 3U & 0xfffffffc), current_block == previous_block_next ||\n        (difference = FUN_0800581c(memory_block_pointer,(int)previous_block_next - (int)current_block), difference != -1)))) {\n      *previous_block_next = allocated_size;\nLAB_08005778:\n      FUNC_0800583e(memory_block_pointer);\n      allocated_size = (int)previous_block_next + 0xbU & 0xfffffff8;\n      difference = allocated_size - (int)(previous_block_next + 1);\n      if (difference != 0) {\n        *(int *)((int)previous_block_next + difference) = -difference;\n        return allocated_size;\n      }\n      return allocated_size;\n    }\n    *memory_block_pointer = 0xc;\n    FUNC_0800583e(memory_block_pointer);\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005714": "allocate_memory_block_08005714",
                "param_1": "memory_block_pointer",
                "param_2": "requested_size",
                "puVar1": "current_block",
                "iVar2": "difference",
                "puVar3": "previous_block",
                "uVar4": "block_difference",
                "puVar5": "previous_block_next",
                "uVar6": "allocated_size"
            },
            "calling": [
                "FUN_08005044",
                "FUN_080050fc",
                "FUN_080057d0"
            ],
            "called": [
                "FUN_0800583c",
                "FUN_0800581c",
                "FUN_0800583e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080057d0": {
            "entrypoint": "0x080057d0",
            "current_name": "process_data_080057d0",
            "code": "\nint processData_080057d0(undefined4 input_1,int input_2,uint input_3,undefined4 input_4)\n\n{\n  int result;\n  uint temp;\n  \n  if (input_2 != 0) {\n    if (input_3 == 0) {\n      FUN_0800567c();\n      result = 0;\n    }\n    else {\n      temp = FUN_08005840();\n      result = input_2;\n      if ((temp < input_3) && (result = FUN_08005714(input_1,input_3), result != 0)) {\n        FUN_08005630(result,input_2,input_3);\n        FUN_0800567c(input_1,input_2);\n      }\n    }\n    return result;\n  }\n  result = FUN_08005714(input_1,input_3,input_3,input_4);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080057d0": "process_data_080057d0",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "iVar1": "result",
                "uVar2": "temp"
            },
            "calling": [
                "FUN_08005044"
            ],
            "called": [
                "FUN_0800567c",
                "FUN_08005714",
                "FUN_08005840",
                "FUN_08005630"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800581c": {
            "entrypoint": "0x0800581c",
            "current_name": "check_and_update_value_0800581c",
            "code": "\nvoid checkAndUpdateValue_0800581c(int *result,undefined4 inputValue)\n\n{\n  int returnValue;\n  \n  DAT_2000169c = 0;\n  returnValue = FUN_080072b8(inputValue);\n  if ((returnValue == -1) && (DAT_2000169c != 0)) {\n    *result = DAT_2000169c;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800581c": "check_and_update_value_0800581c",
                "param_1": "result",
                "param_2": "inputValue",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08005714"
            ],
            "called": [
                "FUN_080072b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800583c": {
            "entrypoint": "0x0800583c",
            "current_name": "FUNC_0800583c",
            "code": "\nvoid FUNC_0800583c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800583c": "FUNC_0800583c"
            },
            "calling": [
                "FUN_0800567c",
                "FUN_08005714"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800583e": {
            "entrypoint": "0x0800583e",
            "current_name": "FUNC_0800583e",
            "code": "\nvoid FUNC_0800583e(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800583e": "FUNC_0800583e"
            },
            "calling": [
                "FUN_0800567c",
                "FUN_08005714"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005840": {
            "entrypoint": "0x08005840",
            "current_name": "find_sum_or_offset_08005840",
            "code": "\nint find_sum_or_offset_08005840(undefined4 param_1,int num_list)\n\n{\n  int offset;\n  \n  offset = *(int *)(num_list + -4) + -4;\n  if (*(int *)(num_list + -4) < 0) {\n    offset = offset + *(int *)(num_list + offset);\n  }\n  return offset;\n}\n\n",
            "renaming": {
                "FUN_08005840": "find_sum_or_offset_08005840",
                "param_2": "num_list",
                "iVar1": "offset"
            },
            "calling": [
                "FUN_080057d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005854": {
            "entrypoint": "0x08005854",
            "current_name": "process_data_08005854",
            "code": "\nundefined8 processData_08005854(undefined4 input1,undefined4 input2)\n\n{\n  int result;\n  undefined4 *pointerVar;\n  int *intPointer;\n  undefined8 returnValue;\n  undefined8 functionValue;\n  undefined4 flag;\n  undefined *dataPointer;\n  undefined4 param1;\n  undefined4 param2;\n  undefined4 param1Copy;\n  undefined4 param2Copy;\n  undefined8 returnValue;\n  int errorCode;\n  \n  returnValue = FUN_08005c70();\n  if (DAT_20000224 == -1) {\n    return returnValue;\n  }\n  errorCode = FUN_08000a04(input1,input2,input1,input2);\n  if (errorCode != 0) {\n    return returnValue;\n  }\n  functionValue = FUNC_0800708c(input1,input2);\n  result = FUN_080009f0((int)functionValue,(int)((ulonglong)functionValue >> 0x20),0,0x3ff00000);\n  if (result == 0) {\n    return returnValue;\n  }\n  flag = 1;\n  dataPointer = &DAT_080073ac;\n  param1 = input1;\n  param2 = input2;\n  param1Copy = input1;\n  param2Copy = input2;\n  returnValue = FUN_080070a4(&DAT_0800737e);\n  if (DAT_20000224 != '\\x02') {\n    result = FUN_0800709e(&flag);\n    if (result != 0) goto LAB_080058d0;\n  }\n  pointerVar = (undefined4 *)FUN_080072ac();\n  *pointerVar = 0x21;\nLAB_080058d0:\n  if (errorCode != 0) {\n    intPointer = (int *)FUN_080072ac();\n    *intPointer = errorCode;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08005854": "process_data_08005854",
                "param_1": "input1",
                "param_2": "input2",
                "iVar1": "result",
                "puVar2": "pointerVar",
                "piVar3": "intPointer",
                "uVar4": "returnValue",
                "uVar5": "functionValue",
                "local_48": "flag",
                "local_44": "dataPointer",
                "local_40": "param1",
                "uStack_3c": "param2",
                "local_38": "param1Copy",
                "uStack_34": "param2Copy",
                "local_30": "returnValue",
                "local_28": "errorCode"
            },
            "calling": [
                "FUN_08003330"
            ],
            "called": [
                "FUN_0800708c",
                "FUN_080072ac",
                "FUN_080070a4",
                "FUN_08005c70",
                "FUN_080009f0",
                "FUN_0800709e",
                "FUN_08000a04"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_08006070": {
            "entrypoint": "0x080058fc",
            "current_name": "calculate_floating_point_thunk_08006070",
            "code": "\nundefined8 calculateFloatingPoint_thunk_08006070(uint exponentBit,uint significandBit,uint signBit,uint floatingPointNumber)\n\n{\n  undefined4 result1;\n  uint temp1;\n  uint temp2;\n  int temp3;\n  uint positiveFloatingPointNumber;\n  undefined8 result2;\n  undefined8 result3;\n  \n  positiveFloatingPointNumber = floatingPointNumber & 0x7fffffff;\n  if ((0x7ff00000 < (positiveFloatingPointNumber | (-signBit | signBit) >> 0x1f)) ||\n     (temp2 = significandBit & 0x7fffffff, 0x7ff00000 < (temp2 | (-exponentBit | exponentBit) >> 0x1f))) {\n    result2 = FUN_0800016c(exponentBit,significandBit,signBit,floatingPointNumber,floatingPointNumber);\n    return result2;\n  }\n  if ((floatingPointNumber + 0xc0100000 | signBit) == 0) {\n    result2 = FUN_08006d68();\n    return result2;\n  }\n  temp1 = (int)floatingPointNumber >> 0x1e & 2U | significandBit >> 0x1f;\n  if ((exponentBit | temp2) == 0) {\n    if (temp1 == 2) {\n      return 0x400921fb54442d18;\n    }\n    if (temp1 != 3) {\n      return CONCAT44(significandBit,exponentBit);\n    }\nLAB_0800613e:\n    result2 = 0xc00921fb54442d18;\n  }\n  else {\n    if ((signBit | positiveFloatingPointNumber) != 0) {\n      if (positiveFloatingPointNumber == 0x7ff00000) {\n        if (temp2 == 0x7ff00000) {\n          if (temp1 == 2) {\n            return 0x4002d97c7f3321d2;\n          }\n          if (temp1 == 3) {\n            return 0xc002d97c7f3321d2;\n          }\n          if (temp1 != 1) {\n            return 0x3fe921fb54442d18;\n          }\n          return 0xbfe921fb54442d18;\n        }\n        if (temp1 == 2) {\n          return 0x400921fb54442d18;\n        }\n        if (temp1 != 3) {\n          if (temp1 != 1) {\n            return 0;\n          }\n          return 0x8000000000000000;\n        }\n        goto LAB_0800613e;\n      }\n      if (temp2 != 0x7ff00000) {\n        temp3 = (int)(temp2 - positiveFloatingPointNumber) >> 0x14;\n        if (temp3 < 0x3d) {\n          if (((int)floatingPointNumber < 0) && (temp3 + 0x3c < 0 != SCARRY4(temp3,0x3c))) {\n            result2 = 0;\n          }\n          else {\n            FUN_08000724(exponentBit,significandBit);\n            FUNC_0800708c();\n            result2 = FUN_08006d68();\n          }\n        }\n        else {\n          result2 = 0x3ff921fb54442d18;\n        }\n        temp3 = (int)((ulonglong)result2 >> 0x20);\n        result1 = (undefined4)result2;\n        if (temp1 == 1) {\n          return CONCAT44(temp3 + -0x80000000,result1);\n        }\n        if (temp1 == 2) {\n          result3 = FUN_08000168(result1,temp3,0x33145c07,0x3ca1a626);\n          result2 = 0x400921fb54442d18;\n        }\n        else {\n          if (temp1 == 0) {\n            return result2;\n          }\n          result2 = FUN_08000168(result1,temp3,0x33145c07,0x3ca1a626);\n          result3 = 0x400921fb54442d18;\n        }\n        result2 = FUN_08000168((int)result2,(int)((ulonglong)result2 >> 0x20),(int)result3,\n                             (int)((ulonglong)result3 >> 0x20));\n        return result2;\n      }\n    }\n    if ((int)significandBit < 0) {\n      result2 = 0xbff921fb54442d18;\n    }\n    else {\n      result2 = 0x3ff921fb54442d18;\n    }\n  }\n  return result2;\n}\n\n",
            "renaming": {
                "thunk_FUN_08006070": "calculate_floating_point_thunk_08006070",
                "param_1": "exponentBit",
                "param_2": "significandBit",
                "param_3": "signBit",
                "param_4": "floatingPointNumber",
                "uVar1": "result1",
                "uVar2": "temp1",
                "uVar3": "temp2",
                "iVar4": "temp3",
                "uVar5": "positiveFloatingPointNumber",
                "uVar6": "result2",
                "uVar7": "result3"
            },
            "calling": [
                "FUN_08003330"
            ],
            "called": [
                "FUN_08006070"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005900": {
            "entrypoint": "0x08005900",
            "current_name": "process_data_08005900",
            "code": "\nundefined8 processData_08005900(undefined4 input1,undefined4 input2,undefined4 input3,undefined4 input4)\n\n{\n  char flag;\n  int result;\n  int *ptrResult;\n  undefined4 *ptrFlag;\n  int tempResult;\n  undefined4 upperHalf;\n  undefined4 lowerHalf;\n  undefined8 returnValue;\n  undefined8 tempValue;\n  undefined4 status;\n  undefined *message;\n  undefined4 input1Copy;\n  undefined4 input2Copy;\n  undefined4 input3Copy;\n  undefined4 input4Copy;\n  undefined8 returnValue2;\n  int tempResult2;\n  \n  returnValue = FUN_08006228();\n  flag = DAT_20000224;\n  upperHalf = (undefined4)((ulonglong)returnValue >> 0x20);\n  lowerHalf = (undefined4)returnValue;\n  if (DAT_20000224 == -1) {\n    return returnValue;\n  }\n  result = FUN_08000a04(input3,input4,input3,input4);\n  if (result != 0) {\n    return returnValue;\n  }\n  result = FUN_08000a04(input1,input2,input1,input2);\n  input1Copy = input1;\n  input2Copy = input2;\n  input3Copy = input3;\n  input4Copy = input4;\n  if (result == 0) {\n    result = FUN_080009a0(input1,input2,0,0);\n    if (result != 0) {\n      result = FUN_080009a0(input3,input4,0,0);\n      if (result != 0) {\n        status = 1;\n        message = &DAT_080073b1;\n        returnValue2 = 0;\n        tempResult2 = 0;\n        if (flag != '\\0') {\n          returnValue2 = 0x3ff0000000000000;\n          goto LAB_080059d0;\n        }\n        goto LAB_08005978;\n      }\n      result = FUN_08007092(input3,input4);\n      if (result == 0) {\n        return returnValue;\n      }\n      result = FUN_080009b4(input3,input4,0,0);\n      if (result == 0) {\n        return returnValue;\n      }\n      status = 1;\n      message = &DAT_080073b1;\n      tempResult2 = 0;\n      if (DAT_20000224 == '\\0') goto LAB_08005a22;\n      returnValue2 = 0xfff0000000000000;\n      tempResult2 = 0;\n      flag = DAT_20000224;\nLAB_08005a32:\n      if (flag != '\\x02') goto LAB_08005978;\n      goto LAB_08005a34;\n    }\n    result = FUN_08007092(lowerHalf,upperHalf);\n    if (((result != 0) || (tempResult = FUN_08007092(input1,input2), tempResult == 0)) ||\n       (tempResult = FUN_08007092(input3,input4), tempResult == 0)) {\n      result = FUN_080009a0(lowerHalf,upperHalf,0,0);\n      if (result == 0) {\n        return returnValue;\n      }\n      result = FUN_08007092(input1,input2);\n      if (result == 0) {\n        return returnValue;\n      }\n      result = FUN_08007092(input3,input4);\n      if (result == 0) {\n        return returnValue;\n      }\n      status = 4;\n      message = &DAT_080073b1;\n      tempResult2 = 0;\n      returnValue2._0_4_ = 0;\n      returnValue2._4_4_ = 0;\n      goto LAB_08005afa;\n    }\n    tempResult2 = FUN_08000a04(lowerHalf,upperHalf);\n    flag = DAT_20000224;\n    if (tempResult2 != 0) {\n      message = &DAT_080073b1;\n      status = 1;\n      tempResult2 = result;\n      if (DAT_20000224 != '\\0') {\n        returnValue2 = FUN_08000724(0,0,0,0);\n        goto LAB_08005a32;\n      }\nLAB_08005a22:\n      message = &DAT_080073b1;\n      status = 1;\n      returnValue2 = 0;\n      goto LAB_08005978;\n    }\n    message = &DAT_080073b1;\n    status = 3;\n    if (DAT_20000224 == '\\0') {\n      returnValue2._0_4_ = 0xe0000000;\n      returnValue2._4_4_ = 0x47efffff;\n      result = FUN_080009b4(input1,input2,0,0);\n      if (result != 0) {\n        returnValue = FUN_080004d0(input3,input4,0,0x3fe00000);\n        tempValue = FUN_080070b0();\n        result = FUN_080009a0((int)returnValue,(int)((ulonglong)returnValue >> 0x20),(int)tempValue,\n                             (int)((ulonglong)tempValue >> 0x20));\n        if (result == 0) {\n          returnValue2._0_4_ = 0xe0000000;\n          returnValue2._4_4_ = 0xc7efffff;\n        }\n        goto LAB_08005afa;\n      }\nLAB_08005b98:\n      result = FUN_0800709e(&status);\n      if (result != 0) goto LAB_080059d0;\n    }\n    else {\n      returnValue2._0_4_ = 0;\n      returnValue2._4_4_ = 0x7ff00000;\n      result = FUN_080009b4(input1,input2,0,0);\n      if (result != 0) {\n        returnValue = FUN_080004d0(input3,input4,0,0x3fe00000);\n        tempValue = FUN_080070b0();\n        result = FUN_080009a0((int)returnValue,(int)((ulonglong)returnValue >> 0x20),(int)tempValue,\n                             (int)((ulonglong)tempValue >> 0x20));\n        if (result == 0) {\n          returnValue2._0_4_ = 0;\n          returnValue2._4_4_ = 0xfff00000;\n        }\n      }\nLAB_08005afa:\n      if (DAT_20000224 != '\\x02') goto LAB_08005b98;\n    }\n    ptrFlag = (undefined4 *)FUN_080072ac();\n    lowerHalf = 0x22;\n  }\n  else {\n    result = FUN_080009a0(input3,input4,0,0);\n    if (result == 0) {\n      return returnValue;\n    }\n    status = 1;\n    message = &DAT_080073b1;\n    returnValue2 = 0x3ff0000000000000;\n    tempResult2 = 0;\n    if (flag == '\\x02') {\n      return 0x3ff0000000000000;\n    }\nLAB_08005978:\n    result = FUN_0800709e(&status);\n    if (result != 0) goto LAB_080059d0;\nLAB_08005a34:\n    ptrFlag = (undefined4 *)FUN_080072ac();\n    lowerHalf = 0x21;\n  }\n  *ptrFlag = lowerHalf;\nLAB_080059d0:\n  if (tempResult2 != 0) {\n    ptrResult = (int *)FUN_080072ac();\n    *ptrResult = tempResult2;\n  }\n  return returnValue2;\n}\n\n",
            "renaming": {
                "FUN_08005900": "process_data_08005900",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "cVar1": "flag",
                "iVar2": "result",
                "piVar3": "ptrResult",
                "puVar4": "ptrFlag",
                "iVar5": "tempResult",
                "uVar6": "upperHalf",
                "uVar7": "lowerHalf",
                "uVar8": "returnValue",
                "uVar9": "tempValue",
                "local_50": "status",
                "local_4c": "message",
                "local_48": "input1Copy",
                "uStack_44": "input2Copy",
                "local_40": "input3Copy",
                "uStack_3c": "input4Copy",
                "local_38": "returnValue2",
                "local_30": "tempResult2"
            },
            "calling": [
                "FUN_0800411c"
            ],
            "called": [
                "FUN_080004d0",
                "FUN_08007092",
                "FUN_080072ac",
                "FUN_080070b0",
                "FUN_08006228",
                "FUN_080009a0",
                "FUN_08000724",
                "FUN_080009b4",
                "FUN_0800709e",
                "FUN_08000a04"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005bc8": {
            "entrypoint": "0x08005bc8",
            "current_name": "process_function_08005bc8",
            "code": "\nundefined8 process_function_08005bc8(undefined4 input_1,undefined4 input_2)\n\n{\n  char char_value;\n  int result;\n  int *pointer_var;\n  undefined4 *pointer_var2;\n  undefined8 return_value;\n  undefined4 flag;\n  undefined *buffer;\n  undefined4 local_var_1;\n  undefined4 local_var_2;\n  undefined4 local_var_3;\n  undefined4 local_var_4;\n  undefined8 final_result;\n  int temp_result;\n  \n  return_value = FUN_08006c0c();\n  char_value = DAT_20000224;\n  if (DAT_20000224 == -1) {\n    return return_value;\n  }\n  temp_result = FUN_08000a04(input_1,input_2,input_1,input_2);\n  if (temp_result != 0) {\n    return return_value;\n  }\n  result = FUN_080009b4(input_1,input_2,0,0);\n  if (result == 0) {\n    return return_value;\n  }\n  flag = 1;\n  buffer = &DAT_080073b5;\n  local_var_1 = input_1;\n  local_var_2 = input_2;\n  local_var_3 = input_1;\n  local_var_4 = input_2;\n  if (char_value == '\\0') {\n    final_result = 0;\nLAB_08005c26:\n    result = FUN_0800709e(&flag);\n    if (result != 0) goto LAB_08005c2e;\n  }\n  else {\n    final_result = FUN_08000724(0,0,0,0);\n    if (char_value != '\\x02') goto LAB_08005c26;\n  }\n  pointer_var2 = (undefined4 *)FUN_080072ac();\n  *pointer_var2 = 0x21;\nLAB_08005c2e:\n  if (temp_result != 0) {\n    pointer_var = (int *)FUN_080072ac();\n    *pointer_var = temp_result;\n  }\n  return final_result;\n}\n\n",
            "renaming": {
                "FUN_08005bc8": "process_function_08005bc8",
                "param_1": "input_1",
                "param_2": "input_2",
                "cVar1": "char_value",
                "iVar2": "result",
                "piVar3": "pointer_var",
                "puVar4": "pointer_var2",
                "uVar5": "return_value",
                "local_50": "flag",
                "local_4c": "buffer",
                "local_48": "local_var_1",
                "uStack_44": "local_var_2",
                "local_40": "local_var_3",
                "uStack_3c": "local_var_4",
                "local_38": "final_result",
                "local_30": "temp_result"
            },
            "calling": [
                "FUN_08003330"
            ],
            "called": [
                "FUN_080072ac",
                "FUN_08006c0c",
                "FUN_08000724",
                "FUN_080009b4",
                "FUN_0800709e",
                "FUN_08000a04"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c70": {
            "entrypoint": "0x08005c70",
            "current_name": "calculate_result_08005c70",
            "code": "\nundefined8 calculate_result_08005c70(uint input_1,uint input_2)\n\n{\n  int result;\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  undefined4 temp4;\n  undefined4 temp5;\n  undefined4 temp6;\n  uint uVar;\n  undefined8 result_1;\n  undefined8 result_2;\n  undefined8 result_3;\n  \n  result_1 = CONCAT44(input_2,input_1);\n  uVar = input_2 & 0x7fffffff;\n  if (uVar < 0x3ff00000) {\n    if (uVar < 0x3fe00000) {\n      if (0x3e3fffff < uVar) {\n        result_2 = FUN_080004d0(input_1,input_2,input_1,input_2);\n        temp6 = (undefined4)((ulonglong)result_2 >> 0x20);\n        temp5 = (undefined4)result_2;\n        result_2 = FUN_080004d0(temp5,temp6,0xdfdf709,0x3f023de1);\n        result_2 = FUN_0800016c((int)result_2,(int)((ulonglong)result_2 >> 0x20),0x7501b288,0x3f49efe0);\n        result_2 = FUN_080004d0((int)result_2,(int)((ulonglong)result_2 >> 0x20),temp5,temp6);\n        result_2 = FUN_08000168((int)result_2,(int)((ulonglong)result_2 >> 0x20),0xb5688f3b,0x3fa48228);\n        result_2 = FUN_080004d0((int)result_2,(int)((ulonglong)result_2 >> 0x20),temp5,temp6);\n        result_2 = FUN_0800016c((int)result_2,(int)((ulonglong)result_2 >> 0x20),0xe884455,0x3fc9c155);\n        result_2 = FUN_080004d0((int)result_2,(int)((ulonglong)result_2 >> 0x20),temp5,temp6);\n        result_2 = FUN_08000168((int)result_2,(int)((ulonglong)result_2 >> 0x20),0x3eb6f7d,0x3fd4d612);\n        result_2 = FUN_080004d0((int)result_2,(int)((ulonglong)result_2 >> 0x20),temp5,temp6);\n        result_2 = FUN_0800016c((int)result_2,(int)((ulonglong)result_2 >> 0x20),0x55555555,0x3fc55555);\n        result_2 = FUN_080004d0((int)result_2,(int)((ulonglong)result_2 >> 0x20),temp5,temp6);\n        result_3 = FUN_080004d0(temp5,temp6,0xb12e9282,0x3fb3b8c5);\n        result_3 = FUN_08000168((int)result_3,(int)((ulonglong)result_3 >> 0x20),0x1b8d0159,0x3fe6066c);\n        result_3 = FUN_080004d0((int)result_3,(int)((ulonglong)result_3 >> 0x20),temp5,temp6);\n        result_3 = FUN_0800016c((int)result_3,(int)((ulonglong)result_3 >> 0x20),0x9c598ac8,0x40002ae5);\n        result_3 = FUN_080004d0((int)result_3,(int)((ulonglong)result_3 >> 0x20),temp5,temp6);\n        result_3 = FUN_08000168((int)result_3,(int)((ulonglong)result_3 >> 0x20),0x1c8a2d4b,0x40033a27);\n        result_3 = FUN_080004d0((int)result_3,(int)((ulonglong)result_3 >> 0x20),temp5,temp6);\n        result_3 = FUN_0800016c((int)result_3,(int)((ulonglong)result_3 >> 0x20),0,0x3ff00000);\n        result_2 = FUN_08000724((int)result_2,(int)((ulonglong)result_2 >> 0x20),(int)result_3,\n                              (int)((ulonglong)result_3 >> 0x20));\n        result_2 = FUN_080004d0((int)result_2,(int)((ulonglong)result_2 >> 0x20),input_1,input_2);\n        goto LAB_08005cba;\n      }\n      result_2 = FUN_0800016c(input_1,input_2,0x8800759c,0x7e37e43c);\n      result = FUN_080009f0((int)result_2,(int)((ulonglong)result_2 >> 0x20),0,0x3ff00000);\n      if (result != 0) {\n        return result_1;\n      }\n    }\n    result_1 = FUNC_0800708c(input_1,input_2);\n    result_1 = FUN_08000168(0,0x3ff00000,(int)result_1,(int)((ulonglong)result_1 >> 0x20));\n    result_1 = FUN_080004d0((int)result_1,(int)((ulonglong)result_1 >> 0x20),0,0x3fe00000);\n    temp1 = (undefined4)((ulonglong)result_1 >> 0x20);\n    temp5 = (undefined4)result_1;\n    result_1 = FUN_080004d0(temp5,temp1,0xdfdf709,0x3f023de1);\n    result_1 = FUN_0800016c((int)result_1,(int)((ulonglong)result_1 >> 0x20),0x7501b288,0x3f49efe0);\n    result_1 = FUN_080004d0((int)result_1,(int)((ulonglong)result_1 >> 0x20),temp5,temp1);\n    result_1 = FUN_08000168((int)result_1,(int)((ulonglong)result_1 >> 0x20),0xb5688f3b,0x3fa48228);\n    result_1 = FUN_080004d0((int)result_1,(int)((ulonglong)result_1 >> 0x20),temp5,temp1);\n    result_1 = FUN_0800016c((int)result_1,(int)((ulonglong)result_1 >> 0x20),0xe884455,0x3fc9c155);\n    result_1 = FUN_080004d0((int)result_1,(int)((ulonglong)result_1 >> 0x20),temp5,temp1);\n    result_1 = FUN_08000168((int)result_1,(int)((ulonglong)result_1 >> 0x20),0x3eb6f7d,0x3fd4d612);\n    result_1 = FUN_080004d0((int)result_1,(int)((ulonglong)result_1 >> 0x20),temp5,temp1);\n    result_1 = FUN_0800016c((int)result_1,(int)((ulonglong)result_1 >> 0x20),0x55555555,0x3fc55555);\n    result_1 = FUN_080004d0((int)result_1,(int)((ulonglong)result_1 >> 0x20),temp5,temp1);\n    temp2 = (undefined4)((ulonglong)result_1 >> 0x20);\n    result_2 = FUN_080004d0(temp5,temp1,0xb12e9282,0x3fb3b8c5);\n    result_2 = FUN_08000168((int)result_2,(int)((ulonglong)result_2 >> 0x20),0x1b8d0159,0x3fe6066c);\n    result_2 = FUN_080004d0((int)result_2,(int)((ulonglong)result_2 >> 0x20),temp5,temp1);\n    result_2 = FUN_0800016c((int)result_2,(int)((ulonglong)result_2 >> 0x20),0x9c598ac8,0x40002ae5);\n    result_2 = FUN_080004d0((int)result_2,(int)((ulonglong)result_2 >> 0x20),temp5,temp1);\n    result_2 = FUN_08000168((int)result_2,(int)((ulonglong)result_2 >> 0x20),0x1c8a2d4b,0x40033a27);\n    result_2 = FUN_080004d0((int)result_2,(int)((ulonglong)result_2 >> 0x20),temp5,temp1);\n    result_2 = FUN_0800016c((int)result_2,(int)((ulonglong)result_2 >> 0x20),0,0x3ff00000);\n    temp3 = (undefined4)((ulonglong)result_2 >> 0x20);\n    result_3 = FUN_08006c0c(temp5,temp1);\n    temp4 = (undefined4)((ulonglong)result_3 >> 0x20);\n    temp6 = (undefined4)result_3;\n    if (uVar < 0x3fef3333) {\n      result_1 = FUN_08000724((int)result_1,temp2,(int)result_2,temp3);\n      result_2 = FUN_0800016c(temp6,temp4,temp6,temp4);\n      result_1 = FUN_080004d0((int)result_1,(int)((ulonglong)result_1 >> 0x20),(int)result_2,\n                           (int)((ulonglong)result_2 >> 0x20));\n      result_2 = FUN_080004d0(0,temp4,0,temp4);\n      result_2 = FUN_08000168(temp5,temp1,(int)result_2,(int)((ulonglong)result_2 >> 0x20));\n      result_3 = FUN_0800016c(temp6,temp4,0,temp4);\n      result_2 = FUN_08000724((int)result_2,(int)((ulonglong)result_2 >> 0x20),(int)result_3,\n                            (int)((ulonglong)result_3 >> 0x20));\n      temp5 = (undefined4)((ulonglong)result_2 >> 0x20);\n      result_2 = FUN_0800016c((int)result_2,temp5,(int)result_2,temp5);\n      result_2 = FUN_08000168(0x33145c07,0x3c91a626,(int)result_2,(int)((ulonglong)result_2 >> 0x20));\n      result_1 = FUN_08000168((int)result_1,(int)((ulonglong)result_1 >> 0x20),(int)result_2,\n                           (int)((ulonglong)result_2 >> 0x20));\n      result_2 = FUN_0800016c(0,temp4,0,temp4);\n      result_2 = FUN_08000168(0x54442d18,0x3fe921fb,(int)result_2,(int)((ulonglong)result_2 >> 0x20));\n      result_1 = FUN_08000168((int)result_1,(int)((ulonglong)result_1 >> 0x20),(int)result_2,\n                           (int)((ulonglong)result_2 >> 0x20));\n      temp5 = 0x3fe921fb;\n    }\n    else {\n      result_1 = FUN_08000724((int)result_1,temp2,(int)result_2,temp3);\n      result_1 = FUN_080004d0((int)result_1,(int)((ulonglong)result_1 >> 0x20),temp6,temp4);\n      result_1 = FUN_0800016c((int)result_1,(int)((ulonglong)result_1 >> 0x20),temp6,temp4);\n      temp5 = (undefined4)((ulonglong)result_1 >> 0x20);\n      result_1 = FUN_0800016c((int)result_1,temp5,(int)result_1,temp5);\n      result_1 = FUN_08000168((int)result_1,(int)((ulonglong)result_1 >> 0x20),0x33145c07,0x3c91a626);\n      temp5 = 0x3ff921fb;\n    }\n    result_1 = FUN_08000168(0x54442d18,temp5,(int)result_1,(int)((ulonglong)result_1 >> 0x20));\n    if ((int)input_2 < 1) {\n      result_1 = CONCAT44((int)((ulonglong)result_1 >> 0x20) + -0x80000000,(int)result_1);\n    }\n  }\n  else {\n    if ((uVar + 0xc0100000 | input_1) != 0) {\n      result_1 = FUN_08000168(input_1,input_2,input_1,input_2);\n      temp5 = (undefined4)((ulonglong)result_1 >> 0x20);\n      result_1 = FUN_08000724((int)result_1,temp5,(int)result_1,temp5);\n      return result_1;\n    }\n    result_1 = FUN_080004d0(input_1,input_2,0x54442d18,0x3ff921fb);\n    result_2 = FUN_080004d0(input_1,input_2,0x33145c07,0x3c91a626);\nLAB_08005cba:\n    result_1 = FUN_0800016c((int)result_1,(int)((ulonglong)result_1 >> 0x20),(int)result_2,\n                         (int)((ulonglong)result_2 >> 0x20));\n  }\n  return result_1;\n}\n\n",
            "renaming": {
                "FUN_08005c70": "calculate_result_08005c70",
                "param_1": "input_1",
                "param_2": "input_2",
                "iVar1": "result",
                "uVar2": "temp1",
                "uVar3": "temp2",
                "uVar4": "temp3",
                "uVar5": "temp4",
                "uVar6": "temp5",
                "uVar7": "temp6",
                "uVar8": "uVar",
                "uVar9": "result_1",
                "uVar10": "result_2",
                "uVar11": "result_3"
            },
            "calling": [
                "FUN_08005854"
            ],
            "called": [
                "FUN_080004d0",
                "FUN_0800708c",
                "FUN_08006c0c",
                "FUN_08000168",
                "FUN_080009f0",
                "FUN_08000724",
                "FUN_0800016c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006070": {
            "entrypoint": "0x08006070",
            "current_name": "calculate_value_08006070",
            "code": "\nundefined8 calculateValue_08006070(uint input1,uint input2,uint input3,uint input4)\n\n{\n  undefined4 result1;\n  uint flag;\n  uint value1;\n  int difference;\n  uint value2;\n  undefined8 finalResult;\n  undefined8 tempResult;\n  \n  value2 = input4 & 0x7fffffff;\n  if ((0x7ff00000 < (value2 | (-input3 | input3) >> 0x1f)) ||\n     (value1 = input2 & 0x7fffffff, 0x7ff00000 < (value1 | (-input1 | input1) >> 0x1f))) {\n    finalResult = FUN_0800016c(input1,input2,input3,input4,input4);\n    return finalResult;\n  }\n  if ((input4 + 0xc0100000 | input3) == 0) {\n    finalResult = FUN_08006d68();\n    return finalResult;\n  }\n  flag = (int)input4 >> 0x1e & 2U | input2 >> 0x1f;\n  if ((input1 | value1) == 0) {\n    if (flag == 2) {\n      return 0x400921fb54442d18;\n    }\n    if (flag != 3) {\n      return CONCAT44(input2,input1);\n    }\nLAB_0800613e:\n    finalResult = 0xc00921fb54442d18;\n  }\n  else {\n    if ((input3 | value2) != 0) {\n      if (value2 == 0x7ff00000) {\n        if (value1 == 0x7ff00000) {\n          if (flag == 2) {\n            return 0x4002d97c7f3321d2;\n          }\n          if (flag == 3) {\n            return 0xc002d97c7f3321d2;\n          }\n          if (flag != 1) {\n            return 0x3fe921fb54442d18;\n          }\n          return 0xbfe921fb54442d18;\n        }\n        if (flag == 2) {\n          return 0x400921fb54442d18;\n        }\n        if (flag != 3) {\n          if (flag != 1) {\n            return 0;\n          }\n          return 0x8000000000000000;\n        }\n        goto LAB_0800613e;\n      }\n      if (value1 != 0x7ff00000) {\n        difference = (int)(value1 - value2) >> 0x14;\n        if (difference < 0x3d) {\n          if (((int)input4 < 0) && (difference + 0x3c < 0 != SCARRY4(difference,0x3c))) {\n            finalResult = 0;\n          }\n          else {\n            FUN_08000724(input1,input2);\n            FUNC_0800708c();\n            finalResult = FUN_08006d68();\n          }\n        }\n        else {\n          finalResult = 0x3ff921fb54442d18;\n        }\n        difference = (int)((ulonglong)finalResult >> 0x20);\n        result1 = (undefined4)finalResult;\n        if (flag == 1) {\n          return CONCAT44(difference + -0x80000000,result1);\n        }\n        if (flag == 2) {\n          tempResult = FUN_08000168(result1,difference,0x33145c07,0x3ca1a626);\n          finalResult = 0x400921fb54442d18;\n        }\n        else {\n          if (flag == 0) {\n            return finalResult;\n          }\n          finalResult = FUN_08000168(result1,difference,0x33145c07,0x3ca1a626);\n          tempResult = 0x400921fb54442d18;\n        }\n        finalResult = FUN_08000168((int)finalResult,(int)((ulonglong)finalResult >> 0x20),(int)tempResult,\n                             (int)((ulonglong)tempResult >> 0x20));\n        return finalResult;\n      }\n    }\n    if ((int)input2 < 0) {\n      finalResult = 0xbff921fb54442d18;\n    }\n    else {\n      finalResult = 0x3ff921fb54442d18;\n    }\n  }\n  return finalResult;\n}\n\n",
            "renaming": {
                "FUN_08006070": "calculate_value_08006070",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result1",
                "uVar2": "flag",
                "uVar3": "value1",
                "iVar4": "difference",
                "uVar5": "value2",
                "uVar6": "finalResult",
                "uVar7": "tempResult"
            },
            "calling": [
                "thunk_FUN_08006070"
            ],
            "called": [
                "FUN_0800708c",
                "FUN_08006d68",
                "FUN_08000168",
                "FUN_08000724",
                "FUN_0800016c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006228": {
            "entrypoint": "0x08006228",
            "current_name": "improved_calculation_08006228",
            "code": "\nuint improvedCalculation_08006228(uint input1,uint input2,uint input3,uint input4)\n\n{\n  undefined4 result1;\n  uint result2;\n  uint result3;\n  undefined4 result4;\n  undefined4 result5;\n  undefined4 result6;\n  undefined4 result7;\n  uint result8;\n  undefined4 result9;\n  int counter1;\n  int counter2;\n  undefined4 result10;\n  uint unsignedInput2;\n  undefined4 result11;\n  int counter3;\n  uint unsignedInput4;\n  undefined4 tempResult1;\n  undefined4 tempResult2;\n  undefined8 tempResult3;\n  undefined8 tempResult4;\n  undefined8 tempResult5;\n  undefined8 tempResult6;\n  longlong signedResult;\n  ulonglong combinedResult;\n  undefined8 tempResult7;\n  uint condition1;\n  undefined4 tempResult8;\n  undefined4 tempResult9;\n  int tempCounter;\n  \n  tempResult4 = CONCAT44(input2,input1);\n  unsignedInput4 = input4 & 0x7fffffff;\n  if ((unsignedInput4 | input3) == 0) {\n    return 0;\n  }\n  unsignedInput2 = input2 & 0x7fffffff;\n  if (unsignedInput2 < 0x7ff00001) {\n    if (unsignedInput2 == 0x7ff00000) {\n      if (input1 == 0) {\n        if (0x7ff00000 < unsignedInput4) goto LAB_08006278;\nLAB_08006262:\n        if ((unsignedInput4 != 0x7ff00000) || (input3 == 0)) {\n          if (-1 < (int)input2) goto LAB_0800632a;\n          if (unsignedInput4 < 0x43400000) {\n            if (unsignedInput4 < 0x3ff00000) {\nLAB_0800632a:\n              condition1 = 0;\n              goto LAB_080062ba;\n            }\n            counter1 = ((int)unsignedInput4 >> 0x14) + -0x3ff;\n            if (0x14 < counter1) {\n              result2 = input3 >> (0x34U - counter1 & 0xff);\n              if (input3 == result2 << (0x34U - counter1 & 0xff)) {\n                condition1 = 2 - (result2 & 1);\n                goto LAB_080062ba;\n              }\n              goto LAB_0800632a;\n            }\n            if (input3 == 0) {\n              result2 = (int)unsignedInput4 >> (0x14U - counter1 & 0xff);\n              if (unsignedInput4 == result2 << (0x14U - counter1 & 0xff)) {\n                condition1 = 2 - (result2 & 1);\n              }\n              else {\n                condition1 = 0;\n              }\n              goto LAB_0800630c;\n            }\n            condition1 = 0;\n          }\n          else {\n            condition1 = 2;\nLAB_080062ba:\n            if (input3 == 0) {\n              if (unsignedInput4 == 0x7ff00000) {\n                if ((unsignedInput2 + 0xc0100000 | input1) == 0) {\n                  return 0;\n                }\n                if (0x3fefffff < unsignedInput2) {\n                  if ((int)input4 < 0) {\n                    return 0;\n                  }\n                  return 0;\n                }\n                if (-1 < (int)input4) {\n                  return 0;\n                }\n                return 0;\n              }\nLAB_0800630c:\n              if (unsignedInput4 == 0x3ff00000) {\n                if (-1 < (int)input4) {\n                  return input1;\n                }\n                tempResult3 = 0x3ff0000000000000;\n                goto LAB_08006320;\n              }\n              if (input4 == 0x40000000) goto LAB_0800634a;\n              if ((input4 == 0x3fe00000) && (-1 < (int)input2)) {\n                unsignedInput4 = FUN_08006c0c(input1,input2);\n                return unsignedInput4;\n              }\n            }\n          }\n          tempResult3 = FUNC_0800708c(input1,input2);\n          tempResult1 = (undefined4)((ulonglong)tempResult3 >> 0x20);\n          result1 = (undefined4)tempResult3;\n          combinedResult = CONCAT44(input2,result1) & 0x7fffffffffffffff;\n          if ((input1 == 0) && ((unsignedInput2 == 0 || ((input2 & 0x3fffffff) == 0x3ff00000)))) {\n            if ((int)input4 < 0) {\n              tempResult3 = FUN_08000724(0,0x3ff00000,result1,tempResult1);\n            }\n            if (-1 < (int)input2) {\n              return (uint)tempResult3;\n            }\n            if ((condition1 | unsignedInput2 + 0xc0100000) != 0) {\n              return (uint)tempResult3;\n            }\n          }\n          else {\n            result2 = 0xffffffff - ((int)input2 >> 0x1f);\n            tempResult3 = tempResult4;\n            if ((condition1 | result2) != 0) {\n              if (unsignedInput4 < 0x41e00001) {\n                tempCounter = 0;\n                if (unsignedInput2 < 0x100000) {\n                  combinedResult = FUN_080004d0();\n                  tempCounter = -0x35;\n                }\n                unsignedInput4 = (uint)(combinedResult >> 0x20);\n                result1 = (undefined4)combinedResult;\n                tempCounter = ((int)unsignedInput4 >> 0x14) + -0x3ff + tempCounter;\n                unsignedInput4 = unsignedInput4 & 0xfffff;\n                unsignedInput2 = unsignedInput4 | 0x3ff00000;\n                if (unsignedInput4 < 0x3988f) {\nLAB_08006628:\n                  counter1 = 0;\n                }\n                else {\n                  if (0xbb679 < unsignedInput4) {\n                    unsignedInput2 = unsignedInput2 - 0x100000;\n                    tempCounter = tempCounter + 1;\n                    goto LAB_08006628;\n                  }\n                  counter1 = 1;\n                }\n                counter2 = counter1 * 8;\n                result10 = (&DAT_080073c0)[counter1 * 2];\n                result11 = (&DAT_080073c4)[counter1 * 2];\n                tempResult4 = FUN_08000168(result1,unsignedInput2,result10,result11);\n                tempResult2 = (undefined4)((ulonglong)tempResult4 >> 0x20);\n                tempResult3 = FUN_0800016c(result1,unsignedInput2,result10,result11);\n                tempResult3 = FUN_08000724(0,0x3ff00000,(int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20));\n                result4 = (undefined4)((ulonglong)tempResult3 >> 0x20);\n                tempResult5 = FUN_080004d0((int)tempResult4,tempResult2,(int)tempResult3,result4);\n                result5 = (undefined4)((ulonglong)tempResult5 >> 0x20);\n                tempResult1 = (undefined4)tempResult5;\n                tempResult5 = FUN_080004d0(0,result5);\n                tempResult4 = FUN_08000168((int)tempResult4,tempResult2,(int)tempResult5,\n                                      (int)((ulonglong)tempResult5 >> 0x20));\n                tempResult5 = FUN_08000168(0,((int)unsignedInput2 >> 1 | 0x20000000U) + 0x80000 + counter1 * 0x40000,\n                                      result10,result11);\n                tempResult5 = FUN_08000168(result1,unsignedInput2,(int)tempResult5,(int)((ulonglong)tempResult5 >> 0x20));\n                tempResult5 = FUN_080004d0((int)tempResult5,(int)((ulonglong)tempResult5 >> 0x20),0,result5);\n                tempResult4 = FUN_08000168((int)tempResult4,(int)((ulonglong)tempResult4 >> 0x20),(int)tempResult5,\n                                      (int)((ulonglong)tempResult5 >> 0x20));\n                tempResult4 = FUN_080004d0((int)tempResult4,(int)((ulonglong)tempResult4 >> 0x20),(int)tempResult3,result4\n                                     );\n                tempResult2 = (undefined4)((ulonglong)tempResult4 >> 0x20);\n                tempResult3 = FUN_080004d0(tempResult1,result5);\n                result4 = (undefined4)((ulonglong)tempResult3 >> 0x20);\n                result1 = (undefined4)tempResult3;\n                tempResult3 = FUN_080004d0(result1,result4,0x4a454eef,0x3fca7e28);\n                tempResult3 = FUN_0800016c((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),0x93c9db65,\n                                      0x3fcd864a);\n                tempResult3 = FUN_080004d0((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),result1,result4);\n                tempResult3 = FUN_0800016c((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),0xa91d4101,\n                                      0x3fd17460);\n                tempResult3 = FUN_080004d0((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),result1,result4);\n                tempResult3 = FUN_0800016c((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),0x518f264d,\n                                      0x3fd55555);\n                tempResult3 = FUN_080004d0((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),result1,result4);\n                tempResult3 = FUN_0800016c((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),0xdb6fabff,\n                                      0x3fdb6db6);\n                tempResult3 = FUN_080004d0((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),result1,result4);\n                tempResult3 = FUN_0800016c((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),0x33333303,\n                                      0x3fe33333);\n                tempResult5 = FUN_080004d0(result1,result4,result1,result4);\n                tempResult3 = FUN_080004d0((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),(int)tempResult5,\n                                      (int)((ulonglong)tempResult5 >> 0x20));\n                tempResult5 = FUN_0800016c(tempResult1,result5,0,result5);\n                tempResult5 = FUN_080004d0((int)tempResult5,(int)((ulonglong)tempResult5 >> 0x20),(int)tempResult4,\n                                      tempResult2);\n                tempResult3 = FUN_0800016c((int)tempResult5,(int)((ulonglong)tempResult5 >> 0x20),(int)tempResult3,\n                                      (int)((ulonglong)tempResult3 >> 0x20));\n                result1 = (undefined4)((ulonglong)tempResult3 >> 0x20);\n                tempResult5 = FUN_080004d0(0,result5,0,result5);\n                result4 = (undefined4)((ulonglong)tempResult5 >> 0x20);\n                tempResult6 = FUN_0800016c((int)tempResult5,result4,0,0x40080000);\n                FUN_0800016c((int)tempResult6,(int)((ulonglong)tempResult6 >> 0x20),(int)tempResult3,result1);\n                tempResult6 = FUN_080004d0(0,result5,0,result6);\n                result10 = (undefined4)((ulonglong)tempResult6 >> 0x20);\n                tempResult7 = FUN_08000168(0,result6,0,0x40080000);\n                tempResult5 = FUN_08000168((int)tempResult7,(int)((ulonglong)tempResult7 >> 0x20),(int)tempResult5,result4\n                                     );\n                tempResult3 = FUN_08000168((int)tempResult3,result1,(int)tempResult5,(int)((ulonglong)tempResult5 >> 0x20)\n                                     );\n                tempResult3 = FUN_080004d0((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),tempResult1,result5);\n                tempResult4 = FUN_080004d0((int)tempResult4,tempResult2,0,result6);\n                tempResult3 = FUN_0800016c((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),(int)tempResult4,\n                                      (int)((ulonglong)tempResult4 >> 0x20));\n                result1 = (undefined4)((ulonglong)tempResult3 >> 0x20);\n                FUN_0800016c((int)tempResult6,result10,(int)tempResult3,result1);\n                tempResult4 = FUN_080004d0(0,result7,0xe0000000,0x3feec709);\n                tempResult5 = FUN_08000168(0,result7,(int)tempResult6,result10);\n                tempResult3 = FUN_08000168((int)tempResult3,result1,(int)tempResult5,(int)((ulonglong)tempResult5 >> 0x20)\n                                     );\n                tempResult3 = FUN_080004d0((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),0xdc3a03fd,\n                                      0x3feec709);\n                tempResult5 = FUN_080004d0(0,result7,0x145b01f5,0xbe3e2fe0);\n                tempResult3 = FUN_0800016c((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),(int)tempResult5,\n                                      (int)((ulonglong)tempResult5 >> 0x20));\n                tempResult3 = FUN_0800016c((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),\n                                      *(undefined4 *)(&DAT_080073e0 + counter2),\n                                      *(undefined4 *)(&DAT_080073e4 + counter2));\n                tempResult5 = FUN_08000404(tempCounter);\n                result1 = (undefined4)((ulonglong)tempResult5 >> 0x20);\n                tempResult1 = *(undefined4 *)(&DAT_080073d0 + counter2);\n                tempResult2 = *(undefined4 *)(&DAT_080073d4 + counter2);\n                tempResult6 = FUN_0800016c((int)tempResult4,(int)((ulonglong)tempResult4 >> 0x20),(int)tempResult3,\n                                      (int)((ulonglong)tempResult3 >> 0x20));\n                tempResult6 = FUN_0800016c((int)tempResult6,(int)((ulonglong)tempResult6 >> 0x20),tempResult1,tempResult2);\n                FUN_0800016c((int)tempResult6,(int)((ulonglong)tempResult6 >> 0x20),(int)tempResult5,result1);\n                tempResult5 = FUN_08000168(0,result8,(int)tempResult5,result1);\n                signedResult = FUN_08000168((int)tempResult5,(int)((ulonglong)tempResult5 >> 0x20),tempResult1,tempResult2);\n                unsignedInput4 = result8;\n              }\n              else {\n                if (0x43f00000 < unsignedInput4) {\n                  if (unsignedInput2 < 0x3ff00000) goto LAB_080063fa;\nLAB_08006418:\n                  if ((int)input4 < 1) {\n                    return 0;\n                  }\nLAB_08006400:\n                  input1 = 0x8800759c;\n                  input2 = 0x7e37e43c;\n                  tempResult4 = 0x7e37e43c8800759c;\n                  goto LAB_0800634a;\n                }\n                if (unsignedInput2 < 0x3fefffff) {\nLAB_080063fa:\n                  if (-1 < (int)input4) {\n                    return 0;\n                  }\n                  goto LAB_08006400;\n                }\n                if (0x3ff00000 < unsignedInput2) goto LAB_08006418;\n                tempResult4 = FUN_08000168(result1,tempResult1,0,0x3ff00000);\n                tempResult1 = (undefined4)((ulonglong)tempResult4 >> 0x20);\n                result1 = (undefined4)tempResult4;\n                tempResult4 = FUN_080004d0(result1,tempResult1,0x60000000,0x3ff71547);\n                tempResult3 = FUN_080004d0(result1,tempResult1,0xf85ddf44,0x3e54ae0b);\n                tempResult5 = FUN_080004d0(result1,tempResult1,0,0x3fd00000);\n                tempResult5 = FUN_08000168(0x55555555,0x3fd55555,(int)tempResult5,\n                                      (int)((ulonglong)tempResult5 >> 0x20));\n                tempResult5 = FUN_080004d0((int)tempResult5,(int)((ulonglong)tempResult5 >> 0x20),result1,tempResult1);\n                tempResult5 = FUN_08000168(0,0x3fe00000,(int)tempResult5,(int)((ulonglong)tempResult5 >> 0x20));\n                tempResult6 = FUN_080004d0(result1,tempResult1,result1,tempResult1);\n                tempResult5 = FUN_080004d0((int)tempResult5,(int)((ulonglong)tempResult5 >> 0x20),(int)tempResult6,\n                                      (int)((ulonglong)tempResult6 >> 0x20));\n                tempResult5 = FUN_080004d0((int)tempResult5,(int)((ulonglong)tempResult5 >> 0x20),0x652b82fe,\n                                      0x3ff71547);\n                tempResult3 = FUN_08000168((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),(int)tempResult5,\n                                      (int)((ulonglong)tempResult5 >> 0x20));\n                FUN_0800016c((int)tempResult4,(int)((ulonglong)tempResult4 >> 0x20),(int)tempResult3,\n                             (int)((ulonglong)tempResult3 >> 0x20));\n                signedResult = (ulonglong)result3 << 0x20;\n                unsignedInput4 = result3;\n              }\n              tempResult4 = FUN_08000168((int)signedResult,(int)((ulonglong)signedResult >> 0x20),(int)tempResult4,\n                                    (int)((ulonglong)tempResult4 >> 0x20));\n              tempResult4 = FUN_08000168((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),(int)tempResult4,\n                                    (int)((ulonglong)tempResult4 >> 0x20));\n              if ((condition1 - 1 | result2) == 0) {\n                input2 = 0xbff00000;\n              }\n              else {\n                input2 = 0x3ff00000;\n              }\n              condition1 = 0;\n              tempResult3 = FUN_08000168(input3,input4,0,input4);\n              tempResult3 = FUN_080004d0((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),0,unsignedInput4);\n              tempResult4 = FUN_080004d0((int)tempResult4,(int)((ulonglong)tempResult4 >> 0x20),input3,input4);\n              tempResult4 = FUN_0800016c((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),(int)tempResult4,\n                                    (int)((ulonglong)tempResult4 >> 0x20));\n              tempResult2 = (undefined4)((ulonglong)tempResult4 >> 0x20);\n              result1 = (undefined4)tempResult4;\n              tempResult4 = FUN_080004d0(0,unsignedInput4,0,input4);\n              result4 = (undefined4)((ulonglong)tempResult4 >> 0x20);\n              tempResult1 = (undefined4)tempResult4;\n              signedResult = FUN_0800016c(result1,tempResult2,tempResult1,result4);\n              unsignedInput2 = (uint)((ulonglong)signedResult >> 0x20);\n              unsignedInput4 = (uint)signedResult;\n              if (0x408fffffffffffff < signedResult) {\n                if ((unsignedInput2 + 0xbf700000 | unsignedInput4) == 0) {\n                  tempResult3 = FUN_0800016c(result1,tempResult2,0x652b82fe,0x3c971547);\n                  tempResult5 = FUN_08000168(unsignedInput4,unsignedInput2,tempResult1,result4);\n                  counter1 = FUN_080009f0((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),(int)tempResult5,\n                                       (int)((ulonglong)tempResult5 >> 0x20));\n                  if (counter1 == 0) goto LAB_08006968;\n                }\n                tempResult4 = FUN_080004d0(0,input2,0x8800759c,0x7e37e43c);\n                input1 = 0x8800759c;\n                input2 = 0x7e37e43c;\n                goto LAB_0800634a;\n              }\n              if ((unsignedInput2 & 0x7fffffff) < 0x4090cc00) {\nLAB_08006968:\n                if ((unsignedInput2 & 0x7fffffff) < 0x3fe00001) {\n                  counter1 = 0;\n                }\n                else {\n                  unsignedInput2 = (0x100000 >> (((int)(unsignedInput2 & 0x7fffffff) >> 0x14) - 0x3feU & 0xff)) +\n                          unsignedInput2;\n                  unsignedInput4 = (unsignedInput2 * 2 >> 0x15) - 0x3ff;\n                  counter1 = (int)(unsignedInput2 & 0xfffff | 0x100000) >> (0x14 - unsignedInput4 & 0xff);\n                  if (signedResult < 0) {\n                    counter1 = -counter1;\n                  }\n                  tempResult4 = FUN_08000168(tempResult1,result4,0,unsignedInput2 & ~(0xfffff >> (unsignedInput4 & 0xff)));\n                }\n                tempResult9 = (undefined4)((ulonglong)tempResult4 >> 0x20);\n                tempResult8 = (undefined4)tempResult4;\n                FUN_0800016c(tempResult8,tempResult9,result1,tempResult2);\n                tempResult4 = FUN_080004d0(0,result9,0,0x3fe62e43);\n                tempResult1 = (undefined4)((ulonglong)tempResult4 >> 0x20);\n                tempResult3 = FUN_08000168(0,result9,tempResult8,tempResult9);\n                tempResult3 = FUN_08000168(result1,tempResult2,(int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20));\n                tempResult3 = FUN_080004d0((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),0xfefa39ef,\n                                      0x3fe62e42);\n                tempResult5 = FUN_080004d0(0,result9,0xca86c39,0xbe205c61);\n                tempResult3 = FUN_0800016c((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),(int)tempResult5,\n                                      (int)((ulonglong)tempResult5 >> 0x20));\n                tempResult2 = (undefined4)((ulonglong)tempResult3 >> 0x20);\n                tempResult5 = FUN_0800016c((int)tempResult4,tempResult1,(int)tempResult3,tempResult2);\n                result4 = (undefined4)((ulonglong)tempResult5 >> 0x20);\n                result1 = (undefined4)tempResult5;\n                tempResult4 = FUN_08000168(result1,result4,(int)tempResult4,tempResult1);\n                tempResult4 = FUN_08000168((int)tempResult3,tempResult2,(int)tempResult4,\n                                      (int)((ulonglong)tempResult4 >> 0x20));\n                tempResult2 = (undefined4)((ulonglong)tempResult4 >> 0x20);\n                tempResult3 = FUN_080004d0(result1,result4,result1,result4);\n                result5 = (undefined4)((ulonglong)tempResult3 >> 0x20);\n                tempResult1 = (undefined4)tempResult3;\n                tempResult3 = FUN_080004d0(tempResult1,result5,0x72bea4d0,0x3e663769);\n                tempResult3 = FUN_08000168((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),0xc5d26bf1,\n                                      0x3ebbbd41);\n                tempResult3 = FUN_080004d0((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),tempResult1,result5);\n                tempResult3 = FUN_0800016c((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),0xaf25de2c,\n                                      0x3f11566a);\n                tempResult3 = FUN_080004d0((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),tempResult1,result5);\n                tempResult3 = FUN_08000168((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),0x16bebd93,\n                                      0x3f66c16c);\n                tempResult3 = FUN_080004d0((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),tempResult1,result5);\n                tempResult3 = FUN_0800016c((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),0x5555553e,\n                                      0x3fc55555);\n                tempResult3 = FUN_080004d0((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),tempResult1,result5);\n                tempResult3 = FUN_08000168(result1,result4,(int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20));\n                tempResult1 = (undefined4)((ulonglong)tempResult3 >> 0x20);\n                tempResult5 = FUN_080004d0(result1,result4,(int)tempResult3,tempResult1);\n                tempResult3 = FUN_08000168((int)tempResult3,tempResult1,0,0x40000000);\n                tempResult3 = FUN_08000724((int)tempResult5,(int)((ulonglong)tempResult5 >> 0x20),(int)tempResult3,\n                                      (int)((ulonglong)tempResult3 >> 0x20));\n                tempResult5 = FUN_080004d0(result1,result4,(int)tempResult4,tempResult2);\n                tempResult4 = FUN_0800016c((int)tempResult5,(int)((ulonglong)tempResult5 >> 0x20),(int)tempResult4,\n                                      tempResult2);\n                tempResult4 = FUN_08000168((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),(int)tempResult4,\n                                      (int)((ulonglong)tempResult4 >> 0x20));\n                tempResult4 = FUN_08000168((int)tempResult4,(int)((ulonglong)tempResult4 >> 0x20),result1,result4);\n                tempResult3 = FUN_08000168(0,0x3ff00000,(int)tempResult4,(int)((ulonglong)tempResult4 >> 0x20));\n                counter2 = (int)((ulonglong)tempResult3 >> 0x20);\n                counter3 = counter2 + counter1 * 0x100000;\n                tempResult4 = CONCAT44(counter3,(int)tempResult3);\n                input1 = condition1;\n                if (counter3 < 0x100000) {\n                  tempResult4 = FUN_080071c0((int)tempResult3,counter2,counter1);\n                }\n              }\n              else {\n                if ((unsignedInput2 + 0x3f6f3400 | unsignedInput4) == 0) {\n                  tempResult3 = FUN_08000168(unsignedInput4,unsignedInput2,tempResult1,result4);\n                  counter1 = FUN_080009c8(result1,tempResult2,(int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20));\n                  if (counter1 == 0) goto LAB_08006968;\n                }\n                tempResult4 = FUN_080004d0(0,input2,0xc2f8f359,0x1a56e1f);\n                input1 = 0xc2f8f359;\n                input2 = 0x1a56e1f;\n              }\nLAB_0800634a:\n              unsignedInput4 = FUN_080004d0((int)tempResult4,(int)((ulonglong)tempResult4 >> 0x20),input1,input2);\n              return unsignedInput4;\n            }\n          }\n          result1 = (undefined4)((ulonglong)tempResult3 >> 0x20);\n          tempResult3 = FUN_08000168((int)tempResult3,result1,(int)tempResult3,result1);\n          tempResult4 = tempResult3;\nLAB_08006320:\n          unsignedInput4 = FUN_08000724((int)tempResult3,(int)((ulonglong)tempResult3 >> 0x20),(int)tempResult4,\n                                (int)((ulonglong)tempResult4 >> 0x20));\n          return unsignedInput4;\n        }\n      }\n    }\n    else if (unsignedInput4 < 0x7ff00001) goto LAB_08006262;\n  }\n  if ((unsignedInput2 + 0xc0100000 | input1) == 0) {\n    return 0;\n  }\nLAB_08006278:\n  unsignedInput4 = FUN_080070a4(&DAT_0800737e);\n  return unsignedInput4;\n}\n\n",
            "renaming": {
                "FUN_08006228": "improved_calculation_08006228",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result1",
                "uVar2": "result2",
                "extraout_r1": "result3",
                "uVar3": "result4",
                "uVar4": "result5",
                "extraout_r1_00": "result6",
                "extraout_r1_01": "result7",
                "extraout_r1_02": "result8",
                "extraout_r1_03": "result9",
                "iVar5": "counter1",
                "iVar6": "counter2",
                "uVar7": "result10",
                "uVar8": "unsignedInput2",
                "uVar9": "result11",
                "iVar10": "counter3",
                "uVar11": "unsignedInput4",
                "uVar12": "tempResult1",
                "uVar13": "tempResult2",
                "uVar14": "tempResult3",
                "uVar15": "tempResult4",
                "uVar16": "tempResult5",
                "uVar17": "tempResult6",
                "lVar18": "signedResult",
                "uVar19": "combinedResult",
                "uVar20": "tempResult7",
                "local_70": "condition1",
                "local_68": "tempResult8",
                "local_64": "tempResult9",
                "local_54": "tempCounter"
            },
            "calling": [
                "FUN_08005900"
            ],
            "called": [
                "FUN_080071c0",
                "FUN_080004d0",
                "FUN_0800708c",
                "FUN_080070a4",
                "FUN_080009c8",
                "FUN_08006c0c",
                "FUN_08000168",
                "FUN_080009f0",
                "FUN_08000724",
                "FUN_0800016c",
                "FUN_08000404"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c0c": {
            "entrypoint": "0x08006c0c",
            "current_name": "reverse_float_08006c0c",
            "code": "\nundefined8 reverseFloat_08006c0c(uint value,uint exponent)\n\n{\n  undefined4 temp1;\n  uint temp2;\n  int shift;\n  int count;\n  uint mask;\n  uint roundedBits;\n  int sign;\n  uint resultHigh;\n  uint temp3;\n  int i;\n  uint temp4;\n  undefined8 result;\n  \n  if ((~exponent & 0x7ff00000) == 0) {\n    result = FUN_080004d0(value,exponent,value,exponent);\n    result = FUN_0800016c(value,exponent,(int)result,(int)((ulonglong)result >> 0x20));\n    return result;\n  }\n  if ((int)exponent < 1) {\n    if ((exponent & 0x7fffffff | value) == 0) {\n      return CONCAT44(exponent,value);\n    }\n    if (exponent != 0) {\n      result = FUN_08000168(value,exponent,value,exponent);\n      temp1 = (undefined4)((ulonglong)result >> 0x20);\n      result = FUN_08000724((int)result,temp1,(int)result,temp1);\n      return result;\n    }\n  }\n  shift = (int)exponent >> 0x14;\n  if (shift == 0) {\n    while (exponent == 0) {\n      shift = shift + -0x15;\n      exponent = value >> 0xb;\n      value = value << 0x15;\n    }\n    temp2 = 0;\n    for (; -1 < (int)(exponent << 0xb); exponent = exponent << 1) {\n      temp2 = temp2 + 1;\n    }\n    shift = shift - (temp2 - 1);\n    exponent = exponent | value >> (0x20 - temp2 & 0xff);\n    value = value << (temp2 & 0xff);\n  }\n  sign = 0;\n  temp2 = exponent & 0xfffff | 0x100000;\n  if ((shift + -0x3ff) * -0x80000000 < 0) {\n    temp2 = temp2 * 2 - ((int)value >> 0x1f);\n    value = value << 1;\n  }\n  temp2 = temp2 * 2 - ((int)value >> 0x1f);\n  count = 0x16;\n  mask = 0;\n  resultHigh = 0x200000;\n  value = value << 1;\n  do {\n    i = mask + resultHigh;\n    if (i <= (int)temp2) {\n      temp2 = temp2 - i;\n      mask = i + resultHigh;\n      sign = sign + resultHigh;\n    }\n    count = count + -1;\n    temp2 = temp2 * 2 - ((int)value >> 0x1f);\n    resultHigh = resultHigh >> 1;\n    value = value << 1;\n  } while (count != 0);\n  i = 0x20;\n  temp3 = 0x80000000;\n  resultHigh = 0;\n  count = 0;\n  do {\n    temp4 = temp3 + count;\n    roundedBits = mask;\n    if (((int)mask < (int)temp2) || ((temp2 == mask && (temp4 <= value)))) {\n      count = temp4 + temp3;\n      if (((int)temp4 < 0) && (-1 < count)) {\n        roundedBits = mask + 1;\n      }\n      temp2 = temp2 - mask;\n      if (value < temp4) {\n        temp2 = temp2 - 1;\n      }\n      value = value - temp4;\n      resultHigh = resultHigh + temp3;\n    }\n    temp2 = temp2 * 2 - ((int)value >> 0x1f);\n    i = i + -1;\n    value = value << 1;\n    temp3 = temp3 >> 1;\n    mask = roundedBits;\n  } while (i != 0);\n  if ((value | temp2) != 0) {\n    if (resultHigh == 0xffffffff) {\n      sign = sign + 1;\n      resultHigh = 0;\n    }\n    else {\n      resultHigh = resultHigh + 1 & 0xfffffffe;\n    }\n  }\n  resultHigh = resultHigh >> 1;\n  if (sign << 0x1f < 0) {\n    resultHigh = resultHigh | 0x80000000;\n  }\n  return CONCAT44((sign >> 1) + 0x3fe00000 + (shift + -0x3ff >> 1) * 0x100000,resultHigh);\n}\n\n",
            "renaming": {
                "FUN_08006c0c": "reverse_float_08006c0c",
                "param_1": "value",
                "param_2": "exponent",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "iVar3": "shift",
                "iVar4": "count",
                "uVar5": "mask",
                "uVar6": "roundedBits",
                "iVar7": "sign",
                "uVar8": "resultHigh",
                "uVar9": "temp3",
                "iVar10": "i",
                "uVar11": "temp4",
                "uVar12": "result"
            },
            "calling": [
                "FUN_08005c70",
                "FUN_08005bc8",
                "FUN_08006228"
            ],
            "called": [
                "FUN_080004d0",
                "FUN_08000168",
                "FUN_08000724",
                "FUN_0800016c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d68": {
            "entrypoint": "0x08006d68",
            "current_name": "calculate_result_08006d68",
            "code": "\nundefined8 calculate_result_08006d68(int input_parameter1,uint input_parameter2,undefined4 constant_param1,undefined4 constant_param2)\n\n{\n  int result;\n  undefined4 result_low;\n  undefined4 result_high;\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  undefined4 temp4;\n  uint param2_masked;\n  undefined8 intermediate_result1;\n  undefined8 intermediate_result2;\n  \n  intermediate_result1 = CONCAT44(input_parameter2,input_parameter1);\n  param2_masked = input_parameter2 & 0x7fffffff;\n  if (param2_masked < 0x44100000) {\n    if (param2_masked < 0x3fdc0000) {\n      if (param2_masked < 0x3e200000) {\n        intermediate_result2 = FUN_0800016c(input_parameter1,input_parameter2,0x8800759c,0x7e37e43c,constant_param2);\n        result = FUN_080009f0((int)intermediate_result2,(int)((ulonglong)intermediate_result2 >> 0x20),0,0x3ff00000);\n        if (result != 0) {\n          return intermediate_result1;\n        }\n      }\n      result = -1;\n    }\n    else {\n      intermediate_result1 = FUNC_0800708c();\n      result_high = (undefined4)((ulonglong)intermediate_result1 >> 0x20);\n      result_low = (undefined4)intermediate_result1;\n      if (param2_masked < 0x3ff30000) {\n        if (param2_masked < 0x3fe60000) {\n          intermediate_result1 = FUN_0800016c(result_low,result_high,result_low,result_high);\n          intermediate_result1 = FUN_08000168((int)intermediate_result1,(int)((ulonglong)intermediate_result1 >> 0x20),0,0x3ff00000);\n          intermediate_result2 = FUN_0800016c(result_low,result_high,0,0x40000000);\n          intermediate_result1 = FUN_08000724((int)intermediate_result1,(int)((ulonglong)intermediate_result1 >> 0x20),(int)intermediate_result2,\n                               (int)((ulonglong)intermediate_result2 >> 0x20));\n          result = 0;\n        }\n        else {\n          intermediate_result1 = FUN_08000168(result_low,result_high,0,0x3ff00000);\n          intermediate_result2 = FUN_0800016c(result_low,result_high,0,0x3ff00000);\n          intermediate_result1 = FUN_08000724((int)intermediate_result1,(int)((ulonglong)intermediate_result1 >> 0x20),(int)intermediate_result2,\n                               (int)((ulonglong)intermediate_result2 >> 0x20));\n          result = 1;\n        }\n      }\n      else if (param2_masked < 0x40038000) {\n        intermediate_result1 = FUN_08000168(result_low,result_high,0,0x3ff80000);\n        intermediate_result2 = FUN_080004d0(result_low,result_high,0,0x3ff80000);\n        intermediate_result2 = FUN_0800016c((int)intermediate_result2,(int)((ulonglong)intermediate_result2 >> 0x20),0,0x3ff00000);\n        intermediate_result1 = FUN_08000724((int)intermediate_result1,(int)((ulonglong)intermediate_result1 >> 0x20),(int)intermediate_result2,\n                             (int)((ulonglong)intermediate_result2 >> 0x20));\n        result = 2;\n      }\n      else {\n        intermediate_result1 = FUN_08000724(0,0xbff00000,result_low,result_high);\n        result = 3;\n      }\n    }\n    temp4 = (undefined4)((ulonglong)intermediate_result1 >> 0x20);\n    temp3 = (undefined4)intermediate_result1;\n    intermediate_result1 = FUN_080004d0(temp3,temp4,temp3,temp4);\n    temp1 = (undefined4)((ulonglong)intermediate_result1 >> 0x20);\n    result_low = (undefined4)intermediate_result1;\n    intermediate_result1 = FUN_080004d0(result_low,temp1,result_low,temp1);\n    temp2 = (undefined4)((ulonglong)intermediate_result1 >> 0x20);\n    result_high = (undefined4)intermediate_result1;\n    intermediate_result1 = FUN_080004d0(result_high,temp2,0xe322da11,0x3f90ad3a);\n    intermediate_result1 = FUN_0800016c((int)intermediate_result1,(int)((ulonglong)intermediate_result1 >> 0x20),0x24760deb,0x3fa97b4b);\n    intermediate_result1 = FUN_080004d0((int)intermediate_result1,(int)((ulonglong)intermediate_result1 >> 0x20),result_high,temp2);\n    intermediate_result1 = FUN_0800016c((int)intermediate_result1,(int)((ulonglong)intermediate_result1 >> 0x20),0xa0d03d51,0x3fb10d66);\n    intermediate_result1 = FUN_080004d0((int)intermediate_result1,(int)((ulonglong)intermediate_result1 >> 0x20),result_high,temp2);\n    intermediate_result1 = FUN_0800016c((int)intermediate_result1,(int)((ulonglong)intermediate_result1 >> 0x20),0xc54c206e,0x3fb745cd);\n    intermediate_result1 = FUN_080004d0((int)intermediate_result1,(int)((ulonglong)intermediate_result1 >> 0x20),result_high,temp2);\n    intermediate_result1 = FUN_0800016c((int)intermediate_result1,(int)((ulonglong)intermediate_result1 >> 0x20),0x920083ff,0x3fc24924);\n    intermediate_result1 = FUN_080004d0((int)intermediate_result1,(int)((ulonglong)intermediate_result1 >> 0x20),result_high,temp2);\n    intermediate_result1 = FUN_0800016c((int)intermediate_result1,(int)((ulonglong)intermediate_result1 >> 0x20),0x5555550d,0x3fd55555);\n    intermediate_result1 = FUN_080004d0((int)intermediate_result1,(int)((ulonglong)intermediate_result1 >> 0x20),result_low,temp1);\n    result_low = (undefined4)((ulonglong)intermediate_result1 >> 0x20);\n    intermediate_result2 = FUN_080004d0(result_high,temp2,0x2c6a6c2f,0xbfa2b444);\n    intermediate_result2 = FUN_08000168((int)intermediate_result2,(int)((ulonglong)intermediate_result2 >> 0x20),0x52defd9a,0x3fadde2d);\n    intermediate_result2 = FUN_080004d0((int)intermediate_result2,(int)((ulonglong)intermediate_result2 >> 0x20),result_high,temp2);\n    intermediate_result2 = FUN_08000168((int)intermediate_result2,(int)((ulonglong)intermediate_result2 >> 0x20),0xaf749a6d,0x3fb3b0f2);\n    intermediate_result2 = FUN_080004d0((int)intermediate_result2,(int)((ulonglong)intermediate_result2 >> 0x20),result_high,temp2);\n    intermediate_result2 = FUN_08000168((int)intermediate_result2,(int)((ulonglong)intermediate_result2 >> 0x20),0xfe231671,0x3fbc71c6);\n    intermediate_result2 = FUN_080004d0((int)intermediate_result2,(int)((ulonglong)intermediate_result2 >> 0x20),result_high,temp2);\n    intermediate_result2 = FUN_08000168((int)intermediate_result2,(int)((ulonglong)intermediate_result2 >> 0x20),0x9998ebc4,0x3fc99999);\n    intermediate_result2 = FUN_080004d0((int)intermediate_result2,(int)((ulonglong)intermediate_result2 >> 0x20),result_high,temp2);\n    result_high = (undefined4)((ulonglong)intermediate_result2 >> 0x20);\n    if (result == -1) {\n      intermediate_result1 = FUN_0800016c((int)intermediate_result1,result_low,(int)intermediate_result2,result_high);\n      intermediate_result1 = FUN_080004d0((int)intermediate_result1,(int)((ulonglong)intermediate_result1 >> 0x20),temp3,temp4);\n      intermediate_result1 = FUN_08000168(temp3,temp4,(int)intermediate_result1,(int)((ulonglong)intermediate_result1 >> 0x20));\n    }\n    else {\n      intermediate_result1 = FUN_0800016c((int)intermediate_result1,result_low,(int)intermediate_result2,result_high);\n      intermediate_result1 = FUN_080004d0((int)intermediate_result1,(int)((ulonglong)intermediate_result1 >> 0x20),temp3,temp4);\n      result = result * 8;\n      intermediate_result1 = FUN_08000168((int)intermediate_result1,(int)((ulonglong)intermediate_result1 >> 0x20),\n                           *(undefined4 *)(&UNK_08007410 + result),\n                           *(undefined4 *)(&UNK_08007414 + result));\n      intermediate_result1 = FUN_08000168((int)intermediate_result1,(int)((ulonglong)intermediate_result1 >> 0x20),temp3,temp4);\n      intermediate_result1 = FUN_08000168(*(undefined4 *)(&UNK_080073f0 + result),\n                           *(undefined4 *)(&UNK_080073f4 + result),(int)intermediate_result1,\n                           (int)((ulonglong)intermediate_result1 >> 0x20));\n      if ((int)input_parameter2 < 0) {\n        intermediate_result1 = CONCAT44((int)((ulonglong)intermediate_result1 >> 0x20) + -0x80000000,(int)intermediate_result1);\n      }\n    }\n  }\n  else if ((param2_masked < 0x7ff00001) && ((param2_masked != 0x7ff00000 || (input_parameter1 == 0)))) {\n    if ((int)input_parameter2 < 1) {\n      intermediate_result1 = 0xbff921fb54442d18;\n    }\n    else {\n      intermediate_result1 = 0x3ff921fb54442d18;\n    }\n  }\n  else {\n    intermediate_result1 = FUN_0800016c(input_parameter1,input_parameter2,input_parameter1,input_parameter2,constant_param2);\n  }\n  return intermediate_result1;\n}\n\n",
            "renaming": {
                "FUN_08006d68": "calculate_result_08006d68",
                "param_1": "input_parameter1",
                "param_2": "input_parameter2",
                "param_3": "constant_param1",
                "param_4": "constant_param2",
                "iVar1": "result",
                "uVar2": "result_low",
                "uVar3": "result_high",
                "uVar4": "temp1",
                "uVar5": "temp2",
                "uVar6": "temp3",
                "uVar7": "temp4",
                "uVar8": "param2_masked",
                "uVar9": "intermediate_result1",
                "uVar10": "intermediate_result2"
            },
            "calling": [
                "FUN_08006070"
            ],
            "called": [
                "FUN_080004d0",
                "FUN_0800708c",
                "FUN_08000168",
                "FUN_080009f0",
                "FUN_08000724",
                "FUN_0800016c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800708c": {
            "entrypoint": "0x0800708c",
            "current_name": "FUNC_0800708c",
            "code": "\nvoid FUNC_0800708c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800708c": "FUNC_0800708c"
            },
            "calling": [
                "FUN_08006d68",
                "FUN_08005c70",
                "FUN_08005854",
                "FUN_08006228",
                "FUN_08006070"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08007092": {
            "entrypoint": "0x08007092",
            "current_name": "set_bit_and_shift_08007092",
            "code": "\nuint setBitAndShift_08007092(undefined4 inputFlag,uint bitMask)\n\n{\n  return (bitMask | 0x80000000) + 0x100000 >> 0x1f;\n}\n\n",
            "renaming": {
                "FUN_08007092": "set_bit_and_shift_08007092",
                "param_1": "inputFlag",
                "param_2": "bitMask"
            },
            "calling": [
                "FUN_08005900"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800709e": {
            "entrypoint": "0x0800709e",
            "current_name": "initialize_program_0800709e",
            "code": "\nundefined4 initializeProgram_0800709e(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800709e": "initialize_program_0800709e"
            },
            "calling": [
                "FUN_08005900",
                "FUN_08005854",
                "FUN_08005bc8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080070a4": {
            "entrypoint": "0x080070a4",
            "current_name": "get_positive_infinity_080070a4",
            "code": "\nundefined8 getPositiveInfinity_080070a4(void)\n\n{\n  return 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_080070a4": "get_positive_infinity_080070a4"
            },
            "calling": [
                "FUN_08005854",
                "FUN_08006228"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080070b0": {
            "entrypoint": "0x080070b0",
            "current_name": "calculate_result_080070b0",
            "code": "\nundefined8 calculateResult_080070b0(uint input1,uint input2,undefined4 input3)\n\n{\n  int index;\n  undefined4 value1;\n  uint result;\n  undefined4 value2;\n  uint temp;\n  uint numBits;\n  uint shiftedInput;\n  undefined8 finalResult;\n  \n  shiftedInput = (input2 << 1) >> 0x15;\n  numBits = shiftedInput - 0x3ff;\n  result = input2;\n  if ((int)numBits < 0x14) {\n    if ((int)numBits < 0) {\n      if ((input2 & 0x7fffffff | input1) == 0) {\n        return CONCAT44(input2,input1);\n      }\n      result = input2 & 0xfffff | input1;\n      index = ((int)input2 >> 0x1f) * -8;\n      value1 = *(undefined4 *)(&DAT_08007430 + index);\n      value2 = *(undefined4 *)(&DAT_08007434 + index);\n      finalResult = FUN_0800016c(input1,(-result | result) >> 0xc & 0x80000 | input2 & 0xfffe0000,value1,\n                           value2,input1,input2,input3);\n      finalResult = FUN_08000168((int)finalResult,(int)((ulonglong)finalResult >> 0x20),value1,value2);\n      return CONCAT44((uint)((ulonglong)finalResult >> 0x20) & 0x7fffffff | input2 & 0x80000000,\n                      (int)finalResult);\n    }\n    shiftedInput = 0xfffff >> (numBits & 0xff);\n    if ((input2 & shiftedInput | input1) == 0) {\n      return CONCAT44(input2,input1);\n    }\n    shiftedInput = shiftedInput >> 1;\n    temp = input2 & shiftedInput | input1;\n    if (temp != 0) {\n      if (numBits == 0x13) {\n        temp = 0x80000000;\n      }\n      else {\n        temp = 0;\n      }\n      result = 0x40000 >> (numBits & 0xff) | input2 & ~shiftedInput;\n    }\n  }\n  else {\n    if (0x33 < (int)numBits) {\n      if (numBits != 0x400) {\n        return CONCAT44(input2,input1);\n      }\n      finalResult = FUN_0800016c();\n      return finalResult;\n    }\n    shiftedInput = shiftedInput - 0x413;\n    numBits = 0xffffffff >> (shiftedInput & 0xff);\n    if ((input1 & numBits) == 0) {\n      return CONCAT44(input2,input1);\n    }\n    numBits = numBits >> 1;\n    temp = input1;\n    if ((input1 & numBits) != 0) {\n      temp = 0x40000000 >> (shiftedInput & 0xff) | input1 & ~numBits;\n    }\n  }\n  index = ((int)input2 >> 0x1f) * -8;\n  value1 = *(undefined4 *)(&DAT_08007430 + index);\n  value2 = *(undefined4 *)(&DAT_08007434 + index);\n  finalResult = FUN_0800016c(temp,result,value1,value2,input1,input2,input3);\n  finalResult = FUN_08000168((int)finalResult,(int)((ulonglong)finalResult >> 0x20),value1,value2);\n  return finalResult;\n}\n\n",
            "renaming": {
                "FUN_080070b0": "calculate_result_080070b0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "iVar1": "index",
                "uVar2": "value1",
                "uVar3": "result",
                "uVar4": "value2",
                "uVar5": "temp",
                "uVar6": "numBits",
                "uVar7": "shiftedInput",
                "uVar8": "finalResult"
            },
            "calling": [
                "FUN_08005900"
            ],
            "called": [
                "FUN_08000168",
                "FUN_0800016c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080071c0": {
            "entrypoint": "0x080071c0",
            "current_name": "calculate_floating_point_value_080071c0",
            "code": "\nundefined8 calculateFloatingPointValue_080071c0(uint integerPart,uint fractionPart,int exponentOffset,undefined4 undefinedValue)\n\n{\n  uint shiftedFractionPart;\n  undefined4 resultUnsigned;\n  int resultInteger;\n  undefined4 firstUndefinedValue;\n  uint integerPartHigh;\n  undefined8 result;\n  \n  result = CONCAT44(fractionPart,integerPart);\n  shiftedFractionPart = (fractionPart << 1) >> 0x15;\n  if (shiftedFractionPart == 0) {\n    if ((fractionPart & 0x7fffffff | integerPart) == 0) {\n      return result;\n    }\n    result = FUN_080004d0(integerPart,fractionPart,0,0x43500000);\n    if (-0xc351 < exponentOffset) {\n      shiftedFractionPart = ((uint)((int)((ulonglong)result >> 0x20) << 1) >> 0x15) - 0x36;\n      goto LAB_08007210;\n    }\nLAB_080071ec:\n    resultUnsigned = 0xc2f8f359;\n    firstUndefinedValue = 0x1a56e1f;\n  }\n  else {\n    if (shiftedFractionPart == 0x7ff) {\n      result = FUN_0800016c(integerPart,fractionPart,integerPart,fractionPart,undefinedValue);\n      return result;\n    }\nLAB_08007210:\n    integerPartHigh = (uint)((ulonglong)result >> 0x20);\n    resultUnsigned = (undefined4)result;\n    resultInteger = shiftedFractionPart + exponentOffset;\n    if (resultInteger < 0x7ff) {\n      if (0 < resultInteger) {\n        return CONCAT44(integerPartHigh & 0x800fffff | resultInteger * 0x100000,resultUnsigned);\n      }\n      if (resultInteger + 0x35 < 0 == SCARRY4(resultInteger,0x35)) {\n        result = CONCAT44(integerPartHigh & 0x800fffff | (resultInteger + 0x36) * 0x100000,resultUnsigned);\n        resultUnsigned = 0;\n        firstUndefinedValue = 0x3c900000;\n        goto LAB_0800722e;\n      }\n      if (exponentOffset < 0xc351) {\n        result = FUNC_0800729c(0xc2f8f359,0x1a56e1f,resultUnsigned,integerPartHigh);\n        goto LAB_080071ec;\n      }\n    }\n    result = FUNC_0800729c(0x8800759c,0x7e37e43c,resultUnsigned,integerPartHigh);\n    resultUnsigned = 0x8800759c;\n    firstUndefinedValue = 0x7e37e43c;\n  }\nLAB_0800722e:\n  result = FUN_080004d0((int)result,(int)((ulonglong)result >> 0x20),resultUnsigned,firstUndefinedValue);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080071c0": "calculate_floating_point_value_080071c0",
                "param_1": "integerPart",
                "param_2": "fractionPart",
                "param_3": "exponentOffset",
                "param_4": "undefinedValue",
                "uVar1": "shiftedFractionPart",
                "uVar2": "resultUnsigned",
                "iVar3": "resultInteger",
                "uVar4": "firstUndefinedValue",
                "uVar5": "integerPartHigh",
                "uVar6": "result"
            },
            "calling": [
                "FUN_08006228"
            ],
            "called": [
                "FUN_080004d0",
                "FUN_0800016c",
                "FUN_0800729c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800729c": {
            "entrypoint": "0x0800729c",
            "current_name": "FUNC_0800729c",
            "code": "\nvoid FUNC_0800729c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800729c": "FUNC_0800729c"
            },
            "calling": [
                "FUN_080071c0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080072ac": {
            "entrypoint": "0x080072ac",
            "current_name": "get_data_ptr_080072ac",
            "code": "\nundefined4 get_data_ptr_080072ac(void)\n\n{\n  return DAT_200001c0;\n}\n\n",
            "renaming": {
                "FUN_080072ac": "get_data_ptr_080072ac"
            },
            "calling": [
                "FUN_08005900",
                "FUN_08005854",
                "FUN_08005bc8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080072b8": {
            "entrypoint": "0x080072b8",
            "current_name": "update_pointer_080072b8",
            "code": "\nvoid updatePointer_080072b8(int incrementAmount)\n\n{\n  if (DAT_200002b4 == (undefined *)0x0) {\n    DAT_200002b4 = &DAT_200016a0;\n  }\n  DAT_200002b4 = DAT_200002b4 + incrementAmount;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080072b8": "update_pointer_080072b8",
                "param_1": "incrementAmount"
            },
            "calling": [
                "FUN_0800581c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080072d4": {
            "entrypoint": "0x080072d4",
            "current_name": "FUNC_080072d4",
            "code": "\nvoid FUNC_080072d4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080072d4": "FUNC_080072d4"
            },
            "calling": [
                "FUN_08000134",
                "FUN_08004fb4",
                "FUN_08000110"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080072e0": {
            "entrypoint": "0x080072e0",
            "current_name": "FUNC_080072e0",
            "code": "\nvoid FUNC_080072e0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080072e0": "FUNC_080072e0"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        }
    },
    "used_tokens": 186930,
    "layers": [
        [
            "FUN_08000110",
            "FUN_08000134",
            "FUN_08000150",
            "FUN_08000168",
            "FUN_0800016c",
            "FUN_08000404",
            "FUN_08000428",
            "FUN_080004d0",
            "FUN_080006ac",
            "FUN_08000724",
            "FUN_08000892",
            "FUN_08000904",
            "FUN_08000980",
            "FUN_08000990",
            "FUN_080009a0",
            "FUN_080009b4",
            "FUN_080009c8",
            "FUN_080009f0",
            "FUN_08000a04",
            "FUN_08000a30",
            "FUN_08000ad8",
            "FUN_08000adc",
            "FUN_08000c3c",
            "FUN_08000c44",
            "FUN_08000cec",
            "FUN_08000e54",
            "FUN_08000f9c",
            "FUN_08000ffc",
            "FUN_08001004",
            "FUN_08001014",
            "FUN_08001028",
            "FUN_08001050",
            "FUN_08001064",
            "FUN_08001078",
            "FUN_080010c4",
            "FUN_08001104",
            "FUN_08001128",
            "FUN_0800114c",
            "FUN_0800115c",
            "FUN_08001170",
            "FUN_08001194",
            "FUN_080011fc",
            "FUN_08001214",
            "FUN_08001240",
            "FUN_08001264",
            "FUN_08001424",
            "FUN_0800142e",
            "FUN_08001436",
            "FUN_08001460",
            "FUN_080014e2",
            "FUN_08001530",
            "FUN_080015e8",
            "FUN_080016f4",
            "FUN_08001754",
            "FUN_08001828",
            "FUN_08001938",
            "FUN_08001b58",
            "FUN_08002008",
            "FUN_0800209c",
            "FUN_08002214",
            "FUN_08002220",
            "FUN_08002250",
            "FUN_08002280",
            "FUN_080022d0",
            "FUN_08002324",
            "FUN_08002368",
            "FUN_080023d0",
            "FUN_08002404",
            "FUN_0800245c",
            "FUN_08002520",
            "FUN_08002538",
            "FUN_08002564",
            "FUN_080025a4",
            "FUN_080025e8",
            "FUN_08002724",
            "FUN_0800290c",
            "FUN_0800299a",
            "FUN_08002ad0",
            "FUN_08002b48",
            "FUN_08002bf0",
            "FUN_08002cb0",
            "FUN_08002d88",
            "FUN_08002ea0",
            "FUN_08002ec0",
            "FUN_08002ed4",
            "FUN_08002ee8",
            "FUN_08002f28",
            "FUN_08003034",
            "FUN_08003068",
            "FUN_08003298",
            "FUN_08003314",
            "FUN_08003320",
            "FUN_08003330",
            "FUN_08003eb0",
            "FUN_08003ec8",
            "FUN_08003f3c",
            "FUN_08003fc4",
            "FUN_08003fd0",
            "FUN_08003fdc",
            "FUN_08003fe8",
            "FUN_08003ff4",
            "FUN_08004028",
            "FUN_0800403c",
            "FUN_0800407c",
            "FUN_080040b8",
            "FUN_080040e8",
            "FUN_0800411c",
            "FUN_08004194",
            "FUN_080041ae",
            "FUN_080041c4",
            "FUN_0800426c",
            "FUN_08004300",
            "FUN_08004348",
            "FUN_08004384",
            "FUN_080043bc",
            "FUN_080043f0",
            "FUN_08004410",
            "FUN_08004434",
            "FUN_08004458",
            "FUN_08004490",
            "FUN_08004514",
            "FUN_0800458c",
            "FUN_0800483c",
            "FUN_08004a30",
            "FUN_08004a84",
            "FUN_08004c18",
            "FUN_08004c30",
            "FUN_08004c64",
            "FUN_08004c70",
            "FUN_08004c8c",
            "FUN_08004cac",
            "FUN_08004ccc",
            "FUN_08004d48",
            "FUN_08004d8c",
            "FUN_08004e14",
            "FUN_08004e7c",
            "FUN_08004f10",
            "thunk_FUN_0800115c",
            "FUN_08004fb4",
            "FUN_08004ffc",
            "FUN_08005044",
            "FUN_080050fc",
            "FUN_080052e4",
            "FUN_080053d4",
            "FUN_08005614",
            "FUN_08005630",
            "FUN_08005646",
            "FUN_0800567c",
            "FUN_08005714",
            "FUN_080057d0",
            "FUN_0800581c",
            "FUN_08005840",
            "FUN_08005854",
            "thunk_FUN_08006070",
            "FUN_08005900",
            "FUN_08005bc8",
            "FUN_08005c70",
            "FUN_08006070",
            "FUN_08006228",
            "FUN_08006c0c",
            "FUN_08006d68",
            "FUN_08007092",
            "FUN_0800709e",
            "FUN_080070a4",
            "FUN_080070b0",
            "FUN_080071c0",
            "FUN_080072ac",
            "FUN_080072b8"
        ]
    ],
    "locked_functions": []
}