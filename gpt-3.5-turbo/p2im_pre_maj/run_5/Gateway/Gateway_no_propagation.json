{
    "functions": {
        "FUN_0800010c": {
            "entrypoint": "0x0800010c",
            "current_name": "initialize_flag_if_needed_0800010c",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08000118) */\n\nundefined4 initializeFlagIfNeeded_0800010c(undefined4 input)\n\n{\n  if ((char)DAT_200000f4 == '\\0') {\n    DAT_200000f4._0_1_ = '\\x01';\n  }\n  return input;\n}\n\n",
            "renaming": {
                "FUN_0800010c": "initialize_flag_if_needed_0800010c",
                "param_1": "input"
            },
            "calling": [],
            "called": [
                "FUN_0800a424"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000178": {
            "entrypoint": "0x08000178",
            "current_name": "find_end_of_string_08000178",
            "code": "\nchar * find_end_of_string_08000178(char *string)\n\n{\n  char current_char;\n  char *next_char_ptr;\n  char *string_ptr;\n  \n  string_ptr = string;\n  do {\n    next_char_ptr = string_ptr + 1;\n    current_char = *string_ptr;\n    string_ptr = next_char_ptr;\n  } while (current_char != '\\0');\n  return next_char_ptr + (-1 - (int)string);\n}\n\n",
            "renaming": {
                "FUN_08000178": "find_end_of_string_08000178",
                "param_1": "string",
                "cVar1": "current_char",
                "pcVar2": "next_char_ptr",
                "pcVar3": "string_ptr"
            },
            "calling": [
                "FUN_08002e44",
                "FUN_080032a2"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000188": {
            "entrypoint": "0x08000188",
            "current_name": "send_software_interrupt_08000188",
            "code": "\nvoid sendSoftwareInterrupt_08000188(void)\n\n{\n  software_interrupt(0x3f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000188": "send_software_interrupt_08000188"
            },
            "calling": [
                "FUN_0800018c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800018c": {
            "entrypoint": "0x0800018c",
            "current_name": "check_and_execute_function_0800018c",
            "code": "\nundefined4 checkAndExecuteFunction_0800018c(undefined4 inputParam,undefined4 unusedParam1,undefined4 unusedParam2,undefined4 inputSize)\n\n{\n  undefined4 result;\n  \n  if (DAT_20000110 != 0) {\n    return 0;\n  }\n  result = FUN_08000188(1,inputParam,0,0,inputSize);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_0800018c": "check_and_execute_function_0800018c",
                "param_1": "inputParam",
                "param_2": "unusedParam1",
                "param_3": "unusedParam2",
                "param_4": "inputSize",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08000188"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000214": {
            "entrypoint": "0x08000214",
            "current_name": "process_data_08000214",
            "code": "\nvoid processData_08000214(uint inputIndex,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  bool isValid;\n  int result;\n  \n  if (0x3b < (int)inputIndex) {\n    return;\n  }\n  result = FUN_08002fa0(&DAT_200003d4,inputIndex,param3,param4,param4);\n  if (result == 3) {\n    if (inputIndex < 0x3c) {\n      if ((&DAT_0800a908)[inputIndex] == -1) {\n        result = 0;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          result = 0;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[inputIndex]);\n          if (result == 1) {\n            result = 0;\n          }\n          else {\n            result = FUN_0800738a((int)(char)(&DAT_0800a908)[inputIndex],&DAT_0800a6cc);\n          }\n        }\n      }\n    }\n    else {\n      result = 0;\n    }\n    if (result != 0) {\n      FUN_080088e0(inputIndex,param2);\n    }\n    FUN_08002fc2(&DAT_200003d4,inputIndex,param2);\n  }\n  else if (result == 4) {\n    if (inputIndex < 0x3c) {\n      if ((&DAT_0800a908)[inputIndex] == -1) {\n        isValid = false;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          isValid = false;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[inputIndex]);\n          if (result == 1) {\n            isValid = false;\n          }\n          else {\n            isValid = true;\n          }\n        }\n      }\n    }\n    else {\n      isValid = false;\n    }\n    if (isValid) {\n      FUN_080026b0(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[inputIndex] * 3,param2);\n    }\n    FUN_08002fc2(&DAT_200003d4,inputIndex,param2);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000214": "process_data_08000214",
                "param_1": "inputIndex",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "bVar1": "isValid",
                "iVar2": "result"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [
                "FUN_0800021a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800021a": {
            "entrypoint": "0x0800021a",
            "current_name": "process_data_0800021a",
            "code": "\nvoid processData_0800021a(uint input,undefined4 output,undefined4 param3,undefined4 param4)\n\n{\n  bool isInitialized;\n  int result;\n  \n  result = FUN_08002fa0(&DAT_200003d4,input,param3,param4,param4);\n  if (result == 3) {\n    if (input < 0x3c) {\n      if ((&DAT_0800a908)[input] == -1) {\n        result = 0;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          result = 0;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[input]);\n          if (result == 1) {\n            result = 0;\n          }\n          else {\n            result = FUN_0800738a((int)(char)(&DAT_0800a908)[input],&DAT_0800a6cc);\n          }\n        }\n      }\n    }\n    else {\n      result = 0;\n    }\n    if (result != 0) {\n      FUN_080088e0(input,output);\n    }\n    FUN_08002fc2(&DAT_200003d4,input,output);\n  }\n  else if (result == 4) {\n    if (input < 0x3c) {\n      if ((&DAT_0800a908)[input] == -1) {\n        isInitialized = false;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          isInitialized = false;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[input]);\n          if (result == 1) {\n            isInitialized = false;\n          }\n          else {\n            isInitialized = true;\n          }\n        }\n      }\n    }\n    else {\n      isInitialized = false;\n    }\n    if (isInitialized) {\n      FUN_080026b0(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[input] * 3,output);\n    }\n    FUN_08002fc2(&DAT_200003d4,input,output);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800021a": "process_data_0800021a",
                "param_1": "input",
                "param_2": "output",
                "param_3": "param3",
                "param_4": "param4",
                "bVar1": "isInitialized",
                "iVar2": "result"
            },
            "calling": [
                "FUN_08000214"
            ],
            "called": [
                "FUN_080026b0",
                "FUN_08002fa0",
                "FUN_080036ac",
                "FUN_08002fc2",
                "FUN_0800738a",
                "FUN_080088e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000488": {
            "entrypoint": "0x08000488",
            "current_name": "set_bit_in_data_08000488",
            "code": "\nvoid setBitInData_08000488(uint bitPosition,int bitValue)\n\n{\n  undefined4 result;\n  \n  if ((int)bitPosition < 0xe) {\n    if (bitValue == 0) {\n      DAT_20000114 = DAT_20000114 & ~(1 << (bitPosition & 0xff));\n      return;\n    }\n    DAT_20000114 = 1 << (bitPosition & 0xff) | DAT_20000114;\n    if (DAT_20000171 == '\\0') {\n      result = FUN_08008880();\n      FUN_08002ef2(&DAT_200003d4,bitPosition,result);\n      return;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000488": "set_bit_in_data_08000488",
                "param_1": "bitPosition",
                "param_2": "bitValue",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08008880",
                "FUN_08002ef2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080004d4": {
            "entrypoint": "0x080004d4",
            "current_name": "process_data_080004d4",
            "code": "\nvoid process_data_080004d4(int status,int value)\n\n{\n  int count;\n  undefined *ptr_data;\n  \n  if (status != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    ptr_data = &DAT_2000022c;\n    for (count = 0xb; -1 < count; count = count + -1) {\n      FUN_08002580(ptr_data);\n      ptr_data = ptr_data + 3;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080004d4": "process_data_080004d4",
                "param_1": "status",
                "param_2": "value",
                "puVar2": "ptr_data",
                "iVar1": "count"
            },
            "calling": [],
            "called": [
                "FUN_08002580"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000500": {
            "entrypoint": "0x08000500",
            "current_name": "attach_servo_08000500",
            "code": "\nvoid attachServo_08000500(int servoIndex,int value1,int value2,undefined4 undefinedValue)\n\n{\n  if (0xb < DAT_200001ed) {\n    FUN_08002f14(&DAT_200003d4,\"Max servos attached\",value2,undefinedValue,undefinedValue);\n    return;\n  }\n  if (DAT_2000011c == 0) {\n    (&DAT_200001f0)[servoIndex] = DAT_200001ed;\n    DAT_200001ed = DAT_200001ed + 1;\n  }\n  else {\n    (&DAT_200001f0)[servoIndex] = (&DAT_2000011f)[DAT_2000011c];\n    DAT_2000011c = DAT_2000011c - 1;\n  }\n  if ((0 < value1) && (0 < value2)) {\n    FUN_080025ac(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[servoIndex] * 3,servoIndex,value1,value2);\n    return;\n  }\n  FUN_08002634(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[servoIndex] * 3,servoIndex);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000500": "attach_servo_08000500",
                "param_1": "servoIndex",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "undefinedValue"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08002634",
                "FUN_08002f14",
                "FUN_080025ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000588": {
            "entrypoint": "0x08000588",
            "current_name": "update_array_08000588",
            "code": "\nvoid updateArray_08000588(int index)\n\n{\n  FUN_08002644(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[index] * 3);\n  if (((&DAT_200001f0)[index] == DAT_200001ed) && (DAT_200001ed != '\\0')) {\n    DAT_200001ed = DAT_200001ed + -1;\n  }\n  else if (DAT_200001ed != '\\0') {\n    DAT_2000011c = DAT_2000011c + 1;\n    (&DAT_2000011f)[DAT_2000011c] = (&DAT_200001f0)[index];\n  }\n  (&DAT_200001f0)[index] = 0xff;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000588": "update_array_08000588",
                "param_1": "index"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08002644"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080005e0": {
            "entrypoint": "0x080005e0",
            "current_name": "initialize_data_080005e0",
            "code": "\nvoid initializeData_080005e0(void)\n\n{\n  DAT_20000170 = 0;\n  DAT_20000004 = 0xff;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080005e0": "initialize_data_080005e0"
            },
            "calling": [
                "FUN_08000aec",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080005f8": {
            "entrypoint": "0x080005f8",
            "current_name": "process_pin_080005f8",
            "code": "\nvoid processPin_080005f8(uint pinIndex,int pinMode)\n\n{\n  int result;\n  char flag;\n  bool isTrue;\n  uint shiftedPinIndex;\n  \n  result = FUN_08002fa0(&DAT_200003d4,pinIndex);\n  if (result != 0x7f) {\n    result = FUN_08002fa0(&DAT_200003d4,pinIndex);\n    if (result == 6) {\n      if (DAT_20000170 == '\\0') {\n        flag = '\\0';\n      }\n      else {\n        flag = DAT_20000170;\n        if (pinMode == 6) {\n          flag = '\\0';\n        }\n      }\n    }\n    else {\n      flag = '\\0';\n    }\n    if (flag != '\\0') {\n      FUN_080005e0();\n    }\n    if (pinIndex < 0x3c) {\n      if ((&DAT_0800a908)[pinIndex] == -1) {\n        isTrue = false;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          isTrue = false;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinIndex]);\n          if (result == 1) {\n            isTrue = false;\n          }\n          else if (pinMode == 4) {\n            isTrue = false;\n          }\n          else {\n            isTrue = true;\n          }\n        }\n      }\n    }\n    else {\n      isTrue = false;\n    }\n    if (isTrue) {\n      if ((byte)(&DAT_200001f0)[pinIndex] < 0xc) {\n        result = FUN_080026f8(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[pinIndex] * 3);\n      }\n      else {\n        result = 0;\n      }\n      if (result != 0) {\n        FUN_08000588(pinIndex);\n      }\n    }\n    shiftedPinIndex = pinIndex - 0x2e & 0xff;\n    if (shiftedPinIndex < 0xe) {\n      if (pinIndex < 0x3c) {\n        result = (int)(char)(&DAT_0800a908)[pinIndex];\n      }\n      else {\n        result = -1;\n      }\n      result = FUN_080036ac(result);\n      if (result == 0) {\n        isTrue = false;\n      }\n      else {\n        if (pinIndex < 0x3c) {\n          result = (int)(char)(&DAT_0800a908)[pinIndex];\n        }\n        else {\n          result = -1;\n        }\n        result = FUN_080036ac(result);\n        if (result == 1) {\n          isTrue = false;\n        }\n        else {\n          isTrue = true;\n        }\n      }\n    }\n    else {\n      isTrue = false;\n    }\n    if (isTrue) {\n      FUN_08000488(shiftedPinIndex,pinMode == 2);\n    }\n    if (pinIndex < 0x3c) {\n      if ((&DAT_0800a908)[pinIndex] == -1) {\n        isTrue = false;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          isTrue = false;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinIndex]);\n          if (result == 1) {\n            isTrue = false;\n          }\n          else {\n            isTrue = true;\n          }\n        }\n      }\n    }\n    else {\n      isTrue = false;\n    }\n    if (isTrue) {\n      if ((pinMode == 0) || (pinMode == 0xb)) {\n        (&DAT_20000174)[pinIndex >> 3] = (&DAT_20000174)[pinIndex >> 3] | (byte)(1 << (pinIndex & 7));\n      }\n      else {\n        (&DAT_20000174)[pinIndex >> 3] = (&DAT_20000174)[pinIndex >> 3] & ~(byte)(1 << (pinIndex & 7));\n      }\n    }\n    FUN_08002fc2(&DAT_200003d4,pinIndex,0);\n    switch(pinMode) {\n    case 0:\n      if (pinIndex < 0x3c) {\n        if ((&DAT_0800a908)[pinIndex] == -1) {\n          isTrue = false;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            isTrue = false;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinIndex]);\n            if (result == 1) {\n              isTrue = false;\n            }\n            else {\n              isTrue = true;\n            }\n          }\n        }\n      }\n      else {\n        isTrue = false;\n      }\n      if (isTrue) {\n        FUN_08008990(pinIndex,0);\n        FUN_08002fa8(&DAT_200003d4,pinIndex,0);\n        return;\n      }\n      break;\n    case 1:\n      if (pinIndex < 0x3c) {\n        if ((&DAT_0800a908)[pinIndex] == -1) {\n          isTrue = false;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            isTrue = false;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinIndex]);\n            if (result == 1) {\n              isTrue = false;\n            }\n            else {\n              isTrue = true;\n            }\n          }\n        }\n      }\n      else {\n        isTrue = false;\n      }\n      if (isTrue) {\n        result = FUN_08002fa0(&DAT_200003d4,pinIndex);\n        if (result == 3) {\n          FUN_08008a24(pinIndex,0);\n        }\n        FUN_08008990(pinIndex,1);\n        FUN_08002fa8(&DAT_200003d4,pinIndex,1);\n        return;\n      }\n      break;\n    case 2:\n      if (shiftedPinIndex < 0xe) {\n        if (pinIndex < 0x3c) {\n          result = (int)(char)(&DAT_0800a908)[pinIndex];\n        }\n        else {\n          result = -1;\n        }\n        result = FUN_080036ac(result);\n        if (result == 0) {\n          isTrue = false;\n        }\n        else {\n          if (pinIndex < 0x3c) {\n            result = (int)(char)(&DAT_0800a908)[pinIndex];\n          }\n          else {\n            result = -1;\n          }\n          result = FUN_080036ac(result);\n          if (result == 1) {\n            isTrue = false;\n          }\n          else {\n            isTrue = true;\n          }\n        }\n      }\n      else {\n        isTrue = false;\n      }\n      if (isTrue) {\n        if (pinIndex < 0x3c) {\n          if ((&DAT_0800a908)[pinIndex] == -1) {\n            isTrue = false;\n          }\n          else {\n            result = FUN_080036ac();\n            if (result == 0) {\n              isTrue = false;\n            }\n            else {\n              result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinIndex]);\n              if (result == 1) {\n                isTrue = false;\n              }\n            }\n          }\n        }\n        else {\n          isTrue = false;\n        }\n        if (isTrue) {\n          FUN_08008990(pinIndex,0);\n        }\n        FUN_08002fa8(&DAT_200003d4,pinIndex,2);\n        return;\n      }\n      break;\n    case 3:\n      if (pinIndex < 0x3c) {\n        if ((&DAT_0800a908)[pinIndex] == -1) {\n          result = 0;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            result = 0;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinIndex]);\n            if (result == 1) {\n              result = 0;\n            }\n            else {\n              result = FUN_0800738a((int)(char)(&DAT_0800a908)[pinIndex],&DAT_0800a6cc);\n            }\n          }\n        }\n      }\n      else {\n        result = 0;\n      }\n      if (result != 0) {\n        FUN_08008990(pinIndex,1);\n        FUN_080088e0(pinIndex,0);\n        FUN_08002fa8(&DAT_200003d4,pinIndex,3);\n        return;\n      }\n      break;\n    case 4:\n      if (pinIndex < 0x3c) {\n        if ((&DAT_0800a908)[pinIndex] == -1) {\n          isTrue = false;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            isTrue = false;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinIndex]);\n            if (result == 1) {\n              isTrue = false;\n            }\n            else {\n              isTrue = true;\n            }\n          }\n        }\n      }\n      else {\n        isTrue = false;\n      }\n      if (isTrue) {\n        FUN_08002fa8(&DAT_200003d4,pinIndex,4);\n        if (((byte)(&DAT_200001f0)[pinIndex] != 0xff) &&\n           (result = FUN_080026f8(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[pinIndex] * 3),\n           result != 0)) {\n          isTrue = false;\n        }\n        if (isTrue) {\n          FUN_08000500(pinIndex,0xffffffff);\n          return;\n        }\n      }\n      break;\n    default:\n      FUN_08002f14(&DAT_200003d4,\"Unknown pin mode\");\n      break;\n    case 6:\n      if (pinIndex < 0x3c) {\n        if ((&DAT_0800a908)[pinIndex] == -1) {\n          result = 0;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            result = 0;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinIndex]);\n            if (result == 1) {\n              result = 0;\n            }\n            else {\n              result = FUN_0800738a((int)(char)(&DAT_0800a908)[pinIndex],&DAT_0800a69c);\n              if (result == 0) {\n                result = FUN_0800738a((int)(char)(&DAT_0800a908)[pinIndex],&DAT_0800a66c);\n              }\n            }\n          }\n        }\n      }\n      else {\n        result = 0;\n      }\n      if (result != 0) {\n        FUN_08002fa8(&DAT_200003d4,pinIndex,6);\n        return;\n      }\n      break;\n    case 10:\n      break;\n    case 0xb:\n      if (pinIndex < 0x3c) {\n        if ((&DAT_0800a908)[pinIndex] == -1) {\n          isTrue = false;\n        }\n        else {\n          result = FUN_080036ac();\n          if (result == 0) {\n            isTrue = false;\n          }\n          else {\n            result = FUN_080036ac((int)(char)(&DAT_0800a908)[pinIndex]);\n            if (result == 1) {\n              isTrue = false;\n            }\n            else {\n              isTrue = true;\n            }\n          }\n        }\n      }\n      else {\n        isTrue = false;\n      }\n      if (isTrue) {\n        FUN_08008990(pinIndex,2);\n        FUN_08002fa8(&DAT_200003d4,pinIndex,0xb);\n        FUN_08002fc2(&DAT_200003d4,pinIndex,1);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080005f8": "process_pin_080005f8",
                "param_1": "pinIndex",
                "param_2": "pinMode",
                "iVar1": "result",
                "cVar2": "flag",
                "bVar3": "isTrue",
                "uVar4": "shiftedPinIndex"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_08000aec",
                "FUN_08000a64"
            ],
            "called": [
                "FUN_08002f14",
                "FUN_08008990",
                "FUN_080036ac",
                "FUN_080005e0",
                "FUN_08002fc2",
                "FUN_0800738a",
                "FUN_080088e0",
                "FUN_08000488",
                "FUN_08000588",
                "FUN_08002fa0",
                "FUN_08008a24",
                "FUN_08002fa8",
                "FUN_08000500",
                "FUN_080026f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000a64": {
            "entrypoint": "0x08000a64",
            "current_name": "process_data_08000a64",
            "code": "\nvoid processData_08000a64(void)\n\n{\n  int result;\n  uint index;\n  \n  for (index = 0; index < 0x3c; index = index + 1 & 0xff) {\n    if (index < 0x3c) {\n      if ((&DAT_0800a908)[index] == -1) {\n        result = 0;\n      }\n      else {\n        result = FUN_080036ac();\n        if (result == 0) {\n          result = 0;\n        }\n        else {\n          result = FUN_080036ac((int)(char)(&DAT_0800a908)[index]);\n          if (result == 1) {\n            result = 0;\n          }\n          else {\n            result = FUN_0800738a((int)(char)(&DAT_0800a908)[index],&DAT_0800a69c);\n            if (result == 0) {\n              result = FUN_0800738a((int)(char)(&DAT_0800a908)[index],&DAT_0800a66c);\n            }\n          }\n        }\n      }\n    }\n    else {\n      result = 0;\n    }\n    if (result != 0) {\n      FUN_080005f8(index,6);\n    }\n  }\n  DAT_20000170 = 1;\n  FUN_08002a26(&DAT_20000314);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000a64": "process_data_08000a64",
                "iVar1": "result",
                "uVar2": "index"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [
                "FUN_080036ac",
                "FUN_08002a26",
                "FUN_0800738a",
                "FUN_080005f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000aec": {
            "entrypoint": "0x08000aec",
            "current_name": "initialize_data_08000aec",
            "code": "\nvoid initializeData_08000aec(void)\n\n{\n  bool isConditionMet;\n  int result;\n  uint index;\n  \n  DAT_20000171 = 1;\n  if (DAT_20000170 != '\\0') {\n    FUN_080005e0();\n  }\n  for (index = 0; index < 5; index = index + 1 & 0xff) {\n    (&DAT_200001e8)[index] = 0;\n    (&DAT_20000174)[index] = 0;\n    (&DAT_20000180)[index] = 0;\n  }\n  for (index = 0; index < 0x3c; index = index + 1 & 0xff) {\n    if ((index - 0x2e & 0xff) < 0xe) {\n      if (index < 0x3c) {\n        result = (int)(char)(&DAT_0800a908)[index];\n      }\n      else {\n        result = -1;\n      }\n      result = FUN_080036ac(result);\n      if (result == 0) {\n        isConditionMet = false;\n      }\n      else {\n        if (index < 0x3c) {\n          result = (int)(char)(&DAT_0800a908)[index];\n        }\n        else {\n          result = -1;\n        }\n        result = FUN_080036ac(result);\n        if (result == 1) {\n          isConditionMet = false;\n        }\n        else {\n          isConditionMet = true;\n        }\n      }\n    }\n    else {\n      isConditionMet = false;\n    }\n    if (isConditionMet) {\n      FUN_080005f8(index,2);\n    }\n    else {\n      if ((((index < 0x3c) && ((&DAT_0800a908)[index] != -1)) &&\n          (result = FUN_080036ac(), result != 0)) &&\n         (result = FUN_080036ac((int)(char)(&DAT_0800a908)[index]), result != 1)) {\n        isConditionMet = true;\n      }\n      if (isConditionMet) {\n        FUN_080005f8(index,1);\n      }\n    }\n    (&DAT_200001f0)[index] = 0xff;\n  }\n  DAT_20000114 = 0;\n  DAT_2000011c = 0;\n  DAT_200001ed = 0;\n  DAT_20000171 = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000aec": "initialize_data_08000aec",
                "bVar1": "isConditionMet",
                "iVar2": "result",
                "uVar3": "index"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_080036ac",
                "FUN_080005e0",
                "FUN_080005f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000be8": {
            "entrypoint": "0x08000be8",
            "current_name": "update_data_08000be8",
            "code": "\nvoid updateData_08000be8(int index,uint mask,int check,undefined4 param_4)\n\n{\n  undefined1 *dataPtr1;\n  undefined1 *dataPtr2;\n  \n  dataPtr1 = &DAT_20000174;\n  dataPtr2 = (undefined1 *)((byte)(&DAT_20000174)[index] & mask);\n  if ((check != 0) ||\n     (dataPtr1 = (undefined1 *)(uint)(byte)(&DAT_20000180)[index], dataPtr2 != dataPtr1)) {\n    FUN_08002efe(&DAT_200003d4,index,dataPtr2,dataPtr1,param_4);\n    (&DAT_20000180)[index] = (char)dataPtr2;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000be8": "update_data_08000be8",
                "param_1": "index",
                "param_2": "mask",
                "param_3": "check",
                "puVar1": "dataPtr1",
                "puVar2": "dataPtr2"
            },
            "calling": [
                "FUN_08000ef8"
            ],
            "called": [
                "FUN_08002efe"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000ef8": {
            "entrypoint": "0x08000ef8",
            "current_name": "configure_features_08000ef8",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08001ade) */\n/* WARNING: Removing unreachable block (ram,0x08001a4a) */\n/* WARNING: Removing unreachable block (ram,0x080019b6) */\n/* WARNING: Removing unreachable block (ram,0x08001912) */\n/* WARNING: Removing unreachable block (ram,0x08001866) */\n/* WARNING: Removing unreachable block (ram,0x080017d2) */\n/* WARNING: Removing unreachable block (ram,0x0800173e) */\n/* WARNING: Removing unreachable block (ram,0x0800169a) */\n/* WARNING: Removing unreachable block (ram,0x080015ee) */\n/* WARNING: Removing unreachable block (ram,0x0800155a) */\n/* WARNING: Removing unreachable block (ram,0x08001490) */\n/* WARNING: Removing unreachable block (ram,0x080014a2) */\n/* WARNING: Removing unreachable block (ram,0x080014e4) */\n/* WARNING: Removing unreachable block (ram,0x080014b0) */\n/* WARNING: Removing unreachable block (ram,0x080014ba) */\n/* WARNING: Removing unreachable block (ram,0x080014e8) */\n/* WARNING: Removing unreachable block (ram,0x080014c2) */\n/* WARNING: Removing unreachable block (ram,0x080014b6) */\n/* WARNING: Removing unreachable block (ram,0x08001496) */\n/* WARNING: Removing unreachable block (ram,0x08001430) */\n/* WARNING: Removing unreachable block (ram,0x08001376) */\n/* WARNING: Removing unreachable block (ram,0x080012e2) */\n/* WARNING: Removing unreachable block (ram,0x0800124e) */\n/* WARNING: Removing unreachable block (ram,0x080011b8) */\n/* WARNING: Removing unreachable block (ram,0x08001100) */\n/* WARNING: Removing unreachable block (ram,0x0800106c) */\n/* WARNING: Removing unreachable block (ram,0x08000fd8) */\n/* WARNING: Removing unreachable block (ram,0x08000f42) */\n/* WARNING: Removing unreachable block (ram,0x08000f8e) */\n/* WARNING: Removing unreachable block (ram,0x08001022) */\n/* WARNING: Removing unreachable block (ram,0x080010b6) */\n/* WARNING: Removing unreachable block (ram,0x0800114a) */\n/* WARNING: Removing unreachable block (ram,0x08001204) */\n/* WARNING: Removing unreachable block (ram,0x08001298) */\n/* WARNING: Removing unreachable block (ram,0x0800132c) */\n/* WARNING: Removing unreachable block (ram,0x080013c0) */\n/* WARNING: Removing unreachable block (ram,0x0800147c) */\n/* WARNING: Removing unreachable block (ram,0x08001510) */\n/* WARNING: Removing unreachable block (ram,0x080015a4) */\n/* WARNING: Removing unreachable block (ram,0x08001638) */\n/* WARNING: Removing unreachable block (ram,0x080016f4) */\n/* WARNING: Removing unreachable block (ram,0x08001788) */\n/* WARNING: Removing unreachable block (ram,0x0800181c) */\n/* WARNING: Removing unreachable block (ram,0x080018b0) */\n/* WARNING: Removing unreachable block (ram,0x0800196c) */\n/* WARNING: Removing unreachable block (ram,0x08001a00) */\n/* WARNING: Removing unreachable block (ram,0x08001a94) */\n/* WARNING: Removing unreachable block (ram,0x08001b28) */\n/* WARNING: Removing unreachable block (ram,0x080014ca) */\n\nvoid configureFeatures_08000ef8(void)\n\n{\n  byte featureFlagsByte;\n  int result;\n  bool isEnabled;\n  byte configFlags;\n  \n  featureFlagsByte = DAT_20000174;\n  if (DAT_200001e8 != '\\0') {\n    result = FUN_080036ac();\n    if (result == 0) {\n      configFlags = 0;\n    }\n    else {\n      result = FUN_080036ac(3);\n      if (result == 1) {\n        configFlags = 0;\n      }\n      else if ((featureFlagsByte & 1) == 0) {\n        configFlags = 0;\n      }\n      else {\n        result = FUN_08008a6c(0);\n        if (result == 0) {\n          configFlags = 0;\n        }\n        else {\n          configFlags = 1;\n        }\n      }\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(2);\n      if (result == 1) {\n        isEnabled = false;\n      }\n      else if ((featureFlagsByte & 2) == 0) {\n        isEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(1);\n        if (result == 0) {\n          isEnabled = false;\n        }\n        else {\n          isEnabled = true;\n        }\n      }\n    }\n    if (isEnabled) {\n      configFlags = configFlags | 2;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(10);\n      if (result == 1) {\n        isEnabled = false;\n      }\n      else if ((featureFlagsByte & 4) == 0) {\n        isEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(2);\n        if (result == 0) {\n          isEnabled = false;\n        }\n        else {\n          isEnabled = true;\n        }\n      }\n    }\n    if (isEnabled) {\n      configFlags = configFlags | 4;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0x13);\n      if (result == 1) {\n        isEnabled = false;\n      }\n      else if ((featureFlagsByte & 8) == 0) {\n        isEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(3);\n        if (result == 0) {\n          isEnabled = false;\n        }\n        else {\n          isEnabled = true;\n        }\n      }\n    }\n    if (isEnabled) {\n      configFlags = configFlags | 8;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0x15);\n      if (result == 1) {\n        isEnabled = false;\n      }\n      else if ((featureFlagsByte & 0x10) == 0) {\n        isEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(4);\n        if (result == 0) {\n          isEnabled = false;\n        }\n        else {\n          isEnabled = true;\n        }\n      }\n    }\n    if (isEnabled) {\n      configFlags = configFlags | 0x10;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0x14);\n      if (result == 1) {\n        isEnabled = false;\n      }\n      else if ((featureFlagsByte & 0x20) == 0) {\n        isEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(5);\n        if (result == 0) {\n          isEnabled = false;\n        }\n        else {\n          isEnabled = true;\n        }\n      }\n    }\n    if (isEnabled) {\n      configFlags = configFlags | 0x20;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0x1a);\n      if (result == 1) {\n        isEnabled = false;\n      }\n      else if ((featureFlagsByte & 0x40) == 0) {\n        isEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(6);\n        if (result == 0) {\n          isEnabled = false;\n        }\n        else {\n          isEnabled = true;\n        }\n      }\n    }\n    if (isEnabled) {\n      configFlags = configFlags | 0x40;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(8);\n      if (result == 1) {\n        isEnabled = false;\n      }\n      else if ((featureFlagsByte & 0x80) == 0) {\n        isEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(7);\n        if (result == 0) {\n          isEnabled = false;\n        }\n        else {\n          isEnabled = true;\n        }\n      }\n    }\n    if (isEnabled) {\n      configFlags = configFlags | 0x80;\n    }\n    FUN_08000be8(0,configFlags);\n  }\n  featureFlagsByte = DAT_20000175;\n  if (DAT_200001e9 != '\\0') {\n    result = FUN_080036ac();\n    if (result == 0) {\n      configFlags = 0;\n    }\n    else {\n      result = FUN_080036ac(9);\n      if (result == 1) {\n        configFlags = 0;\n      }\n      else if ((featureFlagsByte & 1) == 0) {\n        configFlags = 0;\n      }\n      else {\n        result = FUN_08008a6c(8);\n        if (result == 0) {\n          configFlags = 0;\n        }\n        else {\n          configFlags = 1;\n        }\n      }\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0x27);\n      if (result == 1) {\n        isEnabled = false;\n      }\n      else if ((featureFlagsByte & 2) == 0) {\n        isEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(9);\n        if (result == 0) {\n          isEnabled = false;\n        }\n        else {\n          isEnabled = true;\n        }\n      }\n    }\n    if (isEnabled) {\n      configFlags = configFlags | 2;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0x16);\n      if (result == 1) {\n        isEnabled = false;\n      }\n      else if ((featureFlagsByte & 4) == 0) {\n        isEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(10);\n        if (result == 0) {\n          isEnabled = false;\n        }\n        else {\n          isEnabled = true;\n        }\n      }\n    }\n    if (isEnabled) {\n      configFlags = configFlags | 4;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(7);\n      if (result == 1) {\n        isEnabled = false;\n      }\n      else if ((featureFlagsByte & 8) == 0) {\n        isEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0xb);\n        if (result == 0) {\n          isEnabled = false;\n        }\n        else {\n          isEnabled = true;\n        }\n      }\n    }\n    if (isEnabled) {\n      configFlags = configFlags | 8;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(6);\n      if (result == 1) {\n        isEnabled = false;\n      }\n      else if ((featureFlagsByte & 0x10) == 0) {\n        isEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0xc);\n        if (result == 0) {\n          isEnabled = false;\n        }\n        else {\n          isEnabled = true;\n        }\n      }\n    }\n    if (isEnabled) {\n      configFlags = configFlags | 0x10;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(5);\n      if (result == 1) {\n        isEnabled = false;\n      }\n      else if ((featureFlagsByte & 0x20) == 0) {\n        isEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0xd);\n        if (result == 0) {\n          isEnabled = false;\n        }\n        else {\n          isEnabled = true;\n        }\n      }\n    }\n    if (isEnabled) {\n      configFlags = configFlags | 0x20;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0x19);\n      if (result == 1) {\n        isEnabled = false;\n      }\n      else if ((featureFlagsByte & 0x40) == 0) {\n        isEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0xe);\n        if (result == 0) {\n          isEnabled = false;\n        }\n        else {\n          isEnabled = true;\n        }\n      }\n    }\n    if (isEnabled) {\n      configFlags = configFlags | 0x40;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0x18);\n      if (result == 1) {\n        isEnabled = false;\n      }\n      else if ((featureFlagsByte & 0x80) == 0) {\n        isEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0xf);\n        if (result == 0) {\n          isEnabled = false;\n        }\n        else {\n          isEnabled = true;\n        }\n      }\n    }\n    if (isEnabled) {\n      configFlags = configFlags | 0x80;\n    }\n    FUN_08000be8(1,configFlags,0);\n  }\n  featureFlagsByte = DAT_20000176;\n  if (DAT_200001ea != '\\0') {\n    result = FUN_080036ac();\n    if (result == 0) {\n      configFlags = 0;\n    }\n    else {\n      result = FUN_080036ac(0x2a);\n      if (result == 1) {\n        configFlags = 0;\n      }\n      else if ((featureFlagsByte & 1) == 0) {\n        configFlags = 0;\n      }\n      else {\n        result = FUN_08008a6c(0x10);\n        if (result == 0) {\n          configFlags = 0;\n        }\n        else {\n          configFlags = 1;\n        }\n      }\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0x2c);\n      if (result == 1) {\n        isEnabled = false;\n      }\n      else if ((featureFlagsByte & 2) == 0) {\n        isEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0x11);\n        if (result == 0) {\n          isEnabled = false;\n        }\n        else {\n          isEnabled = true;\n        }\n      }\n    }\n    if (isEnabled) {\n      configFlags = configFlags | 2;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0xd);\n      if (result == 1) {\n        isEnabled = false;\n      }\n      else if ((featureFlagsByte & 8) == 0) {\n        isEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0x13);\n        if (result == 0) {\n          isEnabled = false;\n        }\n        else {\n          isEnabled = true;\n        }\n      }\n    }\n    if (isEnabled) {\n      configFlags = configFlags | 8;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0xe);\n      if (result == 1) {\n        isEnabled = false;\n      }\n      else if ((featureFlagsByte & 0x10) == 0) {\n        isEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0x14);\n        if (result == 0) {\n          isEnabled = false;\n        }\n        else {\n          isEnabled = true;\n        }\n      }\n    }\n    if (isEnabled) {\n      configFlags = configFlags | 0x10;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0xf);\n      if (result == 1) {\n        isEnabled = false;\n      }\n      else if ((featureFlagsByte & 0x20) == 0) {\n        isEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0x15);\n        if (result == 0) {\n          isEnabled = false;\n        }\n        else {\n          isEnabled = true;\n        }\n      }\n    }\n    if (isEnabled) {\n      configFlags = configFlags | 0x20;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0x17);\n      if (result == 1) {\n        isEnabled = false;\n      }\n      else if ((featureFlagsByte & 0x40) == 0) {\n        isEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0x16);\n        if (result == 0) {\n          isEnabled = false;\n        }\n        else {\n          isEnabled = true;\n        }\n      }\n    }\n    if (isEnabled) {\n      configFlags = configFlags | 0x40;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0x2d);\n      if (result == 1) {\n        isEnabled = false;\n      }\n      else if ((featureFlagsByte & 0x80) == 0) {\n        isEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0x17);\n        if (result == 0) {\n          isEnabled = false;\n        }\n        else {\n          isEnabled = true;\n        }\n      }\n    }\n    if (isEnabled) {\n      configFlags = configFlags | 0x80;\n    }\n    FUN_08000be8(2,configFlags,0);\n  }\n  featureFlagsByte = DAT_20000177;\n  if (DAT_200001eb != '\\0') {\n    result = FUN_080036ac();\n    if (result == 0) {\n      configFlags = 0;\n    }\n    else {\n      result = FUN_080036ac(0x2e);\n      if (result == 1) {\n        configFlags = 0;\n      }\n      else if ((featureFlagsByte & 1) == 0) {\n        configFlags = 0;\n      }\n      else {\n        result = FUN_08008a6c(0x18);\n        if (result == 0) {\n          configFlags = 0;\n        }\n        else {\n          configFlags = 1;\n        }\n      }\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0x2f);\n      if (result == 1) {\n        isEnabled = false;\n      }\n      else if ((featureFlagsByte & 2) == 0) {\n        isEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0x19);\n        if (result == 0) {\n          isEnabled = false;\n        }\n        else {\n          isEnabled = true;\n        }\n      }\n    }\n    if (isEnabled) {\n      configFlags = configFlags | 2;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0x30);\n      if (result == 1) {\n        isEnabled = false;\n      }\n      else if ((featureFlagsByte & 4) == 0) {\n        isEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0x1a);\n        if (result == 0) {\n          isEnabled = false;\n        }\n        else {\n          isEnabled = true;\n        }\n      }\n    }\n    if (isEnabled) {\n      configFlags = configFlags | 4;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0x31);\n      if (result == 1) {\n        isEnabled = false;\n      }\n      else if ((featureFlagsByte & 8) == 0) {\n        isEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0x1b);\n        if (result == 0) {\n          isEnabled = false;\n        }\n        else {\n          isEnabled = true;\n        }\n      }\n    }\n    if (isEnabled) {\n      configFlags = configFlags | 8;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0x22);\n      if (result == 1) {\n        isEnabled = false;\n      }\n      else if ((featureFlagsByte & 0x10) == 0) {\n        isEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0x1c);\n        if (result == 0) {\n          isEnabled = false;\n        }\n        else {\n          isEnabled = true;\n        }\n      }\n    }\n    if (isEnabled) {\n      configFlags = configFlags | 0x10;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0x23);\n      if (result == 1) {\n        isEnabled = false;\n      }\n      else if ((featureFlagsByte & 0x20) == 0) {\n        isEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0x1d);\n        if (result == 0) {\n          isEnabled = false;\n        }\n        else {\n          isEnabled = true;\n        }\n      }\n    }\n    if (isEnabled) {\n      configFlags = configFlags | 0x20;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0x2b);\n      if (result == 1) {\n        isEnabled = false;\n      }\n      else if ((featureFlagsByte & 0x40) == 0) {\n        isEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0x1e);\n        if (result == 0) {\n          isEnabled = false;\n        }\n        else {\n          isEnabled = true;\n        }\n      }\n    }\n    if (isEnabled) {\n      configFlags = configFlags | 0x40;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0x32);\n      if (result == 1) {\n        isEnabled = false;\n      }\n      else if ((featureFlagsByte & 0x80) == 0) {\n        isEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0x1f);\n        if (result == 0) {\n          isEnabled = false;\n        }\n        else {\n          isEnabled = true;\n        }\n      }\n    }\n    if (isEnabled) {\n      configFlags = configFlags | 0x80;\n    }\n    FUN_08000be8(3,configFlags,0);\n  }\n  featureFlagsByte = DAT_20000178;\n  if (DAT_200001ec != '\\0') {\n    result = FUN_080036ac();\n    if (result == 0) {\n      configFlags = 0;\n    }\n    else {\n      result = FUN_080036ac(0x29);\n      if (result == 1) {\n        configFlags = 0;\n      }\n      else if ((featureFlagsByte & 1) == 0) {\n        configFlags = 0;\n      }\n      else {\n        result = FUN_08008a6c(0x20);\n        if (result == 0) {\n          configFlags = 0;\n        }\n        else {\n          configFlags = 1;\n        }\n      }\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0x28);\n      if (result == 1) {\n        isEnabled = false;\n      }\n      else if ((featureFlagsByte & 2) == 0) {\n        isEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0x21);\n        if (result == 0) {\n          isEnabled = false;\n        }\n        else {\n          isEnabled = true;\n        }\n      }\n    }\n    if (isEnabled) {\n      configFlags = configFlags | 2;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0x26);\n      if (result == 1) {\n        isEnabled = false;\n      }\n      else if ((featureFlagsByte & 4) == 0) {\n        isEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0x22);\n        if (result == 0) {\n          isEnabled = false;\n        }\n        else {\n          isEnabled = true;\n        }\n      }\n    }\n    if (isEnabled) {\n      configFlags = configFlags | 4;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0x25);\n      if (result == 1) {\n        isEnabled = false;\n      }\n      else if ((featureFlagsByte & 8) == 0) {\n        isEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0x23);\n        if (result == 0) {\n          isEnabled = false;\n        }\n        else {\n          isEnabled = true;\n        }\n      }\n    }\n    if (isEnabled) {\n      configFlags = configFlags | 8;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0xc);\n      if (result == 1) {\n        isEnabled = false;\n      }\n      else if ((featureFlagsByte & 0x10) == 0) {\n        isEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0x24);\n        if (result == 0) {\n          isEnabled = false;\n        }\n        else {\n          isEnabled = true;\n        }\n      }\n    }\n    if (isEnabled) {\n      configFlags = configFlags | 0x10;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0xb);\n      if (result == 1) {\n        isEnabled = false;\n      }\n      else if ((featureFlagsByte & 0x20) == 0) {\n        isEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0x25);\n        if (result == 0) {\n          isEnabled = false;\n        }\n        else {\n          isEnabled = true;\n        }\n      }\n    }\n    if (isEnabled) {\n      configFlags = configFlags | 0x20;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0x1c);\n      if (result == 1) {\n        isEnabled = false;\n      }\n      else if ((featureFlagsByte & 0x40) == 0) {\n        isEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0x26);\n        if (result == 0) {\n          isEnabled = false;\n        }\n        else {\n          isEnabled = true;\n        }\n      }\n    }\n    if (isEnabled) {\n      configFlags = configFlags | 0x40;\n    }\n    result = FUN_080036ac();\n    if (result == 0) {\n      isEnabled = false;\n    }\n    else {\n      result = FUN_080036ac(0x1b);\n      if (result == 1) {\n        isEnabled = false;\n      }\n      else if ((featureFlagsByte & 0x80) == 0) {\n        isEnabled = false;\n      }\n      else {\n        result = FUN_08008a6c(0x27);\n        if (result == 0) {\n          isEnabled = false;\n        }\n        else {\n          isEnabled = true;\n        }\n      }\n    }\n    if (isEnabled) {\n      configFlags = configFlags | 0x80;\n    }\n    FUN_08000be8(4,configFlags,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000ef8": "configure_features_08000ef8",
                "bVar1": "featureFlagsByte",
                "iVar2": "result",
                "bVar3": "isEnabled",
                "bVar4": "configFlags"
            },
            "calling": [
                "FUN_080022f8"
            ],
            "called": [
                "FUN_08000be8",
                "FUN_080036ac",
                "FUN_08008a6c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001b48": {
            "entrypoint": "0x08001b48",
            "current_name": "initialize_gateway_08001b48",
            "code": "\nvoid initializeGateway_08001b48(void)\n\n{\n  FUN_08002e44(&DAT_200003d4,\"/home/bo/p2im/p2im-real_firmware_scratch/Gateway/StandardFirmata.ino\",\n               2,5);\n  FUN_08002f2c(&DAT_200003d4,0xe0,0x8000215);\n  FUN_08002f2c(&DAT_200003d4,0x90,&targetAddress);\n  FUN_08002f2c(&DAT_200003d4,0xc0,0x8000489);\n  FUN_08002f2c(&DAT_200003d4,0xd0,&sourceAddress);\n  FUN_08002f2c(&DAT_200003d4,0xf4,0x80005f9);\n  FUN_08002f2c(&DAT_200003d4,0xf5,&firmwareAddress);\n  FUN_08002f94(&DAT_200003d4,0xf0,0x8001cd1);\n  FUN_08002f84(&DAT_200003d4,0xff,0x8000aed);\n  FUN_08003048(&DAT_200003d4,0xe100);\n  FUN_08000aec();\n  FUN_0800018c(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001b48": "initialize_gateway_08001b48",
                "LAB_080002ec_1": "targetAddress",
                "LAB_08000c18_1": "sourceAddress",
                "LAB_080001a8_1": "firmwareAddress"
            },
            "calling": [
                "FUN_08008f1c"
            ],
            "called": [
                "FUN_08002f84",
                "FUN_08000aec",
                "FUN_08003048",
                "FUN_08002f94",
                "FUN_08002f2c",
                "FUN_08002e44",
                "FUN_0800018c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001bf8": {
            "entrypoint": "0x08001bf8",
            "current_name": "initialize_data_08001bf8",
            "code": "\nvoid initializeData_08001bf8(undefined4 dataPointer,undefined4 unusedParameter,undefined4 sourceData,undefined4 destinationData)\n\n{\n  FUN_0800288c(&DAT_20000314,dataPointer,sourceData,destinationData,destinationData);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001bf8": "initialize_data_08001bf8",
                "param_1": "dataPointer",
                "param_2": "unusedParameter",
                "param_3": "sourceData",
                "param_4": "destinationData"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_08001c18"
            ],
            "called": [
                "FUN_0800288c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c08": {
            "entrypoint": "0x08001c08",
            "current_name": "initialize_data_08001c08",
            "code": "\nundefined initializeData_08001c08(void)\n\n{\n  undefined result;\n  \n  result = FUN_08002720(&DAT_20000314);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08001c08": "initialize_data_08001c08",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08001c18"
            ],
            "called": [
                "FUN_08002720"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001c18": {
            "entrypoint": "0x08001c18",
            "current_name": "receive_data_08001c18",
            "code": "\nvoid receiveData_08001c18(undefined4 deviceAddress,uint byteCount,int expectedBytes,undefined4 bufferAddress)\n\n{\n  undefined receivedByte;\n  int receivedByteCount;\n  int readResultCode;\n  bool isSuccess;\n  \n  if (byteCount == 0xffffffff) {\n    byteCount = 0;\n  }\n  else {\n    FUN_08002a30(&DAT_20000314,deviceAddress);\n    FUN_08001bf8(byteCount & 0xff);\n    FUN_08002a58(&DAT_20000314,bufferAddress);\n  }\n  FUN_08002c14(&DAT_20000314,deviceAddress,expectedBytes);\n  receivedByteCount = FUN_0800270c(&DAT_20000314);\n  if (expectedBytes < receivedByteCount) {\n    FUN_08002f14(&DAT_200003d4,\"I2C: Too many bytes received\");\n  }\n  else {\n    receivedByteCount = FUN_0800270c(&DAT_20000314);\n    if (receivedByteCount < expectedBytes) {\n      FUN_08002f14(&DAT_200003d4,\"I2C: Too few bytes received\");\n    }\n  }\n  DAT_20000130 = (undefined)deviceAddress;\n  DAT_20000131 = (undefined)byteCount;\n  receivedByteCount = 0;\n  while( true ) {\n    if (receivedByteCount < expectedBytes) {\n      readResultCode = FUN_0800270c(&DAT_20000314);\n      if (readResultCode == 0) {\n        isSuccess = false;\n      }\n      else {\n        isSuccess = true;\n      }\n    }\n    else {\n      isSuccess = false;\n    }\n    if (!isSuccess) break;\n    receivedByte = FUN_08001c08();\n    (&DAT_20000132)[receivedByteCount] = receivedByte;\n    receivedByteCount = receivedByteCount + 1;\n  }\n  FUN_08002f0a(&DAT_200003d4,0x77,expectedBytes + 2U & 0xff,&DAT_20000130);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001c18": "receive_data_08001c18",
                "param_1": "deviceAddress",
                "param_2": "byteCount",
                "param_3": "expectedBytes",
                "param_4": "bufferAddress",
                "uVar1": "receivedByte",
                "iVar2": "receivedByteCount",
                "iVar3": "readResultCode",
                "bVar4": "isSuccess"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_080022f8"
            ],
            "called": [
                "FUN_08002f14",
                "FUN_08002f0a",
                "FUN_0800270c",
                "FUN_08002a58",
                "FUN_08001bf8",
                "FUN_08002c14",
                "FUN_08002a30",
                "FUN_08001c08"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001cd0": {
            "entrypoint": "0x08001cd0",
            "current_name": "process_data_08001cd0",
            "code": "\nvoid processData_08001cd0(undefined4 opcode,int length,byte *data,undefined4 param_4)\n\n{\n  byte byte1;\n  byte byte2;\n  byte byte3;\n  undefined4 uVar4;\n  byte byte4;\n  char char1;\n  int int1;\n  int int2;\n  uint uint1;\n  uint uint2;\n  int int3;\n  bool bool1;\n  \n  switch(opcode) {\n  case 0x69:\n    FUN_08002f1e(&DAT_200003d4,0xf0);\n    FUN_08002f1e(&DAT_200003d4,0x6a);\n    for (uint1 = 0; uint1 < 0x3c; uint1 = uint1 + 1 & 0xff) {\n      uint2 = uint1 - 0x2e & 0xff;\n      if (uint2 < 0xe) {\n        if (uint1 < 0x3c) {\n          int1 = (int)(char)(&DAT_0800a908)[uint1];\n        }\n        else {\n          int1 = -1;\n        }\n        int1 = FUN_080036ac(int1);\n        if (int1 == 0) {\n          uint2 = 0x7f;\n        }\n        else {\n          if (uint1 < 0x3c) {\n            int1 = (int)(char)(&DAT_0800a908)[uint1];\n          }\n          else {\n            int1 = -1;\n          }\n          int1 = FUN_080036ac(int1);\n          if (int1 == 1) {\n            uint2 = 0x7f;\n          }\n        }\n      }\n      else {\n        uint2 = 0x7f;\n      }\n      FUN_08002f1e(&DAT_200003d4,uint2);\n    }\n    FUN_08002f1e(&DAT_200003d4,0xf7);\n    break;\n  case 0x6b:\n    FUN_08002f1e(&DAT_200003d4,0xf0);\n    FUN_08002f1e(&DAT_200003d4,0x6c);\n    for (uint1 = 0; uint1 < 0x3c; uint1 = uint1 + 1 & 0xff) {\n      if (uint1 < 0x3c) {\n        if ((&DAT_0800a908)[uint1] == -1) {\n          bool1 = false;\n        }\n        else {\n          int1 = FUN_080036ac();\n          if (int1 == 0) {\n            bool1 = false;\n          }\n          else {\n            int1 = FUN_080036ac((int)(char)(&DAT_0800a908)[uint1]);\n            if (int1 == 1) {\n              bool1 = false;\n            }\n            else {\n              bool1 = true;\n            }\n          }\n        }\n      }\n      else {\n        bool1 = false;\n      }\n      if (bool1) {\n        FUN_08002f1e(&DAT_200003d4,0);\n        FUN_08002f1e(&DAT_200003d4,1);\n        FUN_08002f1e(&DAT_200003d4,0xb);\n        FUN_08002f1e(&DAT_200003d4,1);\n        FUN_08002f1e(&DAT_200003d4,1);\n        FUN_08002f1e(&DAT_200003d4,1);\n      }\n      if ((uint1 - 0x2e & 0xff) < 0xe) {\n        if (uint1 < 0x3c) {\n          int1 = (int)(char)(&DAT_0800a908)[uint1];\n        }\n        else {\n          int1 = -1;\n        }\n        int1 = FUN_080036ac(int1);\n        if (int1 == 0) {\n          bool1 = false;\n        }\n        else {\n          if (uint1 < 0x3c) {\n            int1 = (int)(char)(&DAT_0800a908)[uint1];\n          }\n          else {\n            int1 = -1;\n          }\n          int1 = FUN_080036ac(int1);\n          if (int1 == 1) {\n            bool1 = false;\n          }\n          else {\n            bool1 = true;\n          }\n        }\n      }\n      else {\n        bool1 = false;\n      }\n      if (bool1) {\n        FUN_08002f1e(&DAT_200003d4,2);\n        FUN_08002f1e(&DAT_200003d4,10);\n      }\n      if (uint1 < 0x3c) {\n        if ((&DAT_0800a908)[uint1] == -1) {\n          int1 = 0;\n        }\n        else {\n          int1 = FUN_080036ac();\n          if (int1 == 0) {\n            int1 = 0;\n          }\n          else {\n            int1 = FUN_080036ac((int)(char)(&DAT_0800a908)[uint1]);\n            if (int1 == 1) {\n              int1 = 0;\n            }\n            else {\n              int1 = FUN_0800738a((int)(char)(&DAT_0800a908)[uint1],&DAT_0800a6cc);\n            }\n          }\n        }\n      }\n      else {\n        int1 = 0;\n      }\n      if (int1 != 0) {\n        FUN_08002f1e(&DAT_200003d4,3);\n        FUN_08002f1e(&DAT_200003d4,8);\n      }\n      if (uint1 < 0x3c) {\n        if ((&DAT_0800a908)[uint1] == -1) {\n          bool1 = false;\n        }\n        else {\n          int1 = FUN_080036ac();\n          if (int1 == 0) {\n            bool1 = false;\n          }\n          else {\n            int1 = FUN_080036ac((int)(char)(&DAT_0800a908)[uint1]);\n            if (int1 == 1) {\n              bool1 = false;\n            }\n            else {\n              bool1 = true;\n            }\n          }\n        }\n      }\n      else {\n        bool1 = false;\n      }\n      if (bool1) {\n        FUN_08002f1e(&DAT_200003d4,4);\n        FUN_08002f1e(&DAT_200003d4,0xe);\n      }\n      if (uint1 < 0x3c) {\n        if ((&DAT_0800a908)[uint1] == -1) {\n          int1 = 0;\n        }\n        else {\n          int1 = FUN_080036ac();\n          if (int1 == 0) {\n            int1 = 0;\n          }\n          else {\n            int1 = FUN_080036ac((int)(char)(&DAT_0800a908)[uint1]);\n            if (int1 == 1) {\n              int1 = 0;\n            }\n            else {\n              int1 = FUN_0800738a((int)(char)(&DAT_0800a908)[uint1],&DAT_0800a69c);\n              if (int1 == 0) {\n                int1 = FUN_0800738a((int)(char)(&DAT_0800a908)[uint1],&DAT_0800a66c);\n              }\n            }\n          }\n        }\n      }\n      else {\n        int1 = 0;\n      }\n      if (int1 != 0) {\n        FUN_08002f1e(&DAT_200003d4,6);\n        FUN_08002f1e(&DAT_200003d4,1);\n      }\n      FUN_08002f1e(&DAT_200003d4,0x7f);\n    }\n    FUN_08002f1e(&DAT_200003d4,0xf7);\n    return;\n  case 0x6d:\n    if (length != 0) {\n      byte1 = *data;\n      FUN_08002f1e(&DAT_200003d4,0xf0);\n      FUN_08002f1e(&DAT_200003d4,0x6e);\n      FUN_08002f1e(&DAT_200003d4,byte1);\n      if (byte1 < 0x3c) {\n        uVar4 = FUN_08002fa0(&DAT_200003d4,byte1);\n        FUN_08002f1e(&DAT_200003d4,uVar4);\n        uint1 = FUN_08002fba(&DAT_200003d4,byte1);\n        FUN_08002f1e(&DAT_200003d4,uint1 & 0x7f);\n        uint1 = FUN_08002fba(&DAT_200003d4,byte1);\n        if ((uint1 & 0xff80) != 0) {\n          int1 = FUN_08002fba(&DAT_200003d4,byte1);\n          FUN_08002f1e(&DAT_200003d4,(uint)(int1 << 0x12) >> 0x19);\n        }\n        uint1 = FUN_08002fba(&DAT_200003d4,byte1);\n        if ((uint1 & 0xc000) != 0) {\n          int1 = FUN_08002fba(&DAT_200003d4,byte1);\n          FUN_08002f1e(&DAT_200003d4,(uint)(int1 << 0xb) >> 0x19);\n        }\n      }\n      FUN_08002f1e(&DAT_200003d4,0xf7);\n      return;\n    }\n    break;\n  case 0x6f:\n    if (1 < length) {\n      uint1 = (uint)data[1];\n      if (2 < length) {\n        uint1 = uint1 | (uint)data[2] << 7;\n      }\n      if (3 < length) {\n        uint1 = uint1 | (uint)data[3] << 0xe;\n      }\n      FUN_08000214(*data,uint1);\n      return;\n    }\n    break;\n  case 0x70:\n    if (4 < length) {\n      uint1 = (uint)*data;\n      byte1 = data[1];\n      byte4 = data[2];\n      byte2 = data[3];\n      byte3 = data[4];\n      if (uint1 < 0x3c) {\n        if ((&DAT_0800a908)[uint1] == -1) {\n          bool1 = false;\n        }\n        else {\n          int1 = FUN_080036ac();\n          if (int1 == 0) {\n            bool1 = false;\n          }\n          else {\n            int1 = FUN_080036ac((int)(char)(&DAT_0800a908)[uint1]);\n            if (int1 == 1) {\n              bool1 = false;\n            }\n            else {\n              bool1 = true;\n            }\n          }\n        }\n      }\n      else {\n        bool1 = false;\n      }\n      if (bool1) {\n        if ((byte)(&DAT_200001f0)[uint1] < 0xc) {\n          int1 = FUN_080026f8(&DAT_2000022c + (uint)(byte)(&DAT_200001f0)[uint1] * 3);\n        }\n        else {\n          int1 = 0;\n        }\n        if (int1 != 0) {\n          FUN_08000588(uint1);\n        }\n        FUN_08000500(uint1,(uint)byte1 + (uint)byte4 * 0x80,(uint)byte2 + (uint)byte3 * 0x80);\n        FUN_080005f8(uint1,4);\n        return;\n      }\n    }\n    break;\n  case 0x76:\n    byte1 = data[1];\n    byte4 = byte1 & 0x18;\n    if ((byte1 & 0x20) != 0) {\n      FUN_08002f14(&DAT_200003d4,\"10-bit addressing not supported\",byte4,byte1,param_4);\n      return;\n    }\n    byte2 = *data;\n    bool1 = (byte1 & 0x40) == 0;\n    if (byte4 < 0x19) {\n      switch(byte4) {\n      case 0:\n        FUN_08002a30(&DAT_20000314,byte2);\n        for (uint1 = 2; (int)uint1 < length; uint1 = uint1 + 2 & 0xff) {\n          FUN_08001bf8(data[uint1 + 1] * -0x80 + data[uint1]);\n        }\n        FUN_08002ac0(&DAT_20000314);\n        return;\n      case 8:\n        if (length == 6) {\n          int1 = (uint)data[2] + (uint)data[3] * 0x80;\n          char1 = data[4] + data[5] * -0x80;\n        }\n        else {\n          char1 = data[2] + data[3] * -0x80;\n          int1 = -1;\n        }\n        FUN_08001c18(byte2,int1,char1);\n        return;\n      case 0x10:\n        if (DAT_20000004 + 1 < 8) {\n          if (length == 6) {\n            int1 = (uint)data[2] + (uint)data[3] * 0x80;\n            char1 = data[4] + data[5] * -0x80;\n          }\n          else {\n            char1 = data[2] + data[3] * -0x80;\n            int1 = -1;\n          }\n          DAT_20000004 = DAT_20000004 + '\\x01';\n          int2 = (int)DAT_20000004;\n          int3 = int2 * 0xc;\n          (&DAT_20000188)[int3] = byte2;\n          (&DAT_2000018c)[int2 * 3] = int1;\n          (&DAT_20000190)[int3] = char1;\n          (&DAT_20000191)[int3] = bool1;\n          return;\n        }\n        FUN_08002f14(&DAT_200003d4,\"too many queries\",(int)DAT_20000004,bool1,param_4);\n        return;\n      case 0x18:\n        if (DAT_20000004 < 1) {\n          DAT_20000004 = 0xff;\n          return;\n        }\n      }\n      for (uint1 = 0; int1 = DAT_20000004 + 1, (int)uint1 < int1; uint1 = uint1 + 1 & 0xff) {\n        if (byte2 == (&DAT_20000188)[uint1 * 0xc]) goto LAB_08001e66;\n      }\n      uint1 = 0;\nLAB_08001e66:\n      for (; (int)uint1 < int1; uint1 = uint1 + 1 & 0xff) {\n        if (uint1 < 8) {\n          int2 = (uint1 + 1) * 0xc;\n          int3 = uint1 * 0xc;\n          (&DAT_20000188)[int3] = (&DAT_20000188)[int2];\n          (&DAT_2000018c)[uint1 * 3] = (&DAT_2000018c)[(uint1 + 1) * 3];\n          (&DAT_20000190)[int3] = (&DAT_20000190)[int2];\n          (&DAT_20000191)[int3] = (&DAT_20000191)[int2];\n        }\n      }\n      DAT_20000004 = DAT_20000004 + -1;\n      return;\n    }\n    break;\n  case 0x78:\n    int1 = (uint)*data + (uint)data[1] * 0x80;\n    if ((1 < length) && (int1 != 0)) {\n      DAT_2000012c = int1;\n    }\n    if (DAT_20000170 == '\\0') {\n      FUN_08000a64();\n      return;\n    }\n    break;\n  case 0x7a:\n    if ((1 < length) &&\n       (DAT_20000008 = (uint)*data + (uint)data[1] * 0x80, DAT_20000008 == 0)) {\n      DAT_20000008 = 1;\n      return;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001cd0": "process_data_08001cd0",
                "param_1": "opcode",
                "param_2": "length",
                "param_3": "data",
                "bVar1": "byte1",
                "bVar2": "byte2",
                "bVar3": "byte3",
                "bVar5": "byte4",
                "cVar6": "char1",
                "iVar7": "int1",
                "iVar8": "int2",
                "uVar9": "uint1",
                "uVar10": "uint2",
                "iVar11": "int3",
                "bVar12": "bool1"
            },
            "calling": [],
            "called": [
                "FUN_08002f1e",
                "FUN_08002f14",
                "FUN_080036ac",
                "FUN_08001bf8",
                "FUN_0800738a",
                "FUN_08002ac0",
                "FUN_08001c18",
                "FUN_08002fba",
                "FUN_08002a30",
                "FUN_080005f8",
                "FUN_08000588",
                "FUN_08002fa0",
                "FUN_08000a64",
                "FUN_08000500",
                "FUN_08000214",
                "FUN_080026f8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080022f8": {
            "entrypoint": "0x080022f8",
            "current_name": "process_data_080022f8",
            "code": "\nvoid processData_080022f8(void)\n\n{\n  bool isValid;\n  int dataCount;\n  undefined4 newValue;\n  uint index;\n  uint adjustedIndex;\n  \n  FUN_08000ef8();\n  while (dataCount = FUN_08002ec4(&DAT_200003d4), dataCount != 0) {\n    FUN_08002ed2(&DAT_200003d4);\n  }\n  DAT_20000118 = FUN_08008abc();\n  if (DAT_20000008 < (uint)(DAT_20000118 - DAT_2000017c)) {\n    DAT_2000017c = DAT_2000017c + DAT_20000008;\n    for (index = 0; index < 0x3c; index = index + 1 & 0xff) {\n      adjustedIndex = index - 0x2e & 0xff;\n      if (adjustedIndex < 0xe) {\n        if (index < 0x3c) {\n          dataCount = (int)(char)(&DAT_0800a908)[index];\n        }\n        else {\n          dataCount = -1;\n        }\n        dataCount = FUN_080036ac(dataCount);\n        if (dataCount == 0) {\n          isValid = false;\n        }\n        else {\n          if (index < 0x3c) {\n            dataCount = (int)(char)(&DAT_0800a908)[index];\n          }\n          else {\n            dataCount = -1;\n          }\n          dataCount = FUN_080036ac(dataCount);\n          if (dataCount == 1) {\n            isValid = false;\n          }\n          else {\n            dataCount = FUN_08002fa0(&DAT_200003d4,index);\n            if (dataCount == 2) {\n              isValid = true;\n            }\n            else {\n              isValid = false;\n            }\n          }\n        }\n      }\n      else {\n        isValid = false;\n      }\n      if ((isValid) && ((DAT_20000114 >> adjustedIndex & 1U) != 0)) {\n        newValue = FUN_08008880(adjustedIndex);\n        FUN_08002ef2(&DAT_200003d4,adjustedIndex,newValue);\n      }\n    }\n    if (-1 < DAT_20000004) {\n      for (index = 0; (int)index < DAT_20000004 + 1; index = index + 1 & 0xff) {\n        dataCount = index * 0xc;\n        FUN_08001c18((&DAT_20000188)[dataCount],(&DAT_2000018c)[index * 3],(&DAT_20000190)[dataCount],\n                     (&DAT_20000191)[dataCount]);\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080022f8": "process_data_080022f8",
                "iVar2": "dataCount",
                "bVar1": "isValid",
                "uVar3": "newValue",
                "uVar4": "index",
                "uVar5": "adjustedIndex"
            },
            "calling": [
                "FUN_08008f1c"
            ],
            "called": [
                "FUN_08002ed2",
                "FUN_08008abc",
                "FUN_08002fa0",
                "FUN_08008880",
                "FUN_080036ac",
                "FUN_08002ef2",
                "FUN_08001c18",
                "FUN_08002ec4",
                "FUN_08000ef8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002400": {
            "entrypoint": "0x08002400",
            "current_name": "check_flag_08002400",
            "code": "\nundefined4 check_flag_08002400(int input_value)\n\n{\n  uint counter;\n  \n  counter = 0;\n  while( true ) {\n    if (0xb < counter) {\n      return 0;\n    }\n    if (((&DAT_20000258)[(input_value * 0xc + counter) * 8] & 0x40) != 0) break;\n    counter = counter + 1 & 0xff;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08002400": "check_flag_08002400",
                "param_1": "input_value",
                "uVar1": "counter"
            },
            "calling": [
                "FUN_08002644",
                "FUN_080025ac"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800242c": {
            "entrypoint": "0x0800242c",
            "current_name": "initialize_connection_0800242c",
            "code": "\nvoid initializeConnection_0800242c(undefined4 socket,undefined4 timeout,undefined4 bufferSize,undefined4 userData)\n\n{\n  FUN_08007648(socket,60000,0x5dc,&LAB_08002444_1,userData);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800242c": "initialize_connection_0800242c",
                "param_1": "socket",
                "param_2": "timeout",
                "param_3": "bufferSize",
                "param_4": "userData"
            },
            "calling": [
                "FUN_080025ac"
            ],
            "called": [
                "FUN_08007648"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002578": {
            "entrypoint": "0x08002578",
            "current_name": "initialize_function_08002578",
            "code": "\nvoid initialize_function_08002578(void)\n\n{\n  FUN_080076e0();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002578": "initialize_function_08002578"
            },
            "calling": [
                "FUN_08002644"
            ],
            "called": [
                "FUN_080076e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002580": {
            "entrypoint": "0x08002580",
            "current_name": "initialize_data_08002580",
            "code": "\nvoid initializeData_08002580(byte *data)\n\n{\n  char nextValue;\n  uint counter;\n  \n  counter = (uint)DAT_20000250;\n  if (0xb < counter) {\n    *data = 0xff;\n    return;\n  }\n  nextValue = DAT_20000250 + 1;\n  *data = DAT_20000250;\n  DAT_20000250 = nextValue;\n  *(undefined4 *)(&DAT_2000025c + counter * 8) = 0x5dc;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002580": "initialize_data_08002580",
                "param_1": "data",
                "cVar1": "nextValue",
                "uVar2": "counter"
            },
            "calling": [
                "FUN_080004d4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080025ac": {
            "entrypoint": "0x080025ac",
            "current_name": "update_data_080025ac",
            "code": "\nbyte updateData_080025ac(byte *data,uint value,int offset1,int offset2)\n\n{\n  uint updatedValue;\n  uint index;\n  uint divisionResult;\n  int tempValue;\n  \n  if (*data < 0xc) {\n    FUN_08008990(value,1,offset1,*data,offset2);\n    index = (uint)*data;\n    updatedValue = (byte)(&DAT_20000258)[index * 8] & 0xffffffc0 | value & 0x3f;\n    (&DAT_20000258)[index * 8] = (char)updatedValue;\n    tempValue = -offset1 + 0x220;\n    if (tempValue < 0) {\n      tempValue = -offset1 + 0x223;\n    }\n    data[1] = (byte)((uint)(tempValue << 0x16) >> 0x18);\n    tempValue = -offset2 + 0x960;\n    if (tempValue < 0) {\n      tempValue = -offset2 + 0x963;\n    }\n    data[2] = (byte)((uint)(tempValue << 0x16) >> 0x18);\n    divisionResult = *data / 0xc;\n    tempValue = FUN_08002400(divisionResult,updatedValue,index,(uint)*data * -0x55555555);\n    if (tempValue == 0) {\n      DAT_200002fc = (undefined)divisionResult;\n      FUN_0800242c();\n    }\n    (&DAT_20000258)[(uint)*data * 8] = (&DAT_20000258)[(uint)*data * 8] | 0x40;\n  }\n  return *data;\n}\n\n",
            "renaming": {
                "FUN_080025ac": "update_data_080025ac",
                "param_1": "data",
                "param_2": "value",
                "param_3": "offset1",
                "param_4": "offset2",
                "uVar1": "updatedValue",
                "uVar2": "index",
                "uVar3": "divisionResult",
                "iVar4": "tempValue"
            },
            "calling": [
                "FUN_08002634",
                "FUN_08000500"
            ],
            "called": [
                "FUN_08008990",
                "FUN_0800242c",
                "FUN_08002400"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002634": {
            "entrypoint": "0x08002634",
            "current_name": "initialize_graphics_08002634",
            "code": "\nvoid initializeGraphics_08002634(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  FUN_080025ac(arg1,arg2,0x220,0x960,arg4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002634": "initialize_graphics_08002634",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "calling": [
                "FUN_08000500"
            ],
            "called": [
                "FUN_080025ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002644": {
            "entrypoint": "0x08002644",
            "current_name": "initialize_and_process_data_08002644",
            "code": "\nvoid initializeAndProcessData_08002644(byte *data,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  byte currentByte;\n  uint firstByte;\n  int result;\n  \n  firstByte = (uint)*data;\n  currentByte = (&DAT_20000258)[firstByte * 8];\n  (&DAT_20000258)[firstByte * 8] = currentByte & 0xbf;\n  result = FUN_08002400(firstByte / 0xc,param2,currentByte & 0xbf,firstByte * -0x55555555,param4);\n  if (result == 0) {\n    FUN_08002578(&DAT_200002b8);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002644": "initialize_and_process_data_08002644",
                "param_1": "data",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "bVar1": "currentByte",
                "uVar2": "firstByte",
                "iVar3": "result"
            },
            "calling": [
                "FUN_08000588"
            ],
            "called": [
                "FUN_08002400",
                "FUN_08002578"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800267c": {
            "entrypoint": "0x0800267c",
            "current_name": "update_array_element_0800267c",
            "code": "\nvoid updateArrayElement_0800267c(byte *array,int elementIndex)\n\n{\n  int multiplier;\n  \n  if (*array < 0xc) {\n    multiplier = (0x88 - (char)array[1]) * 4;\n    if ((multiplier - elementIndex == 0 || multiplier < elementIndex) &&\n       (multiplier = (600 - (char)array[2]) * 4,\n       elementIndex == multiplier || elementIndex + (600 - (char)array[2]) * -4 < 0 != SBORROW4(elementIndex,multiplier)))\n    {\n      multiplier = elementIndex;\n    }\n    *(int *)(&DAT_2000025c + (uint)*array * 8) = multiplier;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800267c": "update_array_element_0800267c",
                "param_1": "array",
                "param_2": "elementIndex",
                "iVar1": "multiplier"
            },
            "calling": [
                "FUN_080026b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080026b0": {
            "entrypoint": "0x080026b0",
            "current_name": "process_data_080026b0",
            "code": "\nvoid processData_080026b0(int inputParam,int limit)\n\n{\n  if (limit < 0x220) {\n    if (limit < 0) {\n      limit = 0;\n    }\n    else if (0xb4 < limit) {\n      limit = 0xb4;\n    }\n    limit = FUN_08008ef4(limit,0,0xb4,(0x88 - *(char *)(inputParam + 1)) * 4,\n                           (600 - *(char *)(inputParam + 2)) * 4);\n  }\n  FUN_0800267c(inputParam,limit);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080026b0": "process_data_080026b0",
                "param_1": "inputParam",
                "param_2": "limit"
            },
            "calling": [
                "FUN_0800021a"
            ],
            "called": [
                "FUN_08008ef4",
                "FUN_0800267c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080026f8": {
            "entrypoint": "0x080026f8",
            "current_name": "bitwise_shift_function_080026f8",
            "code": "\nuint bitwiseShiftFunction_080026f8(byte *inputBuffer)\n\n{\n  return ((uint)(byte)(&DAT_20000258)[(uint)*inputBuffer * 8] << 0x19) >> 0x1f;\n}\n\n",
            "renaming": {
                "FUN_080026f8": "bitwise_shift_function_080026f8",
                "param_1": "inputBuffer"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800270c": {
            "entrypoint": "0x0800270c",
            "current_name": "calculate_difference_0800270c",
            "code": "\nint calculate_difference_0800270c(void)\n\n{\n  return (uint)DAT_200003b7 - (uint)DAT_200003b5;\n}\n\n",
            "renaming": {
                "FUN_0800270c": "calculate_difference_0800270c"
            },
            "calling": [
                "FUN_08001c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002720": {
            "entrypoint": "0x08002720",
            "current_name": "read_byte_from_data_08002720",
            "code": "\nuint readByteFromData_08002720(void)\n\n{\n  uint index;\n  \n  index = (uint)DAT_200003b5;\n  if (index < DAT_200003b7) {\n    DAT_200003b5 = DAT_200003b5 + 1;\n    return (uint)*(byte *)(DAT_200003c8 + index);\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08002720": "read_byte_from_data_08002720",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08001c08"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080027f0": {
            "entrypoint": "0x080027f0",
            "current_name": "process_data_080027f0",
            "code": "\nuint process_data_080027f0(int data_ptr,undefined4 flag,uint offset)\n\n{\n  int result;\n  uint new_offset;\n  \n  if (DAT_200003b4 == '\\0') {\n    result = FUN_08007ede(data_ptr + 0x14,flag,offset & 0xffff);\n    if (result == 0) {\n      return offset;\n    }\n    return 0;\n  }\n  new_offset = DAT_200003b8 + offset;\n  if (DAT_200003c5 < new_offset) {\n    if (new_offset < 0x20) {\n      new_offset = 0x20;\n    }\n    DAT_200003cc = FUN_08009908(DAT_200003cc,new_offset);\n    if (DAT_200003cc == 0) {\n      DAT_200003c5 = 0;\n    }\n    else {\n      DAT_200003c5 = (byte)new_offset;\n    }\n  }\n  if (DAT_200003cc == 0) {\n    *(undefined4 *)(data_ptr + 4) = 1;\n    return 0;\n  }\n  FUN_080091b0((uint)DAT_200003b6 + DAT_200003cc,flag,offset);\n  DAT_200003b6 = DAT_200003b6 + (char)offset;\n  DAT_200003b8 = DAT_200003b6;\n  return offset;\n}\n\n",
            "renaming": {
                "FUN_080027f0": "process_data_080027f0",
                "param_1": "data_ptr",
                "param_2": "flag",
                "param_3": "offset",
                "iVar1": "result",
                "uVar2": "new_offset"
            },
            "calling": [],
            "called": [
                "FUN_080091b0",
                "FUN_08009908",
                "FUN_08007ede"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800288c": {
            "entrypoint": "0x0800288c",
            "current_name": "process_data_0800288c",
            "code": "\nundefined4 processData_0800288c(int inputBuffer,undefined inputValue)\n\n{\n  undefined4 returnValue;\n  int status;\n  uint bufferSize;\n  undefined inputByte;\n  \n  inputByte = inputValue;\n  if (DAT_200003b4 == '\\0') {\n    status = FUN_08007ede(inputBuffer + 0x14,&inputByte,1);\n    if (status == 0) {\n      returnValue = 1;\n    }\n    else {\n      returnValue = 0;\n    }\n  }\n  else {\n    bufferSize = DAT_200003b8 + 1;\n    if (DAT_200003c5 < bufferSize) {\n      if (bufferSize < 0x20) {\n        bufferSize = 0x20;\n      }\n      DAT_200003cc = FUN_08009908(DAT_200003cc,bufferSize);\n      if (DAT_200003cc == 0) {\n        DAT_200003c5 = 0;\n      }\n      else {\n        DAT_200003c5 = (byte)bufferSize;\n      }\n    }\n    if (DAT_200003cc == 0) {\n      *(undefined4 *)(inputBuffer + 4) = 1;\n      returnValue = 0;\n    }\n    else {\n      *(undefined *)(DAT_200003cc + (uint)DAT_200003b6) = inputByte;\n      DAT_200003b6 = DAT_200003b6 + 1;\n      returnValue = 1;\n      DAT_200003b8 = DAT_200003b6;\n    }\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_0800288c": "process_data_0800288c",
                "param_1": "inputBuffer",
                "param_2": "inputValue",
                "uVar1": "returnValue",
                "iVar2": "status",
                "uVar3": "bufferSize",
                "local_11": "inputByte"
            },
            "calling": [
                "FUN_08001bf8"
            ],
            "called": [
                "FUN_08009908",
                "FUN_08007ede"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800291c": {
            "entrypoint": "0x0800291c",
            "current_name": "initialize_param_0800291c",
            "code": "\nvoid initializeParam_0800291c(undefined4 *paramArray)\n\n{\n  value1 = 0;\n  value2 = 1000;\n  *paramArray = &PTR_FUN_0800288c_1_0800a5a0;\n  *(undefined *)(paramArray + 0x1b) = 0x19;\n  *(undefined *)((int)paramArray + 0x6d) = 0x18;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800291c": "initialize_param_0800291c",
                "param_1": "paramArray",
                "param_1[1]": "value1",
                "param_1[2]": "value2"
            },
            "calling": [
                "FUN_08002948"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002948": {
            "entrypoint": "0x08002948",
            "current_name": "check_params_08002948",
            "code": "\nvoid checkParams_08002948(int firstParam,int secondParam)\n\n{\n  if (firstParam != 1) {\n    return;\n  }\n  if (secondParam == 0xffff) {\n    FUN_0800291c(&DAT_20000314);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002948": "check_params_08002948",
                "param_1": "firstParam",
                "param_2": "secondParam"
            },
            "calling": [
                "FUN_08002c1e"
            ],
            "called": [
                "FUN_0800291c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002968": {
            "entrypoint": "0x08002968",
            "current_name": "initialize_device_08002968",
            "code": "\nvoid initializeDevice_08002968(int deviceAddress,uint deviceFlags)\n\n{\n  int flagShifted;\n  int deviceSettingsAddress;\n  \n  DAT_200003b5 = 0;\n  DAT_200003b7 = 0;\n  if (DAT_200003c8 != 0) {\n    FUN_080091c6(DAT_200003c8,0,DAT_200003c4);\n  }\n  DAT_200003b6 = 0;\n  DAT_200003b8 = 0;\n  if (DAT_200003cc != 0) {\n    FUN_080091c6(DAT_200003cc,0,DAT_200003c5);\n  }\n  DAT_200003b4 = 0;\n  flagShifted = (deviceFlags & 0x7f) << 1;\n  *(char *)(deviceAddress + 0x10) = (char)flagShifted;\n  if (deviceFlags == 0x33) {\n    *(undefined *)(deviceAddress + 0x11) = 1;\n  }\n  else {\n    *(undefined *)(deviceAddress + 0x11) = 0;\n  }\n  deviceSettingsAddress = deviceAddress + 0x14;\n  FUN_080077b0(deviceSettingsAddress,100000,0x4000,flagShifted,*(undefined *)(deviceAddress + 0x11));\n  if (*(char *)(deviceAddress + 0x11) == '\\0') {\n    FUN_08007f8e(deviceSettingsAddress,&LAB_08002774_1);\n    FUN_08007f7c(deviceSettingsAddress,&LAB_08002b00_1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002968": "initialize_device_08002968",
                "param_1": "deviceAddress",
                "param_2": "deviceFlags",
                "iVar1": "flagShifted",
                "iVar2": "deviceSettingsAddress"
            },
            "calling": [
                "FUN_08002a1c"
            ],
            "called": [
                "FUN_080077b0",
                "FUN_08007f8e",
                "FUN_080091c6",
                "FUN_08007f7c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a1c": {
            "entrypoint": "0x08002a1c",
            "current_name": "initialize_variables_08002a1c",
            "code": "\nvoid initializeVariables_08002a1c(undefined4 var1,undefined var2,undefined4 var3,undefined4 var4)\n\n{\n  FUN_08002968(var1,var2,var3,var4,var4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002a1c": "initialize_variables_08002a1c",
                "param_1": "var1",
                "param_2": "var2",
                "param_3": "var3",
                "param_4": "var4"
            },
            "calling": [
                "FUN_08002a26"
            ],
            "called": [
                "FUN_08002968"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a26": {
            "entrypoint": "0x08002a26",
            "current_name": "initialize_data_08002a26",
            "code": "\nvoid initializeData_08002a26(undefined4 data1,undefined4 data2,undefined4 data3,undefined4 data4)\n\n{\n  FUN_08002a1c(data1,0x33,data3,data4,data4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002a26": "initialize_data_08002a26",
                "param_1": "data1",
                "param_2": "data2",
                "param_3": "data3",
                "param_4": "data4"
            },
            "calling": [
                "FUN_08000a64"
            ],
            "called": [
                "FUN_08002a1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a30": {
            "entrypoint": "0x08002a30",
            "current_name": "initialize_data_08002a30",
            "code": "\nvoid initializeData_08002a30(undefined4 param1,int param2)\n\n{\n  DAT_200003b4 = 1;\n  DAT_200003d0 = (char)(param2 << 1);\n  DAT_200003b6 = 0;\n  DAT_200003b8 = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002a30": "initialize_data_08002a30",
                "param_1": "param1",
                "param_2": "param2"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_08002b68",
                "FUN_08001c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a58": {
            "entrypoint": "0x08002a58",
            "current_name": "check_status_08002a58",
            "code": "\nundefined4 checkStatus_08002a58(int input)\n\n{\n  int result;\n  undefined4 status;\n  \n  if (*(char *)(input + 0x11) == '\\0') {\n    status = 4;\n  }\n  else {\n    result = FUN_08007e74(input + 0x14,DAT_200003d0,DAT_200003cc,DAT_200003b8);\n    if (result == 0) {\n      status = 0;\n    }\n    else if (result == 1) {\n      status = 1;\n    }\n    else {\n      status = 4;\n    }\n    if (DAT_200003cc != 0) {\n      FUN_080091c6(DAT_200003cc,0,DAT_200003c5);\n    }\n    DAT_200003b6 = 0;\n    DAT_200003b8 = 0;\n    DAT_200003b4 = 0;\n  }\n  return status;\n}\n\n",
            "renaming": {
                "FUN_08002a58": "check_status_08002a58",
                "param_1": "input",
                "iVar1": "result",
                "uVar2": "status"
            },
            "calling": [
                "FUN_08002b68",
                "FUN_08002ac0",
                "FUN_08001c18"
            ],
            "called": [
                "FUN_080091c6",
                "FUN_08007e74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ac0": {
            "entrypoint": "0x08002ac0",
            "current_name": "initialize_function_08002ac0",
            "code": "\nvoid initializeFunction_08002ac0(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  FUN_08002a58(arg1,1,arg3,arg4,arg4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ac0": "initialize_function_08002ac0",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [
                "FUN_08002a58"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002acc": {
            "entrypoint": "0x08002acc",
            "current_name": "update_parameter_08002acc",
            "code": "\nvoid updateParameter_08002acc(uint newParameter,undefined4 unusedParameter,undefined4 anotherParameter,undefined4 finalParameter)\n\n{\n  if (DAT_200003c4 < newParameter) {\n    if (newParameter < 0x20) {\n      newParameter = 0x20;\n    }\n    DAT_200003c8 = FUN_08009908(DAT_200003c8,newParameter,anotherParameter,(uint)DAT_200003c4,finalParameter);\n    if (DAT_200003c8 == 0) {\n      DAT_200003c4 = 0;\n    }\n    else {\n      DAT_200003c4 = (byte)newParameter;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002acc": "update_parameter_08002acc",
                "param_1": "newParameter",
                "param_2": "unusedParameter",
                "param_3": "anotherParameter",
                "param_4": "finalParameter"
            },
            "calling": [
                "FUN_08002b68"
            ],
            "called": [
                "FUN_08009908"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002b68": {
            "entrypoint": "0x08002b68",
            "current_name": "execute_function_08002b68",
            "code": "\nundefined4\nexecute_function_08002b68(undefined4 *function_ptr,uint function_param1,undefined4 function_param2,uint function_param3,byte function_param4)\n\n{\n  int result;\n  uint byte_value;\n  uint temp_value;\n  \n  byte_value = (uint)function_param4;\n  if (*(char *)((int)function_ptr + 0x11) == '\\0') {\n    return 0;\n  }\n  temp_value = function_param3;\n  FUN_08002acc(function_param2);\n  if (DAT_200003c8 != 0) {\n    if (byte_value != 0) {\n      FUN_08002a30(function_ptr,function_param1);\n      if (3 < byte_value) {\n        byte_value = 3;\n      }\n      while( true ) {\n        if (byte_value == 0) break;\n        (**(code **)*function_ptr)(function_ptr,function_param3 >> ((byte_value - 1 & 0x1f) << 3) & 0xff);\n        byte_value = byte_value - 1 & 0xff;\n      }\n      FUN_08002a58(function_ptr,0);\n    }\n    result = FUN_08007f0e(function_ptr + 5,(function_param1 & 0x7f) << 1,DAT_200003c8,function_param2,temp_value);\n    if (result != 0) {\n      function_param2 = 0;\n    }\n    DAT_200003b5 = 0;\n    DAT_200003b7 = (char)function_param2;\n    return function_param2;\n  }\n  function_ptr[1] = 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08002b68": "execute_function_08002b68",
                "param_1": "function_ptr",
                "param_2": "function_param1",
                "param_3": "function_param2",
                "param_4": "function_param3",
                "param_5": "function_param4",
                "iVar1": "result",
                "uVar2": "byte_value",
                "uVar3": "temp_value"
            },
            "calling": [
                "FUN_08002c00"
            ],
            "called": [
                "FUN_08007f0e",
                "FUN_08002a58",
                "FUN_08002acc",
                "FUN_08002a30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c00": {
            "entrypoint": "0x08002c00",
            "current_name": "initialize_application_08002c00",
            "code": "\nvoid initializeApplication_08002c00(void)\n\n{\n  FUN_08002b68();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c00": "initialize_application_08002c00"
            },
            "calling": [
                "FUN_08002c14"
            ],
            "called": [
                "FUN_08002b68"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c14": {
            "entrypoint": "0x08002c14",
            "current_name": "execute_initialization_08002c14",
            "code": "\nvoid executeInitialization_08002c14(void)\n\n{\n  FUN_08002c00();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c14": "execute_initialization_08002c14"
            },
            "calling": [
                "FUN_08001c18"
            ],
            "called": [
                "FUN_08002c00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c1e": {
            "entrypoint": "0x08002c1e",
            "current_name": "initialize_connection_08002c1e",
            "code": "\nvoid initializeConnection_08002c1e(undefined4 socket,undefined4 port,undefined4 param_3,undefined4 param_4)\n\n{\n  FUN_08002948(1,0xffff,param_3,param_4,param_4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c1e": "initialize_connection_08002c1e",
                "param_1": "socket",
                "param_2": "port"
            },
            "calling": [],
            "called": [
                "FUN_08002948"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c2c": {
            "entrypoint": "0x08002c2c",
            "current_name": "execute_callback_08002c2c",
            "code": "\nvoid executeCallback_08002c2c(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  if (DAT_200005d4 != (code *)0x0) {\n    (*DAT_200005d4)(arg2,arg3,arg3,DAT_200005d4,arg4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c2c": "execute_callback_08002c2c",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ce0": {
            "entrypoint": "0x08002ce0",
            "current_name": "initialize_device_08002ce0",
            "code": "\nint initializeDevice_08002ce0(int deviceAddress)\n\n{\n  int tempVar;\n  \n  FUN_0800314e(deviceAddress + 0x40);\n  tempVar = deviceAddress + 0x44;\n  FUN_080032bc(tempVar,deviceAddress,0x40);\n  *(undefined *)(deviceAddress + 0xc4) = 0;\n  *(undefined4 *)(deviceAddress + 200) = 0;\n  *(undefined *)(deviceAddress + 0x1f8) = 0;\n  FUN_08003306(tempVar,0xe0,FUN_08002c2c + 1,0);\n  FUN_08003306(tempVar,0x90,&subTask1,0);\n  FUN_08003306(tempVar,0xc0,&subTask2,0);\n  FUN_08003306(tempVar,0xd0,&subTask3,0);\n  FUN_08003306(tempVar,0xf4,&subTask4,0);\n  FUN_08003306(tempVar,0xf5,&subTask5,0);\n  FUN_08003366(tempVar,0x71,&subTask6,0);\n  FUN_08003370(tempVar,0xf0,&subTask7,0);\n  FUN_08003346(tempVar,0x79,&task1,deviceAddress);\n  FUN_08003350(tempVar,0xf9,&task2,deviceAddress);\n  FUN_08003350(tempVar,0xff,&task3,0);\n  return deviceAddress;\n}\n\n",
            "renaming": {
                "FUN_08002ce0": "initialize_device_08002ce0",
                "param_1": "deviceAddress",
                "iVar1": "tempVar",
                "LAB_08002c40_1": "subTask1",
                "LAB_08002c7c_1": "subTask2",
                "LAB_08002c90_1": "subTask3",
                "LAB_08002c54_1": "subTask4",
                "LAB_08002c68_1": "subTask5",
                "LAB_08002ca4_1": "subTask6",
                "LAB_08002cb8_1": "subTask7",
                "LAB_08002e1a_1": "task1",
                "LAB_08002dea_1": "task2",
                "LAB_08002cd0_1": "task3"
            },
            "calling": [
                "FUN_08002dbc"
            ],
            "called": [
                "FUN_08003350",
                "FUN_08003366",
                "FUN_08003306",
                "FUN_0800314e",
                "FUN_080032bc",
                "FUN_08003346",
                "FUN_08003370"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002dbc": {
            "entrypoint": "0x08002dbc",
            "current_name": "check_and_execute_08002dbc",
            "code": "\nvoid check_and_execute_08002dbc(int condition,int value)\n\n{\n  if (condition != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    FUN_08002ce0(&DAT_200003d4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002dbc": "check_and_execute_08002dbc",
                "param_1": "condition",
                "param_2": "value"
            },
            "calling": [],
            "called": [
                "FUN_08002ce0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ddc": {
            "entrypoint": "0x08002ddc",
            "current_name": "initialize_data_08002ddc",
            "code": "\nvoid initialize_data_08002ddc(int data_address,undefined4 value_1,undefined4 value_2,undefined4 value_3)\n\n{\n  FUN_0800322c(data_address + 0x40,2,5,value_3,value_3);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ddc": "initialize_data_08002ddc",
                "param_1": "data_address",
                "param_2": "value_1",
                "param_3": "value_2",
                "param_4": "value_3"
            },
            "calling": [
                "FUN_08002e26"
            ],
            "called": [
                "FUN_0800322c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002df6": {
            "entrypoint": "0x08002df6",
            "current_name": "process_data_08002df6",
            "code": "\nvoid processData_08002df6(int data)\n\n{\n  undefined *ptr;\n  \n  if (*(byte *)(data + 0xc4) == 0) {\n    return;\n  }\n  ptr = *(undefined **)(data + 200);\n  FUN_080031ce(data + 0x40,*ptr,ptr[1],*(byte *)(data + 0xc4) - 2,ptr + 2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002df6": "process_data_08002df6",
                "param_1": "data",
                "puVar1": "ptr"
            },
            "calling": [
                "FUN_08002e26"
            ],
            "called": [
                "FUN_080031ce"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002e26": {
            "entrypoint": "0x08002e26",
            "current_name": "update_parameter_and_get_values_08002e26",
            "code": "\nvoid updateParameterAndGetValues_08002e26(int inputPointer,undefined4 newValue)\n\n{\n  *(undefined4 *)(inputPointer + 0xc0) = newValue;\n  FUN_08003154(inputPointer + 0x40);\n  FUN_08002ddc(inputPointer);\n  FUN_08002df6(inputPointer);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002e26": "update_parameter_and_get_values_08002e26",
                "param_1": "inputPointer",
                "param_2": "newValue"
            },
            "calling": [
                "FUN_08003048"
            ],
            "called": [
                "FUN_08002ddc",
                "FUN_08002df6",
                "FUN_08003154"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002e44": {
            "entrypoint": "0x08002e44",
            "current_name": "extract_file_name_08002e44",
            "code": "\nvoid extractFileName_08002e44(int outputBuffer,int inputBuffer,undefined inputParam1,undefined inputParam2)\n\n{\n  byte byteValue;\n  char charValue;\n  int fileExtensionResult;\n  int forwardSlashIndex;\n  undefined *bufferPointer;\n  \n  fileExtensionResult = FUN_080099a4(inputBuffer,\".cpp\");\n  forwardSlashIndex = FUN_0800997e(inputBuffer,0x2f);\n  if (forwardSlashIndex == 0) {\n    forwardSlashIndex = FUN_0800997e(inputBuffer,0x5c);\n  }\n  if (forwardSlashIndex != 0) {\n    inputBuffer = forwardSlashIndex + 1;\n  }\n  if (fileExtensionResult == 0) {\n    charValue = FUN_08000178(inputBuffer);\n    *(char *)(outputBuffer + 0xc4) = charValue + '\\x02';\n  }\n  else {\n    *(char *)(outputBuffer + 0xc4) = ((char)fileExtensionResult - (char)inputBuffer) + '\\x02';\n  }\n  FUN_080091a0(*(undefined4 *)(outputBuffer + 200));\n  byteValue = *(byte *)(outputBuffer + 0xc4);\n  bufferPointer = (undefined *)FUN_08009190(byteValue + 1);\n  *(undefined **)(outputBuffer + 200) = bufferPointer;\n  bufferPointer[byteValue] = 0;\n  *bufferPointer = inputParam1;\n  bufferPointer[1] = inputParam2;\n  FUN_08009954(bufferPointer + 2,inputBuffer,*(byte *)(outputBuffer + 0xc4) - 2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002e44": "extract_file_name_08002e44",
                "param_1": "outputBuffer",
                "param_2": "inputBuffer",
                "param_3": "inputParam1",
                "param_4": "inputParam2",
                "bVar1": "byteValue",
                "cVar2": "charValue",
                "iVar3": "fileExtensionResult",
                "iVar4": "forwardSlashIndex",
                "puVar5": "bufferPointer"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_0800997e",
                "FUN_08009954",
                "FUN_080099a4",
                "FUN_08000178",
                "FUN_080091a0",
                "FUN_08009190"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ec4": {
            "entrypoint": "0x08002ec4",
            "current_name": "execute_callback_08002ec4",
            "code": "\nvoid executeCallback_08002ec4(int callbackAddress)\n\n{\n  (**(code **)(**(int **)(callbackAddress + 0xc0) + 8))();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ec4": "execute_callback_08002ec4",
                "param_1": "callbackAddress"
            },
            "calling": [
                "FUN_080022f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ed2": {
            "entrypoint": "0x08002ed2",
            "current_name": "process_data_08002ed2",
            "code": "\nvoid processData_08002ed2(int inputData)\n\n{\n  uint status;\n  \n  status = (**(code **)(**(int **)(inputData + 0xc0) + 0xc))();\n  if (status != 0xffffffff) {\n    FUN_08003474(inputData + 0x44,status & 0xff);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ed2": "process_data_08002ed2",
                "param_1": "inputData",
                "uVar1": "status"
            },
            "calling": [
                "FUN_080022f8"
            ],
            "called": [
                "FUN_08003474"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ef2": {
            "entrypoint": "0x08002ef2",
            "current_name": "initialize_data_08002ef2",
            "code": "\nvoid initializeData_08002ef2(int dataSize,undefined4 param2,undefined2 param3,undefined4 param4)\n\n{\n  FUN_08003158(dataSize + 0x40,param2,param3,param4,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ef2": "initialize_data_08002ef2",
                "param_1": "dataSize",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [
                "FUN_080022f8",
                "FUN_08000488"
            ],
            "called": [
                "FUN_08003158"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002efe": {
            "entrypoint": "0x08002efe",
            "current_name": "initialize_data_08002efe",
            "code": "\nvoid initializeData_08002efe(int dataPointer,undefined4 value,undefined2 index,undefined4 size)\n\n{\n  FUN_0800319e(dataPointer + 0x40,value,index,size,size);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002efe": "initialize_data_08002efe",
                "param_1": "dataPointer",
                "param_2": "value",
                "param_3": "index",
                "param_4": "size"
            },
            "calling": [
                "FUN_08000be8"
            ],
            "called": [
                "FUN_0800319e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f0a": {
            "entrypoint": "0x08002f0a",
            "current_name": "initialize_memory_08002f0a",
            "code": "\nvoid initializeMemory_08002f0a(int startingAddress)\n\n{\n  FUN_0800325a(startingAddress + 0x40);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f0a": "initialize_memory_08002f0a",
                "param_1": "startingAddress"
            },
            "calling": [
                "FUN_08001c18"
            ],
            "called": [
                "FUN_0800325a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f14": {
            "entrypoint": "0x08002f14",
            "current_name": "initialize_resources_08002f14",
            "code": "\nvoid initializeResources_08002f14(int resourceOffset)\n\n{\n  FUN_080032a2(resourceOffset + 0x40);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f14": "initialize_resources_08002f14",
                "param_1": "resourceOffset"
            },
            "calling": [
                "FUN_08001cd0",
                "FUN_08001c18",
                "FUN_08000500",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_080032a2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f1e": {
            "entrypoint": "0x08002f1e",
            "current_name": "execute_function_08002f1e",
            "code": "\nvoid executeFunction_08002f1e(int functionPointer)\n\n{\n  (**(code **)**(undefined4 **)(functionPointer + 0xc0))();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f1e": "execute_function_08002f1e",
                "param_1": "functionPointer"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f2c": {
            "entrypoint": "0x08002f2c",
            "current_name": "update_data_08002f2c",
            "code": "\nvoid update_data_08002f2c(undefined4 status,uint code,undefined4 value)\n\n{\n  undefined4 temp_value;\n  \n  if (code == 0xd0) {\n    DAT_200005f0 = value;\n    return;\n  }\n  if (0xd0 < code) {\n    if (code == 0xf4) {\n      DAT_200005e0 = value;\n      return;\n    }\n    temp_value = value;\n    if ((code != 0xf5) && (temp_value = DAT_200005e4, code == 0xe0)) {\n      DAT_200005d4 = value;\n      return;\n    }\n    DAT_200005e4 = temp_value;\n    return;\n  }\n  if (code == 0x90) {\n    DAT_200005dc = value;\n    return;\n  }\n  if (code != 0xc0) {\n    return;\n  }\n  DAT_200005ec = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f2c": "update_data_08002f2c",
                "param_1": "status",
                "param_2": "code",
                "param_3": "value",
                "uVar1": "temp_value"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f84": {
            "entrypoint": "0x08002f84",
            "current_name": "update_data_08002f84",
            "code": "\nvoid updateData_08002f84(undefined4 param_1,int dataValue,undefined4 newValue)\n\n{\n  if (dataValue == 0xff) {\n    DAT_200005e8 = newValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f84": "update_data_08002f84",
                "param_2": "dataValue",
                "param_3": "newValue"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f94": {
            "entrypoint": "0x08002f94",
            "current_name": "store_parameter_to_global_08002f94",
            "code": "\nvoid storeParameterToGlobal_08002f94(undefined4 value1,undefined4 value2,undefined4 value3)\n\n{\n  DAT_200005d0 = value3;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f94": "store_parameter_to_global_08002f94",
                "param_1": "value1",
                "param_2": "value2",
                "param_3": "value3"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fa0": {
            "entrypoint": "0x08002fa0",
            "current_name": "get_value_from_offset_08002fa0",
            "code": "\nundefined get_value_from_offset_08002fa0(int offset,int base_address)\n\n{\n  return *(undefined *)(base_address + offset + 0xcc);\n}\n\n",
            "renaming": {
                "FUN_08002fa0": "get_value_from_offset_08002fa0",
                "param_1": "offset",
                "param_2": "base_address"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_08001cd0",
                "FUN_080022f8",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fa8": {
            "entrypoint": "0x08002fa8",
            "current_name": "update_byte_if_not127_08002fa8",
            "code": "\nvoid updateByteIfNot127_08002fa8(int baseAddress,int offset,undefined value)\n\n{\n  if (*(char *)(baseAddress + offset + 0xcc) != '\\x7f') {\n    *(undefined *)(baseAddress + offset + 0xcc) = value;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002fa8": "update_byte_if_not127_08002fa8",
                "param_1": "baseAddress",
                "param_2": "offset",
                "param_3": "value"
            },
            "calling": [
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fba": {
            "entrypoint": "0x08002fba",
            "current_name": "get_offset_value_08002fba",
            "code": "\nundefined4 getOffsetValue_08002fba(int baseAddress,int offset)\n\n{\n  return *(undefined4 *)(baseAddress + (offset + 0x42) * 4);\n}\n\n",
            "renaming": {
                "FUN_08002fba": "get_offset_value_08002fba",
                "param_1": "baseAddress",
                "param_2": "offset"
            },
            "calling": [
                "FUN_08001cd0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fc2": {
            "entrypoint": "0x08002fc2",
            "current_name": "set_value_at_index_08002fc2",
            "code": "\nvoid set_value_at_index_08002fc2(int array,int index,undefined4 value)\n\n{\n  *(undefined4 *)(array + (index + 0x42) * 4) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002fc2": "set_value_at_index_08002fc2",
                "param_1": "array",
                "param_2": "index",
                "param_3": "value"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fca": {
            "entrypoint": "0x08002fca",
            "current_name": "process_loop_08002fca",
            "code": "\nvoid processLoop_08002fca(undefined4 ptr1,undefined4 ptr2,int loopCount,undefined4 ptr3,\n                 undefined4 ptr4)\n\n{\n  uint counter;\n  \n  for (counter = 0; (int)counter < loopCount; counter = counter + 1 & 0xff) {\n    FUNC_08008ac4(ptr4);\n    FUN_08008a24(ptr2,1);\n    FUNC_08008ac4(ptr3);\n    FUN_08008a24(ptr2,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002fca": "process_loop_08002fca",
                "param_1": "ptr1",
                "param_2": "ptr2",
                "param_3": "loopCount",
                "param_4": "ptr3",
                "param_5": "ptr4",
                "uVar1": "counter"
            },
            "calling": [
                "FUN_08003002"
            ],
            "called": [
                "FUN_08008ac4",
                "FUN_08008a24"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003002": {
            "entrypoint": "0x08003002",
            "current_name": "check_and_execute_actions_08003002",
            "code": "\nvoid checkAndExecuteActions_08003002(int inputValue)\n\n{\n  if (*(char *)(inputValue + 0x1f8) != '\\0') {\n    return;\n  }\n  FUN_08008990(0xd,1);\n  FUN_08002fca(inputValue,0xd,2,0x28,0xd2);\n  FUNC_08008ac4(0xfa);\n  FUN_08002fca(inputValue,0xd,5,0x28,0xd2);\n  FUNC_08008ac4(0x7d);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003002": "check_and_execute_actions_08003002",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08003048"
            ],
            "called": [
                "FUN_08008990",
                "FUN_08008ac4",
                "FUN_08002fca"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003048": {
            "entrypoint": "0x08003048",
            "current_name": "initialize_data_08003048",
            "code": "\nvoid initializeData_08003048(undefined4 dataBuffer,undefined4 value,undefined4 size,undefined4 offset)\n\n{\n  FUN_08008c44(&DAT_20000700,value,6,offset,offset);\n  FUN_08003002(dataBuffer);\n  FUN_08002e26(dataBuffer,&DAT_20000700);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003048": "initialize_data_08003048",
                "param_1": "dataBuffer",
                "param_2": "value",
                "param_3": "size",
                "param_4": "offset"
            },
            "calling": [
                "FUN_08001b48"
            ],
            "called": [
                "FUN_08003002",
                "FUN_08002e26",
                "FUN_08008c44"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800307a": {
            "entrypoint": "0x0800307a",
            "current_name": "extract_and_decode_0800307a",
            "code": "\nvoid extractAndDecode_0800307a(undefined4 *inputPointer,uint inputLength,byte *inputData,uint outputLength)\n\n{\n  uint currentByte;\n  uint bitPosition;\n  uint outputPosition;\n  uint inputPosition;\n  \n  currentByte = (uint)*inputData;\n  if (outputLength == 0) {\n    outputLength = 0xffffffff;\n  }\n  inputPosition = 0;\n  bitPosition = 0;\n  outputPosition = 0;\n  while ((inputPosition < inputLength && (outputPosition < outputLength))) {\n    (***(code ***)(undefined4 *)*inputPointer)\n              ((undefined4 *)*inputPointer,((uint)inputData[inputPosition] << (bitPosition & 0xff) | currentByte) & 0x7f);\n    currentByte = (int)(uint)inputData[inputPosition] >> (7 - bitPosition & 0xff) & 0xff;\n    bitPosition = bitPosition + 1;\n    while ((outputPosition = outputPosition + 1, 6 < bitPosition && (outputPosition < outputLength))) {\n      (***(code ***)(undefined4 *)*inputPointer)((undefined4 *)*inputPointer,currentByte & 0x7f);\n      currentByte = currentByte >> 7;\n      bitPosition = bitPosition - 7;\n    }\n    inputPosition = inputPosition + 1;\n  }\n  if ((bitPosition != 0) && (outputPosition < outputLength)) {\n    (***(code ***)(undefined4 *)*inputPointer)((undefined4 *)*inputPointer,(1 << (bitPosition & 0xff)) - 1U & currentByte)\n    ;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800307a": "extract_and_decode_0800307a",
                "param_1": "inputPointer",
                "param_2": "inputLength",
                "param_3": "inputData",
                "param_4": "outputLength",
                "uVar1": "currentByte",
                "uVar2": "bitPosition",
                "uVar3": "outputPosition",
                "uVar4": "inputPosition"
            },
            "calling": [
                "FUN_08003158",
                "FUN_080031ce",
                "FUN_08003106",
                "FUN_0800319e",
                "FUN_0800325a"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003106": {
            "entrypoint": "0x08003106",
            "current_name": "execute_function_08003106",
            "code": "\nvoid execute_function_08003106(undefined4 *function_ptr,undefined4 constant1,undefined4 constant2,undefined4 constant3)\n\n{\n  undefined4 *function;\n  \n  function = (undefined4 *)*function_ptr;\n  if (function != (undefined4 *)0x0) {\n    (**(code **)*function)(function,0xf0);\n    (***(code ***)(undefined4 *)*function_ptr)((undefined4 *)*function_ptr,0x6f);\n    (***(code ***)(undefined4 *)*function_ptr)((undefined4 *)*function_ptr,constant1);\n    FUN_0800307a(function_ptr,constant2,constant3,constant2);\n    (***(code ***)(undefined4 *)*function_ptr)((undefined4 *)*function_ptr,0xf7);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003106": "execute_function_08003106",
                "param_1": "function_ptr",
                "param_2": "constant1",
                "param_3": "constant2",
                "param_4": "constant3",
                "puVar1": "function"
            },
            "calling": [
                "FUN_08003158"
            ],
            "called": [
                "FUN_0800307a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800314e": {
            "entrypoint": "0x0800314e",
            "current_name": "initialize_value_to_zero_0800314e",
            "code": "\nvoid initializeValueToZero_0800314e(undefined4 *outputPointer)\n\n{\n  *outputPointer = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800314e": "initialize_value_to_zero_0800314e",
                "param_1": "outputPointer"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003154": {
            "entrypoint": "0x08003154",
            "current_name": "copy_value_to_pointer_08003154",
            "code": "\nvoid copyValueToPointer_08003154(undefined4 *destinationPointer,undefined4 valueToCopy)\n\n{\n  *destinationPointer = valueToCopy;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003154": "copy_value_to_pointer_08003154",
                "param_1": "destinationPointer",
                "param_2": "valueToCopy"
            },
            "calling": [
                "FUN_08002e26"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003158": {
            "entrypoint": "0x08003158",
            "current_name": "execute_command_08003158",
            "code": "\nvoid executeCommand_08003158(undefined4 *command,uint option,ushort flag)\n\n{\n  undefined4 *commandPointer;\n  ushort commandFlag;\n  \n  commandPointer = (undefined4 *)*command;\n  if (commandPointer != (undefined4 *)0x0) {\n    commandFlag = flag;\n    if (((int)option < 0x10) && (flag < 0x4000)) {\n      (**(code **)*commandPointer)(commandPointer,option | 0xe0);\n      FUN_0800307a(command,2,&commandFlag);\n    }\n    else {\n      FUN_08003106(command,option,2,&commandFlag);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003158": "execute_command_08003158",
                "param_1": "command",
                "param_2": "option",
                "param_3": "flag",
                "puVar1": "commandPointer",
                "local_a": "commandFlag"
            },
            "calling": [
                "FUN_08002ef2"
            ],
            "called": [
                "FUN_0800307a",
                "FUN_08003106"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800319e": {
            "entrypoint": "0x0800319e",
            "current_name": "execute_callback_0800319e",
            "code": "\nvoid executeCallback_0800319e(undefined4 *functionPointer,uint bitmask,undefined2 argument)\n\n{\n  undefined4 *callback;\n  undefined2 argumentCopy;\n  \n  callback = (undefined4 *)*functionPointer;\n  if (callback != (undefined4 *)0x0) {\n    argumentCopy = argument;\n    (**(code **)*callback)(callback,bitmask & 0xf | 0x90);\n    FUN_0800307a(functionPointer,2,&argumentCopy);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800319e": "execute_callback_0800319e",
                "param_1": "functionPointer",
                "param_2": "bitmask",
                "param_3": "argument",
                "puVar1": "callback",
                "local_a": "argumentCopy"
            },
            "calling": [
                "FUN_08002efe"
            ],
            "called": [
                "FUN_0800307a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080031ce": {
            "entrypoint": "0x080031ce",
            "current_name": "execute_function_080031ce",
            "code": "\nvoid executeFunction_080031ce(undefined4 *functionPointer,undefined4 paramA,undefined4 paramB,uint paramC,int paramD\n                 )\n\n{\n  undefined4 *ptrToFunction;\n  uint counter;\n  \n  ptrToFunction = (undefined4 *)*functionPointer;\n  if (ptrToFunction != (undefined4 *)0x0) {\n    (**(code **)*ptrToFunction)(ptrToFunction,0xf0,paramB,*(code **)*ptrToFunction,paramC);\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,0x79);\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,paramA);\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,paramB);\n    for (counter = 0; counter < paramC; counter = counter + 1) {\n      FUN_0800307a(functionPointer,1,paramD + counter,0);\n    }\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,0xf7);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080031ce": "execute_function_080031ce",
                "param_1": "functionPointer",
                "param_2": "paramA",
                "param_3": "paramB",
                "param_4": "paramC",
                "param_5": "paramD",
                "puVar1": "ptrToFunction",
                "uVar2": "counter"
            },
            "calling": [
                "FUN_08002df6"
            ],
            "called": [
                "FUN_0800307a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800322c": {
            "entrypoint": "0x0800322c",
            "current_name": "execute_three_actions_0800322c",
            "code": "\nvoid executeThreeActions_0800322c(undefined4 *ptrToFunctionArray,undefined4 param2,undefined4 param3)\n\n{\n  undefined4 *ptrToFunction;\n  \n  ptrToFunction = (undefined4 *)*ptrToFunctionArray;\n  if (ptrToFunction != (undefined4 *)0x0) {\n    (**(code **)*ptrToFunction)(ptrToFunction,0xf9);\n    (***(code ***)(undefined4 *)*ptrToFunctionArray)((undefined4 *)*ptrToFunctionArray,param2);\n    (***(code ***)(undefined4 *)*ptrToFunctionArray)((undefined4 *)*ptrToFunctionArray,param3);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800322c": "execute_three_actions_0800322c",
                "param_1": "ptrToFunctionArray",
                "param_2": "param2",
                "param_3": "param3",
                "puVar1": "ptrToFunction"
            },
            "calling": [
                "FUN_08002ddc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800325a": {
            "entrypoint": "0x0800325a",
            "current_name": "execute_operations_0800325a",
            "code": "\nvoid executeOperations_0800325a(undefined4 *functionPointer,undefined4 param2,uint operationCount,int param4)\n\n{\n  undefined4 *ptrFunction;\n  uint index;\n  \n  ptrFunction = (undefined4 *)*functionPointer;\n  if (ptrFunction != (undefined4 *)0x0) {\n    (**(code **)*ptrFunction)(ptrFunction,0xf0);\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,param2);\n    for (index = 0; index < operationCount; index = index + 1) {\n      FUN_0800307a(functionPointer,1,param4 + index,0);\n    }\n    (***(code ***)(undefined4 *)*functionPointer)((undefined4 *)*functionPointer,0xf7);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800325a": "execute_operations_0800325a",
                "param_1": "functionPointer",
                "param_2": "param2",
                "param_3": "operationCount",
                "param_4": "param4",
                "puVar1": "ptrFunction",
                "uVar2": "index"
            },
            "calling": [
                "FUN_08002f0a",
                "FUN_080032a2"
            ],
            "called": [
                "FUN_0800307a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080032a2": {
            "entrypoint": "0x080032a2",
            "current_name": "send_data_080032a2",
            "code": "\nvoid sendData_080032a2(undefined4 dest,undefined4 source,undefined4 value1,undefined4 value2)\n\n{\n  undefined4 result;\n  \n  result = FUN_08000178(source);\n  FUN_0800325a(dest,0x71,result,source,value2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080032a2": "send_data_080032a2",
                "param_1": "dest",
                "param_2": "source",
                "param_3": "value1",
                "param_4": "value2",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08002f14"
            ],
            "called": [
                "FUN_08000178",
                "FUN_0800325a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080032bc": {
            "entrypoint": "0x080032bc",
            "current_name": "initialize_data_080032bc",
            "code": "\nvoid initializeData_080032bc(int dataAddress,int paramValue,undefined4 param3Value)\n\n{\n  *(int *)(dataAddress + 4) = paramValue;\n  *(undefined4 *)(dataAddress + 8) = param3Value;\n  *(undefined *)(dataAddress + 0xc) = 0;\n  *(undefined *)(dataAddress + 0xd) = 0;\n  *(undefined4 *)(dataAddress + 0x10) = 0;\n  *(undefined *)(dataAddress + 0x14) = 0;\n  *(undefined4 *)(dataAddress + 0x18) = 0;\n  *(undefined4 *)(dataAddress + 0x1c) = 0;\n  *(undefined4 *)(dataAddress + 0x20) = 0;\n  *(undefined4 *)(dataAddress + 0x24) = 0;\n  *(undefined4 *)(dataAddress + 0x28) = 0;\n  *(undefined4 *)(dataAddress + 0x2c) = 0;\n  *(undefined4 *)(dataAddress + 0x30) = 0;\n  *(undefined4 *)(dataAddress + 0x34) = 0;\n  *(undefined4 *)(dataAddress + 0x38) = 0;\n  *(undefined4 *)(dataAddress + 0x3c) = 0;\n  *(undefined4 *)(dataAddress + 0x40) = 0;\n  *(undefined4 *)(dataAddress + 0x44) = 0;\n  *(undefined4 *)(dataAddress + 0x48) = 0;\n  *(undefined4 *)(dataAddress + 0x4c) = 0;\n  *(undefined4 *)(dataAddress + 0x50) = 0;\n  *(undefined4 *)(dataAddress + 0x54) = 0;\n  *(undefined4 *)(dataAddress + 0x58) = 0;\n  *(undefined4 *)(dataAddress + 0x5c) = 0;\n  *(undefined4 *)(dataAddress + 0x60) = 0;\n  *(undefined4 *)(dataAddress + 100) = 0;\n  *(undefined4 *)(dataAddress + 0x68) = 0;\n  *(undefined4 *)(dataAddress + 0x6c) = 0;\n  *(undefined4 *)(dataAddress + 0x70) = 0;\n  *(undefined4 *)(dataAddress + 0x74) = 0;\n  *(undefined4 *)(dataAddress + 0x78) = 0;\n  *(bool *)dataAddress = paramValue == 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080032bc": "initialize_data_080032bc",
                "param_1": "dataAddress",
                "param_2": "paramValue",
                "param_3": "param3Value"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003306": {
            "entrypoint": "0x08003306",
            "current_name": "set_configuration_08003306",
            "code": "\nvoid setConfiguration_08003306(int baseAddress,uint configValue,undefined4 value1,undefined4 value2)\n\n{\n  if (configValue == 0xd0) {\n    *(undefined4 *)(baseAddress + 0x58) = value1;\n    *(undefined4 *)(baseAddress + 0x28) = value2;\n    return;\n  }\n  if (0xd0 < configValue) {\n    if (configValue == 0xf4) {\n      *(undefined4 *)(baseAddress + 0x5c) = value1;\n      *(undefined4 *)(baseAddress + 0x2c) = value2;\n      return;\n    }\n    if (configValue == 0xf5) {\n      *(undefined4 *)(baseAddress + 0x60) = value1;\n      *(undefined4 *)(baseAddress + 0x30) = value2;\n    }\n    else if (configValue == 0xe0) {\n      *(undefined4 *)(baseAddress + 0x4c) = value1;\n      *(undefined4 *)(baseAddress + 0x1c) = value2;\n      return;\n    }\n    return;\n  }\n  if (configValue == 0x90) {\n    *(undefined4 *)(baseAddress + 0x50) = value1;\n    *(undefined4 *)(baseAddress + 0x20) = value2;\n    return;\n  }\n  if (configValue == 0xc0) {\n    *(undefined4 *)(baseAddress + 0x54) = value1;\n    *(undefined4 *)(baseAddress + 0x24) = value2;\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003306": "set_configuration_08003306",
                "param_1": "baseAddress",
                "param_2": "configValue",
                "param_3": "value1",
                "param_4": "value2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003346": {
            "entrypoint": "0x08003346",
            "current_name": "update_data_if_valid_08003346",
            "code": "\nvoid updateDataIfValid_08003346(int data_ptr,int input_value,undefined4 data_value_1,undefined4 data_value_2)\n\n{\n  if (input_value == 0x79) {\n    *(undefined4 *)(data_ptr + 0x70) = data_value_1;\n    *(undefined4 *)(data_ptr + 0x34) = data_value_2;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003346": "update_data_if_valid_08003346",
                "param_1": "data_ptr",
                "param_2": "input_value",
                "param_3": "data_value_1",
                "param_4": "data_value_2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003350": {
            "entrypoint": "0x08003350",
            "current_name": "update_parameters_08003350",
            "code": "\nvoid updateParameters_08003350(int ptr,int data,undefined4 value1,undefined4 value2)\n\n{\n  if (data == 0xf9) {\n    *(undefined4 *)(ptr + 0x74) = value1;\n    *(undefined4 *)(ptr + 0x38) = value2;\n    return;\n  }\n  if (data != 0xff) {\n    return;\n  }\n  *(undefined4 *)(ptr + 0x78) = value1;\n  *(undefined4 *)(ptr + 0x48) = value2;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003350": "update_parameters_08003350",
                "param_1": "ptr",
                "param_2": "data",
                "param_3": "value1",
                "param_4": "value2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003366": {
            "entrypoint": "0x08003366",
            "current_name": "update_parameters_08003366",
            "code": "\nvoid updateParameters_08003366(int data,int value,undefined4 newValue1,undefined4 newValue2)\n\n{\n  if (value == 0x71) {\n    *(undefined4 *)(data + 0x68) = newValue1;\n    *(undefined4 *)(data + 0x40) = newValue2;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003366": "update_parameters_08003366",
                "param_1": "data",
                "param_2": "value",
                "param_3": "newValue1",
                "param_4": "newValue2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003370": {
            "entrypoint": "0x08003370",
            "current_name": "set_parameters_08003370",
            "code": "\nvoid setParameters_08003370(int object,undefined4 param1,undefined4 value1,undefined4 value2)\n\n{\n  *(undefined4 *)(object + 0x6c) = value1;\n  *(undefined4 *)(object + 0x44) = value2;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003370": "set_parameters_08003370",
                "param_1": "object",
                "param_2": "param1",
                "param_3": "value1",
                "param_4": "value2"
            },
            "calling": [
                "FUN_08002ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003376": {
            "entrypoint": "0x08003376",
            "current_name": "update_data_08003376",
            "code": "\nvoid updateData_08003376(undefined *data,undefined value,uint index)\n\n{\n  bool isOutOfBounds;\n  \n  if (index < *(uint *)(data + 8)) {\n    isOutOfBounds = false;\n  }\n  else {\n    isOutOfBounds = true;\n    if (*(code **)(data + 100) != (code *)0x0) {\n      *data = 1;\n      (**(code **)(data + 100))(*(undefined4 *)(data + 0x3c));\n      if (index < *(uint *)(data + 8)) {\n        isOutOfBounds = false;\n      }\n      else {\n        isOutOfBounds = true;\n      }\n    }\n  }\n  if (!isOutOfBounds) {\n    *(undefined *)(*(int *)(data + 4) + index) = value;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003376": "update_data_08003376",
                "param_1": "data",
                "param_2": "value",
                "param_3": "index",
                "bVar1": "isOutOfBounds"
            },
            "calling": [
                "FUN_08003474",
                "FUN_080033cc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080033a8": {
            "entrypoint": "0x080033a8",
            "current_name": "copy_and_shift_bytes_080033a8",
            "code": "\nvoid copyAndShiftBytes_080033a8(undefined4 arg1,uint arg2,int arg3)\n\n{\n  byte byteValue;\n  int index;\n  uint loopCounter;\n  \n  index = 0;\n  for (loopCounter = 0; loopCounter < arg2; loopCounter = loopCounter + 2) {\n    byteValue = *(byte *)(arg3 + loopCounter);\n    *(byte *)(arg3 + index) = byteValue;\n    *(byte *)(arg3 + index) = *(char *)(arg3 + loopCounter + 1) << 7 | byteValue;\n    index = index + 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080033a8": "copy_and_shift_bytes_080033a8",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "bVar1": "byteValue",
                "iVar2": "index",
                "uVar3": "loopCounter"
            },
            "calling": [
                "FUN_080033cc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080033cc": {
            "entrypoint": "0x080033cc",
            "current_name": "process_input_080033cc",
            "code": "\nvoid processInput_080033cc(int inputData,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  char firstChar;\n  int tempVar;\n  char *charPtr;\n  \n  charPtr = *(char **)(inputData + 4);\n  firstChar = *charPtr;\n  if (firstChar == 'q') {\n    if (*(int *)(inputData + 0x68) != 0) {\n      tempVar = FUN_080033a8(inputData,*(int *)(inputData + 0x18) + -1,charPtr + 1,charPtr,param4);\n      FUN_08003376(inputData,0,tempVar + 1);\n      (**(code **)(inputData + 0x68))(*(undefined4 *)(inputData + 0x40),*(int *)(inputData + 4) + 1);\n      return;\n    }\n  }\n  else if (firstChar == 'y') {\n    if (*(code **)(inputData + 0x70) != (code *)0x0) {\n      if (*(uint *)(inputData + 0x18) < 3) {\n        (**(code **)(inputData + 0x70))(*(undefined4 *)(inputData + 0x34),0,0);\n        return;\n      }\n      tempVar = FUN_080033a8(inputData,*(uint *)(inputData + 0x18) - 3,charPtr + 3,charPtr,param4);\n      FUN_08003376(inputData,0,tempVar + 3);\n      tempVar = *(int *)(inputData + 4);\n      (**(code **)(inputData + 0x70))\n                (*(undefined4 *)(inputData + 0x34),*(undefined *)(tempVar + 1),*(undefined *)(tempVar + 2)\n                 ,tempVar + 3);\n      return;\n    }\n  }\n  else if (*(code **)(inputData + 0x6c) != (code *)0x0) {\n    (**(code **)(inputData + 0x6c))\n              (*(undefined4 *)(inputData + 0x44),firstChar,*(int *)(inputData + 0x18) + -1,charPtr + 1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080033cc": "process_input_080033cc",
                "param_1": "inputData",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "cVar1": "firstChar",
                "iVar2": "tempVar",
                "pcVar3": "charPtr"
            },
            "calling": [
                "FUN_08003474"
            ],
            "called": [
                "FUN_08003376",
                "FUN_080033a8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800344a": {
            "entrypoint": "0x0800344a",
            "current_name": "clear_memory_0800344a",
            "code": "\nvoid clearMemory_0800344a(int memoryAddress)\n\n{\n  uint counter;\n  \n  *(undefined4 *)(memoryAddress + 0x10) = 0;\n  *(undefined *)(memoryAddress + 0xc) = 0;\n  *(undefined *)(memoryAddress + 0xd) = 0;\n  for (counter = 0; counter < *(uint *)(memoryAddress + 8); counter = counter + 1) {\n    *(undefined *)(*(int *)(memoryAddress + 4) + counter) = 0;\n  }\n  *(undefined *)(memoryAddress + 0x14) = 0;\n  *(undefined4 *)(memoryAddress + 0x18) = 0;\n  if (*(code **)(memoryAddress + 0x78) != (code *)0x0) {\n    (**(code **)(memoryAddress + 0x78))(*(undefined4 *)(memoryAddress + 0x48));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800344a": "clear_memory_0800344a",
                "param_1": "memoryAddress",
                "uVar1": "counter"
            },
            "calling": [
                "FUN_08003474"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003474": {
            "entrypoint": "0x08003474",
            "current_name": "process_input_08003474",
            "code": "\nvoid processInput_08003474(int inputAddress,uint inputValue)\n\n{\n  byte tempByte;\n  \n  if (*(char *)(inputAddress + 0x14) != '\\0') {\n    if (inputValue != 0xf7) {\n      FUN_08003376(inputAddress,inputValue,*(undefined4 *)(inputAddress + 0x18));\n      *(int *)(inputAddress + 0x18) = *(int *)(inputAddress + 0x18) + 1;\n      return;\n    }\n    *(undefined *)(inputAddress + 0x14) = 0;\n    FUN_080033cc();\n    return;\n  }\n  if ((*(int *)(inputAddress + 0x10) == 0) || (0x7f < (int)inputValue)) {\n    if ((int)inputValue < 0xf0) {\n      *(byte *)(inputAddress + 0xd) = (byte)inputValue & 0xf;\n      inputValue = inputValue & 0xf0;\n    }\n    if (inputValue == 0xf0) {\n      *(undefined *)(inputAddress + 0x14) = 1;\n      *(undefined4 *)(inputAddress + 0x18) = 0;\n      return;\n    }\n    if (inputValue < 0xf1) {\n      if (inputValue != 0xc0) {\n        if (inputValue < 0xc1) {\n          if (inputValue != 0x90) {\n            return;\n          }\n        }\n        else {\n          if (inputValue == 0xd0) goto LAB_0800359c;\n          if (inputValue != 0xe0) {\n            return;\n          }\n        }\nLAB_08003586:\n        *(undefined4 *)(inputAddress + 0x10) = 2;\n        *(char *)(inputAddress + 0xc) = (char)inputValue;\n        return;\n      }\nLAB_0800359c:\n      *(undefined4 *)(inputAddress + 0x10) = 1;\n      *(char *)(inputAddress + 0xc) = (char)inputValue;\n      return;\n    }\n    if (inputValue != 0xf9) {\n      if (0xf9 < inputValue) {\n        if (inputValue == 0xff) {\n          FUN_0800344a(inputAddress);\n          return;\n        }\n        return;\n      }\n      if (1 < inputValue - 0xf4) {\n        return;\n      }\n      goto LAB_08003586;\n    }\n    if (*(code **)(inputAddress + 0x74) != (code *)0x0) {\n      (**(code **)(inputAddress + 0x74))(*(undefined4 *)(inputAddress + 0x38));\n    }\n  }\n  else {\n    *(int *)(inputAddress + 0x10) = *(int *)(inputAddress + 0x10) + -1;\n    FUN_08003376();\n    if ((*(int *)(inputAddress + 0x10) == 0) && (tempByte = *(byte *)(inputAddress + 0xc), tempByte != 0)) {\n      if (tempByte == 0xd0) {\n        if (*(code **)(inputAddress + 0x58) != (code *)0x0) {\n          (**(code **)(inputAddress + 0x58))\n                    (*(undefined4 *)(inputAddress + 0x28),*(undefined *)(inputAddress + 0xd),\n                     **(undefined **)(inputAddress + 4));\n        }\n      }\n      else if (tempByte < 0xd1) {\n        if (tempByte == 0x90) {\n          if (*(code **)(inputAddress + 0x50) != (code *)0x0) {\n            (**(code **)(inputAddress + 0x50))\n                      (*(undefined4 *)(inputAddress + 0x20),*(undefined *)(inputAddress + 0xd),\n                       (uint)(*(byte **)(inputAddress + 4))[1] + (uint)**(byte **)(inputAddress + 4) * 0x80);\n          }\n        }\n        else if ((tempByte == 0xc0) && (*(code **)(inputAddress + 0x54) != (code *)0x0)) {\n          (**(code **)(inputAddress + 0x54))\n                    (*(undefined4 *)(inputAddress + 0x24),*(undefined *)(inputAddress + 0xd),\n                     **(undefined **)(inputAddress + 4));\n        }\n      }\n      else if (tempByte == 0xf4) {\n        if (*(code **)(inputAddress + 0x5c) != (code *)0x0) {\n          (**(code **)(inputAddress + 0x5c))\n                    (*(undefined4 *)(inputAddress + 0x2c),(*(undefined **)(inputAddress + 4))[1],\n                     **(undefined **)(inputAddress + 4));\n        }\n      }\n      else if (tempByte == 0xf5) {\n        if (*(code **)(inputAddress + 0x60) != (code *)0x0) {\n          (**(code **)(inputAddress + 0x60))\n                    (*(undefined4 *)(inputAddress + 0x30),(*(undefined **)(inputAddress + 4))[1],\n                     **(undefined **)(inputAddress + 4));\n        }\n      }\n      else if ((tempByte == 0xe0) && (*(code **)(inputAddress + 0x4c) != (code *)0x0)) {\n        (**(code **)(inputAddress + 0x4c))\n                  (*(undefined4 *)(inputAddress + 0x1c),*(undefined *)(inputAddress + 0xd),\n                   (uint)(*(byte **)(inputAddress + 4))[1] + (uint)**(byte **)(inputAddress + 4) * 0x80);\n      }\n      *(undefined *)(inputAddress + 0xc) = 0;\n      return;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003474": "process_input_08003474",
                "param_1": "inputAddress",
                "param_2": "inputValue",
                "bVar1": "tempByte"
            },
            "calling": [
                "FUN_08002ed2"
            ],
            "called": [
                "FUN_08003376",
                "FUN_080033cc",
                "FUN_0800344a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080035b8": {
            "entrypoint": "0x080035b8",
            "current_name": "initialize_device_info_080035b8",
            "code": "\nvoid initializeDeviceInfo_080035b8(void)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined4 deviceInfoArray [2];\n  undefined4 tempValue;\n  undefined4 flag;\n  undefined4 count;\n  undefined4 value;\n  undefined4 size;\n  undefined4 offset;\n  undefined4 array [4];\n  undefined4 level;\n  undefined4 base;\n  undefined4 multiplier;\n  undefined4 index;\n  undefined4 constant;\n  \n  array[0] = 2;\n  level = 1;\n  base = 0x10;\n  multiplier = 2;\n  index = 0;\n  constant = 0x380000;\n  iVar1 = FUN_08005460(array);\n  if (iVar1 != 0) {\n    FUN_080073e8(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x88);\n  }\n  flag = 0xf;\n  count = 2;\n  value = 0;\n  size = 0x400;\n  offset = 0;\n  iVar1 = FUN_080058ac(&flag);\n  if (iVar1 != 0) {\n    FUN_080073e8(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x95);\n  }\n  deviceInfoArray[0] = 2;\n  tempValue = 0x8000;\n  iVar1 = FUN_08005aa4(deviceInfoArray);\n  if (iVar1 != 0) {\n    FUN_080073e8(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/variants/NUCLEO_F103RB/variant.cpp\"\n                 ,0x9c);\n  }\n  uVar2 = FUN_08005a1c();\n  FUN_08003fd8(uVar2 / 1000);\n  FUN_08004024(4);\n  FUN_08003f30(0xffffffff,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080035b8": "initialize_device_info_080035b8",
                "local_54": "deviceInfoArray",
                "local_4c": "tempValue",
                "local_44": "flag",
                "local_40": "count",
                "local_3c": "value",
                "local_38": "size",
                "local_34": "offset",
                "local_30": "array",
                "local_20": "level",
                "local_1c": "base",
                "local_14": "multiplier",
                "local_10": "index",
                "local_c": "constant"
            },
            "calling": [
                "FUN_080072fa"
            ],
            "called": [
                "FUN_08005a1c",
                "FUN_08005aa4",
                "FUN_08004024",
                "FUN_08003fd8",
                "FUN_08003f30",
                "FUN_08005460",
                "FUN_080073e8",
                "FUN_080058ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "entry": {
            "entrypoint": "0x08003658",
            "current_name": "entry",
            "code": "\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined4 *)(iVar1 + 0x20000000) < &DAT_200000f4; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x800ac18);\n  }\n  for (puVar2 = &DAT_200000f4; puVar2 < &DAT_20000a3c; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  FUN_080073ec();\n  FUN_08009148();\n  UNRECOVERED_JUMPTABLE = (code *)0x800368a;\n  FUN_08008f1c();\n                    /* WARNING: Could not recover jumptable at 0x0800368a. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "renaming": {},
            "calling": [],
            "called": [
                "FUN_080073ec",
                "FUN_08009148",
                "FUN_08008f1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036a2": {
            "entrypoint": "0x080036a2",
            "current_name": "execute_initialization_080036a2",
            "code": "\nvoid execute_initialization_080036a2(void)\n\n{\n  FUN_080072fa();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080036a2": "execute_initialization_080036a2"
            },
            "calling": [
                "FUN_08008f0e"
            ],
            "called": [
                "FUN_080072fa"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036ac": {
            "entrypoint": "0x080036ac",
            "current_name": "find_char_index_080036ac",
            "code": "\nuint findCharIndex_080036ac(int character)\n\n{\n  uint index;\n  \n  if ((uint)(character << 0x18) >> 0x1c < 5) {\n    for (index = 0; (index < 0x3c && (character != (char)(&DAT_0800a908)[index])); index = index + 1)\n    {\n    }\n  }\n  else {\n    index = 0xffffffff;\n  }\n  return index;\n}\n\n",
            "renaming": {
                "FUN_080036ac": "find_char_index_080036ac",
                "param_1": "character",
                "uVar1": "index"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_08001cd0",
                "FUN_08000aec",
                "FUN_080022f8",
                "FUN_08000a64",
                "FUN_08000ef8",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036d4": {
            "entrypoint": "0x080036d4",
            "current_name": "FUNC_080036d4",
            "code": "\nvoid FUNC_080036d4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080036d4": "FUNC_080036d4"
            },
            "calling": [
                "FUN_08003724"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080036d8": {
            "entrypoint": "0x080036d8",
            "current_name": "check_and_update_value_080036d8",
            "code": "\nundefined4 checkAndUpdateValue_080036d8(uint value)\n\n{\n  int result;\n  \n  result = FUN_08003fd8(DAT_20000018 / (1000 / DAT_2000000c));\n  if (result != 0) {\n    return 1;\n  }\n  if (0xf < value) {\n    return 1;\n  }\n  FUN_08003f30(0xffffffff,value,0);\n  DAT_20000010 = value;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080036d8": "check_and_update_value_080036d8",
                "param_1": "value",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08003724",
                "FUN_080058d2"
            ],
            "called": [
                "FUN_08003fd8",
                "FUN_08003f30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003724": {
            "entrypoint": "0x08003724",
            "current_name": "set_flag_and_call_functions_08003724",
            "code": "\n\n\nundefined4 set_flag_and_call_functions_08003724(void)\n\n{\n  _DAT_40022000 = _DAT_40022000 | 0x10;\n  FUN_08003f0c(3);\n  FUN_080036d8(0xf);\n  FUNC_080036d4();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003724": "set_flag_and_call_functions_08003724"
            },
            "calling": [
                "FUN_080072fa"
            ],
            "called": [
                "FUN_080036d4",
                "FUN_080036d8",
                "FUN_08003f0c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003748": {
            "entrypoint": "0x08003748",
            "current_name": "update_sum_08003748",
            "code": "\nvoid updateSum_08003748(void)\n\n{\n  DAT_20000a34 = (uint)DAT_2000000c + DAT_20000a34;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003748": "update_sum_08003748"
            },
            "calling": [
                "FUN_08007246"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003760": {
            "entrypoint": "0x08003760",
            "current_name": "get_data_value_08003760",
            "code": "\nundefined4 get_data_value_08003760(void)\n\n{\n  return DAT_20000a34;\n}\n\n",
            "renaming": {
                "FUN_08003760": "get_data_value_08003760"
            },
            "calling": [
                "FUN_080066e8",
                "FUN_080067ac",
                "FUN_0800376c",
                "FUN_08003b8c",
                "FUN_080058d2",
                "FUN_08007e74",
                "FUN_08008500",
                "FUN_08005aa4",
                "FUN_08007f0e",
                "FUN_0800723c",
                "FUN_08003a20",
                "FUN_08003e20",
                "FUN_08005460"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800376c": {
            "entrypoint": "0x0800376c",
            "current_name": "validate_input_0800376c",
            "code": "\nundefined4 validateInput_0800376c(uint **inputData,uint timeout)\n\n{\n  int startTime;\n  uint factor;\n  int var3;\n  undefined4 result;\n  uint *flags;\n  uint maxIterations;\n  uint currentIteration;\n  \n  currentIteration = 0;\n  startTime = FUN_08003760();\n  maxIterations = DAT_20000018;\n  flags = *inputData;\n  if ((flags[2] & 0x100) == 0) {\n    if (((flags[1] & 0x100) == 0) && ((flags[0xb] & 0xf00000) == 0)) {\n      do {\n        if ((**inputData & 2) != 0) goto LAB_0800387e;\n      } while ((timeout == 0xffffffff) ||\n              ((timeout != 0 && (var3 = FUN_08003760(), (uint)(var3 - startTime) <= timeout))));\n      inputData[10] = (uint *)((uint)inputData[10] | 4);\n      *(undefined *)(inputData + 9) = 0;\n      result = 3;\n    }\n    else {\n      factor = FUN_08005bb8(2);\n      flags = *inputData;\n      if (((flags[4] & 0x24924924) == 0) && ((flags[3] & 0x924924) == 0)) {\n        if ((flags[4] & 0x12492492) == 0) {\n          if ((flags[3] & 0x492492) == 0) {\n            var3 = 0x14;\n          }\n          else {\n            var3 = 0x29;\n          }\n        }\n        else {\n          var3 = 0x29;\n        }\n      }\n      else if (((flags[4] & 0x12492492) == 0) && ((flags[3] & 0x492492) == 0)) {\n        var3 = 0x54;\n      }\n      else if ((flags[4] & 0x249249) == 0) {\n        if ((flags[3] & 0x249249) == 0) {\n          var3 = 0x54;\n        }\n        else {\n          var3 = 0xfc;\n        }\n      }\n      else {\n        var3 = 0xfc;\n      }\n      maxIterations = (maxIterations / factor) * var3;\n      for (; currentIteration <= maxIterations && maxIterations - currentIteration != 0; currentIteration = currentIteration + 1) {\n        if ((timeout != 0xffffffff) &&\n           ((timeout == 0 || (var3 = FUN_08003760(), timeout < (uint)(var3 - startTime))))) {\n          inputData[10] = (uint *)((uint)inputData[10] | 4);\n          *(undefined *)(inputData + 9) = 0;\n          return 3;\n        }\n      }\nLAB_0800387e:\n      **inputData = 0xffffffed;\n      inputData[10] = (uint *)((uint)inputData[10] | 0x200);\n      if (((*inputData)[2] & 0xe0000) == 0xe0000) {\n        if (inputData[3] == (uint *)0x0) {\n          inputData[10] = (uint *)((uint)inputData[10] & 0xfffffeff);\n          if (((uint)inputData[10] & 0x1000) == 0) {\n            inputData[10] = (uint *)((uint)inputData[10] | 1);\n            result = 0;\n          }\n          else {\n            result = 0;\n          }\n        }\n        else {\n          result = 0;\n        }\n      }\n      else {\n        result = 0;\n      }\n    }\n  }\n  else {\n    inputData[10] = (uint *)((uint)inputData[10] | 0x20);\n    *(undefined *)(inputData + 9) = 0;\n    result = 1;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_0800376c": "validate_input_0800376c",
                "param_1": "inputData",
                "param_2": "timeout",
                "iVar1": "startTime",
                "uVar2": "factor",
                "iVar3": "var3",
                "uVar4": "result",
                "puVar5": "flags",
                "uVar6": "maxIterations",
                "local_1c": "currentIteration"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08005bb8",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080038dc": {
            "entrypoint": "0x080038dc",
            "current_name": "get_fourth_byte_080038dc",
            "code": "\nundefined4 getFourthByte_080038dc(int *dataPointer)\n\n{\n  return *(undefined4 *)(*dataPointer + 0x4c);\n}\n\n",
            "renaming": {
                "FUN_080038dc": "get_fourth_byte_080038dc",
                "param_1": "dataPointer"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080038e4": {
            "entrypoint": "0x080038e4",
            "current_name": "update_settings_080038e4",
            "code": "\nundefined4 updateSettings_080038e4(int *settingsPtr,uint *valuesPtr)\n\n{\n  undefined4 returnValue;\n  uint shiftValue;\n  int loopCounter;\n  \n  if (*(char *)(settingsPtr + 9) == '\\x01') {\n    returnValue = 2;\n  }\n  else {\n    *(undefined *)(settingsPtr + 9) = 1;\n    shiftValue = valuesPtr[1];\n    if (shiftValue < 7) {\n      shiftValue = shiftValue * 5 - 5;\n      *(uint *)(*settingsPtr + 0x34) =\n           *valuesPtr << (shiftValue & 0xff) | *(uint *)(*settingsPtr + 0x34) & ~(0x1f << (shiftValue & 0xff));\n    }\n    else if (shiftValue < 0xd) {\n      shiftValue = shiftValue * 5 - 0x23;\n      *(uint *)(*settingsPtr + 0x30) =\n           *valuesPtr << (shiftValue & 0xff) | *(uint *)(*settingsPtr + 0x30) & ~(0x1f << (shiftValue & 0xff));\n    }\n    else {\n      shiftValue = shiftValue * 5 - 0x41;\n      *(uint *)(*settingsPtr + 0x2c) =\n           *valuesPtr << (shiftValue & 0xff) | *(uint *)(*settingsPtr + 0x2c) & ~(0x1f << (shiftValue & 0xff));\n    }\n    shiftValue = *valuesPtr;\n    if (shiftValue < 10) {\n      *(uint *)(*settingsPtr + 0x10) =\n           valuesPtr[2] << (shiftValue * 3 & 0xff) |\n           *(uint *)(*settingsPtr + 0x10) & ~(7 << (shiftValue * 3 & 0xff));\n    }\n    else {\n      shiftValue = shiftValue * 3 - 0x1e;\n      *(uint *)(*settingsPtr + 0xc) =\n           valuesPtr[2] << (shiftValue & 0xff) | *(uint *)(*settingsPtr + 0xc) & ~(7 << (shiftValue & 0xff));\n    }\n    if (*valuesPtr - 0x10 < 2) {\n      if (*settingsPtr == 0x40012400) {\n        if ((uRam40012408 & 0x800000) == 0) {\n          uRam40012408 = uRam40012408 | 0x800000;\n          if (*valuesPtr == 0x10) {\n            for (loopCounter = (DAT_20000018 / 1000000) * 10; loopCounter != 0; loopCounter = loopCounter + -1) {\n            }\n            returnValue = 0;\n          }\n          else {\n            returnValue = 0;\n          }\n        }\n        else {\n          returnValue = 0;\n        }\n      }\n      else {\n        settingsPtr[10] = settingsPtr[10] | 0x20;\n        returnValue = 1;\n      }\n    }\n    else {\n      returnValue = 0;\n    }\n    *(undefined *)(settingsPtr + 9) = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_080038e4": "update_settings_080038e4",
                "param_1": "settingsPtr",
                "param_2": "valuesPtr",
                "uVar1": "returnValue",
                "uVar2": "shiftValue",
                "local_c": "loopCounter"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a1c": {
            "entrypoint": "0x08003a1c",
            "current_name": "get_pointer_value_08003a1c",
            "code": "\nundefined4 getPointerValue_08003a1c(int ptrAddress)\n\n{\n  return *(undefined4 *)(ptrAddress + 0x28);\n}\n\n",
            "renaming": {
                "FUN_08003a1c": "get_pointer_value_08003a1c",
                "param_1": "ptrAddress"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a20": {
            "entrypoint": "0x08003a20",
            "current_name": "check_and_update_status_08003a20",
            "code": "\nundefined4 checkAndUpdateStatus_08003a20(int *statusArray,undefined4 size)\n\n{\n  int tempVar1;\n  undefined4 result;\n  int statusPtr;\n  uint loopCounter;\n  \n  statusPtr = *statusArray;\n  if ((*(uint *)(statusPtr + 8) & 1) == 0) {\n    *(uint *)(statusPtr + 8) = *(uint *)(statusPtr + 8) | 1;\n    for (loopCounter = DAT_20000018 / 1000000; loopCounter != 0; loopCounter = loopCounter - 1) {\n    }\n    statusPtr = FUN_08003760(statusArray,size,DAT_20000018 * 0x431bde83);\n    do {\n      if ((*(uint *)(*statusArray + 8) & 1) != 0) {\n        return 0;\n      }\n      tempVar1 = FUN_08003760();\n    } while ((uint)(tempVar1 - statusPtr) < 3);\n    statusArray[10] = statusArray[10] | 0x10;\n    statusArray[0xb] = statusArray[0xb] | 1;\n    *(undefined *)(statusArray + 9) = 0;\n    result = 1;\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08003a20": "check_and_update_status_08003a20",
                "param_1": "statusArray",
                "param_2": "size",
                "iVar1": "tempVar1",
                "iVar3": "statusPtr",
                "uVar2": "result",
                "local_14": "loopCounter"
            },
            "calling": [
                "FUN_08003e20",
                "FUN_08003aa0"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003aa0": {
            "entrypoint": "0x08003aa0",
            "current_name": "update_parameters_08003aa0",
            "code": "\n\n\nint updateParameters_08003aa0(int *parameters)\n\n{\n  int result;\n  undefined4 *dataPtr;\n  int value;\n  \n  if (*(char *)(parameters + 9) != '\\x01') {\n    *(undefined *)(parameters + 9) = 1;\n    result = FUN_08003a20();\n    if (result == 0) {\n      parameters[10] = parameters[10] & 0xfffffcfeU | 0x100;\n      dataPtr = (undefined4 *)*parameters;\n      if ((dataPtr == (undefined4 *)0x40012800) && ((_DAT_40012404 & 0xf0000) != 0)) {\n        parameters[10] = parameters[10] | 0x100000;\n        if ((_DAT_40012404 & 0x400) != 0) {\n          parameters[10] = parameters[10] & 0xffffcfffU | 0x1000;\n        }\n      }\n      else {\n        parameters[10] = parameters[10] & 0xffefffff;\n        if ((dataPtr[1] & 0x400) != 0) {\n          parameters[10] = parameters[10] & 0xffffcfffU | 0x1000;\n        }\n      }\n      if ((parameters[10] & 0x1000U) == 0) {\n        parameters[0xb] = 0;\n      }\n      else {\n        parameters[0xb] = parameters[0xb] & 0xfffffff9;\n      }\n      *(undefined *)(parameters + 9) = 0;\n      *dataPtr = 0xfffffffd;\n      value = *parameters;\n      if (((*(uint *)(value + 8) & 0xe0000) == 0xe0000) &&\n         ((value != 0x40012800 || ((_DAT_40012404 & 0xf0000) == 0)))) {\n        *(uint *)(value + 8) = *(uint *)(value + 8) | 0x500000;\n      }\n      else {\n        *(uint *)(value + 8) = *(uint *)(value + 8) | 0x100000;\n      }\n    }\n    else {\n      *(undefined *)(parameters + 9) = 0;\n    }\n    return result;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08003aa0": "update_parameters_08003aa0",
                "param_1": "parameters",
                "iVar1": "result",
                "puVar2": "dataPtr",
                "iVar3": "value"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08003a20"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003b8c": {
            "entrypoint": "0x08003b8c",
            "current_name": "update_data_08003b8c",
            "code": "\nundefined4 updateData_08003b8c(int *dataPtr)\n\n{\n  int tempVar1;\n  int tempVar2;\n  \n  tempVar2 = *dataPtr;\n  if ((*(uint *)(tempVar2 + 8) & 1) == 0) {\n    return 0;\n  }\n  *(uint *)(tempVar2 + 8) = *(uint *)(tempVar2 + 8) & 0xfffffffe;\n  tempVar2 = FUN_08003760();\n  do {\n    if ((*(uint *)(*dataPtr + 8) & 1) == 0) {\n      return 0;\n    }\n    tempVar1 = FUN_08003760();\n  } while ((uint)(tempVar1 - tempVar2) < 3);\n  dataPtr[10] = dataPtr[10] | 0x10;\n  dataPtr[0xb] = dataPtr[0xb] | 1;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08003b8c": "update_data_08003b8c",
                "param_1": "dataPtr",
                "iVar1": "tempVar1",
                "iVar2": "tempVar2"
            },
            "calling": [
                "FUN_08003bd8",
                "FUN_08003ce8",
                "FUN_08003e20",
                "FUN_08003de4"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003bd8": {
            "entrypoint": "0x08003bd8",
            "current_name": "process_data_08003bd8",
            "code": "\nundefined4 processData_08003bd8(int *data)\n\n{\n  int result;\n  uint condition_1;\n  uint condition_2;\n  \n  if (data == (int *)0x0) {\n    return 1;\n  }\n  if (data[10] == 0) {\n    data[0xb] = 0;\n    *(undefined *)(data + 9) = 0;\n    FUN_08006ca8();\n  }\n  result = FUN_08003b8c(data);\n  if (((data[10] & 0x10U) == 0) && (result == 0)) {\n    data[10] = data[10] & 0xffffeefdU | 2;\n    condition_1 = data[1] | data[7] | data[3] << 1;\n    if (data[2] == 0x100) {\n      condition_2 = 0x100;\n    }\n    else {\n      condition_2 = 0;\n      if (data[2] == 1) {\n        condition_2 = 0x100;\n      }\n    }\n    if (data[5] == 1) {\n      if (data[3] == 0) {\n        condition_2 = condition_2 | (data[6] + -1) * 0x2000 | 0x800;\n      }\n      else {\n        data[10] = data[10] | 0x20;\n        data[0xb] = data[0xb] | 1;\n      }\n    }\n    *(uint *)(*data + 4) = condition_2 | *(uint *)(*data + 4) & 0xffff16ff;\n    *(uint *)(*data + 8) = *(uint *)(*data + 8) & 0xffe1f7fd | condition_1;\n    if ((data[2] == 0x100) || (data[2] == 1)) {\n      condition_2 = (data[4] + -1) * 0x100000;\n    }\n    else {\n      condition_2 = 0;\n    }\n    *(uint *)(*data + 0x2c) = condition_2 | *(uint *)(*data + 0x2c) & 0xff0fffff;\n    if (condition_1 != (*(uint *)(*data + 8) & 0xff1f0efe)) {\n      data[10] = data[10] & 0xffffffedU | 0x10;\n      data[0xb] = data[0xb] | 1;\n      return 1;\n    }\n    data[0xb] = 0;\n    data[10] = data[10] & 0xfffffffcU | 1;\n    return 0;\n  }\n  data[10] = data[10] | 0x10;\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08003bd8": "process_data_08003bd8",
                "param_1": "data",
                "iVar1": "result",
                "uVar2": "condition_1",
                "uVar3": "condition_2"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08006ca8",
                "FUN_08003b8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003ce8": {
            "entrypoint": "0x08003ce8",
            "current_name": "clear_permissions_08003ce8",
            "code": "\nint clearPermissions_08003ce8(int *permissionsArray)\n\n{\n  int result;\n  \n  if (permissionsArray == (int *)0x0) {\n    result = 1;\n  }\n  else {\n    permissionsArray[10] = permissionsArray[10] | 2;\n    result = FUN_08003b8c();\n    if (result == 0) {\n      *(undefined4 *)*permissionsArray = 0xffffffe0;\n      *(uint *)(*permissionsArray + 4) = *(uint *)(*permissionsArray + 4) & 0xff3f0000;\n      *(uint *)(*permissionsArray + 8) = *(uint *)(*permissionsArray + 8) & 0xff0106f0;\n      *(uint *)(*permissionsArray + 0xc) = *(uint *)(*permissionsArray + 0xc) & 0xff000000;\n      *(uint *)(*permissionsArray + 0x10) = *(uint *)(*permissionsArray + 0x10) & 0xc0000000;\n      *(uint *)(*permissionsArray + 0x14) = *(uint *)(*permissionsArray + 0x14) & 0xfffff000;\n      *(uint *)(*permissionsArray + 0x18) = *(uint *)(*permissionsArray + 0x18) & 0xfffff000;\n      *(uint *)(*permissionsArray + 0x1c) = *(uint *)(*permissionsArray + 0x1c) & 0xfffff000;\n      *(uint *)(*permissionsArray + 0x20) = *(uint *)(*permissionsArray + 0x20) & 0xfffff000;\n      *(uint *)(*permissionsArray + 0x24) = *(uint *)(*permissionsArray + 0x24) & 0xfffff000;\n      *(uint *)(*permissionsArray + 0x28) = *(uint *)(*permissionsArray + 0x28) & 0xfffff000;\n      *(uint *)(*permissionsArray + 0x2c) = *(uint *)(*permissionsArray + 0x2c) & 0xff000000;\n      *(uint *)(*permissionsArray + 0x2c) = *(uint *)(*permissionsArray + 0x2c) & 0xff000000;\n      *(uint *)(*permissionsArray + 0x30) = *(uint *)(*permissionsArray + 0x30) & 0xc0000000;\n      *(uint *)(*permissionsArray + 0x34) = *(uint *)(*permissionsArray + 0x34) & 0xc0000000;\n      *(uint *)(*permissionsArray + 0x38) = *(uint *)(*permissionsArray + 0x38) & 0xffc00000;\n      *(uint *)(*permissionsArray + 0x38) = *(uint *)(*permissionsArray + 0x38) & 0xffc00000;\n      FUN_08006d24(permissionsArray);\n      permissionsArray[0xb] = 0;\n      permissionsArray[10] = 0;\n    }\n    *(undefined *)(permissionsArray + 9) = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08003ce8": "clear_permissions_08003ce8",
                "param_1": "permissionsArray",
                "iVar1": "result",
                "param_1[10]": "permissionsArray[10]",
                "param_1[0xb]": "permissionsArray[0xb]"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08006d24",
                "FUN_08003b8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003de4": {
            "entrypoint": "0x08003de4",
            "current_name": "check_and_update_status_08003de4",
            "code": "\nint checkAndUpdateStatus_08003de4(int inputValue)\n\n{\n  int returnValue;\n  \n  if (*(char *)(inputValue + 0x24) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(inputValue + 0x24) = 1;\n  returnValue = FUN_08003b8c();\n  if (returnValue == 0) {\n    *(uint *)(inputValue + 0x28) = *(uint *)(inputValue + 0x28) & 0xffffeefe | 1;\n  }\n  *(undefined *)(inputValue + 0x24) = 0;\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08003de4": "check_and_update_status_08003de4",
                "param_1": "inputValue",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08003b8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003e20": {
            "entrypoint": "0x08003e20",
            "current_name": "process_data_08003e20",
            "code": "\nint processData_08003e20(int *data)\n\n{\n  uint totalValue;\n  int result;\n  uint divisionResult;\n  int startTimestamp;\n  int currentTimestamp;\n  int iterationCount;\n  \n  if (*(char *)(data + 9) == '\\x01') {\n    return 2;\n  }\n  *(undefined *)(data + 9) = 1;\n  result = FUN_08003b8c();\n  if (result == 0) {\n    data[10] = data[10] & 0xffffeefdU | 2;\n    totalValue = DAT_20000018;\n    divisionResult = FUN_08005bb8(2);\n    for (iterationCount = totalValue / divisionResult << 1; iterationCount != 0; iterationCount = iterationCount + -1) {\n    }\n    FUN_08003a20(data);\n    *(uint *)(*data + 8) = *(uint *)(*data + 8) | 8;\n    startTimestamp = FUN_08003760();\n    while (currentTimestamp = *data, (*(uint *)(currentTimestamp + 8) & 8) != 0) {\n      currentTimestamp = FUN_08003760();\n      if (10 < (uint)(currentTimestamp - startTimestamp)) {\n        data[10] = data[10] & 0xffffffedU | 0x10;\n        *(undefined *)(data + 9) = 0;\n        return 1;\n      }\n    }\n    *(uint *)(currentTimestamp + 8) = *(uint *)(currentTimestamp + 8) | 4;\n    startTimestamp = FUN_08003760();\n    while ((*(uint *)(*data + 8) & 4) != 0) {\n      currentTimestamp = FUN_08003760();\n      if (10 < (uint)(currentTimestamp - startTimestamp)) {\n        data[10] = data[10] & 0xffffffedU | 0x10;\n        *(undefined *)(data + 9) = 0;\n        return 1;\n      }\n    }\n    data[10] = data[10] & 0xfffffffcU | 1;\n  }\n  *(undefined *)(data + 9) = 0;\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08003e20": "process_data_08003e20",
                "param_1": "data",
                "uVar1": "totalValue",
                "iVar2": "result",
                "uVar3": "divisionResult",
                "iVar4": "startTimestamp",
                "iVar5": "currentTimestamp",
                "local_14": "iterationCount"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08003a20",
                "FUN_08003b8c",
                "FUN_08005bb8",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f0c": {
            "entrypoint": "0x08003f0c",
            "current_name": "update_register_value_08003f0c",
            "code": "\n\n\nvoid update_register_value_08003f0c(uint input_value)\n\n{\n  _DAT_e000ed0c = (input_value & 7) << 8 | _DAT_e000ed0c & 0xf8ff | 0x5fa0000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f0c": "update_register_value_08003f0c",
                "param_1": "input_value"
            },
            "calling": [
                "FUN_08008f0e",
                "FUN_08003724"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f30": {
            "entrypoint": "0x08003f30",
            "current_name": "update_character_08003f30",
            "code": "\n\n\nvoid updateCharacter_08003f30(uint characterIndex,uint bitMask,uint dataToWrite)\n\n{\n  uint shiftAmount;\n  uint relativeShiftAmount;\n  \n  shiftAmount = (uint)(_DAT_e000ed0c << 0x15) >> 0x1d;\n  relativeShiftAmount = 7 - shiftAmount;\n  if (3 < relativeShiftAmount) {\n    relativeShiftAmount = 4;\n  }\n  if (shiftAmount + 4 < 7) {\n    shiftAmount = 0;\n  }\n  else {\n    shiftAmount = shiftAmount - 3;\n  }\n  shiftAmount = (bitMask & (1 << (relativeShiftAmount & 0xff)) - 1U) << (shiftAmount & 0xff) |\n          (1 << (shiftAmount & 0xff)) - 1U & dataToWrite;\n  if ((int)characterIndex < 0) {\n    *(char *)((characterIndex & 0xf) + 0xe000ed14) = (char)(shiftAmount << 4);\n  }\n  else {\n    *(char *)(characterIndex + 0xe000e400) = (char)(shiftAmount << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f30": "update_character_08003f30",
                "param_1": "characterIndex",
                "param_2": "bitMask",
                "param_3": "dataToWrite",
                "uVar1": "shiftAmount",
                "uVar2": "relativeShiftAmount"
            },
            "calling": [
                "FUN_08007648",
                "FUN_080077b0",
                "FUN_08008694",
                "FUN_080036d8",
                "FUN_080035b8",
                "FUN_0800863c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f94": {
            "entrypoint": "0x08003f94",
            "current_name": "set_bit_08003f94",
            "code": "\nvoid setBit_08003f94(uint bitIndex)\n\n{\n  if (-1 < (int)bitIndex) {\n    *(int *)((bitIndex >> 5) * 4 + -0x1fff1f00) = 1 << (bitIndex & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f94": "set_bit_08003f94",
                "param_1": "bitIndex"
            },
            "calling": [
                "FUN_08007648",
                "FUN_080077b0",
                "FUN_08008694",
                "FUN_0800863c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003fb0": {
            "entrypoint": "0x08003fb0",
            "current_name": "set_bit_in_memory_08003fb0",
            "code": "\nvoid setBitInMemory_08003fb0(uint bitPosition)\n\n{\n  if (-1 < (int)bitPosition) {\n    *(int *)(((bitPosition >> 5) + 0x20) * 4 + -0x1fff1f00) = 1 << (bitPosition & 0x1f);\n    performDataSyncBarrier(0xf);\n    performInstSyncBarrier(0xf);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003fb0": "set_bit_in_memory_08003fb0",
                "param_1": "bitPosition",
                "DataSynchronizationBarrier": "performDataSyncBarrier",
                "InstructionSynchronizationBarrier": "performInstSyncBarrier"
            },
            "calling": [
                "FUN_080076e0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003fd8": {
            "entrypoint": "0x08003fd8",
            "current_name": "initialize_param_08003fd8",
            "code": "\n\n\nundefined4 initializeParam_08003fd8(int inputValue)\n\n{\n  if (inputValue - 1U < 0x1000000) {\n    _DAT_e000e014 = inputValue - 1U;\n    DAT_e000ed23 = 0xf0;\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08003fd8": "initialize_param_08003fd8",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_080036d8",
                "FUN_080035b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004004": {
            "entrypoint": "0x08004004",
            "current_name": "set_bit_in_memory_08004004",
            "code": "\nvoid setBitInMemory_08004004(uint inputValue)\n\n{\n  if (-1 < (int)inputValue) {\n    *(int *)(((inputValue >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (inputValue & 0x1f);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004004": "set_bit_in_memory_08004004",
                "param_1": "inputValue"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004024": {
            "entrypoint": "0x08004024",
            "current_name": "update_e000e010_status_08004024",
            "code": "\n\n\nvoid update_e000e010_status_08004024(int input_value)\n\n{\n  if (input_value != 4) {\n    _DAT_e000e010 = _DAT_e000e010 & 0xfffffffb;\n    return;\n  }\n  _DAT_e000e010 = _DAT_e000e010 | 4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004024": "update_e000e010_status_08004024",
                "param_1": "input_value"
            },
            "calling": [
                "FUN_080035b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004044": {
            "entrypoint": "0x08004044",
            "current_name": "FUNC_08004044",
            "code": "\nvoid FUNC_08004044(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004044": "FUNC_08004044"
            },
            "calling": [
                "FUN_08004046"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004046": {
            "entrypoint": "0x08004046",
            "current_name": "execute_initial_setup_08004046",
            "code": "\nvoid executeInitialSetup_08004046(void)\n\n{\n  FUNC_08004044();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004046": "execute_initial_setup_08004046"
            },
            "calling": [
                "FUN_08007246"
            ],
            "called": [
                "FUN_08004044"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004050": {
            "entrypoint": "0x08004050",
            "current_name": "extract_data_from_param_08004050",
            "code": "\n\n\nundefined4 extract_data_from_param_08004050(uint **param)\n\n{\n  uint *temp_ptr;\n  \n  if (*(char *)((int)param + 0x21) != '\\x02') {\n    variable2 = (uint *)0x4;\n    return 1;\n  }\n  **param = **param & 0xfffffff1;\n  **param = **param & 0xfffffffe;\n  temp_ptr = *param;\n  if (temp_ptr == (uint *)0x40020008) {\n    _DAT_40020004 = 1;\n  }\n  else if (temp_ptr == (uint *)0x4002001c) {\n    _DAT_40020004 = 0x10;\n  }\n  else if (temp_ptr == (uint *)0x40020030) {\n    _DAT_40020004 = 0x100;\n  }\n  else if (temp_ptr == (uint *)0x40020044) {\n    _DAT_40020004 = 0x1000;\n  }\n  else if (temp_ptr == (uint *)0x40020058) {\n    _DAT_40020004 = 0x10000;\n  }\n  else if (temp_ptr == (uint *)0x4002006c) {\n    _DAT_40020004 = 0x100000;\n  }\n  else {\n    _DAT_40020004 = 0x1000000;\n  }\n  *(undefined *)((int)param + 0x21) = 1;\n  *(undefined *)(param + 8) = 0;\n  if (callback_func != (uint *)0x0) {\n    (*(code *)callback_func)();\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004050": "extract_data_from_param_08004050",
                "param_1": "param",
                "puVar1": "temp_ptr",
                "param_1[0xe]": "variable2",
                "param_1[0xd]": "callback_func"
            },
            "calling": [
                "FUN_080069ec",
                "FUN_08004f3c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080040e8": {
            "entrypoint": "0x080040e8",
            "current_name": "update_registers_080040e8",
            "code": "\n\n\nvoid updateRegisters_080040e8(uint *registers,uint *flags)\n\n{\n  uint *updatedRegister;\n  uint bitMask;\n  uint flagValue;\n  uint bitPosition;\n  uint opcode;\n  uint newValue;\n  int shiftValue1;\n  int shiftValue2;\n  \n  newValue = 0;\n  bitPosition = 0;\n  do {\n    if (0xf < bitPosition) {\n      return;\n    }\n    bitMask = 1 << (bitPosition & 0xff);\n    flagValue = *flags & bitMask;\n    if (bitMask == flagValue) {\n      opcode = flags[1];\n      if (opcode == 0x12) {\n        newValue = flags[3] + 0xc;\n      }\n      else if (opcode < 0x13) {\n        if (opcode == 2) {\n          newValue = flags[3] + 8;\n        }\n        else if (opcode < 3) {\n          if (opcode == 0) goto LAB_0800423a;\n          if (opcode == 1) {\n            newValue = flags[3];\n          }\n        }\n        else if (opcode == 3) {\n          newValue = 0;\n        }\n        else if (opcode == 0x11) {\n          newValue = flags[3] + 4;\n        }\n      }\n      else if (opcode == 0x10210000) {\nLAB_0800423a:\n        if (flags[2] == 0) {\n          newValue = 4;\n        }\n        else if (flags[2] == 1) {\n          registers[4] = bitMask;\n          newValue = 8;\n        }\n        else {\n          registers[5] = bitMask;\n          newValue = 8;\n        }\n      }\n      else if (opcode < 0x10210001) {\n        if ((opcode == 0x10110000) || (opcode == 0x10120000)) goto LAB_0800423a;\n      }\n      else if ((opcode == 0x10310000) || ((opcode == 0x10320000 || (opcode == 0x10220000))))\n      goto LAB_0800423a;\n      bitMask = bitPosition;\n      updatedRegister = registers;\n      if (0xff < flagValue) {\n        bitMask = bitPosition - 8;\n        updatedRegister = registers + 1;\n      }\n      *updatedRegister = *updatedRegister & ~(0xf << (bitMask << 2 & 0xff)) | newValue << (bitMask << 2 & 0xff);\n      if ((flags[1] & 0x10000000) != 0) {\n        _DAT_40021018 = _DAT_40021018 | 1;\n        shiftValue1 = (bitPosition & 3) << 2;\n        if (registers == (uint *)0x40010800) {\n          shiftValue2 = 0;\n        }\n        else if (registers == (uint *)0x40010c00) {\n          shiftValue2 = 1;\n        }\n        else if (registers == (uint *)0x40011000) {\n          shiftValue2 = 2;\n        }\n        else if (registers == (uint *)0x40011400) {\n          shiftValue2 = 3;\n        }\n        else {\n          shiftValue2 = 4;\n        }\n        *(uint *)(((bitPosition >> 2) + 2) * 4 + 0x40010000) =\n             *(uint *)(((bitPosition >> 2) + 2) * 4 + 0x40010000) & ~(0xf << shiftValue1) | shiftValue2 << shiftValue1;\n        if ((flags[1] & 0x10000) == 0) {\n          _DAT_40010400 = _DAT_40010400 & ~flagValue;\n        }\n        else {\n          _DAT_40010400 = _DAT_40010400 | flagValue;\n        }\n        if ((flags[1] & 0x20000) == 0) {\n          _DAT_40010404 = _DAT_40010404 & ~flagValue;\n        }\n        else {\n          _DAT_40010404 = _DAT_40010404 | flagValue;\n        }\n        if ((flags[1] & 0x100000) == 0) {\n          _DAT_40010408 = _DAT_40010408 & ~flagValue;\n        }\n        else {\n          _DAT_40010408 = _DAT_40010408 | flagValue;\n        }\n        if ((flags[1] & 0x200000) == 0) {\n          _DAT_4001040c = _DAT_4001040c & ~flagValue;\n        }\n        else {\n          _DAT_4001040c = flagValue | _DAT_4001040c;\n        }\n      }\n    }\n    bitPosition = bitPosition + 1;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080040e8": "update_registers_080040e8",
                "param_1": "registers",
                "param_2": "flags",
                "puVar1": "updatedRegister",
                "uVar2": "bitMask",
                "uVar3": "flagValue",
                "uVar4": "bitPosition",
                "uVar5": "opcode",
                "uVar6": "newValue",
                "iVar7": "shiftValue1",
                "iVar8": "shiftValue2"
            },
            "calling": [
                "FUN_08006ca8",
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08006e68",
                "FUN_08007258"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080042d4": {
            "entrypoint": "0x080042d4",
            "current_name": "check_bit_presence_080042d4",
            "code": "\nundefined4 check_bit_presence_080042d4(int address,uint value_to_check)\n\n{\n  if ((value_to_check & *(uint *)(address + 8)) == 0) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_080042d4": "check_bit_presence_080042d4",
                "param_1": "address",
                "param_2": "value_to_check"
            },
            "calling": [
                "FUN_080072f0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080042e2": {
            "entrypoint": "0x080042e2",
            "current_name": "set_param_value_080042e2",
            "code": "\nvoid setParamValue_080042e2(int objectAddress,int value,int isShifted)\n\n{\n  if (isShifted == 0) {\n    *(int *)(objectAddress + 0x10) = value << 0x10;\n    return;\n  }\n  *(int *)(objectAddress + 0x10) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080042e2": "set_param_value_080042e2",
                "param_1": "objectAddress",
                "param_2": "value",
                "param_3": "isShifted"
            },
            "calling": [
                "FUN_080072d8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080042f0": {
            "entrypoint": "0x080042f0",
            "current_name": "update_data_and_call_function_080042f0",
            "code": "\n\n\nvoid update_data_and_call_function_080042f0(uint data)\n\n{\n  if ((_DAT_40010414 & data) != 0) {\n    _DAT_40010414 = data;\n    FUN_08009094();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080042f0": "update_data_and_call_function_080042f0",
                "param_1": "data"
            },
            "calling": [],
            "called": [
                "FUN_08009094"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800430c": {
            "entrypoint": "0x0800430c",
            "current_name": "update_flag_value_0800430c",
            "code": "\nundefined4 updateFlagValue_0800430c(int *flagParams)\n\n{\n  if (*(char *)((int)flagParams + 0x3e) == '@') {\n    if (flagParam14 == 0) {\n      *(uint *)(*flagParams + 0x10) = flagParam11 & 0xfe;\n    }\n    else {\n      *(uint *)(*flagParams + 0x10) = flagParam11 & 0xffU | 1;\n    }\n  }\n  else if (flagParams[4] == 0x4000) {\n    if (*(char *)((int)flagParams + 0x3d) == '!') {\n      *(uint *)(*flagParams + 0x10) = flagParam11 & 0xfe;\n    }\n    else {\n      *(uint *)(*flagParams + 0x10) = flagParam11 & 0xffU | 1;\n    }\n  }\n  else if (flagParam14 == 0) {\n    *(uint *)(*flagParams + 0x10) = (uint)(flagParam11 << 0x10) >> 0x17 & 6 | 0xf0;\n  }\n  else if (flagParam14 == 1) {\n    *(uint *)(*flagParams + 0x10) = (uint)(flagParam11 << 0x10) >> 0x17 & 6 | 0xf1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800430c": "update_flag_value_0800430c",
                "param_1": "flagParams",
                "param_1[0x14]": "flagParam14",
                "param_1[0x11]": "flagParam11"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004396": {
            "entrypoint": "0x08004396",
            "current_name": "set_byte_value_08004396",
            "code": "\nundefined4 setByteValue_08004396(int *inputArray)\n\n{\n  *(uint *)(*inputArray + 0x10) = inputArray[0x11] & 0xff;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004396": "set_byte_value_08004396",
                "param_1": "inputArray"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080043a2": {
            "entrypoint": "0x080043a2",
            "current_name": "set_flags_080043a2",
            "code": "\nundefined4 setFlags_080043a2(uint **params)\n\n{\n  uint *ptr;\n  \n  ptr = params[0xb];\n  if ((*(char *)((int)params + 0x3d) == '\\\"') bitwiseAndbitwiseAnd\n     ((flagPtr != (uint *)0x0 || (*(char *)((int)params + 0x3e) != '@')))) {\n    if ((flagPtr == (uint *)0x0) bitwiseAndbitwiseAnd (specialFlagPtr == (uint *)0xc000)) {\n      **params = **params | 0x100;\n      flagPtr = (uint *)((int)flagPtr + 1);\n    }\n    else {\n      if (*(short *)((int)params + 0x2a) == 0) {\n        **params = **params | 0x200;\n      }\n      else if (*(short *)((int)params + 0x2a) == 1) {\n        if (ptr == (uint *)0xffff0000) {\n          **params = **params bitwiseAnd 0xfffffbff;\n          ptr = *params;\n          if ((ptr[1] bitwiseAnd 0x800) == 0) {\n            *ptr = *ptr | 0x200;\n          }\n          else {\n            *ptr = *ptr bitwiseAnd 0xfffffbff;\n          }\n        }\n        else if (((ptr == (uint *)0x4) || (ptr == (uint *)0x8)) ||\n                (params[0xc] == (uint *)0x12)) {\n          **params = **params bitwiseAnd 0xfffffbff;\n          **params = **params | 0x200;\n        }\n        else if (params[0xb] == (uint *)0x2) {\n          **params = **params | 0x400;\n        }\n        else {\n          **params = **params bitwiseAnd 0xfffffbff;\n        }\n      }\n      else if (*(short *)((int)params + 0x2a) == 2) {\n        if (params[0xb] == (uint *)0x2) {\n          **params = **params | 0x400;\n        }\n        else {\n          **params = **params | 0x800;\n          **params = **params bitwiseAnd 0xfffffbff;\n        }\n        ptr = *params;\n        if ((ptr[1] bitwiseAnd 0x800) != 0) {\n          ptr[1] = ptr[1] | 0x1000;\n        }\n      }\n      else {\n        **params = **params | 0x400;\n        ptr = *params;\n        if ((ptr[1] bitwiseAnd 0x800) != 0) {\n          ptr[1] = ptr[1] | 0x1000;\n        }\n      }\n      flagPtr = (uint *)0x0;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080043a2": "set_flags_080043a2",
                "param_1": "params",
                "puVar1": "ptr",
                "param_1[0x14]": "flagPtr",
                "param_1[4]": "specialFlagPtr",
                "&": "bitwiseAnd"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800457c": {
            "entrypoint": "0x0800457c",
            "current_name": "update_pointer_0800457c",
            "code": "\nundefined4 updatePointer_0800457c(int *pointerArray)\n\n{\n  byte *bytePointer;\n  \n  if (*(short *)((int)pointerArray + 0x2a) != 0) {\n    bytePointer = (byte *)dataPointer;\n    dataPointer = (int)(bytePointer + 1);\n    *(uint *)(*pointerArray + 0x10) = (uint)*bytePointer;\n    *(short *)((int)pointerArray + 0x2a) = *(short *)((int)pointerArray + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800457c": "update_pointer_0800457c",
                "param_1": "pointerArray",
                "pbVar1": "bytePointer",
                "param_1[9]": "dataPointer"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800459c": {
            "entrypoint": "0x0800459c",
            "current_name": "update_pointer_0800459c",
            "code": "\nundefined4 updatePointer_0800459c(int *pointer)\n\n{\n  undefined *currentPointer;\n  \n  if (*(short *)((int)pointer + 0x2a) != 0) {\n    currentPointer = (undefined *)pointer[9];\n    pointer[9] = (int)(currentPointer + 1);\n    *currentPointer = (char)*(undefined4 *)(*pointer + 0x10);\n    *(short *)((int)pointer + 0x2a) = *(short *)((int)pointer + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800459c": "update_pointer_0800459c",
                "param_1": "pointer",
                "puVar1": "currentPointer"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080045bc": {
            "entrypoint": "0x080045bc",
            "current_name": "FUNC_080045bc",
            "code": "\nvoid FUNC_080045bc(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080045bc": "FUNC_080045bc"
            },
            "calling": [
                "FUN_080045c0"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080045c0": {
            "entrypoint": "0x080045c0",
            "current_name": "calculate_values_080045c0",
            "code": "\nundefined4 calculateValues_080045c0(uint **parameters)\n\n{\n  bool isValueInRange;\n  uint totalValue;\n  uint *pointerValue;\n  uint dividendValue;\n  \n  if (parameters == (uint **)0x0) {\n    return 1;\n  }\n  if (*(char *)((int)parameters + 0x3d) == '\\0') {\n    *(undefined *)(parameters + 0xf) = 0;\n    FUNC_080045bc();\n  }\n  *(undefined *)((int)parameters + 0x3d) = 0x24;\n  **parameters = **parameters & 0xfffffffe;\n  totalValue = FUN_08005a28();\n  if (parameters[1] < (uint *)0x186a1) {\n    if (totalValue < 2000000) {\n      isValueInRange = true;\n    }\n    else {\n      isValueInRange = false;\n    }\n  }\n  else {\n    isValueInRange = totalValue < 4000000;\n  }\n  if (isValueInRange) {\n    return 1;\n  }\n  dividendValue = totalValue / 1000000;\n  (*parameters)[1] = dividendValue;\n  if ((uint *)0x186a0 < parameters[1]) {\n    dividendValue = (dividendValue * 300) / 1000;\n  }\n  (*parameters)[8] = dividendValue + 1;\n  pointerValue = parameters[1];\n  if (pointerValue < (uint *)0x186a1) {\n    totalValue = (totalValue - 1) / (uint)((int)pointerValue << 1) + 1 & 0xfff;\n    if (totalValue < 4) {\n      totalValue = 4;\n    }\n  }\n  else {\n    if (parameters[2] == (uint *)0x0) {\n      dividendValue = (totalValue - 1) / (uint)((int)pointerValue * 3);\n    }\n    else {\n      dividendValue = (totalValue - 1) / (uint)((int)pointerValue * 0x19);\n    }\n    if ((dividendValue + 1 & 0xfff) == 0) {\n      totalValue = 1;\n    }\n    else if (parameters[2] == (uint *)0x0) {\n      totalValue = (totalValue - 1) / (uint)((int)pointerValue * 3) + 1 & 0xfff | 0x8000;\n    }\n    else {\n      totalValue = (totalValue - 1) / (uint)((int)pointerValue * 0x19) + 1 & 0xfff | 0xc000;\n    }\n  }\n  (*parameters)[7] = totalValue;\n  **parameters = (uint)parameters[7] | (uint)parameters[8];\n  (*parameters)[2] = (uint)parameters[4] | (uint)parameters[3];\n  (*parameters)[3] = (uint)parameters[5] | (uint)parameters[6];\n  **parameters = **parameters | 1;\n  parameters[0x10] = (uint *)0x0;\n  *(undefined *)((int)parameters + 0x3d) = 0x20;\n  parameters[0xc] = (uint *)0x0;\n  *(undefined *)((int)parameters + 0x3e) = 0;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080045c0": "calculate_values_080045c0",
                "param_1": "parameters",
                "bVar1": "isValueInRange",
                "uVar2": "totalValue",
                "puVar3": "pointerValue",
                "uVar4": "dividendValue"
            },
            "calling": [
                "FUN_080077b0"
            ],
            "called": [
                "FUN_080045bc",
                "FUN_08005a28"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004728": {
            "entrypoint": "0x08004728",
            "current_name": "process_input_08004728",
            "code": "\nundefined4 processInput_08004728(uint **inputData,uint *outputData,uint *tempData,undefined2 flag)\n\n{\n  undefined4 returnValue;\n  uint *ptr;\n  int counter;\n  \n  if (*(char *)((int)inputData + 0x3d) == ' ') {\n    counter = (DAT_20000018 / 25000) * 0x19;\n    do {\n      if (counter == 0) {\n        inputData[0xc] = (uint *)0x0;\n        *(undefined *)((int)inputData + 0x3d) = 0x20;\n        *(undefined *)(inputData + 0xf) = 0;\n        return 3;\n      }\n      ptr = *inputData;\n      counter = counter + -1;\n    } while ((ptr[6] & 2) != 0);\n    if (*(char *)(inputData + 0xf) == '\\x01') {\n      returnValue = 2;\n    }\n    else {\n      *(undefined *)(inputData + 0xf) = 1;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **inputData = **inputData & 0xfffff7ff;\n      *(undefined *)((int)inputData + 0x3d) = 0x21;\n      *(undefined *)((int)inputData + 0x3e) = 0x10;\n      returnValue = 0;\n      inputData[0x10] = (uint *)0x0;\n      inputData[9] = tempData;\n      *(undefined2 *)((int)inputData + 0x2a) = flag;\n      inputData[0xb] = (uint *)0xffff0000;\n      *(undefined2 *)(inputData + 10) = *(undefined2 *)((int)inputData + 0x2a);\n      inputData[0x11] = outputData;\n      **inputData = **inputData | 0x100;\n      *(undefined *)(inputData + 0xf) = 0;\n      (*inputData)[1] = (*inputData)[1] | 0x700;\n    }\n  }\n  else {\n    returnValue = 2;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08004728": "process_input_08004728",
                "param_1": "inputData",
                "param_2": "outputData",
                "param_3": "tempData",
                "param_4": "flag",
                "uVar1": "returnValue",
                "puVar2": "ptr",
                "local_c": "counter"
            },
            "calling": [
                "FUN_08007e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080047f4": {
            "entrypoint": "0x080047f4",
            "current_name": "handle_input_080047f4",
            "code": "\nundefined4 handleInput_080047f4(uint **inputData,uint *param1,uint *param2,undefined2 param3)\n\n{\n  undefined4 returnValue;\n  uint *tempPointer;\n  int counter;\n  \n  if (*(char *)((int)inputData + 0x3d) == ' ') {\n    counter = (DAT_20000018 / 25000) * 0x19;\n    do {\n      if (counter == 0) {\n        inputData[0xc] = (uint *)0x0;\n        *(undefined *)((int)inputData + 0x3d) = 0x20;\n        *(undefined *)(inputData + 0xf) = 0;\n        return 3;\n      }\n      tempPointer = *inputData;\n      counter = counter + -1;\n    } while ((tempPointer[6] & 2) != 0);\n    if (*(char *)(inputData + 0xf) == '\\x01') {\n      returnValue = 2;\n    }\n    else {\n      *(undefined *)(inputData + 0xf) = 1;\n      if ((*tempPointer & 1) == 0) {\n        *tempPointer = *tempPointer | 1;\n      }\n      **inputData = **inputData & 0xfffff7ff;\n      *(undefined *)((int)inputData + 0x3d) = 0x22;\n      *(undefined *)((int)inputData + 0x3e) = 0x10;\n      returnValue = 0;\n      inputData[0x10] = (uint *)0x0;\n      inputData[9] = param2;\n      *(undefined2 *)((int)inputData + 0x2a) = param3;\n      inputData[0xb] = (uint *)0xffff0000;\n      *(undefined2 *)(inputData + 10) = *(undefined2 *)((int)inputData + 0x2a);\n      inputData[0x11] = param1;\n      **inputData = **inputData | 0x400;\n      **inputData = **inputData | 0x100;\n      *(undefined *)(inputData + 0xf) = 0;\n      (*inputData)[1] = (*inputData)[1] | 0x700;\n    }\n  }\n  else {\n    returnValue = 2;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_080047f4": "handle_input_080047f4",
                "param_1": "inputData",
                "param_2": "param1",
                "param_3": "param2",
                "param_4": "param3",
                "uVar1": "returnValue",
                "puVar2": "tempPointer",
                "local_c": "counter"
            },
            "calling": [
                "FUN_08007f0e"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080048c8": {
            "entrypoint": "0x080048c8",
            "current_name": "check_and_update_params_080048c8",
            "code": "\nundefined4 check_and_update_params_080048c8(uint **param_ptr,uint *data_array,int array_length,uint *result_array)\n\n{\n  undefined4 status;\n  uint *ptr;\n  \n  if (*(char *)((int)param_ptr + 0x3d) == '(') {\n    if (data_array == (uint *)0x0) {\n      status = 1;\n    }\n    else if (array_length == 0) {\n      status = 1;\n    }\n    else if (*(char *)(param_ptr + 0xf) == '\\x01') {\n      status = 2;\n    }\n    else {\n      *(undefined *)(param_ptr + 0xf) = 1;\n      ptr = *param_ptr;\n      if ((*ptr & 1) == 0) {\n        *ptr = *ptr | 1;\n      }\n      **param_ptr = **param_ptr & 0xfffff7ff;\n      *(undefined *)((int)param_ptr + 0x3d) = 0x29;\n      *(undefined *)((int)param_ptr + 0x3e) = 0x20;\n      status = 0;\n      param_ptr_10 = (uint *)0x0;\n      param_ptr_9 = data_array;\n      *(short *)((int)param_ptr + 0x2a) = (short)array_length;\n      param_ptr_b = result_array;\n      *(undefined2 *)(param_ptr + 10) = *(undefined2 *)((int)param_ptr + 0x2a);\n      *(undefined *)(param_ptr + 0xf) = 0;\n      (*param_ptr)[1] = (*param_ptr)[1] | 0x700;\n    }\n  }\n  else {\n    status = 2;\n  }\n  return status;\n}\n\n",
            "renaming": {
                "FUN_080048c8": "check_and_update_params_080048c8",
                "param_1": "param_ptr",
                "param_2": "data_array",
                "param_3": "array_length",
                "param_4": "result_array",
                "uVar1": "status",
                "puVar2": "ptr",
                "param_1[0x10]": "param_ptr_10",
                "param_1[9]": "param_ptr_9",
                "param_1[0xb]": "param_ptr_b"
            },
            "calling": [
                "FUN_08007fa0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004954": {
            "entrypoint": "0x08004954",
            "current_name": "validate_params_08004954",
            "code": "\nundefined4 validate_params_08004954(uint **input_data,uint *param_ptr,int param_count,uint *temp_ptr)\n\n{\n  undefined4 result;\n  uint *inner_ptr;\n  \n  if (*(char *)((int)input_data + 0x3d) == '(') {\n    if (param_ptr == (uint *)0x0) {\n      result = 1;\n    }\n    else if (param_count == 0) {\n      result = 1;\n    }\n    else if (*(char *)(input_data + 0xf) == '\\x01') {\n      result = 2;\n    }\n    else {\n      *(undefined *)(input_data + 0xf) = 1;\n      inner_ptr = *input_data;\n      if ((*inner_ptr & 1) == 0) {\n        *inner_ptr = *inner_ptr | 1;\n      }\n      **input_data = **input_data & 0xfffff7ff;\n      *(undefined *)((int)input_data + 0x3d) = 0x2a;\n      *(undefined *)((int)input_data + 0x3e) = 0x20;\n      result = 0;\n      input_data[0x10] = (uint *)0x0;\n      input_data[9] = param_ptr;\n      *(short *)((int)input_data + 0x2a) = (short)param_count;\n      input_data[0xb] = temp_ptr;\n      *(undefined2 *)(input_data + 10) = *(undefined2 *)((int)input_data + 0x2a);\n      *(undefined *)(input_data + 0xf) = 0;\n      (*input_data)[1] = (*input_data)[1] | 0x700;\n    }\n  }\n  else {\n    result = 2;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08004954": "validate_params_08004954",
                "param_1": "input_data",
                "param_2": "param_ptr",
                "param_3": "param_count",
                "param_4": "temp_ptr",
                "uVar1": "result",
                "puVar2": "inner_ptr"
            },
            "calling": [
                "FUN_08007fa0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080049e0": {
            "entrypoint": "0x080049e0",
            "current_name": "initialize_data_structure_080049e0",
            "code": "\nundefined4 initializeDataStructure_080049e0(uint **dataStructure)\n\n{\n  uint *currentPointer;\n  \n  if (*(char *)((int)dataStructure + 0x3d) != ' ') {\n    return 2;\n  }\n  *(undefined *)((int)dataStructure + 0x3d) = 0x28;\n  currentPointer = *dataStructure;\n  if ((*currentPointer & 1) == 0) {\n    *currentPointer = *currentPointer | 1;\n  }\n  **dataStructure = **dataStructure | 0x400;\n  (*dataStructure)[1] = (*dataStructure)[1] | 0x300;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080049e0": "initialize_data_structure_080049e0",
                "param_1": "dataStructure",
                "puVar1": "currentPointer"
            },
            "calling": [
                "FUN_08008020",
                "FUN_08007f8e",
                "FUN_08007ff0",
                "FUN_08007f7c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a1e": {
            "entrypoint": "0x08004a1e",
            "current_name": "FUNC_08004a1e",
            "code": "\nvoid FUNC_08004a1e(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a1e": "FUNC_08004a1e"
            },
            "calling": [
                "FUN_08004b82",
                "FUN_08004ccc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004a20": {
            "entrypoint": "0x08004a20",
            "current_name": "FUNC_08004a20",
            "code": "\nvoid FUNC_08004a20(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a20": "FUNC_08004a20"
            },
            "calling": [
                "FUN_08004e3c",
                "FUN_08004d6c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004a22": {
            "entrypoint": "0x08004a22",
            "current_name": "FUNC_08004a22",
            "code": "\nvoid FUNC_08004a22(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a22": "FUNC_08004a22"
            },
            "calling": [
                "FUN_08004aec",
                "FUN_08004a24"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004a24": {
            "entrypoint": "0x08004a24",
            "current_name": "update_value_08004a24",
            "code": "\nundefined4 updateValue_08004a24(int *inputArray)\n\n{\n  char character;\n  byte *bytePointer;\n  \n  character = *(char *)((int)inputArray + 0x3d);\n  if (*(short *)((int)inputArray + 0x2a) != 0) {\n    bytePointer = (byte *)inputArray[9];\n    inputArray[9] = (int)(bytePointer + 1);\n    *(uint *)(*inputArray + 0x10) = (uint)*bytePointer;\n    *(short *)((int)inputArray + 0x2a) = *(short *)((int)inputArray + 0x2a) + -1;\n    if ((*(short *)((int)inputArray + 0x2a) == 0) && (character == ')')) {\n      *(uint *)(*inputArray + 4) = *(uint *)(*inputArray + 4) & 0xfffffbff;\n      inputArray[0xc] = 0x21;\n      *(undefined *)((int)inputArray + 0x3d) = 0x28;\n      FUNC_08004a22();\n    }\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004a24": "update_value_08004a24",
                "param_1": "inputArray",
                "cVar1": "character",
                "pbVar2": "bytePointer"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a22"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004a74": {
            "entrypoint": "0x08004a74",
            "current_name": "FUNC_08004a74",
            "code": "\nvoid FUNC_08004a74(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004a74": "FUNC_08004a74"
            },
            "calling": [
                "FUN_08004a76",
                "FUN_08005084"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004a76": {
            "entrypoint": "0x08004a76",
            "current_name": "process_data_08004a76",
            "code": "\nundefined4 processData_08004a76(int *data)\n\n{\n  char charValue;\n  undefined *bytePtr;\n  \n  charValue = *(char *)((int)data + 0x3d);\n  if (*(short *)((int)data + 0x2a) != 0) {\n    bytePtr = (undefined *)bytePtr2;\n    bytePtr2 = (int)(bytePtr + 1);\n    *bytePtr = (char)*(undefined4 *)(*data + 0x10);\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    if ((*(short *)((int)data + 0x2a) == 0) && (charValue == '*')) {\n      *(uint *)(*data + 4) = *(uint *)(*data + 4) & 0xfffffbff;\n      value2 = 0x22;\n      *(undefined *)((int)data + 0x3d) = 0x28;\n      FUNC_08004a74();\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004a76": "process_data_08004a76",
                "param_1": "data",
                "cVar1": "charValue",
                "puVar2": "bytePtr",
                "param_1[9]": "bytePtr2",
                "param_1[0xc]": "value2"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ac2": {
            "entrypoint": "0x08004ac2",
            "current_name": "process_data_08004ac2",
            "code": "\nundefined4 processData_08004ac2(int *dataPtr,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  undefined2 result;\n  uint flags;\n  \n  flags = *(uint *)(*dataPtr + 0x18);\n  if ((flags & 0x80) == 0) {\n    result = *(undefined2 *)(dataPtr + 3);\n  }\n  else {\n    result = *(undefined2 *)(dataPtr + 6);\n  }\n  FUN_08007fa0(dataPtr,(*(uint *)(*dataPtr + 0x18) & 4) == 0,result,flags,param4);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004ac2": "process_data_08004ac2",
                "param_1": "dataPtr",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "result",
                "uVar2": "flags"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08007fa0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004aec": {
            "entrypoint": "0x08004aec",
            "current_name": "update_permissions_08004aec",
            "code": "\nundefined4 updatePermissions_08004aec(uint **parameters)\n\n{\n  if (((parameters[11] == (uint *)0x4) || (parameters[11] == (uint *)0x8)) &&\n     (*(char *)((int)parameters + 0x3d) == '(')) {\n    parameters[11] = (uint *)0xffff0000;\n    (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n    (*parameters)[5] = 0xfffffbff;\n    **parameters = **parameters & 0xfffffbff;\n    parameters[12] = (uint *)0x0;\n    *(undefined *)((int)parameters + 0x3d) = 0x20;\n    *(undefined *)((int)parameters + 0x3e) = 0;\n    FUN_08007ff0();\n  }\n  else if (*(char *)((int)parameters + 0x3d) == '!') {\n    parameters[11] = (uint *)0xffff0000;\n    parameters[12] = (uint *)0x21;\n    *(undefined *)((int)parameters + 0x3d) = 0x20;\n    *(undefined *)((int)parameters + 0x3e) = 0;\n    (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n    (*parameters)[5] = 0xfffffbff;\n    **parameters = **parameters & 0xfffffbff;\n    FUNC_08004a22();\n  }\n  else {\n    (*parameters)[5] = 0xfffffbff;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004aec": "update_permissions_08004aec",
                "param_1": "parameters",
                "param_1[0xb]": "parameters[11]",
                "param_1[0xc]": "parameters[12]"
            },
            "calling": [
                "FUN_080052f0"
            ],
            "called": [
                "FUN_08007ff0",
                "FUN_08004a22"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004b80": {
            "entrypoint": "0x08004b80",
            "current_name": "FUNC_08004b80",
            "code": "\nvoid FUNC_08004b80(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004b80": "FUNC_08004b80"
            },
            "calling": [
                "FUN_08004b82",
                "FUN_08004ccc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004b82": {
            "entrypoint": "0x08004b82",
            "current_name": "parse_input_data_08004b82",
            "code": "\nundefined4 parseInputData_08004b82(uint **inputData)\n\n{\n  char firstChar;\n  uint *ptrValue;\n  \n  firstChar = *(char *)((int)inputData + 0x3d);\n  ptrValue = ptrValueArray;\n  if ((*(short *)(inputData + 10) == 0) && (firstChar == '!')) {\n    if ((ptrValue == (uint *)0x4) || ((ptrValue == (uint *)0x8 || (ptrValue == (uint *)0xffff0000)))) {\n      (*inputData)[1] = (*inputData)[1] & 0xfffff8ff;\n      **inputData = **inputData | 0x200;\n      resultValue = (uint *)0x0;\n      *(undefined *)((int)inputData + 0x3d) = 0x20;\n      if (*(char *)((int)inputData + 0x3e) == '@') {\n        *(undefined *)((int)inputData + 0x3e) = 0;\n        FUNC_08004b80();\n      }\n      else {\n        *(undefined *)((int)inputData + 0x3e) = 0;\n        FUNC_08004a1e();\n      }\n    }\n    else {\n      (*inputData)[1] = (*inputData)[1] & 0xfffff8ff;\n      resultValue = (uint *)0x11;\n      *(undefined *)((int)inputData + 0x3e) = 0;\n      *(undefined *)((int)inputData + 0x3d) = 0x20;\n      FUNC_08004a1e();\n    }\n  }\n  else if ((firstChar == '!') || ((*(char *)((int)inputData + 0x3e) == '@' && (firstChar == '\\\"')))) {\n    if (*(short *)((int)inputData + 0x2a) == 0) {\n      (*inputData)[1] = (*inputData)[1] & 0xfffffbff;\n    }\n    else if (*(char *)((int)inputData + 0x3e) == '@') {\n      if (ptrValueArrayPlusTwenty == (uint *)0x0) {\n        if (valueArrayPlusNineteen == (uint *)0x1) {\n          (*inputData)[4] = (uint)valueArrayPlusEighteen & 0xff;\n          ptrValueArrayPlusTwenty = (uint *)((int)ptrValueArrayPlusTwenty + 2);\n        }\n        else {\n          (*inputData)[4] = (uint)((int)valueArrayPlusEighteen << 0x10) >> 0x18;\n          ptrValueArrayPlusTwenty = (uint *)((int)ptrValueArrayPlusTwenty + 1);\n        }\n      }\n      else if (ptrValueArrayPlusTwenty == (uint *)0x1) {\n        (*inputData)[4] = (uint)valueArrayPlusEighteen & 0xff;\n        ptrValueArrayPlusTwenty = (uint *)((int)ptrValueArrayPlusTwenty + 1);\n      }\n      else if (ptrValueArrayPlusTwenty == (uint *)0x2) {\n        if (*(char *)((int)inputData + 0x3d) == '\\\"') {\n          **inputData = **inputData | 0x100;\n        }\n        else if (*(char *)((int)inputData + 0x3d) == '!') {\n          ptrValue = ptrValueArrayPlusNine;\n          ptrValueArrayPlusNine = (uint *)((int)ptrValue + 1);\n          (*inputData)[4] = (uint)*(byte *)ptrValue;\n          *(short *)((int)inputData + 0x2a) = *(short *)((int)inputData + 0x2a) + -1;\n        }\n      }\n    }\n    else {\n      ptrValue = ptrValueArrayPlusNine;\n      ptrValueArrayPlusNine = (uint *)((int)ptrValue + 1);\n      (*inputData)[4] = (uint)*(byte *)ptrValue;\n      *(short *)((int)inputData + 0x2a) = *(short *)((int)inputData + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004b82": "parse_input_data_08004b82",
                "param_1": "inputData",
                "cVar1": "firstChar",
                "puVar2": "ptrValue",
                "param_1[0xb]": "ptrValueArray",
                "param_1[0xc]": "resultValue",
                "param_1[0x14]": "ptrValueArrayPlusTwenty",
                "param_1[0x13]": "valueArrayPlusNineteen",
                "param_1[0x12]": "valueArrayPlusEighteen",
                "param_1[9]": "ptrValueArrayPlusNine"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a1e",
                "FUN_08004b80"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004ccc": {
            "entrypoint": "0x08004ccc",
            "current_name": "process_input_08004ccc",
            "code": "\nundefined4 process_input_08004ccc(uint **input_data)\n\n{\n  uint *value;\n  \n  value = ptr_b;\n  if (*(char *)((int)input_data + 0x3d) == '!') {\n    if (*(short *)((int)input_data + 0x2a) == 0) {\n      if (((value == (uint *)0x4) || (value == (uint *)0x8)) || (value == (uint *)0xffff0000)) {\n        (*input_data)[1] = (*input_data)[1] & 0xfffff8ff;\n        **input_data = **input_data | 0x200;\n        ptr_c = (uint *)0x0;\n        *(undefined *)((int)input_data + 0x3d) = 0x20;\n        if (*(char *)((int)input_data + 0x3e) == '@') {\n          *(undefined *)((int)input_data + 0x3e) = 0;\n          FUNC_08004b80();\n        }\n        else {\n          *(undefined *)((int)input_data + 0x3e) = 0;\n          FUNC_08004a1e();\n        }\n      }\n      else {\n        (*input_data)[1] = (*input_data)[1] & 0xfffff8ff;\n        ptr_c = (uint *)0x11;\n        *(undefined *)((int)input_data + 0x3e) = 0;\n        *(undefined *)((int)input_data + 0x3d) = 0x20;\n        FUNC_08004a1e();\n      }\n    }\n    else {\n      value = input_data[9];\n      input_data[9] = (uint *)((int)value + 1);\n      (*input_data)[4] = (uint)*(byte *)value;\n      *(short *)((int)input_data + 0x2a) = *(short *)((int)input_data + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004ccc": "process_input_08004ccc",
                "param_1": "input_data",
                "puVar1": "value",
                "param_1[0xb]": "ptr_b",
                "param_1[0xc]": "ptr_c"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a1e",
                "FUN_08004b80"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d6a": {
            "entrypoint": "0x08004d6a",
            "current_name": "FUNC_08004d6a",
            "code": "\nvoid FUNC_08004d6a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004d6a": "FUNC_08004d6a"
            },
            "calling": [
                "FUN_08004e3c",
                "FUN_08004d6c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004d6c": {
            "entrypoint": "0x08004d6c",
            "current_name": "update_flags_and_execute_08004d6c",
            "code": "\nundefined4 updateFlagsAndExecute_08004d6c(uint **parameters)\n\n{\n  uint *pointer;\n  \n  if (*(char *)((int)parameters + 0x3d) == '\\\"') {\n    if (*(ushort *)((int)parameters + 0x2a) < 4) {\n      if (*(ushort *)((int)parameters + 0x2a) - 2 < 2) {\n        if (ptrValue == (uint *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters & 0xfffffbff;\n          **parameters = **parameters | 0x800;\n        }\n        (*parameters)[1] = (*parameters)[1] & 0xfffffbff;\n      }\n      else {\n        if (ptrValue == (uint *)0x2) {\n          **parameters = **parameters | 0x400;\n        }\n        else {\n          **parameters = **parameters & 0xfffffbff;\n        }\n        (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n        pointer = arrayElement;\n        arrayElement = (uint *)((int)pointer + 1);\n        *(char *)pointer = (char)(*parameters)[4];\n        *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n        *(undefined *)((int)parameters + 0x3d) = 0x20;\n        parameters[0xc] = (uint *)0x0;\n        if (*(char *)((int)parameters + 0x3e) == '@') {\n          *(undefined *)((int)parameters + 0x3e) = 0;\n          FUNC_08004d6a();\n        }\n        else {\n          *(undefined *)((int)parameters + 0x3e) = 0;\n          FUNC_08004a20();\n        }\n      }\n    }\n    else {\n      pointer = arrayElement;\n      arrayElement = (uint *)((int)pointer + 1);\n      *(char *)pointer = (char)(*parameters)[4];\n      *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004d6c": "update_flags_and_execute_08004d6c",
                "param_1": "parameters",
                "puVar1": "pointer",
                "param_1[0xb]": "ptrValue",
                "param_1[9]": "arrayElement"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004d6a",
                "FUN_08004a20"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e3c": {
            "entrypoint": "0x08004e3c",
            "current_name": "process_data_08004e3c",
            "code": "\nundefined4 processData_08004e3c(uint **data)\n\n{\n  uint *ptrValue;\n  \n  ptrValue = data[11];\n  if (*(short *)((int)data + 0x2a) == 3) {\n    if (((ptrValue == (uint *)0x4) || (ptrValue == (uint *)0x8)) || (ptrValue == (uint *)0xffff0000)) {\n      **data = **data & 0xfffffbff;\n    }\n    ptrValue = data[9];\n    data[9] = (uint *)((int)ptrValue + 1);\n    *(char *)ptrValue = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  else if (*(short *)((int)data + 0x2a) == 2) {\n    if (((ptrValue == (uint *)0x4) || (ptrValue == (uint *)0x8)) || (ptrValue == (uint *)0xffff0000)) {\n      (*data)[1] = (*data)[1] & 0xfffffcff;\n      **data = **data | 0x200;\n    }\n    else {\n      if (ptrValue == (uint *)0x2) {\n        **data = **data | 0x400;\n      }\n      else {\n        **data = **data & 0xfffffbff;\n      }\n      (*data)[1] = (*data)[1] & 0xfffffcff;\n    }\n    ptrValue = data[9];\n    data[9] = (uint *)((int)ptrValue + 1);\n    *(char *)ptrValue = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    ptrValue = data[9];\n    data[9] = (uint *)((int)ptrValue + 1);\n    *(char *)ptrValue = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n    *(undefined *)((int)data + 0x3d) = 0x20;\n    data[12] = (uint *)0x0;\n    if (*(char *)((int)data + 0x3e) == '@') {\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUNC_08004d6a();\n    }\n    else {\n      *(undefined *)((int)data + 0x3e) = 0;\n      FUNC_08004a20();\n    }\n  }\n  else {\n    ptrValue = data[9];\n    data[9] = (uint *)((int)ptrValue + 1);\n    *(char *)ptrValue = (char)(*data)[4];\n    *(short *)((int)data + 0x2a) = *(short *)((int)data + 0x2a) + -1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004e3c": "process_data_08004e3c",
                "param_1": "data",
                "puVar1": "ptrValue",
                "param_1[0xb]": "data[11]",
                "param_1[9]": "data[9]",
                "param_1[0xc]": "data[12]"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004d6a",
                "FUN_08004a20"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004f3a": {
            "entrypoint": "0x08004f3a",
            "current_name": "FUNC_08004f3a",
            "code": "\nvoid FUNC_08004f3a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004f3a": "FUNC_08004f3a"
            },
            "calling": [
                "FUN_08004f3c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08004f3c": {
            "entrypoint": "0x08004f3c",
            "current_name": "process_function_08004f3c",
            "code": "\nvoid processFunction_08004f3c(uint **functionParams)\n\n{\n  int returnValue;\n  uint *pointerVar2;\n  uint *pointerVar3;\n  \n  if (*(byte *)((int)functionParams + 0x3d) - 0x29 < 2) {\n    functionParams[0xc] = (uint *)0x0;\n    *(undefined *)((int)functionParams + 0x3d) = 0x28;\n  }\n  else {\n    if ((*(char *)((int)functionParams + 0x3d) != '`') && (((*functionParams)[1] & 0x800) == 0)) {\n      *(undefined *)((int)functionParams + 0x3d) = 0x20;\n    }\n    functionParams[0xc] = (uint *)0x0;\n    *(undefined *)((int)functionParams + 0x3e) = 0;\n  }\n  **functionParams = **functionParams & 0xfffff7ff;\n  pointerVar3 = *functionParams;\n  if ((pointerVar3[1] & 0x800) == 0) {\n    if (*(char *)((int)functionParams + 0x3d) == '`') {\n      *(undefined *)((int)functionParams + 0x3d) = 0x20;\n      functionParams[0x10] = (uint *)0x0;\n      if ((pointerVar3[5] & 0x40) != 0) {\n        pointerVar2 = functionParams[9];\n        functionParams[9] = (uint *)((int)pointerVar2 + 1);\n        *(char *)pointerVar2 = (char)pointerVar3[4];\n      }\n      **functionParams = **functionParams & 0xfffffffe;\n      FUNC_08004f3a(functionParams);\n    }\n    else {\n      if ((pointerVar3[5] & 0x40) != 0) {\n        pointerVar2 = functionParams[9];\n        functionParams[9] = (uint *)((int)pointerVar2 + 1);\n        *(char *)pointerVar2 = (char)pointerVar3[4];\n      }\n      FUN_08008020(functionParams);\n    }\n  }\n  else {\n    pointerVar3[1] = pointerVar3[1] & 0xfffff7ff;\n    if (*(char *)((int)functionParams[0xd] + 0x21) == '\\x01') {\n      functionParams[0xe][0xd] = (uint)&LAB_080053cc_1;\n      returnValue = FUN_08004050(functionParams[0xe]);\n      if (returnValue != 0) {\n        if (((*functionParams)[5] & 0x40) != 0) {\n          pointerVar3 = functionParams[9];\n          functionParams[9] = (uint *)((int)pointerVar3 + 1);\n          *(char *)pointerVar3 = (char)(*functionParams)[4];\n        }\n        **functionParams = **functionParams & 0xfffffffe;\n        *(undefined *)((int)functionParams + 0x3d) = 0x20;\n        (*(code *)functionParams[0xe][0xd])();\n      }\n    }\n    else {\n      functionParams[0xd][0xd] = (uint)&LAB_080053cc_1;\n      returnValue = FUN_08004050(functionParams[0xd]);\n      if (returnValue != 0) {\n        **functionParams = **functionParams & 0xfffffffe;\n        *(undefined *)((int)functionParams + 0x3d) = 0x20;\n        (*(code *)functionParams[0xd][0xd])();\n      }\n    }\n  }\n  if ((*(char *)((int)functionParams + 0x3d) == '(') && (((uint)functionParams[0x10] & 4) != 0)) {\n    functionParams[0xb] = (uint *)0xffff0000;\n    functionParams[0xc] = (uint *)0x0;\n    *(undefined *)((int)functionParams + 0x3d) = 0x20;\n    *(undefined *)((int)functionParams + 0x3e) = 0;\n    FUN_08007ff0(functionParams);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004f3c": "process_function_08004f3c",
                "param_1": "functionParams",
                "iVar1": "returnValue",
                "puVar2": "pointerVar2",
                "puVar3": "pointerVar3"
            },
            "calling": [
                "FUN_080052f0",
                "FUN_08005084"
            ],
            "called": [
                "FUN_08008020",
                "FUN_08004050",
                "FUN_08004f3a",
                "FUN_08007ff0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005084": {
            "entrypoint": "0x08005084",
            "current_name": "process_parameters_08005084",
            "code": "\nundefined4 processParameters_08005084(uint **parameters)\n\n{\n  char charValue;\n  uint *ptrVar2;\n  uint *ptrVar3;\n  \n  charValue = *(char *)((int)parameters + 0x3d);\n  (*parameters)[1] = (*parameters)[1] & 0xfffff8ff;\n  **parameters = **parameters | 1;\n  **parameters = **parameters & 0xfffffbff;\n  ptrVar2 = *parameters;\n  if ((ptrVar2[1] & 0x800) != 0) {\n    if ((*(char *)((int)parameters + 0x3d) == '\\\"') || (*(char *)((int)parameters + 0x3d) == '*')) {\n      *(short *)((int)parameters + 0x2a) = (short)*(undefined4 *)(*parameters[0xe] + 4);\n    }\n    else {\n      *(short *)((int)parameters + 0x2a) = (short)*(undefined4 *)(*parameters[0xd] + 4);\n    }\n  }\n  if (*(short *)((int)parameters + 0x2a) != 0) {\n    if ((ptrVar2[5] & 4) != 0) {\n      ptrVar3 = parameters[9];\n      parameters[9] = (uint *)((int)ptrVar3 + 1);\n      *(char *)ptrVar3 = (char)ptrVar2[4];\n      *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n    }\n    if (((*parameters)[5] & 0x40) != 0) {\n      ptrVar2 = parameters[9];\n      parameters[9] = (uint *)((int)ptrVar2 + 1);\n      *(char *)ptrVar2 = (char)(*parameters)[4];\n      *(short *)((int)parameters + 0x2a) = *(short *)((int)parameters + 0x2a) + -1;\n    }\n    parameters[0x10] = (uint *)((uint)parameters[0x10] | 4);\n  }\n  if (parameters[0x10] == (uint *)0x0) {\n    if (((charValue == '(') || (charValue == '*')) || (charValue == ')')) {\n      parameters[0xb] = (uint *)0xffff0000;\n      parameters[0xc] = (uint *)0x0;\n      *(undefined *)((int)parameters + 0x3d) = 0x20;\n      *(undefined *)((int)parameters + 0x3e) = 0;\n      FUN_08007ff0();\n    }\n    else if ((parameters[0xc] == (uint *)0x22) || (charValue == '\\\"')) {\n      parameters[0xc] = (uint *)0x0;\n      *(undefined *)((int)parameters + 0x3d) = 0x20;\n      *(undefined *)((int)parameters + 0x3e) = 0;\n      FUNC_08004a74();\n    }\n  }\n  else {\n    FUN_08004f3c();\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005084": "process_parameters_08005084",
                "param_1": "parameters",
                "cVar1": "charValue",
                "puVar2": "ptrVar2",
                "puVar3": "ptrVar3"
            },
            "calling": [
                "FUN_08005188"
            ],
            "called": [
                "FUN_08004a74",
                "FUN_08007ff0",
                "FUN_08004f3c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005188": {
            "entrypoint": "0x08005188",
            "current_name": "process_flags_08005188",
            "code": "\nvoid processFlags_08005188(int *param_1)\n\n{\n  int pointer;\n  uint flag1;\n  uint flag2;\n  uint flag3;\n  \n  pointer = *param_1;\n  flag3 = *(uint *)(pointer + 0x18);\n  flag1 = *(uint *)(pointer + 0x14);\n  flag2 = *(uint *)(pointer + 4);\n  if ((*(char *)((int)param_1 + 0x3e) == '\\x10') || (*(char *)((int)param_1 + 0x3e) == '@')) {\n    if (((flag1 & 0x10001) == 0) || ((flag2 & 0x200) == 0)) {\n      if (((flag1 & 0x10008) == 0) || ((flag2 & 0x200) == 0)) {\n        if (((flag1 & 0x10002) != 0) && ((flag2 & 0x200) != 0)) {\n          FUN_080043a2(param_1);\n        }\n      }\n      else {\n        FUN_08004396(param_1);\n      }\n    }\n    else {\n      FUN_0800430c(param_1);\n    }\n    if ((flag3 & 0x100004) == 0) {\n      if ((((flag1 & 0x10040) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_08004d6c(param_1);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_08004e3c(param_1);\n        return;\n      }\n    }\n    else {\n      if ((((flag1 & 0x10080) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_08004b82(param_1);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_08004ccc(param_1);\n        return;\n      }\n    }\n  }\n  else {\n    if (((flag1 & 0x10002) != 0) && ((flag2 & 0x200) != 0)) {\n      FUN_08004ac2();\n      return;\n    }\n    if (((flag1 & 0x10010) != 0) && ((flag2 & 0x200) != 0)) {\n      FUN_08005084(param_1);\n      return;\n    }\n    if ((flag3 & 0x100004) == 0) {\n      if ((((flag1 & 0x10040) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_08004a76(param_1);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_0800459c(param_1);\n      }\n    }\n    else {\n      if ((((flag1 & 0x10080) != 0) && ((flag2 & 0x400) != 0)) && ((flag1 & 0x10004) == 0)) {\n        FUN_08004a24(param_1);\n        return;\n      }\n      if (((flag1 & 0x10004) != 0) && ((flag2 & 0x200) != 0)) {\n        FUN_0800457c(param_1);\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005188": "process_flags_08005188",
                "iVar1": "pointer",
                "uVar2": "flag1",
                "uVar3": "flag2",
                "uVar4": "flag3"
            },
            "calling": [],
            "called": [
                "FUN_08004e3c",
                "FUN_08004ccc",
                "FUN_08004396",
                "FUN_08004ac2",
                "FUN_08004a76",
                "FUN_0800459c",
                "FUN_0800457c",
                "FUN_080043a2",
                "FUN_08005084",
                "FUN_0800430c",
                "FUN_08004a24",
                "FUN_08004b82",
                "FUN_08004d6c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080052f0": {
            "entrypoint": "0x080052f0",
            "current_name": "process_params_080052f0",
            "code": "\nvoid processParams_080052f0(uint **parameters)\n\n{\n  char character;\n  uint *ptrToParameters;\n  uint value1;\n  uint value2;\n  \n  ptrToParameters = *parameters;\n  value1 = ptrToParameters[5];\n  value2 = ptrToParameters[1];\n  if (((value1 & 0x10100) != 0) && ((value2 & 0x100) != 0)) {\n    parameters[0x10] = (uint *)((uint)parameters[0x10] | 1);\n    ptrToParameters[5] = 0xfffffeff;\n    **parameters = **parameters | 0x8000;\n  }\n  if (((value1 & 0x10200) != 0) && ((value2 & 0x100) != 0)) {\n    parameters[0x10] = (uint *)((uint)parameters[0x10] | 2);\n    (*parameters)[5] = 0xfffffdff;\n  }\n  if (((value1 & 0x10400) != 0) && ((value2 & 0x100) != 0)) {\n    character = *(char *)((int)parameters + 0x3d);\n    if (((*(char *)((int)parameters + 0x3e) == ' ') && (*(short *)((int)parameters + 0x2a) == 0)) &&\n       (((character == '!' || (character == ')')) || ((character == '(' && (parameters[0xc] == (uint *)0x21)))))) {\n      FUN_08004aec(parameters);\n    }\n    else {\n      parameters[0x10] = (uint *)((uint)parameters[0x10] | 4);\n      if (*(char *)((int)parameters + 0x3e) == '\\x10') {\n        **parameters = **parameters | 0x200;\n      }\n      (*parameters)[5] = 0xfffffbff;\n    }\n  }\n  if (((value1 & 0x10800) != 0) && ((value2 & 0x100) != 0)) {\n    parameters[0x10] = (uint *)((uint)parameters[0x10] | 8);\n    (*parameters)[5] = 0xfffff7ff;\n  }\n  if (parameters[0x10] != (uint *)0x0) {\n    FUN_08004f3c(parameters);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080052f0": "process_params_080052f0",
                "param_1": "parameters",
                "cVar1": "character",
                "puVar2": "ptrToParameters",
                "uVar3": "value1",
                "uVar4": "value2"
            },
            "calling": [],
            "called": [
                "FUN_08004aec",
                "FUN_08004f3c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800542a": {
            "entrypoint": "0x0800542a",
            "current_name": "get_value_from_offset_0800542a",
            "code": "\nundefined get_value_from_offset_0800542a(int base_address_of_struct)\n\n{\n  return *(undefined *)(base_address_of_struct + 0x3d);\n}\n\n",
            "renaming": {
                "FUN_0800542a": "get_value_from_offset_0800542a",
                "param_1": "base_address_of_struct"
            },
            "calling": [
                "FUN_08007f0e",
                "FUN_08007e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005430": {
            "entrypoint": "0x08005430",
            "current_name": "get_pointer_from_offset_08005430",
            "code": "\nundefined4 getPointerFromOffset_08005430(int offset)\n\n{\n  return *(undefined4 *)(offset + 0x40);\n}\n\n",
            "renaming": {
                "FUN_08005430": "get_pointer_from_offset_08005430",
                "param_1": "offset"
            },
            "calling": [
                "FUN_08007f0e",
                "FUN_08007e74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005434": {
            "entrypoint": "0x08005434",
            "current_name": "delay_function_08005434",
            "code": "\nvoid delayFunction_08005434(int input)\n\n{\n  bool isDelayComplete;\n  int delayCount;\n  \n  delayCount = input * (DAT_20000018 / 8000);\n  do {\n    isDelayComplete = delayCount != 0;\n    delayCount = delayCount + -1;\n  } while (isDelayComplete);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005434": "delay_function_08005434",
                "param_1": "input",
                "local_4": "delayCount",
                "bVar1": "isDelayComplete"
            },
            "calling": [
                "FUN_08005460"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005460": {
            "entrypoint": "0x08005460",
            "current_name": "check_status_08005460",
            "code": "\n\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nundefined4 checkStatus_08005460(uint *statusFlags)\n\n{\n  int startTime;\n  int currentTime;\n  undefined4 result;\n  uint value;\n  bool flag;\n  \n  if ((*statusFlags & 1) != 0) {\n    if (((_DAT_40021004 & 0xc) == 4) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) != 0)))) {\n      if (((_DAT_40021000 & 0x20000) != 0) && (statusFlags[1] == 0)) {\n        return 1;\n      }\n    }\n    else {\n      value = statusFlags[1];\n      if (value == 0x10000) {\n        _DAT_40021000 = _DAT_40021000 | 0x10000;\n      }\n      else if (value == 0) {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      else if (value == 0x50000) {\n        _DAT_40021000 = _DAT_40021000 | 0x50000;\n      }\n      else {\n        _DAT_40021000 = _DAT_40021000 & 0xfffaffff;\n      }\n      if (statusFlags[1] == 0) {\n        startTime = FUN_08003760();\n        while ((_DAT_40021000 & 0x20000) != 0) {\n          currentTime = FUN_08003760();\n          if (100 < (uint)(currentTime - startTime)) {\n            return 3;\n          }\n        }\n      }\n      else {\n        startTime = FUN_08003760();\n        while ((_DAT_40021000 & 0x20000) == 0) {\n          currentTime = FUN_08003760();\n          if (100 < (uint)(currentTime - startTime)) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*statusFlags & 2) != 0) {\n    if (((_DAT_40021004 & 0xc) == 0) ||\n       (((_DAT_40021004 & 0xc) == 8 && ((_DAT_40021004 & 0x10000) == 0)))) {\n      if (((_DAT_40021000 & 2) != 0) && (statusFlags[4] != 1)) {\n        return 1;\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | statusFlags[5] << 3;\n    }\n    else if (statusFlags[4] == 0) {\n      _DAT_42420000 = 0;\n      startTime = FUN_08003760();\n      while ((_DAT_40021000 & 2) != 0) {\n        currentTime = FUN_08003760();\n        if (2 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420000 = 1;\n      startTime = FUN_08003760();\n      while ((_DAT_40021000 & 2) == 0) {\n        currentTime = FUN_08003760();\n        if (2 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n      _DAT_40021000 = _DAT_40021000 & 0xffffff07 | statusFlags[5] << 3;\n    }\n  }\n  if ((*statusFlags & 8) != 0) {\n    if (statusFlags[6] == 0) {\n      _DAT_42420480 = 0;\n      startTime = FUN_08003760();\n      while ((_DAT_40021024 & 2) != 0) {\n        currentTime = FUN_08003760();\n        if (2 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42420480 = 1;\n      startTime = FUN_08003760();\n      while ((_DAT_40021024 & 2) == 0) {\n        currentTime = FUN_08003760();\n        if (2 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n      FUN_08005434(1);\n    }\n  }\n  if ((*statusFlags & 4) != 0) {\n    flag = (_DAT_4002101c & 0x10000000) == 0;\n    if (flag) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      startTime = FUN_08003760();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        currentTime = FUN_08003760();\n        if (100 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    value = statusFlags[3];\n    if (value == 1) {\n      _DAT_40021020 = _DAT_40021020 | 1;\n    }\n    else if (value == 0) {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    else if (value == 5) {\n      _DAT_40021020 = _DAT_40021020 | 5;\n    }\n    else {\n      _DAT_40021020 = _DAT_40021020 & 0xfffffffa;\n    }\n    if (statusFlags[3] == 0) {\n      startTime = FUN_08003760();\n      while ((_DAT_40021020 & 2) != 0) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      startTime = FUN_08003760();\n      while ((_DAT_40021020 & 2) == 0) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    if (flag) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if (statusFlags[7] == 0) {\n    result = 0;\n  }\n  else if ((_DAT_40021004 & 0xc) == 8) {\n    result = 1;\n  }\n  else if (statusFlags[7] == 2) {\n    _DAT_42420060 = 0;\n    startTime = FUN_08003760();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        if (statusFlags[8] == 0x10000) {\n          _DAT_40021004 = _DAT_40021004 & 0xfffdffff | statusFlags[2];\n        }\n        _DAT_40021004 = _DAT_40021004 & 0xffc2ffff | statusFlags[8] | statusFlags[9];\n        _DAT_42420060 = 1;\n        startTime = FUN_08003760();\n        do {\n          if ((_DAT_40021000 & 0x2000000) != 0) {\n            return 0;\n          }\n          currentTime = FUN_08003760();\n        } while ((uint)(currentTime - startTime) < 3);\n        return 3;\n      }\n      currentTime = FUN_08003760();\n    } while ((uint)(currentTime - startTime) < 3);\n    result = 3;\n  }\n  else {\n    _DAT_42420060 = 0;\n    startTime = FUN_08003760();\n    do {\n      if ((_DAT_40021000 & 0x2000000) == 0) {\n        return 0;\n      }\n      currentTime = FUN_08003760();\n    } while ((uint)(currentTime - startTime) < 3);\n    result = 3;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005460": "check_status_08005460",
                "param_1": "statusFlags",
                "iVar1": "startTime",
                "iVar2": "currentTime",
                "uVar3": "result",
                "uVar4": "value",
                "bVar5": "flag"
            },
            "calling": [
                "FUN_080035b8"
            ],
            "called": [
                "FUN_08005434",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005840": {
            "entrypoint": "0x08005840",
            "current_name": "calculate_time_delay_08005840",
            "code": "\n\n\nuint calculateTimeDelay_08005840(void)\n\n{\n  uint uVar1;\n  undefined2 constantValue5;\n  undefined4 constantValue4;\n  undefined4 constantValue3;\n  undefined4 constantValue2;\n  undefined4 constantValue1;\n  \n  constantValue1 = 0x10100f0e;\n  constantValue2 = 0xd0c0b0a;\n  constantValue3 = 0x9080706;\n  constantValue4 = 0x5040302;\n  constantValue5 = 0x201;\n  if ((_DAT_40021004 & 0xc) == 8) {\n    uVar1 = (uint)*(byte *)((int)&constantValue4 + ((_DAT_40021004 << 10) >> 0x1c));\n    if ((_DAT_40021004 & 0x10000) == 0) {\n      uVar1 = uVar1 * 4000000;\n    }\n    else {\n      uVar1 = (uVar1 * 8000000) /\n              (uint)*(byte *)((int)&constantValue5 - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n    }\n  }\n  else {\n    uVar1 = 8000000;\n  }\n  return uVar1;\n}\n\n",
            "renaming": {
                "FUN_08005840": "calculate_time_delay_08005840",
                "uStack_c": "constantValue1",
                "uStack_10": "constantValue2",
                "uStack_14": "constantValue3",
                "uStack_18": "constantValue4",
                "local_1c": "constantValue5"
            },
            "calling": [
                "FUN_080058d2"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058ac": {
            "entrypoint": "0x080058ac",
            "current_name": "process_data_080058ac",
            "code": "\n\n\nundefined4 processData_080058ac(uint *dataArray,uint dataSize)\n\n{\n  int startTime;\n  int currentTime;\n  uint tempVar;\n  \n  if ((_DAT_40022000 & 7) < dataSize) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | dataSize;\n    if (dataSize != (dataSize & 7)) {\n      return 1;\n    }\n  }\n  if ((*dataArray & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | dataArray[2];\n  }\n  if ((*dataArray & 1) != 0) {\n    tempVar = dataArray[1];\n    if (tempVar == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((tempVar != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = tempVar | _DAT_40021004 & 0xfffffffc;\n    startTime = FUN_08003760();\n    if (dataArray[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else if (dataArray[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - startTime)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (dataSize < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | dataSize;\n    if (dataSize != (dataSize & 7)) {\n      return 1;\n    }\n  }\n  if ((*dataArray & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | dataArray[3];\n  }\n  if ((*dataArray & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | dataArray[4] << 3;\n  }\n  tempVar = FUN_08005840();\n  DAT_20000018 = tempVar >> (&DAT_0800a944)[(_DAT_40021004 << 0x18) >> 0x1c];\n  FUN_080036d8(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080058ac": "process_data_080058ac",
                "param_1": "dataArray",
                "param_2": "dataSize",
                "uVar3": "tempVar",
                "iVar1": "startTime",
                "iVar2": "currentTime"
            },
            "calling": [
                "FUN_080035b8"
            ],
            "called": [
                "FUN_080058d2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058d2": {
            "entrypoint": "0x080058d2",
            "current_name": "initialize_system_080058d2",
            "code": "\n\n\nundefined4 initializeSystem_080058d2(uint *flags,uint value)\n\n{\n  int initialValue;\n  int currentTime;\n  uint configValue;\n  \n  if ((*flags & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffff0f | flags[2];\n  }\n  if ((*flags & 1) != 0) {\n    configValue = flags[1];\n    if (configValue == 1) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        return 1;\n      }\n    }\n    else if ((configValue != 2) && ((_DAT_40021000 & 2) == 0)) {\n      return 1;\n    }\n    _DAT_40021004 = configValue | _DAT_40021004 & 0xfffffffc;\n    initialValue = FUN_08003760();\n    if (flags[1] == 1) {\n      while ((_DAT_40021004 & 0xc) != 4) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - initialValue)) {\n          return 3;\n        }\n      }\n    }\n    else if (flags[1] == 2) {\n      while ((_DAT_40021004 & 0xc) != 8) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - initialValue)) {\n          return 3;\n        }\n      }\n    }\n    else {\n      while ((_DAT_40021004 & 0xc) != 0) {\n        currentTime = FUN_08003760();\n        if (5000 < (uint)(currentTime - initialValue)) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (value < (_DAT_40022000 & 7)) {\n    _DAT_40022000 = _DAT_40022000 & 0xfffffff8 | value;\n    if (value != (value & 7)) {\n      return 1;\n    }\n  }\n  if ((*flags & 4) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xfffff8ff | flags[3];\n  }\n  if ((*flags & 8) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffffc7ff | flags[4] << 3;\n  }\n  configValue = FUN_08005840();\n  DAT_20000018 = configValue >> (&DAT_0800a944)[(_DAT_40021004 << 0x18) >> 0x1c];\n  FUN_080036d8(0xf);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080058d2": "initialize_system_080058d2",
                "param_1": "flags",
                "param_2": "value",
                "uVar3": "configValue",
                "iVar1": "initialValue",
                "iVar2": "currentTime"
            },
            "calling": [
                "FUN_080058ac"
            ],
            "called": [
                "FUN_080036d8",
                "FUN_08003760",
                "FUN_08005840"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a1c": {
            "entrypoint": "0x08005a1c",
            "current_name": "get_data_offset_08005a1c",
            "code": "\nundefined4 get_data_offset_08005a1c(void)\n\n{\n  return DAT_20000018;\n}\n\n",
            "renaming": {
                "FUN_08005a1c": "get_data_offset_08005a1c"
            },
            "calling": [
                "FUN_08005a28",
                "FUN_08005a48",
                "FUN_080035b8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a28": {
            "entrypoint": "0x08005a28",
            "current_name": "shifted_value_on_condition_08005a28",
            "code": "\n\n\nuint shiftedValueOnCondition_08005a28(void)\n\n{\n  uint resultOfFunctionCall;\n  \n  resultOfFunctionCall = FUN_08005a1c();\n  return resultOfFunctionCall >> (&DAT_0800a954)[(uint)(_DAT_40021004 << 0x15) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_08005a28": "shifted_value_on_condition_08005a28",
                "uVar1": "resultOfFunctionCall"
            },
            "calling": [
                "FUN_080045c0",
                "FUN_08006538",
                "FUN_080075dc"
            ],
            "called": [
                "FUN_08005a1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a48": {
            "entrypoint": "0x08005a48",
            "current_name": "shifted_result_08005a48",
            "code": "\n\n\nuint shiftedResult_08005a48(void)\n\n{\n  uint result;\n  \n  result = FUN_08005a1c();\n  return result >> (&DAT_0800a954)[(uint)(_DAT_40021004 << 0x12) >> 0x1d];\n}\n\n",
            "renaming": {
                "FUN_08005a48": "shifted_result_08005a48",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08006538",
                "FUN_08005bb8",
                "FUN_080075dc"
            ],
            "called": [
                "FUN_08005a1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a68": {
            "entrypoint": "0x08005a68",
            "current_name": "initialize_parameters_08005a68",
            "code": "\n\n\nvoid initializeParameters_08005a68(undefined4 *outputArray,uint *inputArray)\n\n{\n  *outputArray = 0xf;\n  outputArray[1] = _DAT_40021004 & 3;\n  outputArray[2] = _DAT_40021004 & 0xf0;\n  outputArray[3] = _DAT_40021004 & 0x700;\n  outputArray[4] = _DAT_40021004 >> 3 & 0x700;\n  *inputArray = _DAT_40022000 & 7;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a68": "initialize_parameters_08005a68",
                "param_1": "outputArray",
                "param_2": "inputArray"
            },
            "calling": [
                "FUN_080075dc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005aa4": {
            "entrypoint": "0x08005aa4",
            "current_name": "update_settings_08005aa4",
            "code": "\n\n\nundefined4 updateSettings_08005aa4(uint *param_1)\n\n{\n  uint tempVar5;\n  uint tempVar4;\n  int loopCounter1;\n  int loopCounter2;\n  bool isFlagSet;\n  \n  if ((*param_1 & 1) != 0) {\n    isFlagSet = (_DAT_4002101c & 0x10000000) == 0;\n    if (isFlagSet) {\n      _DAT_4002101c = _DAT_4002101c | 0x10000000;\n    }\n    if ((_DAT_40007000 & 0x100) == 0) {\n      _DAT_40007000 = _DAT_40007000 | 0x100;\n      loopCounter1 = FUN_08003760();\n      while ((_DAT_40007000 & 0x100) == 0) {\n        loopCounter2 = FUN_08003760();\n        if (100 < (uint)(loopCounter2 - loopCounter1)) {\n          return 3;\n        }\n      }\n    }\n    if (((_DAT_40021020 & 0x300) != 0) && ((_DAT_40021020 & 0x300) != (settingsValue2 & 0x300))) {\n      tempVar4 = _DAT_40021020 & 0xfffffcff;\n      _DAT_42420440 = 0;\n      tempVar5 = _DAT_40021020 & 1;\n      _DAT_40021020 = tempVar4;\n      if (tempVar5 != 0) {\n        loopCounter1 = FUN_08003760();\n        while ((_DAT_40021020 & 2) == 0) {\n          loopCounter2 = FUN_08003760();\n          if (5000 < (uint)(loopCounter2 - loopCounter1)) {\n            return 3;\n          }\n        }\n      }\n    }\n    _DAT_40021020 = _DAT_40021020 & 0xfffffcff | settingsValue2;\n    if (isFlagSet) {\n      _DAT_4002101c = _DAT_4002101c & 0xefffffff;\n    }\n  }\n  if ((*param_1 & 2) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffff3fff | param_1[2];\n  }\n  if ((*param_1 & 0x10) != 0) {\n    _DAT_40021004 = _DAT_40021004 & 0xffbfffff | param_1[3];\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005aa4": "update_settings_08005aa4",
                "uVar1": "tempVar5",
                "uVar2": "tempVar4",
                "iVar3": "loopCounter1",
                "iVar4": "loopCounter2",
                "bVar5": "isFlagSet",
                "param_1[1]": "settingsValue2"
            },
            "calling": [
                "FUN_080035b8"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005bb8": {
            "entrypoint": "0x08005bb8",
            "current_name": "calculate_value_08005bb8",
            "code": "\n\n\nuint calculateValue_08005bb8(int inputValue)\n\n{\n  uint result;\n  undefined2 constant1;\n  undefined4 constant2;\n  undefined4 constant3;\n  undefined4 constant4;\n  undefined4 constant5;\n  \n  constant5 = 0x10100f0e;\n  constant4 = 0xd0c0b0a;\n  constant3 = 0x9080706;\n  constant2 = 0x5040302;\n  constant1 = 0x201;\n  if (inputValue == 2) {\n    result = FUN_08005a48();\n    result = result / ((((_DAT_40021004 << 0x10) >> 0x1e) + 1) * 2);\n  }\n  else if (inputValue == 0x10) {\n    if ((_DAT_40021000 & 0x1000000) == 0) {\n      result = 0;\n    }\n    else {\n      if ((_DAT_40021004 & 0x10000) == 0) {\n        result = 4000000;\n      }\n      else {\n        result = 8000000 / *(byte *)((int)&constant1 - ((int)(_DAT_40021004 << 0xe) >> 0x1f));\n      }\n      result = result * *(byte *)((int)&constant2 + ((_DAT_40021004 << 10) >> 0x1c));\n      if ((_DAT_40021004 & 0x400000) == 0) {\n        result = (result * 2) / 3;\n      }\n    }\n  }\n  else if (inputValue == 1) {\n    if ((_DAT_40021020 & 0x302) == 0x102) {\n      result = 0x8000;\n    }\n    else if (((_DAT_40021020 & 0x300) == 0x200) && ((_DAT_40021024 & 2) != 0)) {\n      result = 32000;\n    }\n    else if ((_DAT_40021020 & 0x300) == 0x300) {\n      if ((_DAT_40021000 & 0x20000) == 0) {\n        result = 0;\n      }\n      else {\n        result = 0xf424;\n      }\n    }\n    else {\n      result = 0;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08005bb8": "calculate_value_08005bb8",
                "param_1": "inputValue",
                "uVar1": "result",
                "local_24": "constant1",
                "uStack_20": "constant2",
                "uStack_1c": "constant3",
                "uStack_18": "constant4",
                "uStack_14": "constant5"
            },
            "calling": [
                "FUN_0800376c",
                "FUN_08003e20"
            ],
            "called": [
                "FUN_08005a48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cb4": {
            "entrypoint": "0x08005cb4",
            "current_name": "update_data_08005cb4",
            "code": "\n\n\nvoid updateData_08005cb4(uint **data)\n\n{\n  if (((**data & 2) != 0) && (((*data)[1] & 2) != 0)) {\n    FUN_080073c0();\n    (*data)[1] = 0xfffffffd;\n  }\n  _DAT_40010414 = 0x20000;\n  *(undefined *)((int)data + 0x11) = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005cb4": "update_data_08005cb4",
                "param_1": "data"
            },
            "calling": [],
            "called": [
                "FUN_080073c0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cec": {
            "entrypoint": "0x08005cec",
            "current_name": "update_memory_08005cec",
            "code": "\nvoid updateMemory_08005cec(int baseAddress,uint *values)\n\n{\n  uint updatedValue1;\n  uint updatedValue2;\n  uint newValue;\n  \n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) & 0xfffffffe;\n  updatedValue2 = *(uint *)(baseAddress + 4);\n  newValue = *values;\n  updatedValue1 = *(uint *)(baseAddress + 0x20) & 0xfffffffd | values[2];\n  if (baseAddress == 0x40012c00) {\n    updatedValue1 = (updatedValue1 & 0xfffffff7 | values[3]) & 0xfffffffb;\n    updatedValue2 = updatedValue2 & 0xfffffcff | values[5] | values[6];\n  }\n  *(uint *)(baseAddress + 4) = updatedValue2;\n  *(uint *)(baseAddress + 0x18) = *(uint *)(baseAddress + 0x18) & 0xffffff8c | newValue;\n  *(uint *)(baseAddress + 0x34) = values[1];\n  *(uint *)(baseAddress + 0x20) = updatedValue1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005cec": "update_memory_08005cec",
                "param_1": "baseAddress",
                "param_2": "values",
                "uVar1": "updatedValue1",
                "uVar2": "updatedValue2",
                "uVar3": "newValue"
            },
            "calling": [
                "FUN_08006186",
                "FUN_08006128"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005d48": {
            "entrypoint": "0x08005d48",
            "current_name": "update_params_08005d48",
            "code": "\nvoid updateParams_08005d48(int baseAddress,uint *paramArray)\n\n{\n  uint updatedVar1;\n  uint updatedVar2;\n  uint updatedVar3;\n  \n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) & 0xfffffeff;\n  updatedVar2 = *(uint *)(baseAddress + 4);\n  updatedVar3 = *paramArray;\n  updatedVar1 = *(uint *)(baseAddress + 0x20) & 0xfffffdff | paramArray[2] << 8;\n  if (baseAddress == 0x40012c00) {\n    updatedVar1 = (updatedVar1 & 0xfffff7ff | paramArray[3] << 8) & 0xfffffbff;\n    updatedVar2 = updatedVar2 & 0xffffcfff | paramArray[5] << 4 | paramArray[6] << 4;\n  }\n  *(uint *)(baseAddress + 4) = updatedVar2;\n  *(uint *)(baseAddress + 0x1c) = *(uint *)(baseAddress + 0x1c) & 0xffffff8c | updatedVar3;\n  *(uint *)(baseAddress + 0x3c) = paramArray[1];\n  *(uint *)(baseAddress + 0x20) = updatedVar1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005d48": "update_params_08005d48",
                "param_1": "baseAddress",
                "param_2": "paramArray",
                "uVar1": "updatedVar1",
                "uVar2": "updatedVar2",
                "uVar3": "updatedVar3"
            },
            "calling": [
                "FUN_08006186",
                "FUN_08006128"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005dac": {
            "entrypoint": "0x08005dac",
            "current_name": "update_configuration_08005dac",
            "code": "\nvoid updateConfiguration_08005dac(int configAddress,int *configValues)\n\n{\n  uint tempValue;\n  int value1;\n  int value2;\n  \n  *(uint *)(configAddress + 0x20) = *(uint *)(configAddress + 0x20) & 0xffffefff;\n  tempValue = *(uint *)(configAddress + 4);\n  value1 = *configValues;\n  value2 = configValues[2];\n  if (configAddress == 0x40012c00) {\n    tempValue = tempValue & 0xffffbfff | configValues[5] << 6;\n  }\n  *(uint *)(configAddress + 4) = tempValue;\n  *(uint *)(configAddress + 0x1c) = *(uint *)(configAddress + 0x1c) & 0xffff8cff | value1 << 8;\n  *(int *)(configAddress + 0x40) = configValues[1];\n  *(uint *)(configAddress + 0x20) = *(uint *)(configAddress + 0x20) & 0xffffdfff | value2 << 0xc;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005dac": "update_configuration_08005dac",
                "param_1": "configAddress",
                "param_2": "configValues",
                "uVar1": "tempValue",
                "iVar2": "value1",
                "iVar3": "value2"
            },
            "calling": [
                "FUN_08006186",
                "FUN_08006128"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005df4": {
            "entrypoint": "0x08005df4",
            "current_name": "update_param_08005df4",
            "code": "\nvoid updateParam_08005df4(uint **param)\n\n{\n  uint *ptr;\n  \n  *(undefined *)((int)param + 0x3d) = 2;\n  ptr = *param;\n  if ((ptr[8] & 0x1111) == 0) {\n    if ((ptr[8] & 0x444) == 0) {\n      *ptr = *ptr & 0xfffffffe;\n    }\n  }\n  FUN_08007710(param);\n  *(undefined *)((int)param + 0x3d) = 0;\n  *(undefined *)(param + 0xf) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005df4": "update_param_08005df4",
                "param_1": "param",
                "puVar1": "ptr",
                "puVar1[8]": "ptr[8]"
            },
            "calling": [
                "FUN_080076e0"
            ],
            "called": [
                "FUN_08007710"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005e2e": {
            "entrypoint": "0x08005e2e",
            "current_name": "update_data_08005e2e",
            "code": "\nvoid updateData_08005e2e(uint **data)\n\n{\n  uint *ptr;\n  \n  *(undefined *)((int)data + 0x3d) = 2;\n  ptr = *data;\n  if ((ptr[8] & 0x1111) == 0) {\n    if ((ptr[8] & 0x444) == 0) {\n      *ptr = *ptr & 0xfffffffe;\n    }\n  }\n  FUN_08007110(data);\n  *(undefined *)((int)data + 0x3d) = 0;\n  *(undefined *)(data + 0xf) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e2e": "update_data_08005e2e",
                "param_1": "data",
                "puVar1": "ptr"
            },
            "calling": [
                "FUN_080071e4"
            ],
            "called": [
                "FUN_08007110"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005e68": {
            "entrypoint": "0x08005e68",
            "current_name": "FUNC_08005e68",
            "code": "\nvoid FUNC_08005e68(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e68": "FUNC_08005e68"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005e6a": {
            "entrypoint": "0x08005e6a",
            "current_name": "FUNC_08005e6a",
            "code": "\nvoid FUNC_08005e6a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e6a": "FUNC_08005e6a"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005e6c": {
            "entrypoint": "0x08005e6c",
            "current_name": "FUNC_08005e6c",
            "code": "\nvoid FUNC_08005e6c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e6c": "FUNC_08005e6c"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005e6e": {
            "entrypoint": "0x08005e6e",
            "current_name": "handle_param_08005e6e",
            "code": "\nvoid handle_param_08005e6e(int *param)\n\n{\n  int var1;\n  \n  var1 = *param;\n  if (((*(uint *)(var1 + 0x10) & 2) != 0) && ((*(uint *)(var1 + 0xc) & 2) != 0)) {\n    *(undefined4 *)(var1 + 0x10) = 0xfffffffd;\n    *(undefined *)(param + 7) = 1;\n    if ((*(uint *)(*param + 0x18) & 3) == 0) {\n      FUN_0800771c();\n      FUNC_08005e6a(param);\n    }\n    else {\n      FUNC_08005e68();\n    }\n    *(undefined *)(param + 7) = 0;\n  }\n  var1 = *param;\n  if (((*(uint *)(var1 + 0x10) & 4) != 0) && ((*(uint *)(var1 + 0xc) & 4) != 0)) {\n    *(undefined4 *)(var1 + 0x10) = 0xfffffffb;\n    *(undefined *)(param + 7) = 2;\n    if ((*(uint *)(*param + 0x18) & 0x300) == 0) {\n      FUN_0800771c(param);\n      FUNC_08005e6a(param);\n    }\n    else {\n      FUNC_08005e68(param);\n    }\n    *(undefined *)(param + 7) = 0;\n  }\n  var1 = *param;\n  if (((*(uint *)(var1 + 0x10) & 8) != 0) && ((*(uint *)(var1 + 0xc) & 8) != 0)) {\n    *(undefined4 *)(var1 + 0x10) = 0xfffffff7;\n    *(undefined *)(param + 7) = 4;\n    if ((*(uint *)(*param + 0x1c) & 3) == 0) {\n      FUN_0800771c(param);\n      FUNC_08005e6a(param);\n    }\n    else {\n      FUNC_08005e68(param);\n    }\n    *(undefined *)(param + 7) = 0;\n  }\n  var1 = *param;\n  if (((*(uint *)(var1 + 0x10) & 0x10) != 0) && ((*(uint *)(var1 + 0xc) & 0x10) != 0)) {\n    *(undefined4 *)(var1 + 0x10) = 0xffffffef;\n    *(undefined *)(param + 7) = 8;\n    if ((*(uint *)(*param + 0x1c) & 0x300) == 0) {\n      FUN_0800771c(param);\n      FUNC_08005e6a(param);\n    }\n    else {\n      FUNC_08005e68(param);\n    }\n    *(undefined *)(param + 7) = 0;\n  }\n  var1 = *param;\n  if (((*(uint *)(var1 + 0x10) & 1) != 0) && ((*(uint *)(var1 + 0xc) & 1) != 0)) {\n    *(undefined4 *)(var1 + 0x10) = 0xfffffffe;\n    FUN_08007736(param);\n  }\n  var1 = *param;\n  if (((*(uint *)(var1 + 0x10) & 0x80) != 0) && ((*(uint *)(var1 + 0xc) & 0x80) != 0)) {\n    *(undefined4 *)(var1 + 0x10) = 0xffffff7f;\n    FUNC_080064ae(param);\n  }\n  var1 = *param;\n  if (((*(uint *)(var1 + 0x10) & 0x40) != 0) && ((*(uint *)(var1 + 0xc) & 0x40) != 0)) {\n    *(undefined4 *)(var1 + 0x10) = 0xffffffbf;\n    FUNC_08005e6c(param);\n  }\n  var1 = *param;\n  if (((*(uint *)(var1 + 0x10) & 0x20) != 0) && ((*(uint *)(var1 + 0xc) & 0x20) != 0)) {\n    *(undefined4 *)(var1 + 0x10) = 0xffffffdf;\n    FUNC_080064ac(param);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005e6e": "handle_param_08005e6e",
                "param_1": "param",
                "iVar1": "var1"
            },
            "calling": [],
            "called": [
                "FUN_0800771c",
                "FUN_08005e6a",
                "FUN_08005e6c",
                "FUN_080064ae",
                "FUN_08005e68",
                "FUN_080064ac",
                "FUN_08007736"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005fe8": {
            "entrypoint": "0x08005fe8",
            "current_name": "update_memory_region_08005fe8",
            "code": "\nvoid updateMemoryRegion_08005fe8(uint *targetMemoryRegion,uint *sourceMemoryRegion)\n\n{\n  uint value;\n  \n  value = *targetMemoryRegion;\n  if ((((targetMemoryRegion == (uint *)0x40012c00) || (targetMemoryRegion == (uint *)0x40000000)) ||\n      (targetMemoryRegion == (uint *)0x40000400)) || (targetMemoryRegion == (uint *)0x40000800)) {\n    value = value & 0xffffff8f | sourceValue1;\n  }\n  if (((targetMemoryRegion == (uint *)0x40012c00) || (targetMemoryRegion == (uint *)0x40000000)) ||\n     ((targetMemoryRegion == (uint *)0x40000400 || (targetMemoryRegion == (uint *)0x40000800)))) {\n    value = value & 0xfffffcff | sourceValue2;\n  }\n  *targetMemoryRegion = value & 0xffffff7f | sourceValue3;\n  targetMemoryRegionData1 = sourceValue4;\n  targetMemoryRegionData2 = *sourceMemoryRegion;\n  if (targetMemoryRegion == (uint *)0x40012c00) {\n    uRam40012c30 = sourceMemoryRegionData;\n  }\n  targetMemoryRegion[5] = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005fe8": "update_memory_region_08005fe8",
                "param_1": "targetMemoryRegion",
                "param_2": "sourceMemoryRegion",
                "uVar1": "value",
                "param_2[1]": "sourceValue1",
                "param_2[3]": "sourceValue2",
                "param_2[5]": "sourceValue3",
                "param_2[2]": "sourceValue4",
                "param_1[0xb]": "targetMemoryRegionData1",
                "param_1[10]": "targetMemoryRegionData2",
                "param_2[4]": "sourceMemoryRegionData"
            },
            "calling": [
                "FUN_08006092",
                "FUN_08006060"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006060": {
            "entrypoint": "0x08006060",
            "current_name": "update_status_08006060",
            "code": "\nundefined4 updateStatus_08006060(undefined4 *data)\n\n{\n  if (data != (undefined4 *)0x0) {\n    if (*(char *)((int)data + 0x3d) == '\\0') {\n      *(undefined *)(data + 0xf) = 0;\n      FUN_08007708();\n    }\n    *(undefined *)((int)data + 0x3d) = 2;\n    FUN_08005fe8(*data,data + 1);\n    *(undefined *)((int)data + 0x3d) = 1;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08006060": "update_status_08006060",
                "param_1": "data"
            },
            "calling": [
                "FUN_08007648"
            ],
            "called": [
                "FUN_08007708",
                "FUN_08005fe8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006092": {
            "entrypoint": "0x08006092",
            "current_name": "validate_and_process_data_08006092",
            "code": "\nundefined4 validate_and_process_data_08006092(undefined4 *data_ptr)\n\n{\n  if (data_ptr != (undefined4 *)0x0) {\n    if (*(char *)((int)data_ptr + 0x3d) == '\\0') {\n      *(undefined *)(data_ptr + 0xf) = 0;\n      FUN_08006e68();\n    }\n    *(undefined *)((int)data_ptr + 0x3d) = 2;\n    FUN_08005fe8(*data_ptr,data_ptr + 1);\n    *(undefined *)((int)data_ptr + 0x3d) = 1;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08006092": "validate_and_process_data_08006092",
                "param_1": "data_ptr"
            },
            "calling": [
                "FUN_08007118"
            ],
            "called": [
                "FUN_08006e68",
                "FUN_08005fe8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080060c4": {
            "entrypoint": "0x080060c4",
            "current_name": "update_params_080060c4",
            "code": "\nvoid updateParams_080060c4(int dataAddress,int *params)\n\n{\n  uint updatedValue1;\n  uint updatedValue2;\n  int paramValue;\n  \n  *(uint *)(dataAddress + 0x20) = *(uint *)(dataAddress + 0x20) & 0xffffffef;\n  updatedValue2 = *(uint *)(dataAddress + 4);\n  paramValue = *params;\n  updatedValue1 = *(uint *)(dataAddress + 0x20) & 0xffffffdf | paramValue2 << 4;\n  if (dataAddress == 0x40012c00) {\n    updatedValue1 = (updatedValue1 & 0xffffff7f | paramValue3 << 4) & 0xffffffbf;\n    updatedValue2 = updatedValue2 & 0xfffff3ff | paramValue4 << 2 | paramValue5 << 2;\n  }\n  *(uint *)(dataAddress + 4) = updatedValue2;\n  *(uint *)(dataAddress + 0x18) = *(uint *)(dataAddress + 0x18) & 0xffff8cff | paramValue << 8;\n  *(int *)(dataAddress + 0x38) = paramValue1;\n  *(uint *)(dataAddress + 0x20) = updatedValue1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080060c4": "update_params_080060c4",
                "param_1": "dataAddress",
                "param_2": "params",
                "uVar1": "updatedValue1",
                "uVar2": "updatedValue2",
                "iVar3": "paramValue",
                "param_2[1]": "paramValue1",
                "param_2[2]": "paramValue2",
                "param_2[3]": "paramValue3",
                "param_2[5]": "paramValue4",
                "param_2[6]": "paramValue5"
            },
            "calling": [
                "FUN_08006186",
                "FUN_08006128"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006128": {
            "entrypoint": "0x08006128",
            "current_name": "process_data_08006128",
            "code": "\nundefined4 processData_08006128(undefined4 *dataPtr,undefined4 size,undefined4 choice)\n\n{\n  if (*(char *)(dataPtr + 0xf) != '\\x01') {\n    *(undefined *)(dataPtr + 0xf) = 1;\n    *(undefined *)((int)dataPtr + 0x3d) = 2;\n    switch(choice) {\n    case 0:\n      FUN_08005cec(*dataPtr);\n      break;\n    case 4:\n      FUN_080060c4(*dataPtr);\n      break;\n    case 8:\n      FUN_08005d48(*dataPtr);\n      break;\n    case 0xc:\n      FUN_08005dac(*dataPtr);\n    }\n    *(undefined *)((int)dataPtr + 0x3d) = 1;\n    *(undefined *)(dataPtr + 0xf) = 0;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08006128": "process_data_08006128",
                "param_1": "dataPtr",
                "param_2": "size",
                "param_3": "choice",
                "switch(param_3)": "switch(choice)"
            },
            "calling": [
                "FUN_08007648"
            ],
            "called": [
                "FUN_08005d48",
                "FUN_08005dac",
                "FUN_080060c4",
                "FUN_08005cec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006186": {
            "entrypoint": "0x08006186",
            "current_name": "set_permissions_08006186",
            "code": "\nundefined4 setPermissions_08006186(int *pointer,int value,undefined4 type)\n\n{\n  if (*(char *)(pointer + 0xf) != '\\x01') {\n    *(undefined *)(pointer + 0xf) = 1;\n    *(undefined *)((int)pointer + 0x3d) = 2;\n    switch(type) {\n    case 0:\n      FUN_08005cec(*pointer);\n      *(uint *)(*pointer + 0x18) = *(uint *)(*pointer + 0x18) | 8;\n      *(uint *)(*pointer + 0x18) = *(uint *)(*pointer + 0x18) & 0xfffffffb;\n      *(uint *)(*pointer + 0x18) = *(uint *)(*pointer + 0x18) | *(uint *)(value + 0x10);\n      break;\n    case 4:\n      FUN_080060c4(*pointer);\n      *(uint *)(*pointer + 0x18) = *(uint *)(*pointer + 0x18) | 0x800;\n      *(uint *)(*pointer + 0x18) = *(uint *)(*pointer + 0x18) & 0xfffffbff;\n      *(uint *)(*pointer + 0x18) = *(uint *)(*pointer + 0x18) | *(int *)(value + 0x10) << 8;\n      break;\n    case 8:\n      FUN_08005d48(*pointer);\n      *(uint *)(*pointer + 0x1c) = *(uint *)(*pointer + 0x1c) | 8;\n      *(uint *)(*pointer + 0x1c) = *(uint *)(*pointer + 0x1c) & 0xfffffffb;\n      *(uint *)(*pointer + 0x1c) = *(uint *)(*pointer + 0x1c) | *(uint *)(value + 0x10);\n      break;\n    case 0xc:\n      FUN_08005dac(*pointer);\n      *(uint *)(*pointer + 0x1c) = *(uint *)(*pointer + 0x1c) | 0x800;\n      *(uint *)(*pointer + 0x1c) = *(uint *)(*pointer + 0x1c) & 0xfffffbff;\n      *(uint *)(*pointer + 0x1c) = *(uint *)(*pointer + 0x1c) | *(int *)(value + 0x10) << 8;\n    }\n    *(undefined *)((int)pointer + 0x3d) = 1;\n    *(undefined *)(pointer + 0xf) = 0;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_08006186": "set_permissions_08006186",
                "param_1": "pointer",
                "param_2": "value",
                "param_3": "type"
            },
            "calling": [
                "FUN_08007118"
            ],
            "called": [
                "FUN_08005d48",
                "FUN_08005dac",
                "FUN_080060c4",
                "FUN_08005cec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006262": {
            "entrypoint": "0x08006262",
            "current_name": "update_bit_value_08006262",
            "code": "\nvoid updateBitValue_08006262(int baseAddress,uint bitPosition,int newValue)\n\n{\n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) & ~(1 << (bitPosition & 0xff));\n  *(uint *)(baseAddress + 0x20) = *(uint *)(baseAddress + 0x20) | newValue << (bitPosition & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006262": "update_bit_value_08006262",
                "param_1": "baseAddress",
                "param_2": "bitPosition",
                "param_3": "newValue"
            },
            "calling": [
                "FUN_080063c0",
                "FUN_08006280",
                "FUN_080062f4",
                "FUN_08006390"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006280": {
            "entrypoint": "0x08006280",
            "current_name": "update_permissions_and_flag_08006280",
            "code": "\nundefined4 updatePermissionsAndFlag_08006280(uint **data,undefined4 flag)\n\n{\n  switch(flag) {\n  case 0:\n    (*data)[3] = (*data)[3] | 2;\n    break;\n  case 4:\n    (*data)[3] = (*data)[3] | 4;\n    break;\n  case 8:\n    (*data)[3] = (*data)[3] | 8;\n    break;\n  case 0xc:\n    (*data)[3] = (*data)[3] | 0x10;\n  }\n  FUN_08006262(*data,flag,1);\n  if (*data == (uint *)0x40012c00) {\n    ram_address = ram_address | 0x8000;\n  }\n  **data = **data | 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006280": "update_permissions_and_flag_08006280",
                "param_1": "data",
                "param_2": "flag",
                "uRam40012c44": "ram_address"
            },
            "calling": [
                "FUN_08007648"
            ],
            "called": [
                "FUN_08006262"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080062f4": {
            "entrypoint": "0x080062f4",
            "current_name": "set_bitmask_and_check_080062f4",
            "code": "\nundefined4 setBitmaskAndCheck_080062f4(uint **data,undefined4 bitIndex)\n\n{\n  uint *currentData;\n  \n  switch(bitIndex) {\n  case 0:\n    (*data)[3] = (*data)[3] & 0xfffffffd;\n    break;\n  case 4:\n    (*data)[3] = (*data)[3] & 0xfffffffb;\n    break;\n  case 8:\n    (*data)[3] = (*data)[3] & 0xfffffff7;\n    break;\n  case 0xc:\n    (*data)[3] = (*data)[3] & 0xffffffef;\n  }\n  FUN_08006262(*data,bitIndex,0);\n  if (((*data == (uint *)0x40012c00) && ((constant1 & 0x1111) == 0)) &&\n     ((constant1 & 0x444) == 0)) {\n    constant2 = constant2 & 0xffff7fff;\n  }\n  currentData = *data;\n  if (((bitmask2 & 0x1111) == 0) && ((bitmask2 & 0x444) == 0)) {\n    *currentData = *currentData & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080062f4": "set_bitmask_and_check_080062f4",
                "param_1": "data",
                "param_2": "bitIndex",
                "puVar1": "currentData",
                "uRam40012c20": "constant1",
                "uRam40012c44": "constant2",
                "puVar1[8]": "bitmask2"
            },
            "calling": [
                "FUN_080076e0"
            ],
            "called": [
                "FUN_08006262"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006390": {
            "entrypoint": "0x08006390",
            "current_name": "set_flag_and_value_08006390",
            "code": "\nundefined4 setFlagAndValue_08006390(uint **parameterArray,undefined4 value)\n\n{\n  FUN_08006262(*parameterArray,value,1);\n  if (*parameterArray == (uint *)0x40012c00) {\n    flagValue = flagValue | 0x8000;\n  }\n  **parameterArray = **parameterArray | 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006390": "set_flag_and_value_08006390",
                "param_1": "parameterArray",
                "param_2": "value",
                "uRam40012c44": "flagValue"
            },
            "calling": [
                "FUN_08007118"
            ],
            "called": [
                "FUN_08006262"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080063c0": {
            "entrypoint": "0x080063c0",
            "current_name": "update_flags_and_values_080063c0",
            "code": "\nundefined4 updateFlagsAndValues_080063c0(uint **values,undefined4 flag)\n\n{\n  uint *pointer;\n  \n  FUN_08006262(*values,flag,0);\n  if (((*values == (uint *)0x40012c00) && ((constantValue2 & 0x1111) == 0)) &&\n     ((constantValue2 & 0x444) == 0)) {\n    constantValue3 = constantValue3 & 0xffff7fff;\n  }\n  pointer = *values;\n  if (((pointer[8] & 0x1111) == 0) && ((pointer[8] & 0x444) == 0)) {\n    *pointer = *pointer & 0xfffffffe;\n  }\n  *(undefined *)((int)values + 0x3d) = 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080063c0": "update_flags_and_values_080063c0",
                "param_1": "values",
                "param_2": "flag",
                "puVar1": "pointer",
                "uRam40012c20": "constantValue2",
                "uRam40012c44": "constantValue3"
            },
            "calling": [
                "FUN_080071e4"
            ],
            "called": [
                "FUN_08006262"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006420": {
            "entrypoint": "0x08006420",
            "current_name": "update_register_value_08006420",
            "code": "\nvoid updateRegisterValue_08006420(int registerAddress,uint bitPosition,int valueToUpdate)\n\n{\n  *(uint *)(registerAddress + 0x20) = *(uint *)(registerAddress + 0x20) & ~(4 << (bitPosition & 0xff));\n  *(uint *)(registerAddress + 0x20) = *(uint *)(registerAddress + 0x20) | valueToUpdate << (bitPosition & 0xff);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006420": "update_register_value_08006420",
                "param_1": "registerAddress",
                "param_2": "bitPosition",
                "param_3": "valueToUpdate"
            },
            "calling": [
                "FUN_0800643c",
                "FUN_08006460"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800643c": {
            "entrypoint": "0x0800643c",
            "current_name": "update_flags_0800643c",
            "code": "\nundefined4 updateFlags_0800643c(uint **ptr_array,undefined4 value)\n\n{\n  FUN_08006420(*ptr_array,value,4);\n  (*ptr_array)[0x11] = (*ptr_array)[0x11] | 0x8000;\n  **ptr_array = **ptr_array | 1;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800643c": "update_flags_0800643c",
                "param_1": "ptr_array",
                "param_2": "value"
            },
            "calling": [
                "FUN_08007118"
            ],
            "called": [
                "FUN_08006420"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006460": {
            "entrypoint": "0x08006460",
            "current_name": "clear_flags_and_bits_08006460",
            "code": "\nundefined4 clearFlagsAndBits_08006460(uint **dataPointer,undefined4 value)\n\n{\n  uint *pointer;\n  \n  FUN_08006420(*dataPointer,value,0);\n  pointer = *dataPointer;\n  if (((flag1 & 0x1111) == 0) && ((flag1 & 0x444) == 0)) {\n    flag2 = flag2 & 0xffff7fff;\n  }\n  pointer = *dataPointer;\n  if (((flag1 & 0x1111) == 0) && ((flag1 & 0x444) == 0)) {\n    *pointer = *pointer & 0xfffffffe;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006460": "clear_flags_and_bits_08006460",
                "param_1": "dataPointer",
                "param_2": "value",
                "puVar1": "pointer",
                "puVar1[8]": "flag1",
                "puVar1[0x11]": "flag2"
            },
            "calling": [
                "FUN_080071e4"
            ],
            "called": [
                "FUN_08006420"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080064ac": {
            "entrypoint": "0x080064ac",
            "current_name": "FUNC_080064ac",
            "code": "\nvoid FUNC_080064ac(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080064ac": "FUNC_080064ac"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080064ae": {
            "entrypoint": "0x080064ae",
            "current_name": "FUNC_080064ae",
            "code": "\nvoid FUNC_080064ae(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080064ae": "FUNC_080064ae"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080064b0": {
            "entrypoint": "0x080064b0",
            "current_name": "update_memory_080064b0",
            "code": "\nvoid updateMemory_080064b0(int *memoryPtr)\n\n{\n  *(uint *)(*memoryPtr + 0xc) = *(uint *)(*memoryPtr + 0xc) & 0xfffffedf;\n  *(uint *)(*memoryPtr + 0x14) = *(uint *)(*memoryPtr + 0x14) & 0xfffffffe;\n  *(undefined *)((int)memoryPtr + 0x3a) = 0x20;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080064b0": "update_memory_080064b0",
                "param_1": "memoryPtr"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080064cc": {
            "entrypoint": "0x080064cc",
            "current_name": "process_param_080064cc",
            "code": "\nundefined4 processParam_080064cc(int *paramArray)\n\n{\n  short decrementedValue;\n  byte *bytePointer;\n  \n  if (*(char *)((int)paramArray + 0x39) != '!') {\n    return 2;\n  }\n  if (paramArray[2] == 0x1000) {\n    *(uint *)(*paramArray + 4) = *(ushort *)paramArray[8] & 0x1ff;\n    if (paramArray[4] == 0) {\n      paramArray[8] = paramArray[8] + 2;\n    }\n    else {\n      paramArray[8] = paramArray[8] + 1;\n    }\n  }\n  else {\n    bytePointer = (byte *)paramArray[8];\n    paramArray[8] = (int)(bytePointer + 1);\n    *(uint *)(*paramArray + 4) = (uint)*bytePointer;\n  }\n  decrementedValue = *(short *)((int)paramArray + 0x26) + -1;\n  *(short *)((int)paramArray + 0x26) = decrementedValue;\n  if (decrementedValue == 0) {\n    *(uint *)(*paramArray + 0xc) = *(uint *)(*paramArray + 0xc) & 0xffffff7f;\n    *(uint *)(*paramArray + 0xc) = *(uint *)(*paramArray + 0xc) | 0x40;\n    return 0;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080064cc": "process_param_080064cc",
                "param_1": "paramArray",
                "sVar1": "decrementedValue",
                "pbVar2": "bytePointer"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006538": {
            "entrypoint": "0x08006538",
            "current_name": "update_values_08006538",
            "code": "\nvoid updateValues_08006538(int *parameters)\n\n{\n  int tempVar1;\n  int tempVar2;\n  int tempVar3;\n  int tempVar4;\n  int tempVar5;\n  int tempVar6;\n  int tempVar7;\n  int tempVar8;\n  int tempVar9;\n  int tempVar10;\n  \n  *(uint *)(*parameters + 0x10) = *(uint *)(*parameters + 0x10) & 0xffffcfff | parameters[3];\n  *(uint *)(*parameters + 0xc) =\n       parameters[2] | parameters[4] | parameters[5] | *(uint *)(*parameters + 0xc) & 0xffffe9f3;\n  *(uint *)(*parameters + 0x14) = *(uint *)(*parameters + 0x14) & 0xfffffcff | parameters[6];\n  tempVar10 = *parameters;\n  if (tempVar10 != 0x40013800) {\n    tempVar1 = FUN_08005a28();\n    tempVar6 = parameters[1];\n    tempVar2 = FUN_08005a28();\n    tempVar7 = parameters[1];\n    tempVar3 = FUN_08005a28();\n    tempVar8 = parameters[1];\n    tempVar4 = FUN_08005a28();\n    tempVar9 = parameters[1];\n    tempVar5 = FUN_08005a28();\n    *(uint *)(tempVar10 + 8) =\n         ((uint)((int)((ulonglong)\n                       (((uint)(tempVar4 * 0x19) / (uint)(tempVar9 << 2) +\n                        (int)(((ulonglong)(uint)(tempVar5 * 0x19) / (ulonglong)(uint)(parameters[1] << 2))\n                             / 100) * -100) * 0x10 + 0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n         ((((uint)(tempVar2 * 0x19) / (uint)(tempVar7 << 2) +\n           (int)(((ulonglong)(uint)(tempVar3 * 0x19) / (ulonglong)(uint)(tempVar8 << 2)) / 100) * -100) *\n           0x10 + 0x32) / 100 & 0xf0) +\n         (int)(((ulonglong)(uint)(tempVar1 * 0x19) / (ulonglong)(uint)(tempVar6 << 2)) / 100) * 0x10;\n    return;\n  }\n  tempVar10 = FUN_08005a48();\n  tempVar5 = parameters[1];\n  tempVar1 = FUN_08005a48();\n  tempVar6 = parameters[1];\n  tempVar2 = FUN_08005a48();\n  tempVar7 = parameters[1];\n  tempVar3 = FUN_08005a48();\n  tempVar8 = parameters[1];\n  tempVar4 = FUN_08005a48();\n  iRam40013808 = ((uint)((int)((ulonglong)\n                               (((uint)(tempVar3 * 0x19) / (uint)(tempVar8 << 2) +\n                                (int)(((ulonglong)(uint)(tempVar4 * 0x19) /\n                                      (ulonglong)(uint)(parameters[1] << 2)) / 100) * -100) * 0x10 +\n                               0x32) * 0x51eb851f >> 0x20) << 0x17) >> 0x1c) +\n                 ((((uint)(tempVar1 * 0x19) / (uint)(tempVar6 << 2) +\n                   (int)(((ulonglong)(uint)(tempVar2 * 0x19) / (ulonglong)(uint)(tempVar7 << 2)) / 100) *\n                   -100) * 0x10 + 0x32) / 100 & 0xf0) +\n                 (int)(((ulonglong)(uint)(tempVar10 * 0x19) / (ulonglong)(uint)(tempVar5 << 2)) / 100) *\n                 0x10;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006538": "update_values_08006538",
                "param_1": "parameters",
                "iVar1": "tempVar1",
                "iVar2": "tempVar2",
                "iVar3": "tempVar3",
                "iVar4": "tempVar4",
                "iVar5": "tempVar5",
                "iVar6": "tempVar6",
                "iVar7": "tempVar7",
                "iVar8": "tempVar8",
                "iVar9": "tempVar9",
                "iVar10": "tempVar10"
            },
            "calling": [
                "FUN_0800674e"
            ],
            "called": [
                "FUN_08005a28",
                "FUN_08005a48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080066e8": {
            "entrypoint": "0x080066e8",
            "current_name": "check_validity_080066e8",
            "code": "\nundefined4 checkValidity_080066e8(uint **pointerArray,uint value,uint condition,int limit,uint threshold)\n\n{\n  int result;\n  \n  do {\n    if (((value & ~**pointerArray) == 0) != condition) {\n      return 0;\n    }\n  } while ((threshold == 0xffffffff) ||\n          ((threshold != 0 && (result = FUN_08003760(), (uint)(result - limit) <= threshold))));\n  (*pointerArray)[3] = (*pointerArray)[3] & 0xfffffe5f;\n  (*pointerArray)[5] = (*pointerArray)[5] & 0xfffffffe;\n  *(undefined *)((int)pointerArray + 0x39) = 0x20;\n  *(undefined *)((int)pointerArray + 0x3a) = 0x20;\n  *(undefined *)(pointerArray + 0xe) = 0;\n  return 3;\n}\n\n",
            "renaming": {
                "FUN_080066e8": "check_validity_080066e8",
                "param_1": "pointerArray",
                "param_2": "value",
                "param_3": "condition",
                "param_4": "limit",
                "param_5": "threshold",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080067ac"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800674c": {
            "entrypoint": "0x0800674c",
            "current_name": "FUNC_0800674c",
            "code": "\nvoid FUNC_0800674c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800674c": "FUNC_0800674c"
            },
            "calling": [
                "FUN_0800674e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800674e": {
            "entrypoint": "0x0800674e",
            "current_name": "initialize_data_0800674e",
            "code": "\nundefined4 initializeData_0800674e(int *dataPointer)\n\n{\n  if (dataPointer != (int *)0x0) {\n    if (*(char *)((int)dataPointer + 0x39) == '\\0') {\n      *(undefined *)(dataPointer + 0xe) = 0;\n      FUNC_0800674c();\n    }\n    *(undefined *)((int)dataPointer + 0x39) = 0x24;\n    *(uint *)(*dataPointer + 0xc) = *(uint *)(*dataPointer + 0xc) & 0xffffdfff;\n    FUN_08006538(dataPointer);\n    *(uint *)(*dataPointer + 0x10) = *(uint *)(*dataPointer + 0x10) & 0xffffb7ff;\n    *(uint *)(*dataPointer + 0x14) = *(uint *)(*dataPointer + 0x14) & 0xffffffd5;\n    *(uint *)(*dataPointer + 0xc) = *(uint *)(*dataPointer + 0xc) | 0x2000;\n    counter = 0;\n    *(undefined *)((int)dataPointer + 0x39) = 0x20;\n    *(undefined *)((int)dataPointer + 0x3a) = 0x20;\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800674e": "initialize_data_0800674e",
                "param_1": "dataPointer",
                "param_1[0xf]": "counter"
            },
            "calling": [
                "FUN_08008078"
            ],
            "called": [
                "FUN_0800674c",
                "FUN_08006538"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080067ac": {
            "entrypoint": "0x080067ac",
            "current_name": "process_data_080067ac",
            "code": "\nundefined4 processData_080067ac(int *dataBuffer,ushort *inputData,int numElements,undefined4 param_4)\n\n{\n  int result;\n  undefined4 returnValue;\n  \n  if (*(char *)((int)dataBuffer + 0x39) == ' ') {\n    if (inputData == (ushort *)0x0) {\n      returnValue = 1;\n    }\n    else if (numElements == 0) {\n      returnValue = 1;\n    }\n    else if (*(char *)(dataBuffer + 0xe) == '\\x01') {\n      returnValue = 2;\n    }\n    else {\n      *(undefined *)(dataBuffer + 0xe) = 1;\n      dataBuffer[0xf] = 0;\n      *(undefined *)((int)dataBuffer + 0x39) = 0x21;\n      returnValue = FUN_08003760();\n      *(short *)(dataBuffer + 9) = (short)numElements;\n      *(short *)((int)dataBuffer + 0x26) = (short)numElements;\n      while (*(short *)((int)dataBuffer + 0x26) != 0) {\n        *(short *)((int)dataBuffer + 0x26) = *(short *)((int)dataBuffer + 0x26) + -1;\n        if (dataBuffer[2] == 0x1000) {\n          result = FUN_080066e8(dataBuffer,0x80,0,returnValue,param_4);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*dataBuffer + 4) = *inputData & 0x1ff;\n          if (dataBuffer[4] == 0) {\n            inputData = inputData + 1;\n          }\n          else {\n            inputData = (ushort *)((int)inputData + 1);\n          }\n        }\n        else {\n          result = FUN_080066e8(dataBuffer,0x80,0,returnValue,param_4);\n          if (result != 0) {\n            return 3;\n          }\n          *(uint *)(*dataBuffer + 4) = (uint)*(byte *)inputData;\n          inputData = (ushort *)((int)inputData + 1);\n        }\n      }\n      result = FUN_080066e8(dataBuffer,0x40,0,returnValue,param_4);\n      if (result == 0) {\n        *(undefined *)((int)dataBuffer + 0x39) = 0x20;\n        *(undefined *)(dataBuffer + 0xe) = 0;\n        returnValue = 0;\n      }\n      else {\n        returnValue = 3;\n      }\n    }\n  }\n  else {\n    returnValue = 2;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_080067ac": "process_data_080067ac",
                "param_1": "dataBuffer",
                "param_2": "inputData",
                "param_3": "numElements",
                "iVar1": "result",
                "uVar2": "returnValue"
            },
            "calling": [
                "FUN_08008500"
            ],
            "called": [
                "FUN_080066e8",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800688e": {
            "entrypoint": "0x0800688e",
            "current_name": "validate_and_set_params_0800688e",
            "code": "\nundefined4 validate_and_set_params_0800688e(int *ptr_param,int input_1,int input_2)\n\n{\n  if (*(char *)((int)ptr_param + 0x39) != ' ') {\n    return 2;\n  }\n  if (input_1 == 0) {\n    return 1;\n  }\n  if (input_2 == 0) {\n    return 1;\n  }\n  if (*(char *)(ptr_param + 0xe) != '\\x01') {\n    ptr_param[8] = input_1;\n    *(short *)(ptr_param + 9) = (short)input_2;\n    *(short *)((int)ptr_param + 0x26) = (short)input_2;\n    ptr_param[15] = 0;\n    *(undefined *)((int)ptr_param + 0x39) = 0x21;\n    *(undefined *)(ptr_param + 0xe) = 0;\n    *(uint *)(*ptr_param + 0xc) = *(uint *)(*ptr_param + 0xc) | 0x80;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_0800688e": "validate_and_set_params_0800688e",
                "param_1": "ptr_param",
                "param_2": "input_1",
                "param_3": "input_2",
                "param_1[8]": "ptr_param[8]",
                "param_1[0xf]": "ptr_param[15]"
            },
            "calling": [
                "FUN_08008694",
                "FUN_08008730"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080068d6": {
            "entrypoint": "0x080068d6",
            "current_name": "check_input_080068d6",
            "code": "\nundefined4 check_input_080068d6(int *input,int length,int value)\n\n{\n  if (*(char *)((int)input + 0x3a) != ' ') {\n    return 2;\n  }\n  if (length == 0) {\n    return 1;\n  }\n  if (value == 0) {\n    return 1;\n  }\n  if (*(char *)(input + 0xe) != '\\x01') {\n    input_length = length;\n    *(short *)(input + 0xb) = (short)value;\n    *(short *)((int)input + 0x2e) = (short)value;\n    flag = 0;\n    *(undefined *)((int)input + 0x3a) = 0x22;\n    *(undefined *)(input + 0xe) = 0;\n    *(uint *)(*input + 0xc) = *(uint *)(*input + 0xc) | 0x100;\n    *(uint *)(*input + 0x14) = *(uint *)(*input + 0x14) | 1;\n    *(uint *)(*input + 0xc) = *(uint *)(*input + 0xc) | 0x20;\n    return 0;\n  }\n  return 2;\n}\n\n",
            "renaming": {
                "FUN_080068d6": "check_input_080068d6",
                "param_1": "input",
                "param_2": "length",
                "param_3": "value",
                "param_1[10]": "input_length",
                "param_1[0xf]": "flag"
            },
            "calling": [
                "FUN_08008600",
                "FUN_0800863c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006932": {
            "entrypoint": "0x08006932",
            "current_name": "update_memory_and_flag_08006932",
            "code": "\nundefined4 updateMemoryAndFlag_08006932(int *memoryAddress)\n\n{\n  *(uint *)(*memoryAddress + 0xc) = *(uint *)(*memoryAddress + 0xc) & 0xffffffbf;\n  *(undefined *)((int)memoryAddress + 0x39) = 0x20;\n  FUN_08008730();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08006932": "update_memory_and_flag_08006932",
                "param_1": "memoryAddress"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [
                "FUN_08008730"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800694c": {
            "entrypoint": "0x0800694c",
            "current_name": "process_input_0800694c",
            "code": "\nundefined4 process_input_0800694c(int *input_buffer)\n\n{\n  byte *byte_pointer;\n  short count;\n  undefined *pointer;\n  \n  if (*(char *)((int)input_buffer + 0x3a) != '\\\"') {\n    return 2;\n  }\n  if (param_1_index_2 == 0x1000) {\n    if (param_1_index_4 == 0) {\n      *(ushort *)output_buffer_index = (ushort)((uint)(*(int *)(*input_buffer + 4) << 0x17) >> 0x17);\n      output_buffer_index = output_buffer_index + 2;\n    }\n    else {\n      *(ushort *)output_buffer_index = (ushort)*(undefined4 *)(*input_buffer + 4) & 0xff;\n      output_buffer_index = output_buffer_index + 1;\n    }\n  }\n  else if (param_1_index_4 == 0) {\n    pointer = (undefined *)output_buffer_index;\n    output_buffer_index = (int)(pointer + 1);\n    *pointer = (char)*(undefined4 *)(*input_buffer + 4);\n  }\n  else {\n    byte_pointer = (byte *)output_buffer_index;\n    output_buffer_index = (int)(byte_pointer + 1);\n    *byte_pointer = (byte)*(undefined4 *)(*input_buffer + 4) & 0x7f;\n  }\n  count = *(short *)((int)input_buffer + 0x2e) + -1;\n  *(short *)((int)input_buffer + 0x2e) = count;\n  if (count != 0) {\n    return 0;\n  }\n  *(uint *)(*input_buffer + 0xc) = *(uint *)(*input_buffer + 0xc) & 0xffffffdf;\n  *(uint *)(*input_buffer + 0xc) = *(uint *)(*input_buffer + 0xc) & 0xfffffeff;\n  *(uint *)(*input_buffer + 0x14) = *(uint *)(*input_buffer + 0x14) & 0xfffffffe;\n  *(undefined *)((int)input_buffer + 0x3a) = 0x20;\n  FUN_0800870c();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800694c": "process_input_0800694c",
                "param_1": "input_buffer",
                "pbVar1": "byte_pointer",
                "sVar2": "count",
                "puVar3": "pointer",
                "param_1[2]": "param_1_index_2",
                "param_1[4]": "param_1_index_4",
                "param_1[10]": "output_buffer_index"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [
                "FUN_0800870c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080069ec": {
            "entrypoint": "0x080069ec",
            "current_name": "process_data_080069ec",
            "code": "\nvoid processData_080069ec(uint **data)\n\n{\n  int result;\n  uint data2;\n  uint *ptr;\n  uint condition;\n  uint flags;\n  \n  ptr = *data;\n  flags = *ptr;\n  data2 = ptr[3];\n  if ((((flags & 0xf) == 0) && ((flags & 0x20) != 0)) && ((data2 & 0x20) != 0)) {\n    FUN_0800694c(data);\n    return;\n  }\n  if (((flags & 0xf) == 0) || ((condition = ptr[5] & 1, condition == 0 && ((data2 & 0x120) == 0)))) {\n    if (((flags & 0x80) != 0) && ((data2 & 0x80) != 0)) {\n      FUN_080064cc(data);\n      return;\n    }\n    if (((flags & 0x40) != 0) && ((data2 & 0x40) != 0)) {\n      FUN_08006932(data);\n    }\n  }\n  else {\n    if (((flags & 1) != 0) && ((data2 & 0x100) != 0)) {\n      data[0xf] = (uint *)((uint)data[0xf] | 1);\n    }\n    if (((flags & 4) != 0) && (condition != 0)) {\n      data[0xf] = (uint *)((uint)data[0xf] | 2);\n    }\n    if (((flags & 2) != 0) && (condition != 0)) {\n      data[0xf] = (uint *)((uint)data[0xf] | 4);\n    }\n    if (((flags & 8) != 0) && (condition != 0)) {\n      data[0xf] = (uint *)((uint)data[0xf] | 8);\n    }\n    if (data[0xf] != (uint *)0x0) {\n      if (((flags & 0x20) != 0) && ((data2 & 0x20) != 0)) {\n        FUN_0800694c(data);\n      }\n      if ((((uint)data[0xf] & 8) == 0) && (((*data)[5] & 0x40) == 0)) {\n        FUNC_0800877c(data);\n        data[0xf] = (uint *)0x0;\n        return;\n      }\n      FUN_080064b0(data);\n      ptr = *data;\n      if ((ptr[5] & 0x40) == 0) {\n        FUNC_0800877c(data);\n        return;\n      }\n      ptr[5] = ptr[5] & 0xffffffbf;\n      if (data[0xd] == (uint *)0x0) {\n        FUNC_0800877c(data);\n        return;\n      }\n      data[0xd][0xd] = (uint)&LAB_08006b0c_1;\n      result = FUN_08004050(data[0xd]);\n      if (result != 0) {\n        (*(code *)data[0xd][0xd])();\n        return;\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080069ec": "process_data_080069ec",
                "param_1": "data",
                "iVar1": "result",
                "uVar2": "data2",
                "puVar3": "ptr",
                "uVar4": "condition",
                "uVar5": "flags"
            },
            "calling": [],
            "called": [
                "FUN_0800877c",
                "FUN_080064b0",
                "FUN_08004050",
                "FUN_08006932",
                "FUN_0800694c",
                "FUN_080064cc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b1c": {
            "entrypoint": "0x08006b1c",
            "current_name": "combine_bytes_08006b1c",
            "code": "\nbyte combine_bytes_08006b1c(int input_value)\n\n{\n  return *(byte *)(input_value + 0x3a) | *(byte *)(input_value + 0x39);\n}\n\n",
            "renaming": {
                "FUN_08006b1c": "combine_bytes_08006b1c",
                "param_1": "input_value"
            },
            "calling": [
                "FUN_080085b8",
                "FUN_080085dc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b28": {
            "entrypoint": "0x08006b28",
            "current_name": "extract_bit_from_memory_08006b28",
            "code": "\nuint extractBitFromMemory_08006b28(uint bitPosition,int memoryAddress)\n\n{\n  return *(uint *)(memoryAddress + ((bitPosition << 0x18) >> 0x1c) * 4) >> (bitPosition & 0xf) & 1;\n}\n\n",
            "renaming": {
                "FUN_08006b28": "extract_bit_from_memory_08006b28",
                "param_1": "bitPosition",
                "param_2": "memoryAddress"
            },
            "calling": [
                "FUN_08008990",
                "FUN_08008a24",
                "FUN_080088e0",
                "FUN_08008a6c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b3e": {
            "entrypoint": "0x08006b3e",
            "current_name": "set_bit_in_memory_08006b3e",
            "code": "\nvoid setBitInMemory_08006b3e(uint value,int memoryAddress)\n\n{\n  uint shiftedValue;\n  \n  shiftedValue = (value << 0x18) >> 0x1c;\n  *(uint *)(memoryAddress + shiftedValue * 4) = *(uint *)(memoryAddress + shiftedValue * 4) | 1 << (value & 0xf);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006b3e": "set_bit_in_memory_08006b3e",
                "param_1": "value",
                "param_2": "memoryAddress",
                "uVar1": "shiftedValue"
            },
            "calling": [
                "FUN_08008990",
                "FUN_080088e0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b5c": {
            "entrypoint": "0x08006b5c",
            "current_name": "clear_bit_in_array_08006b5c",
            "code": "\nvoid clearBitInArray_08006b5c(uint bitIndex,int arrayStartIndex)\n\n{\n  uint byteOffset;\n  \n  byteOffset = (bitIndex << 0x18) >> 0x1c;\n  *(uint *)(arrayStartIndex + byteOffset * 4) = *(uint *)(arrayStartIndex + byteOffset * 4) & ~(1 << (bitIndex & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006b5c": "clear_bit_in_array_08006b5c",
                "param_1": "bitIndex",
                "param_2": "arrayStartIndex",
                "uVar1": "byteOffset"
            },
            "calling": [
                "FUN_08008990"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b7c": {
            "entrypoint": "0x08006b7c",
            "current_name": "get_memory_address_08006b7c",
            "code": "\nundefined4 getMemoryAddress_08006b7c(undefined4 index)\n\n{\n  switch(index) {\n  case 0:\n    return 0x40010800;\n  case 1:\n    return 0x40010c00;\n  case 2:\n    return 0x40011000;\n  case 3:\n    return 0x40011400;\n  case 4:\n    return 0x40011800;\n  default:\n    return 0;\n  }\n}\n\n",
            "renaming": {
                "FUN_08006b7c": "get_memory_address_08006b7c",
                "param_1": "index"
            },
            "calling": [
                "FUN_08008a24",
                "FUN_08008a6c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006bb8": {
            "entrypoint": "0x08006bb8",
            "current_name": "set_bit_and_return_address_08006bb8",
            "code": "\n\n\nundefined4 setBitAndReturnAddress_08006bb8(undefined4 bit_to_set)\n\n{\n  undefined4 return_address;\n  \n  switch(bit_to_set) {\n  case 0:\n    _DAT_40021018 = _DAT_40021018 | 4;\n    return_address = 0x40010800;\n    break;\n  case 1:\n    _DAT_40021018 = _DAT_40021018 | 8;\n    return_address = 0x40010c00;\n    break;\n  case 2:\n    _DAT_40021018 = _DAT_40021018 | 0x10;\n    return_address = 0x40011000;\n    break;\n  case 3:\n    _DAT_40021018 = _DAT_40021018 | 0x20;\n    return_address = 0x40011400;\n    break;\n  case 4:\n    _DAT_40021018 = _DAT_40021018 | 0x40;\n    return_address = 0x40011800;\n    break;\n  default:\n    return_address = 0;\n  }\n  return return_address;\n}\n\n",
            "renaming": {
                "FUN_08006bb8": "set_bit_and_return_address_08006bb8",
                "param_1": "bit_to_set",
                "uVar1": "return_address"
            },
            "calling": [
                "FUN_08006ca8",
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08006e68",
                "FUN_08007258"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c60": {
            "entrypoint": "0x08006c60",
            "current_name": "validate_input_08006c60",
            "code": "\nuint validate_input_08006c60(undefined4 input_param1,undefined4 input_param2,undefined4 input_param3,undefined4 input_param4)\n\n{\n  int result;\n  uint shifted_result;\n  \n  result = FUN_08007376(input_param1,&DAT_0800a5b8,input_param3,input_param4,input_param4);\n  shifted_result = (uint)(result << 0xc) >> 0x1b;\n  if (0x10 < shifted_result - 1) {\n    shifted_result = 0;\n  }\n  return shifted_result;\n}\n\n",
            "renaming": {
                "FUN_08006c60": "validate_input_08006c60",
                "param_1": "input_param1",
                "param_2": "input_param2",
                "param_3": "input_param3",
                "param_4": "input_param4",
                "iVar1": "result",
                "uVar2": "shifted_result"
            },
            "calling": [
                "FUN_08006d80"
            ],
            "called": [
                "FUN_08007376"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c7c": {
            "entrypoint": "0x08006c7c",
            "current_name": "get_return_value_08006c7c",
            "code": "\nundefined4 getReturnValue_08006c7c(undefined4 input_1,undefined4 input_2,undefined4 input_3,undefined4 input_4)\n\n{\n  int result;\n  uint shiftedResult;\n  \n  result = FUN_08007376(input_1,&DAT_0800a6cc,input_3,input_4,input_4);\n  shiftedResult = (uint)(result << 0xc) >> 0x1b;\n  if (shiftedResult == 3) {\n    return 8;\n  }\n  if (shiftedResult != 4) {\n    if (shiftedResult != 2) {\n      return 0;\n    }\n    return 4;\n  }\n  return 0xc;\n}\n\n",
            "renaming": {
                "FUN_08006c7c": "get_return_value_08006c7c",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "iVar1": "result",
                "uVar2": "shiftedResult"
            },
            "calling": [
                "FUN_080071e4",
                "FUN_08007118"
            ],
            "called": [
                "FUN_08007376"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ca8": {
            "entrypoint": "0x08006ca8",
            "current_name": "update_data_08006ca8",
            "code": "\n\n\nvoid updateData_08006ca8(int *data_ptr,undefined4 value)\n\n{\n  undefined4 result;\n  uint updated_value;\n  int current_value;\n  uint bit_mask;\n  undefined4 some_constant;\n  undefined4 initial_value;\n  \n  current_value = *data_ptr;\n  if (current_value == 0x40012400) {\n    updated_value = _DAT_40021018 | 0x200;\n    current_value = 0x200;\n    _DAT_40021018 = updated_value;\n  }\n  else {\n    updated_value = 0x40012800;\n    if (current_value == 0x40012800) {\n      updated_value = _DAT_40021018 | 0x400;\n      current_value = 0x400;\n      _DAT_40021018 = updated_value;\n    }\n  }\n  result = FUN_08006bb8((uint)((int)(char)DAT_20000014 << 0x18) >> 0x1c,value,updated_value,current_value);\n  bit_mask = 1 << (DAT_20000014 & 0xf) & 0xffff;\n  some_constant = 3;\n  initial_value = 0;\n  FUN_080040e8(result,&bit_mask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006ca8": "update_data_08006ca8",
                "param_1": "data_ptr",
                "param_2": "value",
                "uVar1": "result",
                "uVar2": "updated_value",
                "iVar3": "current_value",
                "local_18": "bit_mask",
                "local_14": "some_constant",
                "local_10": "initial_value"
            },
            "calling": [
                "FUN_08003bd8"
            ],
            "called": [
                "FUN_08006bb8",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d24": {
            "entrypoint": "0x08006d24",
            "current_name": "update_flags_based_on_address_08006d24",
            "code": "\n\n\nvoid updateFlagsBasedOnAddress_08006d24(int *address)\n\n{\n  if (*address != 0x40012400) {\n    if (*address == 0x40012800) {\n      _DAT_4002100c = _DAT_4002100c & 0xfffffbff;\n      _DAT_40021018 = _DAT_40021018 & 0xfffffbff;\n    }\n    return;\n  }\n  _DAT_4002100c = _DAT_4002100c & 0xfffffdff;\n  _DAT_40021018 = _DAT_40021018 & 0xfffffdff;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d24": "update_flags_based_on_address_08006d24",
                "param_1": "address"
            },
            "calling": [
                "FUN_08003ce8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d80": {
            "entrypoint": "0x08006d80",
            "current_name": "validate_input_08006d80",
            "code": "\nundefined2 validate_input_08006d80(undefined4 input_data)\n\n{\n  int result;\n  uint flags;\n  undefined2 validation_status;\n  uint data_size;\n  undefined4 flag1;\n  undefined4 flag2;\n  int buffer;\n  undefined4 var1;\n  undefined4 var2;\n  undefined4 var3;\n  undefined4 one;\n  undefined4 var5;\n  undefined4 zero;\n  undefined4 var7;\n  undefined4 var8;\n  \n  FUN_080091c6(&buffer,0,0x30);\n  data_size = 0;\n  flag1 = 0;\n  flag2 = 0;\n  validation_status = 0;\n  buffer = FUN_08007320(input_data,&DAT_0800a5b8);\n  if (buffer == 0) {\n    validation_status = 0;\n  }\n  else {\n    var1 = 0;\n    var2 = 0;\n    var3 = 0;\n    var5 = 0;\n    var7 = 0xe0000;\n    var8 = 0;\n    one = 1;\n    zero = 0;\n    DAT_20000014 = (undefined)input_data;\n    result = FUN_08003bd8(&buffer);\n    if (result == 0) {\n      data_size = FUN_08006c60(input_data);\n      if (data_size < 0x12) {\n        flag1 = 1;\n        flag2 = 2;\n        result = FUN_080038e4(&buffer,&data_size);\n        if (result == 0) {\n          result = FUN_08003e20(&buffer);\n          if (result == 0) {\n            result = FUN_08003aa0(&buffer);\n            if (result == 0) {\n              result = FUN_0800376c(&buffer,10);\n              if (result == 0) {\n                flags = FUN_08003a1c(&buffer);\n                if ((flags & 0x200) != 0) {\n                  validation_status = FUN_080038dc(&buffer);\n                }\n                result = FUN_08003de4(&buffer);\n                if (result == 0) {\n                  result = FUN_08003ce8(&buffer);\n                  if (result != 0) {\n                    validation_status = 0;\n                  }\n                }\n                else {\n                  validation_status = 0;\n                }\n              }\n              else {\n                validation_status = 0;\n              }\n            }\n            else {\n              validation_status = 0;\n            }\n          }\n          else {\n            validation_status = 0;\n          }\n        }\n        else {\n          validation_status = 0;\n        }\n      }\n      else {\n        validation_status = 0;\n      }\n    }\n    else {\n      validation_status = 0;\n    }\n  }\n  return validation_status;\n}\n\n",
            "renaming": {
                "FUN_08006d80": "validate_input_08006d80",
                "param_1": "input_data",
                "iVar1": "result",
                "uVar2": "flags",
                "local_46": "validation_status",
                "local_44": "data_size",
                "local_40": "flag1",
                "local_3c": "flag2",
                "local_38": "buffer",
                "local_34": "var1",
                "local_30": "var2",
                "local_2c": "var3",
                "local_28": "one",
                "local_24": "var5",
                "local_20": "zero",
                "local_1c": "var7",
                "local_10": "var8"
            },
            "calling": [
                "FUN_08008880"
            ],
            "called": [
                "FUN_080038dc",
                "FUN_08003bd8",
                "FUN_080038e4",
                "FUN_08003a1c",
                "FUN_08006c60",
                "FUN_080091c6",
                "FUN_0800376c",
                "FUN_08003ce8",
                "FUN_08003e20",
                "FUN_08003aa0",
                "FUN_08003de4",
                "FUN_08007320"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e68": {
            "entrypoint": "0x08006e68",
            "current_name": "initialize_system_08006e68",
            "code": "\n\n\nvoid initializeSystem_08006e68(undefined4 inputData)\n\n{\n  int deviceStatus;\n  undefined4 processedData;\n  uint deviceFlag;\n  undefined4 flag1;\n  undefined4 flag2;\n  undefined4 flag3;\n  \n  deviceStatus = FUN_08007376((int)(char)DAT_20000014,&DAT_0800a6cc);\n  FUN_08007438(inputData);\n  processedData = FUN_08006bb8((uint)((int)(char)DAT_20000014 << 0x18) >> 0x1c);\n  flag1 = 2;\n  flag2 = 0;\n  flag3 = 3;\n  _DAT_40021018 = _DAT_40021018 | 1;\n  switch((uint)(deviceStatus << 0x11) >> 0x19) {\n  case 1:\n    _DAT_40010004 = _DAT_40010004 | 0x7000001;\n    break;\n  case 2:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n    break;\n  case 3:\n    _DAT_40010004 = _DAT_40010004 | 0x7000002;\n    break;\n  case 4:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n    break;\n  case 5:\n    _DAT_40010004 = _DAT_40010004 | 0x7000004;\n    break;\n  case 6:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n    break;\n  case 7:\n    _DAT_40010004 = _DAT_40010004 | 0x7000008;\n    break;\n  case 8:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n    break;\n  case 9:\n    _DAT_40010004 = _DAT_40010004 | 0x7000030;\n    break;\n  case 10:\n    _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n    break;\n  case 0xb:\n    _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n    break;\n  case 0xc:\n    _DAT_40010004 = _DAT_40010004 | 0x70000c0;\n    break;\n  case 0xd:\n    _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n    break;\n  case 0xe:\n    _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n    break;\n  case 0xf:\n    _DAT_40010004 = _DAT_40010004 | 0x7000300;\n    break;\n  case 0x10:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n    break;\n  case 0x11:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n    break;\n  case 0x12:\n    _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n    break;\n  case 0x13:\n    _DAT_40010004 = _DAT_40010004 | 0x7000c00;\n    break;\n  case 0x14:\n    _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n    break;\n  case 0x15:\n    _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n    break;\n  case 0x16:\n    _DAT_40010004 = _DAT_40010004 | 0x7001000;\n    break;\n  case 0x17:\n    _DAT_40010004 = _DAT_40010004 & 0xffffefff | 0x7000000;\n    break;\n  case 0x1b:\n    _DAT_40010004 = _DAT_40010004 | 0x7008000;\n    break;\n  case 0x1c:\n    _DAT_40010004 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n    break;\n  case 0x21:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff;\n    break;\n  case 0x22:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n    break;\n  case 0x23:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n    break;\n  case 0x24:\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n  }\n  deviceFlag = 1 << (DAT_20000014 & 0xf) & 0xffff;\n  FUN_080040e8(processedData,&deviceFlag);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006e68": "initialize_system_08006e68",
                "param_1": "inputData",
                "iVar1": "deviceStatus",
                "uVar2": "processedData",
                "local_20": "deviceFlag",
                "local_1c": "flag1",
                "local_18": "flag2",
                "local_14": "flag3"
            },
            "calling": [
                "FUN_08006092"
            ],
            "called": [
                "FUN_08007438",
                "FUN_08007376",
                "FUN_08006bb8",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007110": {
            "entrypoint": "0x08007110",
            "current_name": "initialize_08007110",
            "code": "\nvoid initialize_08007110(void)\n\n{\n  FUN_080074e0();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007110": "initialize_08007110"
            },
            "calling": [
                "FUN_08005e2e"
            ],
            "called": [
                "FUN_080074e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007118": {
            "entrypoint": "0x08007118",
            "current_name": "extract_and_process_data_08007118",
            "code": "\nvoid extract_and_process_data_08007118(undefined4 input_value,uint divisor,int subtract_value,undefined4 additional_param,char flag)\n\n{\n  uint division_result;\n  int check_result;\n  int processing_result;\n  undefined4 var1;\n  undefined4 var2;\n  undefined4 var3;\n  undefined4 var4;\n  undefined4 var5;\n  undefined4 var6;\n  undefined4 var7;\n  int buffer;\n  int temp_value;\n  undefined4 var8;\n  int var9;\n  undefined4 var10;\n  undefined4 var11;\n  undefined var12;\n  \n  FUN_080091c6(&buffer,0,0x40);\n  var1 = 0;\n  var2 = 0;\n  var3 = 0;\n  var4 = 0;\n  var5 = 0;\n  var6 = 0;\n  var7 = 0;\n  buffer = FUN_08007320(input_value,&DAT_0800a6cc);\n  if (buffer != 0) {\n    division_result = FUN_080075dc();\n    temp_value = division_result / divisor - 1;\n    var9 = subtract_value + -1;\n    var10 = 0;\n    var8 = 0;\n    var11 = 0;\n    var12 = 0;\n    if (flag == '\\x01') {\n      DAT_20000014 = (undefined)input_value;\n      check_result = FUN_08006092(&buffer);\n      if (check_result != 0) {\n        return;\n      }\n    }\n    check_result = FUN_08006c7c(input_value);\n    if ((((check_result == 0) || (check_result == 4)) || (check_result == 8)) || ((check_result == 0xc || (check_result == 0x18)))) {\n      var1 = 0x60;\n      var3 = 0;\n      var5 = 0;\n      var4 = 0;\n      var7 = 0;\n      var6 = 0;\n      var2 = additional_param;\n      processing_result = FUN_08006186(&buffer,&var1,check_result);\n      if (processing_result == 0) {\n        division_result = FUN_08007376(input_value,&DAT_0800a6cc);\n        if ((division_result & 0x100000) == 0) {\n          FUN_08006390(&buffer,check_result);\n        }\n        else {\n          FUN_0800643c(&buffer,check_result);\n        }\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007118": "extract_and_process_data_08007118",
                "param_1": "input_value",
                "param_2": "divisor",
                "param_3": "subtract_value",
                "param_4": "additional_param",
                "param_5": "flag",
                "uVar1": "division_result",
                "iVar2": "check_result",
                "iVar3": "processing_result",
                "local_74": "var1",
                "local_70": "var2",
                "local_6c": "var3",
                "local_68": "var4",
                "local_64": "var5",
                "local_60": "var6",
                "local_5c": "var7",
                "local_58": "buffer",
                "local_54": "temp_value",
                "local_50": "var8",
                "local_4c": "var9",
                "local_48": "var10",
                "local_44": "var11",
                "local_1b": "var12"
            },
            "calling": [
                "FUN_080088e0"
            ],
            "called": [
                "FUN_08006092",
                "FUN_08006186",
                "FUN_0800643c",
                "FUN_08006c7c",
                "FUN_080091c6",
                "FUN_08007376",
                "FUN_080075dc",
                "FUN_08006390",
                "FUN_08007320"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080071e4": {
            "entrypoint": "0x080071e4",
            "current_name": "process_data_080071e4",
            "code": "\nvoid processData_080071e4(undefined4 data)\n\n{\n  int result;\n  uint flag;\n  int values [17];\n  \n  values[0] = FUN_08007320(data,&DAT_0800a6cc);\n  if ((values[0] != 0) &&\n     ((((result = FUN_08006c7c(data), result == 0 || (result == 4)) || (result == 8)) ||\n      ((result == 0xc || (result == 0x18)))))) {\n    flag = FUN_08007376(data,&DAT_0800a6cc);\n    if ((flag & 0x100000) == 0) {\n      FUN_080063c0(values,result);\n    }\n    else {\n      FUN_08006460(values,result);\n    }\n    FUN_08005e2e(values);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080071e4": "process_data_080071e4",
                "param_1": "data",
                "iVar1": "result",
                "uVar2": "flag",
                "local_50": "values"
            },
            "calling": [
                "FUN_08008990"
            ],
            "called": [
                "FUN_08005e2e",
                "FUN_080063c0",
                "FUN_08006c7c",
                "FUN_08006460",
                "FUN_08007376",
                "FUN_08007320"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800723c": {
            "entrypoint": "0x0800723c",
            "current_name": "initialize_system_0800723c",
            "code": "\nvoid initialize_system_0800723c(void)\n\n{\n  FUN_08003760();\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800723c": "initialize_system_0800723c"
            },
            "calling": [
                "FUN_08008abc"
            ],
            "called": [
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007244": {
            "entrypoint": "0x08007244",
            "current_name": "FUNC_08007244",
            "code": "\nvoid FUNC_08007244(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007244": "FUNC_08007244"
            },
            "calling": [
                "FUN_08007246"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08007246": {
            "entrypoint": "0x08007246",
            "current_name": "initialize_application_08007246",
            "code": "\nvoid initialize_application_08007246(void)\n\n{\n  FUN_08003748();\n  FUN_08004046();\n  FUNC_08007244();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007246": "initialize_application_08007246"
            },
            "calling": [],
            "called": [
                "FUN_08007244",
                "FUN_08004046",
                "FUN_08003748"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007258": {
            "entrypoint": "0x08007258",
            "current_name": "initialize_hardware_08007258",
            "code": "\n\n\nvoid initializeHardware_08007258(uint deviceID,undefined4 parameter1,undefined4 parameter2)\n\n{\n  undefined4 shiftedDeviceID;\n  uint bitMask;\n  undefined4 localParameter1;\n  undefined4 localParameter2;\n  undefined4 localVariable;\n  \n  shiftedDeviceID = FUN_08006bb8((deviceID << 0x18) >> 0x1c);\n  bitMask = 1 << (deviceID & 0xf) & 0xffff;\n  localVariable = 3;\n  _DAT_40021018 = _DAT_40021018 | 1;\n  if ((deviceID - 0xd & 0xff) < 2) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n  }\n  if (((deviceID == 0xf) || (deviceID == 0x13)) || (deviceID == 0x14)) {\n    _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n  }\n  localParameter1 = parameter1;\n  localParameter2 = parameter2;\n  FUN_080040e8(shiftedDeviceID,&bitMask);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007258": "initialize_hardware_08007258",
                "param_1": "deviceID",
                "param_2": "parameter1",
                "param_3": "parameter2",
                "uVar1": "shiftedDeviceID",
                "local_20": "bitMask",
                "local_1c": "localParameter1",
                "local_18": "localParameter2",
                "local_14": "localVariable"
            },
            "calling": [
                "FUN_08008990"
            ],
            "called": [
                "FUN_08006bb8",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080072d8": {
            "entrypoint": "0x080072d8",
            "current_name": "perform_conditional_action_080072d8",
            "code": "\nvoid performConditionalAction_080072d8(undefined4 input1,undefined2 input2,int condition,undefined4 data)\n\n{\n  if (condition == 0) {\n    FUN_080042e2(input1,input2,0,data,data);\n    return;\n  }\n  FUN_080042e2(input1,input2,1,data,data);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080072d8": "perform_conditional_action_080072d8",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "condition",
                "param_4": "data"
            },
            "calling": [
                "FUN_08008a24"
            ],
            "called": [
                "FUN_080042e2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080072f0": {
            "entrypoint": "0x080072f0",
            "current_name": "execute_function_080072f0",
            "code": "\nvoid execute_function_080072f0(undefined4 arg1,undefined2 arg2,undefined4 arg3,undefined4 arg4)\n\n{\n  FUN_080042d4(arg1,arg2,arg3,arg4,arg4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080072f0": "execute_function_080072f0",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4"
            },
            "calling": [
                "FUN_08008a6c"
            ],
            "called": [
                "FUN_080042d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080072fa": {
            "entrypoint": "0x080072fa",
            "current_name": "initialize_program_080072fa",
            "code": "\nvoid initializeProgram_080072fa(void)\n\n{\n  FUN_08003724();\n  FUN_080035b8();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080072fa": "initialize_program_080072fa"
            },
            "calling": [
                "FUN_080036a2"
            ],
            "called": [
                "FUN_08003724",
                "FUN_080035b8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007306": {
            "entrypoint": "0x08007306",
            "current_name": "find_value_08007306",
            "code": "\nundefined4 find_value_08007306(int target_value,char *data_array)\n\n{\n  while( true ) {\n    if (*data_array == -1) {\n      return 0;\n    }\n    if (*data_array == target_value) break;\n    data_array = data_array + 0xc;\n  }\n  return *(undefined4 *)(data_array + 4);\n}\n\n",
            "renaming": {
                "FUN_08007306": "find_value_08007306",
                "param_1": "target_value",
                "param_2": "data_array"
            },
            "calling": [
                "FUN_08007306",
                "FUN_08007320"
            ],
            "called": [
                "FUN_08007306"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007320": {
            "entrypoint": "0x08007320",
            "current_name": "check_valid_parameter_08007320",
            "code": "\nundefined4 checkValidParameter_08007320(int parameter)\n\n{\n  undefined4 returnValue;\n  \n  if (parameter != -1) {\n    returnValue = FUN_08007306();\n    return returnValue;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007320": "check_valid_parameter_08007320",
                "param_1": "parameter",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08008078",
                "FUN_080084b0",
                "FUN_080077b0",
                "FUN_080071e4",
                "FUN_08007118",
                "FUN_08006d80",
                "FUN_08008500"
            ],
            "called": [
                "FUN_08007306"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007332": {
            "entrypoint": "0x08007332",
            "current_name": "find_value_index_08007332",
            "code": "\nint find_value_index_08007332(int value,char *array_ptr)\n\n{\n  while( true ) {\n    if (*(int *)(array_ptr + 4) == 0) {\n      return -1;\n    }\n    if (*(int *)(array_ptr + 4) == value) break;\n    array_ptr = array_ptr + 0xc;\n  }\n  return (int)*array_ptr;\n}\n\n",
            "renaming": {
                "FUN_08007332": "find_value_index_08007332",
                "param_1": "value",
                "param_2": "array_ptr"
            },
            "calling": [
                "FUN_0800734a",
                "FUN_08007332"
            ],
            "called": [
                "FUN_08007332"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800734a": {
            "entrypoint": "0x0800734a",
            "current_name": "check_if_param_not_zero_0800734a",
            "code": "\nundefined4 checkIfParamNotZero_0800734a(int inputParam)\n\n{\n  undefined4 returnValue;\n  \n  if (inputParam != 0) {\n    returnValue = FUN_08007332();\n    return returnValue;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800734a": "check_if_param_not_zero_0800734a",
                "param_1": "inputParam",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_080084b0",
                "FUN_08008d30"
            ],
            "called": [
                "FUN_08007332"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800735a": {
            "entrypoint": "0x0800735a",
            "current_name": "find_value_in_array_0800735a",
            "code": "\nundefined4 find_value_in_array_0800735a(int value_to_find,char *array_ptr)\n\n{\n  while( true ) {\n    if (*array_ptr == -1) {\n      return 0xffffffff;\n    }\n    if (*array_ptr == value_to_find) break;\n    array_ptr = array_ptr + 0xc;\n  }\n  return *(undefined4 *)(array_ptr + 8);\n}\n\n",
            "renaming": {
                "FUN_0800735a": "find_value_in_array_0800735a",
                "param_1": "value_to_find",
                "param_2": "array_ptr"
            },
            "calling": [
                "FUN_0800735a",
                "FUN_08007376"
            ],
            "called": [
                "FUN_0800735a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007376": {
            "entrypoint": "0x08007376",
            "current_name": "check_return_value_08007376",
            "code": "\nundefined4 checkReturnValue_08007376(int inputValue)\n\n{\n  undefined4 returnValue;\n  \n  if (inputValue == -1) {\n    return 0xffffffff;\n  }\n  returnValue = FUN_0800735a();\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08007376": "check_return_value_08007376",
                "param_1": "inputValue",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08006e68",
                "FUN_08006c60",
                "FUN_080071e4",
                "FUN_08006c7c",
                "FUN_08007118"
            ],
            "called": [
                "FUN_0800735a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800738a": {
            "entrypoint": "0x0800738a",
            "current_name": "check_value_in_list_0800738a",
            "code": "\nundefined4 check_value_in_list_0800738a(int value,char *list)\n\n{\n  if (value == -1) {\n    return 0;\n  }\n  while( true ) {\n    if (*list == -1) {\n      return 0;\n    }\n    if (value == *list) break;\n    list = list + 0xc;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800738a": "check_value_in_list_0800738a",
                "param_1": "value",
                "param_2": "list"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_08001cd0",
                "FUN_08008990",
                "FUN_08000a64",
                "FUN_080088e0",
                "FUN_080005f8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073ae": {
            "entrypoint": "0x080073ae",
            "current_name": "do_comparison_080073ae",
            "code": "\nint do_comparison_080073ae(int first_value,int second_value)\n\n{\n  if (first_value != second_value) {\n    if (first_value == 0) {\n      return second_value;\n    }\n    if (second_value == 0) {\n      return first_value;\n    }\n    first_value = 0;\n  }\n  return first_value;\n}\n\n",
            "renaming": {
                "FUN_080073ae": "do_comparison_080073ae",
                "param_1": "first_value",
                "param_2": "second_value"
            },
            "calling": [
                "FUN_08008078",
                "FUN_080077b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073c0": {
            "entrypoint": "0x080073c0",
            "current_name": "execute_callback_080073c0",
            "code": "\nvoid executeCallback_080073c0(void)\n\n{\n  if (DAT_200005f4 != (code *)0x0) {\n    (*DAT_200005f4)(DAT_2000060c);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080073c0": "execute_callback_080073c0"
            },
            "calling": [
                "FUN_08005cb4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073e8": {
            "entrypoint": "0x080073e8",
            "current_name": "infinite_loop_080073e8",
            "code": "\nvoid infiniteLoop_080073e8(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080073e8": "infinite_loop_080073e8"
            },
            "calling": [
                "FUN_080035b8",
                "FUN_080073e8"
            ],
            "called": [
                "FUN_080073e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073ec": {
            "entrypoint": "0x080073ec",
            "current_name": "initialize_memory_080073ec",
            "code": "\n\n\nvoid initializeMemory_080073ec(void)\n\n{\n  _DAT_40021000 = _DAT_40021000 & 0xfef2ffff | 1;\n  _DAT_40021004 = _DAT_40021004 & 0xf8800000;\n  _DAT_40021008 = 0x9f0000;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080073ec": "initialize_memory_080073ec"
            },
            "calling": [
                "entry"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007438": {
            "entrypoint": "0x08007438",
            "current_name": "update_flags_and_data_pointers_08007438",
            "code": "\n\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nvoid updateFlagsAndDataPointers_08007438(int *dataPointer)\n\n{\n  if (*dataPointer == 0x40012c00) {\n    _DAT_40021018 = _DAT_40021018 | 0x800;\n    DAT_20000610 = dataPointer;\n  }\n  if (*dataPointer == 0x40000000) {\n    _DAT_4002101c = _DAT_4002101c | 1;\n    DAT_20000614 = dataPointer;\n  }\n  if (*dataPointer == 0x40000400) {\n    _DAT_4002101c = _DAT_4002101c | 2;\n    DAT_20000618 = dataPointer;\n  }\n  if (*dataPointer == 0x40000800) {\n    _DAT_4002101c = _DAT_4002101c | 4;\n    DAT_2000061c = dataPointer;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007438": "update_flags_and_data_pointers_08007438",
                "param_1": "dataPointer"
            },
            "calling": [
                "FUN_08006e68",
                "FUN_08007708"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080074e0": {
            "entrypoint": "0x080074e0",
            "current_name": "update_memory_flags_080074e0",
            "code": "\n\n\nvoid updateMemoryFlags_080074e0(int *memoryAddress)\n\n{\n  if (*memoryAddress == 0x40012c00) {\n    _DAT_40021018 = _DAT_40021018 & 0xfffff7ff;\n  }\n  if (*memoryAddress == 0x40000000) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffe;\n  }\n  if (*memoryAddress == 0x40000400) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffd;\n  }\n  if (*memoryAddress == 0x40000800) {\n    _DAT_4002101c = _DAT_4002101c & 0xfffffffb;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080074e0": "update_memory_flags_080074e0",
                "param_1": "memoryAddress"
            },
            "calling": [
                "FUN_08007710",
                "FUN_08007110"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007544": {
            "entrypoint": "0x08007544",
            "current_name": "get_timer_priority_08007544",
            "code": "\nundefined4 getTimerPriority_08007544(uint timerValue)\n\n{\n  if (timerValue == 0xffffffff) {\n    return 0;\n  }\n  if (timerValue == 0x40000400) {\n    return 0x1d;\n  }\n  if (timerValue < 0x40000401) {\n    if (timerValue == 0x40000000) {\n      return 0x1c;\n    }\n  }\n  else {\n    if (timerValue == 0x40000800) {\n      return 0x1e;\n    }\n    if (timerValue == 0x40012c00) {\n      return 0x19;\n    }\n  }\n  FUN_080098d8(\"TIM: Unknown timer IRQn\");\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007544": "get_timer_priority_08007544",
                "param_1": "timerValue"
            },
            "calling": [
                "FUN_080076e0",
                "FUN_08007648"
            ],
            "called": [
                "FUN_080098d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007594": {
            "entrypoint": "0x08007594",
            "current_name": "check_timer_instance_08007594",
            "code": "\nundefined4 checkTimerInstance_08007594(uint timerInstance)\n\n{\n  if (timerInstance == 0xffffffff) {\n    return 0;\n  }\n  if (timerInstance == 0x40000400) {\n    return 1;\n  }\n  if (timerInstance < 0x40000401) {\n    if (timerInstance == 0x40000000) {\n      return 1;\n    }\n  }\n  else {\n    if (timerInstance == 0x40000800) {\n      return 1;\n    }\n    if (timerInstance == 0x40012c00) {\n      return 2;\n    }\n  }\n  FUN_080098d8(\"TIM: Unknown timer instance\");\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007594": "check_timer_instance_08007594",
                "param_1": "timerInstance"
            },
            "calling": [
                "FUN_080075dc"
            ],
            "called": [
                "FUN_080098d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080075dc": {
            "entrypoint": "0x080075dc",
            "current_name": "calculate_clock_shift_080075dc",
            "code": "\nint calculateClockShift_080075dc(undefined4 clockSource)\n\n{\n  uint shiftedValue;\n  int result;\n  uint clockValue;\n  undefined4 tempVar1;\n  undefined4 tempVar2;\n  undefined4 tempVar3;\n  undefined4 tempVar4;\n  uint tempVar5;\n  uint tempVar6;\n  \n  tempVar2 = 0;\n  tempVar3 = 0;\n  tempVar4 = 0;\n  tempVar5 = 0;\n  tempVar6 = 0;\n  tempVar1 = 0;\n  FUN_08005a68(&tempVar2,&tempVar1);\n  result = FUN_08007594(clockSource);\n  shiftedValue = tempVar6;\n  clockValue = tempVar5;\n  if (result == 1) {\n    result = FUN_08005a28();\n  }\n  else if (result == 2) {\n    result = FUN_08005a48();\n    clockValue = shiftedValue;\n  }\n  else {\n    FUN_080098d8(\"TIM: Unknown clock source\");\n    result = 0;\n    clockValue = 0;\n  }\n  if (clockValue != 0x500) {\n    if (clockValue < 0x501) {\n      if (clockValue != 0x400) {\n        return result;\n      }\n    }\n    else if ((clockValue != 0x600) && (clockValue != 0x700)) {\n      return result;\n    }\n  }\n  return result << 1;\n}\n\n",
            "renaming": {
                "FUN_080075dc": "calculate_clock_shift_080075dc",
                "param_1": "clockSource",
                "uVar1": "shiftedValue",
                "iVar2": "result",
                "uVar3": "clockValue",
                "local_20": "tempVar1",
                "local_1c": "tempVar2",
                "local_18": "tempVar3",
                "local_14": "tempVar4",
                "local_10": "tempVar5",
                "local_c": "tempVar6"
            },
            "calling": [
                "FUN_08007648",
                "FUN_08007118"
            ],
            "called": [
                "FUN_08005a28",
                "FUN_08005a48",
                "FUN_080098d8",
                "FUN_08007594",
                "FUN_08005a68"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007648": {
            "entrypoint": "0x08007648",
            "current_name": "initialize_param_and_execute_08007648",
            "code": "\nvoid initializeParamAndExecute_08007648(undefined4 *paramArray,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  char charVar;\n  uint uintVar;\n  int intVar;\n  undefined4 *pointerVar;\n  undefined4 localVar1;\n  undefined4 localVar2;\n  undefined4 localVar3;\n  undefined4 localVar4;\n  undefined4 localVar5;\n  undefined4 localVar6;\n  undefined4 localVar7;\n  \n  localVar1 = 0;\n  localVar2 = 0;\n  localVar3 = 0;\n  localVar4 = 0;\n  localVar5 = 0;\n  localVar6 = 0;\n  localVar7 = 0;\n  pointerVar = paramArray + 1;\n  *paramArray = 0x40000000;\n  paramArray[1] = 0x40000000;\n  paramArray[4] = param2;\n  uintVar = FUN_080075dc();\n  paramArray[2] = uintVar / 1000000 - 1;\n  paramArray[5] = 0;\n  paramArray[3] = 0;\n  paramArray[6] = 0;\n  paramArray[0x13] = param4;\n  localVar1 = 0;\n  localVar3 = 0;\n  localVar5 = 0;\n  localVar4 = 0;\n  localVar6 = 0;\n  localVar7 = 0;\n  localVar2 = param3;\n  charVar = FUN_08007544(*paramArray);\n  FUN_08003f30((int)charVar,0xe,0);\n  charVar = FUN_08007544(*paramArray);\n  FUN_08003f94((int)charVar);\n  intVar = FUN_08006060(pointerVar);\n  if ((intVar == 0) && (intVar = FUN_08006128(pointerVar,&localVar1,0), intVar == 0)) {\n    FUN_08006280(pointerVar,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007648": "initialize_param_and_execute_08007648",
                "param_1": "paramArray",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "cVar1": "charVar",
                "uVar2": "uintVar",
                "iVar3": "intVar",
                "puVar4": "pointerVar",
                "local_34": "localVar1",
                "local_30": "localVar2",
                "local_2c": "localVar3",
                "local_28": "localVar4",
                "local_24": "localVar5",
                "local_20": "localVar6",
                "local_1c": "localVar7"
            },
            "calling": [
                "FUN_0800242c"
            ],
            "called": [
                "FUN_08007544",
                "FUN_08006280",
                "FUN_08003f30",
                "FUN_08006060",
                "FUN_08003f94",
                "FUN_080075dc",
                "FUN_08006128"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080076e0": {
            "entrypoint": "0x080076e0",
            "current_name": "initialize_data_080076e0",
            "code": "\nvoid initializeData_080076e0(undefined4 *dataArray)\n\n{\n  char result;\n  int returnValue;\n  \n  dataArray[0x13] = 0;\n  result = FUN_08007544(*dataArray);\n  FUN_08003fb0((int)result);\n  returnValue = FUN_08005df4(dataArray + 1);\n  if (returnValue == 0) {\n    FUN_080062f4(dataArray + 1,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080076e0": "initialize_data_080076e0",
                "param_1": "dataArray",
                "cVar1": "result",
                "iVar2": "returnValue"
            },
            "calling": [
                "FUN_08002578"
            ],
            "called": [
                "FUN_08003fb0",
                "FUN_08007544",
                "FUN_08005df4",
                "FUN_080062f4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007708": {
            "entrypoint": "0x08007708",
            "current_name": "initialize_system_08007708",
            "code": "\nvoid initializeSystem_08007708(void)\n\n{\n  FUN_08007438();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007708": "initialize_system_08007708"
            },
            "calling": [
                "FUN_08006060"
            ],
            "called": [
                "FUN_08007438"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007710": {
            "entrypoint": "0x08007710",
            "current_name": "initialize_program_08007710",
            "code": "\nvoid initialize_program_08007710(void)\n\n{\n  FUN_080074e0();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007710": "initialize_program_08007710"
            },
            "calling": [
                "FUN_08005df4"
            ],
            "called": [
                "FUN_080074e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007718": {
            "entrypoint": "0x08007718",
            "current_name": "subtract_four_08007718",
            "code": "\nint subtract_four_08007718(int input_num)\n\n{\n  return input_num + -4;\n}\n\n",
            "renaming": {
                "FUN_08007718": "subtract_four_08007718",
                "param_1": "input_num"
            },
            "calling": [
                "FUN_0800771c",
                "FUN_08007736"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800771c": {
            "entrypoint": "0x0800771c",
            "current_name": "execute_if_condition_met_0800771c",
            "code": "\nvoid executeIfConditionMet_0800771c(int inputParam)\n\n{\n  int functionResult;\n  \n  functionResult = FUN_08007718();\n  if ((*(code **)(functionResult + 0x4c) != (code *)0x0) && (*(char *)(inputParam + 0x1c) == '\\x01')) {\n    (**(code **)(functionResult + 0x4c))(functionResult,0);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800771c": "execute_if_condition_met_0800771c",
                "param_1": "inputParam",
                "iVar1": "functionResult"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [
                "FUN_08007718"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007736": {
            "entrypoint": "0x08007736",
            "current_name": "execute_callback_08007736",
            "code": "\nvoid executeCallback_08007736(void)\n\n{\n  int returnValue;\n  \n  returnValue = FUN_08007718();\n  if (*(code **)(returnValue + 0x48) != (code *)0x0) {\n    (**(code **)(returnValue + 0x48))();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007736": "execute_callback_08007736",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08005e6e"
            ],
            "called": [
                "FUN_08007718"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007744": {
            "entrypoint": "0x08007744",
            "current_name": "get_nested_value_08007744",
            "code": "\nundefined4 getNestedValue_08007744(int input)\n\n{\n  return *(undefined4 *)(*(int *)(input + 4) + 0x24);\n}\n\n",
            "renaming": {
                "FUN_08007744": "get_nested_value_08007744",
                "param_1": "input"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800774a": {
            "entrypoint": "0x0800774a",
            "current_name": "update_pointer_value_0800774a",
            "code": "\nvoid updatePointerValue_0800774a(int inputPointer,undefined4 newValue)\n\n{\n  *(undefined4 *)(*(int *)(inputPointer + 4) + 0x24) = newValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800774a": "update_pointer_value_0800774a",
                "param_1": "inputPointer",
                "param_2": "newValue"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007750": {
            "entrypoint": "0x08007750",
            "current_name": "update_memory_value_08007750",
            "code": "\nvoid updateMemoryValue_08007750(int memoryAddress,int index,undefined4 newValue)\n\n{\n  *(undefined4 *)(*(int *)(memoryAddress + 4) + 0x34 + index * 4) = newValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007750": "update_memory_value_08007750",
                "param_1": "memoryAddress",
                "param_2": "index",
                "param_3": "newValue"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080077b0": {
            "entrypoint": "0x080077b0",
            "current_name": "initialize_i2_c_080077b0",
            "code": "\n\n\nvoid initializeI2C_080077b0(int *config,int pin1,int pin2,int param_4,undefined param_5)\n\n{\n  int peripheral1;\n  int peripheral2;\n  undefined4 pinConfig;\n  uint i2c1Config;\n  uint i2c2Config;\n  int *dataPtr;\n  uint pinBitMask;\n  uint bitMask;\n  uint shift;\n  undefined4 constant3;\n  \n  if (config != (int *)0x0) {\n    dataPtr = config + 1;\n    peripheral1 = FUN_08007320((int)*(char *)(config + 0x16),&DAT_0800a69c);\n    peripheral2 = FUN_08007320((int)*(char *)((int)config + 0x59),&DAT_0800a66c);\n    if ((peripheral1 == 0) || (peripheral2 == 0)) {\n      FUN_080098d8(\"ERROR: at least one I2C pin has no peripheral\\n\");\n    }\n    else {\n      peripheral1 = FUN_080073ae(peripheral1,peripheral2);\n      *config = peripheral1;\n      if (peripheral1 == 0) {\n        FUN_080098d8(\"ERROR: I2C pins mismatch\\n\");\n      }\n      else {\n        if (peripheral1 == 0x40005400) {\n          _DAT_4002101c = _DAT_4002101c | 0x200000;\n          _DAT_40021010 = _DAT_40021010 & 0xffdfffff;\n          *(undefined *)((int)config + 0x5a) = 0x1f;\n          *(undefined *)((int)config + 0x5b) = 0x20;\n          DAT_20000668 = dataPtr;\n        }\n        if (*config == 0x40005800) {\n          _DAT_4002101c = _DAT_4002101c | 0x400000;\n          _DAT_40021010 = _DAT_40021010 & 0xffbfffff;\n          *(undefined *)((int)config + 0x5a) = 0x21;\n          *(undefined *)((int)config + 0x5b) = 0x22;\n          DAT_2000066c = dataPtr;\n        }\n        pinConfig = FUN_08006bb8((uint)((int)*(char *)((int)config + 0x59) << 0x18) >> 0x1c);\n        pinBitMask = 1 << ((int)*(char *)((int)config + 0x59) & 0xfU) & 0xffff;\n        i2c1Config = FUN_08007376((int)*(char *)((int)config + 0x59),&DAT_0800a66c);\n        i2c2Config = FUN_08007376((int)*(char *)((int)config + 0x59),&DAT_0800a66c);\n        bitMask = (i2c1Config >> 3 & 1) << 4 | i2c2Config & 7;\n        constant3 = 3;\n        peripheral1 = FUN_08007376((int)*(char *)((int)config + 0x59),&DAT_0800a66c);\n        shift = (uint)(peripheral1 << 0x1a) >> 0x1e;\n        peripheral1 = FUN_08007376((int)*(char *)((int)config + 0x59),&DAT_0800a66c);\n        _DAT_40021018 = _DAT_40021018 | 1;\n        i2c2Config = 1;\n        i2c1Config = _DAT_40021018;\n        switch((uint)(peripheral1 << 0x11) >> 0x19) {\n        case 1:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 | 0x7000001;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 2:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 3:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 | 0x7000002;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 4:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 5:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 | 0x7000004;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 6:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 7:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 | 0x7000008;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 8:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 9:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 | 0x7000030;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 10:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 0xb:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 0xc:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 | 0x70000c0;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 0xd:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 0xe:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 0xf:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 | 0x7000300;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 0x10:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 0x11:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 0x12:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 0x13:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 | 0x7000c00;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 0x14:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 0x15:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 0x16:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 | 0x7001000;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 0x17:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 & 0xffffefff | 0x7000000;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 0x1b:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 | 0x7008000;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 0x1c:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 0x21:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 & 0xf8ffffff;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 0x22:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 0x23:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 0x24:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n          _DAT_40010004 = i2c2Config;\n        }\n        FUN_080040e8(pinConfig,&pinBitMask,i2c1Config,i2c2Config);\n        pinConfig = FUN_08006bb8((uint)((int)*(char *)(config + 0x16) << 0x18) >> 0x1c);\n        pinBitMask = 1 << ((int)*(char *)(config + 0x16) & 0xfU) & 0xffff;\n        i2c1Config = FUN_08007376((int)*(char *)(config + 0x16),&DAT_0800a69c);\n        i2c2Config = FUN_08007376((int)*(char *)(config + 0x16),&DAT_0800a69c);\n        bitMask = (i2c1Config >> 3 & 1) << 4 | i2c2Config & 7;\n        constant3 = 3;\n        peripheral1 = FUN_08007376((int)*(char *)(config + 0x16),&DAT_0800a69c);\n        shift = (uint)(peripheral1 << 0x1a) >> 0x1e;\n        peripheral1 = FUN_08007376((int)*(char *)(config + 0x16),&DAT_0800a69c);\n        _DAT_40021018 = _DAT_40021018 | 1;\n        i2c2Config = 1;\n        i2c1Config = _DAT_40021018;\n        switch((uint)(peripheral1 << 0x11) >> 0x19) {\n        case 1:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 | 0x7000001;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 2:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 3:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 | 0x7000002;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 4:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 5:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 | 0x7000004;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 6:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 7:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 | 0x7000008;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 8:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 9:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 | 0x7000030;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 10:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 0xb:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 0xc:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 | 0x70000c0;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 0xd:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 0xe:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 0xf:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 | 0x7000300;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 0x10:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 0x11:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 0x12:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 0x13:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 | 0x7000c00;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 0x14:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 0x15:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 0x16:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 | 0x7001000;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 0x17:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 & 0xffffefff | 0x7000000;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 0x1b:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 | 0x7008000;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 0x1c:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 0x21:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 & 0xf8ffffff;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 0x22:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 0x23:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          _DAT_40010004 = i2c2Config;\n          break;\n        case 0x24:\n          i2c1Config = 0x40010000;\n          i2c2Config = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n          _DAT_40010004 = i2c2Config;\n        }\n        FUN_080040e8(pinConfig,&pinBitMask,i2c1Config,i2c2Config);\n        config[1] = *config;\n        config[2] = pin1;\n        config[3] = 0;\n        config[4] = param_4;\n        config[7] = 0xff;\n        config[5] = pin2;\n        config[6] = 0;\n        config[8] = 0;\n        config[9] = 0;\n        *(undefined *)((int)config + 0x41) = 0;\n        FUN_08003f30((int)*(char *)((int)config + 0x5a),0,1);\n        FUN_08003f94((int)*(char *)((int)config + 0x5a));\n        FUN_08003f30((int)*(char *)((int)config + 0x5b),0,1);\n        FUN_08003f94((int)*(char *)((int)config + 0x5b));\n        FUN_080045c0(dataPtr);\n        *(undefined *)((int)config + 0x5d) = param_5;\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080077b0": "initialize_i2_c_080077b0",
                "param_1": "config",
                "param_2": "pin1",
                "param_3": "pin2",
                "iVar1": "peripheral1",
                "iVar2": "peripheral2",
                "uVar3": "pinConfig",
                "uVar4": "i2c1Config",
                "uVar5": "i2c2Config",
                "piVar6": "dataPtr",
                "local_38": "pinBitMask",
                "local_34": "bitMask",
                "local_30": "shift",
                "local_2c": "constant3"
            },
            "calling": [
                "FUN_08002968"
            ],
            "called": [
                "FUN_080045c0",
                "FUN_080098d8",
                "FUN_080073ae",
                "FUN_08003f30",
                "FUN_08003f94",
                "FUN_08006bb8",
                "FUN_08007376",
                "FUN_08007320",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e74": {
            "entrypoint": "0x08007e74",
            "current_name": "check_validity_08007e74",
            "code": "\nint checkValidity_08007e74(int input,undefined4 arg1,undefined4 arg2,undefined4 arg3)\n\n{\n  int initialValue;\n  int result;\n  uint difference;\n  int validity;\n  int temp;\n  undefined4 param4;\n  \n  param4 = arg3;\n  initialValue = FUN_08003760();\n  difference = 0;\n  validity = 2;\n  do {\n    temp = input + 4;\n    result = FUN_08004728(temp,arg1,arg2,arg3,param4);\n    if (result == 0) {\n      validity = 0;\n      while ((result = FUN_0800542a(temp), result != 0x20 && (validity == 0))) {\n        result = FUN_08003760();\n        difference = result - initialValue;\n        if (difference < 0x65) {\n          result = FUN_08005430(temp);\n          if (result != 0) {\n            validity = 2;\n          }\n        }\n        else {\n          validity = 1;\n        }\n      }\n    }\n    result = FUN_08005430(temp);\n  } while ((result == 4) && (difference < 100));\n  return validity;\n}\n\n",
            "renaming": {
                "FUN_08007e74": "check_validity_08007e74",
                "param_1": "input",
                "param_2": "arg1",
                "param_3": "arg2",
                "param_4": "arg3",
                "iVar1": "initialValue",
                "iVar2": "result",
                "uVar3": "difference",
                "iVar4": "validity",
                "iVar5": "temp",
                "uVar6": "param4"
            },
            "calling": [
                "FUN_08002a58"
            ],
            "called": [
                "FUN_08004728",
                "FUN_0800542a",
                "FUN_08005430",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007ede": {
            "entrypoint": "0x08007ede",
            "current_name": "copy_data_08007ede",
            "code": "\nundefined4 copyData_08007ede(int dstAddr,int srcAddr,uint size)\n\n{\n  uint currentIndex;\n  \n  if (0x20 < size) {\n    return 2;\n  }\n  for (currentIndex = 0; currentIndex < size; currentIndex = currentIndex + 1 & 0xff) {\n    *(undefined *)(dstAddr + currentIndex + 0x68) = *(undefined *)(srcAddr + currentIndex);\n    *(char *)(dstAddr + 0x88) = *(char *)(dstAddr + 0x88) + '\\x01';\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007ede": "copy_data_08007ede",
                "param_1": "dstAddr",
                "param_2": "srcAddr",
                "param_3": "size",
                "uVar1": "currentIndex"
            },
            "calling": [
                "FUN_080027f0",
                "FUN_0800288c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f0e": {
            "entrypoint": "0x08007f0e",
            "current_name": "calculate_result_08007f0e",
            "code": "\nint calculateResult_08007f0e(int inputValue,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int initialValue;\n  int tempValue;\n  uint difference;\n  int result;\n  int tempVar;\n  undefined4 tempParam;\n  \n  tempParam = param4;\n  initialValue = FUN_08003760();\n  difference = 0;\n  result = 2;\n  do {\n    tempVar = inputValue + 4;\n    tempValue = FUN_080047f4(tempVar,param2,param3,param4,tempParam);\n    if (tempValue == 0) {\n      result = 0;\n      while ((tempValue = FUN_0800542a(tempVar), tempValue != 0x20 && (result == 0))) {\n        tempValue = FUN_08003760();\n        difference = tempValue - initialValue;\n        if (difference < 0x65) {\n          tempValue = FUN_08005430(tempVar);\n          if (tempValue != 0) {\n            result = 2;\n          }\n        }\n        else {\n          result = 1;\n        }\n      }\n    }\n    tempValue = FUN_08005430(tempVar);\n  } while ((tempValue == 4) && (difference < 100));\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08007f0e": "calculate_result_08007f0e",
                "param_1": "inputValue",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "initialValue",
                "iVar2": "tempValue",
                "uVar3": "difference",
                "iVar4": "result",
                "iVar5": "tempVar",
                "uVar6": "tempParam"
            },
            "calling": [
                "FUN_08002b68"
            ],
            "called": [
                "FUN_080047f4",
                "FUN_0800542a",
                "FUN_08005430",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f78": {
            "entrypoint": "0x08007f78",
            "current_name": "subtract_four_08007f78",
            "code": "\nint subtractFour_08007f78(int input)\n\n{\n  return input + -4;\n}\n\n",
            "renaming": {
                "FUN_08007f78": "subtract_four_08007f78",
                "param_1": "input"
            },
            "calling": [
                "FUN_08008020",
                "FUN_08007fa0",
                "FUN_08007ff0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f7c": {
            "entrypoint": "0x08007f7c",
            "current_name": "update_data_08007f7c",
            "code": "\nvoid updateData_08007f7c(int dataPointer,int newValue)\n\n{\n  if (dataPointer != 0) {\n    if (newValue != 0) {\n      *(int *)(dataPointer + 0x60) = newValue;\n      FUN_080049e0(dataPointer + 4);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007f7c": "update_data_08007f7c",
                "param_1": "dataPointer",
                "param_2": "newValue"
            },
            "calling": [
                "FUN_08002968"
            ],
            "called": [
                "FUN_080049e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f8e": {
            "entrypoint": "0x08007f8e",
            "current_name": "update_data_08007f8e",
            "code": "\nvoid updateData_08007f8e(int dataStruct,int newValue)\n\n{\n  if (dataStruct != 0) {\n    if (newValue != 0) {\n      *(int *)(dataStruct + 100) = newValue;\n      FUN_080049e0(dataStruct + 4);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007f8e": "update_data_08007f8e",
                "param_1": "dataStruct",
                "param_2": "newValue"
            },
            "calling": [
                "FUN_08002968"
            ],
            "called": [
                "FUN_080049e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007fa0": {
            "entrypoint": "0x08007fa0",
            "current_name": "update_data_08007fa0",
            "code": "\nvoid updateData_08007fa0(int data1,int flag,int data2,undefined4 param)\n\n{\n  int result;\n  \n  result = FUN_08007f78();\n  if (data2 == *(int *)(data1 + 0xc)) {\n    if (flag == 0) {\n      *(undefined *)(result + 0x88) = 0;\n      *(undefined *)(result + 0x5c) = 0;\n      if (*(code **)(result + 100) != (code *)0x0) {\n        (**(code **)(result + 100))();\n      }\n      FUN_080048c8(data1,result + 0x68,*(undefined *)(result + 0x88),8);\n      return;\n    }\n    *(undefined *)(result + 0x5c) = 1;\n    FUN_08004954(data1,result + 0x68,0x20,8,param);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007fa0": "update_data_08007fa0",
                "param_1": "data1",
                "param_2": "flag",
                "param_3": "data2",
                "param_4": "param",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08004ac2"
            ],
            "called": [
                "FUN_08004954",
                "FUN_08007f78",
                "FUN_080048c8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007ff0": {
            "entrypoint": "0x08007ff0",
            "current_name": "execute_conditional_function_08007ff0",
            "code": "\nvoid executeConditionalFunction_08007ff0(undefined4 inputParameter)\n\n{\n  int returnValue;\n  \n  returnValue = FUN_08007f78();\n  if (((*(functionPointer **)(returnValue + 0x60) != (functionPointer *)0x0) && (*(char *)(returnValue + 0x5c) == '\\x01')) &&\n     (*(char *)(returnValue + 0x2c) != ' ')) {\n    (**(functionPointer **)(returnValue + 0x60))(returnValue + 0x68);\n  }\n  FUN_080049e0(inputParameter);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007ff0": "execute_conditional_function_08007ff0",
                "param_1": "inputParameter",
                "iVar1": "returnValue",
                "code": "functionPointer"
            },
            "calling": [
                "FUN_08004aec",
                "FUN_08004f3c",
                "FUN_08005084"
            ],
            "called": [
                "FUN_08007f78",
                "FUN_080049e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008020": {
            "entrypoint": "0x08008020",
            "current_name": "check_and_call_function_08008020",
            "code": "\nvoid checkAndCallFunction_08008020(undefined4 inputParam)\n\n{\n  int result;\n  \n  result = FUN_08007f78();\n  if (*(char *)(result + 0x5d) == '\\0') {\n    FUN_080049e0(inputParam);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008020": "check_and_call_function_08008020",
                "param_1": "inputParam",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08004f3c"
            ],
            "called": [
                "FUN_08007f78",
                "FUN_080049e0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008078": {
            "entrypoint": "0x08008078",
            "current_name": "initialize_uart_08008078",
            "code": "\n\n\nvoid initializeUART_08008078(int *uartConfig)\n\n{\n  int uartPeriph1;\n  int uartPeriph2;\n  undefined4 uartPin1;\n  uint uartPin2;\n  uint uartPinMask1;\n  uint uartPinSetting;\n  uint uartPinShift;\n  undefined4 numBits;\n  \n  if (uartConfig != (int *)0x0) {\n    uartPeriph1 = FUN_08007320((int)*(char *)(uartConfig + 0x16),&DAT_0800a864);\n    uartPeriph2 = FUN_08007320((int)*(char *)((int)uartConfig + 0x59),&DAT_0800a81c);\n    if ((uartPeriph2 == 0) || (uartPeriph1 == 0)) {\n      FUN_080098d8(\"ERROR: at least one UART pin has no peripheral\\n\",uartPeriph2);\n    }\n    else {\n      uartPeriph1 = FUN_080073ae(uartPeriph1);\n      *uartConfig = uartPeriph1;\n      if (uartPeriph1 == 0) {\n        FUN_080098d8(\"ERROR: U(S)ART pins mismatch\\n\");\n      }\n      else {\n        if (uartPeriph1 == 0x40013800) {\n          _DAT_4002100c = _DAT_4002100c & 0xffffbfff;\n          _DAT_40021018 = _DAT_40021018 | 0x4000;\n          *(undefined *)(uartConfig + 0x11) = 0;\n          *(undefined *)((int)uartConfig + 0x5a) = 0x25;\n        }\n        else if (uartPeriph1 == 0x40004400) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffdffff;\n          _DAT_4002101c = _DAT_4002101c | 0x20000;\n          *(undefined *)(uartConfig + 0x11) = 1;\n          *(undefined *)((int)uartConfig + 0x5a) = 0x26;\n        }\n        else if (uartPeriph1 == 0x40004800) {\n          _DAT_40021010 = _DAT_40021010 & 0xfffbffff;\n          _DAT_4002101c = _DAT_4002101c | 0x40000;\n          *(undefined *)(uartConfig + 0x11) = 2;\n          *(undefined *)((int)uartConfig + 0x5a) = 0x27;\n        }\n        uartPin1 = FUN_08006bb8((uint)((int)*(char *)((int)uartConfig + 0x59) << 0x18) >> 0x1c);\n        uartPin2 = FUN_08007376((int)*(char *)((int)uartConfig + 0x59),&DAT_0800a81c);\n        uartPinMask1 = 1 << (*(byte *)((int)uartConfig + 0x59) & 0xf) & 0xffff;\n        uartPinSetting = (uartPin2 >> 3 & 1) << 4 | uartPin2 & 7;\n        uartPinShift = (uartPin2 << 0x1a) >> 0x1e;\n        _DAT_40021018 = _DAT_40021018 | 1;\n        switch((uartPin2 << 0x11) >> 0x19) {\n        case 1:\n          _DAT_40010004 = _DAT_40010004 | 0x7000001;\n          break;\n        case 2:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffe | 0x7000000;\n          break;\n        case 3:\n          _DAT_40010004 = _DAT_40010004 | 0x7000002;\n          break;\n        case 4:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffd | 0x7000000;\n          break;\n        case 5:\n          _DAT_40010004 = _DAT_40010004 | 0x7000004;\n          break;\n        case 6:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffffb | 0x7000000;\n          break;\n        case 7:\n          _DAT_40010004 = _DAT_40010004 | 0x7000008;\n          break;\n        case 8:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffff7 | 0x7000000;\n          break;\n        case 9:\n          _DAT_40010004 = _DAT_40010004 | 0x7000030;\n          break;\n        case 10:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000010;\n          break;\n        case 0xb:\n          _DAT_40010004 = _DAT_40010004 & 0xffffffcf | 0x7000000;\n          break;\n        case 0xc:\n          _DAT_40010004 = _DAT_40010004 | 0x70000c0;\n          break;\n        case 0xd:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000040;\n          break;\n        case 0xe:\n          _DAT_40010004 = _DAT_40010004 & 0xffffff3f | 0x7000000;\n          break;\n        case 0xf:\n          _DAT_40010004 = _DAT_40010004 | 0x7000300;\n          break;\n        case 0x10:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000200;\n          break;\n        case 0x11:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000100;\n          break;\n        case 0x12:\n          _DAT_40010004 = _DAT_40010004 & 0xfffffcff | 0x7000000;\n          break;\n        case 0x13:\n          _DAT_40010004 = _DAT_40010004 | 0x7000c00;\n          break;\n        case 0x14:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000800;\n          break;\n        case 0x15:\n          _DAT_40010004 = _DAT_40010004 & 0xfffff3ff | 0x7000000;\n          break;\n        case 0x16:\n          _DAT_40010004 = _DAT_40010004 | 0x7001000;\n          break;\n        case 0x17:\n          _DAT_40010004 = _DAT_40010004 & 0xffffefff | 0x7000000;\n          break;\n        case 0x1b:\n          _DAT_40010004 = _DAT_40010004 | 0x7008000;\n          break;\n        case 0x1c:\n          _DAT_40010004 = _DAT_40010004 & 0xffff7fff | 0x7000000;\n          break;\n        case 0x21:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff;\n          break;\n        case 0x22:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x1000000;\n          break;\n        case 0x23:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x2000000;\n          break;\n        case 0x24:\n          _DAT_40010004 = _DAT_40010004 & 0xf8ffffff | 0x4000000;\n        }\n        numBits = 3;\n        FUN_080040e8(uartPin1,&uartPinMask1);\n        uartPin1 = FUN_08006bb8((uint)((int)*(char *)(uartConfig + 0x16) << 0x18) >> 0x1c);\n        uartPin2 = FUN_08007376((int)*(char *)(uartConfig + 0x16),&DAT_0800a864);\n        uartPinMask1 = 1 << (*(byte *)(uartConfig + 0x16) & 0xf) & 0xffff;\n        uartPinSetting = (uartPin2 >> 3 & 1) << 4 | uartPin2 & 7;\n        uartPinShift = (uartPin2 << 0x1a) >> 0x1e;\n        FUN_080040e8(uartPin1,&uartPinMask1);\n        (&DAT_200006c0)[*(byte *)(uartConfig + 0x11)] = uartConfig + 1;\n        uartConfig[1] = *uartConfig;\n        uartConfig[2] = uartConfig[0x12];\n        uartConfig[3] = uartConfig[0x13];\n        uartConfig[4] = uartConfig[0x14];\n        uartConfig[5] = uartConfig[0x15];\n        uartConfig[6] = 0xc;\n        uartConfig[7] = 0;\n        uartConfig[8] = 0;\n        FUN_0800674e(uartConfig + 1);\n      }\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008078": "initialize_uart_08008078",
                "param_1": "uartConfig",
                "iVar1": "uartPeriph1",
                "iVar2": "uartPeriph2",
                "uVar3": "uartPin1",
                "uVar4": "uartPin2",
                "local_20": "uartPinMask1",
                "local_1c": "uartPinSetting",
                "local_18": "uartPinShift",
                "local_14": "numBits"
            },
            "calling": [
                "FUN_080084b0",
                "FUN_08008c44"
            ],
            "called": [
                "FUN_080073ae",
                "FUN_080098d8",
                "FUN_0800674e",
                "FUN_08006bb8",
                "FUN_08007376",
                "FUN_08007320",
                "FUN_080040e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080084b0": {
            "entrypoint": "0x080084b0",
            "current_name": "initialize_data_080084b0",
            "code": "\nvoid initializeData_080084b0(void)\n\n{\n  int result;\n  undefined4 temp;\n  \n  result = FUN_08007320(2,&DAT_0800a864);\n  if (result != 0) {\n    temp = FUN_08007320(2,&DAT_0800a864);\n    DAT_20000075 = FUN_0800734a(temp,&DAT_0800a81c);\n    DAT_20000074 = 2;\n    DAT_20000064 = 0x2580;\n    DAT_20000070 = 0;\n    DAT_20000068 = 0;\n    DAT_2000006c = 0;\n    FUN_08008078(&DAT_2000001c);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080084b0": "initialize_data_080084b0",
                "iVar1": "result",
                "uVar2": "temp"
            },
            "calling": [
                "FUN_08008500"
            ],
            "called": [
                "FUN_08008078",
                "FUN_0800734a",
                "FUN_08007320"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008500": {
            "entrypoint": "0x08008500",
            "current_name": "find_matching_value_08008500",
            "code": "\nuint find_matching_value_08008500(undefined4 input_value,uint limit)\n\n{\n  int initial_value;\n  int matching_value;\n  uint index;\n  \n  initial_value = FUN_08003760();\n  matching_value = FUN_08007320(2,&DAT_0800a864);\n  if (matching_value == 0) {\n    return 0;\n  }\n  for (index = 0;\n      (index < 5 &&\n      (((&DAT_200006c0)[index] == 0 ||\n       (matching_value = FUN_08007320(2,&DAT_0800a864), *(int *)(&DAT_200006c0)[index] != matching_value))));\n      index = index + 1 & 0xff) {\n  }\n  if (4 < index) {\n    if ((4 < DAT_20000060) && (FUN_080084b0(), 4 < DAT_20000060)) {\n      return 0;\n    }\n    index = (uint)DAT_20000060;\n  }\n  do {\n    matching_value = FUN_080067ac((&DAT_200006c0)[index],input_value,limit & 0xffff,1000);\n    if (matching_value == 0) {\n      return limit;\n    }\n    matching_value = FUN_08003760();\n  } while ((uint)(matching_value - initial_value) < 1000);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008500": "find_matching_value_08008500",
                "param_1": "input_value",
                "param_2": "limit",
                "iVar1": "initial_value",
                "iVar2": "matching_value",
                "uVar3": "index"
            },
            "calling": [
                "FUN_0800885c"
            ],
            "called": [
                "FUN_080084b0",
                "FUN_080067ac",
                "FUN_08007320",
                "FUN_08003760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080085b8": {
            "entrypoint": "0x080085b8",
            "current_name": "is_flag_set_080085b8",
            "code": "\nbool isFlagSet_080085b8(int flagValue)\n\n{\n  uint result;\n  \n  result = FUN_08006b1c((&DAT_200006c0)[*(byte *)(flagValue + 0x44)]);\n  return (result & 0x22) == 0x22;\n}\n\n",
            "renaming": {
                "FUN_080085b8": "is_flag_set_080085b8",
                "param_1": "flagValue",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08008600",
                "FUN_0800863c"
            ],
            "called": [
                "FUN_08006b1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080085dc": {
            "entrypoint": "0x080085dc",
            "current_name": "is_flag_set_080085dc",
            "code": "\nbool isFlagSet_080085dc(int flag)\n\n{\n  uint result;\n  \n  result = FUN_08006b1c((&DAT_200006c0)[*(byte *)(flag + 0x44)]);\n  return (result & 0x21) == 0x21;\n}\n\n",
            "renaming": {
                "FUN_080085dc": "is_flag_set_080085dc",
                "param_1": "flag",
                "uVar1": "result"
            },
            "calling": [],
            "called": [
                "FUN_08006b1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008600": {
            "entrypoint": "0x08008600",
            "current_name": "extract_and_process_data_08008600",
            "code": "\nundefined4 extractAndProcessData_08008600(int dataSize,undefined *outputData,undefined4 input1,undefined4 input2)\n\n{\n  int result;\n  \n  if (dataSize == 0) {\n    return 0xffffffff;\n  }\n  result = FUN_080085b8();\n  if (result == 0) {\n    *outputData = *(undefined *)(dataSize + 0x45);\n    FUN_080068d6((&DAT_200006c0)[*(byteValue *)(dataSize + 0x44)],dataSize + 0x45,1,&DAT_200006c0,input2);\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008600": "extract_and_process_data_08008600",
                "param_1": "dataSize",
                "param_2": "outputData",
                "param_3": "input1",
                "param_4": "input2",
                "iVar1": "result",
                "byte": "byteValue"
            },
            "calling": [
                "FUN_08008b66"
            ],
            "called": [
                "FUN_080085b8",
                "FUN_080068d6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800863c": {
            "entrypoint": "0x0800863c",
            "current_name": "update_data_and_call_functions_0800863c",
            "code": "\nvoid updateDataAndCallFunctions_0800863c(int inputData,undefined4 value1,undefined4 value2,undefined4 value3)\n\n{\n  int result;\n  uint index;\n  \n  if (inputData != 0) {\n    result = FUN_080085b8();\n    if (result == 0) {\n      index = (uint)*(byte *)(inputData + 0x44);\n      *(undefined4 *)(&DAT_20000670 + index * 4) = value1;\n      *(int *)(&DAT_20000684 + index * 4) = inputData;\n      FUN_08003f30((int)*(char *)(inputData + 0x5a),0,1,index,value3);\n      FUN_08003f94((int)*(char *)(inputData + 0x5a));\n      FUN_080068d6((&DAT_200006c0)[*(byte *)(inputData + 0x44)],inputData + 0x45,1);\n    }\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800863c": "update_data_and_call_functions_0800863c",
                "param_1": "inputData",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "iVar1": "result",
                "uVar2": "index"
            },
            "calling": [
                "FUN_08008c44"
            ],
            "called": [
                "FUN_080085b8",
                "FUN_08003f30",
                "FUN_08003f94",
                "FUN_080068d6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008694": {
            "entrypoint": "0x08008694",
            "current_name": "update_data_08008694",
            "code": "\nvoid updateData_08008694(int dataLocation,undefined4 newValue)\n\n{\n  byte byteValue;\n  \n  if (dataLocation != 0) {\n    byteValue = *(byte *)(dataLocation + 0x44);\n    *(undefined4 *)(&DAT_20000698 + (uint)byteValue * 4) = newValue;\n    *(int *)(&DAT_200006ac + (uint)byteValue * 4) = dataLocation;\n    FUN_08003f30((int)*(char *)(dataLocation + 0x5a),0,2);\n    FUN_08003f94((int)*(char *)(dataLocation + 0x5a));\n    FUN_0800688e((&DAT_200006c0)[*(byte *)(dataLocation + 0x44)],\n                 *(int *)(dataLocation + 100) + (uint)*(ushort *)(dataLocation + 0x6a),1);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008694": "update_data_08008694",
                "param_1": "dataLocation",
                "param_2": "newValue",
                "bVar1": "byteValue"
            },
            "calling": [],
            "called": [
                "FUN_08003f30",
                "FUN_08003f94",
                "FUN_0800688e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080086e8": {
            "entrypoint": "0x080086e8",
            "current_name": "find_matching_value_index_080086e8",
            "code": "\nuint find_matching_value_index_080086e8(int value)\n\n{\n  uint index;\n  \n  if (value == 0) {\n    index = 5;\n  }\n  else {\n    index = 0;\n    while( true ) {\n      if (4 < index) {\n        return index;\n      }\n      if (value == (&DAT_200006c0)[index]) break;\n      index = index + 1 & 0xff;\n    }\n  }\n  return index;\n}\n\n",
            "renaming": {
                "FUN_080086e8": "find_matching_value_index_080086e8",
                "param_1": "value",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08008730",
                "FUN_0800870c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800870c": {
            "entrypoint": "0x0800870c",
            "current_name": "execute_selected_function_0800870c",
            "code": "\nvoid executeSelectedFunction_0800870c(void)\n\n{\n  uint functionIndex;\n  \n  functionIndex = FUN_080086e8();\n  if (functionIndex < 5) {\n    (**(code **)(&DAT_20000670 + functionIndex * 4))(*(undefined4 *)(&DAT_20000684 + functionIndex * 4));\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800870c": "execute_selected_function_0800870c",
                "uVar1": "functionIndex"
            },
            "calling": [
                "FUN_0800694c"
            ],
            "called": [
                "FUN_080086e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008730": {
            "entrypoint": "0x08008730",
            "current_name": "execute_function_08008730",
            "code": "\nvoid executeFunction_08008730(void)\n\n{\n  uint randomNumber;\n  int result;\n  int functionAddress;\n  \n  randomNumber = FUN_080086e8();\n  functionAddress = *(int *)(&DAT_200006ac + randomNumber * 4);\n  if ((randomNumber < 5) && (result = (**(code **)(&DAT_20000698 + randomNumber * 4))(functionAddress), result != -1)) {\n    FUN_0800688e((&DAT_200006c0)[*(byte *)(functionAddress + 0x44)],\n                 *(int *)(functionAddress + 100) + (uint)*(ushort *)(functionAddress + 0x6a),1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008730": "execute_function_08008730",
                "uVar1": "randomNumber",
                "iVar2": "result",
                "iVar3": "functionAddress"
            },
            "calling": [
                "FUN_08006932"
            ],
            "called": [
                "FUN_080086e8",
                "FUN_0800688e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800877c": {
            "entrypoint": "0x0800877c",
            "current_name": "FUNC_0800877c",
            "code": "\nvoid FUNC_0800877c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800877c": "FUNC_0800877c"
            },
            "calling": [
                "FUN_080069ec"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008804": {
            "entrypoint": "0x08008804",
            "current_name": "allocate_memory_08008804",
            "code": "\nundefined * allocateMemory_08008804(int size)\n\n{\n  undefined *allocatedMemory;\n  \n  if (DAT_200006d4 == (undefined *)0x0) {\n    DAT_200006d4 = &DAT_20000a3c;\n  }\n  allocatedMemory = DAT_200006d4;\n  if (DAT_200006d4 + size <= stackEnd) {\n    DAT_200006d4 = DAT_200006d4 + size;\n    return allocatedMemory;\n  }\n  DAT_20000a38 = 0xc;\n  return (undefined *)0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008804": "allocate_memory_08008804",
                "param_1": "size",
                "puVar1": "allocatedMemory",
                "&stack0x00000000": "stackEnd"
            },
            "calling": [
                "FUN_08009918"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008840": {
            "entrypoint": "0x08008840",
            "current_name": "get_error_code_08008840",
            "code": "\nundefined4 get_error_code_08008840(void)\n\n{\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008840": "get_error_code_08008840"
            },
            "calling": [],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008846": {
            "entrypoint": "0x08008846",
            "current_name": "initialize_memory_08008846",
            "code": "\nundefined4 initializeMemory_08008846(undefined4 destAddress,int srcAddress)\n\n{\n  *(undefined4 *)(srcAddress + 4) = 0x2000;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008846": "initialize_memory_08008846",
                "param_1": "destAddress",
                "param_2": "srcAddress"
            },
            "calling": [
                "FUN_0800a0ec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008850": {
            "entrypoint": "0x08008850",
            "current_name": "initialize_08008850",
            "code": "\nundefined4 initialize_08008850(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08008850": "initialize_08008850"
            },
            "calling": [
                "FUN_0800a110"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008854": {
            "entrypoint": "0x08008854",
            "current_name": "initialize_application_08008854",
            "code": "\nundefined4 initializeApplication_08008854(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008854": "initialize_application_08008854"
            },
            "calling": [
                "FUN_0800a130"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008858": {
            "entrypoint": "0x08008858",
            "current_name": "initialize_program_08008858",
            "code": "\nundefined4 initializeProgram_08008858(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008858": "initialize_program_08008858"
            },
            "calling": [
                "FUN_0800a168"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800885c": {
            "entrypoint": "0x0800885c",
            "current_name": "execute_function_0800885c",
            "code": "\nvoid executeFunction_0800885c(undefined4 param1,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  FUN_08008500(param2,param3,param3,param4,param4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800885c": "execute_function_0800885c",
                "param_1": "param1",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [
                "FUN_0800a042"
            ],
            "called": [
                "FUN_08008500"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008868": {
            "entrypoint": "0x08008868",
            "current_name": "infinite_loop_08008868",
            "code": "\nvoid infiniteLoop_08008868(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08008868": "infinite_loop_08008868"
            },
            "calling": [
                "FUN_08008868",
                "FUN_08009b5c"
            ],
            "called": [
                "FUN_08008868"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800886c": {
            "entrypoint": "0x0800886c",
            "current_name": "initialize_data_0800886c",
            "code": "\nundefined4 initializeData_0800886c(void)\n\n{\n  DAT_20000a38 = 0x16;\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800886c": "initialize_data_0800886c"
            },
            "calling": [
                "FUN_08009fe8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800887c": {
            "entrypoint": "0x0800887c",
            "current_name": "initialize_application_0800887c",
            "code": "\nundefined4 initializeApplication_0800887c(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_0800887c": "initialize_application_0800887c"
            },
            "calling": [
                "thunk_FUN_0800887c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008880": {
            "entrypoint": "0x08008880",
            "current_name": "decode_data_08008880",
            "code": "\nuint decodeData_08008880(uint input)\n\n{\n  bool isLessThanThreshold;\n  char decodedChar;\n  uint decodedValue;\n  \n  if (input < 0xe) {\n    if (input + 0x2e < 0x3c) {\n      isLessThanThreshold = true;\n    }\n    else {\n      isLessThanThreshold = false;\n    }\n  }\n  else {\n    isLessThanThreshold = input < 0x3c;\n  }\n  if (isLessThanThreshold) {\n    if (input < 0xe) {\n      input = input + 0x2e;\n    }\n    decodedChar = (&DAT_0800a908)[input];\n  }\n  else {\n    decodedChar = -1;\n  }\n  if (decodedChar == -1) {\n    decodedValue = 0;\n  }\n  else {\n    decodedValue = FUN_08006d80();\n    if (DAT_20000088 != 0xc) {\n      if (DAT_20000088 < 0xc) {\n        return decodedValue >> (0xc - DAT_20000088 & 0xff);\n      }\n      return decodedValue << (DAT_20000088 - 0xc & 0xff);\n    }\n  }\n  return decodedValue;\n}\n\n",
            "renaming": {
                "FUN_08008880": "decode_data_08008880",
                "param_1": "input",
                "bVar1": "isLessThanThreshold",
                "cVar2": "decodedChar",
                "uVar3": "decodedValue"
            },
            "calling": [
                "FUN_080022f8",
                "FUN_08000488"
            ],
            "called": [
                "FUN_08006d80"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080088e0": {
            "entrypoint": "0x080088e0",
            "current_name": "process_data_080088e0",
            "code": "\nvoid processData_080088e0(uint inputIndex,uint inputValue)\n\n{\n  int result1;\n  int lookupIndex;\n  \n  if (inputIndex < 0x3c) {\n    lookupIndex = (int)(char)(&DAT_0800a908)[inputIndex];\n  }\n  else {\n    lookupIndex = -1;\n  }\n  if (lookupIndex != -1) {\n    result1 = FUN_0800738a(lookupIndex,&DAT_0800a6cc);\n    if (result1 == 0) {\n      FUN_08008990(inputIndex,1);\n      if (DAT_2000008c != 8) {\n        if (DAT_2000008c < 9) {\n          inputValue = inputValue << (8 - DAT_2000008c & 0xff);\n        }\n        else {\n          inputValue = inputValue >> (DAT_2000008c - 8 & 0xff);\n        }\n      }\n      if (inputValue < 0x80) {\n        FUN_08008a24(inputIndex,0);\n      }\n      else {\n        FUN_08008a24(inputIndex,1);\n      }\n    }\n    else {\n      result1 = FUN_08006b28(lookupIndex,&DAT_200006d8);\n      if (result1 == 0) {\n        FUN_08006b3e(lookupIndex,&DAT_200006d8);\n      }\n      if (DAT_2000008c != 8) {\n        if (DAT_2000008c < 9) {\n          inputValue = inputValue << (8 - DAT_2000008c & 0xff);\n        }\n        else {\n          inputValue = inputValue >> (DAT_2000008c - 8 & 0xff);\n        }\n      }\n      FUN_08007118(lookupIndex,0x3e418,0xff,inputValue,result1 == 0);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080088e0": "process_data_080088e0",
                "param_1": "inputIndex",
                "param_2": "inputValue",
                "iVar1": "result1",
                "iVar2": "lookupIndex"
            },
            "calling": [
                "FUN_0800021a",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08008990",
                "FUN_08008a24",
                "FUN_08007118",
                "FUN_0800738a",
                "FUN_08006b3e",
                "FUN_08006b28"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008990": {
            "entrypoint": "0x08008990",
            "current_name": "process_data_08008990",
            "code": "\nvoid processData_08008990(uint inputIndex,undefined4 option,undefined4 arg1,undefined1 *data)\n\n{\n  int result;\n  undefined1 *targetArray;\n  int value;\n  \n  if (inputIndex < 0x3c) {\n    value = (int)(char)(&DAT_0800a908)[inputIndex];\n    targetArray = &DAT_0800a908;\n  }\n  else {\n    value = -1;\n    targetArray = data;\n  }\n  if (value != -1) {\n    result = FUN_08006b28(value,&DAT_200006d8,arg1,targetArray,data);\n    if (result != 0) {\n      result = FUN_0800738a(value,&DAT_0800a6cc);\n      if (result != 0) {\n        FUN_080071e4(value);\n      }\n      FUN_08006b5c(value,&DAT_200006d8);\n    }\n    switch(option) {\n    case 0:\n      FUN_08007258(value,0);\n      break;\n    case 1:\n      FUN_08007258(value,1,0);\n      break;\n    case 2:\n      FUN_08007258(value,0,1);\n      break;\n    case 3:\n      FUN_08007258(value,0,2);\n    }\n    FUN_08006b3e(value,&DAT_200006ec);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008990": "process_data_08008990",
                "param_1": "inputIndex",
                "param_2": "option",
                "param_3": "arg1",
                "param_4": "data",
                "iVar1": "result",
                "puVar2": "targetArray",
                "iVar3": "value"
            },
            "calling": [
                "FUN_08003002",
                "FUN_080088e0",
                "FUN_080025ac",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08006b5c",
                "FUN_080071e4",
                "FUN_08007258",
                "FUN_0800738a",
                "FUN_08006b3e",
                "FUN_08006b28"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008a24": {
            "entrypoint": "0x08008a24",
            "current_name": "decode_and_process_data_08008a24",
            "code": "\nvoid decode_and_process_data_08008a24(uint input_index,undefined4 data_param,undefined4 size_param,undefined1 *input_data)\n\n{\n  int result;\n  undefined4 processed_data;\n  undefined1 *data_ptr;\n  uint data_value;\n  \n  if (input_index < 0x3c) {\n    data_value = (uint)(char)(&DAT_0800a908)[input_index];\n    data_ptr = &DAT_0800a908;\n  }\n  else {\n    data_value = 0xffffffff;\n    data_ptr = input_data;\n  }\n  if ((data_value != 0xffffffff) &&\n     (result = FUN_08006b28(data_value,&DAT_200006ec,size_param,data_ptr,input_data), result != 0)) {\n    processed_data = FUN_08006b7c((data_value << 0x18) >> 0x1c);\n    FUN_080072d8(processed_data,1 << (data_value & 0xf) & 0xffff,data_param);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008a24": "decode_and_process_data_08008a24",
                "param_1": "input_index",
                "param_2": "data_param",
                "param_3": "size_param",
                "param_4": "input_data",
                "iVar1": "result",
                "uVar2": "processed_data",
                "puVar3": "data_ptr",
                "uVar4": "data_value"
            },
            "calling": [
                "FUN_08002fca",
                "FUN_080088e0",
                "FUN_080005f8"
            ],
            "called": [
                "FUN_08006b7c",
                "FUN_08006b28",
                "FUN_080072d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008a6c": {
            "entrypoint": "0x08008a6c",
            "current_name": "check_value_08008a6c",
            "code": "\nchar check_value_08008a6c(uint input_value)\n\n{\n  char result;\n  int check_result;\n  undefined4 shifted_value;\n  uint lookup_index;\n  \n  if (input_value < 0x3c) {\n    lookup_index = (uint)(char)(&DAT_0800a908)[input_value];\n  }\n  else {\n    lookup_index = 0xffffffff;\n  }\n  if (lookup_index == 0xffffffff) {\n    result = '\\0';\n  }\n  else {\n    check_result = FUN_08006b28(lookup_index,&DAT_200006ec);\n    if (check_result == 0) {\n      result = '\\0';\n    }\n    else {\n      shifted_value = FUN_08006b7c((lookup_index << 0x18) >> 0x1c);\n      result = FUN_080072f0(shifted_value,1 << (lookup_index & 0xf) & 0xffff);\n    }\n  }\n  if (result != '\\0') {\n    result = '\\x01';\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08008a6c": "check_value_08008a6c",
                "param_1": "input_value",
                "cVar1": "result",
                "iVar2": "check_result",
                "uVar3": "shifted_value",
                "uVar4": "lookup_index"
            },
            "calling": [
                "FUN_08000ef8"
            ],
            "called": [
                "FUN_08006b7c",
                "FUN_08006b28",
                "FUN_080072f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008abc": {
            "entrypoint": "0x08008abc",
            "current_name": "initialize_system_08008abc",
            "code": "\nvoid initialize_system_08008abc(void)\n\n{\n  FUN_0800723c();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008abc": "initialize_system_08008abc"
            },
            "calling": [
                "FUN_080022f8"
            ],
            "called": [
                "FUN_0800723c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008ac4": {
            "entrypoint": "0x08008ac4",
            "current_name": "FUNC_08008ac4",
            "code": "\nvoid FUNC_08008ac4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008ac4": "FUNC_08008ac4"
            },
            "calling": [
                "FUN_08003002",
                "FUN_08002fca"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008afa": {
            "entrypoint": "0x08008afa",
            "current_name": "calculate_result_08008afa",
            "code": "\nushort calculateResult_08008afa(int inputValue)\n\n{\n  return (*(short *)(inputValue + 0x134) + 0x40) - *(short *)(inputValue + 0x136) & 0x3f;\n}\n\n",
            "renaming": {
                "FUN_08008afa": "calculate_result_08008afa",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08008bf4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b66": {
            "entrypoint": "0x08008b66",
            "current_name": "update_and_shift_value_08008b66",
            "code": "\nvoid updateAndShiftValue_08008b66(int input)\n\n{\n  int result;\n  ushort updatedValue;\n  undefined newLocalValue;\n  \n  result = FUN_08008600(input,&newLocalValue);\n  if ((result == 0) &&\n     (updatedValue = *(short *)(input + 0x60) + 1U & 0x3f, updatedValue != *(ushort *)(input + 0x62))) {\n    *(undefined *)(*(int *)(input + 0x5c) + (uint)*(ushort *)(input + 0x60)) = newLocalValue;\n    *(ushort *)(input + 0x60) = updatedValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008b66": "update_and_shift_value_08008b66",
                "param_1": "input",
                "iVar1": "result",
                "uVar2": "updatedValue",
                "local_9": "newLocalValue"
            },
            "calling": [],
            "called": [
                "FUN_08008600"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008bf4": {
            "entrypoint": "0x08008bf4",
            "current_name": "FUNC_08008bf4",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08008bfa) */\n/* WARNING: Removing unreachable block (ram,0x08008c0c) */\n/* WARNING: Removing unreachable block (ram,0x08008c02) */\n/* WARNING: Removing unreachable block (ram,0x08008c14) */\n\nvoid FUNC_08008bf4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008bf4": "FUNC_08008bf4"
            },
            "calling": [
                "FUN_08008f1c"
            ],
            "called": [
                "FUN_08008afa"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008c20": {
            "entrypoint": "0x08008c20",
            "current_name": "initialize_struct_08008c20",
            "code": "\nvoid initializeStruct_08008c20(int objectAddress)\n\n{\n  *(int *)(objectAddress + 0x130) = objectAddress + 0x11;\n  *(undefined2 *)(objectAddress + 0x134) = 0;\n  *(undefined2 *)(objectAddress + 0x136) = 0;\n  *(int *)(objectAddress + 0x138) = objectAddress + 0x51;\n  *(undefined2 *)(objectAddress + 0x13c) = 0;\n  *(undefined2 *)(objectAddress + 0x13e) = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008c20": "initialize_struct_08008c20",
                "param_1": "objectAddress"
            },
            "calling": [
                "FUN_08008d30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008c44": {
            "entrypoint": "0x08008c44",
            "current_name": "initialize_hardware_serial_08008c44",
            "code": "\nvoid initializeHardwareSerial_08008c44(int serialInstance,undefined4 baudRate,byte serialConfig)\n\n{\n  uint configBit;\n  byte serialMode;\n  int configOption;\n  code *jumpTable;\n  \n  *(undefined4 *)(serialInstance + 0x11c) = baudRate;\n  *(byte *)(serialInstance + 0x140) = serialConfig;\n  serialMode = serialConfig & 7;\n  if (serialMode == 4) {\n    configOption = 7;\n  }\n  else if (serialMode == 6) {\n    configOption = 8;\n  }\n  else if (serialMode == 2) {\n    configOption = 6;\n  }\n  else {\n    configOption = 0;\n  }\n  if ((serialConfig & 0x30) == 0x30) {\n    *(undefined4 *)(serialInstance + 0x128) = 0x600;\n    configOption = configOption + 1;\n  }\n  else if ((serialConfig & 0x20) == 0) {\n    *(undefined4 *)(serialInstance + 0x128) = 0;\n  }\n  else {\n    *(undefined4 *)(serialInstance + 0x128) = 0x400;\n    configOption = configOption + 1;\n  }\n  if ((serialConfig & 8) == 0) {\n    *(undefined4 *)(serialInstance + 0x124) = 0;\n  }\n  else {\n    *(undefined4 *)(serialInstance + 0x124) = 0x2000;\n  }\n  if (configOption == 8) {\n    *(undefined4 *)(serialInstance + 0x120) = 0;\n  }\n  else if (configOption == 9) {\n    *(undefined4 *)(serialInstance + 0x120) = 0x1000;\n  }\n  else {\n    configOption = 0;\n  }\n  if (configOption != 0) {\n    FUN_08008078(serialInstance + 0xd4);\n    FUN_0800863c(serialInstance + 0xd4,0x8008b67);\n    return;\n  }\n  jumpTable = (code *)0x8008cee;\n  FUN_080090cc(\"/home/bo/.arduino15/packages/STM32/hardware/stm32/1.3.0/cores/arduino/HardwareSerial.cpp\"\n               ,299,\"void HardwareSerial::begin(long unsigned int, byte)\",\"databits!=0\");\n  if (configBit < 0x3c) {\n    uRam0000012d = (&DAT_0800a908)[configBit];\n  }\n  else {\n    uRam0000012d = 0xff;\n  }\n                    /* WARNING: Could not recover jumptable at 0x08008d0c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)(0,configBit,&stack0x00000148);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008c44": "initialize_hardware_serial_08008c44",
                "param_1": "serialInstance",
                "param_2": "baudRate",
                "param_3": "serialConfig",
                "extraout_r1": "configBit",
                "bVar1": "serialMode",
                "iVar2": "configOption",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_08003048"
            ],
            "called": [
                "FUN_08008078",
                "FUN_080090cc",
                "FUN_0800863c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008d00": {
            "entrypoint": "0x08008d00",
            "current_name": "set_default_value_08008d00",
            "code": "\nvoid setDefaultValue_08008d00(int address,uint value)\n\n{\n  undefined defaultVal;\n  code *jumpTable;\n  \n  if (value < 0x3c) {\n    defaultVal = (&DAT_0800a908)[value];\n  }\n  else {\n    defaultVal = 0xff;\n  }\n  *(undefined *)(address + 0x12d) = defaultVal;\n                    /* WARNING: Could not recover jumptable at 0x08008d0c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008d00": "set_default_value_08008d00",
                "param_1": "address",
                "param_2": "value",
                "uVar1": "defaultVal",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_08008d30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008d18": {
            "entrypoint": "0x08008d18",
            "current_name": "set_byte_at_offset_08008d18",
            "code": "\nvoid setByteAtOffset_08008d18(int memoryAddress,uint index)\n\n{\n  undefined value;\n  \n  if (index < 0x3c) {\n    value = (&DAT_0800a908)[index];\n  }\n  else {\n    value = 0xff;\n  }\n  *(undefined *)(memoryAddress + 300) = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008d18": "set_byte_at_offset_08008d18",
                "param_1": "memoryAddress",
                "param_2": "index",
                "uVar1": "value"
            },
            "calling": [
                "FUN_08008d30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008d30": {
            "entrypoint": "0x08008d30",
            "current_name": "initialize_parameters_08008d30",
            "code": "\nundefined4 *\ninitializeParameters_08008d30(undefined4 *result,undefined4 input,undefined4 value1,undefined4 value2)\n\n{\n  undefined temp;\n  \n  result[1] = 0;\n  result[2] = 1000;\n  *result = &PTR_LAB_08008ba4_1_0800aab8;\n  if (result == (undefined4 *)&DAT_20000700) {\n    FUN_08008d00(&DAT_20000700,0,value1,&DAT_20000700,value2);\n    FUN_08008d18(&DAT_20000700,1);\n  }\n  else {\n    temp = FUN_0800734a(input,&DAT_0800a81c);\n    *(undefined *)((int)result + 0x12d) = temp;\n    temp = FUN_0800734a(input,&DAT_0800a864);\n    *(undefined *)(result + 0x4b) = temp;\n  }\n  FUN_08008c20(result);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08008d30": "initialize_parameters_08008d30",
                "param_1": "result",
                "param_2": "input",
                "param_3": "value1",
                "param_4": "value2",
                "uVar1": "temp"
            },
            "calling": [
                "FUN_08008d8c"
            ],
            "called": [
                "FUN_08008d18",
                "FUN_08008d00",
                "FUN_08008c20",
                "FUN_0800734a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008d8c": {
            "entrypoint": "0x08008d8c",
            "current_name": "check_param_and_call_08008d8c",
            "code": "\nvoid check_param_and_call_08008d8c(int status_code,int magic_number,undefined4 param_3,undefined4 param_4)\n\n{\n  if (status_code != 1) {\n    return;\n  }\n  if (magic_number == 0xffff) {\n    FUN_08008d30(&DAT_20000700,0x40004400,param_3,0xffff,param_4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008d8c": "check_param_and_call_08008d8c",
                "param_1": "status_code",
                "param_2": "magic_number"
            },
            "calling": [],
            "called": [
                "FUN_08008d30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008df8": {
            "entrypoint": "0x08008df8",
            "current_name": "initialize_data_08008df8",
            "code": "\nvoid initializeData_08008df8(undefined4 *dataPointer,undefined value1,undefined value2,undefined value3,\n                 undefined value4)\n\n{\n  *dataPointer = &DAT_0800ab0c;\n  *(undefined *)(dataPointer + 1) = value1;\n  *(undefined *)((int)dataPointer + 5) = value2;\n  *(undefined *)((int)dataPointer + 6) = value3;\n  *(undefined *)((int)dataPointer + 7) = value4;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008df8": "initialize_data_08008df8",
                "param_1": "dataPointer",
                "param_2": "value1",
                "param_3": "value2",
                "param_4": "value3",
                "param_5": "value4"
            },
            "calling": [
                "FUN_08008e14"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008e14": {
            "entrypoint": "0x08008e14",
            "current_name": "execute_if_param_equals_08008e14",
            "code": "\nvoid execute_if_param_equals_08008e14(int value_1,int value_2)\n\n{\n  if ((value_1 == 1) && (value_2 == 0xffff)) {\n    FUN_08008df8(&DAT_20000844,0,0,0,0);\n    return;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008e14": "execute_if_param_equals_08008e14",
                "param_1": "value_1",
                "param_2": "value_2"
            },
            "calling": [],
            "called": [
                "FUN_08008df8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008ef4": {
            "entrypoint": "0x08008ef4",
            "current_name": "calculate_interpolation_08008ef4",
            "code": "\nint calculate_interpolation_08008ef4(int start_value,int start_point,int end_point,int start_result,int end_result)\n\n{\n  return (unsigned_integer)((end_result - start_result) * (start_value - start_point)) / (unsigned_integer)(end_point - start_point) + start_result;\n}\n\n",
            "renaming": {
                "FUN_08008ef4": "calculate_interpolation_08008ef4",
                "param_1": "start_value",
                "param_2": "start_point",
                "param_3": "end_point",
                "param_4": "start_result",
                "param_5": "end_result",
                "uint": "unsigned_integer"
            },
            "calling": [
                "FUN_080026b0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008f0c": {
            "entrypoint": "0x08008f0c",
            "current_name": "FUNC_08008f0c",
            "code": "\nvoid FUNC_08008f0c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008f0c": "FUNC_08008f0c"
            },
            "calling": [
                "FUN_08008f1c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008f0e": {
            "entrypoint": "0x08008f0e",
            "current_name": "initialize_application_08008f0e",
            "code": "\nvoid initializeApplication_08008f0e(void)\n\n{\n  FUN_08003f0c(3);\n  FUN_080036a2();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008f0e": "initialize_application_08008f0e"
            },
            "calling": [
                "FUN_08009148"
            ],
            "called": [
                "FUN_080036a2",
                "FUN_08003f0c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008f1c": {
            "entrypoint": "0x08008f1c",
            "current_name": "infinite_loop_08008f1c",
            "code": "\nvoid infiniteLoop_08008f1c(void)\n\n{\n  FUNC_08008f0c();\n  FUN_08001b48();\n  do {\n    FUN_080022f8();\n    FUNC_08008bf4();\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08008f1c": "infinite_loop_08008f1c"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_080022f8",
                "FUN_08008f0c",
                "FUN_08008bf4",
                "FUN_08001b48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008f3c": {
            "entrypoint": "0x08008f3c",
            "current_name": "count_set_bits_08008f3c",
            "code": "\nchar countSetBits_08008f3c(uint input)\n\n{\n  char bitCount;\n  \n  bitCount = '\\0';\n  for (; input != 1; input = input >> 1) {\n    bitCount = bitCount + '\\x01';\n  }\n  return bitCount;\n}\n\n",
            "renaming": {
                "FUN_08008f3c": "count_set_bits_08008f3c",
                "param_1": "input",
                "cVar1": "bitCount"
            },
            "calling": [
                "FUN_08009094"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008f78": {
            "entrypoint": "0x08008f78",
            "current_name": "initialize_data_08008f78",
            "code": "\nvoid initializeData_08008f78(int flag,int value,undefined4 param3,undefined4 param4)\n\n{\n  if (flag != 1) {\n    return;\n  }\n  if (value == 0xffff) {\n    DAT_2000084c = 6;\n    DAT_20000858 = 0;\n    DAT_20000860 = 7;\n    DAT_2000086c = 0;\n    DAT_20000874 = 8;\n    DAT_20000880 = 0;\n    DAT_20000888 = 9;\n    DAT_20000894 = 0;\n    DAT_2000089c = 10;\n    DAT_200008a8 = 0;\n    DAT_200008b0 = 0x17;\n    DAT_200008bc = 0;\n    DAT_200008c4 = 0x17;\n    DAT_200008d0 = 0;\n    DAT_200008d8 = 0x17;\n    DAT_200008e4 = 0;\n    DAT_200008ec = 0x17;\n    DAT_200008f8 = 0;\n    DAT_20000900 = 0x17;\n    DAT_2000090c = 0;\n    DAT_20000914 = 0x28;\n    DAT_20000920 = 0;\n    DAT_20000928 = 0x28;\n    DAT_20000934 = 0;\n    DAT_2000093c = 0x28;\n    DAT_20000948 = 0;\n    DAT_20000950 = 0x28;\n    DAT_2000095c = 0;\n    DAT_20000964 = 0x28;\n    DAT_20000970 = 0;\n    DAT_20000978 = 0x28;\n    DAT_20000984 = 0;\n    FUN_080090c2(0,&LAB_08008f50_1,&DAT_20000000,&DAT_2000084c,param4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008f78": "initialize_data_08008f78",
                "param_1": "flag",
                "param_2": "value",
                "param_3": "param3",
                "param_4": "param4"
            },
            "calling": [],
            "called": [
                "FUN_080090c2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009084": {
            "entrypoint": "0x08009084",
            "current_name": "execute_or_recurse_08009084",
            "code": "\nvoid executeOrRecurse_08009084(int input)\n\n{\n  int index;\n  \n  if (*(int *)(input + 8) != 0) {\n    (**(code **)(input + 0xc))();\n    return;\n  }\n  FUN_0800a18c();\n  index = FUN_08008f3c();\n  if ((&DAT_20000858)[index * 5] != 0) {\n    executeOrRecurse_08009084();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009084": "execute_or_recurse_08009084",
                "param_1": "input",
                "iVar1": "index"
            },
            "calling": [
                "FUN_08009094"
            ],
            "called": [
                "FUN_0800a18c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009094": {
            "entrypoint": "0x08009094",
            "current_name": "check_and_execute_08009094",
            "code": "\nvoid checkAndExecute_08009094(void)\n\n{\n  int result;\n  \n  result = FUN_08008f3c();\n  if ((&DAT_20000858)[result * 5] != 0) {\n    FUN_08009084();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009094": "check_and_execute_08009094",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080042f0"
            ],
            "called": [
                "FUN_08008f3c",
                "FUN_08009084"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080090c2": {
            "entrypoint": "0x080090c2",
            "current_name": "call_function_with_swapped_parameters_080090c2",
            "code": "\nvoid callFunctionWithSwappedParameters_080090c2(undefined4 source,undefined4 destination)\n\n{\n  FUN_08009108(destination,source);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080090c2": "call_function_with_swapped_parameters_080090c2",
                "param_1": "source",
                "param_2": "destination"
            },
            "calling": [
                "FUN_08008f78"
            ],
            "called": [
                "FUN_08009108"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080090cc": {
            "entrypoint": "0x080090cc",
            "current_name": "assertion_failed_080090cc",
            "code": "\nvoid assertionFailed_080090cc(undefined4 file,undefined4 line,char *errorMessage,undefined4 functionName)\n\n{\n  undefined4 filePointer;\n  char *additionalInfo;\n  undefined8 result;\n  undefined4 functionPointer;\n  \n  filePointer = *(undefined4 *)(DAT_20000090 + 0xc);\n  functionPointer = functionName;\n  if (errorMessage == (char *)0x0) goto LAB_080090f0;\n  additionalInfo = \", function: \";\n  do {\n    FUN_08009124(filePointer,\"assertion \\\"%s\\\" failed: file \\\"%s\\\", line %d%s%s\\n\",functionName,file,line\n                 ,additionalInfo,errorMessage,functionPointer);\n    result = FUN_08009b5c();\n    line = (undefined4)((ulonglong)result >> 0x20);\n    filePointer = (undefined4)result;\nLAB_080090f0:\n    errorMessage = \"\";\n    additionalInfo = errorMessage;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080090cc": "assertion_failed_080090cc",
                "param_1": "file",
                "param_2": "line",
                "param_3": "errorMessage",
                "param_4": "functionName",
                "uVar1": "filePointer",
                "pcVar2": "additionalInfo",
                "uVar3": "result",
                "uVar4": "functionPointer"
            },
            "calling": [
                "FUN_08008c44"
            ],
            "called": [
                "FUN_08009b5c",
                "FUN_08009124"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009108": {
            "entrypoint": "0x08009108",
            "current_name": "shift_left_to_long_long_08009108",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08009110) */\n\nlonglong shiftLeftToLongLong_08009108(undefined4 undefined,uint inputValue)\n\n{\n  return (ulonglong)inputValue << 0x20;\n}\n\n",
            "renaming": {
                "FUN_08009108": "shift_left_to_long_long_08009108",
                "param_1": "undefined",
                "param_2": "inputValue"
            },
            "calling": [
                "FUN_080090c2"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009124": {
            "entrypoint": "0x08009124",
            "current_name": "apply_function_08009124",
            "code": "\nvoid applyFunction_08009124(undefined4 inputParam1,undefined4 inputParam2,undefined4 outputParam1,undefined4 outputParam2)\n\n{\n  undefined4 outputVar1;\n  undefined4 outputVar2;\n  \n  outputVar1 = outputParam1;\n  outputVar2 = outputParam2;\n  FUN_0800937c(DAT_20000090,inputParam1,inputParam2,&outputVar1,inputParam1,&outputVar1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009124": "apply_function_08009124",
                "param_1": "inputParam1",
                "param_2": "inputParam2",
                "param_3": "outputParam1",
                "param_4": "outputParam2",
                "uStack_8": "outputVar1",
                "uStack_4": "outputVar2"
            },
            "calling": [
                "FUN_080090cc"
            ],
            "called": [
                "FUN_0800937c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009148": {
            "entrypoint": "0x08009148",
            "current_name": "execute_functions_08009148",
            "code": "\nvoid executeFunctions_08009148(void)\n\n{\n  int index;\n  \n  for (index = 0; index != 0; index = index + 1) {\n    (*(code *)(&DAT_0800abe4)[index])();\n  }\n  FUNC_0800a424();\n  for (index = 0; index != 0xc; index = index + 1) {\n    (*(code *)(&DAT_0800abe4)[index])();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009148": "execute_functions_08009148",
                "iVar1": "index"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_0800a424",
                "FUN_08008f0e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009190": {
            "entrypoint": "0x08009190",
            "current_name": "initialize_data_08009190",
            "code": "\nvoid initializeData_08009190(undefined4 data)\n\n{\n  FUN_08009270(DAT_20000090,data);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009190": "initialize_data_08009190",
                "param_1": "data"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [
                "FUN_08009270"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091a0": {
            "entrypoint": "0x080091a0",
            "current_name": "initialize_data_080091a0",
            "code": "\nvoid initializeData_080091a0(undefined4 data)\n\n{\n  FUN_080091d8(DAT_20000090,data);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091a0": "initialize_data_080091a0",
                "param_1": "data"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [
                "FUN_080091d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091b0": {
            "entrypoint": "0x080091b0",
            "current_name": "copy_bytes_080091b0",
            "code": "\nvoid copyBytes_080091b0(int dstStart,undefined *src,int srcLength)\n\n{\n  undefined *srcEnd;\n  undefined *dstEnd;\n  \n  dstEnd = (undefined *)(dstStart + -1);\n  srcEnd = src + srcLength;\n  for (; src != srcEnd; src = src + 1) {\n    dstEnd = dstEnd + 1;\n    *dstEnd = *src;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091b0": "copy_bytes_080091b0",
                "param_1": "dstStart",
                "param_2": "src",
                "param_3": "srcLength",
                "puVar1": "srcEnd",
                "puVar2": "dstEnd"
            },
            "calling": [
                "FUN_080027f0",
                "FUN_08009908"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091c6": {
            "entrypoint": "0x080091c6",
            "current_name": "fill_array_with_value_080091c6",
            "code": "\nvoid fillArrayWithValue_080091c6(undefined *array,undefined value,int length)\n\n{\n  undefined *endPointer;\n  \n  endPointer = array + length;\n  for (; array != endPointer; array = array + 1) {\n    *array = value;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091c6": "fill_array_with_value_080091c6",
                "param_1": "array",
                "param_2": "value",
                "param_3": "length",
                "puVar1": "endPointer"
            },
            "calling": [
                "FUN_08002a58",
                "FUN_08009cdc",
                "FUN_08002968",
                "FUN_08007118",
                "FUN_08009db0",
                "FUN_08009d24",
                "FUN_08006d80"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091d8": {
            "entrypoint": "0x080091d8",
            "current_name": "update_data_structure_080091d8",
            "code": "\nvoid updateDataStructure_080091d8(undefined4 *output,int numElements,undefined4 arg3,undefined4 arg4)\n\n{\n  int **extraOutput;\n  int **prevNodePointer;\n  int **currentNodePointer;\n  int *tempPointer;\n  int **prevNodeNextPointer;\n  int **currentNodeNextPointer;\n  \n  if (numElements == 0) {\n    return;\n  }\n  currentNodeNextPointer = (int **)(numElements + -4);\n  if (*(int *)(numElements + -4) < 0) {\n    currentNodeNextPointer = (int **)((int)currentNodeNextPointer + *(int *)(numElements + -4));\n  }\n  FUNC_08009f48();\n  currentNodePointer = (int **)&DAT_2000098c;\n  if (DAT_2000098c == (int **)0x0) {\n    currentNodeNextPointer[1] = (int *)0x0;\n    prevNodePointer = extraOutput;\n    DAT_2000098c = currentNodeNextPointer;\n  }\n  else {\n    currentNodePointer = DAT_2000098c;\n    if (currentNodeNextPointer < DAT_2000098c) {\n      prevNodePointer = (int **)*currentNodeNextPointer;\n      currentNodePointer = (int **)((int)currentNodeNextPointer + (int)prevNodePointer);\n      if (DAT_2000098c == currentNodePointer) {\n        tempPointer = *DAT_2000098c;\n        DAT_2000098c = (int **)DAT_2000098c[1];\n        currentNodePointer = (int **)((int)tempPointer + (int)prevNodePointer);\n        *currentNodeNextPointer = (int *)currentNodePointer;\n      }\n      currentNodeNextPointer[1] = (int *)DAT_2000098c;\n      DAT_2000098c = currentNodeNextPointer;\n    }\n    else {\n      do {\n        prevNodeNextPointer = currentNodePointer;\n        currentNodePointer = (int **)prevNodeNextPointer[1];\n        if (currentNodePointer == (int **)0x0) break;\n      } while (currentNodePointer <= currentNodeNextPointer);\n      prevNodePointer = (int **)*prevNodeNextPointer;\n      if ((int **)((int)prevNodeNextPointer + (int)prevNodePointer) == currentNodeNextPointer) {\n        prevNodePointer = (int **)((int)prevNodePointer + (int)*currentNodeNextPointer);\n        *prevNodeNextPointer = (int *)prevNodePointer;\n        if (currentNodePointer == (int **)((int)prevNodeNextPointer + (int)prevNodePointer)) {\n          tempPointer = *currentNodePointer;\n          currentNodePointer = (int **)currentNodePointer[1];\n          prevNodePointer = (int **)((int)prevNodePointer + (int)tempPointer);\n          *prevNodeNextPointer = (int *)prevNodePointer;\n          prevNodeNextPointer[1] = (int *)currentNodePointer;\n        }\n      }\n      else if (currentNodeNextPointer < (int **)((int)prevNodeNextPointer + (int)prevNodePointer)) {\n        *output = 0xc;\n      }\n      else {\n        prevNodePointer = (int **)((int)currentNodeNextPointer + (int)*currentNodeNextPointer);\n        if (currentNodePointer == prevNodePointer) {\n          tempPointer = *currentNodePointer;\n          currentNodePointer = (int **)currentNodePointer[1];\n          prevNodePointer = (int **)((int)tempPointer + (int)*currentNodeNextPointer);\n          *currentNodeNextPointer = (int *)prevNodePointer;\n        }\n        currentNodeNextPointer[1] = (int *)currentNodePointer;\n        prevNodeNextPointer[1] = (int *)currentNodeNextPointer;\n      }\n    }\n  }\n  FUNC_08009f4a(output,prevNodePointer,currentNodePointer,arg4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091d8": "update_data_structure_080091d8",
                "param_1": "output",
                "param_2": "numElements",
                "param_3": "arg3",
                "param_4": "arg4",
                "extraout_r1": "extraOutput",
                "ppiVar1": "prevNodePointer",
                "ppiVar2": "currentNodePointer",
                "piVar3": "tempPointer",
                "ppiVar4": "prevNodeNextPointer",
                "ppiVar5": "currentNodeNextPointer"
            },
            "calling": [
                "FUN_08009b5c",
                "FUN_08009908",
                "FUN_080091a0",
                "FUN_08009a80"
            ],
            "called": [
                "FUN_08009f4a",
                "FUN_08009f48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009270": {
            "entrypoint": "0x08009270",
            "current_name": "allocate_memory_08009270",
            "code": "\nuint allocate_memory_08009270(undefined4 *result_ptr,uint size)\n\n{\n  uint *current_block;\n  int remaining_size;\n  uint *previous_block;\n  uint size_difference;\n  uint *current_block_next;\n  uint allocated_size;\n  \n  allocated_size = (size + 3 & 0xfffffffc) + 8;\n  if (allocated_size < 0xc) {\n    allocated_size = 0xc;\n  }\n  if (((int)allocated_size < 0) || (allocated_size < size)) {\n    *result_ptr = 0xc;\n  }\n  else {\n    FUNC_08009f48();\n    current_block = DAT_2000098c;\n    current_block_next = DAT_2000098c;\n    while (previous_block = current_block, previous_block != (uint *)0x0) {\n      size_difference = *previous_block - allocated_size;\n      if (-1 < (int)size_difference) {\n        if (size_difference < 0xc) {\n          if (current_block_next == previous_block) {\n            current_block = (uint *)current_block_next[1];\n            DAT_2000098c = current_block;\n          }\n          else {\n            current_block = (uint *)previous_block[1];\n          }\n          if (current_block_next != previous_block) {\n            current_block_next[1] = (uint)current_block;\n            current_block_next = previous_block;\n          }\n        }\n        else {\n          *previous_block = size_difference;\n          *(uint *)((int)previous_block + size_difference) = allocated_size;\n          current_block_next = (uint *)((int)previous_block + size_difference);\n        }\n        goto LAB_080092d4;\n      }\n      current_block_next = previous_block;\n      current_block = (uint *)previous_block[1];\n    }\n    if (DAT_20000990 == 0) {\n      DAT_20000990 = FUN_08009918(result_ptr);\n    }\n    current_block = (uint *)FUN_08009918(result_ptr,allocated_size);\n    if ((current_block != (uint *)0xffffffff) &&\n       ((current_block_next = (uint *)((int)current_block + 3U & 0xfffffffc), current_block == current_block_next ||\n        (remaining_size = FUN_08009918(result_ptr,(int)current_block_next - (int)current_block), remaining_size != -1)))) {\n      *current_block_next = allocated_size;\nLAB_080092d4:\n      FUNC_08009f4a(result_ptr);\n      allocated_size = (int)current_block_next + 0xbU & 0xfffffff8;\n      remaining_size = allocated_size - (int)(current_block_next + 1);\n      if (remaining_size != 0) {\n        *(int *)((int)current_block_next + remaining_size) = -remaining_size;\n        return allocated_size;\n      }\n      return allocated_size;\n    }\n    *result_ptr = 0xc;\n    FUNC_08009f4a(result_ptr);\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08009270": "allocate_memory_08009270",
                "param_1": "result_ptr",
                "param_2": "size",
                "puVar1": "current_block",
                "iVar2": "remaining_size",
                "puVar3": "previous_block",
                "uVar4": "size_difference",
                "puVar5": "current_block_next",
                "uVar6": "allocated_size"
            },
            "calling": [
                "FUN_08009908",
                "FUN_08009eac",
                "FUN_08009190",
                "FUN_08009d24"
            ],
            "called": [
                "FUN_08009f4a",
                "FUN_08009f48",
                "FUN_08009918"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800932c": {
            "entrypoint": "0x0800932c",
            "current_name": "process_input_0800932c",
            "code": "\nuint process_input_0800932c(int pointer,byte byte_value,byte **ptr_array)\n\n{\n  int index;\n  byte *array_ptr;\n  byte *data_ptr;\n  uint result;\n  \n  array_ptr = ptr_array[2] + -1;\n  ptr_array[2] = array_ptr;\n  if ((-1 < (int)array_ptr) ||\n     (((int)ptr_array[6] <= (int)array_ptr && (array_ptr = (byte *)(uint)byte_value, array_ptr != (byte *)0xa))))\n  {\n    array_ptr = *ptr_array;\n    *ptr_array = array_ptr + 1;\n    *array_ptr = byte_value;\n    return (uint)byte_value;\n  }\n  if ((pointer != 0) && (*(int *)(pointer + 0x18) == 0)) {\n    FUN_08009d50();\n  }\n  if (ptr_array == (byte **)&DAT_0800aba4) {\n    ptr_array = *(byte ***)(pointer + 4);\n  }\n  else if (ptr_array == (byte **)&DAT_0800abc4) {\n    ptr_array = *(byte ***)(pointer + 8);\n  }\n  else if (ptr_array == (byte **)&DAT_0800ab84) {\n    ptr_array = *(byte ***)(pointer + 0xc);\n  }\n  ptr_array[2] = ptr_array[6];\n  data_ptr = (byte *)(uint)*(ushort *)(ptr_array + 3);\n  index = (int)data_ptr << 0x1c;\n  if (((index < 0) && (data_ptr = ptr_array[4], data_ptr != (byte *)0x0)) ||\n     (index = FUN_08009a80(pointer,ptr_array,index,data_ptr,array_ptr), index == 0)) {\n    result = (uint)byte_value;\n    index = (int)*ptr_array - (int)ptr_array[4];\n    if ((index < (int)ptr_array[5]) || (index = FUN_08009c7c(pointer,ptr_array), index == 0)) {\n      ptr_array[2] = ptr_array[2] + -1;\n      array_ptr = *ptr_array;\n      *ptr_array = array_ptr + 1;\n      *array_ptr = byte_value;\n      if ((byte *)(index + 1) != ptr_array[5]) {\n        if (-1 < (int)((uint)*(ushort *)(ptr_array + 3) << 0x1f)) {\n          return result;\n        }\n        if (result != 10) {\n          return result;\n        }\n      }\n      index = FUN_08009c7c(pointer,ptr_array);\n      if (index == 0) {\n        return result;\n      }\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800932c": "process_input_0800932c",
                "param_1": "pointer",
                "param_2": "byte_value",
                "param_3": "ptr_array",
                "iVar1": "index",
                "pbVar2": "array_ptr",
                "pbVar3": "data_ptr",
                "uVar4": "result"
            },
            "calling": [
                "FUN_08009358"
            ],
            "called": [
                "FUN_08009c7c",
                "FUN_08009a80",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009358": {
            "entrypoint": "0x08009358",
            "current_name": "process_data_08009358",
            "code": "\nint process_data_08009358(undefined4 input1,undefined4 input2,undefined *data_ptr,int size)\n\n{\n  int result;\n  undefined *end_ptr;\n  int remaining_size;\n  \n  end_ptr = data_ptr + size;\n  remaining_size = size;\n  do {\n    if (data_ptr == end_ptr) {\n      return 0;\n    }\n    result = FUN_0800932c(input1,*data_ptr,input2,size,remaining_size);\n    size = result + 1;\n    data_ptr = data_ptr + 1;\n  } while (size != 0);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009358": "process_data_08009358",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "data_ptr",
                "param_4": "size",
                "iVar1": "result",
                "puVar2": "end_ptr",
                "iVar3": "remaining_size"
            },
            "calling": [
                "FUN_0800937c"
            ],
            "called": [
                "FUN_0800932c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800937c": {
            "entrypoint": "0x0800937c",
            "current_name": "process_data_0800937c",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08009550) */\n\nint processData_0800937c(int input,undefined4 *options,byte *pattern,int *total)\n\n{\n  int result;\n  int *count;\n  bool isDigit;\n  byte *currentByte;\n  byte *nextByte;\n  int partialResult;\n  int intValue;\n  int *counts;\n  uint flags;\n  int precision;\n  undefined4 alignment;\n  int width;\n  int totalBytes;\n  byte conversionSpecifier;\n  undefined spaceFlag;\n  undefined plusFlag;\n  undefined prefix;\n  undefined4 dummy;\n  \n  counts = total;\n  if ((input != 0) && (*(int *)(input + 0x18) == 0)) {\n    FUN_08009d50();\n  }\n  if (options == &DAT_0800aba4) {\n    options = *(undefined4 **)(input + 4);\n  }\n  else if (options == (undefined4 *)&DAT_0800abc4) {\n    options = *(undefined4 **)(input + 8);\n  }\n  else if (options == (undefined4 *)&DAT_0800ab84) {\n    options = *(undefined4 **)(input + 0xc);\n  }\n  if (((-1 < (int)((uint)*(ushort *)(options + 3) << 0x1c)) || (options[4] == 0)) &&\n     (intValue = FUN_08009a80(input,options), intValue != 0)) {\n    return -1;\n  }\n  totalBytes = 0;\n  spaceFlag = 0x20;\n  plusFlag = 0x30;\n  currentByte = pattern;\nLAB_080093be:\n  nextByte = currentByte;\n  if (*nextByte != 0) goto LAB_08009474;\n  goto LAB_080093c8;\nLAB_08009474:\n  currentByte = nextByte + 1;\n  if (*nextByte != 0x25) goto LAB_080093be;\nLAB_080093c8:\n  intValue = (int)nextByte - (int)pattern;\n  if (intValue != 0) {\n    result = FUN_08009358(input,options,pattern,intValue);\n    if (result == -1) {\nLAB_08009568:\n      if ((int)((uint)*(ushort *)(options + 3) << 0x19) < 0) {\n        return -1;\n      }\n      return totalBytes;\n    }\n    totalBytes = totalBytes + intValue;\n  }\n  if (*nextByte == 0) goto LAB_08009568;\n  flags = 0;\n  width = 0;\n  precision = -1;\n  alignment = 0;\n  prefix = 0;\n  dummy = 0;\n  currentByte = nextByte + 1;\n  while( true ) {\n    intValue = FUN_08009f2c(\"#-0+ \",*currentByte);\n    pattern = currentByte + 1;\n    if (intValue == 0) break;\n    flags = 1 << (intValue + 0xf7ff54b0U & 0xff) | flags;\n    currentByte = pattern;\n  }\n  if ((int)(flags << 0x1b) < 0) {\n    prefix = 0x20;\n  }\n  if ((int)(flags << 0x1c) < 0) {\n    prefix = 0x2b;\n  }\n  if (*currentByte == 0x2a) {\n    count = counts + 1;\n    intValue = *counts;\n    counts = count;\n    if (intValue < 0) {\n      width = -intValue;\n      flags = flags | 2;\n      goto LAB_080094a6;\n    }\n  }\n  else {\n    isDigit = false;\n    intValue = width;\n    pattern = currentByte;\n    while( true ) {\n      if (9 < *pattern - 0x30) break;\n      intValue = intValue * 10 + (*pattern - 0x30);\n      isDigit = true;\n      pattern = pattern + 1;\n    }\n    if (!isDigit) goto LAB_080094a6;\n  }\n  width = intValue;\nLAB_080094a6:\n  if (*pattern == 0x2e) {\n    if (pattern[1] == 0x2a) {\n      pattern = pattern + 2;\n      count = counts + 1;\n      precision = *counts;\n      counts = count;\n      if (precision < 0) {\n        precision = -1;\n      }\n    }\n    else {\n      isDigit = false;\n      intValue = 0;\n      precision = 0;\n      while( true ) {\n        pattern = pattern + 1;\n        if (9 < *pattern - 0x30) break;\n        intValue = intValue * 10 + (*pattern - 0x30);\n        isDigit = true;\n      }\n      if (isDigit) {\n        precision = intValue;\n      }\n    }\n  }\n  intValue = FUN_08009f2c(&DAT_0800ab56,*pattern,3);\n  if (intValue != 0) {\n    pattern = pattern + 1;\n    flags = flags | 0x40 << (intValue + 0xf7ff54aaU & 0xff);\n  }\n  conversionSpecifier = *pattern;\n  pattern = pattern + 1;\n  intValue = FUN_08009f2c(\"efgEFG\",conversionSpecifier,6);\n  if (intValue == 0) {\n    partialResult = FUN_08009698(input,&flags,options,0x8009359,&counts);\n    if (partialResult == -1) goto LAB_08009568;\n  }\n  else {\n    counts = (int *)(((int)counts + 7U & 0xfffffff8) + 8);\n  }\n  totalBytes = totalBytes + partialResult;\n  currentByte = pattern;\n  goto LAB_080093be;\n}\n\n",
            "renaming": {
                "FUN_0800937c": "process_data_0800937c",
                "param_1": "input",
                "param_2": "options",
                "param_3": "pattern",
                "param_4": "total",
                "iVar1": "result",
                "piVar2": "count",
                "bVar3": "isDigit",
                "pbVar4": "currentByte",
                "pbVar5": "nextByte",
                "unaff_r9": "partialResult",
                "iVar6": "intValue",
                "local_8c": "counts",
                "local_88": "flags",
                "local_84": "precision",
                "local_80": "alignment",
                "local_7c": "width",
                "local_74": "totalBytes",
                "local_70": "conversionSpecifier",
                "local_6f": "spaceFlag",
                "local_6e": "plusFlag",
                "local_45": "prefix",
                "local_30": "dummy"
            },
            "calling": [
                "FUN_080098d8",
                "FUN_08009124"
            ],
            "called": [
                "FUN_08009f2c",
                "FUN_08009358",
                "FUN_08009698",
                "FUN_08009a80",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080095a8": {
            "entrypoint": "0x080095a8",
            "current_name": "update_param_values_080095a8",
            "code": "\nundefined4\nupdateParamValues_080095a8(undefined4 value,uint *paramArray,uint *updatedParam,undefined4 extraParam,code *callbackFunction)\n\n{\n  int index1;\n  int index2;\n  uint maxValue;\n  uint newValue;\n  bool isTrue;\n  \n  maxValue = paramArray[4];\n  if ((int)paramArray[4] < (int)paramArray[2]) {\n    maxValue = paramArray[2];\n  }\n  *updatedParam = maxValue;\n  if (*(char *)((int)paramArray + 0x43) != '\\0') {\n    *updatedParam = maxValue + 1;\n  }\n  if ((int)(*paramArray << 0x1a) < 0) {\n    *updatedParam = *updatedParam + 2;\n  }\n  if ((*paramArray & 6) == 0) {\n    for (index1 = 0; index1 < (int)(paramArray[3] - *updatedParam); index1 = index1 + 1) {\n      index2 = (*callbackFunction)(value,extraParam,(int)paramArray + 0x19,1);\n      if (index2 == -1) {\n        return 0xffffffff;\n      }\n    }\n  }\n  maxValue = (uint)*(byte *)((int)paramArray + 0x43);\n  if (maxValue != 0) {\n    maxValue = 1;\n  }\n  newValue = maxValue;\n  if ((int)(*paramArray << 0x1a) < 0) {\n    *(undefined *)((int)paramArray + maxValue + 0x43) = 0x30;\n    newValue = maxValue + 2;\n    *(undefined *)((int)paramArray + maxValue + 0x44) = *(undefined *)((int)paramArray + 0x45);\n  }\n  index1 = (*callbackFunction)(value,extraParam,(int)paramArray + 0x43,newValue);\n  if (index1 != -1) {\n    maxValue = paramArray[3];\n    isTrue = (*paramArray & 6) != 4;\n    if (isTrue) {\n      maxValue = 0;\n    }\n    newValue = 0;\n    if (!isTrue) {\n      maxValue = maxValue - *updatedParam;\n    }\n    if (!isTrue) {\n      maxValue = maxValue & ~((int)maxValue >> 0x1f);\n    }\n    if ((int)paramArray[4] < (int)paramArray[2]) {\n      maxValue = maxValue + (paramArray[2] - paramArray[4]);\n    }\n    while( true ) {\n      if (maxValue == newValue) {\n        return 0;\n      }\n      index1 = (*callbackFunction)(value,extraParam,(int)paramArray + 0x1a,1);\n      if (index1 == -1) break;\n      newValue = newValue + 1;\n    }\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_080095a8": "update_param_values_080095a8",
                "param_1": "value",
                "param_2": "paramArray",
                "param_3": "updatedParam",
                "param_4": "extraParam",
                "param_5": "callbackFunction",
                "iVar1": "index1",
                "iVar2": "index2",
                "uVar3": "maxValue",
                "uVar4": "newValue",
                "bVar5": "isTrue"
            },
            "calling": [
                "FUN_08009698"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009698": {
            "entrypoint": "0x08009698",
            "current_name": "extract_data_08009698",
            "code": "\nuint extractData_08009698(undefined4 input_value,uint *input_array,undefined4 param_value,code *function_ptr,uint **output_array)\n\n{\n  byte byte_value;\n  int integer_value;\n  uint *temp_ptr;\n  int temp_integer;\n  char *char_ptr;\n  uint temp_value;\n  uint **ppuVar7;\n  char **ppcVar8;\n  uint temp_value_1;\n  uint temp_value_2;\n  char *char_ptr_2;\n  char *char_ptr_3;\n  uint temp_array [2];\n  \n  byte_value = *(byte *)(input_array + 6);\n  char_ptr_3 = (char *)((int)input_array + 0x43);\n  if (byte_value != 0x6e) {\n    if (byte_value < 0x6f) {\n      if (byte_value != 99) {\n        if (byte_value < 100) {\n          if (byte_value == 0) goto LAB_08009852;\n          if (byte_value != 0x58) goto LAB_080096c8;\n          *(undefined *)((int)input_array + 0x45) = 0x58;\n          char_ptr = \"0123456789ABCDEF\";\nLAB_080097e2:\n          temp_value = *input_array;\n          temp_ptr = *output_array;\n          *output_array = temp_ptr + 1;\n          if (((temp_value & 0x80) == 0) && ((int)(temp_value << 0x19) < 0)) {\n            temp_value_1 = (uint)*(ushort *)temp_ptr;\n          }\n          else {\n            temp_value_1 = *temp_ptr;\n          }\n          if ((int)(temp_value << 0x1f) < 0) {\n            *input_array = temp_value | 0x20;\n          }\n          if (temp_value_1 == 0) {\n            *input_array = *input_array & 0xffffffdf;\n          }\n          temp_value = 0x10;\nLAB_08009778:\n          *(undefined *)((int)input_array + 0x43) = 0;\n        }\n        else {\n          if ((byte_value != 100) && (byte_value != 0x69)) goto LAB_080096c8;\n          temp_value_1 = *input_array;\n          temp_ptr = *output_array;\n          if ((temp_value_1 & 0x80) == 0) {\n            *output_array = temp_ptr + 1;\n            if ((temp_value_1 & 0x40) == 0) goto LAB_080096e8;\n            temp_value_1 = (uint)(short)*(ushort *)temp_ptr;\n          }\n          else {\n            *output_array = temp_ptr + 1;\nLAB_080096e8:\n            temp_value_1 = *temp_ptr;\n          }\n          if ((int)temp_value_1 < 0) {\n            temp_value_1 = -temp_value_1;\n            *(undefined *)((int)input_array + 0x43) = 0x2d;\n          }\n          char_ptr = \"0123456789ABCDEF\";\n          temp_value = 10;\n        }\n        temp_value_2 = input_array[1];\n        input_array[2] = temp_value_2;\n        char_ptr_2 = char_ptr_3;\n        if ((int)temp_value_2 < 0) {\n          if (temp_value_1 != 0) goto LAB_08009816;\nLAB_080098c4:\n          *(char *)((int)input_array + 0x42) = *char_ptr;\n          char_ptr_2 = (char *)((int)input_array + 0x42);\n        }\n        else {\n          *input_array = *input_array & 0xfffffffb;\n          if (temp_value_1 == 0) {\n            if (temp_value_2 != 0) goto LAB_080098c4;\n          }\n          else {\nLAB_08009816:\n            do {\n              temp_value_2 = temp_value_1 / temp_value;\n              char_ptr_2 = char_ptr_2 + -1;\n              *char_ptr_2 = char_ptr[temp_value_1 - temp_value * temp_value_2];\n              temp_value_1 = temp_value_2;\n            } while (temp_value_2 != 0);\n          }\n        }\n        if (((temp_value == 8) && ((int)(*input_array << 0x1f) < 0)) && ((int)input_array[1] <= (int)input_array[4]))\n        {\n          char_ptr_2[-1] = '0';\n          char_ptr_2 = char_ptr_2 + -1;\n        }\n        input_array[4] = (int)char_ptr_3 - (int)char_ptr_2;\n        char_ptr_3 = char_ptr_2;\n        goto LAB_080097be;\n      }\n      temp_ptr = *output_array;\n      *output_array = temp_ptr + 1;\n      *(char *)((int)input_array + 0x42) = (char)*temp_ptr;\nLAB_08009728:\n      char_ptr_3 = (char *)((int)input_array + 0x42);\n      temp_value_1 = 1;\n    }\n    else {\n      if (byte_value != 0x73) {\n        if (byte_value < 0x74) {\n          if (byte_value == 0x6f) {\nLAB_0800974e:\n            temp_value_1 = *input_array;\n            temp_ptr = *output_array;\n            if ((temp_value_1 & 0x80) == 0) {\n              *output_array = temp_ptr + 1;\n              if ((temp_value_1 & 0x40) == 0) goto LAB_0800975c;\n              temp_value_1 = (uint)*(ushort *)temp_ptr;\n            }\n            else {\n              *output_array = temp_ptr + 1;\nLAB_0800975c:\n              temp_value_1 = *temp_ptr;\n            }\n            if (byte_value == 0x6f) {\n              temp_value = 8;\n            }\n            else {\n              temp_value = 10;\n            }\n            char_ptr = \"0123456789ABCDEF\";\n            goto LAB_08009778;\n          }\n          if (byte_value == 0x70) {\n            *input_array = *input_array | 0x20;\nLAB_0800970e:\n            char_ptr = \"0123456789abcdef\";\n            *(undefined *)((int)input_array + 0x45) = 0x78;\n            goto LAB_080097e2;\n          }\n        }\n        else {\n          if (byte_value == 0x75) goto LAB_0800974e;\n          if (byte_value == 0x78) goto LAB_0800970e;\n        }\nLAB_080096c8:\n        *(byte *)((int)input_array + 0x42) = byte_value;\n        goto LAB_08009728;\n      }\n      ppcVar8 = (char **)*output_array;\n      *output_array = (uint *)(ppcVar8 + 1);\n      char_ptr_3 = *ppcVar8;\n      integer_value = FUN_08009f2c(char_ptr_3,0,input_array[1]);\n      if (integer_value != 0) {\n        input_array[1] = integer_value - (int)char_ptr_3;\n      }\n      temp_value_1 = input_array[1];\n    }\n    input_array[4] = temp_value_1;\n    *(undefined *)((int)input_array + 0x43) = 0;\n    goto LAB_080097be;\n  }\n  temp_value_1 = *input_array;\n  ppuVar7 = (uint **)*output_array;\n  temp_value = input_array[5];\n  if ((temp_value_1 & 0x80) == 0) {\n    *output_array = (uint *)(ppuVar7 + 1);\n    temp_ptr = *ppuVar7;\n    if ((temp_value_1 & 0x40) == 0) goto LAB_0800983e;\n    *(short *)temp_ptr = (short)temp_value;\n  }\n  else {\n    *output_array = (uint *)(ppuVar7 + 1);\n    temp_ptr = *ppuVar7;\nLAB_0800983e:\n    *temp_ptr = temp_value;\n  }\nLAB_08009852:\n  input_array[4] = 0;\nLAB_080097be:\n  integer_value = FUN_080095a8(input_value,input_array,temp_array,param_value,function_ptr);\n  if ((integer_value == -1) || (integer_value = (*function_ptr)(input_value,param_value,char_ptr_3,input_array[4]), integer_value == -1)) {\nLAB_080097d2:\n    temp_value_1 = 0xffffffff;\n  }\n  else {\n    if ((int)(*input_array << 0x1e) < 0) {\n      for (integer_value = 0; integer_value < (int)(input_array[3] - temp_array[0]); integer_value = integer_value + 1) {\n        temp_integer = (*function_ptr)(input_value,param_value,(int)input_array + 0x19,1);\n        if (temp_integer == -1) goto LAB_080097d2;\n      }\n    }\n    temp_value_1 = input_array[3];\n    if ((int)input_array[3] < (int)temp_array[0]) {\n      temp_value_1 = temp_array[0];\n    }\n  }\n  return temp_value_1;\n}\n\n",
            "renaming": {
                "FUN_08009698": "extract_data_08009698",
                "param_1": "input_value",
                "param_2": "input_array",
                "param_3": "param_value",
                "param_4": "function_ptr",
                "param_5": "output_array",
                "bVar1": "byte_value",
                "iVar2": "integer_value",
                "puVar3": "temp_ptr",
                "iVar4": "temp_integer",
                "pcVar5": "char_ptr",
                "uVar6": "temp_value",
                "uVar9": "temp_value_1",
                "uVar10": "temp_value_2",
                "pcVar11": "char_ptr_2",
                "pcVar12": "char_ptr_3",
                "local_24": "temp_array"
            },
            "calling": [
                "FUN_0800937c"
            ],
            "called": [
                "FUN_08009f2c",
                "FUN_080095a8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080098d8": {
            "entrypoint": "0x080098d8",
            "current_name": "initialize_data_080098d8",
            "code": "\nvoid initializeData_080098d8(undefined4 data1,undefined4 data2,undefined4 data3,undefined4 data4)\n\n{\n  int dataPointer;\n  undefined4 inputData;\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  \n  dataPointer = DAT_20000090;\n  inputData = data1;\n  temp1 = data2;\n  temp2 = data3;\n  temp3 = data4;\n  if ((DAT_20000090 != 0) && (*(int *)(DAT_20000090 + 0x18) == 0)) {\n    FUN_08009d50(DAT_20000090);\n  }\n  FUN_0800937c(dataPointer,*(undefined4 *)(dataPointer + 8),data1,&temp1,inputData,&temp1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080098d8": "initialize_data_080098d8",
                "param_1": "data1",
                "param_2": "data2",
                "param_3": "data3",
                "param_4": "data4",
                "iVar1": "dataPointer",
                "uVar2": "inputData",
                "uStack_c": "temp1",
                "uStack_8": "temp2",
                "uStack_4": "temp3"
            },
            "calling": [
                "FUN_08008078",
                "FUN_080077b0",
                "FUN_08007544",
                "FUN_08007594",
                "FUN_080075dc"
            ],
            "called": [
                "FUN_0800937c",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009908": {
            "entrypoint": "0x08009908",
            "current_name": "validate_data_08009908",
            "code": "\nint validate_data_08009908(int input_value,uint max_value)\n\n{\n  undefined4 magic_number;\n  int result;\n  uint calculated_value;\n  \n  magic_number = DAT_20000090;\n  if (input_value != 0) {\n    if (max_value == 0) {\n      FUN_080091d8();\n      result = 0;\n    }\n    else {\n      calculated_value = FUN_0800a154();\n      result = input_value;\n      if ((calculated_value < max_value) && (result = FUN_08009270(magic_number,max_value), result != 0)) {\n        FUN_080091b0(result,input_value,max_value);\n        FUN_080091d8(magic_number,input_value);\n      }\n    }\n    return result;\n  }\n  result = FUN_08009270(DAT_20000090,max_value,max_value,&DAT_20000090);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009908": "validate_data_08009908",
                "param_1": "input_value",
                "param_2": "max_value",
                "uVar1": "magic_number",
                "iVar2": "result",
                "uVar3": "calculated_value"
            },
            "calling": [
                "FUN_080027f0",
                "FUN_08002acc",
                "FUN_0800288c"
            ],
            "called": [
                "FUN_080091d8",
                "FUN_0800a154",
                "FUN_080091b0",
                "FUN_08009270"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009918": {
            "entrypoint": "0x08009918",
            "current_name": "check_and_assign_value_08009918",
            "code": "\nvoid checkAndAssignValue_08009918(int *outputValue,undefined4 inputValue)\n\n{\n  int result;\n  \n  DAT_20000a38 = 0;\n  result = FUN_08008804(inputValue);\n  if ((result == -1) && (DAT_20000a38 != 0)) {\n    *outputValue = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009918": "check_and_assign_value_08009918",
                "param_1": "outputValue",
                "param_2": "inputValue",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08009270"
            ],
            "called": [
                "FUN_08008804"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009938": {
            "entrypoint": "0x08009938",
            "current_name": "find_character_08009938",
            "code": "\nchar * find_character_08009938(char *string,char character)\n\n{\n  char *current_char;\n  \n  do {\n    current_char = string;\n    if (*current_char == '\\0') {\n      if (character != '\\0') {\n        current_char = (char *)0x0;\n      }\n      return current_char;\n    }\n    string = current_char + 1;\n  } while (character != *current_char);\n  return current_char;\n}\n\n",
            "renaming": {
                "FUN_08009938": "find_character_08009938",
                "param_1": "string",
                "param_2": "character",
                "pcVar1": "current_char"
            },
            "calling": [
                "FUN_0800997e"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009954": {
            "entrypoint": "0x08009954",
            "current_name": "copy_string_08009954",
            "code": "\nvoid copyString_08009954(char *destination,char *source,int length)\n\n{\n  char currentChar;\n  int remainingLength;\n  char *currentDest;\n  \n  do {\n    currentDest = destination;\n    remainingLength = length;\n    if (remainingLength == 0) {\n      return;\n    }\n    currentChar = *source;\n    destination = currentDest + 1;\n    *currentDest = currentChar;\n    source = source + 1;\n    length = remainingLength + -1;\n  } while (currentChar != '\\0');\n  for (; destination != currentDest + remainingLength; destination = destination + 1) {\n    *destination = '\\0';\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009954": "copy_string_08009954",
                "param_1": "destination",
                "param_2": "source",
                "param_3": "length",
                "cVar1": "currentChar",
                "iVar2": "remainingLength",
                "pcVar3": "currentDest"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800997e": {
            "entrypoint": "0x0800997e",
            "current_name": "find_last_occurrence_0800997e",
            "code": "\nint findLastOccurrence_0800997e(int inputArray,int arrayLength,undefined4 param3,undefined4 param4)\n\n{\n  int currentOccurrence;\n  int lastOccurrence;\n  \n  if (arrayLength != 0) {\n    lastOccurrence = 0;\n    while (currentOccurrence = FUN_08009938(inputArray,arrayLength,param3,inputArray,param4), currentOccurrence != 0) {\n      inputArray = currentOccurrence + 1;\n      lastOccurrence = currentOccurrence;\n    }\n    return lastOccurrence;\n  }\n  lastOccurrence = FUN_08009938();\n  return lastOccurrence;\n}\n\n",
            "renaming": {
                "FUN_0800997e": "find_last_occurrence_0800997e",
                "param_1": "inputArray",
                "param_2": "arrayLength",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "currentOccurrence",
                "iVar2": "lastOccurrence"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [
                "FUN_08009938"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080099a4": {
            "entrypoint": "0x080099a4",
            "current_name": "find_substring_080099a4",
            "code": "\nchar * find_substring_080099a4(char *source_str,char *target_str)\n\n{\n  char *source_ptr;\n  char *target_ptr;\n  char *target_end_ptr;\n  \n  if (*source_str == '\\0') {\n    if (*target_str != '\\0') {\n      source_str = (char *)0x0;\n    }\n    return source_str;\n  }\n  do {\n    source_ptr = source_str;\n    if (*source_ptr == '\\0') {\n      return (char *)0x0;\n    }\n    target_end_ptr = target_str + -1;\n    target_ptr = source_ptr + -1;\n    do {\n      target_end_ptr = target_end_ptr + 1;\n      if (*target_end_ptr == '\\0') {\n        return source_ptr;\n      }\n      target_ptr = target_ptr + 1;\n      source_str = source_ptr + 1;\n    } while (*target_ptr == *target_end_ptr);\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_080099a4": "find_substring_080099a4",
                "param_1": "source_str",
                "param_2": "target_str",
                "pcVar1": "source_ptr",
                "pcVar2": "target_ptr",
                "pcVar3": "target_end_ptr"
            },
            "calling": [
                "FUN_08002e44"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009a80": {
            "entrypoint": "0x08009a80",
            "current_name": "process_data_08009a80",
            "code": "\nuint processData_08009a80(undefined4 *outputParam,undefined4 *inputParam)\n\n{\n  int dataPointer;\n  uint result;\n  ushort flags;\n  \n  dataPointer = DAT_20000090;\n  if ((DAT_20000090 != 0) && (*(int *)(DAT_20000090 + 0x18) == 0)) {\n    FUN_08009d50(DAT_20000090);\n  }\n  if (inputParam == &DAT_0800aba4) {\n    inputParam = *(undefined4 **)(dataPointer + 4);\n  }\n  else if (inputParam == (undefined4 *)&DAT_0800abc4) {\n    inputParam = *(undefined4 **)(dataPointer + 8);\n  }\n  else if (inputParam == (undefined4 *)&DAT_0800ab84) {\n    inputParam = *(undefined4 **)(dataPointer + 0xc);\n  }\n  flags = *(ushort *)(inputParam + 3);\n  result = (uint)flags;\n  if (-1 < (int)(result << 0x1c)) {\n    if (-1 < (int)(result << 0x1b)) {\n      *outputParam = 9;\n      goto LAB_08009ab0;\n    }\n    if ((int)(result << 0x1d) < 0) {\n      if ((undefined4 *)inputParam[0xd] != (undefined4 *)0x0) {\n        if ((undefined4 *)inputParam[0xd] != inputParam + 0x11) {\n          FUN_080091d8(outputParam);\n        }\n        inputParam[0xd] = 0;\n      }\n      *(ushort *)(inputParam + 3) = *(ushort *)(inputParam + 3) & 0xffdb;\n      inputParam[1] = 0;\n      *inputParam = inputParam[4];\n    }\n    *(ushort *)(inputParam + 3) = *(ushort *)(inputParam + 3) | 8;\n  }\n  if ((inputParam[4] == 0) && ((*(ushort *)(inputParam + 3) & 0x280) != 0x200)) {\n    FUN_08009eac(outputParam,inputParam);\n  }\n  flags = *(ushort *)(inputParam + 3);\n  result = flags & 1;\n  if ((flags & 1) == 0) {\n    if (-1 < (int)((uint)flags << 0x1e)) {\n      result = inputParam[5];\n    }\n    inputParam[2] = result;\n  }\n  else {\n    inputParam[2] = 0;\n    inputParam[6] = -inputParam[5];\n  }\n  if (inputParam[4] == 0) {\n    flags = *(ushort *)(inputParam + 3);\n    result = (int)(short)flags & 0x80;\n    if (result != 0) {\nLAB_08009ab0:\n      *(ushort *)(inputParam + 3) = flags | 0x40;\n      return 0xffffffff;\n    }\n  }\n  else {\n    result = 0;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009a80": "process_data_08009a80",
                "param_1": "outputParam",
                "param_2": "inputParam",
                "iVar1": "dataPointer",
                "uVar2": "result",
                "uVar3": "flags"
            },
            "calling": [
                "FUN_0800937c",
                "FUN_0800932c"
            ],
            "called": [
                "FUN_080091d8",
                "FUN_08009eac",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009b5c": {
            "entrypoint": "0x08009b5c",
            "current_name": "process_binary_function_08009b5c",
            "code": "\nvoid processBinaryFunction_08009b5c(void)\n\n{\n  uint *ptrValue;\n  int intValue;\n  int *ptrArray1;\n  int *ptrArray2;\n  uint ushortValue;\n  ushort ushortFlag;\n  int loopIncrement;\n  code *functionPointer;\n  int loopCounter;\n  uint tempValue;\n  code *jumpTable1;\n  bool boolValue;\n  undefined8 returnValue;\n  \n  FUN_08009fe8(6);\n  jumpTable1 = (code *)0x8009b6b;\n  returnValue = FUN_08008868(1);\n  ptrArray1 = (int *)((ulonglong)returnValue >> 0x20);\n  ptrValue = (uint *)returnValue;\n  ushortFlag = *(ushort *)(ptrArray1 + 3);\n  ushortValue = (uint)ushortFlag;\n  if ((int)(ushortValue << 0x1c) < 0) {\n    intValue = ptrArray1[4];\n    if (intValue != 0) {\n      loopIncrement = ushortValue << 0x1e;\n      boolValue = loopIncrement != 0;\n      if (boolValue) {\n        loopIncrement = 0;\n      }\n      loopCounter = *ptrArray1;\n      if (!boolValue) {\n        loopIncrement = ptrArray1[5];\n      }\n      *ptrArray1 = intValue;\n      ptrArray1[2] = loopIncrement;\n      for (loopCounter = loopCounter - intValue; 0 < loopCounter; loopCounter = loopCounter - loopIncrement) {\n        loopIncrement = (*(code *)ptrArray1[10])(ptrValue,ptrArray1[8],intValue,loopCounter);\n        if (loopIncrement < 1) {\n          ushortFlag = *(ushort *)(ptrArray1 + 3);\n          goto LAB_08009c62;\n        }\n        intValue = intValue + loopIncrement;\n      }\n    }\n  }\n  else if (((0 < ptrArray1[1]) || (0 < ptrArray1[0x10])) &&\n          (functionPointer = (code *)ptrArray1[0xb], functionPointer != (code *)0x0)) {\n    tempValue = *ptrValue;\n    *ptrValue = 0;\n    if ((ushortFlag & 0x1000) == 0) {\n      intValue = (*functionPointer)(ptrValue,ptrArray1[8],ushortValue & 0x1000,1);\n      if ((intValue == -1) && (ushortValue = *ptrValue, ushortValue != 0)) {\n        if ((ushortValue != 0x1d) && (ushortValue != 0x16)) {\n          *(ushort *)(ptrArray1 + 3) = *(ushort *)(ptrArray1 + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c2c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          (*jumpTable1)();\n          return;\n        }\n        *ptrValue = tempValue;\n        goto LAB_08009b86;\n      }\n    }\n    else {\n      intValue = ptrArray1[0x15];\n    }\n    if (((int)((uint)*(ushort *)(ptrArray1 + 3) << 0x1d) < 0) &&\n       (intValue = intValue - ptrArray1[1], ptrArray1[0xd] != 0)) {\n      intValue = intValue - ptrArray1[0x10];\n    }\n    intValue = (*(code *)ptrArray1[0xb])(ptrValue,ptrArray1[8],intValue,0);\n    ushortFlag = *(ushort *)(ptrArray1 + 3);\n    if ((intValue == -1) &&\n       ((0x1d < *ptrValue || (-1 < (int)((0x20400001U >> (*ptrValue & 0xff)) << 0x1f))))) {\nLAB_08009c62:\n      *(ushort *)(ptrArray1 + 3) = ushortFlag | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c6c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jumpTable1)(0xffffffff);\n      return;\n    }\n    ptrArray1[1] = 0;\n    *ptrArray1 = ptrArray1[4];\n    if (((int)((uint)ushortFlag << 0x13) < 0) && ((intValue != -1 || (*ptrValue == 0)))) {\n      ptrArray1[0x15] = intValue;\n    }\n    ptrArray2 = (int *)ptrArray1[0xd];\n    *ptrValue = tempValue;\n    if (ptrArray2 != (int *)0x0) {\n      if (ptrArray2 != ptrArray1 + 0x11) {\n        FUN_080091d8(ptrValue);\n      }\n      ptrArray1[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08009c02. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      (*jumpTable1)();\n      return;\n    }\n  }\nLAB_08009b86:\n                    /* WARNING: Could not recover jumptable at 0x08009b88. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable1)(0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009b5c": "process_binary_function_08009b5c",
                "puVar1": "ptrValue",
                "iVar2": "intValue",
                "piVar3": "ptrArray1",
                "piVar4": "ptrArray2",
                "uVar5": "ushortValue",
                "uVar6": "ushortFlag",
                "iVar7": "loopIncrement",
                "pcVar8": "functionPointer",
                "iVar9": "loopCounter",
                "uVar10": "tempValue",
                "UNRECOVERED_JUMPTABLE_00": "jumpTable1",
                "bVar11": "boolValue",
                "uVar12": "returnValue"
            },
            "calling": [
                "FUN_080090cc",
                "FUN_0800a18c"
            ],
            "called": [
                "FUN_080091d8",
                "FUN_08008868",
                "FUN_08009fe8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009c7c": {
            "entrypoint": "0x08009c7c",
            "current_name": "decode_and_process_data_08009c7c",
            "code": "\nundefined4 decode_and_process_data_08009c7c(uint *data_ptr,int *info_ptr)\n\n{\n  undefined4 result;\n  int value;\n  int *temp_ptr;\n  uint temp_value;\n  ushort temp_ushort;\n  int temp_int;\n  undefined4 unaff_val4;\n  undefined4 unaff_val5;\n  code *code_ptr;\n  int temp_var;\n  uint temp_uint;\n  code *unrecovered_jump_00;\n  bool bVar10;\n  \n  if (info_ptr[4] != 0) {\n    if ((data_ptr != (uint *)0x0) && (data_ptr[6] == 0)) {\n      FUN_08009d50();\n    }\n    if (info_ptr == &DAT_0800aba4) {\n      info_ptr = (int *)data_ptr[1];\n    }\n    else if (info_ptr == (int *)&DAT_0800abc4) {\n      info_ptr = (int *)data_ptr[2];\n    }\n    else if (info_ptr == (int *)&DAT_0800ab84) {\n      info_ptr = (int *)data_ptr[3];\n    }\n    if (*(short *)(info_ptr + 3) != 0) {\n      temp_ushort = *(ushort *)(info_ptr + 3);\n      temp_value = (uint)temp_ushort;\n      if ((int)(temp_value << 0x1c) < 0) {\n        value = info_ptr[4];\n        if (value != 0) {\n          temp_int = temp_value << 0x1e;\n          bVar10 = temp_int != 0;\n          if (bVar10) {\n            temp_int = 0;\n          }\n          temp_var = *info_ptr;\n          if (!bVar10) {\n            temp_int = info_ptr[5];\n          }\n          *info_ptr = value;\n          info_ptr[2] = temp_int;\n          for (temp_var = temp_var - value; 0 < temp_var; temp_var = temp_var - temp_int) {\n            temp_int = (*(code *)info_ptr[10])(data_ptr,info_ptr[8],value,temp_var,unaff_val4,unaff_val5);\n            if (temp_int < 1) {\n              temp_ushort = *(ushort *)(info_ptr + 3);\n              goto LAB_08009c62;\n            }\n            value = value + temp_int;\n          }\n        }\n      }\n      else if (((0 < info_ptr[1]) || (0 < info_ptr[0x10])) &&\n              (code_ptr = (code *)info_ptr[0xb], code_ptr != (code *)0x0)) {\n        temp_uint = *data_ptr;\n        *data_ptr = 0;\n        if ((temp_ushort & 0x1000) == 0) {\n          value = (*code_ptr)(data_ptr,info_ptr[8],temp_value & 0x1000,1);\n          if ((value == -1) && (temp_value = *data_ptr, temp_value != 0)) {\n            if ((temp_value != 0x1d) && (temp_value != 0x16)) {\n              *(ushort *)(info_ptr + 3) = *(ushort *)(info_ptr + 3) | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c2c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n              result = (*unrecovered_jump_00)();\n              return result;\n            }\n            *data_ptr = temp_uint;\n            goto LAB_08009b86;\n          }\n        }\n        else {\n          value = info_ptr[0x15];\n        }\n        if (((int)((uint)*(ushort *)(info_ptr + 3) << 0x1d) < 0) &&\n           (value = value - info_ptr[1], info_ptr[0xd] != 0)) {\n          value = value - info_ptr[0x10];\n        }\n        value = (*(code *)info_ptr[0xb])(data_ptr,info_ptr[8],value,0);\n        temp_ushort = *(ushort *)(info_ptr + 3);\n        if ((value == -1) &&\n           ((0x1d < *data_ptr || (-1 < (int)((0x20400001U >> (*data_ptr & 0xff)) << 0x1f))))) {\nLAB_08009c62:\n          *(ushort *)(info_ptr + 3) = temp_ushort | 0x40;\n                    /* WARNING: Could not recover jumptable at 0x08009c6c. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          result = (*unrecovered_jump_00)(0xffffffff);\n          return result;\n        }\n        info_ptr[1] = 0;\n        *info_ptr = info_ptr[4];\n        if (((int)((uint)temp_ushort << 0x13) < 0) && ((value != -1 || (*data_ptr == 0)))) {\n          info_ptr[0x15] = value;\n        }\n        temp_ptr = (int *)info_ptr[0xd];\n        *data_ptr = temp_uint;\n        if (temp_ptr != (int *)0x0) {\n          if (temp_ptr != info_ptr + 0x11) {\n            FUN_080091d8(data_ptr);\n          }\n          info_ptr[0xd] = 0;\n                    /* WARNING: Could not recover jumptable at 0x08009c02. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n          result = (*unrecovered_jump_00)();\n          return result;\n        }\n      }\nLAB_08009b86:\n                    /* WARNING: Could not recover jumptable at 0x08009b88. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n      result = (*unrecovered_jump_00)(0);\n      return result;\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08009c7c": "decode_and_process_data_08009c7c",
                "param_1": "data_ptr",
                "param_2": "info_ptr",
                "uVar1": "result",
                "iVar2": "value",
                "piVar3": "temp_ptr",
                "uVar4": "temp_value",
                "uVar5": "temp_ushort",
                "iVar6": "temp_int",
                "unaff_r4": "unaff_val4",
                "unaff_r5": "unaff_val5",
                "pcVar7": "code_ptr",
                "iVar8": "temp_var",
                "uVar9": "temp_uint",
                "UNRECOVERED_JUMPTABLE_00": "unrecovered_jump_00"
            },
            "calling": [
                "FUN_0800932c"
            ],
            "called": [
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009cdc": {
            "entrypoint": "0x08009cdc",
            "current_name": "initialize_param_struct_08009cdc",
            "code": "\nvoid initializeParamStruct_08009cdc(undefined4 *paramStruct,undefined2 value1,undefined2 value2)\n\n{\n  *paramStruct = 0;\n  paramStruct[1] = 0;\n  paramStruct[2] = 0;\n  *(undefined2 *)(paramStruct + 3) = value1;\n  paramStruct[0x19] = 0;\n  *(undefined2 *)((int)paramStruct + 0xe) = value2;\n  paramStruct[4] = 0;\n  paramStruct[5] = 0;\n  paramStruct[6] = 0;\n  FUN_080091c6(paramStruct + 0x17,0,8);\n  paramStruct[8] = paramStruct;\n  paramStruct[9] = 0x800a021;\n  paramStruct[10] = 0x800a043;\n  paramStruct[0xb] = 0x800a07b;\n  paramStruct[0xc] = &LAB_0800a09e_1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009cdc": "initialize_param_struct_08009cdc",
                "param_1": "paramStruct",
                "param_2": "value1",
                "param_3": "value2"
            },
            "calling": [
                "FUN_08009d50"
            ],
            "called": [
                "FUN_080091c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009d24": {
            "entrypoint": "0x08009d24",
            "current_name": "initialize_data_08009d24",
            "code": "\nundefined4 * initializeData_08009d24(undefined4 data,int size)\n\n{\n  undefined4 *newArray;\n  int offset;\n  \n  offset = (size + -1) * 0x68;\n  newArray = (undefined4 *)FUN_08009270(data,offset + 0x74);\n  if (newArray != (undefined4 *)0x0) {\n    *newArray = 0;\n    newArray[1] = size;\n    newArray[2] = newArray + 3;\n    FUN_080091c6(newArray + 3,0,offset + 0x68);\n  }\n  return newArray;\n}\n\n",
            "renaming": {
                "FUN_08009d24": "initialize_data_08009d24",
                "param_1": "data",
                "param_2": "size",
                "puVar1": "newArray",
                "iVar2": "offset"
            },
            "calling": [
                "FUN_08009db0"
            ],
            "called": [
                "FUN_080091c6",
                "FUN_08009270"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009d50": {
            "entrypoint": "0x08009d50",
            "current_name": "initialize_data_08009d50",
            "code": "\nvoid initializeData_08009d50(undefined4 *data)\n\n{\n  undefined4 tempVar1;\n  undefined4 *tempVar2;\n  \n  if (data[6] == 0) {\n    data[0x12] = 0;\n    data[0x13] = 0;\n    data[0x14] = 0;\n    tempVar2 = &DAT_20000094;\n    data[10] = &LAB_08009cd0_1;\n    if (data == &DAT_20000094) {\n      tempVar2 = (undefined4 *)0x1;\n    }\n    if (data == &DAT_20000094) {\n      data[6] = tempVar2;\n    }\n    tempVar1 = FUN_08009db0();\n    data[1] = tempVar1;\n    tempVar1 = FUN_08009db0(data);\n    data[2] = tempVar1;\n    tempVar1 = FUN_08009db0(data);\n    data[3] = tempVar1;\n    FUN_08009cdc(data[1],4,0);\n    FUN_08009cdc(data[2],9,1);\n    FUN_08009cdc(data[3],0x12,2);\n    data[6] = 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009d50": "initialize_data_08009d50",
                "param_1": "data",
                "uVar1": "tempVar1",
                "puVar2": "tempVar2"
            },
            "calling": [
                "FUN_08009c7c",
                "FUN_080098d8",
                "FUN_0800937c",
                "FUN_0800932c",
                "FUN_08009db0",
                "FUN_08009a80"
            ],
            "called": [
                "FUN_08009cdc",
                "FUN_08009db0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009db0": {
            "entrypoint": "0x08009db0",
            "current_name": "initialize_data_08009db0",
            "code": "\nint * initializeData_08009db0(undefined4 *statusCode,undefined4 param2,undefined4 param3,undefined4 param4)\n\n{\n  int *currentElement;\n  int *currentSubElement;\n  int **dataList;\n  \n  if (DAT_200000ac == 0) {\n    FUN_08009d50(&DAT_20000094);\n  }\n  dataList = (int **)&DAT_200000dc;\n  do {\n    currentSubElement = dataList[2];\n    currentElement = dataList[1];\n    while (currentElement = (int *)((int)currentElement + -1), -1 < (int)currentElement) {\n      if (*(short *)(currentSubElement + 3) == 0) {\n        *(undefined2 *)((int)currentSubElement + 0xe) = 0xffff;\n        currentSubElement[0x19] = 0;\n        *(undefined2 *)(currentSubElement + 3) = 1;\n        *currentSubElement = 0;\n        currentSubElement[2] = 0;\n        currentSubElement[1] = 0;\n        currentSubElement[4] = 0;\n        currentSubElement[5] = 0;\n        currentSubElement[6] = 0;\n        FUN_080091c6(currentSubElement + 0x17,0,8,1,param4);\n        currentSubElement[0xd] = 0;\n        currentSubElement[0xe] = 0;\n        currentSubElement[0x12] = 0;\n        currentSubElement[0x13] = 0;\n        return currentSubElement;\n      }\n      currentSubElement = currentSubElement + 0x1a;\n    }\n    if (*dataList == (int *)0x0) {\n      currentElement = (int *)FUN_08009d24(statusCode,4);\n      *dataList = currentElement;\n      if (currentElement == (int *)0x0) {\n        *statusCode = 0xc;\n        return (int *)0x0;\n      }\n    }\n    dataList = (int **)*dataList;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08009db0": "initialize_data_08009db0",
                "param_1": "statusCode",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "piVar1": "currentElement",
                "piVar2": "currentSubElement",
                "ppiVar3": "dataList"
            },
            "calling": [
                "FUN_08009d50"
            ],
            "called": [
                "FUN_080091c6",
                "FUN_08009d24",
                "FUN_08009d50"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009e64": {
            "entrypoint": "0x08009e64",
            "current_name": "check_permissions_08009e64",
            "code": "\nundefined4 checkPermissions_08009e64(undefined4 input,int data,undefined4 *output,uint *result)\n\n{\n  int status;\n  undefined4 permission;\n  undefined stack [4];\n  uint flag;\n  \n  if ((*(short *)(data + 0xe) < 0) ||\n     (status = FUN_0800a0ec(input,(int)*(short *)(data + 0xe),stack), status < 0)) {\n    *result = 0;\n    if ((int)((uint)*(ushort *)(data + 0xc) << 0x18) < 0) {\n      permission = 0x40;\n      goto LAB_08009ea4;\n    }\n  }\n  else {\n    *result = (uint)((flag & 0xf000) == 0x2000);\n  }\n  permission = 0x400;\nLAB_08009ea4:\n  *output = permission;\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08009e64": "check_permissions_08009e64",
                "param_1": "input",
                "param_2": "data",
                "param_3": "output",
                "param_4": "result",
                "iVar1": "status",
                "uVar2": "permission",
                "auStack_4c": "stack",
                "local_48": "flag"
            },
            "calling": [
                "FUN_08009eac"
            ],
            "called": [
                "FUN_0800a0ec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009eac": {
            "entrypoint": "0x08009eac",
            "current_name": "process_data_08009eac",
            "code": "\nvoid processData_08009eac(int dataPtr,int *paramPtr)\n\n{\n  ushort resultFlag;\n  int returnValue;\n  int localData;\n  int *localPtr;\n  \n  if (-1 < (int)((uint)*(ushort *)(paramPtr + 3) << 0x1e)) {\n    localData = dataPtr;\n    localPtr = paramPtr;\n    resultFlag = FUN_08009e64(dataPtr,paramPtr,&localData,&localPtr);\n    returnValue = FUN_08009270(dataPtr,localData);\n    if (returnValue != 0) {\n      *(undefined **)(dataPtr + 0x28) = &LAB_08009cd0_1;\n      *paramPtr = returnValue;\n      *(ushort *)(paramPtr + 3) = *(ushort *)(paramPtr + 3) | 0x80;\n      paramPtr[4] = returnValue;\n      paramPtr[5] = localData;\n      if ((localPtr != (int *)0x0) &&\n         (returnValue = FUN_0800a110(dataPtr,(int)*(short *)((int)paramPtr + 0xe)), returnValue != 0)) {\n        *(ushort *)(paramPtr + 3) = *(ushort *)(paramPtr + 3) & 0xfffc | 1;\n      }\n      *(ushort *)(paramPtr + 3) = resultFlag | *(ushort *)(paramPtr + 3);\n      return;\n    }\n    if ((int)(short)*(ushort *)(paramPtr + 3) << 0x16 < 0) {\n      return;\n    }\n    *(ushort *)(paramPtr + 3) = *(ushort *)(paramPtr + 3) & 0xfffc | 2;\n  }\n  *paramPtr = (int)paramPtr + 0x47;\n  paramPtr[4] = (int)paramPtr + 0x47;\n  paramPtr[5] = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009eac": "process_data_08009eac",
                "param_1": "dataPtr",
                "param_2": "paramPtr",
                "uVar1": "resultFlag",
                "iVar2": "returnValue",
                "local_18": "localData",
                "local_14": "localPtr"
            },
            "calling": [
                "FUN_08009a80"
            ],
            "called": [
                "FUN_08009270",
                "FUN_0800a110",
                "FUN_08009e64"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009f2c": {
            "entrypoint": "0x08009f2c",
            "current_name": "find_character_in_string_08009f2c",
            "code": "\nchar * find_character_in_string_08009f2c(char *string,char character,int length)\n\n{\n  char *current_position;\n  char *next_position;\n  \n  current_position = string;\n  do {\n    next_position = current_position;\n    if (next_position == string + length) {\n      return (char *)0x0;\n    }\n    current_position = next_position + 1;\n  } while (*next_position != character);\n  return next_position;\n}\n\n",
            "renaming": {
                "FUN_08009f2c": "find_character_in_string_08009f2c",
                "param_1": "string",
                "param_2": "character",
                "param_3": "length",
                "pcVar1": "current_position",
                "pcVar2": "next_position"
            },
            "calling": [
                "FUN_0800937c",
                "FUN_08009698"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009f48": {
            "entrypoint": "0x08009f48",
            "current_name": "FUNC_08009f48",
            "code": "\nvoid FUNC_08009f48(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009f48": "FUNC_08009f48"
            },
            "calling": [
                "FUN_080091d8",
                "FUN_08009270"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08009f4a": {
            "entrypoint": "0x08009f4a",
            "current_name": "FUNC_08009f4a",
            "code": "\nvoid FUNC_08009f4a(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08009f4a": "FUNC_08009f4a"
            },
            "calling": [
                "FUN_080091d8",
                "FUN_08009270"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08009fe8": {
            "entrypoint": "0x08009fe8",
            "current_name": "process_data_08009fe8",
            "code": "\nint processData_08009fe8(uint data)\n\n{\n  int *arrayPointer;\n  undefined4 result;\n  int currentIndex;\n  code *functionPointer;\n  undefined4 unaff_r4;\n  undefined4 unaff_r5;\n  undefined4 in_lr;\n  undefined4 *originalArrayPointer;\n  \n  arrayPointer = DAT_20000090;\n  originalArrayPointer = &DAT_20000090;\n  if (0x1f < data) {\n    *DAT_20000090 = 0x16;\n    return -1;\n  }\n  currentIndex = DAT_20000090[0x11];\n  if ((currentIndex != 0) && (functionPointer = *(code **)(currentIndex + data * 4), functionPointer != (code *)0x0)) {\n    if (functionPointer != (code *)0x1) {\n      if (functionPointer == (code *)0xffffffff) {\n        *DAT_20000090 = 0x16;\n        return 1;\n      }\n      *(undefined4 *)(currentIndex + data * 4) = 0;\n      (*functionPointer)(data);\n    }\n    return 0;\n  }\n  result = thunk_FUN_0800887c(DAT_20000090);\n  DAT_20000a38 = 0;\n  currentIndex = FUN_0800886c(result,data,data,0,originalArrayPointer,unaff_r4,unaff_r5,in_lr);\n  if ((currentIndex == -1) && (DAT_20000a38 != 0)) {\n    *arrayPointer = DAT_20000a38;\n  }\n  return currentIndex;\n}\n\n",
            "renaming": {
                "FUN_08009fe8": "process_data_08009fe8",
                "param_1": "data",
                "piVar1": "arrayPointer",
                "uVar2": "result",
                "iVar3": "currentIndex",
                "pcVar4": "functionPointer",
                "puVar5": "originalArrayPointer"
            },
            "calling": [
                "FUN_08009b5c"
            ],
            "called": [
                "thunk_FUN_0800887c",
                "FUN_0800886c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_0800887c": {
            "entrypoint": "0x0800a01c",
            "current_name": "get_return_value_thunk_0800887c",
            "code": "\nundefined4 getReturnValue_thunk_0800887c(void)\n\n{\n  return 1;\n}\n\n",
            "renaming": {
                "thunk_FUN_0800887c": "get_return_value_thunk_0800887c"
            },
            "calling": [
                "FUN_08009fe8"
            ],
            "called": [
                "FUN_0800887c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a020": {
            "entrypoint": "0x0800a020",
            "current_name": "update_value_0800a020",
            "code": "\nvoid updateValue_0800a020(undefined4 input1,int input2)\n\n{\n  int result;\n  uint newValue;\n  bool isValid;\n  \n  result = FUN_0800a168(input1,(int)*(short *)(input2 + 0xe));\n  isValid = -1 < result;\n  if (isValid) {\n    newValue = *(int *)(input2 + 0x54) + result;\n  }\n  else {\n    newValue = *(ushort *)(input2 + 0xc) & 0xffffefff;\n  }\n  if (isValid) {\n    *(uint *)(input2 + 0x54) = newValue;\n  }\n  if (!isValid) {\n    *(short *)(input2 + 0xc) = (short)newValue;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a020": "update_value_0800a020",
                "param_1": "input1",
                "param_2": "input2",
                "iVar1": "result",
                "uVar2": "newValue",
                "bVar3": "isValid"
            },
            "calling": [],
            "called": [
                "FUN_0800a168"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a042": {
            "entrypoint": "0x0800a042",
            "current_name": "update_data_0800a042",
            "code": "\nvoid updateData_0800a042(int *outputData,int inputData,undefined4 paramA,undefined4 paramB)\n\n{\n  int returnValue;\n  undefined4 varA;\n  undefined4 varB;\n  undefined4 varC;\n  \n  if ((int)((uint)*(ushort *)(inputData + 0xc) << 0x17) < 0) {\n    FUN_0800a130(outputData,(int)*(short *)(inputData + 0xe),0,2);\n  }\n  *(ushort *)(inputData + 0xc) = *(ushort *)(inputData + 0xc) & 0xefff;\n  DAT_20000a38 = 0;\n  returnValue = FUN_0800885c((int)*(short *)(inputData + 0xe),paramA,paramB,paramB,paramB,varA,\n                       varB,varC);\n  if ((returnValue == -1) && (DAT_20000a38 != 0)) {\n    *outputData = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a042": "update_data_0800a042",
                "param_1": "outputData",
                "param_2": "inputData",
                "param_3": "paramA",
                "param_4": "paramB",
                "iVar1": "returnValue",
                "unaff_r4": "varA",
                "unaff_r5": "varB",
                "in_lr": "varC"
            },
            "calling": [],
            "called": [
                "FUN_0800885c",
                "FUN_0800a130"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a07a": {
            "entrypoint": "0x0800a07a",
            "current_name": "update_status_0800a07a",
            "code": "\nvoid updateStatus_0800a07a(undefined4 status,int data)\n\n{\n  int result;\n  ushort modifiedBits;\n  bool isInvalid;\n  \n  result = FUN_0800a130(status,(int)*(short *)(data + 0xe));\n  isInvalid = result == -1;\n  if (isInvalid) {\n    modifiedBits = *(ushort *)(data + 0xc) & 0xefff;\n  }\n  else {\n    *(int *)(data + 0x54) = result;\n    modifiedBits = *(ushort *)(data + 0xc) | 0x1000;\n  }\n  if (isInvalid) {\n    *(ushort *)(data + 0xc) = modifiedBits;\n  }\n  if (!isInvalid) {\n    *(ushort *)(data + 0xc) = modifiedBits;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a07a": "update_status_0800a07a",
                "param_1": "status",
                "param_2": "data",
                "iVar1": "result",
                "uVar2": "modifiedBits",
                "bVar3": "isInvalid"
            },
            "calling": [],
            "called": [
                "FUN_0800a130"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a0ec": {
            "entrypoint": "0x0800a0ec",
            "current_name": "process_data_0800a0ec",
            "code": "\nvoid processData_0800a0ec(int *output,undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  int result;\n  \n  DAT_20000a38 = 0;\n  result = FUN_08008846(input1,input2,input2,0,input3);\n  if ((result == -1) && (DAT_20000a38 != 0)) {\n    *output = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a0ec": "process_data_0800a0ec",
                "param_1": "output",
                "param_2": "input1",
                "param_3": "input2",
                "param_4": "input3",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08009e64"
            ],
            "called": [
                "FUN_08008846"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a110": {
            "entrypoint": "0x0800a110",
            "current_name": "initialize_data_0800a110",
            "code": "\nvoid initializeData_0800a110(int *result,undefined4 input)\n\n{\n  int returnValue;\n  \n  DAT_20000a38 = 0;\n  returnValue = FUN_08008850(input);\n  if ((returnValue == -1) && (DAT_20000a38 != 0)) {\n    *result = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a110": "initialize_data_0800a110",
                "param_1": "result",
                "param_2": "input",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_08009eac"
            ],
            "called": [
                "FUN_08008850"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a130": {
            "entrypoint": "0x0800a130",
            "current_name": "update_return_value_if_error_0800a130",
            "code": "\nvoid updateReturnValueIfError_0800a130(int *outputValue,undefined4 inputValue1,undefined4 inputValue2,undefined4 inputValue3)\n\n{\n  int result;\n  \n  DAT_20000a38 = 0;\n  result = FUN_08008854(inputValue1,inputValue2,inputValue3,inputValue3,inputValue3);\n  if ((result == -1) && (DAT_20000a38 != 0)) {\n    *outputValue = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a130": "update_return_value_if_error_0800a130",
                "param_1": "outputValue",
                "param_2": "inputValue1",
                "param_3": "inputValue2",
                "param_4": "inputValue3",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800a07a",
                "FUN_0800a042"
            ],
            "called": [
                "FUN_08008854"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a154": {
            "entrypoint": "0x0800a154",
            "current_name": "calculate_sum_or_add_0800a154",
            "code": "\nint calculateSumOrAdd_0800a154(undefined4 param,int data)\n\n{\n  int sumOrAddResult;\n  \n  sumOrAddResult = *(int *)(data + -4) + -4;\n  if (*(int *)(data + -4) < 0) {\n    sumOrAddResult = sumOrAddResult + *(int *)(data + sumOrAddResult);\n  }\n  return sumOrAddResult;\n}\n\n",
            "renaming": {
                "FUN_0800a154": "calculate_sum_or_add_0800a154",
                "param_1": "param",
                "param_2": "data",
                "iVar1": "sumOrAddResult"
            },
            "calling": [
                "FUN_08009908"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a168": {
            "entrypoint": "0x0800a168",
            "current_name": "update_parameter_0800a168",
            "code": "\nvoid updateParameter_0800a168(int *outputValue,undefined4 inputValue1,undefined4 inputValue2,undefined4 inputValue3)\n\n{\n  int result;\n  \n  DAT_20000a38 = 0;\n  result = FUN_08008858(inputValue1,inputValue2,inputValue3,inputValue3,inputValue3);\n  if ((result == -1) && (DAT_20000a38 != 0)) {\n    *outputValue = DAT_20000a38;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a168": "update_parameter_0800a168",
                "param_1": "outputValue",
                "param_2": "inputValue1",
                "param_3": "inputValue2",
                "param_4": "inputValue3",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800a020"
            ],
            "called": [
                "FUN_08008858"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a18c": {
            "entrypoint": "0x0800a18c",
            "current_name": "initialize_variables_0800a18c",
            "code": "\nvoid initializeVariables_0800a18c(void)\n\n{\n  code *jumpTable;\n  \n  jumpTable = initializeVariables_0800a18c;\n  FUN_08009b5c();\n  if (-1 < DAT_200009c0 << 0x1f) {\n    DAT_200009c0 = 1;\n  }\n  if (-1 < DAT_200009bc << 0x1f) {\n    DAT_200009bc = 1;\n  }\n  if (-1 < DAT_200009b8 << 0x1f) {\n    DAT_200009b8 = 1;\n  }\n  if (-1 < DAT_200009b4 << 0x1f) {\n    DAT_200009b4 = 1;\n  }\n  if (-1 < DAT_200009b0 << 0x1f) {\n    DAT_200009b0 = 1;\n  }\n  if (-1 < DAT_200009ac << 0x1f) {\n    DAT_200009ac = 1;\n  }\n  if (-1 < DAT_200009a8 << 0x1f) {\n    DAT_200009a8 = 1;\n  }\n  if (-1 < DAT_200009a4 << 0x1f) {\n    DAT_200009a4 = 1;\n  }\n  if (-1 < DAT_200009a0 << 0x1f) {\n    DAT_200009a0 = 1;\n  }\n  if (-1 < DAT_2000099c << 0x1f) {\n    DAT_2000099c = 1;\n  }\n  if (-1 < DAT_20000998 << 0x1f) {\n    DAT_20000998 = 1;\n  }\n  if (-1 < DAT_20000994 << 0x1f) {\n    DAT_20000994 = 1;\n  }\n                    /* WARNING: Could not recover jumptable at 0x0800a224. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a18c": "initialize_variables_0800a18c",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [
                "FUN_08009084"
            ],
            "called": [
                "FUN_08009b5c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a424": {
            "entrypoint": "0x0800a424",
            "current_name": "FUNC_0800a424",
            "code": "\nvoid FUNC_0800a424(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a424": "FUNC_0800a424"
            },
            "calling": [
                "FUN_08009148",
                "FUN_0800010c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800a430": {
            "entrypoint": "0x0800a430",
            "current_name": "FUNC_0800a430",
            "code": "\nvoid FUNC_0800a430(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800a430": "FUNC_0800a430"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        }
    },
    "used_tokens": 206971,
    "layers": [
        [
            "FUN_0800010c",
            "FUN_08000178",
            "FUN_08000188",
            "FUN_0800018c",
            "FUN_08000214",
            "FUN_0800021a",
            "FUN_08000488",
            "FUN_080004d4",
            "FUN_08000500",
            "FUN_08000588",
            "FUN_080005e0",
            "FUN_080005f8",
            "FUN_08000a64",
            "FUN_08000aec",
            "FUN_08000be8",
            "FUN_08000ef8",
            "FUN_08001b48",
            "FUN_08001bf8",
            "FUN_08001c08",
            "FUN_08001c18",
            "FUN_08001cd0",
            "FUN_080022f8",
            "FUN_08002400",
            "FUN_0800242c",
            "FUN_08002578",
            "FUN_08002580",
            "FUN_080025ac",
            "FUN_08002634",
            "FUN_08002644",
            "FUN_0800267c",
            "FUN_080026b0",
            "FUN_080026f8",
            "FUN_0800270c",
            "FUN_08002720",
            "FUN_080027f0",
            "FUN_0800288c",
            "FUN_0800291c",
            "FUN_08002948",
            "FUN_08002968",
            "FUN_08002a1c",
            "FUN_08002a26",
            "FUN_08002a30",
            "FUN_08002a58",
            "FUN_08002ac0",
            "FUN_08002acc",
            "FUN_08002b68",
            "FUN_08002c00",
            "FUN_08002c14",
            "FUN_08002c1e",
            "FUN_08002c2c",
            "FUN_08002ce0",
            "FUN_08002dbc",
            "FUN_08002ddc",
            "FUN_08002df6",
            "FUN_08002e26",
            "FUN_08002e44",
            "FUN_08002ec4",
            "FUN_08002ed2",
            "FUN_08002ef2",
            "FUN_08002efe",
            "FUN_08002f0a",
            "FUN_08002f14",
            "FUN_08002f1e",
            "FUN_08002f2c",
            "FUN_08002f84",
            "FUN_08002f94",
            "FUN_08002fa0",
            "FUN_08002fa8",
            "FUN_08002fba",
            "FUN_08002fc2",
            "FUN_08002fca",
            "FUN_08003002",
            "FUN_08003048",
            "FUN_0800307a",
            "FUN_08003106",
            "FUN_0800314e",
            "FUN_08003154",
            "FUN_08003158",
            "FUN_0800319e",
            "FUN_080031ce",
            "FUN_0800322c",
            "FUN_0800325a",
            "FUN_080032a2",
            "FUN_080032bc",
            "FUN_08003306",
            "FUN_08003346",
            "FUN_08003350",
            "FUN_08003366",
            "FUN_08003370",
            "FUN_08003376",
            "FUN_080033a8",
            "FUN_080033cc",
            "FUN_0800344a",
            "FUN_08003474",
            "FUN_080035b8",
            "FUN_080036a2",
            "FUN_080036ac",
            "FUN_080036d8",
            "FUN_08003724",
            "FUN_08003748",
            "FUN_08003760",
            "FUN_0800376c",
            "FUN_080038dc",
            "FUN_080038e4",
            "FUN_08003a1c",
            "FUN_08003a20",
            "FUN_08003aa0",
            "FUN_08003b8c",
            "FUN_08003bd8",
            "FUN_08003ce8",
            "FUN_08003de4",
            "FUN_08003e20",
            "FUN_08003f0c",
            "FUN_08003f30",
            "FUN_08003f94",
            "FUN_08003fb0",
            "FUN_08003fd8",
            "FUN_08004004",
            "FUN_08004024",
            "FUN_08004046",
            "FUN_08004050",
            "FUN_080040e8",
            "FUN_080042d4",
            "FUN_080042e2",
            "FUN_080042f0",
            "FUN_0800430c",
            "FUN_08004396",
            "FUN_080043a2",
            "FUN_0800457c",
            "FUN_0800459c",
            "FUN_080045c0",
            "FUN_08004728",
            "FUN_080047f4",
            "FUN_080048c8",
            "FUN_08004954",
            "FUN_080049e0",
            "FUN_08004a24",
            "FUN_08004a76",
            "FUN_08004ac2",
            "FUN_08004aec",
            "FUN_08004b82",
            "FUN_08004ccc",
            "FUN_08004d6c",
            "FUN_08004e3c",
            "FUN_08004f3c",
            "FUN_08005084",
            "FUN_08005188",
            "FUN_080052f0",
            "FUN_0800542a",
            "FUN_08005430",
            "FUN_08005434",
            "FUN_08005460",
            "FUN_08005840",
            "FUN_080058ac",
            "FUN_080058d2",
            "FUN_08005a1c",
            "FUN_08005a28",
            "FUN_08005a48",
            "FUN_08005a68",
            "FUN_08005aa4",
            "FUN_08005bb8",
            "FUN_08005cb4",
            "FUN_08005cec",
            "FUN_08005d48",
            "FUN_08005dac",
            "FUN_08005df4",
            "FUN_08005e2e",
            "FUN_08005e6e",
            "FUN_08005fe8",
            "FUN_08006060",
            "FUN_08006092",
            "FUN_080060c4",
            "FUN_08006128",
            "FUN_08006186",
            "FUN_08006262",
            "FUN_08006280",
            "FUN_080062f4",
            "FUN_08006390",
            "FUN_080063c0",
            "FUN_08006420",
            "FUN_0800643c",
            "FUN_08006460",
            "FUN_080064b0",
            "FUN_080064cc",
            "FUN_08006538",
            "FUN_080066e8",
            "FUN_0800674e",
            "FUN_080067ac",
            "FUN_0800688e",
            "FUN_080068d6",
            "FUN_08006932",
            "FUN_0800694c",
            "FUN_080069ec",
            "FUN_08006b1c",
            "FUN_08006b28",
            "FUN_08006b3e",
            "FUN_08006b5c",
            "FUN_08006b7c",
            "FUN_08006bb8",
            "FUN_08006c60",
            "FUN_08006c7c",
            "FUN_08006ca8",
            "FUN_08006d24",
            "FUN_08006d80",
            "FUN_08006e68",
            "FUN_08007110",
            "FUN_08007118",
            "FUN_080071e4",
            "FUN_0800723c",
            "FUN_08007246",
            "FUN_08007258",
            "FUN_080072d8",
            "FUN_080072f0",
            "FUN_080072fa",
            "FUN_08007306",
            "FUN_08007320",
            "FUN_08007332",
            "FUN_0800734a",
            "FUN_0800735a",
            "FUN_08007376",
            "FUN_0800738a",
            "FUN_080073ae",
            "FUN_080073c0",
            "FUN_080073e8",
            "FUN_080073ec",
            "FUN_08007438",
            "FUN_080074e0",
            "FUN_08007544",
            "FUN_08007594",
            "FUN_080075dc",
            "FUN_08007648",
            "FUN_080076e0",
            "FUN_08007708",
            "FUN_08007710",
            "FUN_08007718",
            "FUN_0800771c",
            "FUN_08007736",
            "FUN_08007744",
            "FUN_0800774a",
            "FUN_08007750",
            "FUN_080077b0",
            "FUN_08007e74",
            "FUN_08007ede",
            "FUN_08007f0e",
            "FUN_08007f78",
            "FUN_08007f7c",
            "FUN_08007f8e",
            "FUN_08007fa0",
            "FUN_08007ff0",
            "FUN_08008020",
            "FUN_08008078",
            "FUN_080084b0",
            "FUN_08008500",
            "FUN_080085b8",
            "FUN_080085dc",
            "FUN_08008600",
            "FUN_0800863c",
            "FUN_08008694",
            "FUN_080086e8",
            "FUN_0800870c",
            "FUN_08008730",
            "FUN_08008804",
            "FUN_08008840",
            "FUN_08008846",
            "FUN_08008850",
            "FUN_08008854",
            "FUN_08008858",
            "FUN_0800885c",
            "FUN_08008868",
            "FUN_0800886c",
            "FUN_0800887c",
            "FUN_08008880",
            "FUN_080088e0",
            "FUN_08008990",
            "FUN_08008a24",
            "FUN_08008a6c",
            "FUN_08008abc",
            "FUN_08008afa",
            "FUN_08008b66",
            "FUN_08008c20",
            "FUN_08008c44",
            "FUN_08008d00",
            "FUN_08008d18",
            "FUN_08008d30",
            "FUN_08008d8c",
            "FUN_08008df8",
            "FUN_08008e14",
            "FUN_08008ef4",
            "FUN_08008f0e",
            "FUN_08008f1c",
            "FUN_08008f3c",
            "FUN_08008f78",
            "FUN_08009084",
            "FUN_08009094",
            "FUN_080090c2",
            "FUN_080090cc",
            "FUN_08009108",
            "FUN_08009124",
            "FUN_08009148",
            "FUN_08009190",
            "FUN_080091a0",
            "FUN_080091b0",
            "FUN_080091c6",
            "FUN_080091d8",
            "FUN_08009270",
            "FUN_0800932c",
            "FUN_08009358",
            "FUN_0800937c",
            "FUN_080095a8",
            "FUN_08009698",
            "FUN_080098d8",
            "FUN_08009908",
            "FUN_08009918",
            "FUN_08009938",
            "FUN_08009954",
            "FUN_0800997e",
            "FUN_080099a4",
            "FUN_08009a80",
            "FUN_08009b5c",
            "FUN_08009c7c",
            "FUN_08009cdc",
            "FUN_08009d24",
            "FUN_08009d50",
            "FUN_08009db0",
            "FUN_08009e64",
            "FUN_08009eac",
            "FUN_08009f2c",
            "FUN_08009fe8",
            "thunk_FUN_0800887c",
            "FUN_0800a020",
            "FUN_0800a042",
            "FUN_0800a07a",
            "FUN_0800a0ec",
            "FUN_0800a110",
            "FUN_0800a130",
            "FUN_0800a154",
            "FUN_0800a168",
            "FUN_0800a18c"
        ]
    ],
    "locked_functions": []
}