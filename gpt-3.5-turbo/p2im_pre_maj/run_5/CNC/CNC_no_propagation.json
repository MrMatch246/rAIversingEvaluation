{
    "functions": {
        "FUN_08000188": {
            "entrypoint": "0x08000188",
            "current_name": "initialize_flag_08000188",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08000194) */\n\nundefined4 initializeFlag_08000188(undefined4 input)\n\n{\n  if ((char)DAT_2000044c == '\\0') {\n    DAT_2000044c._0_1_ = '\\x01';\n  }\n  return input;\n}\n\n",
            "renaming": {
                "FUN_08000188": "initialize_flag_08000188",
                "param_1": "input"
            },
            "calling": [],
            "called": [
                "FUN_0800b5b0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080001ac": {
            "entrypoint": "0x080001ac",
            "current_name": "concatenate_params_080001ac",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x080001b2) */\n\nundefined8 concatenateParams_080001ac(undefined4 firstParam,undefined4 secondParam)\n\n{\n  return CONCAT44(secondParam,firstParam);\n}\n\n",
            "renaming": {
                "FUN_080001ac": "concatenate_params_080001ac",
                "param_1": "firstParam",
                "param_2": "secondParam"
            },
            "calling": [
                "FUN_0800b3e8"
            ],
            "called": [
                "FUN_0800b5b0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080001c8": {
            "entrypoint": "0x080001c8",
            "current_name": "FUNC_080001c8",
            "code": "\nvoid FUNC_080001c8(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001c8": "FUNC_080001c8"
            },
            "calling": [
                "FUN_08000220"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080001d4": {
            "entrypoint": "0x080001d4",
            "current_name": "FUNC_080001d4",
            "code": "\nvoid FUNC_080001d4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001d4": "FUNC_080001d4"
            },
            "calling": [
                "FUN_08000210"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080001e0": {
            "entrypoint": "0x080001e0",
            "current_name": "FUNC_080001e0",
            "code": "\nvoid FUNC_080001e0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001e0": "FUNC_080001e0"
            },
            "calling": [
                "FUN_08000220"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080001ec": {
            "entrypoint": "0x080001ec",
            "current_name": "FUNC_080001ec",
            "code": "\nvoid FUNC_080001ec(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001ec": "FUNC_080001ec"
            },
            "calling": [
                "FUN_08000210"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080001f8": {
            "entrypoint": "0x080001f8",
            "current_name": "initialize_data_080001f8",
            "code": "\nvoid initializeData_080001f8(void)\n\n{\n  DAT_20000468 = 0;\n  FUN_08000210();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001f8": "initialize_data_080001f8"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08000210"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000210": {
            "entrypoint": "0x08000210",
            "current_name": "initialize_program_08000210",
            "code": "\nvoid initialize_program_08000210(void)\n\n{\n  FUNC_080001ec();\n  FUNC_080001d4();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000210": "initialize_program_08000210"
            },
            "calling": [
                "FUN_08000220",
                "FUN_080025e8",
                "FUN_080001f8"
            ],
            "called": [
                "FUN_080001d4",
                "FUN_080001ec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000220": {
            "entrypoint": "0x08000220",
            "current_name": "update_data_08000220",
            "code": "\nvoid updateData_08000220(char newData)\n\n{\n  if (newData != DAT_20000468) {\n    FUN_08002fd4();\n    if (newData == '\\x01') {\n      FUNC_080001c8();\n      DAT_20000468 = newData;\n    }\n    else if (newData == '\\x02') {\n      FUNC_080001e0();\n      DAT_20000468 = newData;\n    }\n    else {\n      FUN_08000210();\n      DAT_20000468 = newData;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000220": "update_data_08000220",
                "param_1": "newData"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_080001e0",
                "FUN_08000210",
                "FUN_080001c8",
                "FUN_08002fd4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000268": {
            "entrypoint": "0x08000268",
            "current_name": "calculate_modified_value_08000268",
            "code": "\n\n\nint calculateModifiedValue_08000268(void)\n\n{\n  int result;\n  \n  result = FUN_08005a84();\n  return (result + 1) * 1000 - _DAT_e000e018 / 0xa8;\n}\n\n",
            "renaming": {
                "FUN_08000268": "calculate_modified_value_08000268",
                "iVar1": "result"
            },
            "calling": [
                "FUN_080002b6"
            ],
            "called": [
                "FUN_08005a84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080002a0": {
            "entrypoint": "0x080002a0",
            "current_name": "execute_func_and_return_080002a0",
            "code": "\nvoid executeFuncAndReturn_080002a0(undefined4 inputParam)\n\n{\n  FUN_08005a98(inputParam);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080002a0": "execute_func_and_return_080002a0",
                "param_1": "inputParam"
            },
            "calling": [
                "FUN_08002408"
            ],
            "called": [
                "FUN_08005a98"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080002b6": {
            "entrypoint": "0x080002b6",
            "current_name": "check_condition_080002b6",
            "code": "\nvoid check_condition_080002b6(uint input_value)\n\n{\n  uint shifted_result;\n  uint computed_value;\n  bool is_condition_met;\n  longlong result;\n  undefined8 current_value;\n  \n  result = FUN_08000268();\n  computed_value = (uint)(result + (ulonglong)input_value >> 0x20);\n  do {\n    current_value = FUN_08000268();\n    shifted_result = (uint)((ulonglong)current_value >> 0x20);\n    is_condition_met = computed_value <= shifted_result;\n    if (shifted_result == computed_value) {\n      is_condition_met = (uint)(result + (ulonglong)input_value) <= (uint)current_value;\n    }\n  } while (!is_condition_met);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080002b6": "check_condition_080002b6",
                "param_1": "input_value",
                "uVar1": "shifted_result",
                "uVar2": "computed_value",
                "bVar3": "is_condition_met",
                "lVar4": "result",
                "uVar5": "current_value"
            },
            "calling": [],
            "called": [
                "FUN_08000268"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080002f0": {
            "entrypoint": "0x080002f0",
            "current_name": "initialize_data_080002f0",
            "code": "\nvoid initializeData_080002f0(void)\n\n{\n  FUN_0800b430(&DAT_20000470,0xff,4);\n  DAT_2000046c = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080002f0": "initialize_data_080002f0"
            },
            "calling": [
                "FUN_08000374",
                "FUN_08000340",
                "FUN_080003ec",
                "FUN_08000310"
            ],
            "called": [
                "FUN_0800b430"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000310": {
            "entrypoint": "0x08000310",
            "current_name": "get_indexed_value_08000310",
            "code": "\nundefined getIndexedValue_08000310(uint index)\n\n{\n  if (DAT_2000046c == 0) {\n    FUN_080002f0();\n  }\n  return (&DAT_20000470)[index & 0x3ff];\n}\n\n",
            "renaming": {
                "FUN_08000310": "get_indexed_value_08000310",
                "param_1": "index"
            },
            "calling": [
                "FUN_08004dd2",
                "FUN_080003ec"
            ],
            "called": [
                "FUN_080002f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000340": {
            "entrypoint": "0x08000340",
            "current_name": "store_data_08000340",
            "code": "\nvoid storeData_08000340(uint index,undefined value)\n\n{\n  if (DAT_2000046c == 0) {\n    FUN_080002f0();\n  }\n  (&DAT_20000470)[index & 0x3ff] = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000340": "store_data_08000340",
                "param_1": "index",
                "param_2": "value"
            },
            "calling": [
                "FUN_08000374",
                "FUN_08004c2a"
            ],
            "called": [
                "FUN_080002f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000374": {
            "entrypoint": "0x08000374",
            "current_name": "process_and_add_08000374",
            "code": "\nvoid process_and_add_08000374(int input_size,char *input_array,int num_elements)\n\n{\n  int remaining_elements;\n  char *current_element;\n  int array_index;\n  char sum;\n  \n  sum = '\\0';\n  remaining_elements = num_elements;\n  current_element = input_array;\n  array_index = input_size;\n  if (DAT_2000046c == 0) {\n    FUN_080002f0();\n    current_element = input_array;\n    array_index = input_size;\n  }\n  for (; remaining_elements != 0; remaining_elements = remaining_elements + -1) {\n    sum = (sum != '\\0') + *current_element;\n    FUN_08000340(array_index,*current_element);\n    current_element = current_element + 1;\n    array_index = array_index + 1;\n  }\n  FUN_08000340(array_index,sum);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000374": "process_and_add_08000374",
                "param_1": "input_size",
                "param_2": "input_array",
                "param_3": "num_elements",
                "local_1c": "remaining_elements",
                "local_18": "current_element",
                "local_14": "array_index",
                "local_9": "sum"
            },
            "calling": [
                "FUN_08004bc0",
                "FUN_08004c2a",
                "FUN_08004bf4"
            ],
            "called": [
                "FUN_08000340",
                "FUN_080002f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080003ec": {
            "entrypoint": "0x080003ec",
            "current_name": "is_equal_080003ec",
            "code": "\nbool isEqual_080003ec(char *inputString,int startIndex,int length)\n\n{\n  char currentChar;\n  uint expectedChar;\n  int remainingLength;\n  int currentIndex;\n  char *outputString;\n  byte counter;\n  \n  counter = 0;\n  remainingLength = length;\n  currentIndex = startIndex;\n  outputString = inputString;\n  if (DAT_2000046c == 0) {\n    FUN_080002f0();\n    currentIndex = startIndex;\n    outputString = inputString;\n  }\n  for (; remainingLength != 0; remainingLength = remainingLength + -1) {\n    currentChar = FUN_08000310(currentIndex);\n    counter = currentChar + (counter != 0);\n    *outputString = currentChar;\n    currentIndex = currentIndex + 1;\n    outputString = outputString + 1;\n  }\n  expectedChar = FUN_08000310(currentIndex);\n  return counter == expectedChar;\n}\n\n",
            "renaming": {
                "FUN_080003ec": "is_equal_080003ec",
                "param_1": "inputString",
                "param_2": "startIndex",
                "param_3": "length",
                "local_1c": "remainingLength",
                "local_18": "currentIndex",
                "local_14": "outputString",
                "local_9": "counter",
                "cVar1": "currentChar",
                "uVar2": "expectedChar"
            },
            "calling": [
                "FUN_08004d7c",
                "FUN_08004dd2",
                "FUN_08004d2c"
            ],
            "called": [
                "FUN_08000310",
                "FUN_080002f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000478": {
            "entrypoint": "0x08000478",
            "current_name": "initialize_parameters_08000478",
            "code": "\nvoid initializeParameters_08000478(undefined input1,undefined input2,undefined input3)\n\n{\n  DAT_20000e89 = input1;\n  DAT_20000e8a = input2;\n  DAT_20000e8b = input3;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000478": "initialize_parameters_08000478",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3"
            },
            "calling": [
                "FUN_080004ac",
                "FUN_080005b4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080004ac": {
            "entrypoint": "0x080004ac",
            "current_name": "initialize_data_080004ac",
            "code": "\nvoid initializeData_080004ac(void)\n\n{\n  int iVar1;\n  \n  FUN_0800b430(&DAT_20000e70,0,0x38);\n  DAT_20000e78 = DAT_20000ecc;\n  FUN_08000478(0,1,2);\n  DAT_20000e74 = 1;\n  iVar1 = FUN_08004d7c(DAT_20000e8c,&DAT_20000e90);\n  if (iVar1 == 0) {\n    FUN_08004030(10);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080004ac": "initialize_data_080004ac"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_0800b430",
                "FUN_08000478",
                "FUN_08004d7c",
                "FUN_08004030"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080004fc": {
            "entrypoint": "0x080004fc",
            "current_name": "initialize_data_080004fc",
            "code": "\nvoid initializeData_080004fc(undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  undefined4 result1;\n  \n  result1 = FUN_08008e44(input1);\n  DAT_20000e7c = FUN_08009054(result1,DAT_20000ebc);\n  result1 = FUN_08008e44(input2);\n  DAT_20000e80 = FUN_08009054(result1,DAT_20000ec0);\n  result1 = FUN_08008e44(input3);\n  DAT_20000e84 = FUN_08009054(result1,DAT_20000ec4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080004fc": "initialize_data_080004fc",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "uVar1": "result1"
            },
            "calling": [
                "FUN_0800283a"
            ],
            "called": [
                "FUN_08009054",
                "FUN_08008e44"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800056c": {
            "entrypoint": "0x0800056c",
            "current_name": "process_data_0800056c",
            "code": "\nundefined4 processData_0800056c(undefined4 inputData)\n\n{\n  undefined8 result;\n  \n  if (DAT_20000e73 != '\\0') {\n    result = FUN_08008590(inputData);\n    result = FUN_08008640((int)result,(int)((ulonglong)result >> 0x20),0x66666666,0x40396666);\n    inputData = FUN_08008c30((int)result,(int)((ulonglong)result >> 0x20));\n  }\n  return inputData;\n}\n\n",
            "renaming": {
                "FUN_0800056c": "process_data_0800056c",
                "param_1": "inputData",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08008640",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080005b4": {
            "entrypoint": "0x080005b4",
            "current_name": "decode_and_process_080005b4",
            "code": "\nchar decode_and_process_080005b4(undefined4 param)\n\n{\n  int index;\n  undefined4 result;\n  char errorCode;\n  uint tempVar;\n  undefined4 tempVar2;\n  undefined8 tempVar3;\n  undefined8 tempVar4;\n  undefined8 tempVar5;\n  undefined4 tempArray[4] [4];\n  undefined4 tempVar6;\n  undefined4 tempVar7;\n  undefined4 tempVar8;\n  undefined4 tempVar9;\n  undefined4 tempVar10;\n  undefined4 tempArray[6] [6];\n  undefined4 tempVar11;\n  byte byteVar1;\n  undefined byteVar2;\n  undefined4 tempVar12;\n  undefined4 tempVar13;\n  undefined boolVar;\n  uint tempVar14;\n  byte byteVar3;\n  byte byteVar4;\n  byte byteVar5;\n  byte byteVar6;\n  char charVar;\n  uint tempVar15;\n  undefined4 tempVar16;\n  sbyte tempVar17;\n  char charVar2;\n  char charVar3;\n  undefined4 tempVar18;\n  byte byteVar7;\n  ushort ushortVar;\n  uint tempVar19;\n  \n  if (DAT_20000ea9 == '\\x06') {\n    errorCode = '\\f';\n  }\n  else {\n    byteVar2 = 0;\n    ushortVar = 0;\n    byteVar7 = 0;\n    tempVar18 = 0xbf800000;\n    charVar3 = '\\0';\n    charVar2 = '\\0';\n    FUN_0800b430(tempArray[6] + 3,0,0xc);\n    FUN_0800b430(tempArray[6],0,0xc);\n    DAT_20000e70 = '\\0';\n    tempVar17 = 0;\n    while (index = FUN_0800184c(&byteVar1,tempArray[6] + 6,param,&byteVar2), index != 0) {\n      tempVar3 = FUN_08008590(tempVar11);\n      tempVar3 = FUN_08009798((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n      tempVar19 = FUN_08008ba0((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n      if (byteVar1 == 0x47) {\n        switch(tempVar19) {\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n        case 0x50:\n          tempVar17 = 2;\n          break;\n        case 4:\n        case 10:\n        case 0x1c:\n        case 0x1e:\n        case 0x35:\n        case 0x5c:\n          tempVar17 = 1;\n          break;\n        case 0x11:\n        case 0x12:\n        case 0x13:\n          tempVar17 = 3;\n          break;\n        case 0x14:\n        case 0x15:\n          tempVar17 = 7;\n          break;\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n          tempVar17 = 9;\n          break;\n        case 0x5a:\n        case 0x5b:\n          tempVar17 = 4;\n          break;\n        case 0x5d:\n        case 0x5e:\n          tempVar17 = 6;\n        }\n        switch(tempVar19) {\n        case 0:\n          DAT_20000e71 = '\\0';\n          break;\n        case 1:\n          DAT_20000e71 = '\\x01';\n          break;\n        case 2:\n          DAT_20000e71 = '\\x02';\n          break;\n        case 3:\n          DAT_20000e71 = '\\x03';\n          break;\n        case 4:\n          charVar2 = '\\x01';\n          break;\n        default:\n          DAT_20000e70 = '\\x03';\n          break;\n        case 10:\n          charVar2 = '\\x02';\n          break;\n        case 0x11:\n          FUN_08000478(0,1,2);\n          break;\n        case 0x12:\n          FUN_08000478(2,0,1);\n          break;\n        case 0x13:\n          FUN_08000478(1,2,0);\n          break;\n        case 0x14:\n          DAT_20000e73 = 1;\n          break;\n        case 0x15:\n          DAT_20000e73 = 0;\n          break;\n        case 0x1c:\n        case 0x1e:\n          result = FUN_08008eec(tempVar11,0x41200000);\n          tempVar3 = FUN_08008590(result);\n          tempVar3 = FUN_08009798((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n          tempVar19 = FUN_08008ba0((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n          switch(tempVar19) {\n          case 0x118:\n            charVar2 = '\\x03';\n            break;\n          case 0x119:\n            charVar2 = '\\x04';\n            break;\n          default:\n            DAT_20000e70 = '\\x03';\n            break;\n          case 300:\n            charVar2 = '\\x05';\n            break;\n          case 0x12d:\n            charVar2 = '\\x06';\n          }\n          break;\n        case 0x35:\n          charVar3 = '\\x01';\n          break;\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n          DAT_20000e8c = (char)tempVar19 - 0x36;\n          break;\n        case 0x50:\n          DAT_20000e71 = '\\x04';\n          break;\n        case 0x5a:\n          DAT_20000e74 = '\\x01';\n          break;\n        case 0x5b:\n          DAT_20000e74 = '\\0';\n          break;\n        case 0x5c:\n          result = FUN_08008eec(tempVar11,0x41200000);\n          tempVar3 = FUN_08008590(result);\n          tempVar3 = FUN_08009798((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n          tempVar19 = FUN_08008ba0((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n          if (tempVar19 == 0x398) {\n            charVar2 = '\\a';\n          }\n          else if (tempVar19 == 0x399) {\n            charVar2 = '\\b';\n          }\n          else {\n            DAT_20000e70 = '\\x03';\n          }\n          break;\n        case 0x5d:\n          DAT_20000e72 = '\\x01';\n          break;\n        case 0x5e:\n          DAT_20000e72 = '\\0';\n        }\n      }\n      else if (byteVar1 == 0x4d) {\n        if (tempVar19 == 0x1e) {\nLAB_08000b96:\n          tempVar17 = 5;\n        }\n        else if ((int)tempVar19 < 0x1f) {\n          if ((int)tempVar19 < 3) {\n            if (-1 < (int)tempVar19) goto LAB_08000b96;\n          }\n          else if (tempVar19 - 3 < 3) {\n            tempVar17 = 8;\n          }\n        }\n        switch(tempVar19) {\n        case 0:\n          DAT_20000e75 = '\\x01';\n          break;\n        case 1:\n          break;\n        case 2:\n        case 0x1e:\n          DAT_20000e75 = '\\x02';\n          break;\n        case 3:\n          DAT_20000e76 = '\\x01';\n          break;\n        case 4:\n          DAT_20000e76 = -1;\n          break;\n        case 5:\n          DAT_20000e76 = '\\0';\n          break;\n        default:\n          DAT_20000e70 = '\\x03';\n          break;\n        case 7:\n          DAT_20000e77 = 2;\n          break;\n        case 8:\n          DAT_20000e77 = 1;\n          break;\n        case 9:\n          DAT_20000e77 = 0;\n        }\n      }\n      if (tempVar17 != 0) {\n        if (((int)(uint)ushortVar >> tempVar17 & 1U) == 0) {\n          ushortVar = ushortVar | (ushort)(1 << tempVar17);\n        }\n        else {\n          DAT_20000e70 = '\\x05';\n        }\n        tempVar17 = 0;\n      }\n    }\n    errorCode = DAT_20000e70;\n    if (DAT_20000e70 == '\\0') {\n      tempVar16 = 0;\n      tempVar15 = 0;\n      charVar = '\\0';\n      byteVar2 = 0;\nswitchD_08000d18_caseD_47:\n      index = FUN_0800184c(&byteVar1,tempArray[6] + 6,param,&byteVar2);\n      if (index != 0) {\n        switch(byteVar1) {\n        case 0x46:\n          index = FUN_0800923c(tempVar11,0);\n          if (index != 0) {\n            DAT_20000e70 = '\\x06';\n          }\n          if (DAT_20000e72 == '\\0') {\n            DAT_20000e78 = FUN_0800056c(tempVar11);\n          }\n          else {\n            tempVar18 = FUN_0800056c(tempVar11);\n          }\n          break;\n        case 0x47:\n        case 0x4d:\n        case 0x4e:\n          break;\n        default:\n          DAT_20000e70 = '\\x03';\n          break;\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n          tempVar = (uint)byteVar1;\n          result = FUN_0800056c(tempVar11);\n          tempArray[6][tempVar - 0x49] = result;\n          break;\n        case 0x4c:\n          tempVar3 = FUN_08008590(tempVar11);\n          tempVar3 = FUN_08009798((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n          charVar = FUN_08008bf0((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n          break;\n        case 0x50:\n          tempVar16 = tempVar11;\n          break;\n        case 0x52:\n          tempVar15 = FUN_0800056c(tempVar11);\n          break;\n        case 0x53:\n          index = FUN_08009228(tempVar11,0);\n          if (index != 0) {\n            DAT_20000e70 = '\\x06';\n          }\n          break;\n        case 0x54:\n          index = FUN_08009228(tempVar11,0);\n          if (index != 0) {\n            DAT_20000e70 = '\\x06';\n          }\n          tempVar3 = FUN_08008590(tempVar11);\n          tempVar3 = FUN_08009798((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n          DAT_20000e88 = FUN_08008bf0((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n          break;\n        case 0x58:\n          tempArray[6][3] = FUN_0800056c(tempVar11);\n          byteVar7 = byteVar7 | 1;\n          break;\n        case 0x59:\n          tempArray[6][4] = FUN_0800056c(tempVar11);\n          byteVar7 = byteVar7 | 2;\n          break;\n        case 0x5a:\n          tempArray[6][5] = FUN_0800056c(tempVar11);\n          byteVar7 = byteVar7 | 4;\n        }\n        goto switchD_08000d18_caseD_47;\n      }\n      errorCode = DAT_20000e70;\n      if (DAT_20000e70 == '\\0') {\n        if (DAT_20000ea9 != '\\a') {\n          FUN_0800525c((int)DAT_20000e76);\n          FUN_08000220(DAT_20000e77);\n        }\n        if ((ushortVar & 0x200) != 0) {\n          index = FUN_08004d7c(DAT_20000e8c,&tempVar8);\n          if (index == 0) {\n            return '\\n';\n          }\n          DAT_20000e90 = tempVar8;\n          DAT_20000e94 = tempVar9;\n          DAT_20000e98 = tempVar10;\n        }\n        switch(charVar2) {\n        case '\\x01':\n          index = FUN_08009228(tempVar16,0);\n          if (index == 0) {\n            if (DAT_20000ea9 != '\\a') {\n              FUN_08002408(tempVar16);\n            }\n          }\n          else {\n            DAT_20000e70 = '\\x06';\n          }\n          break;\n        case '\\x02':\n          tempVar3 = FUN_08008590(tempVar16);\n          tempVar3 = FUN_08009798((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n          tempVar19 = FUN_08008ba0((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n          if ((((charVar == '\\x02') || (charVar == '\\x14')) && (-1 < (int)tempVar19)) &&\n             ((int)tempVar19 < 7)) {\n            if ((byteVar7 == 0) && (charVar == '\\x02')) {\n              DAT_20000e70 = '\\x06';\n            }\n            else {\n              if ((int)tempVar19 < 1) {\n                tempVar19 = (uint)DAT_20000e8c;\n              }\n              else {\n                tempVar19 = tempVar19 - 1;\n              }\n              index = FUN_08004d7c(tempVar19 & 0xff,tempArray[4]);\n              if (index == 0) {\n                return '\\n';\n              }\n              for (byteVar6 = 0; byteVar6 < 3; byteVar6 = byteVar6 + 1) {\n                if (((int)(uint)byteVar7 >> byteVar6 & 1U) != 0) {\n                  if (charVar == '\\x14') {\n                    tempVar = (uint)byteVar6;\n                    result = FUN_08008cd8(*(undefined4 *)(&DAT_20000e74 + (byteVar6 + 2) * 4),\n                                         tempArray[6][byteVar6 + 3]);\n                    tempArray[4][tempVar] = result;\n                  }\n                  else {\n                    tempArray[4][byteVar6] = tempArray[6][byteVar6 + 3];\n                  }\n                }\n              }\n              FUN_08004bf4(tempVar19 & 0xff,tempArray[4]);\n              if (tempVar19 == DAT_20000e8c) {\n                DAT_20000e90 = tempArray[4][0];\n                DAT_20000e94 = tempArray[4][1];\n                DAT_20000e98 = tempArray[4][2];\n              }\n            }\n          }\n          else {\n            DAT_20000e70 = '\\x03';\n          }\n          byteVar7 = 0;\n          break;\n        case '\\x03':\n        case '\\x05':\n          if (byteVar7 != 0) {\n            for (byteVar5 = 0; byteVar5 < 3; byteVar5 = byteVar5 + 1) {\n              if (((int)(uint)byteVar7 >> byteVar5 & 1U) == 0) {\n                tempArray[6][byteVar5 + 3] = *(undefined4 *)(&DAT_20000e74 + (byteVar5 + 2) * 4);\n              }\n              else if (DAT_20000e74 == '\\0') {\n                tempVar = (uint)byteVar5;\n                result = FUN_08008cdc(tempArray[6][byteVar5 + 3],\n                                     *(undefined4 *)(&DAT_20000e74 + (byteVar5 + 2) * 4));\n                tempArray[6][tempVar + 3] = result;\n              }\n              else {\n                tempVar2 = tempArray[6][byteVar5 + 3];\n                result = FUN_08008cdc(*(undefined4 *)(&DAT_20000e70 + (byteVar5 + 8) * 4),\n                                     *(undefined4 *)(&DAT_20000e74 + (byteVar5 + 10) * 4));\n                tempVar = (uint)byteVar5;\n                result = FUN_08008cdc(tempVar2,result);\n                tempArray[6][tempVar + 3] = result;\n              }\n            }\n            FUN_08001e98(tempArray[6][3],tempArray[6][4],tempArray[6][5],DAT_20000ed0,0);\n          }\n          if (charVar2 == '\\x05') {\n            index = FUN_08004d7c(7,tempArray[4] + 3);\n            if (index == 0) {\n              return '\\n';\n            }\n          }\n          else {\n            index = FUN_08004d7c(6,tempArray[4] + 3);\n            if (index == 0) {\n              return '\\n';\n            }\n          }\n          FUN_08001e98(tempArray[4][3],tempVar6,tempVar7,DAT_20000ed0,0);\n          DAT_20000e7c = tempArray[4][3];\n          DAT_20000e80 = tempVar6;\n          DAT_20000e84 = tempVar7;\n          byteVar7 = 0;\n          break;\n        case '\\x04':\n        case '\\x06':\n          if (charVar2 == '\\x06') {\n            FUN_08004bf4(7,&DAT_20000e7c);\n          }\n          else {\n            FUN_08004bf4(6,&DAT_20000e7c);\n          }\n          break;\n        case '\\a':\n          if (byteVar7 == 0) {\n            DAT_20000e70 = '\\x06';\n          }\n          else {\n            for (byteVar4 = 0; byteVar4 < 3; byteVar4 = byteVar4 + 1) {\n              if (((int)(uint)byteVar7 >> byteVar4 & 1U) != 0) {\n                result = FUN_08008cd8(*(undefined4 *)(&DAT_20000e74 + (byteVar4 + 2) * 4),\n                                     *(undefined4 *)(&DAT_20000e70 + (byteVar4 + 8) * 4));\n                tempVar = (uint)byteVar4;\n                result = FUN_08008cd8(result,tempArray[6][byteVar4 + 3]);\n                *(undefined4 *)(&DAT_20000e74 + (tempVar + 10) * 4) = result;\n              }\n            }\n          }\n          byteVar7 = 0;\n          break;\n        case '\\b':\n          FUN_0800b430(&DAT_20000e9c,0,0xc);\n        }\n        if (((ushortVar & 4) != 0) || (byteVar7 != 0)) {\n          if ((DAT_20000e72 != '\\0') &&\n             ((index = FUN_08009228(tempVar18,0), index != 0 && (DAT_20000e71 != '\\x04')))) {\n            DAT_20000e70 = '\\x06';\n          }\n          if (((charVar3 != '\\0') && (DAT_20000e71 != '\\0')) && (DAT_20000e71 != '\\x01')) {\n            DAT_20000e70 = '\\x06';\n          }\n          if (DAT_20000e70 != '\\0') {\n            return DAT_20000e70;\n          }\n          for (byteVar3 = 0; byteVar3 < 3; byteVar3 = byteVar3 + 1) {\n            if (((int)(uint)byteVar7 >> byteVar3 & 1U) == 0) {\n              tempArray[6][byteVar3 + 3] = *(undefined4 *)(&DAT_20000e74 + (byteVar3 + 2) * 4);\n            }\n            else if (charVar3 == '\\0') {\n              if (DAT_20000e74 == '\\0') {\n                tempVar = (uint)byteVar3;\n                result = FUN_08008cdc(tempArray[6][byteVar3 + 3],\n                                     *(undefined4 *)(&DAT_20000e74 + (byteVar3 + 2) * 4));\n                tempArray[6][tempVar + 3] = result;\n              }\n              else {\n                tempVar2 = tempArray[6][byteVar3 + 3];\n                result = FUN_08008cdc(*(undefined4 *)(&DAT_20000e70 + (byteVar3 + 8) * 4),\n                                     *(undefined4 *)(&DAT_20000e74 + (byteVar3 + 10) * 4));\n                tempVar = (uint)byteVar3;\n                result = FUN_08008cdc(tempVar2,result);\n                tempArray[6][tempVar + 3] = result;\n              }\n            }\n          }\n          switch(DAT_20000e71) {\n          case '\\0':\n            if (byteVar7 == 0) {\n              DAT_20000e70 = '\\x06';\n            }\n            else {\n              FUN_08001e98(tempArray[6][3],tempArray[6][4],tempArray[6][5],DAT_20000ed0,0);\n            }\n            break;\n          case '\\x01':\n            if (byteVar7 == 0) {\n              DAT_20000e70 = '\\x06';\n            }\n            else {\n              result = tempVar18;\n              if (DAT_20000e72 == '\\0') {\n                result = DAT_20000e78;\n              }\n              FUN_08001e98(tempArray[6][3],tempArray[6][4],tempArray[6][5],result,DAT_20000e72);\n            }\n            break;\n          case '\\x02':\n          case '\\x03':\n            byteVar7 = byteVar7 & ~(byte)(1 << DAT_20000e8b);\n            if ((byteVar7 == 0) ||\n               (((index = FUN_08009214(tempVar15,0), index != 0 &&\n                 (index = FUN_08009214(tempArray[6][DAT_20000e89],0), index != 0)) &&\n                (index = FUN_08009214(tempArray[6][DAT_20000e8a],0), index != 0)))) {\n              DAT_20000e70 = '\\x06';\n            }\n            else {\n              index = FUN_08009214(tempVar15,0);\n              if (index == 0) {\n                tempVar13 = FUN_08008cd8(tempArray[6][DAT_20000e89 + 3],\n                                        *(undefined4 *)(&DAT_20000e74 + (DAT_20000e89 + 2) * 4));\n                tempVar12 = FUN_08008cd8(tempArray[6][DAT_20000e8a + 3],\n                                        *(undefined4 *)(&DAT_20000e74 + (DAT_20000e8a + 2) * 4));\n                FUN_0800b430(tempArray[6],0,0xc);\n                result = FUN_08008eec(tempVar15,0x40800000);\n                result = FUN_08008eec(result,tempVar15);\n                tempVar2 = FUN_08008eec(tempVar13,tempVar13);\n                result = FUN_08008cd8(result,tempVar2);\n                tempVar2 = FUN_08008eec(tempVar12,tempVar12);\n                tempVar14 = FUN_08008cd8(result,tempVar2);\n                index = FUN_08009228(tempVar14,0);\n                if (index != 0) {\n                  DAT_20000e70 = 4;\n                  return '\\x04';\n                }\n                tempVar3 = FUN_08008590(tempVar14);\n                tempVar3 = FUN_080098d0((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n                tempVar4 = FUN_08008590(tempVar13);\n                tempVar5 = FUN_08008590(tempVar12);\n                tempVar4 = FUN_0800981c((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20),(int)tempVar5,\n                                     (int)((ulonglong)tempVar5 >> 0x20));\n                tempVar3 = FUN_08008894((int)tempVar3,(uint)((ulonglong)tempVar3 >> 0x20) ^ 0x80000000,\n                                     (int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20));\n                tempVar14 = FUN_08008c30((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n                if (DAT_20000e71 == '\\x03') {\n                  tempVar14 = tempVar14 ^ 0x80000000;\n                }\n                index = FUN_08009228(tempVar15,0);\n                if (index != 0) {\n                  tempVar14 = tempVar14 ^ 0x80000000;\n                  tempVar15 = tempVar15 ^ 0x80000000;\n                }\n                result = FUN_08008eec(tempVar12,tempVar14);\n                result = FUN_08008cd8(tempVar13,result);\n                tempVar = (uint)DAT_20000e89;\n                result = FUN_08008eec(result,0x3f000000);\n                tempArray[6][tempVar] = result;\n                result = FUN_08008eec(tempVar13,tempVar14);\n                result = FUN_08008cdc(result,tempVar12);\n                tempVar = (uint)DAT_20000e8a;\n                result = FUN_08008eec(result,0x3f000000);\n                tempArray[6][tempVar] = result;\n              }\n              else {\n                tempVar3 = FUN_08008590(tempArray[6][DAT_20000e89]);\n                tempVar4 = FUN_08008590(tempArray[6][DAT_20000e8a]);\n                tempVar3 = FUN_0800981c((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20),(int)tempVar4,\n                                     (int)((ulonglong)tempVar4 >> 0x20));\n                tempVar15 = FUN_08008c30((int)tempVar3,(int)((ulonglong)tempVar3 >> 0x20));\n              }\n              boolVar = DAT_20000e71 == '\\x02';\n              result = tempVar18;\n              if (DAT_20000e72 == '\\0') {\n                result = DAT_20000e78;\n              }\n              FUN_08001f00(&DAT_20000e7c,tempArray[6] + 3,tempArray[6],DAT_20000e89,DAT_20000e8a,\n                           DAT_20000e8b,result,DAT_20000e72,tempVar15,boolVar);\n            }\n            break;\n          case '\\x04':\n            if (byteVar7 != 0) {\n              DAT_20000e70 = '\\x06';\n            }\n          }\n          if (DAT_20000e70 != '\\0') {\n            return DAT_20000e70;\n          }\n          DAT_20000e7c = tempArray[6][3];\n          DAT_20000e80 = tempArray[6][4];\n          DAT_20000e84 = tempArray[6][5];\n        }\n        errorCode = DAT_20000e70;\n        if (DAT_20000e75 != '\\0') {\n          FUN_08002fd4();\n          DAT_20000eb8 = 0;\n          if (DAT_20000e75 == '\\x02') {\n            FUN_080025e8();\n            errorCode = DAT_20000e70;\n          }\n          else {\n            DAT_20000e75 = '\\0';\n            errorCode = DAT_20000e70;\n          }\n        }\n      }\n    }\n  }\n  return errorCode;\n}\n\n",
            "renaming": {
                "FUN_080005b4": "decode_and_process_080005b4",
                "param_1": "param",
                "iVar1": "index",
                "uVar2": "result",
                "cVar3": "errorCode",
                "uVar4": "tempVar",
                "uVar5": "tempVar2",
                "uVar6": "tempVar3",
                "uVar7": "tempVar4",
                "uVar8": "tempVar5",
                "local_94": "tempArray[4]",
                "local_84": "tempVar6",
                "local_80": "tempVar7",
                "local_7c": "tempVar8",
                "uStack_78": "tempVar9",
                "uStack_74": "tempVar10",
                "auStack_70": "tempArray[6]",
                "local_58": "tempVar11",
                "local_52": "byteVar1",
                "local_51": "byteVar2",
                "local_50": "tempVar12",
                "local_4c": "tempVar13",
                "local_45": "boolVar",
                "local_44": "tempVar14",
                "local_3d": "byteVar3",
                "local_3c": "byteVar4",
                "local_3b": "byteVar5",
                "local_3a": "byteVar6",
                "local_39": "charVar",
                "local_38": "tempVar15",
                "local_34": "tempVar16",
                "local_2f": "tempVar17",
                "local_2e": "charVar2",
                "local_2d": "charVar3",
                "local_2c": "tempVar18",
                "local_27": "byteVar7",
                "local_26": "ushortVar",
                "local_24": "tempVar19"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080039bc"
            ],
            "called": [
                "FUN_08000478",
                "FUN_08009214",
                "FUN_0800923c",
                "FUN_08001f00",
                "FUN_08008bf0",
                "FUN_08004bf4",
                "FUN_08008590",
                "FUN_08009228",
                "FUN_0800184c",
                "FUN_08000220",
                "FUN_08008cdc",
                "FUN_08008cd8",
                "FUN_0800525c",
                "FUN_08009798",
                "FUN_080025e8",
                "FUN_08008ba0",
                "FUN_08002408",
                "FUN_08008894",
                "FUN_08002fd4",
                "FUN_0800b430",
                "FUN_08001e98",
                "FUN_080098d0",
                "FUN_08004d7c",
                "FUN_0800056c",
                "FUN_0800981c",
                "FUN_08008eec",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800184c": {
            "entrypoint": "0x0800184c",
            "current_name": "check_valid_character_0800184c",
            "code": "\nundefined4 checkValidCharacter_0800184c(byte *outputByte,undefined4 param_ptr,int baseOffset,byte *inputByte)\n\n{\n  int result;\n  undefined4 isValid;\n  \n  if (*(char *)(baseOffset + (uint)*inputByte) == '\\0') {\n    isValid = 0;\n  }\n  else {\n    *outputByte = *(byte *)(baseOffset + (uint)*inputByte);\n    if ((*outputByte < 0x41) || (0x5a < *outputByte)) {\n      DAT_20000e70 = 2;\n      isValid = 0;\n    }\n    else {\n      *inputByte = *inputByte + 1;\n      result = FUN_08002638(baseOffset,inputByte,param_ptr);\n      if (result == 0) {\n        DAT_20000e70 = 1;\n        isValid = 0;\n      }\n      else {\n        isValid = 1;\n      }\n    }\n  }\n  return isValid;\n}\n\n",
            "renaming": {
                "FUN_0800184c": "check_valid_character_0800184c",
                "param_1": "outputByte",
                "param_2": "param_ptr",
                "param_3": "baseOffset",
                "param_4": "inputByte",
                "iVar1": "result",
                "uVar2": "isValid"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08002638"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080018cc": {
            "entrypoint": "0x080018cc",
            "current_name": "update_flags_080018cc",
            "code": "\n\n\nvoid updateFlags_080018cc(uint newValue)\n\n{\n  _DAT_40021014 = newValue | _DAT_40021014 & 0xfffffaaf;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080018cc": "update_flags_080018cc",
                "param_1": "newValue"
            },
            "calling": [
                "FUN_08001994"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080018fc": {
            "entrypoint": "0x080018fc",
            "current_name": "update_data_080018fc",
            "code": "\n\n\nvoid updateData_080018fc(uint newValue)\n\n{\n  _DAT_40021014 = newValue | _DAT_40021014 & 0xfffff55f;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080018fc": "update_data_080018fc",
                "param_1": "newValue"
            },
            "calling": [
                "FUN_08001994"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800192c": {
            "entrypoint": "0x0800192c",
            "current_name": "set_flag_based_on_bit_0800192c",
            "code": "\nvoid setFlagBasedOnBit_0800192c(void)\n\n{\n  DAT_20000e4c = (uint)((DAT_20000ee4 & 8) != 0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800192c": "set_flag_based_on_bit_0800192c"
            },
            "calling": [
                "FUN_08004e30",
                "FUN_08001ddc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800195c": {
            "entrypoint": "0x0800195c",
            "current_name": "check_and_update_data_0800195c",
            "code": "\nvoid check_and_update_data_0800195c(void)\n\n{\n  if ((DAT_20000ea9 != '\\x06') && ((DAT_20000eaa & 0x20) == 0)) {\n    FUN_080025e8();\n    DAT_20000eaa = DAT_20000eaa | 0x40;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800195c": "check_and_update_data_0800195c"
            },
            "calling": [
                "FUN_080074c8"
            ],
            "called": [
                "FUN_080025e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001994": {
            "entrypoint": "0x08001994",
            "current_name": "process_data_08001994",
            "code": "\nvoid processData_08001994(byte flags,char flag1,char flag2,undefined4 data)\n\n{\n  undefined4 result;\n  uint maxValue;\n  undefined8 tempValue;\n  undefined8 tempValue2;\n  byte localFlag;\n  uint value1;\n  uint value2;\n  uint value3;\n  ushort variable1;\n  uint maxValue2;\n  int variable2;\n  undefined4 tempValue3;\n  uint value4;\n  uint variable3;\n  ushort variable4;\n  uint variable5;\n  uint variable6;\n  int variable7;\n  int variable8;\n  int variable9;\n  int variable10;\n  ushort variable11;\n  uint variable12;\n  char localFlag2;\n  \n  localFlag2 = '\\0';\n  FUN_0800b430(&value1,0,0xc);\n  if ((flags & 1) != 0) {\n    localFlag2 = localFlag2 + '\\x01';\n    tempValue = FUN_08008590(DAT_20000ebc);\n    value1 = FUN_080095b8((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n  }\n  if ((flags & 2) != 0) {\n    localFlag2 = localFlag2 + '\\x01';\n    tempValue = FUN_08008590(DAT_20000ec0);\n    value2 = FUN_080095b8((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n  }\n  if ((flags & 4) != 0) {\n    localFlag2 = localFlag2 + '\\x01';\n    tempValue = FUN_08008590(DAT_20000ec4);\n    value3 = FUN_080095b8((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n  }\n  maxValue = value3;\n  if (value3 < value2) {\n    maxValue = value2;\n  }\n  value4 = value1;\n  if (value1 < maxValue) {\n    value4 = maxValue;\n  }\n  tempValue = FUN_0800854c(value4);\n  tempValue2 = FUN_0800854c(localFlag2);\n  tempValue2 = FUN_080098d0((int)tempValue2,(int)((ulonglong)tempValue2 >> 0x20));\n  tempValue = FUN_08008894((int)tempValue,(int)((ulonglong)tempValue >> 0x20),(int)tempValue2,\n                       (int)((ulonglong)tempValue2 >> 0x20));\n  tempValue3 = FUN_08008c30((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n  result = FUN_08008eec(DAT_20000edc,tempValue3);\n  result = FUN_08009054(result,0x453b8000);\n  tempValue = FUN_08008590(result);\n  tempValue = FUN_08009318((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n  variable2 = FUN_08008bf0((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n  tempValue = FUN_0800854c(localFlag2);\n  tempValue = FUN_080098d0((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n  tempValue2 = FUN_08008590(data);\n  tempValue = FUN_08008640((int)tempValue,(int)((ulonglong)tempValue >> 0x20),(int)tempValue2,\n                       (int)((ulonglong)tempValue2 >> 0x20));\n  result = FUN_08008c30((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n  result = FUN_08008eec(tempValue3,result);\n  result = FUN_08009054(0x4c64e1c0,result);\n  tempValue = FUN_08008590(result);\n  maxValue2 = FUN_080095b8((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n  variable12 = 75000;\n  if (maxValue2 < 75000) {\n    variable12 = maxValue2;\n  }\n  variable1 = DAT_20000ed4;\n  variable11 = DAT_20000ed6 ^ DAT_20000ee6 & 0xaa0;\n  if (flag1 == '\\0') {\n    variable11 = variable11 ^ 0xaa0;\n  }\n  FUN_080018fc(variable11);\n  FUN_080018cc(variable1);\n  variable8 = -(value4 >> 1);\n  variable7 = variable12 - DAT_20000ec9;\n  variable6 = 0;\n  variable5 = 10000;\n  localFlag = flags;\n  variable9 = variable8;\n  variable10 = variable8;\n  while( true ) {\n    variable4 = variable1;\n    variable3 = FUN_080078f4();\n    if (flag2 == '\\0') {\n      variable3 = variable3 ^ 0x1e;\n    }\n    if (((localFlag & 1) != 0) && (variable10 = variable10 + value1, 0 < variable10)) {\n      if ((variable3 & 0x10) == 0) {\n        localFlag = localFlag & 0xfe;\n      }\n      else {\n        variable4 = variable4 ^ 0x10;\n      }\n      variable10 = variable10 - value4;\n    }\n    if (((localFlag & 2) != 0) && (variable9 = variable9 + value2, 0 < variable9)) {\n      if ((variable3 & 8) == 0) {\n        localFlag = localFlag & 0xfd;\n      }\n      else {\n        variable4 = variable4 ^ 0x440;\n      }\n      variable9 = variable9 - value4;\n    }\n    if (((localFlag & 4) != 0) && (variable8 = variable8 + value3, 0 < variable8)) {\n      if ((variable3 & 4) == 0) {\n        localFlag = localFlag & 0xfb;\n      }\n      else {\n        variable4 = variable4 ^ 0x100;\n      }\n      variable8 = variable8 - value4;\n    }\n    if ((localFlag == 0) || ((DAT_20000eaa & 0x10) != 0)) break;\n    FUN_080018cc(variable4);\n    FUNC_08002828(DAT_20000ec9);\n    FUN_080018cc(variable1);\n    FUNC_08002828(variable7);\n    if ((maxValue2 < variable12) && (variable5 = variable12 + variable5, 20000 < variable5)) {\n      variable5 = variable5 - 20000;\n      variable6 = variable2 + variable6;\n      variable12 = 60000000 / variable6;\n      if (variable12 < maxValue2) {\n        variable12 = maxValue2;\n      }\n      variable7 = variable12 - DAT_20000ec9;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001994": "process_data_08001994",
                "param_1": "flags",
                "param_2": "flag1",
                "param_3": "flag2",
                "param_4": "data",
                "uVar1": "result",
                "uVar2": "maxValue",
                "uVar3": "tempValue",
                "uVar4": "tempValue2",
                "local_61": "localFlag",
                "local_5c": "value1",
                "local_58": "value2",
                "local_54": "value3",
                "local_4e": "variable1",
                "local_4c": "maxValue2",
                "local_48": "variable2",
                "local_44": "tempValue3",
                "local_40": "value4",
                "local_3c": "variable3",
                "local_36": "variable4",
                "local_34": "variable5",
                "local_30": "variable6",
                "local_2c": "variable7",
                "local_28": "variable8",
                "local_24": "variable9",
                "local_20": "variable10",
                "local_1a": "variable11",
                "local_18": "variable12",
                "local_11": "localFlag2"
            },
            "calling": [
                "FUN_08001d4c"
            ],
            "called": [
                "FUN_080095b8",
                "FUN_08009054",
                "FUN_08009318",
                "FUN_0800854c",
                "FUN_080078f4",
                "FUN_08008894",
                "FUN_08008640",
                "FUN_08008bf0",
                "FUN_080018cc",
                "FUN_0800b430",
                "FUN_08008590",
                "FUN_080098d0",
                "FUN_080018fc",
                "FUN_08008eec",
                "FUN_08008c30",
                "FUN_08002828"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001d4c": {
            "entrypoint": "0x08001d4c",
            "current_name": "initialize_data_08001d4c",
            "code": "\nvoid initializeData_08001d4c(void)\n\n{\n  char temp;\n  char counter;\n  \n  FUN_08005790();\n  FUN_08001994(4,1,0,DAT_20000eec);\n  FUN_08001994(3,1,0,DAT_20000eec);\n  FUNC_08002814(DAT_20000ef0);\n  counter = '\\x02';\n  while( true ) {\n    temp = counter + -1;\n    if (counter == '\\0') break;\n    FUN_08001994(7,0,1,DAT_20000ee8);\n    FUNC_08002814(DAT_20000ef0);\n    counter = temp;\n    if ('\\0' < temp) {\n      FUN_08001994(7,1,0,DAT_20000ee8);\n      FUNC_08002814(DAT_20000ef0);\n    }\n  }\n  FUN_080057e4();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001d4c": "initialize_data_08001d4c",
                "local_9": "counter",
                "cVar1": "temp"
            },
            "calling": [
                "FUN_080024c4"
            ],
            "called": [
                "FUN_08002814",
                "FUN_08005790",
                "FUN_080057e4",
                "FUN_08001994"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001ddc": {
            "entrypoint": "0x08001ddc",
            "current_name": "initialize_system_08001ddc",
            "code": "\nvoid initializeSystem_08001ddc(void)\n\n{\n  FUNC_08008244();\n  FUN_080051b4();\n  FUN_0800583c();\n  FUN_0800b430(&DAT_20000ea8,0,0x14);\n  DAT_20000ea8 = '\\x01';\n  DAT_20000ea9 = '\\x01';\n  do {\n    if (DAT_20000ea8 != '\\0') {\n      FUNC_080082ba();\n      FUN_08002f24();\n      FUN_080004ac();\n      FUN_080039a0();\n      FUN_08005238();\n      FUN_080001f8();\n      FUN_0800192c();\n      FUN_08005814();\n      FUN_0800283a();\n      DAT_20000ea8 = '\\0';\n      DAT_20000eaa = 0;\n      if ((DAT_20000ee4 & 2) != 0) {\n        DAT_20000eb8 = 1;\n      }\n      if ((DAT_20000ea9 == '\\x01') && ((DAT_20000ee4 & 0x10) != 0)) {\n        DAT_20000ea9 = '\\x06';\n      }\n      if (DAT_20000ea9 == '\\x06') {\n        FUN_080041a0(2);\n      }\n      else {\n        DAT_20000ea9 = '\\0';\n        FUN_080039bc();\n      }\n    }\n    FUN_08003a74();\n    FUN_08003f34();\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08001ddc": "initialize_system_08001ddc"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_08005814",
                "FUN_0800583c",
                "FUN_08005238",
                "FUN_08008244",
                "FUN_08003f34",
                "FUN_080039bc",
                "FUN_0800283a",
                "FUN_080082ba",
                "FUN_080051b4",
                "FUN_0800192c",
                "FUN_0800b430",
                "FUN_080039a0",
                "FUN_08003a74",
                "FUN_080004ac",
                "FUN_08002f24",
                "FUN_080001f8",
                "FUN_080041a0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001e98": {
            "entrypoint": "0x08001e98",
            "current_name": "check_and_process_data_08001e98",
            "code": "\nvoid checkAndProcessData_08001e98(undefined4 arg1,undefined4 arg2,undefined4 arg3,undefined4 arg4,\n                 undefined arg5)\n\n{\n  int returnValue;\n  \n  if (DAT_20000ea9 != '\\a') {\n    do {\n      FUN_08003a74();\n      if (DAT_20000ea8 != '\\0') {\n        return;\n      }\n      returnValue = FUN_08002fac();\n    } while (returnValue != 0);\n    FUN_08003004(arg1,arg2,arg3,arg4,arg5);\n    if (DAT_20000ea9 == '\\0') {\n      DAT_20000ea9 = '\\x02';\n    }\n    if (DAT_20000eb8 != '\\0') {\n      FUN_0800585c();\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001e98": "check_and_process_data_08001e98",
                "param_1": "arg1",
                "param_2": "arg2",
                "param_3": "arg3",
                "param_4": "arg4",
                "param_5": "arg5",
                "iVar1": "returnValue"
            },
            "calling": [
                "FUN_080005b4",
                "FUN_08001f00",
                "FUN_080024c4"
            ],
            "called": [
                "FUN_0800585c",
                "FUN_08003004",
                "FUN_08002fac",
                "FUN_08003a74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001f00": {
            "entrypoint": "0x08001f00",
            "current_name": "calculate_checksum_08001f00",
            "code": "\nvoid calculate_checksum_08001f00(int input_address_1,undefined4 *input_addresses,int input_address_2,byte data_index_1,byte data_index_2,byte data_index_3\n                 ,undefined4 checksum_1,char checksum_flag,undefined4 checksum_2,char checksum_flag_2)\n\n{\n  undefined4 calculation_result_1;\n  undefined4 calculation_result_2;\n  int iteration_variable;\n  uint temp_result;\n  undefined8 checksum_result;\n  undefined8 temp_result_2;\n  uint temp_data [4];\n  undefined4 temp_variable_1;\n  undefined4 temp_variable_2;\n  undefined4 temp_variable_3;\n  undefined4 temp_variable_4;\n  undefined4 temp_variable_5;\n  undefined4 temp_variable_6;\n  ushort loop_iterations;\n  undefined4 checksum_3;\n  undefined4 checksum_4;\n  undefined4 temp_variable_7;\n  uint temp_variable_8;\n  undefined4 temp_variable_9;\n  undefined4 temp_variable_10;\n  char condition_flag;\n  ushort iteration_variable_2;\n  undefined4 checksum_5;\n  uint temp_variable_11;\n  uint temp_variable_12;\n  \n  temp_variable_10 = FUN_08008cdc(*(undefined4 *)((uint)data_index_1 * 4 + input_address_1),\n                          *(undefined4 *)((uint)data_index_1 * 4 + input_address_2));\n  temp_variable_9 = FUN_08008cdc(*(undefined4 *)((uint)data_index_2 * 4 + input_address_1),\n                          *(undefined4 *)((uint)data_index_2 * 4 + input_address_2));\n  temp_variable_8 = FUN_08008cd8(input_addresses[data_index_3],*(undefined4 *)((uint)data_index_3 * 4 + input_address_1));\n  temp_variable_12 = *(uint *)((uint)data_index_1 * 4 + input_address_2) ^ 0x80000000;\n  temp_variable_11 = *(uint *)((uint)data_index_2 * 4 + input_address_2) ^ 0x80000000;\n  temp_variable_7 = FUN_08008cd8(input_addresses[data_index_1],temp_variable_10);\n  checksum_4 = FUN_08008cd8(input_addresses[data_index_2],temp_variable_9);\n  calculation_result_1 = FUN_08008eec(temp_variable_12,checksum_4);\n  calculation_result_2 = FUN_08008eec(temp_variable_11,temp_variable_7);\n  calculation_result_1 = FUN_08008cd8(calculation_result_1,calculation_result_2);\n  checksum_result = FUN_08008590(calculation_result_1);\n  calculation_result_1 = FUN_08008eec(temp_variable_12,temp_variable_7);\n  calculation_result_2 = FUN_08008eec(temp_variable_11,checksum_4);\n  calculation_result_1 = FUN_08008cdc(calculation_result_1,calculation_result_2);\n  temp_result_2 = FUN_08008590(calculation_result_1);\n  checksum_result = thunk_FUN_08009990((int)checksum_result,(int)((ulonglong)checksum_result >> 0x20),(int)temp_result_2,\n                             (int)((ulonglong)temp_result_2 >> 0x20));\n  checksum_5 = FUN_08008c30((int)checksum_result,(int)((ulonglong)checksum_result >> 0x20));\n  if (checksum_flag_2 == '\\0') {\n    iteration_variable = FUN_0800923c(checksum_5,0);\n    if (iteration_variable != 0) {\n      checksum_result = FUN_08008590(checksum_5);\n      checksum_result = FUN_080082d4((int)checksum_result,(int)((ulonglong)checksum_result >> 0x20),0x54442d18,0x401921fb);\n      checksum_5 = FUN_08008c30((int)checksum_result,(int)((ulonglong)checksum_result >> 0x20));\n    }\n  }\n  else {\n    iteration_variable = FUN_08009250(checksum_5,0);\n    if (iteration_variable != 0) {\n      checksum_result = FUN_08008590(checksum_5);\n      checksum_result = FUN_080082d0((int)checksum_result,(int)((ulonglong)checksum_result >> 0x20),0x54442d18,0x401921fb);\n      checksum_5 = FUN_08008c30((int)checksum_result,(int)((ulonglong)checksum_result >> 0x20));\n    }\n  }\n  calculation_result_1 = FUN_08008eec(checksum_5,checksum_2);\n  checksum_result = FUN_08008590(calculation_result_1);\n  temp_result_2 = FUN_08008590(temp_variable_8 & 0x7fffffff);\n  checksum_result = FUN_0800981c((int)checksum_result,(int)((ulonglong)checksum_result >> 0x20),(int)temp_result_2,\n                       (int)((ulonglong)temp_result_2 >> 0x20));\n  checksum_3 = FUN_08008c30((int)checksum_result,(int)((ulonglong)checksum_result >> 0x20));\n  iteration_variable = FUN_08009214(checksum_3,0);\n  if (iteration_variable == 0) {\n    calculation_result_1 = FUN_08009054(checksum_3,DAT_20000ed8);\n    checksum_result = FUN_08008590(calculation_result_1);\n    checksum_result = FUN_080094c0((int)checksum_result,(int)((ulonglong)checksum_result >> 0x20));\n    loop_iterations = FUN_08008bf0((int)checksum_result,(int)((ulonglong)checksum_result >> 0x20));\n    if (checksum_flag != '\\0') {\n      calculation_result_1 = FUN_08008e44(loop_iterations);\n      checksum_1 = FUN_08008eec(checksum_1,calculation_result_1);\n    }\n    calculation_result_1 = FUN_08008e44(loop_iterations);\n    temp_variable_6 = FUN_08009054(checksum_5,calculation_result_1);\n    calculation_result_1 = FUN_08008e44(loop_iterations);\n    temp_variable_5 = FUN_08009054(temp_variable_8,calculation_result_1);\n    checksum_result = FUN_08008590(temp_variable_6);\n    checksum_result = FUN_08008640((int)checksum_result,(int)((ulonglong)checksum_result >> 0x20),0,0x3fe00000);\n    temp_result_2 = FUN_08008590(temp_variable_6);\n    checksum_result = FUN_08008640((int)checksum_result,(int)((ulonglong)checksum_result >> 0x20),(int)temp_result_2,\n                         (int)((ulonglong)temp_result_2 >> 0x20));\n    checksum_result = FUN_080082d0(0,0x3ff00000,(int)checksum_result,(int)((ulonglong)checksum_result >> 0x20));\n    temp_variable_4 = FUN_08008c30((int)checksum_result,(int)((ulonglong)checksum_result >> 0x20));\n    temp_variable_3 = temp_variable_6;\n    condition_flag = '\\0';\n    temp_data[data_index_3] = *(uint *)(input_address_1 + (uint)data_index_3 * 4);\n    for (iteration_variable_2 = 1; iteration_variable_2 < loop_iterations; iteration_variable_2 = iteration_variable_2 + 1) {\n      if ((int)condition_flag < (int)(uint)DAT_20000efa) {\n        calculation_result_1 = FUN_08008eec(temp_variable_12,temp_variable_3);\n        calculation_result_2 = FUN_08008eec(temp_variable_11,temp_variable_4);\n        temp_data[3] = FUN_08008cdc(calculation_result_1,calculation_result_2);\n        calculation_result_1 = FUN_08008eec(temp_variable_12,temp_variable_4);\n        calculation_result_2 = FUN_08008eec(temp_variable_11,temp_variable_3);\n        temp_variable_12 = FUN_08008cd8(calculation_result_1,calculation_result_2);\n        temp_variable_11 = temp_data[3];\n        condition_flag = condition_flag + '\\x01';\n      }\n      else {\n        calculation_result_1 = FUN_08008e44(iteration_variable_2);\n        calculation_result_1 = FUN_08008eec(calculation_result_1,temp_variable_6);\n        checksum_result = FUN_08008590(calculation_result_1);\n        checksum_result = FUN_08009410((int)checksum_result,(int)((ulonglong)checksum_result >> 0x20));\n        temp_variable_2 = FUN_08008c30((int)checksum_result,(int)((ulonglong)checksum_result >> 0x20));\n        calculation_result_1 = FUN_08008e44(iteration_variable_2);\n        calculation_result_1 = FUN_08008eec(calculation_result_1,temp_variable_6);\n        checksum_result = FUN_08008590(calculation_result_1);\n        checksum_result = FUN_080096e8((int)checksum_result,(int)((ulonglong)checksum_result >> 0x20));\n        temp_variable_1 = FUN_08008c30((int)checksum_result,(int)((ulonglong)checksum_result >> 0x20));\n        calculation_result_1 = FUN_08008eec(*(uint *)((uint)data_index_1 * 4 + input_address_2) ^ 0x80000000,temp_variable_2);\n        calculation_result_2 = FUN_08008eec(*(undefined4 *)((uint)data_index_2 * 4 + input_address_2),temp_variable_1);\n        temp_variable_12 = FUN_08008cdc(calculation_result_1,calculation_result_2);\n        calculation_result_1 = FUN_08008eec(*(uint *)((uint)data_index_1 * 4 + input_address_2) ^ 0x80000000,temp_variable_1);\n        calculation_result_2 = FUN_08008eec(*(undefined4 *)((uint)data_index_2 * 4 + input_address_2),temp_variable_2);\n        temp_variable_11 = FUN_08008cd8(calculation_result_1,calculation_result_2);\n        condition_flag = '\\0';\n      }\n      temp_result = FUN_08008cdc(temp_variable_10,temp_variable_12);\n      temp_data[data_index_1] = temp_result;\n      temp_result = FUN_08008cdc(temp_variable_9,temp_variable_11);\n      temp_data[data_index_2] = temp_result;\n      temp_result = FUN_08008cdc(temp_data[data_index_3],temp_variable_5);\n      temp_data[data_index_3] = temp_result;\n      FUN_08001e98(temp_data[0],temp_data[1],temp_data[2],checksum_1,checksum_flag);\n      if (DAT_20000ea8 != '\\0') {\n        return;\n      }\n    }\n    FUN_08001e98(*input_addresses,input_addresses[1],input_addresses[2],checksum_1,checksum_flag);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001f00": "calculate_checksum_08001f00",
                "param_1": "input_address_1",
                "param_2": "input_addresses",
                "param_3": "input_address_2",
                "param_4": "data_index_1",
                "param_5": "data_index_2",
                "param_6": "data_index_3",
                "param_7": "checksum_1",
                "param_8": "checksum_flag",
                "param_9": "checksum_2",
                "param_10": "checksum_flag_2",
                "uVar1": "calculation_result_1",
                "uVar2": "calculation_result_2",
                "iVar3": "iteration_variable",
                "uVar4": "temp_result",
                "uVar5": "checksum_result",
                "uVar6": "temp_result_2",
                "local_6c": "temp_data",
                "local_5c": "temp_variable_1",
                "local_58": "temp_variable_2",
                "local_54": "temp_variable_3",
                "local_50": "temp_variable_4",
                "local_4c": "temp_variable_5",
                "local_48": "temp_variable_6",
                "local_42": "loop_iterations",
                "local_40": "checksum_3",
                "local_3c": "checksum_4",
                "local_38": "temp_variable_7",
                "local_34": "temp_variable_8",
                "local_30": "temp_variable_9",
                "local_2c": "temp_variable_10",
                "local_27": "condition_flag",
                "local_26": "iteration_variable_2",
                "local_24": "checksum_5",
                "local_20": "temp_variable_11",
                "local_1c": "temp_variable_12"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08008cd8",
                "FUN_08008e44",
                "FUN_080096e8",
                "FUN_08009054",
                "FUN_08009214",
                "FUN_0800923c",
                "FUN_08008640",
                "FUN_08008bf0",
                "FUN_08008590",
                "FUN_080082d0",
                "FUN_080094c0",
                "FUN_08001e98",
                "FUN_08009410",
                "FUN_0800981c",
                "FUN_08008eec",
                "thunk_FUN_08009990",
                "FUN_08009250",
                "FUN_08008cdc",
                "FUN_08008c30",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002408": {
            "entrypoint": "0x08002408",
            "current_name": "process_data_08002408",
            "code": "\nvoid processData_08002408(undefined4 inputData)\n\n{\n  undefined2 result1;\n  undefined4 value1;\n  undefined4 value2;\n  undefined8 result2;\n  ushort loopCounter;\n  \n  value1 = FUN_08008eec(inputData,0x41a00000);\n  result2 = FUN_08008590(value1);\n  result2 = FUN_080094c0((int)result2,(int)((ulonglong)result2 >> 0x20));\n  loopCounter = FUN_08008bf0((int)result2,(int)((ulonglong)result2 >> 0x20));\n  FUN_08002fd4();\n  value1 = FUN_08008eec(inputData,0x447a0000);\n  value2 = FUN_08008e44((uint)loopCounter * 0x32);\n  value1 = FUN_08008cd8(value1,value2);\n  result2 = FUN_08008590(value1);\n  result2 = FUN_080094c0((int)result2,(int)((ulonglong)result2 >> 0x20));\n  result1 = FUN_08008bf0((int)result2,(int)((ulonglong)result2 >> 0x20));\n  FUNC_08002814(result1);\n  while ((loopCounter != 0 && (FUN_08003a74(), DAT_20000ea8 == '\\0'))) {\n    FUN_080002a0(0x32);\n    loopCounter = loopCounter - 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002408": "process_data_08002408",
                "param_1": "inputData",
                "uVar1": "result1",
                "uVar2": "value1",
                "uVar3": "value2",
                "uVar4": "result2",
                "local_12": "loopCounter"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08008e44",
                "FUN_080094c0",
                "FUN_08008cd8",
                "FUN_080002a0",
                "FUN_08003a74",
                "FUN_08002814",
                "FUN_08008eec",
                "FUN_08008bf0",
                "FUN_08002fd4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080024c4": {
            "entrypoint": "0x080024c4",
            "current_name": "initialize_function_080024c4",
            "code": "\nvoid initializeFunction_080024c4(void)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  char isFeature1Enabled;\n  char isFeature2Enabled;\n  char isFeature3Enabled;\n  \n  DAT_20000ea9 = 5;\n  DAT_20000e4c = 0;\n  FUN_08001d4c();\n  FUN_08003a74();\n  if (DAT_20000ea8 == '\\0') {\n    FUN_0800b430(&DAT_20000eac,0,0xc);\n    FUN_0800283a();\n    DAT_20000ea9 = 0;\n    if ((DAT_20000ee6 & 0x20) == 0) {\n      isFeature3Enabled = -1;\n    }\n    else {\n      isFeature3Enabled = '\\x01';\n    }\n    if ((DAT_20000ee6 & 0x80) == 0) {\n      isFeature2Enabled = -1;\n    }\n    else {\n      isFeature2Enabled = '\\x01';\n    }\n    if ((DAT_20000ee6 & 0x200) == 0) {\n      isFeature1Enabled = -1;\n    }\n    else {\n      isFeature1Enabled = '\\x01';\n    }\n    uVar1 = FUN_08008e44((int)isFeature3Enabled);\n    uVar1 = FUN_08008eec(uVar1,DAT_20000ef4);\n    uVar2 = FUN_08008e44((int)isFeature2Enabled);\n    uVar2 = FUN_08008eec(uVar2,DAT_20000ef4);\n    uVar3 = FUN_08008e44((int)isFeature1Enabled);\n    uVar3 = FUN_08008eec(uVar3,DAT_20000ef4);\n    FUN_08001e98(uVar1,uVar2,uVar3,DAT_20000eec,0);\n    FUN_0800585c();\n    FUN_08002fd4();\n    FUN_0800283a();\n    if ((DAT_20000ee4 & 8) != 0) {\n      DAT_20000e4c = 1;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080024c4": "initialize_function_080024c4",
                "local_13": "isFeature1Enabled",
                "local_12": "isFeature2Enabled",
                "local_11": "isFeature3Enabled"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_0800b430",
                "FUN_0800585c",
                "FUN_08008e44",
                "FUN_08001e98",
                "FUN_08003a74",
                "FUN_08008eec",
                "FUN_08001d4c",
                "FUN_0800283a",
                "FUN_08002fd4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080025e8": {
            "entrypoint": "0x080025e8",
            "current_name": "handle_data_processing_080025e8",
            "code": "\nvoid handleDataProcessing_080025e8(void)\n\n{\n  if ((DAT_20000eaa & 0x10) == 0) {\n    DAT_20000eaa = DAT_20000eaa | 0x10;\n    FUN_08005250();\n    FUN_08000210();\n    if (DAT_20000ea9 - 3 < 3) {\n      DAT_20000eaa = DAT_20000eaa | 0x20;\n      FUN_080057e4();\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080025e8": "handle_data_processing_080025e8"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080005b4",
                "FUN_0800195c",
                "FUN_08005900",
                "FUN_08003a18"
            ],
            "called": [
                "FUN_08005250",
                "FUN_08000210",
                "FUN_080057e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002638": {
            "entrypoint": "0x08002638",
            "current_name": "parse_integer_08002638",
            "code": "\nundefined4 parseInteger_08002638(int startAddress,byte *buffer,uint *result)\n\n{\n  byte digit;\n  bool negative;\n  bool exponentFlag;\n  int error;\n  char *currentChar;\n  char *nextChar;\n  undefined4 returnValue;\n  undefined8 tempValue;\n  uint tempVar1;\n  byte digitCount;\n  char exponent;\n  int integer;\n  char firstChar;\n  char *charPointer;\n  \n  nextChar = (char *)(startAddress + (uint)*buffer);\n  currentChar = nextChar + 1;\n  firstChar = *nextChar;\n  negative = false;\n  if (firstChar == '-') {\n    negative = true;\n    firstChar = *currentChar;\n    charPointer = nextChar + 2;\n  }\n  else {\n    charPointer = currentChar;\n    if (firstChar == '+') {\n      charPointer = nextChar + 2;\n      firstChar = *currentChar;\n    }\n  }\n  integer = 0;\n  exponent = '\\0';\n  digitCount = 0;\n  exponentFlag = false;\n  do {\n    digit = firstChar - 0x30;\n    if (digit < 10) {\n      digitCount = digitCount + 1;\n      if (digitCount < 9) {\n        if (exponentFlag) {\n          exponent = exponent + -1;\n        }\n        integer = (uint)digit + integer * 10;\n      }\n      else if (!exponentFlag) {\n        exponent = exponent + '\\x01';\n      }\n    }\n    else {\n      if ((digit != 0xfe) || (exponentFlag)) {\n        if (digitCount == 0) {\n          returnValue = 0;\n        }\n        else {\n          tempVar1 = FUN_08008e3c(integer);\n          error = FUN_08009214(tempVar1,0);\n          if (error == 0) {\n            for (; exponent < -1; exponent = exponent + '\\x02') {\n              tempValue = FUN_08008590(tempVar1);\n              tempValue = FUN_08008640((int)tempValue,(int)((ulonglong)tempValue >> 0x20),0x47ae147b,0x3f847ae1)\n              ;\n              tempVar1 = FUN_08008c30((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n            }\n            if (exponent < '\\0') {\n              tempValue = FUN_08008590(tempVar1);\n              tempValue = FUN_08008640((int)tempValue,(int)((ulonglong)tempValue >> 0x20),0x9999999a,0x3fb99999)\n              ;\n              tempVar1 = FUN_08008c30((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n            }\n            else {\n              for (; '\\0' < exponent; exponent = exponent + -1) {\n                tempVar1 = FUN_08008eec(tempVar1,0x41200000);\n              }\n            }\n          }\n          if (negative) {\n            *result = tempVar1 ^ 0x80000000;\n          }\n          else {\n            *result = tempVar1;\n          }\n          *buffer = ((char)charPointer - (char)startAddress) - 1;\n          returnValue = 1;\n        }\n        return returnValue;\n      }\n      exponentFlag = true;\n    }\n    firstChar = *charPointer;\n    charPointer = charPointer + 1;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08002638": "parse_integer_08002638",
                "param_1": "startAddress",
                "param_2": "buffer",
                "param_3": "result",
                "bVar1": "digit",
                "bVar2": "negative",
                "bVar3": "exponentFlag",
                "iVar4": "error",
                "pcVar5": "currentChar",
                "pcVar6": "nextChar",
                "uVar7": "returnValue",
                "uVar8": "tempValue",
                "local_1c": "tempVar1",
                "local_16": "digitCount",
                "local_15": "exponent",
                "local_14": "integer",
                "local_d": "firstChar",
                "local_c": "charPointer"
            },
            "calling": [
                "FUN_0800184c",
                "FUN_08003b98"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08009214",
                "FUN_08008e3c",
                "FUN_08008eec",
                "FUN_08008640",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002814": {
            "entrypoint": "0x08002814",
            "current_name": "FUNC_08002814",
            "code": "\nvoid FUNC_08002814(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002814": "FUNC_08002814"
            },
            "calling": [
                "FUN_08001d4c",
                "FUN_08002408",
                "FUN_08004148"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002828": {
            "entrypoint": "0x08002828",
            "current_name": "FUNC_08002828",
            "code": "\nvoid FUNC_08002828(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002828": "FUNC_08002828"
            },
            "calling": [
                "FUN_08001994"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800283a": {
            "entrypoint": "0x0800283a",
            "current_name": "initialize_data_0800283a",
            "code": "\nvoid initializeData_0800283a(void)\n\n{\n  FUN_080035ec(DAT_20000eac,DAT_20000eb0,DAT_20000eb4);\n  FUN_080004fc(DAT_20000eac,DAT_20000eb0,DAT_20000eb4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800283a": "initialize_data_0800283a"
            },
            "calling": [
                "FUN_08001ddc",
                "FUN_080024c4"
            ],
            "called": [
                "FUN_080035ec",
                "FUN_080004fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002870": {
            "entrypoint": "0x08002870",
            "current_name": "increment_and_reset_08002870",
            "code": "\nchar incrementAndReset_08002870(char input)\n\n{\n  char result;\n  \n  result = input + '\\x01';\n  if (result == '\\x12') {\n    result = '\\0';\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002870": "increment_and_reset_08002870",
                "param_1": "input",
                "local_9": "result"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08002ef0",
                "FUN_08002e08",
                "FUN_08002ba8",
                "FUN_08002f40"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002896": {
            "entrypoint": "0x08002896",
            "current_name": "adjust_char_08002896",
            "code": "\nchar adjust_char_08002896(char input)\n\n{\n  char adjusted_char;\n  \n  adjusted_char = input;\n  if (input == '\\0') {\n    adjusted_char = '\\x12';\n  }\n  return adjusted_char + -1;\n}\n\n",
            "renaming": {
                "FUN_08002896": "adjust_char_08002896",
                "param_1": "input",
                "local_9": "adjusted_char"
            },
            "calling": [
                "FUN_08002a94"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080028bc": {
            "entrypoint": "0x080028bc",
            "current_name": "calculate_result_080028bc",
            "code": "\nundefined4 calculateResult_080028bc(undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  \n  result1 = FUN_08008eec(input2,input2);\n  result2 = FUN_08008eec(input1,input1);\n  result1 = FUN_08008cd8(result1,result2);\n  result2 = FUN_08008cdc(input3,input3);\n  result1 = FUN_08009054(result1,result2);\n  return result1;\n}\n\n",
            "renaming": {
                "FUN_080028bc": "calculate_result_080028bc",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "uVar1": "result1",
                "uVar2": "result2"
            },
            "calling": [
                "FUN_08002c18"
            ],
            "called": [
                "FUN_08009054",
                "FUN_08008cd8",
                "FUN_08008eec",
                "FUN_08008cdc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002908": {
            "entrypoint": "0x08002908",
            "current_name": "calculate_result_08002908",
            "code": "\nundefined4 calculate_result_08002908(undefined4 input_1,undefined4 input_2,undefined4 input_3,undefined4 input_4)\n\n{\n  undefined4 temp_1;\n  undefined4 temp_2;\n  \n  temp_1 = FUN_08008cdc(input_3,input_3);\n  temp_1 = FUN_08008eec(temp_1,input_4);\n  temp_2 = FUN_08008eec(input_1,input_1);\n  temp_1 = FUN_08008cd8(temp_1,temp_2);\n  temp_2 = FUN_08008eec(input_2,input_2);\n  temp_1 = FUN_08008cdc(temp_1,temp_2);\n  temp_2 = FUN_08008eec(input_3,0x40800000);\n  temp_1 = FUN_08009054(temp_1,temp_2);\n  return temp_1;\n}\n\n",
            "renaming": {
                "FUN_08002908": "calculate_result_08002908",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "temp_1",
                "uVar2": "temp_2"
            },
            "calling": [
                "FUN_08002c18"
            ],
            "called": [
                "FUN_08008cd8",
                "FUN_08009054",
                "FUN_08008eec",
                "FUN_08008cdc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002978": {
            "entrypoint": "0x08002978",
            "current_name": "calculate_result_08002978",
            "code": "\nundefined4 calculate_result_08002978(undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  undefined8 result3;\n  \n  result1 = FUN_08008eec(input2,input2);\n  result2 = FUN_08008cdc(input1,input1);\n  result2 = FUN_08008eec(result2,input3);\n  result1 = FUN_08008cd8(result1,result2);\n  result3 = FUN_08008590(result1);\n  result3 = FUN_080098d0((int)result3,(int)((ulonglong)result3 >> 0x20));\n  result1 = FUN_08008c30((int)result3,(int)((ulonglong)result3 >> 0x20));\n  return result1;\n}\n\n",
            "renaming": {
                "FUN_08002978": "calculate_result_08002978",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "result3"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08002afc",
                "FUN_080029d8"
            ],
            "called": [
                "FUN_08008590",
                "FUN_080098d0",
                "FUN_08008cd8",
                "FUN_08008eec",
                "FUN_08008cdc",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080029d8": {
            "entrypoint": "0x080029d8",
            "current_name": "validate_and_process_params_080029d8",
            "code": "\nvoid validateAndProcessParams_080029d8(undefined4 arg1,int address1,int address2)\n\n{\n  int result;\n  undefined4 newValue1;\n  undefined4 newValue2;\n  \n  if (((address1 != 0) && (address2 != 0)) &&\n     (result = FUN_08009214(*(undefined4 *)(address1 + 0x18),*(undefined4 *)(address1 + 0x1c)),\n     result == 0)) {\n    if ((*(char *)(address1 + 0x25) == '\\0') &&\n       (result = FUN_08009264(*(undefined4 *)(address1 + 0x1c),*(undefined4 *)(address2 + 0x18)),\n       result != 0)) {\n      newValue2 = *(undefined4 *)(address1 + 0x1c);\n      newValue1 = FUN_08002978(DAT_20000edc ^ 0x80000000,*(undefined4 *)(address2 + 0x18),\n                           *(undefined4 *)(address1 + 0x20));\n      result = FUN_08009228(newValue2,newValue1);\n      if (result == 0) {\n        newValue1 = FUN_08002978(DAT_20000edc ^ 0x80000000,*(undefined4 *)(address2 + 0x18),\n                             *(undefined4 *)(address1 + 0x20));\n      }\n      else {\n        newValue1 = *(undefined4 *)(address1 + 0x1c);\n      }\n      *(undefined4 *)(address1 + 0x18) = newValue1;\n    }\n    else {\n      *(undefined4 *)(address1 + 0x18) = *(undefined4 *)(address1 + 0x1c);\n    }\n    *(undefined *)(address1 + 0x24) = 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080029d8": "validate_and_process_params_080029d8",
                "param_1": "arg1",
                "param_2": "address1",
                "param_3": "address2",
                "iVar1": "result",
                "uVar2": "newValue1",
                "uVar3": "newValue2"
            },
            "calling": [
                "FUN_08002a94"
            ],
            "called": [
                "FUN_08009228",
                "FUN_08009214",
                "FUN_08009264",
                "FUN_08002978"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a94": {
            "entrypoint": "0x08002a94",
            "current_name": "process_data_08002a94",
            "code": "\nvoid processData_08002a94(void)\n\n{\n  undefined *tempPtr;\n  undefined *previousPtr;\n  undefined *currentPtr;\n  byte inputByte;\n  \n  inputByte = DAT_20000cf0;\n  previousPtr = (undefined *)0x0;\n  currentPtr = (undefined *)0x0;\n  while (tempPtr = currentPtr, inputByte != DAT_20000cf1) {\n    inputByte = FUN_08002896(inputByte);\n    currentPtr = previousPtr;\n    FUN_080029d8(&DAT_20000870 + (uint)inputByte * 0x40,previousPtr,tempPtr);\n    previousPtr = &DAT_20000870 + (uint)inputByte * 0x40;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002a94": "process_data_08002a94",
                "local_9": "inputByte",
                "local_18": "previousPtr",
                "local_14": "currentPtr",
                "puVar1": "tempPtr"
            },
            "calling": [
                "FUN_08002edc"
            ],
            "called": [
                "FUN_08002896",
                "FUN_080029d8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002afc": {
            "entrypoint": "0x08002afc",
            "current_name": "check_and_update_parameters_08002afc",
            "code": "\nvoid checkAndUpdateParameters_08002afc(int inputParam1,int inputParam2)\n\n{\n  int result;\n  undefined4 updatedValue1;\n  undefined4 updatedValue2;\n  \n  if (((inputParam1 != 0) && (*(char *)(inputParam1 + 0x25) == '\\0')) &&\n     (result = FUN_08009228(*(undefined4 *)(inputParam1 + 0x18),*(undefined4 *)(inputParam2 + 0x18)),\n     result != 0)) {\n    updatedValue2 = *(undefined4 *)(inputParam2 + 0x18);\n    updatedValue1 = FUN_08002978(DAT_20000edc ^ 0x80000000,*(undefined4 *)(inputParam1 + 0x18),\n                         *(undefined4 *)(inputParam1 + 0x20));\n    result = FUN_08009228(updatedValue2,updatedValue1);\n    if (result == 0) {\n      updatedValue1 = FUN_08002978(DAT_20000edc ^ 0x80000000,*(undefined4 *)(inputParam1 + 0x18),\n                           *(undefined4 *)(inputParam1 + 0x20));\n    }\n    else {\n      updatedValue1 = *(undefined4 *)(inputParam2 + 0x18);\n    }\n    result = FUN_08009214(updatedValue1,*(undefined4 *)(inputParam2 + 0x18));\n    if (result == 0) {\n      *(undefined4 *)(inputParam2 + 0x18) = updatedValue1;\n      *(undefined *)(inputParam2 + 0x24) = 1;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002afc": "check_and_update_parameters_08002afc",
                "param_1": "inputParam1",
                "param_2": "inputParam2",
                "iVar1": "result",
                "uVar2": "updatedValue1",
                "uVar3": "updatedValue2"
            },
            "calling": [
                "FUN_08002ba8"
            ],
            "called": [
                "FUN_08009228",
                "FUN_08009214",
                "FUN_08002978"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ba8": {
            "entrypoint": "0x08002ba8",
            "current_name": "process_data_08002ba8",
            "code": "\nvoid processData_08002ba8(void)\n\n{\n  uint index;\n  undefined *currentPtr;\n  undefined *previousPtr;\n  undefined *ptr1;\n  undefined *ptr2;\n  byte byteVal;\n  \n  ptr1 = (undefined *)0x0;\n  ptr2 = (undefined *)0x0;\n  byteVal = DAT_20000cf1;\n  previousPtr = (undefined *)0x0;\n  while (currentPtr = ptr1, byteVal != DAT_20000cf0) {\n    ptr1 = ptr2;\n    index = (uint)byteVal;\n    FUN_08002afc(currentPtr,ptr2,&DAT_20000870 + index * 0x40);\n    byteVal = FUN_08002870(byteVal);\n    previousPtr = currentPtr;\n    ptr2 = &DAT_20000870 + index * 0x40;\n  }\n  FUN_08002afc(ptr1,ptr2,0,ptr1,previousPtr);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ba8": "process_data_08002ba8",
                "puVar2": "currentPtr",
                "puVar3": "previousPtr",
                "local_14": "ptr1",
                "local_10": "ptr2",
                "local_9": "byteVal",
                "uVar1": "index"
            },
            "calling": [
                "FUN_08002edc"
            ],
            "called": [
                "FUN_08002afc",
                "FUN_08002870"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c18": {
            "entrypoint": "0x08002c18",
            "current_name": "calculate_result_08002c18",
            "code": "\nvoid calculate_result_08002c18(int input_value,undefined4 calculation_constant_1,undefined4 calculation_constant_2)\n\n{\n  undefined4 result_1;\n  int temp_value;\n  undefined4 result_2;\n  undefined4 result_3;\n  undefined4 result_4;\n  uint result_5;\n  undefined8 result_6;\n  int negative_adjustment;\n  uint positive_adjustment;\n  \n  result_1 = FUN_08008e3c(*(undefined4 *)(input_value + 0x3c));\n  result_1 = FUN_08008eec(result_1,calculation_constant_1);\n  result_6 = FUN_08008590(result_1);\n  result_6 = FUN_08009318((int)result_6,(int)((ulonglong)result_6 >> 0x20));\n  result_1 = FUN_08008bf0((int)result_6,(int)((ulonglong)result_6 >> 0x20));\n  *(undefined4 *)(input_value + 0x28) = result_1;\n  result_1 = FUN_08008e3c(*(undefined4 *)(input_value + 0x3c));\n  result_1 = FUN_08008eec(result_1,calculation_constant_2);\n  result_6 = FUN_08008590(result_1);\n  result_6 = FUN_08009318((int)result_6,(int)((ulonglong)result_6 >> 0x20));\n  result_1 = FUN_08008bf0((int)result_6,(int)((ulonglong)result_6 >> 0x20));\n  *(undefined4 *)(input_value + 0x2c) = result_1;\n  result_6 = FUN_0800856c(*(int *)(input_value + 0x30) * 0x32);\n  result_6 = FUN_08008640((int)result_6,(int)((ulonglong)result_6 >> 0x20),0,0x404e0000);\n  temp_value = FUN_08008ba0((int)result_6,(int)((ulonglong)result_6 >> 0x20));\n  result_1 = FUN_08008e3c(*(undefined4 *)(input_value + 0x28));\n  result_2 = FUN_08008e3c(*(undefined4 *)(input_value + 0x3c));\n  result_3 = FUN_08008e44(temp_value);\n  result_1 = FUN_080028bc(result_1,result_2,result_3);\n  result_6 = FUN_08008590(result_1);\n  result_6 = FUN_08009318((int)result_6,(int)((ulonglong)result_6 >> 0x20));\n  positive_adjustment = FUN_08008ba0((int)result_6,(int)((ulonglong)result_6 >> 0x20));\n  result_1 = FUN_08008e3c(*(undefined4 *)(input_value + 0x3c));\n  result_2 = FUN_08008e3c(*(undefined4 *)(input_value + 0x2c));\n  result_3 = FUN_08008e44(-temp_value);\n  result_1 = FUN_080028bc(result_1,result_2,result_3);\n  result_6 = FUN_08008590(result_1);\n  result_6 = FUN_080094c0((int)result_6,(int)((ulonglong)result_6 >> 0x20));\n  negative_adjustment = FUN_08008ba0((int)result_6,(int)((ulonglong)result_6 >> 0x20));\n  negative_adjustment = (*(int *)(input_value + 0x10) - positive_adjustment) - negative_adjustment;\n  if (negative_adjustment < 0) {\n    result_1 = FUN_08008e3c(*(undefined4 *)(input_value + 0x28));\n    result_2 = FUN_08008e3c(*(undefined4 *)(input_value + 0x2c));\n    result_3 = FUN_08008e44(temp_value);\n    result_4 = FUN_08008e44(*(undefined4 *)(input_value + 0x10));\n    result_1 = FUN_08002908(result_1,result_2,result_3,result_4);\n    result_6 = FUN_08008590(result_1);\n    result_6 = FUN_08009318((int)result_6,(int)((ulonglong)result_6 >> 0x20));\n    result_5 = FUN_08008ba0((int)result_6,(int)((ulonglong)result_6 >> 0x20));\n    result_5 = result_5 & ~((int)result_5 >> 0x1f);\n    positive_adjustment = *(uint *)(input_value + 0x10);\n    if ((int)result_5 <= (int)*(uint *)(input_value + 0x10)) {\n      positive_adjustment = result_5;\n    }\n    negative_adjustment = 0;\n  }\n  *(uint *)(input_value + 0x34) = positive_adjustment;\n  *(uint *)(input_value + 0x38) = negative_adjustment + positive_adjustment;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c18": "calculate_result_08002c18",
                "param_1": "input_value",
                "param_2": "calculation_constant_1",
                "param_3": "calculation_constant_2",
                "uVar1": "result_1",
                "iVar2": "temp_value",
                "uVar3": "result_2",
                "uVar4": "result_3",
                "uVar5": "result_4",
                "uVar6": "result_5",
                "uVar7": "result_6",
                "local_20": "negative_adjustment",
                "local_1c": "positive_adjustment"
            },
            "calling": [
                "FUN_08002e08"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08002908",
                "FUN_08008e44",
                "FUN_0800856c",
                "FUN_080094c0",
                "FUN_08008ba0",
                "FUN_08009318",
                "FUN_08008e3c",
                "FUN_08008eec",
                "FUN_080028bc",
                "FUN_08008640",
                "FUN_08008bf0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002e08": {
            "entrypoint": "0x08002e08",
            "current_name": "process_data_08002e08",
            "code": "\nvoid processData_08002e08(void)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  int index;\n  undefined *dataPointer;\n  byte currentByte;\n  \n  dataPointer = (undefined *)0x0;\n  currentByte = DAT_20000cf1;\n  while (currentByte != DAT_20000cf0) {\n    index = (uint)currentByte * 0x40;\n    if ((dataPointer != (undefined *)0x0) &&\n       ((dataPointer[0x24] != '\\0' || ((&DAT_20000894)[index] != '\\0')))) {\n      result1 = FUN_08009054(*(undefined4 *)(dataPointer + 0x18),*(undefined4 *)(dataPointer + 0x14));\n      result2 = FUN_08009054(*(undefined4 *)(&DAT_20000888 + index),*(undefined4 *)(dataPointer + 0x14));\n      FUN_08002c18(dataPointer,result1,result2);\n      dataPointer[0x24] = 0;\n    }\n    currentByte = FUN_08002870(currentByte);\n    dataPointer = &DAT_20000870 + index;\n  }\n  result1 = FUN_08009054(*(undefined4 *)(dataPointer + 0x18),*(undefined4 *)(dataPointer + 0x14));\n  result2 = FUN_08009054(0,*(undefined4 *)(dataPointer + 0x14));\n  FUN_08002c18(dataPointer,result1,result2);\n  dataPointer[0x24] = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002e08": "process_data_08002e08",
                "local_18": "dataPointer",
                "local_11": "currentByte",
                "iVar3": "index",
                "uVar1": "result1",
                "uVar2": "result2"
            },
            "calling": [
                "FUN_08002edc"
            ],
            "called": [
                "FUN_08009054",
                "FUN_08002870",
                "FUN_08002c18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002edc": {
            "entrypoint": "0x08002edc",
            "current_name": "initialize_system_08002edc",
            "code": "\nvoid initialize_system_08002edc(void)\n\n{\n  FUN_08002a94();\n  FUN_08002ba8();\n  FUN_08002e08();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002edc": "initialize_system_08002edc"
            },
            "calling": [
                "FUN_08003618",
                "FUN_08003004"
            ],
            "called": [
                "FUN_08002e08",
                "FUN_08002a94",
                "FUN_08002ba8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ef0": {
            "entrypoint": "0x08002ef0",
            "current_name": "update_data_08002ef0",
            "code": "\nvoid updateData_08002ef0(void)\n\n{\n  DAT_20000cf1 = DAT_20000cf0;\n  DAT_20000cf2 = FUN_08002870(DAT_20000cf0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ef0": "update_data_08002ef0"
            },
            "calling": [
                "FUN_08002f24"
            ],
            "called": [
                "FUN_08002870"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f24": {
            "entrypoint": "0x08002f24",
            "current_name": "initialize_memory_08002f24",
            "code": "\nvoid initializeMemory_08002f24(void)\n\n{\n  FUN_08002ef0();\n  FUN_0800b430(&DAT_20000cf4,0,0x1c);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f24": "initialize_memory_08002f24"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_0800b430",
                "FUN_08002ef0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f40": {
            "entrypoint": "0x08002f40",
            "current_name": "update_data_if_needed_08002f40",
            "code": "\nvoid updateDataIfNeeded_08002f40(void)\n\n{\n  if (DAT_20000cf0 != DAT_20000cf1) {\n    DAT_20000cf1 = FUN_08002870(DAT_20000cf1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f40": "update_data_if_needed_08002f40"
            },
            "calling": [
                "FUN_080053a0"
            ],
            "called": [
                "FUN_08002870"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f74": {
            "entrypoint": "0x08002f74",
            "current_name": "get_valid_data_pointer_08002f74",
            "code": "\nundefined * getValidDataPointer_08002f74(void)\n\n{\n  undefined *validDataPointer;\n  \n  if (DAT_20000cf0 == DAT_20000cf1) {\n    validDataPointer = (undefined *)0x0;\n  }\n  else {\n    validDataPointer = &DAT_20000870 + (uint)DAT_20000cf1 * 0x40;\n  }\n  return validDataPointer;\n}\n\n",
            "renaming": {
                "FUN_08002f74": "get_valid_data_pointer_08002f74",
                "puVar1": "validDataPointer"
            },
            "calling": [
                "FUN_080053a0",
                "FUN_08002fd4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fac": {
            "entrypoint": "0x08002fac",
            "current_name": "are_values_equal_08002fac",
            "code": "\nbool areValuesEqual_08002fac(void)\n\n{\n  return DAT_20000cf1 == DAT_20000cf2;\n}\n\n",
            "renaming": {
                "FUN_08002fac": "are_values_equal_08002fac"
            },
            "calling": [
                "FUN_08001e98"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fd4": {
            "entrypoint": "0x08002fd4",
            "current_name": "process_data_08002fd4",
            "code": "\nvoid processData_08002fd4(void)\n\n{\n  int result;\n  \n  while ((result = FUN_08002f74(), result != 0 || (DAT_20000ea9 == '\\x03'))) {\n    FUN_08003a74();\n    if (DAT_20000ea8 != '\\0') {\n      return;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002fd4": "process_data_08002fd4",
                "iVar1": "result"
            },
            "calling": [
                "FUN_0800525c",
                "FUN_08000220",
                "FUN_080005b4",
                "FUN_08002408",
                "FUN_080024c4"
            ],
            "called": [
                "FUN_08003a74",
                "FUN_08002f74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003004": {
            "entrypoint": "0x08003004",
            "current_name": "calculate_metrics_08003004",
            "code": "\nvoid calculateMetrics_08003004(undefined4 input_1,undefined4 input_2,undefined4 input_3,undefined4 input_4,\n                 char flag)\n\n{\n  undefined4 result_1;\n  int metric_1;\n  int metric_2;\n  int metric_3;\n  undefined4 result_2;\n  undefined4 result_3;\n  undefined4 result_4;\n  undefined4 result_5;\n  uint maxMetric;\n  int metricIndex;\n  ushort *metricsArray;\n  int absDiff;\n  uint minMetric;\n  undefined8 result_6;\n  undefined8 result_7;\n  undefined8 result_8;\n  undefined4 result_9;\n  undefined4 result_10;\n  \n  metricIndex = (uint)DAT_20000cf0 * 0x40;\n  metricsArray = (ushort *)(&DAT_20000870 + metricIndex);\n  result_1 = FUN_08008eec(DAT_20000ebc,input_1);\n  result_6 = FUN_08008590(result_1);\n  metric_1 = FUN_080095b8((int)result_6,(int)((ulonglong)result_6 >> 0x20));\n  result_1 = FUN_08008eec(DAT_20000ec0,input_2);\n  result_6 = FUN_08008590(result_1);\n  metric_2 = FUN_080095b8((int)result_6,(int)((ulonglong)result_6 >> 0x20));\n  result_1 = FUN_08008eec(DAT_20000ec4,input_3);\n  result_6 = FUN_08008590(result_1);\n  metric_3 = FUN_080095b8((int)result_6,(int)((ulonglong)result_6 >> 0x20));\n  *metricsArray = 0;\n  if (metric_1 < DAT_20000cf4) {\n    *metricsArray = *metricsArray | 0x20;\n  }\n  if (metric_2 < DAT_20000cf8) {\n    *metricsArray = *metricsArray | 0x880;\n  }\n  if (metric_3 < DAT_20000cfc) {\n    *metricsArray = *metricsArray | 0x200;\n  }\n  absDiff = metric_1 - DAT_20000cf4;\n  if (absDiff < 0) {\n    absDiff = -absDiff;\n  }\n  *(int *)(&DAT_20000874 + metricIndex) = absDiff;\n  absDiff = metric_2 - DAT_20000cf8;\n  if (absDiff < 0) {\n    absDiff = -absDiff;\n  }\n  *(int *)(&DAT_20000878 + metricIndex) = absDiff;\n  absDiff = metric_3 - DAT_20000cfc;\n  if (absDiff < 0) {\n    absDiff = -absDiff;\n  }\n  *(int *)(&DAT_2000087c + metricIndex) = absDiff;\n  maxMetric = *(uint *)(&DAT_2000087c + metricIndex);\n  if (*(uint *)(&DAT_2000087c + metricIndex) < *(uint *)(&DAT_20000878 + metricIndex)) {\n    maxMetric = *(uint *)(&DAT_20000878 + metricIndex);\n  }\n  minMetric = *(uint *)(&DAT_20000874 + metricIndex);\n  if (*(uint *)(&DAT_20000874 + metricIndex) < maxMetric) {\n    minMetric = maxMetric;\n  }\n  *(uint *)(&DAT_20000880 + metricIndex) = minMetric;\n  if (*(int *)(&DAT_20000880 + metricIndex) != 0) {\n    result_1 = FUN_08008e44(metric_1 - DAT_20000cf4);\n    result_1 = FUN_08009054(result_1,DAT_20000ebc);\n    result_2 = FUN_08008e44(metric_2 - DAT_20000cf8);\n    result_2 = FUN_08009054(result_2,DAT_20000ec0);\n    result_3 = FUN_08008e44(metric_3 - DAT_20000cfc);\n    result_3 = FUN_08009054(result_3,DAT_20000ec4);\n    result_4 = FUN_08008eec(result_1,result_1);\n    result_5 = FUN_08008eec(result_2,result_2);\n    result_4 = FUN_08008cdc(result_4,result_5);\n    result_5 = FUN_08008eec(result_3,result_3);\n    result_4 = FUN_08008cdc(result_4,result_5);\n    result_6 = FUN_08008590(result_4);\n    result_6 = FUN_080098d0((int)result_6,(int)((ulonglong)result_6 >> 0x20));\n    result_4 = FUN_08008c30((int)result_6,(int)((ulonglong)result_6 >> 0x20));\n    *(undefined4 *)(&DAT_20000890 + metricIndex) = result_4;\n    result_4 = FUN_08009054(0x3f800000,*(undefined4 *)(&DAT_20000890 + metricIndex));\n    if (flag == '\\0') {\n      result_10 = FUN_08008eec(input_4,result_4);\n    }\n    else {\n      result_10 = FUN_08009054(0x3f800000,input_4);\n    }\n    result_5 = FUN_08008eec(*(undefined4 *)(&DAT_20000890 + metricIndex),result_10);\n    *(undefined4 *)(&DAT_20000884 + metricIndex) = result_5;\n    result_5 = FUN_08008e44(*(undefined4 *)(&DAT_20000880 + metricIndex));\n    result_5 = FUN_08008eec(result_5,result_10);\n    result_6 = FUN_08008590(result_5);\n    result_6 = FUN_08009318((int)result_6,(int)((ulonglong)result_6 >> 0x20));\n    result_5 = FUN_08008bf0((int)result_6,(int)((ulonglong)result_6 >> 0x20));\n    *(undefined4 *)(&DAT_200008ac + metricIndex) = result_5;\n    result_5 = FUN_08008e44(*(undefined4 *)(&DAT_20000880 + metricIndex));\n    result_5 = FUN_08008eec(result_5,result_4);\n    result_5 = FUN_08008eec(result_5,DAT_20000edc);\n    result_5 = FUN_08009054(result_5,0x453b8000);\n    result_6 = FUN_08008590(result_5);\n    result_6 = FUN_08009318((int)result_6,(int)((ulonglong)result_6 >> 0x20));\n    result_5 = FUN_08008ba0((int)result_6,(int)((ulonglong)result_6 >> 0x20));\n    *(undefined4 *)(&DAT_200008a0 + metricIndex) = result_5;\n    maxMetric = FUN_08008eec(result_1,result_4);\n    result_1 = FUN_08008eec(result_2,result_4);\n    result_2 = FUN_08008eec(result_3,result_4);\n    result_9 = 0;\n    if ((DAT_20000cf0 != DAT_20000cf1) && (absDiff = FUN_08009264(DAT_20000d0c,0), absDiff != 0)) {\n      result_3 = FUN_08008eec(DAT_20000d00 ^ 0x80000000,maxMetric);\n      result_4 = FUN_08008eec(DAT_20000d04,result_1);\n      result_3 = FUN_08008cd8(result_3,result_4);\n      result_4 = FUN_08008eec(DAT_20000d08,result_2);\n      result_3 = FUN_08008cd8(result_3,result_4);\n      result_6 = FUN_08008590(result_3);\n      absDiff = FUN_08008b24((int)result_6,(int)((ulonglong)result_6 >> 0x20),0x66666666,0x3fee6666);\n      if (absDiff != 0) {\n        absDiff = FUN_08009228(DAT_20000d0c,*(undefined4 *)(&DAT_20000884 + metricIndex));\n        result_9 = DAT_20000d0c;\n        if (absDiff == 0) {\n          result_9 = *(undefined4 *)(&DAT_20000884 + metricIndex);\n        }\n        result_6 = FUN_08008590(result_3);\n        absDiff = FUN_08008b60((int)result_6,(int)((ulonglong)result_6 >> 0x20),0x66666666,0xbfee6666);\n        if (absDiff != 0) {\n          result_6 = FUN_08008590(result_3);\n          result_6 = FUN_080082d0(0,0x3ff00000,(int)result_6,(int)((ulonglong)result_6 >> 0x20));\n          result_6 = FUN_08008640((int)result_6,(int)((ulonglong)result_6 >> 0x20),0,0x3fe00000);\n          result_6 = FUN_080098d0((int)result_6,(int)((ulonglong)result_6 >> 0x20));\n          result_3 = FUN_08008c30((int)result_6,(int)((ulonglong)result_6 >> 0x20));\n          result_6 = FUN_08008590(result_9);\n          result_4 = FUN_08008eec(DAT_20000edc,DAT_20000ee0);\n          result_4 = FUN_08008eec(result_4,result_3);\n          result_7 = FUN_08008590(result_4);\n          result_8 = FUN_08008590(result_3);\n          result_8 = FUN_080082d0(0,0x3ff00000,(int)result_8,(int)((ulonglong)result_8 >> 0x20));\n          result_7 = FUN_08008894((int)result_7,(int)((ulonglong)result_7 >> 0x20),(int)result_8,\n                                (int)((ulonglong)result_8 >> 0x20));\n          result_7 = FUN_080098d0((int)result_7,(int)((ulonglong)result_7 >> 0x20));\n          absDiff = FUN_08008b24((int)result_6,(int)((ulonglong)result_6 >> 0x20),(int)result_7,\n                                (int)((ulonglong)result_7 >> 0x20));\n          if (absDiff == 0) {\n            result_4 = FUN_08008eec(DAT_20000edc,DAT_20000ee0);\n            result_4 = FUN_08008eec(result_4,result_3);\n            result_6 = FUN_08008590(result_4);\n            result_7 = FUN_08008590(result_3);\n            result_7 = FUN_080082d0(0,0x3ff00000,(int)result_7,(int)((ulonglong)result_7 >> 0x20));\n            result_6 = FUN_08008894((int)result_6,(int)((ulonglong)result_6 >> 0x20),(int)result_7,\n                                  (int)((ulonglong)result_7 >> 0x20));\n            result_6 = FUN_080098d0((int)result_6,(int)((ulonglong)result_6 >> 0x20));\n            result_9 = FUN_08008c30((int)result_6,(int)((ulonglong)result_6 >> 0x20));\n          }\n        }\n      }\n    }\n    *(undefined4 *)(&DAT_2000088c + metricIndex) = result_9;\n    result_4 = FUN_08002978(DAT_20000edc ^ 0x80000000,0,*(undefined4 *)(&DAT_20000890 + metricIndex));\n    absDiff = FUN_08009228(result_9,result_4);\n    result_3 = result_4;\n    if (absDiff != 0) {\n      result_3 = result_9;\n    }\n    *(undefined4 *)(&DAT_20000888 + metricIndex) = result_3;\n    absDiff = FUN_08009250(result_4,*(undefined4 *)(&DAT_20000884 + metricIndex));\n    if (absDiff == 0) {\n      (&DAT_20000895)[metricIndex] = 0;\n    }\n    else {\n      (&DAT_20000895)[metricIndex] = 1;\n    }\n    (&DAT_20000894)[metricIndex] = 1;\n    DAT_20000d0c = *(undefined4 *)(&DAT_20000884 + metricIndex);\n    DAT_20000cf0 = DAT_20000cf2;\n    DAT_20000d00 = maxMetric;\n    DAT_20000d04 = result_1;\n    DAT_20000d08 = result_2;\n    DAT_20000cf2 = FUN_08002870(DAT_20000cf2);\n    DAT_20000cf4 = metric_1;\n    DAT_20000cf8 = metric_2;\n    DAT_20000cfc = metric_3;\n    FUN_08002edc();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003004": "calculate_metrics_08003004",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "param_5": "flag",
                "uVar1": "result_1",
                "iVar2": "metric_1",
                "iVar3": "metric_2",
                "iVar4": "metric_3",
                "uVar5": "result_2",
                "uVar6": "result_3",
                "uVar7": "result_4",
                "uVar8": "result_5",
                "uVar9": "maxMetric",
                "iVar10": "metricIndex",
                "puVar11": "metricsArray",
                "iVar12": "absDiff",
                "uVar13": "minMetric",
                "uVar14": "result_6",
                "uVar15": "result_7",
                "uVar16": "result_8",
                "local_20": "result_9",
                "local_1c": "result_10"
            },
            "calling": [
                "FUN_08001e98"
            ],
            "called": [
                "FUN_080095b8",
                "FUN_08009054",
                "FUN_08008e44",
                "FUN_08008cd8",
                "FUN_08009318",
                "FUN_08008ba0",
                "FUN_08002870",
                "FUN_08008b60",
                "FUN_08009264",
                "FUN_08008894",
                "FUN_08008640",
                "FUN_08008bf0",
                "FUN_08008b24",
                "FUN_08008590",
                "FUN_080082d0",
                "FUN_08009228",
                "FUN_080098d0",
                "FUN_08008eec",
                "FUN_08009250",
                "FUN_08002978",
                "FUN_08008cdc",
                "FUN_08008c30",
                "FUN_08002edc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080035ec": {
            "entrypoint": "0x080035ec",
            "current_name": "initialize_function_080035ec",
            "code": "\nvoid initializeFunction_080035ec(undefined4 inputParam1,undefined4 inputParam2,undefined4 inputParam3)\n\n{\n  DAT_20000cf4 = inputParam1;\n  DAT_20000cf8 = inputParam2;\n  DAT_20000cfc = inputParam3;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080035ec": "initialize_function_080035ec",
                "param_1": "inputParam1",
                "param_2": "inputParam2",
                "param_3": "inputParam3"
            },
            "calling": [
                "FUN_0800283a"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003618": {
            "entrypoint": "0x08003618",
            "current_name": "update_data_08003618",
            "code": "\nvoid updateData_08003618(undefined4 data)\n\n{\n  undefined4 result;\n  int offset;\n  undefined4 prevData;\n  \n  offset = (uint)DAT_20000cf1 * 0x40;\n  prevData = *(undefined4 *)(&DAT_20000890 + offset);\n  result = FUN_08008e44(data);\n  result = FUN_08008eec(prevData,result);\n  prevData = FUN_08008e44(*(undefined4 *)(&DAT_20000880 + offset));\n  result = FUN_08009054(result,prevData);\n  *(undefined4 *)(&DAT_20000890 + offset) = result;\n  *(undefined4 *)(&DAT_20000880 + offset) = data;\n  *(undefined4 *)(&DAT_20000888 + offset) = 0;\n  *(undefined4 *)(&DAT_2000088c + offset) = 0;\n  (&DAT_20000895)[offset] = 0;\n  (&DAT_20000894)[offset] = 1;\n  FUN_08002edc();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003618": "update_data_08003618",
                "param_1": "data",
                "uVar1": "result",
                "iVar2": "offset",
                "uVar3": "prevData"
            },
            "calling": [
                "FUN_080058a0"
            ],
            "called": [
                "FUN_08009054",
                "FUN_08008e44",
                "FUN_08008eec",
                "FUN_08002edc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800369c": {
            "entrypoint": "0x0800369c",
            "current_name": "process_string_0800369c",
            "code": "\nvoid process_string_0800369c(char *input_string)\n\n{\n  char *current_char;\n  \n  current_char = input_string;\n  while (*current_char != '\\0') {\n    FUN_08008250(*current_char);\n    current_char = current_char + 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800369c": "process_string_0800369c",
                "param_1": "input_string",
                "local_c": "current_char"
            },
            "calling": [
                "FUN_08004900",
                "FUN_080039bc"
            ],
            "called": [
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036c6": {
            "entrypoint": "0x080036c6",
            "current_name": "iterate_over_string_080036c6",
            "code": "\nvoid iterateOverString_080036c6(char *inputString)\n\n{\n  char *currentCharacter;\n  \n  currentCharacter = inputString;\n  while (*currentCharacter != '\\0') {\n    FUN_08008250(*currentCharacter);\n    currentCharacter = currentCharacter + 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080036c6": "iterate_over_string_080036c6",
                "param_1": "inputString",
                "local_c": "currentCharacter"
            },
            "calling": [
                "FUN_0800423c",
                "FUN_08004250",
                "FUN_08004940",
                "FUN_08004900",
                "FUN_080044e8",
                "FUN_08004228",
                "FUN_080046d0",
                "FUN_08004030",
                "FUN_080041a0",
                "FUN_08004148"
            ],
            "called": [
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036f0": {
            "entrypoint": "0x080036f0",
            "current_name": "print_binary_representation_080036f0",
            "code": "\nvoid printBinaryRepresentation_080036f0(uint number,int numBits)\n\n{\n  undefined4 binaryDigit;\n  int bitIndex;\n  uint mask;\n  \n  mask = 1 << (numBits - 1U & 0xff);\n  for (bitIndex = 0; bitIndex < numBits; bitIndex = bitIndex + 1) {\n    if ((mask & number) == 0) {\n      binaryDigit = 0x30;\n    }\n    else {\n      binaryDigit = 0x31;\n    }\n    FUN_08008250(binaryDigit);\n    mask = mask >> 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080036f0": "print_binary_representation_080036f0",
                "param_1": "number",
                "param_2": "numBits",
                "uVar1": "binaryDigit",
                "local_10": "bitIndex",
                "local_c": "mask"
            },
            "calling": [
                "FUN_08003740",
                "FUN_0800375c"
            ],
            "called": [
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003740": {
            "entrypoint": "0x08003740",
            "current_name": "initialize_data_08003740",
            "code": "\nvoid initialize_data_08003740(undefined data)\n\n{\n  FUN_080036f0(data,8);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003740": "initialize_data_08003740",
                "param_1": "data"
            },
            "calling": [],
            "called": [
                "FUN_080036f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800375c": {
            "entrypoint": "0x0800375c",
            "current_name": "initialize_memory_0800375c",
            "code": "\nvoid initializeMemory_0800375c(undefined2 buffer)\n\n{\n  FUN_080036f0(buffer,0x10);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800375c": "initialize_memory_0800375c",
                "param_1": "buffer"
            },
            "calling": [
                "FUN_08004250"
            ],
            "called": [
                "FUN_080036f0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003778": {
            "entrypoint": "0x08003778",
            "current_name": "print_non_zero_digits_08003778",
            "code": "\nvoid print_non_zero_digits_08003778(uint number)\n\n{\n  uint temp;\n  uint remaining_number;\n  char digit_stack [12];\n  byte num_digits;\n  \n  num_digits = 0;\n  remaining_number = number;\n  if (number == 0) {\n    FUN_08008250(0x30);\n  }\n  else {\n    for (; remaining_number != 0; remaining_number = remaining_number / 10) {\n      temp = (uint)num_digits;\n      num_digits = num_digits + 1;\n      digit_stack[temp + 1] = (char)(remaining_number % 10) + '0';\n    }\n    for (; num_digits != 0; num_digits = num_digits - 1) {\n      FUN_08008250(digit_stack[num_digits]);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003778": "print_non_zero_digits_08003778",
                "param_1": "number",
                "uVar1": "temp",
                "local_1c": "remaining_number",
                "acStack_15": "digit_stack",
                "local_9": "num_digits"
            },
            "calling": [
                "FUN_080037fc"
            ],
            "called": [
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080037fc": {
            "entrypoint": "0x080037fc",
            "current_name": "print_abs_value_080037fc",
            "code": "\nvoid print_abs_value_080037fc(int input_value)\n\n{\n  int absolute_value;\n  \n  absolute_value = input_value;\n  if (input_value < 0) {\n    FUN_08008250(0x2d);\n    absolute_value = -input_value;\n  }\n  FUN_08003778(absolute_value);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080037fc": "print_abs_value_080037fc",
                "param_1": "input_value",
                "local_c": "absolute_value"
            },
            "calling": [
                "FUN_08004250",
                "FUN_08004900",
                "FUN_080046d0"
            ],
            "called": [
                "FUN_08003778",
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003826": {
            "entrypoint": "0x08003826",
            "current_name": "convert_number_to_ascii_08003826",
            "code": "\nvoid convertNumberToASCII_08003826(uint number)\n\n{\n  int result;\n  undefined4 convertedNumber;\n  byte tempByte;\n  uint tempValue;\n  uint modifiedNumber;\n  char asciiStack [13];\n  uint remainder;\n  byte indexA;\n  byte indexB;\n  \n  result = FUN_08009228(number,0);\n  modifiedNumber = number;\n  if (result != 0) {\n    FUN_08008250(0x2d);\n    modifiedNumber = number ^ 0x80000000;\n  }\n  for (indexB = DAT_20000ef9; 1 < indexB; indexB = indexB - 2) {\n    modifiedNumber = FUN_08008eec(modifiedNumber,0x42c80000);\n  }\n  if (indexB != 0) {\n    modifiedNumber = FUN_08008eec(modifiedNumber,0x41200000);\n  }\n  convertedNumber = FUN_08008cdc(modifiedNumber,0x3f000000);\n  indexA = 0;\n  remainder = FUN_08009278(convertedNumber);\n  asciiStack[DAT_20000ef9 + 1] = '.';\n  for (; remainder != 0; remainder = remainder / 10) {\n    if (indexA == DAT_20000ef9) {\n      indexA = indexA + 1;\n    }\n    tempValue = (uint)indexA;\n    indexA = indexA + 1;\n    asciiStack[tempValue + 1] = (char)(remainder % 10) + '0';\n  }\n  while (indexA < DAT_20000ef9) {\n    tempValue = (uint)indexA;\n    indexA = indexA + 1;\n    asciiStack[tempValue + 1] = '0';\n  }\n  if (indexA == DAT_20000ef9) {\n    tempByte = indexA + 1;\n    indexA = indexA + 2;\n    asciiStack[tempByte + 1] = '0';\n  }\n  for (; indexA != 0; indexA = indexA - 1) {\n    FUN_08008250(asciiStack[indexA]);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003826": "convert_number_to_ascii_08003826",
                "param_1": "number",
                "iVar1": "result",
                "uVar2": "convertedNumber",
                "bVar3": "tempByte",
                "uVar4": "tempValue",
                "local_24": "modifiedNumber",
                "acStack_1d": "asciiStack",
                "local_10": "remainder",
                "local_a": "indexA",
                "local_9": "indexB"
            },
            "calling": [
                "FUN_08004250",
                "FUN_08004940",
                "FUN_080044e8",
                "FUN_080046d0"
            ],
            "called": [
                "FUN_08009228",
                "FUN_08009278",
                "FUN_08008eec",
                "FUN_08008cdc",
                "FUN_08008250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003980": {
            "entrypoint": "0x08003980",
            "current_name": "initialize_data_08003980",
            "code": "\nvoid initializeData_08003980(void)\n\n{\n  DAT_20000e10 = 0;\n  DAT_20000e11 = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003980": "initialize_data_08003980"
            },
            "calling": [
                "FUN_080039a0",
                "FUN_08003f34"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080039a0": {
            "entrypoint": "0x080039a0",
            "current_name": "initialize_program_080039a0",
            "code": "\nvoid initialize_program_080039a0(void)\n\n{\n  FUN_08003980();\n  FUN_08004228();\n  DAT_20000e50 = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080039a0": "initialize_program_080039a0"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08004228",
                "FUN_08003980"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080039bc": {
            "entrypoint": "0x080039bc",
            "current_name": "process_data_080039bc",
            "code": "\nvoid processData_080039bc(void)\n\n{\n  int result;\n  undefined4 value;\n  byte iteration;\n  \n  for (iteration = 0; iteration < 2; iteration = iteration + 1) {\n    result = FUN_08004d2c(iteration,&DAT_20000d10);\n    if (result == 0) {\n      FUN_08004030(10);\n    }\n    else if (DAT_20000d10 != '\\0') {\n      FUN_0800369c(&DAT_20000d10);\n      value = FUN_080005b4(&DAT_20000d10);\n      FUN_08004030(value);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080039bc": "process_data_080039bc",
                "local_9": "iteration",
                "iVar1": "result",
                "uVar2": "value"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_0800369c",
                "FUN_080005b4",
                "FUN_08004030",
                "FUN_08004d2c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a18": {
            "entrypoint": "0x08003a18",
            "current_name": "check_and_set_flags_08003a18",
            "code": "\nvoid checkAndSetFlags_08003a18(uint input)\n\n{\n  if ((input & 0x80) == 0) {\n    if ((input & 0x40) == 0) {\n      if ((input & 0x20) != 0) {\n        DAT_20000eaa = DAT_20000eaa | 2;\n      }\n    }\n    else {\n      DAT_20000eaa = DAT_20000eaa | 8;\n    }\n  }\n  else {\n    FUN_080025e8();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003a18": "check_and_set_flags_08003a18",
                "param_1": "input"
            },
            "calling": [
                "FUN_080074c8"
            ],
            "called": [
                "FUN_080025e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a74": {
            "entrypoint": "0x08003a74",
            "current_name": "update_flags_and_status_08003a74",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08003ad2) */\n\nvoid updateFlagsAndStatus_08003a74(void)\n\n{\n  byte currentByte;\n  \n  currentByte = DAT_20000eaa;\n  if (DAT_20000eaa != 0) {\n    if ((DAT_20000eaa & 0x60) != 0) {\n      DAT_20000ea9 = 6;\n      if ((DAT_20000eaa & 0x40) != 0) {\n        FUN_08004148(0xffffffff);\n        FUN_080041a0(1);\n        do {\n        } while( true );\n      }\n      FUN_08004148(0xfffffffe);\n      DAT_20000eaa = DAT_20000eaa & 0x9f;\n    }\n    if ((currentByte & 0x10) == 0) {\n      if ((currentByte & 1) != 0) {\n        FUN_08004940();\n        DAT_20000eaa = DAT_20000eaa & 0xfe;\n      }\n      if ((currentByte & 8) != 0) {\n        FUN_0800587c();\n        DAT_20000eaa = DAT_20000eaa & 0xf7;\n      }\n      if ((currentByte & 4) != 0) {\n        FUN_080058a0();\n        DAT_20000eaa = DAT_20000eaa & 0xfb;\n      }\n      if ((currentByte & 2) != 0) {\n        FUN_0800585c();\n        if ((DAT_20000ee4 & 2) != 0) {\n          DAT_20000eb8 = 1;\n        }\n        DAT_20000eaa = DAT_20000eaa & 0xfd;\n      }\n    }\n    else {\n      DAT_20000ea8 = 1;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003a74": "update_flags_and_status_08003a74",
                "bVar1": "currentByte"
            },
            "calling": [
                "FUN_08001e98",
                "FUN_08002408",
                "FUN_08003f34",
                "FUN_08001ddc",
                "FUN_08002fd4",
                "FUN_080024c4"
            ],
            "called": [
                "FUN_080058a0",
                "FUN_0800585c",
                "FUN_08004940",
                "FUN_0800587c",
                "FUN_080041a0",
                "FUN_08004148"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003b98": {
            "entrypoint": "0x08003b98",
            "current_name": "parse_command_08003b98",
            "code": "\nuint parse_command_08003b98(char *command_str)\n\n{\n  byte first_char;\n  int result;\n  undefined4 converted_val;\n  uint return_val;\n  undefined8 temp_val;\n  undefined4 val1;\n  undefined4 val2;\n  byte index;\n  byte flag;\n  \n  if (*command_str != '$') {\n    return_val = FUN_080005b4(command_str);\n    return return_val;\n  }\n  index = 1;\n  flag = '\\0';\n  first_char = command_str[1];\n  if (first_char == 0) {\n    FUN_0800423c();\n    return 0;\n  }\n  if ((0x58 < first_char) || (first_char < 0x23)) goto switchD_08003bdc_caseD_25;\n  switch(first_char) {\n  case 0x23:\n    index = 2;\n    if (command_str[2] != '\\0') {\n      return 3;\n    }\n    FUN_080044e8();\n    break;\n  case 0x24:\n    index = 2;\n    if (command_str[2] != '\\0') {\n      return 3;\n    }\n    FUN_08004250();\n    break;\n  case 0x43:\n    index = 2;\n    if (command_str[2] != '\\0') {\n      return 3;\n    }\n    if (DAT_20000ea9 == '\\a') {\n      FUN_080025e8();\n      FUN_080041a0(5);\n    }\n    else {\n      if (DAT_20000ea9 != '\\0') {\n        return 0xb;\n      }\n      DAT_20000ea9 = '\\a';\n      FUN_080041a0(4);\n    }\n    break;\n  case 0x47:\n    index = 2;\n    if (command_str[2] != '\\0') {\n      return 3;\n    }\n    FUN_080046d0();\n    break;\n  case 0x48:\n    if ((DAT_20000ee4 & 0x10) == 0) {\n      return 7;\n    }\n    if ((DAT_20000ea9 != '\\0') && (DAT_20000ea9 != '\\x06')) {\n      return 0xb;\n    }\n    FUN_080024c4();\n    if (DAT_20000ea8 == '\\0') {\n      FUN_080039bc();\n    }\n    break;\n  case 0x4e:\n    index = 2;\n    if (command_str[2] == '\\0') {\n      for (flag = 0; flag < 2; flag = flag + 1) {\n        result = FUN_08004d2c(flag,command_str);\n        if (result == 0) {\n          FUN_08004030(10);\n        }\n        else {\n          FUN_08004900(flag,command_str);\n        }\n      }\n      return 0;\n    }\n    flag = '\\x01';\n  default:\nswitchD_08003bdc_caseD_25:\n    result = FUN_08002638(command_str,&index,&val2);\n    if (result == 0) {\n      return 1;\n    }\n    first_char = index + 1;\n    if (command_str[index] != '=') {\n      return 3;\n    }\n    index = first_char;\n    if (flag == '\\0') {\n      result = FUN_08002638(command_str,&index,&val1);\n      if (result == 0) {\n        return 1;\n      }\n      if (command_str[index] == '\\0') {\n        converted_val = FUN_08009278(val2);\n        return_val = FUN_08004e30(converted_val,val1);\n        return return_val;\n      }\n      return 3;\n    }\n    do {\n      command_str[(uint)index - (uint)first_char] = command_str[index];\n      return_val = (uint)index;\n      index = index + 1;\n    } while (command_str[return_val] != '\\0');\n    flag = first_char;\n    flag = FUN_080005b4(command_str);\n    if (flag != 0) {\n      return (uint)flag;\n    }\n    temp_val = FUN_08008590(val2);\n    temp_val = FUN_08009798((int)temp_val,(int)((ulonglong)temp_val >> 0x20));\n    flag = FUN_08008bf0((int)temp_val,(int)((ulonglong)temp_val >> 0x20));\n    FUN_08004bc0(flag,command_str);\n    break;\n  case 0x58:\n    index = 2;\n    if (command_str[2] != '\\0') {\n      return 3;\n    }\n    if (DAT_20000ea9 == '\\x06') {\n      FUN_080041a0(3);\n      DAT_20000ea9 = '\\0';\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003b98": "parse_command_08003b98",
                "param_1": "command_str",
                "bVar1": "first_char",
                "iVar2": "result",
                "uVar3": "converted_val",
                "uVar4": "return_val",
                "uVar5": "temp_val",
                "local_14": "val1",
                "local_10": "val2",
                "local_a": "index",
                "local_9": "flag"
            },
            "calling": [
                "FUN_08003f34"
            ],
            "called": [
                "FUN_0800423c",
                "FUN_08004bc0",
                "FUN_08002638",
                "FUN_08009798",
                "FUN_08004900",
                "FUN_080025e8",
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_080046d0",
                "FUN_080039bc",
                "FUN_08008bf0",
                "FUN_08004d2c",
                "FUN_08008590",
                "FUN_08004250",
                "FUN_08009278",
                "FUN_080044e8",
                "FUN_08004030",
                "FUN_080041a0",
                "FUN_080024c4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f34": {
            "entrypoint": "0x08003f34",
            "current_name": "process_input_08003f34",
            "code": "\nvoid processInput_08003f34(void)\n\n{\n  byte currentByte;\n  undefined4 returnValue;\n  uint currentIndex;\n  \n  while( true ) {\n    while( true ) {\n      currentByte = FUN_08008286();\n      if (currentByte == 0xff) {\n        return;\n      }\n      if ((currentByte == 10) || (currentByte == 0xd)) break;\n      if (DAT_20000e11 == '\\0') {\n        if ((0x20 < currentByte) && (currentByte != 0x2f)) {\n          if (currentByte == 0x28) {\n            DAT_20000e11 = '\\x01';\n          }\n          else if (DAT_20000e10 == 0xff) {\n            FUN_08004030(0xd);\n            FUN_08003980();\n          }\n          else if ((currentByte < 0x61) || (0x7a < currentByte)) {\n            currentIndex = (uint)DAT_20000e10;\n            DAT_20000e10 = DAT_20000e10 + 1;\n            (&DAT_20000d10)[currentIndex] = currentByte;\n          }\n          else {\n            currentIndex = (uint)DAT_20000e10;\n            DAT_20000e10 = DAT_20000e10 + 1;\n            (&DAT_20000d10)[currentIndex] = currentByte - 0x20;\n          }\n        }\n      }\n      else if (currentByte == 0x29) {\n        DAT_20000e11 = '\\0';\n      }\n    }\n    FUN_08003a74();\n    if (DAT_20000ea8 != '\\0') break;\n    if (DAT_20000e10 == 0) {\n      FUN_08004030(0);\n    }\n    else {\n      (&DAT_20000d10)[DAT_20000e10] = 0;\n      returnValue = FUN_08003b98(&DAT_20000d10);\n      FUN_08004030(returnValue);\n    }\n    FUN_08003980();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f34": "process_input_08003f34",
                "bVar1": "currentByte",
                "uVar2": "returnValue",
                "uVar3": "currentIndex"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08003b98",
                "FUN_08003a74",
                "FUN_08008286",
                "FUN_08004030",
                "FUN_08003980"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004030": {
            "entrypoint": "0x08004030",
            "current_name": "show_error_message_08004030",
            "code": "\nvoid showErrorMessage_08004030(char errorCode)\n\n{\n  if (errorCode == '\\0') {\n    FUN_080036c6(&DAT_0800b5c8);\n  }\n  else {\n    FUN_080036c6(\"error: \");\n    switch(errorCode) {\n    case '\\x01':\n      FUN_080036c6(\"Bad number format\");\n      break;\n    case '\\x02':\n      FUN_080036c6(\"Expected command letter\");\n      break;\n    case '\\x03':\n      FUN_080036c6(\"Unsupported statement\");\n      break;\n    case '\\x04':\n      FUN_080036c6(\"Invalid radius\");\n      break;\n    case '\\x05':\n      FUN_080036c6(\"Modal group violation\");\n      break;\n    case '\\x06':\n      FUN_080036c6(\"Invalid statement\");\n      break;\n    case '\\a':\n      FUN_080036c6(\"Setting disabled\");\n      break;\n    case '\\b':\n      FUN_080036c6(\"Value < 0.0\");\n      break;\n    case '\\t':\n      FUN_080036c6(\"Value < 3 usec\");\n      break;\n    case '\\n':\n      FUN_080036c6(\"EEPROM read fail. Using defaults\");\n      break;\n    case '\\v':\n      FUN_080036c6(\"Busy or queued\");\n      break;\n    case '\\f':\n      FUN_080036c6(\"Alarm lock\");\n      break;\n    case '\\r':\n      FUN_080036c6(\"Line overflow\");\n    }\n    FUN_080036c6(&DAT_0800b6d8);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004030": "show_error_message_08004030",
                "param_1": "errorCode"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080004ac",
                "FUN_080044e8",
                "FUN_08003f34",
                "FUN_080039bc",
                "FUN_080051b4"
            ],
            "called": [
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004148": {
            "entrypoint": "0x08004148",
            "current_name": "display_alarm_message_08004148",
            "code": "\nvoid displayAlarmMessage_08004148(char errorCode)\n\n{\n  FUN_080036c6(\"ALARM: \");\n  if (errorCode == -2) {\n    FUN_080036c6(\"Abort during cycle\");\n  }\n  else if (errorCode == -1) {\n    FUN_080036c6(\"Hard limit\");\n  }\n  FUN_080036c6(\". MPos?\\r\\n\");\n  FUNC_08002814(500);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004148": "display_alarm_message_08004148",
                "param_1": "errorCode"
            },
            "calling": [
                "FUN_08003a74"
            ],
            "called": [
                "FUN_08002814",
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080041a0": {
            "entrypoint": "0x080041a0",
            "current_name": "display_message_080041a0",
            "code": "\nvoid displayMessage_080041a0(undefined param_1)\n\n{\n  FUN_080036c6(&DAT_0800b710);\n  switch(param_1) {\n  case 1:\n    FUN_080036c6(\"Reset to continue\");\n    break;\n  case 2:\n    FUN_080036c6(\"\\'$H\\'|\\'$X\\' to unlock\");\n    break;\n  case 3:\n    FUN_080036c6(\"Caution: Unlocked\");\n    break;\n  case 4:\n    FUN_080036c6(\"Enabled\");\n    break;\n  case 5:\n    FUN_080036c6(\"Disabled\");\n  }\n  FUN_080036c6(&DAT_0800b764);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080041a0": "display_message_080041a0"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_08003a74",
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004228": {
            "entrypoint": "0x08004228",
            "current_name": "print_grbl_version_08004228",
            "code": "\nvoid printGrblVersion_08004228(void)\n\n{\n  FUN_080036c6(\"\\r\\nGrbl 0.8c [\\'$\\' for help]\\r\\n\");\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004228": "print_grbl_version_08004228"
            },
            "calling": [
                "FUN_080039a0"
            ],
            "called": [
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800423c": {
            "entrypoint": "0x0800423c",
            "current_name": "display_grbl_menu_0800423c",
            "code": "\nvoid displayGrblMenu_0800423c(void)\n\n{\n  FUN_080036c6(\n              \"viewGrblSettings (view Grbl settings)\\r\\nviewNumberParameters (view # parameters)\\r\\nviewParserState (view parser state)\\r\\nviewStartupBlocks (view startup blocks)\\r\\nsaveGrblSetting=value (save Grbl setting)\\r\\nsaveStartupBlock=line (save startup block)\\r\\ncheckGcodeMode (check gcode mode)\\r\\nkillAlarmLock (kill alarm lock)\\r\\nrunHomingCycle (run homing cycle)\\r\\nstartCycle (cycle start)\\r\\nfeedHold (feed hold)\\r\\n? (current status)\\r\\nresetGrbl (reset Grbl)\\r\\n\"\n              );\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800423c": "display_grbl_menu_0800423c",
                "$$": "viewGrblSettings",
                "$#": "viewNumberParameters",
                "$G": "viewParserState",
                "$N": "viewStartupBlocks",
                "$x": "saveGrblSetting",
                "$Nx": "saveStartupBlock",
                "$C": "checkGcodeMode",
                "$X": "killAlarmLock",
                "$H": "runHomingCycle",
                "~": "startCycle",
                "!": "feedHold",
                "ctrl-x": "resetGrbl"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004250": {
            "entrypoint": "0x08004250",
            "current_name": "print_configuration_08004250",
            "code": "\nvoid printConfiguration_08004250(void)\n\n{\n  undefined4 accelerationValue;\n  \n  FUN_080036c6(&DAT_0800b8b8);\n  FUN_08003826(DAT_20000ebc);\n  FUN_080036c6(\" (x, step/mm)\\r\\n$1=\");\n  FUN_08003826(DAT_20000ec0);\n  FUN_080036c6(\" (y, step/mm)\\r\\n$2=\");\n  FUN_08003826(DAT_20000ec4);\n  FUN_080036c6(\" (z, step/mm)\\r\\n$3=\");\n  FUN_080037fc(DAT_20000ec9);\n  FUN_080036c6(\" (step pulse, usec)\\r\\n$4=\");\n  FUN_08003826(DAT_20000ecc);\n  FUN_080036c6(\" (default feed, mm/min)\\r\\n$5=\");\n  FUN_08003826(DAT_20000ed0);\n  FUN_080036c6(\" (default seek, mm/min)\\r\\n$6=\");\n  FUN_080037fc(DAT_20000ed4);\n  FUN_080036c6(\" (step port invert mask, int:\");\n  FUN_0800375c(DAT_20000ed4);\n  FUN_080036c6(\")\\r\\n$7=\");\n  FUN_080037fc(DAT_20000ef8);\n  FUN_080036c6(\" (step idle delay, msec)\\r\\n$8=\");\n  accelerationValue = FUN_08009054(DAT_20000edc,0x45610000);\n  FUN_08003826(accelerationValue);\n  FUN_080036c6(\" (acceleration, mm/sec^2)\\r\\n$9=\");\n  FUN_08003826(DAT_20000ee0);\n  FUN_080036c6(\" (junction deviation, mm)\\r\\n$10=\");\n  FUN_08003826(DAT_20000ed8);\n  FUN_080036c6(\" (arc, mm/segment)\\r\\n$11=\");\n  FUN_080037fc(DAT_20000efa);\n  FUN_080036c6(\" (n-arc correction, int)\\r\\n$12=\");\n  FUN_080037fc(DAT_20000ef9);\n  FUN_080036c6(\" (n-decimals, int)\\r\\n$13=\");\n  FUN_080037fc((DAT_20000ee4 & 1) != 0);\n  FUN_080036c6(\" (report inches, bool)\\r\\n$14=\");\n  FUN_080037fc((DAT_20000ee4 & 2) != 0);\n  FUN_080036c6(\" (auto start, bool)\\r\\n$15=\");\n  FUN_080037fc((DAT_20000ee4 & 4) != 0);\n  FUN_080036c6(\" (invert step enable, bool)\\r\\n$16=\");\n  FUN_080037fc((DAT_20000ee4 & 8) != 0);\n  FUN_080036c6(\" (hard limits, bool)\\r\\n$17=\");\n  FUN_080037fc((DAT_20000ee4 & 0x10) != 0);\n  FUN_080036c6(\" (homing cycle, bool)\\r\\n$18=\");\n  FUN_080037fc(DAT_20000ee6);\n  FUN_080036c6(\" (homing dir invert mask, int:\");\n  FUN_0800375c(DAT_20000ee6);\n  FUN_080036c6(\")\\r\\n$19=\");\n  FUN_08003826(DAT_20000ee8);\n  FUN_080036c6(\" (homing feed, mm/min)\\r\\n$20=\");\n  FUN_08003826(DAT_20000eec);\n  FUN_080036c6(\" (homing seek, mm/min)\\r\\n$21=\");\n  FUN_080037fc(DAT_20000ef0);\n  FUN_080036c6(\" (homing debounce, msec)\\r\\n$22=\");\n  FUN_08003826(DAT_20000ef4);\n  FUN_080036c6(\" (homing pull-off, mm)\\r\\n$23=\");\n  FUN_080037fc(DAT_20000ed6);\n  FUN_080036c6(\" (dir port invert mask, int:\");\n  FUN_0800375c(DAT_20000ed6);\n  FUN_080036c6(&DAT_0800bb94);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004250": "print_configuration_08004250",
                "uVar1": "accelerationValue"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080051b4"
            ],
            "called": [
                "FUN_08003826",
                "FUN_08009054",
                "FUN_080037fc",
                "FUN_080036c6",
                "FUN_0800375c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080044e8": {
            "entrypoint": "0x080044e8",
            "current_name": "process_data_080044e8",
            "code": "\nvoid processData_080044e8(void)\n\n{\n  int result;\n  undefined4 processedValue;\n  undefined8 transformedValue;\n  undefined4 stackArray [3];\n  byte counter_a;\n  byte counter_9;\n  \n  counter_9 = 0;\n  while( true ) {\n    if (7 < counter_9) {\n      FUN_080036c6(\"[G92:\");\n      for (counter_a = 0; counter_a < 3; counter_a = counter_a + 1) {\n        if ((DAT_20000ee4 & 1) == 0) {\n          FUN_08003826(*(undefined4 *)(&DAT_20000e74 + (counter_a + 10) * 4));\n        }\n        else {\n          transformedValue = FUN_08008590(*(undefined4 *)(&DAT_20000e74 + (counter_a + 10) * 4));\n          transformedValue = FUN_08008640((int)transformedValue,(int)((ulonglong)transformedValue >> 0x20),0x57e16865,0x3fa42851);\n          processedValue = FUN_08008c30((int)transformedValue,(int)((ulonglong)transformedValue >> 0x20));\n          FUN_08003826(processedValue);\n        }\n        if (counter_a < 2) {\n          FUN_080036c6(&DAT_0800bbbc);\n        }\n        else {\n          FUN_080036c6(&DAT_0800b764);\n        }\n      }\n      return;\n    }\n    result = FUN_08004d7c(counter_9,stackArray);\n    if (result == 0) break;\n    FUN_080036c6(&DAT_0800bb98);\n    switch(counter_9) {\n    case 0:\n      FUN_080036c6(&DAT_0800bb9c);\n      break;\n    case 1:\n      FUN_080036c6(&DAT_0800bba0);\n      break;\n    case 2:\n      FUN_080036c6(&DAT_0800bba4);\n      break;\n    case 3:\n      FUN_080036c6(&DAT_0800bba8);\n      break;\n    case 4:\n      FUN_080036c6(&DAT_0800bbac);\n      break;\n    case 5:\n      FUN_080036c6(&DAT_0800bbb0);\n      break;\n    case 6:\n      FUN_080036c6(&DAT_0800bbb4);\n      break;\n    case 7:\n      FUN_080036c6(&DAT_0800bbb8);\n    }\n    for (counter_a = 0; counter_a < 3; counter_a = counter_a + 1) {\n      if ((DAT_20000ee4 & 1) == 0) {\n        FUN_08003826(stackArray[counter_a]);\n      }\n      else {\n        transformedValue = FUN_08008590(stackArray[counter_a]);\n        transformedValue = FUN_08008640((int)transformedValue,(int)((ulonglong)transformedValue >> 0x20),0x57e16865,0x3fa42851);\n        processedValue = FUN_08008c30((int)transformedValue,(int)((ulonglong)transformedValue >> 0x20));\n        FUN_08003826(processedValue);\n      }\n      if (counter_a < 2) {\n        FUN_080036c6(&DAT_0800bbbc);\n      }\n      else {\n        FUN_080036c6(&DAT_0800b764);\n      }\n    }\n    counter_9 = counter_9 + 1;\n  }\n  FUN_08004030(10);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080044e8": "process_data_080044e8",
                "iVar1": "result",
                "uVar2": "processedValue",
                "uVar3": "transformedValue",
                "auStack_18": "stackArray",
                "local_a": "counter_a",
                "local_9": "counter_9"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08003826",
                "FUN_08004d7c",
                "FUN_08008640",
                "FUN_08004030",
                "FUN_080036c6",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080046d0": {
            "entrypoint": "0x080046d0",
            "current_name": "print_settings_080046d0",
            "code": "\nvoid printSettings_080046d0(void)\n\n{\n  undefined4 result;\n  undefined8 tempValue;\n  \n  switch(DAT_20000e71) {\n  case 0:\n    FUN_080036c6(&DAT_0800bbc8);\n    break;\n  case 1:\n    FUN_080036c6(&DAT_0800bbcc);\n    break;\n  case 2:\n    FUN_080036c6(&DAT_0800bbd0);\n    break;\n  case 3:\n    FUN_080036c6(&DAT_0800bbd4);\n    break;\n  case 4:\n    FUN_080036c6(&DAT_0800bbd8);\n  }\n  FUN_080036c6(&DAT_0800bbe0);\n  FUN_080037fc(DAT_20000e8c + 0x36);\n  if (DAT_20000e89 == '\\0') {\n    if (DAT_20000e8a == '\\x01') {\n      FUN_080036c6(&DAT_0800bbe4);\n    }\n    else {\n      FUN_080036c6(&DAT_0800bbec);\n    }\n  }\n  else {\n    FUN_080036c6(&DAT_0800bbf4);\n  }\n  if (DAT_20000e73 == '\\0') {\n    FUN_080036c6(&DAT_0800bc04);\n  }\n  else {\n    FUN_080036c6(&DAT_0800bbfc);\n  }\n  if (DAT_20000e74 == '\\0') {\n    FUN_080036c6(&DAT_0800bc14);\n  }\n  else {\n    FUN_080036c6(&DAT_0800bc0c);\n  }\n  if (DAT_20000e72 == '\\0') {\n    FUN_080036c6(&DAT_0800bc24);\n  }\n  else {\n    FUN_080036c6(&DAT_0800bc1c);\n  }\n  if (DAT_20000e75 == 2) {\n    FUN_080036c6(&DAT_0800bc34);\n  }\n  else if (DAT_20000e75 < 3) {\n    if (DAT_20000e75 == 0) {\n      FUN_080036c6(&DAT_0800bc2c);\n    }\n    else if (DAT_20000e75 == 1) {\n      FUN_080036c6(&DAT_0800bc30);\n    }\n  }\n  if (DAT_20000e76 == '\\x01') {\n    FUN_080036c6(&DAT_0800bc38);\n  }\n  else if (DAT_20000e76 < '\\x02') {\n    if (DAT_20000e76 == -1) {\n      FUN_080036c6(&DAT_0800bc3c);\n    }\n    else if (DAT_20000e76 == '\\0') {\n      FUN_080036c6(&DAT_0800bc40);\n    }\n  }\n  if (DAT_20000e77 == 2) {\n    FUN_080036c6(&DAT_0800bc4c);\n  }\n  else if (DAT_20000e77 < 3) {\n    if (DAT_20000e77 == 0) {\n      FUN_080036c6(&DAT_0800bc44);\n    }\n    else if (DAT_20000e77 == 1) {\n      FUN_080036c6(&DAT_0800bc48);\n    }\n  }\n  FUN_080036c6(&DAT_0800bc50);\n  FUN_080037fc(DAT_20000e88);\n  FUN_080036c6(&DAT_0800bc54);\n  if (DAT_20000e73 == '\\0') {\n    FUN_08003826(DAT_20000e78);\n  }\n  else {\n    tempValue = FUN_08008590(DAT_20000e78);\n    tempValue = FUN_08008640((int)tempValue,(int)((ulonglong)tempValue >> 0x20),0x57e16865,0x3fa42851);\n    result = FUN_08008c30((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    FUN_08003826(result);\n  }\n  FUN_080036c6(&DAT_0800b764);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080046d0": "print_settings_080046d0",
                "uVar1": "result",
                "uVar2": "tempValue"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08003826",
                "FUN_080037fc",
                "FUN_08008640",
                "FUN_080036c6",
                "FUN_08008c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004900": {
            "entrypoint": "0x08004900",
            "current_name": "initialize_application_08004900",
            "code": "\nvoid initializeApplication_08004900(undefined inputParam,undefined4 configParam)\n\n{\n  FUN_080036c6(&DAT_0800bc58);\n  FUN_080037fc(inputParam);\n  FUN_080036c6(&DAT_0800bc5c);\n  FUN_0800369c(configParam);\n  FUN_080036c6(&DAT_0800b6d8);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004900": "initialize_application_08004900",
                "param_1": "inputParam",
                "param_2": "configParam"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_0800369c",
                "FUN_080037fc",
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004940": {
            "entrypoint": "0x08004940",
            "current_name": "print_machine_status_08004940",
            "code": "\nvoid printMachineStatus_08004940(void)\n\n{\n  undefined4 uVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined4 machineStatusValues [6];\n  byte i;\n  \n  machineStatusValues[3] = DAT_20000eac;\n  machineStatusValues[4] = DAT_20000eb0;\n  machineStatusValues[5] = DAT_20000eb4;\n  switch(DAT_20000ea9) {\n  case 0:\n    FUN_080036c6(\"<Idle\");\n    break;\n  case 2:\n    FUN_080036c6(\"<Queue\");\n    break;\n  case 3:\n    FUN_080036c6(&DAT_0800bc70);\n    break;\n  case 4:\n    FUN_080036c6(\"<Hold\");\n    break;\n  case 5:\n    FUN_080036c6(\"<Home\");\n    break;\n  case 6:\n    FUN_080036c6(\"<Alarm\");\n    break;\n  case 7:\n    FUN_080036c6(\"<Check\");\n  }\n  FUN_080036c6(\",MPos:\");\n  for (i = 0; i < 3; i = i + 1) {\n    uVar1 = FUN_08008e44(machineStatusValues[i + 3]);\n    uVar2 = (uint)i;\n    uVar1 = FUN_08009054(uVar1,(&DAT_20000ebc)[i]);\n    machineStatusValues[uVar2] = uVar1;\n    if ((DAT_20000ee4 & 1) != 0) {\n      uVar4 = FUN_08008590(machineStatusValues[i]);\n      uVar4 = FUN_08008640((int)uVar4,(int)((ulonglong)uVar4 >> 0x20),0x57e16865,0x3fa42851);\n      uVar2 = (uint)i;\n      uVar1 = FUN_08008c30((int)uVar4,(int)((ulonglong)uVar4 >> 0x20));\n      machineStatusValues[uVar2] = uVar1;\n    }\n    FUN_08003826(machineStatusValues[i]);\n    FUN_080036c6(&DAT_0800bbbc);\n  }\n  FUN_080036c6(\"WPos:\");\n  for (i = 0; i < 3; i = i + 1) {\n    if ((DAT_20000ee4 & 1) == 0) {\n      uVar3 = machineStatusValues[i];\n      uVar1 = FUN_08008cdc(*(undefined4 *)(&DAT_20000e70 + (i + 8) * 4),\n                           *(undefined4 *)(&DAT_20000e74 + (i + 10) * 4));\n      uVar2 = (uint)i;\n      uVar1 = FUN_08008cd8(uVar3,uVar1);\n      machineStatusValues[uVar2] = uVar1;\n    }\n    else {\n      uVar4 = FUN_08008590(machineStatusValues[i]);\n      uVar1 = FUN_08008cdc(*(undefined4 *)(&DAT_20000e70 + (i + 8) * 4),\n                           *(undefined4 *)(&DAT_20000e74 + (i + 10) * 4));\n      uVar5 = FUN_08008590(uVar1);\n      uVar5 = FUN_08008640((int)uVar5,(int)((ulonglong)uVar5 >> 0x20),0x57e16865,0x3fa42851);\n      uVar4 = FUN_080082d0((int)uVar4,(int)((ulonglong)uVar4 >> 0x20),(int)uVar5,\n                           (int)((ulonglong)uVar5 >> 0x20));\n      uVar2 = (uint)i;\n      uVar1 = FUN_08008c30((int)uVar4,(int)((ulonglong)uVar4 >> 0x20));\n      machineStatusValues[uVar2] = uVar1;\n    }\n    FUN_08003826(machineStatusValues[i]);\n    if (i < 2) {\n      FUN_080036c6(&DAT_0800bbbc);\n    }\n  }\n  FUN_080036c6(&DAT_0800bca8);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004940": "print_machine_status_08004940",
                "auStack_2c": "machineStatusValues",
                "local_11": "i"
            },
            "calling": [
                "FUN_08003a74"
            ],
            "called": [
                "FUN_08008590",
                "FUN_080082d0",
                "FUN_08008cd8",
                "FUN_08003826",
                "FUN_08008e44",
                "FUN_08009054",
                "FUN_08008cdc",
                "FUN_08008640",
                "FUN_08008c30",
                "FUN_080036c6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004bc0": {
            "entrypoint": "0x08004bc0",
            "current_name": "initialize_memory_08004bc0",
            "code": "\nvoid initializeMemory_08004bc0(byte byteValue,undefined4 address)\n\n{\n  FUN_08000374((ushort)byteValue * 0x101 + 0x300,address,0x100);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004bc0": "initialize_memory_08004bc0",
                "param_1": "byteValue",
                "param_2": "address"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_08004d2c"
            ],
            "called": [
                "FUN_08000374"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004bf4": {
            "entrypoint": "0x08004bf4",
            "current_name": "calculate_and_process_data_08004bf4",
            "code": "\nvoid calculateAndProcessData_08004bf4(byte inputByte,undefined4 param)\n\n{\n  FUN_08000374((unsignedShort)inputByte * 0xd + 0x200,param,0xc);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004bf4": "calculate_and_process_data_08004bf4",
                "param_1": "inputByte",
                "param_2": "param",
                "ushort": "unsignedShort"
            },
            "calling": [
                "FUN_08004d7c",
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08000374"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c2a": {
            "entrypoint": "0x08004c2a",
            "current_name": "initialize_system_08004c2a",
            "code": "\nvoid initializeSystem_08004c2a(void)\n\n{\n  FUN_08000340(0,5);\n  FUN_08000374(1,&DAT_20000ebc,0x40);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c2a": "initialize_system_08004c2a"
            },
            "calling": [
                "FUN_08004e30",
                "FUN_08004c48"
            ],
            "called": [
                "FUN_08000374",
                "FUN_08000340"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c48": {
            "entrypoint": "0x08004c48",
            "current_name": "initialize_settings_08004c48",
            "code": "\nvoid initializeSettings_08004c48(char inputParameter)\n\n{\n  if (inputParameter != '\\0') {\n    DAT_20000ebc = 0x431d7af6;\n    DAT_20000ec0 = 0x431d7af6;\n    DAT_20000ec4 = 0x431d7af6;\n    DAT_20000ec9 = 10;\n    DAT_20000ecc = 0x437a0000;\n    DAT_20000ed0 = 0x43fa0000;\n    DAT_20000edc = 0x470ca000;\n    DAT_20000ed8 = 0x3dcccccd;\n    DAT_20000ed4 = 0;\n    DAT_20000ed6 = 0xa80;\n    DAT_20000ee0 = 0x3d4ccccd;\n  }\n  DAT_20000ee4 = 0x12;\n  DAT_20000ee6 = 0;\n  DAT_20000ee8 = 0x41c80000;\n  DAT_20000eec = 0x437a0000;\n  DAT_20000ef0 = 100;\n  DAT_20000ef4 = 0x3f800000;\n  DAT_20000ef8 = 0x19;\n  DAT_20000ef9 = 3;\n  DAT_20000efa = 0x19;\n  FUN_08004c2a();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c48": "initialize_settings_08004c48",
                "param_1": "inputParameter"
            },
            "calling": [
                "FUN_08004dd2",
                "FUN_080051b4"
            ],
            "called": [
                "FUN_08004c2a"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d2c": {
            "entrypoint": "0x08004d2c",
            "current_name": "check_and_process_data_08004d2c",
            "code": "\nbool checkAndProcessData_08004d2c(byte byteValue,undefined *dataPointer)\n\n{\n  int result;\n  \n  result = FUN_080003ec(dataPointer,(ushort)byteValue * 0x101 + 0x300,0x100);\n  if (result == 0) {\n    *dataPointer = 0;\n    FUN_08004bc0(byteValue,dataPointer);\n  }\n  return result != 0;\n}\n\n",
            "renaming": {
                "FUN_08004d2c": "check_and_process_data_08004d2c",
                "param_1": "byteValue",
                "param_2": "dataPointer",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080039bc"
            ],
            "called": [
                "FUN_08004bc0",
                "FUN_080003ec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d7c": {
            "entrypoint": "0x08004d7c",
            "current_name": "check_and_initialize_08004d7c",
            "code": "\nbool check_and_initialize_08004d7c(byte input_byte,undefined4 data_pointer)\n\n{\n  int status;\n  \n  status = FUN_080003ec(data_pointer,(ushort)input_byte * 0xd + 0x200,0xc);\n  if (status == 0) {\n    FUN_0800b430(data_pointer,0,0xc);\n    FUN_08004bf4(input_byte,data_pointer);\n  }\n  return status != 0;\n}\n\n",
            "renaming": {
                "FUN_08004d7c": "check_and_initialize_08004d7c",
                "param_1": "input_byte",
                "param_2": "data_pointer",
                "iVar1": "status"
            },
            "calling": [
                "FUN_080004ac",
                "FUN_080005b4",
                "FUN_080044e8",
                "FUN_080051b4"
            ],
            "called": [
                "FUN_0800b430",
                "FUN_080003ec",
                "FUN_08004bf4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004dd2": {
            "entrypoint": "0x08004dd2",
            "current_name": "check_and_initialize_08004dd2",
            "code": "\nundefined4 check_and_initialize_08004dd2(void)\n\n{\n  byte result;\n  int status;\n  \n  result = FUN_08000310(0);\n  if (result == 5) {\n    status = FUN_080003ec(&DAT_20000ebc,1,0x40);\n    if (status == 0) {\n      return 0;\n    }\n  }\n  else {\n    if (4 < result) {\n      return 0;\n    }\n    status = FUN_080003ec(&DAT_20000ebc,1,0x28);\n    if (status == 0) {\n      return 0;\n    }\n    FUN_08004c48(0);\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08004dd2": "check_and_initialize_08004dd2",
                "bVar1": "result",
                "iVar2": "status"
            },
            "calling": [
                "FUN_080051b4"
            ],
            "called": [
                "FUN_080003ec",
                "FUN_08000310",
                "FUN_08004c48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e30": {
            "entrypoint": "0x08004e30",
            "current_name": "update_configuration_08004e30",
            "code": "\nundefined4 updateConfiguration_08004e30(int configOption,uint configValue)\n\n{\n  undefined4 result;\n  int error;\n  undefined8 tempValue;\n  \n  switch(configOption) {\n  case 0:\n  case 1:\n  case 2:\n    error = FUN_0800923c(configValue,0);\n    if (error != 0) {\n      return 8;\n    }\n    (&DAT_20000ebc)[configOption] = configValue;\n    break;\n  case 3:\n    error = FUN_08009228(configValue,0x40400000);\n    if (error != 0) {\n      return 9;\n    }\n    tempValue = FUN_08008590(configValue);\n    tempValue = FUN_08009654((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    DAT_20000ec9 = FUN_08008bf0((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    break;\n  case 4:\n    DAT_20000ecc = configValue;\n    break;\n  case 5:\n    DAT_20000ed0 = configValue;\n    break;\n  case 6:\n    tempValue = FUN_08008590(configValue);\n    tempValue = FUN_08009798((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    DAT_20000ed4 = FUN_08008bf0((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    break;\n  case 7:\n    tempValue = FUN_08008590(configValue);\n    tempValue = FUN_08009654((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    DAT_20000ef8 = FUN_08008bf0((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    break;\n  case 8:\n    result = FUN_08008eec(configValue,0x42700000);\n    DAT_20000edc = FUN_08008eec(result,0x42700000);\n    break;\n  case 9:\n    DAT_20000ee0 = configValue & 0x7fffffff;\n    break;\n  case 10:\n    DAT_20000ed8 = configValue;\n    break;\n  case 0xb:\n    tempValue = FUN_08008590(configValue);\n    tempValue = FUN_08009654((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    DAT_20000efa = FUN_08008bf0((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    break;\n  case 0xc:\n    tempValue = FUN_08008590(configValue);\n    tempValue = FUN_08009654((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    DAT_20000ef9 = FUN_08008bf0((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    break;\n  case 0xd:\n    error = FUN_08009214(configValue,0);\n    if (error == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 1;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xfe;\n    }\n    break;\n  case 0xe:\n    error = FUN_08009214(configValue,0);\n    if (error == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 2;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xfd;\n    }\n    break;\n  case 0xf:\n    error = FUN_08009214(configValue,0);\n    if (error == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 4;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xfb;\n    }\n    break;\n  case 0x10:\n    error = FUN_08009214(configValue,0);\n    if (error == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 8;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xf7;\n    }\n    FUN_0800192c();\n    break;\n  case 0x11:\n    error = FUN_08009214(configValue,0);\n    if (error == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 0x10;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xef;\n    }\n    break;\n  case 0x12:\n    tempValue = FUN_08008590(configValue);\n    tempValue = FUN_08009798((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    DAT_20000ee6 = FUN_08008bf0((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    break;\n  case 0x13:\n    DAT_20000ee8 = configValue;\n    break;\n  case 0x14:\n    DAT_20000eec = configValue;\n    break;\n  case 0x15:\n    tempValue = FUN_08008590(configValue);\n    tempValue = FUN_08009654((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    DAT_20000ef0 = FUN_08008bf0((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    break;\n  case 0x16:\n    DAT_20000ef4 = configValue;\n    break;\n  case 0x17:\n    tempValue = FUN_08008590(configValue);\n    tempValue = FUN_08009798((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    DAT_20000ed6 = FUN_08008bf0((int)tempValue,(int)((ulonglong)tempValue >> 0x20));\n    break;\n  default:\n    return 6;\n  }\n  FUN_08004c2a();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004e30": "update_configuration_08004e30",
                "param_1": "configOption",
                "param_2": "configValue",
                "uVar1": "result",
                "iVar2": "error",
                "uVar3": "tempValue"
            },
            "calling": [
                "FUN_08003b98"
            ],
            "called": [
                "FUN_08008590",
                "FUN_08009228",
                "FUN_08009798",
                "FUN_08009214",
                "FUN_08004c2a",
                "FUN_08008eec",
                "FUN_08009654",
                "FUN_0800923c",
                "FUN_08008bf0",
                "FUN_0800192c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080051b4": {
            "entrypoint": "0x080051b4",
            "current_name": "check_and_process_data_080051b4",
            "code": "\nvoid checkAndProcessData_080051b4(void)\n\n{\n  int result;\n  undefined buffer [15];\n  byte index;\n  \n  result = FUN_08004dd2();\n  if (result == 0) {\n    FUN_08004030(10);\n    FUN_08004c48(1);\n    FUN_08004250();\n  }\n  for (index = 0; index < 8; index = index + 1) {\n    result = FUN_08004d7c(index,buffer);\n    if (result == 0) {\n      FUN_08004030(10);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080051b4": "check_and_process_data_080051b4",
                "iVar1": "result",
                "auStack_18": "buffer",
                "local_9": "index"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08004250",
                "FUN_08004d7c",
                "FUN_08004dd2",
                "FUN_08004030",
                "FUN_08004c48"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005208": {
            "entrypoint": "0x08005208",
            "current_name": "FUNC_08005208",
            "code": "\nvoid FUNC_08005208(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005208": "FUNC_08005208"
            },
            "calling": [
                "FUN_0800525c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005214": {
            "entrypoint": "0x08005214",
            "current_name": "FUNC_08005214",
            "code": "\nvoid FUNC_08005214(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005214": "FUNC_08005214"
            },
            "calling": [
                "FUN_08005250"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005220": {
            "entrypoint": "0x08005220",
            "current_name": "FUNC_08005220",
            "code": "\nvoid FUNC_08005220(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005220": "FUNC_08005220"
            },
            "calling": [
                "FUN_0800525c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800522c": {
            "entrypoint": "0x0800522c",
            "current_name": "FUNC_0800522c",
            "code": "\nvoid FUNC_0800522c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800522c": "FUNC_0800522c"
            },
            "calling": [
                "FUN_0800525c"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005238": {
            "entrypoint": "0x08005238",
            "current_name": "initialize_data_08005238",
            "code": "\nvoid initializeData_08005238(void)\n\n{\n  DAT_20000e12 = 0;\n  FUN_08005250();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005238": "initialize_data_08005238"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08005250"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005250": {
            "entrypoint": "0x08005250",
            "current_name": "initialize_application_08005250",
            "code": "\nvoid initialize_application_08005250(void)\n\n{\n  FUNC_08005214();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005250": "initialize_application_08005250"
            },
            "calling": [
                "FUN_0800525c",
                "FUN_080025e8",
                "FUN_08005238"
            ],
            "called": [
                "FUN_08005214"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800525c": {
            "entrypoint": "0x0800525c",
            "current_name": "process_byte_0800525c",
            "code": "\nvoid processByte_0800525c(byte byteValue)\n\n{\n  if ((int)(char)byteValue != (uint)DAT_20000e12) {\n    FUN_08002fd4();\n    if (byteValue == 0) {\n      FUN_08005250();\n      DAT_20000e12 = byteValue;\n    }\n    else {\n      if ((char)byteValue < '\\x01') {\n        FUNC_0800522c();\n      }\n      else {\n        FUNC_08005220();\n      }\n      FUNC_08005208();\n      DAT_20000e12 = byteValue;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800525c": "process_byte_0800525c",
                "param_1": "byteValue"
            },
            "calling": [
                "FUN_080005b4"
            ],
            "called": [
                "FUN_08005208",
                "FUN_0800522c",
                "FUN_08005250",
                "FUN_08005220",
                "FUN_08002fd4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080052ac": {
            "entrypoint": "0x080052ac",
            "current_name": "update_data_080052ac",
            "code": "\n\n\nvoid updateData_080052ac(uint newData)\n\n{\n  _DAT_40021014 = newData | _DAT_40021014 & 0xfffffaaf;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080052ac": "update_data_080052ac",
                "param_1": "newData"
            },
            "calling": [
                "FUN_0800583c",
                "FUN_08005778",
                "FUN_08005760"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080052dc": {
            "entrypoint": "0x080052dc",
            "current_name": "combine_bitwise_values_080052dc",
            "code": "\n\n\nvoid combineBitwiseValues_080052dc(uint newBits)\n\n{\n  _DAT_40021014 = newBits | _DAT_40021014 & 0xfffff55f;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080052dc": "combine_bitwise_values_080052dc",
                "param_1": "newBits"
            },
            "calling": [
                "FUN_080053a0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800530c": {
            "entrypoint": "0x0800530c",
            "current_name": "FUNC_0800530c",
            "code": "\nvoid FUNC_0800530c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800530c": "FUNC_0800530c"
            },
            "calling": [
                "FUN_080057e4"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005318": {
            "entrypoint": "0x08005318",
            "current_name": "FUNC_08005318",
            "code": "\nvoid FUNC_08005318(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005318": "FUNC_08005318"
            },
            "calling": [
                "FUN_08005790"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005324": {
            "entrypoint": "0x08005324",
            "current_name": "calculate_division_and_call_08005324",
            "code": "\nvoid calculateDivisionAndCall_08005324(uint inputDivisor)\n\n{\n  uint divisor;\n  \n  divisor = inputDivisor;\n  if (inputDivisor < 800) {\n    divisor = 800;\n  }\n  DAT_20000e28 = 1260000000 / divisor;\n  FUN_08007bf0(DAT_20000e28);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005324": "calculate_division_and_call_08005324",
                "param_1": "inputDivisor",
                "local_14": "divisor"
            },
            "calling": [
                "FUN_08005814",
                "FUN_080058a0",
                "FUN_080053a0"
            ],
            "called": [
                "FUN_08007bf0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005360": {
            "entrypoint": "0x08005360",
            "current_name": "calculate_overflow_08005360",
            "code": "\nbool calculateOverflow_08005360(void)\n\n{\n  bool bVar1;\n  \n  DAT_20000e2c = DAT_20000e28 + DAT_20000e2c;\n  bVar1 = 420000 < DAT_20000e2c;\n  if (bVar1) {\n    DAT_20000e2c = DAT_20000e2c - 420000;\n  }\n  return bVar1;\n}\n\n",
            "renaming": {
                "FUN_08005360": "calculate_overflow_08005360"
            },
            "calling": [
                "FUN_080053a0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080053a0": {
            "entrypoint": "0x080053a0",
            "current_name": "update_data_080053a0",
            "code": "\nvoid updateData_080053a0(void)\n\n{\n  int result;\n  \n  FUN_080052dc(DAT_20000e3e);\n  DAT_20000e40 = DAT_20000e3c;\n  if (DAT_20000e38 == (ushort *)0x0) {\n    DAT_20000e38 = (ushort *)FUN_08002f74();\n    if (DAT_20000e38 == (ushort *)0x0) {\n      FUN_080057e4();\n      DAT_20000eaa = DAT_20000eaa | 4;\n    }\n    else {\n      if (DAT_20000ea9 == '\\x03') {\n        DAT_20000e30 = *(uint *)(DAT_20000e38 + 0x14);\n        FUN_08005324(DAT_20000e30);\n        DAT_20000e2c = 210000;\n      }\n      DAT_20000e34 = (*(int *)(DAT_20000e38 + 0x18) >> 1) + *(int *)(DAT_20000e38 + 0x18);\n      DAT_20000e14 = -(*(int *)(DAT_20000e38 + 8) >> 1);\n      DAT_20000e20 = *(int *)(DAT_20000e38 + 8);\n      DAT_20000e24 = 0;\n      DAT_20000e18 = DAT_20000e14;\n      DAT_20000e1c = DAT_20000e14;\n    }\n  }\n  if (DAT_20000e38 != (ushort *)0x0) {\n    DAT_20000e3e = *DAT_20000e38;\n    DAT_20000e3c = 0;\n    DAT_20000e14 = *(int *)(DAT_20000e38 + 2) + DAT_20000e14;\n    if (0 < DAT_20000e14) {\n      DAT_20000e3c = 0x10;\n      DAT_20000e14 = DAT_20000e14 - DAT_20000e20;\n      if ((DAT_20000e3e & 0x20) == 0) {\n        DAT_20000eac = DAT_20000eac + 1;\n      }\n      else {\n        DAT_20000eac = DAT_20000eac + -1;\n      }\n    }\n    DAT_20000e18 = *(int *)(DAT_20000e38 + 4) + DAT_20000e18;\n    if (0 < DAT_20000e18) {\n      DAT_20000e3c = DAT_20000e3c | 0x440;\n      DAT_20000e18 = DAT_20000e18 - DAT_20000e20;\n      if ((DAT_20000e3e & 0x80) == 0) {\n        DAT_20000eb0 = DAT_20000eb0 + 1;\n      }\n      else {\n        DAT_20000eb0 = DAT_20000eb0 + -1;\n      }\n    }\n    DAT_20000e1c = *(int *)(DAT_20000e38 + 6) + DAT_20000e1c;\n    if (0 < DAT_20000e1c) {\n      DAT_20000e3c = DAT_20000e3c | 0x100;\n      DAT_20000e1c = DAT_20000e1c - DAT_20000e20;\n      if ((DAT_20000e3e & 0x200) == 0) {\n        DAT_20000eb4 = DAT_20000eb4 + 1;\n      }\n      else {\n        DAT_20000eb4 = DAT_20000eb4 + -1;\n      }\n    }\n    DAT_20000e24 = DAT_20000e24 + 1;\n    if (DAT_20000e24 < *(uint *)(DAT_20000e38 + 8)) {\n      if (DAT_20000ea9 == '\\x04') {\n        result = FUN_08005360();\n        if (result != 0) {\n          if (*(uint *)(DAT_20000e38 + 0x18) < DAT_20000e30) {\n            DAT_20000e30 = DAT_20000e30 - *(int *)(DAT_20000e38 + 0x18);\n            FUN_08005324(DAT_20000e30);\n          }\n          else {\n            FUN_080057e4();\n            DAT_20000eaa = DAT_20000eaa | 4;\n          }\n        }\n      }\n      else if (DAT_20000e24 < *(uint *)(DAT_20000e38 + 0x1a)) {\n        result = FUN_08005360();\n        if (result != 0) {\n          DAT_20000e30 = DAT_20000e30 + *(int *)(DAT_20000e38 + 0x18);\n          if (*(uint *)(DAT_20000e38 + 0x1e) <= DAT_20000e30) {\n            DAT_20000e30 = *(uint *)(DAT_20000e38 + 0x1e);\n          }\n          FUN_08005324(DAT_20000e30);\n        }\n      }\n      else if (DAT_20000e24 < *(uint *)(DAT_20000e38 + 0x1c)) {\n        if (DAT_20000e30 != *(uint *)(DAT_20000e38 + 0x1e)) {\n          DAT_20000e30 = *(uint *)(DAT_20000e38 + 0x1e);\n          FUN_08005324(DAT_20000e30);\n        }\n      }\n      else if (DAT_20000e24 == *(uint *)(DAT_20000e38 + 0x1c)) {\n        if (DAT_20000e30 == *(uint *)(DAT_20000e38 + 0x1e)) {\n          DAT_20000e2c = 210000;\n        }\n        else {\n          DAT_20000e2c = 420000 - DAT_20000e2c;\n        }\n      }\n      else {\n        result = FUN_08005360();\n        if (result != 0) {\n          if (DAT_20000e34 < DAT_20000e30) {\n            DAT_20000e30 = DAT_20000e30 - *(int *)(DAT_20000e38 + 0x18);\n          }\n          else {\n            DAT_20000e30 = DAT_20000e30 >> 1;\n          }\n          if (DAT_20000e30 < *(uint *)(DAT_20000e38 + 0x16)) {\n            DAT_20000e30 = *(uint *)(DAT_20000e38 + 0x16);\n          }\n          FUN_08005324(DAT_20000e30);\n        }\n      }\n    }\n    else {\n      DAT_20000e3c = 0;\n      DAT_20000e38 = (ushort *)0x0;\n      FUN_08002f40();\n    }\n  }\n  DAT_20000e3c = DAT_20000e3c ^ DAT_20000ed4;\n  DAT_20000e3e = DAT_20000e3e ^ DAT_20000ed6;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080053a0": "update_data_080053a0",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08007c7c"
            ],
            "called": [
                "FUN_080052dc",
                "FUN_080057e4",
                "FUN_08005324",
                "FUN_08002f40",
                "FUN_08005360",
                "FUN_08002f74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005760": {
            "entrypoint": "0x08005760",
            "current_name": "initiate_data_transfer_08005760",
            "code": "\nvoid initiate_data_transfer_08005760(void)\n\n{\n  FUN_080052ac(DAT_20000ed4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005760": "initiate_data_transfer_08005760"
            },
            "calling": [
                "FUN_08007c7c"
            ],
            "called": [
                "FUN_080052ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005778": {
            "entrypoint": "0x08005778",
            "current_name": "initialize_data_08005778",
            "code": "\nvoid initializeData_08005778(void)\n\n{\n  FUN_080052ac(DAT_20000e40);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005778": "initialize_data_08005778"
            },
            "calling": [
                "FUN_08007c7c"
            ],
            "called": [
                "FUN_080052ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005790": {
            "entrypoint": "0x08005790",
            "current_name": "initialize_data_08005790",
            "code": "\nvoid initializeData_08005790(void)\n\n{\n  FUNC_08005318();\n  if (DAT_20000ea9 == '\\x03') {\n    DAT_20000e3c = DAT_20000ed4;\n    DAT_20000e3e = DAT_20000ed6;\n    FUN_08007c40(0x69);\n    FUN_08007c5e((DAT_20000ec9 + 5) * 0x15);\n    FUN_08007b70();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005790": "initialize_data_08005790"
            },
            "calling": [
                "FUN_0800585c",
                "FUN_0800583c",
                "FUN_08001d4c"
            ],
            "called": [
                "FUN_08007c5e",
                "FUN_08007c40",
                "FUN_08005318",
                "FUN_08007b70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080057e4": {
            "entrypoint": "0x080057e4",
            "current_name": "initialize_080057e4",
            "code": "\nvoid initialize_080057e4(void)\n\n{\n  FUN_08007bc2();\n  if ((DAT_20000ef8 != -1) || ((DAT_20000eaa & 0x20) != 0)) {\n    FUNC_0800530c();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080057e4": "initialize_080057e4"
            },
            "calling": [
                "FUN_080053a0",
                "FUN_0800583c",
                "FUN_080025e8",
                "FUN_08001d4c"
            ],
            "called": [
                "FUN_0800530c",
                "FUN_08007bc2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005814": {
            "entrypoint": "0x08005814",
            "current_name": "initialize_data_08005814",
            "code": "\nvoid initializeData_08005814(void)\n\n{\n  FUN_0800b430(&DAT_20000e14,0,0x24);\n  FUN_08005324(800);\n  DAT_20000e38 = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005814": "initialize_data_08005814"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_0800b430",
                "FUN_08005324"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800583c": {
            "entrypoint": "0x0800583c",
            "current_name": "initialize_application_0800583c",
            "code": "\nvoid initializeApplication_0800583c(void)\n\n{\n  FUN_080052ac(DAT_20000ed4);\n  FUN_08005790();\n  FUN_080057e4();\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800583c": "initialize_application_0800583c"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [
                "FUN_08005790",
                "FUN_080057e4",
                "FUN_080052ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800585c": {
            "entrypoint": "0x0800585c",
            "current_name": "update_status_and_call_function_0800585c",
            "code": "\nvoid updateStatusAndCallFunction_0800585c(void)\n\n{\n  if (DAT_20000ea9 == '\\x02') {\n    DAT_20000ea9 = '\\x03';\n    FUN_08005790();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800585c": "update_status_and_call_function_0800585c"
            },
            "calling": [
                "FUN_08001e98",
                "FUN_08003a74",
                "FUN_080024c4"
            ],
            "called": [
                "FUN_08005790"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800587c": {
            "entrypoint": "0x0800587c",
            "current_name": "update_state_0800587c",
            "code": "\nvoid updateState_0800587c(void)\n\n{\n  if (DAT_20000ea9 == '\\x03') {\n    DAT_20000ea9 = '\\x04';\n    DAT_20000eb8 = 0;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800587c": "update_state_0800587c"
            },
            "calling": [
                "FUN_08003a74"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058a0": {
            "entrypoint": "0x080058a0",
            "current_name": "process_data_080058a0",
            "code": "\nvoid processData_080058a0(void)\n\n{\n  if (DAT_20000e38 == 0) {\n    DAT_20000ea9 = 0;\n  }\n  else {\n    FUN_08003618(*(int *)(DAT_20000e38 + 0x10) - DAT_20000e24);\n    DAT_20000e30 = 0;\n    FUN_08005324(0);\n    DAT_20000e2c = 210000;\n    DAT_20000e24 = 0;\n    DAT_20000ea9 = 2;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080058a0": "process_data_080058a0"
            },
            "calling": [
                "FUN_08003a74"
            ],
            "called": [
                "FUN_08003618",
                "FUN_08005324"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005900": {
            "entrypoint": "0x08005900",
            "current_name": "check_and_update_flag_08005900",
            "code": "\nundefined4 checkAndUpdateFlag_08005900(byte input)\n\n{\n  if (input == 0x7e) {\n    DAT_20000eaa = DAT_20000eaa | 2;\n    return 1;\n  }\n  if (input < 0x7f) {\n    if (input == 0x3f) {\n      DAT_20000eaa = DAT_20000eaa | 1;\n      return 1;\n    }\n    if (input < 0x40) {\n      if (input == 0x18) {\n        FUN_080025e8();\n        return 1;\n      }\n      if (input == 0x21) {\n        DAT_20000eaa = DAT_20000eaa | 8;\n        return 1;\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005900": "check_and_update_flag_08005900",
                "param_1": "input"
            },
            "calling": [
                "FUN_08008286"
            ],
            "called": [
                "FUN_080025e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800597c": {
            "entrypoint": "0x0800597c",
            "current_name": "call_software_interrupt_0800597c",
            "code": "\nvoid callSoftwareInterrupt_0800597c(void)\n\n{\n  software_interrupt(0x3f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800597c": "call_software_interrupt_0800597c"
            },
            "calling": [
                "FUN_08005984"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005984": {
            "entrypoint": "0x08005984",
            "current_name": "initialize_data_08005984",
            "code": "\nundefined4 initializeData_08005984(undefined4 inputValue)\n\n{\n  undefined4 returnValue;\n  \n  if (DAT_20000e44 == 0) {\n    returnValue = FUN_0800597c(1,inputValue,0);\n  }\n  else {\n    returnValue = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08005984": "initialize_data_08005984",
                "param_1": "inputValue",
                "uVar1": "returnValue"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_0800597c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080059b4": {
            "entrypoint": "0x080059b4",
            "current_name": "initialize_system_080059b4",
            "code": "\n\n\nundefined4 initialize_system_080059b4(void)\n\n{\n  _DAT_40023c00 = _DAT_40023c00 | 0x700;\n  FUN_08006d72(16000);\n  FUN_08006ce0(3);\n  FUNC_08005a50();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080059b4": "initialize_system_080059b4"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_08005a50",
                "FUN_08006d72",
                "FUN_08006ce0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080059f8": {
            "entrypoint": "0x080059f8",
            "current_name": "initialize_data_080059f8",
            "code": "\n\n\nundefined4 initializeData_080059f8(void)\n\n{\n  _DAT_40023820 = 0;\n  _DAT_40023824 = 0;\n  _DAT_40023810 = 0;\n  _DAT_40023814 = 0;\n  _DAT_40023818 = 0;\n  FUNC_08005a5c();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080059f8": "initialize_data_080059f8"
            },
            "calling": [],
            "called": [
                "FUN_08005a5c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a50": {
            "entrypoint": "0x08005a50",
            "current_name": "FUNC_08005a50",
            "code": "\nvoid FUNC_08005a50(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a50": "FUNC_08005a50"
            },
            "calling": [
                "FUN_080059b4"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005a5c": {
            "entrypoint": "0x08005a5c",
            "current_name": "FUNC_08005a5c",
            "code": "\nvoid FUNC_08005a5c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a5c": "FUNC_08005a5c"
            },
            "calling": [
                "FUN_080059f8"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005a68": {
            "entrypoint": "0x08005a68",
            "current_name": "increment_variable_08005a68",
            "code": "\nvoid incrementVariable_08005a68(void)\n\n{\n  DAT_20000e48 = DAT_20000e48 + 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a68": "increment_variable_08005a68"
            },
            "calling": [
                "FUN_08007756"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a84": {
            "entrypoint": "0x08005a84",
            "current_name": "get_data_08005a84",
            "code": "\nundefined4 get_data_08005a84(void)\n\n{\n  return DAT_20000e48;\n}\n\n",
            "renaming": {
                "FUN_08005a84": "get_data_08005a84"
            },
            "calling": [
                "FUN_08007756",
                "FUN_08000268",
                "FUN_0800618c",
                "FUN_08005a98",
                "FUN_08005cec"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a98": {
            "entrypoint": "0x08005a98",
            "current_name": "validate_range_08005a98",
            "code": "\nvoid validateRange_08005a98(int inputNumber)\n\n{\n  int randomNumber;\n  uint generatedNumber;\n  \n  randomNumber = FUN_08005a84();\n  do {\n    generatedNumber = FUN_08005a84();\n  } while (generatedNumber < (uint)(inputNumber + randomNumber));\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a98": "validate_range_08005a98",
                "param_1": "inputNumber",
                "iVar1": "randomNumber",
                "uVar2": "generatedNumber"
            },
            "calling": [
                "FUN_080002a0"
            ],
            "called": [
                "FUN_08005a84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005bdc": {
            "entrypoint": "0x08005bdc",
            "current_name": "write_byte_to_memory_08005bdc",
            "code": "\nvoid writeByteToMemory_08005bdc(byte byteToWrite,uint valueToWrite)\n\n{\n  if ((char)byteToWrite < '\\0') {\n    *(char *)((byteToWrite & 0xf) + 0xe000ed14) = (char)((valueToWrite & 0xff) << 4);\n  }\n  else {\n    *(char *)((char)byteToWrite + -0x1fff1c00) = (char)((valueToWrite & 0xff) << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005bdc": "write_byte_to_memory_08005bdc",
                "param_1": "byteToWrite",
                "param_2": "valueToWrite"
            },
            "calling": [
                "FUN_08005c30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c30": {
            "entrypoint": "0x08005c30",
            "current_name": "check_and_initialize_08005c30",
            "code": "\n\n\nbool checkAndInitialize_08005c30(int inputValue)\n\n{\n  bool isInRange;\n  \n  isInRange = inputValue - 1U < 0x1000000;\n  if (isInRange) {\n    _DAT_e000e014 = inputValue + -1;\n    FUN_08005bdc(0xffffffff,0xf);\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n  }\n  return !isInRange;\n}\n\n",
            "renaming": {
                "FUN_08005c30": "check_and_initialize_08005c30",
                "param_1": "inputValue",
                "bVar1": "isInRange"
            },
            "calling": [
                "FUN_0800618c"
            ],
            "called": [
                "FUN_08005bdc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cec": {
            "entrypoint": "0x08005cec",
            "current_name": "process_data_08005cec",
            "code": "\n\n\nundefined4 processData_08005cec(uint *input)\n\n{\n  int tempVar1;\n  uint tempVar2;\n  \n  if ((*input & 1) != 0) {\n    if (((_DAT_40023808 & 0xc) == 4) ||\n       (((_DAT_40023808 & 0xc) == 8 && ((_DAT_40023804 & 0x400000) == 0x400000)))) {\n      if (((_DAT_40023800 & 0x20000) != 0) && (input[1] != 1)) {\n        return 1;\n      }\n    }\n    else {\n      _DAT_40023800 = (uint3)_DAT_40023800;\n      tempVar1 = FUN_08005a84();\n      while ((_DAT_40023800 & 0x20000) != 0) {\n        tempVar2 = FUN_08005a84();\n        if (tempVar1 + 5000U <= tempVar2) {\n          return 3;\n        }\n      }\n      _DAT_40023800 = CONCAT13(DAT_40023800_3,CONCAT12((char)input[1],_DAT_40023800));\n      if (input[1] == 1) {\n        tempVar1 = FUN_08005a84();\n        while ((_DAT_40023800 & 0x20000) == 0) {\n          tempVar2 = FUN_08005a84();\n          if (tempVar1 + 5000U <= tempVar2) {\n            return 3;\n          }\n        }\n      }\n      else {\n        tempVar1 = FUN_08005a84();\n        while ((_DAT_40023800 & 0x20000) != 0) {\n          tempVar2 = FUN_08005a84();\n          if (tempVar1 + 5000U <= tempVar2) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*input & 2) != 0) {\n    if (((_DAT_40023808 & 0xc) == 0) ||\n       (((_DAT_40023808 & 0xc) == 8 && ((_DAT_40023804 & 0x400000) == 0)))) {\n      if (((_DAT_40023800 & 2) != 0) && (input[3] != 1)) {\n        return 1;\n      }\n    }\n    else if (input[3] == 0) {\n      _DAT_42470000 = 0;\n      tempVar1 = FUN_08005a84();\n      while ((_DAT_40023800 & 2) != 0) {\n        tempVar2 = FUN_08005a84();\n        if (tempVar1 + 100U <= tempVar2) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470000 = 1;\n      tempVar1 = FUN_08005a84();\n      while ((_DAT_40023800 & 2) == 0) {\n        tempVar2 = FUN_08005a84();\n        if (tempVar1 + 100U <= tempVar2) {\n          return 3;\n        }\n      }\n      _DAT_40023800 = input[4] << 3 | _DAT_40023800 & 0xffffff07;\n    }\n  }\n  if ((*input & 8) != 0) {\n    if (input[5] == 0) {\n      _DAT_42470e80 = 0;\n      tempVar1 = FUN_08005a84();\n      while ((_DAT_40023874 & 2) != 0) {\n        tempVar2 = FUN_08005a84();\n        if (tempVar1 + 100U <= tempVar2) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470e80 = 1;\n      tempVar1 = FUN_08005a84();\n      while ((_DAT_40023874 & 2) == 0) {\n        tempVar2 = FUN_08005a84();\n        if (tempVar1 + 100U <= tempVar2) {\n          return 3;\n        }\n      }\n    }\n  }\n  if ((*input & 4) != 0) {\n    _DAT_40023840 = _DAT_40023840 | 0x10000000;\n    _DAT_40007000 = _DAT_40007000 | 0x100;\n    tempVar1 = FUN_08005a84();\n    while ((_DAT_40007000 & 0x100) == 0) {\n      tempVar2 = FUN_08005a84();\n      if (tempVar1 + 100U <= tempVar2) {\n        return 3;\n      }\n    }\n    _DAT_40023870 = _DAT_40023870 & 0xffffff00;\n    tempVar1 = FUN_08005a84();\n    while ((_DAT_40023870 & 2) != 0) {\n      tempVar2 = FUN_08005a84();\n      if (tempVar1 + 5000U <= tempVar2) {\n        return 3;\n      }\n    }\n    _DAT_40023870 = CONCAT31(DAT_40023870_1,(char)input[2]);\n    if (input[2] == 1) {\n      tempVar1 = FUN_08005a84();\n      while ((_DAT_40023870 & 2) == 0) {\n        tempVar2 = FUN_08005a84();\n        if (tempVar1 + 5000U <= tempVar2) {\n          return 3;\n        }\n      }\n    }\n    else {\n      tempVar1 = FUN_08005a84();\n      while ((_DAT_40023870 & 2) != 0) {\n        tempVar2 = FUN_08005a84();\n        if (tempVar1 + 5000U <= tempVar2) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (input[6] != 0) {\n    if ((_DAT_40023808 & 0xc) == 8) {\n      return 1;\n    }\n    if (input[6] == 2) {\n      _DAT_42470060 = 0;\n      tempVar1 = FUN_08005a84();\n      while ((_DAT_40023800 & 0x2000000) != 0) {\n        tempVar2 = FUN_08005a84();\n        if (tempVar1 + 100U <= tempVar2) {\n          return 3;\n        }\n      }\n      _DAT_40023804 =\n           input[0xb] << 0x18 |\n           input[8] | input[9] << 6 | ((input[10] >> 1) - 1) * 0x10000 | input[7] |\n           0x20000000;\n      _DAT_42470060 = 1;\n      tempVar1 = FUN_08005a84();\n      while ((_DAT_40023800 & 0x2000000) == 0) {\n        tempVar2 = FUN_08005a84();\n        if (tempVar1 + 100U <= tempVar2) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470060 = 0;\n      tempVar1 = FUN_08005a84();\n      while ((_DAT_40023800 & 0x2000000) != 0) {\n        tempVar2 = FUN_08005a84();\n        if (tempVar1 + 100U <= tempVar2) {\n          return 3;\n        }\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005cec": "process_data_08005cec",
                "param_1": "input",
                "iVar1": "tempVar1",
                "uVar2": "tempVar2"
            },
            "calling": [
                "FUN_08007436"
            ],
            "called": [
                "FUN_08005a84"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800618c": {
            "entrypoint": "0x0800618c",
            "current_name": "update_param_data_0800618c",
            "code": "\n\n\nundefined4 updateParamData_0800618c(uint *paramPtr,uint paramValue)\n\n{\n  int returnValue;\n  uint tempValue;\n  uint limitValue;\n  undefined8 timeValue;\n  \n  if ((_DAT_40023c00 & 0xf) < paramValue) {\n    _DAT_40023c00 = CONCAT31(DAT_40023c00_1,(char)paramValue);\n    if (paramValue != (paramValue & 0xf)) {\n      return 1;\n    }\n    if ((*paramPtr & 1) != 0) {\n      if (paramPtr[1] == 1) {\n        if ((_DAT_40023800 & 0x20000) == 0) {\n          return 1;\n        }\n      }\n      else if ((paramPtr[1] != 2) && ((_DAT_40023800 & 2) == 0)) {\n        return 1;\n      }\n      _DAT_40023808 = paramPtr[1] | _DAT_40023808 & 0xfffffffc;\n      returnValue = FUN_08005a84();\n      limitValue = returnValue + 5000;\n      if (paramPtr[1] == 1) {\n        while ((_DAT_40023808 & 0xc) != 4) {\n          tempValue = FUN_08005a84();\n          if (limitValue <= tempValue) {\n            return 3;\n          }\n        }\n      }\n      else if (paramPtr[1] == 2) {\n        while ((_DAT_40023808 & 0xc) != 8) {\n          tempValue = FUN_08005a84();\n          if (limitValue <= tempValue) {\n            return 3;\n          }\n        }\n      }\n      else {\n        while ((_DAT_40023808 & 0xc) != 0) {\n          tempValue = FUN_08005a84();\n          if (limitValue <= tempValue) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  else {\n    if ((*paramPtr & 1) != 0) {\n      if (paramPtr[1] == 1) {\n        if ((_DAT_40023800 & 0x20000) == 0) {\n          return 1;\n        }\n      }\n      else if (paramPtr[1] == 2) {\n        if ((_DAT_40023800 & 0x2000000) == 0) {\n          return 1;\n        }\n      }\n      else if ((_DAT_40023800 & 2) == 0) {\n        return 1;\n      }\n      _DAT_40023808 = paramPtr[1] | _DAT_40023808 & 0xfffffffc;\n      returnValue = FUN_08005a84();\n      limitValue = returnValue + 5000;\n      if (paramPtr[1] == 1) {\n        while ((_DAT_40023808 & 0xc) != 4) {\n          tempValue = FUN_08005a84();\n          if (limitValue <= tempValue) {\n            return 3;\n          }\n        }\n      }\n      else if (paramPtr[1] == 2) {\n        while ((_DAT_40023808 & 0xc) != 8) {\n          tempValue = FUN_08005a84();\n          if (limitValue <= tempValue) {\n            return 3;\n          }\n        }\n      }\n      else {\n        while ((_DAT_40023808 & 0xc) != 0) {\n          tempValue = FUN_08005a84();\n          if (limitValue <= tempValue) {\n            return 3;\n          }\n        }\n      }\n    }\n    _DAT_40023c00 = CONCAT31(DAT_40023c00_1,(char)paramValue);\n    if (paramValue != (paramValue & 0xf)) {\n      return 1;\n    }\n  }\n  if ((*paramPtr & 2) != 0) {\n    _DAT_40023808 = paramPtr[2] | _DAT_40023808 & 0xffffff0f;\n  }\n  if ((*paramPtr & 4) != 0) {\n    _DAT_40023808 = paramPtr[3] | _DAT_40023808 & 0xffffe3ff;\n  }\n  if ((*paramPtr & 8) != 0) {\n    _DAT_40023808 = paramPtr[4] << 3 | _DAT_40023808 & 0xffff1fff;\n  }\n  timeValue = FUN_08006628();\n  FUN_08005c30((uint)timeValue / 1000,(int)((ulonglong)timeValue >> 0x20),(uint)timeValue * 0x10624dd3);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800618c": "update_param_data_0800618c",
                "param_1": "paramPtr",
                "param_2": "paramValue",
                "iVar1": "returnValue",
                "uVar2": "tempValue",
                "uVar3": "limitValue",
                "uVar4": "timeValue"
            },
            "calling": [
                "FUN_08007436"
            ],
            "called": [
                "FUN_08005a84",
                "FUN_08006628",
                "FUN_08005c30"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800640c": {
            "entrypoint": "0x0800640c",
            "current_name": "update_flags_and_values_0800640c",
            "code": "\n\n\nvoid updateFlagsAndValues_0800640c(int flag,uint value1,uint value2)\n\n{\n  undefined4 constantFlag1;\n  undefined4 constantFlag2;\n  undefined4 constantFlag3;\n  undefined4 constantFlag4;\n  undefined4 constantFlag5;\n  \n  if (flag == 0) {\n    _DAT_40023830 = _DAT_40023830 | 1;\n    constantFlag1 = 0x100;\n    constantFlag2 = 2;\n    constantFlag4 = 3;\n    constantFlag3 = 0;\n    constantFlag5 = 0;\n    FUN_08006e88(0x40020000,&constantFlag1);\n    _DAT_40023808 = value2 | value1 | _DAT_40023808 & 0xf89fffff;\n  }\n  else {\n    _DAT_40023830 = _DAT_40023830 | 4;\n    constantFlag1 = 0x200;\n    constantFlag2 = 2;\n    constantFlag4 = 3;\n    constantFlag3 = 0;\n    constantFlag5 = 0;\n    FUN_08006e88(0x40020800,&constantFlag1);\n    _DAT_40023808 = value1 | value2 << 3 | _DAT_40023808 & 0x7ffffff;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800640c": "update_flags_and_values_0800640c",
                "param_1": "flag",
                "param_2": "value1",
                "param_3": "value2",
                "local_1c": "constantFlag1",
                "local_18": "constantFlag2",
                "local_14": "constantFlag3",
                "local_10": "constantFlag4",
                "local_c": "constantFlag5"
            },
            "calling": [],
            "called": [
                "FUN_08006e88"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080064ec": {
            "entrypoint": "0x080064ec",
            "current_name": "calculate_clock_frequency_080064ec",
            "code": "\n\n\nuint calculateClockFrequency_080064ec(void)\n\n{\n  uint clockSource;\n  uint calculatedFrequency;\n  \n  clockSource = _DAT_40023808 & 0xc;\n  if (clockSource == 8) {\n    if ((_DAT_40023804 & 0x400000) == 0) {\n      calculatedFrequency = ((_DAT_40023804 & 0x7fc0) >> 6) * (16000000 / (_DAT_40023804 & 0x3f));\n    }\n    else {\n      calculatedFrequency = ((_DAT_40023804 & 0x7fc0) >> 6) * (8000000 / (_DAT_40023804 & 0x3f));\n    }\n    return calculatedFrequency / ((((_DAT_40023804 & 0x30000) >> 0x10) + 1) * 2);\n  }\n  if (clockSource < 9) {\n    if (clockSource == 0) {\n      return 16000000;\n    }\n    if (clockSource == 4) {\n      return 8000000;\n    }\n  }\n  return 16000000;\n}\n\n",
            "renaming": {
                "FUN_080064ec": "calculate_clock_frequency_080064ec",
                "uVar1": "clockSource",
                "local_c": "calculatedFrequency"
            },
            "calling": [
                "FUN_08006628"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006628": {
            "entrypoint": "0x08006628",
            "current_name": "calculate_shifted_value_08006628",
            "code": "\n\n\nuint calculateShiftedValue_08006628(void)\n\n{\n  uint result;\n  \n  result = FUN_080064ec();\n  DAT_20000000 = result >> (&DAT_0800bcac)[(_DAT_40023808 & 0xf0) >> 4];\n  return result >> (&DAT_0800bcac)[(_DAT_40023808 & 0xf0) >> 4];\n}\n\n",
            "renaming": {
                "FUN_08006628": "calculate_shifted_value_08006628",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08006680",
                "FUN_080066cc",
                "FUN_0800618c"
            ],
            "called": [
                "FUN_080064ec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006680": {
            "entrypoint": "0x08006680",
            "current_name": "get_shifted_value_08006680",
            "code": "\n\n\nuint get_shifted_value_08006680(void)\n\n{\n  uint result;\n  \n  result = FUN_08006628();\n  return result >> (&DAT_0800bcac)[(_DAT_40023808 & 0x1c00) >> 10];\n}\n\n",
            "renaming": {
                "FUN_08006680": "get_shifted_value_08006680",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08007f54"
            ],
            "called": [
                "FUN_08006628"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080066cc": {
            "entrypoint": "0x080066cc",
            "current_name": "shifted_result_080066cc",
            "code": "\n\n\nuint shiftedResult_080066cc(void)\n\n{\n  uint functionResult;\n  \n  functionResult = FUN_08006628();\n  return functionResult >> (&DAT_0800bcac)[(_DAT_40023808 & 0xe000) >> 0xd];\n}\n\n",
            "renaming": {
                "FUN_080066cc": "shifted_result_080066cc",
                "uVar1": "functionResult"
            },
            "calling": [
                "FUN_08007f54"
            ],
            "called": [
                "FUN_08006628"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006950": {
            "entrypoint": "0x08006950",
            "current_name": "update_control_register_08006950",
            "code": "\n\n\nvoid updateControlRegister_08006950(uint input)\n\n{\n  _DAT_e000ed0c = _DAT_e000ed0c & 0xf8ff | (input & 7) << 8 | 0x5fa0000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006950": "update_control_register_08006950",
                "param_1": "input"
            },
            "calling": [
                "FUN_08006ce0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006998": {
            "entrypoint": "0x08006998",
            "current_name": "extract_bits_08006998",
            "code": "\n\n\nuint extract_bits_08006998(void)\n\n{\n  return _DAT_e000ed0c >> 8 & 7;\n}\n\n",
            "renaming": {
                "FUN_08006998": "extract_bits_08006998"
            },
            "calling": [
                "FUN_08006d8a",
                "FUN_08006cf6"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080069b4": {
            "entrypoint": "0x080069b4",
            "current_name": "set_bit_in_memory_080069b4",
            "code": "\nvoid setBitInMemory_080069b4(byte inputByte)\n\n{\n  *(int *)(((uint)(int)(char)inputByte >> 5) * 4 + -0x1fff1f00) = 1 << (inputByte & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080069b4": "set_bit_in_memory_080069b4",
                "param_1": "inputByte"
            },
            "calling": [
                "FUN_08006d2e"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080069e4": {
            "entrypoint": "0x080069e4",
            "current_name": "set_bit_in_memory_080069e4",
            "code": "\nvoid setBitInMemory_080069e4(byte inputByte)\n\n{\n  *(int *)((((uint)(int)(char)inputByte >> 5) + 0x20) * 4 + -0x1fff1f00) = 1 << (inputByte & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080069e4": "set_bit_in_memory_080069e4",
                "param_1": "inputByte"
            },
            "calling": [
                "FUN_08006d4a"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006a18": {
            "entrypoint": "0x08006a18",
            "current_name": "check_bit_08006a18",
            "code": "\nbool check_bit_08006a18(byte input)\n\n{\n  return (*(unsigned_integer *)((((unsigned_integer)(integer)(character)input >> 5) + 0x40) * 4 + -0x1fff1f00) &\n         1 << (input & 0x1f)) != 0;\n}\n\n",
            "renaming": {
                "FUN_08006a18": "check_bit_08006a18",
                "param_1": "input",
                "uint": "unsigned_integer",
                "int": "integer",
                "char": "character"
            },
            "calling": [
                "FUN_08006de0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006a58": {
            "entrypoint": "0x08006a58",
            "current_name": "set_bit_in_memory_08006a58",
            "code": "\nvoid setBitInMemory_08006a58(byte inputByte)\n\n{\n  *(int *)((((uint)(int)(char)inputByte >> 5) + 0x40) * 4 + -0x1fff1f00) = 1 << (inputByte & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006a58": "set_bit_in_memory_08006a58",
                "param_1": "inputByte"
            },
            "calling": [
                "FUN_08006dc4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006a8c": {
            "entrypoint": "0x08006a8c",
            "current_name": "set_bit_in_memory_08006a8c",
            "code": "\nvoid setBitInMemory_08006a8c(byte inputByte)\n\n{\n  *(int *)((((uint)(int)(char)inputByte >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (inputByte & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006a8c": "set_bit_in_memory_08006a8c",
                "param_1": "inputByte"
            },
            "calling": [
                "FUN_08006dfe"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ac0": {
            "entrypoint": "0x08006ac0",
            "current_name": "check_bit_08006ac0",
            "code": "\nbool check_bit_08006ac0(byte input_byte)\n\n{\n  return (*(uint *)((((uint)(int)(char)input_byte >> 5) + 0x80) * 4 + -0x1fff1f00) &\n         1 << (input_byte & 0x1f)) != 0;\n}\n\n",
            "renaming": {
                "FUN_08006ac0": "check_bit_08006ac0",
                "param_1": "input_byte"
            },
            "calling": [
                "FUN_08006e1a"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b00": {
            "entrypoint": "0x08006b00",
            "current_name": "write_byte_08006b00",
            "code": "\nvoid writeByte_08006b00(byte inputByte,uint data)\n\n{\n  if ((char)inputByte < '\\0') {\n    *(char *)((inputByte & 0xf) + 0xe000ed14) = (char)((data & 0xff) << 4);\n  }\n  else {\n    *(char *)((char)inputByte + -0x1fff1c00) = (char)((data & 0xff) << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006b00": "write_byte_08006b00",
                "param_1": "inputByte",
                "param_2": "data"
            },
            "calling": [
                "FUN_08006c9c",
                "FUN_08006cf6"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b54": {
            "entrypoint": "0x08006b54",
            "current_name": "extracted_byte_08006b54",
            "code": "\nbyte extractedByte_08006b54(byte inputByte)\n\n{\n  byte outputByte;\n  \n  if ((char)inputByte < '\\0') {\n    outputByte = *(byte *)((inputByte & 0xf) + 0xe000ed14);\n  }\n  else {\n    outputByte = *(byte *)((char)inputByte + -0x1fff1c00);\n  }\n  return outputByte >> 4;\n}\n\n",
            "renaming": {
                "FUN_08006b54": "extracted_byte_08006b54",
                "param_1": "inputByte",
                "bVar1": "outputByte"
            },
            "calling": [
                "FUN_08006d98"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ba0": {
            "entrypoint": "0x08006ba0",
            "current_name": "truncate_and_shift_bits_08006ba0",
            "code": "\nuint truncateAndShiftBits_08006ba0(uint inputMask,uint valueMask,uint operand)\n\n{\n  uint shiftValue;\n  \n  inputMask = inputMask & 7;\n  shiftValue = 7 - inputMask;\n  if (3 < shiftValue) {\n    shiftValue = 4;\n  }\n  if (inputMask + 4 < 7) {\n    inputMask = 0;\n  }\n  else {\n    inputMask = inputMask - 3;\n  }\n  return operand & (1 << (inputMask & 0xff)) - 1U |\n         ((1 << (shiftValue & 0xff)) - 1U & valueMask) << (inputMask & 0xff);\n}\n\n",
            "renaming": {
                "FUN_08006ba0": "truncate_and_shift_bits_08006ba0",
                "param_1": "inputMask",
                "param_2": "valueMask",
                "param_3": "operand",
                "uVar1": "shiftValue"
            },
            "calling": [
                "FUN_08006cf6"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c04": {
            "entrypoint": "0x08006c04",
            "current_name": "extract_bits_08006c04",
            "code": "\nvoid extractBits_08006c04(uint input,uint numBitsToExtract,uint *output1,uint *output2)\n\n{\n  uint shiftAmount;\n  \n  numBitsToExtract = numBitsToExtract & 7;\n  shiftAmount = 7 - numBitsToExtract;\n  if (3 < shiftAmount) {\n    shiftAmount = 4;\n  }\n  if (numBitsToExtract + 4 < 7) {\n    numBitsToExtract = 0;\n  }\n  else {\n    numBitsToExtract = numBitsToExtract - 3;\n  }\n  *output1 = (1 << (shiftAmount & 0xff)) - 1U & input >> (numBitsToExtract & 0xff);\n  *output2 = (1 << (numBitsToExtract & 0xff)) - 1U & input;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006c04": "extract_bits_08006c04",
                "param_1": "input",
                "param_2": "numBitsToExtract",
                "param_3": "output1",
                "param_4": "output2",
                "uVar1": "shiftAmount"
            },
            "calling": [
                "FUN_08006d98"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c70": {
            "entrypoint": "0x08006c70",
            "current_name": "infinite_loop_08006c70",
            "code": "\nvoid infiniteLoop_08006c70(void)\n\n{\n  syncBarrier(0xf);\n  syncBarrier(0xf);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08006c70": "infinite_loop_08006c70",
                "DataSynchronizationBarrier": "syncBarrier"
            },
            "calling": [
                "FUN_08006d66"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c9c": {
            "entrypoint": "0x08006c9c",
            "current_name": "check_if_param_valid_08006c9c",
            "code": "\n\n\nbool checkIfParamValid_08006c9c(int inputParam)\n\n{\n  bool isParamValid;\n  \n  isParamValid = inputParam - 1U < 0x1000000;\n  if (isParamValid) {\n    _DAT_e000e014 = inputParam + -1;\n    FUN_08006b00(0xffffffff,0xf);\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n  }\n  return !isParamValid;\n}\n\n",
            "renaming": {
                "FUN_08006c9c": "check_if_param_valid_08006c9c",
                "param_1": "inputParam",
                "bVar1": "isParamValid"
            },
            "calling": [
                "FUN_08006d72"
            ],
            "called": [
                "FUN_08006b00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ce0": {
            "entrypoint": "0x08006ce0",
            "current_name": "initialize_function_08006ce0",
            "code": "\nvoid initializeFunction_08006ce0(undefined4 param)\n\n{\n  FUN_08006950(param);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006ce0": "initialize_function_08006ce0",
                "param_1": "param"
            },
            "calling": [
                "FUN_080059b4"
            ],
            "called": [
                "FUN_08006950"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006cf6": {
            "entrypoint": "0x08006cf6",
            "current_name": "process_data_08006cf6",
            "code": "\nvoid processData_08006cf6(char inputChar,undefined4 param2,undefined4 param3)\n\n{\n  undefined4 result;\n  \n  result = FUN_08006998();\n  result = FUN_08006ba0(result,param2,param3);\n  FUN_08006b00((int)inputChar,result);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006cf6": "process_data_08006cf6",
                "param_1": "inputChar",
                "param_2": "param2",
                "param_3": "param3",
                "uVar1": "result"
            },
            "calling": [
                "FUN_08007a70"
            ],
            "called": [
                "FUN_08006998",
                "FUN_08006b00",
                "FUN_08006ba0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d2e": {
            "entrypoint": "0x08006d2e",
            "current_name": "initialize_08006d2e",
            "code": "\nvoid initialize_08006d2e(char character)\n\n{\n  FUN_080069b4((int)character);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d2e": "initialize_08006d2e",
                "param_1": "character"
            },
            "calling": [],
            "called": [
                "FUN_080069b4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d4a": {
            "entrypoint": "0x08006d4a",
            "current_name": "initialize_parameter_08006d4a",
            "code": "\nvoid initializeParameter_08006d4a(char inputParameter)\n\n{\n  FUN_080069e4((int)inputParameter);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d4a": "initialize_parameter_08006d4a",
                "param_1": "inputParameter"
            },
            "calling": [],
            "called": [
                "FUN_080069e4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d66": {
            "entrypoint": "0x08006d66",
            "current_name": "initialize_system_08006d66",
            "code": "\nvoid initializeSystem_08006d66(void)\n\n{\n  FUN_08006c70();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d66": "initialize_system_08006d66"
            },
            "calling": [],
            "called": [
                "FUN_08006c70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d72": {
            "entrypoint": "0x08006d72",
            "current_name": "process_08006d72",
            "code": "\nundefined4 process_08006d72(undefined4 input)\n\n{\n  undefined4 result;\n  \n  result = FUN_08006c9c(input);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08006d72": "process_08006d72",
                "param_1": "input",
                "uVar1": "result"
            },
            "calling": [
                "FUN_080059b4"
            ],
            "called": [
                "FUN_08006c9c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d8a": {
            "entrypoint": "0x08006d8a",
            "current_name": "initialize_system_08006d8a",
            "code": "\nundefined4 initializeSystem_08006d8a(void)\n\n{\n  undefined4 result;\n  \n  result = FUN_08006998();\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08006d8a": "initialize_system_08006d8a",
                "uVar1": "result"
            },
            "calling": [],
            "called": [
                "FUN_08006998"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d98": {
            "entrypoint": "0x08006d98",
            "current_name": "execute_function_08006d98",
            "code": "\nvoid executeFunction_08006d98(char character,undefined4 parameter1,undefined4 parameter2,undefined4 parameter3)\n\n{\n  undefined4 result;\n  \n  result = FUN_08006b54((int)character);\n  FUN_08006c04(result,parameter1,parameter2,parameter3);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d98": "execute_function_08006d98",
                "param_1": "character",
                "param_2": "parameter1",
                "param_3": "parameter2",
                "param_4": "parameter3",
                "uVar1": "result"
            },
            "calling": [],
            "called": [
                "FUN_08006b54",
                "FUN_08006c04"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006dc4": {
            "entrypoint": "0x08006dc4",
            "current_name": "execute_function_08006dc4",
            "code": "\nvoid executeFunction_08006dc4(char inputParam)\n\n{\n  FUN_08006a58((int)inputParam);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006dc4": "execute_function_08006dc4",
                "param_1": "inputParam"
            },
            "calling": [],
            "called": [
                "FUN_08006a58"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006de0": {
            "entrypoint": "0x08006de0",
            "current_name": "convert_char_to_unsigned_08006de0",
            "code": "\nundefined4 convertCharToUnsigned_08006de0(char inputChar)\n\n{\n  undefined4 convertedValue;\n  \n  convertedValue = FUN_08006a18((int)inputChar);\n  return convertedValue;\n}\n\n",
            "renaming": {
                "FUN_08006de0": "convert_char_to_unsigned_08006de0",
                "param_1": "inputChar",
                "uVar1": "convertedValue"
            },
            "calling": [],
            "called": [
                "FUN_08006a18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006dfe": {
            "entrypoint": "0x08006dfe",
            "current_name": "initialize_function_08006dfe",
            "code": "\nvoid initializeFunction_08006dfe(char inputParam)\n\n{\n  FUN_08006a8c((int)inputParam);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006dfe": "initialize_function_08006dfe",
                "param_1": "inputParam"
            },
            "calling": [],
            "called": [
                "FUN_08006a8c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e1a": {
            "entrypoint": "0x08006e1a",
            "current_name": "decode_char_08006e1a",
            "code": "\nundefined4 decodeChar_08006e1a(char inputChar)\n\n{\n  undefined4 decodedValue;\n  \n  decodedValue = FUN_08006ac0((int)inputChar);\n  return decodedValue;\n}\n\n",
            "renaming": {
                "FUN_08006e1a": "decode_char_08006e1a",
                "param_1": "inputChar",
                "uVar1": "decodedValue"
            },
            "calling": [],
            "called": [
                "FUN_08006ac0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e88": {
            "entrypoint": "0x08006e88",
            "current_name": "update_bits_08006e88",
            "code": "\n\n\nvoid updateBits_08006e88(uint *bitArray1,uint *bitArray2)\n\n{\n  uint mask;\n  uint bit;\n  int index;\n  uint bitIndex;\n  \n  for (bitIndex = 0; bitIndex < 0x10; bitIndex = bitIndex + 1) {\n    mask = 1 << (bitIndex & 0xff);\n    bit = *bitArray2 & mask;\n    if (bit == mask) {\n      if ((bitArray2[1] == 2) || (bitArray2[1] == 0x12)) {\n        mask = bitArray2[4];\n        bitArray1[(bitIndex >> 3) + 8] = bitArray1[(bitIndex >> 3) + 8] & ~(0xf << ((bitIndex & 7) << 2));\n        bitArray1[(bitIndex >> 3) + 8] = bitArray1[(bitIndex >> 3) + 8] | mask << ((bitIndex & 7) << 2);\n      }\n      *bitArray1 = *bitArray1 & ~(3 << ((bitIndex & 0x7f) << 1));\n      *bitArray1 = *bitArray1 | (bitArray2[1] & 3) << ((bitIndex & 0x7f) << 1);\n      if ((((bitArray2[1] == 1) || (bitArray2[1] == 2)) || (bitArray2[1] == 0x11)) || (bitArray2[1] == 0x12)\n         ) {\n        bitArray1[2] = bitArray1[2] & ~(3 << ((bitIndex & 0x7f) << 1));\n        bitArray1[2] = bitArray1[2] | bitArray2[3] << ((bitIndex & 0x7f) << 1);\n        bitArray1[1] = bitArray1[1] & ~(1 << (bitIndex & 0xff));\n        bitArray1[1] = bitArray1[1] | (bitArray2[1] >> 4 & 1) << (bitIndex & 0xff);\n      }\n      bitArray1[3] = bitArray1[3] & ~(3 << ((bitIndex & 0x7f) << 1));\n      bitArray1[3] = bitArray1[3] | bitArray2[2] << ((bitIndex & 0x7f) << 1);\n      if ((bitArray2[1] & 0x10000000) != 0) {\n        _DAT_40023844 = _DAT_40023844 | 0x4000;\n        *(uint *)(((bitIndex >> 2) + 2) * 4 + 0x40013800) =\n             ~(0xf << ((bitIndex & 3) << 2)) & *(uint *)(((bitIndex >> 2) + 2) * 4 + 0x40013800);\n        if (bitArray1 == (uint *)0x40020000) {\n          index = 0;\n        }\n        else if (bitArray1 == (uint *)0x40020400) {\n          index = 1;\n        }\n        else if (bitArray1 == (uint *)0x40020800) {\n          index = 2;\n        }\n        else if (bitArray1 == (uint *)0x40020c00) {\n          index = 3;\n        }\n        else if (bitArray1 == (uint *)0x40021000) {\n          index = 4;\n        }\n        else if (bitArray1 == (uint *)0x40021400) {\n          index = 5;\n        }\n        else if (bitArray1 == (uint *)0x40021800) {\n          index = 6;\n        }\n        else if (bitArray1 == (uint *)0x40021c00) {\n          index = 7;\n        }\n        else if (bitArray1 == (uint *)0x40022000) {\n          index = 8;\n        }\n        else if (bitArray1 == (uint *)0x40022400) {\n          index = 9;\n        }\n        else {\n          index = 10;\n        }\n        *(uint *)(((bitIndex >> 2) + 2) * 4 + 0x40013800) =\n             index << ((bitIndex & 3) << 2) | *(uint *)(((bitIndex >> 2) + 2) * 4 + 0x40013800);\n        _DAT_40013c00 = ~bit & _DAT_40013c00;\n        _DAT_40013c04 = ~bit & _DAT_40013c04;\n        if ((bitArray2[1] & 0x10000) != 0) {\n          _DAT_40013c00 = bit | _DAT_40013c00;\n        }\n        if ((bitArray2[1] & 0x20000) != 0) {\n          _DAT_40013c04 = bit | _DAT_40013c04;\n        }\n        _DAT_40013c08 = ~bit & _DAT_40013c08;\n        _DAT_40013c0c = ~bit & _DAT_40013c0c;\n        if ((bitArray2[1] & 0x100000) != 0) {\n          _DAT_40013c08 = bit | _DAT_40013c08;\n        }\n        if ((bitArray2[1] & 0x200000) != 0) {\n          _DAT_40013c0c = bit | _DAT_40013c0c;\n        }\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006e88": "update_bits_08006e88",
                "param_1": "bitArray1",
                "param_2": "bitArray2",
                "uVar1": "mask",
                "uVar2": "bit",
                "iVar3": "index",
                "local_c": "bitIndex"
            },
            "calling": [
                "FUN_0800640c",
                "FUN_0800778c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800733e": {
            "entrypoint": "0x0800733e",
            "current_name": "update_param_0800733e",
            "code": "\nvoid updateParam_0800733e(int baseAddress,undefined2 newData,char isZero)\n\n{\n  if (isZero == '\\0') {\n    *(undefined2 *)(baseAddress + 0x1a) = newData;\n  }\n  else {\n    *(undefined2 *)(baseAddress + 0x18) = newData;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800733e": "update_param_0800733e",
                "param_1": "baseAddress",
                "param_2": "newData",
                "param_3": "isZero"
            },
            "calling": [
                "FUN_0800778c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800738e": {
            "entrypoint": "0x0800738e",
            "current_name": "update_and_call_function_0800738e",
            "code": "\n\n\nvoid update_and_call_function_0800738e(ushort input_value)\n\n{\n  if ((input_value & _DAT_40013c14) != 0) {\n    _DAT_40013c14 = (uint)input_value;\n    FUNC_080073c0(input_value);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800738e": "update_and_call_function_0800738e",
                "param_1": "input_value"
            },
            "calling": [],
            "called": [
                "FUN_080073c0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073c0": {
            "entrypoint": "0x080073c0",
            "current_name": "FUNC_080073c0",
            "code": "\nvoid FUNC_080073c0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080073c0": "FUNC_080073c0"
            },
            "calling": [
                "FUN_0800738e"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080073d4": {
            "entrypoint": "0x080073d4",
            "current_name": "update_bit_080073d4",
            "code": "\nvoid updateBit_080073d4(uint inputValue)\n\n{\n  *(short *)((scaledValue >> 4) * 0x400 + 0x4002001a) = (short)(1 << (inputValue & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_080073d4": "update_bit_080073d4",
                "param_1": "inputValue",
                "(int)param_1": "scaledValue"
            },
            "calling": [
                "FUN_08007520"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007402": {
            "entrypoint": "0x08007402",
            "current_name": "update_bitmask_08007402",
            "code": "\nvoid updateBitmask_08007402(uint input)\n\n{\n  *(short *)(((int)input >> 4) * 0x400 + 0x40020018) = (short)(1 << (input & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007402": "update_bitmask_08007402",
                "param_1": "input"
            },
            "calling": [
                "FUN_080074c8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007430": {
            "entrypoint": "0x08007430",
            "current_name": "infinite_loop_08007430",
            "code": "\nvoid infiniteLoop_08007430(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08007430": "infinite_loop_08007430"
            },
            "calling": [
                "FUN_08007436"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007436": {
            "entrypoint": "0x08007436",
            "current_name": "initialize_system_08007436",
            "code": "\n\n\nvoid initializeSystem_08007436(void)\n\n{\n  int result;\n  undefined4 flag1;\n  undefined4 flag2;\n  undefined4 value1;\n  undefined4 address;\n  undefined4 value2;\n  undefined4 value3;\n  undefined4 value4;\n  undefined4 value5;\n  undefined4 option1;\n  undefined4 option2;\n  undefined4 option3;\n  undefined4 size1;\n  undefined4 size2;\n  \n  _DAT_40023840 = _DAT_40023840 | 0x10000000;\n  _DAT_40007000 = _DAT_40007000 | 0xc000;\n  flag1 = 1;\n  flag2 = 1;\n  value1 = 2;\n  address = 0x400000;\n  value2 = 8;\n  value3 = 0x150;\n  value4 = 2;\n  value5 = 7;\n  result = FUN_08005cec(&flag1);\n  if (result != 0) {\n    FUN_08007430();\n  }\n  option1 = 0xf;\n  option2 = 2;\n  option3 = 0;\n  size1 = 0x1400;\n  size2 = 0x1000;\n  result = FUN_0800618c(&option1,5);\n  if (result != 0) {\n    FUN_08007430();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007436": "initialize_system_08007436",
                "local_4c": "flag1",
                "local_48": "flag2",
                "local_34": "value1",
                "local_30": "address",
                "local_2c": "value2",
                "local_28": "value3",
                "local_24": "value4",
                "local_20": "value5",
                "local_1c": "option1",
                "local_18": "option2",
                "local_14": "option3",
                "local_10": "size1",
                "local_c": "size2",
                "iVar1": "result"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_0800618c",
                "FUN_08007430",
                "FUN_08005cec"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080074c8": {
            "entrypoint": "0x080074c8",
            "current_name": "execute_function_based_on_flag_080074c8",
            "code": "\nvoid executeFunctionBasedOnFlag_080074c8(uint flag)\n\n{\n  if ((flag & 1) != 0) {\n    FUN_08007402(0x3e);\n  }\n  if ((DAT_20000e4c != 0) && ((flag & 0x1e) != 0)) {\n    FUN_0800195c();\n  }\n  if ((DAT_20000e50 != 0) && ((flag & 0x80) != 0)) {\n    FUN_08003a18(flag);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080074c8": "execute_function_based_on_flag_080074c8",
                "param_1": "flag"
            },
            "calling": [
                "FUN_08007930"
            ],
            "called": [
                "FUN_0800195c",
                "FUN_08007402",
                "FUN_08003a18"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007520": {
            "entrypoint": "0x08007520",
            "current_name": "check_and_call_function_08007520",
            "code": "\nvoid checkAndCallFunction_08007520(uint input)\n\n{\n  if ((input & 1) != 0) {\n    FUN_080073d4(0x3e);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007520": "check_and_call_function_08007520",
                "param_1": "input"
            },
            "calling": [
                "FUN_08007930"
            ],
            "called": [
                "FUN_080073d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007540": {
            "entrypoint": "0x08007540",
            "current_name": "initialize_application_08007540",
            "code": "\nundefined4 initialize_application_08007540(void)\n\n{\n  FUN_080059b4();\n  FUN_08007436();\n  FUN_0800778c();\n  FUN_08007e08();\n  FUN_080079c0();\n  FUN_08008190();\n  FUN_08005984(0);\n  FUN_08001ddc();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007540": "initialize_application_08007540"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_080059b4",
                "FUN_08007e08",
                "FUN_0800778c",
                "FUN_08005984",
                "FUN_08007436",
                "FUN_08008190",
                "FUN_080079c0",
                "FUN_08001ddc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800756c": {
            "entrypoint": "0x0800756c",
            "current_name": "initialize_hardware_0800756c",
            "code": "\n\n\nvoid initializeHardware_0800756c(void)\n\n{\n  _DAT_40023808 = 0;\n  _DAT_40023804 = 0x24003010;\n  _DAT_40023800 = _DAT_40023800 & 0xfef2ffff | 1;\n  _DAT_4002380c = 0;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800756c": "initialize_hardware_0800756c"
            },
            "calling": [
                "entry"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080076c8": {
            "entrypoint": "0x080076c8",
            "current_name": "update_bit_value_080076c8",
            "code": "\nvoid updateBitValue_080076c8(uint inputValue)\n\n{\n  *(uint *)(((int)inputValue >> 4) * 0x400 + 0x40020014) =\n       *(uint *)(((int)inputValue >> 4) * 0x400 + 0x40020014) ^ 1 << (inputValue & 0xf);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080076c8": "update_bit_value_080076c8",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08007756"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007756": {
            "entrypoint": "0x08007756",
            "current_name": "check_and_execute_operations_08007756",
            "code": "\nvoid checkAndExecuteOperations_08007756(void)\n\n{\n  uint result;\n  \n  result = FUN_08005a84();\n  if ((result & 0x1ff) == 0) {\n    FUN_080076c8(0x3c);\n  }\n  if ((result & 0xf) == 0) {\n    FUN_08007930();\n  }\n  FUN_08005a68();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007756": "check_and_execute_operations_08007756",
                "uVar1": "result"
            },
            "calling": [],
            "called": [
                "FUN_08005a68",
                "FUN_08007930",
                "FUN_08005a84",
                "FUN_080076c8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800778c": {
            "entrypoint": "0x0800778c",
            "current_name": "initialize_settings_0800778c",
            "code": "\n\n\nvoid initializeSettings_0800778c(void)\n\n{\n  int offset;\n  int bitMask;\n  undefined4 value1;\n  undefined4 value2;\n  undefined4 value3;\n  undefined4 value4;\n  uint *dataPointer;\n  uint index;\n  \n  for (index = 0; index < 0x11; index = index + 1) {\n    offset = index * 0x18;\n    dataPointer = (uint *)(&DAT_0800bcbc + offset);\n    _DAT_40023830 = _DAT_40023830 | 1 << (*dataPointer >> 4 & 0xff);\n    bitMask = 1 << (*dataPointer & 0xf);\n    value1 = *(undefined4 *)(&DAT_0800bcc0 + offset);\n    value2 = *(undefined4 *)(&DAT_0800bcc4 + offset);\n    value3 = *(undefined4 *)(&DAT_0800bcc8 + offset);\n    value4 = *(undefined4 *)(&DAT_0800bccc + offset);\n    FUN_08006e88(((*dataPointer >> 4) + 0x100080) * 0x400,&bitMask);\n    if (-1 < (int)dataPointer[5]) {\n      FUN_0800733e(((*dataPointer >> 4) + 0x100080) * 0x400,1 << (*dataPointer & 0xf) & 0xffff,\n                   dataPointer[5] & 0xff);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800778c": "initialize_settings_0800778c",
                "local_c": "index",
                "local_10": "dataPointer",
                "local_24": "bitMask",
                "local_20": "value1",
                "local_1c": "value2",
                "local_18": "value3",
                "local_14": "value4",
                "iVar1": "offset"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_08006e88",
                "FUN_0800733e"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007854": {
            "entrypoint": "0x08007854",
            "current_name": "check_bit_08007854",
            "code": "\nuint check_bit_08007854(uint input_num)\n\n{\n  return *(uint *)(((int)input_num >> 4) * 0x400 + 0x40020010) >> (input_num & 0xf) & 1;\n}\n\n",
            "renaming": {
                "FUN_08007854": "check_bit_08007854",
                "param_1": "input_num"
            },
            "calling": [
                "FUN_08007884"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007884": {
            "entrypoint": "0x08007884",
            "current_name": "get_combined_flags_08007884",
            "code": "\nuint getCombinedFlags_08007884(void)\n\n{\n  int flag1;\n  int flag2;\n  int flag3;\n  int flag4;\n  int flag5;\n  uint flag0;\n  \n  flag1 = FUN_08007854(0x36);\n  flag2 = FUN_08007854(0x37);\n  flag3 = FUN_08007854(0x38);\n  flag4 = FUN_08007854(0x39);\n  flag5 = FUN_08007854(0xf);\n  flag0 = FUN_08007854(0);\n  return flag0 | flag1 << 4 | flag2 << 3 | flag3 << 2 | flag4 << 1 | flag5 << 7;\n}\n\n",
            "renaming": {
                "FUN_08007884": "get_combined_flags_08007884",
                "iVar1": "flag1",
                "iVar2": "flag2",
                "iVar3": "flag3",
                "iVar4": "flag4",
                "iVar5": "flag5",
                "uVar6": "flag0"
            },
            "calling": [
                "FUN_08007930"
            ],
            "called": [
                "FUN_08007854"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080078f4": {
            "entrypoint": "0x080078f4",
            "current_name": "calculate_combined_value_080078f4",
            "code": "\nuint calculateCombinedValue_080078f4(void)\n\n{\n  int index;\n  uint combinedValue;\n  \n  combinedValue = 0;\n  for (index = 0; index < 4; index = index + 1) {\n    combinedValue = *(uint *)(&DAT_20000e54 + index * 4) | combinedValue;\n  }\n  return combinedValue;\n}\n\n",
            "renaming": {
                "FUN_080078f4": "calculate_combined_value_080078f4",
                "local_10": "index",
                "local_c": "combinedValue"
            },
            "calling": [
                "FUN_08007930",
                "FUN_08001994"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007930": {
            "entrypoint": "0x08007930",
            "current_name": "update_data_08007930",
            "code": "\nvoid updateData_08007930(void)\n\n{\n  int index;\n  uint backupData;\n  undefined4 returnValue;\n  uint newData;\n  uint changedBits;\n  \n  index = DAT_20000e68;\n  backupData = DAT_20000e64;\n  if (DAT_20000e6c != 0) {\n    returnValue = FUN_08007884();\n    *(undefined4 *)(&DAT_20000e54 + index * 4) = returnValue;\n    if (DAT_20000e68 == 3) {\n      DAT_20000e68 = 0;\n    }\n    else {\n      DAT_20000e68 = DAT_20000e68 + 1;\n    }\n    newData = FUN_080078f4();\n    backupData = DAT_20000e64;\n    if (newData != DAT_20000e64) {\n      changedBits = ~newData & DAT_20000e64;\n      if ((~DAT_20000e64 & newData) != 0) {\n        FUN_080074c8(~DAT_20000e64 & newData);\n      }\n      backupData = newData;\n      if (changedBits != 0) {\n        FUN_08007520(changedBits);\n      }\n    }\n  }\n  DAT_20000e64 = backupData;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007930": "update_data_08007930",
                "iVar1": "index",
                "uVar2": "backupData",
                "uVar3": "returnValue",
                "uVar4": "newData",
                "uVar5": "changedBits"
            },
            "calling": [
                "FUN_08007756"
            ],
            "called": [
                "FUN_080074c8",
                "FUN_080078f4",
                "FUN_08007884",
                "FUN_08007520"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080079c0": {
            "entrypoint": "0x080079c0",
            "current_name": "initialize_data_080079c0",
            "code": "\nvoid initializeData_080079c0(void)\n\n{\n  FUN_0800b430(&DAT_20000e54,0,0x18);\n  DAT_20000e6c = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080079c0": "initialize_data_080079c0"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_0800b430"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080079e0": {
            "entrypoint": "0x080079e0",
            "current_name": "set_bit_at_index_080079e0",
            "code": "\nvoid setBitAtIndex_080079e0(byte inputByte)\n\n{\n  *(int *)((unsignedInputByte >> 5) * 4 + -0x1fff1f00) = 1 << (inputByte & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080079e0": "set_bit_at_index_080079e0",
                "param_1": "inputByte",
                "(uint)(int)(char)param_1": "unsignedInputByte"
            },
            "calling": [
                "FUN_08007a70"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007a10": {
            "entrypoint": "0x08007a10",
            "current_name": "update_data_flag_08007a10",
            "code": "\n\n\nvoid updateDataFlag_08007a10(undefined *dataPointer)\n\n{\n  if (dataPointer == (undefined *)0x40000000) {\n    _DAT_40023840 = _DAT_40023840 | 1;\n  }\n  else if (dataPointer == (undefined *)0x40000400) {\n    _DAT_40023840 = _DAT_40023840 | 2;\n  }\n  else if (dataPointer == &DAT_40000800) {\n    _DAT_40023840 = _DAT_40023840 | 4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007a10": "update_data_flag_08007a10",
                "param_1": "dataPointer"
            },
            "calling": [
                "FUN_08007d08",
                "FUN_08007ad0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007a70": {
            "entrypoint": "0x08007a70",
            "current_name": "check_and_execute_08007a70",
            "code": "\nvoid checkAndExecute_08007a70(undefined *inputPtr,undefined4 param2,undefined4 param3)\n\n{\n  undefined resultCode;\n  \n  if (inputPtr == (undefined *)0x40000000) {\n    resultCode = 0x1c;\n  }\n  else if (inputPtr == (undefined *)0x40000400) {\n    resultCode = 0x1d;\n  }\n  else {\n    if (inputPtr != &DAT_40000800) {\n      return;\n    }\n    resultCode = 0x1e;\n  }\n  FUN_08006cf6(resultCode,param2,param3);\n  FUN_080079e0(resultCode);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007a70": "check_and_execute_08007a70",
                "param_1": "inputPtr",
                "param_2": "param2",
                "param_3": "param3",
                "local_c": "resultCode"
            },
            "calling": [
                "FUN_08007ad0"
            ],
            "called": [
                "FUN_080079e0",
                "FUN_08006cf6"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007ad0": {
            "entrypoint": "0x08007ad0",
            "current_name": "initialize_memory_08007ad0",
            "code": "\n\n\nvoid initializeMemory_08007ad0(void)\n\n{\n  FUN_08007a10(0x40000000);\n  _DAT_40000000 = 0;\n  _DAT_40000004 = 0;\n  _DAT_40000008 = 0;\n  _DAT_4000000c = 0;\n  _DAT_40000010 = 0;\n  _DAT_40000018 = 0;\n  _DAT_4000001c = 0;\n  _DAT_40000020 = 0;\n  _DAT_40000024 = 0;\n  _DAT_40000028 = DAT_20000000 / 42000000 - 1;\n  _DAT_4000002c = 0;\n  _DAT_40000034 = 0;\n  _DAT_40000038 = 0;\n  _DAT_4000003c = 0;\n  _DAT_40000040 = 0;\n  _DAT_40000048 = 0;\n  _DAT_4000004c = 0;\n  FUN_08007a70(0x40000000,0,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007ad0": "initialize_memory_08007ad0"
            },
            "calling": [
                "FUN_08007e08"
            ],
            "called": [
                "FUN_08007a10",
                "FUN_08007a70"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007b70": {
            "entrypoint": "0x08007b70",
            "current_name": "update_flags_08007b70",
            "code": "\n\n\nvoid updateFlags_08007b70(void)\n\n{\n  uint flagValue;\n  \n  flagValue = 1;\n  if (_DAT_40000034 != 0) {\n    flagValue = 3;\n  }\n  if (_DAT_40000038 != 0) {\n    flagValue = flagValue | 4;\n  }\n  _DAT_4000000c = _DAT_4000000c | flagValue;\n  _DAT_40000000 = _DAT_40000000 | 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007b70": "update_flags_08007b70",
                "local_c": "flagValue"
            },
            "calling": [
                "FUN_08005790"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007bc2": {
            "entrypoint": "0x08007bc2",
            "current_name": "clear_flags_08007bc2",
            "code": "\n\n\nvoid clearFlags_08007bc2(void)\n\n{\n  _DAT_40000000 = _DAT_40000000 & 0xfffffffe;\n  _DAT_4000000c = _DAT_4000000c & 0xfffffff8;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007bc2": "clear_flags_08007bc2"
            },
            "calling": [
                "FUN_080057e4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007bf0": {
            "entrypoint": "0x08007bf0",
            "current_name": "update_data_08007bf0",
            "code": "\n\n\nvoid update_data_08007bf0(uint new_value)\n\n{\n  _DAT_4000002c = new_value;\n  if (new_value <= _DAT_40000024) {\n    _DAT_40000024 = new_value;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007bf0": "update_data_08007bf0",
                "param_1": "new_value"
            },
            "calling": [
                "FUN_08005324"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007c40": {
            "entrypoint": "0x08007c40",
            "current_name": "initialize_param_08007c40",
            "code": "\n\n\nvoid initializeParam_08007c40(undefined4 newValue)\n\n{\n  _DAT_40000034 = newValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007c40": "initialize_param_08007c40",
                "param_1": "newValue"
            },
            "calling": [
                "FUN_08005790"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007c5e": {
            "entrypoint": "0x08007c5e",
            "current_name": "set_global_data_08007c5e",
            "code": "\n\n\nvoid setGlobalData_08007c5e(undefined4 data)\n\n{\n  _DAT_40000038 = data;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007c5e": "set_global_data_08007c5e",
                "param_1": "data"
            },
            "calling": [
                "FUN_08005790"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007c7c": {
            "entrypoint": "0x08007c7c",
            "current_name": "update_flags_and_call_functions_08007c7c",
            "code": "\n\n\nvoid updateFlagsAndCallFunctions_08007c7c(void)\n\n{\n  if (((_DAT_40000010 & 2) != 0) && ((_DAT_4000000c & 2) != 0)) {\n    _DAT_40000010 = _DAT_40000010 & 0xfffffffd;\n    FUN_08005778();\n  }\n  if (((_DAT_40000010 & 4) != 0) && ((_DAT_4000000c & 4) != 0)) {\n    _DAT_40000010 = _DAT_40000010 & 0xfffffffb;\n    FUN_08005760();\n  }\n  if (((_DAT_40000010 & 1) != 0) && ((_DAT_4000000c & 1) != 0)) {\n    _DAT_40000010 = _DAT_40000010 & 0xfffffffe;\n    FUN_080053a0();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007c7c": "update_flags_and_call_functions_08007c7c"
            },
            "calling": [],
            "called": [
                "FUN_080053a0",
                "FUN_08005778",
                "FUN_08005760"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007d08": {
            "entrypoint": "0x08007d08",
            "current_name": "initialize_hardware_08007d08",
            "code": "\n\n\nvoid initializeHardware_08007d08(void)\n\n{\n  FUN_08007a10(&DAT_40000800);\n  _DAT_40000800 = 0x80;\n  _DAT_40000804 = 0;\n  _DAT_40000808 = 0;\n  _DAT_4000080c = 0;\n  _DAT_40000810 = 0;\n  _DAT_40000818 = 0x6800;\n  _DAT_4000081c = 0;\n  _DAT_40000820 = 0;\n  _DAT_40000824 = 0;\n  _DAT_40000828 = DAT_20000000 / 4800000 - 1;\n  _DAT_4000082c = 199;\n  _DAT_40000834 = 0;\n  _DAT_40000838 = 100;\n  _DAT_4000083c = 0;\n  _DAT_40000840 = 0;\n  _DAT_40000848 = 0;\n  _DAT_4000084c = 0;\n  _DAT_40000814 = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007d08": "initialize_hardware_08007d08"
            },
            "calling": [
                "FUN_08007e08"
            ],
            "called": [
                "FUN_08007a10"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007da8": {
            "entrypoint": "0x08007da8",
            "current_name": "set_flags_and_values_08007da8",
            "code": "\n\n\nvoid setFlagsAndValues_08007da8(void)\n\n{\n  _DAT_40000820 = _DAT_40000820 | 0x10;\n  _DAT_40000800 = _DAT_40000800 | 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007da8": "set_flags_and_values_08007da8"
            },
            "calling": [
                "FUN_08007e08"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e08": {
            "entrypoint": "0x08007e08",
            "current_name": "execute_initial_setup_08007e08",
            "code": "\nvoid executeInitialSetup_08007e08(void)\n\n{\n  FUN_08007ad0();\n  FUN_08007d08();\n  FUN_08007da8();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007e08": "execute_initial_setup_08007e08"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_08007d08",
                "FUN_08007da8",
                "FUN_08007ad0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e1c": {
            "entrypoint": "0x08007e1c",
            "current_name": "wait_for_memory_write_08007e1c",
            "code": "\n\n\nvoid waitForMemoryWrite_08007e1c(byte data)\n\n{\n  do {\n  } while ((_DAT_40004400 & 0x80) == 0);\n  _DAT_40004404 = (uint)data;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007e1c": "wait_for_memory_write_08007e1c",
                "param_1": "data"
            },
            "calling": [
                "FUN_0800826a",
                "FUN_08008250"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e58": {
            "entrypoint": "0x08007e58",
            "current_name": "check_flag_set_08007e58",
            "code": "\n\n\nbool checkFlagSet_08007e58(void)\n\n{\n  return (_DAT_40004400 & 0x20) != 0;\n}\n\n",
            "renaming": {
                "FUN_08007e58": "check_flag_set_08007e58"
            },
            "calling": [
                "FUN_08008286"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e84": {
            "entrypoint": "0x08007e84",
            "current_name": "get_lowest_byte_08007e84",
            "code": "\n\n\nuint get_lowest_byte_08007e84(void)\n\n{\n  return _DAT_40004404 & 0xff;\n}\n\n",
            "renaming": {
                "FUN_08007e84": "get_lowest_byte_08007e84"
            },
            "calling": [
                "FUN_08008286"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007ea4": {
            "entrypoint": "0x08007ea4",
            "current_name": "update_memory_flags_08007ea4",
            "code": "\n\n\nvoid updateMemoryFlags_08007ea4(undefined *memoryAddress)\n\n{\n  if (memoryAddress == (undefined *)0x40011000) {\n    _DAT_40023844 = _DAT_40023844 | 0x10;\n  }\n  else if (memoryAddress == &DAT_40004400) {\n    _DAT_40023840 = _DAT_40023840 | 0x20000;\n  }\n  else if (memoryAddress == (undefined *)0x40004800) {\n    _DAT_40023840 = _DAT_40023840 | 0x40000;\n  }\n  else if (memoryAddress == (undefined *)0x40004c00) {\n    _DAT_40023840 = _DAT_40023840 | 0x80000;\n  }\n  else if (memoryAddress == (undefined *)0x40005000) {\n    _DAT_40023840 = _DAT_40023840 | 0x100000;\n  }\n  else if (memoryAddress == (undefined *)0x40011400) {\n    _DAT_40023844 = _DAT_40023844 | 0x20;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007ea4": "update_memory_flags_08007ea4",
                "param_1": "memoryAddress"
            },
            "calling": [
                "FUN_08008190"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f54": {
            "entrypoint": "0x08007f54",
            "current_name": "calculate_value_08007f54",
            "code": "\nvoid calculateValue_08007f54(int inputValue,int shiftAmount)\n\n{\n  ulonglong value1;\n  int value2;\n  int value3;\n  undefined8 result;\n  \n  if ((*(uint *)(inputValue + 0xc) & 0x8000) == 0) {\n    if ((inputValue != 0x40011000) && (inputValue != 0x40011400)) {\n      result = FUN_08006680();\n      value1 = (ulonglong)(uint)((int)result * 0x19) / (ulonglong)(uint)(shiftAmount << 2);\n      value2 = FUN_08006680((int)result,(int)((ulonglong)result >> 0x20),(int)(value1 * 0x51eb851f));\n      value3 = FUN_08006680();\n      *(uint *)(inputValue + 8) =\n           (int)(value1 / 100) << 4 |\n           (((uint)(value2 * 0x19) / (uint)(shiftAmount << 2) +\n            (int)(((ulonglong)(uint)(value3 * 0x19) / (ulonglong)(uint)(shiftAmount << 2)) / 100) * -100)\n            * 0x10 + 0x32) / 100 & 0xf;\n      return;\n    }\n    result = FUN_080066cc();\n    value1 = (ulonglong)(uint)((int)result * 0x19) / (ulonglong)(uint)(shiftAmount << 2);\n    value2 = FUN_080066cc((int)result,(int)((ulonglong)result >> 0x20),(int)(value1 * 0x51eb851f));\n    value3 = FUN_080066cc();\n    *(uint *)(inputValue + 8) =\n         (int)(value1 / 100) << 4 |\n         (((uint)(value2 * 0x19) / (uint)(shiftAmount << 2) +\n          (int)(((ulonglong)(uint)(value3 * 0x19) / (ulonglong)(uint)(shiftAmount << 2)) / 100) * -100) *\n          0x10 + 0x32) / 100 & 0xf;\n  }\n  else {\n    if ((inputValue != 0x40011000) && (inputValue != 0x40011400)) {\n      result = FUN_08006680();\n      value1 = (ulonglong)(uint)((int)result * 0x19) / (ulonglong)(uint)(shiftAmount << 1);\n      value2 = FUN_08006680((int)result,(int)((ulonglong)result >> 0x20),(int)(value1 * 0x51eb851f));\n      value3 = FUN_08006680();\n      *(uint *)(inputValue + 8) =\n           (int)(value1 / 100) << 4 |\n           (((uint)(value2 * 0x19) / (uint)(shiftAmount << 1) +\n            (int)(((ulonglong)(uint)(value3 * 0x19) / (ulonglong)(uint)(shiftAmount << 1)) / 100) * -100)\n            * 0x10 + 0x32) / 100 & 0xf;\n      return;\n    }\n    result = FUN_080066cc();\n    value1 = (ulonglong)(uint)((int)result * 0x19) / (ulonglong)(uint)(shiftAmount << 1);\n    value2 = FUN_080066cc((int)result,(int)((ulonglong)result >> 0x20),(int)(value1 * 0x51eb851f));\n    value3 = FUN_080066cc();\n    *(uint *)(inputValue + 8) =\n         (int)(value1 / 100) << 4 |\n         (((uint)(value2 * 0x19) / (uint)(shiftAmount << 1) +\n          (int)(((ulonglong)(uint)(value3 * 0x19) / (ulonglong)(uint)(shiftAmount << 1)) / 100) * -100) *\n          0x10 + 0x32) / 100 & 0xf;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007f54": "calculate_value_08007f54",
                "param_1": "inputValue",
                "param_2": "shiftAmount",
                "uVar1": "value1",
                "iVar2": "value2",
                "iVar3": "value3",
                "uVar4": "result"
            },
            "calling": [
                "FUN_08008190"
            ],
            "called": [
                "FUN_08006680",
                "FUN_080066cc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008190": {
            "entrypoint": "0x08008190",
            "current_name": "initialize_memory_08008190",
            "code": "\n\n\nvoid initializeMemory_08008190(void)\n\n{\n  FUN_08007ea4(&DAT_40004400);\n  _DAT_4000440c = _DAT_4000440c & 0xffff400c | 0xc;\n  _DAT_40004410 = _DAT_40004410 & 0xffff8090;\n  _DAT_40004414 = _DAT_40004414 & 0xfffff000;\n  _DAT_40004400 = _DAT_40004400 & 0xfffffc00;\n  FUN_08007f54(&DAT_40004400,0x1c200);\n  _DAT_4000440c = _DAT_4000440c | 0x2000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008190": "initialize_memory_08008190"
            },
            "calling": [
                "FUN_08007540"
            ],
            "called": [
                "FUN_08007ea4",
                "FUN_08007f54"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008244": {
            "entrypoint": "0x08008244",
            "current_name": "FUNC_08008244",
            "code": "\nvoid FUNC_08008244(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008244": "FUNC_08008244"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008250": {
            "entrypoint": "0x08008250",
            "current_name": "initialize_application_08008250",
            "code": "\nvoid initializeApplication_08008250(undefined applicationData)\n\n{\n  FUN_08007e1c(applicationData);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008250": "initialize_application_08008250",
                "param_1": "applicationData"
            },
            "calling": [
                "FUN_0800369c",
                "FUN_08003826",
                "FUN_080037fc",
                "FUN_080036f0",
                "FUN_08003778",
                "FUN_080036c6"
            ],
            "called": [
                "FUN_08007e1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800826a": {
            "entrypoint": "0x0800826a",
            "current_name": "initialize_0800826a",
            "code": "\nundefined4 initialize_0800826a(undefined data)\n\n{\n  FUN_08007e1c(data);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800826a": "initialize_0800826a",
                "param_1": "data"
            },
            "calling": [],
            "called": [
                "FUN_08007e1c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008286": {
            "entrypoint": "0x08008286",
            "current_name": "check_and_get_data_08008286",
            "code": "\nundefined check_and_get_data_08008286(void)\n\n{\n  undefined data;\n  int result;\n  \n  result = FUN_08007e58();\n  if (result != 0) {\n    data = FUN_08007e84();\n    result = FUN_08005900(data);\n    if (result == 0) {\n      return data;\n    }\n  }\n  return 0xff;\n}\n\n",
            "renaming": {
                "FUN_08008286": "check_and_get_data_08008286",
                "iVar2": "result",
                "uVar1": "data"
            },
            "calling": [
                "FUN_08003f34"
            ],
            "called": [
                "FUN_08007e84",
                "FUN_08005900",
                "FUN_08007e58"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080082ba": {
            "entrypoint": "0x080082ba",
            "current_name": "FUNC_080082ba",
            "code": "\nvoid FUNC_080082ba(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080082ba": "FUNC_080082ba"
            },
            "calling": [
                "FUN_08001ddc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080082d0": {
            "entrypoint": "0x080082d0",
            "current_name": "calculate_bitwise_operations_080082d0",
            "code": "\nulonglong calculate_bitwise_operations_080082d0(uint input_a,uint input_b,uint input_c,uint input_d)\n\n{\n  int shift_bits1;\n  byte carry_bit1;\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  int shift_bits2;\n  uint result_a;\n  uint result_b;\n  uint result_c;\n  uint result_d;\n  bool condition1;\n  bool condition2;\n  bool condition3;\n  \n  temp4 = input_d ^ 0x80000000;\n  result_a = input_b << 1;\n  input_d = input_d << 1;\n  condition1 = ((input_b ^ temp4) & 0x7fffffff) == 0;\n  condition2 = condition1 && input_a == input_c;\n  if (!condition1 || input_a != input_c) {\n    condition2 = (result_a | input_a) == 0;\n  }\n  if (!condition2) {\n    condition2 = (input_d | input_c) == 0;\n  }\n  shift_bits2 = (int)result_a >> 0x15;\n  if (!condition2) {\n    condition2 = shift_bits2 == -1;\n  }\n  shift_bits1 = (int)input_d >> 0x15;\n  if (!condition2) {\n    condition2 = shift_bits1 == -1;\n  }\n  if (condition2) {\n    if (shift_bits2 == -1 || shift_bits1 == -1) {\n      result_a = temp4;\n      result_c = input_c;\n      if (shift_bits2 == -1) {\n        result_a = input_b;\n        result_c = input_a;\n      }\n      if (shift_bits2 != -1 || shift_bits1 != -1) {\n        input_c = result_c;\n        temp4 = result_a;\n      }\n      condition2 = (result_c | result_a << 0xc) == 0;\n      if (condition2) {\n        condition2 = (input_c | temp4 << 0xc) == 0;\n      }\n      if (condition2) {\n        condition2 = result_a == temp4;\n      }\n      if (!condition2) {\n        result_a = result_a | 0x80000;\n      }\n      return CONCAT44(result_a,result_c);\n    }\n    if (((input_b ^ temp4) & 0x7fffffff) != 0 || input_a != input_c) {\n      if ((result_a | input_a) == 0) {\n        input_a = input_c;\n        input_b = temp4;\n      }\n      return CONCAT44(input_b,input_a);\n    }\n    if (input_b != temp4) {\n      return 0;\n    }\n    if (result_a >> 0x15 == 0) {\n      condition2 = (input_a & 0x80000000) != 0;\n      temp4 = input_b * 2 + (uint)condition2;\n      if (CARRY4(input_b,input_b) || CARRY4(input_b * 2,(uint)condition2)) {\n        temp4 = temp4 | 0x80000000;\n      }\n      return CONCAT44(temp4,input_a << 1);\n    }\n    if (result_a < 0xffc00000) {\n      return CONCAT44(input_b + 0x100000,input_a);\n    }\n    input_b = input_b & 0x80000000;\nLAB_08008514:\n    return (ulonglong)(input_b | 0x7ff00000) << 0x20;\n  }\n  result_a = result_a >> 0x15;\n  input_d = input_d >> 0x15;\n  result_c = input_d - result_a;\n  condition2 = result_c != 0;\n  if (input_d < result_a) {\n    result_c = -result_c;\n  }\n  result_b = input_a;\n  temp5 = input_b;\n  if (condition2 && result_a <= input_d) {\n    result_a = result_a + result_c;\n    result_b = input_c;\n    temp5 = temp4;\n    input_c = input_a;\n    temp4 = input_b;\n  }\n  if (0x36 < result_c) {\n    return CONCAT44(temp5,result_b);\n  }\n  temp2 = temp5 & 0xfffff | 0x100000;\n  if ((temp5 & 0x80000000) != 0) {\n    condition2 = result_b != 0;\n    result_b = -result_b;\n    temp2 = -temp2 - (uint)condition2;\n  }\n  temp5 = temp4 & 0xfffff | 0x100000;\n  if ((temp4 & 0x80000000) != 0) {\n    condition2 = input_c != 0;\n    input_c = -input_c;\n    temp5 = -temp5 - (uint)condition2;\n  }\n  if (result_a == result_c) {\n    temp5 = temp5 ^ 0x100000;\n    if (result_a == 0) {\n      temp2 = temp2 ^ 0x100000;\n      result_a = 1;\n    }\n    else {\n      result_c = result_c - 1;\n    }\n  }\n  temp4 = -result_c + 0x20;\n  if ((int)result_c < 0x21) {\n    result_d = input_c << (temp4 & 0xff);\n    input_c = input_c >> (result_c & 0xff);\n    temp1 = result_b + input_c;\n    temp3 = temp5 << (temp4 & 0xff);\n    temp4 = temp1 + temp3;\n    temp2 = temp2 + CARRY4(result_b,input_c) + ((int)temp5 >> (result_c & 0xff)) +\n            (uint)CARRY4(temp1,temp3);\n  }\n  else {\n    result_d = temp5 << (-result_c + 0x40 & 0xff);\n    if (input_c != 0) {\n      result_d = result_d | 2;\n    }\n    temp5 = (int)temp5 >> (result_c - 0x20 & 0xff);\n    temp4 = result_b + temp5;\n    temp2 = temp2 + ((int)temp5 >> 0x1f) + (uint)CARRY4(result_b,temp5);\n  }\n  input_b = temp2 & 0x80000000;\n  result_c = temp2;\n  if ((int)temp2 < 0) {\n    condition2 = result_d == 0;\n    result_d = -result_d;\n    result_c = -temp4;\n    temp4 = -(uint)!condition2 - temp4;\n    result_c = -(uint)(condition2 <= result_c) - temp2;\n  }\n  if (0xfffff < result_c) {\n    result_b = result_a - 1;\n    if (0x1fffff < result_c) {\n      result_b = result_c & 1;\n      result_c = result_c >> 1;\n      carry_bit1 = (byte)temp4;\n      temp4 = (uint)(result_b != 0) << 0x1f | temp4 >> 1;\n      result_d = (uint)(carry_bit1 & 1) << 0x1f | result_d >> 1;\n      result_b = result_a;\n      if (0xffbfffff < result_a * 0x200000) goto LAB_08008514;\n    }\nLAB_080083e0:\n    condition2 = 0x7fffffff < result_d;\n    if (result_d == 0x80000000) {\n      condition2 = (temp4 & 1) != 0;\n    }\n    return CONCAT44(result_c + result_b * 0x100000 + (uint)CARRY4(temp4,(uint)condition2) | input_b,\n                    temp4 + condition2);\n  }\n  condition1 = (result_d & 0x80000000) != 0;\n  result_d = result_d << 1;\n  result_b = temp4 * 2;\n  condition2 = CARRY4(temp4,temp4);\n  temp4 = temp4 * 2 + (uint)condition1;\n  result_c = result_c * 2 + (uint)(condition2 || CARRY4(result_b,(uint)condition1));\n  result_b = result_a - 2;\n  if (result_a - 1 != 0 && 0xfffff < result_c) goto LAB_080083e0;\n  temp5 = temp4;\n  result_a = result_c;\n  if (result_c == 0) {\n    temp5 = 0;\n    result_a = temp4;\n  }\n  shift_bits2 = LZCOUNT(result_a);\n  if (result_c == 0) {\n    shift_bits2 = shift_bits2 + 0x20;\n  }\n  result_c = shift_bits2 - 0xb;\n  condition3 = SBORROW4(result_c,0x20);\n  temp4 = shift_bits2 - 0x2b;\n  condition2 = (int)temp4 < 0;\n  condition1 = temp4 == 0;\n  if ((int)result_c < 0x20) {\n    condition3 = SCARRY4(temp4,0xc);\n    shift_bits2 = shift_bits2 + -0x1f;\n    condition2 = shift_bits2 < 0;\n    condition1 = shift_bits2 == 0;\n    temp4 = result_c;\n    if (!condition1 && condition2 == condition3) {\n      temp5 = result_a << (result_c & 0xff);\n      result_a = result_a >> (0xcU - shift_bits2 & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (condition1 || condition2 != condition3) {\n    result_d = 0x20 - temp4;\n  }\n  result_a = result_a << (temp4 & 0xff);\n  if (condition1 || condition2 != condition3) {\n    result_a = result_a | temp5 >> (result_d & 0xff);\n  }\n  if (condition1 || condition2 != condition3) {\n    temp5 = temp5 << (temp4 & 0xff);\n  }\nLAB_08008458:\n  if ((int)result_c <= (int)result_b) {\n    return CONCAT44(result_a + (result_b - result_c) * 0x100000 | input_b,temp5);\n  }\n  temp4 = ~(result_b - result_c);\n  if ((int)temp4 < 0x1f) {\n    shift_bits2 = temp4 - 0x13;\n    if (shift_bits2 != 0 && shift_bits2 < 0 == SCARRY4(temp4 - 0x1f,0xc)) {\n      return CONCAT44(temp2,temp5 >> (0x20 - (0xcU - shift_bits2) & 0xff) | result_a << (0xcU - shift_bits2 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    temp4 = temp4 + 1;\n    return CONCAT44(input_b | result_a >> (temp4 & 0xff),\n                    temp5 >> (temp4 & 0xff) | result_a << (0x20 - temp4 & 0xff));\n  }\n  return CONCAT44(temp2,result_a >> (temp4 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_080082d0": "calculate_bitwise_operations_080082d0",
                "param_1": "input_a",
                "param_2": "input_b",
                "param_3": "input_c",
                "param_4": "input_d",
                "iVar1": "shift_bits1",
                "bVar2": "carry_bit1",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "uVar5": "temp3",
                "uVar6": "temp4",
                "uVar7": "temp5",
                "iVar8": "shift_bits2",
                "uVar9": "result_a",
                "uVar10": "result_b",
                "uVar11": "result_c",
                "uVar12": "result_d",
                "bVar13": "condition1",
                "bVar14": "condition2",
                "bVar15": "condition3"
            },
            "calling": [
                "FUN_08003004",
                "FUN_080096e8",
                "FUN_08009d78",
                "FUN_0800a5a0",
                "FUN_08001f00",
                "FUN_0800af78",
                "FUN_08004940",
                "FUN_0800a1bc",
                "FUN_08009410",
                "FUN_0800a348",
                "FUN_08009b24",
                "FUN_0800adf0",
                "FUN_08009990"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080082d4": {
            "entrypoint": "0x080082d4",
            "current_name": "calculate_unsigned_multiply_080082d4",
            "code": "\nulonglong calculate_unsigned_multiply_080082d4(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int shift_amount_a;\n  byte carry;\n  uint sum;\n  uint shifted_sum;\n  uint a_shifted;\n  int shift_amount_d;\n  uint u_shifted_b;\n  uint shifted_d;\n  uint u_shifted_d;\n  uint temp_a;\n  uint temp_b;\n  uint temp_c;\n  bool is_equal;\n  bool is_zero;\n  bool overflow;\n  \n  u_shifted_b = param_2 << 1;\n  u_shifted_d = param_4 << 1;\n  is_equal = ((param_2 ^ param_4) & 0x7fffffff) == 0;\n  is_zero = is_equal && param_1 == param_3;\n  if (!is_equal || param_1 != param_3) {\n    is_zero = (u_shifted_b | param_1) == 0;\n  }\n  if (!is_zero) {\n    is_zero = (u_shifted_d | param_3) == 0;\n  }\n  shift_amount_d = (int)u_shifted_b >> 0x15;\n  if (!is_zero) {\n    is_zero = shift_amount_d == -1;\n  }\n  shift_amount_a = (int)u_shifted_d >> 0x15;\n  if (!is_zero) {\n    is_zero = shift_amount_a == -1;\n  }\n  if (is_zero) {\n    if (shift_amount_d == -1 || shift_amount_a == -1) {\n      u_shifted_d = param_4;\n      u_shifted_b = param_3;\n      if (shift_amount_d == -1) {\n        u_shifted_d = param_2;\n        u_shifted_b = param_1;\n      }\n      if (shift_amount_d != -1 || shift_amount_a != -1) {\n        param_3 = u_shifted_b;\n        param_4 = u_shifted_d;\n      }\n      is_zero = (u_shifted_b | u_shifted_d << 0xc) == 0;\n      if (is_zero) {\n        is_zero = (param_3 | param_4 << 0xc) == 0;\n      }\n      if (is_zero) {\n        is_zero = u_shifted_d == param_4;\n      }\n      if (!is_zero) {\n        u_shifted_d = u_shifted_d | 0x80000;\n      }\n      return CONCAT44(u_shifted_d,u_shifted_b);\n    }\n    if (((param_2 ^ param_4) & 0x7fffffff) != 0 || param_1 != param_3) {\n      if ((u_shifted_b | param_1) == 0) {\n        param_1 = param_3;\n        param_2 = param_4;\n      }\n      return CONCAT44(param_2,param_1);\n    }\n    if (param_2 != param_4) {\n      return 0;\n    }\n    if (u_shifted_b >> 0x15 == 0) {\n      is_zero = (param_1 & 0x80000000) != 0;\n      u_shifted_d = param_2 * 2 + (uint)is_zero;\n      if (CARRY4(param_2,param_2) || CARRY4(param_2 * 2,(uint)is_zero)) {\n        u_shifted_d = u_shifted_d | 0x80000000;\n      }\n      return CONCAT44(u_shifted_d,param_1 << 1);\n    }\n    if (u_shifted_b < 0xffc00000) {\n      return CONCAT44(param_2 + 0x100000,param_1);\n    }\n    param_2 = param_2 & 0x80000000;\nLAB_08008514:\n    return (ulonglong)(param_2 | 0x7ff00000) << 0x20;\n  }\n  u_shifted_b = u_shifted_b >> 0x15;\n  u_shifted_d = u_shifted_d >> 0x15;\n  temp_a = u_shifted_d - u_shifted_b;\n  is_zero = temp_a != 0;\n  if (u_shifted_d < u_shifted_b) {\n    temp_a = -temp_a;\n  }\n  shifted_d = param_1;\n  a_shifted = param_2;\n  if (is_zero && u_shifted_b <= u_shifted_d) {\n    u_shifted_b = u_shifted_b + temp_a;\n    shifted_d = param_3;\n    a_shifted = param_4;\n    param_3 = param_1;\n    param_4 = param_2;\n  }\n  if (0x36 < temp_a) {\n    return CONCAT44(a_shifted,shifted_d);\n  }\n  u_shifted_d = a_shifted & 0xfffff | 0x100000;\n  if ((a_shifted & 0x80000000) != 0) {\n    is_zero = shifted_d != 0;\n    shifted_d = -shifted_d;\n    u_shifted_d = -u_shifted_d - (uint)is_zero;\n  }\n  a_shifted = param_4 & 0xfffff | 0x100000;\n  if ((param_4 & 0x80000000) != 0) {\n    is_zero = param_3 != 0;\n    param_3 = -param_3;\n    a_shifted = -a_shifted - (uint)is_zero;\n  }\n  if (u_shifted_b == temp_a) {\n    a_shifted = a_shifted ^ 0x100000;\n    if (u_shifted_b == 0) {\n      u_shifted_d = u_shifted_d ^ 0x100000;\n      u_shifted_b = 1;\n    }\n    else {\n      temp_a = temp_a - 1;\n    }\n  }\n  temp_c = -temp_a + 0x20;\n  if ((int)temp_a < 0x21) {\n    temp_b = param_3 << (temp_c & 0xff);\n    param_3 = param_3 >> (temp_a & 0xff);\n    sum = shifted_d + param_3;\n    shifted_sum = a_shifted << (temp_c & 0xff);\n    temp_c = sum + shifted_sum;\n    u_shifted_d = u_shifted_d + CARRY4(shifted_d,param_3) + ((int)a_shifted >> (temp_a & 0xff)) +\n            (uint)CARRY4(sum,shifted_sum);\n  }\n  else {\n    temp_b = a_shifted << (-temp_a + 0x40 & 0xff);\n    if (param_3 != 0) {\n      temp_b = temp_b | 2;\n    }\n    a_shifted = (int)a_shifted >> (temp_a - 0x20 & 0xff);\n    temp_c = shifted_d + a_shifted;\n    u_shifted_d = u_shifted_d + ((int)a_shifted >> 0x1f) + (uint)CARRY4(shifted_d,a_shifted);\n  }\n  param_2 = u_shifted_d & 0x80000000;\n  temp_a = u_shifted_d;\n  if ((int)u_shifted_d < 0) {\n    is_zero = temp_b == 0;\n    temp_b = -temp_b;\n    temp_a = -temp_c;\n    temp_c = -(uint)!is_zero - temp_c;\n    temp_a = -(uint)(is_zero <= temp_a) - u_shifted_d;\n  }\n  if (0xfffff < temp_a) {\n    shifted_d = u_shifted_b - 1;\n    if (0x1fffff < temp_a) {\n      u_shifted_d = temp_a & 1;\n      temp_a = temp_a >> 1;\n      carry = (byte)temp_c;\n      temp_c = (uint)(u_shifted_d != 0) << 0x1f | temp_c >> 1;\n      temp_b = (uint)(carry & 1) << 0x1f | temp_b >> 1;\n      shifted_d = u_shifted_b;\n      if (0xffbfffff < u_shifted_b * 0x200000) goto LAB_08008514;\n    }\nLAB_080083e0:\n    is_zero = 0x7fffffff < temp_b;\n    if (temp_b == 0x80000000) {\n      is_zero = (temp_c & 1) != 0;\n    }\n    return CONCAT44(temp_a + shifted_d * 0x100000 + (uint)CARRY4(temp_c,(uint)is_zero) | param_2,\n                    temp_c + is_zero);\n  }\n  is_equal = (temp_b & 0x80000000) != 0;\n  temp_b = temp_b << 1;\n  shifted_d = temp_c * 2;\n  is_zero = CARRY4(temp_c,temp_c);\n  temp_c = temp_c * 2 + (uint)is_equal;\n  temp_a = temp_a * 2 + (uint)(is_zero || CARRY4(shifted_d,(uint)is_equal));\n  shifted_d = u_shifted_b - 2;\n  if (u_shifted_b - 1 != 0 && 0xfffff < temp_a) goto LAB_080083e0;\n  a_shifted = temp_c;\n  u_shifted_b = temp_a;\n  if (temp_a == 0) {\n    a_shifted = 0;\n    u_shifted_b = temp_c;\n  }\n  shift_amount_d = LZCOUNT(u_shifted_b);\n  if (temp_a == 0) {\n    shift_amount_d = shift_amount_d + 0x20;\n  }\n  temp_c = shift_amount_d - 0xb;\n  overflow = SBORROW4(temp_c,0x20);\n  temp_a = shift_amount_d - 0x2b;\n  is_zero = (int)temp_a < 0;\n  is_equal = temp_a == 0;\n  if ((int)temp_c < 0x20) {\n    overflow = SCARRY4(temp_a,0xc);\n    shift_amount_d = shift_amount_d + -0x1f;\n    is_zero = shift_amount_d < 0;\n    is_equal = shift_amount_d == 0;\n    temp_a = temp_c;\n    if (!is_equal && is_zero == overflow) {\n      a_shifted = u_shifted_b << (temp_c & 0xff);\n      u_shifted_b = u_shifted_b >> (0xcU - shift_amount_d & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (is_equal || is_zero != overflow) {\n    temp_b = 0x20 - temp_a;\n  }\n  u_shifted_b = u_shifted_b << (temp_a & 0xff);\n  if (is_equal || is_zero != overflow) {\n    u_shifted_b = u_shifted_b | a_shifted >> (temp_b & 0xff);\n  }\n  if (is_equal || is_zero != overflow) {\n    a_shifted = a_shifted << (temp_a & 0xff);\n  }\nLAB_08008458:\n  if ((int)temp_c <= (int)shifted_d) {\n    return CONCAT44(u_shifted_b + (shifted_d - temp_c) * 0x100000 | param_2,a_shifted);\n  }\n  temp_a = ~(shifted_d - temp_c);\n  if ((int)temp_a < 0x1f) {\n    shift_amount_d = temp_a - 0x13;\n    if (shift_amount_d != 0 && shift_amount_d < 0 == SCARRY4(temp_a - 0x1f,0xc)) {\n      return CONCAT44(u_shifted_d,a_shifted >> (0x20 - (0xcU - shift_amount_d) & 0xff) | u_shifted_b << (0xcU - shift_amount_d & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    temp_a = temp_a + 1;\n    return CONCAT44(param_2 | u_shifted_b >> (temp_a & 0xff),\n                    a_shifted >> (temp_a & 0xff) | u_shifted_b << (0x20 - temp_a & 0xff));\n  }\n  return CONCAT44(u_shifted_d,u_shifted_b >> (temp_a - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_080082d4": "calculate_unsigned_multiply_080082d4",
                "iVar1": "shift_amount_a",
                "bVar2": "carry",
                "uVar3": "sum",
                "uVar4": "shifted_sum",
                "uVar5": "a_shifted",
                "iVar6": "shift_amount_d",
                "uVar7": "u_shifted_b",
                "uVar8": "shifted_d",
                "uVar9": "u_shifted_d",
                "uVar10": "temp_a",
                "uVar11": "temp_b",
                "uVar12": "temp_c",
                "bVar13": "is_equal",
                "bVar14": "is_zero",
                "bVar15": "overflow"
            },
            "calling": [
                "FUN_08009798",
                "FUN_08009d78",
                "FUN_0800a5a0",
                "FUN_08009318",
                "FUN_08009654",
                "FUN_08001f00",
                "FUN_0800af78",
                "FUN_0800b2e8",
                "FUN_080094c0",
                "FUN_0800a1bc",
                "FUN_0800a348",
                "FUN_08009b24",
                "FUN_0800adf0",
                "FUN_08009990"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800854c": {
            "entrypoint": "0x0800854c",
            "current_name": "reverse_bits_0800854c",
            "code": "\nulonglong reverseBits_0800854c(uint inputValue)\n\n{\n  uint shiftedValue;\n  uint numBits;\n  int leadingZeros;\n  uint totalBits;\n  uint remainingBits;\n  bool isNegative;\n  bool isZero;\n  bool carry;\n  \n  if (inputValue == 0) {\n    return 0;\n  }\n  shiftedValue = 0;\n  leadingZeros = LZCOUNT(inputValue);\n  totalBits = leadingZeros + 0x15;\n  carry = SBORROW4(totalBits,0x20);\n  numBits = leadingZeros - 0xb;\n  isNegative = (int)numBits < 0;\n  isZero = numBits == 0;\n  if (totalBits < 0x20) {\n    carry = SCARRY4(numBits,0xc);\n    isNegative = false;\n    isZero = leadingZeros + 1 == 0;\n    numBits = totalBits;\n    if (!isZero && carry == false) {\n      shiftedValue = inputValue << totalBits;\n      inputValue = inputValue >> (0xcU - (leadingZeros + 1) & 0xff);\n      goto endLabel;\n    }\n  }\n  if (isZero || isNegative != carry) {\n    remainingBits = 0x20 - numBits;\n  }\n  inputValue = inputValue << (numBits & 0xff);\n  if (isZero || isNegative != carry) {\n    inputValue = inputValue | 0U >> (remainingBits & 0xff);\n  }\n  if (isZero || isNegative != carry) {\n    shiftedValue = 0 << (numBits & 0xff);\n  }\nendLabel:\n  if (totalBits < 0x433) {\n    return CONCAT44(inputValue + (0x432 - totalBits) * 0x100000,shiftedValue);\n  }\n  numBits = ~(0x432 - totalBits);\n  if (0x1e < (int)numBits) {\n    return (ulonglong)(inputValue >> (numBits - 0x1f & 0xff));\n  }\n  leadingZeros = numBits - 0x13;\n  if (leadingZeros == 0 || leadingZeros < 0 != SCARRY4(numBits - 0x1f,0xc)) {\n    numBits = numBits + 1;\n    return CONCAT44(inputValue >> (numBits & 0xff),\n                    shiftedValue >> (numBits & 0xff) | inputValue << (0x20 - numBits & 0xff));\n  }\n  return (ulonglong)(shiftedValue >> (0x20 - (0xcU - leadingZeros) & 0xff) | inputValue << (0xcU - leadingZeros & 0xff));\n}\n\n",
            "renaming": {
                "FUN_0800854c": "reverse_bits_0800854c",
                "param_1": "inputValue",
                "uVar1": "shiftedValue",
                "uVar2": "numBits",
                "iVar3": "leadingZeros",
                "uVar4": "totalBits",
                "in_r12": "remainingBits",
                "bVar5": "isNegative",
                "bVar6": "isZero",
                "bVar7": "carry",
                "LAB_08008458": "endLabel"
            },
            "calling": [
                "FUN_08001994"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800856c": {
            "entrypoint": "0x0800856c",
            "current_name": "decode_and_shift_0800856c",
            "code": "\nulonglong decode_and_shift_0800856c(uint input_num)\n\n{\n  uint shift_amount;\n  uint abs_input;\n  uint shifted_val;\n  int leading_zeros;\n  uint total_shift;\n  uint sign_bit;\n  uint remaining_shift;\n  bool leading_zeros_negative;\n  bool leading_zeros_zero;\n  bool leading_zeros_overflow;\n  \n  if (input_num == 0) {\n    return 0;\n  }\n  sign_bit = input_num & 0x80000000;\n  abs_input = input_num;\n  if ((int)sign_bit < 0) {\n    abs_input = -input_num;\n  }\n  shift_amount = 0;\n  leading_zeros = LZCOUNT(abs_input);\n  total_shift = leading_zeros + 0x15;\n  leading_zeros_overflow = SBORROW4(total_shift,0x20);\n  shifted_val = leading_zeros - 0xb;\n  leading_zeros_negative = (int)shifted_val < 0;\n  leading_zeros_zero = shifted_val == 0;\n  if (total_shift < 0x20) {\n    leading_zeros_overflow = SCARRY4(shifted_val,0xc);\n    leading_zeros_negative = false;\n    leading_zeros_zero = leading_zeros + 1 == 0;\n    shifted_val = total_shift;\n    if (!leading_zeros_zero && leading_zeros_overflow == false) {\n      shift_amount = abs_input << total_shift;\n      abs_input = abs_input >> (0xcU - (leading_zeros + 1) & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (leading_zeros_zero || leading_zeros_negative != leading_zeros_overflow) {\n    remaining_shift = 0x20 - shifted_val;\n  }\n  abs_input = abs_input << (shifted_val & 0xff);\n  if (leading_zeros_zero || leading_zeros_negative != leading_zeros_overflow) {\n    abs_input = abs_input | 0U >> (remaining_shift & 0xff);\n  }\n  if (leading_zeros_zero || leading_zeros_negative != leading_zeros_overflow) {\n    shift_amount = 0 << (shifted_val & 0xff);\n  }\nLAB_08008458:\n  if (total_shift < 0x433) {\n    return CONCAT44(abs_input + (0x432 - total_shift) * 0x100000 | sign_bit,shift_amount);\n  }\n  shifted_val = ~(0x432 - total_shift);\n  if (0x1e < (int)shifted_val) {\n    return CONCAT44(input_num,abs_input >> (shifted_val - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  leading_zeros = shifted_val - 0x13;\n  if (leading_zeros == 0 || leading_zeros < 0 != SCARRY4(shifted_val - 0x1f,0xc)) {\n    shifted_val = shifted_val + 1;\n    return CONCAT44(sign_bit | abs_input >> (shifted_val & 0xff),\n                    shift_amount >> (shifted_val & 0xff) | abs_input << (0x20 - shifted_val & 0xff));\n  }\n  return CONCAT44(input_num,shift_amount >> (0x20 - (0xcU - leading_zeros) & 0xff) | abs_input << (0xcU - leading_zeros & 0xff))\n         & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800856c": "decode_and_shift_0800856c",
                "param_1": "input_num",
                "uVar1": "shift_amount",
                "uVar2": "abs_input",
                "uVar3": "shifted_val",
                "iVar4": "leading_zeros",
                "uVar5": "total_shift",
                "uVar6": "sign_bit",
                "in_r12": "remaining_shift",
                "bVar7": "leading_zeros_negative",
                "bVar8": "leading_zeros_zero",
                "bVar9": "leading_zeros_overflow"
            },
            "calling": [
                "FUN_08009d78",
                "FUN_0800a5a0",
                "FUN_08002c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008590": {
            "entrypoint": "0x08008590",
            "current_name": "decode_unsigned_long_long_08008590",
            "code": "\nulonglong decodeUnsignedLongLong_08008590(uint input,undefined4 param2,undefined4 param3,uint param4)\n\n{\n  uint bit31;\n  uint temp;\n  uint resultHigh;\n  uint shiftedInput1;\n  uint shiftedInput2;\n  int shiftCount;\n  uint temp1;\n  uint mask;\n  bool lessThanZero;\n  bool equalToZero;\n  bool carryFlag;\n  \n  shiftedInput2 = input << 1;\n  equalToZero = shiftedInput2 == 0;\n  bit31 = (uint)((input & 0x80000000) != 0) << 0x1f;\n  shiftedInput1 = (uint)((int)shiftedInput2 >> 3) >> 1;\n  resultHigh = bit31 | shiftedInput1;\n  input = input << 0x1d;\n  if (!equalToZero) {\n    param4 = shiftedInput2 & 0xff000000;\n    equalToZero = param4 == 0;\n  }\n  if (!equalToZero) {\n    equalToZero = param4 == 0xff000000;\n  }\n  if (!equalToZero) {\n    return CONCAT44(resultHigh,input) ^ 0x3800000000000000;\n  }\n  if ((shiftedInput2 & 0xffffff) == 0) {\n    return CONCAT44(resultHigh,input);\n  }\n  if (param4 == 0xff000000) {\n    return CONCAT44(resultHigh,input) | 0x8000000000000;\n  }\n  temp = input;\n  shiftedInput2 = shiftedInput1;\n  if (shiftedInput1 == 0) {\n    temp = 0;\n    shiftedInput2 = input;\n  }\n  shiftCount = leadingZeroCount(shiftedInput2);\n  if (shiftedInput1 == 0) {\n    shiftCount = shiftCount + 0x20;\n  }\n  temp1 = shiftCount - 0xb;\n  carryFlag = SBORROW4(temp1,0x20);\n  shiftedInput1 = shiftCount - 0x2b;\n  equalToZero = (int)shiftedInput1 < 0;\n  lessThanZero = shiftedInput1 == 0;\n  if ((int)temp1 < 0x20) {\n    carryFlag = SCARRY4(shiftedInput1,0xc);\n    shiftCount = shiftCount + -0x1f;\n    equalToZero = shiftCount < 0;\n    lessThanZero = shiftCount == 0;\n    shiftedInput1 = temp1;\n    if (!lessThanZero && equalToZero == carryFlag) {\n      temp = shiftedInput2 << (temp1 & 0xff);\n      shiftedInput2 = shiftedInput2 >> (0xcU - shiftCount & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (lessThanZero || equalToZero != carryFlag) {\n    mask = 0x20 - shiftedInput1;\n  }\n  shiftedInput2 = shiftedInput2 << (shiftedInput1 & 0xff);\n  if (lessThanZero || equalToZero != carryFlag) {\n    shiftedInput2 = shiftedInput2 | temp >> (mask & 0xff);\n  }\n  if (lessThanZero || equalToZero != carryFlag) {\n    temp = temp << (shiftedInput1 & 0xff);\n  }\nLAB_08008458:\n  if ((int)temp1 < 0x381) {\n    return CONCAT44(shiftedInput2 + (0x380 - temp1) * 0x100000 | bit31,temp);\n  }\n  shiftedInput1 = ~(0x380 - temp1);\n  if (0x1e < (int)shiftedInput1) {\n    return CONCAT44(resultHigh,shiftedInput2 >> (shiftedInput1 - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  shiftCount = shiftedInput1 - 0x13;\n  if (shiftCount == 0 || shiftCount < 0 != SCARRY4(shiftedInput1 - 0x1f,0xc)) {\n    shiftedInput1 = shiftedInput1 + 1;\n    return CONCAT44(bit31 | shiftedInput2 >> (shiftedInput1 & 0xff),\n                    temp >> (shiftedInput1 & 0xff) | shiftedInput2 << (0x20 - shiftedInput1 & 0xff));\n  }\n  return CONCAT44(resultHigh,temp >> (0x20 - (0xcU - shiftCount) & 0xff) | shiftedInput2 << (0xcU - shiftCount & 0xff)) &\n         0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008590": "decode_unsigned_long_long_08008590",
                "param_1": "input",
                "param_2": "param2",
                "param_3": "param3",
                "param_4": "param4",
                "uVar1": "bit31",
                "uVar2": "temp",
                "uVar3": "resultHigh",
                "uVar4": "shiftedInput1",
                "uVar5": "shiftedInput2",
                "iVar6": "shiftCount",
                "uVar7": "temp1",
                "in_r12": "mask",
                "bVar8": "lessThanZero",
                "bVar9": "equalToZero",
                "bVar10": "carryFlag",
                "LZCOUNT": "leadingZeroCount"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08002638",
                "FUN_080005b4",
                "FUN_08002408",
                "FUN_08004e30",
                "FUN_080046d0",
                "FUN_08001f00",
                "FUN_08003b98",
                "FUN_08004940",
                "FUN_0800056c",
                "FUN_080044e8",
                "FUN_08002978",
                "FUN_08001994",
                "FUN_08002c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008640": {
            "entrypoint": "0x08008640",
            "current_name": "calculate_product_08008640",
            "code": "\nulonglong calculateProduct_08008640(undefined4 inputParam1,uint inputParam2,uint inputParam3,uint inputParam4)\n\n{\n  ulonglong result;\n  longlong tempVar1;\n  uint tempVar2;\n  uint tempVar3;\n  int tempVar4;\n  uint tempVar5;\n  uint tempVar6;\n  uint tempVar7;\n  uint tempVar8;\n  bool flag1;\n  bool flag2;\n  bool flag3;\n  ulonglong combinedParams;\n  \n  combinedParams = CONCAT44(inputParam2,inputParam1);\n  tempVar7 = 0x7ff;\n  tempVar3 = inputParam2 >> 0x14 & 0x7ff;\n  flag1 = tempVar3 == 0;\n  if (!flag1) {\n    tempVar6 = inputParam4 >> 0x14 & 0x7ff;\n    flag1 = tempVar6 == 0;\n  }\n  if (!flag1) {\n    flag1 = tempVar3 == 0x7ff;\n  }\n  if (!flag1) {\n    flag1 = tempVar6 == 0x7ff;\n  }\n  if (flag1) {\n    combinedParams = FUN_0800881c();\n  }\n  tempVar2 = (uint)(combinedParams >> 0x20);\n  tempVar4 = tempVar3 + tempVar6;\n  tempVar3 = tempVar2 ^ inputParam4;\n  tempVar2 = tempVar2 & ~(tempVar7 << 0x15);\n  inputParam4 = inputParam4 & ~(tempVar7 << 0x15);\n  flag1 = ((uint)combinedParams | tempVar2 << 0xc) == 0;\n  if (!flag1) {\n    flag1 = (inputParam3 | inputParam4 << 0xc) == 0;\n  }\n  tempVar2 = tempVar2 | 0x100000;\n  inputParam4 = inputParam4 | 0x100000;\n  if (flag1) {\n    inputParam3 = (uint)combinedParams | inputParam3;\n    inputParam4 = (tempVar3 & 0x80000000 | tempVar2) ^ inputParam4;\n    tempVar3 = tempVar7 >> 1;\n    flag3 = SBORROW4(tempVar4,tempVar3);\n    tempVar5 = tempVar4 - tempVar3;\n    flag1 = tempVar5 == 0;\n    tempVar2 = tempVar5;\n    if (!flag1 && (int)tempVar3 <= tempVar4) {\n      flag3 = SBORROW4(tempVar7,tempVar5);\n      tempVar2 = tempVar7 - tempVar5;\n      flag1 = tempVar7 == tempVar5;\n    }\n    if (!flag1 && (int)tempVar2 < 0 == flag3) {\n      inputParam4 = inputParam4 | tempVar5 * 0x100000;\n    }\n    if (!flag1 && (int)tempVar2 < 0 == flag3) {\n      return CONCAT44(inputParam4,inputParam3);\n    }\n    inputParam4 = inputParam4 | 0x100000;\n    tempVar7 = 0;\n    flag3 = SBORROW4(tempVar5,1);\n    tempVar5 = tempVar5 - 1;\n    flag1 = tempVar5 == 0;\n    tempVar3 = tempVar5;\n  }\n  else {\n    result = (combinedParams & 0xffffffff) * (ulonglong)inputParam3;\n    combinedParams = (combinedParams & 0xffffffff) * (ulonglong)inputParam4 +\n             (ulonglong)tempVar2 * (ulonglong)inputParam3 + (result >> 0x20);\n    tempVar8 = (uint)combinedParams;\n    tempVar1 = (ulonglong)tempVar2 * (ulonglong)inputParam4 + (combinedParams >> 0x20);\n    tempVar7 = (uint)tempVar1;\n    tempVar2 = (uint)((ulonglong)tempVar1 >> 0x20);\n    if ((int)result != 0) {\n      tempVar8 = tempVar8 | 1;\n    }\n    tempVar5 = (tempVar4 + -0x3ff) - (uint)(tempVar2 < 0x200);\n    if (tempVar2 < 0x200) {\n      flag1 = (tempVar8 & 0x80000000) != 0;\n      tempVar8 = tempVar8 << 1;\n      tempVar1 = CONCAT44(tempVar2 * 2 + (uint)(CARRY4(tempVar7,tempVar7) || CARRY4(tempVar7 * 2,(uint)flag1)),\n                       tempVar7 * 2 + (uint)flag1);\n    }\n    inputParam4 = tempVar3 & 0x80000000 | (int)((ulonglong)tempVar1 >> 0x20) << 0xb | (uint)tempVar1 >> 0x15;\n    inputParam3 = (uint)tempVar1 << 0xb | tempVar8 >> 0x15;\n    tempVar7 = tempVar8 * 0x800;\n    flag2 = 0xfc < tempVar5;\n    flag3 = SBORROW4(tempVar5,0xfd);\n    tempVar2 = tempVar5 - 0xfd;\n    flag1 = tempVar2 == 0;\n    tempVar3 = tempVar2;\n    if (flag2 && !flag1) {\n      flag2 = 0x6ff < tempVar2;\n      flag3 = SBORROW4(tempVar2,0x700);\n      tempVar3 = tempVar5 - 0x7fd;\n      flag1 = tempVar2 == 0x700;\n    }\n    if (!flag2 || flag1) {\n      flag1 = 0x7fffffff < tempVar7;\n      if (tempVar7 == 0x80000000) {\n        flag1 = (tempVar8 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(inputParam4 + tempVar5 * 0x100000 + (uint)CARRY4(inputParam3,(uint)flag1),inputParam3 + flag1\n                     );\n    }\n  }\n  if (!flag1 && (int)tempVar3 < 0 == flag3) {\n    return (ulonglong)(inputParam4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  flag2 = SCARRY4(tempVar5,0x36);\n  flag1 = (int)(tempVar5 + 0x36) < 0;\n  flag3 = tempVar5 == 0xffffffca;\n  if (flag3 || flag1 != flag2) {\n    inputParam3 = 0;\n  }\n  if (flag3 || flag1 != flag2) {\n    inputParam4 = inputParam4 & 0x80000000;\n  }\n  if (flag3 || flag1 != flag2) {\n    return CONCAT44(inputParam4,inputParam3);\n  }\n  tempVar3 = -tempVar5;\n  tempVar2 = tempVar3 - 0x20;\n  if (0x1f < (int)tempVar3) {\n    tempVar5 = inputParam3 >> (tempVar2 & 0xff) | inputParam4 << (0x20 - tempVar2 & 0xff);\n    tempVar3 = (inputParam4 >> (tempVar2 & 0xff) & ~((inputParam4 & 0x80000000) >> (tempVar2 & 0xff))) -\n            ((int)tempVar5 >> 0x1f);\n    if ((tempVar7 | inputParam3 << (0x20 - tempVar2 & 0xff) | tempVar5 << 1) == 0) {\n      tempVar3 = tempVar3 & ~(tempVar5 >> 0x1f);\n    }\n    return CONCAT44(inputParam4,tempVar3) & 0x80000000ffffffff;\n  }\n  tempVar4 = tempVar3 - 0x14;\n  if (tempVar4 == 0 || tempVar4 < 0 != SCARRY4(tempVar2,0xc)) {\n    tempVar8 = inputParam3 << (tempVar5 + 0x20 & 0xff);\n    tempVar2 = inputParam3 >> (tempVar3 & 0xff) | inputParam4 << (tempVar5 + 0x20 & 0xff);\n    tempVar5 = tempVar2 + -((int)tempVar8 >> 0x1f);\n    if ((tempVar7 | tempVar8 << 1) == 0) {\n      tempVar5 = tempVar5 & ~(tempVar8 >> 0x1f);\n    }\n    return CONCAT44((inputParam4 & 0x80000000) +\n                    ((inputParam4 & 0x7fffffff) >> (tempVar3 & 0xff)) +\n                    (uint)CARRY4(tempVar2,-((int)tempVar8 >> 0x1f)),tempVar5);\n  }\n  tempVar3 = 0xc - tempVar4;\n  tempVar5 = inputParam3 << (tempVar3 & 0xff);\n  tempVar3 = inputParam3 >> (0x20 - tempVar3 & 0xff) | inputParam4 << (tempVar3 & 0xff);\n  tempVar2 = tempVar3 + -((int)tempVar5 >> 0x1f);\n  if ((tempVar7 | tempVar5 << 1) == 0) {\n    tempVar2 = tempVar2 & ~(tempVar5 >> 0x1f);\n  }\n  return CONCAT44((inputParam4 & 0x80000000) + (uint)CARRY4(tempVar3,-((int)tempVar5 >> 0x1f)),tempVar2);\n}\n\n",
            "renaming": {
                "FUN_08008640": "calculate_product_08008640",
                "param_1": "inputParam1",
                "param_2": "inputParam2",
                "param_3": "inputParam3",
                "param_4": "inputParam4",
                "uVar1": "result",
                "lVar2": "tempVar1",
                "uVar3": "tempVar2",
                "uVar4": "tempVar3",
                "iVar5": "tempVar4",
                "uVar6": "tempVar5",
                "unaff_r5": "tempVar6",
                "uVar7": "tempVar7",
                "uVar8": "tempVar8",
                "bVar9": "flag1",
                "bVar10": "flag2",
                "bVar11": "flag3",
                "uVar12": "combinedParams"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08002638",
                "FUN_08009d78",
                "FUN_0800a5a0",
                "FUN_080046d0",
                "FUN_08001f00",
                "FUN_0800af78",
                "FUN_0800b2e8",
                "FUN_08004940",
                "FUN_0800a1bc",
                "FUN_0800a348",
                "FUN_0800056c",
                "FUN_080044e8",
                "FUN_08009b24",
                "FUN_08001994",
                "FUN_0800adf0",
                "FUN_08002c18"
            ],
            "called": [
                "FUN_0800881c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800881c": {
            "entrypoint": "0x0800881c",
            "current_name": "calculate_shifted_xor_0800881c",
            "code": "\nulonglong calculate_shifted_xor_0800881c(uint input_1,uint input_2,uint input_3,uint input_4)\n\n{\n  uint bit_1;\n  uint bit_2;\n  uint bit_3;\n  uint bit_4;\n  uint bit_5;\n  bool is_zero;\n  \n  bit_3 = bit_5 & input_4 >> 0x14;\n  if (bit_2 != bit_5 && bit_3 != bit_5) {\n    is_zero = (input_1 | input_2 << 1) == 0;\n    if (!is_zero) {\n      is_zero = (input_3 | input_4 << 1) == 0;\n    }\n    if (is_zero) {\n      return (ulonglong)((input_2 ^ input_4) & 0x80000000) << 0x20;\n    }\n    if (bit_2 == 0) {\n      bit_4 = input_2 & 0x80000000;\n      do {\n        bit_1 = input_1 & 0x80000000;\n        input_1 = input_1 << 1;\n        input_2 = input_2 * 2 + (uint)(bit_1 != 0);\n      } while ((input_2 & 0x100000) == 0);\n      input_2 = input_2 | bit_4;\n      if (bit_3 != 0) {\n        return CONCAT44(input_2,input_1);\n      }\n    }\n    do {\n      bit_3 = input_3 & 0x80000000;\n      input_3 = input_3 << 1;\n      input_4 = input_4 * 2 + (uint)(bit_3 != 0);\n    } while ((input_4 & 0x100000) == 0);\n    return CONCAT44(input_2,input_1);\n  }\n  is_zero = (input_1 | input_2 << 1) == 0;\n  if (is_zero) {\n    input_2 = input_4;\n    input_1 = input_3;\n  }\n  if (!is_zero) {\n    is_zero = (input_3 | input_4 << 1) == 0;\n  }\n  bit_4 = input_2;\n  if (((!is_zero) && ((bit_2 != bit_5 || ((input_1 | input_2 << 0xc) == 0)))) &&\n     ((bit_3 != bit_5 || (input_1 = input_3, bit_4 = input_4, (input_3 | input_4 << 0xc) == 0)))) {\n    return (ulonglong)((input_2 ^ input_4) & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  return CONCAT44(bit_4,input_1) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_0800881c": "calculate_shifted_xor_0800881c",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "bit_1",
                "unaff_r4": "bit_2",
                "uVar2": "bit_3",
                "uVar3": "bit_4",
                "in_r12": "bit_5",
                "bVar4": "is_zero"
            },
            "calling": [
                "FUN_08008640"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008894": {
            "entrypoint": "0x08008894",
            "current_name": "calculate_floating_point_number_08008894",
            "code": "\nulonglong calculateFloatingPointNumber_08008894(undefined4 signBit,uint exponentBits,uint fractionBits1,uint fractionBits2)\n\n{\n  uint exponentBits1;\n  uint exponentBits2;\n  uint tempVar1;\n  uint tempVar2;\n  uint tempVar3;\n  uint tempVar4;\n  uint tempVar5;\n  int difference;\n  uint tempVar6;\n  uint unaff_r5;\n  uint tempVar7;\n  uint resultSignBit;\n  uint resultFractionBits;\n  uint tempVar8;\n  bool isTrue;\n  bool isEqual;\n  bool isCarry;\n  undefined8 exponentBits17;\n  \n  exponentBits17 = CONCAT44(exponentBits,signBit);\n  tempVar8 = 0x7ff;\n  tempVar5 = exponentBits >> 0x14 & 0x7ff;\n  isTrue = tempVar5 == 0;\n  if (!isTrue) {\n    unaff_r5 = fractionBits2 >> 0x14 & 0x7ff;\n    isTrue = unaff_r5 == 0;\n  }\n  if (!isTrue) {\n    isTrue = tempVar5 == 0x7ff;\n  }\n  if (!isTrue) {\n    isTrue = unaff_r5 == 0x7ff;\n  }\n  if (isTrue) {\n    exponentBits17 = FUN_08008a02();\n  }\n  tempVar6 = (uint)((ulonglong)exponentBits17 >> 0x20);\n  resultSignBit = (uint)exponentBits17;\n  difference = tempVar5 - unaff_r5;\n  if ((fractionBits1 | fractionBits2 << 0xc) == 0) {\n    tempVar5 = (tempVar6 ^ fractionBits2) & 0x80000000 | tempVar6 & 0xfffff;\n    isCarry = SCARRY4(difference,tempVar8 >> 1);\n    tempVar6 = difference + (tempVar8 >> 1);\n    isTrue = (int)tempVar6 < 0;\n    isEqual = tempVar6 == 0;\n    if (!isEqual && isTrue == isCarry) {\n      isCarry = SBORROW4(tempVar8,tempVar6);\n      isTrue = (int)(tempVar8 - tempVar6) < 0;\n      isEqual = tempVar8 == tempVar6;\n    }\n    if (!isEqual && isTrue == isCarry) {\n      tempVar5 = tempVar5 | tempVar6 * 0x100000;\n    }\n    if (!isEqual && isTrue == isCarry) {\n      return CONCAT44(tempVar5,resultSignBit);\n    }\n    tempVar5 = tempVar5 | 0x100000;\n    tempVar8 = 0;\n    isEqual = SBORROW4(tempVar6,1);\n    tempVar6 = tempVar6 - 1;\n    isTrue = tempVar6 == 0;\n    tempVar1 = tempVar6;\n  }\n  else {\n    tempVar1 = (fractionBits2 << 0xc) >> 4 | 0x10000000 | fractionBits1 >> 0x18;\n    tempVar8 = fractionBits1 << 8;\n    tempVar7 = (tempVar6 << 0xc) >> 4 | 0x10000000 | resultSignBit >> 0x18;\n    resultSignBit = resultSignBit * 0x100;\n    tempVar5 = (tempVar6 ^ fractionBits2) & 0x80000000;\n    isTrue = tempVar1 <= tempVar7;\n    if (tempVar7 == tempVar1) {\n      isTrue = tempVar8 <= resultSignBit;\n    }\n    difference = difference + (uint)isTrue;\n    tempVar6 = difference + 0x3fd;\n    if (isTrue == false) {\n      tempVar1 = tempVar1 >> 1;\n      tempVar8 = (uint)((fractionBits1 >> 0x18 & 1) != 0) << 0x1f | tempVar8 >> 1;\n    }\n    resultFractionBits = resultSignBit - tempVar8;\n    tempVar7 = (tempVar7 - tempVar1) - (uint)(resultSignBit < tempVar8);\n    tempVar2 = tempVar1 >> 1;\n    exponentBits1 = (uint)((tempVar1 & 1) != 0) << 0x1f | tempVar8 >> 1;\n    resultSignBit = 0x100000;\n    tempVar1 = 0x80000;\n    while( true ) {\n      isTrue = exponentBits1 <= resultFractionBits;\n      if (tempVar2 < tempVar7 || tempVar7 - tempVar2 < (uint)isTrue) {\n        resultFractionBits = resultFractionBits - exponentBits1;\n        resultSignBit = resultSignBit | tempVar1;\n        tempVar7 = (tempVar7 - tempVar2) - (uint)!isTrue;\n      }\n      tempVar3 = tempVar2 >> 1;\n      exponentBits1 = (uint)((tempVar2 & 1) != 0) << 0x1f | exponentBits1 >> 1;\n      isEqual = exponentBits1 <= resultFractionBits;\n      isTrue = tempVar7 - tempVar3 < (uint)isEqual;\n      tempVar8 = tempVar7;\n      if (tempVar3 < tempVar7 || isTrue) {\n        resultFractionBits = resultFractionBits - exponentBits1;\n        tempVar8 = (tempVar7 - tempVar3) - (uint)!isEqual;\n      }\n      if (tempVar3 < tempVar7 || isTrue) {\n        resultSignBit = resultSignBit | tempVar1 >> 1;\n      }\n      tempVar7 = tempVar2 >> 2;\n      exponentBits2 = (uint)((tempVar3 & 1) != 0) << 0x1f | exponentBits1 >> 1;\n      isEqual = exponentBits2 <= resultFractionBits;\n      isTrue = tempVar8 - tempVar7 < (uint)isEqual;\n      tempVar3 = tempVar8;\n      if (tempVar7 < tempVar8 || isTrue) {\n        resultFractionBits = resultFractionBits - exponentBits2;\n        tempVar3 = (tempVar8 - tempVar7) - (uint)!isEqual;\n      }\n      if (tempVar7 < tempVar8 || isTrue) {\n        resultSignBit = resultSignBit | tempVar1 >> 2;\n      }\n      tempVar4 = tempVar2 >> 3;\n      exponentBits1 = (uint)((tempVar7 & 1) != 0) << 0x1f | exponentBits2 >> 1;\n      isEqual = exponentBits1 <= resultFractionBits;\n      isTrue = tempVar3 - tempVar4 < (uint)isEqual;\n      tempVar7 = tempVar3;\n      if (tempVar4 < tempVar3 || isTrue) {\n        resultFractionBits = resultFractionBits - exponentBits1;\n        tempVar7 = (tempVar3 - tempVar4) - (uint)!isEqual;\n      }\n      if (tempVar4 < tempVar3 || isTrue) {\n        resultSignBit = resultSignBit | tempVar1 >> 3;\n      }\n      tempVar8 = tempVar7 | resultFractionBits;\n      if (tempVar8 == 0) break;\n      tempVar7 = tempVar7 << 4 | resultFractionBits >> 0x1c;\n      resultFractionBits = resultFractionBits << 4;\n      tempVar2 = tempVar2 & 0xfffffff8 | exponentBits1 >> 0x1d;\n      exponentBits1 = (exponentBits2 >> 1) << 3;\n      tempVar1 = tempVar1 >> 4;\n      if (tempVar1 == 0) {\n        tempVar4 = tempVar2;\n        if ((tempVar5 & 0x100000) != 0) goto LAB_080089b2;\n        tempVar5 = tempVar5 | resultSignBit;\n        resultSignBit = 0;\n        tempVar1 = 0x80000000;\n      }\n    }\n    if ((tempVar5 & 0x100000) == 0) {\n      tempVar5 = tempVar5 | resultSignBit;\n      resultSignBit = 0;\n    }\nLAB_080089b2:\n    isCarry = 0xfc < tempVar6;\n    isEqual = SBORROW4(tempVar6,0xfd);\n    tempVar2 = difference + 0x300;\n    isTrue = tempVar2 == 0;\n    tempVar1 = tempVar2;\n    if (isCarry && !isTrue) {\n      isCarry = 0x6ff < tempVar2;\n      isEqual = SBORROW4(tempVar2,0x700);\n      tempVar1 = difference - 0x400;\n      isTrue = tempVar2 == 0x700;\n    }\n    if (!isCarry || isTrue) {\n      isTrue = tempVar4 <= tempVar7;\n      if (tempVar7 == tempVar4) {\n        isTrue = exponentBits1 <= resultFractionBits;\n      }\n      if (tempVar7 == tempVar4 && resultFractionBits == exponentBits1) {\n        isTrue = (resultSignBit & 1) != 0;\n      }\n      return CONCAT44(tempVar5 + tempVar6 * 0x100000 + (uint)CARRY4(resultSignBit,(uint)isTrue),resultSignBit + isTrue);\n    }\n  }\n  if (!isTrue && (int)tempVar1 < 0 == isEqual) {\n    return (ulonglong)(tempVar5 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  isCarry = SCARRY4(tempVar6,0x36);\n  isTrue = (int)(tempVar6 + 0x36) < 0;\n  isEqual = tempVar6 == 0xffffffca;\n  if (isEqual || isTrue != isCarry) {\n    resultSignBit = 0;\n  }\n  if (isEqual || isTrue != isCarry) {\n    tempVar5 = tempVar5 & 0x80000000;\n  }\n  if (isEqual || isTrue != isCarry) {\n    return CONCAT44(tempVar5,resultSignBit);\n  }\n  tempVar1 = -tempVar6;\n  tempVar7 = tempVar1 - 0x20;\n  if (0x1f < (int)tempVar1) {\n    tempVar1 = resultSignBit >> (tempVar7 & 0xff) | tempVar5 << (0x20 - tempVar7 & 0xff);\n    tempVar6 = (tempVar5 >> (tempVar7 & 0xff) & ~((tempVar5 & 0x80000000) >> (tempVar7 & 0xff))) -\n            ((int)tempVar1 >> 0x1f);\n    if ((tempVar8 | resultSignBit << (0x20 - tempVar7 & 0xff) | tempVar1 << 1) == 0) {\n      tempVar6 = tempVar6 & ~(tempVar1 >> 0x1f);\n    }\n    return CONCAT44(tempVar5,tempVar6) & 0x80000000ffffffff;\n  }\n  difference = tempVar1 - 0x14;\n  if (difference != 0 && difference < 0 == SCARRY4(tempVar7,0xc)) {\n    tempVar6 = 0xc - difference;\n    tempVar1 = resultSignBit << (tempVar6 & 0xff);\n    resultSignBit = resultSignBit >> (0x20 - tempVar6 & 0xff) | tempVar5 << (tempVar6 & 0xff);\n    tempVar6 = resultSignBit + -((int)tempVar1 >> 0x1f);\n    if ((tempVar8 | tempVar1 << 1) == 0) {\n      tempVar6 = tempVar6 & ~(tempVar1 >> 0x1f);\n    }\n    return CONCAT44((tempVar5 & 0x80000000) + (uint)CARRY4(resultSignBit,-((int)tempVar1 >> 0x1f)),tempVar6);\n  }\n  tempVar7 = resultSignBit << (tempVar6 + 0x20 & 0xff);\n  resultSignBit = resultSignBit >> (tempVar1 & 0xff) | tempVar5 << (tempVar6 + 0x20 & 0xff);\n  tempVar6 = resultSignBit + -((int)tempVar7 >> 0x1f);\n  if ((tempVar8 | tempVar7 << 1) == 0) {\n    tempVar6 = tempVar6 & ~(tempVar7 >> 0x1f);\n  }\n  return CONCAT44((tempVar5 & 0x80000000) +\n                  ((tempVar5 & 0x7fffffff) >> (tempVar1 & 0xff)) +\n                  (uint)CARRY4(resultSignBit,-((int)tempVar7 >> 0x1f)),tempVar6);\n}\n\n",
            "renaming": {
                "FUN_08008894": "calculate_floating_point_number_08008894",
                "param_1": "signBit",
                "param_2": "exponentBits",
                "param_3": "fractionBits1",
                "param_4": "fractionBits2",
                "uVar1": "exponentBits1",
                "uVar2": "exponentBits2",
                "uVar3": "tempVar1",
                "uVar4": "tempVar2",
                "uVar5": "tempVar3",
                "uVar6": "tempVar4",
                "uVar7": "tempVar5",
                "iVar8": "difference",
                "uVar9": "tempVar6",
                "uVar10": "tempVar7",
                "uVar11": "resultSignBit",
                "uVar12": "resultFractionBits",
                "uVar13": "tempVar8",
                "bVar14": "isTrue",
                "bVar15": "isEqual",
                "bVar16": "isCarry"
            },
            "calling": [
                "FUN_080098d0",
                "FUN_08003004",
                "FUN_0800a1bc",
                "FUN_080005b4",
                "FUN_08001994",
                "FUN_0800af78",
                "FUN_08009990"
            ],
            "called": [
                "FUN_08008a02"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008a02": {
            "entrypoint": "0x08008a02",
            "current_name": "reverse_binarized_number_08008a02",
            "code": "\nulonglong reverse_binarized_number_08008a02(uint input_1,uint input_2,uint input_3,uint input_4)\n\n{\n  uint bit_check_1;\n  uint input_copy;\n  uint bit_check_2;\n  uint temp;\n  uint mask;\n  bool is_zero;\n  \n  bit_check_2 = mask & input_4 >> 0x14;\n  temp = input_2;\n  if (input_copy != mask || bit_check_2 != mask) {\n    if (input_copy == mask) {\n      if (((input_1 | input_2 << 0xc) == 0) && (input_1 = input_3, temp = input_4, bit_check_2 != mask)\n         ) {\nLAB_08008874:\n        return (ulonglong)((input_2 ^ input_4) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n    }\n    else if (bit_check_2 == mask) {\n      input_1 = input_3;\n      temp = input_4;\n      if ((input_3 | input_4 << 0xc) == 0) {\nLAB_08008838:\n        return (ulonglong)((input_2 ^ input_4) & 0x80000000) << 0x20;\n      }\n    }\n    else {\n      is_zero = (input_1 | input_2 << 1) == 0;\n      if (!is_zero) {\n        is_zero = (input_3 | input_4 << 1) == 0;\n      }\n      if (!is_zero) {\n        if (input_copy == 0) {\n          temp = input_2 & 0x80000000;\n          do {\n            bit_check_1 = input_1 & 0x80000000;\n            input_1 = input_1 << 1;\n            input_2 = input_2 * 2 + (uint)(bit_check_1 != 0);\n          } while ((input_2 & 0x100000) == 0);\n          input_2 = input_2 | temp;\n          if (bit_check_2 != 0) {\n            return CONCAT44(input_2,input_1);\n          }\n        }\n        do {\n          temp = input_3 & 0x80000000;\n          input_3 = input_3 << 1;\n          input_4 = input_4 * 2 + (uint)(temp != 0);\n        } while ((input_4 & 0x100000) == 0);\n        return CONCAT44(input_2,input_1);\n      }\n      if ((input_1 | input_2 << 1) != 0) goto LAB_08008874;\n      if ((input_3 | input_4 << 1) != 0) goto LAB_08008838;\n    }\n  }\n  return CONCAT44(temp,input_1) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_08008a02": "reverse_binarized_number_08008a02",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "bit_check_1",
                "unaff_r4": "input_copy",
                "uVar2": "bit_check_2",
                "uVar3": "temp",
                "in_r12": "mask",
                "bVar4": "is_zero"
            },
            "calling": [
                "FUN_08008894"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008a74": {
            "entrypoint": "0x08008a74",
            "current_name": "check_parameters_08008a74",
            "code": "\nuint check_parameters_08008a74(uint input_1,uint input_2,uint input_3,uint input_4)\n\n{\n  uint result;\n  bool is_zero;\n  bool is_negative;\n  \n  if (((int)(input_2 << 1) >> 0x15 == -1 || (int)(input_4 << 1) >> 0x15 == -1) &&\n     ((((int)(input_2 << 1) >> 0x15 == -1 && ((input_1 | input_2 << 0xc) != 0)) ||\n      (((int)(input_4 << 1) >> 0x15 == -1 && ((input_3 | input_4 << 0xc) != 0)))))) {\n    return 1;\n  }\n  is_zero = (input_1 | input_2 << 1) == 0;\n  if (is_zero) {\n    is_zero = (input_3 | input_4 << 1) == 0;\n  }\n  if (!is_zero) {\n    is_zero = input_2 == input_4;\n  }\n  if (is_zero) {\n    is_zero = input_1 == input_3;\n  }\n  if (!is_zero) {\n    result = input_2 ^ input_4;\n    is_zero = result == 0;\n    if (-1 < (int)result) {\n      is_zero = input_2 == input_4;\n    }\n    is_negative = -1 < (int)result && input_4 <= input_2;\n    if (is_zero) {\n      is_negative = input_3 <= input_1;\n    }\n    input_4 = (int)input_4 >> 0x1f;\n    if (!is_negative) {\n      input_4 = ~input_4;\n    }\n    return input_4 | 1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008a74": "check_parameters_08008a74",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "uVar1": "result",
                "bVar2": "is_zero",
                "bVar3": "is_negative"
            },
            "calling": [
                "FUN_08008b00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008af0": {
            "entrypoint": "0x08008af0",
            "current_name": "execute_function_08008af0",
            "code": "\nvoid executeFunction_08008af0(undefined4 parameter1,undefined4 parameter2,undefined4 parameter3,undefined4 parameter4)\n\n{\n  FUN_08008b00(parameter3,parameter4,parameter1,parameter2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008af0": "execute_function_08008af0",
                "param_1": "parameter1",
                "param_2": "parameter2",
                "param_3": "parameter3",
                "param_4": "parameter4"
            },
            "calling": [
                "FUN_08008b4c",
                "FUN_08008b60"
            ],
            "called": [
                "FUN_08008b00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b00": {
            "entrypoint": "0x08008b00",
            "current_name": "initialize_function_08008b00",
            "code": "\nundefined4 initializeFunction_08008b00(undefined4 param)\n\n{\n  FUN_08008a74();\n  return param;\n}\n\n",
            "renaming": {
                "FUN_08008b00": "initialize_function_08008b00",
                "param_1": "param"
            },
            "calling": [
                "FUN_08008b24",
                "FUN_08008b10",
                "FUN_08008af0"
            ],
            "called": [
                "FUN_08008a74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b10": {
            "entrypoint": "0x08008b10",
            "current_name": "check_if_not_null_08008b10",
            "code": "\nbool check_if_not_null_08008b10(void)\n\n{\n  char result;\n  \n  FUN_08008b00();\n  return result != '\\0';\n}\n\n",
            "renaming": {
                "FUN_08008b10": "check_if_not_null_08008b10",
                "in_ZR": "result"
            },
            "calling": [
                "FUN_08009d78",
                "FUN_0800a5a0"
            ],
            "called": [
                "FUN_08008b00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b24": {
            "entrypoint": "0x08008b24",
            "current_name": "check_if_empty_string_08008b24",
            "code": "\nbool check_if_empty_string_08008b24(void)\n\n{\n  char input_char;\n  \n  FUN_08008b00();\n  return input_char == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08008b24": "check_if_empty_string_08008b24",
                "in_CY": "input_char"
            },
            "calling": [
                "FUN_080098d0",
                "FUN_08003004",
                "FUN_08009b24"
            ],
            "called": [
                "FUN_08008b00"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b4c": {
            "entrypoint": "0x08008b4c",
            "current_name": "check_carry_and_zero_flags_08008b4c",
            "code": "\nbool check_Carry_and_Zero_flags_08008b4c(void)\n\n{\n  undefined zero_flag;\n  undefined carry_flag;\n  \n  FUN_08008af0();\n  return !(bool)carry_flag || (bool)zero_flag;\n}\n\n",
            "renaming": {
                "FUN_08008b4c": "check_carry_and_zero_flags_08008b4c",
                "in_ZR": "zero_flag",
                "in_CY": "carry_flag"
            },
            "calling": [
                "FUN_0800a5a0"
            ],
            "called": [
                "FUN_08008af0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b60": {
            "entrypoint": "0x08008b60",
            "current_name": "is_end_of_string_08008b60",
            "code": "\nbool isEndOfString_08008b60(void)\n\n{\n  char currentCharacter;\n  \n  FUN_08008af0();\n  return currentCharacter == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08008b60": "is_end_of_string_08008b60",
                "in_CY": "currentCharacter"
            },
            "calling": [
                "FUN_080094c0",
                "FUN_08003004",
                "FUN_08009318",
                "FUN_0800af78"
            ],
            "called": [
                "FUN_08008af0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b74": {
            "entrypoint": "0x08008b74",
            "current_name": "check_param_combination_08008b74",
            "code": "\nundefined4 check_param_combination_08008b74(uint input1,int input2,uint input3,int input4)\n\n{\n  if ((((input2 << 1) >> 0x15 != -1) || ((input1 | input2 << 0xc) == 0)) &&\n     (((input4 << 1) >> 0x15 != -1 || ((input3 | input4 << 0xc) == 0)))) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08008b74": "check_param_combination_08008b74",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4"
            },
            "calling": [
                "FUN_080098d0"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008ba0": {
            "entrypoint": "0x08008ba0",
            "current_name": "decode_value_08008ba0",
            "code": "\nuint decode_value_08008ba0(uint value1,uint value2)\n\n{\n  uint shifted_value;\n  int offset;\n  uint limit;\n  \n  offset = value2 * 2 + 0x200000;\n  if (value2 * 2 < 0xffe00000) {\n    if (-1 < offset) {\n      return 0;\n    }\n    shifted_value = offset >> 0x15;\n    limit = -shifted_value - 0x3e1;\n    if (shifted_value < 0xfffffc20 && limit != 0) {\n      shifted_value = (value2 << 0xb | 0x80000000 | value1 >> 0x15) >> (limit & 0xff);\n      if ((value2 & 0x80000000) != 0) {\n        shifted_value = -shifted_value;\n      }\n      return shifted_value;\n    }\n  }\n  else if ((value1 | value2 << 0xc) != 0) {\n    return 0;\n  }\n  value2 = value2 & 0x80000000;\n  if (value2 == 0) {\n    value2 = 0x7fffffff;\n  }\n  return value2;\n}\n\n",
            "renaming": {
                "FUN_08008ba0": "decode_value_08008ba0",
                "param_1": "value1",
                "param_2": "value2",
                "uVar1": "shifted_value",
                "iVar2": "offset",
                "uVar3": "limit"
            },
            "calling": [
                "FUN_080095b8",
                "FUN_08003004",
                "FUN_08009d78",
                "FUN_0800a348",
                "FUN_0800a5a0",
                "FUN_080005b4",
                "FUN_0800adf0",
                "FUN_08002c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008bf0": {
            "entrypoint": "0x08008bf0",
            "current_name": "calculate_shifted_value_08008bf0",
            "code": "\nuint calculate_shifted_value_08008bf0(uint input_value,uint shift_amount)\n\n{\n  int temp_var1;\n  uint temp_var2;\n  \n  if ((shift_amount & 0x80000000) != 0) {\n    return 0;\n  }\n  temp_var1 = shift_amount * 2 + 0x200000;\n  if (shift_amount * 2 < 0xffe00000) {\n    if (-1 < temp_var1) {\n      return 0;\n    }\n    temp_var2 = -(temp_var1 >> 0x15) - 0x3e1;\n    if (-1 < (int)temp_var2) {\n      return (shift_amount << 0xb | 0x80000000 | input_value >> 0x15) >> (temp_var2 & 0xff);\n    }\n  }\n  else if ((input_value | shift_amount << 0xc) != 0) {\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008bf0": "calculate_shifted_value_08008bf0",
                "param_1": "input_value",
                "param_2": "shift_amount",
                "iVar1": "temp_var1",
                "uVar2": "temp_var2"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_08003004",
                "FUN_08002408",
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_08001994",
                "FUN_08001f00",
                "FUN_08002c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008c30": {
            "entrypoint": "0x08008c30",
            "current_name": "calculate_float_bits_08008c30",
            "code": "\nuint calculateFloatBits_08008c30(uint floatValue,uint floatBits)\n\n{\n  uint result;\n  uint timesTwo;\n  uint adjustedFloatBits;\n  uint originalFloatBits;\n  bool isZero;\n  bool isLessThanThreshold;\n  \n  timesTwo = floatBits * 2;\n  isLessThanThreshold = timesTwo < 0x70000000;\n  adjustedFloatBits = timesTwo + 0x90000000;\n  result = adjustedFloatBits;\n  if (!isLessThanThreshold) {\n    originalFloatBits = timesTwo + 0x8fe00000;\n    result = originalFloatBits;\n  }\n  isZero = result == 0;\n  if (!isLessThanThreshold && adjustedFloatBits >= 0x200000) {\n    isZero = originalFloatBits == 0x1fc00000;\n  }\n  if (((isLessThanThreshold || adjustedFloatBits < 0x200000) || 0x1fc00000 < originalFloatBits) || isZero) {\n    if ((floatBits & 0x40000000) != 0) {\n      if (((int)timesTwo >> 0x15 == -1) && ((floatValue | floatBits << 0xc) != 0)) {\n        return 0x7fc00000;\n      }\n      return floatBits & 0x80000000 | 0x7f800000;\n    }\n    if ((int)(timesTwo + 0x92e00000) < 0 != SCARRY4(adjustedFloatBits,0x2e00000)) {\n      return floatBits & 0x80000000;\n    }\n    timesTwo = 0x18 - (timesTwo + 0x92e00000 >> 0x15);\n    result = floatValue >> (timesTwo & 0xff);\n    if (floatValue << (0x20 - timesTwo & 0xff) != 0) {\n      result = result | 1;\n    }\n    adjustedFloatBits = floatBits & 0x1fffff | 0x100000;\n    floatValue = result | adjustedFloatBits << (0x20 - timesTwo & 0xff);\n    adjustedFloatBits = (adjustedFloatBits >> (timesTwo & 0xff)) << 1;\n  }\n  result = (floatBits & 0x80000000 | floatValue >> 0x1d) + adjustedFloatBits * 4 + (uint)(0x7fffffff < floatValue * 8);\n  if (floatValue * 8 == 0x80000000) {\n    result = result & 0xfffffffe;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08008c30": "calculate_float_bits_08008c30",
                "param_1": "floatValue",
                "param_2": "floatBits",
                "uVar1": "result",
                "uVar2": "timesTwo",
                "uVar3": "adjustedFloatBits",
                "in_r12": "originalFloatBits",
                "bVar4": "isZero",
                "bVar5": "isLessThanThreshold"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08002638",
                "FUN_08004940",
                "FUN_0800056c",
                "FUN_080005b4",
                "FUN_080044e8",
                "FUN_080046d0",
                "FUN_08002978",
                "FUN_08001994",
                "FUN_08001f00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008cd8": {
            "entrypoint": "0x08008cd8",
            "current_name": "calculate_08008cd8",
            "code": "\nuint calculate_08008cd8(uint input,uint value,undefined4 unused,uint flag)\n\n{\n  int shift1;\n  int shift2;\n  uint temp1;\n  uint temp2;\n  uint result1;\n  uint result2;\n  uint difference;\n  bool check;\n  \n  temp1 = value ^ 0x80000000;\n  result1 = input << 1;\n  check = result1 == 0;\n  if (!check) {\n    flag = value << 1;\n    check = flag == 0;\n  }\n  if (!check) {\n    check = result1 == flag;\n  }\n  shift1 = (int)result1 >> 0x18;\n  if (!check) {\n    check = shift1 == -1;\n  }\n  if (!check) {\n    check = (int)flag >> 0x18 == -1;\n  }\n  if (check) {\n    shift2 = (int)(value << 1) >> 0x18;\n    if (shift1 == -1 || shift2 == -1) {\n      result1 = temp1;\n      if (shift1 == -1) {\n        result1 = input;\n      }\n      if (shift1 != -1 || shift2 != -1) {\n        temp1 = result1;\n      }\n      check = (result1 & 0x7fffff) == 0;\n      if (check) {\n        check = (temp1 & 0x7fffff) == 0;\n      }\n      if (check) {\n        check = result1 == temp1;\n      }\n      if (!check) {\n        result1 = result1 | 0x400000;\n      }\n      return result1;\n    }\n    if (((input ^ temp1) & 0x7fffffff) != 0) {\n      if (result1 == 0) {\n        input = temp1;\n      }\n      return input;\n    }\n    if (input != temp1) {\n      return 0;\n    }\n    if ((result1 & 0xff000000) == 0) {\n      temp1 = input << 1;\n      if ((input & 0x80000000) != 0) {\n        temp1 = temp1 | 0x80000000;\n      }\n      return temp1;\n    }\n    if (result1 < 0xfe000000) {\n      return input + 0x800000;\n    }\n    input = input & 0x80000000;\nLAB_08008e12:\n    return input | 0x7f800000;\n  }\n  result1 = result1 >> 0x18;\n  flag = flag >> 0x18;\n  difference = flag - result1;\n  check = difference != 0;\n  result2 = result1;\n  if (check && result1 <= flag) {\n    result2 = result1 + difference;\n  }\n  if (check && result1 <= flag) {\n    temp1 = temp1 ^ input;\n  }\n  if (check && result1 <= flag) {\n    input = input ^ temp1;\n  }\n  if (check && result1 <= flag) {\n    temp1 = temp1 ^ input;\n  }\n  if (flag < result1) {\n    difference = -difference;\n  }\n  if (0x19 < difference) {\n    return input;\n  }\n  result1 = input & 0xffffff | 0x800000;\n  if ((input & 0x80000000) != 0) {\n    result1 = -result1;\n  }\n  temp2 = temp1 & 0xffffff | 0x800000;\n  if ((temp1 & 0x80000000) != 0) {\n    temp2 = -temp2;\n  }\n  if (result2 == difference) {\n    temp2 = temp2 ^ 0x800000;\n    if (result2 == 0) {\n      result1 = result1 ^ 0x800000;\n      result2 = 1;\n    }\n    else {\n      difference = difference - 1;\n    }\n  }\n  result1 = result1 + ((int)temp2 >> (difference & 0xff));\n  temp2 = temp2 << (0x20 - difference & 0xff);\n  input = result1 & 0x80000000;\n  if ((int)result1 < 0) {\n    check = temp2 != 0;\n    temp2 = -temp2;\n    result1 = -result1 - (uint)check;\n  }\n  if (result1 < 0x800000) {\n    temp1 = temp2 & 0x80000000;\n    temp2 = temp2 << 1;\n    result1 = result1 * 2 + (uint)(temp1 != 0);\n    temp1 = result2 - 2;\n    if (result2 - 1 == 0 || result1 < 0x800000) {\n      difference = LZCOUNT(result1) - 8;\n      result1 = result1 << (difference & 0xff);\n      if ((int)temp1 < (int)difference) {\n        result1 = result1 >> (-(temp1 - difference) & 0xff);\n      }\n      else {\n        result1 = result1 + (temp1 - difference) * 0x800000;\n      }\n      return result1 | input;\n    }\n  }\n  else {\n    temp1 = result2 - 1;\n    if (0xffffff < result1) {\n      temp1 = result1 & 1;\n      result1 = result1 >> 1;\n      temp2 = (uint)(temp1 != 0) << 0x1f | temp2 >> 1;\n      temp1 = result2;\n      if (0xfd < result2) goto LAB_08008e12;\n    }\n  }\n  result1 = result1 + temp1 * 0x800000 + (uint)(0x7fffffff < temp2);\n  if (temp2 == 0x80000000) {\n    result1 = result1 & 0xfffffffe;\n  }\n  return result1 | input;\n}\n\n",
            "renaming": {
                "FUN_08008cd8": "calculate_08008cd8",
                "param_1": "input",
                "param_2": "value",
                "param_3": "unused",
                "param_4": "flag",
                "iVar1": "shift1",
                "iVar2": "shift2",
                "uVar3": "temp1",
                "uVar4": "temp2",
                "uVar5": "result1",
                "uVar6": "result2",
                "uVar7": "difference",
                "bVar8": "check"
            },
            "calling": [
                "FUN_08002908",
                "FUN_08003004",
                "FUN_08004940",
                "FUN_08002408",
                "FUN_080005b4",
                "FUN_08002978",
                "FUN_080028bc",
                "FUN_08001f00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008cdc": {
            "entrypoint": "0x08008cdc",
            "current_name": "calculate_float_08008cdc",
            "code": "\nuint calculateFloat_08008cdc(uint input1,uint input2,undefined4 unusedParam,uint unusedParam2)\n\n{\n  int shiftAmount;\n  int bitCheck;\n  uint input1_fraction;\n  uint input1_modified;\n  uint shiftCount1;\n  uint shiftCount2;\n  bool isEqualZero;\n  \n  input1_modified = input1 << 1;\n  isEqualZero = input1_modified == 0;\n  if (!isEqualZero) {\n    unusedParam2 = input2 << 1;\n    isEqualZero = unusedParam2 == 0;\n  }\n  if (!isEqualZero) {\n    isEqualZero = input1_modified == unusedParam2;\n  }\n  shiftAmount = (int)input1_modified >> 0x18;\n  if (!isEqualZero) {\n    isEqualZero = shiftAmount == -1;\n  }\n  if (!isEqualZero) {\n    isEqualZero = (int)unusedParam2 >> 0x18 == -1;\n  }\n  if (isEqualZero) {\n    bitCheck = (int)(input2 << 1) >> 0x18;\n    if (shiftAmount == -1 || bitCheck == -1) {\n      input1_modified = input2;\n      if (shiftAmount == -1) {\n        input1_modified = input1;\n      }\n      if (shiftAmount != -1 || bitCheck != -1) {\n        input2 = input1_modified;\n      }\n      isEqualZero = (input1_modified & 0x7fffff) == 0;\n      if (isEqualZero) {\n        isEqualZero = (input2 & 0x7fffff) == 0;\n      }\n      if (isEqualZero) {\n        isEqualZero = input1_modified == input2;\n      }\n      if (!isEqualZero) {\n        input1_modified = input1_modified | 0x400000;\n      }\n      return input1_modified;\n    }\n    if (((input1 ^ input2) & 0x7fffffff) != 0) {\n      if (input1_modified == 0) {\n        input1 = input2;\n      }\n      return input1;\n    }\n    if (input1 != input2) {\n      return 0;\n    }\n    if ((input1_modified & 0xff000000) == 0) {\n      input1_modified = input1 << 1;\n      if ((input1 & 0x80000000) != 0) {\n        input1_modified = input1_modified | 0x80000000;\n      }\n      return input1_modified;\n    }\n    if (input1_modified < 0xfe000000) {\n      return input1 + 0x800000;\n    }\n    input1 = input1 & 0x80000000;\nLAB_08008e12:\n    return input1 | 0x7f800000;\n  }\n  input1_modified = input1_modified >> 0x18;\n  unusedParam2 = unusedParam2 >> 0x18;\n  shiftCount2 = unusedParam2 - input1_modified;\n  isEqualZero = shiftCount2 != 0;\n  shiftCount1 = input1_modified;\n  if (isEqualZero && input1_modified <= unusedParam2) {\n    shiftCount1 = input1_modified + shiftCount2;\n  }\n  if (isEqualZero && input1_modified <= unusedParam2) {\n    input2 = input2 ^ input1;\n  }\n  if (isEqualZero && input1_modified <= unusedParam2) {\n    input1 = input1 ^ input2;\n  }\n  if (isEqualZero && input1_modified <= unusedParam2) {\n    input2 = input2 ^ input1;\n  }\n  if (unusedParam2 < input1_modified) {\n    shiftCount2 = -shiftCount2;\n  }\n  if (0x19 < shiftCount2) {\n    return input1;\n  }\n  input1_modified = input1 & 0xffffff | 0x800000;\n  if ((input1 & 0x80000000) != 0) {\n    input1_modified = -input1_modified;\n  }\n  input1_fraction = input2 & 0xffffff | 0x800000;\n  if ((input2 & 0x80000000) != 0) {\n    input1_fraction = -input1_fraction;\n  }\n  if (shiftCount1 == shiftCount2) {\n    input1_fraction = input1_fraction ^ 0x800000;\n    if (shiftCount1 == 0) {\n      input1_modified = input1_modified ^ 0x800000;\n      shiftCount1 = 1;\n    }\n    else {\n      shiftCount2 = shiftCount2 - 1;\n    }\n  }\n  input1_modified = input1_modified + ((int)input1_fraction >> (shiftCount2 & 0xff));\n  input1_fraction = input1_fraction << (0x20 - shiftCount2 & 0xff);\n  input1 = input1_modified & 0x80000000;\n  if ((int)input1_modified < 0) {\n    isEqualZero = input1_fraction != 0;\n    input1_fraction = -input1_fraction;\n    input1_modified = -input1_modified - (uint)isEqualZero;\n  }\n  if (input1_modified < 0x800000) {\n    shiftCount2 = input1_fraction & 0x80000000;\n    input1_fraction = input1_fraction << 1;\n    input1_modified = input1_modified * 2 + (uint)(shiftCount2 != 0);\n    shiftCount2 = shiftCount1 - 2;\n    if (shiftCount1 - 1 == 0 || input1_modified < 0x800000) {\n      shiftCount1 = leadingZeroCount(input1_modified) - 8;\n      input1_modified = input1_modified << (shiftCount1 & 0xff);\n      if ((int)shiftCount2 < (int)shiftCount1) {\n        input1_modified = input1_modified >> (-(shiftCount2 - shiftCount1) & 0xff);\n      }\n      else {\n        input1_modified = input1_modified + (shiftCount2 - shiftCount1) * 0x800000;\n      }\n      return input1_modified | input1;\n    }\n  }\n  else {\n    shiftCount2 = shiftCount1 - 1;\n    if (0xffffff < input1_modified) {\n      shiftCount2 = input1_modified & 1;\n      input1_modified = input1_modified >> 1;\n      input1_fraction = (uint)(shiftCount2 != 0) << 0x1f | input1_fraction >> 1;\n      shiftCount2 = shiftCount1;\n      if (0xfd < shiftCount1) goto LAB_08008e12;\n    }\n  }\n  input1_modified = input1_modified + shiftCount2 * 0x800000 + (uint)(0x7fffffff < input1_fraction);\n  if (input1_fraction == 0x80000000) {\n    input1_modified = input1_modified & 0xfffffffe;\n  }\n  return input1_modified | input1;\n}\n\n",
            "renaming": {
                "FUN_08008cdc": "calculate_float_08008cdc",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "unusedParam",
                "param_4": "unusedParam2",
                "iVar1": "shiftAmount",
                "iVar2": "bitCheck",
                "uVar3": "input1_fraction",
                "uVar4": "input1_modified",
                "uVar5": "shiftCount1",
                "uVar6": "shiftCount2",
                "bVar7": "isEqualZero",
                "LZCOUNT": "leadingZeroCount"
            },
            "calling": [
                "FUN_08002908",
                "FUN_08003826",
                "FUN_08003004",
                "FUN_08004940",
                "FUN_080005b4",
                "FUN_08002978",
                "FUN_080028bc",
                "FUN_08001f00"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008e3c": {
            "entrypoint": "0x08008e3c",
            "current_name": "calculate_value_08008e3c",
            "code": "\nuint calculateValue_08008e3c(uint input)\n\n{\n  uint leadingZeros;\n  uint shiftAmount;\n  int constant;\n  uint comparisonValue;\n  \n  if (input == 0) {\n    return 0;\n  }\n  leadingZeros = LZCOUNT(input);\n  shiftAmount = leadingZeros - 8;\n  constant = shiftAmount * -0x800000 + 0x4a800000;\n  if (7 < leadingZeros) {\n    comparisonValue = 0 << (shiftAmount & 0xff);\n    leadingZeros = constant + (input << (shiftAmount & 0xff)) +\n            (0U >> (0x20 - shiftAmount & 0xff)) + (uint)(0x7fffffff < comparisonValue);\n    if (comparisonValue == 0x80000000) {\n      leadingZeros = leadingZeros & 0xfffffffe;\n    }\n    return leadingZeros;\n  }\n  shiftAmount = input << leadingZeros + 0x18;\n  leadingZeros = constant + ((input >> (0x20 - (leadingZeros + 0x18) & 0xff)) - ((int)shiftAmount >> 0x1f));\n  if ((shiftAmount & 0x7fffffff) == 0) {\n    leadingZeros = leadingZeros & ~(shiftAmount >> 0x1f);\n  }\n  return leadingZeros;\n}\n\n",
            "renaming": {
                "FUN_08008e3c": "calculate_value_08008e3c",
                "param_1": "input",
                "uVar1": "leadingZeros",
                "uVar2": "shiftAmount",
                "iVar3": "constant",
                "uVar4": "comparisonValue"
            },
            "calling": [
                "FUN_08002638",
                "FUN_08002c18"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008e44": {
            "entrypoint": "0x08008e44",
            "current_name": "reverse_and_shift_08008e44",
            "code": "\nuint reverse_and_shift_08008e44(uint input)\n\n{\n  uint leading_zeros;\n  uint shift_amount;\n  uint negative_flag;\n  int result;\n  \n  negative_flag = input & 0x80000000;\n  if ((int)negative_flag < 0) {\n    input = -input;\n  }\n  if (input == 0) {\n    return 0;\n  }\n  leading_zeros = count_leading_zeros(input);\n  shift_amount = leading_zeros - 8;\n  result = ((negative_flag | 0x4b000000) - 0x800000) + shift_amount * -0x800000;\n  if (7 < leading_zeros) {\n    leading_zeros = 0 << (shift_amount & 0xff);\n    negative_flag = result + (input << (shift_amount & 0xff)) +\n            (0U >> (0x20 - shift_amount & 0xff)) + (uint)(0x7fffffff < leading_zeros);\n    if (leading_zeros == 0x80000000) {\n      negative_flag = negative_flag & 0xfffffffe;\n    }\n    return negative_flag;\n  }\n  shift_amount = input << leading_zeros + 0x18;\n  negative_flag = result + ((input >> (0x20 - (leading_zeros + 0x18) & 0xff)) - ((int)shift_amount >> 0x1f));\n  if ((shift_amount & 0x7fffffff) == 0) {\n    negative_flag = negative_flag & ~(shift_amount >> 0x1f);\n  }\n  return negative_flag;\n}\n\n",
            "renaming": {
                "FUN_08008e44": "reverse_and_shift_08008e44",
                "param_1": "input",
                "uVar1": "leading_zeros",
                "uVar2": "shift_amount",
                "uVar3": "negative_flag",
                "iVar4": "result",
                "LZCOUNT": "count_leading_zeros"
            },
            "calling": [
                "FUN_08003618",
                "FUN_08003004",
                "FUN_08004940",
                "FUN_08002408",
                "FUN_08001f00",
                "FUN_080004fc",
                "FUN_08002c18",
                "FUN_080024c4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008eec": {
            "entrypoint": "0x08008eec",
            "current_name": "calculate_float_value_08008eec",
            "code": "\nuint calculateFloatValue_08008eec(uint inputValue1,uint inputValue2,undefined4 param3,uint param4)\n\n{\n  longlong product;\n  uint result;\n  uint shiftedValue1;\n  int shiftedSum;\n  int adjustment;\n  uint productLower;\n  int adjustment2;\n  uint modifiedValue;\n  bool condition1;\n  bool condition2;\n  \n  shiftedValue1 = inputValue1 >> 0x17 & 0xff;\n  condition1 = shiftedValue1 == 0;\n  if (!condition1) {\n    param4 = inputValue2 >> 0x17 & 0xff;\n    condition1 = param4 == 0;\n  }\n  if (!condition1) {\n    condition1 = shiftedValue1 == 0xff;\n  }\n  if (!condition1) {\n    condition1 = param4 == 0xff;\n  }\n  if (condition1) {\n    param4 = inputValue2 >> 0x17 & 0xff;\n    if (shiftedValue1 == 0xff || param4 == 0xff) {\n      condition1 = inputValue1 == 0 || inputValue1 == 0x80000000;\n      result = inputValue2;\n      if (inputValue1 != 0 && inputValue1 != 0x80000000) {\n        condition1 = inputValue2 == 0;\n        result = inputValue1;\n      }\n      if (!condition1) {\n        condition1 = inputValue2 == 0x80000000;\n      }\n      modifiedValue = result;\n      if (((condition1) || ((shiftedValue1 == 0xff && ((result & 0x7fffff) != 0)))) ||\n         ((param4 == 0xff && (modifiedValue = inputValue2, (inputValue2 & 0x7fffff) != 0)))) {\n        return modifiedValue | 0x7fc00000;\n      }\n      result = result ^ inputValue2;\n      goto LAB_0800903c;\n    }\n    condition1 = (inputValue1 & 0x7fffffff) == 0;\n    if (!condition1) {\n      condition1 = (inputValue2 & 0x7fffffff) == 0;\n    }\n    if (condition1) {\n      return (inputValue1 ^ inputValue2) & 0x80000000;\n    }\n    condition1 = shiftedValue1 == 0;\n    result = inputValue1 & 0x80000000;\n    while( true ) {\n      if (condition1) {\n        inputValue1 = inputValue1 << 1;\n        condition1 = (inputValue1 & 0x800000) == 0;\n      }\n      if (!condition1) break;\n      shiftedValue1 = shiftedValue1 - 1;\n    }\n    inputValue1 = inputValue1 | result;\n    condition1 = param4 == 0;\n    result = inputValue2 & 0x80000000;\n    while( true ) {\n      if (condition1) {\n        inputValue2 = inputValue2 << 1;\n        condition1 = (inputValue2 & 0x800000) == 0;\n      }\n      if (!condition1) break;\n      param4 = param4 - 1;\n    }\n    inputValue2 = inputValue2 | result;\n  }\n  shiftedSum = shiftedValue1 + param4;\n  modifiedValue = inputValue1 ^ inputValue2;\n  shiftedValue1 = inputValue1 << 9;\n  condition1 = shiftedValue1 == 0;\n  if (!condition1) {\n    inputValue2 = inputValue2 << 9;\n    condition1 = inputValue2 == 0;\n  }\n  if (condition1) {\n    if (shiftedValue1 == 0) {\n      inputValue2 = inputValue2 << 9;\n    }\n    result = modifiedValue & 0x80000000 | inputValue1 & 0x7fffff | inputValue2 >> 9;\n    condition2 = SBORROW4(shiftedSum,0x7f);\n    adjustment = shiftedSum + -0x7f;\n    condition1 = adjustment == 0;\n    adjustment2 = adjustment;\n    if (!condition1 && 0x7e < shiftedSum) {\n      condition2 = SBORROW4(0xff,adjustment);\n      adjustment2 = 0xff - adjustment;\n      condition1 = adjustment == 0xff;\n    }\n    if (!condition1 && adjustment2 < 0 == condition2) {\n      result = result | adjustment * 0x800000;\n    }\n    if (!condition1 && adjustment2 < 0 == condition2) {\n      return result;\n    }\n    result = result | 0x800000;\n    productLower = 0;\n    condition2 = SBORROW4(adjustment,1);\n    modifiedValue = shiftedSum - 0x80;\n    condition1 = modifiedValue == 0;\n    shiftedValue1 = modifiedValue;\n  }\n  else {\n    product = (ulonglong)(shiftedValue1 >> 5 | 0x8000000) * (ulonglong)(inputValue2 >> 5 | 0x8000000);\n    productLower = (uint)product;\n    result = (uint)((ulonglong)product >> 0x20);\n    condition1 = result < 0x800000;\n    if (condition1) {\n      result = result << 1;\n    }\n    if (condition1) {\n      result = result | productLower >> 0x1f;\n      productLower = productLower << 1;\n    }\n    result = modifiedValue & 0x80000000 | result;\n    modifiedValue = (shiftedSum + -0x7f) - (uint)condition1;\n    condition2 = SBORROW4(modifiedValue,0xfd);\n    condition1 = modifiedValue == 0xfd;\n    shiftedValue1 = modifiedValue - 0xfd;\n    if (modifiedValue < 0xfe) {\n      result = result + modifiedValue * 0x800000 + (uint)(0x7fffffff < productLower);\n      if (productLower == 0x80000000) {\n        result = result & 0xfffffffe;\n      }\n      return result;\n    }\n  }\n  if (condition1 || (int)shiftedValue1 < 0 != condition2) {\n    condition1 = (int)(modifiedValue + 0x19) < 0;\n    if (modifiedValue == 0xffffffe7 || condition1 != SCARRY4(modifiedValue,0x19)) {\n      result = result & 0x80000000;\n    }\n    if (modifiedValue != 0xffffffe7 && condition1 == SCARRY4(modifiedValue,0x19)) {\n      shiftedValue1 = (result << 1) >> (-modifiedValue & 0xff);\n      modifiedValue = result << (modifiedValue + 0x20 & 0xff);\n      shiftedValue1 = ((uint)((result & 0x80000000) != 0) << 0x1f | shiftedValue1 >> 1) + (uint)((byte)shiftedValue1 & 1);\n      if ((productLower | modifiedValue << 1) == 0) {\n        shiftedValue1 = shiftedValue1 & ~(modifiedValue >> 0x1f);\n      }\n      return shiftedValue1;\n    }\n    return result;\n  }\nLAB_0800903c:\n  return result & 0x80000000 | 0x7f800000;\n}\n\n",
            "renaming": {
                "FUN_08008eec": "calculate_float_value_08008eec",
                "param_1": "inputValue1",
                "param_2": "inputValue2",
                "param_3": "param3",
                "param_4": "param4",
                "lVar1": "product",
                "uVar2": "result",
                "uVar3": "shiftedValue1",
                "iVar4": "shiftedSum",
                "iVar5": "adjustment",
                "uVar6": "productLower",
                "iVar7": "adjustment2",
                "uVar8": "modifiedValue",
                "bVar9": "condition1",
                "bVar10": "condition2"
            },
            "calling": [
                "FUN_08003618",
                "FUN_08003826",
                "FUN_08003004",
                "FUN_08002638",
                "FUN_08002408",
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_080028bc",
                "FUN_08001f00",
                "FUN_08002908",
                "FUN_08002978",
                "FUN_08001994",
                "FUN_08002c18",
                "FUN_080024c4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009054": {
            "entrypoint": "0x08009054",
            "current_name": "calculate_floating_point_08009054",
            "code": "\nuint calculateFloatingPoint_08009054(uint inputBitPattern1,uint inputBitPattern2,undefined4 undefined,uint bytePattern)\n\n{\n  uint temp1;\n  uint temp2;\n  int difference;\n  uint temp3;\n  int sum;\n  uint result;\n  bool condition1;\n  bool condition2;\n  bool condition3;\n  \n  temp2 = inputBitPattern1 >> 0x17 & 0xff;\n  condition1 = temp2 == 0;\n  if (!condition1) {\n    bytePattern = inputBitPattern2 >> 0x17 & 0xff;\n    condition1 = bytePattern == 0;\n  }\n  if (!condition1) {\n    condition1 = temp2 == 0xff;\n  }\n  if (!condition1) {\n    condition1 = bytePattern == 0xff;\n  }\n  if (condition1) {\n    bytePattern = inputBitPattern2 >> 0x17 & 0xff;\n    result = inputBitPattern1;\n    if (temp2 == 0xff) {\n      if (((inputBitPattern1 & 0x7fffff) != 0) || (result = inputBitPattern2, bytePattern == 0xff)) {\nLAB_0800904a:\n        return result | 0x7fc00000;\n      }\n    }\n    else {\n      if (bytePattern == 0xff) {\n        result = inputBitPattern2;\n        if ((inputBitPattern2 & 0x7fffff) == 0) {\nLAB_08009000:\n          return (inputBitPattern1 ^ inputBitPattern2) & 0x80000000;\n        }\n        goto LAB_0800904a;\n      }\n      condition1 = (inputBitPattern1 & 0x7fffffff) == 0;\n      if (!condition1) {\n        condition1 = (inputBitPattern2 & 0x7fffffff) == 0;\n      }\n      if (!condition1) {\n        condition1 = temp2 == 0;\n        result = inputBitPattern1 & 0x80000000;\n        while( true ) {\n          if (condition1) {\n            inputBitPattern1 = inputBitPattern1 << 1;\n            condition1 = (inputBitPattern1 & 0x800000) == 0;\n          }\n          if (!condition1) break;\n          temp2 = temp2 - 1;\n        }\n        inputBitPattern1 = inputBitPattern1 | result;\n        condition1 = bytePattern == 0;\n        result = inputBitPattern2 & 0x80000000;\n        while( true ) {\n          if (condition1) {\n            inputBitPattern2 = inputBitPattern2 << 1;\n            condition1 = (inputBitPattern2 & 0x800000) == 0;\n          }\n          if (!condition1) break;\n          bytePattern = bytePattern - 1;\n        }\n        inputBitPattern2 = inputBitPattern2 | result;\n        goto LAB_0800906c;\n      }\n      if ((inputBitPattern1 & 0x7fffffff) == 0) {\n        if ((inputBitPattern2 & 0x7fffffff) != 0) goto LAB_08009000;\n        goto LAB_0800904a;\n      }\n    }\n    inputBitPattern1 = inputBitPattern1 ^ inputBitPattern2;\n  }\n  else {\nLAB_0800906c:\n    difference = temp2 - bytePattern;\n    if (inputBitPattern2 << 9 == 0) {\n      inputBitPattern1 = (inputBitPattern1 ^ inputBitPattern2) & 0x80000000 | inputBitPattern1 & 0x7fffff;\n      condition3 = SCARRY4(difference,0x7f);\n      sum = difference + 0x7f;\n      condition1 = sum < 0;\n      condition2 = sum == 0;\n      if (!condition2 && condition1 == condition3) {\n        condition3 = SBORROW4(0xff,sum);\n        condition1 = 0xff - sum < 0;\n        condition2 = sum == 0xff;\n      }\n      if (!condition2 && condition1 == condition3) {\n        inputBitPattern1 = inputBitPattern1 | sum * 0x800000;\n      }\n      if (!condition2 && condition1 == condition3) {\n        return inputBitPattern1;\n      }\n      inputBitPattern1 = inputBitPattern1 | 0x800000;\n      temp2 = 0;\n      condition2 = SBORROW4(sum,1);\n      temp3 = difference + 0x7e;\n      condition1 = temp3 == 0;\n      result = temp3;\n    }\n    else {\n      temp1 = (inputBitPattern2 << 9) >> 4 | 0x10000000;\n      temp2 = (inputBitPattern1 << 9) >> 4 | 0x10000000;\n      inputBitPattern1 = (inputBitPattern1 ^ inputBitPattern2) & 0x80000000;\n      condition1 = temp1 <= temp2;\n      if (!condition1) {\n        temp2 = temp2 << 1;\n      }\n      temp3 = difference + 0x7d + (uint)condition1;\n      result = 0x800000;\n      do {\n        if (temp1 <= temp2) {\n          temp2 = temp2 - temp1;\n          inputBitPattern1 = inputBitPattern1 | result;\n        }\n        condition1 = temp1 >> 1 <= temp2;\n        if (condition1) {\n          temp2 = temp2 - (temp1 >> 1);\n        }\n        if (condition1) {\n          inputBitPattern1 = inputBitPattern1 | result >> 1;\n        }\n        condition1 = temp1 >> 2 <= temp2;\n        if (condition1) {\n          temp2 = temp2 - (temp1 >> 2);\n        }\n        if (condition1) {\n          inputBitPattern1 = inputBitPattern1 | result >> 2;\n        }\n        condition1 = temp1 >> 3 <= temp2;\n        if (condition1) {\n          temp2 = temp2 - (temp1 >> 3);\n        }\n        if (condition1) {\n          inputBitPattern1 = inputBitPattern1 | result >> 3;\n        }\n        temp2 = temp2 * 0x10;\n        condition1 = temp2 == 0;\n        if (!condition1) {\n          result = result >> 4;\n          condition1 = result == 0;\n        }\n      } while (!condition1);\n      condition2 = SBORROW4(temp3,0xfd);\n      condition1 = temp3 == 0xfd;\n      result = temp3 - 0xfd;\n      if (temp3 < 0xfe) {\n        inputBitPattern1 = inputBitPattern1 + temp3 * 0x800000 + (uint)(temp1 <= temp2);\n        if (temp2 - temp1 == 0) {\n          inputBitPattern1 = inputBitPattern1 & 0xfffffffe;\n        }\n        return inputBitPattern1;\n      }\n    }\n    if (condition1 || (int)result < 0 != condition2) {\n      condition1 = (int)(temp3 + 0x19) < 0;\n      if (temp3 == 0xffffffe7 || condition1 != SCARRY4(temp3,0x19)) {\n        inputBitPattern1 = inputBitPattern1 & 0x80000000;\n      }\n      if (temp3 == 0xffffffe7 || condition1 != SCARRY4(temp3,0x19)) {\n        return inputBitPattern1;\n      }\n      result = (inputBitPattern1 << 1) >> (-temp3 & 0xff);\n      temp3 = inputBitPattern1 << (temp3 + 0x20 & 0xff);\n      result = ((uint)((inputBitPattern1 & 0x80000000) != 0) << 0x1f | result >> 1) + (uint)((byte)result & 1);\n      if ((temp2 | temp3 << 1) == 0) {\n        result = result & ~(temp3 >> 0x1f);\n      }\n      return result;\n    }\n  }\n  return inputBitPattern1 & 0x80000000 | 0x7f800000;\n}\n\n",
            "renaming": {
                "FUN_08009054": "calculate_floating_point_08009054",
                "param_1": "inputBitPattern1",
                "param_2": "inputBitPattern2",
                "param_3": "undefined",
                "param_4": "bytePattern",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "iVar3": "difference",
                "uVar4": "temp3",
                "iVar5": "sum",
                "uVar6": "result",
                "bVar7": "condition1",
                "bVar8": "condition2",
                "bVar9": "condition3"
            },
            "calling": [
                "FUN_08004250",
                "FUN_08003618",
                "FUN_08002908",
                "FUN_08003004",
                "FUN_08004940",
                "FUN_08002e08",
                "FUN_080028bc",
                "FUN_08001994",
                "FUN_08001f00",
                "FUN_080004fc"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800919c": {
            "entrypoint": "0x0800919c",
            "current_name": "calculate_result_0800919c",
            "code": "\nuint calculate_result_0800919c(uint input_a,uint input_b)\n\n{\n  bool is_negative_result;\n  uint double_input_a;\n  uint double_input_b;\n  uint combined_values;\n  bool is_result_zero;\n  \n  double_input_a = input_a * 2;\n  double_input_b = input_b * 2;\n  if (((int)double_input_a >> 0x18 == -1 || (int)double_input_b >> 0x18 == -1) &&\n     ((((int)double_input_a >> 0x18 == -1 && ((input_a & 0x7fffff) != 0)) ||\n      (((int)double_input_b >> 0x18 == -1 && ((input_b & 0x7fffff) != 0)))))) {\n    return 1;\n  }\n  combined_values = double_input_a | input_b & 0x7fffffff;\n  is_result_zero = combined_values == 0;\n  if (!is_result_zero) {\n    combined_values = input_a ^ input_b;\n    is_result_zero = combined_values == 0;\n  }\n  is_negative_result = -1 < (int)combined_values;\n  if (is_negative_result) {\n    input_a = double_input_a + input_b * -2;\n    is_result_zero = input_a == 0;\n  }\n  if ((is_negative_result && double_input_b <= double_input_a) && !is_result_zero) {\n    input_a = (int)input_b >> 0x1f;\n  }\n  if (!is_negative_result || double_input_b > double_input_a) {\n    input_a = ~((int)input_b >> 0x1f);\n  }\n  if (!is_result_zero) {\n    input_a = input_a | 1;\n  }\n  return input_a;\n}\n\n",
            "renaming": {
                "FUN_0800919c": "calculate_result_0800919c",
                "param_1": "input_a",
                "param_2": "input_b",
                "bVar1": "is_negative_result",
                "uVar2": "double_input_a",
                "uVar3": "double_input_b",
                "uVar4": "combined_values",
                "bVar5": "is_result_zero"
            },
            "calling": [
                "FUN_08009204"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091fc": {
            "entrypoint": "0x080091fc",
            "current_name": "copy_and_swap_params_080091fc",
            "code": "\nvoid copyAndSwapParams_080091fc(undefined4 destination,undefined4 source)\n\n{\n  FUN_08009204(source,destination);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091fc": "copy_and_swap_params_080091fc",
                "param_1": "destination",
                "param_2": "source"
            },
            "calling": [
                "FUN_08009250",
                "FUN_08009264"
            ],
            "called": [
                "FUN_08009204"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009204": {
            "entrypoint": "0x08009204",
            "current_name": "combine_parameters_08009204",
            "code": "\nundefined8 combineParameters_08009204(undefined4 value1,undefined4 value2)\n\n{\n  FUN_0800919c();\n  return CONCAT44(value2,value1);\n}\n\n",
            "renaming": {
                "FUN_08009204": "combine_parameters_08009204",
                "param_1": "value1",
                "param_2": "value2"
            },
            "calling": [
                "FUN_08009228",
                "FUN_080091fc",
                "FUN_08009214",
                "FUN_0800923c"
            ],
            "called": [
                "FUN_0800919c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009214": {
            "entrypoint": "0x08009214",
            "current_name": "check_if_initialized_08009214",
            "code": "\nbool checkIfInitialized_08009214(void)\n\n{\n  char isInitialized;\n  \n  FUN_08009204();\n  return isInitialized != '\\0';\n}\n\n",
            "renaming": {
                "FUN_08009214": "check_if_initialized_08009214",
                "in_ZR": "isInitialized"
            },
            "calling": [
                "FUN_08002638",
                "FUN_08002afc",
                "FUN_080029d8",
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_08001f00"
            ],
            "called": [
                "FUN_08009204"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009228": {
            "entrypoint": "0x08009228",
            "current_name": "check_end_of_string_08009228",
            "code": "\nbool checkEndOfString_08009228(void)\n\n{\n  char currentCharacter;\n  \n  FUN_08009204();\n  return currentCharacter == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08009228": "check_end_of_string_08009228",
                "in_CY": "currentCharacter"
            },
            "calling": [
                "FUN_08003826",
                "FUN_08003004",
                "FUN_08002afc",
                "FUN_080029d8",
                "FUN_080005b4",
                "FUN_08004e30"
            ],
            "called": [
                "FUN_08009204"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800923c": {
            "entrypoint": "0x0800923c",
            "current_name": "check_carry_and_zero_flags_0800923c",
            "code": "\nbool check_carry_and_zero_flags_0800923c(void)\n\n{\n  undefined is_zero_flag;\n  undefined is_carry_flag;\n  \n  FUN_08009204();\n  return !(bool)is_carry_flag || (bool)is_zero_flag;\n}\n\n",
            "renaming": {
                "FUN_0800923c": "check_carry_and_zero_flags_0800923c",
                "in_ZR": "is_zero_flag",
                "in_CY": "is_carry_flag"
            },
            "calling": [
                "FUN_080005b4",
                "FUN_08004e30",
                "FUN_08001f00"
            ],
            "called": [
                "FUN_08009204"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009250": {
            "entrypoint": "0x08009250",
            "current_name": "check_cy_and_zr_08009250",
            "code": "\nbool check_CY_and_ZR_08009250(void)\n\n{\n  undefined zero_flag;\n  undefined carry_flag;\n  \n  FUN_080091fc();\n  return !(bool)carry_flag || (bool)zero_flag;\n}\n\n",
            "renaming": {
                "FUN_08009250": "check_cy_and_zr_08009250",
                "in_CY": "carry_flag",
                "in_ZR": "zero_flag"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08001f00"
            ],
            "called": [
                "FUN_080091fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009264": {
            "entrypoint": "0x08009264",
            "current_name": "check_null_termination_08009264",
            "code": "\nbool checkNullTermination_08009264(void)\n\n{\n  char inputCharacter;\n  \n  FUN_080091fc();\n  return inputCharacter == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08009264": "check_null_termination_08009264",
                "in_CY": "inputCharacter"
            },
            "calling": [
                "FUN_08003004",
                "FUN_080029d8"
            ],
            "called": [
                "FUN_080091fc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009278": {
            "entrypoint": "0x08009278",
            "current_name": "calculate_shifted_value_08009278",
            "code": "\nuint calculate_shifted_value_08009278(uint input_value)\n\n{\n  uint result;\n  uint remainder;\n  \n  if (input_value << 1 < 0x7f000000) {\n    return 0;\n  }\n  result = (input_value << 1) >> 0x18;\n  remainder = 0x9e - result;\n  if (result < 0x9f && remainder != 0) {\n    result = (input_value << 8 | 0x80000000) >> (remainder & 0xff);\n    if ((input_value & 0x80000000) != 0) {\n      result = -result;\n    }\n    return result;\n  }\n  if ((remainder == 0xffffff9f) && ((input_value & 0x7fffff) != 0)) {\n    return 0;\n  }\n  input_value = input_value & 0x80000000;\n  if (input_value == 0) {\n    input_value = 0x7fffffff;\n  }\n  return input_value;\n}\n\n",
            "renaming": {
                "FUN_08009278": "calculate_shifted_value_08009278",
                "param_1": "input_value",
                "uVar1": "result",
                "uVar2": "remainder"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_08003826"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "entry": {
            "entrypoint": "0x080092c4",
            "current_name": "entry",
            "code": "\n/* WARNING: This function may have set the stack pointer */\n\nvoid entry(void)\n\n{\n  int iVar1;\n  undefined4 *puVar2;\n  code *UNRECOVERED_JUMPTABLE;\n  \n  for (iVar1 = 0; (undefined4 *)(iVar1 + 0x20000000) < &DAT_2000044c; iVar1 = iVar1 + 4) {\n    *(undefined4 *)(iVar1 + 0x20000000) = *(undefined4 *)(iVar1 + 0x800c0c0);\n  }\n  for (puVar2 = &DAT_2000044c; puVar2 < &DAT_20000f20; puVar2 = puVar2 + 1) {\n    *puVar2 = 0;\n  }\n  FUN_0800756c();\n  FUN_0800b3e8();\n  UNRECOVERED_JUMPTABLE = (code *)0x80092fa;\n  FUN_08007540();\n                    /* WARNING: Could not recover jumptable at 0x080092fa. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*UNRECOVERED_JUMPTABLE)();\n  return;\n}\n\n",
            "renaming": {},
            "calling": [],
            "called": [
                "FUN_0800756c",
                "FUN_08007540",
                "FUN_0800b3e8"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009318": {
            "entrypoint": "0x08009318",
            "current_name": "calculate_floating_point_08009318",
            "code": "\nlonglong calculateFloatingPoint_08009318(uint intValue,uint uintValue,undefined4 arg1,undefined4 arg2)\n\n{\n  int result;\n  uint shiftedValue;\n  uint mask;\n  bool carryFlag;\n  undefined8 tempValue;\n  longlong finalResult;\n  \n  mask = (uintValue << 1) >> 0x15;\n  shiftedValue = mask - 0x3ff;\n  if ((int)shiftedValue < 0x14) {\n    if ((int)shiftedValue < 0) {\n      tempValue = FUN_080082d4(intValue,uintValue,0x8800759c,0x7e37e43c,arg2);\n      result = FUN_08008b60((int)tempValue,(int)((ulonglong)tempValue >> 0x20),0,0);\n      finalResult = CONCAT44(uintValue,intValue);\n      if (result != 0) {\n        if ((int)uintValue < 0) {\n          finalResult = -0x8000000000000000;\n        }\n        else if ((intValue | uintValue) == 0) {\n          finalResult = 0;\n        }\n        else {\n          finalResult = 0x3ff0000000000000;\n        }\n      }\n    }\n    else {\n      mask = 0xfffff >> (shiftedValue & 0xff);\n      finalResult = CONCAT44(uintValue,intValue);\n      if ((uintValue & mask | intValue) != 0) {\n        tempValue = FUN_080082d4(intValue,uintValue,0x8800759c,0x7e37e43c,arg2);\n        result = FUN_08008b60((int)tempValue,(int)((ulonglong)tempValue >> 0x20),0,0);\n        finalResult = CONCAT44(uintValue,intValue);\n        if (result != 0) {\n          if (0 < (int)uintValue) {\n            uintValue = uintValue + (0x100000 >> (shiftedValue & 0xff));\n          }\n          finalResult = (ulonglong)(uintValue & ~mask) << 0x20;\n        }\n      }\n    }\n  }\n  else if ((int)shiftedValue < 0x34) {\n    mask = 0xffffffff >> (mask - 0x413 & 0xff);\n    finalResult = CONCAT44(uintValue,intValue);\n    if ((mask & intValue) != 0) {\n      tempValue = FUN_080082d4(intValue,uintValue,0x8800759c,0x7e37e43c,arg2);\n      result = FUN_08008b60((int)tempValue,(int)((ulonglong)tempValue >> 0x20),0,0);\n      finalResult = CONCAT44(uintValue,intValue);\n      if (result != 0) {\n        if (0 < (int)uintValue) {\n          if (shiftedValue == 0x14) {\n            uintValue = uintValue + 1;\n          }\n          else {\n            shiftedValue = 1 << (0x34 - shiftedValue & 0xff);\n            carryFlag = CARRY4(shiftedValue,intValue);\n            intValue = shiftedValue + intValue;\n            if (carryFlag != false) {\n              uintValue = uintValue + 1;\n            }\n          }\n        }\n        finalResult = CONCAT44(uintValue,intValue & ~mask);\n      }\n    }\n  }\n  else {\n    finalResult = CONCAT44(uintValue,intValue);\n    if (shiftedValue == 0x400) {\n      finalResult = FUN_080082d4();\n    }\n  }\n  return finalResult;\n}\n\n",
            "renaming": {
                "FUN_08009318": "calculate_floating_point_08009318",
                "param_1": "intValue",
                "param_2": "uintValue",
                "param_3": "arg1",
                "param_4": "arg2",
                "iVar1": "result",
                "uVar2": "shiftedValue",
                "uVar3": "mask",
                "bVar4": "carryFlag",
                "uVar5": "tempValue",
                "lVar6": "finalResult"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08001994",
                "FUN_08002c18"
            ],
            "called": [
                "FUN_08008b60",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009410": {
            "entrypoint": "0x08009410",
            "current_name": "process_data_08009410",
            "code": "\nundefined4 processData_08009410(undefined4 input,uint value)\n\n{\n  undefined4 result;\n  uint flag;\n  undefined4 tempVar1;\n  undefined4 tempVar2;\n  undefined4 tempVar3;\n  undefined4 tempVar4;\n  \n  if (0x3fe921fb < (value & 0x7fffffff)) {\n    if ((value & 0x7fffffff) < 0x7ff00000) {\n      flag = FUN_08009d78(input,value,&tempVar1);\n      flag = flag & 3;\n      if (flag == 1) {\n        result = FUN_0800adf0(tempVar1,tempVar2,tempVar3,tempVar4,1);\n      }\n      else if (flag == 2) {\n        result = FUN_0800a348(tempVar1,tempVar2,tempVar3,tempVar4);\n      }\n      else if (flag == 0) {\n        result = FUN_0800a348(tempVar1,tempVar2,tempVar3,tempVar4);\n      }\n      else {\n        result = FUN_0800adf0(tempVar1,tempVar2,tempVar3,tempVar4,1);\n      }\n    }\n    else {\n      result = FUN_080082d0(input,value,input,value);\n    }\n    return result;\n  }\n  result = FUN_0800a348(input,value,0,0);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009410": "process_data_08009410",
                "param_1": "input",
                "param_2": "value",
                "uVar1": "result",
                "uVar2": "flag",
                "local_28": "tempVar1",
                "uStack_24": "tempVar2",
                "local_20": "tempVar3",
                "uStack_1c": "tempVar4"
            },
            "calling": [
                "FUN_08001f00"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_0800a348",
                "FUN_08009d78",
                "FUN_0800adf0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080094c0": {
            "entrypoint": "0x080094c0",
            "current_name": "calculate_float_from_params_080094c0",
            "code": "\nlonglong calculateFloatFromParams_080094c0(uint input1,uint input2,undefined4 param3,undefined4 param4)\n\n{\n  int result1;\n  uint shiftedBits;\n  uint mask;\n  bool carry;\n  undefined8 computedResult;\n  longlong finalResult;\n  \n  mask = (input2 << 1) >> 0x15;\n  shiftedBits = mask - 0x3ff;\n  if ((int)shiftedBits < 0x14) {\n    if ((int)shiftedBits < 0) {\n      computedResult = FUN_080082d4(input1,input2,0x8800759c,0x7e37e43c,param4);\n      result1 = FUN_08008b60((int)computedResult,(int)((ulonglong)computedResult >> 0x20),0,0);\n      finalResult = CONCAT44(input2,input1);\n      if (result1 != 0) {\n        if ((int)input2 < 0) {\n          if ((input1 | input2 & 0x7fffffff) != 0) {\n            input2 = 0xbff00000;\n          }\n          finalResult = (ulonglong)input2 << 0x20;\n        }\n        else {\n          finalResult = 0;\n        }\n      }\n    }\n    else {\n      mask = 0xfffff >> (shiftedBits & 0xff);\n      finalResult = CONCAT44(input2,input1);\n      if ((input2 & mask | input1) != 0) {\n        computedResult = FUN_080082d4(input1,input2,0x8800759c,0x7e37e43c,param4);\n        result1 = FUN_08008b60((int)computedResult,(int)((ulonglong)computedResult >> 0x20),0,0);\n        finalResult = CONCAT44(input2,input1);\n        if (result1 != 0) {\n          if ((int)input2 < 0) {\n            input2 = input2 + (0x100000 >> (shiftedBits & 0xff));\n          }\n          finalResult = (ulonglong)(input2 & ~mask) << 0x20;\n        }\n      }\n    }\n  }\n  else if ((int)shiftedBits < 0x34) {\n    mask = 0xffffffff >> (mask - 0x413 & 0xff);\n    finalResult = CONCAT44(input2,input1);\n    if ((mask & input1) != 0) {\n      computedResult = FUN_080082d4(input1,input2,0x8800759c,0x7e37e43c,param4);\n      result1 = FUN_08008b60((int)computedResult,(int)((ulonglong)computedResult >> 0x20),0,0);\n      finalResult = CONCAT44(input2,input1);\n      if (result1 != 0) {\n        if ((int)input2 < 0) {\n          if (shiftedBits == 0x14) {\n            input2 = input2 + 1;\n          }\n          else {\n            shiftedBits = 1 << (0x34 - shiftedBits & 0xff);\n            carry = CARRY4(shiftedBits,input1);\n            input1 = shiftedBits + input1;\n            if (carry != false) {\n              input2 = input2 + 1;\n            }\n          }\n        }\n        finalResult = CONCAT44(input2,input1 & ~mask);\n      }\n    }\n  }\n  else {\n    finalResult = CONCAT44(input2,input1);\n    if (shiftedBits == 0x400) {\n      finalResult = FUN_080082d4();\n    }\n  }\n  return finalResult;\n}\n\n",
            "renaming": {
                "FUN_080094c0": "calculate_float_from_params_080094c0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "result1",
                "uVar2": "shiftedBits",
                "uVar3": "mask",
                "bVar4": "carry",
                "uVar5": "computedResult",
                "lVar6": "finalResult"
            },
            "calling": [
                "FUN_0800a5a0",
                "FUN_08002408",
                "FUN_08001f00",
                "FUN_08002c18"
            ],
            "called": [
                "FUN_08008b60",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080095b8": {
            "entrypoint": "0x080095b8",
            "current_name": "calculate_product_080095b8",
            "code": "\nint calculateProduct_080095b8(uint input1,uint input2)\n\n{\n  uint mask;\n  uint shiftedInput2;\n  uint modifiedInput1;\n  int sign;\n  uint difference;\n  \n  shiftedInput2 = (input2 << 1) >> 0x15;\n  difference = shiftedInput2 - 0x3ff;\n  if ((int)input2 < 0) {\n    sign = -1;\n  }\n  else {\n    sign = 1;\n  }\n  modifiedInput1 = input2 & 0xfffff | 0x100000;\n  if ((int)difference < 0x14) {\n    if ((int)difference < 0) {\n      if (difference != 0xffffffff) {\n        sign = 0;\n      }\n      return sign;\n    }\n    modifiedInput1 = modifiedInput1 + (0x80000 >> (difference & 0xff)) >> (0x14 - difference & 0xff);\n  }\n  else {\n    if (0x1e < difference) {\n      sign = FUN_08008ba0();\n      return sign;\n    }\n    if ((int)difference < 0x34) {\n      mask = 0x80000000 >> (shiftedInput2 - 0x413 & 0xff);\n      if (CARRY4(mask,input1) != false) {\n        modifiedInput1 = modifiedInput1 + 1;\n      }\n      modifiedInput1 = modifiedInput1 << (shiftedInput2 - 0x413 & 0xff);\n      if (difference != 0x14) {\n        modifiedInput1 = modifiedInput1 | mask + input1 >> (0x34 - difference & 0xff);\n      }\n    }\n    else {\n      modifiedInput1 = modifiedInput1 << (shiftedInput2 - 0x413 & 0xff) | input1 << (shiftedInput2 - 0x433 & 0xff);\n    }\n  }\n  return modifiedInput1 * sign;\n}\n\n",
            "renaming": {
                "FUN_080095b8": "calculate_product_080095b8",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "mask",
                "uVar2": "shiftedInput2",
                "uVar3": "modifiedInput1",
                "iVar4": "sign",
                "uVar5": "difference"
            },
            "calling": [
                "FUN_08003004",
                "FUN_08001994"
            ],
            "called": [
                "FUN_08008ba0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009654": {
            "entrypoint": "0x08009654",
            "current_name": "convert_to_floating_point_08009654",
            "code": "\nlonglong convertToFloatingPoint_08009654(uint inputValue1,uint inputValue2)\n\n{\n  uint exponent;\n  uint shiftCount;\n  longlong result;\n  \n  result = CONCAT44(inputValue2,inputValue1);\n  shiftCount = (inputValue2 << 1) >> 0x15;\n  exponent = shiftCount - 0x3ff;\n  if ((int)exponent < 0x14) {\n    if ((int)exponent < 0) {\n      inputValue2 = inputValue2 & 0x80000000;\n      if (exponent == 0xffffffff) {\n        inputValue2 = inputValue2 | 0x3ff00000;\n      }\n      result = (ulonglong)inputValue2 << 0x20;\n    }\n    else {\n      shiftCount = 0xfffff >> (exponent & 0xff);\n      result = CONCAT44(inputValue2,inputValue1);\n      if ((inputValue2 & shiftCount | inputValue1) != 0) {\n        result = (ulonglong)(inputValue2 + (0x80000 >> (exponent & 0xff)) & ~shiftCount) << 0x20;\n      }\n    }\n  }\n  else if ((int)exponent < 0x34) {\n    shiftCount = 0xffffffff >> (shiftCount - 0x413 & 0xff);\n    if ((inputValue1 & shiftCount) != 0) {\n      exponent = 1 << (0x33 - exponent & 0xff);\n      if (CARRY4(inputValue1,exponent) != false) {\n        inputValue2 = inputValue2 + 1;\n      }\n      result = CONCAT44(inputValue2,inputValue1 + exponent & ~shiftCount);\n    }\n  }\n  else {\n    result = CONCAT44(inputValue2,inputValue1);\n    if (exponent == 0x400) {\n      result = FUN_080082d4();\n    }\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009654": "convert_to_floating_point_08009654",
                "param_1": "inputValue1",
                "param_2": "inputValue2",
                "uVar1": "exponent",
                "uVar2": "shiftCount",
                "lVar3": "result"
            },
            "calling": [
                "FUN_08004e30"
            ],
            "called": [
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080096e8": {
            "entrypoint": "0x080096e8",
            "current_name": "process_number_080096e8",
            "code": "\nundefined4 processNumber_080096e8(undefined4 inputValue,uint flags)\n\n{\n  undefined4 result;\n  uint status;\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  undefined4 temp4;\n  \n  if (0x3fe921fb < (flags & 0x7fffffff)) {\n    if ((flags & 0x7fffffff) < 0x7ff00000) {\n      status = FUN_08009d78(inputValue,flags,&temp1);\n      status = status & 3;\n      if (status == 1) {\n        result = FUN_0800a348(temp1,temp2,temp3,temp4);\n      }\n      else if (status == 2) {\n        result = FUN_0800adf0(temp1,temp2,temp3,temp4,1);\n      }\n      else if (status == 0) {\n        result = FUN_0800adf0(temp1,temp2,temp3,temp4,1);\n      }\n      else {\n        result = FUN_0800a348(temp1,temp2,temp3,temp4);\n      }\n    }\n    else {\n      result = FUN_080082d0(inputValue,flags,inputValue,flags);\n    }\n    return result;\n  }\n  result = FUN_0800adf0(inputValue,flags,0,0,0);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080096e8": "process_number_080096e8",
                "param_1": "inputValue",
                "param_2": "flags",
                "uVar1": "result",
                "uVar2": "status",
                "local_28": "temp1",
                "uStack_24": "temp2",
                "local_20": "temp3",
                "uStack_1c": "temp4"
            },
            "calling": [
                "FUN_08001f00"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_0800a348",
                "FUN_08009d78",
                "FUN_0800adf0"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009798": {
            "entrypoint": "0x08009798",
            "current_name": "calculate_shifted_value_08009798",
            "code": "\nlonglong calculateShiftedValue_08009798(uint input1,uint input2,undefined4 temp1,undefined4 temp2)\n\n{\n  uint shiftedAmount;\n  uint shiftedValue;\n  longlong result;\n  \n  shiftedValue = (input2 << 1) >> 0x15;\n  shiftedAmount = shiftedValue - 0x3ff;\n  if ((int)shiftedAmount < 0x14) {\n    if ((int)shiftedAmount < 0) {\n      return ((ulonglong)input2 & 0x80000000) << 0x20;\n    }\n    result = (ulonglong)(input2 & ~(0xfffff >> (shiftedAmount & 0xff))) << 0x20;\n  }\n  else {\n    if ((int)shiftedAmount < 0x34) {\n      return CONCAT44(input2,input1 & ~(0xffffffffU >> (shiftedValue - 0x413 & 0xff)));\n    }\n    if (shiftedAmount != 0x400) {\n      return CONCAT44(input2,input1);\n    }\n    result = FUN_080082d4(input1,input2,input1,input2,temp2);\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009798": "calculate_shifted_value_08009798",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "temp1",
                "param_4": "temp2",
                "uVar1": "shiftedAmount",
                "uVar2": "shiftedValue",
                "lVar3": "result"
            },
            "calling": [
                "FUN_08003b98",
                "FUN_080005b4",
                "FUN_08004e30"
            ],
            "called": [
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "thunk_FUN_08009990": {
            "entrypoint": "0x08009818",
            "current_name": "calculate_result_thunk_08009990",
            "code": "\nuint calculate_result_thunk_08009990(uint number_1,uint number_2,uint number_3,uint number_4)\n\n{\n  int difference;\n  undefined4 result_upper;\n  uint calculation;\n  uint number_4_positive;\n  uint number_2_positive;\n  undefined8 result;\n  \n  number_4_positive = number_4 & 0x7fffffff;\n  if (((number_4_positive | (-number_3 | number_3) >> 0x1f) < 0x7ff00001) &&\n     (number_2_positive = number_2 & 0x7fffffff, (number_2_positive | (-number_1 | number_1) >> 0x1f) < 0x7ff00001)) {\n    if ((number_4 + 0xc0100000 | number_3) == 0) {\n      number_4_positive = FUN_0800af78();\n      return number_4_positive;\n    }\n    calculation = (int)number_4 >> 0x1e & 2U | number_2 >> 0x1f;\n    if ((number_2_positive | number_1) == 0) {\n      if (calculation == 2) {\n        number_1 = 0x54442d18;\n      }\n      else if (calculation == 3) {\n        number_1 = 0x54442d18;\n      }\n    }\n    else {\n      if ((number_4_positive | number_3) != 0) {\n        if (number_4_positive == 0x7ff00000) {\n          calculation = calculation - 1;\n          if (number_2_positive == 0x7ff00000) {\n            if (calculation < 3) {\n              return *(uint *)(&DAT_0800be68 + calculation * 8);\n            }\n            return 0x54442d18;\n          }\n          if (calculation < 3) {\n            return *(uint *)(&DAT_0800be80 + calculation * 8);\n          }\n          return 0;\n        }\n        if (number_2_positive != 0x7ff00000) {\n          difference = (int)(number_2_positive - number_4_positive) >> 0x14;\n          if ((int)(number_2_positive - number_4_positive) < 0x3d00000) {\n            if (((int)number_4 < 0) && (difference + 0x3c < 0 != SCARRY4(difference,0x3c))) {\n              result = 0;\n            }\n            else {\n              FUN_08008894(number_1,number_2,number_3,number_4,number_4);\n              FUNC_0800b2cc();\n              result = FUN_0800af78();\n            }\n          }\n          else {\n            result = 0x3ff921fb54442d18;\n          }\n          result_upper = (undefined4)((ulonglong)result >> 0x20);\n          number_4_positive = (uint)result;\n          if (calculation == 1) {\n            return number_4_positive;\n          }\n          if (calculation == 2) {\n            result = FUN_080082d0(number_4_positive,result_upper,0x33145c07,0x3ca1a626);\n            number_4_positive = FUN_080082d0(0x54442d18,0x400921fb,(int)result,(int)((ulonglong)result >> 0x20));\n            return number_4_positive;\n          }\n          if (calculation == 0) {\n            return number_4_positive;\n          }\n          result = FUN_080082d0(number_4_positive,result_upper,0x33145c07,0x3ca1a626);\n          number_4_positive = FUN_080082d0((int)result,(int)((ulonglong)result >> 0x20),0x54442d18,0x400921fb);\n          return number_4_positive;\n        }\n      }\n      if ((int)number_2 < 0) {\n        number_1 = 0x54442d18;\n      }\n      else {\n        number_1 = 0x54442d18;\n      }\n    }\n  }\n  else {\n    number_1 = FUN_080082d4(number_3,number_4,number_1,number_2);\n  }\n  return number_1;\n}\n\n",
            "renaming": {
                "thunk_FUN_08009990": "calculate_result_thunk_08009990",
                "param_1": "number_1",
                "param_2": "number_2",
                "param_3": "number_3",
                "param_4": "number_4",
                "iVar1": "difference",
                "uVar2": "result_upper",
                "uVar3": "calculation",
                "uVar4": "number_4_positive",
                "uVar5": "number_2_positive",
                "uVar6": "result"
            },
            "calling": [
                "FUN_08001f00"
            ],
            "called": [
                "FUN_08009990"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800981c": {
            "entrypoint": "0x0800981c",
            "current_name": "calculate_hypotenuse_0800981c",
            "code": "\nundefined8 calculateHypotenuse_0800981c(undefined4 sideA,undefined4 sideB,undefined4 sideC,undefined4 sideD)\n\n{\n  int result;\n  undefined4 *pointer;\n  int *pointer2;\n  undefined8 returnValue;\n  undefined4 algorithmVersion;\n  char *algorithmName;\n  undefined4 param1Copy;\n  undefined4 param2Copy;\n  undefined4 param3Copy;\n  undefined4 param4Copy;\n  undefined4 lowerBound;\n  undefined4 upperBound;\n  int calculationResult;\n  \n  returnValue = FUN_08009b24();\n  if (DAT_20000014 == -1) {\n    return returnValue;\n  }\n  calculationResult = FUN_0800b2d4();\n  if (calculationResult != 0) {\n    return returnValue;\n  }\n  result = FUN_0800b2d4(sideA,sideB);\n  if (result == 0) {\n    return returnValue;\n  }\n  result = FUN_0800b2d4(sideC,sideD);\n  if (result == 0) {\n    return returnValue;\n  }\n  algorithmVersion = 3;\n  algorithmName = \"hypot\";\n  param1Copy = sideA;\n  param2Copy = sideB;\n  param3Copy = sideC;\n  param4Copy = sideD;\n  if (DAT_20000014 == '\\0') {\n    lowerBound = 0xe0000000;\n    upperBound = 0x47efffff;\nLAB_080098aa:\n    result = FUN_0800b2e0(&algorithmVersion);\n    if (result != 0) goto LAB_08009896;\n  }\n  else {\n    lowerBound = 0;\n    upperBound = 0x7ff00000;\n    if (DAT_20000014 != '\\x02') goto LAB_080098aa;\n  }\n  pointer = (undefined4 *)FUN_0800b3dc();\n  *pointer = 0x22;\nLAB_08009896:\n  returnValue = CONCAT44(upperBound,lowerBound);\n  if (calculationResult != 0) {\n    pointer2 = (int *)FUN_0800b3dc();\n    returnValue = CONCAT44(upperBound,lowerBound);\n    *pointer2 = calculationResult;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_0800981c": "calculate_hypotenuse_0800981c",
                "param_1": "sideA",
                "param_2": "sideB",
                "param_3": "sideC",
                "param_4": "sideD",
                "iVar1": "result",
                "puVar2": "pointer",
                "piVar3": "pointer2",
                "uVar4": "returnValue",
                "local_50": "algorithmVersion",
                "pcStack_4c": "algorithmName",
                "local_48": "param1Copy",
                "uStack_44": "param2Copy",
                "local_40": "param3Copy",
                "uStack_3c": "param4Copy",
                "local_38": "lowerBound",
                "uStack_34": "upperBound",
                "local_30": "calculationResult"
            },
            "calling": [
                "FUN_080005b4",
                "FUN_08001f00"
            ],
            "called": [
                "FUN_0800b2d4",
                "FUN_0800b3dc",
                "FUN_0800b2e0",
                "FUN_08009b24"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080098d0": {
            "entrypoint": "0x080098d0",
            "current_name": "extracted_function_080098d0",
            "code": "\nundefined4 extractedFunction_080098d0(undefined4 input1,undefined4 input2)\n\n{\n  char conditionVar;\n  undefined4 returnValue;\n  int result;\n  undefined4 *pointerVar;\n  int *pointerInt;\n  undefined4 localBool;\n  undefined *localPtr;\n  undefined4 localParam1;\n  undefined4 localParam2;\n  undefined4 localParam3;\n  undefined4 localParam4;\n  undefined8 localResult;\n  int localCondition;\n  \n  returnValue = FUN_0800a1bc();\n  conditionVar = DAT_20000014;\n  if (((DAT_20000014 == -1) ||\n      (localCondition = FUN_08008b74(input1,input2,input1,input2), localCondition != 0)) ||\n     (result = FUN_08008b24(input1,input2,0,0), result == 0)) {\n    return returnValue;\n  }\n  localBool = 1;\n  localPtr = &DAT_0800be5c;\n  localParam1 = input1;\n  localParam2 = input2;\n  localParam3 = input1;\n  localParam4 = input2;\n  if (conditionVar == '\\0') {\n    localResult = 0;\nLAB_0800996c:\n    result = FUN_0800b2e0(&localBool);\n    if (result != 0) goto joined_r0x0800997a;\n  }\n  else {\n    localResult = FUN_08008894(0,0,0,0);\n    if (conditionVar != '\\x02') goto LAB_0800996c;\n  }\n  pointerVar = (undefined4 *)FUN_0800b3dc();\n  *pointerVar = 0x21;\njoined_r0x0800997a:\n  if (localCondition != 0) {\n    pointerInt = (int *)FUN_0800b3dc();\n    *pointerInt = localCondition;\n  }\n  return (undefined4)localResult;\n}\n\n",
            "renaming": {
                "FUN_080098d0": "extracted_function_080098d0",
                "param_1": "input1",
                "param_2": "input2",
                "cVar1": "conditionVar",
                "uVar2": "returnValue",
                "iVar3": "result",
                "puVar4": "pointerVar",
                "piVar5": "pointerInt",
                "local_50": "localBool",
                "local_4c": "localPtr",
                "local_48": "localParam1",
                "uStack_44": "localParam2",
                "local_40": "localParam3",
                "uStack_3c": "localParam4",
                "local_38": "localResult",
                "local_30": "localCondition"
            },
            "calling": [
                "FUN_08003004",
                "FUN_080005b4",
                "FUN_08002978",
                "FUN_08001994"
            ],
            "called": [
                "FUN_08008b24",
                "FUN_0800b3dc",
                "FUN_0800a1bc",
                "FUN_0800b2e0",
                "FUN_08008894",
                "FUN_08008b74"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009990": {
            "entrypoint": "0x08009990",
            "current_name": "calculate_result_08009990",
            "code": "\nuint calculateResult_08009990(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int result;\n  undefined4 temp;\n  uint flags1;\n  uint flags2;\n  uint flags3;\n  undefined8 resultValue;\n  \n  flags2 = input4 & 0x7fffffff;\n  if (((flags2 | (-input3 | input3) >> 0x1f) < 0x7ff00001) &&\n     (flags3 = input2 & 0x7fffffff, (flags3 | (-input1 | input1) >> 0x1f) < 0x7ff00001)) {\n    if ((input4 + 0xc0100000 | input3) == 0) {\n      flags2 = FUN_0800af78();\n      return flags2;\n    }\n    flags1 = (int)input4 >> 0x1e & 2U | input2 >> 0x1f;\n    if ((flags3 | input1) == 0) {\n      if (flags1 == 2) {\n        input1 = 0x54442d18;\n      }\n      else if (flags1 == 3) {\n        input1 = 0x54442d18;\n      }\n    }\n    else {\n      if ((flags2 | input3) != 0) {\n        if (flags2 == 0x7ff00000) {\n          flags1 = flags1 - 1;\n          if (flags3 == 0x7ff00000) {\n            if (flags1 < 3) {\n              return *(uint *)(&DAT_0800be68 + flags1 * 8);\n            }\n            return 0x54442d18;\n          }\n          if (flags1 < 3) {\n            return *(uint *)(&DAT_0800be80 + flags1 * 8);\n          }\n          return 0;\n        }\n        if (flags3 != 0x7ff00000) {\n          result = (int)(flags3 - flags2) >> 0x14;\n          if ((int)(flags3 - flags2) < 0x3d00000) {\n            if (((int)input4 < 0) && (result + 0x3c < 0 != SCARRY4(result,0x3c))) {\n              resultValue = 0;\n            }\n            else {\n              FUN_08008894(input1,input2,input3,input4,input4);\n              FUNC_0800b2cc();\n              resultValue = FUN_0800af78();\n            }\n          }\n          else {\n            resultValue = 0x3ff921fb54442d18;\n          }\n          temp = (undefined4)((ulonglong)resultValue >> 0x20);\n          flags2 = (uint)resultValue;\n          if (flags1 == 1) {\n            return flags2;\n          }\n          if (flags1 == 2) {\n            resultValue = FUN_080082d0(flags2,temp,0x33145c07,0x3ca1a626);\n            flags2 = FUN_080082d0(0x54442d18,0x400921fb,(int)resultValue,(int)((ulonglong)resultValue >> 0x20));\n            return flags2;\n          }\n          if (flags1 == 0) {\n            return flags2;\n          }\n          resultValue = FUN_080082d0(flags2,temp,0x33145c07,0x3ca1a626);\n          flags2 = FUN_080082d0((int)resultValue,(int)((ulonglong)resultValue >> 0x20),0x54442d18,0x400921fb);\n          return flags2;\n        }\n      }\n      if ((int)input2 < 0) {\n        input1 = 0x54442d18;\n      }\n      else {\n        input1 = 0x54442d18;\n      }\n    }\n  }\n  else {\n    input1 = FUN_080082d4(input3,input4,input1,input2);\n  }\n  return input1;\n}\n\n",
            "renaming": {
                "FUN_08009990": "calculate_result_08009990",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "result",
                "uVar2": "temp",
                "uVar3": "flags1",
                "uVar4": "flags2",
                "uVar5": "flags3",
                "uVar6": "resultValue"
            },
            "calling": [
                "thunk_FUN_08009990"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_0800b2cc",
                "FUN_08008894",
                "FUN_0800af78",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009b24": {
            "entrypoint": "0x08009b24",
            "current_name": "calculate_result_08009b24",
            "code": "\nuint calculateResult_08009b24(uint input1,uint input2,uint input3,uint input4)\n\n{\n  undefined4 result1;\n  int result2;\n  uint temp1;\n  int temp2;\n  undefined4 temp3;\n  int temp4;\n  uint temp5;\n  undefined4 temp6;\n  undefined4 temp7;\n  undefined8 temp8;\n  undefined8 temp9;\n  undefined8 temp10;\n  undefined8 temp11;\n  int temp12;\n  \n  input2 = input2 & 0x7fffffff;\n  input4 = input4 & 0x7fffffff;\n  temp1 = input1;\n  temp5 = input2;\n  if (input2 < input4) {\n    temp1 = input3;\n    input3 = input1;\n    temp5 = input4;\n    input4 = input2;\n  }\n  if (0x3c00000 < (int)(temp5 - input4)) {\n    temp1 = FUN_080082d4(temp1,temp5,input3,input4);\n    return temp1;\n  }\n  if (temp5 < 0x5f300001) {\n    temp12 = 0;\n  }\n  else {\n    if (0x7fefffff < temp5) {\n      if ((temp5 & 0xfffff | temp1) != 0) {\n        temp1 = FUN_080082d4(temp1,temp5,input3,input4);\n      }\n      if ((input4 ^ 0x7ff00000 | input3) != 0) {\n        return temp1;\n      }\n      return input3;\n    }\n    temp5 = temp5 + 0xda800000;\n    input4 = input4 + 0xda800000;\n    temp12 = 600;\n  }\n  temp9 = CONCAT44(temp5,temp1);\n  temp8 = CONCAT44(input4,input3);\n  if ((int)input4 < 0x20b00000) {\n    if ((int)input4 < 0x100000) {\n      if ((input4 | input3) == 0) {\n        return temp1;\n      }\n      temp8 = FUN_08008640(input3,input4,0,0x7fd00000);\n      temp9 = FUN_08008640(temp1,temp5,0,0x7fd00000);\n      temp12 = temp12 + -0x3fe;\n    }\n    else {\n      temp5 = temp5 + 0x25800000;\n      temp9 = CONCAT44(temp5,temp1);\n      input4 = input4 + 0x25800000;\n      temp8 = CONCAT44(input4,input3);\n      temp12 = temp12 + -600;\n    }\n  }\n  temp7 = (undefined4)((ulonglong)temp9 >> 0x20);\n  temp6 = (undefined4)temp9;\n  temp4 = (int)((ulonglong)temp8 >> 0x20);\n  temp3 = (undefined4)temp8;\n  temp8 = FUN_080082d0(temp6,temp7,temp3,temp4);\n  temp2 = (int)((ulonglong)temp8 >> 0x20);\n  result1 = (undefined4)temp8;\n  result2 = FUN_08008b24(temp3,temp4,result1,temp2);\n  if (result2 == 0) {\n    temp8 = FUN_08008640(0,input4,0);\n    temp9 = FUN_08008640(result1,temp2 + -0x80000000,result1,temp2);\n    temp10 = FUN_080082d4(temp6,temp7,temp6,temp7);\n    temp10 = FUN_080082d0((int)temp10,(int)((ulonglong)temp10 >> 0x20),0,temp5 + 0x100000);\n    temp10 = FUN_08008640((int)temp10,(int)((ulonglong)temp10 >> 0x20),temp3,temp4);\n    temp11 = FUN_080082d0(temp3,temp4,0,input4);\n    temp11 = FUN_08008640((int)temp11,(int)((ulonglong)temp11 >> 0x20),0,temp5 + 0x100000);\n    temp10 = FUN_080082d4((int)temp10,(int)((ulonglong)temp10 >> 0x20),(int)temp11,\n                          (int)((ulonglong)temp11 >> 0x20));\n    temp9 = FUN_080082d0((int)temp9,(int)((ulonglong)temp9 >> 0x20),(int)temp10,\n                          (int)((ulonglong)temp10 >> 0x20));\n    FUN_080082d0((int)temp8,(int)((ulonglong)temp8 >> 0x20),(int)temp9,\n                 (int)((ulonglong)temp9 >> 0x20));\n    temp8 = FUN_0800a1bc();\n  }\n  else {\n    temp8 = FUN_08008640(0,temp5,0,temp5);\n    temp9 = FUN_08008640(temp3,temp4 + -0x80000000,temp3,temp4);\n    temp10 = FUN_080082d4(temp6,temp7,0,temp5);\n    temp11 = FUN_080082d0(temp6,temp7,0,temp5);\n    temp10 = FUN_08008640((int)temp10,(int)((ulonglong)temp10 >> 0x20),(int)temp11,\n                          (int)((ulonglong)temp11 >> 0x20));\n    temp9 = FUN_080082d0((int)temp9,(int)((ulonglong)temp9 >> 0x20),(int)temp10,\n                          (int)((ulonglong)temp10 >> 0x20));\n    FUN_080082d0((int)temp8,(int)((ulonglong)temp8 >> 0x20),(int)temp9,\n                 (int)((ulonglong)temp9 >> 0x20));\n    temp8 = FUN_0800a1bc();\n  }\n  temp1 = (uint)temp8;\n  if (temp12 != 0) {\n    temp1 = FUN_08008640(temp1,(int)((ulonglong)temp8 >> 0x20),0,temp12 * 0x100000 + 0x3ff00000);\n  }\n  return temp1;\n}\n\n",
            "renaming": {
                "FUN_08009b24": "calculate_result_08009b24",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "result1",
                "iVar2": "result2",
                "uVar3": "temp1",
                "iVar4": "temp2",
                "uVar5": "temp3",
                "iVar6": "temp4",
                "uVar7": "temp5",
                "uVar8": "temp6",
                "uVar9": "temp7",
                "uVar10": "temp8",
                "uVar11": "temp9",
                "uVar12": "temp10",
                "uVar13": "temp11",
                "local_3c": "temp12"
            },
            "calling": [
                "FUN_0800981c"
            ],
            "called": [
                "FUN_08008b24",
                "FUN_080082d0",
                "FUN_0800a1bc",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009d78": {
            "entrypoint": "0x08009d78",
            "current_name": "calculate_values_08009d78",
            "code": "\nint calculateValues_08009d78(undefined4 inputParam,uint inputValue,undefined8 *outputArray)\n\n{\n  undefined4 temp1;\n  undefined4 temp2;\n  undefined4 temp3;\n  undefined4 temp4;\n  undefined4 temp5;\n  undefined4 temp6;\n  undefined4 temp7;\n  uint maskedValue;\n  int returnValue;\n  undefined8 temp8;\n  undefined8 temp9;\n  undefined8 temp10;\n  undefined4 localVariable1;\n  undefined4 localVariable2;\n  undefined8 localVariable3;\n  undefined8 localVariable4;\n  undefined8 localVariable5;\n  \n  maskedValue = inputValue & 0x7fffffff;\n  if (maskedValue < 0x3fe921fc) {\n    *(undefined4 *)outputArray = inputParam;\n    *(uint *)((int)outputArray + 4) = inputValue;\n    *(undefined4 *)(outputArray + 1) = 0;\n    *(undefined4 *)((int)outputArray + 0xc) = 0;\n    return 0;\n  }\n  if (maskedValue < 0x4002d97c) {\n    if ((int)inputValue < 1) {\n      temp8 = FUN_080082d4(inputParam,inputValue,0x54400000,0x3ff921fb);\n      temp3 = (undefined4)((ulonglong)temp8 >> 0x20);\n      temp1 = (undefined4)temp8;\n      if (maskedValue != 0x3ff921fb) {\n        temp8 = FUN_080082d4(temp1,temp3,0x1a626331,0x3dd0b461);\n        *outputArray = temp8;\n        temp8 = FUN_080082d0(temp1,temp3);\n        temp8 = FUN_080082d4((int)temp8,(int)((ulonglong)temp8 >> 0x20),0x1a626331,0x3dd0b461);\n        outputArray[1] = temp8;\n        return -1;\n      }\n      temp8 = FUN_080082d4(temp1,temp3,0x1a600000,0x3dd0b461);\n      temp1 = (undefined4)((ulonglong)temp8 >> 0x20);\n      temp9 = FUN_080082d4((int)temp8,temp1,0x2e037073,0x3ba3198a);\n      *outputArray = temp9;\n      temp8 = FUN_080082d0((int)temp8,temp1);\n      temp8 = FUN_080082d4((int)temp8,(int)((ulonglong)temp8 >> 0x20),0x2e037073,0x3ba3198a);\n      outputArray[1] = temp8;\n      return -1;\n    }\n    temp8 = FUN_080082d0();\n    temp3 = (undefined4)((ulonglong)temp8 >> 0x20);\n    temp1 = (undefined4)temp8;\n    if (maskedValue != 0x3ff921fb) {\n      temp8 = FUN_080082d0(temp1,temp3,0x1a626331,0x3dd0b461);\n      *outputArray = temp8;\n      temp8 = FUN_080082d0(temp1,temp3);\n      temp8 = FUN_080082d0((int)temp8,(int)((ulonglong)temp8 >> 0x20),0x1a626331,0x3dd0b461);\n      outputArray[1] = temp8;\n      return 1;\n    }\n    temp8 = FUN_080082d0(temp1,temp3,0x1a600000,0x3dd0b461);\n    temp1 = (undefined4)((ulonglong)temp8 >> 0x20);\n    temp9 = FUN_080082d0((int)temp8,temp1,0x2e037073,0x3ba3198a);\n    *outputArray = temp9;\n    temp8 = FUN_080082d0((int)temp8,temp1);\n    temp8 = FUN_080082d0((int)temp8,(int)((ulonglong)temp8 >> 0x20),0x2e037073,0x3ba3198a);\n    outputArray[1] = temp8;\n    return 1;\n  }\n  if (0x413921fb < maskedValue) {\n    if (0x7fefffff < maskedValue) {\n      temp8 = FUN_080082d0(inputParam,inputValue,inputParam,inputValue);\n      outputArray[1] = temp8;\n      *outputArray = temp8;\n      return 0;\n    }\n    returnValue = ((int)maskedValue >> 0x14) + -0x416;\n    FUN_08008ba0();\n    localVariable3 = FUN_0800856c();\n    temp8 = FUN_080082d0(inputParam,maskedValue + returnValue * -0x100000,(int)localVariable3,\n                          (int)((ulonglong)localVariable3 >> 0x20));\n    temp8 = FUN_08008640((int)temp8,(int)((ulonglong)temp8 >> 0x20),0,0x41700000);\n    FUN_08008ba0();\n    localVariable4 = FUN_0800856c();\n    temp8 = FUN_080082d0((int)temp8,(int)((ulonglong)temp8 >> 0x20));\n    localVariable5 = FUN_08008640((int)temp8,(int)((ulonglong)temp8 >> 0x20),0,0x41700000);\n    FUN_08008b10((int)localVariable5,(int)((ulonglong)localVariable5 >> 0x20),0,0);\n    returnValue = FUN_0800a5a0(&localVariable3,outputArray,returnValue);\n    if (-1 < (int)inputValue) {\n      return returnValue;\n    }\n    *(int *)((int)outputArray + 4) = *(int *)((int)outputArray + 4) + -0x80000000;\n    *(int *)((int)outputArray + 0xc) = *(int *)((int)outputArray + 0xc) + -0x80000000;\n    return -returnValue;\n  }\n  temp8 = FUNC_0800b2cc();\n  temp3 = (undefined4)((ulonglong)temp8 >> 0x20);\n  temp9 = FUN_08008640((int)temp8,temp3,0x6dc9c883,0x3fe45f30);\n  FUN_080082d4((int)temp9,(int)((ulonglong)temp9 >> 0x20),0,0x3fe00000);\n  returnValue = FUN_08008ba0();\n  temp9 = FUN_0800856c();\n  temp4 = (undefined4)((ulonglong)temp9 >> 0x20);\n  temp1 = (undefined4)temp9;\n  temp9 = FUN_08008640(temp1,temp4,0x54400000,0x3ff921fb);\n  temp8 = FUN_080082d0((int)temp8,temp3,(int)temp9,(int)((ulonglong)temp9 >> 0x20));\n  temp5 = (undefined4)((ulonglong)temp8 >> 0x20);\n  temp3 = (undefined4)temp8;\n  temp9 = FUN_08008640(temp1,temp4,0x1a626331,0x3dd0b461);\n  if ((0x1f < returnValue) || (*(uint *)(&DAT_0800be98 + (returnValue + -1) * 4) == maskedValue)) {\n    temp10 = FUN_080082d0(temp3,temp5,(int)temp9,(int)((ulonglong)temp9 >> 0x20));\n    if ((int)((maskedValue >> 0x14) - ((uint)((int)((ulonglong)temp10 >> 0x20) << 1) >> 0x15)) < 0x11)\n    goto LAB_0800a0ce;\n    temp9 = FUN_08008640(temp1,temp4,0x1a600000,0x3dd0b461);\n    temp6 = (undefined4)((ulonglong)temp9 >> 0x20);\n    temp8 = FUN_080082d0(temp3,temp5,(int)temp9,temp6);\n    temp7 = (undefined4)((ulonglong)temp8 >> 0x20);\n    temp2 = (undefined4)temp8;\n    temp10 = FUN_080082d0(temp3,temp5,temp2,temp7);\n    temp9 = FUN_080082d0((int)temp10,(int)((ulonglong)temp10 >> 0x20),(int)temp9,temp6);\n    temp10 = FUN_08008640(temp1,temp4,0x2e037073,0x3ba3198a);\n    temp9 = FUN_080082d0((int)temp10,(int)((ulonglong)temp10 >> 0x20),(int)temp9,\n                          (int)((ulonglong)temp9 >> 0x20));\n    temp10 = FUN_080082d0(temp2,temp7,(int)temp9,(int)((ulonglong)temp9 >> 0x20));\n    if ((int)(((int)maskedValue >> 0x14) - ((uint)((int)((ulonglong)temp10 >> 0x20) << 1) >> 0x15)) < 0x32\n       ) goto LAB_0800a0ce;\n    temp9 = FUN_08008640(temp1,temp4,0x2e000000,0x3ba3198a);\n    temp3 = (undefined4)((ulonglong)temp9 >> 0x20);\n    temp8 = FUN_080082d0(temp2,temp7,(int)temp9,temp3);\n    temp10 = FUN_080082d0(temp2,temp7);\n    temp9 = FUN_080082d0((int)temp10,(int)((ulonglong)temp10 >> 0x20),(int)temp9,temp3);\n    temp10 = FUN_08008640(temp1,temp4,0x252049c1,0x397b839a);\n    temp9 = FUN_080082d0((int)temp10,(int)((ulonglong)temp10 >> 0x20),(int)temp9,\n                          (int)((ulonglong)temp9 >> 0x20));\n  }\n  temp10 = FUN_080082d0((int)temp8,(int)((ulonglong)temp8 >> 0x20),(int)temp9,\n                        (int)((ulonglong)temp9 >> 0x20));\nLAB_0800a0ce:\n  localVariable2 = (undefined4)((ulonglong)temp8 >> 0x20);\n  localVariable1 = (undefined4)temp8;\n  *outputArray = temp10;\n  temp8 = FUN_080082d0(localVariable1,localVariable2);\n  temp8 = FUN_080082d0((int)temp8,(int)((ulonglong)temp8 >> 0x20),(int)temp9,\n                        (int)((ulonglong)temp9 >> 0x20));\n  outputArray[1] = temp8;\n  if ((int)inputValue < 0) {\n    *(int *)outputArray = (int)temp10;\n    *(int *)((int)outputArray + 4) = (int)((ulonglong)temp10 >> 0x20) + -0x80000000;\n    *(int *)(outputArray + 1) = (int)temp8;\n    *(int *)((int)outputArray + 0xc) = (int)((ulonglong)temp8 >> 0x20) + -0x80000000;\n    returnValue = -returnValue;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08009d78": "calculate_values_08009d78",
                "param_1": "inputParam",
                "param_2": "inputValue",
                "param_3": "outputArray",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "uVar3": "temp3",
                "uVar4": "temp4",
                "uVar5": "temp5",
                "uVar6": "temp6",
                "uVar7": "temp7",
                "uVar8": "maskedValue",
                "iVar9": "returnValue",
                "uVar10": "temp8",
                "uVar11": "temp9",
                "uVar12": "temp10",
                "local_50": "localVariable1",
                "uStack_4c": "localVariable2",
                "local_40": "localVariable3",
                "local_38": "localVariable4",
                "local_30": "localVariable5"
            },
            "calling": [
                "FUN_080096e8",
                "FUN_08009410"
            ],
            "called": [
                "FUN_08008b10",
                "FUN_080082d0",
                "FUN_0800b2cc",
                "FUN_0800856c",
                "FUN_0800a5a0",
                "FUN_08008ba0",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a1bc": {
            "entrypoint": "0x0800a1bc",
            "current_name": "reverse_bits_0800a1bc",
            "code": "\nuint reverseBits_0800a1bc(uint inputValue,uint bitCount)\n\n{\n  uint tempCount;\n  int tempVar;\n  uint mask;\n  undefined4 highBits;\n  uint shiftedInput;\n  uint maskBit;\n  uint tempResult;\n  uint remainingBits;\n  uint shiftedValue;\n  int iteration;\n  uint tempVar2;\n  uint shiftAmount;\n  undefined8 functionResult;\n  \n  if ((~bitCount & 0x7ff00000) == 0) {\n    functionResult = FUN_08008640(inputValue,bitCount,inputValue,bitCount);\n    tempResult = FUN_080082d4((int)functionResult,(int)((ulonglong)functionResult >> 0x20),inputValue,bitCount);\n    return tempResult;\n  }\n  if ((int)bitCount < 1) {\n    if ((bitCount & 0x7fffffff | inputValue) == 0) {\n      return inputValue;\n    }\n    if (bitCount != 0) {\n      functionResult = FUN_080082d0(inputValue,bitCount,inputValue);\n      highBits = (undefined4)((ulonglong)functionResult >> 0x20);\n      tempResult = FUN_08008894((int)functionResult,highBits,(int)functionResult,highBits);\n      return tempResult;\n    }\n    do {\n      shiftedValue = inputValue;\n      tempResult = shiftedValue >> 0xb;\n      bitCount = bitCount - 0x15;\n      inputValue = shiftedValue << 0x15;\n    } while (tempResult == 0);\n    tempCount = bitCount;\n    if (-1 < (int)shiftedValue) goto LAB_0800a290;\n    shiftAmount = 0x20;\n    shiftedInput = 0xffffffff;\n    shiftedValue = inputValue;\n  }\n  else {\n    tempCount = (int)bitCount >> 0x14;\n    tempResult = bitCount;\n    shiftedValue = inputValue;\n    if (tempCount != 0) goto LAB_0800a1da;\nLAB_0800a290:\n    shiftedValue = 0;\n    shiftAmount = tempResult;\n    do {\n      shiftedInput = shiftedValue;\n      tempResult = shiftAmount << 1;\n      iteration = shiftAmount << 0xc;\n      shiftedValue = shiftedInput + 1;\n      shiftAmount = tempResult;\n    } while (-1 < iteration);\n    shiftAmount = 0x20 - shiftedValue;\n    bitCount = tempCount;\n    shiftedValue = inputValue << (shiftedValue & 0xff);\n  }\n  tempResult = inputValue >> (shiftAmount & 0xff) | tempResult;\n  tempCount = bitCount - shiftedInput;\nLAB_0800a1da:\n  tempResult = tempResult & 0xfffff | 0x100000;\n  if (-1 < (int)(tempCount << 0x1f)) {\n    tempResult = tempResult * 2 - ((int)shiftedValue >> 0x1f);\n    shiftedValue = shiftedValue << 1;\n  }\n  shiftAmount = 0;\n  tempResult = tempResult * 2 - ((int)shiftedValue >> 0x1f);\n  shiftedValue = shiftedValue << 1;\n  tempCount = 0;\n  iteration = 0x16;\n  shiftedInput = 0x200000;\n  do {\n    tempVar = tempCount + shiftedInput;\n    if (tempVar <= (int)tempResult) {\n      tempResult = tempResult - tempVar;\n      tempCount = tempVar + shiftedInput;\n      shiftAmount = shiftAmount + shiftedInput;\n    }\n    iteration = iteration + -1;\n    tempResult = tempResult * 2 - ((int)shiftedValue >> 0x1f);\n    shiftedInput = shiftedInput >> 1;\n    shiftedValue = shiftedValue << 1;\n  } while (iteration != 0);\n  tempVar = 0x20;\n  maskBit = 0x80000000;\n  iteration = 0;\n  shiftedInput = 0;\n  do {\n    mask = maskBit + iteration;\n    tempVar2 = tempCount;\n    if ((int)tempCount < (int)tempResult) {\n      if ((int)mask < 0) {\nLAB_0800a26a:\n        if (-1 < (int)(mask + maskBit)) {\n          tempVar2 = tempCount + 1;\n        }\n      }\n      remainingBits = tempResult - tempCount;\n      tempCount = tempVar2;\n      if (shiftedValue < mask) {\n        remainingBits = remainingBits - 1;\n      }\nLAB_0800a262:\n      iteration = mask + maskBit;\n      shiftedValue = shiftedValue - mask;\n      shiftedInput = shiftedInput + maskBit;\n      tempResult = remainingBits;\n    }\n    else if ((tempResult == tempCount) && (mask <= shiftedValue)) {\n      if ((int)mask < 0) goto LAB_0800a26a;\n      remainingBits = 0;\n      tempCount = tempResult;\n      goto LAB_0800a262;\n    }\n    tempVar = tempVar + -1;\n    maskBit = maskBit >> 1;\n    tempResult = tempResult * 2 - ((int)shiftedValue >> 0x1f);\n    shiftedValue = shiftedValue << 1;\n    if (tempVar == 0) {\n      if ((tempResult | shiftedValue) == 0) {\n        shiftedInput = shiftedInput >> 1;\n      }\n      else if (shiftedInput == 0xffffffff) {\n        shiftAmount = shiftAmount + 1;\n        shiftedInput = 0;\n      }\n      else {\n        shiftedInput = shiftedInput + 1 >> 1;\n      }\n      if ((shiftAmount & 1) != 0) {\n        shiftedInput = shiftedInput | 0x80000000;\n      }\n      return shiftedInput;\n    }\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_0800a1bc": "reverse_bits_0800a1bc",
                "param_1": "inputValue",
                "param_2": "bitCount",
                "uVar1": "tempCount",
                "iVar2": "tempVar",
                "uVar3": "mask",
                "uVar4": "highBits",
                "uVar5": "shiftedInput",
                "uVar6": "maskBit",
                "uVar7": "tempResult",
                "uVar8": "remainingBits",
                "uVar9": "shiftedValue",
                "iVar10": "iteration",
                "uVar11": "tempVar2",
                "uVar12": "shiftAmount",
                "uVar13": "functionResult"
            },
            "calling": [
                "FUN_080098d0",
                "FUN_08009b24"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_08008894",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a348": {
            "entrypoint": "0x0800a348",
            "current_name": "calculate_result_0800a348",
            "code": "\nundefined4 calculate_result_0800a348(undefined4 input_1,uint input_2,undefined4 input_3,undefined4 input_4)\n\n{\n  int isSuccess;\n  undefined4 result_1;\n  undefined4 result_2;\n  uint abs_input_2;\n  undefined8 temp_result_1;\n  undefined8 temp_result_2;\n  undefined8 temp_result_3;\n  undefined4 final_result_1;\n  undefined4 final_result_2;\n  undefined4 temp_result_4;\n  undefined4 temp_result_5;\n  \n  abs_input_2 = input_2 & 0x7fffffff;\n  if (abs_input_2 < 0x3e400000) {\n    isSuccess = FUN_08008ba0();\n    if (isSuccess == 0) {\n      return 0;\n    }\n    temp_result_1 = FUN_08008640(input_1,input_2,input_1,input_2);\n    result_2 = (undefined4)((ulonglong)temp_result_1 >> 0x20);\n    result_1 = (undefined4)temp_result_1;\n    temp_result_2 = FUN_08008640(result_1,result_2,0xbe8838d4,0xbda8fae9);\n    temp_result_2 = FUN_080082d4((int)temp_result_2,(int)((ulonglong)temp_result_2 >> 0x20),0xbdb4b1c4,0x3e21ee9e);\n    temp_result_2 = FUN_08008640((int)temp_result_2,(int)((ulonglong)temp_result_2 >> 0x20),result_1,result_2);\n    temp_result_2 = FUN_080082d0((int)temp_result_2,(int)((ulonglong)temp_result_2 >> 0x20),0x809c52ad,0x3e927e4f);\n    temp_result_2 = FUN_08008640((int)temp_result_2,(int)((ulonglong)temp_result_2 >> 0x20),result_1,result_2);\n    temp_result_2 = FUN_080082d4((int)temp_result_2,(int)((ulonglong)temp_result_2 >> 0x20),0x19cb1590,0x3efa01a0);\n    temp_result_2 = FUN_08008640((int)temp_result_2,(int)((ulonglong)temp_result_2 >> 0x20),result_1,result_2);\n    temp_result_2 = FUN_080082d0((int)temp_result_2,(int)((ulonglong)temp_result_2 >> 0x20),0x16c15177,0x3f56c16c);\n    temp_result_2 = FUN_08008640((int)temp_result_2,(int)((ulonglong)temp_result_2 >> 0x20),result_1,result_2);\n    temp_result_2 = FUN_080082d4((int)temp_result_2,(int)((ulonglong)temp_result_2 >> 0x20),0x5555554c,0x3fa55555);\n    temp_result_2 = FUN_08008640((int)temp_result_2,(int)((ulonglong)temp_result_2 >> 0x20),result_1,result_2);\n  }\n  else {\n    temp_result_1 = FUN_08008640(input_1,input_2,input_1,input_2);\n    result_2 = (undefined4)((ulonglong)temp_result_1 >> 0x20);\n    result_1 = (undefined4)temp_result_1;\n    temp_result_2 = FUN_08008640(result_1,result_2,0xbe8838d4,0xbda8fae9);\n    temp_result_2 = FUN_080082d4((int)temp_result_2,(int)((ulonglong)temp_result_2 >> 0x20),0xbdb4b1c4,0x3e21ee9e);\n    temp_result_2 = FUN_08008640((int)temp_result_2,(int)((ulonglong)temp_result_2 >> 0x20),result_1,result_2);\n    temp_result_2 = FUN_080082d0((int)temp_result_2,(int)((ulonglong)temp_result_2 >> 0x20),0x809c52ad,0x3e927e4f);\n    temp_result_2 = FUN_08008640((int)temp_result_2,(int)((ulonglong)temp_result_2 >> 0x20),result_1,result_2);\n    temp_result_2 = FUN_080082d4((int)temp_result_2,(int)((ulonglong)temp_result_2 >> 0x20),0x19cb1590,0x3efa01a0);\n    temp_result_2 = FUN_08008640((int)temp_result_2,(int)((ulonglong)temp_result_2 >> 0x20),result_1,result_2);\n    temp_result_2 = FUN_080082d0((int)temp_result_2,(int)((ulonglong)temp_result_2 >> 0x20),0x16c15177,0x3f56c16c);\n    temp_result_2 = FUN_08008640((int)temp_result_2,(int)((ulonglong)temp_result_2 >> 0x20),result_1,result_2);\n    temp_result_2 = FUN_080082d4((int)temp_result_2,(int)((ulonglong)temp_result_2 >> 0x20),0x5555554c,0x3fa55555);\n    temp_result_2 = FUN_08008640((int)temp_result_2,(int)((ulonglong)temp_result_2 >> 0x20),result_1,result_2);\n    if (0x3fd33332 < abs_input_2) {\n      if (abs_input_2 < 0x3fe90001) {\n        isSuccess = abs_input_2 - 0x200000;\n        temp_result_1 = FUN_080082d0(0,0x3ff00000,0,isSuccess);\n      }\n      else {\n        isSuccess = 0x3fd20000;\n        temp_result_1 = 0x3fe7000000000000;\n      }\n      temp_result_5 = (undefined4)((ulonglong)temp_result_1 >> 0x20);\n      temp_result_4 = (undefined4)temp_result_1;\n      temp_result_1 = FUN_08008640(result_1,result_2,0,0x3fe00000);\n      temp_result_1 = FUN_080082d0((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),0,isSuccess);\n      temp_result_2 = FUN_08008640(result_1,result_2,(int)temp_result_2,(int)((ulonglong)temp_result_2 >> 0x20));\n      temp_result_3 = FUN_08008640(input_1,input_2,input_3,input_4);\n      temp_result_2 = FUN_080082d0((int)temp_result_2,(int)((ulonglong)temp_result_2 >> 0x20),(int)temp_result_3,\n                           (int)((ulonglong)temp_result_3 >> 0x20));\n      temp_result_1 = FUN_080082d0((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),(int)temp_result_2,\n                           (int)((ulonglong)temp_result_2 >> 0x20));\n      result_1 = FUN_080082d0(temp_result_4,temp_result_5,(int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20));\n      return result_1;\n    }\n  }\n  final_result_2 = (undefined4)((ulonglong)temp_result_2 >> 0x20);\n  final_result_1 = (undefined4)temp_result_2;\n  result_1 = (undefined4)((ulonglong)temp_result_1 >> 0x20);\n  temp_result_2 = FUN_08008640((int)temp_result_1,result_1,0,0x3fe00000);\n  temp_result_1 = FUN_08008640((int)temp_result_1,result_1,final_result_1,final_result_2);\n  temp_result_3 = FUN_08008640(input_1,input_2,input_3,input_4);\n  temp_result_1 = FUN_080082d0((int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20),(int)temp_result_3,\n                       (int)((ulonglong)temp_result_3 >> 0x20));\n  temp_result_1 = FUN_080082d0((int)temp_result_2,(int)((ulonglong)temp_result_2 >> 0x20),(int)temp_result_1,\n                       (int)((ulonglong)temp_result_1 >> 0x20));\n  result_1 = FUN_080082d0(0,0x3ff00000,(int)temp_result_1,(int)((ulonglong)temp_result_1 >> 0x20));\n  return result_1;\n}\n\n",
            "renaming": {
                "FUN_0800a348": "calculate_result_0800a348",
                "param_1": "input_1",
                "param_2": "input_2",
                "param_3": "input_3",
                "param_4": "input_4",
                "iVar1": "isSuccess",
                "uVar2": "result_1",
                "uVar3": "result_2",
                "uVar4": "abs_input_2",
                "uVar5": "temp_result_1",
                "uVar6": "temp_result_2",
                "uVar7": "temp_result_3",
                "local_30": "final_result_1",
                "uStack_2c": "final_result_2",
                "local_28": "temp_result_4",
                "uStack_24": "temp_result_5"
            },
            "calling": [
                "FUN_080096e8",
                "FUN_08009410"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_08008ba0",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a5a0": {
            "entrypoint": "0x0800a5a0",
            "current_name": "calculate_result_0800a5a0",
            "code": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nuint calculateResult_0800a5a0(int input,undefined8 *output,int size,int param_4,int param_5,int param_6)\n\n{\n  undefined4 *pointer1;\n  uint result;\n  uint temp;\n  int count;\n  uint *pointer2;\n  undefined4 temp1;\n  uint **pointer3;\n  undefined4 temp2;\n  int param_4_minus_1;\n  undefined4 *pointer4;\n  undefined4 temp3;\n  uint temp4;\n  uint *pointer5;\n  int temp_count;\n  int temp_count_minus_1;\n  undefined8 *pointer16;\n  int i;\n  undefined4 *pointer18;\n  undefined8 *pointer6;\n  undefined4 temp5;\n  int temp_result_minus_1;\n  undefined8 *pointer7;\n  undefined4 *pointer8;\n  bool flag;\n  undefined8 temp6;\n  undefined8 temp_result3;\n  undefined8 temp7;\n  undefined8 *temp_array1;\n  int temp_array2;\n  int temp_offset;\n  int temp_value1;\n  uint *temp_array3 [2];\n  uint result_array [20];\n  undefined8 temp_value2;\n  undefined8 temp_value3;\n  int temp_array4 [38];\n  undefined8 temp_value4;\n  \n  temp_count_minus_1 = *(int *)(&DAT_0800c060 + param_5 * 4);\n  param_4_minus_1 = param_4 + -1;\n  temp_array3[1] = (uint *)output;\n  if (size + 0x14 < 0 == SCARRY4(size,0x14)) {\n    temp_value1 = (size + -3) / 0x18;\n    temp_offset = (temp_value1 + 1) * -0x18;\n  }\n  else {\n    temp_offset = -0x18;\n    temp_value1 = 0;\n  }\n  temp_offset = size + temp_offset;\n  i = temp_value1 - param_4_minus_1;\n  if (-1 < temp_count_minus_1 + param_4_minus_1) {\n    temp_result_minus_1 = temp_count_minus_1 + param_4_minus_1 + 1 + i;\n    pointer16 = &temp_value2;\n    do {\n      while (i < 0) {\n        i = i + 1;\n        *(undefined4 *)pointer16 = 0;\n        *(undefined4 *)((int)pointer16 + 4) = 0;\n        pointer16 = pointer16 + 1;\n        if (i == temp_result_minus_1) goto LAB_0800a626;\n      }\n      temp_result3 = FUN_0800856c(*(undefined4 *)(param_6 + i * 4));\n      i = i + 1;\n      *pointer16 = temp_result3;\n      pointer16 = pointer16 + 1;\n    } while (i != temp_result_minus_1);\n  }\nLAB_0800a626:\n  pointer4 = (undefined4 *)(input + -8);\n  if (-1 < temp_count_minus_1) {\n    pointer7 = &temp_value2 + param_4;\n    i = param_4_minus_1;\n    pointer16 = &temp_value4;\n    do {\n      if (param_4_minus_1 < 0) {\n        temp_result3 = 0;\n      }\n      else {\n        temp_result3 = 0;\n        pointer8 = pointer4;\n        pointer6 = pointer7;\n        do {\n          pointer18 = pointer8 + 2;\n          temp6 = FUN_08008640(*pointer18,pointer8[3],*(undefined4 *)(pointer6 + -1),\n                                *(undefined4 *)((int)pointer6 + -4));\n          temp_result3 = FUN_080082d4((int)temp_result3,(int)((ulonglong)temp_result3 >> 0x20),(int)temp6,\n                                (int)((ulonglong)temp6 >> 0x20));\n          pointer8 = pointer18;\n          pointer6 = pointer6 + -1;\n        } while (pointer18 != pointer4 + param_4 * 2);\n      }\n      i = i + 1;\n      *pointer16 = temp_result3;\n      pointer7 = pointer7 + 1;\n      pointer16 = pointer16 + 1;\n    } while (i != temp_count_minus_1 + param_4);\n  }\n  temp_array3[0] = result_array + temp_count_minus_1 + -1;\n  i = temp_count_minus_1;\n  do {\n    temp_result3 = CONCAT44(*(undefined4 *)((int)&temp_value4 + i * 8 + 4),\n                      *(undefined4 *)(&temp_value4 + i));\n    if (0 < i) {\n      pointer16 = &temp_value4 + i;\n      pointer2 = result_array;\n      do {\n        temp1 = (undefined4)((ulonglong)temp_result3 >> 0x20);\n        FUN_08008640((int)temp_result3,temp1,0,0x3e700000);\n        FUN_08008ba0();\n        temp6 = FUN_0800856c();\n        temp2 = (undefined4)((ulonglong)temp6 >> 0x20);\n        temp7 = FUN_08008640((int)temp6,temp2,0,0x41700000);\n        FUN_080082d0((int)temp_result3,temp1,(int)temp7,(int)((ulonglong)temp7 >> 0x20));\n        result = FUN_08008ba0();\n        pointer7 = pointer16 + -1;\n        temp1 = *(undefined4 *)pointer7;\n        temp3 = *(undefined4 *)((int)pointer16 + -4);\n        *pointer2 = result;\n        temp_result3 = FUN_080082d4((int)temp6,temp2,temp1,temp3);\n        pointer16 = pointer7;\n        pointer2 = pointer2 + 1;\n      } while (pointer7 != &temp_value4);\n    }\n    temp_result3 = FUN_0800b2e8((int)temp_result3,(int)((ulonglong)temp_result3 >> 0x20),temp_offset);\n    temp2 = (undefined4)((ulonglong)temp_result3 >> 0x20);\n    FUN_08008640((int)temp_result3,temp2,0,0x3fc00000);\n    temp6 = FUN_080094c0();\n    temp6 = FUN_08008640((int)temp6,(int)((ulonglong)temp6 >> 0x20),0,0x40200000);\n    temp_result3 = FUN_080082d0((int)temp_result3,temp2,(int)temp6,(int)((ulonglong)temp6 >> 0x20));\n    result = FUN_08008ba0();\n    temp6 = FUN_0800856c();\n    temp_result3 = FUN_080082d0((int)temp_result3,(int)((ulonglong)temp_result3 >> 0x20),(int)temp6,\n                          (int)((ulonglong)temp6 >> 0x20));\n    temp1 = (undefined4)((ulonglong)temp_result3 >> 0x20);\n    temp2 = (undefined4)temp_result3;\n    if (temp_offset < 1) {\n      if (temp_offset == 0) {\n        temp_result_minus_1 = (int)result_array[i + -1] >> 0x17;\n        goto joined_r0x0800a8b8;\n      }\n      temp_result_minus_1 = FUN_08008b4c(temp2,temp1,0,0x3fe00000);\n      if (temp_result_minus_1 != 0) {\n        result = result + 1;\n        if (i < 1) {\n          temp_result3 = FUN_080082d0(0,0x3ff00000,temp2,temp1);\n          temp_result_minus_1 = 2;\n          goto LAB_0800a7a4;\n        }\n        temp_result_minus_1 = 2;\n        goto LAB_0800a8c8;\n      }\n    }\n    else {\n      count = (int)result_array[i + -1] >> (0x18U - temp_offset & 0xff);\n      temp4 = result_array[i + -1] - (count << (0x18U - temp_offset & 0xff));\n      temp_result_minus_1 = (int)temp4 >> (0x17U - temp_offset & 0xff);\n      result_array[i + -1] = temp4;\n      result = result + count;\njoined_r0x0800a8b8:\n      if (0 < temp_result_minus_1) {\n        result = result + 1;\n        if (i < 1) {\n          flag = false;\n        }\n        else {\nLAB_0800a8c8:\n          if (result_array[0] == 0) {\n            flag = false;\n            if (i != 1) {\n              pointer2 = result_array;\n              count = 1;\n              do {\n                pointer2 = pointer2 + 1;\n                if (*pointer2 != 0) {\n                  temp_count = count + 1;\n                  temp4 = *pointer2;\n                  goto LAB_0800a8e2;\n                }\n                count = count + 1;\n              } while (count != i);\n              flag = false;\n            }\n          }\n          else {\n            temp_count = 1;\n            count = 0;\n            temp4 = result_array[0];\nLAB_0800a8e2:\n            result_array[count] = 0x1000000 - temp4;\n            if (temp_count < i) {\n              temp4 = result_array[temp_count];\n              pointer2 = result_array + temp_count;\n              while( true ) {\n                pointer5 = pointer2 + 1;\n                *pointer2 = 0xffffff - temp4;\n                if (pointer5 == result_array + i) break;\n                temp4 = *pointer5;\n                pointer2 = pointer5;\n              }\n            }\n            flag = true;\n          }\n        }\n        if (0 < temp_offset) {\n          if (temp_offset == 1) {\n            result_array[i + -1] = result_array[i + -1] & 0x7fffff;\n          }\n          else if (temp_offset == 2) {\n            result_array[i + -1] = result_array[i + -1] & 0x3fffff;\n          }\n        }\n        if (temp_result_minus_1 == 2) {\n          temp_result3 = FUN_080082d0(0,0x3ff00000,temp2,temp1);\n          if (flag) {\n            temp6 = FUN_0800b2e8(0,0x3ff00000,temp_offset);\n            temp_result3 = FUN_080082d0((int)temp_result3,(int)((ulonglong)temp_result3 >> 0x20),(int)temp6,\n                                  (int)((ulonglong)temp6 >> 0x20));\n          }\n        }\n      }\n    }\nLAB_0800a7a4:\n    temp2 = (undefined4)((ulonglong)temp_result3 >> 0x20);\n    count = FUN_08008b10((int)temp_result3,temp2,0,0);\n    if (count == 0) {\n      temp_result3 = FUN_0800b2e8((int)temp_result3,temp2,-temp_offset);\n      temp1 = (undefined4)((ulonglong)temp_result3 >> 0x20);\n      temp2 = (undefined4)temp_result3;\n      param_4_minus_1 = FUN_08008b4c(temp2,temp1,0,0x41700000);\n      if (param_4_minus_1 == 0) {\n        temp4 = FUN_08008ba0(temp2,temp1);\n        result_array[i] = temp4;\n        count = i;\n      }\n      else {\n        FUN_08008640(temp2,temp1,0,0x3e700000);\n        temp4 = FUN_08008ba0();\n        temp_result3 = FUN_0800856c();\n        temp_result3 = FUN_08008640((int)temp_result3,(int)((ulonglong)temp_result3 >> 0x20),0,0x41700000);\n        FUN_080082d0(temp2,temp1,(int)temp_result3,(int)((ulonglong)temp_result3 >> 0x20));\n        temp = FUN_08008ba0();\n        temp_offset = temp_offset + 0x18;\n        result_array[i] = temp;\n        result_array[i + 1] = temp4;\n        count = i + 1;\n      }\n      goto LAB_0800a9f6;\n    }\n    count = i + -1;\n    if (temp_count_minus_1 <= count) {\n      temp4 = 0;\n      pointer2 = result_array + i + 0x3fffffff;\n      do {\n        pointer5 = pointer2 + -1;\n        temp4 = temp4 | *pointer2;\n        pointer2 = pointer5;\n      } while (pointer5 != temp_array3[0]);\n      if (temp4 != 0) break;\n    }\n    if (result_array[temp_count_minus_1 + -1] == 0) {\n      temp_array2 = 1;\n      pointer3 = temp_array3 + temp_count_minus_1;\n      do {\n        pointer2 = *pointer3;\n        temp_array2 = temp_array2 + 1;\n        pointer3 = pointer3 + -1;\n      } while (pointer2 == (uint *)0x0);\n      temp_array2 = i + temp_array2;\n    }\n    else {\n      temp_array2 = i + 1;\n    }\n    temp_result_minus_1 = i + 1;\n    pointer8 = (undefined4 *)(param_6 + (temp_result_minus_1 + temp_value1 + 0x3fffffff) * 4);\n    pointer16 = &temp_value2 + i + param_4;\n    temp_array1 = &temp_value4 + temp_result_minus_1;\n    do {\n      pointer8 = pointer8 + 1;\n      temp_result3 = FUN_0800856c(*pointer8);\n      *pointer16 = temp_result3;\n      pointer7 = pointer16 + 1;\n      if (param_4_minus_1 < 0) {\n        temp6 = 0;\n      }\n      else {\n        temp6 = 0;\n        pointer18 = pointer4;\n        while( true ) {\n          pointer16 = pointer16 + -1;\n          pointer1 = pointer18 + 2;\n          temp_result3 = FUN_08008640((int)temp_result3,(int)((ulonglong)temp_result3 >> 0x20),*pointer1,pointer18[3]);\n          temp6 = FUN_080082d4((int)temp6,(int)((ulonglong)temp6 >> 0x20),(int)temp_result3,\n                                (int)((ulonglong)temp_result3 >> 0x20));\n          if (pointer1 == pointer4 + param_4 * 2) break;\n          temp_result3 = *pointer16;\n          pointer18 = pointer1;\n        }\n      }\n      *temp_array1 = temp6;\n      temp_result_minus_1 = temp_result_minus_1 + 1;\n      i = temp_array2;\n      pointer16 = pointer7;\n      temp_array1 = temp_array1 + 1;\n    } while (temp_result_minus_1 <= temp_array2);\n  } while( true );\n  temp_offset = temp_offset + -0x18;\n  if (result_array[count] == 0) {\n    pointer2 = result_array + i + 0x3ffffffe;\n    do {\n      temp4 = *pointer2;\n      count = count + -1;\n      temp_offset = temp_offset + -0x18;\n      pointer2 = pointer2 + -1;\n    } while (temp4 == 0);\n  }\nLAB_0800a9f6:\n  temp_result3 = FUN_0800b2e8(0,0x3ff00000,temp_offset);\n  if (count < 0) {\n    if (2 < param_5) {\n      if (param_5 == 3) {\n        temp_result3 = 0;\nLAB_0800abe4:\n        if (temp_result_minus_1 == 0) {\n          *temp_array3[1] = (undefined4)temp_value3;\n          *(int *)((int)temp_array3[1] + 4) = temp_value3._4_4_;\n          *(undefined8 *)((int)temp_array3[1] + 0x10) = temp_result3;\n          *(int *)((int)temp_array3[1] + 8) = temp_array4[0];\n          *(int *)((int)temp_array3[1] + 0xc) = temp_array4[1];\n          return result & 7;\n        }\n        *(int *)((int)temp_array3[1] + 0x10) = (int)temp_result3;\n        *(int *)((int)temp_array3[1] + 8) = temp_array4[0];\n        *(int *)((int)temp_array3[1] + 0x14) = (int)((ulonglong)temp_result3 >> 0x20) + -0x80000000;\n        *(int *)((int)temp_array3[1] + 4) = temp_value3._4_4_ + -0x80000000;\n        *(int *)((int)temp_array3[1] + 0xc) = temp_array4[1] + -0x80000000;\n        *temp_array3[1] = (undefined4)temp_value3;\n        return result & 7;\n      }\n      goto LAB_0800ab0e;\n    }\n    if (param_5 < 1) {\n      if (param_5 != 0) goto LAB_0800ab0e;\n      temp_result3 = 0;\nLAB_0800aafc:\n      param_4_minus_1 = (int)((ulonglong)temp_result3 >> 0x20);\n      if (temp_result_minus_1 != 0) {\n        param_4_minus_1 = param_4_minus_1 + -0x80000000;\n      }\n      *temp_array3[1] = (int)temp_result3;\n      *(int *)((int)temp_array3[1] + 4) = param_4_minus_1;\nLAB_0800ab0e:\n      return result & 7;\n    }\n    temp_result3 = 0;\n  }\n  else {\n    pointer7 = &temp_value4 + count;\n    pointer2 = result_array + count + 1;\n    pointer16 = &temp_value4 + count + 1;\n    do {\n      temp2 = (undefined4)((ulonglong)temp_result3 >> 0x20);\n      pointer2 = pointer2 + -1;\n      temp6 = FUN_0800856c(*pointer2);\n      temp6 = FUN_08008640((int)temp6,(int)((ulonglong)temp6 >> 0x20),(int)temp_result3,temp2);\n      pointer16 = pointer16 + -1;\n      *pointer16 = temp6;\n      temp_result3 = FUN_08008640((int)temp_result3,temp2,0,0x3e700000);\n    } while (pointer2 != result_array);\n    param_4_minus_1 = 0;\n    do {\n      if (temp_count_minus_1 < 0) {\n        temp_result3 = 0;\n      }\n      else {\n        temp2 = 0x40000000;\n        temp1 = 0x3ff921fb;\n        temp_result3 = 0;\n        i = 0;\n        pointer16 = pointer7;\n        pointer4 = &DAT_0800c028;\n        while( true ) {\n          temp6 = FUN_08008640(*(undefined4 *)pointer16,*(undefined4 *)((int)pointer16 + 4),temp2,temp1\n                               );\n          temp_result3 = FUN_080082d4((int)temp_result3,(int)((ulonglong)temp_result3 >> 0x20),(int)temp6,\n                                (int)((ulonglong)temp6 >> 0x20));\n          i = i + 1;\n          if ((temp_count_minus_1 < i) || (param_4_minus_1 < i)) break;\n          temp2 = *pointer4;\n          temp1 = pointer4[1];\n          pointer16 = pointer16 + 1;\n          pointer4 = pointer4 + 2;\n        }\n      }\n      flag = param_4_minus_1 != count;\n      *(int *)(&temp_value3 + param_4_minus_1) = (int)temp_result3;\n      *(int *)((int)&temp_value3 + (param_4_minus_1 * 2 + 1) * 4) = (int)((ulonglong)temp_result3 >> 0x20);\n      pointer7 = pointer7 + -1;\n      param_4_minus_1 = param_4_minus_1 + 1;\n    } while (flag);\n    if (2 < param_5) {\n      if (param_5 == 3) {\n        if (count != 0) {\n          pointer16 = &temp_value3 + count;\n          temp_result3 = CONCAT44(*(undefined4 *)((int)&temp_value3 + (count * 2 + 1) * 4),\n                            *(undefined4 *)pointer16);\n          do {\n            temp1 = (undefined4)((ulonglong)temp_result3 >> 0x20);\n            temp2 = (undefined4)temp_result3;\n            temp3 = *(undefined4 *)(pointer16 + -1);\n            temp5 = *(undefined4 *)((int)pointer16 + -4);\n            temp_result3 = FUN_080082d4(temp2,temp1,temp3,temp5);\n            temp6 = FUN_080082d0(temp3,temp5,(int)temp_result3,(int)((ulonglong)temp_result3 >> 0x20));\n            temp6 = FUN_080082d4((int)temp6,(int)((ulonglong)temp6 >> 0x20),temp2,temp1);\n            *pointer16 = temp6;\n            pointer16 = pointer16 + -1;\n            *pointer16 = temp_result3;\n          } while (&temp_value3 != pointer16);\n          if (1 < count) {\n            pointer16 = &temp_value3 + count;\n            temp_result3 = CONCAT44(*(undefined4 *)((int)&temp_value3 + (count * 2 + 1) * 4),\n                              *(undefined4 *)pointer16);\n            do {\n              temp1 = (undefined4)((ulonglong)temp_result3 >> 0x20);\n              temp2 = (undefined4)temp_result3;\n              temp3 = *(undefined4 *)(pointer16 + -1);\n              temp5 = *(undefined4 *)((int)pointer16 + -4);\n              temp_result3 = FUN_080082d4(temp2,temp1,temp3,temp5);\n              temp6 = FUN_080082d0(temp3,temp5,(int)temp_result3,(int)((ulonglong)temp_result3 >> 0x20));\n              temp6 = FUN_080082d4((int)temp6,(int)((ulonglong)temp6 >> 0x20),temp2,temp1);\n              *pointer16 = temp6;\n              pointer16 = pointer16 + -1;\n              *pointer16 = temp_result3;\n            } while (&temp_value3 + 1 != pointer16);\n            temp_result3 = 0;\n            pointer16 = &temp_value3 + count + 1;\n            do {\n              pointer7 = pointer16 + -1;\n              temp_result3 = FUN_080082d4((int)temp_result3,(int)((ulonglong)temp_result3 >> 0x20),\n                                    *(undefined4 *)pointer7,*(undefined4 *)((int)pointer16 + -4));\n              pointer16 = pointer7;\n            } while (&temp_value3 + 2 != pointer7);\n            goto LAB_0800abe4;\n          }\n        }\n        temp_result3 = 0;\n        goto LAB_0800abe4;\n      }\n      goto LAB_0800ab0e;\n    }\n    if (param_5 < 1) {\n      if (param_5 != 0) goto LAB_0800ab0e;\n      temp_result3 = 0;\n      pointer16 = &temp_value3 + count + 1;\n      do {\n        pointer7 = pointer16 + -1;\n        temp_result3 = FUN_080082d4((int)temp_result3,(int)((ulonglong)temp_result3 >> 0x20),*(undefined4 *)pointer7,\n                              *(undefined4 *)((int)pointer16 + -4));\n        pointer16 = pointer7;\n      } while (&temp_value3 != pointer7);\n      goto LAB_0800aafc;\n    }\n    temp_result3 = 0;\n    pointer16 = &temp_value3 + count + 1;\n    do {\n      pointer7 = pointer16 + -1;\n      temp_result3 = FUN_080082d4((int)temp_result3,(int)((ulonglong)temp_result3 >> 0x20),*(undefined4 *)pointer7,\n                            *(undefined4 *)((int)pointer16 + -4));\n      pointer16 = pointer7;\n    } while (&temp_value3 != pointer7);\n  }\n  param_4_minus_1 = (int)((ulonglong)temp_result3 >> 0x20);\n  temp2 = (undefined4)temp_result3;\n  if (temp_result_minus_1 == 0) {\n    *(undefined8 *)temp_array3[1] = temp_result3;\n    temp_result3 = FUN_080082d0((undefined4)temp_value3,temp_value3._4_4_,temp2,param_4_minus_1);\n    if (count < 1) goto LAB_0800ad26;\nLAB_0800ad04:\n    param_4_minus_1 = 1;\n    pointer16 = &temp_value3;\n    do {\n      temp_result3 = FUN_080082d4((int)temp_result3,(int)((ulonglong)temp_result3 >> 0x20),\n                            *(undefined4 *)(pointer16 + 1),*(undefined4 *)((int)pointer16 + 0xc));\n      param_4_minus_1 = param_4_minus_1 + 1;\n      pointer16 = pointer16 + 1;\n    } while (param_4_minus_1 <= count);\n    if (temp_result_minus_1 == 0) goto LAB_0800ad26;\n  }\n  else {\n    *temp_array3[1] = temp2;\n    *(int *)((int)temp_array3[1] + 4) = param_4_minus_1 + -0x80000000;\n    temp_result3 = FUN_080082d0((undefined4)temp_value3,temp_value3._4_4_,temp2,param_4_minus_1);\n    if (0 < count) goto LAB_0800ad04;\n  }\n  temp_result3 = CONCAT44((int)((ulonglong)temp_result3 >> 0x20) + -0x80000000,(int)temp_result3);\nLAB_0800ad26:\n  *(undefined8 *)((int)temp_array3[1] + 8) = temp_result3;\n  return result & 7;\n}\n\n",
            "renaming": {
                "FUN_0800a5a0": "calculate_result_0800a5a0",
                "param_1": "input",
                "param_2": "output",
                "param_3": "size",
                "puVar1": "pointer1",
                "uVar2": "result",
                "uVar3": "temp",
                "iVar4": "count",
                "puVar5": "pointer2",
                "uVar6": "temp1",
                "ppuVar7": "pointer3",
                "uVar8": "temp2",
                "iVar9": "param_4_minus_1",
                "puVar10": "pointer4",
                "uVar11": "temp3",
                "uVar12": "temp4",
                "puVar13": "pointer5",
                "iVar14": "temp_count",
                "iVar15": "temp_count_minus_1",
                "uVar16": "temp_result1",
                "iVar17": "i",
                "uVar18": "temp_result2",
                "puVar19": "pointer6",
                "uVar20": "temp5",
                "iVar21": "temp_result_minus_1",
                "puVar22": "pointer7",
                "puVar23": "pointer8",
                "bVar24": "flag",
                "uVar25": "temp6",
                "uVar26": "temp_result3",
                "uVar27": "temp7",
                "local_284": "temp_array1",
                "local_280": "temp_array2",
                "local_270": "temp_offset",
                "local_26c": "temp_value1",
                "local_260": "temp_array3",
                "local_258": "result_array",
                "uStack_208": "temp_value2",
                "local_168": "temp_value3",
                "local_160": "temp_array4",
                "uStack_c8": "temp_value4"
            },
            "calling": [
                "FUN_08009d78"
            ],
            "called": [
                "FUN_0800b2e8",
                "FUN_08008b10",
                "FUN_080082d0",
                "FUN_0800856c",
                "FUN_080094c0",
                "FUN_08008b4c",
                "FUN_08008ba0",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800adf0": {
            "entrypoint": "0x0800adf0",
            "current_name": "calculate_result_0800adf0",
            "code": "\nundefined4\ncalculate_result_0800adf0(undefined4 input_value,uint input_mask,undefined4 param_1,undefined4 param_2,int is_reversed)\n\n{\n  int result;\n  undefined4 value_low;\n  undefined4 value_high;\n  undefined4 result_low;\n  undefined4 result_high;\n  undefined4 reversed_low;\n  undefined8 reversed_high;\n  undefined8 temp_result_low;\n  \n  if (((input_mask & 0x7fffffff) < 0x3e400000) && (result = FUN_08008ba0(), result == 0)) {\n    return input_value;\n  }\n  reversed_high = FUN_08008640(input_value,input_mask,input_value);\n  result_low = (undefined4)((ulonglong)reversed_high >> 0x20);\n  value_high = (undefined4)reversed_high;\n  reversed_high = FUN_08008640(input_value,input_mask,value_high,result_low);\n  result_high = (undefined4)((ulonglong)reversed_high >> 0x20);\n  value_low = (undefined4)reversed_high;\n  reversed_high = FUN_08008640(value_high,result_low,0x5acfd57c,0x3de5d93a);\n  reversed_high = FUN_080082d0((int)reversed_high,(int)((ulonglong)reversed_high >> 0x20),0x8a2b9ceb,0x3e5ae5e6);\n  reversed_high = FUN_08008640((int)reversed_high,(int)((ulonglong)reversed_high >> 0x20),value_high,result_low);\n  reversed_high = FUN_080082d4((int)reversed_high,(int)((ulonglong)reversed_high >> 0x20),0x57b1fe7d,0x3ec71de3);\n  reversed_high = FUN_08008640((int)reversed_high,(int)((ulonglong)reversed_high >> 0x20),value_high,result_low);\n  reversed_high = FUN_080082d0((int)reversed_high,(int)((ulonglong)reversed_high >> 0x20),0x19c161d5,0x3f2a01a0);\n  reversed_high = FUN_08008640((int)reversed_high,(int)((ulonglong)reversed_high >> 0x20),value_high,result_low);\n  reversed_high = FUN_080082d4((int)reversed_high,(int)((ulonglong)reversed_high >> 0x20),0x1110f8a6,0x3f811111);\n  reversed_low = (undefined4)((ulonglong)reversed_high >> 0x20);\n  if (is_reversed != 0) {\n    temp_result_low = FUN_08008640(param_1,param_2,0,0x3fe00000);\n    reversed_high = FUN_08008640(value_low,result_high,(int)reversed_high,reversed_low);\n    reversed_high = FUN_080082d0((int)temp_result_low,(int)((ulonglong)temp_result_low >> 0x20),(int)reversed_high,\n                         (int)((ulonglong)reversed_high >> 0x20));\n    reversed_high = FUN_08008640((int)reversed_high,(int)((ulonglong)reversed_high >> 0x20),value_high,result_low);\n    reversed_high = FUN_080082d0((int)reversed_high,(int)((ulonglong)reversed_high >> 0x20),param_1,param_2);\n    temp_result_low = FUN_08008640(value_low,result_high,0x55555549,0x3fc55555);\n    reversed_high = FUN_080082d4((int)reversed_high,(int)((ulonglong)reversed_high >> 0x20),(int)temp_result_low,\n                         (int)((ulonglong)temp_result_low >> 0x20));\n    value_high = FUN_080082d0(input_value,input_mask,(int)reversed_high,(int)((ulonglong)reversed_high >> 0x20));\n    return value_high;\n  }\n  reversed_high = FUN_08008640(value_high,result_low,(int)reversed_high,reversed_low);\n  reversed_high = FUN_080082d0((int)reversed_high,(int)((ulonglong)reversed_high >> 0x20),0x55555549,0x3fc55555);\n  reversed_high = FUN_08008640((int)reversed_high,(int)((ulonglong)reversed_high >> 0x20),value_low,result_high);\n  value_high = FUN_080082d4((int)reversed_high,(int)((ulonglong)reversed_high >> 0x20),input_value,input_mask);\n  return value_high;\n}\n\n",
            "renaming": {
                "FUN_0800adf0": "calculate_result_0800adf0",
                "param_1": "input_value",
                "param_2": "input_mask",
                "param_3": "param_1",
                "param_4": "param_2",
                "param_5": "is_reversed",
                "iVar1": "result",
                "uVar2": "value_low",
                "uVar3": "value_high",
                "uVar4": "result_low",
                "uVar5": "result_high",
                "uVar6": "reversed_low",
                "uVar7": "reversed_high",
                "uVar8": "temp_result_low"
            },
            "calling": [
                "FUN_080096e8",
                "FUN_08009410"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_08008ba0",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800af78": {
            "entrypoint": "0x0800af78",
            "current_name": "calculate_result_0800af78",
            "code": "\nint calculateResult_0800af78(int value1,uint value2)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  undefined4 result3;\n  undefined4 result4;\n  int condition;\n  undefined4 temp1;\n  uint temp2;\n  undefined8 temp3;\n  undefined8 temp4;\n  undefined4 localVar;\n  \n  temp3 = CONCAT44(value2,value1);\n  temp2 = value2 & 0x7fffffff;\n  if (temp2 < 0x44100000) {\n    if (temp2 < 0x3fdc0000) {\n      if (temp2 < 0x3e200000) {\n        temp4 = FUN_080082d4(value1,value2,0x8800759c,0x7e37e43c);\n        condition = FUN_08008b60((int)temp4,(int)((ulonglong)temp4 >> 0x20),0,0x3ff00000);\n        if (condition != 0) {\n          return value1;\n        }\n      }\n      condition = -1;\n    }\n    else {\n      temp3 = FUNC_0800b2cc();\n      result4 = (undefined4)((ulonglong)temp3 >> 0x20);\n      result1 = (undefined4)temp3;\n      if (temp2 < 0x3ff30000) {\n        if (temp2 < 0x3fe60000) {\n          temp3 = FUN_080082d4(result1,result4,result1,result4);\n          temp3 = FUN_080082d0((int)temp3,(int)((ulonglong)temp3 >> 0x20),0,0x3ff00000);\n          temp4 = FUN_080082d4(result1,result4,0,0x40000000);\n          temp3 = FUN_08008894((int)temp3,(int)((ulonglong)temp3 >> 0x20),(int)temp4,\n                               (int)((ulonglong)temp4 >> 0x20));\n          condition = 0;\n        }\n        else {\n          temp3 = FUN_080082d0(result1,result4,0,0x3ff00000);\n          temp4 = FUN_080082d4(result1,result4,0,0x3ff00000);\n          temp3 = FUN_08008894((int)temp3,(int)((ulonglong)temp3 >> 0x20),(int)temp4,\n                               (int)((ulonglong)temp4 >> 0x20));\n          condition = 1;\n        }\n      }\n      else if (temp2 < 0x40038000) {\n        temp3 = FUN_080082d0(result1,result4,0,0x3ff80000);\n        temp4 = FUN_08008640(result1,result4,0,0x3ff80000);\n        temp4 = FUN_080082d4((int)temp4,(int)((ulonglong)temp4 >> 0x20),0,0x3ff00000);\n        temp3 = FUN_08008894((int)temp3,(int)((ulonglong)temp3 >> 0x20),(int)temp4,\n                             (int)((ulonglong)temp4 >> 0x20));\n        condition = 2;\n      }\n      else {\n        temp3 = FUN_08008894(0,0xbff00000,result1,result4);\n        condition = 3;\n      }\n    }\n    localVar = (undefined4)((ulonglong)temp3 >> 0x20);\n    temp1 = (undefined4)temp3;\n    temp3 = FUN_08008640(temp1,localVar,temp1);\n    result2 = (undefined4)((ulonglong)temp3 >> 0x20);\n    result1 = (undefined4)temp3;\n    temp3 = FUN_08008640(result1,result2,result1,result2);\n    result3 = (undefined4)((ulonglong)temp3 >> 0x20);\n    result4 = (undefined4)temp3;\n    temp3 = FUN_08008640(result4,result3,0xe322da11,0x3f90ad3a);\n    temp3 = FUN_080082d4((int)temp3,(int)((ulonglong)temp3 >> 0x20),0x24760deb,0x3fa97b4b);\n    temp3 = FUN_08008640((int)temp3,(int)((ulonglong)temp3 >> 0x20),result4,result3);\n    temp3 = FUN_080082d4((int)temp3,(int)((ulonglong)temp3 >> 0x20),0xa0d03d51,0x3fb10d66);\n    temp3 = FUN_08008640((int)temp3,(int)((ulonglong)temp3 >> 0x20),result4,result3);\n    temp3 = FUN_080082d4((int)temp3,(int)((ulonglong)temp3 >> 0x20),0xc54c206e,0x3fb745cd);\n    temp3 = FUN_08008640((int)temp3,(int)((ulonglong)temp3 >> 0x20),result4,result3);\n    temp3 = FUN_080082d4((int)temp3,(int)((ulonglong)temp3 >> 0x20),0x920083ff,0x3fc24924);\n    temp3 = FUN_08008640((int)temp3,(int)((ulonglong)temp3 >> 0x20),result4,result3);\n    temp3 = FUN_080082d4((int)temp3,(int)((ulonglong)temp3 >> 0x20),0x5555550d,0x3fd55555);\n    temp3 = FUN_08008640((int)temp3,(int)((ulonglong)temp3 >> 0x20),result1,result2);\n    result1 = (undefined4)((ulonglong)temp3 >> 0x20);\n    temp4 = FUN_08008640(result4,result3,0x2c6a6c2f,0xbfa2b444);\n    temp4 = FUN_080082d0((int)temp4,(int)((ulonglong)temp4 >> 0x20),0x52defd9a,0x3fadde2d);\n    temp4 = FUN_08008640((int)temp4,(int)((ulonglong)temp4 >> 0x20),result4,result3);\n    temp4 = FUN_080082d0((int)temp4,(int)((ulonglong)temp4 >> 0x20),0xaf749a6d,0x3fb3b0f2);\n    temp4 = FUN_08008640((int)temp4,(int)((ulonglong)temp4 >> 0x20),result4,result3);\n    temp4 = FUN_080082d0((int)temp4,(int)((ulonglong)temp4 >> 0x20),0xfe231671,0x3fbc71c6);\n    temp4 = FUN_08008640((int)temp4,(int)((ulonglong)temp4 >> 0x20),result4,result3);\n    temp4 = FUN_080082d0((int)temp4,(int)((ulonglong)temp4 >> 0x20),0x9998ebc4,0x3fc99999);\n    temp4 = FUN_08008640((int)temp4,(int)((ulonglong)temp4 >> 0x20),result4,result3);\n    result4 = (undefined4)((ulonglong)temp4 >> 0x20);\n    if (condition == -1) {\n      temp3 = FUN_080082d4((int)temp3,result1,(int)temp4,result4);\n      temp3 = FUN_08008640((int)temp3,(int)((ulonglong)temp3 >> 0x20),temp1,localVar);\n      condition = FUN_080082d0(temp1,localVar,(int)temp3,(int)((ulonglong)temp3 >> 0x20));\n      return condition;\n    }\n    temp3 = FUN_080082d4((int)temp3,result1,(int)temp4,result4);\n    temp3 = FUN_08008640((int)temp3,(int)((ulonglong)temp3 >> 0x20),temp1,localVar);\n    temp3 = FUN_080082d0((int)temp3,(int)((ulonglong)temp3 >> 0x20),\n                         *(undefined4 *)(&UNK_0800c090 + condition * 8),\n                         *(undefined4 *)(&UNK_0800c094 + condition * 8));\n    temp3 = FUN_080082d0((int)temp3,(int)((ulonglong)temp3 >> 0x20),temp1,localVar);\n    condition = FUN_080082d0(*(undefined4 *)(&UNK_0800c070 + condition * 8),\n                         *(undefined4 *)(&UNK_0800c074 + condition * 8),(int)temp3,\n                         (int)((ulonglong)temp3 >> 0x20));\n    if ((int)value2 < 0) {\n      return condition;\n    }\n  }\n  else {\n    if ((0x7ff00000 < temp2) || ((temp2 == 0x7ff00000 && (value1 != 0)))) {\n      condition = FUN_080082d4(value1,value2,value1);\n      return condition;\n    }\n    condition = 0x54442d18;\n  }\n  return condition;\n}\n\n",
            "renaming": {
                "FUN_0800af78": "calculate_result_0800af78",
                "param_1": "value1",
                "param_2": "value2",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "result3",
                "uVar4": "result4",
                "iVar5": "condition",
                "uVar6": "temp1",
                "uVar7": "temp2",
                "uVar8": "temp3",
                "uVar9": "temp4",
                "local_2c": "localVar"
            },
            "calling": [
                "FUN_08009990"
            ],
            "called": [
                "FUN_080082d0",
                "FUN_0800b2cc",
                "FUN_08008b60",
                "FUN_08008894",
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b2cc": {
            "entrypoint": "0x0800b2cc",
            "current_name": "FUNC_0800b2cc",
            "code": "\nvoid FUNC_0800b2cc(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b2cc": "FUNC_0800b2cc"
            },
            "calling": [
                "FUN_08009d78",
                "FUN_0800af78",
                "FUN_08009990"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b2d4": {
            "entrypoint": "0x0800b2d4",
            "current_name": "get_most_significant_bit_0800b2d4",
            "code": "\nuint getMostSignificantBit_0800b2d4(undefined4 inputFlag,uint inputValue)\n\n{\n  return (inputValue | 0x80000000) + 0x100000 >> 0x1f;\n}\n\n",
            "renaming": {
                "FUN_0800b2d4": "get_most_significant_bit_0800b2d4",
                "param_1": "inputFlag",
                "param_2": "inputValue"
            },
            "calling": [
                "FUN_0800981c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b2e0": {
            "entrypoint": "0x0800b2e0",
            "current_name": "empty_function_0800b2e0",
            "code": "\nundefined4 emptyFunction_0800b2e0(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800b2e0": "empty_function_0800b2e0"
            },
            "calling": [
                "FUN_080098d0",
                "FUN_0800981c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b2e8": {
            "entrypoint": "0x0800b2e8",
            "current_name": "calculate_result_0800b2e8",
            "code": "\nuint calculateResult_0800b2e8(uint input1,uint input2,int offset,undefined4 value)\n\n{\n  uint shiftedInput2;\n  int newOffset;\n  uint highBitsInput2;\n  undefined8 combinedInput;\n  \n  combinedInput = combineInputs(input2,input1);\n  shiftedInput2 = (input2 << 1) >> 0x15;\n  if (shiftedInput2 == 0) {\n    if ((input1 | input2 & 0x7fffffff) == 0) {\n      return input1;\n    }\n    combinedInput = FUN_08008640(input1,input2,0,0x43500000);\n    if (offset < -50000) goto LAB_0800b34a;\n    shiftedInput2 = ((uint)((int)((ulonglong)combinedInput >> 0x20) << 1) >> 0x15) - 0x36;\n  }\n  else if (shiftedInput2 == 0x7ff) {\n    shiftedInput2 = FUN_080082d4(input1,input2,input1,input2,value);\n    return shiftedInput2;\n  }\n  highBitsInput2 = (uint)((ulonglong)combinedInput >> 0x20);\n  newOffset = shiftedInput2 + offset;\n  if (newOffset < 0x7ff) {\n    if (0 < newOffset) {\n      return (uint)combinedInput;\n    }\n    if (newOffset + 0x35 < 0 == subtractWithCarry(newOffset,0x35)) {\n      shiftedInput2 = FUN_08008640((uint)combinedInput,highBitsInput2 & 0x800fffff | (newOffset + 0x36) * 0x100000,0,0x3c900000);\n      return shiftedInput2;\n    }\n    if (offset < 0xc351) {\n      combinedInput = combineInputs(highBitsInput2 & 0x80000000 | 0x1a56e1f,0xc2f8f359);\nLAB_0800b34a:\n      shiftedInput2 = FUN_08008640((int)combinedInput,(int)((ulonglong)combinedInput >> 0x20),0xc2f8f359,0x1a56e1f);\n      return shiftedInput2;\n    }\n  }\n  shiftedInput2 = FUN_08008640(0x8800759c,highBitsInput2 & 0x80000000 | 0x7e37e43c,0x8800759c,0x7e37e43c);\n  return shiftedInput2;\n}\n\n",
            "renaming": {
                "FUN_0800b2e8": "calculate_result_0800b2e8",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "offset",
                "param_4": "value",
                "uVar1": "shiftedInput2",
                "iVar2": "newOffset",
                "uVar3": "highBitsInput2",
                "uVar4": "combinedInput",
                "SCARRY4": "subtractWithCarry",
                "CONCAT44": "combineInputs"
            },
            "calling": [
                "FUN_0800a5a0"
            ],
            "called": [
                "FUN_08008640",
                "FUN_080082d4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b3dc": {
            "entrypoint": "0x0800b3dc",
            "current_name": "get_global_data_0800b3dc",
            "code": "\nundefined4 getGlobalData_0800b3dc(void)\n\n{\n  return DAT_20000018;\n}\n\n",
            "renaming": {
                "FUN_0800b3dc": "get_global_data_0800b3dc"
            },
            "calling": [
                "FUN_080098d0",
                "FUN_0800981c"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b3e8": {
            "entrypoint": "0x0800b3e8",
            "current_name": "execute_function_0800b3e8",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800b3f4) */\n/* WARNING: Removing unreachable block (ram,0x0800b3f6) */\n\nvoid executeFunction_0800b3e8(void)\n\n{\n  int loopCounter;\n  code **functionArray;\n  \n  FUNC_0800b5b0();\n  loopCounter = 0;\n  functionArray = (code **)&DAT_0800c0b4;\n  do {\n    loopCounter = loopCounter + 1;\n    (**functionArray)();\n    functionArray = functionArray + 1;\n  } while (loopCounter != 2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b3e8": "execute_function_0800b3e8",
                "iVar1": "loopCounter",
                "ppcVar2": "functionArray"
            },
            "calling": [
                "entry"
            ],
            "called": [
                "FUN_0800b5b0",
                "FUN_0800b4d0",
                "FUN_080001ac"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b430": {
            "entrypoint": "0x0800b430",
            "current_name": "memset_char_array_0800b430",
            "code": "\nvoid memset_char_array_0800b430(undefined4 *array,undefined value,uint size)\n\n{\n  undefined4 *ptr;\n  undefined4 *ptr2;\n  uint remaining;\n  undefined4 concat_value;\n  bool is_zero;\n  \n  if (((uint)array & 3) != 0) {\n    remaining = size - 1;\n    ptr = array;\n    if (size == 0) {\n      return;\n    }\n    while( true ) {\n      array = (undefined4 *)((int)ptr + 1);\n      *(undefined *)ptr = value;\n      size = remaining;\n      if (((uint)array & 3) == 0) break;\n      is_zero = remaining == 0;\n      remaining = remaining - 1;\n      ptr = array;\n      if (is_zero) {\n        return;\n      }\n    }\n  }\n  if (3 < size) {\n    concat_value = CONCAT22(CONCAT11(value,value),CONCAT11(value,value));\n    if (0xf < size) {\n      ptr = array + 4;\n      do {\n        ptr[-4] = concat_value;\n        ptr[-3] = concat_value;\n        ptr[-2] = concat_value;\n        ptr[-1] = concat_value;\n        ptr = ptr + 4;\n      } while (ptr != (undefined4 *)((int)array + (size - 0x10 & 0xfffffff0) + 0x20));\n      remaining = size & 0xc;\n      array = array + ((size - 0x10 >> 4) + 1) * 4;\n      size = size & 0xf;\n      if (remaining == 0) goto joined_r0x0800b4a8;\n    }\n    ptr = (undefined4 *)((size - 4 & 0xfffffffc) + 4 + (int)array);\n    do {\n      ptr2 = array + 1;\n      *array = concat_value;\n      array = ptr2;\n    } while (ptr != ptr2);\n    size = size & 3;\n    array = ptr;\n  }\njoined_r0x0800b4a8:\n  if (size != 0) {\n    ptr = array;\n    do {\n      ptr2 = (undefined4 *)((int)ptr + 1);\n      *(undefined *)ptr = value;\n      ptr = ptr2;\n    } while ((undefined4 *)(size + (int)array) != ptr2);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b430": "memset_char_array_0800b430",
                "param_1": "array",
                "param_2": "value",
                "param_3": "size",
                "puVar1": "ptr",
                "puVar2": "ptr2",
                "uVar3": "remaining",
                "uVar4": "concat_value",
                "bVar5": "is_zero"
            },
            "calling": [
                "FUN_08005814",
                "FUN_08004d7c",
                "FUN_080004ac",
                "FUN_080005b4",
                "FUN_08002f24",
                "FUN_08001994",
                "FUN_080002f0",
                "FUN_08001ddc",
                "FUN_080079c0",
                "FUN_080024c4"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b4d0": {
            "entrypoint": "0x0800b4d0",
            "current_name": "FUNC_0800b4d0",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800b4d4) */\n\nvoid FUNC_0800b4d0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b4d0": "FUNC_0800b4d0"
            },
            "calling": [
                "FUN_0800b3e8"
            ],
            "called": [
                "FUN_0800b524"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b51c": {
            "entrypoint": "0x0800b51c",
            "current_name": "FUNC_0800b51c",
            "code": "\nvoid FUNC_0800b51c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b51c": "FUNC_0800b51c"
            },
            "calling": [
                "FUN_0800b524"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b520": {
            "entrypoint": "0x0800b520",
            "current_name": "FUNC_0800b520",
            "code": "\nvoid FUNC_0800b520(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b520": "FUNC_0800b520"
            },
            "calling": [
                "FUN_0800b524"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b524": {
            "entrypoint": "0x0800b524",
            "current_name": "update_data_0800b524",
            "code": "\nundefined4 updateData_0800b524(int flag,undefined4 value,undefined4 type,undefined4 data)\n\n{\n  undefined *dataPointer;\n  undefined4 returnValue;\n  uint bitMask;\n  uint dataSize;\n  \n  FUNC_0800b51c(DAT_20000448);\n  if (DAT_20000168 == (undefined *)0x0) {\n    DAT_20000168 = &DAT_2000016c;\n  }\n  dataPointer = DAT_20000168;\n  dataSize = *(uint *)(DAT_20000168 + 4);\n  if ((int)dataSize < 0x20) {\n    if (flag != 0) {\n      *(undefined4 *)(DAT_20000168 + dataSize * 4 + 0x88) = type;\n      bitMask = 1 << (dataSize & 0xff);\n      *(uint *)(dataPointer + 0x188) = *(uint *)(dataPointer + 0x188) | bitMask;\n      *(undefined4 *)(dataPointer + dataSize * 4 + 0x108) = data;\n      if (flag == 2) {\n        *(uint *)(dataPointer + 0x18c) = bitMask | *(uint *)(dataPointer + 0x18c);\n      }\n    }\n    returnValue = DAT_20000448;\n    *(uint *)(dataPointer + 4) = dataSize + 1;\n    *(undefined4 *)(dataPointer + (dataSize + 2) * 4) = value;\n    FUNC_0800b520(returnValue);\n    returnValue = 0;\n  }\n  else {\n    FUNC_0800b520(DAT_20000448);\n    returnValue = 0xffffffff;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_0800b524": "update_data_0800b524",
                "param_1": "flag",
                "param_2": "value",
                "param_3": "type",
                "param_4": "data",
                "puVar1": "dataPointer",
                "uVar2": "returnValue",
                "uVar3": "bitMask",
                "uVar4": "dataSize"
            },
            "calling": [
                "FUN_0800b4d0"
            ],
            "called": [
                "FUN_0800b51c",
                "FUN_0800b520"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b5b0": {
            "entrypoint": "0x0800b5b0",
            "current_name": "FUNC_0800b5b0",
            "code": "\nvoid FUNC_0800b5b0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b5b0": "FUNC_0800b5b0"
            },
            "calling": [
                "FUN_08000188",
                "FUN_080001ac",
                "FUN_0800b3e8"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b5bc": {
            "entrypoint": "0x0800b5bc",
            "current_name": "FUNC_0800b5bc",
            "code": "\nvoid FUNC_0800b5bc(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b5bc": "FUNC_0800b5bc"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        }
    },
    "used_tokens": 206335,
    "layers": [
        [
            "FUN_08000188",
            "FUN_080001ac",
            "FUN_080001f8",
            "FUN_08000210",
            "FUN_08000220",
            "FUN_08000268",
            "FUN_080002a0",
            "FUN_080002b6",
            "FUN_080002f0",
            "FUN_08000310",
            "FUN_08000340",
            "FUN_08000374",
            "FUN_080003ec",
            "FUN_08000478",
            "FUN_080004ac",
            "FUN_080004fc",
            "FUN_0800056c",
            "FUN_080005b4",
            "FUN_0800184c",
            "FUN_080018cc",
            "FUN_080018fc",
            "FUN_0800192c",
            "FUN_0800195c",
            "FUN_08001994",
            "FUN_08001d4c",
            "FUN_08001ddc",
            "FUN_08001e98",
            "FUN_08001f00",
            "FUN_08002408",
            "FUN_080024c4",
            "FUN_080025e8",
            "FUN_08002638",
            "FUN_0800283a",
            "FUN_08002870",
            "FUN_08002896",
            "FUN_080028bc",
            "FUN_08002908",
            "FUN_08002978",
            "FUN_080029d8",
            "FUN_08002a94",
            "FUN_08002afc",
            "FUN_08002ba8",
            "FUN_08002c18",
            "FUN_08002e08",
            "FUN_08002edc",
            "FUN_08002ef0",
            "FUN_08002f24",
            "FUN_08002f40",
            "FUN_08002f74",
            "FUN_08002fac",
            "FUN_08002fd4",
            "FUN_08003004",
            "FUN_080035ec",
            "FUN_08003618",
            "FUN_0800369c",
            "FUN_080036c6",
            "FUN_080036f0",
            "FUN_08003740",
            "FUN_0800375c",
            "FUN_08003778",
            "FUN_080037fc",
            "FUN_08003826",
            "FUN_08003980",
            "FUN_080039a0",
            "FUN_080039bc",
            "FUN_08003a18",
            "FUN_08003a74",
            "FUN_08003b98",
            "FUN_08003f34",
            "FUN_08004030",
            "FUN_08004148",
            "FUN_080041a0",
            "FUN_08004228",
            "FUN_0800423c",
            "FUN_08004250",
            "FUN_080044e8",
            "FUN_080046d0",
            "FUN_08004900",
            "FUN_08004940",
            "FUN_08004bc0",
            "FUN_08004bf4",
            "FUN_08004c2a",
            "FUN_08004c48",
            "FUN_08004d2c",
            "FUN_08004d7c",
            "FUN_08004dd2",
            "FUN_08004e30",
            "FUN_080051b4",
            "FUN_08005238",
            "FUN_08005250",
            "FUN_0800525c",
            "FUN_080052ac",
            "FUN_080052dc",
            "FUN_08005324",
            "FUN_08005360",
            "FUN_080053a0",
            "FUN_08005760",
            "FUN_08005778",
            "FUN_08005790",
            "FUN_080057e4",
            "FUN_08005814",
            "FUN_0800583c",
            "FUN_0800585c",
            "FUN_0800587c",
            "FUN_080058a0",
            "FUN_08005900",
            "FUN_0800597c",
            "FUN_08005984",
            "FUN_080059b4",
            "FUN_080059f8",
            "FUN_08005a68",
            "FUN_08005a84",
            "FUN_08005a98",
            "FUN_08005bdc",
            "FUN_08005c30",
            "FUN_08005cec",
            "FUN_0800618c",
            "FUN_0800640c",
            "FUN_080064ec",
            "FUN_08006628",
            "FUN_08006680",
            "FUN_080066cc",
            "FUN_08006950",
            "FUN_08006998",
            "FUN_080069b4",
            "FUN_080069e4",
            "FUN_08006a18",
            "FUN_08006a58",
            "FUN_08006a8c",
            "FUN_08006ac0",
            "FUN_08006b00",
            "FUN_08006b54",
            "FUN_08006ba0",
            "FUN_08006c04",
            "FUN_08006c70",
            "FUN_08006c9c",
            "FUN_08006ce0",
            "FUN_08006cf6",
            "FUN_08006d2e",
            "FUN_08006d4a",
            "FUN_08006d66",
            "FUN_08006d72",
            "FUN_08006d8a",
            "FUN_08006d98",
            "FUN_08006dc4",
            "FUN_08006de0",
            "FUN_08006dfe",
            "FUN_08006e1a",
            "FUN_08006e88",
            "FUN_0800733e",
            "FUN_0800738e",
            "FUN_080073d4",
            "FUN_08007402",
            "FUN_08007430",
            "FUN_08007436",
            "FUN_080074c8",
            "FUN_08007520",
            "FUN_08007540",
            "FUN_0800756c",
            "FUN_080076c8",
            "FUN_08007756",
            "FUN_0800778c",
            "FUN_08007854",
            "FUN_08007884",
            "FUN_080078f4",
            "FUN_08007930",
            "FUN_080079c0",
            "FUN_080079e0",
            "FUN_08007a10",
            "FUN_08007a70",
            "FUN_08007ad0",
            "FUN_08007b70",
            "FUN_08007bc2",
            "FUN_08007bf0",
            "FUN_08007c40",
            "FUN_08007c5e",
            "FUN_08007c7c",
            "FUN_08007d08",
            "FUN_08007da8",
            "FUN_08007e08",
            "FUN_08007e1c",
            "FUN_08007e58",
            "FUN_08007e84",
            "FUN_08007ea4",
            "FUN_08007f54",
            "FUN_08008190",
            "FUN_08008250",
            "FUN_0800826a",
            "FUN_08008286",
            "FUN_080082d0",
            "FUN_080082d4",
            "FUN_0800854c",
            "FUN_0800856c",
            "FUN_08008590",
            "FUN_08008640",
            "FUN_0800881c",
            "FUN_08008894",
            "FUN_08008a02",
            "FUN_08008a74",
            "FUN_08008af0",
            "FUN_08008b00",
            "FUN_08008b10",
            "FUN_08008b24",
            "FUN_08008b4c",
            "FUN_08008b60",
            "FUN_08008b74",
            "FUN_08008ba0",
            "FUN_08008bf0",
            "FUN_08008c30",
            "FUN_08008cd8",
            "FUN_08008cdc",
            "FUN_08008e3c",
            "FUN_08008e44",
            "FUN_08008eec",
            "FUN_08009054",
            "FUN_0800919c",
            "FUN_080091fc",
            "FUN_08009204",
            "FUN_08009214",
            "FUN_08009228",
            "FUN_0800923c",
            "FUN_08009250",
            "FUN_08009264",
            "FUN_08009278",
            "FUN_08009318",
            "FUN_08009410",
            "FUN_080094c0",
            "FUN_080095b8",
            "FUN_08009654",
            "FUN_080096e8",
            "FUN_08009798",
            "thunk_FUN_08009990",
            "FUN_0800981c",
            "FUN_080098d0",
            "FUN_08009990",
            "FUN_08009b24",
            "FUN_08009d78",
            "FUN_0800a1bc",
            "FUN_0800a348",
            "FUN_0800a5a0",
            "FUN_0800adf0",
            "FUN_0800af78",
            "FUN_0800b2d4",
            "FUN_0800b2e0",
            "FUN_0800b2e8",
            "FUN_0800b3dc",
            "FUN_0800b3e8",
            "FUN_0800b430",
            "FUN_0800b524"
        ]
    ],
    "locked_functions": []
}