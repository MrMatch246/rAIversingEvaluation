{
    "functions": {
        "FUN_08000188": {
            "entrypoint": "0x08000188",
            "current_name": "initialize_data_if_empty_08000188",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08000194) */\n\nundefined4 initializeDataIfEmpty_08000188(undefined4 input_parameter)\n\n{\n  if ((char)DAT_2000044c == '\\0') {\n    DAT_2000044c._0_1_ = '\\x01';\n  }\n  return input_parameter;\n}\n\n",
            "renaming": {
                "FUN_08000188": "initialize_data_if_empty_08000188",
                "param_1": "input_parameter"
            },
            "calling": [],
            "called": [
                "_init"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080001ac": {
            "entrypoint": "0x080001ac",
            "current_name": "concatenate_arguments_080001ac",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x080001b2) */\n\nundefined8 concatenate_arguments_080001ac(undefined4 first_argument,undefined4 second_argument)\n\n{\n  return CONCAT44(second_argument,first_argument);\n}\n\n",
            "renaming": {
                "FUN_080001ac": "concatenate_arguments_080001ac",
                "param_1": "first_argument",
                "param_2": "second_argument"
            },
            "calling": [
                "__libc_init_array"
            ],
            "called": [
                "_init"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080001c8": {
            "entrypoint": "0x080001c8",
            "current_name": "FUNC_080001c8",
            "code": "\nvoid FUNC_080001c8(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001c8": "FUNC_080001c8"
            },
            "calling": [
                "coolant_run"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080001d4": {
            "entrypoint": "0x080001d4",
            "current_name": "FUNC_080001d4",
            "code": "\nvoid FUNC_080001d4(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001d4": "FUNC_080001d4"
            },
            "calling": [
                "coolant_stop"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080001e0": {
            "entrypoint": "0x080001e0",
            "current_name": "FUNC_080001e0",
            "code": "\nvoid FUNC_080001e0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001e0": "FUNC_080001e0"
            },
            "calling": [
                "coolant_run"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080001ec": {
            "entrypoint": "0x080001ec",
            "current_name": "FUNC_080001ec",
            "code": "\nvoid FUNC_080001ec(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001ec": "FUNC_080001ec"
            },
            "calling": [
                "coolant_stop"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080001f8": {
            "entrypoint": "0x080001f8",
            "current_name": "stop_coolant_system_080001f8",
            "code": "\nvoid stop_coolant_system_080001f8(void)\n\n{\n  DAT_20000468 = 0;\n  coolant_stop();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080001f8": "stop_coolant_system_080001f8"
            },
            "calling": [
                "grbl_main"
            ],
            "called": [
                "coolant_stop"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000210": {
            "entrypoint": "0x08000210",
            "current_name": "turn_off_coolant_08000210",
            "code": "\nvoid turnOffCoolant_08000210(void)\n\n{\n  turnOffCoolant_08000210Mist();\n  turnOffCoolant_08000210Flood();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000210": "turn_off_coolant_08000210",
                "coolant_mist_off": "turnOffCoolantMist",
                "coolant_flood_off": "turnOffCoolantFlood"
            },
            "calling": [
                "mc_reset",
                "coolant_run",
                "coolant_init"
            ],
            "called": [
                "coolant_flood_off",
                "coolant_mist_off"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000220": {
            "entrypoint": "0x08000220",
            "current_name": "synchronize_coolant_system_08000220",
            "code": "\nvoid synchronize_coolant_system_08000220(char coolant_status)\n\n{\n  if (coolant_status != DAT_20000468) {\n    plan_synchronize();\n    if (coolant_status == '\\x01') {\n      coolant_flood_on();\n      DAT_20000468 = coolant_status;\n    }\n    else if (coolant_status == '\\x02') {\n      coolant_mist_on();\n      DAT_20000468 = coolant_status;\n    }\n    else {\n      coolant_stop();\n      DAT_20000468 = coolant_status;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000220": "synchronize_coolant_system_08000220",
                "param_1": "coolant_status"
            },
            "calling": [
                "gc_execute_line"
            ],
            "called": [
                "coolant_stop",
                "coolant_flood_on",
                "coolant_mist_on",
                "plan_synchronize"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000268": {
            "entrypoint": "0x08000268",
            "current_name": "calculate_elapsed_time_08000268",
            "code": "\n\n\nint calculateElapsedTime_08000268(void)\n\n{\n  int currentTick;\n  \n  currentTick = getCurrentTick();\n  return (currentTick + 1) * 1000 - _DAT_e000e018 / 0xa8;\n}\n\n",
            "renaming": {
                "FUN_08000268": "calculate_elapsed_time_08000268",
                "HAL_GetTick": "getCurrentTick",
                "iVar1": "currentTick"
            },
            "calling": [
                "_delay_us"
            ],
            "called": [
                "HAL_GetTick"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080002a0": {
            "entrypoint": "0x080002a0",
            "current_name": "delay_function_080002a0",
            "code": "\nvoid delayFunction_080002a0(undefined4 delayTime)\n\n{\n  HAL_Delay(delayTime);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080002a0": "delay_function_080002a0",
                "param_1": "delayTime"
            },
            "calling": [
                "mc_dwell"
            ],
            "called": [
                "HAL_Delay"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080002b6": {
            "entrypoint": "0x080002b6",
            "current_name": "delay_execution_080002b6",
            "code": "\nvoid delayExecution_080002b6(uint delayTime)\n\n{\n  uint currentMilliseconds;\n  uint targetMilliseconds;\n  bool isDelayComplete;\n  longlong currentMicroseconds;\n  undefined8 currentTime;\n  \n  currentMicroseconds = get_current_usecs();\n  targetMilliseconds = (uint)(currentMicroseconds + (ulonglong)delayTime >> 0x20);\n  do {\n    currentTime = get_current_usecs();\n    currentMilliseconds = (uint)((ulonglong)currentTime >> 0x20);\n    isDelayComplete = targetMilliseconds <= currentMilliseconds;\n    if (currentMilliseconds == targetMilliseconds) {\n      isDelayComplete = (uint)(currentMicroseconds + (ulonglong)delayTime) <= (uint)currentTime;\n    }\n  } while (!isDelayComplete);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080002b6": "delay_execution_080002b6",
                "param_1": "delayTime",
                "uVar1": "currentMilliseconds",
                "uVar2": "targetMilliseconds",
                "bVar3": "isDelayComplete",
                "lVar4": "currentMicroseconds",
                "uVar5": "currentTime"
            },
            "calling": [],
            "called": [
                "get_current_usecs"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080002f0": {
            "entrypoint": "0x080002f0",
            "current_name": "initialize_data_080002f0",
            "code": "\nvoid initialize_data_080002f0(void)\n\n{\n  memset(&DAT_20000470,0xff,4);\n  DAT_2000046c = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080002f0": "initialize_data_080002f0"
            },
            "calling": [
                "eeprom_get_char",
                "eeprom_put_char",
                "memcpy_to_eeprom_with_checksum",
                "memcpy_from_eeprom_with_checksum"
            ],
            "called": [
                "memset"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000310": {
            "entrypoint": "0x08000310",
            "current_name": "get_eeprom_data_08000310",
            "code": "\nundefined getEepromData_08000310(uint index)\n\n{\n  if (DAT_2000046c == 0) {\n    eeprom_init();\n  }\n  return (&DAT_20000470)[index & 0x3ff];\n}\n\n",
            "renaming": {
                "FUN_08000310": "get_eeprom_data_08000310",
                "param_1": "index"
            },
            "calling": [
                "memcpy_from_eeprom_with_checksum",
                "read_global_settings"
            ],
            "called": [
                "eeprom_init"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000340": {
            "entrypoint": "0x08000340",
            "current_name": "store_parameter_value_08000340",
            "code": "\nvoid storeParameterValue_08000340(uint parameterIndex,undefined parameterValue)\n\n{\n  if (DAT_2000046c == 0) {\n    initializeEEPROM();\n  }\n  (&DAT_20000470)[parameterIndex & 0x3ff] = parameterValue;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000340": "store_parameter_value_08000340",
                "param_1": "parameterIndex",
                "param_2": "parameterValue",
                "eeprom_init": "initializeEEPROM"
            },
            "calling": [
                "write_global_settings",
                "memcpy_to_eeprom_with_checksum"
            ],
            "called": [
                "eeprom_init"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000374": {
            "entrypoint": "0x08000374",
            "current_name": "calculate_checksum_08000374",
            "code": "\nvoid calculate_checksum_08000374(int data_offset,char *data,int data_length)\n\n{\n  int length;\n  char *current_byte;\n  int current_address;\n  char checksum;\n  \n  checksum = '\\0';\n  length = data_length;\n  current_byte = data;\n  current_address = data_offset;\n  if (DAT_2000046c == 0) {\n    eeprom_init();\n    current_byte = data;\n    current_address = data_offset;\n  }\n  for (; length != 0; length = length + -1) {\n    checksum = (checksum != '\\0') + *current_byte;\n    eeprom_put_char(current_address,*current_byte);\n    current_byte = current_byte + 1;\n    current_address = current_address + 1;\n  }\n  eeprom_put_char(current_address,checksum);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000374": "calculate_checksum_08000374",
                "param_1": "data_offset",
                "param_2": "data",
                "param_3": "data_length",
                "local_1c": "length",
                "local_18": "current_byte",
                "local_14": "current_address",
                "local_9": "checksum"
            },
            "calling": [
                "settings_store_startup_line",
                "write_global_settings",
                "settings_write_coord_data"
            ],
            "called": [
                "eeprom_init",
                "eeprom_put_char"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080003ec": {
            "entrypoint": "0x080003ec",
            "current_name": "verify_eeprom_data_080003ec",
            "code": "\nbool verify_eeprom_data_080003ec(char *data,int start_index,int length)\n\n{\n  char current_char;\n  uint expected_checksum;\n  int remaining_length;\n  int current_index;\n  char *current_data;\n  byte checksum;\n  \n  checksum = 0;\n  remaining_length = length;\n  current_index = start_index;\n  current_data = data;\n  if (DAT_2000046c == 0) {\n    eeprom_init();\n    current_index = start_index;\n    current_data = data;\n  }\n  for (; remaining_length != 0; remaining_length = remaining_length + -1) {\n    current_char = eeprom_get_char(current_index);\n    checksum = current_char + (checksum != 0);\n    *current_data = current_char;\n    current_index = current_index + 1;\n    current_data = current_data + 1;\n  }\n  expected_checksum = eeprom_get_char(current_index);\n  return checksum == expected_checksum;\n}\n\n",
            "renaming": {
                "FUN_080003ec": "verify_eeprom_data_080003ec",
                "param_1": "data",
                "param_2": "start_index",
                "param_3": "length",
                "local_1c": "remaining_length",
                "local_18": "current_index",
                "local_14": "current_data",
                "local_9": "checksum",
                "cVar1": "current_char",
                "uVar2": "expected_checksum"
            },
            "calling": [
                "settings_read_coord_data",
                "settings_read_startup_line",
                "read_global_settings"
            ],
            "called": [
                "eeprom_init",
                "eeprom_get_char"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08000478": {
            "entrypoint": "0x08000478",
            "current_name": "initialize_parameters_08000478",
            "code": "\nvoid initializeParameters_08000478(undefined parameter1,undefined parameter2,undefined parameter3)\n\n{\n  DAT_20000e89 = parameter1;\n  DAT_20000e8a = parameter2;\n  DAT_20000e8b = parameter3;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08000478": "initialize_parameters_08000478",
                "param_1": "parameter1",
                "param_2": "parameter2",
                "param_3": "parameter3"
            },
            "calling": [
                "gc_execute_line",
                "gc_init"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080004ac": {
            "entrypoint": "0x080004ac",
            "current_name": "initialize_graphics_080004ac",
            "code": "\nvoid initializeGraphics_080004ac(void)\n\n{\n  int result;\n  \n  memset(&DAT_20000e70,0,0x38);\n  DAT_20000e78 = DAT_20000ecc;\n  select_plane(0,1,2);\n  DAT_20000e74 = 1;\n  result = settings_read_coord_data(DAT_20000e8c,&DAT_20000e90);\n  if (result == 0) {\n    report_status_message(10);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080004ac": "initialize_graphics_080004ac",
                "iVar1": "result"
            },
            "calling": [
                "grbl_main"
            ],
            "called": [
                "select_plane",
                "settings_read_coord_data",
                "report_status_message",
                "memset"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080004fc": {
            "entrypoint": "0x080004fc",
            "current_name": "calculate_float_divisions_080004fc",
            "code": "\nvoid calculateFloatDivisions_080004fc(undefined4 input1,undefined4 input2,undefined4 input3)\n\n{\n  undefined4 convertedValue;\n  \n  convertedValue = __floatsisf(input1);\n  DAT_20000e7c = __aeabi_fdiv(convertedValue,DAT_20000ebc);\n  convertedValue = __floatsisf(input2);\n  DAT_20000e80 = __aeabi_fdiv(convertedValue,DAT_20000ec0);\n  convertedValue = __floatsisf(input3);\n  DAT_20000e84 = __aeabi_fdiv(convertedValue,DAT_20000ec4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080004fc": "calculate_float_divisions_080004fc",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "uVar1": "convertedValue"
            },
            "calling": [
                "sys_sync_current_position"
            ],
            "called": [
                "__floatsisf",
                "__aeabi_fdiv"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800056c": {
            "entrypoint": "0x0800056c",
            "current_name": "convert_to_float_0800056c",
            "code": "\nundefined4 convertToFloat_0800056c(undefined4 input)\n\n{\n  undefined8 convertedValue;\n  \n  if (DAT_20000e73 != '\\0') {\n    convertedValue = __aeabi_f2d(input);\n    convertedValue = __muldf3((int)convertedValue,(int)((ulonglong)convertedValue >> 0x20),0x66666666,0x40396666);\n    input = __truncdfsf2((int)convertedValue,(int)((ulonglong)convertedValue >> 0x20));\n  }\n  return input;\n}\n\n",
            "renaming": {
                "FUN_0800056c": "convert_to_float_0800056c",
                "param_1": "input",
                "uVar1": "convertedValue"
            },
            "calling": [
                "gc_execute_line"
            ],
            "called": [
                "__aeabi_f2d",
                "__truncdfsf2",
                "__muldf3"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080005b4": {
            "entrypoint": "0x080005b4",
            "current_name": "decode_function_080005b4",
            "code": "\nchar decode_function_080005b4(undefined4 input_data)\n\n{\n  int returnValue;\n  undefined4 tempVar1;\n  char result;\n  uint tempVar2;\n  undefined4 tempVar3;\n  undefined8 tempVar4;\n  undefined8 tempVar5;\n  undefined8 tempVar6;\n  undefined4 array1 [4];\n  undefined4 localVar1;\n  undefined4 localVar2;\n  undefined4 localVar3;\n  undefined4 localVar4;\n  undefined4 localVar5;\n  undefined4 array2 [6];\n  undefined4 tempVar7;\n  byte tempVar8;\n  undefined localVar6;\n  undefined4 localVar7;\n  undefined4 localVar8;\n  undefined localVar9;\n  uint localVar10;\n  byte localVar11;\n  byte localVar12;\n  byte localVar13;\n  byte localVar14;\n  char localVar15;\n  uint localVar16;\n  undefined4 localVar17;\n  sbyte localVar18;\n  char localVar19;\n  char localVar20;\n  undefined4 localVar21;\n  byte localVar22;\n  ushort localVar23;\n  uint localVar24;\n  \n  if (DAT_20000ea9 == '\\x06') {\n    result = '\\f';\n  }\n  else {\n    localVar6 = 0;\n    localVar23 = 0;\n    localVar22 = 0;\n    localVar21 = 0xbf800000;\n    localVar20 = '\\0';\n    localVar19 = '\\0';\n    memset(array2 + 3,0,0xc);\n    memset(array2,0,0xc);\n    DAT_20000e70 = '\\0';\n    localVar18 = 0;\n    while (returnValue = next_statement(&tempVar8,array2 + 6,input_data,&localVar6), returnValue != 0) {\n      tempVar4 = __aeabi_f2d(tempVar7);\n      tempVar4 = trunc((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20));\n      localVar24 = __aeabi_d2iz((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20));\n      if (tempVar8 == 0x47) {\n        switch(localVar24) {\n        case 0:\n        case 1:\n        case 2:\n        case 3:\n        case 0x50:\n          localVar18 = 2;\n          break;\n        case 4:\n        case 10:\n        case 0x1c:\n        case 0x1e:\n        case 0x35:\n        case 0x5c:\n          localVar18 = 1;\n          break;\n        case 0x11:\n        case 0x12:\n        case 0x13:\n          localVar18 = 3;\n          break;\n        case 0x14:\n        case 0x15:\n          localVar18 = 7;\n          break;\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n          localVar18 = 9;\n          break;\n        case 0x5a:\n        case 0x5b:\n          localVar18 = 4;\n          break;\n        case 0x5d:\n        case 0x5e:\n          localVar18 = 6;\n        }\n        switch(localVar24) {\n        case 0:\n          DAT_20000e71 = '\\0';\n          break;\n        case 1:\n          DAT_20000e71 = '\\x01';\n          break;\n        case 2:\n          DAT_20000e71 = '\\x02';\n          break;\n        case 3:\n          DAT_20000e71 = '\\x03';\n          break;\n        case 4:\n          localVar19 = '\\x01';\n          break;\n        default:\n          DAT_20000e70 = '\\x03';\n          break;\n        case 10:\n          localVar19 = '\\x02';\n          break;\n        case 0x11:\n          select_plane(0,1,2);\n          break;\n        case 0x12:\n          select_plane(2,0,1);\n          break;\n        case 0x13:\n          select_plane(1,2,0);\n          break;\n        case 0x14:\n          DAT_20000e73 = 1;\n          break;\n        case 0x15:\n          DAT_20000e73 = 0;\n          break;\n        case 0x1c:\n        case 0x1e:\n          tempVar1 = __aeabi_fmul(tempVar7,0x41200000);\n          tempVar4 = __aeabi_f2d(tempVar1);\n          tempVar4 = trunc((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20));\n          localVar24 = __aeabi_d2iz((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20));\n          switch(localVar24) {\n          case 0x118:\n            localVar19 = '\\x03';\n            break;\n          case 0x119:\n            localVar19 = '\\x04';\n            break;\n          default:\n            DAT_20000e70 = '\\x03';\n            break;\n          case 300:\n            localVar19 = '\\x05';\n            break;\n          case 0x12d:\n            localVar19 = '\\x06';\n          }\n          break;\n        case 0x35:\n          localVar20 = '\\x01';\n          break;\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x3b:\n          DAT_20000e8c = (char)localVar24 - 0x36;\n          break;\n        case 0x50:\n          DAT_20000e71 = '\\x04';\n          break;\n        case 0x5a:\n          DAT_20000e74 = '\\x01';\n          break;\n        case 0x5b:\n          DAT_20000e74 = '\\0';\n          break;\n        case 0x5c:\n          tempVar1 = __aeabi_fmul(tempVar7,0x41200000);\n          tempVar4 = __aeabi_f2d(tempVar1);\n          tempVar4 = trunc((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20));\n          localVar24 = __aeabi_d2iz((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20));\n          if (localVar24 == 0x398) {\n            localVar19 = '\\a';\n          }\n          else if (localVar24 == 0x399) {\n            localVar19 = '\\b';\n          }\n          else {\n            DAT_20000e70 = '\\x03';\n          }\n          break;\n        case 0x5d:\n          DAT_20000e72 = '\\x01';\n          break;\n        case 0x5e:\n          DAT_20000e72 = '\\0';\n        }\n      }\n      else if (tempVar8 == 0x4d) {\n        if (localVar24 == 0x1e) {\nLAB_08000b96:\n          localVar18 = 5;\n        }\n        else if ((int)localVar24 < 0x1f) {\n          if ((int)localVar24 < 3) {\n            if (-1 < (int)localVar24) goto LAB_08000b96;\n          }\n          else if (localVar24 - 3 < 3) {\n            localVar18 = 8;\n          }\n        }\n        switch(localVar24) {\n        case 0:\n          DAT_20000e75 = '\\x01';\n          break;\n        case 1:\n          break;\n        case 2:\n        case 0x1e:\n          DAT_20000e75 = '\\x02';\n          break;\n        case 3:\n          DAT_20000e76 = '\\x01';\n          break;\n        case 4:\n          DAT_20000e76 = -1;\n          break;\n        case 5:\n          DAT_20000e76 = '\\0';\n          break;\n        default:\n          DAT_20000e70 = '\\x03';\n          break;\n        case 7:\n          DAT_20000e77 = 2;\n          break;\n        case 8:\n          DAT_20000e77 = 1;\n          break;\n        case 9:\n          DAT_20000e77 = 0;\n        }\n      }\n      if (localVar18 != 0) {\n        if (((int)(uint)localVar23 >> localVar18 & 1U) == 0) {\n          localVar23 = localVar23 | (ushort)(1 << localVar18);\n        }\n        else {\n          DAT_20000e70 = '\\x05';\n        }\n        localVar18 = 0;\n      }\n    }\n    result = DAT_20000e70;\n    if (DAT_20000e70 == '\\0') {\n      localVar17 = 0;\n      localVar16 = 0;\n      localVar15 = '\\0';\n      localVar6 = 0;\nswitchD_08000d18_caseD_47:\n      returnValue = next_statement(&tempVar8,array2 + 6,input_data,&localVar6);\n      if (returnValue != 0) {\n        switch(tempVar8) {\n        case 0x46:\n          returnValue = __aeabi_fcmple(tempVar7,0);\n          if (returnValue != 0) {\n            DAT_20000e70 = '\\x06';\n          }\n          if (DAT_20000e72 == '\\0') {\n            DAT_20000e78 = to_millimeters(tempVar7);\n          }\n          else {\n            localVar21 = to_millimeters(tempVar7);\n          }\n          break;\n        case 0x47:\n        case 0x4d:\n        case 0x4e:\n          break;\n        default:\n          DAT_20000e70 = '\\x03';\n          break;\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n          tempVar2 = (uint)tempVar8;\n          tempVar1 = to_millimeters(tempVar7);\n          array2[tempVar2 - 0x49] = tempVar1;\n          break;\n        case 0x4c:\n          tempVar4 = __aeabi_f2d(tempVar7);\n          tempVar4 = trunc((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20));\n          localVar15 = __aeabi_d2uiz((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20));\n          break;\n        case 0x50:\n          localVar17 = tempVar7;\n          break;\n        case 0x52:\n          localVar16 = to_millimeters(tempVar7);\n          break;\n        case 0x53:\n          returnValue = __aeabi_fcmplt(tempVar7,0);\n          if (returnValue != 0) {\n            DAT_20000e70 = '\\x06';\n          }\n          break;\n        case 0x54:\n          returnValue = __aeabi_fcmplt(tempVar7,0);\n          if (returnValue != 0) {\n            DAT_20000e70 = '\\x06';\n          }\n          tempVar4 = __aeabi_f2d(tempVar7);\n          tempVar4 = trunc((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20));\n          DAT_20000e88 = __aeabi_d2uiz((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20));\n          break;\n        case 0x58:\n          array2[3] = to_millimeters(tempVar7);\n          localVar22 = localVar22 | 1;\n          break;\n        case 0x59:\n          array2[4] = to_millimeters(tempVar7);\n          localVar22 = localVar22 | 2;\n          break;\n        case 0x5a:\n          array2[5] = to_millimeters(tempVar7);\n          localVar22 = localVar22 | 4;\n        }\n        goto switchD_08000d18_caseD_47;\n      }\n      result = DAT_20000e70;\n      if (DAT_20000e70 == '\\0') {\n        if (DAT_20000ea9 != '\\a') {\n          spindle_run((int)DAT_20000e76);\n          coolant_run(DAT_20000e77);\n        }\n        if ((localVar23 & 0x200) != 0) {\n          returnValue = settings_read_coord_data(DAT_20000e8c,&localVar3);\n          if (returnValue == 0) {\n            return '\\n';\n          }\n          DAT_20000e90 = localVar3;\n          DAT_20000e94 = localVar4;\n          DAT_20000e98 = localVar5;\n        }\n        switch(localVar19) {\n        case '\\x01':\n          returnValue = __aeabi_fcmplt(localVar17,0);\n          if (returnValue == 0) {\n            if (DAT_20000ea9 != '\\a') {\n              mc_dwell(localVar17);\n            }\n          }\n          else {\n            DAT_20000e70 = '\\x06';\n          }\n          break;\n        case '\\x02':\n          tempVar4 = __aeabi_f2d(localVar17);\n          tempVar4 = trunc((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20));\n          localVar24 = __aeabi_d2iz((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20));\n          if ((((localVar15 == '\\x02') || (localVar15 == '\\x14')) && (-1 < (int)localVar24)) &&\n             ((int)localVar24 < 7)) {\n            if ((localVar22 == 0) && (localVar15 == '\\x02')) {\n              DAT_20000e70 = '\\x06';\n            }\n            else {\n              if ((int)localVar24 < 1) {\n                localVar24 = (uint)DAT_20000e8c;\n              }\n              else {\n                localVar24 = localVar24 - 1;\n              }\n              returnValue = settings_read_coord_data(localVar24 & 0xff,array1);\n              if (returnValue == 0) {\n                return '\\n';\n              }\n              for (localVar14 = 0; localVar14 < 3; localVar14 = localVar14 + 1) {\n                if (((int)(uint)localVar22 >> localVar14 & 1U) != 0) {\n                  if (localVar15 == '\\x14') {\n                    tempVar2 = (uint)localVar14;\n                    tempVar1 = __aeabi_fsub(*(undefined4 *)(&DAT_20000e74 + (localVar14 + 2) * 4),\n                                         array2[localVar14 + 3]);\n                    array1[tempVar2] = tempVar1;\n                  }\n                  else {\n                    array1[localVar14] = array2[localVar14 + 3];\n                  }\n                }\n              }\n              settings_write_coord_data(localVar24 & 0xff,array1);\n              if (localVar24 == DAT_20000e8c) {\n                DAT_20000e90 = array1[0];\n                DAT_20000e94 = array1[1];\n                DAT_20000e98 = array1[2];\n              }\n            }\n          }\n          else {\n            DAT_20000e70 = '\\x03';\n          }\n          localVar22 = 0;\n          break;\n        case '\\x03':\n        case '\\x05':\n          if (localVar22 != 0) {\n            for (localVar13 = 0; localVar13 < 3; localVar13 = localVar13 + 1) {\n              if (((int)(uint)localVar22 >> localVar13 & 1U) == 0) {\n                array2[localVar13 + 3] = *(undefined4 *)(&DAT_20000e74 + (localVar13 + 2) * 4);\n              }\n              else if (DAT_20000e74 == '\\0') {\n                tempVar2 = (uint)localVar13;\n                tempVar1 = __addsf3(array2[localVar13 + 3],\n                                 *(undefined4 *)(&DAT_20000e74 + (localVar13 + 2) * 4));\n                array2[tempVar2 + 3] = tempVar1;\n              }\n              else {\n                tempVar3 = array2[localVar13 + 3];\n                tempVar1 = __addsf3(*(undefined4 *)(&DAT_20000e70 + (localVar13 + 8) * 4),\n                                 *(undefined4 *)(&DAT_20000e74 + (localVar13 + 10) * 4));\n                tempVar2 = (uint)localVar13;\n                tempVar1 = __addsf3(tempVar3,tempVar1);\n                array2[tempVar2 + 3] = tempVar1;\n              }\n            }\n            mc_line(array2[3],array2[4],array2[5],DAT_20000ed0,0);\n          }\n          if (localVar19 == '\\x05') {\n            returnValue = settings_read_coord_data(7,array1 + 3);\n            if (returnValue == 0) {\n              return '\\n';\n            }\n          }\n          else {\n            returnValue = settings_read_coord_data(6,array1 + 3);\n            if (returnValue == 0) {\n              return '\\n';\n            }\n          }\n          mc_line(array1[3],localVar1,localVar2,DAT_20000ed0,0);\n          DAT_20000e7c = array1[3];\n          DAT_20000e80 = localVar1;\n          DAT_20000e84 = localVar2;\n          localVar22 = 0;\n          break;\n        case '\\x04':\n        case '\\x06':\n          if (localVar19 == '\\x06') {\n            settings_write_coord_data(7,&DAT_20000e7c);\n          }\n          else {\n            settings_write_coord_data(6,&DAT_20000e7c);\n          }\n          break;\n        case '\\a':\n          if (localVar22 == 0) {\n            DAT_20000e70 = '\\x06';\n          }\n          else {\n            for (localVar12 = 0; localVar12 < 3; localVar12 = localVar12 + 1) {\n              if (((int)(uint)localVar22 >> localVar12 & 1U) != 0) {\n                tempVar1 = __aeabi_fsub(*(undefined4 *)(&DAT_20000e74 + (localVar12 + 2) * 4),\n                                     *(undefined4 *)(&DAT_20000e70 + (localVar12 + 8) * 4));\n                tempVar2 = (uint)localVar12;\n                tempVar1 = __aeabi_fsub(tempVar1,array2[localVar12 + 3]);\n                *(undefined4 *)(&DAT_20000e74 + (tempVar2 + 10) * 4) = tempVar1;\n              }\n            }\n          }\n          localVar22 = 0;\n          break;\n        case '\\b':\n          memset(&DAT_20000e9c,0,0xc);\n        }\n        if (((localVar23 & 4) != 0) || (localVar22 != 0)) {\n          if ((DAT_20000e72 != '\\0') &&\n             ((returnValue = __aeabi_fcmplt(localVar21,0), returnValue != 0 && (DAT_20000e71 != '\\x04')))) {\n            DAT_20000e70 = '\\x06';\n          }\n          if (((localVar20 != '\\0') && (DAT_20000e71 != '\\0')) && (DAT_20000e71 != '\\x01')) {\n            DAT_20000e70 = '\\x06';\n          }\n          if (DAT_20000e70 != '\\0') {\n            return DAT_20000e70;\n          }\n          for (localVar11 = 0; localVar11 < 3; localVar11 = localVar11 + 1) {\n            if (((int)(uint)localVar22 >> localVar11 & 1U) == 0) {\n              array2[localVar11 + 3] = *(undefined4 *)(&DAT_20000e74 + (localVar11 + 2) * 4);\n            }\n            else if (localVar20 == '\\0') {\n              if (DAT_20000e74 == '\\0') {\n                tempVar2 = (uint)localVar11;\n                tempVar1 = __addsf3(array2[localVar11 + 3],\n                                 *(undefined4 *)(&DAT_20000e74 + (localVar11 + 2) * 4));\n                array2[tempVar2 + 3] = tempVar1;\n              }\n              else {\n                tempVar3 = array2[localVar11 + 3];\n                tempVar1 = __addsf3(*(undefined4 *)(&DAT_20000e70 + (localVar11 + 8) * 4),\n                                 *(undefined4 *)(&DAT_20000e74 + (localVar11 + 10) * 4));\n                tempVar2 = (uint)localVar11;\n                tempVar1 = __addsf3(tempVar3,tempVar1);\n                array2[tempVar2 + 3] = tempVar1;\n              }\n            }\n          }\n          switch(DAT_20000e71) {\n          case '\\0':\n            if (localVar22 == 0) {\n              DAT_20000e70 = '\\x06';\n            }\n            else {\n              mc_line(array2[3],array2[4],array2[5],DAT_20000ed0,0);\n            }\n            break;\n          case '\\x01':\n            if (localVar22 == 0) {\n              DAT_20000e70 = '\\x06';\n            }\n            else {\n              tempVar1 = localVar21;\n              if (DAT_20000e72 == '\\0') {\n                tempVar1 = DAT_20000e78;\n              }\n              mc_line(array2[3],array2[4],array2[5],tempVar1,DAT_20000e72);\n            }\n            break;\n          case '\\x02':\n          case '\\x03':\n            localVar22 = localVar22 & ~(byte)(1 << DAT_20000e8b);\n            if ((localVar22 == 0) ||\n               (((returnValue = __aeabi_fcmpeq(localVar16,0), returnValue != 0 &&\n                 (returnValue = __aeabi_fcmpeq(array2[DAT_20000e89],0), returnValue != 0)) &&\n                (returnValue = __aeabi_fcmpeq(array2[DAT_20000e8a],0), returnValue != 0)))) {\n              DAT_20000e70 = '\\x06';\n            }\n            else {\n              returnValue = __aeabi_fcmpeq(localVar16,0);\n              if (returnValue == 0) {\n                localVar8 = __aeabi_fsub(array2[DAT_20000e89 + 3],\n                                        *(undefined4 *)(&DAT_20000e74 + (DAT_20000e89 + 2) * 4));\n                localVar7 = __aeabi_fsub(array2[DAT_20000e8a + 3],\n                                        *(undefined4 *)(&DAT_20000e74 + (DAT_20000e8a + 2) * 4));\n                memset(array2,0,0xc);\n                tempVar1 = __aeabi_fmul(localVar16,0x40800000);\n                tempVar1 = __aeabi_fmul(tempVar1,localVar16);\n                tempVar3 = __aeabi_fmul(localVar8,localVar8);\n                tempVar1 = __aeabi_fsub(tempVar1,tempVar3);\n                tempVar3 = __aeabi_fmul(localVar7,localVar7);\n                localVar10 = __aeabi_fsub(tempVar1,tempVar3);\n                returnValue = __aeabi_fcmplt(localVar10,0);\n                if (returnValue != 0) {\n                  DAT_20000e70 = 4;\n                  return '\\x04';\n                }\n                tempVar4 = __aeabi_f2d(localVar10);\n                tempVar4 = sqrt((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20));\n                tempVar5 = __aeabi_f2d(localVar8);\n                tempVar6 = __aeabi_f2d(localVar7);\n                tempVar5 = hypot((int)tempVar5,(int)((ulonglong)tempVar5 >> 0x20),(int)tempVar6,\n                              (int)((ulonglong)tempVar6 >> 0x20));\n                tempVar4 = __divdf3((int)tempVar4,(uint)((ulonglong)tempVar4 >> 0x20) ^ 0x80000000,(int)tempVar5\n                                 ,(int)((ulonglong)tempVar5 >> 0x20));\n                localVar10 = __truncdfsf2((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20));\n                if (DAT_20000e71 == '\\x03') {\n                  localVar10 = localVar10 ^ 0x80000000;\n                }\n                returnValue = __aeabi_fcmplt(localVar16,0);\n                if (returnValue != 0) {\n                  localVar10 = localVar10 ^ 0x80000000;\n                  localVar16 = localVar16 ^ 0x80000000;\n                }\n                tempVar1 = __aeabi_fmul(localVar7,localVar10);\n                tempVar1 = __aeabi_fsub(localVar8,tempVar1);\n                tempVar2 = (uint)DAT_20000e89;\n                tempVar1 = __aeabi_fmul(tempVar1,0x3f000000);\n                array2[tempVar2] = tempVar1;\n                tempVar1 = __aeabi_fmul(localVar8,localVar10);\n                tempVar1 = __addsf3(tempVar1,localVar7);\n                tempVar2 = (uint)DAT_20000e8a;\n                tempVar1 = __aeabi_fmul(tempVar1,0x3f000000);\n                array2[tempVar2] = tempVar1;\n              }\n              else {\n                tempVar4 = __aeabi_f2d(array2[DAT_20000e89]);\n                tempVar5 = __aeabi_f2d(array2[DAT_20000e8a]);\n                tempVar4 = hypot((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20),(int)tempVar5,\n                              (int)((ulonglong)tempVar5 >> 0x20));\n                localVar16 = __truncdfsf2((int)tempVar4,(int)((ulonglong)tempVar4 >> 0x20));\n              }\n              localVar9 = DAT_20000e71 == '\\x02';\n              tempVar1 = localVar21;\n              if (DAT_20000e72 == '\\0') {\n                tempVar1 = DAT_20000e78;\n              }\n              mc_arc(&DAT_20000e7c,array2 + 3,array2,DAT_20000e89,DAT_20000e8a,DAT_20000e8b,\n                     tempVar1,DAT_20000e72,localVar16,localVar9);\n            }\n            break;\n          case '\\x04':\n            if (localVar22 != 0) {\n              DAT_20000e70 = '\\x06';\n            }\n          }\n          if (DAT_20000e70 != '\\0') {\n            return DAT_20000e70;\n          }\n          DAT_20000e7c = array2[3];\n          DAT_20000e80 = array2[4];\n          DAT_20000e84 = array2[5];\n        }\n        result = DAT_20000e70;\n        if (DAT_20000e75 != '\\0') {\n          plan_synchronize();\n          DAT_20000eb8 = 0;\n          if (DAT_20000e75 == '\\x02') {\n            mc_reset();\n            result = DAT_20000e70;\n          }\n          else {\n            DAT_20000e75 = '\\0';\n            result = DAT_20000e70;\n          }\n        }\n      }\n    }\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080005b4": "decode_function_080005b4",
                "param_1": "input_data",
                "iVar1": "returnValue",
                "uVar2": "tempVar1",
                "cVar3": "result",
                "uVar4": "tempVar2",
                "uVar5": "tempVar3",
                "uVar6": "tempVar4",
                "uVar7": "tempVar5",
                "uVar8": "tempVar6",
                "local_94": "array1",
                "local_84": "localVar1",
                "local_80": "localVar2",
                "local_7c": "localVar3",
                "uStack_78": "localVar4",
                "uStack_74": "localVar5",
                "auStack_70": "array2",
                "local_58": "tempVar7",
                "local_52": "tempVar8",
                "local_51": "localVar6",
                "local_50": "localVar7",
                "local_4c": "localVar8",
                "local_45": "localVar9",
                "local_44": "localVar10",
                "local_3d": "localVar11",
                "local_3c": "localVar12",
                "local_3b": "localVar13",
                "local_3a": "localVar14",
                "local_39": "localVar15",
                "local_38": "localVar16",
                "local_34": "localVar17",
                "local_2f": "localVar18",
                "local_2e": "localVar19",
                "local_2d": "localVar20",
                "local_2c": "localVar21",
                "local_27": "localVar22",
                "local_26": "localVar23",
                "local_24": "localVar24"
            },
            "calling": [
                "protocol_execute_line",
                "protocol_execute_startup"
            ],
            "called": [
                "mc_line",
                "mc_arc",
                "__aeabi_fsub",
                "__aeabi_d2iz",
                "__addsf3",
                "next_statement",
                "__aeabi_d2uiz",
                "__aeabi_fcmplt",
                "__divdf3",
                "memset",
                "sqrt",
                "trunc",
                "__aeabi_fmul",
                "__aeabi_fcmple",
                "mc_dwell",
                "plan_synchronize",
                "__aeabi_f2d",
                "select_plane",
                "settings_read_coord_data",
                "mc_reset",
                "spindle_run",
                "to_millimeters",
                "hypot",
                "__truncdfsf2",
                "coolant_run",
                "settings_write_coord_data",
                "__aeabi_fcmpeq"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800184c": {
            "entrypoint": "0x0800184c",
            "current_name": "check_and_update_character_0800184c",
            "code": "\nundefined4 checkAndUpdateCharacter_0800184c(byte *outputCharacter,undefined4 inputParameter,int dataPointer,byte *indexPointer)\n\n{\n  int readResult;\n  undefined4 returnValue;\n  \n  if (*(char *)(dataPointer + (uint)*indexPointer) == '\\0') {\n    returnValue = 0;\n  }\n  else {\n    *outputCharacter = *(byte *)(dataPointer + (uint)*indexPointer);\n    if ((*outputCharacter < 0x41) || (0x5a < *outputCharacter)) {\n      DAT_20000e70 = 2;\n      returnValue = 0;\n    }\n    else {\n      *indexPointer = *indexPointer + 1;\n      readResult = read_float(dataPointer,indexPointer,inputParameter);\n      if (readResult == 0) {\n        DAT_20000e70 = 1;\n        returnValue = 0;\n      }\n      else {\n        returnValue = 1;\n      }\n    }\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_0800184c": "check_and_update_character_0800184c",
                "param_1": "outputCharacter",
                "param_2": "inputParameter",
                "param_3": "dataPointer",
                "param_4": "indexPointer",
                "uVar2": "returnValue",
                "iVar1": "readResult"
            },
            "calling": [
                "gc_execute_line"
            ],
            "called": [
                "read_float"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080018cc": {
            "entrypoint": "0x080018cc",
            "current_name": "update_data_080018cc",
            "code": "\n\n\nvoid updateData_080018cc(uint newValue)\n\n{\n  _DAT_40021014 = newValue | _DAT_40021014 & 0xfffffaaf;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080018cc": "update_data_080018cc",
                "param_1": "newValue"
            },
            "calling": [
                "homing_cycle"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080018fc": {
            "entrypoint": "0x080018fc",
            "current_name": "update_global_value_080018fc",
            "code": "\n\n\nvoid updateGlobalValue_080018fc(uint newValue)\n\n{\n  _DAT_40021014 = newValue | _DAT_40021014 & 0xfffff55f;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080018fc": "update_global_value_080018fc",
                "param_1": "newValue"
            },
            "calling": [
                "homing_cycle"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800192c": {
            "entrypoint": "0x0800192c",
            "current_name": "extract_bit_0800192c",
            "code": "\nvoid extract_bit_0800192c(void)\n\n{\n  DAT_20000e4c = (uint)((DAT_20000ee4 & 8) != 0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800192c": "extract_bit_0800192c"
            },
            "calling": [
                "settings_store_global_setting",
                "grbl_main"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800195c": {
            "entrypoint": "0x0800195c",
            "current_name": "reset_check_0800195c",
            "code": "\nvoid reset_check_0800195c(void)\n\n{\n  if ((DAT_20000ea9 != '\\x06') && ((DAT_20000eaa & 0x20) == 0)) {\n    mc_reset();\n    DAT_20000eaa = DAT_20000eaa | 0x40;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800195c": "reset_check_0800195c"
            },
            "calling": [
                "FUN_080074c8"
            ],
            "called": [
                "mc_reset"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001994": {
            "entrypoint": "0x08001994",
            "current_name": "calculate_values_08001994",
            "code": "\nvoid calculateValues_08001994(byte flags,char condition1,char condition2,undefined4 data)\n\n{\n  undefined4 result1;\n  uint maxValue;\n  undefined8 value1;\n  undefined8 value2;\n  byte tempFlag;\n  uint valueFlag1;\n  uint valueFlag2;\n  uint valueFlag3;\n  ushort dataFlag1;\n  uint roundedValue;\n  int roundedValue2;\n  undefined4 truncatedValue;\n  uint finalValue;\n  uint debouncedValue;\n  ushort dataFlag2;\n  uint delayAmount;\n  uint totalDelay;\n  int delayDifference;\n  int valueChange1;\n  int valueChange2;\n  int valueChange3;\n  ushort dataFlag3;\n  uint minValue;\n  char count;\n  \n  count = '\\0';\n  memset(&valueFlag1,0,0xc);\n  if ((flags & 1) != 0) {\n    count = count + '\\x01';\n    value1 = __aeabi_f2d(DAT_20000ebc);\n    valueFlag1 = lround((int)value1,(int)((ulonglong)value1 >> 0x20));\n  }\n  if ((flags & 2) != 0) {\n    count = count + '\\x01';\n    value1 = __aeabi_f2d(DAT_20000ec0);\n    valueFlag2 = lround((int)value1,(int)((ulonglong)value1 >> 0x20));\n  }\n  if ((flags & 4) != 0) {\n    count = count + '\\x01';\n    value1 = __aeabi_f2d(DAT_20000ec4);\n    valueFlag3 = lround((int)value1,(int)((ulonglong)value1 >> 0x20));\n  }\n  maxValue = valueFlag3;\n  if (valueFlag3 < valueFlag2) {\n    maxValue = valueFlag2;\n  }\n  finalValue = valueFlag1;\n  if (valueFlag1 < maxValue) {\n    finalValue = maxValue;\n  }\n  value1 = __floatunsidf(finalValue);\n  value2 = __floatunsidf(count);\n  value2 = sqrt((int)value2,(int)((ulonglong)value2 >> 0x20));\n  value1 = __divdf3((int)value1,(int)((ulonglong)value1 >> 0x20),(int)value2,\n                   (int)((ulonglong)value2 >> 0x20));\n  truncatedValue = __truncdfsf2((int)value1,(int)((ulonglong)value1 >> 0x20));\n  result1 = __aeabi_fmul(DAT_20000edc,truncatedValue);\n  result1 = __aeabi_fdiv(result1,0x453b8000);\n  value1 = __aeabi_f2d(result1);\n  value1 = ceil((int)value1,(int)((ulonglong)value1 >> 0x20));\n  roundedValue2 = __aeabi_d2uiz((int)value1,(int)((ulonglong)value1 >> 0x20));\n  value1 = __floatunsidf(count);\n  value1 = sqrt((int)value1,(int)((ulonglong)value1 >> 0x20));\n  value2 = __aeabi_f2d(data);\n  value1 = __muldf3((int)value1,(int)((ulonglong)value1 >> 0x20),(int)value2,\n                   (int)((ulonglong)value2 >> 0x20));\n  result1 = __truncdfsf2((int)value1,(int)((ulonglong)value1 >> 0x20));\n  result1 = __aeabi_fmul(truncatedValue,result1);\n  result1 = __aeabi_fdiv(0x4c64e1c0,result1);\n  value1 = __aeabi_f2d(result1);\n  roundedValue = lround((int)value1,(int)((ulonglong)value1 >> 0x20));\n  minValue = 75000;\n  if (roundedValue < 75000) {\n    minValue = roundedValue;\n  }\n  dataFlag1 = DAT_20000ed4;\n  dataFlag3 = DAT_20000ed6 ^ DAT_20000ee6 & 0xaa0;\n  if (condition1 == '\\0') {\n    dataFlag3 = dataFlag3 ^ 0xaa0;\n  }\n  update_global_value_080018fc(dataFlag3);\n  update_data_080018cc(dataFlag1);\n  valueChange1 = -(finalValue >> 1);\n  delayDifference = minValue - DAT_20000ec9;\n  totalDelay = 0;\n  delayAmount = 10000;\n  tempFlag = flags;\n  valueChange2 = valueChange1;\n  valueChange3 = valueChange1;\n  while( true ) {\n    dataFlag2 = dataFlag1;\n    debouncedValue = debounce_rd();\n    if (condition2 == '\\0') {\n      debouncedValue = debouncedValue ^ 0x1e;\n    }\n    if (((tempFlag & 1) != 0) && (valueChange3 = valueChange3 + valueFlag1, 0 < valueChange3)) {\n      if ((debouncedValue & 0x10) == 0) {\n        tempFlag = tempFlag & 0xfe;\n      }\n      else {\n        dataFlag2 = dataFlag2 ^ 0x10;\n      }\n      valueChange3 = valueChange3 - finalValue;\n    }\n    if (((tempFlag & 2) != 0) && (valueChange2 = valueChange2 + valueFlag2, 0 < valueChange2)) {\n      if ((debouncedValue & 8) == 0) {\n        tempFlag = tempFlag & 0xfd;\n      }\n      else {\n        dataFlag2 = dataFlag2 ^ 0x440;\n      }\n      valueChange2 = valueChange2 - finalValue;\n    }\n    if (((tempFlag & 4) != 0) && (valueChange1 = valueChange1 + valueFlag3, 0 < valueChange1)) {\n      if ((debouncedValue & 4) == 0) {\n        tempFlag = tempFlag & 0xfb;\n      }\n      else {\n        dataFlag2 = dataFlag2 ^ 0x100;\n      }\n      valueChange1 = valueChange1 - finalValue;\n    }\n    if ((tempFlag == 0) || ((DAT_20000eaa & 0x10) != 0)) break;\n    update_data_080018cc(dataFlag2);\n    delay_us(DAT_20000ec9);\n    update_data_080018cc(dataFlag1);\n    delay_us(delayDifference);\n    if ((roundedValue < minValue) && (delayAmount = minValue + delayAmount, 20000 < delayAmount)) {\n      delayAmount = delayAmount - 20000;\n      totalDelay = roundedValue2 + totalDelay;\n      minValue = 60000000 / totalDelay;\n      if (minValue < roundedValue) {\n        minValue = roundedValue;\n      }\n      delayDifference = minValue - DAT_20000ec9;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001994": "calculate_values_08001994",
                "param_1": "flags",
                "param_2": "condition1",
                "param_3": "condition2",
                "param_4": "data",
                "uVar1": "result1",
                "uVar2": "maxValue",
                "uVar3": "value1",
                "uVar4": "value2",
                "local_61": "tempFlag",
                "local_5c": "valueFlag1",
                "local_58": "valueFlag2",
                "local_54": "valueFlag3",
                "local_4e": "dataFlag1",
                "local_4c": "roundedValue",
                "local_48": "roundedValue2",
                "local_44": "truncatedValue",
                "local_40": "finalValue",
                "local_3c": "debouncedValue",
                "local_36": "dataFlag2",
                "local_34": "delayAmount",
                "local_30": "totalDelay",
                "local_2c": "delayDifference",
                "local_28": "valueChange1",
                "local_24": "valueChange2",
                "local_20": "valueChange3",
                "local_1a": "dataFlag3",
                "local_18": "minValue",
                "local_11": "count"
            },
            "calling": [
                "limits_go_home"
            ],
            "called": [
                "sqrt",
                "FUN_080018cc",
                "__aeabi_fmul",
                "__aeabi_fdiv",
                "lround",
                "__floatunsidf",
                "__aeabi_f2d",
                "ceil",
                "__aeabi_d2uiz",
                "__truncdfsf2",
                "debounce_rd",
                "__divdf3",
                "FUN_080018fc",
                "memset",
                "delay_us",
                "__muldf3"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001d4c": {
            "entrypoint": "0x08001d4c",
            "current_name": "perform_homing_cycle_08001d4c",
            "code": "\nvoid performHomingCycle_08001d4c(void)\n\n{\n  char updatedCount;\n  char count;\n  \n  st_wake_up();\n  homing_cycle(4,1,0,DAT_20000eec);\n  homing_cycle(3,1,0,DAT_20000eec);\n  delay_ms(DAT_20000ef0);\n  count = '\\x02';\n  while( true ) {\n    updatedCount = count + -1;\n    if (count == '\\0') break;\n    homing_cycle(7,0,1,DAT_20000ee8);\n    delay_ms(DAT_20000ef0);\n    count = updatedCount;\n    if ('\\0' < updatedCount) {\n      homing_cycle(7,1,0,DAT_20000ee8);\n      delay_ms(DAT_20000ef0);\n    }\n  }\n  st_go_idle();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001d4c": "perform_homing_cycle_08001d4c",
                "local_9": "count",
                "cVar1": "updatedCount"
            },
            "calling": [
                "mc_go_home"
            ],
            "called": [
                "st_go_idle",
                "delay_ms",
                "st_wake_up",
                "homing_cycle"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001ddc": {
            "entrypoint": "0x08001ddc",
            "current_name": "initialize_system_08001ddc",
            "code": "\nvoid initialize_system_08001ddc(void)\n\n{\n  initialize_serial();\n  initialize_settings();\n  initialize_st();\n  memset(&DAT_20000ea8,0,0x14);\n  DAT_20000ea8 = '\\x01';\n  DAT_20000ea9 = '\\x01';\n  do {\n    if (DAT_20000ea8 != '\\0') {\n      reset_serial_read_buffer();\n      initialize_plan();\n      initialize_gc();\n      initialize_protocol();\n      initialize_spindle();\n      initialize_coolant();\n      initialize_limits();\n      reset_st();\n      synchronize_current_position();\n      DAT_20000ea8 = '\\0';\n      DAT_20000eaa = 0;\n      if ((DAT_20000ee4 & 2) != 0) {\n        DAT_20000eb8 = 1;\n      }\n      if ((DAT_20000ea9 == '\\x01') && ((DAT_20000ee4 & 0x10) != 0)) {\n        DAT_20000ea9 = '\\x06';\n      }\n      if (DAT_20000ea9 == '\\x06') {\n        notify_user_message(2);\n      }\n      else {\n        DAT_20000ea9 = '\\0';\n        execute_startup_protocol();\n      }\n    }\n    execute_runtime_protocol();\n    process_protocol();\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08001ddc": "initialize_system_08001ddc",
                "serial_init": "initialize_serial",
                "settings_init": "initialize_settings",
                "st_init": "initialize_st",
                "serial_reset_read_buffer": "reset_serial_read_buffer",
                "plan_init": "initialize_plan",
                "gc_init": "initialize_gc",
                "protocol_init": "initialize_protocol",
                "spindle_init": "initialize_spindle",
                "coolant_init": "initialize_coolant",
                "limits_init": "initialize_limits",
                "st_reset": "reset_st",
                "sys_sync_current_position": "synchronize_current_position",
                "report_feedback_message": "notify_user_message",
                "protocol_execute_startup": "execute_startup_protocol",
                "protocol_execute_runtime": "execute_runtime_protocol",
                "protocol_process": "process_protocol"
            },
            "calling": [
                "main"
            ],
            "called": [
                "protocol_process",
                "st_reset",
                "report_feedback_message",
                "serial_reset_read_buffer",
                "gc_init",
                "st_init",
                "settings_init",
                "protocol_init",
                "serial_init",
                "coolant_init",
                "protocol_execute_startup",
                "plan_init",
                "sys_sync_current_position",
                "protocol_execute_runtime",
                "spindle_init",
                "memset",
                "limits_init"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001e98": {
            "entrypoint": "0x08001e98",
            "current_name": "execute_protocol_08001e98",
            "code": "\nvoid executeProtocol_08001e98(undefined4 buffer,undefined4 length,undefined4 option,undefined4 param,\n                 undefined flag)\n\n{\n  int checkResult;\n  \n  if (DAT_20000ea9 != '\\a') {\n    do {\n      protocol_execute_runtime();\n      if (DAT_20000ea8 != '\\0') {\n        return;\n      }\n      checkResult = checkFullBuffer();\n    } while (checkResult != 0);\n    bufferLine(buffer,length,option,param,flag);\n    if (DAT_20000ea9 == '\\0') {\n      DAT_20000ea9 = '\\x02';\n    }\n    if (DAT_20000eb8 != '\\0') {\n      startCycle();\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001e98": "execute_protocol_08001e98",
                "param_1": "buffer",
                "param_2": "length",
                "param_3": "option",
                "param_4": "param",
                "param_5": "flag",
                "iVar1": "checkResult",
                "plan_check_full_buffer": "checkFullBuffer",
                "plan_buffer_line": "bufferLine",
                "st_cycle_start": "startCycle"
            },
            "calling": [
                "mc_arc",
                "gc_execute_line",
                "mc_go_home"
            ],
            "called": [
                "plan_check_full_buffer",
                "protocol_execute_runtime",
                "st_cycle_start",
                "plan_buffer_line"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08001f00": {
            "entrypoint": "0x08001f00",
            "current_name": "calculate_angles_08001f00",
            "code": "\nvoid calculateAngles_08001f00(int point1,undefined4 *point2,int point3,byte byte1,byte byte2,byte byte3\n                 ,undefined4 float1,char char1,undefined4 float2,char char2)\n\n{\n  undefined4 temp1;\n  undefined4 temp2;\n  int comparisonResult;\n  uint temp3;\n  undefined8 temp4;\n  undefined8 temp5;\n  uint resultArray [4];\n  undefined4 temp6;\n  undefined4 temp7;\n  undefined4 temp8;\n  undefined4 temp9;\n  undefined4 temp10;\n  undefined4 temp11;\n  ushort loopCounter;\n  undefined4 hypotenuse;\n  undefined4 temp12;\n  undefined4 temp13;\n  uint temp14;\n  undefined4 temp15;\n  undefined4 temp16;\n  char flag;\n  ushort index;\n  undefined4 angle;\n  uint temp17;\n  uint temp18;\n  \n  temp16 = __addsf3(*(undefined4 *)((uint)byte1 * 4 + point1),\n                      *(undefined4 *)((uint)byte1 * 4 + point3));\n  temp15 = __addsf3(*(undefined4 *)((uint)byte2 * 4 + point1),\n                      *(undefined4 *)((uint)byte2 * 4 + point3));\n  temp14 = __aeabi_fsub(point2[byte3],*(undefined4 *)((uint)byte3 * 4 + point1));\n  temp18 = *(uint *)((uint)byte1 * 4 + point3) ^ 0x80000000;\n  temp17 = *(uint *)((uint)byte2 * 4 + point3) ^ 0x80000000;\n  temp13 = __aeabi_fsub(point2[byte1],temp16);\n  temp12 = __aeabi_fsub(point2[byte2],temp15);\n  temp1 = __aeabi_fmul(temp18,temp12);\n  temp2 = __aeabi_fmul(temp17,temp13);\n  temp1 = __aeabi_fsub(temp1,temp2);\n  temp4 = __aeabi_f2d(temp1);\n  temp1 = __aeabi_fmul(temp18,temp13);\n  temp2 = __aeabi_fmul(temp17,temp12);\n  temp1 = __addsf3(temp1,temp2);\n  temp5 = __aeabi_f2d(temp1);\n  temp4 = atan2((int)temp4,(int)((ulonglong)temp4 >> 0x20),(int)temp5,\n                (int)((ulonglong)temp5 >> 0x20));\n  angle = __truncdfsf2((int)temp4,(int)((ulonglong)temp4 >> 0x20));\n  if (char2 == '\\0') {\n    comparisonResult = __aeabi_fcmple(angle,0);\n    if (comparisonResult != 0) {\n      temp4 = __aeabi_f2d(angle);\n      temp4 = __aeabi_dadd((int)temp4,(int)((ulonglong)temp4 >> 0x20),0x54442d18,0x401921fb);\n      angle = __truncdfsf2((int)temp4,(int)((ulonglong)temp4 >> 0x20));\n    }\n  }\n  else {\n    comparisonResult = __aeabi_fcmpge(angle,0);\n    if (comparisonResult != 0) {\n      temp4 = __aeabi_f2d(angle);\n      temp4 = __subdf3((int)temp4,(int)((ulonglong)temp4 >> 0x20),0x54442d18,0x401921fb);\n      angle = __truncdfsf2((int)temp4,(int)((ulonglong)temp4 >> 0x20));\n    }\n  }\n  temp1 = __aeabi_fmul(angle,float2);\n  temp4 = __aeabi_f2d(temp1);\n  temp5 = __aeabi_f2d(temp14 & 0x7fffffff);\n  temp4 = hypot((int)temp4,(int)((ulonglong)temp4 >> 0x20),(int)temp5,\n                (int)((ulonglong)temp5 >> 0x20));\n  hypotenuse = __truncdfsf2((int)temp4,(int)((ulonglong)temp4 >> 0x20));\n  comparisonResult = __aeabi_fcmpeq(hypotenuse,0);\n  if (comparisonResult == 0) {\n    temp1 = __aeabi_fdiv(hypotenuse,DAT_20000ed8);\n    temp4 = __aeabi_f2d(temp1);\n    temp4 = floor((int)temp4,(int)((ulonglong)temp4 >> 0x20));\n    loopCounter = __aeabi_d2uiz((int)temp4,(int)((ulonglong)temp4 >> 0x20));\n    if (char1 != '\\0') {\n      temp1 = __floatsisf(loopCounter);\n      float1 = __aeabi_fmul(float1,temp1);\n    }\n    temp1 = __floatsisf(loopCounter);\n    temp11 = __aeabi_fdiv(angle,temp1);\n    temp1 = __floatsisf(loopCounter);\n    temp10 = __aeabi_fdiv(temp14,temp1);\n    temp4 = __aeabi_f2d(temp11);\n    temp4 = __muldf3((int)temp4,(int)((ulonglong)temp4 >> 0x20),0,0x3fe00000);\n    temp5 = __aeabi_f2d(temp11);\n    temp4 = __muldf3((int)temp4,(int)((ulonglong)temp4 >> 0x20),(int)temp5,\n                     (int)((ulonglong)temp5 >> 0x20));\n    temp4 = __subdf3(0,0x3ff00000,(int)temp4,(int)((ulonglong)temp4 >> 0x20));\n    temp9 = __truncdfsf2((int)temp4,(int)((ulonglong)temp4 >> 0x20));\n    temp8 = temp11;\n    flag = '\\0';\n    resultArray[byte3] = *(uint *)(point1 + (uint)byte3 * 4);\n    for (index = 1; index < loopCounter; index = index + 1) {\n      if ((int)flag < (int)(uint)DAT_20000efa) {\n        temp1 = __aeabi_fmul(temp18,temp8);\n        temp2 = __aeabi_fmul(temp17,temp9);\n        resultArray[3] = __addsf3(temp1,temp2);\n        temp1 = __aeabi_fmul(temp18,temp9);\n        temp2 = __aeabi_fmul(temp17,temp8);\n        temp18 = __aeabi_fsub(temp1,temp2);\n        temp17 = resultArray[3];\n        flag = flag + '\\x01';\n      }\n      else {\n        temp1 = __floatsisf(index);\n        temp1 = __aeabi_fmul(temp1,temp11);\n        temp4 = __aeabi_f2d(temp1);\n        temp4 = cos((int)temp4,(int)((ulonglong)temp4 >> 0x20));\n        temp7 = __truncdfsf2((int)temp4,(int)((ulonglong)temp4 >> 0x20));\n        temp1 = __floatsisf(index);\n        temp1 = __aeabi_fmul(temp1,temp11);\n        temp4 = __aeabi_f2d(temp1);\n        temp4 = sin((int)temp4,(int)((ulonglong)temp4 >> 0x20));\n        temp6 = __truncdfsf2((int)temp4,(int)((ulonglong)temp4 >> 0x20));\n        temp1 = __aeabi_fmul(*(uint *)((uint)byte1 * 4 + point3) ^ 0x80000000,temp7);\n        temp2 = __aeabi_fmul(*(undefined4 *)((uint)byte2 * 4 + point3),temp6);\n        temp18 = __addsf3(temp1,temp2);\n        temp1 = __aeabi_fmul(*(uint *)((uint)byte1 * 4 + point3) ^ 0x80000000,temp6);\n        temp2 = __aeabi_fmul(*(undefined4 *)((uint)byte2 * 4 + point3),temp7);\n        temp17 = __aeabi_fsub(temp1,temp2);\n        flag = '\\0';\n      }\n      temp3 = __addsf3(temp16,temp18);\n      resultArray[byte1] = temp3;\n      temp3 = __addsf3(temp15,temp17);\n      resultArray[byte2] = temp3;\n      temp3 = __addsf3(resultArray[byte3],temp10);\n      resultArray[byte3] = temp3;\n      mc_line(resultArray[0],resultArray[1],resultArray[2],float1,char1);\n      if (DAT_20000ea8 != '\\0') {\n        return;\n      }\n    }\n    mc_line(*point2,point2[1],point2[2],float1,char1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08001f00": "calculate_angles_08001f00",
                "param_1": "point1",
                "param_2": "point2",
                "param_3": "point3",
                "param_4": "byte1",
                "param_5": "byte2",
                "param_6": "byte3",
                "param_7": "float1",
                "param_8": "char1",
                "param_9": "float2",
                "param_10": "char2",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "iVar3": "comparisonResult",
                "uVar4": "temp3",
                "uVar5": "temp4",
                "uVar6": "temp5",
                "local_6c": "resultArray",
                "local_5c": "temp6",
                "local_58": "temp7",
                "local_54": "temp8",
                "local_50": "temp9",
                "local_4c": "temp10",
                "local_48": "temp11",
                "local_42": "loopCounter",
                "local_40": "hypotenuse",
                "local_3c": "temp12",
                "local_38": "temp13",
                "local_34": "temp14",
                "local_30": "temp15",
                "local_2c": "temp16",
                "local_27": "flag",
                "local_26": "index",
                "local_24": "angle",
                "local_20": "temp17",
                "local_1c": "temp18"
            },
            "calling": [
                "gc_execute_line"
            ],
            "called": [
                "mc_line",
                "sin",
                "__aeabi_fsub",
                "__aeabi_dadd",
                "atan2",
                "__aeabi_fmul",
                "__addsf3",
                "__aeabi_fcmpge",
                "floor",
                "__aeabi_fdiv",
                "__aeabi_fcmple",
                "__subdf3",
                "__aeabi_f2d",
                "cos",
                "__floatsisf",
                "__aeabi_d2uiz",
                "hypot",
                "__truncdfsf2",
                "__aeabi_fcmpeq",
                "__muldf3"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002408": {
            "entrypoint": "0x08002408",
            "current_name": "calculate_delay_and_execute_protocol_08002408",
            "code": "\nvoid calculate_delay_and_execute_protocol_08002408(undefined4 multiplier)\n\n{\n  undefined2 uVar1;\n  undefined4 multiplied_value;\n  undefined4 subtracted_value;\n  undefined8 floored_value;\n  ushort iteration_count;\n  \n  multiplied_value = __aeabi_fmul(multiplier,0x41a00000);\n  floored_value = __aeabi_f2d(multiplied_value);\n  floored_value = floor((int)floored_value,(int)((ulonglong)floored_value >> 0x20));\n  iteration_count = __aeabi_d2uiz((int)floored_value,(int)((ulonglong)floored_value >> 0x20));\n  plan_synchronize();\n  multiplied_value = __aeabi_fmul(multiplier,0x447a0000);\n  subtracted_value = __floatsisf((uint)iteration_count * 0x32);\n  multiplied_value = __aeabi_fsub(multiplied_value,subtracted_value);\n  floored_value = __aeabi_f2d(multiplied_value);\n  floored_value = floor((int)floored_value,(int)((ulonglong)floored_value >> 0x20));\n  uVar1 = __aeabi_d2uiz((int)floored_value,(int)((ulonglong)floored_value >> 0x20));\n  delay_ms(uVar1);\n  while ((iteration_count != 0 && (protocol_execute_runtime(), DAT_20000ea8 == '\\0'))) {\n    _delay_ms(0x32);\n    iteration_count = iteration_count - 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002408": "calculate_delay_and_execute_protocol_08002408",
                "param_1": "multiplier",
                "uVar2": "multiplied_value",
                "uVar3": "subtracted_value",
                "uVar4": "floored_value",
                "local_12": "iteration_count"
            },
            "calling": [
                "gc_execute_line"
            ],
            "called": [
                "__aeabi_f2d",
                "__aeabi_fsub",
                "__floatsisf",
                "__aeabi_d2uiz",
                "delay_ms",
                "__aeabi_fmul",
                "protocol_execute_runtime",
                "floor",
                "_delay_ms",
                "plan_synchronize"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080024c4": {
            "entrypoint": "0x080024c4",
            "current_name": "update_motion_080024c4",
            "code": "\nvoid updateMotion_080024c4(void)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  char zDirection;\n  char yDirection;\n  char xDirection;\n  \n  DAT_20000ea9 = 5;\n  DAT_20000e4c = 0;\n  limits_go_home();\n  protocol_execute_runtime();\n  if (DAT_20000ea8 == '\\0') {\n    memset(&DAT_20000eac,0,0xc);\n    sys_sync_current_position();\n    DAT_20000ea9 = 0;\n    if ((DAT_20000ee6 & 0x20) == 0) {\n      xDirection = -1;\n    }\n    else {\n      xDirection = '\\x01';\n    }\n    if ((DAT_20000ee6 & 0x80) == 0) {\n      yDirection = -1;\n    }\n    else {\n      yDirection = '\\x01';\n    }\n    if ((DAT_20000ee6 & 0x200) == 0) {\n      zDirection = -1;\n    }\n    else {\n      zDirection = '\\x01';\n    }\n    uVar1 = __floatsisf((int)xDirection);\n    uVar1 = __aeabi_fmul(uVar1,DAT_20000ef4);\n    uVar2 = __floatsisf((int)yDirection);\n    uVar2 = __aeabi_fmul(uVar2,DAT_20000ef4);\n    uVar3 = __floatsisf((int)zDirection);\n    uVar3 = __aeabi_fmul(uVar3,DAT_20000ef4);\n    mc_line(uVar1,uVar2,uVar3,DAT_20000eec,0);\n    st_cycle_start();\n    plan_synchronize();\n    sys_sync_current_position();\n    if ((DAT_20000ee4 & 8) != 0) {\n      DAT_20000e4c = 1;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080024c4": "update_motion_080024c4",
                "local_13": "zDirection",
                "local_12": "yDirection",
                "local_11": "xDirection"
            },
            "calling": [
                "protocol_execute_line"
            ],
            "called": [
                "mc_line",
                "__floatsisf",
                "limits_go_home",
                "__aeabi_fmul",
                "sys_sync_current_position",
                "protocol_execute_runtime",
                "st_cycle_start",
                "memset",
                "plan_synchronize"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080025e8": {
            "entrypoint": "0x080025e8",
            "current_name": "check_and_manage_system_state_080025e8",
            "code": "\nvoid check_and_manage_system_state_080025e8(void)\n\n{\n  if ((DAT_20000eaa & 0x10) == 0) {\n    DAT_20000eaa = DAT_20000eaa | 0x10;\n    stop_spindle();\n    stop_coolant();\n    if (DAT_20000ea9 - 3 < 3) {\n      DAT_20000eaa = DAT_20000eaa | 0x20;\n      set_system_idle();\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080025e8": "check_and_manage_system_state_080025e8",
                "spindle_stop": "stop_spindle",
                "coolant_stop": "stop_coolant",
                "st_go_idle": "set_system_idle"
            },
            "calling": [
                "protocol_execute_line",
                "gc_execute_line",
                "serial_rx_hook",
                "limits_isr",
                "buttons_isr"
            ],
            "called": [
                "st_go_idle",
                "coolant_stop",
                "spindle_stop"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002638": {
            "entrypoint": "0x08002638",
            "current_name": "convert_string_to_int_08002638",
            "code": "\nundefined4 convertStringToInt_08002638(int baseAddress,byte *stringPtr,uint *resultPtr)\n\n{\n  byte digit;\n  bool isNegative;\n  bool isDecimal;\n  int comparisonResult;\n  char *currentCharPtr;\n  char *nextCharPtr;\n  undefined4 returnVal;\n  undefined8 temp;\n  uint convertedInteger;\n  byte digitCount;\n  char decimalCount;\n  int integerValue;\n  char currentChar;\n  char *nextCharPtr;\n  \n  nextCharPtr = (char *)(baseAddress + (uint)*stringPtr);\n  currentCharPtr = nextCharPtr + 1;\n  currentChar = *nextCharPtr;\n  isNegative = false;\n  if (currentChar == '-') {\n    isNegative = true;\n    currentChar = *currentCharPtr;\n    nextCharPtr = nextCharPtr + 2;\n  }\n  else {\n    nextCharPtr = currentCharPtr;\n    if (currentChar == '+') {\n      nextCharPtr = nextCharPtr + 2;\n      currentChar = *currentCharPtr;\n    }\n  }\n  integerValue = 0;\n  decimalCount = '\\0';\n  digitCount = 0;\n  isDecimal = false;\n  do {\n    digit = currentChar - 0x30;\n    if (digit < 10) {\n      digitCount = digitCount + 1;\n      if (digitCount < 9) {\n        if (isDecimal) {\n          decimalCount = decimalCount + -1;\n        }\n        integerValue = (uint)digit + integerValue * 10;\n      }\n      else if (!isDecimal) {\n        decimalCount = decimalCount + '\\x01';\n      }\n    }\n    else {\n      if ((digit != 0xfe) || (isDecimal)) {\n        if (digitCount == 0) {\n          returnVal = 0;\n        }\n        else {\n          convertedInteger = __floatunsisf(integerValue);\n          comparisonResult = __aeabi_fcmpeq(convertedInteger,0);\n          if (comparisonResult == 0) {\n            for (; decimalCount < -1; decimalCount = decimalCount + '\\x02') {\n              temp = __aeabi_f2d(convertedInteger);\n              temp = __muldf3((int)temp,(int)((ulonglong)temp >> 0x20),0x47ae147b,0x3f847ae1);\n              convertedInteger = __truncdfsf2((int)temp,(int)((ulonglong)temp >> 0x20));\n            }\n            if (decimalCount < '\\0') {\n              temp = __aeabi_f2d(convertedInteger);\n              temp = __muldf3((int)temp,(int)((ulonglong)temp >> 0x20),0x9999999a,0x3fb99999);\n              convertedInteger = __truncdfsf2((int)temp,(int)((ulonglong)temp >> 0x20));\n            }\n            else {\n              for (; '\\0' < decimalCount; decimalCount = decimalCount + -1) {\n                convertedInteger = __aeabi_fmul(convertedInteger,0x41200000);\n              }\n            }\n          }\n          if (isNegative) {\n            *resultPtr = convertedInteger ^ 0x80000000;\n          }\n          else {\n            *resultPtr = convertedInteger;\n          }\n          *stringPtr = ((char)nextCharPtr - (char)baseAddress) - 1;\n          returnVal = 1;\n        }\n        return returnVal;\n      }\n      isDecimal = true;\n    }\n    currentChar = *nextCharPtr;\n    nextCharPtr = nextCharPtr + 1;\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08002638": "convert_string_to_int_08002638",
                "param_1": "baseAddress",
                "param_2": "stringPtr",
                "param_3": "resultPtr",
                "bVar1": "digit",
                "bVar2": "isNegative",
                "bVar3": "isDecimal",
                "iVar4": "comparisonResult",
                "pcVar5": "currentCharPtr",
                "pcVar6": "nextCharPtr",
                "uVar7": "returnVal",
                "uVar8": "temp",
                "local_1c": "convertedInteger",
                "local_16": "digitCount",
                "local_15": "decimalCount",
                "local_14": "integerValue",
                "local_d": "currentChar",
                "local_c": "nextCharPtr"
            },
            "calling": [
                "protocol_execute_line",
                "next_statement"
            ],
            "called": [
                "__aeabi_f2d",
                "__floatunsisf",
                "__truncdfsf2",
                "__aeabi_fmul",
                "__muldf3",
                "__aeabi_fcmpeq"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002814": {
            "entrypoint": "0x08002814",
            "current_name": "FUNC_08002814",
            "code": "\nvoid FUNC_08002814(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002814": "FUNC_08002814"
            },
            "calling": [
                "limits_go_home",
                "mc_dwell",
                "report_alarm_message"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08002828": {
            "entrypoint": "0x08002828",
            "current_name": "FUNC_08002828",
            "code": "\nvoid FUNC_08002828(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002828": "FUNC_08002828"
            },
            "calling": [
                "homing_cycle"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800283a": {
            "entrypoint": "0x0800283a",
            "current_name": "initialize_positions_0800283a",
            "code": "\nvoid initialize_positions_0800283a(void)\n\n{\n  plan_set_current_position(DAT_20000eac,DAT_20000eb0,DAT_20000eb4);\n  gc_set_current_position(DAT_20000eac,DAT_20000eb0,DAT_20000eb4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800283a": "initialize_positions_0800283a"
            },
            "calling": [
                "grbl_main",
                "mc_go_home"
            ],
            "called": [
                "plan_set_current_position",
                "gc_set_current_position"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002870": {
            "entrypoint": "0x08002870",
            "current_name": "increment_and_reset_08002870",
            "code": "\nchar increment_and_reset_08002870(char input_value)\n\n{\n  char result;\n  \n  result = input_value + '\\x01';\n  if (result == '\\x12') {\n    result = '\\0';\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08002870": "increment_and_reset_08002870",
                "param_1": "input_value",
                "local_9": "result"
            },
            "calling": [
                "planner_recalculate_trapezoids",
                "plan_discard_current_block",
                "plan_reset_buffer",
                "planner_forward_pass",
                "plan_buffer_line"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002896": {
            "entrypoint": "0x08002896",
            "current_name": "descriptive_function_08002896",
            "code": "\nchar descriptive_function_08002896(char input)\n\n{\n  char result;\n  \n  result = input;\n  if (input == '\\0') {\n    result = '\\x12';\n  }\n  return result + -1;\n}\n\n",
            "renaming": {
                "FUN_08002896": "descriptive_function_08002896",
                "param_1": "input",
                "local_9": "result"
            },
            "calling": [
                "planner_reverse_pass"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080028bc": {
            "entrypoint": "0x080028bc",
            "current_name": "calculate_division_ratio_080028bc",
            "code": "\nundefined4 calculate_division_ratio_080028bc(undefined4 numerator,undefined4 denominator,undefined4 value)\n\n{\n  undefined4 squared_denominator;\n  undefined4 doubled_value;\n  \n  squared_denominator = __aeabi_fmul(denominator,denominator);\n  doubled_value = __aeabi_fmul(numerator,numerator);\n  squared_denominator = __aeabi_fsub(squared_denominator,doubled_value);\n  doubled_value = __addsf3(value,value);\n  squared_denominator = __aeabi_fdiv(squared_denominator,doubled_value);\n  return squared_denominator;\n}\n\n",
            "renaming": {
                "FUN_080028bc": "calculate_division_ratio_080028bc",
                "param_1": "numerator",
                "param_2": "denominator",
                "param_3": "value",
                "uVar1": "squared_denominator",
                "uVar2": "doubled_value"
            },
            "calling": [
                "calculate_trapezoid_for_block"
            ],
            "called": [
                "__aeabi_fsub",
                "__aeabi_fmul",
                "__addsf3",
                "__aeabi_fdiv"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002908": {
            "entrypoint": "0x08002908",
            "current_name": "calculate_division_result_08002908",
            "code": "\nundefined4 calculate_division_result_08002908(undefined4 number_1,undefined4 number_2,undefined4 number_3,undefined4 number_4)\n\n{\n  undefined4 result_1;\n  undefined4 result_2;\n  \n  result_1 = __addsf3(number_3,number_3);\n  result_1 = __aeabi_fmul(result_1,number_4);\n  result_2 = __aeabi_fmul(number_1,number_1);\n  result_1 = __aeabi_fsub(result_1,result_2);\n  result_2 = __aeabi_fmul(number_2,number_2);\n  result_1 = __addsf3(result_1,result_2);\n  result_2 = __aeabi_fmul(number_3,0x40800000);\n  result_1 = __aeabi_fdiv(result_1,result_2);\n  return result_1;\n}\n\n",
            "renaming": {
                "FUN_08002908": "calculate_division_result_08002908",
                "param_1": "number_1",
                "param_2": "number_2",
                "param_3": "number_3",
                "param_4": "number_4",
                "uVar1": "result_1",
                "uVar2": "result_2"
            },
            "calling": [
                "calculate_trapezoid_for_block"
            ],
            "called": [
                "__aeabi_fsub",
                "__addsf3",
                "__aeabi_fmul",
                "__aeabi_fdiv"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002978": {
            "entrypoint": "0x08002978",
            "current_name": "calculate_difference_08002978",
            "code": "\nundefined4 calculate_difference_08002978(undefined4 value_1,undefined4 value_2,undefined4 value_3)\n\n{\n  undefined4 squared_value_2;\n  undefined4 double_value_1;\n  undefined8 decimal_value_1;\n  \n  squared_value_2 = __aeabi_fmul(value_2,value_2);\n  double_value_1 = __addsf3(value_1,value_1);\n  double_value_1 = __aeabi_fmul(double_value_1,value_3);\n  squared_value_2 = __aeabi_fsub(squared_value_2,double_value_1);\n  decimal_value_1 = __aeabi_f2d(squared_value_2);\n  decimal_value_1 = sqrt((int)decimal_value_1,(int)((ulonglong)decimal_value_1 >> 0x20));\n  squared_value_2 = __truncdfsf2((int)decimal_value_1,(int)((ulonglong)decimal_value_1 >> 0x20));\n  return squared_value_2;\n}\n\n",
            "renaming": {
                "FUN_08002978": "calculate_difference_08002978",
                "param_1": "value_1",
                "param_2": "value_2",
                "param_3": "value_3",
                "uVar1": "squared_value_2",
                "uVar2": "double_value_1",
                "uVar3": "decimal_value_1"
            },
            "calling": [
                "planner_forward_pass_kernel",
                "planner_reverse_pass_kernel",
                "plan_buffer_line"
            ],
            "called": [
                "sqrt",
                "__aeabi_f2d",
                "__aeabi_fsub",
                "__truncdfsf2",
                "__addsf3",
                "__aeabi_fmul"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080029d8": {
            "entrypoint": "0x080029d8",
            "current_name": "update_speed_080029d8",
            "code": "\nvoid updateSpeed_080029d8(undefined4 state,int vehicleData,int controlData)\n\n{\n  int isSameSpeed;\n  undefined4 newSpeed;\n  undefined4 currentSpeed;\n  \n  if (((vehicleData != 0) && (controlData != 0)) &&\n     (isSameSpeed = __aeabi_fcmpeq(*(undefined4 *)(vehicleData + 0x18),*(undefined4 *)(vehicleData + 0x1c)),\n     isSameSpeed == 0)) {\n    if ((*(char *)(vehicleData + 0x25) == '\\0') &&\n       (isSameSpeed = __aeabi_fcmpgt(*(undefined4 *)(vehicleData + 0x1c),*(undefined4 *)(controlData + 0x18)),\n       isSameSpeed != 0)) {\n      currentSpeed = *(undefined4 *)(vehicleData + 0x1c);\n      newSpeed = max_allowable_speed(DAT_20000edc ^ 0x80000000,*(undefined4 *)(controlData + 0x18),\n                                  *(undefined4 *)(vehicleData + 0x20));\n      isSameSpeed = __aeabi_fcmplt(currentSpeed,newSpeed);\n      if (isSameSpeed == 0) {\n        newSpeed = max_allowable_speed(DAT_20000edc ^ 0x80000000,*(undefined4 *)(controlData + 0x18),\n                                    *(undefined4 *)(vehicleData + 0x20));\n      }\n      else {\n        newSpeed = *(undefined4 *)(vehicleData + 0x1c);\n      }\n      *(undefined4 *)(vehicleData + 0x18) = newSpeed;\n    }\n    else {\n      *(undefined4 *)(vehicleData + 0x18) = *(undefined4 *)(vehicleData + 0x1c);\n    }\n    *(undefined *)(vehicleData + 0x24) = 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080029d8": "update_speed_080029d8",
                "param_1": "state",
                "param_2": "vehicleData",
                "param_3": "controlData",
                "iVar1": "isSameSpeed",
                "uVar2": "newSpeed",
                "uVar3": "currentSpeed"
            },
            "calling": [
                "planner_reverse_pass"
            ],
            "called": [
                "__aeabi_fcmplt",
                "max_allowable_speed",
                "__aeabi_fcmpgt",
                "__aeabi_fcmpeq"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002a94": {
            "entrypoint": "0x08002a94",
            "current_name": "reverse_pass_kernel_08002a94",
            "code": "\nvoid reversePassKernel_08002a94(void)\n\n{\n  undefined *tempPtr;\n  undefined *previousBlockPtr;\n  undefined *currentBlockPtr;\n  byte blockIndex;\n  \n  blockIndex = DAT_20000cf0;\n  previousBlockPtr = (undefined *)0x0;\n  currentBlockPtr = (undefined *)0x0;\n  while (tempPtr = currentBlockPtr, blockIndex != DAT_20000cf1) {\n    blockIndex = prev_block_index(blockIndex);\n    currentBlockPtr = previousBlockPtr;\n    planner_reverse_pass_kernel(&DAT_20000870 + (uint)blockIndex * 0x40,previousBlockPtr,tempPtr);\n    previousBlockPtr = &DAT_20000870 + (uint)blockIndex * 0x40;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002a94": "reverse_pass_kernel_08002a94",
                "local_9": "blockIndex",
                "local_18": "previousBlockPtr",
                "local_14": "currentBlockPtr",
                "puVar1": "tempPtr"
            },
            "calling": [
                "planner_recalculate"
            ],
            "called": [
                "prev_block_index",
                "planner_reverse_pass_kernel"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002afc": {
            "entrypoint": "0x08002afc",
            "current_name": "update_max_allowable_speed_08002afc",
            "code": "\nvoid updateMaxAllowableSpeed_08002afc(int inputData,int outputData)\n\n{\n  int isLower;\n  undefined4 currentSpeed;\n  undefined4 maxSpeed;\n  \n  if (((inputData != 0) && (*(char *)(inputData + 0x25) == '\\0')) &&\n     (isLower = __aeabi_fcmplt(*(undefined4 *)(inputData + 0x18),*(undefined4 *)(outputData + 0x18)),\n     isLower != 0)) {\n    maxSpeed = *(undefined4 *)(outputData + 0x18);\n    currentSpeed = max_allowable_speed(DAT_20000edc ^ 0x80000000,*(undefined4 *)(inputData + 0x18),\n                                *(undefined4 *)(inputData + 0x20));\n    isLower = __aeabi_fcmplt(maxSpeed,currentSpeed);\n    if (isLower == 0) {\n      currentSpeed = max_allowable_speed(DAT_20000edc ^ 0x80000000,*(undefined4 *)(inputData + 0x18),\n                                  *(undefined4 *)(inputData + 0x20));\n    }\n    else {\n      currentSpeed = *(undefined4 *)(outputData + 0x18);\n    }\n    isLower = __aeabi_fcmpeq(currentSpeed,*(undefined4 *)(outputData + 0x18));\n    if (isLower == 0) {\n      *(undefined4 *)(outputData + 0x18) = currentSpeed;\n      *(undefined *)(outputData + 0x24) = 1;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002afc": "update_max_allowable_speed_08002afc",
                "param_1": "inputData",
                "param_2": "outputData",
                "iVar1": "isLower",
                "uVar2": "currentSpeed",
                "uVar3": "maxSpeed"
            },
            "calling": [
                "planner_forward_pass"
            ],
            "called": [
                "__aeabi_fcmplt",
                "max_allowable_speed",
                "__aeabi_fcmpeq"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ba8": {
            "entrypoint": "0x08002ba8",
            "current_name": "planner_forward_pass_08002ba8",
            "code": "\nvoid planner_forward_pass_08002ba8(void)\n\n{\n  uint block_index;\n  undefined *previous_block_copy_old;\n  undefined *previous_block_copy;\n  undefined *previous_block;\n  undefined *current_block;\n  byte current_block_index;\n  \n  previous_block = (undefined *)0x0;\n  current_block = (undefined *)0x0;\n  current_block_index = DAT_20000cf1;\n  previous_block_copy = (undefined *)0x0;\n  while (previous_block_copy_old = previous_block, current_block_index != DAT_20000cf0) {\n    previous_block = current_block;\n    block_index = (uint)current_block_index;\n    planner_forward_pass_08002ba8_kernel(previous_block_copy_old,current_block,&DAT_20000870 + block_index * 0x40);\n    current_block_index = next_block_index(current_block_index);\n    previous_block_copy = previous_block_copy_old;\n    current_block = &DAT_20000870 + block_index * 0x40;\n  }\n  planner_forward_pass_08002ba8_kernel(previous_block,current_block,0,previous_block,previous_block_copy);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ba8": "planner_forward_pass_08002ba8",
                "local_14": "previous_block",
                "local_10": "current_block",
                "local_9": "current_block_index",
                "puVar3": "previous_block_copy",
                "puVar2": "previous_block_copy_old",
                "uVar1": "block_index"
            },
            "calling": [
                "planner_recalculate"
            ],
            "called": [
                "planner_forward_pass_kernel",
                "next_block_index"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002c18": {
            "entrypoint": "0x08002c18",
            "current_name": "calculate_distance_08002c18",
            "code": "\nvoid calculateDistance_08002c18(int object,undefined4 acceleration1,undefined4 acceleration2)\n\n{\n  undefined4 distance1;\n  int accelerationDistance;\n  undefined4 distance2;\n  undefined4 accelerationDistance2;\n  undefined4 totalDistance;\n  uint intersectionDistance;\n  undefined8 temp;\n  int remainingDistance;\n  uint accelerationDistance1;\n  \n  distance1 = __floatunsisf(*(undefined4 *)(object + 0x3c));\n  distance1 = __aeabi_fmul(distance1,acceleration1);\n  temp = __aeabi_f2d(distance1);\n  temp = ceil((int)temp,(int)((ulonglong)temp >> 0x20));\n  distance1 = __aeabi_d2uiz((int)temp,(int)((ulonglong)temp >> 0x20));\n  *(undefined4 *)(object + 0x28) = distance1;\n  distance1 = __floatunsisf(*(undefined4 *)(object + 0x3c));\n  distance1 = __aeabi_fmul(distance1,acceleration2);\n  temp = __aeabi_f2d(distance1);\n  temp = ceil((int)temp,(int)((ulonglong)temp >> 0x20));\n  distance1 = __aeabi_d2uiz((int)temp,(int)((ulonglong)temp >> 0x20));\n  *(undefined4 *)(object + 0x2c) = distance1;\n  temp = __aeabi_i2d(*(int *)(object + 0x30) * 0x32);\n  temp = __muldf3((int)temp,(int)((ulonglong)temp >> 0x20),0,0x404e0000);\n  accelerationDistance = __aeabi_d2iz((int)temp,(int)((ulonglong)temp >> 0x20));\n  distance1 = __floatunsisf(*(undefined4 *)(object + 0x28));\n  distance2 = __floatunsisf(*(undefined4 *)(object + 0x3c));\n  accelerationDistance2 = __floatsisf(accelerationDistance);\n  distance1 = estimate_acceleration_distance(distance1,distance2,accelerationDistance2);\n  temp = __aeabi_f2d(distance1);\n  temp = ceil((int)temp,(int)((ulonglong)temp >> 0x20));\n  accelerationDistance1 = __aeabi_d2iz((int)temp,(int)((ulonglong)temp >> 0x20));\n  distance1 = __floatunsisf(*(undefined4 *)(object + 0x3c));\n  distance2 = __floatunsisf(*(undefined4 *)(object + 0x2c));\n  accelerationDistance2 = __floatsisf(-accelerationDistance);\n  distance1 = estimate_acceleration_distance(distance1,distance2,accelerationDistance2);\n  temp = __aeabi_f2d(distance1);\n  temp = floor((int)temp,(int)((ulonglong)temp >> 0x20));\n  remainingDistance = __aeabi_d2iz((int)temp,(int)((ulonglong)temp >> 0x20));\n  remainingDistance = (*(int *)(object + 0x10) - accelerationDistance1) - remainingDistance;\n  if (remainingDistance < 0) {\n    distance1 = __floatunsisf(*(undefined4 *)(object + 0x28));\n    distance2 = __floatunsisf(*(undefined4 *)(object + 0x2c));\n    accelerationDistance2 = __floatsisf(accelerationDistance);\n    totalDistance = __floatsisf(*(undefined4 *)(object + 0x10));\n    distance1 = intersection_distance(distance1,distance2,accelerationDistance2,totalDistance);\n    temp = __aeabi_f2d(distance1);\n    temp = ceil((int)temp,(int)((ulonglong)temp >> 0x20));\n    intersectionDistance = __aeabi_d2iz((int)temp,(int)((ulonglong)temp >> 0x20));\n    intersectionDistance = intersectionDistance & ~((int)intersectionDistance >> 0x1f);\n    accelerationDistance1 = *(uint *)(object + 0x10);\n    if ((int)intersectionDistance <= (int)*(uint *)(object + 0x10)) {\n      accelerationDistance1 = intersectionDistance;\n    }\n    remainingDistance = 0;\n  }\n  *(uint *)(object + 0x34) = accelerationDistance1;\n  *(uint *)(object + 0x38) = remainingDistance + accelerationDistance1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002c18": "calculate_distance_08002c18",
                "param_1": "object",
                "param_2": "acceleration1",
                "param_3": "acceleration2",
                "uVar1": "distance1",
                "iVar2": "accelerationDistance",
                "uVar3": "distance2",
                "uVar4": "accelerationDistance2",
                "uVar5": "totalDistance",
                "uVar6": "intersectionDistance",
                "uVar7": "temp",
                "local_20": "remainingDistance",
                "local_1c": "accelerationDistance1"
            },
            "calling": [
                "planner_recalculate_trapezoids"
            ],
            "called": [
                "__aeabi_f2d",
                "estimate_acceleration_distance",
                "__floatunsisf",
                "__aeabi_d2iz",
                "__floatsisf",
                "__aeabi_d2uiz",
                "ceil",
                "__aeabi_i2d",
                "__aeabi_fmul",
                "floor",
                "intersection_distance",
                "__muldf3"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002e08": {
            "entrypoint": "0x08002e08",
            "current_name": "calculate_trapezoids_08002e08",
            "code": "\nvoid calculate_trapezoids_08002e08(void)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  int block_offset;\n  undefined *block_data;\n  byte block_index;\n  \n  block_data = (undefined *)0x0;\n  block_index = DAT_20000cf1;\n  while (block_index != DAT_20000cf0) {\n    block_offset = (uint)block_index * 0x40;\n    if ((block_data != (undefined *)0x0) &&\n       ((block_data[0x24] != '\\0' || ((&DAT_20000894)[block_offset] != '\\0')))) {\n      uVar1 = __aeabi_fdiv(*(undefined4 *)(block_data + 0x18),*(undefined4 *)(block_data + 0x14));\n      uVar2 = __aeabi_fdiv(*(undefined4 *)(&DAT_20000888 + block_offset),*(undefined4 *)(block_data + 0x14));\n      calculate_trapezoid_for_block(block_data,uVar1,uVar2);\n      block_data[0x24] = 0;\n    }\n    block_index = next_block_index(block_index);\n    block_data = &DAT_20000870 + block_offset;\n  }\n  uVar1 = __aeabi_fdiv(*(undefined4 *)(block_data + 0x18),*(undefined4 *)(block_data + 0x14));\n  uVar2 = __aeabi_fdiv(0,*(undefined4 *)(block_data + 0x14));\n  calculate_trapezoid_for_block(block_data,uVar1,uVar2);\n  block_data[0x24] = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002e08": "calculate_trapezoids_08002e08",
                "local_18": "block_data",
                "local_11": "block_index",
                "iVar3": "block_offset"
            },
            "calling": [
                "planner_recalculate"
            ],
            "called": [
                "next_block_index",
                "calculate_trapezoid_for_block",
                "__aeabi_fdiv"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002edc": {
            "entrypoint": "0x08002edc",
            "current_name": "calculate_and_update_trapezoids_08002edc",
            "code": "\nvoid calculate_and_update_trapezoids_08002edc(void)\n\n{\n  planner_reverse_pass();\n  planner_forward_pass();\n  planner_recalculate_trapezoids();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002edc": "calculate_and_update_trapezoids_08002edc"
            },
            "calling": [
                "plan_cycle_reinitialize",
                "plan_buffer_line"
            ],
            "called": [
                "planner_recalculate_trapezoids",
                "planner_reverse_pass",
                "planner_forward_pass"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002ef0": {
            "entrypoint": "0x08002ef0",
            "current_name": "update_data_and_index_08002ef0",
            "code": "\nvoid updateDataAndIndex_08002ef0(void)\n\n{\n  DAT_20000cf1 = DAT_20000cf0;\n  DAT_20000cf2 = getNextBlockIndex(DAT_20000cf0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002ef0": "update_data_and_index_08002ef0",
                "next_block_index": "getNextBlockIndex"
            },
            "calling": [
                "plan_init"
            ],
            "called": [
                "next_block_index"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f24": {
            "entrypoint": "0x08002f24",
            "current_name": "initialize_buffer_08002f24",
            "code": "\nvoid initialize_buffer_08002f24(void)\n\n{\n  reset_buffer();\n  memset(&DAT_20000cf4,0,0x1c);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f24": "initialize_buffer_08002f24",
                "plan_reset_buffer": "reset_buffer"
            },
            "calling": [
                "grbl_main"
            ],
            "called": [
                "plan_reset_buffer",
                "memset"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f40": {
            "entrypoint": "0x08002f40",
            "current_name": "check_and_increment_block_index_08002f40",
            "code": "\nvoid check_and_increment_block_index_08002f40(void)\n\n{\n  if (DAT_20000cf0 != DAT_20000cf1) {\n    DAT_20000cf1 = next_block_index(DAT_20000cf1);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002f40": "check_and_increment_block_index_08002f40"
            },
            "calling": [
                "step_period_isr"
            ],
            "called": [
                "next_block_index"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002f74": {
            "entrypoint": "0x08002f74",
            "current_name": "get_active_data_pointer_08002f74",
            "code": "\nundefined * getActiveDataPointer_08002f74(void)\n\n{\n  undefined *activeDataPointer;\n  \n  if (DAT_20000cf0 == DAT_20000cf1) {\n    activeDataPointer = (undefined *)0x0;\n  }\n  else {\n    activeDataPointer = &DAT_20000870 + (uint)DAT_20000cf1 * 0x40;\n  }\n  return activeDataPointer;\n}\n\n",
            "renaming": {
                "FUN_08002f74": "get_active_data_pointer_08002f74",
                "puVar1": "activeDataPointer"
            },
            "calling": [
                "step_period_isr",
                "plan_synchronize"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fac": {
            "entrypoint": "0x08002fac",
            "current_name": "check_if_equal_08002fac",
            "code": "\nbool check_if_equal_08002fac(void)\n\n{\n  return DAT_20000cf1 == DAT_20000cf2;\n}\n\n",
            "renaming": {
                "FUN_08002fac": "check_if_equal_08002fac"
            },
            "calling": [
                "mc_line"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08002fd4": {
            "entrypoint": "0x08002fd4",
            "current_name": "execute_until_block_ended_08002fd4",
            "code": "\nvoid execute_until_block_ended_08002fd4(void)\n\n{\n  int current_block;\n  \n  while ((current_block = get_current_block(), current_block != 0 || (DAT_20000ea9 == '\\x03'))) {\n    execute_protocol_runtime();\n    if (DAT_20000ea8 != '\\0') {\n      return;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08002fd4": "execute_until_block_ended_08002fd4",
                "iVar1": "current_block",
                "plan_get_current_block": "get_current_block",
                "protocol_execute_runtime": "execute_protocol_runtime"
            },
            "calling": [
                "spindle_run",
                "gc_execute_line",
                "coolant_run",
                "mc_dwell",
                "mc_go_home"
            ],
            "called": [
                "protocol_execute_runtime",
                "plan_get_current_block"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003004": {
            "entrypoint": "0x08003004",
            "current_name": "calculate_block_properties_08003004",
            "code": "\nvoid calculateBlockProperties_08003004(undefined4 acceleration,undefined4 velocity,undefined4 distance,undefined4 time,\n                 char reverse)\n\n{\n  undefined4 accelerationFloat;\n  int roundedAcceleration;\n  int roundedVelocity;\n  int roundedDistance;\n  undefined4 velocityFloat;\n  undefined4 distanceFloat;\n  undefined4 speedSquared;\n  undefined4 deviationSquared;\n  uint maximumDeviation;\n  int blockIndex;\n  ushort *blockProperty;\n  int deviation;\n  uint tempDeviation;\n  undefined8 tempFloat1;\n  undefined8 tempFloat2;\n  undefined8 tempFloat3;\n  undefined4 maximumSpeed;\n  undefined4 speedParameter;\n  \n  blockIndex = (uint)DAT_20000cf0 * 0x40;\n  blockProperty = (ushort *)(&DAT_20000870 + blockIndex);\n  accelerationFloat = __aeabi_fmul(DAT_20000ebc,acceleration);\n  tempFloat1 = __aeabi_f2d(accelerationFloat);\n  roundedAcceleration = lround((int)tempFloat1,(int)((ulonglong)tempFloat1 >> 0x20));\n  accelerationFloat = __aeabi_fmul(DAT_20000ec0,velocity);\n  tempFloat1 = __aeabi_f2d(accelerationFloat);\n  roundedVelocity = lround((int)tempFloat1,(int)((ulonglong)tempFloat1 >> 0x20));\n  accelerationFloat = __aeabi_fmul(DAT_20000ec4,distance);\n  tempFloat1 = __aeabi_f2d(accelerationFloat);\n  roundedDistance = lround((int)tempFloat1,(int)((ulonglong)tempFloat1 >> 0x20));\n  *blockProperty = 0;\n  if (roundedAcceleration < DAT_20000cf4) {\n    *blockProperty = *blockProperty | 0x20;\n  }\n  if (roundedVelocity < DAT_20000cf8) {\n    *blockProperty = *blockProperty | 0x880;\n  }\n  if (roundedDistance < DAT_20000cfc) {\n    *blockProperty = *blockProperty | 0x200;\n  }\n  deviation = roundedAcceleration - DAT_20000cf4;\n  if (deviation < 0) {\n    deviation = -deviation;\n  }\n  *(int *)(&DAT_20000874 + blockIndex) = deviation;\n  deviation = roundedVelocity - DAT_20000cf8;\n  if (deviation < 0) {\n    deviation = -deviation;\n  }\n  *(int *)(&DAT_20000878 + blockIndex) = deviation;\n  deviation = roundedDistance - DAT_20000cfc;\n  if (deviation < 0) {\n    deviation = -deviation;\n  }\n  *(int *)(&DAT_2000087c + blockIndex) = deviation;\n  maximumDeviation = *(uint *)(&DAT_2000087c + blockIndex);\n  if (*(uint *)(&DAT_2000087c + blockIndex) < *(uint *)(&DAT_20000878 + blockIndex)) {\n    maximumDeviation = *(uint *)(&DAT_20000878 + blockIndex);\n  }\n  tempDeviation = *(uint *)(&DAT_20000874 + blockIndex);\n  if (*(uint *)(&DAT_20000874 + blockIndex) < maximumDeviation) {\n    tempDeviation = maximumDeviation;\n  }\n  *(uint *)(&DAT_20000880 + blockIndex) = tempDeviation;\n  if (*(int *)(&DAT_20000880 + blockIndex) != 0) {\n    accelerationFloat = __floatsisf(roundedAcceleration - DAT_20000cf4);\n    accelerationFloat = __aeabi_fdiv(accelerationFloat,DAT_20000ebc);\n    velocityFloat = __floatsisf(roundedVelocity - DAT_20000cf8);\n    velocityFloat = __aeabi_fdiv(velocityFloat,DAT_20000ec0);\n    distanceFloat = __floatsisf(roundedDistance - DAT_20000cfc);\n    distanceFloat = __aeabi_fdiv(distanceFloat,DAT_20000ec4);\n    speedSquared = __aeabi_fmul(accelerationFloat,accelerationFloat);\n    deviationSquared = __aeabi_fmul(velocityFloat,velocityFloat);\n    speedSquared = __addsf3(speedSquared,deviationSquared);\n    deviationSquared = __aeabi_fmul(distanceFloat,distanceFloat);\n    speedSquared = __addsf3(speedSquared,deviationSquared);\n    tempFloat1 = __aeabi_f2d(speedSquared);\n    tempFloat1 = sqrt((int)tempFloat1,(int)((ulonglong)tempFloat1 >> 0x20));\n    speedSquared = __truncdfsf2((int)tempFloat1,(int)((ulonglong)tempFloat1 >> 0x20));\n    *(undefined4 *)(&DAT_20000890 + blockIndex) = speedSquared;\n    speedSquared = __aeabi_fdiv(0x3f800000,*(undefined4 *)(&DAT_20000890 + blockIndex));\n    if (reverse == '\\0') {\n      speedParameter = __aeabi_fmul(time,speedSquared);\n    }\n    else {\n      speedParameter = __aeabi_fdiv(0x3f800000,time);\n    }\n    deviationSquared = __aeabi_fmul(*(undefined4 *)(&DAT_20000890 + blockIndex),speedParameter);\n    *(undefined4 *)(&DAT_20000884 + blockIndex) = deviationSquared;\n    deviationSquared = __floatsisf(*(undefined4 *)(&DAT_20000880 + blockIndex));\n    deviationSquared = __aeabi_fmul(deviationSquared,speedParameter);\n    tempFloat1 = __aeabi_f2d(deviationSquared);\n    tempFloat1 = ceil((int)tempFloat1,(int)((ulonglong)tempFloat1 >> 0x20));\n    deviationSquared = __aeabi_d2uiz((int)tempFloat1,(int)((ulonglong)tempFloat1 >> 0x20));\n    *(undefined4 *)(&DAT_200008ac + blockIndex) = deviationSquared;\n    deviationSquared = __floatsisf(*(undefined4 *)(&DAT_20000880 + blockIndex));\n    deviationSquared = __aeabi_fmul(deviationSquared,speedSquared);\n    deviationSquared = __aeabi_fmul(deviationSquared,DAT_20000edc);\n    deviationSquared = __aeabi_fdiv(deviationSquared,0x453b8000);\n    tempFloat1 = __aeabi_f2d(deviationSquared);\n    tempFloat1 = ceil((int)tempFloat1,(int)((ulonglong)tempFloat1 >> 0x20));\n    deviationSquared = __aeabi_d2iz((int)tempFloat1,(int)((ulonglong)tempFloat1 >> 0x20));\n    *(undefined4 *)(&DAT_200008a0 + blockIndex) = deviationSquared;\n    maximumDeviation = __aeabi_fmul(accelerationFloat,speedSquared);\n    accelerationFloat = __aeabi_fmul(velocityFloat,speedSquared);\n    velocityFloat = __aeabi_fmul(distanceFloat,speedSquared);\n    maximumSpeed = 0;\n    if ((DAT_20000cf0 != DAT_20000cf1) && (deviation = __aeabi_fcmpgt(DAT_20000d0c,0), deviation != 0)) {\n      distanceFloat = __aeabi_fmul(DAT_20000d00 ^ 0x80000000,maximumDeviation);\n      speedSquared = __aeabi_fmul(DAT_20000d04,accelerationFloat);\n      distanceFloat = __aeabi_fsub(distanceFloat,speedSquared);\n      speedSquared = __aeabi_fmul(DAT_20000d08,velocityFloat);\n      distanceFloat = __aeabi_fsub(distanceFloat,speedSquared);\n      tempFloat1 = __aeabi_f2d(distanceFloat);\n      deviation = __aeabi_dcmplt((int)tempFloat1,(int)((ulonglong)tempFloat1 >> 0x20),0x66666666,0x3fee6666);\n      if (deviation != 0) {\n        deviation = __aeabi_fcmplt(DAT_20000d0c,*(undefined4 *)(&DAT_20000884 + blockIndex));\n        maximumSpeed = DAT_20000d0c;\n        if (deviation == 0) {\n          maximumSpeed = *(undefined4 *)(&DAT_20000884 + blockIndex);\n        }\n        tempFloat1 = __aeabi_f2d(distanceFloat);\n        deviation = __aeabi_dcmpgt((int)tempFloat1,(int)((ulonglong)tempFloat1 >> 0x20),0x66666666,0xbfee6666);\n        if (deviation != 0) {\n          tempFloat1 = __aeabi_f2d(distanceFloat);\n          tempFloat1 = __subdf3(0,0x3ff00000,(int)tempFloat1,(int)((ulonglong)tempFloat1 >> 0x20));\n          tempFloat1 = __muldf3((int)tempFloat1,(int)((ulonglong)tempFloat1 >> 0x20),0,0x3fe00000);\n          tempFloat1 = sqrt((int)tempFloat1,(int)((ulonglong)tempFloat1 >> 0x20));\n          distanceFloat = __truncdfsf2((int)tempFloat1,(int)((ulonglong)tempFloat1 >> 0x20));\n          tempFloat1 = __aeabi_f2d(maximumSpeed);\n          speedSquared = __aeabi_fmul(DAT_20000edc,DAT_20000ee0);\n          speedSquared = __aeabi_fmul(speedSquared,distanceFloat);\n          tempFloat2 = __aeabi_f2d(speedSquared);\n          tempFloat3 = __aeabi_f2d(distanceFloat);\n          tempFloat3 = __subdf3(0,0x3ff00000,(int)tempFloat3,(int)((ulonglong)tempFloat3 >> 0x20));\n          tempFloat2 = __divdf3((int)tempFloat2,(int)((ulonglong)tempFloat2 >> 0x20),(int)tempFloat3,\n                            (int)((ulonglong)tempFloat3 >> 0x20));\n          tempFloat2 = sqrt((int)tempFloat2,(int)((ulonglong)tempFloat2 >> 0x20));\n          deviation = __aeabi_dcmplt((int)tempFloat1,(int)((ulonglong)tempFloat1 >> 0x20),(int)tempFloat2,\n                                  (int)((ulonglong)tempFloat2 >> 0x20));\n          if (deviation == 0) {\n            speedSquared = __aeabi_fmul(DAT_20000edc,DAT_20000ee0);\n            speedSquared = __aeabi_fmul(speedSquared,distanceFloat);\n            tempFloat1 = __aeabi_f2d(speedSquared);\n            tempFloat2 = __aeabi_f2d(distanceFloat);\n            tempFloat2 = __subdf3(0,0x3ff00000,(int)tempFloat2,(int)((ulonglong)tempFloat2 >> 0x20));\n            tempFloat1 = __divdf3((int)tempFloat1,(int)((ulonglong)tempFloat1 >> 0x20),(int)tempFloat2,\n                              (int)((ulonglong)tempFloat2 >> 0x20));\n            tempFloat1 = sqrt((int)tempFloat1,(int)((ulonglong)tempFloat1 >> 0x20));\n            maximumSpeed = __truncdfsf2((int)tempFloat1,(int)((ulonglong)tempFloat1 >> 0x20));\n          }\n        }\n      }\n    }\n    *(undefined4 *)(&DAT_2000088c + blockIndex) = maximumSpeed;\n    speedSquared = max_allowable_speed(DAT_20000edc ^ 0x80000000,0,*(undefined4 *)(&DAT_20000890 + blockIndex))\n    ;\n    deviation = __aeabi_fcmplt(maximumSpeed,speedSquared);\n    distanceFloat = speedSquared;\n    if (deviation != 0) {\n      distanceFloat = maximumSpeed;\n    }\n    *(undefined4 *)(&DAT_20000888 + blockIndex) = distanceFloat;\n    deviation = __aeabi_fcmpge(speedSquared,*(undefined4 *)(&DAT_20000884 + blockIndex));\n    if (deviation == 0) {\n      (&DAT_20000895)[blockIndex] = 0;\n    }\n    else {\n      (&DAT_20000895)[blockIndex] = 1;\n    }\n    (&DAT_20000894)[blockIndex] = 1;\n    DAT_20000d0c = *(undefined4 *)(&DAT_20000884 + blockIndex);\n    DAT_20000cf0 = DAT_20000cf2;\n    DAT_20000d00 = maximumDeviation;\n    DAT_20000d04 = accelerationFloat;\n    DAT_20000d08 = velocityFloat;\n    DAT_20000cf2 = next_block_index(DAT_20000cf2);\n    DAT_20000cf4 = roundedAcceleration;\n    DAT_20000cf8 = roundedVelocity;\n    DAT_20000cfc = roundedDistance;\n    planner_recalculate();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003004": "calculate_block_properties_08003004",
                "param_1": "acceleration",
                "param_2": "velocity",
                "param_3": "distance",
                "param_4": "time",
                "param_5": "reverse",
                "uVar1": "accelerationFloat",
                "iVar2": "roundedAcceleration",
                "iVar3": "roundedVelocity",
                "iVar4": "roundedDistance",
                "uVar9": "maximumDeviation",
                "iVar10": "blockIndex",
                "puVar11": "blockProperty",
                "iVar12": "deviation",
                "uVar13": "tempDeviation",
                "uVar14": "tempFloat1",
                "uVar15": "tempFloat2",
                "uVar16": "tempFloat3",
                "local_20": "maximumSpeed",
                "local_1c": "speedParameter",
                "uVar5": "velocityFloat",
                "uVar6": "distanceFloat",
                "uVar7": "speedSquared",
                "uVar8": "deviationSquared"
            },
            "calling": [
                "mc_line"
            ],
            "called": [
                "sqrt",
                "__aeabi_dcmpgt",
                "__aeabi_fsub",
                "__aeabi_d2iz",
                "next_block_index",
                "__aeabi_fmul",
                "__aeabi_fcmpge",
                "__addsf3",
                "__aeabi_fdiv",
                "max_allowable_speed",
                "planner_recalculate",
                "lround",
                "__subdf3",
                "__aeabi_f2d",
                "__floatsisf",
                "__aeabi_d2uiz",
                "ceil",
                "__aeabi_fcmplt",
                "__truncdfsf2",
                "__divdf3",
                "__aeabi_fcmpgt",
                "__muldf3",
                "__aeabi_dcmplt"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080035ec": {
            "entrypoint": "0x080035ec",
            "current_name": "initialize_data_080035ec",
            "code": "\nvoid initializeData_080035ec(undefined4 data1,undefined4 data2,undefined4 data3)\n\n{\n  DAT_20000cf4 = data1;\n  DAT_20000cf8 = data2;\n  DAT_20000cfc = data3;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080035ec": "initialize_data_080035ec",
                "param_1": "data1",
                "param_2": "data2",
                "param_3": "data3"
            },
            "calling": [
                "sys_sync_current_position"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003618": {
            "entrypoint": "0x08003618",
            "current_name": "update_planner_data_08003618",
            "code": "\nvoid updatePlannerData_08003618(undefined4 inputValue)\n\n{\n  undefined4 convertedValue;\n  int index;\n  undefined4 dataValue;\n  \n  index = (uint)DAT_20000cf1 * 0x40;\n  dataValue = *(undefined4 *)(&DAT_20000890 + index);\n  convertedValue = __floatsisf(inputValue);\n  convertedValue = __aeabi_fmul(dataValue,convertedValue);\n  dataValue = __floatsisf(*(undefined4 *)(&DAT_20000880 + index));\n  convertedValue = __aeabi_fdiv(convertedValue,dataValue);\n  *(undefined4 *)(&DAT_20000890 + index) = convertedValue;\n  *(undefined4 *)(&DAT_20000880 + index) = inputValue;\n  *(undefined4 *)(&DAT_20000888 + index) = 0;\n  *(undefined4 *)(&DAT_2000088c + index) = 0;\n  (&DAT_20000895)[index] = 0;\n  (&DAT_20000894)[index] = 1;\n  planner_recalculate();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003618": "update_planner_data_08003618",
                "param_1": "inputValue",
                "uVar1": "convertedValue",
                "iVar2": "index",
                "uVar3": "dataValue"
            },
            "calling": [
                "st_cycle_reinitialize"
            ],
            "called": [
                "__floatsisf",
                "__aeabi_fmul",
                "__aeabi_fdiv",
                "planner_recalculate"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800369c": {
            "entrypoint": "0x0800369c",
            "current_name": "print_string_0800369c",
            "code": "\nvoid print_string_0800369c(char *string)\n\n{\n  char *current_char;\n  \n  current_char = string;\n  while (*current_char != '\\0') {\n    serial_write(*current_char);\n    current_char = current_char + 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800369c": "print_string_0800369c",
                "param_1": "string",
                "local_c": "current_char"
            },
            "calling": [
                "protocol_execute_startup",
                "report_startup_line"
            ],
            "called": [
                "serial_write"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036c6": {
            "entrypoint": "0x080036c6",
            "current_name": "print_string_080036c6",
            "code": "\nvoid print_string_080036c6(char *string)\n\n{\n  char *current_char;\n  \n  current_char = string;\n  while (*current_char != '\\0') {\n    serial_write(*current_char);\n    current_char = current_char + 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080036c6": "print_string_080036c6",
                "param_1": "string",
                "local_c": "current_char"
            },
            "calling": [
                "report_gcode_parameters",
                "report_feedback_message",
                "report_init_message",
                "report_grbl_settings",
                "report_grbl_help",
                "report_status_message",
                "report_alarm_message",
                "report_startup_line",
                "report_realtime_status",
                "report_gcode_modes"
            ],
            "called": [
                "serial_write"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080036f0": {
            "entrypoint": "0x080036f0",
            "current_name": "output_binary_representation_080036f0",
            "code": "\nvoid outputBinaryRepresentation_080036f0(uint value,int numBits)\n\n{\n  undefined4 outputCharacter;\n  int bitPosition;\n  uint bitMask;\n  \n  bitMask = 1 << (numBits - 1U & 0xff);\n  for (bitPosition = 0; bitPosition < numBits; bitPosition = bitPosition + 1) {\n    if ((bitMask & value) == 0) {\n      outputCharacter = 0x30;\n    }\n    else {\n      outputCharacter = 0x31;\n    }\n    serial_write(outputCharacter);\n    bitMask = bitMask >> 1;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080036f0": "output_binary_representation_080036f0",
                "param_1": "value",
                "param_2": "numBits",
                "local_10": "bitPosition",
                "local_c": "bitMask",
                "uVar1": "outputCharacter"
            },
            "calling": [
                "print_uint8_base2",
                "print_uint16_base2"
            ],
            "called": [
                "serial_write"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003740": {
            "entrypoint": "0x08003740",
            "current_name": "print_binary_08003740",
            "code": "\nvoid print_binary_08003740(undefined input_value)\n\n{\n  print_base2(input_value,8);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003740": "print_binary_08003740",
                "param_1": "input_value"
            },
            "calling": [],
            "called": [
                "print_base2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800375c": {
            "entrypoint": "0x0800375c",
            "current_name": "print_in_base2_0800375c",
            "code": "\nvoid print_in_base2_0800375c(undefined2 value)\n\n{\n  convert_to_base2(value,0x10);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800375c": "print_in_base2_0800375c",
                "param_1": "value",
                "print_base2": "convert_to_base2"
            },
            "calling": [
                "report_grbl_settings"
            ],
            "called": [
                "print_base2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003778": {
            "entrypoint": "0x08003778",
            "current_name": "print_number_08003778",
            "code": "\nvoid print_number_08003778(uint number)\n\n{\n  uint counter;\n  uint remaining_number;\n  char digits [12];\n  byte num_digits;\n  \n  num_digits = 0;\n  remaining_number = number;\n  if (number == 0) {\n    serial_write(0x30);\n  }\n  else {\n    for (; remaining_number != 0; remaining_number = remaining_number / 10) {\n      counter = (uint)num_digits;\n      num_digits = num_digits + 1;\n      digits[counter + 1] = (char)(remaining_number % 10) + '0';\n    }\n    for (; num_digits != 0; num_digits = num_digits - 1) {\n      serial_write(digits[num_digits]);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003778": "print_number_08003778",
                "param_1": "number",
                "uVar1": "counter",
                "local_1c": "remaining_number",
                "acStack_15": "digits",
                "local_9": "num_digits"
            },
            "calling": [
                "printInteger"
            ],
            "called": [
                "serial_write"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080037fc": {
            "entrypoint": "0x080037fc",
            "current_name": "print_absolute_value_080037fc",
            "code": "\nvoid printAbsoluteValue_080037fc(int value)\n\n{\n  int absoluteValue;\n  \n  absoluteValue = value;\n  if (value < 0) {\n    serial_write(0x2d);\n    absoluteValue = -value;\n  }\n  print_uint32_base10(absoluteValue);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080037fc": "print_absolute_value_080037fc",
                "param_1": "value",
                "local_c": "absoluteValue"
            },
            "calling": [
                "report_grbl_settings",
                "report_startup_line",
                "report_gcode_modes"
            ],
            "called": [
                "print_uint32_base10",
                "serial_write"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003826": {
            "entrypoint": "0x08003826",
            "current_name": "convert_float_to_ascii_08003826",
            "code": "\nvoid convertFloatToAscii_08003826(uint inputFloat)\n\n{\n  int isNegative;\n  undefined4 normalizedFloat;\n  byte extraDigit;\n  uint currentDigit;\n  uint floatValue;\n  char asciiRepresentation [13];\n  uint integerPart;\n  byte numDigits;\n  byte local_9;\n  \n  isNegative = __aeabi_fcmplt(inputFloat,0);\n  floatValue = inputFloat;\n  if (isNegative != 0) {\n    serial_write(0x2d);\n    floatValue = inputFloat ^ 0x80000000;\n  }\n  for (local_9 = DAT_20000ef9; 1 < local_9; local_9 = local_9 - 2) {\n    floatValue = __aeabi_fmul(floatValue,0x42c80000);\n  }\n  if (local_9 != 0) {\n    floatValue = __aeabi_fmul(floatValue,0x41200000);\n  }\n  normalizedFloat = __addsf3(floatValue,0x3f000000);\n  numDigits = 0;\n  integerPart = __aeabi_f2iz(normalizedFloat);\n  asciiRepresentation[DAT_20000ef9 + 1] = '.';\n  for (; integerPart != 0; integerPart = integerPart / 10) {\n    if (numDigits == DAT_20000ef9) {\n      numDigits = numDigits + 1;\n    }\n    currentDigit = (uint)numDigits;\n    numDigits = numDigits + 1;\n    asciiRepresentation[currentDigit + 1] = (char)(integerPart % 10) + '0';\n  }\n  while (numDigits < DAT_20000ef9) {\n    currentDigit = (uint)numDigits;\n    numDigits = numDigits + 1;\n    asciiRepresentation[currentDigit + 1] = '0';\n  }\n  if (numDigits == DAT_20000ef9) {\n    extraDigit = numDigits + 1;\n    numDigits = numDigits + 2;\n    asciiRepresentation[extraDigit + 1] = '0';\n  }\n  for (; numDigits != 0; numDigits = numDigits - 1) {\n    serial_write(asciiRepresentation[numDigits]);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003826": "convert_float_to_ascii_08003826",
                "param_1": "inputFloat",
                "iVar1": "isNegative",
                "uVar2": "normalizedFloat",
                "bVar3": "extraDigit",
                "uVar4": "currentDigit",
                "local_24": "floatValue",
                "acStack_1d": "asciiRepresentation",
                "local_10": "integerPart",
                "local_a": "numDigits"
            },
            "calling": [
                "report_gcode_parameters",
                "report_grbl_settings",
                "report_realtime_status",
                "report_gcode_modes"
            ],
            "called": [
                "__aeabi_fcmplt",
                "__addsf3",
                "__aeabi_fmul",
                "__aeabi_f2iz",
                "serial_write"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003980": {
            "entrypoint": "0x08003980",
            "current_name": "initialize_data_08003980",
            "code": "\nvoid initializeData_08003980(void)\n\n{\n  DAT_20000e10 = 0;\n  DAT_20000e11 = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003980": "initialize_data_08003980"
            },
            "calling": [
                "protocol_process",
                "protocol_init"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080039a0": {
            "entrypoint": "0x080039a0",
            "current_name": "initialize_protocol_080039a0",
            "code": "\nvoid initializeProtocol_080039a0(void)\n\n{\n  resetLineBuffer();\n  displayInitializationMessage();\n  DAT_20000e50 = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080039a0": "initialize_protocol_080039a0",
                "protocol_reset_line_buffer": "resetLineBuffer",
                "report_init_message": "displayInitializationMessage"
            },
            "calling": [
                "grbl_main"
            ],
            "called": [
                "report_init_message",
                "protocol_reset_line_buffer"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080039bc": {
            "entrypoint": "0x080039bc",
            "current_name": "process_startup_lines_080039bc",
            "code": "\nvoid processStartupLines_080039bc(void)\n\n{\n  int result;\n  undefined4 status;\n  byte counter;\n  \n  for (counter = 0; counter < 2; counter = counter + 1) {\n    result = settings_read_startup_line(counter,&DAT_20000d10);\n    if (result == 0) {\n      report_status_message(10);\n    }\n    else if (DAT_20000d10 != '\\0') {\n      printString(&DAT_20000d10);\n      status = gc_execute_line(&DAT_20000d10);\n      report_status_message(status);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080039bc": "process_startup_lines_080039bc",
                "iVar1": "result",
                "uVar2": "status",
                "local_9": "counter"
            },
            "calling": [
                "protocol_execute_line",
                "grbl_main"
            ],
            "called": [
                "gc_execute_line",
                "settings_read_startup_line",
                "printString",
                "report_status_message"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a18": {
            "entrypoint": "0x08003a18",
            "current_name": "check_and_update_flags_08003a18",
            "code": "\nvoid checkAndUpdateFlags_08003a18(uint input)\n\n{\n  if ((input & 0x80) == 0) {\n    if ((input & 0x40) == 0) {\n      if ((input & 0x20) != 0) {\n        DAT_20000eaa = DAT_20000eaa | 2;\n      }\n    }\n    else {\n      DAT_20000eaa = DAT_20000eaa | 8;\n    }\n  }\n  else {\n    resetMachine();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003a18": "check_and_update_flags_08003a18",
                "param_1": "input",
                "mc_reset": "resetMachine"
            },
            "calling": [
                "FUN_080074c8"
            ],
            "called": [
                "mc_reset"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003a74": {
            "entrypoint": "0x08003a74",
            "current_name": "handle_global_status_08003a74",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x08003ad2) */\n\nvoid handle_global_status_08003a74(void)\n\n{\n  byte global_status;\n  \n  global_status = DAT_20000eaa;\n  if (DAT_20000eaa != 0) {\n    if ((DAT_20000eaa & 0x60) != 0) {\n      DAT_20000ea9 = 6;\n      if ((DAT_20000eaa & 0x40) != 0) {\n        report_alarm(0xffffffff);\n        report_feedback(1);\n        do {\n        } while( true );\n      }\n      report_alarm(0xfffffffe);\n      DAT_20000eaa = DAT_20000eaa & 0x9f;\n    }\n    if ((global_status & 0x10) == 0) {\n      if ((global_status & 1) != 0) {\n        report_realtime();\n        DAT_20000eaa = DAT_20000eaa & 0xfe;\n      }\n      if ((global_status & 8) != 0) {\n        feed_hold();\n        DAT_20000eaa = DAT_20000eaa & 0xf7;\n      }\n      if ((global_status & 4) != 0) {\n        cycle_reinitialize();\n        DAT_20000eaa = DAT_20000eaa & 0xfb;\n      }\n      if ((global_status & 2) != 0) {\n        cycle_start();\n        if ((DAT_20000ee4 & 2) != 0) {\n          DAT_20000eb8 = 1;\n        }\n        DAT_20000eaa = DAT_20000eaa & 0xfd;\n      }\n    }\n    else {\n      DAT_20000ea8 = 1;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003a74": "handle_global_status_08003a74",
                "bVar1": "global_status",
                "report_alarm_message": "report_alarm",
                "report_feedback_message": "report_feedback",
                "report_realtime_status": "report_realtime",
                "st_feed_hold": "feed_hold",
                "st_cycle_reinitialize": "cycle_reinitialize",
                "st_cycle_start": "cycle_start"
            },
            "calling": [
                "mc_line",
                "grbl_main",
                "protocol_process",
                "mc_dwell",
                "mc_go_home",
                "plan_synchronize"
            ],
            "called": [
                "st_feed_hold",
                "report_feedback_message",
                "st_cycle_reinitialize",
                "st_cycle_start",
                "report_alarm_message",
                "report_realtime_status"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003b98": {
            "entrypoint": "0x08003b98",
            "current_name": "execute_g_code_command_08003b98",
            "code": "\nuint execute_G_code_command_08003b98(char *command)\n\n{\n  byte command_char;\n  int result;\n  undefined4 converted_value;\n  uint return_code;\n  undefined8 converted_double_value;\n  undefined4 setting_value;\n  undefined4 converted_setting_value;\n  byte command_index;\n  byte startup_line_index;\n  \n  if (*command != '$') {\n    return_code = gc_execute_line(command);\n    return return_code;\n  }\n  command_index = 1;\n  startup_line_index = '\\0';\n  command_char = command[1];\n  if (command_char == 0) {\n    report_grbl_help();\n    return 0;\n  }\n  if ((0x58 < command_char) || (command_char < 0x23)) goto switchD_08003bdc_caseD_25;\n  switch(command_char) {\n  case 0x23:\n    command_index = 2;\n    if (command[2] != '\\0') {\n      return 3;\n    }\n    report_gcode_parameters();\n    break;\n  case 0x24:\n    command_index = 2;\n    if (command[2] != '\\0') {\n      return 3;\n    }\n    report_grbl_settings();\n    break;\n  case 0x43:\n    command_index = 2;\n    if (command[2] != '\\0') {\n      return 3;\n    }\n    if (DAT_20000ea9 == '\\a') {\n      mc_reset();\n      report_feedback_message(5);\n    }\n    else {\n      if (DAT_20000ea9 != '\\0') {\n        return 0xb;\n      }\n      DAT_20000ea9 = '\\a';\n      report_feedback_message(4);\n    }\n    break;\n  case 0x47:\n    command_index = 2;\n    if (command[2] != '\\0') {\n      return 3;\n    }\n    report_gcode_modes();\n    break;\n  case 0x48:\n    if ((DAT_20000ee4 & 0x10) == 0) {\n      return 7;\n    }\n    if ((DAT_20000ea9 != '\\0') && (DAT_20000ea9 != '\\x06')) {\n      return 0xb;\n    }\n    mc_go_home();\n    if (DAT_20000ea8 == '\\0') {\n      protocol_execute_startup();\n    }\n    break;\n  case 0x4e:\n    command_index = 2;\n    if (command[2] == '\\0') {\n      for (startup_line_index = 0; startup_line_index < 2; startup_line_index = startup_line_index + 1) {\n        result = settings_read_startup_line(startup_line_index,command);\n        if (result == 0) {\n          report_status_message(10);\n        }\n        else {\n          report_startup_line(startup_line_index,command);\n        }\n      }\n      return 0;\n    }\n    startup_line_index = '\\x01';\n  default:\nswitchD_08003bdc_caseD_25:\n    result = read_float(command,&command_index,&converted_setting_value);\n    if (result == 0) {\n      return 1;\n    }\n    command_char = command_index + 1;\n    if (command[command_index] != '=') {\n      return 3;\n    }\n    command_index = command_char;\n    if (startup_line_index == '\\0') {\n      result = read_float(command,&command_index,&setting_value);\n      if (result == 0) {\n        return 1;\n      }\n      if (command[command_index] == '\\0') {\n        converted_value = __aeabi_f2iz(converted_setting_value);\n        return_code = settings_store_global_setting(converted_value,setting_value);\n        return return_code;\n      }\n      return 3;\n    }\n    do {\n      command[(uint)command_index - (uint)command_char] = command[command_index];\n      return_code = (uint)command_index;\n      command_index = command_index + 1;\n    } while (command[return_code] != '\\0');\n    startup_line_index = command_char;\n    startup_line_index = gc_execute_line(command);\n    if (startup_line_index != 0) {\n      return (uint)startup_line_index;\n    }\n    converted_double_value = __aeabi_f2d(converted_setting_value);\n    converted_double_value = trunc((int)converted_double_value,(int)((ulonglong)converted_double_value >> 0x20));\n    startup_line_index = __aeabi_d2uiz((int)converted_double_value,(int)((ulonglong)converted_double_value >> 0x20));\n    settings_store_startup_line(startup_line_index,command);\n    break;\n  case 0x58:\n    command_index = 2;\n    if (command[2] != '\\0') {\n      return 3;\n    }\n    if (DAT_20000ea9 == '\\x06') {\n      report_feedback_message(3);\n      DAT_20000ea9 = '\\0';\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08003b98": "execute_g_code_command_08003b98",
                "param_1": "command",
                "bVar1": "command_char",
                "iVar2": "result",
                "uVar3": "converted_value",
                "uVar4": "return_code",
                "uVar5": "converted_double_value",
                "local_14": "setting_value",
                "local_10": "converted_setting_value",
                "local_a": "command_index",
                "local_9": "startup_line_index"
            },
            "calling": [
                "protocol_process"
            ],
            "called": [
                "settings_store_global_setting",
                "gc_execute_line",
                "report_feedback_message",
                "trunc",
                "report_status_message",
                "report_startup_line",
                "__aeabi_f2iz",
                "mc_go_home",
                "__aeabi_f2d",
                "report_gcode_parameters",
                "mc_reset",
                "protocol_execute_startup",
                "__aeabi_d2uiz",
                "report_grbl_settings",
                "settings_store_startup_line",
                "settings_read_startup_line",
                "report_grbl_help",
                "read_float",
                "report_gcode_modes"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08003f34": {
            "entrypoint": "0x08003f34",
            "current_name": "process_serial_input_08003f34",
            "code": "\nvoid process_serial_input_08003f34(void)\n\n{\n  byte input_byte;\n  undefined4 execution_status;\n  uint index;\n  \n  while( true ) {\n    while( true ) {\n      input_byte = serial_read();\n      if (input_byte == 0xff) {\n        return;\n      }\n      if ((input_byte == 10) || (input_byte == 0xd)) break;\n      if (DAT_20000e11 == '\\0') {\n        if ((0x20 < input_byte) && (input_byte != 0x2f)) {\n          if (input_byte == 0x28) {\n            DAT_20000e11 = '\\x01';\n          }\n          else if (DAT_20000e10 == 0xff) {\n            report_status_message(0xd);\n            protocol_reset_line_buffer();\n          }\n          else if ((input_byte < 0x61) || (0x7a < input_byte)) {\n            index = (uint)DAT_20000e10;\n            DAT_20000e10 = DAT_20000e10 + 1;\n            (&DAT_20000d10)[index] = input_byte;\n          }\n          else {\n            index = (uint)DAT_20000e10;\n            DAT_20000e10 = DAT_20000e10 + 1;\n            (&DAT_20000d10)[index] = input_byte - 0x20;\n          }\n        }\n      }\n      else if (input_byte == 0x29) {\n        DAT_20000e11 = '\\0';\n      }\n    }\n    protocol_execute_runtime();\n    if (DAT_20000ea8 != '\\0') break;\n    if (DAT_20000e10 == 0) {\n      report_status_message(0);\n    }\n    else {\n      (&DAT_20000d10)[DAT_20000e10] = 0;\n      execution_status = protocol_execute_line(&DAT_20000d10);\n      report_status_message(execution_status);\n    }\n    protocol_reset_line_buffer();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08003f34": "process_serial_input_08003f34",
                "bVar1": "input_byte",
                "uVar2": "execution_status",
                "uVar3": "index"
            },
            "calling": [
                "grbl_main"
            ],
            "called": [
                "protocol_execute_line",
                "protocol_execute_runtime",
                "report_status_message",
                "protocol_reset_line_buffer",
                "serial_read"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004030": {
            "entrypoint": "0x08004030",
            "current_name": "print_error_message_08004030",
            "code": "\nvoid printErrorMessage_08004030(char errorCode)\n\n{\n  if (errorCode == '\\0') {\n    printProgramString(&DAT_0800b5c8);\n  }\n  else {\n    printProgramString(\"error: \");\n    switch(errorCode) {\n    case '\\x01':\n      printProgramString(\"Bad number format\");\n      break;\n    case '\\x02':\n      printProgramString(\"Expected command letter\");\n      break;\n    case '\\x03':\n      printProgramString(\"Unsupported statement\");\n      break;\n    case '\\x04':\n      printProgramString(\"Invalid radius\");\n      break;\n    case '\\x05':\n      printProgramString(\"Modal group violation\");\n      break;\n    case '\\x06':\n      printProgramString(\"Invalid statement\");\n      break;\n    case '\\a':\n      printProgramString(\"Setting disabled\");\n      break;\n    case '\\b':\n      printProgramString(\"Value < 0.0\");\n      break;\n    case '\\t':\n      printProgramString(\"Value < 3 usec\");\n      break;\n    case '\\n':\n      printProgramString(\"EEPROM read fail. Using defaults\");\n      break;\n    case '\\v':\n      printProgramString(\"Busy or queued\");\n      break;\n    case '\\f':\n      printProgramString(\"Alarm lock\");\n      break;\n    case '\\r':\n      printProgramString(\"Line overflow\");\n    }\n    printProgramString(&DAT_0800b6d8);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004030": "print_error_message_08004030",
                "param_1": "errorCode",
                "printPgmString": "printProgramString"
            },
            "calling": [
                "report_gcode_parameters",
                "protocol_execute_line",
                "protocol_process",
                "protocol_execute_startup",
                "gc_init",
                "settings_init"
            ],
            "called": [
                "printPgmString"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004148": {
            "entrypoint": "0x08004148",
            "current_name": "print_alarm_message_08004148",
            "code": "\nvoid printAlarmMessage_08004148(char alarmCode)\n\n{\n  printProgramString(\"ALARM: \");\n  if (alarmCode == -2) {\n    printProgramString(\"Abort during cycle\");\n  }\n  else if (alarmCode == -1) {\n    printProgramString(\"Hard limit\");\n  }\n  printProgramString(\". MPos?\\r\\n\");\n  delayMilliseconds(500);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004148": "print_alarm_message_08004148",
                "param_1": "alarmCode",
                "printPgmString": "printProgramString",
                "delay_ms": "delayMilliseconds"
            },
            "calling": [
                "protocol_execute_runtime"
            ],
            "called": [
                "delay_ms",
                "printPgmString"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080041a0": {
            "entrypoint": "0x080041a0",
            "current_name": "display_status_message_080041a0",
            "code": "\nvoid displayStatusMessage_080041a0(undefined status)\n\n{\n  printProgramString(&DAT_0800b710);\n  switch(status) {\n  case 1:\n    printProgramString(\"Reset to continue\");\n    break;\n  case 2:\n    printProgramString(\"\\'$H\\'|\\'$X\\' to unlock\");\n    break;\n  case 3:\n    printProgramString(\"Caution: Unlocked\");\n    break;\n  case 4:\n    printProgramString(\"Enabled\");\n    break;\n  case 5:\n    printProgramString(\"Disabled\");\n  }\n  printProgramString(&DAT_0800b764);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080041a0": "display_status_message_080041a0",
                "param_1": "status",
                "printPgmString": "printProgramString"
            },
            "calling": [
                "protocol_execute_line",
                "grbl_main",
                "protocol_execute_runtime"
            ],
            "called": [
                "printPgmString"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004228": {
            "entrypoint": "0x08004228",
            "current_name": "print_initial_message_08004228",
            "code": "\nvoid print_initial_message_08004228(void)\n\n{\n  print_program_string(\"\\r\\nGrbl 0.8c [\\'$\\' for help]\\r\\n\");\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004228": "print_initial_message_08004228",
                "printPgmString": "print_program_string"
            },
            "calling": [
                "protocol_init"
            ],
            "called": [
                "printPgmString"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800423c": {
            "entrypoint": "0x0800423c",
            "current_name": "print_grbl_menu_0800423c",
            "code": "\nvoid printGrblMenu_0800423c(void)\n\n{\n  printGrblString(\n                \"$$ (view Grbl settings)\\r\\n$# (view # parameters)\\r\\n$G (view parser state)\\r\\n$N (view startup blocks)\\r\\n$x=value (save Grbl setting)\\r\\n$Nx=line (save startup block)\\r\\n$C (check gcode mode)\\r\\n$X (kill alarm lock)\\r\\n$H (run homing cycle)\\r\\n~ (cycle start)\\r\\n! (feed hold)\\r\\n? (current status)\\r\\nctrl-x (reset Grbl)\\r\\n\"\n                );\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800423c": "print_grbl_menu_0800423c",
                "printPgmString": "printGrblString"
            },
            "calling": [
                "protocol_execute_line"
            ],
            "called": [
                "printPgmString"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004250": {
            "entrypoint": "0x08004250",
            "current_name": "print_configuration_08004250",
            "code": "\nvoid printConfiguration_08004250(void)\n\n{\n  undefined4 accelerationDivisor;\n  \n  printPgmString(&DAT_0800b8b8);\n  printFloat(DAT_20000ebc);\n  printPgmString(\" (x, step/mm)\\r\\n$1=\");\n  printFloat(DAT_20000ec0);\n  printPgmString(\" (y, step/mm)\\r\\n$2=\");\n  printFloat(DAT_20000ec4);\n  printPgmString(\" (z, step/mm)\\r\\n$3=\");\n  printInteger(DAT_20000ec9);\n  printPgmString(\" (step pulse, usec)\\r\\n$4=\");\n  printFloat(DAT_20000ecc);\n  printPgmString(\" (default feed, mm/min)\\r\\n$5=\");\n  printFloat(DAT_20000ed0);\n  printPgmString(\" (default seek, mm/min)\\r\\n$6=\");\n  printInteger(DAT_20000ed4);\n  printPgmString(\" (step port invert mask, int:\");\n  print_uint16_base2(DAT_20000ed4);\n  printPgmString(\")\\r\\n$7=\");\n  printInteger(DAT_20000ef8);\n  printPgmString(\" (step idle delay, msec)\\r\\n$8=\");\n  accelerationDivisor = __aeabi_fdiv(DAT_20000edc,0x45610000);\n  printFloat(accelerationDivisor);\n  printPgmString(\" (acceleration, mm/sec^2)\\r\\n$9=\");\n  printFloat(DAT_20000ee0);\n  printPgmString(\" (junction deviation, mm)\\r\\n$10=\");\n  printFloat(DAT_20000ed8);\n  printPgmString(\" (arc, mm/segment)\\r\\n$11=\");\n  printInteger(DAT_20000efa);\n  printPgmString(\" (n-arc correction, int)\\r\\n$12=\");\n  printInteger(DAT_20000ef9);\n  printPgmString(\" (n-decimals, int)\\r\\n$13=\");\n  printInteger((DAT_20000ee4 & 1) != 0);\n  printPgmString(\" (report inches, bool)\\r\\n$14=\");\n  printInteger((DAT_20000ee4 & 2) != 0);\n  printPgmString(\" (auto start, bool)\\r\\n$15=\");\n  printInteger((DAT_20000ee4 & 4) != 0);\n  printPgmString(\" (invert step enable, bool)\\r\\n$16=\");\n  printInteger((DAT_20000ee4 & 8) != 0);\n  printPgmString(\" (hard limits, bool)\\r\\n$17=\");\n  printInteger((DAT_20000ee4 & 0x10) != 0);\n  printPgmString(\" (homing cycle, bool)\\r\\n$18=\");\n  printInteger(DAT_20000ee6);\n  printPgmString(\" (homing dir invert mask, int:\");\n  print_uint16_base2(DAT_20000ee6);\n  printPgmString(\")\\r\\n$19=\");\n  printFloat(DAT_20000ee8);\n  printPgmString(\" (homing feed, mm/min)\\r\\n$20=\");\n  printFloat(DAT_20000eec);\n  printPgmString(\" (homing seek, mm/min)\\r\\n$21=\");\n  printInteger(DAT_20000ef0);\n  printPgmString(\" (homing debounce, msec)\\r\\n$22=\");\n  printFloat(DAT_20000ef4);\n  printPgmString(\" (homing pull-off, mm)\\r\\n$23=\");\n  printInteger(DAT_20000ed6);\n  printPgmString(\" (dir port invert mask, int:\");\n  print_uint16_base2(DAT_20000ed6);\n  printPgmString(&DAT_0800bb94);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004250": "print_configuration_08004250",
                "uVar1": "accelerationDivisor"
            },
            "calling": [
                "protocol_execute_line",
                "settings_init"
            ],
            "called": [
                "printPgmString",
                "print_uint16_base2",
                "__aeabi_fdiv",
                "printInteger",
                "printFloat"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080044e8": {
            "entrypoint": "0x080044e8",
            "current_name": "print_g92_coordinates_080044e8",
            "code": "\nvoid printG92Coordinates_080044e8(void)\n\n{\n  int coordDataResult;\n  undefined4 truncatedFloat;\n  undefined8 convertedFloat;\n  undefined4 coordDataArray [3];\n  byte coordIndex;\n  byte coordIndex;\n  \n  coordIndex = 0;\n  while( true ) {\n    if (7 < coordIndex) {\n      printPgmString(\"[G92:\");\n      for (coordIndex = 0; coordIndex < 3; coordIndex = coordIndex + 1) {\n        if ((DAT_20000ee4 & 1) == 0) {\n          printFloat(*(undefined4 *)(&DAT_20000e74 + (coordIndex + 10) * 4));\n        }\n        else {\n          convertedFloat = __aeabi_f2d(*(undefined4 *)(&DAT_20000e74 + (coordIndex + 10) * 4));\n          convertedFloat = __muldf3((int)convertedFloat,(int)((ulonglong)convertedFloat >> 0x20),0x57e16865,0x3fa42851);\n          truncatedFloat = __truncdfsf2((int)convertedFloat,(int)((ulonglong)convertedFloat >> 0x20));\n          printFloat(truncatedFloat);\n        }\n        if (coordIndex < 2) {\n          printPgmString(&DAT_0800bbbc);\n        }\n        else {\n          printPgmString(&DAT_0800b764);\n        }\n      }\n      return;\n    }\n    coordDataResult = settings_read_coord_data(coordIndex,coordDataArray);\n    if (coordDataResult == 0) break;\n    printPgmString(&DAT_0800bb98);\n    switch(coordIndex) {\n    case 0:\n      printPgmString(&DAT_0800bb9c);\n      break;\n    case 1:\n      printPgmString(&DAT_0800bba0);\n      break;\n    case 2:\n      printPgmString(&DAT_0800bba4);\n      break;\n    case 3:\n      printPgmString(&DAT_0800bba8);\n      break;\n    case 4:\n      printPgmString(&DAT_0800bbac);\n      break;\n    case 5:\n      printPgmString(&DAT_0800bbb0);\n      break;\n    case 6:\n      printPgmString(&DAT_0800bbb4);\n      break;\n    case 7:\n      printPgmString(&DAT_0800bbb8);\n    }\n    for (coordIndex = 0; coordIndex < 3; coordIndex = coordIndex + 1) {\n      if ((DAT_20000ee4 & 1) == 0) {\n        printFloat(coordDataArray[coordIndex]);\n      }\n      else {\n        convertedFloat = __aeabi_f2d(coordDataArray[coordIndex]);\n        convertedFloat = __muldf3((int)convertedFloat,(int)((ulonglong)convertedFloat >> 0x20),0x57e16865,0x3fa42851);\n        truncatedFloat = __truncdfsf2((int)convertedFloat,(int)((ulonglong)convertedFloat >> 0x20));\n        printFloat(truncatedFloat);\n      }\n      if (coordIndex < 2) {\n        printPgmString(&DAT_0800bbbc);\n      }\n      else {\n        printPgmString(&DAT_0800b764);\n      }\n    }\n    coordIndex = coordIndex + 1;\n  }\n  report_status_message(10);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080044e8": "print_g92_coordinates_080044e8",
                "iVar1": "coordDataResult",
                "uVar2": "truncatedFloat",
                "uVar3": "convertedFloat",
                "auStack_18": "coordDataArray",
                "local_a": "coordIndex",
                "local_9": "coordIndex"
            },
            "calling": [
                "protocol_execute_line"
            ],
            "called": [
                "__aeabi_f2d",
                "settings_read_coord_data",
                "__truncdfsf2",
                "printPgmString",
                "report_status_message",
                "printFloat",
                "__muldf3"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080046d0": {
            "entrypoint": "0x080046d0",
            "current_name": "display_settings_080046d0",
            "code": "\nvoid displaySettings_080046d0(void)\n\n{\n  undefined4 uVar1;\n  undefined8 uVar2;\n  \n  switch(DAT_20000e71) {\n  case 0:\n    printPgmString(&DAT_0800bbc8);\n    break;\n  case 1:\n    printPgmString(&DAT_0800bbcc);\n    break;\n  case 2:\n    printPgmString(&DAT_0800bbd0);\n    break;\n  case 3:\n    printPgmString(&DAT_0800bbd4);\n    break;\n  case 4:\n    printPgmString(&DAT_0800bbd8);\n  }\n  printPgmString(&DAT_0800bbe0);\n  printInteger(DAT_20000e8c + 0x36);\n  if (DAT_20000e89 == '\\0') {\n    if (DAT_20000e8a == '\\x01') {\n      printPgmString(&DAT_0800bbe4);\n    }\n    else {\n      printPgmString(&DAT_0800bbec);\n    }\n  }\n  else {\n    printPgmString(&DAT_0800bbf4);\n  }\n  if (DAT_20000e73 == '\\0') {\n    printPgmString(&DAT_0800bc04);\n  }\n  else {\n    printPgmString(&DAT_0800bbfc);\n  }\n  if (DAT_20000e74 == '\\0') {\n    printPgmString(&DAT_0800bc14);\n  }\n  else {\n    printPgmString(&DAT_0800bc0c);\n  }\n  if (DAT_20000e72 == '\\0') {\n    printPgmString(&DAT_0800bc24);\n  }\n  else {\n    printPgmString(&DAT_0800bc1c);\n  }\n  if (DAT_20000e75 == 2) {\n    printPgmString(&DAT_0800bc34);\n  }\n  else if (DAT_20000e75 < 3) {\n    if (DAT_20000e75 == 0) {\n      printPgmString(&DAT_0800bc2c);\n    }\n    else if (DAT_20000e75 == 1) {\n      printPgmString(&DAT_0800bc30);\n    }\n  }\n  if (DAT_20000e76 == '\\x01') {\n    printPgmString(&DAT_0800bc38);\n  }\n  else if (DAT_20000e76 < '\\x02') {\n    if (DAT_20000e76 == -1) {\n      printPgmString(&DAT_0800bc3c);\n    }\n    else if (DAT_20000e76 == '\\0') {\n      printPgmString(&DAT_0800bc40);\n    }\n  }\n  if (DAT_20000e77 == 2) {\n    printPgmString(&DAT_0800bc4c);\n  }\n  else if (DAT_20000e77 < 3) {\n    if (DAT_20000e77 == 0) {\n      printPgmString(&DAT_0800bc44);\n    }\n    else if (DAT_20000e77 == 1) {\n      printPgmString(&DAT_0800bc48);\n    }\n  }\n  printPgmString(&DAT_0800bc50);\n  printInteger(DAT_20000e88);\n  printPgmString(&DAT_0800bc54);\n  if (DAT_20000e73 == '\\0') {\n    printFloat(DAT_20000e78);\n  }\n  else {\n    uVar2 = __aeabi_f2d(DAT_20000e78);\n    uVar2 = __muldf3((int)uVar2,(int)((ulonglong)uVar2 >> 0x20),0x57e16865,0x3fa42851);\n    uVar1 = __truncdfsf2((int)uVar2,(int)((ulonglong)uVar2 >> 0x20));\n    printFloat(uVar1);\n  }\n  printPgmString(&DAT_0800b764);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080046d0": "display_settings_080046d0"
            },
            "calling": [
                "protocol_execute_line"
            ],
            "called": [
                "__aeabi_f2d",
                "__truncdfsf2",
                "printPgmString",
                "printInteger",
                "printFloat",
                "__muldf3"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004900": {
            "entrypoint": "0x08004900",
            "current_name": "print_information_08004900",
            "code": "\nvoid printInformation_08004900(undefined data,undefined4 text)\n\n{\n  printPgmString(&DAT_0800bc58);\n  printInteger(data);\n  printPgmString(&DAT_0800bc5c);\n  printString(text);\n  printPgmString(&DAT_0800b6d8);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004900": "print_information_08004900",
                "param_1": "data",
                "param_2": "text"
            },
            "calling": [
                "protocol_execute_line"
            ],
            "called": [
                "printPgmString",
                "printString",
                "printInteger"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004940": {
            "entrypoint": "0x08004940",
            "current_name": "print_machine_status_08004940",
            "code": "\nvoid printMachineStatus_08004940(void)\n\n{\n  undefined4 temp1;\n  uint temp2;\n  undefined4 temp3;\n  undefined8 temp4;\n  undefined8 temp5;\n  undefined4 values [6];\n  byte index;\n  \n  values[3] = DAT_20000eac;\n  values[4] = DAT_20000eb0;\n  values[5] = DAT_20000eb4;\n  switch(DAT_20000ea9) {\n  case 0:\n    printPgmString(\"<Idle\");\n    break;\n  case 2:\n    printPgmString(\"<Queue\");\n    break;\n  case 3:\n    printPgmString(&DAT_0800bc70);\n    break;\n  case 4:\n    printPgmString(\"<Hold\");\n    break;\n  case 5:\n    printPgmString(\"<Home\");\n    break;\n  case 6:\n    printPgmString(\"<Alarm\");\n    break;\n  case 7:\n    printPgmString(\"<Check\");\n  }\n  printPgmString(\",MPos:\");\n  for (index = 0; index < 3; index = index + 1) {\n    temp1 = __floatsisf(values[index + 3]);\n    temp2 = (uint)index;\n    temp1 = __aeabi_fdiv(temp1,(&DAT_20000ebc)[index]);\n    values[temp2] = temp1;\n    if ((DAT_20000ee4 & 1) != 0) {\n      temp4 = __aeabi_f2d(values[index]);\n      temp4 = __muldf3((int)temp4,(int)((ulonglong)temp4 >> 0x20),0x57e16865,0x3fa42851);\n      temp2 = (uint)index;\n      temp1 = __truncdfsf2((int)temp4,(int)((ulonglong)temp4 >> 0x20));\n      values[temp2] = temp1;\n    }\n    printFloat(values[index]);\n    printPgmString(&DAT_0800bbbc);\n  }\n  printPgmString(\"WPos:\");\n  for (index = 0; index < 3; index = index + 1) {\n    if ((DAT_20000ee4 & 1) == 0) {\n      temp3 = values[index];\n      temp1 = __addsf3(*(undefined4 *)(&DAT_20000e70 + (index + 8) * 4),\n                       *(undefined4 *)(&DAT_20000e74 + (index + 10) * 4));\n      temp2 = (uint)index;\n      temp1 = __aeabi_fsub(temp3,temp1);\n      values[temp2] = temp1;\n    }\n    else {\n      temp4 = __aeabi_f2d(values[index]);\n      temp1 = __addsf3(*(undefined4 *)(&DAT_20000e70 + (index + 8) * 4),\n                       *(undefined4 *)(&DAT_20000e74 + (index + 10) * 4));\n      temp5 = __aeabi_f2d(temp1);\n      temp5 = __muldf3((int)temp5,(int)((ulonglong)temp5 >> 0x20),0x57e16865,0x3fa42851);\n      temp4 = __subdf3((int)temp4,(int)((ulonglong)temp4 >> 0x20),(int)temp5,\n                       (int)((ulonglong)temp5 >> 0x20));\n      temp2 = (uint)index;\n      temp1 = __truncdfsf2((int)temp4,(int)((ulonglong)temp4 >> 0x20));\n      values[temp2] = temp1;\n    }\n    printFloat(values[index]);\n    if (index < 2) {\n      printPgmString(&DAT_0800bbbc);\n    }\n  }\n  printPgmString(&DAT_0800bca8);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004940": "print_machine_status_08004940",
                "auStack_2c": "values",
                "local_11": "index",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "uVar3": "temp3",
                "uVar4": "temp4",
                "uVar5": "temp5"
            },
            "calling": [
                "protocol_execute_runtime"
            ],
            "called": [
                "__aeabi_f2d",
                "__aeabi_fsub",
                "__floatsisf",
                "__truncdfsf2",
                "printPgmString",
                "__addsf3",
                "__aeabi_fdiv",
                "__subdf3",
                "printFloat",
                "__muldf3"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004bc0": {
            "entrypoint": "0x08004bc0",
            "current_name": "store_data_in_eeprom_08004bc0",
            "code": "\nvoid storeDataInEEPROM_08004bc0(byte data,undefined4 sourceData)\n\n{\n  writeToEEPROM((address)data * 0x101 + 0x300,sourceData,0x100);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004bc0": "store_data_in_eeprom_08004bc0",
                "param_1": "data",
                "param_2": "sourceData",
                "memcpy_to_eeprom_with_checksum": "writeToEEPROM",
                "ushort": "address"
            },
            "calling": [
                "protocol_execute_line",
                "settings_read_startup_line"
            ],
            "called": [
                "memcpy_to_eeprom_with_checksum"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004bf4": {
            "entrypoint": "0x08004bf4",
            "current_name": "write_data_to_eeprom_08004bf4",
            "code": "\nvoid writeDataToEEPROM_08004bf4(byte dataOffset,undefined4 data)\n\n{\n  copyDataToEEPROM((offsetMultiplier)dataOffset * 0xd + 0x200,data,0xc);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004bf4": "write_data_to_eeprom_08004bf4",
                "param_1": "dataOffset",
                "param_2": "data",
                "memcpy_to_eeprom_with_checksum": "copyDataToEEPROM",
                "ushort": "offsetMultiplier"
            },
            "calling": [
                "settings_read_coord_data",
                "gc_execute_line"
            ],
            "called": [
                "memcpy_to_eeprom_with_checksum"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c2a": {
            "entrypoint": "0x08004c2a",
            "current_name": "store_data_in_eeprom_08004c2a",
            "code": "\nvoid store_data_in_eeprom_08004c2a(void)\n\n{\n  store_byte_in_eeprom(0,5);\n  store_data_in_eeprom_08004c2a_with_checksum(1,&DAT_20000ebc,0x40);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c2a": "store_data_in_eeprom_08004c2a",
                "eeprom_put_char": "store_byte_in_eeprom",
                "memcpy_to_eeprom_with_checksum": "store_data_in_eeprom_with_checksum"
            },
            "calling": [
                "settings_store_global_setting",
                "settings_reset"
            ],
            "called": [
                "eeprom_put_char",
                "memcpy_to_eeprom_with_checksum"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004c48": {
            "entrypoint": "0x08004c48",
            "current_name": "initialize_settings_08004c48",
            "code": "\nvoid initializeSettings_08004c48(char inputParam)\n\n{\n  if (inputParam != '\\0') {\n    DAT_20000ebc = 0x431d7af6;\n    DAT_20000ec0 = 0x431d7af6;\n    DAT_20000ec4 = 0x431d7af6;\n    DAT_20000ec9 = 10;\n    DAT_20000ecc = 0x437a0000;\n    DAT_20000ed0 = 0x43fa0000;\n    DAT_20000edc = 0x470ca000;\n    DAT_20000ed8 = 0x3dcccccd;\n    DAT_20000ed4 = 0;\n    DAT_20000ed6 = 0xa80;\n    DAT_20000ee0 = 0x3d4ccccd;\n  }\n  DAT_20000ee4 = 0x12;\n  DAT_20000ee6 = 0;\n  DAT_20000ee8 = 0x41c80000;\n  DAT_20000eec = 0x437a0000;\n  DAT_20000ef0 = 100;\n  DAT_20000ef4 = 0x3f800000;\n  DAT_20000ef8 = 0x19;\n  DAT_20000ef9 = 3;\n  DAT_20000efa = 0x19;\n  write_global_settings();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08004c48": "initialize_settings_08004c48",
                "param_1": "inputParam"
            },
            "calling": [
                "settings_init",
                "read_global_settings"
            ],
            "called": [
                "write_global_settings"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d2c": {
            "entrypoint": "0x08004d2c",
            "current_name": "read_and_store_startup_line_08004d2c",
            "code": "\nbool readAndStoreStartupLine_08004d2c(byte inputByte,undefined *outputBuffer)\n\n{\n  int errorCode;\n  \n  errorCode = memcpy_from_eeprom_with_checksum(outputBuffer,(ushort)inputByte * 0x101 + 0x300,0x100);\n  if (errorCode == 0) {\n    *outputBuffer = 0;\n    settings_store_startup_line(inputByte,outputBuffer);\n  }\n  return errorCode != 0;\n}\n\n",
            "renaming": {
                "FUN_08004d2c": "read_and_store_startup_line_08004d2c",
                "param_1": "inputByte",
                "param_2": "outputBuffer",
                "iVar1": "errorCode"
            },
            "calling": [
                "protocol_execute_line",
                "protocol_execute_startup"
            ],
            "called": [
                "settings_store_startup_line",
                "memcpy_from_eeprom_with_checksum"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004d7c": {
            "entrypoint": "0x08004d7c",
            "current_name": "copy_data_from_eeprom_08004d7c",
            "code": "\nbool copyDataFromEEPROM_08004d7c(byte srcByte,undefined4 destPointer)\n\n{\n  int copyResult;\n  \n  copyResult = memcpy_from_eeprom_with_checksum(destPointer,(ushort)srcByte * 0xd + 0x200,0xc);\n  if (copyResult == 0) {\n    memset(destPointer,0,0xc);\n    settings_write_coord_data(srcByte,destPointer);\n  }\n  return copyResult != 0;\n}\n\n",
            "renaming": {
                "FUN_08004d7c": "copy_data_from_eeprom_08004d7c",
                "param_1": "srcByte",
                "param_2": "destPointer",
                "iVar1": "copyResult"
            },
            "calling": [
                "report_gcode_parameters",
                "gc_execute_line",
                "gc_init",
                "settings_init"
            ],
            "called": [
                "settings_write_coord_data",
                "memset",
                "memcpy_from_eeprom_with_checksum"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004dd2": {
            "entrypoint": "0x08004dd2",
            "current_name": "initialize_settings_08004dd2",
            "code": "\nundefined4 initializeSettings_08004dd2(void)\n\n{\n  byte eepromValue;\n  int copyStatus;\n  \n  eepromValue = eeprom_get_char(0);\n  if (eepromValue == 5) {\n    copyStatus = memcpy_from_eeprom_with_checksum(&DAT_20000ebc,1,0x40);\n    if (copyStatus == 0) {\n      return 0;\n    }\n  }\n  else {\n    if (4 < eepromValue) {\n      return 0;\n    }\n    copyStatus = memcpy_from_eeprom_with_checksum(&DAT_20000ebc,1,0x28);\n    if (copyStatus == 0) {\n      return 0;\n    }\n    settings_reset(0);\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08004dd2": "initialize_settings_08004dd2",
                "bVar1": "eepromValue",
                "iVar2": "copyStatus"
            },
            "calling": [
                "settings_init"
            ],
            "called": [
                "eeprom_get_char",
                "settings_reset",
                "memcpy_from_eeprom_with_checksum"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08004e30": {
            "entrypoint": "0x08004e30",
            "current_name": "set_global_setting_08004e30",
            "code": "\nundefined4 setGlobalSetting_08004e30(int settingType,uint settingValue)\n\n{\n  undefined4 result;\n  int comparisonResult;\n  undefined8 convertedValue;\n  \n  switch(settingType) {\n  case 0:\n  case 1:\n  case 2:\n    comparisonResult = __aeabi_fcmple(settingValue,0);\n    if (comparisonResult != 0) {\n      return 8;\n    }\n    (&DAT_20000ebc)[settingType] = settingValue;\n    break;\n  case 3:\n    comparisonResult = __aeabi_fcmplt(settingValue,0x40400000);\n    if (comparisonResult != 0) {\n      return 9;\n    }\n    convertedValue = __aeabi_f2d(settingValue);\n    convertedValue = round((int)convertedValue,(int)((ulonglong)convertedValue >> 0x20));\n    DAT_20000ec9 = __aeabi_d2uiz((int)convertedValue,(int)((ulonglong)convertedValue >> 0x20));\n    break;\n  case 4:\n    DAT_20000ecc = settingValue;\n    break;\n  case 5:\n    DAT_20000ed0 = settingValue;\n    break;\n  case 6:\n    convertedValue = __aeabi_f2d(settingValue);\n    convertedValue = trunc((int)convertedValue,(int)((ulonglong)convertedValue >> 0x20));\n    DAT_20000ed4 = __aeabi_d2uiz((int)convertedValue,(int)((ulonglong)convertedValue >> 0x20));\n    break;\n  case 7:\n    convertedValue = __aeabi_f2d(settingValue);\n    convertedValue = round((int)convertedValue,(int)((ulonglong)convertedValue >> 0x20));\n    DAT_20000ef8 = __aeabi_d2uiz((int)convertedValue,(int)((ulonglong)convertedValue >> 0x20));\n    break;\n  case 8:\n    result = __aeabi_fmul(settingValue,0x42700000);\n    DAT_20000edc = __aeabi_fmul(result,0x42700000);\n    break;\n  case 9:\n    DAT_20000ee0 = settingValue & 0x7fffffff;\n    break;\n  case 10:\n    DAT_20000ed8 = settingValue;\n    break;\n  case 0xb:\n    convertedValue = __aeabi_f2d(settingValue);\n    convertedValue = round((int)convertedValue,(int)((ulonglong)convertedValue >> 0x20));\n    DAT_20000efa = __aeabi_d2uiz((int)convertedValue,(int)((ulonglong)convertedValue >> 0x20));\n    break;\n  case 0xc:\n    convertedValue = __aeabi_f2d(settingValue);\n    convertedValue = round((int)convertedValue,(int)((ulonglong)convertedValue >> 0x20));\n    DAT_20000ef9 = __aeabi_d2uiz((int)convertedValue,(int)((ulonglong)convertedValue >> 0x20));\n    break;\n  case 0xd:\n    comparisonResult = __aeabi_fcmpeq(settingValue,0);\n    if (comparisonResult == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 1;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xfe;\n    }\n    break;\n  case 0xe:\n    comparisonResult = __aeabi_fcmpeq(settingValue,0);\n    if (comparisonResult == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 2;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xfd;\n    }\n    break;\n  case 0xf:\n    comparisonResult = __aeabi_fcmpeq(settingValue,0);\n    if (comparisonResult == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 4;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xfb;\n    }\n    break;\n  case 0x10:\n    comparisonResult = __aeabi_fcmpeq(settingValue,0);\n    if (comparisonResult == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 8;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xf7;\n    }\n    limits_init();\n    break;\n  case 0x11:\n    comparisonResult = __aeabi_fcmpeq(settingValue,0);\n    if (comparisonResult == 0) {\n      DAT_20000ee4 = DAT_20000ee4 | 0x10;\n    }\n    else {\n      DAT_20000ee4 = DAT_20000ee4 & 0xef;\n    }\n    break;\n  case 0x12:\n    convertedValue = __aeabi_f2d(settingValue);\n    convertedValue = trunc((int)convertedValue,(int)((ulonglong)convertedValue >> 0x20));\n    DAT_20000ee6 = __aeabi_d2uiz((int)convertedValue,(int)((ulonglong)convertedValue >> 0x20));\n    break;\n  case 0x13:\n    DAT_20000ee8 = settingValue;\n    break;\n  case 0x14:\n    DAT_20000eec = settingValue;\n    break;\n  case 0x15:\n    convertedValue = __aeabi_f2d(settingValue);\n    convertedValue = round((int)convertedValue,(int)((ulonglong)convertedValue >> 0x20));\n    DAT_20000ef0 = __aeabi_d2uiz((int)convertedValue,(int)((ulonglong)convertedValue >> 0x20));\n    break;\n  case 0x16:\n    DAT_20000ef4 = settingValue;\n    break;\n  case 0x17:\n    convertedValue = __aeabi_f2d(settingValue);\n    convertedValue = trunc((int)convertedValue,(int)((ulonglong)convertedValue >> 0x20));\n    DAT_20000ed6 = __aeabi_d2uiz((int)convertedValue,(int)((ulonglong)convertedValue >> 0x20));\n    break;\n  default:\n    return 6;\n  }\n  write_global_settings();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08004e30": "set_global_setting_08004e30",
                "param_1": "settingType",
                "param_2": "settingValue",
                "uVar1": "result",
                "iVar2": "comparisonResult",
                "uVar3": "convertedValue"
            },
            "calling": [
                "protocol_execute_line"
            ],
            "called": [
                "__aeabi_f2d",
                "__aeabi_d2uiz",
                "__aeabi_fcmplt",
                "trunc",
                "__aeabi_fmul",
                "write_global_settings",
                "__aeabi_fcmple",
                "limits_init",
                "round",
                "__aeabi_fcmpeq"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080051b4": {
            "entrypoint": "0x080051b4",
            "current_name": "check_and_reset_settings_080051b4",
            "code": "\nvoid checkAndResetSettings_080051b4(void)\n\n{\n  int result;\n  undefined coordData [15];\n  byte index;\n  \n  result = read_global_settings();\n  if (result == 0) {\n    report_status_message(10);\n    settings_reset(1);\n    report_grbl_settings();\n  }\n  for (index = 0; index < 8; index = index + 1) {\n    result = settings_read_coord_data(index,coordData);\n    if (result == 0) {\n      report_status_message(10);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080051b4": "check_and_reset_settings_080051b4",
                "iVar1": "result",
                "auStack_18": "coordData",
                "local_9": "index"
            },
            "calling": [
                "grbl_main"
            ],
            "called": [
                "settings_read_coord_data",
                "report_grbl_settings",
                "settings_reset",
                "report_status_message",
                "read_global_settings"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005208": {
            "entrypoint": "0x08005208",
            "current_name": "FUNC_08005208",
            "code": "\nvoid FUNC_08005208(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005208": "FUNC_08005208"
            },
            "calling": [
                "spindle_run"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005214": {
            "entrypoint": "0x08005214",
            "current_name": "FUNC_08005214",
            "code": "\nvoid FUNC_08005214(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005214": "FUNC_08005214"
            },
            "calling": [
                "spindle_stop"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005220": {
            "entrypoint": "0x08005220",
            "current_name": "FUNC_08005220",
            "code": "\nvoid FUNC_08005220(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005220": "FUNC_08005220"
            },
            "calling": [
                "spindle_run"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800522c": {
            "entrypoint": "0x0800522c",
            "current_name": "FUNC_0800522c",
            "code": "\nvoid FUNC_0800522c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800522c": "FUNC_0800522c"
            },
            "calling": [
                "spindle_run"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005238": {
            "entrypoint": "0x08005238",
            "current_name": "stop_spindle_08005238",
            "code": "\nvoid stop_spindle_08005238(void)\n\n{\n  DAT_20000e12 = 0;\n  stop_spindle_08005238();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005238": "stop_spindle_08005238",
                "spindle_stop": "stop_spindle"
            },
            "calling": [
                "grbl_main"
            ],
            "called": [
                "spindle_stop"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005250": {
            "entrypoint": "0x08005250",
            "current_name": "turn_spindle_off_08005250",
            "code": "\nvoid turn_spindle_off_08005250(void)\n\n{\n  spindle_off();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005250": "turn_spindle_off_08005250"
            },
            "calling": [
                "mc_reset",
                "spindle_run",
                "spindle_init"
            ],
            "called": [
                "spindle_off"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800525c": {
            "entrypoint": "0x0800525c",
            "current_name": "control_spindle_0800525c",
            "code": "\nvoid controlSpindle_0800525c(byte inputByte)\n\n{\n  if ((int)(char)inputByte != (uint)DAT_20000e12) {\n    synchronizePlan();\n    if (inputByte == 0) {\n      stopSpindle();\n      DAT_20000e12 = inputByte;\n    }\n    else {\n      if ((char)inputByte < '\\x01') {\n        reverseSpindle();\n      }\n      else {\n        forwardSpindle();\n      }\n      turnOnSpindle();\n      DAT_20000e12 = inputByte;\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800525c": "control_spindle_0800525c",
                "param_1": "inputByte",
                "plan_synchronize": "synchronizePlan",
                "spindle_stop": "stopSpindle",
                "spindle_rev": "reverseSpindle",
                "spindle_fwd": "forwardSpindle",
                "spindle_on": "turnOnSpindle"
            },
            "calling": [
                "gc_execute_line"
            ],
            "called": [
                "spindle_rev",
                "spindle_fwd",
                "spindle_stop",
                "spindle_on",
                "plan_synchronize"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080052ac": {
            "entrypoint": "0x080052ac",
            "current_name": "update_data_and_mask_080052ac",
            "code": "\n\n\nvoid updateDataAndMask_080052ac(uint inputValue)\n\n{\n  _DAT_40021014 = inputValue | _DAT_40021014 & 0xfffffaaf;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080052ac": "update_data_and_mask_080052ac",
                "param_1": "inputValue"
            },
            "calling": [
                "step_pulse_isr",
                "st_init",
                "step_delay_isr"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080052dc": {
            "entrypoint": "0x080052dc",
            "current_name": "set_flags_in_register_080052dc",
            "code": "\n\n\nvoid setFlagsInRegister_080052dc(uint inputValue)\n\n{\n  _DAT_40021014 = inputValue | _DAT_40021014 & 0xfffff55f;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080052dc": "set_flags_in_register_080052dc",
                "param_1": "inputValue"
            },
            "calling": [
                "step_period_isr"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800530c": {
            "entrypoint": "0x0800530c",
            "current_name": "FUNC_0800530c",
            "code": "\nvoid FUNC_0800530c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800530c": "FUNC_0800530c"
            },
            "calling": [
                "st_go_idle"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005318": {
            "entrypoint": "0x08005318",
            "current_name": "FUNC_08005318",
            "code": "\nvoid FUNC_08005318(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005318": "FUNC_08005318"
            },
            "calling": [
                "st_wake_up"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005324": {
            "entrypoint": "0x08005324",
            "current_name": "calculate_step_period_08005324",
            "code": "\nvoid calculateStepPeriod_08005324(uint inputValue)\n\n{\n  uint adjustedValue;\n  \n  adjustedValue = inputValue;\n  if (inputValue < 800) {\n    adjustedValue = 800;\n  }\n  DAT_20000e28 = 1260000000 / adjustedValue;\n  set_step_period(DAT_20000e28);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005324": "calculate_step_period_08005324",
                "param_1": "inputValue",
                "local_14": "adjustedValue"
            },
            "calling": [
                "st_reset",
                "st_cycle_reinitialize",
                "step_period_isr"
            ],
            "called": [
                "set_step_period"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005360": {
            "entrypoint": "0x08005360",
            "current_name": "accumulate_value_and_check_threshold_08005360",
            "code": "\nbool accumulateValueAndCheckThreshold_08005360(void)\n\n{\n  bool isExceedThreshold;\n  \n  DAT_20000e2c = DAT_20000e28 + DAT_20000e2c;\n  isExceedThreshold = 420000 < DAT_20000e2c;\n  if (isExceedThreshold) {\n    DAT_20000e2c = DAT_20000e2c - 420000;\n  }\n  return isExceedThreshold;\n}\n\n",
            "renaming": {
                "FUN_08005360": "accumulate_value_and_check_threshold_08005360",
                "bVar1": "isExceedThreshold"
            },
            "calling": [
                "step_period_isr"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080053a0": {
            "entrypoint": "0x080053a0",
            "current_name": "update_step_events_080053a0",
            "code": "\nvoid updateStepEvents_080053a0(void)\n\n{\n  int result;\n  \n  writeDirection(DAT_20000e3e);\n  DAT_20000e40 = DAT_20000e3c;\n  if (DAT_20000e38 == (ushort *)0x0) {\n    DAT_20000e38 = (ushort *)getCurrentBlock();\n    if (DAT_20000e38 == (ushort *)0x0) {\n      goIdle();\n      DAT_20000eaa = DAT_20000eaa | 4;\n    }\n    else {\n      if (DAT_20000ea9 == '\\x03') {\n        DAT_20000e30 = *(uint *)(DAT_20000e38 + 0x14);\n        setStepEventsPerMinute(DAT_20000e30);\n        DAT_20000e2c = 210000;\n      }\n      DAT_20000e34 = (*(int *)(DAT_20000e38 + 0x18) >> 1) + *(int *)(DAT_20000e38 + 0x18);\n      DAT_20000e14 = -(*(int *)(DAT_20000e38 + 8) >> 1);\n      DAT_20000e20 = *(int *)(DAT_20000e38 + 8);\n      DAT_20000e24 = 0;\n      DAT_20000e18 = DAT_20000e14;\n      DAT_20000e1c = DAT_20000e14;\n    }\n  }\n  if (DAT_20000e38 != (ushort *)0x0) {\n    DAT_20000e3e = *DAT_20000e38;\n    DAT_20000e3c = 0;\n    DAT_20000e14 = *(int *)(DAT_20000e38 + 2) + DAT_20000e14;\n    if (0 < DAT_20000e14) {\n      DAT_20000e3c = 0x10;\n      DAT_20000e14 = DAT_20000e14 - DAT_20000e20;\n      if ((DAT_20000e3e & 0x20) == 0) {\n        DAT_20000eac = DAT_20000eac + 1;\n      }\n      else {\n        DAT_20000eac = DAT_20000eac + -1;\n      }\n    }\n    DAT_20000e18 = *(int *)(DAT_20000e38 + 4) + DAT_20000e18;\n    if (0 < DAT_20000e18) {\n      DAT_20000e3c = DAT_20000e3c | 0x440;\n      DAT_20000e18 = DAT_20000e18 - DAT_20000e20;\n      if ((DAT_20000e3e & 0x80) == 0) {\n        DAT_20000eb0 = DAT_20000eb0 + 1;\n      }\n      else {\n        DAT_20000eb0 = DAT_20000eb0 + -1;\n      }\n    }\n    DAT_20000e1c = *(int *)(DAT_20000e38 + 6) + DAT_20000e1c;\n    if (0 < DAT_20000e1c) {\n      DAT_20000e3c = DAT_20000e3c | 0x100;\n      DAT_20000e1c = DAT_20000e1c - DAT_20000e20;\n      if ((DAT_20000e3e & 0x200) == 0) {\n        DAT_20000eb4 = DAT_20000eb4 + 1;\n      }\n      else {\n        DAT_20000eb4 = DAT_20000eb4 + -1;\n      }\n    }\n    DAT_20000e24 = DAT_20000e24 + 1;\n    if (DAT_20000e24 < *(uint *)(DAT_20000e38 + 8)) {\n      if (DAT_20000ea9 == '\\x04') {\n        result = iterateCycleCounter();\n        if (result != 0) {\n          if (*(uint *)(DAT_20000e38 + 0x18) < DAT_20000e30) {\n            DAT_20000e30 = DAT_20000e30 - *(int *)(DAT_20000e38 + 0x18);\n            setStepEventsPerMinute(DAT_20000e30);\n          }\n          else {\n            goIdle();\n            DAT_20000eaa = DAT_20000eaa | 4;\n          }\n        }\n      }\n      else if (DAT_20000e24 < *(uint *)(DAT_20000e38 + 0x1a)) {\n        result = iterateCycleCounter();\n        if (result != 0) {\n          DAT_20000e30 = DAT_20000e30 + *(int *)(DAT_20000e38 + 0x18);\n          if (*(uint *)(DAT_20000e38 + 0x1e) <= DAT_20000e30) {\n            DAT_20000e30 = *(uint *)(DAT_20000e38 + 0x1e);\n          }\n          setStepEventsPerMinute(DAT_20000e30);\n        }\n      }\n      else if (DAT_20000e24 < *(uint *)(DAT_20000e38 + 0x1c)) {\n        if (DAT_20000e30 != *(uint *)(DAT_20000e38 + 0x1e)) {\n          DAT_20000e30 = *(uint *)(DAT_20000e38 + 0x1e);\n          setStepEventsPerMinute(DAT_20000e30);\n        }\n      }\n      else if (DAT_20000e24 == *(uint *)(DAT_20000e38 + 0x1c)) {\n        if (DAT_20000e30 == *(uint *)(DAT_20000e38 + 0x1e)) {\n          DAT_20000e2c = 210000;\n        }\n        else {\n          DAT_20000e2c = 420000 - DAT_20000e2c;\n        }\n      }\n      else {\n        result = iterateCycleCounter();\n        if (result != 0) {\n          if (DAT_20000e34 < DAT_20000e30) {\n            DAT_20000e30 = DAT_20000e30 - *(int *)(DAT_20000e38 + 0x18);\n          }\n          else {\n            DAT_20000e30 = DAT_20000e30 >> 1;\n          }\n          if (DAT_20000e30 < *(uint *)(DAT_20000e38 + 0x16)) {\n            DAT_20000e30 = *(uint *)(DAT_20000e38 + 0x16);\n          }\n          setStepEventsPerMinute(DAT_20000e30);\n        }\n      }\n    }\n    else {\n      DAT_20000e3c = 0;\n      DAT_20000e38 = (ushort *)0x0;\n      discardCurrentBlock();\n    }\n  }\n  DAT_20000e3c = DAT_20000e3c ^ DAT_20000ed4;\n  DAT_20000e3e = DAT_20000e3e ^ DAT_20000ed6;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080053a0": "update_step_events_080053a0",
                "iVar1": "result",
                "dirn_wr": "writeDirection",
                "plan_get_current_block": "getCurrentBlock",
                "st_go_idle": "goIdle",
                "set_step_events_per_minute": "setStepEventsPerMinute",
                "iterate_trapezoid_cycle_counter": "iterateCycleCounter",
                "plan_discard_current_block": "discardCurrentBlock"
            },
            "calling": [
                "TIM2_IRQHandler"
            ],
            "called": [
                "st_go_idle",
                "plan_discard_current_block",
                "iterate_trapezoid_cycle_counter",
                "plan_get_current_block",
                "dirn_wr",
                "set_step_events_per_minute"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005760": {
            "entrypoint": "0x08005760",
            "current_name": "initialize_step_08005760",
            "code": "\nvoid initializeStep_08005760(void)\n\n{\n  step_wr(DAT_20000ed4);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005760": "initialize_step_08005760"
            },
            "calling": [
                "TIM2_IRQHandler"
            ],
            "called": [
                "step_wr"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005778": {
            "entrypoint": "0x08005778",
            "current_name": "initialize_step_08005778",
            "code": "\nvoid initialize_step_08005778(void)\n\n{\n  step_wr(DAT_20000e40);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005778": "initialize_step_08005778"
            },
            "calling": [
                "TIM2_IRQHandler"
            ],
            "called": [
                "step_wr"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005790": {
            "entrypoint": "0x08005790",
            "current_name": "enable_stepper_motor_08005790",
            "code": "\nvoid enableStepperMotor_08005790(void)\n\n{\n  stepper_motor_enable();\n  if (DAT_20000ea9 == '\\x03') {\n    DAT_20000e3c = DAT_20000ed4;\n    DAT_20000e3e = DAT_20000ed6;\n    setDelay(0x69);\n    setTime((DAT_20000ec9 + 5) * 0x15);\n    enableStepIsr();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005790": "enable_stepper_motor_08005790",
                "set_step_pulse_delay": "setDelay",
                "set_step_pulse_time": "setTime",
                "step_isr_enable": "enableStepIsr"
            },
            "calling": [
                "limits_go_home",
                "st_init",
                "st_cycle_start"
            ],
            "called": [
                "step_isr_enable",
                "stepper_motor_enable",
                "set_step_pulse_delay",
                "set_step_pulse_time"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080057e4": {
            "entrypoint": "0x080057e4",
            "current_name": "disable_stepper_motor_080057e4",
            "code": "\nvoid disableStepperMotor_080057e4(void)\n\n{\n  step_isr_disable();\n  if ((DAT_20000ef8 != -1) || ((DAT_20000eaa & 0x20) != 0)) {\n    stepper_motor_disable();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080057e4": "disable_stepper_motor_080057e4"
            },
            "calling": [
                "mc_reset",
                "limits_go_home",
                "st_init",
                "step_period_isr"
            ],
            "called": [
                "step_isr_disable",
                "stepper_motor_disable"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005814": {
            "entrypoint": "0x08005814",
            "current_name": "initialize_data_08005814",
            "code": "\nvoid initializeData_08005814(void)\n\n{\n  memset(&DAT_20000e14,0,0x24);\n  setStepEventsPerMinute(800);\n  DAT_20000e38 = 0;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005814": "initialize_data_08005814",
                "set_step_events_per_minute": "setStepEventsPerMinute"
            },
            "calling": [
                "grbl_main"
            ],
            "called": [
                "memset",
                "set_step_events_per_minute"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800583c": {
            "entrypoint": "0x0800583c",
            "current_name": "initialize_devices_0800583c",
            "code": "\nvoid initializeDevices_0800583c(void)\n\n{\n  writeStep(DAT_20000ed4);\n  wakeUpStatus();\n  goIdleStatus();\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800583c": "initialize_devices_0800583c",
                "step_wr": "writeStep",
                "st_wake_up": "wakeUpStatus",
                "st_go_idle": "goIdleStatus"
            },
            "calling": [
                "grbl_main"
            ],
            "called": [
                "st_go_idle",
                "st_wake_up",
                "step_wr"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800585c": {
            "entrypoint": "0x0800585c",
            "current_name": "update_status_and_wake_up_0800585c",
            "code": "\nvoid update_status_and_wake_up_0800585c(void)\n\n{\n  if (DAT_20000ea9 == '\\x02') {\n    DAT_20000ea9 = '\\x03';\n    st_wake_up();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800585c": "update_status_and_wake_up_0800585c"
            },
            "calling": [
                "mc_line",
                "protocol_execute_runtime",
                "mc_go_home"
            ],
            "called": [
                "st_wake_up"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800587c": {
            "entrypoint": "0x0800587c",
            "current_name": "update_data_0800587c",
            "code": "\nvoid updateData_0800587c(void)\n\n{\n  if (DAT_20000ea9 == '\\x03') {\n    DAT_20000ea9 = '\\x04';\n    DAT_20000eb8 = 0;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800587c": "update_data_0800587c"
            },
            "calling": [
                "protocol_execute_runtime"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080058a0": {
            "entrypoint": "0x080058a0",
            "current_name": "initialize_plan_cycle_080058a0",
            "code": "\nvoid initializePlanCycle_080058a0(void)\n\n{\n  if (DAT_20000e38 == 0) {\n    DAT_20000ea9 = 0;\n  }\n  else {\n    reinitializePlanCycle_080058a0(*(int *)(DAT_20000e38 + 0x10) - DAT_20000e24);\n    DAT_20000e30 = 0;\n    setStepEventsPerMinute(0);\n    DAT_20000e2c = 210000;\n    DAT_20000e24 = 0;\n    DAT_20000ea9 = 2;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080058a0": "initialize_plan_cycle_080058a0",
                "plan_cycle_reinitialize": "reinitializePlanCycle",
                "set_step_events_per_minute": "setStepEventsPerMinute"
            },
            "calling": [
                "protocol_execute_runtime"
            ],
            "called": [
                "plan_cycle_reinitialize",
                "set_step_events_per_minute"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005900": {
            "entrypoint": "0x08005900",
            "current_name": "check_and_update_flags_08005900",
            "code": "\nundefined4 checkAndUpdateFlags_08005900(byte inputByte)\n\n{\n  if (inputByte == 0x7e) {\n    DAT_20000eaa = DAT_20000eaa | 2;\n    return 1;\n  }\n  if (inputByte < 0x7f) {\n    if (inputByte == 0x3f) {\n      DAT_20000eaa = DAT_20000eaa | 1;\n      return 1;\n    }\n    if (inputByte < 0x40) {\n      if (inputByte == 0x18) {\n        resetMicrocontroller();\n        return 1;\n      }\n      if (inputByte == 0x21) {\n        DAT_20000eaa = DAT_20000eaa | 8;\n        return 1;\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005900": "check_and_update_flags_08005900",
                "param_1": "inputByte",
                "mc_reset": "resetMicrocontroller"
            },
            "calling": [
                "serial_read"
            ],
            "called": [
                "mc_reset"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800597c": {
            "entrypoint": "0x0800597c",
            "current_name": "trigger_software_interrupt_0800597c",
            "code": "\nvoid triggerSoftwareInterrupt_0800597c(void)\n\n{\n  software_interrupt(0x3f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800597c": "trigger_software_interrupt_0800597c"
            },
            "calling": [
                "startForkserver"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005984": {
            "entrypoint": "0x08005984",
            "current_name": "execute_afl_call_08005984",
            "code": "\nundefined4 executeAflCall_08005984(undefined4 input)\n\n{\n  undefined4 returnValue;\n  \n  if (DAT_20000e44 == 0) {\n    returnValue = aflCall(1,input,0);\n  }\n  else {\n    returnValue = 0;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_08005984": "execute_afl_call_08005984",
                "param_1": "input",
                "uVar1": "returnValue"
            },
            "calling": [
                "main"
            ],
            "called": [
                "aflCall"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080059b4": {
            "entrypoint": "0x080059b4",
            "current_name": "initialize_system_080059b4",
            "code": "\n\n\nundefined4 initializeSystem_080059b4(void)\n\n{\n  _DAT_40023c00 = _DAT_40023c00 | 0x700;\n  configureSysTick(16000);\n  setPriorityGrouping(3);\n  initializeMsp();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080059b4": "initialize_system_080059b4",
                "HAL_SYSTICK_Config": "configureSysTick",
                "HAL_NVIC_SetPriorityGrouping": "setPriorityGrouping",
                "HAL_MspInit": "initializeMsp"
            },
            "calling": [
                "main"
            ],
            "called": [
                "HAL_NVIC_SetPriorityGrouping",
                "HAL_MspInit",
                "HAL_SYSTICK_Config"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080059f8": {
            "entrypoint": "0x080059f8",
            "current_name": "deinitialize_hal_080059f8",
            "code": "\n\n\nundefined4 deinitialize_HAL_080059f8(void)\n\n{\n  _DAT_40023820 = 0;\n  _DAT_40023824 = 0;\n  _DAT_40023810 = 0;\n  _DAT_40023814 = 0;\n  _DAT_40023818 = 0;\n  HAL_MspDeInit();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_080059f8": "deinitialize_hal_080059f8"
            },
            "calling": [],
            "called": [
                "HAL_MspDeInit"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a50": {
            "entrypoint": "0x08005a50",
            "current_name": "FUNC_08005a50",
            "code": "\nvoid FUNC_08005a50(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a50": "FUNC_08005a50"
            },
            "calling": [
                "HAL_Init"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005a5c": {
            "entrypoint": "0x08005a5c",
            "current_name": "FUNC_08005a5c",
            "code": "\nvoid FUNC_08005a5c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a5c": "FUNC_08005a5c"
            },
            "calling": [
                "HAL_DeInit"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08005a68": {
            "entrypoint": "0x08005a68",
            "current_name": "increment_counter_08005a68",
            "code": "\nvoid incrementCounter_08005a68(void)\n\n{\n  DAT_20000e48 = DAT_20000e48 + 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a68": "increment_counter_08005a68"
            },
            "calling": [
                "SysTick_Handler"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a84": {
            "entrypoint": "0x08005a84",
            "current_name": "get_data_value_08005a84",
            "code": "\nundefined4 get_data_value_08005a84(void)\n\n{\n  return DAT_20000e48;\n}\n\n",
            "renaming": {
                "FUN_08005a84": "get_data_value_08005a84"
            },
            "calling": [
                "HAL_RCC_OscConfig",
                "SysTick_Handler",
                "get_current_usecs",
                "HAL_RCC_ClockConfig",
                "HAL_Delay"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005a98": {
            "entrypoint": "0x08005a98",
            "current_name": "delay_execution_08005a98",
            "code": "\nvoid delayExecution_08005a98(int delayDuration)\n\n{\n  int initialTime;\n  uint currentTime;\n  \n  initialTime = HAL_GetTick();\n  do {\n    currentTime = HAL_GetTick();\n  } while (currentTime < (uint)(delayDuration + initialTime));\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005a98": "delay_execution_08005a98",
                "param_1": "delayDuration",
                "iVar1": "initialTime",
                "uVar2": "currentTime"
            },
            "calling": [
                "_delay_ms"
            ],
            "called": [
                "HAL_GetTick"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005bdc": {
            "entrypoint": "0x08005bdc",
            "current_name": "store_byte_value_08005bdc",
            "code": "\nvoid storeByteValue_08005bdc(byte inputByte,uint inputValue)\n\n{\n  if ((byte)inputByte < '\\0') {\n    *(byte *)((inputByte & 0xf) + 0xe000ed14) = (byte)((inputValue & 0xff) << 4);\n  }\n  else {\n    *(byte *)((byte)inputByte + -0x1fff1c00) = (byte)((inputValue & 0xff) << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08005bdc": "store_byte_value_08005bdc",
                "param_1": "inputByte",
                "param_2": "inputValue",
                "char": "byte"
            },
            "calling": [
                "FUN_08005c30"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005c30": {
            "entrypoint": "0x08005c30",
            "current_name": "check_and_initialize_08005c30",
            "code": "\n\n\nbool checkAndInitialize_08005c30(int inputValue)\n\n{\n  bool isWithinRange;\n  \n  isWithinRange = inputValue - 1U < 0x1000000;\n  if (isWithinRange) {\n    _DAT_e000e014 = inputValue + -1;\n    store_byte_value_08005bdc(0xffffffff,0xf);\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n  }\n  return !isWithinRange;\n}\n\n",
            "renaming": {
                "FUN_08005c30": "check_and_initialize_08005c30",
                "param_1": "inputValue",
                "bVar1": "isWithinRange"
            },
            "calling": [
                "HAL_RCC_ClockConfig"
            ],
            "called": [
                "FUN_08005bdc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08005cec": {
            "entrypoint": "0x08005cec",
            "current_name": "check_and_handle_flags_08005cec",
            "code": "\n\n\nundefined4 checkAndHandleFlags_08005cec(uint *flags)\n\n{\n  int currentTime;\n  uint currentTick;\n  \n  if ((*flags & 1) != 0) {\n    if (((_DAT_40023808 & 0xc) == 4) ||\n       (((_DAT_40023808 & 0xc) == 8 && ((_DAT_40023804 & 0x400000) == 0x400000)))) {\n      if (((_DAT_40023800 & 0x20000) != 0) && (flagValue1 != 1)) {\n        return 1;\n      }\n    }\n    else {\n      _DAT_40023800 = (uint3)_DAT_40023800;\n      currentTime = getTickCount();\n      while ((_DAT_40023800 & 0x20000) != 0) {\n        currentTick = getTickCount();\n        if (currentTime + 5000U <= currentTick) {\n          return 3;\n        }\n      }\n      _DAT_40023800 = CONCAT13(DAT_40023800_3,CONCAT12((char)flagValue1,_DAT_40023800));\n      if (flagValue1 == 1) {\n        currentTime = getTickCount();\n        while ((_DAT_40023800 & 0x20000) == 0) {\n          currentTick = getTickCount();\n          if (currentTime + 5000U <= currentTick) {\n            return 3;\n          }\n        }\n      }\n      else {\n        currentTime = getTickCount();\n        while ((_DAT_40023800 & 0x20000) != 0) {\n          currentTick = getTickCount();\n          if (currentTime + 5000U <= currentTick) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  if ((*flags & 2) != 0) {\n    if (((_DAT_40023808 & 0xc) == 0) ||\n       (((_DAT_40023808 & 0xc) == 8 && ((_DAT_40023804 & 0x400000) == 0)))) {\n      if (((_DAT_40023800 & 2) != 0) && (flagValue3 != 1)) {\n        return 1;\n      }\n    }\n    else if (flagValue3 == 0) {\n      _DAT_42470000 = 0;\n      currentTime = getTickCount();\n      while ((_DAT_40023800 & 2) != 0) {\n        currentTick = getTickCount();\n        if (currentTime + 100U <= currentTick) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470000 = 1;\n      currentTime = getTickCount();\n      while ((_DAT_40023800 & 2) == 0) {\n        currentTick = getTickCount();\n        if (currentTime + 100U <= currentTick) {\n          return 3;\n        }\n      }\n      _DAT_40023800 = flagValue2 << 3 | _DAT_40023800 & 0xffffff07;\n    }\n  }\n  if ((*flags & 8) != 0) {\n    if (flagValue4 == 0) {\n      _DAT_42470e80 = 0;\n      currentTime = getTickCount();\n      while ((_DAT_40023874 & 2) != 0) {\n        currentTick = getTickCount();\n        if (currentTime + 100U <= currentTick) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470e80 = 1;\n      currentTime = getTickCount();\n      while ((_DAT_40023874 & 2) == 0) {\n        currentTick = getTickCount();\n        if (currentTime + 100U <= currentTick) {\n          return 3;\n        }\n      }\n    }\n  }\n  if ((*flags & 4) != 0) {\n    _DAT_40023840 = _DAT_40023840 | 0x10000000;\n    _DAT_40007000 = _DAT_40007000 | 0x100;\n    currentTime = getTickCount();\n    while ((_DAT_40007000 & 0x100) == 0) {\n      currentTick = getTickCount();\n      if (currentTime + 100U <= currentTick) {\n        return 3;\n      }\n    }\n    _DAT_40023870 = _DAT_40023870 & 0xffffff00;\n    currentTime = getTickCount();\n    while ((_DAT_40023870 & 2) != 0) {\n      currentTick = getTickCount();\n      if (currentTime + 5000U <= currentTick) {\n        return 3;\n      }\n    }\n    _DAT_40023870 = CONCAT31(DAT_40023870_1,(char)flagValue5);\n    if (flagValue5 == 1) {\n      currentTime = getTickCount();\n      while ((_DAT_40023870 & 2) == 0) {\n        currentTick = getTickCount();\n        if (currentTime + 5000U <= currentTick) {\n          return 3;\n        }\n      }\n    }\n    else {\n      currentTime = getTickCount();\n      while ((_DAT_40023870 & 2) != 0) {\n        currentTick = getTickCount();\n        if (currentTime + 5000U <= currentTick) {\n          return 3;\n        }\n      }\n    }\n  }\n  if (flagValue6 != 0) {\n    if ((_DAT_40023808 & 0xc) == 8) {\n      return 1;\n    }\n    if (flagValue6 == 2) {\n      _DAT_42470060 = 0;\n      currentTime = getTickCount();\n      while ((_DAT_40023800 & 0x2000000) != 0) {\n        currentTick = getTickCount();\n        if (currentTime + 100U <= currentTick) {\n          return 3;\n        }\n      }\n      _DAT_40023804 =\n           flags[0xb] << 0x18 |\n           flags[8] | flags[9] << 6 | ((flags[10] >> 1) - 1) * 0x10000 | flags[7] |\n           0x20000000;\n      _DAT_42470060 = 1;\n      currentTime = getTickCount();\n      while ((_DAT_40023800 & 0x2000000) == 0) {\n        currentTick = getTickCount();\n        if (currentTime + 100U <= currentTick) {\n          return 3;\n        }\n      }\n    }\n    else {\n      _DAT_42470060 = 0;\n      currentTime = getTickCount();\n      while ((_DAT_40023800 & 0x2000000) != 0) {\n        currentTick = getTickCount();\n        if (currentTime + 100U <= currentTick) {\n          return 3;\n        }\n      }\n    }\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08005cec": "check_and_handle_flags_08005cec",
                "param_1": "flags",
                "iVar1": "currentTime",
                "uVar2": "currentTick",
                "HAL_GetTick": "getTickCount",
                "param_1[1]": "flagValue1",
                "param_1[4]": "flagValue2",
                "param_1[3]": "flagValue3",
                "param_1[5]": "flagValue4",
                "param_1[2]": "flagValue5",
                "param_1[6]": "flagValue6"
            },
            "calling": [
                "SystemClock_Config"
            ],
            "called": [
                "HAL_GetTick"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800618c": {
            "entrypoint": "0x0800618c",
            "current_name": "process_data_0800618c",
            "code": "\n\n\nundefined4 processData_0800618c(uint *data,uint size)\n\n{\n  int tick;\n  uint currTick;\n  uint endTime;\n  undefined8 hclkFreq;\n  \n  if ((_DAT_40023c00 & 0xf) < size) {\n    _DAT_40023c00 = CONCAT31(DAT_40023c00_1,(char)size);\n    if (size != (size & 0xf)) {\n      return 1;\n    }\n    if ((*data & 1) != 0) {\n      if (data[1] == 1) {\n        if ((_DAT_40023800 & 0x20000) == 0) {\n          return 1;\n        }\n      }\n      else if ((data[1] != 2) && ((_DAT_40023800 & 2) == 0)) {\n        return 1;\n      }\n      _DAT_40023808 = data[1] | _DAT_40023808 & 0xfffffffc;\n      tick = HAL_GetTick();\n      endTime = tick + 5000;\n      if (data[1] == 1) {\n        while ((_DAT_40023808 & 0xc) != 4) {\n          currTick = HAL_GetTick();\n          if (endTime <= currTick) {\n            return 3;\n          }\n        }\n      }\n      else if (data[1] == 2) {\n        while ((_DAT_40023808 & 0xc) != 8) {\n          currTick = HAL_GetTick();\n          if (endTime <= currTick) {\n            return 3;\n          }\n        }\n      }\n      else {\n        while ((_DAT_40023808 & 0xc) != 0) {\n          currTick = HAL_GetTick();\n          if (endTime <= currTick) {\n            return 3;\n          }\n        }\n      }\n    }\n  }\n  else {\n    if ((*data & 1) != 0) {\n      if (data[1] == 1) {\n        if ((_DAT_40023800 & 0x20000) == 0) {\n          return 1;\n        }\n      }\n      else if (data[1] == 2) {\n        if ((_DAT_40023800 & 0x2000000) == 0) {\n          return 1;\n        }\n      }\n      else if ((_DAT_40023800 & 2) == 0) {\n        return 1;\n      }\n      _DAT_40023808 = data[1] | _DAT_40023808 & 0xfffffffc;\n      tick = HAL_GetTick();\n      endTime = tick + 5000;\n      if (data[1] == 1) {\n        while ((_DAT_40023808 & 0xc) != 4) {\n          currTick = HAL_GetTick();\n          if (endTime <= currTick) {\n            return 3;\n          }\n        }\n      }\n      else if (data[1] == 2) {\n        while ((_DAT_40023808 & 0xc) != 8) {\n          currTick = HAL_GetTick();\n          if (endTime <= currTick) {\n            return 3;\n          }\n        }\n      }\n      else {\n        while ((_DAT_40023808 & 0xc) != 0) {\n          currTick = HAL_GetTick();\n          if (endTime <= currTick) {\n            return 3;\n          }\n        }\n      }\n    }\n    _DAT_40023c00 = CONCAT31(DAT_40023c00_1,(char)size);\n    if (size != (size & 0xf)) {\n      return 1;\n    }\n  }\n  if ((*data & 2) != 0) {\n    _DAT_40023808 = data[2] | _DAT_40023808 & 0xffffff0f;\n  }\n  if ((*data & 4) != 0) {\n    _DAT_40023808 = data[3] | _DAT_40023808 & 0xffffe3ff;\n  }\n  if ((*data & 8) != 0) {\n    _DAT_40023808 = data[4] << 3 | _DAT_40023808 & 0xffff1fff;\n  }\n  hclkFreq = HAL_RCC_GetHCLKFreq();\n  check_and_initialize_08005c30((uint)hclkFreq / 1000,(int)((ulonglong)hclkFreq >> 0x20),(uint)hclkFreq * 0x10624dd3);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800618c": "process_data_0800618c",
                "param_1": "data",
                "param_2": "size",
                "iVar1": "tick",
                "uVar2": "currTick",
                "uVar3": "endTime",
                "uVar4": "hclkFreq"
            },
            "calling": [
                "SystemClock_Config"
            ],
            "called": [
                "FUN_08005c30",
                "HAL_RCC_GetHCLKFreq",
                "HAL_GetTick"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800640c": {
            "entrypoint": "0x0800640c",
            "current_name": "initialize_gpio_0800640c",
            "code": "\n\n\nvoid initializeGPIO_0800640c(int mode,uint config1,uint config2)\n\n{\n  undefined4 pinConfig;\n  undefined4 pinMode;\n  undefined4 pinSpeed;\n  undefined4 pinPull;\n  undefined4 pinAlternate;\n  \n  if (mode == 0) {\n    _DAT_40023830 = _DAT_40023830 | 1;\n    pinConfig = 0x100;\n    pinMode = 2;\n    pinPull = 3;\n    pinSpeed = 0;\n    pinAlternate = 0;\n    HAL_GPIO_Init(0x40020000,&pinConfig);\n    _DAT_40023808 = config2 | config1 | _DAT_40023808 & 0xf89fffff;\n  }\n  else {\n    _DAT_40023830 = _DAT_40023830 | 4;\n    pinConfig = 0x200;\n    pinMode = 2;\n    pinPull = 3;\n    pinSpeed = 0;\n    pinAlternate = 0;\n    HAL_GPIO_Init(0x40020800,&pinConfig);\n    _DAT_40023808 = config1 | config2 << 3 | _DAT_40023808 & 0x7ffffff;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800640c": "initialize_gpio_0800640c",
                "param_1": "mode",
                "param_2": "config1",
                "param_3": "config2",
                "local_1c": "pinConfig",
                "local_18": "pinMode",
                "local_14": "pinSpeed",
                "local_10": "pinPull",
                "local_c": "pinAlternate"
            },
            "calling": [],
            "called": [
                "HAL_GPIO_Init"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080064ec": {
            "entrypoint": "0x080064ec",
            "current_name": "calculate_clock_frequency_080064ec",
            "code": "\n\n\nuint calculateClockFrequency_080064ec(void)\n\n{\n  uint clockConfig;\n  uint clockFrequency;\n  \n  clockConfig = _DAT_40023808 & 0xc;\n  if (clockConfig == 8) {\n    if ((_DAT_40023804 & 0x400000) == 0) {\n      clockFrequency = ((_DAT_40023804 & 0x7fc0) >> 6) * (16000000 / (_DAT_40023804 & 0x3f));\n    }\n    else {\n      clockFrequency = ((_DAT_40023804 & 0x7fc0) >> 6) * (8000000 / (_DAT_40023804 & 0x3f));\n    }\n    return clockFrequency / ((((_DAT_40023804 & 0x30000) >> 0x10) + 1) * 2);\n  }\n  if (clockConfig < 9) {\n    if (clockConfig == 0) {\n      return 16000000;\n    }\n    if (clockConfig == 4) {\n      return 8000000;\n    }\n  }\n  return 16000000;\n}\n\n",
            "renaming": {
                "FUN_080064ec": "calculate_clock_frequency_080064ec",
                "uVar1": "clockConfig",
                "local_c": "clockFrequency"
            },
            "calling": [
                "HAL_RCC_GetHCLKFreq"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006628": {
            "entrypoint": "0x08006628",
            "current_name": "get_system_clock_frequency_08006628",
            "code": "\n\n\nuint getSystemClockFrequency_08006628(void)\n\n{\n  uint systemClockFrequency;\n  \n  systemClockFrequency = HAL_RCC_GetSysClockFreq();\n  DAT_20000000 = systemClockFrequency >> (&DAT_0800bcac)[(_DAT_40023808 & 0xf0) >> 4];\n  return systemClockFrequency >> (&DAT_0800bcac)[(_DAT_40023808 & 0xf0) >> 4];\n}\n\n",
            "renaming": {
                "FUN_08006628": "get_system_clock_frequency_08006628",
                "uVar1": "systemClockFrequency"
            },
            "calling": [
                "HAL_RCC_GetPCLK2Freq",
                "HAL_RCC_GetPCLK1Freq",
                "HAL_RCC_ClockConfig"
            ],
            "called": [
                "HAL_RCC_GetSysClockFreq"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006680": {
            "entrypoint": "0x08006680",
            "current_name": "get_hclk_divided_frequency_08006680",
            "code": "\n\n\nuint getHCLKDividedFrequency_08006680(void)\n\n{\n  uint hclkFreq;\n  \n  hclkFreq = HAL_RCC_GetHCLKFreq();\n  return hclkFreq >> (&DAT_0800bcac)[(_DAT_40023808 & 0x1c00) >> 10];\n}\n\n",
            "renaming": {
                "FUN_08006680": "get_hclk_divided_frequency_08006680",
                "uVar1": "hclkFreq"
            },
            "calling": [
                "set_baud_rate"
            ],
            "called": [
                "HAL_RCC_GetHCLKFreq"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080066cc": {
            "entrypoint": "0x080066cc",
            "current_name": "get_hclk_frequency_080066cc",
            "code": "\n\n\nuint getHCLKFrequency_080066cc(void)\n\n{\n  uint hclkFrequency;\n  \n  hclkFrequency = HAL_RCC_GetHCLKFreq();\n  return hclkFrequency >> (&DAT_0800bcac)[(_DAT_40023808 & 0xe000) >> 0xd];\n}\n\n",
            "renaming": {
                "FUN_080066cc": "get_hclk_frequency_080066cc",
                "uVar1": "hclkFrequency"
            },
            "calling": [
                "set_baud_rate"
            ],
            "called": [
                "HAL_RCC_GetHCLKFreq"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006950": {
            "entrypoint": "0x08006950",
            "current_name": "set_special_bits_08006950",
            "code": "\n\n\nvoid setSpecialBits_08006950(uint inputValue)\n\n{\n  _DAT_e000ed0c = _DAT_e000ed0c & 0xf8ff | (inputValue & 7) << 8 | 0x5fa0000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006950": "set_special_bits_08006950",
                "param_1": "inputValue"
            },
            "calling": [
                "HAL_NVIC_SetPriorityGrouping"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006998": {
            "entrypoint": "0x08006998",
            "current_name": "get_last_three_bits_08006998",
            "code": "\n\n\nuint get_last_three_bits_08006998(void)\n\n{\n  return _DAT_e000ed0c >> 8 & 7;\n}\n\n",
            "renaming": {
                "FUN_08006998": "get_last_three_bits_08006998"
            },
            "calling": [
                "HAL_NVIC_GetPriorityGrouping",
                "HAL_NVIC_SetPriority"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080069b4": {
            "entrypoint": "0x080069b4",
            "current_name": "set_bit_at_offset_080069b4",
            "code": "\nvoid setBitAtOffset_080069b4(byte byteValue)\n\n{\n  *(int *)(((uint)(int)(char)byteValue >> 5) * 4 + -0x1fff1f00) = 1 << (byteValue & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080069b4": "set_bit_at_offset_080069b4",
                "param_1": "byteValue"
            },
            "calling": [
                "HAL_NVIC_EnableIRQ"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080069e4": {
            "entrypoint": "0x080069e4",
            "current_name": "set_bit_at_index_080069e4",
            "code": "\nvoid setBitAtIndex_080069e4(byte inputByte)\n\n{\n  *(int *)((((uint)(int)(char)inputByte >> 5) + 0x20) * 4 + -0x1fff1f00) = 1 << (inputByte & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080069e4": "set_bit_at_index_080069e4",
                "param_1": "inputByte"
            },
            "calling": [
                "HAL_NVIC_DisableIRQ"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006a18": {
            "entrypoint": "0x08006a18",
            "current_name": "check_bit_in_memory_08006a18",
            "code": "\nbool checkBitInMemory_08006a18(byte inputByte)\n\n{\n  return (*(uint *)((((uint)(int)(char)inputByte >> 5) + 0x40) * 4 + -0x1fff1f00) &\n         1 << (inputByte & 0x1f)) != 0;\n}\n\n",
            "renaming": {
                "FUN_08006a18": "check_bit_in_memory_08006a18",
                "param_1": "inputByte"
            },
            "calling": [
                "HAL_NVIC_GetPendingIRQ"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006a58": {
            "entrypoint": "0x08006a58",
            "current_name": "set_bit_in_memory_08006a58",
            "code": "\nvoid setBitInMemory_08006a58(byte inputByte)\n\n{\n  *(int *)((((uint)(int)(char)inputByte >> 5) + 0x40) * 4 + -0x1fff1f00) = 1 << (inputByte & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006a58": "set_bit_in_memory_08006a58",
                "param_1": "inputByte"
            },
            "calling": [
                "HAL_NVIC_SetPendingIRQ"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006a8c": {
            "entrypoint": "0x08006a8c",
            "current_name": "set_bit_value_08006a8c",
            "code": "\nvoid setBitValue_08006a8c(byte value)\n\n{\n  *(int *)((((uint)(int)(char)value >> 5) + 0x60) * 4 + -0x1fff1f00) = 1 << (value & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006a8c": "set_bit_value_08006a8c",
                "param_1": "value"
            },
            "calling": [
                "HAL_NVIC_ClearPendingIRQ"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ac0": {
            "entrypoint": "0x08006ac0",
            "current_name": "check_bit_value_08006ac0",
            "code": "\nbool checkBitValue_08006ac0(byte inputByte)\n\n{\n  return (*(uint *)((((uint)(int)(char)inputByte >> 5) + 0x80) * 4 + -0x1fff1f00) &\n         1 << (inputByte & 0x1f)) != 0;\n}\n\n",
            "renaming": {
                "FUN_08006ac0": "check_bit_value_08006ac0",
                "param_1": "inputByte"
            },
            "calling": [
                "HAL_NVIC_GetActive"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b00": {
            "entrypoint": "0x08006b00",
            "current_name": "update_memory_08006b00",
            "code": "\nvoid updateMemory_08006b00(byte byteValue,uint paramValue)\n\n{\n  if ((character)byteValue < '\\0') {\n    *(character *)((byteValue & 0xf) + 0xe000ed14) = (character)((paramValue & 0xff) << 4);\n  }\n  else {\n    *(character *)((character)byteValue + -0x1fff1c00) = (character)((paramValue & 0xff) << 4);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006b00": "update_memory_08006b00",
                "param_1": "byteValue",
                "param_2": "paramValue",
                "char": "character"
            },
            "calling": [
                "SysTick_Config",
                "HAL_NVIC_SetPriority"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006b54": {
            "entrypoint": "0x08006b54",
            "current_name": "extracted_byte_08006b54",
            "code": "\nbyte extractedByte_08006b54(byte inputByte)\n\n{\n  byte resultByte;\n  \n  if ((char)inputByte < '\\0') {\n    resultByte = *(byte *)((inputByte & 0xf) + 0xe000ed14);\n  }\n  else {\n    resultByte = *(byte *)((char)inputByte + -0x1fff1c00);\n  }\n  return resultByte >> 4;\n}\n\n",
            "renaming": {
                "FUN_08006b54": "extracted_byte_08006b54",
                "param_1": "inputByte",
                "bVar1": "resultByte"
            },
            "calling": [
                "HAL_NVIC_GetPriority"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ba0": {
            "entrypoint": "0x08006ba0",
            "current_name": "apply_mask_and_shift_08006ba0",
            "code": "\nuint applyMaskAndShift_08006ba0(uint bitOffset,uint bitMask,uint value)\n\n{\n  uint numBitsAfterOffset;\n  \n  bitOffset = bitOffset & 7;\n  numBitsAfterOffset = 7 - bitOffset;\n  if (3 < numBitsAfterOffset) {\n    numBitsAfterOffset = 4;\n  }\n  if (bitOffset + 4 < 7) {\n    bitOffset = 0;\n  }\n  else {\n    bitOffset = bitOffset - 3;\n  }\n  return value & (1 << (bitOffset & 0xff)) - 1U |\n         ((1 << (numBitsAfterOffset & 0xff)) - 1U & bitMask) << (bitOffset & 0xff);\n}\n\n",
            "renaming": {
                "FUN_08006ba0": "apply_mask_and_shift_08006ba0",
                "param_1": "bitOffset",
                "param_2": "bitMask",
                "param_3": "value",
                "uVar1": "numBitsAfterOffset"
            },
            "calling": [
                "HAL_NVIC_SetPriority"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c04": {
            "entrypoint": "0x08006c04",
            "current_name": "extract_bits_08006c04",
            "code": "\nvoid extractBits_08006c04(uint input,uint startBit,uint *output1,uint *output2)\n\n{\n  uint numBits;\n  \n  startBit = startBit & 7;\n  numBits = 7 - startBit;\n  if (3 < numBits) {\n    numBits = 4;\n  }\n  if (startBit + 4 < 7) {\n    startBit = 0;\n  }\n  else {\n    startBit = startBit - 3;\n  }\n  *output1 = (1 << (numBits & 0xff)) - 1U & input >> (startBit & 0xff);\n  *output2 = (1 << (startBit & 0xff)) - 1U & input;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006c04": "extract_bits_08006c04",
                "param_1": "input",
                "param_2": "startBit",
                "param_3": "output1",
                "param_4": "output2",
                "uVar1": "numBits"
            },
            "calling": [
                "HAL_NVIC_GetPriority"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c70": {
            "entrypoint": "0x08006c70",
            "current_name": "run_infinite_loop_08006c70",
            "code": "\nvoid runInfiniteLoop_08006c70(void)\n\n{\n  DataSynchronizationBarrier(0xf);\n  DataSynchronizationBarrier(0xf);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08006c70": "run_infinite_loop_08006c70"
            },
            "calling": [
                "HAL_NVIC_SystemReset"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006c9c": {
            "entrypoint": "0x08006c9c",
            "current_name": "check_and_update_priority_08006c9c",
            "code": "\n\n\nbool checkAndUpdatePriority_08006c9c(int value)\n\n{\n  bool isValueValid;\n  \n  isValueValid = value - 1U < 0x1000000;\n  if (isValueValid) {\n    _DAT_e000e014 = value + -1;\n    NVIC_SetPriority(0xffffffff,0xf);\n    _DAT_e000e018 = 0;\n    _DAT_e000e010 = 7;\n  }\n  return !isValueValid;\n}\n\n",
            "renaming": {
                "FUN_08006c9c": "check_and_update_priority_08006c9c",
                "param_1": "value",
                "bVar1": "isValueValid"
            },
            "calling": [
                "HAL_SYSTICK_Config"
            ],
            "called": [
                "NVIC_SetPriority"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006ce0": {
            "entrypoint": "0x08006ce0",
            "current_name": "set_priority_grouping_08006ce0",
            "code": "\nvoid setPriorityGrouping_08006ce0(undefined4 priorityLevel)\n\n{\n  NVIC_SetPriorityGrouping(priorityLevel);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006ce0": "set_priority_grouping_08006ce0",
                "param_1": "priorityLevel"
            },
            "calling": [
                "HAL_Init"
            ],
            "called": [
                "NVIC_SetPriorityGrouping"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006cf6": {
            "entrypoint": "0x08006cf6",
            "current_name": "set_interrupt_priority_08006cf6",
            "code": "\nvoid setInterruptPriority_08006cf6(char interruptNumber,undefined4 preemptPriority,undefined4 subPriority)\n\n{\n  undefined4 priorityGroup;\n  \n  priorityGroup = getPriorityGroup();\n  priorityGroup = encodePriority(priorityGroup,preemptPriority,subPriority);\n  setInterruptPriority_08006cf6((int)interruptNumber,priorityGroup);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006cf6": "set_interrupt_priority_08006cf6",
                "param_1": "interruptNumber",
                "param_2": "preemptPriority",
                "param_3": "subPriority",
                "uVar1": "priorityGroup",
                "NVIC_GetPriorityGrouping": "getPriorityGroup",
                "NVIC_EncodePriority": "encodePriority",
                "NVIC_SetPriority": "setInterruptPriority"
            },
            "calling": [
                "enable_tim_interrupt"
            ],
            "called": [
                "NVIC_SetPriority",
                "NVIC_EncodePriority",
                "NVIC_GetPriorityGrouping"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d2e": {
            "entrypoint": "0x08006d2e",
            "current_name": "set_bit_at_offset_08006d2e",
            "code": "\nvoid setBitAtOffset_08006d2e(char offset)\n\n{\n  setBit((bitOffset)offset);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d2e": "set_bit_at_offset_08006d2e",
                "param_1": "offset",
                "set_bit_at_offset_080069b4": "setBit",
                "int": "bitOffset"
            },
            "calling": [],
            "called": [
                "FUN_080069b4"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d4a": {
            "entrypoint": "0x08006d4a",
            "current_name": "disable_irq_08006d4a",
            "code": "\nvoid disableIRQ_08006d4a(char irqNumber)\n\n{\n  NVIC_DisableIRQ((int)irqNumber);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d4a": "disable_irq_08006d4a",
                "param_1": "irqNumber"
            },
            "calling": [],
            "called": [
                "NVIC_DisableIRQ"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d66": {
            "entrypoint": "0x08006d66",
            "current_name": "reset_system_08006d66",
            "code": "\nvoid reset_system_08006d66(void)\n\n{\n  system_reset();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d66": "reset_system_08006d66",
                "NVIC_SystemReset": "system_reset"
            },
            "calling": [],
            "called": [
                "NVIC_SystemReset"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d72": {
            "entrypoint": "0x08006d72",
            "current_name": "initialize_sys_tick_08006d72",
            "code": "\nundefined4 initializeSysTick_08006d72(undefined4 configValue)\n\n{\n  undefined4 result;\n  \n  result = SysTick_Config(configValue);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08006d72": "initialize_sys_tick_08006d72",
                "param_1": "configValue",
                "uVar1": "result"
            },
            "calling": [
                "HAL_Init"
            ],
            "called": [
                "SysTick_Config"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d8a": {
            "entrypoint": "0x08006d8a",
            "current_name": "get_priority_grouping_08006d8a",
            "code": "\nundefined4 getPriorityGrouping_08006d8a(void)\n\n{\n  undefined4 priorityGrouping;\n  \n  priorityGrouping = NVIC_GetPriorityGrouping();\n  return priorityGrouping;\n}\n\n",
            "renaming": {
                "FUN_08006d8a": "get_priority_grouping_08006d8a",
                "uVar1": "priorityGrouping"
            },
            "calling": [],
            "called": [
                "NVIC_GetPriorityGrouping"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006d98": {
            "entrypoint": "0x08006d98",
            "current_name": "decode_and_set_priority_08006d98",
            "code": "\nvoid decode_and_set_priority_08006d98(char input_value,undefined4 priority_level_1,undefined4 priority_level_2,undefined4 priority_level_3)\n\n{\n  undefined4 priority;\n  \n  priority = NVIC_GetPriority((int)input_value);\n  NVIC_DecodePriority(priority,priority_level_1,priority_level_2,priority_level_3);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006d98": "decode_and_set_priority_08006d98",
                "param_1": "input_value",
                "param_2": "priority_level_1",
                "param_3": "priority_level_2",
                "param_4": "priority_level_3",
                "uVar1": "priority"
            },
            "calling": [],
            "called": [
                "NVIC_GetPriority",
                "NVIC_DecodePriority"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006dc4": {
            "entrypoint": "0x08006dc4",
            "current_name": "set_pending_interrupt_08006dc4",
            "code": "\nvoid setPendingInterrupt_08006dc4(char interruptSource)\n\n{\n  NVIC_SetPendingIRQ((int)interruptSource);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006dc4": "set_pending_interrupt_08006dc4",
                "param_1": "interruptSource"
            },
            "calling": [],
            "called": [
                "NVIC_SetPendingIRQ"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006de0": {
            "entrypoint": "0x08006de0",
            "current_name": "get_pending_irq_08006de0",
            "code": "\nundefined4 getPendingIRQ_08006de0(char interrupt_id)\n\n{\n  undefined4 result;\n  \n  result = NVIC_GetPendingIRQ((int)interrupt_id);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08006de0": "get_pending_irq_08006de0",
                "param_1": "interrupt_id",
                "uVar1": "result"
            },
            "calling": [],
            "called": [
                "NVIC_GetPendingIRQ"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006dfe": {
            "entrypoint": "0x08006dfe",
            "current_name": "clear_pending_interrupt_08006dfe",
            "code": "\nvoid clearPendingInterrupt_08006dfe(char interruptToClear)\n\n{\n  NVIC_ClearPendingIRQ((int)interruptToClear);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006dfe": "clear_pending_interrupt_08006dfe",
                "param_1": "interruptToClear"
            },
            "calling": [],
            "called": [
                "NVIC_ClearPendingIRQ"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e1a": {
            "entrypoint": "0x08006e1a",
            "current_name": "get_active_interrupt_08006e1a",
            "code": "\nundefined4 getActiveInterrupt_08006e1a(char interruptNumber)\n\n{\n  undefined4 activeInterrupt;\n  \n  activeInterrupt = NVIC_GetActive((int)interruptNumber);\n  return activeInterrupt;\n}\n\n",
            "renaming": {
                "FUN_08006e1a": "get_active_interrupt_08006e1a",
                "param_1": "interruptNumber",
                "uVar1": "activeInterrupt"
            },
            "calling": [],
            "called": [
                "NVIC_GetActive"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08006e88": {
            "entrypoint": "0x08006e88",
            "current_name": "update_params_08006e88",
            "code": "\n\n\nvoid updateParams_08006e88(uint *inputParams,uint *flags)\n\n{\n  uint mask;\n  uint flagCheck;\n  int idx;\n  uint counter;\n  \n  for (counter = 0; counter < 0x10; counter = counter + 1) {\n    mask = 1 << (counter & 0xff);\n    flagCheck = *flags & mask;\n    if (flagCheck == mask) {\n      if ((flags[1] == 2) || (flags[1] == 0x12)) {\n        mask = flags[4];\n        inputParams[(counter >> 3) + 8] = inputParams[(counter >> 3) + 8] & ~(0xf << ((counter & 7) << 2));\n        inputParams[(counter >> 3) + 8] = inputParams[(counter >> 3) + 8] | mask << ((counter & 7) << 2);\n      }\n      *inputParams = *inputParams & ~(3 << ((counter & 0x7f) << 1));\n      *inputParams = *inputParams | (flags[1] & 3) << ((counter & 0x7f) << 1);\n      if ((((flags[1] == 1) || (flags[1] == 2)) || (flags[1] == 0x11)) || (flags[1] == 0x12)\n         ) {\n        inputParams[2] = inputParams[2] & ~(3 << ((counter & 0x7f) << 1));\n        inputParams[2] = inputParams[2] | flags[3] << ((counter & 0x7f) << 1);\n        inputParams[1] = inputParams[1] & ~(1 << (counter & 0xff));\n        inputParams[1] = inputParams[1] | (flags[1] >> 4 & 1) << (counter & 0xff);\n      }\n      inputParams[3] = inputParams[3] & ~(3 << ((counter & 0x7f) << 1));\n      inputParams[3] = inputParams[3] | flags[2] << ((counter & 0x7f) << 1);\n      if ((flags[1] & 0x10000000) != 0) {\n        _DAT_40023844 = _DAT_40023844 | 0x4000;\n        *(uint *)(((counter >> 2) + 2) * 4 + 0x40013800) =\n             ~(0xf << ((counter & 3) << 2)) & *(uint *)(((counter >> 2) + 2) * 4 + 0x40013800);\n        if (inputParams == (uint *)0x40020000) {\n          idx = 0;\n        }\n        else if (inputParams == (uint *)0x40020400) {\n          idx = 1;\n        }\n        else if (inputParams == (uint *)0x40020800) {\n          idx = 2;\n        }\n        else if (inputParams == (uint *)0x40020c00) {\n          idx = 3;\n        }\n        else if (inputParams == (uint *)0x40021000) {\n          idx = 4;\n        }\n        else if (inputParams == (uint *)0x40021400) {\n          idx = 5;\n        }\n        else if (inputParams == (uint *)0x40021800) {\n          idx = 6;\n        }\n        else if (inputParams == (uint *)0x40021c00) {\n          idx = 7;\n        }\n        else if (inputParams == (uint *)0x40022000) {\n          idx = 8;\n        }\n        else if (inputParams == (uint *)0x40022400) {\n          idx = 9;\n        }\n        else {\n          idx = 10;\n        }\n        *(uint *)(((counter >> 2) + 2) * 4 + 0x40013800) =\n             idx << ((counter & 3) << 2) | *(uint *)(((counter >> 2) + 2) * 4 + 0x40013800);\n        _DAT_40013c00 = ~flagCheck & _DAT_40013c00;\n        _DAT_40013c04 = ~flagCheck & _DAT_40013c04;\n        if ((flags[1] & 0x10000) != 0) {\n          _DAT_40013c00 = flagCheck | _DAT_40013c00;\n        }\n        if ((flags[1] & 0x20000) != 0) {\n          _DAT_40013c04 = flagCheck | _DAT_40013c04;\n        }\n        _DAT_40013c08 = ~flagCheck & _DAT_40013c08;\n        _DAT_40013c0c = ~flagCheck & _DAT_40013c0c;\n        if ((flags[1] & 0x100000) != 0) {\n          _DAT_40013c08 = flagCheck | _DAT_40013c08;\n        }\n        if ((flags[1] & 0x200000) != 0) {\n          _DAT_40013c0c = flagCheck | _DAT_40013c0c;\n        }\n      }\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08006e88": "update_params_08006e88",
                "param_1": "inputParams",
                "param_2": "flags",
                "uVar1": "mask",
                "uVar2": "flagCheck",
                "iVar3": "idx",
                "local_c": "counter"
            },
            "calling": [
                "HAL_RCC_MCOConfig",
                "gpio_init"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800733e": {
            "entrypoint": "0x0800733e",
            "current_name": "update_param_0800733e",
            "code": "\nvoid updateParam_0800733e(int objectAddress,undefined2 value,char isSecondParam)\n\n{\n  if (isSecondParam == '\\0') {\n    *(undefined2 *)(objectAddress + 0x1a) = value;\n  }\n  else {\n    *(undefined2 *)(objectAddress + 0x18) = value;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800733e": "update_param_0800733e",
                "param_1": "objectAddress",
                "param_2": "value",
                "param_3": "isSecondParam"
            },
            "calling": [
                "gpio_init"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800738e": {
            "entrypoint": "0x0800738e",
            "current_name": "handle_external_interrupt_0800738e",
            "code": "\n\n\nvoid handleExternalInterrupt_0800738e(ushort interruptFlag)\n\n{\n  if ((interruptFlag & _DAT_40013c14) != 0) {\n    _DAT_40013c14 = (uint)interruptFlag;\n    handleGPIOInterrupt(interruptFlag);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800738e": "handle_external_interrupt_0800738e",
                "param_1": "interruptFlag",
                "HAL_GPIO_EXTI_Callback": "handleGPIOInterrupt"
            },
            "calling": [],
            "called": [
                "HAL_GPIO_EXTI_Callback"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080073c0": {
            "entrypoint": "0x080073c0",
            "current_name": "FUNC_080073c0",
            "code": "\nvoid FUNC_080073c0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080073c0": "FUNC_080073c0"
            },
            "calling": [
                "HAL_GPIO_EXTI_IRQHandler"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080073d4": {
            "entrypoint": "0x080073d4",
            "current_name": "set_bit_in_memory_080073d4",
            "code": "\nvoid setBitInMemory_080073d4(uint inputValue)\n\n{\n  *(short *)(((int)inputValue >> 4) * 0x400 + 0x4002001a) = (short)(1 << (inputValue & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_080073d4": "set_bit_in_memory_080073d4",
                "param_1": "inputValue"
            },
            "calling": [
                "FUN_08007520"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007402": {
            "entrypoint": "0x08007402",
            "current_name": "set_bit_in_memory_08007402",
            "code": "\nvoid setBitInMemory_08007402(uint input)\n\n{\n  *(short *)(((int)input >> 4) * 0x400 + 0x40020018) = (short)(1 << (input & 0xf));\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007402": "set_bit_in_memory_08007402",
                "param_1": "input"
            },
            "calling": [
                "FUN_080074c8"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007430": {
            "entrypoint": "0x08007430",
            "current_name": "run_infinite_loop_08007430",
            "code": "\nvoid run_infinite_loop_08007430(void)\n\n{\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_08007430": "run_infinite_loop_08007430"
            },
            "calling": [
                "SystemClock_Config"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007436": {
            "entrypoint": "0x08007436",
            "current_name": "initialize_system_08007436",
            "code": "\n\n\nvoid initializeSystem_08007436(void)\n\n{\n  int iVar1;\n  undefined4 oscConfigParameter1;\n  undefined4 oscConfigParameter2;\n  undefined4 oscConfigParameter3;\n  undefined4 oscConfigParameter4;\n  undefined4 oscConfigParameter5;\n  undefined4 oscConfigParameter6;\n  undefined4 oscConfigParameter7;\n  undefined4 oscConfigParameter8;\n  undefined4 clockConfigParameter1;\n  undefined4 clockConfigParameter2;\n  undefined4 clockConfigParameter3;\n  undefined4 clockConfigParameter4;\n  undefined4 clockConfigParameter5;\n  \n  _DAT_40023840 = _DAT_40023840 | 0x10000000;\n  _DAT_40007000 = _DAT_40007000 | 0xc000;\n  oscConfigParameter1 = 1;\n  oscConfigParameter2 = 1;\n  oscConfigParameter3 = 2;\n  oscConfigParameter4 = 0x400000;\n  oscConfigParameter5 = 8;\n  oscConfigParameter6 = 0x150;\n  oscConfigParameter7 = 2;\n  oscConfigParameter8 = 7;\n  iVar1 = HAL_RCC_OscConfig(&oscConfigParameter1);\n  if (iVar1 != 0) {\n    Error_Handler();\n  }\n  clockConfigParameter1 = 0xf;\n  clockConfigParameter2 = 2;\n  clockConfigParameter3 = 0;\n  clockConfigParameter4 = 0x1400;\n  clockConfigParameter5 = 0x1000;\n  iVar1 = HAL_RCC_ClockConfig(&clockConfigParameter1,5);\n  if (iVar1 != 0) {\n    Error_Handler();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007436": "initialize_system_08007436",
                "local_4c": "oscConfigParameter1",
                "local_48": "oscConfigParameter2",
                "local_34": "oscConfigParameter3",
                "local_30": "oscConfigParameter4",
                "local_2c": "oscConfigParameter5",
                "local_28": "oscConfigParameter6",
                "local_24": "oscConfigParameter7",
                "local_20": "oscConfigParameter8",
                "local_1c": "clockConfigParameter1",
                "local_18": "clockConfigParameter2",
                "local_14": "clockConfigParameter3",
                "local_10": "clockConfigParameter4",
                "local_c": "clockConfigParameter5"
            },
            "calling": [
                "main"
            ],
            "called": [
                "Error_Handler",
                "HAL_RCC_OscConfig",
                "HAL_RCC_ClockConfig"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080074c8": {
            "entrypoint": "0x080074c8",
            "current_name": "handle_interrupt_080074c8",
            "code": "\nvoid handleInterrupt_080074c8(uint interruptFlags)\n\n{\n  if ((interruptFlags & 1) != 0) {\n    setGpio(0x3e);\n  }\n  if ((DAT_20000e4c != 0) && ((interruptFlags & 0x1e) != 0)) {\n    handleLimitsInterrupt();\n  }\n  if ((DAT_20000e50 != 0) && ((interruptFlags & 0x80) != 0)) {\n    handleButtonsInterrupt(interruptFlags);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_080074c8": "handle_interrupt_080074c8",
                "param_1": "interruptFlags",
                "gpio_set": "setGpio",
                "limits_isr": "handleLimitsInterrupt",
                "buttons_isr": "handleButtonsInterrupt"
            },
            "calling": [
                "debounce_isr"
            ],
            "called": [
                "gpio_set",
                "limits_isr",
                "buttons_isr"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007520": {
            "entrypoint": "0x08007520",
            "current_name": "clear_gpio_if_lsb_set_08007520",
            "code": "\nvoid clearGPIOIfLSBSet_08007520(uint inputValue)\n\n{\n  if ((inputValue & 1) != 0) {\n    clearGPIO(0x3e);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007520": "clear_gpio_if_lsb_set_08007520",
                "param_1": "inputValue",
                "gpio_clr": "clearGPIO"
            },
            "calling": [
                "debounce_isr"
            ],
            "called": [
                "gpio_clr"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007540": {
            "entrypoint": "0x08007540",
            "current_name": "initialize_system_08007540",
            "code": "\nundefined4 initializeSystem_08007540(void)\n\n{\n  initializeHAL();\n  configureSystemClock();\n  initializeGPIO();\n  initializeTimers();\n  initializeDebounce();\n  initializeUSART();\n  startForkserver(0);\n  runGrblMain();\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08007540": "initialize_system_08007540",
                "HAL_Init": "initializeHAL",
                "SystemClock_Config": "configureSystemClock",
                "gpio_init": "initializeGPIO",
                "timers_init": "initializeTimers",
                "debounce_init": "initializeDebounce",
                "usart_init": "initializeUSART",
                "grbl_main": "runGrblMain"
            },
            "calling": [
                "Reset_Handler"
            ],
            "called": [
                "grbl_main",
                "debounce_init",
                "HAL_Init",
                "timers_init",
                "startForkserver",
                "gpio_init",
                "SystemClock_Config",
                "usart_init"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800756c": {
            "entrypoint": "0x0800756c",
            "current_name": "initialize_hardware_0800756c",
            "code": "\n\n\nvoid initializeHardware_0800756c(void)\n\n{\n  _DAT_40023808 = 0;\n  _DAT_40023804 = 0x24003010;\n  _DAT_40023800 = _DAT_40023800 & 0xfef2ffff | 1;\n  _DAT_4002380c = 0;\n  _DAT_e000ed08 = 0x8000000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800756c": "initialize_hardware_0800756c"
            },
            "calling": [
                "Reset_Handler"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080076c8": {
            "entrypoint": "0x080076c8",
            "current_name": "update_bit_value_080076c8",
            "code": "\nvoid updateBitValue_080076c8(uint inputValue)\n\n{\n  *(uint *)(((int)inputValue >> 4) * 0x400 + 0x40020014) =\n       *(uint *)(((int)inputValue >> 4) * 0x400 + 0x40020014) ^ 1 << (inputValue & 0xf);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080076c8": "update_bit_value_080076c8",
                "param_1": "inputValue"
            },
            "calling": [
                "SysTick_Handler"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007756": {
            "entrypoint": "0x08007756",
            "current_name": "toggle_led_and_debounce_08007756",
            "code": "\nvoid toggleLEDAndDebounce_08007756(void)\n\n{\n  uint currentTick;\n  \n  currentTick = getCurrentTick();\n  if ((currentTick & 0x1ff) == 0) {\n    toggleGPIO(0x3c);\n  }\n  if ((currentTick & 0xf) == 0) {\n    debounceInterruptServiceRoutine();\n  }\n  incrementTick();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007756": "toggle_led_and_debounce_08007756",
                "uVar1": "currentTick",
                "HAL_GetTick": "getCurrentTick",
                "gpio_toggle": "toggleGPIO",
                "debounce_isr": "debounceInterruptServiceRoutine",
                "HAL_IncTick": "incrementTick"
            },
            "calling": [],
            "called": [
                "debounce_isr",
                "gpio_toggle",
                "HAL_IncTick",
                "HAL_GetTick"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800778c": {
            "entrypoint": "0x0800778c",
            "current_name": "initialize_gpio_0800778c",
            "code": "\n\n\nvoid initializeGPIO_0800778c(void)\n\n{\n  int iterationIndex;\n  int pinMask;\n  undefined4 gpioConfig1;\n  undefined4 gpioConfig2;\n  undefined4 gpioConfig3;\n  undefined4 gpioConfig4;\n  uint *gpioPort;\n  uint counter;\n  \n  for (counter = 0; counter < 0x11; counter = counter + 1) {\n    iterationIndex = counter * 0x18;\n    gpioPort = (uint *)(&DAT_0800bcbc + iterationIndex);\n    _DAT_40023830 = _DAT_40023830 | 1 << (*gpioPort >> 4 & 0xff);\n    pinMask = 1 << (*gpioPort & 0xf);\n    gpioConfig1 = *(undefined4 *)(&DAT_0800bcc0 + iterationIndex);\n    gpioConfig2 = *(undefined4 *)(&DAT_0800bcc4 + iterationIndex);\n    gpioConfig3 = *(undefined4 *)(&DAT_0800bcc8 + iterationIndex);\n    gpioConfig4 = *(undefined4 *)(&DAT_0800bccc + iterationIndex);\n    HAL_GPIO_Init(((*gpioPort >> 4) + 0x100080) * 0x400,&pinMask);\n    if (-1 < (int)gpioPort[5]) {\n      HAL_GPIO_WritePin(((*gpioPort >> 4) + 0x100080) * 0x400,1 << (*gpioPort & 0xf) & 0xffff,\n                        gpioPort[5] & 0xff);\n    }\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800778c": "initialize_gpio_0800778c",
                "iVar1": "iterationIndex",
                "local_24": "pinMask",
                "local_20": "gpioConfig1",
                "local_1c": "gpioConfig2",
                "local_18": "gpioConfig3",
                "local_14": "gpioConfig4",
                "local_10": "gpioPort",
                "local_c": "counter"
            },
            "calling": [
                "main"
            ],
            "called": [
                "HAL_GPIO_WritePin",
                "HAL_GPIO_Init"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007854": {
            "entrypoint": "0x08007854",
            "current_name": "check_bit_value_08007854",
            "code": "\nuint check_bit_value_08007854(uint bit_value)\n\n{\n  return *(uint *)(((int)bit_value >> 4) * 0x400 + 0x40020010) >> (bit_value & 0xf) & 1;\n}\n\n",
            "renaming": {
                "FUN_08007854": "check_bit_value_08007854",
                "param_1": "bit_value"
            },
            "calling": [
                "debounce_input"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007884": {
            "entrypoint": "0x08007884",
            "current_name": "read_gpio_pins_08007884",
            "code": "\nuint read_gpio_pins_08007884(void)\n\n{\n  int gpio_pin_1;\n  int gpio_pin_2;\n  int gpio_pin_3;\n  int gpio_pin_4;\n  int gpio_pin_5;\n  uint gpio_pin_0;\n  \n  gpio_pin_1 = gpio_rd(0x36);\n  gpio_pin_2 = gpio_rd(0x37);\n  gpio_pin_3 = gpio_rd(0x38);\n  gpio_pin_4 = gpio_rd(0x39);\n  gpio_pin_5 = gpio_rd(0xf);\n  gpio_pin_0 = gpio_rd(0);\n  return gpio_pin_0 | gpio_pin_1 << 4 | gpio_pin_2 << 3 | gpio_pin_3 << 2 | gpio_pin_4 << 1 | gpio_pin_5 << 7;\n}\n\n",
            "renaming": {
                "FUN_08007884": "read_gpio_pins_08007884",
                "iVar1": "gpio_pin_1",
                "iVar2": "gpio_pin_2",
                "iVar3": "gpio_pin_3",
                "iVar4": "gpio_pin_4",
                "iVar5": "gpio_pin_5",
                "uVar6": "gpio_pin_0"
            },
            "calling": [
                "debounce_isr"
            ],
            "called": [
                "gpio_rd"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080078f4": {
            "entrypoint": "0x080078f4",
            "current_name": "calculate_combine_080078f4",
            "code": "\nuint calculateCombine_080078f4(void)\n\n{\n  int iterator;\n  uint result;\n  \n  result = 0;\n  for (iterator = 0; iterator < 4; iterator = iterator + 1) {\n    result = *(uint *)(&DAT_20000e54 + iterator * 4) | result;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080078f4": "calculate_combine_080078f4",
                "local_10": "iterator",
                "local_c": "result"
            },
            "calling": [
                "debounce_isr",
                "homing_cycle"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007930": {
            "entrypoint": "0x08007930",
            "current_name": "update_button_state_08007930",
            "code": "\nvoid updateButtonState_08007930(void)\n\n{\n  int buttonState;\n  uint previousButtonState;\n  undefined4 debouncedInput;\n  uint debouncedReading;\n  uint changedBits;\n  \n  buttonState = DAT_20000e68;\n  previousButtonState = DAT_20000e64;\n  if (DAT_20000e6c != 0) {\n    debouncedInput = debounce_input();\n    *(undefined4 *)(&DAT_20000e54 + buttonState * 4) = debouncedInput;\n    if (DAT_20000e68 == 3) {\n      DAT_20000e68 = 0;\n    }\n    else {\n      DAT_20000e68 = DAT_20000e68 + 1;\n    }\n    debouncedReading = debounce_rd();\n    previousButtonState = DAT_20000e64;\n    if (debouncedReading != DAT_20000e64) {\n      changedBits = ~debouncedReading & DAT_20000e64;\n      if ((~DAT_20000e64 & debouncedReading) != 0) {\n        handle_interrupt_080074c8(~DAT_20000e64 & debouncedReading);\n      }\n      previousButtonState = debouncedReading;\n      if (changedBits != 0) {\n        clear_gpio_if_lsb_set_08007520(changedBits);\n      }\n    }\n  }\n  DAT_20000e64 = previousButtonState;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007930": "update_button_state_08007930",
                "iVar1": "buttonState",
                "uVar2": "previousButtonState",
                "uVar3": "debouncedInput",
                "uVar4": "debouncedReading",
                "uVar5": "changedBits"
            },
            "calling": [
                "SysTick_Handler"
            ],
            "called": [
                "FUN_080074c8",
                "debounce_rd",
                "FUN_08007520",
                "debounce_input"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080079c0": {
            "entrypoint": "0x080079c0",
            "current_name": "initialize_data_080079c0",
            "code": "\nvoid initializeData_080079c0(void)\n\n{\n  memset(&DAT_20000e54,0,0x18);\n  DAT_20000e6c = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_080079c0": "initialize_data_080079c0"
            },
            "calling": [
                "main"
            ],
            "called": [
                "memset"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080079e0": {
            "entrypoint": "0x080079e0",
            "current_name": "set_bit_080079e0",
            "code": "\nvoid setBit_080079e0(byte byteValue)\n\n{\n  *(int *)(((uint)(int)(char)byteValue >> 5) * 4 + -0x1fff1f00) = 1 << (byteValue & 0x1f);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080079e0": "set_bit_080079e0",
                "param_1": "byteValue"
            },
            "calling": [
                "enable_tim_interrupt"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007a10": {
            "entrypoint": "0x08007a10",
            "current_name": "update_flag_value_08007a10",
            "code": "\n\n\nvoid updateFlagValue_08007a10(undefined *flagAddress)\n\n{\n  if (flagAddress == (undefined *)0x40000000) {\n    _DAT_40023840 = _DAT_40023840 | 1;\n  }\n  else if (flagAddress == (undefined *)0x40000400) {\n    _DAT_40023840 = _DAT_40023840 | 2;\n  }\n  else if (flagAddress == &DAT_40000800) {\n    _DAT_40023840 = _DAT_40023840 | 4;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007a10": "update_flag_value_08007a10",
                "param_1": "flagAddress"
            },
            "calling": [
                "g540_timer_init",
                "step_timer_init"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007a70": {
            "entrypoint": "0x08007a70",
            "current_name": "set_and_enable_priority_irq_08007a70",
            "code": "\nvoid setAndEnablePriorityIRQ_08007a70(undefined *address,undefined4 priority,undefined4 subpriority)\n\n{\n  undefined interruptLevel;\n  \n  if (address == (undefined *)0x40000000) {\n    interruptLevel = 0x1c;\n  }\n  else if (address == (undefined *)0x40000400) {\n    interruptLevel = 0x1d;\n  }\n  else {\n    if (address != &DAT_40000800) {\n      return;\n    }\n    interruptLevel = 0x1e;\n  }\n  HAL_NVIC_SetPriority(interruptLevel,priority,subpriority);\n  NVIC_EnableIRQ(interruptLevel);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007a70": "set_and_enable_priority_irq_08007a70",
                "param_1": "address",
                "param_2": "priority",
                "param_3": "subpriority",
                "local_c": "interruptLevel"
            },
            "calling": [
                "step_timer_init"
            ],
            "called": [
                "NVIC_EnableIRQ",
                "HAL_NVIC_SetPriority"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007ad0": {
            "entrypoint": "0x08007ad0",
            "current_name": "initialize_timers_08007ad0",
            "code": "\n\n\nvoid initialize_timers_08007ad0(void)\n\n{\n  enable_tim_clock(0x40000000);\n  _DAT_40000000 = 0;\n  _DAT_40000004 = 0;\n  _DAT_40000008 = 0;\n  _DAT_4000000c = 0;\n  _DAT_40000010 = 0;\n  _DAT_40000018 = 0;\n  _DAT_4000001c = 0;\n  _DAT_40000020 = 0;\n  _DAT_40000024 = 0;\n  _DAT_40000028 = DAT_20000000 / 42000000 - 1;\n  _DAT_4000002c = 0;\n  _DAT_40000034 = 0;\n  _DAT_40000038 = 0;\n  _DAT_4000003c = 0;\n  _DAT_40000040 = 0;\n  _DAT_40000048 = 0;\n  _DAT_4000004c = 0;\n  enable_tim_interrupt(0x40000000,0,0);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007ad0": "initialize_timers_08007ad0"
            },
            "calling": [
                "timers_init"
            ],
            "called": [
                "enable_tim_interrupt",
                "enable_tim_clock"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007b70": {
            "entrypoint": "0x08007b70",
            "current_name": "set_local_flags_08007b70",
            "code": "\n\n\nvoid setLocalFlags_08007b70(void)\n\n{\n  uint flags;\n  \n  flags = 1;\n  if (_DAT_40000034 != 0) {\n    flags = 3;\n  }\n  if (_DAT_40000038 != 0) {\n    flags = flags | 4;\n  }\n  _DAT_4000000c = _DAT_4000000c | flags;\n  _DAT_40000000 = _DAT_40000000 | 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007b70": "set_local_flags_08007b70",
                "local_c": "flags"
            },
            "calling": [
                "st_wake_up"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007bc2": {
            "entrypoint": "0x08007bc2",
            "current_name": "clear_flags_08007bc2",
            "code": "\n\n\nvoid clearFlags_08007bc2(void)\n\n{\n  _DAT_40000000 = _DAT_40000000 & 0xfffffffe;\n  _DAT_4000000c = _DAT_4000000c & 0xfffffff8;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007bc2": "clear_flags_08007bc2"
            },
            "calling": [
                "st_go_idle"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007bf0": {
            "entrypoint": "0x08007bf0",
            "current_name": "set_minimum_value_08007bf0",
            "code": "\n\n\nvoid set_minimum_value_08007bf0(uint value)\n\n{\n  _DAT_4000002c = value;\n  if (value <= _DAT_40000024) {\n    _DAT_40000024 = value;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007bf0": "set_minimum_value_08007bf0",
                "param_1": "value"
            },
            "calling": [
                "set_step_events_per_minute"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007c40": {
            "entrypoint": "0x08007c40",
            "current_name": "initialize_global_variable_08007c40",
            "code": "\n\n\nvoid initializeGlobalVariable_08007c40(undefined4 data)\n\n{\n  _DAT_40000034 = data;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007c40": "initialize_global_variable_08007c40",
                "param_1": "data"
            },
            "calling": [
                "st_wake_up"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007c5e": {
            "entrypoint": "0x08007c5e",
            "current_name": "set_global_variable_08007c5e",
            "code": "\n\n\nvoid setGlobalVariable_08007c5e(undefined4 value)\n\n{\n  _DAT_40000038 = value;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007c5e": "set_global_variable_08007c5e",
                "param_1": "value"
            },
            "calling": [
                "st_wake_up"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007c7c": {
            "entrypoint": "0x08007c7c",
            "current_name": "handle_interrupts_08007c7c",
            "code": "\n\n\nvoid handle_interrupts_08007c7c(void)\n\n{\n  if (((_DAT_40000010 & 2) != 0) && ((_DAT_4000000c & 2) != 0)) {\n    _DAT_40000010 = _DAT_40000010 & 0xfffffffd;\n    handle_delay_interrupt();\n  }\n  if (((_DAT_40000010 & 4) != 0) && ((_DAT_4000000c & 4) != 0)) {\n    _DAT_40000010 = _DAT_40000010 & 0xfffffffb;\n    handle_pulse_interrupt();\n  }\n  if (((_DAT_40000010 & 1) != 0) && ((_DAT_4000000c & 1) != 0)) {\n    _DAT_40000010 = _DAT_40000010 & 0xfffffffe;\n    handle_period_interrupt();\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007c7c": "handle_interrupts_08007c7c",
                "step_delay_isr": "handle_delay_interrupt",
                "step_pulse_isr": "handle_pulse_interrupt",
                "step_period_isr": "handle_period_interrupt"
            },
            "calling": [],
            "called": [
                "step_pulse_isr",
                "step_period_isr",
                "step_delay_isr"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007d08": {
            "entrypoint": "0x08007d08",
            "current_name": "initialize_clock_08007d08",
            "code": "\n\n\nvoid initialize_clock_08007d08(void)\n\n{\n  enable_tim_clock(&DAT_40000800);\n  _DAT_40000800 = 0x80;\n  _DAT_40000804 = 0;\n  _DAT_40000808 = 0;\n  _DAT_4000080c = 0;\n  _DAT_40000810 = 0;\n  _DAT_40000818 = 0x6800;\n  _DAT_4000081c = 0;\n  _DAT_40000820 = 0;\n  _DAT_40000824 = 0;\n  _DAT_40000828 = DAT_20000000 / 4800000 - 1;\n  _DAT_4000082c = 199;\n  _DAT_40000834 = 0;\n  _DAT_40000838 = 100;\n  _DAT_4000083c = 0;\n  _DAT_40000840 = 0;\n  _DAT_40000848 = 0;\n  _DAT_4000084c = 0;\n  _DAT_40000814 = 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007d08": "initialize_clock_08007d08"
            },
            "calling": [
                "timers_init"
            ],
            "called": [
                "enable_tim_clock"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007da8": {
            "entrypoint": "0x08007da8",
            "current_name": "set_flags_08007da8",
            "code": "\n\n\nvoid setFlags_08007da8(void)\n\n{\n  _DAT_40000820 = _DAT_40000820 | 0x10;\n  _DAT_40000800 = _DAT_40000800 | 1;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007da8": "set_flags_08007da8"
            },
            "calling": [
                "timers_init"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e08": {
            "entrypoint": "0x08007e08",
            "current_name": "initialize_sensors_08007e08",
            "code": "\nvoid initialize_sensors_08007e08(void)\n\n{\n  initialize_step_timer();\n  initialize_g540_timer();\n  start_g540_timer();\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007e08": "initialize_sensors_08007e08",
                "step_timer_init": "initialize_step_timer",
                "g540_timer_init": "initialize_g540_timer",
                "g540_timer_start": "start_g540_timer"
            },
            "calling": [
                "main"
            ],
            "called": [
                "g540_timer_init",
                "g540_timer_start",
                "step_timer_init"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e1c": {
            "entrypoint": "0x08007e1c",
            "current_name": "write_byte_to_memory_08007e1c",
            "code": "\n\n\nvoid writeByteToMemory_08007e1c(byte byteToWrite)\n\n{\n  do {\n  } while ((_DAT_40004400 & 0x80) == 0);\n  _DAT_40004404 = (uint)byteToWrite;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007e1c": "write_byte_to_memory_08007e1c",
                "param_1": "byteToWrite"
            },
            "calling": [
                "__io_putchar",
                "serial_write"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e58": {
            "entrypoint": "0x08007e58",
            "current_name": "is_flag_set_08007e58",
            "code": "\n\n\nbool is_flag_set_08007e58(void)\n\n{\n  return (_DAT_40004400 & 0x20) != 0;\n}\n\n",
            "renaming": {
                "FUN_08007e58": "is_flag_set_08007e58"
            },
            "calling": [
                "serial_read"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007e84": {
            "entrypoint": "0x08007e84",
            "current_name": "get_lowest_byte_08007e84",
            "code": "\n\n\nuint getLowestByte_08007e84(void)\n\n{\n  return _DAT_40004404 & 0xff;\n}\n\n",
            "renaming": {
                "FUN_08007e84": "get_lowest_byte_08007e84"
            },
            "calling": [
                "serial_read"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007ea4": {
            "entrypoint": "0x08007ea4",
            "current_name": "update_permission_08007ea4",
            "code": "\n\n\nvoid updatePermission_08007ea4(undefined *address)\n\n{\n  if (address == (undefined *)0x40011000) {\n    _DAT_40023844 = _DAT_40023844 | 0x10;\n  }\n  else if (address == &DAT_40004400) {\n    _DAT_40023840 = _DAT_40023840 | 0x20000;\n  }\n  else if (address == (undefined *)0x40004800) {\n    _DAT_40023840 = _DAT_40023840 | 0x40000;\n  }\n  else if (address == (undefined *)0x40004c00) {\n    _DAT_40023840 = _DAT_40023840 | 0x80000;\n  }\n  else if (address == (undefined *)0x40005000) {\n    _DAT_40023840 = _DAT_40023840 | 0x100000;\n  }\n  else if (address == (undefined *)0x40011400) {\n    _DAT_40023844 = _DAT_40023844 | 0x20;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007ea4": "update_permission_08007ea4",
                "param_1": "address"
            },
            "calling": [
                "usart_init"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08007f54": {
            "entrypoint": "0x08007f54",
            "current_name": "calculate_clock_value_08007f54",
            "code": "\nvoid calculateClockValue_08007f54(int clockAddress,int factor)\n\n{\n  ulonglong totalFreq;\n  int currentFreq;\n  int previousFreq;\n  undefined8 pclkFreq;\n  \n  if ((*(uint *)(clockAddress + 0xc) & 0x8000) == 0) {\n    if ((clockAddress != 0x40011000) && (clockAddress != 0x40011400)) {\n      pclkFreq = HAL_RCC_GetPCLK1Freq();\n      totalFreq = (ulonglong)(uint)((int)pclkFreq * 0x19) / (ulonglong)(uint)(factor << 2);\n      currentFreq = HAL_RCC_GetPCLK1Freq\n                        ((int)pclkFreq,(int)((ulonglong)pclkFreq >> 0x20),(int)(totalFreq * 0x51eb851f));\n      previousFreq = HAL_RCC_GetPCLK1Freq();\n      *(uint *)(clockAddress + 8) =\n           (int)(totalFreq / 100) << 4 |\n           (((uint)(currentFreq * 0x19) / (uint)(factor << 2) +\n            (int)(((ulonglong)(uint)(previousFreq * 0x19) / (ulonglong)(uint)(factor << 2)) / 100) * -100)\n            * 0x10 + 0x32) / 100 & 0xf;\n      return;\n    }\n    pclkFreq = HAL_RCC_GetPCLK2Freq();\n    totalFreq = (ulonglong)(uint)((int)pclkFreq * 0x19) / (ulonglong)(uint)(factor << 2);\n    currentFreq = HAL_RCC_GetPCLK2Freq\n                      ((int)pclkFreq,(int)((ulonglong)pclkFreq >> 0x20),(int)(totalFreq * 0x51eb851f));\n    previousFreq = HAL_RCC_GetPCLK2Freq();\n    *(uint *)(clockAddress + 8) =\n         (int)(totalFreq / 100) << 4 |\n         (((uint)(currentFreq * 0x19) / (uint)(factor << 2) +\n          (int)(((ulonglong)(uint)(previousFreq * 0x19) / (ulonglong)(uint)(factor << 2)) / 100) * -100) *\n          0x10 + 0x32) / 100 & 0xf;\n  }\n  else {\n    if ((clockAddress != 0x40011000) && (clockAddress != 0x40011400)) {\n      pclkFreq = HAL_RCC_GetPCLK1Freq();\n      totalFreq = (ulonglong)(uint)((int)pclkFreq * 0x19) / (ulonglong)(uint)(factor << 1);\n      currentFreq = HAL_RCC_GetPCLK1Freq\n                        ((int)pclkFreq,(int)((ulonglong)pclkFreq >> 0x20),(int)(totalFreq * 0x51eb851f));\n      previousFreq = HAL_RCC_GetPCLK1Freq();\n      *(uint *)(clockAddress + 8) =\n           (int)(totalFreq / 100) << 4 |\n           (((uint)(currentFreq * 0x19) / (uint)(factor << 1) +\n            (int)(((ulonglong)(uint)(previousFreq * 0x19) / (ulonglong)(uint)(factor << 1)) / 100) * -100)\n            * 0x10 + 0x32) / 100 & 0xf;\n      return;\n    }\n    pclkFreq = HAL_RCC_GetPCLK2Freq();\n    totalFreq = (ulonglong)(uint)((int)pclkFreq * 0x19) / (ulonglong)(uint)(factor << 1);\n    currentFreq = HAL_RCC_GetPCLK2Freq\n                      ((int)pclkFreq,(int)((ulonglong)pclkFreq >> 0x20),(int)(totalFreq * 0x51eb851f));\n    previousFreq = HAL_RCC_GetPCLK2Freq();\n    *(uint *)(clockAddress + 8) =\n         (int)(totalFreq / 100) << 4 |\n         (((uint)(currentFreq * 0x19) / (uint)(factor << 1) +\n          (int)(((ulonglong)(uint)(previousFreq * 0x19) / (ulonglong)(uint)(factor << 1)) / 100) * -100) *\n          0x10 + 0x32) / 100 & 0xf;\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_08007f54": "calculate_clock_value_08007f54",
                "param_1": "clockAddress",
                "param_2": "factor",
                "uVar1": "totalFreq",
                "iVar2": "currentFreq",
                "iVar3": "previousFreq",
                "uVar4": "pclkFreq"
            },
            "calling": [
                "usart_init"
            ],
            "called": [
                "HAL_RCC_GetPCLK2Freq",
                "HAL_RCC_GetPCLK1Freq"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008190": {
            "entrypoint": "0x08008190",
            "current_name": "initialize_usart_08008190",
            "code": "\n\n\nvoid initialize_USART_08008190(void)\n\n{\n  enable_clock(&DAT_40004400);\n  _DAT_4000440c = _DAT_4000440c & 0xffff400c | 0xc;\n  _DAT_40004410 = _DAT_40004410 & 0xffff8090;\n  _DAT_40004414 = _DAT_40004414 & 0xfffff000;\n  _DAT_40004400 = _DAT_40004400 & 0xfffffc00;\n  configure_baud_rate(&DAT_40004400,0x1c200);\n  _DAT_4000440c = _DAT_4000440c | 0x2000;\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008190": "initialize_usart_08008190",
                "enable_usart_clock": "enable_clock",
                "set_baud_rate": "configure_baud_rate"
            },
            "calling": [
                "main"
            ],
            "called": [
                "enable_usart_clock",
                "set_baud_rate"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008244": {
            "entrypoint": "0x08008244",
            "current_name": "FUNC_08008244",
            "code": "\nvoid FUNC_08008244(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008244": "FUNC_08008244"
            },
            "calling": [
                "grbl_main"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_08008250": {
            "entrypoint": "0x08008250",
            "current_name": "print_character_08008250",
            "code": "\nvoid print_character_08008250(undefined character)\n\n{\n  print_to_terminal(character);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008250": "print_character_08008250",
                "param_1": "character",
                "usart_putc": "print_to_terminal"
            },
            "calling": [
                "print_uint32_base10",
                "printPgmString",
                "printString",
                "print_base2",
                "printInteger",
                "printFloat"
            ],
            "called": [
                "usart_putc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800826a": {
            "entrypoint": "0x0800826a",
            "current_name": "send_character_0800826a",
            "code": "\nundefined4 send_character_0800826a(undefined character)\n\n{\n  send_to_usart(character);\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800826a": "send_character_0800826a",
                "param_1": "character",
                "usart_putc": "send_to_usart"
            },
            "calling": [],
            "called": [
                "usart_putc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008286": {
            "entrypoint": "0x08008286",
            "current_name": "receive_data_08008286",
            "code": "\nundefined receiveData_08008286(void)\n\n{\n  undefined receivedByte;\n  int dataAvailable;\n  \n  dataAvailable = checkDataAvailable();\n  if (dataAvailable != 0) {\n    receivedByte = readData();\n    dataAvailable = processReceivedData(receivedByte);\n    if (dataAvailable == 0) {\n      return receivedByte;\n    }\n  }\n  return 0xff;\n}\n\n",
            "renaming": {
                "FUN_08008286": "receive_data_08008286",
                "uVar1": "receivedByte",
                "iVar2": "dataAvailable",
                "usart_tstc": "checkDataAvailable",
                "usart_getc": "readData",
                "serial_rx_hook": "processReceivedData"
            },
            "calling": [
                "protocol_process"
            ],
            "called": [
                "usart_tstc",
                "serial_rx_hook",
                "usart_getc"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080082ba": {
            "entrypoint": "0x080082ba",
            "current_name": "FUNC_080082ba",
            "code": "\nvoid FUNC_080082ba(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_080082ba": "FUNC_080082ba"
            },
            "calling": [
                "grbl_main"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_080082d0": {
            "entrypoint": "0x080082d0",
            "current_name": "arithmetic_operation_080082d0",
            "code": "\nulonglong arithmeticOperation_080082d0(uint input1,uint input2,uint input3,uint input4)\n\n{\n  int var1;\n  byte var2;\n  uint var3;\n  uint var4;\n  uint var5;\n  uint var6;\n  uint var7;\n  int var8;\n  uint var9;\n  uint var10;\n  uint var11;\n  uint var12;\n  bool bool1;\n  bool bool2;\n  bool bool3;\n  \n  var6 = input4 ^ 0x80000000;\n  var9 = input2 << 1;\n  input4 = input4 << 1;\n  bool1 = ((input2 ^ var6) & 0x7fffffff) == 0;\n  bool2 = bool1 && input1 == input3;\n  if (!bool1 || input1 != input3) {\n    bool2 = (var9 | input1) == 0;\n  }\n  if (!bool2) {\n    bool2 = (input4 | input3) == 0;\n  }\n  var8 = (int)var9 >> 0x15;\n  if (!bool2) {\n    bool2 = var8 == -1;\n  }\n  var1 = (int)input4 >> 0x15;\n  if (!bool2) {\n    bool2 = var1 == -1;\n  }\n  if (bool2) {\n    if (var8 == -1 || var1 == -1) {\n      var9 = var6;\n      var11 = input3;\n      if (var8 == -1) {\n        var9 = input2;\n        var11 = input1;\n      }\n      if (var8 != -1 || var1 != -1) {\n        input3 = var11;\n        var6 = var9;\n      }\n      bool2 = (var11 | var9 << 0xc) == 0;\n      if (bool2) {\n        bool2 = (input3 | var6 << 0xc) == 0;\n      }\n      if (bool2) {\n        bool2 = var9 == var6;\n      }\n      if (!bool2) {\n        var9 = var9 | 0x80000;\n      }\n      return CONCAT44(var9,var11);\n    }\n    if (((input2 ^ var6) & 0x7fffffff) != 0 || input1 != input3) {\n      if ((var9 | input1) == 0) {\n        input1 = input3;\n        input2 = var6;\n      }\n      return CONCAT44(input2,input1);\n    }\n    if (input2 != var6) {\n      return 0;\n    }\n    if (var9 >> 0x15 == 0) {\n      bool2 = (input1 & 0x80000000) != 0;\n      var6 = input2 * 2 + (uint)bool2;\n      if (CARRY4(input2,input2) || CARRY4(input2 * 2,(uint)bool2)) {\n        var6 = var6 | 0x80000000;\n      }\n      return CONCAT44(var6,input1 << 1);\n    }\n    if (var9 < 0xffc00000) {\n      return CONCAT44(input2 + 0x100000,input1);\n    }\n    input2 = input2 & 0x80000000;\nLAB_08008514:\n    return (ulonglong)(input2 | 0x7ff00000) << 0x20;\n  }\n  var9 = var9 >> 0x15;\n  input4 = input4 >> 0x15;\n  var11 = input4 - var9;\n  bool2 = var11 != 0;\n  if (input4 < var9) {\n    var11 = -var11;\n  }\n  var10 = input1;\n  var7 = input2;\n  if (bool2 && var9 <= input4) {\n    var9 = var9 + var11;\n    var10 = input3;\n    var7 = var6;\n    input3 = input1;\n    var6 = input2;\n  }\n  if (0x36 < var11) {\n    return CONCAT44(var7,var10);\n  }\n  var4 = var7 & 0xfffff | 0x100000;\n  if ((var7 & 0x80000000) != 0) {\n    bool2 = var10 != 0;\n    var10 = -var10;\n    var4 = -var4 - (uint)bool2;\n  }\n  var7 = var6 & 0xfffff | 0x100000;\n  if ((var6 & 0x80000000) != 0) {\n    bool2 = input3 != 0;\n    input3 = -input3;\n    var7 = -var7 - (uint)bool2;\n  }\n  if (var9 == var11) {\n    var7 = var7 ^ 0x100000;\n    if (var9 == 0) {\n      var4 = var4 ^ 0x100000;\n      var9 = 1;\n    }\n    else {\n      var11 = var11 - 1;\n    }\n  }\n  var6 = -var11 + 0x20;\n  if ((int)var11 < 0x21) {\n    var12 = input3 << (var6 & 0xff);\n    input3 = input3 >> (var11 & 0xff);\n    var3 = var10 + input3;\n    var5 = var7 << (var6 & 0xff);\n    var6 = var3 + var5;\n    var4 = var4 + CARRY4(var10,input3) + ((int)var7 >> (var11 & 0xff)) +\n            (uint)CARRY4(var3,var5);\n  }\n  else {\n    var12 = var7 << (-var11 + 0x40 & 0xff);\n    if (input3 != 0) {\n      var12 = var12 | 2;\n    }\n    var7 = (int)var7 >> (var11 - 0x20 & 0xff);\n    var6 = var10 + var7;\n    var4 = var4 + ((int)var7 >> 0x1f) + (uint)CARRY4(var10,var7);\n  }\n  input2 = var4 & 0x80000000;\n  var11 = var4;\n  if ((int)var4 < 0) {\n    bool2 = var12 == 0;\n    var12 = -var12;\n    var11 = -var6;\n    var6 = -(uint)!bool2 - var6;\n    var11 = -(uint)(bool2 <= var11) - var4;\n  }\n  if (0xfffff < var11) {\n    var10 = var9 - 1;\n    if (0x1fffff < var11) {\n      var10 = var11 & 1;\n      var11 = var11 >> 1;\n      var2 = (byte)var6;\n      var6 = (uint)(var10 != 0) << 0x1f | var6 >> 1;\n      var12 = (uint)(var2 & 1) << 0x1f | var12 >> 1;\n      var10 = var9;\n      if (0xffbfffff < var9 * 0x200000) goto LAB_08008514;\n    }\nLAB_080083e0:\n    bool2 = 0x7fffffff < var12;\n    if (var12 == 0x80000000) {\n      bool2 = (var6 & 1) != 0;\n    }\n    return CONCAT44(var11 + var10 * 0x100000 + (uint)CARRY4(var6,(uint)bool2) | input2,\n                    var6 + bool2);\n  }\n  bool1 = (var12 & 0x80000000) != 0;\n  var12 = var12 << 1;\n  var10 = var6 * 2;\n  bool2 = CARRY4(var6,var6);\n  var6 = var6 * 2 + (uint)bool1;\n  var11 = var11 * 2 + (uint)(bool2 || CARRY4(var10,(uint)bool1));\n  var10 = var9 - 2;\n  if (var9 - 1 != 0 && 0xfffff < var11) goto LAB_080083e0;\n  var7 = var6;\n  var9 = var11;\n  if (var11 == 0) {\n    var7 = 0;\n    var9 = var6;\n  }\n  var8 = LZCOUNT(var9);\n  if (var11 == 0) {\n    var8 = var8 + 0x20;\n  }\n  var11 = var8 - 0xb;\n  bool3 = SBORROW4(var11,0x20);\n  var6 = var8 - 0x2b;\n  bool2 = (int)var6 < 0;\n  bool1 = var6 == 0;\n  if ((int)var11 < 0x20) {\n    bool3 = SCARRY4(var6,0xc);\n    var8 = var8 + -0x1f;\n    bool2 = var8 < 0;\n    bool1 = var8 == 0;\n    var6 = var11;\n    if (!bool1 && bool2 == bool3) {\n      var7 = var9 << (var11 & 0xff);\n      var9 = var9 >> (0xcU - var8 & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (bool1 || bool2 != bool3) {\n    var12 = 0x20 - var6;\n  }\n  var9 = var9 << (var6 & 0xff);\n  if (bool1 || bool2 != bool3) {\n    var9 = var9 | var7 >> (var12 & 0xff);\n  }\n  if (bool1 || bool2 != bool3) {\n    var7 = var7 << (var6 & 0xff);\n  }\nLAB_08008458:\n  if ((int)var11 <= (int)var10) {\n    return CONCAT44(var9 + (var10 - var11) * 0x100000 | input2,var7);\n  }\n  var6 = ~(var10 - var11);\n  if ((int)var6 < 0x1f) {\n    var8 = var6 - 0x13;\n    if (var8 != 0 && var8 < 0 == SCARRY4(var6 - 0x1f,0xc)) {\n      return CONCAT44(var4,var7 >> (0x20 - (0xcU - var8) & 0xff) | var9 << (0xcU - var8 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    var6 = var6 + 1;\n    return CONCAT44(input2 | var9 >> (var6 & 0xff),\n                    var7 >> (var6 & 0xff) | var9 << (0x20 - var6 & 0xff));\n  }\n  return CONCAT44(var4,var9 >> (var6 - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_080082d0": "arithmetic_operation_080082d0",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "var1",
                "bVar2": "var2",
                "uVar3": "var3",
                "uVar4": "var4",
                "uVar5": "var5",
                "uVar6": "var6",
                "uVar7": "var7",
                "iVar8": "var8",
                "uVar9": "var9",
                "uVar10": "var10",
                "uVar11": "var11",
                "uVar12": "var12",
                "bVar13": "bool1",
                "bVar14": "bool2",
                "bVar15": "bool3"
            },
            "calling": [
                "mc_arc",
                "__ieee754_rem_pio2",
                "sin",
                "__ieee754_sqrt",
                "atan",
                "__kernel_rem_pio2",
                "plan_buffer_line",
                "report_realtime_status",
                "__kernel_sin",
                "cos",
                "__kernel_cos",
                "__ieee754_hypot",
                "__ieee754_atan2"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080082d4": {
            "entrypoint": "0x080082d4",
            "current_name": "calculate_unsigned_division_080082d4",
            "code": "\nulonglong calculateUnsignedDivision_080082d4(uint dividend,uint divisor,uint quotient,uint remainder)\n\n{\n  int bit_shift_1;\n  byte carry;\n  uint temp;\n  uint shifted_remainder;\n  uint shifted_divisor;\n  int bit_shift_2;\n  uint divisor_shifted;\n  uint dividend_shifted;\n  uint quotient_result;\n  uint remainder_result;\n  uint carry_2;\n  uint divisor_temp;\n  bool are_equals;\n  bool is_zero_divisor;\n  bool is_negative_divisor;\n  \n  divisor_shifted = divisor << 1;\n  quotient_result = remainder << 1;\n  are_equals = ((divisor ^ remainder) & 0x7fffffff) == 0;\n  is_zero_divisor = are_equals && dividend == quotient;\n  if (!are_equals || dividend != quotient) {\n    is_zero_divisor = (divisor_shifted | dividend) == 0;\n  }\n  if (!is_zero_divisor) {\n    is_zero_divisor = (quotient_result | quotient) == 0;\n  }\n  bit_shift_2 = (int)divisor_shifted >> 0x15;\n  if (!is_zero_divisor) {\n    is_zero_divisor = bit_shift_2 == -1;\n  }\n  bit_shift_1 = (int)quotient_result >> 0x15;\n  if (!is_zero_divisor) {\n    is_zero_divisor = bit_shift_1 == -1;\n  }\n  if (is_zero_divisor) {\n    if (bit_shift_2 == -1 || bit_shift_1 == -1) {\n      quotient_result = remainder;\n      divisor_shifted = quotient;\n      if (bit_shift_2 == -1) {\n        quotient_result = divisor;\n        divisor_shifted = dividend;\n      }\n      if (bit_shift_2 != -1 || bit_shift_1 != -1) {\n        quotient = divisor_shifted;\n        remainder = quotient_result;\n      }\n      is_zero_divisor = (divisor_shifted | quotient_result << 0xc) == 0;\n      if (is_zero_divisor) {\n        is_zero_divisor = (quotient | remainder << 0xc) == 0;\n      }\n      if (is_zero_divisor) {\n        is_zero_divisor = quotient_result == remainder;\n      }\n      if (!is_zero_divisor) {\n        quotient_result = quotient_result | 0x80000;\n      }\n      return CONCAT44(quotient_result,divisor_shifted);\n    }\n    if (((divisor ^ remainder) & 0x7fffffff) != 0 || dividend != quotient) {\n      if ((divisor_shifted | dividend) == 0) {\n        dividend = quotient;\n        divisor = remainder;\n      }\n      return CONCAT44(divisor,dividend);\n    }\n    if (divisor != remainder) {\n      return 0;\n    }\n    if (divisor_shifted >> 0x15 == 0) {\n      is_zero_divisor = (dividend & 0x80000000) != 0;\n      quotient_result = divisor * 2 + (uint)is_zero_divisor;\n      if (CARRY4(divisor,divisor) || CARRY4(divisor * 2,(uint)is_zero_divisor)) {\n        quotient_result = quotient_result | 0x80000000;\n      }\n      return CONCAT44(quotient_result,dividend << 1);\n    }\n    if (divisor_shifted < 0xffc00000) {\n      return CONCAT44(divisor + 0x100000,dividend);\n    }\n    divisor = divisor & 0x80000000;\nLAB_08008514:\n    return (ulonglong)(divisor | 0x7ff00000) << 0x20;\n  }\n  divisor_shifted = divisor_shifted >> 0x15;\n  quotient_result = quotient_result >> 0x15;\n  remainder_result = quotient_result - divisor_shifted;\n  is_zero_divisor = remainder_result != 0;\n  if (quotient_result < divisor_shifted) {\n    remainder_result = -remainder_result;\n  }\n  dividend_shifted = dividend;\n  shifted_divisor = divisor;\n  if (is_zero_divisor && divisor_shifted <= quotient_result) {\n    divisor_shifted = divisor_shifted + remainder_result;\n    dividend_shifted = quotient;\n    shifted_divisor = remainder;\n    quotient = dividend;\n    remainder = divisor;\n  }\n  if (0x36 < remainder_result) {\n    return CONCAT44(shifted_divisor,dividend_shifted);\n  }\n  quotient_result = shifted_divisor & 0xfffff | 0x100000;\n  if ((shifted_divisor & 0x80000000) != 0) {\n    is_zero_divisor = dividend_shifted != 0;\n    dividend_shifted = -dividend_shifted;\n    quotient_result = -quotient_result - (uint)is_zero_divisor;\n  }\n  shifted_divisor = remainder & 0xfffff | 0x100000;\n  if ((remainder & 0x80000000) != 0) {\n    is_zero_divisor = quotient != 0;\n    quotient = -quotient;\n    shifted_divisor = -shifted_divisor - (uint)is_zero_divisor;\n  }\n  if (divisor_shifted == remainder_result) {\n    shifted_divisor = shifted_divisor ^ 0x100000;\n    if (divisor_shifted == 0) {\n      quotient_result = quotient_result ^ 0x100000;\n      divisor_shifted = 1;\n    }\n    else {\n      remainder_result = remainder_result - 1;\n    }\n  }\n  divisor_temp = -remainder_result + 0x20;\n  if ((int)remainder_result < 0x21) {\n    carry_2 = quotient << (divisor_temp & 0xff);\n    quotient = quotient >> (remainder_result & 0xff);\n    temp = dividend_shifted + quotient;\n    shifted_remainder = shifted_divisor << (divisor_temp & 0xff);\n    divisor_temp = temp + shifted_remainder;\n    quotient_result = quotient_result + CARRY4(dividend_shifted,quotient) + ((int)shifted_divisor >> (remainder_result & 0xff)) +\n            (uint)CARRY4(temp,shifted_remainder);\n  }\n  else {\n    carry_2 = shifted_divisor << (-remainder_result + 0x40 & 0xff);\n    if (quotient != 0) {\n      carry_2 = carry_2 | 2;\n    }\n    shifted_divisor = (int)shifted_divisor >> (remainder_result - 0x20 & 0xff);\n    divisor_temp = dividend_shifted + shifted_divisor;\n    quotient_result = quotient_result + ((int)shifted_divisor >> 0x1f) + (uint)CARRY4(dividend_shifted,shifted_divisor);\n  }\n  divisor = quotient_result & 0x80000000;\n  remainder_result = quotient_result;\n  if ((int)quotient_result < 0) {\n    is_zero_divisor = carry_2 == 0;\n    carry_2 = -carry_2;\n    remainder_result = -divisor_temp;\n    divisor_temp = -(uint)!is_zero_divisor - divisor_temp;\n    remainder_result = -(uint)(is_zero_divisor <= remainder_result) - quotient_result;\n  }\n  if (0xfffff < remainder_result) {\n    dividend_shifted = divisor_shifted - 1;\n    if (0x1fffff < remainder_result) {\n      quotient_result = remainder_result & 1;\n      remainder_result = remainder_result >> 1;\n      carry = (byte)divisor_temp;\n      divisor_temp = (uint)(quotient_result != 0) << 0x1f | divisor_temp >> 1;\n      carry_2 = (uint)(carry & 1) << 0x1f | carry_2 >> 1;\n      dividend_shifted = divisor_shifted;\n      if (0xffbfffff < divisor_shifted * 0x200000) goto LAB_08008514;\n    }\nLAB_080083e0:\n    is_zero_divisor = 0x7fffffff < carry_2;\n    if (carry_2 == 0x80000000) {\n      is_zero_divisor = (divisor_temp & 1) != 0;\n    }\n    return CONCAT44(remainder_result + dividend_shifted * 0x100000 + (uint)CARRY4(divisor_temp,(uint)is_zero_divisor) | divisor,\n                    divisor_temp + is_zero_divisor);\n  }\n  are_equals = (carry_2 & 0x80000000) != 0;\n  carry_2 = carry_2 << 1;\n  dividend_shifted = divisor_temp * 2;\n  is_zero_divisor = CARRY4(divisor_temp,divisor_temp);\n  divisor_temp = divisor_temp * 2 + (uint)are_equals;\n  remainder_result = remainder_result * 2 + (uint)(is_zero_divisor || CARRY4(dividend_shifted,(uint)are_equals));\n  dividend_shifted = divisor_shifted - 2;\n  if (divisor_shifted - 1 != 0 && 0xfffff < remainder_result) goto LAB_080083e0;\n  shifted_divisor = divisor_temp;\n  divisor_shifted = remainder_result;\n  if (remainder_result == 0) {\n    shifted_divisor = 0;\n    divisor_shifted = divisor_temp;\n  }\n  bit_shift_2 = LZCOUNT(divisor_shifted);\n  if (remainder_result == 0) {\n    bit_shift_2 = bit_shift_2 + 0x20;\n  }\n  divisor_temp = bit_shift_2 - 0xb;\n  is_negative_divisor = SBORROW4(divisor_temp,0x20);\n  remainder_result = bit_shift_2 - 0x2b;\n  is_zero_divisor = (int)remainder_result < 0;\n  are_equals = remainder_result == 0;\n  if ((int)divisor_temp < 0x20) {\n    is_negative_divisor = SCARRY4(remainder_result,0xc);\n    bit_shift_2 = bit_shift_2 + -0x1f;\n    is_zero_divisor = bit_shift_2 < 0;\n    are_equals = bit_shift_2 == 0;\n    remainder_result = divisor_temp;\n    if (!are_equals && is_zero_divisor == is_negative_divisor) {\n      shifted_divisor = divisor_shifted << (divisor_temp & 0xff);\n      divisor_shifted = divisor_shifted >> (0xcU - bit_shift_2 & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (are_equals || is_zero_divisor != is_negative_divisor) {\n    carry_2 = 0x20 - remainder_result;\n  }\n  divisor_shifted = divisor_shifted << (remainder_result & 0xff);\n  if (are_equals || is_zero_divisor != is_negative_divisor) {\n    divisor_shifted = divisor_shifted | shifted_divisor >> (carry_2 & 0xff);\n  }\n  if (are_equals || is_zero_divisor != is_negative_divisor) {\n    shifted_divisor = shifted_divisor << (remainder_result & 0xff);\n  }\nLAB_08008458:\n  if ((int)divisor_temp <= (int)dividend_shifted) {\n    return CONCAT44(divisor_shifted + (dividend_shifted - divisor_temp) * 0x100000 | divisor,shifted_divisor);\n  }\n  remainder_result = ~(dividend_shifted - divisor_temp);\n  if ((int)remainder_result < 0x1f) {\n    bit_shift_2 = remainder_result - 0x13;\n    if (bit_shift_2 != 0 && bit_shift_2 < 0 == SCARRY4(remainder_result - 0x1f,0xc)) {\n      return CONCAT44(quotient_result,shifted_divisor >> (0x20 - (0xcU - bit_shift_2) & 0xff) | divisor_shifted << (0xcU - bit_shift_2 & 0xff)\n                     ) & 0x80000000ffffffff;\n    }\n    remainder_result = remainder_result + 1;\n    return CONCAT44(divisor | divisor_shifted >> (remainder_result & 0xff),\n                    shifted_divisor >> (remainder_result & 0xff) | divisor_shifted << (0x20 - remainder_result & 0xff));\n  }\n  return CONCAT44(quotient_result,divisor_shifted >> (remainder_result - 0x1f & 0xff)) & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_080082d4": "calculate_unsigned_division_080082d4",
                "param_1": "dividend",
                "param_2": "divisor",
                "param_3": "quotient",
                "param_4": "remainder",
                "iVar1": "bit_shift_1",
                "bVar2": "carry",
                "uVar3": "temp",
                "uVar4": "shifted_remainder",
                "uVar5": "shifted_divisor",
                "iVar6": "bit_shift_2",
                "uVar7": "divisor_shifted",
                "uVar8": "dividend_shifted",
                "uVar9": "quotient_result",
                "uVar10": "remainder_result",
                "uVar11": "carry_2",
                "uVar12": "divisor_temp",
                "bVar13": "are_equals",
                "bVar14": "is_zero_divisor",
                "bVar15": "is_negative_divisor"
            },
            "calling": [
                "mc_arc",
                "__ieee754_rem_pio2",
                "__ieee754_sqrt",
                "trunc",
                "atan",
                "floor",
                "__kernel_rem_pio2",
                "scalbn",
                "__kernel_sin",
                "ceil",
                "__kernel_cos",
                "__ieee754_hypot",
                "__ieee754_atan2",
                "round"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800854c": {
            "entrypoint": "0x0800854c",
            "current_name": "bit_shift_and_concat_0800854c",
            "code": "\nulonglong bitShiftAndConcat_0800854c(uint input)\n\n{\n  uint resultUpper;\n  uint shiftAmount;\n  int lzcountResult;\n  uint adjustedShiftAmount;\n  uint remainingShiftAmount;\n  bool compareResult1;\n  bool compareResult2;\n  bool compareResult3;\n  \n  if (input == 0) {\n    return 0;\n  }\n  resultUpper = 0;\n  lzcountResult = LZCOUNT(input);\n  adjustedShiftAmount = lzcountResult + 0x15;\n  compareResult3 = SBORROW4(adjustedShiftAmount,0x20);\n  shiftAmount = lzcountResult - 0xb;\n  compareResult1 = (int)shiftAmount < 0;\n  compareResult2 = shiftAmount == 0;\n  if (adjustedShiftAmount < 0x20) {\n    compareResult3 = SCARRY4(shiftAmount,0xc);\n    compareResult1 = false;\n    compareResult2 = lzcountResult + 1 == 0;\n    shiftAmount = adjustedShiftAmount;\n    if (!compareResult2 && compareResult3 == false) {\n      resultUpper = input << adjustedShiftAmount;\n      input = input >> (0xcU - (lzcountResult + 1) & 0xff);\n      goto shiftLabel;\n    }\n  }\n  if (compareResult2 || compareResult1 != compareResult3) {\n    remainingShiftAmount = 0x20 - shiftAmount;\n  }\n  input = input << (shiftAmount & 0xff);\n  if (compareResult2 || compareResult1 != compareResult3) {\n    input = input | 0U >> (remainingShiftAmount & 0xff);\n  }\n  if (compareResult2 || compareResult1 != compareResult3) {\n    resultUpper = 0 << (shiftAmount & 0xff);\n  }\nshiftLabel:\n  if (adjustedShiftAmount < 0x433) {\n    return CONCAT44(input + (0x432 - adjustedShiftAmount) * 0x100000,resultUpper);\n  }\n  shiftAmount = ~(0x432 - adjustedShiftAmount);\n  if (0x1e < (int)shiftAmount) {\n    return (ulonglong)(input >> (shiftAmount - 0x1f & 0xff));\n  }\n  lzcountResult = shiftAmount - 0x13;\n  if (lzcountResult == 0 || lzcountResult < 0 != SCARRY4(shiftAmount - 0x1f,0xc)) {\n    shiftAmount = shiftAmount + 1;\n    return CONCAT44(input >> (shiftAmount & 0xff),\n                    resultUpper >> (shiftAmount & 0xff) | input << (0x20 - shiftAmount & 0xff));\n  }\n  return (ulonglong)(resultUpper >> (0x20 - (0xcU - lzcountResult) & 0xff) | input << (0xcU - lzcountResult & 0xff));\n}\n\n",
            "renaming": {
                "FUN_0800854c": "bit_shift_and_concat_0800854c",
                "param_1": "input",
                "uVar1": "resultUpper",
                "uVar2": "shiftAmount",
                "iVar3": "lzcountResult",
                "uVar4": "adjustedShiftAmount",
                "in_r12": "remainingShiftAmount",
                "bVar5": "compareResult1",
                "bVar6": "compareResult2",
                "bVar7": "compareResult3",
                "LAB_08008458": "shiftLabel"
            },
            "calling": [
                "homing_cycle"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800856c": {
            "entrypoint": "0x0800856c",
            "current_name": "shift_and_mask_0800856c",
            "code": "\nulonglong shiftAndMask_0800856c(uint input)\n\n{\n  uint bitCount;\n  uint absInput;\n  uint outputShift;\n  int countDifference;\n  uint adjustedCount;\n  uint signBit;\n  uint invertedShift;\n  bool isNegative;\n  bool isZero;\n  bool isCarry;\n  \n  if (input == 0) {\n    return 0;\n  }\n  signBit = input & 0x80000000;\n  absInput = input;\n  if ((int)signBit < 0) {\n    absInput = -input;\n  }\n  bitCount = 0;\n  countDifference = LZCOUNT(absInput);\n  adjustedCount = countDifference + 0x15;\n  isCarry = isBorrow(adjustedCount,0x20);\n  outputShift = countDifference - 0xb;\n  isNegative = (int)outputShift < 0;\n  isZero = outputShift == 0;\n  if (adjustedCount < 0x20) {\n    isCarry = isCarry(outputShift,0xc);\n    isNegative = false;\n    isZero = countDifference + 1 == 0;\n    outputShift = adjustedCount;\n    if (!isZero && isCarry == false) {\n      bitCount = absInput << adjustedCount;\n      absInput = absInput >> (0xcU - (countDifference + 1) & 0xff);\n      goto continueShift;\n    }\n  }\n  if (isZero || isNegative != isCarry) {\n    invertedShift = 0x20 - outputShift;\n  }\n  absInput = absInput << (outputShift & 0xff);\n  if (isZero || isNegative != isCarry) {\n    absInput = absInput | zero >> (invertedShift & 0xff);\n  }\n  if (isZero || isNegative != isCarry) {\n    bitCount = 0 << (outputShift & 0xff);\n  }\ncontinueShift:\n  if (adjustedCount < 0x433) {\n    return concatenate(absInput + (0x432 - adjustedCount) * 0x100000 | signBit,bitCount);\n  }\n  outputShift = ~(0x432 - adjustedCount);\n  if (0x1e < (int)outputShift) {\n    return concatenate(input,absInput >> (outputShift - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  countDifference = outputShift - 0x13;\n  if (countDifference == 0 || countDifference < 0 != isCarry(outputShift - 0x1f,0xc)) {\n    outputShift = outputShift + 1;\n    return concatenate(signBit | absInput >> (outputShift & 0xff),\n                    bitCount >> (outputShift & 0xff) | absInput << (0x20 - outputShift & 0xff));\n  }\n  return concatenate(input,bitCount >> (0x20 - (0xcU - countDifference) & 0xff) | absInput << (0xcU - countDifference & 0xff))\n         & 0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_0800856c": "shift_and_mask_0800856c",
                "param_1": "input",
                "uVar1": "bitCount",
                "uVar2": "absInput",
                "uVar3": "outputShift",
                "iVar4": "countDifference",
                "uVar5": "adjustedCount",
                "uVar6": "signBit",
                "in_r12": "invertedShift",
                "bVar7": "isNegative",
                "bVar8": "isZero",
                "bVar9": "isCarry",
                "SCARRY4": "isCarry",
                "SBORROW4": "isBorrow",
                "LAB_08008458": "continueShift",
                "CONCAT44": "concatenate",
                "0U": "zero"
            },
            "calling": [
                "__ieee754_rem_pio2",
                "calculate_trapezoid_for_block",
                "__kernel_rem_pio2"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008590": {
            "entrypoint": "0x08008590",
            "current_name": "decode_and_transform_08008590",
            "code": "\nulonglong decode_and_transform_08008590(uint input,undefined4 param_a,undefined4 param_b,uint param_c)\n\n{\n  uint shifted_value;\n  uint result;\n  uint mask;\n  uint shift_amount;\n  uint temp;\n  int count;\n  uint temp2;\n  uint temp3;\n  bool cond1;\n  bool cond2;\n  bool cond3;\n  \n  temp = input << 1;\n  cond2 = temp == 0;\n  shifted_value = (uint)((input & 0x80000000) != 0) << 0x1f;\n  shift_amount = (uint)((int)temp >> 3) >> 1;\n  mask = shifted_value | shift_amount;\n  input = input << 0x1d;\n  if (!cond2) {\n    param_c = temp & 0xff000000;\n    cond2 = param_c == 0;\n  }\n  if (!cond2) {\n    cond2 = param_c == 0xff000000;\n  }\n  if (!cond2) {\n    return CONCAT44(mask,input) ^ 0x3800000000000000;\n  }\n  if ((temp & 0xffffff) == 0) {\n    return CONCAT44(mask,input);\n  }\n  if (param_c == 0xff000000) {\n    return CONCAT44(mask,input) | 0x8000000000000;\n  }\n  result = input;\n  temp = shift_amount;\n  if (shift_amount == 0) {\n    result = 0;\n    temp = input;\n  }\n  count = LZCOUNT(temp);\n  if (shift_amount == 0) {\n    count = count + 0x20;\n  }\n  temp2 = count - 0xb;\n  cond3 = SBORROW4(temp2,0x20);\n  shift_amount = count - 0x2b;\n  cond2 = (int)shift_amount < 0;\n  cond1 = shift_amount == 0;\n  if ((int)temp2 < 0x20) {\n    cond3 = SCARRY4(shift_amount,0xc);\n    count = count + -0x1f;\n    cond2 = count < 0;\n    cond1 = count == 0;\n    shift_amount = temp2;\n    if (!cond1 && cond2 == cond3) {\n      result = temp << (temp2 & 0xff);\n      temp = temp >> (0xcU - count & 0xff);\n      goto LAB_08008458;\n    }\n  }\n  if (cond1 || cond2 != cond3) {\n    temp3 = 0x20 - shift_amount;\n  }\n  temp = temp << (shift_amount & 0xff);\n  if (cond1 || cond2 != cond3) {\n    temp = temp | result >> (temp3 & 0xff);\n  }\n  if (cond1 || cond2 != cond3) {\n    result = result << (shift_amount & 0xff);\n  }\nLAB_08008458:\n  if ((int)temp2 < 0x381) {\n    return CONCAT44(temp + (0x380 - temp2) * 0x100000 | shifted_value,result);\n  }\n  shift_amount = ~(0x380 - temp2);\n  if (0x1e < (int)shift_amount) {\n    return CONCAT44(mask,temp >> (shift_amount - 0x1f & 0xff)) & 0x80000000ffffffff;\n  }\n  count = shift_amount - 0x13;\n  if (count == 0 || count < 0 != SCARRY4(shift_amount - 0x1f,0xc)) {\n    shift_amount = shift_amount + 1;\n    return CONCAT44(shifted_value | temp >> (shift_amount & 0xff),\n                    result >> (shift_amount & 0xff) | temp << (0x20 - shift_amount & 0xff));\n  }\n  return CONCAT44(mask,result >> (0x20 - (0xcU - count) & 0xff) | temp << (0xcU - count & 0xff)) &\n         0x80000000ffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008590": "decode_and_transform_08008590",
                "param_1": "input",
                "param_2": "param_a",
                "param_3": "param_b",
                "param_4": "param_c",
                "uVar1": "shifted_value",
                "uVar2": "result",
                "uVar3": "mask",
                "uVar4": "shift_amount",
                "uVar5": "temp",
                "iVar6": "count",
                "uVar7": "temp2",
                "in_r12": "temp3",
                "bVar8": "cond1",
                "bVar9": "cond2",
                "bVar10": "cond3"
            },
            "calling": [
                "settings_store_global_setting",
                "mc_arc",
                "protocol_execute_line",
                "gc_execute_line",
                "calculate_trapezoid_for_block",
                "max_allowable_speed",
                "homing_cycle",
                "mc_dwell",
                "plan_buffer_line",
                "report_realtime_status",
                "report_gcode_parameters",
                "to_millimeters",
                "read_float",
                "report_gcode_modes"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008640": {
            "entrypoint": "0x08008640",
            "current_name": "calculate_bitwise_operation_08008640",
            "code": "\nulonglong calculate_bitwise_operation_08008640(undefined4 input_param_1,uint input_param_2,uint input_param_3,uint input_param_4)\n\n{\n  ulonglong result_1;\n  longlong result_2;\n  uint temp_1;\n  uint temp_2;\n  int temp_3;\n  uint temp_4;\n  uint unaff_r5;\n  uint temp_5;\n  uint temp_6;\n  bool flag_1;\n  bool flag_2;\n  bool flag_3;\n  ulonglong concat_param;\n  \n  concat_param = CONCAT44(input_param_2,input_param_1);\n  temp_5 = 0x7ff;\n  temp_2 = input_param_2 >> 0x14 & 0x7ff;\n  flag_1 = temp_2 == 0;\n  if (!flag_1) {\n    unaff_r5 = input_param_4 >> 0x14 & 0x7ff;\n    flag_1 = unaff_r5 == 0;\n  }\n  if (!flag_1) {\n    flag_1 = temp_2 == 0x7ff;\n  }\n  if (!flag_1) {\n    flag_1 = unaff_r5 == 0x7ff;\n  }\n  if (flag_1) {\n    concat_param = calculate_bitwise_or_shift_0800881c();\n  }\n  temp_1 = (uint)(concat_param >> 0x20);\n  temp_3 = temp_2 + unaff_r5;\n  temp_2 = temp_1 ^ input_param_4;\n  temp_1 = temp_1 & ~(temp_5 << 0x15);\n  input_param_4 = input_param_4 & ~(temp_5 << 0x15);\n  flag_1 = ((uint)concat_param | temp_1 << 0xc) == 0;\n  if (!flag_1) {\n    flag_1 = (input_param_3 | input_param_4 << 0xc) == 0;\n  }\n  temp_1 = temp_1 | 0x100000;\n  input_param_4 = input_param_4 | 0x100000;\n  if (flag_1) {\n    input_param_3 = (uint)concat_param | input_param_3;\n    input_param_4 = (temp_2 & 0x80000000 | temp_1) ^ input_param_4;\n    temp_2 = temp_5 >> 1;\n    flag_3 = SBORROW4(temp_3,temp_2);\n    temp_4 = temp_3 - temp_2;\n    flag_1 = temp_4 == 0;\n    temp_1 = temp_4;\n    if (!flag_1 && (int)temp_2 <= temp_3) {\n      flag_3 = SBORROW4(temp_5,temp_4);\n      temp_1 = temp_5 - temp_4;\n      flag_1 = temp_5 == temp_4;\n    }\n    if (!flag_1 && (int)temp_1 < 0 == flag_3) {\n      input_param_4 = input_param_4 | temp_4 * 0x100000;\n    }\n    if (!flag_1 && (int)temp_1 < 0 == flag_3) {\n      return CONCAT44(input_param_4,input_param_3);\n    }\n    input_param_4 = input_param_4 | 0x100000;\n    temp_5 = 0;\n    flag_3 = SBORROW4(temp_4,1);\n    temp_4 = temp_4 - 1;\n    flag_1 = temp_4 == 0;\n    temp_2 = temp_4;\n  }\n  else {\n    result_1 = (concat_param & 0xffffffff) * (ulonglong)input_param_3;\n    concat_param = (concat_param & 0xffffffff) * (ulonglong)input_param_4 +\n             (ulonglong)temp_1 * (ulonglong)input_param_3 + (result_1 >> 0x20);\n    temp_6 = (uint)concat_param;\n    result_2 = (ulonglong)temp_1 * (ulonglong)input_param_4 + (concat_param >> 0x20);\n    temp_5 = (uint)result_2;\n    temp_1 = (uint)((ulonglong)result_2 >> 0x20);\n    if ((int)result_1 != 0) {\n      temp_6 = temp_6 | 1;\n    }\n    temp_4 = (temp_3 + -0x3ff) - (uint)(temp_1 < 0x200);\n    if (temp_1 < 0x200) {\n      flag_1 = (temp_6 & 0x80000000) != 0;\n      temp_6 = temp_6 << 1;\n      result_2 = CONCAT44(temp_1 * 2 + (uint)(CARRY4(temp_5,temp_5) || CARRY4(temp_5 * 2,(uint)flag_1)),\n                       temp_5 * 2 + (uint)flag_1);\n    }\n    input_param_4 = temp_2 & 0x80000000 | (int)((ulonglong)result_2 >> 0x20) << 0xb | (uint)result_2 >> 0x15;\n    input_param_3 = (uint)result_2 << 0xb | temp_6 >> 0x15;\n    temp_5 = temp_6 * 0x800;\n    flag_2 = 0xfc < temp_4;\n    flag_3 = SBORROW4(temp_4,0xfd);\n    temp_1 = temp_4 - 0xfd;\n    flag_1 = temp_1 == 0;\n    temp_2 = temp_1;\n    if (flag_2 && !flag_1) {\n      flag_2 = 0x6ff < temp_1;\n      flag_3 = SBORROW4(temp_1,0x700);\n      temp_2 = temp_4 - 0x7fd;\n      flag_1 = temp_1 == 0x700;\n    }\n    if (!flag_2 || flag_1) {\n      flag_1 = 0x7fffffff < temp_5;\n      if (temp_5 == 0x80000000) {\n        flag_1 = (temp_6 >> 0x15 & 1) != 0;\n      }\n      return CONCAT44(input_param_4 + temp_4 * 0x100000 + (uint)CARRY4(input_param_3,(uint)flag_1),input_param_3 + flag_1\n                     );\n    }\n  }\n  if (!flag_1 && (int)temp_2 < 0 == flag_3) {\n    return (ulonglong)(input_param_4 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  flag_2 = SCARRY4(temp_4,0x36);\n  flag_1 = (int)(temp_4 + 0x36) < 0;\n  flag_3 = temp_4 == 0xffffffca;\n  if (flag_3 || flag_1 != flag_2) {\n    input_param_3 = 0;\n  }\n  if (flag_3 || flag_1 != flag_2) {\n    input_param_4 = input_param_4 & 0x80000000;\n  }\n  if (flag_3 || flag_1 != flag_2) {\n    return CONCAT44(input_param_4,input_param_3);\n  }\n  temp_2 = -temp_4;\n  temp_1 = temp_2 - 0x20;\n  if (0x1f < (int)temp_2) {\n    temp_4 = input_param_3 >> (temp_1 & 0xff) | input_param_4 << (0x20 - temp_1 & 0xff);\n    temp_2 = (input_param_4 >> (temp_1 & 0xff) & ~((input_param_4 & 0x80000000) >> (temp_1 & 0xff))) -\n            ((int)temp_4 >> 0x1f);\n    if ((temp_5 | input_param_3 << (0x20 - temp_1 & 0xff) | temp_4 << 1) == 0) {\n      temp_2 = temp_2 & ~(temp_4 >> 0x1f);\n    }\n    return CONCAT44(input_param_4,temp_2) & 0x80000000ffffffff;\n  }\n  temp_3 = temp_2 - 0x14;\n  if (temp_3 == 0 || temp_3 < 0 != SCARRY4(temp_1,0xc)) {\n    temp_6 = input_param_3 << (temp_4 + 0x20 & 0xff);\n    temp_1 = input_param_3 >> (temp_2 & 0xff) | input_param_4 << (temp_4 + 0x20 & 0xff);\n    temp_4 = temp_1 + -((int)temp_6 >> 0x1f);\n    if ((temp_5 | temp_6 << 1) == 0) {\n      temp_4 = temp_4 & ~(temp_6 >> 0x1f);\n    }\n    return CONCAT44((input_param_4 & 0x80000000) +\n                    ((input_param_4 & 0x7fffffff) >> (temp_2 & 0xff)) +\n                    (uint)CARRY4(temp_1,-((int)temp_6 >> 0x1f)),temp_4);\n  }\n  temp_2 = 0xc - temp_3;\n  temp_4 = input_param_3 << (temp_2 & 0xff);\n  temp_2 = input_param_3 >> (0x20 - temp_2 & 0xff) | input_param_4 << (temp_2 & 0xff);\n  temp_1 = temp_2 + -((int)temp_4 >> 0x1f);\n  if ((temp_5 | temp_4 << 1) == 0) {\n    temp_1 = temp_1 & ~(temp_4 >> 0x1f);\n  }\n  return CONCAT44((input_param_4 & 0x80000000) + (uint)CARRY4(temp_2,-((int)temp_4 >> 0x1f)),temp_1);\n}\n\n",
            "renaming": {
                "FUN_08008640": "calculate_bitwise_operation_08008640",
                "param_1": "input_param_1",
                "param_2": "input_param_2",
                "param_3": "input_param_3",
                "param_4": "input_param_4",
                "uVar1": "result_1",
                "lVar2": "result_2",
                "uVar3": "temp_1",
                "uVar4": "temp_2",
                "iVar5": "temp_3",
                "uVar6": "temp_4",
                "uVar7": "temp_5",
                "uVar8": "temp_6",
                "bVar9": "flag_1",
                "bVar10": "flag_2",
                "bVar11": "flag_3",
                "uVar12": "concat_param"
            },
            "calling": [
                "mc_arc",
                "__ieee754_rem_pio2",
                "__ieee754_sqrt",
                "calculate_trapezoid_for_block",
                "atan",
                "homing_cycle",
                "__kernel_rem_pio2",
                "scalbn",
                "plan_buffer_line",
                "report_realtime_status",
                "__kernel_sin",
                "report_gcode_parameters",
                "__kernel_cos",
                "to_millimeters",
                "__ieee754_hypot",
                "read_float",
                "report_gcode_modes"
            ],
            "called": [
                "FUN_0800881c"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800881c": {
            "entrypoint": "0x0800881c",
            "current_name": "calculate_bitwise_or_shift_0800881c",
            "code": "\nulonglong calculate_bitwise_or_shift_0800881c(uint number1,uint number2,uint number3,uint number4)\n\n{\n  uint bit1;\n  uint bit2;\n  uint bit3;\n  uint bit4;\n  uint bit5;\n  bool isZero;\n  \n  bit3 = bit5 & number4 >> 0x14;\n  if (bit2 != bit5 && bit3 != bit5) {\n    isZero = (number1 | number2 << 1) == 0;\n    if (!isZero) {\n      isZero = (number3 | number4 << 1) == 0;\n    }\n    if (isZero) {\n      return (ulonglong)((number2 ^ number4) & 0x80000000) << 0x20;\n    }\n    if (bit2 == 0) {\n      bit4 = number2 & 0x80000000;\n      do {\n        bit1 = number1 & 0x80000000;\n        number1 = number1 << 1;\n        number2 = number2 * 2 + (uint)(bit1 != 0);\n      } while ((number2 & 0x100000) == 0);\n      number2 = number2 | bit4;\n      if (bit3 != 0) {\n        return CONCAT44(number2,number1);\n      }\n    }\n    do {\n      bit3 = number3 & 0x80000000;\n      number3 = number3 << 1;\n      number4 = number4 * 2 + (uint)(bit3 != 0);\n    } while ((number4 & 0x100000) == 0);\n    return CONCAT44(number2,number1);\n  }\n  isZero = (number1 | number2 << 1) == 0;\n  if (isZero) {\n    number2 = number4;\n    number1 = number3;\n  }\n  if (!isZero) {\n    isZero = (number3 | number4 << 1) == 0;\n  }\n  bit4 = number2;\n  if (((!isZero) && ((bit2 != bit5 || ((number1 | number2 << 0xc) == 0)))) &&\n     ((bit3 != bit5 || (number1 = number3, bit4 = number4, (number3 | number4 << 0xc) == 0)))) {\n    return (ulonglong)((number2 ^ number4) & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  return CONCAT44(bit4,number1) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_0800881c": "calculate_bitwise_or_shift_0800881c",
                "param_1": "number1",
                "param_2": "number2",
                "param_3": "number3",
                "param_4": "number4",
                "uVar1": "bit1",
                "unaff_r4": "bit2",
                "uVar2": "bit3",
                "uVar3": "bit4",
                "in_r12": "bit5",
                "bVar4": "isZero"
            },
            "calling": [
                "__muldf3"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008894": {
            "entrypoint": "0x08008894",
            "current_name": "calculate_improved_floating_point_08008894",
            "code": "\nulonglong calculateImprovedFloatingPoint_08008894(undefined4 input1,uint input2,uint input3,uint input4)\n\n{\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  uint temp4;\n  uint temp5;\n  uint temp6;\n  uint temp7;\n  int temp8;\n  uint temp9;\n  uint temp10;\n  uint temp11;\n  uint temp12;\n  uint temp13;\n  uint temp14;\n  bool flag1;\n  bool flag2;\n  bool flag3;\n  undefined8 temp17;\n  \n  temp17 = CONCAT44(input2,input1);\n  temp14 = 0x7ff;\n  temp7 = input2 >> 0x14 & 0x7ff;\n  flag1 = temp7 == 0;\n  if (!flag1) {\n    temp10 = input4 >> 0x14 & 0x7ff;\n    flag1 = temp10 == 0;\n  }\n  if (!flag1) {\n    flag1 = temp7 == 0x7ff;\n  }\n  if (!flag1) {\n    flag1 = temp10 == 0x7ff;\n  }\n  if (flag1) {\n    temp17 = calculate_floating_point_08008a02();\n  }\n  temp9 = (uint)((ulonglong)temp17 >> 0x20);\n  temp12 = (uint)temp17;\n  temp8 = temp7 - temp10;\n  if ((input3 | input4 << 0xc) == 0) {\n    temp7 = (temp9 ^ input4) & 0x80000000 | temp9 & 0xfffff;\n    flag3 = SCARRY4(temp8,temp14 >> 1);\n    temp9 = temp8 + (temp14 >> 1);\n    flag1 = (int)temp9 < 0;\n    flag2 = temp9 == 0;\n    if (!flag2 && flag1 == flag3) {\n      flag3 = SBORROW4(temp14,temp9);\n      flag1 = (int)(temp14 - temp9) < 0;\n      flag2 = temp14 == temp9;\n    }\n    if (!flag2 && flag1 == flag3) {\n      temp7 = temp7 | temp9 * 0x100000;\n    }\n    if (!flag2 && flag1 == flag3) {\n      return CONCAT44(temp7,temp12);\n    }\n    temp7 = temp7 | 0x100000;\n    temp14 = 0;\n    flag2 = SBORROW4(temp9,1);\n    temp9 = temp9 - 1;\n    flag1 = temp9 == 0;\n    temp3 = temp9;\n  }\n  else {\n    temp3 = (input4 << 0xc) >> 4 | 0x10000000 | input3 >> 0x18;\n    temp14 = input3 << 8;\n    temp11 = (temp9 << 0xc) >> 4 | 0x10000000 | temp12 >> 0x18;\n    temp12 = temp12 * 0x100;\n    temp7 = (temp9 ^ input4) & 0x80000000;\n    flag1 = temp3 <= temp11;\n    if (temp11 == temp3) {\n      flag1 = temp14 <= temp12;\n    }\n    temp8 = temp8 + (uint)flag1;\n    temp9 = temp8 + 0x3fd;\n    if (flag1 == false) {\n      temp3 = temp3 >> 1;\n      temp14 = (uint)((input3 >> 0x18 & 1) != 0) << 0x1f | temp14 >> 1;\n    }\n    temp13 = temp12 - temp14;\n    temp11 = (temp11 - temp3) - (uint)(temp12 < temp14);\n    temp4 = temp3 >> 1;\n    temp1 = (uint)((temp3 & 1) != 0) << 0x1f | temp14 >> 1;\n    temp12 = 0x100000;\n    temp3 = 0x80000;\n    while( true ) {\n      flag1 = temp1 <= temp13;\n      if (temp4 < temp11 || temp11 - temp4 < (uint)flag1) {\n        temp13 = temp13 - temp1;\n        temp12 = temp12 | temp3;\n        temp11 = (temp11 - temp4) - (uint)!flag1;\n      }\n      temp5 = temp4 >> 1;\n      temp1 = (uint)((temp4 & 1) != 0) << 0x1f | temp1 >> 1;\n      flag2 = temp1 <= temp13;\n      flag1 = temp11 - temp5 < (uint)flag2;\n      temp14 = temp11;\n      if (temp5 < temp11 || flag1) {\n        temp13 = temp13 - temp1;\n        temp14 = (temp11 - temp5) - (uint)!flag2;\n      }\n      if (temp5 < temp11 || flag1) {\n        temp12 = temp12 | temp3 >> 1;\n      }\n      temp11 = temp4 >> 2;\n      temp2 = (uint)((temp5 & 1) != 0) << 0x1f | temp1 >> 1;\n      flag2 = temp2 <= temp13;\n      flag1 = temp14 - temp11 < (uint)flag2;\n      temp5 = temp14;\n      if (temp11 < temp14 || flag1) {\n        temp13 = temp13 - temp2;\n        temp5 = (temp14 - temp11) - (uint)!flag2;\n      }\n      if (temp11 < temp14 || flag1) {\n        temp12 = temp12 | temp3 >> 2;\n      }\n      temp6 = temp4 >> 3;\n      temp1 = (uint)((temp11 & 1) != 0) << 0x1f | temp2 >> 1;\n      flag2 = temp1 <= temp13;\n      flag1 = temp5 - temp6 < (uint)flag2;\n      temp11 = temp5;\n      if (temp6 < temp5 || flag1) {\n        temp13 = temp13 - temp1;\n        temp11 = (temp5 - temp6) - (uint)!flag2;\n      }\n      if (temp6 < temp5 || flag1) {\n        temp12 = temp12 | temp3 >> 3;\n      }\n      temp14 = temp11 | temp13;\n      if (temp14 == 0) break;\n      temp11 = temp11 << 4 | temp13 >> 0x1c;\n      temp13 = temp13 << 4;\n      temp4 = temp4 & 0xfffffff8 | temp1 >> 0x1d;\n      temp1 = (temp2 >> 1) << 3;\n      temp3 = temp3 >> 4;\n      if (temp3 == 0) {\n        temp6 = temp4;\n        if ((temp7 & 0x100000) != 0) goto LAB_080089b2;\n        temp7 = temp7 | temp12;\n        temp12 = 0;\n        temp3 = 0x80000000;\n      }\n    }\n    if ((temp7 & 0x100000) == 0) {\n      temp7 = temp7 | temp12;\n      temp12 = 0;\n    }\nLAB_080089b2:\n    flag3 = 0xfc < temp9;\n    flag2 = SBORROW4(temp9,0xfd);\n    temp4 = temp8 + 0x300;\n    flag1 = temp4 == 0;\n    temp3 = temp4;\n    if (flag3 && !flag1) {\n      flag3 = 0x6ff < temp4;\n      flag2 = SBORROW4(temp4,0x700);\n      temp3 = temp8 - 0x400;\n      flag1 = temp4 == 0x700;\n    }\n    if (!flag3 || flag1) {\n      flag1 = temp6 <= temp11;\n      if (temp11 == temp6) {\n        flag1 = temp1 <= temp13;\n      }\n      if (temp11 == temp6 && temp13 == temp1) {\n        flag1 = (temp12 & 1) != 0;\n      }\n      return CONCAT44(temp7 + temp9 * 0x100000 + (uint)CARRY4(temp12,(uint)flag1),temp12 + flag1);\n    }\n  }\n  if (!flag1 && (int)temp3 < 0 == flag2) {\n    return (ulonglong)(temp7 & 0x80000000 | 0x7ff00000) << 0x20;\n  }\n  flag3 = SCARRY4(temp9,0x36);\n  flag1 = (int)(temp9 + 0x36) < 0;\n  flag2 = temp9 == 0xffffffca;\n  if (flag2 || flag1 != flag3) {\n    temp12 = 0;\n  }\n  if (flag2 || flag1 != flag3) {\n    temp7 = temp7 & 0x80000000;\n  }\n  if (flag2 || flag1 != flag3) {\n    return CONCAT44(temp7,temp12);\n  }\n  temp3 = -temp9;\n  temp11 = temp3 - 0x20;\n  if (0x1f < (int)temp3) {\n    temp3 = temp12 >> (temp11 & 0xff) | temp7 << (0x20 - temp11 & 0xff);\n    temp9 = (temp7 >> (temp11 & 0xff) & ~((temp7 & 0x80000000) >> (temp11 & 0xff))) -\n            ((int)temp3 >> 0x1f);\n    if ((temp14 | temp12 << (0x20 - temp11 & 0xff) | temp3 << 1) == 0) {\n      temp9 = temp9 & ~(temp3 >> 0x1f);\n    }\n    return CONCAT44(temp7,temp9) & 0x80000000ffffffff;\n  }\n  temp8 = temp3 - 0x14;\n  if (temp8 != 0 && temp8 < 0 == SCARRY4(temp11,0xc)) {\n    temp9 = 0xc - temp8;\n    temp3 = temp12 << (temp9 & 0xff);\n    temp12 = temp12 >> (0x20 - temp9 & 0xff) | temp7 << (temp9 & 0xff);\n    temp9 = temp12 + -((int)temp3 >> 0x1f);\n    if ((temp14 | temp3 << 1) == 0) {\n      temp9 = temp9 & ~(temp3 >> 0x1f);\n    }\n    return CONCAT44((temp7 & 0x80000000) + (uint)CARRY4(temp12,-((int)temp3 >> 0x1f)),temp9);\n  }\n  temp11 = temp12 << (temp9 + 0x20 & 0xff);\n  temp12 = temp12 >> (temp3 & 0xff) | temp7 << (temp9 + 0x20 & 0xff);\n  temp9 = temp12 + -((int)temp11 >> 0x1f);\n  if ((temp14 | temp11 << 1) == 0) {\n    temp9 = temp9 & ~(temp11 >> 0x1f);\n  }\n  return CONCAT44((temp7 & 0x80000000) +\n                  ((temp7 & 0x7fffffff) >> (temp3 & 0xff)) +\n                  (uint)CARRY4(temp12,-((int)temp11 >> 0x1f)),temp9);\n}\n\n",
            "renaming": {
                "FUN_08008894": "calculate_improved_floating_point_08008894",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "temp1",
                "uVar2": "temp2",
                "uVar3": "temp3",
                "uVar4": "temp4",
                "uVar5": "temp5",
                "uVar6": "temp6",
                "uVar7": "temp7",
                "iVar8": "temp8",
                "uVar9": "temp9",
                "unaff_r5": "temp10",
                "uVar10": "temp11",
                "uVar11": "temp12",
                "uVar12": "temp13",
                "uVar13": "temp14",
                "bVar14": "flag1",
                "bVar15": "flag2",
                "bVar16": "flag3"
            },
            "calling": [
                "sqrt",
                "__ieee754_sqrt",
                "gc_execute_line",
                "atan",
                "__ieee754_atan2",
                "homing_cycle",
                "plan_buffer_line"
            ],
            "called": [
                "FUN_08008a02"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008a02": {
            "entrypoint": "0x08008a02",
            "current_name": "calculate_floating_point_08008a02",
            "code": "\nulonglong calculateFloatingPoint_08008a02(uint input1,uint input2,uint input3,uint input4)\n\n{\n  uint bit1;\n  uint bitCheck;\n  uint bitShift1;\n  uint bitShift2;\n  uint constant;\n  bool isZero;\n  \n  bitShift1 = constant & input4 >> 0x14;\n  bitShift2 = input2;\n  if (bitCheck != constant || bitShift1 != constant) {\n    if (bitCheck == constant) {\n      if (((input1 | input2 << 0xc) == 0) && (input1 = input3, bitShift2 = input4, bitShift1 != constant)\n         ) {\nreturnNaN:\n        return (ulonglong)((input2 ^ input4) & 0x80000000 | 0x7ff00000) << 0x20;\n      }\n    }\n    else if (bitShift1 == constant) {\n      input1 = input3;\n      bitShift2 = input4;\n      if ((input3 | input4 << 0xc) == 0) {\nreturnNegativeNaN:\n        return (ulonglong)((input2 ^ input4) & 0x80000000) << 0x20;\n      }\n    }\n    else {\n      isZero = (input1 | input2 << 1) == 0;\n      if (!isZero) {\n        isZero = (input3 | input4 << 1) == 0;\n      }\n      if (!isZero) {\n        if (bitCheck == 0) {\n          bitShift2 = input2 & 0x80000000;\n          do {\n            bit1 = input1 & 0x80000000;\n            input1 = input1 << 1;\n            input2 = input2 * 2 + (uint)(bit1 != 0);\n          } while ((input2 & 0x100000) == 0);\n          input2 = input2 | bitShift2;\n          if (bitShift1 != 0) {\n            return CONCAT44(input2,input1);\n          }\n        }\n        do {\n          bitShift2 = input3 & 0x80000000;\n          input3 = input3 << 1;\n          input4 = input4 * 2 + (uint)(bitShift2 != 0);\n        } while ((input4 & 0x100000) == 0);\n        return CONCAT44(input2,input1);\n      }\n      if ((input1 | input2 << 1) != 0) goto returnNaN;\n      if ((input3 | input4 << 1) != 0) goto returnNegativeNaN;\n    }\n  }\n  return CONCAT44(bitShift2,input1) | 0x7ff8000000000000;\n}\n\n",
            "renaming": {
                "FUN_08008a02": "calculate_floating_point_08008a02",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "uVar1": "bit1",
                "unaff_r4": "bitCheck",
                "uVar2": "bitShift1",
                "uVar3": "bitShift2",
                "in_r12": "constant",
                "bVar4": "isZero",
                "LAB_08008874": "returnNaN",
                "LAB_08008838": "returnNegativeNaN"
            },
            "calling": [
                "__divdf3"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008a74": {
            "entrypoint": "0x08008a74",
            "current_name": "check_equality_and_comparison_08008a74",
            "code": "\nuint checkEqualityAndComparison_08008a74(uint num1,uint num2,uint num3,uint num4)\n\n{\n  uint result;\n  bool isZero;\n  bool isNegative;\n  \n  if (((int)(num2 << 1) >> 0x15 == -1 || (int)(num4 << 1) >> 0x15 == -1) &&\n     ((((int)(num2 << 1) >> 0x15 == -1 && ((num1 | num2 << 0xc) != 0)) ||\n      (((int)(num4 << 1) >> 0x15 == -1 && ((num3 | num4 << 0xc) != 0)))))) {\n    return 1;\n  }\n  isZero = (num1 | num2 << 1) == 0;\n  if (isZero) {\n    isZero = (num3 | num4 << 1) == 0;\n  }\n  if (!isZero) {\n    isZero = num2 == num4;\n  }\n  if (isZero) {\n    isZero = num1 == num3;\n  }\n  if (!isZero) {\n    result = num2 ^ num4;\n    isZero = result == 0;\n    if (-1 < (int)result) {\n      isZero = num2 == num4;\n    }\n    isNegative = -1 < (int)result && num4 <= num2;\n    if (isZero) {\n      isNegative = num3 <= num1;\n    }\n    num4 = (int)num4 >> 0x1f;\n    if (!isNegative) {\n      num4 = ~num4;\n    }\n    return num4 | 1;\n  }\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_08008a74": "check_equality_and_comparison_08008a74",
                "param_1": "num1",
                "param_2": "num2",
                "param_3": "num3",
                "param_4": "num4",
                "uVar1": "result",
                "bVar2": "isZero",
                "bVar3": "isNegative"
            },
            "calling": [
                "__aeabi_cdcmpeq"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008af0": {
            "entrypoint": "0x08008af0",
            "current_name": "compare_floats_08008af0",
            "code": "\nvoid compareFloats_08008af0(undefined4 result,undefined4 status,undefined4 float1,undefined4 float2)\n\n{\n  __aeabi_cdcmpeq(float1,float2,result,status);\n  return;\n}\n\n",
            "renaming": {
                "FUN_08008af0": "compare_floats_08008af0",
                "param_1": "result",
                "param_2": "status",
                "param_3": "float1",
                "param_4": "float2"
            },
            "calling": [
                "__aeabi_dcmpgt",
                "__aeabi_dcmpge"
            ],
            "called": [
                "__aeabi_cdcmpeq"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b00": {
            "entrypoint": "0x08008b00",
            "current_name": "calculate_result_08008b00",
            "code": "\nundefined4 calculate_result_08008b00(undefined4 input_value)\n\n{\n  __nedf2();\n  return input_value;\n}\n\n",
            "renaming": {
                "FUN_08008b00": "calculate_result_08008b00",
                "param_1": "input_value"
            },
            "calling": [
                "__aeabi_cdrcmple",
                "__aeabi_dcmpeq",
                "__aeabi_dcmplt"
            ],
            "called": [
                "__nedf2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b10": {
            "entrypoint": "0x08008b10",
            "current_name": "is_not_zero_08008b10",
            "code": "\nbool isNotZero_08008b10(void)\n\n{\n  char inputChar;\n  \n  __aeabi_cdcmpeq();\n  return inputChar != '\\0';\n}\n\n",
            "renaming": {
                "FUN_08008b10": "is_not_zero_08008b10",
                "in_ZR": "inputChar"
            },
            "calling": [
                "__ieee754_rem_pio2",
                "__kernel_rem_pio2"
            ],
            "called": [
                "__aeabi_cdcmpeq"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b24": {
            "entrypoint": "0x08008b24",
            "current_name": "check_if_character_null_08008b24",
            "code": "\nbool check_if_character_null_08008b24(void)\n\n{\n  char character;\n  \n  perform_comparison();\n  return character == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08008b24": "check_if_character_null_08008b24",
                "in_CY": "character",
                "__aeabi_cdcmpeq": "perform_comparison"
            },
            "calling": [
                "sqrt",
                "__ieee754_hypot",
                "plan_buffer_line"
            ],
            "called": [
                "__aeabi_cdcmpeq"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b4c": {
            "entrypoint": "0x08008b4c",
            "current_name": "is_negative_or_zero_08008b4c",
            "code": "\nbool is_negative_or_zero_08008b4c(void)\n\n{\n  undefined is_zero;\n  undefined is_negative;\n  \n  __aeabi_cdrcmple();\n  return !(bool)is_negative || (bool)is_zero;\n}\n\n",
            "renaming": {
                "FUN_08008b4c": "is_negative_or_zero_08008b4c",
                "in_ZR": "is_zero",
                "in_CY": "is_negative"
            },
            "calling": [
                "__kernel_rem_pio2"
            ],
            "called": [
                "__aeabi_cdrcmple"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b60": {
            "entrypoint": "0x08008b60",
            "current_name": "is_null_character_08008b60",
            "code": "\nbool is_null_character_08008b60(void)\n\n{\n  char character_check;\n  \n  compare_with_zero();\n  return character_check == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08008b60": "is_null_character_08008b60",
                "in_CY": "character_check",
                "__aeabi_cdrcmple": "compare_with_zero"
            },
            "calling": [
                "ceil",
                "atan",
                "floor",
                "plan_buffer_line"
            ],
            "called": [
                "__aeabi_cdrcmple"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008b74": {
            "entrypoint": "0x08008b74",
            "current_name": "check_parameters_08008b74",
            "code": "\nundefined4 check_parameters_08008b74(uint input1,int input2,uint input3,int input4)\n\n{\n  if ((((input2 << 1) >> 0x15 != -1) || ((input1 | input2 << 0xc) == 0)) &&\n     (((input4 << 1) >> 0x15 != -1 || ((input3 | input4 << 0xc) == 0)))) {\n    return 0;\n  }\n  return 1;\n}\n\n",
            "renaming": {
                "FUN_08008b74": "check_parameters_08008b74",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4"
            },
            "calling": [
                "sqrt"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008ba0": {
            "entrypoint": "0x08008ba0",
            "current_name": "calculate_unsigned_fraction_08008ba0",
            "code": "\nuint calculateUnsignedFraction_08008ba0(uint numerator,uint denominator)\n\n{\n  uint result;\n  int scaledDenominator;\n  uint shiftMask;\n  \n  scaledDenominator = denominator * 2 + 0x200000;\n  if (denominator * 2 < 0xffe00000) {\n    if (-1 < scaledDenominator) {\n      return 0;\n    }\n    result = scaledDenominator >> 0x15;\n    shiftMask = -result - 0x3e1;\n    if (result < 0xfffffc20 && shiftMask != 0) {\n      result = (denominator << 0xb | 0x80000000 | numerator >> 0x15) >> (shiftMask & 0xff);\n      if ((denominator & 0x80000000) != 0) {\n        result = -result;\n      }\n      return result;\n    }\n  }\n  else if ((numerator | denominator << 0xc) != 0) {\n    return 0;\n  }\n  denominator = denominator & 0x80000000;\n  if (denominator == 0) {\n    denominator = 0x7fffffff;\n  }\n  return denominator;\n}\n\n",
            "renaming": {
                "FUN_08008ba0": "calculate_unsigned_fraction_08008ba0",
                "param_1": "numerator",
                "param_2": "denominator",
                "iVar2": "scaledDenominator",
                "uVar1": "result",
                "uVar3": "shiftMask"
            },
            "calling": [
                "__ieee754_rem_pio2",
                "gc_execute_line",
                "__kernel_cos",
                "calculate_trapezoid_for_block",
                "__kernel_rem_pio2",
                "lround",
                "plan_buffer_line",
                "__kernel_sin"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008bf0": {
            "entrypoint": "0x08008bf0",
            "current_name": "calculate_shifted_value_08008bf0",
            "code": "\nuint calculateShiftedValue_08008bf0(uint inputValue,uint shiftAmount)\n\n{\n  int shiftedValue;\n  uint shiftCount;\n  \n  if ((shiftAmount & 0x80000000) != 0) {\n    return 0;\n  }\n  shiftedValue = shiftAmount * 2 + 0x200000;\n  if (shiftAmount * 2 < 0xffe00000) {\n    if (-1 < shiftedValue) {\n      return 0;\n    }\n    shiftCount = -(shiftedValue >> 0x15) - 0x3e1;\n    if (-1 < (int)shiftCount) {\n      return (shiftAmount << 0xb | 0x80000000 | inputValue >> 0x15) >> (shiftCount & 0xff);\n    }\n  }\n  else if ((inputValue | shiftAmount << 0xc) != 0) {\n    return 0;\n  }\n  return 0xffffffff;\n}\n\n",
            "renaming": {
                "FUN_08008bf0": "calculate_shifted_value_08008bf0",
                "param_1": "inputValue",
                "param_2": "shiftAmount",
                "iVar1": "shiftedValue",
                "uVar2": "shiftCount"
            },
            "calling": [
                "settings_store_global_setting",
                "mc_arc",
                "protocol_execute_line",
                "gc_execute_line",
                "calculate_trapezoid_for_block",
                "homing_cycle",
                "mc_dwell",
                "plan_buffer_line"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008c30": {
            "entrypoint": "0x08008c30",
            "current_name": "calculate_result_08008c30",
            "code": "\nuint calculateResult_08008c30(uint input_1,uint input_2)\n\n{\n  uint result;\n  uint temp1;\n  uint temp2;\n  uint temp3;\n  bool isInvalid;\n  bool isLessThanThreshold;\n  \n  temp1 = input_2 * 2;\n  isLessThanThreshold = temp1 < 0x70000000;\n  temp2 = temp1 + 0x90000000;\n  result = temp2;\n  if (!isLessThanThreshold) {\n    temp3 = temp1 + 0x8fe00000;\n    result = temp3;\n  }\n  isInvalid = result == 0;\n  if (!isLessThanThreshold && temp2 >= 0x200000) {\n    isInvalid = temp3 == 0x1fc00000;\n  }\n  if (((isLessThanThreshold || temp2 < 0x200000) || 0x1fc00000 < temp3) || isInvalid) {\n    if ((input_2 & 0x40000000) != 0) {\n      if (((int)temp1 >> 0x15 == -1) && ((input_1 | input_2 << 0xc) != 0)) {\n        return 0x7fc00000;\n      }\n      return input_2 & 0x80000000 | 0x7f800000;\n    }\n    if ((int)(temp1 + 0x92e00000) < 0 != SCARRY4(temp2,0x2e00000)) {\n      return input_2 & 0x80000000;\n    }\n    temp1 = 0x18 - (temp1 + 0x92e00000 >> 0x15);\n    result = input_1 >> (temp1 & 0xff);\n    if (input_1 << (0x20 - temp1 & 0xff) != 0) {\n      result = result | 1;\n    }\n    temp2 = input_2 & 0x1fffff | 0x100000;\n    input_1 = result | temp2 << (0x20 - temp1 & 0xff);\n    temp2 = (temp2 >> (temp1 & 0xff)) << 1;\n  }\n  result = (input_2 & 0x80000000 | input_1 >> 0x1d) + temp2 * 4 + (uint)(0x7fffffff < input_1 * 8);\n  if (input_1 * 8 == 0x80000000) {\n    result = result & 0xfffffffe;\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08008c30": "calculate_result_08008c30",
                "param_1": "input_1",
                "param_2": "input_2",
                "uVar1": "result",
                "uVar2": "temp1",
                "uVar3": "temp2",
                "in_r12": "temp3",
                "bVar4": "isInvalid",
                "bVar5": "isLessThanThreshold"
            },
            "calling": [
                "mc_arc",
                "report_gcode_parameters",
                "gc_execute_line",
                "to_millimeters",
                "read_float",
                "max_allowable_speed",
                "homing_cycle",
                "plan_buffer_line",
                "report_realtime_status",
                "report_gcode_modes"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008cd8": {
            "entrypoint": "0x08008cd8",
            "current_name": "calculate_08008cd8",
            "code": "\nuint calculate_08008cd8(uint input1,uint input2,undefined4 input3,uint input4)\n\n{\n  int shiftRightValue;\n  int shiftRightValue2;\n  uint tempVar1;\n  uint tempVar2;\n  uint result;\n  uint shiftValue;\n  uint absDifference;\n  bool isConditionTrue;\n  \n  tempVar1 = input2 ^ 0x80000000;\n  result = input1 << 1;\n  isConditionTrue = result == 0;\n  if (!isConditionTrue) {\n    input4 = input2 << 1;\n    isConditionTrue = input4 == 0;\n  }\n  if (!isConditionTrue) {\n    isConditionTrue = result == input4;\n  }\n  shiftRightValue = (int)result >> 0x18;\n  if (!isConditionTrue) {\n    isConditionTrue = shiftRightValue == -1;\n  }\n  if (!isConditionTrue) {\n    isConditionTrue = (int)input4 >> 0x18 == -1;\n  }\n  if (isConditionTrue) {\n    shiftRightValue2 = (int)(input2 << 1) >> 0x18;\n    if (shiftRightValue == -1 || shiftRightValue2 == -1) {\n      result = tempVar1;\n      if (shiftRightValue == -1) {\n        result = input1;\n      }\n      if (shiftRightValue != -1 || shiftRightValue2 != -1) {\n        tempVar1 = result;\n      }\n      isConditionTrue = (result & 0x7fffff) == 0;\n      if (isConditionTrue) {\n        isConditionTrue = (tempVar1 & 0x7fffff) == 0;\n      }\n      if (isConditionTrue) {\n        isConditionTrue = result == tempVar1;\n      }\n      if (!isConditionTrue) {\n        result = result | 0x400000;\n      }\n      return result;\n    }\n    if (((input1 ^ tempVar1) & 0x7fffffff) != 0) {\n      if (result == 0) {\n        input1 = tempVar1;\n      }\n      return input1;\n    }\n    if (input1 != tempVar1) {\n      return 0;\n    }\n    if ((result & 0xff000000) == 0) {\n      tempVar1 = input1 << 1;\n      if ((input1 & 0x80000000) != 0) {\n        tempVar1 = tempVar1 | 0x80000000;\n      }\n      return tempVar1;\n    }\n    if (result < 0xfe000000) {\n      return input1 + 0x800000;\n    }\n    input1 = input1 & 0x80000000;\nLAB_08008e12:\n    return input1 | 0x7f800000;\n  }\n  result = result >> 0x18;\n  input4 = input4 >> 0x18;\n  absDifference = input4 - result;\n  isConditionTrue = absDifference != 0;\n  shiftValue = result;\n  if (isConditionTrue && result <= input4) {\n    shiftValue = result + absDifference;\n  }\n  if (isConditionTrue && result <= input4) {\n    tempVar1 = tempVar1 ^ input1;\n  }\n  if (isConditionTrue && result <= input4) {\n    input1 = input1 ^ tempVar1;\n  }\n  if (isConditionTrue && result <= input4) {\n    tempVar1 = tempVar1 ^ input1;\n  }\n  if (input4 < result) {\n    absDifference = -absDifference;\n  }\n  if (0x19 < absDifference) {\n    return input1;\n  }\n  result = input1 & 0xffffff | 0x800000;\n  if ((input1 & 0x80000000) != 0) {\n    result = -result;\n  }\n  tempVar2 = tempVar1 & 0xffffff | 0x800000;\n  if ((tempVar1 & 0x80000000) != 0) {\n    tempVar2 = -tempVar2;\n  }\n  if (shiftValue == absDifference) {\n    tempVar2 = tempVar2 ^ 0x800000;\n    if (shiftValue == 0) {\n      result = result ^ 0x800000;\n      shiftValue = 1;\n    }\n    else {\n      absDifference = absDifference - 1;\n    }\n  }\n  result = result + ((int)tempVar2 >> (absDifference & 0xff));\n  tempVar2 = tempVar2 << (0x20 - absDifference & 0xff);\n  input1 = result & 0x80000000;\n  if ((int)result < 0) {\n    isConditionTrue = tempVar2 != 0;\n    tempVar2 = -tempVar2;\n    result = -result - (uint)isConditionTrue;\n  }\n  if (result < 0x800000) {\n    tempVar1 = tempVar2 & 0x80000000;\n    tempVar2 = tempVar2 << 1;\n    result = result * 2 + (uint)(tempVar1 != 0);\n    tempVar1 = shiftValue - 2;\n    if (shiftValue - 1 == 0 || result < 0x800000) {\n      absDifference = LZCOUNT(result) - 8;\n      result = result << (absDifference & 0xff);\n      if ((int)tempVar1 < (int)absDifference) {\n        result = result >> (-(tempVar1 - absDifference) & 0xff);\n      }\n      else {\n        result = result + (tempVar1 - absDifference) * 0x800000;\n      }\n      return result | input1;\n    }\n  }\n  else {\n    tempVar1 = shiftValue - 1;\n    if (0xffffff < result) {\n      tempVar1 = result & 1;\n      result = result >> 1;\n      tempVar2 = (uint)(tempVar1 != 0) << 0x1f | tempVar2 >> 1;\n      tempVar1 = shiftValue;\n      if (0xfd < shiftValue) goto LAB_08008e12;\n    }\n  }\n  result = result + tempVar1 * 0x800000 + (uint)(0x7fffffff < tempVar2);\n  if (tempVar2 == 0x80000000) {\n    result = result & 0xfffffffe;\n  }\n  return result | input1;\n}\n\n",
            "renaming": {
                "FUN_08008cd8": "calculate_08008cd8",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "input3",
                "param_4": "input4",
                "iVar1": "shiftRightValue",
                "iVar2": "shiftRightValue2",
                "uVar3": "tempVar1",
                "uVar4": "tempVar2",
                "uVar5": "result",
                "uVar6": "shiftValue",
                "uVar7": "absDifference",
                "bVar8": "isConditionTrue"
            },
            "calling": [
                "mc_arc",
                "estimate_acceleration_distance",
                "gc_execute_line",
                "max_allowable_speed",
                "mc_dwell",
                "intersection_distance",
                "plan_buffer_line",
                "report_realtime_status"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008cdc": {
            "entrypoint": "0x08008cdc",
            "current_name": "calculate_floating_point_08008cdc",
            "code": "\nuint calculateFloatingPoint_08008cdc(uint mantissa1,uint mantissa2,undefined4 exponent1,uint exponent2)\n\n{\n  int exponentShifted1;\n  int exponentShifted2;\n  uint mantissaShifted1;\n  uint mantissaShifted2;\n  uint shiftCount;\n  uint difference;\n  bool isNegative;\n  \n  mantissaShifted2 = mantissa1 << 1;\n  isNegative = mantissaShifted2 == 0;\n  if (!isNegative) {\n    exponent2 = mantissa2 << 1;\n    isNegative = exponent2 == 0;\n  }\n  if (!isNegative) {\n    isNegative = mantissaShifted2 == exponent2;\n  }\n  exponentShifted1 = (int)mantissaShifted2 >> 0x18;\n  if (!isNegative) {\n    isNegative = exponentShifted1 == -1;\n  }\n  if (!isNegative) {\n    isNegative = (int)exponent2 >> 0x18 == -1;\n  }\n  if (isNegative) {\n    exponentShifted2 = (int)(mantissa2 << 1) >> 0x18;\n    if (exponentShifted1 == -1 || exponentShifted2 == -1) {\n      mantissaShifted2 = mantissa2;\n      if (exponentShifted1 == -1) {\n        mantissaShifted2 = mantissa1;\n      }\n      if (exponentShifted1 != -1 || exponentShifted2 != -1) {\n        mantissa2 = mantissaShifted2;\n      }\n      isNegative = (mantissaShifted2 & 0x7fffff) == 0;\n      if (isNegative) {\n        isNegative = (mantissa2 & 0x7fffff) == 0;\n      }\n      if (isNegative) {\n        isNegative = mantissaShifted2 == mantissa2;\n      }\n      if (!isNegative) {\n        mantissaShifted2 = mantissaShifted2 | 0x400000;\n      }\n      return mantissaShifted2;\n    }\n    if (((mantissa1 ^ mantissa2) & 0x7fffffff) != 0) {\n      if (mantissaShifted2 == 0) {\n        mantissa1 = mantissa2;\n      }\n      return mantissa1;\n    }\n    if (mantissa1 != mantissa2) {\n      return 0;\n    }\n    if ((mantissaShifted2 & 0xff000000) == 0) {\n      mantissaShifted2 = mantissa1 << 1;\n      if ((mantissa1 & 0x80000000) != 0) {\n        mantissaShifted2 = mantissaShifted2 | 0x80000000;\n      }\n      return mantissaShifted2;\n    }\n    if (mantissaShifted2 < 0xfe000000) {\n      return mantissa1 + 0x800000;\n    }\n    mantissa1 = mantissa1 & 0x80000000;\nLAB_08008e12:\n    return mantissa1 | 0x7f800000;\n  }\n  mantissaShifted2 = mantissaShifted2 >> 0x18;\n  exponent2 = exponent2 >> 0x18;\n  difference = exponent2 - mantissaShifted2;\n  isNegative = difference != 0;\n  shiftCount = mantissaShifted2;\n  if (isNegative && mantissaShifted2 <= exponent2) {\n    shiftCount = mantissaShifted2 + difference;\n  }\n  if (isNegative && mantissaShifted2 <= exponent2) {\n    mantissa2 = mantissa2 ^ mantissa1;\n  }\n  if (isNegative && mantissaShifted2 <= exponent2) {\n    mantissa1 = mantissa1 ^ mantissa2;\n  }\n  if (isNegative && mantissaShifted2 <= exponent2) {\n    mantissa2 = mantissa2 ^ mantissa1;\n  }\n  if (exponent2 < mantissaShifted2) {\n    difference = -difference;\n  }\n  if (0x19 < difference) {\n    return mantissa1;\n  }\n  mantissaShifted2 = mantissa1 & 0xffffff | 0x800000;\n  if ((mantissa1 & 0x80000000) != 0) {\n    mantissaShifted2 = -mantissaShifted2;\n  }\n  mantissaShifted1 = mantissa2 & 0xffffff | 0x800000;\n  if ((mantissa2 & 0x80000000) != 0) {\n    mantissaShifted1 = -mantissaShifted1;\n  }\n  if (shiftCount == difference) {\n    mantissaShifted1 = mantissaShifted1 ^ 0x800000;\n    if (shiftCount == 0) {\n      mantissaShifted2 = mantissaShifted2 ^ 0x800000;\n      shiftCount = 1;\n    }\n    else {\n      difference = difference - 1;\n    }\n  }\n  mantissaShifted2 = mantissaShifted2 + ((int)mantissaShifted1 >> (difference & 0xff));\n  mantissaShifted1 = mantissaShifted1 << (0x20 - difference & 0xff);\n  mantissa1 = mantissaShifted2 & 0x80000000;\n  if ((int)mantissaShifted2 < 0) {\n    isNegative = mantissaShifted1 != 0;\n    mantissaShifted1 = -mantissaShifted1;\n    mantissaShifted2 = -mantissaShifted2 - (uint)isNegative;\n  }\n  if (mantissaShifted2 < 0x800000) {\n    difference = mantissaShifted1 & 0x80000000;\n    mantissaShifted1 = mantissaShifted1 << 1;\n    mantissaShifted2 = mantissaShifted2 * 2 + (uint)(difference != 0);\n    difference = shiftCount - 2;\n    if (shiftCount - 1 == 0 || mantissaShifted2 < 0x800000) {\n      shiftCount = leadingZerosCount(mantissaShifted2) - 8;\n      mantissaShifted2 = mantissaShifted2 << (shiftCount & 0xff);\n      if ((int)difference < (int)shiftCount) {\n        mantissaShifted2 = mantissaShifted2 >> (-(difference - shiftCount) & 0xff);\n      }\n      else {\n        mantissaShifted2 = mantissaShifted2 + (difference - shiftCount) * 0x800000;\n      }\n      return mantissaShifted2 | mantissa1;\n    }\n  }\n  else {\n    difference = shiftCount - 1;\n    if (0xffffff < mantissaShifted2) {\n      difference = mantissaShifted2 & 1;\n      mantissaShifted2 = mantissaShifted2 >> 1;\n      mantissaShifted1 = (uint)(difference != 0) << 0x1f | mantissaShifted1 >> 1;\n      difference = shiftCount;\n      if (0xfd < shiftCount) goto LAB_08008e12;\n    }\n  }\n  mantissaShifted2 = mantissaShifted2 + difference * 0x800000 + (uint)(0x7fffffff < mantissaShifted1);\n  if (mantissaShifted1 == 0x80000000) {\n    mantissaShifted2 = mantissaShifted2 & 0xfffffffe;\n  }\n  return mantissaShifted2 | mantissa1;\n}\n\n",
            "renaming": {
                "FUN_08008cdc": "calculate_floating_point_08008cdc",
                "param_1": "mantissa1",
                "param_2": "mantissa2",
                "param_3": "exponent1",
                "param_4": "exponent2",
                "iVar1": "exponentShifted1",
                "iVar2": "exponentShifted2",
                "uVar3": "mantissaShifted1",
                "uVar4": "mantissaShifted2",
                "uVar5": "shiftCount",
                "uVar6": "difference",
                "bVar7": "isNegative",
                "LZCOUNT": "leadingZerosCount"
            },
            "calling": [
                "mc_arc",
                "estimate_acceleration_distance",
                "gc_execute_line",
                "max_allowable_speed",
                "intersection_distance",
                "printFloat",
                "plan_buffer_line",
                "report_realtime_status"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008e3c": {
            "entrypoint": "0x08008e3c",
            "current_name": "calculate_new_value_08008e3c",
            "code": "\nuint calculateNewValue_08008e3c(uint inputValue)\n\n{\n  uint leadingZeros;\n  uint shiftAmount;\n  int intermediateValue;\n  uint carryValue;\n  \n  if (inputValue == 0) {\n    return 0;\n  }\n  leadingZeros = LZCOUNT(inputValue);\n  shiftAmount = leadingZeros - 8;\n  intermediateValue = shiftAmount * -0x800000 + 0x4a800000;\n  if (7 < leadingZeros) {\n    carryValue = 0 << (shiftAmount & 0xff);\n    leadingZeros = intermediateValue + (inputValue << (shiftAmount & 0xff)) +\n            (0U >> (0x20 - shiftAmount & 0xff)) + (uint)(0x7fffffff < carryValue);\n    if (carryValue == 0x80000000) {\n      leadingZeros = leadingZeros & 0xfffffffe;\n    }\n    return leadingZeros;\n  }\n  shiftAmount = inputValue << leadingZeros + 0x18;\n  leadingZeros = intermediateValue + ((inputValue >> (0x20 - (leadingZeros + 0x18) & 0xff)) - ((int)shiftAmount >> 0x1f));\n  if ((shiftAmount & 0x7fffffff) == 0) {\n    leadingZeros = leadingZeros & ~(shiftAmount >> 0x1f);\n  }\n  return leadingZeros;\n}\n\n",
            "renaming": {
                "FUN_08008e3c": "calculate_new_value_08008e3c",
                "param_1": "inputValue",
                "uVar1": "leadingZeros",
                "uVar2": "shiftAmount",
                "iVar3": "intermediateValue",
                "uVar4": "carryValue"
            },
            "calling": [
                "calculate_trapezoid_for_block",
                "read_float"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008e44": {
            "entrypoint": "0x08008e44",
            "current_name": "reverse_transform_number_08008e44",
            "code": "\nuint reverse_transform_number_08008e44(uint input_number)\n\n{\n  uint leading_zeros;\n  uint shift_amount;\n  uint sign_bit;\n  int output_number;\n  \n  sign_bit = input_number & 0x80000000;\n  if ((int)sign_bit < 0) {\n    input_number = -input_number;\n  }\n  if (input_number == 0) {\n    return 0;\n  }\n  leading_zeros = count_leading_zeros(input_number);\n  shift_amount = leading_zeros - 8;\n  output_number = ((sign_bit | 0x4b000000) - 0x800000) + shift_amount * -0x800000;\n  if (7 < leading_zeros) {\n    leading_zeros = 0 << (shift_amount & 0xff);\n    sign_bit = output_number + (input_number << (shift_amount & 0xff)) +\n            (0U >> (0x20 - shift_amount & 0xff)) + (uint)(0x7fffffff < leading_zeros);\n    if (leading_zeros == 0x80000000) {\n      sign_bit = sign_bit & 0xfffffffe;\n    }\n    return sign_bit;\n  }\n  shift_amount = input_number << leading_zeros + 0x18;\n  sign_bit = output_number + ((input_number >> (0x20 - (leading_zeros + 0x18) & 0xff)) - ((int)shift_amount >> 0x1f));\n  if ((shift_amount & 0x7fffffff) == 0) {\n    sign_bit = sign_bit & ~(shift_amount >> 0x1f);\n  }\n  return sign_bit;\n}\n\n",
            "renaming": {
                "FUN_08008e44": "reverse_transform_number_08008e44",
                "param_1": "input_number",
                "uVar1": "leading_zeros",
                "uVar2": "shift_amount",
                "uVar3": "sign_bit",
                "iVar4": "output_number",
                "LZCOUNT": "count_leading_zeros"
            },
            "calling": [
                "mc_arc",
                "plan_cycle_reinitialize",
                "calculate_trapezoid_for_block",
                "gc_set_current_position",
                "mc_dwell",
                "mc_go_home",
                "plan_buffer_line",
                "report_realtime_status"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08008eec": {
            "entrypoint": "0x08008eec",
            "current_name": "floating_point_add_with_overflow_check_08008eec",
            "code": "\nuint floatingPointAddWithOverflowCheck_08008eec(uint firstOperand,uint secondOperand,undefined4 param_3,uint param_4)\n\n{\n  longlong product;\n  uint result;\n  uint firstOperandExponent;\n  int exponentSum;\n  int exponentDiff;\n  uint productLower;\n  int exponentDiffAbs;\n  uint result;\n  bool isZero;\n  bool overflowFlag;\n  \n  firstOperandExponent = firstOperand >> 0x17 & 0xff;\n  isZero = firstOperandExponent == 0;\n  if (!isZero) {\n    param_4 = secondOperand >> 0x17 & 0xff;\n    isZero = param_4 == 0;\n  }\n  if (!isZero) {\n    isZero = firstOperandExponent == 0xff;\n  }\n  if (!isZero) {\n    isZero = param_4 == 0xff;\n  }\n  if (isZero) {\n    param_4 = secondOperand >> 0x17 & 0xff;\n    if (firstOperandExponent == 0xff || param_4 == 0xff) {\n      isZero = firstOperand == 0 || firstOperand == 0x80000000;\n      result = secondOperand;\n      if (firstOperand != 0 && firstOperand != 0x80000000) {\n        isZero = secondOperand == 0;\n        result = firstOperand;\n      }\n      if (!isZero) {\n        isZero = secondOperand == 0x80000000;\n      }\n      result = result;\n      if (((isZero) || ((firstOperandExponent == 0xff && ((result & 0x7fffff) != 0)))) ||\n         ((param_4 == 0xff && (result = secondOperand, (secondOperand & 0x7fffff) != 0)))) {\n        return result | 0x7fc00000;\n      }\n      result = result ^ secondOperand;\n      goto LAB_0800903c;\n    }\n    isZero = (firstOperand & 0x7fffffff) == 0;\n    if (!isZero) {\n      isZero = (secondOperand & 0x7fffffff) == 0;\n    }\n    if (isZero) {\n      return (firstOperand ^ secondOperand) & 0x80000000;\n    }\n    isZero = firstOperandExponent == 0;\n    result = firstOperand & 0x80000000;\n    while( true ) {\n      if (isZero) {\n        firstOperand = firstOperand << 1;\n        isZero = (firstOperand & 0x800000) == 0;\n      }\n      if (!isZero) break;\n      firstOperandExponent = firstOperandExponent - 1;\n    }\n    firstOperand = firstOperand | result;\n    isZero = param_4 == 0;\n    result = secondOperand & 0x80000000;\n    while( true ) {\n      if (isZero) {\n        secondOperand = secondOperand << 1;\n        isZero = (secondOperand & 0x800000) == 0;\n      }\n      if (!isZero) break;\n      param_4 = param_4 - 1;\n    }\n    secondOperand = secondOperand | result;\n  }\n  exponentSum = firstOperandExponent + param_4;\n  result = firstOperand ^ secondOperand;\n  firstOperandExponent = firstOperand << 9;\n  isZero = firstOperandExponent == 0;\n  if (!isZero) {\n    secondOperand = secondOperand << 9;\n    isZero = secondOperand == 0;\n  }\n  if (isZero) {\n    if (firstOperandExponent == 0) {\n      secondOperand = secondOperand << 9;\n    }\n    result = result & 0x80000000 | firstOperand & 0x7fffff | secondOperand >> 9;\n    overflowFlag = SBORROW4(exponentSum,0x7f);\n    exponentDiff = exponentSum + -0x7f;\n    isZero = exponentDiff == 0;\n    exponentDiffAbs = exponentDiff;\n    if (!isZero && 0x7e < exponentSum) {\n      overflowFlag = SBORROW4(0xff,exponentDiff);\n      exponentDiffAbs = 0xff - exponentDiff;\n      isZero = exponentDiff == 0xff;\n    }\n    if (!isZero && exponentDiffAbs < 0 == overflowFlag) {\n      result = result | exponentDiff * 0x800000;\n    }\n    if (!isZero && exponentDiffAbs < 0 == overflowFlag) {\n      return result;\n    }\n    result = result | 0x800000;\n    productLower = 0;\n    overflowFlag = SBORROW4(exponentDiff,1);\n    result = exponentSum - 0x80;\n    isZero = result == 0;\n    firstOperandExponent = result;\n  }\n  else {\n    product = (ulonglong)(firstOperandExponent >> 5 | 0x8000000) * (ulonglong)(secondOperand >> 5 | 0x8000000);\n    productLower = (uint)product;\n    result = (uint)((ulonglong)product >> 0x20);\n    isZero = result < 0x800000;\n    if (isZero) {\n      result = result << 1;\n    }\n    if (isZero) {\n      result = result | productLower >> 0x1f;\n      productLower = productLower << 1;\n    }\n    result = result & 0x80000000 | result;\n    result = (exponentSum + -0x7f) - (uint)isZero;\n    overflowFlag = SBORROW4(result,0xfd);\n    isZero = result == 0xfd;\n    firstOperandExponent = result - 0xfd;\n    if (result < 0xfe) {\n      result = result + result * 0x800000 + (uint)(0x7fffffff < productLower);\n      if (productLower == 0x80000000) {\n        result = result & 0xfffffffe;\n      }\n      return result;\n    }\n  }\n  if (isZero || (int)firstOperandExponent < 0 != overflowFlag) {\n    isZero = (int)(result + 0x19) < 0;\n    if (result == 0xffffffe7 || isZero != SCARRY4(result,0x19)) {\n      result = result & 0x80000000;\n    }\n    if (result != 0xffffffe7 && isZero == SCARRY4(result,0x19)) {\n      firstOperandExponent = (result << 1) >> (-result & 0xff);\n      result = result << (result + 0x20 & 0xff);\n      firstOperandExponent = ((uint)((result & 0x80000000) != 0) << 0x1f | firstOperandExponent >> 1) + (uint)((byte)firstOperandExponent & 1);\n      if ((productLower | result << 1) == 0) {\n        firstOperandExponent = firstOperandExponent & ~(result >> 0x1f);\n      }\n      return firstOperandExponent;\n    }\n    return result;\n  }\nLAB_0800903c:\n  return result & 0x80000000 | 0x7f800000;\n}\n\n",
            "renaming": {
                "FUN_08008eec": "floating_point_add_with_overflow_check_08008eec",
                "param_1": "firstOperand",
                "param_2": "secondOperand",
                "lVar1": "product",
                "uVar2": "result",
                "uVar3": "firstOperandExponent",
                "iVar4": "exponentSum",
                "iVar5": "exponentDiff",
                "uVar6": "productLower",
                "iVar7": "exponentDiffAbs",
                "uVar8": "result",
                "bVar9": "isZero",
                "bVar10": "overflowFlag"
            },
            "calling": [
                "settings_store_global_setting",
                "mc_arc",
                "estimate_acceleration_distance",
                "gc_execute_line",
                "plan_cycle_reinitialize",
                "calculate_trapezoid_for_block",
                "max_allowable_speed",
                "homing_cycle",
                "mc_dwell",
                "intersection_distance",
                "mc_go_home",
                "plan_buffer_line",
                "read_float",
                "printFloat"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009054": {
            "entrypoint": "0x08009054",
            "current_name": "float_inverse_multiply_08009054",
            "code": "\nuint floatInverseMultiply_08009054(uint x,uint y,undefined4 z,uint w)\n\n{\n  uint remainder;\n  uint exponentX;\n  int diffExponents;\n  uint loopCounter;\n  int newExponent;\n  uint result;\n  bool isZero;\n  bool isOverflow;\n  bool isBorrow;\n  \n  exponentX = x >> 0x17 & 0xff;\n  isZero = exponentX == 0;\n  if (!isZero) {\n    w = y >> 0x17 & 0xff;\n    isZero = w == 0;\n  }\n  if (!isZero) {\n    isZero = exponentX == 0xff;\n  }\n  if (!isZero) {\n    isZero = w == 0xff;\n  }\n  if (isZero) {\n    w = y >> 0x17 & 0xff;\n    result = x;\n    if (exponentX == 0xff) {\n      if (((x & 0x7fffff) != 0) || (result = y, w == 0xff)) {\nLAB_0800904a:\n        return result | 0x7fc00000;\n      }\n    }\n    else {\n      if (w == 0xff) {\n        result = y;\n        if ((y & 0x7fffff) == 0) {\nLAB_08009000:\n          return (x ^ y) & 0x80000000;\n        }\n        goto LAB_0800904a;\n      }\n      isZero = (x & 0x7fffffff) == 0;\n      if (!isZero) {\n        isZero = (y & 0x7fffffff) == 0;\n      }\n      if (!isZero) {\n        isZero = exponentX == 0;\n        result = x & 0x80000000;\n        while( true ) {\n          if (isZero) {\n            x = x << 1;\n            isZero = (x & 0x800000) == 0;\n          }\n          if (!isZero) break;\n          exponentX = exponentX - 1;\n        }\n        x = x | result;\n        isZero = w == 0;\n        result = y & 0x80000000;\n        while( true ) {\n          if (isZero) {\n            y = y << 1;\n            isZero = (y & 0x800000) == 0;\n          }\n          if (!isZero) break;\n          w = w - 1;\n        }\n        y = y | result;\n        goto LAB_0800906c;\n      }\n      if ((x & 0x7fffffff) == 0) {\n        if ((y & 0x7fffffff) != 0) goto LAB_08009000;\n        goto LAB_0800904a;\n      }\n    }\n    x = x ^ y;\n  }\n  else {\nLAB_0800906c:\n    diffExponents = exponentX - w;\n    if (y << 9 == 0) {\n      x = (x ^ y) & 0x80000000 | x & 0x7fffff;\n      isBorrow = signedCarry(diffExponents,0x7f);\n      newExponent = diffExponents + 0x7f;\n      isZero = newExponent < 0;\n      isOverflow = newExponent == 0;\n      if (!isOverflow && isZero == isBorrow) {\n        isBorrow = signedBorrow(0xff,newExponent);\n        isZero = 0xff - newExponent < 0;\n        isOverflow = newExponent == 0xff;\n      }\n      if (!isOverflow && isZero == isBorrow) {\n        x = x | newExponent * 0x800000;\n      }\n      if (!isOverflow && isZero == isBorrow) {\n        return x;\n      }\n      x = x | 0x800000;\n      exponentX = 0;\n      isOverflow = signedBorrow(newExponent,1);\n      loopCounter = diffExponents + 0x7e;\n      isZero = loopCounter == 0;\n      result = loopCounter;\n    }\n    else {\n      remainder = (y << 9) >> 4 | 0x10000000;\n      exponentX = (x << 9) >> 4 | 0x10000000;\n      x = (x ^ y) & 0x80000000;\n      isZero = remainder <= exponentX;\n      if (!isZero) {\n        exponentX = exponentX << 1;\n      }\n      loopCounter = diffExponents + 0x7d + (uint)isZero;\n      result = 0x800000;\n      do {\n        if (remainder <= exponentX) {\n          exponentX = exponentX - remainder;\n          x = x | result;\n        }\n        isZero = remainder >> 1 <= exponentX;\n        if (isZero) {\n          exponentX = exponentX - (remainder >> 1);\n        }\n        if (isZero) {\n          x = x | result >> 1;\n        }\n        isZero = remainder >> 2 <= exponentX;\n        if (isZero) {\n          exponentX = exponentX - (remainder >> 2);\n        }\n        if (isZero) {\n          x = x | result >> 2;\n        }\n        isZero = remainder >> 3 <= exponentX;\n        if (isZero) {\n          exponentX = exponentX - (remainder >> 3);\n        }\n        if (isZero) {\n          x = x | result >> 3;\n        }\n        exponentX = exponentX * 0x10;\n        isZero = exponentX == 0;\n        if (!isZero) {\n          result = result >> 4;\n          isZero = result == 0;\n        }\n      } while (!isZero);\n      isOverflow = signedBorrow(loopCounter,0xfd);\n      isZero = loopCounter == 0xfd;\n      result = loopCounter - 0xfd;\n      if (loopCounter < 0xfe) {\n        x = x + loopCounter * 0x800000 + (uint)(remainder <= exponentX);\n        if (exponentX - remainder == 0) {\n          x = x & 0xfffffffe;\n        }\n        return x;\n      }\n    }\n    if (isZero || (int)result < 0 != isOverflow) {\n      isZero = (int)(loopCounter + 0x19) < 0;\n      if (loopCounter == 0xffffffe7 || isZero != signedCarry(loopCounter,0x19)) {\n        x = x & 0x80000000;\n      }\n      if (loopCounter == 0xffffffe7 || isZero != signedCarry(loopCounter,0x19)) {\n        return x;\n      }\n      result = (x << 1) >> (-loopCounter & 0xff);\n      loopCounter = x << (loopCounter + 0x20 & 0xff);\n      result = ((uint)((x & 0x80000000) != 0) << 0x1f | result >> 1) + (uint)((byte)result & 1);\n      if ((exponentX | loopCounter << 1) == 0) {\n        result = result & ~(loopCounter >> 0x1f);\n      }\n      return result;\n    }\n  }\n  return x & 0x80000000 | 0x7f800000;\n}\n\n",
            "renaming": {
                "FUN_08009054": "float_inverse_multiply_08009054",
                "param_1": "x",
                "param_2": "y",
                "param_3": "z",
                "param_4": "w",
                "uVar1": "remainder",
                "uVar2": "exponentX",
                "iVar3": "diffExponents",
                "uVar4": "loopCounter",
                "iVar5": "newExponent",
                "uVar6": "result",
                "bVar7": "isZero",
                "bVar8": "isOverflow",
                "bVar9": "isBorrow",
                "SCARRY4": "signedCarry",
                "SBORROW4": "signedBorrow"
            },
            "calling": [
                "planner_recalculate_trapezoids",
                "mc_arc",
                "estimate_acceleration_distance",
                "plan_cycle_reinitialize",
                "report_grbl_settings",
                "homing_cycle",
                "gc_set_current_position",
                "intersection_distance",
                "plan_buffer_line",
                "report_realtime_status"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800919c": {
            "entrypoint": "0x0800919c",
            "current_name": "check_overflow_and_mask_0800919c",
            "code": "\nuint check_overflow_and_mask_0800919c(uint input_1,uint input_2)\n\n{\n  bool is_combined_negative;\n  uint double_input_1;\n  uint double_input_2;\n  uint combined_inputs;\n  bool is_result_zero;\n  \n  double_input_1 = input_1 * 2;\n  double_input_2 = input_2 * 2;\n  if (((int)double_input_1 >> 0x18 == -1 || (int)double_input_2 >> 0x18 == -1) &&\n     ((((int)double_input_1 >> 0x18 == -1 && ((input_1 & 0x7fffff) != 0)) ||\n      (((int)double_input_2 >> 0x18 == -1 && ((input_2 & 0x7fffff) != 0)))))) {\n    return 1;\n  }\n  combined_inputs = double_input_1 | input_2 & 0x7fffffff;\n  is_result_zero = combined_inputs == 0;\n  if (!is_result_zero) {\n    combined_inputs = input_1 ^ input_2;\n    is_result_zero = combined_inputs == 0;\n  }\n  is_combined_negative = -1 < (int)combined_inputs;\n  if (is_combined_negative) {\n    input_1 = double_input_1 + input_2 * -2;\n    is_result_zero = input_1 == 0;\n  }\n  if ((is_combined_negative && double_input_2 <= double_input_1) && !is_result_zero) {\n    input_1 = (int)input_2 >> 0x1f;\n  }\n  if (!is_combined_negative || double_input_2 > double_input_1) {\n    input_1 = ~((int)input_2 >> 0x1f);\n  }\n  if (!is_result_zero) {\n    input_1 = input_1 | 1;\n  }\n  return input_1;\n}\n\n",
            "renaming": {
                "FUN_0800919c": "check_overflow_and_mask_0800919c",
                "param_1": "input_1",
                "param_2": "input_2",
                "uVar2": "double_input_1",
                "uVar3": "double_input_2",
                "uVar4": "combined_inputs",
                "bVar1": "is_combined_negative",
                "bVar5": "is_result_zero"
            },
            "calling": [
                "__aeabi_cfcmpeq"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080091fc": {
            "entrypoint": "0x080091fc",
            "current_name": "compare_floats_080091fc",
            "code": "\nvoid compareFloats_080091fc(undefined4 float1,undefined4 float2)\n\n{\n  __aeabi_cfcmpeq(float2,float1);\n  return;\n}\n\n",
            "renaming": {
                "FUN_080091fc": "compare_floats_080091fc",
                "param_1": "float1",
                "param_2": "float2"
            },
            "calling": [
                "__aeabi_fcmpge",
                "__aeabi_fcmpgt"
            ],
            "called": [
                "__aeabi_cfcmpeq"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009204": {
            "entrypoint": "0x08009204",
            "current_name": "concatenate_params_08009204",
            "code": "\nundefined8 concatenateParams_08009204(undefined4 firstParam,undefined4 secondParam)\n\n{\n  __cmpsf2();\n  return CONCAT44(secondParam,firstParam);\n}\n\n",
            "renaming": {
                "FUN_08009204": "concatenate_params_08009204",
                "param_1": "firstParam",
                "param_2": "secondParam"
            },
            "calling": [
                "__aeabi_fcmplt",
                "__aeabi_cfrcmple",
                "__aeabi_fcmple",
                "__aeabi_fcmpeq"
            ],
            "called": [
                "__cmpsf2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009214": {
            "entrypoint": "0x08009214",
            "current_name": "compare_values_08009214",
            "code": "\nbool compareValues_08009214(void)\n\n{\n  char result;\n  \n  __aeabi_cfcmpeq();\n  return result != '\\0';\n}\n\n",
            "renaming": {
                "FUN_08009214": "compare_values_08009214",
                "in_ZR": "result"
            },
            "calling": [
                "settings_store_global_setting",
                "mc_arc",
                "planner_forward_pass_kernel",
                "gc_execute_line",
                "planner_reverse_pass_kernel",
                "read_float"
            ],
            "called": [
                "__aeabi_cfcmpeq"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009228": {
            "entrypoint": "0x08009228",
            "current_name": "is_cy_null_08009228",
            "code": "\nbool is_CY_null_08009228(void)\n\n{\n  char input_char;\n  \n  __aeabi_cfcmpeq();\n  return input_char == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08009228": "is_cy_null_08009228",
                "in_CY": "input_char"
            },
            "calling": [
                "settings_store_global_setting",
                "planner_forward_pass_kernel",
                "gc_execute_line",
                "planner_reverse_pass_kernel",
                "printFloat",
                "plan_buffer_line"
            ],
            "called": [
                "__aeabi_cfcmpeq"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800923c": {
            "entrypoint": "0x0800923c",
            "current_name": "are_inputs_equal_0800923c",
            "code": "\nbool areInputsEqual_0800923c(void)\n\n{\n  undefined isZeroResult;\n  undefined isCarrySet;\n  \n  __aeabi_cfcmpeq();\n  return !(bool)isCarrySet || (bool)isZeroResult;\n}\n\n",
            "renaming": {
                "FUN_0800923c": "are_inputs_equal_0800923c",
                "in_ZR": "isZeroResult",
                "in_CY": "isCarrySet"
            },
            "calling": [
                "settings_store_global_setting",
                "mc_arc",
                "gc_execute_line"
            ],
            "called": [
                "__aeabi_cfcmpeq"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009250": {
            "entrypoint": "0x08009250",
            "current_name": "is_zero_or_less_08009250",
            "code": "\nbool isZeroOrLess_08009250(void)\n\n{\n  undefined isZero;\n  undefined isLess;\n  \n  __aeabi_cfrcmple();\n  return !(bool)isLess || (bool)isZero;\n}\n\n",
            "renaming": {
                "FUN_08009250": "is_zero_or_less_08009250",
                "in_ZR": "isZero",
                "in_CY": "isLess"
            },
            "calling": [
                "mc_arc",
                "plan_buffer_line"
            ],
            "called": [
                "__aeabi_cfrcmple"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009264": {
            "entrypoint": "0x08009264",
            "current_name": "is_null_terminated_08009264",
            "code": "\nbool isNullTerminated_08009264(void)\n\n{\n  char inputChar;\n  \n  __aeabi_cfrcmple();\n  return inputChar == '\\0';\n}\n\n",
            "renaming": {
                "FUN_08009264": "is_null_terminated_08009264",
                "in_CY": "inputChar"
            },
            "calling": [
                "planner_reverse_pass_kernel",
                "plan_buffer_line"
            ],
            "called": [
                "__aeabi_cfrcmple"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009278": {
            "entrypoint": "0x08009278",
            "current_name": "convert_to_signed_integer_08009278",
            "code": "\nuint convertToSignedInteger_08009278(uint unsignedInput)\n\n{\n  uint shiftedInput;\n  uint difference;\n  \n  if (unsignedInput << 1 < 0x7f000000) {\n    return 0;\n  }\n  shiftedInput = (unsignedInput << 1) >> 0x18;\n  difference = 0x9e - shiftedInput;\n  if (shiftedInput < 0x9f && difference != 0) {\n    shiftedInput = (unsignedInput << 8 | 0x80000000) >> (difference & 0xff);\n    if ((unsignedInput & 0x80000000) != 0) {\n      shiftedInput = -shiftedInput;\n    }\n    return shiftedInput;\n  }\n  if ((difference == 0xffffff9f) && ((unsignedInput & 0x7fffff) != 0)) {\n    return 0;\n  }\n  unsignedInput = unsignedInput & 0x80000000;\n  if (unsignedInput == 0) {\n    unsignedInput = 0x7fffffff;\n  }\n  return unsignedInput;\n}\n\n",
            "renaming": {
                "FUN_08009278": "convert_to_signed_integer_08009278",
                "param_1": "unsignedInput",
                "uVar1": "shiftedInput",
                "uVar2": "difference"
            },
            "calling": [
                "protocol_execute_line",
                "printFloat"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080092c4": {
            "entrypoint": "0x080092c4",
            "current_name": "initialize_system_080092c4",
            "code": "\n/* WARNING: This function may have set the stack pointer */\n\nvoid initializeSystem_080092c4(void)\n\n{\n  int index;\n  undefined4 *ptr;\n  code *jumpTable;\n  \n  for (index = 0; (undefined4 *)(index + 0x20000000) < &DAT_2000044c; index = index + 4) {\n    *(undefined4 *)(index + 0x20000000) = *(undefined4 *)(index + 0x800c0c0);\n  }\n  for (ptr = &DAT_2000044c; ptr < &DAT_20000f20; ptr = ptr + 1) {\n    *ptr = 0;\n  }\n  SystemInit();\n  __libc_init_array();\n  jumpTable = (code *)0x80092fa;\n  main();\n                    /* WARNING: Could not recover jumptable at 0x080092fa. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (*jumpTable)();\n  return;\n}\n\n",
            "renaming": {
                "FUN_080092c4": "initialize_system_080092c4",
                "iVar1": "index",
                "puVar2": "ptr",
                "UNRECOVERED_JUMPTABLE": "jumpTable"
            },
            "calling": [],
            "called": [
                "__libc_init_array",
                "main",
                "SystemInit"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009318": {
            "entrypoint": "0x08009318",
            "current_name": "calculate_floating_point_value_08009318",
            "code": "\nlonglong calculateFloatingPointValue_08009318(uint input1,uint input2,undefined4 constant1,undefined4 constant2)\n\n{\n  int comparisonResult;\n  uint shiftedDifference;\n  uint shiftedMask;\n  bool carryFlag;\n  undefined8 resultValue;\n  longlong outputValue;\n  \n  shiftedMask = (input2 << 1) >> 0x15;\n  shiftedDifference = shiftedMask - 0x3ff;\n  if ((int)shiftedDifference < 0x14) {\n    if ((int)shiftedDifference < 0) {\n      resultValue = __aeabi_dadd(input1,input2,0x8800759c,0x7e37e43c,constant2);\n      comparisonResult = __aeabi_dcmpgt((int)resultValue,(int)((ulonglong)resultValue >> 0x20),0,0);\n      outputValue = CONCAT44(input2,input1);\n      if (comparisonResult != 0) {\n        if ((int)input2 < 0) {\n          outputValue = -0x8000000000000000;\n        }\n        else if ((input1 | input2) == 0) {\n          outputValue = 0;\n        }\n        else {\n          outputValue = 0x3ff0000000000000;\n        }\n      }\n    }\n    else {\n      shiftedMask = 0xfffff >> (shiftedDifference & 0xff);\n      outputValue = CONCAT44(input2,input1);\n      if ((input2 & shiftedMask | input1) != 0) {\n        resultValue = __aeabi_dadd(input1,input2,0x8800759c,0x7e37e43c,constant2);\n        comparisonResult = __aeabi_dcmpgt((int)resultValue,(int)((ulonglong)resultValue >> 0x20),0,0);\n        outputValue = CONCAT44(input2,input1);\n        if (comparisonResult != 0) {\n          if (0 < (int)input2) {\n            input2 = input2 + (0x100000 >> (shiftedDifference & 0xff));\n          }\n          outputValue = (ulonglong)(input2 & ~shiftedMask) << 0x20;\n        }\n      }\n    }\n  }\n  else if ((int)shiftedDifference < 0x34) {\n    shiftedMask = 0xffffffff >> (shiftedMask - 0x413 & 0xff);\n    outputValue = CONCAT44(input2,input1);\n    if ((shiftedMask & input1) != 0) {\n      resultValue = __aeabi_dadd(input1,input2,0x8800759c,0x7e37e43c,constant2);\n      comparisonResult = __aeabi_dcmpgt((int)resultValue,(int)((ulonglong)resultValue >> 0x20),0,0);\n      outputValue = CONCAT44(input2,input1);\n      if (comparisonResult != 0) {\n        if (0 < (int)input2) {\n          if (shiftedDifference == 0x14) {\n            input2 = input2 + 1;\n          }\n          else {\n            shiftedDifference = 1 << (0x34 - shiftedDifference & 0xff);\n            carryFlag = CARRY4(shiftedDifference,input1);\n            input1 = shiftedDifference + input1;\n            if (carryFlag != false) {\n              input2 = input2 + 1;\n            }\n          }\n        }\n        outputValue = CONCAT44(input2,input1 & ~shiftedMask);\n      }\n    }\n  }\n  else {\n    outputValue = CONCAT44(input2,input1);\n    if (shiftedDifference == 0x400) {\n      outputValue = __aeabi_dadd();\n    }\n  }\n  return outputValue;\n}\n\n",
            "renaming": {
                "FUN_08009318": "calculate_floating_point_value_08009318",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "constant1",
                "param_4": "constant2",
                "iVar1": "comparisonResult",
                "uVar2": "shiftedDifference",
                "uVar3": "shiftedMask",
                "bVar4": "carryFlag",
                "uVar5": "resultValue",
                "lVar6": "outputValue"
            },
            "calling": [
                "calculate_trapezoid_for_block",
                "homing_cycle",
                "plan_buffer_line"
            ],
            "called": [
                "__aeabi_dcmpgt",
                "__aeabi_dadd"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009410": {
            "entrypoint": "0x08009410",
            "current_name": "calculate_trigonometric_value_08009410",
            "code": "\nundefined4 calculate_trigonometric_value_08009410(undefined4 input_angle,uint input_flag)\n\n{\n  undefined4 result;\n  uint flag;\n  undefined4 angle_remainder;\n  undefined4 stack_variable_1;\n  undefined4 variable_1;\n  undefined4 stack_variable_2;\n  \n  if (0x3fe921fb < (input_flag & 0x7fffffff)) {\n    if ((input_flag & 0x7fffffff) < 0x7ff00000) {\n      flag = __ieee754_rem_pio2(input_angle,input_flag,&angle_remainder);\n      flag = flag & 3;\n      if (flag == 1) {\n        result = __kernel_sin(angle_remainder,stack_variable_1,variable_1,stack_variable_2,1);\n      }\n      else if (flag == 2) {\n        result = __kernel_cos(angle_remainder,stack_variable_1,variable_1,stack_variable_2);\n      }\n      else if (flag == 0) {\n        result = __kernel_cos(angle_remainder,stack_variable_1,variable_1,stack_variable_2);\n      }\n      else {\n        result = __kernel_sin(angle_remainder,stack_variable_1,variable_1,stack_variable_2,1);\n      }\n    }\n    else {\n      result = __subdf3(input_angle,input_flag,input_angle,input_flag);\n    }\n    return result;\n  }\n  result = __kernel_cos(input_angle,input_flag,0,0);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009410": "calculate_trigonometric_value_08009410",
                "param_1": "input_angle",
                "param_2": "input_flag",
                "uVar1": "result",
                "uVar2": "flag",
                "local_28": "angle_remainder",
                "uStack_24": "stack_variable_1",
                "local_20": "variable_1",
                "uStack_1c": "stack_variable_2"
            },
            "calling": [
                "mc_arc"
            ],
            "called": [
                "__ieee754_rem_pio2",
                "__kernel_cos",
                "__subdf3",
                "__kernel_sin"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080094c0": {
            "entrypoint": "0x080094c0",
            "current_name": "calculate_floating_point_080094c0",
            "code": "\nlonglong calculateFloatingPoint_080094c0(uint inputA,uint inputB,undefined4 param3,undefined4 param4)\n\n{\n  int comparisonResult;\n  uint exponentDifference;\n  uint mask;\n  bool carryFlag;\n  undefined8 result;\n  longlong concatenatedResult;\n  \n  mask = (inputB << 1) >> 0x15;\n  exponentDifference = mask - 0x3ff;\n  if ((int)exponentDifference < 0x14) {\n    if ((int)exponentDifference < 0) {\n      result = __aeabi_dadd(inputA,inputB,0x8800759c,0x7e37e43c,param4);\n      comparisonResult = __aeabi_dcmpgt((int)result,(int)((ulonglong)result >> 0x20),0,0);\n      concatenatedResult = CONCAT44(inputB,inputA);\n      if (comparisonResult != 0) {\n        if ((int)inputB < 0) {\n          if ((inputA | inputB & 0x7fffffff) != 0) {\n            inputB = 0xbff00000;\n          }\n          concatenatedResult = (ulonglong)inputB << 0x20;\n        }\n        else {\n          concatenatedResult = 0;\n        }\n      }\n    }\n    else {\n      mask = 0xfffff >> (exponentDifference & 0xff);\n      concatenatedResult = CONCAT44(inputB,inputA);\n      if ((inputB & mask | inputA) != 0) {\n        result = __aeabi_dadd(inputA,inputB,0x8800759c,0x7e37e43c,param4);\n        comparisonResult = __aeabi_dcmpgt((int)result,(int)((ulonglong)result >> 0x20),0,0);\n        concatenatedResult = CONCAT44(inputB,inputA);\n        if (comparisonResult != 0) {\n          if ((int)inputB < 0) {\n            inputB = inputB + (0x100000 >> (exponentDifference & 0xff));\n          }\n          concatenatedResult = (ulonglong)(inputB & ~mask) << 0x20;\n        }\n      }\n    }\n  }\n  else if ((int)exponentDifference < 0x34) {\n    mask = 0xffffffff >> (mask - 0x413 & 0xff);\n    concatenatedResult = CONCAT44(inputB,inputA);\n    if ((mask & inputA) != 0) {\n      result = __aeabi_dadd(inputA,inputB,0x8800759c,0x7e37e43c,param4);\n      comparisonResult = __aeabi_dcmpgt((int)result,(int)((ulonglong)result >> 0x20),0,0);\n      concatenatedResult = CONCAT44(inputB,inputA);\n      if (comparisonResult != 0) {\n        if ((int)inputB < 0) {\n          if (exponentDifference == 0x14) {\n            inputB = inputB + 1;\n          }\n          else {\n            exponentDifference = 1 << (0x34 - exponentDifference & 0xff);\n            carryFlag = CARRY4(exponentDifference,inputA);\n            inputA = exponentDifference + inputA;\n            if (carryFlag != false) {\n              inputB = inputB + 1;\n            }\n          }\n        }\n        concatenatedResult = CONCAT44(inputB,inputA & ~mask);\n      }\n    }\n  }\n  else {\n    concatenatedResult = CONCAT44(inputB,inputA);\n    if (exponentDifference == 0x400) {\n      concatenatedResult = __aeabi_dadd();\n    }\n  }\n  return concatenatedResult;\n}\n\n",
            "renaming": {
                "FUN_080094c0": "calculate_floating_point_080094c0",
                "param_1": "inputA",
                "param_2": "inputB",
                "param_3": "param3",
                "param_4": "param4",
                "iVar1": "comparisonResult",
                "uVar2": "exponentDifference",
                "uVar3": "mask",
                "bVar4": "carryFlag",
                "uVar5": "result",
                "lVar6": "concatenatedResult"
            },
            "calling": [
                "mc_arc",
                "calculate_trapezoid_for_block",
                "__kernel_rem_pio2",
                "mc_dwell"
            ],
            "called": [
                "__aeabi_dcmpgt",
                "__aeabi_dadd"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080095b8": {
            "entrypoint": "0x080095b8",
            "current_name": "calculate_product_080095b8",
            "code": "\nint calculateProduct_080095b8(uint input1,uint input2)\n\n{\n  uint carry;\n  uint shiftedBits;\n  uint result;\n  int sign;\n  uint shiftedBitsDiff;\n  \n  shiftedBits = (input2 << 1) >> 0x15;\n  shiftedBitsDiff = shiftedBits - 0x3ff;\n  if ((int)input2 < 0) {\n    sign = -1;\n  }\n  else {\n    sign = 1;\n  }\n  result = input2 & 0xfffff | 0x100000;\n  if ((int)shiftedBitsDiff < 0x14) {\n    if ((int)shiftedBitsDiff < 0) {\n      if (shiftedBitsDiff != 0xffffffff) {\n        sign = 0;\n      }\n      return sign;\n    }\n    result = result + (0x80000 >> (shiftedBitsDiff & 0xff)) >> (0x14 - shiftedBitsDiff & 0xff);\n  }\n  else {\n    if (0x1e < shiftedBitsDiff) {\n      sign = __aeabi_d2iz();\n      return sign;\n    }\n    if ((int)shiftedBitsDiff < 0x34) {\n      carry = 0x80000000 >> (shiftedBits - 0x413 & 0xff);\n      if (CARRY4(carry,input1) != false) {\n        result = result + 1;\n      }\n      result = result << (shiftedBits - 0x413 & 0xff);\n      if (shiftedBitsDiff != 0x14) {\n        result = result | carry + input1 >> (0x34 - shiftedBitsDiff & 0xff);\n      }\n    }\n    else {\n      result = result << (shiftedBits - 0x413 & 0xff) | input1 << (shiftedBits - 0x433 & 0xff);\n    }\n  }\n  return result * sign;\n}\n\n",
            "renaming": {
                "FUN_080095b8": "calculate_product_080095b8",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "carry",
                "uVar2": "shiftedBits",
                "uVar3": "result",
                "iVar4": "sign",
                "uVar5": "shiftedBitsDiff"
            },
            "calling": [
                "homing_cycle",
                "plan_buffer_line"
            ],
            "called": [
                "__aeabi_d2iz"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009654": {
            "entrypoint": "0x08009654",
            "current_name": "convert_to_floating_08009654",
            "code": "\nlonglong convertToFloating_08009654(uint input1,uint input2)\n\n{\n  uint expShift;\n  uint shiftVal;\n  longlong result;\n  \n  result = CONCAT44(input2,input1);\n  shiftVal = (input2 << 1) >> 0x15;\n  expShift = shiftVal - 0x3ff;\n  if ((int)expShift < 0x14) {\n    if ((int)expShift < 0) {\n      input2 = input2 & 0x80000000;\n      if (expShift == 0xffffffff) {\n        input2 = input2 | 0x3ff00000;\n      }\n      result = (ulonglong)input2 << 0x20;\n    }\n    else {\n      shiftVal = 0xfffff >> (expShift & 0xff);\n      result = CONCAT44(input2,input1);\n      if ((input2 & shiftVal | input1) != 0) {\n        result = (ulonglong)(input2 + (0x80000 >> (expShift & 0xff)) & ~shiftVal) << 0x20;\n      }\n    }\n  }\n  else if ((int)expShift < 0x34) {\n    shiftVal = 0xffffffff >> (shiftVal - 0x413 & 0xff);\n    if ((input1 & shiftVal) != 0) {\n      expShift = 1 << (0x33 - expShift & 0xff);\n      if (CARRY4(input1,expShift) != false) {\n        input2 = input2 + 1;\n      }\n      result = CONCAT44(input2,input1 + expShift & ~shiftVal);\n    }\n  }\n  else {\n    result = CONCAT44(input2,input1);\n    if (expShift == 0x400) {\n      result = __aeabi_dadd();\n    }\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009654": "convert_to_floating_08009654",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "expShift",
                "uVar2": "shiftVal",
                "lVar3": "result"
            },
            "calling": [
                "settings_store_global_setting"
            ],
            "called": [
                "__aeabi_dadd"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080096e8": {
            "entrypoint": "0x080096e8",
            "current_name": "calculate_trigonometric_value_080096e8",
            "code": "\nundefined4 calculate_trigonometric_value_080096e8(undefined4 value,uint status)\n\n{\n  undefined4 result;\n  uint remainder_status;\n  undefined4 quotient1;\n  undefined4 remainder1;\n  undefined4 quotient2;\n  undefined4 remainder2;\n  \n  if (0x3fe921fb < (status & 0x7fffffff)) {\n    if ((status & 0x7fffffff) < 0x7ff00000) {\n      remainder_status = __ieee754_rem_pio2(value,status,&quotient1);\n      remainder_status = remainder_status & 3;\n      if (remainder_status == 1) {\n        result = __kernel_cos(quotient1,remainder1,quotient2,remainder2);\n      }\n      else if (remainder_status == 2) {\n        result = __kernel_sin(quotient1,remainder1,quotient2,remainder2,1);\n      }\n      else if (remainder_status == 0) {\n        result = __kernel_sin(quotient1,remainder1,quotient2,remainder2,1);\n      }\n      else {\n        result = __kernel_cos(quotient1,remainder1,quotient2,remainder2);\n      }\n    }\n    else {\n      result = __subdf3(value,status,value,status);\n    }\n    return result;\n  }\n  result = __kernel_sin(value,status,0,0,0);\n  return result;\n}\n\n",
            "renaming": {
                "FUN_080096e8": "calculate_trigonometric_value_080096e8",
                "param_1": "value",
                "param_2": "status",
                "uVar1": "result",
                "uVar2": "remainder_status",
                "local_28": "quotient1",
                "uStack_24": "remainder1",
                "local_20": "quotient2",
                "uStack_1c": "remainder2"
            },
            "calling": [
                "mc_arc"
            ],
            "called": [
                "__ieee754_rem_pio2",
                "__kernel_cos",
                "__subdf3",
                "__kernel_sin"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009798": {
            "entrypoint": "0x08009798",
            "current_name": "calculate_result_08009798",
            "code": "\nlonglong calculateResult_08009798(uint input1,uint input2,undefined4 unusedParam1,undefined4 unusedParam2)\n\n{\n  uint shiftedBits;\n  uint shiftedResult;\n  longlong result;\n  \n  shiftedResult = (input2 << 1) >> 0x15;\n  shiftedBits = shiftedResult - 0x3ff;\n  if ((int)shiftedBits < 0x14) {\n    if ((int)shiftedBits < 0) {\n      return ((ulonglong)input2 & 0x80000000) << 0x20;\n    }\n    result = (ulonglong)(input2 & ~(0xfffff >> (shiftedBits & 0xff))) << 0x20;\n  }\n  else {\n    if ((int)shiftedBits < 0x34) {\n      return CONCAT44(input2,input1 & ~(0xffffffffU >> (shiftedResult - 0x413 & 0xff)));\n    }\n    if (shiftedBits != 0x400) {\n      return CONCAT44(input2,input1);\n    }\n    result = __aeabi_dadd(input1,input2,input1,input2,unusedParam2);\n  }\n  return result;\n}\n\n",
            "renaming": {
                "FUN_08009798": "calculate_result_08009798",
                "param_1": "input1",
                "param_2": "input2",
                "param_3": "unusedParam1",
                "param_4": "unusedParam2",
                "uVar1": "shiftedBits",
                "uVar2": "shiftedResult",
                "lVar3": "result"
            },
            "calling": [
                "settings_store_global_setting",
                "protocol_execute_line",
                "gc_execute_line"
            ],
            "called": [
                "__aeabi_dadd"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009818": {
            "entrypoint": "0x08009818",
            "current_name": "FUN_08009818",
            "code": "\nuint __ieee754_atan2(uint param_1,uint param_2,uint param_3,uint param_4)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  undefined8 uVar6;\n  \n  uVar4 = param_4 & 0x7fffffff;\n  if (((uVar4 | (-param_3 | param_3) >> 0x1f) < 0x7ff00001) &&\n     (uVar5 = param_2 & 0x7fffffff, (uVar5 | (-param_1 | param_1) >> 0x1f) < 0x7ff00001)) {\n    if ((param_4 + 0xc0100000 | param_3) == 0) {\n      uVar4 = atan();\n      return uVar4;\n    }\n    uVar3 = (int)param_4 >> 0x1e & 2U | param_2 >> 0x1f;\n    if ((uVar5 | param_1) == 0) {\n      if (uVar3 == 2) {\n        param_1 = 0x54442d18;\n      }\n      else if (uVar3 == 3) {\n        param_1 = 0x54442d18;\n      }\n    }\n    else {\n      if ((uVar4 | param_3) != 0) {\n        if (uVar4 == 0x7ff00000) {\n          uVar3 = uVar3 - 1;\n          if (uVar5 == 0x7ff00000) {\n            if (uVar3 < 3) {\n              return *(uint *)(&DAT_0800be68 + uVar3 * 8);\n            }\n            return 0x54442d18;\n          }\n          if (uVar3 < 3) {\n            return *(uint *)(&DAT_0800be80 + uVar3 * 8);\n          }\n          return 0;\n        }\n        if (uVar5 != 0x7ff00000) {\n          iVar1 = (int)(uVar5 - uVar4) >> 0x14;\n          if ((int)(uVar5 - uVar4) < 0x3d00000) {\n            if (((int)param_4 < 0) && (iVar1 + 0x3c < 0 != SCARRY4(iVar1,0x3c))) {\n              uVar6 = 0;\n            }\n            else {\n              __divdf3(param_1,param_2,param_3,param_4,param_4);\n              fabs();\n              uVar6 = atan();\n            }\n          }\n          else {\n            uVar6 = 0x3ff921fb54442d18;\n          }\n          uVar2 = (undefined4)((ulonglong)uVar6 >> 0x20);\n          uVar4 = (uint)uVar6;\n          if (uVar3 == 1) {\n            return uVar4;\n          }\n          if (uVar3 == 2) {\n            uVar6 = __subdf3(uVar4,uVar2,0x33145c07,0x3ca1a626);\n            uVar4 = __subdf3(0x54442d18,0x400921fb,(int)uVar6,(int)((ulonglong)uVar6 >> 0x20));\n            return uVar4;\n          }\n          if (uVar3 == 0) {\n            return uVar4;\n          }\n          uVar6 = __subdf3(uVar4,uVar2,0x33145c07,0x3ca1a626);\n          uVar4 = __subdf3((int)uVar6,(int)((ulonglong)uVar6 >> 0x20),0x54442d18,0x400921fb);\n          return uVar4;\n        }\n      }\n      if ((int)param_2 < 0) {\n        param_1 = 0x54442d18;\n      }\n      else {\n        param_1 = 0x54442d18;\n      }\n    }\n  }\n  else {\n    param_1 = __aeabi_dadd(param_3,param_4,param_1,param_2);\n  }\n  return param_1;\n}\n\n",
            "renaming": {},
            "calling": [
                "mc_arc"
            ],
            "called": [
                "__ieee754_atan2"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800981c": {
            "entrypoint": "0x0800981c",
            "current_name": "calculate_hypotenuse_0800981c",
            "code": "\nundefined8 calculate_hypotenuse_0800981c(undefined4 side_a,undefined4 side_b,undefined4 side_c,undefined4 side_d)\n\n{\n  int result;\n  undefined4 *error_ptr;\n  int *errno_ptr;\n  undefined8 hypotenuse;\n  undefined4 error_code;\n  char *function_name;\n  undefined4 side_a;\n  undefined4 side_b;\n  undefined4 side_c;\n  undefined4 side_d;\n  undefined4 error_flag;\n  undefined4 error_value;\n  int finite_result;\n  \n  hypotenuse = __ieee754_hypot();\n  if (DAT_20000014 == -1) {\n    return hypotenuse;\n  }\n  finite_result = finite();\n  if (finite_result != 0) {\n    return hypotenuse;\n  }\n  result = finite(side_a,side_b);\n  if (result == 0) {\n    return hypotenuse;\n  }\n  result = finite(side_c,side_d);\n  if (result == 0) {\n    return hypotenuse;\n  }\n  error_code = 3;\n  function_name = \"hypot\";\n  side_a = side_a;\n  side_b = side_b;\n  side_c = side_c;\n  side_d = side_d;\n  if (DAT_20000014 == '\\0') {\n    error_flag = 0xe0000000;\n    error_value = 0x47efffff;\nLAB_080098aa:\n    result = matherr(&error_code);\n    if (result != 0) goto LAB_08009896;\n  }\n  else {\n    error_flag = 0;\n    error_value = 0x7ff00000;\n    if (DAT_20000014 != '\\x02') goto LAB_080098aa;\n  }\n  error_ptr = (undefined4 *)__errno();\n  *error_ptr = 0x22;\nLAB_08009896:\n  hypotenuse = CONCAT44(error_value,error_flag);\n  if (finite_result != 0) {\n    errno_ptr = (int *)__errno();\n    hypotenuse = CONCAT44(error_value,error_flag);\n    *errno_ptr = finite_result;\n  }\n  return hypotenuse;\n}\n\n",
            "renaming": {
                "FUN_0800981c": "calculate_hypotenuse_0800981c",
                "param_1": "side_a",
                "param_2": "side_b",
                "param_3": "side_c",
                "param_4": "side_d",
                "iVar1": "result",
                "puVar2": "error_ptr",
                "piVar3": "errno_ptr",
                "uVar4": "hypotenuse",
                "local_50": "error_code",
                "pcStack_4c": "function_name",
                "local_48": "side_a",
                "uStack_44": "side_b",
                "local_40": "side_c",
                "uStack_3c": "side_d",
                "local_38": "error_flag",
                "uStack_34": "error_value",
                "local_30": "finite_result"
            },
            "calling": [
                "mc_arc",
                "gc_execute_line"
            ],
            "called": [
                "matherr",
                "__errno",
                "__ieee754_hypot",
                "finite"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_080098d0": {
            "entrypoint": "0x080098d0",
            "current_name": "calculate_square_root_080098d0",
            "code": "\nundefined4 calculateSquareRoot_080098d0(undefined4 input1,undefined4 input2)\n\n{\n  char cVar1;\n  undefined4 result;\n  int comparisonResult;\n  undefined4 *errnoPtr;\n  int *errnoPtrInt;\n  undefined4 errorCode;\n  undefined *errorMessage;\n  undefined4 tempInput1;\n  undefined4 tempInput2;\n  undefined4 tempInput1Again;\n  undefined4 tempInput2Again;\n  undefined8 divResult;\n  int divisionByZeroError;\n  \n  result = __ieee754_sqrt();\n  cVar1 = DAT_20000014;\n  if (((DAT_20000014 == -1) ||\n      (divisionByZeroError = __unorddf2(input1,input2,input1,input2), divisionByZeroError != 0)) ||\n     (comparisonResult = __aeabi_dcmplt(input1,input2,0,0), comparisonResult == 0)) {\n    return result;\n  }\n  errorCode = 1;\n  errorMessage = &DAT_0800be5c;\n  tempInput1 = input1;\n  tempInput2 = input2;\n  tempInput1Again = input1;\n  tempInput2Again = input2;\n  if (cVar1 == '\\0') {\n    divResult = 0;\nLAB_0800996c:\n    comparisonResult = matherr(&errorCode);\n    if (comparisonResult != 0) goto joined_r0x0800997a;\n  }\n  else {\n    divResult = __divdf3(0,0,0,0);\n    if (cVar1 != '\\x02') goto LAB_0800996c;\n  }\n  errnoPtr = (undefined4 *)__errno();\n  *errnoPtr = 0x21;\njoined_r0x0800997a:\n  if (divisionByZeroError != 0) {\n    errnoPtrInt = (int *)__errno();\n    *errnoPtrInt = divisionByZeroError;\n  }\n  return (undefined4)divResult;\n}\n\n",
            "renaming": {
                "FUN_080098d0": "calculate_square_root_080098d0",
                "param_1": "input1",
                "param_2": "input2",
                "uVar2": "result",
                "iVar3": "comparisonResult",
                "puVar4": "errnoPtr",
                "piVar5": "errnoPtrInt",
                "local_50": "errorCode",
                "local_4c": "errorMessage",
                "local_48": "tempInput1",
                "uStack_44": "tempInput2",
                "local_40": "tempInput1Again",
                "uStack_3c": "tempInput2Again",
                "local_38": "divResult",
                "local_30": "divisionByZeroError"
            },
            "calling": [
                "gc_execute_line",
                "max_allowable_speed",
                "homing_cycle",
                "plan_buffer_line"
            ],
            "called": [
                "__ieee754_sqrt",
                "matherr",
                "__errno",
                "__unorddf2",
                "__divdf3",
                "__aeabi_dcmplt"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009990": {
            "entrypoint": "0x08009990",
            "current_name": "calculate_inverse_tangent_08009990",
            "code": "\nuint calculateInverseTangent_08009990(uint num1,uint num2,uint num3,uint num4)\n\n{\n  int difference;\n  undefined4 result;\n  uint flag;\n  uint temp4;\n  uint temp5;\n  undefined8 temp6;\n  \n  temp4 = num4 & 0x7fffffff;\n  if (((temp4 | (-num3 | num3) >> 0x1f) < 0x7ff00001) &&\n     (temp5 = num2 & 0x7fffffff, (temp5 | (-num1 | num1) >> 0x1f) < 0x7ff00001)) {\n    if ((num4 + 0xc0100000 | num3) == 0) {\n      temp4 = atan();\n      return temp4;\n    }\n    flag = (int)num4 >> 0x1e & 2U | num2 >> 0x1f;\n    if ((temp5 | num1) == 0) {\n      if (flag == 2) {\n        num1 = 0x54442d18;\n      }\n      else if (flag == 3) {\n        num1 = 0x54442d18;\n      }\n    }\n    else {\n      if ((temp4 | num3) != 0) {\n        if (temp4 == 0x7ff00000) {\n          flag = flag - 1;\n          if (temp5 == 0x7ff00000) {\n            if (flag < 3) {\n              return *(uint *)(&DAT_0800be68 + flag * 8);\n            }\n            return 0x54442d18;\n          }\n          if (flag < 3) {\n            return *(uint *)(&DAT_0800be80 + flag * 8);\n          }\n          return 0;\n        }\n        if (temp5 != 0x7ff00000) {\n          difference = (int)(temp5 - temp4) >> 0x14;\n          if ((int)(temp5 - temp4) < 0x3d00000) {\n            if (((int)num4 < 0) && (difference + 0x3c < 0 != SCARRY4(difference,0x3c))) {\n              temp6 = 0;\n            }\n            else {\n              __divdf3(num1,num2,num3,num4,num4);\n              fabs();\n              temp6 = atan();\n            }\n          }\n          else {\n            temp6 = 0x3ff921fb54442d18;\n          }\n          result = (undefined4)((ulonglong)temp6 >> 0x20);\n          temp4 = (uint)temp6;\n          if (flag == 1) {\n            return temp4;\n          }\n          if (flag == 2) {\n            temp6 = __subdf3(temp4,result,0x33145c07,0x3ca1a626);\n            temp4 = __subdf3(0x54442d18,0x400921fb,(int)temp6,(int)((ulonglong)temp6 >> 0x20));\n            return temp4;\n          }\n          if (flag == 0) {\n            return temp4;\n          }\n          temp6 = __subdf3(temp4,result,0x33145c07,0x3ca1a626);\n          temp4 = __subdf3((int)temp6,(int)((ulonglong)temp6 >> 0x20),0x54442d18,0x400921fb);\n          return temp4;\n        }\n      }\n      if ((int)num2 < 0) {\n        num1 = 0x54442d18;\n      }\n      else {\n        num1 = 0x54442d18;\n      }\n    }\n  }\n  else {\n    num1 = __aeabi_dadd(num3,num4,num1,num2);\n  }\n  return num1;\n}\n\n",
            "renaming": {
                "FUN_08009990": "calculate_inverse_tangent_08009990",
                "param_1": "num1",
                "param_2": "num2",
                "param_3": "num3",
                "param_4": "num4",
                "iVar1": "difference",
                "uVar2": "result",
                "uVar3": "flag",
                "uVar4": "temp4",
                "uVar5": "temp5",
                "uVar6": "temp6"
            },
            "calling": [
                "atan2"
            ],
            "called": [
                "__aeabi_dadd",
                "atan",
                "fabs",
                "__divdf3",
                "__subdf3"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009b24": {
            "entrypoint": "0x08009b24",
            "current_name": "calculate_distance_08009b24",
            "code": "\nuint calculateDistance_08009b24(uint x1,uint y1,uint x2,uint y2)\n\n{\n  undefined4 result;\n  int check;\n  uint x;\n  int y;\n  undefined4 temp1;\n  int temp2;\n  uint temp3;\n  undefined4 temp4;\n  undefined4 temp5;\n  undefined8 temp6;\n  undefined8 temp7;\n  undefined8 temp8;\n  undefined8 temp9;\n  int constant;\n  \n  y1 = y1 & 0x7fffffff;\n  y2 = y2 & 0x7fffffff;\n  x = x1;\n  temp3 = y1;\n  if (y1 < y2) {\n    x = x2;\n    x2 = x1;\n    temp3 = y2;\n    y2 = y1;\n  }\n  if (0x3c00000 < (int)(temp3 - y2)) {\n    x = __aeabi_dadd(x,temp3,x2,y2);\n    return x;\n  }\n  if (temp3 < 0x5f300001) {\n    constant = 0;\n  }\n  else {\n    if (0x7fefffff < temp3) {\n      if ((temp3 & 0xfffff | x) != 0) {\n        x = __aeabi_dadd(x,temp3,x2,y2);\n      }\n      if ((y2 ^ 0x7ff00000 | x2) != 0) {\n        return x;\n      }\n      return x2;\n    }\n    temp3 = temp3 + 0xda800000;\n    y2 = y2 + 0xda800000;\n    constant = 600;\n  }\n  temp7 = CONCAT44(temp3,x);\n  temp6 = CONCAT44(y2,x2);\n  if ((int)y2 < 0x20b00000) {\n    if ((int)y2 < 0x100000) {\n      if ((y2 | x2) == 0) {\n        return x;\n      }\n      temp6 = __muldf3(x2,y2,0,0x7fd00000);\n      temp7 = __muldf3(x,temp3,0,0x7fd00000);\n      constant = constant + -0x3fe;\n    }\n    else {\n      temp3 = temp3 + 0x25800000;\n      temp7 = CONCAT44(temp3,x);\n      y2 = y2 + 0x25800000;\n      temp6 = CONCAT44(y2,x2);\n      constant = constant + -600;\n    }\n  }\n  temp5 = (undefined4)((ulonglong)temp7 >> 0x20);\n  temp4 = (undefined4)temp7;\n  temp2 = (int)((ulonglong)temp6 >> 0x20);\n  temp1 = (undefined4)temp6;\n  temp6 = __subdf3(temp4,temp5,temp1,temp2);\n  y = (int)((ulonglong)temp6 >> 0x20);\n  result = (undefined4)temp6;\n  check = __aeabi_dcmplt(temp1,temp2,result,y);\n  if (check == 0) {\n    temp6 = __muldf3(0,y2,0);\n    temp7 = __muldf3(result,y + -0x80000000,result,y);\n    temp8 = __aeabi_dadd(temp4,temp5,temp4,temp5);\n    temp8 = __subdf3((int)temp8,(int)((ulonglong)temp8 >> 0x20),0,temp3 + 0x100000);\n    temp8 = __muldf3((int)temp8,(int)((ulonglong)temp8 >> 0x20),temp1,temp2);\n    temp9 = __subdf3(temp1,temp2,0,y2);\n    temp9 = __muldf3((int)temp9,(int)((ulonglong)temp9 >> 0x20),0,temp3 + 0x100000);\n    temp8 = __aeabi_dadd((int)temp8,(int)((ulonglong)temp8 >> 0x20),(int)temp9,\n                          (int)((ulonglong)temp9 >> 0x20));\n    temp7 = __subdf3((int)temp7,(int)((ulonglong)temp7 >> 0x20),(int)temp8,\n                      (int)((ulonglong)temp8 >> 0x20));\n    __subdf3((int)temp6,(int)((ulonglong)temp6 >> 0x20),(int)temp7,\n             (int)((ulonglong)temp7 >> 0x20));\n    temp6 = __ieee754_sqrt();\n  }\n  else {\n    temp6 = __muldf3(0,temp3,0,temp3);\n    temp7 = __muldf3(temp1,temp2 + -0x80000000,temp1,temp2);\n    temp8 = __aeabi_dadd(temp4,temp5,0,temp3);\n    temp9 = __subdf3(temp4,temp5,0,temp3);\n    temp8 = __muldf3((int)temp8,(int)((ulonglong)temp8 >> 0x20),(int)temp9,\n                      (int)((ulonglong)temp9 >> 0x20));\n    temp7 = __subdf3((int)temp7,(int)((ulonglong)temp7 >> 0x20),(int)temp8,\n                      (int)((ulonglong)temp8 >> 0x20));\n    __subdf3((int)temp6,(int)((ulonglong)temp6 >> 0x20),(int)temp7,\n             (int)((ulonglong)temp7 >> 0x20));\n    temp6 = __ieee754_sqrt();\n  }\n  x = (uint)temp6;\n  if (constant != 0) {\n    x = __muldf3(x,(int)((ulonglong)temp6 >> 0x20),0,constant * 0x100000 + 0x3ff00000);\n  }\n  return x;\n}\n\n",
            "renaming": {
                "FUN_08009b24": "calculate_distance_08009b24",
                "param_1": "x1",
                "param_2": "y1",
                "param_3": "x2",
                "param_4": "y2",
                "uVar1": "result",
                "iVar2": "check",
                "uVar3": "x",
                "iVar4": "y",
                "uVar5": "temp1",
                "iVar6": "temp2",
                "uVar7": "temp3",
                "uVar8": "temp4",
                "uVar9": "temp5",
                "uVar10": "temp6",
                "uVar11": "temp7",
                "uVar12": "temp8",
                "uVar13": "temp9",
                "local_3c": "constant"
            },
            "calling": [
                "hypot"
            ],
            "called": [
                "__ieee754_sqrt",
                "__aeabi_dadd",
                "__subdf3",
                "__muldf3",
                "__aeabi_dcmplt"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_08009d78": {
            "entrypoint": "0x08009d78",
            "current_name": "calculate_sine_cosine_08009d78",
            "code": "\nint calculate_sine_cosine_08009d78(undefined4 input_angle,uint precision,undefined8 *result)\n\n{\n  undefined4 quotient_high;\n  undefined4 quotient_low;\n  undefined4 diff_high;\n  undefined4 diff_low;\n  undefined4 scale_high;\n  undefined4 scale_low;\n  undefined4 remainder_high;\n  uint remainder_low;\n  int angle_type;\n  undefined8 temp1_high;\n  undefined8 temp1_low;\n  undefined8 temp2_high;\n  undefined4 quotient_high_temp;\n  undefined4 quotient_low_temp;\n  undefined8 scale_high_temp;\n  undefined8 scale_low_temp;\n  undefined8 remainder_high_temp;\n  \n  remainder_low = precision & 0x7fffffff;\n  if (remainder_low < 0x3fe921fc) {\n    *(undefined4 *)result = input_angle;\n    *(uint *)((int)result + 4) = precision;\n    *(undefined4 *)(result + 1) = 0;\n    *(undefined4 *)((int)result + 0xc) = 0;\n    return 0;\n  }\n  if (remainder_low < 0x4002d97c) {\n    if ((int)precision < 1) {\n      temp1_high = __aeabi_dadd(input_angle,precision,0x54400000,0x3ff921fb);\n      diff_high = (undefined4)((ulonglong)temp1_high >> 0x20);\n      quotient_high = (undefined4)temp1_high;\n      if (remainder_low != 0x3ff921fb) {\n        temp1_high = __aeabi_dadd(quotient_high,diff_high,0x1a626331,0x3dd0b461);\n        *result = temp1_high;\n        temp1_high = __subdf3(quotient_high,diff_high);\n        temp1_high = __aeabi_dadd((int)temp1_high,(int)((ulonglong)temp1_high >> 0x20),0x1a626331,0x3dd0b461);\n        result[1] = temp1_high;\n        return -1;\n      }\n      temp1_high = __aeabi_dadd(quotient_high,diff_high,0x1a600000,0x3dd0b461);\n      quotient_high = (undefined4)((ulonglong)temp1_high >> 0x20);\n      temp1_low = __aeabi_dadd((int)temp1_high,quotient_high,0x2e037073,0x3ba3198a);\n      *result = temp1_low;\n      temp1_high = __subdf3((int)temp1_high,quotient_high);\n      temp1_high = __aeabi_dadd((int)temp1_high,(int)((ulonglong)temp1_high >> 0x20),0x2e037073,0x3ba3198a);\n      result[1] = temp1_high;\n      return -1;\n    }\n    temp1_high = __subdf3();\n    diff_high = (undefined4)((ulonglong)temp1_high >> 0x20);\n    quotient_high = (undefined4)temp1_high;\n    if (remainder_low != 0x3ff921fb) {\n      temp1_high = __subdf3(quotient_high,diff_high,0x1a626331,0x3dd0b461);\n      *result = temp1_high;\n      temp1_high = __subdf3(quotient_high,diff_high);\n      temp1_high = __subdf3((int)temp1_high,(int)((ulonglong)temp1_high >> 0x20),0x1a626331,0x3dd0b461);\n      result[1] = temp1_high;\n      return 1;\n    }\n    temp1_high = __subdf3(quotient_high,diff_high,0x1a600000,0x3dd0b461);\n    quotient_high = (undefined4)((ulonglong)temp1_high >> 0x20);\n    temp1_low = __subdf3((int)temp1_high,quotient_high,0x2e037073,0x3ba3198a);\n    *result = temp1_low;\n    temp1_high = __subdf3((int)temp1_high,quotient_high);\n    temp1_high = __subdf3((int)temp1_high,(int)((ulonglong)temp1_high >> 0x20),0x2e037073,0x3ba3198a);\n    result[1] = temp1_high;\n    return 1;\n  }\n  if (0x413921fb < remainder_low) {\n    if (0x7fefffff < remainder_low) {\n      temp1_high = __subdf3(input_angle,precision,input_angle,precision);\n      result[1] = temp1_high;\n      *result = temp1_high;\n      return 0;\n    }\n    angle_type = ((int)remainder_low >> 0x14) + -0x416;\n    __aeabi_d2iz();\n    scale_high_temp = __aeabi_i2d();\n    temp1_high = __subdf3(input_angle,remainder_low + angle_type * -0x100000,(int)scale_high_temp,\n                      (int)((ulonglong)scale_high_temp >> 0x20));\n    temp1_high = __muldf3((int)temp1_high,(int)((ulonglong)temp1_high >> 0x20),0,0x41700000);\n    __aeabi_d2iz();\n    scale_low_temp = __aeabi_i2d();\n    temp1_high = __subdf3((int)temp1_high,(int)((ulonglong)temp1_high >> 0x20));\n    remainder_high_temp = __muldf3((int)temp1_high,(int)((ulonglong)temp1_high >> 0x20),0,0x41700000);\n    __aeabi_dcmpeq((int)remainder_high_temp,(int)((ulonglong)remainder_high_temp >> 0x20),0,0);\n    angle_type = __kernel_rem_pio2(&scale_high_temp,result,angle_type);\n    if (-1 < (int)precision) {\n      return angle_type;\n    }\n    *(int *)((int)result + 4) = *(int *)((int)result + 4) + -0x80000000;\n    *(int *)((int)result + 0xc) = *(int *)((int)result + 0xc) + -0x80000000;\n    return -angle_type;\n  }\n  temp1_high = fabs();\n  diff_high = (undefined4)((ulonglong)temp1_high >> 0x20);\n  temp1_low = __muldf3((int)temp1_high,diff_high,0x6dc9c883,0x3fe45f30);\n  __aeabi_dadd((int)temp1_low,(int)((ulonglong)temp1_low >> 0x20),0,0x3fe00000);\n  angle_type = __aeabi_d2iz();\n  temp1_low = __aeabi_i2d();\n  diff_low = (undefined4)((ulonglong)temp1_low >> 0x20);\n  quotient_high = (undefined4)temp1_low;\n  temp1_low = __muldf3(quotient_high,diff_low,0x54400000,0x3ff921fb);\n  temp1_high = __subdf3((int)temp1_high,diff_high,(int)temp1_low,(int)((ulonglong)temp1_low >> 0x20));\n  scale_high = (undefined4)((ulonglong)temp1_high >> 0x20);\n  diff_high = (undefined4)temp1_high;\n  temp1_low = __muldf3(quotient_high,diff_low,0x1a626331,0x3dd0b461);\n  if ((0x1f < angle_type) || (*(uint *)(&DAT_0800be98 + (angle_type + -1) * 4) == remainder_low)) {\n    temp2_high = __subdf3(diff_high,scale_high,(int)temp1_low,(int)((ulonglong)temp1_low >> 0x20));\n    if ((int)((remainder_low >> 0x14) - ((uint)((int)((ulonglong)temp2_high >> 0x20) << 1) >> 0x15)) < 0x11)\n    goto LAB_0800a0ce;\n    temp1_low = __muldf3(quotient_high,diff_low,0x1a600000,0x3dd0b461);\n    scale_low = (undefined4)((ulonglong)temp1_low >> 0x20);\n    temp1_high = __subdf3(diff_high,scale_high,(int)temp1_low,scale_low);\n    remainder_high = (undefined4)((ulonglong)temp1_high >> 0x20);\n    quotient_low = (undefined4)temp1_high;\n    temp2_high = __subdf3(diff_high,scale_high,quotient_low,remainder_high);\n    temp1_low = __subdf3((int)temp2_high,(int)((ulonglong)temp2_high >> 0x20),(int)temp1_low,scale_low);\n    temp2_high = __muldf3(quotient_high,diff_low,0x2e037073,0x3ba3198a);\n    temp1_low = __subdf3((int)temp2_high,(int)((ulonglong)temp2_high >> 0x20),(int)temp1_low,\n                      (int)((ulonglong)temp1_low >> 0x20));\n    temp2_high = __subdf3(quotient_low,remainder_high,(int)temp1_low,(int)((ulonglong)temp1_low >> 0x20));\n    if ((int)(((int)remainder_low >> 0x14) - ((uint)((int)((ulonglong)temp2_high >> 0x20) << 1) >> 0x15)) < 0x32\n       ) goto LAB_0800a0ce;\n    temp1_low = __muldf3(quotient_high,diff_low,0x2e000000,0x3ba3198a);\n    diff_high = (undefined4)((ulonglong)temp1_low >> 0x20);\n    temp1_high = __subdf3(quotient_low,remainder_high,(int)temp1_low,diff_high);\n    temp2_high = __subdf3(quotient_low,remainder_high);\n    temp1_low = __subdf3((int)temp2_high,(int)((ulonglong)temp2_high >> 0x20),(int)temp1_low,diff_high);\n    temp2_high = __muldf3(quotient_high,diff_low,0x252049c1,0x397b839a);\n    temp1_low = __subdf3((int)temp2_high,(int)((ulonglong)temp2_high >> 0x20),(int)temp1_low,\n                      (int)((ulonglong)temp1_low >> 0x20));\n  }\n  temp2_high = __subdf3((int)temp1_high,(int)((ulonglong)temp1_high >> 0x20),(int)temp1_low,\n                    (int)((ulonglong)temp1_low >> 0x20));\nLAB_0800a0ce:\n  quotient_low_temp = (undefined4)((ulonglong)temp1_high >> 0x20);\n  quotient_high_temp = (undefined4)temp1_high;\n  *result = temp2_high;\n  temp1_high = __subdf3(quotient_high_temp,quotient_low_temp);\n  temp1_high = __subdf3((int)temp1_high,(int)((ulonglong)temp1_high >> 0x20),(int)temp1_low,\n                    (int)((ulonglong)temp1_low >> 0x20));\n  result[1] = temp1_high;\n  if ((int)precision < 0) {\n    *(int *)result = (int)temp2_high;\n    *(int *)((int)result + 4) = (int)((ulonglong)temp2_high >> 0x20) + -0x80000000;\n    *(int *)(result + 1) = (int)temp1_high;\n    *(int *)((int)result + 0xc) = (int)((ulonglong)temp1_high >> 0x20) + -0x80000000;\n    angle_type = -angle_type;\n  }\n  return angle_type;\n}\n\n",
            "renaming": {
                "FUN_08009d78": "calculate_sine_cosine_08009d78",
                "param_1": "input_angle",
                "param_2": "precision",
                "param_3": "result",
                "uVar1": "quotient_high",
                "uVar2": "quotient_low",
                "uVar3": "diff_high",
                "uVar4": "diff_low",
                "uVar5": "scale_high",
                "uVar6": "scale_low",
                "uVar7": "remainder_high",
                "uVar8": "remainder_low",
                "iVar9": "angle_type",
                "uVar10": "temp1_high",
                "uVar11": "temp1_low",
                "uVar12": "temp2_high",
                "local_50": "quotient_high_temp",
                "uStack_4c": "quotient_low_temp",
                "local_40": "scale_high_temp",
                "local_38": "scale_low_temp",
                "local_30": "remainder_high_temp"
            },
            "calling": [
                "sin",
                "cos"
            ],
            "called": [
                "__aeabi_dadd",
                "__aeabi_d2iz",
                "fabs",
                "__aeabi_i2d",
                "__aeabi_dcmpeq",
                "__kernel_rem_pio2",
                "__subdf3",
                "__muldf3"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a1bc": {
            "entrypoint": "0x0800a1bc",
            "current_name": "multiply_and_add_0800a1bc",
            "code": "\nuint multiplyAndAdd_0800a1bc(uint x,uint y)\n\n{\n  uint divisorQuotient;\n  int counter;\n  uint result;\n  undefined4 divisorRemainder;\n  uint shiftCount;\n  uint shiftedResult;\n  uint dividendRemainder;\n  uint dividendQuotient;\n  uint dividend;\n  int shiftOffset;\n  uint tempResult;\n  uint shiftedDivisor;\n  undefined8 multiplyResult;\n  \n  if ((~y & 0x7ff00000) == 0) {\n    multiplyResult = __muldf3(x,y,x,y);\n    dividendRemainder = __aeabi_dadd((int)multiplyResult,(int)((ulonglong)multiplyResult >> 0x20),x,y);\n    return dividendRemainder;\n  }\n  if ((int)y < 1) {\n    if ((y & 0x7fffffff | x) == 0) {\n      return x;\n    }\n    if (y != 0) {\n      multiplyResult = __subdf3(x,y,x);\n      divisorRemainder = (undefined4)((ulonglong)multiplyResult >> 0x20);\n      dividendRemainder = __divdf3((int)multiplyResult,divisorRemainder,(int)multiplyResult,divisorRemainder);\n      return dividendRemainder;\n    }\n    do {\n      dividend = x;\n      dividendRemainder = dividend >> 0xb;\n      y = y - 0x15;\n      x = dividend << 0x15;\n    } while (dividendRemainder == 0);\n    divisorQuotient = y;\n    if (-1 < (int)dividend) goto LAB_0800a290;\n    shiftedDivisor = 0x20;\n    shiftCount = 0xffffffff;\n    dividend = x;\n  }\n  else {\n    divisorQuotient = (int)y >> 0x14;\n    dividendRemainder = y;\n    dividend = x;\n    if (divisorQuotient != 0) goto LAB_0800a1da;\nLAB_0800a290:\n    dividend = 0;\n    shiftedDivisor = dividendRemainder;\n    do {\n      shiftCount = dividend;\n      dividendRemainder = shiftedDivisor << 1;\n      shiftOffset = shiftedDivisor << 0xc;\n      dividend = shiftCount + 1;\n      shiftedDivisor = dividendRemainder;\n    } while (-1 < shiftOffset);\n    shiftedDivisor = 0x20 - dividend;\n    y = divisorQuotient;\n    dividend = x << (dividend & 0xff);\n  }\n  dividendRemainder = x >> (shiftedDivisor & 0xff) | dividendRemainder;\n  divisorQuotient = y - shiftCount;\nLAB_0800a1da:\n  dividendRemainder = dividendRemainder & 0xfffff | 0x100000;\n  if (-1 < (int)(divisorQuotient << 0x1f)) {\n    dividendRemainder = dividendRemainder * 2 - ((int)dividend >> 0x1f);\n    dividend = dividend << 1;\n  }\n  shiftedDivisor = 0;\n  dividendRemainder = dividendRemainder * 2 - ((int)dividend >> 0x1f);\n  dividend = dividend << 1;\n  divisorQuotient = 0;\n  shiftOffset = 0x16;\n  shiftCount = 0x200000;\n  do {\n    counter = divisorQuotient + shiftCount;\n    if (counter <= (int)dividendRemainder) {\n      dividendRemainder = dividendRemainder - counter;\n      divisorQuotient = counter + shiftCount;\n      shiftedDivisor = shiftedDivisor + shiftCount;\n    }\n    shiftOffset = shiftOffset + -1;\n    dividendRemainder = dividendRemainder * 2 - ((int)dividend >> 0x1f);\n    shiftCount = shiftCount >> 1;\n    dividend = dividend << 1;\n  } while (shiftOffset != 0);\n  counter = 0x20;\n  shiftedResult = 0x80000000;\n  shiftOffset = 0;\n  shiftCount = 0;\n  do {\n    result = shiftedResult + shiftOffset;\n    tempResult = divisorQuotient;\n    if ((int)divisorQuotient < (int)dividendRemainder) {\n      if ((int)result < 0) {\nLAB_0800a26a:\n        if (-1 < (int)(result + shiftedResult)) {\n          tempResult = divisorQuotient + 1;\n        }\n      }\n      dividendQuotient = dividendRemainder - divisorQuotient;\n      divisorQuotient = tempResult;\n      if (dividend < result) {\n        dividendQuotient = dividendQuotient - 1;\n      }\nLAB_0800a262:\n      shiftOffset = result + shiftedResult;\n      dividend = dividend - result;\n      shiftCount = shiftCount + shiftedResult;\n      dividendRemainder = dividendQuotient;\n    }\n    else if ((dividendRemainder == divisorQuotient) && (result <= dividend)) {\n      if ((int)result < 0) goto LAB_0800a26a;\n      dividendQuotient = 0;\n      divisorQuotient = dividendRemainder;\n      goto LAB_0800a262;\n    }\n    counter = counter + -1;\n    shiftedResult = shiftedResult >> 1;\n    dividendRemainder = dividendRemainder * 2 - ((int)dividend >> 0x1f);\n    dividend = dividend << 1;\n    if (counter == 0) {\n      if ((dividendRemainder | dividend) == 0) {\n        shiftCount = shiftCount >> 1;\n      }\n      else if (shiftCount == 0xffffffff) {\n        shiftedDivisor = shiftedDivisor + 1;\n        shiftCount = 0;\n      }\n      else {\n        shiftCount = shiftCount + 1 >> 1;\n      }\n      if ((shiftedDivisor & 1) != 0) {\n        shiftCount = shiftCount | 0x80000000;\n      }\n      return shiftCount;\n    }\n  } while( true );\n}\n\n",
            "renaming": {
                "FUN_0800a1bc": "multiply_and_add_0800a1bc",
                "param_1": "x",
                "param_2": "y",
                "uVar1": "divisorQuotient",
                "iVar2": "counter",
                "uVar3": "result",
                "uVar4": "divisorRemainder",
                "uVar5": "shiftCount",
                "uVar6": "shiftedResult",
                "uVar7": "dividendRemainder",
                "uVar8": "dividendQuotient",
                "uVar9": "dividend",
                "iVar10": "shiftOffset",
                "uVar11": "tempResult",
                "uVar12": "shiftedDivisor",
                "uVar13": "multiplyResult"
            },
            "calling": [
                "sqrt",
                "__ieee754_hypot"
            ],
            "called": [
                "__aeabi_dadd",
                "__divdf3",
                "__subdf3",
                "__muldf3"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a348": {
            "entrypoint": "0x0800a348",
            "current_name": "calculate_polynomial_0800a348",
            "code": "\nundefined4 calculate_polynomial_0800a348(undefined4 coefficient,uint exponent,undefined4 coefficient2,undefined4 exponent2)\n\n{\n  int isConversionSuccessful;\n  undefined4 coefficientResult;\n  undefined4 exponentResult;\n  uint positiveExponent;\n  undefined8 tempResult;\n  undefined8 finalResult;\n  undefined8 partialResult;\n  undefined4 result1;\n  undefined4 result1Exponent;\n  undefined4 result2;\n  undefined4 result2Exponent;\n  \n  positiveExponent = exponent & 0x7fffffff;\n  if (positiveExponent < 0x3e400000) {\n    isConversionSuccessful = __aeabi_d2iz();\n    if (isConversionSuccessful == 0) {\n      return 0;\n    }\n    tempResult = __muldf3(coefficient,exponent,coefficient,exponent);\n    exponentResult = (undefined4)((ulonglong)tempResult >> 0x20);\n    coefficientResult = (undefined4)tempResult;\n    finalResult = __muldf3(coefficientResult,exponentResult,0xbe8838d4,0xbda8fae9);\n    finalResult = __aeabi_dadd((int)finalResult,(int)((ulonglong)finalResult >> 0x20),0xbdb4b1c4,0x3e21ee9e);\n    finalResult = __muldf3((int)finalResult,(int)((ulonglong)finalResult >> 0x20),coefficientResult,exponentResult);\n    finalResult = __subdf3((int)finalResult,(int)((ulonglong)finalResult >> 0x20),0x809c52ad,0x3e927e4f);\n    finalResult = __muldf3((int)finalResult,(int)((ulonglong)finalResult >> 0x20),coefficientResult,exponentResult);\n    finalResult = __aeabi_dadd((int)finalResult,(int)((ulonglong)finalResult >> 0x20),0x19cb1590,0x3efa01a0);\n    finalResult = __muldf3((int)finalResult,(int)((ulonglong)finalResult >> 0x20),coefficientResult,exponentResult);\n    finalResult = __subdf3((int)finalResult,(int)((ulonglong)finalResult >> 0x20),0x16c15177,0x3f56c16c);\n    finalResult = __muldf3((int)finalResult,(int)((ulonglong)finalResult >> 0x20),coefficientResult,exponentResult);\n    finalResult = __aeabi_dadd((int)finalResult,(int)((ulonglong)finalResult >> 0x20),0x5555554c,0x3fa55555);\n    finalResult = __muldf3((int)finalResult,(int)((ulonglong)finalResult >> 0x20),coefficientResult,exponentResult);\n  }\n  else {\n    tempResult = __muldf3(coefficient,exponent,coefficient,exponent);\n    exponentResult = (undefined4)((ulonglong)tempResult >> 0x20);\n    coefficientResult = (undefined4)tempResult;\n    finalResult = __muldf3(coefficientResult,exponentResult,0xbe8838d4,0xbda8fae9);\n    finalResult = __aeabi_dadd((int)finalResult,(int)((ulonglong)finalResult >> 0x20),0xbdb4b1c4,0x3e21ee9e);\n    finalResult = __muldf3((int)finalResult,(int)((ulonglong)finalResult >> 0x20),coefficientResult,exponentResult);\n    finalResult = __subdf3((int)finalResult,(int)((ulonglong)finalResult >> 0x20),0x809c52ad,0x3e927e4f);\n    finalResult = __muldf3((int)finalResult,(int)((ulonglong)finalResult >> 0x20),coefficientResult,exponentResult);\n    finalResult = __aeabi_dadd((int)finalResult,(int)((ulonglong)finalResult >> 0x20),0x19cb1590,0x3efa01a0);\n    finalResult = __muldf3((int)finalResult,(int)((ulonglong)finalResult >> 0x20),coefficientResult,exponentResult);\n    finalResult = __subdf3((int)finalResult,(int)((ulonglong)finalResult >> 0x20),0x16c15177,0x3f56c16c);\n    finalResult = __muldf3((int)finalResult,(int)((ulonglong)finalResult >> 0x20),coefficientResult,exponentResult);\n    finalResult = __aeabi_dadd((int)finalResult,(int)((ulonglong)finalResult >> 0x20),0x5555554c,0x3fa55555);\n    finalResult = __muldf3((int)finalResult,(int)((ulonglong)finalResult >> 0x20),coefficientResult,exponentResult);\n    if (0x3fd33332 < positiveExponent) {\n      if (positiveExponent < 0x3fe90001) {\n        isConversionSuccessful = positiveExponent - 0x200000;\n        tempResult = __subdf3(0,0x3ff00000,0,isConversionSuccessful);\n      }\n      else {\n        isConversionSuccessful = 0x3fd20000;\n        tempResult = 0x3fe7000000000000;\n      }\n      result2Exponent = (undefined4)((ulonglong)tempResult >> 0x20);\n      result2 = (undefined4)tempResult;\n      tempResult = __muldf3(coefficientResult,exponentResult,0,0x3fe00000);\n      tempResult = __subdf3((int)tempResult,(int)((ulonglong)tempResult >> 0x20),0,isConversionSuccessful);\n      finalResult = __muldf3(coefficientResult,exponentResult,(int)finalResult,(int)((ulonglong)finalResult >> 0x20));\n      partialResult = __muldf3(coefficient,exponent,coefficient2,exponent2);\n      finalResult = __subdf3((int)finalResult,(int)((ulonglong)finalResult >> 0x20),(int)partialResult,\n                       (int)((ulonglong)partialResult >> 0x20));\n      tempResult = __subdf3((int)tempResult,(int)((ulonglong)tempResult >> 0x20),(int)finalResult,\n                       (int)((ulonglong)finalResult >> 0x20));\n      coefficientResult = __subdf3(result2,result2Exponent,(int)tempResult,(int)((ulonglong)tempResult >> 0x20));\n      return coefficientResult;\n    }\n  }\n  result1Exponent = (undefined4)((ulonglong)finalResult >> 0x20);\n  result1 = (undefined4)finalResult;\n  coefficientResult = (undefined4)((ulonglong)tempResult >> 0x20);\n  finalResult = __muldf3((int)tempResult,coefficientResult,0,0x3fe00000);\n  tempResult = __muldf3((int)tempResult,coefficientResult,result1,result1Exponent);\n  partialResult = __muldf3(coefficient,exponent,coefficient2,exponent2);\n  tempResult = __subdf3((int)tempResult,(int)((ulonglong)tempResult >> 0x20),(int)partialResult,\n                   (int)((ulonglong)partialResult >> 0x20));\n  tempResult = __subdf3((int)finalResult,(int)((ulonglong)finalResult >> 0x20),(int)tempResult,\n                   (int)((ulonglong)tempResult >> 0x20));\n  coefficientResult = __subdf3(0,0x3ff00000,(int)tempResult,(int)((ulonglong)tempResult >> 0x20));\n  return coefficientResult;\n}\n\n",
            "renaming": {
                "FUN_0800a348": "calculate_polynomial_0800a348",
                "param_1": "coefficient",
                "param_2": "exponent",
                "param_3": "coefficient2",
                "param_4": "exponent2",
                "iVar1": "isConversionSuccessful",
                "uVar2": "coefficientResult",
                "uVar3": "exponentResult",
                "uVar4": "positiveExponent",
                "uVar5": "tempResult",
                "uVar6": "finalResult",
                "uVar7": "partialResult",
                "local_30": "result1",
                "uStack_2c": "result1Exponent",
                "local_28": "result2",
                "uStack_24": "result2Exponent"
            },
            "calling": [
                "sin",
                "cos"
            ],
            "called": [
                "__aeabi_dadd",
                "__aeabi_d2iz",
                "__subdf3",
                "__muldf3"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800a5a0": {
            "entrypoint": "0x0800a5a0",
            "current_name": "calculate_result_0800a5a0",
            "code": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nuint calculateResult_0800a5a0(int inputValue,undefined8 *resultArray,int arraySize,int startIndex,int operationType,int operationArray)\n\n{\n  undefined4 *pointerVar1;\n  uint tempVar2;\n  uint tempVar3;\n  int tempVar4;\n  uint *pointerVar5;\n  undefined4 tempVar6;\n  uint **doublePointerVar7;\n  undefined4 tempVar8;\n  int tempVar9;\n  undefined4 *pointerVar10;\n  undefined4 tempVar11;\n  uint tempVar12;\n  uint *pointerVar13;\n  int tempVar14;\n  int arrayIndex;\n  undefined8 *doublePointerVar16;\n  int startIndex2;\n  undefined4 *pointerVar18;\n  undefined8 *doublePointerVar19;\n  undefined4 tempVar20;\n  int loopIndex2;\n  undefined8 *pointerVar22;\n  undefined4 *doublePointerVar23;\n  bool booleanVar24;\n  undefined8 tempVar25;\n  undefined8 tempVar26;\n  undefined8 tempVar27;\n  undefined8 *localArray1;\n  int localIndex1;\n  int localIndex2;\n  int localIndex3;\n  uint *local_260 [2];\n  uint localArray2 [20];\n  undefined8 tempStackVar_208;\n  undefined8 localArray3;\n  int localArray4 [38];\n  undefined8 tempStackVar_c8;\n  \n  arrayIndex = *(int *)(&DAT_0800c060 + operationType * 4);\n  tempVar9 = startIndex + -1;\n  local_260[1] = (uint *)resultArray;\n  if (arraySize + 0x14 < 0 == SCARRY4(arraySize,0x14)) {\n    localIndex3 = (arraySize + -3) / 0x18;\n    localIndex2 = (localIndex3 + 1) * -0x18;\n  }\n  else {\n    localIndex2 = -0x18;\n    localIndex3 = 0;\n  }\n  localIndex2 = arraySize + localIndex2;\n  startIndex2 = localIndex3 - tempVar9;\n  if (-1 < arrayIndex + tempVar9) {\n    loopIndex2 = arrayIndex + tempVar9 + 1 + startIndex2;\n    doublePointerVar16 = &tempStackVar_208;\n    do {\n      while (startIndex2 < 0) {\n        startIndex2 = startIndex2 + 1;\n        *(undefined4 *)doublePointerVar16 = 0;\n        *(undefined4 *)((int)doublePointerVar16 + 4) = 0;\n        doublePointerVar16 = doublePointerVar16 + 1;\n        if (startIndex2 == loopIndex2) goto LAB_0800a626;\n      }\n      tempVar26 = __aeabi_i2d(*(undefined4 *)(operationArray + startIndex2 * 4));\n      startIndex2 = startIndex2 + 1;\n      *doublePointerVar16 = tempVar26;\n      doublePointerVar16 = doublePointerVar16 + 1;\n    } while (startIndex2 != loopIndex2);\n  }\nLAB_0800a626:\n  pointerVar10 = (undefined4 *)(inputValue + -8);\n  if (-1 < arrayIndex) {\n    pointerVar22 = &tempStackVar_208 + startIndex;\n    startIndex2 = tempVar9;\n    doublePointerVar16 = &tempStackVar_c8;\n    do {\n      if (tempVar9 < 0) {\n        tempVar26 = 0;\n      }\n      else {\n        tempVar26 = 0;\n        doublePointerVar23 = pointerVar10;\n        doublePointerVar19 = pointerVar22;\n        do {\n          pointerVar18 = doublePointerVar23 + 2;\n          tempVar25 = __muldf3(*pointerVar18,doublePointerVar23[3],*(undefined4 *)(doublePointerVar19 + -1),\n                            *(undefined4 *)((int)doublePointerVar19 + -4));\n          tempVar26 = __aeabi_dadd((int)tempVar26,(int)((ulonglong)tempVar26 >> 0x20),(int)tempVar25,\n                                (int)((ulonglong)tempVar25 >> 0x20));\n          doublePointerVar23 = pointerVar18;\n          doublePointerVar19 = doublePointerVar19 + -1;\n        } while (pointerVar18 != pointerVar10 + startIndex * 2);\n      }\n      startIndex2 = startIndex2 + 1;\n      *doublePointerVar16 = tempVar26;\n      pointerVar22 = pointerVar22 + 1;\n      doublePointerVar16 = doublePointerVar16 + 1;\n    } while (startIndex2 != arrayIndex + startIndex);\n  }\n  local_260[0] = localArray2 + arrayIndex + -1;\n  startIndex2 = arrayIndex;\n  do {\n    tempVar26 = CONCAT44(*(undefined4 *)((int)&tempStackVar_c8 + startIndex2 * 8 + 4),\n                      *(undefined4 *)(&tempStackVar_c8 + startIndex2));\n    if (0 < startIndex2) {\n      doublePointerVar16 = &tempStackVar_c8 + startIndex2;\n      pointerVar5 = localArray2;\n      do {\n        tempVar6 = (undefined4)((ulonglong)tempVar26 >> 0x20);\n        __muldf3((int)tempVar26,tempVar6,0,0x3e700000);\n        __aeabi_d2iz();\n        tempVar25 = __aeabi_i2d();\n        tempVar8 = (undefined4)((ulonglong)tempVar25 >> 0x20);\n        tempVar27 = __muldf3((int)tempVar25,tempVar8,0,0x41700000);\n        __subdf3((int)tempVar26,tempVar6,(int)tempVar27,(int)((ulonglong)tempVar27 >> 0x20));\n        tempVar2 = __aeabi_d2iz();\n        pointerVar22 = doublePointerVar16 + -1;\n        tempVar6 = *(undefined4 *)pointerVar22;\n        tempVar11 = *(undefined4 *)((int)doublePointerVar16 + -4);\n        *pointerVar5 = tempVar2;\n        tempVar26 = __aeabi_dadd((int)tempVar25,tempVar8,tempVar6,tempVar11);\n        doublePointerVar16 = pointerVar22;\n        pointerVar5 = pointerVar5 + 1;\n      } while (pointerVar22 != &tempStackVar_c8);\n    }\n    tempVar26 = scalbn((int)tempVar26,(int)((ulonglong)tempVar26 >> 0x20),localIndex2);\n    tempVar8 = (undefined4)((ulonglong)tempVar26 >> 0x20);\n    __muldf3((int)tempVar26,tempVar8,0,0x3fc00000);\n    tempVar25 = floor();\n    tempVar25 = __muldf3((int)tempVar25,(int)((ulonglong)tempVar25 >> 0x20),0,0x40200000);\n    tempVar26 = __subdf3((int)tempVar26,tempVar8,(int)tempVar25,(int)((ulonglong)tempVar25 >> 0x20));\n    tempVar2 = __aeabi_d2iz();\n    tempVar25 = __aeabi_i2d();\n    tempVar26 = __subdf3((int)tempVar26,(int)((ulonglong)tempVar26 >> 0x20),(int)tempVar25,\n                      (int)((ulonglong)tempVar25 >> 0x20));\n    tempVar6 = (undefined4)((ulonglong)tempVar26 >> 0x20);\n    tempVar8 = (undefined4)tempVar26;\n    if (localIndex2 < 1) {\n      if (localIndex2 == 0) {\n        loopIndex2 = (int)localArray2[startIndex2 + -1] >> 0x17;\n        goto joined_r0x0800a8b8;\n      }\n      loopIndex2 = __aeabi_dcmpge(tempVar8,tempVar6,0,0x3fe00000);\n      if (loopIndex2 != 0) {\n        tempVar2 = tempVar2 + 1;\n        if (startIndex2 < 1) {\n          tempVar26 = __subdf3(0,0x3ff00000,tempVar8,tempVar6);\n          loopIndex2 = 2;\n          goto LAB_0800a7a4;\n        }\n        loopIndex2 = 2;\n        goto LAB_0800a8c8;\n      }\n    }\n    else {\n      tempVar4 = (int)localArray2[startIndex2 + -1] >> (0x18U - localIndex2 & 0xff);\n      tempVar12 = localArray2[startIndex2 + -1] - (tempVar4 << (0x18U - localIndex2 & 0xff));\n      loopIndex2 = (int)tempVar12 >> (0x17U - localIndex2 & 0xff);\n      localArray2[startIndex2 + -1] = tempVar12;\n      tempVar2 = tempVar2 + tempVar4;\njoined_r0x0800a8b8:\n      if (0 < loopIndex2) {\n        tempVar2 = tempVar2 + 1;\n        if (startIndex2 < 1) {\n          booleanVar24 = false;\n        }\n        else {\nLAB_0800a8c8:\n          if (localArray2[0] == 0) {\n            booleanVar24 = false;\n            if (startIndex2 != 1) {\n              pointerVar5 = localArray2;\n              tempVar4 = 1;\n              do {\n                pointerVar5 = pointerVar5 + 1;\n                if (*pointerVar5 != 0) {\n                  tempVar14 = tempVar4 + 1;\n                  tempVar12 = *pointerVar5;\n                  goto LAB_0800a8e2;\n                }\n                tempVar4 = tempVar4 + 1;\n              } while (tempVar4 != startIndex2);\n              booleanVar24 = false;\n            }\n          }\n          else {\n            tempVar14 = 1;\n            tempVar4 = 0;\n            tempVar12 = localArray2[0];\nLAB_0800a8e2:\n            localArray2[tempVar4] = 0x1000000 - tempVar12;\n            if (tempVar14 < startIndex2) {\n              tempVar12 = localArray2[tempVar14];\n              pointerVar5 = localArray2 + tempVar14;\n              while( true ) {\n                pointerVar13 = pointerVar5 + 1;\n                *pointerVar5 = 0xffffff - tempVar12;\n                if (pointerVar13 == localArray2 + startIndex2) break;\n                tempVar12 = *pointerVar13;\n                pointerVar5 = pointerVar13;\n              }\n            }\n            booleanVar24 = true;\n          }\n        }\n        if (0 < localIndex2) {\n          if (localIndex2 == 1) {\n            localArray2[startIndex2 + -1] = localArray2[startIndex2 + -1] & 0x7fffff;\n          }\n          else if (localIndex2 == 2) {\n            localArray2[startIndex2 + -1] = localArray2[startIndex2 + -1] & 0x3fffff;\n          }\n        }\n        if (loopIndex2 == 2) {\n          tempVar26 = __subdf3(0,0x3ff00000,tempVar8,tempVar6);\n          if (booleanVar24) {\n            tempVar25 = scalbn(0,0x3ff00000,localIndex2);\n            tempVar26 = __subdf3((int)tempVar26,(int)((ulonglong)tempVar26 >> 0x20),(int)tempVar25,\n                              (int)((ulonglong)tempVar25 >> 0x20));\n          }\n        }\n      }\n    }\nLAB_0800a7a4:\n    tempVar8 = (undefined4)((ulonglong)tempVar26 >> 0x20);\n    tempVar4 = __aeabi_dcmpeq((int)tempVar26,tempVar8,0,0);\n    if (tempVar4 == 0) {\n      tempVar26 = scalbn((int)tempVar26,tempVar8,-localIndex2);\n      tempVar6 = (undefined4)((ulonglong)tempVar26 >> 0x20);\n      tempVar8 = (undefined4)tempVar26;\n      tempVar9 = __aeabi_dcmpge(tempVar8,tempVar6,0,0x41700000);\n      if (tempVar9 == 0) {\n        tempVar12 = __aeabi_d2iz(tempVar8,tempVar6);\n        localArray2[startIndex2] = tempVar12;\n        tempVar4 = startIndex2;\n      }\n      else {\n        __muldf3(tempVar8,tempVar6,0,0x3e700000);\n        tempVar12 = __aeabi_d2iz();\n        tempVar26 = __aeabi_i2d();\n        tempVar26 = __muldf3((int)tempVar26,(int)((ulonglong)tempVar26 >> 0x20),0,0x41700000);\n        __subdf3(tempVar8,tempVar6,(int)tempVar26,(int)((ulonglong)tempVar26 >> 0x20));\n        tempVar3 = __aeabi_d2iz();\n        localIndex2 = localIndex2 + 0x18;\n        localArray2[startIndex2] = tempVar3;\n        localArray2[startIndex2 + 1] = tempVar12;\n        tempVar4 = startIndex2 + 1;\n      }\n      goto LAB_0800a9f6;\n    }\n    tempVar4 = startIndex2 + -1;\n    if (arrayIndex <= tempVar4) {\n      tempVar12 = 0;\n      pointerVar5 = localArray2 + startIndex2 + 0x3fffffff;\n      do {\n        pointerVar13 = pointerVar5 + -1;\n        tempVar12 = tempVar12 | *pointerVar5;\n        pointerVar5 = pointerVar13;\n      } while (pointerVar13 != local_260[0]);\n      if (tempVar12 != 0) break;\n    }\n    if (localArray2[arrayIndex + -1] == 0) {\n      localIndex1 = 1;\n      doublePointerVar7 = local_260 + arrayIndex;\n      do {\n        pointerVar5 = *doublePointerVar7;\n        localIndex1 = localIndex1 + 1;\n        doublePointerVar7 = doublePointerVar7 + -1;\n      } while (pointerVar5 == (uint *)0x0);\n      localIndex1 = startIndex2 + localIndex1;\n    }\n    else {\n      localIndex1 = startIndex2 + 1;\n    }\n    loopIndex2 = startIndex2 + 1;\n    doublePointerVar23 = (undefined4 *)(operationArray + (loopIndex2 + localIndex3 + 0x3fffffff) * 4);\n    doublePointerVar16 = &tempStackVar_208 + startIndex2 + startIndex;\n    localArray1 = &tempStackVar_c8 + loopIndex2;\n    do {\n      doublePointerVar23 = doublePointerVar23 + 1;\n      tempVar26 = __aeabi_i2d(*doublePointerVar23);\n      *doublePointerVar16 = tempVar26;\n      pointerVar22 = doublePointerVar16 + 1;\n      if (tempVar9 < 0) {\n        tempVar25 = 0;\n      }\n      else {\n        tempVar25 = 0;\n        pointerVar18 = pointerVar10;\n        while( true ) {\n          doublePointerVar16 = doublePointerVar16 + -1;\n          pointerVar1 = pointerVar18 + 2;\n          tempVar26 = __muldf3((int)tempVar26,(int)((ulonglong)tempVar26 >> 0x20),*pointerVar1,pointerVar18[3]);\n          tempVar25 = __aeabi_dadd((int)tempVar25,(int)((ulonglong)tempVar25 >> 0x20),(int)tempVar26,\n                                (int)((ulonglong)tempVar26 >> 0x20));\n          if (pointerVar1 == pointerVar10 + startIndex * 2) break;\n          tempVar26 = *doublePointerVar16;\n          pointerVar18 = pointerVar1;\n        }\n      }\n      *localArray1 = tempVar25;\n      loopIndex2 = loopIndex2 + 1;\n      startIndex2 = localIndex1;\n      doublePointerVar16 = pointerVar22;\n      localArray1 = localArray1 + 1;\n    } while (loopIndex2 <= localIndex1);\n  } while( true );\n  localIndex2 = localIndex2 + -0x18;\n  if (localArray2[tempVar4] == 0) {\n    pointerVar5 = localArray2 + startIndex2 + 0x3ffffffe;\n    do {\n      tempVar12 = *pointerVar5;\n      tempVar4 = tempVar4 + -1;\n      localIndex2 = localIndex2 + -0x18;\n      pointerVar5 = pointerVar5 + -1;\n    } while (tempVar12 == 0);\n  }\nLAB_0800a9f6:\n  tempVar26 = scalbn(0,0x3ff00000,localIndex2);\n  if (tempVar4 < 0) {\n    if (2 < operationType) {\n      if (operationType == 3) {\n        tempVar26 = 0;\nLAB_0800abe4:\n        if (loopIndex2 == 0) {\n          *local_260[1] = (undefined4)localArray3;\n          *(int *)((int)local_260[1] + 4) = localArray3._4_4_;\n          *(undefined8 *)((int)local_260[1] + 0x10) = tempVar26;\n          *(int *)((int)local_260[1] + 8) = localArray4[0];\n          *(int *)((int)local_260[1] + 0xc) = localArray4[1];\n          return tempVar2 & 7;\n        }\n        *(int *)((int)local_260[1] + 0x10) = (int)tempVar26;\n        *(int *)((int)local_260[1] + 8) = localArray4[0];\n        *(int *)((int)local_260[1] + 0x14) = (int)((ulonglong)tempVar26 >> 0x20) + -0x80000000;\n        *(int *)((int)local_260[1] + 4) = localArray3._4_4_ + -0x80000000;\n        *(int *)((int)local_260[1] + 0xc) = localArray4[1] + -0x80000000;\n        *local_260[1] = (undefined4)localArray3;\n        return tempVar2 & 7;\n      }\n      goto LAB_0800ab0e;\n    }\n    if (operationType < 1) {\n      if (operationType != 0) goto LAB_0800ab0e;\n      tempVar26 = 0;\nLAB_0800aafc:\n      tempVar9 = (int)((ulonglong)tempVar26 >> 0x20);\n      if (loopIndex2 != 0) {\n        tempVar9 = tempVar9 + -0x80000000;\n      }\n      *local_260[1] = (int)tempVar26;\n      *(int *)((int)local_260[1] + 4) = tempVar9;\nLAB_0800ab0e:\n      return tempVar2 & 7;\n    }\n    tempVar26 = 0;\n  }\n  else {\n    pointerVar22 = &tempStackVar_c8 + tempVar4;\n    pointerVar5 = localArray2 + tempVar4 + 1;\n    doublePointerVar16 = &tempStackVar_c8 + tempVar4 + 1;\n    do {\n      tempVar8 = (undefined4)((ulonglong)tempVar26 >> 0x20);\n      pointerVar5 = pointerVar5 + -1;\n      tempVar25 = __aeabi_i2d(*pointerVar5);\n      tempVar25 = __muldf3((int)tempVar25,(int)((ulonglong)tempVar25 >> 0x20),(int)tempVar26,tempVar8);\n      doublePointerVar16 = doublePointerVar16 + -1;\n      *doublePointerVar16 = tempVar25;\n      tempVar26 = __muldf3((int)tempVar26,tempVar8,0,0x3e700000);\n    } while (pointerVar5 != localArray2);\n    tempVar9 = 0;\n    do {\n      if (arrayIndex < 0) {\n        tempVar26 = 0;\n      }\n      else {\n        tempVar8 = 0x40000000;\n        tempVar6 = 0x3ff921fb;\n        tempVar26 = 0;\n        startIndex2 = 0;\n        doublePointerVar16 = pointerVar22;\n        pointerVar10 = &DAT_0800c028;\n        while( true ) {\n          tempVar25 = __muldf3(*(undefined4 *)doublePointerVar16,*(undefined4 *)((int)doublePointerVar16 + 4),tempVar8,tempVar6);\n          tempVar26 = __aeabi_dadd((int)tempVar26,(int)((ulonglong)tempVar26 >> 0x20),(int)tempVar25,\n                                (int)((ulonglong)tempVar25 >> 0x20));\n          startIndex2 = startIndex2 + 1;\n          if ((arrayIndex < startIndex2) || (tempVar9 < startIndex2)) break;\n          tempVar8 = *pointerVar10;\n          tempVar6 = pointerVar10[1];\n          doublePointerVar16 = doublePointerVar16 + 1;\n          pointerVar10 = pointerVar10 + 2;\n        }\n      }\n      booleanVar24 = tempVar9 != tempVar4;\n      *(int *)(&localArray3 + tempVar9) = (int)tempVar26;\n      *(int *)((int)&localArray3 + (tempVar9 * 2 + 1) * 4) = (int)((ulonglong)tempVar26 >> 0x20);\n      pointerVar22 = pointerVar22 + -1;\n      tempVar9 = tempVar9 + 1;\n    } while (booleanVar24);\n    if (2 < operationType) {\n      if (operationType == 3) {\n        if (tempVar4 != 0) {\n          doublePointerVar16 = &localArray3 + tempVar4;\n          tempVar26 = CONCAT44(*(undefined4 *)((int)&localArray3 + (tempVar4 * 2 + 1) * 4),\n                            *(undefined4 *)doublePointerVar16);\n          do {\n            tempVar6 = (undefined4)((ulonglong)tempVar26 >> 0x20);\n            tempVar8 = (undefined4)tempVar26;\n            tempVar11 = *(undefined4 *)(doublePointerVar16 + -1);\n            tempVar20 = *(undefined4 *)((int)doublePointerVar16 + -4);\n            tempVar26 = __aeabi_dadd(tempVar8,tempVar6,tempVar11,tempVar20);\n            tempVar25 = __subdf3(tempVar11,tempVar20,(int)tempVar26,(int)((ulonglong)tempVar26 >> 0x20));\n            tempVar25 = __aeabi_dadd((int)tempVar25,(int)((ulonglong)tempVar25 >> 0x20),tempVar8,tempVar6);\n            *doublePointerVar16 = tempVar25;\n            doublePointerVar16 = doublePointerVar16 + -1;\n            *doublePointerVar16 = tempVar26;\n          } while (&localArray3 != doublePointerVar16);\n          if (1 < tempVar4) {\n            doublePointerVar16 = &localArray3 + tempVar4;\n            tempVar26 = CONCAT44(*(undefined4 *)((int)&localArray3 + (tempVar4 * 2 + 1) * 4),\n                              *(undefined4 *)doublePointerVar16);\n            do {\n              tempVar6 = (undefined4)((ulonglong)tempVar26 >> 0x20);\n              tempVar8 = (undefined4)tempVar26;\n              tempVar11 = *(undefined4 *)(doublePointerVar16 + -1);\n              tempVar20 = *(undefined4 *)((int)doublePointerVar16 + -4);\n              tempVar26 = __aeabi_dadd(tempVar8,tempVar6,tempVar11,tempVar20);\n              tempVar25 = __subdf3(tempVar11,tempVar20,(int)tempVar26,(int)((ulonglong)tempVar26 >> 0x20));\n              tempVar25 = __aeabi_dadd((int)tempVar25,(int)((ulonglong)tempVar25 >> 0x20),tempVar8,tempVar6);\n              *doublePointerVar16 = tempVar25;\n              doublePointerVar16 = doublePointerVar16 + -1;\n              *doublePointerVar16 = tempVar26;\n            } while (&localArray3 + 1 != doublePointerVar16);\n            tempVar26 = 0;\n            doublePointerVar16 = &localArray3 + tempVar4 + 1;\n            do {\n              pointerVar22 = doublePointerVar16 + -1;\n              tempVar26 = __aeabi_dadd((int)tempVar26,(int)((ulonglong)tempVar26 >> 0x20),\n                                    *(undefined4 *)pointerVar22,*(undefined4 *)((int)doublePointerVar16 + -4));\n              doublePointerVar16 = pointerVar22;\n            } while (&localArray3 + 2 != pointerVar22);\n            goto LAB_0800abe4;\n          }\n        }\n        tempVar26 = 0;\n        goto LAB_0800abe4;\n      }\n      goto LAB_0800ab0e;\n    }\n    if (operationType < 1) {\n      if (operationType != 0) goto LAB_0800ab0e;\n      tempVar26 = 0;\n      doublePointerVar16 = &localArray3 + tempVar4 + 1;\n      do {\n        pointerVar22 = doublePointerVar16 + -1;\n        tempVar26 = __aeabi_dadd((int)tempVar26,(int)((ulonglong)tempVar26 >> 0x20),*(undefined4 *)pointerVar22,\n                              *(undefined4 *)((int)doublePointerVar16 + -4));\n        doublePointerVar16 = pointerVar22;\n      } while (&localArray3 != pointerVar22);\n      goto LAB_0800aafc;\n    }\n    tempVar26 = 0;\n    doublePointerVar16 = &localArray3 + tempVar4 + 1;\n    do {\n      pointerVar22 = doublePointerVar16 + -1;\n      tempVar26 = __aeabi_dadd((int)tempVar26,(int)((ulonglong)tempVar26 >> 0x20),*(undefined4 *)pointerVar22,\n                            *(undefined4 *)((int)doublePointerVar16 + -4));\n      doublePointerVar16 = pointerVar22;\n    } while (&localArray3 != pointerVar22);\n  }\n  tempVar9 = (int)((ulonglong)tempVar26 >> 0x20);\n  tempVar8 = (undefined4)tempVar26;\n  if (loopIndex2 == 0) {\n    *(undefined8 *)local_260[1] = tempVar26;\n    tempVar26 = __subdf3((undefined4)localArray3,localArray3._4_4_,tempVar8,tempVar9);\n    if (tempVar4 < 1) goto LAB_0800ad26;\nLAB_0800ad04:\n    tempVar9 = 1;\n    doublePointerVar16 = &localArray3;\n    do {\n      tempVar26 = __aeabi_dadd((int)tempVar26,(int)((ulonglong)tempVar26 >> 0x20),\n                            *(undefined4 *)(doublePointerVar16 + 1),*(undefined4 *)((int)doublePointerVar16 + 0xc));\n      tempVar9 = tempVar9 + 1;\n      doublePointerVar16 = doublePointerVar16 + 1;\n    } while (tempVar9 <= tempVar4);\n    if (loopIndex2 == 0) goto LAB_0800ad26;\n  }\n  else {\n    *local_260[1] = tempVar8;\n    *(int *)((int)local_260[1] + 4) = tempVar9 + -0x80000000;\n    tempVar26 = __subdf3((undefined4)localArray3,localArray3._4_4_,tempVar8,tempVar9);\n    if (0 < tempVar4) goto LAB_0800ad04;\n  }\n  tempVar26 = CONCAT44((int)((ulonglong)tempVar26 >> 0x20) + -0x80000000,(int)tempVar26);\nLAB_0800ad26:\n  *(undefined8 *)((int)local_260[1] + 8) = tempVar26;\n  return tempVar2 & 7;\n}\n\n",
            "renaming": {
                "FUN_0800a5a0": "calculate_result_0800a5a0",
                "param_1": "inputValue",
                "param_2": "resultArray",
                "param_3": "arraySize",
                "param_4": "startIndex",
                "param_5": "operationType",
                "param_6": "operationArray",
                "puVar1": "pointerVar1",
                "uVar2": "tempVar2",
                "uVar3": "tempVar3",
                "iVar4": "tempVar4",
                "puVar5": "pointerVar5",
                "uVar6": "tempVar6",
                "ppuVar7": "doublePointerVar7",
                "uVar8": "tempVar8",
                "iVar9": "tempVar9",
                "puVar10": "pointerVar10",
                "uVar11": "tempVar11",
                "uVar12": "tempVar12",
                "puVar13": "pointerVar13",
                "iVar14": "tempVar14",
                "iVar15": "arrayIndex",
                "iVar17": "startIndex2",
                "iVar21": "loopIndex2",
                "puVar16": "doublePointerVar16",
                "puVar18": "pointerVar18",
                "puVar19": "doublePointerVar19",
                "uVar20": "tempVar20",
                "puVar22": "pointerVar22",
                "puVar23": "doublePointerVar23",
                "bVar24": "booleanVar24",
                "uVar25": "tempVar25",
                "uVar26": "tempVar26",
                "uVar27": "tempVar27",
                "local_284": "localArray1",
                "local_280": "localIndex1",
                "local_270": "localIndex2",
                "local_26c": "localIndex3",
                "local_258": "localArray2",
                "uStack_208": "tempStackVar_208",
                "local_168": "localArray3",
                "local_160": "localArray4",
                "uStack_c8": "tempStackVar_c8"
            },
            "calling": [
                "__ieee754_rem_pio2"
            ],
            "called": [
                "__aeabi_dadd",
                "__aeabi_d2iz",
                "__aeabi_i2d",
                "floor",
                "__aeabi_dcmpeq",
                "__aeabi_dcmpge",
                "scalbn",
                "__subdf3",
                "__muldf3"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800adf0": {
            "entrypoint": "0x0800adf0",
            "current_name": "calculate_result_0800adf0",
            "code": "\nundefined4\ncalculate_result_0800adf0(undefined4 input_number,uint input_flag,undefined4 multiply_factor,undefined4 addition_factor,int is_reversed)\n\n{\n  int converted_input;\n  undefined4 result_low;\n  undefined4 result_high;\n  undefined4 temp_low;\n  undefined4 temp_high;\n  undefined4 final_result_low;\n  undefined8 final_result_high;\n  undefined8 mul_result;\n  \n  if (((input_flag & 0x7fffffff) < 0x3e400000) && (converted_input = __aeabi_d2iz(), converted_input == 0)) {\n    return input_number;\n  }\n  final_result_high = __muldf3(input_number,input_flag,input_number);\n  temp_low = (undefined4)((ulonglong)final_result_high >> 0x20);\n  result_high = (undefined4)final_result_high;\n  final_result_high = __muldf3(input_number,input_flag,result_high,temp_low);\n  temp_high = (undefined4)((ulonglong)final_result_high >> 0x20);\n  result_low = (undefined4)final_result_high;\n  final_result_high = __muldf3(result_high,temp_low,0x5acfd57c,0x3de5d93a);\n  final_result_high = __subdf3((int)final_result_high,(int)((ulonglong)final_result_high >> 0x20),0x8a2b9ceb,0x3e5ae5e6);\n  final_result_high = __muldf3((int)final_result_high,(int)((ulonglong)final_result_high >> 0x20),result_high,temp_low);\n  final_result_high = __aeabi_dadd((int)final_result_high,(int)((ulonglong)final_result_high >> 0x20),0x57b1fe7d,0x3ec71de3);\n  final_result_high = __muldf3((int)final_result_high,(int)((ulonglong)final_result_high >> 0x20),result_high,temp_low);\n  final_result_high = __subdf3((int)final_result_high,(int)((ulonglong)final_result_high >> 0x20),0x19c161d5,0x3f2a01a0);\n  final_result_high = __muldf3((int)final_result_high,(int)((ulonglong)final_result_high >> 0x20),result_high,temp_low);\n  final_result_high = __aeabi_dadd((int)final_result_high,(int)((ulonglong)final_result_high >> 0x20),0x1110f8a6,0x3f811111);\n  final_result_low = (undefined4)((ulonglong)final_result_high >> 0x20);\n  if (is_reversed != 0) {\n    mul_result = __muldf3(multiply_factor,addition_factor,0,0x3fe00000);\n    final_result_high = __muldf3(result_low,temp_high,(int)final_result_high,final_result_low);\n    final_result_high = __subdf3((int)mul_result,(int)((ulonglong)mul_result >> 0x20),(int)final_result_high,\n                     (int)((ulonglong)final_result_high >> 0x20));\n    final_result_high = __muldf3((int)final_result_high,(int)((ulonglong)final_result_high >> 0x20),result_high,temp_low);\n    final_result_high = __subdf3((int)final_result_high,(int)((ulonglong)final_result_high >> 0x20),multiply_factor,addition_factor);\n    mul_result = __muldf3(result_low,temp_high,0x55555549,0x3fc55555);\n    final_result_high = __aeabi_dadd((int)final_result_high,(int)((ulonglong)final_result_high >> 0x20),(int)mul_result,\n                         (int)((ulonglong)mul_result >> 0x20));\n    result_high = __subdf3(input_number,input_flag,(int)final_result_high,(int)((ulonglong)final_result_high >> 0x20));\n    return result_high;\n  }\n  final_result_high = __muldf3(result_high,temp_low,(int)final_result_high,final_result_low);\n  final_result_high = __subdf3((int)final_result_high,(int)((ulonglong)final_result_high >> 0x20),0x55555549,0x3fc55555);\n  final_result_high = __muldf3((int)final_result_high,(int)((ulonglong)final_result_high >> 0x20),result_low,temp_high);\n  result_high = __aeabi_dadd((int)final_result_high,(int)((ulonglong)final_result_high >> 0x20),input_number,input_flag);\n  return result_high;\n}\n\n",
            "renaming": {
                "FUN_0800adf0": "calculate_result_0800adf0",
                "param_1": "input_number",
                "param_2": "input_flag",
                "param_3": "multiply_factor",
                "param_4": "addition_factor",
                "param_5": "is_reversed",
                "iVar1": "converted_input",
                "uVar2": "result_low",
                "uVar3": "result_high",
                "uVar4": "temp_low",
                "uVar5": "temp_high",
                "uVar6": "final_result_low",
                "uVar7": "final_result_high",
                "uVar8": "mul_result"
            },
            "calling": [
                "sin",
                "cos"
            ],
            "called": [
                "__aeabi_dadd",
                "__aeabi_d2iz",
                "__subdf3",
                "__muldf3"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800af78": {
            "entrypoint": "0x0800af78",
            "current_name": "calculate_square_root_0800af78",
            "code": "\nint calculateSquareRoot_0800af78(int input1,uint input2)\n\n{\n  undefined4 result1;\n  undefined4 result2;\n  undefined4 result3;\n  undefined4 result4;\n  int comparisonResult;\n  undefined4 mulResult1;\n  uint maskedInput2;\n  undefined8 mulResult2;\n  undefined8 mulResult3;\n  undefined4 localVariable;\n  \n  mulResult2 = CONCAT44(input2,input1);\n  maskedInput2 = input2 & 0x7fffffff;\n  if (maskedInput2 < 0x44100000) {\n    if (maskedInput2 < 0x3fdc0000) {\n      if (maskedInput2 < 0x3e200000) {\n        mulResult3 = __aeabi_dadd(input1,input2,0x8800759c,0x7e37e43c);\n        comparisonResult = __aeabi_dcmpgt((int)mulResult3,(int)((ulonglong)mulResult3 >> 0x20),0,0x3ff00000);\n        if (comparisonResult != 0) {\n          return input1;\n        }\n      }\n      comparisonResult = -1;\n    }\n    else {\n      mulResult2 = fabs();\n      result4 = (undefined4)((ulonglong)mulResult2 >> 0x20);\n      result1 = (undefined4)mulResult2;\n      if (maskedInput2 < 0x3ff30000) {\n        if (maskedInput2 < 0x3fe60000) {\n          mulResult2 = __aeabi_dadd(result1,result4,result1,result4);\n          mulResult2 = __subdf3((int)mulResult2,(int)((ulonglong)mulResult2 >> 0x20),0,0x3ff00000);\n          mulResult3 = __aeabi_dadd(result1,result4,0,0x40000000);\n          mulResult2 = __divdf3((int)mulResult2,(int)((ulonglong)mulResult2 >> 0x20),(int)mulResult3,\n                           (int)((ulonglong)mulResult3 >> 0x20));\n          comparisonResult = 0;\n        }\n        else {\n          mulResult2 = __subdf3(result1,result4,0,0x3ff00000);\n          mulResult3 = __aeabi_dadd(result1,result4,0,0x3ff00000);\n          mulResult2 = __divdf3((int)mulResult2,(int)((ulonglong)mulResult2 >> 0x20),(int)mulResult3,\n                           (int)((ulonglong)mulResult3 >> 0x20));\n          comparisonResult = 1;\n        }\n      }\n      else if (maskedInput2 < 0x40038000) {\n        mulResult2 = __subdf3(result1,result4,0,0x3ff80000);\n        mulResult3 = __muldf3(result1,result4,0,0x3ff80000);\n        mulResult3 = __aeabi_dadd((int)mulResult3,(int)((ulonglong)mulResult3 >> 0x20),0,0x3ff00000);\n        mulResult2 = __divdf3((int)mulResult2,(int)((ulonglong)mulResult2 >> 0x20),(int)mulResult3,\n                         (int)((ulonglong)mulResult3 >> 0x20));\n        comparisonResult = 2;\n      }\n      else {\n        mulResult2 = __divdf3(0,0xbff00000,result1,result4);\n        comparisonResult = 3;\n      }\n    }\n    localVariable = (undefined4)((ulonglong)mulResult2 >> 0x20);\n    mulResult1 = (undefined4)mulResult2;\n    mulResult2 = __muldf3(mulResult1,localVariable,mulResult1);\n    result2 = (undefined4)((ulonglong)mulResult2 >> 0x20);\n    result1 = (undefined4)mulResult2;\n    mulResult2 = __muldf3(result1,result2,result1,result2);\n    result3 = (undefined4)((ulonglong)mulResult2 >> 0x20);\n    result4 = (undefined4)mulResult2;\n    mulResult2 = __muldf3(result4,result3,0xe322da11,0x3f90ad3a);\n    mulResult2 = __aeabi_dadd((int)mulResult2,(int)((ulonglong)mulResult2 >> 0x20),0x24760deb,0x3fa97b4b);\n    mulResult2 = __muldf3((int)mulResult2,(int)((ulonglong)mulResult2 >> 0x20),result4,result3);\n    mulResult2 = __aeabi_dadd((int)mulResult2,(int)((ulonglong)mulResult2 >> 0x20),0xa0d03d51,0x3fb10d66);\n    mulResult2 = __muldf3((int)mulResult2,(int)((ulonglong)mulResult2 >> 0x20),result4,result3);\n    mulResult2 = __aeabi_dadd((int)mulResult2,(int)((ulonglong)mulResult2 >> 0x20),0xc54c206e,0x3fb745cd);\n    mulResult2 = __muldf3((int)mulResult2,(int)((ulonglong)mulResult2 >> 0x20),result4,result3);\n    mulResult2 = __aeabi_dadd((int)mulResult2,(int)((ulonglong)mulResult2 >> 0x20),0x920083ff,0x3fc24924);\n    mulResult2 = __muldf3((int)mulResult2,(int)((ulonglong)mulResult2 >> 0x20),result4,result3);\n    mulResult2 = __aeabi_dadd((int)mulResult2,(int)((ulonglong)mulResult2 >> 0x20),0x5555550d,0x3fd55555);\n    mulResult2 = __muldf3((int)mulResult2,(int)((ulonglong)mulResult2 >> 0x20),result1,result2);\n    result1 = (undefined4)((ulonglong)mulResult2 >> 0x20);\n    mulResult3 = __muldf3(result4,result3,0x2c6a6c2f,0xbfa2b444);\n    mulResult3 = __subdf3((int)mulResult3,(int)((ulonglong)mulResult3 >> 0x20),0x52defd9a,0x3fadde2d);\n    mulResult3 = __muldf3((int)mulResult3,(int)((ulonglong)mulResult3 >> 0x20),result4,result3);\n    mulResult3 = __subdf3((int)mulResult3,(int)((ulonglong)mulResult3 >> 0x20),0xaf749a6d,0x3fb3b0f2);\n    mulResult3 = __muldf3((int)mulResult3,(int)((ulonglong)mulResult3 >> 0x20),result4,result3);\n    mulResult3 = __subdf3((int)mulResult3,(int)((ulonglong)mulResult3 >> 0x20),0xfe231671,0x3fbc71c6);\n    mulResult3 = __muldf3((int)mulResult3,(int)((ulonglong)mulResult3 >> 0x20),result4,result3);\n    mulResult3 = __subdf3((int)mulResult3,(int)((ulonglong)mulResult3 >> 0x20),0x9998ebc4,0x3fc99999);\n    mulResult3 = __muldf3((int)mulResult3,(int)((ulonglong)mulResult3 >> 0x20),result4,result3);\n    result4 = (undefined4)((ulonglong)mulResult3 >> 0x20);\n    if (comparisonResult == -1) {\n      mulResult2 = __aeabi_dadd((int)mulResult2,result1,(int)mulResult3,result4);\n      mulResult2 = __muldf3((int)mulResult2,(int)((ulonglong)mulResult2 >> 0x20),mulResult1,localVariable);\n      comparisonResult = __subdf3(mulResult1,localVariable,(int)mulResult2,(int)((ulonglong)mulResult2 >> 0x20));\n      return comparisonResult;\n    }\n    mulResult2 = __aeabi_dadd((int)mulResult2,result1,(int)mulResult3,result4);\n    mulResult2 = __muldf3((int)mulResult2,(int)((ulonglong)mulResult2 >> 0x20),mulResult1,localVariable);\n    mulResult2 = __subdf3((int)mulResult2,(int)((ulonglong)mulResult2 >> 0x20),\n                     *(undefined4 *)(&UNK_0800c090 + comparisonResult * 8),\n                     *(undefined4 *)(&UNK_0800c094 + comparisonResult * 8));\n    mulResult2 = __subdf3((int)mulResult2,(int)((ulonglong)mulResult2 >> 0x20),mulResult1,localVariable);\n    comparisonResult = __subdf3(*(undefined4 *)(&UNK_0800c070 + comparisonResult * 8),\n                     *(undefined4 *)(&UNK_0800c074 + comparisonResult * 8),(int)mulResult2,\n                     (int)((ulonglong)mulResult2 >> 0x20));\n    if ((int)input2 < 0) {\n      return comparisonResult;\n    }\n  }\n  else {\n    if ((0x7ff00000 < maskedInput2) || ((maskedInput2 == 0x7ff00000 && (input1 != 0)))) {\n      comparisonResult = __aeabi_dadd(input1,input2,input1);\n      return comparisonResult;\n    }\n    comparisonResult = 0x54442d18;\n  }\n  return comparisonResult;\n}\n\n",
            "renaming": {
                "FUN_0800af78": "calculate_square_root_0800af78",
                "param_1": "input1",
                "param_2": "input2",
                "uVar1": "result1",
                "uVar2": "result2",
                "uVar3": "result3",
                "uVar4": "result4",
                "iVar5": "comparisonResult",
                "uVar6": "mulResult1",
                "uVar7": "maskedInput2",
                "uVar8": "mulResult2",
                "uVar9": "mulResult3",
                "local_2c": "localVariable"
            },
            "calling": [
                "__ieee754_atan2"
            ],
            "called": [
                "__aeabi_dcmpgt",
                "__aeabi_dadd",
                "fabs",
                "__divdf3",
                "__subdf3",
                "__muldf3"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b2cc": {
            "entrypoint": "0x0800b2cc",
            "current_name": "FUNC_0800b2cc",
            "code": "\nvoid FUNC_0800b2cc(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b2cc": "FUNC_0800b2cc"
            },
            "calling": [
                "__ieee754_rem_pio2",
                "atan",
                "__ieee754_atan2"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b2d4": {
            "entrypoint": "0x0800b2d4",
            "current_name": "calculate_shifted_value_0800b2d4",
            "code": "\nuint calculateShiftedValue_0800b2d4(undefined4 inputFlag,uint inputValue)\n\n{\n  return (inputValue | 0x80000000) + 0x100000 >> 0x1f;\n}\n\n",
            "renaming": {
                "FUN_0800b2d4": "calculate_shifted_value_0800b2d4",
                "param_1": "inputFlag",
                "param_2": "inputValue"
            },
            "calling": [
                "hypot"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b2e0": {
            "entrypoint": "0x0800b2e0",
            "current_name": "initialize_application_0800b2e0",
            "code": "\nvoid initializeApplication_0800b2e0(void)\n\n{\n  return 0;\n}\n\n",
            "renaming": {
                "FUN_0800b2e0": "initialize_application_0800b2e0",
                "undefined4": "void"
            },
            "calling": [
                "sqrt",
                "hypot"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b2e8": {
            "entrypoint": "0x0800b2e8",
            "current_name": "calculate_exponent_0800b2e8",
            "code": "\nuint calculate_exponent_0800b2e8(uint base,uint exponent,int power,undefined4 constant)\n\n{\n  uint shifted_exponent;\n  int sum;\n  uint upper_bits_exponent;\n  undefined8 combined;\n  \n  combined = combine_64_bits(exponent,base);\n  shifted_exponent = (exponent << 1) >> 0x15;\n  if (shifted_exponent == 0) {\n    if ((base | exponent & 0x7fffffff) == 0) {\n      return base;\n    }\n    combined = multiply_double(base,exponent,0,0x43500000);\n    if (power < -50000) goto label_0800b34a;\n    shifted_exponent = ((uint)((int)((ulonglong)combined >> 0x20) << 1) >> 0x15) - 0x36;\n  }\n  else if (shifted_exponent == 0x7ff) {\n    shifted_exponent = add_double(base,exponent,base,exponent,constant);\n    return shifted_exponent;\n  }\n  upper_bits_exponent = (uint)((ulonglong)combined >> 0x20);\n  sum = shifted_exponent + power;\n  if (sum < 0x7ff) {\n    if (0 < sum) {\n      return (uint)combined;\n    }\n    if (sum + 0x35 < 0 == signed_carry(sum,0x35)) {\n      shifted_exponent = multiply_double((uint)combined,upper_bits_exponent & 0x800fffff | (sum + 0x36) * 0x100000,0,0x3c900000);\n      return shifted_exponent;\n    }\n    if (power < 0xc351) {\n      combined = combine_64_bits(upper_bits_exponent & 0x80000000 | 0x1a56e1f,0xc2f8f359);\nlabel_0800b34a:\n      shifted_exponent = multiply_double((int)combined,(int)((ulonglong)combined >> 0x20),0xc2f8f359,0x1a56e1f);\n      return shifted_exponent;\n    }\n  }\n  shifted_exponent = multiply_double(0x8800759c,upper_bits_exponent & 0x80000000 | 0x7e37e43c,0x8800759c,0x7e37e43c);\n  return shifted_exponent;\n}\n\n",
            "renaming": {
                "FUN_0800b2e8": "calculate_exponent_0800b2e8",
                "param_1": "base",
                "param_2": "exponent",
                "param_3": "power",
                "param_4": "constant",
                "uVar1": "shifted_exponent",
                "iVar2": "sum",
                "uVar3": "upper_bits_exponent",
                "uVar4": "combined",
                "__muldf3": "multiply_double",
                "__aeabi_dadd": "add_double",
                "SCARRY4": "signed_carry",
                "CONCAT44": "combine_64_bits",
                "LAB_0800b34a": "label_0800b34a"
            },
            "calling": [
                "__kernel_rem_pio2"
            ],
            "called": [
                "__aeabi_dadd",
                "__muldf3"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b3dc": {
            "entrypoint": "0x0800b3dc",
            "current_name": "get_data_value_0800b3dc",
            "code": "\nundefined4 get_data_value_0800b3dc(void)\n\n{\n  return DAT_20000018;\n}\n\n",
            "renaming": {
                "FUN_0800b3dc": "get_data_value_0800b3dc"
            },
            "calling": [
                "sqrt",
                "hypot"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b3e8": {
            "entrypoint": "0x0800b3e8",
            "current_name": "initialize_and_execute_0800b3e8",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800b3f4) */\n/* WARNING: Removing unreachable block (ram,0x0800b3f6) */\n\nvoid initializeAndExecute_0800b3e8(void)\n\n{\n  int iterationCount;\n  code **functionPointer;\n  \n  _init();\n  iterationCount = 0;\n  functionPointer = (code **)&DAT_0800c0b4;\n  do {\n    iterationCount = iterationCount + 1;\n    (**functionPointer)();\n    functionPointer = functionPointer + 1;\n  } while (iterationCount != 2);\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b3e8": "initialize_and_execute_0800b3e8",
                "iVar1": "iterationCount",
                "ppcVar2": "functionPointer"
            },
            "calling": [
                "Reset_Handler"
            ],
            "called": [
                "frame_dummy",
                "register_fini",
                "_init"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b430": {
            "entrypoint": "0x0800b430",
            "current_name": "copy_with_padding_0800b430",
            "code": "\nvoid copyWithPadding_0800b430(undefined4 *destination,undefined value,uint length)\n\n{\n  undefined4 *destPtr;\n  undefined4 *sourcePtr;\n  uint remainingLength;\n  undefined4 paddedValue;\n  bool isRemainingLengthZero;\n  \n  if (((uint)destination & 3) != 0) {\n    remainingLength = length - 1;\n    destPtr = destination;\n    if (length == 0) {\n      return;\n    }\n    while( true ) {\n      destination = (undefined4 *)((int)destPtr + 1);\n      *(undefined *)destPtr = value;\n      length = remainingLength;\n      if (((uint)destination & 3) == 0) break;\n      isRemainingLengthZero = remainingLength == 0;\n      remainingLength = remainingLength - 1;\n      destPtr = destination;\n      if (isRemainingLengthZero) {\n        return;\n      }\n    }\n  }\n  if (3 < length) {\n    paddedValue = CONCAT22(CONCAT11(value,value),CONCAT11(value,value));\n    if (0xf < length) {\n      destPtr = destination + 4;\n      do {\n        destPtr[-4] = paddedValue;\n        destPtr[-3] = paddedValue;\n        destPtr[-2] = paddedValue;\n        destPtr[-1] = paddedValue;\n        destPtr = destPtr + 4;\n      } while (destPtr != (undefined4 *)((int)destination + (length - 0x10 & 0xfffffff0) + 0x20));\n      remainingLength = length & 0xc;\n      destination = destination + ((length - 0x10 >> 4) + 1) * 4;\n      length = length & 0xf;\n      if (remainingLength == 0) goto joined_r0x0800b4a8;\n    }\n    destPtr = (undefined4 *)((length - 4 & 0xfffffffc) + 4 + (int)destination);\n    do {\n      sourcePtr = destination + 1;\n      *destination = paddedValue;\n      destination = sourcePtr;\n    } while (destPtr != sourcePtr);\n    length = length & 3;\n    destination = destPtr;\n  }\njoined_r0x0800b4a8:\n  if (length != 0) {\n    destPtr = destination;\n    do {\n      sourcePtr = (undefined4 *)((int)destPtr + 1);\n      *(undefined *)destPtr = value;\n      destPtr = sourcePtr;\n    } while ((undefined4 *)(length + (int)destination) != sourcePtr);\n  }\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b430": "copy_with_padding_0800b430",
                "param_1": "destination",
                "param_2": "value",
                "param_3": "length",
                "puVar1": "destPtr",
                "puVar2": "sourcePtr",
                "uVar3": "remainingLength",
                "uVar4": "paddedValue",
                "bVar5": "isRemainingLengthZero"
            },
            "calling": [
                "grbl_main",
                "settings_read_coord_data",
                "st_reset",
                "debounce_init",
                "plan_init",
                "gc_execute_line",
                "gc_init",
                "eeprom_init",
                "homing_cycle",
                "mc_go_home"
            ],
            "called": [],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b4d0": {
            "entrypoint": "0x0800b4d0",
            "current_name": "FUNC_0800b4d0",
            "code": "\n/* WARNING: Removing unreachable block (ram,0x0800b4d4) */\n\nvoid FUNC_0800b4d0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b4d0": "FUNC_0800b4d0"
            },
            "calling": [
                "__libc_init_array"
            ],
            "called": [
                "__register_exitproc"
            ],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b51c": {
            "entrypoint": "0x0800b51c",
            "current_name": "FUNC_0800b51c",
            "code": "\nvoid FUNC_0800b51c(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b51c": "FUNC_0800b51c"
            },
            "calling": [
                "__register_exitproc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b520": {
            "entrypoint": "0x0800b520",
            "current_name": "FUNC_0800b520",
            "code": "\nvoid FUNC_0800b520(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b520": "FUNC_0800b520"
            },
            "calling": [
                "__register_exitproc"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b524": {
            "entrypoint": "0x0800b524",
            "current_name": "update_data_0800b524",
            "code": "\nundefined4 updateData_0800b524(int operation,undefined4 data,undefined4 value,undefined4 flag)\n\n{\n  undefined *dataPtr;\n  undefined4 returnValue;\n  uint bitMask;\n  uint count;\n  \n  __retarget_lock_acquire_recursive(DAT_20000448);\n  if (DAT_20000168 == (undefined *)0x0) {\n    DAT_20000168 = &DAT_2000016c;\n  }\n  dataPtr = DAT_20000168;\n  count = *(uint *)(DAT_20000168 + 4);\n  if ((int)count < 0x20) {\n    if (operation != 0) {\n      *(undefined4 *)(DAT_20000168 + count * 4 + 0x88) = value;\n      bitMask = 1 << (count & 0xff);\n      *(uint *)(dataPtr + 0x188) = *(uint *)(dataPtr + 0x188) | bitMask;\n      *(undefined4 *)(dataPtr + count * 4 + 0x108) = flag;\n      if (operation == 2) {\n        *(uint *)(dataPtr + 0x18c) = bitMask | *(uint *)(dataPtr + 0x18c);\n      }\n    }\n    returnValue = DAT_20000448;\n    *(uint *)(dataPtr + 4) = count + 1;\n    *(undefined4 *)(dataPtr + (count + 2) * 4) = data;\n    __retarget_lock_release_recursive(returnValue);\n    returnValue = 0;\n  }\n  else {\n    __retarget_lock_release_recursive(DAT_20000448);\n    returnValue = 0xffffffff;\n  }\n  return returnValue;\n}\n\n",
            "renaming": {
                "FUN_0800b524": "update_data_0800b524",
                "param_1": "operation",
                "param_2": "data",
                "param_3": "value",
                "param_4": "flag",
                "puVar1": "dataPtr",
                "uVar2": "returnValue",
                "uVar3": "bitMask",
                "uVar4": "count"
            },
            "calling": [
                "register_fini"
            ],
            "called": [
                "__retarget_lock_acquire_recursive",
                "__retarget_lock_release_recursive"
            ],
            "improved": true,
            "skipped": false,
            "imported": false,
            "tags": []
        },
        "FUN_0800b5b0": {
            "entrypoint": "0x0800b5b0",
            "current_name": "FUNC_0800b5b0",
            "code": "\nvoid FUNC_0800b5b0(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b5b0": "FUNC_0800b5b0"
            },
            "calling": [
                "frame_dummy",
                "__libc_init_array",
                "__do_global_dtors_aux"
            ],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        },
        "FUN_0800b5bc": {
            "entrypoint": "0x0800b5bc",
            "current_name": "FUNC_0800b5bc",
            "code": "\nvoid FUNC_0800b5bc(void)\n\n{\n  return;\n}\n\n",
            "renaming": {
                "FUN_0800b5bc": "FUNC_0800b5bc"
            },
            "calling": [],
            "called": [],
            "improved": false,
            "skipped": true,
            "imported": false,
            "tags": []
        }
    },
    "used_tokens": 223599,
    "layers": [
        [
            "FUN_08000188",
            "FUN_080001ac",
            "FUN_080001f8",
            "FUN_08000210",
            "FUN_08000220",
            "FUN_08000268",
            "FUN_080002a0",
            "FUN_080002b6",
            "FUN_080002f0",
            "FUN_08000310",
            "FUN_08000340",
            "FUN_08000374",
            "FUN_080003ec",
            "FUN_08000478",
            "FUN_080004ac",
            "FUN_080004fc",
            "FUN_0800056c",
            "FUN_080005b4",
            "FUN_0800184c",
            "FUN_080018cc",
            "FUN_080018fc",
            "FUN_0800192c",
            "FUN_0800195c",
            "FUN_08001d4c",
            "FUN_08001ddc",
            "FUN_08001e98",
            "FUN_08001f00",
            "FUN_08002408",
            "FUN_080024c4",
            "FUN_080025e8",
            "FUN_08002638",
            "FUN_0800283a",
            "FUN_08002870",
            "FUN_08002896",
            "FUN_080028bc",
            "FUN_08002908",
            "FUN_08002978",
            "FUN_080029d8",
            "FUN_08002a94",
            "FUN_08002afc",
            "FUN_08002ba8",
            "FUN_08002c18",
            "FUN_08002e08",
            "FUN_08002edc",
            "FUN_08002ef0",
            "FUN_08002f24",
            "FUN_08002f40",
            "FUN_08002f74",
            "FUN_08002fac",
            "FUN_08002fd4",
            "FUN_08003004",
            "FUN_080035ec",
            "FUN_08003618",
            "FUN_0800369c",
            "FUN_080036c6",
            "FUN_080036f0",
            "FUN_08003740",
            "FUN_0800375c",
            "FUN_08003778",
            "FUN_080037fc",
            "FUN_08003826",
            "FUN_08003980",
            "FUN_080039a0",
            "FUN_080039bc",
            "FUN_08003a18",
            "FUN_08003a74",
            "FUN_08003b98",
            "FUN_08003f34",
            "FUN_08004030",
            "FUN_08004148",
            "FUN_080041a0",
            "FUN_08004228",
            "FUN_0800423c",
            "FUN_08004250",
            "FUN_080044e8",
            "FUN_080046d0",
            "FUN_08004900",
            "FUN_08004940",
            "FUN_08004bc0",
            "FUN_08004bf4",
            "FUN_08004c2a",
            "FUN_08004c48",
            "FUN_08004d2c",
            "FUN_08004d7c",
            "FUN_08004dd2",
            "FUN_08004e30",
            "FUN_080051b4",
            "FUN_08005238",
            "FUN_08005250",
            "FUN_0800525c",
            "FUN_080052ac",
            "FUN_080052dc",
            "FUN_08005324",
            "FUN_08005360",
            "FUN_080053a0",
            "FUN_08005760",
            "FUN_08005778",
            "FUN_08005790",
            "FUN_080057e4",
            "FUN_08005814",
            "FUN_0800583c",
            "FUN_0800585c",
            "FUN_0800587c",
            "FUN_080058a0",
            "FUN_08005900",
            "FUN_0800597c",
            "FUN_08005984",
            "FUN_080059b4",
            "FUN_080059f8",
            "FUN_08005a68",
            "FUN_08005a84",
            "FUN_08005a98",
            "FUN_08005bdc",
            "FUN_08005cec",
            "FUN_0800640c",
            "FUN_080064ec",
            "FUN_08006628",
            "FUN_08006680",
            "FUN_080066cc",
            "FUN_08006950",
            "FUN_08006998",
            "FUN_080069b4",
            "FUN_080069e4",
            "FUN_08006a18",
            "FUN_08006a58",
            "FUN_08006a8c",
            "FUN_08006ac0",
            "FUN_08006b00",
            "FUN_08006b54",
            "FUN_08006ba0",
            "FUN_08006c04",
            "FUN_08006c70",
            "FUN_08006c9c",
            "FUN_08006ce0",
            "FUN_08006cf6",
            "FUN_08006d4a",
            "FUN_08006d66",
            "FUN_08006d72",
            "FUN_08006d8a",
            "FUN_08006d98",
            "FUN_08006dc4",
            "FUN_08006de0",
            "FUN_08006dfe",
            "FUN_08006e1a",
            "FUN_08006e88",
            "FUN_0800733e",
            "FUN_0800738e",
            "FUN_080073d4",
            "FUN_08007402",
            "FUN_08007430",
            "FUN_08007436",
            "FUN_080074c8",
            "FUN_08007520",
            "FUN_08007540",
            "FUN_0800756c",
            "FUN_080076c8",
            "FUN_08007756",
            "FUN_0800778c",
            "FUN_08007854",
            "FUN_08007884",
            "FUN_080078f4",
            "FUN_080079c0",
            "FUN_080079e0",
            "FUN_08007a10",
            "FUN_08007a70",
            "FUN_08007ad0",
            "FUN_08007b70",
            "FUN_08007bc2",
            "FUN_08007bf0",
            "FUN_08007c40",
            "FUN_08007c5e",
            "FUN_08007c7c",
            "FUN_08007d08",
            "FUN_08007da8",
            "FUN_08007e08",
            "FUN_08007e1c",
            "FUN_08007e58",
            "FUN_08007e84",
            "FUN_08007ea4",
            "FUN_08007f54",
            "FUN_08008190",
            "FUN_08008250",
            "FUN_0800826a",
            "FUN_08008286",
            "FUN_080082d0",
            "FUN_080082d4",
            "FUN_0800854c",
            "FUN_0800856c",
            "FUN_08008590",
            "FUN_0800881c",
            "FUN_08008a02",
            "FUN_08008a74",
            "FUN_08008af0",
            "FUN_08008b00",
            "FUN_08008b10",
            "FUN_08008b24",
            "FUN_08008b4c",
            "FUN_08008b60",
            "FUN_08008b74",
            "FUN_08008ba0",
            "FUN_08008bf0",
            "FUN_08008c30",
            "FUN_08008cd8",
            "FUN_08008cdc",
            "FUN_08008e3c",
            "FUN_08008e44",
            "FUN_08008eec",
            "FUN_08009054",
            "FUN_0800919c",
            "FUN_080091fc",
            "FUN_08009204",
            "FUN_08009214",
            "FUN_08009228",
            "FUN_0800923c",
            "FUN_08009250",
            "FUN_08009264",
            "FUN_08009278",
            "FUN_080092c4",
            "FUN_08009318",
            "FUN_08009410",
            "FUN_080094c0",
            "FUN_080095b8",
            "FUN_08009654",
            "FUN_080096e8",
            "FUN_08009798",
            "FUN_0800981c",
            "FUN_080098d0",
            "FUN_08009990",
            "FUN_08009b24",
            "FUN_08009d78",
            "FUN_0800a1bc",
            "FUN_0800a348",
            "FUN_0800a5a0",
            "FUN_0800adf0",
            "FUN_0800af78",
            "FUN_0800b2d4",
            "FUN_0800b2e0",
            "FUN_0800b2e8",
            "FUN_0800b3dc",
            "FUN_0800b3e8",
            "FUN_0800b430",
            "FUN_0800b524"
        ],
        [
            "FUN_08001994",
            "FUN_08005c30",
            "FUN_08006d2e",
            "FUN_08007930",
            "FUN_08008640",
            "FUN_08008894"
        ],
        [
            "FUN_0800618c"
        ]
    ],
    "locked_functions": []
}